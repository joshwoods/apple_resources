WEBVTT

00:00:23.080 --> 00:00:24.430
My name is David O'Rourke.

00:00:24.470 --> 00:00:26.760
I'm the engineering
manager of Open Directory.

00:00:26.760 --> 00:00:30.030
I have to get my little cue here.

00:00:30.320 --> 00:00:32.030
How many people were at
last year's presentation?

00:00:32.030 --> 00:00:33.560
Could you raise your hand?

00:00:33.560 --> 00:00:35.990
How many people actually had a
seat at last year's presentation?

00:00:35.990 --> 00:00:37.530
Very few.

00:00:37.640 --> 00:00:39.630
So they moved us to a bigger room.

00:00:39.730 --> 00:00:42.740
So I want to thank you all for
overflowing last year's presentation.

00:00:42.740 --> 00:00:46.540
Next year I'm going to go
for the pool in the open bar.

00:00:46.540 --> 00:00:47.570
How does that sound?

00:00:48.290 --> 00:00:49.200
David O' Okay.

00:00:49.200 --> 00:00:51.740
Also, I'd like you to all go out in
the hallway and get a friend.

00:00:51.740 --> 00:00:53.820
I'd like to pack this room so
we get in the big one upstairs.

00:00:54.020 --> 00:00:54.180
No.

00:00:54.280 --> 00:00:55.200
Okay.

00:00:55.200 --> 00:00:59.200
I think I would actually be
scared of that many people.

00:00:59.200 --> 00:01:00.400
My name's David O'Rourke.

00:01:00.490 --> 00:01:04.170
We're here to talk about Open Directory,
what it is, what is Directory Services.

00:01:04.260 --> 00:01:06.690
We're going to review
Directory Services for 10.2 for

00:01:06.690 --> 00:01:08.200
those of you who are new this year.

00:01:08.200 --> 00:01:10.660
We're going to talk about our
future plans for Panther and

00:01:10.660 --> 00:01:12.190
then we're going to go into Q&A.

00:01:12.220 --> 00:01:16.200
So, I guess now is as good a
time as any to get into it.

00:01:16.200 --> 00:01:18.540
So, first of all,
Open Direct - last year we introduced

00:01:18.640 --> 00:01:20.370
the Open Directory technology name.

00:01:20.370 --> 00:01:23.180
And what Open Directory is,
is a technology umbrella,

00:01:23.200 --> 00:01:23.200
kind of like QuickTime.

00:01:23.200 --> 00:01:25.430
It covers a lot of
different technologies.

00:01:25.500 --> 00:01:29.070
In our case, it covers the client access
technology and also covers any

00:01:29.070 --> 00:01:32.200
servers that we deliver as part
of the Panther Server product.

00:01:32.360 --> 00:01:35.040
Apple's strategy in the
Open Directory space is to adopt

00:01:35.040 --> 00:01:38.070
and promote industry standard
technologies such as LDAP,

00:01:38.070 --> 00:01:40.600
Kerberos, Sassl,
whatever directory related

00:01:40.600 --> 00:01:42.200
technology fits our purpose.

00:01:42.260 --> 00:01:44.180
We're going to adopt it, embrace it,
and promote it on our platforms.

00:01:44.200 --> 00:01:48.020
So, Open Directory is built
into both Mac OS X desktop

00:01:48.110 --> 00:01:52.200
and the client's built in,
and it's built into Mac OS X server.

00:01:52.200 --> 00:01:55.530
If you buy Mac OS X server and
turn on a directory server,

00:01:55.530 --> 00:01:57.200
you get Open Directory.

00:01:57.200 --> 00:01:59.190
It's been there since 10.0.

00:01:59.200 --> 00:02:01.680
And the good news is,
is everything we do is open

00:02:01.680 --> 00:02:03.190
source as part of Darwin.

00:02:03.200 --> 00:02:05.190
So, no secrets.

00:02:05.200 --> 00:02:07.200
You can review our implementation,
see if it meets your needs,

00:02:07.200 --> 00:02:12.200
see if we're sometimes passing a
password on the wire in the clear.

00:02:12.200 --> 00:02:17.200
But we try to fix bugs like that,
and you can see it in our source code.

00:02:17.240 --> 00:02:21.580
The directory service history,
we started out with Mac OS X 10.0

00:02:21.580 --> 00:02:24.200
having NetInfo and LDAPv2 as a client.

00:02:24.200 --> 00:02:28.160
We then, in 10.1, introduced...

00:02:28.780 --> 00:02:31.360
: We introduced a desktop
server with LDAPv2 support.

00:02:31.360 --> 00:02:35.100
In 10.2, we introduced NetInfo, LDAPv2,
LDAPv3.

00:02:35.100 --> 00:02:37.840
We added NIS and flat file
support or Yellow Pages.

00:02:37.840 --> 00:02:40.600
Is NIS the proper name these
days or is it Yellow Pages?

00:02:40.600 --> 00:02:42.600
NIS, thank you.

00:02:42.730 --> 00:02:46.600
We also introduced service discovery
based on directory services.

00:02:46.600 --> 00:02:48.500
So we have an AppleTalk plugin
for browsing AppleTalk networks.

00:02:48.600 --> 00:02:50.590
We have an SLP plugin.

00:02:50.590 --> 00:02:54.580
We have a rendezvous plugin and we have
a plugin for browsing Windows networks.

00:02:54.620 --> 00:02:58.170
So if you see a Windows server
when you go to connect a server in

00:02:58.170 --> 00:03:02.600
Jaguar or slash network on Panther,
you're using directory services.

00:03:02.810 --> 00:03:03.870
Panther's even better.

00:03:03.870 --> 00:03:07.460
It has all the features of 10.2 and
we're going to go over some of the

00:03:07.460 --> 00:03:09.600
new and exciting features right now.

00:03:11.220 --> 00:03:13.560
First I want to talk about
what Directory Services is.

00:03:13.560 --> 00:03:16.540
This is the client access
portion of the product.

00:03:16.610 --> 00:03:18.250
It's a standard box diagram.

00:03:18.250 --> 00:03:19.690
Engineers like to draw boxes.

00:03:19.700 --> 00:03:22.100
I'm an engineer so I drew some boxes.

00:03:22.200 --> 00:03:25.070
We've got Mac OS X software running
on top of an abstraction API.

00:03:25.130 --> 00:03:31.100
We've got the abstraction API there
in the middle in the blue box.

00:03:31.100 --> 00:03:31.100
Is it blue on your screen?

00:03:31.100 --> 00:03:31.100
Yes it is.

00:03:31.100 --> 00:03:33.000
At the bottom layer we have plugins.

00:03:33.010 --> 00:03:35.780
We have a plugin for NetInfo,
we have a plugin for LDAP,

00:03:35.840 --> 00:03:38.100
we now have a plugin
for Active Directory,

00:03:38.100 --> 00:03:40.890
we have a plugin for BSD files,
and you as a third party

00:03:40.980 --> 00:03:42.100
can develop your own plugin.

00:03:42.100 --> 00:03:45.360
I believe we're still working
with somebody to develop an

00:03:45.360 --> 00:03:49.750
Oracle plugin so that their directory
system can be an Oracle database.

00:03:50.550 --> 00:03:55.310
Directory services in 10.2 included
an LDAPv3 read/write plugin,

00:03:55.430 --> 00:03:57.620
an LDAPv2 read-only plugin.

00:03:57.620 --> 00:03:59.950
It included NetInfo.

00:03:59.950 --> 00:04:03.390
It includes NIS, BSD/SE files.

00:04:03.480 --> 00:04:04.890
It includes service discovery.

00:04:04.900 --> 00:04:08.900
The APIs are documented and
the plugin APIs are documented.

00:04:08.900 --> 00:04:09.940
We have an SDK.

00:04:09.940 --> 00:04:11.900
It includes sample code.

00:04:11.900 --> 00:04:12.900
We have sample plugins.

00:04:12.900 --> 00:04:16.400
We have a stub plugin that you
could adopt and put your code in.

00:04:16.400 --> 00:04:19.830
Or you could start with our own
productized LDAPv3 plugin and gut

00:04:19.830 --> 00:04:21.900
it and use it for your own purposes.

00:04:21.900 --> 00:04:25.060
And the directory services
headers are installed in

00:04:25.060 --> 00:04:29.050
system/library/frameworks/directory-s
ervices/framework.

00:04:31.030 --> 00:04:32.850
How does 10.2 use Directory Services?

00:04:32.860 --> 00:04:34.490
This is a question
we're kind of plumbing.

00:04:34.500 --> 00:04:36.910
If we're doing our job right,
you don't even notice that

00:04:36.960 --> 00:04:38.700
Directory Services is working.

00:04:38.700 --> 00:04:42.030
My management keeps asking me to demo it,
and I say, "Did you make it past login

00:04:42.030 --> 00:04:44.780
window?" And they say,
"Yes." I said, "That's the demo." It's

00:04:44.780 --> 00:04:49.740
a really boring demo,
but if we're doing our jobs right,

00:04:49.780 --> 00:04:51.650
you don't really see
Directory Services because we're

00:04:51.650 --> 00:04:55.400
just feeding config information
to the system behind the scenes.

00:04:55.490 --> 00:04:56.630
But Managed Desktop.

00:04:56.630 --> 00:04:58.660
How many of you use Managed Desktop?

00:04:58.710 --> 00:05:02.510
Managed Desktop sources all of its
information out of Directory Services,

00:05:02.510 --> 00:05:04.740
so that's one key consumer of the data.

00:05:04.740 --> 00:05:06.250
All the security
framework authentication,

00:05:06.280 --> 00:05:08.770
whenever that dialog comes up
and asks you to type a password,

00:05:08.810 --> 00:05:11.270
they ultimately call
Directory Services to

00:05:11.290 --> 00:05:12.740
verify that password.

00:05:12.740 --> 00:05:15.330
And all the legacy tools
have been migrated to PAM,

00:05:15.330 --> 00:05:18.610
so if you have PassWD or some
password authenticating tool

00:05:18.610 --> 00:05:21.240
that's running on the command line,
it calls a PAM module,

00:05:21.240 --> 00:05:25.630
and that PAM module calls either
Security Framework or Directory Services,

00:05:25.630 --> 00:05:28.500
and that authenticates
your legacy UNIX tools.

00:05:28.500 --> 00:05:29.660
And all the Mac OS X Server processes.

00:05:29.720 --> 00:05:32.620
Server processes and administration
tools use directory services.

00:05:34.780 --> 00:05:38.040
Connect to Server,
Command-K in the Finder

00:05:38.040 --> 00:05:39.120
brings up Connect to Server.

00:05:39.120 --> 00:05:43.420
Everything on the left,
all those zones and everything,

00:05:43.420 --> 00:05:45.050
those are all coming from
either an Apple Talk,

00:05:45.140 --> 00:05:47.640
SLP, or Rendezvous plugin when
you click on the zones.

00:05:47.640 --> 00:05:51.400
So all the service discovery in Mac OS X,
slash network,

00:05:51.400 --> 00:05:53.880
how many of you have played with
the new slash networking feature in

00:05:53.880 --> 00:05:55.300
Panther that allows you to browse?

00:05:55.300 --> 00:05:58.780
That's now all sourcing the same
information that what we call NSL,

00:05:58.780 --> 00:06:02.120
or Connect to Server,
was sourcing in 10.2.

00:06:02.680 --> 00:06:06.200
And you can use directory access as
a system administrator to turn off

00:06:06.200 --> 00:06:08.120
the browsing of certain protocols.

00:06:08.120 --> 00:06:10.310
So if you don't want your
customers ever connecting to your

00:06:10.310 --> 00:06:13.220
Apple servers over Apple Talk,
you can turn off their browsing

00:06:13.280 --> 00:06:16.480
by going to directory access,
turn off the Apple Talk browsing plugin,

00:06:16.480 --> 00:06:19.600
and then Apple Talk zones will no
longer show up and connect to server.

00:06:19.600 --> 00:06:21.560
That does not turn off
the Apple Talk protocol,

00:06:21.560 --> 00:06:23.220
it just turns off the browsing portion.

00:06:25.770 --> 00:06:28.720
Another way Mac OS X-2 uses
directory services - this

00:06:28.730 --> 00:06:32.640
is an architecture diagram.

00:06:32.640 --> 00:06:35.560
Next came to us with Next Step and
they had already hooked a lot of the

00:06:35.560 --> 00:06:39.700
BSD routines to extract their directory
access through a process called LookupD.

00:06:39.700 --> 00:06:44.700
And so the system is really - the
system is a bit schizophrenic.

00:06:44.700 --> 00:06:47.910
There's the legacy APIs that access
directory data and there's the new

00:06:47.910 --> 00:06:49.690
APIs that access directory data.

00:06:49.710 --> 00:06:52.670
The way we make both systems
regardless of which API get the same

00:06:52.760 --> 00:06:56.510
data is anything that calls LookupD,
we have a plugin in LookupD that shunts

00:06:56.510 --> 00:06:58.620
the request over to directory services.

00:06:58.700 --> 00:07:00.380
Anybody that's calling
directory services,

00:07:00.380 --> 00:07:02.700
they of course get what
directory services is configured.

00:07:02.700 --> 00:07:05.850
So this means when you configure
directory access and add an

00:07:05.850 --> 00:07:09.090
LDAP plugin to your search node,
you're also configuring what the entire

00:07:09.170 --> 00:07:10.700
system sees on the command line side.

00:07:10.700 --> 00:07:13.700
How it resolves users,
how it resolves groups.

00:07:13.700 --> 00:07:15.700
So this is the real power of the system.

00:07:15.700 --> 00:07:16.900
So even though there's
two different APIs,

00:07:16.900 --> 00:07:17.700
they all work together.

00:07:17.920 --> 00:07:20.970
Even though there's two different APIs,
they always return the same set

00:07:21.030 --> 00:07:22.700
of data because they're linked.

00:07:25.060 --> 00:07:27.320
Mac OS X/2 Server includes two choices.

00:07:27.390 --> 00:07:28.990
This is Jaguar Server.

00:07:29.000 --> 00:07:31.540
I want to emphasize that
we're going over history,

00:07:31.630 --> 00:07:33.200
so not the future.

00:07:33.370 --> 00:07:36.890
X/2 Server included two
choices for a directory server.

00:07:36.900 --> 00:07:40.200
You could deploy NetInfo,
which was always supported.

00:07:40.270 --> 00:07:43.300
That supports Mac OS 10.1 and 10.2.

00:07:43.370 --> 00:07:46.370
We added, for the first time,
an LDAP v3 plugin,

00:07:46.370 --> 00:07:49.490
but it uses the NetInfo
database for its backend.

00:07:49.490 --> 00:07:51.420
So when you create a
record through NetInfo,

00:07:51.420 --> 00:07:53.000
it also showed up on the LDAP side.

00:07:53.000 --> 00:07:54.960
Luke Howard did that
work for us from Paddle.

00:07:54.960 --> 00:07:56.420
He's in the audience today.

00:07:56.500 --> 00:07:58.000
I'd like to thank him for that.

00:07:58.000 --> 00:08:01.680
It's really kind of cool because you can
source your data from one database and

00:08:01.680 --> 00:08:04.970
serve it up over the NetInfo protocol,
serve it up over LDAP.

00:08:05.010 --> 00:08:06.970
It supports the Mac OS X/2 clients.

00:08:06.970 --> 00:08:09.600
And we introduced the
Open Directory password server,

00:08:09.600 --> 00:08:12.390
which is the SASSL-based network
authentication for legacy

00:08:12.400 --> 00:08:14.000
authentication protocols.

00:08:14.060 --> 00:08:17.260
I highly recommend that you go
back in time and go to yesterday's

00:08:17.260 --> 00:08:21.000
auth session because we talked in
detail about the password server.

00:08:21.000 --> 00:08:22.130
You can go back in time.

00:08:22.170 --> 00:08:24.990
I believe we have these
sessions available on DVD later.

00:08:25.100 --> 00:08:25.800
Is that correct?

00:08:25.800 --> 00:08:27.000
Can anyone confirm that?

00:08:27.000 --> 00:08:29.690
So if you didn't catch the auth
session and want more details,

00:08:29.690 --> 00:08:33.000
work with Apple Developer Relations to
get this year's presentation.

00:08:34.760 --> 00:08:37.380
So on 10.2 we made a lot of
progress in the directory space.

00:08:37.500 --> 00:08:40.860
We added NL.v3 server,
we added service discovery,

00:08:40.860 --> 00:08:44.020
and we introduced new authentication
methods with the password server and the

00:08:44.070 --> 00:08:49.150
authentication authority and that's all
the product that we're all using today.

00:08:49.730 --> 00:08:52.050
What I want to talk about now
is what we're planning to do for

00:08:52.050 --> 00:08:53.790
directory services this year.

00:08:53.790 --> 00:08:57.290
And so we're going to move into
directory services for Panther.

00:08:57.390 --> 00:08:59.340
The first thing we're doing
is we're substantially

00:08:59.350 --> 00:09:00.770
enhancing the LDAPv3 plugin.

00:09:00.900 --> 00:09:02.520
I'll get into the details of that.

00:09:02.610 --> 00:09:07.100
We're substantially enhancing the
Open Directory password server.

00:09:07.180 --> 00:09:10.090
We combined the NIS and flat file plugin.

00:09:10.100 --> 00:09:12.030
In Jaguar they were two separate plugins.

00:09:12.110 --> 00:09:13.890
What we've done in Panther is
we've combined them into the

00:09:13.890 --> 00:09:17.200
same source set and just taught
them to share information.

00:09:17.300 --> 00:09:19.690
We're getting rid of the LDAPv2 plugin.

00:09:19.780 --> 00:09:23.830
We're enhancing support for
Active Directory and we're making

00:09:23.880 --> 00:09:26.390
changes to local authentication.

00:09:27.210 --> 00:09:30.260
In addition, we're enhancing the
SMB Windows Network plugin.

00:09:30.260 --> 00:09:33.100
We can now browse off of a local subnet.

00:09:33.100 --> 00:09:37.110
Slash network is now based on NSL,
which was the Mac OS 9 network

00:09:37.150 --> 00:09:39.590
service location protocol
slash directory services.

00:09:39.600 --> 00:09:42.370
We've added man pages for directory
services and we're going to be

00:09:42.370 --> 00:09:45.580
demoing some new command line
tools later in this presentation.

00:09:45.610 --> 00:09:48.100
And we've made some minor
changes for plugin developers.

00:09:48.180 --> 00:09:51.580
So if you're developing a plugin,
there's some gotchas and some heads up

00:09:51.620 --> 00:09:53.600
that we need to keep you informed of.

00:09:53.600 --> 00:09:55.600
LDAP v3 client enhancements.

00:09:55.600 --> 00:09:57.570
This is the meat of the work
we're doing for Panther.

00:09:57.600 --> 00:10:00.520
In 10.2,
LDAP v3 was already very robust and could

00:10:00.520 --> 00:10:02.600
talk to a lot of different LDAP servers.

00:10:02.600 --> 00:10:06.100
We supported DHCP LDAP discovery
through option 95.

00:10:06.100 --> 00:10:09.670
We supported storing our configurations
or our mappings on the LDAP server

00:10:09.680 --> 00:10:12.930
itself so you didn't have to visit
each machine to reconfigure it.

00:10:13.100 --> 00:10:16.050
We integrated support for the
Open Directory password server so that

00:10:16.050 --> 00:10:19.420
LDAP would use the password server
when the authentication authority

00:10:19.420 --> 00:10:21.090
and the user record told us to.

00:10:21.100 --> 00:10:25.600
So what we're doing for
- For v3 and Panthers,

00:10:25.600 --> 00:10:27.100
we're adding replication support.

00:10:27.100 --> 00:10:32.100
So you can deploy multiple LDAP servers
and our v3 plugin will fail over.

00:10:32.100 --> 00:10:35.300
There will be client side
awareness of LDAP replicas and

00:10:35.320 --> 00:10:38.750
if you're using the DS APIs,
the failover is completely transparent

00:10:38.850 --> 00:10:40.600
to you so you don't have to do anything.

00:10:40.600 --> 00:10:42.920
You just call Open Directory,
say "Open DuraNode,

00:10:42.920 --> 00:10:46.060
I want to talk to an LDAP server."
That LDAP server goes away,

00:10:46.100 --> 00:10:49.090
we have to find a replica,
your code keeps churning along,

00:10:49.090 --> 00:10:52.530
it doesn't even know that we've
switched network connections.

00:10:53.020 --> 00:10:56.670
LDAP V3 client replica
picking is quite thorough.

00:10:56.970 --> 00:11:00.560
We'll automatically detect
and use LDAP replicas.

00:11:00.560 --> 00:11:04.460
We will use any or all of three
replica discovery mechanisms.

00:11:04.460 --> 00:11:06.980
There's an existing standard
for LDAP called Alt Servers,

00:11:06.980 --> 00:11:09.510
which is stored in the
root of the LDAP server.

00:11:09.640 --> 00:11:13.130
If we find that information,
we will use the LDAP replicas that

00:11:13.130 --> 00:11:15.020
are stored in that information.

00:11:15.020 --> 00:11:17.070
We are adding a new record
to the LDAP system that we

00:11:17.070 --> 00:11:18.440
call a configuration record.

00:11:18.520 --> 00:11:21.770
That configuration record is no
harder than a list of IP addresses.

00:11:21.780 --> 00:11:22.970
It has to be well named.

00:11:22.970 --> 00:11:25.700
There will be documentation
and server admin.

00:11:25.700 --> 00:11:29.130
But if that configuration is found and
lists IP addresses for us to contact,

00:11:29.250 --> 00:11:30.330
we will use that record.

00:11:30.390 --> 00:11:32.880
So you can actually put the
replication table in the

00:11:32.880 --> 00:11:35.060
LDAP server and we'll use it.

00:11:35.060 --> 00:11:38.920
And there is an LDAP replication
scheme for DNS service records.

00:11:38.940 --> 00:11:41.580
So if you've configured DNS to
list multiple LDAP servers,

00:11:41.580 --> 00:11:43.600
we'll use DNS service records.

00:11:43.630 --> 00:11:47.660
All of these methods require
LDAP server connectivity at least once.

00:11:47.660 --> 00:11:49.000
We can't come up.

00:11:49.000 --> 00:11:51.490
So if you call us an IP address as
the LDAP server that you want us to

00:11:51.580 --> 00:11:54.940
talk to and that isn't even reachable,
we can't discover the replicas.

00:11:54.940 --> 00:11:58.140
So we require connectivity to the
LDAP server at least once to harvest

00:11:58.140 --> 00:12:00.140
all of these sources of information.

00:12:00.240 --> 00:12:02.520
But after that,
you can move the LDAP servers

00:12:02.600 --> 00:12:03.910
around willy-nilly.

00:12:04.050 --> 00:12:05.710
And as long as one is
still up and running,

00:12:05.720 --> 00:12:09.450
we'll contact it and learn
about the new information.

00:12:09.460 --> 00:12:12.820
We put the failover support in the
client because now Mac OS X server

00:12:12.870 --> 00:12:14.660
LDAP supports replication.

00:12:14.700 --> 00:12:16.240
And clearly we're going to
work with that very well.

00:12:16.240 --> 00:12:18.560
So now that we have a
replicated LDAP server,

00:12:18.560 --> 00:12:18.560
we needed a replication.

00:12:18.560 --> 00:12:22.880
We needed a replication-aware client,
and we've done that in Panther.

00:12:22.880 --> 00:12:25.210
Replica failover resolution
is done in parallel.

00:12:25.210 --> 00:12:29.750
We will not serially try 20 LDAP servers
at two minutes a shot and make the user

00:12:29.860 --> 00:12:32.120
wait 40 minutes to find the replica.

00:12:32.120 --> 00:12:34.110
We try to do the discovery in parallel.

00:12:34.260 --> 00:12:37.300
We also try to do it in such a
manner that we don't spam the

00:12:37.300 --> 00:12:39.000
network on every single open attempt.

00:12:39.000 --> 00:12:40.840
We try to gradually build.

00:12:40.840 --> 00:12:44.680
We get more and more aggressive over time
when the LDAP servers are nonresponsive.

00:12:44.680 --> 00:12:47.210
So we won't bring up unnecessary
network connections if the LDAP server

00:12:47.210 --> 00:12:49.110
is just a little slow to respond.

00:12:49.240 --> 00:12:51.720
But if it's too slow to respond,
we'll start looking for replicas and

00:12:51.720 --> 00:12:54.660
that will cause more networking traffic.

00:12:55.780 --> 00:12:58.770
We've also enhanced the password server.

00:12:58.820 --> 00:13:01.420
New authentication methods - we
have some authentication methods

00:13:01.420 --> 00:13:05.290
to support the new VPN server,
and we support PDC authentication.

00:13:05.310 --> 00:13:08.410
The PDC needs certain
authentication methods to be able

00:13:08.420 --> 00:13:12.460
to authenticate Windows clients,
so we've had to add authentication

00:13:12.460 --> 00:13:15.190
methods to the password
server to support that.

00:13:15.270 --> 00:13:17.110
We've added new password policies.

00:13:17.210 --> 00:13:19.100
We have global and per user policies.

00:13:19.100 --> 00:13:22.160
I went over these in detail
in the authentication session.

00:13:22.270 --> 00:13:23.640
And we have secure replication.

00:13:23.640 --> 00:13:25.500
We have true multi-master replication.

00:13:25.500 --> 00:13:28.700
Every single password server replica
can accept a password change.

00:13:28.800 --> 00:13:30.890
We have client-side failover,
so if one password

00:13:30.890 --> 00:13:33.690
server stops responding,
we use other password servers.

00:13:33.890 --> 00:13:37.200
There are more details in session 607,
which was yesterday's session.

00:13:37.200 --> 00:13:41.770
But it is secure,
and it is multi-master replication.

00:13:42.520 --> 00:13:45.820
Here's a screenshot of
the global policies.

00:13:45.820 --> 00:13:49.960
This is a new HI for Panther,
so we support a number of policies.

00:13:49.960 --> 00:13:52.750
I won't go into them in detail right now,
but I'll leave it up there

00:13:52.750 --> 00:13:55.390
just for a bit so you can look
for your favorite feature.

00:13:55.390 --> 00:14:00.700
I have heard dictionary
is not here though,

00:14:00.700 --> 00:14:00.700
so everybody wants dictionary and
we're going to look into that.

00:14:02.460 --> 00:14:06.900
The authentication methods that the
password server supports are MD5 digest,

00:14:06.900 --> 00:14:08.330
which is used by default.

00:14:08.330 --> 00:14:10.180
If you don't specify an
authentication method,

00:14:10.220 --> 00:14:11.400
this is what login window uses.

00:14:11.400 --> 00:14:15.400
And if any DS API client requests
clear text authentication,

00:14:15.400 --> 00:14:19.400
we actually turn around and do an
MD5 authentication behind the scenes.

00:14:19.520 --> 00:14:23.400
Kram MD5 is typically
used by IMAP and SMTP.

00:14:23.400 --> 00:14:27.400
We have NT and LAN Manager that's
used by SMB file sharing.

00:14:27.400 --> 00:14:31.300
We support APOP,
which is used by the POP3 mail protocol.

00:14:31.300 --> 00:14:35.340
We support WebDAV Digest
for WebDAV Apache modules.

00:14:35.400 --> 00:14:39.370
The new authentication method
we've added is MSCHAP2,

00:14:39.370 --> 00:14:42.390
and that supports the VPN technologies.

00:14:42.400 --> 00:14:46.390
We are retiring two-way random
in the Panther timeframe.

00:14:46.400 --> 00:14:48.320
Jaguar supports it, Panther won't.

00:14:48.420 --> 00:14:49.400
No.

00:14:49.400 --> 00:14:51.400
Not a lot of AFP clients
are still using it.

00:14:51.400 --> 00:14:54.390
If you are still running on an
AFP client that requires two-way random,

00:14:54.400 --> 00:14:58.310
I think we have AFP clients that are
qualified all the way back to 8.1.

00:14:58.410 --> 00:14:59.400
Leland?

00:14:59.400 --> 00:15:00.510
Yes.

00:15:01.180 --> 00:15:04.890
8.1 that do DHX,
which is the last authentication

00:15:04.890 --> 00:15:05.980
method that we support.

00:15:05.980 --> 00:15:09.540
So all the way back to Mac OS 8,
you have an AFP client that

00:15:09.580 --> 00:15:12.380
doesn't need to a random,
so we're getting rid of that.

00:15:12.380 --> 00:15:14.250
The authentication authority matrix.

00:15:14.250 --> 00:15:17.130
The authentication authority
was introduced in Jaguar.

00:15:17.130 --> 00:15:20.900
It's an attribute in the user record
that indicates to Jaguar how the

00:15:20.930 --> 00:15:24.490
user record should be authenticated
if an authentication is attempted.

00:15:24.650 --> 00:15:25.810
We had several values.

00:15:25.810 --> 00:15:28.540
We had basic last year,
and that basically indicates

00:15:28.540 --> 00:15:29.850
the user's crypt-based.

00:15:29.850 --> 00:15:32.850
We introduced the Apple password
server authentication authority.

00:15:32.920 --> 00:15:35.130
This indicates that the
user's password server based,

00:15:35.190 --> 00:15:37.850
and in that authority is all the
information we need to know to contact

00:15:37.930 --> 00:15:40.440
the password server and verify that user.

00:15:41.930 --> 00:15:43.610
This year we're introducing ShadowHash.

00:15:43.700 --> 00:15:46.710
Local users no longer have a
readable crypt password on Panther.

00:15:46.800 --> 00:15:50.520
For those of you who go rummaging around
with niDump on your Panther machine

00:15:50.520 --> 00:15:56.320
looking for your crypt password,
it isn't there anymore.

00:15:56.320 --> 00:15:56.320
So ShadowHash is indicated.

00:15:58.200 --> 00:16:01.150
ShadowHash indicates that this
user record is ShadowHash based

00:16:01.150 --> 00:16:03.960
instead of local crypt based.

00:16:03.960 --> 00:16:06.060
And we're introducing the
Kerberos auth authority.

00:16:06.060 --> 00:16:08.590
How many people haven't heard we're
making a big push around Kerberos?

00:16:08.600 --> 00:16:10.260
Okay.

00:16:10.260 --> 00:16:13.160
So we're going to indicate that
users are Kerberos based by actually

00:16:13.160 --> 00:16:16.100
putting a Kerberos authentication
authority in the user record.

00:16:16.100 --> 00:16:20.490
And that helps us know that we should
attempt to do Kerberos authentication.

00:16:20.960 --> 00:16:22.440
So local authentication changes.

00:16:22.440 --> 00:16:23.040
Crypt is dead.

00:16:23.160 --> 00:16:25.800
The default local authentication
is stored in a shadow

00:16:25.800 --> 00:16:27.060
file for all local users.

00:16:27.060 --> 00:16:29.710
Crypt is still supported,
but none of the Mac OS X tools

00:16:29.780 --> 00:16:31.250
will create a crypt user.

00:16:31.260 --> 00:16:34.870
If you want to do it yourself
through DS APIs or legacy tools,

00:16:34.870 --> 00:16:35.730
it still works.

00:16:35.750 --> 00:16:37.090
It will still function.

00:16:37.270 --> 00:16:39.480
The OS will still verify
the user's password,

00:16:39.500 --> 00:16:42.560
but none of our administration
tools will create a crypt user.

00:16:43.920 --> 00:16:47.180
Um, your application should not
be relying on crypt passwords.

00:16:47.180 --> 00:16:51.910
Um, Panther will break any application
that has not adopted security framework

00:16:51.910 --> 00:16:55.820
directory services or PAM or some other
password verification abstraction API.

00:16:55.820 --> 00:16:58.100
This is not a bug in
the operating system.

00:16:58.100 --> 00:17:00.830
In order to make the OS more
secure and move forward,

00:17:00.840 --> 00:17:02.240
we have to break this.

00:17:02.240 --> 00:17:06.390
So if you have an application that
is doing authentication and you're

00:17:06.390 --> 00:17:10.420
calling getPWNAM or some other API that
returns a crypt password and you're

00:17:10.430 --> 00:17:13.090
relying on that to behave in Panther,
it will break.

00:17:13.800 --> 00:17:17.350
And we're not going to fix it
because it's a security problem.

00:17:17.360 --> 00:17:20.700
So we need you to adopt a
password verification abstraction.

00:17:20.700 --> 00:17:23.440
There are three major
abstractions you can adopt.

00:17:23.480 --> 00:17:26.100
You can adopt PAM,
which is a cross-platform,

00:17:26.100 --> 00:17:27.970
pluggable authentication
method for Linux.

00:17:28.020 --> 00:17:30.660
You can adopt the security
framework to do your password

00:17:30.660 --> 00:17:32.150
verification in your application.

00:17:32.180 --> 00:17:35.210
If you need to do authentication,
you should probably be seriously looking

00:17:35.220 --> 00:17:38.900
at the authorization framework because
that's probably the more appropriate

00:17:38.900 --> 00:17:40.680
way for a GUI application to go forward.

00:17:40.680 --> 00:17:44.030
Or you can use the down-and-dirty
directory service API and do

00:17:44.070 --> 00:17:45.450
the authentication yourself.

00:17:45.460 --> 00:17:48.140
I want to emphasize,
if your application is not

00:17:48.140 --> 00:17:51.200
using one of these APIs,
it will break when running on Panther.

00:17:51.200 --> 00:17:53.520
You will not be able to
authenticate your user records.

00:17:53.550 --> 00:17:56.690
This is if you're a server,
a client process, whatever.

00:17:56.740 --> 00:18:00.590
And just for emphasis and with color...

00:18:02.460 --> 00:18:05.210
So, we've gotten rid of Crypt.

00:18:05.360 --> 00:18:08.040
Sorry about breaking your app,
but it's a necessary evil.

00:18:09.910 --> 00:18:13.610
So here's a quick timeline of
password server histories and future.

00:18:13.690 --> 00:18:15.340
We had Crypt in 10.0.

00:18:15.340 --> 00:18:18.620
We supported Crypt and LDAP/Bind in 10.1.

00:18:18.620 --> 00:18:22.730
We support Crypt, LDAP/Bind, Kerberos,
the DS APIs, password server PAM and

00:18:22.730 --> 00:18:24.830
security framework in 10.2.

00:18:24.880 --> 00:18:26.990
We've gotten rid of
Crypt support in Panther.

00:18:27.140 --> 00:18:31.020
We now support LDAP/Bind, Kerberos,
DS API, password server PAM and

00:18:31.020 --> 00:18:31.790
security framework.

00:18:31.790 --> 00:18:34.030
And moving out into the future,
Kerberos is going to - its font is

00:18:34.120 --> 00:18:37.760
going to get bigger and it's going
to get a more impressive color.

00:18:38.220 --> 00:18:40.000
So, authentication long-term.

00:18:40.000 --> 00:18:42.080
Apple's investing heavily in Kerberos.

00:18:42.120 --> 00:18:44.360
This means if we're investing
heavily in Kerberos,

00:18:44.440 --> 00:18:46.740
so should you,
either as a customer or as a developer.

00:18:46.820 --> 00:18:50.230
We are aggressively,
aggressively migrating all of our

00:18:50.230 --> 00:18:52.080
networking products to be Kerberos-based.

00:18:52.080 --> 00:18:54.950
If there's a favorite protocol of
yours that does authentication,

00:18:54.950 --> 00:18:57.060
and we ship a client
and we ship a server,

00:18:57.060 --> 00:18:58.780
we're probably going to Kerberize it.

00:18:58.820 --> 00:19:00.740
We will ship the MIT KDC.

00:19:00.870 --> 00:19:03.580
We already shipped the
MIT Kerberos client,

00:19:03.580 --> 00:19:07.500
and sessions 607 and 108 are must-attends
for any network service people.

00:19:08.100 --> 00:19:11.910
108 is the Kerberos session done
by Marshall Vail and his team.

00:19:11.920 --> 00:19:15.830
All Kerberos, all the time,
is in Apple's future and yours.

00:19:15.840 --> 00:19:17.340
So, get used to it.

00:19:17.570 --> 00:19:19.340
Plan for next year's presentation.

00:19:21.400 --> 00:19:23.840
We combine the NIS and flat file plugin.

00:19:23.870 --> 00:19:26.330
Mac OS 10.2.5 added an NIS plugin.

00:19:26.400 --> 00:19:29.840
Mac OS 10.2 supports /etc/config files.

00:19:29.840 --> 00:19:32.540
Panther's implementation
combines the NIS flat file

00:19:32.540 --> 00:19:35.640
support into a single code base.

00:19:35.640 --> 00:19:37.800
And now there's a
unified configuration HI.

00:19:37.800 --> 00:19:40.220
So it's really easy to configure this.

00:19:40.220 --> 00:19:42.060
This is the configuration HI.

00:19:42.060 --> 00:19:44.870
The BSD local doesn't require
any configuration because we know

00:19:44.870 --> 00:19:46.100
where all the local files are.

00:19:46.120 --> 00:19:48.160
So that's just kind of
there for documentation.

00:19:48.160 --> 00:19:50.950
And then the lower half of the
configuration sheet is the domain

00:19:50.950 --> 00:19:54.720
name of your NIS server or list
of alternative NIS servers.

00:19:54.770 --> 00:19:57.290
And if you go to directory access,
click on the NIS plugin.

00:19:57.290 --> 00:20:00.350
This is the configuration
HI you're going to see.

00:20:00.410 --> 00:20:01.800
LDAPv2 is being retired.

00:20:01.930 --> 00:20:04.360
The LDAPv3 plugin has
all the LDAPv2 features.

00:20:04.360 --> 00:20:06.940
LDAPv3 is more robust
and has more features.

00:20:06.940 --> 00:20:11.690
LDAPv2 configurations will
automatically be migrated when you

00:20:11.790 --> 00:20:14.050
upgrade to Panther for the first time.

00:20:14.170 --> 00:20:17.280
But - and so we're working to
make that transition seamless.

00:20:17.420 --> 00:20:20.310
But there's no reason for
customers to continue to use v2.

00:20:20.400 --> 00:20:22.680
So you could move to
LDAPv3 today on Jaguar.

00:20:22.680 --> 00:20:24.880
You don't need to continue using v2.

00:20:24.880 --> 00:20:27.650
So you can move ahead of us or you
can wait for Panther to migrate

00:20:27.650 --> 00:20:29.080
your configuration file for you.

00:20:29.080 --> 00:20:31.250
But either way,
the LDAPv2 plugin is going away.

00:20:33.200 --> 00:20:38.400
We are providing an
Active Directory plugin.

00:20:38.400 --> 00:20:41.180
This plugin is a native
client of LDAP and Kerberos.

00:20:41.180 --> 00:20:44.450
We're holding Microsoft to their word
that Active Directory is nothing more

00:20:44.460 --> 00:20:46.100
than an LDAP and Kerberos server.

00:20:46.100 --> 00:20:49.870
So we're holding them to that and we use
nothing but Open LDAP and the Kerberos

00:20:49.890 --> 00:20:52.030
APIs to interact with Active Directory.

00:20:52.100 --> 00:20:55.100
We don't use any proprietary RPCs.

00:20:55.230 --> 00:20:59.100
No schema modifications are
required to use this plugin.

00:20:59.290 --> 00:21:03.100
The plugin generates any
missing Mac OS X attributes.

00:21:03.100 --> 00:21:05.060
So we generate UIDs,
we generate home locs,

00:21:05.110 --> 00:21:07.100
we generate all the missing
Mac OS X attributes.

00:21:07.100 --> 00:21:09.760
We can't generate managed desktop data.

00:21:09.830 --> 00:21:12.970
I can't fabricate doc
preferences out of thin air.

00:21:13.090 --> 00:21:19.100
So really this is a baseline level of
compatibility with Active Directory.

00:21:19.100 --> 00:21:20.670
If you just want users
to be able to log on,

00:21:20.670 --> 00:21:22.450
get their name and password
and stuff like that,

00:21:22.510 --> 00:21:24.100
the AD plugin is an excellent thing.

00:21:24.100 --> 00:21:28.010
If you want to actually use some
of the unique features of Mac OS X,

00:21:28.020 --> 00:21:32.100
you have to modify the AD schema
and add the information we need.

00:21:32.100 --> 00:21:34.970
But that's above and beyond
the baseline feature set.

00:21:35.160 --> 00:21:38.100
So the Active Directory plugin
supports all the AD features,

00:21:38.270 --> 00:21:41.850
supports the baseline AD schema,
and still supports our extensions

00:21:41.850 --> 00:21:44.650
if they're present so that
we can get additional feature

00:21:44.690 --> 00:21:46.100
set out of the AD plugin.

00:21:46.100 --> 00:21:50.440
It supports domain controllers,
authentication policies, replication.

00:21:50.440 --> 00:21:51.940
All the features are there.

00:21:52.210 --> 00:21:53.100
Eric Clements has done
the AD plugin for us.

00:21:53.100 --> 00:21:56.100
He's done a fantastic job.

00:21:56.100 --> 00:21:59.100
And we look forward to your
feedback on the product.

00:21:59.150 --> 00:22:01.800
If Mac OS X data schema is present,
this AD plugin will

00:22:01.800 --> 00:22:03.090
work with that as well.

00:22:05.520 --> 00:22:06.700
This is the configuration.

00:22:06.700 --> 00:22:08.510
I don't think we could
have made it much simpler.

00:22:08.600 --> 00:22:11.360
You don't need the advanced
options most of the time.

00:22:11.450 --> 00:22:15.400
You enter the forest, the domain,
you enter a computer ID, you hit bind.

00:22:15.500 --> 00:22:17.400
We create a computer
record in the AD system.

00:22:17.400 --> 00:22:20.400
We use that computer record to bind
to the Active Directory system.

00:22:20.400 --> 00:22:24.340
You then go to directory access and
add the AD plugin to the search policy.

00:22:24.420 --> 00:22:27.400
You log out to logon window and
you can log on as an AD user.

00:22:27.450 --> 00:22:28.400
That's it.

00:22:28.400 --> 00:22:31.640
We do automatic
multi-domain authentication.

00:22:31.640 --> 00:22:34.640
You can force us to use
a particular server.

00:22:34.640 --> 00:22:37.390
You can force us to use a unique
ID attribute that's present.

00:22:37.390 --> 00:22:42.400
You can cache the last user
login for network disconnect.

00:22:42.400 --> 00:22:45.360
So when your users go home and they
aren't connected to an AD system,

00:22:45.370 --> 00:22:48.460
they can still log on to their
PowerBook with the same name and password

00:22:48.460 --> 00:22:50.400
they use for their network accounts.

00:22:50.710 --> 00:22:52.880
This feature...

00:22:55.110 --> 00:23:00.860
will be covered more at the mobile
managed desktop session later today and

00:23:00.860 --> 00:23:03.540
is for any directory services plugin.

00:23:03.670 --> 00:23:06.370
So if you have an LDAP user,
if you have a crypt user

00:23:06.370 --> 00:23:09.800
or you have an NIS user,
we now support offline caching of

00:23:09.820 --> 00:23:11.670
local - of network user records.

00:23:11.820 --> 00:23:17.880
And you can set up a number of groups
for the AD plugin to administer -

00:23:17.920 --> 00:23:19.610
which AD user should be considered
local administrators on this system.

00:23:20.420 --> 00:23:22.740
So, we have service discovery in Panther.

00:23:22.740 --> 00:23:24.440
We still have AppleTalk,
we still have SLP,

00:23:24.440 --> 00:23:27.040
we still have Rendezvous,
and we still have SMB.

00:23:27.040 --> 00:23:29.610
We have rewritten the
SMB plugin from scratch.

00:23:29.620 --> 00:23:34.230
It has the same functionality as Jaguar,
but we can now browse off of subnets.

00:23:34.340 --> 00:23:36.370
That's the major feature.

00:23:36.370 --> 00:23:38.850
We still have Rendezvous, AppleTalk,
and SLP.

00:23:38.920 --> 00:23:41.550
SLP will be retired in
a future OS release.

00:23:41.570 --> 00:23:45.000
I don't know when, maybe next year,
maybe the year after.

00:23:45.150 --> 00:23:48.840
It will at least be made an
optional install in a future OS.

00:23:48.840 --> 00:23:51.530
So, if you have any applications
that are relying on SLP,

00:23:51.530 --> 00:23:54.670
I highly encourage you to move
on to Rendezvous because Apple's

00:23:54.670 --> 00:23:57.990
going to start deprecating this
service over the next few years.

00:23:59.750 --> 00:24:02.690
We have some command
line tools and man pages.

00:24:02.730 --> 00:24:05.160
We now have man pages
for directory services.

00:24:05.160 --> 00:24:07.140
We have a suite of tools
for directory services.

00:24:07.140 --> 00:24:11.160
We have DSCL, which stands for
Directory Services Command Line.

00:24:11.160 --> 00:24:14.130
We have the PW Policy tool,
which lets you, from the command line,

00:24:14.130 --> 00:24:16.530
set password policies
on the password server.

00:24:16.630 --> 00:24:18.540
PassWD now uses directory services.

00:24:18.540 --> 00:24:20.270
We have DSPerfMonitor
and we have DSError,

00:24:20.270 --> 00:24:24.440
which will convert the numeric
error codes to a display string.

00:24:24.440 --> 00:24:25.500
We have API profiling.

00:24:25.500 --> 00:24:27.800
We're going to demo that later.

00:24:27.800 --> 00:24:30.070
And we have server tools and
Work Group Manager now includes a

00:24:30.070 --> 00:24:31.480
new feature called the Inspector.

00:24:31.480 --> 00:24:33.070
How many of you are used to ResEdit?

00:24:33.080 --> 00:24:35.260
Remember ResEdit from Mac OS 9 days?

00:24:35.260 --> 00:24:37.320
Inspector is ResEdit
for directory services.

00:24:37.340 --> 00:24:38.320
It's a raw editor.

00:24:38.330 --> 00:24:40.720
You can really shoot
yourself in the foot.

00:24:40.720 --> 00:24:43.180
If you want to have a really good time,
I really recommend you

00:24:43.180 --> 00:24:45.490
go into the Inspector,
you mess with your home loc,

00:24:45.490 --> 00:24:48.460
you change the user's auth authority,
and paste in a random string

00:24:48.460 --> 00:24:49.580
into the grip password.

00:24:49.780 --> 00:24:53.900
You'll just have a great time with that.

00:24:53.900 --> 00:24:56.550
So the Inspector is a new feature
and we think it's quite useful.

00:24:56.550 --> 00:25:00.740
We already use it internally
to debug our GUIs.

00:25:00.740 --> 00:25:03.700
So what I'd like to do at this time
is invite my coworker Jason Townsend

00:25:03.700 --> 00:25:06.810
up on stage and he's going to
give you some really cool demos.

00:25:06.880 --> 00:25:07.010
Thank you.

00:25:12.820 --> 00:25:14.400
Thanks, Dave.

00:25:14.570 --> 00:25:19.840
So I'd like to go over to demo machine
number two and show you some of the

00:25:19.840 --> 00:25:23.790
stuff that we've added in Panther.

00:25:23.820 --> 00:25:26.870
Can we switch to demo two?

00:25:27.880 --> 00:25:29.810
All right,
and I'm going to be looking at what

00:25:29.810 --> 00:25:35.540
we've done from the command line side.

00:25:35.650 --> 00:25:39.740
You heard Dave mention that we've
added some new command line tools.

00:25:39.740 --> 00:25:41.370
One of those is called DSCL.

00:25:41.370 --> 00:25:43.540
And if any of you are
familiar with NetInfo,

00:25:43.540 --> 00:25:45.860
you may have used Nickel before.

00:25:45.920 --> 00:25:49.610
DSCL is kind of like Nickel,
except that it uses directory services.

00:25:49.650 --> 00:25:53.580
So I can just say DSCL.

00:25:53.740 --> 00:25:56.710
Local Hosts,
and I have an interactive prompt

00:25:56.820 --> 00:26:01.090
that I can use to do a wide variety
of directory service operations.

00:26:01.160 --> 00:26:04.220
So at the top level I can see
all the plugins that I have.

00:26:04.220 --> 00:26:08.770
For example,
I can go to NetInfo for the local domain,

00:26:08.770 --> 00:26:13.140
and I can see various
record types are there.

00:26:13.140 --> 00:26:14.800
Let's take a look at my users.

00:26:15.240 --> 00:26:17.640
Another thing is we have
tab completion in here,

00:26:17.640 --> 00:26:21.270
which Nickel doesn't have,
so any of you who use

00:26:21.270 --> 00:26:23.720
this will appreciate that.

00:26:23.720 --> 00:26:26.320
And I'll go ahead and look
at the user I'm logged in as.

00:26:26.320 --> 00:26:28.250
I can just read that record.

00:26:28.590 --> 00:26:32.300
And you'll notice where the
password attribute used to be,

00:26:32.340 --> 00:26:34.260
there's just eight stars.

00:26:34.260 --> 00:26:37.370
And we have the shadow
hash auth authority.

00:26:37.400 --> 00:26:39.900
So there is no readable CRIT password.

00:26:41.370 --> 00:26:45.800
All right, so, and I can use,
in addition to reading data with the SCL,

00:26:45.800 --> 00:26:47.940
I can also make changes.

00:26:48.020 --> 00:26:51.860
So, for example,
I could change my authentication hint.

00:26:51.860 --> 00:26:53.970
I could say,

00:26:56.830 --> 00:27:00.550
Change that to the usual.

00:27:00.560 --> 00:27:04.040
And oh, okay,
I forgot to authenticate first.

00:27:04.110 --> 00:27:08.920
So you can also authenticate
as your administrator.

00:27:10.180 --> 00:27:14.900
And then I have history as well,
so I can replay those commands.

00:27:14.900 --> 00:27:18.970
And now if I reread that record,
you can see that I've changed

00:27:19.080 --> 00:27:21.170
the authentication hint.

00:27:22.290 --> 00:27:25.580
So we've also got a man page for DSCL.

00:27:25.580 --> 00:27:29.660
It talks about all the things you can do.

00:27:29.660 --> 00:27:31.020
And there's a lot of stuff there.

00:27:31.160 --> 00:27:35.750
We've also added the man
page for directory service.

00:27:36.890 --> 00:27:40.630
So we should have, you know,
any of the command line tools that we've

00:27:40.630 --> 00:27:44.240
got there are going to be going to have
man pages you can look at on the system

00:27:44.270 --> 00:27:46.970
to figure out what you can do with them.

00:27:47.660 --> 00:27:51.940
Another feature I'd like to show
you is called the DS API logging.

00:27:51.940 --> 00:27:55.400
This is something that
we had in Mac OS X too,

00:27:55.400 --> 00:27:58.480
but we've made it a little
bit better in Panther.

00:27:58.550 --> 00:28:00.700
And if you haven't used it
before and you're doing any

00:28:00.700 --> 00:28:04.580
work with Directory Services,
either developing a plugin or writing

00:28:04.580 --> 00:28:07.070
an app that's using Directory Services,
you're definitely going

00:28:07.170 --> 00:28:08.190
to want to check this out.

00:28:08.320 --> 00:28:14.860
So as root, I can do a kill all user
two on Directory Service.

00:28:15.270 --> 00:28:21.380
And that's just going to send a user to
signal that will turn on the API logging.

00:28:21.560 --> 00:28:23.420
And then, for example,
I could go ahead and

00:28:23.420 --> 00:28:25.600
bring up directory access.

00:28:25.900 --> 00:28:29.200
That'll cause some directory
service calls to happen.

00:28:29.200 --> 00:28:33.190
And if I go look in console,
I've got my system log up here.

00:28:33.190 --> 00:28:40.130
I can see a whole bunch of calls
coming through from directory access.

00:28:40.160 --> 00:28:42.290
There's actually a really
cool feature in console.

00:28:42.300 --> 00:28:44.170
If you haven't seen this,
this is really awesome.

00:28:45.200 --> 00:28:47.110
filter

00:28:48.300 --> 00:28:50.580
based on any string,
and it will show you only

00:28:50.580 --> 00:28:51.740
the lines that match that.

00:28:51.740 --> 00:28:57.440
So I can't take credit for that,
but I use that thing every day.

00:28:57.440 --> 00:29:01.540
So you can filter to just the app,
and we're showing also the app name here.

00:29:01.540 --> 00:29:03.700
If you've used this feature before,
we used to show the PID,

00:29:03.700 --> 00:29:06.920
which we still show,
but now you can get an idea of, well,

00:29:06.920 --> 00:29:09.710
which client is coming in talking
to directory service without

00:29:09.710 --> 00:29:13.120
having to go look at top or figure
those things out on your own.

00:29:13.120 --> 00:29:15.010
So that's API logging.

00:29:16.210 --> 00:29:20.980
Another thing that we've added in
Panther is called DSPerfMonitor,

00:29:20.980 --> 00:29:25.250
and what that does is it allows you to...

00:29:25.900 --> 00:29:49.700
[Transcript missing]

00:29:51.080 --> 00:30:15.860
: So, I'm going to go ahead and
do a DSCL command there.

00:30:15.860 --> 00:30:18.500
That'll just run one
command and then complete,

00:30:18.590 --> 00:30:22.480
and that actually is doing a
get-dir-node-info on my local

00:30:22.480 --> 00:30:25.890
domain and showing me the auth
methods I have and that it's

00:30:25.890 --> 00:30:27.980
read-write and that sort of thing.

00:30:27.980 --> 00:30:34.970
So now, if I go back, do dsperfmonitor-d,
then it will dump the API statistics

00:30:34.970 --> 00:30:39.590
into var log system log,
and let's see, I can go ahead and turn

00:30:39.680 --> 00:30:43.360
off my filter here,
and you'll see a bunch of tab-delimited

00:30:43.360 --> 00:30:48.450
data here at the bottom that we could
go ahead and bring in to Excel or

00:30:48.730 --> 00:30:55.760
whatever spreadsheet you want to
put it into and take a look at it.

00:30:55.760 --> 00:30:59.010
All right,
so I'd like to go back to the slides now.

00:31:06.700 --> 00:31:08.820
Okay,
so there's some other changes I want

00:31:08.820 --> 00:31:12.580
to tell you about if you're doing
any plugin development or if you're

00:31:12.580 --> 00:31:14.760
using the Directory Service API.

00:31:14.800 --> 00:31:16.830
There's lazy plugin loading.

00:31:16.960 --> 00:31:21.100
We've added some new standard
record and attribute types

00:31:21.140 --> 00:31:22.760
you want to take a look at.

00:31:22.780 --> 00:31:26.180
There's also support for
plugins in directory access,

00:31:26.180 --> 00:31:28.670
and I'll get into that a little later.

00:31:28.860 --> 00:31:34.810
and I'll also tell you an update
about our open source code.

00:31:35.930 --> 00:31:37.350
So lazy plugin loading.

00:31:37.550 --> 00:31:40.920
This is a feature that
we've added in Panther,

00:31:40.920 --> 00:31:45.530
and the main goal here is to improve
the boot time and reduce the memory

00:31:45.530 --> 00:31:46.790
footprint of directory service.

00:31:46.790 --> 00:31:50.680
And the way we do this is we only
load the plugins that we need.

00:31:50.780 --> 00:31:55.630
So for backward compatibility,
this is an opt-in.

00:31:55.800 --> 00:32:15.700
[Transcript missing]

00:32:17.540 --> 00:32:22.090
So there's two keys you'll want to
add to your plugin's Info.plist.

00:32:22.160 --> 00:32:24.200
The first one is DSOK to load lazily.

00:32:24.200 --> 00:32:27.360
And that's going to tell us, yes,
this plugin wants to

00:32:27.360 --> 00:32:29.760
opt in for lazy loading.

00:32:29.760 --> 00:32:34.490
The other one is an optional one,
which is called DSNodesToRegister.

00:32:34.600 --> 00:32:39.790
And that allows you to specify a list
of nodes that Directory Service will

00:32:39.790 --> 00:32:43.600
register for you without
you actually even running.

00:32:43.600 --> 00:32:47.120
So I have an example of
that on the next slide here.

00:32:47.430 --> 00:32:52.340
This is from the combined
BSD flat file and NIS plugin.

00:32:52.340 --> 00:32:54.840
It registers /bsd/local.

00:32:54.890 --> 00:32:55.560
You can see there.

00:32:55.560 --> 00:33:02.500
So that's this array of
dictionaries going on there.

00:33:02.510 --> 00:33:06.100
And the DSOK to load
lazily is at the bottom.

00:33:07.670 --> 00:33:09.700
So there's some API additions.

00:33:09.730 --> 00:33:11.700
The first one,
hopefully you'll be excited about,

00:33:11.700 --> 00:33:13.600
is we have an umbrella header.

00:33:13.650 --> 00:33:15.920
So anyone who's ever programmed
with Directory Service,

00:33:16.020 --> 00:33:20.750
before you had to include probably four
different header files to do anything,

00:33:20.940 --> 00:33:23.600
and it was a little confusing and
the names were hard to remember.

00:33:23.620 --> 00:33:27.560
So now you just include
DirectoryService/DirectoryService.h

00:33:27.560 --> 00:33:31.080
and everything works if
you're developing on Panther.

00:33:32.790 --> 00:33:36.500
We've added some new standard
record and attribute types.

00:33:36.690 --> 00:33:37.700
There's a few examples there.

00:33:37.700 --> 00:33:39.400
There's a lot more,
but you can check out the header

00:33:39.500 --> 00:33:42.240
files on your Panther developer tools.

00:33:42.420 --> 00:33:45.920
For example, we have people,
which is for contact information.

00:33:46.010 --> 00:33:49.460
This is if you want to have
that contact information but

00:33:49.570 --> 00:33:51.660
not attach it to a user record.

00:33:51.750 --> 00:33:54.450
We also have a record for
the auto server setup.

00:33:54.480 --> 00:34:00.070
Maybe you've seen the demos of automatic
server setup on Mac OS X Server.

00:34:00.160 --> 00:34:02.660
We store those in auto
server setup records.

00:34:02.810 --> 00:34:08.790
We've also added keywords and XML plist
is one we use in the auto server setup.

00:34:10.030 --> 00:34:15.210
We've added one new API call,
which is DSDUDERNODEAUTH on record type.

00:34:15.330 --> 00:34:18.170
This is pretty much the same
thing as a DUDERNODEAUTH,

00:34:18.230 --> 00:34:20.360
except you specify which record type.

00:34:20.520 --> 00:34:24.000
So that lets you work with
records other than users.

00:34:24.000 --> 00:34:29.310
And the main thing we do this with
now is the computer records when you

00:34:29.350 --> 00:34:32.390
have a PDC set up that uses this API.

00:34:34.610 --> 00:34:36.110
So, directory access plugins.

00:34:36.200 --> 00:34:41.740
We actually had support for directory
access plugins beginning in 10.2.

00:34:41.740 --> 00:34:43.660
And for those of you
that aren't familiar,

00:34:43.660 --> 00:34:48.030
directory access is the tool that
you use to configure Open Directory,

00:34:48.030 --> 00:34:50.560
which is an application's utilities.

00:34:50.750 --> 00:34:53.550
This allows you to provide a
custom interface when someone

00:34:53.550 --> 00:34:57.800
clicks on the configure button
for your open directory plugin.

00:34:57.840 --> 00:35:00.600
And we actually use this system
for all of the UI that you see

00:35:00.600 --> 00:35:04.560
in directory access for LDAP v3,
NIS, Active Directory.

00:35:04.560 --> 00:35:07.850
All of those have plugins
in directory access.

00:35:08.510 --> 00:35:13.240
We're going to be documenting that in an
update to our developer documentation.

00:35:13.240 --> 00:35:16.340
And if you want to do this,
essentially what you need to do is

00:35:16.700 --> 00:35:20.600
factor your configuration so that all of
the UI is going to be in your directory

00:35:20.690 --> 00:35:26.660
access plugin and the back end of it will
be in your directory services plugin.

00:35:26.660 --> 00:35:30.280
So you'll use the directory
services API to actually make

00:35:30.280 --> 00:35:32.030
your configuration changes.

00:35:32.240 --> 00:35:36.990
Normally this is done by doing plugin
custom calls and packing up your

00:35:37.390 --> 00:35:43.590
configuration in the DS buffer as
an XML plist or something like that.

00:35:44.580 --> 00:35:47.720
So why do we suggest that you do that?

00:35:47.790 --> 00:35:51.280
It's because directory
access is a remote tool.

00:35:51.280 --> 00:35:56.040
It can actually be used, for example,
to connect from a PowerBook to a

00:35:56.040 --> 00:35:59.240
headless XServe over the DS proxy.

00:35:59.240 --> 00:36:01.390
So if you go to the server
menu in directory access,

00:36:01.390 --> 00:36:06.460
you can connect to whatever server
machine you want and configure it.

00:36:06.460 --> 00:36:12.030
So the only way for you to get from
the machine running directory access

00:36:12.030 --> 00:36:16.010
to the appropriate place to put those
config files is using the API because

00:36:16.020 --> 00:36:21.710
we have a reference for you that allows
you to use that remote connection.

00:36:22.530 --> 00:36:25.830
You need to keep in mind because of this
that there may be different versions

00:36:26.180 --> 00:36:28.620
on both sides of that connection,
and we actually support

00:36:28.990 --> 00:36:31.100
Panther connecting to Jaguar.

00:36:31.180 --> 00:36:33.980
So we actually keep around
some of our old plugins,

00:36:33.990 --> 00:36:35.430
for example, LDAPv2.

00:36:35.700 --> 00:36:37.500
Even though the directory
service plugin is gone,

00:36:37.500 --> 00:36:39.190
there's still a directory
access plugin for that,

00:36:39.190 --> 00:36:41.910
so you can continue to configure that.

00:36:42.170 --> 00:36:44.680
If you want to work on a directory access
plugin or directory service plugin,

00:36:44.680 --> 00:36:45.810
let us know.

00:36:46.250 --> 00:36:50.010
It should be pretty easy to do
the stuff in directory access.

00:36:50.400 --> 00:36:55.730
It's all using Objective-C and there's
only a few methods you need to implement.

00:36:57.400 --> 00:37:53.800
[Transcript missing]

00:38:00.660 --> 00:38:02.590
So we've done a lot for Panther.

00:38:02.610 --> 00:38:04.560
We've enhanced the LDAPv3 plugin.

00:38:04.650 --> 00:38:07.110
We've enhanced password server
support with auth methods

00:38:07.110 --> 00:38:08.500
and replication support.

00:38:08.590 --> 00:38:11.800
We have a combined NIS and flat file
plugin for those of you who have

00:38:11.810 --> 00:38:13.840
legacy UNIX configuration information.

00:38:13.840 --> 00:38:15.680
LDAPv2 is being retired.

00:38:15.690 --> 00:38:18.540
We have a brand new plugin for
supporting Active Directory that

00:38:18.590 --> 00:38:20.920
doesn't require any schema changes.

00:38:20.920 --> 00:38:22.890
And we've made changes
to local authentication.

00:38:22.940 --> 00:38:25.240
Kerberos is dead and
Kerb - or Crypt is dead.

00:38:25.240 --> 00:38:29.070
And Kerberos is coming.

00:38:29.390 --> 00:38:31.990
We've enhanced the
SMB Windows Network plugin.

00:38:32.160 --> 00:38:34.470
Slash Network is now based
on Directory Services.

00:38:34.610 --> 00:38:37.900
Directory Services has man pages,
it has a command line tool suite,

00:38:37.900 --> 00:38:39.920
and there are some very,
very minor changes if

00:38:39.920 --> 00:38:42.310
you're developing a plugin,
but there's only a handful of

00:38:42.310 --> 00:38:45.300
people developing a plugin,
so this doesn't affect a lot of people.

00:38:45.300 --> 00:38:48.270
Here's a roadmap of some
interesting sessions.

00:38:48.360 --> 00:38:51.620
We have the security session, Kerberos,
Mac OS X Server overview,

00:38:51.620 --> 00:38:54.610
server in depth, authentication,
desktop technologies,

00:38:54.690 --> 00:38:57.300
and network security
best practices on Friday.

00:38:57.300 --> 00:38:59.300
I'll be here all week.

00:38:59.300 --> 00:39:01.290
I'll be at that presentation.

00:39:01.410 --> 00:39:06.290
You can contact myself or Skip Levens
or Jason Townsen if you want,

00:39:06.300 --> 00:39:08.220
but our email addresses are up there.

00:39:08.350 --> 00:39:11.300
And for more information,
there's a lot of documentation.

00:39:11.300 --> 00:39:14.120
We have the
Directory Services API documentation

00:39:14.120 --> 00:39:16.300
posted at the site,
although I've heard these -

00:39:16.300 --> 00:39:19.370
I heard we renamed all these
URLs and I didn't get them updated,

00:39:19.380 --> 00:39:22.300
so go to the developer website
and we're under networking,

00:39:22.300 --> 00:39:23.290
wherever they've moved that to.

00:39:23.300 --> 00:39:25.290
We have Darwin Open Directory.

00:39:25.300 --> 00:39:25.300
We have the Open Directory S/4HANA.

00:39:25.320 --> 00:39:31.240
The server documentation, surprisingly,
is very good, and in particular,

00:39:31.260 --> 00:39:34.200
the Open Directory Technical Brief.

00:39:34.300 --> 00:39:36.600
Now, that's a fantastic
tutorial on directories,

00:39:36.650 --> 00:39:39.150
just in general, conceptually,
high-level stuff.

00:39:39.310 --> 00:39:42.300
I really recommend anyone
doing directory work read that.

00:39:42.400 --> 00:39:44.290
The Mac OS X LDAP schema.

00:39:44.300 --> 00:39:45.640
Everyone last year said,
"Where do you document

00:39:45.650 --> 00:39:48.300
the LDAP schema?" Well,
it's in the Open LDAP config files.

00:39:48.300 --> 00:39:50.570
We aren't keeping any secrets,
but we're going to pull that out

00:39:50.570 --> 00:39:53.300
into one of the new 12 manuals
for this release of 10 Server.

00:39:53.300 --> 00:39:56.420
But you can always go to
the Open LDAP configuration

00:39:56.430 --> 00:39:58.290
and see what our schema is.

00:39:58.300 --> 00:40:02.280
Mac OS X security APIs are
another excellent reference.

00:40:02.300 --> 00:40:05.210
And then there's the Open LDAP project,
the SASL project, the PAM project,

00:40:05.300 --> 00:40:10.070
and Kerberos are also related
technologies that are available to you.