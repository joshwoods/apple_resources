WEBVTT

00:00:20.930 --> 00:00:22.380
Well, good afternoon everybody.

00:00:22.510 --> 00:00:24.100
Hope you had a good lunch.

00:00:24.230 --> 00:00:26.700
First, I'm Aimee Nugent.

00:00:26.700 --> 00:00:28.790
I'm from the QuickTime product
marketing team,

00:00:28.790 --> 00:00:30.700
so thank you all for coming.

00:00:30.720 --> 00:00:32.680
First, just want to make a
housekeeping announcement.

00:00:32.760 --> 00:00:36.700
The QuickTime feedback forum,
which will be after this session at 3:30,

00:00:36.770 --> 00:00:40.170
the room has moved to Marina,
which I believe is down this hallway.

00:00:40.210 --> 00:00:44.500
So if you'd like to join us for that,
then please note that change.

00:00:44.500 --> 00:00:46.490
It's now in Marina.

00:00:46.580 --> 00:00:48.600
Now, on to why we're here.

00:00:48.600 --> 00:00:52.560
I'm very pleased to
introduce to you session 729,

00:00:52.560 --> 00:00:56.500
Industrial Strength Encoding:
Workflow Automation for QuickTime.

00:00:56.520 --> 00:00:59.080
We have two great
presenters for you today.

00:00:59.120 --> 00:01:03.540
We have Hagie Van Dijk from Discrete
and Jim Baker from 21st Century Media.

00:01:03.790 --> 00:01:06.850
And what you're going to see today,
I think, is a great session that's going

00:01:06.960 --> 00:01:09.170
to pull together a lot of the
concepts that you've been learning

00:01:09.310 --> 00:01:11.300
over the past couple days.

00:01:11.450 --> 00:01:14.510
So, no further ado,
I'd like to introduce Hagie.

00:01:14.680 --> 00:01:16.300
And one note about questions.

00:01:16.300 --> 00:01:18.700
We'd like to ask that you hold
them until the end of the session.

00:01:18.700 --> 00:01:21.500
He's got a lot of material to cover.

00:01:21.510 --> 00:01:24.100
And when you do ask a question,
please come up to the

00:01:24.100 --> 00:01:25.620
microphone and speak clearly.

00:01:25.900 --> 00:01:28.000
We do have a translation going on.

00:01:28.040 --> 00:01:29.000
So now, Hagie.

00:01:29.000 --> 00:01:30.780
Thank you.

00:01:36.900 --> 00:09:32.400
[Transcript missing]

00:09:33.100 --> 00:09:34.060
Hi, good afternoon.

00:09:34.060 --> 00:09:36.220
Thank you for joining us this afternoon.

00:09:36.220 --> 00:09:39.390
And Hagie's done a great
job of introducing what

00:09:39.390 --> 00:09:40.890
this session is all about.

00:09:40.900 --> 00:09:46.580
And my part in this session is
to explain how we're actually

00:09:46.620 --> 00:09:48.220
tackling a very specific job.

00:09:48.220 --> 00:09:51.100
As Hagie explained, it's the WWDC 2003.

00:09:51.150 --> 00:09:55.300
This is actually the fourth year that
my team have produced this content,

00:09:55.300 --> 00:09:59.400
and each year has been getting a little
bit closer to doing it the right way.

00:09:59.400 --> 00:10:03.280
The first year, Apple asked us to do it,
was extremely interesting,

00:10:03.280 --> 00:10:04.270
I can tell you.

00:10:04.280 --> 00:10:08.260
I think being immersed in boiling oil
would be more fun than going through

00:10:08.340 --> 00:10:09.620
what I went through that first year.

00:10:09.620 --> 00:10:12.820
The second year,
we tried it a different way.

00:10:12.820 --> 00:10:16.380
And the second year, we threw a very,
very large amount of sand

00:10:16.380 --> 00:10:17.980
storage at the project.

00:10:17.980 --> 00:10:20.900
And surprisingly,
we still got the job done,

00:10:20.900 --> 00:10:23.260
but it wasn't quite as efficient
as I was expecting it to be.

00:10:23.260 --> 00:10:26.750
And last year,
we tried a different aspect

00:10:26.750 --> 00:10:31.050
altogether that didn't involve Macs,
which was probably not such a good thing.

00:10:31.060 --> 00:10:33.760
And this year,
we've decided to build a workflow

00:10:33.760 --> 00:10:35.620
that is completely Mac OS X based.

00:10:35.620 --> 00:10:37.830
And I'm delighted to be able
to share that with you today.

00:10:37.840 --> 00:10:42.500
I think it's the most efficient system
that we've built so far for dealing

00:10:42.530 --> 00:10:44.560
with this particular type of project.

00:10:44.560 --> 00:10:48.580
What's interesting about it is that
there are over 170 sessions at WWDC.

00:10:48.580 --> 00:10:50.540
I think there are 175,
something like that, this year.

00:10:50.590 --> 00:10:52.320
So there's a very,
very large amount of content.

00:10:52.320 --> 00:10:54.420
It's over 200 hours of material.

00:10:54.420 --> 00:10:57.410
And just to make things
even more complicated,

00:10:57.560 --> 00:10:58.520
it's in multiple languages.

00:10:58.520 --> 00:11:00.920
We have the English that
you're hearing me speak now.

00:11:00.920 --> 00:11:04.000
And we have some ladies and
gentlemen in the little box in the

00:11:04.020 --> 00:11:07.030
back who are translating everything
that I'm saying into Japanese.

00:11:07.040 --> 00:11:11.770
So we're going to be receiving tapes that
have both Japanese and English on them.

00:11:11.780 --> 00:11:15.370
What we're doing is we're encoding
them for streaming over the web.

00:11:15.380 --> 00:11:19.000
You'll be able to review and
view the sessions as ADC members.

00:11:19.000 --> 00:11:21.580
You'll be able to view the
sessions on the ADC TV website

00:11:21.580 --> 00:11:23.160
at some point in the near future.

00:11:23.160 --> 00:11:26.280
And then, as you know,
if you've been attendees in the past,

00:11:26.340 --> 00:11:27.490
you receive a box set of tapes.

00:11:27.630 --> 00:11:29.320
And you'll be able to view the
DVD-ROMs that has all of those

00:11:29.320 --> 00:11:30.640
sessions encoded on them as well.

00:11:30.660 --> 00:11:32.880
And the interesting thing
about the DVD-ROMs is those

00:11:32.950 --> 00:11:35.270
are in multiple languages,
too, on those disks.

00:11:35.280 --> 00:11:37.870
And I'll be explaining how those work.

00:11:37.950 --> 00:11:39.400
We're using MPEG-4 this year.

00:11:39.400 --> 00:11:41.120
It's the first year
that we've used MPEG-4.

00:11:41.120 --> 00:11:43.810
And Hege's going to go into much
more detail about why we're using

00:11:43.870 --> 00:11:48.020
MPEG-4 and the advantages of doing
that and the improvements that

00:11:48.020 --> 00:11:50.040
we've seen in using that as a codec.

00:11:50.100 --> 00:11:53.140
As I mentioned before,
it's completely Mac OS X-based now,

00:11:53.360 --> 00:11:55.580
which really streamlines the workflow.

00:11:55.580 --> 00:11:57.490
It leverages a lot of the functionality
that you've seen in the past.

00:11:57.580 --> 00:12:00.560
You find in Mac OS X and
applications that run on Mac OS X.

00:12:00.560 --> 00:12:03.200
And we do some assembly as well.

00:12:03.200 --> 00:12:05.340
And that's pretty much what the
Apple scripting is all about.

00:12:05.340 --> 00:12:06.400
It's not just about encoding.

00:12:06.400 --> 00:12:10.070
It's about once you've encoded files,
you're taking some stuff from

00:12:10.140 --> 00:12:11.830
here and some stuff from there
and putting it all together and

00:12:12.120 --> 00:12:13.900
creating this finished content.

00:12:16.720 --> 00:12:19.420
So this is pretty much what
the workflow looks like.

00:12:19.480 --> 00:12:22.870
Essentially, we're capturing from DV cam.

00:12:23.170 --> 00:12:24.400
We get the tapes like this.

00:12:24.400 --> 00:12:26.080
Fortunately, we're not editing them.

00:12:26.080 --> 00:12:28.550
The first year we edited them,
and that was one of the big

00:12:28.560 --> 00:12:30.140
hells that we went through.

00:12:30.140 --> 00:12:31.620
Fortunately,
somebody else does that this year,

00:12:31.620 --> 00:12:33.660
and we just get the
tapes all fully edited,

00:12:33.660 --> 00:12:35.690
which saves an enormous amount of time.

00:12:35.760 --> 00:12:37.280
So pretty much,
we just set an in point and

00:12:37.280 --> 00:12:38.920
out point and capture it in.

00:12:38.920 --> 00:12:40.880
We then encode it at multiple bit rates.

00:12:41.080 --> 00:12:42.620
We're then assembling it,
as I said already,

00:12:42.680 --> 00:12:46.290
in multiple language versions,
English and Japanese, standalone English,

00:12:46.390 --> 00:12:49.760
standalone Japanese for streaming,
and then a combined Japanese and

00:12:49.760 --> 00:12:51.310
English version for DVD.

00:12:51.360 --> 00:12:53.870
So you have one set of
DVDs in two languages.

00:12:53.960 --> 00:12:56.800
We have a quality control stage,
very important to make sure that

00:12:56.820 --> 00:12:59.600
everything you've encoded looks right,
functions correctly before

00:12:59.600 --> 00:13:01.930
it goes on to the next stage,
which is then delivering

00:13:01.930 --> 00:13:04.730
it up to the customer,
the streaming version,

00:13:04.760 --> 00:13:09.390
and then off for replication on the DVDs.

00:13:10.470 --> 00:13:11.970
So obviously when you're
planning a workflow,

00:13:11.970 --> 00:13:14.070
you've really got to think about
how long this is going to take.

00:13:14.160 --> 00:13:17.050
You've got to figure out how long
it's going to take to capture

00:13:17.050 --> 00:13:18.630
this content in the first place.

00:13:18.790 --> 00:13:20.080
You've got 175 sessions.

00:13:20.080 --> 00:13:21.770
You've got to physically
take those tapes,

00:13:21.780 --> 00:13:24.570
put them in tape machines,
set the in point, set the out point,

00:13:24.680 --> 00:13:25.430
capture it.

00:13:25.510 --> 00:13:26.490
That's going to take some time.

00:13:26.500 --> 00:13:27.400
In fact, it's real time.

00:13:27.400 --> 00:13:30.840
So it's going to take over 200 hours
to capture that on one tape machine,

00:13:30.840 --> 00:13:31.380
right?

00:13:31.380 --> 00:13:34.180
So that's obviously you
need to spread the workload.

00:13:34.180 --> 00:13:36.840
You've got to calculate
the encoding times as well,

00:13:36.850 --> 00:13:38.270
per bitrate per minute.

00:13:38.280 --> 00:13:39.350
You can just do that with some math.

00:13:39.350 --> 00:13:40.640
We'll look at that math in just a second.

00:13:40.660 --> 00:13:43.520
So once we've figured that out,
it's like, well, how much power,

00:13:43.520 --> 00:13:45.790
how much horsepower do I need
to throw at this to get it

00:13:45.810 --> 00:13:46.900
done in the time that I've got?

00:13:46.920 --> 00:13:48.760
Or the time that my client
wants me to do it in?

00:13:48.820 --> 00:13:52.000
So we need to figure out how many CPUs
we're going to need to hit that deadline.

00:13:52.000 --> 00:13:55.400
And then we've got to figure out
how fast our network needs to be.

00:13:55.400 --> 00:13:59.820
What kind of network topology do we need
to build that is going to be able to

00:13:59.820 --> 00:14:03.460
suck digital video in off these decks,
and push it over a network,

00:14:03.460 --> 00:14:06.920
and get it to all those encoders,
and then get it to the assembly stations?

00:14:06.920 --> 00:14:09.720
So these are all the sorts of
considerations that we've got to

00:14:09.720 --> 00:14:11.440
take into account to figure out
how long this is all going to take.

00:14:11.460 --> 00:14:14.200
How much space do we need, storage space,
to capture all of this?

00:14:14.410 --> 00:14:15.160
Quite a lot, actually.

00:14:15.160 --> 00:14:18.150
As Hoagie said, it's just under 4
megabytes a second for DV,

00:14:18.150 --> 00:14:19.630
and over 200 hours.

00:14:19.720 --> 00:14:20.760
That's a lot of storage.

00:14:20.760 --> 00:14:22.130
That's terabytes worth of storage.

00:14:23.860 --> 00:14:24.960
Do you really want to do this manually?

00:14:24.960 --> 00:14:27.140
No, I tried doing that,
and it was a really bad idea.

00:14:27.140 --> 00:14:29.820
So automation is a
really good way to do it,

00:14:29.890 --> 00:14:31.410
and AppleScript saves the day for that.

00:14:31.440 --> 00:14:33.400
We'll be looking at some of
the AppleScripts that we've

00:14:33.400 --> 00:14:34.070
written in just a moment.

00:14:34.080 --> 00:14:36.550
Are my applications scriptable?

00:14:36.560 --> 00:14:40.020
Fortunately, yes, some are,
and unfortunately, some aren't.

00:14:40.080 --> 00:14:44.460
And I'll highlight why that is important,
that applications that developers

00:14:44.530 --> 00:14:45.840
develop should be scriptable.

00:14:45.840 --> 00:14:47.090
I'll script that.

00:14:47.090 --> 00:14:47.090
I'll script that.

00:14:47.620 --> 00:14:49.210
And then lastly,
how does the client actually

00:14:49.210 --> 00:14:50.840
get to see this stuff,
to sign off on it?

00:14:50.900 --> 00:14:56.010
And we'll be looking at a
database-driven system for doing that.

00:14:56.040 --> 00:14:58.220
Let's look at some of
the math very quickly.

00:14:58.220 --> 00:15:03.220
As I said before, DVCAM, it's 720x480,
about 3.5 megabytes a second,

00:15:03.220 --> 00:15:03.890
time 200 hours.

00:15:03.960 --> 00:15:05.590
That's about 2.5 terabytes of storage.

00:15:05.600 --> 00:15:07.460
And if you want to have
any kind of redundancy,

00:15:07.460 --> 00:15:10.560
you're up to 5 terabytes of storage
that you should have available

00:15:10.560 --> 00:15:11.670
for doing this kind of a project.

00:15:11.680 --> 00:15:16.540
Now, each one of these WWDC sessions
is about 65 minutes.

00:15:17.010 --> 00:15:17.860
Some are a little shorter.

00:15:17.860 --> 00:15:20.490
People who don't have much
to say take about 35 minutes,

00:15:20.490 --> 00:15:21.350
40 minutes.

00:15:21.420 --> 00:15:23.760
Some who have far too much to
say can take an hour and a half.

00:15:23.860 --> 00:15:25.930
But the average time is about 65 minutes.

00:15:25.940 --> 00:15:28.470
So those metrics allow us to
figure out how long it's going

00:15:28.480 --> 00:15:29.820
to take to capture these.

00:15:29.820 --> 00:15:32.380
If it takes 5 minutes to put the tape in,
mark the in point,

00:15:32.380 --> 00:15:35.060
spool to the end of the tape,
mark the out point, rewind,

00:15:35.060 --> 00:15:37.900
hit batch capture,
it's about 5 minutes to set that up.

00:15:37.940 --> 00:15:42.300
So about 70 minutes per session to
get that ingested into your system.

00:15:42.320 --> 00:15:45.780
So your overall production metrics,
you've got 171 sessions.

00:15:45.780 --> 00:15:46.960
I think that figure's now gone up.

00:15:47.000 --> 00:15:48.280
It's 175 or so.

00:15:48.280 --> 00:15:51.800
So that's 12,000 machine
hours to process this.

00:15:51.800 --> 00:15:56.080
But if you now split that load across
multiple machines for the capture,

00:15:56.080 --> 00:16:00.910
you could actually capture all of
this content in just 50 machine hours.

00:16:00.980 --> 00:16:06.000
So you can suddenly see how distributing
this workload really is plowing through

00:16:06.000 --> 00:16:08.450
this material in double quick time.

00:16:09.770 --> 00:16:12.820
This is what the encoding
mathematics looks like.

00:16:12.970 --> 00:16:19.600
It takes about three minutes to encode
a 900 kilobit per second stream.

00:16:19.700 --> 00:16:22.600
We encode the material at 900
kilobits a second for DVD-ROM.

00:16:22.700 --> 00:16:24.880
You may ask,
"Why that particular bit rate?" Well,

00:16:24.880 --> 00:16:28.600
we want to try and fit all of these
sessions onto a certain number of DVDs.

00:16:28.710 --> 00:16:31.370
So that kind of tells us what bit
rate we must use for the video.

00:16:31.640 --> 00:16:35.590
Of course, you could encode DVD-ROM,
remember, not DVD-Video.

00:16:35.730 --> 00:16:37.670
DVD-ROM QuickTime movies are
at a much higher bit rate,

00:16:37.670 --> 00:16:39.600
but they're going to chew
up much more disk space.

00:16:39.600 --> 00:16:42.530
We want to be as economical as possible,
keep the production

00:16:42.530 --> 00:16:43.600
costs down on the DVDs.

00:16:43.820 --> 00:16:46.700
Then on the broadband,
we're looking at about 1 minute 30 to

00:16:46.710 --> 00:16:50.990
encode 1 minute at 300 kilobits a second,
and just 44 seconds to encode a low-end

00:16:50.990 --> 00:16:53.460
broadband at 100 kilobits a second.

00:16:53.640 --> 00:16:56.600
So you can see it's pretty
fast to encode this stuff.

00:16:56.660 --> 00:16:59.840
That's the beauty of MPEG-4, very quick,
and Hagie will go into more detail about

00:16:59.840 --> 00:17:01.600
the settings that we use a little later.

00:17:01.600 --> 00:17:06.110
This incident is running on
a dual 1.33 gigahertz exo.

00:17:06.580 --> 00:17:11.310
So once we've figured out that,
how long it takes to compress

00:17:11.610 --> 00:17:14.820
each clip per minute,
we can figure out how long it's

00:17:14.970 --> 00:17:16.650
going to take to compress a session.

00:17:16.660 --> 00:17:21.910
It's about just under six hours to
compress one session on a single machine.

00:17:21.920 --> 00:17:25.830
So 171 sessions takes
1,000 machine hours,

00:17:25.830 --> 00:17:29.100
or 42 days if you're
just using one encoder.

00:17:29.100 --> 00:17:33.660
So now spread that across 20 XSERVs,
and there's that magical figure again,

00:17:33.750 --> 00:17:34.760
50 hours.

00:17:34.860 --> 00:17:38.360
You could potentially encode this
entire conference in 50 hours,

00:17:38.360 --> 00:17:41.010
or even less if you threw
more machines at it.

00:17:41.020 --> 00:17:43.620
But the reality of it is,
it's never going to happen

00:17:43.620 --> 00:17:44.950
in that amount of time.

00:17:44.980 --> 00:17:48.760
And the biggest bottleneck of that is,
we are just not going to get these

00:17:48.830 --> 00:17:51.090
tapes from the editors in 50 hours.

00:17:51.140 --> 00:17:52.090
It's just not going to happen.

00:17:52.100 --> 00:17:54.220
These guys have got to
sit down with the source,

00:17:54.220 --> 00:17:57.180
they've got to check it for content,
they've got to set the in and out points,

00:17:57.260 --> 00:17:58.770
they've got to top and
tail it with graphics.

00:17:58.840 --> 00:18:00.610
They've got to do all sorts of things.

00:18:00.630 --> 00:18:03.410
So it's really the flow of the
content that's coming into this.

00:18:04.880 --> 00:18:07.570
It's the workflow that is
going to be the key bottleneck.

00:18:07.660 --> 00:18:10.540
And then at the other end, the client,
in this case Apple,

00:18:10.540 --> 00:18:12.140
has actually got to look
at this material and say,

00:18:12.140 --> 00:18:13.350
"Oh, well, yes, this is okay.

00:18:13.460 --> 00:18:16.370
Oh, did he really say that?" And then
that may change that session.

00:18:16.380 --> 00:18:18.690
They may have to go back and re-edit it,
or they may have to cut something.

00:18:18.780 --> 00:18:22.040
Or the audio levels, like that.

00:18:22.410 --> 00:18:24.530
You know, there may be dropouts,
and that happens all the time.

00:18:24.650 --> 00:18:26.360
Nothing's ever perfect,
so you do have to take

00:18:26.360 --> 00:18:27.500
some things into account.

00:18:27.610 --> 00:18:31.740
So we reckon that realistically,
this project could be done in two weeks,

00:18:31.920 --> 00:18:34.600
which is not bad for over
200 hours of encoding.

00:18:34.600 --> 00:18:36.600
And editing,
and all of that sort of production.

00:18:36.600 --> 00:18:39.230
I'll let you know if we actually
achieve that or not next year.

00:18:39.250 --> 00:18:41.830
Okay, so then there's the assembly.

00:18:41.960 --> 00:18:43.950
We've actually got to piece
all these things together.

00:18:43.960 --> 00:18:47.350
We're creating English language movies
at 100 and 300 kilobits a second.

00:18:47.400 --> 00:18:49.340
And then a different set of Japanese.

00:18:49.400 --> 00:18:52.600
So if you want to watch in Japanese,
you go and watch those online over here.

00:18:52.600 --> 00:18:54.600
And if you want to watch in English,
you go over here.

00:18:54.600 --> 00:18:57.510
You can't actually serve a
single movie with dual language

00:18:57.610 --> 00:18:59.840
tracks over RTSP streaming.

00:18:59.940 --> 00:19:01.810
Alas, progressive download, yes.

00:19:01.880 --> 00:19:03.880
RTSP streaming, no, at this current time.

00:19:04.340 --> 00:19:07.020
However, on DVD,
we can deliver a single movie that

00:19:07.050 --> 00:19:08.660
has multiple audio tracks in it.

00:19:08.690 --> 00:19:10.660
And it will intelligently
switch out the audio tracks,

00:19:10.690 --> 00:19:12.620
depending on what you're looking at.

00:19:12.660 --> 00:19:14.650
We'll look at how we do that.

00:19:14.660 --> 00:19:16.620
So what we do is we encode
the Japanese audio separately

00:19:16.660 --> 00:19:18.640
as an audio-only file.

00:19:18.700 --> 00:19:22.650
And then we encode the English video
and the English audio together.

00:19:22.850 --> 00:19:24.660
And then we have an automated process
that opens up the English one,

00:19:24.660 --> 00:19:26.660
it strips out the English audio,
and it pops in the Japanese audio,

00:19:26.660 --> 00:19:28.660
saves it out, there's your Japanese file.

00:19:28.660 --> 00:19:33.050
And then for DVD,
it opens up the Japanese audio,

00:19:33.120 --> 00:19:36.820
copies it, the English DVD file,
pops in the Japanese,

00:19:36.820 --> 00:19:38.820
sets up the multiple
language tracks thing,

00:19:38.820 --> 00:19:41.040
adds annotations,
does all kinds of cool stuff,

00:19:41.040 --> 00:19:42.600
and saves it out.

00:19:42.860 --> 00:19:44.700
And I'll show you those scripts shortly.

00:19:44.840 --> 00:19:47.800
So it's all really completely automated,
which doesn't take very much time at all.

00:19:47.890 --> 00:19:50.040
If this was a manual process
and you had to have somebody

00:19:50.070 --> 00:19:52.820
sitting there doing this,
it would be a nightmare.

00:19:52.820 --> 00:19:54.780
And AppleScript really
solves all of that.

00:19:55.070 --> 00:19:55.730
So how are we doing it?

00:19:55.780 --> 00:19:57.720
What does the work unit look like?

00:19:57.770 --> 00:20:00.530
And I call this a work unit,
and you'll see why I refer to

00:20:00.530 --> 00:20:01.600
it as a unit in just a second.

00:20:01.600 --> 00:20:03.080
This is kind of what it looks like.

00:20:03.120 --> 00:20:06.390
We're capturing off Sony DV cam decks.

00:20:06.500 --> 00:20:09.820
And really, just remember,
this is just playback only,

00:20:09.820 --> 00:20:11.340
so it doesn't have to be super high-end.

00:20:11.340 --> 00:20:13.580
It can be something
that suits your budget.

00:20:13.580 --> 00:20:16.340
If you can afford to use a very,
very high-end DV cam deck, fantastic.

00:20:16.460 --> 00:20:19.370
DSR-1500 is a very nice deck if
you want to use one of those.

00:20:19.480 --> 00:20:22.580
In this case, we're using 25s and 45s,
which have little built-in

00:20:22.580 --> 00:20:25.400
monitors that allow you to see the
session as it's being digitized.

00:20:25.540 --> 00:20:25.860
Really nice.

00:20:25.970 --> 00:20:28.920
JVC also make a great unit that
has a built-in monitor as well.

00:20:28.920 --> 00:20:32.400
This is coming in over FireWire
into an XSERV capture station.

00:20:32.400 --> 00:20:39.160
And then that's going over 2-gigabit
fiber to half a side of an XSERV RAID.

00:20:39.180 --> 00:20:43.540
So one machine is sharing
a single XRAID unit,

00:20:43.540 --> 00:20:45.740
but just is dedicated to
half of it for capturing.

00:20:45.740 --> 00:20:47.990
So it's pulling in off
the tape the video,

00:20:47.990 --> 00:20:51.100
the English on Channel 1,
and the Japanese on Channel 2,

00:20:51.100 --> 00:20:52.220
all simultaneously.

00:20:52.770 --> 00:20:55.870
On that capture station,
we've got QuickTime 6.3

00:20:55.870 --> 00:20:57.340
and Final Cut Pro 4.

00:21:00.370 --> 00:21:02.390
As Hagie mentioned earlier,
establishing a naming

00:21:02.390 --> 00:21:03.980
convention is critical,
particularly if you're

00:21:03.980 --> 00:21:04.820
automating a process.

00:21:04.940 --> 00:21:06.300
Everything has to be named identically.

00:21:06.300 --> 00:21:09.430
It's got to have the right extensions on
it so that the scripts can pick it up,

00:21:09.500 --> 00:21:12.080
detect it, and know what to do
with that specific file.

00:21:12.080 --> 00:21:16.860
Because all of that scripting is totally
dependent on what that file name is.

00:21:16.860 --> 00:21:19.200
So we're pulling in that
video and the audio.

00:21:19.200 --> 00:21:22.240
We're then exporting it out
of Final Cut Pro by reference,

00:21:22.240 --> 00:21:24.120
so we don't have to go
through a long rendering time.

00:21:24.530 --> 00:21:28.310
Once that session is captured,
we just go export, boink,

00:21:28.310 --> 00:21:30.860
it saves it out in less than a minute.

00:21:30.860 --> 00:21:32.900
It renders the audio, but not the video.

00:21:32.900 --> 00:21:36.410
And then for the Japanese audio,
we're just exporting the audio alone,

00:21:36.410 --> 00:21:37.120
no video.

00:21:37.120 --> 00:21:39.560
So we end up with two files for
each session that we capture.

00:21:39.560 --> 00:21:44.760
And they sit on the X-rayed,
on the X-Serve RAID, ready to be encoded.

00:21:44.760 --> 00:21:46.700
You'll notice the naming
conventions there.

00:21:46.700 --> 00:21:48.750
So what we're doing is
they come out of Final Cut,

00:21:48.880 --> 00:21:50.990
they've got the session
ID with an underscore and

00:21:51.050 --> 00:21:52.700
then the language identifier.

00:21:52.700 --> 00:21:54.500
And that language identifier
is used to make the session.

00:21:54.520 --> 00:21:56.290
And that language identifier is
used throughout the process to

00:21:56.290 --> 00:21:58.300
make sure that it goes down the
right path through the automation.

00:22:00.320 --> 00:22:05.410
So a full work unit comprises
the entire workflow from capture

00:22:05.680 --> 00:22:07.910
through to encode and output.

00:22:07.940 --> 00:22:10.900
And this is what one
work unit looks like.

00:22:10.980 --> 00:22:12.930
So we've already covered
that capture stage.

00:22:13.030 --> 00:22:14.220
What happens after it's captured?

00:22:14.220 --> 00:22:18.360
Well, it gets read off the
RAID by the encoders.

00:22:18.440 --> 00:22:21.660
And each work unit, in other words,
each capture station,

00:22:21.660 --> 00:22:26.020
has five dedicated XSERVs
to do the encoding.

00:22:26.020 --> 00:22:28.470
And it's doing the encoding
over gigabit Ethernet.

00:22:29.060 --> 00:22:30.960
You might ask, why gigabit Ethernet?

00:22:30.960 --> 00:22:32.280
And why not just stick with fiber?

00:22:32.280 --> 00:22:34.380
It's purely a financial decision.

00:22:34.380 --> 00:22:38.860
If you think about how many fiber
cards you would need to support,

00:22:38.910 --> 00:22:40.990
well, you'd need 20 if you're going
to have four work units.

00:22:41.000 --> 00:22:41.890
It's extremely expensive.

00:22:41.940 --> 00:22:43.320
They're $500 or $600 each.

00:22:43.320 --> 00:22:46.620
So from a cost point of view,
when we analyzed how much data we were

00:22:46.620 --> 00:22:49.880
actually pushing through this network,
we realized that we didn't really

00:22:49.920 --> 00:22:51.060
need to go to 2 gigabit fiber.

00:22:51.060 --> 00:22:55.060
We're not pushing that whole digital
video file over to the encoders.

00:22:55.060 --> 00:22:57.820
It's just reading it in little
bits and doing the encoding.

00:22:57.920 --> 00:23:03.160
And a switch like the Asante
switch is extremely good for

00:23:03.170 --> 00:23:07.480
doing digital video encoding,
DV anyway, encoding over a network.

00:23:07.500 --> 00:23:09.530
So this is pretty much what
a work unit looks like.

00:23:09.630 --> 00:23:10.820
You can scale this, you see.

00:23:10.820 --> 00:23:13.890
So now you can take that work unit
and you can duplicate that as many

00:23:13.890 --> 00:23:18.230
times as you like to cope with however
much content you're trying to encode.

00:23:19.580 --> 00:23:21.590
So what's on these clusters
that you see down here?

00:23:21.600 --> 00:23:23.770
We're running discrete Cleaner 6.

00:23:23.880 --> 00:23:27.120
Still very much the industry
standard for video encoding.

00:23:27.120 --> 00:23:28.050
It does multiple formats.

00:23:28.130 --> 00:23:30.940
Obviously,
we're just encoding QuickTime MPEG-4.

00:23:30.940 --> 00:23:34.240
The great thing about Cleaner, though,
is it's fully scriptable.

00:23:34.240 --> 00:23:37.160
And, in fact,
there really isn't a competitor to

00:23:37.250 --> 00:23:39.670
Cleaner that is fully scriptable,
and that's one of the main

00:23:39.670 --> 00:23:41.830
reasons why we chose it,
because of its scriptability

00:23:41.930 --> 00:23:45.400
and also its great workflow
functionality using watch folders,

00:23:45.400 --> 00:23:47.280
which Hagie's going to go into
more detail about in a minute,

00:23:47.280 --> 00:23:49.960
which is key to the whole
process of our encoding.

00:23:49.960 --> 00:23:52.910
We're also using a very neat
little thing called Whistleblower.

00:23:52.920 --> 00:23:55.220
Some of you may be familiar
with Whistleblower.

00:23:55.220 --> 00:23:58.920
Whistleblower is essentially an
application which allows you to monitor

00:23:58.920 --> 00:24:01.240
servers and other such things remotely.

00:24:01.400 --> 00:24:05.740
I got in touch with the guy,
James Sentman, who wrote Whistleblower,

00:24:05.740 --> 00:24:06.760
and I told him what we were doing.

00:24:06.760 --> 00:24:10.140
And I said that what I really wanted was
not something to monitor the machine,

00:24:10.140 --> 00:24:12.540
but I wanted something to monitor
a very specific application

00:24:12.540 --> 00:24:13.660
that was running on the machine.

00:24:13.660 --> 00:24:18.280
Because if a machine freezes,
then you can detect that, right?

00:24:18.330 --> 00:24:21.510
If a machine freezes,
Whistleblower pings it.

00:24:21.580 --> 00:24:23.840
If it doesn't respond to the ping,
then the machine's crashed,

00:24:23.870 --> 00:24:26.380
and it notifies you that it's crashed,
and it restarts.

00:24:26.440 --> 00:24:29.720
But an application might crash,
but the machine's still running,

00:24:29.720 --> 00:24:31.010
and Whistleblower couldn't detect that.

00:24:31.050 --> 00:24:33.890
So what James did is he wrote
up this great little client,

00:24:33.970 --> 00:24:36.000
which is now released as
part of Whistleblower,

00:24:36.000 --> 00:24:39.080
I believe,
and that runs on the client machine,

00:24:39.270 --> 00:24:41.410
and it can actually
do process monitoring,

00:24:41.410 --> 00:24:43.700
and Whistleblower can
monitor those processes.

00:24:43.760 --> 00:24:45.390
So it sits there going,
"Is Cleaner alive?

00:24:45.420 --> 00:24:46.020
Is Cleaner alive?

00:24:46.040 --> 00:24:46.610
Is Cleaner alive?

00:24:46.620 --> 00:24:49.790
Is Cleaner alive?" And if Cleaner's dead,
it says, "Oh," and it reports

00:24:49.790 --> 00:24:51.450
back to Whistleblower,
and it pages you or calls

00:24:51.590 --> 00:24:54.700
you on your cell phone or,
you know, wakes up your wife or

00:24:54.700 --> 00:24:56.580
something like that.

00:24:57.540 --> 00:24:59.500
I'm going to hand back to
Hagie in just one second,

00:24:59.500 --> 00:25:01.930
and we're going to take a
closer look at why we do the

00:25:01.970 --> 00:25:03.520
encoding in the way that we do.

00:25:03.520 --> 00:25:06.080
But this is a very quick,
high-level overview of

00:25:06.090 --> 00:25:07.720
what we've done this year.

00:25:07.720 --> 00:25:10.920
Last year and in previous years,
we've done 56K settings.

00:25:10.920 --> 00:25:12.710
Hands up,
any of you who actually watched any

00:25:12.710 --> 00:25:14.410
of the conferences on 56K modems?

00:25:14.420 --> 00:25:14.960
Perfect.

00:25:14.960 --> 00:25:15.680
Okay, good.

00:25:15.730 --> 00:25:17.580
So we made the right
decision in killing that.

00:25:17.770 --> 00:25:20.050
And so this year,
we're just doing 100 kilobits per

00:25:20.140 --> 00:25:26.930
second for those of you who are
on like a dual ISDN or the sort

00:25:26.930 --> 00:25:28.540
of low-end broadband connectivity.

00:25:28.630 --> 00:25:32.650
The mid-range broadband,
which is probably what most people watch,

00:25:32.760 --> 00:25:36.600
around 300 kilobits a second,
much better quality.

00:25:36.600 --> 00:25:38.980
Obviously,
both of these are RTSP streaming.

00:25:38.980 --> 00:25:39.780
They're not downloading.

00:25:39.780 --> 00:25:42.340
They're streaming in in real time.

00:25:42.340 --> 00:25:44.530
And then the DVD ROM,
I already explained about that

00:25:44.550 --> 00:25:47.580
at 900 kilobits because we do it
that way so we can fit that many.

00:25:47.620 --> 00:25:54.730
So I am going to hand back over to Hegi,
who's going to tell you

00:25:54.730 --> 00:25:55.790
how we do the encoding.

00:25:55.800 --> 00:25:56.680
Thank you, Hegi.

00:25:58.300 --> 00:29:32.800
[Transcript missing]

00:29:34.410 --> 00:29:36.520
As a customized output.

00:29:36.710 --> 00:29:41.450
That way all of the files that I'm
making can go right there to that folder.

00:29:41.460 --> 00:29:42.360
I know where they're going.

00:29:42.360 --> 00:29:45.770
And why this is really important
is back to the network,

00:29:45.770 --> 00:29:50.010
we really want to output these files
to essentially the folder for the

00:29:50.010 --> 00:29:54.820
QuickTime streaming server on the XServe,
a network share point to be picked

00:29:54.840 --> 00:29:57.380
up by the next step in the process,
etc.

00:29:57.380 --> 00:30:01.020
So having custom locations for
your projects is an important and

00:30:01.020 --> 00:30:03.210
powerful feature inside Cleaner.

00:30:03.560 --> 00:30:06.210
Now let's go ahead and
actually look at the settings.

00:30:06.220 --> 00:30:10.360
I'll double-click on the settings
window and I have my basic settings.

00:30:10.360 --> 00:30:14.060
This morning Jim gave
me some more settings.

00:30:14.060 --> 00:30:16.360
He had actually updated the settings
we've been working on for this.

00:30:16.360 --> 00:30:18.850
So he gave me the folder here,
and I'm gonna go ahead

00:30:18.850 --> 00:30:19.720
and take a look at those.

00:30:19.720 --> 00:30:23.510
What I can do is he just placed them
on my desktop and again I'll just drag

00:30:23.510 --> 00:30:25.260
them right into the settings area.

00:30:25.260 --> 00:30:28.660
One of the great things about Cleaner
6 for Mac is settings management.

00:30:28.660 --> 00:30:31.590
I can go ahead and drag settings
in and out if I wanted to give

00:30:31.590 --> 00:30:32.720
Jim a copy of my MPEG-4 test.

00:30:32.720 --> 00:30:36.700
I can just drag those off
to his FireWire drive here,

00:30:36.700 --> 00:30:38.060
and he's got a copy of those.

00:30:38.060 --> 00:30:40.640
So again, it's very flexible about
moving these settings.

00:30:40.640 --> 00:30:43.780
I don't need to restart in order
to use those settings again.

00:30:43.780 --> 00:30:48.480
So what I'll do is we'll take a
look at the 900k bit setting first.

00:30:48.480 --> 00:30:52.840
I'm gonna go ahead and apply that to
the project just initially so then

00:30:52.840 --> 00:30:56.440
we can step through the process here.

00:30:58.500 --> 00:31:03.680
Just make sure I did that right,
so select my setting and apply.

00:31:04.670 --> 00:31:05.330
There we go.

00:31:05.370 --> 00:31:07.090
I'm actually left-handed,
so I'm going to move

00:31:07.100 --> 00:31:08.000
to the other side here.

00:31:08.010 --> 00:31:09.340
This will be a little more efficient.

00:31:09.340 --> 00:31:12.070
You'll notice that there
is a crop on there,

00:31:12.070 --> 00:31:16.900
and it gives me a little indication of
the crop in the project column there.

00:31:16.920 --> 00:31:23.620
So, the settings window inside Cleaner
is really divided into two parts.

00:31:23.620 --> 00:31:27.210
The side on the left, the column,
are all of the default presets

00:31:27.290 --> 00:31:30.540
that come inside Cleaner 6,
as well as all of the settings

00:31:30.540 --> 00:31:33.340
that I've created as I've
worked with various clients.

00:31:33.380 --> 00:31:38.560
On the right side is really a
hierarchy of the various functions

00:31:38.560 --> 00:31:42.180
for the output format that you're
choosing to use here inside Cleaner.

00:31:42.180 --> 00:31:45.070
In this case,
we'll be discussing QuickTime,

00:31:45.070 --> 00:31:48.400
and we're creating MPEG-4
movies in QuickTime.

00:31:48.400 --> 00:31:52.920
Again, we could have gone just
with a straight .mp4 file,

00:31:52.920 --> 00:31:57.880
but we decided that we really wanted to
encase those or contain that media inside

00:31:57.880 --> 00:32:02.790
a QuickTime movie using the MPEG-4 codec,
so we could take advantage of FastStar.

00:32:02.800 --> 00:32:05.440
So again, that's why we actually have
it on a QuickTime movie.

00:32:05.440 --> 00:32:07.950
And you can see there listed
are some of the other formats

00:32:07.950 --> 00:32:09.220
that Cleaner does support.

00:32:09.220 --> 00:32:12.900
So again, because it's a .move,
the file suffix will be .move.

00:32:12.900 --> 00:32:15.560
A little bit of a legacy
thing at this point,

00:32:15.560 --> 00:32:18.900
but we always flatten and
cross-platform FastStar.

00:32:18.900 --> 00:32:21.240
You'll notice that I don't
have the prepare hint for

00:32:21.240 --> 00:32:22.560
streaming server checked.

00:32:22.560 --> 00:32:25.330
That's because there is a
problem currently with the

00:32:25.340 --> 00:32:29.010
QuickTime exporter for MPEG-4,
so we have to take care of

00:32:29.020 --> 00:32:31.670
that in the Apple script,
and we'll show you that

00:32:31.750 --> 00:32:32.720
demo a little bit later.

00:32:32.720 --> 00:32:35.050
So we do have a way of
working through that,

00:32:35.050 --> 00:32:37.510
and we're all going to go to
the feedback form and request

00:32:37.510 --> 00:32:39.660
that they fix that for us,
so we don't have to do that

00:32:39.660 --> 00:32:40.700
in the next session here.

00:32:40.720 --> 00:32:43.710
And compressing movie header, again,
a little more of a legacy

00:32:43.740 --> 00:32:46.440
thing at this point,
but trying to make the file size as

00:32:46.440 --> 00:32:50.720
small as possible means faster download,
means better user experience.

00:32:50.720 --> 00:32:54.520
The tracks tab inside Cleaner
is just an acknowledgement of

00:32:54.530 --> 00:32:56.720
the different types of tracks.

00:32:56.720 --> 00:32:59.240
If I was using Flash or MPEG,
I could choose to copy

00:32:59.240 --> 00:33:00.720
or process those tracks.

00:33:00.720 --> 00:33:02.640
So I'm not really doing that.

00:33:02.640 --> 00:33:04.640
I'm doing a whole lot
with the tracks tab.

00:33:04.640 --> 00:33:08.620
So the image tab,
now we're going to start to

00:33:08.620 --> 00:33:10.590
get into it a little bit.

00:33:10.640 --> 00:33:14.640
You'll notice that Jim has placed
a numeric crop on the video.

00:33:14.730 --> 00:33:17.150
What I can do is go ahead and
double-click on the project

00:33:17.160 --> 00:33:18.640
window and bring that up again.

00:33:18.640 --> 00:33:22.630
And you'll see that what he's done is
he set a framing in here to just cover

00:33:22.630 --> 00:33:27.640
the edges and to get rid of any possible
tape anomalies that might be in that.

00:33:27.640 --> 00:33:32.560
So again, I just discussed cropping
as an aesthetic thing,

00:33:32.560 --> 00:33:34.560
but you really want to take a look.

00:33:34.560 --> 00:33:37.520
Every piece of content
has its own consideration,

00:33:37.560 --> 00:33:39.560
so you really have to take
it on a case-by-case basis

00:33:39.560 --> 00:33:42.560
with regard to cropping there.

00:33:42.650 --> 00:33:44.560
You can also do a manual
crop if you need to.

00:33:44.560 --> 00:33:49.550
Image size, basically dictated in
this case by the client,

00:33:49.560 --> 00:33:50.560
if you will.

00:33:50.560 --> 00:33:52.560
So we're working with the sizes.

00:33:52.560 --> 00:33:58.560
The next parameter are -- now we get
into really the filters inside Cleaner

00:33:58.560 --> 00:34:02.470
and this whole idea of pre-processing.

00:34:02.480 --> 00:34:06.480
We talked a little bit the other
day about pre-processing for video.

00:34:06.480 --> 00:34:09.580
And again,
pre-processing is really important to

00:34:09.580 --> 00:34:11.480
preserve the quality as much as possible.

00:34:11.480 --> 00:34:14.480
We're capturing these
sessions on a DV cam tape.

00:34:14.480 --> 00:34:17.460
It looks very good,
and what we're trying to

00:34:17.460 --> 00:34:18.480
do is compress that down.

00:34:18.480 --> 00:34:21.470
So we always want to really
preserve the quality,

00:34:21.480 --> 00:34:23.480
maintain as much of the color balance.

00:34:23.480 --> 00:34:27.480
And really,
I'd go a little farther than maintain.

00:34:27.500 --> 00:34:32.390
They used to say that
editorial touches every frame.

00:34:32.420 --> 00:34:35.300
Recoding touches every frame as well.

00:34:35.330 --> 00:34:38.810
And that increasingly,
assets are delivered in

00:34:38.810 --> 00:34:40.320
a variety of formats.

00:34:40.320 --> 00:34:48.320
And especially in bandwidth-restricted
-- the Internet for video -- avenues,

00:34:48.320 --> 00:34:51.060
you really need to do everything
you can to make the video

00:34:51.060 --> 00:34:52.320
look as good as possible.

00:34:52.390 --> 00:34:55.320
And again, pre-processing is critical.

00:34:55.320 --> 00:34:57.320
It's the key to that.

00:34:57.320 --> 00:35:00.070
At Discrete,
we kind of have identified this

00:35:00.070 --> 00:35:02.320
process as called media mastering.

00:35:02.320 --> 00:35:06.400
And it's the most out of any particular
piece of content as you deploy it to

00:35:06.400 --> 00:35:11.240
a variety of formats and locations,
sizes, and bit rates.

00:35:11.240 --> 00:35:14.170
So getting into the pre-filtering,
the first thing I'll talk about

00:35:14.170 --> 00:35:15.200
a little bit is deinterlacing.

00:35:15.240 --> 00:35:18.770
Deinterlacing is the ability
to -- these video cameras

00:35:18.770 --> 00:35:21.210
shoot in alternating fields.

00:35:21.240 --> 00:35:25.240
So if you eliminate half of that,
it's a good way of reducing data.

00:35:25.240 --> 00:35:28.040
The adaptive deinterlace here,
what that does is only

00:35:28.130 --> 00:35:30.240
deinterlaces the pixels that move.

00:35:30.240 --> 00:35:32.240
So, well, what good is that?

00:35:32.240 --> 00:35:34.240
I'll be happy to show you.

00:35:34.240 --> 00:35:38.530
What I'm going to do is just scroll
through here where our subject is kind of

00:35:38.540 --> 00:35:40.240
throwing around his glass of water there.

00:35:40.370 --> 00:35:44.470
And then I'm going to bring
up the dynamic preview window.

00:35:46.300 --> 00:35:48.400
So this is giving me a preview.

00:35:48.460 --> 00:35:52.600
I have a before and after slider here.

00:35:52.650 --> 00:35:55.820
I can also go to an A/B-- oh,
I'm going to say my joke-- for

00:35:55.820 --> 00:35:58.350
an apples-to-apples comparison.

00:35:58.900 --> 00:48:26.300
[Transcript missing]

00:48:26.820 --> 00:48:44.670
Test.

00:48:44.710 --> 00:48:44.710
Again, save that back on the desktop.

00:48:44.710 --> 00:48:44.710
So what I've done is created just a
little piece of media that I can run

00:48:44.710 --> 00:48:44.710
through my watch folder to create,
to make sure that everything is working.

00:48:44.710 --> 00:48:44.710
You'll notice that when
I double-click on the folder,

00:48:44.710 --> 00:48:44.710
there's, I'm giving my secret away.

00:48:44.710 --> 00:48:44.710
Well,
I'm just going to go ahead and drag.

00:48:44.810 --> 00:48:47.700
We're going to put that
file into the watch folder.

00:48:47.730 --> 00:48:51.700
And what's going to happen is Cleaner's
going to pick that up and encode it.

00:48:51.870 --> 00:48:56.920
What it will also do is
create a folder structure.

00:48:57.300 --> 00:52:38.200
[Transcript missing]

00:52:38.350 --> 00:52:38.890
Thanks, Hagie.

00:52:38.910 --> 00:52:41.440
That was great.

00:52:41.560 --> 00:52:46.130
For those of you who haven't seen that
kind of nested watch folder or cascading

00:52:46.130 --> 00:52:51.340
watch folder functionality before,
it's a real eye-opener.

00:52:51.340 --> 00:52:54.000
As Hagie said,
this is an incredible way to distribute

00:52:54.020 --> 00:52:57.660
your encoding across multiple machines
that you never really have the touch.

00:52:57.770 --> 00:53:01.930
And it's definitely been absolutely
key to the entire way in which we

00:53:02.320 --> 00:53:06.080
built the workflow for this particular
-- Switch back to the slides,

00:53:06.080 --> 00:53:06.540
please.

00:53:06.990 --> 00:53:08.410
Oh yeah, slide please.

00:53:08.470 --> 00:53:08.820
Thank you.

00:53:08.820 --> 00:53:09.850
Sorry, I didn't see that.

00:53:09.850 --> 00:53:10.440
Thanks.

00:53:10.440 --> 00:53:16.780
So how do we actually take this
process that Hagie's just described

00:53:16.780 --> 00:53:20.760
and apply it to our problem?

00:53:20.760 --> 00:53:23.250
Well, first of all,
what we're doing is those

00:53:23.460 --> 00:53:26.300
exports that we looked at,
or that I described earlier,

00:53:26.300 --> 00:53:30.070
the Japanese and the English exports,
what we're doing is as soon as we've

00:53:30.160 --> 00:53:34.040
exported those from Final Cut Pro,
we're just dropping

00:53:34.250 --> 00:53:36.940
those into a receptacle,
a folder.

00:53:36.940 --> 00:53:41.800
Just drop them in and bang,
off they go down the river being encoded.

00:53:41.800 --> 00:53:45.410
So that's the last time you have
to see them until essentially you

00:53:45.410 --> 00:53:47.350
assemble them and review them.

00:53:47.370 --> 00:53:50.730
So really it's going to go through
all of that encoding process,

00:53:50.730 --> 00:53:54.750
being renamed and being taken through
the workflow all with hands-off.

00:53:54.800 --> 00:53:56.480
It's all completely unattended.

00:53:56.910 --> 00:54:00.400
Once they've been encoded
through that cascading process,

00:54:00.400 --> 00:54:02.970
they get then pushed
up to another server,

00:54:02.970 --> 00:54:05.710
which we call the repository,
and there they sit ready to be

00:54:06.000 --> 00:54:08.730
assembled into the different languages.

00:54:08.740 --> 00:54:11.490
As I mentioned before,
it's a completely headless process.

00:54:11.500 --> 00:54:14.480
You don't need to have monitors
attached to these computers.

00:54:14.500 --> 00:54:17.390
They don't even have to be in the same
room or even in the same building.

00:54:17.400 --> 00:54:20.220
You can utilize any computers
that happen to be around that

00:54:20.220 --> 00:54:21.750
you can install Cleaner on.

00:54:21.760 --> 00:54:23.980
They can be added to your workflow.

00:54:23.980 --> 00:54:26.660
And Whistleblower,
as I described earlier,

00:54:26.780 --> 00:54:29.530
is going to let you know if there
are any problems with those encoders.

00:54:29.620 --> 00:54:32.740
If Cleaner crashes for whatever reason
or something goes wrong with that

00:54:32.740 --> 00:54:36.170
computer and things always happen,
you will be notified.

00:54:36.280 --> 00:54:38.260
You'll be the first person to know.

00:54:38.360 --> 00:54:42.030
And it's very easy to set up a system
so that you do get paged or it sends an

00:54:42.030 --> 00:54:44.260
SMS message or it rings your cell phone.

00:54:44.370 --> 00:54:48.260
And it works really efficiently.

00:54:48.260 --> 00:54:50.430
As I said,
you don't have a monitor on the encoder,

00:54:50.430 --> 00:54:52.260
so how do we get to them?

00:54:52.260 --> 00:54:54.260
Well, we have Apple Remote Desktop on
every single encoder.

00:54:54.260 --> 00:54:58.660
And that enables me, wherever I am,
or whoever is administrating the project,

00:54:58.660 --> 00:55:01.660
to be able to look on and see
at any particular machine.

00:55:01.720 --> 00:55:05.170
If there's been a problem,
he or she can log in and see whether

00:55:05.170 --> 00:55:08.750
it's a problem that can be dealt with
manually through Apple Remote Desktop or

00:55:08.750 --> 00:55:11.590
whether the machine has to be restarted
remotely or something like that.

00:55:11.660 --> 00:55:13.760
And then lastly,
because we're using XSERVs,

00:55:13.850 --> 00:55:16.660
we can also take full
advantage of server status,

00:55:16.660 --> 00:55:18.940
which is a little app,
a little utility that comes

00:55:18.940 --> 00:55:22.660
with the XSERV that reports
to wherever you happen to be,

00:55:22.660 --> 00:55:26.540
everything about that particular
machine or the hardware configuration.

00:55:26.560 --> 00:55:27.540
And everything else.

00:55:27.540 --> 00:55:30.530
So let me give you a closer
look at how this works.

00:55:30.550 --> 00:55:31.540
This is encoder monitoring.

00:55:31.540 --> 00:55:34.540
This is automatic notification
with Whistleblower.

00:55:34.540 --> 00:55:38.530
That little client that I was describing
that James Sentman wrote for us,

00:55:38.740 --> 00:55:41.390
the Whistleblower process monitor,
you can see that up in the

00:55:41.390 --> 00:55:42.540
top left-hand corner there.

00:55:42.540 --> 00:55:43.540
That's running.

00:55:43.540 --> 00:55:45.540
It just sits there in the background.

00:55:45.540 --> 00:55:46.530
Very lightweight app.

00:55:46.540 --> 00:55:48.350
Doesn't take any processor cycles really.

00:55:48.570 --> 00:55:50.540
And it's just sitting there
looking at what's going on.

00:55:50.540 --> 00:55:54.140
And if it has a problem,
it's going to notify the

00:55:54.140 --> 00:55:56.420
Whistleblower main software.

00:55:56.420 --> 00:55:58.410
Which is running on a
totally different machine.

00:55:58.420 --> 00:55:59.420
Could be anywhere in the world.

00:55:59.420 --> 00:56:00.420
Doesn't matter.

00:56:00.420 --> 00:56:02.950
That's just sitting there looking at,
in fact, all of our machines are

00:56:02.950 --> 00:56:04.420
being monitored constantly.

00:56:04.420 --> 00:56:07.420
Both repositories, all the encoders,
all the capture machines.

00:56:07.420 --> 00:56:09.360
Everything's being monitored 24/7.

00:56:09.460 --> 00:56:13.360
So you've got a complete update on those.

00:56:13.430 --> 00:56:14.420
And you can see how it looks.

00:56:14.420 --> 00:56:17.050
If a machine goes down there,
you can see encoder 4

00:56:17.070 --> 00:56:18.420
has reported an error.

00:56:18.420 --> 00:56:21.300
It's not responding.

00:56:21.300 --> 00:56:24.300
And it immediately sends out
a signal to a pager saying,

00:56:24.300 --> 00:56:25.140
oh, encoder 4 is down.

00:56:25.300 --> 00:56:26.290
Come and fix me, please.

00:56:26.300 --> 00:56:29.290
So that's the use of Whistleblower.

00:56:29.300 --> 00:56:31.290
App Remote Desktop.

00:56:31.300 --> 00:56:33.290
This is a great application.

00:56:33.300 --> 00:56:36.300
And really well integrated, of course,
with Mac OS X.

00:56:36.300 --> 00:56:38.060
In this particular example,
I'm looking at four

00:56:38.160 --> 00:56:39.300
different encoders there.

00:56:39.300 --> 00:56:42.300
I can just move around.

00:56:42.300 --> 00:56:45.300
I can take one encoder,
let it fill the screen.

00:56:45.300 --> 00:56:46.240
Or I can just have four.

00:56:46.440 --> 00:56:47.280
Or I can cycle.

00:56:47.340 --> 00:56:49.270
I prefer the cycling thing
where it just steps through.

00:56:49.360 --> 00:56:51.300
So every now and then I can
have it up on a monitor,

00:56:51.300 --> 00:56:53.180
like on a plasma or something.

00:56:53.180 --> 00:56:56.180
And you can just keep an eye
out in your administration room.

00:56:56.200 --> 00:56:58.180
As to what's going on in every encoder.

00:56:58.180 --> 00:57:00.900
And if it's like kernel panic,
then you know you've got to do

00:57:00.900 --> 00:57:03.180
something with that particular machine.

00:57:03.180 --> 00:57:05.180
And then, of course,
there's server status.

00:57:05.180 --> 00:57:07.610
And this is really reporting
everything about the hardware of

00:57:07.610 --> 00:57:09.180
the machine that you're running on.

00:57:09.180 --> 00:57:11.140
So not specifically the
cleaner application.

00:57:11.220 --> 00:57:14.170
It's pinging that IP address.

00:57:14.290 --> 00:57:17.180
It's letting you know
what's going on with it.

00:57:17.180 --> 00:57:19.180
Things like temperature.

00:57:19.180 --> 00:57:20.180
Whether you've got full power.

00:57:20.200 --> 00:57:22.170
Whether the blowers are on correctly.

00:57:22.190 --> 00:57:24.150
You can restart the machines.

00:57:24.190 --> 00:57:25.180
You can -- and if you've identified it,
you can -- you can just

00:57:25.180 --> 00:57:25.180
go back to the machine.

00:57:25.190 --> 00:57:27.180
And if you've identified a problem,
you know,

00:57:27.180 --> 00:57:29.180
you'll see in a minute how many of
these XSERVs we've got in racks.

00:57:29.180 --> 00:57:31.180
And it's like, jeez, which one is which?

00:57:31.180 --> 00:57:34.110
You can actually set a little flag here,
the system identifier.

00:57:34.180 --> 00:57:36.180
Like you click that
button for encoder one.

00:57:36.180 --> 00:57:38.180
And then you turn to your rack.

00:57:38.180 --> 00:57:40.170
And the little light will be on.

00:57:40.180 --> 00:57:42.180
So you'll be able to see, oh,
that's the encoder number.

00:57:42.180 --> 00:57:43.180
418.

00:57:43.180 --> 00:57:45.180
And that's the one that you
need to replace the drives on.

00:57:46.960 --> 00:57:49.090
Okay,
let's talk about the assembly process,

00:57:49.170 --> 00:57:50.680
because I don't want to
run out of too much time.

00:57:50.680 --> 00:57:51.870
We've still got a bit to tell you about.

00:57:52.060 --> 00:57:54.280
Automation via AppleScript.

00:57:54.280 --> 00:57:59.040
This is really sort of the glue for,
it's very specific to what Apple wanted,

00:57:59.040 --> 00:58:02.280
which was these multiple language
versions that have to be assembled

00:58:02.280 --> 00:58:04.080
and annotated as QuickTime movies.

00:58:04.080 --> 00:58:06.460
So as I mentioned before,
what we're doing is we're coming

00:58:06.540 --> 00:58:08.950
out of the encoding system
up to the central repository.

00:58:09.050 --> 00:58:10.030
So here are all these movies.

00:58:10.110 --> 00:58:10.830
They're in folders.

00:58:10.910 --> 00:58:12.180
They've got all these correct names.

00:58:12.180 --> 00:58:13.710
They're all ready to
have stuff done to them.

00:58:13.960 --> 00:58:16.180
We build the Japanese and
the DVD versions in

00:58:16.180 --> 00:58:18.260
QuickTime Player using AppleScript.

00:58:18.260 --> 00:58:21.450
It's all completely
automated with those scripts,

00:58:21.460 --> 00:58:25.700
and we log everything about what
we've done into a text log as well.

00:58:25.700 --> 00:58:28.590
We could be parsing that text log if
we want and bringing that information

00:58:28.590 --> 00:58:31.320
back into an online database so
that we can see what's going on.

00:58:31.320 --> 00:58:34.020
In fact, we do something similar to that,
although we don't parse the log.

00:58:34.040 --> 00:58:36.790
We have another AppleScript that
sort of gives us a health

00:58:36.800 --> 00:58:40.320
check on the whole workflow,
so I'll show you what that looks like.

00:58:40.320 --> 00:58:42.060
So what do the scripts do?

00:58:42.060 --> 00:58:43.280
Okay, well, they assemble.

00:58:43.630 --> 00:58:46.640
They assemble from the individual
files or from folders of files.

00:58:46.640 --> 00:58:48.740
I'm going to show you
the example in a second,

00:58:48.850 --> 00:58:50.200
just assembling a single file.

00:58:50.200 --> 00:58:52.780
Of course, we don't do it manually,
do this one, do that one.

00:58:52.880 --> 00:58:55.760
We just batch process everything
that gets dropped into a folder.

00:58:55.780 --> 00:58:57.920
We check for possible errors.

00:58:58.040 --> 00:59:00.360
So how does a script check for errors?

00:59:00.570 --> 00:59:03.210
Well, typically,
we found that errors might be

00:59:03.510 --> 00:59:07.070
just corrupted files where they
didn't get encoded properly.

00:59:07.080 --> 00:59:09.010
And what we do is we
do some basic checks.

00:59:09.110 --> 00:59:11.570
We look at the exact sample
length of each track,

00:59:11.630 --> 00:59:13.240
and we compare it to the other ones.

00:59:13.240 --> 00:59:16.120
And if they're even slightly out,
we're told about that because they

00:59:16.120 --> 00:59:19.290
should be pretty much the same,
certainly within like a second or two,

00:59:19.290 --> 00:59:19.830
right?

00:59:19.850 --> 00:59:21.550
Otherwise,
your video track is going to be

00:59:21.550 --> 00:59:23.120
out of sync with your audio track.

00:59:23.120 --> 00:59:24.120
We add annotations.

00:59:24.120 --> 00:59:28.880
Remember, Hege said earlier that we
don't do that in Cleaner.

00:59:28.880 --> 00:59:30.450
We do that afterwards in this script.

00:59:30.560 --> 00:59:32.150
It's much easier just to
batch process all of these

00:59:32.160 --> 00:59:34.780
annotations because we're hinting,
and you have to do annotating

00:59:34.780 --> 00:59:37.740
before you do your hinting,
not after you do your hinting,

00:59:37.740 --> 00:59:40.580
because if you do,
then your annotations don't get

00:59:40.580 --> 00:59:42.380
carried over into the hints.

00:59:42.380 --> 00:59:42.840
We hint.

00:59:42.920 --> 00:59:45.060
We do the streaming versions,
and then we set these

00:59:45.110 --> 00:59:47.870
flags for the DVD versions,
these alternate language tracks,

00:59:47.870 --> 00:59:49.460
which is a pretty cool process.

00:59:49.480 --> 00:59:51.700
I'll show you how that works, too.

00:59:51.760 --> 00:59:53.310
Oh,
time for me to show you how that works.

00:59:53.320 --> 00:59:54.890
Okay.

00:59:55.870 --> 00:59:58.010
Let's have this laptop up here.

00:59:58.130 --> 01:00:00.270
So here are some scripts.

01:00:00.320 --> 01:00:04.180
Let's first of all look at what
we've done here for the English one,

01:00:04.190 --> 01:00:06.200
because this is the simplest
Apple script of all.

01:00:06.200 --> 01:00:10.040
I'm just going to open this up,
and I'm really not going to

01:00:10.040 --> 01:00:13.960
bother to go through this
line by line for two reasons.

01:00:13.960 --> 01:00:16.160
First of all, I don't know what it means,
line by line.

01:00:16.740 --> 01:00:18.860
But secondly,
I don't really want to bore you with all

01:00:18.870 --> 01:00:20.660
the sort of intricacies of this script.

01:00:20.920 --> 01:00:25.570
There's a lot of sort of setup
and checking and things like that.

01:00:25.610 --> 01:00:28.940
What we're doing is we're just
setting up the script to start with,

01:00:28.940 --> 01:00:32.400
then we have some code that allows
us to set up whether you're choosing

01:00:32.420 --> 01:00:33.960
a file or choosing a folder.

01:00:33.960 --> 01:00:37.530
And then going back down through here,
we've got the sort of core code

01:00:37.540 --> 01:00:40.520
about how to process a file
or how to process a folder.

01:00:40.520 --> 01:00:41.930
Then we have an interesting thing here.

01:00:42.060 --> 01:00:43.050
This is actually pretty neat.

01:00:43.110 --> 01:00:43.760
This is a hack.

01:00:43.760 --> 01:00:46.580
God bless the QuickTime and Apple script.

01:00:46.780 --> 01:00:51.980
This is a hack whereby we actually
use a thing called a QT export to

01:00:52.000 --> 01:00:57.620
be able to set up parameters for,
in this case, hinting a movie.

01:00:57.620 --> 01:01:01.390
We actually have a file that tells
the Apple script what to do within

01:01:01.390 --> 01:01:05.040
QuickTime when it's doing an export,
because when you export from QuickTime,

01:01:05.040 --> 01:01:06.400
you have lots of different options.

01:01:06.400 --> 01:01:09.840
And usually what QuickTime Player does
is it just remembers the

01:01:09.840 --> 01:01:12.740
last thing that you did,
but what if you did something

01:01:12.740 --> 01:01:14.350
different the last time?

01:01:14.360 --> 01:01:15.520
You have to set up a template.

01:01:15.520 --> 01:01:18.560
Well, currently,
the... The only way to do that is

01:01:18.640 --> 01:01:22.280
a little hack called a QTES file,
and this is where we set

01:01:22.280 --> 01:01:24.980
up the parameters for that,
and I'll show you how I use

01:01:24.990 --> 01:01:26.520
a QTES file in just a second.

01:01:26.520 --> 01:01:30.970
We got sort of open and then do this,
do that and do this,

01:01:30.970 --> 01:01:33.400
and let me just scroll down.

01:01:33.400 --> 01:01:34.230
You see it's quite a big script.

01:01:34.290 --> 01:01:40.160
And basically, we go down and then we log
everything here as well.

01:01:40.160 --> 01:01:43.210
So essentially, what this script is doing
is it's opening it up,

01:01:43.210 --> 01:01:46.490
it's adding some annotations,
and then it's saving it as a hinted.

01:01:46.740 --> 01:01:47.840
So it's a quick time movie.

01:01:47.840 --> 01:01:50.680
So if I just go ahead
and look at some source,

01:01:50.710 --> 01:01:52.980
here's some source right here.

01:01:52.980 --> 01:01:54.520
So here's the input.

01:01:54.520 --> 01:01:57.330
Here's some stuff that has just
come fresh out of our encoder.

01:01:57.340 --> 01:01:59.690
So you'll see here,
I'm going to do the 300K file

01:01:59.690 --> 01:02:01.080
because it's just shorter.

01:02:01.080 --> 01:02:04.140
That's the naming convention,
the session ID, the language,

01:02:04.140 --> 01:02:05.120
and the bit rate.

01:02:05.340 --> 01:02:07.390
That's going to change in a minute,
but this is what it

01:02:07.390 --> 01:02:08.570
looks like on the way in.

01:02:08.580 --> 01:02:12.310
And we use different naming
conventions this side of the script

01:02:12.310 --> 01:02:16.210
so as not to confuse with the
file that's come out the other end.

01:02:16.740 --> 01:02:19.890
So I'm going to process
that particular movie,

01:02:19.940 --> 01:02:23.590
and so I can just manually run
this just for the sake of it.

01:02:23.740 --> 01:02:25.740
So I'm going to just run my script.

01:02:25.740 --> 01:02:26.730
I choose a file.

01:02:26.750 --> 01:02:29.690
I'm going to choose that
English 300 kilobit second one.

01:02:29.750 --> 01:02:30.680
It's going to process it.

01:02:30.750 --> 01:02:35.630
It's asking for that QTS template.

01:02:35.760 --> 01:02:36.740
There it is.

01:02:36.740 --> 01:02:40.350
That's telling it that I wanted it to
be a hinted movie as opposed to a not

01:02:40.350 --> 01:02:42.740
hinted MPEG-2 movie or something else.

01:02:42.800 --> 01:02:43.740
So you can set up all these templates.

01:02:43.740 --> 01:02:44.700
You see it's very neat.

01:02:44.740 --> 01:02:46.720
And now I choose the output folder.

01:02:46.740 --> 01:02:49.070
You only have to do that once,
and then it's going to do it

01:02:49.070 --> 01:02:50.730
for every other thing you do.

01:02:50.830 --> 01:02:51.740
And it's done.

01:02:51.740 --> 01:02:52.740
It's exported it.

01:02:52.740 --> 01:02:53.740
It's ready to go.

01:02:53.740 --> 01:02:55.740
And you can see it's dropped
into the output folder.

01:02:55.740 --> 01:02:56.700
There's my movie.

01:02:56.780 --> 01:02:57.660
It's been opened.

01:02:57.760 --> 01:02:58.740
It's been hinted.

01:02:58.740 --> 01:03:00.570
It's been exported and annotated.

01:03:00.740 --> 01:03:04.740
If I open that up,
you can see that it's got a name now,

01:03:04.740 --> 01:03:06.740
and we've intelligently
given it that name.

01:03:06.740 --> 01:03:10.710
We looked at the file name,
and then we extracted this number,

01:03:10.710 --> 01:03:12.740
and we created a title for it.

01:03:12.740 --> 01:03:15.740
So all of that's done
in an automated fashion.

01:03:15.860 --> 01:03:18.450
And if we actually look here,
you can see that it's now

01:03:18.450 --> 01:03:22.740
a hinted movie as well,
whereas it wasn't on the way in.

01:03:22.820 --> 01:03:24.730
So that's how we do the English.

01:03:24.880 --> 01:03:26.430
Now,
it gets a little bit more complicated

01:03:26.500 --> 01:03:28.920
now as we get into the Japanese,
because what we're doing

01:03:28.920 --> 01:03:31.200
with the Japanese is we're
opening the English version,

01:03:31.200 --> 01:03:33.740
stripping out the English audio,
pasting in the Japanese audio,

01:03:33.740 --> 01:03:35.900
comparing the length of
the Japanese audio with

01:03:35.900 --> 01:03:38.740
the length of the video,
make sure they're not too different,

01:03:38.740 --> 01:03:40.740
i.e., is it the wrong audio track?

01:03:40.740 --> 01:03:42.650
And then we're adding
annotations and hinting it.

01:03:42.800 --> 01:03:44.740
And again, fully automated.

01:03:44.740 --> 01:03:46.740
So we're going to do this.

01:03:46.740 --> 01:03:47.740
Puppy up.

01:03:47.960 --> 01:03:48.510
Hit run.

01:03:48.750 --> 01:03:49.580
Run the script.

01:03:49.740 --> 01:03:50.740
Choose the file.

01:03:50.740 --> 01:03:52.740
This time we're going
to choose the Japanese.

01:03:52.750 --> 01:03:54.650
Remember, this is just audio only.

01:03:54.760 --> 01:03:55.740
This is not video.

01:03:55.740 --> 01:03:57.740
It's just an audio only file.

01:03:57.740 --> 01:03:59.740
And just open up the Japanese.

01:03:59.740 --> 01:04:04.730
Select the export settings that tells it
exactly what we want to do with the file.

01:04:04.790 --> 01:04:06.740
And choose the output folder.

01:04:06.740 --> 01:04:07.690
And off it goes.

01:04:07.780 --> 01:04:09.730
It opens up the Japanese audio,
copies it, pastes it, done.

01:04:09.790 --> 01:04:11.740
Hinted, annotated, completely done.

01:04:11.740 --> 01:04:13.740
Less than a second to
do that entire thing.

01:04:13.740 --> 01:04:15.660
And there it is dropped
into the output folder.

01:04:15.760 --> 01:04:16.740
We open that up.

01:04:16.740 --> 01:04:18.730
Again, it's got the correct name.

01:04:18.740 --> 01:04:19.740
It's hinted it correctly.

01:04:19.740 --> 01:04:20.640
Got the information.

01:04:20.760 --> 01:04:23.740
And it's done.

01:04:23.740 --> 01:04:26.740
So we can just look at the -- no,
we'll look at the log in a minute.

01:04:26.740 --> 01:04:28.730
Now let's look at the last one,
the DVD assembly,

01:04:28.730 --> 01:04:31.730
which is more complicated still.

01:04:33.550 --> 01:04:35.850
This is doing quite a bit more,
because this is setting

01:04:35.860 --> 01:04:40.400
alternate language flags as well,
and it has two language tracks in it.

01:04:40.400 --> 01:04:43.590
And if we zip all the
way down to about here,

01:04:43.590 --> 01:04:48.870
you can see right here, we have,
this is the code that sets track one,

01:04:48.970 --> 01:04:51.400
the language track of track one,
which is the English,

01:04:51.400 --> 01:04:54.620
and the language track of track two,
and then the various alternates of... So,

01:04:54.620 --> 01:04:56.920
if it detects that you're
on a Japanese computer,

01:04:56.960 --> 01:04:59.390
it will automatically
play the Japanese audio.

01:04:59.470 --> 01:05:00.730
If you put the disk into
an English computer,

01:05:00.800 --> 01:05:02.400
it will automatically
play the English audio.

01:05:02.400 --> 01:05:03.860
So it's totally intelligent.

01:05:04.010 --> 01:05:05.710
Let's run that.

01:05:06.240 --> 01:05:07.960
Run the script.

01:05:08.190 --> 01:05:09.390
Choose the file.

01:05:09.470 --> 01:05:10.530
Choose the input.

01:05:10.600 --> 01:05:14.580
So we're choosing the Japanese 900
kilobit per second audio.

01:05:14.630 --> 01:05:16.710
You notice I'm not
choosing the English audio,

01:05:16.760 --> 01:05:17.540
the English video.

01:05:17.540 --> 01:05:20.760
It's intelligently saying, oh,
you want session number 601 Japanese?

01:05:20.870 --> 01:05:22.910
Then that means you need
session 601 English,

01:05:22.930 --> 01:05:23.270
right?

01:05:23.370 --> 01:05:24.780
Yes, OK, let's do it.

01:05:24.780 --> 01:05:26.100
You can see it's piecing it all together.

01:05:26.100 --> 01:05:27.560
It's moving some tracks around.

01:05:27.640 --> 01:05:28.460
It's going to rewind.

01:05:28.460 --> 01:05:29.340
It's going to select none.

01:05:29.360 --> 01:05:30.230
It's done.

01:05:30.350 --> 01:05:33.200
And now we can close that script.

01:05:33.590 --> 01:05:36.490
And we can go and look in the log here.

01:05:36.500 --> 01:05:39.260
There's-- now you notice it's
given all of these different names,

01:05:39.290 --> 01:05:40.250
you see, as well.

01:05:40.400 --> 01:05:42.550
So we can identify now
that's the finished movie,

01:05:42.560 --> 01:05:44.240
whereas that's the input movie.

01:05:44.320 --> 01:05:45.240
There's the DVD movie.

01:05:45.240 --> 01:05:47.820
It used to be called 900,
but what does that mean?

01:05:47.910 --> 01:05:50.610
That's the important
thing that it's for DVD.

01:05:50.700 --> 01:05:53.660
And if we look at this,
we can see now-- there we go.

01:05:53.660 --> 01:05:56.740
Two soundtracks ordered correctly.

01:05:56.820 --> 01:05:59.670
If we look at soundtrack one,
at the alternate,

01:05:59.880 --> 01:06:02.220
the alternate of soundtrack
one is soundtrack two.

01:06:02.330 --> 01:06:04.500
And if we look at soundtrack two,
the alternate of soundtrack two,

01:06:04.500 --> 01:06:06.580
which is language, is one.

01:06:06.730 --> 01:06:10.220
So it's like if not Japanese,
then English, or if not English,

01:06:10.240 --> 01:06:11.440
then Japanese.

01:06:11.550 --> 01:06:14.970
And if you wanted to do this manually,
you could play this delightful clip

01:06:14.980 --> 01:06:19.070
of Ian Ritchie here and hear him
being simultaneously translated.

01:06:19.080 --> 01:06:20.380
Good morning, everybody.

01:06:20.380 --> 01:06:27.020
Welcome out to the QuickTime session 601,
how to-- 601.

01:06:27.100 --> 01:06:28.120
Oh, there you go.

01:06:28.170 --> 01:06:28.960
Perfect.

01:06:29.050 --> 01:06:30.020
OK, pretty cool.

01:06:30.130 --> 01:06:33.000
The EQ was nothing to do with us on that,
Japanese I should point out.

01:06:33.000 --> 01:06:34.360
That was how it came to us.

01:06:34.440 --> 01:06:36.550
So that gives you an idea of
how these assembly scripts work.

01:06:36.680 --> 01:06:38.560
Now obviously what I've
done here is I've just gone,

01:06:38.560 --> 01:06:40.390
let's select this one,
let's select that one.

01:06:40.620 --> 01:06:43.380
These scripts I just put together
purely for this demonstration.

01:06:43.490 --> 01:06:45.280
This is completely faceless.

01:06:45.610 --> 01:06:46.700
You never see these scripts.

01:06:46.700 --> 01:06:47.580
They just run in the background.

01:06:47.580 --> 01:06:48.860
They're watching folders.

01:06:48.960 --> 01:06:50.320
Stuff gets dropped in, bang.

01:06:50.320 --> 01:06:52.160
They just automatically
process this stuff.

01:06:52.300 --> 01:06:56.580
There's never any human interaction
with these scripts at all.

01:06:56.780 --> 01:07:01.660
And the logs,
because I like to keep paper wrapped

01:07:01.860 --> 01:07:05.160
and records of all these things,
I get the logs emailed to me so I can

01:07:05.160 --> 01:07:06.800
see everything's been done correctly.

01:07:06.800 --> 01:07:07.310
There we go.

01:07:07.420 --> 01:07:08.300
Japanese was done.

01:07:08.300 --> 01:07:09.900
Yeah,
there was no difference in the audio.

01:07:09.900 --> 01:07:11.020
So all those were great.

01:07:11.140 --> 01:07:12.090
They lasted 20 seconds.

01:07:12.210 --> 01:07:15.940
So we have a good record
of exactly what was done.

01:07:15.940 --> 01:07:18.290
And as I said, you could be parsing
these into a database,

01:07:18.390 --> 01:07:20.810
but we actually have a different system,
which I'm not going to bore you with

01:07:20.910 --> 01:07:23.320
because it's incredibly proprietary.

01:07:23.450 --> 01:07:29.320
And so-- So what am I showing you now?

01:07:29.320 --> 01:07:29.820
Oh, yes.

01:07:29.820 --> 01:07:31.320
So I'm going to go back
over to the slides.

01:07:31.360 --> 01:07:32.100
Thank you.

01:07:32.120 --> 01:07:34.060
Okay.

01:07:36.050 --> 01:07:39.960
So this is,
now we've got out of the encoding

01:07:40.040 --> 01:07:41.720
system and done all this,
where does all that happen?

01:07:41.720 --> 01:07:42.550
Well, this is where it happens.

01:07:42.560 --> 01:07:44.790
It happens in this one rack.

01:07:45.040 --> 01:07:50.330
So in the middle there,
below the Asante switch,

01:07:51.350 --> 01:08:21.280
and the team at Asante Switch.

01:08:21.300 --> 01:08:51.240
Thank you.

01:08:51.300 --> 01:08:54.410
Oh, and the big thing on the top,
the PowerFile R200, really,

01:08:54.410 --> 01:08:55.630
really amazing device.

01:08:55.760 --> 01:08:56.770
You should really look at this.

01:08:56.770 --> 01:09:00.850
If you're very serious about
doing any kind of archiving,

01:09:00.850 --> 01:09:04.030
the PowerFile is a DVD RAM-based jukebox.

01:09:04.060 --> 01:09:07.540
It takes 200 disks,
and we've automated the whole

01:09:07.540 --> 01:09:09.600
archiving process out to DVD.

01:09:09.600 --> 01:09:13.040
So when these files have
been finished and assembled,

01:09:13.040 --> 01:09:17.890
they're automatically written out to DVD,
so we don't have to put disks in.

01:09:17.890 --> 01:09:21.040
200 should be plenty for this project.

01:09:21.300 --> 01:09:24.270
These are the compressed files,
not the uncompressed files.

01:09:24.270 --> 01:09:26.850
You'd need a lot more
than 200 disks for that.

01:09:26.900 --> 01:09:30.230
But the PowerFile R200 is great,
and what makes it possible to add

01:09:30.320 --> 01:09:33.240
to this workflow is just last week,
PowerFile came out with the

01:09:33.320 --> 01:09:37.000
Mac OS X version of their MediaFinder
software that makes that possible.

01:09:37.000 --> 01:09:40.240
So thanks to PowerFile for
giving us one of those.

01:09:42.450 --> 01:09:46.240
Okay, so before we sort of wrap up,
which we should do fairly soon,

01:09:46.240 --> 01:09:49.080
the workflow monitor
is a really neat thing.

01:09:49.270 --> 01:09:52.920
And that lets, we have this projected,
we have a big room where

01:09:53.080 --> 01:09:56.130
we're doing all of this work,
and we have a big drop-down

01:09:56.280 --> 01:09:57.580
thing with a LCD projector.

01:09:57.640 --> 01:09:59.820
And this is projected up on that screen.

01:09:59.820 --> 01:10:02.630
So at any time,
I can look over and I can say, okay,

01:10:02.630 --> 01:10:05.810
what's exactly the status
of this track or that track?

01:10:05.860 --> 01:10:08.390
As you know, there are multiple tracks
in the WWDC conference.

01:10:08.790 --> 01:10:11.720
In this example,
I'm using track 700 from this year,

01:10:11.820 --> 01:10:13.410
which is the QuickTime track.

01:10:13.440 --> 01:10:16.680
This is just populated with bogus data,
because obviously we haven't

01:10:16.710 --> 01:10:17.910
started encoding yet.

01:10:17.950 --> 01:10:21.570
But this is what it would look like,
hopefully just a few days from now,

01:10:21.600 --> 01:10:25.310
where I can look up at the chart and say,
okay, well, I can see session 700

01:10:25.350 --> 01:10:28.280
has been fully processed,
captured, encoded at all bit rates,

01:10:28.280 --> 01:10:29.420
assembled at all bit rates.

01:10:29.480 --> 01:10:32.690
It hasn't been approved yet,
and so thus it hasn't been archived.

01:10:32.720 --> 01:10:35.420
And I can look down and say, ooh,
we haven't got very far in session 702,

01:10:35.440 --> 01:10:36.770
but I'd needle someone about that.

01:10:36.820 --> 01:10:38.760
704, great, that's been approved.

01:10:38.760 --> 01:10:39.820
It's been archived.

01:10:39.950 --> 01:10:42.040
We can put that to bed,
and so on and so on.

01:10:42.070 --> 01:10:44.910
And this is all totally
Apple script and FileMaker driven,

01:10:44.910 --> 01:10:47.820
this display system,
and it's web-based on a browser.

01:10:47.880 --> 01:10:49.750
So a very,
very nice way of being able to see

01:10:49.750 --> 01:10:51.860
exactly what's going through the process.

01:10:51.860 --> 01:10:54.610
So if my phone starts to ring and
I have someone from the developer

01:10:54.710 --> 01:10:57.520
relations giving me a hassle
about where session 700 is,

01:10:57.560 --> 01:11:00.910
I can tell them it's their fault
because they haven't approved it yet.

01:11:00.980 --> 01:11:02.340
Okay.

01:11:02.340 --> 01:11:06.840
Last but not least, and unfortunately,
this is not quite as fully fledged

01:11:06.840 --> 01:11:08.760
a demo as I would have liked.

01:11:08.760 --> 01:11:11.720
Thanks to the wonderful
security of Apple's firewall,

01:11:11.720 --> 01:11:15.430
I was unable today to, this afternoon,
to actually punch through to be

01:11:15.500 --> 01:11:19.640
able to show you this server,
which is running down in Cupertino, alas.

01:11:19.640 --> 01:11:21.080
But I can give you the
general gist of it,

01:11:21.080 --> 01:11:22.880
and I can show you the
actual FileMaker source.

01:11:22.960 --> 01:11:26.800
What I can't show you is it
actually running in a browser.

01:11:26.890 --> 01:11:29.720
I just,
I couldn't get access even with VPN.

01:11:29.720 --> 01:11:32.230
So, okay, so what does this do?

01:11:32.240 --> 01:11:36.640
Well, the whole FileMaker-based
thing enables us to,

01:11:36.750 --> 01:11:38.650
enables the client.

01:11:38.660 --> 01:11:43.460
To look at all of this content and give
feedback and accept or reject sessions.

01:11:43.490 --> 01:11:47.110
They can be inside or outside the file,
hopefully outside the

01:11:47.110 --> 01:11:48.630
firewall by next week.

01:11:48.640 --> 01:11:51.200
And so the Apple reviewers
can be anybody,

01:11:51.200 --> 01:11:53.710
and they can be sort of assigned tasks.

01:11:53.740 --> 01:11:55.880
I'm sure, Amy, you'll be doing some
reviewing at some point.

01:11:56.010 --> 01:11:57.810
You know,
everybody gets to review sessions,

01:11:57.810 --> 01:12:00.400
and you really have to because
you're looking for content.

01:12:00.400 --> 01:12:01.810
You're listening to
what people are saying,

01:12:02.060 --> 01:12:03.240
making sure they didn't make mistakes.

01:12:03.300 --> 01:12:07.470
It's very important that the
message is communicated correctly.

01:12:07.560 --> 01:12:08.760
So it's not just about, does the.

01:12:08.760 --> 01:12:09.480
Does the encoding look okay?

01:12:09.480 --> 01:12:10.620
Of course the encoding looks okay.

01:12:10.620 --> 01:12:13.230
It's about the content of
that particular session.

01:12:13.240 --> 01:12:17.750
So, and there's an admin mode,
which allows people like Hagee and myself

01:12:17.750 --> 01:12:20.290
to sort of get in there and fix things.

01:12:20.300 --> 01:12:24.320
If Apple say, oh, this one's rejected,
we can use that same interface to

01:12:24.320 --> 01:12:28.750
resubmit that particular thing back
into the workflow for whatever reason.

01:12:28.760 --> 01:12:33.760
And this web-based review process really
does speed up the whole review process.

01:12:33.760 --> 01:12:36.020
And again, it's one of the bottlenecks
that we talked about earlier.

01:12:36.040 --> 01:12:38.710
The bottleneck is either on the input,
the tape coming in.

01:12:38.790 --> 01:12:40.140
Because we don't get them,
so that's a bottleneck.

01:12:40.230 --> 01:12:42.940
Or it's in getting them approved.

01:12:42.940 --> 01:12:46.120
So what we hope to see is lots
of green lights in that workflow

01:12:46.350 --> 01:12:50.150
thing up until sort of red lights
are okay in the approval thing.

01:12:50.160 --> 01:12:53.240
But red lights are not okay in the other
columns that are our responsibility.

01:12:53.240 --> 01:12:56.960
So if we can just go back
to the laptop very quickly.

01:12:56.960 --> 01:13:00.500
I'm just going to show you what
this looks like in FileMaker.

01:13:00.600 --> 01:13:02.240
It doesn't look very much.

01:13:02.280 --> 01:13:05.400
It looks much more sexy in a web browser.

01:13:05.400 --> 01:13:08.780
But this is basically how
the database sort of hangs.

01:13:08.780 --> 01:13:10.160
It hangs together.

01:13:10.160 --> 01:13:13.160
We have the session ID and the
name of the session at the top.

01:13:13.160 --> 01:13:16.590
We have a status here that lets
us see whether it's been accepted,

01:13:16.590 --> 01:13:18.160
rejected, or reviewed.

01:13:18.160 --> 01:13:20.940
The length in there,
whether it's been pushed

01:13:20.940 --> 01:13:22.160
to the FTP or not.

01:13:22.230 --> 01:13:23.150
Whether it's been released.

01:13:23.160 --> 01:13:25.130
In other words, whether it's something
that we can now archive.

01:13:25.160 --> 01:13:30.070
We have the URLs to the sample.

01:13:30.160 --> 01:13:31.980
Where do these movies actually live?

01:13:32.300 --> 01:13:34.160
Well,
they have to live at a particular URL.

01:13:34.160 --> 01:13:37.160
And don't try hacking that because
I invented that IP just for this session.

01:13:38.780 --> 01:13:40.780
And so that's where the movies live.

01:13:40.780 --> 01:13:42.780
The database knows where the movie is.

01:13:42.780 --> 01:13:44.780
It doesn't have to be
on the same machine.

01:13:44.780 --> 01:13:46.780
It's on a separate server altogether.

01:13:46.780 --> 01:13:48.780
There's just some sort
of internal stuff here.

01:13:48.780 --> 01:13:50.780
Internal notes.

01:13:50.780 --> 01:13:52.780
And these are the notes that
somebody like at Apple would submit.

01:13:52.780 --> 01:13:54.780
Not through this interface,
but through the web interface.

01:13:54.780 --> 01:13:56.780
They're sitting there watching a session.

01:13:56.800 --> 01:13:59.660
And they'll say,
"Ian Ritchie just said something that

01:13:59.660 --> 01:14:02.780
he can't possibly say in that session."
And they'll write in here that.

01:14:02.940 --> 01:14:04.780
And we will get notified of that.

01:14:04.780 --> 01:14:08.780
And we can then make the arrangements
for that thing to be re-edited.

01:14:08.810 --> 01:14:11.780
And then below that we just
have some sort of globals.

01:14:11.780 --> 01:14:14.780
Access information to prevent
unwanted people getting in.

01:14:14.780 --> 01:14:16.680
And all these sorts of things as well.

01:14:16.780 --> 01:14:20.780
And there are some Apple scripts
that we use to sort of complicate.

01:14:20.780 --> 01:14:22.700
To simplify.

01:14:22.880 --> 01:14:24.780
It is quite complicated.

01:14:24.780 --> 01:14:26.780
To simplify the process.

01:14:26.990 --> 01:14:30.020
So, you know, the great thing is
that this is not super,

01:14:30.040 --> 01:14:30.780
super high-end stuff.

01:14:30.780 --> 01:14:32.770
And this is what I wanted to show you.

01:14:32.820 --> 01:14:34.730
This is not a particularly
complicated database.

01:14:34.780 --> 01:14:38.780
But it's this database
with the Apple script.

01:14:38.900 --> 01:14:40.700
With the web-based browser.

01:14:40.780 --> 01:14:42.700
With that monitoring.

01:14:42.870 --> 01:14:44.780
With all these other Mac OS X apps.

01:14:44.840 --> 01:14:46.780
All fitting together in this framework.

01:14:46.780 --> 01:14:52.780
Is literally saving us, the contractor,
weeks of production time.

01:14:53.040 --> 01:14:56.780
And saving Apple, the customer,
an enormous amount of money.

01:14:56.780 --> 01:14:58.700
Because we're able to do it fast.

01:14:58.780 --> 01:15:01.760
Well, we're able to do it quicker than
we did it in previous years.

01:15:02.170 --> 01:15:03.780
More efficiently.

01:15:03.780 --> 01:15:06.780
And with less problems arising
during the production process.

01:15:06.780 --> 01:15:08.780
If we could go back to the slides,
please.

01:15:12.880 --> 01:15:14.260
Just to wrap up,
this is what the complete

01:15:14.260 --> 01:15:14.970
system looks like.

01:15:15.010 --> 01:15:17.200
If you are interested to know,
we're using four complete

01:15:17.250 --> 01:15:18.350
work units for this project.

01:15:18.490 --> 01:15:22.640
It doesn't take up very much floor space,
just a rather lot of hardware.

01:15:22.640 --> 01:15:25.750
But it really works flawlessly.

01:15:25.900 --> 01:15:28.570
We've been hammering it
pretty solid for a while now.

01:15:28.600 --> 01:15:30.180
Looking forward to getting our hands on.

01:15:30.180 --> 01:15:32.200
What we do each year is we
just use last year's content.

01:15:32.200 --> 01:15:35.920
So we've just been plowing through the
2002 tapes to make sure that this all

01:15:35.920 --> 01:15:39.270
works and ready to receive the next ones.

01:15:39.280 --> 01:15:42.320
I'm going to hand over to Hagie.

01:15:42.320 --> 01:15:42.750
Thank you.

01:15:43.260 --> 01:15:45.500
Thank you.

01:15:48.100 --> 01:15:50.780
Could I get the computer
going just for one second?

01:15:50.780 --> 01:15:52.340
I wanted to finish off with just one.

01:15:52.340 --> 01:15:56.830
I've been noticing there's a
debate about codecs going on.

01:15:56.860 --> 01:16:05.690
So what I did this morning
was took my example and...

01:16:06.320 --> 01:16:08.200
What I'm going to do
is show you two movies.

01:16:08.200 --> 01:16:11.560
What I like to do when I compare these,
I will put them both in loop mode.

01:16:11.560 --> 01:16:16.240
And what I'm going to do is I'm going to
start one and then tap to the other one.

01:16:16.360 --> 01:16:19.520
Just so you can look,
I'll turn off the audio,

01:16:19.520 --> 01:16:22.830
so you can see one image
and then the next image,

01:16:22.830 --> 01:16:24.400
and your eye can kind of
move from one to the other.

01:16:24.400 --> 01:16:29.360
So this was taking an MPEG-4 example,
the setting that we're using,

01:16:29.530 --> 01:16:33.280
and last year's codec,
and putting them together.

01:16:33.760 --> 01:16:37.330
And again, I've been noticing that
there's a lot of people using,

01:16:37.420 --> 01:16:40.400
well, people are reluctant
to upgrade to MPEG-4.

01:16:40.400 --> 01:16:44.210
So I'd like to take a few minutes
and just challenge some quality

01:16:44.520 --> 01:16:49.630
assumptions that I've been hearing
about regarding these various codecs.

01:16:49.640 --> 01:16:51.390
Let me just bring up
the info window here.

01:16:51.420 --> 01:16:55.770
Okay, so these two movies look different.

01:16:55.780 --> 01:16:56.940
They look different to me.

01:16:56.940 --> 01:16:58.920
They look different
probably to most of you.

01:16:58.920 --> 01:17:02.470
And if we sat here for a while,
we could discuss the merits, advantages,

01:17:02.470 --> 01:17:03.740
and disadvantages.

01:17:03.760 --> 01:17:07.350
But clearly, they do look different.

01:17:07.360 --> 01:17:11.270
And so as viewers,
we can make an assessment

01:17:11.270 --> 01:17:13.220
about the quality.

01:17:13.220 --> 01:17:15.270
So, all right, that's fine.

01:17:15.280 --> 01:17:17.440
I appreciate that, Hagee.

01:17:17.440 --> 01:17:18.180
Great, thanks.

01:17:18.180 --> 01:17:19.280
So what?

01:17:19.310 --> 01:17:24.980
So what I did was I took a look at a
little bit of brightness and contrast.

01:17:24.980 --> 01:17:29.110
Again, the idea of media mastering and
getting the both out of those.

01:17:29.120 --> 01:17:32.900
And again, with these examples,
if there was enough time,

01:17:32.900 --> 01:17:33.680
I'd be happy to.

01:17:33.760 --> 01:17:35.560
I'm not going to run people through this.

01:17:35.560 --> 01:17:37.560
But we want to take some
time for some questions.

01:17:37.560 --> 01:17:40.360
So what I'll do is we'll
give my contact information.

01:17:40.360 --> 01:17:42.560
If people are interested in
repeating these types of examples,

01:17:42.560 --> 01:17:45.170
I'm happy to send you my settings
and tell you how I do this.

01:17:45.320 --> 01:17:49.830
Okay, so what I did here was I did a
little brightness and contrast

01:17:49.860 --> 01:17:51.760
and a gamma adjustment.

01:17:51.760 --> 01:17:55.510
What I did was my MPEG-4
I kept with no filters.

01:17:55.520 --> 01:18:00.880
And what I did was I modified my Sorenson
Pro Codec to look like my MPEG-4.

01:18:00.880 --> 01:18:03.120
And so now I'd like everyone
to take a look at that.

01:18:03.120 --> 01:18:06.120
And I'm going to show you a little bit of
the difference between these two movies.

01:18:06.120 --> 01:18:08.120
Well, I can hide this.

01:18:08.120 --> 01:18:10.120
But, you know, I challenge people.

01:18:10.120 --> 01:18:12.270
I know that there's a few eyes
in this room that can see the

01:18:12.350 --> 01:18:14.110
difference between these two movies.

01:18:14.120 --> 01:18:16.960
But I'd hazard to say
that they do look very,

01:18:16.960 --> 01:18:18.080
very similar.

01:18:18.120 --> 01:18:23.450
And the point of this is to show you that
MPEG-4 at the same bit rate and frame

01:18:23.450 --> 01:18:27.050
size and frame rate is very compelling.

01:18:27.130 --> 01:18:30.120
Especially when you
figure that for Jim and I,

01:18:30.120 --> 01:18:32.120
this entire encoding process will
be finished in one-third less time.

01:18:32.120 --> 01:18:34.120
Okay, I'm going to say that again.

01:18:34.120 --> 01:18:36.120
One-third less time.

01:18:36.120 --> 01:18:39.120
That means out of that 50 hours,
we could add a few days.

01:18:39.120 --> 01:18:41.120
And maybe one of those
days would be a weekend.

01:18:41.120 --> 01:18:44.110
And we could all take three or
four weeks to do a gig like this.

01:18:44.120 --> 01:18:47.050
So, again,
encoding in one-third less time.

01:18:47.120 --> 01:18:51.450
Oh, and not having to buy the
Pro Codec and put it on all those

01:18:51.450 --> 01:18:54.120
machines for a quality debate.

01:18:54.340 --> 01:18:58.110
Okay, if you look at the
lines here and the edge,

01:18:58.180 --> 01:19:01.110
again, it is possible to tell the
difference between these two clips.

01:19:01.120 --> 01:19:06.120
You'll notice that there's
a little bit of edginess,

01:19:06.120 --> 01:19:08.120
a little difference in some of the lines.

01:19:08.120 --> 01:19:10.120
That they both have a
certain amount of artifacts.

01:19:10.120 --> 01:19:12.120
They both do have artifacts.

01:19:12.120 --> 01:19:13.120
I will admit that.

01:19:13.120 --> 01:19:19.120
But one is a little sharper and one is a
little less capable in that transition.

01:19:19.120 --> 01:19:23.120
So, again, just leaving those up for a
little bit of example there.

01:19:23.120 --> 01:19:27.720
Then, okay, yes, Virginia,
this is the Sorenson and that

01:19:27.720 --> 01:19:30.120
is the MPEG-4 over there.

01:19:30.120 --> 01:19:31.830
And, again,
I just wanted to finish with this because

01:19:31.830 --> 01:19:33.060
this is a sort of important hearing.

01:19:33.120 --> 01:19:36.120
I hear a lot of people debating
these technologies and these codecs.

01:19:36.120 --> 01:19:39.120
So I wanted to further that debate
because I work for Discrete.

01:19:39.120 --> 01:19:40.120
We make cleaner.

01:19:40.120 --> 01:19:42.110
So we live in that debate.

01:19:42.120 --> 01:19:47.120
And I wanted people to consider some
of that while they're choosing a codec.

01:19:47.120 --> 01:19:51.040
And, lastly, just before we finish
up and take questions,

01:19:51.100 --> 01:19:53.030
I'd just like to point this out, too.

01:19:53.120 --> 01:19:56.310
That increasingly we're
going to see devices,

01:19:56.320 --> 01:19:59.110
mobile devices, like this Sony Clia.

01:19:59.120 --> 01:20:02.340
And next year you'll probably
all be watching the session

01:20:02.550 --> 01:20:04.110
on something like this.

01:20:04.150 --> 01:20:08.630
Again, I have the same video encoded
with the Konoma exporter that's

01:20:08.700 --> 01:20:11.120
inside Cleaner 6 off to my PDA.

01:20:11.120 --> 01:20:15.120
So I just want to sort of remind people
that this is where all this is going.

01:20:15.120 --> 01:20:18.110
And that, again,
this whole idea of media mastering,

01:20:18.140 --> 01:20:21.340
of workflows,
of encoding is really a matter of

01:20:21.370 --> 01:20:25.990
taking our media and deploying it
in the highest possible quality

01:20:25.990 --> 01:20:28.120
in the most diverse number of
places to reach the largest target.

01:20:28.120 --> 01:20:30.120
And to reach the largest
number of people.

01:20:30.120 --> 01:20:32.120
So I just wanted to kind
of remind people like that.

01:20:32.120 --> 01:20:34.120
And I'll bring up Amy and
we'll do the wrap-up.

01:20:34.120 --> 01:20:35.120
Thank you.