WEBVTT

00:00:25.460 --> 00:00:25.750
Good morning.

00:00:25.750 --> 00:00:27.000
Welcome to our session.

00:00:27.000 --> 00:00:28.940
Today we're going to be talking about,
well,

00:00:29.020 --> 00:00:31.090
network security best practices for OS X.

00:00:31.090 --> 00:00:34.420
Before we get going,
I just want to do a little housekeeping

00:00:34.420 --> 00:00:36.520
and introduce my co-presenters.

00:00:36.520 --> 00:00:39.810
So rather than you having to hear
me for an hour drone on about OS X,

00:00:39.810 --> 00:00:43.120
I have some cast members over here
and I'll introduce them in order

00:00:43.120 --> 00:00:46.350
of appearance because I don't
think we do that on the slides.

00:00:46.350 --> 00:00:48.330
First coming up will be David O'Rourke.

00:00:48.430 --> 00:00:51.820
David's one of our engineering managers
and David's responsible for directory

00:00:51.830 --> 00:00:53.880
services and authentication within OS X.

00:00:54.840 --> 00:00:57.720
After Dave, we'll have John Hurley.

00:00:57.720 --> 00:01:01.340
John is our security
policy architect for OS X.

00:01:01.340 --> 00:01:05.570
And John just recently became
a famous Apple employee.

00:01:05.570 --> 00:01:08.590
He doesn't know I'm going to do this.

00:01:08.650 --> 00:01:11.100
John is actually the only
Apple employee I think ever

00:01:11.110 --> 00:01:12.620
to get his picture in the OS.

00:01:12.620 --> 00:01:15.430
I don't think Steve has
even been able to do this.

00:01:15.430 --> 00:01:17.810
If you poke around,
you might be able to find it later.

00:01:17.870 --> 00:01:21.260
Maybe we'll have a prize whoever can
find John by the end of this session.

00:01:21.260 --> 00:01:24.280
And then finally,
Sean Geddes will be joining us.

00:01:24.280 --> 00:01:38.010
And then finally,
Sean Geddes will be joining us.

00:01:43.470 --> 00:01:46.800
So I think the best way to frame
this discussion today is to just

00:01:46.870 --> 00:01:50.300
admit that you're all intelligent
people and you know your networks

00:01:50.440 --> 00:01:51.320
better than anybody else.

00:01:51.320 --> 00:01:52.950
And they're all very different.

00:01:52.960 --> 00:01:56.060
Some are standalone networks,
don't require any passwords at all.

00:01:56.070 --> 00:01:58.890
Some have light security requirements.

00:01:58.940 --> 00:02:01.480
Others are very heavy,
globally dispersed, VPN access,

00:02:01.490 --> 00:02:03.640
Kerberos requirements for authentication.

00:02:03.980 --> 00:02:06.670
So rather than to tell you
this is the way to plug it

00:02:06.670 --> 00:02:10.150
into this particular network,
we're going to let you make that

00:02:10.150 --> 00:02:14.060
decision yourself and let you,
arm you with the information rather,

00:02:14.060 --> 00:02:16.780
to give you the tools,
let you know what's in OS X so

00:02:16.950 --> 00:02:20.740
you can go back and make the right
decisions for your own network.

00:02:20.760 --> 00:02:23.860
So when we talk about
network security at Apple,

00:02:23.860 --> 00:02:26.690
this is the definition we work from here.

00:02:26.700 --> 00:02:29.380
There's many varied
definitions out there.

00:02:29.610 --> 00:02:31.550
Also, if you look at,
you do a little web research

00:02:31.550 --> 00:02:33.760
on network security,
you'll find all kinds.

00:02:34.000 --> 00:02:37.250
Varied things, different policies,
ways you set up your policies,

00:02:37.360 --> 00:02:39.800
all the way down to how
to secure your firewall.

00:02:39.800 --> 00:02:41.660
So this is what we're
going to work with today.

00:02:43.840 --> 00:02:47.080
So the focus at Apple first is really
communication and data security.

00:02:47.080 --> 00:02:50.040
For us, it's about not just storage
of your information,

00:02:50.040 --> 00:02:53.680
keeping that secure, but rather how it
traverses the network too.

00:02:53.680 --> 00:02:57.480
So the data is what we're really
trying to secure and how do we do that.

00:02:57.790 --> 00:03:00.560
First, we control access to it,
to system and services through

00:03:00.560 --> 00:03:02.460
authentication and authorization.

00:03:02.460 --> 00:03:04.900
And then finally,
the management of that access,

00:03:04.900 --> 00:03:06.370
which is very important.

00:03:08.580 --> 00:03:11.140
So our design philosophy is
really put it in at the core.

00:03:11.140 --> 00:03:13.450
Let's not put it on later on.

00:03:13.460 --> 00:03:14.400
Let's build it right in.

00:03:14.440 --> 00:03:19.020
OS X was a brand new operating system and
allowed us to really take a look at it.

00:03:19.020 --> 00:03:22.440
And our security policy architect, John,
was very instrumental in that.

00:03:22.940 --> 00:03:24.800
We took the conservative approach.

00:03:24.800 --> 00:03:26.760
This, surprisingly, is fairly new.

00:03:26.760 --> 00:03:28.710
Most folks didn't lock down the ports.

00:03:28.710 --> 00:03:30.670
We'll get into more of this later.

00:03:30.670 --> 00:03:34.250
But a lot of new installs of some
very famous operating systems,

00:03:34.270 --> 00:03:37.020
I won't mention them here,
are quite open to exploits

00:03:37.280 --> 00:03:38.610
right out of the box.

00:03:38.620 --> 00:03:39.760
The OS, open source.

00:03:39.760 --> 00:03:42.850
So everybody here can look at the
code and make sure it's secure.

00:03:42.920 --> 00:03:44.050
There's no back doors.

00:03:44.170 --> 00:03:45.460
That can be verified.

00:03:45.460 --> 00:03:46.290
Open standards.

00:03:46.350 --> 00:03:47.220
Why are they good?

00:03:47.220 --> 00:03:48.910
We'll get into that later as well.

00:03:48.920 --> 00:03:52.920
And, of course, the Apple trademark,
easy to use and manage.

00:03:52.920 --> 00:03:55.570
If security is not easy,
it just won't be used.

00:03:55.790 --> 00:03:58.350
People will just turn it off,
and that's no good.

00:03:58.350 --> 00:04:00.450
So you've got to make it easy to use.

00:04:02.500 --> 00:04:04.360
So like I said,
security at the core of the OS.

00:04:04.360 --> 00:04:07.960
At the core is Unix.

00:04:07.960 --> 00:04:11.300
So we leverage the Unix
core that's already in there

00:04:11.300 --> 00:04:14.250
with the file permissions,
the services are built right in,

00:04:14.260 --> 00:04:17.400
your home directories and file
permissions are all set to segregate

00:04:17.550 --> 00:04:19.460
your information from other users.

00:04:19.530 --> 00:04:24.020
Multiple accounts is built right in,
and then protected memory.

00:04:24.020 --> 00:04:26.480
So if a rogue app gets
a hold of the system,

00:04:26.480 --> 00:04:29.770
it's not going to crash it
by taking over the memory.

00:04:31.750 --> 00:04:35.200
Like I said, conservative defaults.

00:04:35.410 --> 00:04:36.510
Services are off by default.

00:04:36.660 --> 00:04:37.540
No FTP servers.

00:04:37.540 --> 00:04:38.980
Web servers are off.

00:04:38.980 --> 00:04:40.700
All ports are closed.

00:04:40.810 --> 00:04:42.210
It's locked down.

00:04:42.220 --> 00:04:44.590
The root account is disabled.

00:04:44.700 --> 00:04:58.000
[Transcript missing]

00:04:58.990 --> 00:05:01.920
So what is true security?

00:05:02.040 --> 00:05:03.490
There's a famous quote here from Bruce.

00:05:03.490 --> 00:05:09.260
What I believe is what Bruce is
trying to tell us is that

00:05:09.440 --> 00:05:11.760
physical security is paramount.

00:05:12.300 --> 00:05:15.300
The basis for all security
is physical security.

00:05:15.480 --> 00:05:17.080
Once that's compromised,
once somebody gets a

00:05:17.090 --> 00:05:18.880
hold of your machine,
it's all over.

00:05:18.880 --> 00:05:21.550
You may have the best encryption
on there in the world,

00:05:21.690 --> 00:05:24.670
but if I hit it with a sledgehammer,
there goes your data.

00:05:28.130 --> 00:05:30.130
So let's talk about the
physical security within OS X,

00:05:30.330 --> 00:05:35.290
and also there's some enhancements
OS X has for physical security and

00:05:35.290 --> 00:05:39.300
Apple's security built into its products.

00:05:39.320 --> 00:05:43.790
Of course, you can lock the cases so
they don't get removed.

00:05:43.930 --> 00:05:45.960
Apple has a lot of experience
in the education market,

00:05:45.960 --> 00:05:48.100
and things tend to
disappear from universities.

00:05:48.100 --> 00:05:49.580
Maybe the kids are just borrowing them.

00:05:49.580 --> 00:05:50.140
I don't know.

00:05:51.910 --> 00:05:54.240
Once you lock it,
you can protect the memory,

00:05:54.240 --> 00:05:57.310
protect all the critical
components of that computer,

00:05:57.370 --> 00:06:02.090
and it protects the firmware settings,
which we'll talk about in just a second.

00:06:02.100 --> 00:06:03.060
And then server.

00:06:03.060 --> 00:06:05.460
Server's got a lot of
neat security features.

00:06:05.460 --> 00:06:09.150
If the front of the case is locked,
you can't mount FireWire hard drives,

00:06:09.210 --> 00:06:10.480
you can't mount USB.

00:06:10.480 --> 00:06:15.060
Also, there's a monitoring system in it,
so if the case becomes open,

00:06:15.120 --> 00:06:16.880
it can alert you to that.

00:06:16.920 --> 00:06:18.010
Thank you.

00:06:19.990 --> 00:06:21.150
So open firmware security.

00:06:21.150 --> 00:06:24.160
Just by a show of hands,
I can kind of see you out there.

00:06:24.390 --> 00:06:26.470
Does anybody know about
open firmware security?

00:06:26.480 --> 00:06:28.240
Oh, great, a bunch of you.

00:06:28.240 --> 00:06:29.690
So I can't say enough about this.

00:06:29.690 --> 00:06:31.580
This really enhances physical security.

00:06:31.580 --> 00:06:35.850
So if, for those of you who don't know,
it's analogous to the

00:06:35.890 --> 00:06:39.060
Windows BIOS password lock,
analogous.

00:06:39.060 --> 00:06:42.340
But it disables the
snag keys from startup.

00:06:42.340 --> 00:06:47.150
So if I turn on open firmware security,
which is a free download from apple.com,

00:06:47.150 --> 00:06:49.880
you can't boot off of a security.

00:06:49.900 --> 00:06:52.000
You can't boot off of a network drive.

00:06:52.010 --> 00:06:53.160
I won't even mount.

00:06:53.160 --> 00:06:56.650
It won't turn it into target mode,
which can be kind of a security

00:06:56.650 --> 00:07:00.000
problem if the thing just turns
into a FireWire hard drive.

00:07:00.090 --> 00:07:01.770
A little laughter up front, yeah.

00:07:03.560 --> 00:07:06.750
By the way, it said down there it's
a superset of IEEE 1275,

00:07:06.750 --> 00:07:09.160
and a little trivia,
IEEE 1275 is the only

00:07:09.160 --> 00:07:10.940
standard to have its own song.

00:07:11.000 --> 00:07:12.190
I don't know if you knew that.

00:07:12.230 --> 00:07:14.720
You go to the website
and you can listen to it.

00:07:15.120 --> 00:07:19.420
So the security services within OS X,
like I said before, authorization,

00:07:19.420 --> 00:07:22.110
authentication,
we have the crypto built in,

00:07:22.110 --> 00:07:23.810
and the certificate handling.

00:07:24.230 --> 00:07:26.880
John will jump into that in
a lot of depth and give you

00:07:26.880 --> 00:07:28.920
a good understanding of that.

00:07:28.980 --> 00:07:32.510
But that's really the core around,
the wrapper, if you will,

00:07:32.510 --> 00:07:33.930
around the Unix core.

00:07:35.360 --> 00:07:38.330
So authorization controls,
once I figure out who that user is,

00:07:38.330 --> 00:07:41.050
what can I let them do within the system?

00:07:41.050 --> 00:07:47.490
We've got a couple nifty little apps
built into server and the desktop itself.

00:07:47.600 --> 00:07:50.450
Some may or may not be familiar with,
but you can limit what the users can do.

00:07:50.460 --> 00:07:55.210
As you know, ROS has,
you have an admin and you have a user,

00:07:55.250 --> 00:07:59.370
if you will,
but you can tweak the controls to limit

00:07:59.370 --> 00:08:02.760
really what's going on within that OS.

00:08:02.760 --> 00:08:03.980
We'll go into that as well.

00:08:04.580 --> 00:08:07.580
So as you can see here, just for a user,
this is just local,

00:08:07.580 --> 00:08:09.690
and Dave will get into
more of the global,

00:08:09.710 --> 00:08:12.130
more scalable authentication,
or excuse me,

00:08:12.130 --> 00:08:14.360
authorization and authentication.

00:08:14.360 --> 00:08:17.080
But you can see you can
limit what the user does.

00:08:17.090 --> 00:08:19.810
So in a very small shop,
this is a great way to keep

00:08:19.810 --> 00:08:23.400
people from hacking their machines
or the network themselves,

00:08:23.400 --> 00:08:26.330
so you don't have to go back
and redo what they've done,

00:08:26.410 --> 00:08:27.790
repair the damage.

00:08:27.830 --> 00:08:29.030
So now I'll bring up Dave.

00:08:29.060 --> 00:08:33.080
Thank you.

00:08:33.210 --> 00:08:33.330
Sure.

00:08:38.400 --> 00:08:41.150
For those of you who haven't
seen me too much this conference,

00:08:41.160 --> 00:08:42.230
my name is David O'Rourke.

00:08:42.320 --> 00:08:45.250
I'm going to be here to briefly go over
authentication and directory services.

00:08:45.250 --> 00:08:50.200
We went into a lot more detail on
these topics in session 607 and 610.

00:08:50.200 --> 00:08:52.040
If you didn't have an
opportunity to catch me,

00:08:52.040 --> 00:08:53.740
I'd recommend you get the developer DVDs.

00:08:53.810 --> 00:08:56.780
We go into a lot of excellent detail,
and we're going to be going over things

00:08:56.780 --> 00:08:58.880
that are pretty high level at this point.

00:08:59.150 --> 00:09:01.010
Thank you.

00:09:01.590 --> 00:09:02.840
So authentication services.

00:09:02.840 --> 00:09:05.860
Most,
if you type a password into Mac OS X,

00:09:05.860 --> 00:09:08.920
99 times out of 100,
it will flow all the way down

00:09:08.920 --> 00:09:09.950
and hit directory services.

00:09:10.000 --> 00:09:13.760
So all password authentication is done
using the open directory architecture.

00:09:13.760 --> 00:09:17.000
The reason we do that is we want,
not only does Apple want to provide

00:09:17.000 --> 00:09:19.980
a variety of ways for users'
passwords to be authenticated,

00:09:20.050 --> 00:09:22.870
but we also want you to be able
to plug into the open directory

00:09:22.890 --> 00:09:26.870
architecture and authenticate users
however you see fit for your site.

00:09:26.990 --> 00:09:30.810
So it's both a solution for Apple and an
opportunity for developers and customers.

00:09:31.060 --> 00:09:34.500
What Apple provides in terms of
network-based authentication is

00:09:34.500 --> 00:09:37.340
we provide a password server,
which provides support for

00:09:37.340 --> 00:09:39.000
legacy authentication protocols.

00:09:39.000 --> 00:09:40.360
This is secure on the network.

00:09:40.480 --> 00:09:41.680
You cannot download hashes.

00:09:41.700 --> 00:09:44.590
The only authentication methods
it supports are secure challenge

00:09:44.590 --> 00:09:46.130
response authentications.

00:09:46.130 --> 00:09:49.230
And as you may have heard at
the conference once or twice,

00:09:49.230 --> 00:09:52.540
we're offering and really
going forward with Kerberos.

00:09:52.540 --> 00:09:55.110
So moving forward,
we take authentication services

00:09:55.200 --> 00:09:56.770
on the network very seriously.

00:09:56.770 --> 00:09:59.030
We're integrating them
into open directory.

00:09:59.140 --> 00:10:00.620
We already offer some very credible
and very good authentication services.

00:10:00.620 --> 00:10:02.940
We're also offering a lot of
security around the password server,

00:10:02.940 --> 00:10:06.900
and we're moving aggressively
into the Kerberos space.

00:10:07.070 --> 00:10:10.990
For enterprise architecture, again,
Open Directory enables integration

00:10:10.990 --> 00:10:12.300
with existing directory services.

00:10:12.300 --> 00:10:15.480
We support LDAP,
we support NIS or Yellow Pages,

00:10:15.480 --> 00:10:17.990
for those of you who have
been around quite a while,

00:10:18.170 --> 00:10:21.560
NetInfo, Active Directory,
and local BSD configuration files.

00:10:24.110 --> 00:10:27.840
The Open Directory Server is a
LDAP server that offers SSL support.

00:10:27.840 --> 00:10:32.440
It is based on OpenLDAP 2.18 currently,
is what you have on your Panther build.

00:10:32.440 --> 00:10:34.600
We'll be investigating,
updating to the latest builds.

00:10:34.600 --> 00:10:36.790
I've heard there's some
later builds of OpenLDAP.

00:10:36.800 --> 00:10:39.300
We have a very easy-to-use
open setup assistant.

00:10:39.300 --> 00:10:41.900
It's like three clicks
to deploy an LDAP server,

00:10:42.040 --> 00:10:43.940
and it's entirely based on OpenLDAP.

00:10:43.940 --> 00:10:45.100
You can download the source.

00:10:45.100 --> 00:10:46.360
You can look at it.

00:10:46.360 --> 00:10:47.600
We have some changes.

00:10:47.600 --> 00:10:51.640
All of the changes will be posted
back to the Darwin website.

00:10:52.110 --> 00:10:54.310
For those of you not,
who didn't get a chance

00:10:54.440 --> 00:10:57.210
to go to session 610,
this is the open directory architecture.

00:10:57.240 --> 00:11:00.680
The blue boxes at the bottom would
represent applications such as login

00:11:00.680 --> 00:11:04.180
window or maybe the authentication
dialogue that comes up when you click

00:11:04.180 --> 00:11:06.280
on the lock icon in system preferences.

00:11:06.320 --> 00:11:09.860
Most of the time, those end up calling
the open directory APIs.

00:11:09.860 --> 00:11:13.460
The open directory APIs figure out which
plug-in is hosting that user record,

00:11:13.460 --> 00:11:16.680
and then we engage with whatever
directory system has been configured

00:11:16.690 --> 00:11:18.320
to conduct an authentication.

00:11:19.120 --> 00:11:22.570
Our authentication is no better or
no worse than the directory system

00:11:22.650 --> 00:11:24.200
that you deploy at your site.

00:11:24.200 --> 00:11:28.240
If you're comfortable with the directory
system that you've deployed at your site,

00:11:28.340 --> 00:11:31.250
the authentication method that's
using open directory is exactly

00:11:31.250 --> 00:11:33.230
as secure as that deployment.

00:11:33.240 --> 00:11:36.460
If your directory system is not secure,
open directory cannot add

00:11:36.480 --> 00:11:38.250
security to that environment.

00:11:40.880 --> 00:11:43.240
So you can have a mix of clients.

00:11:43.280 --> 00:11:46.780
You can have Macintoshes on the
network sharing directory data.

00:11:46.780 --> 00:11:49.670
You can distribute the directories
and force the Macintoshes to use

00:11:49.670 --> 00:11:52.800
a particular directory system
through your DHCP infrastructure.

00:11:52.800 --> 00:11:54.280
LDAP can be there.

00:11:54.280 --> 00:11:56.220
We have the authentication
authority record,

00:11:56.220 --> 00:11:58.820
which lets you actually mix
user records in the directory.

00:11:58.820 --> 00:12:00.610
So you could have some
users that are crypt-based.

00:12:00.700 --> 00:12:02.680
You could have some users that
are password server-based,

00:12:02.740 --> 00:12:04.860
and you could have some users
that are Kerberos-based.

00:12:04.860 --> 00:12:07.740
The authentication authority lets
you pick the appropriate security

00:12:07.830 --> 00:12:09.360
for your user records at your site.

00:12:09.470 --> 00:12:13.030
And home directories can be mounted
over authenticated protocols.

00:12:13.030 --> 00:12:16.170
We already support
AFP-authenticated home directories.

00:12:16.180 --> 00:12:18.990
We support SMB and
Panther SMB home directories.

00:12:19.140 --> 00:12:21.640
So you're not mounting
home directories over NFS,

00:12:21.640 --> 00:12:25.180
which I've heard historically
may have some security concerns.

00:12:27.330 --> 00:12:31.380
The open directory authentication
is entirely standards-based.

00:12:31.410 --> 00:12:33.800
The password server is not
something we built from scratch.

00:12:33.800 --> 00:12:37.330
It is something we built from scratch
around an open source protocol,

00:12:37.410 --> 00:12:38.960
and that protocol was Sassl.

00:12:38.960 --> 00:12:40.100
Sassl is very secure.

00:12:40.190 --> 00:12:42.780
It doesn't support clear
text authentication.

00:12:42.780 --> 00:12:44.170
Well, it can, but we've removed it.

00:12:44.230 --> 00:12:47.990
And you can add, it's modular,
and you can add new authentication

00:12:47.990 --> 00:12:51.250
methods to the Sassl server
without a lot of effort.

00:12:51.590 --> 00:12:54.370
The password server also
provides policy enforcement.

00:12:54.510 --> 00:12:57.260
How many of you have policy
enforcement at your site?

00:12:57.260 --> 00:12:59.640
You want the users to
change every 30 days,

00:12:59.640 --> 00:13:02.510
minimum password length,
character set enforcement,

00:13:02.510 --> 00:13:03.840
must contain a symbol.

00:13:03.840 --> 00:13:06.750
Wow, for a security conference,
I want to see more hands.

00:13:06.760 --> 00:13:09.230
So you need to deploy the open
directory password server.

00:13:09.240 --> 00:13:12.350
We can do all of those security
enforcements and make sure that

00:13:12.360 --> 00:13:15.290
the passwords your users are
choosing are not guessable,

00:13:15.320 --> 00:13:17.690
have high quality,
and are changed frequently

00:13:17.710 --> 00:13:18.840
enough to matter.

00:13:18.840 --> 00:13:21.560
The password server will also
disable inactive accounts.

00:13:21.680 --> 00:13:26.830
Say you have a contractor on site and he
hasn't logged on in the past three weeks,

00:13:26.830 --> 00:13:28.850
and you don't want him coming
back and logging on without

00:13:28.910 --> 00:13:29.640
checking with you first.

00:13:29.670 --> 00:13:32.740
You can set up the password server
to disable inactive accounts

00:13:32.750 --> 00:13:34.420
that haven't logged on recently.

00:13:34.420 --> 00:13:37.680
The password server also
provides one very unique feature,

00:13:37.750 --> 00:13:41.050
which is you have the same
password for multiple services.

00:13:41.100 --> 00:13:45.820
If you deploy multiple Mac OS X servers
or other servers and point them at

00:13:45.820 --> 00:13:49.690
our LDAP server with password server,
you get one password for

00:13:49.690 --> 00:13:51.300
all of your services.

00:13:51.460 --> 00:13:55.470
You get the same password for IMAP as
you get for AFP as you get for SMB.

00:13:55.620 --> 00:13:57.960
They don't even have to be deployed
on the same physical server.

00:13:58.110 --> 00:14:00.850
So that means the password quality
that you're enforcing in one protocol

00:14:00.850 --> 00:14:02.220
carries over to the other protocols.

00:14:02.220 --> 00:14:06.120
That means when the account is disabled,
it's disabled for all of the protocols.

00:14:06.120 --> 00:14:07.610
Thank you.

00:14:08.170 --> 00:14:08.660
Kerberos.

00:14:08.660 --> 00:14:11.150
How many people have Kerberos
deployed at their site?

00:14:11.150 --> 00:14:12.760
Yes.

00:14:12.760 --> 00:14:14.850
We are going with Kerberos
in a very big way.

00:14:14.850 --> 00:14:17.540
Kerberos, I believe,
stands for the three-headed dog

00:14:17.540 --> 00:14:19.260
that guards the gates of hell.

00:14:19.260 --> 00:14:21.980
I thought that was a very
interesting choice by the original

00:14:21.980 --> 00:14:23.640
Kerberos team as their product.

00:14:23.640 --> 00:14:28.120
We are basing all of our Kerberos
work on MIT's Kerberos work.

00:14:28.240 --> 00:14:31.530
We simply take the MIT source code,
enhance it,

00:14:31.530 --> 00:14:33.840
and integrate it with our work.

00:14:34.760 --> 00:14:37.400
This is going to be Apple's single
sign-on strategy moving forward.

00:14:37.400 --> 00:14:39.800
Next year, you're going to hear
even more about Kerberos.

00:14:39.800 --> 00:14:43.050
We're aggressively Kerberizing
a lot of applications.

00:14:43.050 --> 00:14:45.120
We already have Kerberized Mail.

00:14:45.120 --> 00:14:48.340
There's a third-party product
for Fetch for Kerberized FTP.

00:14:48.340 --> 00:14:51.140
Telnet is Kerberized,
although we turn it off.

00:14:51.210 --> 00:14:53.260
AFP is Kerberized.

00:14:53.370 --> 00:14:55.890
And in Panther, SMB is Kerberized.

00:14:55.890 --> 00:15:00.820
And what's not on this list is
Panther is going to have Kerberized SSH.

00:15:01.550 --> 00:15:04.340
So look for more Kerberized
protocols coming from Apple.

00:15:04.340 --> 00:15:07.100
Look for a Kerberos
server in Panther server.

00:15:07.100 --> 00:15:10.470
You will be able to deploy a Kerberos
server with the same amount of clicks

00:15:10.520 --> 00:15:13.940
as it takes to deploy an LDAP server
because you won't have a choice.

00:15:13.970 --> 00:15:16.880
If you turn on the LDAP server,
you have also deployed a Kerberos server.

00:15:18.590 --> 00:15:19.240
Workgroup Manager.

00:15:19.240 --> 00:15:22.240
How many of you use Managed Desktop?

00:15:22.240 --> 00:15:23.640
Okay.

00:15:23.640 --> 00:15:25.590
For those of you who
have already used it,

00:15:25.670 --> 00:15:28.660
you've recognized that you can
put all of your policy management

00:15:28.660 --> 00:15:30.360
information in the directory.

00:15:30.360 --> 00:15:32.680
So you can have your LDAP directory
host your dock preferences,

00:15:32.680 --> 00:15:33.940
your security preferences.

00:15:33.940 --> 00:15:36.240
Well,
the tool that you use to modify those

00:15:36.360 --> 00:15:41.160
preferences and force your users into
those architectures is Workgroup Manager.

00:15:41.490 --> 00:15:43.260
Workgroup Manager allows
you to manage groups,

00:15:43.330 --> 00:15:44.280
users, and computers.

00:15:44.280 --> 00:15:47.640
You can enforce privileges per computer,
you can enforce privileges per workgroup,

00:15:47.640 --> 00:15:49.420
and you can enforce privileges per user.

00:15:49.420 --> 00:15:52.830
It controls access to software, hardware,
and network resources,

00:15:52.880 --> 00:15:55.980
so I can control which applications
a user can and can't run.

00:15:55.980 --> 00:15:59.420
Many K-12 sites disable the
student's launching terminal.

00:16:00.850 --> 00:16:03.120
If they can't run terminal,
they can't run command line tools,

00:16:03.140 --> 00:16:05.580
it kind of limits their ability
to hack around in the system.

00:16:05.580 --> 00:16:08.380
You can manage system preferences.

00:16:08.380 --> 00:16:10.740
You can manage which system
preferences a user can do.

00:16:10.740 --> 00:16:13.480
You can force energy saver settings,
a whole ton of things.

00:16:13.500 --> 00:16:16.460
There's a whole session on the
details of managed desktop.

00:16:16.460 --> 00:16:17.380
I recommend you look at it.

00:16:17.460 --> 00:16:19.560
But WorkRoot Manager is
our directory-based tool

00:16:19.560 --> 00:16:20.540
that lets you do that.

00:16:20.600 --> 00:16:23.600
And because WorkRoot Manager is
based on open directory,

00:16:23.600 --> 00:16:28.280
you can put those preferences into any
directory system that you've deployed.

00:16:28.460 --> 00:16:32.320
We store it in our LDAPv3 server,
but if you configure open LDAP to,

00:16:32.320 --> 00:16:36.220
or if you configure open directory to
point at a different directory server,

00:16:36.220 --> 00:16:39.440
you can use WorkRoot Manager to get
the Mac OS X policy information into

00:16:39.440 --> 00:16:41.140
the directory server of your choice.

00:16:41.140 --> 00:16:43.970
We have one customer we're working
with who's writing a plug-in

00:16:43.980 --> 00:16:45.100
for open directory to Oracle.

00:16:45.200 --> 00:16:47.300
He's going to make the
plug-in read-write.

00:16:47.300 --> 00:16:50.780
He's going to use WorkRoot Manager to
shove policy information into his

00:16:50.780 --> 00:16:52.680
Oracle database to manage his desktops.

00:16:54.850 --> 00:16:58.110
So what I'd like to do at this
time is bring up John Hurley to

00:16:58.140 --> 00:17:01.770
talk about security services,
and I thank you for your time.

00:17:10.170 --> 00:17:10.330
Great.

00:17:10.520 --> 00:17:10.990
Thanks, Dave.

00:17:10.990 --> 00:17:16.820
As Eric mentioned, I'm John Hurley,
the security policy architect,

00:17:16.820 --> 00:17:21.550
and I'll go over actually at a pretty
high level some of the different

00:17:21.550 --> 00:17:26.300
security pieces that we have sort
of at the lower level of the OS.

00:17:26.620 --> 00:17:31.510
We have had a couple of sessions already,
one on Monday on security

00:17:31.640 --> 00:17:37.470
overview and another session,
I think, yesterday on certificate APIs.

00:17:37.470 --> 00:17:41.640
We have a feedback forum this afternoon,
so just a few other pointers.

00:17:44.350 --> 00:17:48.400
So kind of the core of,
I guess it's really our

00:17:48.400 --> 00:17:52.140
middle layer of security,
is the common data security architecture.

00:17:52.140 --> 00:17:58.700
And this is an open group standard
that was originally developed by

00:17:58.830 --> 00:18:05.710
Intel that we actually used on OS 9
and have continued to use in OS X.

00:18:06.260 --> 00:18:09.400
We've implemented the
2.1 version of the spec.

00:18:09.400 --> 00:18:12.770
And this is responsible for
doing all the cryptography,

00:18:12.770 --> 00:18:15.120
the certificates, things like that.

00:18:15.210 --> 00:18:21.010
So that's a very important building
block for the security on our system.

00:18:23.320 --> 00:18:26.620
We have,
rather than just taking this one set

00:18:26.620 --> 00:18:34.780
of APIs and just sort of pushing that
out as a very extensive set of APIs,

00:18:34.780 --> 00:18:38.990
we've added another layer on top of
that that we call layered services to

00:18:38.990 --> 00:18:43.350
try and make it easy for developers to
use these services without having to

00:18:43.350 --> 00:18:45.850
know all the gory details down below.

00:18:46.580 --> 00:18:49.480
So, for example,
Keychain is all built kind of

00:18:49.480 --> 00:18:51.400
on top of this higher level.

00:18:51.400 --> 00:18:54.290
A lot of things that
you may not think about,

00:18:54.290 --> 00:18:57.620
say, for example, Safari,
that is calling through

00:18:57.830 --> 00:19:01.520
to secure transport,
which calls through to CDSA.

00:19:01.520 --> 00:19:04.380
And so if you're changing
things in the certificate

00:19:04.380 --> 00:19:08.120
root cert database down below,
that's going to be used by Safari.

00:19:08.120 --> 00:19:11.840
It's going to be used by anybody
else that's using those APIs.

00:19:11.840 --> 00:19:16.400
So we're really encouraging
developers to use those APIs.

00:19:16.500 --> 00:19:20.230
So that they can get the consistent
experience for their users.

00:19:20.320 --> 00:19:25.700
It is a very customizable API.

00:19:25.700 --> 00:19:28.020
You can write different
modules to do different things.

00:19:28.020 --> 00:19:32.860
For example, different security trust
policies for certificates.

00:19:32.920 --> 00:19:35.820
Perry went into pretty
good detail of that.

00:19:35.960 --> 00:19:38.120
You can check that out on the DVDs.

00:19:38.140 --> 00:19:41.100
We have done...

00:19:42.630 --> 00:19:47.800
Almost everything that's in there
that's not UI is open source.

00:19:47.800 --> 00:19:50.910
So if you want to see
how we did something,

00:19:50.910 --> 00:19:55.860
say the authorization framework
or how we did secure transport,

00:19:55.860 --> 00:19:59.870
that stuff is available
in the Darwin repository.

00:20:02.790 --> 00:20:09.220
So here's kind of a simplified
overview of how CDSA is put together,

00:20:09.220 --> 00:20:11.720
and you can see the different
layers that we have there.

00:20:11.720 --> 00:20:15.140
The bottom layer are the plug-in modules.

00:20:15.140 --> 00:20:19.340
Cryptographic service providers are,
excuse me,

00:20:19.340 --> 00:20:24.300
they implement all the different
cryptography algorithms,

00:20:24.310 --> 00:20:31.050
AES, triple DES, things like that,
you know, hashes like SHA-1 and MD5.

00:20:32.280 --> 00:20:39.300
Certificate library and trust
policy module deal with managing and

00:20:39.800 --> 00:23:09.300
[Transcript missing]

00:23:14.250 --> 00:23:21.410
So here's just one example
of the certificate UI.

00:23:21.520 --> 00:23:23.750
It's kind of a portion
of a screenshot there.

00:23:23.750 --> 00:23:31.430
But we have put in really good support
on Panther for dealing with certificates.

00:23:31.430 --> 00:23:36.440
And something that I'm really happy with,
we did the best we could for Jaguar.

00:23:36.440 --> 00:23:39.380
We tried to get a useful subset,
but it's just very,

00:23:39.380 --> 00:23:42.920
very difficult to implement this
full standard and really get

00:23:42.920 --> 00:23:44.180
it working the way it should.

00:23:44.200 --> 00:23:48.060
It's not the way that Mac users expect,
you know, just very, very easy to use.

00:23:48.060 --> 00:23:51.180
We also wanted to make it very,
very easy for developers because

00:23:51.180 --> 00:23:53.610
we knew what a pain in the
neck it was to have to deal,

00:23:53.610 --> 00:23:55.890
you know,
to write this screen and looking up,

00:23:55.890 --> 00:23:59.290
you know, a zillion different fields and
trying to figure out what the

00:23:59.290 --> 00:24:03.580
standard said about how they should
be presented or what the values were.

00:24:03.580 --> 00:24:06.940
We just didn't want people to
have to go through that same pain.

00:24:06.940 --> 00:24:09.370
So we tried to make it available.

00:24:09.400 --> 00:24:11.950
And I think we did a really
nice job in Panther with that.

00:24:11.970 --> 00:24:17.920
We have support for a lot of
different certificate formats.

00:24:17.920 --> 00:24:20.900
So, for example, PEM format certificates.

00:24:21.010 --> 00:24:24.560
If you take a, you know,
a .cer from another platform,

00:24:24.560 --> 00:24:29.060
you can double click on it and it'll
be imported into your key chain.

00:24:29.060 --> 00:24:30.960
We can handle

00:24:32.850 --> 00:24:35.820
Simple PKCS 12 format.

00:24:35.820 --> 00:24:39.480
So, you know, for example,
if you have an identity that you got

00:24:39.670 --> 00:24:44.020
from VeriSign or someplace like that,
you can import that into the keychain.

00:24:44.020 --> 00:24:50.180
It doesn't support things like nested,
you know, multiply nested PKCS 12 files,

00:24:50.180 --> 00:24:51.640
but you probably won't run into those.

00:24:51.640 --> 00:25:01.460
We also have added support for CRLs,
and we have a really nice UI for dealing

00:25:01.650 --> 00:25:04.300
with user management of trust settings.

00:25:04.340 --> 00:25:08.420
So you can say, okay, for this particular
certificate that I have,

00:25:08.550 --> 00:25:11.140
I only want to trust it
for SSL transactions,

00:25:11.140 --> 00:25:12.840
you know, use on a web page.

00:25:12.840 --> 00:25:16.320
Or you can say, no,
I want to be able to send,

00:25:16.320 --> 00:25:18.220
sign an encrypted email
with this certificate.

00:25:18.220 --> 00:25:20.340
So the user can choose
those kind of things.

00:25:20.340 --> 00:25:23.290
Or they can say things like,
don't ever trust this certificate.

00:25:23.340 --> 00:25:24.720
I just know that it's bad.

00:25:24.720 --> 00:25:26.840
It might say that it's good, whatever.

00:25:26.840 --> 00:25:28.370
Just don't trust it.

00:25:32.450 --> 00:25:35.380
This is kind of a brief list
of things that I mentioned

00:25:35.380 --> 00:25:50.290
that are supported in the CSP.

00:25:51.210 --> 00:25:51.210
So, you know, we really try and use
AES because that is the,

00:25:51.210 --> 00:25:51.210
you know,
officially supported standard by NIST.

00:25:51.210 --> 00:25:51.210
It's kind of actually
amazing to me to see...

00:25:51.800 --> 00:26:22.000
[Transcript missing]

00:26:26.720 --> 00:26:32.070
Okay, so I mentioned briefly
before that disk copy uses...

00:26:32.200 --> 00:26:35.310
nd then we'll have a little bit
of a look at the CDSA framework

00:26:35.310 --> 00:26:36.890
and the algorithms in there.

00:26:36.970 --> 00:26:39.390
This encrypted disk copy
images are a really,

00:26:39.390 --> 00:26:40.590
really cool feature.

00:26:40.650 --> 00:26:44.260
If you don't know -- actually,
let me ask, how many people know about

00:26:44.270 --> 00:26:45.910
encrypted disk copy images?

00:26:45.910 --> 00:26:46.720
Okay, good.

00:26:46.720 --> 00:26:50.580
For anybody that didn't raise their hand,
you've got to learn about it.

00:26:50.580 --> 00:26:52.720
It's a very, very cool thing.

00:26:52.720 --> 00:26:56.410
We've made it easier in Panther for
users to use it and in some cases

00:26:56.410 --> 00:26:59.250
kind of made it transparent,
like, for example,

00:26:59.380 --> 00:27:01.420
FileVault is underneath that.

00:27:01.500 --> 00:27:02.180
It's using a lot of the same things.

00:27:02.200 --> 00:27:04.060
an encrypted image.

00:27:04.060 --> 00:27:06.370
Even if you're not using that,
you can create them from the

00:27:06.370 --> 00:27:09.230
command line or using disk utility.

00:27:09.230 --> 00:27:15.750
It's moved from the disk copy
application into disk utility on Panther.

00:27:15.770 --> 00:27:19.730
But these images can be growable.

00:27:19.870 --> 00:27:22.240
You can make them pretty small.

00:27:22.240 --> 00:27:26.160
I have one on -- I think I have
one of these little devices here.

00:27:26.160 --> 00:27:29.480
This one actually has a
fingerprint reader on it.

00:27:29.480 --> 00:27:32.820
So I have true three factor
authentication on this.

00:27:32.820 --> 00:27:35.040
Something I have,
something I know which is

00:27:35.040 --> 00:27:37.630
the password to the encrypted
image that's stored on here,

00:27:37.640 --> 00:27:39.680
and something I am,
which is my fingerprint.

00:27:39.680 --> 00:27:43.170
So this is cool stuff.

00:27:43.360 --> 00:27:46.200
You can put in your PGP keys.

00:27:46.200 --> 00:27:49.760
You can put in a copy of your key chain.

00:27:49.760 --> 00:27:50.630
I don't know.

00:27:50.750 --> 00:27:51.780
It's just very useful.

00:27:51.830 --> 00:27:55.520
The other thing to note about it is
that they're very high performance.

00:27:55.520 --> 00:28:01.040
So it's, I mean, you can imagine all the
things that it depends on.

00:28:01.040 --> 00:28:04.870
But just the particular
test system we had set up,

00:28:04.990 --> 00:28:08.900
it took like about 10% over the CPU,
or sorry,

00:28:08.980 --> 00:28:12.240
10% over the disk speed overhead.

00:28:12.240 --> 00:28:15.240
So it was just a little bit,
it was almost free, but not quite.

00:28:15.240 --> 00:28:17.310
So hopefully we'll get
there at some point,

00:28:17.310 --> 00:28:18.540
make it totally free.

00:28:22.800 --> 00:28:25.060
Just a screenshot.

00:28:25.060 --> 00:28:30.650
It's pretty much the same as making
any other disk image except that

00:28:30.740 --> 00:28:34.330
there's one pop-up menu that allows
you to choose the encryption method.

00:28:34.660 --> 00:28:37.340
Currently,
we just support one encryption method,

00:28:37.340 --> 00:28:38.260
which is AES.

00:28:38.260 --> 00:28:42.800
But it is built on top of CDSA,
so we could support different

00:28:42.800 --> 00:28:45.090
algorithms at some point.

00:28:47.210 --> 00:28:50.940
Okay, I just want to go quickly
through keychain access.

00:28:50.940 --> 00:28:54.920
Keychain has been in the
OS since actually 8.6,

00:28:54.920 --> 00:28:59.970
so at this point I would imagine
people are kind of familiar with it.

00:29:00.170 --> 00:29:02.130
Okay.

00:29:02.320 --> 00:29:07.960
Every user on 10, since 10.0,
has had a keychain by default,

00:29:08.030 --> 00:29:09.940
and it's unlocked when you log in.

00:29:09.940 --> 00:29:15.080
One change that we've made going to
Panther is that now a new user that is

00:29:15.080 --> 00:29:20.980
created will have a login keychain as
opposed to just the default keychain.

00:29:20.980 --> 00:29:24.650
Like before, we had, you know,
if my account was John,

00:29:24.650 --> 00:29:27.820
my default keychain
would also be named John.

00:29:27.820 --> 00:29:30.790
Now it is named login.keychain.

00:29:30.790 --> 00:29:37.360
And that allowed us to help determine
which keychain people were really,

00:29:37.360 --> 00:29:41.180
really using for their login keychain.

00:29:41.180 --> 00:29:45.380
It also made it easier for people to make
a second keychain in case they didn't

00:29:45.380 --> 00:29:47.640
want to have one unlocked by default.

00:29:52.730 --> 00:29:59.510
It is a network-safe format,
so it's okay to put, you know,

00:29:59.700 --> 00:30:25.300
[Transcript missing]

00:30:25.500 --> 00:30:41.600
[Transcript missing]

00:30:41.760 --> 00:30:45.620
A couple of things that you might not
know about your keychain settings,

00:30:45.620 --> 00:30:47.320
that these are good things to do.

00:30:47.320 --> 00:30:50.440
If you go into keychain access,
you can set a timeout on lock,

00:30:50.450 --> 00:30:52.800
because by default,
your login keychain just

00:30:52.800 --> 00:30:55.970
stays unlocked for the entire
time that you're logged in.

00:30:56.110 --> 00:30:58.830
So you can set that to be five minutes,
whatever.

00:30:59.630 --> 00:31:02.960
You can also set it so that
it locks when it sleeps.

00:31:02.960 --> 00:31:06.320
If people have been using
that feature on Jaguar,

00:31:06.320 --> 00:31:09.930
it didn't work quite the way
we wanted to with closing the

00:31:10.170 --> 00:31:12.310
PowerBook and going to sleep.

00:31:12.530 --> 00:31:17.760
So that has been fixed in a nice way,
and it does the right thing.

00:31:17.760 --> 00:31:21.650
When you close it, like, for example,
it'll forget the credentials for

00:31:21.650 --> 00:31:23.450
your encrypted disk copy images.

00:31:23.540 --> 00:31:27.620
So when you open the thing back up again,
it's going to prompt you again.

00:31:27.620 --> 00:31:30.810
And if it doesn't get the...
Either the keychain password

00:31:30.810 --> 00:31:33.380
or the disk image password,
it's going to unmount the disk.

00:31:33.380 --> 00:31:37.690
So that's just the behavior
you want on a portable device.

00:31:39.610 --> 00:31:55.990
Okay.

00:31:55.990 --> 00:31:56.390
If you are in the federal space,
you might be aware that we had

00:31:56.390 --> 00:31:56.390
released a product called the
Federal Smart Card Package,

00:31:56.390 --> 00:31:56.390
I think in January or February,
and it was available just as a...

00:31:57.420 --> 00:32:01.250
I think $49 product on
the federal web store.

00:32:01.260 --> 00:32:05.220
The interesting thing is that we've
rolled that functionality into Panther.

00:32:05.220 --> 00:32:09.720
It's not going to be of interest
to you unless you're actually in

00:32:09.720 --> 00:32:16.320
a branch of the federal government
that uses common access cards.

00:32:16.420 --> 00:32:22.270
But the thing that's sort of generally
worth noting is that we have put this in.

00:32:22.560 --> 00:32:27.500
We've done changes to, for example,
screen saver, login window,

00:32:27.510 --> 00:32:32.000
things like that so that they can be used
with alternate authentication methods.

00:32:32.000 --> 00:32:36.360
So there are other companies that have
come out with this type of functionality,

00:32:36.360 --> 00:32:38.070
and it's worth looking at that too.

00:32:38.180 --> 00:32:43.360
I know CryptoCard has announced things,
ActiveCard.

00:32:43.360 --> 00:32:45.540
Sony has come out with
a fingerprint reader.

00:32:45.540 --> 00:32:50.070
So all these things are leveraged
on top of the authorization API.

00:32:53.590 --> 00:32:56.250
Okay, so at this point,
I want to bring back up Eric.

00:32:56.320 --> 00:33:01.030
I want to introduce him, too,
because he forgot to

00:33:01.250 --> 00:33:04.310
say who the heck he is,
but he is the...

00:33:04.840 --> 00:33:05.660
John, what are you?

00:33:05.770 --> 00:33:07.060
Security Product Marketing Manager.

00:33:07.140 --> 00:33:08.460
Security Product Marketing Manager.

00:33:08.460 --> 00:33:09.380
Right, for OS X.

00:33:09.570 --> 00:33:10.590
There you go.

00:33:10.700 --> 00:33:11.200
Thanks.

00:33:11.200 --> 00:33:12.800
Is the mic on?

00:33:12.800 --> 00:33:14.420
Thanks, John.

00:33:18.900 --> 00:33:21.920
So I saved the cool stuff for
myself when putting this together.

00:33:21.940 --> 00:33:26.970
So we didn't talk a lot about
what's in Panther right now,

00:33:26.970 --> 00:33:28.300
and I'm gonna go through
some of those things,

00:33:28.470 --> 00:33:29.710
some of those nifty features right now.

00:33:29.720 --> 00:33:35.220
As you can see here under
your Internet Connect dialog,

00:33:35.240 --> 00:33:38.470
we now have VPN support
for L2TP over IPsec,

00:33:38.580 --> 00:33:38.860
yay.

00:33:38.980 --> 00:33:41.900
And that's in client and server.

00:33:42.000 --> 00:33:43.360
Yeah, pretty excited about that.

00:33:43.360 --> 00:33:47.200
Also, we'll go in a little deeper
about what we've done for 802.1X.

00:33:47.200 --> 00:33:50.100
So we also support that as well
for wired and wireless networks,

00:33:50.150 --> 00:33:50.910
which is great.

00:33:50.970 --> 00:33:58.030
So a very simple-to-use screen for
the user to put in their settings.

00:33:58.060 --> 00:34:00.820
Not a lot of difficulty there.

00:34:00.820 --> 00:34:03.440
Also, multiple configuration support.

00:34:03.440 --> 00:34:04.120
So this is great.

00:34:04.160 --> 00:34:05.450
Kind of excited about this.

00:34:05.460 --> 00:34:09.520
So if you're moving around from
network to network or you're traveling,

00:34:09.520 --> 00:34:10.880
you can just set up.

00:34:11.140 --> 00:34:13.060
I'm at home, I'm at the office.

00:34:13.140 --> 00:34:16.580
And however you need to
connect from that point.

00:34:16.620 --> 00:34:17.960
So we support that as well.

00:34:17.960 --> 00:34:20.480
And that's also in VPN and 802.1X.

00:34:23.750 --> 00:34:25.730
Now, you're probably familiar
with the built-in firewall,

00:34:25.730 --> 00:34:27.850
but for those of you who are not,
I wanted to mention it.

00:34:27.970 --> 00:34:30.390
We have a built-in
firewall based on IPFW.

00:34:30.390 --> 00:34:32.440
Quite simple to use.

00:34:32.440 --> 00:34:37.390
And your users, as they enable services,
the ports automatically open

00:34:37.480 --> 00:34:39.970
within the firewall themselves.

00:34:39.980 --> 00:34:42.680
Or you can customize it
further for other well-known

00:34:43.030 --> 00:34:46.580
services that you'll see there,
Apple Remote Desktop and what have you,

00:34:46.700 --> 00:34:48.220
or things that aren't listed.

00:34:48.240 --> 00:34:51.180
So we give you full
customization of the firewall.

00:34:53.650 --> 00:34:56.030
And also within the
OS transport security,

00:34:56.030 --> 00:34:59.630
a lot of this drops down to the CDS layer
and makes calls from that point.

00:34:59.660 --> 00:35:04.980
But of course, we support OpenSSL, TLS,
and all of the variants of that.

00:35:05.110 --> 00:35:08.540
And then, of course,
OpenSSH is built into the system.

00:35:11.500 --> 00:35:13.760
So that kind of ends a lot
of the features that are

00:35:13.760 --> 00:35:16.480
in the OS around security.

00:35:16.670 --> 00:35:20.200
We also are very concerned about holes
that pop up because let's face it,

00:35:20.230 --> 00:35:21.960
they do arise.

00:35:22.260 --> 00:35:25.600
So we try to keep you as
users informed about this.

00:35:25.600 --> 00:35:29.600
We also work with cert and first to
receive and distribute information.

00:35:29.640 --> 00:35:33.400
We have a mailing list that
you can get hooked up to.

00:35:33.400 --> 00:35:36.200
So if any alerts come out,
you can get those sent to you so you

00:35:36.200 --> 00:35:38.580
don't have to actively check yourself.

00:35:38.600 --> 00:35:41.280
In addition, we have a

00:35:41.980 --> 00:35:43.310
An email address,
that's what the thing is,

00:35:43.740 --> 00:35:46.350
that you can report security
rules that you may find,

00:35:46.350 --> 00:35:48.710
and we actually do take
them quite seriously when we

00:35:48.860 --> 00:35:50.100
research every one we get.

00:35:53.070 --> 00:35:57.180
And then also updates to the system,
if there's any security holes

00:35:57.510 --> 00:36:01.740
or vulnerabilities that pop up,
we can update those quite easily with

00:36:01.770 --> 00:36:03.580
security updates right within the system.

00:36:05.900 --> 00:36:08.680
So just to summarize some of the
recommendations we have here today,

00:36:08.680 --> 00:36:10.780
controlling physical access is huge.

00:36:10.780 --> 00:36:12.020
That's paramount.

00:36:12.100 --> 00:36:14.900
I completely recommend using
open password security,

00:36:14.900 --> 00:36:17.120
and it looks like a lot
of you guys do here.

00:36:17.380 --> 00:36:20.380
Use the home directories,
and as you know now,

00:36:20.400 --> 00:36:24.290
that file vault is there,
and you can just click a setting

00:36:24.290 --> 00:36:26.760
and your users will be secured.

00:36:26.760 --> 00:36:28.170
Use the built-in firewall.

00:36:28.170 --> 00:36:28.680
Why not?

00:36:28.680 --> 00:36:29.350
It's there.

00:36:29.350 --> 00:36:29.890
It's free.

00:36:29.980 --> 00:36:30.850
What the heck?

00:36:30.850 --> 00:36:32.870
Only turn on the services that you need.

00:36:32.870 --> 00:36:34.180
There's a no-brainer.

00:36:34.480 --> 00:36:36.470
And don't make everybody an
administrator unless you have to.

00:36:38.190 --> 00:36:39.430
So I'm going to bring up Sean Geddes.

00:36:39.630 --> 00:36:42.800
Sean's going to talk about the current
and future initiatives of OS X and some

00:36:42.800 --> 00:36:45.200
of the neat work we're doing around that.

00:36:50.080 --> 00:36:52.820
So I brought all my authentication
devices because I was afraid

00:36:52.820 --> 00:36:53.900
I wouldn't be able to get in here.

00:36:53.900 --> 00:36:59.800
The area of security within government,
many folks may initially think,

00:36:59.900 --> 00:37:03.670
that's just government,
doesn't affect me.

00:37:03.670 --> 00:37:05.980
But I think all of you,
don't you all pay taxes?

00:37:07.460 --> 00:37:10.930
I'll pay, somehow you're all impacted
by what our government does.

00:37:10.930 --> 00:37:13.180
What we want to do is
share a little bit with,

00:37:13.180 --> 00:37:17.470
related to the OS,
related to efforts that Apple's

00:37:17.470 --> 00:37:22.800
doing and external entities are
doing related to our product.

00:37:22.880 --> 00:37:27.830
So within not only our government,
but within governments

00:37:27.830 --> 00:37:31.970
literally around the world,
there's the need to...

00:37:32.770 --> 00:37:36.000
Evaluate to provide assurance
that the product truly is

00:37:36.270 --> 00:37:38.390
providing those secure services.

00:37:38.430 --> 00:37:41.790
We're leveraging a lot of open source.

00:37:41.790 --> 00:37:45.120
How does Apple or how
do others ensure to you,

00:37:45.120 --> 00:37:50.830
the customer, to integrators, to others,
that that product is providing that

00:37:51.160 --> 00:37:55.500
true security out of the box and
with some of the recommendations

00:37:55.510 --> 00:38:00.370
that Eric and John and Dave had
mentioned a little bit earlier?

00:38:00.380 --> 00:38:05.540
So common criteria,
widely known also as ISO 15408,

00:38:05.730 --> 00:38:10.020
for those of you kind of in
the other part of the world,

00:38:10.410 --> 00:38:12.620
this is to address just that.

00:38:12.670 --> 00:38:16.140
How do you evaluate and how do
you put a level playing field,

00:38:16.220 --> 00:38:19.920
so to speak, on evaluating the
security of the products?

00:38:19.920 --> 00:38:23.290
Just to hit on some of these,
it's really to address

00:38:23.290 --> 00:38:27.850
issues in the markets,
international computer market trends,

00:38:27.850 --> 00:38:29.920
evaluation or evolution.

00:38:30.380 --> 00:38:32.910
So the first thing is the evolution
of adaptation of earlier criteria.

00:38:33.100 --> 00:38:37.470
If you saw the chain of events
of TSX and other products,

00:38:37.470 --> 00:38:41.550
other documents,
other government agencies that

00:38:41.550 --> 00:38:46.090
have involved themselves in
making this a ubiquitous or a

00:38:46.090 --> 00:38:49.040
globally recognized approach.

00:38:49.040 --> 00:38:54.830
All of this feeds into providing a
much larger worldview of how to look

00:38:54.840 --> 00:38:58.330
at products with respect to security.

00:38:58.340 --> 00:39:00.360
So with that,
I'm going to turn it over to Eric.

00:39:00.360 --> 00:39:00.360
Thank you.

00:39:00.400 --> 00:39:01.370
Thank you, John.

00:39:01.380 --> 00:39:01.930
So the first thing I wanted
to do was to talk about the

00:39:01.930 --> 00:39:02.290
common criteria with Apple.

00:39:02.360 --> 00:39:04.950
First of all,
I wanted to give a couple points to

00:39:05.000 --> 00:39:07.290
let you know really what this is doing.

00:39:07.300 --> 00:39:12.560
First of all, it's an independent,
certified lab that's looking at OS X,

00:39:12.610 --> 00:39:17.730
OS X server, to validate vendor claims,
validate what Apple is claiming

00:39:17.730 --> 00:39:19.890
about the product itself.

00:39:19.960 --> 00:39:22.660
So the feature set and the capabilities.

00:39:22.660 --> 00:39:26.360
Again, I had mentioned about
being globally accepted.

00:39:26.360 --> 00:39:27.940
It's ISO 15408.

00:39:30.730 --> 00:39:32.200
But what is Apple's target?

00:39:32.390 --> 00:39:37.540
What are we doing with respect
to Mac OS X and Mac OS X Server?

00:39:38.290 --> 00:39:43.740
We are shooting for pretty much kind of
the standard for all operating systems,

00:39:43.740 --> 00:39:46.930
and that's the controlled
access protection profile.

00:39:46.960 --> 00:39:52.150
The profile is really what the
functional requirements of the OS,

00:39:52.150 --> 00:39:57.400
what are those features,
what's really in the product itself.

00:39:57.880 --> 00:40:03.510
The reference at the end there is
really for the assurance level.

00:40:03.540 --> 00:40:08.520
How sure are you or how sure
can the independent lab provide

00:40:08.520 --> 00:40:13.510
to you that indeed that claim,
that functional feature,

00:40:13.510 --> 00:40:16.820
is again tested or truly is there?

00:40:16.820 --> 00:40:21.050
And again, a level three goes through a
methodically tested and checked process.

00:40:21.060 --> 00:40:25.540
There are multiple levels in this
that get into a more granular kind

00:40:25.540 --> 00:40:29.460
of... providing evidence and all that.

00:40:29.570 --> 00:40:31.710
Again, those features are indeed there.

00:40:31.710 --> 00:40:33.170
They're there.

00:40:33.180 --> 00:40:35.980
But I think for you all,
you want to know what value

00:40:36.110 --> 00:40:38.110
is it going to be to you,
right?

00:40:38.160 --> 00:40:44.120
What is Apple's evaluation of OS X and
OS X Server for common criteria?

00:40:44.120 --> 00:40:46.470
What value add is that
going to be for you?

00:40:46.480 --> 00:40:50.570
One of the key things is that, you know,
we've talked a lot

00:40:50.570 --> 00:40:54.290
about that here at WWDC,
the open source kernel.

00:40:54.300 --> 00:40:58.690
When you're dealing with a security of
OS X and OS X Server... you're truly

00:40:58.690 --> 00:41:01.270
looking at all of the open source code.

00:41:01.280 --> 00:41:02.500
You're looking at the kernel.

00:41:02.500 --> 00:41:04.780
You're looking at all the security
frameworks that have been mentioned.

00:41:04.780 --> 00:41:10.650
So you, from the developer standpoint,
are now getting, for you,

00:41:10.650 --> 00:41:15.350
an independently certified
open source under the framework

00:41:15.350 --> 00:41:17.590
for the operating system.

00:41:17.600 --> 00:41:20.550
Oops, I'm going backwards.

00:41:20.560 --> 00:41:24.560
You always have to hit the right button.

00:41:37.430 --> 00:41:43.800
Okay, for developers, not only that,
but you now have a secure foundation

00:41:43.910 --> 00:41:46.110
to build your solutions on as well.

00:41:46.190 --> 00:41:50.390
Much like I mentioned about
securing a foundation for OS X,

00:41:50.390 --> 00:41:54.190
since Darwin is the open source,
that could now be an embedded

00:41:54.210 --> 00:41:58.640
system for other solutions that
you yourself are building as well.

00:42:00.990 --> 00:42:05.660
So some of the things that we want
to move into and share with you

00:42:05.660 --> 00:42:09.010
from a perspective of what we're
doing within the government space,

00:42:09.010 --> 00:42:13.160
or at least with the
collaborative within that space.

00:42:13.160 --> 00:42:18.030
Kind of the second line there,
security built in, not bolted on.

00:42:18.030 --> 00:42:20.300
I guess that's kind of our
mantra within our space.

00:42:20.300 --> 00:42:23.720
There's so many products,
so many vendors that have solutions

00:42:23.720 --> 00:42:25.840
where security is an afterthought.

00:42:26.340 --> 00:42:30.200
Hopefully you have seen that Apple is
doing this right from the start.

00:42:31.580 --> 00:42:33.220
But not only building
things from the start,

00:42:33.220 --> 00:42:35.920
you have to have that evolution and
carry that through with products.

00:42:35.920 --> 00:42:39.490
One of those approaches is,
and I'll get into a little

00:42:39.490 --> 00:42:43.140
bit more of this later,
is a secure trusted OS consortium

00:42:43.250 --> 00:42:45.090
that Eric had mentioned.

00:42:45.580 --> 00:42:49.900
This is really an open, collaborative,
community-based environment for

00:42:49.900 --> 00:42:51.990
enhancing the security of Darwin.

00:42:51.990 --> 00:42:54.540
Again,
you're going to have this independently

00:42:54.950 --> 00:42:57.370
certified kernel and security frameworks.

00:42:57.500 --> 00:43:01.110
You need some additional enhancements
to keep up with the times,

00:43:01.110 --> 00:43:03.500
keep up with security innovation.

00:43:03.500 --> 00:43:06.380
Again, that's the focus of Stas,
and we'll get into a little

00:43:06.390 --> 00:43:07.980
bit more about that in a bit.

00:43:08.100 --> 00:43:12.340
Some other efforts that we
do is we've done some work

00:43:12.420 --> 00:43:15.200
as well relating with DARPA.

00:43:15.350 --> 00:43:17.400
DARPA is a
Defense Advanced Research Project Agency,

00:43:17.400 --> 00:43:21.680
and an individual there is Doug Monn,
who has been heading

00:43:21.680 --> 00:43:23.550
up one of his projects.

00:43:23.660 --> 00:43:25.670
It's called CHATS.

00:43:25.670 --> 00:43:28.320
It's Composable High Assurance
Trusted Systems.

00:43:28.410 --> 00:43:32.270
The reason that's important is,
as I just mentioned,

00:43:32.310 --> 00:43:36.350
Stas is focused on enhancing
the security of Darwin.

00:43:38.230 --> 00:43:41.370
The focus of chats is to
enhance the security of all

00:43:41.540 --> 00:43:43.690
open source operating systems.

00:43:43.920 --> 00:43:47.690
So we are kind of a spoke
in that whole process.

00:43:48.590 --> 00:43:50.900
One other thing is related to Kratus.

00:43:50.900 --> 00:43:54.600
Kratus, for those of you who don't know,
is a cooperative research

00:43:54.600 --> 00:43:56.380
and development agreement.

00:43:56.380 --> 00:44:00.210
And what that does is allow
two or more parties to work

00:44:00.220 --> 00:44:04.600
together in a very collaborative,
very interactive way to

00:44:04.600 --> 00:44:09.130
share the technologies,
to really get a little bit deeper into

00:44:09.250 --> 00:44:14.680
solutions without looking specifically
at producing a product at the end

00:44:14.700 --> 00:44:17.560
of the month or the next quarter.

00:44:17.560 --> 00:44:22.160
It's real research related
with experts involved.

00:44:22.780 --> 00:44:26.310
John had mentioned the federal
smart card integration that we

00:44:26.570 --> 00:44:27.880
talked about a little bit earlier.

00:44:27.880 --> 00:44:30.740
We did that specifically
to address Department of

00:44:30.740 --> 00:44:34.750
Defense needs for the CAT card,
which I've got a few of those here.

00:44:34.760 --> 00:44:40.150
This is yet another way that the
government and Apple being involved

00:44:40.160 --> 00:44:46.440
in this as well is trying to provide
another alternative for authentication,

00:44:46.440 --> 00:44:51.630
providing some mechanism for you,
the user, within the OS.

00:44:53.850 --> 00:44:56.800
And finally,
those of you who are familiar with NIST,

00:44:56.800 --> 00:44:58.900
National Institute on
Standard of Technology,

00:44:58.900 --> 00:45:01.850
there are many initiatives
going on there that we're a part

00:45:01.850 --> 00:45:05.440
of that is key to impacting,
again, not only government,

00:45:05.440 --> 00:45:09.360
but guidelines and standards
for rolling out enterprise and

00:45:09.360 --> 00:45:11.540
businesses after that as well.

00:45:11.540 --> 00:45:17.420
Many groups look to the guidelines
there for providing the direction.

00:45:19.020 --> 00:45:21.500
So let's look at just some of
these in a little bit more detail.

00:45:21.500 --> 00:45:24.480
I mentioned a little bit about
SecureTrustOS Consortium.

00:45:24.480 --> 00:45:28.270
This is that collaboration
between the public,

00:45:28.270 --> 00:45:31.090
private, and academic sectors.

00:45:31.090 --> 00:45:35.920
So there are university folks involved,
there are industry folks involved,

00:45:35.970 --> 00:45:38.760
and there are government folks involved.

00:45:38.820 --> 00:45:42.940
Again, an open collaboration,
all looking at the open source,

00:45:43.000 --> 00:45:46.810
addressing specific needs,
working together on issues,

00:45:46.810 --> 00:45:49.770
maybe highlighting some
areas that need work,

00:45:49.830 --> 00:45:54.270
and then going forth kind of both with
the passion and with the need within

00:45:54.550 --> 00:45:57.370
the organizations to make that happen.

00:45:58.980 --> 00:46:03.540
It truly becomes a collaborative
sandbox because you're

00:46:03.590 --> 00:46:07.460
working through those issues,
and this then becomes

00:46:07.460 --> 00:46:08.510
a staging area for X.

00:46:08.510 --> 00:46:10.940
Essentially what we're doing
is we're enhancing the kernel.

00:46:10.940 --> 00:46:16.720
It rolls right into Darwin CVS that
becomes the foundation for OS X.

00:46:16.720 --> 00:46:20.500
So it truly becomes a
staging area for Mac OS X.

00:46:21.320 --> 00:46:24.110
I want to give you at least some idea,
both from the high end

00:46:24.120 --> 00:46:27.140
and from a low end,
of the type of things that we address.

00:46:27.140 --> 00:46:32.140
One thing is,
kind of maybe from a more intense area,

00:46:32.140 --> 00:46:37.570
is actually evaluating the
original snapshot of Darwin at

00:46:37.720 --> 00:46:43.750
the time against other efforts,
maybe even like SELinux or some of

00:46:43.750 --> 00:46:50.920
the other initiatives that have been
funded and implemented in the past.

00:46:50.940 --> 00:46:53.160
." Where does Darwin stand
within that mix?

00:46:53.270 --> 00:46:57.430
What's the level of effort to bring
it up to speed or up to kind of

00:46:57.500 --> 00:47:00.080
on par with those same solutions?

00:47:00.080 --> 00:47:02.810
So that was one of the efforts
that had already gone on.

00:47:02.820 --> 00:47:06.470
Then there were some other ones
that may seem pretty small,

00:47:06.470 --> 00:47:10.630
but they have a much bigger impact,
and that was even leveraging the

00:47:10.630 --> 00:47:15.200
CDSA architecture within even just
one of the modules within Apache.

00:47:15.200 --> 00:47:18.270
Well, what are we doing going forward?

00:47:18.280 --> 00:47:24.310
Some of those projects...
Are security guidance documents.

00:47:24.380 --> 00:47:28.110
I know I've been talking to several
folks here at the conference,

00:47:28.210 --> 00:47:32.160
and we don't yet provide any real
documentation for what do I do to really

00:47:32.160 --> 00:47:36.550
configure kind of after I get out of the
box and after everything's shut down,

00:47:36.550 --> 00:47:38.130
what do I really get?

00:47:38.240 --> 00:47:40.020
Where do I go?

00:47:40.020 --> 00:47:44.630
Where do I... I see kind of a document
to tell me what to do to lock this

00:47:44.630 --> 00:47:47.250
down to some agreed level of security.

00:47:47.260 --> 00:47:50.600
So that's one of the
efforts moving forward.

00:47:51.060 --> 00:47:51.960
That's kind of at the low end.

00:47:52.120 --> 00:47:54.530
And at the high end is kind of nirvana,
right?

00:47:54.620 --> 00:47:58.640
The ultimate goal is this true SE Darwin,
so to speak, kind of on parallel

00:47:58.640 --> 00:48:00.120
with SE Linux approach.

00:48:00.120 --> 00:48:02.860
That's the Stas effort.

00:48:02.860 --> 00:48:04.080
I mentioned CRETA.

00:48:04.080 --> 00:48:05.540
CRETA, again,
is the Cooperative Research and

00:48:05.590 --> 00:48:06.540
Development Agreement.

00:48:06.540 --> 00:48:10.790
It's focused on security specifically,
right?

00:48:10.800 --> 00:48:11.750
A CRETA can be anything.

00:48:11.760 --> 00:48:15.360
A CRETA can be just looking
into any type of technology

00:48:15.360 --> 00:48:17.640
solving a real-world problem.

00:48:17.660 --> 00:48:22.430
In here, let's first take a look at...
what it does immediately

00:48:22.430 --> 00:48:25.820
for Apple and the partner,
if that's in the situation.

00:48:25.820 --> 00:48:29.800
And then we'll look at how it
impacts and affects you all as well.

00:48:29.820 --> 00:48:32.770
So first of all,
when we're focusing on this,

00:48:32.770 --> 00:48:35.780
there's a big technology transfer, right?

00:48:36.010 --> 00:48:41.140
Apple does some awesome stuff
internally with a security team

00:48:41.140 --> 00:48:45.100
and within managing new projects,
bringing in the open source community.

00:48:45.100 --> 00:48:48.970
But when you're really trying to
address security at the whole,

00:48:48.970 --> 00:48:54.090
holistically, from all angles,
you really need to reach out

00:48:54.090 --> 00:48:58.450
and exchange that technology,
both intelligence, the expertise,

00:48:58.450 --> 00:49:00.370
and literally down to the code level.

00:49:00.380 --> 00:49:02.710
And that's where the
technology transfer comes in.

00:49:04.200 --> 00:49:06.430
Sharing of expertise, ideas.

00:49:06.810 --> 00:49:11.900
It really is now enabling the
partners to get further along

00:49:11.900 --> 00:49:12.750
than they would on their own.

00:49:12.990 --> 00:49:14.240
That's kind of a given, right?

00:49:14.240 --> 00:49:17.590
If two people are working on the problem,
you're going to solve it much

00:49:17.590 --> 00:49:21.260
quicker if you're both working pretty
good and sharing your resources.

00:49:21.260 --> 00:49:25.160
You're going to get the problem solved
sooner than if you're both working kind

00:49:25.160 --> 00:49:27.450
of in parallel on your own solution.

00:49:29.490 --> 00:49:32.730
So the real important thing to you is,
how is Apple's involvement in

00:49:32.730 --> 00:49:35.030
Accraida going to help you?

00:49:35.970 --> 00:49:39.360
The first thing is that much
like I mentioned with Stas,

00:49:39.490 --> 00:49:46.050
now you're getting the benefit
of an enhanced foundation

00:49:46.050 --> 00:49:49.990
to build your solutions on,
whether you build it directly on OS X,

00:49:49.990 --> 00:49:53.710
OS X server, or directly on Darwin with
security frameworks.

00:49:53.760 --> 00:49:59.100
You're getting that as part of your
development process literally for free.

00:49:59.230 --> 00:50:02.120
You're getting that as part
of the solution from Apple.

00:50:02.760 --> 00:50:05.520
The same thing, technology transfer.

00:50:05.520 --> 00:50:09.880
You may not have that area of expertise,
maybe in encrypted storage

00:50:10.110 --> 00:50:14.360
containers like the encrypted
disk copy image or public key.

00:50:14.360 --> 00:50:17.710
That may not be your expertise,
but now you're getting that

00:50:17.790 --> 00:50:20.150
essentially for free from this effort.

00:50:21.870 --> 00:50:26.160
And the real key thing is that now
you can focus more on your killer

00:50:26.160 --> 00:50:30.340
application that makes you more money
rather than focusing on trying to get

00:50:30.460 --> 00:50:34.660
and build in all that security from
the start within your application.

00:50:34.660 --> 00:50:38.030
And the key thing is that we're
all benefiting from this effort.

00:50:38.030 --> 00:50:39.210
It's not just an Apple.

00:50:39.210 --> 00:50:40.490
It's not just a partner.

00:50:40.490 --> 00:50:43.310
We're all benefiting
from all this effort.

00:50:44.080 --> 00:50:46.640
John had mentioned about the smart card.

00:50:46.640 --> 00:50:49.320
DoD has pretty much led the way on this.

00:50:49.320 --> 00:50:52.430
And what I wanted to show
is a couple highlights.

00:50:52.520 --> 00:50:55.840
One thing is this is a multi-purpose ID.

00:50:55.910 --> 00:51:01.600
I think there's specifically about
five very directed types of solutions

00:51:01.960 --> 00:51:07.280
that are being solved or needs
being solved by the smart cards.

00:51:07.340 --> 00:51:12.520
The physical identification,
the secure logging into systems,

00:51:12.520 --> 00:51:15.290
the... the signing and
encrypting of mail,

00:51:15.470 --> 00:51:16.440
secure web access.

00:51:16.650 --> 00:51:19.380
And I think many of you have
seen this in other sessions.

00:51:19.440 --> 00:51:21.930
But it's a multi-purpose card, right?

00:51:21.980 --> 00:51:23.600
Multiple functions.

00:51:23.640 --> 00:51:25.640
And I've got tons of cards
so you can see that it goes

00:51:25.750 --> 00:51:28.100
beyond the need for just one.

00:51:28.170 --> 00:51:30.260
But again, the key thing,
the reason I want to bring this out for

00:51:30.260 --> 00:51:37.100
you all is that they already have issued
2.4 million of these just within DoD.

00:51:37.100 --> 00:51:39.230
And they're issuing 10,000 a day.

00:51:39.420 --> 00:51:43.200
That's a business opportunity.

00:51:44.160 --> 00:51:45.570
This is where the money
comes in for you all.

00:51:45.600 --> 00:51:49.480
Not only that is that
as things move forward,

00:51:49.480 --> 00:51:52.220
the estimate is about
another 1.3 million a year.

00:51:52.240 --> 00:51:55.660
This is only,
I'm only referring at the moment to DOD.

00:51:55.670 --> 00:51:58.740
Then you have all the other agencies
within the federal government.

00:51:58.740 --> 00:52:02.180
Many of you probably should have
seen areas even within state

00:52:02.190 --> 00:52:05.970
local governments are looking
at types of solutions like this.

00:52:06.110 --> 00:52:07.690
Again, big opportunities for you.

00:52:10.210 --> 00:52:14.090
Those who also are in the area of
biometrics within the DOD space,

00:52:14.100 --> 00:52:18.520
they're looking to incorporate
that as well in with smart cards.

00:52:18.550 --> 00:52:21.910
So again, this is where you can start
leveraging the technologies

00:52:21.920 --> 00:52:23.350
that are on the platform.

00:52:23.360 --> 00:52:26.640
On the right side,
you're seeing a little bit of the

00:52:26.660 --> 00:52:29.020
anticipated deployment numbers.

00:52:29.140 --> 00:52:32.620
Some of those are a little
bit debated by various folks,

00:52:32.710 --> 00:52:37.140
but being upwards into 2005,
possible deployment of up into

00:52:37.140 --> 00:52:39.480
the 16 million card range.

00:52:39.480 --> 00:52:42.940
Again, just within our space.

00:52:43.530 --> 00:52:46.370
Maybe at this point I guess
I need to bring back Mr.

00:52:46.380 --> 00:52:48.880
Hutzler or I guess the whole team.

00:52:48.880 --> 00:52:51.580
So thank you very much
for allowing me to share.

00:52:57.240 --> 00:53:01.060
So this is going to be part of
your pack when you get your DVDs,

00:53:01.060 --> 00:53:03.420
so I just thought I'd put those on
there for you as reference later on.