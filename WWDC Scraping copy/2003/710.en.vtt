WEBVTT

00:00:28.150 --> 00:00:31.640
So because this is such a kind
of a different year for us

00:00:31.740 --> 00:00:34.000
mixing in the QuickTime Live and
the WWDC stuff together,

00:00:34.000 --> 00:00:35.900
I just kind of,
before I essentially start the class,

00:00:35.900 --> 00:00:40.040
just kind of get a sense from folks
what angle we're coming from so

00:00:40.040 --> 00:00:44.260
I can frantically rewrite my keynote
presentation in 30 seconds and do that.

00:00:45.270 --> 00:00:48.900
So how many people are coming
from the content world primarily?

00:00:49.010 --> 00:00:52.680
And from the programming
software engineering world?

00:00:52.680 --> 00:00:55.300
Okay, about 50-50?

00:00:55.350 --> 00:00:55.590
Perfect.

00:00:55.640 --> 00:00:58.320
Nothing like a no audience
overlap to make it all exciting.

00:00:59.900 --> 00:01:02.630
So the folks are coming
from the content world.

00:01:02.630 --> 00:01:04.490
What do you want to learn today?

00:01:04.490 --> 00:01:06.290
What do you want to know about?

00:01:06.290 --> 00:01:07.520
Just shout it out.

00:01:12.290 --> 00:01:13.560
But breast-sabering
video into the computer,

00:01:13.560 --> 00:01:16.340
so basically the capture process,
how to go from tape into the computer.

00:01:16.340 --> 00:01:16.720
Good.

00:01:16.720 --> 00:01:19.000
Always a challenging issue,
but getting better.

00:01:19.000 --> 00:01:19.260
Yeah.

00:01:21.800 --> 00:01:22.520
Analog Digital.

00:01:22.650 --> 00:01:23.780
OK.

00:01:23.850 --> 00:01:24.280
Great.

00:01:24.300 --> 00:01:26.260
All these things,
I haven't run a slide up for you yet.

00:01:26.260 --> 00:01:27.460
It's good when I ask these things.

00:01:27.460 --> 00:01:28.800
Yeah.

00:01:31.350 --> 00:01:32.220
Currency of the tools.

00:01:32.220 --> 00:01:32.280
Good.

00:01:32.280 --> 00:01:37.580
Yeah, so my plan is I've got
about a 45-minute president,

00:01:37.580 --> 00:01:40.500
half an hour, 45 minutes of talking,
and then I'm just going to do demos,

00:01:40.500 --> 00:01:43.860
and we'll let audience vote happen
what demos we're going to see.

00:01:43.880 --> 00:01:45.990
So make sure you have your
favorite tool in mind,

00:01:46.020 --> 00:01:48.590
and we'll just take a look at
what people are interested in,

00:01:48.590 --> 00:01:50.970
what scenarios you want to have,
just to prove them.

00:01:50.970 --> 00:01:54.330
Keeping up my feet is always good to
not know what I'm doing in advance.

00:01:54.330 --> 00:01:55.120
So, good.

00:01:56.120 --> 00:01:58.990
For the software folks,
what do software people

00:01:58.990 --> 00:02:00.360
want to know from me?

00:02:00.360 --> 00:02:01.790
That was a frightening thought.

00:02:01.870 --> 00:02:05.240
Is anyone building software
that involves preprocessing?

00:02:05.240 --> 00:02:07.340
Or have that in mind?

00:02:18.950 --> 00:02:20.560
Great, OK.

00:02:20.700 --> 00:02:21.050
Sounds good.

00:02:21.140 --> 00:02:23.020
Yeah,
so actually it was not in the syllabus.

00:02:23.020 --> 00:02:24.310
Actually,
we'll be looking at Compressor today,

00:02:24.310 --> 00:02:25.210
by the way.

00:02:25.260 --> 00:02:25.980
I should mention.

00:02:25.980 --> 00:02:28.620
So I got my NFR copy of
that at the last minute.

00:02:28.620 --> 00:02:30.220
So I haven't actually used it much yet.

00:02:30.220 --> 00:02:32.920
So it'll be a-- we'll be
learning Compressor to get

00:02:32.920 --> 00:02:33.840
it together a little bit.

00:02:33.960 --> 00:02:35.780
But it's pretty easy to use so far.

00:02:35.780 --> 00:02:38.710
Actually,
it completed an entire file in it

00:02:38.720 --> 00:02:43.090
during an earlier presentation,
thanks to the batteries.

00:02:43.930 --> 00:02:45.800
Cool.

00:02:45.800 --> 00:02:47.340
So, sounds good.

00:02:47.340 --> 00:02:48.300
So, is there a time?

00:02:48.300 --> 00:02:49.170
We've got three more minutes.

00:02:49.260 --> 00:02:52.160
So, I just got bored,
so I started talking here.

00:02:52.160 --> 00:02:52.910
It's too nervous.

00:02:52.910 --> 00:02:54.360
I read all my email.

00:02:54.360 --> 00:02:55.120
What am I going to do up here?

00:02:55.280 --> 00:02:59.950
So, what are, is anybody having like a
big preprocessing headaches?

00:03:00.010 --> 00:03:03.170
Just like kicking someone's
butt or problems you're having,

00:03:03.260 --> 00:03:06.020
something like that
that's just causing pain?

00:03:06.020 --> 00:03:06.410
Yeah.

00:03:11.520 --> 00:03:16.420
There are so many rules of thumbs
that you need a lot more arms than

00:03:16.420 --> 00:03:17.810
we each have on this kind of stuff.

00:03:17.970 --> 00:03:20.410
If you're doing it lots of
times to see which works best,

00:03:20.490 --> 00:03:21.430
that means you're doing the right thing.

00:03:21.490 --> 00:03:27.600
I encoded my first file with Macramein
Director Accelerator in 1989.

00:03:27.600 --> 00:03:30.790
So this is my 14th anniversary
here of doing this stuff,

00:03:30.860 --> 00:03:33.960
and I still encode every file
about three times that I do.

00:03:33.960 --> 00:03:36.740
It's like you just get a
little bit closer every time.

00:03:36.760 --> 00:03:39.180
So it's always a good idea.

00:03:39.260 --> 00:03:40.600
It's healthy to continue to experiment.

00:03:40.600 --> 00:03:41.940
If you're not sure what's
the best way to do it,

00:03:41.940 --> 00:03:43.170
try it both ways and see what happens.

00:03:43.180 --> 00:03:45.820
One of the nice things about fast
computers is you can just do a big batch

00:03:45.820 --> 00:03:47.580
and try a lot of different alternatives.

00:03:47.580 --> 00:03:50.020
The proof's ultimately in the pudding.

00:03:50.020 --> 00:03:53.810
All that really counts in the end is
the pixels you get on the user screen.

00:03:53.820 --> 00:03:57.970
So whatever looks and sounds
best is the right solution.

00:03:57.980 --> 00:04:00.240
Having that kind of exploratory
approach is a great one,

00:04:00.250 --> 00:04:00.730
I think.

00:04:01.380 --> 00:04:06.720
There's so many weird
little things you can do.

00:04:06.720 --> 00:04:08.360
I'm not going to be talking
about compression formats.

00:04:09.260 --> 00:04:11.200
I'm going to be talking
about codec tips today.

00:04:11.340 --> 00:04:13.260
Primarily, everything that's going
to happen from your video.

00:04:13.320 --> 00:04:13.760
Let me see.

00:04:13.760 --> 00:04:16.480
You've got your capture file
on your hard drive to what you

00:04:16.870 --> 00:04:18.400
actually hand off to the compressor.

00:04:18.470 --> 00:04:20.420
It's kind of the middle part
we're talking about today.

00:04:20.420 --> 00:04:22.420
And that's certainly
enough for 90 minutes.

00:04:22.420 --> 00:04:25.910
But yeah, I mean, so shall we?

00:04:25.920 --> 00:04:27.920
It's time to formally start now.

00:04:27.920 --> 00:04:29.910
So thanks for indulging me.

00:04:31.070 --> 00:04:33.580
Oh, and definitely when you're
asking questions from now on,

00:04:33.580 --> 00:04:35.800
because we are taping,
make sure you come up to the microphones.

00:04:35.800 --> 00:04:38.920
But please feel free to ask
questions during the presentation.

00:04:40.320 --> 00:04:41.540
All right, thanks for coming everybody.

00:04:41.540 --> 00:04:46.650
This is Preprocessing Principles and a
special hello to our friends listening

00:04:46.650 --> 00:04:49.340
in Nihongo and on ADC TV or on the DVD.

00:04:50.190 --> 00:04:54.110
doesn't really need an introduction
per se in the video world or

00:04:54.110 --> 00:04:56.070
in the digital video world.

00:04:56.100 --> 00:04:59.570
So given his last five
minutes of casual discussion,

00:04:59.580 --> 00:05:02.140
we're really happy to have him here.

00:05:02.140 --> 00:05:06.870
Many of us wish that there was a do
what I mean button in the compression

00:05:06.870 --> 00:05:10.650
tools and that everything would come
out perfectly and that we'd get,

00:05:10.650 --> 00:05:14.660
you know, bytes per second when we really
were getting bits per second.

00:05:14.660 --> 00:05:19.110
So we hope that Ben offers some
good guidance on how to get

00:05:19.110 --> 00:05:24.300
really good video even before
video hits the compression tool.

00:05:24.300 --> 00:05:28.080
And I'll hand it over to you, Ben,
and then we'll have a Q&A afterwards.

00:05:28.080 --> 00:05:30.320
And I would ask that
if when we do the Q&A,

00:05:30.320 --> 00:05:34.050
you do that with the microphone,
either raise your hand and somebody

00:05:34.090 --> 00:05:36.860
will bring a mic to you or there's
a mic in the center of the room.

00:05:36.860 --> 00:05:41.010
That way the question can be
understood clearly and translated well.

00:05:41.110 --> 00:05:41.780
So thanks, Ben.

00:05:41.780 --> 00:05:42.290
Off to you.

00:05:42.300 --> 00:05:42.740
Great.

00:05:42.740 --> 00:05:43.300
Thanks.

00:05:43.300 --> 00:05:43.860
All right.

00:05:43.890 --> 00:05:46.580
So I'm going to have my Steve moment.

00:05:46.580 --> 00:05:47.860
I have a remote mouse here.

00:05:47.860 --> 00:05:48.770
First time here.

00:05:48.770 --> 00:05:50.370
I got Keynote and a remote mouse.

00:05:50.440 --> 00:05:52.000
I feel like a real boy for once.

00:05:52.000 --> 00:05:52.440
This is good.

00:05:52.440 --> 00:05:55.830
No more right arrow key
in PowerPoint for me.

00:05:55.830 --> 00:05:56.880
No siree.

00:05:56.880 --> 00:05:58.410
So we said that.

00:05:58.410 --> 00:05:59.530
This is me.

00:05:59.530 --> 00:06:03.020
And my name is Ben and I'm a codec nerd.

00:06:03.020 --> 00:06:06.240
So, yeah.

00:06:06.240 --> 00:06:08.960
So what we're talking about
today is preprocessing.

00:06:09.020 --> 00:06:13.970
And we're going to look at a few tools,
talk about the theory of it,

00:06:14.040 --> 00:06:16.360
try to get this all together.

00:06:16.450 --> 00:06:18.790
So talk about some ideas and
actually show you how to apply those

00:06:18.790 --> 00:06:20.260
things in some real world projects.

00:06:20.260 --> 00:06:24.480
And the focus of today,
this is also to be useful stuff.

00:06:24.560 --> 00:06:26.840
If you're compressing video,
I hope everyone today,

00:06:26.840 --> 00:06:28.860
I can answer a question you've had.

00:06:28.860 --> 00:06:30.640
And it will save you some time and work.

00:06:30.700 --> 00:06:34.080
I'll be helping you get better
results and lower your Aspen budget.

00:06:34.130 --> 00:06:35.210
It's always the goal.

00:06:35.260 --> 00:06:38.770
So we have an agenda.

00:06:39.020 --> 00:06:40.130
What is this?

00:06:40.260 --> 00:06:41.010
Why it matters?

00:06:41.010 --> 00:06:42.170
How do we do it?

00:06:42.400 --> 00:06:43.520
How do we do it?

00:06:43.520 --> 00:06:46.520
And primarily today we're going
to talk about web delivery.

00:06:46.600 --> 00:06:48.520
DVD code is actually quite a bit easier.

00:06:48.520 --> 00:06:49.780
I'll mention it here and there.

00:06:49.780 --> 00:06:52.510
But the focus today is delivering on web.

00:06:52.550 --> 00:06:55.520
You know, you're on cell phones,
all that kind of stuff.

00:06:55.520 --> 00:06:58.520
But feel free to ask DVD questions
that are specific as they come up.

00:06:58.520 --> 00:07:01.520
But fortunately 90% of the
time DVD is pretty easy.

00:07:01.520 --> 00:07:03.780
With a couple of caveats I'll get to.

00:07:03.970 --> 00:07:05.800
So, preprocessing.

00:07:05.980 --> 00:07:09.660
Preprocessing is pretty much everything
that happens between your source frame of

00:07:09.660 --> 00:07:11.900
video and your compressor frame of video.

00:07:11.930 --> 00:07:14.140
So, you know, any codec,
you've got your capture your stuff,

00:07:14.140 --> 00:07:17.900
it's in Blackmagic codec, or it's in DV,
or it's in animation.

00:07:17.900 --> 00:07:19.970
You've got a bunch of
rectangles to start with,

00:07:19.990 --> 00:07:22.990
and then in the end you're going to hand
a bunch of rectangles off to the codec,

00:07:22.990 --> 00:07:24.900
which is going to make it your bitstream.

00:07:24.900 --> 00:07:28.110
So preprocessing is all about taking
one rectangle and then making a better

00:07:28.220 --> 00:07:29.900
rectangle out of it for the codec.

00:07:29.900 --> 00:07:33.950
Rectangle to rectangle
doesn't sound too hard,

00:07:33.950 --> 00:07:34.890
if only.

00:07:34.990 --> 00:07:38.090
For me, I find that, like,
you know the bitrate you want, generally,

00:07:38.090 --> 00:07:38.830
in a project.

00:07:39.020 --> 00:07:40.860
You can kind of key that in,
you know the right frame rate,

00:07:40.860 --> 00:07:41.900
a lot of those kind of stuff.

00:07:42.070 --> 00:07:44.840
Preprocessing is the part
that's got the most artistic,

00:07:44.890 --> 00:07:46.890
it's the most crafty compression.

00:07:46.910 --> 00:07:49.900
It's the one I wind up spending
the vast majority of my time on.

00:07:50.070 --> 00:07:52.520
You know, I mean,
even when you're doing a big project,

00:07:52.630 --> 00:07:53.890
you know the specs of it.

00:07:53.900 --> 00:07:55.900
You've got different
kinds of source coming in.

00:07:55.900 --> 00:07:58.950
You often wind up tweaking
each clip a bunch of times,

00:07:58.950 --> 00:07:59.820
and the filters and
all that kind of stuff.

00:07:59.900 --> 00:08:02.890
And we're getting tools to make this
better and better and more automated,

00:08:02.900 --> 00:08:02.900
which is nice.

00:08:02.900 --> 00:08:06.900
But, you know, it's always the part
that I wind up sweating.

00:08:06.900 --> 00:08:09.630
You know, it's all there, you know,
just knock it over a couple pixels here

00:08:09.680 --> 00:08:11.770
and there and do it over and over again.

00:08:11.900 --> 00:08:14.420
Fortunately,
there's actually a new compressor

00:08:14.420 --> 00:08:15.900
app I'm pretty excited about.

00:08:15.910 --> 00:08:17.760
It's got some pretty good
features for actually seeing

00:08:17.760 --> 00:08:20.900
it in real time in your effect,
which pays off a lot.

00:08:21.410 --> 00:08:23.270
So, why does it matter?

00:08:23.270 --> 00:08:27.150
We're really trying to maximize
what I call bang for the bit,

00:08:27.260 --> 00:08:28.040
compression efficiency.

00:08:28.040 --> 00:08:31.490
We're trying to turn every bit
of bandwidth we have available

00:08:31.490 --> 00:08:34.960
into information that serves
our communication goals.

00:08:34.960 --> 00:08:37.250
We're not compressing video for fun,
we're compressing video

00:08:37.250 --> 00:08:38.260
to try to communicate.

00:08:38.260 --> 00:08:41.540
And by preprocessing,
we're trying to give the codec

00:08:41.590 --> 00:08:44.380
the right input it can to turn,
to deliver the best

00:08:44.790 --> 00:08:46.630
possible end result it can.

00:08:47.580 --> 00:08:50.370
You know, nothing,
no distracting artifacts,

00:08:50.410 --> 00:08:52.520
as much information as possible.

00:08:52.530 --> 00:08:56.300
Every bit of pixel count, so.

00:08:56.680 --> 00:08:58.260
This is a little illustration here.

00:08:58.380 --> 00:09:01.100
This is just, you know, I grabbed a,
this is actually courtesy

00:09:01.100 --> 00:09:02.240
of DreamWorks here.

00:09:02.240 --> 00:09:05.220
They seeded me with the movie trailer
for a movie called Biker Boys,

00:09:05.220 --> 00:09:06.940
which you've probably never seen.

00:09:06.940 --> 00:09:08.520
I've never seen it,
but the movie trailer is kind of cool.

00:09:08.520 --> 00:09:11.470
And people always do like cool movies
like Terminator 2 for the demos.

00:09:11.470 --> 00:09:14.190
And the problem with a good movie
like that or Finding Nemo is you watch

00:09:14.190 --> 00:09:15.740
the trailer and get excited about it.

00:09:15.740 --> 00:09:17.990
By choosing kind of a movie
no one watched or cared about,

00:09:18.000 --> 00:09:20.450
you can actually look at the
video frames and not be distracted

00:09:20.450 --> 00:09:22.100
by it being funny or anything.

00:09:22.120 --> 00:09:25.860
This is a kind of
typical interlaced frame.

00:09:25.860 --> 00:09:28.830
It's a little bit jumbly here just
because of the scaling and key note,

00:09:28.830 --> 00:09:29.790
but you get the idea.

00:09:30.000 --> 00:09:32.420
Typical frame, you pause on it,
you see with any kind of motion

00:09:32.420 --> 00:09:33.870
you get those lines like that.

00:09:33.900 --> 00:09:36.800
And then if we preprocess the frame,
it'll look like that.

00:09:37.050 --> 00:09:39.780
So not a huge difference like this,
you know, a little bit.

00:09:39.780 --> 00:09:45.760
But when we compress these two,
we get a pretty big difference here.

00:09:45.880 --> 00:09:45.900
If I just, you know, export, uh,

00:09:46.070 --> 00:09:49.140
at 800 kilobit MPEG-4
from QuickTime Players,

00:09:49.140 --> 00:09:50.480
we went up with this.

00:09:50.480 --> 00:09:53.040
And I think you can see
okay in the audience here,

00:09:53.040 --> 00:09:54.240
it looks pretty bad.

00:09:54.280 --> 00:09:57.800
You know, all those sharp little
lines really kill the codec,

00:09:57.880 --> 00:10:02.320
it's confused, it's messed up, you know,
it's like a mountain or a motorcycle,

00:10:02.320 --> 00:10:03.810
it's really hard to tell what's going on.

00:10:03.820 --> 00:10:06.740
Same frame, same data rate preprocessed,
you know,

00:10:06.740 --> 00:10:08.630
went up with a much clearer image.

00:10:08.760 --> 00:10:11.610
So even if they don't look,
even if before you compress it,

00:10:11.610 --> 00:10:13.650
you don't see that big a difference.

00:10:13.760 --> 00:10:15.360
When you actually compress it,
it really pays off.

00:10:15.440 --> 00:10:18.000
By just getting rid of
data that isn't there,

00:10:18.000 --> 00:10:21.270
by eliminating the noise,
you're trying to maximize the signal.

00:10:21.280 --> 00:10:22.500
And there's a lot of
different kinds of that.

00:10:22.910 --> 00:10:28.060
Also a couple things is, this frame was,
what's going on?

00:10:28.060 --> 00:10:29.770
Okay, here we go.

00:10:33.870 --> 00:10:36.900
Anyway, so let me just start off
with the first steps here.

00:10:36.980 --> 00:10:40.630
I'm going to walk through typically
the filter chain that most tools use,

00:10:40.630 --> 00:10:44.130
the order you're going to
apply the filters in the tools,

00:10:44.130 --> 00:10:45.360
conceptually in the
order I'm going to do.

00:10:45.420 --> 00:10:46.440
First thing, de-interlacing.

00:10:46.490 --> 00:10:48.260
Example I gave you there.

00:10:48.330 --> 00:10:50.010
Traditional video,
you shoot in interlaced mode like

00:10:50.010 --> 00:10:51.140
most video cameras are going to do.

00:10:51.140 --> 00:10:53.660
All your even lines and all your
odd lines are going to be captured

00:10:53.660 --> 00:10:56.130
half of a frame apart in duration.

00:10:56.240 --> 00:11:00.290
So in NTSC, how many people are
coming from a PAL country?

00:11:00.460 --> 00:11:03.230
Okay,
so a 60th of a second apart in NTSC and

00:11:03.230 --> 00:11:05.080
a 50th of a second apart in PAL.

00:11:05.080 --> 00:11:06.400
I will try to give PAL examples.

00:11:06.400 --> 00:11:08.700
PAL is actually a much,
much better source format

00:11:08.700 --> 00:11:09.760
for doing video with.

00:11:09.890 --> 00:11:12.190
You've got 25 frames
a second progressive,

00:11:12.360 --> 00:11:13.960
you've got 576 lines.

00:11:13.960 --> 00:11:16.420
I mean,
I've been moving to England and doing

00:11:16.420 --> 00:11:18.780
only PAL video compression many times.

00:11:18.780 --> 00:11:22.150
But here we are in
NTSC and we'll make do.

00:11:22.150 --> 00:11:24.870
So just bear with us PAL people.

00:11:24.870 --> 00:11:27.630
We suffer more than you know.

00:11:29.800 --> 00:11:33.710
Okay, computer video obviously is just
drone top to bottom progressive scan.

00:11:33.710 --> 00:11:35.210
So not normally a big deal.

00:11:35.210 --> 00:11:39.020
Various codecs like our DVD player
apps can often like deal with the

00:11:39.060 --> 00:11:41.440
interlaces and show a progressive
on the screen and it looks okay.

00:11:41.440 --> 00:11:43.130
However, I see this a lot.

00:11:43.260 --> 00:11:46.910
People export into web video format
and leave in the two fields in there.

00:11:47.070 --> 00:11:49.460
So basically you wind up with a
frame where you have every other line

00:11:49.460 --> 00:11:50.990
doesn't match where there's motion.

00:11:50.990 --> 00:11:55.160
And that is just a total killer
because the things that really

00:11:55.160 --> 00:11:58.880
hurt codecs where it would take a
lot of bits to encode are motion,

00:11:58.880 --> 00:11:59.850
and detail.

00:11:59.930 --> 00:12:04.530
And basically a lot of horizontal
lines where each pixel is completely

00:12:04.530 --> 00:12:06.880
different than the one before and
after it is almost the most difficult

00:12:06.880 --> 00:12:08.120
thing you can imagine encoding.

00:12:08.510 --> 00:12:11.080
So when you have interlaced
artifacts like that in a frame,

00:12:11.220 --> 00:12:14.410
all the bits get spit trying
to draw those little horizontal

00:12:14.410 --> 00:12:15.540
lines that don't really matter.

00:12:15.790 --> 00:12:18.120
And those are bits that don't
get spit on drawing say the face,

00:12:18.120 --> 00:12:20.810
you know, the person in the frame.

00:12:20.810 --> 00:12:22.120
It does it a lot.

00:12:22.120 --> 00:12:27.850
Also you want to get these
double images of moving objects.

00:12:28.000 --> 00:12:28.120
You throw a baseball,
you'll see like two baseballs that are

00:12:28.120 --> 00:12:28.120
kind of like translucent over the screen.

00:12:28.460 --> 00:12:30.910
translucent over the background because
they're getting blended together.

00:12:30.910 --> 00:12:31.860
It doesn't look good at all.

00:12:31.860 --> 00:12:36.780
So if you have progressive content,
it's a- I mean, you're great,

00:12:36.780 --> 00:12:39.740
but if you have Interlaced you actually
have to deal with it one-fashioned.

00:12:39.740 --> 00:12:42.240
A lot of tools,
traditionally it was called

00:12:42.350 --> 00:12:45.880
the basic method or whatever,
it eliminates one of the two fields.

00:12:45.960 --> 00:12:48.990
Okay, even and odd lines don't match,
throw away all the odd ones.

00:12:48.990 --> 00:12:49.900
You got even lines left.

00:12:49.900 --> 00:12:52.750
The big problem with that is you've
thrown away half your image data.

00:12:52.780 --> 00:12:56.580
If you throw away half your lines,
you had 480 lines in NTSC originally,

00:12:56.580 --> 00:12:57.640
you've got 240 left.

00:12:58.300 --> 00:12:59.820
Okay, well, that's gonna be an issue.

00:12:59.890 --> 00:13:03.110
You're throwing away half of your
image data before you started.

00:13:03.120 --> 00:13:06.540
The preferable method to use is
what's called adaptive deinterlacing.

00:13:06.540 --> 00:13:08.530
Most tools support adaptive
deinterlacing these days.

00:13:08.540 --> 00:13:11.770
They can call it different names,
but the basic idea is find the

00:13:11.840 --> 00:13:15.000
parts of the images that move
where you get the interlacing,

00:13:15.180 --> 00:13:17.420
deinterlace those,
parts of the images that aren't moving

00:13:17.420 --> 00:13:19.940
where you don't have the artifacts,
leave those alone, so you get higher

00:13:20.000 --> 00:13:21.460
resolution in those areas.

00:13:21.540 --> 00:13:24.040
You know, pretty smart little thing.

00:13:24.180 --> 00:13:25.920
Why is it paying off hugely?

00:13:25.930 --> 00:13:28.400
I mean, you know,
it's for like slow moving content,

00:13:28.400 --> 00:13:29.480
almost doubles your resolution.

00:13:29.480 --> 00:13:30.580
You got to watch out.

00:13:30.580 --> 00:13:32.240
Some tools will wind
up giving you a little,

00:13:32.240 --> 00:13:34.340
will just guess wrong as to
what's moving and what's not,

00:13:34.340 --> 00:13:36.260
and you'll get little
glitches here and there.

00:13:36.410 --> 00:13:38.060
99% of the time it's not a big deal.

00:13:38.060 --> 00:13:41.770
I mean, it's almost always worth doing,
just kind of keep your eye out for

00:13:41.770 --> 00:13:46.790
places where it could have some problems,
but hugely pays off.

00:13:46.950 --> 00:13:49.200
A special case of this
is inverse telephony.

00:13:49.250 --> 00:13:52.020
How many folks deal with a lot
of film content or 24p content?

00:13:52.020 --> 00:13:55.200
Like movie trailers, TV commercials,
primetime dramas, all that?

00:13:55.270 --> 00:13:55.870
A few of you.

00:13:56.010 --> 00:13:56.180
Okay.

00:13:56.180 --> 00:13:58.440
So, when you're working with
that kind of content,

00:13:58.520 --> 00:14:01.290
and I'll show you some samples
of that in a few minutes here.

00:14:02.220 --> 00:14:04.220
So, you take the 24p source.

00:14:04.220 --> 00:14:11.200
24p gets slowed down 0.1%. So,
it's 23.976, and then it gets transferred

00:14:11.210 --> 00:14:13.060
to the video running at 29.97.

00:14:13.060 --> 00:14:14.420
Math doesn't really matter.

00:14:14.420 --> 00:14:19.200
Basically, that effect is you take your
24 frames per second of video,

00:14:19.200 --> 00:14:22.380
and you spread it out on
the 60 fields of video,

00:14:22.380 --> 00:14:24.950
and it doesn't really go very evenly.

00:14:24.960 --> 00:14:28.930
So, you wind up with this pattern where
you have the first frame of film

00:14:28.930 --> 00:14:31.000
becomes three fields of video.

00:14:31.000 --> 00:14:32.200
Next frame of film becomes
three fields of video.

00:14:32.200 --> 00:14:35.420
Next frame of film becomes two fields,
three, then two, three, then two, three,

00:14:35.420 --> 00:14:35.810
then two.

00:14:35.810 --> 00:14:37.890
Hence the phrase 3-2 pulldown.

00:14:37.920 --> 00:14:41.200
And the way you detect this,
and we'll look at this later on,

00:14:41.200 --> 00:14:44.680
is when you're going through a file,
just go through, frame by frame,

00:14:44.680 --> 00:14:46.900
you're a QuickTime player,
just the right arrow key, go through,

00:14:46.900 --> 00:14:49.960
and you're going to see a pattern of
three frames that are progressive,

00:14:49.960 --> 00:14:52.720
and then two frames that are interlaced,
and it'll repeat.

00:14:52.780 --> 00:14:55.380
So, just like find a long
shot with some motion,

00:14:55.380 --> 00:14:57.780
key through there, like, okay,
if you see,

00:14:57.860 --> 00:15:02.180
if all the frames are interlaced,
it's interlaced video, deinterlaced.

00:15:02.180 --> 00:15:05.710
If you see the pattern of three
frames that are progressive

00:15:05.830 --> 00:15:08.820
and two that are interlaced,
you're going to do an inverse

00:15:08.820 --> 00:15:09.950
telecine and do a happy jig.

00:15:09.960 --> 00:15:11.960
That's actually a nice
thing to have available.

00:15:13.510 --> 00:15:16.960
So, basically, Ambrose Telson,
he looks at the pattern, figures out,

00:15:17.040 --> 00:15:20.500
like, okay, well, these fields can't be
these original frames,

00:15:20.500 --> 00:15:22.090
and can reassemble them.

00:15:22.160 --> 00:15:23.420
And that's really good
for a couple reasons.

00:15:23.420 --> 00:15:27.190
One, we've lost no data,
as we do with the deinterlacing.

00:15:27.280 --> 00:15:32.820
You'll wind up with your full frames,
480 lines of, you get back in NTSC.

00:15:32.820 --> 00:15:36.560
And also, you can actually restore
the original frame rate.

00:15:36.580 --> 00:15:38.180
You're actually at 24 frames a second.

00:15:38.520 --> 00:15:42.020
So, instead of having to encode, like,
30 frames a second, or even 60,

00:15:42.020 --> 00:15:45.660
if you're doing the fields,
you can actually get the original

00:15:46.850 --> 00:15:49.530
24 frames of video out of it.

00:15:49.660 --> 00:15:51.980
And that means for every frame
that was shot in the camera,

00:15:51.980 --> 00:15:54.680
you're doing a frame of video,
but you're not spending any bits

00:15:54.720 --> 00:15:56.420
of frames that didn't really exist.

00:15:56.450 --> 00:15:59.320
I mean, sort of these phantom frames,
you know, get spent there.

00:15:59.320 --> 00:16:01.220
It always bugs me,
I see people encoding video,

00:16:01.220 --> 00:16:03.140
they take film shot stuff,
and they encoded it,

00:16:03.170 --> 00:16:05.200
they deinterlaced it,
so they do an Ambrose Telson,

00:16:05.200 --> 00:16:07.190
and they encoded it 15 frames a second.

00:16:07.780 --> 00:16:09.980
And so you wind up with this
really kind of jittery emotion,

00:16:10.040 --> 00:16:11.460
because you have, like,
two of the film frames,

00:16:11.460 --> 00:16:14.000
and then one will be missing,
and then one, and then two.

00:16:14.000 --> 00:16:17.540
And what should be a really smooth
experience winds up not being.

00:16:17.600 --> 00:16:21.330
By doing Ambrose Telson, like,
delivering at 24 frames a second,

00:16:21.330 --> 00:16:25.000
you actually can deliver a smoother
motion experience than television

00:16:25.000 --> 00:16:27.020
would have had of that same thing.

00:16:27.020 --> 00:16:30.480
Because even the 3.2 gives you a
little bit of temporal anomaly there.

00:16:30.480 --> 00:16:34.970
So, like, a horizontal pan can actually
look smoother and better in

00:16:34.970 --> 00:16:36.880
high data rate web video.

00:16:37.040 --> 00:16:38.310
And it even would have on television.

00:16:38.320 --> 00:16:39.360
So.

00:16:39.360 --> 00:16:43.460
You PAL guys are lucky,
because none of this garbage

00:16:43.600 --> 00:16:45.480
happens with you guys.

00:16:45.630 --> 00:16:49.700
The way that film gets transferred
to PAL is for 24 frames a second,

00:16:49.700 --> 00:16:52.380
it's sped up 4%. It's
made 25 frames a second.

00:16:52.380 --> 00:16:53.530
Transferred is progressive.

00:16:53.620 --> 00:16:57.180
So PAL film source becomes 25
frames a second progressive.

00:16:57.260 --> 00:16:59.030
And you just have to
turn off deinterlation,

00:16:59.030 --> 00:16:59.940
you're good to go.

00:16:59.940 --> 00:17:01.400
It's a wonderful thing.

00:17:01.480 --> 00:17:03.250
So many problems go away that way.

00:17:03.260 --> 00:17:03.720
So.

00:17:03.720 --> 00:17:06.180
I hope you appreciate
how fortunate you are.

00:17:07.040 --> 00:17:10.940
But of course it's all because
you have 50 hertz power,

00:17:10.940 --> 00:17:12.840
which means your
electricity kills you more.

00:17:12.840 --> 00:17:15.340
So I guess there's a body
count associated with it.

00:17:15.360 --> 00:17:17.060
Yeah.

00:17:18.780 --> 00:17:20.260
It's a myth that things
work out that way.

00:17:20.260 --> 00:17:22.460
You know, I mean,
you have moral execution

00:17:22.460 --> 00:17:25.480
deaths because you don't have
to have inverse telecycling.

00:17:26.150 --> 00:17:26.260
Okay.

00:17:26.260 --> 00:17:28.160
Any questions so far?

00:17:28.160 --> 00:17:30.050
If you have questions,
just come to the microphone.

00:17:30.100 --> 00:17:31.820
I'm going to go to the
microphone and ask right there.

00:17:31.820 --> 00:17:32.260
Thanks.

00:17:32.260 --> 00:17:34.560
I'll see if I,
I'm trying to be a hard ass on the

00:17:34.730 --> 00:17:36.860
microphone thing and see if that works.

00:17:36.860 --> 00:17:38.190
So you would either

00:17:43.880 --> 00:17:46.650
If it was shot on-- OK,
so the three scenarios.

00:17:46.760 --> 00:17:49.040
One, it was shot interlaced on video.

00:17:49.090 --> 00:17:51.180
I'm just going to do
an adaptive vinterlace.

00:17:51.260 --> 00:17:53.260
Scenario two, it was shot progressive.

00:17:53.340 --> 00:17:54.260
Nothing at all.

00:17:54.390 --> 00:17:57.580
Scenario three,
it was shot on film or 24p camera.

00:17:57.900 --> 00:17:59.410
Inverse telecine was applied.

00:17:59.670 --> 00:18:02.660
I'm sorry, telecine was applied,
then it'll play in inverse telecine.

00:18:02.800 --> 00:18:04.570
So what are those three?

00:18:04.660 --> 00:18:06.640
It's pretty easy to just go through,
just frame by frame.

00:18:06.640 --> 00:18:11.140
If you just find five frames of film,
of video with motion, step through those.

00:18:11.140 --> 00:18:12.870
That's all you need to
see to see how to do it.

00:18:12.970 --> 00:18:15.700
We'll look at some samples later
on showing what that looks like.

00:18:15.700 --> 00:18:16.660
But it's pretty straightforward.

00:18:18.530 --> 00:18:21.170
And of course,
24p cameras are becoming more popular.

00:18:21.250 --> 00:18:22.870
Final Cut 4 obviously
has support for that.

00:18:22.950 --> 00:18:23.960
So it's actually kind of nice.

00:18:24.010 --> 00:18:27.360
You can just pull it on 24p and
work 24p natively and not even worry

00:18:27.360 --> 00:18:29.250
about this stuff and leave it alone.

00:18:29.260 --> 00:18:30.540
Okay.

00:18:30.540 --> 00:18:32.980
Is there another question over there?

00:18:32.980 --> 00:18:34.480
Or are you just wandering in?

00:18:34.480 --> 00:18:35.270
That's fine.

00:18:35.270 --> 00:18:36.330
We're good.

00:18:36.340 --> 00:18:37.940
So cropping.

00:18:37.940 --> 00:18:41.460
We don't see all the edges
of a TV signal on television.

00:18:41.590 --> 00:18:43.830
There's stuff around the edges.

00:18:43.910 --> 00:18:46.670
It's part of the video
signal we don't see.

00:18:46.670 --> 00:18:47.860
That's fine.

00:18:48.500 --> 00:18:51.540
Computers, of course,
get every last pixel.

00:18:51.540 --> 00:18:53.890
You're kind of annoyed if you
bought your LCD monitor and there

00:18:53.890 --> 00:18:54.990
was stuff you couldn't see on it.

00:18:55.000 --> 00:18:59.450
The menu bar doesn't show up.

00:18:59.450 --> 00:18:59.450
People get all peevish.

00:18:59.860 --> 00:19:03.670
So, the problem is,
stuff that's part of the video signal

00:19:03.690 --> 00:19:07.320
that is fine to go on television,
it's fine to go on DVD,

00:19:07.320 --> 00:19:09.520
because DVD is the same safe area,
but that you don't want to

00:19:09.520 --> 00:19:10.580
be seeing on the computer.

00:19:10.580 --> 00:19:12.840
Typically a little
horizontal lines at the top,

00:19:12.840 --> 00:19:14.770
or edges blanking, that kind of stuff.

00:19:14.850 --> 00:19:17.160
A little bit of light letterboxing.

00:19:17.280 --> 00:19:18.760
You want to take that out.

00:19:18.860 --> 00:19:19.910
A couple reasons.

00:19:20.350 --> 00:19:22.640
One is, I mentioned sharp lines
are hard to encode.

00:19:22.640 --> 00:19:25.570
A letterboxing mat is a sharp line.

00:19:25.570 --> 00:19:29.180
You know, and if you've ever seen a
DVD or low data rate video,

00:19:29.180 --> 00:19:31.100
you'll often see where there's
any kind of letterboxing.

00:19:31.100 --> 00:19:33.780
There's kind of a dimmer below
where the black bar starts

00:19:33.780 --> 00:19:35.320
than other parts of the video.

00:19:35.370 --> 00:19:38.240
That's because it didn't fall
on a macro block boundary.

00:19:38.240 --> 00:19:39.680
Details aren't important there.

00:19:39.680 --> 00:19:42.170
But that line, even though it's just
a big area of black,

00:19:42.210 --> 00:19:45.680
winds up messing up a lot of codecs,
especially MPEG-2 and MPEG-4.

00:19:45.680 --> 00:19:50.160
So, you want to crop out
everything that you can.

00:19:50.160 --> 00:19:51.840
The other thing is,
you want to make sure that the

00:19:51.920 --> 00:19:52.850
edge of the video is in video.

00:19:52.920 --> 00:19:54.830
I like to go a couple pixels
in from the edge of the video,

00:19:54.890 --> 00:19:56.520
just to make sure nothing's in there.

00:19:56.520 --> 00:19:59.160
So every pixel is something you
want to see on the screen when

00:19:59.170 --> 00:20:00.710
you're going to computer video.

00:20:00.830 --> 00:20:04.450
For DVD, you don't want to do this,
because then if you bring it up too much,

00:20:04.450 --> 00:20:07.140
then the stuff at the edges
doesn't really happen.

00:20:07.170 --> 00:20:09.470
But at least on DVD,
you want to mat out the edges.

00:20:09.480 --> 00:20:11.750
So if there's some kind of
noise up there at the top,

00:20:11.810 --> 00:20:13.610
draw a black area, just blank that out.

00:20:13.750 --> 00:20:15.560
You don't want a signal in there.

00:20:15.560 --> 00:20:17.940
And here's a trick for you DVD guys.

00:20:17.960 --> 00:20:18.230
If you mat along the edges,
you're going to get a

00:20:18.230 --> 00:20:18.460
little bit of black.

00:20:18.460 --> 00:20:18.740
So if you mat along the edges,
you're going to get a

00:20:18.740 --> 00:20:18.980
little bit of black.

00:20:19.050 --> 00:20:24.080
If you mat along 8x8,
or especially 16x16 blocks,

00:20:24.200 --> 00:20:29.230
that will align with the macro
block structure of MPEG-2.

00:20:29.590 --> 00:20:31.810
So, and if you align that,
you won't get that weird distortion

00:20:31.810 --> 00:20:33.160
effect at the edge of the letterbox.

00:20:33.160 --> 00:20:36.140
If you're doing letterboxing,
try to make sure it's aligned with

00:20:36.140 --> 00:20:38.650
the 16 by 16 blocks of the video.

00:20:38.650 --> 00:20:41.820
So, like, you know,
if you're a pixel zero, you know,

00:20:41.820 --> 00:20:45.170
block from zero to 15,
or from zero to 31,

00:20:45.170 --> 00:20:50.440
or zero to 47 in those increments,
and it'll be a much cleaner effect.

00:20:50.440 --> 00:20:59.160
We'll kind of do that later on.

00:20:59.190 --> 00:20:59.190
Actually,
Compressor makes this really nice.

00:20:59.190 --> 00:20:59.190
It's got a letterboxing
and a cropping filter,

00:20:59.190 --> 00:20:59.190
so you can kind of knock stuff out.

00:20:59.190 --> 00:20:59.190
Um...

00:21:00.370 --> 00:21:01.300
Okay.

00:21:01.300 --> 00:21:03.400
And we'll look at some samples later on,
which are pretty bad.

00:21:03.400 --> 00:21:05.080
It's okay to cut out some of the noise.

00:21:05.080 --> 00:21:09.160
You don't have to grab going an
even amount from top and bottom.

00:21:09.160 --> 00:21:11.480
VHS especially often has a
lot of junk at the bottom,

00:21:11.480 --> 00:21:12.730
but it's okay at the top.

00:21:12.810 --> 00:21:15.070
Grab the rectangle that's
the right rectangle.

00:21:15.090 --> 00:21:16.600
Don't worry about being centered or not.

00:21:16.770 --> 00:21:18.480
Grab that.

00:21:19.140 --> 00:21:21.720
And another technique is if you're
going to a really low resolution,

00:21:21.720 --> 00:21:24.840
you know, like below 340 by 240,
like especially in the phones,

00:21:24.840 --> 00:21:31.140
because video is composed
aiming for the safe area,

00:21:31.140 --> 00:21:34.490
no one's going to stick critical
information into the edges of the screen.

00:21:34.490 --> 00:21:39.040
You know, so you know about a 10%
boundary around the video.

00:21:39.040 --> 00:21:40.820
It could be stuff to look at there,
but nothing important

00:21:40.870 --> 00:21:41.610
is going to be there.

00:21:41.610 --> 00:21:43.870
So you can go to a very
low resolution device.

00:21:43.970 --> 00:21:47.940
You can crop into that area a fair amount
and make your foreground objects larger.

00:21:47.940 --> 00:21:49.120
So like if you're going
to be doing a video,

00:21:49.120 --> 00:21:49.120
you're going to want to make sure
that you're not going to be doing

00:21:49.120 --> 00:21:49.120
a video that's going to be too big.

00:21:49.200 --> 00:21:51.230
Like if it's an interview piece,
you know, the head will be bigger.

00:21:51.320 --> 00:21:53.030
You won't see the set behind them,
but you don't care.

00:21:53.030 --> 00:21:54.830
You can see that you can read
the lips better because you get

00:21:54.850 --> 00:21:56.030
more pixels on what matters.

00:21:57.430 --> 00:22:00.430
This is kind of an after effects
screenshot here showing where the action

00:22:00.490 --> 00:22:02.260
safe and the title safe areas are.

00:22:02.540 --> 00:22:04.510
Instead of imagining
you're coding the video,

00:22:04.510 --> 00:22:08.000
by cutting it into title safe,
you get a much... His face will

00:22:08.070 --> 00:22:10.600
be a lot bigger than if you go
all the way out of the edges.

00:22:10.600 --> 00:22:13.130
It's a little bit dark in here,
but there's some black edges

00:22:13.220 --> 00:22:15.900
around the screen that you probably
can't see in that display there.

00:22:15.900 --> 00:22:16.790
They're over here.

00:22:16.920 --> 00:22:17.880
They're pretty cool.

00:22:17.900 --> 00:22:21.850
I have a much more frightening example
of bad VHS source later on to look at.

00:22:21.900 --> 00:22:25.900
That's Oboe Addy, the drummer,
by the way.

00:22:25.920 --> 00:22:30.130
Anyone from Portland knows who he is.

00:22:32.690 --> 00:22:34.140
Scaling.

00:22:34.140 --> 00:22:36.460
Scaling is basically changing
the shape of the rectangle.

00:22:36.460 --> 00:22:39.030
So by deinterlacing, we basically,
one way or the other,

00:22:39.030 --> 00:22:41.200
made a progressive source
rectangle of ourselves.

00:22:41.200 --> 00:22:43.380
By cropping,
we define what subset of that

00:22:43.760 --> 00:22:45.740
source rectangle we want to process.

00:22:45.740 --> 00:22:49.660
Then scaling is saying what
output rectangle do we want to do?

00:22:49.660 --> 00:22:52.120
And then, you know,
your tool's going to take your

00:22:52.250 --> 00:22:55.220
cropped area and then scale
that into your output rectangle.

00:22:55.220 --> 00:22:56.510
So that's all scaling is.

00:22:56.540 --> 00:22:58.910
We do it in Photoshop with
image size all the time.

00:22:58.910 --> 00:23:00.700
Pretty straightforward operation.

00:23:00.700 --> 00:23:02.570
There are a couple subtleties
that really matter a lot.

00:23:02.600 --> 00:23:07.070
One thing that is biting lots
of people that took us lately is

00:23:07.070 --> 00:23:08.920
the whole non-square pixel thing.

00:23:08.930 --> 00:23:11.110
Pretty much all the production
standards of standard

00:23:11.110 --> 00:23:12.720
definition are non-square pixel.

00:23:12.720 --> 00:23:18.320
Your 720 wide PAL or NTSC, 4x3, 16x9,
the pixels in your video

00:23:18.350 --> 00:23:20.120
signal are not square.

00:23:20.180 --> 00:23:25.050
So, you know, NTSC, 720x480, PAL, 17x576.

00:23:25.050 --> 00:23:26.980
And that's the resolution.

00:23:26.980 --> 00:23:30.110
4x3, 16x9, it's the same one.

00:23:30.110 --> 00:23:34.880
And so you wind up, you know,
and when you play it back on TV,

00:23:34.880 --> 00:23:36.360
you can see they're 4x3, 16x9.

00:23:36.360 --> 00:23:37.870
It looks good because it knows that.

00:23:38.510 --> 00:23:40.880
But I see a lot of this on the web.

00:23:40.950 --> 00:23:44.440
So it takes a 720x480 file, go, oh,
I'm going to compress it down.

00:23:44.440 --> 00:23:45.640
Okay, I'll cut it in half.

00:23:45.640 --> 00:23:47.220
I'll make it 360x240.

00:23:47.260 --> 00:23:51.490
And you can pretty much say right now,
no video is ever with a 3x2

00:23:51.490 --> 00:23:53.380
aspect ratio is what that is.

00:23:53.380 --> 00:23:57.370
If you find yourself encoding
to a web format at 360x240,

00:23:57.370 --> 00:23:59.830
and I'm sure everyone's
done it at least once,

00:23:59.830 --> 00:24:01.400
you're doing it wrong.

00:24:02.610 --> 00:24:03.540
That's your clue.

00:24:03.540 --> 00:24:07.020
You want to make sure you're matching
the aspect ratio of your source.

00:24:07.020 --> 00:24:12.600
If you have a 4x3 source, after cropping,
you want to be delivering in a

00:24:12.600 --> 00:24:14.960
4x3 resolution with a web codec.

00:24:14.960 --> 00:24:17.030
60x9, same thing.

00:24:17.030 --> 00:24:17.840
So I'll give you an example.

00:24:17.840 --> 00:24:21.320
360x240 and 720x480,
a lot of numbers here,

00:24:21.380 --> 00:24:22.590
so we'll do the things.

00:24:23.250 --> 00:24:24.600
Doesn't work.

00:24:24.720 --> 00:24:27.790
If you're a 4x3,
a 320x240 is a 4x3 aspect ratio.

00:24:27.790 --> 00:24:28.660
That'll be right.

00:24:28.750 --> 00:24:30.720
Your circles will be circles, not ovals.

00:24:30.760 --> 00:24:31.950
Okay.

00:24:32.280 --> 00:24:36.580
And the real problem with 360 by
240 is it makes everyone 10% fatter.

00:24:36.580 --> 00:24:38.480
And if you're working with actors,
you're just getting in

00:24:38.480 --> 00:24:39.400
big trouble that way.

00:24:39.400 --> 00:24:41.780
Just know that's not,
doesn't go down well.

00:24:41.980 --> 00:24:48.670
16 by 9, 432 by 240 is a matching
number for 16 by 9.

00:24:48.940 --> 00:24:52.900
And so, I want to make sure your
output aspect ratio,

00:24:52.900 --> 00:24:57.320
your output frame size matches the
aspect ratio of the crop source.

00:24:57.320 --> 00:25:01.980
If you have like a letterbox movie,
you know, like a 1.85 to 1 or 2.35 to 1,

00:25:01.980 --> 00:25:03.220
if you're cropping out
all the letterboxing,

00:25:03.220 --> 00:25:04.600
you can get quite wide.

00:25:04.600 --> 00:25:07.550
Like if you have a, you know,
like a CinemaScope kind of thing,

00:25:07.550 --> 00:25:11.060
you might wind up at 640 by
272 and crazy things like that.

00:25:11.210 --> 00:25:14.610
And that's great because, you know,
in terms of your bandwidth requirements,

00:25:14.610 --> 00:25:17.010
your processor requirements,
all that kind of stuff,

00:25:17.040 --> 00:25:21.510
it's basically how many total bits in the
area you have to worry about per second.

00:25:21.540 --> 00:25:26.020
So, if you can do 640 by 272 instead
of doing like 400 by 300,

00:25:26.030 --> 00:25:29.240
you know, that looks great because
640 feels full screen.

00:25:29.240 --> 00:25:31.770
And in fact, it's short, you know,
that just looks like you're

00:25:31.770 --> 00:25:32.990
doing cool letterboxing.

00:25:33.000 --> 00:25:36.080
You're able to give the user what
feels like a real full screen

00:25:36.080 --> 00:25:39.660
experience while you're actually
not using all that many pixels.

00:25:39.720 --> 00:25:41.050
That's great.

00:25:41.120 --> 00:25:43.170
You know, you want to, again,
it's all about bang for the bit.

00:25:43.250 --> 00:25:45.690
If you can achieve a good
communication experience by

00:25:45.690 --> 00:25:47.860
using different aspect ratio,
wonderful.

00:25:47.940 --> 00:25:50.810
You know, for, I always encourage people
who are doing web production,

00:25:50.810 --> 00:25:53.260
you know,
think about shooting 16 by 9 or whatever.

00:25:53.260 --> 00:25:55.690
I always joke that I want
to do a rock climbing video

00:25:55.690 --> 00:25:57.550
and shoot 16 by 9 sideways.

00:25:57.560 --> 00:26:01.490
You know, because with web formats,
you can deliver if you want to do that.

00:26:01.510 --> 00:26:05.220
As long as you're not using NDO 3.2,
by the way, it will crash if you

00:26:05.220 --> 00:26:06.620
were in portrait mode.

00:26:06.620 --> 00:26:07.910
But every other codec works fine.

00:26:09.740 --> 00:26:10.910
I'm a codec nerd, what can I say?

00:26:10.920 --> 00:26:14.310
Kids today don't know these things.

00:26:14.330 --> 00:26:15.390
They don't know their heritage.

00:26:15.400 --> 00:26:19.220
Okay,
another issue is scaling algorithms.

00:26:19.220 --> 00:26:23.270
Most tools today are used by cubic,
but some of the older tools

00:26:23.300 --> 00:26:24.870
have some other scaling modes.

00:26:25.100 --> 00:26:25.840
This matters a lot.

00:26:25.840 --> 00:26:29.660
Make sure you're not using something
which uses an old nearest neighbor thing.

00:26:29.660 --> 00:26:31.470
We used it like at Premiere 5.

00:26:31.470 --> 00:26:34.790
It had one where if you didn't
manually turn on this checkbox,

00:26:34.840 --> 00:26:36.960
the scaling quality was terrible.

00:26:37.980 --> 00:26:39.560
So just be warned about that.

00:26:39.750 --> 00:26:41.580
Most tools are getting pretty
good at this these days.

00:26:41.580 --> 00:26:43.880
Okay, so big goals from scaling.

00:26:44.020 --> 00:26:49.280
You want to make sure you wind up in
the right aspect ratio for your output.

00:26:52.000 --> 00:26:55.360
Also, we want to make sure we're
trying to not scale up.

00:26:55.360 --> 00:26:57.700
And scaling and cropping have
an interesting relationship.

00:26:57.700 --> 00:27:00.550
Typically,
the higher your output resolution,

00:27:00.550 --> 00:27:02.430
the less you're going to crop.

00:27:02.510 --> 00:27:04.910
I gave the example of doing
a really small resolution.

00:27:04.930 --> 00:27:07.160
You want to do a very aggressive
crop to try to get the

00:27:07.160 --> 00:27:08.710
foreground objects to be bigger.

00:27:08.820 --> 00:27:10.200
But you never want to scale up.

00:27:10.300 --> 00:27:11.640
So just a little bit of math here.

00:27:11.740 --> 00:27:14.450
If you're cropping at 10% and
you're doing a straight deinterlace,

00:27:14.450 --> 00:27:17.140
or if it's video with high motion
like sports video where the adaptive

00:27:17.140 --> 00:27:21.860
deinterlace doesn't do much good,
you can wind up with only like, you know,

00:27:22.320 --> 00:27:23.340
260 lines of source.

00:27:23.340 --> 00:27:27.260
So even at 320 by 240, even though you're
scaling down horizontally,

00:27:27.260 --> 00:27:28.170
you're scaling up vertically.

00:27:28.180 --> 00:27:31.900
And you want to reduce or
eliminate any scaling up because

00:27:31.900 --> 00:27:34.090
that always enters artifacts.

00:27:34.210 --> 00:27:36.360
You always want to shrink down
or not shrink at all if possible.

00:27:36.360 --> 00:27:39.850
So if you're going to 320
by 240 or higher in NTSC,

00:27:39.850 --> 00:27:42.200
you want to crop as little as possible.

00:27:42.200 --> 00:27:47.010
Pal users, you've got 384 by 288 as your
resolution where that really matters.

00:27:47.100 --> 00:27:49.930
You get a little bit more flexibility
with your higher source resolution.

00:27:50.020 --> 00:27:51.080
Thank you.

00:27:51.570 --> 00:27:53.280
And again,
using the adaptive deinterlacing

00:27:53.380 --> 00:27:55.940
or inverse telecine gives you
effectively a lot more source pixels,

00:27:55.940 --> 00:27:57.400
so it's less of an issue,
especially the inverse

00:27:57.400 --> 00:27:58.500
telecine when that's available.

00:28:02.040 --> 00:28:03.110
OK.

00:28:03.420 --> 00:28:05.530
Luma adjustment,
and we'll look at this for a while.

00:28:05.780 --> 00:28:09.440
How many people have been doing video
compression for more than two years?

00:28:09.450 --> 00:28:09.810
OK.

00:28:10.300 --> 00:28:14.910
So Apple's made Luma work well now.

00:28:15.180 --> 00:28:17.560
It's been very confusing,
because things used to work really weird,

00:28:17.560 --> 00:28:20.190
and they're kind of the traditional
period when not every tool

00:28:20.190 --> 00:28:25.400
has got the whole story with
getting Luma processing right.

00:28:25.440 --> 00:28:29.920
So Luma basically is brightness.

00:28:29.990 --> 00:28:35.280
It basically controls-- and typically,
we think about in the computer world is

00:28:35.280 --> 00:28:38.160
black as being 0 and white as being 255.

00:28:38.260 --> 00:28:40.420
But in the video world,
black is actually 16,

00:28:40.420 --> 00:28:42.350
and white is actually 235.

00:28:42.480 --> 00:28:46.160
And it used to be codecs didn't
do the right thing for you,

00:28:46.160 --> 00:28:49.770
so you had to actually manually add
contrast when going from a video

00:28:49.860 --> 00:28:54.070
format to a web format in order to
make blacks black on whites whites.

00:28:54.170 --> 00:28:55.720
And so we've got these rules of thumb.

00:28:55.820 --> 00:28:59.680
Probably how many people here
automatically add plus 27 contrast?

00:28:59.700 --> 00:29:01.470
When they're-- doing a little
video compression there?

00:29:01.560 --> 00:29:01.940
A couple of you there?

00:29:01.940 --> 00:29:02.680
OK.

00:29:02.740 --> 00:29:04.340
Good thing is you don't
have to do that anymore.

00:29:04.380 --> 00:29:05.230
But they never really told you that.

00:29:05.380 --> 00:29:09.000
So as long as you're using codecs that
can properly deal with color mapping,

00:29:09.070 --> 00:29:12.920
and now you're going from, say,
Apple motion JPEG or DV to MPEG-4,

00:29:12.960 --> 00:29:16.300
for example, they will automatically,
behind the scenes, do all the color space

00:29:16.400 --> 00:29:17.340
conversion for you.

00:29:17.550 --> 00:29:19.040
So you don't want to
add that extra contrast.

00:29:19.070 --> 00:29:21.350
You want to add the contrast you
need to make the image look good,

00:29:21.560 --> 00:29:23.780
but you're not going to add any extra.

00:29:24.350 --> 00:29:28.010
Some codecs aren't quite doing that now,
so this is kind of a messy,

00:29:28.010 --> 00:29:29.380
weird error right now.

00:29:29.380 --> 00:29:31.120
But for the most part,
things are getting better.

00:29:31.120 --> 00:29:32.600
You don't have to do that a lot.

00:29:32.660 --> 00:29:35.460
So I mainly mention this because
the people who have automatically

00:29:35.460 --> 00:29:40.980
been adding contrast and also doing
gamma correction for a long time,

00:29:40.980 --> 00:29:41.860
that's less important.

00:29:42.220 --> 00:29:43.920
Another issue is the whole gamma thing.

00:29:43.920 --> 00:29:49.460
A Mac will show the RGB value of 127,
which is the middle of the range,

00:29:49.480 --> 00:29:51.220
as a lot brighter than
a Windows machine will.

00:29:51.660 --> 00:29:55.540
But the good thing is new codecs,
especially MPEG-4, DV, MotionJPEG,

00:29:55.580 --> 00:29:57.610
will actually compensate for that.

00:29:57.630 --> 00:30:01.000
They will actually figure out
the local gamma and will draw

00:30:01.000 --> 00:30:02.520
the image right on Macs and PCs.

00:30:02.520 --> 00:30:05.560
I've actually seen a lot of
people who had the long struggle

00:30:05.560 --> 00:30:08.610
to learn how to raise the gamma
to make Windows video look right,

00:30:08.610 --> 00:30:10.370
and they finally got over that hump.

00:30:10.410 --> 00:30:13.090
And then now,
if you do that with a modern codec,

00:30:13.140 --> 00:30:16.230
QuickTime will do it for
you again on playbacks.

00:30:16.400 --> 00:30:18.370
You'll wind up with it totally
way too bright on Windows.

00:30:18.380 --> 00:30:21.620
So, unfortunately,
the only real solution,

00:30:21.660 --> 00:30:25.220
is test your codecs, encode with it,
and look at it before and after,

00:30:25.220 --> 00:30:28.590
and make sure you're actually using the
right Luma processing mode for that.

00:30:28.950 --> 00:30:33.220
Most modern tools, you know, Compressor,
Cleaner 6 gets this right.

00:30:33.220 --> 00:30:34.150
Cleaner 5, yeah.

00:30:34.160 --> 00:30:36.170
That's one of the things,
you take a setting from Cleaner

00:30:36.170 --> 00:30:37.930
5 that worked perfectly,
you take in Cleaner 6,

00:30:38.000 --> 00:30:40.140
it's going to fail completely in
terms of Luma processing because

00:30:40.140 --> 00:30:41.040
they changed the internal model.

00:30:41.100 --> 00:30:43.930
Which, you know,
it wasn't really the manual.

00:30:43.940 --> 00:30:46.280
It's kind of an important
little aside there that,

00:30:46.360 --> 00:30:48.760
oh, by the way, how we process video is
completely different now.

00:30:48.760 --> 00:30:49.460
It's better now.

00:30:49.460 --> 00:30:51.640
It's faster, higher quality,
and all that kind of stuff.

00:30:51.640 --> 00:30:53.440
But, it changes a lot.

00:30:53.460 --> 00:30:55.910
There's also a creative element to Luma.

00:30:55.920 --> 00:30:57.890
You know,
one of my creative goals is I want to

00:30:57.890 --> 00:31:01.260
have any frame that's going to be black,
with black titles or credits or whatever,

00:31:01.260 --> 00:31:04.570
I want to have the black pixels all
be actually mathematically black.

00:31:04.600 --> 00:31:06.800
Because on a TV, you know,
you've got a little bit

00:31:06.800 --> 00:31:09.120
of noise in the black,
it kind of goes down pretty easy.

00:31:09.120 --> 00:31:10.910
TVs are pretty lousy display devices.

00:31:10.920 --> 00:31:13.300
But, on a computer screen,
where you actually have

00:31:13.370 --> 00:31:15.590
things that are big,
flat rectangles of black,

00:31:15.650 --> 00:31:17.340
to compare it to,
you have a little bit of

00:31:17.340 --> 00:31:20.040
analog noise in there,
so your black's a little too bright.

00:31:20.040 --> 00:31:21.100
It just looks terrible.

00:31:21.770 --> 00:31:23.410
And also, it's hard to compress,
because you've just got a

00:31:23.460 --> 00:31:24.200
lot of stuff going on there.

00:31:24.200 --> 00:31:26.340
So, by actually, you know, making,
I mean,

00:31:26.340 --> 00:31:29.800
a big 16 by 16 block of the number zero,
over and over again,

00:31:29.800 --> 00:31:31.020
it's easy to compress.

00:31:31.100 --> 00:31:33.650
That block will not take many bits.

00:31:33.660 --> 00:31:36.540
The bits you don't spend on
that get spent on your actual,

00:31:36.540 --> 00:31:37.820
you're trying to communicate.

00:31:37.820 --> 00:31:40.260
In the case of text,
that actually matters a lot,

00:31:40.400 --> 00:31:43.100
because some of that sharp little
small point text can be hard to encode.

00:31:43.100 --> 00:31:45.820
Making the rest of the
frame as simple as possible,

00:31:45.820 --> 00:31:47.850
making everything really
mathematically black,

00:31:47.900 --> 00:31:49.880
will make your text look
better with fewer artifacts.

00:31:51.660 --> 00:31:53.350
So my typical

00:31:54.700 --> 00:33:00.700
[Transcript missing]

00:33:01.040 --> 00:33:04.520
Contrast, this is, like I said,
plus 27 used to be the rule of thumb.

00:33:04.520 --> 00:33:06.780
I've been quoted in a thousand
articles I wrote saying,

00:33:06.840 --> 00:33:09.690
the key to making great web
video is to add contrast plus 27.

00:33:09.700 --> 00:33:11.940
And now I'm here to say, well,
that was true then,

00:33:11.940 --> 00:33:13.220
but now it's not anymore.

00:33:13.220 --> 00:33:14.960
So it'll be a different rule tomorrow.

00:33:14.960 --> 00:33:17.320
But I mean,
thankfully it's all getting fixed,

00:33:17.320 --> 00:33:19.410
but it's awfully confusing right now.

00:33:19.440 --> 00:33:22.240
Contrast is also,
if you've got bad coin analog sources,

00:33:22.240 --> 00:33:24.480
as a video filter,
contrast can often help.

00:33:24.480 --> 00:33:27.040
It's getting your whites
white and your blacks black,

00:33:27.140 --> 00:33:30.380
but leaving the middle of the
range relatively untouched.

00:33:32.740 --> 00:33:33.730
Okay, gamma.

00:33:33.740 --> 00:33:37.790
Gamma has been a big
source of pain for years,

00:33:37.800 --> 00:33:38.660
as I mentioned before.

00:33:38.660 --> 00:33:41.200
So gamma basically is kind
of the inverse of contrast.

00:33:41.200 --> 00:33:44.500
Contrast affects the extremes,
believes the closer to the middle,

00:33:44.500 --> 00:33:45.360
the less effect it has.

00:33:45.360 --> 00:33:46.350
Gamma is the reverse.

00:33:46.360 --> 00:33:48.170
Gamma controls the brightness
in the middle of the range,

00:33:48.180 --> 00:33:49.610
but it leaves black and white alone.

00:33:49.620 --> 00:33:52.450
And gamma is a useful
filter in its own right.

00:33:52.520 --> 00:33:53.990
And if you've got a video
that seems a little bit dark,

00:33:54.470 --> 00:33:57.380
raising brightness is not a good way
to make a video look brighter because

00:33:57.380 --> 00:34:01.400
it's going to raise your black floor and
you're going to have washed out blacks.

00:34:01.780 --> 00:34:04.460
Raising gamma is how you make a video
look brighter because it makes your

00:34:04.510 --> 00:34:06.570
midtones brighter is what you care about,
but leaves your black

00:34:06.630 --> 00:34:08.440
and your white alone,
which is assuming they

00:34:08.450 --> 00:34:09.510
were already right.

00:34:09.560 --> 00:34:13.420
So my typical workflow is all,
if a tool does it the right order,

00:34:13.420 --> 00:34:17.070
which is brightness, contrast, gamma,
I'll get my brightness and contrast

00:34:17.070 --> 00:34:21.110
right to get them nailed so I get my
black point and my white point right.

00:34:21.250 --> 00:34:23.600
Then I'll use the gamma filter to
get the midtones looking right.

00:34:23.600 --> 00:34:25.360
Some tools do gamma first.

00:34:25.430 --> 00:34:27.150
That makes it a lot more
difficult because things

00:34:27.150 --> 00:34:28.860
are in the wrong order then.

00:34:28.860 --> 00:34:31.700
So I mentioned the
platform difference before.

00:34:31.780 --> 00:34:36.200
The good news is now with modern codecs,
it's kind of going away,

00:34:36.200 --> 00:34:38.840
automatically corrected for it,
but not in all codecs.

00:34:38.860 --> 00:34:40.500
So, ugly.

00:34:44.190 --> 00:34:46.570
Okay,
so lumen processing is kind of complex.

00:34:46.660 --> 00:34:49.110
Any questions so far on the
image processing kind of stuff?

00:34:49.160 --> 00:34:51.640
I will show you some
samples of this later on.

00:34:51.640 --> 00:34:53.760
Hopefully I can textualize
a little bit more,

00:34:53.830 --> 00:34:55.190
but everyone with me so far?

00:34:55.190 --> 00:34:57.980
Or too shy to admit it otherwise?

00:34:57.990 --> 00:34:58.690
Okay.

00:34:58.690 --> 00:35:02.120
This is a little bit confusing,
and we will look at some samples of this.

00:35:02.120 --> 00:35:03.180
Noise reduction.

00:35:03.180 --> 00:35:06.920
Noise reduction is, you know,
filters to try to remove noise.

00:35:06.920 --> 00:35:08.820
I mentioned before,
compression is all about

00:35:08.930 --> 00:35:11.310
trying to communicate,
and we're trying to, you know,

00:35:11.310 --> 00:35:14.060
we're trying to suck an elephant
through a swizzle stick here.

00:35:14.100 --> 00:35:16.100
We don't have enough
bandwidth to do a good job,

00:35:16.100 --> 00:35:16.640
you know.

00:35:16.640 --> 00:35:19.760
I would say one of the goals
of compression is you're trying

00:35:19.760 --> 00:35:21.180
to achieve balanced mediocrity.

00:35:21.180 --> 00:35:23.380
You never have enough bits
to actually do it perfect,

00:35:23.380 --> 00:35:26.500
but you're trying to find the
right balance of imperfect that

00:35:26.660 --> 00:35:28.740
gives you the best results for
what you're trying to accomplish.

00:35:28.740 --> 00:35:30.190
Balanced mediocrity.

00:35:30.200 --> 00:35:33.770
Noise reduction is one of
our tools to achieve that,

00:35:33.940 --> 00:35:36.000
appropriate mediocrity.

00:35:36.000 --> 00:35:38.700
We're trying to, like,
filter out stuff that's noise,

00:35:38.800 --> 00:35:40.400
especially like video grain.

00:35:40.570 --> 00:35:43.350
Video grain is a real killer because
it's different in every frame.

00:35:43.360 --> 00:35:46.820
It's basically a random pattern of just,
you know, distortions of the video that's

00:35:46.820 --> 00:35:47.960
different from every frame.

00:35:47.960 --> 00:35:48.780
So it looks like motion.

00:35:48.780 --> 00:35:51.330
The codex can go crazy trying to
make sure it draws this little

00:35:51.330 --> 00:35:54.080
pixel here that moved over here,
but it wasn't the same pixel.

00:35:54.080 --> 00:35:55.220
It's just noise.

00:35:55.220 --> 00:35:58.030
And codex and internally try
to filter some of them out,

00:35:58.100 --> 00:36:00.370
but it often helps to
do some to begin with.

00:36:00.440 --> 00:36:05.000
All noise reduction algorithms
will cause some blurring.

00:36:05.070 --> 00:36:09.330
The best ones do a good job of only
blurring things you want blurred,

00:36:09.630 --> 00:36:12.560
leaving things that are
actually signal alone.

00:36:13.360 --> 00:36:17.090
Some things that are called
noise filters are just blurs,

00:36:17.090 --> 00:36:18.700
just a Gaussian blur.

00:36:18.700 --> 00:36:23.210
And really anything more than a
very subtle Gaussian blur winds up

00:36:23.210 --> 00:36:25.660
hurting a lot more than it helps.

00:36:25.950 --> 00:36:28.890
A few tools to do what's called
temporal processing actually compares

00:36:28.890 --> 00:36:30.820
the frames and does some stuff there.

00:36:30.820 --> 00:36:33.350
In general,
I say be very wary of noise reduction.

00:36:33.440 --> 00:36:36.190
If you have clean source,
no noise reduction will

00:36:36.190 --> 00:36:37.720
typically be required.

00:36:37.720 --> 00:36:40.280
Really it's where you have analog
source that has problems where

00:36:40.410 --> 00:36:42.270
noise reduction can pay off.

00:36:42.350 --> 00:36:44.560
And the uglier,
more horrible your source,

00:36:44.740 --> 00:36:45.760
the more it can help.

00:36:45.760 --> 00:36:48.440
The problem is the uglier,
more horrible your source is,

00:36:48.440 --> 00:36:49.640
it'll never look good.

00:36:49.640 --> 00:36:52.200
You're just doing shades of terrible,
unfortunately.

00:36:52.210 --> 00:36:53.200
So I've got a sample later.

00:36:53.200 --> 00:37:00.060
I have the infamous VHS ugly.move source
file we'll look at in a little bit.

00:37:00.060 --> 00:37:02.570
And I'm going to do -- you're going to
see a very happy jig about compressor

00:37:02.570 --> 00:37:06.660
because the compressor has introduced
the feature I've wanted for so long,

00:37:06.660 --> 00:37:09.970
which is chroma channel
only noise reduction,

00:37:09.970 --> 00:37:11.720
which is a good thing.

00:37:12.100 --> 00:37:14.200
Okay, let's talk a little bit
about audio preprocessing.

00:37:14.200 --> 00:37:17.420
Typically, audio comes in cleaner,
so you're going to wind up

00:37:17.420 --> 00:37:18.320
doing less work with audio.

00:37:18.320 --> 00:37:21.670
And also, computer audio versus analog
audio is a lot less different.

00:37:21.680 --> 00:37:23.780
Typically,
a couple filters we're going to do.

00:37:23.780 --> 00:37:27.020
We're going to do audio normalization,
which is find the loudest

00:37:27.020 --> 00:37:28.720
point in the whole audio.

00:37:28.720 --> 00:37:30.950
You're going to raise or lower
the volume of it overall,

00:37:30.950 --> 00:37:33.920
so you're something a little bit
below what the peak is available.

00:37:35.980 --> 00:37:39.000
Typically, minus 3 dB is a good one
for most digital formats.

00:37:39.070 --> 00:37:42.420
We don't go all the way to maximum
possible 16-bit audio space,

00:37:42.420 --> 00:37:45.360
because some codecs do some
rounding things and can wind up

00:37:45.360 --> 00:37:47.060
being digital peaks that way.

00:37:47.080 --> 00:37:49.600
So you need to leave a little bit of
headroom before you go into the codec.

00:37:49.600 --> 00:37:53.740
But it's just a good idea to
have that be pretty consistent.

00:37:53.740 --> 00:37:55.590
Most things like system
beeps on the computer are

00:37:55.590 --> 00:37:56.900
going to be about minus 3 dB.

00:37:56.900 --> 00:38:00.890
And it's really important to have the
loud things in your video match the

00:38:00.890 --> 00:38:03.180
other loud things the computer does.

00:38:03.200 --> 00:38:05.680
Because if you don't do that,
what happens is you have a quiet video.

00:38:05.700 --> 00:38:07.920
And the user turns the volume
up and turns the volume up and

00:38:07.920 --> 00:38:10.280
leans over and it's kind of
hissy and turns it up some more.

00:38:10.280 --> 00:38:12.630
And then finally hears the
video and kind of listens to it.

00:38:12.720 --> 00:38:14.680
And then they get mail.

00:38:14.680 --> 00:38:15.850
Mail shows up.

00:38:15.920 --> 00:38:20.150
And this thunderous bing sound
happens and deafens their cats.

00:38:20.160 --> 00:38:22.000
And there's a lawsuit and everyone's sad.

00:38:22.030 --> 00:38:26.220
So you don't want people to have deaf
cats calling you up and yelling at you.

00:38:26.220 --> 00:38:28.120
Just make it loud.

00:38:28.160 --> 00:38:32.310
You don't have to do a whole lot of
crazy compressor limiter kind of stuff.

00:38:32.490 --> 00:38:35.420
But minus 3 dB for your peak
and everyone will be happy.

00:38:35.880 --> 00:38:38.200
Yeah.

00:38:40.260 --> 00:38:41.200
Do the microphone.

00:38:41.200 --> 00:38:43.370
Yes, I'm being a hard ass
about the microphone.

00:38:43.450 --> 00:38:44.080
Sorry.

00:38:44.110 --> 00:38:49.280
Thanks for reminding me to be a hard ass.

00:38:52.030 --> 00:38:55.420
18, 20 dB, if you need to normalize
up that loud boil,

00:38:55.420 --> 00:39:00.200
if you raise the noise floor,
won't that play havoc with

00:39:00.200 --> 00:39:01.610
the audio side of the codec?

00:39:01.670 --> 00:39:07.240
Well, sucky audio is going to remain
the equivalent suckiness

00:39:07.240 --> 00:39:08.270
whatever loud it's going to be.

00:39:08.300 --> 00:39:12.460
Yeah, if you've got audio that's really
quiet with a high noise floor,

00:39:12.460 --> 00:39:14.300
you've got bigger
problems than you're in.

00:39:14.380 --> 00:39:17.680
Yeah, go get Pro Tools and
spend some time with it.

00:39:17.680 --> 00:39:19.850
Well, I don't know, fire your sound guy,
I don't know.

00:39:20.000 --> 00:39:21.560
Yeah, that's going to be a problem.

00:39:21.560 --> 00:39:23.790
Codecs don't deal well with noise.

00:39:23.800 --> 00:39:25.790
They try to filter it out.

00:39:25.880 --> 00:39:30.060
Speech codecs, actually,
like AMR or Pure Voice,

00:39:30.060 --> 00:39:34.480
are so tuned to voice,
they can actually filter

00:39:34.480 --> 00:39:36.020
out some kinds of noise,
which is actually kind of cool.

00:39:36.020 --> 00:39:38.880
I've a couple times actually used
the Qualcomm Pure Voice codec

00:39:39.030 --> 00:39:41.920
as a noise removal feature,
because there was speech.

00:39:41.980 --> 00:39:44.170
I just didn't know how to encode,
and it wasn't speech,

00:39:44.220 --> 00:39:46.320
so it just left out the noise.

00:39:46.360 --> 00:39:50.310
But yeah,
if you've just got a high... Yeah,

00:39:50.310 --> 00:39:51.320
it's just a problem.

00:39:51.320 --> 00:39:52.920
It'd be a problem with
what you were going to do.

00:39:52.920 --> 00:39:54.950
You know,
it's not... Nothing particularly about

00:39:54.950 --> 00:39:57.180
compression makes it a dramatically
worse problem than you already had.

00:40:01.800 --> 00:40:02.540
Other audio processing.

00:40:02.590 --> 00:40:05.320
You know, compression limiter is good.

00:40:05.320 --> 00:40:07.870
If you're going,
typically most computer environments,

00:40:07.870 --> 00:40:10.420
you know, you don't,
it's properly well mixed audio.

00:40:10.420 --> 00:40:12.120
You're not going to need to
like do that kind of stuff.

00:40:12.120 --> 00:40:13.880
I mean,
most computer speakers are pretty good.

00:40:13.880 --> 00:40:15.710
You know,
you don't want to like mix it for

00:40:15.710 --> 00:40:18.370
like some kind of crazy AM radio
thing because then people have

00:40:18.430 --> 00:40:20.220
good speakers that sounds bizarre.

00:40:20.220 --> 00:40:21.590
3GPP phones, obviously.

00:40:21.830 --> 00:40:22.770
Those are pretty small.

00:40:22.800 --> 00:40:24.250
We still have some headphones.

00:40:24.320 --> 00:40:26.690
You try to ask someone who's
going to watch on a phone,

00:40:26.690 --> 00:40:29.590
you probably do want to do
some compression limiter stuff.

00:40:31.900 --> 00:40:34.240
You know, typical things, notch filters,
noise removal,

00:40:34.240 --> 00:40:37.140
if there's that kind of stuff, you know,
it's what you would do to clean up

00:40:37.140 --> 00:40:40.290
audio that you were going to do anyways,
you would apply to compression.

00:40:40.300 --> 00:40:42.890
It's somewhat more useful in
compression just because it'll

00:40:42.940 --> 00:40:45.420
encode a little bit better,
but still, it's, you know,

00:40:45.420 --> 00:40:48.640
if something sounded too bad to listen
to before you're going to compress,

00:40:48.640 --> 00:40:50.790
it's not going to get any
better for the most part,

00:40:50.790 --> 00:40:52.670
but typically won't get a lot worse.

00:40:54.800 --> 00:41:01.700
[Transcript missing]

00:41:01.920 --> 00:41:05.290
Before you go to the demo,
you were talking about preprocessing.

00:41:05.420 --> 00:41:09.470
Could you suggest something about
preprocessing in a live situation?

00:41:09.470 --> 00:41:12.860
What do you do for,
because here you are using clean.

00:41:12.860 --> 00:41:15.140
Yeah, preprocessing in a live situation.

00:41:15.140 --> 00:41:18.830
Well, you're not really, I mean, yeah,
it's, you're processing in that case.

00:41:18.830 --> 00:41:20.150
You can't really do it pre, but yeah.

00:41:20.260 --> 00:41:23.420
In the sense that before the encoder,
right?

00:41:23.490 --> 00:41:26.120
Yeah, I mean, a lot of it's going to,
well, definitely one, like,

00:41:26.120 --> 00:41:30.020
if you're shooting something live,
you want to shoot in progressive mode,

00:41:30.020 --> 00:41:31.450
so you don't have any analytics
you need to deal with.

00:41:31.540 --> 00:41:34.310
You want to, I mean,
one issue you can kind of see,

00:41:34.310 --> 00:41:36.900
sometimes if you're
shooting with a DV camera,

00:41:36.900 --> 00:41:40.260
and, you know,
there's black bars on the left and right,

00:41:40.260 --> 00:41:41.260
that's part of the video signal.

00:41:41.260 --> 00:41:44.340
Hopefully, using a software tool lets
you crop the video signal out.

00:41:44.420 --> 00:41:47.860
If it lets you do that,
you'll crop out to the, you know,

00:41:47.860 --> 00:41:49.680
to the active image area.

00:41:49.680 --> 00:41:53.420
If you have a tool that doesn't do that,
you cry a little cry, I guess.

00:41:53.440 --> 00:41:57.580
And move on, but, yeah, I mean, you know,
shoot, when you're doing it live,

00:41:57.600 --> 00:42:00.960
you have the flexibility that you can
actually just get a bunch of stuff right,

00:42:00.960 --> 00:42:02.460
you can control the whole experience.

00:42:02.480 --> 00:42:04.940
The hard part of preprocessing is
when you get stuff you didn't author

00:42:04.940 --> 00:42:07.710
that someone shot 20 years ago before
they even knew about compression,

00:42:07.710 --> 00:42:09.300
and then you have to try to make it work.

00:42:09.300 --> 00:42:11.320
To the extent,
you can control the entire process,

00:42:11.390 --> 00:42:12.880
you can make it work really well.

00:42:13.010 --> 00:42:17.310
So, yeah, I mean, shoot progressive,
use a tool that supports native cropping,

00:42:17.320 --> 00:42:20.830
you know, do good live audio production
like you normally would,

00:42:20.830 --> 00:42:22.960
it's going to be just fine for that.

00:42:23.460 --> 00:42:24.880
It should be okay.

00:42:25.070 --> 00:42:29.670
Yeah, it's not, the hard parts for doing
compression for live is actually a

00:42:29.670 --> 00:42:32.060
lot of things like camera motion.

00:42:32.060 --> 00:42:34.460
I mean, you know,
you don't want to shoot, you know,

00:42:34.460 --> 00:42:36.880
handheld and you get
all kinds of blockiness,

00:42:36.910 --> 00:42:38.360
you know,
and really just trying to control

00:42:38.360 --> 00:42:40.340
the production environment is
really where it pays off the most.

00:42:40.340 --> 00:42:42.190
So, question?

00:42:42.200 --> 00:42:44.740
Yeah, can we go back to, just real quick.

00:42:46.300 --> 00:42:55.300
So you start out 720 by 480 for the say,
DV video, and want to serve it on the web

00:42:55.300 --> 00:42:58.300
somewhere in the 320 by 240.

00:42:58.300 --> 00:43:02.300
It doesn't sound like you're
a big 4 by 3 fan always.

00:43:02.300 --> 00:43:03.280
Well, that's what your source is.

00:43:03.310 --> 00:43:05.050
I mean, if you're producing,
if you're shooting your own stuff,

00:43:05.100 --> 00:43:05.900
you can do whatever you want to.

00:43:05.900 --> 00:43:09.460
If it's 4 by 3,
deliver us 4 by 3 for sure.

00:43:10.110 --> 00:43:12.100
Let's say if it's your own stuff.

00:43:12.100 --> 00:43:15.100
So it sounds like what you're saying,
if I understood you correctly,

00:43:15.100 --> 00:43:19.100
is go ahead and crop to get rid
of any stuff on the edges there.

00:43:19.110 --> 00:43:22.050
And then when you scale down,
what proportion,

00:43:22.050 --> 00:43:25.230
if you're serving on the web,
if it's your project,

00:43:25.240 --> 00:43:29.250
what proportion do you think
looks good and do you like a lot?

00:43:29.300 --> 00:43:31.580
In actual pixels.

00:43:31.700 --> 00:43:32.900
What kind of bandwidth
are you looking at?

00:43:36.130 --> 00:43:37.440
like 200 kilobit?

00:43:37.440 --> 00:43:38.000
Yeah, yeah.

00:43:38.000 --> 00:43:40.690
I mean 320 by 240 is
kind of my good default.

00:43:40.690 --> 00:43:42.240
I mean that's what I start with.

00:43:42.320 --> 00:43:43.070
I'll encode it.

00:43:43.070 --> 00:43:43.760
I'll look at it.

00:43:43.930 --> 00:43:46.690
If we shot on progressive,
you have a lot more stuff to work with.

00:43:46.780 --> 00:43:48.400
So you might bump it up a
little bit or bump it down a

00:43:48.400 --> 00:43:49.780
little bit to be on the format.

00:43:49.780 --> 00:43:52.590
But 320 by 240 is generally
a good starting point.

00:43:52.680 --> 00:43:56.430
So you would crop 640
by 40 and then... Ah,

00:43:56.430 --> 00:43:57.030
I know.

00:43:57.030 --> 00:43:59.400
720 by 480 anamorphic.

00:43:59.530 --> 00:44:05.960
So if you have a clean aperture
720 by 480 going to 320 by 240,

00:44:05.960 --> 00:44:07.560
you don't crop at all.

00:44:07.560 --> 00:44:12.110
You shrink 720 to 320 and 480 to 240.

00:44:12.120 --> 00:44:14.800
Yeah, I see people getting
in trouble with that.

00:44:14.800 --> 00:44:16.360
They crop 64 pixels left and right.

00:44:16.360 --> 00:44:16.930
Yeah, yeah.

00:44:17.150 --> 00:44:17.330
Right.

00:44:17.370 --> 00:44:19.970
Because you're going from a
non-square pixel environment

00:44:20.020 --> 00:44:21.270
to a square pixel environment.

00:44:21.280 --> 00:44:24.410
You're actually correcting for that
by just pure scale and not a crop.

00:44:24.470 --> 00:44:27.000
So you're going to do cropping
to get rid of the stuff,

00:44:27.070 --> 00:44:29.950
but you're not going to crop
correct for the aspect ratio.

00:44:29.950 --> 00:44:30.810
Great, great.

00:44:30.810 --> 00:44:31.960
Okay, there we go.

00:44:32.360 --> 00:44:33.440
I'll save you hours right there.

00:44:33.440 --> 00:44:33.920
There we go.

00:44:33.920 --> 00:44:36.180
This whole WWDC just paid
for itself right there,

00:44:36.180 --> 00:44:36.840
hopefully.

00:44:36.840 --> 00:44:39.320
So any more questions before
I move on to demo land?

00:44:39.320 --> 00:44:48.760
All right, let's... Can we get the

00:44:51.360 --> 00:44:55.770
They told me to make sure
I have my energy saver off.

00:44:55.880 --> 00:44:57.510
So that's my own darn fault.

00:44:57.540 --> 00:44:58.650
There we go.

00:44:58.860 --> 00:44:59.400
Does that look good?

00:44:59.420 --> 00:45:01.190
Are we at 1024?

00:45:01.200 --> 00:45:02.140
Okay.

00:45:02.140 --> 00:45:08.280
So in the interest of being a show-off,
I'm going to let you guys tell

00:45:08.280 --> 00:45:10.670
me what you want to see done,
and we're going to do it.

00:45:10.790 --> 00:45:15.360
So we've got Compressor,
we've got Squeeze, we've got Cleaner,

00:45:15.360 --> 00:45:16.800
we've got Premiere,
we've got After Effects.

00:45:16.800 --> 00:45:19.060
Kind of the tools I'll
often use for preprocessing.

00:45:20.520 --> 00:45:25.040
I've got Film Source stuff, I've got PAL,
I've got NTSC Source stuff,

00:45:25.040 --> 00:45:26.430
I've got ugly-looking VHS stuff.

00:45:26.510 --> 00:45:30.120
So we've got time for a
couple different ones.

00:45:30.190 --> 00:45:32.840
So someone who's got a scenario
that's kicking their butt,

00:45:32.840 --> 00:45:34.080
what do you want to see?

00:45:34.080 --> 00:45:35.940
You want to see how to make
an Apple movie trailer?

00:45:35.940 --> 00:45:38.400
Like the QuickTime.com movie trailers?

00:45:38.400 --> 00:45:40.110
Is that a good one?

00:45:40.120 --> 00:45:40.690
All right.

00:45:40.760 --> 00:45:42.790
Okay,
you want to see it in After Effects,

00:45:42.790 --> 00:45:45.200
you want to see it in Cleaner,
you want to see it in Squeeze,

00:45:45.200 --> 00:45:45.940
what do you want to see it in?

00:45:45.940 --> 00:45:47.100
Cleaner, you got it.

00:45:47.920 --> 00:45:49.720
Well, that's a clear goal there.

00:45:49.720 --> 00:45:49.880
OK.

00:45:50.100 --> 00:45:56.650
So let me show you-- do you want to see
the Biker Boys trailer I did before,

00:45:56.650 --> 00:46:01.760
or do you want to see
the Sinbad movie trailer?

00:46:01.850 --> 00:46:02.800
I know.

00:46:02.800 --> 00:46:03.470
It's horrible.

00:46:03.540 --> 00:46:04.760
We'll do the Biker Boys one.

00:46:04.790 --> 00:46:06.800
It's already had the output.

00:46:07.570 --> 00:46:08.060
So is that?

00:46:08.100 --> 00:46:10.180
I don't have that.

00:46:10.180 --> 00:46:11.720
I don't work for Apple.

00:46:11.720 --> 00:46:12.360
I know.

00:46:12.360 --> 00:46:14.330
I got DreamWorks.

00:46:14.460 --> 00:46:16.730
I don't work for them either,
but they give me stuff.

00:46:19.600 --> 00:46:28.500
[Transcript missing]

00:46:29.120 --> 00:46:32.200
So who doesn't have QuickTime Player Pro?

00:46:32.220 --> 00:46:33.230
Anyone?

00:46:33.300 --> 00:46:36.030
QuickTime Player Pro is the best
$30 you're going to spend a year.

00:46:36.060 --> 00:46:38.540
Just think of it as a cheap
magazine subscription.

00:46:38.640 --> 00:46:40.980
QuickTime Player Pro pays
for itself in eight hours.

00:46:40.980 --> 00:46:44.420
So you're going to see lots of cool
QuickTime Player Pro tricks here.

00:46:44.460 --> 00:46:47.820
Which isn't the purpose of this class,
but it's like quarter of my lifestyle.

00:46:47.820 --> 00:46:49.900
So this is a source file here.

00:46:49.900 --> 00:46:52.860
This is a typical
motion JPEG source file.

00:46:52.860 --> 00:46:57.220
It's 486 lines,
not 480s like what you get

00:46:57.220 --> 00:47:00.490
off of CineWave or Kona cars,
something like that.

00:47:00.520 --> 00:47:05.580
But it's motion JPEG and not uncompressed
because I only have a 40 gig hard drive.

00:47:05.620 --> 00:47:07.060
So a couple things here.

00:47:07.360 --> 00:47:08.520
So it's a preview.

00:47:08.520 --> 00:47:12.370
You can see we've got some blanking
here on the left and right,

00:47:12.370 --> 00:47:13.940
and we're letterboxed.

00:47:14.140 --> 00:47:16.940
That's a 1.85 to 1 aspect ratio.

00:47:17.820 --> 00:47:20.000
Let me just find a good
scene with some motion in it.

00:47:20.170 --> 00:47:22.400
I'll mention before the pattern.

00:47:22.400 --> 00:47:24.820
Let me just find the
start of the shot here.

00:47:24.820 --> 00:47:26.790
Blah, blah, blah, blah, blah, cut.

00:47:26.790 --> 00:47:27.820
There we go.

00:47:27.820 --> 00:47:28.130
Okay.

00:47:28.130 --> 00:47:30.620
So the start off here,
the shortest thing,

00:47:30.620 --> 00:47:32.810
I'm going to go frame by frame here.

00:47:32.820 --> 00:47:36.710
So you've got progressive, interlaced,
interlaced, progressive, progressive,

00:47:36.790 --> 00:47:40.180
progressive, interlaced, interlaced,
progressive, progressive, progressive,

00:47:40.180 --> 00:47:40.820
interlaced, interlaced.

00:47:40.820 --> 00:47:43.950
So we see we've got the typical
pattern of three progressive frames

00:47:43.960 --> 00:47:45.820
followed by two interlaced frames.

00:47:45.820 --> 00:47:47.820
We know it's telecine.

00:47:47.930 --> 00:47:49.770
So this is an inverse telecine project.

00:47:49.770 --> 00:47:52.780
So pretty easy.

00:47:52.820 --> 00:47:52.820
Good.

00:47:52.820 --> 00:47:53.780
It's really as easy as that.

00:47:53.790 --> 00:47:54.770
You only need five seconds.

00:47:54.820 --> 00:47:57.420
I mean, you only need five frames of a
video to find out what the right

00:47:57.420 --> 00:47:57.820
de-interlacing mode for it is.

00:47:57.820 --> 00:48:00.790
And that pays off so much.

00:48:00.830 --> 00:48:02.810
A couple of things looking at this thing.

00:48:02.920 --> 00:48:04.820
It's moderately noisy.

00:48:04.820 --> 00:48:06.820
Well, no,
you can't really see it very well.

00:48:06.820 --> 00:48:08.510
There's some noise in the heel here.

00:48:08.510 --> 00:48:10.820
This is a pretty clean, you know,
there's some,

00:48:11.030 --> 00:48:13.820
the noise in here is from film, honestly.

00:48:13.820 --> 00:48:16.820
Here's a very de-interlaced,
very interlaced frame right there.

00:48:16.820 --> 00:48:19.820
That's what happens when you have a frame
that happens in the middle of a hard cut.

00:48:19.820 --> 00:48:21.400
Because when you get
through to a pull down,

00:48:21.490 --> 00:48:23.370
you might wind up with the
two different fields being of

00:48:23.460 --> 00:48:24.820
two different frames entirely.

00:48:24.820 --> 00:48:28.780
So here, that isn't a transparency
effect or something like that.

00:48:28.810 --> 00:48:30.800
That isn't a cross-isol.

00:48:30.870 --> 00:48:33.580
That's just two different frames on
either side of a hard cut that is

00:48:33.580 --> 00:48:35.800
part of the telecine process wound
up as part of the same frame even

00:48:35.800 --> 00:48:36.820
though they weren't originally.

00:48:36.820 --> 00:48:39.820
So that would be,
that's a very hard frame to compress.

00:48:39.820 --> 00:48:41.820
So we definitely want to get
rid of that kind of stuff.

00:48:42.020 --> 00:48:42.430
Okay.

00:48:42.820 --> 00:48:42.820
So that's the source.

00:48:43.820 --> 00:48:47.000
Cleaner is a pretty slick
tool for pre-processing for

00:48:47.010 --> 00:48:48.810
a lot of this kind of stuff.

00:48:48.820 --> 00:48:52.920
The biggest problem right now is
the inverse telecine algorithm

00:48:52.920 --> 00:48:55.820
has been broken since version 502.

00:48:55.820 --> 00:48:57.750
It got a little bit better in version 6,
but there's still,

00:48:57.860 --> 00:49:00.820
you can still find some cases where
like reverse the order of frames

00:49:00.820 --> 00:49:01.820
around a cut and that kind of stuff.

00:49:01.820 --> 00:49:05.560
So you've got to carefully QA inverse
telecine stuff done from Cleaner.

00:49:05.850 --> 00:49:09.190
But it's definitely kind of the easiest
tool to visualize this stuff in.

00:49:12.260 --> 00:49:15.730
I actually keep a copy of Cleaner 4
and an old G4 line around just to do

00:49:15.870 --> 00:49:19.800
inverse telecine-y stuff sometimes
when I find things that expose the bug.

00:49:19.840 --> 00:49:24.150
So, and Cleaner has this great
thing called the Project Window,

00:49:24.570 --> 00:49:27.040
which we'll do here.

00:49:28.400 --> 00:49:42.900
[Transcript missing]

00:49:44.590 --> 00:49:47.260
But it's not something, but you know,
clean and smart enough to go, okay,

00:49:47.260 --> 00:49:48.170
it's actually four by three.

00:49:48.180 --> 00:49:49.840
So it's going to compress
it on the horizontal.

00:49:49.840 --> 00:49:52.700
So you see the current aspect ratio.

00:49:56.120 --> 00:49:57.330
First thing I'm going
to do is run a crop.

00:49:57.340 --> 00:50:00.860
So I mentioned before,
this is a 1.85 to 1 aspect ratio.

00:50:00.860 --> 00:50:04.190
Just look at these things
a lot if you kind of learn.

00:50:04.190 --> 00:50:04.660
Whoops.

00:50:04.660 --> 00:50:07.160
Yeah, there's a bunch of numbers.

00:50:11.440 --> 00:50:16.730
Most films are going to be 1.85
to 1 or 2.1 to 1 or 2.35 to 1.

00:50:16.740 --> 00:50:17.640
You have a question?

00:50:17.640 --> 00:50:19.620
Microphone.

00:50:22.300 --> 00:50:53.900
[Transcript missing]

00:50:54.340 --> 00:50:56.440
I can basically,
it'll draw me a box and it'll

00:50:56.440 --> 00:50:58.110
constrain to that aspect ratio.

00:50:58.110 --> 00:51:00.760
And you can kind of do it
here and kind of center it.

00:51:01.590 --> 00:51:03.330
It's a really nice cropping dialog.

00:51:03.330 --> 00:51:05.200
I always like this feature of Cleaner.

00:51:05.200 --> 00:51:07.190
You're able to go in there and you
can kind of scan through and make

00:51:07.190 --> 00:51:08.460
sure you're not getting out there.

00:51:08.460 --> 00:51:11.350
You know, and, yeah, that's about right.

00:51:11.420 --> 00:51:14.700
And getting a little bit of the
imagery off is not a big deal.

00:51:14.710 --> 00:51:16.660
And also,
you can just do it unconstrained.

00:51:16.660 --> 00:51:19.070
Rule of thumb, you know,
and if I just grab it like this,

00:51:19.150 --> 00:51:20.880
it might get a little bit distorted.

00:51:20.880 --> 00:51:25.500
Rule of thumb is that any aspect ratio
distortion less than 5% is not going

00:51:25.620 --> 00:51:27.830
to be noticeable by the end users.

00:51:28.240 --> 00:51:31.770
So, you know, don't worry about getting
exactly 1.85 to 1.

00:51:31.780 --> 00:51:35.620
If you crop 1.81 to 1
and you scale it to that,

00:51:35.620 --> 00:51:36.890
you know,
a few pixels off in terms of scaling

00:51:36.980 --> 00:51:39.650
is not going to be noticeable
in terms of looking distorted.

00:51:39.660 --> 00:51:43.460
So, as long as you keep it under 5%, it's
going to look generally pretty good.

00:51:43.460 --> 00:51:45.790
Okay, so that's what we'll do here.

00:51:45.930 --> 00:51:48.580
It's an interlaced video.

00:51:48.580 --> 00:51:49.360
Okay.

00:51:49.360 --> 00:51:52.010
So, let's make up a setting here.

00:51:52.020 --> 00:51:53.660
Let's come up with a scenario.

00:51:53.660 --> 00:51:56.940
Oh, wait,
we're doing Apple-style web video stuff.

00:51:57.020 --> 00:51:58.160
So.

00:51:58.240 --> 00:51:58.660
Okay.

00:51:58.660 --> 00:52:00.480
Let me make a new setting here.

00:52:00.480 --> 00:52:03.840
Ben fakes Apple trailer.

00:52:07.000 --> 00:52:10.480
Quick time thing, compress,
skip all that stuff.

00:52:10.490 --> 00:52:13.230
So, it's cropped.

00:52:13.480 --> 00:52:16.780
So, with the high resolution,
sometimes do the big

00:52:16.780 --> 00:52:18.560
woods up to 640 by 480.

00:52:18.590 --> 00:52:21.980
You can specify this thing so
it's the same as crop source here,

00:52:22.030 --> 00:52:23.210
640 by 480.

00:52:23.310 --> 00:52:26.320
So, kind of annoying bug here is it
doesn't actually do the math right.

00:52:26.320 --> 00:52:28.730
You use the rounded to
divisible by their values.

00:52:28.740 --> 00:52:34.000
So, 640 by,
so actually what I wind up doing all the

00:52:34.070 --> 00:52:36.980
time is going over to the calculator,
actually doing the math myself because

00:52:37.080 --> 00:52:38.670
I know cleaner tends to get it wrong.

00:52:38.760 --> 00:52:43.600
So, it's 640 divided by 1.85
comes in and it runs,

00:52:43.660 --> 00:52:46.670
it's actually 345.

00:52:46.870 --> 00:52:51.090
When you're scaling,
most codecs work better when both

00:52:51.360 --> 00:52:53.920
resolutions are divisible by 16.

00:52:53.920 --> 00:52:56.880
So, geeky little thing,
that's the way compression works.

00:52:56.880 --> 00:52:59.400
If you choose a value
that's not divisible by 16,

00:52:59.400 --> 00:53:03.830
what it winds up doing is it winds up
actually encoding another 16 pixels and

00:53:03.830 --> 00:53:06.050
then not showing some of them to you.

00:53:06.080 --> 00:53:08.620
Which winds up being more work
that you never get to see.

00:53:08.620 --> 00:53:11.100
So I always round the nearest 16.

00:53:11.100 --> 00:53:13.300
So kind of the way I do
that is I do the math,

00:53:13.480 --> 00:53:15.930
so 640 divided by that number is that.

00:53:16.360 --> 00:53:17.600
I'll divide that by 16.

00:53:17.600 --> 00:53:20.460
Okay, 20, the nearest whole number is 22.

00:53:20.460 --> 00:53:21.860
Times 16.

00:53:21.860 --> 00:53:24.880
Which is going to be 352.

00:53:24.880 --> 00:53:28.500
352 is 352,
which is actually the correct value.

00:53:29.870 --> 00:53:30.800
And there we go.

00:53:30.800 --> 00:53:39.260
So let me just do the
real-time preview here.

00:53:42.580 --> 00:53:44.000
So this is-- oh, look at that.

00:53:44.000 --> 00:53:46.580
I didn't quite crop it enough.

00:53:46.580 --> 00:53:47.460
That's good.

00:53:47.600 --> 00:53:48.680
It's real time preview mode.

00:53:48.730 --> 00:53:50.180
Is anyone here not familiar with Cleaner?

00:53:50.180 --> 00:53:51.020
Are there people here?

00:53:51.020 --> 00:53:52.020
Any people?

00:53:52.020 --> 00:53:52.520
OK.

00:53:52.520 --> 00:53:54.320
Well, stop me if I do anything
that's too weird,

00:53:54.320 --> 00:53:57.600
but I'll kind of assume you have a
basic idea of what's going on here.

00:53:57.600 --> 00:53:58.100
OK.

00:53:58.100 --> 00:54:00.710
So that's a little too much.

00:54:02.440 --> 00:54:03.170
Okay, there we go.

00:54:03.240 --> 00:54:04.400
So I'll make sure there's no black.

00:54:04.400 --> 00:54:08.670
I'm going to see if there's
some filter in my default.

00:54:09.440 --> 00:54:14.530
Cleaner doesn't really like
to be on a big monitor,

00:54:14.530 --> 00:54:19.980
so it's a little bit cramped here.

00:54:20.970 --> 00:54:24.900
So, by default it's going
to do a deinterlace.

00:54:24.900 --> 00:54:28.340
And so we have frames with
interlacing on them like,

00:54:28.410 --> 00:54:33.690
what do we got here?

00:54:33.690 --> 00:54:33.690
What's going on?

00:54:33.690 --> 00:54:33.690
There we go.

00:54:35.760 --> 00:54:37.820
We'll get this after the inter...
so it'll be interested by default,

00:54:37.820 --> 00:54:39.150
which does an okay thing like this.

00:54:39.160 --> 00:54:41.660
But really what we obviously want to
do is we want to do inverse telecine.

00:54:41.660 --> 00:54:43.040
It's called a telecine cleaner.

00:54:45.180 --> 00:54:46.100
It's a little bit cleaner.

00:54:46.100 --> 00:54:47.180
You probably can't see
it from back there,

00:54:47.180 --> 00:54:50.180
but it gives us more resolution and
gives us a higher quality output.

00:54:52.110 --> 00:54:54.170
Sharpen Filter.

00:54:54.170 --> 00:54:56.390
I recommend never using a sharpen filter.

00:54:56.400 --> 00:54:59.380
A sharpen filter can make it look
better before you compress it,

00:54:59.600 --> 00:55:01.080
but sharpening adds noise.

00:55:01.080 --> 00:55:02.440
It adds complexity to the image.

00:55:02.440 --> 00:55:05.590
And even though sharpen can make it
look better before it hits the codec,

00:55:05.590 --> 00:55:08.630
at any kind of reasonable web data rate,
it's going to look worse after

00:55:08.630 --> 00:55:11.720
having applied the sharpen filter
than if you just left it alone.

00:55:11.750 --> 00:55:13.840
So I always turn sharpen off.

00:55:13.910 --> 00:55:14.940
It's a little bit noisy.

00:55:14.940 --> 00:55:17.190
The mile adapter noise reduce
is a good default filter.

00:55:17.190 --> 00:55:18.560
It's not going to hurt it too much.

00:55:18.620 --> 00:55:21.180
It's not going to help a whole lot,
but it helps a little bit.

00:55:21.460 --> 00:55:22.740
and it's not going to be too distracting.

00:55:27.220 --> 00:55:31.910
So, by default we get a bunch
of default settings here,

00:55:31.970 --> 00:55:33.060
which are totally the wrong ones.

00:55:33.070 --> 00:55:33.620
I don't know.

00:55:36.230 --> 00:55:38.820
The default image processing ones were
kind of like design for Cleaner 5 and

00:55:38.820 --> 00:55:42.100
kind of ported over without acknowledging
the whole image change thing.

00:55:42.100 --> 00:55:45.360
So never use the default processing
image filters in Cleaner because

00:55:45.360 --> 00:55:46.980
they're all wrong in Cleaner 6.

00:55:46.980 --> 00:55:48.290
Every last one of them.

00:55:50.630 --> 00:55:51.000
Uh, yeah.

00:55:51.000 --> 00:55:52.100
And you're at the microphone?

00:55:52.100 --> 00:55:52.600
Thank you.

00:55:52.600 --> 00:55:54.540
I'm right here, just for you.

00:55:54.790 --> 00:55:56.600
Yeah, you're good.

00:55:56.600 --> 00:55:58.600
No, we're... How much of a difference
would it make if your source

00:55:58.600 --> 00:55:58.600
material was not telecine?

00:55:58.600 --> 00:56:01.530
Like, I mean, if you can actually get it
before they telecine it,

00:56:01.530 --> 00:56:02.600
how much of a difference?

00:56:02.600 --> 00:56:02.600
How significant?

00:56:02.600 --> 00:56:06.600
Okay, so basically if I had
like 24p source frames,

00:56:06.600 --> 00:56:11.600
um... It won't make that much
difference in that aspect.

00:56:11.600 --> 00:56:14.050
Obviously if it's like...
The question I'm getting is like,

00:56:14.080 --> 00:56:17.260
you know, my, my, my, you know,
Cineon files straight off the

00:56:17.260 --> 00:56:18.600
machine versus like a beta SP tape.

00:56:18.600 --> 00:56:20.600
You know, obviously, you know,
that'll matter more.

00:56:20.600 --> 00:56:25.600
But the inverse telecine,
if my choice between like a 720x486

00:56:25.800 --> 00:56:30.610
series of TGA files and a 720x486,
you know, Kona file,

00:56:30.680 --> 00:56:32.600
pretty much the same,
the same net effect.

00:56:32.600 --> 00:56:34.590
Not gonna matter that much either way.

00:56:34.600 --> 00:56:36.930
The workflow's obviously
better for the... Yeah,

00:56:36.930 --> 00:56:38.850
it's gonna save you time,
as far as... Oh yeah,

00:56:38.880 --> 00:56:40.570
you don't have to do this filter,
you get smaller files,

00:56:40.680 --> 00:56:42.500
you get about a 20% reduction
in data rate of the source.

00:56:42.610 --> 00:56:45.260
So it's a very nice thing,
but it's not gonna have

00:56:45.260 --> 00:56:46.850
much of a quality impact.

00:56:49.170 --> 00:56:50.620
Okay, so we got this guy here.

00:56:50.620 --> 00:56:53.800
I've seen this movie,
I've watched this movie

00:56:53.800 --> 00:56:54.980
like 87 billion times.

00:56:54.980 --> 00:56:56.400
I have no idea what the
movie's about really.

00:56:56.400 --> 00:56:58.210
It's got some very cool motor.

00:56:58.210 --> 00:57:02.470
I guess it's Fast and the Furious on
two wheels or something like that.

00:57:02.480 --> 00:57:04.140
I never saw Fast and the Furious either.

00:57:04.140 --> 00:57:07.120
I have two small children now,
so whatever hypnosis

00:57:07.120 --> 00:57:08.660
I once had is long gone.

00:57:08.660 --> 00:57:11.290
Cars or something.

00:57:11.290 --> 00:57:13.280
Okay, so...

00:57:17.760 --> 00:57:19.330
So, this is generally pretty good.

00:57:19.420 --> 00:57:21.300
So, I mean, for a clean source like this,
I don't actually need to

00:57:21.300 --> 00:57:22.370
add any filtering at all.

00:57:22.450 --> 00:57:28.650
I might just go for... The one place I'll
often typically look at is a frame that's

00:57:28.650 --> 00:57:31.770
got some... I know it's all black on it,
like...

00:57:33.700 --> 00:57:36.580
Get some credits frames typically,
have some stuff.

00:57:36.580 --> 00:57:38.720
It doesn't really have all black on it,
though.

00:57:42.310 --> 00:57:45.440
Oh, the key to a great trailer is
you edit out this graphic here,

00:57:45.440 --> 00:57:48.020
which almost always looks bad,
and you actually get an

00:57:48.020 --> 00:57:50.840
EPS file of it from MPAA,
and then just render that into it.

00:57:50.840 --> 00:57:53.820
So you have no analog
noise in that start part.

00:57:53.840 --> 00:57:55.890
Save a lot of bits right there.

00:57:59.310 --> 00:58:01.030
And so we kind of look here and
see this is all the way black.

00:58:01.110 --> 00:58:04.060
And actually one thing that
Apple did that makes me happy

00:58:04.060 --> 00:58:05.090
is digital color meters.

00:58:05.100 --> 00:58:07.740
This is a great little utility.

00:58:07.740 --> 00:58:07.740
It comes with a Mac OS X.

00:58:15.500 --> 00:58:22.470
So you can kind of go through here
and actually look at the color values.

00:58:22.470 --> 00:58:23.330
This is great.

00:58:23.380 --> 00:58:24.660
Like, is this actually all the way black?

00:58:24.720 --> 00:58:25.000
I don't care.

00:58:25.000 --> 00:58:25.200
Okay.

00:58:25.200 --> 00:58:27.200
This is actually pretty
much all the way black here.

00:58:27.200 --> 00:58:29.530
There are a few things here and there,
but that's flat enough.

00:58:29.530 --> 00:58:35.790
All I'm going to do here is I can tune
in an actual brightness of minus one.

00:58:35.800 --> 00:58:41.350
And that should...

00:58:44.100 --> 00:58:47.580
The one thing about Cleaner is the
preview window does not show up

00:58:47.580 --> 00:58:51.550
when it's not the foreground app.

00:58:52.710 --> 00:58:55.140
and the way... There we go.

00:58:55.140 --> 00:58:58.620
It seems like a really kind of tweaky,
kind of goofy stuff.

00:58:58.620 --> 00:58:59.160
That's because it is.

00:58:59.160 --> 00:59:01.320
I mean,
you could really spend all day going,

00:59:01.350 --> 00:59:02.700
well, I don't know.

00:59:02.700 --> 00:59:04.230
Let's try one off.

00:59:04.340 --> 00:59:06.070
It's going to make a big difference.

00:59:06.070 --> 00:59:07.340
Really not that much.

00:59:07.420 --> 00:59:09.860
Plus, it's got some gradients here.

00:59:09.860 --> 00:59:11.710
Yeah, that's good enough.

00:59:11.800 --> 00:59:14.440
If I could just turn these off,
it's really not going

00:59:14.440 --> 00:59:15.700
to matter that much.

00:59:15.700 --> 00:59:17.880
Anything less than about five is
really not going to pay off that much.

00:59:18.940 --> 00:59:21.760
And another thing,
if you've seen Inverse Telecine, yeah.

00:59:25.900 --> 00:59:32.440
The white and black restore filters.

00:59:32.440 --> 00:59:35.140
Basically, so we get two values,
amount and smoothness.

00:59:35.140 --> 00:59:38.920
So Luma's encoded a range of
zero for all the way blocks,

00:59:38.920 --> 00:59:40.580
white at 255.

00:59:40.580 --> 00:59:44.180
What amount does it say, basically,
if I say six, take it, or 19,

00:59:44.180 --> 00:59:47.980
19 for example,
every pixel that is luminance value of 19

00:59:47.980 --> 00:59:50.120
or below gets turned to exactly be zero.

00:59:50.120 --> 00:59:53.660
So zero through 19 becomes zero,
a 20 stays at 20.

00:59:53.660 --> 00:59:55.510
And then what smoothness does
is it basically fills in the

00:59:55.510 --> 00:59:56.880
remaining range to interpolate.

00:59:56.880 --> 01:00:00.940
So I said this, so instead of making 20
zero to make 25 zero,

01:00:00.940 --> 01:00:04.740
and then 20 to 25 will get expanded
into the range from zero to 30.

01:00:04.800 --> 01:00:08.790
So you don't have a boundary.

01:00:10.580 --> 01:00:12.250
If you can see right here,
there's a very sharp edge

01:00:12.250 --> 01:00:13.200
now between these two.

01:00:13.200 --> 01:00:16.120
Because stuff that was kind of near
black turned all the way black,

01:00:16.120 --> 01:00:17.800
so we kind of lost our gradient there.

01:00:17.800 --> 01:00:21.580
I don't know if you can see it all the
way in the audience on this projector.

01:00:21.580 --> 01:00:23.130
Can you see the edge there at all?

01:00:23.130 --> 01:00:25.210
Okay, let me crank it up here.

01:00:25.210 --> 01:00:29.460
Okay, or if you're a truly bold criminal,
you get like that.

01:00:31.510 --> 01:00:34.860
BlackRestore is one
of those filters that,

01:00:34.990 --> 01:00:37.650
on those video clips where you really
need it because they're very noisy,

01:00:37.650 --> 01:00:39.890
it doesn't work very well because
it's so noisy you can't do it enough.

01:00:39.950 --> 01:00:40.550
It doesn't mess it up.

01:00:40.580 --> 01:00:42.370
It's frustrating.

01:00:42.370 --> 01:00:46.400
There's this narrow range of stuff
that's bad enough to need it,

01:00:46.400 --> 01:00:48.460
but not so bad that it actually works.

01:00:50.240 --> 01:00:51.740
I don't know the
solution to that problem.

01:00:51.740 --> 01:00:52.620
It's just the way it is.

01:00:53.240 --> 01:00:57.420
Cleaner's version of this filter is
better than a lot of the other ones

01:00:57.420 --> 01:01:01.630
because it specifies both the amount
and also the smoothness values.

01:01:01.630 --> 01:01:03.520
It lets you kind of have
a transition gradient.

01:01:03.520 --> 01:01:04.960
It makes it not quite so obvious.

01:01:04.960 --> 01:01:06.330
Useful feature.

01:01:06.340 --> 01:01:07.580
Okay.

01:01:07.580 --> 01:01:09.480
And another thing you
do in inverse telecine,

01:01:09.480 --> 01:01:12.460
you definitely want to make sure
when you're doing that in Cleaner,

01:01:12.460 --> 01:01:15.500
the output frame rate
is going to be 23.976.

01:01:15.990 --> 01:01:18.600
Cleaner and most other tools
don't support temporary sampling.

01:01:18.600 --> 01:01:23.070
So even though the source is 24,
it got slowed down by 0.1% as

01:01:23.070 --> 01:01:28.300
part of the telecine process
to match the 30 to 29.97 ratio.

01:01:28.300 --> 01:01:32.040
So you have to do 23.976 and not 24.

01:01:32.040 --> 01:01:35.800
If you do 24, you actually wind up with a
repeated frame every few minutes.

01:01:35.800 --> 01:01:40.750
Not normally a big deal, but you know,
might as well avoid it.

01:01:41.180 --> 01:01:43.690
So,
and that's how you would preprocess this.

01:01:43.830 --> 01:01:45.480
Oh, and I turned on the audio.

01:01:45.480 --> 01:01:50.760
I normalized to a... And Cleaner
doesn't measure in dB.

01:01:50.920 --> 01:01:53.380
Cleaner measures it in...

01:01:56.400 --> 01:01:57.320
This is a slider.

01:01:57.320 --> 01:02:01.760
It's about 90% about
the same as minus 3 dB.

01:02:01.790 --> 01:02:03.100
So that's how you do the preprocessing.

01:02:03.170 --> 01:02:05.030
And I completely ignored the
encoder settings for all that.

01:02:05.070 --> 01:02:08.740
So to get into the codex up,
that was just the filter settings.

01:02:10.440 --> 01:02:13.460
Cleaner is a very efficient workflow.

01:02:13.460 --> 01:02:17.300
Cleaner 6 is for getting
preprocessing down.

01:02:17.300 --> 01:02:20.800
A really hard project is after effects.

01:02:20.800 --> 01:02:24.640
If you want to spend 10 times
as long to make it 10% better,

01:02:24.640 --> 01:02:26.600
after effects is your tool of choice.

01:02:26.600 --> 01:02:29.370
But for most stuff,
if you can do it in Cleaner,

01:02:29.370 --> 01:02:31.500
it's nice to get it done in Cleaner.

01:02:31.910 --> 01:02:32.790
Yeah?

01:02:32.820 --> 01:02:37.120
Actually, in that same concept,
or same thought, what's your opinion of

01:02:37.120 --> 01:02:40.620
Apple's new compressor,
and how does it compare to cleaner?

01:02:40.730 --> 01:02:44.660
Apple's new compressor, let's look at it,
let's do a compressor walkthrough.

01:02:44.660 --> 01:02:45.990
Okay, that's a good one.

01:02:46.040 --> 01:02:46.510
I'll show you.

01:02:46.620 --> 01:02:48.390
Shall we do,
let's do the same clip in compressor,

01:02:48.490 --> 01:02:49.960
and you can

01:02:50.930 --> 01:02:51.280
I love this.

01:02:51.280 --> 01:02:54.490
So I've only had compressor
now for about 48 hours.

01:02:54.490 --> 01:02:56.490
I had the flu for some of those hours.

01:02:56.490 --> 01:02:59.090
So if I, we'll be learning this together.

01:03:00.670 --> 01:03:01.810
Compressor.

01:03:01.950 --> 01:03:03.940
So Compressor is bundled
with Final Cut 4,

01:03:04.030 --> 01:03:05.480
but it is a usable standalone app.

01:03:05.480 --> 01:03:07.530
You can either export to
Compressor straight from Final Cut,

01:03:07.630 --> 01:03:09.220
which is a very nice integration.

01:03:09.220 --> 01:03:12.300
You can also just launch it as its
own app and do it up like that,

01:03:12.310 --> 01:03:13.340
which is kind of cool.

01:03:13.390 --> 01:03:19.240
So its workflow is-- I mean,
I think it's kind of reminiscent

01:03:19.240 --> 01:03:21.790
of a cleaner in the good ways,
which is cool.

01:03:21.930 --> 01:03:25.020
So it gives you a little plus
button here to grab a source file.

01:03:25.080 --> 01:03:28.950
So it was a Baker Boys--

01:03:31.300 --> 01:03:33.540
So, and do that.

01:03:33.540 --> 01:03:36.290
We'll pick a preview.

01:03:36.410 --> 01:03:39.680
We're going to do,
it ships with no QuickTime presets.

01:03:39.680 --> 01:03:42.330
It can do QuickTime export,
but its presets are

01:03:42.330 --> 01:03:43.970
either MPEG-2 or MPEG-4.

01:03:44.700 --> 01:03:51.800
[Transcript missing]

01:03:52.750 --> 01:03:54.280
A couple of neat things about it.

01:03:54.420 --> 01:03:55.660
So I was saying this here.

01:03:55.800 --> 01:03:58.380
You have this kind of cleaner-like
before and after slider,

01:03:58.380 --> 01:03:59.240
which is kind of cool.

01:03:59.240 --> 01:04:01.570
You've got this neat
integrated crop thing here,

01:04:01.570 --> 01:04:03.720
so I can just kind of
grab these crop edges.

01:04:03.720 --> 01:04:08.340
And it's actually in a live update
telling me how my current settings are

01:04:08.340 --> 01:04:10.300
going to affect the output compression.

01:04:10.300 --> 01:04:12.900
Which I haven't really set up yet,
but I mean, it's just so cool.

01:04:12.900 --> 01:04:16.540
This program really takes advantage
of the power available on a modern G4,

01:04:16.540 --> 01:04:18.910
Mac OS Temper,
multi-threading and all that.

01:04:19.080 --> 01:04:21.920
And it's really, you know,
those live update features

01:04:21.920 --> 01:04:23.650
are just like really awesome.

01:04:23.660 --> 01:04:26.230
I mean, compared to having to like, okay,
change your settings, hit the update key,

01:04:26.230 --> 01:04:27.480
change settings, hit the update key.

01:04:27.480 --> 01:04:30.320
So the rapid turnaround in terms of
developing things is really kind of nice.

01:04:30.320 --> 01:04:34.130
So, okay.

01:04:39.260 --> 01:04:40.620
And we set some settings here.

01:04:40.620 --> 01:04:43.540
It's pretty light in terms of filters.

01:04:43.540 --> 01:04:46.180
For the most part, it's okay.

01:04:46.180 --> 01:04:50.270
One neat feature is you can actually
change the order the filters go in.

01:04:50.280 --> 01:04:52.320
So I can drag this and drag
this up here in this order.

01:04:52.320 --> 01:04:53.650
So I didn't do anything first.

01:04:53.700 --> 01:04:55.240
This is a cool thing.

01:04:55.240 --> 01:04:58.160
The mode you want is actually sharp.

01:04:58.270 --> 01:05:00.090
Sharp means adaptive de-interlace.

01:05:00.100 --> 01:05:01.200
I don't know why it's called sharp.

01:05:01.390 --> 01:05:01.950
That's what it is.

01:05:02.000 --> 01:05:03.240
That's the one you want to use.

01:05:04.480 --> 01:05:08.670
A great tragedy of Final Cut is
that it doesn't really have good

01:05:08.670 --> 01:05:10.140
inverse telecine functionalities.

01:05:10.140 --> 01:05:12.750
There is this thing called Cinema Tools,
which is now bundled with it.

01:05:12.820 --> 01:05:14.140
I'll show you that in just a second.

01:05:14.140 --> 01:05:18.620
Which is awesome if you have
the right kind of source.

01:05:18.620 --> 01:05:20.850
Which is a source where you
actually know what the cadence is.

01:05:20.920 --> 01:05:22.100
You know where the 3-2 pattern lies.

01:05:29.800 --> 01:05:33.240
What you would normally do in
Final Cut is you go through here

01:05:33.240 --> 01:05:36.130
and what some of the tools you
can do is you can reverse the

01:05:36.130 --> 01:05:39.000
telecine feature and you can go,
okay, I want to make a thing.

01:05:39.000 --> 01:05:42.420
It actually will conform it out to
24.0 if you want to and all this,

01:05:42.600 --> 01:05:44.180
but unfortunately you
actually have to know.

01:05:44.180 --> 01:05:46.970
Either you get like a telecine
log telling you what the field

01:05:47.040 --> 01:05:48.820
order is or you have to like guess.

01:05:48.820 --> 01:05:51.850
So basically your only option here is,
okay, well,

01:05:51.850 --> 01:05:56.400
I've got a total of 10 combinations of A,
B, B, B, C, C, C, style.

01:05:56.400 --> 01:05:57.830
I'll just try all 10
and see what happens.

01:05:58.160 --> 01:06:01.160
If your first frames of
video have content to them,

01:06:01.160 --> 01:06:03.820
you can just single
frame through and say,

01:06:03.820 --> 01:06:05.890
okay, well, this is A, A, A, C, D,
that pattern.

01:06:05.980 --> 01:06:09.290
Unfortunately, like most video out there,
this particular video,

01:06:09.290 --> 01:06:12.330
the first five seconds are identical,
so I can't see any emotion,

01:06:12.330 --> 01:06:13.590
so I can't actually detect it.

01:06:13.700 --> 01:06:16.170
So it's kind of a pain.

01:06:16.180 --> 01:06:18.170
So this particular project is kind
of annoying to the compressor.

01:06:18.210 --> 01:06:21.940
I can only encode it as video because
I can't use inverse telecine with

01:06:22.040 --> 01:06:24.040
compressor in this environment.

01:06:24.060 --> 01:06:25.520
So I don't know.

01:06:25.520 --> 01:06:28.320
I've sent a... I talked
to the Final Cut Pro team

01:06:28.330 --> 01:06:29.100
a little bit about this.

01:06:29.180 --> 01:06:31.260
And for their market, it makes sense.

01:06:31.310 --> 01:06:33.400
You know,
they expect if you're doing 24p,

01:06:33.400 --> 01:06:38.180
you're either coming with a telecine
log or you have actual 24p source.

01:06:38.280 --> 01:06:40.880
So they're not expecting you to take 24p,
produce content that's been done

01:06:40.880 --> 01:06:42.040
through analog and captured.

01:06:42.040 --> 01:06:44.280
But I get a lot of that stuff,
unfortunately.

01:06:44.280 --> 01:06:45.130
So it doesn't work out.

01:06:45.140 --> 01:06:46.000
It's kind of a pain for me.

01:06:46.190 --> 01:06:49.140
Other kind of cool things.

01:06:49.140 --> 01:06:53.090
It's got this totally
awesome noise removal filter,

01:06:53.090 --> 01:06:55.060
which I was going to do.

01:06:55.060 --> 01:06:57.120
Well, I have a problem.

01:06:57.400 --> 01:06:58.420
I was a little jigged for that one.

01:06:58.700 --> 01:06:58.900
Okay.

01:06:58.900 --> 01:07:00.520
Oops.

01:07:00.520 --> 01:07:01.060
Where did I put it?

01:07:01.100 --> 01:07:01.580
I just wrote it all.

01:07:01.580 --> 01:07:03.300
This is a great thing.

01:07:03.300 --> 01:07:04.110
It's played all channels.

01:07:04.160 --> 01:07:04.880
It's a chroma channel.

01:07:04.880 --> 01:07:05.950
This is great for VHS source.

01:07:05.960 --> 01:07:07.040
I'll show you a sample
of this in a second.

01:07:07.040 --> 01:07:09.580
VHS source is much noisier
in chroma than it is in luma.

01:07:09.580 --> 01:07:13.220
So you can apply this noise reduction
filter to just the chroma channels.

01:07:13.220 --> 01:07:14.920
It'll make them all blurry,
but our eyes aren't

01:07:14.920 --> 01:07:15.920
very attuned to color.

01:07:15.920 --> 01:07:17.920
So it makes the chroma channels
look way better without actually

01:07:18.010 --> 01:07:19.220
making the video look that dull.

01:07:19.220 --> 01:07:20.720
That's just the best thing ever.

01:07:23.010 --> 01:07:24.880
Well, that may be an exaggeration,
but I've been asking for

01:07:24.880 --> 01:07:26.550
that feature forever,
and these first guys are like,

01:07:26.630 --> 01:07:27.180
come up to plate.

01:07:27.180 --> 01:07:29.520
So when I request a feature for
five years and someone does it,

01:07:29.620 --> 01:07:30.740
I've got to give them props.

01:07:30.740 --> 01:07:32.470
Any things?

01:07:32.470 --> 01:07:35.830
It's got the actual, like, the whole,
like, three-point color wheel of

01:07:35.900 --> 01:07:37.160
Final Cut is all in here.

01:07:37.160 --> 01:07:38.700
It's just kind of a weird UI for it.

01:07:38.700 --> 01:07:41.480
You can actually do highlights,
mid-tones, and shadows,

01:07:41.480 --> 01:07:43.410
and change your things, and all this.

01:07:43.440 --> 01:07:45.970
And these are all live
in terms of preview,

01:07:46.070 --> 01:07:47.110
so I can...

01:07:47.620 --> 01:07:52.840
If I'm doing this right,
I should be able to just like, you know,

01:07:52.940 --> 01:07:55.520
as I drag preview for,
and it's actually showing it

01:07:55.520 --> 01:07:57.880
actually as it is compressed,
not even, you know,

01:07:57.880 --> 01:08:01.050
just the preview thing like Cleaner does,
but it actually does a good job of

01:08:01.060 --> 01:08:03.840
guessing what the actual compressed
output is going to look like.

01:08:04.720 --> 01:08:08.910
Cleaner will do previews,
but it doesn't do the data rate right.

01:08:09.130 --> 01:08:11.380
It kind of,
it compresses it as if the current

01:08:11.380 --> 01:08:14.800
frame is going to be a key frame,
so you wind up getting about only

01:08:14.800 --> 01:08:16.520
a tenth as many bits per frame.

01:08:16.520 --> 01:08:18.910
It just winds up not
being very good proof.

01:08:18.920 --> 01:08:22.600
Another thing you can do is you can,
a couple different modes here.

01:08:22.610 --> 01:08:26.600
Okay, so, encoder, yeah,
gamma correction.

01:08:26.600 --> 01:08:27.730
You can also do letterbox.

01:08:27.730 --> 01:08:30.260
You can crop out the bad stuff,
and you're doing it to DVD.

01:08:30.260 --> 01:08:31.880
You can actually add your
letterboxing back in.

01:08:31.880 --> 01:08:34.520
You'd use that to basically
mat out any kind of,

01:08:34.720 --> 01:08:37.530
you know, noise in the blanking areas,
which is, you know,

01:08:37.570 --> 01:08:41.670
a little tiny feature there,
but really handy, in my opinion.

01:08:41.900 --> 01:09:02.000
[Transcript missing]

01:09:02.610 --> 01:09:03.590
and others.

01:09:03.600 --> 01:09:04.510
So, anyway.

01:09:04.600 --> 01:09:06.440
And, first of all,
you can like script it and you can have,

01:09:06.440 --> 01:09:08.550
send an Apple script to an output folder,
all this kind of stuff.

01:09:08.600 --> 01:09:10.360
It's got a really neat infrastructure.

01:09:10.360 --> 01:09:14.930
Unfortunately, it only does QuickTime and
MPEG-2 and MPEG-4 today,

01:09:14.930 --> 01:09:17.960
so it's, you know, I'm, it's,
I don't see myself doing a lot

01:09:17.960 --> 01:09:21.310
of encoding with it because,
you know, there are important features,

01:09:21.310 --> 01:09:23.600
like you can't do two pass
encoding with QuickTime or MPEG-4,

01:09:23.800 --> 01:09:26.000
which are pretty critical for
quality there and that kind of stuff.

01:09:26.000 --> 01:09:29.750
So, I mean, I think it's a very exciting
1.0 and I really look forward

01:09:29.750 --> 01:09:32.460
to seeing what Apple can do,
you know, to incorporate other

01:09:32.520 --> 01:09:34.020
technologies into QuickTime.

01:09:34.020 --> 01:09:37.320
Like, a better MPEG-4 codec is something
I'm certainly looking forward

01:09:37.320 --> 01:09:40.580
to and hopefully an ABC codec is
going to be a really awesome tool.

01:09:40.640 --> 01:09:42.980
It's designed for nice
productivity at the preview thing,

01:09:42.980 --> 01:09:43.640
works well.

01:09:43.640 --> 01:09:46.040
You can do batches,
you can go back and hit history.

01:09:46.040 --> 01:09:48.250
Will tell you what kind of batches
you've done in the past and you can find

01:09:48.250 --> 01:09:49.660
your files and all this kind of stuff.

01:09:49.660 --> 01:09:51.990
I mean, they really sweat us
some details on this.

01:09:54.080 --> 01:09:56.350
It is not Apple scriptable.

01:09:56.350 --> 01:09:56.680
I know.

01:09:56.680 --> 01:09:59.990
I talked to Sal.

01:10:00.030 --> 01:10:00.920
Maybe soon.

01:10:01.090 --> 01:10:01.920
Keep telling him for it.

01:10:01.920 --> 01:10:03.420
I mean, everything should be
Apple scriptable all the way,

01:10:03.420 --> 01:10:03.860
all the time.

01:10:03.930 --> 01:10:04.140
I know.

01:10:04.170 --> 01:10:05.160
And this is not one of them.

01:10:05.160 --> 01:10:06.820
None of Final Cut 4 is Apple scriptable.

01:10:06.820 --> 01:10:09.970
I mean, you can fake it with
that whole UI scripting,

01:10:09.970 --> 01:10:13.300
script the buttons through
the accessibility thing.

01:10:13.300 --> 01:10:16.400
But you've got more time than I do,
if you do.

01:10:16.530 --> 01:10:16.770
But yeah.

01:10:16.770 --> 01:10:17.650
So anyways.

01:10:17.770 --> 01:10:19.680
This isn't an compressor demo.

01:10:19.680 --> 01:10:21.020
So this is preprocessing.

01:10:21.070 --> 01:10:23.500
Its preprocessing is totally awesome,
except it doesn't have an

01:10:23.500 --> 01:10:24.600
audio normalization filter.

01:10:24.850 --> 01:10:26.250
It doesn't have inverse telecine.

01:10:26.290 --> 01:10:29.060
And if it had those,
that would be all the better yet.

01:10:29.120 --> 01:10:30.850
But it got lots of really hard
things when all this is done.

01:10:30.850 --> 01:10:31.640
So that makes me happy, too.

01:10:31.640 --> 01:10:34.990
Let me show you that thing
I mentioned before about the

01:10:35.040 --> 01:10:37.390
temporal noise reduction filter.

01:10:37.410 --> 01:10:46.860
I mentioned VHS ugly.

01:10:47.960 --> 01:10:50.740
I think we'll agree this
is an Apple named file.

01:10:50.810 --> 01:10:54.340
So this is my-- you see
all the colors there?

01:10:54.340 --> 01:10:56.090
No, OK.

01:10:57.980 --> 01:10:59.160
Uh, yeah, you know, it's okay.

01:10:59.160 --> 01:11:00.100
So does that look bad?

01:11:00.100 --> 01:11:01.300
Can you believe me there?

01:11:01.300 --> 01:11:02.860
So this is typical of VHS.

01:11:02.960 --> 01:11:05.000
You get all this kind of tearing
at the bottom of the area there.

01:11:05.000 --> 01:11:06.650
It's hard to encode and
it looks stupid too,

01:11:06.650 --> 01:11:07.760
so you want to take it out.

01:11:07.780 --> 01:11:11.540
Um, and you got stuff and the colors
are bad and the bricks aren't

01:11:11.540 --> 01:11:13.320
really green and whatever.

01:11:14.090 --> 01:11:17.450
When I was working on my book,
I called on my editor and said, hey,

01:11:17.450 --> 01:11:19.330
do you have any really
bad source I can capture?

01:11:19.360 --> 01:11:20.280
And he's like, yes.

01:11:20.280 --> 01:11:24.020
So this is like a third generation
LP mode dub of something.

01:11:24.020 --> 01:11:27.110
I actually got it and I can't,
I've got a professional VHS deck

01:11:27.210 --> 01:11:30.430
as part of my editing facility
and I can't even play LP tapes.

01:11:30.560 --> 01:11:33.970
I had to like go like haul out my old
like consumer deck from my upstairs,

01:11:33.970 --> 01:11:35.440
you know, media closet.

01:11:35.440 --> 01:11:38.060
Like, which I hadn't even played a
VHS tape in years and I had to like,

01:11:38.060 --> 01:11:39.550
I didn't even capture this video.

01:11:39.560 --> 01:11:41.570
So this is the worst
video I've ever seen.

01:11:41.580 --> 01:11:43.860
Which is what I asked for,
so I can't complain.

01:11:43.880 --> 01:11:46.380
Really, I was like, wow, that's, yeah,
yeah, you took me a little later,

01:11:46.380 --> 01:11:46.700
didn't you?

01:11:46.700 --> 01:11:49.700
So, um, anyway, let me find a good,
so do you see any,

01:11:49.820 --> 01:11:53.210
do you see how she's got some color
in her black shirt there at all?

01:11:53.210 --> 01:11:54.920
Okay, there we go.

01:11:54.920 --> 01:11:55.920
We'll make this happen.

01:11:55.920 --> 01:11:59.180
Okay, so we're going to add a preset.

01:11:59.180 --> 01:12:02.770
Just so it looks pretty obvious,
we'll do a MPEG-2 high

01:12:02.770 --> 01:12:05.240
quality encode in 60 minutes.

01:12:05.240 --> 01:12:07.780
Okay.

01:12:07.780 --> 01:12:10.260
That's why it's cool.

01:12:22.420 --> 01:12:28.890
So filters, noise removal.

01:12:28.980 --> 01:12:29.360
Well, there we go.

01:12:29.360 --> 01:12:30.300
You see the color right there?

01:12:30.300 --> 01:12:30.640
That's good.

01:12:30.640 --> 01:12:34.290
So I can do a noise removal,
and I could do a really intense

01:12:34.350 --> 01:12:37.620
thing that's kind of blurry
like this and like that.

01:12:37.700 --> 01:12:40.680
But I can also do just
purely chroma channels.

01:12:44.790 --> 01:12:47.330
So you can see it removes all that
chroma cast and makes the color

01:12:47.330 --> 01:12:49.340
a little more accurate there.

01:12:49.340 --> 01:12:51.020
You can see nothing, can you?

01:12:52.700 --> 01:12:53.600
Okay, sorry.

01:12:53.600 --> 01:12:57.930
The color precision work on the
trade show is always a battle.

01:12:57.940 --> 01:13:03.640
Okay, so yeah, I love that filter there.

01:13:03.690 --> 01:13:04.530
So I'm so happy to see it.

01:13:04.540 --> 01:13:07.680
I should talk about that
letterboxing filter,

01:13:07.760 --> 01:13:09.830
because I was talking about it before,
but I can do some good stuff with it.

01:13:10.360 --> 01:13:12.740
Scale, center.

01:13:12.740 --> 01:13:17.600
Center, I don't know.

01:13:17.600 --> 01:13:21.910
Map, there we go.

01:13:32.500 --> 01:14:41.500
[Transcript missing]

01:14:42.050 --> 01:14:44.570
which runs fine on virtual PC,
by the way, if I can bring it back

01:14:44.570 --> 01:14:45.500
into the Mac world.

01:14:45.720 --> 01:14:47.870
Surprisingly swift,
you can turn off the preview mode.

01:14:47.880 --> 01:14:49.060
Okay.

01:14:49.530 --> 01:14:50.910
Good.

01:14:50.910 --> 01:14:52.070
So how are we doing on time here?

01:14:52.080 --> 01:14:54.160
All right.

01:14:56.790 --> 01:14:57.540
Sounds good.

01:14:57.670 --> 01:14:59.360
So what else do people still want to see?

01:14:59.360 --> 01:15:00.160
What do you want to see still?

01:15:00.180 --> 01:15:01.670
What's awesome you haven't seen yet?

01:15:01.750 --> 01:15:04.820
Who's got a problem I haven't
solved for them yet?

01:15:05.980 --> 01:15:10.310
I'm not going to be the hard ass.

01:15:10.370 --> 01:15:10.600
I'm sorry.

01:15:10.600 --> 01:15:11.280
I'm overcompensating.

01:15:13.540 --> 01:15:15.100
Let's see some Squeeze.

01:15:15.240 --> 01:15:15.780
Let's see some Squeeze.

01:15:15.930 --> 01:15:19.000
Squeeze has got a pretty
slick preprocessing UI.

01:15:19.000 --> 01:15:21.480
Its preview isn't that great,
but if you know what you want to do,

01:15:21.480 --> 01:15:24.560
it does the job quite simply.

01:15:24.560 --> 01:15:28.940
But the problem is it's hard to tell
if it's doing the right thing or not.

01:15:35.220 --> 01:15:38.750
So here I'll just do the same
darn video over and over again,

01:15:39.100 --> 01:15:40.920
because such is my life.

01:15:43.240 --> 01:15:45.880
Every now and then my wife will tell me,
I cannot hear that trailer coming

01:15:46.090 --> 01:15:47.400
from the basement ever again.

01:15:47.400 --> 01:15:48.300
You must get a new clip.

01:15:48.300 --> 01:15:49.980
That's when I get new samples.

01:15:49.980 --> 01:15:53.640
I was working with this Smash Mouth
music video for Why Can't We Be Friends.

01:15:53.640 --> 01:15:55.240
I used it for like two years.

01:15:55.320 --> 01:15:56.990
That's why I said, you can't.

01:15:57.440 --> 01:15:59.010
Either the trailer goes or I do.

01:15:59.010 --> 01:16:02.610
I thought about it for a while,
but it seemed that...

01:16:02.910 --> 01:16:03.300
Trailer went.

01:16:03.530 --> 01:16:07.980
Okay, so Squeeze has just
one processing dialog.

01:16:07.980 --> 01:16:08.750
All this stuff goes on.

01:16:08.780 --> 01:16:12.160
It has inverse telecine.

01:16:12.160 --> 01:16:16.020
Like Cleaner, it requires you to specify
what your field order is,

01:16:16.020 --> 01:16:19.880
which I always think is a lame of a
tool to expect people to know what

01:16:19.880 --> 01:16:21.020
the field order of your source is.

01:16:21.020 --> 01:16:22.190
This kind of thing is in the file.

01:16:22.190 --> 01:16:23.140
QuickTime has a tag for it.

01:16:23.230 --> 01:16:24.540
Don't ask the user that question.

01:16:24.540 --> 01:16:25.780
You can figure it out on your own.

01:16:27.750 --> 01:16:29.720
Also, don't call it field dominance,
because field dominance

01:16:29.720 --> 01:16:30.480
is something else.

01:16:30.480 --> 01:16:31.500
It's field order.

01:16:31.500 --> 01:16:33.810
But anyways, in this case,
it actually is a lower

01:16:33.810 --> 01:16:35.380
field dominance source file.

01:16:35.380 --> 01:16:36.420
I just happen to know.

01:16:36.420 --> 01:16:38.880
It's got a little noise reduction thing,
which is fine.

01:16:38.880 --> 01:16:41.560
It's got this preview module
that's kind of hard to work with.

01:16:41.560 --> 01:16:42.960
This is a high-resolution source file.

01:16:42.960 --> 01:16:47.910
I've actually been using Squeeze for...

01:16:49.400 --> 01:16:51.390
And it's kind of hard to
find the crop dialog too.

01:16:51.630 --> 01:16:53.080
And you can't really do
the aspect ratio thing.

01:16:53.080 --> 01:16:55.850
So I kind of frustrated because
I know I've got so many more

01:16:55.930 --> 01:16:58.280
pixels here that I can look at,
so it's kind of hard to know if

01:16:58.280 --> 01:16:59.960
you actually got it exactly right.

01:16:59.970 --> 01:17:02.750
And the finger thing to
grab is kind of hard to get.

01:17:02.760 --> 01:17:05.580
But it's little things like that.

01:17:05.590 --> 01:17:07.260
But it does the job.

01:17:07.280 --> 01:17:09.900
But it's a little-- there we go.

01:17:09.900 --> 01:17:11.790
Something like that.

01:17:11.790 --> 01:17:12.950
But because I'm only at
like a 1/3 resolution,

01:17:12.950 --> 01:17:12.950
I can't really tell if
I really got it all.

01:17:13.100 --> 01:17:54.600
[Transcript missing]

01:17:55.430 --> 01:17:57.120
Yeah, so that's pretty much
it for preprocessing.

01:17:57.120 --> 01:18:00.770
It's kind of weird because you specify
how it's processed here and then

01:18:00.770 --> 01:18:03.000
when you're actually in your setting,
it's where you define what

01:18:03.000 --> 01:18:04.340
your output frame size is.

01:18:04.340 --> 01:18:07.160
It's got one kind of cool thing it does,
which is that it will,

01:18:07.160 --> 01:18:11.280
if you type in a weird aspect ratio,
but you say like I want 640 by 480

01:18:11.280 --> 01:18:13.810
but I copied some different ratio,
it'll actually add

01:18:14.150 --> 01:18:16.190
letterboxing to make it right.

01:18:16.200 --> 01:18:19.530
I don't want to turn that
feature off because I actually,

01:18:19.530 --> 01:18:22.260
you know, like I said,
if I get it off by a couple percent,

01:18:22.260 --> 01:18:25.540
I'm not worried about it and I don't want
it to add like a three pixel black line

01:18:25.540 --> 01:18:27.540
at the top and bottom of my video because
it's going to make it hard to compress.

01:18:27.540 --> 01:18:31.190
So I'm almost always going to turn
this off and just do the math and

01:18:31.190 --> 01:18:32.250
make sure that things match up right.

01:18:32.310 --> 01:18:36.560
So, you know, so 640 by 52 like before.

01:18:36.560 --> 01:18:39.030
So there you go.

01:18:42.500 --> 01:18:47.660
Unlike Cleaner,
where you can customize the filter

01:18:47.660 --> 01:18:51.840
settings on a per output basis,
on a per input basis,

01:18:51.840 --> 01:18:56.780
which is better in most cases when you're
doing the exact same thing everywhere,

01:18:56.780 --> 01:18:59.250
but it's kind of a pain in the
clear to have it constantly be

01:18:59.250 --> 01:19:02.430
replicating the same preprocessing
settings over like five settings,

01:19:02.430 --> 01:19:04.650
and if you get one of them wrong,
you have to go and fix

01:19:04.710 --> 01:19:05.820
it five more times.

01:19:05.840 --> 01:19:08.210
But when you actually want
to customize it for each one,

01:19:08.310 --> 01:19:10.600
it's a little bit handier to
have that kind of control.

01:19:10.630 --> 01:19:12.420
So, okay, that's Squeeze for you.

01:19:12.500 --> 01:19:13.530
Thank you.