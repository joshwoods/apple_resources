---
Title:  Apple Solutions in the Enterprise
Year:   2003
Web:    https://nonstrict.eu/wwdcindex/wwdc2003/600/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Thank you, and I want to welcome you to the Enterprise IT track of Apple's 2003 Worldwide Developer Conference. Today, what we'd like to do is review what Apple, our customers, and you, our developers, have been doing with Apple and the Enterprise over the last 12 months. We also have a special guest, Tom Yaeger from InfraWorld, who is going to give us his perspective on Apple and the Enterprise. And finally, we're going to get a sneak preview of Apple OS X Panther for servers. So, let's get right into it.

A little background first. IT technology decisions are made today in a very difficult environment, and any of you involved in IT, I'm sure, realize this. The IT managers are being asked to do more with less. Licensing costs seem to keep rising. Maintenance costs seem to keep rising. The only thing that doesn't seem to rise very much is the economy these days. And in this challenging environment, one of the key decisions being faced by IT managers is the following dilemma.

Everyone would like to have the flexibility, the low cost, the freedom to choose vendors, the freedom to choose the right tool for the job that you get by basing your environment on open standards, multi-vendor, and heterogeneous solutions. However, this comes with a cost, because some assembly is required.

Putting together things in your own shop takes time, takes money, and so it's incredibly tempting for people to go with a single vendor solution, where that single vendor will integrate things, make it reliable, hopefully, and the downside of that is that you lose flexibility, and you lose some potential cost savings, and these days cost savings are pantomount.

Now, over the last five or so years, open source-based solutions are increasingly seen as an alternative to the status quo of just writing your check to your vendor every year. Now, open source, by definition, drives you to an environment with open standards, multi-vendor, and heterogeneity. Open source means that you're going to spend some of your time putting things together, making sure that they're managed properly, installing them. You're dealing, by definition, with a heterogeneous system.

The real challenge here is to get those benefits of open source without a huge cost. Now the benefits are, I think, huge. Over the past 20, 30 years, software has been developed in the same way that, you know, a few minor changes that This change is now noticed big time by the IT industry.

Why? Well, number one, cost savings. Or I should say perceived cost savings, because the price tag on open source seems great. And we'll come back to that issue. Number two, by its very nature, by the development process of open source, open source tends to be interoperable. They tend to hew very closely to open standards.

Apple has responded to various cert alerts. We tend to respond extremely quickly to those things because of the open source underpinnings of Mac OS X. Another big benefit is code reuse. And code reuse goes without saying in the open source world. And as you all know, the best code and the most efficient code is the code that you didn't have to write. And in the open source world, the ability to go and grab something from one project and reuse it in another project is key. And then finally, a deep talent pool.

You are leveraging with open source a talent pool of over a million programmers worldwide contributing to various projects. And in fact, there's increasing numbers of people that you can hire in your own IT shops who know and love open source and can manage that Apache server pretty much in their sleep. So it's really a myth that you can't find people to manage these Unix or open source programs.

Now, over the last five years, the same five years that we've been developing Mac OS X, open source has virtually exploded. And up on the screen are just a few of the literally thousands of projects out there. If you go to SourceForge and you do a search on open source projects on SourceForge for Mac OS X, today there are over 1,300 projects there, ranging from huge projects to small projects, but really it's a testament to the activity in this environment.

The price tag looks right for open source, but it can sometimes come with a hidden cost. And the hidden cost is that there is some assembly required. And that means that it's not always delivered with the management tools, with the vendor backing, with the integration out of the box that you would like to have, and so that creates more work for you.

In a perfect world, what you would have is you would have all of the benefits of open source that we just talked about, plus the reliability and support that you get from a major vendor, plus ease of deployment, installation, management, etc., all of the fit and finish things. And if you had all those together, you would achieve the nirvana of lower total cost of ownership.

[Transcript missing]

So this is our strategy. Leverage open source, not just in the product, but outside the box. Let you leverage open source. And what we add is the fit and finish of a commercial product, the management tools, the installation tools, everything, so that your total cost of ownership goes down.

Now this strategy is reflected in our products. It's reflected in our software with Mac OS X, Jaguar going to Panther. It's reflected in our hardware products from laptops to XServe to XServe RAID. And it's reflected in our service offerings. Service offerings we know need to be different for the enterprise. This is an area where we are investing, and will continue to invest in the future. So let's start out by looking at software.

As was mentioned this morning by Steve, Mac OS X is Unix-based. And it's not just any Unix. It is industrial-strength BSD Unix, together with CMU Mach, to provide a highly responsive environment, not just for servers, but also for clients. A key feature, or a key thing to remember here, is that we use exactly the same source code base when we build Mac OS X Server as we do Mac OS X client. It's the same kernel.

This is important because it makes sure we don't have to split our engineering resources. And as we fix bugs or security issues in one product, they get automatically fixed in the other product. And the two leverage each other. And it allows us to move very quickly to add new features to the Unix base of our system.

Now, on top of this, Apple has done something that nobody else has been able to do, even though many people have tried over the years, which is on top of a Unix-based underpinning to add state-of-the-art graphics, frameworks, and user interface support on the client. So graphics, as you heard this morning, state-of-the-art support for OpenGL, for PDF-based graphics, for 2D graphics, frameworks from Cocoa to Carbon to Java frameworks, and then user interface, our killer Aqua user interface. And wait till you get a chance to try-- I love Expose.

It's going to be a godsend on the user interface. Now, on top of these frameworks, Apple integrates in the box useful applications. And we all know and love-- there's a ton of applications in there, including the iLife applications. But what I want to focus on are the end user applications that are important to the enterprise. In fact, they're critical to the enterprise. They're end user applications that mission critical in any enterprise I know of.

First of all, mail. So Apple has a great mail client, just got a whole lot better in Panther. Integrates IMAP support, POP support, can interact with any mail server based on those two standards out there. Starting with Panther, can support SSL. So we're taking the mail app forward, and we'll continue to support that mission-critical app in the Enterprise. Address Book integrates with LDAP, and more and more corporations are moving to base their addresses and employee information on LDAP. Address Book accesses all that information seamlessly.

Safari, I just, I want to spend a little bit more time on Safari because you don't often think about it this way, but the web browser is actually a mission-critical application for the enterprise these days. As applications get deployed to the desktop, whether it be Oracle or PeopleSoft or other applications, the browser is actually often the front end of those applications.

Now, to me, the exciting thing is this. In the past, when we worked with enterprise software developers like Oracle or like PeopleSoft, they would come to us and say, well, this doesn't work quite right on Internet Explorer or on Netscape. And we would sort of look at them and say, well, yeah, we wish that would work better, too. It's a totally different ballgame now with Safari. Safari's based on open-source project HTML. We take that in-house.

We add all the Safari underpinnings around that. That is totally under our control now to make it the best and fastest browser on the Mac. And the conversations now that we have with enterprise software developers like PeopleSoft and Oracle are totally different because when they come to us and say, we'd like to make sure that PeopleSoft works really great with Safari, we say, great, no problem. We're going to fix Safari to work the best it can possibly work with PeopleSoft. And you have PeopleSoft now announcing they're going to qualify on Safari. So the world for enterprise browsers on the Mac just got a whole lot better with Safari.

Java, of course, Apple is recognized for having the best client implementation of Java Standard Edition out there, not just by us, but by others in the industry, including Sun Microsystems. Java is the application language of choice for many places in the enterprise today, not just on the client, but on the server as well.

And last but not least, that key mission-critical client-side application, which is Microsoft Office. And the Mac business unit continues to work, continues to invest in Microsoft Office. That will, you know, it's very interesting because we are the only Unix-based system out there that also runs Microsoft Office. One of the things that this has done for us is that anybody who needs to run Unix for whatever reason, in the past, they would typically have a PC sitting right next to it because they also had to run Microsoft Office. With the Mac, those two systems collapsed. And that's a major place where we're making inroads in the enterprise.

So let's shift gears for a bit to Mac OS X Server Jaguar. Mac OS X Server packages just a ton of services that can run on any server installation in the Enterprise, and has those key services that are important to the Enterprise. I'll just go through a few of those. In the area of security, we run Kerberos. I'm going to go into a lot more detail later on Kerberos, but Kerberos is key to single sign-on. Just leave that there for now. Come back to it.

Directory, of course, almost any enterprise today has a LDAP directory server, either LDAP or Active Directory, which is really kind of a flavor of LDAP. Web services, we have Apache, which is the leading web server on the planet, supporting HTTP and all the modules that you would want to support things like SOAP and XML, RPC, and things like that. Mail, a very nice mail server supporting IMAP, POP, and web mail.

File service, every file service known to man from AFP to SMB with Samba to NFS to FTP. Print service with CUPS print serving. Internet printing protocol, LPR, which Unix people know and love, Apple Talk printing. And finally, last but not least, secure shell login, remote login with SSH. Now, an important issue here is that Apple doesn't just take all of... You know, these are all the things that we're going to talk about in a minute.

These are mostly open source projects. So we have leveraged them into the product, but we don't just take the projects and toss them onto the CD and ship them to you. We actually spend a lot of time integrating them, making sure they perform well, making sure that they're QA'd, making sure that our management tools can manage all these things. So that's the major advantage of getting this from Apple versus just trying to assemble your own out on the web on something like Linux. Next.

Now, to do this, we provide management tools. We provide GUI management tools for remote management of all the services you saw on the last slide. In doing so, we also make sure that we continue to support terminal-based or command line tool management, because there are many people out there that still like to manage things that way. So we don't disable that branch of managing all of these services. You can take your pick, choose whatever works best for you.

We also support SNMP for our products so that the tools from other major management vendors, such as Tivoli, HP with OpenView, or CA, those projects are enabled to manage the SNMP aspects of our products. So we have really complete management solution, and I'll talk a bit after Tom speaks in some of the very exciting directions we're going to be taking there.

Tools for the Enterprise. A complete set of tools for almost every kind of application you'd like to develop. Here we show WebObjects. We include MySQL in the box for database. Java, of course, is on our server. You can have Java from us. You can also get third-party products like JBoss and use them to develop EJB applications. Tomcat for Java server pages, and of course, Apache World Class Web Server.

So, no matter what kind of a developer you are, you're going to find tools, and the session right after this will give some of the Java tools, an overview for some of the Java tools, but we've got J2SC, JBoss is a third-party product, web applications, Safari, JBoss, WebObjects, Apache, Tomcat, scripting, every scripting language known to man, and then some, are on the box.

So, AppleScript, Ruby, Tickle, PHP, Perl, TCSH, so if you like scripting, you'll feel like you've died and gone to heaven. And scripting is really the backbone of many IT shops, so that's a very important thing we're doing for the enterprise, and just making sure all of those scripting languages run seamlessly out of the box.

For open source developers, now traditionally open source is developed with some very vanilla tools. The GNU toolchain. So, GCC, GDB, et cetera. Often these projects are maintained in CVS. What we've done is with Xcode, we're really wrapping around those GNU tools. So, you can develop your open source projects with Xcode and gain all the advantages of an integrated development environment, but still stick to the tools that are tried and true in the open source community, GDB, GCC, et cetera.

Then finally, for commercial developers, which a lot of you are, Cocoa, Carbon, Xcode, and so on. So, you can develop your open source projects with Xcode, and gain all the advantages of an integrated development environment, but still stick to the tools that are tried and true in the open source community, GDB, GCC, et cetera. Then finally, for commercial developers, which a lot of you are, Cocoa, Carbon, Xcode, and so on. Cocoa, Carbon, Xcode, and so on. Cocoa, Carbon, Xcode, as the IDE, Java, WebObjects, MySQL.

So, what you end up with is really a killer developer box. There are people I've talked to who make their living doing consulting, writing applications. They fly around on the plane. They develop Java application in their seat on their tie book. When they get off the plane, they install it on a WebLogic EJB server, and they're off and running. So, killer box for development. Talk a bit about hardware.

We have Xserve and Xserve RAID. Talk a bit about Xserve first. Xserve is an extremely cost-effective one-use server. It's highly optimized for a part of the market that's very close to us, which is the entertainment industry and the biotech industry. In the entertainment industry, pan-amount in that industry is IO throughput. So what you'll find on XServe is a huge focus on ins and outs to the box.

So dual gigabit Ethernet built in, dual port, 800 FireWire built in, optional optical connect to your disk drive, just huge torrents of bits coming in and out of the server. XRAID partners with that. We're able to do that by providing world-class storage, XServe RAID storage, but at a price that really changed the industry. The price per megabyte is under a half penny per megabyte.

So a gigabyte for like $4.30 or something like that. You can get two and a half terabytes for, I think it's $10,999, $10,999. And I don't know what you're going to do with two and a half terabytes. We have customers that are definitely doing it. If you downloaded every song from the iTunes music store, that would be about a terabyte. So there's a good use for it.

All of these servers remotely manageable through remote management tools. So again, Apple putting the fit and finish and the management together with these things so that your total cost of ownership and deployment goes down. Finally, AppleCare. And as I mentioned, there's a special version of AppleCare that is specifically for the servers and aimed at the enterprise, and this is an area of continued investment for Apple.

Let's talk a bit about some of our enterprise partners that have come online over the past 12 months or so. Today, we have some great announcements from partners. Oracle has announced that the next-- 9i was such a hit that they have announced the next version of the Oracle database server is going to be targeted at the Mac. They're going to do a Mac version, including RAC support.

RAC, for those of you who know, is their clustered Oracle server. So this is going to be a killer box, extremely cost effective. Let's see, we also have announcements from BusinessObjects and WebMethods and iAnywhere. Take a look at your packs, and you'll see some very key announcements of support for Safari targeting Mac OS Server with their products.

So we expect continued momentum. If you look over the past 12 months, we've had announcements and progress from all of these partners. I want to just mention one enterprise partner that I think is key, which is Microsoft. And as was announced previously, Microsoft is hard at work in their business unit working on Microsoft Exchange support for the Mac. And this is on track with Exchange support in Entourage, you're going to be able to hookup to an Exchange server, do all of your email, do all of your scheduling, do all of your address book.

So for those enterprises where you absolutely must be on an Exchange server, we will have from Microsoft complete support there. And the Mac business unit there is really excited about it, and so are we, because as you probably know, this is a big request from a lot of our customers. Let's talk about customers.

We sell into several enterprise markets today. Entertainment is a huge one for us. The entertainment industry has need for huge storage, huge bandwidth requirements, as I mentioned. Life Sciences was really a sleeper, but it has really exploded over the last year or so. Couple reasons for this. One is that they can really benefit from the clustering of 1U Mac servers, and there's a lot of clustering activity going on because they have massive databases to search with the human genome, and being able to cluster systems to do that in parallel is just fitting like a glove with biotech.

We do that really well. Another big reason why biotech and life sciences have taken off is because many of those applications were developed as open source projects. So guess what? When OS X came out, those open source projects just gravitated immediately to OS X. The porting of those things was fairly trivial. They all showed up. Life Sciences has taken to Mac OS X, and our products are like a fish to water.

Higher education has always been strong for us. Now, with one-to-one ratios of Macs or PCs to students, these really face all -- the enterprise challenges faced by an IT manager are the same as the ones faced in universities and higher education. So a lot of the products we're talking about are very appropriate to that market. And last but not least, government.

Government's always been fairly strong, and they've been strong for us. It is with Mac OS X being Unix-based, being highly secure, being open source-based, it's just taking off like a rocket. And government, of course, is the ultimate MIS shop, and they are very picky, and we are pleased to be able to sell a great product into that market.

One market that is fairly new for us, and then I'll just delve into a little bit, is financial services. And this is an emerging market for us. It's not been strong in the past, but with our server products and Mac OS X, this has a lot of promise for us. I'll just give you one example, and that's RiskWise.

RiskWise is a company that manages credit risk. And what they do is they have huge databases of your, mine, everybody's credit card transactions, and they attempt to determine from that database what your likelihood is of paying your next monthly statement. Very interesting business. In order to do this, they have to do it in real time. So they have 190 XSERV systems and growing very rapidly.

They have 15 XSERV RAID systems, storing everybody's credit card information. They do over a million transactions processed every day. Five nines availability is an absolute must. And low entry cost and ease of use of using Apple give RiskWise a competitive advantage. And here's what they say. They can do transaction processing for a fraction of the cost of most credit bureaus with an Apple solution. They are pleased as punch with this solution.

And the surprising thing to some people who don't know what we've been doing with Jaguar and Unix, et cetera, is they achieve their five nines uptime. This system just keeps running. It does not go down. If it did, their business would tank. So they placed a big bet on us, and guess what? We've come through with flying colors. Another example I'll delve into is in the life sciences market. This is University of North Carolina, Chapel Hill. And they have a program there in what's called Protonomics.

You've probably heard of genomics where you study the genome, DNA and the human genome. Protonomics takes it one step further. They take a cell and find all of the protein fragments in that cell, and then they match up those protein fragments against the entire 3 billion base pairs in the human genome.

Obviously, that takes a lot of processing power. So what they've set up, they have a 42 XSERV cluster running. They do queries on 30. They do queries on thousands of proteins simultaneously, and the results are delivered in minutes. This is used for both diagnosis as well as for drug discovery. So one of the things that brought them to the platform was the incredibly simple cluster management administration, which lowers their total cost of ownership.

And here's what they say. They wanted plug-and-play solution that was cost-effective in the intermediate computing needs. So it's interesting to see plug-and-play applied to clustered servers. That's the place where XServe and Apple fits well, especially with their new cluster nodes. So another example of very large-scale computing done with the products that we put together.

Now I'd like to introduce Tom Yaeger, our special guest speaker. Now Tom comes with a background of over 25 years in the IT industry. He started out as a programmer, progressed through the ranks, became a CIO, and over the course of that published three books and hundreds of articles, and he ended up going to InfoWorld, where he brought his experience with IT and IT IT.

management, and he maintains a very close tie to the IT world. What he's going to do is give us his perspective on Apple in the enterprise. So Tom, welcome. Tom Yaeger I'll tell you, it was worth sitting on a three-hour flight here from Dallas-Fort Worth just to listen to the keynote this morning. That's always true at Apple conferences, and I love to see how Apple dropkicks the rumor rags consistently every time it throws one of these events. It's a lot of fun.

I started my IT career back in 1979. I was hacking PDP-11's white hat, and I'm fully rehabilitated. And I was also writing business software for the Z80 microcomputer using assembly language. So you Cocoa and Objective-C people don't know the meaning of the word hardcore, as far as I'm concerned.

Now, I spent my career doing that, and in 1982, something happened that changed my life. I received the shipment of a machine called the Model 16. It was made by RadioShack, and it was running a little operating system I'd never seen before called Xenix. Xenix was made by an obscure little company called Microsoft, and it was, at the time of its introduction, the first microprocessor Unix ever. And I immediately fell in love with it. I wanted to do the scripting, I wanted to do the time sharing, I loved the C programming language. So I bought into it completely. And that started my 20-year career. Odyssey with Unix.

Now, in the early 90s, an interesting thing happened. While I was in the interim between Xenix and this development I'm about to talk about, I went through several flavors of Unix and settled on one that was my absolute favorite, which is BSD. If you talk to anybody who is truly in Unix, they will tell you that BSD is the true Unix.

I'll talk about the history of System 5 a little bit, because that happened. But in the early '90s, while I was having this love affair with Unix and with BSD, I saw a machine that just blew me away. And it was a little magnesium cube called the Next, running an operating system called Next Step.

And unfortunately, the market didn't grasp it, and it went away pretty quickly. But it set all kinds of new standards. It had a PostScript user interface. It had an object-oriented programming language. It had BSD, which you know how I feel about that, running on top of Mach, which I also thought was very cool. And I figured, it's a real shame that Next didn't make it, because I wanted all those things together in one machine.

Now, on the System 5 side, there were interesting goings-on as well. AT&T had licensed System 5 to 11 different companies who wound up selling it for the PC. And it started out cheap, and it started out rich. I think it was, I think the SEO distribution was something like 25 floppies.

And then it began to deteriorate. Each of the 11 vendors started creating proprietary versions of it. And they couldn't get together. They didn't really want to get together and make this thing interoperate. So it degenerated to the point where these vendors started going out of business very rapidly. The 11 licensees shrunk to four.

There are now four companies in the commercial Unix space, plus Apple. And none of those four companies are the original 11 licensees of System 5, which gives you a perspective of how quickly and deeply things fell apart. The last bit of our little history lesson is what wiped out microcomputer unix. In 1995, Microsoft introduced Windows NT 4.0. And in 1996, Microsoft introduced some free software called the Windows NT 4 Option Pack.

Microsoft had learned the lesson with Internet Explorer that the best way to get customers is to give wonderful software away. And with the NT4 Option Pack, Microsoft drove right through Unix by giving customers back all the things that the Unix vendors had taken away. So all the enterprise features like guaranteed messaging and transactions and database management and web applications, they were in NT, and you couldn't find them in any Unix. It was a bit of a drag, but I have to give Microsoft credit. They really did a fabulous job on NT4.

Now, consolidation trend was obviously already underway. Unix, the Unix market had consolidated. Most of microcomputers were pulled into Windows operating systems.

[Transcript missing]

We also had a trend of commoditization, and that's an easy one to describe. Commoditization is the practice of a vendor deciding that all they have to do is wait for everybody else to develop technology, then find a way to make it with cheaper plastic, and then sell it back to the market for a dollar less than the other one. And this cycle keeps wrapping around until IT just says, "I'm not going to buy this anymore."

When we got into 2002, 2003, IT said, we're done. I don't see any reason to buy a Pentium 4 desktop when my Pentium 3 is handling my workload. Why should I pay $1,000 more for a dual Xeon rack machine when a dual Pentium 3 goes for $999? It runs cooler and quieter. IT was making decisions based on criteria that had never been present before, and I'll get to those in a minute.

Apple jumped into the market in the early 2000s. I don't think it was on the radar for most people. They were behind the scenes developing Rhapsody and the early versions of OS X. When the PowerBook first hit, it was amazing. When the gigahertz PowerBook, 15-inch titanium PowerBook, hit, it destroyed the market for high-end PC notebooks.

What had, up to that date, been sold as portable workstations, and I carried these things routinely because I write code and I do digital media work and I need that kind of firepower, I immediately hung up all of my PCs, the best of the PC notebooks I had, and replaced them all with one machine that to this day I take everywhere with me.

Apple declared this the year of the notebook, and they carried the technology they had introduced with the 15-inch PowerBook to the 17-inch and to the 12-inch, and they continued to take more and more share away from PC vendors. They also set standards for portable computers that PC vendors never managed to match, which remains true. You look at things like battery life, gigabit Ethernet, wireless networking, which Apple pioneered and Apple still does better than anybody else, a gorgeous display with a 3D accelerator built into it.

When I picked up a PowerBook for the first time, aside from its looks, There are two things that really grabbed me about it. Well, three things. The first one was that it ran BSD, and that just hooked me immediately. The second thing is what Sons James Gosling, the father of Java, told me. He carries a PowerBook.

He does all his programming on a PowerBook now. He loved the alien landing beacon that blinks on and off when the machine is in suspend mode. And when I asked him the single best feature, tell me the one thing that makes you carry this machine everywhere you go, he said, the lid works.

That is no small thing for those of us who have been using Windows for forever. Now, we saw PowerBook redefine its market. We've seen XServe redefine its market with price, with ease of management. And now we see XServe RAID redefining the market for networked storage, not only by bringing prices down, but by maintaining enterprise features, like redundant power supplies, redundant controllers, swappable, removable trays.

It's not an easy ride for Apple, though. And we learned that, InfoWorld learned that, when we started running editorial on Apple's enterprise efforts. We got a lot of letters from readers, we got a lot of letters from PC vendors, a lot of screaming phone calls from PC vendors, who were telling us, I haven't heard this before. I'm not sure I buy it, because I've been watching Apple for 20 years, and what you're telling me about Apple doesn't map with my version of the facts.

The first thing they said is, OS X is not mature. Look how long Windows has been on the market. Look how long Solaris has been on the market. This is a newcomer. I don't trust it. Remember what I said about the next machine? That was back in the early 90s.

And it had these three things in it. It had BSD, which dates back to 1978. It has Mach, which dates back to 1985. And it has the next step APIs and graphical user interfaces that date back to 1988. I don't think you can compare to that combination of underpinnings for maturity.

Hardware is slow. This applied to some of the Macs a long time ago. It certainly doesn't apply to current hardware. And the most concise observation I've ever heard about performance was uttered by Sun's Greg Papadopoulos. He's their CTO and all-around visionary, and probably the third smartest person I've ever met.

And he said, "When you're talking about performance in computers, forget megahertz. It is all about throughput. If you can't get data from the CPU to memory, if you can't get data from memory to storage, it's all over. It really doesn't matter how fast your chip burns cycles. It's going to spend most of its time waiting for I/O." Max are more expensive than PCs? Sure. I mean, most of us remember the 2FX and the Quadra series. And they were just scary. You had to love the thing because you were going to take out a second mortgage to pay for it.

But with the current market, if you compare feature for feature what Mac does with Power Books, what Apple does with its Power Mac systems, which don't get much attention at shows like this, but thank goodness they did the keynote the way they did the keynote today. Power Macs are cool, powerful machines.

Where can you find a Unix workstation anymore? We saw the best example of that technology this morning. It's just going to keep getting better. And on the XServe, once again, if you line up features, if you line up overall power, if you line up IO throughput capability, forget it. PCs can't get there from here.

There aren't enough apps. Yeah, all of us remember walking through CompUSA, and there were 12 aisles of Windows software, and there was one lonely aisle of Mac software. And it was, you know, games for two-thirds of it, and then a little, you know, a little column of productivity applications.

That's not true anymore. I'm not saying that we don't have some distance to come. There is still a gap. There is certainly more software available for Windows PCs. There is certainly more open source software available for Linux. But if you look at the richness of the software available for the BSD operating system, how easy it is to port to OS X, and if you look at just what Apple has done, you can see that there is a gap. And as far as I'm concerned, The pace of new development is just staggering. So when I say there's more to come, I don't think it's going to take long to play that out.

I have some observations from watching the market in general that relate to the state of the market that Apple is playing in. IT in general. It's been hard to figure out what they want. I remember I've got a close friend in marketing at Microsoft. We went out to dinner, and we had a couple glasses of wine, and then we got a bottle of wine, and then we got another bottle of wine. And when we were done and we were in the cab going back to the hotel, he said, "You know that Microsoft would just love to give customers what they want?" And I said, "That's really great. I'm glad that's so."

And then, in utter frustration, he looked at me and said, "So what the hell do customers want?" Because you couldn't nail it down. It was a list this long, and it was a different list for every vertical market, and for every line of business, and every little segment.

But now, thanks to the recession, thanks to IT getting tired of having no innovation, we come down to some very simple set of requirements. I want rapid payback, which doesn't mean I can take IBM Global Services and give these guys with suits and briefcases eight years to bang on enterprise integration. I want solutions that work when I pull them out of the box. And I want payback in six years. And I want payback in six months. And if you can't give it to me, I'm not going to talk to you.

I want minuscule long-term costs of ownership. I don't want to have to maintain a crew of wizards to keep my stuff running. Zero lock-in? Don't tell me I can never leave this platform. Don't tell me that this architecture you built this machine with doesn't run anywhere else. Not acceptable.

Purposeful innovation isn't about bells and whistles. There's lots of cute stuff on Apple machines. I have disagreements with the people at Apple about the blinky lights on the XServe. Apple has been criticized in the past for not putting any lights on its machine. I remember one of their servers that had a completely blank front panel except for one little light for power. And now, of course, I would say they've overcorrected a bit.

Now, the best summary of these requirements came to me from a gentleman named Winston Bumpus. That's the coolest name. And he works at Novell, and he's probably the fourth smartest person I've ever met. And he says, the only reason to buy something is it makes you money, it saves you money, or it's required by the government.

And I thought, thank God. I mean, I can throw away my 30-page summary of IT requirements and just replace it with that. I thought it was sweet, and I really do think it describes reality. Most of you know how well Apple has done to adapt to these simpler and far more demanding requirements. Apple's execution, its ability to take these requirements and turn them into products, has been fabulous.

That's because the execution is based on customer feedback. It's based on the anticipation of customer needs. When the PowerBook came out, didn't you think it was serious overkill for a portable machine? Who on earth wanted to carry gigabit Ethernet around with them on a notebook? And of course, now we actually use it, now that we can get a gigabit Ethernet switch for 80 bucks.

And Apple put in the box very quick deployment. We get an out-of-the-box experience. The notebooks work immediately. XServe walks you through the initial configuration. XServe RAID, when I saw that demo, I just about fell out of my chair. It was so easy to set up, and it was so easy to use, and it was so resilient.

We were walking around the back and pulling out power supplies while it was still running, and yanking drives out of the thing, and shutting segments down from the administrative tools, and it just kept, yeah, whatever. And that's what I want. IT wants solutions that are consistent across the vendor's product line. and no compromises. I don't want machines that make me make choices about what I can do because the technology isn't capable of it, or because the vendor has decided to impose choices on me.

I think that as we watch how these trends are panning out, we see a couple of things that will make sure that Apple stays relevant in the enterprise IT market. And as we watch and as we see Apple's technology march forward, we see that IT managers' confidence in Apple's place in the enterprise is growing very rapidly. This company that had no footprint in the enterprise three years ago, look at where they are now. It's only going to get better.

Right now, for financial stability, for just basic grasp of the market, we talk about Apple as a niche player. We talk about what percentage of the overall computing market it owns. Who cares? Look at its stability and its core niches. It owns graphics. It owns broadcasting. It owns audio and video production. It absolutely owns ad agencies, education.

Nobody is going to ever pry it out of those niches, and they're worth an awful lot. And they're developing online so fast. I mean, they were talking about how many songs had been downloaded in the iTunes music service. It's $0.99 a song. I've heard that service referred to online as "iCrack."

Because once you get your first hit. In the near-term future, I'm talking about enterprise trust for Apple, we see that Apple is building its enterprise presence in increments across its product line. Notebooks, wireless networking, Airport Extreme, kicks butt. It really is flat out the finest access point in the whole world.

I left out workstations, but I shouldn't leave out workstations. That's a very important segment. Scale-out entry servers that you can cluster together, that you can put in very easy failover configurations. Apple has done that. They've nailed it. And with XSERVE RAID, they've put land storage on the map for small to medium businesses, and for large businesses that want to just stack it up and get terabytes and terabytes for what they used to pay for hundreds of megabytes.

And in the long term, the frontier of computing is going to be convergence. We're going to see all of the ways we use technology come together. But the mobile devices in the youth market, the mobile devices that are used for personal communication are going to leak into businesses.

And the best way to summarize Apple's long-term potential is that Apple gets one point. That I think no other vendor gets, and that is that computers don't exist to connect to each other. They exist to connect people to people. And if you can't do that with technology, there is no reason for it to exist.

The people in this room, the 3,000 or so other people who are attending this show, have, I wouldn't call it a responsibility, but... I would say that when you look at OS X, and you look at what Apple put into it, and you look at what Apple invested in their hardware, real innovation.

So much money on R&D, and everybody here knows how good this platform is. We have to go to vendors and say, you have to put your software here. We have to go to the shops we work for and say, we need to get development projects ramped up on this platform.

This thing is going to take off. We really don't want to be sitting at the back of the room when this thing catches fire. So I think the catchphrase leaving this show is going to vendors, going to our bosses and saying, call me when it runs on OS X. So thanks very much for your attention. I'm going to hand things back to Bud.

Thanks a lot, Tom, for your insights and point of view there. Now for some fun stuff. Continuing in the theme here of the idea that what Apple's really doing is leveraging the world of open source, but making it so that the bicycle comes assembled, and you don't have to stay up all night assembling it.

And I'm going to talk about Panther, and how Panther is pushing this even more forward. And I'll start out-- Just mentioning a few things about Panther on the client. Now, a lot of time was spent on that this morning, but hidden in the intricacies there were some interesting things that were just kind of glossed over that are actually really key to deploying Panther on the client in the Enterprise. I'll just mention a few of those. They fall into two major categories. One is open standards networking, and the other is Microsoft interoperability.

Both things are of key importance to the Enterprise. On open standards networking, NIS support in open directory, big deal. NFS file locking, also a big deal. It wasn't there in Jaguar. We have it in Panther. Integrated IPv6. Now, IPv6 sort of hobbled along in Jaguar. It's totally baked in in Panther. And as the world, you know, finally catches up to IPv6, Panther's already there. 802.11x authentication for secure wireless communication built in. Kerberos mail, Kerberos-enabled mail built in. Kerberos-enabled AFP, Kerberos-enabled FPP, SMB, SSH, Kerberos everywhere.

Very important, I'll spend a little bit more time on that on the server side. Long password support, X.509 certificate support. So all of these open standards, all of these enabled, by the way, by us going out and integrating open source projects into Mac OS X, providing the fit and finish, providing the management, making sure it works out of the box.

Now, Microsoft interoperability, actually a little bit more challenging, but even there you can go and pick up open source projects that help you along. Now, Active Directory integration, we have a plug-in that lets you, without changing the Active Directory schema at all, lets a Mac OS client use Active Directory records to be administered. Incredibly important.

Steve mentioned these this morning: Browse SMB servers in the Finder and SMB printing support, both important. And what's called Level 2 Tunneling Protocol/IPsec-based VPN. This is the VPN standard that Microsoft and Cisco have adopted. We support that natively in Panther as well on the client. Now, shifting gears to Mac OS X Server Panther, or for short, Panther Server. This is a sneak preview, and I want to just kind of go through some of the major things that are in here. Now, there's a lot of other things, fit-and-finish things, that you should definitely go. There's an overview session for this.

There's also an in-depth session for Panther Server that'll cover things like, there's all kinds of stuff in there. There's support for jumbo frames and TCP IP. So those of you who know that for gigabit Ethernet, you actually absolutely want jumbo frame support, that's in there. Async IO, anybody doing database IO. Unix traditionally doesn't have Async IO support. Async IO is in Panther. We've done a major revision and passed through the administration documentation. So there's 12 new manuals on administration.

I just mentioned the IPv6 support for VPN on the client. We have the mating service provided, bundled in with Panther Server. So you can have a complete VPN solution with client and server. So all kinds of stuff in there. But what I'd like to do is focus on some of the major pieces that are in there. This is our best server release ever. Over 50 new features. As I mentioned, go to the sessions. You'll get.

Get the full dose of it. So number one, automatic setup. And Tom was mentioning the nice part of what we do being that you take your laptop out of the box and it just sort of works out of the box. That it's very easy when you buy a server or X-ray to kind of go through. We take you through the GUI tools to set those things up very easily.

But what happens if you have a whole rack of these things? Or like one of our customers, I mentioned 190 of them. Well, you don't really want to go and wheel up a head, attach it, go through the GUI conversation and get each one set up individually. So what do we do?

We now have in Panther Server the fastest and easiest way to set up a rack of servers. And it works very simply. It requires an iPod. It doesn't require an iPod, but you can use an iPod. If there's any managers, close your ears. This is a great way to expense an iPod if you have to administer servers.

All you do is you create using a GUI tool a server configuration, create that once, load it onto the iPod, take the iPod, connect it through FireWire to the server, turn on the server out of the box. So a Virgin server, never been turned on before, turn it on, it'll go seek out the iPod, configure all of the services that you need to configure on that server, and you're done configuring.

Now, that'll work fine if you've got a rack like this, you go set each one up, minimal intervention required. What happens when you really do have 190 servers? Well, we do exactly the same thing from an LDAP directory. So you populate the LDAP directory with the server configuration information, and that can actually be keyed to each individual server if they're going to be different. You plug in the server, turn it on, it automatically finds those records in the LDAP directory, configure it, configure it. So it configures itself, and you're up and running. So this is incredibly ease of use brought into the IT world and the server environment. Really slick.

Second big feature, Open Directory 2. Now, Open Directory was in Jaguar, but we have taken that to the next level. And Open Directory 2 in Panther Server includes LDAP directory and Kerberos authentication. It's LDAP v2 or v3, and we've taken it a step further. We put LDAP on top of Berkeley DB so it scales.

thousands of records supported. But that's not enough scaling for us. So we also added the ability to support local replicas for high availability. So if one replica goes down, you can find the other replica. LDAP keeps running. Kerberos also keeps running. And remote replicas, so that you can go and set up a remote replica, and a geographic site can serve up all the same information. So this is actually incredible state-of-the-art scalability for both LDAP and Kerberos. And I'll come back to the importance of those two things in a moment. Actually, right now.

So one of the biggest challenges, actually, I was talking to a CIO who said one of their biggest costs on their help desk was people calling up because they forgot their password. And it's easy to find, the reason for this is that almost every network service ends up requiring its own password. And so you have two choices, really.

Either you can just choose the same password for every service on your network. That's incredibly insecure, by the way, and is frowned upon by any security expert, because if you crack into one service, you've cracked all the passwords. But people do that because there's really no other easy choice. The other thing you can do is have a different, you can force users to have different passwords by enforcing a password policy, so they have to actually choose different passwords.

For every service that they sign on to. Of course, then you've left the user with only one choice, which is to write down all their passwords and put it up on their bulletin board, which you can see as you walk around some of these places. So what everyone is moving to is single sign-on. What is single sign-on? One password provides secure access to all your services, but it's done in a secure way using Kerberos.

The way this works, the Kerberos server authenticates. So the Kerberos server authenticates the user on login. They're handed out a token, actually a ticket-granting token, and they can use that key to log in and authenticate themselves to any other service on the network. So Apple's strategy here on the server is to make sure every service we deploy is Kerberized, which is the term people use.

And likewise, to make sure the clients that access them on the client are Kerberized as well. So, Panther gets us, I would say, you know, 95% of the way there. There might be a few things we've forgotten, but we'll quickly fix them. In fact, Panther's not shipping yet, so let us know about things that we've left out. But that is, I think, going to be incredibly important for any enterprise deployment of any software, really. So, we are well along that path.

JBoss Application Server. JBoss is widely used to develop and to deploy J2EE applications in the industry. It has been something you could go-- it's an open software project. You can go and download it and run it on the Mac if you want to. We are going to actually package the JBoss application server with Panther Server.

Now, what does that mean? I'd say somewhere between 30%, 40%, maybe 50% of people have been exposed to JBoss, because when you're developing J2EE applications, it is really just so convenient. You can develop with JBoss on a laptop. You can deploy it on WebLogic. You can deploy it on IBM's application server. Any J2EE application server, you can kind of share J2EE objects between these different application servers.

If you want to put JBoss on the Mac today, there's a lot of work required because a lot of integration has to happen with Apache and with other things. So what we are doing with Panther is we are taking all of those pieces and putting them together, including tools for managing JBoss so it can become a deployment environment as well.

And we are including with that a tool for easily migrating. There are slight differences in how J2EE objects are deployed between, or EJBs are deployed between different application servers. We have some tools, for example, to very easily take a BEA EJB and import that into JBoss automatically. So this is going to be a very slick set of tools for anybody in the enterprise developing J2EE applications. I'd like to talk about Mail Server.

With Panther, we are moving to the Postfix mail server, which many agree is the most robust and scalable open email solution on the market today. Now, we're not just putting Postfix in there. Postfix provides SMTP support. We're also including Cyrus to support IMAP and POP. And you'll notice we have Webmail and mailing lists. For Webmail, we're using Squirrelmail, so we're integrating in Squirrelmail. For mailing lists, we're integrating Mailman right in Panther Server. So you have a complete mail solution.

We are also integrating SSL for secure email transport between client and server. Server Admin. So we have had in Jaguar some server admin tools, some GUI tools, and as I mentioned before, there's also all the command line tools that you know and love. But we've taken that to the next level in Panther. What we've done is we can combine the server setup and management tools with the monitoring tools. And let me take you through, I'll give you a demo of that right now. We could go to machine number one here.

OK, what you're looking at is server admin for Panther. And over here-- On the left would be listed all of your computers. And right now we're just looking at one server, but you could imagine a whole list there of servers. And on the right here is a pane which tells you information about that server. So which system is this running? It's running Mac OS X, 10.3, that's Panther.

It tells you serial number, etc. I can click through here and find out. Here's all your system logs, watchdog logs, software update logs, all the logs on that system. Information about the network interface, what's mounted. Information about CPU usage over time. So let's see if I can find out how long has this server been up here. Okay, so that's when it came up, about three hours ago, four hours ago. I can look at network traffic on that server.

And I can run software update remotely, so if I have updates available from Apple, I simply check now, those are downloaded, updated on the server. Now, things get very interesting. If I click here, I open up this server, and what I see are all of the services that are available to run on that server. Apple Filing Protocol, Open Directory, DNS Running Bind, FTP, Firewall, which is the Berkeley IP Firewall, Application Server, which is actually JBoss, Mail, NAT, Netboot, NFS, Print, QuickTime Streaming.

That's new. You can manage. So all of your services you can manage from one place. These blue dots over here, if the blue dot is on, that means that service is running. If the blue dot is off, that service is currently stopped. So let's go take a look at what we can do. Let's click on Web. So what I'm really doing now is managing the Apache web server from Panther Server Admin. And here I'm looking at where all the services stop. So request per second is zero. Throughput is zero. I can look at all the logs.

Here's my Apache logs that I know and love. Graph the activity, which is zero. Settings, et cetera. Now, in settings, let me take you through a few of those. Here's one I like, which is here's all your Apache mods. You can turn on a module just by checking it.

Sites is incredibly easy. So let's say I want to set up a new website. Currently I have the default domain on. I say add. I give it a name. Let's say, oh, Tribble.com. I haven't paid for that, but someone else owns it. It's Star Trek-y. But let's say, let's say Tribble.com. I say save. And go back. And there it is. Now it's sitting there. It's not enabled, so it's just kind of sitting in wait. I enable it by clicking here. I start the Apache web service by clicking there. Tribble.com is now online. It's that simple.

[Transcript missing]

If I could go to the, actually the next thing I want to talk about is Samba 3. Samba 3 is the next version of Samba after Samba 2. The important thing about it is that Apple is the first major vendor going to be shipping Samba 3. Samba 3 is in Panther today.

Important thing about, one of the important things about Samba 3 is that it allows you to have a single place where you're serving up file systems and printing to both Windows users and to Mac servers. And it goes beyond that in that the MIS manager can manage a single record and and Samba 3 can become a primary domain controller.

Now, what does this mean? This means that if I have a person in my shop who needs to access both a Windows machine and a Mac machine, they can have a single login and password, and a single file home that they can use to store all their files.

So that when I go to the Mac machine, I use that same login and password as I use on the Windows machine. All of my configuration information is stored in that record. The manager only has to manage it in one place, and the user can access it from one place. Incredibly convenient.

So Mac OS X Server for Panther, over 50 new features, including automatic setup, Open Directory 2, Single sign-on, so you can have a single password to get at all your services. Everything Kerberized, both on the client and the server. JBoss, the easiest way to deploy J2E applications on Mac. Postfix mail server, the most robust, scalable, open source mail server around. Server admin tools, so out of the box configurability and manageability and monitoring of all of the services running on the server. And Samba 3 integrated in with Panther.

Price, $999 for unlimited users. This is a big deal. Almost every other operating system for servers you buy out there comes with a per-seat cost. We don't do that. If you pay the $999 price, you get unlimited users. Software maintenance customers get it automatically. and all WWDC attendees get a developer's preview, so it's in your bags. You should have it. Please play with it. Have fun. Thank you very much.
