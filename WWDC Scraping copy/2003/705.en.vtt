WEBVTT

00:00:19.700 --> 00:00:22.650
Okay, it's just about time,
so let's go ahead and get started.

00:00:22.700 --> 00:00:27.980
Everybody should be here for session 705,
The Art of MPEG-4 Encoding.

00:00:27.980 --> 00:00:32.240
My name is Dennis Backus,
I work on the QuickTime team

00:00:32.240 --> 00:00:33.710
at Apple Computer.

00:00:34.510 --> 00:00:37.480
We're going to talk today about
the hows of MPEG-4 encoding,

00:00:37.480 --> 00:00:39.400
not so much the whys, but the hows.

00:00:39.600 --> 00:00:44.590
Encoding in general is somewhat
of a difficult process.

00:00:44.590 --> 00:00:49.400
To a certain extent it's a science,
but good encoding is actually an art,

00:00:49.430 --> 00:00:51.400
hence the title of this session.

00:00:51.400 --> 00:00:55.440
And today we're very lucky to have two,
I think some of the premier

00:00:55.470 --> 00:00:58.290
artists in the encoding world,
and especially in the

00:00:58.380 --> 00:00:59.400
MPEG-4 encoding world.

00:00:59.480 --> 00:01:03.620
Andy Beach, right here to my left,
and then John Howell,

00:01:03.620 --> 00:01:05.690
from an organization.

00:01:07.390 --> 00:01:11.400
from an organization called
Last Exit from the East.

00:01:11.400 --> 00:01:13.800
So without any further ado,
let's get started.

00:01:13.800 --> 00:01:14.590
Andy?

00:01:14.590 --> 00:01:16.190
Thank you very much.

00:01:16.910 --> 00:01:19.020
Hi everyone, I am Andy Beach.

00:01:19.020 --> 00:01:19.800
I'm from Last Exit.

00:01:19.800 --> 00:01:22.120
This is John Howell.

00:01:22.280 --> 00:01:25.210
Last Exit is a

00:01:25.440 --> 00:01:29.320
We started as a web design
and technology company,

00:01:29.330 --> 00:01:32.890
but John and I are both from
a film and video background.

00:01:32.930 --> 00:01:39.070
Quickly we turned to video on the web
and interactive video as being some of

00:01:39.070 --> 00:01:41.400
the primary work that we wanted to do.

00:01:41.400 --> 00:01:45.300
Dennis asked that I try
and explain the last exit,

00:01:45.490 --> 00:01:47.400
naming some.

00:01:47.400 --> 00:01:51.430
Basically we were working for
a rather large global company,

00:01:51.510 --> 00:01:54.580
got a little tired of the way
everything was being run and the

00:01:54.580 --> 00:01:57.700
way things were being handled,
so we made our last exit out of the

00:01:57.800 --> 00:02:00.400
big world and into our own company.

00:02:00.400 --> 00:02:02.960
Because if we were going
to work for assholes,

00:02:02.960 --> 00:02:04.750
we could work for ourselves.

00:02:09.710 --> 00:02:11.660
So what is MPEG-4?

00:02:11.660 --> 00:02:13.040
What can it do for you?

00:02:13.110 --> 00:02:17.600
Apple has a lot that they've talked about
it and that's what we're all here for.

00:02:17.820 --> 00:02:21.620
Basically,
what we want to talk about though is

00:02:21.700 --> 00:02:28.100
that MPEG-4 means standardizations
and it does mean interoperability.

00:02:28.120 --> 00:02:32.120
The two most important things for us.

00:02:33.400 --> 00:02:36.520
What we're gonna,
and what I'm gonna do is I'm going to

00:02:36.570 --> 00:02:41.820
try very hard today to intro everything,
but then rapidly hand off so that we can

00:02:41.820 --> 00:02:45.780
actually get to some meat and potatoes
demonstration of MPEG-4 encoding.

00:02:45.780 --> 00:02:48.750
And then lots of time for
you guys to ask questions,

00:02:48.810 --> 00:02:53.730
because I'm sure that you've had encoding
nightmare question problems coming up.

00:02:53.850 --> 00:02:57.240
So we want to make sure that
there's plenty of opportunity

00:02:57.260 --> 00:02:58.880
to get into that today.

00:02:59.100 --> 00:03:03.380
We are going to discuss though a basic
understanding of the MPEG-4 spec.

00:03:03.400 --> 00:03:06.590
I don't feel necessarily
qualified to fully speak to it,

00:03:06.600 --> 00:03:09.800
but I'm certainly going to
do my best given the people

00:03:09.800 --> 00:03:11.380
that are in the room today.

00:03:11.380 --> 00:03:15.100
How to produce the MPEG-4
content that you want,

00:03:15.330 --> 00:03:20.280
different ways to deliver that, you know,
the different appliances out there.

00:03:20.440 --> 00:03:25.450
And demonstrate a workflow
for creating your MPEG-4.

00:03:26.660 --> 00:03:29.150
So, and again,
I'll try to make this as brief as

00:03:29.150 --> 00:03:32.440
possible so that you don't have
too many history lessons today.

00:03:32.440 --> 00:03:38.410
Uh, MPEG was introduced as a standard.

00:03:38.760 --> 00:03:44.280
QuickTime 6 brought MPEG-4 to us,
the last QuickTime Live, 2002.

00:03:44.390 --> 00:03:47.390
Uh,
we're now seeing support for AAC audio,

00:03:47.520 --> 00:03:51.510
MPEG-4 video,
and with the latest .3 we're

00:03:51.510 --> 00:03:54.750
now getting the 3GP as well.

00:03:55.660 --> 00:03:59.040
If we look at the two file formats,
you're going to notice something

00:03:59.050 --> 00:04:02.600
very similar in the two graphics.

00:04:02.740 --> 00:04:07.170
Obviously they are very similar
because the MPEG-4 is based off of

00:04:07.170 --> 00:04:09.600
the architecture of the QuickTime.

00:04:09.870 --> 00:04:12.620
Right now we're just dealing with
the video and the audio aspects,

00:04:12.710 --> 00:04:14.590
but there is a great
deal more that's there,

00:04:14.590 --> 00:04:15.590
things to come.

00:04:15.600 --> 00:04:18.950
We're patient, we'll wait.

00:04:19.160 --> 00:04:30.170
Scalability is by far the
most important aspect.

00:04:30.170 --> 00:04:30.170
This is our friend Terry Tate.

00:04:30.170 --> 00:04:30.170
I don't know how many of you got
to see some of the Terry Tate

00:04:30.170 --> 00:04:30.170
content that came out last year.

00:04:30.610 --> 00:04:34.950
The scalability, designing for playback
on a variety of devices.

00:04:34.950 --> 00:04:39.870
Flexibility in the bit rates and the
frame sizes that it's going to handle.

00:04:39.920 --> 00:04:44.650
This is the key to the MPEG-4,
moving past something like an

00:04:44.840 --> 00:04:47.430
MPEG-2 broadcast architecture.

00:04:51.180 --> 00:04:58.340
So this is the standards-based,
going back to a wide array of platforms,

00:04:58.390 --> 00:05:05.300
developing for one format but
being able to play back everywhere.

00:05:07.500 --> 00:05:11.420
The Internet Streaming
and Media Alliance,

00:05:11.520 --> 00:05:15.770
if there's an analogy out there,
we certainly looked for

00:05:15.770 --> 00:05:16.800
the perfect analogy.

00:05:16.800 --> 00:05:20.570
MPEG-4 is really the ingredients,
and the ISMA is the cookbook,

00:05:20.570 --> 00:05:23.820
giving you the recipes for
all the various profiles.

00:05:23.820 --> 00:05:27.390
So it's going to tell you how
everything should be structured

00:05:27.390 --> 00:05:31.200
and put together to meet those
profiles that you're trying to.

00:05:31.200 --> 00:05:35.020
MPEG-4 has obviously got a great deal
more behind it and under the hood.

00:05:35.680 --> 00:05:38.300
So it's that raw source that you're
going to be able to tap into.

00:05:41.740 --> 00:05:43.760
The two that we're
concerning ourselves with,

00:05:43.800 --> 00:05:46.500
with the encoding right now,
even though it will do all of these

00:05:46.500 --> 00:05:51.380
great things to get this started off,
it really is the video and the audio

00:05:51.380 --> 00:05:53.350
that are particularly important to us.

00:05:53.360 --> 00:05:59.160
There's a number of ISO-compliant
MPEG-4 codecs out there,

00:05:59.210 --> 00:06:02.120
in addition to the MPEG-4.

00:06:02.120 --> 00:06:05.510
There's a lot of
interoperable plugins as well,

00:06:05.510 --> 00:06:09.290
like NVivio and the Impegables,
to get stuff out.

00:06:10.920 --> 00:06:15.500
The audio, the AAC stuff,
it's a lot less processor intensive than

00:06:15.500 --> 00:06:19.420
it has been on other things in the past,
so you get a lot better playback

00:06:19.420 --> 00:06:22.440
on some lower platform systems.

00:06:22.440 --> 00:06:26.410
There's a great deal more audio support,
and you get a lot higher audio

00:06:26.410 --> 00:06:28.120
in a lot smaller file now.

00:06:31.900 --> 00:06:35.240
For content creation I want
to ask John to step in.

00:06:35.310 --> 00:06:40.020
Okay,
this I guess is my part of the speech.

00:06:40.340 --> 00:06:45.300
Apple wanted to make it really easy for
everybody to be able to encode MPEG-4.

00:06:45.300 --> 00:06:49.130
They really threw themselves behind
the standard and pretty much want

00:06:49.140 --> 00:06:55.300
to transition content creation and
viewing on the internet into MPEG-4.

00:06:55.350 --> 00:06:58.930
And so they gave us a bunch
of different ways to create

00:06:59.000 --> 00:07:04.290
MPEG-4 content using iMovie,
Final Cut Pro, QuickTime Pro,

00:07:04.360 --> 00:07:05.300
you name it.

00:07:05.300 --> 00:07:09.300
They want you to do
MPEG-4 coming out of it.

00:07:09.380 --> 00:07:14.460
So I'm going to outline sort of how
easy it is to do MPEG-4 content,

00:07:14.460 --> 00:07:18.480
sort of go over an overview of
how the QuickTime exporters work,

00:07:18.490 --> 00:07:22.290
and show you some other
options for encoding.

00:07:23.420 --> 00:07:26.660
Okay,
so basically to create an MPEG-4 file,

00:07:26.660 --> 00:07:30.680
you can open a video in Final Cut,
or sorry, QuickTime Pro.

00:07:30.680 --> 00:07:34.020
You hit Export, Apple E, Command E.

00:07:34.020 --> 00:07:36.760
You choose MPEG-4,
you choose a default setting,

00:07:36.760 --> 00:07:39.430
and you watch the progress
bar go across the screen,

00:07:39.440 --> 00:07:42.350
and you end up with an
MPEG-4 file on the other end.

00:07:42.350 --> 00:07:44.190
It's basically that easy.

00:07:45.200 --> 00:07:48.750
So, I don't know,
how many people out here are actively

00:07:48.750 --> 00:07:50.840
doing MPEG-4 content creation?

00:07:50.840 --> 00:07:52.700
Most everybody?

00:07:52.700 --> 00:07:53.240
Cool.

00:07:53.240 --> 00:07:56.040
Those of you who,
are there a bunch of you who are

00:07:56.040 --> 00:07:59.760
doing content creation and encoding
that you don't want to go to MPEG-4?

00:07:59.760 --> 00:08:01.630
You're not gone to MPEG-4 yet?

00:08:01.760 --> 00:08:02.480
Are those people here?

00:08:02.480 --> 00:08:03.650
A couple?

00:08:03.650 --> 00:08:04.500
Okay.

00:08:04.500 --> 00:08:10.400
So, hopefully we can sort of
convince you to switch over.

00:08:10.400 --> 00:08:17.280
So, this, if you look at the two screens,
the one on the left, I guess, is,

00:08:17.280 --> 00:08:19.520
you know, Export to MPEG-4.

00:08:19.520 --> 00:08:22.380
The one on the right
is the default setting,

00:08:22.380 --> 00:08:27.620
but you move ahead to the
actual QuickTime exporter,

00:08:27.620 --> 00:08:34.120
and it has a really neat feature
in that when you open a program

00:08:34.120 --> 00:08:39.340
that knows how to use QuickTime,
like Final Cut Pro, like After Effects,

00:08:39.340 --> 00:08:45.180
like iMovie, they basically all export
video using the same MPEG-4,

00:08:45.180 --> 00:08:49.240
the Apple ISO-compliant MPEG-4 exporter.

00:08:49.240 --> 00:08:55.830
You create the .mp4 file out of that,
and it'll play back on any

00:08:55.990 --> 00:08:59.240
ISO-compliant MPEG-4 player.

00:08:59.240 --> 00:09:03.120
You can use the Nvivo plugin to
play it back in real player on a PC.

00:09:03.120 --> 00:09:06.930
I've been told it works in Windows Media,
but I try not to look at Windows Media,

00:09:06.940 --> 00:09:08.000
so I don't know.

00:09:08.000 --> 00:09:12.140
The Apple QuickTime encoder
is a kind of neat thing.

00:09:12.140 --> 00:09:15.900
They made it do one-pass VBR,
so it tries,

00:09:15.900 --> 00:09:18.980
you set the bitrate you want,
you set it to be, you know,

00:09:18.980 --> 00:09:22.300
300 kilobits a second,
and it gets everything it

00:09:22.460 --> 00:09:25.760
can at 300 kilobits a second,
but then you have areas

00:09:25.810 --> 00:09:28.300
that don't need that,
so it scales it down some,

00:09:28.300 --> 00:09:32.160
and you get a smaller file size,
which for an end user is a good thing.

00:09:32.160 --> 00:09:35.060
The encoder's optimized
for a G4 processor.

00:09:35.140 --> 00:09:39.150
It doesn't fly, but it's pretty fast.

00:09:39.180 --> 00:09:43.700
Interesting to see what it does
on the dual 2 gigahertz G5.

00:09:43.700 --> 00:09:45.000
Looking forward to that.

00:09:45.210 --> 00:09:49.250
So this is the QuickTime 6 exporter.

00:09:49.260 --> 00:09:52.420
Just like in the previous slide,
you go movie to MPEG-4,

00:09:52.420 --> 00:09:55.410
and then you get another
window that comes up with a,

00:09:55.420 --> 00:09:58.400
lets you choose your
profile if you want to use,

00:09:58.400 --> 00:10:03.250
you know, simple, advanced, simple,
complex, whatever the profiles are.

00:10:03.300 --> 00:10:05.410
You go in and do that.

00:10:05.420 --> 00:10:07.520
You set your audio, your video bitrate.

00:10:07.520 --> 00:10:10.110
You can set your frame size.

00:10:10.180 --> 00:10:12.960
You set keyframes.

00:10:12.960 --> 00:10:14.870
You can do your audio bitrates.

00:10:15.200 --> 00:10:18.030
You can choose whether to
do high quality encoding.

00:10:18.080 --> 00:10:21.380
You can choose whether, well,
actually you can't choose whether to

00:10:21.380 --> 00:10:23.080
use the speech codec or the music codec.

00:10:23.160 --> 00:10:24.400
You can use the music codec.

00:10:24.480 --> 00:10:28.120
And then they have at the bottom,
it tells you sort of what kind

00:10:28.120 --> 00:10:29.430
of file you're going to produce.

00:10:29.440 --> 00:10:33.860
And if you come up with settings that
don't fit the MPEG-4 specification,

00:10:33.880 --> 00:10:36.080
it'll tell you,
and it'll tell you how much you

00:10:36.080 --> 00:10:38.990
need to lower it by to get it
to fit in the specifications,

00:10:39.000 --> 00:10:42.120
which is really handy,
especially when you're starting

00:10:42.120 --> 00:10:43.500
out learning to do MPEG-4.

00:10:43.500 --> 00:10:45.140
So that's QuickTime.

00:10:45.140 --> 00:10:47.280
This is the QuickTime exporter
going out of QuickTime 6 player.

00:10:47.280 --> 00:10:51.840
This is the QuickTime Explorer exporter
going out of Final Cut 3.

00:10:51.840 --> 00:10:53.780
It's pretty much the exact same thing.

00:10:53.780 --> 00:10:57.700
You go export, move it to MPEG-4,
and you have the same settings window.

00:10:57.700 --> 00:11:03.260
So, you know, the same way you did it in
QuickTime Pro the first time you did it,

00:11:03.260 --> 00:11:04.710
you can now do it in Final Cut Pro.

00:11:04.720 --> 00:11:06.010
Yeah.

00:11:06.400 --> 00:16:28.300
[Transcript missing]

00:16:29.050 --> 00:16:30.970
I'm here to talk about the Dolby Labs.

00:16:31.000 --> 00:16:31.980
It's a digital music store format.

00:16:31.980 --> 00:16:34.000
It's an iTunes-protected file.

00:16:34.000 --> 00:16:35.000
It's locked.

00:16:35.000 --> 00:16:37.920
You can't take the ones off my
laptop and play them on yours.

00:16:37.990 --> 00:16:41.000
They're all delivered through
the Apple Music Store.

00:16:41.000 --> 00:16:44.390
The advantages of it are that
it's digital rights management,

00:16:44.390 --> 00:16:47.430
so you can't take it off my
laptop and play it on yours.

00:16:47.430 --> 00:16:52.940
It's got 128-kilobit AAC audio,
so very high-quality audio playback.

00:16:52.940 --> 00:16:55.340
The stuff about Dolby
Labs did the testing,

00:16:55.340 --> 00:16:58.520
and you can't distinguish
this from the source audio.

00:16:59.000 --> 00:17:01.320
So you get good-quality audio.

00:17:01.340 --> 00:17:04.240
You can also take that,
and if you legitimately

00:17:04.240 --> 00:17:07.160
bought the iTunes file,
you can import it into iMovie.

00:17:07.180 --> 00:17:11.170
You can import it into iDVD
and use it for those projects,

00:17:11.240 --> 00:17:13.240
which is kind of cool
because you bought the file,

00:17:13.240 --> 00:17:14.840
so you might as well use
it wherever you want.

00:17:14.980 --> 00:17:19.090
The disadvantages,
depending on how you butter your bread,

00:17:19.090 --> 00:17:23.840
are digital rights management,
and some people don't like that.

00:17:26.620 --> 00:17:29.200
The Apple Music Store files?

00:17:29.220 --> 00:17:32.600
I believe so, yes.

00:17:32.600 --> 00:17:35.700
The preview files I don't think
are 128 kilobit per second,

00:17:35.700 --> 00:17:39.590
but the files you buy from the
iTunes Music Store I believe are.

00:17:40.900 --> 00:17:44.540
The 3GP.3GP files,
they're QuickTime movies that

00:17:44.550 --> 00:17:46.670
will play back on 3G phones.

00:17:46.760 --> 00:17:51.520
They also play back in
QuickTime 6.3 on a Mac.

00:17:51.770 --> 00:17:55.240
There's the standard for
playback on wireless devices.

00:17:55.440 --> 00:17:59.530
They've got audio, video,
and 3GP text as implemented in QuickTime,

00:17:59.580 --> 00:18:02.120
which is really cool because you
can actually stream text with video.

00:18:02.120 --> 00:18:06.080
And a lot of people need to do that
for people who use closed captioning,

00:18:06.200 --> 00:18:09.320
or if you want to send an
English file to a foreign language,

00:18:09.420 --> 00:18:10.980
you can have subtitles.

00:18:12.120 --> 00:18:16.120
It'll stream wirelessly to a phone,
it will download to a phone and play,

00:18:16.120 --> 00:18:20.120
but unfortunately 3GP isn't
really available in the US,

00:18:20.120 --> 00:18:21.800
so none of us get to play with that.

00:18:21.830 --> 00:18:26.800
As Frank Casanova said,
go to Japan and sit in the airport.

00:18:29.600 --> 00:18:30.590
All right, demo.

00:18:30.640 --> 00:18:34.290
May I please have the demo machine?

00:18:34.320 --> 00:18:38.940
Any questions so far before we
carry on with John's demonstrations?

00:18:38.980 --> 00:18:41.880
Everything's pretty
straightforward so far.

00:18:51.320 --> 00:18:52.680
It's a full application.

00:18:52.710 --> 00:18:54.680
Sorenson sells a version of Squeeze.

00:18:54.700 --> 00:18:57.970
It's Squeeze for MPEG-4,
and it comes with the

00:18:57.970 --> 00:19:02.840
Sorenson MPEG-4 Pro codec,
and that is the only way at this time

00:19:02.840 --> 00:19:05.090
to encode using the Sorenson codec.

00:19:05.180 --> 00:19:09.100
You can't just buy it like you could
buy the old Sorenson video codecs.

00:19:09.160 --> 00:19:12.100
You have to buy Squeeze to get
the codec to encode the files.

00:19:12.100 --> 00:19:19.100
So that's how they kind of get you
to buy their soup and nuts product.

00:19:19.300 --> 00:19:20.530
Are you ready for our demo here?

00:19:20.540 --> 00:19:22.540
Okay, on with the demo.

00:19:22.550 --> 00:19:26.800
Basically I'm going to
try and walk you through,

00:19:26.800 --> 00:19:32.290
start to finish,
capture file to produce a file that

00:19:32.410 --> 00:19:36.540
can be uploaded to the internet
as a streaming MPEG-4 file.

00:19:36.540 --> 00:19:40.210
So you start out,
you get a source tape from,

00:19:40.210 --> 00:19:42.540
well I get them from clients.

00:19:42.550 --> 00:19:45.540
And the first thing to do is you
have to import into the computer.

00:19:45.540 --> 00:19:51.540
We use Final Cut Pro,
Apple's gold standard video

00:19:51.540 --> 00:19:54.540
importing and editing application.

00:19:54.540 --> 00:19:56.510
It's a great program,
we've been using it for years.

00:19:56.580 --> 00:20:02.430
So the acquisition stage
is you go into Final Cut,

00:20:02.430 --> 00:20:06.270
fortunately I have a file that's, yeah,
yeah, yeah, reconnect.

00:20:15.520 --> 00:20:17.500
Unfortunately I have a file already here,
we don't have to capture it.

00:20:17.500 --> 00:20:22.500
But getting the file into your computer
is kind of the easiest thing to mess up.

00:20:22.500 --> 00:20:26.620
If you bring bad quality
source file into your system,

00:20:26.620 --> 00:20:29.500
you're not going to be able
to encode a high quality file.

00:20:29.500 --> 00:20:32.400
The sort of mantra has
always been "garbage in,

00:20:32.400 --> 00:20:36.260
garbage out". So, you know,
always try and get the files or

00:20:36.260 --> 00:20:41.200
the source tapes from your clients
or produce your files using the

00:20:41.200 --> 00:20:43.500
best quality things you can get.

00:20:43.500 --> 00:20:46.530
Use beta SP, use digi-beta.

00:20:46.600 --> 00:20:50.070
I really like to try and get
things exported directly out

00:20:50.070 --> 00:20:52.500
of either After Effects or
Final Cut on a hard drive.

00:20:52.500 --> 00:20:58.180
Because there's no degradation
of the image quality there.

00:20:58.780 --> 00:21:03.010
So, we've got this file, which is a,
this came to us on a

00:21:03.010 --> 00:21:04.850
DV tape from a client.

00:21:04.870 --> 00:21:11.750
It's a, kind of a music video promo.

00:21:13.300 --> 00:21:17.300
Something you may notice, lots of red.

00:21:17.300 --> 00:21:18.300
DV doesn't like red.

00:21:18.300 --> 00:21:20.830
So I kind of chose
this clip for a reason,

00:21:20.830 --> 00:21:22.770
in that it doesn't encode very well.

00:21:22.800 --> 00:21:25.580
And so instead of showing
you the perfect file,

00:21:25.630 --> 00:21:28.080
and this is great and
look how great it is,

00:21:28.140 --> 00:21:31.010
I want to show you that
not everything looks great.

00:21:31.050 --> 00:21:35.240
And a DV file with lots of red encoded to
MPEG-4 isn't always going to look great.

00:21:35.300 --> 00:21:37.480
And at the end of this we'll see that.

00:21:37.660 --> 00:21:42.360
But this lots of red has kind of
pixelation and blurring at the

00:21:42.360 --> 00:21:44.660
edges of it on the source file.

00:21:44.660 --> 00:21:48.360
So I'm definitely going to end up
seeing some of that in my MPEG-4 file.

00:21:48.380 --> 00:21:52.060
So there's really not a whole lot you
can do to stop that kind of stuff,

00:21:52.060 --> 00:21:55.850
especially if your clients
give you stuff on DV tape.

00:21:56.700 --> 00:22:05.000
[Transcript missing]

00:22:09.300 --> 00:22:09.810
Mr.

00:22:09.810 --> 00:22:11.840
Local Hero, Sami Sosa.

00:22:11.870 --> 00:22:15.880
So yeah, lots of high movement,
lots of strong red colors.

00:22:15.880 --> 00:22:19.000
So basically you're kind
of encoding nightmare file,

00:22:19.000 --> 00:22:19.640
right?

00:22:19.640 --> 00:22:22.860
So this was brought in, final cut.

00:22:24.230 --> 00:22:28.470
And captured to the hard drive, so,
final cut.

00:22:28.570 --> 00:22:32.440
You then open,
for this sake of this demonstration,

00:22:32.440 --> 00:22:37.340
we use Cleaner 6,
which is able to encode a .mp4 file.

00:22:37.580 --> 00:22:43.870
So I take my file,
bring it in to Cleaner.

00:22:47.850 --> 00:22:53.040
You can see the whole file.

00:22:53.040 --> 00:22:55.040
You can set in and out points.

00:22:55.040 --> 00:22:57.300
Unfortunately,
this clip has actually got the in and

00:22:57.300 --> 00:23:01.040
out points right where I want them,
so I don't have to set in and out points.

00:23:02.140 --> 00:23:04.380
Uh, when you open up, you get a setting.

00:23:04.380 --> 00:23:07.470
Uh, since this is a streaming file,
when you do streaming,

00:23:07.610 --> 00:23:11.240
you don't really have a whole
lot of flexibility as to

00:23:11.240 --> 00:23:13.360
what bit rates you can use.

00:23:13.470 --> 00:23:17.100
It has to be under a certain bit
rate or else it won't stream.

00:23:17.100 --> 00:23:21.960
So, you know, say for a 56K modem,
you know, you need to encode at,

00:23:21.960 --> 00:23:26.100
you know, kind of around 30 kilobits
per second because,

00:23:26.100 --> 00:23:29.090
for video,
because you tack your audio on there,

00:23:29.200 --> 00:23:31.100
you tack your 10%
bandwidth tacks on there.

00:23:31.100 --> 00:23:36.150
Because when you encode a streaming file,
you always kind of leave

00:23:36.150 --> 00:23:38.960
10% for the hinting and for,
uh...

00:23:39.110 --> 00:23:41.560
I guess network trouble.

00:23:41.600 --> 00:23:44.700
So you know you're always kind
of locked into similar bit rates.

00:23:44.700 --> 00:23:49.040
You know doing an ISDN file you need to
come in under 100 kilobits per second.

00:23:49.660 --> 00:23:53.680
Typically for doing broadband
files you want to come in at or

00:23:53.680 --> 00:23:56.020
around 300 kilobits per second.

00:23:56.060 --> 00:23:58.280
A lot of broadband
connections get faster,

00:23:58.280 --> 00:24:01.700
but to sort of be nice to
the slower connections,

00:24:01.760 --> 00:24:02.910
you do around 300.

00:24:02.990 --> 00:24:07.610
You can do a special 700 one sometimes,
or even megabit streaming

00:24:07.610 --> 00:24:09.410
for the right connections.

00:24:09.420 --> 00:24:12.980
But for this demo we just do around 300.

00:24:13.060 --> 00:24:13.810
So we have a setting.

00:24:13.820 --> 00:24:16.220
I'm outputting to MPEG-4.

00:24:16.320 --> 00:24:18.160
It's a .mp4 file.

00:24:18.300 --> 00:24:22.380
And if I click on this,
we get our handy-dandy Apple thing.

00:24:22.380 --> 00:24:26.770
So Cleaner actually
uses the Apple encoder.

00:24:27.700 --> 00:24:28.760
Image.

00:24:28.760 --> 00:24:32.440
I'm cropping, this is a 300K file,
I'm cropping the image to kind

00:24:32.440 --> 00:24:36.000
of near TV safe by taking 32
pixels off the left and right,

00:24:36.010 --> 00:24:37.760
24 off the top and bottom.

00:24:37.760 --> 00:24:40.950
It, you know,
kind of gets rid of any nastiness

00:24:40.950 --> 00:24:44.180
that you may have at the top
and bottom of your video file.

00:24:44.180 --> 00:24:47.270
Sometimes when you bring
in files from tape,

00:24:47.350 --> 00:24:50.770
it kind of distorts around
the bottom or the top.

00:24:50.860 --> 00:24:54.060
And so by cropping your video,
you're reducing that.

00:24:54.070 --> 00:24:57.110
You're also kind of reducing
the size of the image.

00:24:57.600 --> 00:24:59.940
So that when you encode
it at a smaller size,

00:24:59.940 --> 00:25:03.730
like 320 by 240 or 240 by 180,
you're getting more of the

00:25:03.780 --> 00:25:08.590
actual real video image into the
encoded file than you would at,

00:25:08.610 --> 00:25:09.440
you know, this size.

00:25:09.440 --> 00:25:12.360
And you're not really cropping
out much more than people lose

00:25:12.360 --> 00:25:13.980
when they watch television.

00:25:14.010 --> 00:25:17.700
So it's a kind of safe way to crop files.

00:25:17.730 --> 00:25:21.810
Encoding this one to 240 by 180,
it's a kind of fast-moving

00:25:21.810 --> 00:25:23.170
file like I showed you.

00:25:23.310 --> 00:25:27.560
So I chose a smaller
frame size because it,

00:25:27.700 --> 00:25:30.040
You know, it kind of behaves better
as a smaller frame size.

00:25:30.040 --> 00:25:32.900
As a larger frame size,
you see some more pixels on

00:25:32.900 --> 00:25:34.700
some faster moving places.

00:25:34.770 --> 00:25:37.350
It's,
all the footage was shot on television,

00:25:37.400 --> 00:25:39.370
so I'm deinterlacing.

00:25:39.420 --> 00:25:43.620
And adapted noise reduce is just
kind of something I leave on.

00:25:43.620 --> 00:25:48.520
Adjusts, you know, typical,
you chuck the gamma up.

00:25:48.520 --> 00:25:50.960
You adjust the brightness and
contrast to kind of make it

00:25:50.960 --> 00:25:53.020
look better on a computer,
basically.

00:25:53.060 --> 00:25:56.660
And these brightness
and contrast settings,

00:25:56.700 --> 00:26:02.960
if I go and apply them to this file,
and then do a preview of it,

00:26:05.010 --> 00:26:07.900
They kind of make it a
little bright and washed out.

00:26:07.900 --> 00:26:11.900
I'm a Red Sox fan, so we get Pedro.

00:26:11.900 --> 00:26:20.140
And see, he gets kind of washed
out and kind of nasty,

00:26:20.140 --> 00:26:20.570
so...

00:26:25.350 --> 00:26:30.480
You can go in,
bring the settings down some.

00:26:32.440 --> 00:26:33.960
You get a little richer color.

00:26:33.960 --> 00:26:35.630
He's a little less washed out.

00:26:35.640 --> 00:26:37.130
The crowd's a lot less washed out.

00:26:37.260 --> 00:26:39.420
I don't know what that
looks like on here,

00:26:39.420 --> 00:26:41.290
but it looks better on my screen.

00:26:43.420 --> 00:26:44.400
You know, encode.

00:26:44.400 --> 00:26:49.310
You know, 15 frames a second for
a 240 by 180 file at,

00:26:49.390 --> 00:26:51.550
you know,
300 kilobits a second is generally

00:26:51.550 --> 00:26:53.020
going to look pretty good.

00:26:53.060 --> 00:26:57.340
You know, keyframe every, basically,
100 frames.

00:26:57.340 --> 00:27:00.390
So, every 100, 150 frames.

00:27:00.400 --> 00:27:03.410
Data rate to 300 kilobits a second.

00:27:03.450 --> 00:27:04.170
Audio.

00:27:04.170 --> 00:27:09.250
You notice there's no way to
choose your audio bit rates here.

00:27:10.290 --> 00:27:14.370
But you can say 16-bit stereo, 16-bit.

00:27:14.610 --> 00:27:17.560
44 kilohertz stereo.

00:27:17.620 --> 00:27:19.940
The way you choose your audio
bitrate is you have to go back

00:27:20.010 --> 00:27:21.580
into the QuickTime encoder.

00:27:21.620 --> 00:27:25.250
You go to the output thing,
go to options.

00:27:25.540 --> 00:27:48.560
Audio.

00:27:48.560 --> 00:27:48.560
Now I can pick my thing.

00:27:48.560 --> 00:27:48.560
So, stereo.

00:27:48.560 --> 00:27:48.560
It won't let me go any higher than 22.

00:27:48.560 --> 00:27:48.560
If I go to mono, I can bump it up some.

00:27:48.560 --> 00:27:48.560
And that generally actually sounds
better than stereo sometimes.

00:27:48.560 --> 00:27:48.560
Depends on, again, the source file.

00:27:48.560 --> 00:27:48.560
Depends on whether it's speech or music.

00:27:48.560 --> 00:27:48.560
Encoding quality, I always choose best.

00:27:51.190 --> 00:27:57.420
32 kilobits a second on top of my,
you know,

00:27:57.530 --> 00:28:02.860
just about 300 kilobits per second
file will give me a file that

00:28:02.860 --> 00:28:07.260
will stream over almost every
broadband connection in the US.

00:28:07.340 --> 00:28:12.210
So, you know, you choose "Apply for that
setting," you kick it out,

00:28:18.960 --> 00:28:23.140
and you again watch the progress
bar creep across the screen.

00:28:23.230 --> 00:28:25.240
Favorite part of my day because
it means I get to go play

00:28:25.240 --> 00:28:28.370
Xbox for about seven minutes.

00:28:33.380 --> 00:28:39.190
For the 15 frames per second,
particularly for the broadband stuff,

00:28:39.190 --> 00:28:41.920
will work very well for all of
the video footage that you have,

00:28:41.920 --> 00:28:45.630
but if you're encoding any animation,
you may find that you're going

00:28:45.630 --> 00:28:48.620
to have to start bumping that up,
because on any animations,

00:28:48.620 --> 00:28:53.370
particularly things out of After Effects,
you'll start finding that 15 just won't

00:28:53.370 --> 00:28:56.320
preserve the full range of motion.

00:28:56.320 --> 00:29:01.200
So,
bringing it up to as high as 24 helps.

00:29:01.200 --> 00:29:04.450
Anything above that,
you tend to just start tacking on

00:29:04.450 --> 00:29:09.510
extra frames that are probably going
to get lost by the end user anyway,

00:29:09.660 --> 00:29:11.310
as they're playing it.

00:29:11.320 --> 00:29:14.320
Like every good cooking show,
I already have one prepared.

00:29:14.320 --> 00:29:19.500
So, this is that file encoded
using the setting that I had.

00:30:27.330 --> 00:30:30.400
Once it started getting exciting and
everybody started hitting home runs,

00:30:30.400 --> 00:30:33.300
it started to pixelate
and kind of look nasty.

00:30:33.300 --> 00:30:35.560
And unfortunately that's
because the bitrate that it

00:30:35.630 --> 00:30:38.300
was limited to for streaming,
it did that.

00:30:38.300 --> 00:30:40.880
With this particular job,
I talked the client into letting

00:30:40.880 --> 00:30:44.430
us deliver a downloadable file,
because it's only a minute long,

00:30:44.430 --> 00:30:48.470
it didn't produce a very big file,
and by being able to up the bitrate,

00:30:48.470 --> 00:30:52.090
I was able to make a file that
I was happier with in the thing.

00:30:52.360 --> 00:30:55.580
As far as streaming though,
it doesn't look all that bad

00:30:55.640 --> 00:30:57.300
for a good 90% of the time.

00:31:08.400 --> 00:31:13.830
"Coding that on a computer screen is
still pretty fun to look at." "Yes?"

00:31:19.540 --> 00:31:22.900
I'm sorry, can you please go into the
microphone so that translators?

00:31:22.900 --> 00:31:25.890
The fraction between
the audio and the audio.

00:31:28.100 --> 00:31:30.640
Do you have some kind
of standard setting?

00:31:30.640 --> 00:31:31.630
Kind of standard setting for that?

00:31:31.640 --> 00:31:35.000
No, I honestly don't have a standard
setting for anything I do.

00:31:35.380 --> 00:31:38.000
Basically every video is
going to be different.

00:31:38.000 --> 00:31:42.000
So something that is
a sort of spoken word,

00:31:42.000 --> 00:31:47.000
just talking piece,
you can take the audio data rate down,

00:31:47.000 --> 00:31:51.000
and you can bump the video data rate up
some to get a little bit more quality.

00:31:51.040 --> 00:31:56.240
But generally no,
I don't have a specific way I, you know,

00:31:56.430 --> 00:31:57.960
set way I do it.

00:31:58.000 --> 00:32:00.510
Yes?

00:32:00.510 --> 00:32:00.510
Did you go with the one
that was in the video?

00:32:05.300 --> 00:32:07.630
For the translators,
he asked if I went with mono

00:32:07.870 --> 00:32:10.980
sound on that instead of
stereo to get an audio quality.

00:32:10.980 --> 00:32:12.390
No, that was actually stereo sound.

00:32:12.400 --> 00:32:14.530
I didn't go with mono on that one.

00:32:14.560 --> 00:32:18.360
I did that this morning
just playing around,

00:32:18.360 --> 00:32:21.620
and it was generally good sounding.

00:32:21.620 --> 00:32:24.300
I mean, whenever I do files,
I wear headphones,

00:32:24.300 --> 00:32:27.670
so I can sort of really hear
what the audio sounds like.

00:32:27.720 --> 00:32:30.660
And then I take headphones off
and I play it back over my,

00:32:30.660 --> 00:32:35.820
you know,
regular Harman Kardon sound speakers.

00:32:36.400 --> 00:32:40.410
Listening to it on the speakers
forgives a lot more sins than

00:32:40.410 --> 00:32:42.800
listening to it on the headphones.

00:32:42.860 --> 00:32:45.330
So if you're really nitpicky,
you wear headphones,

00:32:45.340 --> 00:32:49.210
but generally people aren't going
to be doing it over headphones,

00:32:49.210 --> 00:32:53.450
so you can get away with mono.

00:32:57.540 --> 00:33:00.130
"Do I have a 100K version of
this file?" was the question.

00:33:00.130 --> 00:33:05.620
"No, but we can make one very quickly."
The other reason I chose this

00:33:05.620 --> 00:33:07.480
clip is because it is short.

00:33:11.180 --> 00:33:15.800
Take these down to get
the washed out out of it.

00:33:15.850 --> 00:33:17.810
This one I'll do mono.

00:33:37.130 --> 00:33:39.430
Any other questions while we
are watching the progress bar

00:33:39.440 --> 00:33:43.170
slowly creep across the screen,
or does anyone have an Xbox?

00:33:44.270 --> 00:33:47.530
He asked about input formats,
what's a good input format.

00:33:47.550 --> 00:33:51.790
Like I said, this file came from DV,
so I imported it via FireWire

00:33:51.790 --> 00:33:53.600
using Apple's DV codec.

00:33:53.600 --> 00:33:58.900
But generally when we get files
in on beta tape or digi-beta tape,

00:33:58.950 --> 00:34:03.390
we bring it in using Kona SD card.

00:34:03.690 --> 00:34:10.400
Yes, so it's, they're either 8 or 10
bit uncompressed codec,

00:34:10.400 --> 00:34:14.160
and I've had a lot of happy
results with that card,

00:34:14.160 --> 00:34:15.220
it's a nice product.

00:34:15.290 --> 00:34:21.280
They just put out this year a
Firewire interface with SDI and it

00:34:21.280 --> 00:34:27.620
uses the Kona SD and the 10 bit and
the 8 bit Kona uncompressed codec,

00:34:27.620 --> 00:34:30.960
so I'm hoping to get my hands on
that at some point to play with

00:34:30.960 --> 00:34:34.860
that because if I could do that on
my laptop instead of having to go

00:34:34.860 --> 00:34:41.300
sit at a station for digitizing,
that'll make life a lot more fun.

00:34:41.300 --> 00:34:45.380
But yeah, I like the Kona stuff
with the uncompressed.

00:34:45.380 --> 00:34:49.800
With Final Cut 4,
Apple introduced an uncompressed 8

00:34:49.800 --> 00:34:56.520
and 10 bit kind of beginning codec,
so people will start using that

00:34:56.520 --> 00:34:57.620
and will start seeing results.

00:34:57.620 --> 00:35:01.960
and how that pans out?

00:35:14.400 --> 00:35:22.150
I've also done MPEG-4 encoding
where instead of doing,

00:35:22.150 --> 00:35:26.580
I chose to just take the source file
and do the 300 and the 100 out of

00:35:26.580 --> 00:35:29.860
Cleaner here because it's faster,
and it produces a kind of fast,

00:35:29.860 --> 00:35:33.080
pretty decent, you know, workflow,
pretty decent product.

00:35:33.360 --> 00:35:37.620
A lot of people will take and
do all their pre-processing to

00:35:37.620 --> 00:35:41.390
one file before they encode it,
and that's,

00:35:41.400 --> 00:35:43.190
we've done that for a lot of files.

00:35:43.200 --> 00:35:45.900
We especially did that before
Cleaner supported MPEG-4.

00:35:45.900 --> 00:35:48.930
So, you know,
we would go to something like

00:35:48.930 --> 00:35:53.670
PhotoJPEG as an intermediate file,
or go to, I did PNG files because

00:35:53.670 --> 00:35:58.090
they're pretty good quality,
pretty smallish file size.

00:35:58.140 --> 00:36:01.030
So that's as an,
it's kind of an intermediate from where

00:36:01.030 --> 00:36:03.340
you capture to where you go to MPEG-4.

00:36:03.360 --> 00:36:08.350
I've done PhotoJPEG and PNG as... Yeah,
if you start with a PhotoJPEG at

00:36:08.350 --> 00:36:11.350
the largest size that you
want the overall media to be,

00:36:11.350 --> 00:36:16.360
so if it's 320 by 240 or 400 by 300,
and you just start with that

00:36:16.360 --> 00:36:19.320
as your intermediary file,
you'll get pretty good results.

00:36:19.360 --> 00:36:21.360
We were very pleased with that last year.

00:36:21.360 --> 00:36:26.510
We did experiment with the PNG as well,
and it was sort of a situation of,

00:36:26.510 --> 00:36:31.360
to us it looked better, but it was also a
little slower to export.

00:36:31.500 --> 00:36:32.360
Okay.

00:36:32.360 --> 00:36:33.350
This is the 100K version.

00:36:33.360 --> 00:36:39.270
It's 180 by 132, I think.

00:36:39.410 --> 00:36:41.330
Mono sound.

00:36:42.740 --> 00:36:44.790
This one I believe is
10 frames per second,

00:36:44.790 --> 00:36:48.970
so it's going to be a little jerkier,
but this one actually looks pretty good.

00:36:56.300 --> 00:37:02.540
I'm making imprints, in two steps,
it's commitment.

00:37:02.540 --> 00:37:08.130
Three steps, I'm not done yet,
draw my other leg up,

00:37:08.130 --> 00:37:12.600
and the pace is set, and the pace is set.

00:37:50.900 --> 00:37:54.890
Considering the time we put
into encoding this file,

00:37:54.940 --> 00:37:58.290
all of us here this afternoon just now,
it's not a bad result.

00:37:58.300 --> 00:38:01.300
If you sit down with the file
and tweak it and play with it,

00:38:01.300 --> 00:38:04.540
you're going to come up with
a pretty good-looking result.

00:38:04.620 --> 00:38:09.590
And also always keep in mind that
at lower bit rates you're not going

00:38:09.870 --> 00:38:14.600
to get Apple movie trailer quality,
because this is streaming and that's not.

00:38:14.600 --> 00:38:19.690
And at 56K you're lucky
to be getting video.

00:38:47.660 --> 00:38:50.390
Do the encoders get that,
or the translators get that question?

00:38:50.400 --> 00:38:51.380
No?

00:38:51.430 --> 00:38:53.740
Yeah, we need you guys to get up to the
microphone to ask the questions.

00:38:53.740 --> 00:38:55.970
The translators can't
hear the whole thing.

00:38:56.040 --> 00:38:57.390
Thank you.

00:39:03.400 --> 00:39:05.630
When DVDs are being
professionally mastered,

00:39:05.630 --> 00:39:10.640
they'll obviously do different
trade-offs between audio and video,

00:39:10.640 --> 00:39:13.880
variable bitrate,
and then size of the bitrate

00:39:13.880 --> 00:39:15.520
at various times in the file.

00:39:15.520 --> 00:39:20.380
I'm asking whether you do for streaming,
or whether these tools

00:39:20.380 --> 00:39:22.300
support for MPEG-4.

00:39:23.320 --> 00:39:27.170
You know, if I have the matrix, you know,
action sequence,

00:39:27.180 --> 00:39:30.480
and then it goes to a dialogue portion,
and with music,

00:39:30.480 --> 00:39:32.880
where I can trade off between audio,
video,

00:39:32.880 --> 00:39:36.630
or even do more bitrate at one part
and then less bitrate at another.

00:39:36.640 --> 00:39:40.140
The simple answer to
that question is yes,

00:39:40.210 --> 00:39:44.610
but the involved answer to
that question is still yes,

00:39:44.610 --> 00:39:46.590
but kind of a...

00:39:47.140 --> 00:39:50.500
Not why would you do that,
but it's going to take a lot more work.

00:39:50.500 --> 00:39:52.510
For streaming,
you pretty much wouldn't want

00:39:52.510 --> 00:39:56.390
to do that because you're always
going to be at a certain bitrate,

00:39:56.390 --> 00:39:58.280
and you, you know,
if you can have your talking

00:39:58.280 --> 00:40:01.440
parts looking as good as your,
you know, high motion parts, then,

00:40:01.440 --> 00:40:02.500
you know, that's just a benefit.

00:40:02.500 --> 00:40:06.500
You're not saving anything
by going at a lower bitrate.

00:40:06.500 --> 00:40:10.230
For downloadable content, yeah,
you will save.

00:40:10.500 --> 00:40:43.700
[Transcript missing]

00:40:46.790 --> 00:40:48.070
Oh, yeah, set it to pass-through.

00:40:48.150 --> 00:40:48.440
Thank you.

00:40:48.440 --> 00:40:51.430
No, you don't get transcoding.

00:40:51.440 --> 00:40:56.440
Actually, that's how,
say you do an MP4 file out of Cleaner,

00:40:56.440 --> 00:40:57.770
it doesn't hint it.

00:40:57.840 --> 00:41:01.740
They have a setting for hinting,
but it actually doesn't hint the file.

00:41:01.740 --> 00:41:04.610
So, you know, this file...

00:41:06.910 --> 00:41:19.310
- So, what I do when I have to hint these
files in is I go into QuickTime Player,

00:41:19.310 --> 00:41:19.310
you open it in that,

00:41:25.700 --> 00:41:29.340
You export movie to MPEG-4 options.

00:41:29.360 --> 00:41:30.100
Bless you.

00:41:30.140 --> 00:41:30.660
Like Mr.

00:41:30.660 --> 00:41:34.940
Waggoner gratefully volunteered,
pass through audio/video so you're

00:41:34.940 --> 00:41:37.130
not getting any transcoding.

00:41:37.240 --> 00:41:40.330
Streaming optimized for server.

00:41:40.370 --> 00:41:40.940
OK.

00:41:41.210 --> 00:41:43.040
Save.

00:41:46.100 --> 00:41:52.720
This very quickly kicks
out a file that is now,

00:41:52.720 --> 00:41:54.210
whoops, got hinted tracks.

00:41:54.300 --> 00:41:56.700
So this is now a streaming
file that you put on your

00:41:56.700 --> 00:41:57.730
streaming server and it delivers.

00:41:57.740 --> 00:42:01.020
So yeah, to answer your question,
yeah you can do it as an MP4 file,

00:42:01.020 --> 00:42:02.600
you can do it as a .mov file.

00:42:02.600 --> 00:42:06.600
So yeah, you can save while doing your...

00:42:06.930 --> 00:42:12.530
and David One of the questions you said,
we just did that real quick.

00:42:12.530 --> 00:42:12.530
Obviously, if you had more

00:42:14.500 --> 00:42:19.680
On making this better?

00:42:19.680 --> 00:42:25.370
Probably taking the audio down
a notch or two with the bitrate,

00:42:25.460 --> 00:42:30.490
upping the bitrate on the video,
maybe trying to mess with the frame rate,

00:42:30.550 --> 00:42:35.680
because obviously more frames per
second at a bitrate gives you a

00:42:35.680 --> 00:42:40.970
less good-looking file than a less
frames per second at a given bitrate,

00:42:41.100 --> 00:42:46.680
because you're throwing the same amount
of bits at less frames than you're

00:42:46.680 --> 00:42:49.750
throwing at eight frames a second,
then you're able to throw

00:42:49.750 --> 00:42:51.840
more at it than at 12.

00:42:51.840 --> 00:42:55.400
So, you know,
changing frame rates does it.

00:42:55.470 --> 00:42:58.880
If you get really kind of in a jam,
especially with like

00:42:58.880 --> 00:43:02.000
the reds on that file,
I had a huge, huge problem with,

00:43:02.080 --> 00:43:05.060
and you know, you can go in and try
and take the red down,

00:43:05.060 --> 00:43:07.910
you know, which will give you a little
less blockiness when those

00:43:07.910 --> 00:43:08.500
frames are in the frame.

00:43:08.500 --> 00:43:11.480
So, you know, you can go in and,
you know,

00:43:11.480 --> 00:43:16.200
change the brightness and contrast
a little to try and give yourself a

00:43:16.410 --> 00:43:18.620
clearer looking file as it goes out.

00:43:18.620 --> 00:43:20.680
So, those are kind of the next steps.

00:43:20.740 --> 00:43:22.690
And then the step after
that is you just kind of go,

00:43:22.780 --> 00:43:24.560
hey, it looks good enough
and then you deliver it.

00:43:24.560 --> 00:43:28.900
I'd probably add to that maybe
aggressively cropping more.

00:43:28.910 --> 00:43:33.460
Depending on the footage, the ability to,
if the action's in the

00:43:33.460 --> 00:43:36.960
center of the screen,
or if it's focused in a given area,

00:43:36.960 --> 00:43:38.400
you know, I'll start.

00:43:38.400 --> 00:43:41.230
I'll start aggressively
cropping the outside frame more,

00:43:41.310 --> 00:43:46.660
scrub through it quickly and see if I'm
losing the action or the focus of it.

00:43:46.840 --> 00:43:51.400
So, I'm devoting all of my data to
the core action of the clip.

00:43:51.570 --> 00:43:54.190
I've not had a situation where
somebody's come back and said,

00:43:54.190 --> 00:43:55.500
man, that was really cropped.

00:43:55.500 --> 00:44:01.080
Instead, it's been, man,
that looked really good.

00:44:01.080 --> 00:44:03.610
More questions now, please.

00:44:04.630 --> 00:44:06.200
Are there any more
questions specifically?

00:44:06.200 --> 00:44:09.210
If you have a question,
please just feel free

00:44:09.550 --> 00:44:10.840
to hit a microphone.

00:44:10.840 --> 00:44:11.380
There's a couple.

00:44:11.380 --> 00:44:13.950
There's one there, there's one there,
and there's one over there.

00:44:15.700 --> 00:44:18.500
Could you share any experiences
you've had with some of the

00:44:18.500 --> 00:44:21.880
other MPEG-4 codecs like Thrivex,
DivX?

00:44:21.880 --> 00:44:25.880
Maybe if you've used Fink you could
try some of the Xvid implementations

00:44:25.880 --> 00:44:27.700
that have been out the last few months.

00:44:27.700 --> 00:44:29.690
I honestly can't comment on that.

00:44:29.700 --> 00:44:35.960
My experience with DivX has been
watching things that people have

00:44:36.000 --> 00:44:41.870
showed me on the computer that
they downloaded from Nasty Sources.

00:44:41.870 --> 00:44:41.870
So I've not encoded to DivX.

00:44:42.230 --> 00:44:49.740
I've not encoded to DivX for client
delivery files because my clients

00:44:49.800 --> 00:44:53.740
either go through Apple with their
delivery mechanism and we have to

00:44:53.740 --> 00:44:58.760
deliver the files that Apple needs,
or clients that I work with

00:44:58.760 --> 00:45:04.460
on our own without Apple,
we try and steer them in a certain

00:45:04.460 --> 00:45:09.180
direction that will try and keep them
sort of in line with what Apple is doing,

00:45:09.180 --> 00:45:12.360
so that the content is all
going to kind of look the same,

00:45:12.360 --> 00:45:13.960
behave the same, and act the same way.

00:45:14.040 --> 00:45:18.000
So I'm sorry, but I can't.

00:45:18.800 --> 00:45:22.030
Different MPEG-4 implementations
in the next year perhaps

00:45:22.040 --> 00:45:23.080
might work with each other.

00:45:23.190 --> 00:45:25.080
Yeah, it's what I'm hoping.

00:45:25.080 --> 00:45:29.990
Yes, sir.

00:45:32.700 --> 00:45:36.480
Hey, way to go!

00:45:36.480 --> 00:45:36.760
We love it.

00:45:39.120 --> 00:45:40.440
Can you please go to the microphone?

00:45:40.450 --> 00:45:43.120
It's for the sake of the translation.

00:45:43.180 --> 00:45:45.200
I really want to find out
what I sound like in Japanese.

00:45:45.200 --> 00:45:47.180
I think we all should.

00:45:51.400 --> 00:46:20.400
The HD we haven't really
had experience with yet,

00:46:20.430 --> 00:46:20.580
though.

00:46:20.580 --> 00:46:23.810
We can't wait for the client
that wants us to play with it,

00:46:23.910 --> 00:46:26.700
because that's how we most
often get to experiment with it.

00:46:26.810 --> 00:46:27.960
That's how we get new hardware?

00:46:27.960 --> 00:46:31.220
Oh, we have to buy something for that?

00:46:31.220 --> 00:46:36.320
As for the 8-bit versus the 10-bit, the…

00:46:36.630 --> 00:46:41.880
The main difference that we've
seen is on high contrast stuff.

00:46:41.900 --> 00:46:44.480
So like we have one place
that's a production company,

00:46:44.480 --> 00:46:46.250
Eyeball, that we do a lot of work with.

00:46:46.420 --> 00:46:48.930
They do a lot of graphics-based 3D stuff.

00:46:49.000 --> 00:46:51.870
It's all flat graphics,
but it's also really

00:46:51.870 --> 00:46:53.520
high contrast ratios.

00:46:53.520 --> 00:46:55.220
They like to push the envelope.

00:46:55.220 --> 00:47:00.780
And you start seeing a muddy quality to
your black levels that you don't see.

00:47:00.780 --> 00:47:04.720
You see a muddy on the 8-bit that you
don't see with the 10-bit at times.

00:47:04.720 --> 00:47:09.320
So there definitely is a value
difference that we've seen.

00:47:09.320 --> 00:47:15.350
And I think my personal opinion is some
of it's perceptual on the client's part,

00:47:15.380 --> 00:47:19.980
but I have actually seen it on
even just metered looks at it.

00:47:20.040 --> 00:47:24.290
So there is some slight
differences for that.

00:47:24.370 --> 00:47:27.950
But again, it's really got to be
high contrast differences,

00:47:27.950 --> 00:47:30.540
and it's really mostly
when it's graphics,

00:47:30.540 --> 00:47:34.340
so that there's really a
far-field color value difference.

00:47:34.340 --> 00:47:38.440
With video, yeah, captured video,
you can't tell that much of a difference.

00:47:38.440 --> 00:47:41.620
The human eye is sensitive,
but it's not that sensitive.

00:47:41.620 --> 00:47:45.930
And when you're going from
either 8- or 10-bit source to

00:47:45.930 --> 00:47:50.850
MPEG-4 or Sorensen or MPEG-1,
8- or 10-bit doesn't make all

00:47:50.850 --> 00:47:55.940
that much of a difference in kind
of a real-world implementation.

00:47:55.940 --> 00:47:58.350
Yeah, I was just curious if there
was any validity at all.

00:48:00.300 --> 00:48:02.480
There's sometimes, yeah,
there's obviously going to be

00:48:02.480 --> 00:48:04.050
validity to almost everything.

00:48:04.050 --> 00:48:06.300
So yeah, but, you know, go 10-bit.

00:48:06.550 --> 00:48:12.880
Okay, are there more questions?

00:48:12.880 --> 00:48:13.880
Yes.

00:48:13.920 --> 00:48:14.400
Oh, I'm sorry.

00:48:14.400 --> 00:48:15.550
Hi, um.

00:48:20.320 --> 00:48:21.700
That's the name of the session, man.

00:48:21.700 --> 00:48:25.890
But I do quite a bit of compression,
and I've--

00:48:26.300 --> 00:48:28.680
I found that the quality of the
MPEG-4 codec in QuickTime doesn't

00:48:28.680 --> 00:48:32.700
seem to quite match up to Sorenson 3,
that professional edition

00:48:32.700 --> 00:48:34.060
that's using QuickTime 5.

00:48:34.060 --> 00:48:35.300
I still use Sorenson 3.

00:48:35.430 --> 00:48:41.300
Is Apple's MPEG-4 implementation
going to be improving in the future?

00:48:41.300 --> 00:48:44.760
Well, I think the, if I may,
the important part of that

00:48:44.780 --> 00:48:48.010
was it was Sorenson Video 3,
and a lot of times we consider

00:48:48.010 --> 00:48:50.300
this Apple's MPEG-4 one.

00:48:50.300 --> 00:48:53.500
So, I mean, it's really,
it's got lots of room to grow, and yeah,

00:48:53.510 --> 00:48:57.300
there's room for improvement,
but I think that improvement's coming.

00:48:57.300 --> 00:49:02.050
And I don't see a reason
not to support a standard.

00:49:02.460 --> 00:49:07.240
We still do a lot of Sorenson
Video as well for given situations.

00:49:07.300 --> 00:49:10.870
I think right now we're
at a point where it's,

00:49:11.020 --> 00:49:15.170
depending on the type of
content that it's going to be,

00:49:15.360 --> 00:49:18.220
dictates somewhat what we might choose.

00:49:18.490 --> 00:49:20.300
But that's the only thing.

00:49:20.300 --> 00:49:22.300
We don't just pick Sorenson
Video because we think it looks better.

00:49:22.300 --> 00:49:26.260
We think it might look better
in some situations right now,

00:49:26.460 --> 00:49:29.300
but I wouldn't say that in 12
months or 18 months that that's

00:49:29.300 --> 00:49:31.300
necessarily going to be true.

00:49:31.300 --> 00:49:32.790
You have a movie trailer
site that you're working on.

00:49:34.700 --> 00:49:37.580
"I think Xtor still uses the Xtor 3.

00:49:37.580 --> 00:49:43.130
I haven't quite seen the big
MPEG-4 downfall from Apple." Well,

00:49:43.130 --> 00:49:47.830
if you look at a lot of the content on
the actual QuickTime "What's On" page,

00:49:47.830 --> 00:49:51.700
the music videos, those sort of things,
a lot of those are done in MPEG-4.

00:49:51.700 --> 00:49:52.700
That's a good question.

00:49:52.700 --> 00:49:54.700
They're done in streaming MPEG-4.

00:49:54.700 --> 00:49:56.700
And I know that because
I do a lot of them.

00:49:56.810 --> 00:49:59.690
And so, there is a transition.

00:49:59.700 --> 00:50:03.690
The movie trailers and things like that,
you know, one day MPEG-4, we'll see.

00:50:03.770 --> 00:50:07.560
That's the kind of question
that you can bring up at the

00:50:07.570 --> 00:50:09.700
QuickTime feedback session.

00:50:09.810 --> 00:50:11.700
Which I believe is exactly.

00:50:11.700 --> 00:50:13.700
We actually are in transition.

00:50:13.700 --> 00:50:16.720
And on the MPEG,
I mean on the movie trailer site,

00:50:16.790 --> 00:50:17.690
stay tuned.

00:50:17.820 --> 00:50:20.090
Yeah, one thing actually that was
brought up this morning,

00:50:20.110 --> 00:50:23.700
sorry Dennis, is that there's a standard
for the QuickTime,

00:50:23.700 --> 00:50:24.690
or the MPEG-4 decoder.

00:50:24.700 --> 00:50:26.700
There's not a standard for an encoder.

00:50:26.700 --> 00:50:31.600
So, as people write better
and more efficient and,

00:50:31.600 --> 00:50:33.690
you know, kind of.

00:50:34.940 --> 00:50:37.350
It's a transition.

00:50:37.350 --> 00:50:40.070
It's going to happen.

00:50:40.070 --> 00:50:49.720
Everything is going to happen eventually
to move along the sort of MPEG-4 thing.

00:50:49.720 --> 00:50:56.350
Because we all, you know, it's like,
it's a standard.

00:50:56.440 --> 00:51:01.680
That's what we want to
get behind and push.

00:51:01.680 --> 00:51:04.970
The important thing about a
standard is that 10 years from now,

00:51:04.970 --> 00:51:07.860
you know, the MPEG-4 files on Apple's
site will still play.

00:51:07.860 --> 00:51:10.640
10 years from now you can't
guarantee that the Sorenson 3

00:51:10.640 --> 00:51:11.660
file is still going to play.

00:51:11.660 --> 00:51:15.980
So we think that going forward
it's a good idea to move to MPEG-4.

00:51:21.300 --> 00:51:23.560
Thanks.

00:51:23.560 --> 00:51:25.300
Any other questions?

00:51:25.300 --> 00:51:27.890
Yes sir, if you could use the microphone.

00:51:31.300 --> 00:51:32.300
With fees involved?

00:51:32.300 --> 00:51:34.700
If that committee has its way,
I might be behind the times,

00:51:34.700 --> 00:51:35.770
but is that still an issue?

00:51:35.780 --> 00:51:37.370
With fees involved?

00:51:37.380 --> 00:51:38.020
MPEG-4.

00:51:38.020 --> 00:51:41.660
There is actually a fee
structure with MPEG-4,

00:51:41.660 --> 00:51:46.390
and we're actually lucky here
at the WWDC to have Larry Horn.

00:51:46.390 --> 00:51:47.840
He's in one of the sessions.

00:51:47.840 --> 00:51:50.290
Thursday morning at 9.

00:51:50.310 --> 00:51:51.870
Thursday morning at 9 o'clock.

00:51:51.880 --> 00:51:54.440
He is the man to talk to about fees.

00:51:54.440 --> 00:51:58.930
Should that be scary for developers,
or what's your opinion?

00:51:59.540 --> 00:52:02.050
Well, you know, there are fees to use
Windows Media as well.

00:52:02.060 --> 00:52:02.900
Like what?

00:52:02.900 --> 00:52:07.840
They came out with a licensing
structure a few months ago.

00:52:09.210 --> 00:52:11.200
Just like MPEG-4 does.

00:52:11.200 --> 00:52:13.200
That was widely publicized?

00:52:13.200 --> 00:52:15.200
Yeah.

00:52:17.760 --> 00:52:19.700
Okay,
probably not as widely as the MPEG-4.

00:52:19.700 --> 00:52:21.690
But it's an evolving standard.

00:52:21.720 --> 00:52:25.700
This is MPEG-4, like you said,
it's been out for us for about a year.

00:52:25.700 --> 00:52:29.870
If you look back in the history
of any codec or any file format,

00:52:29.890 --> 00:52:31.700
we're in 1.0.

00:52:31.700 --> 00:52:35.420
We'll soon be in 2.0, then 3.0, then 4.0.

00:52:36.200 --> 00:52:38.890
Any other questions about
encoding in general?

00:52:38.900 --> 00:52:42.170
Can we please also
have the slide machine?

00:52:47.000 --> 00:52:48.000
Yes sir?

00:52:48.000 --> 00:52:51.000
I was curious,
we're using right now the Squeeze for

00:52:51.000 --> 00:52:56.120
reason of quality at this point,
and also for batching.

00:52:56.120 --> 00:53:00.180
But using like,
let's say the QuickTime Pro,

00:53:00.180 --> 00:53:05.040
is there any kind of batching
functionality that I'm unaware of?

00:53:05.110 --> 00:53:06.040
QuickTime Pro?

00:53:06.040 --> 00:53:07.040
Yeah.

00:53:07.040 --> 00:53:08.040
Not...

00:53:09.510 --> 00:53:11.400
Through Final Cut you can get patching.

00:53:11.400 --> 00:53:16.400
Is that, with Sorensen it's basically
one clip and you can go to like

00:53:16.400 --> 00:53:18.060
several different bit rates.

00:53:18.060 --> 00:53:21.390
Is there a way to do multiple
source files to multiple outputs?

00:53:21.400 --> 00:53:23.330
To multiple outputs?

00:53:23.440 --> 00:53:24.400
Basically, yeah.

00:53:24.400 --> 00:53:27.400
Let's say you're using
Final Cut Pro in there.

00:53:27.400 --> 00:53:30.930
Well,
Apple kind of changed the thing after

00:53:30.930 --> 00:53:36.400
I handed in this presentation by
launching Final Cut 4 with Compressor.

00:53:36.400 --> 00:53:42.400
So, Final Cut 4 now comes with kind
of Apple's compression program.

00:53:42.400 --> 00:53:47.400
And I wasn't able to do the demo
using that in this presentation.

00:53:47.400 --> 00:53:50.700
I didn't really have the
hands-on with it that I wanted

00:53:50.700 --> 00:53:51.400
to be able to talk about it.

00:53:51.400 --> 00:53:53.400
But it is possible with it.

00:53:53.400 --> 00:53:55.700
It is possible with Compressor,
definitely, to do batches,

00:53:55.790 --> 00:53:57.400
multiple clips, multiple settings.

00:53:57.400 --> 00:53:59.400
It's like using Squeezer Cleaner.

00:53:59.400 --> 00:54:02.270
You have the ability
to queue up sequences,

00:54:02.270 --> 00:54:05.370
raw clips that have been marked,
and output multiple clips.

00:54:05.420 --> 00:54:11.880
So, out of something like Final Cut Pro,
you save everything you want

00:54:11.880 --> 00:54:13.400
to do as a unique sequence.

00:54:13.400 --> 00:54:17.360
You do those all and then
you go to batch export them.

00:54:17.400 --> 00:54:20.400
And you can batch export them
to not really multiple settings,

00:54:20.400 --> 00:54:23.400
but you could do your 300 run.

00:54:23.400 --> 00:54:27.200
And then you can go in and do
another batch export of your 56k run,

00:54:27.200 --> 00:54:28.400
that kind of deal.

00:54:28.400 --> 00:54:32.320
So, Final Cut will enable you to do batch
export using the QuickTime exporter

00:54:32.320 --> 00:54:34.360
without having Cleaner or Squeeze.

00:54:34.410 --> 00:54:40.750
But definitely, if you're in the market
to update Final Cut Pro,

00:54:40.750 --> 00:54:46.400
they did a really good job with that.

00:54:48.000 --> 00:54:53.000
One of the limitations of the MPEG-4
format was the annotation support.

00:54:53.000 --> 00:54:54.000
Yes.

00:54:54.000 --> 00:54:57.850
What tools are there for the limited
annotation support that is there?

00:54:58.050 --> 00:55:02.240
For the limited annotation support,
honestly don't know of any tools.

00:55:02.340 --> 00:55:07.090
The way I've done it is I've tried
putting in annotations before I export

00:55:07.150 --> 00:55:09.620
something in QuickTime Player and
see if it makes it through.

00:55:09.620 --> 00:55:12.090
So things like name can go through.

00:55:12.120 --> 00:55:14.700
Things like that.

00:55:14.750 --> 00:55:17.200
Honestly, I've only done it
through trial and error.

00:55:17.200 --> 00:55:20.180
There is a trick you
can use with QuickTime.

00:55:20.290 --> 00:55:22.200
Are you familiar with ref movies?

00:55:22.200 --> 00:55:26.520
So you can put annotations in a ref movie
and inside the ref movie call to it .mp4.

00:55:26.520 --> 00:55:29.600
And if you don't,
then the ref movie can actually

00:55:29.600 --> 00:55:33.310
use its annotations that show
up when you play the MP4 movie.

00:55:33.320 --> 00:55:33.800
Yeah.

00:55:33.800 --> 00:55:37.380
Anytime I've had to do something
with serious annotations where

00:55:37.380 --> 00:55:41.370
clients demanded the copyright and
the artist's website and all that,

00:55:41.370 --> 00:55:45.580
I've just taken the MPEG-4 file
that I put out and then do... Oh,

00:55:45.580 --> 00:55:49.740
my screen's on the... I do export in
a movie to QuickTime movie and you

00:55:49.740 --> 00:55:53.700
pass through the video and audio so
you've got no transcoding and you can

00:55:53.740 --> 00:55:56.100
put in the annotations you want to do.

00:55:56.100 --> 00:55:57.190
There is a way to.

00:56:00.010 --> 00:56:02.730
Not after the fact, not really, no.

00:56:02.800 --> 00:56:08.440
It's more function of the spec than
it is any limitation of QuickTime.

00:56:08.500 --> 00:56:10.010
Yes, sir?

00:56:10.200 --> 00:56:12.730
This might seem a bit ignorant,
I don't know,

00:56:12.730 --> 00:56:19.500
but is there any way of making
real-time encoding for the audio,

00:56:19.500 --> 00:56:23.200
just to AAC,
or is this a question for core audio?

00:56:23.200 --> 00:56:28.200
Things like QuickTime Broadcaster,
so real-time as in live streaming.

00:56:28.200 --> 00:56:34.200
I was actually thinking about the use
of game audio for real-time encoding

00:56:34.200 --> 00:56:37.460
and decoding of audio streams,
like input.

00:56:38.300 --> 00:56:50.580
"Well that's what iChat now does,
is real-time encoding." "I believe it is

00:56:50.580 --> 00:56:55.650
using MPEG-4." "That's probably a good
question for Frank Casanova." "That's

00:56:55.650 --> 00:56:57.300
a good question for Frank Casanova.

00:56:57.300 --> 00:57:00.640
No, we just got it yesterday,
so we've been playing with it in our

00:57:00.680 --> 00:57:04.680
off-time." "Ask us tomorrow." "Yeah,
ask us tomorrow." But no,

00:57:04.680 --> 00:57:06.300
I do believe that it's MPEG-4.

00:57:06.300 --> 00:57:10.420
It seems to me that Apple would want to
use MPEG-4 in that because everything

00:57:10.420 --> 00:57:12.300
else they're pushing is MPEG-4.

00:57:12.300 --> 00:57:17.300
It could very well be H.263 though,
which... "It is H.263."

00:57:17.300 --> 00:57:22.510
"It is H.263." "No,
thank you." "There we go." "As MPEG-4,

00:57:22.510 --> 00:57:26.100
yeah." "MPEG-4 short header."

00:57:26.620 --> 00:57:27.600
Okay.

00:57:27.600 --> 00:57:28.410
Sure.

00:57:28.520 --> 00:57:30.350
But yeah,
something like QuickTime Broadcaster,

00:57:30.350 --> 00:57:34.850
you can do live encoding
of AAC audio streams.

00:57:36.210 --> 00:57:39.440
Okay, if there are no more questions,
I'd like to thank you.

00:57:39.440 --> 00:57:41.000
Oh, I'm sorry.

00:57:41.110 --> 00:57:43.540
Please, if you have a question,
please just hit a mic.

00:57:43.540 --> 00:57:44.170
Don't be shy.

00:57:44.270 --> 00:57:45.200
Well, don't hit it.

00:57:45.200 --> 00:57:49.060
There's a lot of talk about
the scalability of MPEG-4.

00:57:49.800 --> 00:57:52.920
So the videos I've seen
have either been 3D,

00:57:52.920 --> 00:57:56.800
like this morning, or streaming,
or downloads.

00:57:56.800 --> 00:58:02.210
How about stuff that's at
least DVD resolution or higher?

00:58:02.600 --> 00:58:05.190
"Either with Apple's coding,
or as you're saying in the future

00:58:05.190 --> 00:58:08.680
there may be better encoders?" Yes,
well there's something that

00:58:08.680 --> 00:58:12.600
was mentioned in the MPEG-4
session earlier this morning,

00:58:12.630 --> 00:58:15.600
as well as at the QuickTime keynote.

00:58:15.600 --> 00:58:19.920
The AVC, Advanced Video Coding.

00:58:20.000 --> 00:58:24.780
And so that is kind of what
is pegged towards the higher

00:58:24.790 --> 00:58:28.600
bitrate DVD quality files.

00:58:28.600 --> 00:58:32.600
And so, you know, Apple of course doesn't
comment on future plans,

00:58:32.600 --> 00:58:35.600
but if they were to implement that,
that's definitely the way to go.

00:58:35.600 --> 00:58:40.110
So, other than that, yeah, you just,
you can do MPEG-4 files at, you know,

00:58:40.110 --> 00:58:41.600
monstrous bitrates.

00:58:41.600 --> 00:58:43.550
And you get very good quality.

00:58:43.630 --> 00:58:48.600
And we're even doing some experimenting
with some set-top box playback

00:58:48.600 --> 00:58:50.600
and that kind of thing with it.

00:58:50.600 --> 00:58:52.600
So it's completely viable.

00:58:52.600 --> 00:58:53.600
It looks very nice.

00:58:53.600 --> 00:58:58.600
And it'll look probably even better
in the future as it goes forward.

00:58:58.600 --> 00:59:03.820
I think the thing that we're liking about
it so far is the file sizes involved,

00:59:03.820 --> 00:59:10.600
even for a really heavy duty,
high quality, are still very attractive.

00:59:10.600 --> 00:59:12.600
They're not huge.

00:59:12.600 --> 00:59:16.640
Yeah, and also Apple's implementation
of MPEG-4 and AAC doesn't

00:59:16.640 --> 00:59:18.600
tax the processor very well.

00:59:18.600 --> 00:59:20.570
It's optimized to run especially on a G4.

00:59:20.600 --> 00:59:26.120
So playing back a, you know,
640x480 MPEG-4 file with AAC audio

00:59:26.640 --> 00:59:27.600
plays back a lot smoother than a G4.

00:59:27.670 --> 00:59:28.590
Yeah.

00:59:28.600 --> 00:59:33.060
And that's something that a Sorenson
3 QDesign music profile did because

00:59:33.120 --> 00:59:35.600
especially QDesign is a processor hog.

00:59:35.600 --> 00:59:38.900
So it does,
doing the big things kind of pays off in

00:59:38.900 --> 00:59:43.600
MPEG-4 because you can throw the bits you
need to at it to get the video quality.

00:59:43.600 --> 00:59:49.560
And then you get benefits
because of the low processor tax.

00:59:49.650 --> 00:59:53.430
So, yeah, it's definitely something,
if that's where you're looking to go,

00:59:53.430 --> 00:59:56.570
throw lots of bits at MPEG-4
and see what you come up with.

00:59:56.600 --> 00:59:58.600
We've actually done a lot of
demos at Macworld and NAB.

00:59:58.600 --> 01:00:02.690
The basic comparison we show
is an MPEG-2 file encoded at,

01:00:02.690 --> 01:00:05.600
say, X megabits, 4 or 5 megabits.

01:00:05.600 --> 01:00:08.230
We actually do an MPEG-4
version of the same file,

01:00:08.240 --> 01:00:10.600
the same dimensions,
at half the data rate.

01:00:10.600 --> 01:00:13.590
And you're hard pressed to tell the
difference between the two files.

01:00:17.100 --> 01:00:18.100
Yes sir?

01:00:18.100 --> 01:00:19.100
One more general question.

01:00:19.100 --> 01:00:30.500
Can we expect to see DRM on video
like it is in the iCAM stores?

01:00:31.500 --> 01:00:33.580
Don't announce future products,
obviously,

01:00:33.580 --> 01:00:38.350
but this Thursday we have a session,
the feedback forum 011,

01:00:38.350 --> 01:00:41.760
with Frank Casanova is our director,
the person to ask about that.

01:00:41.760 --> 01:00:43.270
DRM is an interesting situation.

01:00:43.290 --> 01:00:46.690
I mean, DRM, there's a lot of different
opinions right now about DRM.

01:00:46.700 --> 01:00:53.580
The person to really ask that question of
is Frank Casanova in the feedback forum.

01:00:53.580 --> 01:00:55.050
We're more the how guys.

01:00:55.050 --> 01:00:58.840
We're the guys that actually have
to take the files and encode.

01:00:58.840 --> 01:01:01.160
We're not much on the
product marketing side.

01:01:01.500 --> 01:01:01.820
Thank you.

01:01:03.900 --> 01:01:05.880
and David If I knew I couldn't tell you.

01:01:05.880 --> 01:01:06.880
And I just don't know.

01:01:06.880 --> 01:01:07.880
Yeah.

01:01:07.880 --> 01:01:08.880
Because they don't tell me anything.

01:01:08.880 --> 01:01:09.880
If he knew he wouldn't tell us, yeah.

01:01:12.500 --> 01:01:14.930
What do you think of the
Sorenson MPEG-4 Compressor

01:01:14.930 --> 01:01:16.500
compared to Apple's Compressor?

01:01:43.670 --> 01:01:48.530
Sorenson has done a little more
extra work on their codec because

01:01:48.530 --> 01:01:51.050
it came out later than Apple's.

01:01:51.050 --> 01:01:54.270
So they have a little
more under the hood.

01:01:54.290 --> 01:01:59.410
But they're both very good,
very viable MPEG-4 video codecs.

01:02:02.400 --> 01:02:04.400
And are there any more questions?

01:02:04.400 --> 01:02:07.760
If there's not,
I would definitely like to thank

01:02:07.760 --> 01:02:09.400
you guys for your time today.

01:02:09.400 --> 01:02:11.400
It's been very good.

01:02:11.400 --> 01:02:13.400
In wrapping up,
I think there was a couple of,

01:02:13.400 --> 01:02:15.400
a little bit of information
Dennis has here.

01:02:15.410 --> 01:02:17.400
Yeah, there are a couple more
sessions on MPEG-4.

01:02:17.400 --> 01:02:21.020
You guys all had this scheduled,
but coming up tomorrow there

01:02:21.020 --> 01:02:25.590
are some specific sessions on
3GPP in the afternoon at 2:00,

01:02:25.590 --> 01:02:28.400
and then there's one at 5:00.

01:02:28.400 --> 01:02:31.940
And then again, the real story about
MPEG-4 visual licensing,

01:02:31.940 --> 01:02:33.400
this is the Larry Horn.

01:02:33.400 --> 01:02:38.510
Larry Horn is the president,
director of a group called MPEG-LA,

01:02:38.510 --> 01:02:41.400
which is the MPEG... VP, thank you.

01:02:41.400 --> 01:02:46.350
He is the, sort of the,
at the forefront of MPEG-4 licensing,

01:02:46.350 --> 01:02:50.400
so I'm sure he'd love to
hear your feedback as well.

01:02:52.340 --> 01:02:52.530
Yes.

01:02:52.540 --> 01:02:58.020
And again,
please come to the 3.30 Thursday session,

01:02:58.020 --> 01:02:59.700
the QuickTime Feedback Forum.

01:02:59.700 --> 01:03:01.990
This is the place where
you've got Frank Casanova,

01:03:01.990 --> 01:03:05.370
who heads up the product marketing team,
but you also have some real key

01:03:05.370 --> 01:03:07.100
engineers on the QuickTime team.

01:03:07.100 --> 01:03:11.150
And this is an incredible opportunity
for you guys to tell us things

01:03:11.160 --> 01:03:15.310
and for us to tell you things,
what we can tell you, about what we think

01:03:15.310 --> 01:03:17.080
about different things.

01:03:17.080 --> 01:03:18.590
So please come.

01:03:18.600 --> 01:03:19.520
Let us know what you think.

01:03:19.540 --> 01:03:22.080
One more question.

01:03:22.300 --> 01:03:24.290
Please.

01:03:25.600 --> 01:03:30.590
You said there was this new codec,
is it AVC?

01:03:30.620 --> 01:03:34.600
Advanced Video Coding,
it's part of the MPEG-4 specification.

01:03:34.600 --> 01:03:38.070
Is there going to be anything going
on where we'll hear more about that?

01:03:39.030 --> 01:03:41.000
Probably 3:30 on Thursday.

01:03:41.000 --> 01:03:43.000
Thursday at 3:30, ask Frank Casanova.

01:03:43.000 --> 01:03:48.000
He'll be playing guitar,
he's answering all the MPEG-4 questions.

01:03:48.000 --> 01:03:50.000
Watch his eyebrows.

01:03:52.900 --> 01:03:53.400
Yes?

01:03:53.400 --> 01:03:56.220
I've been to the Semtech 4
licensing session all day,

01:03:56.250 --> 01:03:58.270
scheduled for that room across the hall.

01:03:59.910 --> 01:04:04.560
and David That's going
to be a good session.

01:04:04.560 --> 01:04:06.320
I'm going to be there.

01:04:06.600 --> 01:04:07.960
and it'll be in a bigger room.

01:04:07.990 --> 01:04:10.390
Okay, well again,
thank you very much for your time.

01:04:10.400 --> 01:04:11.780
- Thank you.