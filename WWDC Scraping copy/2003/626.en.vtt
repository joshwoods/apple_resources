WEBVTT

00:00:25.840 --> 00:00:27.720
I'm really glad to be here
today to talk to you about

00:00:27.720 --> 00:00:29.480
Xserve RAID and deploying it.

00:00:29.520 --> 00:00:31.620
My name is Alex Grossman.

00:00:31.620 --> 00:00:33.560
I'm a director of hardware
storage for Apple.

00:00:33.560 --> 00:00:36.280
And today I think we're going
to have a little bit of fun.

00:00:36.280 --> 00:00:41.220
Let me start with saying that there's
an IT mantra that's actually out there.

00:00:41.220 --> 00:00:42.840
There's a couple things
that it's covered.

00:00:42.840 --> 00:00:46.810
The first thing regarding storage
is that today we're seeing

00:00:46.810 --> 00:00:49.160
storage needs grow 100% yearly.

00:00:49.160 --> 00:00:54.020
And that's not only because everybody's
downloading from the iTunes Music Store,

00:00:54.150 --> 00:00:57.090
but it's really because people are
actually building more content.

00:00:57.180 --> 00:01:00.480
And a little bit because they're
downloading from the iTunes Music Store.

00:01:01.880 --> 00:01:03.910
The other thing we're seeing
is that managing storage is

00:01:03.910 --> 00:01:05.620
becoming a full-time job.

00:01:05.810 --> 00:01:08.970
It used to be where you deployed a
server and you had a hard drive in

00:01:08.970 --> 00:01:12.380
the server and maybe you had another
hard drive for storage and you kept

00:01:12.380 --> 00:01:15.720
deploying servers and everyone had
storage and as you managed the server,

00:01:15.720 --> 00:01:16.880
you managed the storage.

00:01:16.930 --> 00:01:19.660
But as things moved to more
network-attached storage and

00:01:19.660 --> 00:01:22.800
more direct-attached storage and
also storage-area networking,

00:01:23.070 --> 00:01:26.110
storage management
becomes a full-time job.

00:01:26.580 --> 00:01:28.900
And then the other thing is that people
are starting to classify storage.

00:01:28.900 --> 00:01:31.090
So there's things coming
up called storage classes,

00:01:31.090 --> 00:01:33.180
and we'll talk a little bit
about what storage classes are.

00:01:33.180 --> 00:01:37.270
And what they're doing is they're,
they're the attempt to reduce the

00:01:37.270 --> 00:01:39.680
cost and complexity in the IT world.

00:01:40.100 --> 00:01:41.640
And of course,
configuration and planning.

00:01:41.640 --> 00:01:44.390
That's the one thing that's
key to efficient deployments.

00:01:44.400 --> 00:01:46.340
Because today,
a lot of people deploy storage

00:01:46.390 --> 00:01:48.010
and they do it in a haphazard way.

00:01:48.010 --> 00:01:50.220
And it's not purposely,
it's just that storage

00:01:50.220 --> 00:01:52.400
needs are growing so fast,
how do we keep up?

00:01:52.460 --> 00:01:54.630
And then of course, storage cost.

00:01:54.630 --> 00:01:57.540
Well,
Apple with Xserve RAID has really reduced

00:01:57.540 --> 00:02:02.420
the cost of storage and we've gotten a
lot of heat from our competitors on that.

00:02:03.020 --> 00:02:04.390
So what are we really doing about that?

00:02:04.490 --> 00:02:09.230
Well, the first thing is Xserve RAID is
the highest density in a 3U space.

00:02:09.330 --> 00:02:13.120
In fact, I have about 17 terabytes of
storage up here on the stage

00:02:13.400 --> 00:02:15.720
with me and it's a little warm,
but it's powerful.

00:02:15.720 --> 00:02:16.850
Feels really good.

00:02:19.200 --> 00:02:22.150
And of course,
fast deployment and easy-to-use

00:02:22.160 --> 00:02:25.500
tools make storage installation
and management a lot easier.

00:02:25.500 --> 00:02:28.300
So if you're going to deploy something,
you want to deploy it fast.

00:02:28.300 --> 00:02:31.530
And the one thing you have to remember
about storage is that you deploy it

00:02:31.560 --> 00:02:32.830
once and you don't touch it every day.

00:02:32.840 --> 00:02:36.020
I mean, most of you, you'll be in Word,
you'll be in Excel.

00:02:36.020 --> 00:02:38.880
If you're coding,
you're going to use tools every day,

00:02:38.880 --> 00:02:39.910
the same tools.

00:02:39.920 --> 00:02:42.680
But storage, you set it up once,
and the only time you go back

00:02:42.760 --> 00:02:45.870
to it is when you have a problem
or when you want to add more.

00:02:45.880 --> 00:02:47.650
So if you have tools
that are easy to use,

00:02:47.650 --> 00:02:49.000
it just makes that faster.

00:02:49.000 --> 00:02:51.830
And of course,
Xserve RAID has been built to have the

00:02:51.830 --> 00:02:56.210
maximum versatility and flexibility to be
able to get you over this storage class

00:02:56.210 --> 00:02:58.700
issue and use it in many different areas.

00:02:58.700 --> 00:03:01.650
And then of course, when it comes to
configuring and planning,

00:03:01.650 --> 00:03:03.660
there's just no substitute for hard work.

00:03:03.780 --> 00:03:04.840
You just got to do it.

00:03:04.920 --> 00:03:07.510
Now,
there's methodology you should follow,

00:03:07.610 --> 00:03:08.980
but you just have to do it.

00:03:09.060 --> 00:03:12.140
And then of course, Xserve RAID,
it's inexpensive.

00:03:12.140 --> 00:03:16.580
So what we're going to try to go through
today is some really simple stuff.

00:03:16.660 --> 00:03:18.460
We're going to introduce
you to Xserve RAID.

00:03:18.520 --> 00:03:21.260
If you haven't seen the product,
get an idea why Apple did it.

00:03:21.340 --> 00:03:23.000
I mean, it's kind of interesting.

00:03:23.000 --> 00:03:25.200
Apple has not really been in
a high availability storage

00:03:25.200 --> 00:03:26.380
business until this year.

00:03:26.380 --> 00:03:28.480
In fact, Xserve RAID didn't launch.

00:03:28.480 --> 00:03:30.080
It only launched four months ago.

00:03:30.080 --> 00:03:33.310
And if you look at most other
vendors of all kinds of hardware,

00:03:33.310 --> 00:03:36.340
including servers, they've been in a
RAID business for many years.

00:03:36.340 --> 00:03:38.980
Then we're going to go through a
little bit of speeds and feeds,

00:03:38.990 --> 00:03:40.880
not a lot, but just a little bit
about the architecture.

00:03:40.880 --> 00:03:44.370
Because it's completely different than
anything that anyone else has done.

00:03:44.380 --> 00:03:47.080
And then we're going to talk about
some of the applications in IT,

00:03:47.080 --> 00:03:48.450
some of the storage classing.

00:03:48.480 --> 00:03:50.310
Talk about planning considerations.

00:03:50.320 --> 00:03:52.160
And then of course,
deployment and configurations.

00:03:52.160 --> 00:03:55.150
And then I'm going to give you
a sneak peek at RAID admin,

00:03:55.150 --> 00:03:58.820
the newest, latest version, 1.1,
which isn't out yet.

00:03:58.870 --> 00:04:02.260
And so you get an idea of
what we're doing to progress.

00:04:02.260 --> 00:04:05.540
And RAID admin is our
management tool for Xserve RAID.

00:04:05.540 --> 00:04:07.330
You'll get an idea of how
we're progressing that along.

00:04:07.340 --> 00:04:09.260
So the first thing is an intro.

00:04:09.260 --> 00:04:11.080
So what is Xserve RAID?

00:04:11.100 --> 00:04:12.840
Well, there's a lot of them here.

00:04:12.840 --> 00:04:14.590
These are the big boxes.

00:04:14.600 --> 00:04:16.620
So there are three U-high box.

00:04:16.620 --> 00:04:18.420
That means they're five
and a quarter inches.

00:04:18.530 --> 00:04:18.760
They're 19 inches tall.

00:04:18.760 --> 00:04:19.820
They're 19 inches wide.

00:04:19.840 --> 00:04:22.260
Fully loaded,
they weigh about 110 pounds.

00:04:22.260 --> 00:04:26.330
So the first thing to remember when
deploying one is don't do it yourself.

00:04:26.340 --> 00:04:27.600
It's the buddy system.

00:04:27.600 --> 00:04:29.560
And never put them in
the top of the rack.

00:04:29.560 --> 00:04:30.690
It's always a good thing.

00:04:30.720 --> 00:04:32.920
And if you do, don't stand under it.

00:04:33.040 --> 00:04:37.210
And it's massive in size,
but it's also massive in capacity.

00:04:37.220 --> 00:04:41.130
So it boasts today the highest
capacity in a 3U system.

00:04:41.140 --> 00:04:43.020
And of course, that changes every day.

00:04:43.020 --> 00:04:44.960
Hard drives get faster and bigger.

00:04:44.960 --> 00:04:48.180
And of course, Apple is always on the
cutting edge with that.

00:04:48.260 --> 00:04:49.140
We did that with XServe.

00:04:49.140 --> 00:04:53.020
We started with 60 gig hard drives,
and now we have 180 gig hard drives,

00:04:53.060 --> 00:04:54.090
same as with XServe RAID.

00:04:54.100 --> 00:04:57.840
And then the other thing is that
XServe RAID is a high availability

00:04:57.840 --> 00:05:02.200
storage system that uses an advanced
architecture that is unlike what

00:05:02.380 --> 00:05:03.590
a lot of other people have done.

00:05:03.600 --> 00:05:06.790
In fact, we really think it's a precursor
to what we're seeing from

00:05:06.790 --> 00:05:08.000
competitors in the future.

00:05:08.000 --> 00:05:12.220
It uses ATA hard drives and a fiber
channel back end to the host connection.

00:05:12.220 --> 00:05:14.390
It's something that you're
hearing more and more about,

00:05:14.560 --> 00:05:17.150
but Apple was really the first
tier one vendor to pioneer it and

00:05:17.200 --> 00:05:18.230
put it in to a high availability.

00:05:18.240 --> 00:05:22.450
And then of course,
it's Apple's ease of use.

00:05:22.600 --> 00:05:25.700
Remote monitoring and management,
similar to what we've done with XServe.

00:05:25.860 --> 00:05:28.610
And in every generation,
we think we're getting a little better.

00:05:28.620 --> 00:05:30.950
And I'm going to give you a sneak
preview of our next generation of

00:05:30.950 --> 00:05:32.140
remote monitoring and management.

00:05:32.170 --> 00:05:34.150
And then of course,
industry leading value.

00:05:34.180 --> 00:05:37.390
And we're talking two and a half
terabytes of storage for around 10 grand.

00:05:37.420 --> 00:05:39.860
It's not too bad.

00:05:40.160 --> 00:05:42.620
Now, we designed Xserve
RAID for nonstop operation.

00:05:42.620 --> 00:05:44.680
A lot of definitions of what that means.

00:05:44.680 --> 00:05:47.980
Basically, it's a high availability,
fault-tolerant architecture.

00:05:47.980 --> 00:05:50.450
That means if you have a power
supply fail in the system,

00:05:50.450 --> 00:05:52.330
there's a redundant one to take over.

00:05:52.330 --> 00:05:54.690
That means if you have a
cooling unit fail in the system,

00:05:54.690 --> 00:05:56.000
there's redundant cooling.

00:05:56.000 --> 00:05:59.180
You can build protected RAID sets
if you have a hard drive fail,

00:05:59.180 --> 00:06:01.590
there's another hard
drive to take over for it.

00:06:01.670 --> 00:06:04.920
And then we even have hot sparing
of hard drives so that if one fails,

00:06:04.920 --> 00:06:08.430
another one will take over, rebuild,
and completely protect you.

00:06:08.440 --> 00:06:10.060
And that's the way we
designed the system.

00:06:11.200 --> 00:06:13.310
And then, of course,
we wanted to make it complete.

00:06:13.440 --> 00:06:17.100
The thing we realized is that fiber
channel storage was pretty expensive.

00:06:17.100 --> 00:06:20.100
And it wasn't just the storage systems,
it was the infrastructure.

00:06:20.100 --> 00:06:22.220
So we lowered the cost,
not only of the storage,

00:06:22.240 --> 00:06:24.520
but we lowered the cost
of the infrastructure.

00:06:24.520 --> 00:06:27.800
We built a fiber channel PCI card
that we sell at about a third of the

00:06:27.860 --> 00:06:29.630
price of what others sell it for.

00:06:29.640 --> 00:06:31.740
And we can't figure out
why they charge so much.

00:06:31.740 --> 00:06:35.050
And then, of course,
we include everything you need to

00:06:35.050 --> 00:06:38.500
complete it and to work with an Xserve,
a G4, a G5.

00:06:40.940 --> 00:06:43.100
And it's not just for the rack,
because not everybody

00:06:43.100 --> 00:06:45.200
has a rack installation,
and not everybody,

00:06:45.230 --> 00:06:47.210
although I think everyone
should run an Xserve,

00:06:47.270 --> 00:06:48.480
not everybody's going to run an Xserve.

00:06:48.500 --> 00:06:51.560
And there are other deployment
areas where Xserve RAID is great,

00:06:51.760 --> 00:06:52.770
such as in the video area.

00:06:52.780 --> 00:06:56.010
So you can take a product like the
Extrovert from Extreme Mac that takes

00:06:56.010 --> 00:06:57.630
the Xserve RAID and puts it on its side.

00:06:57.660 --> 00:06:59.720
Two and a half terabytes on your desktop.

00:07:02.570 --> 00:07:03.590
or under your desk.

00:07:03.610 --> 00:07:04.540
It's not terrible.

00:07:04.540 --> 00:07:07.140
Well, let's talk about speeds and feeds.

00:07:07.180 --> 00:07:09.380
Well, I was going to give you
all the speeds and feeds,

00:07:09.380 --> 00:07:11.180
and I decided, you know what,
let's really look at the

00:07:11.180 --> 00:07:13.760
numbers and see what they mean,
because speeds and feeds are useless

00:07:13.760 --> 00:07:16.460
if you really can't figure out
how they work in your application.

00:07:16.460 --> 00:07:19.720
So we have 14 independent drive channels.

00:07:19.720 --> 00:07:21.050
What does that mean?

00:07:21.060 --> 00:07:22.000
We say that all the time.

00:07:22.060 --> 00:07:24.130
There's 14 hard drives
in an Xserver RAID.

00:07:24.160 --> 00:07:25.340
I'll save you the counting.

00:07:25.340 --> 00:07:27.240
There's 14 independent drive channels.

00:07:27.240 --> 00:07:28.150
Why do we do it?

00:07:28.220 --> 00:07:30.140
Well, first of all,
we didn't want any inner

00:07:30.140 --> 00:07:30.970
drive dependencies.

00:07:30.980 --> 00:07:32.400
Why?

00:07:32.400 --> 00:07:36.080
Because any time you have a dependency
between one drive and another,

00:07:36.080 --> 00:07:38.300
you limit the reliability of the system.

00:07:38.320 --> 00:07:41.860
So if you've used SCSI before,
most RAID systems are

00:07:41.860 --> 00:07:44.910
SCSI or fiber channel,
all the drives have dependencies.

00:07:44.920 --> 00:07:47.520
A SCSI bus is a dependent bus.

00:07:47.520 --> 00:07:48.980
They all share a common bus.

00:07:48.980 --> 00:07:51.470
If something happens
on one side of the bus,

00:07:51.470 --> 00:07:52.340
guess what?

00:07:52.540 --> 00:07:55.220
It can affect the other side of the bus.

00:07:55.220 --> 00:07:58.820
Well, since every drive's on its own bus,
there's 14 independent ones.

00:07:58.820 --> 00:08:02.970
People who do very high-end servers
and storage systems and people

00:08:03.010 --> 00:08:05.970
who work in the video world have
learned a long time ago that you put

00:08:05.970 --> 00:08:08.000
independent buses in for performance.

00:08:08.000 --> 00:08:11.540
It's the reason they have different
independent PCI buses on very

00:08:11.540 --> 00:08:13.460
high-performance computer systems.

00:08:13.500 --> 00:08:16.170
And also, the bandwidth.

00:08:16.200 --> 00:08:19.240
There's 1400 megabytes per
second internal bandwidth.

00:08:19.300 --> 00:08:20.620
How do we get there?

00:08:20.850 --> 00:08:21.860
That's a speed and feed number.

00:08:21.900 --> 00:08:24.050
Well,
if there's 14 independent channels and

00:08:24.050 --> 00:08:27.800
each channel is 100 megabytes a second,
this is first-grade math,

00:08:27.800 --> 00:08:30.440
100 times 14 is 1400 megs a second.

00:08:30.500 --> 00:08:31.690
And that's a burst rate.

00:08:31.700 --> 00:08:32.200
Right?

00:08:33.490 --> 00:08:35.430
An individual spin up
and spin down control.

00:08:35.440 --> 00:08:36.240
Who cares?

00:08:36.240 --> 00:08:38.620
Well, hard drives take a lot of power.

00:08:38.730 --> 00:08:41.580
You can imagine that it's costing
us a lot to run 17 terabytes here.

00:08:41.590 --> 00:08:44.760
But hard drives take a lot of power,
and to make it easier to

00:08:44.760 --> 00:08:47.530
deploy those in a rack,
you want to limit the amount

00:08:47.530 --> 00:08:51.080
of power surge you have,
or what they call the break current.

00:08:51.100 --> 00:08:55.240
So you don't want to blow a breaker every
time you turn a rack of Xserve RAIDs on.

00:08:57.200 --> 00:09:16.000
[Transcript missing]

00:09:16.210 --> 00:09:18.100
and a passive data path
through the midplane.

00:09:18.100 --> 00:09:19.260
What the heck is that?

00:09:19.260 --> 00:09:20.240
First of all, what's a midplane?

00:09:20.240 --> 00:09:23.100
Well, in RAID systems,
unlike computer systems,

00:09:23.100 --> 00:09:24.440
computer systems have backplanes.

00:09:24.440 --> 00:09:26.410
What's cool about the backplane?

00:09:26.420 --> 00:09:27.430
Everything plugs into it.

00:09:27.500 --> 00:09:31.840
Well, on the RAID system,
in the middle of it, there's a backplane.

00:09:31.840 --> 00:09:33.730
And because it's in the middle,
we call it a midplane.

00:09:33.730 --> 00:09:35.040
And what plugs into it?

00:09:35.120 --> 00:09:36.150
Well, everything.

00:09:36.160 --> 00:09:39.160
The hard drives plug into it,
the power supplies plug into it,

00:09:39.230 --> 00:09:41.990
the RAID controllers plug into it,
the cooling units plug into it.

00:09:42.030 --> 00:09:43.140
It's all in the middle.

00:09:43.820 --> 00:09:46.450
But what's nice about it is there's
an independent path from every

00:09:46.520 --> 00:09:49.060
hard drive to the RAID controller
going through the midplane,

00:09:49.060 --> 00:09:50.090
but it's passive.

00:09:50.090 --> 00:09:51.420
It's like a connector.

00:09:51.420 --> 00:09:54.620
And on other RAID systems,
there's actually logic on the midplane.

00:09:54.620 --> 00:09:56.050
Is that good?

00:09:56.050 --> 00:09:59.070
Well, it's good until the logic fails,
and then you have a

00:09:59.070 --> 00:09:59.790
single point of failure.

00:09:59.800 --> 00:10:04.000
So we've tried to eliminate single
points of failure for reliability.

00:10:04.000 --> 00:10:09.300
And how about a dedicated 64-bit,
66 MHz PCI bus to the drives?

00:10:09.300 --> 00:10:13.180
So I talked about 1,400 megabytes
a second internal bandwidth.

00:10:14.050 --> 00:10:16.920
Well, I lied when we get to
the RAID controllers,

00:10:17.000 --> 00:10:20.990
because each RAID controller has 533
megabytes a second of internal bandwidth.

00:10:21.020 --> 00:10:25.070
So it's really about 1,000 megabytes
of internal bandwidth within a system.

00:10:25.120 --> 00:10:32.930
And because we have an independent
coprocessing system in each

00:10:32.930 --> 00:10:36.560
one of the RAID controllers,
events that happen on the PCI bus

00:10:36.680 --> 00:10:41.660
from the drive don't affect any
of the performance of the system.

00:10:43.460 --> 00:10:47.360
Now the other area that we talk about
are dual independent RAID controllers.

00:10:47.390 --> 00:10:48.630
So what are they?

00:10:48.720 --> 00:10:51.000
Well,
essentially it means that each controller

00:10:51.000 --> 00:10:52.700
only has to manage seven drives.

00:10:52.700 --> 00:10:54.730
So we have two of them,
we have 14 drives,

00:10:54.730 --> 00:10:58.200
each one manages seven drives,
it's less work for the RAID controller.

00:10:58.200 --> 00:11:00.470
They're happy,
they get to work nine to five.

00:11:00.480 --> 00:11:03.800
But what that really means is that
it leads to higher throughput.

00:11:05.100 --> 00:14:01.800
[Transcript missing]

00:14:02.500 --> 00:14:05.840
And then the other thing that
I think is really important is

00:14:05.840 --> 00:14:08.390
that we can use Apple RAID that's
built in our operating system.

00:14:08.400 --> 00:14:10.640
This is the nice thing about being
close to the operating system.

00:14:10.640 --> 00:14:14.000
We can use Apple RAID to
build compound RAID sets.

00:14:14.000 --> 00:14:14.990
What are they?

00:14:15.020 --> 00:14:17.690
So that means if we take a
RAID 5 and a RAID 5 and put

00:14:17.690 --> 00:14:20.950
them together and stripe them,
we'll build a RAID 50.

00:14:20.950 --> 00:14:23.500
And we can get the maximum
performance out of that because in

00:14:23.500 --> 00:14:25.270
the operating system we can tune that.

00:14:25.270 --> 00:14:27.590
And we're able to,
so it's really exciting.

00:14:28.900 --> 00:16:25.500
[Transcript missing]

00:16:26.380 --> 00:16:27.240
So how about deploying it?

00:16:27.340 --> 00:16:31.320
Well, in talking about the applications,
the first thing you should see is

00:16:31.320 --> 00:16:32.650
how do you deploy it physically?

00:16:32.660 --> 00:16:35.730
So I mentioned they
need to be rack-mounted,

00:16:35.790 --> 00:16:37.950
or they need to have an
enclosure that holds them.

00:16:38.000 --> 00:16:43.400
What's really important in the IT world
today is performance and reliability.

00:16:43.400 --> 00:16:44.950
That's optimum, right?

00:16:45.040 --> 00:16:46.040
That's what you have to have.

00:16:46.080 --> 00:16:48.210
So how do you achieve that?

00:16:48.240 --> 00:16:51.290
The first thing I can tell you is
spend the money on a good rack.

00:16:51.360 --> 00:16:52.560
Why?

00:16:52.560 --> 00:16:54.510
Well, I'm going to tell you why.

00:16:55.020 --> 00:16:58.990
First, you want to make sure that
with 14 spinning hard drives

00:16:58.990 --> 00:17:02.540
that spin at 7200 RPM,
that you don't achieve what

00:17:02.540 --> 00:17:04.780
we call rotational vibration.

00:17:04.800 --> 00:17:06.410
What does that mean?

00:17:06.460 --> 00:17:09.390
We have desktops, they have hard drives,
no problem.

00:17:09.400 --> 00:17:12.630
Well, a hard drive...

00:17:12.600 --> 00:17:15.150
In fact, this was told to me a long
time ago and it's still true.

00:17:15.160 --> 00:17:18.430
A hard drive spinning with the
head floating above it is like

00:17:18.440 --> 00:17:22.540
flying a 747 six feet off the
ground at 600 miles an hour.

00:17:24.000 --> 00:18:52.200
[Transcript missing]

00:18:52.550 --> 00:18:54.030
is the founder of Xserve RAID.

00:18:54.030 --> 00:18:56.460
He's the founder of the
Xserve RAID platform.

00:18:56.460 --> 00:18:59.470
He's the founder of the
Xserve RAID platform.

00:18:59.500 --> 00:18:59.500
He's the founder of the
Xserve RAID platform.

00:18:59.550 --> 00:19:03.740
Alex Grossman is the founder
of the Xserve RAID platform.

00:19:03.780 --> 00:19:05.780
He's the founder of the
Xserve RAID platform.

00:19:05.780 --> 00:19:07.770
Alex Grossman is the founder
of the Xserve RAID platform.

00:19:07.770 --> 00:19:11.750
Alex Grossman is the founder
of the Xserve RAID platform.

00:19:11.810 --> 00:19:16.600
Alex Grossman is the
founder of the Xserve RAID

00:19:18.200 --> 00:19:46.300
[Transcript missing]

00:19:46.470 --> 00:19:49.140
So there's this thing what we call
captive and non-captive storage.

00:19:49.140 --> 00:19:51.860
And in the Apple world,
there was no captive storage.

00:19:51.860 --> 00:19:53.970
That meant that the server
company actually sold the

00:19:53.970 --> 00:19:55.450
storage along with the servers.

00:19:55.500 --> 00:19:59.130
And before Xserve RAID and before Xserve,
it was really hard to get a lot

00:19:59.140 --> 00:20:01.080
of storage in an Apple platform.

00:20:01.080 --> 00:20:03.220
So if you wanted it,
you were stacking FireWire drives

00:20:03.220 --> 00:20:05.920
or buying from some third-party
company and hoping for the best.

00:20:05.970 --> 00:20:09.250
But the other storage
companies and server companies,

00:20:09.250 --> 00:20:12.900
they made it their business to
sell storage in the servers.

00:20:12.900 --> 00:20:14.860
Because it was easier to deploy.

00:20:14.860 --> 00:20:16.420
You didn't have to worry
about setting it up.

00:20:16.480 --> 00:20:19.310
And also, my server vendor knows
what's best for me.

00:20:19.310 --> 00:20:22.290
Well, I still believe that one
because we're the server vendor.

00:20:22.300 --> 00:20:25.610
Now, throughput is driven by cost.

00:20:27.640 --> 00:20:29.350
If it costs more, it has to be faster.

00:20:29.360 --> 00:20:31.690
Ferraris cost more than Volkswagens.

00:20:31.700 --> 00:20:34.190
They have to be faster,
unless you throw them off a cliff.

00:20:34.260 --> 00:20:36.900
If it costs more, it has to be better.

00:20:36.900 --> 00:20:39.040
How can you build it for less?

00:20:39.040 --> 00:20:41.380
If it costs more,
it must be better supported.

00:20:41.380 --> 00:20:42.680
Those are traditional views.

00:20:42.680 --> 00:20:43.920
Throw them out the window.

00:20:43.920 --> 00:20:45.580
Technology changes everything.

00:20:45.580 --> 00:20:47.110
And that's what's happened.

00:20:47.260 --> 00:20:49.560
So this is the traditional
view of storage.

00:20:49.610 --> 00:20:51.260
This is the way most people deploy it.

00:20:51.260 --> 00:20:54.500
You have internal server,
usually using software RAID.

00:20:54.500 --> 00:20:55.710
It's a good way to start.

00:20:55.710 --> 00:20:58.450
The throughput and the
availability are low,

00:20:58.450 --> 00:20:59.680
and the cost is low.

00:20:59.730 --> 00:21:02.980
Now, there is an exception to that,
and that's Xserve.

00:21:02.990 --> 00:21:04.630
The throughput's phenomenal.

00:21:04.630 --> 00:21:07.600
The cost is still low,
but the throughput's phenomenal.

00:21:09.400 --> 00:21:11.800
Internal server-based hardware RAID.

00:21:11.930 --> 00:21:14.040
Now,
I would argue with this a little bit and

00:21:14.040 --> 00:21:15.510
say that usually the throughput's lower.

00:21:15.520 --> 00:21:19.410
In the Xserve case,
it's much lower than our software RAID.

00:21:19.600 --> 00:21:22.380
And then there's external
SCSI hardware RAID storage,

00:21:22.380 --> 00:21:23.880
the staple of the industry.

00:21:23.880 --> 00:21:25.630
It's easy, it's expensive.

00:21:25.630 --> 00:21:28.580
And then there's external
SAN-attached fiber channel,

00:21:28.580 --> 00:21:31.620
storage area networking,
the idea that I can centralize

00:21:31.620 --> 00:21:33.320
all my storage into one area.

00:21:33.320 --> 00:21:34.900
These are traditional views.

00:21:34.900 --> 00:21:36.650
These are the way people look at it.

00:21:37.220 --> 00:21:38.390
So what's changing it?

00:21:38.830 --> 00:21:40.670
Something called storage classing.

00:21:40.670 --> 00:21:42.060
What is storage classing?

00:21:42.210 --> 00:21:44.920
Well,
servers are moving to a scale-out model.

00:21:44.920 --> 00:21:46.340
We have more servers.

00:21:46.680 --> 00:21:48.300
People talk about server consolidation.

00:21:48.300 --> 00:21:50.620
I want to get rid of all the
servers I have and do one.

00:21:50.630 --> 00:21:54.130
That works until you're asked
to deliver more services.

00:21:54.130 --> 00:21:57.670
And as soon as you deliver more services,
you buy more servers.

00:21:57.700 --> 00:22:00.690
And you're trying to scale them out,
because you're not buying these

00:22:00.690 --> 00:22:03.480
monster servers anymore and
deploying everything on them.

00:22:04.800 --> 00:22:27.200
[Transcript missing]

00:22:27.640 --> 00:22:31.160
And the other thing is that the
management of having all these

00:22:31.160 --> 00:22:34.100
servers and all these storage
devices is out of control.

00:22:34.100 --> 00:22:37.620
Because especially if you bought
servers from a lot of different people,

00:22:37.620 --> 00:22:39.260
you manage them all differently.

00:22:39.260 --> 00:22:41.000
And a lot of different operating systems.

00:22:41.000 --> 00:22:42.150
It's really kind of crazy.

00:22:42.160 --> 00:22:45.220
And then direct-attached
storage was the only alternate.

00:22:45.220 --> 00:22:47.810
Now I'll bet you that a lot of
people out here have installed

00:22:47.820 --> 00:22:49.880
network-attached storage in some case.

00:22:49.880 --> 00:22:51.400
At least some of it.

00:22:51.460 --> 00:22:53.280
And probably even
storage-area networking.

00:22:53.280 --> 00:22:56.470
And those numbers are
increasing every day.

00:22:57.140 --> 00:22:57.950
That's one of the changes.

00:23:01.070 --> 00:23:04.660
Now, the other thing about storage
classes is that people spend

00:23:05.160 --> 00:23:07.660
a lot of money on storage.

00:23:07.660 --> 00:23:08.520
They always have.

00:23:08.600 --> 00:23:09.930
It's been an interesting thing.

00:23:10.000 --> 00:23:13.200
I buy a server for X dollars,
I spend three times as much on storage.

00:23:13.200 --> 00:23:14.290
That was always the rule.

00:23:14.300 --> 00:23:16.970
And they always had to
buy the same storage.

00:23:17.040 --> 00:23:20.310
They always bought really
expensive SCSI storage,

00:23:20.310 --> 00:23:23.820
if that's what they bought,
because they had to use it everywhere.

00:23:23.820 --> 00:23:25.620
Because it was the same,
and it was there,

00:23:25.620 --> 00:23:27.030
and they had to keep buying it.

00:23:27.060 --> 00:23:29.520
And every time they needed a terabyte,
they paid X dollars for it.

00:23:29.670 --> 00:23:32.220
Or a gigabyte in the old days,
they paid X dollars.

00:23:32.240 --> 00:23:34.090
Storage classes are changing that.

00:23:34.120 --> 00:23:37.040
They're realizing that you
can deploy different types of

00:23:37.130 --> 00:23:38.820
storage for different needs.

00:23:38.820 --> 00:23:39.560
Gee.

00:23:41.040 --> 00:23:43.930
And also, this incredible thing happened.

00:23:43.930 --> 00:23:48.000
Anybody who's older like me,
they'll remember something called HSM,

00:23:48.050 --> 00:23:49.900
hierarchical storage management.

00:23:49.900 --> 00:23:51.980
They renamed it nearline storage.

00:23:51.980 --> 00:23:54.330
What's old is new again,
and it's really getting a lot of play,

00:23:54.330 --> 00:23:55.420
and I'll talk about that.

00:23:57.740 --> 00:24:00.480
So as you deploy,
you look at these traditional views,

00:24:00.630 --> 00:24:01.640
and something's changed.

00:24:01.640 --> 00:24:03.360
And this is what's changed.

00:24:03.360 --> 00:24:06.240
And you're going to see this
from other vendors happening,

00:24:06.240 --> 00:24:09.570
but Apple was the first one to put
the shot across the bow with this one.

00:24:10.220 --> 00:24:14.700
External ATA-based hardware
RAID storage that's fast and affordable.

00:24:14.720 --> 00:24:15.720
And guess what?

00:24:15.850 --> 00:24:19.590
It has the high availability needs
that you use in business-critical

00:24:19.610 --> 00:24:21.050
applications as well.

00:24:21.070 --> 00:24:22.440
And you get that for free.

00:24:22.440 --> 00:24:27.770
And so when you look at this picture,
you say, how can something that costs

00:24:27.770 --> 00:24:31.900
as little as internal storage,
based on what people will do at SCSI,

00:24:31.900 --> 00:24:35.650
deliver the performance equivalent
to what you get with external

00:24:35.650 --> 00:24:39.480
fiber-channel-based systems
that cost five times as much?

00:24:41.830 --> 00:24:44.800
Well, it can happen,
and I'll show you why

00:24:44.800 --> 00:24:46.460
in a couple minutes.

00:24:46.500 --> 00:24:48.920
So here's what it's really all about.

00:24:49.650 --> 00:24:52.160
IT has to look at doing more with less.

00:24:52.160 --> 00:24:57.380
I don't think there's anyone in the
room here who's had a boss who's said,

00:24:57.430 --> 00:25:00.400
you know what,
let's deliver less services this year.

00:25:00.400 --> 00:25:01.850
Let me give you tons of money.

00:25:01.850 --> 00:25:03.170
Go buy whatever you want.

00:25:03.200 --> 00:25:06.570
And only work five days a
week and six hours a day.

00:25:06.660 --> 00:25:07.430
I see a bunch of nods.

00:25:07.430 --> 00:25:08.790
Everybody's doing that, right?

00:25:08.790 --> 00:25:09.320
Okay.

00:25:09.320 --> 00:25:10.570
It's not happening like that.

00:25:10.610 --> 00:25:12.120
It's like this department needs this.

00:25:12.120 --> 00:25:13.200
This department needs that.

00:25:13.280 --> 00:25:14.200
I need to deploy it now.

00:25:14.280 --> 00:25:15.100
It needs to be faster.

00:25:15.100 --> 00:25:15.990
It needs to be better.

00:25:15.990 --> 00:25:17.560
I'm bringing 10 people online.

00:25:17.560 --> 00:25:19.080
I need you to work Sunday.

00:25:19.080 --> 00:25:21.440
to install that server
and while you're at it,

00:25:21.480 --> 00:25:23.920
put the storage in the top of
the rack as far as you can,

00:25:23.920 --> 00:25:27.280
'cause there's no room to buy a new rack,
that's happening.

00:25:27.290 --> 00:25:28.880
And then there's backup.

00:25:28.890 --> 00:25:31.480
So how do you backup 17
terabytes of storage?

00:25:31.540 --> 00:25:34.520
So what I have on the stage,
how long does that take?

00:25:35.950 --> 00:25:38.200
Can you do it in the eight-hour
window that no people are

00:25:38.200 --> 00:25:39.120
working at your company?

00:25:39.120 --> 00:25:39.880
Say yes, right?

00:25:41.970 --> 00:25:44.500
So people are looking at
different ways of doing it.

00:25:44.570 --> 00:25:45.980
They're saying, you know what?

00:25:45.980 --> 00:25:48.470
What we can do is as we
bring more storage online,

00:25:48.750 --> 00:25:50.420
we're looking at new ways.

00:25:50.420 --> 00:25:52.400
So things like nearline,
disk-to-disk backup.

00:25:52.480 --> 00:25:55.860
Have we all heard that term,
disk-to-disk backup?

00:25:55.860 --> 00:25:56.860
Why is that?

00:25:56.860 --> 00:25:58.080
Because it's fast, right?

00:25:58.120 --> 00:26:01.390
And then I can back it up,
I have another copy, and at my leisure,

00:26:01.390 --> 00:26:03.890
I can have those slow tape
drives take it offline.

00:26:03.890 --> 00:26:07.480
Because I can tell you right now,
you can back up all 17 terabytes

00:26:07.740 --> 00:26:11.780
that are on this stage in one
hour for about a million dollars.

00:26:12.900 --> 00:26:31.800
[Transcript missing]

00:26:33.500 --> 00:26:33.800
Okay.

00:26:33.800 --> 00:26:35.750
I know this will work.

00:26:35.750 --> 00:26:36.820
Okay.

00:26:36.820 --> 00:26:38.870
So I mentioned storage classes.

00:26:38.930 --> 00:26:42.050
So there's three classes of
storage most people identify.

00:26:42.050 --> 00:26:47.160
The first class is high availability,
highly redundant, and very expensive.

00:26:47.160 --> 00:26:49.220
Where do you want to use this?

00:26:49.220 --> 00:26:52.120
Well, some people used to call
this mission critical.

00:26:52.120 --> 00:26:54.890
I tend to call it mission critical,
but everything you do

00:26:54.890 --> 00:26:56.180
is mission critical.

00:26:56.180 --> 00:26:58.280
If you're doing code
and you lose that code,

00:26:58.280 --> 00:27:00.940
that was mission critical to you,
especially if you had

00:27:00.940 --> 00:27:02.070
a deadline next week.

00:27:02.860 --> 00:27:05.900
If you're deploying a web server
and you lose all that content,

00:27:06.130 --> 00:27:07.350
that was mission critical.

00:27:07.350 --> 00:27:09.130
But where do you really see this used?

00:27:09.240 --> 00:27:11.750
I use my favorite example
is the ATM machine.

00:27:11.750 --> 00:27:14.680
When I put my card in,
I want to make sure that it has my

00:27:14.680 --> 00:27:19.360
balance or lies and gives me more money,
but it has my balance that's in there.

00:27:19.360 --> 00:27:20.660
So that's mission critical.

00:27:20.730 --> 00:27:23.660
I want the people who run the banks
to spend a lot of money on storage.

00:27:23.660 --> 00:27:27.460
But you know, the transactions that
I did the day before,

00:27:27.460 --> 00:27:32.160
they're not as important to me
because it's my balance I care about.

00:27:32.220 --> 00:27:35.860
So I want to make sure that
that becomes class two storage.

00:27:35.860 --> 00:27:38.440
It's still protected,
but it's business critical.

00:27:38.440 --> 00:27:39.920
It's not mission critical.

00:27:39.920 --> 00:27:42.840
And that's like running a website.

00:27:42.840 --> 00:27:44.300
That's business critical stuff.

00:27:44.300 --> 00:27:45.140
That's your email.

00:27:45.150 --> 00:27:46.590
It's business critical stuff.

00:27:46.750 --> 00:27:49.250
It's highly redundant,
and it's available,

00:27:49.250 --> 00:27:52.480
but you can accept some downtime
as long as you can save the

00:27:52.480 --> 00:27:54.690
data and the data's still there.

00:28:01.580 --> 00:28:02.400
business on it.

00:28:02.400 --> 00:28:03.500
It's a good thing.

00:28:06.550 --> 00:28:09.320
So this is the way storage
classes get deployed.

00:28:09.390 --> 00:28:13.140
And so in the enterprise apps,
I use that big E word up there,

00:28:13.190 --> 00:28:15.740
in database financial,
there's what they call

00:28:15.740 --> 00:28:18.590
online storage in class one.

00:28:18.700 --> 00:28:20.300
There's also what they
call near-line storage.

00:28:20.300 --> 00:28:21.710
What the heck is near-line?

00:28:21.710 --> 00:28:25.520
Near-line means it's not as fast,
it's not as redundant,

00:28:25.550 --> 00:28:27.050
but it's there and it's safe.

00:28:27.050 --> 00:28:29.450
And if it does have a
little bit of downtime,

00:28:29.450 --> 00:28:32.830
I can recover from it quickly
and I know my data's still there.

00:28:34.480 --> 00:28:37.720
And then when you look at business apps,
for the most part,

00:28:37.780 --> 00:28:41.280
you start to see that they're
using different classes of storage.

00:28:41.340 --> 00:28:45.190
You'd never deploy an enterprise
app on Nearline alone.

00:28:45.410 --> 00:28:46.390
You'd always have some online.

00:28:46.390 --> 00:28:50.520
But you would find a business
app running on Nearline.

00:28:50.750 --> 00:28:53.920
And you'll find e-commerce and
web apps running on Nearline.

00:28:54.270 --> 00:28:58.690
So this whole classing of storage is
starting to do something to the world.

00:28:58.690 --> 00:28:59.660
Why?

00:28:59.660 --> 00:29:05.160
Well, imagine if I have to buy
Brand X storage that I've used

00:29:05.160 --> 00:29:08.850
for all my mission-critical
applications and it costs,

00:29:08.950 --> 00:29:13.480
and this is not unrealistic,
$250,000 a terabyte.

00:29:14.040 --> 00:29:18.180
And since I've deployed five
terabytes of that in my organization,

00:29:18.220 --> 00:29:19.140
I give it to everyone.

00:29:19.140 --> 00:29:24.330
Everyone's home directory runs on that
storage that costs a lot of money.

00:29:24.350 --> 00:29:25.730
That's crazy.

00:29:25.850 --> 00:29:30.020
When I can buy 2.5
terabytes of Xserve RAID,

00:29:30.020 --> 00:29:36.820
and I can let all my people have
10 megabytes of iTunes Music Store,

00:29:36.930 --> 00:29:41.200
I can have all my people have
enough room to do their work,

00:29:41.200 --> 00:29:43.480
I don't have to bug them,
and I can put their home

00:29:43.480 --> 00:29:44.820
directories out there.

00:29:44.870 --> 00:29:47.250
And it's safe and it's secure,
but guess what?

00:29:47.350 --> 00:29:49.840
It's not the transactions
that run the company.

00:29:50.100 --> 00:29:53.540
So that's what the classing
of storage is really doing.

00:29:53.630 --> 00:29:54.710
So how do you plan for this?

00:29:54.780 --> 00:29:57.560
Because we're going to talk about
the real fun stuff in a minute,

00:29:57.560 --> 00:29:58.470
but how do you plan for it?

00:29:58.540 --> 00:30:00.430
Well,
the first thing is you have to plan.

00:30:00.440 --> 00:30:04.490
Take into consideration the capacity,
the throughput, and availability,

00:30:04.530 --> 00:30:05.700
and also the cost and value.

00:30:05.720 --> 00:30:10.840
So when you're doing capacity planning,
my rule is buy more than you need.

00:30:11.210 --> 00:30:13.000
Because if you think
you bought enough today,

00:30:13.000 --> 00:30:16.310
start working on that budget for next
year because you're going to buy more.

00:30:17.680 --> 00:30:19.060
and make sure you have
a solution that scales.

00:30:19.090 --> 00:30:20.120
How about throughput?

00:30:20.120 --> 00:30:21.660
You really have to look at this.

00:30:21.660 --> 00:30:22.750
What is the throughput you need?

00:30:22.760 --> 00:30:27.070
Again, if you get throughput for free,
buy the highest throughput you can.

00:30:27.080 --> 00:30:32.310
But it's all about configuration,
and it's all about performance.

00:30:32.370 --> 00:30:32.940
The availability.

00:30:32.940 --> 00:30:35.290
Mission critical, no downtime.

00:30:35.300 --> 00:30:37.530
Business critical, manageable downtime.

00:30:37.530 --> 00:30:40.100
Archive and near align.

00:30:40.230 --> 00:30:42.890
So you have to take all those things
in consideration and build a big

00:30:42.940 --> 00:30:44.460
chart and decide what you really want.

00:30:44.510 --> 00:30:46.930
Because there are times when you
want to buy storage that's even

00:30:46.930 --> 00:30:48.650
beyond what Xserve RAID can deploy.

00:30:48.650 --> 00:30:51.640
So here's what people
usually will determine,

00:30:51.640 --> 00:30:53.320
use to determine their storage.

00:30:53.320 --> 00:30:56.360
The first metric that you always get,
this is the financial

00:30:56.360 --> 00:30:58.800
people always say this one.

00:30:58.800 --> 00:31:01.140
What's the cost per gigabyte?

00:31:01.610 --> 00:31:05.440
So currently IDC and Gartner, they say,
if you believe them,

00:31:05.450 --> 00:31:08.700
they say it's $30 a gigabyte
for high availability storage.

00:31:08.700 --> 00:31:10.990
Xserve RAID is $4.36.

00:31:11.000 --> 00:31:13.470
So it's chalking it up for value.

00:31:13.470 --> 00:31:17.560
What are the hidden costs that
you get with other companies?

00:31:17.630 --> 00:31:21.570
Well, the hidden costs are
things you have to look at.

00:31:21.570 --> 00:31:22.210
What's

00:31:22.660 --> 00:31:24.710
What's the additional
software you have to buy,

00:31:25.090 --> 00:31:27.110
both to set up and manage the system?

00:31:27.120 --> 00:31:28.890
What are the costs of cables?

00:31:28.900 --> 00:31:32.690
What are the costs of power,
because it draws a lot of power?

00:31:32.700 --> 00:31:34.590
Those are all the hidden
costs that you have.

00:31:36.230 --> 00:31:37.980
and also what about expansion?

00:31:38.000 --> 00:31:41.280
When I expand, does it cost me as much to
expand as it cost me to buy in?

00:31:41.280 --> 00:31:42.520
Or does it cost more?

00:31:42.520 --> 00:31:43.960
Does it cost less?

00:31:43.960 --> 00:31:45.740
And will the company be
there in a couple years?

00:31:47.660 --> 00:31:49.040
Those are all storage planning tools.

00:31:49.040 --> 00:31:50.120
How about deployments?

00:31:50.120 --> 00:31:52.350
So here's the scenarios we always see.

00:31:52.350 --> 00:31:55.190
An Apple server-based deployment.

00:31:55.190 --> 00:31:56.990
A single server, a single RAID.

00:31:57.090 --> 00:31:58.850
I think we can all do that one.

00:31:58.850 --> 00:32:00.720
A single server, multiple RAIDs.

00:32:00.720 --> 00:32:02.470
I'd like everyone to do that one.

00:32:02.470 --> 00:32:06.610
Multiple server, single RAID,
or multiple servers, multiple RAID.

00:32:06.760 --> 00:32:07.850
So let's look at the cases.

00:32:07.860 --> 00:32:09.250
How about a mixed OS platform?

00:32:09.250 --> 00:32:11.220
Is it possible to do
that with Xserve RAID?

00:32:11.220 --> 00:32:14.720
You could have multiple servers,
multiple RAIDs, single server,

00:32:14.720 --> 00:32:16.720
single RAIDs, all that's possible.

00:32:16.720 --> 00:32:19.060
How about a virtualized mixed platform?

00:32:19.060 --> 00:32:19.960
What is that?

00:32:19.960 --> 00:32:21.340
Why would you want to virtualize?

00:32:21.340 --> 00:32:22.600
We're going to talk about that.

00:32:22.640 --> 00:32:23.830
So let's build some scenarios.

00:32:24.160 --> 00:32:24.950
You ready?

00:32:24.950 --> 00:32:26.590
I built a couple already here.

00:32:26.620 --> 00:32:31.050
So here's three typical
scenarios that I built.

00:32:31.050 --> 00:32:36.870
The first one is I took Mac OS X server
on an Xserve and an Xserve RAID.

00:32:36.940 --> 00:32:40.730
It was a pretty easy
and simple thing to do.

00:32:41.490 --> 00:32:44.670
The next scenario I did is
I took that same Xserve RAID and

00:32:44.700 --> 00:32:46.830
I attached two Xserves to it.

00:32:47.450 --> 00:32:50.430
I took another scenario in the middle,
kind of a funny one.

00:32:50.450 --> 00:32:54.150
I have this server from a company
called IBM and one from a company

00:32:54.150 --> 00:32:56.760
called Dell with an Xserve,
and I have two RAIDs.

00:32:56.760 --> 00:33:01.030
And I'm sharing the storage
across all those platforms.

00:33:01.520 --> 00:33:03.500
And in scenario four,
it's kind of interesting.

00:33:03.500 --> 00:33:05.080
I have what I call virtualized storage.

00:33:05.080 --> 00:33:09.560
So I have a third-party product
called a Chaparral RAID RPS,

00:33:09.560 --> 00:33:11.360
or a provisioning server.

00:33:11.360 --> 00:33:13.880
There's the word you want to remember,
provisioning.

00:33:13.900 --> 00:33:16.670
I have a couple Xserves
and a couple Xserve RAIDs,

00:33:16.710 --> 00:33:20.910
and I basically added additional
capabilities to Xserve RAID and kept

00:33:21.080 --> 00:33:25.450
that low-cost storage deployment,
but added true enterprise-class

00:33:25.450 --> 00:33:30.440
performance and reliability and
scalability to the Xserve RAID without

00:33:30.880 --> 00:33:35.660
having to buy some very expensive
storage that you could use to do this.

00:33:35.660 --> 00:33:37.240
So let me show you how they work.

00:33:37.240 --> 00:33:40.070
First thing is,
let's look at an Xserve RAID.

00:33:40.070 --> 00:33:43.850
If you've seen one other than here,
it's pretty standard.

00:33:43.900 --> 00:33:45.110
Cleaned in the front.

00:33:45.110 --> 00:33:47.520
I mentioned that there's 14 hard drives.

00:33:47.520 --> 00:33:50.690
People always say we went a
little overboard with lights.

00:33:50.690 --> 00:33:52.270
I say we need more.

00:33:52.270 --> 00:33:56.390
Drive activity and health
activity on each drive.

00:33:56.440 --> 00:33:58.460
Each hard drive, what is health?

00:33:58.460 --> 00:34:01.300
We actually measure the
drives for are they good,

00:34:01.300 --> 00:34:03.490
are they in a pre-fail condition?

00:34:03.500 --> 00:34:05.220
That means are they going
to fail or have they failed?

00:34:05.240 --> 00:34:07.760
So the light goes green, amber, and red.

00:34:08.170 --> 00:34:08.800
Red is dead.

00:34:08.800 --> 00:34:09.880
Green is good.

00:34:10.290 --> 00:34:13.660
Amber means that we've used a
technology called SMART to actually

00:34:13.660 --> 00:34:13.840
look at the performance of the drive.

00:34:13.900 --> 00:34:16.570
We look at the drives and say
what is the health of that drive?

00:34:16.630 --> 00:34:18.890
If it's going to fail,
we're going to pre-fail it

00:34:18.890 --> 00:34:20.390
and we're going to warn you.

00:34:20.400 --> 00:34:23.200
We're going to send you an email and say,
hey, this drive is going to fail.

00:34:23.200 --> 00:34:25.200
We're going to,
if you had a hot spare in the system,

00:34:25.200 --> 00:34:28.320
we're going to rebuild to the hot
spare so you have full availability.

00:34:28.320 --> 00:34:29.550
It's an indicator on the front.

00:34:29.580 --> 00:34:30.590
It gives you a good idea.

00:34:30.660 --> 00:34:32.520
There's fiber channel link indicators.

00:34:32.520 --> 00:34:35.050
Just like on Xserve,
we want to make sure that the

00:34:35.050 --> 00:34:38.610
links that you have to your
server are easily available.

00:34:39.000 --> 00:34:39.850
Why do we put those on the front?

00:34:39.910 --> 00:34:41.650
There's lights on the back, right?

00:34:41.650 --> 00:34:45.160
Well, this comes from the classic
example of ease of use.

00:34:45.160 --> 00:34:46.930
Anybody ever have a rack?

00:34:46.930 --> 00:34:48.490
Anybody ever install a rack?

00:34:48.490 --> 00:34:51.120
Okay, a few people here, a lot of people.

00:34:51.120 --> 00:34:52.890
When you have a rack,
you really want to make it

00:34:52.890 --> 00:34:55.240
really clean in the back and run
all the cables down the side,

00:34:55.240 --> 00:34:56.700
and it's going to be beautiful.

00:34:56.700 --> 00:34:58.380
It doesn't happen, guys.

00:34:58.380 --> 00:35:01.050
It looks like a spaghetti
jungle in there.

00:35:02.060 --> 00:35:04.330
And so there's a chance,
there's always that possibility

00:35:04.330 --> 00:35:07.180
that you could come along and
unplug a cable by mistake.

00:35:07.280 --> 00:35:10.230
And if you don't have an indicator
on the front to show you,

00:35:10.230 --> 00:35:14.260
you may not notice that until you walk
to your desk and get emailed or paged.

00:35:14.260 --> 00:35:16.510
So it can happen,
it can happen really easy.

00:35:17.120 --> 00:35:19.070
So we put a lot of
indicators on the front,

00:35:19.120 --> 00:35:21.410
including link indicators
for fiber channel.

00:35:21.410 --> 00:35:23.740
Because I will tell you,
when you disconnect the

00:35:23.740 --> 00:35:25.840
fiber channel cable,
you don't get called by

00:35:25.920 --> 00:35:27.360
our admin utility first.

00:35:27.780 --> 00:35:31.410
You get called by all those people
who just lost their connection.

00:35:31.800 --> 00:35:32.550
And so we put a lot of
indicators on the front.

00:35:32.570 --> 00:35:32.670
And then we put a lot of
indicators on the back.

00:35:32.670 --> 00:35:32.760
And then we put a lot of
indicators on the front.

00:35:32.760 --> 00:35:32.850
And then we put a lot of
indicators on the back.

00:35:32.850 --> 00:35:33.120
And then we put a lot of
indicators on the front.

00:35:33.530 --> 00:35:35.580
And usually those pages are the bad ones.

00:35:35.690 --> 00:35:37.340
So we put a lot on the front.

00:35:37.390 --> 00:35:40.720
You'll notice just like XServe,
we have a system identifier

00:35:40.720 --> 00:35:43.020
button and enclosure lock,
and we added something else

00:35:43.070 --> 00:35:44.140
called an alarm silencer.

00:35:45.340 --> 00:35:48.810
Because I can set up my XServe
RAID that if I have a failure,

00:35:48.810 --> 00:35:53.030
and it's in a desk-side configuration,
or under the desk or on the

00:35:53.030 --> 00:35:55.180
desk or in the CEO's office,
it's going to be a failure.

00:35:55.250 --> 00:35:58.540
I can actually have it beep at
me beyond the visual indicators.

00:35:58.540 --> 00:36:00.510
And you notice this one didn't
beep when I pulled that power

00:36:00.510 --> 00:36:02.490
cord out because I shut it off.

00:36:02.600 --> 00:36:04.020
That's the fun thing you can do.

00:36:04.020 --> 00:36:07.230
So let's look at the back of it because
this is really how you deploy it,

00:36:07.230 --> 00:36:07.600
right?

00:36:07.600 --> 00:36:09.670
Pretty clean, Apple design.

00:36:09.680 --> 00:36:12.040
Two big fans and power supplies.

00:36:12.040 --> 00:36:12.660
They're redundant.

00:36:12.660 --> 00:36:14.900
Two redundant cooling
modules in the middle.

00:36:14.900 --> 00:36:16.980
Two independent RAID controllers.

00:36:16.980 --> 00:36:18.760
Two backup battery modules.

00:36:18.760 --> 00:36:20.940
A power indicator.

00:36:20.940 --> 00:36:23.610
An alarm mute button on the back as well.

00:36:23.620 --> 00:36:24.900
And a system identifier.

00:36:24.900 --> 00:36:27.860
And so you look at it and you say,
pretty easy.

00:36:27.860 --> 00:36:29.230
There's nothing you can't get to.

00:36:29.240 --> 00:36:33.400
If I go back and look at the front,
I can get to all the hard drives.

00:36:35.310 --> 00:36:37.400
If I look at the back,
I can get to all the components.

00:36:37.400 --> 00:36:41.990
So the design of Xserve RAID is
a high availability design,

00:36:41.990 --> 00:36:46.920
meaning that the only thing that I can't
change in the field is that midplane.

00:36:46.920 --> 00:36:49.280
But remember,
that was a passive data flow.

00:36:49.280 --> 00:36:52.600
So the only way to break that is
to physically bend the connectors.

00:36:52.600 --> 00:36:53.840
Bad thing, guys.

00:36:55.140 --> 00:36:56.050
Or you're going to hurt the metal.

00:36:56.050 --> 00:36:57.460
Maybe look at the bezel on this.

00:36:57.460 --> 00:36:59.010
It's a little hard to hurt, right?

00:36:59.010 --> 00:36:59.800
It's aluminum.

00:36:59.800 --> 00:37:01.950
So you're really not going
to be able to hurt anything,

00:37:01.950 --> 00:37:04.150
and you're going to be able
to deploy this thing anywhere

00:37:04.160 --> 00:37:05.510
you need it in an easy manner.

00:37:06.410 --> 00:37:10.200
So most of the connections you're
going to look at are going to

00:37:10.200 --> 00:37:14.070
be the fiber channel connection,
the Ethernet connection,

00:37:14.070 --> 00:37:16.050
and the serial connection.

00:37:17.320 --> 00:37:17.560
Why?

00:37:17.560 --> 00:37:19.570
Well,
that's what we're going to talk about.

00:37:19.580 --> 00:37:21.370
So here's scenario one.

00:37:21.400 --> 00:37:23.660
I call this one standard
operating procedure.

00:37:23.660 --> 00:37:26.640
You take an Xserve RAID,
you take an Xserve.

00:37:26.640 --> 00:37:29.270
You put our fiber channel
card in the Xserve.

00:37:29.370 --> 00:37:30.600
It has two ports on it.

00:37:30.710 --> 00:37:33.370
You take the two cables
that come with the card,

00:37:33.370 --> 00:37:36.470
you plug them in the Xserve RAID,
and you're done.

00:37:37.870 --> 00:37:38.740
It's easy.

00:37:38.810 --> 00:37:41.140
Two and a half terabytes, ready to go.

00:37:41.200 --> 00:37:43.120
The Xserve RAID comes out of the box.

00:37:43.160 --> 00:37:46.190
It's configured for two RAID 5 sets.

00:37:46.410 --> 00:37:49.850
So you have about 2.1
terabytes available to you,

00:37:49.960 --> 00:37:51.520
protected RAID.

00:37:51.520 --> 00:37:53.390
You go to Disk Utility,
just like you would

00:37:53.400 --> 00:37:55.480
any other hard drives.

00:37:55.520 --> 00:37:59.520
Either build one RAID 50 set by
striping the two together or two

00:37:59.520 --> 00:38:01.900
RAID 5 sets that are on the desktop.

00:38:01.920 --> 00:38:03.940
You serve them to your clients,
you're done.

00:38:04.020 --> 00:38:04.980
Pretty easy.

00:38:05.030 --> 00:38:07.740
You tell your boss it took you two days.

00:38:09.360 --> 00:38:12.470
Software that comes with it,
Apple RAID Admin.

00:38:12.470 --> 00:38:13.620
What is RAID Admin?

00:38:13.620 --> 00:38:17.540
It's a utility that Apple's designed to
make it easy to deploy these systems.

00:38:17.620 --> 00:38:19.690
So you can install them
using this utility,

00:38:19.730 --> 00:38:21.780
you can manage them using this utility.

00:38:21.780 --> 00:38:23.180
What's different about it?

00:38:23.490 --> 00:38:26.710
What's different about it,
it's web-based, it's Java-based,

00:38:26.720 --> 00:38:30.260
so read that, Java-based,
platform-independent-based.

00:38:30.260 --> 00:38:32.150
You can use it anywhere in the world.

00:38:32.160 --> 00:38:34.040
And you know what's cool about it?

00:38:34.040 --> 00:38:36.870
You can deploy a RAID system
literally in a minute.

00:38:36.900 --> 00:38:38.100
And I'm going to show you that.

00:38:39.360 --> 00:38:43.020
And then the other thing about
this installation is that you

00:38:43.070 --> 00:38:45.070
just have to have a strong back,
because you've got to lift the RAID.

00:38:45.090 --> 00:38:46.920
Okay, how about this one?

00:38:46.920 --> 00:38:48.130
Scenario two.

00:38:48.130 --> 00:38:50.920
Two Xserves and an Xserve RAID.

00:38:52.550 --> 00:38:53.210
What did we do here?

00:38:53.230 --> 00:38:54.680
Why did we do this?

00:38:54.680 --> 00:38:57.540
Well, what we did is we
centralized the storage.

00:38:57.540 --> 00:38:59.340
So that's what I did in this case.

00:38:59.340 --> 00:39:01.030
I took my Xserve RAID.

00:39:01.130 --> 00:39:03.240
I didn't use a switch in this case.

00:39:03.240 --> 00:39:05.680
I just went directly from the
Xserve RAID to the two Xserves.

00:39:05.680 --> 00:39:09.930
I took centralized, protected storage,
high availability storage,

00:39:09.930 --> 00:39:12.950
and delivered over a
terabyte to each Xserve.

00:39:14.800 --> 00:39:18.380
And what's really cool about this is
that that storage is more redundant

00:39:18.380 --> 00:39:19.920
than the server in this case.

00:39:19.920 --> 00:39:22.950
And if I ever had a problem,
I can move that storage

00:39:23.000 --> 00:39:24.260
over to another server.

00:39:24.290 --> 00:39:26.120
So I have a highly
redundant configuration.

00:39:26.120 --> 00:39:28.020
And it's inexpensive.

00:39:30.220 --> 00:39:31.100
How about scenario three?

00:39:31.100 --> 00:39:32.770
That's the one I built over here.

00:39:32.770 --> 00:39:36.190
Actually,
some nice people here built it for me.

00:39:36.210 --> 00:39:39.570
We took an Xserve,
we took an IBM 330 server,

00:39:39.570 --> 00:39:44.200
a Dell 1550 server, an Xserve RAID,
we took Apple RAID admin,

00:39:44.200 --> 00:39:47.120
and I configured it with four RAID sets.

00:39:47.120 --> 00:39:49.290
Three RAID 5s and a RAID 1.

00:39:49.290 --> 00:39:52.630
And each server has a RAID 5 set,
and the Xserve has an

00:39:52.630 --> 00:39:54.500
additional RAID 1 boot.

00:39:55.570 --> 00:39:59.050
So, contrary to popular belief,
you can actually boot your

00:39:59.050 --> 00:40:00.760
Xserve off an Xserve RAID.

00:40:00.760 --> 00:40:02.240
It just works.

00:40:03.620 --> 00:40:05.640
- And I'll show you
exactly how we did that.

00:40:05.680 --> 00:40:08.060
So what I did is I built a RAID set.

00:40:08.070 --> 00:40:10.020
This took me about 10 seconds.

00:40:10.050 --> 00:40:14.250
And I took three hard drives,
and I built a 360 gig RAID set,

00:40:14.440 --> 00:40:17.800
fully protected,
and I gave it to my Xserve.

00:40:17.960 --> 00:40:22.020
Then I built another RAID set
and I gave it to the Dell dude.

00:40:22.070 --> 00:40:23.590
Sorry.

00:40:26.000 --> 00:40:29.060
And then because someone said I had
to keep that Dell and that IBM 330

00:40:29.060 --> 00:40:32.600
and my budget for buying Xserves to
replace those pigs took a little while,

00:40:32.600 --> 00:40:40.300
I also gave a 360 gig or 540
gig RAID set to my IBM 330.

00:40:40.300 --> 00:40:44.360
And then that last two
hard drives that I had,

00:40:44.360 --> 00:40:48.530
I made a boot that was
mirrored for my Xserve.

00:40:49.240 --> 00:40:53.420
Now I had two drives left over,
and I made those hot spares so that

00:40:53.580 --> 00:40:57.750
all my RAID sets are globally protected
against the failure of any drive.

00:40:59.500 --> 00:41:16.800
[Transcript missing]

00:41:17.040 --> 00:41:18.520
Well, hundreds of thousands of dollars.

00:41:18.520 --> 00:41:21.770
In the same capacity with
some storage systems,

00:41:21.770 --> 00:41:24.780
you'd have to spend hundreds of thousands
of dollars to get this capability.

00:41:24.780 --> 00:41:28.210
So we took two Xserves.

00:41:28.210 --> 00:41:30.620
We took two Xserve RAIDs.

00:41:30.620 --> 00:41:35.960
We took a VXL fiber channel switch,
a 16-port VXL fiber channel switch.

00:41:35.960 --> 00:41:38.050
Unfortunately, I didn't have enough room
to put it in the front.

00:41:38.050 --> 00:41:38.730
It's in the back.

00:41:38.810 --> 00:41:42.300
I took a third-party product,
a provisioning server from a

00:41:42.300 --> 00:41:45.660
good company called Chaparral,
called the RAID RPS.

00:41:46.420 --> 00:41:50.580
I took Apple RAID admin and
Chaparral's loan provisioning software,

00:41:50.580 --> 00:41:54.140
and I built a completely
virtualized storage system.

00:41:54.160 --> 00:41:55.570
We call this a SAN.

00:41:55.580 --> 00:41:57.360
You might have heard the technology.

00:41:57.360 --> 00:41:59.450
And so what did it do?

00:41:59.460 --> 00:42:03.470
Well, the RAID RPS sees 4.32 terabytes.

00:42:05.080 --> 00:42:09.340
And the RAID RPS allows
me to build 1,024 LUNs.

00:42:09.380 --> 00:42:10.630
What's a LUN?

00:42:10.740 --> 00:42:13.540
A LUN is basically,
think of it as a partition.

00:42:13.590 --> 00:42:19.060
So that if I had a lot of users,
maybe not 1,024, but if I had 100 users,

00:42:19.060 --> 00:42:21.810
and they were all graphic artists,
I could break that storage

00:42:21.810 --> 00:42:22.860
up to them equally.

00:42:22.860 --> 00:42:27.780
And I probably would leave a
pool of that storage unused.

00:42:29.300 --> 00:42:48.600
[Transcript missing]

00:42:49.180 --> 00:42:49.990
So let's take that.

00:42:49.990 --> 00:42:51.260
Let's take that scenario.

00:42:51.260 --> 00:42:55.360
Let's decide that one server handles
my graphics department and one

00:42:55.360 --> 00:42:57.210
server handles my video department.

00:42:57.210 --> 00:42:59.800
My graphic guys are slacking off.

00:42:59.800 --> 00:43:01.720
They're using a terabyte of storage.

00:43:01.720 --> 00:43:05.690
My video guys, on the other hand,
they've been downloading

00:43:05.690 --> 00:43:10.560
QuickTime flicks for a long time here,
and they really are maxed out.

00:43:10.630 --> 00:43:12.370
I'm running at 2.16 terabytes.

00:43:12.370 --> 00:43:14.690
I'm telling them every week,
throw your stuff away.

00:43:14.690 --> 00:43:18.500
What can I do with
RAID RPS and with Xserve RAID?

00:43:20.100 --> 00:43:24.480
I can go ahead and re-partition
or re-engineer that software so

00:43:24.720 --> 00:43:29.350
that I can re-provision it so
that now my video people can have,

00:43:29.350 --> 00:43:34.850
let's say, three terabytes and my graphic
artists only get one terabyte.

00:43:34.850 --> 00:43:37.910
And I can do that dynamically,
essentially on the fly.

00:43:37.910 --> 00:43:41.090
With a restart of the Xserve,
they can have a complete

00:43:41.090 --> 00:43:42.770
change in what they need.

00:43:43.600 --> 00:43:48.470
And so that's really high-level
capabilities that are very

00:43:48.480 --> 00:43:50.080
difficult to get with other systems.

00:43:50.080 --> 00:43:53.560
Now, the other thing, that's what we call
dynamic growth of LUNs.

00:43:53.560 --> 00:43:56.120
The other thing we can do here is
we can do things like snapshots.

00:43:56.220 --> 00:43:57.970
So I mentioned backup, right?

00:43:57.970 --> 00:44:01.000
If that graphics department
is moving a terabyte a day,

00:44:01.000 --> 00:44:04.080
I probably don't have a tape
drive to move a terabyte a day.

00:44:04.250 --> 00:44:07.020
But I can snapshot that or make
a point-in-time copy of that

00:44:07.390 --> 00:44:10.810
data so that someone can get
it off there at their leisure.

00:44:10.810 --> 00:44:14.840
And that's all available with
Xserve RAID using low-cost storage

00:44:14.840 --> 00:44:16.710
with a provisioning server.

00:44:16.710 --> 00:44:18.470
And again,
the provisioning server we have

00:44:18.470 --> 00:44:19.060
here is a low-cost storage.

00:44:19.060 --> 00:44:22.660
And again, the provisioning Here is the
provisioning server from Chaparral.

00:44:23.830 --> 00:44:27.100
Now, managing LUNs and performance
tuning with RAID Admin.

00:44:27.100 --> 00:44:31.850
So I'm going to give you a quick look
at a sneak preview of a new version

00:44:31.850 --> 00:44:33.080
of RAID Admin that's coming out.

00:44:33.100 --> 00:44:34.780
Let me show you how this works.

00:44:34.780 --> 00:44:37.000
So can I have a demo two up, please?

00:44:39.300 --> 00:44:39.420
Okay.

00:44:39.420 --> 00:44:41.240
So this is RAID admin.

00:44:41.430 --> 00:44:45.740
Our little piece of software
to manage the RAID systems.

00:44:45.740 --> 00:44:48.030
So the first thing you're
going to notice is that all my

00:44:48.030 --> 00:44:51.330
RAID systems here happen to be on
my network and they're on a subnet.

00:44:51.450 --> 00:44:54.700
Now, to make it easy,
because I didn't want to confuse myself,

00:44:54.810 --> 00:44:58.100
I took some of them off the subnet
because I didn't want to see them.

00:44:58.180 --> 00:45:01.510
But you'll notice that
RAID admin uses rendezvous.

00:45:01.510 --> 00:45:04.290
And so I can just grab
one of those systems and

00:45:04.290 --> 00:45:06.550
I happen to know the password,
so I'm not going to tell

00:45:06.550 --> 00:45:07.960
everybody it's public here.

00:45:08.570 --> 00:45:10.140
Anybody who's on my subnet here.

00:45:10.140 --> 00:45:13.170
And I know the password and I'm
going to log into it and it's going

00:45:13.270 --> 00:45:16.080
to go out there and it's going to
hit one of my RAID systems and give

00:45:16.080 --> 00:45:17.430
me all the information about it.

00:45:17.430 --> 00:45:21.590
Now, remember, pretty cool Cocoa app,
right?

00:45:23.800 --> 00:46:50.700
[Transcript missing]

00:46:50.890 --> 00:46:51.940
How about Fiber Channel?

00:46:51.970 --> 00:46:53.180
I have a connection to Fiber Channel.

00:46:53.180 --> 00:46:53.660
I can look.

00:46:53.760 --> 00:46:55.080
I have two links.

00:46:55.130 --> 00:46:58.240
I can see this,
this little worldwide name down here.

00:46:58.270 --> 00:46:59.560
It's only 48 digits.

00:46:59.560 --> 00:47:02.120
It's really simple and easy to remember.

00:47:02.910 --> 00:47:03.540
and my network.

00:47:03.630 --> 00:47:05.460
So why do I need network?

00:47:05.480 --> 00:47:07.830
Because we do what's called
out-of-band management.

00:47:07.840 --> 00:47:14.460
What's connecting my RAID admin system
to my RAID systems here is Ethernet.

00:47:14.480 --> 00:47:16.920
I'm not using the
bandwidth on Fibre Channel.

00:47:16.920 --> 00:47:18.420
I'm doing this in what's
called out-of-band,

00:47:18.420 --> 00:47:20.170
so it's really a simple connection.

00:47:20.180 --> 00:47:22.220
But you'll notice I have
a link that's down,

00:47:22.220 --> 00:47:25.920
because I wanted to get an amber light
in here to show you what it looks like.

00:47:25.970 --> 00:47:27.180
I have a link that's down.

00:47:27.180 --> 00:47:27.800
It's a warning.

00:47:27.800 --> 00:47:31.150
It's warning me, telling me, Alex,
you only connect to one

00:47:31.150 --> 00:47:32.760
of those Ethernet lines.

00:47:32.760 --> 00:47:36.180
So if your switch or router
on your Ethernet goes down,

00:47:36.180 --> 00:47:38.070
you're not going to be able to
see your RAID system when you're

00:47:38.070 --> 00:47:39.370
on vacation in Fuji next week.

00:47:39.380 --> 00:47:41.380
So you want to have them both on there.

00:47:41.380 --> 00:47:45.290
You'll notice I also have some
speed and configuration on here,

00:47:45.510 --> 00:47:49.870
and then something brand new in
RAID admin 1.1 is an event log.

00:47:49.920 --> 00:47:52.560
So I can actually save the
events and know what I did,

00:47:52.560 --> 00:47:54.660
because believe it or not, we get busy.

00:47:54.660 --> 00:47:57.060
It's one of those funny
things that happens.

00:47:57.100 --> 00:47:58.700
So this is basically a system.

00:47:58.700 --> 00:47:59.400
Let's do something.

00:47:59.400 --> 00:48:00.810
Let's do something funny here.

00:48:00.810 --> 00:48:02.060
Let's create a RAID system.

00:48:02.060 --> 00:48:02.780
Is that cool?

00:48:02.860 --> 00:48:04.940
So everybody's used to Keychain, right?

00:48:04.940 --> 00:48:06.670
So I have that in my Java app here.

00:48:06.670 --> 00:48:08.780
So let's see if I remember my password.

00:48:09.300 --> 00:48:28.600
[Transcript missing]

00:48:28.850 --> 00:48:31.340
I'm an IT person,
but I manage a lot of different things.

00:48:31.340 --> 00:48:33.640
I don't just manage my
RAID systems every day.

00:48:33.640 --> 00:48:35.990
If I do, I've got a pretty cushy job
if they're Xserve RAIDs.

00:48:36.910 --> 00:48:41.680
But I don't remember what the
difference between RAID 3 and RAID 5 is.

00:48:41.680 --> 00:48:45.080
So I just look up here and it tells me,
and I can build a RAID set knowing

00:48:45.080 --> 00:48:46.660
I need three or more drives.

00:48:46.660 --> 00:48:47.840
How do I do it?

00:48:47.930 --> 00:48:48.920
This is really hard.

00:48:48.940 --> 00:48:51.110
So I pick a drive and I select them.

00:48:51.170 --> 00:48:52.570
Oh, my finger's getting tired.

00:48:52.570 --> 00:48:53.690
Oh, this is a lot of work.

00:48:53.770 --> 00:48:56.640
I select my drives,
and then we have this little

00:48:56.640 --> 00:48:58.680
thing that's called RAID Now.

00:48:58.800 --> 00:49:00.340
What does that mean?

00:49:00.340 --> 00:49:01.530
It's background initialization.

00:49:01.610 --> 00:49:04.350
So I can click that,
and that allows me to actually

00:49:04.600 --> 00:49:06.080
use the RAID set instantly.

00:49:06.080 --> 00:49:08.000
So what I'm going to
do is build a RAID set,

00:49:08.000 --> 00:49:09.730
and it's going to take a long time.

00:49:09.750 --> 00:49:12.610
It's actually going to take
24 hours to build a RAID set.

00:49:12.650 --> 00:49:16.310
Because what I'm going to do is I'm going
to check to a surface analysis on every

00:49:16.610 --> 00:49:20.420
single drive in the system to make sure
there's no failures of those drives.

00:49:20.420 --> 00:49:22.680
Because you don't want to
build a RAID set on bad drives.

00:49:22.680 --> 00:49:25.810
And you'd be surprised if you
ever see other RAID systems and

00:49:25.810 --> 00:49:28.780
they build a RAID set in like
five minutes or ten seconds.

00:49:28.800 --> 00:49:30.790
You go, oh, they did a lot of
checking on those drives,

00:49:30.790 --> 00:49:31.440
didn't they?

00:49:31.460 --> 00:49:32.920
They made sure those were perfect.

00:49:32.940 --> 00:49:35.350
They just looked at the
signature and wrote it on there.

00:49:35.350 --> 00:49:38.440
We're going to do a complete surface
analysis of the entire drive,

00:49:38.440 --> 00:49:40.240
back and forth, reads and writes.

00:49:40.240 --> 00:49:41.980
And we're going to
spare out any bad areas.

00:49:41.980 --> 00:49:43.490
We're going to take care of it all.

00:49:43.550 --> 00:49:45.770
But in the meantime,
you'll still be able to use it.

00:49:45.770 --> 00:49:47.650
And then I want high performance.

00:49:47.750 --> 00:49:49.560
You know what it says here.

00:49:49.610 --> 00:49:54.230
It says that if I turn on drive cache,
I should have batteries or UPS.

00:49:54.510 --> 00:49:57.540
That's a warning, guys,
because you can lose data if you don't.

00:49:57.720 --> 00:49:58.920
And then I say create.

00:49:58.930 --> 00:49:59.760
I'm done.

00:49:59.760 --> 00:50:05.440
I just built a RAID 5 RAID set on
the fly in a matter of seconds.

00:50:06.070 --> 00:50:06.360
That's it.

00:50:06.430 --> 00:50:06.810
It's easy.

00:50:06.840 --> 00:50:10.360
So what else is really
cool about RAID Admin?

00:50:10.360 --> 00:50:11.420
How about settings?

00:50:11.540 --> 00:50:15.120
So the one thing I can do in this system,
in fact, what I'm going to do here is I'm

00:50:15.130 --> 00:50:19.110
going to grab another one that
has some different stuff on it.

00:50:33.520 --> 00:50:33.520
So I can see some different settings.

00:50:33.520 --> 00:50:33.520
This is actually the system I'm
using right now in this configuration

00:50:33.520 --> 00:50:33.520
with the provisioning server.

00:50:33.520 --> 00:50:33.520
This one has some cool settings on it.

00:50:33.520 --> 00:50:33.520
So I'm going to go in and
take a look at the settings.

00:50:37.470 --> 00:50:40.440
and what you're going to notice
first is the system information.

00:50:40.440 --> 00:50:41.800
So this is the RAID RPS rack.

00:50:41.800 --> 00:50:43.170
That's this rack over here.

00:50:43.210 --> 00:50:44.130
And this is RAID 3.

00:50:44.250 --> 00:50:45.490
I can synchronize my time.

00:50:45.500 --> 00:50:47.350
I can change my management passwords.

00:50:47.350 --> 00:50:49.960
Remember I mentioned about
the audible system alerts?

00:50:49.960 --> 00:50:51.550
I can turn them on or turn them off.

00:50:51.590 --> 00:50:54.280
I can restart automatically
when there's a power failure.

00:50:54.400 --> 00:50:57.990
Anybody like to get called in the middle
of the night when there's a power failure

00:50:57.990 --> 00:51:01.250
because the RAID went down and you've
got to go push the button back on?

00:51:01.500 --> 00:51:01.960
Forget that.

00:51:01.960 --> 00:51:02.940
No more doing that.

00:51:02.940 --> 00:51:04.620
I mentioned the network settings.

00:51:04.620 --> 00:51:06.640
I can change from manual to DHCP.

00:51:07.400 --> 00:51:08.890
Fiber channel.

00:51:08.910 --> 00:51:10.680
If you have an existing
fiber channel network,

00:51:10.680 --> 00:51:14.260
this is the most important thing
you're ever going to play with.

00:51:14.600 --> 00:52:39.500
[Transcript missing]

00:52:40.170 --> 00:52:43.930
Part of that is marketing, but...

00:52:46.670 --> 00:52:48.720
For the most part,
it's because most RAID systems,

00:52:48.750 --> 00:52:50.510
you have to be a genius to tune them.

00:52:51.750 --> 00:52:54.600
So I mentioned there were
automatic and there were manual

00:52:54.600 --> 00:52:55.800
settings for our RAID systems.

00:52:55.800 --> 00:53:00.080
So first thing we do is we do
all the automatic stuff for you.

00:53:00.100 --> 00:53:02.500
We tune it based on the way you tell us.

00:53:02.500 --> 00:53:05.020
You tell us you have 512
megs of cache in there.

00:53:05.020 --> 00:53:07.280
You tell us that you have battery backup.

00:53:07.280 --> 00:53:10.440
You tell us you're going to do RAID 5,
and we tune it.

00:53:12.160 --> 00:53:14.710
But we also give you other settings.

00:53:14.940 --> 00:53:16.100
I mentioned Drive Cache.

00:53:16.100 --> 00:53:18.580
I can turn the Drive Cache
on in the drives.

00:53:18.580 --> 00:53:22.040
So if I didn't have a UPS and I'm
willing to take a performance hit,

00:53:22.040 --> 00:53:24.110
I don't want to turn Drive Cache on.

00:53:25.390 --> 00:53:28.730
"I'm scared that if
I have a power failure,

00:53:28.730 --> 00:53:32.820
I could lose some data."
Now we do have in Mac OS X,

00:53:32.820 --> 00:53:35.590
we do of course have journaling.

00:53:35.650 --> 00:53:39.640
Journaling protects you
against these things.

00:53:39.640 --> 00:53:44.350
But there's still the possibility
that you could lose a lot

00:53:44.370 --> 00:53:48.780
of data because there's 8
megabytes of cache per hard drive,

00:53:48.780 --> 00:53:48.780
times that by 14,
and that's bigger than your spreadsheet.

00:53:49.080 --> 00:53:50.230
or my spreadsheet.

00:53:50.230 --> 00:53:53.680
So we may want to turn
it on or turn it off.

00:53:53.790 --> 00:53:59.070
I always suggest hooking to
UPS and running DriveCache on,

00:53:59.070 --> 00:54:01.020
because the performance
can be 100% better.

00:54:01.020 --> 00:54:02.540
How about WriteCache?

00:54:02.540 --> 00:54:03.960
What is WriteCache?

00:54:03.960 --> 00:54:07.710
This is kind of a misnomer,
enable and disable.

00:54:07.710 --> 00:54:12.040
Because what we actually do is
we have two levels of WriteCache.

00:54:12.580 --> 00:54:13.980
One is write through.

00:54:13.980 --> 00:54:18.660
That means we don't really cache
anything at the RAID controller.

00:54:18.660 --> 00:54:21.390
Everything that comes through,
we just write it through it,

00:54:21.390 --> 00:54:23.940
and so the data flows
quickly to the drives.

00:54:23.940 --> 00:54:27.810
So the computer, in this case,
let's call it an Xserve,

00:54:27.810 --> 00:54:31.080
as soon as it sees that
the data is at the drives,

00:54:31.080 --> 00:54:33.310
it's free to send more data.

00:54:33.320 --> 00:54:35.260
So it gets this write complete.

00:54:35.260 --> 00:54:37.310
If we do something
called write back cache,

00:54:37.310 --> 00:54:41.120
which is what we're enabling here,
we actually tell the system,

00:54:41.120 --> 00:54:43.620
the Xserve in this case,
that we've written the data to

00:54:43.820 --> 00:54:45.090
the drives when we really haven't.

00:54:45.130 --> 00:54:46.940
We've written it into a cache buffer.

00:54:47.000 --> 00:54:49.160
And that's why we have
those battery backups,

00:54:49.160 --> 00:54:52.720
to back up that cache in case for some
reason we lost power at that case.

00:54:52.940 --> 00:54:54.840
But that could also
increase your performance,

00:54:54.840 --> 00:54:57.620
because imagine if you want to
have a lot of people hitting

00:54:57.910 --> 00:55:01.980
the RAID system at once,
what do you expect it to do?

00:55:02.010 --> 00:55:06.300
You expect the Xserve to send a lot of
commands to the Xserve RAID at once.

00:55:06.300 --> 00:55:10.590
And the only way you can accept those
commands is to start caching them up.

00:55:10.840 --> 00:55:13.560
And also you have to remember that
the data that's coming off the hard

00:55:13.560 --> 00:55:17.680
drives can come either in order or
out of order to the RAID controller.

00:55:17.680 --> 00:55:20.460
And so what we want to do is
we want to cache all that data

00:55:20.460 --> 00:55:24.360
up so we can get as much data
delivered to the Xserve at once.

00:55:24.360 --> 00:55:26.990
We want to open the floodgates,
so this is important.

00:55:27.000 --> 00:55:31.600
Now I mentioned that we had
dynamic prefetch in the system.

00:55:31.630 --> 00:55:34.220
So why do I have a
prefetch setting for RAID?

00:55:34.240 --> 00:55:35.680
And what is prefetch?

00:55:36.540 --> 00:55:41.660
Well, essentially what prefetch is,
is that if I, let's take the alphabet,

00:55:41.740 --> 00:55:42.840
A through Z.

00:55:42.840 --> 00:55:47.070
If I tell you that I want
to look at A and B,

00:55:47.070 --> 00:55:50.140
you're pretty much going to
guess that the next thing

00:55:50.150 --> 00:55:51.250
I want to look at is C and D.

00:55:51.260 --> 00:55:54.160
So in a streaming application,
or if you're like me,

00:55:54.220 --> 00:55:58.110
I'm probably going to look at Z next,
but if you're in a streaming application,

00:55:58.160 --> 00:56:00.830
it's a pretty good guess that I'm
going to prefetch a lot of data

00:56:00.840 --> 00:56:03.850
ahead because I'm going to anticipate
what you're going to get next.

00:56:05.430 --> 00:56:07.380
So I said that we're dynamic.

00:56:07.640 --> 00:56:13.800
So what we do is we look at the data that
the driver is giving us from our Xserve,

00:56:13.910 --> 00:56:17.140
from the OS, and we say,
what kind of data is it?

00:56:17.160 --> 00:56:20.190
If it's streaming data,
what I do is I open my prefetch

00:56:20.290 --> 00:56:23.180
window and I start grabbing a
lot of data because I know if

00:56:23.180 --> 00:56:26.920
I'm streaming a QuickTime movie,
the rest of the QuickTime movie is what

00:56:27.040 --> 00:56:28.870
you're likely going to want to see.

00:56:28.870 --> 00:56:30.370
It's the data you want.

00:56:32.260 --> 00:56:35.020
But, you notice here I have
three settings for that.

00:56:35.020 --> 00:56:36.260
Why?

00:56:36.260 --> 00:56:38.640
If I just can dynamically change this.

00:56:38.640 --> 00:56:41.900
It's the size of the
dynamic changes we can make.

00:56:41.990 --> 00:56:46.720
So if I set it to 128, you give me,
the RAID controller, a lot of range.

00:56:46.720 --> 00:56:48.020
I can go anywhere I want.

00:56:48.060 --> 00:56:51.060
If I set it to 1,
I can only do a little prefetch.

00:56:51.060 --> 00:56:52.580
Why?

00:56:52.580 --> 00:56:54.680
Why would I need to change it?

00:56:54.730 --> 00:56:56.410
Why would you be smarter than me?

00:56:57.440 --> 00:56:59.130
Well, the reason is,
you may not want to watch

00:56:59.130 --> 00:57:00.670
that whole QuickTime movie.

00:57:00.810 --> 00:57:03.130
You might be scrubbing a timeline,
you might have a hundred

00:57:03.130 --> 00:57:05.540
users and everybody wants to
share a little of that data.

00:57:05.590 --> 00:57:08.800
So you know your data
patterns better than I do.

00:57:09.630 --> 00:57:11.200
So what's cool about this?

00:57:11.260 --> 00:57:12.130
It's dynamic.

00:57:12.130 --> 00:57:14.490
You run a test based
on your data patterns,

00:57:14.490 --> 00:57:17.720
you're using your users, you hammer it,
you hit it a lot,

00:57:17.720 --> 00:57:20.270
you don't see the performance you want.

00:57:20.510 --> 00:57:21.100
What do you do?

00:57:21.100 --> 00:57:22.720
It's really hard here.

00:57:23.320 --> 00:57:25.790
You go over and you push the button.

00:57:26.420 --> 00:57:27.060
You go over and you push the button.

00:57:27.120 --> 00:57:27.420
You run the test again.

00:57:27.420 --> 00:57:30.360
So I'll give you some
general rules for this.

00:57:30.390 --> 00:57:32.720
Anybody here have I/Os per second?

00:57:32.820 --> 00:57:34.300
Small files are I/Os per second.

00:57:34.410 --> 00:57:36.340
Large files are usually megabytes.

00:57:36.370 --> 00:57:38.440
They usually work against each other.

00:57:38.470 --> 00:57:42.700
If you have large files, video content,
put the prefetch as high as you can.

00:57:42.720 --> 00:57:46.740
If you have tons of users, lots of users,
they do small files,

00:57:46.770 --> 00:57:48.660
turn the prefetch down.

00:57:48.680 --> 00:57:49.780
You'll help the system.

00:57:49.820 --> 00:57:56.390
And in all cases,
keep write cache enabled.

00:57:56.400 --> 00:57:58.900
great admin.

00:57:58.900 --> 00:58:00.490
Now let me show you something else.

00:58:00.580 --> 00:58:02.240
Can I go to demo three, please?

00:58:03.700 --> 00:58:06.040
So this is,
I don't know what kind of system this is.

00:58:06.040 --> 00:58:08.340
This is,
I can't remember one of these things.

00:58:08.340 --> 00:58:09.920
It's called a PC.

00:58:09.920 --> 00:58:12.900
So this is actually
RAID admin running on Windows.

00:58:12.900 --> 00:58:18.340
Now, this isn't something we support,
but I mentioned RAID admin is Java.

00:58:18.340 --> 00:58:22.290
Oh, I'll even show you something that
I didn't show you on the Mac,

00:58:22.360 --> 00:58:25.020
which I could have shown you,
is contextual menus.

00:58:25.020 --> 00:58:28.060
RAID admin actually has
contextual menus as a Java app.

00:58:28.160 --> 00:58:29.520
So it's pretty cool.

00:58:29.520 --> 00:58:33.460
All the capabilities of RAID admin on
the Mac are available on other platforms.

00:58:33.600 --> 00:58:37.620
Such as Windows, such as Sun,
anything that runs Java 1.31 or better.

00:58:37.620 --> 00:58:40.810
So you can actually manage your system,
although not necessarily

00:58:40.810 --> 00:58:43.250
a recommendation,
you can actually manage your

00:58:43.250 --> 00:58:44.900
system from a Windows system.

00:58:44.920 --> 00:58:48.440
So when you're stuck in Fiji on vacation,
and you forgot to bring

00:58:48.460 --> 00:58:52.400
your PowerBook with you,
you can still manage through RAID admin.

00:58:52.400 --> 00:58:53.580
Okay, great.

00:58:53.580 --> 00:58:54.560
Can we go back to slides, please?

00:58:58.200 --> 00:58:59.560
Cool.

00:58:59.610 --> 00:59:02.600
So, here's a typical
LUN management configuration.

00:59:02.600 --> 00:59:07.580
One of the things I like to talk
about is how we actually can do basic

00:59:07.580 --> 00:59:14.400
SAN functionality in Xserve RAID with
RAID admin without really having to spend

00:59:14.470 --> 00:59:20.100
any money on SAN software pieces and
parts and still do what's true to a SAN,

00:59:20.100 --> 00:59:25.450
which is consolidating your storage
and deploying it to many servers.

00:59:25.460 --> 00:59:30.070
So, I showed you how we had four
servers basically deployed here,

00:59:30.130 --> 00:59:33.060
or three servers
deploying four RAID sets.

00:59:33.060 --> 00:59:35.710
So, let me show you how it
actually would look.

00:59:35.720 --> 00:59:39.310
We'd break it up into
four Xserves in this case.

00:59:39.320 --> 00:59:43.540
I'd build four RAID sets
using that one masking I saw.

00:59:43.540 --> 00:59:48.740
And now, I get the advantage of global
hot-sparing using that tool by just

00:59:48.740 --> 00:59:53.800
putting the worldwide port name of each
one of those Xserves and addressing

00:59:53.800 --> 00:59:55.440
those to each one of the Xserves.

00:59:55.460 --> 00:59:57.440
So, I can deploy that to any
one of the RAID sets.

00:59:57.830 --> 00:59:58.180
Simple.

00:59:58.180 --> 00:59:59.870
So, we can deploy that.

01:00:00.100 --> 01:00:01.420
You can do it in seconds.

01:00:01.440 --> 01:00:04.320
In this case,
I used a fiber channel switch to

01:00:04.350 --> 01:00:06.540
allow me to go from two to four.

01:00:06.800 --> 01:00:12.080
Now, the beauty of this is that not every
computer can see every RAID set.

01:00:12.080 --> 01:00:15.400
Only the computer,
or only the Xserve in this case,

01:00:15.430 --> 01:00:18.540
that is attached to its
RAID set can see its RAID set.

01:00:18.670 --> 01:00:21.200
The other data is protected away.

01:00:21.470 --> 01:00:23.850
And easily,
I can change who sees what data.

01:00:23.880 --> 01:00:25.580
So it's a really simple deployment.

01:00:27.270 --> 01:00:28.730
So let me wrap it up.

01:00:29.050 --> 01:00:31.550
There's five hints I'll
give you for deployment.

01:00:31.690 --> 01:00:33.730
First thing to remember
is it's easy as one,

01:00:33.760 --> 01:00:35.870
two, three, almost.

01:00:36.020 --> 01:00:38.330
The first one is read the manual.

01:00:39.670 --> 01:00:40.950
What?

01:00:41.060 --> 01:00:42.780
There's two manuals for Xserve RAID.

01:00:42.840 --> 01:00:46.700
One's a hardware manual, it's 91 pages,
and it's excellent.

01:00:47.060 --> 01:00:49.050
The second one is the software
manual for RAID admin.

01:00:49.060 --> 01:00:51.000
Do you really need to read it?

01:00:51.020 --> 01:00:52.690
I would read it.

01:00:53.030 --> 01:00:53.480
Plan ahead.

01:00:53.510 --> 01:00:57.300
This is the biggest problem that
we all have with deploying RAID,

01:00:57.300 --> 01:00:59.400
is we either buy too
much or buy too little,

01:00:59.400 --> 01:01:00.700
but we never deploy it right.

01:01:02.360 --> 01:01:03.680
So that goes along with my next one.

01:01:04.000 --> 01:01:07.350
Buy too much, because you're going
to ask for more later.

01:01:07.350 --> 01:01:10.030
Okay, that's a little marketing pitch,
okay.

01:01:10.030 --> 01:01:13.050
Then, number four, read the manual again.

01:01:15.150 --> 01:01:15.870
5.

01:01:15.970 --> 01:01:17.190
Deploy it.

01:01:17.190 --> 01:01:18.980
It's really simple.

01:01:18.980 --> 01:01:24.620
If you want to get more information,
you can contact myself or Skip Levins.

01:01:24.620 --> 01:01:28.170
There's reference
libraries for Xserve RAID.

01:01:28.170 --> 01:01:31.030
A lot of information online for that.

01:01:31.030 --> 01:01:35.100
I'd like to open it up to any
questions that anybody has,

01:01:35.100 --> 01:01:36.710
if we can do that.

01:01:37.680 --> 01:01:40.050
Oh,
I did want to talk about one more thing,

01:01:40.060 --> 01:01:42.040
too, two more things, actually.

01:01:42.040 --> 01:01:49.800
In the XServe, in the XServe deploying
XServe session yesterday,

01:01:49.800 --> 01:01:54.490
we were talking about ways of making
it easy to deploy multiple servers,

01:01:54.500 --> 01:01:57.780
and Doug Brooks mentioned
something called the introvert,

01:01:57.780 --> 01:01:59.840
which is a little device here.

01:01:59.840 --> 01:02:03.260
I call it the little
buddy for the XServe RAID,

01:02:03.300 --> 01:02:07.670
and it allows us to take a
cartridge or what we call a drive

01:02:07.670 --> 01:02:13.100
carrier from an XServe or an XServe
RAID and bring it up onto a G4,

01:02:13.100 --> 01:02:16.710
G5, or even another XServe if we want to,
really easily because it

01:02:16.710 --> 01:02:20.010
makes it hot-pluggable using
FireWire on the system.

01:02:20.040 --> 01:02:22.690
There's two really
cool things you can do.

01:02:22.700 --> 01:02:25.960
One is I mentioned mirroring
on the XServe RAID.

01:02:26.000 --> 01:02:28.860
So if I mirror,
let's say I have seven drives

01:02:28.860 --> 01:02:32.950
on one side of my XServe RAID,
and I do a mirror of one of those drives,

01:02:33.060 --> 01:02:36.540
and I don't tell it that I want to
just mirror one drive on the other.

01:02:36.560 --> 01:02:41.300
to the next drive, it will automatically
mirror all seven drives.

01:02:43.030 --> 01:02:44.720
Why would anybody ever use that?

01:02:44.910 --> 01:02:47.300
Well,
how about if I have to make an image

01:02:47.300 --> 01:02:49.190
and deploy to multiple Xserves?

01:02:49.390 --> 01:02:51.900
I have seven boot drives.

01:02:52.020 --> 01:02:55.890
And if I want to check them,
I take my extrovert,

01:02:56.370 --> 01:02:57.300
Am I introvert, actually?

01:02:57.300 --> 01:03:01.960
And I mounted up on my G5, G4,
and I can actually see what I got.

01:03:02.000 --> 01:03:04.080
So I can have seven copies easily.

01:03:04.080 --> 01:03:07.680
So that's my little tips and
tricks thing for Xserve RAID.