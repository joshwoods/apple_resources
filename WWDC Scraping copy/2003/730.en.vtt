WEBVTT

00:00:24.920 --> 00:00:26.400
Thank you very much.

00:00:26.470 --> 00:00:29.300
The first question you should have is,
alternative to what?

00:00:30.360 --> 00:00:36.020
And I would guess that somewhere
between 99 and 100% of people developing

00:00:36.040 --> 00:00:40.640
QuickTime software right now are
using a fairly restricted set of tools.

00:00:40.880 --> 00:00:44.420
Either they're programming in straight C,
or they're maybe using an

00:00:44.420 --> 00:00:50.900
object-oriented language like C++,
or Objective C, or Objective C++,

00:00:50.900 --> 00:00:52.560
or even Java.

00:00:52.560 --> 00:00:56.990
And these are all of a
family of C-oriented tools.

00:00:57.360 --> 00:00:59.930
What I want to look at today
is some other programming

00:00:59.930 --> 00:01:04.200
environments that we could use to
develop QuickTime applications.

00:01:04.200 --> 00:01:07.200
So, what are we going to learn today?

00:01:07.460 --> 00:01:11.910
Well, that's me and Keith.

00:01:12.480 --> 00:01:15.630
We're going to look at how to
build a QuickTime application,

00:01:15.630 --> 00:01:17.670
and we're going to do it
in 10 minutes or less.

00:01:17.670 --> 00:01:21.830
And for several of these environments,
we're going to do it in

00:01:21.900 --> 00:01:23.980
10 lines of code or less.

00:01:24.740 --> 00:01:28.630
Once we've done that,
we're going to look at some

00:01:28.630 --> 00:01:32.640
ways to extend these built-in
support for QuickTime in each of

00:01:32.800 --> 00:01:34.320
those application environments.

00:01:34.440 --> 00:01:38.330
Along the way,
we will encounter some limitations

00:01:39.020 --> 00:01:43.440
that these various environments have,
and we'll also look at some

00:01:43.440 --> 00:01:44.720
ways to work around those.

00:01:45.740 --> 00:01:48.670
Finally, at the end,
I will give some guidance to the

00:01:48.670 --> 00:01:53.140
people developing those development
environments as to how I think they could

00:01:53.220 --> 00:01:55.150
be made even better than they are now.

00:01:55.160 --> 00:01:57.680
We've got a full plate today.

00:01:57.680 --> 00:02:02.920
We may not get to Q&A,
but I think you'll enjoy what we've got.

00:02:04.330 --> 00:02:07.160
So, these are the standards that,
as I recall,

00:02:07.230 --> 00:02:11.040
I'm guessing most people are using
to develop QuickTime applications.

00:02:11.040 --> 00:02:15.380
MetroWorks CodeWarrior
on Mac and Windows,

00:02:15.380 --> 00:02:23.220
probably using C++ and perhaps the
PowerPlant application framework.

00:02:23.300 --> 00:02:27.070
If you're developing for Windows only,
you're probably using

00:02:27.160 --> 00:02:33.820
Microsoft Developer Studio,
possibly with MFC application framework.

00:02:34.300 --> 00:02:38.430
And if you're developing for Mac only,
chances are you're

00:02:38.430 --> 00:02:40.390
using the new Apple IDE.

00:02:40.600 --> 00:02:42.810
So what are some of the alternatives?

00:02:43.060 --> 00:02:45.610
Well,
I went casting about to see what I could

00:02:45.610 --> 00:02:50.640
use to build QuickTime applications
without resorting to those old standards.

00:02:50.710 --> 00:02:53.310
And I came across at least these eight.

00:02:53.500 --> 00:02:58.080
And if anybody knows any other ones,
I'd love to hear about them.

00:02:58.200 --> 00:03:05.330
I don't have time to talk about eight
different programming environments today,

00:03:05.330 --> 00:03:05.330
so I'm going to pick the top four there.

00:03:07.540 --> 00:03:13.300
These are all similar in many ways,
as we'll see.

00:03:13.300 --> 00:03:16.690
And one nice feature that they have
in common is that they're what we call

00:03:16.690 --> 00:03:18.500
rapid application development tools.

00:03:18.500 --> 00:03:24.300
The idea being that in very little code,
with very little pain, and indeed,

00:03:24.300 --> 00:03:27.870
as I've claimed, in 10 minutes or less,
you can get an application up and

00:03:27.870 --> 00:03:29.660
running that will do what you want.

00:03:29.660 --> 00:03:33.610
So let's...

00:03:34.960 --> 00:03:40.770
I'm not going to build
a full multi-document

00:03:40.790 --> 00:03:42.840
application in any of these.

00:03:42.840 --> 00:03:45.210
So I've got to sort of limit
what I want to achieve.

00:03:45.280 --> 00:03:48.740
So for each of these four environments,
I want to do three things, really.

00:03:48.740 --> 00:03:53.350
I want to be able to prompt the user,
have the user select a

00:03:53.510 --> 00:03:55.600
QuickTime movie file.

00:03:55.600 --> 00:04:00.690
I then want to open that movie
file in a window on the screen

00:04:00.770 --> 00:04:04.880
that is sized to contain just
the movie and the movie file.

00:04:04.900 --> 00:04:07.090
movie controller bar.

00:04:07.280 --> 00:04:08.400
So really there's three things.

00:04:08.400 --> 00:04:11.900
I want to find a file,
I want to open the movie in the file,

00:04:12.160 --> 00:04:17.820
and I want to size the window to exactly
contain the movie and its controller bar.

00:04:18.100 --> 00:04:23.280
Now, once I've done that,
the hope is that the window will

00:04:23.650 --> 00:04:28.560
present all the standard means of
interacting with the QuickTime movie.

00:04:28.660 --> 00:04:32.370
So basically,
mouse and keyboard input should

00:04:32.370 --> 00:04:34.510
work as you expect it to.

00:04:35.520 --> 00:04:39.040
And one final and very important item.

00:04:39.080 --> 00:04:42.500
Once I've done all that and I've
got my movie open on the window,

00:04:42.560 --> 00:04:45.620
open in a window on the screen,
it shouldn't matter what kind

00:04:45.620 --> 00:04:47.460
of QuickTime movie I've opened.

00:04:47.460 --> 00:04:52.660
QuickTime can handle a large
range of different media types.

00:04:52.660 --> 00:04:55.980
Sometimes we tend to think
of it as video and sound,

00:04:56.170 --> 00:05:00.680
but we have things like QuickTime VR,
sprites, animation, flash.

00:05:01.220 --> 00:05:04.570
In the ideal world,
each of these applications would

00:05:04.570 --> 00:05:06.840
handle those things perfectly.

00:05:09.310 --> 00:05:12.780
"And let's show what I mean there.

00:05:12.890 --> 00:05:16.840
Can I get VGA 2, I guess?

00:05:16.840 --> 00:05:20.900
So I've got a selection here of

00:05:22.560 --> 00:05:29.460
I'm just going to drag them
all onto a sample application.

00:05:29.460 --> 00:05:31.230
Now this is the kind of thing
that most people would write.

00:05:31.270 --> 00:05:33.900
It's a C-based application.

00:05:33.900 --> 00:05:36.100
The code has been on the
web for this for years.

00:05:36.100 --> 00:05:40.090
Here I've got your standard music video.

00:05:40.780 --> 00:05:46.900
Open in a window on the screen.

00:05:46.900 --> 00:05:46.900
There really is audio here,
I guarantee you.

00:05:50.640 --> 00:05:55.960
Okay, so that's what most people tend
to think of as a QuickTime movie.

00:05:55.960 --> 00:05:57.400
Here's a different kind
of QuickTime movie.

00:05:57.400 --> 00:06:01.100
This is a sprite movie,
and this is a wired sprite movie.

00:06:01.270 --> 00:06:07.300
So I've got this little icon bouncing
around inside the movie window.

00:06:08.200 --> 00:06:11.210
Here's a similar looking movie,
but it doesn't bounce,

00:06:11.330 --> 00:06:14.490
but I can drag it if I come
over here and click on it.

00:06:14.620 --> 00:06:17.690
So I'm getting mouse interaction there.

00:06:18.980 --> 00:06:21.980
Here's a QuickTime video effect movie.

00:06:21.990 --> 00:06:24.910
It's a fire that just burns.

00:06:26.000 --> 00:06:29.120
Here's a QuickTime VR movie.

00:06:29.150 --> 00:06:31.340
This is a rendered panorama,
not photographed.

00:06:32.460 --> 00:06:35.360
Again, it's got a different sort
of controller bar down here.

00:06:35.360 --> 00:06:39.660
And finally,
here's another wired sprite movie.

00:06:39.660 --> 00:06:42.340
If I click on the penguin,
the other one moves around.

00:06:44.190 --> 00:06:46.280
Okay,
so that's really the gold standard of

00:06:46.280 --> 00:06:50.710
the kind of interactivity that I need for
each of these development environments.

00:06:53.040 --> 00:06:54.940
First one I want to
talk about is REALbasic,

00:06:54.940 --> 00:06:57.040
a very nice development environment.

00:06:57.040 --> 00:06:59.600
It's been around on the
Macintosh for quite a while,

00:06:59.630 --> 00:07:03.490
and recently has been ported
to work on Windows as well.

00:07:03.720 --> 00:07:06.300
It's published by a company
called Real Software.

00:07:06.320 --> 00:07:08.600
As I said, it's a rapid application
development tool.

00:07:08.600 --> 00:07:11.900
We'll get a better feel for what
that means in just a second.

00:07:11.960 --> 00:07:16.590
The language we're going to use is
an object-oriented variant of BASIC.

00:07:17.170 --> 00:07:21.030
As I said,
the IDE runs on Mac and Windows,

00:07:21.340 --> 00:07:25.760
and you can build applications on
either IDE to run on Mac and Windows.

00:07:25.760 --> 00:07:29.060
And for present purposes,
what we're interested in is that

00:07:29.290 --> 00:07:32.540
there's built-in support for
playing QuickTime movies using what

00:07:32.820 --> 00:07:34.700
they call a movie player control.

00:07:34.700 --> 00:07:37.570
So I think we're ready
for a demo of that.

00:07:43.500 --> 00:07:46.580
So I'm going to come over
here and launch REALbasic.

00:07:46.600 --> 00:07:48.500
I'm using version 4.5.2.

00:07:48.500 --> 00:07:50.520
There's actually a
newer version out there,

00:07:50.520 --> 00:07:55.190
but I haven't got it yet and don't
want to change horses in midstream.

00:07:55.840 --> 00:08:00.420
So when I launch REALbasic,
I get an empty window here.

00:08:00.420 --> 00:08:01.840
That's going to be where the movie is.

00:08:01.840 --> 00:08:06.300
I have a window that shows me
what's in my application right now.

00:08:06.300 --> 00:08:11.060
I have a palette of tools that I can use,
and then I have a properties window,

00:08:11.160 --> 00:08:15.830
which will tell me for the given
selected tool what its properties are.

00:08:15.840 --> 00:08:20.990
So the first thing I'm going to do
is grab this little QuickTime icon

00:08:20.990 --> 00:08:23.330
and drag it into my window.

00:08:23.770 --> 00:08:27.460
I want to put it up at
the top left corner there.

00:08:27.460 --> 00:08:31.500
You can see the top is a negative one,
so let's bring that down.

00:08:32.450 --> 00:08:34.560
I want the movie to
exactly fill the window,

00:08:34.560 --> 00:08:37.740
so I'm going to uncheck
this border property.

00:08:37.820 --> 00:08:41.180
If I were, say, in part of a window,
I might want a nice border

00:08:41.270 --> 00:08:42.750
to delimit the movie.

00:08:43.090 --> 00:08:47.320
And that's my setup for the window.

00:08:47.390 --> 00:08:51.430
I don't need to resize this control,
although I could to fit the window.

00:08:51.580 --> 00:08:53.840
I'm going to do that later
programmatically with code.

00:08:53.870 --> 00:08:55.520
So let's do that.

00:08:55.580 --> 00:08:58.940
I'm going to double-click
on the movie player control,

00:08:58.940 --> 00:09:01.120
and it brings up a code window.

00:09:01.120 --> 00:09:05.050
So I can attach code to
elements of the interface here.

00:09:05.840 --> 00:09:09.470
I'm not interested in the play event.

00:09:09.580 --> 00:09:13.680
I want to attach some
code to the open event.

00:09:13.900 --> 00:09:18.480
So when this window opens and
the movie player control opens,

00:09:18.480 --> 00:09:20.820
the code that I type
here will be executed.

00:09:20.820 --> 00:09:22.160
So what do we want to do?

00:09:22.190 --> 00:09:24.310
Remember, I want to do three things.

00:09:24.310 --> 00:09:26.820
I want to find a file,
open a movie in that file,

00:09:26.970 --> 00:09:28.660
and size it appropriately.

00:09:28.660 --> 00:09:35.370
So the way I get a file is get open.

00:09:35.840 --> 00:09:41.230
So I'm going to do a folder item.

00:09:42.070 --> 00:09:44.520
I need to tell it what
kind of file I want.

00:09:44.600 --> 00:09:50.720
I'm going to want to
open Video QuickTime.

00:09:50.720 --> 00:09:54.030
This is just a MIME type specification.

00:09:59.060 --> 00:10:03.560
Okay, now this is going to present the
standard file opening dialog box,

00:10:03.590 --> 00:10:05.900
and it's going to return
to me a path name,

00:10:05.900 --> 00:10:07.010
or an item.

00:10:07.070 --> 00:10:10.770
Actually, not a path name,
but an object called a folder item.

00:10:10.790 --> 00:10:14.930
So I'm going to say item is
equal to the result of that,

00:10:14.930 --> 00:10:19.450
and since this is basic,
I have to declare that variable,

00:10:19.450 --> 00:10:22.060
and it is of type folder item.

00:10:22.080 --> 00:10:23.310
Okay.

00:10:24.470 --> 00:10:26.200
Notice there was the code completion.

00:10:26.270 --> 00:10:28.820
All I had to do was hit tab
to get what I wanted there.

00:10:29.000 --> 00:10:33.190
Okay, once I have presented the
file opening dialog box,

00:10:33.190 --> 00:10:36.810
the user has selected a
QuickTime movie file because that's

00:10:36.810 --> 00:10:37.820
all they'll be able to select.

00:10:37.900 --> 00:10:41.600
I want to make sure that I got something,
so...

00:10:42.960 --> 00:10:52.850
If item is not equal to nil,
then I'm going to have a block of code.

00:10:52.880 --> 00:10:55.500
Okay, and what am I going to do there?

00:10:56.490 --> 00:10:58.470
What is the object that
this code is attached to?

00:10:58.570 --> 00:11:00.280
It's a movie player object.

00:11:00.280 --> 00:11:04.870
That movie player object has a property,
what its movie is.

00:11:05.150 --> 00:11:09.830
So I can say myMovie or me.movie is what?

00:11:10.060 --> 00:11:17.960
It's the result of opening
that item as an editable movie.

00:11:19.080 --> 00:11:23.820
Finally, I want to set the height
and width appropriately so

00:11:23.820 --> 00:11:26.700
I can say "me.window.css".

00:11:27.000 --> 00:11:29.300
"Width equals what?

00:11:29.830 --> 00:11:34.510
It's going to be the controller

00:11:35.300 --> 00:11:40.860
Width of the movie that I just opened.

00:11:41.450 --> 00:11:44.340
And now I'm going to copy and paste that.

00:11:44.380 --> 00:11:46.960
Do the same for height.

00:11:47.020 --> 00:11:50.000
And height.

00:11:52.200 --> 00:11:53.120
And I'm done.

00:11:53.400 --> 00:11:56.310
I can close that.

00:11:56.400 --> 00:11:59.020
In theory, I could run this,
but actually it won't work.

00:11:59.030 --> 00:12:00.500
I need to do one further thing.

00:12:00.600 --> 00:12:05.740
I need to tell REALbasic what
kind of file types I can open.

00:12:05.740 --> 00:12:09.690
So I'll call this up, and I will add

00:12:10.060 --> 00:12:13.160
There's this nice pop-up
list that goes on forever.

00:12:13.190 --> 00:12:15.690
Video QuickTime,
it fills out all the parameters for me.

00:12:15.930 --> 00:12:17.430
OK, OK.

00:12:17.920 --> 00:12:18.720
Now let's try it.

00:12:18.960 --> 00:12:21.790
We can actually run this
within the IDE by hitting Run.

00:12:21.790 --> 00:12:25.320
There's my file opening dialog box.

00:12:25.370 --> 00:12:27.120
I'll choose a nice music video here.

00:12:27.120 --> 00:12:34.510
It opens it, sizes it,
and let's see if it works.

00:12:37.000 --> 00:12:38.000
Perfect.

00:12:38.000 --> 00:12:42.110
So how many lines of code was that?

00:12:42.110 --> 00:12:45.840
It was one, two, three, four, five, six,
seven, really.

00:12:45.920 --> 00:12:52.130
Seven lines of code, select a movie file,
open it, size the window appropriately,

00:12:52.300 --> 00:12:53.930
and we're good to go.

00:12:53.940 --> 00:12:55.300
Let me...

00:12:57.750 --> 00:13:00.600
Save this here, because I'm going to
come back to this later.

00:13:00.600 --> 00:13:04.160
I want to give it a name.

00:13:04.160 --> 00:13:08.750
Notice I've selected OS X build.

00:13:08.750 --> 00:13:11.990
Let's call it RB Demo.

00:13:13.560 --> 00:13:17.840
Then I'll actually build a
double-clickable application,

00:13:17.840 --> 00:13:21.000
and it nicely opens the finder
up and shows me where it put it.

00:13:21.000 --> 00:13:22.590
Where did it put it?

00:13:22.590 --> 00:13:26.660
Let's put it on the desktop.

00:13:27.340 --> 00:13:29.950
Okay, let me do one more thing here.

00:13:30.330 --> 00:13:31.300
Let's run this again.

00:13:31.300 --> 00:13:36.190
Let's open that Fire Movie.

00:13:37.010 --> 00:13:37.900
Notice this.

00:13:37.900 --> 00:13:40.680
While I'm moving my mouse around,
the fire burns.

00:13:41.040 --> 00:13:44.170
If I stop the mouse,
the fire kind of sputters,

00:13:44.170 --> 00:13:45.780
and it's not getting events here.

00:13:45.780 --> 00:13:54.490
I can do the same thing if I go back
and open the bouncing sprite movie.

00:13:56.200 --> 00:13:59.330
While I'm moving my mouse around,
events are getting processed,

00:13:59.330 --> 00:14:00.840
everything's hunky dory.

00:14:00.840 --> 00:14:03.160
When I stop, I get this jerkiness.

00:14:03.330 --> 00:14:07.380
I discovered, purely by chance,
a real easy workaround.

00:14:07.440 --> 00:14:13.080
If I grab this timer tool,
plunk it down there, give it, say,

00:14:13.200 --> 00:14:18.620
a 33 millisecond period.

00:14:18.620 --> 00:14:21.250
Now let's try running it again.

00:14:22.820 --> 00:14:24.590
FireMovie burns fine.

00:14:24.720 --> 00:14:29.400
So simple little clues there to
make sure that events are sent

00:14:29.400 --> 00:14:32.930
to the movie and we can now,
now we're happy.

00:14:32.930 --> 00:14:35.440
Okay, so that's REALbasic.

00:14:42.130 --> 00:14:48.650
Now I want to bring Keith up here
to talk to us about Visual Basic.

00:14:54.610 --> 00:14:57.700
I think most people have
heard of Visual Basic,

00:14:57.700 --> 00:15:01.150
and what we want to do today is
just do a simple application that

00:15:01.150 --> 00:15:04.360
opens a movie and plays that movie.

00:15:04.360 --> 00:15:10.660
So, as the slide says,
it's a rapid application development.

00:15:11.460 --> 00:15:13.270
This is kind of interesting.

00:15:13.370 --> 00:15:16.360
I just did a little search on
the web and found out that it is

00:15:16.360 --> 00:15:23.620
pretty much the biggest development
environment used on Windows today.

00:15:25.600 --> 00:15:29.860
The latest version is VisualBasic.net,
and that'll be the one I'll be using.

00:15:29.860 --> 00:15:33.200
A lot of people are still
using Visual Basic 6,

00:15:33.200 --> 00:15:37.010
which is still pretty powerful.

00:15:40.880 --> 00:15:44.300
What we're going to do is show
how easy it is to hook into

00:15:44.300 --> 00:15:46.590
several of the ActiveX controls.

00:15:46.680 --> 00:15:49.090
And those controls,
there's three of them that

00:15:49.090 --> 00:15:51.930
we'll look at and talk about,
but we're going to use one,

00:15:51.940 --> 00:15:54.940
and the one we're going
to use is from Skylark.

00:15:57.310 --> 00:16:01.520
ActiveX controls are just COM objects,
and if you're familiar with

00:16:01.620 --> 00:16:07.250
development on Windows,
they're used throughout

00:16:07.260 --> 00:16:09.550
a lot of the development.

00:16:11.950 --> 00:16:14.780
They're very easy to add to Visual Basic.

00:16:14.780 --> 00:16:20.400
A little bit harder to use in C++ and C,
but with Visual Basic,

00:16:20.510 --> 00:16:25.010
you basically drag them over and you
can double-click and hook them up.

00:16:26.880 --> 00:16:31.300
The ones available active
X controls for QuickTime,

00:16:31.300 --> 00:16:34.910
you get one with Apple Computer,
and that's installed

00:16:34.910 --> 00:16:37.230
automatically with QuickTime.

00:16:37.990 --> 00:16:44.490
There is one from Skylight
from Skylark Associates.

00:16:44.700 --> 00:16:57.800
[Transcript missing]

00:17:05.100 --> 00:17:07.010
So the first thing I'm
going to do is bring up the

00:17:07.010 --> 00:17:12.350
visualstudio.net environment here,
and we're going to

00:17:12.350 --> 00:17:14.180
create a new application.

00:17:20.930 --> 00:17:23.650
Except that it's waiting
to install some stuff here.

00:17:23.660 --> 00:17:27.140
Okay.

00:17:27.140 --> 00:17:32.780
So I'll come over here and
just set a new project.

00:17:32.780 --> 00:17:35.740
And we're going to select
Windows application.

00:17:43.330 --> 00:17:48.700
What'll happen here, it'll create a basic
application with one form.

00:17:48.700 --> 00:17:50.920
We could actually run this
and this form would come up.

00:17:51.100 --> 00:17:53.560
Nothing would happen with it.

00:17:53.730 --> 00:17:57.920
So what you do over here,
the first thing we want to do is

00:17:57.920 --> 00:18:02.000
if you look over in this far left,
you'll see all the controls.

00:18:02.000 --> 00:18:04.300
These are ActiveX controls.

00:18:04.300 --> 00:18:09.090
And the first thing I want to do
is I'm going to add a menu to mine

00:18:09.090 --> 00:18:11.720
and add a couple items to them.

00:18:11.720 --> 00:18:15.710
I'll add an open, whoops,
I better name my menu.

00:18:32.360 --> 00:18:35.060
Okay, I've added a few items.

00:18:35.060 --> 00:18:38.200
With these ActiveX controls,
over in the far left,

00:18:38.300 --> 00:18:41.730
you'll notice that you have a bunch
of them for doing check boxes,

00:18:41.730 --> 00:18:45.030
radio buttons,
and you basically just drag them over.

00:18:45.470 --> 00:18:48.070
Sometimes you don't
have ActiveX controls,

00:18:48.130 --> 00:18:50.270
these are the basic
ones that come with it,

00:18:50.270 --> 00:18:54.590
that you will have to actually add to
this list so you can drag it over first.

00:18:54.700 --> 00:18:58.920
And to do that is a
right mouse button click,

00:18:58.920 --> 00:19:01.710
and then you would go over to
– that thing just disappeared.

00:19:01.880 --> 00:19:04.320
"Add/remove items,
and then you could browse to

00:19:04.320 --> 00:19:08.980
your OCX ActiveX control and
just add it into your list.

00:19:09.070 --> 00:19:14.020
Once it is in your list,
you just drag it over to the form.

00:19:18.200 --> 00:19:20.960
I'm just going to size it,
fit the window.

00:19:20.960 --> 00:19:21.800
It's not necessary.

00:19:21.800 --> 00:19:25.490
We'll do some dynamic sizing in a second.

00:19:28.140 --> 00:19:31.630
Okay, so what we've done so far,
we've created a base application,

00:19:31.630 --> 00:19:35.100
added a couple menus,
and we've dragged the ActiveX control.

00:19:35.100 --> 00:19:43.070
Now what we have to do is add the code to
connect all that and open up the movie.

00:19:44.000 --> 00:19:45.720
Let's do that next.

00:19:45.720 --> 00:19:48.650
So if you double click
on one of the menu items,

00:19:48.660 --> 00:19:49.460
it brings you over.

00:19:49.600 --> 00:19:55.000
And I'll go back to the form itself.

00:19:55.000 --> 00:19:55.000
Let's do them all.

00:20:05.400 --> 00:20:09.060
Okay,
so it set up all these little menu items

00:20:09.510 --> 00:20:13.240
that it'll call when we select that.

00:20:13.240 --> 00:20:15.690
Now I have a,
to save time and everything,

00:20:15.760 --> 00:20:20.560
I'm just going to copy some code here,
but I'll go over the code itself.

00:20:29.900 --> 00:20:33.720
Just a couple routines
here to size the movie,

00:20:33.850 --> 00:20:37.190
to open a movie,
and bring up a file dialog.

00:20:44.400 --> 00:20:48.540
Lastly, if you program in C,
you know that you have to,

00:20:48.540 --> 00:20:56.810
with this particular ActiveX control,
you need to call initializeQtml.

00:21:05.280 --> 00:21:07.500
Okay, this should pretty much
do it for the code,

00:21:07.500 --> 00:21:10.520
and then I just should be
able to call these functions,

00:21:10.520 --> 00:21:15.550
and if we're lucky enough,
everything will work.

00:21:15.780 --> 00:21:20.300
So on the first one,
what we want to do is call OpenMovie.

00:21:24.750 --> 00:21:27.860
The second one was a closed movie.

00:21:27.860 --> 00:21:33.490
And these are precooked
functions that I had set up.

00:21:33.600 --> 00:21:36.230
And the last one...

00:21:38.700 --> 00:21:49.300
[Transcript missing]

00:21:51.620 --> 00:21:54.540
So let's take a look at OpenMovie.

00:21:54.540 --> 00:21:57.690
You saw what Tim did before and
basically brings up a file dialog.

00:21:57.690 --> 00:22:03.500
We do a little bit of,
in this particular thing, we call,

00:22:03.850 --> 00:22:09.030
We just call new Open File Dialog
and put in our types here,

00:22:09.140 --> 00:22:14.800
extension we're looking for,
and then we call here to show the dialog.

00:22:15.050 --> 00:22:17.510
And after that,
we do a little sanity check to make

00:22:17.510 --> 00:22:19.820
sure that we got a good result.

00:22:19.820 --> 00:22:23.400
This is the real key in
that the ActiveX control,

00:22:23.400 --> 00:22:26.630
and I can show you what happens here.

00:22:26.850 --> 00:22:27.700
We'll type one.

00:22:27.700 --> 00:22:34.660
And Visual Basic, if you do, oops,
I didn't want to quite do that.

00:22:38.500 --> 00:22:42.480
You can see all the functions
that are available to you,

00:22:42.520 --> 00:22:43.540
and you can select those.

00:22:43.540 --> 00:22:46.700
So that's a really nice feature here,
and you can see what that

00:22:46.700 --> 00:22:49.530
particular ActiveX control offers.

00:22:50.620 --> 00:22:53.520
So what I did, I just went ahead and
precooked a couple things,

00:22:53.530 --> 00:22:56.170
and I set the movie
controller to visible,

00:22:56.340 --> 00:23:00.220
and in this particular one,
I set the open file dialog

00:23:00.220 --> 00:23:02.810
file name into the file name.

00:23:03.060 --> 00:23:06.740
That is what it takes to open up a movie.

00:23:06.740 --> 00:23:10.660
After that, what we'll need to do
is to size the movie.

00:23:10.660 --> 00:23:13.180
So we're looking at the natural
height of the movie here.

00:23:13.180 --> 00:23:19.100
So I do a little calculations and get the
natural width and height of the movie.

00:23:19.100 --> 00:23:21.060
And I add the movie controller.

00:23:21.060 --> 00:23:24.810
In this particular instance,
we know it's 16, so I just add 16 to it.

00:23:24.920 --> 00:23:28.250
I think you probably want to do a
little more work here and figure out

00:23:28.250 --> 00:23:31.890
if you're going to have a controller
or not have a controller with it.

00:23:35.680 --> 00:23:40.560
Down in the load of the
actual form and the control,

00:23:40.880 --> 00:23:44.990
we're going to initialize QuickTime,
and then when we exit,

00:23:44.990 --> 00:23:47.920
we're going to just terminate it.

00:23:48.000 --> 00:23:53.530
So if I type everything right and copy,
we should have an application here.

00:23:53.540 --> 00:23:56.330
This is a demo version.

00:23:56.540 --> 00:23:59.100
So I come over and open.

00:23:59.110 --> 00:24:00.350
It opens a file dialog.

00:24:00.350 --> 00:24:03.850
I lost all my movies.

00:24:22.600 --> 00:24:24.360
I'll just grab one of these.

00:24:24.360 --> 00:24:27.840
These are some of the
movies that we had before.

00:24:30.590 --> 00:24:33.060
Also, I had set up a close.

00:24:33.060 --> 00:24:35.640
I could close it,
or it automatically closes.

00:24:35.640 --> 00:24:36.520
Whoops.

00:24:36.520 --> 00:24:40.060
That wasn't supposed to happen.

00:24:47.350 --> 00:24:51.640
Okay, so we'll do the fire here.

00:24:51.640 --> 00:24:53.740
This is running good, huh?

00:24:53.740 --> 00:24:55.460
There we go.

00:24:55.490 --> 00:24:59.580
Let's try that again.

00:25:14.380 --> 00:25:17.200
You know what I didn't do here?

00:25:17.200 --> 00:25:22.550
I didn't size the movie.

00:25:22.550 --> 00:25:22.550
So that's the thing here.

00:25:35.650 --> 00:25:36.600
There we go.

00:25:36.600 --> 00:25:41.040
Okay, you can see the amount of
work here to put support for

00:25:41.040 --> 00:25:42.980
QuickTime is fairly minimal.

00:25:42.980 --> 00:25:46.720
It was really,
if you look at the AX Skylight 1,

00:25:46.720 --> 00:25:48.730
there's only a handful
of lines to do that,

00:25:48.740 --> 00:25:49.840
I think about four.

00:25:49.840 --> 00:25:55.310
So adding application support
for using Visual Basic and

00:25:55.310 --> 00:25:58.100
QuickTime is fairly easy.

00:25:58.100 --> 00:26:01.830
Okay, I'll turn it back over to Tim.

00:26:08.510 --> 00:26:13.740
Okay, before I move on to there,
let me do something fun here.

00:26:14.730 --> 00:26:18.130
Was this my project from
before with REALbasic?

00:26:18.190 --> 00:26:19.650
Let's hope.

00:26:19.680 --> 00:26:21.730
Okay.

00:26:23.220 --> 00:26:26.160
VGA2, are we there?

00:26:26.560 --> 00:26:27.520
Okay.

00:26:27.650 --> 00:26:31.620
So I just opened the REALbasic
project that I had before.

00:26:31.720 --> 00:26:34.420
Let's go in here to Build Settings.

00:26:34.690 --> 00:26:37.940
Let's click one checkbox.

00:26:38.040 --> 00:26:41.380
Let's go in and give this thing a name.

00:26:44.700 --> 00:26:59.300
[Transcript missing]

00:27:04.200 --> 00:27:09.840
Okay, now I've got this little USB thingy
that I'm going to hook in here.

00:27:09.850 --> 00:27:14.520
What I want to do is take that
exe file and give it to Keith.

00:27:14.700 --> 00:27:18.470
So if all goes well there, it will mount.

00:27:18.470 --> 00:27:18.470
I'm going to copy.

00:27:19.460 --> 00:27:25.410
The Windows executable onto
that little thingamajig.

00:27:30.660 --> 00:27:32.600
Okay, I will now unmount it.

00:27:32.600 --> 00:27:42.990
Keith will now hook this into
his USB port and see if it runs.

00:27:43.100 --> 00:27:49.410
So now can we go to VGA1?

00:28:12.400 --> 00:28:25.200
[Transcript missing]

00:28:29.200 --> 00:28:32.730
If you've ever had to port an application
from Mac to Windows or Windows to Mac,

00:28:32.860 --> 00:28:36.060
I bet it was not as easy
as clicking a checkbox,

00:28:36.130 --> 00:28:39.800
copying it onto your USB dongle,
and moving it to another computer.

00:28:39.800 --> 00:28:41.900
So that's really powerful.

00:28:41.900 --> 00:28:42.900
That's just fantastic.

00:28:42.950 --> 00:28:45.390
Okay, can we go back to slides?

00:28:47.310 --> 00:28:49.280
So there's the basic portion of our talk.

00:28:49.380 --> 00:28:54.950
I want to move on to the higher-level
scripting language portion of our talk,

00:28:55.030 --> 00:28:57.620
and now I want to talk
about RunTime Revolution.

00:28:57.620 --> 00:29:00.250
Of the four environments
that I'm talking about today,

00:29:00.370 --> 00:29:02.770
this is the one that you
may not be familiar with.

00:29:02.840 --> 00:29:07.240
Put out by a company in
Scotland called RunTime Revolution.

00:29:07.240 --> 00:29:10.300
Again, it's a rapid application
development tool.

00:29:10.300 --> 00:29:14.250
This time, the language is a descendant
of HyperCards language,

00:29:14.250 --> 00:29:16.910
HyperTalk, and they call it Transcript.

00:29:17.200 --> 00:29:20.430
Again, we get cross-platform
development capability.

00:29:20.430 --> 00:29:24.860
The IDE runs on either Mac or Windows,
and indeed on some versions of Unix,

00:29:24.860 --> 00:29:28.870
and you can build applications
for Mac or Windows.

00:29:28.880 --> 00:29:34.040
And they do have built-in support for
QuickTime using a movie player control.

00:29:36.340 --> 00:29:38.990
Let's get straight to a demo of that.

00:29:39.110 --> 00:29:41.800
So now we're back to VGA2.

00:29:43.510 --> 00:29:45.500
So I will launch Revolution.

00:29:45.500 --> 00:29:49.250
This is the latest version, 2.0.1.

00:29:49.290 --> 00:29:52.770
If you've used earlier versions,
I highly recommend you update to this.

00:29:52.810 --> 00:29:57.000
They've done a whole lot of work
to make this latest version a

00:29:57.030 --> 00:29:59.480
real nice Aqua Mac OS X citizen.

00:30:00.110 --> 00:30:05.170
So here it opened a palette of tools,
similar to what we've seen in

00:30:05.170 --> 00:30:06.930
Visual Basic and Real Basic.

00:30:06.930 --> 00:30:09.020
Here's sort of an application browser.

00:30:09.020 --> 00:30:12.360
And I don't yet have an empty window.

00:30:12.360 --> 00:30:16.670
What I'm going to do is come
up here and do new main stack.

00:30:16.810 --> 00:30:18.420
And I'm also going to get
my cheat sheet up here,

00:30:18.420 --> 00:30:20.670
because you didn't really think
I remembered all this stuff,

00:30:20.670 --> 00:30:21.200
did you?

00:30:21.220 --> 00:30:24.820
So there's my movie window.

00:30:26.450 --> 00:30:29.220
What I'm going to do
then is come over here,

00:30:29.300 --> 00:30:33.810
select my QuickTime player control,
drag it out,

00:30:34.050 --> 00:30:41.560
again set it to the top left,
and I want to pull down my properties

00:30:42.120 --> 00:30:45.540
window on screen in theory.

00:30:46.800 --> 00:30:49.940
So that's saying that the current
selected object is Player 1.

00:30:50.240 --> 00:30:51.560
I want to give that a different name.

00:30:51.560 --> 00:30:54.630
I want to call that Movie...

00:30:56.700 --> 00:31:03.100
I want to turn on the controller,
and I want to again turn

00:31:03.100 --> 00:31:06.310
off the border property,
because I'm going to size

00:31:06.310 --> 00:31:08.310
it to fit the window.

00:31:12.190 --> 00:31:16.980
Okay, now I want to give my movie window,
I've clicked the window down

00:31:16.990 --> 00:31:20.120
here and not my player up here,
so I want to give it a name.

00:31:20.120 --> 00:31:23.490
Let's call it MovieWindow.

00:31:25.540 --> 00:31:27.840
And I think I'm ready to add some code.

00:31:27.880 --> 00:31:30.720
Now I'm going to click in
the movie window again,

00:31:31.030 --> 00:31:34.840
come up here and say Edit Script.

00:31:34.860 --> 00:31:37.210
And it opens a script editor window.

00:31:37.230 --> 00:31:41.730
This is where I'll type my code that's
associated with the movie window.

00:31:41.970 --> 00:31:44.610
So, again,
I want to do something when the

00:31:44.610 --> 00:31:47.920
stack or the window first opens,
and the way I do that

00:31:48.020 --> 00:31:49.410
is with onOpenStack.

00:31:49.450 --> 00:31:53.720
And notice if I hit return,
I automatically get the end open stack.

00:31:54.060 --> 00:31:55.520
Very nice feature.

00:31:56.740 --> 00:32:01.890
Remember, I want to select a file,
open a movie, and size it appropriately.

00:32:02.010 --> 00:32:07.750
The way I select a file in
transcript is by saying answer file.

00:32:07.810 --> 00:32:13.440
I can now give it a nice prompt,
select a movie file,

00:32:13.440 --> 00:32:17.800
and I can tell it what
type of files I want.

00:32:20.690 --> 00:32:24.240
"No typos there, excellent.

00:32:24.240 --> 00:32:27.970
So when that returns,
it's going to have the file name

00:32:28.300 --> 00:32:30.600
of the file that the user selected.

00:32:30.860 --> 00:32:36.340
So I want to set the
file name of the player

00:32:37.680 --> 00:32:44.450
"MoviePlayer" is the result
of the previous command I ran,

00:32:44.450 --> 00:32:51.710
which is the answer "file", so
that file name will now get set as

00:32:51.710 --> 00:32:56.090
the file name of the MoviePlayer.

00:32:56.090 --> 00:32:56.090
That is to say,
it will tell it what the movie is.

00:32:56.420 --> 00:33:00.080
So that's get a file,
and that's open the movie.

00:33:00.130 --> 00:33:03.330
Now I need to size things appropriately.

00:33:03.510 --> 00:33:06.690
Set width of me.

00:33:06.740 --> 00:33:09.650
Remember,
I'm attaching code to the movie window,

00:33:09.680 --> 00:33:19.100
so I can refer to that object as me.

00:33:20.290 --> 00:33:20.290
Set the width of me to the
width of... And I'll just copy.

00:33:22.300 --> 00:33:31.200
[Transcript missing]

00:33:35.500 --> 00:33:40.140
And now I need to do one final thing,
which is set the rectangle occupied

00:33:40.220 --> 00:33:43.010
by the movie player control.

00:33:45.960 --> 00:33:56.240
And that rectangle is going to be 0, 0,
width of movie player,

00:33:56.350 --> 00:33:58.500
height of movie player.

00:34:01.160 --> 00:34:01.940
And I'm done.

00:34:01.940 --> 00:34:05.050
I will click Apply, close that window.

00:34:05.330 --> 00:34:06.700
So that's all the code I need to add.

00:34:06.920 --> 00:34:07.390
And that was what?

00:34:07.460 --> 00:34:09.640
That was a whole seven
or eight lines of code.

00:34:11.420 --> 00:34:14.760
A couple final enhancements here.

00:34:14.800 --> 00:34:17.870
In the movie window,
I don't want it to show the resize box,

00:34:17.990 --> 00:34:22.150
so in size and position,
I'll turn off resizable.

00:34:23.560 --> 00:34:26.250
And I think we're good to go.

00:34:26.620 --> 00:34:29.450
So let me first save this.

00:34:30.780 --> 00:34:32.050
Okay, something goes wrong.

00:34:32.400 --> 00:34:35.460
Desktop, good.

00:34:35.490 --> 00:34:39.800
Let me build the application.

00:34:39.840 --> 00:34:43.320
I need to set a few
configuration settings here.

00:34:43.320 --> 00:34:44.940
Where was it?

00:34:44.940 --> 00:34:47.400
I want it on the desktop.

00:34:48.380 --> 00:34:51.680
I need to,
so I'm set up for a Mac OS X application.

00:34:51.860 --> 00:34:58.640
I need to tell it what stack file,
and in theory, where did I put it?

00:34:58.770 --> 00:34:59.560
There it is right there.

00:34:59.590 --> 00:35:05.510
And I think I'm good to go.

00:35:11.480 --> 00:35:14.440
Okay, so I think I can quit that.

00:35:14.440 --> 00:35:15.910
It should be in this folder.

00:35:15.940 --> 00:35:20.230
There's my double clickable application.

00:35:21.590 --> 00:35:22.140
So there it is.

00:35:22.140 --> 00:35:24.620
It's put up the file
selection dialog box.

00:35:24.790 --> 00:35:28.600
I will go to my movies folder.

00:35:29.030 --> 00:35:30.700
See what it does to... There it is.

00:35:30.700 --> 00:35:32.350
It resized it.

00:35:32.410 --> 00:35:34.500
Does it run fine?

00:35:38.290 --> 00:35:40.200
Is there some reason we're
not getting audio here?

00:35:40.200 --> 00:35:44.910
It really does support audio.

00:35:47.000 --> 00:35:49.810
Okay, let's try a couple other of those
movies just to make sure that it's

00:35:49.810 --> 00:35:52.020
good for all of our media types.

00:35:52.040 --> 00:35:54.700
Here's our QuickTime VR movie.

00:35:57.890 --> 00:36:19.100
It works fine.

00:36:19.100 --> 00:36:19.100
Let's check the keyboard.

00:36:19.100 --> 00:36:19.100
I'm going to use the arrow
keys here to pan around.

00:36:19.100 --> 00:36:19.100
That works fine.

00:36:19.100 --> 00:36:19.100
I'll use the shift key to zoom in.

00:36:19.100 --> 00:36:19.100
That works fine.

00:36:19.100 --> 00:36:19.100
Control key to zoom out.

00:36:19.100 --> 00:36:19.100
Everything is fine.

00:36:19.100 --> 00:36:19.100
Let me do one final one.

00:36:19.100 --> 00:36:19.110
Let's try our sprite movies.

00:36:19.850 --> 00:36:22.580
Bouncing Sprite.

00:36:22.580 --> 00:36:23.720
Doesn't want to bounce.

00:36:23.810 --> 00:36:26.880
There's an issue here with
getting time for the Sprite movie,

00:36:27.040 --> 00:36:28.790
and I haven't quite figured it out.

00:36:28.860 --> 00:36:30.760
I've been talking with
the Revolution people,

00:36:30.760 --> 00:36:33.280
and I think we've figured
out how to handle this,

00:36:33.460 --> 00:36:36.860
but just so you know that I'm
not trying to hide anything here.

00:36:38.150 --> 00:36:42.960
Okay, I think that's what we
need to do with Revolution.

00:36:42.960 --> 00:36:45.150
I could do the same thing
that I did with REALbasic,

00:36:45.150 --> 00:36:48.600
which is go back in and click the
checkbox to build a Windows application.

00:36:48.600 --> 00:36:52.360
I could have Keith come back up here
and run it on his Windows machine,

00:36:52.360 --> 00:36:54.890
and it would be exactly
what you'd expect.

00:36:57.010 --> 00:36:58.400
Okay,
the last thing I want to talk about,

00:36:58.400 --> 00:37:00.820
or the last development environment,
is AppleScript Studio.

00:37:00.820 --> 00:37:02.530
This is the newest of the bunch.

00:37:02.530 --> 00:37:04.520
It's put out by Apple Computer.

00:37:04.520 --> 00:37:07.320
Again, it's a rapid application
development tool.

00:37:07.320 --> 00:37:10.030
The language now is good old AppleScript.

00:37:10.040 --> 00:37:14.880
So whereas you're used to having
AppleScript control other applications,

00:37:14.900 --> 00:37:19.580
now you can have AppleScript control
things in the same application.

00:37:20.880 --> 00:37:23.700
This is built on the
Cocoa application framework,

00:37:23.800 --> 00:37:27.030
so we're looking at Mac-only
applications and indeed a

00:37:27.030 --> 00:37:29.380
Mac-only development environment.

00:37:29.430 --> 00:37:32.240
So let's launch the demo of that.

00:37:35.960 --> 00:37:40.200
I'm going to get to AppleScript Studio by
launching Project Builder,

00:37:40.200 --> 00:37:42.340
which apparently has been
renamed under my feet.

00:37:42.340 --> 00:37:46.100
You'll notice I'm doing
everything here on Jaguar.

00:37:46.140 --> 00:37:48.890
I don't believe that the
Revolution or REALbasic have had

00:37:48.890 --> 00:37:50.800
a chance to play with Panther yet.

00:37:50.850 --> 00:37:56.880
If they have, I don't know that they've
certified their tools for Panther,

00:37:56.880 --> 00:37:59.510
so I'm doing it on Jaguar here.

00:38:00.000 --> 00:38:01.900
Okay, Project Builder is open.

00:38:01.950 --> 00:38:05.400
I'm going to open a new project.

00:38:05.780 --> 00:38:08.340
And right up here at the top of the list,
beside from Empty Project,

00:38:08.340 --> 00:38:10.880
is AppleScript Application.

00:38:10.990 --> 00:38:13.470
So I'm going to select that.

00:38:13.720 --> 00:38:17.530
Let's call that AppleScript Studio Demo.

00:38:18.840 --> 00:38:19.920
I didn't make up the name.

00:38:19.920 --> 00:38:21.880
What can I do?

00:38:21.920 --> 00:38:23.500
They've taken a lot of heat for that,
I expect.

00:38:25.070 --> 00:38:30.430
Here's my project window, as it were,
and I'll reveal a few things.

00:38:30.450 --> 00:38:33.260
I've got a file of AppleScript.

00:38:33.260 --> 00:38:36.310
It's actually currently empty because
I haven't written any script yet.

00:38:36.370 --> 00:38:39.790
I have another source.

00:38:39.790 --> 00:38:42.060
This is actually some Objective-C code.

00:38:42.060 --> 00:38:45.560
All it does is initialize the
AppleScript kit and then say,

00:38:45.580 --> 00:38:48.080
let's start the application running.

00:38:48.080 --> 00:38:49.940
We don't need to change anything there.

00:38:50.760 --> 00:38:53.500
What we do want to do first
is set up our user interface.

00:38:53.810 --> 00:38:59.490
So I'll open this nib file and...

00:39:04.170 --> 00:39:14.590
I didn't seem to get a new project here,
so I'm going to start over.

00:39:17.500 --> 00:39:20.160
Maybe I have one by that name already,
so let's call it FooDemo.

00:39:20.160 --> 00:39:22.120
All right.

00:39:25.700 --> 00:39:29.340
Let's go back, open our nib file,
which is our UI.

00:39:29.360 --> 00:39:34.510
I guess it wants to give me a movie view.

00:39:34.690 --> 00:39:37.280
Pretend that that was initially empty.

00:39:37.700 --> 00:39:39.700
So that's our movie window.

00:39:39.860 --> 00:39:42.440
You can see that I've got
a palette of tools here,

00:39:42.440 --> 00:39:45.540
and there's a nice QuickTime logo,
so let's drag that over here.

00:39:45.540 --> 00:39:50.140
As usual, I'll put it up at the
top left just for kicks.

00:39:52.460 --> 00:40:00.100
Now I want to open the info panel here.

00:40:00.100 --> 00:40:00.100
I'm actually done.

00:40:00.100 --> 00:40:00.100
That's all I'm going
to put in this window,

00:40:00.100 --> 00:40:00.100
so I'll get rid of that.

00:40:00.640 --> 00:40:05.790
It shows me the attributes
of my movie view there.

00:40:05.910 --> 00:40:09.390
Let's go to this panel, AppleScript.

00:40:09.780 --> 00:40:12.570
And I want to give
that movie view a name,

00:40:12.610 --> 00:40:14.810
so let's call it MovieView.

00:40:14.940 --> 00:40:18.590
Again, as in these high-level
scripting languages,

00:40:18.590 --> 00:40:21.230
I'm going to refer to things by name.

00:40:21.890 --> 00:40:26.480
I'm actually not going to attach
any script to the movie view,

00:40:26.480 --> 00:40:29.790
but I will attach it to the window.

00:40:32.260 --> 00:40:34.860
So it's already got a name there,
so I don't know why I'm getting this.

00:40:34.860 --> 00:40:37.550
I thought I opened a new empty project,
but that's the name

00:40:37.550 --> 00:40:39.460
I would have given it,
Movie Window.

00:40:39.460 --> 00:40:45.380
And what I want to do is
remember with REALbasic,

00:40:45.570 --> 00:40:50.420
we added some code to the open routine.

00:40:50.420 --> 00:40:53.440
With Revolution,
we added some code to the open stack.

00:40:53.530 --> 00:40:56.460
Now we want to add some code
to when this window is opened.

00:40:56.460 --> 00:41:00.250
And the Cocoa terminology
is when we awake from nib.

00:41:00.500 --> 00:41:04.070
Nib is the file that our
resources are stored in here.

00:41:04.400 --> 00:41:18.120
And the script that we're going
to attach is already said to be

00:41:18.120 --> 00:41:18.120
in the file foodemo.applescript.

00:41:18.120 --> 00:41:18.120
Let me just check here
that I've got everything.

00:41:18.120 --> 00:41:18.120
Let me go back here to its properties.

00:41:18.640 --> 00:41:20.740
I don't want it visible at launch time.

00:41:20.860 --> 00:41:22.670
That was the default,
and I've turned off this

00:41:22.780 --> 00:41:24.060
deferred for various reasons.

00:41:26.590 --> 00:41:28.740
Okay,
I think that might be all we need there.

00:41:28.740 --> 00:41:35.770
Let me go back to the
AppleScript panel and do Edit Script.

00:41:39.170 --> 00:41:41.540
You can see I've got
just a skeleton here,

00:41:41.730 --> 00:41:44.980
and it says add my script here,
so that's what I'll do.

00:41:44.980 --> 00:41:49.060
So it's an onAwakeFromNibHandler,
and the object here is the object

00:41:49.470 --> 00:41:53.140
that the script is attached to,
which is the window.

00:41:53.140 --> 00:41:54.910
So if I want to do
anything to the window,

00:41:55.000 --> 00:41:56.290
I can call it the object.

00:41:57.890 --> 00:42:00.940
So again, I'm going to look for, oh,
how about five lines of code here?

00:42:01.220 --> 00:42:07.570
First, I'll define a local variable,
setMovieView.

00:42:07.700 --> 00:42:15.500
[Transcript missing]

00:42:16.030 --> 00:42:19.230
And it is of the object.

00:42:19.430 --> 00:42:21.300
So the window has a movie view in it.

00:42:21.540 --> 00:42:23.580
The name of that movie
view is movie view.

00:42:23.580 --> 00:42:27.340
So I've set the local variable
movie view to the movie view.

00:42:27.340 --> 00:42:27.980
Okay.

00:42:27.980 --> 00:42:29.780
If everybody's confused, wonderful.

00:42:29.780 --> 00:42:33.020
That just keeps me from having
to repeat this movie view,

00:42:33.020 --> 00:42:35.350
movie view of the object all the time.

00:42:35.360 --> 00:42:43.030
Let us set another local variable,
movie path, to what?

00:42:43.560 --> 00:42:46.970
Remember, I want to put up the
file opening dialog box,

00:42:47.240 --> 00:42:50.350
so that's choose file.

00:42:50.590 --> 00:42:58.010
Could it get any easier?

00:42:58.010 --> 00:42:58.010
Once that's done, I want to set the movie

00:42:58.970 --> 00:43:04.620
"Of movie view,
that's got a movie associated with it,

00:43:05.560 --> 00:43:14.390
To the result of loading the movie,
which is MoviePath.

00:43:15.140 --> 00:43:17.460
So choose file gives me back a path name.

00:43:17.710 --> 00:43:20.780
I put that into the
local variable moviePath.

00:43:20.800 --> 00:43:24.020
I load the movie in that path
and assign it to the movie

00:43:24.020 --> 00:43:26.170
associated with the movie view.

00:43:26.490 --> 00:43:33.920
And finally, I want to show the object
which was initially invisible.

00:43:33.920 --> 00:43:36.920
So let's see what
happens if we build that.

00:43:36.960 --> 00:43:45.690
Who's bugging me here?

00:43:54.530 --> 00:43:59.280
Okay, now let's run it within the IDE.

00:43:59.330 --> 00:44:03.120
There's my file selection dialog box.

00:44:03.130 --> 00:44:05.570
I can open a movie.

00:44:06.390 --> 00:44:08.300
And what's wrong?

00:44:08.320 --> 00:44:09.860
It's the wrong size.

00:44:09.920 --> 00:44:10.100
Right?

00:44:10.140 --> 00:44:12.210
It's the size of the movie view.

00:44:12.320 --> 00:44:12.950
Why?

00:44:13.140 --> 00:44:17.490
I didn't add any code in to set
the size of the movie window.

00:44:18.740 --> 00:44:21.360
Right, let's go back to my code window.

00:44:21.390 --> 00:44:26.640
All I did was select a file,
attach that movie in the

00:44:26.640 --> 00:44:30.600
file to the movie view,
and make the movie window visible.

00:44:30.610 --> 00:44:32.740
I didn't do any sizing here.

00:44:32.810 --> 00:44:34.370
Why didn't I do any sizing?

00:44:34.570 --> 00:44:37.590
Because, unfortunately,
there's no vocabulary built

00:44:37.600 --> 00:44:41.140
into AppleScript Studio that
allows me to do that.

00:44:41.150 --> 00:44:45.120
So in order to find the
natural size of the movie,

00:44:45.120 --> 00:44:48.610
I need to go beyond AppleScript Studio.

00:44:49.400 --> 00:44:52.900
And this is actually a good segue.

00:44:52.900 --> 00:44:58.770
I think we're moving on to
advanced QuickTime usage here.

00:44:58.770 --> 00:45:00.690
Can we have slides for a second?

00:45:02.600 --> 00:45:06.660
So far we've seen really,
how much time did that take?

00:45:06.660 --> 00:45:13.120
45 minutes, so just over 10 minutes per
development environment.

00:45:13.810 --> 00:45:16.980
We see that basic movie playback is easy.

00:45:17.070 --> 00:45:19.700
We haven't talked about movie editing.

00:45:19.850 --> 00:45:20.830
That can be a bit harder.

00:45:20.940 --> 00:45:24.420
Some of these environments
support it automatically.

00:45:24.420 --> 00:45:25.790
Some of them don't.

00:45:26.080 --> 00:45:28.640
What about full access
to the QuickTime APIs?

00:45:28.800 --> 00:45:31.320
What if I really want to have a
REAL QuickTime application that

00:45:31.380 --> 00:45:33.620
does something more than just
open movies and play them back?

00:45:33.700 --> 00:45:38.480
And this is a good opportunity to
segue into that particular issue.

00:45:38.480 --> 00:45:40.780
Let's go back to VGA2, please.

00:45:40.780 --> 00:45:44.730
So the problem we need to solve now is,
how do I determine with an

00:45:44.730 --> 00:45:48.660
AppleScript Studio what the
natural size of the movie was?

00:45:50.160 --> 00:45:53.430
Visual Basic, Runtime Revolution,
Visual Basic all gave

00:45:53.740 --> 00:45:55.030
me that information.

00:45:55.030 --> 00:45:59.970
AppleScript Studio doesn't,
so we have to go beyond it.

00:46:00.820 --> 00:46:06.910
Now this is the portion
where I stop typing and use

00:46:06.910 --> 00:46:10.930
a canned project that I have.

00:46:15.900 --> 00:46:17.760
So I'm going to open
one that I did earlier.

00:46:17.760 --> 00:46:26.550
Let's look at the script.

00:46:30.130 --> 00:46:31.140
Ignore that for a minute.

00:46:31.330 --> 00:46:39.630
Everything other than that is
what we did just a second ago.

00:46:40.030 --> 00:46:43.770
is our way of sizing
the movie appropriately,

00:46:43.920 --> 00:46:47.980
and the key here is this
call method instruction.

00:46:48.000 --> 00:46:52.570
Basically, call method says, all right,
I'm Apple Script Studio, I'm good,

00:46:52.820 --> 00:46:53.740
but I can't do everything.

00:46:53.740 --> 00:46:56.880
So go call this other method
and come back to me with

00:46:56.880 --> 00:46:58.920
whatever output it gives you.

00:46:58.940 --> 00:47:00.640
What method am I calling?

00:47:00.640 --> 00:47:03.190
I'm calling a method
called controller rect,

00:47:03.190 --> 00:47:07.200
and I'm going to pass it a parameter,
namely the movie view,

00:47:07.200 --> 00:47:10.030
or the NS movie view
for those Cocoa people.

00:47:10.040 --> 00:47:15.270
So somewhere out there in my
application is defined this method,

00:47:15.270 --> 00:47:19.170
controller rect, and it's going to give
me back a rectangle.

00:47:19.170 --> 00:47:22.080
And let's just briefly look at
what I do with that rectangle.

00:47:22.080 --> 00:47:27.540
I copy it to some local variables,
I get the bounds of the window,

00:47:27.540 --> 00:47:32.700
and then I do a little bit of math to
set the size of the window appropriately.

00:47:32.700 --> 00:47:39.030
The magic number 20 here is the
size of the window title bar,

00:47:39.760 --> 00:47:42.910
because in Cocoa, when I size a window,
I don't just give it the

00:47:42.910 --> 00:47:45.250
size of the content region,
but I give it the size

00:47:45.250 --> 00:47:46.520
of the whole window.

00:47:48.040 --> 00:47:51.820
So everybody should be happy with this,
except for this magic

00:47:52.420 --> 00:47:54.660
little control erect method.

00:47:55.400 --> 00:47:56.520
Where does that come from?

00:47:56.520 --> 00:47:59.410
What I'm going to do,
or what I have done,

00:47:59.560 --> 00:48:02.560
is add two files to my
project called MovieCat,

00:48:02.630 --> 00:48:08.540
and what they do is define what's
called a category on a Cocoa class.

00:48:08.720 --> 00:48:13.090
A category is a way to add methods
to an existing class without actually

00:48:13.110 --> 00:48:15.700
having the source code for that class.

00:48:15.700 --> 00:48:17.760
You can see what I've done here.

00:48:17.760 --> 00:48:20.720
I have said,
there's this class out there,

00:48:20.720 --> 00:48:23.310
an existing class called NSApplication.

00:48:23.340 --> 00:48:26.540
I want to have this
category called MovieCat,

00:48:26.540 --> 00:48:29.730
and it's going to have
one additional method,

00:48:30.040 --> 00:48:31.480
namely control erect.

00:48:31.480 --> 00:48:35.520
It takes an NSMovie view and
gives me back a rectangle.

00:48:35.520 --> 00:48:38.580
Let's look at how I implemented that.

00:48:38.700 --> 00:48:39.900
Amen.

00:48:40.460 --> 00:48:42.280
Very easy stuff.

00:48:42.310 --> 00:48:44.320
It's just using QuickTime APIs.

00:48:44.320 --> 00:48:48.340
Fundamentally,
it's calling getMovieNaturalBoundsRect

00:48:48.390 --> 00:48:52.040
on the movie,
the actual QuickTime movie identifier.

00:48:52.040 --> 00:48:53.610
Where do I get that?

00:48:53.670 --> 00:48:57.530
Well,
Cocoa allows me to get two useful items,

00:48:57.530 --> 00:49:03.540
the movie controller identifier
and the QuickTime movie identifier.

00:49:03.540 --> 00:49:08.380
You can see I'm sending to the movie
view the movie controller method.

00:49:08.380 --> 00:49:12.400
It's giving me back an item
of type movie controller.

00:49:12.420 --> 00:49:16.210
And also, I send the movie method
to the movie view.

00:49:16.210 --> 00:49:20.660
That gives me back an NSMovie,
which I then send the QTMovie method to,

00:49:20.660 --> 00:49:23.060
which gives me back a QuickTime movie.

00:49:24.770 --> 00:49:28.680
So, after all that, I can get the natural
bounds of the movie,

00:49:28.930 --> 00:49:32.570
I then kick it up by 16 if
the controller bar is visible,

00:49:32.840 --> 00:49:36.090
and I pass that back
to whoever called me.

00:49:36.300 --> 00:49:41.690
So this is a very useful example of what
do you do when AppleScript Studio doesn't

00:49:41.700 --> 00:49:43.270
have the vocabulary you need?

00:49:43.740 --> 00:49:48.430
Very easily you can go to Objective-C,
add a category or other

00:49:48.430 --> 00:49:52.270
method to some existing class,
and solve your problems.

00:49:52.400 --> 00:49:57.200
So let's run this now and
see if it actually works.

00:50:00.170 --> 00:50:03.240
Okay,
so there's my file selection dialog box.

00:50:03.240 --> 00:50:05.680
Let's try the Fire Movie.

00:50:05.680 --> 00:50:07.350
So that's sized appropriately.

00:50:07.510 --> 00:50:09.720
Let's try it again.

00:50:12.550 --> 00:50:15.400
See if our music video
comes out the right size.

00:50:15.430 --> 00:50:16.330
Bingo, no problem.

00:50:16.450 --> 00:50:20.270
Did everybody hear that?

00:50:20.510 --> 00:50:22.780
When I hit the spacebar
to start the movie?

00:50:22.800 --> 00:50:23.320
I'll do it again.

00:50:23.320 --> 00:50:25.380
I'm going to turn the
volume all the way down.

00:50:25.380 --> 00:50:28.330
So I'm hitting the spacebar
to start the movie.

00:50:28.590 --> 00:50:29.380
What do you hear?

00:50:29.380 --> 00:50:30.380
You hear the system beat.

00:50:30.380 --> 00:50:36.300
Or if I hit the arrow keys to
advance it one frame forward,

00:50:37.640 --> 00:50:38.400
You also hear that.

00:50:38.800 --> 00:50:44.600
That's just a flat-out bug in Jaguar's
implementation of NSMovieView.

00:50:44.610 --> 00:50:51.690
Basically, what's happening is the
application is saying,

00:50:51.720 --> 00:50:53.990
I got a button press.

00:50:53.990 --> 00:50:56.560
Would somebody out there
please handle it for me?

00:50:56.560 --> 00:50:59.780
It sends that event to the
movie controller saying,

00:50:59.780 --> 00:51:01.170
I got a button press.

00:51:01.380 --> 00:51:03.030
Would you like to handle it?

00:51:03.090 --> 00:51:06.540
As you can see, the movie controller
actually does handle it.

00:51:07.070 --> 00:51:10.920
The movie does start playing,
but the movie controller is

00:51:10.920 --> 00:51:14.760
clever enough not to tell whoever
called it that it handled it.

00:51:14.760 --> 00:51:20.240
Then Cocoa says, nobody handled this,
and its default behavior is to beep.

00:51:20.300 --> 00:51:25.130
That's just a flat-out bug in
Jaguar's NSMovie that is fixed,

00:51:25.130 --> 00:51:28.200
as you will discover, in Panther.

00:51:28.200 --> 00:51:30.620
If I were running this on Panther,
I wouldn't even have to

00:51:30.620 --> 00:51:31.850
talk about this problem.

00:51:31.860 --> 00:51:36.470
Let me run one more.

00:51:37.800 --> 00:51:43.080
This time let's go for the VR movie.

00:51:43.080 --> 00:51:45.150
What's wrong with this picture?

00:51:45.830 --> 00:51:47.120
It's reversed.

00:51:47.130 --> 00:51:53.860
And again,
the scrolling is bass-ackwards here.

00:51:54.050 --> 00:51:56.610
So, again, this is just a flat-out bug.

00:51:57.070 --> 00:52:00.690
This time it's... Who am
I going to blame it on?

00:52:00.760 --> 00:52:02.440
Let's blame it on NSMovieView.

00:52:04.000 --> 00:52:22.500
[Transcript missing]

00:52:24.120 --> 00:52:28.800
So we've already seen one way in which,
with AppleScript Studio,

00:52:28.860 --> 00:52:32.950
we can get access to
the full QuickTime APIs.

00:52:33.900 --> 00:52:34.880
What about REALbasic?

00:52:34.970 --> 00:52:39.460
I didn't demonstrate this,
and actually I should,

00:52:39.460 --> 00:52:43.270
because there's a very useful
capability of REALbasic.

00:52:44.030 --> 00:52:48.360
Let me go back to... Again,
I'm just going to pull up a

00:52:48.360 --> 00:52:53.720
canned one here to save myself
the embarrassment of bad typing.

00:52:54.520 --> 00:53:11.860
Looks just like before.

00:53:11.890 --> 00:53:11.900
Let's pull up our movie window.

00:53:11.900 --> 00:53:11.900
Let's look at -- let's just run it,
actually.

00:53:11.900 --> 00:53:11.900
Well, let me first look at our code.

00:53:11.900 --> 00:53:11.900
Good.

00:53:11.900 --> 00:53:11.900
It's commented out.

00:53:11.900 --> 00:53:11.900
Wonderful.

00:53:11.900 --> 00:53:11.900
Let me run this.

00:53:14.000 --> 00:53:19.440
Okay, file opening dialog box,
select a movie, movie opens,

00:53:19.440 --> 00:53:21.290
movie sizes correctly.

00:53:21.330 --> 00:53:24.300
Now I'm gonna hit the spacebar again.

00:53:24.960 --> 00:53:25.800
What happened?

00:53:25.800 --> 00:53:26.350
Nothing happened.

00:53:26.480 --> 00:53:27.350
The movie didn't start.

00:53:27.350 --> 00:53:33.010
The default behavior of the
QuickTime movie controller

00:53:33.030 --> 00:53:36.700
is to ignore keyboard input.

00:53:36.700 --> 00:53:36.700
Okay?

00:53:36.850 --> 00:53:40.240
So if I want that to happen here,
which I probably do,

00:53:40.250 --> 00:53:42.960
I need to explicitly turn that on.

00:53:43.030 --> 00:53:44.530
So let's quit that.

00:53:44.650 --> 00:53:46.180
Let's go back to this.

00:53:46.270 --> 00:53:53.880
How can I explicitly turn on the keyboard
support for the movie controller?

00:53:54.050 --> 00:53:58.310
There's this magic
function called MCDoAction,

00:53:58.420 --> 00:54:01.260
which basically says, yo,
movie controller,

00:54:01.260 --> 00:54:04.400
which is the software governing the
playback and the display of the movie,

00:54:04.400 --> 00:54:06.430
I want you to do something for me.

00:54:06.460 --> 00:54:09.990
We can get, using REALbasic,
the movie controller

00:54:10.100 --> 00:54:12.430
identifier using this method.

00:54:12.460 --> 00:54:17.780
I'm going to send it the action 32,
which I happen to know means,

00:54:18.170 --> 00:54:20.440
please turn on keyboard input.

00:54:21.220 --> 00:54:24.390
And I'm going to pass it the value 1,
which means turn it on and not off.

00:54:24.430 --> 00:54:27.680
So if it were on and I wanted it off,
I could pass a 0.

00:54:27.680 --> 00:54:32.050
So I've just put that right in
the middle of my REALbasic code.

00:54:32.050 --> 00:54:33.320
Can I do that?

00:54:33.570 --> 00:54:37.800
Does REALbasic understand these
arbitrary functions from arbitrary

00:54:37.950 --> 00:54:40.170
libraries out there in the system?

00:54:40.180 --> 00:54:43.150
No, it doesn't, but it will if I tell it.

00:54:43.200 --> 00:54:46.320
So up here above, you can see,
let me cut this out,

00:54:46.650 --> 00:54:49.470
because I don't even know
that that's accurate.

00:54:50.540 --> 00:54:54.470
I'm saying, if I'm running on Carbon,
I'm going to tell you that there's

00:54:54.690 --> 00:54:58.970
this function I want to call,
and it's called MCDoAction.

00:54:58.980 --> 00:55:02.050
And I need to tell REALbasic two things.

00:55:02.200 --> 00:55:06.720
I need to tell it what library
that function is located in.

00:55:06.720 --> 00:55:08.830
It's located in Apple Carbon Multimedia.

00:55:08.840 --> 00:55:12.370
And then I need to tell REALbasic
what the parameters are,

00:55:12.400 --> 00:55:14.210
and here I've listed them.

00:55:14.210 --> 00:55:18.400
There's a movie controller,
there's an action, and then a value.

00:55:20.150 --> 00:55:26.690
And if I scroll over,
it shows that it returns a value.

00:55:27.260 --> 00:55:31.030
So once I have told REALbasic
what this function is,

00:55:31.250 --> 00:55:34.370
what library it's located in,
and what its parameters are,

00:55:34.460 --> 00:55:35.410
I can then call it.

00:55:35.540 --> 00:55:37.030
So let's try this.

00:55:37.110 --> 00:55:42.680
Let's try running that
with our new code in there.

00:55:43.060 --> 00:55:44.110
Select a movie.

00:55:44.110 --> 00:55:48.820
I'm going to hit the spacebar,
and it starts running.

00:55:48.820 --> 00:55:53.860
So with one line of code
plus the declare statement,

00:55:53.860 --> 00:55:59.190
I can get access to any API in
any library on my system.

00:56:00.170 --> 00:56:02.610
Let's just check that the
arrow keys are working.

00:56:02.610 --> 00:56:03.120
Wonderful.

00:56:03.240 --> 00:56:08.240
Okay, so we saw what we do with
AppleScript Studio if we need

00:56:08.240 --> 00:56:09.720
to go beyond what's built in.

00:56:09.720 --> 00:56:11.760
We can declare extra methods.

00:56:11.880 --> 00:56:18.970
With REALbasic, we can declare individual
API calls and use those.

00:56:18.980 --> 00:56:23.180
If we want to do something more,
then we need to write a plug-in.

00:56:23.240 --> 00:56:27.330
Why would we ever want to do something
more than just call individual functions?

00:56:28.460 --> 00:56:31.740
Well, the standard mindset is
that you call QuickTime,

00:56:31.740 --> 00:56:34.650
but in the Soviet Union,
QuickTime calls you.

00:56:34.660 --> 00:56:39.380
That is to say, sometimes it's going
to call code in my...

00:56:40.800 --> 00:57:09.300
[Transcript missing]

00:57:14.450 --> 00:57:18.330
So how would you define a
callback function in REALbasic?

00:57:18.430 --> 00:57:19.880
I don't know that you can.

00:57:20.090 --> 00:57:22.880
Possibly you could,
but if you want to do that,

00:57:22.880 --> 00:57:25.850
I think the easiest way
is to write a plug-in.

00:57:25.900 --> 00:57:29.480
This is just a module,
typically written in C,

00:57:29.570 --> 00:57:33.410
that you link in with your
REALbasic application,

00:57:33.410 --> 00:57:39.540
and then you can call it in pretty much
the same way that we called MCDoAction.

00:57:40.060 --> 00:57:44.680
The only difference being that you don't
actually have to declare the function

00:57:44.680 --> 00:57:49.390
and where it is and what its parameters
are if you're packaging it as a plug-in.

00:57:49.460 --> 00:57:53.660
I see I've got time,
so let me show you what

00:57:53.660 --> 00:57:56.050
a plug-in looks like.

00:58:04.100 --> 00:58:06.940
Let me not show you what
a plugin looks like.

00:58:06.950 --> 00:58:08.800
Ah, here we go.

00:58:08.800 --> 00:58:10.880
Let me show you what a plugin looks like.

00:58:12.020 --> 00:58:15.190
I'm going to launch this project.

00:58:15.300 --> 00:58:18.420
This should bring up CodeWarrior.

00:58:24.660 --> 00:58:27.870
Okay, this is a CodeWarrio project.

00:58:27.950 --> 00:58:32.600
Most of this code comes straight
from REALbasic's samples.

00:58:32.610 --> 00:58:42.190
The only thing I've added,
there's this file externals.c,

00:58:42.190 --> 00:58:42.190
and we can see that I have defined here

00:58:42.380 --> 00:58:47.960
A number of functions, MCInitialize,
MCUndo, Cut, Copy, Paste, Clear.

00:58:48.400 --> 00:58:52.420
What this tells me is that
movie controller editing,

00:58:52.590 --> 00:58:57.010
Cut, Copy, Paste, Clear,
is not built into REALbasic.

00:58:57.240 --> 00:58:58.660
If it was, I wouldn't need to do this.

00:58:58.830 --> 00:59:03.800
But I can get that capability
by creating this plugin that

00:59:03.800 --> 00:59:06.160
has those functions defined.

00:59:06.330 --> 00:59:09.030
So let's just take a
look at one of those,

00:59:09.030 --> 00:59:09.740
mccut.

00:59:10.300 --> 00:59:12.810
It's getting the movie controller, yada,
yada, yada.

00:59:12.810 --> 00:59:16.320
It's basically calling a built-in
QuickTime function MCCut.

00:59:16.400 --> 00:59:20.430
It's actually taking the movie that
I cut and putting it on the scrapbook

00:59:20.430 --> 00:59:23.250
so that if I then want to paste it,
I can do that.

00:59:23.330 --> 00:59:32.310
And so what I've got here is just a whole
bunch of C code that I can then build.

00:59:35.900 --> 00:59:47.100
[Transcript missing]

00:59:47.900 --> 00:59:48.790
Thank you very much.

00:59:48.800 --> 00:59:53.600
This is a nice application.

00:59:53.600 --> 00:59:56.250
It's a full multi-window application.

00:59:56.260 --> 00:59:59.190
It's more what you think
of as an application.

01:00:01.900 --> 01:00:08.800
[Transcript missing]

01:00:09.540 --> 01:00:10.280
Everything works fine.

01:00:10.320 --> 01:00:15.520
So if I need to go beyond
what's built into REALbasic,

01:00:15.520 --> 01:00:17.700
I can either do it
individually one at a time,

01:00:17.750 --> 01:00:19.150
or I can write a plug-in.

01:00:19.150 --> 01:00:22.000
Same thing with Visual Basic.

01:00:22.000 --> 01:00:25.710
Keith didn't need to do this,
because here I'm showing what you might

01:00:25.900 --> 01:00:30.480
have to do in Visual Basic 6 if you
wanted to size your window appropriately.

01:00:31.090 --> 01:00:35.580
The system metric stuff is
built into Visual Basic.net,

01:00:35.580 --> 01:00:37.120
but not into 6.

01:00:37.120 --> 01:00:42.080
So you may actually have to call an
individual... Can we get slides back up?

01:00:44.090 --> 01:00:45.090
Okay, here we go.

01:00:45.340 --> 01:00:51.200
So this is the same syntax
that we saw in REALbasic for

01:00:51.390 --> 01:00:56.380
declaring an external function,
and this would tell you, for instance,

01:00:56.480 --> 01:00:59.280
how wide the frame is on the
window so that you could size

01:00:59.280 --> 01:01:00.880
your window appropriately.

01:01:02.870 --> 01:01:06.010
For RunTime Revolution, again,
it doesn't have the declare

01:01:06.010 --> 01:01:09.350
functionality that I know of,
but you can write a plugin similar

01:01:09.350 --> 01:01:13.410
to what we saw there that would
give you additional capabilities

01:01:14.620 --> 01:01:15.490
within your application.

01:01:15.500 --> 01:01:17.450
And finally,
we already saw what we needed

01:01:17.450 --> 01:01:19.040
to do with AppleScript Studio.

01:01:19.040 --> 01:01:23.620
Use this call method statement to go
out and call Objective-C functions.

01:01:23.640 --> 01:01:25.840
Okay.

01:01:25.840 --> 01:01:27.840
Enhancement opportunities.

01:01:29.830 --> 01:01:31.440
These are really good environments.

01:01:31.440 --> 01:01:33.300
I wouldn't be up here talking
about them if I didn't think

01:01:33.300 --> 01:01:34.540
they were worth talking about.

01:01:34.690 --> 01:01:38.940
So each one of these four will
allow you to build real-life,

01:01:38.940 --> 01:01:40.860
solid applications.

01:01:40.910 --> 01:01:43.900
Each one of them, however,
has some issues that I think they

01:01:43.960 --> 01:01:46.050
could work on to make them even better.

01:01:46.450 --> 01:01:50.120
RealBasic has what I call runtime issues.

01:01:50.260 --> 01:01:53.930
Remember when the fire wouldn't
burn unless my mouse was moving

01:01:54.420 --> 01:01:57.610
around and I went and I put
a timer object in the window?

01:01:57.790 --> 01:01:58.860
That's a kludge, okay?

01:01:58.860 --> 01:02:02.050
Something ought to be fixed
within RealBasic so that I'm

01:02:02.050 --> 01:02:04.300
getting events more regularly.

01:02:05.700 --> 01:02:09.520
Let's launch my full
featured application.

01:02:09.520 --> 01:02:09.980
Okay.

01:02:09.980 --> 01:02:13.020
Thank you.

01:02:14.080 --> 01:02:17.580
So I've launched my...let's open a file.

01:02:17.580 --> 01:02:23.790
Actually, I don't want to use this one
because I fixed it in this.

01:02:31.000 --> 01:02:38.800
[Transcript missing]

01:02:38.990 --> 01:02:40.860
Remember we went in and we
added the code that said,

01:02:40.860 --> 01:02:44.940
please enable movie controller,
or enable the keyboard input

01:02:44.940 --> 01:02:48.540
so that I can use my keyboard
to manipulate the movie.

01:02:48.540 --> 01:02:50.650
And we saw that it worked, right?

01:02:50.650 --> 01:02:55.920
But it only worked because I was running
it inside the IDE using the debug mode.

01:02:55.920 --> 01:02:59.100
It turns out that if I take that
same application and double-click

01:02:59.100 --> 01:03:02.270
it in the finder and open it up,
the keyboard just won't work.

01:03:02.360 --> 01:03:03.970
So there's something gone wrong there.

01:03:03.980 --> 01:03:08.720
It's probably a very simple fix that
they could implement to fix that.

01:03:08.900 --> 01:03:09.930
Amen.

01:03:10.260 --> 01:03:13.160
Other enhancement opportunity,
and this one is fairly important.

01:03:13.160 --> 01:03:16.900
So I talked about callback functions,
where QuickTime is going to

01:03:16.900 --> 01:03:18.640
call code in your application.

01:03:18.640 --> 01:03:21.840
One of the most important
callback functions is what's

01:03:21.870 --> 01:03:25.570
called a movie controller action
filter callback procedure,

01:03:25.570 --> 01:03:28.310
just to make it even
longer than it is there.

01:03:28.900 --> 01:03:31.840
The idea being that when the
movie controller does something

01:03:31.990 --> 01:03:35.430
or is about to do something,
it will notify your application,

01:03:35.430 --> 01:03:39.830
giving your application the
opportunity sometimes to cancel

01:03:40.150 --> 01:03:42.640
that or sometimes to enhance that.

01:03:42.740 --> 01:03:47.750
An example might be if you have a custom
button in your movie controller bar.

01:03:47.790 --> 01:03:49.950
I don't have it in any of these.

01:03:50.290 --> 01:03:52.300
Sometimes you see a little
downward-pointing triangle

01:03:52.320 --> 01:03:53.620
in the movie controller bar.

01:03:53.620 --> 01:03:56.920
When somebody clicks on that,
the movie controller

01:03:56.920 --> 01:03:58.470
will send you an event.

01:03:58.940 --> 01:04:02.140
Or an action saying,
"The user just clicked on the button.

01:04:02.300 --> 01:04:05.000
What should I do?" At that point,
you could drop down your own

01:04:05.000 --> 01:04:06.440
menu or do whatever you wanted.

01:04:06.500 --> 01:04:12.750
So these are very useful
callback functions to define.

01:04:13.780 --> 01:04:17.480
I actually went ahead and in
my REALbasic plugin defined a

01:04:17.520 --> 01:04:20.920
movie controller action filter
procedure to do this kind of stuff,

01:04:20.980 --> 01:04:26.690
and I quickly discovered one thing,
is that REALbasic also installs a movie

01:04:26.990 --> 01:04:29.100
controller action filter procedure.

01:04:29.100 --> 01:04:33.350
And I discovered this because some
of its built-in capabilities broke.

01:04:33.450 --> 01:04:37.990
The problem being is that you only
get one of these per movie controller.

01:04:37.990 --> 01:04:43.200
So when I added mine in,
it basically booted REALbasics,

01:04:43.470 --> 01:04:43.680
and so I was able to get one
of these per movie controller.

01:04:43.700 --> 01:04:46.780
So some of the real
basics capabilities broke.

01:04:47.100 --> 01:04:50.930
There is a way around this,
and basically it involves REALbasic,

01:04:51.000 --> 01:04:53.740
and we'll also see this
affects RunTime Revolution.

01:04:53.740 --> 01:04:56.810
Need to come to Apple and talk
about this issue and figure out

01:04:56.890 --> 01:05:00.440
how we can have several of these
things running around at once.

01:05:03.550 --> 01:05:07.590
Visual Basic enhancement opportunities,
not too many there because, well,

01:05:07.730 --> 01:05:11.890
it really depends on which of these
ActiveX controls you're using.

01:05:11.890 --> 01:05:14.860
Some of them are more
full-featured than others.

01:05:14.920 --> 01:05:19.110
One interesting thing is that,
remember I talked about the declare

01:05:19.310 --> 01:05:23.660
statement working in Visual Basic the
same way it works in REALbasic.

01:05:23.720 --> 01:05:26.760
There's only one problem,
which is actually a big one.

01:05:28.350 --> 01:05:32.180
In Visual Basic 6,
you cannot use the declare

01:05:32.950 --> 01:05:35.650
statement to access QuickTime APIs.

01:05:35.650 --> 01:05:40.240
That's a pretty big limitation,
and it has to do with calling sequences

01:05:40.240 --> 01:05:47.970
of what Visual Basic expects and what
the QuickTime library is putting out.

01:05:49.280 --> 01:05:50.400
RunTime Revolution.

01:05:50.650 --> 01:05:53.410
Again,
there's a few runtime issues we saw with

01:05:53.410 --> 01:05:55.380
the fire not quite burning correctly.

01:05:55.380 --> 01:05:56.760
I think they can get those worked out.

01:05:56.900 --> 01:06:00.960
I already mentioned it installs a movie
control reaction filter procedure.

01:06:00.960 --> 01:06:03.210
Again,
a fairly important issue that we need

01:06:03.250 --> 01:06:05.120
to work out between them and Apple.

01:06:07.070 --> 01:06:10.280
AppleScript Studio enhancement
opportunities.

01:06:10.280 --> 01:06:14.500
Fairly limited vocabulary
right now for handling movies.

01:06:14.560 --> 01:06:20.100
There's only about 13 properties that
with pure AppleScript I can get in set.

01:06:20.100 --> 01:06:25.690
We saw that it was fairly easy
to work around that limitation,

01:06:25.690 --> 01:06:31.310
but it would be nicer if more and more
properties were available natively.

01:06:31.470 --> 01:06:34.980
Another opportunity for
them to do some work,

01:06:34.980 --> 01:06:38.920
which is both good and bad,
AppleScript Studio applications

01:06:38.920 --> 01:06:41.900
are Cocoa applications,
so they inherit any

01:06:42.350 --> 01:06:47.540
features of Cocoa classes,
but as we saw, they also inherit any

01:06:47.540 --> 01:06:51.730
bugs from Cocoa classes,
and we saw two of those

01:06:51.870 --> 01:06:55.330
that have been fixed,
thankfully.

01:06:55.700 --> 01:06:58.360
Okay,
most of this I've already talked about.

01:06:58.500 --> 01:07:00.520
For those development
environments that install a

01:07:00.520 --> 01:07:04.070
MovieControllerActionFilter procedure,
they need to get together

01:07:04.180 --> 01:07:07.690
with Apple and figure out how
to work around that problem.

01:07:07.990 --> 01:07:12.520
One interesting thing is
I'm begging them to please,

01:07:12.520 --> 01:07:16.570
when you open a file,
open it with read-write permissions.

01:07:16.600 --> 01:07:19.880
Your development environment
may not support editing,

01:07:19.880 --> 01:07:23.850
so you may not think that you need
to open it with write permission.

01:07:24.360 --> 01:07:28.880
But if I'm a clever programmer,
I can write a plugin to support editing.

01:07:28.880 --> 01:07:31.880
But I've got this edited movie,
what do I do with it?

01:07:31.930 --> 01:07:34.200
I'm all dressed up and
I've got nowhere to go.

01:07:34.200 --> 01:07:37.620
I can't put it back into the
original file if that file has been

01:07:37.720 --> 01:07:39.930
opened with read-only permission.

01:07:39.960 --> 01:07:44.110
REALbasic, of course,
opening it as an edible file,

01:07:44.110 --> 01:07:47.340
opens it with read-write permissions.

01:07:47.380 --> 01:07:52.140
RunTime Revolution opens files
with read-only permission.

01:07:53.200 --> 01:07:57.370
So once I've written my plugin
to edit this movie nicely,

01:07:57.560 --> 01:08:00.160
again,
I've got nothing to do with it other

01:08:00.540 --> 01:08:03.140
than to put it into some other file.

01:08:03.290 --> 01:08:08.960
The Skylight ActiveX control is kind
of a funny case because it's got

01:08:09.020 --> 01:08:13.100
built in all these editing methods,
but it opens the movie

01:08:13.100 --> 01:08:15.170
file with read permission.

01:08:15.170 --> 01:08:19.940
So why is it giving me all these methods
if I can't save it into the file?

01:08:21.300 --> 01:08:25.970
Finally, and most of the people do this,
although again, interestingly enough,

01:08:26.050 --> 01:08:29.400
Skylight does not,
make sure that there's a way that I can

01:08:29.400 --> 01:08:33.820
get the movie and movie controller
identifiers so that within my plug-in,

01:08:33.820 --> 01:08:35.800
I can take advantage of that.

01:08:38.190 --> 01:08:41.820
Okay, now for some boilerplate.

01:08:41.850 --> 01:08:46.480
Here's some contact information for
Real Software and RunTime Revolution.

01:08:46.530 --> 01:08:49.240
I should mention we have
representatives from both of these

01:08:49.320 --> 01:08:52.560
companies in the audience today,
so afterwards maybe they could

01:08:52.560 --> 01:08:54.950
come up to the front here,
and if you have specific

01:08:54.950 --> 01:08:57.460
questions for them,
that would be wonderful.

01:08:57.460 --> 01:09:02.480
Here's contact information
for the ActiveX stuff.

01:09:04.800 --> 01:09:07.930
The AppleScript Studio stuff.

01:09:07.930 --> 01:09:11.420
And finally,
if this was not enough detail for you,

01:09:11.420 --> 01:09:14.070
there's been a very nice
series of magazine articles

01:09:14.070 --> 01:09:17.540
in Mac Tech Magazine starting
last December and extending

01:09:17.540 --> 01:09:21.370
out into the future discussing
these various environments.

01:09:21.380 --> 01:09:25.110
So if you want the gory, gory details,
I highly recommend picking

01:09:25.210 --> 01:09:26.510
up these magazines.

01:09:28.990 --> 01:09:31.300
And there's some
documentation on QuickTime,

01:09:31.390 --> 01:09:34.630
not generally relevant to
what I just talked about.

01:09:35.020 --> 01:09:39.330
and today ongoing for the rest
of the day are the QuickTime labs

01:09:39.470 --> 01:09:41.660
downstairs in the Sacramento room.

01:09:41.660 --> 01:09:45.190
If you want to sit down and talk
to some QuickTime engineers or some

01:09:45.200 --> 01:09:49.060
really good content creation people,
I highly recommend you stop down there.

01:09:51.200 --> 01:09:53.310
and there's me, Keith Guillermo.

01:09:53.320 --> 01:09:56.140
And we have a little bit
of time to take questions.