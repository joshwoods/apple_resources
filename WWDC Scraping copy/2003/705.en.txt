---
Title:  The Art of MPEG-4 Encoding
Year:   2003
Web:    https://nonstrict.eu/wwdcindex/wwdc2003/705/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Okay, it's just about time, so let's go ahead and get started. Everybody should be here for session 705, The Art of MPEG-4 Encoding. My name is Dennis Backus, I work on the QuickTime team at Apple Computer. We're going to talk today about the hows of MPEG-4 encoding, not so much the whys, but the hows.

Encoding in general is somewhat of a difficult process. To a certain extent it's a science, but good encoding is actually an art, hence the title of this session. And today we're very lucky to have two, I think some of the premier artists in the encoding world, and especially in the MPEG-4 encoding world. Andy Beach, right here to my left, and then John Howell, from an organization.

from an organization called Last Exit from the East. So without any further ado, let's get started. Andy? Thank you very much. Hi everyone, I am Andy Beach. I'm from Last Exit. This is John Howell. Last Exit is a We started as a web design and technology company, but John and I are both from a film and video background.

Quickly we turned to video on the web and interactive video as being some of the primary work that we wanted to do. Dennis asked that I try and explain the last exit, naming some. Basically we were working for a rather large global company, got a little tired of the way everything was being run and the way things were being handled, so we made our last exit out of the big world and into our own company. Because if we were going to work for assholes, we could work for ourselves.

So what is MPEG-4? What can it do for you? Apple has a lot that they've talked about it and that's what we're all here for. Basically, what we want to talk about though is that MPEG-4 means standardizations and it does mean interoperability. The two most important things for us.

What we're gonna, and what I'm gonna do is I'm going to try very hard today to intro everything, but then rapidly hand off so that we can actually get to some meat and potatoes demonstration of MPEG-4 encoding. And then lots of time for you guys to ask questions, because I'm sure that you've had encoding nightmare question problems coming up. So we want to make sure that there's plenty of opportunity to get into that today.

We are going to discuss though a basic understanding of the MPEG-4 spec. I don't feel necessarily qualified to fully speak to it, but I'm certainly going to do my best given the people that are in the room today. How to produce the MPEG-4 content that you want, different ways to deliver that, you know, the different appliances out there. And demonstrate a workflow for creating your MPEG-4.

So, and again, I'll try to make this as brief as possible so that you don't have too many history lessons today. Uh, MPEG was introduced as a standard. QuickTime 6 brought MPEG-4 to us, the last QuickTime Live, 2002. Uh, we're now seeing support for AAC audio, MPEG-4 video, and with the latest .3 we're now getting the 3GP as well.

If we look at the two file formats, you're going to notice something very similar in the two graphics. Obviously they are very similar because the MPEG-4 is based off of the architecture of the QuickTime. Right now we're just dealing with the video and the audio aspects, but there is a great deal more that's there, things to come. We're patient, we'll wait. Scalability is by far the most important aspect.

This is our friend Terry Tate. I don't know how many of you got to see some of the Terry Tate content that came out last year. The scalability, designing for playback on a variety of devices. Flexibility in the bit rates and the frame sizes that it's going to handle. This is the key to the MPEG-4, moving past something like an MPEG-2 broadcast architecture.

So this is the standards-based, going back to a wide array of platforms, developing for one format but being able to play back everywhere. The Internet Streaming and Media Alliance, if there's an analogy out there, we certainly looked for the perfect analogy. MPEG-4 is really the ingredients, and the ISMA is the cookbook, giving you the recipes for all the various profiles.

So it's going to tell you how everything should be structured and put together to meet those profiles that you're trying to. MPEG-4 has obviously got a great deal more behind it and under the hood. So it's that raw source that you're going to be able to tap into.

The two that we're concerning ourselves with, with the encoding right now, even though it will do all of these great things to get this started off, it really is the video and the audio that are particularly important to us. There's a number of ISO-compliant MPEG-4 codecs out there, in addition to the MPEG-4. There's a lot of interoperable plugins as well, like NVivio and the Impegables, to get stuff out.

The audio, the AAC stuff, it's a lot less processor intensive than it has been on other things in the past, so you get a lot better playback on some lower platform systems. There's a great deal more audio support, and you get a lot higher audio in a lot smaller file now.

For content creation I want to ask John to step in. Okay, this I guess is my part of the speech. Apple wanted to make it really easy for everybody to be able to encode MPEG-4. They really threw themselves behind the standard and pretty much want to transition content creation and viewing on the internet into MPEG-4.

And so they gave us a bunch of different ways to create MPEG-4 content using iMovie, Final Cut Pro, QuickTime Pro, you name it. They want you to do MPEG-4 coming out of it. So I'm going to outline sort of how easy it is to do MPEG-4 content, sort of go over an overview of how the QuickTime exporters work, and show you some other options for encoding.

Okay, so basically to create an MPEG-4 file, you can open a video in Final Cut, or sorry, QuickTime Pro. You hit Export, Apple E, Command E. You choose MPEG-4, you choose a default setting, and you watch the progress bar go across the screen, and you end up with an MPEG-4 file on the other end. It's basically that easy.

So, I don't know, how many people out here are actively doing MPEG-4 content creation? Most everybody? Cool. Those of you who, are there a bunch of you who are doing content creation and encoding that you don't want to go to MPEG-4? You're not gone to MPEG-4 yet? Are those people here? A couple? Okay.

So, hopefully we can sort of convince you to switch over. So, this, if you look at the two screens, the one on the left, I guess, is, you know, Export to MPEG-4. The one on the right is the default setting, but you move ahead to the actual QuickTime exporter, and it has a really neat feature in that when you open a program that knows how to use QuickTime, like Final Cut Pro, like After Effects, like iMovie, they basically all export video using the same MPEG-4, the Apple ISO-compliant MPEG-4 exporter.

You create the .mp4 file out of that, and it'll play back on any ISO-compliant MPEG-4 player. You can use the Nvivo plugin to play it back in real player on a PC. I've been told it works in Windows Media, but I try not to look at Windows Media, so I don't know. The Apple QuickTime encoder is a kind of neat thing.

They made it do one-pass VBR, so it tries, you set the bitrate you want, you set it to be, you know, 300 kilobits a second, and it gets everything it can at 300 kilobits a second, but then you have areas that don't need that, so it scales it down some, and you get a smaller file size, which for an end user is a good thing. The encoder's optimized for a G4 processor. It doesn't fly, but it's pretty fast. Interesting to see what it does on the dual 2 gigahertz G5. Looking forward to that.

So this is the QuickTime 6 exporter. Just like in the previous slide, you go movie to MPEG-4, and then you get another window that comes up with a, lets you choose your profile if you want to use, you know, simple, advanced, simple, complex, whatever the profiles are. You go in and do that. You set your audio, your video bitrate. You can set your frame size. You set keyframes. You can do your audio bitrates.

You can choose whether to do high quality encoding. You can choose whether, well, actually you can't choose whether to use the speech codec or the music codec. You can use the music codec. And then they have at the bottom, it tells you sort of what kind of file you're going to produce.

And if you come up with settings that don't fit the MPEG-4 specification, it'll tell you, and it'll tell you how much you need to lower it by to get it to fit in the specifications, which is really handy, especially when you're starting out learning to do MPEG-4. So that's QuickTime. This is the QuickTime exporter going out of QuickTime 6 player.

This is the QuickTime Explorer exporter going out of Final Cut 3. It's pretty much the exact same thing. You go export, move it to MPEG-4, and you have the same settings window. So, you know, the same way you did it in QuickTime Pro the first time you did it, you can now do it in Final Cut Pro. Yeah.

[Transcript missing]

I'm here to talk about the Dolby Labs. It's a digital music store format. It's an iTunes-protected file. It's locked. You can't take the ones off my laptop and play them on yours. They're all delivered through the Apple Music Store. The advantages of it are that it's digital rights management, so you can't take it off my laptop and play it on yours. It's got 128-kilobit AAC audio, so very high-quality audio playback. The stuff about Dolby Labs did the testing, and you can't distinguish this from the source audio.

So you get good-quality audio. You can also take that, and if you legitimately bought the iTunes file, you can import it into iMovie. You can import it into iDVD and use it for those projects, which is kind of cool because you bought the file, so you might as well use it wherever you want. The disadvantages, depending on how you butter your bread, are digital rights management, and some people don't like that.

The Apple Music Store files? I believe so, yes. The preview files I don't think are 128 kilobit per second, but the files you buy from the iTunes Music Store I believe are. The 3GP.3GP files, they're QuickTime movies that will play back on 3G phones. They also play back in QuickTime 6.3 on a Mac.

There's the standard for playback on wireless devices. They've got audio, video, and 3GP text as implemented in QuickTime, which is really cool because you can actually stream text with video. And a lot of people need to do that for people who use closed captioning, or if you want to send an English file to a foreign language, you can have subtitles.

It'll stream wirelessly to a phone, it will download to a phone and play, but unfortunately 3GP isn't really available in the US, so none of us get to play with that. As Frank Casanova said, go to Japan and sit in the airport. All right, demo. May I please have the demo machine? Any questions so far before we carry on with John's demonstrations? Everything's pretty straightforward so far.

It's a full application. Sorenson sells a version of Squeeze. It's Squeeze for MPEG-4, and it comes with the Sorenson MPEG-4 Pro codec, and that is the only way at this time to encode using the Sorenson codec. You can't just buy it like you could buy the old Sorenson video codecs. You have to buy Squeeze to get the codec to encode the files. So that's how they kind of get you to buy their soup and nuts product.

Are you ready for our demo here? Okay, on with the demo. Basically I'm going to try and walk you through, start to finish, capture file to produce a file that can be uploaded to the internet as a streaming MPEG-4 file. So you start out, you get a source tape from, well I get them from clients.

And the first thing to do is you have to import into the computer. We use Final Cut Pro, Apple's gold standard video importing and editing application. It's a great program, we've been using it for years. So the acquisition stage is you go into Final Cut, fortunately I have a file that's, yeah, yeah, yeah, reconnect.

Unfortunately I have a file already here, we don't have to capture it. But getting the file into your computer is kind of the easiest thing to mess up. If you bring bad quality source file into your system, you're not going to be able to encode a high quality file. The sort of mantra has always been "garbage in, garbage out". So, you know, always try and get the files or the source tapes from your clients or produce your files using the best quality things you can get. Use beta SP, use digi-beta.

I really like to try and get things exported directly out of either After Effects or Final Cut on a hard drive. Because there's no degradation of the image quality there. So, we've got this file, which is a, this came to us on a DV tape from a client. It's a, kind of a music video promo.

Something you may notice, lots of red. DV doesn't like red. So I kind of chose this clip for a reason, in that it doesn't encode very well. And so instead of showing you the perfect file, and this is great and look how great it is, I want to show you that not everything looks great. And a DV file with lots of red encoded to MPEG-4 isn't always going to look great. And at the end of this we'll see that.

But this lots of red has kind of pixelation and blurring at the edges of it on the source file. So I'm definitely going to end up seeing some of that in my MPEG-4 file. So there's really not a whole lot you can do to stop that kind of stuff, especially if your clients give you stuff on DV tape.

[Transcript missing]

Mr. Local Hero, Sami Sosa. So yeah, lots of high movement, lots of strong red colors. So basically you're kind of encoding nightmare file, right? So this was brought in, final cut. And captured to the hard drive, so, final cut. You then open, for this sake of this demonstration, we use Cleaner 6, which is able to encode a .mp4 file. So I take my file, bring it in to Cleaner.

You can see the whole file. You can set in and out points. Unfortunately, this clip has actually got the in and out points right where I want them, so I don't have to set in and out points. Uh, when you open up, you get a setting. Uh, since this is a streaming file, when you do streaming, you don't really have a whole lot of flexibility as to what bit rates you can use. It has to be under a certain bit rate or else it won't stream.

So, you know, say for a 56K modem, you know, you need to encode at, you know, kind of around 30 kilobits per second because, for video, because you tack your audio on there, you tack your 10% bandwidth tacks on there. Because when you encode a streaming file, you always kind of leave 10% for the hinting and for, uh... I guess network trouble.

So you know you're always kind of locked into similar bit rates. You know doing an ISDN file you need to come in under 100 kilobits per second. Typically for doing broadband files you want to come in at or around 300 kilobits per second. A lot of broadband connections get faster, but to sort of be nice to the slower connections, you do around 300.

You can do a special 700 one sometimes, or even megabit streaming for the right connections. But for this demo we just do around 300. So we have a setting. I'm outputting to MPEG-4. It's a .mp4 file. And if I click on this, we get our handy-dandy Apple thing. So Cleaner actually uses the Apple encoder.

Image. I'm cropping, this is a 300K file, I'm cropping the image to kind of near TV safe by taking 32 pixels off the left and right, 24 off the top and bottom. It, you know, kind of gets rid of any nastiness that you may have at the top and bottom of your video file. Sometimes when you bring in files from tape, it kind of distorts around the bottom or the top. And so by cropping your video, you're reducing that. You're also kind of reducing the size of the image.

So that when you encode it at a smaller size, like 320 by 240 or 240 by 180, you're getting more of the actual real video image into the encoded file than you would at, you know, this size. And you're not really cropping out much more than people lose when they watch television.

So it's a kind of safe way to crop files. Encoding this one to 240 by 180, it's a kind of fast-moving file like I showed you. So I chose a smaller frame size because it, You know, it kind of behaves better as a smaller frame size. As a larger frame size, you see some more pixels on some faster moving places. It's, all the footage was shot on television, so I'm deinterlacing. And adapted noise reduce is just kind of something I leave on.

Adjusts, you know, typical, you chuck the gamma up. You adjust the brightness and contrast to kind of make it look better on a computer, basically. And these brightness and contrast settings, if I go and apply them to this file, and then do a preview of it, They kind of make it a little bright and washed out. I'm a Red Sox fan, so we get Pedro.

And see, he gets kind of washed out and kind of nasty, so... You can go in, bring the settings down some. You get a little richer color. He's a little less washed out. The crowd's a lot less washed out. I don't know what that looks like on here, but it looks better on my screen.

You know, encode. You know, 15 frames a second for a 240 by 180 file at, you know, 300 kilobits a second is generally going to look pretty good. You know, keyframe every, basically, 100 frames. So, every 100, 150 frames. Data rate to 300 kilobits a second. Audio. You notice there's no way to choose your audio bit rates here. But you can say 16-bit stereo, 16-bit. 44 kilohertz stereo. The way you choose your audio bitrate is you have to go back into the QuickTime encoder. You go to the output thing, go to options. Audio.

Now I can pick my thing. So, stereo. It won't let me go any higher than 22. If I go to mono, I can bump it up some. And that generally actually sounds better than stereo sometimes. Depends on, again, the source file. Depends on whether it's speech or music. Encoding quality, I always choose best.

32 kilobits a second on top of my, you know, just about 300 kilobits per second file will give me a file that will stream over almost every broadband connection in the US. So, you know, you choose "Apply for that setting," you kick it out, and you again watch the progress bar creep across the screen. Favorite part of my day because it means I get to go play Xbox for about seven minutes.

For the 15 frames per second, particularly for the broadband stuff, will work very well for all of the video footage that you have, but if you're encoding any animation, you may find that you're going to have to start bumping that up, because on any animations, particularly things out of After Effects, you'll start finding that 15 just won't preserve the full range of motion. So, bringing it up to as high as 24 helps.

Anything above that, you tend to just start tacking on extra frames that are probably going to get lost by the end user anyway, as they're playing it. Like every good cooking show, I already have one prepared. So, this is that file encoded using the setting that I had.

Once it started getting exciting and everybody started hitting home runs, it started to pixelate and kind of look nasty. And unfortunately that's because the bitrate that it was limited to for streaming, it did that. With this particular job, I talked the client into letting us deliver a downloadable file, because it's only a minute long, it didn't produce a very big file, and by being able to up the bitrate, I was able to make a file that I was happier with in the thing. As far as streaming though, it doesn't look all that bad for a good 90% of the time.

"Coding that on a computer screen is still pretty fun to look at." "Yes?" I'm sorry, can you please go into the microphone so that translators? The fraction between the audio and the audio. Do you have some kind of standard setting? Kind of standard setting for that? No, I honestly don't have a standard setting for anything I do.

Basically every video is going to be different. So something that is a sort of spoken word, just talking piece, you can take the audio data rate down, and you can bump the video data rate up some to get a little bit more quality. But generally no, I don't have a specific way I, you know, set way I do it. Yes? Did you go with the one that was in the video?

For the translators, he asked if I went with mono sound on that instead of stereo to get an audio quality. No, that was actually stereo sound. I didn't go with mono on that one. I did that this morning just playing around, and it was generally good sounding. I mean, whenever I do files, I wear headphones, so I can sort of really hear what the audio sounds like. And then I take headphones off and I play it back over my, you know, regular Harman Kardon sound speakers.

Listening to it on the speakers forgives a lot more sins than listening to it on the headphones. So if you're really nitpicky, you wear headphones, but generally people aren't going to be doing it over headphones, so you can get away with mono. "Do I have a 100K version of this file?" was the question. "No, but we can make one very quickly." The other reason I chose this clip is because it is short. Take these down to get the washed out out of it. This one I'll do mono.

Any other questions while we are watching the progress bar slowly creep across the screen, or does anyone have an Xbox? He asked about input formats, what's a good input format. Like I said, this file came from DV, so I imported it via FireWire using Apple's DV codec. But generally when we get files in on beta tape or digi-beta tape, we bring it in using Kona SD card.

Yes, so it's, they're either 8 or 10 bit uncompressed codec, and I've had a lot of happy results with that card, it's a nice product. They just put out this year a Firewire interface with SDI and it uses the Kona SD and the 10 bit and the 8 bit Kona uncompressed codec, so I'm hoping to get my hands on that at some point to play with that because if I could do that on my laptop instead of having to go sit at a station for digitizing, that'll make life a lot more fun. But yeah, I like the Kona stuff with the uncompressed. With Final Cut 4, Apple introduced an uncompressed 8 and 10 bit kind of beginning codec, so people will start using that and will start seeing results. and how that pans out?

I've also done MPEG-4 encoding where instead of doing, I chose to just take the source file and do the 300 and the 100 out of Cleaner here because it's faster, and it produces a kind of fast, pretty decent, you know, workflow, pretty decent product. A lot of people will take and do all their pre-processing to one file before they encode it, and that's, we've done that for a lot of files. We especially did that before Cleaner supported MPEG-4. So, you know, we would go to something like PhotoJPEG as an intermediate file, or go to, I did PNG files because they're pretty good quality, pretty smallish file size.

So that's as an, it's kind of an intermediate from where you capture to where you go to MPEG-4. I've done PhotoJPEG and PNG as... Yeah, if you start with a PhotoJPEG at the largest size that you want the overall media to be, so if it's 320 by 240 or 400 by 300, and you just start with that as your intermediary file, you'll get pretty good results.

We were very pleased with that last year. We did experiment with the PNG as well, and it was sort of a situation of, to us it looked better, but it was also a little slower to export. Okay. This is the 100K version. It's 180 by 132, I think. Mono sound.

This one I believe is 10 frames per second, so it's going to be a little jerkier, but this one actually looks pretty good. I'm making imprints, in two steps, it's commitment. Three steps, I'm not done yet, draw my other leg up, and the pace is set, and the pace is set.

Considering the time we put into encoding this file, all of us here this afternoon just now, it's not a bad result. If you sit down with the file and tweak it and play with it, you're going to come up with a pretty good-looking result. And also always keep in mind that at lower bit rates you're not going to get Apple movie trailer quality, because this is streaming and that's not. And at 56K you're lucky to be getting video.

Do the encoders get that, or the translators get that question? No? Yeah, we need you guys to get up to the microphone to ask the questions. The translators can't hear the whole thing. Thank you. When DVDs are being professionally mastered, they'll obviously do different trade-offs between audio and video, variable bitrate, and then size of the bitrate at various times in the file. I'm asking whether you do for streaming, or whether these tools support for MPEG-4.

You know, if I have the matrix, you know, action sequence, and then it goes to a dialogue portion, and with music, where I can trade off between audio, video, or even do more bitrate at one part and then less bitrate at another. The simple answer to that question is yes, but the involved answer to that question is still yes, but kind of a... Not why would you do that, but it's going to take a lot more work.

For streaming, you pretty much wouldn't want to do that because you're always going to be at a certain bitrate, and you, you know, if you can have your talking parts looking as good as your, you know, high motion parts, then, you know, that's just a benefit. You're not saving anything by going at a lower bitrate. For downloadable content, yeah, you will save.

[Transcript missing]

Oh, yeah, set it to pass-through. Thank you. No, you don't get transcoding. Actually, that's how, say you do an MP4 file out of Cleaner, it doesn't hint it. They have a setting for hinting, but it actually doesn't hint the file. So, you know, this file... - So, what I do when I have to hint these files in is I go into QuickTime Player, you open it in that, You export movie to MPEG-4 options. Bless you. Like Mr. Waggoner gratefully volunteered, pass through audio/video so you're not getting any transcoding. Streaming optimized for server. OK. Save.

This very quickly kicks out a file that is now, whoops, got hinted tracks. So this is now a streaming file that you put on your streaming server and it delivers. So yeah, to answer your question, yeah you can do it as an MP4 file, you can do it as a .mov file. So yeah, you can save while doing your... and David One of the questions you said, we just did that real quick.

Obviously, if you had more On making this better? Probably taking the audio down a notch or two with the bitrate, upping the bitrate on the video, maybe trying to mess with the frame rate, because obviously more frames per second at a bitrate gives you a less good-looking file than a less frames per second at a given bitrate, because you're throwing the same amount of bits at less frames than you're throwing at eight frames a second, then you're able to throw more at it than at 12. So, you know, changing frame rates does it.

If you get really kind of in a jam, especially with like the reds on that file, I had a huge, huge problem with, and you know, you can go in and try and take the red down, you know, which will give you a little less blockiness when those frames are in the frame. So, you know, you can go in and, you know, change the brightness and contrast a little to try and give yourself a clearer looking file as it goes out. So, those are kind of the next steps.

And then the step after that is you just kind of go, hey, it looks good enough and then you deliver it. I'd probably add to that maybe aggressively cropping more. Depending on the footage, the ability to, if the action's in the center of the screen, or if it's focused in a given area, you know, I'll start.

I'll start aggressively cropping the outside frame more, scrub through it quickly and see if I'm losing the action or the focus of it. So, I'm devoting all of my data to the core action of the clip. I've not had a situation where somebody's come back and said, man, that was really cropped. Instead, it's been, man, that looked really good. More questions now, please.

Are there any more questions specifically? If you have a question, please just feel free to hit a microphone. There's a couple. There's one there, there's one there, and there's one over there. Could you share any experiences you've had with some of the other MPEG-4 codecs like Thrivex, DivX? Maybe if you've used Fink you could try some of the Xvid implementations that have been out the last few months. I honestly can't comment on that. My experience with DivX has been watching things that people have showed me on the computer that they downloaded from Nasty Sources.

So I've not encoded to DivX. I've not encoded to DivX for client delivery files because my clients either go through Apple with their delivery mechanism and we have to deliver the files that Apple needs, or clients that I work with on our own without Apple, we try and steer them in a certain direction that will try and keep them sort of in line with what Apple is doing, so that the content is all going to kind of look the same, behave the same, and act the same way. So I'm sorry, but I can't.

Different MPEG-4 implementations in the next year perhaps might work with each other. Yeah, it's what I'm hoping. Yes, sir. Hey, way to go! We love it. Can you please go to the microphone? It's for the sake of the translation. I really want to find out what I sound like in Japanese. I think we all should.

The HD we haven't really had experience with yet, though. We can't wait for the client that wants us to play with it, because that's how we most often get to experiment with it. That's how we get new hardware? Oh, we have to buy something for that? As for the 8-bit versus the 10-bit, the… The main difference that we've seen is on high contrast stuff. So like we have one place that's a production company, Eyeball, that we do a lot of work with.

They do a lot of graphics-based 3D stuff. It's all flat graphics, but it's also really high contrast ratios. They like to push the envelope. And you start seeing a muddy quality to your black levels that you don't see. You see a muddy on the 8-bit that you don't see with the 10-bit at times. So there definitely is a value difference that we've seen. And I think my personal opinion is some of it's perceptual on the client's part, but I have actually seen it on even just metered looks at it. So there is some slight differences for that.

But again, it's really got to be high contrast differences, and it's really mostly when it's graphics, so that there's really a far-field color value difference. With video, yeah, captured video, you can't tell that much of a difference. The human eye is sensitive, but it's not that sensitive. And when you're going from either 8- or 10-bit source to MPEG-4 or Sorensen or MPEG-1, 8- or 10-bit doesn't make all that much of a difference in kind of a real-world implementation. Yeah, I was just curious if there was any validity at all. There's sometimes, yeah, there's obviously going to be validity to almost everything. So yeah, but, you know, go 10-bit. Okay, are there more questions? Yes. Oh, I'm sorry. Hi, um.

That's the name of the session, man. But I do quite a bit of compression, and I've-- I found that the quality of the MPEG-4 codec in QuickTime doesn't seem to quite match up to Sorenson 3, that professional edition that's using QuickTime 5. I still use Sorenson 3. Is Apple's MPEG-4 implementation going to be improving in the future? Well, I think the, if I may, the important part of that was it was Sorenson Video 3, and a lot of times we consider this Apple's MPEG-4 one.

So, I mean, it's really, it's got lots of room to grow, and yeah, there's room for improvement, but I think that improvement's coming. And I don't see a reason not to support a standard. We still do a lot of Sorenson Video as well for given situations. I think right now we're at a point where it's, depending on the type of content that it's going to be, dictates somewhat what we might choose.

But that's the only thing. We don't just pick Sorenson Video because we think it looks better. We think it might look better in some situations right now, but I wouldn't say that in 12 months or 18 months that that's necessarily going to be true. You have a movie trailer site that you're working on.

"I think Xtor still uses the Xtor 3. I haven't quite seen the big MPEG-4 downfall from Apple." Well, if you look at a lot of the content on the actual QuickTime "What's On" page, the music videos, those sort of things, a lot of those are done in MPEG-4. That's a good question.

They're done in streaming MPEG-4. And I know that because I do a lot of them. And so, there is a transition. The movie trailers and things like that, you know, one day MPEG-4, we'll see. That's the kind of question that you can bring up at the QuickTime feedback session.

Which I believe is exactly. We actually are in transition. And on the MPEG, I mean on the movie trailer site, stay tuned. Yeah, one thing actually that was brought up this morning, sorry Dennis, is that there's a standard for the QuickTime, or the MPEG-4 decoder. There's not a standard for an encoder. So, as people write better and more efficient and, you know, kind of.

It's a transition. It's going to happen. Everything is going to happen eventually to move along the sort of MPEG-4 thing. Because we all, you know, it's like, it's a standard. That's what we want to get behind and push. The important thing about a standard is that 10 years from now, you know, the MPEG-4 files on Apple's site will still play. 10 years from now you can't guarantee that the Sorenson 3 file is still going to play. So we think that going forward it's a good idea to move to MPEG-4.

Thanks. Any other questions? Yes sir, if you could use the microphone. With fees involved? If that committee has its way, I might be behind the times, but is that still an issue? With fees involved? MPEG-4. There is actually a fee structure with MPEG-4, and we're actually lucky here at the WWDC to have Larry Horn. He's in one of the sessions. Thursday morning at 9.

Thursday morning at 9 o'clock. He is the man to talk to about fees. Should that be scary for developers, or what's your opinion? Well, you know, there are fees to use Windows Media as well. Like what? They came out with a licensing structure a few months ago. Just like MPEG-4 does. That was widely publicized? Yeah.

Okay, probably not as widely as the MPEG-4. But it's an evolving standard. This is MPEG-4, like you said, it's been out for us for about a year. If you look back in the history of any codec or any file format, we're in 1.0. We'll soon be in 2.0, then 3.0, then 4.0. Any other questions about encoding in general? Can we please also have the slide machine?

Yes sir? I was curious, we're using right now the Squeeze for reason of quality at this point, and also for batching. But using like, let's say the QuickTime Pro, is there any kind of batching functionality that I'm unaware of? QuickTime Pro? Yeah. Not... Through Final Cut you can get patching. Is that, with Sorensen it's basically one clip and you can go to like several different bit rates. Is there a way to do multiple source files to multiple outputs?

To multiple outputs? Basically, yeah. Let's say you're using Final Cut Pro in there. Well, Apple kind of changed the thing after I handed in this presentation by launching Final Cut 4 with Compressor. So, Final Cut 4 now comes with kind of Apple's compression program. And I wasn't able to do the demo using that in this presentation. I didn't really have the hands-on with it that I wanted to be able to talk about it. But it is possible with it. It is possible with Compressor, definitely, to do batches, multiple clips, multiple settings. It's like using Squeezer Cleaner.

You have the ability to queue up sequences, raw clips that have been marked, and output multiple clips. So, out of something like Final Cut Pro, you save everything you want to do as a unique sequence. You do those all and then you go to batch export them. And you can batch export them to not really multiple settings, but you could do your 300 run.

And then you can go in and do another batch export of your 56k run, that kind of deal. So, Final Cut will enable you to do batch export using the QuickTime exporter without having Cleaner or Squeeze. But definitely, if you're in the market to update Final Cut Pro, they did a really good job with that.

One of the limitations of the MPEG-4 format was the annotation support. Yes. What tools are there for the limited annotation support that is there? For the limited annotation support, honestly don't know of any tools. The way I've done it is I've tried putting in annotations before I export something in QuickTime Player and see if it makes it through. So things like name can go through. Things like that. Honestly, I've only done it through trial and error. There is a trick you can use with QuickTime. Are you familiar with ref movies?

So you can put annotations in a ref movie and inside the ref movie call to it .mp4. And if you don't, then the ref movie can actually use its annotations that show up when you play the MP4 movie. Yeah. Anytime I've had to do something with serious annotations where clients demanded the copyright and the artist's website and all that, I've just taken the MPEG-4 file that I put out and then do... Oh, my screen's on the... I do export in a movie to QuickTime movie and you pass through the video and audio so you've got no transcoding and you can put in the annotations you want to do. There is a way to.

Not after the fact, not really, no. It's more function of the spec than it is any limitation of QuickTime. Yes, sir? This might seem a bit ignorant, I don't know, but is there any way of making real-time encoding for the audio, just to AAC, or is this a question for core audio? Things like QuickTime Broadcaster, so real-time as in live streaming. I was actually thinking about the use of game audio for real-time encoding and decoding of audio streams, like input.

"Well that's what iChat now does, is real-time encoding." "I believe it is using MPEG-4." "That's probably a good question for Frank Casanova." "That's a good question for Frank Casanova. No, we just got it yesterday, so we've been playing with it in our off-time." "Ask us tomorrow." "Yeah, ask us tomorrow." But no, I do believe that it's MPEG-4.

It seems to me that Apple would want to use MPEG-4 in that because everything else they're pushing is MPEG-4. It could very well be H.263 though, which... "It is H.263." "It is H.263." "No, thank you." "There we go." "As MPEG-4, yeah." "MPEG-4 short header." Okay. Sure. But yeah, something like QuickTime Broadcaster, you can do live encoding of AAC audio streams.

Okay, if there are no more questions, I'd like to thank you. Oh, I'm sorry. Please, if you have a question, please just hit a mic. Don't be shy. Well, don't hit it. There's a lot of talk about the scalability of MPEG-4. So the videos I've seen have either been 3D, like this morning, or streaming, or downloads. How about stuff that's at least DVD resolution or higher?

"Either with Apple's coding, or as you're saying in the future there may be better encoders?" Yes, well there's something that was mentioned in the MPEG-4 session earlier this morning, as well as at the QuickTime keynote. The AVC, Advanced Video Coding. And so that is kind of what is pegged towards the higher bitrate DVD quality files. And so, you know, Apple of course doesn't comment on future plans, but if they were to implement that, that's definitely the way to go.

So, other than that, yeah, you just, you can do MPEG-4 files at, you know, monstrous bitrates. And you get very good quality. And we're even doing some experimenting with some set-top box playback and that kind of thing with it. So it's completely viable. It looks very nice. And it'll look probably even better in the future as it goes forward.

I think the thing that we're liking about it so far is the file sizes involved, even for a really heavy duty, high quality, are still very attractive. They're not huge. Yeah, and also Apple's implementation of MPEG-4 and AAC doesn't tax the processor very well. It's optimized to run especially on a G4. So playing back a, you know, 640x480 MPEG-4 file with AAC audio plays back a lot smoother than a G4.

Yeah. And that's something that a Sorenson 3 QDesign music profile did because especially QDesign is a processor hog. So it does, doing the big things kind of pays off in MPEG-4 because you can throw the bits you need to at it to get the video quality. And then you get benefits because of the low processor tax.

So, yeah, it's definitely something, if that's where you're looking to go, throw lots of bits at MPEG-4 and see what you come up with. We've actually done a lot of demos at Macworld and NAB. The basic comparison we show is an MPEG-2 file encoded at, say, X megabits, 4 or 5 megabits. We actually do an MPEG-4 version of the same file, the same dimensions, at half the data rate. And you're hard pressed to tell the difference between the two files.

Yes sir? One more general question. Can we expect to see DRM on video like it is in the iCAM stores? Don't announce future products, obviously, but this Thursday we have a session, the feedback forum 011, with Frank Casanova is our director, the person to ask about that. DRM is an interesting situation.

I mean, DRM, there's a lot of different opinions right now about DRM. The person to really ask that question of is Frank Casanova in the feedback forum. We're more the how guys. We're the guys that actually have to take the files and encode. We're not much on the product marketing side. Thank you.

and David If I knew I couldn't tell you. And I just don't know. Yeah. Because they don't tell me anything. If he knew he wouldn't tell us, yeah. What do you think of the Sorenson MPEG-4 Compressor compared to Apple's Compressor? Sorenson has done a little more extra work on their codec because it came out later than Apple's. So they have a little more under the hood. But they're both very good, very viable MPEG-4 video codecs.

And are there any more questions? If there's not, I would definitely like to thank you guys for your time today. It's been very good. In wrapping up, I think there was a couple of, a little bit of information Dennis has here. Yeah, there are a couple more sessions on MPEG-4. You guys all had this scheduled, but coming up tomorrow there are some specific sessions on 3GPP in the afternoon at 2:00, and then there's one at 5:00.

And then again, the real story about MPEG-4 visual licensing, this is the Larry Horn. Larry Horn is the president, director of a group called MPEG-LA, which is the MPEG... VP, thank you. He is the, sort of the, at the forefront of MPEG-4 licensing, so I'm sure he'd love to hear your feedback as well.

Yes. And again, please come to the 3.30 Thursday session, the QuickTime Feedback Forum. This is the place where you've got Frank Casanova, who heads up the product marketing team, but you also have some real key engineers on the QuickTime team. And this is an incredible opportunity for you guys to tell us things and for us to tell you things, what we can tell you, about what we think about different things. So please come. Let us know what you think. One more question. Please.

You said there was this new codec, is it AVC? Advanced Video Coding, it's part of the MPEG-4 specification. Is there going to be anything going on where we'll hear more about that? Probably 3:30 on Thursday. Thursday at 3:30, ask Frank Casanova. He'll be playing guitar, he's answering all the MPEG-4 questions. Watch his eyebrows.

Yes? I've been to the Semtech 4 licensing session all day, scheduled for that room across the hall. and David That's going to be a good session. I'm going to be there. and it'll be in a bigger room. Okay, well again, thank you very much for your time. - Thank you.
