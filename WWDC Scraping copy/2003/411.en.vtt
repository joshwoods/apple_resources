WEBVTT

00:00:26.400 --> 00:01:10.200
[Transcript missing]

00:01:12.400 --> 00:01:15.960
Actually, before Darin gets going,
you know,

00:01:15.960 --> 00:01:18.700
if you ever catch this guy in the hall,
okay,

00:01:18.700 --> 00:01:21.040
make sure you don't ask him something,
a question about something

00:01:21.040 --> 00:01:24.380
he's really interested in,
because he'll just never stop talking,

00:01:24.380 --> 00:01:24.870
okay?

00:01:24.870 --> 00:01:24.870
No.

00:01:25.490 --> 00:01:26.900
All right.

00:01:27.020 --> 00:01:28.400
Well, welcome.

00:01:28.590 --> 00:01:33.400
We're going to talk about
not just about web standards,

00:01:33.600 --> 00:01:36.840
but we're also going to talk
about how we support web standards

00:01:36.930 --> 00:01:39.880
inside the Safari technology,
if you're using Safari, the application,

00:01:39.880 --> 00:01:43.190
or if you're using
WebKit inside your own app.

00:01:43.430 --> 00:01:46.020
So first of all,
I was thinking about this talk,

00:01:46.020 --> 00:01:48.990
and I was trying to figure
out who would be interested.

00:01:49.230 --> 00:01:51.070
Who does it matter to?

00:01:52.510 --> 00:01:58.090
"Developers, developers, developers,
developers, developers, developers,

00:01:58.090 --> 00:01:58.090
developers, developers!"

00:01:58.600 --> 00:02:00.150
All of you.

00:02:00.230 --> 00:02:01.510
It matters to all of you.

00:02:01.650 --> 00:02:04.800
And so there's a few different types
of developers who'd be interested in

00:02:04.800 --> 00:02:06.540
what we're going to talk about here.

00:02:06.600 --> 00:02:09.280
If you're a website developer,
you'll be interested.

00:02:09.360 --> 00:02:12.290
Now, it's kind of funny to say if
you're a website developer.

00:02:12.350 --> 00:02:15.660
I mean, everyone is a website
developer these days.

00:02:15.660 --> 00:02:18.380
Some people just do a
little website of their own.

00:02:18.450 --> 00:02:22.390
Other people might be designing
a whole professional website.

00:02:22.600 --> 00:02:25.580
No matter which category you fall into,
I'll have some stuff

00:02:25.700 --> 00:02:27.200
that's valuable for you.

00:02:27.200 --> 00:02:30.350
If you do a Macintosh application,
there's a chance you're going

00:02:30.350 --> 00:02:31.440
to want to embed WebKit.

00:02:31.490 --> 00:02:35.040
And the things you learn here
about standards are going to

00:02:35.040 --> 00:02:39.830
help you understand why you
would want to embed WebKit.

00:02:39.960 --> 00:02:42.740
Everything I say about
standards applies to Apple Help.

00:02:42.810 --> 00:02:45.260
And also, if you want to know
something about the guts,

00:02:45.310 --> 00:02:50.290
what's inside a web browser,
this is also going to be great for you.

00:02:50.370 --> 00:02:53.330
So here are some of the
things we're going to cover.

00:02:53.490 --> 00:02:57.200
The WebKit,
the support for web standards in WebKit,

00:02:57.200 --> 00:03:01.780
the approach that the WebKit takes
to compatibility with websites,

00:03:01.970 --> 00:03:04.400
also the WebKit and open source.

00:03:04.400 --> 00:03:06.540
You've heard about that in
a bunch of other sessions.

00:03:06.550 --> 00:03:08.460
I'm going to repeat some
of what you've heard,

00:03:08.460 --> 00:03:11.740
but tell you a few new things,
and also some of our goals

00:03:11.740 --> 00:03:13.600
for the future in this area.

00:03:13.650 --> 00:03:15.760
So let's get started.

00:03:15.790 --> 00:03:16.990
Let's review a little bit.

00:03:17.190 --> 00:03:19.600
If you've been to the conference
for the last three days,

00:03:19.600 --> 00:03:21.170
I hope you've already heard this stuff.

00:03:21.190 --> 00:03:24.020
But let's talk about it again
to set the stage for the rest

00:03:24.020 --> 00:03:25.790
of what I'm going to say.

00:03:26.160 --> 00:03:28.400
First of all, we're very proud of Safari.

00:03:28.430 --> 00:03:30.000
It was a big success.

00:03:30.000 --> 00:03:33.000
We released our public beta this January.

00:03:33.000 --> 00:03:36.000
More than 5 million copies
were downloaded since then,

00:03:36.000 --> 00:03:38.530
which, you know, I'm not going to say
how many we expected.

00:03:38.540 --> 00:03:39.670
Let's just say this is more.

00:03:39.680 --> 00:03:44.350
And Safari 1.0 was released this week,
and, you know,

00:03:44.350 --> 00:03:47.620
we couldn't be more pleased with that.

00:03:47.910 --> 00:03:52.120
But one of the questions we think
about is why was it so popular?

00:03:52.120 --> 00:03:54.240
We think the reasons
are mainly these three.

00:03:54.840 --> 00:03:59.430
The impressive performance of Safari,
the great innovative features,

00:03:59.560 --> 00:04:01.140
and the quality.

00:04:01.160 --> 00:04:04.120
So now let's talk about the WebKit.

00:04:04.140 --> 00:04:06.870
Again, if you've been to presentations
over the past couple days,

00:04:06.920 --> 00:04:08.020
I hope you already know this.

00:04:08.020 --> 00:04:09.720
What is the WebKit?

00:04:09.740 --> 00:04:13.760
The WebKit is the engine inside Safari.

00:04:13.780 --> 00:04:19.540
And so this engine is now available to
you for any application on Macintosh.

00:04:20.060 --> 00:04:24.100
And so what that means is if
you're a website developer,

00:04:24.870 --> 00:04:27.190
any kind of content developer
who's using web standards,

00:04:27.200 --> 00:04:30.990
Safari support is vitally important
to you because it not only affects

00:04:31.140 --> 00:04:33.420
how the Safari web browser is
going to show your content,

00:04:33.420 --> 00:04:37.280
but also any other Mac OS X application
that uses the WebKit.

00:04:38.740 --> 00:04:40.740
and it's available now.

00:04:40.860 --> 00:04:44.300
So again, a reminder of something you
should have already heard.

00:04:44.520 --> 00:04:48.910
You can use the WebKit right now
in Cocoa or Carbon applications.

00:04:48.980 --> 00:04:53.390
On 10.2, you just have to have
Safari installed to use the WebKit.

00:04:53.480 --> 00:04:56.420
On Panther, it's there all the time.

00:04:56.540 --> 00:04:59.720
And there's some details about
the API that you've heard before.

00:04:59.720 --> 00:05:01.380
I won't repeat them again.

00:05:01.560 --> 00:05:03.690
So let's put the WebKit in context.

00:05:03.910 --> 00:05:06.140
Just one more little bit of review.

00:05:06.140 --> 00:05:08.350
The WebKit is a framework.

00:05:08.390 --> 00:05:10.340
It's built on top of
many system frameworks.

00:05:10.550 --> 00:05:11.260
These aren't all of them.

00:05:11.260 --> 00:05:13.960
This is just kind of a
sample to give you some idea.

00:05:14.020 --> 00:05:16.720
The application kit that it
uses for a lot of its work.

00:05:16.840 --> 00:05:22.920
Foundation, where the new URL APIs are
that it uses to read in data.

00:05:23.310 --> 00:05:26.590
And then applications built on top of it,
Safari's one.

00:05:26.880 --> 00:05:30.190
New applications that you
develop are also fitting there.

00:05:30.200 --> 00:05:34.040
And then also inside WebKit,
there are the two open-source

00:05:34.040 --> 00:05:37.000
frameworks that WebKit uses to
do a lot of the heavy lifting.

00:05:37.000 --> 00:05:41.260
WebCore, which is the library based on
KHTML from the KDE project,

00:05:41.260 --> 00:05:42.860
and JavaScriptCore.

00:05:42.860 --> 00:05:46.420
And when we get to a part of this
talk that focuses on open-source,

00:05:46.420 --> 00:05:48.640
we'll discuss this a little bit more.

00:05:49.750 --> 00:05:54.030
So there's some words that say the
same thing that picture just did.

00:05:58.390 --> 00:06:03.200
So let's start talking about
the web standards themselves.

00:06:03.210 --> 00:06:07.930
Let me begin by putting up there a
list of some of the most important

00:06:07.960 --> 00:06:12.940
goals that we had in mind when
we were designing the WebKit.

00:06:12.950 --> 00:06:16.770
You know,
standards-- we wanted to make sure

00:06:16.980 --> 00:06:21.320
that web pages looked good when
they were displayed by the WebKit.

00:06:21.450 --> 00:06:23.390
And we also wanted to make
sure that they worked,

00:06:23.390 --> 00:06:24.740
they did the job they need to.

00:06:24.740 --> 00:06:27.310
And in addition,
supporting standards was kind

00:06:27.310 --> 00:06:28.800
of a goal in and of itself.

00:06:28.800 --> 00:06:31.780
But supporting standards
is also a means to the end.

00:06:31.780 --> 00:06:35.960
It's something that allows us to
work with those existing web pages.

00:06:35.960 --> 00:06:38.340
And you know,
one of the things we sometimes

00:06:38.340 --> 00:06:41.920
talk about is showing web pages
the way the designer intended,

00:06:41.920 --> 00:06:46.580
which is a very tricky thing,
because you don't know-- you need to

00:06:46.640 --> 00:06:48.140
know what was in their head at the time.

00:06:48.140 --> 00:06:51.220
It's not enough to just look
at the content of the page.

00:06:51.220 --> 00:06:54.710
And so this is what we had in mind
when we were working on web pages.

00:06:54.830 --> 00:06:57.510
So what we did is we had a list
of standards that we had in mind

00:06:57.510 --> 00:06:59.860
when we were designing the WebKit.

00:06:59.860 --> 00:07:02.210
And we had a list of standards
that we had in mind when we

00:07:02.210 --> 00:07:03.660
were designing the WebKit.

00:07:03.660 --> 00:07:06.310
And we had a list of standards
that we had in mind when we

00:07:06.310 --> 00:07:07.860
were designing the WebKit.

00:07:07.860 --> 00:07:11.370
So what you see here is a list
of some of the most important

00:07:11.370 --> 00:07:13.660
standards that are in the WebKit.

00:07:13.740 --> 00:07:16.310
And what I'm going to do
now-- and you're going to be

00:07:16.600 --> 00:07:19.900
seeing this slide for a while,
so better read it and then look at me,

00:07:19.940 --> 00:07:22.860
because it's going to be
really boring up there.

00:07:22.860 --> 00:07:22.860
So I'm going to talk a little bit
about each of these standards here.

00:07:22.860 --> 00:07:22.860
And what they mean inside a web browser.

00:07:22.860 --> 00:07:22.860
So first of all,
there's the HTML standard.

00:07:22.860 --> 00:07:22.960
And this is really the
cornerstone of web technology.

00:07:22.960 --> 00:07:23.060
Originally,
it was a standard for web development.

00:07:23.060 --> 00:07:23.100
But now it's a standard
for web development.

00:07:23.100 --> 00:07:24.100
But now it's a standard
for web development.

00:07:24.100 --> 00:07:27.130
Originally, in the old days,
there were a couple image formats,

00:07:27.210 --> 00:07:31.100
the HTML standard, and the HTTP standard
for getting web pages.

00:07:31.100 --> 00:07:31.520
And that was it.

00:07:31.640 --> 00:07:35.360
That really was already recognizable
as the web that we see today.

00:07:35.410 --> 00:07:39.870
And so the HTML standard,
currently version 4,

00:07:40.160 --> 00:07:42.580
there's lots of things you
can do with just HTML alone.

00:07:42.580 --> 00:07:44.950
HTML describes the
content of the web pages,

00:07:44.960 --> 00:07:46.930
what comes first, what goes next.

00:07:47.000 --> 00:07:49.940
It includes things that allow
you to put images in the page,

00:07:50.060 --> 00:07:57.370
links to and from pages, and of course,
a form elements like buttons and lists.

00:07:57.850 --> 00:08:06.400
And also part of HTML are the tables,
which actually is one of the most

00:08:06.920 --> 00:08:09.140
difficult standards to deal with.

00:08:09.200 --> 00:08:11.540
Because tables are sort
of this de facto standard.

00:08:11.660 --> 00:08:16.030
Nowhere can you find written down the
exact rules of how wide tables should

00:08:16.030 --> 00:08:18.040
be and given various specifications.

00:08:18.100 --> 00:08:22.090
And it's one of the trickiest parts of
being compatible with existing websites.

00:08:22.150 --> 00:08:23.060
So we'll come back to that in a minute.

00:08:23.060 --> 00:08:27.780
Then there's also an important
standard called XHTML.

00:08:27.780 --> 00:08:31.940
And XHTML is the XML version
of the HTML standard.

00:08:32.180 --> 00:08:34.780
And one of the really --
there are lots of reasons to

00:08:34.810 --> 00:08:36.260
move into this new XML world.

00:08:36.260 --> 00:08:39.380
But one of the main reasons is it
creates a future possibility of

00:08:39.640 --> 00:08:43.670
having a single XML document that
inside it has an XHTML portion.

00:08:43.780 --> 00:08:47.050
In another part of it,
it might have an SVG portion or

00:08:47.050 --> 00:08:50.980
any other for vector graphics and
any other XML-based languages.

00:08:50.980 --> 00:08:53.030
And they should be able to all
intermingle and interweave.

00:08:53.040 --> 00:08:59.410
And so that's a reason why
XHTML is very important.

00:09:00.090 --> 00:09:03.590
HTML was always conceived
to be a language to describe

00:09:03.660 --> 00:09:07.660
what was on the web page,
and not how it should look.

00:09:07.760 --> 00:09:10.830
And so its ways of letting you
control exactly where things are

00:09:10.830 --> 00:09:16.140
positioned on the page are all
sort of almost unintentional.

00:09:16.260 --> 00:09:19.610
People really had to push it
to its limit to get an image

00:09:19.910 --> 00:09:22.230
exactly where they wanted.

00:09:22.260 --> 00:09:25.800
And mainly what they did was use tables,
tables inside tables with another

00:09:25.800 --> 00:09:27.780
table here and a table around that.

00:09:27.870 --> 00:09:32.560
And as I mentioned before,
that was one of the least standardized

00:09:32.560 --> 00:09:35.000
aspects of how browsers work.

00:09:35.030 --> 00:09:38.550
And a real revolution in this came
with the next standard on the list,

00:09:38.610 --> 00:09:40.800
which is cascading style sheets.

00:09:40.800 --> 00:09:42.800
Cascading style sheets,
as you can see there,

00:09:42.800 --> 00:09:45.600
which had already had a version
one and version two and version

00:09:45.600 --> 00:09:49.030
three has been being worked on now,
is a way to describe how a page

00:09:49.030 --> 00:09:50.790
should look separate from the content.

00:09:50.820 --> 00:09:54.450
So you still use HTML to
say what's on the page,

00:09:54.640 --> 00:09:57.600
but you use cascading style sheets
to describe how it should look.

00:09:57.600 --> 00:10:01.310
We'll talk about that a
little more in detail.

00:10:01.700 --> 00:11:06.100
[Transcript missing]

00:11:06.300 --> 00:11:08.800
And in addition to the
DOM level 1 and 2 standards,

00:11:08.800 --> 00:11:10.300
we support some extensions.

00:11:10.450 --> 00:11:12.930
DOM level 0 is some of the
most important DOM stuff,

00:11:13.000 --> 00:11:16.290
and it's not in any standard,
but we have to support that,

00:11:16.590 --> 00:11:20.590
and we support some
Microsoft extensions to DOM.

00:11:21.070 --> 00:11:22.810
So there you have it,
a list of our supported standards.

00:11:22.930 --> 00:11:27.340
But wait, there's more.

00:11:27.430 --> 00:11:29.710
Besides all these basic
standards for the web,

00:11:29.800 --> 00:11:32.260
there are even more things you
need before you can work with the

00:11:32.400 --> 00:11:34.520
real-life websites that are out there.

00:11:34.570 --> 00:11:37.120
Very important standards,
some of which aren't standards at all.

00:11:37.160 --> 00:11:43.370
The Netscape cookie standard,
which is not really a standard

00:11:43.410 --> 00:11:45.220
any standards body defines.

00:11:45.270 --> 00:11:46.430
The plug-in API.

00:11:46.500 --> 00:11:51.710
This is the way we get things in
WebKit applications like Flash content

00:11:52.000 --> 00:11:57.420
from Macromedia or Shockwave
Director or real player content.

00:11:57.480 --> 00:12:00.640
And even QuickTime,
that's the way it plugs into the

00:12:00.640 --> 00:12:02.720
programs that use the WebKit.

00:12:02.870 --> 00:12:06.220
We support Java applets,
and our Java team has done a great

00:12:06.220 --> 00:12:09.340
job of making Java applets work
really well inside WebKit programs.

00:12:09.340 --> 00:12:14.060
And when it comes to character sets,
when it comes to working

00:12:14.070 --> 00:12:16.290
all around the world,
it's amazing how many different

00:12:16.290 --> 00:12:19.250
character sets there are and how many
different names there are for them.

00:12:19.260 --> 00:12:22.310
And so many of those names
are documented in the central

00:12:22.310 --> 00:12:25.230
repositories and official names,
and then so many of them

00:12:25.230 --> 00:12:27.880
aren't documented anywhere,
and you just have to discover them

00:12:27.880 --> 00:12:28.970
on the websites that use them.

00:12:30.620 --> 00:12:34.790
Inside WebKit, it uses Unicode,
and this means that you can use different

00:12:34.790 --> 00:12:38.240
pages with different character sets,
and it all works together nicely.

00:12:38.240 --> 00:12:40.940
JavaScript always gets the
same kinds of character codes.

00:12:42.540 --> 00:12:44.930
And then finally,
we have support for the kinds of

00:12:45.020 --> 00:12:49.500
bidirectional text and contextual
letter form stuff that you need to

00:12:49.500 --> 00:12:53.790
work with languages other than English.

00:12:54.580 --> 00:12:56.990
But wait, there's more.

00:12:57.110 --> 00:13:03.130
So this third page is also a
list of some important ones that

00:13:03.390 --> 00:13:05.420
are supported inside the WebKit.

00:13:05.790 --> 00:13:08.980
In fact, almost all of these are things
that are supported in the

00:13:09.040 --> 00:13:10.400
Foundation URL API layer.

00:13:10.490 --> 00:13:12.730
And these are standards that
have to do with getting the

00:13:12.770 --> 00:13:16.220
content inside the WebKit,
pulling it out from the web.

00:13:16.370 --> 00:13:20.000
The basic protocol, HTTP,
including some of the more

00:13:20.000 --> 00:13:23.980
recent additions in the history
of HTTP for chunk transfers,

00:13:23.980 --> 00:13:26.020
which are for pages that
come a bit at a time,

00:13:26.020 --> 00:13:29.430
and persistent connections,
which make using a website with

00:13:29.510 --> 00:13:31.810
lots of images much faster.

00:13:32.080 --> 00:13:35.060
The authentication standards
that you need to support,

00:13:35.120 --> 00:13:37.670
the secure HTTP standards,
and also support for

00:13:37.850 --> 00:13:39.280
some proxy standards.

00:13:39.380 --> 00:13:43.500
So anyway, there's the big laundry list.

00:13:43.560 --> 00:13:46.900
And so now, with that out of the way,
having listed those out of the way,

00:13:46.900 --> 00:13:49.300
let's talk a little bit more about these,
just so you can get some

00:13:49.300 --> 00:13:53.690
understanding of what they are
and how they relate to WebKit.

00:13:55.970 --> 00:13:59.250
So let's zoom in for a
moment on contextual style--

00:13:59.450 --> 00:14:00.650
on cascading style sheets.

00:14:00.870 --> 00:14:01.100
Ha!

00:14:01.130 --> 00:14:02.600
I keep saying that.

00:14:02.600 --> 00:14:04.090
The CSS standard.

00:14:04.270 --> 00:14:07.430
So as I said before,
the important thing about the

00:14:07.430 --> 00:14:11.900
CSS standard is that for the
people designing it was completely

00:14:11.900 --> 00:14:16.830
separating the appearance of a
page from the content of that page.

00:14:17.140 --> 00:14:19.500
I'll show you what
that means in a minute.

00:14:19.640 --> 00:14:22.310
But besides that,
it meant something more to the

00:14:22.310 --> 00:14:24.660
web community when it arrived.

00:14:24.700 --> 00:14:30.270
And that is it allowed you to do real
design with each element placed where

00:14:30.270 --> 00:14:34.660
you wanted it and the page laid out just
the way you like without using tables.

00:14:34.920 --> 00:14:39.430
And so this really creates the
possibility of making a page that

00:14:39.650 --> 00:14:44.570
looks the same on all the browsers
without navigating this tricky world

00:14:44.680 --> 00:14:47.420
of how tables work in each browser.

00:14:47.470 --> 00:14:51.550
And the basic structure of
cascading style sheets is that you

00:14:51.560 --> 00:14:55.250
have a predicate-- in this case,
this little example I put in the box,

00:14:55.340 --> 00:14:57.570
the predicate is form,
so it says all-- that means it

00:14:57.570 --> 00:14:58.720
applies to all form elements.

00:14:58.850 --> 00:15:02.530
But there are ways to do predicates
that apply to certain named elements,

00:15:02.580 --> 00:15:06.120
certain classes of elements,
not just which tag.

00:15:06.410 --> 00:15:08.220
And then you specify the
styles you want to apply.

00:15:08.350 --> 00:15:10.920
And styles are everything
from the mundane,

00:15:10.920 --> 00:15:14.540
like the color or the font family,
to incredibly sophisticated

00:15:14.620 --> 00:15:19.010
things that are browser features
that are expressed as styles.

00:15:19.050 --> 00:15:20.420
So that's a little bit about
cascading style sheets.

00:15:20.420 --> 00:15:20.420
Now,
another-- another thing that I want to

00:15:20.420 --> 00:15:20.420
talk about is the fact that there's a
lot of stuff that's going on in the web.

00:15:20.420 --> 00:15:21.420
And I think that's a good thing.

00:15:21.420 --> 00:15:22.350
And I think that's a good thing.

00:15:22.430 --> 00:15:26.660
Now, another-- another one of the
standards that's worth discussing

00:15:26.660 --> 00:15:28.250
in a bit more detail is the DOM.

00:15:28.510 --> 00:15:31.380
Again, one of the main things this lets
you do is manipulate the document,

00:15:31.470 --> 00:15:35.420
manipulate the objects in the
web page from inside JavaScript.

00:15:35.420 --> 00:15:38.420
And this is how you achieve
dynamic effects on web pages.

00:15:38.420 --> 00:15:40.420
I just gave a little example here.

00:15:40.420 --> 00:15:44.420
You might have a form with a
checkbox in it for the language,

00:15:44.420 --> 00:15:48.420
and this line of JavaScript code
would let you check that checkbox.

00:15:48.420 --> 00:15:51.420
And so that's-- that's a little
example of-- of use of the DOM.

00:15:51.420 --> 00:15:52.420
Well, thank you.

00:15:53.340 --> 00:15:56.770
So let's talk in depth about a
couple more of the standards,

00:15:56.770 --> 00:16:00.460
and then I'll show you some web pages.

00:16:00.810 --> 00:16:05.930
So the plug-in support that we have is
another de facto standard from Netscape.

00:16:05.990 --> 00:16:09.290
Netscape documents how plug-ins
worked in their original

00:16:09.290 --> 00:16:12.380
versions of the Netscape browser,
and that really establishes

00:16:12.420 --> 00:16:14.240
how plug-ins work today.

00:16:14.340 --> 00:16:17.340
Existing plug-ins that
worked on Macintosh,

00:16:17.340 --> 00:16:20.660
that worked with browsers
that existed before Safari,

00:16:20.720 --> 00:16:22.870
will work in any WebKit application.

00:16:22.980 --> 00:16:25.080
There's nothing you have to
do to make plug-ins work.

00:16:25.140 --> 00:16:28.030
And so if you're writing a plug-in,
you know it'll work inside

00:16:28.030 --> 00:16:29.750
any app using WebKit.

00:16:29.960 --> 00:16:33.030
And you can actually make a
Mac OS version of your plug-in,

00:16:33.030 --> 00:16:34.560
and that'll load even faster.

00:16:34.560 --> 00:16:38.140
I wanted to mention that here because
I wasn't sure what other talk we'd

00:16:38.140 --> 00:16:39.870
have a chance to mention it in.

00:16:39.980 --> 00:16:43.400
And also,
this is an area to look to in the future.

00:16:43.400 --> 00:16:44.950
We're going to make
significant enhancement-style

00:16:45.060 --> 00:16:46.100
plug-ins work in the future.

00:16:48.440 --> 00:16:52.280
And then, besides plug-ins,
there's one other area

00:16:52.280 --> 00:16:54.280
worth highlighting,
which is Java.

00:16:54.280 --> 00:17:01.900
Java is... Java applets are a big
part of many websites and have

00:17:02.040 --> 00:17:03.440
great support for Java applets.

00:17:03.570 --> 00:17:07.770
You need the whole suite of libraries
that Java programmers expect to be there.

00:17:07.780 --> 00:17:11.710
And in Mac OS X,
you have the latest released version

00:17:11.720 --> 00:17:14.480
of Sun's Java Standard Edition.

00:17:14.480 --> 00:17:18.780
And you get that through software
update if you're using Jaguar

00:17:18.780 --> 00:17:20.160
or it's included in Panther.

00:17:20.160 --> 00:17:24.180
And the plug-in that we have for
Java that makes Java applets work,

00:17:24.280 --> 00:17:27.690
it's actually a plug-in that comes
with Java that connects with a WebKit,

00:17:28.020 --> 00:17:30.690
supports all the
Sun Java plug-in features,

00:17:30.700 --> 00:17:32.320
including a debugging console.

00:17:33.720 --> 00:17:37.600
And it's all--and--excuse me.

00:17:37.600 --> 00:17:42.850
And if plug-ins manipulate cookies,
that works-- that is integrated with

00:17:42.850 --> 00:17:45.560
the WebKit's own use of cookies.

00:17:46.570 --> 00:17:50.740
So let's move over to the, uh,
onto this demo machine here.

00:17:50.810 --> 00:17:54.230
And I'll show you a couple examples
just to illustrate what I'm talking

00:17:54.230 --> 00:17:56.450
about with the types of web pages.

00:17:56.580 --> 00:18:00.740
So let's start with,
uh-- let's start with

00:18:00.740 --> 00:18:01.830
a simple HTML example.

00:18:01.840 --> 00:18:05.350
Now, I actually-- believe it or not,
I was actually gonna show

00:18:05.350 --> 00:18:07.460
Google as this simple example.

00:18:07.510 --> 00:18:09.800
But when I tried to load
Google before the demo,

00:18:09.800 --> 00:18:11.650
it didn't load.

00:18:11.880 --> 00:18:13.270
So,
I don't know about the rest of you guys,

00:18:13.350 --> 00:18:14.720
but I kind of count on
that page being there.

00:18:14.720 --> 00:18:16.370
But anyway,
Yahoo is another good example.

00:18:16.380 --> 00:18:19.780
This is simple, old-fashioned HTML.

00:18:19.780 --> 00:18:21.620
Now, the page has lots of elements on it.

00:18:21.620 --> 00:18:22.460
It has pictures and stuff.

00:18:22.520 --> 00:18:24.070
It has bold-faced text.

00:18:24.080 --> 00:18:25.280
It has a nice layout.

00:18:25.280 --> 00:18:26.020
It uses some tables.

00:18:26.020 --> 00:18:27.860
But this is really basic HTML.

00:18:27.860 --> 00:18:31.430
And another page here to look
at that's a little more complex,

00:18:31.520 --> 00:18:36.120
but still is just really HTML,
is CNN.com.

00:18:36.120 --> 00:18:39.640
And they do all kinds of things
with these nested tables and stuff,

00:18:39.750 --> 00:18:40.720
but they're not using any.

00:18:41.400 --> 00:18:44.490
They're doing all of this
using techniques that have

00:18:44.490 --> 00:18:47.620
been around for a long time,
not really using some of

00:18:47.620 --> 00:18:49.380
these more recent standards.

00:18:51.550 --> 00:18:54.680
Let's take a look at one page
that I think really illustrates

00:18:55.200 --> 00:18:58.780
what CSS is really about.

00:18:58.840 --> 00:19:01.800
This site is called the CSS Zen Garden.

00:19:02.560 --> 00:19:06.050
And basically,
all the text that you can't read is

00:19:06.050 --> 00:19:07.640
describing the purpose of the site.

00:19:07.830 --> 00:19:11.860
And the people who came up with this
site realized that a lot of designers

00:19:12.250 --> 00:19:16.240
didn't get what you could do with
CSS in terms of changing the look of

00:19:16.310 --> 00:19:18.400
a site without changing the content.

00:19:18.540 --> 00:19:21.720
So I'll just page down a
little bit just so you can see.

00:19:22.100 --> 00:19:23.710
Oh, I should have used a Panther machine.

00:19:23.990 --> 00:19:24.660
This is a Jaguar machine.

00:19:24.660 --> 00:19:26.280
Well, anyway,
it scrolls nicer on Panther.

00:19:26.280 --> 00:19:33.070
So, basically,
what you're going to see now when I click

00:19:33.070 --> 00:19:34.960
on this link is the same web page.

00:19:34.960 --> 00:19:37.370
Okay, we're just going to
change the style sheet.

00:19:37.400 --> 00:19:41.400
So, let's go to this one here.

00:19:47.090 --> 00:19:49.040
So this is the same HTML.

00:19:49.080 --> 00:19:50.400
Nothing has changed about the HTML.

00:19:50.400 --> 00:19:52.200
The only thing that
changed is the style sheet,

00:19:52.200 --> 00:19:53.840
and you'll notice all kinds
of things have changed.

00:19:53.920 --> 00:19:58.300
Everything from the font,
these different capitals, the layout.

00:19:58.300 --> 00:20:03.420
These sections were all vertical
in the other style sheet.

00:20:03.420 --> 00:20:05.400
Now one is to the side,
one is above the other.

00:20:05.400 --> 00:20:08.340
And here's one I really like.

00:20:08.420 --> 00:20:10.970
Oh yeah,
the way things highlight when you move

00:20:10.980 --> 00:20:13.400
over them is controlled by the CSS.

00:20:13.400 --> 00:20:14.720
So here's one I really like.

00:20:15.140 --> 00:20:20.380
This actually changes the whole website
to have a horizontal orientation.

00:20:20.400 --> 00:20:21.920
It's the exact same HTML.

00:20:22.140 --> 00:20:24.400
Nothing has changed in the HTML.

00:20:24.400 --> 00:20:26.500
In fact,
all the HTML does is kind of say,

00:20:26.600 --> 00:20:30.390
you know, this section has this name,
this other section has that name.

00:20:30.400 --> 00:20:34.400
And completely separate from the HTML,
the HTML is the same.

00:20:34.560 --> 00:20:38.400
HTML, the style sheet determines
how the page looks,

00:20:38.400 --> 00:20:40.320
but not just in trivial ways,
in the major ways,

00:20:40.410 --> 00:20:41.400
how the layout is done.

00:20:41.400 --> 00:20:45.530
So just trying to illustrate
what CSS really means.

00:20:45.700 --> 00:20:50.270
Now here's an example of a kind of crazy
page done with a DOM that gives you some

00:20:50.270 --> 00:20:51.600
idea of what you can do with the DOM.

00:20:51.600 --> 00:20:52.600
Oh, wait a second.

00:20:52.600 --> 00:20:54.600
What version of Safari is this?

00:20:54.600 --> 00:20:58.600
You know, I think I shouldn't do this.

00:20:58.600 --> 00:21:00.590
This is beta 2.

00:21:04.240 --> 00:21:05.450
Oh, my god.

00:21:05.860 --> 00:21:07.430
OK, well, anyway.

00:21:07.520 --> 00:21:10.140
So I can't really show
you this page very well.

00:21:10.140 --> 00:21:11.360
OK, well, forget this one.

00:21:11.450 --> 00:21:20.980
So here's an example of
something someone did with a DOM.

00:21:20.980 --> 00:21:23.400
And this looks like an animation.

00:21:23.400 --> 00:21:25.140
It looks like it might
be a suite of images.

00:21:25.230 --> 00:21:27.510
But this is actually just text.

00:21:27.540 --> 00:21:29.720
There's layer upon layer of text here.

00:21:29.760 --> 00:21:31.470
And it's just being
moved around on the page.

00:21:31.480 --> 00:21:34.090
Using the DOM,
you can use the elements on the web page,

00:21:34.140 --> 00:21:36.880
the plain text itself, in your program.

00:21:36.880 --> 00:21:38.620
So you can write little demo programs.

00:21:38.680 --> 00:21:41.540
I thought this might
illustrate that using the DOM,

00:21:41.540 --> 00:21:43.720
you program a web page.

00:21:44.290 --> 00:21:47.640
Boy, I hope Beta 2 is really
good on my other demo pages.

00:21:47.730 --> 00:21:51.700
Well, let's go back to the slides,
and we'll come back to the... Yeah,

00:21:51.800 --> 00:21:52.750
no thanks.

00:21:52.800 --> 00:21:53.900
Not during the talk.

00:21:54.060 --> 00:21:59.800
So anyway, that's a basic overview of
standards inside Safari.

00:21:59.800 --> 00:22:03.750
So now let's talk about
website compatibility,

00:22:03.760 --> 00:22:07.960
designing to work with these standards,
and also designing WebKit to work

00:22:07.960 --> 00:22:10.340
with websites that are out there.

00:22:10.550 --> 00:22:14.770
So first of all,
what you see is a list of some of

00:22:14.980 --> 00:22:19.380
the most important things to do if
you want to create a website that

00:22:19.850 --> 00:22:22.040
actually is standards compliant,
that's actually going to work.

00:22:22.110 --> 00:22:24.600
And so one of the first things
to do is to actually learn

00:22:24.660 --> 00:22:26.480
something about the web standards.

00:22:26.540 --> 00:22:28.070
It's worth doing a
little bit of studying.

00:22:28.070 --> 00:22:30.570
You know,
a lot of people make web pages by

00:22:30.570 --> 00:22:34.750
taking an existing one and tinkering
with it and changing it a bit.

00:22:34.940 --> 00:22:37.340
But if you want to make a really
great website that's going to

00:22:37.340 --> 00:22:39.980
work with all the browsers,
it's worth reading up a little

00:22:40.210 --> 00:22:41.690
bit about these standards.

00:22:41.970 --> 00:22:45.090
And like I said, the most important ones
to learn about are really

00:22:45.250 --> 00:22:49.130
HTML itself and CSS and the DOM.

00:22:49.290 --> 00:22:52.750
And then another way to understand
how well you've done that is

00:22:52.870 --> 00:22:55.430
to actually test your site with
a lot of different browsers.

00:22:55.530 --> 00:23:00.590
You start to understand what--that
you're--when you are and aren't

00:23:00.590 --> 00:23:03.730
relying on browser-specific
behavior by actually trying the

00:23:03.740 --> 00:23:05.530
page with more than one browser.

00:23:05.680 --> 00:23:08.590
And we highly recommend
testing with Safari.

00:23:08.840 --> 00:23:11.150
And also,
there are some tools out there that

00:23:11.150 --> 00:23:12.790
will validate and check for mistakes.

00:23:12.940 --> 00:23:15.710
There's all sorts of mistakes
that you make that can be

00:23:15.710 --> 00:23:19.380
found by an automated tool,
and the W3C has some of those tools.

00:23:19.410 --> 00:23:23.990
In fact, I'll give URLs for one of
those at the end of the talk.

00:23:26.130 --> 00:23:29.000
To understand what we're even
talking about when we talk about

00:23:29.000 --> 00:23:32.360
a standards-based website or
a standards-compliant website,

00:23:32.360 --> 00:23:37.650
it's worth looking back a little
bit into the history of the web.

00:23:38.000 --> 00:23:42.000
It wasn't long ago when there
was really one important browser.

00:23:42.000 --> 00:23:44.790
I know it's hard to remember back then,
but the browser from Netscape

00:23:44.940 --> 00:23:48.990
was really the one that defined
what advanced websites did.

00:23:49.000 --> 00:23:54.050
And the quirks that this browser had,
the particular way it worked,

00:23:54.070 --> 00:23:58.000
were more important than any standard,
really.

00:23:58.000 --> 00:24:00.000
People programmed around those.

00:24:00.070 --> 00:24:03.810
I mentioned the way tables worked
as a great example of that.

00:24:04.000 --> 00:24:07.990
But then a new one
showed up on the scene,

00:24:08.070 --> 00:24:10.490
Microsoft Internet Explorer,
and it quickly became a very

00:24:10.500 --> 00:24:12.990
important second browser.

00:24:13.000 --> 00:24:16.790
And so lots of websites discovered
that they didn't look the same

00:24:16.800 --> 00:24:18.000
in this new browser as they
looked in the old browser.

00:24:18.000 --> 00:24:22.970
And they thought it was vitally
important to look the same.

00:24:23.040 --> 00:24:24.970
And so tables had different quirks.

00:24:25.000 --> 00:24:29.340
And so lots of sites started to check
which browser it was and give you totally

00:24:29.760 --> 00:24:32.000
different content for the two browsers.

00:24:32.000 --> 00:24:33.990
Sometimes they take you to
a whole different web page.

00:24:34.130 --> 00:24:39.640
And this led to this body of
knowledge on how to do that.

00:24:40.180 --> 00:24:43.050
And a lot of it was done by
checking the string that identifies

00:24:43.200 --> 00:24:44.970
which browser you're talking to.

00:24:45.020 --> 00:24:47.000
It's called the user agent string.

00:24:47.090 --> 00:24:49.970
And so you'd check to see if it was
the Microsoft browser using that.

00:24:50.510 --> 00:24:52.000
Now, uh...

00:24:53.600 --> 00:27:31.800
[Transcript missing]

00:27:33.020 --> 00:27:35.390
So another thing is,
you should be able to build

00:27:35.400 --> 00:27:38.580
your whole website without ever
parsing the user agent string.

00:27:38.710 --> 00:27:40.980
Because by definition,
if you're looking at the

00:27:40.980 --> 00:27:43.560
user agent string to figure
out what kind of content,

00:27:43.560 --> 00:27:46.200
then you're not going to
work with a new web browser.

00:27:46.270 --> 00:27:48.640
How can you predict what the user
agent string of some future web

00:27:48.670 --> 00:27:49.900
browser is going to have in it?

00:27:50.010 --> 00:27:55.450
There was a time when this was
the only way to check things,

00:27:55.450 --> 00:27:57.120
but that time is long past.

00:27:57.250 --> 00:27:59.420
And right now,
the main thing to do with user

00:27:59.420 --> 00:28:03.270
agent string is to tell people
the name of the web browser.

00:28:03.280 --> 00:28:06.220
You know, that's about the only
thing I can think of to do,

00:28:06.220 --> 00:28:09.210
or log what web browser someone used,
not to figure out what

00:28:09.240 --> 00:28:10.720
kind of content to give.

00:28:11.430 --> 00:28:14.730
And then another thing to avoid,
and this may sound obvious,

00:28:14.740 --> 00:28:17.960
but you have to read the standards
enough to know what things

00:28:18.180 --> 00:28:19.660
are non-standard extensions.

00:28:19.660 --> 00:28:22.700
So don't just use them because
they happen to be there on the

00:28:22.770 --> 00:28:24.620
one browser you test with first.

00:28:24.620 --> 00:28:27.520
And in a lot of cases,
there are standard alternatives.

00:28:29.760 --> 00:28:32.390
Those are a few of the things not to do.

00:28:32.390 --> 00:28:35.190
Just a couple high-level tips on that.

00:28:35.930 --> 00:28:38.670
And let's talk about some of
the things that you should do.

00:28:38.900 --> 00:28:42.700
So first of all,
when I say don't check at all,

00:28:42.700 --> 00:28:46.200
don't check the user agent string,
don't check document.all, you know,

00:28:46.200 --> 00:28:48.670
if you are going to use a feature
that is not in every browser,

00:28:48.710 --> 00:28:50.960
but you want to be
compatible with others,

00:28:50.960 --> 00:28:53.660
then you will need to do some
testing for capabilities,

00:28:53.660 --> 00:28:55.570
probably in your JavaScript code.

00:28:55.600 --> 00:28:59.590
So there are ways to do this
that work really nicely,

00:28:59.590 --> 00:29:04.360
and the best way I can summarize
is use object detection.

00:29:04.500 --> 00:29:07.460
So what this means is in JavaScript,
you can go at any object,

00:29:07.580 --> 00:29:09.100
and that includes methods.

00:29:09.100 --> 00:29:11.420
Methods themselves are
objects in JavaScript.

00:29:11.540 --> 00:29:14.120
You can get the object,
and if the object isn't there,

00:29:14.120 --> 00:29:15.500
you'll get undefined.

00:29:15.500 --> 00:29:20.080
And so you can very easily
check before calling something,

00:29:20.180 --> 00:29:22.370
just see if the object is there.

00:29:22.500 --> 00:29:25.500
And that's a much better check than
to check which browser is there.

00:29:25.500 --> 00:29:27.250
and then based on that,
guess which feature is

00:29:27.250 --> 00:29:29.280
going to be present.

00:29:30.640 --> 00:29:33.590
Another thing,
another particular specific tip

00:29:33.770 --> 00:29:37.710
that people who've done lots of
websites tell me is important is

00:29:37.980 --> 00:29:44.420
to use the getElementByID method
to find objects on the web page.

00:29:44.420 --> 00:29:47.280
There are lots of ways that work in
one browser that don't work in another.

00:29:47.280 --> 00:29:48.850
This is an area where
there's lots of extensions.

00:29:48.880 --> 00:29:51.620
And this method works in all
the most important browsers,

00:29:51.630 --> 00:29:53.200
and it's part of the standard.

00:29:53.200 --> 00:29:56.450
So this is a specific example where
there's a standard way to do something,

00:29:56.450 --> 00:29:59.500
so don't use an extension,
because you can do it the standard way.

00:30:01.840 --> 00:30:05.190
Now, I wanted to mention,
this is kind of a little

00:30:05.190 --> 00:30:08.730
bit of a side trip,
but it's worth mentioning.

00:30:08.730 --> 00:30:13.300
Lots of people have asked us about
improving JavaScript debugging in Safari,

00:30:13.300 --> 00:30:16.530
and a big part of making web
pages work well with WebKit is

00:30:16.650 --> 00:30:19.900
actually debugging your pages,
trying them out in Safari,

00:30:19.900 --> 00:30:21.160
seeing what's going on.

00:30:21.350 --> 00:30:24.190
And so a lot of people had these pages
that weren't working quite right,

00:30:24.200 --> 00:30:27.200
and they've asked us for
a little bit more help.

00:30:27.280 --> 00:30:31.980
And we've provided something new in 1.0,
if you've used Beta 2.

00:30:32.290 --> 00:30:33.700
It's not in Beta 2.

00:30:33.700 --> 00:30:38.670
And it's the ability to log
JavaScript exceptions to the console.

00:30:38.780 --> 00:30:41.670
And it sounds like a small thing,
but it really makes a big difference

00:30:41.670 --> 00:30:43.200
when debugging a web page.

00:30:43.200 --> 00:30:46.550
And all you need to do is
turn on the Safari debug menu.

00:30:46.680 --> 00:30:49.300
And, you know,
I hardly need to write this tip up there,

00:30:49.300 --> 00:30:51.560
because I believe everyone
in the big room said they

00:30:51.560 --> 00:30:52.700
already knew how to do this.

00:30:52.770 --> 00:30:55.700
But you just type this in
the command line to turn on.

00:30:55.700 --> 00:30:56.700
And then the next time
you start up Safari,

00:30:56.700 --> 00:30:58.700
you'll see the debug menu.

00:30:58.700 --> 00:31:01.200
And then there's a menu item,
log JavaScript exceptions.

00:31:01.200 --> 00:31:03.700
You turn that on,
and then in the console,

00:31:03.700 --> 00:31:07.190
you will see information
about JavaScript exceptions.

00:31:07.200 --> 00:31:09.700
And it's a little thing,
but it can really help you out

00:31:09.700 --> 00:31:13.200
when you're trying to figure out
why your JavaScript isn't running.

00:31:13.380 --> 00:31:15.140
Now, I actually,
when I'm doing JavaScript stuff,

00:31:15.200 --> 00:31:18.700
I tend to also put, like,
lots of alerts in,

00:31:18.700 --> 00:31:21.160
because it's easier than, like,
looking at a console window.

00:31:21.220 --> 00:31:25.790
But this is--you don't even have
to change the web page to do this.

00:31:27.440 --> 00:31:31.020
All right, so I've talked a little bit
about what you can do on your

00:31:31.020 --> 00:31:34.680
websites to be compatible,
but I also want to talk about

00:31:35.260 --> 00:31:40.000
what WebKit does to work with
the realities of the web.

00:31:42.760 --> 00:31:45.400
So in the real world,
we've got web pages that don't

00:31:45.460 --> 00:31:47.200
do any of the things we said,
do everything wrong

00:31:47.200 --> 00:31:49.540
that I just mentioned,
and 100 other things wrong.

00:31:49.590 --> 00:31:52.790
And we still want them
to work with a WebKit.

00:31:52.860 --> 00:31:56.140
And the reason is that we're putting
WebKit into our new applications,

00:31:56.140 --> 00:31:59.150
and you don't want to make
excuses why they can't work

00:31:59.150 --> 00:32:01.560
with these existing websites.

00:32:01.760 --> 00:32:04.600
So, what can you do about this?

00:32:04.610 --> 00:32:09.590
Well, there's a couple things you
do that we did in WebKit that

00:32:09.590 --> 00:32:11.270
I want to go into detail on,
just because they're

00:32:11.380 --> 00:32:12.170
kind of geeky and fun.

00:32:12.180 --> 00:32:17.040
And these have a lot to do,
these have more than you'd,

00:32:17.070 --> 00:32:22.990
it's surprising the amount this has to do
with making web pages work with the site.

00:32:23.140 --> 00:32:27.440
So, the WebKit's user agent string has to
look just right to all the websites

00:32:27.760 --> 00:32:29.980
that are going to do various checks.

00:32:30.080 --> 00:32:32.870
So, I already said it's vital that it
not have the word compatible in it,

00:32:33.270 --> 00:32:37.080
because everyone knows that means
Microsoft Internet Explorer.

00:32:37.080 --> 00:32:40.020
So,
every user agent string has been designed

00:32:40.740 --> 00:32:44.080
for compatibility in a major web browser.

00:32:44.200 --> 00:32:48.370
The very second web browser already
realized they couldn't change things from

00:32:48.370 --> 00:32:53.070
the first web browser too much because
people were checking user agent string.

00:32:53.190 --> 00:32:56.420
So, one of the goals for the WebKit's
one was to look like other

00:32:56.430 --> 00:32:58.460
standards compliant browsers.

00:32:58.540 --> 00:33:02.160
So, code where someone tried to
look for a standards compliant

00:33:02.160 --> 00:33:05.140
browser in a kind of bad way,
it was important that it

00:33:05.140 --> 00:33:06.460
got the idea it was on one.

00:33:06.460 --> 00:33:10.100
So, that it gave Safari the kind
of content that works well for

00:33:10.100 --> 00:33:12.220
a standards compliant browser.

00:33:13.300 --> 00:33:16.140
And also,
it's important to remember that the

00:33:16.140 --> 00:33:18.890
user agent string has a real purpose,
too, which is to identify

00:33:18.890 --> 00:33:20.060
which web browser it is.

00:33:20.060 --> 00:33:21.680
So we couldn't fill it with lies.

00:33:21.700 --> 00:33:25.160
It couldn't say, you know,
I am Mac IE version 5.2

00:33:25.160 --> 00:33:27.270
or something like that,
even if that gave us good web pages,

00:33:27.280 --> 00:33:29.710
because you have to tell the truth.

00:33:29.800 --> 00:33:31.950
You have to say that's the WebKit,
and you have to say which

00:33:31.950 --> 00:33:32.890
the application it is.

00:33:32.900 --> 00:33:36.150
And some people may have a
reason to check a version,

00:33:36.150 --> 00:33:37.710
and so we've got to include
those version numbers.

00:33:40.380 --> 00:33:45.680
And all the same things I said apply
to some important methods in the DOM.

00:33:45.680 --> 00:33:50.890
There's a navigator object in
the DOM which has all sorts of

00:33:51.010 --> 00:33:54.700
user agent-like strings that tell
you who wrote the web browser,

00:33:54.740 --> 00:33:57.640
you know, all that sort of thing,
and it has the same kind of

00:33:57.680 --> 00:33:59.300
goals as the user agent string.

00:33:59.310 --> 00:34:00.980
So let's look at a user agent string.

00:34:00.980 --> 00:34:05.120
So this is pretty much what the
user agent string looks like

00:34:05.120 --> 00:34:08.440
from an application using Safari.

00:34:08.440 --> 00:34:10.360
So let me just go through it.

00:34:10.360 --> 00:34:11.370
I'm going to go through it a little,
because I don't know.

00:34:11.380 --> 00:34:12.100
I just think it's fun.

00:34:12.190 --> 00:34:14.500
So in the beginning it says Mozilla 5.0.

00:34:14.500 --> 00:34:15.590
You have to say that.

00:34:15.770 --> 00:34:18.510
In fact,
I would predict that five years from now,

00:34:18.510 --> 00:34:21.740
user agent strings of all
the major browsers will still

00:34:21.870 --> 00:34:24.040
start with Mozilla slash 5.0.

00:34:24.100 --> 00:34:29.340
And really it's just because the first
version of Netscape said Mozilla,

00:34:29.340 --> 00:34:33.950
and there are Mozilla checks in ancient
code that I won't do anything interesting

00:34:33.950 --> 00:34:36.080
unless this browser is Mozilla.

00:34:37.720 --> 00:34:40.790
And then inside the parentheses
are where all sorts of platform

00:34:40.790 --> 00:34:42.020
identification stuff goes.

00:34:42.020 --> 00:34:44.850
You'll notice that the primary
language of the user goes in there.

00:34:44.860 --> 00:34:48.220
You set that in the system
preferences on Macintosh.

00:34:48.240 --> 00:34:52.830
And I did this for my own machine,
so it says U.S.

00:34:53.030 --> 00:34:54.290
English in there.

00:34:54.530 --> 00:34:58.660
And some various platform identifiers.

00:34:58.660 --> 00:35:01.360
You know, it's embarrassing to admit,
but I forgot what the U means.

00:35:01.360 --> 00:35:03.250
There are experts in the
crowd who could tell me,

00:35:03.260 --> 00:35:03.780
I'm sure.

00:35:04.980 --> 00:35:08.420
But there's some,
the salient features start on the part

00:35:08.510 --> 00:35:09.710
that's wrapped on the second line.

00:35:09.740 --> 00:35:12.550
The string says the word Apple WebKit.

00:35:12.560 --> 00:35:16.380
Now, if you find that none of these
other techniques work for you,

00:35:16.380 --> 00:35:20.180
and you really want to do something
specific in the case of the WebKit,

00:35:20.180 --> 00:35:23.160
please look for that string.

00:35:23.210 --> 00:35:26.800
Don't look for the name Safari,
which just happens to be the

00:35:26.800 --> 00:35:28.340
first WebKit application's name.

00:35:28.450 --> 00:35:30.280
But look for Apple WebKit.

00:35:30.280 --> 00:35:32.450
And in fact,
even look for the slash after it,

00:35:32.560 --> 00:35:35.390
because, you know, to be sure,
you're not seeing the

00:35:35.450 --> 00:35:36.180
string somewhere else.

00:35:36.180 --> 00:35:39.770
So the version of the
WebKit appears right there.

00:35:39.780 --> 00:35:42.140
And if you had some need
to check the version,

00:35:42.140 --> 00:35:43.380
you could read it out of there.

00:35:43.500 --> 00:35:46.570
But, you know, please don't,
because it's hard to parse these strings.

00:35:46.580 --> 00:35:49.420
JavaScript doesn't really have, like,
regular expressions to help you.

00:35:49.530 --> 00:35:51.760
Well, it does have regular expressions,
but it doesn't really have an easy

00:35:51.760 --> 00:35:53.680
way to parse these apart correctly.

00:35:53.680 --> 00:35:57.170
But the version is in there.

00:35:57.420 --> 00:35:59.090
That's, like I said, telling the truth.

00:35:59.270 --> 00:36:03.670
So then the next parentheses part is
just a perfect example of what you've

00:36:03.740 --> 00:36:05.030
got to do to make the pages work.

00:36:05.100 --> 00:36:07.150
The word gecko is in there.

00:36:07.320 --> 00:36:08.580
You see it says, like gecko?

00:36:08.580 --> 00:36:11.040
And gecko is the engine inside Mozilla.

00:36:11.040 --> 00:36:14.640
And you might ask yourself,
why the hell are they mentioning gecko

00:36:14.640 --> 00:36:16.380
in the user agent string for WebKit?

00:36:16.410 --> 00:36:20.940
And the answer is that for
a huge amount of the web,

00:36:21.000 --> 00:36:24.100
there's code that says,
if the string gecko is there,

00:36:24.100 --> 00:36:26.700
use the new standards-compliant
way of doing things.

00:36:26.700 --> 00:36:31.020
And if the string gecko isn't there,
do things in a way that only works

00:36:31.150 --> 00:36:32.330
with Microsoft Internet Explorer.

00:36:32.340 --> 00:36:36.480
And so,
this is vital to making web pages work,

00:36:36.570 --> 00:36:37.740
that the word gecko be there somewhere.

00:36:37.740 --> 00:36:40.140
But we didn't want to lie,
so we say we're like gecko.

00:36:44.220 --> 00:36:47.960
So just before, like GECKO,
you see the words "KHTML" there.

00:36:48.260 --> 00:36:52.100
And this is so that if there
are quirks of our engine,

00:36:52.100 --> 00:36:58.960
which shares its innermost code
with the KHTML library-- it is the

00:36:59.010 --> 00:37:02.440
KHTML library-- we wanted to make
sure there was one thing in our user

00:37:02.440 --> 00:37:06.140
agent string that was also in the user
agent string from the KDE project with

00:37:06.270 --> 00:37:08.760
their browser using the KHTML library.

00:37:08.910 --> 00:37:10.940
So that's why the word
"KHTML" is in there.

00:37:11.220 --> 00:37:13.260
And then finally,
your application name will go in there.

00:37:13.410 --> 00:37:15.320
And you get to set that
when you use the WebKit.

00:37:15.330 --> 00:37:17.890
If you do the codeless browser,
there won't be anything there.

00:37:18.020 --> 00:37:23.570
But if you go and start to use delegates
to customize the behavior of the WebView,

00:37:23.690 --> 00:37:28.250
you'll be able to put your own
application name and version in there.

00:37:28.410 --> 00:37:31.100
So I'm not going to go through
this in quite as much detail,

00:37:31.240 --> 00:37:34.700
but here are the navigator
properties I talked about.

00:37:34.720 --> 00:37:37.800
And similarly,
these are driven in the same way by these

00:37:37.910 --> 00:37:42.660
compatibility issues-- what existing
web pages check and what they expect.

00:37:42.660 --> 00:37:46.800
The only one here I'll mention
specifically is I like product sub.

00:37:46.800 --> 00:37:48.770
That's one of my favorites.

00:37:48.790 --> 00:37:53.140
Because you'll notice it's this
mysterious eight-digit number.

00:37:53.140 --> 00:37:55.340
And it's actually the ages
of all the Safari engineers

00:37:55.340 --> 00:37:59.080
multiplied together-- OK,
not really.

00:37:59.190 --> 00:38:04.680
What it is is that's the date
of the-- on the Gecko project,

00:38:04.680 --> 00:38:07.250
they use that for the
date of the Gecko build.

00:38:07.410 --> 00:38:10.680
So there's a lot of
websites out there that say,

00:38:10.680 --> 00:38:13.090
OK, if I got Gecko,
then I'll do-- I'll do it

00:38:13.090 --> 00:38:14.660
the standards-compliant way.

00:38:14.660 --> 00:38:17.920
And if I've got a new enough Gecko
greater than a certain build date,

00:38:18.250 --> 00:38:21.620
then I'll use this suite of features
that they didn't get into that date.

00:38:21.620 --> 00:38:23.260
And it's not like people
are doing this a lot now,

00:38:23.260 --> 00:38:25.730
but they did it like a year or two back.

00:38:25.830 --> 00:38:27.620
And so it has to be
greater than some date.

00:38:27.670 --> 00:38:30.560
So this had to be a year, month,
and date that was newer

00:38:30.600 --> 00:38:31.920
than some old Gecko build.

00:38:32.000 --> 00:38:35.440
So we picked completely
at random January 7,

00:38:35.680 --> 00:38:37.950
2003 is our date.

00:38:38.050 --> 00:38:40.120
So I can't remember.

00:38:40.120 --> 00:38:44.050
There was something happened that
day that made us-- I don't know.

00:38:44.130 --> 00:38:46.420
So anyway,
let me show you a couple more examples.

00:38:46.460 --> 00:38:47.950
Let's go back to the demo machine.

00:38:48.100 --> 00:38:53.690
And we can see how Safari Beta 2
used to render these pages.

00:38:54.090 --> 00:38:58.000
So, I'm so proud of how 1.0 renders,
they were pretty good in beta 2.

00:38:58.000 --> 00:39:00.610
So this is wired.com.

00:39:00.620 --> 00:39:04.350
And this is an example of a
real-world web page that was

00:39:04.450 --> 00:39:07.000
done entirely with standards.

00:39:07.250 --> 00:39:09.820
There is none of this
old-fashioned way of doing stuff,

00:39:09.820 --> 00:39:12.820
very little, you know,
checking user agent kind of glop.

00:39:13.000 --> 00:39:19.000
And it's a beautiful page,
does lots of stuff,

00:39:19.000 --> 00:39:22.000
very attractive layout,
all kinds of neat features

00:39:22.000 --> 00:39:28.000
like changing the size of the
text from a link in the page.

00:39:28.000 --> 00:39:31.580
And the reason I'm showing this,
the reason I'm showing these pages

00:39:31.580 --> 00:39:34.740
is just to give you an idea that
you can make a really great web

00:39:34.740 --> 00:39:36.000
page just sticking to the standards.

00:39:36.000 --> 00:39:39.930
You don't have to use special
extensions to make a great web page.

00:39:40.030 --> 00:39:42.000
So let me show you one other page.

00:39:42.000 --> 00:39:45.710
page that was done with
that kind of philosophy.

00:39:47.900 --> 00:39:51.800
This is ESPN.com,
and although it is designed

00:39:51.800 --> 00:39:54.560
for a certain window width,
so it looks better.

00:39:54.560 --> 00:39:55.820
I should have left the window that wide.

00:39:55.820 --> 00:40:01.210
This site has a lot of really cool stuff.

00:40:01.270 --> 00:40:04.720
I like this section here where you can
change around between different pages,

00:40:04.720 --> 00:40:06.350
and all this is done
just with the standards.

00:40:06.480 --> 00:40:11.550
There's no sneaky, weird stuff here.

00:40:11.840 --> 00:40:14.860
A lot of designers think you can
do things that look really good

00:40:14.860 --> 00:40:19.160
only by designing to one browser,
and it's just not true.

00:40:19.160 --> 00:40:21.110
So let's go back to the slides here.

00:40:21.240 --> 00:40:24.850
In fact,
here's something that the designer

00:40:24.850 --> 00:40:27.890
of that website said about Safari.

00:40:27.930 --> 00:40:30.870
A lot of people were asking him,

00:40:31.270 --> 00:40:33.360
What did you do to make
it work well with Safari?

00:40:33.420 --> 00:40:35.200
Other web designers.

00:40:35.200 --> 00:40:36.980
You know,
obviously you spent a lot of time

00:40:37.200 --> 00:40:39.200
working to make it work well.

00:40:39.200 --> 00:40:44.570
And he said, "We did nothing to make
it work with Safari."

00:40:44.920 --> 00:40:47.690
In fact, we didn't even-- we just
tested it on Safari.

00:40:47.700 --> 00:40:50.470
Most of it worked,
then we tested it with the next beta,

00:40:50.480 --> 00:40:51.420
and it all worked.

00:40:51.630 --> 00:40:54.930
And, you know,
this is what he said about,

00:40:55.020 --> 00:40:58.140
"If you're doing a
standards-based web page,

00:40:58.230 --> 00:41:01.770
you don't have to know anything
specific about Safari because

00:41:01.910 --> 00:41:06.140
Safari just works." So I was
really happy to see he said that,

00:41:06.140 --> 00:41:08.320
so that's why I put it up there.

00:41:14.690 --> 00:41:19.290
So that's most of what I have to say
about standards and compatibility.

00:41:19.340 --> 00:41:23.690
Let's talk a little bit about a
big part of how we achieved this,

00:41:23.850 --> 00:41:26.920
and that is how we use,
inside the WebKit,

00:41:26.920 --> 00:41:30.020
open source and what that means to you.

00:41:30.700 --> 00:41:33.300
So let's look again at
this picture of the WebKit.

00:41:33.360 --> 00:41:36.310
Inside the WebKit are two
open source frameworks,

00:41:36.380 --> 00:41:39.940
the WebCore framework and the
JavaScript Core framework.

00:41:40.060 --> 00:41:42.660
So let's dig in into each of these.

00:41:43.110 --> 00:41:49.860
The WebCore framework does most of the
HTML and HTML-related standards like

00:41:49.900 --> 00:41:54.000
CSS and DOM heavy lifting for the WebKit.

00:41:54.010 --> 00:41:58.000
It includes two big libraries, well,
not big in terms of lines of code,

00:41:58.000 --> 00:42:02.000
but the two major subsections of WebCore.

00:42:02.210 --> 00:42:06.910
One is the KHTML library,
which comes from the KDE project.

00:42:07.020 --> 00:42:13.130
That same library is used inside
KDE's web browser and file manager,

00:42:13.130 --> 00:42:13.950
Conqueror.

00:42:14.110 --> 00:42:19.620
And what we've done to the KHTML library
is keep it basically the same

00:42:19.630 --> 00:42:21.980
structure and the same concept.

00:42:22.060 --> 00:42:26.000
In fact, our code can be used as
is back in the KDE land.

00:42:26.000 --> 00:42:28.000
You can just move the
code right back there.

00:42:28.210 --> 00:42:32.790
But we needed to connect it to Mac OS X.

00:42:33.390 --> 00:42:42.920
KDE uses an underlying library called QT,
which is a library that does all the

00:42:42.920 --> 00:42:45.430
sorts of toolbox things in its own way.

00:42:45.460 --> 00:42:47.890
It doesn't do them the exact
same way that OS X does.

00:42:47.920 --> 00:42:51.490
We wanted something that was really
using all of the OS X native technologies

00:42:51.490 --> 00:42:54.870
for everything from text drawing,
drawing the buttons, event handling,

00:42:54.870 --> 00:42:57.340
you know, top to bottom,
all sorts of things.

00:42:57.340 --> 00:43:01.040
And so that's why we
built the Quack library.

00:43:01.040 --> 00:43:03.370
It's spelled K-W-Q, pronounced quack.

00:43:03.440 --> 00:43:08.960
And the Quack library connects
KHTML to the OS X underpinnings.

00:43:08.960 --> 00:43:12.730
And the way I think of Quack
is if it quacks like a duck,

00:43:12.850 --> 00:43:16.870
then it is a duck,
is kind of the concept of the library.

00:43:19.080 --> 00:43:23.760
So, WebCore with KHTML and Quack,
there's one important piece that

00:43:23.790 --> 00:43:27.850
comes from outside of WebCore,
which is the JavaScript language,

00:43:27.950 --> 00:43:28.900
the JavaScript interpreter.

00:43:28.900 --> 00:43:32.400
And that's inside the
JavaScript Core framework.

00:43:32.580 --> 00:43:37.300
Now, JavaScript Core didn't really need
a big adapter layer like Quack,

00:43:37.560 --> 00:43:41.350
but we did need to do a couple
things to take the KJS library,

00:43:41.430 --> 00:43:44.430
again from the KDE project,

00:43:44.630 --> 00:43:48.290
and combine it with some code that
we wrote ourselves to connect it

00:43:48.290 --> 00:43:54.240
well with certain OS X technologies,
excuse me, and some other libraries that

00:43:54.240 --> 00:43:57.430
work really well with it.

00:43:57.590 --> 00:43:59.700
For example,
we really were able to improve

00:43:59.700 --> 00:44:03.160
its regular expression support
by using the Perl-compatible

00:44:03.160 --> 00:44:04.500
regular expression library.

00:44:04.550 --> 00:44:08.500
It does a great job and
handles Unicode perfectly.

00:44:08.600 --> 00:44:10.250
And there's some other
support libraries in there,

00:44:10.280 --> 00:44:12.500
too, even smaller than those.

00:44:12.500 --> 00:44:15.790
They're all part of JavaScript core.

00:44:16.640 --> 00:44:20.160
So, WebCore is the only part of the
system using JavaScript Core.

00:44:20.160 --> 00:44:26.030
Actually, WebKit uses
JavaScript Core through WebCore.

00:44:27.750 --> 00:44:31.720
So why do we choose KHTML and KJS?

00:44:31.840 --> 00:44:34.680
So again, I hope you heard about
this the last couple days,

00:44:34.710 --> 00:44:36.740
but I'd like to repeat this again.

00:44:36.850 --> 00:44:38.680
We looked at a lot of
different alternatives,

00:44:38.680 --> 00:44:41.500
but in the end,
the big reasons were that this was

00:44:41.500 --> 00:44:46.960
a code base that was easy to modify,
was fast, and it was easy to make it

00:44:46.960 --> 00:44:52.140
faster-- and we've shown that time
and time again-- and was small.

00:44:52.170 --> 00:44:54.880
And small in terms of lines of code,
number of different concepts,

00:44:54.970 --> 00:44:58.410
small in every dimension
you could think of.

00:44:58.550 --> 00:45:02.370
I didn't even mention how well it worked.

00:45:02.500 --> 00:45:05.030
I'm really missing a
bullet point on that slide,

00:45:05.120 --> 00:45:08.270
because it already did so many of
those standards we talked about.

00:45:08.500 --> 00:45:10.630
We really worked on it to round it out.

00:45:10.810 --> 00:45:13.940
So we collaborate with the
folks at KDE who are still

00:45:13.940 --> 00:45:15.780
working on KHTML and KJS.

00:45:15.800 --> 00:45:21.280
And the way it works is we keep
enhancing KHTML and KJS in the context

00:45:21.320 --> 00:45:22.780
of JavaScript Core and Web Core.

00:45:22.780 --> 00:45:27.090
They keep enhancing it,
and we exchange changes.

00:45:27.370 --> 00:45:28.860
They send changes they've made.

00:45:28.860 --> 00:45:31.130
We send them changes we've made.

00:45:32.960 --> 00:45:36.980
So I wanted to,
since we're going a little bit

00:45:36.980 --> 00:45:39.270
in-depth about this relationship,
I just wanted to talk about

00:45:39.270 --> 00:45:42.260
a few of the contributions
we've made to KHTML and KJS.

00:45:42.260 --> 00:45:46.630
So, you know, it's not complete detail,
but I thought it would

00:45:46.630 --> 00:45:47.660
be neat to call them out.

00:45:47.700 --> 00:45:49.380
So what you see here is a list of them.

00:45:49.400 --> 00:45:55.240
So in terms of site compatibility,
we've made hundreds and hundreds

00:45:55.320 --> 00:45:59.080
of changes to correct a small
bug or an omission or a way of

00:45:59.080 --> 00:46:02.320
handling things so that it's more
compatible with the standards and

00:46:02.320 --> 00:46:04.070
more compatible with the websites.

00:46:04.150 --> 00:46:07.560
And the way this is really driven for us
is that we find websites that don't work,

00:46:07.650 --> 00:46:10.070
we track them down,
we figure out what it is,

00:46:10.300 --> 00:46:13.340
and then we make the change in
a way that works both for us and

00:46:13.390 --> 00:46:15.400
for the original KHTML and KDE.

00:46:17.280 --> 00:46:20.190
We've also made performance enhancements,
and we're particularly proud of these.

00:46:20.210 --> 00:46:22.670
We sped up KJS.

00:46:22.750 --> 00:46:27.500
We did these JavaScript benchmarks,
and we sped it up at least 10

00:46:27.500 --> 00:46:30.080
times and even more on certain
subparts of the benchmark.

00:46:30.080 --> 00:46:33.130
That was fun, just some little changes
in data structures,

00:46:33.140 --> 00:46:35.820
keeping the basic concept the same.

00:46:36.100 --> 00:46:40.950
We changed, we had some experience,
a couple members of our team

00:46:40.950 --> 00:46:44.470
came from the Mozilla project,
so they had some understanding of the

00:46:44.470 --> 00:46:47.960
way that Mozilla handled certain things,
like white space.

00:46:47.960 --> 00:46:51.650
And we realized that Mozilla's handling
of white space really was needed to

00:46:51.770 --> 00:46:53.660
correctly handle the DOM standard.

00:46:53.660 --> 00:46:57.220
And so we changed the white space
handling and the line breaking

00:46:57.220 --> 00:46:59.170
to be in line with the standard.

00:46:59.180 --> 00:47:03.820
And then, I'm not gonna, well,
there are only three more listed here,

00:47:03.820 --> 00:47:05.970
and there's probably like
30 more I could list.

00:47:06.060 --> 00:47:07.340
But I just wanted to
give you some idea of,

00:47:07.570 --> 00:47:11.150
there's a wide variety of changes
we're making inside HTML and KJS.

00:47:11.220 --> 00:47:13.170
So we're not only,
we're not just taking it and

00:47:13.170 --> 00:47:16.890
putting it on our platform,
we're giving a lot back, too.

00:47:19.710 --> 00:47:21.340
So I want to be clear on this point.

00:47:21.430 --> 00:47:22.880
We've talked about it
over and over again,

00:47:22.880 --> 00:47:26.720
but I'd like to-- I think we
can't emphasize it enough time.

00:47:26.760 --> 00:47:28.480
These are open source libraries.

00:47:28.630 --> 00:47:30.740
So we can't tell you
what to do with them.

00:47:30.780 --> 00:47:32.860
The license tells you
what you can do with them.

00:47:32.880 --> 00:47:33.520
You can download them.

00:47:33.520 --> 00:47:34.680
You can do whatever you want.

00:47:34.680 --> 00:47:40.710
You can port them to some other platform,
whatever it is that turns you on.

00:47:41.200 --> 00:47:42.340
What should you do with them?

00:47:42.340 --> 00:47:44.960
Use them via the WebKit.

00:47:45.180 --> 00:47:45.930
Use the WebKit.

00:47:45.930 --> 00:47:48.700
Take advantage of them
through the great WebKit API.

00:47:48.700 --> 00:47:52.160
If you link to them directly,
you and we both are in

00:47:52.160 --> 00:47:55.500
for a world of hurt,
because we change their

00:47:55.500 --> 00:47:56.890
interfaces all the time.

00:47:56.910 --> 00:48:00.120
They're not the kind of polished
public APIs that we put in

00:48:00.120 --> 00:48:01.900
and commit to in the system.

00:48:01.900 --> 00:48:05.300
WebKit's APIs are in that category.

00:48:06.330 --> 00:48:08.600
And also,
if you just use WebCore directly,

00:48:08.600 --> 00:48:11.000
you're not going to--a lot of
the benefits come from the way

00:48:11.000 --> 00:48:14.670
WebKit is connected to the WebCore,
to really connect it

00:48:15.000 --> 00:48:16.080
up perfectly to OS X.

00:48:16.440 --> 00:48:20.390
Some of the performance tuning is
only there if you use it all together.

00:48:21.320 --> 00:48:25.730
All right,
so we've talked about the standards

00:48:25.800 --> 00:48:28.280
and how we achieve compatibility.

00:48:28.330 --> 00:48:30.990
Let's talk a little bit about the future.

00:48:31.720 --> 00:48:36.020
First of all, we do use our own stuff.

00:48:36.320 --> 00:48:38.130
Okay, this stuff is brand new.

00:48:38.230 --> 00:48:40.100
The WebKit SDK is brand new.

00:48:40.150 --> 00:48:42.970
But even though it just got
to the point where we really

00:48:43.070 --> 00:48:45.700
could have people using it,
we already have a lot of

00:48:45.700 --> 00:48:50.670
applications using the WebKit and
the Foundation URL APIs.

00:48:50.920 --> 00:48:52.810
And so I'm not going to list them again.

00:48:52.970 --> 00:48:56.350
You've probably even
seen this list before.

00:48:56.490 --> 00:48:58.730
But we use it ourselves.

00:48:59.660 --> 00:49:01.930
We're completely serious
about the WebKit.

00:49:01.970 --> 00:49:02.860
Okay?

00:49:02.860 --> 00:49:06.960
We're not -- This is not something
that we're just doing this year,

00:49:06.960 --> 00:49:08.910
and then next year we're
going to do something else.

00:49:09.080 --> 00:49:13.050
There's going to be more from Safari,
more features from Safari,

00:49:13.050 --> 00:49:16.720
improved standard support of
each of the standards we support,

00:49:16.860 --> 00:49:21.460
improved compatibility with websites,
all kinds of things from future Safaris.

00:49:21.520 --> 00:49:22.840
There's going to be more in the WebKit.

00:49:22.890 --> 00:49:25.940
A lot of those things I said
that we -- that will affect

00:49:26.060 --> 00:49:27.840
every WebKit application.

00:49:27.840 --> 00:49:33.190
And as I talked about before,
an area we plan to improve is plug-ins.

00:49:33.660 --> 00:49:37.550
There's also,
we also plan to enhance the networking

00:49:37.550 --> 00:49:40.200
APIs in all the ways I talked about,
improving standard support,

00:49:40.210 --> 00:49:41.680
adding features.

00:49:41.700 --> 00:49:44.290
We're in this for the long haul.

00:49:44.300 --> 00:49:47.980
And we're also a member of the
most important standards body,

00:49:48.020 --> 00:49:51.450
the W3C,
and we're participating in committees

00:49:51.470 --> 00:49:53.760
that define future standards.

00:49:53.820 --> 00:49:56.820
So standards for us doesn't just
mean implementing what websites

00:49:56.820 --> 00:49:59.100
are already using or what other
people have already decided,

00:49:59.100 --> 00:50:02.310
but it means getting in their
hammer and tongs and helping

00:50:02.310 --> 00:50:07.030
figure out what the future of
web technologies are going to be.

00:50:07.230 --> 00:50:10.790
So, the one request I have from you
is we'd like you to be serious,

00:50:10.790 --> 00:50:11.220
too.

00:50:11.220 --> 00:50:15.680
We'd like you to take the
WebKit seriously as a website designer,

00:50:15.680 --> 00:50:18.260
and we'd like you to adopt the WebKit.

00:50:18.260 --> 00:50:22.180
I think when you take a look at all
the stuff we have to do inside the

00:50:22.180 --> 00:50:26.200
WebKit to make it work well with the web,
there really is no reason

00:50:26.200 --> 00:50:27.700
to try to roll your own.

00:50:27.700 --> 00:50:31.300
There's just so much in there for you.

00:50:31.300 --> 00:50:35.810
So, I'm just going to,
before I switch to some of the books and

00:50:35.810 --> 00:50:39.590
resources that I want to tell you about,
I'd like to summarize some of those

00:50:39.850 --> 00:50:41.960
advantages that the WebKit offers.

00:50:41.980 --> 00:50:44.210
One is it's easy to
embed in an application,

00:50:44.280 --> 00:50:47.010
so if you're a programmer with an app,
no problem.

00:50:47.010 --> 00:50:48.110
It's fast.

00:50:48.110 --> 00:50:51.380
You're going to get the same kind
of speed that we get when we use

00:50:51.380 --> 00:50:53.320
it in Safari if you use the WebKit.

00:50:53.340 --> 00:50:56.540
The WebKit supports a
panoply of standards.

00:50:56.540 --> 00:51:00.900
And it also supports the real-world
websites that skirt the edge or

00:51:00.980 --> 00:51:03.500
ignore the standards completely.

00:51:03.880 --> 00:51:07.710
Safari's continued development is going
to be one of the many drivers that will

00:51:07.710 --> 00:51:10.080
keep driving improvements to the WebKit.

00:51:10.210 --> 00:51:12.390
And the WebKit is built
right into the OS.

00:51:12.490 --> 00:51:15.440
It doesn't make your app any
bigger and will have almost no

00:51:15.510 --> 00:51:17.490
effect on startup time of your app.

00:51:19.490 --> 00:51:22.190
So I'm not sure that these
slides are in the right order.

00:51:22.240 --> 00:51:25.200
Before John does the wrap-up,
I want to talk a little bit

00:51:25.200 --> 00:51:26.980
about some of the resources.

00:51:27.000 --> 00:51:29.940
So let's come back to this
roadmap and who to contact.

00:51:29.950 --> 00:51:34.250
I want to talk about some places
you can look for more information.

00:51:34.450 --> 00:51:38.680
Here are a few of the places in
our documentation website that you

00:51:38.690 --> 00:51:42.690
can find relevant stuff to the--
relevant documentation for the

00:51:42.740 --> 00:51:45.190
things I've been talking about.

00:51:46.020 --> 00:51:49.800
In addition, there are some really
valuable Apple websites.

00:51:49.930 --> 00:51:53.100
The Apple Internet Developer website
has tons of information

00:51:53.100 --> 00:51:58.410
about developing content,
web content, in ways that work well

00:51:58.420 --> 00:52:03.000
with our web technology,
including one page I call out there,

00:52:03.000 --> 00:52:05.950
the Safari Resources for Web Developers
page that has all kinds of stuff.

00:52:06.090 --> 00:52:09.530
It includes pointers to documentation
about exactly what's supported by

00:52:09.530 --> 00:52:13.720
various versions of Safari 1.0,
tips for using CSS and the DOM,

00:52:13.740 --> 00:52:15.580
and all that sort of thing.

00:52:16.210 --> 00:52:18.740
And then the SDK website.

00:52:18.740 --> 00:52:21.040
I wanted to mention a few of these books.

00:52:21.040 --> 00:52:25.980
In particular, the CSS book,
which is the second one down there,

00:52:25.980 --> 00:52:32.760
and the DOM book, which is dynamic HTML,
a good way to describe both

00:52:32.760 --> 00:52:35.110
the DOM and other features.

00:52:35.120 --> 00:52:37.830
Those are incredibly useful,
some of the best references

00:52:37.830 --> 00:52:38.890
on these subjects.

00:52:38.900 --> 00:52:42.020
And that's how you're going to
know what the standards are.

00:52:42.510 --> 00:52:45.540
In addition,
there are some great websites

00:52:45.640 --> 00:52:50.320
about standards in specific and
why standards are a good idea.

00:52:50.320 --> 00:52:54.410
Some of these I hadn't seen
until I was preparing my talk,

00:52:54.590 --> 00:52:55.910
and they're really great.

00:52:56.010 --> 00:52:58.360
They make the compelling case.

00:52:58.360 --> 00:53:05.140
And the validator.w3.org up there
is the URL for a suite of different

00:53:05.450 --> 00:53:08.700
validation tools that the W3C offers.

00:53:08.740 --> 00:53:11.490
And then these are kind of fun.

00:53:12.310 --> 00:53:15.750
There are a couple standard experts
who have some of the best resources

00:53:15.890 --> 00:53:18.240
out there for CSS and the DOM.

00:53:18.260 --> 00:53:22.840
And Eric, well, it says right there,
the one that's great for CSS tips and

00:53:22.840 --> 00:53:25.740
another amazing for stuff about the DOM.

00:53:25.740 --> 00:53:29.470
And they talk specifically about Safari,
too, so that'll help you as well.

00:53:30.950 --> 00:53:32.800
So anyway, now--OK, sure, sure.

00:53:32.800 --> 00:53:36.300
So let's go back to the roadmap.

00:53:36.530 --> 00:53:39.800
And then--OK,
so because this is gonna be on the DVD,

00:53:39.800 --> 00:53:41.250
there's a previous sessions.

00:53:41.320 --> 00:53:43.800
The first two are previous
sessions you might want to look at,

00:53:43.800 --> 00:53:46.800
the open-source session
and the Safari overview.

00:53:46.940 --> 00:53:49.850
But after this session,
there's three more that I think

00:53:50.100 --> 00:53:51.670
you may find really interesting.

00:53:51.800 --> 00:53:56.520
The Advanced Foundation URL API session
is going to go into detail about the

00:53:56.520 --> 00:53:59.750
URL loading APIs and what they are,
how to use them.

00:53:59.810 --> 00:54:02.240
The Advanced WebKit API session
will tell you all sorts of

00:54:02.240 --> 00:54:03.800
interesting things about the WebKit.

00:54:03.800 --> 00:54:06.400
I actually think there are parts of
that that are interesting even if you

00:54:06.400 --> 00:54:08.800
aren't gonna program with the WebKit.

00:54:08.800 --> 00:54:10.800
So it's--definitely go to that one.

00:54:10.800 --> 00:54:15.800
And then there's a feedback forum for
all the internet networking technologies,

00:54:15.800 --> 00:54:21.760
which is on Friday--not day,
10:30 a.m., but Friday, 10:30 a.m.

00:54:21.850 --> 00:54:26.800
So if you have feedback about
WebKit and standard supports,

00:54:26.800 --> 00:54:28.800
please send it to John.

00:54:28.800 --> 00:54:30.800
His email address is there.

00:54:30.800 --> 00:54:32.720
And thank you very much.

00:54:32.880 --> 00:54:34.800
I think it's time for Q&A.