WEBVTT

00:00:23.200 --> 00:00:24.690
Well, hello.

00:00:24.700 --> 00:00:25.180
Welcome.

00:00:25.210 --> 00:00:26.250
Thanks for coming.

00:00:26.310 --> 00:00:32.170
This is session 702, MPEG-4 Demystified,
as part of the QuickTime track that we're

00:00:32.170 --> 00:00:34.960
very happy to have this year at WWDC.

00:00:35.220 --> 00:00:36.640
I'm Aimee Nugent.

00:00:36.710 --> 00:00:38.520
I work on the QuickTime product
marketing team,

00:00:38.620 --> 00:00:40.200
and I'll be your host for this session.

00:00:40.200 --> 00:00:42.930
You probably just came
from the QuickTime State of

00:00:42.930 --> 00:00:46.500
the Union presentation,
and there you've learned where

00:00:46.500 --> 00:00:49.890
standards really play a very important
part in the strategy for Apple,

00:00:49.900 --> 00:00:51.160
as well as QuickTime.

00:00:51.160 --> 00:00:54.600
It's my honor to introduce
to you Rob Koenen,

00:00:54.600 --> 00:00:58.160
who briefly talked in
the State of the Union,

00:00:58.160 --> 00:01:03.240
president of the MPEG-4 industry forum,
as well as many other jobs.

00:01:03.240 --> 00:01:08.120
He will go through the
MPEG-4 specification.

00:01:08.120 --> 00:01:13.480
It's a very vast and deep specification
that is capable of many things.

00:01:13.480 --> 00:01:16.520
I will leave you in the
very capable hands of Rob,

00:01:16.520 --> 00:01:18.080
and hope you have a good session.

00:01:18.640 --> 00:01:19.260
Rob, thank you very much.

00:01:19.260 --> 00:01:19.480
Aimee?

00:01:21.280 --> 00:01:24.090
I think we got to do
one of two things first.

00:01:24.090 --> 00:01:28.820
Either all of you flip over your iMacs,
or we put on some light in the room,

00:01:28.820 --> 00:01:30.970
because it's really very dark.

00:01:30.970 --> 00:01:32.540
I can't see anyone.

00:01:33.270 --> 00:01:35.040
So, here are your iBooks.

00:01:35.040 --> 00:01:36.190
There's not enough iBooks to go.

00:01:36.250 --> 00:01:37.560
Can we have some light in the room?

00:01:37.560 --> 00:01:39.470
Is that possible?

00:01:41.010 --> 00:01:42.880
Yes,
I think you can still see the screen,

00:01:42.930 --> 00:01:43.360
right?

00:01:43.400 --> 00:01:46.390
And the screen is much
more important than I am,

00:01:46.420 --> 00:01:48.710
so allow me to take off this.

00:01:48.780 --> 00:01:53.120
Good morning, everybody.

00:01:54.060 --> 00:02:00.800
It is my pleasure and honor to be able
to talk to you today and to explain

00:02:01.190 --> 00:02:03.650
the high-level concepts of MPEG-4.

00:02:03.820 --> 00:02:06.820
I think I will be able
to demystify some of it,

00:02:06.950 --> 00:02:07.880
maybe not all of it.

00:02:08.110 --> 00:02:12.220
Notably, one thing I have to say up
front is about the licensing.

00:02:12.220 --> 00:02:14.460
Some people of you have
heard about licensing.

00:02:14.570 --> 00:02:17.180
You should come back on
Thursday morning when there is

00:02:17.180 --> 00:02:18.940
someone here to explain just that.

00:02:19.210 --> 00:02:21.610
I will say a few words though.

00:02:21.790 --> 00:02:25.940
And if during this talk
you have any questions,

00:02:25.940 --> 00:02:27.850
I don't mind being interrupted.

00:02:27.980 --> 00:02:29.540
Just raise your hand.

00:02:29.700 --> 00:02:32.960
It would be good if you
used a mic for a question,

00:02:33.020 --> 00:02:37.540
because this is being translated
simultaneously into Japanese,

00:02:37.570 --> 00:02:40.980
and the translators can only
hear you if you use the mic.

00:02:41.090 --> 00:02:43.760
If that's difficult,
just shout out your question,

00:02:43.860 --> 00:02:46.650
I'll repeat it for the translators.

00:02:48.210 --> 00:02:49.360
I have this neat little device.

00:02:49.360 --> 00:02:52.380
I've been told not to press this button,
because then everything will go wrong.

00:02:52.380 --> 00:02:56.200
Because when they give you neat
little devices with buttons that

00:02:56.200 --> 00:02:57.990
you're not supposed to press...

00:02:59.890 --> 00:03:01.120
Thank you for coming.

00:03:01.150 --> 00:03:02.740
This is what I would
like to address today.

00:03:02.790 --> 00:03:04.410
What is MPEG-4?

00:03:04.620 --> 00:03:05.830
How does it work?

00:03:06.020 --> 00:03:07.780
What are the recent and
interesting developments?

00:03:07.800 --> 00:03:10.200
Why should you use MPEG-4?

00:03:10.200 --> 00:03:13.390
This is just a bunch of business talks,
so I'll go over that quickly,

00:03:13.510 --> 00:03:15.120
because you're all developers.

00:03:15.120 --> 00:03:19.090
I'll tell a little bit about
the deployments of MPEG-4,

00:03:19.090 --> 00:03:24.040
and then just a few words about M4AF,
or the MPEG-4 Industry Forum,

00:03:24.080 --> 00:03:27.180
which is an advocacy group for MPEG-4.

00:03:28.180 --> 00:03:30.180
So, let's start with the basics.

00:03:30.180 --> 00:03:31.010
What is MPEG-4?

00:03:31.010 --> 00:03:40.560
I am today not going to give youâ€¦
What's happening to Baker here?

00:03:48.400 --> 00:03:49.390
I got the message.

00:03:49.400 --> 00:03:50.390
What is MPEG-4?

00:03:50.400 --> 00:03:54.990
So I'm not going to give you the
gory details of the video codec,

00:03:54.990 --> 00:03:57.610
or the audio codec,
or any of the system codecs,

00:03:57.610 --> 00:03:59.700
but a high-level,
functional overview of what

00:03:59.700 --> 00:04:01.130
MPEG-4 is and what it does.

00:04:02.770 --> 00:04:06.660
First, it's what we like to think
of as the media standard.

00:04:06.680 --> 00:04:10.330
And we call it that way because it's a
standard that works across all devices,

00:04:10.510 --> 00:04:15.340
all networks, all carriers,
all everything, basically.

00:04:15.350 --> 00:04:20.550
And that's why we also call it the
interoperable cross-platform ecosystem.

00:04:21.050 --> 00:04:23.430
While it's interoperable,
it's also competitive,

00:04:23.510 --> 00:04:25.150
and I will tell you why it's competitive.

00:04:25.180 --> 00:04:28.080
Because just that you have
a standard doesn't take away

00:04:28.080 --> 00:04:30.110
all the competition there is.

00:04:30.120 --> 00:04:32.370
On the contrary, actually,
that creates a lot of

00:04:32.370 --> 00:04:34.880
opportunities for competition.

00:04:35.750 --> 00:04:40.640
Most people know MPEG-4 as a video codec,
and Apple likes to talk

00:04:40.650 --> 00:04:49.670
about MPEG-4 video and AAC.

00:04:49.670 --> 00:04:49.670
AAC is actually also MPEG-4 or MPEG-2,
Advanced Audio Coding.

00:04:49.880 --> 00:04:53.800
And it's also a systems layer,
a part of which is the file format,

00:04:53.800 --> 00:04:59.970
which was based on QuickTime,
as Frank Casanova explained this morning.

00:05:01.180 --> 00:05:06.620
It goes way beyond audio and video,
although audio and video are the first

00:05:06.710 --> 00:05:09.020
elements that will see deployment.

00:05:09.110 --> 00:05:11.360
And it supports stuff
that's way beyond that,

00:05:11.360 --> 00:05:13.290
and I will tell you a bit about that.

00:05:13.400 --> 00:05:16.280
And it's designed for
all multimedia platforms,

00:05:16.280 --> 00:05:17.410
digital ones.

00:05:19.700 --> 00:05:22.480
So where does it come from?

00:05:22.540 --> 00:05:25.030
Most of you will know

00:05:25.610 --> 00:05:28.310
So who knows MPEG-3 here?

00:05:28.390 --> 00:05:30.500
Anyone know MPEG-3?

00:05:30.600 --> 00:05:32.220
Some people still do.

00:05:32.220 --> 00:05:33.540
MPEG-3 doesn't exist.

00:05:33.580 --> 00:05:40.320
Because what you know as MPEG-3
or MP3 is actually MPEG-1 audio.

00:05:40.320 --> 00:05:42.280
But MPEG-1 had three layers of audio.

00:05:42.280 --> 00:05:44.110
Layer 1 was really simple.

00:05:44.270 --> 00:05:49.100
Layer 2 is what's used in most of the
digital broadcasting systems today,

00:05:49.100 --> 00:05:50.730
in Europe at least.

00:05:50.860 --> 00:05:53.660
In America, it's Dolby.

00:05:53.870 --> 00:05:58.300
And Layer 3 is the most
complicated of MPEG-1 audio layers.

00:05:58.400 --> 00:06:01.570
That was way beyond what could be
implemented when it was designed,

00:06:01.610 --> 00:06:03.890
but is now just the norm.

00:06:05.590 --> 00:06:08.840
And then you may know MPEG-2,
which is a standard for

00:06:08.840 --> 00:06:15.560
digital television and for DVD,
video, and audio also in Europe.

00:06:15.590 --> 00:06:19.220
Again, in America, it's more Dolby Audio.

00:06:19.220 --> 00:06:24.050
Then there are MPEG-7 and MPEG-21,
which are not successors

00:06:24.180 --> 00:06:26.160
to MPEG-4 or MPEG-2.

00:06:26.160 --> 00:06:30.340
MPEG-7 is sort of a metadata standard
that allows you to describe content.

00:06:30.370 --> 00:06:34.240
MPEG-21 is a very fuzzy phrase.

00:06:34.240 --> 00:06:37.840
It's a framework for interoperable
use and exchange of digital media.

00:06:37.840 --> 00:06:41.500
It does all sorts of stuff that has
to do with where you find content,

00:06:41.500 --> 00:06:44.940
what's a unique
identification for content,

00:06:44.940 --> 00:06:46.340
where do you find the rights to content.

00:06:46.340 --> 00:06:51.520
And it attempts to standardize
elements of digital rights management,

00:06:51.520 --> 00:06:55.620
which is more of a challenge,
I can tell you,

00:06:55.620 --> 00:07:00.330
than standardizing just a video codec,
which is hard enough as it is.

00:07:00.360 --> 00:07:01.360
Thank you.

00:07:02.820 --> 00:07:06.020
So let's talk a little bit
about the MPEG-4 vision.

00:07:06.020 --> 00:07:08.260
And this is a vision that's
been with us for a long time,

00:07:08.260 --> 00:07:12.600
actually since the middle of the 1990s.

00:07:12.700 --> 00:07:15.500
And it's coming on close,
and I've been working on

00:07:15.500 --> 00:07:17.530
MPEG-4 for 10 years almost.

00:07:17.690 --> 00:07:19.700
That will be next year.

00:07:19.700 --> 00:07:24.850
The vision, and back in the,
if you remember, back in the early 90s,

00:07:24.900 --> 00:07:28.700
or halfway the 90s, there was all this
talk about convergence.

00:07:28.880 --> 00:07:32.700
And everything was going to be the same.

00:07:32.870 --> 00:07:36.700
And we're all going to have glass
or fiber into our living rooms.

00:07:36.700 --> 00:07:40.250
And the big discussion was, okay,
are we going to consume

00:07:40.250 --> 00:07:42.950
our content on the PC,
or are we going to consume

00:07:42.960 --> 00:07:44.700
the content on the television?

00:07:44.700 --> 00:07:47.700
And back then we said,
that's all a load of bullshit.

00:07:47.700 --> 00:07:52.900
There's not going to be,
I'm not sure that can be translated,

00:07:52.900 --> 00:07:54.090
by the way.

00:07:54.460 --> 00:07:56.750
That wasn't quite right.

00:07:56.750 --> 00:08:02.700
There was, rather than convergence,
we saw proliferation of multimedia.

00:08:02.700 --> 00:08:05.370
Rather than less networks, we got more.

00:08:05.370 --> 00:08:09.120
We got all these sorts of
different mobile networks.

00:08:09.280 --> 00:08:16.330
We got the normal telephone network,
we got the digital telephone network,

00:08:16.400 --> 00:08:19.980
ISDN, which has had quite a bit of
adoption in Japan and Europe,

00:08:19.980 --> 00:08:21.040
not as much here.

00:08:21.040 --> 00:08:24.720
We got ADSL, we got cable,
we got stuff coming to

00:08:24.840 --> 00:08:26.800
us through satellites.

00:08:27.060 --> 00:08:30.020
And it's going to be a chaos.

00:08:30.050 --> 00:08:32.140
And rather than just
this convergent terminal,

00:08:32.140 --> 00:08:34.040
it's going to be either
the PC or the television,

00:08:34.040 --> 00:08:36.080
another load of bull.

00:08:36.080 --> 00:08:39.950
We're going to have a lot
of different terminals,

00:08:40.060 --> 00:08:45.890
handheld devices, phones, more PCs,
different PCs, set-top boxes,

00:08:45.890 --> 00:08:50.590
and they're all going to want
to do digital multimedia.

00:08:51.620 --> 00:08:55.160
And back then,
the way to do standardization

00:08:55.160 --> 00:08:58.040
was new network,
new standard, new stack.

00:08:58.140 --> 00:09:00.940
Communication protocols, codecs,
everything anew,

00:09:01.040 --> 00:09:02.940
especially in the communications world.

00:09:03.030 --> 00:09:04.840
And we said that doesn't make any sense.

00:09:04.940 --> 00:09:09.470
We have to have one layer of content
representation that works across all of

00:09:09.470 --> 00:09:12.490
these different applications is agnostic.

00:09:12.830 --> 00:09:16.800
to the network, to the terminal,
and supports all these different

00:09:16.800 --> 00:09:20.120
types of what you could call,

00:09:21.180 --> 00:09:25.340
Paradigms for using content: broadcast,
communication, retrieval,

00:09:25.340 --> 00:09:29.350
and retrieval could be online
or in packaged media like DVDs.

00:09:30.910 --> 00:09:34.180
So basically, a single technology
for all these devices.

00:09:34.210 --> 00:09:36.400
And of course,
that doesn't mean that on your

00:09:36.700 --> 00:09:40.390
high-definition television,
you're using the same bit rate.

00:09:40.490 --> 00:09:43.980
But you're using the same-- you could
very well use the same systems layer,

00:09:43.980 --> 00:09:45.140
by the way.

00:09:45.160 --> 00:09:47.120
You could use the same MP4 files.

00:09:47.140 --> 00:09:49.620
And they could point to different
content media files with

00:09:49.720 --> 00:09:51.320
different encoded bit rates.

00:09:51.340 --> 00:09:55.240
And like Frank showed this morning,
you could easily take one file and

00:09:55.240 --> 00:10:00.620
transport it to-- transcode it to another
that does work on a mobile device.

00:10:02.600 --> 00:10:07.450
Enabling what I like to
think of as this "write once,

00:10:07.610 --> 00:10:11.540
play everywhere" paradigm,
where you can use your

00:10:11.550 --> 00:10:18.010
content across your devices,
on your PCs, on your CE devices,

00:10:18.120 --> 00:10:19.100
and on your phones even.

00:10:19.100 --> 00:10:21.210
You can even take it with you.

00:10:21.320 --> 00:10:23.450
And on the other hand,
you can shoot your films

00:10:23.450 --> 00:10:26.100
while you're on the road,
and just upload them to your PC,

00:10:26.100 --> 00:10:28.540
and they just play in quick time.

00:10:29.960 --> 00:10:32.420
So that's where we see the
applications of MPEG-4 today,

00:10:32.420 --> 00:10:36.360
and I already talked a little bit
about in the State of the Union.

00:10:36.700 --> 00:10:38.460
We see it in mobile devices.

00:10:38.480 --> 00:10:40.480
We see it in broadcast, not as much yet.

00:10:40.690 --> 00:10:45.950
This will explode, excuse me,
if we get the new advanced video codec,

00:10:46.020 --> 00:10:49.390
about which I will say a few words
a bit further down in this talk.

00:10:49.440 --> 00:10:51.870
We do see streaming services.

00:10:52.030 --> 00:10:55.200
Interestingly,
we are getting a little bit

00:10:55.200 --> 00:10:57.420
of interactivity in these.

00:10:57.500 --> 00:11:01.310
MPEG-4 allows for great interactivity,
which I will definitely talk about.

00:11:01.910 --> 00:11:04.420
And the BBC is doing a trial
now with that sort of stuff.

00:11:04.500 --> 00:11:07.250
And for Package Media,
which is also waiting for

00:11:07.250 --> 00:11:09.040
the new codec at this moment.

00:11:09.060 --> 00:11:12.850
So let's now go to the
heart of this presentation,

00:11:12.850 --> 00:11:14.970
which is how does it work?

00:11:18.690 --> 00:11:24.510
MPEG-4 is an object-based multimedia
content representation standard.

00:11:24.550 --> 00:11:28.450
And some people that know a little bit
about image coding or have heard about

00:11:28.450 --> 00:11:34.280
MPEG-4 will know that MPEG-4 supports
arbitrary shape objects in video,

00:11:34.280 --> 00:11:35.970
and that you can do
segmentation and stuff.

00:11:36.600 --> 00:11:38.380
That's all true,
but you don't need to do it.

00:11:38.410 --> 00:11:44.590
An object might just as well be a
rectangular frame of video and the audio.

00:11:44.590 --> 00:11:49.430
And then maybe the text that scrolls
across the video is another object,

00:11:49.430 --> 00:11:52.040
which is already a huge
difference with MPEG-2,

00:11:52.170 --> 00:11:53.960
where everything is just pixels.

00:11:55.600 --> 00:11:57.350
It's got a revolutionary systems layer.

00:11:57.490 --> 00:12:00.680
It's got state-of-the-art codecs,
which are responsibly upgraded,

00:12:00.680 --> 00:12:03.500
which means no new codec every half year.

00:12:03.500 --> 00:12:07.010
It's something that you can perfectly
well do in the Internet world,

00:12:07.010 --> 00:12:10.760
but the CE world doesn't work that way,
and people don't want to buy a

00:12:10.760 --> 00:12:12.740
new DVD player every half year.

00:12:12.740 --> 00:12:16.440
And it's got something called profiles
and levels to restrict complexity

00:12:16.500 --> 00:12:18.350
and guarantee interoperability.

00:12:18.430 --> 00:12:20.990
Those are the, what we call,
interoperability points,

00:12:20.990 --> 00:12:22.140
profiles and levels.

00:12:23.310 --> 00:12:25.700
And while MPEG defines
a whole bunch of those,

00:12:25.700 --> 00:12:28.530
and you could actually say
there's too many of them,

00:12:28.540 --> 00:12:31.860
it doesn't really matter
because industry consortia,

00:12:31.890 --> 00:12:34.790
such as the Internet Streaming
Media Alliance,

00:12:34.860 --> 00:12:38.020
which is a consortium that
Apple helped founding,

00:12:38.020 --> 00:12:42.220
JPEG their profiles and levels.

00:12:42.220 --> 00:12:44.710
They say, okay, we're going to use
this profile for video,

00:12:44.860 --> 00:12:45.980
this profile for audio.

00:12:45.980 --> 00:12:48.440
We're going to use this file format.

00:12:48.440 --> 00:12:50.640
Well, there's only one of them,
so that's simple.

00:12:51.120 --> 00:12:54.220
And that's how we are going to
do interoperable streaming media.

00:12:54.220 --> 00:12:55.540
All of us.

00:12:55.740 --> 00:13:01.170
Philips, Sun, Cisco, Casena, Apple,
you name them.

00:13:03.770 --> 00:13:07.260
So let's take a look at this picture,
and I'll jump off stage for a second.

00:13:07.260 --> 00:13:09.940
And you can read the text,
and that's okay,

00:13:09.940 --> 00:13:11.810
because you don't need to.

00:13:11.820 --> 00:13:14.290
But what you see here is
all the different content

00:13:14.290 --> 00:13:17.430
types that MPEG-4 supports,
and what you see, there's audio,

00:13:17.430 --> 00:13:20.440
there's video, there's graphics,
there's even 3D graphics.

00:13:20.460 --> 00:13:25.060
There's text, there's animation,
there's something we call BIFs,

00:13:25.250 --> 00:13:26.530
so we'll tell about what BIFs is.

00:13:26.600 --> 00:13:30.440
And then there is,
basically this represents a multiplex,

00:13:30.520 --> 00:13:34.190
which you can see is an MP4 file,
which is the basic container

00:13:34.190 --> 00:13:35.620
that can carry everything.

00:13:35.620 --> 00:13:41.900
Then you can distribute that stuff,
these containers and these streams,

00:13:41.900 --> 00:13:45.950
using whatever you would like to use,
because basically MPEG-4 is

00:13:46.050 --> 00:13:48.590
agnostic to all these things,
so there's broadcast,

00:13:48.600 --> 00:13:52.270
there's broadband delivery, satellite,
there's wireless, there's phone lines,

00:13:52.270 --> 00:13:52.780
whatever.

00:13:52.780 --> 00:13:55.170
And then you can put it on a
number of different devices.

00:13:56.730 --> 00:13:58.980
And what I talked about
the devices before,

00:13:59.020 --> 00:14:01.220
so let's skip that bit.

00:14:01.220 --> 00:14:05.800
But what's now interesting is,
let's look at what MPEG-2 does.

00:14:05.810 --> 00:14:07.460
And I'm actually going
to go back to the screen.

00:14:07.460 --> 00:14:11.870
In MPEG-2, you would do authoring,
and you would take all of these objects,

00:14:11.870 --> 00:14:15.130
you would do your authoring,
and Apple has a couple of great

00:14:15.290 --> 00:14:17.220
products for doing authoring.

00:14:17.540 --> 00:14:20.660
But then you're going to do encoding,
and what you do with encoding

00:14:20.750 --> 00:14:23.500
is you basically say,
okay, now I'm going to convert all

00:14:23.500 --> 00:14:24.810
these things into pixels.

00:14:24.810 --> 00:14:26.740
One plane of pixels.

00:14:26.740 --> 00:14:29.920
Everything is collapsed
into a single plane.

00:14:32.860 --> 00:14:35.410
"The rectangular frame
of pixels gets encoded.

00:14:35.550 --> 00:14:38.130
I explain everything
using video concepts.

00:14:38.270 --> 00:14:40.300
Actually,
in audio I could do something similar,

00:14:40.300 --> 00:14:43.800
but it's just a little bit easier
for me doing it in visual concepts.

00:14:43.800 --> 00:14:46.940
So you take all the objects,
you collapse them into a

00:14:46.940 --> 00:14:49.680
single plane of pixels,
you encode this using MPEG-2,

00:14:49.680 --> 00:14:51.350
and then you just display it here.

00:14:51.430 --> 00:14:53.400
There's nothing you can do anymore."

00:14:53.860 --> 00:14:58.040
Now with MPEG-4, you can, if you wish,
you don't have to,

00:14:58.040 --> 00:15:02.140
but you can keep all of
these objects separately.

00:15:02.240 --> 00:15:04.940
You can have multiple video objects,
you could have one.

00:15:05.020 --> 00:15:09.340
You could have a graphic
that's encoded independently.

00:15:09.340 --> 00:15:12.040
You could have your streaming text.

00:15:12.040 --> 00:15:14.570
You could have your voice and
your music encoded separately.

00:15:14.810 --> 00:15:17.780
You can keep them separate,
what's called elementary streams.

00:15:17.840 --> 00:15:23.110
You could send these to the decoder,
and then you do the composition here.

00:15:23.860 --> 00:15:27.310
So instead of doing
composition before encoding,

00:15:27.310 --> 00:15:31.110
here, we are now doing composition
after decoding of the objects,

00:15:31.200 --> 00:15:33.040
which is here.

00:15:34.690 --> 00:15:37.400
And that's the major, actually,
if there is one major

00:15:37.440 --> 00:15:40.480
paradigm shift in MPEG-4,
that's it.

00:15:43.210 --> 00:15:49.430
Now, in order to be able to do this,
you need some sort of a language.

00:15:49.950 --> 00:15:53.610
It tells you, okay, this is where the
objects go on the screen.

00:15:53.830 --> 00:15:55.840
This is when they appear.

00:15:55.920 --> 00:15:59.750
That's what we call the BIFs,
the binary format for scenes.

00:16:00.720 --> 00:16:03.590
It's an efficient binary
language that allows you to

00:16:03.590 --> 00:16:08.940
describe where the objects are,
where they go, when they appear.

00:16:08.990 --> 00:16:13.730
Now, if you have this BIFS language,
you cannot not just describe

00:16:14.590 --> 00:16:16.500
the scene statically,

00:16:16.860 --> 00:16:18.940
You can also start describing
the scene dynamically.

00:16:18.940 --> 00:16:23.330
You can attach behavior to the objects.

00:16:23.410 --> 00:16:27.400
You could say, "Okay,
this logo is spinning.

00:16:27.400 --> 00:16:29.430
It's changing its color.

00:16:29.510 --> 00:16:31.810
It's moving from the top left
of the screen to the bottom

00:16:31.810 --> 00:16:34.680
right of the screen." Now,
if I were to do this in MPEG-2

00:16:34.680 --> 00:16:37.950
or any traditional codec,
I would have to encode all these pixels,

00:16:37.950 --> 00:16:41.500
and again and again and again and again
and again until the logo was here,

00:16:41.560 --> 00:16:43.600
which is quite a bit of waste of bits.

00:16:43.670 --> 00:16:46.260
While in MPEG-4,
I just give one command saying, "Okay,

00:16:46.260 --> 00:16:50.250
move the logo from there to
there," and take a second to do it,

00:16:50.350 --> 00:16:50.820
and that's it.

00:16:50.920 --> 00:16:55.000
This is a very small binary
command sent to the decoder.

00:16:55.000 --> 00:16:57.690
The decoder takes care of everything.

00:16:59.640 --> 00:17:02.740
Now this applies to visual objects,
it applies to audio objects as well.

00:17:02.740 --> 00:17:06.460
You can describe 3D audio scenes
in this and have sources move

00:17:06.500 --> 00:17:07.910
around in a scene if you wish.

00:17:08.020 --> 00:17:09.500
That's quite a bit more advanced.

00:17:09.500 --> 00:17:14.280
But that's the basic concept of MPEG-4.

00:17:16.740 --> 00:17:19.700
So let's look at this in a
typical MPEG-4 scene that is

00:17:19.780 --> 00:17:22.090
fully free of any copyright.

00:17:22.160 --> 00:17:24.890
So I won't get in any trouble,
which means it's a bit dull.

00:17:25.030 --> 00:17:26.100
I made it myself.

00:17:26.100 --> 00:17:29.600
It's an aquarium with some seaweed.

00:17:29.600 --> 00:17:33.100
There is an arbitrary shape video object.

00:17:33.100 --> 00:17:35.100
And I've been using this for a while.

00:17:35.100 --> 00:17:36.100
She's four now.

00:17:36.100 --> 00:17:39.100
This was when she was one day old.

00:17:39.100 --> 00:17:43.940
There's some bubbles, some fish,
and there's another type of fish,

00:17:44.170 --> 00:17:48.560
which is a special sort of fish,
which I'll explain in a little bit.

00:17:48.600 --> 00:17:51.600
And all these are different objects.

00:17:51.680 --> 00:17:53.600
So this is an arbitrary
shape video object,

00:17:53.600 --> 00:17:55.600
or natural video object.

00:17:55.600 --> 00:17:58.600
These are graphic things, the fish.

00:17:58.600 --> 00:18:01.600
And then there's the bubbles,
there's some background, it has music,

00:18:01.600 --> 00:18:03.600
maybe a voiceover.

00:18:03.600 --> 00:18:07.600
And then there's this,
it looks like a wireframe,

00:18:07.600 --> 00:18:08.600
it actually is a wireframe.

00:18:08.600 --> 00:18:11.600
It is a wireframe with a
picture projected onto it.

00:18:11.600 --> 00:18:15.540
And the neat thing about
this is if you move the...

00:18:15.660 --> 00:18:19.760
The vertices in the wireframe,
you can make the fish swim.

00:18:19.810 --> 00:18:23.250
And actually, in real life,
you wouldn't see all these wires.

00:18:23.430 --> 00:18:26.540
These would be hidden,
but that's just to show you how it works.

00:18:26.700 --> 00:18:30.320
These are a couple of the
objects that MPEG-4 supports.

00:18:30.360 --> 00:18:36.520
Now,
this is what the scene tree looks like.

00:18:38.490 --> 00:18:42.760
All these objects are represented
by branches in this tree,

00:18:42.760 --> 00:18:45.050
and they have sub-objects.

00:18:45.600 --> 00:18:49.160
At whoops, some of these,
I'm trying to go back.

00:18:49.180 --> 00:18:52.530
Didn't really want to do, yeah,
back works.

00:18:52.690 --> 00:18:57.850
So all of these objects can have,

00:18:59.580 --> 00:19:01.290
Audio and video associated with them.

00:19:01.380 --> 00:19:03.150
Some of them are static, just graphics.

00:19:03.160 --> 00:19:04.370
Some of them are streams.

00:19:04.920 --> 00:19:06.960
Some of them are audio,
some of them are video.

00:19:07.050 --> 00:19:10.640
And this is actually literally
what's represented in the decoder.

00:19:10.710 --> 00:19:13.510
And this is, now you can go in with
your BIFS language,

00:19:13.510 --> 00:19:15.050
and just do stuff with the branches.

00:19:15.050 --> 00:19:17.530
You can take a branch out
and an object disappears.

00:19:17.530 --> 00:19:19.900
You can change the place
of the whole branch.

00:19:19.900 --> 00:19:23.820
You can change the color of an object,
just by issuing these

00:19:23.820 --> 00:19:25.780
little BIFS commands.

00:19:25.780 --> 00:19:28.230
So, recapping.

00:19:28.610 --> 00:19:31.130
We have an audiovisual
scene with objects.

00:19:31.130 --> 00:19:33.980
It could be a very complicated scene,
it could be a very simple scene with

00:19:33.980 --> 00:19:37.130
one audio object and one video object,
and it just provides

00:19:37.300 --> 00:19:40.560
interoperable streaming,
which is quite a feat in itself.

00:19:40.600 --> 00:19:43.600
These objects can be of different nature.

00:19:43.600 --> 00:19:46.210
They can be natural,
which is they are recorded

00:19:46.210 --> 00:19:48.060
with a camera or a microphone.

00:19:48.060 --> 00:19:50.320
They can be synthetic,
which is they are generated

00:19:50.320 --> 00:19:51.620
with a computer program.

00:19:51.620 --> 00:19:55.020
And there is a compositor,
which is this new element that

00:19:55.020 --> 00:19:57.030
puts the objects in the scene.

00:19:58.180 --> 00:20:01.060
And then there is an efficient,
real-time,

00:20:01.090 --> 00:20:05.230
binary scene description language,
which is called VIFS.

00:20:05.450 --> 00:20:08.950
And BIFS,
I'll say a couple words more about BIFS.

00:20:09.210 --> 00:20:12.810
It inherits a lot of VRML,
the virtual reality modeling language.

00:20:12.840 --> 00:20:16.780
But as you may know, that one was neither
real-time nor binary,

00:20:16.780 --> 00:20:21.890
and therefore not very efficient
for stuff like streaming over

00:20:21.930 --> 00:20:24.480
the Internet or to mobile phones.

00:20:24.540 --> 00:20:27.080
It was perfectly okay
for doing computer stuff.

00:20:30.370 --> 00:20:35.220
And the coding scheme of all
these different types of objects

00:20:35.220 --> 00:20:37.200
is optimal for the object type.

00:20:37.310 --> 00:20:39.640
So you don't try to encode
speech with a music encoder,

00:20:39.700 --> 00:20:41.200
which is not really optimal.

00:20:41.200 --> 00:20:46.200
You don't have to encode a
graphic with a video encoder,

00:20:46.200 --> 00:20:49.200
which is optimized for moving video
rather than just still graphics.

00:20:49.200 --> 00:20:54.190
You can use the optimized coding
scheme for each of these objects.

00:20:55.070 --> 00:20:58.630
And this is completely
independent of bitrate.

00:20:58.630 --> 00:21:01.320
And I still say this because
most people now understand that

00:21:01.320 --> 00:21:04.980
MPEG-4 isn't about low bitrates,
just about low bitrates.

00:21:04.980 --> 00:21:07.220
It's also about low bitrates.

00:21:07.320 --> 00:21:13.080
Way back when, 1993,
MPEG-4 started as a low bitrate project,

00:21:13.170 --> 00:21:17.330
but that got changed
really quickly in 1994.

00:21:17.460 --> 00:21:20.660
But some people still think
it's about low bitrate.

00:21:20.660 --> 00:21:25.030
So, MPEG-4, there's a studio profile that
actually goes up to over a gigabit

00:21:25.030 --> 00:21:26.820
per second in video coding.

00:21:30.600 --> 00:21:35.500
So let's look at the different
objects that are supported in MPEG-4.

00:21:35.550 --> 00:21:38.230
The ones you know are video and audio.

00:21:39.190 --> 00:21:41.390
And these are the most widely deployed.

00:21:41.510 --> 00:21:47.100
Video coding and advanced audio coding,
MPEG-4 advanced audio coding.

00:21:47.100 --> 00:21:51.100
In addition to the video coding,
on the visual side,

00:21:51.100 --> 00:21:57.270
we have animated faces and bodies,
and there's some companies that have

00:21:57.380 --> 00:21:59.100
products out there for animated faces.

00:21:59.100 --> 00:22:04.180
And I think the BBC has been
looking at doing this because they

00:22:04.320 --> 00:22:07.000
have a legal requirement to do...

00:22:07.660 --> 00:22:13.810
Talking heads for people that can't hear,
deaf people, and they're supposed to

00:22:13.810 --> 00:22:17.380
be able to read lips,
and you can do this with animated faces.

00:22:17.400 --> 00:22:22.560
There are two-dimensional,
three-dimensional animated meshes.

00:22:22.620 --> 00:22:26.700
Those are little wireframes that
you can project either still or even

00:22:26.700 --> 00:22:30.170
moving video into these wireframes,
and then you can deform the wireframes,

00:22:30.170 --> 00:22:34.640
you get really intricate effects,
and there's text, streaming text and

00:22:34.640 --> 00:22:36.590
still text and graphics.

00:22:37.140 --> 00:22:40.940
And JPEG is also supported as
a part of the MPEG-4 framework.

00:22:40.950 --> 00:22:43.490
You can just use JPEG graphics.

00:22:43.700 --> 00:22:47.310
And then in the audio side,
we have generic audio

00:22:47.930 --> 00:22:51.200
from mono to 5.1 channels.

00:22:51.300 --> 00:22:54.600
And by combining different audio objects,
you can actually go up

00:22:54.600 --> 00:22:55.600
almost indefinitely.

00:22:55.600 --> 00:22:57.720
You don't need to stop at 5.1.

00:22:57.820 --> 00:23:02.270
There's specialized speech codecs,
synthetic sounds.

00:23:02.380 --> 00:23:04.120
This is very advanced.

00:23:04.220 --> 00:23:09.250
Structured audio is basically a
language to program a synthesizer,

00:23:09.250 --> 00:23:12.070
and then first to describe

00:23:13.000 --> 00:23:18.700
[Transcript missing]

00:23:19.540 --> 00:23:21.640
A score language.

00:23:21.640 --> 00:23:23.880
There's text-to-speech,
which is merely an interface,

00:23:24.000 --> 00:23:28.070
but you can mark up text so that
it can be regenerated as speech.

00:23:28.100 --> 00:23:31.500
And then there's something called
environmental specialization,

00:23:31.500 --> 00:23:35.610
which is making stuff sound
like it's in a specific place.

00:23:35.610 --> 00:23:38.360
You can describe the place.

00:23:41.680 --> 00:23:46.930
So let's look at the parts,
how this all fits together.

00:23:47.110 --> 00:23:52.070
First, there's the visual coding,
and then there's the audio coding.

00:23:52.290 --> 00:23:54.500
And this is just decoding.

00:23:54.560 --> 00:23:57.530
I'll say a few words about this
a bit further down in my talk,

00:23:57.620 --> 00:23:58.170
but it's important.

00:23:58.180 --> 00:24:00.450
MPEG-4 only standardizes decoding.

00:24:01.850 --> 00:24:04.300
It doesn't standardize encoding,
and that's why there's so much

00:24:04.380 --> 00:24:05.890
competition between providers.

00:24:05.960 --> 00:24:08.040
It's the same with MPEG-2.

00:24:08.090 --> 00:24:11.040
And as you will see a bit
further down in my talk,

00:24:11.090 --> 00:24:15.750
this provides for a lot of improvement
in quality of these codecs.

00:24:16.650 --> 00:24:20.290
And this is also why you have to be
very cautious with statements from

00:24:20.570 --> 00:24:24.230
proprietary vendors about the quality,
the quality of MPEG-4.

00:24:24.230 --> 00:24:25.500
It doesn't exist, basically.

00:24:25.500 --> 00:24:28.550
But you can get the best
quality with MPEG-4,

00:24:28.550 --> 00:24:31.500
and there are fair
comparisons to be made.

00:24:31.500 --> 00:24:35.500
But I'll say a few words more
about that a little later.

00:24:35.500 --> 00:24:41.440
Then there's a systems layer in MPEG-4,
which does stuff before decoding in

00:24:41.500 --> 00:24:46.020
terms of demultiplexing and buffering,
and after decoding in

00:24:46.020 --> 00:24:51.500
terms of presentation,
which is the composition of the objects.

00:24:51.500 --> 00:24:55.740
And the systems part used
to contain the file format,

00:24:55.840 --> 00:25:00.630
which is the MP4 file format,
which is extremely close

00:25:00.990 --> 00:25:04.300
to the .3GP file format,
which you saw Frank talk

00:25:04.410 --> 00:25:05.500
about in his presentation.

00:25:05.500 --> 00:25:10.500
The only difference is basically that
there is a top-level atom that says,

00:25:10.500 --> 00:25:18.500
"This is a 3GP file," which means, "Okay,
I now have AMR voice coding support."

00:25:18.650 --> 00:25:21.230
which is not something that
is natively known to MPEG-4,

00:25:21.230 --> 00:25:25.700
but for the rest it's
just the same stuff.

00:25:26.310 --> 00:25:29.150
And then there's something called DMIF,
which isn't always used,

00:25:29.220 --> 00:25:31.540
you don't have to use it,
but which would provide you with an

00:25:31.540 --> 00:25:33.360
abstract interface to the transport.

00:25:33.360 --> 00:25:36.840
And if you use DMIF,
which has a little bit

00:25:36.850 --> 00:25:40.090
of a grandiose name,
Delivery Multimedia

00:25:40.240 --> 00:25:43.840
Integration Framework,
it stands for, it's actually a quite

00:25:43.840 --> 00:25:45.360
compact part of the standard.

00:25:45.360 --> 00:25:48.120
If you use DMIF,
you can write your application

00:25:48.120 --> 00:25:51.120
to a transport layer,
and then you only need to write

00:25:51.510 --> 00:25:55.580
separate interfaces to a disk,
or to a network, or to a broadcast even.

00:25:56.200 --> 00:26:00.140
And your application needs to be further,
fully unaware of what it's talking to.

00:26:00.140 --> 00:26:03.500
And then there's the transport layer,
which in principle is

00:26:03.510 --> 00:26:04.820
not in the standard.

00:26:06.910 --> 00:26:08.920
And this is how content flows through.

00:26:08.970 --> 00:26:14.130
It comes through transport,
it goes through D-MIF if it's present.

00:26:14.130 --> 00:26:17.680
Systems take care of demultiplexing
of all the different objects.

00:26:17.810 --> 00:26:20.890
It's decoded,
and then the decoded objects

00:26:20.890 --> 00:26:25.020
are composited onto the screen
or into the sound space.

00:26:25.820 --> 00:26:29.230
Composition of audio could very well be,
okay, I turn up the volume of the

00:26:29.230 --> 00:26:31.630
background a little bit,
and I turn down the volume of the

00:26:31.630 --> 00:26:34.520
foreground speaker a little bit,
or I choose the Japanese speaker

00:26:34.520 --> 00:26:36.260
rather than the English speaker.

00:26:36.260 --> 00:26:40.510
These are all possibilities
by using MPEG-4 composition.

00:26:42.900 --> 00:26:46.400
And there's two sort of orthogonal parts.

00:26:46.490 --> 00:26:49.560
Conformance,
which contains a lot of bitstreams.

00:26:49.560 --> 00:26:52.440
If you have a decoder,
you can use the conformance part and

00:26:52.520 --> 00:26:54.890
see if your decoder is conformant.

00:26:54.950 --> 00:26:58.840
Gives you some level of
indication of interoperability.

00:26:59.040 --> 00:27:01.740
In the MPEG-4 industry,
we do much more interoperability

00:27:01.740 --> 00:27:03.940
work with exchange of bitstreams.

00:27:03.990 --> 00:27:08.710
And then there's reference software,
which is actually free of copyright.

00:27:09.000 --> 00:27:16.300
[Transcript missing]

00:27:18.890 --> 00:27:20.550
There is something,
even though in principle

00:27:20.630 --> 00:27:23.180
this is not in a standard,
something called MPEG-4 on IP,

00:27:23.180 --> 00:27:26.500
which is a specification on
basically how to use IETF protocols

00:27:26.500 --> 00:27:27.600
and how to do the mappings.

00:27:27.600 --> 00:27:30.690
And more recently...

00:27:32.680 --> 00:27:39.250
What's called advanced video coding
was added to the MPEG-4 standard,

00:27:39.250 --> 00:27:42.120
and I'll say a bit more
about that in a bit as well.

00:27:42.120 --> 00:27:45.060
And you will see that the
numbers don't quite add up.

00:27:45.080 --> 00:27:48.650
There's more stuff that I don't think
is important to talk about right now.

00:27:51.920 --> 00:27:57.010
So let's take a look at some
of the recent developments.

00:28:00.450 --> 00:28:04.520
Hey, this slide was supposed
to have been hidden.

00:28:04.550 --> 00:28:07.360
I want to first say a little
bit more about the objects.

00:28:07.360 --> 00:28:10.120
I'll keep this a little bit brief.

00:28:10.260 --> 00:28:13.300
So we have video,
which basically goes from 10 kilobits

00:28:13.420 --> 00:28:16.400
per second to over a gigabit per second.

00:28:16.400 --> 00:28:19.300
So if you take one set of zeros out,
it's megabit.

00:28:19.300 --> 00:28:21.290
And if you take another
set of zeros out here,

00:28:21.300 --> 00:28:22.810
it's gigabit per second.

00:28:22.860 --> 00:28:26.950
And Sony actually has cameras
that support this stuff.

00:28:27.170 --> 00:28:30.560
Studio Profile, it's called.

00:28:30.600 --> 00:28:33.740
Multiple rectangular or arbitrary
shaped objects in the scene.

00:28:33.860 --> 00:28:38.170
Scalability is supported,
including fine-grained scalability.

00:28:38.300 --> 00:29:22.300
[Transcript missing]

00:29:23.680 --> 00:29:26.560
And there's a lot of stuff here,
and I should say some

00:29:26.600 --> 00:29:29.880
of this will be used,
and some of this will likely not be used.

00:29:29.980 --> 00:29:32.960
And that's quite okay,
because we have these profiles,

00:29:32.960 --> 00:29:35.040
and people will pick what they need.

00:29:36.870 --> 00:29:38.590
Again, with audio,
we can have a number of

00:29:38.590 --> 00:29:41.940
objects in the scene,
so you can make your audio composition.

00:29:41.940 --> 00:29:46.590
I think the most important codec in
MPEG-4 is MPEG-4 Advanced Audio Coding,

00:29:46.590 --> 00:29:48.700
which is very much like
MPEG-2 Advanced Audio Coding,

00:29:48.700 --> 00:29:52.440
it has a couple of new things.

00:29:53.090 --> 00:29:55.450
There's another audio codec
for really low bit rates,

00:29:55.550 --> 00:29:59.040
but AAC is getting really
low as well these days.

00:29:59.150 --> 00:30:01.740
And then there's one for
extremely low bit rates,

00:30:01.840 --> 00:30:04.840
which is called HILN.

00:30:04.960 --> 00:30:07.630
And then there's a voice codec,
actually two of them,

00:30:07.630 --> 00:30:11.170
one again for extremely low bit rates
and one of them for normal bit rates,

00:30:11.180 --> 00:30:15.460
and at 24 kilobits per second you have
just basically transparent voice quality

00:30:15.460 --> 00:30:20.580
you can't distinguish from real voice.

00:30:20.750 --> 00:30:24.190
And in audio,
you have again scalability so

00:30:24.190 --> 00:30:26.280
that you can have... Actually,
it's interesting.

00:30:26.280 --> 00:30:29.200
You can build an AAC layer
on a CALP layer if you wish,

00:30:29.200 --> 00:30:29.800
even.

00:30:29.800 --> 00:30:35.540
So you use the CALP layer as sort
of what's called the prediction,

00:30:35.540 --> 00:30:37.490
and then you can build...

00:30:37.660 --> 00:30:41.000
Then you can put an
AAC layer on it if you,

00:30:41.000 --> 00:30:43.170
for instance, do radio.

00:30:43.170 --> 00:30:46.150
The basic quality goes in kelp,
because it's mostly speech,

00:30:46.250 --> 00:30:47.700
and if you want to have
the really good quality,

00:30:47.700 --> 00:30:49.170
you do it in MPEG-4 AAC.

00:30:49.300 --> 00:30:53.970
And something like that is actually
done in Digital Radio Mondial,

00:30:53.970 --> 00:30:57.770
or DRM,
which is a digital broadcasting standard.

00:30:57.780 --> 00:30:58.970
MPEG-4 AAC

00:30:59.220 --> 00:31:03.060
And the conditions were such that
you have to be able to receive it

00:31:03.060 --> 00:31:06.290
in very poor reception conditions,
and then you have to get a good,

00:31:06.440 --> 00:31:09.170
really good quality signal
if you receive a good,

00:31:09.300 --> 00:31:13.810
just a good signal,
and that uses this type of scalability.

00:31:15.400 --> 00:31:30.600
[Transcript missing]

00:31:30.660 --> 00:31:32.800
The music itself.

00:31:32.840 --> 00:31:36.100
And this is really at one
or two kilobits per second,

00:31:36.100 --> 00:31:38.130
you can do really great music.

00:31:38.160 --> 00:31:42.480
And there's a company that's been
working on this for a long time,

00:31:42.480 --> 00:31:45.880
and they were going to
build a QuickTime plugin,

00:31:45.880 --> 00:31:48.630
and I hope they'll come out with it soon.

00:31:48.780 --> 00:31:51.330
It was promised for this summer.

00:31:51.480 --> 00:31:55.560
Media supported and a couple
of types of synthesis.

00:31:55.560 --> 00:31:57.770
And then there's this
text-to-speech interface,

00:31:57.880 --> 00:32:00.580
which you can use together
with face and body animation.

00:32:03.570 --> 00:32:09.280
Those were some of the
more esoteric object types.

00:32:09.500 --> 00:32:17.780
Support today in industry is for AAC and
for just normal rectangular video coding.

00:32:17.860 --> 00:32:20.750
And there's some companies
that are trying to do more

00:32:20.750 --> 00:32:25.240
interactive stuff with MPEG-4,
but they start with the systems layer.

00:32:25.450 --> 00:32:27.480
They have graphics,
they have arbitrary shape stuff,

00:32:27.640 --> 00:32:32.230
they have semi-transparent graphics,
and they use

00:32:32.420 --> 00:32:35.580
Notably, the binary scene description.

00:32:35.590 --> 00:32:38.520
As I explained,
it's inherited from Vermal,

00:32:38.520 --> 00:32:41.680
but it's much more efficient,
and it's added real time.

00:32:41.700 --> 00:32:44.340
It's basically married the MPEG-2.

00:32:44.340 --> 00:32:47.040
MPEG-2 came from the broadcast world,
right?

00:32:47.140 --> 00:32:49.860
So people know about
synchronizing audio and video,

00:32:49.860 --> 00:32:53.800
about synchronizing different objects,
and about buffer models and stuff.

00:32:53.810 --> 00:32:57.520
And the scene description marries
these concepts from Vermal and

00:32:57.520 --> 00:33:01.580
from MPEG-2 great broadcast,
great synchronization.

00:33:02.690 --> 00:33:05.040
That's what allows the interaction.

00:33:05.110 --> 00:33:08.840
It works in 2D and 3D,
and there's a couple of 3D

00:33:08.840 --> 00:33:10.600
players out there already.

00:33:10.600 --> 00:33:16.600
And it allows you to do
dynamic scene updates.

00:33:16.600 --> 00:33:18.560
You can add objects to
the scene on the fly,

00:33:18.680 --> 00:33:22.580
you can delete them,
and you can change them all on the fly

00:33:22.710 --> 00:33:25.600
by using this scene description language.

00:33:25.600 --> 00:33:29.090
And to provide an interface
with the smile world,

00:33:29.090 --> 00:33:33.630
and to make it better authorable,
MPEG later added what's called the

00:33:33.790 --> 00:33:38.690
extensible MPEG-4 textual format,
or XMT, which is basically a

00:33:38.700 --> 00:33:41.150
textual format for bits,
and there's actually

00:33:41.400 --> 00:33:42.600
two versions of them.

00:33:42.600 --> 00:33:45.600
One of them is very close to the bits,
and one of them is more generic,

00:33:45.600 --> 00:33:47.600
but I'll spare you those details.

00:33:47.670 --> 00:33:51.050
But the important part is that
there is a smile harmonization

00:33:51.050 --> 00:33:53.500
to the extent possible,
because there is a lot of

00:33:53.500 --> 00:33:54.560
smile content out there.

00:33:54.600 --> 00:33:55.600
Thank you.

00:33:58.820 --> 00:34:02.300
What's very important in MPEG-4
systems is that you do get predictable

00:34:02.300 --> 00:34:07.180
behavior of audio and video,
which hasn't always been

00:34:07.570 --> 00:34:12.740
the case with all the web,
the Internet technologies,

00:34:12.740 --> 00:34:15.180
and that you get predictable
buffer management,

00:34:15.180 --> 00:34:19.560
so that you know, if I send content,
it will play on the player,

00:34:19.560 --> 00:34:23.440
because the player knows what to expect,
it won't get trouble

00:34:23.540 --> 00:34:26.470
with buffer overflows,
it's all predictable and

00:34:26.580 --> 00:34:27.780
it's all standardized.

00:34:32.160 --> 00:34:35.920
There's some more stuff for smile
integration here in the timing,

00:34:35.920 --> 00:34:41.580
which you can basically do a more
loose timing of your objects.

00:34:41.710 --> 00:34:46.320
And what's important here is that
while MPEG-4 doesn't standardize

00:34:46.370 --> 00:34:52.220
digital rights management,
it has interfaces to proprietary systems.

00:34:53.920 --> 00:35:00.000
Digital rights management
is not going to go away.

00:35:00.820 --> 00:35:04.680
I think it actually could provide
some useful features for end users,

00:35:04.680 --> 00:35:09.330
even though it's been portrayed as
something that is hostile to end users.

00:35:09.390 --> 00:35:12.220
That's wrong.

00:35:12.220 --> 00:35:17.210
But in order for an ecosystem to support

00:35:20.500 --> 00:35:24.140
Serious content being
deployed in the ecosystem,

00:35:24.220 --> 00:35:26.240
something needs to be done
about this rights management.

00:35:26.240 --> 00:35:30.710
And I think Apple took a great
approach with what's being

00:35:30.710 --> 00:35:32.980
done right now in iTunes.

00:35:32.980 --> 00:35:37.200
It's very user-friendly,
and basically DRM needs to be,

00:35:37.200 --> 00:35:41.380
you don't see it if you make
normal use of your content.

00:35:41.380 --> 00:35:45.350
And that's what we're
getting to see these days.

00:35:46.620 --> 00:35:51.140
There's a standard interface in MPEG-4,
and there's MPEG-21,

00:35:51.140 --> 00:35:53.300
which will bring more
interoperability in DRM,

00:35:53.300 --> 00:35:57.620
which means it's no longer,
as it is today,

00:35:57.750 --> 00:36:02.500
the monopoly of one big company,
basically.

00:36:05.180 --> 00:36:07.380
And the file format,
I already said it a couple of times,

00:36:07.380 --> 00:36:13.240
is based on QuickTime MP4,
just like the .3GP file format,

00:36:13.240 --> 00:36:14.840
which is very close to MP4.

00:36:18.680 --> 00:36:24.160
Quickly wrapping this up, there's MPEG-J,
or Java, which you can use for

00:36:24.160 --> 00:36:28.520
really complicated content,
and for having programmed content,

00:36:28.520 --> 00:36:29.540
basically.

00:36:29.540 --> 00:36:32.530
But also standard APIs to find
out what you're talking to,

00:36:32.620 --> 00:36:35.060
what are the terminal
resources and stuff.

00:36:35.140 --> 00:36:37.930
And there's some
advanced audio rendering,

00:36:38.010 --> 00:36:43.320
where you can basically create the sound
without changing the source of the sound.

00:36:44.000 --> 00:36:47.410
You can describe the environment
in which it should be played,

00:36:47.520 --> 00:36:48.380
basically.

00:36:48.380 --> 00:36:52.030
You can say, okay, this is in a closet,
or this is in a giant hall,

00:36:52.030 --> 00:36:53.760
or this is a football field.

00:36:53.780 --> 00:36:57.760
You can describe this with
the audio rendering stuff.

00:37:02.570 --> 00:37:06.410
And I realize I'm giving you
a lot and a lot of details.

00:37:06.480 --> 00:37:10.900
Gonna build, we're gonna try and talk
about applications soon.

00:37:10.970 --> 00:37:14.210
But I have to make the case
for the profiles first.

00:37:14.550 --> 00:37:17.850
If you have this huge
toolbox of all this stuff,

00:37:17.970 --> 00:37:19.940
then in theory you would
have interoperability,

00:37:19.940 --> 00:37:23.240
but in practice there's not going
to be a lot of interoperability

00:37:23.310 --> 00:37:25.810
because everybody's going to be
implementing different things,

00:37:25.990 --> 00:37:26.240
right?

00:37:26.240 --> 00:37:30.490
Which is why MPEG defines profiles.

00:37:30.720 --> 00:37:33.140
And these profiles are
the conformance points,

00:37:33.250 --> 00:37:36.230
as we call them, which is, okay,
this is where you can

00:37:36.290 --> 00:37:38.150
test the interoperability.

00:37:38.220 --> 00:37:40.990
A profile basically determines a toolset.

00:37:41.040 --> 00:37:43.430
I use these tools to encode my video.

00:37:43.430 --> 00:37:45.940
I use these tools to encode my audio.

00:37:46.360 --> 00:37:51.080
And then the level within the
toolset limits the complexity.

00:37:51.110 --> 00:37:54.450
And stuff like, okay,
bits per second for video,

00:37:54.450 --> 00:37:58.290
or the screen size for video,
or the sample rate for audio,

00:37:58.290 --> 00:38:00.570
these things are in the levels.

00:38:02.890 --> 00:38:06.170
And if you take a look at the ISMA,
the Internet Streaming Media Alliance,

00:38:06.170 --> 00:38:08.400
they have said, okay,
we're going to use what's called

00:38:08.400 --> 00:38:10.820
advanced simple profile for the video.

00:38:10.820 --> 00:38:15.440
We're going to use low-complexity AAC,
MPEG-4 AAC for the audio.

00:38:15.440 --> 00:38:18.720
And we use the MP4 file format.

00:38:18.780 --> 00:38:20.630
And that's what we're all going to do.

00:38:20.640 --> 00:38:24.730
And now I have a, within ISMA,
I have an interoperable...

00:38:26.110 --> 00:38:30.040
stack,
and they add some transport to that,

00:38:30.040 --> 00:38:32.220
which is something MPEG-4 doesn't define.

00:38:32.230 --> 00:38:34.800
And then you have the interoperability.

00:38:35.190 --> 00:38:38.340
And it's interesting to see that
while MPEG-4 has many profiles,

00:38:38.340 --> 00:38:41.030
and I would say too many,
and I'm partly responsible for them as

00:38:41.030 --> 00:38:46.470
chair of the MPEG requirements group,
it's very good to see that industry

00:38:46.470 --> 00:38:48.740
is converging on just a few.

00:38:48.870 --> 00:38:50.580
Just a few.

00:38:51.290 --> 00:38:53.200
Which means there is
this interoperability.

00:38:53.760 --> 00:38:57.840
And the ones they are
choosing are hierarchical.

00:38:57.840 --> 00:39:00.410
So there's the simple profile
and advanced simple profile,

00:39:00.410 --> 00:39:01.840
which are mainly used in video.

00:39:01.840 --> 00:39:04.400
Simple is what is now in QuickTime.

00:39:04.400 --> 00:39:10.590
Advanced simple is what is in
some of the more advanced MPEG-4

00:39:10.590 --> 00:39:13.070
players and encoders and decoders.

00:39:13.120 --> 00:39:17.600
But they're compatible in the sense
that if you have simple content,

00:39:18.230 --> 00:39:20.000
simple profile content,
it will play in an

00:39:20.000 --> 00:39:22.430
advanced simple player.

00:39:23.180 --> 00:39:24.260
So that's good.

00:39:24.260 --> 00:39:27.440
And that's why you can see that
people are exchanging content.

00:39:27.470 --> 00:39:31.670
And DivX, for instance,
is an implementation of Advanced Simple.

00:39:34.490 --> 00:39:36.100
We have a couple of profile dimensions.

00:39:36.100 --> 00:39:39.400
I think this gets too technical
to go into real detail.

00:39:39.600 --> 00:39:43.340
But all the elements in
MPEG-4 have been profiled.

00:39:43.410 --> 00:39:47.510
That's basically the
point of this message.

00:39:51.060 --> 00:39:53.000
And actually,
I don't think there are handouts, right,

00:39:53.000 --> 00:39:56.660
at this conference, are there?

00:39:56.760 --> 00:39:59.660
So we'll make this available
on the MP4F website.

00:39:59.720 --> 00:40:01.360
Can we do this?

00:40:01.860 --> 00:40:02.560
I think so?

00:40:02.570 --> 00:40:02.730
Yeah.

00:40:02.730 --> 00:40:06.000
So we will make this presentation
available on the M4F website,

00:40:06.000 --> 00:40:09.860
and you can download it if
you later want to review it.

00:40:10.490 --> 00:40:12.500
Let's look at recent developments.

00:40:12.610 --> 00:40:15.770
This is a very interesting development.

00:40:16.680 --> 00:40:21.020
MPEG-4, as we know it today,
was standardized in 1998, 1999.

00:40:21.200 --> 00:40:22.940
Some stuff was added.

00:40:23.100 --> 00:40:25.170
That's four years ago.

00:40:28.910 --> 00:40:32.320
Very recently,
a new codec was added to MPEG-4.

00:40:32.320 --> 00:40:35.180
It's called Advanced Video Coding.

00:40:35.210 --> 00:40:37.600
And while MPEG-4

00:40:38.180 --> 00:40:41.380
As it was until this was added,
it was very attractive

00:40:41.380 --> 00:40:45.900
to mobile and Internet,
where there was no MPEG-2 yet.

00:40:46.580 --> 00:40:49.160
It wasn't attractive enough
yet to the broadcast,

00:40:49.300 --> 00:40:55.800
because in order to replace
the MPEG-2 infrastructure,

00:40:55.800 --> 00:40:58.240
or to add something to
the MPEG-2 infrastructure,

00:40:58.240 --> 00:41:03.210
you really need good advances
in coding efficiency.

00:41:03.320 --> 00:41:08.320
And while MPEG-4
Advanced Visual Profile provides this,

00:41:08.890 --> 00:41:14.140
It wasn't enough for these major
investments in the broadcast industry.

00:41:14.270 --> 00:41:17.760
It was enough for the internet
and for the mobile and stuff.

00:41:17.870 --> 00:41:21.080
But this new codec,
which is called Advanced Video Coding,

00:41:21.080 --> 00:41:25.040
which originally comes
from the ITU world,

00:41:25.170 --> 00:41:27.360
and they've been working on
this for a long time also,

00:41:27.360 --> 00:41:32.330
maybe the first I knew of the
project was 10 years ago basically.

00:41:32.780 --> 00:41:36.840
And it's the same codec
standardized in ITU and in ISO.

00:41:36.920 --> 00:41:40.800
It's actually basically,
there's two groups in the world that

00:41:40.800 --> 00:41:42.720
work on video coding standardization.

00:41:42.720 --> 00:41:45.320
There's the video coding
expert group in the ITU,

00:41:45.320 --> 00:41:47.160
the International Telecommunication
Union,

00:41:47.160 --> 00:41:50.460
and then there's ISO, MPEG.

00:41:50.560 --> 00:41:53.790
Came together,
formed the joint video team,

00:41:53.880 --> 00:41:58.020
hence the JVT codec,
and standardized this new codec,

00:41:58.070 --> 00:42:00.880
which beats everything out there.

00:42:00.940 --> 00:42:02.750
So forget about what
you hear from Microsoft.

00:42:02.880 --> 00:42:04.600
This is better.

00:42:04.960 --> 00:42:10.480
And this has been confirmed by
independent parties like LSI Logic,

00:42:10.480 --> 00:42:14.940
whom I have great respect for.

00:42:18.130 --> 00:42:21.090
And interestingly,
and again I will say more about that,

00:42:21.120 --> 00:42:24.490
improvements will continue because of
the fierce competition in this market.

00:42:24.490 --> 00:42:27.770
There's really fierce competition,
and we've only standardized the decoder,

00:42:27.800 --> 00:42:29.640
so people will come up
with amazing encoders,

00:42:29.640 --> 00:42:30.280
basically.

00:42:33.290 --> 00:42:40.610
And this will give you about broadcast
quality MPEG video at about 700

00:42:40.610 --> 00:42:44.520
kilobits to 1 megabit per second.

00:42:46.650 --> 00:42:48.920
Now that's significant,
because that starts to get in the

00:42:48.920 --> 00:42:52.110
range where you can do streaming
over a broadband network,

00:42:52.170 --> 00:42:57.160
over a good ADSL connection
or a good cable modem.

00:42:57.220 --> 00:42:59.460
It starts to get there.

00:43:00.170 --> 00:43:03.240
It's also good enough for
people to think about,

00:43:03.240 --> 00:43:07.500
okay, I'm investing in a new
generation set of boxes now.

00:43:07.500 --> 00:43:09.590
Maybe I should take a
look at this new codec.

00:43:11.960 --> 00:43:17.050
It's also good enough for this
to be implemented in mobile

00:43:17.050 --> 00:43:20.820
devices at some point in time.

00:43:21.330 --> 00:43:25.120
They already did support
the basic MPEG-4,

00:43:25.120 --> 00:43:27.270
as I could call it now,
and they will start

00:43:27.370 --> 00:43:29.320
supporting this stuff.

00:43:30.680 --> 00:43:38.380
And it's amazing that what Apple is
doing with the conferencing stuff,

00:43:38.380 --> 00:43:41.490
using MPEG-4 for conferencing,
there's a lot of people

00:43:41.490 --> 00:43:44.630
lining up to do this,
to use advanced video coding,

00:43:44.690 --> 00:43:47.490
or H.264 for conferencing.

00:43:47.870 --> 00:43:52.300
There's a lot of industries
waiting to start using this codec.

00:43:52.300 --> 00:43:56.430
And I'm sure, even though Apple never
discloses its product plans,

00:43:56.500 --> 00:43:59.450
not even to me,
I'm sure that they're working

00:43:59.450 --> 00:44:03.600
on this codec and they will
have it ready pretty soon.

00:44:04.310 --> 00:44:10.400
Then there's advanced audio coding and
high-efficiency advanced audio coding.

00:44:10.790 --> 00:44:16.040
Now with high efficiency,
it's a neat little trick where

00:44:16.120 --> 00:44:18.780
you split the spectrum in half,
and then you predict the

00:44:18.800 --> 00:44:19.900
upper half of the spectrum.

00:44:19.900 --> 00:44:22.260
For you,
this is the upper half of the spectrum

00:44:22.370 --> 00:44:24.360
from the lower half of the spectrum.

00:44:24.360 --> 00:44:29.580
And if you do CD quality,
or near-CD quality, or really good audio,

00:44:29.580 --> 00:44:34.140
just basically Internet quality,
this gives you a lot,

00:44:34.250 --> 00:44:37.260
really a lot of bandwidth savings.

00:44:37.600 --> 00:44:42.280
Like CD quality, or about CD quality at
48 kilobits per second,

00:44:42.280 --> 00:44:45.240
and high quality at,
just general Internet quality

00:44:45.240 --> 00:44:47.260
at 32 kilobits per second.

00:44:49.130 --> 00:44:51.560
The trick doesn't work
for transparent quality.

00:44:51.560 --> 00:44:53.940
So if you want to have
really transparent quality,

00:44:53.940 --> 00:44:57.070
which is something that
iTunes is trying to achieve,

00:44:57.420 --> 00:44:59.330
then you would still use normal AAC.

00:44:59.420 --> 00:45:02.260
Then you don't gain anything
from this prediction trick.

00:45:02.260 --> 00:45:05.960
But it's really neat,
and it's being used in

00:45:05.960 --> 00:45:11.760
XM Radio and Digital Radio Mondial,
or DRM, for their broadcasts,

00:45:11.770 --> 00:45:14.130
because it works so well.

00:45:15.170 --> 00:45:17.990
And now AAC,
and including high-efficiency AAC,

00:45:17.990 --> 00:45:22.600
have been tested as the best-coded
by the European Broadcasting

00:45:22.600 --> 00:45:24.910
Union over all the proprietary codecs.

00:45:24.960 --> 00:45:26.920
And that's what's being shown here.

00:45:26.920 --> 00:45:30.460
And this should actually say AAC,
Advanced Audio Coding.

00:45:30.460 --> 00:45:34.640
This is the original,
and then you see high-efficiency AAC,

00:45:34.640 --> 00:45:40.590
which was tested in one specific
implementation called AAC+. Whoops.

00:45:40.620 --> 00:45:45.670
And then you see AAMP3 Pro,
which actually is AAC+. AAMP3

00:45:45.670 --> 00:45:49.420
with the same trick applied,
the same prediction trick.

00:45:49.470 --> 00:45:52.880
And you see Windows Media here,
and Reel here.

00:45:52.880 --> 00:45:55.550
And Windows Media 9,
I have been explained

00:45:55.550 --> 00:45:58.420
by Audio Coding Expert,
doesn't really differ a

00:45:58.430 --> 00:46:00.280
lot from Windows Media 8.

00:46:03.900 --> 00:46:06.200
So this was a test at
48 kilobits per second.

00:46:06.200 --> 00:46:12.960
And, whoops,
why does it do this if I don't want it?

00:46:15.000 --> 00:46:17.000
Hello.

00:46:17.200 --> 00:46:21.400
48 kilobits per second, done by the EBU,
which is really independent.

00:46:21.410 --> 00:46:24.710
And this was a really professional test,
double blind,

00:46:24.830 --> 00:46:28.400
which means people don't know
what they're listening to.

00:46:28.510 --> 00:46:32.800
And basically, because audio testing
is a lot like voodoo,

00:46:32.840 --> 00:46:37.340
and if the experimenter
knows what's being tested,

00:46:37.340 --> 00:46:39.600
he can make you believe anything.

00:46:39.720 --> 00:46:42.890
And if you know what you're listening to,
you can also be made

00:46:42.890 --> 00:46:45.190
to believe everything,
or anything.

00:46:45.340 --> 00:46:48.230
But if it's double blind,
and neither the experimenter nor

00:46:48.230 --> 00:46:52.500
the listener knows what's going on,
then you get really valid results.

00:46:52.580 --> 00:46:55.060
And that's what happened in this test.

00:46:58.690 --> 00:47:01.030
Couple of other developments.

00:47:01.040 --> 00:47:03.400
Some work going on on
truly 3D video coding.

00:47:03.700 --> 00:47:06.140
That's very advanced.

00:47:06.490 --> 00:47:09.600
Some work going on on truly
lossless audio coding.

00:47:09.730 --> 00:47:10.920
That's also for the high-end.

00:47:10.960 --> 00:47:15.790
And there's some work going on on a
very interesting animation framework,

00:47:15.790 --> 00:47:19.200
which actually takes
a step back and says,

00:47:19.200 --> 00:47:20.940
okay, let's do this right,
this animation.

00:47:20.960 --> 00:47:24.960
Let's create an integrated
framework for animation of

00:47:24.960 --> 00:47:27.450
all sorts of graphics content.

00:47:27.520 --> 00:47:29.960
It's not for video content
or for just natural audio,

00:47:29.960 --> 00:47:32.650
but for computer-generated content.

00:47:32.660 --> 00:47:35.330
And we'll see where that goes.

00:47:39.300 --> 00:47:43.600
So why should you use MPEG-4,
apart from the technical details?

00:47:43.640 --> 00:47:46.730
And this is going in the business stuff.

00:47:47.060 --> 00:47:48.940
I'll quickly go over this.

00:47:48.940 --> 00:47:54.240
I think if you're a developer,
this may interest you

00:47:54.240 --> 00:47:56.160
just a little bit less.

00:47:56.180 --> 00:48:00.980
But let's just take a look at
standards and why they make sense.

00:48:00.980 --> 00:48:02.470
They fuel a lot of innovation.

00:48:02.580 --> 00:48:06.420
And actually, this slide,
I have to acknowledge Tim Schaaf,

00:48:06.420 --> 00:48:12.130
who originally made this slide,
for giving me this slide.

00:48:12.610 --> 00:48:14.400
Standards Fuel Innovation.

00:48:14.400 --> 00:48:18.040
GSM is a great example, the European,
or actually now worldwide

00:48:18.040 --> 00:48:20.500
standard for mobile telephony.

00:48:20.550 --> 00:48:27.070
N802.11, also known under
different names at Apple,

00:48:27.290 --> 00:48:29.280
but you can connect here
to your wireless network.

00:48:29.310 --> 00:48:31.760
It just works great.

00:48:32.160 --> 00:48:34.870
They have really long life standards.

00:48:34.870 --> 00:48:39.200
If you look at the TV standards like
PAL in Europe and NTSC in the US,

00:48:39.200 --> 00:48:42.250
or MP3,
which is actually over 10 years old now,

00:48:42.270 --> 00:48:44.540
but is still a premium feature.

00:48:44.540 --> 00:48:49.860
If you buy a car stereo,
MP3 comes at a price.

00:48:49.860 --> 00:48:54.760
It's being built into car stereos
and stuff and digital devices today,

00:48:54.760 --> 00:48:56.830
and it will not go away.

00:48:57.060 --> 00:49:02.670
No matter how great the successors are,
this will have to,

00:49:02.670 --> 00:49:05.720
this will keep being supported.

00:49:09.180 --> 00:49:12.070
That means that as a consumer,
you don't have to throw away formats

00:49:12.520 --> 00:49:14.900
every other year or every year.

00:49:14.910 --> 00:49:17.800
You can just keep your
stuff and it keeps working.

00:49:17.870 --> 00:49:19.200
VHS has had a long life.

00:49:19.440 --> 00:49:22.980
The CD has been with
us for over 20 years.

00:49:25.070 --> 00:49:28.740
Standards create huge markets.

00:49:28.740 --> 00:49:32.290
The CD, the DVD, and MPEG-2,
which is a...

00:49:33.440 --> 00:49:38.990
Which are really, really multi-tens,
hundreds of billions of dollars markets.

00:49:40.100 --> 00:49:42.720
And they provide an interoperable
ecosystem of tools and content

00:49:42.720 --> 00:49:45.280
where you can just use stuff
from different providers and

00:49:45.280 --> 00:49:46.400
plug them together and it works.

00:49:46.440 --> 00:49:50.630
And these different providers can
work independent of one master,

00:49:50.730 --> 00:49:51.610
so to speak.

00:49:51.720 --> 00:49:53.940
You're not dependent on anyone.

00:49:54.070 --> 00:49:57.440
You're not locked into any single vendor.

00:49:57.640 --> 00:50:01.000
And the vendor may be competing with you,
by the way,

00:50:01.020 --> 00:50:04.310
if it moves into different spaces.

00:50:05.180 --> 00:50:08.670
And there are,
the pricing is controlled by the market

00:50:08.770 --> 00:50:10.730
and not by a single vendor again.

00:50:10.740 --> 00:50:13.870
And if you don't like your
equipment from one vendor,

00:50:13.870 --> 00:50:15.570
you can go to the other one.

00:50:19.670 --> 00:50:25.990
So, if you use MPEG-4,
a couple benefits for you.

00:50:26.920 --> 00:50:29.320
You can author your content once
and then use it on a couple of

00:50:29.320 --> 00:50:32.230
different mini platforms and players.

00:50:32.260 --> 00:50:33.570
Encode once.

00:50:33.840 --> 00:50:35.460
You may have to encode
at different bit rates,

00:50:35.640 --> 00:50:39.190
but like was shown this morning,
this can be made really easy.

00:50:39.200 --> 00:50:42.390
Your users can pick their favorite stuff.

00:50:42.620 --> 00:50:44.420
They don't have to stick to one player.

00:50:44.660 --> 00:50:48.080
Content providers, on the other hand,
can pick their favorite stuff.

00:50:48.400 --> 00:50:51.500
Everybody can just provide
tools in their own niche.

00:50:51.640 --> 00:50:55.450
There's a lot of different niches,
and it isn't like one size fits all.

00:50:55.520 --> 00:51:00.710
Compete And competition
drives the quality up.

00:51:03.020 --> 00:51:08.000
If you look at MPEG-4,
it's both a revolution and an evolution.

00:51:08.070 --> 00:51:12.210
It's a revolution in what
I explained about the design,

00:51:12.210 --> 00:51:15.000
how it works and how it can
expand to synthetic content.

00:51:15.000 --> 00:51:17.830
It's an evolution in the sense
that it doesn't define new

00:51:17.830 --> 00:51:20.960
transport protocols and stuff,
you can just use it on whatever

00:51:20.960 --> 00:51:23.000
is there already in place.

00:51:23.000 --> 00:51:26.840
And specifically,
in MPEG-4 as it is today,

00:51:27.000 --> 00:51:30.000
and MPEG-4 with AVC,
Advanced Video Coding,

00:51:30.000 --> 00:51:32.810
as it's coming now, it can all be used in
an MPEG-2 environment,

00:51:32.810 --> 00:51:34.870
which is a very big plus
for broadcasters again.

00:51:35.000 --> 00:51:39.990
They don't have to replace all
their MPEG-2 broadcasting stuff,

00:51:40.000 --> 00:51:42.000
they just need to plug in a new codec.

00:51:42.000 --> 00:51:47.170
Which is difficult enough,
but if the gains are good enough,

00:51:47.210 --> 00:51:49.970
then the economics are sound.

00:51:52.130 --> 00:51:57.390
So it saves you money,
and it makes you money, I believe,

00:51:57.390 --> 00:52:01.080
by making more efficient
use of bandwidth,

00:52:01.150 --> 00:52:04.580
because it's efficient,
by being able to repurpose existing

00:52:04.580 --> 00:52:08.480
content and now making it interactive,
or deploying it on a mobile network.

00:52:08.540 --> 00:52:14.140
No need to duplicate work if
you go to different networks.

00:52:16.230 --> 00:52:18.630
You can integrate it into
existing MPEG-2 environments,

00:52:18.630 --> 00:52:21.980
and you can use it on
IP networks just as easily.

00:52:22.040 --> 00:52:25.790
And it makes you money,
because you can use your content

00:52:25.790 --> 00:52:30.360
in your networks in new ways,
you can add new dimensions to content,

00:52:30.360 --> 00:52:35.810
and there's little risk because it's
a standard that's widely supported.

00:52:36.570 --> 00:52:39.940
Proprietary technology,
on the other hand,

00:52:40.010 --> 00:52:44.800
does lock you into third-party
business and pricing models,

00:52:44.800 --> 00:52:48.720
and make you dependent on their
roadmaps and their plans and the way

00:52:48.720 --> 00:52:51.060
they choose to evolve their business.

00:52:51.060 --> 00:52:54.670
And it can get you
into channel conflicts.

00:52:57.080 --> 00:53:00.100
So this is just one of the forecasts.

00:53:00.100 --> 00:53:02.500
This is of chips.

00:53:02.860 --> 00:53:06.790
Standalone MPEG-4 chips and
cores embedded in processors.

00:53:06.820 --> 00:53:10.980
They think it will explode,
and it's already happening.

00:53:10.980 --> 00:53:12.560
I tend to agree.

00:53:12.560 --> 00:53:18.070
And there are many similar forecasts,
and one interesting trend is, okay,

00:53:18.190 --> 00:53:22.580
for the coming few years,
competition with Windows Media,

00:53:22.580 --> 00:53:27.300
after that, standard will win,
because the benefits are just

00:53:27.340 --> 00:53:31.160
so obvious that the market
will choose for the standard.

00:53:32.100 --> 00:53:38.890
And there's such a lot of people
already making MPEG-4 stuff.

00:53:39.590 --> 00:53:40.500
It's amazing.

00:53:40.500 --> 00:53:45.560
Now, this is an important point,
and I want to dwell on this for a while.

00:53:45.560 --> 00:53:49.200
Because MPEG-4 only
standardizes the decoder,

00:53:49.200 --> 00:53:52.100
there's a lot of room for innovation.

00:53:52.440 --> 00:53:56.960
And if you see comparisons,
and I've seen very bad comparisons of,

00:53:57.620 --> 00:54:01.520
notably by Microsoft,
that put QuickTime here,

00:54:01.520 --> 00:54:05.110
and then their latest, Microsoft's latest
codec on the other hand,

00:54:05.130 --> 00:54:09.020
and then they compare the quality without
saying that they're only using Quick,

00:54:09.020 --> 00:54:11.800
a simple profile for MPEG-4,
and that they did the

00:54:11.800 --> 00:54:13.240
encoding themselves.

00:54:13.240 --> 00:54:15.300
I mean,
there's such a lot of tricks you can

00:54:15.300 --> 00:54:17.300
pull if you do quality comparisons.

00:54:18.850 --> 00:54:21.000
But, if I look at MPEG-2,
and this is really the

00:54:21.000 --> 00:54:24.370
proof of the pudding,
MPEG-2 bit rates have reduced by over

00:54:24.370 --> 00:54:28.530
50% over the lifetime of the standard,
and this is an underestimation.

00:54:28.540 --> 00:54:29.780
I will show you the graphs.

00:54:29.780 --> 00:54:32.640
And this was after the
standard was frozen,

00:54:32.820 --> 00:54:35.810
and without needing to
replace the decoders.

00:54:37.740 --> 00:54:41.070
A great new encoder comes out,
it just gets plugged into

00:54:41.070 --> 00:54:43.590
the broadcasting system,
you don't need to replace

00:54:43.730 --> 00:54:44.680
the set-top boxes.

00:54:44.800 --> 00:54:46.940
Just works.

00:54:46.970 --> 00:54:51.520
People come up with great
new tools for encoding DVDs.

00:54:51.580 --> 00:54:54.140
DVD players don't need to be replaced.

00:54:54.190 --> 00:54:57.750
Because the decoder is the same,
the encoder gets better.

00:54:57.810 --> 00:55:00.750
And that's what's happening
with MPEG-4 in the market today.

00:55:00.840 --> 00:55:03.550
And that's what will happen,
really happen,

00:55:03.550 --> 00:55:07.580
with advanced video coding,
what's already happening today.

00:55:08.120 --> 00:55:12.650
AVC will beat all the proprietary
codecs already up there,

00:55:12.790 --> 00:55:15.160
including Windows Media 9.

00:55:15.840 --> 00:55:18.600
And if I look at... That's interesting.

00:55:18.600 --> 00:55:26.000
You should disregard the numbers here,
because they are wrong.

00:55:26.750 --> 00:55:29.310
What's actually right,
I thought we hit this stuff.

00:55:29.310 --> 00:55:32.230
Someone's phone is ringing.

00:55:32.240 --> 00:55:36.080
This should be 6 megabits per second.

00:55:36.080 --> 00:55:39.640
When it started in 1994, 1995.

00:55:39.730 --> 00:55:43.320
Today, you can deliver the same quality
in 2 megabits per second.

00:55:43.800 --> 00:55:47.060
So it's not like suggested 1 megabit,
it's 2 megabits per second.

00:55:47.060 --> 00:55:50.000
But still, from 6 megabits per second
to 2 megabits per second,

00:55:50.430 --> 00:55:51.910
without changing the decoders.

00:55:51.920 --> 00:55:54.280
That's quite impressive.

00:55:54.390 --> 00:55:55.320
And that's from Harmonic.

00:55:55.380 --> 00:55:57.870
And if I take a look
at what Tenberg says,

00:55:57.870 --> 00:56:03.300
Tenberg TV, is a competitor of Harmonic,
they basically tell you the same story.

00:56:03.300 --> 00:56:06.580
With them, the graph should start
at 8 megabits per second.

00:56:06.600 --> 00:56:11.090
And now, whoops, this should have read 8,
and here again it should have

00:56:11.090 --> 00:56:13.180
read 2 megabits per second.

00:56:13.600 --> 00:56:18.920
Something went wrong on the
conversion from PowerPoint to Keynote.

00:56:19.360 --> 00:56:20.320
The picture is clear.

00:56:20.480 --> 00:56:23.670
From 6 megabits or from 8 megabits
per second to 2 megabits per

00:56:23.670 --> 00:56:27.450
second today is huge improvements
because there is competition.

00:56:27.460 --> 00:56:30.080
So there's open standards,
it's interoperability,

00:56:30.080 --> 00:56:32.270
but there's a lot of
room for competition.

00:56:35.200 --> 00:56:38.650
So briefly,
let's look at the deployments of MPEG-4.

00:56:38.750 --> 00:56:42.850
We see PC media player support,
and a recent survey turned up on the

00:56:42.890 --> 00:56:49.360
MPEG-4 M4F tech notes mailing list,
turned up like some 20 different players.

00:56:49.400 --> 00:56:53.100
And some of them are for facial
animation and for 3D content.

00:56:53.100 --> 00:56:57.690
Most of them do basic streaming.

00:56:58.130 --> 00:57:01.240
QuickTime 6 is there, of course.

00:57:01.280 --> 00:57:04.760
Reel has a standard plugin,
which means if you hit MP4

00:57:04.760 --> 00:57:07.440
content with a Reel player,
it goes back to the Reel server,

00:57:07.560 --> 00:57:09.790
downloads a plugin if
it's not already there,

00:57:10.000 --> 00:57:12.800
and decodes the content.

00:57:12.800 --> 00:57:15.320
That's done by NVivio.

00:57:15.320 --> 00:57:18.600
There are several plugins
for Windows Media.

00:57:18.600 --> 00:57:22.330
There's DivX,
which is an MP4-compliant implementation,

00:57:22.330 --> 00:57:27.880
which has millions of downloads weekly,
just like QuickTime.

00:57:28.460 --> 00:57:33.040
MPEG-4 is widely supported
in 3rd generation and 2.5G

00:57:33.040 --> 00:57:34.800
mobile phone networks.

00:57:34.820 --> 00:57:40.400
Like Roberto CastaÃ±o said this morning,
it really becomes the case that in spite

00:57:40.400 --> 00:57:43.600
of all these different mobile networks,
which are not really interoperable,

00:57:43.770 --> 00:57:48.330
you can take content from one of them
in Japan and move them to Europe,

00:57:48.330 --> 00:57:50.150
and the content will play.

00:57:50.810 --> 00:57:53.310
So you can take your phone to Japan,
but you can send your

00:57:53.310 --> 00:57:56.390
content using the phones,
and it will play.

00:57:57.180 --> 00:57:59.810
MPEG-4 is used for video.

00:57:59.810 --> 00:58:03.070
AAC is the optional sound codec,
in addition to the

00:58:03.070 --> 00:58:05.000
mandatory speech codec.

00:58:05.100 --> 00:58:11.500
And the file format, like we said,
3.3GP is very close to MP4.

00:58:11.500 --> 00:58:18.790
It's just this top-level Atom
and the AMR codec that's used.

00:58:20.010 --> 00:58:26.230
Quick Term 6.3, recently released,
of course, supports 3GPP.

00:58:27.150 --> 00:58:30.400
Then the Internet Streaming
Media Alliance.

00:58:30.400 --> 00:58:33.870
I've said a couple of
words about that already.

00:58:33.930 --> 00:58:38.360
Made a specification for interoperable
MPEG-4 across the Internet.

00:58:40.160 --> 00:58:48.210
What's maybe more hidden in the
background is that MPEG-4 is

00:58:48.210 --> 00:58:52.510
becoming the de facto standard
for security and surveillance.

00:58:53.540 --> 00:58:58.400
There's a lot of surveillance cameras
with hard disk recorders and stuff

00:58:58.400 --> 00:59:02.060
that just use MPEG-4s almost silently,
because we don't, and I don't,

00:59:02.060 --> 00:59:03.400
get to hear a lot about them.

00:59:03.400 --> 00:59:07.270
And interestingly,
you see a lot of home media

00:59:07.270 --> 00:59:09.390
centers that do MPEG-4.

00:59:09.880 --> 00:59:13.340
And people use DivX to rip their content,
and then they put it on a DVD,

00:59:13.340 --> 00:59:17.920
and they put it in the DVD player,
and the DVD understands MPEG-4.

00:59:21.830 --> 00:59:23.800
And these are just a couple
of recent announcements,

00:59:23.800 --> 00:59:26.780
and I won't mention them all,
but there's chips, there's video cameras,

00:59:26.780 --> 00:59:29.440
there's solid-state video cameras.

00:59:29.440 --> 00:59:30.100
These are cool.

00:59:30.100 --> 00:59:35.320
These are just this size, basically,
and you can record on an SD card

00:59:35.470 --> 00:59:38.280
or a memory stick or something.

00:59:38.280 --> 00:59:45.320
You can record a half an hour of video
and audio that's watchable on a TV.

00:59:45.320 --> 00:59:49.300
I won't say it's like DVD quality,
but it's perfectly watchable,

00:59:49.370 --> 00:59:51.130
just on a device this size.

00:59:51.800 --> 00:59:55.680
There's portable stuff,
and it's coming more, like there's video

00:59:55.730 --> 00:59:57.100
jukeboxes that use MPEG-4.

00:59:57.100 --> 01:00:00.660
And there's, of course,
mobile phones that don't just decode,

01:00:00.710 --> 01:00:02.510
but some of them also stream it.

01:00:02.620 --> 01:00:06.760
So it's not just in,
or it's not just recording.

01:00:06.760 --> 01:00:09.360
Some of them can even play it
out while it's being recorded.

01:00:09.360 --> 01:00:10.160
It's pretty cool.

01:00:14.420 --> 01:00:17.600
So lastly,
I want to say a couple of words

01:00:17.600 --> 01:00:20.390
about the MPEG-4 Industry Forum.

01:00:20.410 --> 01:00:25.360
And in that context,
even though we're not responsible for it,

01:00:25.360 --> 01:00:26.920
about licensing of MPEG-4.

01:00:26.920 --> 01:00:29.620
Because some of you may have--
who's heard about licensing here,

01:00:29.620 --> 01:00:30.880
by the way?

01:00:30.880 --> 01:00:32.260
Yes, right.

01:00:32.500 --> 01:00:35.080
OK, so come back here Thursday morning.

01:00:35.080 --> 01:00:38.240
I won't be here, unfortunately,
because we have our annual M4F meeting.

01:00:38.240 --> 01:00:41.300
But someone will be here to explain.

01:00:42.210 --> 01:00:44.800
So let me say a couple of words.

01:00:44.800 --> 01:00:46.940
We're three-year-old now.

01:00:46.940 --> 01:00:50.380
About 100 members we have
worldwide and across industries,

01:00:50.420 --> 01:00:53.070
very much according to MPEG-4's vision.

01:00:53.120 --> 01:00:55.730
A nonprofit organization.

01:00:56.270 --> 01:01:00.280
We have these and many other members.

01:01:00.330 --> 01:01:03.680
Apple is, of course, there.

01:01:04.200 --> 01:01:08.600
And you see a lot of major companies,
but there are also smaller ones.

01:01:08.710 --> 01:01:10.770
And they come from IT,
they come from the consumer

01:01:10.770 --> 01:01:13.270
electronics industry,
they come from the mobile operators,

01:01:13.350 --> 01:01:17.300
they come from all across the
globe and all across the industry.

01:01:17.300 --> 01:01:22.550
And they all believe in this single
standard that works across everything.

01:01:22.670 --> 01:01:27.960
Our goal is to get MPEG-4 adopted,
and we have done a couple of

01:01:27.960 --> 01:01:29.700
things that are important.

01:01:29.700 --> 01:01:32.770
We've discussed licensing a lot.

01:01:33.090 --> 01:01:35.400
Again, I will say we're not
responsible for licensing.

01:01:35.400 --> 01:01:37.720
I'll clarify that in a later slide.

01:01:37.720 --> 01:01:40.780
We've done a lot of interoperability
with a program with over

01:01:40.780 --> 01:01:44.520
30 companies exchanging
bitstreams between their products.

01:01:44.520 --> 01:01:51.180
We will have a logo program pretty soon,
and if you type in MPEG-4 in Google,

01:01:51.180 --> 01:01:55.160
you come to the M4AF website and
you get a host of information.

01:01:58.120 --> 01:01:59.040
And this is our membership.

01:01:59.100 --> 01:02:03.100
If you're interested,
$3,000 for a full membership

01:02:03.100 --> 01:02:05.930
and $300 for not-for-profits.

01:02:07.700 --> 01:02:25.300
[Transcript missing]

01:02:26.110 --> 01:02:30.560
But the responsibilities are as follows:
MPEG standardizes.

01:02:30.700 --> 01:02:33.410
So MPEG is the
Moving Picture Experts Group,

01:02:33.410 --> 01:02:34.760
makes the standards.

01:02:34.850 --> 01:02:37.750
And by ISO rules,
they can't really deal with licensing.

01:02:37.870 --> 01:02:42.100
Although, with the new codec,
there's been a lot of effort to

01:02:42.160 --> 01:02:46.580
get a royalty-free baseline codec,
which is the simplest incarnation,

01:02:46.580 --> 01:02:49.870
it's a profile,
and there's been a lot of effort to try

01:02:49.890 --> 01:02:52.740
to keep this royalty-free for licensing.

01:02:52.920 --> 01:02:57.160
Then there's the MPEG-4 industry forum,
which has done a lot of work to

01:02:57.530 --> 01:03:01.640
To get licensing off the ground,
but doesn't see anything of the proceeds,

01:03:01.790 --> 01:03:05.040
doesn't require anything of its
members with respect to licensing,

01:03:05.040 --> 01:03:08.000
it's just literally a catalyst.

01:03:08.000 --> 01:03:12.290
If you know how a catalyst works,
before and after the chemical reaction,

01:03:12.420 --> 01:03:14.230
the catalyst is unchanged.

01:03:14.280 --> 01:03:18.320
Well, if the reaction goes really bad,
the catalyst may go away.

01:03:18.340 --> 01:03:21.240
It may still happen.

01:03:21.240 --> 01:03:24.340
But then there's the license source.

01:03:24.340 --> 01:03:26.950
That's the people that actually have
patents that sit together in some

01:03:26.950 --> 01:03:28.660
room and decide and sell licenses.

01:03:28.660 --> 01:03:33.520
And what M4AF says,
the licenses need to be competitive.

01:03:33.520 --> 01:03:36.290
It should be possible to
build competitive products,

01:03:36.330 --> 01:03:37.630
given the licensing.

01:03:37.860 --> 01:03:39.820
So that's what we're
working on right now,

01:03:39.820 --> 01:03:43.100
still working on right now,
and actually working on really hard

01:03:43.170 --> 01:03:45.020
right now to get this right for AVC.

01:03:45.020 --> 01:03:49.020
Because we know some things
need to be improved there.

01:03:53.760 --> 01:03:57.870
Monday morning, Larry Horn, I think,
of MPEG-LA will be here to answer

01:03:57.870 --> 01:03:59.300
your questions about licensing.

01:03:59.300 --> 01:04:01.860
He's going to tell you what's called
the truth about MPEG-4 licensing.

01:04:01.860 --> 01:04:05.170
My personal opinion is that
it's great for devices,

01:04:05.170 --> 01:04:08.320
it's great for phones,
it doesn't work yet

01:04:08.320 --> 01:04:09.660
for content providers.

01:04:09.660 --> 01:04:11.530
That's what we're working on right now.

01:04:11.540 --> 01:04:15.510
And there's a lot riding on this,
I can tell you.

01:04:15.520 --> 01:04:21.320
Hey, I hadn't expected this slide.

01:04:21.380 --> 01:04:23.000
Aimee.

01:04:37.700 --> 01:05:04.950
MPEG-4 is an all-encompassing
specification,

01:05:04.950 --> 01:05:05.300
with many profiles and
technologies that cover the

01:05:05.300 --> 01:05:05.700
entire spectrum of digital media.

01:05:05.700 --> 01:05:05.850
This session provides an in-depth
look at the MPEG-4 specification,

01:05:05.850 --> 01:05:05.850
and explain how these
technologies benefit you.

01:05:05.850 --> 01:05:05.850
Aimee Nugent, Rob Koenen