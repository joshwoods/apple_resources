WEBVTT

00:00:24.680 --> 00:00:26.920
Good afternoon and
welcome to session 719,

00:00:27.100 --> 00:00:28.900
Administering QuickTime Streaming Server.

00:00:28.900 --> 00:00:30.480
My name is Stephen Tonna.

00:00:30.480 --> 00:00:32.860
I'm a product manager on the
QuickTime product marketing team.

00:00:32.860 --> 00:00:35.620
And I just want to remind you
that if you have any questions,

00:00:35.620 --> 00:00:37.340
if you can hold them until the end,
that'd be great.

00:00:37.360 --> 00:00:40.260
And then just line up at a
microphone so that we can have the

00:00:40.520 --> 00:00:42.540
whole session translated properly.

00:00:42.540 --> 00:00:45.320
And without further ado,
I'd like to introduce Chris LeCroy,

00:00:45.320 --> 00:00:47.830
who is an engineering manager
on the server team at Apple.

00:00:55.400 --> 00:01:01.680
Hi, I'm Chris LeCroy.

00:01:01.680 --> 00:01:08.920
I've been working on the streaming
server since its inception.

00:01:09.010 --> 00:01:11.500
QuickTime Streaming Server was
actually a part of the very

00:01:11.500 --> 00:01:12.780
first release of Mac OS X Server.

00:01:12.780 --> 00:01:15.340
It started out as
QuickTime Streaming Server version 1.

00:01:15.340 --> 00:01:18.950
It's been in every version since then.

00:01:19.080 --> 00:01:21.860
With Panther, we're announcing
QuickTime Streaming Server 5.

00:01:21.870 --> 00:01:26.240
It's got some new features
that are actually pretty nice.

00:01:26.240 --> 00:01:28.330
We've got things like
home directory support.

00:01:28.410 --> 00:01:33.590
We've really tightened down the
security of the server so it's even

00:01:33.590 --> 00:01:36.060
more secure than it was before.

00:01:36.060 --> 00:01:39.110
We have written a new
administration application.

00:01:39.110 --> 00:01:42.980
We've written a new content
management application.

00:01:42.980 --> 00:01:45.420
We've made it more tightly integrated
with Mac OS X Server as a whole,

00:01:45.510 --> 00:01:51.920
so it integrates with some of the
other services on Mac OS X Server.

00:01:51.920 --> 00:01:54.530
We are going to show you a
little bit of that today.

00:01:54.600 --> 00:01:58.070
First, I'm going to have
somebody come up and demo,

00:01:58.260 --> 00:02:02.200
somebody, John Anderson,
demo the new admin.

00:02:02.320 --> 00:02:05.520
We'll take a look at the
content management tools.

00:02:05.540 --> 00:02:08.880
Then I'm going to give everybody
an opportunity to maybe fall

00:02:08.880 --> 00:02:12.720
asleep because I'm going to go
into some advanced administration.

00:02:12.720 --> 00:02:14.960
My goal is to see how many people
either walk out or fall asleep.

00:02:14.960 --> 00:02:16.660
If I can do half the room,
I'm doing really well.

00:02:16.660 --> 00:02:19.680
We're going to get
really esoteric in here.

00:02:20.230 --> 00:02:20.420
Okay.

00:02:20.420 --> 00:02:22.820
So the new admin.

00:02:22.820 --> 00:02:28.660
This is a native Mac OS X application,
or it's a plug-in actually.

00:02:28.660 --> 00:02:30.960
It's a plug-in to the
Mac OS X server admin.

00:02:30.960 --> 00:02:34.110
So it's completely integrated with all
of the other services on the admin,

00:02:34.110 --> 00:02:36.320
or other services on the
server inside the admin.

00:02:36.320 --> 00:02:38.150
It's not web-based.

00:02:38.240 --> 00:02:41.560
So in the past, I think beginning with
QuickTime Streaming Server 3,

00:02:41.640 --> 00:02:42.800
we had a web-based admin.

00:02:42.800 --> 00:02:43.930
This is not web-based.

00:02:43.930 --> 00:02:46.180
This is a Mac OS X Cocoa application.

00:02:47.980 --> 00:02:50.570
We do still provide the web-based admin,
though, and there are a couple

00:02:50.660 --> 00:02:51.530
of reasons for that.

00:02:51.570 --> 00:02:53.880
One is that maybe you're not
going to be on a Macintosh

00:02:53.880 --> 00:02:55.310
when you need to administer.

00:02:55.340 --> 00:02:57.870
So if you're on a Windows machine
or a Linux machine,

00:02:57.870 --> 00:03:01.640
you can still get into the web-based
admin and make changes to the server.

00:03:01.640 --> 00:03:04.200
The other reason is that
QuickTime Streaming Server is

00:03:04.330 --> 00:03:07.420
the version of the server that
we ship with Mac OS X Server.

00:03:07.500 --> 00:03:10.380
We also produce something
called Darwin Streaming Server,

00:03:10.380 --> 00:03:13.660
which is really just an exact copy
of QuickTime Streaming Server.

00:03:13.660 --> 00:03:15.540
It's the exact same source code.

00:03:15.760 --> 00:03:19.160
The only difference is it doesn't
have all of the nice Macintosh

00:03:19.170 --> 00:03:20.840
GUI that we are providing.

00:03:20.840 --> 00:03:26.560
And that's an open-source project
that we provide binaries for Solaris,

00:03:26.560 --> 00:03:28.220
Windows, Linux.

00:03:28.220 --> 00:03:29.240
The source code is available.

00:03:29.240 --> 00:03:30.980
It's been ported to a bunch
of different platforms.

00:03:30.980 --> 00:03:35.960
And that's another big reason for
why the web-based UI is still there.

00:03:39.350 --> 00:03:42.960
So I'm going to have John come
up and show you a little bit of

00:03:42.970 --> 00:03:47.830
the new streaming server admin.

00:03:51.000 --> 00:03:51.700
I'm John Anderson.

00:03:51.700 --> 00:03:56.840
I work in the engineering team on UI,
basically, for QTSS.

00:03:56.880 --> 00:04:01.870
So let me go ahead and
launch the server admin.

00:04:03.600 --> 00:04:10.180
This is the server admin tool for
the entire Mac OS X server machine.

00:04:10.180 --> 00:04:12.960
And you can actually use it to
administer multiple servers at once.

00:04:12.960 --> 00:04:15.850
So you could use it to
administer an entire rack of

00:04:15.920 --> 00:04:17.310
QuickTime Streaming Server machines.

00:04:17.320 --> 00:04:19.950
But what I'm going to do is I'm
going to go ahead and go over

00:04:19.970 --> 00:04:21.680
here to QuickTime Streaming.

00:04:25.290 --> 00:04:28.530
That actually isn't stopped,
but we'll just forget we saw that.

00:04:29.060 --> 00:04:31.430
Did you do that?

00:04:31.440 --> 00:04:32.440
What?

00:04:32.440 --> 00:04:33.890
Okay, here we go.

00:04:33.920 --> 00:04:37.220
So if you go to the Connections tab,
for example,

00:04:37.220 --> 00:04:38.940
you can see the connected users.

00:04:38.940 --> 00:04:41.950
This is pretty similar to the
Web UI for those who have seen it.

00:04:42.040 --> 00:04:44.440
Fairly similar functionality.

00:04:44.440 --> 00:04:48.700
That's where you can see the
connected users and the active relays,

00:04:48.700 --> 00:04:50.580
and you can sort them
however you want to.

00:04:51.680 --> 00:04:54.740
And just like the Web UI,
you can see all of the logs from here,

00:04:54.740 --> 00:04:58.380
the error log, the access log,
have easy access to those.

00:04:58.380 --> 00:05:01.280
So you don't have to FTP into
the server to get those.

00:05:01.280 --> 00:05:03.560
You can just get them pretty easily.

00:05:03.560 --> 00:05:05.500
There's this graphs feature.

00:05:05.500 --> 00:05:06.380
This is pretty cool.

00:05:06.380 --> 00:05:09.920
This actually shows you how
many users have been connected.

00:05:13.470 --> 00:05:15.910
The throughput is... Isn't
streaming admin tool running,

00:05:15.910 --> 00:05:16.320
Chris?

00:05:16.320 --> 00:05:17.500
Yeah.

00:05:17.500 --> 00:05:18.900
Or no, maybe not.

00:05:18.900 --> 00:05:22.680
Okay, so it would show you,
were there any users connected,

00:05:22.680 --> 00:05:24.780
a graph over time.

00:05:24.780 --> 00:05:26.730
And maybe, Chris,
after you run the streaming

00:05:26.900 --> 00:05:28.760
admin tool for a while,
you can bring this up again?

00:05:31.640 --> 00:05:32.760
You can come by and see it later.

00:05:32.760 --> 00:05:36.140
Settings, of course,
this is the important stuff.

00:05:36.230 --> 00:05:37.180
This is the meat of the matter.

00:05:37.180 --> 00:05:39.400
You can set, for example,
what the root folder is,

00:05:39.400 --> 00:05:43.120
where you put all of your media files,
what your maximum connections.

00:05:43.120 --> 00:05:45.590
A lot of these are over
from the web as well.

00:05:45.600 --> 00:05:50.750
One thing that is new and is pretty
significant that was not in previous

00:05:50.750 --> 00:05:53.210
versions is this IP bindings tab.

00:05:53.240 --> 00:05:56.620
And so this actually allows you,
if you're streaming on port 80,

00:05:56.620 --> 00:06:02.180
of course, you can't stream on the same
IP address as an Apache server,

00:06:02.180 --> 00:06:03.990
because that's also streaming on port 80.

00:06:04.000 --> 00:06:07.420
So this is something
that's new in this...

00:06:08.770 --> 00:06:11.780
QTSS admin that allows you
to specifically tell it to

00:06:11.780 --> 00:06:15.070
bind to certain IP addresses,
and then you can go ahead and turn

00:06:15.070 --> 00:06:20.000
on streaming on port 80 and do
multiple hosts on the same machine.

00:06:20.000 --> 00:06:22.940
There's a better relay UI.

00:06:22.940 --> 00:06:25.800
I'm really not going to get into
that because that's pretty complex.

00:06:25.800 --> 00:06:27.550
And logging.

00:06:27.550 --> 00:06:31.420
So this really gives you a lot
of the stuff from the web end.

00:06:31.420 --> 00:06:34.190
It basically gives you everything
from the web admin and more,

00:06:34.370 --> 00:06:36.530
and gives you some graphs
to represent some things,

00:06:36.530 --> 00:06:38.190
and it's just a lot easier to use.

00:06:40.860 --> 00:06:41.700
Great.

00:06:41.700 --> 00:06:41.920
Thanks.

00:06:41.920 --> 00:06:44.790
Actually, you might as well stay up
here because you're going to

00:06:44.790 --> 00:06:45.940
be back in about 30 seconds.

00:06:45.940 --> 00:06:46.900
I can do that.

00:06:47.000 --> 00:06:47.960
Back to the slides.

00:06:50.660 --> 00:06:53.820
So we also showed,
if you guys were at the

00:06:53.820 --> 00:06:58.380
QuickTime keynote Tuesday,
we showed a new application

00:06:58.410 --> 00:06:59.460
called QTSS Publisher.

00:06:59.460 --> 00:07:04.070
And QTSS Publisher is an application
that lets you remotely manage all of

00:07:04.070 --> 00:07:05.870
the content on your streaming service.

00:07:05.880 --> 00:07:08.700
You may have an XServe sitting
someplace in a back room.

00:07:08.700 --> 00:07:12.730
This application will allow you to do
things like upload all of your movies

00:07:12.730 --> 00:07:16.220
to the server from wherever you're at,
and automatically prepare

00:07:16.220 --> 00:07:19.190
them for the internet,
for hinted streaming,

00:07:19.280 --> 00:07:21.620
for progressive download.

00:07:21.620 --> 00:07:25.620
It'll help you a lot with all of
the HTML issues that you'll need

00:07:25.620 --> 00:07:28.880
to deal with when you're trying to
get multimedia up on the internet.

00:07:28.880 --> 00:07:34.000
It'll let you manage playlists
and edit annotations in.

00:07:34.000 --> 00:07:37.430
This application is actually
driving some Unix tools that we

00:07:37.430 --> 00:07:39.330
wrote that sit on the back end.

00:07:39.340 --> 00:07:41.530
And you can use those tools yourself.

00:07:41.540 --> 00:07:44.400
I'll show you a little bit more
about those later in the session.

00:07:44.660 --> 00:07:48.900
But I'm going to have
John demo QTSS Publisher now.

00:07:58.160 --> 00:08:02.240
QTSS Publisher is basically,
it's there to save you a lot of steps.

00:08:02.240 --> 00:08:06.350
We get a lot of questions on the
mailing list where it's like,

00:08:06.420 --> 00:08:08.400
okay, I know where my movies folder is.

00:08:08.400 --> 00:08:11.990
I put my movie up there,
and that's kind of it.

00:08:12.040 --> 00:08:14.360
Like, you don't really know,
where do we go from here?

00:08:14.360 --> 00:08:17.540
So that's where QTSS Publisher
kind of fits in.

00:08:17.540 --> 00:08:19.350
This is a client server app.

00:08:19.440 --> 00:08:21.810
So this is installed
with the admin tools,

00:08:21.820 --> 00:08:25.300
and you can connect either, in this case,
we're connecting to local hosts,

00:08:25.300 --> 00:08:27.440
and of course you can also
connect to a remote server,

00:08:27.620 --> 00:08:30.940
and that's important to emphasize,
that you can run this from anywhere,

00:08:30.940 --> 00:08:33.140
and that you're
connecting to your server.

00:08:34.750 --> 00:08:39.010
As you can see here from the media view,
you can see all of your media.

00:08:39.030 --> 00:08:42.900
You can see it collated basically
as a list that you can sort through,

00:08:42.900 --> 00:08:46.760
for example,
or you can see it as an outline so you

00:08:47.290 --> 00:08:50.500
can see your actual file tree here.

00:08:50.710 --> 00:08:54.460
And we also separated out, of course,
into media library and mp3 library.

00:08:54.460 --> 00:09:00.350
And that basically is mp3
library is all your mp3s,

00:09:00.380 --> 00:09:03.920
and your media library is basically
all your everything but mp3s.

00:09:03.920 --> 00:09:07.600
So that's the best way of kind of
distinguishing between the two.

00:09:07.600 --> 00:09:11.200
The streaming standards are different,
of course, for mp3 files,

00:09:11.200 --> 00:09:21.550
it's icecast streaming, and for media,
it's RTSP.

00:09:21.900 --> 00:09:22.080
So that's the main distinction there.

00:09:22.470 --> 00:09:25.990
So what I'm going to do is I'm going
to go ahead and go to the MP3 library,

00:09:26.010 --> 00:09:28.270
and I'm going to highlight a song,
and I'm going to go to the settings view.

00:09:28.280 --> 00:09:32.880
So here you can see all the
ID3 tags for that MP3 movie,

00:09:32.880 --> 00:09:35.550
and you can edit them,
change them remotely.

00:09:35.560 --> 00:09:39.030
And if you go to the URL tab,
you can see this checkbox that says

00:09:39.030 --> 00:09:41.280
media is available for download.

00:09:41.280 --> 00:09:43.380
So when you're working
in these libraries,

00:09:43.390 --> 00:09:45.980
you're actually working
in a sort of staging area.

00:09:46.460 --> 00:09:48.810
So you can go ahead
and put movies up here,

00:09:48.950 --> 00:09:53.250
and you can upload them,
and they will not be available

00:09:53.250 --> 00:09:56.020
to the public immediately.

00:09:56.020 --> 00:09:59.460
So you can go ahead and change all
of your settings and everything

00:09:59.460 --> 00:10:03.420
like that before you make them
available to the public for streaming.

00:10:03.420 --> 00:10:06.550
So for example,
here I can go ahead and make it available

00:10:06.610 --> 00:10:08.860
for download and apply my changes.

00:10:08.860 --> 00:10:12.410
And this will actually give
me the URL for the MP3 file so

00:10:12.520 --> 00:10:14.610
that I can stream it on demand.

00:10:15.820 --> 00:10:18.520
Is there sound on this?

00:10:19.920 --> 00:10:25.990
Give me a detailed-- Please enter
your-- So I picked a weird song,

00:10:26.010 --> 00:10:27.770
but that's OK.

00:10:29.890 --> 00:10:32.780
And if you do want to upload media,
then all you have to do

00:10:32.780 --> 00:10:35.980
is go to the media view or
basically any list of content,

00:10:35.980 --> 00:10:38.000
and you can just take a file.

00:10:38.000 --> 00:10:41.100
I'm not really going to drag it up,
but I could just take this clipping file,

00:10:41.220 --> 00:10:43.500
for example, and drag it in,
and then you can just pick

00:10:43.500 --> 00:10:45.710
where you want it to go,
and it will get uploaded.

00:10:45.720 --> 00:10:48.980
And if it's a movie file,
you don't have to worry about

00:10:48.980 --> 00:10:51.030
making it ready for fast start.

00:10:51.030 --> 00:10:54.900
You don't have to worry about
making it ready for hinting.

00:10:54.900 --> 00:10:59.060
That all happens in the background
on the server as it's uploaded.

00:11:03.720 --> 00:11:07.180
So, let's see.

00:11:07.180 --> 00:11:10.750
So the next thing I'm going to do is
I'm going to make an MP3 playlist.

00:11:10.800 --> 00:11:13.860
Because of course,
on-demand MP3 is one thing,

00:11:13.860 --> 00:11:16.920
but of course another thing that
a lot of people technically will

00:11:16.920 --> 00:11:20.100
usually do is they'll start up a
playlist so they can have basically

00:11:20.100 --> 00:11:21.800
an MP3 radio station going.

00:11:21.800 --> 00:11:24.320
So I can go in here
and click New Playlist,

00:11:24.320 --> 00:11:28.460
and I'll make an MP3 playlist,
and we'll just call it My Music.

00:11:33.150 --> 00:11:35.690
So I can go in here and, yeah,
I can either from the folder

00:11:35.700 --> 00:11:39.020
view here or from the song view,
I can just pick.

00:11:39.020 --> 00:11:42.760
I'm going to be really moody and
go for like a Linkin Park and

00:11:42.760 --> 00:11:44.840
then followed it up with REM.

00:11:44.880 --> 00:11:48.220
And I guess that's all I have
is Linkin Park and REM.

00:11:48.220 --> 00:11:53.090
So you can see that
this is very Mac-like.

00:11:53.100 --> 00:11:56.720
I mean, you can take things and
drag them to rearrange them.

00:11:56.750 --> 00:12:02.600
Apparently not, but-- This is beta.

00:12:04.040 --> 00:12:06.900
So you can drag any of these
files in that you want,

00:12:06.900 --> 00:12:10.040
set them up, and then when you're ready,
just hit start.

00:12:10.050 --> 00:12:14.400
And the playlists will-- oh,
I don't have a broadcast password.

00:12:14.400 --> 00:12:18.150
OK, here's another time to see the admin.

00:12:18.160 --> 00:12:22.110
Let's go ahead and go in here and
set an mp3 broadcast password.

00:12:25.360 --> 00:12:27.570
So while he's doing that,
mp3 broadcast passwords

00:12:27.570 --> 00:12:30.960
in Icecast or Shellcast,
you need to provide a password,

00:12:31.000 --> 00:12:33.140
basically, for people to be able to
broadcast to a server.

00:12:33.140 --> 00:12:35.790
So he's setting that right now.

00:12:44.460 --> 00:12:45.240
And why does that matter?

00:12:45.240 --> 00:12:49.240
Because the broadcaster that
broadcasts MP3s actually

00:12:49.300 --> 00:12:52.400
broadcasts to the streaming server,
which then distributes out to clients.

00:12:52.400 --> 00:12:55.020
So you've got to have a
password on that server.

00:13:04.940 --> 00:13:09.840
So we may end up skipping the
broadcast of the My Music playlist.

00:13:12.300 --> 00:13:14.780
Sounds like Linkin Park and REM,
basically.

00:13:14.780 --> 00:13:16.630
Yeah, it's Linkin Park and REM.

00:13:16.640 --> 00:13:24.520
It's probably not going to be a real
surprise to you at any point anyway.

00:13:24.520 --> 00:13:24.520
So what we'll do is...

00:13:25.830 --> 00:13:28.800
We'll just click OK on that error
message and go on with the demo.

00:13:36.000 --> 00:13:38.180
Next thing we'll do is we'll
just look at some movies.

00:13:38.180 --> 00:13:42.610
I'm going to go back to
here to the list view,

00:13:42.610 --> 00:13:45.940
and I'm going to highlight
this losing grip movie,

00:13:45.940 --> 00:13:48.740
which is about how I feel right now.

00:13:50.340 --> 00:13:52.960
You can see here you can
set all the annotations.

00:13:52.960 --> 00:13:55.800
The final version, of course,
is going to have the full

00:13:55.800 --> 00:13:57.540
list of annotations in there.

00:13:57.540 --> 00:14:00.140
I just put a few of them in here so far.

00:14:00.140 --> 00:14:01.220
It's the same idea.

00:14:01.220 --> 00:14:04.320
You can go in here and change
the movie annotations remotely,

00:14:04.370 --> 00:14:07.620
so you don't have to download the
movie and change the annotations

00:14:07.650 --> 00:14:09.440
and then upload it back up again.

00:14:09.440 --> 00:14:11.640
Here you see a couple buttons here.

00:14:11.640 --> 00:14:13.860
Media is available for streaming.

00:14:13.880 --> 00:14:16.120
Media is available for download.

00:14:16.120 --> 00:14:18.140
If you make something
available for download,

00:14:18.140 --> 00:14:20.320
what it's going to do is it's
going to prepare it for free.

00:14:20.400 --> 00:14:25.100
It's going to put it in your web server
folder and make it available there so

00:14:25.100 --> 00:14:27.610
that it can be viewed by Fast Start.

00:14:27.620 --> 00:14:30.540
If it's something short like a movie
trailer or a video or something,

00:14:30.540 --> 00:14:32.270
that might work really well for that.

00:14:32.280 --> 00:14:37.430
For example, here,
if I say make available for download...

00:14:41.500 --> 00:14:44.420
Click on that link and you can
see by the little progress bar

00:14:44.560 --> 00:14:48.410
that goes along here that it's
actually fast starting the movie.

00:14:56.400 --> 00:15:00.700
What I'm going to do in this case is I'm
going to make it available for streaming.

00:15:00.720 --> 00:15:04.060
So this is going to go through
QuickTime Streaming Server instead.

00:15:04.080 --> 00:15:11.340
So this is going to put a hinted movie
in the QuickTime Streaming movies folder.

00:15:11.340 --> 00:15:11.930
And so it's the same thing here.

00:15:11.930 --> 00:15:16.760
I can click on this
URL and you get instant on.

00:15:16.760 --> 00:15:18.600
It's already streaming.

00:15:19.020 --> 00:15:22.960
The thing here, of course,
is that you're not going to

00:15:23.240 --> 00:15:24.910
want to hand somebody the URL.

00:15:24.920 --> 00:15:27.120
I mean, it's another stopping point,
right?

00:15:27.120 --> 00:15:28.500
It's like a where do you go from here.

00:15:28.500 --> 00:15:29.630
You've got this RTSP URL.

00:15:29.750 --> 00:15:32.820
You're not going to tell your users
to type it into the QuickTime player.

00:15:32.820 --> 00:15:35.400
And so that's what the
purpose of the links view is.

00:15:35.400 --> 00:15:37.740
And this view will basically
give you a list of everything

00:15:38.040 --> 00:15:39.550
that's publicly available.

00:15:39.580 --> 00:15:42.700
So it's assumed that your
playlists are publicly available,

00:15:42.700 --> 00:15:43.370
of course.

00:15:43.380 --> 00:15:46.590
And any of the movies and MP3 files
that you've made available for

00:15:46.590 --> 00:15:48.820
streaming or download will show up here.

00:15:48.820 --> 00:15:53.510
And so you can see here that...

00:15:55.860 --> 00:15:58.720
For example, the losing grip movie
is still highlighted.

00:15:58.720 --> 00:16:02.760
And in this display tab,
you can basically explain how it is that

00:16:02.760 --> 00:16:04.690
you want this to be embedded in a page.

00:16:04.690 --> 00:16:08.240
So for example,
here it's selected that you want

00:16:08.240 --> 00:16:09.490
it to open in the QuickTime player.

00:16:09.490 --> 00:16:11.410
So it's going to show this custom image.

00:16:11.410 --> 00:16:14.250
And when they click on it,
it's going to open a QuickTime player

00:16:14.340 --> 00:16:15.910
with that movie playing in it.

00:16:15.930 --> 00:16:17.850
Optionally,
I can embed it in the web page,

00:16:17.970 --> 00:16:20.710
which would have the same behavior,
except that the movie would

00:16:20.710 --> 00:16:22.010
play in the page itself.

00:16:22.010 --> 00:16:24.400
Or I can have it autoplay,
so it starts playing

00:16:24.400 --> 00:16:25.780
as soon as it's played.

00:16:25.800 --> 00:16:27.980
In this case,
I'm going to go ahead and have

00:16:27.980 --> 00:16:29.860
it open in the QuickTime player.

00:16:29.860 --> 00:16:35.340
And if we look at the bandwidth tab,
you can see that you can

00:16:35.360 --> 00:16:37.850
actually create ref movies here.

00:16:37.850 --> 00:16:41.160
So you can specify, for example,
that if somebody's on

00:16:41.260 --> 00:16:45.240
a broadband connection,
they can see the streaming version.

00:16:45.240 --> 00:16:48.950
And if they're not,
then they get the fast start version.

00:16:49.010 --> 00:16:53.630
Or maybe you can transcode it to a
lower bit rate or anything like that.

00:16:53.700 --> 00:16:57.580
So this is basically
ref movies made easy.

00:16:57.740 --> 00:17:03.700
And once you set that up,
you can go to the HTML tab and

00:17:04.880 --> 00:17:09.970
What I could do here, for example,
is I can highlight all this stuff,

00:17:10.080 --> 00:17:13.440
copy it,
and then I'm going to launch BBEdit

00:17:13.590 --> 00:17:15.320
and make the world's simplest web page.

00:17:23.060 --> 00:17:26.340
So I'll just do a new HTML document.

00:17:26.340 --> 00:17:34.710
I'm not even going to title it,
except that... And just paste that in.

00:17:41.200 --> 00:17:49.190
Now if I take that movie off my
desktop and drag it onto Safari,

00:17:53.900 --> 00:17:55.900
You can see we have a movie with me.

00:17:55.900 --> 00:18:00.840
So that's pretty cool.

00:18:00.910 --> 00:18:04.080
I mean,
that takes you the rest of the steps to

00:18:04.080 --> 00:18:06.900
getting something actually onto a page.

00:18:06.900 --> 00:18:09.060
And not only can you
drag that into BBEdit,

00:18:09.060 --> 00:18:13.150
but you can also drag it into Dreamweaver
and GoLive and stuff like that,

00:18:13.150 --> 00:18:17.870
and it'll show up right away as--it
actually shows up as an ActiveX control

00:18:17.870 --> 00:18:23.330
because it has to be compatible with
Internet Explorer 6 for Windows.

00:18:25.330 --> 00:18:27.460
Pay no attention to the
man behind the curtain.

00:18:27.460 --> 00:18:33.120
That's one of those demo things.

00:18:37.610 --> 00:18:41.020
But yes,
very astute of you to notice that,

00:18:41.020 --> 00:18:42.140
actually.

00:18:46.340 --> 00:18:51.330
So, that's pretty cool,
but there's another step

00:18:51.460 --> 00:18:54.550
that we can go to with this,
which is that you can highlight,

00:18:54.550 --> 00:18:57.110
you can multiple select,
or even do a single

00:18:57.110 --> 00:19:00.250
select of these links,
and you can click the

00:19:00.250 --> 00:19:01.860
Make Web Page button.

00:19:01.860 --> 00:19:06.630
And what this will actually do
is this will take that HTML code,

00:19:06.820 --> 00:19:10.800
and it will run it through
what's called Apache XSLT,

00:19:10.810 --> 00:19:15.640
which means it's
XML Style Sheet Transformations.

00:19:15.660 --> 00:19:19.820
It's a well-documented and very
versatile standard for templating,

00:19:19.820 --> 00:19:23.480
and it means that while we'll
provide some templates for you,

00:19:23.480 --> 00:19:25.620
you can go out and make your own.

00:19:25.620 --> 00:19:29.260
And so I can type in a name here.

00:19:29.260 --> 00:19:31.240
I can say, like, My Avro Movies.

00:19:36.770 --> 00:19:40.340
And so what this will actually
do is make a web page from your

00:19:40.340 --> 00:19:42.540
template with the movies in it.

00:19:42.610 --> 00:19:44.740
And here's where it's actually
paying attention to the stuff

00:19:44.850 --> 00:19:47.220
that I had chosen in that.

00:19:58.500 --> 00:20:15.800
[Transcript missing]

00:20:22.850 --> 00:20:23.240
Thanks, John.

00:20:23.240 --> 00:20:29.030
Okay, so this is stopping point one for
those of you who want to leave.

00:20:29.050 --> 00:20:31.000
It's going to get really
boring after this.

00:20:31.000 --> 00:20:32.270
John's kind of the
highlight of the show here.

00:20:32.270 --> 00:20:34.840
I'm going to talk a little
bit about firewalls.

00:20:35.130 --> 00:20:38.580
Firewalls are something that have been
in the past the bane of streaming,

00:20:38.700 --> 00:20:42.120
but then things are getting better,
and I can talk to you a little bit

00:20:42.120 --> 00:20:45.680
about why firewalls are a problem
and why they're getting better.

00:20:45.680 --> 00:20:48.950
I'm going to show you how to work
through the command line a little

00:20:48.950 --> 00:20:52.780
bit and then talk about some
troubleshooting and some configuration.

00:20:52.800 --> 00:20:56.700
options that you can do there
that you can't do from the UI.

00:20:56.700 --> 00:20:59.700
So first firewalls, next, and proxies.

00:20:59.700 --> 00:21:03.510
So when we first started
out doing streaming,

00:21:03.510 --> 00:21:06.250
QuickTime Streaming Server 1,

00:21:06.380 --> 00:21:10.380
We had a hard time getting streams to go
through anything because the firewalls,

00:21:10.450 --> 00:21:12.140
it was fairly new stuff.

00:21:12.140 --> 00:21:15.190
Firewalls were not
configured to deal with it.

00:21:15.220 --> 00:21:17.740
There were not necessarily
proxies around.

00:21:17.740 --> 00:21:20.180
NAPs had no idea what
to do with anything.

00:21:20.180 --> 00:21:22.370
So we did a few things.

00:21:22.370 --> 00:21:26.130
We added the ability to tunnel...

00:21:26.280 --> 00:21:29.660
The protocols we use over HTTP,
which is great,

00:21:29.660 --> 00:21:33.090
that gets around firewalls and NATs
because they know what to do with HTTP,

00:21:33.160 --> 00:21:34.860
but it's not really
the best way to stream.

00:21:34.860 --> 00:21:35.920
It's not the way we like to stream.

00:21:35.920 --> 00:21:38.100
We like to use the standard protocols.

00:21:43.520 --> 00:21:47.260
I want to show you kind of why
these protocols are a problem.

00:21:47.260 --> 00:21:51.030
So streaming is comprised of three
protocols typically on the wire.

00:21:51.030 --> 00:21:54.780
You've got RTSP,
and that's the protocol that runs on TCP,

00:21:54.800 --> 00:21:59.490
runs on ports 554, 70, 70, or 80,
or whatever port the server

00:21:59.490 --> 00:22:00.870
is configured to use.

00:22:01.430 --> 00:22:03.460
It's a lot like HTTP,
and it's basically just

00:22:03.460 --> 00:22:06.020
a way for the player,
the player initiates this to say,

00:22:06.020 --> 00:22:07.280
I'd like to watch a movie.

00:22:07.280 --> 00:22:08.210
What is the movie?

00:22:08.210 --> 00:22:09.580
What does it look like?

00:22:09.620 --> 00:22:10.810
Okay, I want to watch these tracks.

00:22:10.950 --> 00:22:11.860
Okay, play the movie.

00:22:11.860 --> 00:22:15.470
And the way that protocol works is
the client makes a request over TCP,

00:22:15.530 --> 00:22:16.880
and the server responds.

00:22:16.890 --> 00:22:19.350
And each of those boxes
is a separate request.

00:22:19.350 --> 00:22:21.440
It's not one big request like that.

00:22:21.460 --> 00:22:24.400
This is typically not a problem
for firewalls because firewalls

00:22:24.400 --> 00:22:27.620
are usually configured to allow,
and the firewall I'm referring to is

00:22:27.620 --> 00:22:29.680
the firewall that's on the player side.

00:22:30.580 --> 00:22:33.900
Firewalls are typically configured to
allow TCP connections from a client

00:22:33.900 --> 00:22:37.380
that are initiated from a client
inside your network to work properly.

00:22:37.380 --> 00:22:39.880
If the client initiated it,
it's probably safe.

00:22:39.980 --> 00:22:41.940
Not all of them, but most of them are.

00:22:41.940 --> 00:22:46.670
The problem comes into play
when we get done with the

00:22:46.670 --> 00:22:49.570
RTSP and start sending data.

00:22:49.580 --> 00:22:56.000
So data gets sent over RTP,
and RTP and RTCP traditionally

00:22:56.090 --> 00:22:57.800
run over UDP.

00:22:57.860 --> 00:23:00.280
So the problem with UDP versus TCP.

00:23:00.560 --> 00:23:04.410
Is that TCP is not connectionless.

00:23:04.440 --> 00:23:07.900
It's a protocol that
keeps the connection.

00:23:07.930 --> 00:23:09.020
The connection is there.

00:23:09.020 --> 00:23:10.180
UDP is connectionless.

00:23:10.180 --> 00:23:14.920
When a client initiates a
request to a server via TCP,

00:23:14.980 --> 00:23:17.090
that connection stays open
until the client or the

00:23:17.090 --> 00:23:18.630
server closes that connection.

00:23:18.650 --> 00:23:21.570
And so firewalls,
they're happy with that.

00:23:21.660 --> 00:23:23.020
They know where the connection came from.

00:23:23.020 --> 00:23:24.430
They know who owns both ends.

00:23:24.440 --> 00:23:26.580
And as long as it stays up,
they're happy with it.

00:23:26.620 --> 00:23:28.730
The problem with UDP.

00:23:29.740 --> 00:23:31.740
Is that it's connectionless.

00:23:31.740 --> 00:23:34.230
Every packet you send is
basically a brand new little

00:23:34.230 --> 00:23:35.740
mini connection to the server.

00:23:35.740 --> 00:23:41.740
So what just happened here is
that the TCP all got through fine.

00:23:41.740 --> 00:23:45.840
The streaming server started to
send media tracks and status tracks,

00:23:45.980 --> 00:23:47.740
which are via UDP.

00:23:47.740 --> 00:23:51.670
And the firewall sees these things
coming in at it bound for that

00:23:51.670 --> 00:23:53.740
QT player on port 6970 and up.

00:23:53.740 --> 00:23:55.740
And it's like, where did these come from?

00:23:55.740 --> 00:23:57.730
It has no idea where it came from.

00:23:57.760 --> 00:23:58.740
And so they're just bounced
right off the firewall.

00:23:58.740 --> 00:23:58.740
Um.

00:23:58.740 --> 00:23:58.820
Um.

00:23:58.820 --> 00:23:58.920
Um.

00:23:58.920 --> 00:24:02.590
So that's the really big problem.

00:24:02.940 --> 00:24:08.640
Not so problematic is the client
sends back UDP packets to the server.

00:24:08.700 --> 00:24:10.770
These are usually not a problem because
the server is not going to have a

00:24:10.780 --> 00:24:14.800
firewall that blocks that stuff or
it will be properly configured because

00:24:14.800 --> 00:24:17.180
you're doing streaming of course.

00:24:17.200 --> 00:24:22.060
But you may have a firewall that
will block outgoing UDP as well.

00:24:22.180 --> 00:24:26.050
These status packets contain things like,
things that might be interesting

00:24:26.050 --> 00:24:28.580
to the server like...

00:24:29.790 --> 00:24:33.940
Which packets the client received,
which ones it missed,

00:24:33.990 --> 00:24:36.340
what its average bandwidth was,
what its frame rate was,

00:24:36.340 --> 00:24:36.860
things like that.

00:24:36.860 --> 00:24:41.260
And you'll see a little bit more of that
when I get into more esoteric topics.

00:24:41.260 --> 00:24:44.000
Okay, so kind of to recap firewalls.

00:24:44.160 --> 00:24:47.450
So the problem with firewalls is
that RTP and RTCP are sent out

00:24:47.450 --> 00:24:50.000
of band from the RTSP connection,
right?

00:24:50.090 --> 00:24:52.590
They're sent via UDP,
they're completely separate.

00:24:52.600 --> 00:24:53.600
Number one, excellent.

00:24:56.680 --> 00:24:59.220
Firewalls consider
those to be unsolicited.

00:24:59.220 --> 00:25:03.180
They don't know why anybody would be
sending these to the player because

00:25:03.210 --> 00:25:06.460
the firewall has no idea that it
was negotiated out of band via RTSP.

00:25:06.460 --> 00:25:09.500
NATs have a different problem.

00:25:09.500 --> 00:25:13.660
So what NATs do is they take a single
IP address and then they'll map all of

00:25:13.720 --> 00:25:17.520
the traffic coming through that router,
the NAT router,

00:25:17.520 --> 00:25:19.880
and redirect it to the proper
client on the back end.

00:25:19.880 --> 00:25:21.350
I think most of you
are familiar with NATs.

00:25:21.600 --> 00:25:23.930
So what happens is a NAT gets
this UDP packet and it

00:25:23.930 --> 00:25:26.750
looks at it and it's like,
I have no idea who to send this to,

00:25:26.750 --> 00:25:28.040
so it just drops it.

00:25:28.040 --> 00:25:32.180
There are ways to fix this.

00:25:32.180 --> 00:25:34.660
One, as I mentioned,
is to stream on port 80.

00:25:34.660 --> 00:25:38.950
Other ways to fix that are
to configure your firewall.

00:25:38.960 --> 00:25:43.640
The problem with configuring a
firewall is that you basically

00:25:43.640 --> 00:25:49.960
have to open up ports 6970 through
6800 or something like that.

00:25:50.920 --> 00:25:54.810
For incoming UDP, well,
there's a potential security risk there.

00:25:54.810 --> 00:25:57.650
You don't want to just open up
ports and allow packets to come

00:25:57.690 --> 00:25:59.620
through that you don't understand.

00:25:59.620 --> 00:26:02.510
So what you normally would
do is you'd set up a proxy,

00:26:02.510 --> 00:26:03.800
a streaming proxy.

00:26:03.800 --> 00:26:08.630
So streaming proxies typically
live in the DMZ on the client

00:26:08.630 --> 00:26:10.950
side where the player is.

00:26:10.960 --> 00:26:14.340
They understand RTSP, RTP, RTCP,
all of the protocols

00:26:14.340 --> 00:26:15.960
involved in streaming.

00:26:15.960 --> 00:26:19.760
The server will see the
proxy as just another client.

00:26:20.380 --> 00:26:22.620
And the client will see the
proxy as just another server.

00:26:22.620 --> 00:26:25.180
So there's no problem
there with compatibility.

00:26:25.180 --> 00:26:28.470
And what happens is the proxy
translates the requests from

00:26:28.470 --> 00:26:30.420
the client and from the server.

00:26:34.210 --> 00:26:38.480
So the server is seeing
the proxy as one client.

00:26:38.480 --> 00:26:41.520
The proxy actually acts sort of as a NAT,
basically, a NAT for streaming.

00:26:41.520 --> 00:26:43.860
Here's a diagram to make it a
little bit easier to understand,

00:26:43.860 --> 00:26:44.320
I think.

00:26:44.340 --> 00:26:49.180
So on the left, you've got the streaming
server and the internet.

00:26:49.340 --> 00:26:50.430
So this is you.

00:26:50.430 --> 00:26:53.800
You're the guys administering the server.

00:26:53.800 --> 00:26:57.920
What you need to tell people who can't
stream or sysadmins on that side is

00:26:58.060 --> 00:27:00.300
that they need a streaming proxy.

00:27:00.820 --> 00:27:03.340
And the proxy lives
right there in the DMZ.

00:27:03.340 --> 00:27:05.780
And the DMZ is an area
that the firewall trusts.

00:27:05.780 --> 00:27:09.190
So things coming from that proxy
server will be trusted by the firewall

00:27:09.190 --> 00:27:11.180
and allowed through to the clients.

00:27:11.180 --> 00:27:14.590
Anything that tries to bypass that
streaming proxy or go around the DMZ is

00:27:14.590 --> 00:27:18.480
going to hit the firewall and get blocked
because the firewall is going to say,

00:27:18.480 --> 00:27:20.240
I don't know who you are,
I don't trust you, goodbye.

00:27:20.240 --> 00:27:23.200
That's basically how proxies work.

00:27:26.310 --> 00:27:27.800
and how to get around firewalls.

00:27:27.800 --> 00:27:30.500
Okay, so this is the second point
where people may want to,

00:27:30.500 --> 00:27:31.860
will probably want to
think about leaving.

00:27:31.860 --> 00:27:34.250
I'm going to kind of go
through command line options

00:27:34.360 --> 00:27:36.560
in QuickTime Streaming Server.

00:27:36.740 --> 00:27:39.960
So QuickTime Streaming
Server is comprised of a

00:27:39.980 --> 00:27:41.560
bunch of command line tools.

00:27:41.600 --> 00:27:43.840
Whenever,
when you see things like the admin app,

00:27:43.870 --> 00:27:46.340
the admin that John was showing,
or the QtSS publisher,

00:27:46.340 --> 00:27:50.130
or the web-based admin,
all those really are just facades that

00:27:50.130 --> 00:27:51.460
are on top of these command line tools.

00:27:51.460 --> 00:27:53.620
They just,
all they do is configure those,

00:27:53.820 --> 00:27:57.920
configure the config files,
change the options on the command line,

00:27:57.920 --> 00:27:59.430
and just execute these tools.

00:27:59.610 --> 00:28:01.810
So if you...

00:28:02.040 --> 00:28:03.500
I really want to get down and dirty.

00:28:03.500 --> 00:28:06.030
There are all kinds of things
you can do in the command line

00:28:06.030 --> 00:28:08.980
that you can't do in the GUI,
so I'm going to run through

00:28:08.980 --> 00:28:10.440
a few of these briefly.

00:28:10.440 --> 00:28:13.260
These are just good things to know.

00:28:13.260 --> 00:28:15.120
Probably a lot of it will not
make sense to you right now,

00:28:15.160 --> 00:28:18.380
but if you're really doing streaming,
there's going to come a time

00:28:18.380 --> 00:28:23.330
when you need to do something,
and this is the information

00:28:23.330 --> 00:28:25.800
that will come in handy.

00:28:25.990 --> 00:28:28.560
It's not documented completely.

00:28:28.650 --> 00:28:30.860
It's not something we put a
lot of effort into documenting.

00:28:30.860 --> 00:28:32.040
We're trying to get better.

00:28:32.070 --> 00:28:33.900
But we have a mailing list,
and all the engineers

00:28:33.900 --> 00:28:34.760
are on that mailing list.

00:28:34.880 --> 00:28:36.780
And they're really good
about answering questions,

00:28:36.780 --> 00:28:37.930
and we'd actually love to answer.

00:28:37.940 --> 00:28:40.060
We love to see people messing
with things like this.

00:28:40.060 --> 00:28:44.440
So starting off with the first command
line tool is QuickTime Streaming Server.

00:28:44.460 --> 00:28:46.300
So that's the command line tool.

00:28:46.310 --> 00:28:49.830
That is the QuickTime Streaming Server,
basically.

00:28:51.090 --> 00:28:54.660
And so what I'm showing here is
basically the usage for that tool.

00:28:54.660 --> 00:28:57.140
If you were to type
commit QuickTime Streaming

00:28:57.250 --> 00:28:59.920
Server dash v for version,
it would show you this.

00:28:59.920 --> 00:29:05.200
A couple of things that
are to kind of point out.

00:29:05.200 --> 00:29:05.200
So when you're...

00:29:05.500 --> 00:29:07.860
QuickTime Streaming
Server normally runs as a daemon,

00:29:07.860 --> 00:29:10.240
so the D that you see there, dash D,
running foreground,

00:29:10.250 --> 00:29:13.930
that causes it to stay in the foreground,
and in that mode,

00:29:13.950 --> 00:29:15.970
QuickTime Streaming Server will
actually generate print

00:29:16.270 --> 00:29:17.790
apps out under the terminal,
and you can kind of

00:29:17.790 --> 00:29:18.560
watch what's happening.

00:29:18.560 --> 00:29:21.020
You can watch more or less,
depending upon some other

00:29:21.020 --> 00:29:23.700
changes that you've made,
which I'll show you later.

00:29:23.700 --> 00:29:29.140
Dash P allows you to specify which
port you want the server to listen to.

00:29:29.140 --> 00:29:32.940
So this is really useful when
somebody's having a problem someplace,

00:29:32.940 --> 00:29:35.360
you've got a streaming
server that's up and running,

00:29:35.360 --> 00:29:38.220
you don't want to bring it down
to mess around with config files

00:29:38.220 --> 00:29:40.040
or do all of this troubleshooting.

00:29:40.040 --> 00:29:44.660
You can just say dash P8764,
just pick a random port,

00:29:44.660 --> 00:29:49.110
and when you have the client
that you're working with connect

00:29:49.110 --> 00:29:54.480
using that port in their URL,
and the server will run off to the side.

00:29:54.480 --> 00:29:56.950
It won't have any impact on the
server that's already running,

00:29:56.950 --> 00:29:58.710
so you can run multiple servers that way.

00:29:59.140 --> 00:30:03.080
And then there are a couple of options
for specifying custom config files.

00:30:03.080 --> 00:30:04.710
There's a default
location for config files,

00:30:04.710 --> 00:30:06.840
but if you wanted to do some
troubleshooting on the side,

00:30:06.840 --> 00:30:09.760
you can tweak the config files
in a different location and then

00:30:09.760 --> 00:30:11.330
point the server off to those.

00:30:14.810 --> 00:30:19.520
The -s option is actually pretty
interesting if you just kind

00:30:19.520 --> 00:30:20.840
of want to monitor your server.

00:30:20.840 --> 00:30:26.740
It'll basically just align at a time,
show you how many clients are connected.

00:30:26.800 --> 00:30:29.550
I think it shows whether they're
getting packet loss or not,

00:30:29.550 --> 00:30:30.500
things like that.

00:30:32.230 --> 00:30:36.520
So moving from the command line
options for QuickTime Streaming Server,

00:30:36.520 --> 00:30:38.120
I want to go to the config file.

00:30:38.120 --> 00:30:41.790
So the config file is XML-based.

00:30:41.790 --> 00:30:43.280
It's really modular.

00:30:43.280 --> 00:30:45.410
The server's really modular, right?

00:30:45.420 --> 00:30:48.580
If you've ever heard any of us talk
about the streaming server before,

00:30:48.580 --> 00:30:51.960
it's basically a core server
built with multiple modules.

00:30:51.960 --> 00:30:54.170
We've got a module for
doing QuickTime movies.

00:30:54.170 --> 00:30:55.940
We've got a module for doing MP3s.

00:30:55.980 --> 00:30:58.480
We've got a module for doing
reflections of broadcast.

00:30:58.480 --> 00:31:00.380
We have a module for
doing administration.

00:31:01.850 --> 00:31:04.800
The XML follows that format,
so each module has its own

00:31:04.840 --> 00:31:06.840
little block of configuration.

00:31:06.840 --> 00:31:14.080
In the library QuickTime streaming
config directory,

00:31:14.080 --> 00:31:17.120
which is the default location
for all the config files,

00:31:17.120 --> 00:31:19.700
you'll see a streaming
server XML-sample file,

00:31:19.700 --> 00:31:22.180
and that file is
actually fully commented.

00:31:22.180 --> 00:31:25.720
The file that the server normally
uses doesn't have comments in it,

00:31:25.720 --> 00:31:28.380
so this is kind of some
partial documentation.

00:31:28.380 --> 00:31:31.750
You'll find things in there that
you will not even... You have

00:31:31.750 --> 00:31:34.560
no hope of understanding,
but probably best not to touch those.

00:31:34.560 --> 00:31:37.970
There are over 140 attributes in there,
and most of them don't

00:31:38.020 --> 00:31:39.110
need to be touched.

00:31:39.120 --> 00:31:42.030
But they come in useful to
different people depending

00:31:42.210 --> 00:31:44.210
upon what they're trying to do.

00:31:45.800 --> 00:31:50.340
If you do modify a file, a config file,
and you don't want to restart the server,

00:31:50.340 --> 00:31:52.700
if you send it a HUP signal,
if you guys are familiar

00:31:52.700 --> 00:31:56.410
with using the kill command,
it's kill dash HUP, uppercase like that,

00:31:56.410 --> 00:31:57.800
and the process ID of the server.

00:31:57.800 --> 00:32:01.960
That will force the server to reread its
preferences and pick up your new changes.

00:32:01.960 --> 00:32:06.810
And I have no idea what
those last two lines are.

00:32:09.370 --> 00:32:15.300
Well, if you really mess up,
I think I know what it's supposed to say.

00:32:15.300 --> 00:32:16.820
So if you really mess
up your config file,

00:32:16.820 --> 00:32:20.540
you can delete it and the server will
automatically generate a new one for you.

00:32:22.790 --> 00:32:24.040
Misty Edit, I think.

00:32:24.040 --> 00:32:25.460
So here's what some of
the attributes look like.

00:32:25.460 --> 00:32:28.780
As I said, they're XML.

00:32:28.780 --> 00:32:31.340
So this is a sample file,
so it's got the comments in it,

00:32:31.380 --> 00:32:34.360
things like auto restart to Boolean,
set it to true if you want the

00:32:34.360 --> 00:32:37.700
server to auto restart if it crashes,
although it never crashes.

00:32:37.700 --> 00:32:41.760
False if you want it to
just go ahead and die.

00:32:41.760 --> 00:32:44.270
The movie folder location,
which you see in the UI,

00:32:44.300 --> 00:32:47.200
that's basically what it
looks like in the config file.

00:32:47.200 --> 00:32:49.440
Down below you see
some debugging options,

00:32:49.440 --> 00:32:52.340
and I'll show you some more
about these things later.

00:32:52.700 --> 00:32:55.880
Let you kind of put the server into
modes where it'll kind of show you

00:32:55.880 --> 00:32:58.210
more information as it's running.

00:32:59.970 --> 00:33:01.810
So here are some of the interesting ones.

00:33:01.810 --> 00:33:05.680
So these are kind of things that people
tend to want to play with because they

00:33:05.720 --> 00:33:07.080
want to do things we never thought of.

00:33:07.120 --> 00:33:11.410
We have a technology called
skip protection in the server,

00:33:11.410 --> 00:33:17.120
and one of the things that it does is it
will send media faster than real time.

00:33:17.120 --> 00:33:20.480
The reason it does that is it wants
to grow the buffer on the client side.

00:33:20.480 --> 00:33:23.310
The reason it wants to do that is
it gives us a lot more time if we

00:33:23.310 --> 00:33:25.000
do need to retransmit a packet.

00:33:25.000 --> 00:33:27.340
So basically,
it helps to improve the quality.

00:33:27.340 --> 00:33:31.270
We have that fixed, we have that capped
right now at 25 seconds.

00:33:31.280 --> 00:33:34.140
If you had a reason to put
that down to 10 seconds or up

00:33:34.170 --> 00:33:36.230
to a minute or five minutes,
whatever,

00:33:36.230 --> 00:33:38.280
that's the value you would change.

00:33:38.280 --> 00:33:42.510
The server also runs as
whoever you launch it as.

00:33:42.510 --> 00:33:46.170
It needs to be typically launched
as root because it needs to

00:33:46.170 --> 00:33:48.420
bind to some low numbered ports.

00:33:48.420 --> 00:33:52.590
It needs to bind to port 554, port 80,
and anything under 1024 you

00:33:52.630 --> 00:33:54.110
need to be root to bind to.

00:33:55.390 --> 00:33:59.140
So what you can do is set both of these,
and this will cause the server,

00:33:59.170 --> 00:34:02.680
after it binds to those ports,
to... The problem with being root,

00:34:02.680 --> 00:34:03.930
of course, is security problems.

00:34:03.940 --> 00:34:07.900
This will cause the server to set
its user ID and its group ID down

00:34:07.900 --> 00:34:10.680
to whatever user you specify here,
and this is basically a good

00:34:10.680 --> 00:34:12.150
thing to do for security reasons.

00:34:12.160 --> 00:34:15.320
Some options for error log verbosity.

00:34:15.320 --> 00:34:19.080
The bind IP address option is
actually available in the IP,

00:34:19.080 --> 00:34:20.820
or I mean in the admin now.

00:34:20.820 --> 00:34:24.900
I don't know why anybody
would ever want to do this,

00:34:24.980 --> 00:34:27.960
but before we had instant on,
there used to be like a

00:34:28.060 --> 00:34:31.290
minimum three-second buffer,
and we put this in here because

00:34:31.310 --> 00:34:34.900
there was a reason for people
to increase that buffer.

00:34:34.900 --> 00:34:36.950
Don't ask me why,
but if you ever need to do that,

00:34:36.950 --> 00:34:37.900
that's how you do it.

00:34:42.300 --> 00:34:49.520
Another component of streaming is the
concept of a blob of text called SDP.

00:34:49.560 --> 00:34:51.520
It stands for Session
Description Protocol.

00:34:51.520 --> 00:34:55.360
It basically describes the movie.

00:34:55.360 --> 00:34:59.000
It's got information about each track,
what format each track is in,

00:34:59.050 --> 00:35:00.300
that information.

00:35:00.300 --> 00:35:04.400
That information is actually embedded
in a QuickTime movie or an MPEG-4.

00:35:04.400 --> 00:35:06.730
If you have some reason to
override that information and don't

00:35:06.730 --> 00:35:09.430
want to have to edit the movie,
you just need to do a quick little hack,

00:35:09.530 --> 00:35:13.110
then you can turn this option on,
drop in a file named movie name

00:35:13.110 --> 00:35:17.070
dot whatever the movie name
is dot SDP that has basically

00:35:17.070 --> 00:35:21.120
a full SDP description in it,
and that'll cause the server to

00:35:21.390 --> 00:35:25.280
pick that up rather than using the
SDP information out of the movie.

00:35:25.280 --> 00:35:27.800
So it's kind of an advanced thing,
but it actually can come

00:35:27.800 --> 00:35:29.100
in useful in emergencies.

00:35:30.990 --> 00:35:34.140
If you don't want to
generate the SDP by hand,

00:35:34.140 --> 00:35:36.670
you can set this option to true,
and this will cause the server,

00:35:36.670 --> 00:35:39.790
whenever a movie is requested,
to take the SDP information from the

00:35:39.790 --> 00:35:42.180
movie and spit out a little text file.

00:35:42.180 --> 00:35:44.440
So that's kind of a quick way to
get the SDP up and running and

00:35:44.440 --> 00:35:45.770
then make a little tweak to it.

00:35:45.800 --> 00:35:48.750
With both of these options set,
then everything will work

00:35:48.750 --> 00:35:50.120
the way you'd like it to.

00:35:50.140 --> 00:35:54.220
You can have login,
login GMT time or local time.

00:35:54.220 --> 00:35:57.570
For the admin module,
I'm going to show you a little more

00:35:57.690 --> 00:36:00.240
about an admin protocol we have later.

00:36:00.900 --> 00:36:04.540
The admin protocol only allows local
access right now for security reasons,

00:36:04.540 --> 00:36:06.560
so you've got to be on the local
machine to use this protocol.

00:36:06.560 --> 00:36:11.540
If you wanted to allow outside access,
you could set the local

00:36:11.540 --> 00:36:14.880
access only to false,
and then you could provide a list

00:36:14.880 --> 00:36:17.570
of IP addresses that are the only
IP addresses that are allowed to get in,

00:36:17.570 --> 00:36:18.920
which is kind of medium security.

00:36:18.920 --> 00:36:24.260
And then this last one is
MP3 max flow control time.

00:36:24.260 --> 00:36:30.870
So this is basically the size of a
buffer that we use when streaming MP3s.

00:36:30.900 --> 00:36:34.860
So if you have problems with MP3 players
kind of going through that rebuffering

00:36:35.180 --> 00:36:38.580
thing that they do go through sometimes,
if you increase this value,

00:36:38.580 --> 00:36:40.190
that many times will take care of that.

00:36:44.390 --> 00:36:45.840
Okay, moving on.

00:36:45.840 --> 00:36:49.280
These are a little more esoteric.

00:36:49.300 --> 00:36:53.380
They're dropping like flies.

00:36:53.380 --> 00:36:53.380
This is awesome.

00:36:54.520 --> 00:36:57.030
So when you're using a
broadcaster with the server,

00:36:57.060 --> 00:37:00.150
there are a couple of behaviors
that you may or may not like.

00:37:00.220 --> 00:37:01.900
There are ways to override those.

00:37:01.900 --> 00:37:05.860
So the first one is that if a broadcaster
stops for some reason and there are

00:37:05.860 --> 00:37:09.240
a bunch of clients listening to it,
our server will keep those

00:37:09.240 --> 00:37:12.040
clients connected so that if
the broadcaster comes back up,

00:37:12.090 --> 00:37:13.620
it'll just continue working.

00:37:13.620 --> 00:37:17.620
And the only thing the client will
see is just kind of a blank spot,

00:37:17.620 --> 00:37:18.290
right?

00:37:18.290 --> 00:37:20.170
The stream will stop for a little
bit and then start back up.

00:37:20.580 --> 00:37:23.350
You may have a reason to have the
behavior work the opposite way,

00:37:23.390 --> 00:37:26.690
which is to actually have all of the
client connections just get dropped

00:37:26.690 --> 00:37:28.410
when you stop the broadcaster.

00:37:28.420 --> 00:37:30.340
So this is the option that
you would use for that.

00:37:30.360 --> 00:37:37.280
Our broadcaster also has the ability
to automatically announce that

00:37:37.280 --> 00:37:41.040
it's got a broadcast to the server.

00:37:41.040 --> 00:37:43.160
That's on by default.

00:37:43.160 --> 00:37:45.460
If you wanted to turn that
off for whatever reason,

00:37:45.540 --> 00:37:47.710
typically security,
you could turn that off,

00:37:47.710 --> 00:37:50.240
although that is an
authenticated transaction.

00:37:50.420 --> 00:37:53.410
So it's kind of minorly secure already,
but this will give you

00:37:53.510 --> 00:37:54.510
even more security.

00:37:54.520 --> 00:38:01.590
Then another kind of behavior
of the server is that...

00:38:01.790 --> 00:38:05.530
If a broadcaster crashes for some reason,
the QuickTime Streaming

00:38:05.830 --> 00:38:09.910
Server doesn't necessarily know,
it doesn't immediately assume

00:38:09.910 --> 00:38:11.700
that the broadcaster is gone.

00:38:11.700 --> 00:38:12.800
It can't.

00:38:12.840 --> 00:38:15.040
So what'll happen is that
it'll sit there and wait,

00:38:15.040 --> 00:38:16.930
and it'll wait for a
certain amount of time,

00:38:16.930 --> 00:38:19.590
and if it doesn't receive any
more data from the broadcaster,

00:38:19.640 --> 00:38:21.220
it'll eventually time it out.

00:38:21.660 --> 00:38:22.690
Well, that can be a problem.

00:38:22.700 --> 00:38:26.040
If you're in the middle of doing a live
broadcast and something bad happens,

00:38:26.060 --> 00:38:29.970
you don't have two or
three or four minutes,

00:38:30.030 --> 00:38:32.600
whatever that timeout is, to get,
you know, you want to get the broadcaster

00:38:32.600 --> 00:38:33.910
back up and running,
and you want it to start

00:38:33.940 --> 00:38:34.760
broadcasting again.

00:38:34.760 --> 00:38:37.320
What you can do is you
can change this value.

00:38:38.700 --> 00:39:01.000
[Transcript missing]

00:39:02.280 --> 00:39:04.750
And a little more about firewalls,
so I don't need to talk too

00:39:04.750 --> 00:39:06.120
much about the port numbers.

00:39:06.120 --> 00:39:08.360
These are the port
numbers that the server,

00:39:08.360 --> 00:39:09.700
by default, binds to.

00:39:09.700 --> 00:39:12.470
If you wanted to,
you could turn off some of these ports.

00:39:14.240 --> 00:39:18.490
The 8054 is the standard RTSP port,
8000 and 8001 are the standard

00:39:18.490 --> 00:39:23.200
MP3 broadcasting ports,
and 7070 is kind of a historical

00:39:23.200 --> 00:39:26.560
real networks RTSP proxy port number.

00:39:26.560 --> 00:39:28.880
And the reason we have that in
here is that back in the old days,

00:39:28.880 --> 00:39:31.620
this actually helped us to get through
some of the firewalls because they

00:39:31.620 --> 00:39:33.240
were configured for real streaming.

00:39:33.240 --> 00:39:37.240
Another important one,
this one will have you pulling your

00:39:37.290 --> 00:39:39.780
hair out if it ever happens to you.

00:39:39.780 --> 00:39:44.240
So you remember that status from
the client comes back via USB.

00:39:44.240 --> 00:39:49.140
So I mentioned that that contains things
like which packets the client received,

00:39:49.140 --> 00:39:50.510
which ones it lost.

00:39:50.520 --> 00:39:53.190
It also is used for something
else that's really important.

00:39:53.280 --> 00:39:56.580
The server uses that to determine
whether the client is still alive or not.

00:39:56.640 --> 00:39:59.260
And if a server determines that
a client is no longer alive,

00:39:59.260 --> 00:40:02.620
it's going to basically drop its
connection after two or three minutes.

00:40:02.620 --> 00:40:09.390
So you can end up with
configurations usually on your end.

00:40:09.400 --> 00:40:12.360
If you have a configuration
where you put a round robin

00:40:12.360 --> 00:40:16.190
DNS in front of your streaming,
what's going to happen is that that round

00:40:16.190 --> 00:40:19.940
robin is going to know what to do with
all of the TCP because it understands,

00:40:19.940 --> 00:40:22.140
remember those are
persistent connections,

00:40:22.140 --> 00:40:24.220
it knows which end belongs to everybody.

00:40:24.220 --> 00:40:28.620
What's going to happen is that
clients are going to start sending

00:40:28.960 --> 00:40:31.570
UDP packets at your round robin.

00:40:31.580 --> 00:40:36.080
At your round robin DNS machine.

00:40:36.080 --> 00:40:39.290
So it's going to get them and it's
not going to know which of your

00:40:39.290 --> 00:40:41.160
back end machines to send it to.

00:40:41.160 --> 00:40:46.970
So what this option does is it tells,
the streaming servers to actually

00:40:47.100 --> 00:40:50.630
embed their own IP address inside
one of the transactions that goes

00:40:50.670 --> 00:40:51.680
all the way back to the client.

00:40:51.680 --> 00:40:55.160
That'll cause the client to bypass
DNS round robin when it's sending

00:40:55.170 --> 00:40:57.800
those status packets and send them
directly around to the server,

00:40:57.800 --> 00:40:59.190
which is fine,
it doesn't affect bandwidth

00:40:59.190 --> 00:41:01.040
or anything like that,
which is typically why you would

00:41:01.040 --> 00:41:02.070
have a DNS round robin set up.

00:41:02.100 --> 00:41:04.950
But it makes everything
just magically work.

00:41:04.980 --> 00:41:09.380
Bind IP address, we already talked about
that a little bit in the UI.

00:41:11.370 --> 00:41:12.440
Don't need to go into that.

00:41:12.440 --> 00:41:15.140
OK, so MP3 streaming at the command line.

00:41:15.160 --> 00:41:18.850
This is probably something
you are more likely to use.

00:41:19.100 --> 00:41:24.050
MP3 streaming, because it's basically for
every broadcast you're doing

00:41:24.050 --> 00:41:27.500
or every playlist you're doing,
you're running one copy of this tool.

00:41:27.500 --> 00:41:31.920
And so there are,
if you guys are like kind

00:41:31.920 --> 00:41:33.860
of savvy Perl scripters,
whatever,

00:41:33.860 --> 00:41:37.670
you can actually write your own tools
to kind of start and stop playlists,

00:41:37.700 --> 00:41:39.470
manage playlists,
and the command line is really

00:41:39.470 --> 00:41:40.470
the way you want to do that.

00:41:40.500 --> 00:41:44.820
Some of the options here are...

00:41:45.130 --> 00:41:48.440
Let's drop down to the dash X there,
pre-flight configuration.

00:41:48.440 --> 00:41:50.660
What that's going to do is that's
actually going to walk through

00:41:50.660 --> 00:41:54.080
all of the configuration files and
make sure that those all look okay.

00:41:54.080 --> 00:41:56.100
The one underneath that
is check MP3 files.

00:41:56.100 --> 00:41:58.670
That's going to do a fast
scan through all of your MP3

00:41:58.670 --> 00:42:00.330
files and look for problems.

00:42:00.350 --> 00:42:02.920
Corrupt files,
data rates that don't match,

00:42:02.950 --> 00:42:06.260
things that will cause them not
to play properly in a player

00:42:06.260 --> 00:42:10.700
when you're doing a broadcast,
or when you're doing a playlist, I mean.

00:42:12.080 --> 00:42:15.780
Other options are
pretty self-explanatory,

00:42:15.810 --> 00:42:16.660
I think.

00:42:20.330 --> 00:42:21.120
Configuration files.

00:42:21.120 --> 00:42:26.990
So MP3 streaming is comprised of two
required files when you do a broadcast,

00:42:26.990 --> 00:42:28.760
a config file and a playlist file.

00:42:28.760 --> 00:42:30.490
And then there's some
optional meta files,

00:42:30.520 --> 00:42:32.940
and I'll get into each of
these in a little more detail.

00:42:32.940 --> 00:42:34.590
So the config file looks like this.

00:42:34.590 --> 00:42:36.720
It's got basically a bunch
of the same things you saw

00:42:36.810 --> 00:42:38.060
in the command line options.

00:42:38.060 --> 00:42:41.640
It's also got things
like your broadcast name,

00:42:41.720 --> 00:42:44.430
your mount point,
which is basically the portion

00:42:44.430 --> 00:42:47.440
of the URL that a user would
type in after the IP address.

00:42:48.460 --> 00:42:49.540
Actually, they wouldn't type it in.

00:42:49.540 --> 00:42:52.700
You would use QTSS Publisher,
and it would all be up on your website.

00:42:52.700 --> 00:42:56.460
The broadcast password...

00:42:58.390 --> 00:43:00.070
Max, upcoming list size.

00:43:00.100 --> 00:43:06.340
This will help to control the file
I'm going to explain in just a second.

00:43:06.340 --> 00:43:10.010
The bit rate you want to
use for doing pre-flighting,

00:43:10.010 --> 00:43:12.580
as it's scanning through
all those MP3 movies,

00:43:12.580 --> 00:43:15.030
that's the bit rate it's going to use to
determine whether they're valid or not.

00:43:16.910 --> 00:43:18.300
And then the playlist file.

00:43:18.390 --> 00:43:19.360
Playlist files are pretty simple.

00:43:19.360 --> 00:43:22.240
They're basically just a
list of paths to MP3 files.

00:43:22.240 --> 00:43:25.190
In addition, they've got a number
to the right of them,

00:43:25.200 --> 00:43:27.460
and that number is the number
that's used when you're doing

00:43:27.470 --> 00:43:28.770
weighted random playlists.

00:43:28.770 --> 00:43:31.390
Weighted random playlists are
playlists that play randomly,

00:43:31.390 --> 00:43:33.890
but the higher a number is,
the higher a weight is on a song,

00:43:33.890 --> 00:43:35.130
the more often it'll play.

00:43:35.130 --> 00:43:41.150
So you can adjust these numbers
from from 0 to 10 or 1 to 10.

00:43:41.270 --> 00:43:44.310
So here are the optional files.

00:43:44.310 --> 00:43:44.310
So

00:43:45.100 --> 00:46:02.400
[Transcript missing]

00:46:03.560 --> 00:46:06.200
There's actually a Macintosh application.

00:46:06.200 --> 00:46:07.350
The name is escaping me right now.

00:46:07.350 --> 00:46:10.160
Okay, so streaming load tool.

00:46:10.160 --> 00:46:14.180
So this is our tool that allows you to...

00:46:14.270 --> 00:46:15.040
Put load on a server.

00:46:15.040 --> 00:46:16.640
That's what we typically use it for.

00:46:16.640 --> 00:46:19.440
It's basically a
QuickTime player simulator.

00:46:19.440 --> 00:46:22.200
It doesn't actually show any movies,
but it does all of the networking and

00:46:22.200 --> 00:46:25.120
acts just like a real QuickTime player
as far as the server is concerned.

00:46:25.120 --> 00:46:27.440
We use it for performance
testing at Apple.

00:46:27.440 --> 00:46:31.120
Most people who are deploying big
servers will use it for that as well.

00:46:31.120 --> 00:46:35.000
They want to find out how many streams
the server is comfortable with.

00:46:35.020 --> 00:46:36.580
We use it for stress testing.

00:46:36.580 --> 00:46:38.250
That's how we find a lot of bugs.

00:46:38.250 --> 00:46:42.780
We just load it up with as many
streams as we can at one time.

00:46:43.650 --> 00:46:45.720
We also use it for protocol testing.

00:46:45.720 --> 00:46:51.560
The streaming load tool supports all
of the variations of the RTSP protocols

00:46:51.560 --> 00:46:55.400
that QuickTime Streaming Server supports.

00:46:55.400 --> 00:46:57.390
We have...

00:46:57.770 --> 00:47:02.020
Tunneling over port 80, HTTP,
we've got standard RTSP,

00:47:02.020 --> 00:47:03.900
we've got the skip
protection enhancements,

00:47:03.900 --> 00:47:06.300
which are standard,
but they're kind of extensions to RTSP,

00:47:06.300 --> 00:47:07.700
and so on.

00:47:07.700 --> 00:47:10.200
And this simulator supports all of those,
so you can test those protocols.

00:47:10.200 --> 00:47:13.440
And it works with servers and proxies,
because it does look just like

00:47:13.440 --> 00:47:15.080
a standard streaming client.

00:47:17.840 --> 00:47:21.340
This is what the command line
options are pretty straightforward.

00:47:21.340 --> 00:47:22.320
Not a whole lot there.

00:47:22.320 --> 00:47:25.800
Most of the information that you're going
to modify will be in the config file.

00:47:27.590 --> 00:47:29.570
The config file is again text format.

00:47:29.670 --> 00:47:34.740
It's not XML,
it's just a key value pair file.

00:47:34.740 --> 00:47:37.860
Some of the options you're going to want
to set possibly are the client type.

00:47:37.860 --> 00:47:39.870
Reliable UDP is skip protection.

00:47:39.870 --> 00:47:41.540
UDP is standard RTSP.

00:47:41.620 --> 00:47:45.630
HTTP is tunneling over,
tunneling RTSP over HTTP.

00:47:45.630 --> 00:47:47.610
TCP is interleaved RTSP.

00:47:47.610 --> 00:47:51.050
Most of you probably
don't care about this.

00:47:51.260 --> 00:47:54.300
Number of concurrent clients.

00:47:54.300 --> 00:47:56.260
This tool can simulate
more than one client.

00:47:56.260 --> 00:48:01.880
So if you wanted to simulate 100 clients,
you would set concurrent clients to 100.

00:48:02.240 --> 00:48:02.910
Movie length.

00:48:02.970 --> 00:48:08.230
So you might want to control how
long the movie is actually watched.

00:48:08.240 --> 00:48:10.430
It may be a 20-minute movie,
but you just want to do a little

00:48:10.430 --> 00:48:13.080
10-second test to make sure that
the movie is up and running.

00:48:13.080 --> 00:48:14.640
Just set that to 10 seconds.

00:48:14.640 --> 00:48:17.690
Run forever means that the
tool just runs forever.

00:48:17.750 --> 00:48:21.520
You'd normally use that if
you're doing performance testing.

00:48:21.580 --> 00:48:26.370
It's hard to tell how long it's going to
take you to get everything all set up.

00:48:26.430 --> 00:48:29.150
So you just get this thing going,
crank it up, and it just runs forever

00:48:29.250 --> 00:48:30.170
until you stop it.

00:48:31.240 --> 00:48:34.410
The load tool also generates logs,
and these logs contain

00:48:34.420 --> 00:48:36.040
all kinds of information.

00:48:36.040 --> 00:48:38.070
I'm going to show you one in
a second about what happened

00:48:38.070 --> 00:48:39.500
with each of the sessions.

00:48:39.500 --> 00:48:40.810
And URLs, of course.

00:48:40.810 --> 00:48:44.020
You need to specify which
movies you want to watch.

00:48:44.020 --> 00:48:47.740
The load tool can take a list of URLs.

00:48:47.740 --> 00:48:50.580
So if you've got 100 movies on your
server and you want to have this

00:48:50.580 --> 00:48:53.580
tool walk through every one of them,
just include all 100 URLs in the

00:48:53.580 --> 00:48:55.120
config file and it'll do that.

00:48:55.140 --> 00:48:58.660
So here's what the output
looks like in the terminal.

00:49:01.270 --> 00:49:04.640
So one important thing here is
the checking for streaming load

00:49:04.640 --> 00:49:06.980
tool .mov on the target servers.

00:49:06.980 --> 00:49:11.010
So what that's saying,
the way streaming load tool works

00:49:11.010 --> 00:49:15.500
is that it requires that a movie
with this name is on the server,

00:49:15.500 --> 00:49:16.540
otherwise it's not going to run.

00:49:16.540 --> 00:49:19.740
And the reason we do that is we
don't want people to take streaming

00:49:19.740 --> 00:49:22.970
load tool and just start putting
stress on everybody's servers,

00:49:22.970 --> 00:49:23.560
right?

00:49:23.560 --> 00:49:27.400
So the only way it'll work is if there's
a movie with this name on your server,

00:49:27.400 --> 00:49:29.990
so you need to make sure
of that before you use it.

00:49:31.200 --> 00:49:34.950
So it shows you what the options were,
and then it just kind of shows you

00:49:34.950 --> 00:49:38.900
every second kind of status until
it gets done and then it's done.

00:49:38.900 --> 00:49:40.260
So that's the output there.

00:49:40.260 --> 00:49:41.750
And this is the log.

00:49:41.760 --> 00:49:43.660
The logs have all kinds
of information in them.

00:49:43.660 --> 00:49:46.470
I'm not even sure you guys can
kind of parse through all of that.

00:49:46.480 --> 00:49:50.080
It'll show you things
like total packets lost,

00:49:50.100 --> 00:49:54.680
duplicate packets,
what the data rate was for the stream,

00:49:54.680 --> 00:49:57.010
basically all that stuff.

00:49:57.040 --> 00:49:58.680
If there were an error,
it would show you an error.

00:49:58.680 --> 00:50:01.060
There's a couldn't
connect to server error.

00:50:01.180 --> 00:50:01.960
It's in the middle.

00:50:02.050 --> 00:50:06.330
So what this is good for is this makes
it possible for people to write tools

00:50:06.330 --> 00:50:09.730
in Perl or shell scripts or whatever
that go off and periodically call

00:50:09.790 --> 00:50:13.120
streaming load tool with a preset,
predefined list of URLs.

00:50:13.180 --> 00:50:16.050
Those tools can then parse
through this log and then

00:50:16.050 --> 00:50:18.070
actually kind of monitor status.

00:50:18.120 --> 00:50:21.720
They can send you an email when they see
a problem or they can generate HTML and

00:50:21.730 --> 00:50:24.360
show you the status of all your streams.

00:50:24.360 --> 00:50:25.360
We've done this at Apple before.

00:50:25.360 --> 00:50:27.270
It's actually kind of cool.

00:50:28.930 --> 00:50:32.020
So, new in Panther Server,
I talked about a couple of tools

00:50:32.020 --> 00:50:33.900
that the QTSS publisher uses.

00:50:33.900 --> 00:50:39.460
We have now provided some command line
tools for manipulating QuickTime movies

00:50:39.460 --> 00:50:42.360
for internet preparation,
basically.

00:50:42.360 --> 00:50:44.180
Qt Media is a new tool.

00:50:44.180 --> 00:50:47.590
It allows you to do things
like change the annotations,

00:50:47.600 --> 00:50:52.440
make the movie a fast start movie,
add a hint track to the movie, and so on.

00:50:52.540 --> 00:50:54.650
It's pretty straightforward.

00:50:55.080 --> 00:50:58.060
This is going to be
really good for workflow.

00:50:58.060 --> 00:51:00.200
People can set up scripts that do
all of this stuff automatically.

00:51:00.200 --> 00:51:03.080
Cron jobs,
you can have the Unix form of a folder

00:51:03.270 --> 00:51:07.770
action and have a cron job that watches
folders and automatically hints movies

00:51:07.770 --> 00:51:10.670
and shoves them off in the right spot.

00:51:11.110 --> 00:51:13.160
Next tool is QtRef,
and this is just a command line

00:51:13.160 --> 00:51:14.200
tool for creating ref movies.

00:51:14.200 --> 00:51:17.120
So you can do all of this
through the terminal.

00:51:17.120 --> 00:51:19.480
If you're at the machine,
I don't know why you'd want to do that,

00:51:19.480 --> 00:51:21.850
but if you need to SSH in from a
Windows machine or a Unix machine,

00:51:21.850 --> 00:51:23.580
you can still do things with QuickTime.

00:51:26.060 --> 00:51:28.590
Okay, so you thought that was boring.

00:51:28.680 --> 00:51:30.080
Now it's going to get really esoteric.

00:51:32.510 --> 00:51:34.890
So the server's got some
troubleshooting modes.

00:51:34.900 --> 00:51:40.520
We use these-- at Apple,
we do a lot of streaming.

00:51:40.750 --> 00:51:44.240
We've come across a lot of problems.

00:51:44.250 --> 00:51:45.890
As I mentioned, firewall problems.

00:51:45.900 --> 00:51:49.340
It's really hard to figure out why
people are not able to get a stream

00:51:49.340 --> 00:51:53.220
sometimes or if they're seeing
blips or not good quality video.

00:51:53.220 --> 00:51:56.000
We have some modes in the server
that really let you kind of dive

00:51:56.070 --> 00:51:59.040
really deep down and kind of
troubleshoot these problems.

00:51:59.040 --> 00:52:02.470
They're basically what you
would see in a packet sniffer,

00:52:02.540 --> 00:52:06.520
but we format things because we
understand what the protocol is.

00:52:06.520 --> 00:52:10.080
We format them into a,
I don't want to say human readable,

00:52:10.080 --> 00:52:15.030
but engineer readable format.

00:52:15.260 --> 00:52:17.700
So here are a couple of them.

00:52:17.700 --> 00:52:20.540
You can turn on RTSP debug printf.

00:52:20.620 --> 00:52:22.800
So remember,
you saw all of the negotiation

00:52:22.810 --> 00:52:24.240
between the server and the client.

00:52:24.240 --> 00:52:25.830
I want to watch this movie.

00:52:25.830 --> 00:52:27.240
What does it look like?

00:52:27.240 --> 00:52:29.200
Back and forth, the TCP thing.

00:52:29.200 --> 00:52:31.780
This will just kind of dump all of
that to the terminal as it's happening.

00:52:31.780 --> 00:52:33.040
You can kind of monitor those things.

00:52:33.040 --> 00:52:34.560
Packet header printf.

00:52:34.560 --> 00:52:39.020
This will print packet headers for
all of the RTP and the RTCP packets.

00:52:39.020 --> 00:52:41.370
We don't print, obviously,
the media from the RTP packets

00:52:41.370 --> 00:52:43.020
because it wouldn't be very useful.

00:52:43.020 --> 00:52:47.090
And then you can,
the options here let you specify

00:52:47.090 --> 00:52:50.400
which of those things you want to see.

00:52:50.400 --> 00:52:54.360
If you turn ACK off,
you'll get far fewer packets.

00:52:54.420 --> 00:52:58.460
I'm going to kind of show
you how that works now.

00:53:01.640 --> 00:53:03.600
Just so you can see how horrendous it is.

00:53:03.600 --> 00:53:05.590
Flip over to the demo machine.

00:53:05.600 --> 00:53:10.170
So I'm going to...

00:53:14.230 --> 00:53:15.200
I'm going to cheat a little bit.

00:53:15.200 --> 00:53:19.440
I'm not going to type
the entire command in.

00:53:19.440 --> 00:53:24.320
But basically what I'm doing is launching
the... You guys see that okay up there?

00:53:24.320 --> 00:53:26.300
No.

00:53:30.010 --> 00:53:30.940
I'll highlight each thing.

00:53:31.080 --> 00:53:33.810
So, sudo, as you may not know,
is just a way to run things

00:53:33.880 --> 00:53:38.230
basically as super user without
actually becoming super user.

00:53:38.270 --> 00:53:41.190
QuickTime Streaming Server is
the command I'm running.

00:53:41.540 --> 00:53:47.540
I want to run this server using a
config file that I have modified,

00:53:47.550 --> 00:53:49.480
and I've turned on those
options that I just showed you.

00:53:49.480 --> 00:53:52.060
I'm running in debug mode, dash D.

00:53:52.060 --> 00:53:54.960
And I've already got a server
running on this machine.

00:53:54.960 --> 00:53:57.780
I don't want to interrupt that one,
so I'm going to tell it to actually

00:53:57.810 --> 00:54:00.260
do all of its streaming on port 8765.

00:54:00.260 --> 00:54:02.730
So let me start it up.

00:54:04.660 --> 00:54:07.820
I'm asking for my root password
because of the sudo command.

00:54:07.820 --> 00:54:11.240
So the server's running,
and I'm going to show you what happens

00:54:11.240 --> 00:54:14.240
when you connect a client with all
of these debugging options turned on.

00:54:14.240 --> 00:54:15.220
It's very fun.

00:54:18.450 --> 00:54:19.390
So can you guys read that?

00:54:19.400 --> 00:54:23.960
Do you know what it means?

00:54:24.210 --> 00:54:27.500
Anyway, basically the point here is to
show you that there is all kinds

00:54:27.520 --> 00:54:29.010
of information coming out of there.

00:54:29.080 --> 00:54:29.660
So let me flip back to the slides.

00:54:29.690 --> 00:54:33.820
I'll kind of show you just a little
bit of some of the information that...

00:54:35.400 --> 00:54:37.110
comes through.

00:54:37.300 --> 00:54:39.820
Slide.

00:54:39.820 --> 00:54:41.990
Unless you guys were still watching that.

00:54:45.300 --> 00:54:48.420
Okay, so you probably couldn't see it
because it went by way too fast,

00:54:48.520 --> 00:54:51.660
so here's what RTSP looks like.

00:54:51.800 --> 00:54:57.540
This is the output that you'll get
when you put it into this mode,

00:54:57.540 --> 00:55:00.910
showing you the output.

00:55:01.470 --> 00:55:03.520
IP of the server,
showing you the port that the

00:55:03.520 --> 00:55:06.360
client connected to on the server,
7070 in this case,

00:55:06.360 --> 00:55:07.980
which is a little interesting.

00:55:07.980 --> 00:55:09.940
Maybe that's part of the
problem somebody's having.

00:55:09.940 --> 00:55:11.680
Shows you the port that
the client's using,

00:55:11.680 --> 00:55:12.880
not all that important.

00:55:12.880 --> 00:55:14.550
The URL they used.

00:55:14.660 --> 00:55:16.520
Shows you the bandwidth.

00:55:16.520 --> 00:55:20.720
The bandwidth here is 2
billion and something.

00:55:20.720 --> 00:55:22.770
Basically, that means that they've
got it set to LAN.

00:55:22.770 --> 00:55:24.360
It's set to the highest
bandwidth possible.

00:55:24.360 --> 00:55:27.280
If they had their
QuickTime player set to modem,

00:55:27.280 --> 00:55:31.260
it would say whatever modem rate
QuickTime player sends back.

00:55:31.300 --> 00:55:33.650
That can be useful when people
are complaining about not

00:55:33.650 --> 00:55:35.080
getting high quality content.

00:55:35.080 --> 00:55:37.650
Maybe they've left their
QuickTime player set to modem speed.

00:55:37.650 --> 00:55:39.660
Look at that and you can tell
immediately what happened.

00:55:39.660 --> 00:55:42.060
Also, in the user agent field,
you can tell what version

00:55:42.060 --> 00:55:43.260
of QuickTime they've got.

00:55:43.260 --> 00:55:46.300
You can tell which OS they're running on,
which CPU, things like that,

00:55:46.300 --> 00:55:49.640
and that can be really useful when
you're trying to troubleshoot as well.

00:55:52.510 --> 00:55:55.680
The response from Describe
has a couple of little,

00:55:55.690 --> 00:55:58.160
it's a little less interesting
when you're troubleshooting,

00:55:58.160 --> 00:56:00.560
but let's just kind of walk,
go through the red ones here.

00:56:00.560 --> 00:56:05.050
That X accept retransmit, R retransmit,
that basically tells you that

00:56:05.150 --> 00:56:07.990
the server and the client have
agreed to do skip protection.

00:56:08.000 --> 00:56:10.820
If you don't see that in the response,
then it means that they're not

00:56:10.850 --> 00:56:13.330
going to get skip protection,
and they're probably not going

00:56:13.330 --> 00:56:14.440
to get instant on as well.

00:56:14.440 --> 00:56:17.270
So this could help,
won't tell you what the problem is,

00:56:17.270 --> 00:56:20.870
but it can kind of get you closer
to determining what the problem is.

00:56:21.860 --> 00:56:25.470
All of that information,
starting with the V equals sign and

00:56:25.480 --> 00:56:28.780
all the way down to the red MPEG,
that's the SDP information

00:56:28.780 --> 00:56:29.860
I was talking about.

00:56:29.880 --> 00:56:34.370
So this is the description
of each track of the movie,

00:56:34.580 --> 00:56:38.780
the format of the movie,
all that kind of stuff.

00:56:38.820 --> 00:56:41.730
Not that useful for
troubleshooting usually,

00:56:41.730 --> 00:56:42.860
but sometimes.

00:56:44.340 --> 00:56:47.470
Setup request is a request that the
client makes after-- so the first request

00:56:47.550 --> 00:56:50.120
it makes is that describe you saw,
which is basically the

00:56:50.120 --> 00:56:53.870
client saying to the server,
tell me about this movie at this URL.

00:56:54.000 --> 00:56:56.830
Comes back, client looks through all
of that SDP information,

00:56:56.830 --> 00:56:58.560
and it decides which
tracks it wants to play.

00:56:58.560 --> 00:56:59.900
It doesn't have to play them all.

00:57:00.090 --> 00:57:02.950
And then it sends a setup request for
each track that it would like to play.

00:57:02.960 --> 00:57:05.570
So if you look at the setup request,
look at the red areas.

00:57:05.650 --> 00:57:11.390
Track-- it's saying here that I want
track three of the sample 300k bit movie.

00:57:11.960 --> 00:57:16.980
Another important thing is that
it's telling you which ports that

00:57:16.980 --> 00:57:20.180
it would like you to send media to.

00:57:20.180 --> 00:57:23.300
This can help you dealing
with firewall issues.

00:57:23.300 --> 00:57:29.300
This is the client telling the server,
"Send data to me on these ports via UDP."

00:57:29.830 --> 00:57:31.770
And then,
it won't help with troubleshooting,

00:57:31.770 --> 00:57:34.380
but in the response there
you'll see this X random data,

00:57:34.380 --> 00:57:37.640
and then underneath that
you're going to see about 1400

00:57:37.640 --> 00:57:41.570
bytes worth of random data.

00:57:42.420 --> 00:57:44.330
Don't be disturbed by that.

00:57:44.450 --> 00:57:46.660
So basically what that is,
that's part of our skip protection

00:57:46.660 --> 00:57:49.560
technology and the instant on technology.

00:57:49.560 --> 00:57:54.410
We do some active bandwidth measurement,
and this is one of the ways we

00:57:54.410 --> 00:57:56.520
kind of determine bandwidth.

00:57:56.520 --> 00:57:58.310
We kind of send this random
probe packet out there,

00:57:58.310 --> 00:58:00.000
and then we measure the
time it takes to get back,

00:58:00.000 --> 00:58:01.700
and that helps us to determine bandwidth.

00:58:03.720 --> 00:58:05.400
Okay, so that's RTSP.

00:58:05.400 --> 00:58:08.120
Now, RTCP, these are the status packets
that go back and forth.

00:58:08.320 --> 00:58:09.380
These are coming from the client.

00:58:09.380 --> 00:58:10.700
How do I know that?

00:58:10.880 --> 00:58:12.870
It says app right there.

00:58:14.080 --> 00:58:15.460
It's got all kinds of information in it.

00:58:15.600 --> 00:58:17.710
Some of it useful, some of it not.

00:58:17.750 --> 00:58:18.880
But it's going to show you.

00:58:18.880 --> 00:58:21.260
And these things come over often,
every five seconds to

00:58:21.320 --> 00:58:22.980
30 seconds or whatever.

00:58:22.980 --> 00:58:25.520
It depends on basically which
player you're talking to.

00:58:25.520 --> 00:58:28.060
It'll show you the bit
rate of the client,

00:58:28.060 --> 00:58:32.160
the number of packets received,
the number of packets dropped.

00:58:32.260 --> 00:58:36.680
And you can kind of monitor these
things in real time if you wanted to.

00:58:36.680 --> 00:58:38.220
It's a little difficult.

00:58:38.220 --> 00:58:40.600
You'd probably have to write a
tool that actually parsed all

00:58:40.600 --> 00:58:42.230
this output and monitored things.

00:58:44.180 --> 00:58:46.070
It's a little difficult.

00:58:46.070 --> 00:58:50.540
You'd probably have to write a
tool that actually parsed all

00:58:50.600 --> 00:58:53.420
this output and monitored things.

00:58:53.730 --> 00:58:57.390
So the server supports a protocol
that lets you talk to it directly via

00:58:57.390 --> 00:59:04.130
HTTP to set and get its attributes
and to get basically its status.

00:59:04.140 --> 00:59:06.840
The server is an object-oriented.

00:59:06.840 --> 00:59:09.220
It's written in C++ inside the server.

00:59:09.220 --> 00:59:13.120
If you know anything about programming,
there are all kinds of objects,

00:59:13.180 --> 00:59:15.400
and there's this whole
hierarchy of values that you

00:59:15.420 --> 00:59:16.740
can grab out of the server.

00:59:18.980 --> 00:59:21.810
Because it's HTTP-based, though,
it's really easy to write tools over it.

00:59:21.810 --> 00:59:23.560
You just send HTTP requests,
you get data back,

00:59:23.560 --> 00:59:25.670
you can parse through it,
do whatever you want with it.

00:59:25.680 --> 00:59:27.980
That's what we use for the web admin.

00:59:27.980 --> 00:59:31.220
Web admin makes requests,
parses it all out, generates HTML,

00:59:31.220 --> 00:59:32.980
and then puts it up on a web page.

00:59:32.980 --> 00:59:37.860
The easiest way to deal with it is
probably to use Curl for a web browser.

00:59:37.860 --> 00:59:40.730
If you want to just kind of
look at things really quickly

00:59:40.730 --> 00:59:42.220
without writing a tool.

00:59:42.220 --> 00:59:44.230
And you use port 554 for this.

00:59:44.230 --> 00:59:46.620
It's pretty straightforward, though.

00:59:46.620 --> 00:59:48.500
Here's what a request looks like.

00:59:48.960 --> 00:59:51.080
It's authenticated,
so you need to provide

00:59:51.080 --> 00:59:53.540
a username and password,
and then your host name,

00:59:53.560 --> 00:59:55.190
and then an attribute path.

00:59:55.240 --> 00:59:59.920
So, as I said, the server's very modular
and object-oriented.

00:59:59.950 --> 01:00:04.480
This is kind of the standard path to get
to an attribute that belongs to this,

01:00:04.480 --> 01:00:06.610
actually to the server itself.

01:00:06.620 --> 01:00:09.240
So, modules, admin, server, movie folder.

01:00:09.240 --> 01:00:10.620
Here are some Curl commands.

01:00:10.620 --> 01:00:12.500
I'm going to actually go over and
do a couple of them over here.

01:00:12.500 --> 01:00:15.190
That's what commands would look like.

01:00:15.260 --> 01:00:18.700
That star that you see there,
we can flip back over here.

01:00:18.960 --> 01:00:19.990
Thank you.

01:00:21.730 --> 01:00:24.010
So first let me kind of show you curl.

01:00:24.090 --> 01:00:31.040
So curl is basically just a command line,
like,

01:00:31.850 --> 01:00:48.310
Client for making requests.

01:00:48.310 --> 01:00:48.310
It can do HTTP, FTP.

01:00:48.310 --> 01:00:48.310
I mean, what it does is it just
returns things in raw format.

01:00:48.310 --> 01:00:48.310
It doesn't try to format it at all.

01:00:48.310 --> 01:00:48.310
So if I were to curl
www.apple.com in a new terminal,

01:00:48.310 --> 01:00:48.310
because I spewed too
much stuff into that one.

01:00:50.550 --> 01:00:53.840
I'm going to get back
Apple's website in HTML form.

01:00:53.840 --> 01:00:55.600
So that's basically what curl does.

01:00:55.640 --> 01:00:57.640
I'll clean that up.

01:00:57.730 --> 01:01:01.440
So if I wanted to talk to
streaming admin server,

01:01:02.780 --> 01:01:06.760
I would use curl,
use the format that I talked about.

01:01:06.760 --> 01:01:08.860
Now, notice at the end I put a star.

01:01:08.860 --> 01:01:09.840
Star is a wild card.

01:01:09.880 --> 01:01:12.710
That means show me everything
inside the server object.

01:01:12.710 --> 01:01:13.330
I hit that.

01:01:13.330 --> 01:01:17.090
It's going to ask me for the password.

01:01:17.090 --> 01:01:20.610
There is all kinds of stuff in here.

01:01:20.610 --> 01:01:22.020
Some of this is

01:01:23.360 --> 01:01:26.330
If you're familiar with
the QuickTime Streaming

01:01:26.590 --> 01:01:29.180
Server programming APIs,
you probably understand

01:01:29.180 --> 01:01:29.720
what some of these are.

01:01:29.720 --> 01:01:30.740
I'm sure most of you are not.

01:01:30.740 --> 01:01:32.820
It's showing me all
kinds of things in here.

01:01:32.820 --> 01:01:35.890
The current bandwidth of the server,
the total connections that it's

01:01:35.960 --> 01:01:39.840
ever served since it's come up,
the current bandwidth.

01:01:39.840 --> 01:01:43.610
If I really wanted to get...

01:01:53.350 --> 01:01:56.200
A server client sessions.

01:01:56.200 --> 01:01:58.230
I'm still using the wildcard
there because I want to

01:01:58.230 --> 01:01:59.420
see all of the sessions.

01:01:59.420 --> 01:02:04.110
And I probably don't have
any because I think our...

01:02:04.930 --> 01:02:05.830
Yes, it didn't find any.

01:02:05.840 --> 01:02:09.220
So basically with that,
I'm not going to continue because

01:02:09.220 --> 01:02:10.980
I think this is probably not
that interesting to people,

01:02:10.980 --> 01:02:13.460
but it would show you a list of
all of the current connections.

01:02:13.460 --> 01:02:14.970
They would all have an
ID attached to them,

01:02:14.970 --> 01:02:16.440
and then if I wanted
to dive down further,

01:02:16.450 --> 01:02:18.460
I could say, okay,
I want to see session number X.

01:02:18.460 --> 01:02:20.660
It would show you all the
attributes for that connection.

01:02:20.660 --> 01:02:24.010
So you can remotely monitor your server,
remotely troubleshoot your server,

01:02:24.010 --> 01:02:27.310
and actually look at what's happening
on the server with all of the clients.

01:02:29.460 --> 01:02:31.290
Okay, how many people are asleep?

01:02:31.300 --> 01:02:36.860
Okay,
so kind of closing things down here.

01:02:36.860 --> 01:02:41.840
So for more information,
we've got the roadmap here.

01:02:42.350 --> 01:02:45.220
A couple of QuickTime sessions,
720 and 722.

01:02:45.310 --> 01:02:49.520
They did cancel the session Wi-Fi and 3G.

01:02:49.520 --> 01:02:51.620
Let the Games Begin has been canceled.

01:02:54.080 --> 01:02:56.840
Tomorrow, if you want to be probably
a little bit less bored,

01:02:56.840 --> 01:02:59.370
but it is definitely more technical,
the QuickTime Streaming

01:02:59.460 --> 01:03:02.040
Server programming session
is going to happen tomorrow.

01:03:02.040 --> 01:03:05.870
If you're an open source programmer
that wants to learn about modules,

01:03:05.960 --> 01:03:07.160
you should show up.

01:03:07.220 --> 01:03:09.800
If you just want to know where to start
when you're working on the server,

01:03:09.800 --> 01:03:14.040
our open source project is available
to you to modify as much as you like,

01:03:14.090 --> 01:03:16.780
as long as you abide by
Apple's open source license.

01:03:17.580 --> 01:03:19.820
John Murata,
our lead engineer on the server,

01:03:19.890 --> 01:03:23.010
is going to go through the entire
architecture of the server and

01:03:23.010 --> 01:03:25.880
kind of walk you through how to get
started on actually modifying the

01:03:25.880 --> 01:03:27.420
actual source code on the server.

01:03:28.980 --> 01:03:33.900
We've got a bunch of QuickTime sessions.

01:03:33.910 --> 01:03:36.060
Kind of one to note is the producer
listening party with QuickTime.

01:03:36.060 --> 01:03:38.740
You're going to see probably a
little more QTSS publisher there,

01:03:38.740 --> 01:03:42.880
and John's going to do an MP3
playlist that actually works,

01:03:42.880 --> 01:03:43.740
I think.

01:03:44.800 --> 01:03:52.600
[Transcript missing]

01:03:53.160 --> 01:03:56.790
If you need to contact anybody
about QuickTime Streaming Server,

01:03:56.790 --> 01:03:59.700
anything QuickTime,
QuickTimeMan@apple.com.

01:04:00.020 --> 01:04:03.730
Guillermo Ortiz is your man.

01:04:03.810 --> 01:04:04.600
Documentation.

01:04:04.740 --> 01:04:08.860
I don't see it on here.

01:04:08.860 --> 01:04:10.690
Let me back up.

01:04:15.010 --> 01:04:15.810
Okay, I won't back up.

01:04:15.980 --> 01:04:21.160
But if you're not aware of this,
we have a couple of mailing

01:04:21.160 --> 01:04:22.460
lists for the streaming server.

01:04:22.460 --> 01:04:24.930
We have a user's mailing list and
we have a developer's mailing list.

01:04:24.940 --> 01:04:27.740
The developer's mailing list is
mainly for people who are actually

01:04:27.740 --> 01:04:30.440
doing coding on the server,
writing plugins, although a lot of

01:04:30.440 --> 01:04:31.900
administrators are there too.

01:04:31.900 --> 01:04:34.160
And then the user playlist is
more for system administrators and

01:04:34.160 --> 01:04:35.640
people who are deploying the server.

01:04:35.640 --> 01:04:40.480
Go to lists.apple.com,
just search for streaming, and subscribe.

01:04:40.480 --> 01:04:41.810
They're great lists.

01:04:41.930 --> 01:04:44.480
They have massive amounts
of good information.

01:04:44.900 --> 01:04:47.700
Browse the archives if you want
to see what I'm talking about.

01:04:47.700 --> 01:04:50.940
And we're all on the lists and we
try to be as responsive as we can.