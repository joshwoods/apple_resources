WEBVTT

00:00:25.000 --> 00:00:32.090
Thank you.

00:00:32.440 --> 00:00:32.800
I need my clicker, don't I?

00:00:32.800 --> 00:00:32.800
Aha.

00:00:33.060 --> 00:00:35.480
I'm very pleased to be here this morning.

00:00:35.540 --> 00:00:38.930
I will say first of all
I want to apologize for Mr.

00:00:38.940 --> 00:00:41.640
Bob Fraser who is the senior
product manager for WebObjects.

00:00:41.640 --> 00:00:45.540
He decided foolishly to plan a
vacation in Costa Rica well after the

00:00:45.540 --> 00:00:51.390
Worldwide Developer Conference so that
he would not miss anything important.

00:00:51.400 --> 00:00:54.200
So Bob is in Costa Rica this week.

00:00:54.200 --> 00:00:57.750
And I'm very pleased to come
here and talk to you about the

00:00:57.750 --> 00:00:59.960
State of the Union with WebObjects.

00:00:59.960 --> 00:01:03.310
As some of you may have heard me
say in the developer technology

00:01:03.310 --> 00:01:07.070
track overview yesterday,
I've been back at Apple now for about

00:01:07.080 --> 00:01:09.390
12 weeks or actually about 11 weeks.

00:01:09.390 --> 00:01:11.100
This is my 12th week back.

00:01:11.100 --> 00:01:15.870
And in my previous life at Apple actually
I dealt extensively with WebObjects.

00:01:15.870 --> 00:01:18.460
In fact,
I was one of the product managers

00:01:18.460 --> 00:01:21.420
for WebObjects at Next back in 1996.

00:01:21.520 --> 00:01:26.390
So I want to tell you today first
of all some things that you're

00:01:26.400 --> 00:01:28.400
going to learn from this session.

00:01:28.400 --> 00:01:29.160
We have a WebObjects overview which
basically talks about web analytics.

00:01:29.160 --> 00:01:29.480
We have a web analytics overview which
basically talks about web analytics.

00:01:29.480 --> 00:01:29.480
We have a web analytics overview which
basically talks about web analytics.

00:01:29.480 --> 00:01:29.480
We have a web analytics overview which
basically talks about web analytics.

00:01:29.480 --> 00:01:29.480
We have a web analytics overview which
basically talks about web analytics.

00:01:29.480 --> 00:01:29.480
We have a web analytics overview which
basically talks about web analytics.

00:01:29.480 --> 00:01:29.480
We have a web analytics overview which
basically talks about web analytics.

00:01:29.480 --> 00:01:30.480
We have a web analytics overview which
basically talks about web analytics.

00:01:30.480 --> 00:01:36.140
We're going to talk about the
direction for the WebObjects product

00:01:36.140 --> 00:01:38.510
and we're going to also bring
up Catherine Wentz to talk about the

00:01:38.630 --> 00:01:42.630
documentation state of the union.

00:01:43.610 --> 00:01:47.350
. First, the overview of WebObjects.

00:01:47.350 --> 00:01:49.060
For those of you who are not
familiar with WebObjects,

00:01:49.130 --> 00:01:53.100
it is really the easiest way to
build J2EE compatible solutions.

00:01:53.100 --> 00:01:56.780
And for those of you who are
familiar with WebObjects,

00:01:56.870 --> 00:02:01.360
this is still the easiest way to
build J2EE compatible solutions.

00:02:01.400 --> 00:02:03.900
That's actually the good news.

00:02:03.980 --> 00:02:06.640
It's not just a marketing claim.

00:02:06.700 --> 00:02:08.940
We have fantastic technology for building
Java enterprise applications at Apple.

00:02:09.170 --> 00:02:11.610
WebObjects contains really
everything you need to build these

00:02:11.610 --> 00:02:13.140
enterprise class applications.

00:02:13.140 --> 00:02:14.420
There's an IDE.

00:02:14.470 --> 00:02:17.100
Actually, I like to joke there's like
two or three IDEs right now,

00:02:17.100 --> 00:02:20.060
but we're working on getting to one.

00:02:20.060 --> 00:02:21.360
You get database mapping.

00:02:21.440 --> 00:02:23.770
You get code-free rapid prototyping.

00:02:23.860 --> 00:02:26.360
You get the ability to
provide web services,

00:02:26.360 --> 00:02:28.800
which of course are very important today.

00:02:29.090 --> 00:02:32.390
And you get tools for HTML page layout.

00:02:32.920 --> 00:02:36.870
The advantages of what we provide with
WebObjects over other development tools

00:02:36.880 --> 00:02:41.200
for Java Enterprise applications are,
first of all, that we actually can

00:02:41.200 --> 00:02:42.340
accelerate time to market.

00:02:42.340 --> 00:02:43.940
And we do that in a number of ways.

00:02:43.940 --> 00:02:48.560
We do that partly because we enable very
rapid prototyping of your applications.

00:02:48.560 --> 00:02:51.200
We can actually get you
to a functional prototype,

00:02:51.200 --> 00:02:55.490
data-driven application extremely
quickly with the WebObjects technology.

00:02:56.020 --> 00:02:59.730
And we then allow developers to do
more because we give you so much out

00:02:59.730 --> 00:03:01.420
of the box with very little effort.

00:03:01.420 --> 00:03:04.450
Developers can focus on the
code that specifically adds

00:03:04.450 --> 00:03:06.230
value for their application.

00:03:06.230 --> 00:03:08.990
I also like to say, jokingly,
they can focus on their core

00:03:09.030 --> 00:03:10.680
competency if they have one.

00:03:10.680 --> 00:03:14.550
And overall, what you get from this is a
reduced cost of ownership.

00:03:14.550 --> 00:03:17.960
You get the ability to write
an application that does more.

00:03:17.960 --> 00:03:19.680
You get to write less code.

00:03:19.680 --> 00:03:22.460
Because you write less code,
you test less code.

00:03:22.460 --> 00:03:23.970
You maintain less code.

00:03:23.980 --> 00:03:25.680
And you have to make fewer changes.

00:03:26.020 --> 00:03:27.510
As your business evolves.

00:03:27.520 --> 00:03:31.100
And all of this has a net result of
much lower cost of ownership for an

00:03:31.140 --> 00:03:33.400
application during its lifecycle.

00:03:33.780 --> 00:03:37.800
So we like to think of WebObjects as
a kind of a server-side digital hub.

00:03:37.960 --> 00:03:42.870
It's an application server that can
generate web services as a presentation,

00:03:42.880 --> 00:03:44.700
HTML web pages as a presentation.

00:03:44.700 --> 00:03:46.610
It can connect to
Java client applications.

00:03:46.620 --> 00:03:49.760
And of course, on the back end,
it can be driven by our business systems,

00:03:49.760 --> 00:03:51.070
driven by our databases.

00:03:53.360 --> 00:03:57.120
The architecture then is
a three-tier architecture

00:03:57.170 --> 00:04:01.930
where we start with our data,
which could be inside a database

00:04:01.930 --> 00:04:05.800
connected through JDBC or
a directory through JNDI.

00:04:05.800 --> 00:04:10.000
We have Java code that
represents our business logic.

00:04:10.000 --> 00:04:12.990
Effectively,
we capture our business policy

00:04:12.990 --> 00:04:16.550
in the form of Java code in
a business objects layer.

00:04:17.200 --> 00:04:21.320
Then we present it to our clients or
customers through web applications,

00:04:21.320 --> 00:04:24.670
through web services,
and through Java applications.

00:04:26.510 --> 00:04:29.780
The development workflow
is actually quite nice.

00:04:29.780 --> 00:04:32.260
You can start with the database
and basically work your way from

00:04:32.260 --> 00:04:34.000
left to right in the diagram.

00:04:34.120 --> 00:04:38.240
So you, from the database,
run our EO Modeler tool.

00:04:38.240 --> 00:04:43.070
The EO Modeler tool will actually reverse
engineer the schema of your database

00:04:43.070 --> 00:04:47.280
and it will generate for you business
objects and generate Java stub code,

00:04:47.290 --> 00:04:50.380
which you then put into the
Project Builder environment.

00:04:50.380 --> 00:04:52.590
And in Project Builder,
that's where you actually

00:04:52.590 --> 00:04:55.160
can write the Java code that
captures your business rules.

00:04:55.160 --> 00:04:56.380
So this is where you're
going to get the data.

00:04:56.400 --> 00:04:59.330
You're going to get the
business or enterprise objects

00:04:59.470 --> 00:05:02.080
that are that middle layer,
the objects that will

00:05:02.190 --> 00:05:05.540
encapsulate data and policy for
your enterprise application.

00:05:05.540 --> 00:05:08.090
You can then go through the
WebObjects Builder to create

00:05:08.090 --> 00:05:09.530
a web-based presentation.

00:05:09.530 --> 00:05:12.040
You can go through our
Web Services Assistant to create a web

00:05:12.040 --> 00:05:14.040
service from those enterprise objects.

00:05:14.180 --> 00:05:17.170
Or you can go through
Interface Builder to create a

00:05:17.170 --> 00:05:19.580
Java application for the desktop.

00:05:20.030 --> 00:05:22.480
So first, building the model.

00:05:22.480 --> 00:05:26.480
As you can probably guess from
this representation of three tiers,

00:05:26.480 --> 00:05:28.900
building the enterprise object
model is an essential step in

00:05:28.900 --> 00:05:30.560
building a WebObjects application.

00:05:30.560 --> 00:05:34.100
And the EO Modeler tool lets
you reverse engineer a database.

00:05:34.100 --> 00:05:37.330
So it can go in and find all the tables,
all the relationships,

00:05:37.330 --> 00:05:41.260
and represent that in the object
model as entities and relationships.

00:05:41.900 --> 00:05:45.720
Or you can actually start with
the ideal model for your database

00:05:45.740 --> 00:05:49.960
and generate the schema in the
database using the EO Modeler tool.

00:05:49.960 --> 00:05:52.870
So EO Modeler can actually go and
drop tables in your database as well.

00:05:52.870 --> 00:05:55.970
And EO Modeler then generates
the Java class files to represent

00:05:56.020 --> 00:05:57.490
your enterprise objects.

00:05:57.490 --> 00:06:00.760
So it really does capture the
entire process of encapsulating

00:06:00.760 --> 00:06:04.030
your data and your business
logic in these nice Java objects,

00:06:04.140 --> 00:06:05.750
these enterprise objects.

00:06:05.760 --> 00:06:08.420
And this is a screenshot of the
EO Modeler tool at work where we

00:06:08.430 --> 00:06:11.750
actually see a movie database and we
can see some entities like movies.

00:06:11.900 --> 00:06:15.010
Talent, directors, et cetera,
and the relationships between

00:06:15.090 --> 00:06:18.760
them and their representatives,
very traditional, you know, one-to-one,

00:06:18.760 --> 00:06:22.900
one-to-many, many-to-many, et cetera,
in the visual environment of EO Modeler.

00:06:22.900 --> 00:06:28.040
Now, the key to our enterprise objects
framework is really providing

00:06:28.140 --> 00:06:30.300
for automated data access.

00:06:30.300 --> 00:06:32.560
Really, really important point.

00:06:32.710 --> 00:06:34.220
There is no need to write SQL.

00:06:34.220 --> 00:06:37.070
You can actually be a very,
very lazy programmer of database

00:06:37.070 --> 00:06:40.150
applications and not have to learn
how to write SQL to do extremely

00:06:40.290 --> 00:06:41.870
powerful enterprise objects.

00:06:41.930 --> 00:06:48.960
This gives you not only the ability to
be extremely lazy but also the ability

00:06:49.070 --> 00:06:52.900
to have some database independence.

00:06:52.900 --> 00:06:52.900
And being able to switch databases is
important in a couple of different ways.

00:06:52.900 --> 00:06:56.580
One is you may be, for instance,
evaluating today migrating

00:06:56.580 --> 00:07:00.040
from Oracle to running on,
you know, Sybase on XServe as a

00:07:00.040 --> 00:07:01.610
really great solution.

00:07:01.610 --> 00:07:03.770
Look at these beautiful things.

00:07:03.920 --> 00:07:07.020
Or more commonly,
you're probably going to be

00:07:07.020 --> 00:07:12.900
developing on something like OpenBase,
FrontBase, MySQL on your desktop machine,

00:07:12.900 --> 00:07:16.870
and you can actually very easily with
no code migrate that to your deployment

00:07:16.900 --> 00:07:20.920
database that might be Sybase or
Oracle or another database system.

00:07:21.390 --> 00:07:23.700
The other thing that you get out
of our automated data access in

00:07:23.700 --> 00:07:27.190
the Enterprise Objects framework is
essentially transparent persistence.

00:07:27.290 --> 00:07:32.950
So you get the ability to very easily
make your Enterprise Objects persist,

00:07:33.010 --> 00:07:37.360
and they persist in the form of
transactions to the back-end data system.

00:07:39.400 --> 00:07:41.320
What you get then is a
better development process.

00:07:41.320 --> 00:07:44.880
You get a process in which you can start,
very quickly get a prototype application.

00:07:44.880 --> 00:07:47.890
You can then flow into
refining the business logic,

00:07:47.900 --> 00:07:49.340
refining the presentation.

00:07:49.340 --> 00:07:53.510
You can go to customize the specific
areas of the functionality of

00:07:53.510 --> 00:07:56.190
the application that need to be
customized to meet your business needs,

00:07:56.200 --> 00:07:58.200
and then you can polish the application.

00:07:58.200 --> 00:08:01.280
And as a result,
you're going to get more feedback.

00:08:01.280 --> 00:08:05.570
You're going to get, excuse me,
you're going to get more opportunities

00:08:05.580 --> 00:08:08.470
to improve the application and
serve your customers better and

00:08:08.550 --> 00:08:10.320
get something closer to what,
you know,

00:08:10.320 --> 00:08:13.170
people working in competing environments
might get with their 2.0 product

00:08:13.210 --> 00:08:16.080
and your 1.0 product because of the
time that you're given and the tools

00:08:16.080 --> 00:08:18.000
that you're given up front with the,
you know,

00:08:18.010 --> 00:08:19.600
tremendous prototyping capabilities.

00:08:21.210 --> 00:08:25.880
Building web applications,
we provide a graphical HTML editor.

00:08:25.900 --> 00:08:27.340
It's called WebObjects Builder.

00:08:27.340 --> 00:08:31.410
What WebObjects Builder allows you to
do is to very easily marry the business

00:08:31.410 --> 00:08:36.460
logic and data in your enterprise
objects to a web-based presentation.

00:08:36.460 --> 00:08:38.480
We have palettes of reusable components.

00:08:38.480 --> 00:08:41.400
In this screen shot,
you can see such a palette over here

00:08:41.400 --> 00:08:44.060
on the right side of your window.

00:08:44.060 --> 00:08:47.120
And on the bottom of this main window,
what you see is, in fact,

00:08:47.200 --> 00:08:52.190
a browser or column view in which you
are navigating the entities inside an

00:08:52.200 --> 00:08:56.940
enterprise object and then associating
those with presentation elements in

00:08:56.970 --> 00:08:58.480
the HTML in your web application.

00:09:00.170 --> 00:09:03.140
So the idea here is we
generate dynamic pages.

00:09:03.140 --> 00:09:06.320
In effect, the WebObjects builder and
the WebObjects architecture

00:09:06.660 --> 00:09:09.760
allow you to isolate your HTML,
the layout that describes

00:09:09.760 --> 00:09:12.640
your beautiful presentation,
from the logic and

00:09:12.640 --> 00:09:14.260
obviously from the data.

00:09:14.300 --> 00:09:16.380
Well, what's important about this?

00:09:16.380 --> 00:09:19.350
We provide, first of all,
all of the session management security

00:09:19.350 --> 00:09:22.300
and everything else on the back end,
and we take care of multiple

00:09:22.310 --> 00:09:26.500
forms of presentation for you,
so you can very easily lay out something

00:09:26.500 --> 00:09:31.430
that is XML or another type of layout,
and the WebObjects elements generate the

00:09:31.430 --> 00:09:33.990
parts that are data-driven inside there.

00:09:34.040 --> 00:09:35.870
It's interoperable with JSPs.

00:09:35.870 --> 00:09:38.020
It's got excellent localization support,
in fact, very,

00:09:38.020 --> 00:09:39.460
very strong localization support.

00:09:39.460 --> 00:09:43.070
But I actually think one of the more
important things is that fundamentally

00:09:43.070 --> 00:09:46.530
you don't have this problem of some
guy with 19 body piercings up in

00:09:46.540 --> 00:09:49.380
San Francisco going and blowing away
some important piece of the logic

00:09:49.380 --> 00:09:52.230
of the application because he was
messing around with the layout and

00:09:52.230 --> 00:09:54.000
the beauty pages that were there.

00:09:55.000 --> 00:09:57.690
And you're not, in turn,
destroying the beautiful layout that

00:09:57.760 --> 00:10:01.530
the marketing people worked for 15
years on in order to get some new

00:10:01.550 --> 00:10:03.220
piece of logic in the application.

00:10:03.220 --> 00:10:06.880
So separating those two makes the
application much more maintainable,

00:10:06.950 --> 00:10:10.330
gives you much more flexibility in
terms of having the best possible

00:10:10.340 --> 00:10:13.850
presentation and the right business
logic for the flow of your application

00:10:13.940 --> 00:10:18.170
-- or the right user interface logic
for the flow of your application.

00:10:19.860 --> 00:10:21.150
dynamic web services.

00:10:21.180 --> 00:10:24.270
So you probably by now heard
something about web services if

00:10:24.280 --> 00:10:26.120
you're doing web development.

00:10:26.160 --> 00:10:29.490
They are the new hype
thing in the web world.

00:10:29.490 --> 00:10:33.610
Standards-based web services really help
to drive application integration today.

00:10:33.700 --> 00:10:37.940
Server-to-server application integration,
client-to-server application integration.

00:10:37.940 --> 00:10:41.280
And one of the great things about
web services is we see that web

00:10:41.280 --> 00:10:44.130
services are interoperable with
many different environments,

00:10:44.130 --> 00:10:47.740
many different programming languages,
and they're empowering a new class

00:10:47.740 --> 00:10:51.250
of programmers to build these highly
integrated network-driven applications.

00:10:51.260 --> 00:10:54.600
So there's some very exciting stuff
happening in the world of web services.

00:10:54.600 --> 00:11:00.320
And we at Apple are providing some really
powerful tools for enabling web services.

00:11:00.320 --> 00:11:04.630
You can basically be a client or
a vendor of web services using

00:11:04.630 --> 00:11:06.990
the WebObjects environment.

00:11:07.000 --> 00:11:07.910
We provide that.

00:11:07.920 --> 00:11:10.970
We provide the tools for configuration
and testing of the web services,

00:11:10.980 --> 00:11:14.570
for code-free generation of web services
from your existing enterprise objects.

00:11:14.620 --> 00:11:17.300
And, you know,
I think the key point is there's no

00:11:17.360 --> 00:11:21.230
need for you to worry about all of
the alphabet soup of web services.

00:11:21.410 --> 00:11:24.400
Just like we take care of generating
the SQL behind the scenes with

00:11:24.400 --> 00:11:27.440
Enterprise Objects Framework,
we can take care of generating

00:11:27.440 --> 00:11:30.500
what you need for web services
using our web services assistant

00:11:30.500 --> 00:11:32.240
and the tools in WebObjects.

00:11:32.240 --> 00:11:35.130
So we make it very easy to
build very powerful web services

00:11:35.230 --> 00:11:37.120
within the WebObjects product.

00:11:37.900 --> 00:11:41.280
And this is a screenshot of our
web services assistant showing

00:11:41.280 --> 00:11:44.270
specifically how we can actually take,
in this case,

00:11:44.270 --> 00:11:47.460
an enterprise object and edit
the representation of the,

00:11:47.460 --> 00:11:51.260
you know, internal API versus what
we are vending externally.

00:11:51.260 --> 00:11:54.880
And then what's nice is not only
can you edit that representation,

00:11:54.950 --> 00:11:57.850
generate the appropriate files,
but in addition,

00:11:57.850 --> 00:12:01.480
the web services assistant enables
you to test that so that you can

00:12:01.480 --> 00:12:06.020
actually interact with that web service
and see how it's going to function.

00:12:08.170 --> 00:12:11.130
So not only can you be a vendor
of Web services by taking

00:12:11.130 --> 00:12:14.270
your EOs and actually vending
them out using our tools,

00:12:14.340 --> 00:12:17.260
but in fact you can be a
client of Web services.

00:12:17.260 --> 00:12:21.060
Mac OS X provides some really
powerful Web services capability.

00:12:21.060 --> 00:12:24.000
We've already got the tools to
automatically generate code from WSDL.

00:12:24.000 --> 00:12:26.950
So there's a lot of real power for
Web services built into WebObjects,

00:12:26.950 --> 00:12:29.700
and I would encourage you to
explore this at more length,

00:12:29.710 --> 00:12:34.010
and we'll have some sessions
later on to cover this in detail.

00:12:34.200 --> 00:15:10.100
[Transcript missing]

00:15:10.550 --> 00:15:13.400
Another nice thing about deployment
in the WebObjects environment is

00:15:13.440 --> 00:15:17.310
that you can start simple and then
make your life more complicated as

00:15:17.410 --> 00:15:20.360
demands may make that necessary.

00:15:20.360 --> 00:15:22.840
So basically you can start with,
particularly in the

00:15:22.930 --> 00:15:26.180
development environment,
your database, your application server,

00:15:26.180 --> 00:15:28.040
and your web server all
sitting on the same machine.

00:15:28.510 --> 00:15:31.390
And as the user community
for the application grows,

00:15:31.390 --> 00:15:36.420
you can add instances of your WebObjects
application and you can serve the

00:15:36.420 --> 00:15:39.750
requests from your users much more
readily with multiple instances

00:15:39.770 --> 00:15:41.140
of your application than with one.

00:15:41.140 --> 00:15:44.140
And scale your application that
way even on a single machine.

00:15:44.140 --> 00:15:47.430
Now, hopefully you've written the
world's best application for

00:15:47.440 --> 00:15:49.440
whatever your competency might be.

00:15:49.440 --> 00:15:53.520
And you're going to get
serious demand for this.

00:15:53.520 --> 00:15:56.370
And when that happens,
you actually are able to very

00:15:56.370 --> 00:15:58.480
easily partition the WebObjects.

00:15:58.500 --> 00:16:00.490
You can start with your web
server from the application

00:16:00.490 --> 00:16:01.980
instances from the database server.

00:16:01.980 --> 00:16:03.920
So you can now run those
on multiple machines.

00:16:03.920 --> 00:16:05.160
It doesn't have to be three at first.

00:16:05.160 --> 00:16:06.780
You could partition this in other ways.

00:16:06.780 --> 00:16:10.060
And still scale application
instances horizontally.

00:16:10.060 --> 00:16:12.790
And in fact,
also begin to scale horizontally

00:16:12.800 --> 00:16:14.350
with your web servers.

00:16:14.360 --> 00:16:17.620
So you can very easily scale
the application effectively just

00:16:17.620 --> 00:16:21.080
by putting multiple machines
running application instances,

00:16:21.080 --> 00:16:24.840
multiple machines running web servers,
load balancers in front of this stuff.

00:16:24.840 --> 00:16:28.240
And grow web applications
to enormous size.

00:16:28.260 --> 00:16:28.480
And that's what we're going to do.

00:16:28.480 --> 00:16:30.260
And we have some great
examples of that at Apple.

00:16:30.260 --> 00:16:33.610
Obviously things like our Apple store and
some other examples I'll discuss later.

00:16:33.640 --> 00:16:37.320
Now, after hearing all of this from me,
the marketing guy,

00:16:37.330 --> 00:16:40.520
you are desperate to get
your hands on WebObjects.

00:16:40.650 --> 00:16:43.310
And the good news is we
provide a free trial version.

00:16:43.320 --> 00:16:46.530
So you can actually go right now,
those of you who are sitting

00:16:46.590 --> 00:16:50.050
on PowerBooks in the audience,
to the URL on your screen and get a

00:16:50.060 --> 00:16:52.680
free 30-day trial version for Mac OS X.

00:16:52.700 --> 00:16:56.250
We actually encourage you to read the
Web Services with WebObjects article

00:16:56.310 --> 00:16:58.460
that we have up at the developer.com.

00:16:58.460 --> 00:17:00.790
dot apple dot com website.

00:17:01.330 --> 00:17:05.860
And then once the 30 days is up,
you're hooked.

00:17:05.860 --> 00:17:09.760
And you get this fantastic
package for $699,

00:17:09.760 --> 00:17:12.000
which includes the development
and deployment licenses.

00:17:12.100 --> 00:17:17.000
And we encourage you to check out
the WebObjects website if you want

00:17:17.000 --> 00:17:17.000
to learn more about the product.

00:17:17.720 --> 00:17:23.660
Another great way to get WebObjects,
as it turns out, is to buy an XServe.

00:17:23.660 --> 00:17:26.880
This attractive carrying case
for WebObjects basically is a

00:17:26.880 --> 00:17:30.450
one-U rack mountable enclosure.

00:17:30.450 --> 00:17:36.770
It's got a great server operating system
which vaguely resembles Mac OS X server.

00:17:36.850 --> 00:17:40.520
And it bundles a WebObjects deployment
license so you can actually do

00:17:40.560 --> 00:17:43.290
unlimited deployment from one of these.

00:17:44.000 --> 00:19:40.400
[Transcript missing]

00:19:41.300 --> 00:19:45.040
So that's a little update
on what WebObjects is,

00:19:45.040 --> 00:19:47.830
some of the things that have
happened recently with WebObjects.

00:19:47.860 --> 00:19:49.710
Where are we going?

00:19:50.320 --> 00:19:53.850
So I want to talk about three areas
of things that surround WebObjects and

00:19:53.850 --> 00:19:57.820
what exactly is going to be happening
in these areas over the next few months.

00:19:57.820 --> 00:19:59.560
First of all, developer tools.

00:19:59.560 --> 00:20:01.960
So we're going to start
from the assumption that

00:20:02.190 --> 00:20:05.620
since this is a 600 track,
you guys are enterprise developers.

00:20:05.620 --> 00:20:08.130
I want to emphasize that
we've been working hard to

00:20:08.130 --> 00:20:11.770
not destabilize the enterprise
development environment we provide.

00:20:11.860 --> 00:20:15.520
So today we are supporting development
of WebObjects applications in the

00:20:15.520 --> 00:20:18.160
December 2002 developer tools release.

00:20:18.160 --> 00:20:20.180
This is a very, very early release.

00:20:20.200 --> 00:20:24.300
This is a very good, very solid,
stable development release for you.

00:20:24.300 --> 00:20:31.300
We are actually supporting WebObjects
development in Xcode in Panther.

00:20:31.300 --> 00:20:34.440
So when we get to the GM of Xcode,
that will completely support

00:20:34.440 --> 00:20:36.450
Java and WebObjects development.

00:20:36.450 --> 00:20:40.280
And I can't emphasize that enough for
those of you who may be interested in

00:20:40.280 --> 00:20:42.290
moving to Xcode in the near future.

00:20:43.900 --> 00:20:44.800
Excuse me?

00:20:44.800 --> 00:20:49.130
You can't hear me very well.

00:20:49.180 --> 00:20:57.680
I can't speak up a lot more than I am.

00:20:57.680 --> 00:20:57.680
I said I can't.

00:21:02.560 --> 00:21:07.180
So, excuse me.

00:21:07.180 --> 00:21:10.710
WebObjects will be completely
supported in Xcode in Panther.

00:21:10.780 --> 00:21:14.280
So when we ship the Xcode
development tool as a GM,

00:21:14.280 --> 00:21:17.920
we will support WebObjects
in Java development.

00:21:17.920 --> 00:21:20.350
That's not something
that's complete today.

00:21:20.350 --> 00:21:24.670
And so what I would say is that right now
there are some of the features that you

00:21:24.670 --> 00:21:28.630
can actually experiment with in Xcode,
but it's not something that's

00:21:28.630 --> 00:21:30.560
fully compatible today.

00:21:30.560 --> 00:21:33.850
So if you are using tools
today to develop WebObjects

00:21:33.890 --> 00:21:37.220
applications for production,
we strongly encourage you to stick with

00:21:37.220 --> 00:21:39.670
the December 2002 development tools.

00:21:39.670 --> 00:21:42.900
If you want to explore some of the
future directions that we've got

00:21:42.910 --> 00:21:46.030
with Java and WebObjects development,
we would strongly encourage you

00:21:46.030 --> 00:21:49.410
to take a look in that exploratory
mode at what we're doing in Xcode,

00:21:49.410 --> 00:21:52.940
but understand that we're not
yet to having the full feature

00:21:52.940 --> 00:21:57.460
set and the full support in
Xcode for WebObjects development.

00:21:58.100 --> 00:22:04.240
: Today, WebObjects applications are
supported under Java 1.3.1.

00:22:04.240 --> 00:22:12.000
Our WebObjects 5.2.1 release improves
WebObjects compatibility with Java 1.4.1.

00:22:12.000 --> 00:22:18.090
And in Panther,
WebObjects applications will

00:22:18.090 --> 00:22:18.090
be supported under Java 1.4.1.

00:22:20.900 --> 00:22:24.330
: So, today,
as a part of Mac OS X Server,

00:22:24.330 --> 00:22:28.410
we ship the WebObjects
application server.

00:22:28.930 --> 00:22:35.470
. We ship Tomcat as a
part of Mac OS X server.

00:22:35.470 --> 00:22:38.150
You can deploy a WebObjects
application on top of the WebObjects

00:22:38.160 --> 00:22:40.700
application server or you can
deploy it on top of Tomcat.

00:22:42.030 --> 00:22:47.000
As a part of Panther Server,
we're adding to the mix JBoss.

00:22:47.090 --> 00:22:50.950
And I'll talk more in a second about
why we think JBoss is a fantastic

00:22:50.960 --> 00:22:56.640
addition to what we're doing with
WebObjects and Mac OS X Panther Server.

00:22:56.670 --> 00:23:01.790
But the key point is that you can
deploy WebObjects applications on JBoss.

00:23:01.870 --> 00:23:03.150
So JBoss.

00:23:03.220 --> 00:23:09.200
Today, JBoss is in fact the number one
application server for J2EE development.

00:23:09.200 --> 00:23:10.800
And it is that for a lot of reasons.

00:23:10.880 --> 00:23:14.200
But it's got the point of 2 million
downloads a year and growing.

00:23:14.200 --> 00:23:19.450
And we're seeing that the key
thing about JBoss is it supports

00:23:19.450 --> 00:23:21.700
a lot of the key J2EE and...

00:23:22.100 --> 00:23:41.700
[Transcript missing]

00:23:42.560 --> 00:23:44.880
So what are we doing with
JBoss and Panther Server?

00:23:45.010 --> 00:23:47.450
Well, in effect,
we're taking the JBoss environment

00:23:47.450 --> 00:23:51.060
and we're addressing a couple
of critical areas where JBoss

00:23:51.100 --> 00:23:52.560
has been a little bit weak.

00:23:52.560 --> 00:23:54.760
As I mentioned,
it's the number one development

00:23:54.900 --> 00:23:58.460
server for J2EE applications,
but it's not the number

00:23:58.470 --> 00:23:59.820
one deployment server.

00:23:59.820 --> 00:24:02.680
And it's had a few weaknesses
in terms of the management of

00:24:02.690 --> 00:24:05.600
deployment and the management
of the applications as they run.

00:24:05.600 --> 00:24:08.390
And so what we're doing at Apple is,
in fact, doing what we do best.

00:24:08.390 --> 00:24:12.180
We're providing some tools to help
graphically manage the configuration and

00:24:12.350 --> 00:24:15.270
deployment of J2EE applications in JBoss.

00:24:17.080 --> 00:24:19.110
We're also working on WebObjects 5.2.2.

00:24:19.210 --> 00:24:21.920
And as I mentioned earlier,
one key element of what we're doing there

00:24:21.920 --> 00:24:24.470
is going to be Java 1.4.1 qualification.

00:24:24.570 --> 00:24:26.190
Another key element,
as you can suspect from

00:24:26.190 --> 00:24:29.540
what I've just said,
is JBoss on Panther Server qualification.

00:24:29.650 --> 00:24:34.400
And we're working on things to
provide much better J2EE integration.

00:24:34.790 --> 00:24:35.550
What does that mean?

00:24:35.740 --> 00:24:39.200
Well, first of all,
we're going to be supporting JAR bundles.

00:24:39.200 --> 00:24:43.250
And what I mean by this is that, in fact,
we're going to use Java native

00:24:43.250 --> 00:24:46.030
way of calling resources,
which is going to make it much easier

00:24:46.030 --> 00:24:47.820
to deploy in a pure Java environment.

00:24:47.820 --> 00:24:50.680
So you're not going to have to deal with
NSBundle issues for calling resources.

00:24:50.700 --> 00:24:54.250
We're going to support log4j logging,
which is a much more standard

00:24:54.280 --> 00:24:55.740
Java logging mechanism.

00:24:55.740 --> 00:25:08.120
And we're going to support JNDI for
both properties configuration

00:25:08.120 --> 00:25:13.290
and data source mapping.

00:25:13.290 --> 00:25:13.290
And the key point here is that
data source configuration doesn't

00:25:13.290 --> 00:25:13.290
have to be file driven now.

00:25:13.290 --> 00:25:13.290
It can be JNDI driven,
which can make it much more dynamic

00:25:13.290 --> 00:25:13.290
in terms of managing the deployment of
an application in a J2EE environment.

00:25:13.950 --> 00:25:16.260
How does this affect WebObjects
development workflow?

00:25:16.260 --> 00:25:19.860
I talked earlier about this process
of going and reverse engineering your

00:25:19.870 --> 00:25:24.160
data source and then working on your
business logic in the project builder

00:25:24.160 --> 00:25:25.710
environment to do your Java coding.

00:25:25.710 --> 00:25:29.350
And what we're going to be doing is
basically providing the tools through

00:25:29.350 --> 00:25:34.190
some new capabilities with xDocklet and
Ant to enhance this process and make it

00:25:34.190 --> 00:25:36.900
much easier to build J2EE applications.

00:25:38.250 --> 00:25:42.440
XDocklet is basically a tool
for aspect-oriented programming,

00:25:42.440 --> 00:25:45.560
and effectively what you can do
is use some special Java doc tags

00:25:45.570 --> 00:25:47.040
in your code to add metadata.

00:25:47.040 --> 00:25:50.300
I think the key thing here is
that you'll be able to maintain

00:25:50.300 --> 00:25:54.740
one file instead of five,
10, 12 files to represent one

00:25:54.870 --> 00:25:57.010
of these enterprise objects.

00:25:57.010 --> 00:26:00.610
And it's going to handle all of
the code and file generation,

00:26:00.610 --> 00:26:04.360
the wars, EJBs, ears,
and XML deployment descriptors.

00:26:04.360 --> 00:26:08.220
The EO Bean Assistant provides the
ability to create entity-based code.

00:26:08.220 --> 00:26:10.460
We have a lot of
EO Bean from EO model files,

00:26:10.460 --> 00:26:13.860
and we provide a command line
version for automated builds.

00:26:13.860 --> 00:26:17.370
And so what this does,
the capability with xDocklet and the

00:26:17.370 --> 00:26:21.000
new features in EO Bean Assistant is
basically to improve this

00:26:21.000 --> 00:26:25.440
J2EE development workflow so that
now basically out of project builder

00:26:25.440 --> 00:26:29.170
you'll be able to generate all
of the elements you need to deploy

00:26:29.170 --> 00:26:31.590
a J2EE application very easily.

00:26:32.030 --> 00:26:35.400
So that covers basically the
WebObjects State of the Union.

00:26:35.400 --> 00:26:38.170
And at this point,
I'd like to invite Katherine Wentz,

00:26:38.170 --> 00:26:41.470
the Documentation Manager,
on the stage to talk about the

00:26:41.510 --> 00:26:43.340
Documentation State of the Union.

00:26:43.350 --> 00:26:43.980
Katherine?

00:26:43.980 --> 00:26:46.100
Thanks, Wiley.

00:26:49.800 --> 00:26:52.800
Hi, this morning I'd like to
talk about two things.

00:26:52.800 --> 00:26:56.660
The new documentation we delivered
for the 5.2 release and I'd

00:26:56.680 --> 00:27:00.800
like to introduce you to the new
developer documentation website.

00:27:00.800 --> 00:27:05.120
For the 5.2.2 release,
we delivered over 500

00:27:05.120 --> 00:27:06.790
new pages of content.

00:27:06.870 --> 00:27:10.660
We added new documents to
accompany the new features of 5.2.

00:27:10.730 --> 00:27:15.650
We enhanced existing documentation
and published new documentation

00:27:15.840 --> 00:27:18.800
in response to customer feedback.

00:27:18.830 --> 00:27:22.590
At this time, I'd like to express my
appreciation for the feedback

00:27:22.590 --> 00:27:24.730
that we get on the documentation.

00:27:24.730 --> 00:27:27.250
First of all,
it shows us that developers are

00:27:27.250 --> 00:27:31.800
reading the documentation and
getting the information they need.

00:27:32.030 --> 00:27:37.200
Secondly, the WebObjects audience is
fairly sophisticated and savvy.

00:27:37.200 --> 00:27:40.700
And so the feedback that
we get is very detailed,

00:27:40.700 --> 00:27:42.780
focused, and specific.

00:27:42.780 --> 00:27:45.880
This slide and the next
list the new documents we

00:27:45.880 --> 00:27:47.800
delivered for the 5.2 release.

00:27:47.800 --> 00:27:49.790
I'll just highlight a few of them.

00:27:49.790 --> 00:27:51.680
Web services.

00:27:51.770 --> 00:27:56.070
It explains the sample projects that
are available both on the product CD and

00:27:56.160 --> 00:28:00.800
on the new website downloadable from
inside the HTML version of the document.

00:28:00.800 --> 00:28:05.250
Web services.

00:28:05.250 --> 00:28:05.250
It explains the sample projects that
are available both on the product CD and

00:28:05.250 --> 00:28:05.250
on the new website downloadable from
inside the HTML version of the document.

00:28:05.430 --> 00:28:07.540
EnterpriseObjects.

00:28:07.550 --> 00:28:10.740
It's back after a long absence.

00:28:10.790 --> 00:28:12.600
It's very comprehensive.

00:28:12.620 --> 00:28:15.790
It covers information for
all levels of developers,

00:28:15.790 --> 00:28:20.710
but it's primarily intended for the
intermediate and advanced developers.

00:28:20.940 --> 00:28:24.120
It includes a roadmap so you
can decide which sections of

00:28:24.120 --> 00:28:26.300
the document you need to read.

00:28:26.570 --> 00:28:32.920
Also, the old EnterpriseObjects related
programming topics have been revamped

00:28:32.920 --> 00:28:36.260
and incorporated into this document.

00:28:36.380 --> 00:28:39.300
On the subject of programming topics,
like I said,

00:28:39.300 --> 00:28:45.290
some of the old ones have been updated
and incorporated into EnterpriseObjects,

00:28:45.290 --> 00:28:48.290
web applications, and other books.

00:28:48.640 --> 00:28:51.120
Other topics no longer apply.

00:28:51.310 --> 00:28:54.290
There are a handful left that we're
planning to update to coincide

00:28:54.300 --> 00:28:56.300
with the 5.22 release date.

00:28:56.300 --> 00:28:56.800
police.

00:28:58.610 --> 00:29:00.950
Project Builder for
WebObjects developers.

00:29:00.950 --> 00:29:07.040
It supplements the main Project Builder
documentation with WebObjects specifics.

00:29:07.040 --> 00:29:10.240
WebApplications,
formerly known as Discovering

00:29:10.240 --> 00:29:15.630
WebObjects for HTML,
gets you started with WebApplication

00:29:15.630 --> 00:29:18.800
development using WebObjects.

00:29:18.800 --> 00:29:23.130
It has a short series of exercises
that get you started building

00:29:23.130 --> 00:29:26.050
your own WebObjects applications.

00:29:26.060 --> 00:29:29.140
And for a glimpse into the future,
for 5.22,

00:29:29.150 --> 00:29:36.060
we're planning on publishing the
API diffs between 5.2 and 5.22.

00:29:36.470 --> 00:29:39.310
Now that I've talked
about the documentation,

00:29:39.310 --> 00:29:42.260
I'd like to explain how
to access it using the new

00:29:42.260 --> 00:29:44.580
developer documentation website.

00:29:44.640 --> 00:29:47.990
The new site is based on developer input.

00:29:48.330 --> 00:29:53.290
It aims for more consistent
design and organization.

00:29:53.400 --> 00:30:56.000
[Transcript missing]

00:30:56.850 --> 00:31:00.170
Farther down the page,
you see a complete list of the WebObjects

00:31:00.170 --> 00:31:02.780
documents available on the site.

00:31:02.940 --> 00:31:06.700
You can sort by either
title or publication date.

00:31:06.940 --> 00:31:10.130
Have any of you had a
chance to see the new site?

00:31:10.820 --> 00:31:11.690
Please do.

00:31:11.820 --> 00:31:15.210
Over the course of this week from
1:00 to 4:00 p.m., there will be

00:31:15.320 --> 00:31:20.680
TechPub staff people at the ADC booth
downstairs to show you the new site,

00:31:20.890 --> 00:31:24.520
answer your questions,
and get your feedback.

00:31:25.760 --> 00:31:28.350
In closing,
I hope that you've gained more knowledge

00:31:28.610 --> 00:31:33.700
about the WebObjects documentation set
and how to access it using the new site.

00:31:33.700 --> 00:31:36.890
Again, thanks for your feedback.

00:31:37.020 --> 00:31:38.280
Keep it coming.

00:31:38.340 --> 00:31:41.690
And now back to you, Wiley,
to close the session.

00:31:45.200 --> 00:31:47.880
Thanks, Catherine.

00:31:47.900 --> 00:31:50.900
So hopefully you've got a
taste for what WebObjects is,

00:31:50.900 --> 00:31:54.760
what the capabilities are,
and what some of the directions are.

00:31:54.810 --> 00:31:57.430
I do want to emphasize that
there's been a lot of work going

00:31:57.430 --> 00:32:00.120
on in WebObjects in the last year,
and we would encourage all

00:32:00.120 --> 00:32:02.380
of you to actually take a
hard look at the sessions,

00:32:02.380 --> 00:32:04.610
even if you're familiar with WebObjects.

00:32:04.620 --> 00:32:07.560
We have, first of all,
some fairly good introductory

00:32:07.560 --> 00:32:10.700
sessions in terms of the
WebObjects technical overview,

00:32:10.700 --> 00:32:15.520
session 603, WebObjects and J2EE,
session 605, and rapid application

00:32:15.520 --> 00:32:17.550
development with WebObjects.

00:32:17.560 --> 00:32:20.320
I think this is a good track if you
want to get an overview and a start

00:32:20.410 --> 00:32:23.800
in understanding WebObjects as an
application development environment.

00:32:23.800 --> 00:32:27.410
We also have, for people who are more
sysadmin deployment-oriented,

00:32:27.430 --> 00:32:31.950
have their applications finished, 612,
Enterprise Application Deployment,

00:32:31.960 --> 00:32:34.480
and encourage you to
check out that session.

00:32:34.620 --> 00:32:38.730
We have some more advanced
sessions as well on WebObjects,

00:32:38.740 --> 00:32:42.340
614, WebObjects Reusable Components.

00:32:42.340 --> 00:32:43.960
It's going to talk about reuse.

00:32:43.960 --> 00:32:48.270
616, Advanced Topics in EOF, and 624,
Creating Web Services,

00:32:48.270 --> 00:32:51.530
which I think is going to be a
very exciting session for those

00:32:51.530 --> 00:32:53.560
of you interested in that area.

00:32:53.560 --> 00:32:56.900
We also encourage you, of course,
to come to the feedback

00:32:56.900 --> 00:32:58.300
forum for WebObjects.

00:32:58.300 --> 00:32:59.840
That's FF007.

00:33:01.180 --> 00:33:07.460
will be in
North Beach Thursday at 9:00 a.m.

00:33:07.460 --> 00:33:11.090
That's a quick overview
of the session roadmap.

00:33:11.090 --> 00:33:13.090
We have, of course,
our who to contact slide.

00:33:13.090 --> 00:33:18.500
I encourage you to talk to these
people if you have feedback and

00:33:18.500 --> 00:33:18.500
questions on the WebObjects product.

00:33:19.940 --> 00:33:23.060
Of course, we've got a lot of resources
available online at Apple.com.

00:33:23.130 --> 00:33:25.460
I think Catherine's already
spoken to some of that.

00:33:25.460 --> 00:33:29.910
And encourage you to join our
WebObjects announced mailing list to

00:33:29.990 --> 00:33:32.740
get news as we update it on WebObjects.

00:33:32.740 --> 00:33:36.410
So at this point, I'd like to invite
questions from the audience.