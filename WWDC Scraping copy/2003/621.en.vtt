WEBVTT

00:00:28.120 --> 00:00:29.800
Good afternoon.

00:00:29.900 --> 00:00:31.000
So my name is Doug Brooks.

00:00:31.000 --> 00:00:34.590
I'm a product manager for
server hardware at Apple.

00:00:39.460 --> 00:00:42.830
I'd like to talk to you a little
bit today about deploying Xserve.

00:00:42.830 --> 00:00:46.500
Xserve has had an exciting year.

00:00:46.500 --> 00:00:49.550
The product is just a
little over one year old.

00:00:49.550 --> 00:00:54.370
We've had a major update to the
product back in February and an

00:00:54.370 --> 00:00:57.660
addition of the compute node in March.

00:00:57.660 --> 00:01:03.840
I'd like to talk to you a little
bit about deploying Xserve.

00:01:03.880 --> 00:01:09.230
Before we dive right into Xserve,
we'd like to position a little bit about

00:01:09.230 --> 00:01:12.160
how Xserve fits in a broader IT sense.

00:01:12.160 --> 00:01:15.380
What's interesting is since
we've launched the Xserve and

00:01:15.430 --> 00:01:18.890
actually in our customer research
before we launched Xserve,

00:01:18.890 --> 00:01:22.580
we had an opportunity to talk to a
wide range of customers and really

00:01:22.580 --> 00:01:26.880
help understand what some of their
challenges are deploying servers.

00:01:26.880 --> 00:01:31.240
There were a lot of constant
themes that were shared with us.

00:01:31.240 --> 00:01:35.700
Things like, "What's the cost of
operating?" Operational costs

00:01:35.700 --> 00:01:37.080
continually under review.

00:01:37.080 --> 00:01:40.020
I mean,
the old story of doing more with less

00:01:40.050 --> 00:01:45.510
or doing a lot more with a little
bit more is a continual challenge.

00:01:45.990 --> 00:01:47.300
Availability of service.

00:01:47.300 --> 00:01:50.930
The incredible speed and
worldwide presence of the

00:01:50.930 --> 00:01:55.940
internet has made time irrelevant,
which means that opportunities for

00:01:55.940 --> 00:01:59.020
downtime are slim and few and in between.

00:01:59.020 --> 00:02:03.730
So availability of service in a
variety of ways has been continually

00:02:03.800 --> 00:02:06.180
challenging and important.

00:02:06.750 --> 00:02:10.400
Deployment time is shorter,
so time to ramp up systems and get

00:02:10.450 --> 00:02:14.150
hardware installed and networking
available and services up and

00:02:14.150 --> 00:02:19.690
running is needing to be done
again in less and less time.

00:02:20.100 --> 00:02:22.340
Systems per administrator increasing.

00:02:22.340 --> 00:02:24.060
I'm sure many of you relate to this.

00:02:24.300 --> 00:02:29.000
You're having more services,
more servers, more physical boxes being

00:02:29.000 --> 00:02:34.240
deployed and needing to manage
more and more of those resources.

00:02:34.520 --> 00:02:38.060
And server utilization is higher,
having servers work more, do more,

00:02:38.060 --> 00:02:40.300
and be able to maintain
that utilization rate.

00:02:40.340 --> 00:02:41.980
Again, a continual challenge.

00:02:41.980 --> 00:02:46.380
So, you know, the big question becomes,
well, what does Apple have

00:02:46.380 --> 00:02:48.020
to offer in this space?

00:02:48.020 --> 00:02:52.380
You know, besides what we think is
a pretty neat one-U box.

00:02:52.380 --> 00:02:55.400
And so I think it's important
to understand what we see as our

00:02:55.400 --> 00:02:59.920
value proposition in the IT market
to address these specific issues.

00:03:00.100 --> 00:03:02.960
So from a cost perspective,
we think we have a great offering

00:03:02.960 --> 00:03:07.140
from a hardware and software and
software licensing perspective

00:03:07.140 --> 00:03:11.160
with low cost of hardware,
low cost of storage,

00:03:11.160 --> 00:03:13.900
and unlimited client licenses built in.

00:03:13.900 --> 00:03:17.720
And hopefully you've seen in some of
the other sessions the ability to,

00:03:17.860 --> 00:03:20.230
you know,
host more users at a much lower cost,

00:03:20.230 --> 00:03:24.080
have more storage available on your
networks is a big value that Apple can

00:03:24.100 --> 00:03:26.360
deliver with our server products.

00:03:26.360 --> 00:03:30.080
From an availability, well, you know,
we designed these boxes.

00:03:30.080 --> 00:03:32.080
From the ground up to be servers.

00:03:32.100 --> 00:03:34.870
And so that means
reliability and availability,

00:03:34.870 --> 00:03:36.760
both in hardware and software.

00:03:36.760 --> 00:03:38.790
And that's, you know,
something that we strive

00:03:38.850 --> 00:03:39.840
with these products.

00:03:39.840 --> 00:03:41.760
Deployment time.

00:03:41.760 --> 00:03:45.500
You know, X service design,
and we'll talk more about it here,

00:03:45.500 --> 00:03:49.520
to be easy to deploy, easy to manage,
and be very easy to, you know,

00:03:49.520 --> 00:03:51.130
roll these systems out.

00:03:51.160 --> 00:03:54.900
And so, again,
that is a key design goal that we build

00:03:54.900 --> 00:03:57.730
into these products to provide that.

00:03:57.780 --> 00:03:59.840
And finally, server utilization.

00:04:00.100 --> 00:04:03.990
Our goal is here to provide power
flexibility at a lower cost.

00:04:04.060 --> 00:04:06.300
So tremendous amount
of services built in,

00:04:06.370 --> 00:04:09.430
tremendous amount of resources
in the hardware to deliver

00:04:09.430 --> 00:04:11.100
upon these requirements.

00:04:12.850 --> 00:04:14.440
So what are we going to talk about today?

00:04:14.540 --> 00:04:16.980
So quite a number of things.

00:04:16.990 --> 00:04:20.680
First of all, I think it's important to
answer the why Xserve question.

00:04:20.760 --> 00:04:22.800
So we'll touch on that.

00:04:22.870 --> 00:04:23.780
Speeds and feeds.

00:04:23.800 --> 00:04:26.290
Xserve has been around,
so we're not going to spend

00:04:26.350 --> 00:04:30.110
an incredible amount of time
about the hardware feature set,

00:04:30.410 --> 00:04:34.300
but I think it's important to provide
a high-level architectural review.

00:04:34.300 --> 00:04:41.210
What we really see are the server value
features in Xserve that we have to offer.

00:04:41.570 --> 00:04:42.730
And of course then deployment.

00:04:42.780 --> 00:04:48.500
What things can we look at to make
it easy to deploy these boxes,

00:04:48.500 --> 00:04:52.760
both regarding physical hardware
type issues and software type issues.

00:04:52.760 --> 00:04:54.740
And we'll have a number of
things that we'll touch on there.

00:04:54.740 --> 00:04:57.560
And a very important,
get asked this a lot,

00:04:57.580 --> 00:04:59.150
is backup strategies.

00:04:59.210 --> 00:05:03.360
So we'll touch on the latest and
available backup strategies for

00:05:03.360 --> 00:05:06.150
Mac OS X and Mac OS X server.

00:05:06.880 --> 00:05:09.770
And finally resources,
where we can point you to for more

00:05:09.770 --> 00:05:11.800
information on all of these topics.

00:05:11.860 --> 00:05:14.000
So let's start with why Xserve.

00:05:14.040 --> 00:05:19.000
So we fundamentally believe that
Xserve is the easiest way to deliver

00:05:19.000 --> 00:05:22.370
very powerful network services,
but able to put a tremendous

00:05:22.370 --> 00:05:26.880
amount of technology into a 1U
rack mounted server form factor

00:05:27.350 --> 00:05:30.440
with incredible storage capability.

00:05:30.440 --> 00:05:36.120
And one of the real advantages of
Xserve is the Mac OS X server software.

00:05:36.480 --> 00:05:40.060
Having a powerful open source
foundation with very robust server

00:05:40.070 --> 00:05:43.730
services and later on top of that,
but with fantastic remote

00:05:43.780 --> 00:05:45.340
management capabilities.

00:05:45.450 --> 00:05:46.920
Very core to the design.

00:05:46.950 --> 00:05:50.040
We think,
and we've offered many of the same

00:05:50.040 --> 00:05:52.300
features that people love about Linux.

00:05:52.620 --> 00:05:57.620
Open source, great system resources,
but integrated all from one vendor,

00:05:57.620 --> 00:05:58.550
one place.

00:05:58.670 --> 00:06:01.380
So one click install gets you
all of those features built in,

00:06:01.380 --> 00:06:02.080
ready to go.

00:06:02.120 --> 00:06:05.420
And again,
powerful open standards based services.

00:06:06.030 --> 00:06:10.380
Hopefully you've attended many
of the IT tracks this week,

00:06:10.570 --> 00:06:12.000
and it's been a continual theme.

00:06:12.000 --> 00:06:16.050
You know, open standards, technologies,
built in, best of breed.

00:06:16.060 --> 00:06:18.870
And finally,
more capabilities at less cost.

00:06:19.300 --> 00:06:23.940
Really trying to provide a very
value oriented platform with lots

00:06:23.940 --> 00:06:26.580
of services and capabilities.

00:06:27.150 --> 00:06:28.770
So a quick review of the hardware.

00:06:28.820 --> 00:06:32.970
So Xserve, again,
was designed from the ground up to

00:06:32.990 --> 00:06:35.000
really be a phenomenal server platform.

00:06:35.000 --> 00:06:39.420
This was not a G4 tower stuck on
its side in a smaller enclosure.

00:06:39.420 --> 00:06:43.560
It really optimized this platform
to be a phenomenal server platform.

00:06:43.560 --> 00:06:46.040
So that means a couple different things.

00:06:46.040 --> 00:06:48.680
So first of all,
it's a rack-mounted form factor.

00:06:48.680 --> 00:06:51.110
So being able to fit in
industry standard racks.

00:06:51.190 --> 00:06:53.600
I like to joke it's an
industry standard rack.

00:06:53.600 --> 00:06:56.240
It's not the 20-inch
wide Apple special rack.

00:06:56.710 --> 00:06:58.280
So industry standard rack.

00:06:58.280 --> 00:07:01.400
One you serve,
that does mean 1.75 inches, not two.

00:07:01.400 --> 00:07:05.630
So industry standard,
be able to fit that in

00:07:05.630 --> 00:07:08.440
with existing network gear,
existing server gear,

00:07:08.530 --> 00:07:10.730
right in your data center environment.

00:07:12.910 --> 00:07:14.040
Look at the hardware.

00:07:14.040 --> 00:07:16.530
We've packed a tremendous
amount of technology in a

00:07:16.530 --> 00:07:17.920
very small amount of space.

00:07:17.920 --> 00:07:21.460
So single and dual G4 processors,
dual gigabit Ethernet,

00:07:21.510 --> 00:07:25.260
each on their own PCI interface
for bandwidth and throughput.

00:07:25.260 --> 00:07:31.540
Four hot plug hard drives using
a hot plug architecture that's

00:07:31.540 --> 00:07:35.320
based on ATA hard drives,
which is interesting.

00:07:35.320 --> 00:07:38.020
When we first launched Xserve,
a lot of people asked questions about.

00:07:38.540 --> 00:07:41.390
However, now,
because so much in the industry

00:07:41.390 --> 00:07:44.770
is beginning to utilize
ATA hard drives in this space,

00:07:44.770 --> 00:07:46.740
not nearly questioned as much.

00:07:46.740 --> 00:07:50.760
And we think we have a great proposition
with performance and storage capability

00:07:51.140 --> 00:07:53.390
with the storage architecture in Xserve.

00:07:55.320 --> 00:07:58.040
And of course, PCI expandability.

00:07:58.070 --> 00:08:02.880
Two 12-inch PCI slots, 6466,
delivering very high performance,

00:08:02.880 --> 00:08:06.370
especially when connected to external
devices like our own Xserve RAID,

00:08:06.380 --> 00:08:11.130
really leveraging the
PCI performance of Xserve.

00:08:11.660 --> 00:08:15.390
What I really wanted to highlight
though is the architecture

00:08:15.390 --> 00:08:19.620
of Xserve because again,
this is really optimized to be a server.

00:08:19.620 --> 00:08:23.110
And what it really means is a
lot of storage bandwidth and

00:08:23.110 --> 00:08:25.280
a lot of networking bandwidth.

00:08:25.280 --> 00:08:28.150
And so being able to offer features
like dual gigabit Ethernet,

00:08:28.150 --> 00:08:32.600
again, each on their own PCI interface,
which gives us the ability to really

00:08:32.700 --> 00:08:37.180
keep those channels moving data very
efficiently without them competing

00:08:37.240 --> 00:08:38.940
for bandwidth on the system.

00:08:39.590 --> 00:08:43.470
And the storage architecture, again,
on its own PCI bus,

00:08:43.470 --> 00:08:46.950
very high-speed PCI bus,
each hard drive has its own

00:08:46.990 --> 00:08:51.480
independent ATA controller,
so quad independent ATA controllers.

00:08:51.480 --> 00:08:54.810
What that gives us is tremendous
scalability as we add storage.

00:08:54.840 --> 00:08:57.840
When we add additional
hard drives to the Xserve,

00:08:57.840 --> 00:09:00.980
not only are we adding raw
capacity to the system,

00:09:00.980 --> 00:09:03.280
we're adding more storage
bandwidth in the system.

00:09:03.280 --> 00:09:06.420
So especially when we look at
high bandwidth applications where

00:09:06.420 --> 00:09:09.280
we're striping drives together,
very strong hardware.

00:09:09.280 --> 00:09:12.120
So we have a very high
scalability of storage in the box.

00:09:12.230 --> 00:09:15.350
And of course,
the ability to go external to, again,

00:09:15.350 --> 00:09:19.530
to devices like our Xserver RAID for
additional storage capacity.

00:09:20.880 --> 00:09:23.200
And of course we put this
in what we think is a real

00:09:23.200 --> 00:09:25.800
phenomenal rack-mounted enclosure.

00:09:25.800 --> 00:09:28.740
So again, designed for ease of access.

00:09:28.810 --> 00:09:31.760
Xserve slides out on rails,
so that right within

00:09:31.760 --> 00:09:33.280
the rack it slides open.

00:09:33.440 --> 00:09:36.140
You have access to all
the key components.

00:09:36.140 --> 00:09:38.550
Everything is on thumb
screws or standoffs for

00:09:38.550 --> 00:09:41.320
quick and easy repairability.

00:09:41.320 --> 00:09:43.640
Any component can be
swapped in roughly a minute.

00:09:43.720 --> 00:09:46.220
So a very serviceable design.

00:09:46.220 --> 00:09:50.080
We couple that with unique programs like
our AppleCare Spare Parts program where

00:09:50.080 --> 00:09:52.140
you can have spare kits right on site.

00:09:52.140 --> 00:09:54.440
So should you have any
component problems,

00:09:54.440 --> 00:09:57.400
they can be swapped out in
sight very quickly and easily.

00:09:57.410 --> 00:09:59.590
A lot of flexibility,
and we'll talk more about

00:09:59.590 --> 00:10:03.990
the rack-mounting options
that we have with Xserve.

00:10:05.250 --> 00:10:08.780
The other real key thing that many
people overlook when we first look

00:10:08.780 --> 00:10:12.840
at Xserve is the dedicated hardware
monitoring that's built into the system.

00:10:12.840 --> 00:10:15.260
Again,
being a rack-mounted server platform,

00:10:15.370 --> 00:10:18.020
these things are designed
to live in a data center,

00:10:18.020 --> 00:10:18.960
live in a rack.

00:10:19.000 --> 00:10:21.320
You shouldn't have to,
as a system administrator,

00:10:21.320 --> 00:10:23.840
spend your time physically
in front of the machine.

00:10:23.840 --> 00:10:25.780
We want to minimize that
as much as possible.

00:10:25.780 --> 00:10:28.730
And that means being able to provide
health and status information

00:10:28.730 --> 00:10:30.200
about the server at all times.

00:10:30.800 --> 00:10:34.630
So we actually have hardware built
in on the logic board of the Xserve

00:10:34.800 --> 00:10:38.030
that is pulling data about the
entire system and delivering that

00:10:38.140 --> 00:10:39.620
to our remote management tools.

00:10:39.660 --> 00:10:42.610
So we're monitoring things like
the voltages coming off the

00:10:42.610 --> 00:10:46.010
power supplies of each rail,
the speed of the blowers,

00:10:46.030 --> 00:10:48.360
temperature in two different
locations of the box,

00:10:48.360 --> 00:10:51.770
status and throughput of
the Ethernet interfaces,

00:10:51.930 --> 00:10:54.900
status and health of
the hard drive modules.

00:10:54.900 --> 00:10:56.850
Matter of fact,
we're doing things like reading

00:10:56.850 --> 00:11:00.640
the smart data off the hard drives,
being able to do, you know, look for,

00:11:00.740 --> 00:11:04.630
performance and health data and look for
what are called pre-failure analysis,

00:11:04.660 --> 00:11:08.900
looking for things that are
indicating future problems.

00:11:09.330 --> 00:11:14.640
We then wrap that data all up into
our server monitor management tool,

00:11:14.640 --> 00:11:18.650
which has the ability to perform email
notifications and things like that.

00:11:18.700 --> 00:11:23.620
So our server monitor tool is a
Cocoa application that can monitor one

00:11:23.620 --> 00:11:26.660
or more Xserves in a single interface.

00:11:26.660 --> 00:11:29.460
You can see several servers
being monitored here.

00:11:29.460 --> 00:11:32.280
You have status indicators
for all the key components.

00:11:32.280 --> 00:11:35.260
So green lights are good
for all the key components.

00:11:35.260 --> 00:11:37.020
Yellow is a warning condition.

00:11:37.020 --> 00:11:38.280
Red is an error condition.

00:11:38.810 --> 00:11:41.340
And you can drill into any of
those components with one click

00:11:41.430 --> 00:11:42.920
to get detailed information.

00:11:42.920 --> 00:11:45.960
If you want to know the exact
temperature of the top unit in your rack,

00:11:45.980 --> 00:11:46.970
very easy to do that.

00:11:47.020 --> 00:11:50.960
What's really interesting about
this tool is that the data,

00:11:50.960 --> 00:11:54.020
hopefully some of you had the
opportunity to go to some of the

00:11:54.330 --> 00:11:59.640
Mac OS X server sessions where they
talked about the management protocol.

00:11:59.640 --> 00:12:02.480
We use the same architecture
with server monitor.

00:12:02.520 --> 00:12:06.710
This application is actually just
reading XML data and presenting

00:12:06.710 --> 00:12:08.580
it to you in a GUI interface.

00:12:08.700 --> 00:12:11.200
But that XML data is
available on the system.

00:12:11.200 --> 00:12:14.460
We've actually had customers be
able to extract that data and use

00:12:14.470 --> 00:12:16.540
that in their own monitoring tools.

00:12:16.540 --> 00:12:20.420
And so that's been very
handy from that perspective,

00:12:20.420 --> 00:12:26.700
looking for more automated, you know,
scriptable analysis of this information.

00:12:27.530 --> 00:12:30.690
So just a review of the major
Xserve configurations to

00:12:30.690 --> 00:12:31.940
highlight the new compute node.

00:12:31.940 --> 00:12:36.220
We actually currently offer three
configurations of our Xserve.

00:12:36.220 --> 00:12:40.250
So the first two are our, quote unquote,
"server configuration,"

00:12:40.250 --> 00:12:43.770
single and dual processor,
single hard drive up to 720

00:12:43.810 --> 00:12:48.200
gigabytes of internal storage,
CD-ROM, VGA standard, and of course,

00:12:48.200 --> 00:12:51.180
Mac OS X server unlimited client license.

00:12:51.180 --> 00:12:53.710
To highlight,
the new compute node that we

00:12:53.710 --> 00:12:58.000
introduced in the March timeframe
is a machine specifically optimized

00:12:58.380 --> 00:13:00.350
for compute intensive tasks.

00:13:00.570 --> 00:13:04.980
This is primarily in response to customer
requests for an Xserve streamline

00:13:04.980 --> 00:13:07.660
for things like compute clustering.

00:13:07.660 --> 00:13:10.230
And again, if you're in the compute
clustering session,

00:13:10.230 --> 00:13:12.900
you saw some of those units
in a demo up on stage.

00:13:13.220 --> 00:13:14.940
So this machine is streamlined for that.

00:13:14.940 --> 00:13:18.210
Two processors, single hard drive,
single gigabit Ethernet,

00:13:18.210 --> 00:13:22.220
the onboard Ethernet, no video,
no CD-ROM, because you don't want one of

00:13:22.220 --> 00:13:23.700
those in every single unit.

00:13:23.700 --> 00:13:28.950
And also much lower price than the
standard dual processor configuration.

00:13:29.090 --> 00:13:31.540
What's interesting about this
unit is while we targeted it

00:13:31.540 --> 00:13:35.740
for compute clustering tasks,
it's also been very popular in any kind

00:13:35.740 --> 00:13:37.790
of computational intense application.

00:13:37.850 --> 00:13:42.010
It's been very popular for things like
web application servers where you don't

00:13:42.060 --> 00:13:44.330
need a lot of storage on the node.

00:13:44.380 --> 00:13:46.920
It's getting data from
external databases or things.

00:13:46.920 --> 00:13:51.530
And so it's been very interesting in
those kind of deployments as well.

00:13:52.100 --> 00:17:32.600
[Transcript missing]

00:17:33.240 --> 00:17:36.380
So a couple of suggestions
and recommendations based

00:17:36.380 --> 00:17:38.320
on feedback and experience.

00:17:38.350 --> 00:17:43.840
First and foremost, just a reminder,
Xserve RAID, being a little bigger unit,

00:17:43.840 --> 00:17:46.210
a little heavier unit,
is designed exclusively

00:17:46.210 --> 00:17:47.520
for four-post racks.

00:17:47.520 --> 00:17:51.420
It has quite an extensive mounting range,
but it's important that it

00:17:51.430 --> 00:17:53.400
gets put into a four-post rack.

00:17:53.440 --> 00:17:57.910
And so if you're planning on adding
one or deploying them together,

00:17:58.110 --> 00:17:58.970
start there.

00:17:58.970 --> 00:18:00.320
Very important.

00:18:01.440 --> 00:18:05.050
A little suggestion,
people are deploying several of these.

00:18:05.390 --> 00:18:07.940
Bottom-up works better than top-down.

00:18:07.940 --> 00:18:10.990
I like to suggest letting
gravity do some work for you.

00:18:10.990 --> 00:18:16.220
It's real important to get the
units in nice and squarely,

00:18:16.220 --> 00:18:20.370
and if you let gravity just take
care of the positioning for you,

00:18:20.370 --> 00:18:22.300
they stack up very nicely.

00:18:22.340 --> 00:18:25.600
Plus, once you get the first one in,
the rest go in quite easily.

00:18:25.610 --> 00:18:27.320
So a little suggestion there.

00:18:27.320 --> 00:18:32.060
With the slot load Xserve,
we also provided a installation template.

00:18:32.100 --> 00:18:35.340
It's actually a metal bar
with some holes in it,

00:18:35.350 --> 00:18:39.940
and we highly recommend you use
this for your final installation

00:18:39.940 --> 00:18:41.430
of the lid in the unit.

00:18:41.590 --> 00:18:45.880
What happens is you place this onto,
when you attach the lid into the rack,

00:18:45.950 --> 00:18:48.780
you place the bracket on,
and you use that as you tighten

00:18:48.780 --> 00:18:49.870
the screws into the rack.

00:18:49.940 --> 00:18:54.340
What happens is because the lid is
what you actually mount in the rack,

00:18:54.340 --> 00:18:56.610
if you over-tighten or
under-tighten the screws,

00:18:56.610 --> 00:18:58.140
the lid can be slightly
deformed in or out,

00:18:58.140 --> 00:18:59.440
making either very difficult to tighten
or very difficult to tighten the screws.

00:18:59.440 --> 00:18:59.440
So it's a great idea to
have that in your rack.

00:18:59.470 --> 00:19:04.070
And sometimes it can be
actually a little loose,

00:19:04.070 --> 00:19:07.530
and there can be too
much play in the rails.

00:19:07.540 --> 00:19:10.740
And so this bracket was designed
to make sure everything's perfect,

00:19:10.740 --> 00:19:14.200
and with that bracket being used,
tighten the screws in,

00:19:14.200 --> 00:19:16.800
and the unit slides
right in just perfectly.

00:19:16.800 --> 00:19:19.740
And so that is a little
suggestion that we've added

00:19:19.740 --> 00:19:21.640
with the new slot load Xserve.

00:19:21.660 --> 00:19:24.900
Final little thing is that
with the slot load Xserve,

00:19:24.900 --> 00:19:29.420
we've added a CD protector
bracket to the slot load Xserve.

00:19:29.440 --> 00:19:30.680
And we've added a new slot load CD bay.

00:19:30.680 --> 00:19:34.140
And we really recommend you keep
that protector on during the

00:19:34.480 --> 00:19:36.240
entire installation process.

00:19:36.240 --> 00:19:38.470
I know a lot of the first things
people want to do is pull it off

00:19:38.470 --> 00:19:39.960
and look at the fascia of the unit.

00:19:39.960 --> 00:19:42.500
But it's best if that be left on.

00:19:42.500 --> 00:19:46.690
It prevents any deformation
in the fascia on where the

00:19:46.690 --> 00:19:49.300
sleety goes into the machine.

00:19:49.300 --> 00:19:54.260
If it's torqued too much,
you'll see a slight bend in that unit.

00:19:54.260 --> 00:19:55.240
It's cosmetic.

00:19:55.240 --> 00:19:57.840
It doesn't affect the CD going in or out.

00:19:57.860 --> 00:20:00.860
But we like to make them look
as nice as possible on the rack,

00:20:00.860 --> 00:20:04.040
and so that protector provides
that strength during installation.

00:20:06.100 --> 00:20:10.080
So I'm going to talk a little bit about
power and environmental requirements.

00:20:10.080 --> 00:20:16.000
We have a nice advantage with the
PowerPC G4 processor in that the power

00:20:16.000 --> 00:20:20.370
requirements and heat output compared
to other competing processors in the

00:20:20.370 --> 00:20:22.980
1U form factor tend to be much lower.

00:20:22.980 --> 00:20:25.320
And so I wanted to
highlight that for you here.

00:20:25.320 --> 00:20:29.060
The power supply is actually
rated for the worst possible

00:20:29.060 --> 00:20:31.010
condition with an Xserve.

00:20:31.080 --> 00:20:34.480
So we actually rate the
power supply at 3.6 amps,

00:20:34.480 --> 00:20:36.120
345 watts.

00:20:36.180 --> 00:20:38.290
That includes margin on top of that.

00:20:38.320 --> 00:20:42.330
In reality, it's pretty challenging to,
on a single processor system,

00:20:42.360 --> 00:20:47.280
to use more than about 200 watts in the
system for most typical configurations.

00:20:47.360 --> 00:20:50.500
And in the dual processor,
pretty challenging to

00:20:50.500 --> 00:20:52.680
use more than 350 watts.

00:20:52.980 --> 00:20:56.500
So this provides some additional
guidelines when you're actually planning,

00:20:56.500 --> 00:20:59.380
for example, UPS deployment on the
loads that are needed.

00:20:59.380 --> 00:21:03.270
We actually document specific
configurations and power and

00:21:03.270 --> 00:21:06.840
thermal output requirements
in our knowledge base.

00:21:06.840 --> 00:21:09.330
So there's actually,
if you go into the KBase,

00:21:09.330 --> 00:21:12.900
kbase.info.apple.com,
search on Xserve and BTU,

00:21:12.900 --> 00:21:16.580
you'll find these specs actually
fleshed out in a lot more detail.

00:21:16.580 --> 00:21:20.290
We do several different kinds of
configurations and give you that as

00:21:20.290 --> 00:21:22.440
examples for power and heat output.

00:21:22.440 --> 00:21:25.310
And that gives you some
scaling guidelines there

00:21:25.310 --> 00:21:27.100
based on room requirements.

00:21:27.180 --> 00:21:29.750
You know, obviously one of the challenges
is that when you have a lot

00:21:29.750 --> 00:21:32.210
of these in a small space,
you want to make sure that the

00:21:32.210 --> 00:21:36.140
room stays within operational
temperatures to prevent overheating.

00:21:36.140 --> 00:21:39.870
Now, we do have system monitors
tracking temperatures,

00:21:39.870 --> 00:21:43.240
and you'll get alerts if
the systems get too warm.

00:21:43.240 --> 00:21:47.120
But, you know,
proper environmentals is important

00:21:47.120 --> 00:21:49.930
for any kind of server environment.

00:21:50.620 --> 00:21:53.020
So just what does this
translate into UPS loads?

00:21:53.020 --> 00:21:54.920
I wanted to give you some examples.

00:21:54.920 --> 00:21:58.940
These are two common APC UPSs,
a 1U-1000 UPS,

00:21:58.940 --> 00:22:04.470
ideal for one or two Xserves,
and then a bigger APC 3U-3000

00:22:04.470 --> 00:22:09.220
UPS that can handle several Xserves.

00:22:09.220 --> 00:22:14.980
So just to give you some guidelines,
the single 1U UPS give you 30 minutes

00:22:14.980 --> 00:22:18.980
of power to a typical configured Xserve.

00:22:19.080 --> 00:22:21.540
That would be a dual
processing sensor Xserve.

00:22:21.540 --> 00:22:24.770
And around 15 minutes of kind
of the worst case scenario,

00:22:24.770 --> 00:22:29.280
fully loaded, fully maxed out Xserve.

00:22:29.280 --> 00:22:35.650
For comparison,
the bigger APC UPS for 6Xserves

00:22:35.650 --> 00:22:39.280
of typical configuration will give
you around 15 minutes of power.

00:22:39.280 --> 00:22:41.500
And for a fully loaded
worst case scenario,

00:22:41.520 --> 00:22:43.060
around five minutes of power.

00:22:43.060 --> 00:22:46.860
So still plenty of time to do
proper shutdown procedures.

00:22:46.940 --> 00:22:50.600
Worth noting also that APC has
software to connect to the APC.

00:22:50.650 --> 00:22:54.270
these UPSs for proper shutdown behavior.

00:22:55.270 --> 00:22:56.100
Networking.

00:22:56.100 --> 00:22:58.600
So, you know, networking is critical
in a server environment,

00:22:58.600 --> 00:23:01.980
and of course that's one of the main
reasons why we provided dual gigabit

00:23:01.980 --> 00:23:04.100
Ethernet out of the back of the machine.

00:23:04.100 --> 00:23:08.090
So, Xserve standard configurations
come with dual gigabit Ethernet,

00:23:08.100 --> 00:23:13.100
one built in on the logic board
and one in our AGP PCI combo slot.

00:23:13.100 --> 00:23:16.500
So, one of the big advantages of the
Xserve in that configuration is

00:23:16.570 --> 00:23:18.080
that we have this combo slot.

00:23:18.110 --> 00:23:20.100
It's really our third PCI slot.

00:23:20.100 --> 00:23:23.890
And this can take either a 4X
high-performance AGP video card or the

00:23:23.940 --> 00:23:29.100
way we configure it for standard server
configurations is a PCI Ethernet card.

00:23:29.100 --> 00:23:32.520
And so that gives you a
second high-performance copper

00:23:32.590 --> 00:23:35.100
interconnect for gigabit Ethernet.

00:23:35.100 --> 00:23:39.420
The PCI Ethernet card actually
is a slightly superior card

00:23:39.420 --> 00:23:42.100
from a performance standpoint.

00:23:42.100 --> 00:23:46.120
We found it to be about 10
to 15% in performance greater

00:23:46.120 --> 00:23:48.020
than the onboard Ethernet.

00:23:48.100 --> 00:23:48.710
And what's interesting is that
it's a little bit more powerful

00:23:48.710 --> 00:23:49.100
than the onboard Ethernet.

00:23:49.100 --> 00:23:51.680
Interesting is that that is the
actual Ethernet card we used

00:23:51.680 --> 00:23:53.040
in some of the benchmarking.

00:23:53.120 --> 00:23:55.620
For example,
that set the web bench record

00:23:55.710 --> 00:23:58.990
that we did when we benchmarked
the slot load Xserves.

00:23:59.100 --> 00:24:02.050
So, very strong performance
in that Ethernet card,

00:24:02.220 --> 00:24:05.380
and we tend to recommend people
use that as their primary

00:24:05.380 --> 00:24:07.920
interface for serving clients.

00:24:08.100 --> 00:24:11.310
A little note though,
our remote setup software,

00:24:11.310 --> 00:24:14.050
and we'll talk more
about that in a minute,

00:24:14.170 --> 00:24:17.100
prefers or expects to
use built-in Ethernet.

00:24:17.100 --> 00:24:18.100
Okay, so we recommend what you do
is use the Ethernet card.

00:24:18.100 --> 00:24:20.490
We recommend what you do is use
the built-in Ethernet to bring

00:24:20.490 --> 00:24:23.550
the system up and configure it
and use the PCI Ethernet as your

00:24:23.550 --> 00:24:26.090
primary interface for your services.

00:24:27.100 --> 00:24:30.720
We've got a lot of questions
about people looking for optical

00:24:30.720 --> 00:24:34.430
cards who want to connect optical
gigabit Ethernet to the system.

00:24:34.430 --> 00:24:36.740
There are actually several
third-party solutions.

00:24:36.740 --> 00:24:40.200
Apple doesn't offer a
card off of our store,

00:24:40.200 --> 00:24:42.740
but there are several key
third-party solutions in this

00:24:42.740 --> 00:24:44.370
space to provide that solution.

00:24:45.440 --> 00:24:50.940
The first one is the 1000SX Giganix card.

00:24:50.940 --> 00:24:55.000
I just recently discovered a
vendor who has Mac OS X drivers.

00:24:55.000 --> 00:25:00.240
3M has a line of optical cards called
Volition that have Mac OS X drivers.

00:25:00.240 --> 00:25:05.120
And so that has two optical
gigabit Ethernet solutions.

00:25:05.120 --> 00:25:09.010
And finally, I get asked this a lot,
with the slot-loading Xserve,

00:25:09.010 --> 00:25:12.420
the software that we ship,
Mac OS X server 1024,

00:25:12.590 --> 00:25:15.240
had a new feature in it called IPX.

00:25:15.440 --> 00:25:19.290
And so when you added
that to your Xserve,

00:25:19.290 --> 00:25:26.570
a new EN2 would often show up in the
system preferences pane for Ethernet.

00:25:26.580 --> 00:25:28.980
And that's actually IP over FireWire.

00:25:28.980 --> 00:25:32.340
Matter of fact, in Panther Server,
it actually will show up named

00:25:32.340 --> 00:25:35.580
IP over FireWire to make it a
little more obvious what that is.

00:25:35.580 --> 00:25:37.880
Had a lot of people wonder,
did their server suddenly

00:25:37.880 --> 00:25:39.380
grow a new Ethernet interface?

00:25:39.380 --> 00:25:42.720
So this is really exciting.

00:25:42.720 --> 00:25:45.200
IP over FireWire,
especially on the slot-loading Xserve.

00:25:45.670 --> 00:25:50.440
With having dual 800 megabit
FireWire on the back,

00:25:50.440 --> 00:25:53.040
we can use this as an IP interface.

00:25:53.040 --> 00:25:55.320
Matter of fact,
we can chain down the rack with

00:25:55.320 --> 00:26:00.060
very inexpensive FireWire 9-pin to
9-pin cables and connect a bunch

00:26:00.060 --> 00:26:02.300
of Xsers over IP over FireWire.

00:26:02.300 --> 00:26:06.640
This gives us an ideal third
interface for things like management,

00:26:06.740 --> 00:26:09.010
replications, and IP failover.

00:26:09.020 --> 00:26:12.100
We'll actually talk about its use
in IP failover in a little bit.

00:26:13.890 --> 00:26:18.010
Think of it as a built-in interface
that you can now very easily

00:26:18.360 --> 00:26:20.860
use for those environments,
and it's very handy for that.

00:26:20.880 --> 00:26:26.320
It delivers very good performance
and just works like an Ethernet

00:26:26.390 --> 00:26:29.100
interface from that perspective.

00:26:29.170 --> 00:26:32.390
One of the benefits here is that it
lets you keep your high-performance

00:26:32.520 --> 00:26:38.240
copper gigabit Ethernet ports available
to serve clients on your network

00:26:38.320 --> 00:26:42.390
and use this as a back channel for
management and things like that.

00:26:43.350 --> 00:26:48.280
One thing I did want to mention with
IP over FireWire is that when you have

00:26:48.280 --> 00:26:51.360
those machines connected together,
you want to be very careful

00:26:51.370 --> 00:26:53.270
about plugging other devices in.

00:26:53.280 --> 00:26:56.220
So one of the things,
the challenges is that now that those

00:26:56.220 --> 00:26:59.050
machines are connected together,
their FireWire bus is now

00:26:59.070 --> 00:27:00.520
shared across those machines.

00:27:00.520 --> 00:27:04.090
And one of the great things about Xserve
is we have a FireWire port on the front.

00:27:04.100 --> 00:27:05.780
I like to brag with our
friends in Power Mac,

00:27:05.780 --> 00:27:08.620
we were the first ones to put the
FireWire on the front of the machine.

00:27:09.280 --> 00:27:11.680
So you put that iPod in
and plug it into the front,

00:27:11.680 --> 00:27:15.840
you actually have all the machines that
are connected with that FireWire bus,

00:27:15.840 --> 00:27:17.170
we'll see it concurrently.

00:27:17.180 --> 00:27:19.500
And so it could actually
mount on several machines,

00:27:19.500 --> 00:27:21.300
which would be less than desirable.

00:27:21.300 --> 00:27:25.260
So just something to be considering
when you are using IP over FireWire,

00:27:25.260 --> 00:27:28.340
to be very careful plugging
in additional devices,

00:27:28.340 --> 00:27:31.800
non-IP over FireWire type devices,
into that FireWire bus,

00:27:31.800 --> 00:27:33.480
because it is a shared bus.

00:27:35.710 --> 00:27:40.500
SNMP, one of the features that Xserve
introduced in Mac OS X Server,

00:27:40.500 --> 00:27:43.500
actually with the original
Xserve with 10.1.5,

00:27:43.500 --> 00:27:46.600
is SNMP capability.

00:27:46.600 --> 00:27:50.780
And this has been built in since then,
and is a great capability.

00:27:50.780 --> 00:27:54.550
Really wanted to call out and highlight
because we have a lot of customers in

00:27:54.620 --> 00:27:58.680
heterogeneous environments who want
to take advantage of SNMP monitoring

00:27:58.680 --> 00:28:03.250
and plug it into tools like OpenView or
Intermapper or some of the neon tools

00:28:03.250 --> 00:28:05.840
that we bundle on the slot load Xserve.

00:28:05.880 --> 00:28:09.440
And this is built in,
and the only challenge is that

00:28:09.480 --> 00:28:11.760
it's deactivated by default.

00:28:11.820 --> 00:28:15.030
And so to turn it on,
you actually have to add one

00:28:15.030 --> 00:28:19.480
line into etsy host config and
just say SNMP server equals yes.

00:28:19.480 --> 00:28:22.550
And that will activate the SNMP stack,
and it will start up

00:28:22.550 --> 00:28:24.490
automatically from then on out.

00:28:24.520 --> 00:28:30.020
It's worth noting that in Jaguar,
SNMP... SNMP server equals no

00:28:30.020 --> 00:28:32.260
is not in the default script.

00:28:32.260 --> 00:28:33.830
You actually have to
add it as a new line.

00:28:33.840 --> 00:28:36.100
A lot of people look,
can I just change no to yes?

00:28:36.100 --> 00:28:38.860
It's actually not in
the host config script.

00:28:38.920 --> 00:28:39.930
You have to go in and add it.

00:28:39.990 --> 00:28:43.760
And then, of course, highly recommend you
run the SNMP conf tool,

00:28:43.920 --> 00:28:47.740
which actually allows you to plug
in system-specific information,

00:28:47.740 --> 00:28:52.000
you know, host name, contact information,
email address, all the things,

00:28:52.000 --> 00:28:55.300
so that when you connect to it over SNMP,
you get some meaningful information

00:28:55.300 --> 00:28:58.640
beyond network statistics and other
valuable information that SNMP has.

00:28:58.680 --> 00:29:00.660
And that's what SNMP provides back.

00:29:00.720 --> 00:29:03.680
If you're not familiar with
SNMP or configuring it,

00:29:03.680 --> 00:29:05.670
we have... there are
great man pages built in.

00:29:05.890 --> 00:29:09.680
Our implementation of SNMP is
actually based on NetSNMP.

00:29:09.680 --> 00:29:14.100
And so there's a great resource,
of course, the NetSNMP web page that I'd

00:29:14.220 --> 00:29:17.680
point you to for more information
about specifics about the MIBs

00:29:17.680 --> 00:29:21.680
and configuration above and beyond
what we provide in the man pages.

00:29:25.530 --> 00:29:28.940
I wanted to talk now about
software installation.

00:29:28.940 --> 00:29:31.990
One of the great things about
Mac OS X Server on Xserve is

00:29:31.990 --> 00:29:37.200
we have a variety of ways to
configure the machines and have,

00:29:37.200 --> 00:29:39.580
because of the headless nature
of rack-mounted servers,

00:29:39.580 --> 00:29:43.900
have a lot of new tools that
we've built for Xserve and other

00:29:43.900 --> 00:29:48.920
environments to make it easy to
deploy these machines in the rack.

00:29:49.040 --> 00:29:53.010
Our goal is that if you want to hook
up a monitor and keyboard to an Xserve,

00:29:53.040 --> 00:29:53.980
great, go ahead.

00:29:53.980 --> 00:29:55.390
It should work just
like you would expect.

00:29:55.500 --> 00:29:59.270
But we want to make it really
easy to take this Xserve

00:29:59.270 --> 00:30:01.970
brand new out of the box,
rack it, power it up,

00:30:02.050 --> 00:30:05.180
and just configure it remotely,
never ever having to connect a

00:30:05.180 --> 00:30:07.840
monitor and keyboard and make that
a really great user experience.

00:30:07.920 --> 00:30:11.050
And we think we've done that,
so I wanted to highlight the

00:30:11.050 --> 00:30:14.340
various methods of configuring
the software on Xserve.

00:30:16.230 --> 00:30:18.860
Before I get into that,
I wanted to highlight a new feature

00:30:18.860 --> 00:30:22.870
that was in the slot load Xserve that
we introduced with the slot load Xserve,

00:30:23.230 --> 00:30:25.160
which we call our front panel boot menu.

00:30:25.160 --> 00:30:28.160
On the original Xserve,
the system identifier button,

00:30:28.160 --> 00:30:31.010
the button with the triangle on it,
when you powered up the

00:30:31.130 --> 00:30:33.600
machine and held that button,
it was like holding down

00:30:33.600 --> 00:30:34.960
the C key on your keyboard.

00:30:34.960 --> 00:30:37.700
It forced the machine
to boot off the CD-ROM,

00:30:37.700 --> 00:30:41.090
and that was great for this
same kind of operations.

00:30:41.100 --> 00:30:44.100
But what we found out is that a
lot of people wanted to do some of

00:30:44.100 --> 00:30:46.020
the other things that you could do.

00:30:46.390 --> 00:30:52.070
And so we've actually added
more features in the new slot

00:30:52.070 --> 00:30:55.500
load Xserve to provide this.

00:30:55.500 --> 00:30:58.740
And what we've actually implemented
is by using the light show,

00:30:58.810 --> 00:31:02.350
the two rows of eight blue LEDs and
the button on the front is implemented

00:31:02.390 --> 00:31:04.530
a very simple boot menu on the Xserve.

00:31:04.560 --> 00:31:06.910
So what you do is when
you power up the machine,

00:31:06.970 --> 00:31:10.780
you hold down that same system
identifier button for a couple seconds,

00:31:10.780 --> 00:31:12.500
and what it will do is
it will actually flash.

00:31:12.500 --> 00:31:16.050
And you'll get a single
blue LED that will count.

00:31:16.070 --> 00:31:18.100
And you'll see that it will
come out across the eight LEDs.

00:31:18.320 --> 00:31:21.910
And now when you press the
system identifier button,

00:31:21.910 --> 00:31:27.200
it will indicate those LEDs from one
to eight from the right to the left,

00:31:27.200 --> 00:31:29.300
is how you count that.

00:31:29.300 --> 00:31:33.880
And each LED then has a special meaning.

00:31:33.880 --> 00:31:37.080
And when you've selected the
number LED that you're looking for,

00:31:37.200 --> 00:31:40.780
you then hold down the system
identifier button for a few seconds.

00:31:40.780 --> 00:31:43.460
You'll see the indicator
count up and down.

00:31:43.460 --> 00:31:46.060
And when you release it,
it will go ahead and follow that.

00:31:46.060 --> 00:31:50.420
And so what we have now is seven
commands that can be implemented right

00:31:50.420 --> 00:31:55.840
on the front of the Xserve without any
additional keyboard or other interaction.

00:31:55.840 --> 00:31:59.280
Obviously, the first one is boot from CD.

00:31:59.280 --> 00:32:00.950
So you press that.

00:32:00.960 --> 00:32:03.640
If there's a CD in the drive,
it will eject it very handy.

00:32:03.640 --> 00:32:06.460
And when you put a CD in,
it will now attempt to boot from

00:32:06.460 --> 00:32:08.180
that CD if it's a bootable CD.

00:32:08.180 --> 00:32:11.160
The second one is like
holding down the N key.

00:32:11.160 --> 00:32:12.510
It's the net boot command.

00:32:12.520 --> 00:32:14.970
Net boot,
and we'll touch on this a little bit.

00:32:15.050 --> 00:32:16.080
Net boot is a great way.

00:32:16.080 --> 00:32:18.200
It's a great way to mass deploy servers.

00:32:18.200 --> 00:32:23.070
You can use it for network configuration,
have it image the machine automatically,

00:32:23.070 --> 00:32:26.920
or in cluster environments,
you might choose to net boot the entire

00:32:26.920 --> 00:32:29.200
cluster for a single system image.

00:32:29.220 --> 00:32:32.200
So you can do net boot right
from the front of the machine.

00:32:32.200 --> 00:32:33.970
Again, no keyboard needed.

00:32:34.200 --> 00:32:37.080
The third light indicates boot
from the internal hard drive.

00:32:37.200 --> 00:32:39.390
And so what it will do is
it will start in bay one,

00:32:39.390 --> 00:32:42.420
which is the leftmost hard drive,
and attempt to boot from that,

00:32:42.420 --> 00:32:45.200
and then try to boot from drive two,
three, and four.

00:32:46.110 --> 00:32:52.130
So it will basically search the internal
drive base for a viable boot hard drive.

00:32:52.160 --> 00:32:55.970
If you select option number four,
it will actually attempt to boot from

00:32:56.260 --> 00:33:00.060
a device other than the built-in device
that you've already chosen previously.

00:33:00.060 --> 00:33:05.790
So if you want to actually troubleshoot
your built-in system boot drive,

00:33:05.790 --> 00:33:09.160
and you want to instead boot off an
iPod or a FireWire drive or something,

00:33:09.160 --> 00:33:10.630
you can select this option.

00:33:10.640 --> 00:33:13.960
It will scan and boot from the first
available device that it finds.

00:33:13.960 --> 00:33:16.890
It's also worth noting,
because I don't think I mentioned

00:33:16.940 --> 00:33:19.490
it elsewhere in the slides,
you can actually boot

00:33:19.490 --> 00:33:20.840
off of our Xserve RAID.

00:33:20.920 --> 00:33:22.990
We actually have people
who are doing that,

00:33:23.040 --> 00:33:26.060
so very handy to be able to
boot off a fiber channel.

00:33:27.520 --> 00:33:30.710
Option number five, it turns the Xserve
into target disk mode.

00:33:30.710 --> 00:33:32.900
Now this is extremely,
extremely powerful.

00:33:32.990 --> 00:33:34.500
We'll talk more about this in a second.

00:33:34.500 --> 00:33:37.650
With target disk mode,
it basically turns the Xserve

00:33:37.650 --> 00:33:40.250
temporarily into a FireWire hard drive.

00:33:40.250 --> 00:33:44.200
And you can plug that into your
power book and mount those hard

00:33:44.200 --> 00:33:48.920
drives right over FireWire like it
was a little FireWire hard drive.

00:33:48.920 --> 00:33:53.160
What's unique about the implementation
on Xserve is that we've actually allowed

00:33:53.160 --> 00:33:55.280
it to mount all four hard drive bays.

00:33:55.800 --> 00:33:57.920
OK, so you can have four hard drive bays.

00:33:57.920 --> 00:34:01.890
And rather than just showing drive zero,
or bay one, I should say,

00:34:01.930 --> 00:34:06.370
it will mount all the available
drives out through FireWire.

00:34:06.620 --> 00:34:10.080
Option number six, of course,
is the Zap the PRAM magic command.

00:34:10.080 --> 00:34:12.900
And finally,
option number seven is the equivalent

00:34:12.900 --> 00:34:14.340
of booting into open firmware.

00:34:14.340 --> 00:34:18.480
This is very powerful for people who want
to kind of get under the hood and give

00:34:18.480 --> 00:34:20.540
very specific commands to the firmware.

00:34:20.540 --> 00:34:22.900
We've also added some
intelligence to this.

00:34:22.900 --> 00:34:26.760
If you don't have a keyboard plugged in,
it automatically activates the

00:34:26.760 --> 00:34:28.920
serial port on the back as a console.

00:34:28.920 --> 00:34:31.400
So you can go right in
through the serial port,

00:34:31.400 --> 00:34:35.480
tell it to boot off of a specific
device or do specific troubleshooting.

00:34:36.080 --> 00:34:39.540
And finally, option number seven is the
Xserve Xserve software.

00:34:39.540 --> 00:34:41.390
This is a very simple and easy to
use software that you might want

00:34:41.390 --> 00:34:42.060
to do at the open firmware level,
which is fortunately very, very rare,

00:34:42.060 --> 00:34:42.830
but when you want to do it,
it's very easy to activate that.

00:34:42.840 --> 00:34:45.310
So I wanted to highlight that
because we'll use that in context

00:34:45.310 --> 00:34:46.550
of some of these examples.

00:34:46.550 --> 00:34:50.270
So I want to take the first
and easiest implementation

00:34:50.270 --> 00:34:53.640
of deploying Xserve software,
which is the easy

00:34:53.640 --> 00:34:56.610
plug-in-the-keyboard-and-mouse method.

00:34:56.610 --> 00:34:59.020
And this works just
like you would expect.

00:34:59.020 --> 00:35:02.000
Plug it in, boot from the CD, install it,
off you go,

00:35:02.000 --> 00:35:04.380
just like you would any other machine.

00:35:04.380 --> 00:35:05.640
Very simple, very straightforward.

00:35:05.660 --> 00:35:09.050
When you have the ability
to have a keyboard and mouse

00:35:09.140 --> 00:35:10.280
handy to be plugged in.

00:35:10.280 --> 00:35:13.540
What's also interesting about
this approach is using the

00:35:13.600 --> 00:35:18.100
target disk mode function,
we can install using the Xserve really

00:35:18.100 --> 00:35:19.420
like it was a target hard drive.

00:35:19.420 --> 00:35:21.260
So this is really great.

00:35:21.260 --> 00:35:25.800
You can take your PowerBook,
turn your Xserve into a hard drive,

00:35:25.800 --> 00:35:28.110
plug it in,
install from your PowerBook onto

00:35:28.340 --> 00:35:31.650
the Xserve like it was a boot drive,
and actually install

00:35:31.650 --> 00:35:33.980
Mac OS X Server through that method.

00:35:35.240 --> 00:35:36.240
And then you can use the
Xserve as your keyboard.

00:35:36.240 --> 00:35:38.930
So you can use the PowerBook or other
FireWire-capable Macintosh system

00:35:39.090 --> 00:35:42.790
as your screen and keyboard and
actually host processor at that time.

00:35:42.790 --> 00:35:54.460
So a very,
very easy way to deploy and reimage and

00:35:54.460 --> 00:36:04.820
manipulate the software on your Xserve.

00:36:04.820 --> 00:36:08.190
And then you can clone one machine
configuration to another over FireWire,

00:36:08.190 --> 00:36:10.570
rather trivially with
FireWire target disk mode.

00:36:10.600 --> 00:36:15.520
So this is a really handy feature
you can use in these environments.

00:36:15.950 --> 00:36:18.980
The next thing I wanted to talk
about is remote configuration

00:36:19.000 --> 00:36:20.620
user server assistant.

00:36:20.840 --> 00:36:24.830
This was a specific feature we added
to support headless installation

00:36:24.880 --> 00:36:29.940
of the software for Xserve,
but yet provide a really simplified

00:36:29.940 --> 00:36:31.590
and powerful user experience.

00:36:31.600 --> 00:36:34.400
So it still provides a
graphical user interface.

00:36:36.140 --> 00:36:39.210
The way this works is that you, again,
using the front panel mode,

00:36:39.270 --> 00:36:44.640
can boot the system from the
install CD that comes with Xserve.

00:36:44.770 --> 00:36:47.660
You boot that up,
and if you've ever wondered why it

00:36:47.660 --> 00:36:51.480
takes a little bit longer to boot
Mac OS X server CDs on the Xserve,

00:36:51.480 --> 00:36:55.260
it's because it's creating
this remote hosting capability.

00:36:55.260 --> 00:36:58.750
What it's actually doing
is booting the environment,

00:36:58.750 --> 00:37:02.470
making networking available,
and then what you do is run a

00:37:02.470 --> 00:37:04.960
utility called server assistant.

00:37:06.140 --> 00:37:08.270
So what you do is you run a
utility called server assistant

00:37:08.270 --> 00:37:10.460
that you run on a remote host,
PowerBook, for example,

00:37:10.460 --> 00:37:13.150
that's plugged into the
network on the same subnet.

00:37:14.110 --> 00:37:18.260
You find that Xserve remotely using
a rendezvous-type technology and then

00:37:18.260 --> 00:37:22.280
configure the system through the same
server assistant you would see as

00:37:22.290 --> 00:37:24.540
if you were on the machine locally.

00:37:25.320 --> 00:37:27.330
To give you an idea of
what this looks like,

00:37:27.330 --> 00:37:30.520
what you do is this is from a client
machine you run on your PowerBook,

00:37:30.650 --> 00:37:32.840
the server assistant,
and it comes up and asks

00:37:32.840 --> 00:37:34.240
you what you want to do.

00:37:34.440 --> 00:37:35.120
Do you want to configure?

00:37:35.710 --> 00:37:37.820
So you can configure a remote
machine or install a server or

00:37:37.820 --> 00:37:39.180
reinstall the server software.

00:37:39.850 --> 00:37:43.300
So you can actually do a complete
reinstallation in a headless environment.

00:37:44.150 --> 00:37:46.520
So in this case,
we'll reinstall or install

00:37:46.550 --> 00:37:48.110
Mac OS X server software.

00:37:48.950 --> 00:37:51.180
It will then scan your
local subnet using,

00:37:51.180 --> 00:37:55.620
again, the same protocol as rendezvous,
looking for machines on that subnet.

00:37:56.440 --> 00:37:58.570
And it will list their
current IP address,

00:37:58.650 --> 00:38:01.080
their MAC address,
so you can validate the exact

00:38:01.130 --> 00:38:05.120
hardware port that you're talking to
and what it thinks its host name is.

00:38:05.920 --> 00:38:07.320
And these will refresh.

00:38:07.740 --> 00:38:08.320
You might see one.

00:38:08.950 --> 00:38:11.170
You might see a dozen servers,
depending on how many are

00:38:11.170 --> 00:38:12.320
in configuration mode.

00:38:12.900 --> 00:38:14.970
And I'm going to stress that this
is only available when it's in

00:38:14.970 --> 00:38:16.320
this booted configuration mode.

00:38:16.950 --> 00:38:19.720
This isn't something that you can
connect to to an X server at any time,

00:38:19.760 --> 00:38:21.320
obviously for security reasons.

00:38:21.970 --> 00:38:25.120
You don't want to make it easy for
anyone to reinstall your server software.

00:38:26.100 --> 00:38:28.860
So once you find this machine
that you're looking for,

00:38:28.860 --> 00:38:32.320
you click on it, continue,
and it will prompt you for a password.

00:38:32.580 --> 00:38:33.580
And because the machine's in
a remote configuration mode,

00:38:33.600 --> 00:38:34.320
it's not going to be able to do that.

00:38:34.710 --> 00:38:36.300
So once you find this machine
in a remote configuration mode,

00:38:36.380 --> 00:38:38.320
the machine could be in an unknown state.

00:38:38.800 --> 00:38:41.110
What we've decided to use as the
authentication is actually the

00:38:41.110 --> 00:38:43.320
hardware serial number of the machine.

00:38:43.870 --> 00:38:46.320
So you actually use the first eight
digits of the hardware serial number.

00:38:46.990 --> 00:38:50.150
And that's actually why we put the
serial number on the back of the machine

00:38:50.400 --> 00:38:51.310
and on the front inside of the machine.

00:38:51.990 --> 00:38:54.320
If you just slide open the
X server about two inches,

00:38:54.320 --> 00:38:57.000
you'll see a little printed serial
number tag on the inside of the

00:38:57.000 --> 00:39:00.540
machine as well as on the back,
making it very easy to get

00:39:00.650 --> 00:39:02.320
access to that information.

00:39:03.320 --> 00:39:03.320
So you enter the first eight digits.

00:39:03.670 --> 00:39:04.300
And then you click on it.

00:39:04.710 --> 00:39:06.250
And then you click on the
serial number to authenticate.

00:39:07.070 --> 00:39:09.350
It will continue,
and you then continue through the

00:39:09.350 --> 00:39:13.250
assistant just like you would locally,
you know, language, boot device,

00:39:13.640 --> 00:39:17.930
option packs you want installed,
ask you for your IP address,

00:39:17.930 --> 00:39:21.300
all the questions you would answer
normally now are being done remotely.

00:39:22.100 --> 00:39:26.220
It's sending those remote commands over
to the machine in an encrypted fashion,

00:39:26.650 --> 00:39:30.280
basically using an SSH type
encrypted communication session.

00:39:30.880 --> 00:39:32.620
The machine will configure itself,
reboot,

00:39:32.650 --> 00:39:34.280
and then it's in exactly a known state.

00:39:34.810 --> 00:39:37.170
That you can log into as the
administrator with server

00:39:37.170 --> 00:39:42.250
administration tools and configure
your services from there on out.

00:39:43.130 --> 00:39:45.860
So very,
very powerful and simple user interface

00:39:45.860 --> 00:39:48.280
to do this remote server assistant mode.

00:39:50.670 --> 00:39:55.240
The other approach I wanted to talk
about briefly is network install.

00:39:55.240 --> 00:39:59.500
So one of the abilities you have to do,
and this is really handy when

00:39:59.500 --> 00:40:04.100
you're deploying a large number
of Xserves in a given environment,

00:40:04.100 --> 00:40:06.830
is to use the network
install capabilities that's

00:40:06.840 --> 00:40:08.460
built into Mac OS X server.

00:40:08.460 --> 00:40:12.480
So basically using a server as
kind of a hosting server that can

00:40:12.820 --> 00:40:16.950
host and install environment for
other machines on the network.

00:40:17.030 --> 00:40:20.460
So you can create a disk
image using the network image

00:40:20.460 --> 00:40:23.000
utility that's in 10.2 server.

00:40:23.000 --> 00:40:26.480
We highly recommend if you're
doing a server install that you

00:40:26.480 --> 00:40:30.750
use version 10.2.5 or later,
the network image utility that

00:40:30.750 --> 00:40:33.540
ships with 10.2.5 or later.

00:40:33.540 --> 00:40:36.240
Note that the system software that
you're installing on the machine

00:40:36.240 --> 00:40:38.000
doesn't have to be necessarily Xserve.

00:40:38.460 --> 00:40:39.590
You can use the network image
utility that's in 10.2.5 or later.

00:40:39.720 --> 00:40:42.900
But the utility that creates
the disk image needs to be.

00:40:42.960 --> 00:40:47.290
And there are actually some
specific server things that were

00:40:47.300 --> 00:40:50.500
addressed in 10.2.5 version.

00:40:50.720 --> 00:40:53.240
What it will do is when
you run this utility,

00:40:53.240 --> 00:40:56.540
it will actually ask you
for the server software CD.

00:40:56.540 --> 00:41:01.020
You place that in the machine,
and off you go to create that image.

00:41:01.020 --> 00:41:04.420
You then can netboot that off,
and it's just like booting from CD and

00:41:04.420 --> 00:41:06.380
have that administration capability.

00:41:06.380 --> 00:41:09.330
So here's a look at the
actual utility itself,

00:41:09.330 --> 00:41:11.900
being able to create an install image.

00:41:11.900 --> 00:41:14.700
It will create that image,
and off you go.

00:41:14.700 --> 00:41:19.040
You can make that your netboot
network image that's available.

00:41:20.290 --> 00:41:23.370
The last thing I wanted to talk
about is probably one of the most

00:41:23.370 --> 00:41:28.460
powerful tools for Xserve deployment,
which is a command line tool called ASR.

00:41:28.460 --> 00:41:32.320
This is a tool that allows you to
basically take an image of a server

00:41:32.330 --> 00:41:36.350
that can be completely configured
and blast it onto other machines.

00:41:36.350 --> 00:41:40.160
It's very fast, very efficient,
and can be very flexible in

00:41:40.160 --> 00:41:41.270
the way you use this machine.

00:41:41.280 --> 00:41:43.710
So you literally can
take a known boot image,

00:41:43.710 --> 00:41:46.550
slap it in one bay of an Xserve,
take a blank drive in the

00:41:46.660 --> 00:41:49.880
other bay of the image,
and then you can get that image.

00:41:49.880 --> 00:41:55.760
Pull up terminal, type in ASR, you know,
target, source volume, target volume,

00:41:55.810 --> 00:41:58.920
some optional flags,
depending on if you want to use them.

00:41:58.920 --> 00:42:02.660
Verbose options and erasable
options are highly recommended.

00:42:02.660 --> 00:42:04.560
And off you go.

00:42:04.560 --> 00:42:07.470
It will clone that drive that's
now a perfectly bootable drive.

00:42:07.480 --> 00:42:11.060
You can stick in another Xserve and bring
up in a completely known environment.

00:42:11.060 --> 00:42:17.200
Now, what's really amazing about ASR is
that you have the ability to host

00:42:17.610 --> 00:42:21.210
these disk images that become the,
the image that you're blasting

00:42:21.490 --> 00:42:23.470
onto a server from a web server.

00:42:23.530 --> 00:42:24.760
So imagine this.

00:42:24.760 --> 00:42:27.580
You can create a pristine
image of every server,

00:42:27.730 --> 00:42:29.500
type of server that you
have in your environment.

00:42:29.520 --> 00:42:30.700
This is the web server.

00:42:30.700 --> 00:42:31.920
This is the DNS server.

00:42:31.920 --> 00:42:33.020
This is the file server.

00:42:33.550 --> 00:42:35.920
Create a disk image of it,
whether it be for backup or

00:42:35.920 --> 00:42:37.580
for replication purposes.

00:42:37.580 --> 00:42:43.420
Put that image up on a web server,
and using the HTTP URL to that

00:42:43.420 --> 00:42:49.840
disk image as the source image,
blast that from a web server onto a,

00:42:49.900 --> 00:42:51.560
onto a hard drive.

00:42:51.560 --> 00:42:54.560
Very, very amazing capability.

00:42:54.560 --> 00:42:57.190
Very fast, very efficient.

00:42:57.870 --> 00:43:01.400
The last thing I wanted to mention
is that there are actually some

00:43:01.400 --> 00:43:05.360
unique third-party products
coming that help this environment.

00:43:05.360 --> 00:43:09.700
This is a prototype of a product that
a company called Xtreme Mac is working

00:43:09.700 --> 00:43:12.520
on and will be shipping shortly.

00:43:12.520 --> 00:43:20.550
This is an Apple Drive module device
that has FireWire on the back.

00:43:21.500 --> 00:43:24.530
You'll be able to take this device,
plug it into a PowerBook, a PowerMac,

00:43:24.590 --> 00:43:29.620
and read and write to
Apple Drive modules for configuration.

00:43:29.620 --> 00:43:34.620
Take this out, stick it in an Xserve,
and a very easy way to deploy

00:43:34.940 --> 00:43:40.740
images and software onto an Xserve
drive from another host machine.

00:43:40.740 --> 00:43:44.720
Look forward to products like that
providing new options for you as well.

00:43:46.530 --> 00:43:48.740
So one of the other things
I wanted to talk about,

00:43:48.740 --> 00:43:52.740
kind of moving topics here,
is availability.

00:43:52.740 --> 00:43:59.220
So Mac OS Xserver has a unique
architecture in X2 server called

00:43:59.260 --> 00:44:05.620
IP failover that provides a
way to have two servers kind of

00:44:05.620 --> 00:44:13.400
provide a master/slave failover
environment for availability.

00:44:13.400 --> 00:44:16.040
And this is built into a Jaguar server.

00:44:16.060 --> 00:44:21.520
It requires an IP connection be connected
between a private IP connection between

00:44:21.530 --> 00:44:24.160
two servers for use as a heartbeat.

00:44:24.160 --> 00:44:28.350
So what happens is we have two
servers on a common private network

00:44:28.350 --> 00:44:31.720
that are passing a heartbeat
between the two of them saying,

00:44:31.720 --> 00:44:33.740
you know, I'm alive, are you alive?

00:44:33.740 --> 00:44:35.960
And this is ideal for
using IP over FireWire.

00:44:35.960 --> 00:44:39.730
Again, a small FireWire cable between
two servers with IP over FireWire

00:44:39.850 --> 00:44:43.380
gives you the perfect connection
for this kind of environment.

00:44:43.380 --> 00:44:45.620
It has the ability to failover.

00:44:45.620 --> 00:44:49.170
So one server goes out,
the other machine takes over,

00:44:49.470 --> 00:44:50.310
and then failback.

00:44:50.370 --> 00:44:55.680
So when the other machine comes back up,
have it resolve its services back.

00:44:55.680 --> 00:45:00.010
And this is ideal out of
the box for static services,

00:45:00.080 --> 00:45:04.840
things like QuickTime streaming,
web services, DNS,

00:45:05.020 --> 00:45:13.360
where the data behind the service
doesn't change on a frequent basis.

00:45:13.360 --> 00:45:14.360
So it's not replicating data.

00:45:14.360 --> 00:45:17.060
And we'll talk about strategies
for that in a minute.

00:45:17.060 --> 00:45:20.560
So I just wanted to give you a graphical
environment of what this looks like.

00:45:20.560 --> 00:45:22.330
So we have two servers.

00:45:22.400 --> 00:45:27.370
And what's important about this is that
the secondary server doesn't have to be

00:45:27.370 --> 00:45:31.000
a server just sitting idle doing nothing,
that just is waiting for

00:45:31.000 --> 00:45:32.420
the primary server to fail.

00:45:32.730 --> 00:45:35.910
Both servers can be actively
serving other services.

00:45:35.910 --> 00:45:40.950
And what we have here are machines
that have a minimum of two Ethernet

00:45:41.050 --> 00:45:43.070
interfaces or IP over FireWire.

00:45:43.420 --> 00:45:47.700
Each one has its own unique public
interface and public IP address.

00:45:47.820 --> 00:45:51.240
Here the primary server is 1001.1.

00:45:51.390 --> 00:45:54.520
And the secondary server is 1001.2.

00:45:54.660 --> 00:45:56.200
And then they have a private interface.

00:45:56.200 --> 00:45:59.780
Again, this could be Ethernet or
IP over FireWire that they use

00:45:59.780 --> 00:46:03.770
to communicate privately between
them for heartbeat information.

00:46:03.810 --> 00:46:07.660
In this case, it's the 192 address,
is .1 and .2.

00:46:07.790 --> 00:46:13.320
And so these machines are sending, again,
live messages between the two machines.

00:46:13.320 --> 00:46:16.890
Now, let's get into a situation
where the primary server,

00:46:16.990 --> 00:46:20.600
for any number of reasons, dies,
whether it be the network

00:46:20.600 --> 00:46:22.380
link or hardware failure.

00:46:22.380 --> 00:46:25.670
The machine then would stop
sending heartbeat messages

00:46:25.670 --> 00:46:27.330
to the secondary server.

00:46:27.380 --> 00:46:31.190
At that point, the secondary server,
using the IP failover ability,

00:46:31.310 --> 00:46:34.660
would kick off a series of scripts
that would determine the specific

00:46:34.660 --> 00:46:36.140
actions that would happen.

00:46:36.140 --> 00:46:39.360
In this case, you know,
our primary server is a web server.

00:46:39.360 --> 00:46:41.500
Our secondary is a streaming server.

00:46:41.500 --> 00:46:44.970
What we might choose to do here is,
for example, fire up the web server

00:46:44.970 --> 00:46:47.180
on the secondary server.

00:46:47.180 --> 00:46:50.250
And what it will do is it will
add -- it will take over the

00:46:50.250 --> 00:46:54.690
IP address of the primary server,
becoming its presence on the network.

00:46:54.740 --> 00:46:57.680
So in this case,
we're keeping both services alive,

00:46:57.680 --> 00:47:00.060
both web services and streaming services.

00:47:00.110 --> 00:47:03.520
And because the IP address
is assigned to those,

00:47:03.520 --> 00:47:07.570
continuing to be alive,
the clients out on the network

00:47:07.570 --> 00:47:10.000
would see no loss in services.

00:47:10.000 --> 00:47:13.280
Those -- because this is
completely script-driven,

00:47:13.280 --> 00:47:15.710
though, you have the ability to
tune the exact behavior.

00:47:15.820 --> 00:47:20.980
You might decide the web services of high
transactional ability and decide that

00:47:21.000 --> 00:47:24.570
you really need to kill off the streaming
server or maybe just nice it down to a

00:47:24.620 --> 00:47:28.950
much lower priority because these are
all scripts that determine this behavior.

00:47:28.960 --> 00:47:33.250
You have that ability to
determine that exact behavior.

00:47:33.650 --> 00:47:38.540
Now as I mentioned,
IP failover does not replicate data.

00:47:38.560 --> 00:47:42.380
So obviously the service needs to
be able to fire up and run that

00:47:42.440 --> 00:47:45.480
service in the proper configuration.

00:47:45.560 --> 00:47:50.070
So you need to have data staged there
and configuration files staged there for

00:47:50.120 --> 00:47:52.600
the situations when those get fired off.

00:47:52.600 --> 00:47:57.480
And obviously you can use tools like
rsync as just one example to replicate

00:47:57.480 --> 00:48:00.130
that data between the two services.

00:48:00.130 --> 00:48:04.760
So this can be very powerful
for the appropriate services.

00:48:04.760 --> 00:48:09.290
Obviously this architecture is not
ideal for things like file services that

00:48:09.500 --> 00:48:11.820
have heavy data requirements behind it.

00:48:11.910 --> 00:48:15.220
You can imagine if it's my
home directory server and

00:48:15.220 --> 00:48:18.450
I failover to a secondary server,
if my home directory isn't there,

00:48:18.450 --> 00:48:21.540
it's not good to me that the
server is still available.

00:48:21.590 --> 00:48:24.220
It's the data behind it that's important.

00:48:24.220 --> 00:48:27.480
So this is really ideal for things like
web services and streaming services.

00:48:27.480 --> 00:48:28.880
as two examples.

00:48:31.390 --> 00:48:34.210
Again, I want to stress that
these are script driven,

00:48:34.210 --> 00:48:38.300
so you have complete flexibility over
the exact behaviors of what happens.

00:48:38.300 --> 00:48:42.160
We actually provide sample scripts,
which you then can customize and

00:48:42.160 --> 00:48:44.720
tune to your specific environment.

00:48:44.820 --> 00:48:48.390
It also has the ability to send
email notifications and things

00:48:48.390 --> 00:48:52.350
like that so that you know when
you're in this kind of situation.

00:48:53.410 --> 00:48:56.200
The other thing I didn't
go into in much detail,

00:48:56.200 --> 00:48:59.700
but there are also corresponding
scripts that determine what happens

00:48:59.700 --> 00:49:01.850
when the primary server comes back up.

00:49:01.930 --> 00:49:06.260
So we fail back and bring the
original services up as expected.

00:49:08.960 --> 00:49:11.220
I also want to stress
that for availability,

00:49:11.280 --> 00:49:13.230
IP failover isn't the only strategy.

00:49:13.480 --> 00:49:18.100
Many applications have their own
architecture for IP failover,

00:49:18.100 --> 00:49:21.040
or for high-availability, really.

00:49:21.040 --> 00:49:23.450
And that's the best way
to handle availability,

00:49:23.450 --> 00:49:27.410
because you can determine that
on an application-specific basis.

00:49:27.710 --> 00:49:31.990
Some examples are Stalkers
CommuniGate have an excellent two-node

00:49:32.130 --> 00:49:36.090
clustered version that provides
a high-availability mail server.

00:49:36.160 --> 00:49:39.130
And again,
having application-level awareness is

00:49:39.160 --> 00:49:42.060
much better than a generic service,
and that's an excellent

00:49:42.060 --> 00:49:43.930
solution for those environments.

00:49:45.530 --> 00:49:50.400
IP failover also isn't the only
way to achieve availability.

00:49:50.400 --> 00:49:54.080
Using external load balancers for
things like multiple web servers that

00:49:54.380 --> 00:49:58.340
can take a server out of the loop when
a server fails is also another option.

00:49:59.110 --> 00:50:02.450
And I also wanted to mention a
new third-party option from a

00:50:02.450 --> 00:50:04.830
fiber channel storage perspective.

00:50:04.920 --> 00:50:07.290
One of the questions
I get asked a lot is,

00:50:07.340 --> 00:50:11.190
well, if we could put our storage out on,
say, an Xserve RAID,

00:50:11.190 --> 00:50:14.880
an external storage device,
could we have that storage move

00:50:14.880 --> 00:50:18.930
over to the second server so that
my home directories do follow me if

00:50:18.930 --> 00:50:21.560
I failover to a secondary server?

00:50:21.560 --> 00:50:25.130
Obviously,
this requires the ability to map the

00:50:25.290 --> 00:50:28.280
storage from one machine to another.

00:50:28.900 --> 00:50:32.210
And while we don't provide that
functionality out of the box,

00:50:32.290 --> 00:50:35.160
a company called Astera has
some new drivers for their

00:50:35.160 --> 00:50:39.100
fiber channel cards that have
scriptable capabilities to do this.

00:50:39.100 --> 00:50:40.500
So this is brand new.

00:50:40.500 --> 00:50:43.010
I haven't tested it yet,
but it looks like a promising

00:50:43.010 --> 00:50:46.480
solution that could really complement
a IP failover configuration.

00:50:48.300 --> 00:53:56.800
[Transcript missing]

00:53:57.040 --> 00:54:00.260
So this is a really growing
trend and for large databases,

00:54:00.280 --> 00:54:04.950
large data sets,
this is a very viable way to do backup.

00:54:05.060 --> 00:54:07.140
So just to finish up,
the last thing I wanted to highlight

00:54:07.140 --> 00:54:10.360
were some what I'll consider
essential commands from a command

00:54:10.360 --> 00:54:15.000
line perspective that can complement
a Xserve deployment scenario.

00:54:15.000 --> 00:54:18.220
I get asked all the time, you know,
I'm coming from another

00:54:18.220 --> 00:54:19.930
Unix platform and,
you know,

00:54:20.030 --> 00:54:23.070
if config doesn't always work the
way I expect it to on Mac OS X,

00:54:23.110 --> 00:54:26.000
or how do I do this command on Mac OS X?

00:54:26.000 --> 00:54:28.360
So I wanted to really highlight
some of the commands that are

00:54:28.460 --> 00:54:30.990
unique to Mac OS X but give
you very powerful capabilities.

00:54:31.000 --> 00:54:34.650
First of all, there's two very powerful
system configuration tools,

00:54:34.720 --> 00:54:37.000
the most important being network setup.

00:54:37.000 --> 00:54:41.770
Everything you can do in the network
preference pane in Mac OS X you

00:54:41.820 --> 00:54:46.920
can do through scripting or through
command line in network setup.

00:54:47.020 --> 00:54:50.880
You can turn on and off interfaces,
reorder them, set them to DHCP,

00:54:50.880 --> 00:54:54.920
set them to static IP addresses,
get what current values are set.

00:54:55.030 --> 00:54:56.810
It's a very, very powerful tool.

00:54:57.060 --> 00:54:59.400
So rather than if config,
make sure you look up the

00:54:59.400 --> 00:55:00.960
man page for network setup.

00:55:01.130 --> 00:55:03.390
And actually if you just type
network setup at the command line,

00:55:03.460 --> 00:55:05.000
it will spit back all of its options.

00:55:05.000 --> 00:55:09.470
We have a similar tool called system
setup that gives you access to a lot

00:55:09.470 --> 00:55:13.970
of the preference type information,
system name, date and time,

00:55:14.290 --> 00:55:17.000
network time server, on and on and on.

00:55:17.930 --> 00:55:19.050
System management tools.

00:55:19.060 --> 00:55:23.000
One of the ones I find most valuable
are the Disk Utility command.

00:55:23.060 --> 00:55:26.220
Disk Utility is the command line
equivalent of Disk Utility.app.

00:55:26.290 --> 00:55:28.800
It lets you do things
like create RAID sets,

00:55:28.800 --> 00:55:32.700
destroy RAID sets, rebuild RAID sets,
partition disks, format disks.

00:55:32.700 --> 00:55:36.020
Very, very handy for configuration.

00:55:36.020 --> 00:55:40.760
Also great because you can script
this very powerfully and so completely

00:55:40.760 --> 00:55:43.540
automate a specific setup requirement.

00:55:44.560 --> 00:55:48.330
We have a number of tools for
things like directory services,

00:55:48.330 --> 00:55:51.960
DS import/export, to be able to batch
import users in and out.

00:55:52.140 --> 00:55:53.540
Create home directory.

00:55:53.540 --> 00:56:00.130
Until you log in from the GUI,
your home directory isn't created.

00:56:00.210 --> 00:56:03.450
And so you can force it to be created
using this command line option.

00:56:03.980 --> 00:56:08.980
Obviously, the SNMP configuration tool
and Disk-to-Base Monitor is a

00:56:08.980 --> 00:56:10.880
background daemon that will monitor
disk utilization on the server.

00:56:10.880 --> 00:56:11.180
And if you do a man-management,
you can do that.

00:56:11.180 --> 00:56:17.950
You can see it has some very
powerful capabilities for learning

00:56:17.950 --> 00:56:21.250
you about disk operations.

00:56:21.710 --> 00:56:25.550
Finally, software update,
command line software

00:56:25.700 --> 00:56:28.280
update to be able to,
from SSH,

00:56:28.280 --> 00:56:31.670
update to the latest versions of
software through software update.

00:56:31.680 --> 00:56:34.620
Disk Key Finder is an
interesting little utility.

00:56:34.620 --> 00:56:40.060
It's a utility that will return the
bay number of the drive in your Xserve.

00:56:40.060 --> 00:56:43.560
So if you ever want to configure
from a path name into a bay 1,

00:56:43.560 --> 00:56:47.110
bay 2, bay 3, bay 4,
this little utility will do that,

00:56:47.110 --> 00:56:48.800
very handy for scripts.

00:56:49.460 --> 00:56:52.340
And of course there's a command
line installer to be able to install

00:56:52.340 --> 00:56:53.860
packages of the command line.

00:56:53.860 --> 00:56:56.920
And finally the ASR command
we referenced earlier.

00:56:58.950 --> 00:57:01.460
So just to wrap up this session,
we're running very

00:57:01.530 --> 00:57:02.640
close out of time here.

00:57:02.640 --> 00:57:07.890
The reality is that with IT being
faced with continual challenges,

00:57:07.900 --> 00:57:10.080
being able to deploy
machines and services,

00:57:10.080 --> 00:57:14.780
we really feel that with Xserve and
Mac OS X Server and Xserve RAID,

00:57:14.780 --> 00:57:20.230
we can simplify server deployment,
provide faster services at lower

00:57:20.230 --> 00:57:25.020
costs with much easier system
administration experience.

00:57:26.860 --> 00:57:29.620
Now there's been a lot of
talk about Panther Server over

00:57:29.620 --> 00:57:31.750
the course of this week.

00:57:31.810 --> 00:57:34.380
I really just wanted to highlight a
few quick features that are unique,

00:57:34.460 --> 00:57:38.830
we think will be very handy
for Xserve deployments.

00:57:38.840 --> 00:57:41.910
A number of unique features,
one of the most important ones

00:57:42.330 --> 00:57:44.040
being the automatic setup feature.

00:57:44.040 --> 00:57:47.660
So we can take the setup experience
and automate it even further than

00:57:47.680 --> 00:57:50.800
what we've talked about today.

00:57:52.090 --> 00:57:53.720
Finally, just to wrap up,
I wanted to point you

00:57:53.720 --> 00:57:54.600
to some other sessions.

00:57:54.600 --> 00:57:56.220
Many of these were done
earlier in the week,

00:57:56.310 --> 00:57:58.910
so if you weren't able to attend them,
I encourage you to watch the

00:57:58.910 --> 00:58:00.120
videos when they're available.

00:58:00.120 --> 00:58:04.500
Highlight the Deploying Xserve
RAID session that's tomorrow afternoon.

00:58:04.500 --> 00:58:09.280
Talk more in-depth about the
storage side of our server products.

00:58:11.070 --> 00:58:15.800
I also wanted to highlight some of
the developer and Core OS applications

00:58:15.800 --> 00:58:19.100
that I think are important from
a system administrator side.

00:58:19.150 --> 00:58:21.210
Again, a lot of these,
actually all of these

00:58:21.210 --> 00:58:23.390
happened earlier this week,
but again,

00:58:23.390 --> 00:58:25.800
video opportunities for replay.

00:58:25.800 --> 00:58:28.250
And finally, an invitation.

00:58:28.250 --> 00:58:32.060
Welcome feedback, questions,
and comments.

00:58:32.210 --> 00:58:35.020
And my email address is here, d.brooks.

00:58:35.020 --> 00:58:38.290
Always welcome your feedback
on Xserve and your particular

00:58:38.290 --> 00:58:40.140
deployments and scenarios.

00:58:41.770 --> 00:58:45.060
Finally, from a developer perspective,
Skip Levins is our server

00:58:45.060 --> 00:58:48.520
technology evangelist,
and his email is up there from a

00:58:48.520 --> 00:58:54.900
developer side with specific development
level questions and resources.

00:58:55.670 --> 00:58:57.870
Finally, some key references.

00:58:58.110 --> 00:59:03.530
We have put a tremendous amount of effort
into putting more resources available

00:59:03.530 --> 00:59:05.820
on the Xserve and server web pages.

00:59:05.820 --> 00:59:09.360
We have a lot of resources there and
we'll continue to grow those over time.

00:59:09.500 --> 00:59:13.080
Have apple.com/server as
kind of the one-stop shopping

00:59:13.580 --> 00:59:15.530
point for that location.

00:59:15.840 --> 00:59:19.330
A very, very valuable mailing list that
Apple hosts on our listservs is

00:59:19.510 --> 00:59:21.780
the Mac OS X server mailing list.