WEBVTT

00:00:27.200 --> 00:00:27.680
Good morning.

00:00:27.680 --> 00:00:30.200
I trust you've all had your coffee,
or at least started to.

00:00:30.200 --> 00:00:33.920
We're just getting ready to
come out with the third edition

00:00:33.920 --> 00:00:37.310
of QuickTime for the Web,
and it's still a virtual book,

00:00:37.310 --> 00:00:39.330
but it's almost ready.

00:00:39.350 --> 00:00:43.150
Actually, it's at the printers now,
and so if you do want to get a copy of

00:00:43.190 --> 00:00:47.630
the third edition with QuickTime 6.3,
go over to the Morgan Kaufman booth in

00:00:47.650 --> 00:00:50.020
the main auditorium there in the area.

00:00:50.020 --> 00:00:52.720
They've got a special going 20%
off and free shipping if you want

00:00:52.720 --> 00:00:55.160
to order it at the show here,
so it's kind of a good deal.

00:00:55.160 --> 00:00:59.220
It comes with QuickTime Pro,
so you can do some authoring.

00:00:59.230 --> 00:01:04.210
This session is QuickTime for the Web,
and we're going

00:01:04.900 --> 00:01:05.900
There we go.

00:01:06.090 --> 00:01:06.850
That's me.

00:01:06.890 --> 00:01:10.720
I'm Steven Gulie,
senior technical writer at Apple.

00:01:10.720 --> 00:01:12.580
And we're going to be talking about
using QuickTime over the Internet.

00:01:12.650 --> 00:01:14.890
That's a really broad topic,
so we're going to narrow it down some.

00:01:14.890 --> 00:01:17.990
We're really going to be
talking primarily about putting

00:01:17.990 --> 00:01:19.660
QuickTime on your website.

00:01:19.780 --> 00:01:27.430
So we're going to try to bridge
the gap between painfully technical

00:01:27.430 --> 00:01:28.190
and painfully non-technical,
and just stick with painful.

00:01:28.460 --> 00:01:30.400
So it's mostly going to be about HTML.

00:01:30.400 --> 00:01:32.970
There will be some movie
tricks for movie authors,

00:01:33.110 --> 00:01:36.390
a little bit of XML,
and maybe some JavaScript if we can

00:01:36.390 --> 00:01:38.000
get that far into the presentation.

00:01:38.000 --> 00:01:39.200
We'll see how we're doing.

00:01:39.200 --> 00:01:43.750
We've got mainly HTML authors
here or movie authors?

00:01:44.300 --> 00:01:55.500
[Transcript missing]

00:01:55.650 --> 00:01:59.520
This is going to be about how to
put QuickTime movies on a web page,

00:01:59.520 --> 00:02:01.340
how to launch QuickTime Player from
your web page,

00:02:01.340 --> 00:02:06.520
get those full-screen movies going,
and how to play other media, MP3, MP4,

00:02:06.520 --> 00:02:10.630
anything you want to play using
QuickTime besides a QuickTime movie.

00:02:10.640 --> 00:02:14.620
Some specifics about working with
MPEG-4 and QuickTime together,

00:02:14.620 --> 00:02:17.080
the way they play together
and don't play together,

00:02:17.080 --> 00:02:20.620
and how to put live and pre-recorded
streams on your web page,

00:02:20.620 --> 00:02:24.270
and to decide when to stream and when to
use what we call Fast Start technology,

00:02:24.280 --> 00:02:25.540
and I'll get into that a little bit more.

00:02:25.600 --> 00:02:28.850
Putting media skins and
chapter lists with streams,

00:02:28.850 --> 00:02:31.740
so mixing streaming and
non-streaming content,

00:02:31.740 --> 00:02:33.950
which is kind of tricky,
and a little bit about scripting

00:02:33.950 --> 00:02:35.240
QuickTime using JavaScript.

00:02:38.900 --> 00:02:43.740
So, putting QuickTime on a web page.

00:02:43.740 --> 00:02:45.530
The main thing there is
getting QuickTime to come up

00:02:45.530 --> 00:02:46.880
at all through the browser.

00:02:46.890 --> 00:02:48.220
You're coming through
a browser interface,

00:02:48.220 --> 00:02:51.570
so the question is really how
does the browser choose what

00:02:51.600 --> 00:02:54.420
player to bring up for multimedia,
and how do you particularly

00:02:54.420 --> 00:02:55.880
make it choose QuickTime?

00:02:56.900 --> 00:03:01.780
There are three HTML tags you
can use inside of a web page to

00:03:01.780 --> 00:03:05.120
bring multimedia into a browser.

00:03:05.120 --> 00:03:07.870
The href tag, which is your standard
hypertext link for text,

00:03:07.870 --> 00:03:10.550
the embed tag,
which has been around for a long time,

00:03:10.550 --> 00:03:12.700
and the object tag,
which is a little bit more recent.

00:03:12.700 --> 00:03:15.000
The href is the most obvious thing to do.

00:03:15.000 --> 00:03:18.210
You put it in a text link,
it says click here for the movie,

00:03:18.280 --> 00:03:20.710
and you link to a movie,
and people click it,

00:03:20.710 --> 00:03:22.640
and why shouldn't you do that?

00:03:22.800 --> 00:03:25.980
Well, because it doesn't really
work very reliably.

00:03:26.550 --> 00:03:27.400
The browser

00:03:28.800 --> 00:03:31.140
doesn't really know what
file type it is here.

00:03:31.140 --> 00:03:34.040
You're not able to tell the
browser what the file type is

00:03:34.040 --> 00:03:35.200
or what plug-in you want to use.

00:03:35.280 --> 00:03:37.640
You're just giving it a URL.

00:03:37.700 --> 00:03:39.980
So the browser says, "Well,
what kind of file do I have

00:03:39.980 --> 00:03:42.980
here?" And it asks the server,
typically, if it's on a web server

00:03:42.980 --> 00:03:44.480
or if it's on a CD.

00:03:44.480 --> 00:03:46.440
It just looks at an internal table.

00:03:46.470 --> 00:03:48.360
But in either case,
it's going to look at the file extension,

00:03:48.360 --> 00:03:50.670
either the server is or the browser is.

00:03:50.770 --> 00:03:54.560
If it says "jpg," it goes, "Oh,
it's a jpeg." If it's a PDF, it goes,

00:03:54.580 --> 00:03:59.100
"Oh, it's a PDF." If it's .mov, it goes,
"Oh, it's a QuickTime movie." Hopefully.

00:03:59.100 --> 00:04:02.800
But it's up to the people who run
the server to update the table,

00:04:02.800 --> 00:04:05.040
or the people who write the
browser to keep that table updated.

00:04:05.080 --> 00:04:08.120
And people can fool around with
those tables to some extent.

00:04:08.300 --> 00:04:11.780
So if the extension is wrong,
if you don't name your movie .mov,

00:04:11.780 --> 00:04:15.640
if it's just my movie .nothing,
or if that's not in the table,

00:04:15.640 --> 00:04:18.220
then it typically shows up as text.

00:04:18.330 --> 00:04:19.860
Your movie shows up as a
big screen full of text,

00:04:19.950 --> 00:04:21.680
and I think you've probably
seen that sometimes.

00:04:21.680 --> 00:04:23.700
You click a link and, "Gee,
it's a screen full of text.

00:04:23.700 --> 00:04:27.390
It doesn't seem to be what
they had in mind." And if the

00:04:27.390 --> 00:04:29.370
extension is in the table,
then what happens?

00:04:29.520 --> 00:04:32.760
Well, let's switch over to
the demo machine here.

00:04:32.760 --> 00:04:37.890
A number of things can happen,
but it's not terribly predictable.

00:04:40.640 --> 00:04:46.890
If all is well,
then when you click this link,

00:04:46.890 --> 00:04:46.890
let's see if we can get a
little bit bigger text here.

00:04:46.890 --> 00:04:46.890
Well, it's too big.

00:04:47.260 --> 00:04:54.870
Then what will happen is the movie will
open in a blank window all by itself,

00:04:54.870 --> 00:04:57.300
which is not a terribly attractive
way to display things typically.

00:04:57.300 --> 00:04:59.210
But that's not the only
way it could happen.

00:04:59.210 --> 00:05:02.530
It could happen in a window that's
just specifically sized for that movie,

00:05:02.560 --> 00:05:06.110
or it could open in QuickTime Player,
or it could try to open

00:05:06.240 --> 00:05:07.890
in Windows Media Player.

00:05:07.890 --> 00:05:13.160
All sorts of things can happen,
and it's really up to the browser.

00:05:13.160 --> 00:05:16.180
And that's really not the
choice that you want it to make.

00:05:17.100 --> 00:05:18.940
And even if it does open
in QuickTime Player,

00:05:18.940 --> 00:05:21.010
then what happens?

00:05:21.170 --> 00:05:23.880
It may download it and open
it in QuickTime Player,

00:05:23.880 --> 00:05:26.770
in which case your viewer is sitting
there waiting while the whole

00:05:26.820 --> 00:05:27.970
movie downloads before it starts.

00:05:28.000 --> 00:05:30.820
Or it may download it and then say, well,
okay, well, that's good.

00:05:30.870 --> 00:05:33.240
If you've ever launched,
click to a PDF link,

00:05:33.300 --> 00:05:34.790
you've probably seen this.

00:05:34.800 --> 00:05:38.660
Sometimes it opens in the browser window,
sometimes it opens in Preview,

00:05:38.660 --> 00:05:42.340
sometimes it opens in Acrobat,
and sometimes it just downloads to your

00:05:42.370 --> 00:05:44.840
desktop and you have to double-click it.

00:05:44.850 --> 00:05:47.110
And again,
those are not a lot of choices you

00:05:47.110 --> 00:05:49.000
want to leave hanging in the air.

00:05:49.000 --> 00:05:50.660
You want to be able to have
some control over that.

00:05:51.990 --> 00:05:55.820
So then what happens if QuickTime is not
installed and somebody clicks that link?

00:05:55.920 --> 00:05:59.370
Well, you don't have any way to tell
it what plug-in you want to use.

00:05:59.370 --> 00:06:02.780
So if the user doesn't have QuickTime,
maybe they see a broken puzzle

00:06:02.890 --> 00:06:05.680
piece or they can complain and say,
do you want a plug-in?

00:06:05.680 --> 00:06:07.390
And they say yes,
and then it goes thrashing around

00:06:07.430 --> 00:06:09.870
looking for a plug-in somewhere,
but it doesn't know which one to get.

00:06:09.900 --> 00:06:11.500
Or it gives it the old college try.

00:06:11.600 --> 00:06:14.000
It says, well,
I've heard of QuickTime movies.

00:06:14.140 --> 00:06:15.400
Maybe I can play that.

00:06:15.400 --> 00:06:17.320
And Explorer is really wonderful at that.

00:06:17.400 --> 00:06:18.550
It says, let's go for it.

00:06:18.550 --> 00:06:21.840
I can play QuickTime movies
that were authored before 1992.

00:06:21.900 --> 00:06:27.740
And usually what you see is a broken
Windows media application player icon.

00:06:27.740 --> 00:06:29.610
And that's also now what you want to see.

00:06:29.610 --> 00:06:33.270
So the best way to do it
is to use the embed tag.

00:06:33.270 --> 00:06:39.340
And again, if you're using a tool
to do your HTML for you,

00:06:39.340 --> 00:06:40.280
you're using a...

00:06:45.630 --> 00:06:49.270
Go live or Dreamweaver then it
will typically do this for you.

00:06:49.280 --> 00:06:53.000
You drag a QuickTime movie on to the page
and it will make an embed tag for you.

00:06:53.000 --> 00:06:55.910
And the way the embed tag works
is it lets you specify the

00:06:55.910 --> 00:06:59.020
URL but also the file type so
that it doesn't have to guess.

00:06:59.020 --> 00:07:01.960
And also the URL of the
plug-in if it doesn't have one.

00:07:01.960 --> 00:07:03.660
So, your source code looks like this.

00:07:03.750 --> 00:07:07.620
You've got your source which
is the movie you want to play,

00:07:07.620 --> 00:07:11.150
the type, video QuickTime,
the plug-ins page,

00:07:11.150 --> 00:07:14.040
apple.com/quicktime/download.

00:07:14.040 --> 00:07:16.600
So this and the height
and width on the page.

00:07:16.600 --> 00:07:19.420
The browser gets the file type
from the web server or the HTML.

00:07:19.420 --> 00:07:22.140
If the web server doesn't know,
you've put it in your HTML.

00:07:22.160 --> 00:07:26.160
If the plug-in isn't installed, it says,
"Okay, I know which URL to go to to get

00:07:26.160 --> 00:07:29.590
it." And if the plug-in is installed,
it opens in the current web page.

00:07:29.600 --> 00:07:32.790
I'll show you on the demo machine here.

00:07:37.550 --> 00:07:38.730
So this is a little bit more attractive.

00:07:38.730 --> 00:07:44.660
Your movie's playing
in the middle of a web

00:07:47.800 --> 00:07:49.880
The EMBED tag is almost painfully simple.

00:07:49.880 --> 00:07:52.870
You've got the source,
the height and the width.

00:07:52.920 --> 00:07:55.570
The height is going to be typically
the height of the controller

00:07:55.570 --> 00:07:57.620
of the movie itself plus 16.

00:07:57.620 --> 00:08:00.260
In this case, I've set it to 20 because
it's just an audio movie,

00:08:00.270 --> 00:08:02.760
so the height of the
movie itself is zero.

00:08:02.790 --> 00:08:04.240
This is just a JPEG.

00:08:04.240 --> 00:08:06.270
But in this case,
if this movie had opened

00:08:06.280 --> 00:08:08.700
alone in its own window,
it just would have been

00:08:08.710 --> 00:08:09.940
an audio controller.

00:08:09.940 --> 00:08:12.520
And in this case,
it's where it really belongs,

00:08:12.520 --> 00:08:13.700
so it looks a lot nicer.

00:08:13.700 --> 00:08:16.800
And that's the long and short of it.

00:08:16.800 --> 00:08:19.290
If that's all you do,
you'll have done a lot of the right

00:08:19.290 --> 00:08:21.740
thing rather than just link to it.

00:08:21.740 --> 00:08:23.570
But there's more.

00:08:24.160 --> 00:08:27.820
This doesn't always work
just the way you want to.

00:08:27.820 --> 00:08:31.300
The notion of a plug-in
was created by Netscape.

00:08:31.300 --> 00:08:34.060
When they invented the plug-in,
they had this idea that browsers

00:08:34.060 --> 00:08:36.860
can display a lot of things,
but people invent new media types that

00:08:36.860 --> 00:08:38.640
we can't display or don't display yet.

00:08:38.640 --> 00:08:42.070
People will create a media type
and they'll create a plug-in.

00:08:42.070 --> 00:08:45.660
You'll say, my media type is Flash,
so I'll have a Flash plug-in.

00:08:45.660 --> 00:08:49.550
When the browser sees a Flash media type,
it'll load the Flash plug-in.

00:08:49.550 --> 00:08:50.760
All will be well.

00:08:51.690 --> 00:08:54.430
But then things began to change
so that multiple browsers,

00:08:54.430 --> 00:08:57.040
multiple plug-ins could
handle the same material.

00:08:57.040 --> 00:08:58.690
MP3 and Smile are good examples.

00:08:58.710 --> 00:09:00.830
Reel handles them,
QuickTime handles them,

00:09:00.850 --> 00:09:02.340
Windows Media handles them.

00:09:02.340 --> 00:09:05.340
There's all kinds of audio
plug-ins that will handle an MP3.

00:09:05.340 --> 00:09:09.180
So when the browser sees an MP3 file,
what plug-in should it call?

00:09:09.180 --> 00:09:12.840
And if you look back at the EMBED tag,
you'll see, we could say what plug-in to

00:09:12.840 --> 00:09:15.600
use if there was nobody who
could handle that media type,

00:09:15.600 --> 00:09:17.410
or where to get it, rather.

00:09:17.410 --> 00:09:19.380
But we weren't able to say,
this is the plug-in I want

00:09:19.380 --> 00:09:20.520
to use to play this media.

00:09:20.520 --> 00:09:22.930
All we can say is,
it's a QuickTime movie,

00:09:22.950 --> 00:09:24.020
or it's an MP3 file.

00:09:24.020 --> 00:09:27.630
So who gets it if multiple
plug-ins can handle it?

00:09:27.700 --> 00:09:30.340
Well, with Netscape,
the first one to register, with Explorer,

00:09:30.340 --> 00:09:33.180
the most recent one to register,
and we kind of went through some mime

00:09:33.180 --> 00:09:36.030
type wars where different people's
plug-ins would grab the mime types

00:09:36.040 --> 00:09:40.060
and put in continuous loops where
at every interrupt it would look

00:09:40.060 --> 00:09:42.330
and see if somebody had taken its
mime type and tried to get it back.

00:09:42.360 --> 00:09:45.970
But the answer, if you really want to
use a QuickTime movie,

00:09:45.970 --> 00:09:48.540
is to use a mime type that
only QuickTime registers for.

00:09:48.540 --> 00:09:51.210
And then you won't get
into these conflicts.

00:09:52.230 --> 00:09:55.780
And there are three QuickTime file
types that you can use,

00:09:55.790 --> 00:09:58.260
but the two we most
recommend are the .mov.

00:09:58.300 --> 00:10:00.490
Now,
there were problems in the past where

00:10:00.520 --> 00:10:06.400
sometimes a Windows media player would
claim the video QuickTime mime type,

00:10:06.480 --> 00:10:09.660
but that seems to be
behind us pretty much now,

00:10:09.660 --> 00:10:11.800
and there are some new solutions
I'll talk about a little bit further

00:10:11.800 --> 00:10:13.480
on that prevent that from happening.

00:10:13.610 --> 00:10:15.190
So that's now a good mime type to use.

00:10:15.280 --> 00:10:18.980
The other one that's really
good to use is the QTIF file,

00:10:18.980 --> 00:10:20.740
which is the image QuickTime.

00:10:21.600 --> 00:10:23.540
And nobody else registers for that.

00:10:23.910 --> 00:10:25.540
However, it's fairly rare.

00:10:25.540 --> 00:10:29.410
One of the problems you can get
into is if your server doesn't know

00:10:29.410 --> 00:10:33.020
about QTIF files or PNTG files,
they're not in their table,

00:10:33.040 --> 00:10:35.960
then you have to make sure that that's
put in that table by your network

00:10:36.040 --> 00:10:38.530
administrator or by the webmaster.

00:10:38.540 --> 00:10:40.040
And it's not hard to do.

00:10:40.040 --> 00:10:43.530
It's a one-line command,
but it's easy to get overlooked.

00:10:43.540 --> 00:10:49.540
There's also the .PNTG file,
which is the ImageX Mac Paint type.

00:10:49.540 --> 00:10:51.340
And that is a mime type
that I give to people,

00:10:51.340 --> 00:10:53.980
that I guarantee no one will ever take.

00:10:54.740 --> 00:10:59.780
But if you use anything other than the
.mov file to play a piece of media,

00:10:59.780 --> 00:11:01.540
you need to use the QTSource parameter.

00:11:01.540 --> 00:11:05.640
And the way this works is
you say EMBED source equals,

00:11:05.840 --> 00:11:07.090
say, small QTIF.

00:11:07.090 --> 00:11:08.880
You have a small QuickTime image file.

00:11:08.880 --> 00:11:11.480
The browser says, oh,
he wants to play a QTIF file.

00:11:11.590 --> 00:11:13.630
Who's registered for that MIME type?

00:11:13.690 --> 00:11:16.510
Well, only QuickTime,
so it loads the QuickTime plug-in.

00:11:17.820 --> 00:11:23.480
Then the Qt source plug-in says, this is,
I'm sorry, the Qt source parameter.

00:11:23.480 --> 00:11:27.150
This is some data that you
can just pass to QuickTime.

00:11:27.160 --> 00:11:31.640
Once you've passed the source and the
height and the width to the browser,

00:11:31.640 --> 00:11:35.560
anything else you pass goes directly
to the plug-in that gets loaded.

00:11:35.560 --> 00:11:37.920
So you can pass all kinds of
information in your HTML web

00:11:37.920 --> 00:11:40.560
page to the QuickTime browser to
get it to autoplay your movie,

00:11:40.690 --> 00:11:43.210
play at a different scale,
do all kinds of neat stuff.

00:11:43.400 --> 00:11:46.710
In this case, what you're telling it is,
even though my source

00:11:46.710 --> 00:11:49.860
was this Qt IF file,
that's not what I want you to play.

00:11:49.860 --> 00:11:51.300
I want you to play this movie.

00:11:51.300 --> 00:11:56.540
And you could also use that to play
an MP3 file or an MP4 file or any

00:11:56.540 --> 00:12:02.600
of the 200 media types QuickTime can
play on Windows or Macintosh.

00:12:02.600 --> 00:12:05.130
So if you wanted to use QuickTime to
display a JPEG or a GIF,

00:12:05.130 --> 00:12:06.250
well, that's fine.

00:12:06.260 --> 00:12:08.660
And again, if they don't have it,
you've got your plug-ins page

00:12:08.660 --> 00:12:09.850
and your height and width.

00:12:09.860 --> 00:12:13.370
Let me show you how Qt source
looks on the demo machine.

00:12:13.410 --> 00:12:14.890
- 15.

00:12:30.700 --> 00:12:36.470
And what you see here is that because
we're using source and QTSource,

00:12:36.550 --> 00:12:37.900
because we're talking to
the QuickTime plug-in,

00:12:37.900 --> 00:12:40.680
we can tell it to auto-play the
movie and to set the volume at 25%

00:12:40.740 --> 00:12:42.320
so it's not overwhelmingly loud.

00:12:42.320 --> 00:12:47.720
And this basically says we've
told it QuickTime image file

00:12:47.720 --> 00:12:52.130
is what it's going to get,
but it never displays

00:12:52.130 --> 00:12:55.080
the QuickTime image file,
which is good because in this

00:12:55.080 --> 00:12:55.080
case it's in another directory.

00:12:55.690 --> 00:12:58.940
But the trick to making this work is
the source file must actually exist.

00:12:58.940 --> 00:13:01.580
You really do need to have a
QuickTime image file there.

00:13:01.700 --> 00:13:03.820
To make a QuickTime image file,
you can open anything,

00:13:03.840 --> 00:13:06.340
like a single .gif in
QuickTime Player and save it as a

00:13:06.430 --> 00:13:08.440
QuickTime image file using the exporter.

00:13:08.440 --> 00:13:10.100
So then you've got a little backup.

00:13:10.100 --> 00:13:12.780
But it doesn't really matter what it
looks like because it's never displayed.

00:13:12.780 --> 00:13:18.190
QuickTime is the only plug-in that
will try to display it and it knows

00:13:18.190 --> 00:13:23.700
better because you're telling it
the QuickTime source is the movie,

00:13:23.700 --> 00:13:24.520
not the image file.

00:13:26.130 --> 00:13:32.930
Now, there's a... That's the EMBED tag,
and if this is what you use,

00:13:33.110 --> 00:13:35.460
then you're really
going to go a long way.

00:13:35.480 --> 00:13:37.910
It's going to work in QuickTime every
time QuickTime is installed.

00:13:37.980 --> 00:13:41.760
It'll get the QuickTime plug-in
if it's not installed,

00:13:41.760 --> 00:13:45.510
and it will never be distracted
by another MIME type.

00:13:45.790 --> 00:13:47.010
There's also an OBJECT tag.

00:13:47.080 --> 00:13:50.650
The OBJECT tag is very useful because it
lets you specify a particular plug-in,

00:13:50.650 --> 00:13:54.420
in this case an ActiveX control,
using the ID,

00:13:54.420 --> 00:13:57.980
and it gives you the URL of the
ActiveX control if it's not there.

00:13:57.980 --> 00:14:00.100
So on Windows, this is really terrific.

00:14:00.100 --> 00:14:02.370
You can use the class ID and
code base that are here,

00:14:02.370 --> 00:14:04.680
and you can cut and paste
them from our website.

00:14:04.680 --> 00:14:05.800
It's always the same.

00:14:05.800 --> 00:14:08.390
It's large, but it never changes,
so it's static.

00:14:09.400 --> 00:14:12.770
And the thing that's a little
different is instead of saying

00:14:12.770 --> 00:14:16.010
the source equals my movie,
you have a param whose name is

00:14:16.010 --> 00:14:17.740
source and value is my movie.

00:14:17.740 --> 00:14:20.460
But anything you would pass
to QuickTime in the EMBED tag,

00:14:20.480 --> 00:14:22.060
you can pass in the OBJECT tag.

00:14:22.080 --> 00:14:28.040
It's just the parameter name and value
are passed separately in a param element.

00:14:28.040 --> 00:14:30.540
And this is now getting
a little closer to XML.

00:14:30.540 --> 00:14:32.370
It's a little more strict,
so you have to close

00:14:32.370 --> 00:14:34.760
your OBJECT tag properly,
not just leave it hanging.

00:14:34.760 --> 00:14:37.480
But it's pretty nice.

00:14:37.510 --> 00:14:39.160
The browser gets the file
type from the server.

00:14:39.260 --> 00:14:43.000
HTML, but it doesn't matter
because you have told

00:14:43.800 --> 00:15:10.500
[Transcript missing]

00:15:10.600 --> 00:15:13.770
and David The OBJECT tag,
as written here, will only work in

00:15:13.770 --> 00:15:15.990
Internet Explorer for Windows,
not any other browser,

00:15:15.990 --> 00:15:18.380
not Internet Explorer on
any other operating system.

00:15:20.000 --> 00:15:21.470
However, you can put them together.

00:15:21.470 --> 00:15:25.870
And this gets to be a lot of code,
but there's really not that much to it.

00:15:25.920 --> 00:15:28.330
What you've done is you've taken
the OBJECT tag and stuck the

00:15:28.400 --> 00:15:29.960
EMBED tag right in the middle of it.

00:15:29.960 --> 00:15:33.720
And what this does is it says, okay,
if I'm an Internet Explorer for Windows,

00:15:33.720 --> 00:15:37.180
I will use the class ID and code base,
and I will get the QuickTime plug-in,

00:15:37.280 --> 00:15:37.980
period.

00:15:38.360 --> 00:15:42.150
If I'm not, if I'm on another operating
system or using another browser,

00:15:42.280 --> 00:15:46.210
then I'll use the MIME type in the source
file to determine which plug-in to use,

00:15:46.210 --> 00:15:49.460
and the QT source will tell
QuickTime which movie to play,

00:15:49.460 --> 00:15:54.550
and the plug-ins page will tell me what
to do if QuickTime is not installed and

00:15:54.650 --> 00:15:57.560
I'm not an Internet Explorer for Windows.

00:15:57.580 --> 00:15:59.620
And let me just back
up a little bit here.

00:15:59.620 --> 00:16:02.540
If you look at this EMBED tag,
what if you just use the

00:16:02.540 --> 00:16:04.660
EMBED tag without the OBJECT tag?

00:16:04.660 --> 00:16:07.480
This works fine on
Internet Explorer for Windows.

00:16:07.680 --> 00:16:10.080
This works fine on all
browsers and all platforms.

00:16:10.100 --> 00:16:11.910
You don't have to use the OBJECT tag.

00:16:11.920 --> 00:16:17.270
But if you're on Internet Explorer for
Windows and QuickTime is not installed,

00:16:18.700 --> 00:16:21.310
You have a problem because
Internet Explorer for Windows does not

00:16:21.310 --> 00:16:24.210
honor the plugins page tag anymore.

00:16:24.230 --> 00:16:27.110
Because it's not a plug-in,
it's an ActiveX control.

00:16:27.200 --> 00:16:28.420
At least I think that's the rationale.

00:16:28.420 --> 00:16:31.440
Anyway, if QuickTime is not installed,
it will just say,

00:16:31.440 --> 00:16:32.890
I don't know what to do.

00:16:32.900 --> 00:16:38.520
And so the answer is to put this
at least once in your website.

00:16:38.520 --> 00:16:41.130
If you have a gateway to your website,
once the user gets the

00:16:41.130 --> 00:16:44.160
QuickTime ActiveX control,
the embed tag works fine.

00:16:44.160 --> 00:16:48.770
So at least once they have to hit
this object tag to know that this

00:16:48.770 --> 00:16:50.810
is the ActiveX control we want.

00:16:50.820 --> 00:16:53.660
But I think you'll find that
if you're using the latest

00:16:53.660 --> 00:16:57.110
generation of web generating tools,
they'll surround the embed tag

00:16:57.180 --> 00:16:58.240
with the object tag anyway.

00:16:58.240 --> 00:17:01.150
There's a website, QT Bridge.

00:17:01.160 --> 00:17:04.320
They make a product called Pagiot,
P-A-G-E-O-T.

00:17:04.320 --> 00:17:05.620
It's French, but it's free.

00:17:05.620 --> 00:17:09.600
And you can just drop your
folder full of web pages on it,

00:17:09.610 --> 00:17:12.760
and it'll go through and
turn all the embed tags into

00:17:12.760 --> 00:17:14.330
embed tags plus object tags.

00:17:14.340 --> 00:17:16.650
So there's lots of free
automated help for this.

00:17:16.660 --> 00:17:17.910
You don't have to type it in every time.

00:17:17.920 --> 00:17:20.560
But this is the belt and
suspenders way to go,

00:17:20.560 --> 00:17:24.110
particularly if sometime in the future
Internet Explorer decides to drop

00:17:24.230 --> 00:17:26.040
support for the embed tag and say,
we're only using it for the web pages.

00:17:26.040 --> 00:17:26.670
We're only using the object.

00:17:26.680 --> 00:17:29.210
Then you'll really be glad that
all your tags look like this,

00:17:29.220 --> 00:17:31.690
because they'll continue
to work on every system.

00:17:31.700 --> 00:17:35.960
So don't use href, do use embed,
or better still,

00:17:35.960 --> 00:17:37.960
use object and embed together.

00:17:37.960 --> 00:17:40.800
And are we,
do you have any questions so far?

00:17:40.800 --> 00:17:41.840
Are we all kind of on the same page?

00:17:41.840 --> 00:17:42.060
Yeah.

00:17:51.530 --> 00:17:57.420
Okay, the question is if Explorer takes
the most recent plug-in to

00:17:57.420 --> 00:18:01.330
register for a MIME type and
Netscape takes the first one,

00:18:01.330 --> 00:18:02.790
how does Safari work?

00:18:03.340 --> 00:18:07.780
Safari also takes the most recently
registered for that MIME type.

00:18:07.800 --> 00:18:12.790
It's more like a Windows system now where
there's a registry and the most recent

00:18:12.790 --> 00:18:17.700
person to alter the registry is the
person who is listed in that registry.

00:18:18.100 --> 00:18:24.770
But let me show you here on the demo
machine a little bit how that looks.

00:18:30.500 --> 00:18:36.730
Again, it acts the same.

00:18:36.730 --> 00:18:36.730
I'm going to make this a little
bigger so you can see the text.

00:18:44.600 --> 00:18:50.000
So you've got a class ID,
you've got a code base,

00:18:50.540 --> 00:18:52.620
and David This is the ActiveX I want.

00:18:52.770 --> 00:18:54.540
This is where it is if you don't have it.

00:18:54.540 --> 00:18:56.440
Here's the EMBED tag.

00:18:56.500 --> 00:18:58.000
If you are not
Internet Explorer for Windows,

00:18:58.000 --> 00:19:01.390
which obviously we're not,
we're Safari on the Macintosh.

00:19:01.470 --> 00:19:03.730
I guarantee you that if
you pass the MOV file type,

00:19:03.760 --> 00:19:05.260
Safari will bring up QuickTime.

00:19:05.260 --> 00:19:11.160
I don't think it even asked the question.

00:19:19.460 --> 00:19:21.980
The question is, in the EMBED tag,
don't we have a link

00:19:21.980 --> 00:19:23.190
to the Apple web page?

00:19:23.240 --> 00:19:24.720
And in fact, we do.

00:19:24.720 --> 00:19:26.230
It's the plug-ins page.

00:19:26.230 --> 00:19:30.280
I may have omitted it from the
slide here just because it takes

00:19:30.320 --> 00:19:32.510
up a lot of space on the screen.

00:19:33.520 --> 00:19:38.190
Okay, now once you have QuickTime plugin
talking to your web page,

00:19:38.200 --> 00:19:40.880
you can tell QuickTime to do
a lot of interesting stuff.

00:19:40.880 --> 00:19:41.810
It's very web friendly.

00:19:41.820 --> 00:19:48.080
You can tell it, for example,
to autoplay the movie when it starts

00:19:48.200 --> 00:19:52.240
or to set a background color so that it
matches the background of your web page,

00:19:52.280 --> 00:19:55.430
to have a controller on or no
controller on so that you can

00:19:55.430 --> 00:19:56.700
have your own stuff going on that.

00:19:56.740 --> 00:19:57.980
Lots of stuff.

00:19:58.010 --> 00:20:01.880
Enable JavaScript so that you can have
JavaScript control the QuickTime movie.

00:20:02.980 --> 00:20:05.320
Set hotspots for a virtual reality.

00:20:05.320 --> 00:20:08.920
There's an href tag that lets you say,
okay, if somebody clicks on the movie,

00:20:08.920 --> 00:20:09.700
open this URL.

00:20:09.700 --> 00:20:13.160
And that could be the URL of another
movie or a different web page.

00:20:13.160 --> 00:20:14.000
Lots of things.

00:20:14.000 --> 00:20:17.440
Put it in kiosk mode so
people can't save the movie.

00:20:17.440 --> 00:20:19.840
Tell it to loop the movie continuously.

00:20:19.840 --> 00:20:26.250
If it's a virtual reality pano,
you can set the pan tilt and

00:20:26.250 --> 00:20:29.480
field of view for it to open with,
which is a really nice thing without

00:20:29.480 --> 00:20:30.910
having to go and alter the movie itself.

00:20:30.920 --> 00:20:32.390
QtNext.

00:20:32.560 --> 00:20:35.900
Say when this movie is done,
play this other movie or open this

00:20:36.030 --> 00:20:38.030
other URL when the movie is done.

00:20:38.040 --> 00:20:41.770
Set the scale to play it twice as big,
half as big as it normally is.

00:20:44.060 --> 00:20:45.290
You can target a movie.

00:20:45.290 --> 00:20:48.880
When someone clicks on the movie,
it causes the URL to open in a frame,

00:20:48.880 --> 00:20:52.950
in a browser window, in QuickTime player,
or to replace the QuickTime movie itself,

00:20:52.990 --> 00:20:54.760
and I'll show you that in a moment.

00:20:54.760 --> 00:20:55.380
And you can set the volume.

00:20:55.380 --> 00:21:01.980
There's lots and lots of HTML-friendly
features of QuickTime that

00:21:01.980 --> 00:21:01.980
you can access now and control
directly from your web page.

00:21:02.520 --> 00:21:05.100
So one of the first things
I'm going to show you about

00:21:05.100 --> 00:21:06.840
that is using a poster movie.

00:21:06.840 --> 00:21:09.090
One of the problems with embedding
movies in a web page is they're big.

00:21:09.150 --> 00:21:12.660
So if you've got a 26-megabyte movie
file and somebody goes to your web

00:21:12.660 --> 00:21:14.930
page and it starts downloading,
it's kind of rude,

00:21:14.930 --> 00:21:16.040
especially if they're on a dial-up.

00:21:16.040 --> 00:21:18.430
They're kind of like, "Wait a minute,
I don't know if I signed up for

00:21:18.430 --> 00:21:21.620
this." So you can use a single image
to bring up the QuickTime plug-in

00:21:21.620 --> 00:21:24.300
and then warn the person that,
you know, if you click this,

00:21:24.300 --> 00:21:28.260
something is going to happen,
and then let that be the lead-in to

00:21:28.260 --> 00:21:32.340
play the QuickTime movie or to not.

00:21:32.340 --> 00:21:35.370
And clicking the poster can
act to do a number of things.

00:21:35.370 --> 00:21:38.310
Basically, it tells QuickTime,
"I want to do something."

00:21:38.310 --> 00:21:41.590
And it could load another movie,
it could load a web page,

00:21:41.750 --> 00:21:45.050
it could execute a JavaScript function,
it could fire off a movie

00:21:45.120 --> 00:21:46.460
in QuickTime player.

00:21:46.480 --> 00:21:49.620
And the key to it is just the href tag.

00:21:49.710 --> 00:21:54.600
You have a source, which is,
in this case, let's see, where's--whoa,

00:21:54.600 --> 00:21:57.300
I left out the QT source, or someone did.

00:21:57.300 --> 00:22:00.000
But the QT source would be to your movie.

00:22:00.000 --> 00:22:02.890
And there's an href so that
when you click on the movie,

00:22:02.960 --> 00:22:06.520
it opens that URL in the
target if there's a target.

00:22:06.520 --> 00:22:08.240
Now, let me show you that.

00:22:08.240 --> 00:22:12.150
Over here on the demo machine.

00:22:17.110 --> 00:22:19.000
Here's what we did for
the Audubon Society.

00:22:19.020 --> 00:22:21.200
They didn't want the sound of the Loon,
which is a big audio file,

00:22:21.200 --> 00:22:23.630
to load immediately, so here we have,
it just says,

00:22:23.630 --> 00:22:25.290
click here for the QuickTime audio.

00:22:25.300 --> 00:22:27.750
This is a little poster
sitting under the Loon,

00:22:27.750 --> 00:22:30.290
and if I click it,
it loads a QuickTime movie.

00:22:44.000 --> 00:22:46.520
Okay, the question is,
is there a difference between

00:22:46.580 --> 00:22:48.000
the href and the Qt source?

00:22:48.000 --> 00:22:49.000
Yes.

00:22:49.000 --> 00:22:52.180
Qt source, okay.

00:22:52.190 --> 00:22:54.240
This is really kind of an
interesting little tag.

00:22:54.270 --> 00:22:55.140
Look at this embed tag.

00:22:55.170 --> 00:22:57.720
The source is a small
QuickTime image file,

00:22:57.770 --> 00:23:01.590
and all that does is tell the browser,
I want to use QuickTime.

00:23:01.690 --> 00:23:04.980
The QuickTime source is actually a GIF.

00:23:05.010 --> 00:23:07.420
I can tell QuickTime to display
any kind of file I want.

00:23:07.480 --> 00:23:09.980
I'm going to reload this page.

00:23:10.290 --> 00:23:13.280
And you see this is a GIF,
this little speaker icon in this text,

00:23:13.310 --> 00:23:16.340
this is just a GIF called Speaker GIF.

00:23:16.340 --> 00:23:19.090
It's got a height and a width.

00:23:19.260 --> 00:23:20.950
I'm opening it with QuickTime.

00:23:20.960 --> 00:23:23.280
When you open a GIF in QuickTime,
it opens it as a still image,

00:23:23.380 --> 00:23:24.730
but it's now a QuickTime movie.

00:23:24.740 --> 00:23:27.840
I've turned the controller off because
we don't want to play this movie,

00:23:27.840 --> 00:23:28.790
we just want to click on it.

00:23:28.840 --> 00:23:31.860
I've set autoplay to be
false because what's to play?

00:23:31.860 --> 00:23:34.690
If I click on it,
that will launch the href URL,

00:23:34.770 --> 00:23:37.840
which will be loon1.move target myself.

00:23:37.840 --> 00:23:42.780
That says when I click on the movie,
load this URL, and the target is the

00:23:42.780 --> 00:23:44.640
movie that I clicked on.

00:23:44.650 --> 00:23:46.820
Replace yourself with
this QuickTime movie.

00:23:46.980 --> 00:23:50.760
Right now, we're looking at speaker.gif,
and when I click on it,

00:23:50.760 --> 00:23:53.380
it will load loon1.move
right where it is.

00:23:53.380 --> 00:23:55.860
It will replace itself with the movie.

00:24:03.760 --> 00:24:06.900
Why am I using height
20 instead of height 16?

00:24:06.900 --> 00:24:09.160
16 is the correct height
for the controller.

00:24:09.160 --> 00:24:12.070
The reason is because the GIF was
20 pixels that I was given.

00:24:12.070 --> 00:24:15.340
I did this as a favor to some
people who were doing a website.

00:24:15.340 --> 00:24:19.690
Yes?

00:24:21.920 --> 00:24:22.880
I'm sorry, I can't hear the question.

00:24:22.900 --> 00:24:23.900
Why don't we have a rollover?

00:24:23.900 --> 00:24:24.900
Why don't we use a rollover?

00:24:24.990 --> 00:24:26.900
Sure, we could use a rollover.

00:24:26.900 --> 00:24:30.220
There are lots of ways to do this,
but I'm just showing you a poster movie,

00:24:30.300 --> 00:24:33.170
which is basically a movie that
you click to launch another movie.

00:24:33.170 --> 00:24:35.900
This is just one more technique
in your arsenal of things to do.

00:24:35.900 --> 00:24:37.960
Yeah, but it should be included
in the poster movie,

00:24:37.960 --> 00:24:40.900
in the poster frame.

00:24:41.050 --> 00:24:45.000
Why don't you include
rollover at the poster frame?

00:24:45.050 --> 00:24:48.370
Because you have to
right-click on that frame.

00:24:48.380 --> 00:24:49.890
Oh, I see.

00:24:49.890 --> 00:24:52.680
Why don't I use a rollover instead
of right-click on that frame?

00:24:52.730 --> 00:24:53.520
Sure, you could do that.

00:24:53.560 --> 00:24:54.730
That would be a fine thing to do.

00:24:54.730 --> 00:24:57.830
There's no particular
reason why I didn't do that.

00:24:58.220 --> 00:25:01.420
Although sometimes you want
people to click on the image,

00:25:01.620 --> 00:25:05.010
but yeah,
a JavaScript rollover works fine there.

00:25:06.210 --> 00:25:06.830
Okay.

00:25:07.170 --> 00:25:10.300
Now, another thing you can use a poster
movie for is to launch QuickTime Player,

00:25:10.300 --> 00:25:12.410
and one of the reasons you
might want to do that is so you

00:25:12.410 --> 00:25:13.790
can get a full-screen movie.

00:25:13.800 --> 00:25:16.460
Now,
to launch a movie in QuickTime Player is

00:25:16.460 --> 00:25:20.270
pretty straightforward,
but not terribly impressive.

00:25:20.270 --> 00:25:22.250
You just set target equals
QuickTime Player instead

00:25:22.350 --> 00:25:23.400
of target equals myself.

00:25:23.400 --> 00:25:26.510
But to get a full-screen movie,
you need to have either a movie

00:25:26.520 --> 00:25:29.160
that's in full-screen mode,
or you have to have some

00:25:29.240 --> 00:25:31.550
way to tell QuickTime,
I want to play this movie

00:25:31.550 --> 00:25:33.370
in full-screen mode,
even though it's not

00:25:33.690 --> 00:25:35.080
necessarily a full-screen movie.

00:25:36.120 --> 00:25:42.130
But the short answer is to use
target equals QuickTime Player,

00:25:42.130 --> 00:25:42.130
and...

00:25:42.180 --> 00:25:46.840
There are several ways to make a
movie into a full-screen movie.

00:25:46.840 --> 00:25:48.500
There's an Apple script.

00:25:48.500 --> 00:25:51.100
You can use an Apple script
to turn on full-screen movie

00:25:51.100 --> 00:25:53.300
mode for any movie and say,
when this movie plays,

00:25:53.300 --> 00:25:55.620
it is to play in full-screen
mode if it's in QuickTime player.

00:25:55.620 --> 00:25:59.240
There's a little free tool from
Apple called Plugin Helper that will

00:25:59.240 --> 00:26:01.010
set that characteristic for you.

00:26:01.010 --> 00:26:05.200
You can use Cleaner or Live Stage to
set that characteristic.

00:26:05.230 --> 00:26:08.040
You can put a wired
sprite inside the movie.

00:26:08.040 --> 00:26:10.280
Just drop it in there that's,
I'm a full-screen sprite,

00:26:10.280 --> 00:26:13.020
and when I get loaded,
I go to full-screen mode.

00:26:13.020 --> 00:26:15.510
Or you can use an XML text movie,
and I'll show you about that in a second.

00:26:15.510 --> 00:26:25.550
Let me bring up a couple movies and
show you a little bit more about that.

00:26:31.750 --> 00:26:33.360
Here's a web page, and it's got a poster.

00:26:33.360 --> 00:26:35.340
When I click the poster,
it's going to launch.

00:26:35.380 --> 00:26:37.420
Click the poster above to launch a
full-screen movie in QuickTime Player.

00:26:37.420 --> 00:26:38.180
Why not use a rollover?

00:26:38.180 --> 00:26:40.440
Well, could have done that too.

00:26:40.440 --> 00:26:44.340
But the key is that you
get a different view.

00:26:44.340 --> 00:26:48.300
Gee, that's a big way.

00:26:58.900 --> 00:27:01.960
So here we set the movie to play a
full-screen movie and quit when done.

00:27:02.040 --> 00:27:03.610
This is a really nice experience.

00:27:03.610 --> 00:27:06.210
When somebody comes to your web
page and they click on something,

00:27:06.220 --> 00:27:08.650
it goes full-screen, the movie plays,
then when it's done,

00:27:08.650 --> 00:27:11.000
they're right back at the web
page like it was never there.

00:27:11.080 --> 00:27:13.730
And it gives the impression that
you've got a full-screen plug-in.

00:27:13.730 --> 00:27:14.720
There's no such thing.

00:27:14.730 --> 00:27:16.640
The browser gives a little
space to the plug-in,

00:27:16.640 --> 00:27:18.570
but the plug-in now calls
the QuickTime player,

00:27:18.570 --> 00:27:20.890
and QuickTime player can go
full-screen and then drop back

00:27:20.920 --> 00:27:22.260
into the browser when it's done.

00:27:22.260 --> 00:27:24.460
So this is a really nice technique.

00:27:28.800 --> 00:27:30.090
here.

00:27:32.600 --> 00:27:35.090
may show it to you in a larger way.

00:27:35.140 --> 00:27:35.920
Is this readable at all?

00:27:36.020 --> 00:27:38.100
Can you see that text?

00:27:39.170 --> 00:27:40.100
Maybe not.

00:27:40.100 --> 00:27:42.540
Okay, well, how big can we go?

00:27:42.960 --> 00:27:44.520
How's that?

00:27:44.530 --> 00:27:46.580
Getting somewhere?

00:27:47.150 --> 00:27:49.320
This is a really simple text file.

00:27:49.370 --> 00:27:52.380
This is an XML text file.

00:27:52.380 --> 00:27:54.060
And it just says, "I'm an XML text file.

00:27:54.280 --> 00:27:58.740
I'm a QuickTime media link." These first
two lines are always the same,

00:27:58.740 --> 00:27:59.720
so you can cut and paste them.

00:27:59.720 --> 00:28:01.140
You don't have to remember that.

00:28:01.240 --> 00:28:02.430
Just type it in.

00:28:02.480 --> 00:28:03.970
Just cut and paste it.

00:28:04.030 --> 00:28:07.170
All that really matters is
your very last line here,

00:28:07.170 --> 00:28:10.300
"embed source equals." And here
you just put in all your embed

00:28:10.340 --> 00:28:11.480
tags you would want to do.

00:28:11.530 --> 00:28:14.220
So you can set full-screen mode,
autoplay, quit when done.

00:28:14.220 --> 00:28:15.770
It's really handy.

00:28:16.010 --> 00:28:17.790
This is a text file.

00:28:17.910 --> 00:28:23.060
And you can see it's a text file
because I just opened it up with

00:28:28.600 --> 00:28:35.400
[Transcript missing]

00:28:37.700 --> 00:28:40.500
It'll warn me, "Hey,
you can't just change file

00:28:40.500 --> 00:28:44.190
extensions like that." But yes,
you can.

00:28:45.330 --> 00:28:51.550
Well, so, XML, the miracle of XML.

00:28:51.560 --> 00:28:54.490
You take an XML file,
you give it an MOV file extension,

00:28:54.510 --> 00:28:57.020
QuickTime will play it as a movie,
and this is great.

00:28:57.020 --> 00:28:58.890
Now I can embed that
movie in my web page,

00:28:58.890 --> 00:29:00.540
or I can call it from anything.

00:29:00.540 --> 00:29:03.840
It's just really terrific to have
this capability at your fingertips.

00:29:03.840 --> 00:29:11.480
So that's kind of a neat technique
I wanted you to know about.

00:29:11.480 --> 00:29:11.600
Okay, we've seen posters.

00:29:13.210 --> 00:29:14.340
No, no.

00:29:14.340 --> 00:29:15.580
The question is, is that only for Safari?

00:29:15.580 --> 00:29:19.150
That works in any web browser
that's out there today.

00:29:23.160 --> 00:29:25.160
Okay,
we're getting some questions about this.

00:29:25.230 --> 00:29:26.800
Let me go into this a
little bit more then.

00:29:26.800 --> 00:29:29.550
I think I have some other
movies that illustrate this

00:29:29.550 --> 00:29:31.400
maybe just a little bit better.

00:29:31.400 --> 00:29:34.060
Obviously,
I've kind of dropped a bombshell here.

00:29:34.060 --> 00:29:36.340
Everybody's going, wait a minute,
what are you doing?

00:29:36.340 --> 00:29:39.360
Let's look at these.

00:29:55.500 --> 00:30:12.780
The XML is not being interpreted
by the browser at all.

00:30:12.860 --> 00:30:13.540
It's by QuickTime.

00:30:13.540 --> 00:30:15.160
We've got the browser to call QuickTime.

00:30:15.160 --> 00:30:19.040
This, by the way,
is taken from the website for the book.

00:30:19.040 --> 00:30:25.890
Let's look at Special Delivery.

00:30:25.890 --> 00:30:25.890
Okay.

00:30:36.240 --> 00:30:42.720
So first we're just opening
a movie in QuickTime Player.

00:30:42.960 --> 00:30:48.610
Then we're going a little step
further and opening it in full screen.

00:30:50.240 --> 00:30:51.200
Okay.

00:30:51.460 --> 00:30:55.890
Now, we didn't have to change
the file type from a

00:30:59.130 --> 00:31:01.310
Text to MOV.

00:31:01.310 --> 00:31:03.610
We could have changed it to .qtl.

00:31:03.610 --> 00:31:07.640
.qtl is defined as
Application QuickTime Player,

00:31:07.640 --> 00:31:10.960
and when you open a QTL file,
the browser should automatically

00:31:10.960 --> 00:31:12.540
launch QuickTime Player.

00:31:12.540 --> 00:31:13.720
That's how real does it.

00:31:13.720 --> 00:31:16.360
They use .rm or .ram files,
and the browser just

00:31:16.370 --> 00:31:17.900
knows to use their player.

00:31:17.900 --> 00:31:21.610
The problem is that, again,
it isn't always registered for that.

00:31:21.610 --> 00:31:23.280
Sometimes it downloads and plays.

00:31:23.290 --> 00:31:25.500
It leaves what we call
a mouse dropping behind.

00:31:25.500 --> 00:31:28.030
It leaves the QTL file
behind on the viewer's disk.

00:31:29.100 --> 00:31:32.450
We tend to use it as a MOV file,
so it opens in the plug-in and then let

00:31:32.450 --> 00:31:35.800
the plug-in launch the player rather than
ask the browser to launch the player.

00:31:35.800 --> 00:31:39.580
If you use any file
extension besides MOV or QTL,

00:31:39.580 --> 00:31:43.960
the operating system is going
to treat that as telling you

00:31:44.230 --> 00:31:46.460
what kind of file type it is.

00:31:46.460 --> 00:31:49.560
If you call it .jpg,
it's going to try to open it as a JPEG.

00:31:49.580 --> 00:31:52.220
If you call it .txt,
it's going to display it.

00:31:52.290 --> 00:31:58.200
But if you call it a .mov file,
or you use the QT source parameter

00:31:58.200 --> 00:31:59.080
to open it with QuickTime,
it's going to try to open it as a .jpg.

00:31:59.100 --> 00:32:00.100
If you call it .qtl,
it's going to try to open it as a .qtl.

00:32:00.100 --> 00:32:26.080
If you call it .qtl,
it's going to try to open it as a .qtl.

00:32:29.100 --> 00:32:35.290
That means you have a poster movie
that calls an XML file that calls

00:32:37.920 --> 00:32:41.080
Yes, okay, here's the question.

00:32:41.080 --> 00:32:46.500
We have a poster movie
that calls an XML file that

00:32:46.500 --> 00:32:48.810
specifies yet another movie,
and that's right.

00:32:48.840 --> 00:32:52.100
So we're getting kind of several
levels of indirection here,

00:32:52.300 --> 00:32:53.770
but that's how it works.

00:32:53.770 --> 00:32:57.610
But obviously the key is that it
allows you to... The nice thing

00:32:57.660 --> 00:33:00.480
about doing it this way is that
XML file can be generated by a

00:33:00.510 --> 00:33:02.360
Perl script or a CGI really easily.

00:33:02.360 --> 00:33:05.600
You don't have to actually
generate movies and specify them.

00:33:06.090 --> 00:33:08.970
You can just say play the movie of
the day dot move and have a text

00:33:08.970 --> 00:33:12.190
file that spits out the right movie,
which could be specific to the browser,

00:33:12.200 --> 00:33:13.780
to the user, to all kinds of things.

00:33:13.780 --> 00:33:16.110
So it's really handy to have
that kind of indirection,

00:33:16.110 --> 00:33:18.220
although it is a little
confusing sometimes.

00:33:18.230 --> 00:33:20.100
Okay.

00:33:25.470 --> 00:33:27.390
Which versions of QuickTime will
recognize the XML?

00:33:27.390 --> 00:33:32.080
QuickTime 4.1 and later, I believe.

00:33:32.080 --> 00:33:34.710
What we found is that since we
have the auto-update in place,

00:33:34.710 --> 00:33:37.720
we're not finding old versions
of QuickTime very often anymore.

00:33:37.720 --> 00:33:40.340
QuickTime 4 and later
automatically update to 5,

00:33:40.340 --> 00:33:42.200
automatically updates to 6.

00:33:42.200 --> 00:33:43.470
Some people choose not
to do the downloads,

00:33:43.480 --> 00:33:45.940
so you might hit QuickTime 5,
but the likelihood that you'll

00:33:45.950 --> 00:33:49.580
hit something that can't interpret
that XML file is very unlikely.

00:33:49.580 --> 00:33:54.080
If you have a poster movie,
a couple of things.

00:33:54.670 --> 00:33:57.200
Make the poster the size of the
movie that you really want to play,

00:33:57.240 --> 00:33:59.790
plus 16,
so there's room for a controller.

00:33:59.980 --> 00:34:03.630
Set the controller false for the poster,
because otherwise people will try to play

00:34:03.630 --> 00:34:05.590
the poster instead of clicking on it.

00:34:06.200 --> 00:34:09.170
Set the href parameter equal to
the URL of the movie you want to

00:34:09.170 --> 00:34:11.640
play when somebody clicks on it.

00:34:11.700 --> 00:34:13.800
If you want the poster
to morph into a movie,

00:34:13.800 --> 00:34:15.500
then set target equals myself.

00:34:15.520 --> 00:34:25.490
Let me show you just one more thing
about that back in the demo machine.

00:34:25.490 --> 00:34:25.490
Here we go.

00:34:25.490 --> 00:34:25.490
Multi-movie.

00:34:25.490 --> 00:34:25.490
Here we go.

00:34:26.960 --> 00:34:29.950
Here we've got a web page
with three movies on it,

00:34:29.950 --> 00:34:33.190
but we really don't want to download
all three movies simultaneously.

00:34:33.300 --> 00:34:35.690
So what we do is we say, "Okay,

00:34:44.310 --> 00:34:47.200
Flowers and chirping birds,
sunshine and bunny rabbits all as well.

00:34:47.200 --> 00:34:49.200
Okay.

00:34:49.200 --> 00:34:54.030
So what we're seeing here
is posters that link,

00:34:54.040 --> 00:34:55.700
that turn into movies
when you click them.

00:34:55.700 --> 00:34:59.100
And I'll just show you something
that I won't really explain,

00:34:59.140 --> 00:35:01.670
but it is in the book,
which is that you can have

00:35:01.670 --> 00:35:04.420
a poster turn into a movie.

00:35:11.200 --> 00:35:27.300
[Transcript missing]

00:35:27.500 --> 00:35:29.370
and the poster movie doesn't
have a controller because you

00:35:29.370 --> 00:35:31.010
don't want people to play it.

00:35:31.040 --> 00:35:33.530
You want people to click on it.

00:35:38.030 --> 00:35:41.040
So that's setting target
equals QuickTime player.

00:35:41.120 --> 00:35:43.590
For full-screen movies,
you can either make the movie itself

00:35:43.590 --> 00:35:46.660
a full-screen movie that just,
when it plays, it plays in full-screen,

00:35:46.660 --> 00:35:49.240
or you can use XML to set
full-screen mode to play any

00:35:49.240 --> 00:35:51.010
movie you want in full-screen.

00:35:51.010 --> 00:35:54.190
And any more questions
about what we just covered?

00:35:56.170 --> 00:35:58.370
OK, we're all on the same page,
or else people are beginning to

00:35:58.460 --> 00:36:00.440
glaze over one way or the other.

00:36:00.440 --> 00:36:03.060
OK, let's look at playing some things
besides QuickTime Movies in

00:36:03.120 --> 00:36:05.400
QuickTime Player or QuickTime Plugin.

00:36:05.400 --> 00:36:06.640
And why would you want to do that?

00:36:06.640 --> 00:36:10.640
MP3 audio, MP4, Flash, Smile,
RTSP streams.

00:36:10.730 --> 00:36:13.960
Some of these things, like Smile or RTSP,
might be QuickTime Movies.

00:36:13.960 --> 00:36:16.180
And so you want to
direct them to QuickTime,

00:36:16.420 --> 00:36:18.800
specifically because it is QuickTime.

00:36:18.820 --> 00:36:21.440
But why might you want to
play an MP3 file in QuickTime?

00:36:21.440 --> 00:36:23.880
Well, because if you just load
up an MP3 file and say,

00:36:23.880 --> 00:36:27.670
embed this and play it in whatever,
you don't have any idea

00:36:27.680 --> 00:36:28.980
what's going to play it.

00:36:28.980 --> 00:36:30.100
You don't know what
it's going to look like.

00:36:30.100 --> 00:36:30.940
You can't really control it.

00:36:30.940 --> 00:36:33.740
You can't set autoplay or set the volume.

00:36:33.920 --> 00:36:35.440
You don't know if it's going
to open an application,

00:36:35.440 --> 00:36:37.370
if it's going to download.

00:36:37.460 --> 00:36:38.680
QuickTime is pretty nice at this.

00:36:38.680 --> 00:36:42.240
It actually will play it for you,
and it plays it while it's downloading.

00:36:42.270 --> 00:36:45.510
And you can set it to auto start and
set the volume level and set it to

00:36:45.610 --> 00:36:47.370
loop or set it to-- put an href on it.

00:36:47.410 --> 00:36:50.240
So if somebody clicks on
your-- put a poster with it,

00:36:50.280 --> 00:36:53.250
so if somebody clicks on the
poster while the song is playing,

00:36:53.250 --> 00:36:55.860
they're taken to your website with
an opportunity to buy the album,

00:36:55.860 --> 00:36:57.530
that sort of thing.

00:36:58.910 --> 00:37:02.260
So you can use QTSource to specify
anything of the over 200 media types

00:37:02.260 --> 00:37:05.400
that QuickTime can play and say,
no, I want to play this in QuickTime.

00:37:05.400 --> 00:37:08.460
And as we saw in this previous demo,
you can display a GIF,

00:37:08.460 --> 00:37:12.710
but when somebody clicks on the GIF,
take a QuickTime action based on that.

00:37:12.750 --> 00:37:15.290
So it's a really handy way
to repurpose other media.

00:37:15.290 --> 00:37:17.600
And again, it's fairly straightforward.

00:37:17.600 --> 00:37:23.000
The source is some piece of media
that only QuickTime registers for,

00:37:23.000 --> 00:37:27.160
and the QTSource is
anything QuickTime can play.

00:37:28.800 --> 00:37:35.080
And I'll just go ahead and show you that.

00:37:53.180 --> 00:37:55.890
Again here,
this is not a QuickTime movie,

00:37:55.890 --> 00:37:58.950
it's an MP3,
and we told it's QuickTime image

00:37:58.950 --> 00:38:02.700
file with the QT source as an MP3,
so it's playing MP3 with QuickTime,

00:38:02.700 --> 00:38:06.050
even though QuickTime is not necessarily
the registered plug-in for MP3,

00:38:06.050 --> 00:38:08.530
but we can make it play anything
because we got the browser

00:38:08.530 --> 00:38:10.010
to let us talk to QuickTime.

00:38:12.020 --> 00:38:12.300
Okay.

00:38:12.300 --> 00:38:14.440
So that brings us up to MPEG-4,
which you would use

00:38:14.440 --> 00:38:15.400
similar techniques for.

00:38:15.400 --> 00:38:19.590
MPEG-4 and QuickTime are close cousins.

00:38:19.660 --> 00:38:24.140
The MPEG-4 file specification is based on
the QuickTime movie file specification,

00:38:24.150 --> 00:38:25.750
and that means they're really,
really similar.

00:38:25.760 --> 00:38:27.890
But they're not actually the same.

00:38:27.900 --> 00:38:31.910
So if it's an MP4 file,
QuickTime imports it and makes minor

00:38:31.910 --> 00:38:33.160
changes in it before it plays it.

00:38:33.200 --> 00:38:35.300
If it's a movie file,
an MPEG-4 player is not

00:38:35.430 --> 00:38:36.790
going to be able to play it.

00:38:36.800 --> 00:38:38.710
And there's a lot of
confusion around that,

00:38:38.790 --> 00:38:43.270
because people think of MPEG-4 as being
a video codec or the AAC audio codec,

00:38:43.280 --> 00:38:45.670
and so they go, well,
if it's an AAC audio,

00:38:45.670 --> 00:38:47.400
I can call it .mov or MP4.

00:38:47.400 --> 00:38:48.500
Not true.

00:38:48.500 --> 00:38:51.240
The files are similar
but slightly different.

00:38:51.240 --> 00:38:55.500
So there are two important ways that
you can use MPEG-4 in QuickTime.

00:38:55.500 --> 00:38:59.210
You can use MPEG-4 video or
audio inside a QuickTime movie.

00:38:59.220 --> 00:39:00.700
So we've got a QuickTime movie.

00:39:00.700 --> 00:39:03.410
It can show video compressed
any one of a thousand ways.

00:39:03.440 --> 00:39:05.990
Well, MPEG-4 is one of those
kinds of compression.

00:39:06.000 --> 00:39:07.700
It can do MP3 audio.

00:39:07.700 --> 00:39:09.740
It can do, you know,
all sorts of compression

00:39:09.740 --> 00:39:12.300
techniques for audio.

00:39:12.300 --> 00:39:15.540
But AAC audio is one of them.

00:39:15.620 --> 00:39:19.100
So if you'd use this,
if you use QuickTime MPEG-4 video

00:39:19.120 --> 00:39:22.400
or audio in QuickTime movies,
you have the advantage of being

00:39:22.400 --> 00:39:25.180
able to use the MOV file format,
so you can mix and match with

00:39:25.230 --> 00:39:26.520
other kinds of QuickTime media.

00:39:26.520 --> 00:39:30.460
If you want AAC audio over
your QuickTime virtual reality,

00:39:30.460 --> 00:39:33.900
okay,
use MPEG-4 audio in a QuickTime movie.

00:39:33.900 --> 00:39:37.420
The other way to use MPEG-4 in
QuickTime is you can create,

00:39:37.450 --> 00:39:38.700
play, and stream native MPEGs.

00:39:38.780 --> 00:39:39.780
You can create MPEG-4 files.

00:39:39.780 --> 00:39:42.710
And this is really a cool way to go.

00:39:42.720 --> 00:39:45.680
It's interoperable
with other ISO streams,

00:39:45.680 --> 00:39:46.550
files, and players.

00:39:46.560 --> 00:39:51.170
So you can use QuickTime to play
MPEG-4 from other people's streamers

00:39:51.210 --> 00:39:53.340
or created by other applications.

00:39:53.340 --> 00:39:57.230
Or you can create MPEG-4 files in
QuickTime and then play them in

00:39:57.370 --> 00:40:00.280
real or Windows Media Player with
the correct plug-ins.

00:40:00.360 --> 00:40:04.140
You can hint MPEG-4 files
for streaming in QuickTime.

00:40:04.140 --> 00:40:05.100
You can author them.

00:40:05.120 --> 00:40:07.600
And you can use the MP4 file format.

00:40:07.840 --> 00:40:10.920
So it's really strong support
for MPEG-4 in QuickTime,

00:40:10.920 --> 00:40:13.520
more than any other file
type we've ever seen.

00:40:13.520 --> 00:40:17.000
And again, you just use the QT source if
you want to play an MPEG-4 file,

00:40:17.000 --> 00:40:18.600
just like you would an MP3.

00:40:18.600 --> 00:40:18.890
Yeah?

00:40:31.030 --> 00:40:34.460
The question is, why are we using Qt
source for the MP4 file?

00:40:34.530 --> 00:40:37.350
Well,
because anybody can register for MP4.

00:40:37.370 --> 00:40:40.060
You could have 100 different players.

00:40:40.060 --> 00:40:41.530
So you might not want to.

00:40:41.530 --> 00:40:44.080
You might say, hey, source equals MP4.

00:40:44.080 --> 00:40:46.830
Anybody who can play on MP4,
please play it.

00:40:46.830 --> 00:40:48.150
I don't need QuickTime.

00:40:48.310 --> 00:40:50.470
I'm not worried about that.

00:40:50.480 --> 00:40:52.900
And if you want to reach the
broadest possible audience,

00:40:52.900 --> 00:40:54.060
that might be a way to go.

00:40:54.100 --> 00:40:57.030
But if you want to be sure that the MP4
is going to play in QuickTime because

00:40:57.030 --> 00:41:00.340
you want more control over the web page
and that's the plug-in you want to use,

00:41:00.370 --> 00:41:04.130
then say source equals
something QuickTime will play,

00:41:04.130 --> 00:41:05.780
Qt source equals the MP4.

00:41:05.780 --> 00:41:10.790
So this is a technique to play MP4 files
in QuickTime or to force QuickTime player

00:41:10.790 --> 00:41:13.050
to be used to play the MP4 file.

00:41:13.060 --> 00:41:16.170
If you want to leave it up for grabs,
that's also an entirely viable option.

00:41:25.910 --> 00:41:26.900
Yes.

00:41:26.900 --> 00:41:30.890
Male #1: Okay.

00:41:31.050 --> 00:41:34.580
Here we're getting--the question is
showing me that there's some confusion.

00:41:34.580 --> 00:41:38.440
An MOV file is not an MP4 file.

00:41:38.440 --> 00:41:40.830
You can't just change the file extension.

00:41:40.830 --> 00:41:44.720
If you open a movie in QuickTime and
it has MP4 audio and video,

00:41:44.720 --> 00:41:50.060
you can either save it as a
QuickTime movie or you can export to MP4.

00:41:50.090 --> 00:41:52.690
And the audio and video will not
be recompressed but it will be

00:41:52.690 --> 00:41:55.190
saved in the MP4 file format.

00:41:55.240 --> 00:41:58.620
If you just change MP4 to
move and back and forth,

00:41:58.630 --> 00:42:02.610
bad things will happen because they're
such close cousins that if you try

00:42:02.610 --> 00:42:05.860
to open an MP4 file in QuickTime and
you tell it it's an MOV file,

00:42:05.860 --> 00:42:09.230
it will do a superficial look and go,
"Yeah, it looks like an MOV file to me.

00:42:09.290 --> 00:42:13.380
This is a movie," and it will try to play
it and then it's not going to work right.

00:42:13.640 --> 00:42:18.250
And if you name a QuickTime movie MP4,
it might open in another MP4 player

00:42:18.250 --> 00:42:21.510
or even QuickTime and it will go,
"Yeah, this looks like an MP4

00:42:21.780 --> 00:42:25.100
but it isn't." And again,
things will go wrong.

00:42:25.100 --> 00:42:27.460
So it's very important not to
just swap the file extension but

00:42:27.460 --> 00:42:28.570
to actually import and export.

00:42:28.570 --> 00:42:32.580
I see a question in the back.

00:42:44.400 --> 00:42:45.400
I'm not sure I heard the question.

00:42:45.400 --> 00:42:46.400
Does it override the browser mime types?

00:42:46.460 --> 00:42:53.190
Oh, in the EMBED tag,
you can set the mime type.

00:42:53.780 --> 00:42:56.160
And I think the question is,
does that override the

00:42:56.160 --> 00:42:57.590
mime type of the file?

00:42:57.590 --> 00:42:58.580
Not reliably.

00:42:58.640 --> 00:43:01.890
The server will tell the
browser what the mime type is,

00:43:01.910 --> 00:43:05.470
the extension will be mapped to a table,
and you have the HTML.

00:43:05.520 --> 00:43:06.990
And all three could be
saying different things.

00:43:06.990 --> 00:43:08.100
So what should the browser believe?

00:43:08.110 --> 00:43:10.440
What's in its own table,
what the server is telling it,

00:43:10.460 --> 00:43:11.740
or what you're telling it?

00:43:11.800 --> 00:43:13.810
It's really up to the
author of the browser,

00:43:13.810 --> 00:43:16.660
and they have different
opinions about that.

00:43:16.660 --> 00:43:22.090
So again, using source,
you can only use the QuickTime file type.

00:43:22.530 --> 00:43:26.640
You can't play MP4s in
QuickTime using the source.

00:43:26.640 --> 00:43:28.330
If you use the source
command to point to an MP4,

00:43:28.330 --> 00:43:31.000
it will go to whatever
player is selected for MP4s.

00:43:31.000 --> 00:43:32.200
It might be QuickTime, it might not.

00:43:32.200 --> 00:43:35.280
If you use QTSource,
it will use QuickTime to

00:43:35.280 --> 00:43:36.670
play MP4s or anything else.

00:43:36.670 --> 00:43:41.650
MPEG-4 audio and video can be in a
movie or it can be in an MP4 file.

00:43:41.650 --> 00:43:43.570
You can export movies to MP4.

00:43:43.570 --> 00:43:48.830
To force an MP4 file to use QuickTime,
use Source and QTSource.

00:43:48.840 --> 00:43:51.350
Just use Source, it's up for grabs.

00:43:51.430 --> 00:43:52.480
But they're not the same.

00:43:52.510 --> 00:43:53.500
the same.

00:43:53.500 --> 00:43:55.390
More questions?

00:44:04.190 --> 00:44:04.990
Okay, yeah.

00:44:04.990 --> 00:44:09.410
The question is, if you use QTSource,
is it going to play in QuickTime even

00:44:09.410 --> 00:44:11.320
if something else is selected for MP4?

00:44:11.320 --> 00:44:14.610
Yes, because the source is
what the browser looks at.

00:44:14.750 --> 00:44:17.680
The browser doesn't know
anything about QTSource.

00:44:17.680 --> 00:44:20.190
It looks at that parameter and says,
this is jibber-jabber to me.

00:44:20.190 --> 00:44:21.220
I know the source.

00:44:21.310 --> 00:44:24.170
The source is a QuickTime movie
or a QuickTime image file,

00:44:24.250 --> 00:44:25.780
so I'm calling QuickTime.

00:44:25.780 --> 00:44:29.050
Then QuickTime says, ah,
I know what a QuickTime source is.

00:44:29.050 --> 00:44:30.640
I'll play this MP4 file.

00:44:30.640 --> 00:44:33.620
So the browser has no idea that
it's dealing with an MP4 file.

00:44:34.100 --> 00:44:36.120
It just knows about the source file.

00:44:36.120 --> 00:44:37.780
By the way,
make the source file small because

00:44:37.780 --> 00:44:39.530
the browser is going to download it.

00:44:39.530 --> 00:44:40.840
So just use a little image.

00:44:40.840 --> 00:44:43.420
QuickTime image file is good for
that or a small QuickTime movie,

00:44:43.420 --> 00:44:43.980
a couple of K.

00:44:45.860 --> 00:44:49.420
All right,
and let me--I'm going to show you an

00:44:49.420 --> 00:44:55.680
MPEG-4 file just like the MP--actually,
I'm going to open this in

00:44:55.680 --> 00:44:57.890
Internet Explorer because--

00:45:06.800 --> 00:45:17.800
Here we've got an MPEG-4 file playing
in QuickTime in Internet Explorer.

00:45:17.800 --> 00:45:19.640
I'm believing Internet Explorer does
not know--this version of

00:45:19.720 --> 00:45:21.820
Internet Explorer does not
know what an MPEG-4 file is,

00:45:21.820 --> 00:45:24.160
let alone know that
QuickTime should play it.

00:45:24.160 --> 00:45:29.220
But it's happy to do it because it said
the source is a QuickTime image file,

00:45:29.220 --> 00:45:35.340
so the QT source can be anything,
it just doesn't know.

00:45:44.400 --> 00:45:45.640
I'm sorry,
can I hear that question again?

00:45:45.640 --> 00:45:51.120
Will it work if I leave the source empty,
source equals MP4?

00:45:51.120 --> 00:45:54.240
Okay, will this work if you
leave source equals MP4?

00:45:54.240 --> 00:45:55.240
Empty.

00:45:55.240 --> 00:45:56.240
Empty.

00:45:56.240 --> 00:45:58.210
Oh, leave the source empty?

00:45:58.250 --> 00:46:00.770
If the source tag is empty,
then the browser has no

00:46:00.770 --> 00:46:02.760
idea what you want to do.

00:46:04.750 --> 00:46:06.040
No.

00:46:06.170 --> 00:46:10.350
QuickTime will only load if the
browser is told to load a file

00:46:10.350 --> 00:46:13.520
that it can't play and that the
QuickTime plug-in is registered for.

00:46:15.660 --> 00:46:18.000
The file has to exist and it has
to be of a MIME type that only

00:46:18.100 --> 00:46:19.600
QuickTime is registered for.

00:46:19.600 --> 00:46:22.750
And if QuickTime is not installed,
then you want to have the

00:46:22.750 --> 00:46:24.160
Plugins page tagged there.

00:46:24.200 --> 00:46:26.500
Now, there's a caveat for this.

00:46:26.550 --> 00:46:28.900
This is all somewhat less
true in Internet Explorer for

00:46:28.900 --> 00:46:32.210
Windows because the OBJECT tag says,
"I want the QuickTime plug-in.

00:46:32.310 --> 00:46:34.860
If it's not there,
go get it." And whatever gets

00:46:35.050 --> 00:46:36.530
played is up to the plug-in.

00:46:36.580 --> 00:46:38.200
So it's less sensitive.

00:46:38.290 --> 00:46:40.520
When you use the OBJECT tag,
you're saying,

00:46:40.520 --> 00:46:42.140
"We're playing it in QuickTime.

00:46:42.140 --> 00:46:43.180
I don't care."

00:46:43.470 --> 00:46:45.990
So it's indifferent,
but any other browser,

00:46:46.040 --> 00:46:49.170
any other operating system,
you really need to use the

00:46:49.170 --> 00:46:50.720
source and QT source this way.

00:46:50.720 --> 00:46:53.090
But the key thing I'm trying to
get across is that the movie and

00:46:53.170 --> 00:46:56.100
the MPEG-4 are a little different,
and you can't just change

00:46:56.230 --> 00:46:59.430
the file extension or expect
it to work the same way.

00:46:59.440 --> 00:47:03.680
Okay.

00:47:07.700 --> 00:47:10.300
So, let's change subjects all
together and talk about streaming.

00:47:10.300 --> 00:47:12.140
Is everybody ready for a change in topic?

00:47:12.140 --> 00:47:13.700
Okay.

00:47:13.700 --> 00:47:15.060
Not me, I'm sorry.

00:47:15.060 --> 00:47:18.890
I'm bothering you,
but I'm not clear about your answer.

00:47:29.200 --> 00:47:35.710
I'm going to source MPEG-4 because
I want to have open QuickTime.

00:47:35.710 --> 00:47:35.720
What I'm hearing is that

00:47:36.300 --> 00:47:42.520
Despite opening a source that's
a QuickTime-enabled source,

00:47:42.520 --> 00:47:45.570
anyway, I have to say QuickTime source,
always.

00:47:46.030 --> 00:47:46.900
Okay.

00:47:46.900 --> 00:47:50.660
The question is, if I set the source,
if I understand the question,

00:47:50.660 --> 00:47:53.910
if I set the source to a QuickTime movie,
can't I then set the

00:47:53.940 --> 00:47:55.380
source to an MP4 file?

00:47:55.480 --> 00:47:57.280
Why do I have to use QTSource?

00:47:57.300 --> 00:48:00.820
Because you can't have two source
parameters in the same tag.

00:48:00.820 --> 00:48:04.290
If the source is one thing,
that's what it is.

00:48:04.320 --> 00:48:07.340
So the QTSource is your other source.

00:48:09.050 --> 00:48:14.330
The source tag is for the browser,
the QT source is for the plug-in.

00:48:16.240 --> 00:48:17.440
All right.

00:48:17.440 --> 00:48:19.150
There's some great stuff
happening in streaming,

00:48:19.250 --> 00:48:23.430
and streaming is a little different
from the kind of movies we've

00:48:23.430 --> 00:48:25.130
been looking at here on our disk.

00:48:25.160 --> 00:48:27.020
It uses real-time protocols.

00:48:27.230 --> 00:48:29.970
The real difference between streaming
and the movies we've been looking at

00:48:29.970 --> 00:48:36.980
is that streaming in these real-time
protocols goes over the network

00:48:36.980 --> 00:48:39.170
in such a way that a one-minute
movie is transmitted in one minute.

00:48:39.900 --> 00:48:43.800
If you've got a fast Internet connection,
it still takes a minute.

00:48:43.800 --> 00:48:48.680
If you've got a slow Internet connection
and it can't hold the data,

00:48:48.680 --> 00:48:49.600
it's coming over in a minute.

00:48:49.600 --> 00:48:51.440
If it doesn't get through,
it just doesn't get through.

00:48:51.440 --> 00:48:52.440
It just gets dropped on the floor.

00:48:52.440 --> 00:48:54.980
You can't buffer it
up and watch it later.

00:48:54.980 --> 00:48:56.840
It's a real-time protocol.

00:48:56.840 --> 00:48:59.610
The good thing about that is you
can carry live audio and video.

00:48:59.610 --> 00:49:02.500
Things are happening in real time,
and there's no way to carry live

00:49:02.500 --> 00:49:04.520
audio and video except with streaming.

00:49:04.520 --> 00:49:06.930
You can't record it and
play the recorded movie.

00:49:06.930 --> 00:49:08.130
It's happening now.

00:49:09.830 --> 00:49:12.720
Another good thing is if you
record a movie and you stream it,

00:49:12.750 --> 00:49:15.440
you can start streaming
from any point in the movie.

00:49:15.440 --> 00:49:16.850
That's really nice.

00:49:16.990 --> 00:49:17.940
You've got a two-hour movie.

00:49:17.940 --> 00:49:20.490
People want to skip around,
or you've got multiple

00:49:20.590 --> 00:49:22.290
lessons in a learning course.

00:49:22.290 --> 00:49:24.760
People want to go to lesson
three or listen to that again.

00:49:24.760 --> 00:49:27.500
They don't have to download the whole
movie to that point to watch it.

00:49:27.500 --> 00:49:29.740
They can just skip right to
that point and start streaming

00:49:29.740 --> 00:49:31.090
from the middle of the movie.

00:49:31.090 --> 00:49:34.580
It supports multicast.

00:49:34.700 --> 00:49:36.040
This is really a cool thing.

00:49:36.040 --> 00:49:39.500
If you have a movie and
you've got a campus land.

00:49:39.870 --> 00:49:41.310
You've got a hundred
people watching the movie.

00:49:41.510 --> 00:49:43.620
You're sending out a hundred copies
of the movie over the network.

00:49:43.630 --> 00:49:46.190
You've all seen what happens when
two thousand people fire up their

00:49:46.390 --> 00:49:50.190
laptops over the local airport network.

00:49:50.190 --> 00:49:50.190
It gets pretty extreme.

00:49:50.350 --> 00:49:53.870
But if you send one copy of a
stream to a multicast address,

00:49:54.410 --> 00:49:58.120
everyone can turn their computer to that
multicast address and watch the movie,

00:49:58.120 --> 00:50:00.770
and you're really only sending out one
copy of the movie over the network,

00:50:00.770 --> 00:50:01.880
and everybody is looking.

00:50:01.880 --> 00:50:04.510
Because a network,
remember a packet network,

00:50:04.580 --> 00:50:06.760
it's kind of like postcards, right?

00:50:06.760 --> 00:50:08.980
They go past everybody,
but your computer only looks at

00:50:09.060 --> 00:50:10.550
the ones that are addressed at it.

00:50:10.560 --> 00:50:12.840
But if I say this is one
that everybody can look at,

00:50:12.870 --> 00:50:15.210
then all your computers can
look at it as it goes by on

00:50:15.210 --> 00:50:16.780
the bus or through the ether.

00:50:16.780 --> 00:50:19.960
You don't have to send multiple copies,
so that's really nice.

00:50:20.200 --> 00:50:23.880
That doesn't work over the Internet,
but it works great over campus

00:50:23.880 --> 00:50:25.440
LANs and corporate LANs.

00:50:25.440 --> 00:50:29.700
The bad things about streaming are it has
to fit within the available bandwidth.

00:50:29.700 --> 00:50:34.070
If you've got a 28 kilobit per
second movie playing on a 27

00:50:34.160 --> 00:50:37.760
kilobit per second connection,
it doesn't play.

00:50:37.760 --> 00:50:39.810
You don't see anything,
you don't hear anything.

00:50:39.820 --> 00:50:42.310
The other thing is that because
it's a real-time protocol,

00:50:42.410 --> 00:50:46.080
typically lost data is not retransmitted,
and over the Internet there's some loss,

00:50:46.090 --> 00:50:49.730
so you have little artifacts, video,
audio dropouts, things don't show up.

00:50:50.200 --> 00:50:53.280
And the third thing is it's
limited to certain media types.

00:50:53.280 --> 00:50:55.760
Audio, video, text, and URL events.

00:50:55.800 --> 00:50:58.050
It sounds like a lot, gee, audio, video,
and it is a lot.

00:50:58.080 --> 00:51:01.770
But there's no Flash, there's no VR,
there are lots of things

00:51:01.770 --> 00:51:04.050
that you can't send,
3D models.

00:51:05.600 --> 00:53:59.400
[Transcript missing]

00:53:59.920 --> 00:54:01.380
So, how do you play a stream?

00:54:01.380 --> 00:54:03.380
How do you put a stream in a web page?

00:54:03.390 --> 00:54:05.040
It's a little different.

00:54:05.040 --> 00:54:08.000
Because it uses the
real-time RTSP protocol,

00:54:08.010 --> 00:54:10.520
its URL is going to start with RTSP.

00:54:10.520 --> 00:54:13.670
And if you just embed it in a web page,
what's going to happen is,

00:54:13.920 --> 00:54:18.540
even if it's .mov file, if it's RTSP,
my server, my path, my.move,

00:54:18.540 --> 00:54:22.540
many times the browser will go, "Oh,
RTSP.

00:54:22.540 --> 00:54:24.510
That means I better use Reel." Or, "Oh,
that means I better use

00:54:24.560 --> 00:54:27.390
Windows Media Player." Or,
"That must mean I use

00:54:27.390 --> 00:54:31.050
Joe's Streamer." So,
what you do is you use

00:54:31.050 --> 00:54:32.520
source and QTSource.

00:54:32.580 --> 00:54:35.710
Ordinarily, with QTSource,
QuickTime will tell the

00:54:35.710 --> 00:54:37.310
browser to get a file for it.

00:54:37.320 --> 00:54:40.330
It will use the facilities of
the browser to do the download,

00:54:40.330 --> 00:54:42.370
even though the browser
isn't displaying it.

00:54:42.390 --> 00:54:45.200
So, you use QTSource, don't use browser.

00:54:45.290 --> 00:54:48.580
This is a tag which tells
QuickTime not to use the browser

00:54:48.580 --> 00:54:50.600
to get the QuickTime source movie.

00:54:50.670 --> 00:54:54.500
And that way, the RTSP will not be
redirected or misdirected.

00:54:54.580 --> 00:54:57.320
It says, "QuickTime, use your RTSP." So,
you use your own resources to get this.

00:54:57.370 --> 00:54:58.240
It's usually pretty good.

00:54:58.310 --> 00:55:01.520
I think current versions will
do that automatically for RTSP.

00:55:01.520 --> 00:55:04.640
Have I got a QuickTime engineer
in the audience?

00:55:04.640 --> 00:55:05.450
Not today.

00:55:05.500 --> 00:55:05.960
Okay.

00:55:05.970 --> 00:55:06.940
I'm on my own.

00:55:06.940 --> 00:55:08.770
I believe that's correct.

00:55:08.820 --> 00:55:13.080
So, another choice is you can use
a text movie to embed a stream.

00:55:13.280 --> 00:55:15.750
And you saw how that worked with the XML.

00:55:15.750 --> 00:55:17.190
That could be an RTSP URL.

00:55:17.190 --> 00:55:18.370
There are a couple ways.

00:55:18.370 --> 00:55:20.100
A third way is to use a reference movie.

00:55:20.100 --> 00:55:22.820
If I open a stream in
QuickTime Player and save

00:55:22.820 --> 00:55:25.840
as a self-contained movie,
what am I saving?

00:55:25.840 --> 00:55:28.570
I can use a QuickTime movie that's
basically a wrapper around a URL.

00:55:28.570 --> 00:55:31.780
And then I can embed that movie
in a web page and it will open the

00:55:31.780 --> 00:55:34.000
stream when somebody clicks on it.

00:55:35.050 --> 00:55:40.140
So let me kind of show you a
couple ways to do a text movie.

00:55:40.140 --> 00:55:41.990
Let's see if this works.

00:55:42.000 --> 00:55:49.200
Go over here to the demo machine and
I will once again show you a text file,

00:55:49.200 --> 00:55:51.220
the thing

00:55:58.900 --> 00:56:02.260
This is just an RTSP URL,
and there are eight characters

00:56:02.580 --> 00:56:04.240
that precede that URL.

00:56:04.240 --> 00:56:07.650
RTSP, all uppercase, TEXT, all lowercase.

00:56:07.650 --> 00:56:11.920
This is known as the text atom hack,
and I won't go into all

00:56:11.920 --> 00:56:13.590
the reasons for that.

00:56:13.630 --> 00:56:16.730
But if you start a file
with the characters RTSP,

00:56:16.840 --> 00:56:20.380
TEXT, and then immediately
follow it with an RTSP URL,

00:56:20.380 --> 00:56:25.620
you can treat that as a QuickTime movie,
and QuickTime will open that URL.

00:56:26.620 --> 00:56:28.390
But what do you have to
do to make that work?

00:56:28.390 --> 00:56:32.970
Well, you have to say,

00:56:35.870 --> 00:56:38.350
"It's a movie file, not a text file.

00:56:38.370 --> 00:56:42.680
So instead of trying to display it,
the browser will use,

00:56:42.680 --> 00:56:44.620
or the operating system will
use QuickTime to display it."

00:56:50.290 --> 00:56:54.330
Yeah, this is using a text movie
instead of a reference movie.

00:56:54.330 --> 00:56:58.310
Again, a reference movie is I open
the streaming QuickTime player,

00:56:58.310 --> 00:57:00.410
I save it,
I've created a QuickTime movie.

00:57:00.420 --> 00:57:02.290
And that's a perfectly good way to go.

00:57:02.300 --> 00:57:03.700
Why would you use this instead?

00:57:03.700 --> 00:57:06.730
Maybe you don't want to
create QuickTime movies,

00:57:06.740 --> 00:57:10.940
maybe you just want to generate
text files because it's a hassle.

00:57:10.940 --> 00:57:11.970
It saves you a step.

00:57:12.030 --> 00:57:14.880
Again, if you're using PHP or Perl or
something to generate these,

00:57:14.880 --> 00:57:16.810
you can generate these
movies that are just,

00:57:16.810 --> 00:57:20.170
anything that can generate a text
file can generate one of these movies.

00:57:20.200 --> 00:57:21.810
movies.

00:57:22.620 --> 00:57:27.720
Hopefully, yeah, again,
I just opened a text file.

00:57:27.750 --> 00:57:29.110
As a movie, I'm playing it.

00:57:29.310 --> 00:57:31.750
QuickTime is doing the right thing.

00:57:31.770 --> 00:57:35.480
And after a little buffering because
we're coming from down under,

00:57:36.380 --> 00:57:41.160
I think we're -- -- up there with a
few of his buddies like one giant lead,

00:57:41.160 --> 00:57:41.380
MaxiJazz.

00:57:41.380 --> 00:57:43.680
Steve Adubato: Live from Australia.

00:57:43.690 --> 00:57:44.540
Okay.

00:57:50.510 --> 00:57:51.500
I'm sorry?

00:57:51.500 --> 00:57:55.740
Can you use chapters on a
streaming movie like this?

00:57:55.740 --> 00:57:56.740
Can I use --

00:57:59.460 --> 00:58:00.370
Oh, yes.

00:58:00.370 --> 00:58:01.600
Can I use chapters?

00:58:01.880 --> 00:58:04.770
Well, that--the question is,
can I use chapters in that

00:58:04.770 --> 00:58:06.480
kind of a streaming movie?

00:58:06.480 --> 00:58:08.900
The answer is no, not exactly.

00:58:08.980 --> 00:58:12.040
To use chapters in a streaming movie,
you really have to have a

00:58:12.330 --> 00:58:14.160
regular movie and a stream.

00:58:14.280 --> 00:58:19.760
Here's an example of a streaming movie.

00:58:19.790 --> 00:58:23.070
This is actually a webcast from
Steve Jobs' keynote in 1999.

00:58:25.200 --> 00:58:28.980
A really inspiring keynote
that went on for two hours.

00:58:28.980 --> 00:58:32.620
So if you just wanted to know what he
had to say about QuickTime at that point,

00:58:33.000 --> 00:58:38.970
It would be really nice to be able
to just jam down there and see it.

00:58:39.820 --> 00:58:41.150
And so you can skip around.

00:58:41.160 --> 00:58:43.960
Time has become huge for us.

00:58:44.010 --> 00:58:45.300
We announced QuickTime 4.

00:58:45.300 --> 00:58:47.190
QuickTime 4.

00:58:47.300 --> 00:58:48.170
Okay.

00:58:48.330 --> 00:58:51.840
So here's an example of a two-hour
movie and how long did I have to

00:58:51.840 --> 00:58:53.710
wait to download the part I wanted.

00:58:53.710 --> 00:58:56.550
Use chapter lists with
streaming movies that are long.

00:58:56.550 --> 00:58:57.570
They don't stream.

00:58:57.660 --> 00:58:59.280
Chapter lists do not stream.

00:58:59.280 --> 00:59:04.180
So what you have to do is you open the
streaming movie up in QuickTime Player,

00:59:04.280 --> 00:59:06.040
then you add a chapter list.

00:59:06.040 --> 00:59:07.780
In QuickTime Pro, this is a text file.

00:59:07.780 --> 00:59:08.960
It's really easy to do.

00:59:09.150 --> 00:59:11.050
There's free tools that
will do it for you.

00:59:11.050 --> 00:59:13.120
Look around in the
Internet utilities on the web.

00:59:13.140 --> 00:59:14.560
There's all kinds of cool stuff.

00:59:14.580 --> 00:59:17.170
It's really easy to do and
it really enhances the value,

00:59:17.170 --> 00:59:20.380
especially for distance learning
of long streaming movies.

00:59:20.450 --> 00:59:22.140
But the question was,
"Can you do that with an

00:59:22.140 --> 00:59:25.210
XML file?" And the answer is,
"No." The RTSP hack is

00:59:25.310 --> 00:59:27.990
just to pass an RTSP URL.

00:59:28.080 --> 00:59:30.600
If you want to do more
elaborate mixtures,

00:59:30.600 --> 00:59:32.910
you really have to use a reference movie.

00:59:36.120 --> 00:59:37.630
The first eight characters
are case-sensitive.

00:59:37.710 --> 00:59:39.930
The question is,
what part of the RTSP hack

00:59:40.020 --> 00:59:41.530
is case-sensitive?

00:59:41.550 --> 00:59:43.460
The first eight characters.

00:59:43.460 --> 00:59:46.200
The first four characters
must be uppercase RTSP.

00:59:46.200 --> 00:59:49.920
The second four characters
must be lowercase T-E-X-T.

00:59:51.200 --> 00:59:54.280
And what's happening is the
QuickTime player is trying

00:59:54.280 --> 00:59:55.860
to open a QuickTime movie.

00:59:55.990 --> 00:59:57.450
It's looking for a movie atom.

00:59:57.480 --> 01:00:01.220
It says, "Well, I don't see a movie atom,
but I see a text atom." It's

01:00:01.220 --> 01:00:05.170
the length of the text atom,
the character's RTSP.

01:00:05.220 --> 01:00:07.050
That's why we call it a hack.

01:00:07.490 --> 01:00:09.310
You can also use XML the
way I showed you earlier,

01:00:09.330 --> 01:00:11.740
and that's a far more structured way,
and that works beautifully.

01:00:11.740 --> 01:00:15.760
And then you can tell it to play it
in QuickTime Player and full-screen,

01:00:15.760 --> 01:00:18.460
and you can pass all
kinds of extra parameters,

01:00:18.460 --> 01:00:20.190
which is also very nice.

01:00:21.440 --> 01:00:22.390
Oh yeah, here it is.

01:00:22.410 --> 01:00:23.480
Here's the XML version.

01:00:23.480 --> 01:00:28.480
So instead of using the RTSP hack,
say you can't remember whether to use

01:00:28.480 --> 01:00:30.600
up or lowercase and it's confusing,
just use the XML.

01:00:30.600 --> 01:00:31.600
It stays the same.

01:00:31.600 --> 01:00:33.740
Top first two lines are always the same.

01:00:33.740 --> 01:00:35.510
It's an XML, it's a media link.

01:00:36.780 --> 01:00:39.640
and you embed,
you give it the MOV file extension and

01:00:39.640 --> 01:00:42.970
embed it just like any QuickTime movie.

01:00:43.100 --> 01:00:53.600
[Transcript missing]

01:01:08.760 --> 01:01:11.620
The question is,
the gentleman saw earlier an

01:01:11.680 --> 01:01:15.210
XML file that you would drag and
drop onto QuickTime Player that

01:01:15.210 --> 01:01:17.920
would turn into a movie file,
and that was a media skin.

01:01:17.920 --> 01:01:20.660
Basically,
QuickTime is moving towards XML.

01:01:20.660 --> 01:01:22.980
XML is the data format that's
going to conquer the world.

01:01:22.980 --> 01:01:24.080
We thought it was MP3.

01:01:24.080 --> 01:01:24.770
We were wrong.

01:01:24.780 --> 01:01:25.290
It's XML.

01:01:25.300 --> 01:01:29.120
Basically,
more and more as we go forward,

01:01:29.120 --> 01:01:33.060
you'll find that you can export anything
from any format into XML and then

01:01:33.070 --> 01:01:34.880
import it into any compatible version.

01:01:36.270 --> 01:01:39.040
What's happening here is
this is a QuickTime XML,

01:01:39.040 --> 01:01:42.130
and we're giving it the EMBED tag.

01:01:42.180 --> 01:01:44.450
We're saying, okay,
this is a QuickTime media link.

01:01:44.700 --> 01:01:45.350
Here's the source.

01:01:45.360 --> 01:01:48.890
If instead of QuickTime media link,
it said QuickTime media skin,

01:01:48.890 --> 01:01:50.890
we would give it some image files.

01:01:50.920 --> 01:01:54.560
QuickTime has all kinds,
a growing list of XML importers.

01:01:54.560 --> 01:01:58.050
Basically, you will be able to pass all
kinds of things as we go into

01:01:58.050 --> 01:01:59.940
the future to QuickTime as XML.

01:01:59.940 --> 01:02:03.990
The syntax will be very similar,
but the actual parameters will

01:02:04.020 --> 01:02:05.470
typically be a little different.

01:02:05.640 --> 01:02:08.060
For skin, you'll want to give it an
image file and a mask file,

01:02:08.060 --> 01:02:08.780
a drag region.

01:02:08.780 --> 01:02:11.670
For a movie, you'll just give it a URL.

01:02:16.680 --> 01:02:20.520
Okay, embedding streamings in a web page,
using a reference movie,

01:02:20.520 --> 01:02:22.350
I've pretty much talked about that.

01:02:22.360 --> 01:02:25.270
You open the stream,
you save it as a self-contained movie,

01:02:25.330 --> 01:02:28.100
and it's just a wrapper for URL,
it works great.

01:02:28.170 --> 01:02:30.960
The bonus is that you can
then edit the movie to add

01:02:31.020 --> 01:02:32.900
things like the chapter list.

01:02:32.900 --> 01:02:34.960
And let me show you some other
things you can add to streams.

01:02:35.010 --> 01:02:38.850
Again, I don't have time to
go into the techniques,

01:02:38.880 --> 01:02:43.250
and I don't mean to cheat you that way,
but I think it's worth

01:02:43.250 --> 01:02:44.850
seeing some things.

01:02:44.850 --> 01:02:45.970
Here's a...

01:02:48.610 --> 01:02:49.500
Yeah.

01:02:49.500 --> 01:02:50.440
This is a QuickTime movie.

01:02:50.440 --> 01:02:52.860
It's got a media skin, so it doesn't look
like a QuickTime movie.

01:02:52.860 --> 01:02:54.940
It looks like its own application.

01:02:54.960 --> 01:02:56.940
And when we play it,

01:02:58.760 --> 01:03:01.850
We've got QuickTime VR here,
so obviously this gets the

01:03:01.870 --> 01:03:03.860
media types that don't stream.

01:03:03.860 --> 01:03:06.760
I can interact with it,
I can drag it around,

01:03:06.760 --> 01:03:09.570
I can drive myself crazy with it,
but I can

01:03:13.200 --> 01:03:20.480
So here we've got a skinned
player with a lot of things

01:03:20.480 --> 01:03:24.520
that are even more interesting,
arguably, than a...

01:03:29.100 --> 01:03:35.810
This is one of those amazing
Michael Schaaf productions that

01:03:35.810 --> 01:03:38.180
just blows your mind every time.

01:03:38.380 --> 01:03:40.020
Yeah, you can mix things with streams.

01:03:40.070 --> 01:03:42.720
So streaming is great and
non-streaming is great,

01:03:42.720 --> 01:03:46.940
and mixing them is really--here's
something a little bit--you don't have to

01:03:46.950 --> 01:03:49.940
be--something a little more understated.

01:04:02.160 --> 01:04:04.170
Okay, the question is,
how do you really do this?

01:04:04.200 --> 01:04:06.630
And the answer is,
you open the streaming track in

01:04:06.630 --> 01:04:10.650
QuickTime Player and then save
it as a self-contained movie.

01:04:10.660 --> 01:04:12.820
Now you've got a streaming movie.

01:04:12.820 --> 01:04:15.510
And then you can open that in
QuickTime Player and edit it just

01:04:15.510 --> 01:04:19.020
as you would any other movie,
to add Flash, add sprites.

01:04:19.020 --> 01:04:21.370
It's just one more media
type that you're mixing in,

01:04:21.400 --> 01:04:24.410
and this media type is a streaming track,
which is just basically

01:04:24.410 --> 01:04:25.640
a wrapper around a URL.

01:04:26.040 --> 01:04:26.830
And here's Wilco.

01:04:26.830 --> 01:04:29.340
They've got really nice,
high-quality MPEG-4 playing.

01:04:29.340 --> 01:04:33.580
And again,
you see your player doesn't have to be...

01:04:33.960 --> 01:04:36.740
It doesn't have to be loud or abrasive.

01:04:36.740 --> 01:04:39.660
It can be just really attractive.

01:04:39.660 --> 01:04:42.510
There are some really
nice ones coming out now,

01:04:42.510 --> 01:04:44.400
so it's a nice thing to do.

01:04:44.400 --> 01:04:48.020
Let me see if I can...
That's for recorded streams,

01:04:48.120 --> 01:04:49.460
what I just told you.

01:04:49.500 --> 01:04:54.770
Live streams are a little different,
and I will show you that now.

01:04:54.780 --> 01:04:59.280
Pre-recorded stream,
we just talked about that.

01:04:59.280 --> 01:05:02.130
When you add a media to a stream,
you can either add it

01:05:02.130 --> 01:05:03.260
or you can add scaled.

01:05:03.260 --> 01:05:06.090
If you've used QuickTime Player Pro,
it basically adds scale.

01:05:06.090 --> 01:05:07.770
It says,
"Take the duration of the thing I've

01:05:07.770 --> 01:05:11.590
selected and add." If I want to add
a still image to a streaming audio,

01:05:11.590 --> 01:05:12.250
I add scale.

01:05:12.250 --> 01:05:16.030
So you select the whole streaming
audio and add this image for

01:05:16.050 --> 01:05:18.460
the duration of the audio.

01:05:18.460 --> 01:05:20.130
For live streams, it's a little trickier.

01:05:21.770 --> 01:05:24.700
I wonder if I have a live
stream I can open here.

01:05:24.700 --> 01:05:26.430
I think I do.

01:05:26.580 --> 01:05:29.290
I'm going to try to show you this,
but first I'm going to explain

01:05:29.290 --> 01:05:30.700
it just in case I can't show you.

01:05:30.770 --> 01:05:33.980
You're going to open the stream
in QuickTime Player and save it,

01:05:33.990 --> 01:05:36.160
but now you've got a
pointer to a live stream.

01:05:36.250 --> 01:05:40.500
A live stream doesn't
have a known duration.

01:05:40.560 --> 01:05:45.690
QuickTime doesn't know how long it
is or where you are in the stream.

01:05:45.690 --> 01:05:45.690
It's always the eternal now.

01:05:45.810 --> 01:05:48.720
So you have to disable the streaming
track in order to do any editing,

01:05:48.720 --> 01:05:50.240
because editing is time-based.

01:05:50.240 --> 01:05:51.440
And that's the trick.

01:05:51.440 --> 01:05:53.640
If you use QuickTime Player Pro,
if you're using another tool,

01:05:53.640 --> 01:05:55.430
it may be very simple.

01:05:55.430 --> 01:05:57.000
Say,
open this live stream and add this media,

01:05:57.000 --> 01:05:57.680
and it just works.

01:05:57.730 --> 01:06:00.330
I think LiveStage just
hides all that from you.

01:06:00.480 --> 01:06:03.630
If you're trying to do it in
QuickTime Player Pro for $30,

01:06:03.630 --> 01:06:05.690
then you have to jump through some hoops.

01:06:05.690 --> 01:06:09.850
But basically, the thing is you disable
the streaming track,

01:06:09.970 --> 01:06:14.170
and that'll get your time slider back,
bring in your other media,

01:06:14.210 --> 01:06:19.210
add scaled to the whole duration,
and then re-enable your live track.

01:06:19.380 --> 01:06:21.770
And I'll try to show you that now.

01:06:21.770 --> 01:06:26.720
This is where the demo gets off
into some interesting areas.

01:06:26.800 --> 01:06:28.960
Okay.

01:06:30.510 --> 01:06:34.870
Go right.

01:06:34.880 --> 01:06:41.880
Okay.

01:06:41.880 --> 01:06:46.770
And let's go mixing.

01:07:04.300 --> 01:07:11.200
Okay, looks like we're getting
a live stream here.

01:07:11.200 --> 01:07:23.540
Now as you can see,
there's no time slider in the

01:07:23.540 --> 01:07:27.400
controls because we don't know
what the story is with that.

01:07:27.410 --> 01:07:30.270
We don't know what time it is,
how long it is, we can't skip backwards

01:07:30.350 --> 01:07:32.960
because it's live,
we can't skip forward because it's live.

01:07:32.990 --> 01:07:37.230
But if I go into the movie,
rather the edit, okay,

01:07:37.260 --> 01:07:41.040
let me do a command J, get information.

01:07:41.080 --> 01:07:46.030
Here's the movie, information,
and it has one track which

01:07:46.030 --> 01:07:50.590
is a streaming track,
and that's all it has.

01:07:51.010 --> 01:07:56.140
QDesign 2, it's classical music,
it's lovely.

01:07:56.140 --> 01:07:56.140
All right.

01:07:56.480 --> 01:07:59.280
And what I'm going to do now is
I'm going to disable that track.

01:07:59.280 --> 01:08:04.060
Go to the Enable Tracks menu and say,
"You are no longer enabled.

01:08:04.210 --> 01:08:08.110
Thank you." Now you see
we have a time slider.

01:08:08.460 --> 01:08:15.010
So now if I want to open -- okay,
here's Web Radio Move.

01:08:16.210 --> 01:08:24.410
Here's something that looks like a radio,
and I'll extract a track from it.

01:08:24.800 --> 01:08:27.240
"The picture sounds good.

01:08:27.240 --> 01:08:29.250
Let's extract that.

01:08:29.250 --> 01:08:30.620
That's good.

01:08:31.000 --> 01:08:31.360
Okay.

01:08:31.360 --> 01:08:33.260
Now I have an image.

01:08:33.260 --> 01:08:38.130
It has a duration of... Oh,
it's really long.

01:08:38.130 --> 01:08:39.500
Okay, cool.

01:08:39.500 --> 01:08:40.240
Okay.

01:08:40.240 --> 01:08:40.940
So.

01:08:43.040 --> 01:08:43.900
Copy that.

01:08:43.900 --> 01:08:47.870
I hit Command--let me
do it so you can see.

01:08:48.030 --> 01:08:48.590
Copy.

01:08:48.910 --> 01:08:51.710
And I just--when you copy
with nothing selected,

01:08:51.710 --> 01:08:54.090
it copies the image that you're seeing.

01:08:55.100 --> 01:08:57.000
Okay, I didn't need to save that.

01:08:57.060 --> 01:09:03.060
Go back here and now select all, edit.

01:09:04.680 --> 01:09:07.950
I've scaled.

01:09:07.950 --> 01:09:14.190
Okay, and now I believe I can
re-enable the streaming track.

01:09:17.120 --> 01:09:18.740
Right.

01:09:18.740 --> 01:09:24.960
And now I have an image whose duration
is more or less eternal right along.

01:09:25.000 --> 01:09:27.870
And so here I've basically added
a picture to a live stream.

01:09:29.290 --> 01:09:30.150
It was a little tricky.

01:09:30.250 --> 01:09:35.580
I had to disable it and then
re-enable it to get the slider.

01:09:35.670 --> 01:09:37.410
But obviously the principle
here is pretty straightforward.

01:09:37.490 --> 01:09:40.470
If you have a live radio station,
you want to have it playing with

01:09:40.530 --> 01:09:43.200
the image of your radio station
or the song that's being played.

01:09:43.200 --> 01:09:45.140
You don't want to have it
just playing in the player.

01:09:45.140 --> 01:09:48.740
You can mix live streams
with non-streaming media.

01:09:48.740 --> 01:09:52.490
And the book goes into great
detail about other ways to do that.

01:09:55.610 --> 01:09:57.890
Is there a QuickTime call to swap pics?

01:09:58.070 --> 01:10:03.620
There is a live sprite actions
that you can use to swap things.

01:10:03.620 --> 01:10:05.000
You can have it as part of the movie.

01:10:05.000 --> 01:10:15.210
Yes, there are ways to make the image
change with what's being broadcast.

01:10:17.680 --> 01:10:19.810
Okay, now,
I think we've kind of gone over why

01:10:19.810 --> 01:10:23.890
you would stream versus fast start,
embedding streams in a web page

01:10:23.890 --> 01:10:26.780
using source and QT source,
text movies, reference movies,

01:10:26.780 --> 01:10:28.520
pre-recorded and live streams.

01:10:28.520 --> 01:10:30.130
Any questions about
what we just dealt with?

01:10:30.130 --> 01:10:32.260
All right, we're on the same page.

01:10:32.260 --> 01:10:33.600
This is going good.

01:10:35.890 --> 01:10:37.390
We have three and a half minutes.

01:10:37.400 --> 01:10:38.400
All right.

01:10:38.400 --> 01:10:43.240
Just real quick,
if we had a -- if I have a live stream

01:10:43.240 --> 01:10:46.860
going like that and I want to put indexes
for scene change with the question

01:10:46.860 --> 01:10:50.420
he asked about changing the picture,
your standard like change

01:10:50.420 --> 01:10:53.540
the album art for the thing,
but you want to do a live

01:10:53.540 --> 01:10:58.600
stream like off a radio station,
not a sequence of concatenated MP3 files,

01:10:58.620 --> 01:10:59.960
how would you approach that?

01:11:00.820 --> 01:11:03.320
What I would do is
I would get ChannelStorm,

01:11:03.320 --> 01:11:05.660
which is an application
that does just that.

01:11:05.660 --> 01:11:09.960
It's a live studio in software,
and QuickTime supports this,

01:11:09.960 --> 01:11:13.990
but you can't do it easily
from QuickTime Broadcaster.

01:11:14.000 --> 01:11:16.100
You need a little bit more
sophisticated application that

01:11:16.110 --> 01:11:19.330
can say send an event stream,
mix this current -- basically you're

01:11:19.330 --> 01:11:22.630
sending live -- what you're doing is
you're streaming video as well as audio.

01:11:22.670 --> 01:11:25.970
It's just that your video
has a very low bandwidth.

01:11:27.170 --> 01:11:28.050
That's the short answer.

01:11:28.090 --> 01:11:31.940
And you could also send text
with URLs if you wanted to load

01:11:31.940 --> 01:11:32.940
up a web page at that point.

01:11:34.620 --> 01:11:35.500
Yes?

01:11:35.500 --> 01:11:38.330
For streaming tracks,
for streaming movie, can you add,

01:11:38.330 --> 01:11:39.530
can you stream href tracks?

01:11:39.540 --> 01:11:41.260
Can you add, excuse me?

01:11:41.260 --> 01:11:42.260
href tracks.

01:11:42.260 --> 01:11:43.250
href tracks.

01:11:43.260 --> 01:11:45.600
Yes, href tracks stream, actually.

01:11:45.600 --> 01:11:48.320
So you can add an href track
to a streaming movie or you

01:11:48.460 --> 01:11:49.660
can stream the href track.

01:11:49.660 --> 01:11:52.000
And an href track,
for those of you who don't know,

01:11:52.110 --> 01:11:55.240
is a text track which
consists of a series of URLs,

01:11:55.240 --> 01:11:59.830
but it's a QuickTime text track,
so these URLs arrive at a certain time.

01:11:59.920 --> 01:12:03.200
And basically it says,
when I get to this point in the movie,

01:12:03.340 --> 01:12:04.840
load this URL.

01:12:04.840 --> 01:12:07.740
And let me, yeah,
let me show you that over here.

01:12:07.740 --> 01:12:10.180
There's a little demo of it.

01:12:10.180 --> 01:12:10.820
Something like that.

01:12:15.950 --> 01:12:16.890
This is worth seeing.

01:12:16.890 --> 01:12:18.740
It's kind of cute.

01:12:18.820 --> 01:12:22.360
I'll just show it for
you to see how it works.

01:12:25.720 --> 01:12:27.600
Doesn't look promising.

01:12:27.600 --> 01:12:30.650
Let's try this one.

01:12:39.790 --> 01:12:41.700
Welcome to the audio tour.

01:12:41.860 --> 01:12:44.100
This is an example of a talking web tour.

01:12:44.180 --> 01:12:47.200
It combines an audio
track and an href track.

01:12:47.460 --> 01:12:50.740
The href track loads
HTML pages into the top frame,

01:12:50.740 --> 01:12:52.700
synchronized to the narration.

01:12:52.700 --> 01:12:55.130
The tour is controlled by the
audio movie playing in the

01:12:55.130 --> 01:12:56.700
frame at the bottom of the page.

01:12:56.700 --> 01:13:01.400
You can pause the audio movie at any
time to explore links in the upper frame.

01:13:03.520 --> 01:13:08.440
This is live HTML and it's being
driven by an href track in a movie,

01:13:08.440 --> 01:13:10.230
which is unexpected.

01:13:10.230 --> 01:13:13.330
I think we have a bug
to report to Apache.

01:13:13.330 --> 01:13:16.170
Maybe I'll open this in Exploder.

01:13:19.760 --> 01:13:22.510
Here's a tricky thing that
browsers sometimes do.

01:13:22.890 --> 01:13:27.020
It's actually downloading
the movie from the hard disk

01:13:27.090 --> 01:13:28.760
to a cache on the hard disk.

01:13:28.760 --> 01:13:31.940
That's another reason why you might
sometimes want to use QTSource,

01:13:31.940 --> 01:13:32.630
don't use browser.

01:13:32.700 --> 01:13:36.010
If you're distributing large
movies on a CD and you find that

01:13:36.020 --> 01:13:39.760
you just try to open the movie,
the browser thinks that the movie is

01:13:39.820 --> 01:13:44.240
coming from the web because it's not
really very intelligent sometimes.

01:13:44.640 --> 01:13:47.820
It's trying to load this
high-bandwidth movie from the disk,

01:13:47.820 --> 01:13:50.370
put it into a disk cache,
play it out of the disk cache.

01:13:50.370 --> 01:13:52.640
It's basically doing three
times the work it needs to do.

01:13:52.640 --> 01:13:55.560
If it's a high-bandwidth movie,
it can choke or take a very long time.

01:13:55.560 --> 01:13:59.070
If you use QTSource, don't use browser,
that avoids that.

01:13:59.080 --> 01:14:00.380
Bring the sound back up.

01:14:00.400 --> 01:14:01.510
Okay.

01:14:05.220 --> 01:14:07.100
So this is as this movie plays along.

01:14:07.100 --> 01:14:11.770
The sample content for Chapter 3,
"Bust a Move." So that's just

01:14:11.790 --> 01:14:18.100
to show you a little bit of some
of the power of a HREF track.

01:14:18.400 --> 01:14:20.390
Other questions?

01:14:22.800 --> 01:14:24.560
Are these examples on the website?

01:14:24.640 --> 01:14:26.140
Some of them are on the website.

01:14:26.140 --> 01:14:27.660
They are all on the CD that
comes with the book.

01:14:27.690 --> 01:14:31.050
And I'm putting more of them
on the website all the time.

01:14:33.340 --> 01:14:36.860
The new edition,
the third edition with QuickTime 1

01:14:36.990 --> 01:14:41.360
now and 6.3 in a couple weeks,
we're just revving the CD as we go along

01:14:41.360 --> 01:14:43.000
and we'll be posting updates on the web.

01:14:43.000 --> 01:14:46.260
You can order it now from the
Morgan Kaufman booth here at the show.

01:14:46.310 --> 01:14:49.000
They'll give you 20%
off and free shipping.

01:14:49.000 --> 01:14:51.980
I think it's expected next
week or in a couple weeks.

01:14:52.760 --> 01:14:53.600
Two weeks.

01:14:53.610 --> 01:14:54.840
Okay.

01:14:55.220 --> 01:14:55.790
Real soon now.

01:14:55.840 --> 01:14:59.000
Male #1: Similar to the last
thing that you showed,

01:14:59.020 --> 01:15:04.940
are you able in the skins to
embed like HTML web functionality,

01:15:04.940 --> 01:15:10.040
kind of like a little mini browser,
if you will, inside of the skin that

01:15:10.450 --> 01:15:11.670
interacts with the movie?

01:15:11.940 --> 01:15:14.920
Kind of the way this movie
interacted with the page?

01:15:15.040 --> 01:15:15.370
Yes.

01:15:15.460 --> 01:15:17.300
The short answer is yes.

01:15:17.300 --> 01:15:18.230
And we're out of time.

01:15:18.330 --> 01:15:19.010
Thank you very much.