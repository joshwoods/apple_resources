---
Title:  Produce a Listening Party with QuickTime
Year:   2003
Web:    https://nonstrict.eu/wwdcindex/wwdc2003/728/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Good afternoon, ladies and gentlemen. Thank you. You're in the How to Produce a QuickTime Listening Party session. And basically, the concept of an online listening party was derived from the idea that bands and labels would invite a number of folks to create an event out of the release of an album. And with the sort of advent of streaming live on the web, it's translated off as a marketing vehicle and a way to sort of have fans listen to records.

We're lucky enough to have several great speakers today, some who flew from Los Angeles from Warner Records, and some other folks from our QuickTime team that delivers a lot of listening parties for labels, as well as one of our server engineers who's going to give you a sneak peek into how this is going to be even easier and better. We're going to save QA for the end of the show, and if you do want to ask a question, please use the microphone as all of the questions need to be translated into Japanese, and we'll be happy to answer them. Thank you.

[Transcript missing]

Glenn went a little bit of what a listening party is. Going back a little further, the olden days, they had record release parties. And it would be an event basically for industry people, retailers, media, to get them all around, to liquor them up and hand them copies of the CD or vinyl at that time, and get a good word spread about the release.

The industry doesn't make quite as much money anymore, so I think that goes away. And it's also probably not that effective a way of marketing your product. So with the Internet, getting the actual customers to be involved in the record release is a pretty good thing, rather than the people that are going to be getting the CD for free anyways. So there's two basic types of listening parties as they've evolved into today. One would be for longer duration kind of exposure.

And if we could go to... The Dev Machine One. Example of this on our site is a new artist, a product by an artist called Weekend Players, came out earlier this year, end of last year. And it's not going to get any airplay, MTV is not going to play it, but it's the type of thing where we feel if a customer can listen to it enough time and really get into it, it's a really good groove.

It's been persistent on the dance charts and people are really liking it. But it's not the type of, it's not a huge event. It's the kind of thing that we really want people to be able to come whenever they want to, listen to the album in full, and really get into it. And so when you go to this site, the Listening Party player will pop up automatically. You can listen to it. That's not good. It puts you around tracks. You can hear the entire thing played.

[Transcript missing]

Or I guess go to the Apple Store and buy it for $9.99 probably. Though, this is hip-hop and you probably couldn't find it there. The way we produce and present these things, the longer term experience, we do the track by track. We really want you to be able to get into the music. And it's been very successful for bands like the Flaming Lips was an example of Warner Brothers Records, I think.

And I'm very, very happy with that online listening party where people can come at any time, listen to the entire album, track by track, pick the tracks that they wanted to hear. And it really helped grow the grassroots of the Flaming Lips release and the sales grew and people found out about it. It was a really good way. What we generally do on rhino.com where it's more of a just, hey, these are songs you already know probably.

Here it is in a good collection, listen to it. We create one stream, one file. It's not track by track, it just streams from the beginning to the end. We tell you what the tracks are in the listening party, but because of, it might be a six CD box set that we're doing a listening party of and that would be a very, very large streaming file. So we'll pick out 10 to 20 tracks and tell you what those are and then you can click on the next one. And you can click to the product to see what the full track list.

Another reason why it might not be a full track list in a listening party is the artist doesn't want you to hear everything. Or in our case, there's often licensing issues where one track is owned by a different company and they won't allow us to put up that track in a listening party without going through complicated legal maneuvers. It's just not worth it.

In terms of promotion, how we get these and in general how it's out there, we've got our own internal email lists, genre of the store. We go to partners or purchase email lists. And then we also try and integrate the best we can with other on-site events or on-site communication, and then any off-site communication that we can to tell people about it.

The thing of particular interest is the lessons that we've learned We've been doing these for the past four years or so, five years. It's very important to pay attention to ROI, to return on investment. And there are a bunch of different ways to look at returns of listening parties and all online opportunities.

There's the basic one, the product exposure, just letting people know that it exists. So that the next time they're in Best Buy or Tower or Walmart and they see it on the shelves, they spot it, they recognize it, they're interested in it, they'll go and look at it and hopefully buy it. Of particular interest to us is brand awareness, because as Rhino.com, as the collection of the catalog, we want people to know about Rhino.com. almost as much as we want people to know about the individual product.

We want people to know more about the store and the entire catalog that we've got. We want people to return to our website, not just for this promotion, but for anything else. We want to gather email addresses. We want to make this sale. We want return sales. All of these things aren't that hard to track, but they're generally forgotten. They're generally not considered when a listening party is created, and oh my God, we got it out, and 50,000 people came in to listen to it. Isn't that great and wonderful? We did a promotion.

that, due to circumstances, happened to be promoted by Apple for a little longer than we could have even hoped for. And we got a ton of traffic in. We didn't make any sales. There were other ways that we valued it so that it was a profitable promotion for us in sort of our soft returns.

But these are the important things to know about because production costs and hosting, streaming costs, you know, having a ton of people come listen to your album ain't necessarily a great thing if you're not making any money off of them or not converting them, not converting that stream in anything that you value at all.

You know, at the end of the month, this very large hosting bill for people that don't remember the album, will never come back, never buy it, you know, it might be great to be able to tell your boss in a marketing report that 50,000 people a day came in and listened to something. But it's even better to say that--and that converted into 20,000 email signups and then 10,000 return visits and 3,000 purchases and so on and so forth.

And what we found is very often a much smaller but far more focused promotion is a lot more effective than creating this big event for the sake of creating a big event and telling all these big partners about it and getting Yahoo and Apple and everyone else to get all excited about it and get in front of millions of people that couldn't care less and just have no reason to be interested in what you're trying to promote. You'd be far better off spending a little extra time finding the people that want this and finding out what they actually want from it.

And it could be what we found in some cases, the real hardcore fans of a particular release that we've got, they don't need the entire Listening Party. They know most of the songs already. They need other information. I don't want to stand up here and say that the Listening Party is a bad idea. But it's definitely one of the things. One of the things that we've learned over the years is just having something up and going is not necessarily a good thing.

We think the next step in new media, record label new media marketing is to be able to figure out your returns and what's effective and what's not effective. And so that we stop wasting our time and do things that are really worth it and worth it to the fans and finding out what they want. And... And that's what's valuable to them. So... That's it for me. And then... George Lydecker, part of Warner Music Group Studio Services. Thanks, man. Thank you. If I could have the -- oh, we've got it already. I think we're good. We're good. We're good.

Hey, that's me. I'm George Lydecker. I'm Senior Director of Studio Services for Warner Brother Records, now Warner Music Group. And I'm going to give you kind of a little bit of an overview of what's behind the covers on preparing the content that these people need for doing listening parties and to do all the other content, audio content. We're in charge of preparing all of that. So I'll give you a quick walkthrough of that, of our current content creation process. By the way, our group also created all the content that you're using on the iTunes, at least from the Warner Music Group perspective.

Part of what we do is that our audio ingest process is currently integrated with the manufacture of physical product as well as all of the online product. Everything we do is 100% QC'd and 100% listened to. We feel that the quality of the audio is very important and that every encode and everything that we ever produce, if it's not of the best quality, it's not good for the consumer.

The other part of it that most people don't think about when they're making content is the accuracy of the metadata and all of the associated things that go along with it. And part of what we have to deliver to anybody in the form of online content is all of the graphics, all of the album art, all of the metadata, the track listings, the UPC numbers, the ISRC numbers. All of those things are very important that go along with it.

In an earlier session, we were talking about enhanced CDs, and there was a complaint about liner notes. We're strategically placing ourselves in a position to have that content ready for when people ask for it, so that if there's liner note data, if there's other information, ancillary information, we can get to that.

Oops, hit two of them. Sound samples are created. One of the things that's unique to us is that we actually hand listen or listen individually to the sound samples. We have an operator that actually selects the hook or selects what he feels that the listener is going to identify as the best part of the song, and we actually drill down to that and then create the sound sample for the 30 seconds around that.

Sound sample creation is also integrated into our supply chain as well. At the point that we create the tape masters or the audio masters that are going to create our content is at the point that we also create the sound samples. Because of that, the sound samples are in addition inspected 100% so that we know that the quality of them are just as good.

I wanted to speak a little bit about AAC as a quality encode. We are so pleased to have Apple and to pick MPEG-4 and AAC as the codec of choice for a couple of reasons. One is that we have a lot of legacy content because we've been using AAC and we think it's a great codec.

We've been doing listening tests, we've done double blind tests with it, and it's probably the best codec you're going to get as a near CD experience, and it just keeps getting better. So we really like the fact that they've picked that and that they've picked MPEG-4, which is essentially a standard.

The other thing is that as I say, it does compare well as we've done listening tests with the waves at the higher bit rates. We're currently encoding at 128 bit rates for a lot of the stuff that we're now delivering. We've also investigated newer and newer versions, and they are getting better and better, even at the lower bit rates. We've done some extensive testing of AAC+, and we're now looking at the point at which that may be integrated into our electronic supply chain. It's performed very well for a lot of our tests.

Future Development. We'd like to see more developers take advantage of using command line capabilities of Mac OS X. That's another great thing, is that we're really happy with Mac OS X with the BSD Unix shell in there, so that we can have command line access, command line executables that we can use to do massive encodes and stuff like that. It's been really good for us so far. They will help other content providers create lots of content. What we want to see is just a lot of content out of there that's available for people to get to.

We're working on, and we would like to see, the development of tools that will allow the conversion of legacy AAC content to QuickTime. We have a lot of AAC content that we've created for other vendors like Liquid and others like Music Match and stuff like that, where we have AAC content that we could convert to MPEG-4 and QuickTime 6 content. We want to get that out there as well.

This is a couple of quick shots of our content preparation team. This is where we do 100% listening of the audio to check the WAV files. It's one of our listeners. They go through and check off all the WAVs, and then they also make sure that the UPCs, the file name is correct, and that the metadata is correct as well on that.

This is Eric is listening to and creating the actual sound samples. He picks the hook and the sound sample, edits it down to 30 seconds, put in the fades, and creates the individual sound samples. And as you can see with that nice G3 there, we use Mac hardware as long as we can.

And the thing is that it does have a long, wonderful life because we can use, we've used some of our older machines forever. And this is master preparation in this case. I think this individual is using Pro Tools. Most of our professional audio tools or Sonic Solution Pro Tools are all Mac based.

As well as our video encoding, we do all the video encoding of music videos in our area. This is one of our video encoders. This is Julie doing one of the music videos which goes into our asset repository. It does the video encoding. We feed it in from our video room, which is just out of sight in the room next door, through SDI off of a DigiBeta into a CineWave, and then do our subsequent QuickTime encodes from there.

And this is our massive encoding engines. We've got a lot of 1 GHz. This is only part of it. 1 GHz CPUs. We're starting to integrate some Darwin machines into this to do encoding for QuickTime, MPEG-4, and other stuff that we can deliver to Ben. Ben and I are anxiously trying to get down the road and doing all of this. Next to that, which is just out of sight, we have our own Cisco switch, which fiber connects to a 35 terabyte server upstairs where we load the content onto.

But anyway, that's just a quick look at the stuff that we're doing and the stuff that we're creating to support listening parties and to provide the content that's necessary. So I'm going to turn this over to Ryan. He's going to go over some of the details on actually creating the listening parties. Thank you.

Well, now that you know that listening parties are a great idea and that AAC is awesome, let's kind of go over what the process is to make these happen. I'm going to talk a little bit about the encoding process and some of the tools involved at all these steps. The encoding preparation, posting, and the serving side of things. So first, let's talk about encoding and hinting.

So, of course you all know that the QuickTime player does an excellent job of encoding AAC. Actually, you can even use a little tool called AppleScript. And start scripting it and create your own poor man's version or smart man's version, if Sal corrected me yesterday, of Cleaner. So, these things are actually available on Sal's website to download and encode all of your audio.

Of course, Cleaner, so it's a great version to do if you have video especially involved and do pre-processing and handle quite a bit of all your processing needs. Compressor, our own little tool that integrates very well with Final Cut Pro. and iTunes. So if you're going to do strictly audio, the encoder for MP3s and AAC in iTunes is incredible.

So it's a really great way, and especially since it includes all the metadata on the file names. It's a good thing to do. And then there's this nifty little tool called Qt Media. This is actually included in the next version of OS X Server. It goes along with QTSS.

It's a command line tool that you can use to automate all of the hinting, the fast starting, and annotation data of any QuickTime media. So it's a really neat thing to use. And so you can execute a Perl script or whatever you need, a shell script, to make this happen if you have large batches of data.

And it's interesting to note this. When you actually create media, most people have a real problem when they try to receive it from a server. They get a 415 error. What is this thing? Well, you get this error if you don't actually hint your media. So Apple Script is a great way to do it. If you haven't already done it to your media, you can use a quick Apple Script from a sales website to do a batch hint of all your files, or you can use that QT Media, which is really neat.

So now let's talk a bit about once you got these files, what do you do with it? You got to put it on a server of some kind. So QGSS or Darwin handles this well. They're both free, available with N2QGSS pre-installed in Mac OS X server. And DSS is the Darwin version, the open source version of our server that's available for free on our website. And it's available for, I think, pre-compiled for NT and Linux and all kinds of other fun stuff.

You need some kind of FTP software? Pop them up on the server. And a web browser. That's all you need. Once you've got that, you're done. So that with QuickTime Pro, and you've got a complete encode solution, and you're ready to go. So let's talk a bit about the preparation and the posting of the process. Once you got these files, you got to throw them up on the server using your FTP software.

You put them in the, on the server, you put them in your library QuickTime Streaming Server directory. And now what? What do you do? Well, it's really simple, just a couple of clicks. I'm just going to go through it here. You select the playlist. You want to start a new one.

It takes you here, you click on the New Movie Playlist button, link, and this is the last step. All you do is you give it a name, you select the play mode, and there are three play modes. Sequential, which steps through your whole list of items in your playlist one at a time, but then stops the playlist once it's done.

Or there's sequential, looped, which does the same thing, but it loops it at an infinite item until you decide, hey, enough of that. And then there's the random weighted version, which you can also set the weight in the playlist. And that's that little column on the right there. You can say, I want to play this 5, 1, 2, up to 10.

And basically, that weights it in the list, and it plays it randomly based upon that weight. So if you have a 10, it's 10 times more likely than a 1 to appear in the playlist. It's very handy to do if you're going to actually do this for a long time. You can even do a radio station that way, should you so desire.

And with the latest version of QuickTime Streaming Server, you can upload and change the playlists on the fly, which is kind of nice. So you really can get a kind of a radio way of-- you could create your own radio station. A number of college stations have actually done this.

It's interesting to note this mount point thing. This is actually the most confusing thing, perhaps, of the whole process. This is what you're going to call, basically, the link to your playlist. And I'll show you exactly how that plays out here. Say you have a server named Dr. Evil.

This would be, if you created an Interpol playlist and called it Interpol.stp as your mount point, this would be your link to your playlist. Really pretty straightforward. You type that into the QuickTime player in the open URL, command U, and you'll be able to receive it, no problem, if you've already hit start.

Which, all you have to do is hit that play button, and you're done. You're going. So it's that simple. I mean, it's really basic. And this is basically, it becomes live. So it's recorded media that you can serve out, and it's streamed so people can't randomly access the list if you don't want them to, which is quite nice.

So let's talk a little bit about the delivery, what actually happens after this. You have to prepare it in some way to make it actually presentable to people so they can see it and have an enjoyable experience, especially if you have an audio only playlist. You want to have some kind of visual experience.

So you need a couple of tools. You need Make Ref Movie, which prepares - it's a free tool on our website, and it just creates a Ref Movie, which is a way to put one link on your web page and based upon the selection of the user, they say they have a 300 kilobits - they can receive up to ISDN, say. So they can - it figures out which bit rate they should get based upon what they've selected. So if they have that ISDN, they can get a 100k stream, it feeds them a 100k stream.

That simple. And I'll go a bit into that in the next slide. Apple scripts, like I said, on Sal's site - there's a whole bunch that help you with preparation of the media after you have them on the server, the Ref Movies and add annotations and such. And also the Nkuchi StreamSplicer, which is another free tool that we have that allows you in a live stream, so even if you're using Broadcaster, if you have a 28k stream and you want to have a video experience, you use this tool and it puts that onto the stream for you. And you use that on Ref Movies, not on the media itself.

So then you create your ref movie. So I've got three links here. I have a 56, 100, and 300K version of the stream. And you can have an uber ref movie, a ref movie that figures out, that's the one you put on your web page. It figures out what bit rate you've got and gives you the stream. So that points to three other ref movies in this case that points to the SDP files. So those three ref movies in the middle have the links that are above.

And the reason I do that is it kind of, you don't have to ever update the uber ref movie. You can just leave that alone. You don't have to change your website. You don't have to change anything. You just change the files that are on your server, which is kind of handy.

So then you have to put on your website. Well, there's this nasty, nasty tag named the object tag that allows you to get around the whole IE not using Netscape style plug-ins. So don't worry about this. There's a link later on that tells you where to get all this information and how to put it together yourself. But this is what you put into your web page to basically launch the QuickTime player from your web page or launch the QuickTime plug-in.

So now there's just a couple delivery options I want to go over. See, if you have an audio-only stream, say you want to add some annotation data, and you want to display that alongside. Well, you can stream QuickTime-- in QuickTime, you can stream text tracks as well. So that's what this radio station, AV Deck-- they do an indie radio out of England-- they give you some annotation data along with it, and it changes with every song. So it's really kind of neat.

Or you can throw in some video tracks, like I said before. You can put it in and put it in with the stream itself so that it changes with by song or anything like that. It's really quite nice. You get some wonderful video experience. And then also, you can put on top of this with QuickTime an href track.

So if somebody were to actually click on it, you have a button on there that says, hey, click here to buy now, or click here to see the website or listen more or whatever you want. They can click on that, it launches a web browser and puts it right next to it.

It's a really neat experience. We actually have that in the QuickTime player. You can--we do it all the time. If you--when you launch it the first time, it comes up with something we call the QTPix. And it'll--you can click on that and it'll take you usually to the website or to the Quick--iTunes music store, anything like that. and now I'm going to bring up John Anderson here to show you what's coming next with QuickTime Streaming Server and some great tools that we have.

So as he said, I'm John Anderson. I'm an engineer on the QuickTime Streaming Server team. And what I'm showing you today is QTSS Publisher. And basically, this is a way to automate a lot of the things that Ryan was just kind of talking about. So, I mean, you can go through and you can make the ref movie yourself. You can make sure that the movie is hinted. You can go through and create your web page. Make the object tags with all the embed tags inside of them by hand.

And, you know, I'm sure you'll go home with a smile on your face at the end of the day. But there will be an easier way. And that's the publisher. And so I'm going to go ahead and start this up. Now, what this does is you run this on any Mac on your network or basically any Mac that has access to your server. And you connect to your server.

And then in your library, this is very similar to iTunes. So in your library, you can see a comprehensive list, basically, of all of the media that's been uploaded to your server. And if you want to upload something new, then all you do is just drag it up from the Finder.

And you can pick where you want it to go on the server. Now, this is a JPEG, so I'm not going to bother uploading it. And you can also see your library both in hierarchical view, and you can see it in list view as well. So lots of neat options there. So I'm going to open up my notes real quick here, so I don't get off track.

The next thing that we're going to do is, I'm just going to go ahead and click on one of these files here. We'll go to Losing Grip for example. We'll go to Settings. This is actually a video file. But you can see in your settings here, you can edit the movie annotations.

Now this is a beta. There's going to be more annotations in the final version to match basically the annotations that are in the QuickTime player. This means that instead of having to download a movie and change the annotations, or instead of having to use command line tools or something like that remotely, you can just go in right here and change the annotations and apply them. There's also this URL tab. And what it does is, basically what you're looking at is a repository. So anything you put in here is not immediately publicly available.

It's basically there for you to work with. So you can go in and once you check this media is available for streaming checkbox, then you get a URL. So there's no question about like, you know, how do I get to this movie? What's the RTSP URL for this movie? It's right there. So I mean you can click on it and test it and see the movie.

I'm evidently not getting audio. Never mind. So... I think I may be working without notes. The next step I'm going to do is I'm going to look into some of these playlists here. You can see there's media playlists, which you would use for MPEG-4 or AAC files. And of course there's MP3 playlists if you want to do shoutcast streaming. But you want to do AAC. I've just determined that for you. So what I'm going to do here is I'm going to create a new media playlist, and I'm just going to call it Listening Party.

So that's going to pop me over right away into the settings for the playlist. And I'm going to go into this hierarchical view, just so I can go into my Liz Phair CD here. And I'm just going to go ahead and select the whole thing and drag it down there.

And again, you can set the play mode and everything. It's got all the features that the web admin has. But in addition, you have this option here, which is you can broadcast manually, which is where you just click start at any given time and click stop when you want it to stop. And you can also broadcast at a specific time. So you can actually make a listening party available at, in this case, a few days ago at noon.

Or you can run it weekly. So those are kind of neat options. And it saves you from having to write a cron script or something like that. So... So one thing that's important to note as well is that, like I said, this is all-- unlike when you put things in the Movies folder to add them to Playlists, these are not available on demand.

So you can actually make it so that movies are available only through this Listening Party. And once the Listening Party stops, then the movies are no longer available. So that's a nice feature as well. And it's the same thing here. I'm going to go here and manually start the Playlist.

So, should be broadcasting at this point. And you'll notice here I go to the URL tab, and if I click on that, then I should... So you can hear the playlist. It's in progress. It's a live broadcast. So yeah, I mean, you could take that URL and use it to make the ref movie and create all the tags and everything like that. But that seems a bit inconvenient. So what we're going to do here is we're going to go to the Links tab.

And what you can see here is basically a list of everything that's publicly available. So every movie that you've made available for streaming, every playlist that you've set up is going to show up right here comprehensively in this links view. And over here in the display tab, this basically describes how you're going to embed this in the page. So, for example, I could go in here and I could say, just autoplay it. As soon as they open this particular web page, start playing the stream.

There's a bandwidth tab that you can go in here and basically set up a multi-bit rate breath movie. So this is what he was talking about where you can actually set up different streams for different bandwidths. And then there's an HTML tab. And so if you have your favorite HTML editor already set up, like BBEdit or Dreamweaver or whatever it is that you use, I don't want to offend any developers out there, I'm going to go ahead and open up BBEdit because I have it on here. And I'm going to make the world's simplest web page. So I'm just going to say new HTML document. I'm not even going to title it. Let's take this code and drag it right into BBEdit.

Unimaginative Name, and drag it onto Safari. You see I have a web page with that content already embedded in it. So that's pretty cool. But the next step is to be able to take that and run it through a template, and get an entire web page out of it.

And the engine that we use for this is an Apache engine. The standard is XSL. So it's a very powerful standard. You could even have it make a web page and a PDF file to go along with it if you wanted to. I mean, there's lots of neat stuff you can do with that. And so I'm just going to go ahead and highlight this listening party.

And I'm going to go back to the Display tab here, and change it to say I want to open the QuickTime player. We like it when things open in the QuickTime player. And I'm going to take this JPEG here that just says click here to listen. Again, not terribly imaginative, but whatever.

And so we've set it up differently now. It's going to embed it in the page a little bit differently. And so now what I'm going to do is just click Make Web Page. And I have a template set up called Listening Party. And I'm just going to call it-- I have no imagination here. I'm going to call this Listening Party.

So that's the name of my page. I think I'll actually-- yeah. So what this is doing actually now is it's running it through that Apache XSL engine. It's creating all the ref movies on the fly right there. And now we have a page. And so I can click on this, and it will open the stream in the QuickTime player, hopefully.

Okay, so we're running a beta OS, so I'm going to go ahead and force the QuickTime player to quit, and give that another try. And if it doesn't work, then you get the idea. Yeah, apparently I needed more creative names. But I think you can probably use your imagination and realize that you would be hearing Liz Phair right now if you weren't seeing the spinny cursor. So that's... That's the publisher. Kind of a cool tool. And that's coming out with Panther. So I hope you all look forward to seeing it. And who's up next?

That's the way it is by the sort of fifth session that I've hosted. That's the first crash I've seen, so you're fine, John. That's okay. Anyway, thank you. That was really good. And clearly, you know, sort of we use the context of a listening party with albums and songs and either the longer display that Ben was talking about for albums that need exposure or for the newer albums that are events.

But this is obviously applicable to the audio and video that makes up a course at higher education and K through 12 and in learning institutions. Any sort of series of assets can be played sequentially or randomly or in a weighted random way to do that. So now what I'd like to do is I guess invite, you know, all of our speakers up and we'll try and do a Q&A.
