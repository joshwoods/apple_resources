---
Title:  3GPP: Myth versus Reality
Year:   2003
Web:    https://nonstrict.eu/wwdcindex/wwdc2003/717/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Welcome to 3GPP Myth versus Reality. This is session 717. My name is Aliza Hutchison. I'm the QuickTime product manager in the QuickTime product marketing group. And I'm joined up here by David Singer, who is an architect in our QuickTime engineering group. We're both actually going to do the session today, so I'm your host and a speaker along with Dave. We'd like to take general questions at the end of the session, but we're happy to take some clarifying questions throughout the session as we go. So let's get started.

So hopefully many of you were able to attend our QuickTime State of the Union yesterday with Frank Casanova, the Director of QuickTime Product Marketing, and Tim Schaaf, the VP of our Interactive Media Group. We're going to build upon a lot of the items they talked about in that session if you were able to attend. If you weren't able to attend that session, we would like to introduce you to mobile multimedia.

We'd like to go into a lot of detail about the standard, and then we'd also like to talk about QuickTime's support for the mobile multimedia standard, which is 3GPP. But before we actually get into a lot of detail about mobile multimedia standards, I'd like to spend a little bit of time talking about standards in the telecommunications industry.

So if you look at cellular standards today, I like to say they're sort of all over the map for those of us that aren't really familiar with them. And this chart is intentionally hard to read. I don't expect you to be able to pick out each little country and say, "Ah, I understand what standard they're using." The radio network standards generally fall into two categories. There's sort of a CDMA family of technologies for the radio networks, and then there is a GSM technology family.

And what you can see here is that distributed across all geographies, some countries tend to be towards one. So Europe has adopted predominantly the GSM family of technologies. Then you'll see countries in Asia that have primarily adopted the CDMA family of technologies. And then you'll see a mixture of both, and that's what we have here in the United States.

But all of these technologies have evolved over time, and we talk about them in terms of generations. So the first generation technologies started with both CDMA and GSM, and then I've also put on here a column for TDMA, which was a first generation technology that was developed here in the United States by AT&T.

But as you progress up to the 2G technologies, you're actually talking about not just voice, but adding a data layer for the radio networks, and those have some different acronyms that you've heard about before, like GPRS, for example, and that's where the GSM and TDMA technologies actually came together under that GSM family of technologies. As we go -- oh, and I went the wrong way.

As we progress forward, you'll see that with the 2.5 and 3G technologies, there's a whole other set of words that people use. People use to talk about the technology, so you progress into what's called CDMA 2000 with different 1X versions. Then you also progress into what's called UMTS technologies and a similar technology that's built on top of that in Japan, which is called WCDMA. So we don't want to spend a lot of time on these particular technologies. The idea here is there are really two families of generation technologies as you move up in your data speeds, and they exist in different places across the world.

So when you talk about speeds, you're probably talking in the 2G somewhere around 9600 to 14.4 kilobits per second. As you go to the 2.5 technologies, you're looking more at like 28.8, and this varies. And then as you start with 3G, the definition of 3G technologies is to start with data rates of about 144 kilobits per second, progressing all the way up to forecasted speeds between 1 and 2 megabytes per second.

What is 3G? 3G is the foundation that you hear about all the time. It's what you think you need to have for mobile multimedia. Let's just break it down a little bit so that we understand some basics. First of all, to have a 3G technology, that bandwidth needs to be licensed by carriers. The carriers bought the bandwidth. Then they had to build the high-speed packet switch radio networks.

When those things are in place, then you can have rich multimedia services that you can view these services through these mobile media devices that are now, some of them are now on the market today. But all of this has been surrounded by a lot of hype. We've been hearing about 3G for a long time, and so of course that's produced a fair, oh God, I'm so sorry. Here's the clicker. Here's the clicker. Which way do I go on the clicker? That one. Thank you.

This has produced a fair bit of skepticism. Just when you've heard about something you've heard about and heard about, you don't see it immediately. There's a lot of people that didn't really think that this was going to work. You've read things, I'm sure, that says the operators that purchase these bandwidths, they're destined for bankruptcy. Is 3G just another internet disaster? Those are some of the myths that we wanted to talk about today.

And then really talk about the reality of some of those statements. So the realities are that all of these services that can deliver mobile multimedia don't actually rely on complete network build-outs of 3G, if you will. So, for instance, a lot of mobile multimedia can be downloaded just fine, or messaging services are working just perfectly on 2G and 2.5G networks that we even have today with GPRS and some of the major cities in the world. Close the microphone. United States. Wow, that's a lot louder.

Okay. Then the other thing we wanted to talk about is that not every carrier went bankrupt. So yes, of course, there were highly publicized auctions for some of this bandwidth where people paid lots and lots of money, but not all countries paid tons of money and not all carriers bought their competitors to get into this space.

So not everyone went bankrupt. And finally, we believe and other people believe that the services will lead the network buildouts, just as it did with Internet technologies where we were all just perfectly satisfied to dial up on our modems to view the Internet and see how that worked.

But because we found really valuable services to go and look at on the Internet, the public actually created the demand for higher speed networks and now we all have access to things like DSL and cable for broader bandwidth connections. And we believe the same thing will happen with the 3G technologies as they progress.

Some other doses of reality here. I put a couple quotes up and a couple statistics. But there are very positive industry analysts' reports about the rollout of 3G networks and also the business that there is, there truly is, in 3G mobile multimedia. So you see numbers from IDC forecast of a $30 billion industry by 2006. So there's a real forecasted industry here. And there are real rollouts happening right now of this service that make it a reality for you as developers.

Now I'm going to hand it over to Dave Singer to talk about how this is really relevant for QuickTime. So we talked about those parts of the network that the operators have produced. What we're concerned of course about in multimedia is things like video playback, video recording, and being able to get content on and off those phones, being able to send a multimedia message to a phone, or maybe being able to load content off a web server onto a phone. And it's worth noticing that all those need just a handset and the service. They don't actually rely on reliable high-speed bandwidth.

So if you send a message or you do a download over a 2G or 2.5G network instead of 3, well it's a little slower, but you still get it. The only service that actually needs that full network build out, and a reliable one at that, is of course streaming. So that's one of the reasons we expect to see streaming lagging these other services, is that the operators have to both build out and get confidence with their network before they can deploy the streaming services.

So I'm going to talk a little bit about where the standards come from and what's in them. There are two major bodies developing standards for the 3G world. There's 3GPP and 3GPP2, imaginatively named pair of bodies. 3GPP stands for Third Generation Partnership Project. It's actually a partnership of quite a lot of standards bodies from all over the world.

And they're building on the GSM heritage of cell phone standards. And then 3GPP2 is building on the CDMA. the CDMA 2000 heritage of standards. The 3GPP is designed to provide a really high-speed network so that you can get interesting multimedia content to devices and do all sorts of fascinating, high-value, compelling services.

It's being adopted by a whole bunch of companies all over the world. So what we've got here is a variety of companies from handset manufacturers, operators, infrastructure makers, and computer people like ourselves. So there's a lot of support behind this standard all over the place. I'm going to go a little into what is in the multimedia part of the 3G spec. 3GPP standards obviously cover everything from the radio network and how you do modulation all the way through to the final services that you present to the user.

In QuickTime, of course, though I'm interested, I'm curious about the radio network, what we really care about is the multimedia services. So I'm going to focus in on that. And in there, we'll find that there's a package including speech codecs, general audio or music codecs, video codecs, there's a container file format into which you can put those, and then above that container file format there are delivery frameworks such as Smile 2.0, the synchronized media integration language, there's MIDI music, still images and so on that you can place into messages and into Smile overlays.

In terms of speech codecs, the primary speech codec used in 3G multimedia in the 3GPP world is AMR, Adaptive Multi Rate Codec. This is the codec that the telephone itself uses when it's making a phone call. It's adaptive because a 3G network can vary its bandwidth and when it's being used in a telephony context, the codec can then adapt to the available bandwidth that it's getting from the network. This means, of course, in QuickTime or multimedia terms, we can treat it as a variable rate codec.

It is a classic 8 kilohertz sampling rate telephony codec, it's a kelp-based codec. So it is optimized for handling speech. It'll handle all the content, but like you've tried, I'm sure you've tried the PureVoice codec, some of you in the QuickTime world, on general content, you'll know that speech codecs are not the best codec for handling music. It's adaptive in that it switches between various modes, and in those modes you'll actually recognize some historic codecs that you already know and love, such as the GSM full and half rate codecs and so on.

In the stable is also a higher sampling rate, richer sounding wideband codec that's optional in the spec. I haven't seen much of it happening at the moment in the 3G world, but there is a codec waiting in the wings there if you want to do higher quality codecs.

So you can do that with any speech. And those two can be packed in their own file format. There's a .amr file format which you can use, and a lot of the phones support that for recording voice notes or parts of calls in progress if you have a phone that will allow you to record.

In general audio terms, we're really lucky. We have the world-leading AAC codec. This is probably the best music codec out there. Recently, actually, there was a listening test on the internet. I don't know whether you heard. The one that you've got in QuickTime actually came out tops in the listening test between the AAC codecs available.

So you not only have the world-leading codec, but you have a world-leading implementation of a world-leading codec. What's in the 3G spec is the same simple version of MPEG-4 AAC that we're using, that's used in iTunes, and indeed is used in digital radio mondial and so on. So you'll find AAC is getting deployed quite widely across a whole variety of services, not just 3G. So this was definitely a forward-looking codec from the 3G group when they adopted it a few years ago.

In video codecs, there's a couple of choices in the spec. The basic mandatory codec is H.263. I'm going to give you profile and level numbers for those of you who are curious. I'm not going to explain the features of the profiles because I can never remember. I always have to look it up myself.

So the basic profile 0, level 10 is a basic H.263 codec, no fancy options and so on. Level 3 is, profile 3, sorry, is permissible in the spec, but it's not mandated. And then also available in the spec is MPEG-4 video, and you'll find some of the cell phones, but not all, implementing MPEG-4 as well.

Also in the 3G spec, I didn't show this in the overview slide, there's support for timed text. And actually, if you look at the specification, you're going to go, oh, that's awfully familiar. That looks like QuickTime timed text, and that was because I wrote it, and I'm lazy.

The 3G spec, however, is improved in quite a number of areas. It's simpler than the QuickTime specification in that we allow only keyframes, as it were. There's no difference frames. And it's modernized compared to the QuickTime implementation. So it's based on Unicode instead of Macintosh character coding, and it allows vertical writing and so on.

You get full alpha control for both your foreground and background colors. So in some senses, it's more powerful and more complicated, but in many respects, it's simpler. This allows you to do a lot of things in a single time. So in some senses, it's more powerful and more complicated, but in many respects, it's simpler. do subtitling, credits, karaoke, hyperlinks, and so on. And it's currently deployed in Docker mode service and handsets.

All those that I just talked about, the speech codec, the video codecs, the general audio codec, they can be wrapped in the 3G multimedia file format, which in turn was based on the MPEG-4 file format, which we know and love, which of course was based on the QuickTime file format. So if you were to open one of these 3G files, you'd go, I recognize that. It's got a move atom in it, and you'd be right.

So also in the 3G files, however, there is the intrinsic file type atom, which was introduced by the JPEG-2000 standards, and that allows you to mark a file as saying, which standards do I think this file complies to? Or in particular, what readers that implement particular standards should be allowed to play this file?

So you can say, I want this file to be playable both by an MPEG-4 player and by a 3GPPlayer by carefully marking the way you build this atom in the file. So there's intrinsic typing in the file as well as extrinsic from its name. or it's my own type.

The 3GPP2 standard also uses the same file format, which is kind of convenient to you. But they use, of course, their own suite of codecs. So their voice codec is one of them, they have several, is the pure voice codec that's already in QuickTime that you're familiar with. They chose Layer 3 audio rather than AAC for their general audio because of its deployment rather than forward-looking. But as I say, the same file format. And it's worth looking just for a moment at the evolution of the file format.

So way back in the midst of time when some of us were still sitting in our high chairs and eating soft food, the QuickTime file format was written in 1990 actually and published in 1991 with the first ship of QuickTime. And that was successfully used by the QuickTime group alone for quite a number of years until MPEG-4 finally decided that they really ought to have a standard file format. They never had for MPEG-1 and 2. And so the MPEG-4 file format was derived from QuickTime in the late '90s.

Well, that triggered a whole flurry of activity around the multimedia industry. The Motion JPEG group and the 3G group both looked at that and said, "You know, we could use that file format if we just changed the media types in there," just in the way that QuickTime has in the past. And so we built Motion JPEG-2000 and the 3G spec derived in a rather awkward way from the MPEG-4 spec because the MPEG-4 spec said, of course, that you had to use MPEG-4 coding standards and these people wanted to use something different.

Well, the committee eventually decided that this was a mess and that we really wanted a single file format again. So they said, "Why don't you guys get together and define a base that's going to be a base that doesn't talk about any of these coding standards that tells us how to structure a file?" That we're calling the ISO media file format. And that really is the direct inheritor of the QuickTime one because it's an abstract container.

And on top of that, we can now put MPEG-4 again, MPEG-4 version 2, and Motion JPEG version 2 are re-hosted, as it were, in the ISO media file format. And that, of course, allows other groups such as 3GPP and 3GPP2 to do the same. So this ISO file format, this family, is really becoming the de facto standard for multimedia containers in the industry.

Everybody's using it. In fact, there are other bodies here that I ran out of space to put little bubbles, so I didn't put them on this diagram. But, for instance, the SD Video Card Association is also using this file format as their standard for multimedia on SD Video Cards.

So where are these standards? How are they doing? The standards themselves are mature and published. So for example, if you were to look in the 3GPP world at the specification with the wonderfully mnemonic 26.234, you would find the specification for multimedia container file and packet switch to streaming and multimedia and so on. The formats and the protocols are specified and published.

And that includes specifications for messaging, email-like operation, download, HTTP web-like operation, streaming, and so on. But today I think you're going to see more downloading and messaging than streaming because the operators need to build out those high-speed networks, they need to get confident about them, and you need to be able to afford to pay for the bandwidth. Which tends to be a little difficult when they're doing their initial deployment because they're charging a lot of money for bandwidth.

So you'll see streaming coming, but you're going to see these other download formats leading the streaming standards by a little way. An interesting one coming up in the standards committee, if you care, is that they're actually working on one-to-many transmissions, so we can actually do multicast streaming at some point in the future, we hope.

So how do you get data on and off your phone? This is a question that we get asked quite often. And what we draw on you here is a complicated diagram which, like Gaul, is in three parts. At the top of the diagram, your local area, your office, your home or whatever. On your right, the cellular network, and on the left, the internet.

So one obvious way you can get content on and off the phone, of course, is locally. You may be able to use Bluetooth, infrared, a USB cable, a memory card, and so on, to move content from your personal computer to and from your phone. Once you've got content on your phone, of course, you may be able to send it as a multimedia message, like an email, to another person on the cellular network, if your carrier supports it.

So that's the diagram over there. Also, that same multimedia message, you may be able to generate one from your phone here and send it through a gateway to an email address to somebody out on the internet again. So there are gateways being built that will do conversion of multimedia messages to email. Indeed, they'll do it the other way sometimes, if you're lucky. Again, depending on your operator. You can sometimes generate an email over on your computer here and have it come through the gateway and end up as a multimedia message on somebody's cell phone.

Similarly, there are web browsers and the ability to use HTTP on some of these cell phones, and they can load content either through a gateway or off the operator's hosted network off a web server. So you may be able to put content in some suitable way onto an HTTP server and then access it both from your laptop machine and from your cell phone.

So you actually have quite a way of working with your cell phone and with other people's cell phones. And as I say, you're going to have to talk to your operator about what is possible in each of those environments. So with that, I'm going to turn it over to Aliza, who's going to introduce you to all the exciting work the engineering group did in 6.3.

So the natural progression of defining a standard hopefully is there will be tools that will be made available based on that standard. And Apple was very pleased to announce in early June the release of QuickTime 6.3, which provides support for the 3GPP standard with native support for AAC and AMR, MPEG-4, H.263 video, 3G text, and the 3GP file format.

Where this puts QuickTime is that now we have the first widely distributed 3GPP player for the desktop, we have the first low-cost 3GPP authoring tool, and we are the tool of choice for the world's first standards-based 3G network service with NTT DOCOMO's mobile MP4 iMotion service. So what does that actually mean? Dave talked through some sort of theoretical examples about how data could be moved back and forth.

But what's actually happening now? Well, as an example, we've been working with Docomo where their content, their professional content creators are using QuickTime to create content that then is distributed over their network to their mobile phones. And this, for example, is one of NTT Docomo's phones for iMotion that supports 3GPP playback.

Another example is that users that have one of these iMotion phones or any 3GPP-capable phone can capture content on their phone through the video camera. It can then be distributed through the network either now to the desktop using a QuickTime player or, of course, to another phone. The evolution of this will be that users can also just create content on their desktop that can then be mailed over the network to a phone for viewing.

So the thing that's very exciting about this is not only is QuickTime the first mainstream 3GPP authoring and playback tool, but all of the applications that QuickTime supports also now become instantly available to create mobile media content. So you see, of course, Final Cut Pro 4 on here, which now can create 3GPP content, and a host of other applications that are built on our SDK, in addition to the ones that Apple has, like iMovie, for example, now can all create MPEG-4 and 3GPP content.

So what does this mean for you? Well, hopefully what this means for you is that we've opened up, with this new launch of QuickTime, a whole new market for you to create tools for. And there are new customers that we've never talked to before and that maybe you've never had a chance to create products for. The customers now are operators. These are mobile operators that need tools for content, for editing, and for management.

We also have new content owners that want to get content onto mobile phones that maybe have not used QuickTime-based tools before. And in addition, we have a whole bunch of end users that have lots of content that they want to simply and easily create for mobile phone usage.

And where are the real opportunities? Well, we've been talking about Japan, and often people look to Asia to see what's happening in the telecommunications market. But there are real strong predictions for the revenue value there with mobile media services. And we've been talking about some examples. NTT DoCoMo and J-Phone both have 3GPP compliant handsets. DoCoMo has rolled out a full 3G network, and J-Phone is moving very quickly to roll out their network as well.

When you look at Europe, they also have a variety of 3GPP handsets that are available right now. This, for example, is the Sony Ericsson P800, which comes with a native 3GPP player on it. There's also been 3G launches by Hutchison in the UK, Sweden, Italy, Austria, which isn't on there, and Australia, which isn't in Europe, but close.

Finally, there are opportunities right here in the US. You can buy a Nokia 3650 today from several of these operators up here. I imagine that they'll soon be shipping some of these other mobile multimedia handsets as well with varying services and coverage as we progress in the same style as the Japanese market and the European market.

So an investment in 3G is an investment in these ongoing greater and greater bandwidth telecommunication technologies, and Dave promises me that there's something called 4G. Well, there are a variety of companies doing things that they're labeling 4G. It's not actually terribly well defined in the industry, or it may be variously defined well by various people.

You're seeing a variety of companies that are deploying high-speed, more data-oriented networks than the traditional cell phone networks, with some, at least, heritage from the 802.11 family in terms of how they do radio network management, and so, as I say, more data-oriented. But they're trying to get a reach much more like cellular networks. So it's a kind of a hybrid approach. Obviously, 802.11 airport, you've seen how many base stations we've had to put to cover just this building. There's no way you're going to build out a national infrastructure or something with a reach of that kind.

They have a very different cost and deployment model. So these are very different. These are not typically the traditional telephony-operated networks. They're more traditional operators or traditional telephony cost models and deployment. As I say, they're more data-centric than the traditional cell phone networks. In general, I think this is good news for those of us in the multimedia community.

As I say, it doesn't really matter to us whether you're using licensed bandwidth or unlicensed bandwidth, as long as we can get the bits onto the devices. So my belief is that we're going to see a whole mishmash of services that you'll be able to get at very high speeds on 802.11, at medium speeds maybe on some of these 4G networks, if you're lucky and they're deployed in your area.

And at quite decent network rates over 3G networks, again, if you're lucky and you live in Japan or they happen to get deployed in your area. So you're going to see these things coming along. But for the meantime, the big operators are rolling out 3G and particularly multimedia across very large areas, obviously entire countries or continents.

So at this point, what I'd like to do is give you a demonstration of using QuickTime multimedia and a cellular phone. And I'm going to choose an application here that's done absolutely nothing to warrant being in this presentation, and that they've done nothing special to support QuickTime 3G at all. The application actually is one that's worth knowing about in the first place.

It's called iView Media Pro, and this application is designed for cataloging and managing media assets. It has lots and lots of features. I'm not going to go into it. I'm not supposed to be advertising it here. It allows you to do version control and so on. And here I've taken a seminar that Frank and his team did and split it up into short clips. And so, for example, here's a clip where he's talking about... ...the world called 3GPP, Third Generation Social Publishing Project. Oh, the 3G standard. Well, Frank, thank you.

And if we look through the seminar, we can find all sorts of clips. Here's Rhonda and so on, and Frank introducing Stream. And you can even just check the clips right there in the window if you want to. This program actually uses QuickTime to help it with its cataloging. It has a lot of functionality built in as well, don't get me wrong. But they're using QuickTime here to play back these clips. And they also, as it happens, use the QuickTime APIs to the hilt, and that's why I'm demonstrating them.

So I'm going to choose a couple of those, the two that I just showed you. And I'm going to ask it, well, why don't you convert those movie files? And what they do is they scan to see what QuickTime exporters are available, and they offer them. So this application, I have to say again, was written and this version shipped before we shipped our 3G support.

But, man, it just works. And this is good application programming. And I encourage you, if you're an application developer, to do as well as this. So I'm going to choose export to 3GPP. And here we can bring up the settings. So here the choices we offer you are two of the... important 3GPP releases, where they allow different services, and the entity Docomo's own service.

And I'm going to choose release 5.1. Here, again, as I say, you can choose H.263 on page 4. I'm going to pick H.263, because I'm going to create content that I want to be widely applicable to lots and lots and lots of phones, and that's the mandatory codec.

176 by 144, that's a good size. I don't want it to be seen smaller than that, and let's hope the phones are that big. And in this case, I'm running a seminar, so I'm going to let it be speech content. And in this particular case, we didn't have a text. We're going to pick a text track. Pick the data rates.

You've seen this kind of interaction with our MPEG-4 export dialog. We can pick a data rate and the keyframes and so on. And in speech, I'm going to let it use all the bits it can. It's not as if a speech codec uses a lot of the channel, even when you allow it to really crank. And it's a mono content, and as I say, there is no text track.

Here we could set up to restrict distribution if we were going to an entity Docomo service, but we're not here. And I don't need this hinted for streaming. We will hint it for streaming, but in this case, I don't need to. So that sets the options. I'm going to choose a folder here to put them in. 3GP file sounds like a great folder name.

When I click choose, it runs the export operation on all the files I chose. So here it is cranking through. This is actually transcoding from MPEG-4 to H.263, so it's taking a little longer than if I started with base content. And if we look, we find we've got a couple of 3G files in that folder. Now, the other cool thing about this application is that they really did their homework. When they're given a file, if they don't recognize it themselves, they say to QuickTime, hey, could you do something with this file? And if the answer is yes, then they are.

Well, they allow you to catalog it as well. So actually, you can catalog the content that came off your phones or that you've actually coded ready for your phone. So here again is the same click, but now coded, ready to go out to a phone. Third generation partnership project. Yep, and here we are stumbling on the phone. So at this point, what we could do is take those and transfer them to a phone. So here we have the clips.

I'm going to pick one of them. I have here plugged in. You can just see it flashing blue if you've got really, really, really good eyesight. This is a Bluetooth adapter that I've plugged into the machine. It's somewhere way down here. And so we've got Bluetooth on this machine. And so if I drag this on top of the Bluetooth file exchange, then it comes up and it says, well, how about Frank's 3650? I happen to remember this once.

I didn't have to search for it. I have Frank's 3650 here. I stole it from him yesterday. And when we click send, it's going to say, are you sure this phone likes this kind of file? And I'm going to say, yes, I'm sure. And the phone goes beep and says, do you want to receive this message? And I say, yes. And you'll see the progress bar goes. And the phone and the progress bar goes. And the progress bar. There's nothing like working in a noisy radio environment to watch progress bars, is there? Come on. Here it goes.

and then when it finishes downloading... Man, this went like anything before all you guys came into this room. This is very cool. This is using a Bluetooth service, the standard Bluetooth file exchange service, which both we... So the phone beeps, I say show, and it comes up, and... Holy cow, it's the real one player. And yes?

So here we see wonderful interoperability. I can confidently claim we didn't write the player on this phone. You saw somebody else's logo. This is what it's all about. We're interoperating on a public standard, and as a result, we've got a wonderful wealth of opportunity. Somebody else wrote the player on the Sony Ericsson P800. Somebody else again wrote it for the Dockermode phones. And we're playing on all of them. This is why you've got a nice big sandbox to play in now. You've got lots of opportunity to go out there and create interesting content.

So, having got you all excited about this stuff, where can you go for more information? Let me go through some of that. So, obviously, the first place you're going to go to is QuickTime's own website, and you're going to find out about our MPEG-4 and 3GPP support, which you can find at www.apple.com/mpeg4/3gpp. Don't try and say that out loud yourselves. 3GPP specifications. Good news here: they're public.

Bad news: of course, 3GPP defines specifications for everything from radio modulation through all the numerous interfaces in the network, and you could learn how to build your own cell phone network if you read all those specifications, which means there's a lot of them. But they are public. You can find them at www.3gpp.org, their website. There you'll find, for instance, the AMR codec and file form--codec specified. The file format is actually specified by the IETF, believe it or not. You shouldn't need to read about the AMR codec. We've done that hard work for you.

We've got it implemented. But the 3G file format and the multimedia services you might want to look at, and as I said before, you might want to pull down 26.234. If you're really curious about the details of what you can do in terms of codecs and so on, I'd suggest you look at release 5 if you're intending to go there. MPEG-4 specifications are not public.

However, you can buy them publicly by going to the ISO website, www.iso.ch. "Ch" because they're in Switzerland. MPEG-4 is the 14496 family of specifications, currently up to part 12, which is the multimedia file format, the ISO file format part 12, and I think they've actually hit 14 or 15.

But the part you're curious about probably is part 1, systems, and maybe the audio part where you'll find the specification for AAC if you're curious. ITU specifications you can get from the ITU, believe it or not. They're an international treaty body, so they actually have an int domain name. They're www.itu.int, and that's where you'll find H.263 if you're curious, though you've had H.263 in QuickTime since I can remember.

There are related technologies. If you're excited about cellular telephony and what you can do with that and your Mac and your Mac OS X, obviously you should know about iSync. And I encourage you to learn about it. There isn't a developer session this week because it's an end user, not a developer technology. But this allows you today to sync up your contacts and your calendar really easily. It uses Bluetooth and other means of communication with the phone, but Bluetooth is the one that works beautifully, of course.

And Bluetooth allows you, as a developer, to do all sorts of fun things. Now I don't know whether you were here last night, but last night the Salin Clicker actually won Best of Show for the Mac OS X Design Awards. And that's a program that runs cooperatively between your Mac and a cell phone that has Bluetooth that allows you to control anything at all on a Mac OS X that you can Apple Script, which is very cool. And he did that because he knew how to use Bluetooth. So that was a great piece of software. You should get up on top of the Bluetooth technology if you don't know about it and you're a software developer.

With that, I'm going to tell you about the other sessions coming up today. Don't stay in this room. It's going to be dreadfully boring. They're going to tell you all about how to administer a server, for heaven's sakes. Instead, we have lined up for you a Swedish chef who's going to tell you how to cook up content for your own cell phones back in the room around the other side.

But after that, you should stay in there and listen to advanced QuickTime interactivity just to have some fun. The session that was going to be in here, Wi-Fi and 3G, has unfortunately had to be cancelled. So don't come back here for that session because it won't be happening.

Tomorrow, however, there's lots of fascinating QuickTime sessions. Come to the QuickTime feedback forum, of course, at 3:30, and tell us what you think about QuickTime, or what we ought to be doing, or what we did wrong, or what we did-- tell us what we did right sometimes, OK? And on Friday, there's the final QuickTime sessions.

If you have developer questions about QuickTime technologies, then obviously Guillermo is your man, QuickTimeMan@apple.com. And if he's not your man, he's really nice. He'll forward you to the right person. So if you've got any questions after the show, and that's the only email address you remember, don't worry, he'll put you in contact with us. And then of course developer, general developer information that Apple is in the usual places on the Apple website.

Don't miss the labs happening this week. If you're a content developer, if you're an application developer, if you're a gardening developer, hey, and you've got something to do with QuickTime, come to us. Talk to us in the lab about your problems, about what you're interested in, about what you want to do, about things that you're not quite sure about, and we'll help sort you out.

Labs happening all week, and if the right expert isn't in the room, they'll try and trace them down, okay? So this is your great opportunity to get in front of QuickTime engineers, in front of QuickTime marketing people, indeed, even in front of QuickTime lawyers if you have a question about that aspect of our operation, and they will try and answer your question.
