WEBVTT

00:00:07.516 --> 00:00:15.500
[ Music ]

00:00:18.516 --> 00:00:20.546
[ Applause ]

00:00:21.046 --> 00:00:23.856
>> Good morning, it's a pleasure

00:00:23.856 --> 00:00:24.676
to be here with you.

00:00:25.346 --> 00:00:26.386
My name is Emmanuel and I'm an

00:00:26.386 --> 00:00:27.476
engineer on the Core Image team.

00:00:28.586 --> 00:00:30.106
This morning we'll be looking at

00:00:30.206 --> 00:00:31.616
creating photo and video effects

00:00:31.866 --> 00:00:32.386
using depth.

00:00:32.866 --> 00:00:35.686
Let's get started.

00:00:37.036 --> 00:00:38.976
With iOS 11 we started

00:00:38.976 --> 00:00:40.726
delivering portrait depth data

00:00:40.726 --> 00:00:41.816
alongside your portrait still

00:00:41.816 --> 00:00:42.206
images.

00:00:43.516 --> 00:00:45.386
During last year's WWDC sessions

00:00:45.736 --> 00:00:46.746
we showed how you can leverage

00:00:46.746 --> 00:00:47.826
that depth data to achieve

00:00:47.826 --> 00:00:49.436
amazing effects, such as force

00:00:49.436 --> 00:00:51.446
perspective, simulated depth of

00:00:51.446 --> 00:00:52.996
field effects, as well as

00:00:52.996 --> 00:00:53.806
various foreground and

00:00:53.806 --> 00:00:55.286
background separation effects.

00:00:56.716 --> 00:00:57.806
This year we're extremely

00:00:57.806 --> 00:00:59.206
excited to announce that we're

00:00:59.206 --> 00:01:01.456
coming out with a new feature, a

00:01:01.656 --> 00:01:01.976
portrait matte.

00:01:06.046 --> 00:01:07.036
So during the first half of this

00:01:07.036 --> 00:01:08.616
session we'll be focusing on

00:01:08.616 --> 00:01:09.696
portrait still images and how

00:01:09.696 --> 00:01:11.166
you can apply really great

00:01:11.166 --> 00:01:11.896
effects on them.

00:01:12.956 --> 00:01:14.366
During the next half my

00:01:14.366 --> 00:01:15.446
colleague Ron over from video

00:01:15.446 --> 00:01:17.176
engineering will be focusing on

00:01:17.176 --> 00:01:18.426
using a TrueDepth camera to

00:01:18.426 --> 00:01:19.906
achieve real-time video effects.

00:01:21.936 --> 00:01:24.076
All right, let's take a look at

00:01:24.076 --> 00:01:26.636
the portrait segmentation API.

00:01:27.236 --> 00:01:28.436
So I mentioned a portrait matte,

00:01:28.436 --> 00:01:29.526
so what is a portrait matte?

00:01:29.526 --> 00:01:30.636
A portrait matte is a

00:01:30.636 --> 00:01:32.476
segmentation from foreground to

00:01:32.476 --> 00:01:33.856
background and what this means

00:01:33.856 --> 00:01:35.706
precisely is that you have a

00:01:35.706 --> 00:01:37.706
mask which is 1.0 in the

00:01:37.706 --> 00:01:40.576
foreground and 0.0 in the

00:01:40.576 --> 00:01:42.176
background and you get soft and

00:01:42.176 --> 00:01:42.976
continuous values in between.

00:01:47.046 --> 00:01:47.646
The portrait matte is of

00:01:47.646 --> 00:01:49.116
extremely high quality and is

00:01:49.116 --> 00:01:50.626
able to preserve fine details,

00:01:50.676 --> 00:01:52.666
such as curl and hair on the

00:01:52.666 --> 00:01:53.696
outline of your subject.

00:01:54.076 --> 00:01:55.446
This is amazing.

00:01:56.716 --> 00:01:59.646
The matte can be used to achieve

00:01:59.646 --> 00:02:01.666
great many effects, here is just

00:02:01.666 --> 00:02:03.556
one of them where we essentially

00:02:03.556 --> 00:02:04.916
do a foreground and background

00:02:04.916 --> 00:02:06.306
separation by darkening the

00:02:06.306 --> 00:02:06.866
background.

00:02:06.866 --> 00:02:08.466
But we're really putting this

00:02:08.466 --> 00:02:09.806
tool into your hands so that you

00:02:09.806 --> 00:02:12.256
can create amazing apps and new

00:02:12.256 --> 00:02:13.836
effects and delight your users.

00:02:15.836 --> 00:02:18.466
All right, so the portrait

00:02:18.466 --> 00:02:20.116
effects matte is coming to you

00:02:20.116 --> 00:02:21.326
with iOS 12.

00:02:22.056 --> 00:02:25.536
It is available for both the

00:02:25.536 --> 00:02:27.046
front and the rear facing

00:02:27.046 --> 00:02:27.476
camera.

00:02:28.056 --> 00:02:31.516
It is available to you with

00:02:31.516 --> 00:02:33.726
portrait still images and at the

00:02:33.726 --> 00:02:34.766
moment only when there are

00:02:34.766 --> 00:02:35.616
people in the scene.

00:02:37.426 --> 00:02:39.426
Note that the portrait matte is

00:02:39.426 --> 00:02:41.086
linearly encoded, so it's not

00:02:41.086 --> 00:02:42.306
gamma encoded and what you get

00:02:42.306 --> 00:02:43.346
is a grayscale buffer.

00:02:44.756 --> 00:02:46.966
And also there's no guarantee

00:02:46.966 --> 00:02:47.826
that you will be getting a

00:02:47.826 --> 00:02:49.036
portrait matte alongside your

00:02:49.036 --> 00:02:50.076
portrait still images, you

00:02:50.116 --> 00:02:51.516
always do get the depth data but

00:02:51.866 --> 00:02:53.316
you need to make sure to test

00:02:53.316 --> 00:02:54.196
for its existence.

00:02:54.516 --> 00:02:57.176
All right, let's take a look at

00:02:57.176 --> 00:02:58.666
the API and how we can actually

00:02:58.666 --> 00:03:00.126
load that data in.

00:03:00.586 --> 00:03:02.876
So ImageIO provides a low-level

00:03:02.876 --> 00:03:04.286
API that allows you to load

00:03:04.516 --> 00:03:05.466
portrait effects matte.

00:03:05.766 --> 00:03:08.456
So by calling CGImageSourceCopy

00:03:09.156 --> 00:03:10.426
there's a new key it can pass

00:03:10.706 --> 00:03:12.576
kCGImageAuxiliaryData

00:03:12.576 --> 00:03:13.806
TypePortraitEffectsMatte.

00:03:15.186 --> 00:03:16.046
And this call returns a

00:03:16.046 --> 00:03:17.206
dictionary containing three main

00:03:17.206 --> 00:03:18.216
pieces of information.

00:03:18.846 --> 00:03:20.426
The image data itself as a

00:03:20.426 --> 00:03:24.176
CFDataRef, metadata pertaining

00:03:24.176 --> 00:03:25.496
to the buffer itself as a

00:03:25.496 --> 00:03:28.096
CFDictionary, as well as

00:03:28.266 --> 00:03:30.236
metadata pertaining to the

00:03:30.236 --> 00:03:31.146
capture itself.

00:03:33.356 --> 00:03:35.056
AVFoundation also provides a

00:03:35.056 --> 00:03:36.386
higher-level API that sits on

00:03:36.386 --> 00:03:38.186
top of ImageIO that you can use.

00:03:38.986 --> 00:03:40.176
So taking the output from

00:03:40.176 --> 00:03:42.286
CGImageSourceCopy you can feed

00:03:42.286 --> 00:03:43.766
it to the AVPortrait effects

00:03:43.766 --> 00:03:43.976
matte class.

00:03:48.046 --> 00:03:49.656
And what you get out of it is

00:03:49.656 --> 00:03:51.326
very simple it's a CV pixel

00:03:51.326 --> 00:03:53.596
buffer along with pixel format

00:03:53.816 --> 00:03:54.946
type so you can use that CV

00:03:54.946 --> 00:03:56.626
pixel buffer for your further

00:03:56.626 --> 00:03:58.586
processing needs, it's really

00:03:59.006 --> 00:04:00.296
that simple.

00:04:01.106 --> 00:04:02.676
AVFoundation also supports

00:04:02.676 --> 00:04:04.236
portrait matte delivery at

00:04:04.236 --> 00:04:04.966
capture time.

00:04:05.516 --> 00:04:07.176
So starting with your typical

00:04:07.176 --> 00:04:08.956
AVFoundation setup with your

00:04:08.956 --> 00:04:11.296
AVCaptureInput, device, as well

00:04:11.296 --> 00:04:12.126
as capture session.

00:04:12.706 --> 00:04:14.386
The first thing you want to do

00:04:14.386 --> 00:04:15.436
is make sure that your

00:04:15.436 --> 00:04:16.495
environment supports the

00:04:16.495 --> 00:04:17.736
delivery of the portrait effects

00:04:17.736 --> 00:04:17.986
matte.

00:04:18.206 --> 00:04:20.286
To do this you'll be checking

00:04:20.286 --> 00:04:21.636
for is that data delivery

00:04:21.636 --> 00:04:23.036
supported, as well as is

00:04:23.036 --> 00:04:24.176
portrait effects matte delivery

00:04:24.176 --> 00:04:24.596
supported.

00:04:25.136 --> 00:04:26.406
The reason we have the two there

00:04:26.506 --> 00:04:27.636
both depth and portrait effects

00:04:27.636 --> 00:04:28.496
matte is that they come

00:04:28.496 --> 00:04:29.046
together.

00:04:29.636 --> 00:04:31.286
You can either opt in to get

00:04:31.286 --> 00:04:32.976
only the depth data, but

00:04:32.976 --> 00:04:34.026
whenever you want the portrait

00:04:34.026 --> 00:04:35.516
effects matte you also need to

00:04:35.516 --> 00:04:36.716
activate the depth data

00:04:36.716 --> 00:04:37.216
delivery.

00:04:38.126 --> 00:04:39.786
And to activate or to opt in for

00:04:39.786 --> 00:04:41.606
that delivery make sure to

00:04:41.606 --> 00:04:42.336
modify your

00:04:42.336 --> 00:04:44.146
AVCapturePhotoSettings and set

00:04:44.146 --> 00:04:45.336
the isPortraitEffects

00:04:45.336 --> 00:04:46.906
MatteDelivery enabled, as well

00:04:46.906 --> 00:04:48.806
as isDepthDataDeliveryEnabled to

00:04:49.756 --> 00:04:49.846
true.

00:04:50.806 --> 00:04:52.266
Then the capture time your

00:04:52.706 --> 00:04:53.776
ddiFinishProcessingPhoto

00:04:53.776 --> 00:04:55.086
callback will give you the

00:04:55.086 --> 00:04:57.346
portrait effects matte.

00:04:57.346 --> 00:04:59.316
It's really that simple.

00:05:00.256 --> 00:05:01.366
All right Core Image also

00:05:01.366 --> 00:05:02.986
provides you with a way to load

00:05:02.986 --> 00:05:04.406
and save your portrait effects

00:05:04.406 --> 00:05:04.626
matte.

00:05:05.546 --> 00:05:06.806
A new queue was introduced

00:05:06.926 --> 00:05:07.726
auxiliaryPortrait

00:05:07.726 --> 00:05:09.106
EffectsMatte which you just pass

00:05:09.106 --> 00:05:10.976
your image with contents of URL

00:05:11.536 --> 00:05:13.386
and you get a CI image back

00:05:13.386 --> 00:05:14.456
which contains the portrait

00:05:14.456 --> 00:05:14.776
effect.

00:05:19.046 --> 00:05:19.866
Core Image also allows you to

00:05:19.866 --> 00:05:21.636
save your portrait effects

00:05:21.636 --> 00:05:23.946
mattes directly into your files.

00:05:24.426 --> 00:05:26.526
To do this there's a new context

00:05:26.526 --> 00:05:27.326
option called

00:05:27.576 --> 00:05:29.506
portraitEffectsMatteImage, you

00:05:29.506 --> 00:05:30.876
pass in your CI image containing

00:05:30.876 --> 00:05:32.696
the portrait effects matte, and

00:05:32.696 --> 00:05:34.086
then you can write your file to

00:05:34.086 --> 00:05:35.246
disk using for example

00:05:35.246 --> 00:05:36.576
writeHEIFRepresntationOfImage.

00:05:37.196 --> 00:05:39.246
All right so one thing that's

00:05:39.246 --> 00:05:41.136
important to note here is that

00:05:41.416 --> 00:05:42.826
the three images, so your RGB,

00:05:42.826 --> 00:05:44.796
the depth buffer, and the

00:05:44.796 --> 00:05:47.116
portrait matte buffer live at a

00:05:47.116 --> 00:05:47.996
different resolution.

00:05:49.266 --> 00:05:50.426
So for example, the portrait

00:05:50.426 --> 00:05:51.876
matte for the rear facing camera

00:05:51.876 --> 00:05:53.866
is half-size and the depth data

00:05:53.866 --> 00:05:54.696
is even smaller.

00:05:55.526 --> 00:05:56.386
So let's look at the images

00:05:56.386 --> 00:05:57.616
side-by-side in the case of the

00:05:57.616 --> 00:05:58.516
rear facing camera.

00:05:59.786 --> 00:06:00.816
What this means that in your

00:06:00.816 --> 00:06:02.076
applications you need to make

00:06:02.076 --> 00:06:04.236
sure to either down-sample your

00:06:04.236 --> 00:06:06.076
RGB image to the size of your

00:06:06.076 --> 00:06:08.636
portrait depth or portrait matte

00:06:09.336 --> 00:06:11.086
or [inaudible] and sample them

00:06:11.086 --> 00:06:12.496
to the size of your RGB image.

00:06:13.256 --> 00:06:15.316
So that's all I wanted to talk

00:06:15.316 --> 00:06:16.286
about today for the portrait

00:06:16.286 --> 00:06:18.686
segmentation API and we have a

00:06:18.686 --> 00:06:20.626
great demo for you to see this

00:06:20.626 --> 00:06:21.226
live in action.

00:06:22.056 --> 00:06:24.986
So during this demo I'll be

00:06:24.986 --> 00:06:26.376
making use of a Jupyter Notebook

00:06:26.896 --> 00:06:28.276
which is a browser-based,

00:06:28.426 --> 00:06:30.816
real-time interpreter for

00:06:32.056 --> 00:06:32.436
Python.

00:06:33.306 --> 00:06:34.826
And we'll be making use of

00:06:34.886 --> 00:06:36.456
Python bindings for Core Image

00:06:36.546 --> 00:06:37.646
which we'll be introducing later

00:06:37.646 --> 00:06:38.976
today in a separate session.

00:06:45.056 --> 00:06:46.626
So let's start and load an image

00:06:46.626 --> 00:06:48.686
that contains portrait depth and

00:06:48.686 --> 00:06:49.706
portrait matte in.

00:06:50.016 --> 00:06:50.906
So this is the image we're going

00:06:50.906 --> 00:06:51.516
to be working with.

00:06:52.296 --> 00:06:54.956
The first thing I want to show

00:06:54.956 --> 00:06:56.796
you is what the depth data looks

00:06:56.796 --> 00:06:57.906
like for that image, so let's

00:06:57.906 --> 00:06:59.196
look at the two side-by-side.

00:06:59.296 --> 00:07:00.436
So we have the portrait depth on

00:07:00.436 --> 00:07:02.206
the left and the portrait matte

00:07:02.206 --> 00:07:03.046
on the right-hand side and you

00:07:03.046 --> 00:07:04.116
can just see how fine the

00:07:04.116 --> 00:07:04.796
details are.

00:07:05.366 --> 00:07:07.496
And we'll do a zoom crop in just

00:07:07.496 --> 00:07:09.896
a minute so that you can better

00:07:09.896 --> 00:07:12.126
appreciate just how high quality

00:07:12.126 --> 00:07:13.066
it is.

00:07:13.836 --> 00:07:15.686
Then next thing we do is we

00:07:15.686 --> 00:07:16.586
resize the images.

00:07:17.426 --> 00:07:18.966
As you see the RGB and the depth

00:07:18.966 --> 00:07:20.596
data vary greatly in size.

00:07:22.006 --> 00:07:23.516
So we resize our images and

00:07:23.516 --> 00:07:24.426
let's have a look at them

00:07:24.426 --> 00:07:25.126
side-by-side.

00:07:25.436 --> 00:07:26.686
So we have our RGB and our depth

00:07:26.686 --> 00:07:27.536
data on the right-hand side.

00:07:27.946 --> 00:07:29.076
During the first part of this

00:07:29.076 --> 00:07:30.876
demo I'll focus on depth data,

00:07:31.326 --> 00:07:32.806
then we'll see how things get

00:07:32.806 --> 00:07:33.946
much, much simpler when you use

00:07:33.946 --> 00:07:34.846
a portrait effects matte.

00:07:35.596 --> 00:07:37.806
So the effect I'm going to be

00:07:37.806 --> 00:07:39.296
working on today is depth

00:07:39.296 --> 00:07:41.346
thresholding and essentially

00:07:41.346 --> 00:07:42.426
what I'll be doing is computing

00:07:42.426 --> 00:07:43.576
a histogram of the gray level

00:07:43.576 --> 00:07:45.316
values in my portrait depth.

00:07:45.316 --> 00:07:47.596
And I'll be applying a threshold

00:07:47.596 --> 00:07:48.536
or a clipping point in that

00:07:48.536 --> 00:07:49.636
histogram so that everything

00:07:49.636 --> 00:07:51.516
becomes zero or one depending if

00:07:51.516 --> 00:07:52.986
it's sitting below or above that

00:07:52.986 --> 00:07:53.426
threshold.

00:07:54.346 --> 00:07:55.886
Then we'll be closing holes in

00:07:55.886 --> 00:07:57.336
the image by using morphological

00:07:57.336 --> 00:07:59.116
closing operations and then

00:07:59.116 --> 00:08:01.386
blurring the mask so that we get

00:08:01.386 --> 00:08:03.006
a nice feathered look.

00:08:03.766 --> 00:08:05.126
Let's have a look at this in

00:08:05.126 --> 00:08:05.456
action.

00:08:06.486 --> 00:08:07.456
So remember all of this is

00:08:07.456 --> 00:08:09.966
executed live in the browser

00:08:09.966 --> 00:08:11.396
using Core Image as a back end.

00:08:11.866 --> 00:08:13.836
All right so the first thing I

00:08:13.836 --> 00:08:15.356
want to show you is how changing

00:08:15.356 --> 00:08:16.836
percentile point changes my mask

00:08:16.836 --> 00:08:17.036
here.

00:08:17.286 --> 00:08:19.216
So the higher it is the less

00:08:19.216 --> 00:08:20.496
aggressive I am on clipping the

00:08:20.496 --> 00:08:21.026
foreground.

00:08:21.276 --> 00:08:22.316
So let's pick a value that's

00:08:22.316 --> 00:08:24.016
reasonable, maybe something like

00:08:24.016 --> 00:08:24.466
this here.

00:08:25.226 --> 00:08:26.556
And what you can see here is

00:08:26.556 --> 00:08:28.246
that there are regions or

00:08:28.246 --> 00:08:29.376
islands we call them that are

00:08:29.716 --> 00:08:31.226
connected to my foreground and

00:08:31.226 --> 00:08:32.176
there's a bit of the subject

00:08:32.176 --> 00:08:33.086
here I'd like to take out.

00:08:33.296 --> 00:08:35.086
So what I'll do is I'll add a

00:08:35.086 --> 00:08:36.446
bit of morphological closing.

00:08:36.926 --> 00:08:38.385
Look at how this appears

00:08:38.385 --> 00:08:38.936
magically.

00:08:38.976 --> 00:08:40.885
If I go too far obviously I lose

00:08:40.885 --> 00:08:41.956
my entire subjects, I don't want

00:08:41.956 --> 00:08:42.265
to do that.

00:08:43.066 --> 00:08:43.866
So let's pick something like

00:08:43.866 --> 00:08:44.226
this.

00:08:44.916 --> 00:08:46.576
What I can do then is change the

00:08:46.576 --> 00:08:47.876
feathering by applying the mask

00:08:47.876 --> 00:08:48.556
on top of it all.

00:08:49.196 --> 00:08:50.306
Let's take a look at how the RGB

00:08:50.306 --> 00:08:51.266
is threshold in back.

00:08:51.686 --> 00:08:52.906
This is not the effect we're

00:08:52.906 --> 00:08:54.176
coming up it's just to give a

00:08:54.176 --> 00:08:55.166
sense of how the mask is

00:08:55.166 --> 00:08:56.306
applied, so let's keep going.

00:08:57.186 --> 00:08:59.206
So I've chosen a few parameters

00:08:59.206 --> 00:09:01.746
for this thresholding here and

00:09:01.906 --> 00:09:02.676
this is what I'll be using for

00:09:02.676 --> 00:09:02.976
my foreground.

00:09:07.256 --> 00:09:09.416
Next, I'm applying an effect

00:09:09.416 --> 00:09:10.536
only on my foreground, so in

00:09:10.536 --> 00:09:11.546
this particular case I'm using

00:09:11.546 --> 00:09:12.936
the Core Image photo effect Noir

00:09:13.056 --> 00:09:14.396
which turns everything grayscale

00:09:14.396 --> 00:09:15.556
and has a has a bit of contrast.

00:09:16.186 --> 00:09:17.206
I'm doing an exposure

00:09:17.206 --> 00:09:19.816
adjustment, as well as

00:09:19.846 --> 00:09:21.156
desaturating my image slightly

00:09:21.156 --> 00:09:22.766
and augmenting the contrast even

00:09:22.766 --> 00:09:23.196
further.

00:09:23.936 --> 00:09:24.896
Let's take a look at the output.

00:09:24.896 --> 00:09:25.716
This is going to be the

00:09:25.716 --> 00:09:26.826
foreground that I'll be using

00:09:27.336 --> 00:09:28.936
and what I want to do here is

00:09:29.016 --> 00:09:32.016
leverage the depth data mask

00:09:32.016 --> 00:09:33.756
that I have to composite this

00:09:33.756 --> 00:09:35.446
foreground onto a background.

00:09:36.496 --> 00:09:37.866
Let's just generate a background

00:09:37.866 --> 00:09:39.276
which is just a darker version

00:09:39.396 --> 00:09:40.236
of the original image.

00:09:40.766 --> 00:09:43.816
We can then composite the two

00:09:43.816 --> 00:09:45.146
together using the Core Image

00:09:45.146 --> 00:09:48.956
filter blendWithMask and we have

00:09:48.956 --> 00:09:50.186
the result right there, it's

00:09:50.186 --> 00:09:50.726
that simple.

00:09:51.386 --> 00:09:52.866
All right.

00:09:52.866 --> 00:09:54.936
Thank you.

00:09:55.516 --> 00:09:58.716
[ Applause ]

00:09:59.216 --> 00:10:02.076
Okay so as you saw that required

00:10:02.076 --> 00:10:02.926
a bit of fiddling with the

00:10:02.926 --> 00:10:04.096
parameters for clipping, for

00:10:04.096 --> 00:10:05.666
smoothing, and then so on and so

00:10:05.666 --> 00:10:06.096
forth.

00:10:06.356 --> 00:10:07.366
The portrait effects matte

00:10:07.526 --> 00:10:10.406
enables you to do this without

00:10:10.406 --> 00:10:11.666
actually doing much process,

00:10:11.666 --> 00:10:12.816
this is really exciting so let's

00:10:12.816 --> 00:10:13.386
have a look at this.

00:10:13.666 --> 00:10:15.506
So here we're starting with

00:10:15.506 --> 00:10:19.086
another image that also has

00:10:19.086 --> 00:10:20.646
portrait depth and portrait

00:10:20.646 --> 00:10:22.386
matte information embedded into

00:10:22.386 --> 00:10:23.486
it, so let's look at these.

00:10:25.066 --> 00:10:27.056
As I mentioned earlier, this is

00:10:27.056 --> 00:10:28.846
an extremely high-quality

00:10:28.956 --> 00:10:29.666
foreground mask.

00:10:29.666 --> 00:10:31.056
So let's have a look at a crop

00:10:31.056 --> 00:10:33.376
on this hair.

00:10:33.976 --> 00:10:36.846
Look at how fine the detail is,

00:10:36.846 --> 00:10:37.456
this is beautiful.

00:10:37.626 --> 00:10:38.526
On the right-hand side here is

00:10:38.526 --> 00:10:39.676
the depth that it shows you just

00:10:39.676 --> 00:10:42.436
how coarse the depth data is

00:10:42.436 --> 00:10:43.586
compared to effect matte.

00:10:44.376 --> 00:10:46.036
So we'll do another foreground

00:10:46.036 --> 00:10:47.886
separation effect here similarly

00:10:47.886 --> 00:10:49.016
to what we just did but we used

00:10:49.016 --> 00:10:49.956
a portrait matte instead of

00:10:49.956 --> 00:10:50.816
using the portrait depth.

00:10:51.386 --> 00:10:53.736
So let's look at our foreground

00:10:53.736 --> 00:10:55.606
similar as before but in this

00:10:55.606 --> 00:10:56.656
case, we'll desaturate the

00:10:56.656 --> 00:10:57.856
foreground slightly, add a bit

00:10:57.856 --> 00:10:59.746
of contrast, as well as some

00:10:59.746 --> 00:11:02.666
vibrance to the image.

00:11:03.406 --> 00:11:04.706
Now let's generate a background,

00:11:04.706 --> 00:11:06.006
in this case we'll do a disk

00:11:06.006 --> 00:11:07.236
blur which is another Core Image

00:11:07.236 --> 00:11:08.836
filter, as well as bring down

00:11:08.836 --> 00:11:09.996
the exposure so things get

00:11:09.996 --> 00:11:10.746
pretty dark.

00:11:10.746 --> 00:11:12.356
But we still get a bit of

00:11:12.356 --> 00:11:13.386
background remaining, it's quite

00:11:13.386 --> 00:11:14.386
faint but it's still there.

00:11:15.446 --> 00:11:17.826
And again, I use a CI blend with

00:11:17.826 --> 00:11:19.216
mask which is going to do the

00:11:19.216 --> 00:11:20.716
compositing for us with the mask

00:11:21.316 --> 00:11:22.216
and we have left and right.

00:11:22.526 --> 00:11:23.776
Isn't this beautiful?

00:11:24.516 --> 00:11:27.556
[ Applause ]

00:11:28.056 --> 00:11:29.276
Thank you.

00:11:29.436 --> 00:11:30.476
All right let's look at another

00:11:30.476 --> 00:11:32.106
great demo which we call Big

00:11:32.106 --> 00:11:32.386
Head.

00:11:32.946 --> 00:11:36.326
So because the portrait matte is

00:11:36.326 --> 00:11:37.806
so fine we can actually do

00:11:37.806 --> 00:11:39.306
things like change the

00:11:39.306 --> 00:11:40.496
[inaudible] size of our subject

00:11:40.496 --> 00:11:41.606
with respect to the background

00:11:41.606 --> 00:11:41.966
using it.

00:11:42.216 --> 00:11:44.506
So let's do just that and we'll

00:11:44.506 --> 00:11:45.006
do it live.

00:11:46.096 --> 00:11:48.536
So here's our input image on the

00:11:48.536 --> 00:11:50.416
left here and the portrait matte

00:11:50.416 --> 00:11:52.786
on the right-hand side.

00:11:52.966 --> 00:11:55.056
And what I'll be doing here as

00:11:55.056 --> 00:11:57.146
I'll be playing with the size of

00:11:57.146 --> 00:11:59.616
the subject in my frame notice

00:11:59.616 --> 00:12:01.296
how the subject is getting

00:12:01.626 --> 00:12:02.416
smaller and bigger.

00:12:03.176 --> 00:12:04.946
And you can actually you know

00:12:05.956 --> 00:12:07.096
give more weight to the subject

00:12:07.096 --> 00:12:09.046
in your frame, but you can also

00:12:09.046 --> 00:12:11.106
do pretty cool things like now

00:12:11.106 --> 00:12:12.456
that I have this let's say that

00:12:12.456 --> 00:12:14.966
I pick my favorite size here.

00:12:14.966 --> 00:12:17.436
You can do things like pseudo

00:12:17.436 --> 00:12:19.346
simulated depth of field here by

00:12:19.346 --> 00:12:20.276
giving more contrast to the

00:12:20.276 --> 00:12:22.076
foreground and using a

00:12:22.076 --> 00:12:22.916
[inaudible] in the background to

00:12:22.916 --> 00:12:24.136
give more pop to your subject.

00:12:26.296 --> 00:12:28.006
All right let's take a look at

00:12:28.006 --> 00:12:29.346
just another image to see just

00:12:29.346 --> 00:12:30.506
how easy that is because they're

00:12:30.506 --> 00:12:32.226
using the exact same pipeline

00:12:32.226 --> 00:12:33.176
under the hood which is very

00:12:33.176 --> 00:12:34.486
simple just using the portrait

00:12:34.536 --> 00:12:36.376
matte and using it to blur the

00:12:36.376 --> 00:12:38.856
foreground and background.

00:12:38.856 --> 00:12:40.096
Again our input image here, we

00:12:40.096 --> 00:12:42.586
can change the size of it, make

00:12:42.586 --> 00:12:44.966
it bigger, then apply a bit of

00:12:45.006 --> 00:12:47.156
contrast to give more focus to

00:12:47.156 --> 00:12:47.736
our subject.

00:12:48.706 --> 00:12:49.976
It's that easy, really exciting.

00:12:50.516 --> 00:12:55.216
[ Applause ]

00:12:55.716 --> 00:12:57.186
All right let's take a look at

00:12:57.186 --> 00:12:58.296
another demo which we call

00:12:58.296 --> 00:12:58.956
Marching.

00:12:59.226 --> 00:13:01.226
I'm not even going to try to

00:13:01.226 --> 00:13:02.976
explain what it does, let's just

00:13:02.976 --> 00:13:04.476
take a look at the filter in

00:13:04.476 --> 00:13:04.816
action.

00:13:10.046 --> 00:13:12.516
There you go, fun stuff and just

00:13:12.516 --> 00:13:14.236
because we can do it I can

00:13:14.236 --> 00:13:15.696
expose how many of these I want

00:13:15.696 --> 00:13:16.406
to stitch together.

00:13:16.406 --> 00:13:18.726
So going from just a few to you

00:13:18.726 --> 00:13:19.926
really, really pushing that way,

00:13:19.926 --> 00:13:20.526
way too far.

00:13:21.966 --> 00:13:23.046
Really exciting stuff.

00:13:23.456 --> 00:13:23.926
All right.

00:13:29.046 --> 00:13:31.506
So that's it for this demo, I

00:13:31.506 --> 00:13:32.356
hope you enjoyed this.

00:13:33.966 --> 00:13:35.606
So if you'd like to know more

00:13:35.606 --> 00:13:36.956
about using Python bindings for

00:13:36.956 --> 00:13:38.126
Core Image I encourage you to

00:13:38.126 --> 00:13:39.426
come to this afternoon's session

00:13:39.796 --> 00:13:40.906
on Core Image Performance

00:13:40.906 --> 00:13:42.066
Prototyping in Python.

00:13:42.686 --> 00:13:45.616
That's all for me today, let me

00:13:45.616 --> 00:13:46.736
introduce you to my colleague

00:13:46.736 --> 00:13:48.266
Ron from video engineering who

00:13:48.266 --> 00:13:49.676
will be talking about real-time

00:13:49.676 --> 00:13:51.046
video effects with TrueDepth.

00:13:51.346 --> 00:13:51.976
Thank you everybody.

00:13:52.516 --> 00:13:56.500
[ Applause ]

00:13:59.286 --> 00:14:00.046
>> Thank you Emmanuel.

00:14:01.186 --> 00:14:02.826
Great photo effects but what

00:14:02.826 --> 00:14:03.456
about video.

00:14:04.866 --> 00:14:06.926
My name is Ron Sokolovsky and I

00:14:06.926 --> 00:14:07.916
am from video engineering.

00:14:08.476 --> 00:14:11.946
In this part we are going to

00:14:11.946 --> 00:14:13.236
leverage the TrueDepth's camera

00:14:13.446 --> 00:14:15.576
to create similar effects with

00:14:15.576 --> 00:14:17.636
real-time video, like for

00:14:17.636 --> 00:14:19.226
example this background

00:14:19.226 --> 00:14:20.426
replacement app.

00:14:21.856 --> 00:14:24.556
In order to create such effects

00:14:24.836 --> 00:14:26.486
we are going to deep dive into

00:14:26.486 --> 00:14:27.776
the stream coming from the

00:14:27.776 --> 00:14:29.306
TrueDepth camera, the

00:14:29.306 --> 00:14:31.336
characteristics, best practices,

00:14:31.336 --> 00:14:32.066
and challenges.

00:14:32.636 --> 00:14:35.316
We are also going to show you

00:14:35.316 --> 00:14:36.706
how to work with point clouds, a

00:14:36.706 --> 00:14:38.286
completely different way to

00:14:38.286 --> 00:14:40.006
process and render rich depth

00:14:40.006 --> 00:14:40.546
information.

00:14:41.056 --> 00:14:42.626
And that background replacement

00:14:42.846 --> 00:14:44.116
app we're calling it Backdrop

00:14:44.476 --> 00:14:45.516
and we'll show you how to make

00:14:45.516 --> 00:14:46.756
it step-by-step.

00:14:48.336 --> 00:14:50.116
But first things first, the

00:14:50.386 --> 00:14:51.446
stream for the TrueDepth's

00:14:51.446 --> 00:14:53.396
camera is made of frames, each

00:14:53.396 --> 00:14:55.326
frame is a depth map, a 2-D

00:14:55.326 --> 00:14:57.186
image in which each pixel

00:14:57.426 --> 00:14:58.926
contains the depth information

00:14:59.236 --> 00:15:00.526
or the distance to the scene in

00:15:00.526 --> 00:15:00.976
that direction.

00:15:05.046 --> 00:15:06.296
We've chosen a specific coloring

00:15:06.296 --> 00:15:08.466
scheme, closed pixels are

00:15:08.466 --> 00:15:11.056
colored in red while fire red

00:15:11.056 --> 00:15:12.306
pixels are colored in blue.

00:15:12.886 --> 00:15:14.216
In between them there is a

00:15:14.216 --> 00:15:16.426
colorful spectrum so you can see

00:15:16.776 --> 00:15:18.566
the texture of the depth map.

00:15:20.156 --> 00:15:21.686
There are also black pixels,

00:15:22.156 --> 00:15:23.636
those are holes in a depth map.

00:15:24.286 --> 00:15:25.946
For those pixels we have no

00:15:25.946 --> 00:15:27.596
information what is the depth.

00:15:28.456 --> 00:15:30.796
We are releasing today a new

00:15:30.796 --> 00:15:32.936
tool, a sample app for you to

00:15:32.936 --> 00:15:34.676
explore this stream and we call

00:15:34.676 --> 00:15:36.526
it TrueDepth Streamer.

00:15:37.076 --> 00:15:40.716
You can slide between the video

00:15:40.716 --> 00:15:42.976
stream and the TrueDepth stream.

00:15:47.046 --> 00:15:48.716
Now because the TrueDepth camera

00:15:49.456 --> 00:15:51.936
has active illumination even in

00:15:51.936 --> 00:15:53.676
complete darkness while the

00:15:53.676 --> 00:15:56.966
video is pitch black it is

00:15:56.966 --> 00:15:58.186
business as usual for the

00:15:58.186 --> 00:15:59.026
TrueDepth camera.

00:16:01.716 --> 00:16:04.636
So now you see me and now you

00:16:04.636 --> 00:16:04.906
don't.

00:16:05.516 --> 00:16:09.266
[ Applause ]

00:16:09.766 --> 00:16:11.666
So how do you add the stream

00:16:11.666 --> 00:16:12.896
from the TrueDepth camera into

00:16:12.896 --> 00:16:13.986
your application?

00:16:14.946 --> 00:16:15.906
Well I'm glad you asked.

00:16:16.276 --> 00:16:17.526
The first thing you need to do

00:16:17.986 --> 00:16:19.346
is to discover the built-in

00:16:19.346 --> 00:16:22.146
TrueDepth camera and then you

00:16:22.146 --> 00:16:23.866
initialize the device capture

00:16:23.866 --> 00:16:24.186
input.

00:16:24.186 --> 00:16:27.416
And you add the depth data

00:16:27.416 --> 00:16:28.766
output into your session.

00:16:29.606 --> 00:16:31.426
At this point you're good to go,

00:16:31.496 --> 00:16:32.826
you can start the session and

00:16:32.826 --> 00:16:33.706
you will have the TrueDepth

00:16:33.706 --> 00:16:35.266
stream with your session.

00:16:37.376 --> 00:16:39.286
This stream can come in two

00:16:39.286 --> 00:16:41.836
forms of data, disparity or

00:16:41.836 --> 00:16:42.166
depth.

00:16:42.846 --> 00:16:44.306
Now disparity is the inverse of

00:16:44.306 --> 00:16:46.586
depth and vice versa, so which

00:16:46.586 --> 00:16:47.396
one should you choose?

00:16:48.666 --> 00:16:51.366
Well disparity usually yields

00:16:51.366 --> 00:16:53.456
better results, especially for

00:16:53.456 --> 00:16:54.596
machine learning applications

00:16:55.216 --> 00:16:56.646
but the depth data has more

00:16:56.646 --> 00:16:58.346
meaning in terms of real-world

00:16:58.346 --> 00:16:58.926
measurements.

00:17:00.036 --> 00:17:01.666
Know that if you work with depth

00:17:01.746 --> 00:17:05.246
that the depth error goes with

00:17:05.246 --> 00:17:05.935
the depth squared.

00:17:06.036 --> 00:17:08.096
That means that an object at 1

00:17:08.096 --> 00:17:09.685
meter would have four times the

00:17:09.685 --> 00:17:11.826
depth accuracy as an object at 2

00:17:11.826 --> 00:17:11.976
meters.

00:17:16.286 --> 00:17:18.496
We have two streams, video and

00:17:18.496 --> 00:17:19.425
depth, and they don't

00:17:19.425 --> 00:17:20.596
necessarily share the same

00:17:20.596 --> 00:17:21.136
resolution.

00:17:21.646 --> 00:17:23.006
The native resolution of the

00:17:23.006 --> 00:17:24.596
TrueDepth's camera is VGA or

00:17:24.596 --> 00:17:27.736
640x480 and that's what you'll

00:17:27.736 --> 00:17:30.176
get if you choose a video preset

00:17:30.656 --> 00:17:32.236
of an aspect racial of 4:3.

00:17:33.226 --> 00:17:35.516
If however you choose an aspect

00:17:35.516 --> 00:17:37.816
ratio of 16x9 you'll get a depth

00:17:37.816 --> 00:17:40.246
map of 640x360.

00:17:40.966 --> 00:17:42.916
In both cases the depth map will

00:17:42.916 --> 00:17:44.856
cover the entire field of view

00:17:45.146 --> 00:17:46.146
of the RGB image.

00:17:46.666 --> 00:17:49.466
Now we are talking about video

00:17:49.466 --> 00:17:51.116
applications, so we are

00:17:51.116 --> 00:17:52.946
crunching a lot of numbers very,

00:17:52.946 --> 00:17:54.956
very fast and that could create

00:17:55.306 --> 00:17:57.266
system pressure over time.

00:17:57.936 --> 00:17:59.696
So you can test your application

00:17:59.696 --> 00:18:01.306
and gauge the system pressure

00:18:01.306 --> 00:18:04.006
level which goes from nominal to

00:18:04.006 --> 00:18:06.216
fair, serious, critical, and

00:18:06.216 --> 00:18:07.056
then shutdown.

00:18:07.476 --> 00:18:08.956
And the responsibility is in

00:18:08.956 --> 00:18:10.886
your hands because the system

00:18:11.166 --> 00:18:12.326
will let you go all the way to

00:18:12.326 --> 00:18:15.206
shutdown but when it does it's

00:18:15.206 --> 00:18:17.326
bye-bye every capture device.

00:18:17.726 --> 00:18:22.026
Another thing you can do is to

00:18:22.026 --> 00:18:24.006
adopt a degradation scheme, if

00:18:24.006 --> 00:18:25.496
the pressure level gets serious

00:18:25.496 --> 00:18:27.206
you can reduce the frame rate to

00:18:27.206 --> 00:18:29.736
15 frames per second or you can

00:18:29.736 --> 00:18:31.516
choose a more elaborate scheme

00:18:31.896 --> 00:18:33.966
with gentle degradation going

00:18:33.966 --> 00:18:37.356
from 30, 24, 20 and 15 frames

00:18:37.356 --> 00:18:39.536
per second anytime the pressure

00:18:39.536 --> 00:18:39.976
level increases.

00:18:43.836 --> 00:18:45.026
So we have holes in the depth

00:18:45.026 --> 00:18:46.406
map what can we do about it?

00:18:47.686 --> 00:18:49.456
Well, in fact you could get the

00:18:49.456 --> 00:18:51.496
stream already filtered for you.

00:18:52.176 --> 00:18:53.936
There is a parameter called

00:18:53.936 --> 00:18:55.546
isFilteringEnabled and it's'

00:18:55.546 --> 00:18:57.676
defaulted to true, which means

00:18:57.676 --> 00:18:59.236
you get a filtered depth map

00:18:59.606 --> 00:19:01.576
smooth, spatially and temporally

00:19:01.776 --> 00:19:03.536
and the holes are filled from

00:19:03.536 --> 00:19:04.356
the RGB image.

00:19:05.466 --> 00:19:07.256
This is especially useful for

00:19:07.256 --> 00:19:08.616
photography and segmentation

00:19:08.616 --> 00:19:10.206
applications because you know

00:19:10.446 --> 00:19:12.386
every time you query a pixel you

00:19:12.386 --> 00:19:13.216
get the depth's value.

00:19:13.776 --> 00:19:17.376
In TrueDepth Streamer you can

00:19:17.376 --> 00:19:19.566
switch to the filter stream and

00:19:19.566 --> 00:19:21.876
see that it is smoother and the

00:19:21.876 --> 00:19:22.586
holes are filled.

00:19:23.126 --> 00:19:27.526
So this is great, but it is not

00:19:27.526 --> 00:19:29.246
applicable to 100% of the use

00:19:29.246 --> 00:19:29.636
cases.

00:19:30.226 --> 00:19:31.676
If you're working with point

00:19:31.676 --> 00:19:34.606
clouds or any type of real-world

00:19:34.836 --> 00:19:36.256
measurements you're better off

00:19:36.256 --> 00:19:38.366
staying with the raw data which

00:19:38.366 --> 00:19:39.806
holds the highest fidelity.

00:19:40.846 --> 00:19:42.726
If you do you will have holes,

00:19:42.906 --> 00:19:44.496
you will have pixels marked as

00:19:44.496 --> 00:19:46.866
zero, it does not mean that they

00:19:46.866 --> 00:19:48.396
are the distance of zero meters

00:19:48.396 --> 00:19:50.356
from the camera it just means we

00:19:50.356 --> 00:19:52.296
have no information about them.

00:19:53.336 --> 00:19:54.946
Therefore, you should watch out

00:19:55.116 --> 00:19:56.506
for operations like averaging

00:19:56.506 --> 00:19:57.606
and downsampling because you

00:19:57.606 --> 00:19:59.386
don't want to mix those real

00:19:59.386 --> 00:20:00.976
values with those zeros.

00:20:03.756 --> 00:20:04.996
But why do we even get holes?

00:20:05.536 --> 00:20:08.876
Well the TrueDepth camera

00:20:09.296 --> 00:20:11.456
detects objects up to a distance

00:20:11.456 --> 00:20:14.056
of about 5 meters, but not all

00:20:14.056 --> 00:20:15.296
materials are made the same.

00:20:15.636 --> 00:20:16.796
Some materials have low

00:20:16.796 --> 00:20:17.496
reflectivity.

00:20:17.716 --> 00:20:20.126
they absorb most of the lights.

00:20:21.476 --> 00:20:23.656
For example this extreme

00:20:23.706 --> 00:20:26.046
scenario is a very low

00:20:26.046 --> 00:20:27.896
reflective fabric watch what

00:20:27.896 --> 00:20:29.686
happens when we switch to the

00:20:29.686 --> 00:20:31.766
depth map and I walk away from

00:20:33.346 --> 00:20:33.436
it.

00:20:33.696 --> 00:20:35.066
Even though there are objects in

00:20:35.066 --> 00:20:37.466
the scene with larger distance

00:20:37.796 --> 00:20:39.866
we see holes forming on this

00:20:39.866 --> 00:20:41.436
fabric because it's absorbing

00:20:42.026 --> 00:20:42.766
most of the light.

00:20:44.126 --> 00:20:45.446
If we switch to the filtered

00:20:45.446 --> 00:20:47.616
stream and repeat the same

00:20:47.616 --> 00:20:49.246
motion those holes are filled.

00:20:49.786 --> 00:20:53.336
But it's not only about the

00:20:53.336 --> 00:20:54.766
amount of light reflected back

00:20:55.326 --> 00:20:56.916
it's also about the direction in

00:20:56.916 --> 00:20:58.056
which it is reflected to.

00:20:59.116 --> 00:21:01.036
Some materials are specular or

00:21:01.036 --> 00:21:02.826
shiny and they are very picky

00:21:02.826 --> 00:21:04.166
and choosy in which direction

00:21:04.166 --> 00:21:05.046
they send back the light.

00:21:05.656 --> 00:21:08.406
An extreme scenario would be

00:21:08.406 --> 00:21:11.816
this display, you can watch the

00:21:11.816 --> 00:21:12.846
video stream to see the

00:21:12.846 --> 00:21:13.436
reflection.

00:21:14.616 --> 00:21:15.746
And when we switch to the depth

00:21:15.746 --> 00:21:18.366
map holes are forming depending

00:21:18.366 --> 00:21:19.746
on the angle between the device

00:21:19.746 --> 00:21:20.246
and the screen.

00:21:21.556 --> 00:21:23.376
And if we switch to the filtered

00:21:23.376 --> 00:21:25.216
stream those holes are filled

00:21:25.666 --> 00:21:26.976
but with less fidelity.

00:21:31.046 --> 00:21:32.916
Another challenging scenario is

00:21:32.916 --> 00:21:35.306
outdoor, typically in an outdoor

00:21:35.306 --> 00:21:36.996
scene the background is very far

00:21:36.996 --> 00:21:38.736
away so we don't expect to get

00:21:38.736 --> 00:21:39.806
any depth on the background.

00:21:40.456 --> 00:21:42.956
Also, the sun acts as an

00:21:42.956 --> 00:21:44.396
aggressor to the active

00:21:44.396 --> 00:21:44.906
illumination.

00:21:45.496 --> 00:21:48.696
To demonstrate that I went

00:21:48.696 --> 00:21:50.006
outside on a very sunny

00:21:50.006 --> 00:21:51.556
afternoon, positioned myself

00:21:51.556 --> 00:21:52.326
against the sun.

00:21:53.216 --> 00:21:54.286
And when we switch to the depth

00:21:54.286 --> 00:21:55.926
map you can see there's no

00:21:55.926 --> 00:21:58.056
depths on the background and we

00:21:58.056 --> 00:21:59.786
get some holes around the

00:21:59.786 --> 00:22:01.726
frames, specifically in this

00:22:01.726 --> 00:22:02.506
case the hair.

00:22:03.476 --> 00:22:05.556
But still most of the depth on

00:22:05.556 --> 00:22:07.126
the foreground is intact and

00:22:07.126 --> 00:22:07.696
very useful.

00:22:08.256 --> 00:22:12.436
One final point I want to cover

00:22:12.596 --> 00:22:14.616
for getting holes is the fact

00:22:14.616 --> 00:22:15.736
that from the perspective of the

00:22:15.736 --> 00:22:17.516
TrueDepth camera some of the

00:22:17.516 --> 00:22:19.396
light projected hits an object

00:22:19.396 --> 00:22:21.306
on the way back so we get

00:22:21.306 --> 00:22:23.006
shadows from the parallax

00:22:23.006 --> 00:22:24.886
between the projector and the

00:22:25.776 --> 00:22:26.096
camera.

00:22:26.096 --> 00:22:27.316
You can see an example on the

00:22:27.316 --> 00:22:29.266
right side of this mug, but

00:22:30.176 --> 00:22:31.576
something is different here.

00:22:32.676 --> 00:22:34.426
This is not a depth map so why

00:22:34.426 --> 00:22:36.916
do we even get holes?

00:22:37.096 --> 00:22:38.586
Well in TrueDepth Streamer you

00:22:38.586 --> 00:22:41.076
can switch from 2-D mode into

00:22:41.076 --> 00:22:43.136
3-D mode, which gives us a point

00:22:43.136 --> 00:22:43.616
cloud view.

00:22:44.326 --> 00:22:45.956
With point clouds we can

00:22:45.956 --> 00:22:47.426
dynamically change the

00:22:47.426 --> 00:22:48.936
perspective of the scene

00:22:50.796 --> 00:22:53.506
creating even more holes when we

00:22:54.106 --> 00:22:56.256
do so.

00:22:56.396 --> 00:22:58.226
And now I can ask you is this

00:22:58.226 --> 00:23:01.706
mug half empty or half full and

00:23:01.706 --> 00:23:03.826
the answer is we have no idea.

00:23:05.256 --> 00:23:07.176
By virtually changing the point

00:23:07.176 --> 00:23:08.606
of view of the camera we don't

00:23:08.606 --> 00:23:10.696
add new information and that is

00:23:10.696 --> 00:23:11.966
because the TrueDepth camera can

00:23:11.966 --> 00:23:13.656
do many things, but bending

00:23:13.656 --> 00:23:16.466
light into the mug not one of

00:23:17.556 --> 00:23:17.726
them.

00:23:18.076 --> 00:23:18.786
Let's see this live.

00:23:21.516 --> 00:23:24.500
[ Applause ]

00:23:32.046 --> 00:23:32.946
So I'm starting with a video

00:23:32.946 --> 00:23:34.156
view and I want you to look in

00:23:34.156 --> 00:23:34.736
this corner.

00:23:35.636 --> 00:23:37.356
Watch what happens when I touch

00:23:37.356 --> 00:23:38.456
the screen, I will touch my

00:23:38.456 --> 00:23:39.636
forehead, you can see an

00:23:39.636 --> 00:23:41.456
indication of the depth.

00:23:41.806 --> 00:23:44.466
And if I move the phone you can

00:23:44.466 --> 00:23:46.036
see the [inaudible] changing and

00:23:46.036 --> 00:23:47.606
the reason I can do so is

00:23:47.606 --> 00:23:50.206
because we have the stream from

00:23:50.206 --> 00:23:51.346
the TrueDepth camera running as

00:23:51.346 --> 00:23:53.836
well and you can see that it is

00:23:53.836 --> 00:23:55.316
overlaid on the video.

00:23:55.316 --> 00:23:58.976
So we have this livestream 30

00:23:58.976 --> 00:24:00.766
frames per second and we can

00:24:00.766 --> 00:24:01.996
switch to the filtered stream

00:24:02.456 --> 00:24:04.866
and then all the holes are

00:24:05.886 --> 00:24:06.026
filled.

00:24:06.206 --> 00:24:07.446
If I switch to the point cloud

00:24:07.446 --> 00:24:10.076
view I can dynamically change

00:24:11.636 --> 00:24:13.296
the point of view to the scene.

00:24:14.276 --> 00:24:15.516
So even though I'm looking

00:24:15.516 --> 00:24:17.786
directly to the device it looks

00:24:17.786 --> 00:24:19.136
as if somebody's watching me

00:24:19.136 --> 00:24:19.846
from up above.

00:24:21.336 --> 00:24:22.516
Now the reason we call this a

00:24:22.516 --> 00:24:25.076
point cloud is if I zoom in you

00:24:25.076 --> 00:24:27.366
can actually see the points in

00:24:27.366 --> 00:24:28.156
3-D space.

00:24:28.686 --> 00:24:32.016
But being here with you in WWDC

00:24:32.466 --> 00:24:33.576
I feel like I have to pinch

00:24:33.576 --> 00:24:35.666
myself just to get things back

00:24:35.666 --> 00:24:36.306
in perspective.

00:24:39.516 --> 00:24:42.500
[ Applause ]

00:24:45.076 --> 00:24:47.396
Thank you so that brings us to

00:24:47.936 --> 00:24:48.446
point clouds.

00:24:48.446 --> 00:24:49.306
How do we create them?

00:24:50.126 --> 00:24:51.426
We're starting from a depth map,

00:24:51.826 --> 00:24:54.236
a 2-D image in which the depth Z

00:24:54.716 --> 00:24:55.886
is a function of the pixel

00:24:55.886 --> 00:24:57.056
coordinates U and V.

00:24:58.486 --> 00:25:00.076
And we want to transform it to a

00:25:00.076 --> 00:25:01.586
new coordinate system in 3-D

00:25:01.586 --> 00:25:03.486
space, X, Y, Z.

00:25:04.336 --> 00:25:06.256
Now we already have Z right,

00:25:06.256 --> 00:25:07.616
that's the depth from the depth

00:25:07.616 --> 00:25:09.766
map but we want to get X and Y.

00:25:10.416 --> 00:25:13.606
For that we need to get the help

00:25:13.606 --> 00:25:15.806
from the Intrinsics Matrix which

00:25:15.806 --> 00:25:17.196
holds information for the focal

00:25:17.196 --> 00:25:18.346
lengths and principle point.

00:25:19.376 --> 00:25:21.686
If for example I want to get X I

00:25:21.686 --> 00:25:22.936
need to start with the pixel

00:25:22.936 --> 00:25:24.506
coordinate U, subtract the

00:25:24.506 --> 00:25:26.576
principle point, multiply by the

00:25:26.576 --> 00:25:28.576
depth, and divide by the focal

00:25:28.576 --> 00:25:28.916
lengths.

00:25:29.136 --> 00:25:30.416
And naturally I have to do the

00:25:30.416 --> 00:25:31.256
same thing for the other

00:25:31.256 --> 00:25:32.026
dimension as well.

00:25:33.196 --> 00:25:36.976
Now this Intrinsics Matrix is

00:25:36.976 --> 00:25:38.436
accessible through the camera

00:25:38.436 --> 00:25:39.126
calibration data.

00:25:39.716 --> 00:25:43.656
In fact, this operation is done

00:25:44.786 --> 00:25:46.676
in every frame of the TrueDepth

00:25:46.676 --> 00:25:47.056
stream.

00:25:47.506 --> 00:25:49.836
The reason for that is that the

00:25:49.836 --> 00:25:51.656
video stream and the depth

00:25:51.656 --> 00:25:53.076
stream are coming from two

00:25:53.286 --> 00:25:54.506
separate cameras.

00:25:55.136 --> 00:25:57.246
But because the TrueDepth camera

00:25:57.246 --> 00:25:58.936
gives us a depth map we can

00:25:58.936 --> 00:26:00.446
transform it into a point cloud

00:26:00.876 --> 00:26:03.046
and re-project it to the

00:26:03.046 --> 00:26:06.306
perspective of the RGB image so

00:26:06.306 --> 00:26:07.756
the depth stream is already

00:26:07.756 --> 00:26:10.076
registered on the video stream

00:26:10.076 --> 00:26:13.556
for you and you get RGBD data.

00:26:14.146 --> 00:26:15.916
Now, thank you.

00:26:16.496 --> 00:26:18.346
Yeah, it's pretty cool.

00:26:20.066 --> 00:26:21.526
Now these types of operations

00:26:21.626 --> 00:26:23.456
are best done in metal graphic

00:26:23.456 --> 00:26:23.906
shaders.

00:26:24.226 --> 00:26:25.476
And you can download the code

00:26:25.476 --> 00:26:27.066
for TrueDepth Streamer and you

00:26:27.066 --> 00:26:28.666
want to focus on two areas.

00:26:29.196 --> 00:26:32.286
In the vertex shader we control

00:26:32.286 --> 00:26:33.296
the location of the points,

00:26:33.486 --> 00:26:34.976
we'll start with the depth map

00:26:35.126 --> 00:26:36.696
and transform it to real-world

00:26:36.696 --> 00:26:37.986
coordinates or X, Y, Z.

00:26:39.186 --> 00:26:40.796
Then we can multiply it with a

00:26:40.796 --> 00:26:43.006
view matrix to change the point

00:26:43.006 --> 00:26:43.706
of view to the scene.

00:26:44.336 --> 00:26:49.066
In the fragment shader we get

00:26:49.066 --> 00:26:51.766
the output of the vertex, but we

00:26:51.766 --> 00:26:53.866
have to see if it's a real value

00:26:54.096 --> 00:26:55.186
or a hole in the depth map.

00:26:56.026 --> 00:26:57.476
If it's a hole and it's marked

00:26:57.476 --> 00:26:59.766
as zero we don't know its depth

00:26:59.766 --> 00:27:01.516
so we cannot transform it to X,

00:27:01.516 --> 00:27:02.856
Y, Z and we would need to

00:27:02.856 --> 00:27:03.816
discard this point.

00:27:05.196 --> 00:27:06.786
If it is a real value we can

00:27:06.786 --> 00:27:09.286
sample the RGB texture and add

00:27:09.286 --> 00:27:11.366
color to the fragment or point

00:27:11.366 --> 00:27:14.746
in this case.

00:27:14.956 --> 00:27:17.356
So I understand this part was a

00:27:17.356 --> 00:27:19.066
bit technical and a lot of you

00:27:19.066 --> 00:27:20.276
come from different backgrounds.

00:27:21.016 --> 00:27:22.876
Have no fear we have just the

00:27:22.876 --> 00:27:25.056
app for you, an app to replace

00:27:25.056 --> 00:27:26.756
your background, let's see it

00:27:26.756 --> 00:27:26.906
live.

00:27:38.046 --> 00:27:40.926
Let's see it live.

00:27:41.136 --> 00:27:43.516
So I can put myself in Yosemite,

00:27:43.936 --> 00:27:46.466
I can swipe down put myself in

00:27:46.466 --> 00:27:47.466
something more abstract.

00:27:48.166 --> 00:27:51.466
I can even go all the way to

00:27:51.466 --> 00:27:53.006
Antelope Canyon, Arizona, it

00:27:53.006 --> 00:27:54.356
took me 15 hours to get there

00:27:54.356 --> 00:27:55.846
last time, I could have just

00:27:55.846 --> 00:27:57.426
swiped down, saved a lot of

00:27:57.426 --> 00:27:58.126
money on gas.

00:27:59.546 --> 00:28:02.016
In fact, this application can

00:28:02.016 --> 00:28:04.116
even put you in space where

00:28:04.116 --> 00:28:05.876
nobody can hear you stream.

00:28:11.516 --> 00:28:15.616
[ Applause ]

00:28:16.116 --> 00:28:19.036
So how do we create that?

00:28:19.256 --> 00:28:21.586
Anytime we're dealing with a

00:28:21.586 --> 00:28:23.706
video application there's other

00:28:23.706 --> 00:28:25.476
things that are going on a per

00:28:25.476 --> 00:28:28.456
frame basis, in this case we

00:28:28.456 --> 00:28:31.696
have to detect a face, create a

00:28:31.696 --> 00:28:33.316
brand-new mask from the depth

00:28:33.316 --> 00:28:36.056
map, smooth and upscale it to

00:28:36.056 --> 00:28:37.286
the RGB resolution.

00:28:37.736 --> 00:28:39.246
And then we take this foreground

00:28:39.246 --> 00:28:41.536
mask and upscale it again to the

00:28:41.536 --> 00:28:42.636
low-light background image.

00:28:43.446 --> 00:28:44.616
And then we can blend or

00:28:44.646 --> 00:28:46.876
[inaudible] them, but there's

00:28:46.876 --> 00:28:49.336
something we can do to reduce

00:28:49.416 --> 00:28:50.416
some of the complexity.

00:28:51.976 --> 00:28:54.466
If anytime we load a background

00:28:54.466 --> 00:28:56.306
image we resize it to the RGB

00:28:56.306 --> 00:28:57.756
resolution just once not

00:28:57.756 --> 00:28:59.556
per-frame, then we don't need

00:28:59.556 --> 00:29:01.446
that second upscale and the

00:29:01.446 --> 00:29:02.926
blending is done at low

00:29:02.926 --> 00:29:04.376
resolution which makes a big

00:29:04.376 --> 00:29:04.886
difference.

00:29:06.276 --> 00:29:07.716
So let's deep dive into those

00:29:07.716 --> 00:29:08.086
depths.

00:29:08.626 --> 00:29:10.606
The first thing we need is to

00:29:10.606 --> 00:29:11.856
find the center of the face.

00:29:12.366 --> 00:29:14.406
And in iOS there are actually

00:29:14.646 --> 00:29:16.386
quite a few ways you can get

00:29:16.386 --> 00:29:17.316
face metadata.

00:29:18.296 --> 00:29:19.246
You can use a Core Image

00:29:19.246 --> 00:29:20.706
detector or the Vision

00:29:20.706 --> 00:29:22.796
Framework, but in this case

00:29:22.976 --> 00:29:25.226
since we just need the pixel at

00:29:25.226 --> 00:29:26.366
the center of the face we can

00:29:26.366 --> 00:29:28.586
use AV meta data object type

00:29:28.586 --> 00:29:29.056
face.

00:29:30.426 --> 00:29:32.896
But it gives us the center in

00:29:32.896 --> 00:29:34.236
the coding system of the RGB

00:29:34.236 --> 00:29:36.086
image and we need to map it to

00:29:36.086 --> 00:29:38.196
the depth map which might not be

00:29:38.196 --> 00:29:39.106
in the same resolution.

00:29:41.356 --> 00:29:43.316
Once we have the value of the

00:29:43.316 --> 00:29:45.886
depth of the face we can use it

00:29:45.886 --> 00:29:47.566
plus a margin of characteristic

00:29:47.566 --> 00:29:50.656
25 centimeters to threshold the

00:29:50.656 --> 00:29:52.306
depth map and create a binary

00:29:52.306 --> 00:29:54.076
mask, foreground is one,

00:29:54.476 --> 00:29:55.296
background is zero.

00:29:56.556 --> 00:29:58.456
In fact, we can stop here, we

00:29:58.456 --> 00:30:00.236
can use this binary mask and

00:30:00.236 --> 00:30:00.956
create the effect.

00:30:01.596 --> 00:30:02.816
The transition from background

00:30:02.816 --> 00:30:04.166
to foreground will be very

00:30:04.166 --> 00:30:06.636
sharp, but we'll get some

00:30:06.636 --> 00:30:07.826
fidgeting around the edges.

00:30:09.486 --> 00:30:10.856
So we want to filter it a bit.

00:30:11.826 --> 00:30:14.156
The first stage will be to apply

00:30:14.156 --> 00:30:15.216
some smoothing from the

00:30:15.216 --> 00:30:16.346
background to the foreground, in

00:30:16.346 --> 00:30:17.896
this case Gaussian Blurring.

00:30:18.626 --> 00:30:20.446
The radius of Gaussian Blurring

00:30:20.446 --> 00:30:22.716
will determine the slope of the

00:30:22.716 --> 00:30:25.096
transition and you can play with

00:30:25.096 --> 00:30:26.696
the value to get different

00:30:27.996 --> 00:30:28.526
effects.

00:30:29.426 --> 00:30:31.126
Another processing stage we add

00:30:31.346 --> 00:30:33.966
is gamma adjustments, it allows

00:30:33.966 --> 00:30:35.286
us to further fine-tune this

00:30:35.286 --> 00:30:36.456
transition from background to

00:30:36.456 --> 00:30:36.976
foreground.

00:30:37.426 --> 00:30:39.386
If we use a gamma value which is

00:30:39.386 --> 00:30:41.576
higher than one we'll get a

00:30:41.576 --> 00:30:43.156
narrower foreground mask.

00:30:44.176 --> 00:30:45.966
On the other hand, if we use a

00:30:45.966 --> 00:30:47.526
gamma value that is smaller than

00:30:47.526 --> 00:30:49.886
one we'll get a wider foreground

00:30:49.886 --> 00:30:51.026
mask and maybe some aura.

00:30:52.386 --> 00:30:53.646
So you can create different

00:30:53.646 --> 00:30:56.286
effects by combining those two

00:30:56.446 --> 00:30:57.136
parameters.

00:30:57.556 --> 00:31:01.156
If you use a large blur radius

00:31:01.366 --> 00:31:02.866
and a large gamma value you

00:31:02.866 --> 00:31:04.656
create this transparent

00:31:04.656 --> 00:31:06.726
transition that makes you seem

00:31:06.726 --> 00:31:08.486
as if you're a hologram in space

00:31:09.546 --> 00:31:10.706
or similarly it could be

00:31:10.706 --> 00:31:13.336
underwater and you can play with

00:31:13.336 --> 00:31:15.146
the values to create different

00:31:15.146 --> 00:31:15.576
effects.

00:31:15.576 --> 00:31:17.936
If I keep the radius high and

00:31:18.116 --> 00:31:19.766
reduce the gamma value to a very

00:31:19.766 --> 00:31:22.186
low number I create this halo

00:31:22.186 --> 00:31:22.756
around my head.

00:31:23.406 --> 00:31:24.376
So you can play with this to

00:31:24.376 --> 00:31:27.586
create your own effects.

00:31:27.586 --> 00:31:31.266
How do we implement this?

00:31:31.466 --> 00:31:33.026
In Core Image it is very

00:31:33.026 --> 00:31:34.106
straightforward, we can

00:31:34.106 --> 00:31:35.896
concatenate three filters in a

00:31:35.896 --> 00:31:36.166
row.

00:31:36.886 --> 00:31:38.516
We start with a Gaussian Blur,

00:31:39.866 --> 00:31:42.656
we add the gamma adjustment, and

00:31:42.656 --> 00:31:44.446
we upscale to the RGB

00:31:44.446 --> 00:31:45.016
resolution.

00:31:46.616 --> 00:31:48.306
But there are a couple of small

00:31:48.306 --> 00:31:49.756
points I want to emphasize as

00:31:49.756 --> 00:31:50.686
best practices.

00:31:52.076 --> 00:31:54.176
Anytime you work with a

00:31:54.176 --> 00:31:55.696
convolutional based operation

00:31:55.696 --> 00:31:57.436
such as Gaussian Blurring the

00:31:57.436 --> 00:31:59.466
best practice will be to start

00:31:59.466 --> 00:32:00.696
by clamping to extent.

00:32:01.856 --> 00:32:03.576
By repeating the border pixels

00:32:03.576 --> 00:32:06.446
outwards we can make sure all

00:32:06.446 --> 00:32:07.566
the borders of the image are

00:32:07.566 --> 00:32:10.996
handled correctly by the filter.

00:32:11.126 --> 00:32:13.236
Moreover, after the filtering

00:32:13.236 --> 00:32:14.616
and just before the upscaling

00:32:15.116 --> 00:32:16.286
the best practice will be to

00:32:16.286 --> 00:32:18.386
crop back to the original extent

00:32:18.886 --> 00:32:20.006
because that's the part of the

00:32:20.006 --> 00:32:21.496
image we really care about.

00:32:21.766 --> 00:32:25.816
At this point we have an alpha

00:32:25.816 --> 00:32:27.766
matte of the foreground and you

00:32:27.766 --> 00:32:29.096
can use it to create different

00:32:29.096 --> 00:32:30.246
kinds of effects for the

00:32:30.246 --> 00:32:31.336
background and the foreground

00:32:31.796 --> 00:32:33.006
just like Emmanuel showed in the

00:32:33.006 --> 00:32:33.646
first half.

00:32:34.076 --> 00:32:39.266
In Backdrop, we blend the RGB

00:32:39.266 --> 00:32:41.136
stream with a loaded background

00:32:41.136 --> 00:32:43.186
image in a single line of Core

00:32:43.186 --> 00:32:45.016
Image code using the alpha matte

00:32:45.016 --> 00:32:46.296
we created from the TrueDepth

00:32:46.296 --> 00:32:48.706
camera to create this background

00:32:49.216 --> 00:32:50.236
replacement effect.

00:32:53.996 --> 00:32:57.056
So the TrueDepth camera gives us

00:32:58.046 --> 00:32:59.416
a resolution of depth map of

00:32:59.416 --> 00:33:02.576
640x480 coming at you 30 frames

00:33:02.576 --> 00:33:05.116
a second, already registered to

00:33:05.116 --> 00:33:05.936
the video stream.

00:33:06.476 --> 00:33:09.496
You can use it to create point

00:33:09.496 --> 00:33:10.776
clouds and dynamically change

00:33:10.776 --> 00:33:12.426
the perspective of the scene or

00:33:12.486 --> 00:33:16.066
use the filter depth to create

00:33:16.336 --> 00:33:17.916
different kinds of video

00:33:17.916 --> 00:33:18.486
effects.

00:33:21.476 --> 00:33:22.986
You can go to the webpage and

00:33:22.986 --> 00:33:25.176
download the Jupiter Notebook

00:33:25.466 --> 00:33:28.576
TrueDepth Streamer and Backdrop

00:33:29.246 --> 00:33:31.986
and we hope it inspires you as a

00:33:31.986 --> 00:33:34.876
starting point to many new cool

00:33:34.876 --> 00:33:37.056
video effects to create in your

00:33:37.056 --> 00:33:37.776
applications.

00:33:39.316 --> 00:33:41.156
Come say hi at the AVCapture

00:33:41.156 --> 00:33:42.456
lab, thank you so much for your

00:33:42.456 --> 00:33:42.666
time.

00:33:42.666 --> 00:33:42.976
Have a great day.

00:33:43.516 --> 00:33:46.500
[ Applause ]