WEBVTT

00:00:07.516 --> 00:00:16.500
[ Music ]

00:00:20.516 --> 00:00:20.896
>> Good morning.

00:00:21.666 --> 00:00:21.896
Wow.

00:00:22.636 --> 00:00:22.976
Thank you.

00:00:23.516 --> 00:00:26.500
[ Applause ]

00:00:27.466 --> 00:00:28.646
Thank you, very much.

00:00:28.646 --> 00:00:29.986
And once again, welcome to your

00:00:29.986 --> 00:00:30.866
first session at WWDC.

00:00:30.866 --> 00:00:32.806
My name is Joaquim.

00:00:32.806 --> 00:00:33.836
I don't think I have to

00:00:33.836 --> 00:00:34.926
reintroduce myself.

00:00:35.186 --> 00:00:37.406
Karan, Dongyuan, and I are

00:00:37.406 --> 00:00:38.486
really excited to talk to you

00:00:38.486 --> 00:00:39.706
about internationalization, at

00:00:39.706 --> 00:00:40.506
long last.

00:00:40.986 --> 00:00:42.326
So, what are we going to talk

00:00:42.326 --> 00:00:42.566
about?

00:00:42.566 --> 00:00:43.346
I'm going to do a brief

00:00:43.346 --> 00:00:44.476
introduction, like I started

00:00:44.476 --> 00:00:44.866
doing.

00:00:44.906 --> 00:00:46.856
And we're also going to do some

00:00:46.856 --> 00:00:48.146
deep dives on making your app's

00:00:48.146 --> 00:00:49.066
layout adaptive.

00:00:49.506 --> 00:00:50.976
And also, cover some really fun

00:00:50.976 --> 00:00:54.636
discussions on text, as well.

00:00:54.826 --> 00:00:57.016
So, why is this important?

00:00:57.306 --> 00:00:58.946
This applies to every single

00:00:58.946 --> 00:00:59.146
app.

00:00:59.296 --> 00:01:00.296
Internationalization is a

00:01:00.296 --> 00:01:01.886
crucial concept and we're going

00:01:01.886 --> 00:01:02.956
to go over some of the details

00:01:02.956 --> 00:01:04.885
as to why it applies to every

00:01:04.885 --> 00:01:06.146
single app, regardless of the

00:01:06.206 --> 00:01:07.086
set of languages that you

00:01:07.086 --> 00:01:07.596
support.

00:01:09.076 --> 00:01:10.776
And once again, this is all

00:01:10.776 --> 00:01:12.006
about reaching out to more

00:01:12.036 --> 00:01:12.426
people.

00:01:12.426 --> 00:01:14.106
It's enabling everybody to learn

00:01:14.106 --> 00:01:15.146
about and use your app.

00:01:15.666 --> 00:01:16.826
Regardless of the language they

00:01:16.826 --> 00:01:18.166
speak or the country that they

00:01:18.166 --> 00:01:19.626
live in, or the country that

00:01:19.626 --> 00:01:20.176
they grew up in.

00:01:20.176 --> 00:01:21.746
And it's important to note that

00:01:21.746 --> 00:01:23.176
those last two might be

00:01:23.176 --> 00:01:23.946
different, as well.

00:01:24.096 --> 00:01:24.936
And that's something that's

00:01:24.936 --> 00:01:25.886
worth keeping in mind.

00:01:28.416 --> 00:01:30.676
So, internationalization covers

00:01:30.676 --> 00:01:32.446
a wide range of topics, and

00:01:32.446 --> 00:01:34.116
potentially, every single aspect

00:01:34.116 --> 00:01:35.066
of your app.

00:01:35.436 --> 00:01:36.736
And if you're new to the topic,

00:01:37.436 --> 00:01:38.596
probably, the best way to think

00:01:38.596 --> 00:01:40.126
about it is that

00:01:40.226 --> 00:01:41.536
internationalization is best

00:01:41.536 --> 00:01:43.546
applied as a constant process.

00:01:43.936 --> 00:01:45.116
It's a discussion that belongs

00:01:45.116 --> 00:01:46.386
in every single stage of your

00:01:47.086 --> 00:01:47.386
app.

00:01:47.546 --> 00:01:48.846
Whether it's the initial

00:01:48.846 --> 00:01:51.306
inception, its design, to its

00:01:51.306 --> 00:01:52.446
implementation, and even

00:01:52.446 --> 00:01:53.726
distributing it on the App

00:01:53.726 --> 00:01:54.106
Store.

00:01:54.506 --> 00:01:55.496
Things like your App Store

00:01:55.496 --> 00:01:56.936
screenshots and even your app's

00:01:56.936 --> 00:01:58.426
name should be open for

00:01:58.426 --> 00:01:59.976
discussion in an international

00:01:59.976 --> 00:02:00.606
context.

00:02:01.186 --> 00:02:04.206
And like I said before, this

00:02:04.206 --> 00:02:06.186
covers a wide variety of topics.

00:02:07.186 --> 00:02:10.006
At Apple, we have a lot of

00:02:10.006 --> 00:02:11.566
firsthand experience about this.

00:02:11.976 --> 00:02:14.166
So, we estimate that over 70% of

00:02:14.166 --> 00:02:15.556
our customers are outside of the

00:02:15.556 --> 00:02:16.196
United States.

00:02:16.726 --> 00:02:18.326
And this means that when

00:02:18.326 --> 00:02:20.186
somebody downloads your app they

00:02:20.186 --> 00:02:21.776
expect that app to match your

00:02:21.776 --> 00:02:22.816
language preferences.

00:02:23.096 --> 00:02:24.666
And not only that, but also, be

00:02:24.666 --> 00:02:26.116
aware of any details that might

00:02:26.116 --> 00:02:27.196
be related to their region

00:02:27.196 --> 00:02:28.166
settings, as well.

00:02:30.266 --> 00:02:33.076
We support exactly 38 different

00:02:33.076 --> 00:02:36.176
written languages and many, many

00:02:36.176 --> 00:02:38.896
more keyboards and input methods

00:02:38.896 --> 00:02:40.506
for people to type and text.

00:02:41.066 --> 00:02:42.256
And what this means for you, is

00:02:42.256 --> 00:02:44.056
you have a rock solid foundation

00:02:44.056 --> 00:02:44.896
to get started with.

00:02:45.486 --> 00:02:47.076
Every single one of our API's

00:02:47.076 --> 00:02:48.696
supports these languages and

00:02:48.696 --> 00:02:49.276
input methods.

00:02:49.886 --> 00:02:50.796
And this means that you can get

00:02:50.796 --> 00:02:52.116
started right away by using

00:02:52.116 --> 00:02:54.276
these and you're off to a great

00:02:54.276 --> 00:02:55.986
start in providing really great

00:02:55.986 --> 00:02:58.256
international support to your

00:02:58.886 --> 00:02:58.966
app.

00:03:00.686 --> 00:03:02.216
So, for example, this might

00:03:02.216 --> 00:03:04.406
entail presenting dates and

00:03:04.926 --> 00:03:05.256
times.

00:03:05.256 --> 00:03:05.796
This wouldn't be an

00:03:05.796 --> 00:03:06.876
international talk if I didn't

00:03:06.926 --> 00:03:07.976
talk about dates and times.

00:03:08.026 --> 00:03:09.086
But it's important to think

00:03:09.086 --> 00:03:09.556
about, right?

00:03:09.956 --> 00:03:11.106
Because people have different

00:03:11.106 --> 00:03:12.386
expectations around the world.

00:03:13.306 --> 00:03:14.346
This is the [inaudible] Sao

00:03:14.346 --> 00:03:15.446
Bento in Portugal.

00:03:15.446 --> 00:03:16.546
It's a lovely train station.

00:03:16.946 --> 00:03:18.836
But my focus today isn't so much

00:03:18.836 --> 00:03:21.506
the train station as much as the

00:03:21.506 --> 00:03:22.856
way the times are presented in

00:03:22.856 --> 00:03:23.596
the train station.

00:03:23.736 --> 00:03:24.886
And if you go there, you might

00:03:24.886 --> 00:03:25.996
notice that everything is in

00:03:25.996 --> 00:03:27.056
24-hour time.

00:03:27.666 --> 00:03:29.676
And this is true, not just in

00:03:29.676 --> 00:03:30.736
train stations, but it's

00:03:30.736 --> 00:03:32.776
commonplace everywhere in many

00:03:32.776 --> 00:03:33.366
countries.

00:03:34.636 --> 00:03:35.586
And so, your app should know

00:03:35.586 --> 00:03:37.756
about these and present time

00:03:37.896 --> 00:03:39.186
accordingly, depending on the

00:03:39.216 --> 00:03:39.476
region.

00:03:39.476 --> 00:03:41.196
And you can do this using date

00:03:41.196 --> 00:03:41.706
formatter.

00:03:41.706 --> 00:03:43.216
It's a set of APIs we provide

00:03:43.216 --> 00:03:44.066
that lets you do this.

00:03:44.396 --> 00:03:45.526
And it really does all the heavy

00:03:45.526 --> 00:03:46.866
lifting for you.

00:03:47.656 --> 00:03:50.946
Another example is calendars.

00:03:51.096 --> 00:03:52.126
There are many different

00:03:52.126 --> 00:03:53.486
calendrical systems around the

00:03:53.486 --> 00:03:53.816
world.

00:03:54.276 --> 00:03:56.416
And it's also important to note

00:03:56.416 --> 00:03:57.866
that many people use more than

00:03:57.866 --> 00:03:59.466
one on a daily basis.

00:03:59.466 --> 00:04:01.546
They might use one for religious

00:04:01.546 --> 00:04:03.566
or festive events and another

00:04:03.566 --> 00:04:04.226
for business.

00:04:04.726 --> 00:04:05.716
And these all have different

00:04:05.716 --> 00:04:07.726
properties like leap months and

00:04:07.726 --> 00:04:09.506
leap years and different numbers

00:04:09.506 --> 00:04:10.636
of days and different numbers of

00:04:10.636 --> 00:04:11.096
months.

00:04:11.596 --> 00:04:14.136
And so, being precise about

00:04:14.196 --> 00:04:15.976
these and knowing how to present

00:04:15.976 --> 00:04:17.976
these appropriately means being

00:04:18.176 --> 00:04:19.125
internationally aware.

00:04:20.396 --> 00:04:21.706
This is an example of the iOS

00:04:21.755 --> 00:04:23.956
Calendar app showing the Chinese

00:04:23.956 --> 00:04:25.456
Lunar calendar on top of the

00:04:25.456 --> 00:04:26.416
Gregorian calendar.

00:04:27.056 --> 00:04:28.446
And we have a set of API's in

00:04:28.446 --> 00:04:30.236
Calendar and alongside Date

00:04:30.236 --> 00:04:31.956
Formatter that help you do this.

00:04:34.536 --> 00:04:36.446
Could also talk about units and

00:04:36.446 --> 00:04:37.006
measurements.

00:04:37.416 --> 00:04:39.376
Whether it's presenting things

00:04:39.376 --> 00:04:41.076
in the metric versus the

00:04:41.076 --> 00:04:43.126
imperial system, or even

00:04:43.126 --> 00:04:45.176
temperatures like Celsius or

00:04:45.176 --> 00:04:45.666
Fahrenheit.

00:04:46.496 --> 00:04:47.716
Your app should be aware of the

00:04:47.716 --> 00:04:49.036
appropriate regional defaults

00:04:49.036 --> 00:04:51.356
for these, and also, respond to

00:04:51.356 --> 00:04:52.336
changes in the user's

00:04:52.336 --> 00:04:52.886
preference.

00:04:53.446 --> 00:04:57.326
And not only that, whether

00:04:57.326 --> 00:04:58.846
they're units or not, even

00:04:58.846 --> 00:04:59.696
numbers themselves.

00:04:59.766 --> 00:05:00.656
There are so many things to

00:05:00.656 --> 00:05:02.496
cover there from the decimal

00:05:02.496 --> 00:05:03.836
separator to the thousand

00:05:03.836 --> 00:05:04.326
separator.

00:05:04.326 --> 00:05:06.076
And even, the entire class of

00:05:06.076 --> 00:05:07.986
digits used to represent and

00:05:07.986 --> 00:05:08.936
talk about numbers.

00:05:09.476 --> 00:05:10.526
These can change between

00:05:10.526 --> 00:05:10.986
regions.

00:05:11.436 --> 00:05:12.196
And if you use number

00:05:12.196 --> 00:05:13.876
formatters, your app gets this

00:05:13.916 --> 00:05:15.036
behavior for free.

00:05:15.676 --> 00:05:17.156
And this is important not only

00:05:17.156 --> 00:05:18.996
for consistency, but also,

00:05:18.996 --> 00:05:19.766
understandability.

00:05:20.306 --> 00:05:24.866
Text is, also, another great

00:05:24.866 --> 00:05:26.896
topic with many different areas.

00:05:27.366 --> 00:05:29.716
And depending on the language or

00:05:29.716 --> 00:05:31.386
languages that you grew up

00:05:31.386 --> 00:05:32.846
learning and writing, and the

00:05:32.846 --> 00:05:34.086
scripts that those language are

00:05:34.086 --> 00:05:34.606
written in.

00:05:35.226 --> 00:05:35.896
You might have thought that

00:05:35.896 --> 00:05:36.976
there are some properties that

00:05:37.316 --> 00:05:38.946
are completely immutable across

00:05:38.946 --> 00:05:39.866
other scripts and other

00:05:39.866 --> 00:05:40.516
languages.

00:05:40.996 --> 00:05:42.296
And that might not, necessarily,

00:05:42.296 --> 00:05:42.606
hold.

00:05:43.336 --> 00:05:44.246
One example, probably the

00:05:44.246 --> 00:05:45.476
biggest example, is script

00:05:45.566 --> 00:05:46.356
directionality.

00:05:46.356 --> 00:05:48.046
So, some languages, like Arabic

00:05:48.046 --> 00:05:49.706
and Hebrew, and in this case

00:05:49.706 --> 00:05:51.536
Urdu, are written and read from

00:05:51.536 --> 00:05:52.196
right to left.

00:05:52.196 --> 00:05:53.756
Which, is completely the other

00:05:53.756 --> 00:05:55.406
way from English, from what you

00:05:55.406 --> 00:05:56.116
might be used to.

00:05:57.026 --> 00:05:59.536
And taking this further, many

00:05:59.536 --> 00:06:01.416
books, most books published in

00:06:01.416 --> 00:06:03.196
traditional Chinese and Japanese

00:06:03.506 --> 00:06:05.206
are presented in vertical and

00:06:05.206 --> 00:06:05.876
right to left.

00:06:06.456 --> 00:06:07.436
And so, knowing about these

00:06:07.436 --> 00:06:09.886
formats and knowing about the

00:06:09.886 --> 00:06:10.886
context in which it's

00:06:10.886 --> 00:06:12.396
appropriate to present these and

00:06:12.396 --> 00:06:13.856
adapting your layout for these

00:06:14.176 --> 00:06:15.476
could be an important aspect of

00:06:15.476 --> 00:06:15.836
your app.

00:06:16.406 --> 00:06:18.186
And are why frameworks alongside

00:06:18.186 --> 00:06:19.806
our text frameworks like TextKit

00:06:19.806 --> 00:06:21.566
and CoreText can help you make

00:06:21.566 --> 00:06:22.486
sure you're doing the right

00:06:22.516 --> 00:06:24.076
thing in every single one of

00:06:24.076 --> 00:06:24.666
these cases.

00:06:25.286 --> 00:06:29.516
Going a little bit higher level,

00:06:29.996 --> 00:06:31.156
even things like names.

00:06:31.946 --> 00:06:32.966
Depending on where you grew up,

00:06:32.966 --> 00:06:34.496
you might have a first, middle,

00:06:34.496 --> 00:06:35.196
and last name.

00:06:35.786 --> 00:06:37.276
Or a family name that comes

00:06:37.336 --> 00:06:38.906
before your given name.

00:06:39.956 --> 00:06:40.856
And again, knowing how to

00:06:40.856 --> 00:06:42.416
present these, and even asking

00:06:42.416 --> 00:06:44.376
your user about these could be a

00:06:44.376 --> 00:06:45.526
crucial part of your app.

00:06:45.946 --> 00:06:47.276
And this is something that users

00:06:47.276 --> 00:06:49.596
expect that you get right and

00:06:49.666 --> 00:06:50.936
know about the details and

00:06:51.206 --> 00:06:52.906
intricacies of formatting names.

00:06:53.726 --> 00:06:54.116
And we have

00:06:54.116 --> 00:06:55.546
PersonNameComponentsFormatter

00:06:55.546 --> 00:06:57.216
API that help you do this.

00:07:00.246 --> 00:07:00.536
Okay.

00:07:00.536 --> 00:07:02.046
So, throughout all of these

00:07:02.116 --> 00:07:03.936
concepts it's also important to

00:07:03.936 --> 00:07:06.986
note that many of the users

00:07:06.986 --> 00:07:08.586
might interact with and speak

00:07:08.746 --> 00:07:10.456
more than one language on a

00:07:10.456 --> 00:07:11.176
daily basis.

00:07:11.636 --> 00:07:12.576
Whether it's because they moved

00:07:12.576 --> 00:07:13.886
countries, or simply because

00:07:13.886 --> 00:07:15.386
that region, in and of itself,

00:07:15.796 --> 00:07:17.216
uses more than one language.

00:07:17.746 --> 00:07:20.346
And taking this example further,

00:07:22.236 --> 00:07:23.586
even if your app only supports

00:07:23.586 --> 00:07:25.876
one language it's very likely

00:07:25.876 --> 00:07:27.206
that your customers are using

00:07:27.206 --> 00:07:29.316
your app to publish and consume

00:07:29.316 --> 00:07:31.066
content in their own native

00:07:31.066 --> 00:07:31.546
language.

00:07:32.206 --> 00:07:34.696
And so, regardless of the set of

00:07:34.696 --> 00:07:35.476
languages that your app

00:07:35.476 --> 00:07:37.556
supports, these are all still

00:07:37.556 --> 00:07:38.696
very important topics to

00:07:38.696 --> 00:07:40.246
consider and talk about

00:07:40.526 --> 00:07:41.516
throughout the design and

00:07:41.796 --> 00:07:43.726
implementation of your app.

00:07:45.376 --> 00:07:47.166
So, if all of this is new to

00:07:47.166 --> 00:07:48.226
you, worry not.

00:07:48.626 --> 00:07:50.366
Like I said before, we have a

00:07:50.406 --> 00:07:52.426
great set of APIs that really do

00:07:52.426 --> 00:07:53.716
all the heavy lifting for you

00:07:53.716 --> 00:07:54.646
and take care of all these

00:07:54.676 --> 00:07:55.516
different aspects.

00:07:55.516 --> 00:07:57.236
And are aware of all the

00:07:57.236 --> 00:07:58.356
different details between

00:07:58.356 --> 00:07:59.286
languages and regions.

00:07:59.926 --> 00:08:01.596
These are some examples of the

00:08:01.596 --> 00:08:03.006
Formatter APIs that I talked

00:08:03.006 --> 00:08:03.306
about.

00:08:03.376 --> 00:08:04.906
And we've, also, got some great

00:08:04.906 --> 00:08:05.926
sessions that go into great

00:08:05.996 --> 00:08:07.896
detail on how to further tailor

00:08:07.896 --> 00:08:09.316
these for your app, as well.

00:08:09.966 --> 00:08:14.276
So, let's start our first deep

00:08:14.276 --> 00:08:16.746
dive in to layout and some of

00:08:16.746 --> 00:08:17.726
the goals related to

00:08:17.726 --> 00:08:19.326
internationalization when it

00:08:19.326 --> 00:08:20.986
comes to adaptive layouts.

00:08:23.296 --> 00:08:24.656
Because, really, the core goal

00:08:25.276 --> 00:08:27.096
of an adaptive layout is to

00:08:27.546 --> 00:08:29.236
present all kinds of different

00:08:29.236 --> 00:08:29.856
information.

00:08:30.936 --> 00:08:31.806
And when you're adapting your

00:08:31.806 --> 00:08:33.876
application for other languages,

00:08:34.846 --> 00:08:36.056
probably, the biggest guarantee

00:08:36.056 --> 00:08:37.126
that you'll get is that these

00:08:37.126 --> 00:08:38.126
translation lengths are going to

00:08:38.126 --> 00:08:38.635
be different.

00:08:39.145 --> 00:08:40.226
They're going to be much shorter

00:08:40.226 --> 00:08:41.525
or much longer, depending on the

00:08:41.525 --> 00:08:42.086
language.

00:08:42.385 --> 00:08:44.236
And this is something that your

00:08:44.236 --> 00:08:45.546
design and layout should adapt

00:08:45.546 --> 00:08:45.866
for.

00:08:48.136 --> 00:08:49.466
On top of this, there's also

00:08:49.466 --> 00:08:50.846
directionality, like I mentioned

00:08:50.846 --> 00:08:51.286
before.

00:08:52.036 --> 00:08:53.306
Because some languages are

00:08:53.306 --> 00:08:54.876
written in right to left this

00:08:54.876 --> 00:08:56.656
has some design considerations,

00:08:56.996 --> 00:08:58.106
not just in the text that you

00:08:58.106 --> 00:08:59.866
have in your app, but also, the

00:08:59.866 --> 00:09:01.146
way you present information.

00:09:01.446 --> 00:09:03.026
Especially, horizontally flowing

00:09:03.026 --> 00:09:05.136
information and how that general

00:09:05.136 --> 00:09:06.846
flow should adapt for both

00:09:06.846 --> 00:09:10.966
script and writing directions.

00:09:12.186 --> 00:09:13.236
So, a great starting point to

00:09:13.236 --> 00:09:14.716
help you do all of this is Auto

00:09:14.716 --> 00:09:15.066
Layout.

00:09:15.236 --> 00:09:16.226
You might have heard of Auto

00:09:16.226 --> 00:09:16.916
Layout, before.

00:09:17.686 --> 00:09:19.116
This is a powerful technology

00:09:19.116 --> 00:09:20.266
that is at the core of our

00:09:20.266 --> 00:09:20.966
layout engine.

00:09:21.736 --> 00:09:23.006
And Auto Layout, instead of

00:09:23.006 --> 00:09:26.026
describing explicit frames or

00:09:26.116 --> 00:09:27.606
positions of your controls and

00:09:27.606 --> 00:09:30.286
labels, describes constraints or

00:09:30.286 --> 00:09:31.586
relationships between these

00:09:31.586 --> 00:09:32.016
views.

00:09:32.356 --> 00:09:33.666
And therefore, how they're

00:09:33.666 --> 00:09:34.876
positioned relative to each

00:09:34.876 --> 00:09:36.216
other and how they're allowed to

00:09:36.316 --> 00:09:37.866
grow relative to each other.

00:09:40.206 --> 00:09:41.686
On top of this constraint-based

00:09:41.686 --> 00:09:43.466
system we have the idea of

00:09:43.546 --> 00:09:44.356
leading and trailing

00:09:44.356 --> 00:09:45.036
constraints.

00:09:45.916 --> 00:09:46.976
And what this means is that

00:09:47.346 --> 00:09:48.466
this, essentially, describes

00:09:48.506 --> 00:09:50.166
properties that are left and

00:09:50.166 --> 00:09:51.896
right in a language like English

00:09:52.496 --> 00:09:54.376
that automatically evaluate to

00:09:54.376 --> 00:09:56.486
right and left, respectively, in

00:09:56.486 --> 00:09:57.596
a language like Arabic and

00:09:57.596 --> 00:09:57.966
Hebrew.

00:09:58.696 --> 00:09:59.806
And this means that with Auto

00:09:59.806 --> 00:10:01.336
Layout you can create these

00:10:01.336 --> 00:10:04.396
adaptive layouts that flow

00:10:04.736 --> 00:10:05.626
depending on the writing

00:10:05.626 --> 00:10:06.936
direction without having to

00:10:06.936 --> 00:10:08.466
write special code for either

00:10:08.466 --> 00:10:09.716
one of the writing directions.

00:10:14.056 --> 00:10:15.806
Another great starting point is

00:10:15.806 --> 00:10:17.416
to use high level components and

00:10:17.416 --> 00:10:19.246
containers that we provide in

00:10:19.246 --> 00:10:20.116
our UI frameworks.

00:10:20.186 --> 00:10:22.006
Because these use all of these

00:10:22.006 --> 00:10:23.616
concepts and are aware of how to

00:10:23.616 --> 00:10:24.296
be adaptive.

00:10:25.096 --> 00:10:26.386
Some examples are collection

00:10:26.386 --> 00:10:27.616
views and stack views that we

00:10:27.616 --> 00:10:29.226
provide, both in UIKit and

00:10:29.226 --> 00:10:29.636
AppKit.

00:10:30.326 --> 00:10:31.716
And you can create really

00:10:31.716 --> 00:10:33.336
complex layouts and even embed

00:10:33.336 --> 00:10:35.056
these within each other to,

00:10:35.536 --> 00:10:36.636
potentially, even just create

00:10:36.636 --> 00:10:37.556
the whole layout of your app

00:10:37.626 --> 00:10:38.506
just using these.

00:10:39.976 --> 00:10:41.336
Just as an example for Stack

00:10:41.376 --> 00:10:43.566
View itself, I could arrange

00:10:43.566 --> 00:10:44.896
these horizontally in a Stack

00:10:44.896 --> 00:10:45.066
View.

00:10:45.066 --> 00:10:47.366
So, I have the city name on the

00:10:47.366 --> 00:10:48.706
left and the time on the right.

00:10:49.216 --> 00:10:50.696
And this is, this could just be

00:10:50.696 --> 00:10:52.326
put into a horizontal stack

00:10:52.356 --> 00:10:52.556
view.

00:10:52.556 --> 00:10:54.536
And because this flows left to

00:10:54.536 --> 00:10:56.426
right in English and because I'm

00:10:56.426 --> 00:10:59.286
using a StackView if I run my

00:10:59.286 --> 00:11:01.076
app in Hebrew, this is the

00:11:01.076 --> 00:11:01.796
result I would get.

00:11:01.836 --> 00:11:03.176
Because that information would

00:11:03.236 --> 00:11:04.366
adapt automatically.

00:11:04.616 --> 00:11:06.106
Because StackView is aware of

00:11:06.106 --> 00:11:07.616
these concepts and uses Auto

00:11:07.616 --> 00:11:07.926
Layout

00:11:07.926 --> 00:11:09.026
under the hood.

00:11:09.966 --> 00:11:11.936
If you'd like to learn more

00:11:11.936 --> 00:11:14.586
about Auto Layout and details on

00:11:14.586 --> 00:11:16.116
how to adapt your application

00:11:16.116 --> 00:11:16.846
for different writing

00:11:16.846 --> 00:11:18.436
directions, these are some great

00:11:18.436 --> 00:11:20.866
starting points to check out, as

00:11:22.036 --> 00:11:22.156
well.

00:11:24.306 --> 00:11:25.596
So, when it comes to the text in

00:11:25.596 --> 00:11:27.216
your app and the content in your

00:11:27.216 --> 00:11:29.156
app the key goal here and,

00:11:29.156 --> 00:11:30.456
obviously, the number one

00:11:30.456 --> 00:11:32.796
recommendation is to simply not

00:11:32.796 --> 00:11:33.976
assume fixed widths.

00:11:34.376 --> 00:11:35.676
If you don't do that you're off

00:11:35.676 --> 00:11:37.046
to a great starting point in

00:11:37.046 --> 00:11:38.956
terms of allowing your app to

00:11:39.346 --> 00:11:40.966
adapt to, not only different

00:11:40.966 --> 00:11:42.616
changes in length horizontally.

00:11:42.616 --> 00:11:44.026
But even, potentially, allow

00:11:44.636 --> 00:11:45.946
your labels to grow vertically

00:11:45.946 --> 00:11:47.436
and adapt to multiple lines if

00:11:47.436 --> 00:11:48.016
necessary.

00:11:48.746 --> 00:11:49.486
And this is something you'll

00:11:49.486 --> 00:11:51.036
have to decide in your app and

00:11:51.036 --> 00:11:53.026
your app's design on what you

00:11:53.026 --> 00:11:54.506
want to prioritize in terms of

00:11:54.906 --> 00:11:56.546
what is allowed to grow and use

00:11:56.546 --> 00:11:58.546
up the real estate of your app.

00:11:59.096 --> 00:12:02.086
If your labels and your controls

00:12:02.086 --> 00:12:04.026
are either in stack views in

00:12:04.026 --> 00:12:05.236
these high-level components that

00:12:05.236 --> 00:12:06.646
I mentioned before, or

00:12:06.646 --> 00:12:07.896
positioned using Auto Layout

00:12:07.896 --> 00:12:09.896
itself, this work is pretty much

00:12:09.896 --> 00:12:10.656
done for you.

00:12:10.656 --> 00:12:11.796
You're already allowing your

00:12:11.796 --> 00:12:13.756
labels to grow and your controls

00:12:13.756 --> 00:12:15.406
to take up the content that they

00:12:15.406 --> 00:12:16.126
need to take up.

00:12:16.726 --> 00:12:17.896
And then, it just becomes a

00:12:17.896 --> 00:12:19.866
matter of prioritizing how you

00:12:19.866 --> 00:12:21.666
want to let them grow relative

00:12:21.666 --> 00:12:23.856
to each other.

00:12:25.446 --> 00:12:26.546
So, this is great.

00:12:26.806 --> 00:12:28.106
Let's say you've done all this.

00:12:28.106 --> 00:12:29.786
And how, exactly, do you make

00:12:29.786 --> 00:12:31.356
sure that your app is checking

00:12:31.356 --> 00:12:32.736
off all the right boxes in terms

00:12:32.736 --> 00:12:34.846
of adaptive layout and

00:12:34.986 --> 00:12:36.016
responding to all of these

00:12:36.016 --> 00:12:36.386
things?

00:12:37.036 --> 00:12:38.036
Well, the good news is that

00:12:38.036 --> 00:12:39.206
Xcode provides a number of

00:12:39.206 --> 00:12:40.506
features for you to test.

00:12:40.876 --> 00:12:42.906
And not only that, it allows you

00:12:42.906 --> 00:12:44.486
to test early and find these out

00:12:44.526 --> 00:12:45.936
quickly in the development, and

00:12:45.936 --> 00:12:47.086
early on in the development of

00:12:47.086 --> 00:12:47.446
your app.

00:12:48.666 --> 00:12:50.056
One example is pseudolanguages.

00:12:50.456 --> 00:12:51.636
Pseudolanguages are great,

00:12:52.086 --> 00:12:53.516
especially, when you haven't yet

00:12:53.516 --> 00:12:54.786
added language support to your

00:12:54.786 --> 00:12:54.996
app.

00:12:55.106 --> 00:12:56.466
So, what you can do from within

00:12:56.466 --> 00:12:59.746
Xcode is run your application in

00:12:59.746 --> 00:13:01.326
a pseudolanguage and this

00:13:01.326 --> 00:13:03.466
changes a few details of the

00:13:03.466 --> 00:13:04.616
layout and text of your app.

00:13:05.246 --> 00:13:06.346
One example is the bounded

00:13:06.346 --> 00:13:07.596
string pseudolanguage.

00:13:07.886 --> 00:13:09.156
This adds a few characters at

00:13:09.156 --> 00:13:10.966
the beginning and end of every

00:13:10.966 --> 00:13:12.066
single UI string that you

00:13:12.066 --> 00:13:12.466
display.

00:13:13.066 --> 00:13:15.496
And then, you can see, make sure

00:13:15.496 --> 00:13:17.506
that there aren't truncations or

00:13:17.506 --> 00:13:18.736
unexpected clippings in the

00:13:18.736 --> 00:13:19.506
content of your app.

00:13:19.596 --> 00:13:20.836
So, this is a really useful one.

00:13:20.836 --> 00:13:21.906
And we have many more

00:13:21.906 --> 00:13:23.006
pseudolanguages that can help

00:13:23.006 --> 00:13:25.996
you out, as well.

00:13:26.276 --> 00:13:28.336
Specifically, for Auto Layout we

00:13:28.336 --> 00:13:31.326
have Auto Layout warnings built

00:13:31.326 --> 00:13:31.916
into Xcode.

00:13:31.916 --> 00:13:33.786
So, Xcode can tell you about

00:13:33.786 --> 00:13:35.786
common antipatterns right within

00:13:35.786 --> 00:13:36.596
an interface builder.

00:13:36.596 --> 00:13:38.056
And this can be things like

00:13:38.356 --> 00:13:40.406
fixed width constraints or too

00:13:40.406 --> 00:13:41.896
few constraints on a control or

00:13:41.896 --> 00:13:43.606
label that might, potentially,

00:13:43.606 --> 00:13:45.686
introduce issues at runtime,

00:13:45.836 --> 00:13:47.186
especially, in other languages.

00:13:50.316 --> 00:13:52.076
So, with that, I'd like to hand

00:13:52.076 --> 00:13:53.566
it over to Dongyuan, who's going

00:13:53.566 --> 00:13:55.016
to give you a demo of all of

00:13:55.116 --> 00:13:55.676
this in action.

00:13:56.046 --> 00:13:56.916
Thank you, so much.

00:13:57.086 --> 00:13:57.946
And hope you have a great week.

00:13:58.226 --> 00:13:58.626
Thank you, [inaudible].

00:14:00.016 --> 00:14:01.000
[ Applause ]

00:14:01.126 --> 00:14:01.846
>> Thank you, Joaquim.

00:14:09.486 --> 00:14:10.376
Hi, I'm Dongyuan.

00:14:10.876 --> 00:14:13.266
Let me show you some techniques

00:14:13.266 --> 00:14:14.536
to [inaudible] and some common

00:14:14.536 --> 00:14:16.136
pitfalls to avoid in real world.

00:14:17.316 --> 00:14:18.706
Here's an app called Vacation

00:14:18.706 --> 00:14:20.456
Planet, which is the first

00:14:20.456 --> 00:14:23.416
interplanetary travel agent that

00:14:23.416 --> 00:14:24.906
allows you to book travel for

00:14:24.906 --> 00:14:26.236
not only other countries, but

00:14:26.496 --> 00:14:27.886
also, as you can see in this

00:14:27.886 --> 00:14:29.186
table view, other planets.

00:14:30.526 --> 00:14:32.426
So, I wanted to go to the moon

00:14:32.426 --> 00:14:33.956
for quite a few times.

00:14:34.466 --> 00:14:35.446
So, I can do that, this time.

00:14:36.896 --> 00:14:38.326
And here are all the locations

00:14:38.326 --> 00:14:40.116
available on the moon and their

00:14:40.116 --> 00:14:41.086
distance from Earth.

00:14:42.246 --> 00:14:43.496
Let me choose the location like

00:14:43.496 --> 00:14:44.416
the Clavius Base.

00:14:45.806 --> 00:14:47.496
And here is our Travel Details

00:14:47.496 --> 00:14:47.766
page.

00:14:48.906 --> 00:14:50.266
It seems pretty cheap for one

00:14:50.266 --> 00:14:50.536
trip.

00:14:51.036 --> 00:14:51.836
So, I'm going to buy more

00:14:51.836 --> 00:14:52.296
tickets.

00:14:52.986 --> 00:14:54.886
Let's buy three of them.

00:14:56.336 --> 00:14:57.216
And there we go.

00:14:58.726 --> 00:15:00.286
As you can see, because we

00:15:00.286 --> 00:15:01.736
design and developed the app in

00:15:01.736 --> 00:15:03.866
English our layout works great

00:15:03.866 --> 00:15:04.546
in English.

00:15:05.236 --> 00:15:07.036
However, we still want to make

00:15:07.036 --> 00:15:08.556
sure it can adapt for other

00:15:08.556 --> 00:15:09.046
languages.

00:15:09.946 --> 00:15:11.316
Because we are still early in

00:15:11.316 --> 00:15:12.926
the development cycle and we

00:15:12.996 --> 00:15:14.376
haven't localized the app, yet,

00:15:14.846 --> 00:15:16.406
we can use the pseudolanguages

00:15:16.406 --> 00:15:17.076
in Xcode.

00:15:17.876 --> 00:15:19.596
To do that, I'm going to go

00:15:19.596 --> 00:15:20.846
through the Current Scheme,

00:15:21.616 --> 00:15:22.536
click Edit Scheme.

00:15:23.666 --> 00:15:25.206
And in the scheme editor I have

00:15:25.206 --> 00:15:26.756
an Application Language

00:15:26.756 --> 00:15:27.286
selector.

00:15:28.326 --> 00:15:29.436
I can select one of the

00:15:29.436 --> 00:15:31.286
pseudolanguages like the Bounded

00:15:31.286 --> 00:15:32.346
String Pseudolanguage.

00:15:33.616 --> 00:15:35.496
It's very useful for exposing

00:15:35.496 --> 00:15:37.226
potential clipping or truncation

00:15:37.226 --> 00:15:37.646
issues.

00:15:38.866 --> 00:15:39.916
Let's run the app in this

00:15:39.916 --> 00:15:40.666
configuration.

00:15:41.216 --> 00:15:43.556
As you can see, this

00:15:43.976 --> 00:15:45.446
pseudolanguage adds a few

00:15:45.506 --> 00:15:46.626
special characters at the

00:15:46.626 --> 00:15:48.246
beginning and end of every UI

00:15:48.246 --> 00:15:48.616
strings.

00:15:49.496 --> 00:15:51.236
Our tag line here is still good.

00:15:51.806 --> 00:15:52.906
But the Browse button is

00:15:52.906 --> 00:15:53.476
truncated.

00:15:54.336 --> 00:15:57.326
Let's try to fix that.

00:15:57.536 --> 00:15:58.996
When I select the Browse button

00:15:59.906 --> 00:16:01.496
I can see that there's a wording

00:16:01.496 --> 00:16:02.746
in Xcode.

00:16:04.956 --> 00:16:06.656
The wording shows that we have a

00:16:06.736 --> 00:16:08.476
fixed width constraint and that

00:16:08.476 --> 00:16:09.266
may cause clipping.

00:16:09.266 --> 00:16:11.816
If I want to know more

00:16:11.816 --> 00:16:13.256
information, I can click on the

00:16:13.256 --> 00:16:13.736
I button.

00:16:14.706 --> 00:16:15.976
I'm going to fix the issue by

00:16:15.976 --> 00:16:17.766
click the growth, sorry.

00:16:18.046 --> 00:16:19.166
By click the Warning sign.

00:16:20.036 --> 00:16:21.006
Here are three options.

00:16:21.216 --> 00:16:22.326
I'm going to select the first

00:16:22.326 --> 00:16:23.876
one, which is simply remove the

00:16:23.876 --> 00:16:25.606
constraint to allow the button

00:16:25.606 --> 00:16:26.846
to be wider when there's more

00:16:26.846 --> 00:16:27.276
content.

00:16:27.986 --> 00:16:28.926
Let's do that.

00:16:29.906 --> 00:16:30.286
Okay.

00:16:30.286 --> 00:16:31.366
No other layout issues.

00:16:31.816 --> 00:16:33.926
And then, I'm going to show you

00:16:33.926 --> 00:16:35.686
a very simple way to verify the

00:16:35.686 --> 00:16:36.636
change that was made.

00:16:37.726 --> 00:16:39.326
I'm going to go to the Assistant

00:16:39.326 --> 00:16:40.726
Editor at the top right corner,

00:16:40.986 --> 00:16:41.866
the middle button here.

00:16:42.426 --> 00:16:46.426
Here I can select Preview and

00:16:46.426 --> 00:16:47.466
Main tell Storyboard.

00:16:48.756 --> 00:16:50.546
The Preview pane allows you to

00:16:50.546 --> 00:16:52.236
view your layout in multiple

00:16:52.306 --> 00:16:53.766
screen sizes and different

00:16:53.766 --> 00:16:54.926
languages without running the

00:16:54.926 --> 00:16:55.166
app.

00:16:56.696 --> 00:16:58.106
On the bottom right corner, I'm

00:16:58.326 --> 00:17:00.136
going to select the first, the

00:17:00.206 --> 00:17:01.026
same Bounded String

00:17:01.026 --> 00:17:02.156
Pseudolanguage we just used.

00:17:02.756 --> 00:17:02.886
Great.

00:17:03.896 --> 00:17:06.296
Because we don't have the fixed

00:17:06.296 --> 00:17:07.935
width constraint, anymore, our

00:17:07.935 --> 00:17:08.935
Browse button can now

00:17:08.935 --> 00:17:11.256
accommodate a slightly longer

00:17:12.195 --> 00:17:12.346
string.

00:17:12.546 --> 00:17:13.586
Another very useful

00:17:13.586 --> 00:17:14.925
pseudolanguage is the Double

00:17:14.925 --> 00:17:15.816
Length Pseudolanguage.

00:17:16.425 --> 00:17:18.096
It's for verifying your layout

00:17:18.096 --> 00:17:19.756
against potential languages that

00:17:19.756 --> 00:17:21.636
have longer string length, like

00:17:21.636 --> 00:17:23.506
German, Finnish, or Russian.

00:17:24.376 --> 00:17:26.046
They can sometimes be two times

00:17:26.046 --> 00:17:26.925
longer than English.

00:17:27.685 --> 00:17:28.806
Let's see if that works.

00:17:29.476 --> 00:17:32.096
Now, the Browse button is still

00:17:32.096 --> 00:17:32.426
okay.

00:17:32.726 --> 00:17:34.306
But our tag line is clipped by

00:17:34.306 --> 00:17:35.116
the screen boundaries.

00:17:36.306 --> 00:17:38.016
When I select the label, I can

00:17:38.076 --> 00:17:39.766
see that we only have a center X

00:17:39.826 --> 00:17:40.306
constraint.

00:17:40.636 --> 00:17:42.276
We don't have any leading or

00:17:42.276 --> 00:17:43.976
trailing space constraint, so

00:17:43.976 --> 00:17:45.516
that the label can overflow.

00:17:46.396 --> 00:17:48.216
Let's add a leading space

00:17:48.666 --> 00:17:50.026
constraint to fix that.

00:17:50.516 --> 00:17:51.586
Again, I'm holding down the

00:17:51.586 --> 00:17:54.226
Control key, drag from the label

00:17:54.226 --> 00:17:56.176
to [inaudible] view, and select

00:17:56.176 --> 00:17:57.676
Leading Space to Safe Area.

00:17:57.676 --> 00:18:01.416
I can select the constraint to

00:18:01.416 --> 00:18:02.966
adapt at just its value.

00:18:02.966 --> 00:18:05.616
Let's put something reasonable,

00:18:05.616 --> 00:18:06.976
like 20, for the margin.

00:18:07.586 --> 00:18:11.116
And here, I can see instantly

00:18:11.116 --> 00:18:13.136
that my label is no longer

00:18:13.136 --> 00:18:13.466
clipped.

00:18:14.356 --> 00:18:16.416
However, it's still truncated

00:18:16.986 --> 00:18:18.136
and it's a very important

00:18:18.136 --> 00:18:19.776
message we want to show to all

00:18:19.776 --> 00:18:20.426
of our customers.

00:18:20.936 --> 00:18:21.756
That's not ideal.

00:18:22.856 --> 00:18:24.826
Instead of truncation, I can

00:18:24.826 --> 00:18:26.136
allow the label to wrap into

00:18:26.136 --> 00:18:27.776
multiple lines when necessary.

00:18:28.776 --> 00:18:31.346
Here, when I select the label I

00:18:31.346 --> 00:18:32.726
can see that we have Lines

00:18:32.796 --> 00:18:35.096
property set to one, which means

00:18:35.096 --> 00:18:36.566
we only allow one single line

00:18:36.566 --> 00:18:37.176
for the label.

00:18:38.176 --> 00:18:40.486
If I change the value to zero I

00:18:41.116 --> 00:18:43.186
can allow the label to wrap into

00:18:43.186 --> 00:18:44.266
any number of lines, when

00:18:44.266 --> 00:18:44.806
necessary.

00:18:45.446 --> 00:18:49.336
I can see that my label is now

00:18:49.336 --> 00:18:50.706
three lines in this Double

00:18:50.706 --> 00:18:51.666
Length Pseudolanguage.

00:18:52.926 --> 00:18:54.226
If I switch language back to

00:18:54.226 --> 00:18:56.456
English my label is still one

00:18:56.456 --> 00:18:58.346
line, which is exactly what we

00:18:58.456 --> 00:18:58.976
expected.

00:19:00.416 --> 00:19:02.326
I, also, encourage you to check

00:19:02.326 --> 00:19:04.886
the app down here, where you can

00:19:04.946 --> 00:19:06.606
select different screen sizes.

00:19:07.536 --> 00:19:08.756
I encourage you to check your

00:19:08.756 --> 00:19:10.286
layout in the smallest device,

00:19:10.286 --> 00:19:12.476
like iPhone SE, because clipping

00:19:12.476 --> 00:19:13.976
and truncation are more likely

00:19:13.976 --> 00:19:15.196
to happen in the smaller

00:19:15.196 --> 00:19:15.636
devices.

00:19:16.346 --> 00:19:19.476
Now, I wonder if our layout can

00:19:19.476 --> 00:19:20.466
adapt for right to left

00:19:20.466 --> 00:19:21.646
languages, like Arabic or

00:19:21.716 --> 00:19:22.106
Hebrew.

00:19:22.956 --> 00:19:24.846
As I said earlier, we don't have

00:19:24.846 --> 00:19:26.046
localizations for those

00:19:26.046 --> 00:19:26.706
languages yet.

00:19:27.626 --> 00:19:28.756
We can run another

00:19:28.756 --> 00:19:29.546
pseudolanguage.

00:19:30.466 --> 00:19:31.796
Let's open the Scheme Editor,

00:19:31.796 --> 00:19:34.366
again, this time in application

00:19:34.426 --> 00:19:34.866
language.

00:19:35.656 --> 00:19:36.516
And I'm going to select the

00:19:36.516 --> 00:19:38.546
Right to Left Pseudolanguage and

00:19:39.296 --> 00:19:41.266
run the app in the simulator.

00:19:48.586 --> 00:19:49.016
Okay.

00:19:49.166 --> 00:19:49.546
Browse.

00:19:50.986 --> 00:19:53.166
As you can here, our table will,

00:19:53.166 --> 00:19:55.316
now flows from right to left

00:19:56.366 --> 00:19:57.806
without us making any changes.

00:19:58.616 --> 00:19:59.596
That's because we used

00:19:59.596 --> 00:20:01.466
UITableView and other standard

00:20:01.466 --> 00:20:02.366
UIKit components.

00:20:03.216 --> 00:20:04.526
The system had done the hard

00:20:04.526 --> 00:20:05.486
work for us.

00:20:06.076 --> 00:20:07.806
All the section titles are now

00:20:07.806 --> 00:20:09.206
at the right side, which is the

00:20:09.206 --> 00:20:10.456
leading side for right to left.

00:20:11.206 --> 00:20:12.756
The chevrons here are at the

00:20:12.756 --> 00:20:14.086
left side, which is the trailing

00:20:14.086 --> 00:20:14.386
side.

00:20:15.596 --> 00:20:17.326
I'm going to go to Jupiter, this

00:20:17.326 --> 00:20:17.586
time.

00:20:19.046 --> 00:20:20.976
And you may notice that the Back

00:20:20.976 --> 00:20:22.556
button is now at the top right

00:20:22.556 --> 00:20:24.356
corner, instead of top left.

00:20:25.306 --> 00:20:26.966
That is, actually, very natural

00:20:26.966 --> 00:20:28.046
for right to left languages.

00:20:29.186 --> 00:20:30.596
Let's select a location on

00:20:30.596 --> 00:20:31.000
Jupiter.

00:20:32.626 --> 00:20:35.206
So, here's our Travel Details

00:20:35.206 --> 00:20:35.516
page.

00:20:35.996 --> 00:20:37.436
Everything seems to be okay,

00:20:37.436 --> 00:20:38.966
except the stepper and the

00:20:38.966 --> 00:20:39.706
Traveler label.

00:20:40.546 --> 00:20:41.816
The first issue is that the

00:20:41.816 --> 00:20:42.966
stepper should be at the

00:20:42.966 --> 00:20:44.456
trailing side, which is the left

00:20:44.456 --> 00:20:45.376
side for right to left.

00:20:46.126 --> 00:20:47.506
The Traveler label should be at

00:20:47.506 --> 00:20:48.616
the leading side, which is the

00:20:48.616 --> 00:20:49.306
right side, here.

00:20:50.076 --> 00:20:51.996
And also, there's an unnecessary

00:20:51.996 --> 00:20:53.646
spacing for the Traveler label.

00:20:54.856 --> 00:20:56.186
Let's fix that in that Interface

00:20:56.186 --> 00:20:56.486
Builder.

00:20:57.106 --> 00:21:01.756
Let me locate our trouble zone

00:21:01.756 --> 00:21:04.056
cell, is here.

00:21:04.336 --> 00:21:04.486
Okay.

00:21:05.556 --> 00:21:08.926
Zooming in a little bit.

00:21:09.536 --> 00:21:12.486
When I select the Traveler label

00:21:12.486 --> 00:21:14.596
and the stepper I can see that

00:21:14.596 --> 00:21:15.906
there's no constraint on them.

00:21:16.186 --> 00:21:16.876
That's not good.

00:21:17.726 --> 00:21:19.236
And of course, Xcode has a

00:21:19.236 --> 00:21:20.006
warning for that.

00:21:21.266 --> 00:21:22.906
So, one way to resolve the issue

00:21:22.906 --> 00:21:24.196
is to add a leading space

00:21:24.196 --> 00:21:26.086
constraint for the Travelers and

00:21:26.086 --> 00:21:27.526
a trailing space constraint for

00:21:27.526 --> 00:21:28.046
the stepper.

00:21:28.896 --> 00:21:30.266
Leading and Trailing will

00:21:30.266 --> 00:21:32.246
translate to right and left for

00:21:32.246 --> 00:21:33.156
right to left languages.

00:21:34.186 --> 00:21:35.896
However, here I'm going to show

00:21:35.896 --> 00:21:37.866
you an even simpler way, which

00:21:37.866 --> 00:21:40.086
is to use UIStackView, a

00:21:40.086 --> 00:21:41.656
high-level container view that

00:21:41.656 --> 00:21:43.246
uses Auto Layout under the hood.

00:21:44.076 --> 00:21:45.876
By using Stack View I can get

00:21:45.876 --> 00:21:47.286
right to left support for free.

00:21:47.746 --> 00:21:49.786
Let me select the two views.

00:21:50.836 --> 00:21:53.566
And click the Embed down here at

00:21:53.566 --> 00:21:54.796
the bottom right corner.

00:21:56.276 --> 00:21:58.876
Select Stack View.

00:21:59.116 --> 00:22:00.516
Now, my two views are inside

00:22:00.516 --> 00:22:01.416
this UIStackView.

00:22:02.026 --> 00:22:03.446
The only thing left is to add

00:22:03.446 --> 00:22:04.846
constraints to the Stack View

00:22:04.846 --> 00:22:05.416
itself.

00:22:05.416 --> 00:22:08.236
I'm going to select Stack View,

00:22:08.846 --> 00:22:10.276
click the Add Constraints

00:22:10.316 --> 00:22:10.596
button.

00:22:11.976 --> 00:22:13.556
I'm entering four zeros, here,

00:22:13.866 --> 00:22:15.276
because I want the Stack View to

00:22:15.276 --> 00:22:17.096
fill the table view cell as much

00:22:17.096 --> 00:22:17.716
as possible.

00:22:18.586 --> 00:22:20.166
And I like to select the

00:22:20.166 --> 00:22:21.516
Constrain to margins here,

00:22:22.026 --> 00:22:23.276
because I want some default

00:22:23.276 --> 00:22:24.346
margins for the Stack View.

00:22:24.676 --> 00:22:26.176
And I want the leading edge to

00:22:26.176 --> 00:22:28.006
align with the cell separators.

00:22:28.566 --> 00:22:29.776
And add four constraints.

00:22:30.856 --> 00:22:31.356
There you go.

00:22:32.816 --> 00:22:34.516
And I'm going to verify my

00:22:34.516 --> 00:22:34.896
change.

00:22:39.266 --> 00:22:39.446
Yep.

00:22:39.706 --> 00:22:40.086
Browse.

00:22:41.426 --> 00:22:42.916
This time, I'd like to visit

00:22:42.916 --> 00:22:43.116
Earth.

00:22:43.726 --> 00:22:46.046
And I'd like to go through

00:22:46.046 --> 00:22:47.896
Lisbon, Portugal, to visit

00:22:47.896 --> 00:22:48.656
[inaudible].

00:22:48.656 --> 00:22:52.576
Do that. Now, as you can see,

00:22:52.576 --> 00:22:54.486
because our Traveler label and

00:22:54.486 --> 00:22:55.946
the stepper is now inside a

00:22:55.946 --> 00:22:57.656
UIStackView, we get right to

00:22:57.656 --> 00:22:58.676
left support for free.

00:22:59.626 --> 00:23:02.246
Let's book this travel.

00:23:02.326 --> 00:23:02.586
Great.

00:23:03.296 --> 00:23:07.466
Now, let me summarize what we

00:23:07.466 --> 00:23:07.916
talked about.

00:23:13.386 --> 00:23:15.036
So, to make our app layout great

00:23:15.036 --> 00:23:16.826
for our global audience, there

00:23:16.826 --> 00:23:18.366
are a few simple steps.

00:23:18.996 --> 00:23:20.246
First, is to use high level

00:23:20.246 --> 00:23:21.496
containers like StackView

00:23:21.496 --> 00:23:23.066
whenever possible, as they

00:23:23.066 --> 00:23:24.396
provide a lot of heavy lifting

00:23:24.396 --> 00:23:24.866
for you.

00:23:25.526 --> 00:23:26.706
And believe me, they are just

00:23:26.706 --> 00:23:27.506
simpler to use.

00:23:28.506 --> 00:23:30.146
For finer control, remember to

00:23:30.146 --> 00:23:31.936
use Auto Layout and make sure to

00:23:31.936 --> 00:23:33.186
use leading and trailing

00:23:33.186 --> 00:23:34.976
constraint so that you can adapt

00:23:34.976 --> 00:23:36.016
for right to left languages.

00:23:37.016 --> 00:23:38.546
For early testing without even

00:23:38.546 --> 00:23:40.396
localizing your app, you can use

00:23:40.396 --> 00:23:42.136
the pseudolanguages in Xcode

00:23:42.136 --> 00:23:42.786
Scheme Editor.

00:23:43.556 --> 00:23:44.886
And please, don't ignore the

00:23:44.886 --> 00:23:45.996
Auto Layout warnings in the

00:23:45.996 --> 00:23:46.796
Interface Builder.

00:23:47.246 --> 00:23:48.456
They are very useful for

00:23:48.456 --> 00:23:50.486
avoiding clipping, truncation,

00:23:50.486 --> 00:23:51.606
and overlapping issues.

00:23:52.516 --> 00:23:54.286
Now, over to Karan to talk about

00:23:54.566 --> 00:23:54.876
text.

00:23:55.016 --> 00:23:57.000
[ Applause ]

00:23:57.276 --> 00:23:58.006
>> Thank you, Dongyuan.

00:23:58.946 --> 00:24:00.306
Good morning, everyone.

00:24:01.056 --> 00:24:01.866
Let's talk about text.

00:24:03.276 --> 00:24:06.546
At Apple, a high quality

00:24:06.546 --> 00:24:08.096
typographical experience is a

00:24:08.246 --> 00:24:09.786
key part of our design process.

00:24:11.056 --> 00:24:13.906
And it's very important to us

00:24:14.356 --> 00:24:17.486
how text looks on screen and how

00:24:17.486 --> 00:24:18.166
it's designed.

00:24:19.336 --> 00:24:21.446
And also, the way that it

00:24:21.446 --> 00:24:23.216
translates to other languages.

00:24:26.816 --> 00:24:29.016
So, let me walk you through some

00:24:29.196 --> 00:24:30.806
key aspects that we keep in mind

00:24:30.806 --> 00:24:32.346
when we localize our own apps

00:24:32.346 --> 00:24:33.246
into other languages.

00:24:33.656 --> 00:24:34.886
And how you can take advantage

00:24:34.886 --> 00:24:36.416
of these things to make your

00:24:36.656 --> 00:24:37.886
apps look great in other

00:24:37.886 --> 00:24:38.316
languages.

00:24:41.226 --> 00:24:42.616
Now, I'm going to talk about

00:24:42.616 --> 00:24:44.426
three main topics, set up some

00:24:44.426 --> 00:24:45.866
fundamentals with languages and

00:24:45.866 --> 00:24:46.126
scripts.

00:24:46.316 --> 00:24:48.356
And then, dive into typefaces

00:24:48.386 --> 00:24:49.026
and styles.

00:24:49.986 --> 00:24:51.176
Let's talk about languages and

00:24:51.796 --> 00:24:52.000
scripts.

00:24:54.666 --> 00:24:56.276
What is a script?

00:24:56.556 --> 00:24:57.966
So, when I'm talking about

00:24:57.966 --> 00:24:59.026
script, I don't mean a Bash

00:24:59.026 --> 00:25:00.206
script or a Python script.

00:25:00.996 --> 00:25:04.026
I'm talking about the way that a

00:25:04.026 --> 00:25:04.886
language is written.

00:25:05.196 --> 00:25:06.496
So, the writing system.

00:25:06.586 --> 00:25:07.696
The letters that you use to

00:25:07.696 --> 00:25:08.466
write a language.

00:25:08.986 --> 00:25:09.996
These are some of the scripts

00:25:09.996 --> 00:25:11.396
that we support that are written

00:25:11.396 --> 00:25:12.066
from left to right.

00:25:14.276 --> 00:25:15.896
We, also, have scripts that are

00:25:15.896 --> 00:25:18.206
written from right to left.

00:25:18.916 --> 00:25:20.956
The key thing to note about all

00:25:20.956 --> 00:25:22.206
of these scripts is that they're

00:25:22.206 --> 00:25:22.956
multilingual.

00:25:23.546 --> 00:25:25.376
So, each script supports a huge

00:25:25.376 --> 00:25:26.656
variety of languages that are

00:25:26.656 --> 00:25:27.146
written in it.

00:25:27.776 --> 00:25:29.706
And as you can see, the Latin

00:25:29.706 --> 00:25:31.106
script here supports everything

00:25:31.106 --> 00:25:32.686
from English to Vietnamese.

00:25:33.936 --> 00:25:34.896
And this is true for other

00:25:34.896 --> 00:25:35.496
scripts, as well.

00:25:35.496 --> 00:25:37.596
For example, the Cyrillic script

00:25:37.596 --> 00:25:38.836
supports a variety of different

00:25:38.836 --> 00:25:39.346
languages.

00:25:40.396 --> 00:25:42.266
And if you look at right to left

00:25:42.266 --> 00:25:44.136
scripts, we see that the Arabic

00:25:44.276 --> 00:25:45.636
script, not the Arabic language,

00:25:45.636 --> 00:25:46.856
but the Arabic script supports a

00:25:46.856 --> 00:25:48.136
variety of different languages,

00:25:48.176 --> 00:25:49.676
such as Arabic and Persian,

00:25:50.246 --> 00:25:51.176
Urdu, etcetera.

00:25:52.726 --> 00:25:54.436
So, what you're seeing on

00:25:54.436 --> 00:25:55.676
screen, yes, there's a lot of

00:25:55.676 --> 00:25:56.596
visual variety.

00:25:57.246 --> 00:25:58.886
But this is not just for show.

00:25:58.886 --> 00:25:59.996
There's, actually, a lot of

00:25:59.996 --> 00:26:01.116
implications when you develop

00:26:01.116 --> 00:26:02.616
your apps and different scripts

00:26:02.976 --> 00:26:05.616
because some concepts don't map

00:26:05.616 --> 00:26:06.776
across scripts as easily as

00:26:06.776 --> 00:26:07.126
others.

00:26:07.486 --> 00:26:08.466
So, let me show you a few

00:26:08.466 --> 00:26:09.136
examples of this.

00:26:09.806 --> 00:26:12.566
Let's talk about typefaces.

00:26:13.986 --> 00:26:15.876
So, here you see the Health app

00:26:15.876 --> 00:26:16.716
in English.

00:26:17.246 --> 00:26:19.546
So, you see a lot of labels.

00:26:21.156 --> 00:26:22.566
Now, you see the same app in

00:26:22.566 --> 00:26:23.056
Catalan.

00:26:23.786 --> 00:26:27.946
And lastly, you see the same app

00:26:27.946 --> 00:26:28.656
in Vietnamese.

00:26:29.576 --> 00:26:31.336
Now, the thing that I'd like to

00:26:32.396 --> 00:26:34.056
call your attention to is that

00:26:34.056 --> 00:26:36.106
all the text here on screen is

00:26:36.106 --> 00:26:37.606
rendered using our system font,

00:26:37.746 --> 00:26:38.376
San Francisco.

00:26:39.546 --> 00:26:41.106
And the other thing I'd like for

00:26:41.106 --> 00:26:42.456
you to notice is that everything

00:26:42.456 --> 00:26:43.276
is rendered beautifully.

00:26:44.156 --> 00:26:45.636
That's because San Francisco has

00:26:45.636 --> 00:26:47.076
support for a huge variety of

00:26:47.076 --> 00:26:47.916
different languages.

00:26:48.346 --> 00:26:50.036
And when you use the system font

00:26:50.036 --> 00:26:51.446
in your apps, you're guaranteed

00:26:51.446 --> 00:26:52.566
to get that support for free.

00:26:54.246 --> 00:26:56.736
Now, any text label that you

00:26:56.736 --> 00:26:58.476
create in Xcode will get

00:26:58.526 --> 00:26:59.676
San Francisco by default.

00:27:00.406 --> 00:27:02.426
But if you want to go one step

00:27:02.496 --> 00:27:05.696
further, use a text style.

00:27:06.716 --> 00:27:07.726
We support a variety of

00:27:07.726 --> 00:27:09.606
different styles in our OS that

00:27:09.606 --> 00:27:11.776
are meticulously implemented to

00:27:11.776 --> 00:27:13.356
support a variety of different

00:27:13.356 --> 00:27:13.966
use cases.

00:27:14.616 --> 00:27:17.026
And also, to map across

00:27:17.026 --> 00:27:18.046
different languages, really

00:27:18.046 --> 00:27:18.326
well.

00:27:19.466 --> 00:27:20.866
So, when you use a text style

00:27:20.866 --> 00:27:22.806
you guarantee a consistent high

00:27:22.806 --> 00:27:23.876
quality experience to your

00:27:23.876 --> 00:27:24.246
users.

00:27:24.876 --> 00:27:27.216
You can also go one step

00:27:27.286 --> 00:27:27.666
further.

00:27:28.956 --> 00:27:29.966
If you set your label to

00:27:29.966 --> 00:27:31.286
automatically adjust its font

00:27:31.286 --> 00:27:33.426
size, it will do so with respect

00:27:33.426 --> 00:27:34.806
to the user's text size setting.

00:27:35.346 --> 00:27:36.626
And this is really handy for

00:27:36.626 --> 00:27:38.326
people who use smaller or large

00:27:38.326 --> 00:27:40.356
sizes for their text.

00:27:40.356 --> 00:27:41.476
Like myself.

00:27:42.166 --> 00:27:43.586
So, I highly encourage you to

00:27:43.586 --> 00:27:45.666
use that and this will ensure

00:27:45.666 --> 00:27:47.116
that your text styles scale

00:27:47.116 --> 00:27:47.716
appropriately.

00:27:48.326 --> 00:27:52.236
But let's say, that like us,

00:27:52.236 --> 00:27:53.176
we're making this Vacation

00:27:53.176 --> 00:27:54.636
Planet app to go to Jupiter, to

00:27:54.636 --> 00:27:55.136
go to Mars.

00:27:55.916 --> 00:27:58.766
And we wanted to have this fun

00:27:58.766 --> 00:28:00.946
vacation look to it, which it

00:28:00.946 --> 00:28:01.936
doesn't right now, because

00:28:01.936 --> 00:28:02.816
everything is in the system

00:28:02.816 --> 00:28:03.116
font.

00:28:03.256 --> 00:28:05.266
So, we decided that the title of

00:28:05.266 --> 00:28:06.706
the font should evoke the

00:28:06.706 --> 00:28:07.616
personality of the app.

00:28:08.996 --> 00:28:10.096
And so, we looked at a few

00:28:10.096 --> 00:28:11.496
different fun fonts to choose

00:28:11.496 --> 00:28:11.786
from.

00:28:13.096 --> 00:28:14.006
We looked at this one, for

00:28:14.006 --> 00:28:14.486
starters.

00:28:14.956 --> 00:28:16.636
But as Joaquim mentioned from

00:28:16.636 --> 00:28:18.436
the start, we like to keep

00:28:18.626 --> 00:28:20.486
localization as a central part

00:28:20.486 --> 00:28:21.736
of our development and design

00:28:22.056 --> 00:28:22.556
process.

00:28:22.806 --> 00:28:24.556
So, the first thing we did was

00:28:25.316 --> 00:28:26.796
to check does this work for all

00:28:26.796 --> 00:28:27.556
the languages we need to

00:28:27.556 --> 00:28:28.006
support?

00:28:28.096 --> 00:28:29.616
Well, we already had a French

00:28:29.616 --> 00:28:30.326
localization.

00:28:30.836 --> 00:28:31.516
So, we tried it out.

00:28:31.516 --> 00:28:33.976
As it turns out, it doesn't.

00:28:34.656 --> 00:28:37.076
So, we kept looking at our short

00:28:37.076 --> 00:28:39.286
list of options.

00:28:39.746 --> 00:28:40.846
And we looked at this other

00:28:40.846 --> 00:28:41.326
typeface.

00:28:42.396 --> 00:28:44.106
And when we tried it out in

00:28:44.166 --> 00:28:45.576
French, voila!

00:28:45.936 --> 00:28:47.496
It works because it supports all

00:28:47.496 --> 00:28:48.256
the characters needed for

00:28:48.256 --> 00:28:48.576
French.

00:28:49.156 --> 00:28:49.946
So, that's great news.

00:28:52.256 --> 00:28:54.416
So, the next step for our app

00:28:54.416 --> 00:28:55.766
was to expand to Vietnamese.

00:28:55.766 --> 00:28:57.556
But we didn't have a Vietnamese

00:28:57.556 --> 00:28:58.486
localization, yet.

00:28:59.266 --> 00:29:01.356
So, one great tool that you can

00:29:01.356 --> 00:29:03.226
use is FontBook, which comes

00:29:03.356 --> 00:29:06.126
installed on every Mac, even if

00:29:06.126 --> 00:29:06.846
you're not a developer.

00:29:06.846 --> 00:29:08.086
It comes installed on every Mac.

00:29:08.636 --> 00:29:10.166
And in FontBook you can easily

00:29:10.216 --> 00:29:11.986
search for the name of a

00:29:12.026 --> 00:29:13.786
language, like Vietnamese, here.

00:29:14.516 --> 00:29:16.956
And we see here, that in the

00:29:16.996 --> 00:29:19.066
font that we chose Vietnamese is

00:29:19.066 --> 00:29:19.936
in the set of supported

00:29:19.936 --> 00:29:20.366
languages.

00:29:20.916 --> 00:29:22.726
In fact, this font also supports

00:29:22.896 --> 00:29:23.996
Cyrillic and Greek script.

00:29:24.116 --> 00:29:26.316
So, we are somewhat sure that if

00:29:26.316 --> 00:29:27.596
we expand to Russian and

00:29:27.596 --> 00:29:29.226
Ukrainian and Greek later that

00:29:29.226 --> 00:29:30.336
this font will work for us.

00:29:31.256 --> 00:29:33.266
Now, I should advise some

00:29:33.266 --> 00:29:33.886
caution here.

00:29:34.416 --> 00:29:35.886
Just because FontBook says that

00:29:35.886 --> 00:29:37.326
a font supports a given language

00:29:37.326 --> 00:29:38.736
doesn't mean that you don't have

00:29:38.776 --> 00:29:40.626
to, actually, test your app in

00:29:40.626 --> 00:29:41.176
that language.

00:29:41.176 --> 00:29:42.406
You still need to make sure that

00:29:42.736 --> 00:29:44.086
the font really works for that

00:29:44.086 --> 00:29:48.746
language, by trying it out.

00:29:49.046 --> 00:29:51.856
So, we've got our beautiful fun

00:29:51.946 --> 00:29:53.986
font for our Vacation Planet

00:29:54.166 --> 00:29:54.636
app.

00:29:55.526 --> 00:29:56.866
And now, we're going to expand

00:29:57.516 --> 00:29:58.216
even further.

00:29:58.396 --> 00:29:59.336
So, we want to do more

00:29:59.336 --> 00:29:59.786
languages.

00:29:59.876 --> 00:30:00.726
Specifically, we want to

00:30:00.726 --> 00:30:02.466
localize into Chinese.

00:30:03.346 --> 00:30:03.856
Okay.

00:30:04.026 --> 00:30:05.326
So, we sent off all our strings

00:30:05.326 --> 00:30:06.666
for translation and they've come

00:30:06.666 --> 00:30:06.896
back.

00:30:07.386 --> 00:30:08.876
And our app is now perfectly

00:30:08.876 --> 00:30:09.976
localized into simplified

00:30:09.976 --> 00:30:10.346
Chinese.

00:30:11.036 --> 00:30:11.546
Cool.

00:30:12.956 --> 00:30:14.716
But it's not really, though.

00:30:14.816 --> 00:30:15.886
Because look at what happened to

00:30:15.886 --> 00:30:16.356
the title.

00:30:17.366 --> 00:30:19.146
So, in English, we have this fun

00:30:19.196 --> 00:30:22.016
font, but in Chinese we are

00:30:22.016 --> 00:30:22.976
using the system font.

00:30:23.126 --> 00:30:24.506
That's because our font only

00:30:24.506 --> 00:30:25.636
supports the Cyrillic, Greek,

00:30:25.636 --> 00:30:26.336
and Latin scripts.

00:30:27.926 --> 00:30:29.386
So, of course, the way to fix

00:30:29.386 --> 00:30:30.856
this is to repeat the same

00:30:30.986 --> 00:30:33.696
process for Chinese.

00:30:33.696 --> 00:30:35.236
And here now, we have out fun

00:30:35.276 --> 00:30:36.136
font in Chinese.

00:30:36.326 --> 00:30:38.416
It's as simple as that.

00:30:39.136 --> 00:30:40.556
And unfortunately, I can't

00:30:40.556 --> 00:30:41.326
really help you with that.

00:30:41.326 --> 00:30:42.606
That's a stylistic thing and you

00:30:42.606 --> 00:30:43.616
have to choose your own fonts.

00:30:43.846 --> 00:30:45.586
But I can show you how this is

00:30:45.586 --> 00:30:46.126
done in code.

00:30:48.006 --> 00:30:49.646
So, this is really

00:30:49.646 --> 00:30:50.216
straightforward.

00:30:50.646 --> 00:30:52.596
First of all, you start with

00:30:52.596 --> 00:30:53.676
your font for your development

00:30:53.676 --> 00:30:55.006
language, normally.

00:30:55.056 --> 00:30:57.096
Such as, in our case, it's

00:30:57.146 --> 00:30:57.536
English.

00:30:57.636 --> 00:30:58.856
So, we choose our Latin script

00:30:58.856 --> 00:30:59.896
font and get our font here.

00:31:01.266 --> 00:31:02.726
And the key concept that I want

00:31:02.726 --> 00:31:03.976
to introduce you to, here, is

00:31:03.976 --> 00:31:05.286
called a Cascade List.

00:31:05.856 --> 00:31:08.746
So, a Cascade List says if I'm

00:31:08.746 --> 00:31:11.326
looking to render this Chinese

00:31:11.766 --> 00:31:14.086
character and this first font

00:31:14.086 --> 00:31:15.796
doesn't have it, what font

00:31:15.796 --> 00:31:17.396
should I use after this to look

00:31:17.396 --> 00:31:18.166
for this character?

00:31:18.556 --> 00:31:19.666
Now, if you don't specify a

00:31:19.666 --> 00:31:20.876
Cascade List you're going to get

00:31:20.876 --> 00:31:21.606
the system font.

00:31:22.066 --> 00:31:23.376
But if you do have a Cascade

00:31:23.376 --> 00:31:24.646
List, then you can specify other

00:31:24.646 --> 00:31:26.426
fonts to try before falling back

00:31:26.646 --> 00:31:27.446
to the system font.

00:31:28.426 --> 00:31:29.526
So, in this case, we create a

00:31:29.526 --> 00:31:30.586
Cascade List with a font

00:31:30.586 --> 00:31:32.096
descriptor for our font for

00:31:32.096 --> 00:31:34.046
Chinese that we hand-picked.

00:31:34.836 --> 00:31:36.306
Now, if your app supports

00:31:36.306 --> 00:31:37.316
multiple scripts you add

00:31:37.316 --> 00:31:39.036
multiple things here and that's

00:31:39.286 --> 00:31:40.516
as simple as it works.

00:31:41.616 --> 00:31:43.056
And once you've got a Cascade

00:31:43.056 --> 00:31:44.046
List you create a new font

00:31:44.046 --> 00:31:44.556
descriptor.

00:31:44.556 --> 00:31:45.656
And then, you create a new font.

00:31:45.896 --> 00:31:46.566
Pretty straightforward.

00:31:47.156 --> 00:31:50.136
And also, make sure that if your

00:31:50.136 --> 00:31:51.846
app used dynamic type, which it

00:31:51.846 --> 00:31:54.506
really should, then your font

00:31:54.506 --> 00:31:55.706
should adjust to that, as well.

00:31:55.706 --> 00:31:57.066
And again, that's as simple as

00:31:57.066 --> 00:31:57.736
an API call.

00:31:59.466 --> 00:32:00.286
Let's see some examples.

00:32:02.256 --> 00:32:04.126
So, this is the new Word of the

00:32:04.126 --> 00:32:06.256
Day screensaver in macOS Mojave.

00:32:07.316 --> 00:32:08.786
And as you can see, for this new

00:32:08.786 --> 00:32:10.286
design we've chosen a rounded

00:32:10.346 --> 00:32:10.696
style.

00:32:11.256 --> 00:32:13.466
And of course, it wouldn't make

00:32:13.466 --> 00:32:15.086
sense if we didn't, also, choose

00:32:15.186 --> 00:32:16.796
equivalent rounded styles for

00:32:16.796 --> 00:32:17.866
all the languages that the

00:32:17.866 --> 00:32:19.196
screensaver supported, which

00:32:19.196 --> 00:32:20.096
includes Japanese.

00:32:20.786 --> 00:32:23.686
And also, new in macOS Mojave,

00:32:23.896 --> 00:32:25.146
simplified and traditional

00:32:25.146 --> 00:32:25.536
Chinese.

00:32:29.566 --> 00:32:31.286
Another example is the Messages

00:32:31.286 --> 00:32:34.726
app, in which you can respond to

00:32:34.796 --> 00:32:36.486
a message using a tap back

00:32:36.486 --> 00:32:36.946
reaction.

00:32:37.706 --> 00:32:39.426
Now, here you'll see that the

00:32:39.526 --> 00:32:42.056
ha-ha in English has been not

00:32:42.056 --> 00:32:43.626
only translated to other

00:32:43.626 --> 00:32:44.146
languages.

00:32:44.186 --> 00:32:45.386
But has, also, been matched in

00:32:45.446 --> 00:32:46.656
style, so you get the same

00:32:46.656 --> 00:32:49.036
bubbly fun look in all the

00:32:49.036 --> 00:32:50.806
languages that we support.

00:32:51.736 --> 00:32:53.176
That's it for typefaces.

00:32:54.626 --> 00:32:55.786
Let's talk about styles.

00:32:56.836 --> 00:32:57.726
Again, I should start with the

00:32:57.726 --> 00:32:58.336
definition.

00:32:59.486 --> 00:33:02.096
What do I mean by a style?

00:33:02.666 --> 00:33:04.496
So, broadly speaking, I'm

00:33:04.496 --> 00:33:06.316
referring to aspects of your

00:33:06.316 --> 00:33:07.616
text that you choose once you've

00:33:07.616 --> 00:33:08.666
chosen a typeface.

00:33:09.176 --> 00:33:11.276
So, let's say the font weight,

00:33:11.746 --> 00:33:13.616
like how bold it is, or whether

00:33:13.616 --> 00:33:16.036
it's italicized, and what the

00:33:16.086 --> 00:33:17.246
size of the font may be.

00:33:19.546 --> 00:33:21.636
So, the key thing to keep in

00:33:21.636 --> 00:33:23.246
mind is that some aspects

00:33:23.816 --> 00:33:26.156
translate better to other

00:33:26.156 --> 00:33:27.286
languages and others don't.

00:33:27.286 --> 00:33:29.086
So, let's take a look at an

00:33:29.086 --> 00:33:31.436
example of where something might

00:33:31.466 --> 00:33:32.136
not translate.

00:33:32.876 --> 00:33:34.306
So, here we have a simple string

00:33:34.306 --> 00:33:34.816
in English.

00:33:35.586 --> 00:33:36.866
We've italicized Mars and 2

00:33:36.866 --> 00:33:37.946
Travelers to indicate that

00:33:37.946 --> 00:33:39.266
they're variables, so they can

00:33:39.266 --> 00:33:39.646
change.

00:33:41.666 --> 00:33:42.936
And this is how it translates

00:33:42.936 --> 00:33:43.966
into traditional Chinese.

00:33:45.496 --> 00:33:46.376
There are a couple of issues

00:33:46.916 --> 00:33:47.000
here.

00:33:48.936 --> 00:33:51.426
Mars is italicized in English.

00:33:51.586 --> 00:33:54.126
It's not italicized in Chinese.

00:33:54.336 --> 00:33:54.696
Why?

00:33:55.096 --> 00:33:56.716
Because italicization is not a

00:33:56.716 --> 00:33:57.726
concept in Chinese.

00:33:57.856 --> 00:33:58.926
And it's not a concept in,

00:33:58.926 --> 00:34:00.596
actually, most scripts outside

00:34:00.596 --> 00:34:01.696
of Latin, Cyrillic, and Greek.

00:34:03.406 --> 00:34:04.936
So, a design that uses italics,

00:34:05.366 --> 00:34:06.186
probably, won't work.

00:34:06.996 --> 00:34:08.886
The other thing to note is that

00:34:08.886 --> 00:34:10.076
in Chinese there are no spaces

00:34:10.076 --> 00:34:11.326
between words, and also, there

00:34:11.326 --> 00:34:13.206
is no concept of uppercase and

00:34:13.206 --> 00:34:13.936
lowercase letters.

00:34:14.306 --> 00:34:15.626
So, you kind of lose a natural

00:34:15.626 --> 00:34:17.085
distinction that you get in

00:34:17.085 --> 00:34:18.485
English when you translate it

00:34:19.326 --> 00:34:19.976
into Chinese.

00:34:20.286 --> 00:34:21.985
A couple of small things to

00:34:21.985 --> 00:34:23.255
note, also, is that the word

00:34:23.255 --> 00:34:25.775
order is different.

00:34:25.896 --> 00:34:27.406
And also, because the 2 still

00:34:27.406 --> 00:34:29.106
comes from the Latin script and

00:34:29.106 --> 00:34:30.646
is still italicized, it doesn't

00:34:30.646 --> 00:34:31.806
look great.

00:34:32.755 --> 00:34:34.315
So, how can you fix this?

00:34:35.846 --> 00:34:38.346
Well, the keys to realizing that

00:34:38.346 --> 00:34:39.755
you're doing emphasis, not

00:34:39.755 --> 00:34:41.106
necessarily italics.

00:34:41.656 --> 00:34:42.886
And emphasis can be done in

00:34:42.886 --> 00:34:43.835
multiple different ways.

00:34:44.045 --> 00:34:44.956
This is a great way to do

00:34:44.956 --> 00:34:46.096
emphasis that works across

00:34:46.186 --> 00:34:47.186
several different languages.

00:34:47.295 --> 00:34:48.386
In fact, it works for all the

00:34:48.386 --> 00:34:49.926
languages that we support, which

00:34:49.926 --> 00:34:52.636
is to bold a given word.

00:34:53.166 --> 00:34:57.256
Lastly, let's talk about

00:34:57.366 --> 00:34:58.866
emphasis at a character level or

00:34:58.866 --> 00:34:59.916
sub-word level.

00:35:01.476 --> 00:35:02.596
Let's say we have an app with a

00:35:02.656 --> 00:35:04.696
Search feature and we want to

00:35:04.696 --> 00:35:05.866
highlight the part of the

00:35:05.866 --> 00:35:07.326
results that matched to make it

00:35:07.326 --> 00:35:08.266
clear to the user what's

00:35:08.266 --> 00:35:08.706
happening.

00:35:09.636 --> 00:35:11.066
Now, this works really well for

00:35:11.066 --> 00:35:13.756
English, by using a bolder

00:35:13.756 --> 00:35:14.986
weight for the matched segment.

00:35:15.676 --> 00:35:19.716
It works really badly for Hindi.

00:35:20.226 --> 00:35:23.446
So, what you're seeing here, so

00:35:23.476 --> 00:35:24.916
anybody who can read Hindi will

00:35:24.916 --> 00:35:26.056
tell you that everything on the

00:35:26.056 --> 00:35:27.176
right-hand side looks completely

00:35:27.176 --> 00:35:27.596
broken.

00:35:28.406 --> 00:35:31.096
Any time you see a dotted circle

00:35:31.346 --> 00:35:33.646
inside a Hindi word, something

00:35:33.646 --> 00:35:34.926
has gone very, very wrong.

00:35:35.896 --> 00:35:37.396
And the reason this is happening

00:35:37.796 --> 00:35:39.286
is because even though it's the

00:35:39.286 --> 00:35:40.826
same font family, different

00:35:40.826 --> 00:35:42.716
weights within that font are,

00:35:42.716 --> 00:35:43.926
actually, a different font.

00:35:44.326 --> 00:35:45.446
And you can't have the

00:35:45.446 --> 00:35:46.996
appropriate joining behavior for

00:35:46.996 --> 00:35:48.956
languages like Hindi if you have

00:35:48.996 --> 00:35:49.836
two different fonts.

00:35:51.466 --> 00:35:54.026
So, one easy way to solve this

00:35:54.026 --> 00:35:55.856
problem is use a different kind

00:35:55.856 --> 00:35:57.316
of emphasis at a character

00:35:57.316 --> 00:35:57.526
level.

00:35:57.526 --> 00:35:58.596
So, at a character level you can

00:35:58.596 --> 00:36:00.766
use something like using a

00:36:02.016 --> 00:36:02.666
different color.

00:36:03.286 --> 00:36:04.966
For example, here we use black

00:36:04.966 --> 00:36:07.146
color for the math segment and

00:36:07.226 --> 00:36:08.206
gray for the remainder of the

00:36:08.206 --> 00:36:08.486
word.

00:36:08.936 --> 00:36:09.926
This works really well.

00:36:10.566 --> 00:36:13.866
Now, you'll see some dotted

00:36:13.896 --> 00:36:15.626
circles on the keyboard.

00:36:15.696 --> 00:36:16.786
That's perfectly fine.

00:36:16.886 --> 00:36:18.416
They're dependent marks.

00:36:21.906 --> 00:36:24.196
And here's the same example in

00:36:24.246 --> 00:36:24.646
Arabic.

00:36:25.146 --> 00:36:26.986
Again, the same approach is used

00:36:27.046 --> 00:36:28.836
all over iOS and macOS, and it

00:36:28.836 --> 00:36:30.496
works really well for many

00:36:30.496 --> 00:36:30.966
purposes.

00:36:32.336 --> 00:36:34.306
And I should also mention that

00:36:34.306 --> 00:36:36.336
this is really easy to do with

00:36:36.336 --> 00:36:37.500
attributed strings.

00:36:40.596 --> 00:36:43.676
Finally, let's go over

00:36:43.676 --> 00:36:44.566
everything that we've talked

00:36:44.566 --> 00:36:44.876
about.

00:36:48.576 --> 00:36:50.456
First off, it's important to

00:36:50.766 --> 00:36:52.356
start planning early in your

00:36:52.356 --> 00:36:54.806
apps, not only the development,

00:36:54.906 --> 00:36:56.096
but also, the design phase.

00:36:59.666 --> 00:37:00.776
Once you know the languages

00:37:00.776 --> 00:37:02.096
you're going to localize into

00:37:02.386 --> 00:37:04.246
and plan to extend to in the

00:37:04.246 --> 00:37:06.796
future, internationalize as you

00:37:06.796 --> 00:37:07.106
go.

00:37:07.816 --> 00:37:09.746
Technologies like Auto Layout,

00:37:09.966 --> 00:37:12.626
StackViews, and dynamic type are

00:37:12.816 --> 00:37:14.536
very simple to adopt while

00:37:14.536 --> 00:37:15.266
you're in the process of

00:37:15.266 --> 00:37:16.156
building your feature.

00:37:16.586 --> 00:37:17.996
But if you finish your project

00:37:17.996 --> 00:37:19.636
and try to come back and use

00:37:19.636 --> 00:37:20.426
them, then you may have to

00:37:20.426 --> 00:37:21.846
completely rearchitect your app.

00:37:21.846 --> 00:37:24.206
And that will be a lot of work.

00:37:25.486 --> 00:37:28.056
If you're doing something for

00:37:28.056 --> 00:37:29.576
which you feel, oh, yeah, there

00:37:29.576 --> 00:37:30.696
should be an API for this,

00:37:30.696 --> 00:37:30.916
right?

00:37:30.916 --> 00:37:32.916
There probably is an API for it.

00:37:33.316 --> 00:37:35.866
So, make sure that when you're

00:37:35.916 --> 00:37:37.546
doing something like formatting

00:37:37.546 --> 00:37:41.076
any kind of data, to make sure

00:37:41.076 --> 00:37:42.096
to look to see if there's a

00:37:42.156 --> 00:37:42.906
formatter class.

00:37:43.206 --> 00:37:44.276
And also, make sure to look to

00:37:44.276 --> 00:37:45.706
see if there is an API for

00:37:45.706 --> 00:37:46.776
anything you're doing with text

00:37:47.576 --> 00:37:48.656
before trying to ruin your own

00:37:48.656 --> 00:37:49.366
implementation.

00:37:51.766 --> 00:37:55.266
And lastly, ensure that nothing

00:37:55.266 --> 00:37:56.396
is lost in translation.

00:37:56.676 --> 00:37:58.766
So, the key thing to realize

00:37:58.766 --> 00:38:00.696
here is that every localization

00:38:00.696 --> 00:38:02.266
of your app is a unique

00:38:02.266 --> 00:38:02.866
experience.

00:38:03.556 --> 00:38:05.456
And you need to make sure that

00:38:05.456 --> 00:38:07.626
your intent that you specified

00:38:07.686 --> 00:38:08.976
in your development language

00:38:09.336 --> 00:38:10.706
actually makes it over to all

00:38:10.706 --> 00:38:11.686
the other languages that you

00:38:11.726 --> 00:38:12.176
support.

00:38:12.176 --> 00:38:14.006
And that nothing is lost along

00:38:14.006 --> 00:38:14.296
the way.

00:38:15.946 --> 00:38:16.806
Thank you, very much.

00:38:17.516 --> 00:38:23.500
[ Applause ]