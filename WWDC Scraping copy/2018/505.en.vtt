WEBVTT

00:00:07.516 --> 00:00:15.500
[ Music ]

00:00:20.516 --> 00:00:22.616
[ Applause ]

00:00:23.116 --> 00:00:23.466
>> Morning.

00:00:25.466 --> 00:00:25.906
Good morning.

00:00:26.696 --> 00:00:27.786
My name's Eric Hanson.

00:00:27.836 --> 00:00:29.476
I'm the Technology Evangelist

00:00:29.476 --> 00:00:30.736
for the Photos platform.

00:00:31.026 --> 00:00:32.415
And, I'm joined by three of my

00:00:32.415 --> 00:00:33.626
colleagues from the Photos

00:00:33.626 --> 00:00:35.476
engineering team today to talk

00:00:35.476 --> 00:00:37.506
to you about integrating your

00:00:37.506 --> 00:00:38.806
application with Photos on

00:00:38.806 --> 00:00:39.566
macOS.

00:00:42.176 --> 00:00:43.586
We have two key things that

00:00:43.586 --> 00:00:44.486
we're going to talk about.

00:00:46.196 --> 00:00:48.146
The first is a full update on

00:00:48.146 --> 00:00:49.736
the Photos Project Extension API

00:00:49.736 --> 00:00:51.366
that we introduced last year in

00:00:51.366 --> 00:00:52.606
macOS High Sierra.

00:00:53.126 --> 00:00:54.906
And then, we're going to get

00:00:54.906 --> 00:00:57.636
into interacting with your

00:00:57.636 --> 00:01:00.166
application via drag and drop.

00:01:01.066 --> 00:01:02.556
But first, let's talk about

00:01:02.556 --> 00:01:03.816
Photo Project Extensions.

00:01:07.686 --> 00:01:09.946
When iPhoto was first launched

00:01:09.946 --> 00:01:14.036
in 2002, Apple became one of the

00:01:14.166 --> 00:01:16.406
first companies to allow people

00:01:16.406 --> 00:01:20.516
to create beautiful books, and

00:01:20.516 --> 00:01:22.106
later cards and calendars.

00:01:24.476 --> 00:01:28.776
To date over 70 million photo

00:01:28.776 --> 00:01:30.316
books, cards, and calendars have

00:01:30.316 --> 00:01:32.716
been created using iPhoto and

00:01:32.716 --> 00:01:33.196
Photos.

00:01:37.116 --> 00:01:38.476
But, in that same amount of

00:01:38.476 --> 00:01:41.146
time, 16 years, we've seen this

00:01:41.146 --> 00:01:43.266
blossoming market.

00:01:44.056 --> 00:01:45.906
There is a tremendous breadth

00:01:45.906 --> 00:01:48.596
now of choice for users to

00:01:48.596 --> 00:01:50.186
create all sorts of things with

00:01:50.186 --> 00:01:52.036
their photos, both physical and

00:01:52.036 --> 00:01:52.466
digital.

00:01:53.006 --> 00:01:56.076
And, it's the observance of this

00:01:56.456 --> 00:01:59.506
amazing ecosystem that led us to

00:01:59.506 --> 00:02:00.866
the introduction of the Photo

00:02:00.866 --> 00:02:03.006
Project Extension API last year,

00:02:03.806 --> 00:02:05.536
to build on that ecosystem.

00:02:06.046 --> 00:02:09.606
We've seen some great extensions

00:02:09.606 --> 00:02:10.056
already.

00:02:11.166 --> 00:02:13.686
For example, Mimeo Photos.

00:02:14.316 --> 00:02:15.886
It lets you create these books,

00:02:15.886 --> 00:02:17.386
and cards, and calendars of

00:02:17.386 --> 00:02:18.796
exceptional quality.

00:02:20.396 --> 00:02:22.036
There's Whitewall, that lets you

00:02:22.036 --> 00:02:23.886
create gallery-quality framed

00:02:23.886 --> 00:02:25.246
prints from your photos.

00:02:25.756 --> 00:02:28.096
And, we have digital services

00:02:28.096 --> 00:02:30.466
like Wix.com, that make it very

00:02:30.466 --> 00:02:32.216
easy for you to create web photo

00:02:32.216 --> 00:02:33.266
albums to share with your

00:02:33.266 --> 00:02:34.236
friends and family.

00:02:34.776 --> 00:02:37.696
And, we're now seeing some new

00:02:37.696 --> 00:02:39.046
extensions on the horizon.

00:02:39.886 --> 00:02:42.066
Like this one, called Motif.

00:02:42.236 --> 00:02:44.886
It is a brand-new fully native

00:02:45.516 --> 00:02:47.246
experience, integrated directly

00:02:47.246 --> 00:02:49.606
into Photos, coming to you this

00:02:49.606 --> 00:02:49.926
summer.

00:02:54.076 --> 00:02:56.386
All of this choice, this whole

00:02:56.386 --> 00:02:58.866
ecosystem is a tremendous

00:02:58.866 --> 00:03:00.716
opportunity to you, as a

00:03:00.716 --> 00:03:01.376
developer.

00:03:02.786 --> 00:03:04.476
You can take the very rich

00:03:04.476 --> 00:03:06.846
metadata and the context and the

00:03:06.846 --> 00:03:08.526
image curation that we pass to

00:03:08.526 --> 00:03:10.586
your extension, and you can

00:03:10.586 --> 00:03:12.316
build on that, using the full

00:03:12.316 --> 00:03:14.106
stack of native frameworks on

00:03:14.106 --> 00:03:16.316
macOS, to create something

00:03:16.316 --> 00:03:18.626
really extraordinary, and new,

00:03:19.136 --> 00:03:20.796
that delights users around the

00:03:20.796 --> 00:03:20.976
world.

00:03:25.046 --> 00:03:26.806
And, it's for this reason that

00:03:27.576 --> 00:03:30.026
Apple is announcing we will be

00:03:30.026 --> 00:03:31.716
transitioning our entire print

00:03:31.716 --> 00:03:32.976
product business to this

00:03:32.976 --> 00:03:35.626
ecosystem in macOS Mojave.

00:03:37.356 --> 00:03:39.586
Project Extensions will be the

00:03:39.586 --> 00:03:41.696
way users will create books,

00:03:41.696 --> 00:03:43.686
cards, calendars, all sorts of

00:03:43.686 --> 00:03:44.246
things.

00:03:44.736 --> 00:03:46.406
Whatever you surprise us with

00:03:46.466 --> 00:03:47.686
with your extensions.

00:03:48.196 --> 00:03:51.666
And, by doing this, we're

00:03:51.666 --> 00:03:53.306
building a better Photos

00:03:53.306 --> 00:03:54.616
experience for everyone.

00:03:55.936 --> 00:03:57.686
So, let's talk about what's new

00:03:57.686 --> 00:03:59.646
in the Extensions API.

00:04:00.726 --> 00:04:03.566
First, with the UI.

00:04:03.566 --> 00:04:06.736
We now take the UI of your

00:04:06.736 --> 00:04:08.116
extension, and integrate it

00:04:08.116 --> 00:04:09.856
directly into the Photos app.

00:04:11.126 --> 00:04:12.706
So, the sidebar that you're

00:04:12.706 --> 00:04:14.056
familiar with is always

00:04:14.056 --> 00:04:14.676
available.

00:04:15.726 --> 00:04:17.116
Right? A user can be creating a

00:04:17.116 --> 00:04:18.206
project in one of your

00:04:18.206 --> 00:04:20.666
extensions, and can grab content

00:04:20.666 --> 00:04:22.055
from the sidebar, and just drag

00:04:22.055 --> 00:04:23.066
and drop it right onto your

00:04:23.066 --> 00:04:23.626
project.

00:04:24.056 --> 00:04:26.256
Or, they could pop up to the

00:04:26.256 --> 00:04:29.136
photo search, search for a photo

00:04:29.136 --> 00:04:31.726
they want to use, copy it, and

00:04:31.726 --> 00:04:32.926
paste it into the project that

00:04:32.926 --> 00:04:34.196
they're working on.

00:04:35.736 --> 00:04:38.026
We're also allowing you to

00:04:38.026 --> 00:04:39.406
integrate directly with the

00:04:39.456 --> 00:04:41.696
powerful editing tools of

00:04:41.696 --> 00:04:42.326
Photos.

00:04:44.376 --> 00:04:46.646
For example, you may want to

00:04:46.646 --> 00:04:49.026
allow a user to simply

00:04:49.026 --> 00:04:51.916
double-click on a photo to edit

00:04:51.916 --> 00:04:52.086
it.

00:04:52.516 --> 00:04:53.926
And, you can do that now, with a

00:04:53.926 --> 00:04:55.776
single line of API.

00:04:55.976 --> 00:04:58.266
You can invoke the actual full

00:04:58.266 --> 00:04:59.426
editor of Photos.

00:04:59.716 --> 00:05:01.076
We pushed the edit session to

00:05:01.076 --> 00:05:02.996
the top of the view stack, with

00:05:03.046 --> 00:05:04.056
that photo loaded.

00:05:04.506 --> 00:05:05.436
Let the user make any

00:05:05.436 --> 00:05:06.726
adjustments they want to make.

00:05:07.506 --> 00:05:08.876
And, we also give them access to

00:05:08.876 --> 00:05:10.456
all of the other assets that are

00:05:10.456 --> 00:05:11.616
used in that project.

00:05:12.636 --> 00:05:13.476
When they're done with their

00:05:13.476 --> 00:05:15.246
editing session, they simply hit

00:05:15.246 --> 00:05:17.116
the Done button, and they're

00:05:17.116 --> 00:05:18.876
returned to the project that

00:05:18.876 --> 00:05:19.526
they're working on.

00:05:20.386 --> 00:05:22.906
You get a notification that the

00:05:22.906 --> 00:05:23.856
library changed.

00:05:23.856 --> 00:05:25.126
You can respond to that, and

00:05:25.126 --> 00:05:26.506
update your UI accordingly.

00:05:29.256 --> 00:05:30.726
But, none of this would matter

00:05:32.136 --> 00:05:34.196
if it was hard to find the apps

00:05:34.196 --> 00:05:35.136
and the extensions that you

00:05:35.136 --> 00:05:35.626
create.

00:05:36.396 --> 00:05:37.596
And so, we're stepping up the

00:05:37.596 --> 00:05:40.036
game in the discoverability of

00:05:40.036 --> 00:05:41.206
your applications.

00:05:42.296 --> 00:05:44.056
The Photos app links to the Mac

00:05:44.056 --> 00:05:45.596
App Store in the Create menu.

00:05:46.856 --> 00:05:48.836
And now, with the brand-new Mac

00:05:48.836 --> 00:05:51.546
App Store, on macOS Mojave, we

00:05:51.546 --> 00:05:53.726
actually can link directly to a

00:05:53.726 --> 00:05:56.066
fully curated story that's

00:05:56.066 --> 00:05:57.876
targeted specifically at the

00:05:57.876 --> 00:05:59.306
extension experience.

00:06:00.136 --> 00:06:01.556
And, this is an evergreen story

00:06:01.556 --> 00:06:02.366
that will live on.

00:06:02.366 --> 00:06:03.296
It's something that we can

00:06:03.296 --> 00:06:05.716
update, and feature new

00:06:05.716 --> 00:06:07.396
experiences, and educate users

00:06:07.396 --> 00:06:08.826
on new ways to do things with

00:06:08.886 --> 00:06:09.556
their photos.

00:06:10.066 --> 00:06:12.766
And, when a user downloads an

00:06:13.506 --> 00:06:16.936
app from this story, they're

00:06:16.936 --> 00:06:18.386
downloading an app that contains

00:06:18.386 --> 00:06:19.116
an extension.

00:06:20.176 --> 00:06:22.086
And, historically, that may have

00:06:22.086 --> 00:06:24.696
led you, as a developer, to put

00:06:24.696 --> 00:06:25.766
some time into, kind of,

00:06:25.766 --> 00:06:27.096
educating users in your

00:06:27.096 --> 00:06:28.606
standalone app on how to use the

00:06:28.606 --> 00:06:29.776
extension in Photos.

00:06:30.156 --> 00:06:30.996
But, we think we can do

00:06:30.996 --> 00:06:31.766
something better.

00:06:32.366 --> 00:06:34.106
Wouldn't it be great if the user

00:06:34.106 --> 00:06:35.256
could download an app and

00:06:35.256 --> 00:06:36.466
immediately launch into the

00:06:36.466 --> 00:06:37.766
project creation experience in

00:06:37.766 --> 00:06:38.306
Photos?

00:06:39.336 --> 00:06:40.546
We're making that possible.

00:06:41.926 --> 00:06:43.696
We've added a custom URL scheme

00:06:43.696 --> 00:06:45.866
to Photos, where you can simply

00:06:46.296 --> 00:06:47.596
pass in your extension

00:06:47.596 --> 00:06:49.926
identifier, and optionally pass

00:06:49.926 --> 00:06:51.456
in a category.

00:06:52.566 --> 00:06:53.986
And, Photos will be brought to

00:06:53.986 --> 00:06:55.556
the back-- brought to the

00:06:55.556 --> 00:06:58.956
foreground, with the options of

00:06:58.956 --> 00:07:00.336
your extension displayed for the

00:07:00.336 --> 00:07:00.726
user.

00:07:02.026 --> 00:07:03.576
So, they're immediately taken

00:07:03.576 --> 00:07:05.376
into the creation experience as

00:07:05.376 --> 00:07:06.646
a first-launch experience.

00:07:06.646 --> 00:07:07.716
And, we think this is great.

00:07:11.526 --> 00:07:13.516
And, finally, when they create a

00:07:13.516 --> 00:07:16.216
project, we want those projects

00:07:16.216 --> 00:07:19.126
to live where they belong, right

00:07:19.126 --> 00:07:20.846
inside the user's Photo library.

00:07:22.136 --> 00:07:23.426
And so, that's exactly what we

00:07:23.426 --> 00:07:23.676
do.

00:07:23.676 --> 00:07:25.296
We have this Project Gallery in

00:07:25.296 --> 00:07:27.406
Photos that lets a user see all

00:07:27.406 --> 00:07:28.606
the things that they've created.

00:07:28.696 --> 00:07:30.676
And we now let the extension

00:07:30.956 --> 00:07:32.876
create a custom preview for each

00:07:32.876 --> 00:07:33.496
project.

00:07:34.086 --> 00:07:35.636
So, that preview can represent

00:07:35.636 --> 00:07:37.436
what the project really is.

00:07:37.876 --> 00:07:39.716
Take this photo mug for example.

00:07:40.246 --> 00:07:43.586
Not only can a user double-click

00:07:43.586 --> 00:07:44.866
on one of those projects to get

00:07:44.866 --> 00:07:46.136
back into your extension, to

00:07:46.136 --> 00:07:48.206
continue to work on it, they can

00:07:48.206 --> 00:07:49.466
create projects from other

00:07:49.466 --> 00:07:50.206
projects.

00:07:50.706 --> 00:07:51.976
They can simply select a

00:07:51.976 --> 00:07:53.546
project, go to the Create menu,

00:07:53.636 --> 00:07:54.896
create something new from it.

00:07:55.336 --> 00:07:56.756
And, we pass over everything we

00:07:56.756 --> 00:08:00.216
can to help your extension, kind

00:08:00.216 --> 00:08:01.416
of, start with some great

00:08:01.416 --> 00:08:02.166
context.

00:08:03.046 --> 00:08:04.256
But, in the case of the Apple

00:08:04.256 --> 00:08:06.316
projects, we can do a lot more.

00:08:06.466 --> 00:08:07.336
And so, we do.

00:08:08.596 --> 00:08:11.226
We send you photo-by-photo,

00:08:11.306 --> 00:08:13.726
page-by-page exactly how that

00:08:13.726 --> 00:08:14.526
was laid out.

00:08:15.016 --> 00:08:16.526
So that your extension can

00:08:16.526 --> 00:08:18.236
create a complete conversion

00:08:18.236 --> 00:08:19.416
experience from the Apple

00:08:19.416 --> 00:08:20.066
projects.

00:08:20.606 --> 00:08:21.936
And, we highly encourage you to

00:08:21.936 --> 00:08:22.396
do this.

00:08:22.946 --> 00:08:26.196
So, that's just a very

00:08:26.196 --> 00:08:27.776
high-level, from a UI

00:08:27.776 --> 00:08:28.906
perspective, of some of what's

00:08:28.906 --> 00:08:29.236
new.

00:08:29.526 --> 00:08:30.526
But, we'd like to take you a

00:08:30.526 --> 00:08:31.166
little deeper.

00:08:31.166 --> 00:08:32.176
And, to do that, I'd like to

00:08:32.176 --> 00:08:33.586
invite to the stage, my

00:08:33.586 --> 00:08:34.446
colleague from Photos

00:08:34.446 --> 00:08:35.566
engineering, Tobias Conradi.

00:08:35.566 --> 00:08:35.976
Tobias.

00:08:36.515 --> 00:08:41.635
[ Applause ]

00:08:42.135 --> 00:08:42.736
>> Good morning.

00:08:43.145 --> 00:08:43.756
Thank you, Eric.

00:08:44.275 --> 00:08:45.376
Hello, my name is Tobias

00:08:45.376 --> 00:08:45.986
Conradi.

00:08:46.116 --> 00:08:47.256
I'm an engineer on the Photos

00:08:47.256 --> 00:08:49.086
team, and I will go into detail

00:08:49.086 --> 00:08:50.446
for some of the changes we did

00:08:50.446 --> 00:08:51.376
around Photos Project

00:08:51.376 --> 00:08:51.966
Extensions.

00:08:52.336 --> 00:08:54.516
First up, the Create menu.

00:08:55.086 --> 00:08:56.696
When we first introduced Photos

00:08:56.696 --> 00:08:58.696
Project Extensions in macOS High

00:08:58.696 --> 00:09:00.786
Sierra, we put all extensions as

00:09:00.786 --> 00:09:02.426
a flat list into the Create

00:09:02.426 --> 00:09:02.726
menu.

00:09:03.226 --> 00:09:04.906
But, as it turns out, in some

00:09:04.906 --> 00:09:06.526
cases, it's kind of hard to

00:09:06.526 --> 00:09:08.066
guess, just from the name of the

00:09:08.066 --> 00:09:09.816
extension what kind of projects

00:09:09.816 --> 00:09:10.686
you can create with that.

00:09:11.486 --> 00:09:12.706
We want to improve the user

00:09:12.706 --> 00:09:14.086
experience, so we are

00:09:14.086 --> 00:09:16.116
introducing project categories.

00:09:16.566 --> 00:09:18.376
The new Create menu in macOS

00:09:18.376 --> 00:09:19.936
Mojave looks something like

00:09:19.936 --> 00:09:20.236
this.

00:09:20.626 --> 00:09:23.606
We have categories, submenus in

00:09:23.646 --> 00:09:24.466
the Create menu.

00:09:25.086 --> 00:09:26.216
And, the categories we're

00:09:26.216 --> 00:09:28.056
introducing this year are Books,

00:09:28.296 --> 00:09:30.566
Calendars, Cards, Wall Decor,

00:09:30.886 --> 00:09:33.326
Prints, Slideshows, and for any

00:09:33.326 --> 00:09:34.536
extension that doesn't fit into

00:09:34.536 --> 00:09:36.086
these categories, Other.

00:09:37.526 --> 00:09:38.916
Now the user can go into the

00:09:38.916 --> 00:09:40.086
menu with a very specific

00:09:40.086 --> 00:09:40.476
intent.

00:09:40.476 --> 00:09:42.376
For example, I want to create

00:09:42.376 --> 00:09:45.536
wall decorations, and these

00:09:45.666 --> 00:09:46.976
[inaudible] all extensions that

00:09:46.976 --> 00:09:48.276
support projects in that

00:09:48.276 --> 00:09:48.776
category.

00:09:49.686 --> 00:09:51.156
How does the extension show up

00:09:51.156 --> 00:09:51.836
in the category?

00:09:52.736 --> 00:09:54.146
We have a new key in the

00:09:54.146 --> 00:09:56.696
extensions attribute dictionary

00:09:56.696 --> 00:09:57.856
in the extensions info.plist.

00:09:58.206 --> 00:09:59.736
It's called PHProjectCategory.

00:10:00.126 --> 00:10:02.216
And, the value for the key, is a

00:10:02.216 --> 00:10:04.436
list of the supported project

00:10:04.436 --> 00:10:05.006
categories.

00:10:05.216 --> 00:10:06.636
In this case, it's Wall Decor

00:10:06.896 --> 00:10:07.426
and Other.

00:10:09.296 --> 00:10:11.756
The next thing the user sees

00:10:11.756 --> 00:10:13.866
from the extension, is the

00:10:13.866 --> 00:10:14.176
[inaudible] sheet.

00:10:14.766 --> 00:10:16.186
You provide us with the data,

00:10:16.726 --> 00:10:21.446
and we display the project type

00:10:21.446 --> 00:10:22.606
descriptions you provide.

00:10:23.386 --> 00:10:25.446
The problem with the API we

00:10:25.446 --> 00:10:27.096
introduced last year is that

00:10:27.286 --> 00:10:30.056
it's kind of hard to provide

00:10:30.056 --> 00:10:31.356
up-to-date price information or

00:10:31.356 --> 00:10:32.106
current offers.

00:10:32.606 --> 00:10:34.756
That's why we're introducing a

00:10:34.756 --> 00:10:37.156
new, improved API to allow for

00:10:37.156 --> 00:10:38.446
dynamic updates, which would

00:10:38.446 --> 00:10:39.196
look like this.

00:10:39.676 --> 00:10:41.946
In addition to dynamic updates,

00:10:42.176 --> 00:10:44.766
we now also support display of a

00:10:44.766 --> 00:10:46.966
custom footer text at the bottom

00:10:46.966 --> 00:10:48.496
of the sheet, which you can use

00:10:48.496 --> 00:10:49.966
to display legal text if you

00:10:49.966 --> 00:10:52.716
have the requirement to do so.

00:10:53.866 --> 00:10:57.476
On an API level, the new dynamic

00:10:57.476 --> 00:10:58.676
API looks like this.

00:10:59.166 --> 00:11:00.786
We have the new method on the

00:11:00.786 --> 00:11:02.456
projectExtensionsController

00:11:02.456 --> 00:11:05.646
protocol, and we ask for a data

00:11:05.646 --> 00:11:06.726
source, instead of a list of

00:11:06.726 --> 00:11:07.676
product type descriptions.

00:11:08.006 --> 00:11:10.266
And, pass in the category from

00:11:10.266 --> 00:11:11.246
the menu in which the

00:11:11.246 --> 00:11:12.816
selection-- the extension was

00:11:12.816 --> 00:11:13.216
selected.

00:11:13.476 --> 00:11:14.936
And also, an invalidator object.

00:11:15.816 --> 00:11:17.416
Once you return the data source,

00:11:17.986 --> 00:11:19.776
we ask the data source for the

00:11:19.776 --> 00:11:21.366
project type descriptions, and

00:11:21.366 --> 00:11:22.586
for the optional footer text.

00:11:23.386 --> 00:11:24.726
Whenever your extension has the

00:11:24.726 --> 00:11:26.236
need to invalidate the

00:11:26.236 --> 00:11:27.946
information returned, you can

00:11:27.946 --> 00:11:29.506
use invalidator to invalidate

00:11:29.506 --> 00:11:30.566
the project type descriptions,

00:11:30.786 --> 00:11:32.586
or the footer text, and when

00:11:32.586 --> 00:11:34.536
necessary, photos will refetch

00:11:34.786 --> 00:11:36.036
the data from the data source,

00:11:36.306 --> 00:11:37.706
and display the up-to-date data

00:11:37.706 --> 00:11:37.976
in the UI.

00:11:42.326 --> 00:11:43.616
The next topic is the

00:11:43.616 --> 00:11:44.376
projectInfo.

00:11:45.246 --> 00:11:47.516
The projectInfo is structured,

00:11:47.516 --> 00:11:48.906
additional information about the

00:11:48.906 --> 00:11:50.146
contents of the project.

00:11:50.796 --> 00:11:52.546
And, it's structured into

00:11:52.546 --> 00:11:54.646
sections, and sectionContents

00:11:54.646 --> 00:11:56.646
which reflect creation level.

00:11:57.676 --> 00:11:59.686
And, the elements have basic

00:11:59.836 --> 00:12:03.416
layout hints, and also weights

00:12:03.416 --> 00:12:05.046
and scores for the assets.

00:12:05.366 --> 00:12:06.706
And, assets can contain

00:12:07.176 --> 00:12:09.776
important regions in the asset's

00:12:09.776 --> 00:12:10.786
regions of interest.

00:12:10.936 --> 00:12:13.096
This is just a quick reminder

00:12:13.096 --> 00:12:14.306
what the projectInfo looks like.

00:12:14.596 --> 00:12:15.676
If you want to know more about

00:12:15.676 --> 00:12:16.976
the projectInfo, I highly

00:12:16.976 --> 00:12:18.376
recommend last year's session,

00:12:18.646 --> 00:12:19.976
What's New in Photos API.

00:12:24.556 --> 00:12:26.556
The projectInfo is handed to

00:12:26.556 --> 00:12:29.056
your extension during begin

00:12:29.056 --> 00:12:29.506
project.

00:12:30.496 --> 00:12:33.976
And, whenever the user adds new

00:12:33.976 --> 00:12:35.176
assets to the project, the

00:12:35.176 --> 00:12:36.456
projectInfo will be outdated,

00:12:36.456 --> 00:12:37.946
because it's a static object.

00:12:38.756 --> 00:12:40.056
And, we want to solve the

00:12:40.056 --> 00:12:41.446
problem by introducing new API

00:12:41.446 --> 00:12:43.406
on the projectExtensionsContext

00:12:43.806 --> 00:12:45.906
to get updated project info,

00:12:46.266 --> 00:12:47.196
with the current state of the

00:12:47.196 --> 00:12:47.726
project.

00:12:48.216 --> 00:12:49.886
Let's take this as an example.

00:12:49.886 --> 00:12:51.586
We handed you this projectInfo

00:12:51.586 --> 00:12:53.296
during project creation, and

00:12:53.296 --> 00:12:54.646
then the user added some more

00:12:54.646 --> 00:12:55.656
assets to the project.

00:12:55.976 --> 00:12:57.286
You can then call the

00:12:57.286 --> 00:12:59.156
updatedProjectInfo method, with

00:12:59.216 --> 00:13:01.226
this projectInfo, and we will

00:13:01.226 --> 00:13:02.706
update any existing sections,

00:13:03.046 --> 00:13:04.786
and append a new section for any

00:13:04.866 --> 00:13:05.666
added assets.

00:13:06.106 --> 00:13:07.386
If the user adds some more

00:13:07.386 --> 00:13:08.526
assets, you can do the same

00:13:08.526 --> 00:13:08.956
again.

00:13:09.326 --> 00:13:10.596
Pass in this project info, we

00:13:10.596 --> 00:13:11.686
will update the existing

00:13:11.686 --> 00:13:13.396
sections, and append a new

00:13:13.396 --> 00:13:14.896
section for any added assets.

00:13:15.406 --> 00:13:18.546
Let's now go into a more

00:13:18.546 --> 00:13:19.516
detailed element of the

00:13:19.516 --> 00:13:21.006
projectInfo, the regions of

00:13:21.006 --> 00:13:21.466
interest.

00:13:22.386 --> 00:13:23.346
The regions of interest

00:13:23.346 --> 00:13:25.576
highlight important regions in

00:13:25.576 --> 00:13:26.216
the asset.

00:13:26.366 --> 00:13:27.576
For example, the faces of

00:13:27.636 --> 00:13:27.946
people.

00:13:28.656 --> 00:13:31.446
And, if the same person appears

00:13:31.446 --> 00:13:33.376
in multiple images, the region

00:13:33.376 --> 00:13:35.106
of interest identifier will be

00:13:35.106 --> 00:13:37.166
the same for the same person.

00:13:38.316 --> 00:13:39.576
Let's focus on Person B for a

00:13:39.576 --> 00:13:39.936
moment.

00:13:41.906 --> 00:13:43.606
In addition to the region of

00:13:43.606 --> 00:13:45.376
interest identifier, we have

00:13:45.766 --> 00:13:47.576
weight on the regions of

00:13:47.616 --> 00:13:50.316
interest, which represents the

00:13:50.316 --> 00:13:52.136
importance of the region of

00:13:52.176 --> 00:13:53.986
interest in the project.

00:13:55.066 --> 00:13:57.246
But, if you want to decide which

00:13:57.476 --> 00:13:58.516
image to pick as a

00:13:58.516 --> 00:14:00.376
representative image for a

00:14:00.376 --> 00:14:01.426
person, or for a region of

00:14:01.426 --> 00:14:02.576
interest, it's kind of hard to

00:14:02.576 --> 00:14:03.256
do with this API.

00:14:04.286 --> 00:14:05.836
That's why we're adding a new

00:14:05.836 --> 00:14:07.896
quality score, which represents

00:14:08.086 --> 00:14:10.006
the quality of the region of

00:14:10.006 --> 00:14:12.146
interest in the asset.

00:14:12.266 --> 00:14:14.026
On the left-hand side, the

00:14:14.026 --> 00:14:16.146
Person B is kind of out of focus

00:14:16.146 --> 00:14:17.376
and not really central to the

00:14:17.376 --> 00:14:18.696
image, while on the right-hand

00:14:18.696 --> 00:14:20.556
side, he's really in focus.

00:14:20.886 --> 00:14:22.686
That's why the quality score on

00:14:22.686 --> 00:14:23.746
the right-hand side is higher

00:14:23.746 --> 00:14:26.536
than on the left-hand side.

00:14:27.336 --> 00:14:28.726
On an API level, that looks like

00:14:28.726 --> 00:14:29.026
this.

00:14:29.026 --> 00:14:30.716
We have this alt weight, which

00:14:30.716 --> 00:14:32.826
is the importance of the region

00:14:32.826 --> 00:14:34.116
of interest in the context of

00:14:34.166 --> 00:14:34.776
the project.

00:14:35.216 --> 00:14:37.476
And then, the quality in the

00:14:38.166 --> 00:14:38.306
asset.

00:14:39.136 --> 00:14:41.336
I would now like to show you a

00:14:41.336 --> 00:14:43.066
quick demo, how you can use

00:14:43.066 --> 00:14:44.806
regions of interest in your

00:14:44.806 --> 00:14:45.686
extension to improve the

00:14:45.686 --> 00:14:47.656
experience, and also listen to a

00:14:47.656 --> 00:14:48.786
library notification to get

00:14:48.786 --> 00:14:50.696
notified whenever the assets or

00:14:50.696 --> 00:14:51.576
the project changes.

00:14:52.156 --> 00:14:54.656
And, use a new updateProjectInfo

00:14:54.656 --> 00:14:54.976
API.

00:15:03.726 --> 00:15:07.916
OK. I created a slideshow

00:15:07.916 --> 00:15:11.126
extension, and to show you how

00:15:11.126 --> 00:15:12.786
it looks like, I selected some

00:15:12.786 --> 00:15:15.946
assets in an album, and will

00:15:15.946 --> 00:15:17.706
create a new project with the

00:15:17.706 --> 00:15:18.246
extension.

00:15:19.466 --> 00:15:22.096
The extension has two views, one

00:15:22.096 --> 00:15:23.586
is the overview, which contains

00:15:23.586 --> 00:15:25.086
all assets of the project.

00:15:25.546 --> 00:15:27.546
And, the other is the playback

00:15:27.546 --> 00:15:28.806
modus, which plays the

00:15:28.806 --> 00:15:29.286
slideshow.

00:15:31.416 --> 00:15:32.706
As you might notice, the

00:15:32.706 --> 00:15:34.296
slideshow always zooms into the

00:15:34.296 --> 00:15:36.966
center of the image, which is

00:15:36.996 --> 00:15:37.686
kind of boring.

00:15:38.456 --> 00:15:39.966
And, I want to use regions of

00:15:39.966 --> 00:15:41.406
interest to always zoom into

00:15:41.636 --> 00:15:43.066
interesting regions in the

00:15:43.066 --> 00:15:43.376
photo.

00:15:44.946 --> 00:15:47.566
So, let's switch to Xcode to fix

00:15:49.016 --> 00:15:49.276
that.

00:15:50.256 --> 00:15:51.986
Here in my asset model, I have

00:15:51.986 --> 00:15:53.216
this property,

00:15:53.216 --> 00:15:54.976
preferredZoomRect, and it always

00:15:54.976 --> 00:15:57.126
returns the same rect, which is

00:15:57.376 --> 00:15:58.026
kind of boring.

00:15:58.446 --> 00:15:59.926
So, let's replace it with the

00:15:59.926 --> 00:16:00.356
code.

00:16:06.046 --> 00:16:08.136
What I want to do is to get all

00:16:08.136 --> 00:16:09.306
regions of interest from the

00:16:09.306 --> 00:16:11.726
asset element, and then sort

00:16:11.766 --> 00:16:13.476
them by their weight and

00:16:13.476 --> 00:16:14.066
quality.

00:16:14.846 --> 00:16:17.496
And, from the sorted list of

00:16:17.496 --> 00:16:18.506
regions of interest, we want to

00:16:18.506 --> 00:16:20.146
get the last element, and return

00:16:20.146 --> 00:16:20.626
its rect.

00:16:22.166 --> 00:16:23.976
If we now rerun the extension--

00:16:38.196 --> 00:16:40.306
We always zoom into the most

00:16:40.306 --> 00:16:42.636
important region of interest in

00:16:42.936 --> 00:16:43.316
the asset.

00:16:44.066 --> 00:16:44.976
I think that looks way better.

00:16:45.516 --> 00:16:48.546
[ Applause ]

00:16:49.046 --> 00:16:50.316
So, next, I want to add some

00:16:50.316 --> 00:16:51.506
more assets to the project.

00:16:51.706 --> 00:16:53.756
I grab an album in the sidebar

00:16:53.756 --> 00:16:55.386
and drag it over the extension.

00:16:55.656 --> 00:16:56.696
There's a plus next to the

00:16:56.696 --> 00:16:57.756
cursor, so it looks like the

00:16:57.756 --> 00:16:58.786
extension accepts the drag.

00:16:59.366 --> 00:17:01.876
I release the mouse and nothing

00:17:01.876 --> 00:17:02.296
happens.

00:17:02.666 --> 00:17:04.126
The assets were added to the

00:17:04.126 --> 00:17:05.986
project, but my extension

00:17:06.215 --> 00:17:07.165
doesn't list the change

00:17:07.165 --> 00:17:07.776
notification.

00:17:08.096 --> 00:17:10.316
And, doesn't know that assets

00:17:10.316 --> 00:17:11.146
were added to the project.

00:17:12.616 --> 00:17:14.286
So, let's switch back to Xcode

00:17:14.286 --> 00:17:15.965
and fix that.

00:17:16.736 --> 00:17:18.396
In my projectViewController, I

00:17:18.396 --> 00:17:20.205
have the begin and resumeProject

00:17:20.205 --> 00:17:21.896
method, which are a part of the

00:17:21.896 --> 00:17:24.106
projectExtensionController

00:17:24.106 --> 00:17:24.626
protocol.

00:17:25.116 --> 00:17:27.006
And, here I want to register for

00:17:27.136 --> 00:17:27.965
change observation.

00:17:28.465 --> 00:17:32.686
And, we add the same code in

00:17:32.746 --> 00:17:33.676
both methods.

00:17:33.676 --> 00:17:36.796
First, we get the PhotoKit

00:17:37.156 --> 00:17:39.426
object we're interested in.

00:17:39.916 --> 00:17:42.286
We're interested in additions of

00:17:42.356 --> 00:17:44.326
assets to the project, so we are

00:17:44.326 --> 00:17:45.916
getting a fetch result for all

00:17:45.916 --> 00:17:47.956
assets on the project, and then

00:17:48.026 --> 00:17:49.916
we are registering asset change

00:17:49.916 --> 00:17:51.116
observer for the library.

00:17:51.816 --> 00:17:53.596
In finished project, we

00:17:53.836 --> 00:17:54.626
[inaudible] registering.

00:17:55.456 --> 00:17:57.996
And, since Xcode complains that

00:17:57.996 --> 00:17:59.546
we don't implement the protocol,

00:17:59.696 --> 00:18:01.096
we add that.

00:18:01.476 --> 00:18:02.236
Change observer.

00:18:02.236 --> 00:18:04.876
And, down here--

00:18:09.506 --> 00:18:10.146
We implement

00:18:10.146 --> 00:18:11.526
photoLibraryDidChange.

00:18:12.126 --> 00:18:14.456
PhotoLibraryDidChange is called

00:18:14.456 --> 00:18:16.396
whenever anything changes in the

00:18:16.396 --> 00:18:19.946
photo library, and we get a

00:18:20.026 --> 00:18:22.016
change instance as a method

00:18:22.016 --> 00:18:22.396
argument.

00:18:22.976 --> 00:18:25.036
We can ask the change engine

00:18:25.066 --> 00:18:27.286
instance for changeDetails of an

00:18:27.286 --> 00:18:28.286
object we're interested in.

00:18:28.876 --> 00:18:30.386
We're interested in the changes

00:18:30.386 --> 00:18:32.596
of the fetchAllAssets on the

00:18:32.596 --> 00:18:34.106
project, so we pass that

00:18:34.106 --> 00:18:34.866
fetchResult in.

00:18:35.746 --> 00:18:38.186
And, if change results are

00:18:38.186 --> 00:18:41.256
returned, we update our locally

00:18:41.256 --> 00:18:43.786
cached fetch result with the

00:18:43.786 --> 00:18:45.846
fetchResultsAfterChanges, and

00:18:45.846 --> 00:18:47.616
get the projectExtensionContext,

00:18:47.616 --> 00:18:49.436
and call updatedProjectInfo.

00:18:50.636 --> 00:18:52.256
And pass in the project info we

00:18:53.136 --> 00:18:53.226
have.

00:18:53.656 --> 00:18:55.876
Once the updatedProjectInfo is

00:18:55.876 --> 00:18:57.576
returned to us, we call the same

00:18:57.576 --> 00:18:59.176
setup code, but you could do

00:18:59.176 --> 00:19:00.626
something more sophisticated in

00:19:00.626 --> 00:19:00.876
here.

00:19:02.326 --> 00:19:03.976
Let's rerun the project again.

00:19:19.416 --> 00:19:23.996
OK. I can now drag the album

00:19:23.996 --> 00:19:27.256
from the sidebar, release it

00:19:27.746 --> 00:19:30.076
over the extension, and the

00:19:30.076 --> 00:19:31.876
assets are added to the project,

00:19:32.136 --> 00:19:34.536
and the extension listens to the

00:19:34.536 --> 00:19:36.176
photo library change

00:19:36.176 --> 00:19:37.676
observation, gets notified of

00:19:37.706 --> 00:19:39.316
the change, and we update our

00:19:39.316 --> 00:19:39.976
project info.

00:19:40.516 --> 00:19:47.656
[ Applause ]

00:19:48.156 --> 00:19:51.146
So, as you just saw, with only a

00:19:51.146 --> 00:19:52.886
few steps, I was able to improve

00:19:52.886 --> 00:19:55.446
my extension by using the

00:19:55.446 --> 00:19:57.466
projectInfo, and the regions of

00:19:57.466 --> 00:19:59.116
interest in the projectInfo, and

00:19:59.116 --> 00:20:01.366
also registering asset change

00:20:01.366 --> 00:20:03.326
observer to get notified

00:20:03.326 --> 00:20:04.716
whenever anything changes in the

00:20:04.716 --> 00:20:06.536
photo lobby, and also update my

00:20:06.536 --> 00:20:06.976
project info.

00:20:10.486 --> 00:20:11.526
There are two things I want to

00:20:11.526 --> 00:20:12.806
highlight with integration.

00:20:13.376 --> 00:20:16.106
By default, Photos handles copy

00:20:16.106 --> 00:20:17.816
and paste of assets or albums

00:20:17.996 --> 00:20:20.356
from Photos into the extension.

00:20:20.896 --> 00:20:22.466
But, if your extension also

00:20:22.466 --> 00:20:23.536
wants to implement the paste

00:20:23.536 --> 00:20:24.386
section, which you should

00:20:24.386 --> 00:20:25.886
probably do for text and things

00:20:25.886 --> 00:20:27.886
like that, we need your help to

00:20:27.886 --> 00:20:29.586
know when your extension should

00:20:29.586 --> 00:20:30.926
handle the paste section, and

00:20:30.926 --> 00:20:32.376
when Photos should try to handle

00:20:32.376 --> 00:20:32.976
the paste section.

00:20:33.196 --> 00:20:34.666
So, please implement

00:20:34.666 --> 00:20:37.396
validateMenuItem, and if the

00:20:37.396 --> 00:20:39.226
menu action is a paste action,

00:20:39.456 --> 00:20:41.406
check if your extension can

00:20:41.406 --> 00:20:42.466
handle the current pasteboard

00:20:42.466 --> 00:20:44.376
contents, and if no, return

00:20:44.376 --> 00:20:46.206
false, and we will try to handle

00:20:46.206 --> 00:20:47.296
it as Photos.

00:20:47.566 --> 00:20:49.076
And, otherwise, if you can

00:20:49.076 --> 00:20:51.146
handle it, return true, and your

00:20:51.146 --> 00:20:52.136
photos will get the paste

00:20:52.136 --> 00:20:52.456
action.

00:20:53.566 --> 00:20:55.436
Something similar applies to

00:20:55.436 --> 00:20:55.996
drag and drop.

00:20:56.646 --> 00:20:58.836
Photos handles any drags of

00:20:58.836 --> 00:21:01.386
PhotoKit objects to the

00:21:01.386 --> 00:21:03.396
extension by default, but your

00:21:03.396 --> 00:21:04.626
extension can potentially

00:21:04.626 --> 00:21:05.806
interfere with that if you

00:21:05.806 --> 00:21:06.986
register for the wrong types.

00:21:07.276 --> 00:21:08.876
So, please be careful what types

00:21:08.876 --> 00:21:10.456
your extension is registering

00:21:10.456 --> 00:21:12.796
for, and only register for

00:21:12.796 --> 00:21:14.746
extension internal drags, or

00:21:14.746 --> 00:21:16.096
other drags you really want to

00:21:16.096 --> 00:21:16.416
handle.

00:21:16.806 --> 00:21:19.166
Be especially careful if you use

00:21:19.166 --> 00:21:21.546
WKWebView, because it registers

00:21:21.596 --> 00:21:24.926
for a bunch of drag types by

00:21:26.046 --> 00:21:26.476
default.

00:21:26.556 --> 00:21:28.036
That was everything about photo

00:21:28.036 --> 00:21:28.866
project extensions.

00:21:29.136 --> 00:21:30.346
Let me now hand over to my

00:21:30.346 --> 00:21:32.416
colleague Sanaa to talk about

00:21:32.596 --> 00:21:33.856
integrating with Photos--

00:21:33.976 --> 00:21:35.666
interacting with Photos as a

00:21:35.666 --> 00:21:36.526
third-party application.

00:21:36.526 --> 00:21:36.716
Thank you.

00:21:37.516 --> 00:21:40.136
[ Applause ]

00:21:40.636 --> 00:21:41.156
>> Thank you, Tobias.

00:21:41.886 --> 00:21:43.176
Hello, everyone.

00:21:43.846 --> 00:21:44.746
My name is Sanaa.

00:21:44.746 --> 00:21:46.136
I am a Photos engineer, and

00:21:46.136 --> 00:21:47.606
today with my colleague Joachim,

00:21:47.606 --> 00:21:48.896
we are going to talk about some

00:21:48.896 --> 00:21:51.136
best practices for receiving and

00:21:51.136 --> 00:21:52.696
providing images or videos

00:21:52.696 --> 00:21:54.886
between apps on macOS, using

00:21:54.886 --> 00:21:55.406
drag and drop.

00:21:55.856 --> 00:21:59.086
Drag and drop is one of the most

00:21:59.086 --> 00:22:00.576
intuitive and easiest way to

00:22:00.576 --> 00:22:01.916
move items from one place to

00:22:01.916 --> 00:22:02.326
another.

00:22:03.296 --> 00:22:04.476
But, sometimes, you might have

00:22:04.476 --> 00:22:05.726
encountered this situation

00:22:05.726 --> 00:22:05.976
instead.

00:22:10.206 --> 00:22:11.336
If this is something happening

00:22:11.336 --> 00:22:12.656
with your app, then you are

00:22:12.656 --> 00:22:13.796
sitting in the right session.

00:22:13.866 --> 00:22:13.933
So--

00:22:14.516 --> 00:22:18.046
[ Applause ]

00:22:18.546 --> 00:22:19.616
Let's take a step back to

00:22:19.616 --> 00:22:20.646
understand what's happening

00:22:20.646 --> 00:22:20.916
here.

00:22:22.656 --> 00:22:24.786
Drag and drop on macOS is using

00:22:24.786 --> 00:22:27.186
NSPasteboard, and when it's

00:22:27.186 --> 00:22:28.526
wrapped in with the pasteboard,

00:22:28.686 --> 00:22:30.276
reading and writing data happens

00:22:30.276 --> 00:22:31.866
on the main trade, for both the

00:22:31.866 --> 00:22:33.806
receiving and providing apps.

00:22:34.326 --> 00:22:36.976
In the past, since all local was

00:22:36.976 --> 00:22:38.716
stored on local disk, you could

00:22:39.206 --> 00:22:40.526
put the file URL's into the

00:22:40.526 --> 00:22:41.066
pasteboard.

00:22:41.466 --> 00:22:44.276
But, things have changed today.

00:22:44.536 --> 00:22:46.816
Images or videos might not be on

00:22:46.816 --> 00:22:48.176
disk if the user is using

00:22:48.176 --> 00:22:50.636
iCloud, so Photos, we need to

00:22:50.636 --> 00:22:51.906
download the full resolution

00:22:51.906 --> 00:22:53.696
item first, before putting the

00:22:53.696 --> 00:22:55.246
file URL into the pasteboard.

00:22:55.716 --> 00:22:58.966
Also, Photos respect the privacy

00:22:58.966 --> 00:23:01.566
settings of drag and drop, so if

00:23:01.566 --> 00:23:02.956
the user choose to save the

00:23:02.956 --> 00:23:04.566
location information, then

00:23:04.566 --> 00:23:06.646
Photos will export a new file

00:23:06.646 --> 00:23:07.736
which does not contain this

00:23:07.736 --> 00:23:08.296
metadata.

00:23:09.246 --> 00:23:10.826
Both downloading and exporting

00:23:10.826 --> 00:23:12.746
file takes time, and you don't

00:23:12.746 --> 00:23:13.696
want to do that on the main

00:23:13.696 --> 00:23:16.776
trade, since it's going to block

00:23:16.776 --> 00:23:19.106
your app UI.

00:23:19.486 --> 00:23:21.206
So, in order to fix this, we

00:23:21.206 --> 00:23:22.926
need an asynchronous API.

00:23:24.486 --> 00:23:27.136
In fact, we do have one, it's

00:23:27.136 --> 00:23:28.706
called file promises.

00:23:30.246 --> 00:23:32.886
File promise is a promise of--

00:23:32.986 --> 00:23:34.746
that's a file of a certain type

00:23:35.206 --> 00:23:36.776
that does not exist yet on disk,

00:23:36.776 --> 00:23:38.446
will be written in a provided

00:23:38.446 --> 00:23:39.006
location.

00:23:39.726 --> 00:23:41.636
It also allows the sender to

00:23:41.636 --> 00:23:42.966
write files in the background.

00:23:45.296 --> 00:23:47.446
There are two ways to interact

00:23:47.446 --> 00:23:49.426
with file promises: receiving

00:23:49.426 --> 00:23:50.556
files by using

00:23:50.556 --> 00:23:52.576
NSFilePromiseReceiver and

00:23:52.576 --> 00:23:53.846
providing files by using

00:23:53.846 --> 00:23:55.006
NSFilePromiseProvider.

00:23:55.926 --> 00:23:57.556
Both of these modern API's have

00:23:57.556 --> 00:23:59.196
been introduced two years ago

00:23:59.196 --> 00:24:00.176
with macOS Sierra.

00:24:00.176 --> 00:24:02.956
So, let's start first with

00:24:02.956 --> 00:24:03.966
receiving file promises.

00:24:09.046 --> 00:24:11.516
As a general rule, apps

00:24:11.516 --> 00:24:12.966
supporting drag and drop should

00:24:12.966 --> 00:24:15.656
always accept both file URL's

00:24:15.656 --> 00:24:16.646
and file promises.

00:24:16.806 --> 00:24:17.916
And, I'll explain why.

00:24:18.466 --> 00:24:21.156
There are multiple apps

00:24:21.186 --> 00:24:22.416
providing file promises.

00:24:23.736 --> 00:24:25.886
Photos is using file promises

00:24:25.886 --> 00:24:27.846
when dragging an image, a video,

00:24:28.076 --> 00:24:30.766
or entire album, and since macOS

00:24:30.766 --> 00:24:32.956
Mojave, you can-- we added the

00:24:32.956 --> 00:24:35.696
ability to drag the people or

00:24:35.696 --> 00:24:36.296
memories.

00:24:37.016 --> 00:24:38.416
So, we are not the only app

00:24:38.416 --> 00:24:39.536
using file promises.

00:24:40.706 --> 00:24:42.406
Mail is using file promises when

00:24:42.406 --> 00:24:44.286
dragging a message to Finder, to

00:24:44.286 --> 00:24:45.856
save the entire email, including

00:24:45.856 --> 00:24:46.616
attachments.

00:24:47.856 --> 00:24:49.626
Safari is using file promises

00:24:49.626 --> 00:24:50.576
when dragging an image.

00:24:51.176 --> 00:24:54.226
And, Keynote is using file

00:24:54.226 --> 00:24:55.536
promises when dragging a

00:24:55.536 --> 00:24:57.116
selection of slides to create a

00:24:57.116 --> 00:24:58.346
new document containing those

00:24:58.346 --> 00:24:58.706
slides.

00:24:59.466 --> 00:25:01.966
So, if you want to receive files

00:25:02.036 --> 00:25:04.176
from those apps, or any app

00:25:04.226 --> 00:25:05.546
providing file promises, then

00:25:05.546 --> 00:25:07.266
your app needs to read file

00:25:07.266 --> 00:25:08.426
promises, and need to accept

00:25:08.476 --> 00:25:08.986
those files.

00:25:09.566 --> 00:25:11.206
So, let's see how we can do that

00:25:11.206 --> 00:25:12.246
by looking at some code.

00:25:12.676 --> 00:25:17.206
First, during setup, a view must

00:25:17.206 --> 00:25:18.546
register what types it'll accept

00:25:18.746 --> 00:25:19.406
by calling

00:25:19.406 --> 00:25:21.176
registerForDraggedTypes.

00:25:21.576 --> 00:25:23.516
And, in order to accept file

00:25:23.516 --> 00:25:25.956
promises, you can use the class

00:25:25.956 --> 00:25:28.336
property readableDraggedTypes on

00:25:28.336 --> 00:25:29.526
NSFilePromiseReceiver.

00:25:31.756 --> 00:25:34.736
Then, when performing the drag

00:25:34.736 --> 00:25:37.456
operation, and when enumerating

00:25:37.456 --> 00:25:40.076
or draggingItems, you should add

00:25:40.076 --> 00:25:40.766
support to

00:25:40.766 --> 00:25:43.086
NSFilePromiseReceiver, and make

00:25:43.086 --> 00:25:44.456
sure to handle it first.

00:25:45.066 --> 00:25:46.886
Because it's more likely to

00:25:46.886 --> 00:25:48.656
contain the highest quality

00:25:48.656 --> 00:25:49.456
representation.

00:25:49.646 --> 00:25:54.176
For each filePromiseReceiver,

00:25:54.846 --> 00:25:57.506
you call in the promise, and

00:25:57.506 --> 00:26:00.786
when the file is ready, then the

00:26:00.786 --> 00:26:02.306
reader block is called on the

00:26:02.306 --> 00:26:04.156
provided operationQueue, where

00:26:04.156 --> 00:26:05.206
you can handle the file.

00:26:05.776 --> 00:26:09.576
It's very important to provide a

00:26:09.576 --> 00:26:12.776
background operationQueue to not

00:26:12.776 --> 00:26:14.616
block the main trades while

00:26:14.616 --> 00:26:15.886
waiting for the file to be

00:26:15.886 --> 00:26:18.896
downloaded over-- to be

00:26:19.026 --> 00:26:20.716
downloaded, to be written by the

00:26:20.716 --> 00:26:21.266
source file.

00:26:22.286 --> 00:26:23.896
Because this process can take a

00:26:23.896 --> 00:26:26.176
long time, and you don't want--

00:26:26.176 --> 00:26:28.936
especially if the file needs to

00:26:28.936 --> 00:26:30.096
be downloaded over a slow

00:26:30.096 --> 00:26:30.466
network.

00:26:30.976 --> 00:26:34.516
So, for a better user

00:26:34.516 --> 00:26:36.796
experience, you need to display

00:26:37.216 --> 00:26:39.606
a loading activity, and when the

00:26:39.606 --> 00:26:41.206
file is ready, then you can

00:26:41.406 --> 00:26:42.926
replace the UI with the real

00:26:42.926 --> 00:26:43.396
content.

00:26:43.816 --> 00:26:47.556
Here you will see an example of

00:26:47.686 --> 00:26:51.896
Mail, showing a placeholder UI

00:26:51.896 --> 00:26:53.786
while waiting for the image to

00:26:53.786 --> 00:26:54.976
be downloaded via file promises.

00:27:01.066 --> 00:27:02.736
So, that was receiving file

00:27:02.736 --> 00:27:03.216
promises.

00:27:03.676 --> 00:27:05.236
Now, let's see how we can

00:27:05.236 --> 00:27:06.336
provide file promises.

00:27:07.186 --> 00:27:08.736
And, you should consider

00:27:09.106 --> 00:27:10.636
implementing this in your app,

00:27:11.276 --> 00:27:12.636
if the data you want to send

00:27:12.636 --> 00:27:14.296
over drag and drop does not

00:27:14.296 --> 00:27:15.416
exist yet on disk.

00:27:16.556 --> 00:27:18.196
So, let's have a look on how we

00:27:18.196 --> 00:27:20.806
can do that by looking at the

00:27:20.806 --> 00:27:20.976
API.

00:27:25.336 --> 00:27:27.906
First, you will need to create

00:27:27.906 --> 00:27:28.616
an instance of

00:27:28.616 --> 00:27:29.896
NSFilePromiseProvider.

00:27:31.816 --> 00:27:33.796
You should create one instance

00:27:33.796 --> 00:27:34.906
for each promised file.

00:27:35.436 --> 00:27:37.236
And, before writing the

00:27:37.236 --> 00:27:39.226
filePromiseProvider object to

00:27:39.226 --> 00:27:41.186
the pasteboard, it must contain

00:27:41.186 --> 00:27:43.416
a file type, and a delegate.

00:27:44.296 --> 00:27:45.486
These delegate is doing the

00:27:45.486 --> 00:27:46.976
heavy lifting of writing files

00:27:46.976 --> 00:27:47.516
to disk.

00:27:48.456 --> 00:27:50.696
There are only three methods for

00:27:50.696 --> 00:27:52.526
NSFilePromiseProvider delegates.

00:27:53.136 --> 00:27:54.746
The first one is called by the

00:27:54.746 --> 00:27:57.586
drag destination, and returns

00:27:57.586 --> 00:27:58.966
the file name, not the full

00:27:58.966 --> 00:27:59.416
path.

00:27:59.976 --> 00:28:03.136
The second one return an

00:28:03.136 --> 00:28:07.096
operationQueue, and when-- an

00:28:07.096 --> 00:28:08.816
operationQueue where the file,

00:28:08.816 --> 00:28:10.036
it will be written.

00:28:10.996 --> 00:28:12.926
And, we highly recommend that

00:28:12.926 --> 00:28:15.056
you implement this optional

00:28:15.056 --> 00:28:16.556
method, and provide a background

00:28:16.556 --> 00:28:19.426
operationQueue, since otherwise,

00:28:19.426 --> 00:28:21.206
the main queue will be used

00:28:21.206 --> 00:28:21.636
otherwise.

00:28:24.226 --> 00:28:26.636
And, finally, writePromise to

00:28:26.636 --> 00:28:28.816
file is called, asking you to

00:28:28.816 --> 00:28:29.826
write file to disk.

00:28:31.326 --> 00:28:33.066
And, when you are done, remember

00:28:33.066 --> 00:28:34.506
to call the completion handler.

00:28:35.036 --> 00:28:38.876
So, that was receiving file

00:28:38.876 --> 00:28:40.456
promises-- providing file

00:28:40.456 --> 00:28:42.686
promises, and we have covered

00:28:42.686 --> 00:28:45.406
the API to-- that you can use to

00:28:45.406 --> 00:28:47.856
adapt your app to receive and

00:28:47.856 --> 00:28:48.836
provide file promises.

00:28:48.836 --> 00:28:51.006
And now, I'd like to invite

00:28:51.006 --> 00:28:52.826
Joachim on stage to show you all

00:28:52.826 --> 00:28:53.976
of that in a sample app.

00:28:54.336 --> 00:28:54.686
Thank you.

00:28:54.686 --> 00:28:54.866
Joachim?

00:28:55.516 --> 00:28:58.626
[ Applause ]

00:28:59.126 --> 00:28:59.466
>> Thank you.

00:29:02.076 --> 00:29:02.626
Good morning.

00:29:03.556 --> 00:29:05.256
We're going to look at a simple

00:29:05.256 --> 00:29:07.136
beam generator app, which has a

00:29:07.136 --> 00:29:08.506
few issues with drag and drop.

00:29:08.506 --> 00:29:09.976
And we're going to dive into

00:29:09.976 --> 00:29:11.676
Xcode, and try to fix those

00:29:11.676 --> 00:29:11.976
issues together.

00:29:20.046 --> 00:29:21.246
So, here is my simple app.

00:29:21.576 --> 00:29:23.776
And, I can just grab a file I

00:29:23.776 --> 00:29:26.286
have here on desktop, and drop

00:29:26.286 --> 00:29:27.576
it onto its window.

00:29:27.746 --> 00:29:28.376
Just like that.

00:29:29.596 --> 00:29:30.476
On the upper right, I have a

00:29:30.476 --> 00:29:32.276
little button, where I can add a

00:29:32.396 --> 00:29:35.566
text box, and I can add some

00:29:35.656 --> 00:29:37.246
text to my image.

00:29:38.496 --> 00:29:40.306
I can select it, move it around,

00:29:40.956 --> 00:29:45.066
and when I'm ready, I can send

00:29:45.066 --> 00:29:47.466
it over iMessage, for example.

00:29:52.756 --> 00:29:55.066
So, while this image is great, I

00:29:55.066 --> 00:29:56.506
really want to use an image I

00:29:56.506 --> 00:29:57.296
found on the web.

00:29:57.826 --> 00:29:59.686
So, let's open up Safari, and

00:30:00.276 --> 00:30:03.146
try to drag this image onto our

00:30:03.146 --> 00:30:03.266
app.

00:30:06.876 --> 00:30:08.516
Unfortunately, this doesn't

00:30:08.516 --> 00:30:08.716
work.

00:30:09.536 --> 00:30:12.116
So, let's jump to Xcode, and see

00:30:12.116 --> 00:30:12.896
if we can fix that.

00:30:17.156 --> 00:30:18.226
Here I am in the main

00:30:18.226 --> 00:30:19.716
viewController of our app.

00:30:20.466 --> 00:30:22.696
And, we going to jump straight

00:30:22.816 --> 00:30:23.676
to view [inaudible].

00:30:24.456 --> 00:30:26.076
And, have a look at what's going

00:30:26.076 --> 00:30:26.326
on.

00:30:26.906 --> 00:30:30.606
Right here, we're only

00:30:30.606 --> 00:30:32.286
registering for file URL's.

00:30:33.136 --> 00:30:35.026
So, let's fix that, and register

00:30:35.166 --> 00:30:36.976
for FilePromiseReceiver as well.

00:30:41.686 --> 00:30:45.346
Next, when handling the drag

00:30:45.346 --> 00:30:47.706
operation, we need to take care

00:30:47.706 --> 00:30:50.106
of FilePromiseReceiver as well.

00:30:51.166 --> 00:30:54.476
So. Let's jump to the next

00:30:54.476 --> 00:30:56.596
method right here.

00:30:56.866 --> 00:30:57.746
So, here is the list of

00:30:57.746 --> 00:31:00.056
supported classes, and we only

00:31:00.056 --> 00:31:01.056
have NSURL.

00:31:01.516 --> 00:31:03.706
So, we're going to add at the

00:31:03.706 --> 00:31:04.986
first index,

00:31:06.126 --> 00:31:07.446
NSFilePromiseReceiver.

00:31:15.136 --> 00:31:17.226
In the enumeration method here,

00:31:17.766 --> 00:31:18.946
we're going to add a new case.

00:31:26.656 --> 00:31:29.546
Where we're going to receive the

00:31:29.576 --> 00:31:31.376
promised files, and if we get a

00:31:31.376 --> 00:31:33.886
file URL, we're going to call

00:31:33.886 --> 00:31:35.806
the exact same method we will

00:31:35.806 --> 00:31:37.476
have called if we had just

00:31:37.536 --> 00:31:39.076
gotten the file URL over drag

00:31:39.076 --> 00:31:39.316
and drop.

00:31:39.316 --> 00:31:40.946
So, let's see if it works.

00:31:48.306 --> 00:31:49.446
So, here's the little app.

00:31:50.366 --> 00:31:52.486
Let's go back to Safari, take

00:31:52.486 --> 00:31:54.796
the image, and drop it onto the

00:31:54.796 --> 00:31:54.976
window.

00:31:55.516 --> 00:32:00.196
[ Applause ]

00:32:00.696 --> 00:32:01.616
So, that was pretty easy.

00:32:01.906 --> 00:32:03.256
I only had to modify two

00:32:03.256 --> 00:32:05.456
existing methods in order to

00:32:05.456 --> 00:32:06.636
accept file promises.

00:32:09.056 --> 00:32:10.976
Now. Let's add some text.

00:32:15.296 --> 00:32:15.856
Like this.

00:32:16.626 --> 00:32:18.206
And, wouldn't it be great if I'm

00:32:18.206 --> 00:32:19.686
not quite ready to send out my

00:32:19.686 --> 00:32:20.956
meme to somebody, if I could

00:32:20.956 --> 00:32:23.076
just drag it onto the desktop to

00:32:23.076 --> 00:32:24.226
save it as an image file?

00:32:24.876 --> 00:32:28.376
As you can see, this doesn't

00:32:28.376 --> 00:32:28.686
work.

00:32:29.326 --> 00:32:31.036
So, let's jump back to Xcode and

00:32:31.156 --> 00:32:31.976
fix this as well.

00:32:38.076 --> 00:32:39.446
At the bottom of the class, we

00:32:39.446 --> 00:32:40.896
have this method which returns

00:32:41.116 --> 00:32:42.686
an object conforming to

00:32:42.686 --> 00:32:45.636
NSPasteboardWriting, and as you

00:32:45.636 --> 00:32:47.296
can see, we're just returning a

00:32:47.296 --> 00:32:48.476
simple NSImage here.

00:32:49.086 --> 00:32:50.716
So, we're going to replace it

00:32:51.616 --> 00:32:52.976
with a filePromiseProvider.

00:32:57.046 --> 00:32:58.056
So, we're creating a file

00:32:58.056 --> 00:33:00.616
provider, and we're going to

00:33:00.616 --> 00:33:02.476
provide a JPEG image.

00:33:03.346 --> 00:33:05.276
And, we're going to use this

00:33:05.346 --> 00:33:07.236
userInfo property to store the

00:33:07.236 --> 00:33:09.496
snapshotItem, which we're going

00:33:09.496 --> 00:33:10.856
to use later to write out the

00:33:10.856 --> 00:33:11.646
file to disk.

00:33:14.016 --> 00:33:16.416
As a next step, let's conform to

00:33:16.416 --> 00:33:17.976
NSFilePromiseProviderDelegate.

00:33:22.176 --> 00:33:22.966
Just like this.

00:33:24.566 --> 00:33:25.466
Jump back down.

00:33:26.236 --> 00:33:27.246
And, implement the three

00:33:27.246 --> 00:33:28.796
delegate methods you heard about

00:33:28.796 --> 00:33:29.396
just before.

00:33:30.756 --> 00:33:34.186
The first one returns the file

00:33:34.186 --> 00:33:35.256
name.

00:33:36.226 --> 00:33:37.896
For simplicity, we're just

00:33:37.896 --> 00:33:39.176
returning a static file name

00:33:39.176 --> 00:33:39.436
here.

00:33:41.296 --> 00:33:42.976
The second one returns an

00:33:42.976 --> 00:33:43.766
operationQueue.

00:33:44.776 --> 00:33:46.306
And, we happen to have one right

00:33:46.306 --> 00:33:46.566
here.

00:33:47.956 --> 00:33:49.476
And, the third method is

00:33:49.476 --> 00:33:51.676
actually going to write the file

00:33:51.676 --> 00:33:51.976
to disk.

00:33:58.746 --> 00:34:00.116
So, what's happening here, is

00:34:00.276 --> 00:34:01.016
that we're getting the

00:34:01.016 --> 00:34:02.946
snapshotObject out of the

00:34:02.946 --> 00:34:06.396
filePromiseProvider object, and

00:34:06.536 --> 00:34:08.266
we're going to use its JPEG

00:34:08.266 --> 00:34:10.446
representation to write the file

00:34:10.626 --> 00:34:11.806
to disk.

00:34:12.835 --> 00:34:13.976
So, let's have a look.

00:34:19.826 --> 00:34:21.286
This time, we're going to jump

00:34:21.286 --> 00:34:21.826
to Photos.

00:34:22.206 --> 00:34:28.366
Going to take this image, drag

00:34:28.366 --> 00:34:31.966
it into our app, add some text.

00:34:36.275 --> 00:34:39.666
And, drop it onto the Finder

00:34:39.666 --> 00:34:40.096
desktop.

00:34:40.096 --> 00:34:41.335
And, here we are.

00:34:42.516 --> 00:34:46.500
[ Applause ]

00:34:55.676 --> 00:34:56.866
So, if you just follow the

00:34:56.866 --> 00:34:58.396
simple steps I just showed you,

00:34:58.576 --> 00:34:59.956
you can add support for file

00:34:59.956 --> 00:35:01.916
promises to your app, and

00:35:01.916 --> 00:35:03.896
improve the user experience.

00:35:04.736 --> 00:35:06.276
And, with that, I'd like to hand

00:35:06.276 --> 00:35:06.946
it back to Eric.

00:35:07.576 --> 00:35:07.856
Thank you.

00:35:08.516 --> 00:35:12.356
[ Applause ]

00:35:12.856 --> 00:35:13.636
>> Great stuff.

00:35:14.106 --> 00:35:14.606
Great stuff.

00:35:14.606 --> 00:35:15.666
I hope you really enjoyed that.

00:35:15.986 --> 00:35:17.976
I just have a few words, just in

00:35:17.976 --> 00:35:18.496
summary.

00:35:18.736 --> 00:35:20.796
To, kind of, tie this all

00:35:20.796 --> 00:35:21.306
together.

00:35:21.306 --> 00:35:23.976
And, I'll start by saying, you

00:35:23.976 --> 00:35:26.956
know, photos really, really

00:35:26.956 --> 00:35:28.816
matter to all of us.

00:35:29.176 --> 00:35:30.906
Right? Millions and millions of

00:35:30.906 --> 00:35:32.386
people around the world take

00:35:32.386 --> 00:35:34.626
millions of photos every day.

00:35:35.686 --> 00:35:37.356
And, all of those photos find a

00:35:37.356 --> 00:35:39.316
home inside the Photos app.

00:35:39.826 --> 00:35:42.206
But, they're nothing if they

00:35:42.206 --> 00:35:43.026
can't be shared.

00:35:44.026 --> 00:35:45.586
If they can't be shown.

00:35:45.586 --> 00:35:47.616
If they can't be preserved into

00:35:47.616 --> 00:35:48.756
beautiful keepsakes.

00:35:49.206 --> 00:35:51.836
And so, all of these people

00:35:51.836 --> 00:35:53.066
capturing all of these images,

00:35:53.066 --> 00:35:55.626
they rely on you, the developer,

00:35:55.856 --> 00:35:57.606
to create amazing apps that let

00:35:57.606 --> 00:35:58.866
them do creative things with

00:35:58.936 --> 00:35:59.756
those images.

00:36:00.526 --> 00:36:01.866
So, if you only remember two

00:36:01.866 --> 00:36:03.266
things from this session today,

00:36:03.266 --> 00:36:04.516
please remember this.

00:36:05.446 --> 00:36:07.006
Support file promises.

00:36:07.676 --> 00:36:09.846
You saw it's really easy to have

00:36:09.846 --> 00:36:11.476
some very immediate interaction

00:36:11.476 --> 00:36:12.316
with the Photos app.

00:36:13.636 --> 00:36:14.606
Please, please do that.

00:36:15.096 --> 00:36:17.096
And, secondly, we strongly

00:36:17.096 --> 00:36:19.186
encourage you to explore all of

00:36:19.186 --> 00:36:20.956
the API that's available to you

00:36:20.956 --> 00:36:22.446
in the project extension

00:36:22.976 --> 00:36:24.426
experience within Photos.

00:36:24.896 --> 00:36:27.466
Going back to what I said at the

00:36:27.466 --> 00:36:29.726
beginning, this is a blossoming

00:36:29.726 --> 00:36:30.536
ecosystem.

00:36:30.536 --> 00:36:31.476
And, there's a tremendous

00:36:31.476 --> 00:36:33.006
opportunity to embrace it.

00:36:33.516 --> 00:36:35.046
And, collectively for us to

00:36:35.046 --> 00:36:36.276
create a better Photos

00:36:36.276 --> 00:36:37.456
experience for everybody.

00:36:40.096 --> 00:36:42.526
So, with that, please join us in

00:36:42.526 --> 00:36:43.696
the lab this afternoon.

00:36:44.326 --> 00:36:46.526
We have tons of engineers on

00:36:46.526 --> 00:36:48.806
staff to help you with any of

00:36:48.806 --> 00:36:50.946
your PhotoKit questions, Photos

00:36:50.946 --> 00:36:53.446
extensions, be it iOS, macOS, we

00:36:53.846 --> 00:36:54.936
really look forward to talking

00:36:54.936 --> 00:36:55.486
to you there.

00:36:56.306 --> 00:36:58.036
And, enjoy the rest of your

00:36:58.036 --> 00:36:58.176
WWDC.

00:36:58.176 --> 00:36:58.596
Thank you.

00:36:59.516 --> 00:37:03.500
[ Applause ]