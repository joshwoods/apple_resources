WEBVTT

00:00:07.516 --> 00:00:17.776
[ Music ]

00:00:18.276 --> 00:00:19.586
>> In this session we are going

00:00:19.586 --> 00:00:20.826
to tell you all about Quick

00:00:20.826 --> 00:00:21.006
Look.

00:00:21.646 --> 00:00:22.806
Welcome to previews from the

00:00:22.806 --> 00:00:23.366
ground up.

00:00:24.096 --> 00:00:26.046
My name is Raffael and I'm going

00:00:26.046 --> 00:00:27.816
to present together with Maxime,

00:00:28.186 --> 00:00:29.576
both software engineers at

00:00:29.576 --> 00:00:29.946
Apple.

00:00:30.456 --> 00:00:34.256
We are going to start with a

00:00:34.256 --> 00:00:36.286
brief overview of what Quick

00:00:36.286 --> 00:00:36.826
Look is.

00:00:37.896 --> 00:00:39.326
Then we're going to show you how

00:00:39.326 --> 00:00:41.656
to adopt the Quick Look Preview

00:00:41.656 --> 00:00:43.366
Controller in your application.

00:00:43.726 --> 00:00:45.816
And then we're going to explain

00:00:45.816 --> 00:00:47.566
how to provide custom Quick Look

00:00:47.566 --> 00:00:51.216
previews and custom thumbnails

00:00:51.416 --> 00:00:52.976
for your own file formats.

00:00:55.536 --> 00:00:57.376
Let's jump right into it, what's

00:00:57.376 --> 00:00:57.866
Quick Look?

00:01:00.156 --> 00:01:01.486
Quick Look is all about

00:01:01.486 --> 00:01:03.786
previewing documents, it allows

00:01:03.786 --> 00:01:05.426
you to present documents without

00:01:05.426 --> 00:01:06.006
the hassle.

00:01:07.026 --> 00:01:08.936
More precisely, Quick Look is an

00:01:09.126 --> 00:01:10.726
iOS framework that provides

00:01:10.726 --> 00:01:12.826
multiple core features to you as

00:01:12.826 --> 00:01:13.466
a developer.

00:01:15.036 --> 00:01:16.236
It allows you to preview

00:01:16.236 --> 00:01:18.246
documents of several commonly

00:01:18.246 --> 00:01:21.716
used file formats, to provide

00:01:21.716 --> 00:01:23.926
custom previews for files of

00:01:23.926 --> 00:01:27.596
your very own file format, and

00:01:27.596 --> 00:01:29.236
to provide thumbnails to the

00:01:29.236 --> 00:01:31.296
system for files of your own

00:01:31.296 --> 00:01:32.326
custom file format.

00:01:35.786 --> 00:01:37.146
Quick Look is in fact already

00:01:37.146 --> 00:01:38.816
used by many of Apple's first

00:01:38.816 --> 00:01:39.886
party applications.

00:01:41.006 --> 00:01:43.896
For example, in files to present

00:01:43.896 --> 00:01:45.616
your documents that you have in

00:01:45.616 --> 00:01:45.976
the Cloud.

00:01:51.046 --> 00:01:53.346
Or in Mail and Notes to preview

00:01:53.346 --> 00:01:53.976
your attachments.

00:02:01.356 --> 00:02:03.266
And in Messages to show your

00:02:03.266 --> 00:02:04.676
pictures and videos that you've

00:02:04.676 --> 00:02:04.976
sent.

00:02:12.046 --> 00:02:13.286
So who is this session for?

00:02:13.686 --> 00:02:15.546
Well if you want to know how to

00:02:15.546 --> 00:02:17.106
present documents in your

00:02:17.106 --> 00:02:18.836
application without having to

00:02:18.836 --> 00:02:19.976
implement all the common

00:02:19.976 --> 00:02:21.696
features the users are used to

00:02:22.526 --> 00:02:23.676
you're in the right session.

00:02:24.986 --> 00:02:26.836
You also might own a custom file

00:02:26.836 --> 00:02:29.176
format which iOS doesn't support

00:02:29.176 --> 00:02:30.796
natively and you want to make

00:02:30.796 --> 00:02:32.306
sure that your file format is

00:02:32.306 --> 00:02:34.136
properly handled by iOS with

00:02:34.136 --> 00:02:35.776
custom thumbnails and previews

00:02:36.046 --> 00:02:37.356
stay here if you want to learn

00:02:37.356 --> 00:02:38.176
more about this.

00:02:39.776 --> 00:02:40.816
And no matter if you're a

00:02:40.816 --> 00:02:43.046
newcomer to iOS or if you

00:02:43.046 --> 00:02:45.026
already have an app we're going

00:02:45.026 --> 00:02:46.616
to guide you step-by-step.

00:02:49.356 --> 00:02:50.626
By the way, if you haven't

00:02:50.626 --> 00:02:51.906
checked it out yet you should

00:02:51.906 --> 00:02:53.526
definitely take a look at last

00:02:53.526 --> 00:02:55.286
year's session, Building Great

00:02:55.336 --> 00:02:57.876
Document-based Apps in iOS in

00:02:57.876 --> 00:02:59.586
which we have introduced the UA

00:02:59.586 --> 00:03:01.256
document browser view controller

00:03:01.506 --> 00:03:03.286
and also have covered the basics

00:03:03.286 --> 00:03:04.656
of Quick Look preview and

00:03:04.656 --> 00:03:06.086
thumbnail extensions briefly.

00:03:07.516 --> 00:03:09.046
There's also going to be a

00:03:09.046 --> 00:03:10.426
document browser one-on-one

00:03:10.426 --> 00:03:11.986
session this year which we

00:03:11.986 --> 00:03:13.606
highly encourage you to attend

00:03:14.016 --> 00:03:15.506
if you're interested in file

00:03:15.506 --> 00:03:16.896
handling on iOS.

00:03:21.246 --> 00:03:22.416
Quick Look has been around for

00:03:22.416 --> 00:03:23.426
quite a while already.

00:03:23.886 --> 00:03:25.146
It's been introduced with the

00:03:25.146 --> 00:03:26.536
iOS 4 SDK.

00:03:28.046 --> 00:03:29.386
The main class you're interested

00:03:29.386 --> 00:03:30.786
in is to [inaudible] preview

00:03:30.786 --> 00:03:32.476
controller which is a view

00:03:32.476 --> 00:03:34.356
controller to preview documents.

00:03:36.266 --> 00:03:38.386
It uses the classic data source

00:03:38.386 --> 00:03:40.086
and delegate pattern that you

00:03:40.086 --> 00:03:41.706
already know from your UIKit and

00:03:41.706 --> 00:03:42.526
other frameworks.

00:03:42.976 --> 00:03:46.156
And presenting Quick Look with a

00:03:46.156 --> 00:03:47.516
beautiful [inaudible] transition

00:03:47.516 --> 00:03:49.256
couldn't be easier with the API

00:03:49.256 --> 00:03:49.976
that we give you.

00:03:55.046 --> 00:03:56.076
Why would you want to use Quick

00:03:56.236 --> 00:03:56.326
Look?

00:03:56.606 --> 00:03:58.326
Well if you have a similar use

00:03:58.326 --> 00:04:00.986
case to files, mail or the other

00:04:00.986 --> 00:04:02.356
apps we've shown you before

00:04:02.986 --> 00:04:04.296
Quick Look is the perfect choice

00:04:04.296 --> 00:04:04.696
for you.

00:04:05.886 --> 00:04:07.146
Quick Look comes with everything

00:04:07.146 --> 00:04:08.426
you need out of the box.

00:04:10.306 --> 00:04:11.896
It supports the commonly used

00:04:11.896 --> 00:04:14.436
file types and it provides that

00:04:14.436 --> 00:04:16.495
native user experience that your

00:04:16.495 --> 00:04:18.055
users are used to from other

00:04:18.055 --> 00:04:19.656
first party iOS apps.

00:04:21.616 --> 00:04:22.976
We made sure Quick Look has a

00:04:22.976 --> 00:04:24.586
create performance on all

00:04:24.586 --> 00:04:26.056
devices, so that all the

00:04:26.056 --> 00:04:27.736
animations and gestures are

00:04:27.736 --> 00:04:28.166
fluid.

00:04:30.006 --> 00:04:31.106
And you might be dealing with

00:04:31.106 --> 00:04:32.976
files from untrusted sources,

00:04:33.046 --> 00:04:34.556
but don't worry we got your

00:04:34.556 --> 00:04:34.936
back.

00:04:35.466 --> 00:04:36.396
Quick Look comes with a

00:04:36.396 --> 00:04:38.046
sophisticated security model

00:04:38.046 --> 00:04:39.376
that keeps your application

00:04:39.376 --> 00:04:39.816
safe.

00:04:44.136 --> 00:04:45.056
Let's take a look at the

00:04:45.056 --> 00:04:46.296
supported file types.

00:04:47.196 --> 00:04:48.966
As you can see all the common

00:04:48.966 --> 00:04:49.986
types are in here.

00:04:50.406 --> 00:04:52.676
Media files such as images,

00:04:52.676 --> 00:04:54.506
audio files and videos,

00:04:54.876 --> 00:04:56.916
documents such as PDFs and

00:04:56.916 --> 00:04:58.926
office files, but also zip

00:04:58.926 --> 00:04:59.526
archives.

00:05:00.556 --> 00:05:02.786
Previewing a zip archive lets

00:05:02.786 --> 00:05:04.586
you look into the contents of

00:05:04.586 --> 00:05:06.346
the archive and view the

00:05:06.346 --> 00:05:08.466
contained files individually and

00:05:08.466 --> 00:05:09.516
share them for example.

00:05:11.446 --> 00:05:13.176
Now if your custom file format

00:05:13.176 --> 00:05:14.726
is missing in this list don't

00:05:14.726 --> 00:05:15.136
worry.

00:05:16.096 --> 00:05:17.786
Last year we introduced a new

00:05:17.786 --> 00:05:19.456
extension point for implementing

00:05:19.456 --> 00:05:21.046
Quick Look preview extensions.

00:05:21.916 --> 00:05:23.726
Preview extensions allow you as

00:05:23.726 --> 00:05:25.886
a developer to create a preview

00:05:25.886 --> 00:05:27.746
for files of your very own

00:05:27.746 --> 00:05:28.876
custom file format.

00:05:28.876 --> 00:05:31.176
We will cover this in the second

00:05:31.176 --> 00:05:31.976
part of the session.

00:05:32.476 --> 00:05:35.776
And this year with iOS 12 we

00:05:35.776 --> 00:05:37.376
have also added support for the

00:05:37.376 --> 00:05:41.196
new AR file format USDC, so with

00:05:41.196 --> 00:05:43.156
just a few lines of code you get

00:05:43.156 --> 00:05:44.856
a fully immersive augmented

00:05:44.856 --> 00:05:46.586
reality experience in your

00:05:46.586 --> 00:05:47.276
application.

00:05:48.746 --> 00:05:50.166
Okay, now let's talk about user

00:05:50.166 --> 00:05:50.896
experience.

00:05:51.556 --> 00:05:53.086
For each of the file types shown

00:05:53.086 --> 00:05:55.056
before we made sure that Quick

00:05:55.056 --> 00:05:56.606
Look provides the best possible

00:05:56.606 --> 00:05:58.866
preview on your mobile devices.

00:06:00.476 --> 00:06:01.936
For example, when previewing

00:06:01.936 --> 00:06:04.266
images you're able to zoom into

00:06:04.266 --> 00:06:05.796
the images conveniently.

00:06:06.246 --> 00:06:08.706
You're also able to close Quick

00:06:08.706 --> 00:06:10.466
Look with a swipe down gesture.

00:06:11.006 --> 00:06:14.596
In PDF documents you get a

00:06:14.596 --> 00:06:16.156
sidebar with thumbnails for

00:06:16.156 --> 00:06:17.286
easier navigation.

00:06:18.356 --> 00:06:20.366
In spreadsheets you can switch

00:06:20.366 --> 00:06:22.256
through the individual pages of

00:06:22.256 --> 00:06:22.956
the document.

00:06:24.396 --> 00:06:26.476
And in media files we show a

00:06:26.476 --> 00:06:28.176
scrubber that allows you to go

00:06:28.176 --> 00:06:29.656
back and forth and so on.

00:06:29.776 --> 00:06:30.626
You get the idea.

00:06:32.556 --> 00:06:33.896
So when you choose Quick Look

00:06:34.246 --> 00:06:36.046
your users get all the gestures

00:06:36.046 --> 00:06:37.586
they are used to from other

00:06:37.586 --> 00:06:37.976
applications.

00:06:43.386 --> 00:06:44.516
So what are some common use

00:06:44.516 --> 00:06:46.126
cases for using Quick Look?

00:06:47.196 --> 00:06:49.046
For example, you might want to

00:06:49.046 --> 00:06:51.136
let the users zoom into photos

00:06:51.136 --> 00:06:54.386
or you want to be able to flick

00:06:54.386 --> 00:06:55.876
through a collection of photos

00:06:56.046 --> 00:06:56.746
left and right.

00:06:57.826 --> 00:07:00.096
You want to play audio or video

00:07:00.096 --> 00:07:02.046
files without having to deal

00:07:02.046 --> 00:07:03.546
with lower-level frameworks.

00:07:03.546 --> 00:07:06.996
Or you want to present for

00:07:06.996 --> 00:07:08.946
example a scrollable and

00:07:08.946 --> 00:07:11.106
zoomable user agreement PDF to

00:07:11.106 --> 00:07:11.646
the user.

00:07:12.876 --> 00:07:14.026
Use Quick Look for this.

00:07:16.686 --> 00:07:17.876
But Quick Look shouldn't be

00:07:17.876 --> 00:07:19.956
misused, here's when not to use

00:07:19.956 --> 00:07:20.446
Quick Look.

00:07:21.936 --> 00:07:22.946
Quick Look is all about

00:07:22.946 --> 00:07:24.896
previewing but doesn't provide

00:07:24.896 --> 00:07:25.826
editing features.

00:07:26.766 --> 00:07:27.866
So if you need to provide

00:07:27.866 --> 00:07:29.806
functionality such as image

00:07:29.806 --> 00:07:32.746
editing, PDF management or movie

00:07:32.746 --> 00:07:34.376
trimming you need to choose a

00:07:34.376 --> 00:07:34.976
different approach.

00:07:39.046 --> 00:07:40.676
Similarly, if you need more

00:07:40.676 --> 00:07:42.336
advanced playback control for

00:07:42.336 --> 00:07:43.906
your videos Quick Look is

00:07:43.906 --> 00:07:45.426
probably not the best choice,

00:07:46.016 --> 00:07:47.896
you can use AVPlayer instead.

00:07:49.116 --> 00:07:50.016
Quick Look is meant to be

00:07:50.016 --> 00:07:51.346
presented full screen.

00:07:51.716 --> 00:07:53.276
If you simply want to present an

00:07:53.276 --> 00:07:55.456
image, a video or a document

00:07:55.636 --> 00:07:57.356
embedded in your layout together

00:07:57.356 --> 00:07:58.936
with other views surrounding it

00:07:59.616 --> 00:08:00.886
you probably want to use

00:08:00.886 --> 00:08:04.506
UAImageView, AVPlayer, WKWebView

00:08:04.576 --> 00:08:06.086
or other kind of views instead.

00:08:08.816 --> 00:08:10.316
Also note that it's not

00:08:10.316 --> 00:08:12.436
supported to customize the view

00:08:12.436 --> 00:08:13.856
hierarchy of Quick Look.

00:08:14.416 --> 00:08:16.316
Please don't try to add views on

00:08:16.316 --> 00:08:17.696
top of the previews the

00:08:17.696 --> 00:08:20.036
navigational toolbar, this is

00:08:20.036 --> 00:08:20.976
simply not supported.

00:08:26.166 --> 00:08:27.826
So now that we've introduced

00:08:27.826 --> 00:08:29.596
Quick Look, let's take a look at

00:08:29.596 --> 00:08:31.286
how to actually make use of our

00:08:31.286 --> 00:08:31.976
APIs.

00:08:37.275 --> 00:08:38.655
If you want to present documents

00:08:38.655 --> 00:08:40.966
to the user as a first step you

00:08:40.966 --> 00:08:42.166
instantiate a new

00:08:42.166 --> 00:08:44.296
QLPreviewController which is

00:08:44.296 --> 00:08:46.186
basically a UIViewController.

00:08:48.176 --> 00:08:49.726
Next, in order to tell the

00:08:49.726 --> 00:08:50.886
preview controller which

00:08:50.886 --> 00:08:53.006
documents to preview, you need

00:08:53.006 --> 00:08:54.726
to assign a data source to it.

00:08:55.676 --> 00:08:57.156
The data source is an object

00:08:57.156 --> 00:08:58.046
that conforms to the

00:08:58.046 --> 00:08:59.986
QLPreviewController data source

00:08:59.986 --> 00:09:00.426
protocol.

00:09:00.426 --> 00:09:02.496
We'll take a look at this in a

00:09:02.496 --> 00:09:02.906
second.

00:09:03.396 --> 00:09:07.116
And as a third and last step,

00:09:07.586 --> 00:09:09.006
all you have to do is present

00:09:09.006 --> 00:09:09.786
the view controller.

00:09:15.046 --> 00:09:16.296
Let's take a closer look at how

00:09:16.296 --> 00:09:17.436
the data source works.

00:09:18.376 --> 00:09:20.236
Your data source has to conform

00:09:20.236 --> 00:09:22.106
to the QLPreviewController data

00:09:22.106 --> 00:09:22.956
source protocol.

00:09:24.026 --> 00:09:25.706
This is a protocol that requires

00:09:25.706 --> 00:09:26.426
two methods.

00:09:26.776 --> 00:09:28.666
First, you need to return the

00:09:28.666 --> 00:09:30.406
number of items that your

00:09:30.406 --> 00:09:31.456
preview controller should

00:09:31.456 --> 00:09:31.946
preview.

00:09:32.956 --> 00:09:34.336
It should provide more than one

00:09:34.336 --> 00:09:36.166
item the users will be able to

00:09:36.166 --> 00:09:37.926
swipe left and right to flick

00:09:37.926 --> 00:09:38.936
through the documents.

00:09:41.156 --> 00:09:43.216
Next, Quick Look then will ask

00:09:43.216 --> 00:09:44.186
you for one or more

00:09:44.186 --> 00:09:46.446
QLPreviewItems depending on what

00:09:46.446 --> 00:09:47.706
number you've previously

00:09:47.706 --> 00:09:48.176
returned.

00:09:50.516 --> 00:09:52.636
Okay what's a QLPreviewItem?

00:09:53.456 --> 00:09:54.966
It's a protocol that acts as an

00:09:54.966 --> 00:09:56.736
abstraction for your documents.

00:09:57.386 --> 00:09:59.326
For Quick Look a preview item is

00:09:59.326 --> 00:10:02.136
basically the URL, where to find

00:10:02.136 --> 00:10:04.596
the document on disk and

00:10:04.596 --> 00:10:06.936
optionally a title that Quick

00:10:06.936 --> 00:10:08.336
Look will show in the navigation

00:10:08.336 --> 00:10:08.566
bar.

00:10:09.136 --> 00:10:12.216
The class representing documents

00:10:12.216 --> 00:10:14.206
in your app needs to conform to

00:10:14.206 --> 00:10:15.746
the QLPreviewItem protocol.

00:10:16.586 --> 00:10:19.266
But by the way, NSURL already

00:10:19.266 --> 00:10:21.376
conforms to the QLPreviewItem

00:10:21.376 --> 00:10:23.396
protocol, so if you don't need

00:10:23.396 --> 00:10:25.246
custom titles you can simply

00:10:25.246 --> 00:10:27.896
return NSURL instances in your

00:10:27.896 --> 00:10:29.806
data source without implementing

00:10:29.806 --> 00:10:30.936
the protocol yourself.

00:10:31.466 --> 00:10:34.896
Let's take a look at an example.

00:10:36.426 --> 00:10:38.136
In this scenario our view

00:10:38.136 --> 00:10:39.576
controller that presents Quick

00:10:39.576 --> 00:10:41.766
Look acts as the data source of

00:10:41.766 --> 00:10:43.166
the QLPreviewController.

00:10:44.496 --> 00:10:46.566
Therefore, we let it conform to

00:10:46.566 --> 00:10:48.236
the QLPreviewController data

00:10:48.236 --> 00:10:50.346
source in an extension and we

00:10:50.346 --> 00:10:51.586
implement the two methods.

00:10:53.276 --> 00:10:54.986
Here we are using an area of

00:10:54.986 --> 00:10:57.046
file URLs that acts as the

00:10:57.046 --> 00:10:57.396
model.

00:10:57.986 --> 00:10:59.516
We return the number of URLs

00:10:59.516 --> 00:11:02.096
that we have in the number of

00:11:02.096 --> 00:11:03.646
preview items in controller

00:11:03.646 --> 00:11:04.086
method.

00:11:04.586 --> 00:11:07.626
And then each URL respectively

00:11:07.796 --> 00:11:10.006
referenced by the index in the

00:11:10.006 --> 00:11:12.216
previewController controller

00:11:12.216 --> 00:11:13.896
previewItemAt index method.

00:11:19.046 --> 00:11:20.866
Okay we've set up our preview

00:11:20.866 --> 00:11:22.426
controller and it knows what

00:11:22.426 --> 00:11:24.336
files to preview, so we are

00:11:24.336 --> 00:11:25.656
ready to actually present the

00:11:25.656 --> 00:11:26.376
view controller.

00:11:27.386 --> 00:11:28.616
There are two ways for doing

00:11:28.616 --> 00:11:28.836
that.

00:11:29.586 --> 00:11:30.766
You can either present the

00:11:30.766 --> 00:11:32.496
preview controller modally on

00:11:32.496 --> 00:11:34.866
top of the current context or

00:11:34.866 --> 00:11:36.456
you push the preview controller

00:11:36.916 --> 00:11:38.626
into a UINavigationController.

00:11:39.726 --> 00:11:41.746
Both ways work great and you

00:11:41.746 --> 00:11:43.646
need to decide what fits best in

00:11:43.646 --> 00:11:44.586
your situation.

00:11:44.586 --> 00:11:47.016
To present it modally you do

00:11:47.016 --> 00:11:48.066
what you do with any view

00:11:48.066 --> 00:11:49.716
controller you call present.

00:11:51.666 --> 00:11:53.296
Here's an example of what a

00:11:53.296 --> 00:11:54.716
modal presentation can look

00:11:54.716 --> 00:11:54.996
like.

00:11:57.176 --> 00:11:58.046
If you have a

00:11:58.046 --> 00:11:59.876
UINavigationController and

00:11:59.876 --> 00:12:01.396
prefer to push the preview

00:12:01.396 --> 00:12:03.386
controller instead you use

00:12:03.386 --> 00:12:03.976
pushViewController.

00:12:08.146 --> 00:12:08.976
This is what it looks like.

00:12:16.046 --> 00:12:17.286
The QLPreviewController class

00:12:17.286 --> 00:12:18.866
provides a few more methods that

00:12:18.866 --> 00:12:19.906
I would like to highlight.

00:12:20.956 --> 00:12:22.826
First, if you want to know if

00:12:22.826 --> 00:12:24.296
Quick Look is capable of

00:12:24.366 --> 00:12:25.986
previewing a certain document

00:12:26.706 --> 00:12:28.756
use the canPreview item class

00:12:28.756 --> 00:12:32.026
method, this will return true if

00:12:32.026 --> 00:12:33.726
the document matches any of the

00:12:33.726 --> 00:12:36.376
supported default file types or

00:12:36.376 --> 00:12:37.756
if there is a preview extension

00:12:37.756 --> 00:12:39.226
available that can handle the

00:12:39.226 --> 00:12:39.666
file.

00:12:41.856 --> 00:12:43.766
The data source we've already

00:12:43.766 --> 00:12:44.216
covered.

00:12:46.816 --> 00:12:49.216
Reload data reloads the list of

00:12:49.216 --> 00:12:50.356
documents your preview

00:12:50.356 --> 00:12:51.556
controller should present.

00:12:52.236 --> 00:12:54.406
If this list ever changes while

00:12:54.406 --> 00:12:55.486
the preview controller is

00:12:55.486 --> 00:12:57.626
currently presented use this

00:12:57.626 --> 00:12:59.236
method to trigger a reload.

00:13:01.796 --> 00:13:03.446
If you need to obtain the index

00:13:03.446 --> 00:13:05.236
of the currently previewed item

00:13:05.236 --> 00:13:07.146
in your list of preview items

00:13:07.956 --> 00:13:09.546
remember the user can swipe left

00:13:09.546 --> 00:13:10.696
and right to switch to a

00:13:10.696 --> 00:13:12.766
different one, use the current

00:13:12.766 --> 00:13:14.436
previewItemIndex variable.

00:13:15.646 --> 00:13:17.206
This is both a getter and a

00:13:17.206 --> 00:13:19.486
setter, so if you want Quick

00:13:19.486 --> 00:13:20.986
Look to start with a particular

00:13:20.986 --> 00:13:22.746
item when it's being presented

00:13:22.746 --> 00:13:24.836
set the index to the right

00:13:24.836 --> 00:13:25.256
value.

00:13:25.666 --> 00:13:29.946
Last but not least, preview

00:13:29.946 --> 00:13:31.816
controllers also have a

00:13:31.816 --> 00:13:32.376
delegate.

00:13:33.066 --> 00:13:34.126
Let's take a look at the

00:13:34.126 --> 00:13:35.536
QLPreviewController delegate

00:13:35.536 --> 00:13:35.936
protocol now.

00:13:41.056 --> 00:13:42.506
If you assign a delegate to your

00:13:42.506 --> 00:13:44.366
preview controller you get more

00:13:44.366 --> 00:13:46.046
ways to control how Quick Look

00:13:46.046 --> 00:13:46.626
behaves.

00:13:47.736 --> 00:13:49.226
It also lets you react to Quick

00:13:49.226 --> 00:13:50.496
Look presentation events.

00:13:51.316 --> 00:13:52.836
Note that all of the methods in

00:13:52.836 --> 00:13:54.946
the QLPreviewController delegate

00:13:54.946 --> 00:13:55.616
are optional.

00:13:56.226 --> 00:13:57.636
You don't have to implement them

00:13:57.726 --> 00:13:59.096
and in fact you don't even have

00:13:59.096 --> 00:14:00.556
to assign a delegate at all.

00:14:02.376 --> 00:14:04.076
The protocol hosts a bunch of

00:14:04.076 --> 00:14:05.506
methods you can implement.

00:14:06.306 --> 00:14:07.986
The first two methods lets you

00:14:07.986 --> 00:14:09.566
react to the event that Quick

00:14:09.566 --> 00:14:11.086
Look is about to be dismissed by

00:14:11.086 --> 00:14:13.246
the user and also that the

00:14:13.246 --> 00:14:13.976
dismissing is now complete.

00:14:18.046 --> 00:14:19.036
You might want to use these

00:14:19.036 --> 00:14:20.636
methods to update the view

00:14:20.636 --> 00:14:22.126
controller that is presenting

00:14:22.126 --> 00:14:22.976
Quick Look right now.

00:14:27.176 --> 00:14:29.456
Next, the preview controller

00:14:29.456 --> 00:14:31.856
should open URL for item method

00:14:32.386 --> 00:14:34.026
allows you to prevent Quick Look

00:14:34.026 --> 00:14:35.966
to follow a link contained in

00:14:35.966 --> 00:14:37.136
previewed documents.

00:14:38.006 --> 00:14:39.846
With this method you can for

00:14:39.846 --> 00:14:41.736
example prevent the user from

00:14:41.736 --> 00:14:43.806
leaving your app when tapping a

00:14:43.806 --> 00:14:45.886
URL or a phone number contained

00:14:45.886 --> 00:14:46.206
in a PDF.

00:14:46.206 --> 00:14:51.086
And last but not least, as

00:14:51.086 --> 00:14:52.246
promised before the

00:14:52.246 --> 00:14:53.936
QLPreviewController delegate

00:14:53.936 --> 00:14:56.356
protocol also provides API to

00:14:56.476 --> 00:14:58.896
get a smooth zoom animation when

00:14:58.896 --> 00:15:00.106
Quick Look is presented and

00:15:00.106 --> 00:15:00.636
dismissed.

00:15:01.716 --> 00:15:03.616
With these methods a thumbnail

00:15:03.616 --> 00:15:05.396
that is on screen in your user

00:15:05.396 --> 00:15:07.706
interface can transition into a

00:15:07.706 --> 00:15:09.536
full Quick Look preview when

00:15:09.536 --> 00:15:10.086
tapping it.

00:15:13.056 --> 00:15:15.466
Imagine an email attachment or a

00:15:15.466 --> 00:15:17.356
photo inside a conversation view

00:15:17.586 --> 00:15:20.526
which you can tap to show it

00:15:20.526 --> 00:15:22.096
full screen with Quick Look.

00:15:25.406 --> 00:15:27.356
We made it super easy for you to

00:15:27.356 --> 00:15:28.906
get this cross fade zoom

00:15:28.906 --> 00:15:30.756
animation in your application.

00:15:32.276 --> 00:15:33.936
If you implement one of the two

00:15:33.936 --> 00:15:35.496
approaches in your delegate

00:15:35.936 --> 00:15:37.236
Quick Look will ask for the

00:15:37.236 --> 00:15:38.986
information that is needed for

00:15:38.986 --> 00:15:40.096
performing the zoom.

00:15:41.026 --> 00:15:42.126
This is basically the

00:15:42.126 --> 00:15:44.386
rectangular area the animation

00:15:44.386 --> 00:15:45.636
should start from when

00:15:45.636 --> 00:15:48.246
presenting or end in when

00:15:48.246 --> 00:15:49.226
dismissing Quick Look.

00:15:51.176 --> 00:15:54.666
Either you provide the frame and

00:15:54.666 --> 00:15:58.586
the image of the thumbnail or

00:15:58.686 --> 00:16:00.266
and this is the preferred way of

00:16:00.266 --> 00:16:02.416
doing it, you use our mode and

00:16:02.416 --> 00:16:04.136
method in which you simply

00:16:04.136 --> 00:16:05.946
return the thumbnail as a view.

00:16:06.916 --> 00:16:08.306
With this approach you don't

00:16:08.306 --> 00:16:09.916
have to worry about coordinates

00:16:10.436 --> 00:16:11.306
Quick Look will do all the heavy

00:16:11.306 --> 00:16:11.976
lifting for you.

00:16:17.126 --> 00:16:18.176
And this is what it can look

00:16:18.176 --> 00:16:18.416
like.

00:16:19.986 --> 00:16:21.006
Note how the thumbnail

00:16:21.006 --> 00:16:22.916
transitions into the full-screen

00:16:22.916 --> 00:16:23.896
Quick Look preview.

00:16:26.126 --> 00:16:27.716
All right now it's time for a

00:16:27.716 --> 00:16:29.206
demo in which we would like to

00:16:29.206 --> 00:16:30.646
show you what we've just

00:16:30.646 --> 00:16:31.016
covered.

00:16:33.156 --> 00:16:35.666
Okay, here's an iOS project and

00:16:35.666 --> 00:16:37.226
instead of talking about it

00:16:37.226 --> 00:16:38.696
let's just press the play button

00:16:38.906 --> 00:16:40.016
to see what we've already

00:16:40.016 --> 00:16:41.546
prepared and what we are dealing

00:16:41.546 --> 00:16:41.926
with here.

00:16:51.046 --> 00:16:51.926
We are calling this Wildlife

00:16:51.926 --> 00:16:53.766
Explorer and it's a very simple

00:16:53.766 --> 00:16:53.976
app.

00:16:54.766 --> 00:16:56.516
It basically displays a grid of

00:16:56.516 --> 00:16:58.766
photos and each of these photos

00:16:58.766 --> 00:17:00.516
that we see here acts as a

00:17:00.516 --> 00:17:02.276
thumbnail for what's behind it

00:17:02.276 --> 00:17:03.126
once you tap it.

00:17:03.256 --> 00:17:05.496
For example, tapping the

00:17:05.496 --> 00:17:07.286
elephant should show a large

00:17:07.286 --> 00:17:08.866
photo of the elephant in full

00:17:08.866 --> 00:17:11.826
screen and tapping the giraffe

00:17:12.066 --> 00:17:13.945
should preview an entire PDF

00:17:13.945 --> 00:17:15.715
about all sorts of giraffes.

00:17:17.215 --> 00:17:18.906
Right now we can't do anything

00:17:18.906 --> 00:17:20.445
else than just looking at it,

00:17:21.156 --> 00:17:23.126
tapping won't do anything yet so

00:17:23.126 --> 00:17:23.806
let's fix this.

00:17:28.306 --> 00:17:30.406
Now this application is fairly

00:17:30.406 --> 00:17:31.376
simply structured.

00:17:32.546 --> 00:17:33.916
For displaying the grid of

00:17:33.916 --> 00:17:35.166
photos we use a

00:17:35.166 --> 00:17:36.356
CollectionViewController.

00:17:38.886 --> 00:17:41.686
When initializing it we obtain a

00:17:41.686 --> 00:17:43.996
list of URLs of documents that

00:17:43.996 --> 00:17:45.656
are bundled with the application

00:17:45.656 --> 00:17:46.776
like the elephant we've just

00:17:46.776 --> 00:17:46.946
seen.

00:17:51.196 --> 00:17:53.276
We use that list to initialize

00:17:53.276 --> 00:17:54.866
what we call a document data

00:17:54.866 --> 00:17:55.396
source.

00:17:56.666 --> 00:17:58.626
This object serves as the model

00:17:58.626 --> 00:17:59.966
for the collection view in the

00:17:59.966 --> 00:18:01.296
implementation of the

00:18:01.296 --> 00:18:03.506
UICollectionViewDataSource

00:18:03.506 --> 00:18:03.976
protocol.

00:18:12.106 --> 00:18:13.896
Here we return the number of

00:18:13.896 --> 00:18:15.696
documents we have just gathered

00:18:16.096 --> 00:18:17.896
and then create a cell for each

00:18:17.896 --> 00:18:19.316
of the documents with a

00:18:19.316 --> 00:18:20.896
thumbnail as the image of the

00:18:20.896 --> 00:18:22.076
cell respectively.

00:18:22.526 --> 00:18:25.756
And that's pretty much the core

00:18:25.756 --> 00:18:27.166
of the application so far.

00:18:28.266 --> 00:18:29.736
Now let's add what we've talked

00:18:29.736 --> 00:18:30.476
about before.

00:18:31.216 --> 00:18:32.786
When tapping a cell we would

00:18:32.786 --> 00:18:34.246
like to show Quick Look with the

00:18:34.246 --> 00:18:35.146
right document.

00:18:36.286 --> 00:18:37.886
We've already made sure that we

00:18:37.886 --> 00:18:39.196
have a method that is called

00:18:39.196 --> 00:18:40.856
when the user has just tapped a

00:18:40.856 --> 00:18:40.966
cell.

00:18:47.056 --> 00:18:48.676
To show Quick Look we create a

00:18:48.676 --> 00:18:50.896
new QLPreviewController in here

00:18:51.286 --> 00:18:51.976
and configure it.

00:19:03.396 --> 00:19:05.796
We create a new controller, we

00:19:05.796 --> 00:19:07.426
assign the document data source

00:19:07.426 --> 00:19:09.676
to it as the data source and

00:19:09.856 --> 00:19:11.446
then make sure Quick Look shows

00:19:11.446 --> 00:19:12.936
the correct preview when it's

00:19:12.936 --> 00:19:15.016
presented by setting the right

00:19:15.116 --> 00:19:15.976
CurrentPreviewItemIndex.

00:19:20.056 --> 00:19:22.316
Great, now Xcode is already

00:19:22.316 --> 00:19:23.986
complaining about our new code,

00:19:23.986 --> 00:19:25.486
it doesn't know

00:19:25.486 --> 00:19:27.106
QLPreviewController yet.

00:19:27.826 --> 00:19:29.106
We need to import Quick Look

00:19:29.106 --> 00:19:31.396
first and therefore we return to

00:19:31.396 --> 00:19:32.666
the top of the file and import

00:19:32.716 --> 00:19:32.976
Quick Look.

00:19:44.046 --> 00:19:46.456
Done. The next thing Xcode

00:19:46.456 --> 00:19:47.946
complains about is the data

00:19:47.946 --> 00:19:48.446
source.

00:19:49.166 --> 00:19:50.766
The document data source that we

00:19:50.766 --> 00:19:52.016
assigned to the new preview

00:19:52.016 --> 00:19:53.556
controller doesn't seem to

00:19:53.556 --> 00:19:54.416
conform to the

00:19:54.416 --> 00:19:56.226
QLPreviewController data source

00:19:56.226 --> 00:19:57.946
protocol yet which we have

00:19:57.946 --> 00:19:58.946
talked about earlier.

00:20:00.656 --> 00:20:02.766
To fix this let's switch to the

00:20:02.766 --> 00:20:04.366
implementation of the document

00:20:04.366 --> 00:20:04.976
data source.

00:20:10.246 --> 00:20:11.606
The document data source is a

00:20:11.606 --> 00:20:13.486
very simple kind of object, it

00:20:13.576 --> 00:20:15.926
simply owns an area of URLs so

00:20:15.926 --> 00:20:16.246
far.

00:20:17.256 --> 00:20:18.286
We need to add the

00:20:18.286 --> 00:20:20.086
QLPreviewController data source

00:20:20.086 --> 00:20:21.646
protocol to the list of

00:20:21.646 --> 00:20:23.206
protocols that this class

00:20:23.206 --> 00:20:23.936
implements.

00:20:33.246 --> 00:20:34.566
Next, we implement the missing

00:20:34.566 --> 00:20:34.956
methods.

00:20:45.096 --> 00:20:46.456
As you can see the way we use

00:20:46.456 --> 00:20:48.376
the document data source here is

00:20:48.376 --> 00:20:50.216
very similar to the way we use

00:20:50.216 --> 00:20:51.326
it for the collection view.

00:20:51.586 --> 00:20:54.066
In the numberOfPreviewItems

00:20:54.066 --> 00:20:56.046
method we return the number of

00:20:56.046 --> 00:20:57.516
URLs that we have gathered

00:20:57.516 --> 00:20:58.986
before from our documents

00:20:58.986 --> 00:20:59.326
folder.

00:20:59.806 --> 00:21:03.626
And then Quick Look asks for the

00:21:03.626 --> 00:21:06.126
individual QLPreviewItems and we

00:21:06.126 --> 00:21:08.146
return the right URL referenced

00:21:08.146 --> 00:21:08.896
by the index.

00:21:13.066 --> 00:21:14.106
Great, the data source has been

00:21:14.106 --> 00:21:15.866
properly set up so we can go

00:21:15.866 --> 00:21:17.496
ahead and actually present the

00:21:17.496 --> 00:21:18.416
preview controller.

00:21:19.456 --> 00:21:20.836
Therefore, we return to the

00:21:20.836 --> 00:21:23.036
didTapCollectionCell method and

00:21:23.036 --> 00:21:23.976
add the missing method call.

00:21:34.046 --> 00:21:34.886
Let's check out how this looks

00:21:34.886 --> 00:21:34.976
like.

00:21:46.046 --> 00:21:47.456
All right we are back in grid

00:21:47.666 --> 00:21:49.516
and now when tapping a cell

00:21:49.846 --> 00:21:51.766
Quick Look appears displaying

00:21:51.766 --> 00:21:53.186
the right document in full

00:21:53.186 --> 00:21:53.656
screen.

00:21:55.326 --> 00:21:57.406
Note how easy it is to present

00:21:57.406 --> 00:21:59.936
images and even PDFs in full

00:21:59.936 --> 00:22:01.826
screen with all of the gestures

00:22:01.826 --> 00:22:03.346
that you are used to.

00:22:04.126 --> 00:22:06.256
We can zoom into the document

00:22:06.606 --> 00:22:09.276
with two fingers, we can select

00:22:09.276 --> 00:22:11.576
text, and even copy it.

00:22:13.846 --> 00:22:16.356
And once we are done we can use

00:22:16.356 --> 00:22:18.706
a pinch gesture to dismiss Quick

00:22:18.706 --> 00:22:18.976
Look again.

00:22:23.046 --> 00:22:24.416
So what we are using here to

00:22:24.416 --> 00:22:25.976
present Quick Look is a modal

00:22:25.976 --> 00:22:26.986
presentation style.

00:22:27.946 --> 00:22:29.406
As I've explained earlier, we

00:22:29.406 --> 00:22:31.156
can also present Quick Look with

00:22:31.156 --> 00:22:32.136
a push animation.

00:22:33.426 --> 00:22:35.026
Therefore, we simply tell the

00:22:35.026 --> 00:22:36.556
application's navigation

00:22:36.556 --> 00:22:38.206
controller to present the

00:22:38.206 --> 00:22:40.116
preview controller by pushing it

00:22:40.116 --> 00:22:40.976
on top of the current one.

00:22:52.106 --> 00:22:52.786
Let's take a look.

00:23:05.076 --> 00:23:06.336
As you can see, this is a

00:23:06.336 --> 00:23:07.896
different style of presenting

00:23:07.896 --> 00:23:09.506
Quick Look and it works just as

00:23:09.506 --> 00:23:10.976
fine as presenting it modally.

00:23:17.066 --> 00:23:19.226
Okay Quick Look works and now

00:23:19.226 --> 00:23:20.356
the last thing I would like to

00:23:20.356 --> 00:23:22.126
show you is how to use the Quick

00:23:22.126 --> 00:23:23.766
Look delegate in order to get a

00:23:23.766 --> 00:23:25.576
beautiful zoom animation when

00:23:25.576 --> 00:23:28.616
tapping a thumbnail in our grid.

00:23:28.706 --> 00:23:30.456
First, we switch back to the

00:23:30.456 --> 00:23:32.286
modal presentation style which

00:23:32.286 --> 00:23:33.276
is needed for the zoom

00:23:33.276 --> 00:23:33.976
transition to work.

00:23:39.046 --> 00:23:40.286
Then we need to assign a

00:23:40.286 --> 00:23:41.496
delegate to the preview

00:23:41.496 --> 00:23:43.706
controller and in this case, we

00:23:43.706 --> 00:23:44.496
assign self.

00:23:54.046 --> 00:23:55.646
However, self doesn't conform to

00:23:55.646 --> 00:23:57.536
the QLPreviewController delegate

00:23:57.536 --> 00:23:59.506
yet, so let's add it to the list

00:23:59.506 --> 00:23:59.976
of protocols.

00:24:12.236 --> 00:24:14.556
And now as the last step we

00:24:14.556 --> 00:24:16.446
implement the magic method which

00:24:16.446 --> 00:24:18.156
tells Quick Look which view to

00:24:18.156 --> 00:24:20.176
use as the source for the zoom

00:24:20.176 --> 00:24:22.156
animation when it is about to be

00:24:22.156 --> 00:24:22.756
presented.

00:24:34.366 --> 00:24:36.506
As you can see, we are using the

00:24:36.506 --> 00:24:38.816
image view of the most recently

00:24:38.816 --> 00:24:40.356
tapped cell which we keep a

00:24:40.356 --> 00:24:42.356
reference of and return it to

00:24:42.356 --> 00:24:42.896
Quick Look.

00:24:44.196 --> 00:24:45.646
That's literally all we have to

00:24:45.646 --> 00:24:47.316
do to make the zoom animation

00:24:47.316 --> 00:24:47.666
work.

00:24:48.066 --> 00:24:49.836
Quick Look will call this method

00:24:49.836 --> 00:24:51.626
when it's presented and when

00:24:51.626 --> 00:24:52.416
it's dismissed.

00:24:52.996 --> 00:24:53.916
Let's try it out.

00:25:03.046 --> 00:25:04.506
Now when we tap a thumbnail

00:25:05.116 --> 00:25:06.576
notice how the thumbnail is

00:25:06.576 --> 00:25:07.976
animating to the full-screen

00:25:07.976 --> 00:25:08.446
preview.

00:25:09.756 --> 00:25:11.646
Also observe no matter how we

00:25:11.646 --> 00:25:13.726
dismiss the preview it

00:25:13.766 --> 00:25:15.406
beautifully transitions back to

00:25:15.406 --> 00:25:15.946
the right origin.

00:25:22.306 --> 00:25:24.586
Great, that's it for the demo,

00:25:25.206 --> 00:25:26.106
back to the slides.

00:25:26.616 --> 00:25:28.116
And now I would like to hand it

00:25:28.116 --> 00:25:30.036
over to Maxime who is going to

00:25:30.036 --> 00:25:31.996
tell you all about previews and

00:25:31.996 --> 00:25:33.076
thumbnail extensions.

00:25:34.336 --> 00:25:35.506
>> Thank you Raffael.

00:25:36.186 --> 00:25:37.916
So as you have seen, Quick Look

00:25:37.996 --> 00:25:39.486
makes it super easy to add a

00:25:39.486 --> 00:25:41.036
powerful previewing feature to

00:25:41.036 --> 00:25:41.506
your app.

00:25:42.196 --> 00:25:43.756
But there is more to talk about.

00:25:44.486 --> 00:25:45.556
The first thing I want to show

00:25:45.556 --> 00:25:47.326
you is how to extend Quick

00:25:47.326 --> 00:25:48.826
Look's previewing capabilities

00:25:48.896 --> 00:25:50.766
by providing a preview for your

00:25:50.766 --> 00:25:51.676
own file format.

00:25:54.006 --> 00:25:55.476
We have listed the file types

00:25:55.476 --> 00:25:56.636
that Quick Look supports

00:25:56.636 --> 00:25:57.536
natively before.

00:25:59.216 --> 00:26:02.936
However, since iOS 11 this list

00:26:03.046 --> 00:26:04.836
can be extended by bundling a

00:26:04.836 --> 00:26:06.646
preview extension with your iOS

00:26:06.646 --> 00:26:08.886
app which allows you as a

00:26:08.886 --> 00:26:10.876
developer to provide previews

00:26:10.876 --> 00:26:12.326
for your custom file formats.

00:26:12.636 --> 00:26:15.666
You should provide a preview if

00:26:15.666 --> 00:26:16.886
you're in a custom fil format

00:26:17.166 --> 00:26:18.536
and you'd like this one to be

00:26:18.536 --> 00:26:20.436
previewed by Quick Look just

00:26:20.436 --> 00:26:22.466
like any other native type.

00:26:23.656 --> 00:26:25.146
File types that are meant to be

00:26:25.146 --> 00:26:27.126
shared are usually good types to

00:26:27.126 --> 00:26:28.656
create an extension for,

00:26:29.576 --> 00:26:31.046
especially if you want your

00:26:31.046 --> 00:26:32.886
users to preview the content

00:26:32.936 --> 00:26:35.106
easily after receiving a file in

00:26:35.106 --> 00:26:37.516
an app like Mail, Messages or in

00:26:37.516 --> 00:26:38.256
a Note for instance.

00:26:38.766 --> 00:26:40.536
And then everything works

00:26:40.536 --> 00:26:43.176
together and your application

00:26:43.176 --> 00:26:44.096
that is using a

00:26:44.096 --> 00:26:45.896
QLPreviewController with a file

00:26:46.196 --> 00:26:48.026
that is not natively supported

00:26:48.476 --> 00:26:49.806
will benefit from your preview

00:26:49.806 --> 00:26:50.326
extension.

00:26:52.606 --> 00:26:54.796
Here is an example of what you

00:26:54.796 --> 00:26:56.456
can achieve thanks to a preview

00:26:56.456 --> 00:26:56.916
extension.

00:26:57.346 --> 00:26:59.876
We have built a sample app that

00:26:59.876 --> 00:27:01.386
can be downloaded from Apple's

00:27:01.386 --> 00:27:02.956
website that allows one to

00:27:02.956 --> 00:27:05.316
create customized and interact

00:27:05.316 --> 00:27:05.936
with Particles.

00:27:07.086 --> 00:27:08.406
Since we wanted to share our

00:27:08.406 --> 00:27:11.286
cool Particles to other users we

00:27:11.286 --> 00:27:13.956
created a new file format, the

00:27:13.956 --> 00:27:16.636
particles file format.

00:27:16.636 --> 00:27:18.076
Each file represents a particle

00:27:18.076 --> 00:27:20.316
system and you can configure all

00:27:20.316 --> 00:27:22.856
sorts of [inaudible] systems.

00:27:24.466 --> 00:27:26.956
Now let's say you share a

00:27:27.296 --> 00:27:28.706
particles file with your

00:27:28.706 --> 00:27:29.146
friends.

00:27:30.026 --> 00:27:31.656
When previewing them in messages

00:27:31.786 --> 00:27:33.106
or as an email attachment for

00:27:33.106 --> 00:27:34.906
instance [inaudible] get to see

00:27:35.206 --> 00:27:36.996
is a blank screen, that is

00:27:36.996 --> 00:27:40.256
certainly not what we want.

00:27:40.416 --> 00:27:42.176
But by implementing your preview

00:27:42.176 --> 00:27:43.696
extension for our particles file

00:27:43.696 --> 00:27:45.196
format it will replace that

00:27:45.196 --> 00:27:46.476
blank screen with a beautifully

00:27:46.476 --> 00:27:47.926
rendered three-dimensional

00:27:48.236 --> 00:27:49.586
interactive particle system.

00:27:49.586 --> 00:27:49.976
How good is that?

00:27:54.046 --> 00:27:55.136
I am sure you now want to learn

00:27:55.346 --> 00:27:56.546
how you can make your own

00:27:56.546 --> 00:27:58.016
preview extension for your file

00:27:58.016 --> 00:27:58.586
formats.

00:28:00.276 --> 00:28:02.666
First, you will need to add a

00:28:02.666 --> 00:28:04.556
new target in your existing

00:28:04.556 --> 00:28:05.696
application project.

00:28:06.786 --> 00:28:08.736
To do so you will have to select

00:28:08.736 --> 00:28:10.116
the Quick Look Preview Extension

00:28:10.156 --> 00:28:13.986
template in Xcode.

00:28:13.986 --> 00:28:16.486
After that several files will be

00:28:16.486 --> 00:28:17.956
generated for you by Xcode.

00:28:19.226 --> 00:28:20.936
The PreviewViewController class

00:28:20.936 --> 00:28:22.426
with a basic implementation.

00:28:23.296 --> 00:28:25.186
This is where you will have to

00:28:25.186 --> 00:28:26.476
add code for your preview.

00:28:27.066 --> 00:28:29.816
The storyboard that has the

00:28:29.816 --> 00:28:31.646
PreviewViewController as its

00:28:31.646 --> 00:28:32.216
entry point.

00:28:32.686 --> 00:28:35.696
And an Info.plist that's the

00:28:35.696 --> 00:28:36.966
first thing you will want to

00:28:37.436 --> 00:28:37.626
edit.

00:28:37.626 --> 00:28:42.586
Let's take a closer look at it.

00:28:42.796 --> 00:28:45.066
To get started the attribute we

00:28:45.066 --> 00:28:46.776
are the most interested in is

00:28:46.776 --> 00:28:48.836
named QLSupportedContentTypes.

00:28:49.706 --> 00:28:50.786
This is the one that is

00:28:50.816 --> 00:28:52.256
highlighted on the screen shot.

00:28:53.706 --> 00:28:55.066
This is an array in which you

00:28:55.066 --> 00:28:56.346
list all the file types for

00:28:56.346 --> 00:28:57.756
which your extension can provide

00:28:57.756 --> 00:28:58.136
previews.

00:28:59.366 --> 00:29:00.946
Please note that you can only

00:29:00.946 --> 00:29:02.716
provide previews for UTIs you

00:29:02.756 --> 00:29:03.996
own and export.

00:29:05.356 --> 00:29:07.146
When Quick Look can't natively

00:29:07.146 --> 00:29:09.246
preview a file type it will make

00:29:09.246 --> 00:29:10.826
use of the content types added

00:29:10.826 --> 00:29:13.986
to this array and select an

00:29:13.986 --> 00:29:15.306
extension that can handle

00:29:15.506 --> 00:29:16.106
previewing it.

00:29:16.906 --> 00:29:18.246
So make sure to list all file

00:29:18.246 --> 00:29:19.426
types [inaudible] extension

00:29:19.426 --> 00:29:19.946
support.

00:29:21.056 --> 00:29:22.526
Let's see how we achieve this

00:29:22.746 --> 00:29:24.176
with our Particles app.

00:29:24.426 --> 00:29:29.576
As you can see Particles

00:29:29.576 --> 00:29:30.896
declares and exports a new

00:29:31.276 --> 00:29:32.176
particles file type.

00:29:32.326 --> 00:29:34.806
Its identifier is [inaudible]

00:29:35.486 --> 00:29:37.986
example.applesample

00:29:37.986 --> 00:29:39.996
code.particles.particles.

00:29:41.296 --> 00:29:43.006
Since we wanted our extension to

00:29:43.006 --> 00:29:45.196
support particles previews we

00:29:45.196 --> 00:29:47.016
added this identifier to the

00:29:47.016 --> 00:29:48.836
QLSupportedContentTypes of its

00:29:48.836 --> 00:29:49.566
Info.plist.

00:29:50.256 --> 00:29:52.196
By the way, if you're interested

00:29:52.196 --> 00:29:54.756
in UTIs you should check out the

00:29:54.756 --> 00:29:56.646
Documents Manager session of

00:29:56.646 --> 00:29:56.956
this year.

00:30:00.376 --> 00:30:01.696
When a new preview has to be

00:30:01.696 --> 00:30:03.066
generated for a file type

00:30:03.066 --> 00:30:04.096
[inaudible] Quick Look will

00:30:04.776 --> 00:30:06.156
create a new

00:30:06.156 --> 00:30:07.986
PreviewViewController instance

00:30:08.456 --> 00:30:09.026
and calls it

00:30:09.086 --> 00:30:10.636
preparePreviewOfFile at URL

00:30:10.636 --> 00:30:12.056
completionHandler method.

00:30:14.976 --> 00:30:16.716
This method is part of the

00:30:16.716 --> 00:30:18.876
QLPreviewingController protocol

00:30:19.216 --> 00:30:20.826
and is mandatory to provide

00:30:20.826 --> 00:30:22.296
previews for a file.

00:30:23.156 --> 00:30:25.296
Quick Look will display

00:30:25.336 --> 00:30:26.116
[inaudible] while waiting for

00:30:26.116 --> 00:30:27.486
your extension to be ready to

00:30:27.486 --> 00:30:28.266
display the preview.

00:30:28.756 --> 00:30:31.026
All you have to take care of is

00:30:31.026 --> 00:30:32.116
loading the contents of your

00:30:32.116 --> 00:30:34.276
preview and calling the

00:30:34.276 --> 00:30:36.196
completion handler as soon as

00:30:36.196 --> 00:30:38.886
your extension is ready.

00:30:39.026 --> 00:30:40.216
All right that's it for the

00:30:40.216 --> 00:30:42.676
preview extensions, let's go one

00:30:42.676 --> 00:30:43.216
step further.

00:30:44.016 --> 00:30:46.046
Similarly to previews you can

00:30:46.046 --> 00:30:47.266
also provide thumbnails for

00:30:47.266 --> 00:30:48.926
files of your own file format.

00:30:49.316 --> 00:30:51.506
Let's talk about Quick Look

00:30:51.506 --> 00:30:52.356
thumbnail extensions.

00:30:52.916 --> 00:30:56.776
A thumbnail is an image of a

00:30:56.776 --> 00:30:58.806
limited size that represents the

00:30:58.806 --> 00:31:00.806
contents of a file.

00:31:01.116 --> 00:31:03.206
There is throughout iOS and

00:31:03.206 --> 00:31:05.856
macOS to allow users to identify

00:31:05.856 --> 00:31:08.216
files officially without having

00:31:08.216 --> 00:31:09.316
to open them to the file

00:31:09.316 --> 00:31:09.876
contents.

00:31:11.366 --> 00:31:12.796
For instance you can see on the

00:31:12.796 --> 00:31:15.016
screenshot how iOS makes uses of

00:31:15.016 --> 00:31:17.706
them in the file tap.

00:31:17.706 --> 00:31:19.326
iOS can generate thumbnails for

00:31:19.326 --> 00:31:21.356
different file types, images,

00:31:21.356 --> 00:31:24.426
videos, PDFs, text files, and

00:31:24.426 --> 00:31:25.266
USDZ files.

00:31:26.126 --> 00:31:28.276
Now you may have noticed the

00:31:28.276 --> 00:31:29.966
blank icons on the left.

00:31:31.186 --> 00:31:32.816
This is because these are

00:31:32.956 --> 00:31:35.726
particles files and iOS doesn't

00:31:35.726 --> 00:31:37.346
know how to generate thumbnails

00:31:37.346 --> 00:31:38.466
for this file natively.

00:31:38.796 --> 00:31:41.786
But don't worry we are going to

00:31:41.786 --> 00:31:43.756
show you how to create a

00:31:43.756 --> 00:31:45.376
thumbnail extension that you can

00:31:45.376 --> 00:31:46.746
use to improve this situation

00:31:46.746 --> 00:31:47.986
for your custom file types

00:31:47.986 --> 00:31:48.296
easily.

00:31:49.296 --> 00:31:50.996
Look at how great these

00:31:50.996 --> 00:31:52.516
thumbnails look for particles

00:31:52.516 --> 00:31:54.346
files thanks to the thumbnail

00:31:54.346 --> 00:31:55.876
extension we have added to our

00:31:55.876 --> 00:31:55.976
app.

00:32:01.166 --> 00:32:02.426
Thumbnails provided by this

00:32:02.426 --> 00:32:04.906
extension appear in the Files

00:32:04.906 --> 00:32:06.416
app, as well as in any

00:32:06.416 --> 00:32:07.616
UIDocumentBrowswer

00:32:07.616 --> 00:32:09.526
ViewController-based app.

00:32:10.576 --> 00:32:12.256
They also appear in the Quick

00:32:12.256 --> 00:32:14.076
Look list, that you can see when

00:32:14.076 --> 00:32:15.746
tapping the list button when

00:32:15.746 --> 00:32:17.106
previewing multiple files in

00:32:17.106 --> 00:32:17.546
Quick Look.

00:32:17.546 --> 00:32:20.166
If you have custom file types

00:32:20.166 --> 00:32:22.136
that the user can share and

00:32:22.136 --> 00:32:24.276
interact with you will likely

00:32:24.276 --> 00:32:25.396
want to provide a certain

00:32:25.396 --> 00:32:26.416
extension with your app.

00:32:27.166 --> 00:32:28.786
Let's now see how you can do so.

00:32:31.796 --> 00:32:33.436
Creating a thumbnail extension

00:32:33.466 --> 00:32:34.996
is as just creating a preview

00:32:34.996 --> 00:32:35.466
extension.

00:32:36.856 --> 00:32:39.626
To do so add a new target in

00:32:39.626 --> 00:32:40.936
your existing application

00:32:40.936 --> 00:32:42.536
project and select the Thumbnail

00:32:42.536 --> 00:32:43.986
Extension template.

00:32:46.326 --> 00:32:48.226
Xcode will generate for you two

00:32:48.226 --> 00:32:50.126
files, the ThumbnailProvider

00:32:50.126 --> 00:32:51.316
class with a basic

00:32:51.316 --> 00:32:52.046
implementation.

00:32:53.326 --> 00:32:54.716
This is where you will have to

00:32:54.716 --> 00:32:56.296
add the code that takes care of

00:32:56.296 --> 00:32:57.456
generating thumbnails.

00:32:58.476 --> 00:33:00.596
And an Info.plist this is just

00:33:00.596 --> 00:33:01.806
like for the preview extension,

00:33:02.356 --> 00:33:03.856
the first thing you will have to

00:33:03.856 --> 00:33:05.266
edit after creating your

00:33:05.266 --> 00:33:05.796
extension.

00:33:10.046 --> 00:33:11.296
As in the Info.plist of the

00:33:11.296 --> 00:33:12.926
preview extensions the

00:33:12.926 --> 00:33:14.096
Info.plist of the thumbnail

00:33:14.096 --> 00:33:15.406
extensions have a

00:33:15.406 --> 00:33:17.326
QLSupportedContentTypes array

00:33:17.936 --> 00:33:19.336
that needs to be filled with the

00:33:19.336 --> 00:33:20.766
content types that your

00:33:20.856 --> 00:33:23.096
extension supports.

00:33:24.096 --> 00:33:26.866
So make sure to include in

00:33:26.866 --> 00:33:29.086
QLSupportedContentTypes all the

00:33:29.086 --> 00:33:30.756
content types for which your

00:33:30.756 --> 00:33:32.076
extension can generate

00:33:32.076 --> 00:33:32.626
thumbnails.

00:33:33.766 --> 00:33:35.646
After setting up your extension

00:33:35.836 --> 00:33:37.466
you will be able to start

00:33:37.466 --> 00:33:38.336
implementing your

00:33:38.476 --> 00:33:40.206
QLThumbnailProvider subclass.

00:33:40.596 --> 00:33:42.506
You have two ways to provide a

00:33:42.506 --> 00:33:44.976
thumbnail for a file.

00:33:45.116 --> 00:33:46.396
You can [inaudible] use it

00:33:46.936 --> 00:33:49.336
CoreGraphics or UIKit

00:33:49.336 --> 00:33:52.266
[inaudible] techniques or you

00:33:52.266 --> 00:33:54.286
can return an image file URL.

00:33:55.536 --> 00:33:59.296
You will have to override the

00:33:59.296 --> 00:34:00.866
provideThumbnail for request

00:34:00.866 --> 00:34:02.316
handler method in your

00:34:02.536 --> 00:34:04.326
QLThumbnailProvider subclass.

00:34:05.546 --> 00:34:07.816
We extensively covered this part

00:34:07.816 --> 00:34:09.795
of the Quick Look API in your

00:34:09.826 --> 00:34:14.376
session for WWDC 2017, Building

00:34:14.376 --> 00:34:16.106
Great Document-Based Apps in iOS

00:34:16.106 --> 00:34:16.556
11.

00:34:17.076 --> 00:34:18.166
So if you'd like to provide

00:34:18.166 --> 00:34:19.485
thumbnails for your custom file

00:34:19.485 --> 00:34:21.966
types I highly encourage you to

00:34:21.966 --> 00:34:23.666
check it out.

00:34:23.936 --> 00:34:25.485
In a nutshell, you will need to

00:34:25.485 --> 00:34:26.936
make use of the parameters

00:34:26.936 --> 00:34:28.166
contained in the

00:34:28.275 --> 00:34:29.866
QLFileThumbnailRequest of the

00:34:29.866 --> 00:34:30.286
method.

00:34:31.856 --> 00:34:34.126
The URL of the file, the maximum

00:34:34.126 --> 00:34:35.176
and minimum sizes of the

00:34:35.176 --> 00:34:37.295
thumbnail, and its scale.

00:34:39.596 --> 00:34:41.565
For each thumbnail request the

00:34:41.565 --> 00:34:43.646
API expects you to create a

00:34:43.646 --> 00:34:45.315
QLThumbnailReply object.

00:34:45.916 --> 00:34:48.025
This object will have to take

00:34:48.025 --> 00:34:49.335
care of generating the

00:34:49.335 --> 00:34:49.886
thumbnail.

00:34:50.826 --> 00:34:51.886
You will have to provide it to

00:34:51.886 --> 00:34:53.116
Quick Look through the

00:34:53.116 --> 00:34:55.286
completion handler of the

00:34:57.456 --> 00:34:57.636
method.

00:34:57.766 --> 00:34:59.166
All right let's see all of this

00:34:59.166 --> 00:35:00.306
in action it's demo time.

00:35:00.806 --> 00:35:03.956
Let's start by taking a look at

00:35:04.096 --> 00:35:05.556
how things look like after

00:35:05.556 --> 00:35:06.866
installing the Particles app

00:35:06.866 --> 00:35:07.986
without any Quick Look

00:35:07.986 --> 00:35:08.566
extension.

00:35:09.556 --> 00:35:11.466
All right we don't have any file

00:35:11.466 --> 00:35:13.686
yet, let's create a new one by

00:35:13.686 --> 00:35:15.056
pressing the + button.

00:35:17.116 --> 00:35:18.686
What you can see here is the

00:35:18.686 --> 00:35:19.686
particle editor.

00:35:20.126 --> 00:35:21.786
Let's create a file particle

00:35:21.786 --> 00:35:23.946
system, we change the color a

00:35:23.946 --> 00:35:25.426
bit, and save the document.

00:35:27.096 --> 00:35:30.336
Well as you can see we don't get

00:35:30.336 --> 00:35:31.716
to see the beautiful particle

00:35:31.716 --> 00:35:33.046
system we just designed.

00:35:33.406 --> 00:35:35.716
[Inaudible] of that by adding a

00:35:35.716 --> 00:35:37.126
thumbnail extension to our

00:35:37.126 --> 00:35:37.716
application.

00:35:38.476 --> 00:35:40.586
Now let's save the file to a

00:35:41.076 --> 00:35:41.966
[inaudible] and see how the

00:35:41.966 --> 00:35:44.046
preview looks like in Quick

00:35:46.816 --> 00:35:46.916
Look.

00:35:47.076 --> 00:35:49.436
All right let's open the file

00:35:49.436 --> 00:35:50.056
format.

00:35:52.316 --> 00:35:54.746
All we see is a blank screen, we

00:35:54.746 --> 00:35:56.246
can do better, let's improve

00:35:56.246 --> 00:35:56.626
this too.

00:35:57.556 --> 00:35:59.066
Let's switch to Xcode and

00:35:59.066 --> 00:36:00.706
implement a preview and a

00:36:00.706 --> 00:36:01.606
thumbnail extension.

00:36:02.826 --> 00:36:04.526
We already have an existing

00:36:04.526 --> 00:36:06.546
project containing the extension

00:36:06.546 --> 00:36:06.926
setup.

00:36:07.956 --> 00:36:09.516
We are going to use these as a

00:36:09.516 --> 00:36:11.036
starting point and add the two

00:36:11.036 --> 00:36:11.736
extensions.

00:36:12.556 --> 00:36:14.266
As mentioned previously we need

00:36:14.266 --> 00:36:16.326
the Info.plist of our extensions

00:36:16.326 --> 00:36:17.936
to be configured so that the

00:36:17.936 --> 00:36:19.436
system knows we are able to

00:36:19.436 --> 00:36:21.196
provide previews and thumbnails

00:36:21.196 --> 00:36:22.316
for particles files.

00:36:23.476 --> 00:36:25.786
So Particles app defines its own

00:36:25.786 --> 00:36:28.236
file format in the exported UTIs

00:36:28.236 --> 00:36:29.576
section of the application

00:36:29.576 --> 00:36:30.076
target.

00:36:30.936 --> 00:36:32.246
We need to configure the

00:36:32.246 --> 00:36:34.256
extensions to use that UTI in

00:36:34.256 --> 00:36:35.156
the Info.plist.

00:36:35.336 --> 00:36:38.676
As you can see the

00:36:38.676 --> 00:36:40.186
QLSupportedContentTypes of the

00:36:40.186 --> 00:36:41.376
Info.plist of the preview

00:36:41.376 --> 00:36:43.346
extension does contain the

00:36:43.346 --> 00:36:44.756
identifier of the UTI of the

00:36:44.756 --> 00:36:45.746
particles file format.

00:36:46.226 --> 00:36:49.606
And this is also the case of the

00:36:49.606 --> 00:36:50.886
Info.plist of the thumbnail

00:36:50.886 --> 00:36:51.446
extension.

00:36:51.966 --> 00:36:54.256
So the only thing left to do is

00:36:54.526 --> 00:36:55.586
to actually implement these

00:36:55.586 --> 00:36:56.226
extensions.

00:36:56.766 --> 00:36:57.716
Let's start with the preview

00:36:57.716 --> 00:36:58.226
extension.

00:36:59.276 --> 00:37:02.296
As mentioned in the presentation

00:37:02.626 --> 00:37:03.796
we need to implement this

00:37:03.796 --> 00:37:05.976
method, preparePreviewOfFile at

00:37:05.976 --> 00:37:07.166
URL completionHandler.

00:37:07.536 --> 00:37:10.506
Our main app Particles already

00:37:10.506 --> 00:37:12.316
has a view controller class

00:37:12.626 --> 00:37:13.686
which [inaudible] the particle

00:37:13.686 --> 00:37:14.526
system on screen.

00:37:15.546 --> 00:37:16.866
We are going to reduce

00:37:16.866 --> 00:37:17.766
[inaudible] controller in our

00:37:17.766 --> 00:37:18.346
extension.

00:37:19.406 --> 00:37:21.126
We are going to create a helper

00:37:21.126 --> 00:37:22.716
method that will take care of

00:37:22.716 --> 00:37:24.176
loading such a view controller

00:37:24.366 --> 00:37:25.826
and adding it to the view

00:37:25.826 --> 00:37:26.316
hierarchy.

00:37:28.046 --> 00:37:30.726
As you can see present

00:37:30.726 --> 00:37:32.156
particleViewController for a

00:37:32.156 --> 00:37:33.656
document simply creates a

00:37:33.656 --> 00:37:35.526
particleViewController and

00:37:35.526 --> 00:37:37.146
passes it to the document it

00:37:37.146 --> 00:37:38.426
received so that the

00:37:38.426 --> 00:37:39.806
particleViewController can

00:37:39.806 --> 00:37:41.566
render the particles that the

00:37:41.566 --> 00:37:42.586
document represents.

00:37:44.126 --> 00:37:45.426
We still need to call this

00:37:45.426 --> 00:37:46.896
method from preparePreviewOfFile

00:37:46.896 --> 00:37:50.286
at URL, so let's do it.

00:37:51.336 --> 00:37:54.136
We first create a document that

00:37:54.136 --> 00:37:55.146
is a subclass of [inaudible]

00:37:55.226 --> 00:37:56.096
document.

00:37:57.136 --> 00:37:59.876
We open it and once it is open

00:37:59.876 --> 00:38:01.846
and usable we call our helper

00:38:01.846 --> 00:38:03.496
method that will displace a

00:38:03.496 --> 00:38:04.566
particleViewController.

00:38:05.696 --> 00:38:08.206
Finally, we may not forget to

00:38:08.206 --> 00:38:09.606
close the completion handler to

00:38:09.606 --> 00:38:11.796
notify Quick Look that our view

00:38:11.796 --> 00:38:13.186
controller is loaded and ready

00:38:13.186 --> 00:38:13.976
to appear on screen.

00:38:15.306 --> 00:38:17.226
Our preview extension is now

00:38:17.226 --> 00:38:17.606
ready.

00:38:18.376 --> 00:38:19.446
Let's implement the thumbnail

00:38:19.446 --> 00:38:19.986
extension.

00:38:21.586 --> 00:38:24.466
All we have to do here is to

00:38:24.466 --> 00:38:26.086
implement the provideThumbnail

00:38:26.086 --> 00:38:27.456
for request handler method.

00:38:28.776 --> 00:38:30.546
So request provides several

00:38:30.546 --> 00:38:32.016
properties that you need to

00:38:32.016 --> 00:38:33.256
consider when rendering a

00:38:33.256 --> 00:38:33.686
thumbnail.

00:38:35.886 --> 00:38:37.696
In this example we will make use

00:38:37.696 --> 00:38:39.886
of the file URL as the maximum

00:38:39.886 --> 00:38:40.726
size of the thumbnail.

00:38:41.966 --> 00:38:43.926
Note that there are also a scale

00:38:43.926 --> 00:38:45.826
and minimum size properties, but

00:38:45.926 --> 00:38:47.056
in the case of our particle

00:38:47.056 --> 00:38:48.316
system we don't use them.

00:38:49.716 --> 00:38:51.496
We then create a drawing block

00:38:51.826 --> 00:38:52.896
that we are going to provide

00:38:52.896 --> 00:38:54.386
later [inaudible] completion

00:38:54.386 --> 00:38:54.676
block.

00:38:56.596 --> 00:38:58.836
In this case, we call the helper

00:38:58.836 --> 00:39:00.476
method that will take care of

00:39:00.476 --> 00:39:01.246
drawing the thumbnail,

00:39:02.056 --> 00:39:03.606
drawThumbnail for fileURL,

00:39:04.126 --> 00:39:04.866
contextSize.

00:39:05.336 --> 00:39:06.676
We are going to implement this

00:39:06.676 --> 00:39:08.136
helper method in a second.

00:39:08.706 --> 00:39:10.296
You may have noticed that our

00:39:10.296 --> 00:39:11.716
drawing block returns a Boolean,

00:39:12.576 --> 00:39:13.926
this flag indicates if the

00:39:13.926 --> 00:39:15.196
thumbnail was successfully drawn

00:39:15.196 --> 00:39:17.266
or not once this block will be

00:39:17.266 --> 00:39:18.376
used to generate the thumbnail.

00:39:19.396 --> 00:39:21.376
Let's now see how we draw our

00:39:21.376 --> 00:39:22.236
particle thumbnails.

00:39:24.316 --> 00:39:26.746
To draw the thumbnails we make

00:39:26.746 --> 00:39:29.316
use of the URL of the file and

00:39:29.316 --> 00:39:30.736
of the size of the context we

00:39:30.736 --> 00:39:31.276
will draw into.

00:39:32.196 --> 00:39:33.856
In this case, we all know the

00:39:33.856 --> 00:39:35.256
maximum size of the thumbnail

00:39:35.256 --> 00:39:37.116
request since we can generate

00:39:37.116 --> 00:39:38.526
particle thumbnails of any size.

00:39:39.376 --> 00:39:41.756
Our method first creates a

00:39:41.756 --> 00:39:43.426
document that represents the

00:39:43.426 --> 00:39:45.776
file and attempts to open it.

00:39:46.226 --> 00:39:48.296
If this fails it returns false

00:39:48.336 --> 00:39:49.506
to indicate that it could not

00:39:49.506 --> 00:39:50.276
generate a thumbnail.

00:39:50.906 --> 00:39:54.066
After opening the file it then

00:39:54.186 --> 00:39:56.036
creates a particleViewController

00:39:56.626 --> 00:39:57.576
that will be used to render the

00:39:57.576 --> 00:39:57.966
particles file.

00:39:59.506 --> 00:40:01.136
Then it takes a snapshot of the

00:40:01.136 --> 00:40:02.666
particleViewController and uses

00:40:02.666 --> 00:40:05.466
it to draw the thumbnail.

00:40:05.506 --> 00:40:06.766
We close the document before

00:40:06.766 --> 00:40:08.196
returning true to indicate that

00:40:08.196 --> 00:40:09.516
we successfully have generated a

00:40:09.516 --> 00:40:09.886
thumbnail.

00:40:11.766 --> 00:40:13.116
Now that we have [inaudible] to

00:40:13.116 --> 00:40:15.736
generate thumbnails we need to

00:40:15.736 --> 00:40:16.736
create our [inaudible] reply.

00:40:17.296 --> 00:40:20.476
We created out of the context

00:40:20.476 --> 00:40:23.076
size, which in this case is the

00:40:23.076 --> 00:40:25.076
maximum size and the drawing

00:40:25.076 --> 00:40:25.486
block.

00:40:27.516 --> 00:40:29.886
Also we have our reply object we

00:40:29.886 --> 00:40:32.346
provided through the completion

00:40:32.346 --> 00:40:33.356
handler [inaudible] parameter,

00:40:33.936 --> 00:40:35.806
which in this case is new since

00:40:35.806 --> 00:40:36.946
we always add them to draw

00:40:36.946 --> 00:40:38.566
thumbnails for particles

00:40:39.676 --> 00:40:40.956
documents.

00:40:40.956 --> 00:40:41.926
If [inaudible] while drawing it

00:40:42.386 --> 00:40:43.486
the thumbnail block success

00:40:43.486 --> 00:40:45.486
value will indicate it, so the

00:40:45.486 --> 00:40:46.866
thumbnail can be discounted

00:40:47.596 --> 00:40:47.736
later.

00:40:48.266 --> 00:40:49.796
We are finally all set, let's

00:40:49.796 --> 00:40:50.916
run this code and see how this

00:40:50.916 --> 00:40:51.326
looks like.

00:40:52.406 --> 00:40:54.726
Wow. We now see a beautiful

00:40:54.726 --> 00:40:56.616
thumbnail for our fire particles

00:40:56.616 --> 00:40:56.926
file.

00:40:57.446 --> 00:40:59.026
This looks so much better than

00:40:59.026 --> 00:40:59.386
before.

00:41:00.426 --> 00:41:02.676
Now let's check our preview

00:41:02.676 --> 00:41:03.296
extension.

00:41:04.966 --> 00:41:05.376
Okay.

00:41:05.376 --> 00:41:07.076
So we are in Note and Quick Look

00:41:07.076 --> 00:41:08.126
is still showing the blank

00:41:08.126 --> 00:41:09.726
screen from the previous time we

00:41:09.726 --> 00:41:11.006
tried to previewing your file.

00:41:11.676 --> 00:41:13.016
Let's dismiss Quick Look and

00:41:13.016 --> 00:41:13.706
present it again.

00:41:16.186 --> 00:41:18.556
We now see our great particles

00:41:18.556 --> 00:41:20.796
preview, note how easy it was to

00:41:20.796 --> 00:41:23.526
make our custom file format

00:41:24.816 --> 00:41:25.186
[inaudible] in iOS.

00:41:25.186 --> 00:41:26.556
And that's it for the demo.

00:41:27.086 --> 00:41:29.116
So what have we learned today?

00:41:29.806 --> 00:41:32.176
First, we have shown you how

00:41:32.326 --> 00:41:33.956
easy it is to add powerful

00:41:33.956 --> 00:41:35.696
previewing capabilities to your

00:41:35.696 --> 00:41:37.306
application by using the

00:41:37.306 --> 00:41:38.956
QLPreviewController of Quick

00:41:38.956 --> 00:41:39.276
Look.

00:41:40.276 --> 00:41:42.926
Then we have taken a look at

00:41:42.926 --> 00:41:44.316
Quick Look's extension points.

00:41:45.196 --> 00:41:47.236
Preview extension allows you to

00:41:47.236 --> 00:41:48.876
have your custom files preview

00:41:48.876 --> 00:41:50.306
by Quick Look just like any

00:41:50.306 --> 00:41:51.386
native file type.

00:41:52.396 --> 00:41:54.326
While the thumbnail extension is

00:41:54.326 --> 00:41:56.136
used to provide thumbnails of

00:41:56.176 --> 00:41:57.976
your own file types to iOS when

00:41:57.976 --> 00:41:58.276
needed.

00:41:59.086 --> 00:42:01.526
Together these extensions make

00:42:01.526 --> 00:42:02.826
your file formats first-class

00:42:02.826 --> 00:42:06.216
citizens in iOS.

00:42:06.356 --> 00:42:08.036
And that's it for this Quick

00:42:08.036 --> 00:42:08.576
Look session.

00:42:09.186 --> 00:42:10.286
If you would like to have more

00:42:10.286 --> 00:42:12.346
information you can check out

00:42:12.346 --> 00:42:13.246
Apple's website.

00:42:13.646 --> 00:42:14.976
Thank you for your attention.