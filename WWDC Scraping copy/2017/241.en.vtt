WEBVTT

00:00:00.506 --> 00:00:06.516
[ Silence ]

00:00:07.516 --> 00:00:18.500
[ Audience Applause ]

00:00:20.276 --> 00:00:20.966
>> Good morning.

00:00:21.016 --> 00:00:22.226
[ Audience Applause ]

00:00:22.226 --> 00:00:22.826
Perfect.

00:00:23.126 --> 00:00:24.216
Thank you very much.

00:00:25.256 --> 00:00:27.136
So, welcome to today's session,

00:00:27.346 --> 00:00:29.226
Introduction to PDFKit on iOS.

00:00:29.886 --> 00:00:31.206
So much has changed in the last

00:00:31.206 --> 00:00:32.566
twelve months, and we are super

00:00:32.566 --> 00:00:34.126
excited to show you all of those

00:00:34.126 --> 00:00:35.186
changes and all of the big

00:00:35.186 --> 00:00:35.906
improvements.

00:00:36.546 --> 00:00:37.886
But before we begin, we should

00:00:37.886 --> 00:00:38.726
introduce ourselves.

00:00:38.756 --> 00:00:39.786
My name is Jeremy Bridon.

00:00:39.786 --> 00:00:40.926
I'm a Software Engineer here at

00:00:40.926 --> 00:00:42.326
Apple working on Core Graphics,

00:00:42.366 --> 00:00:42.696
and --

00:00:42.926 --> 00:00:44.256
>> I'm Nicki Brower, also a

00:00:44.256 --> 00:00:45.616
Software Engineer here at Apple.

00:00:45.876 --> 00:00:46.276
>> Perfect.

00:00:47.606 --> 00:00:47.926
All right.

00:00:48.346 --> 00:00:49.456
So, we've got a lot to talk

00:00:49.456 --> 00:00:50.566
about today, but the very first

00:00:50.566 --> 00:00:51.326
thing we're going to be talking

00:00:51.326 --> 00:00:52.956
about is the PDF file format

00:00:52.956 --> 00:00:53.516
itself.

00:00:54.006 --> 00:00:55.396
We're then going to give a nice

00:00:55.396 --> 00:00:56.826
little discussion over the

00:00:57.116 --> 00:00:59.216
framework itself, followed by a

00:00:59.216 --> 00:01:00.526
discussion on the document, page

00:01:00.526 --> 00:01:02.256
and annotations model of that

00:01:02.256 --> 00:01:02.626
framework.

00:01:03.146 --> 00:01:04.556
We're finally going to do a deep

00:01:04.556 --> 00:01:06.016
dive into annotations.

00:01:06.406 --> 00:01:07.666
So, annotations are something

00:01:07.666 --> 00:01:09.016
that we changed a lot this year

00:01:09.016 --> 00:01:10.016
based on feedback from

00:01:10.016 --> 00:01:10.986
developers like you.

00:01:11.256 --> 00:01:12.396
So, we want to put some extra

00:01:12.396 --> 00:01:13.766
effort into explaining all of

00:01:13.766 --> 00:01:14.386
that this year.

00:01:15.196 --> 00:01:17.196
Finally, for developers, old and

00:01:17.196 --> 00:01:18.326
new, we're going to do a

00:01:18.326 --> 00:01:19.886
discussion on best practices,

00:01:19.926 --> 00:01:21.276
things that we recommend you do.

00:01:22.126 --> 00:01:22.496
All right.

00:01:23.526 --> 00:01:24.976
But first, let's talk about the

00:01:24.976 --> 00:01:27.896
PDF file format spec being 1300

00:01:28.136 --> 00:01:30.446
pages, a totally unacceptable

00:01:30.446 --> 00:01:32.516
number to try and understand how

00:01:32.516 --> 00:01:33.786
the PDF file format works.

00:01:33.786 --> 00:01:35.436
Right? You are app developers.

00:01:35.436 --> 00:01:36.266
We want you to create these

00:01:36.346 --> 00:01:37.906
awesome applications without

00:01:37.906 --> 00:01:39.486
worrying about the details of

00:01:39.566 --> 00:01:40.476
the specification.

00:01:41.036 --> 00:01:42.236
So, we've created an awesome

00:01:42.236 --> 00:01:43.526
framework that gives you the

00:01:43.526 --> 00:01:45.606
power of PDF without you having

00:01:45.606 --> 00:01:46.686
to read all those details.

00:01:47.136 --> 00:01:48.376
We read it, so you don't have

00:01:48.376 --> 00:01:50.026
to, all right.

00:01:50.446 --> 00:01:51.706
So, why use PDFs in the first

00:01:51.706 --> 00:01:52.096
place?

00:01:52.176 --> 00:01:53.946
Well, they're this kind of

00:01:53.946 --> 00:01:55.226
universal business format.

00:01:55.416 --> 00:01:57.106
They're universal and used in

00:01:57.106 --> 00:01:58.666
medical, financial, government,

00:01:58.766 --> 00:02:01.086
and business applications, and

00:02:01.086 --> 00:02:02.136
they're done so because they've

00:02:02.136 --> 00:02:04.076
got these wonderful features,

00:02:04.076 --> 00:02:05.906
features like strong encryption

00:02:06.006 --> 00:02:07.656
or a variable permission model.

00:02:07.956 --> 00:02:09.036
So, some really, really nice

00:02:09.036 --> 00:02:10.205
things directly applicable to

00:02:10.205 --> 00:02:12.076
you as developers, and then also

00:02:12.076 --> 00:02:13.396
for business needs.

00:02:14.166 --> 00:02:15.626
What is also really cool about

00:02:15.626 --> 00:02:17.176
PDF is it's this interactive

00:02:17.176 --> 00:02:17.536
model.

00:02:17.616 --> 00:02:19.056
Right? It's not just a static

00:02:19.096 --> 00:02:20.466
document that you print and you

00:02:20.466 --> 00:02:21.106
forget about it.

00:02:21.106 --> 00:02:22.826
No, it's this document that's

00:02:22.826 --> 00:02:24.606
fully interactive in the digital

00:02:24.606 --> 00:02:25.886
world, so I'm going to give you

00:02:25.886 --> 00:02:26.906
the tools that allow you to

00:02:26.906 --> 00:02:28.346
interact with those documents on

00:02:28.346 --> 00:02:29.016
our platform.

00:02:29.826 --> 00:02:31.706
So, of course, if you do

00:02:31.706 --> 00:02:32.766
interact with the document,

00:02:32.876 --> 00:02:34.326
what's great is what you see in

00:02:34.326 --> 00:02:35.506
the digital world is what you

00:02:35.506 --> 00:02:37.006
eventually see printed out in

00:02:37.006 --> 00:02:37.726
the physical world.

00:02:38.186 --> 00:02:39.926
But it's this really complicated

00:02:39.926 --> 00:02:41.416
spec, and there's so many

00:02:41.416 --> 00:02:42.506
details to worry about.

00:02:42.766 --> 00:02:44.356
How can we kind of handle those

00:02:44.356 --> 00:02:45.056
issues today?

00:02:45.446 --> 00:02:45.776
Nicki?

00:02:46.566 --> 00:02:48.266
>> Yeah. Okay.

00:02:48.516 --> 00:02:49.636
So, we're excited about PDFs,

00:02:49.636 --> 00:02:51.226
and we want to include them in

00:02:51.226 --> 00:02:51.996
our application.

00:02:52.336 --> 00:02:52.936
How do we do that?

00:02:53.596 --> 00:02:54.886
Well, we already have a solution

00:02:54.886 --> 00:02:56.356
for you, and it's a lower level

00:02:56.356 --> 00:02:57.496
solution, and it's using the

00:02:57.496 --> 00:02:58.996
CoreGraphics PDF Framework.

00:02:59.586 --> 00:03:00.756
This framework is great because

00:03:00.756 --> 00:03:02.016
it has a one-to-one drawing

00:03:02.016 --> 00:03:03.366
model with the PDF Spec. It

00:03:03.856 --> 00:03:05.556
allows you to read and write and

00:03:05.556 --> 00:03:07.736
modify your documents, and it

00:03:07.736 --> 00:03:09.146
has a PDF presser and a PDF

00:03:09.146 --> 00:03:10.156
renderer, so you don't have to

00:03:10.156 --> 00:03:10.736
create one.

00:03:11.476 --> 00:03:12.486
There are some limitations

00:03:12.486 --> 00:03:12.716
though.

00:03:13.186 --> 00:03:14.406
Because it doesn't have any

00:03:14.406 --> 00:03:15.926
AppKit primitives, that means

00:03:15.926 --> 00:03:17.076
you don't get any live

00:03:17.076 --> 00:03:18.176
interaction with the document.

00:03:18.676 --> 00:03:20.116
That means no text selection, no

00:03:20.316 --> 00:03:22.346
highlighting search results, no

00:03:22.346 --> 00:03:23.586
interaction with annotations,

00:03:23.586 --> 00:03:24.886
and it doesn't have any

00:03:24.886 --> 00:03:25.856
accessibility support.

00:03:26.216 --> 00:03:27.946
Well, this is where PDFKit comes

00:03:27.946 --> 00:03:28.166
in.

00:03:28.616 --> 00:03:30.516
So, PDFKit is based on the

00:03:30.516 --> 00:03:32.006
CoreGraphics Framework, but it

00:03:32.006 --> 00:03:33.936
also includes AppKit, so you get

00:03:33.936 --> 00:03:35.106
that live interaction with the

00:03:35.106 --> 00:03:35.596
document.

00:03:36.086 --> 00:03:37.926
And now, as of this year, we are

00:03:37.926 --> 00:03:40.166
now on iOS; so not just AppKit

00:03:40.296 --> 00:03:41.356
but UIKit as well.

00:03:41.756 --> 00:03:43.326
So, it's now even easier to

00:03:43.326 --> 00:03:45.456
open, modify, and draw your

00:03:45.456 --> 00:03:46.576
PDFs, but now you do get that

00:03:46.576 --> 00:03:47.226
interaction.

00:03:47.226 --> 00:03:48.806
You can select text; you can

00:03:48.806 --> 00:03:49.906
interact with the annotations,

00:03:50.016 --> 00:03:51.776
and I want to point out that

00:03:51.776 --> 00:03:53.836
this year we have made a great

00:03:53.836 --> 00:03:54.836
effort to improve our

00:03:54.836 --> 00:03:55.836
accessibility support.

00:03:56.426 --> 00:03:58.346
So, by just using PDFKit, you

00:03:58.346 --> 00:04:00.516
get voiceover, text extraction,

00:04:00.786 --> 00:04:01.956
being able to fill out forms,

00:04:01.956 --> 00:04:03.336
all for free.

00:04:04.696 --> 00:04:05.236
All right.

00:04:05.236 --> 00:04:06.016
Let's take a look at where

00:04:06.016 --> 00:04:06.976
PDFKit is today.

00:04:09.876 --> 00:04:11.496
On the Mac, you can see it's

00:04:11.496 --> 00:04:13.246
used by Preview and Safari,

00:04:13.246 --> 00:04:14.846
which are our main clients, but

00:04:14.846 --> 00:04:16.166
we're all over the platform as

00:04:16.166 --> 00:04:16.406
well.

00:04:16.836 --> 00:04:18.946
I just mentioned one, iOS, so

00:04:18.995 --> 00:04:20.326
you can see it's being used by

00:04:20.326 --> 00:04:22.125
iBooks, Mail, and QuickLooks,

00:04:22.125 --> 00:04:23.446
and hopefully we'll be able to

00:04:23.446 --> 00:04:24.546
add a few of your apps to this

00:04:24.546 --> 00:04:25.686
list as well.

00:04:26.676 --> 00:04:27.856
Let's take a look at our

00:04:27.886 --> 00:04:28.836
framework overview.

00:04:29.396 --> 00:04:30.706
So, all of the classes in PDFKit

00:04:30.706 --> 00:04:32.286
can be put into one of three

00:04:32.286 --> 00:04:32.856
categories.

00:04:33.256 --> 00:04:34.716
These are our View, Document,

00:04:34.716 --> 00:04:36.766
and Support categories, and each

00:04:36.766 --> 00:04:38.596
of these have their own list of

00:04:38.596 --> 00:04:39.306
classes as well.

00:04:39.446 --> 00:04:41.536
So, we have our View, which has

00:04:41.536 --> 00:04:43.606
a PDFView and PDFThumbnailView.

00:04:43.906 --> 00:04:45.646
Since we're cross platform, this

00:04:45.646 --> 00:04:47.446
means on Mac OS, it's going to

00:04:47.446 --> 00:04:48.656
be an NSView, and on iOS, a

00:04:48.746 --> 00:04:49.276
UIView.

00:04:49.756 --> 00:04:51.216
For Document, we have

00:04:51.216 --> 00:04:52.436
PDFDocument, Page, and

00:04:52.436 --> 00:04:54.086
Annotation, which we'll go into

00:04:54.086 --> 00:04:54.676
further later.

00:04:55.476 --> 00:04:56.626
But we also have our Support

00:04:56.626 --> 00:04:57.116
classes.

00:04:57.456 --> 00:04:58.326
These are things like

00:04:58.326 --> 00:05:00.646
PDFSelection to PDFTextSelection

00:05:00.646 --> 00:05:02.486
I mentioned, PDFOutline to

00:05:02.486 --> 00:05:03.706
create a table of contents,

00:05:04.166 --> 00:05:06.906
PDFAction to jump to a URL, and

00:05:06.906 --> 00:05:07.246
a few more.

00:05:08.066 --> 00:05:09.706
But when it comes down to it,

00:05:09.706 --> 00:05:10.906
there are really just four core

00:05:10.906 --> 00:05:12.636
classes that do the majority of

00:05:12.866 --> 00:05:13.796
what you might want to do with a

00:05:13.796 --> 00:05:15.326
PDF, and these are PDFView,

00:05:15.326 --> 00:05:16.486
PDFDocument, Page, and

00:05:16.486 --> 00:05:17.000
Annotation.

00:05:18.606 --> 00:05:21.946
But to simplify it even more, to

00:05:21.946 --> 00:05:23.646
create a bare bones application

00:05:23.646 --> 00:05:25.426
to display PDF and interact with

00:05:25.426 --> 00:05:26.746
it, all you really need to know

00:05:26.746 --> 00:05:28.596
about is PDFView, and Jeremy's

00:05:28.596 --> 00:05:29.326
going to show you how to do

00:05:29.326 --> 00:05:29.660
that.

00:05:32.516 --> 00:05:40.016
[ Audience Applause ]

00:05:40.516 --> 00:05:41.056
>> Awesome!

00:05:41.486 --> 00:05:42.386
Thank you very much, Nicki.

00:05:42.936 --> 00:05:43.396
All right.

00:05:43.396 --> 00:05:44.826
So, we really want to emphasize,

00:05:44.966 --> 00:05:47.226
you get the power of PDF really

00:05:47.226 --> 00:05:48.786
straightforward with a lot of

00:05:49.076 --> 00:05:51.166
simple easy use of PDFKit.

00:05:51.566 --> 00:05:53.176
What that means is got the demo

00:05:53.176 --> 00:05:53.686
application.

00:05:53.686 --> 00:05:54.916
It's a desktop application.

00:05:55.196 --> 00:05:56.296
It's really straightforward.

00:05:56.296 --> 00:05:57.626
It's got a View Controller and a

00:05:57.626 --> 00:05:58.866
View; nothing else.

00:05:59.476 --> 00:06:00.506
And in the View Controller

00:06:00.506 --> 00:06:01.606
source code, and we could

00:06:01.606 --> 00:06:01.896
review.

00:06:01.896 --> 00:06:03.366
There's only three bits of code

00:06:03.366 --> 00:06:03.966
that we care about.

00:06:04.586 --> 00:06:06.126
The first is we instantiate a

00:06:06.126 --> 00:06:08.256
PDFView with the parent bounds,

00:06:08.256 --> 00:06:09.176
and we know that it's filling

00:06:09.176 --> 00:06:10.146
that window in Startup.

00:06:10.726 --> 00:06:12.176
We then use Auto Resize to make

00:06:12.176 --> 00:06:13.786
sure that that view always fills

00:06:13.946 --> 00:06:15.566
that window, so even if we

00:06:15.566 --> 00:06:16.796
resize the window, it'll always

00:06:16.796 --> 00:06:17.326
be fitted.

00:06:17.856 --> 00:06:19.446
And finally, the only actual

00:06:19.446 --> 00:06:21.686
true bit of PDFKit code is we

00:06:21.686 --> 00:06:22.846
allow Dragging.

00:06:23.246 --> 00:06:24.906
What that means is if I launch

00:06:24.906 --> 00:06:26.786
the application, I can drag and

00:06:26.786 --> 00:06:29.086
drop a PDF file that I have, in

00:06:29.086 --> 00:06:31.476
this case from Desktop, and it's

00:06:31.476 --> 00:06:32.896
a fully interactive view that

00:06:32.896 --> 00:06:35.076
has all of the same look, feel,

00:06:35.136 --> 00:06:37.326
and features as Preview, Safari,

00:06:37.326 --> 00:06:38.786
and all of these other first

00:06:38.786 --> 00:06:39.606
party applications.

00:06:40.136 --> 00:06:41.356
And what I mean by that is

00:06:41.466 --> 00:06:42.746
there's text selection for free.

00:06:42.866 --> 00:06:44.166
There's the viewer, of course.

00:06:44.166 --> 00:06:45.476
If we go to the Table of

00:06:45.476 --> 00:06:46.286
Contents, it's fully

00:06:46.286 --> 00:06:46.776
interactive.

00:06:46.916 --> 00:06:47.816
I could click and jump

00:06:47.816 --> 00:06:48.216
somewhere.

00:06:48.536 --> 00:06:49.676
I could also right-click and

00:06:49.676 --> 00:06:51.556
maybe change my display layout,

00:06:51.556 --> 00:06:52.866
change a lot of other options.

00:06:52.866 --> 00:06:54.396
I could copy and search text.

00:06:55.336 --> 00:06:56.636
What's really cool about this is

00:06:56.636 --> 00:06:57.816
all of these features are also

00:06:57.816 --> 00:06:59.446
available to you as a developer

00:06:59.596 --> 00:07:00.756
where you could programmatically

00:07:00.756 --> 00:07:01.996
drive these kinds of changes.

00:07:03.286 --> 00:07:05.766
All right.

00:07:06.326 --> 00:07:07.666
So, I've introduced PDFView kind

00:07:07.666 --> 00:07:08.806
of casually, but let me give you

00:07:08.866 --> 00:07:10.166
some more details.

00:07:10.566 --> 00:07:12.596
It's this fully customizable but

00:07:12.596 --> 00:07:14.186
easy to use PDFViewer.

00:07:14.756 --> 00:07:15.546
And when I say fully

00:07:15.546 --> 00:07:16.756
customizable, what I mean is

00:07:16.756 --> 00:07:17.636
this, how you could change the

00:07:17.636 --> 00:07:19.636
layout, direction, page padding;

00:07:19.916 --> 00:07:21.076
you could also change so many

00:07:21.076 --> 00:07:22.536
more like zoom factors and zoom

00:07:22.536 --> 00:07:23.106
behavior.

00:07:23.666 --> 00:07:25.006
This is also the appropriate

00:07:25.006 --> 00:07:26.916
place to do view-to-content and

00:07:26.916 --> 00:07:28.186
content-to-view coordinate

00:07:28.186 --> 00:07:28.696
transforms.

00:07:29.086 --> 00:07:30.606
What that means is if you use

00:07:30.606 --> 00:07:31.866
your finger on iOS, and you tap

00:07:32.006 --> 00:07:33.716
that PDFView, we actually can

00:07:33.716 --> 00:07:35.026
transform that tap and figure

00:07:35.026 --> 00:07:35.846
out where exactly in the

00:07:35.976 --> 00:07:37.606
document and in that page you

00:07:37.606 --> 00:07:38.116
are touching.

00:07:39.746 --> 00:07:41.496
Now, I've mentioned there's a,

00:07:41.816 --> 00:07:43.346
that they're easy to use, so I

00:07:43.346 --> 00:07:44.156
want to give you kind of a

00:07:44.156 --> 00:07:45.306
simple straightforward example

00:07:45.306 --> 00:07:46.606
of setting that document to a

00:07:46.606 --> 00:07:47.276
PDFView.

00:07:47.596 --> 00:07:49.216
Here in SWF, we're initializing

00:07:49.216 --> 00:07:51.546
a document with a URL, and then

00:07:51.546 --> 00:07:52.746
we assign that document to the

00:07:52.746 --> 00:07:53.436
View itself.

00:07:53.796 --> 00:07:55.506
We take care of everything else.

00:07:55.956 --> 00:07:57.136
No matter what content is in

00:07:57.136 --> 00:07:58.486
that document, we will show it

00:07:58.486 --> 00:07:59.296
in PDFView.

00:08:00.856 --> 00:08:02.596
So, I mentioned more of these

00:08:02.596 --> 00:08:03.416
display settings.

00:08:03.416 --> 00:08:04.506
I want to show you a couple of

00:08:04.506 --> 00:08:05.566
the enumerations.

00:08:05.926 --> 00:08:07.856
PDFDisplay mode is really cool

00:08:07.856 --> 00:08:09.016
because you can actually change

00:08:09.286 --> 00:08:11.006
that setup of the document in

00:08:11.006 --> 00:08:11.756
your PDFView.

00:08:12.326 --> 00:08:13.636
So, the first denom is single

00:08:13.636 --> 00:08:14.976
page and, of course, you see one

00:08:14.976 --> 00:08:15.796
page at a time.

00:08:16.206 --> 00:08:17.446
There's also single page

00:08:17.446 --> 00:08:19.156
continuous, and what that means

00:08:19.156 --> 00:08:20.826
is it's the series of pages laid

00:08:20.826 --> 00:08:21.986
out on the vertical column.

00:08:22.556 --> 00:08:24.046
There's also two up modes, so

00:08:24.046 --> 00:08:24.946
you could kind of get this

00:08:24.996 --> 00:08:26.706
iBooks look and feel, and

00:08:26.706 --> 00:08:27.936
there's, of course, two up

00:08:27.936 --> 00:08:29.496
continuous; so, a lot of

00:08:29.496 --> 00:08:29.976
options.

00:08:30.986 --> 00:08:33.366
Next up, new to 2017 is going to

00:08:33.366 --> 00:08:34.546
be Display Direction.

00:08:34.546 --> 00:08:35.546
So, if you look at the

00:08:35.546 --> 00:08:36.746
continuous modes, you don't have

00:08:36.785 --> 00:08:37.876
to do vertical; you could also

00:08:37.876 --> 00:08:39.706
do horizontal; and of course,

00:08:39.706 --> 00:08:40.876
this is available on both

00:08:40.916 --> 00:08:41.765
platforms today.

00:08:42.706 --> 00:08:44.746
There's also, unique to iOS this

00:08:44.746 --> 00:08:46.356
year, the View Pagification.

00:08:46.696 --> 00:08:47.876
What that means is we want to

00:08:47.876 --> 00:08:49.226
give you the same look and feel

00:08:49.226 --> 00:08:50.866
as iBooks in your application;

00:08:50.866 --> 00:08:52.426
so, you could do so by turning

00:08:52.426 --> 00:08:53.086
on that feature.

00:08:53.596 --> 00:08:54.516
So, here, you could put your

00:08:54.516 --> 00:08:55.666
finger on the device, you could

00:08:55.666 --> 00:08:56.846
swipe, and it will go ahead and

00:08:56.846 --> 00:08:58.296
change between pages for you.

00:08:58.736 --> 00:08:59.756
And what's cool is on this

00:08:59.816 --> 00:09:00.306
bottom.

00:09:00.526 --> 00:09:01.406
Take a closer look.

00:09:02.206 --> 00:09:04.226
We've got PDFThumbnailView, so

00:09:04.346 --> 00:09:06.036
Feature Rich Scrubber for the

00:09:06.036 --> 00:09:07.036
document itself.

00:09:07.166 --> 00:09:08.596
As you move your finger across

00:09:08.656 --> 00:09:10.306
that scrubber, it'll activate

00:09:10.306 --> 00:09:11.416
the appropriate page that your

00:09:11.416 --> 00:09:13.106
finger is on, and it'll update

00:09:13.106 --> 00:09:14.726
PDFView with that active page.

00:09:14.996 --> 00:09:16.606
But of course, if you drive that

00:09:16.606 --> 00:09:18.496
page change with PDFView, it'll

00:09:18.496 --> 00:09:19.236
go ahead and update

00:09:19.236 --> 00:09:20.046
ThumbnailView as well.

00:09:21.296 --> 00:09:23.316
ThumbnailView isn't limited just

00:09:23.316 --> 00:09:24.486
to the horizontal access.

00:09:24.696 --> 00:09:26.106
Of course, you can set it to the

00:09:26.106 --> 00:09:26.996
vertical axis.

00:09:27.566 --> 00:09:30.416
So, we've talked a lot about

00:09:30.416 --> 00:09:31.646
PDFView, but let's talk about

00:09:31.646 --> 00:09:32.856
the core data structures

00:09:32.856 --> 00:09:34.736
themselves, the Document, Page,

00:09:34.736 --> 00:09:36.026
and Annotations Model.

00:09:36.206 --> 00:09:38.996
So, PDFDocument really is a

00:09:38.996 --> 00:09:40.126
document; no surprise.

00:09:40.126 --> 00:09:41.766
And the document is going to be

00:09:41.766 --> 00:09:43.916
a collection of PDFPages, and

00:09:43.916 --> 00:09:45.376
PDFPages are pretty cool because

00:09:45.376 --> 00:09:46.796
they actually own that content

00:09:47.096 --> 00:09:47.756
from your file.

00:09:48.026 --> 00:09:49.506
What you see on screen is owned

00:09:49.536 --> 00:09:50.716
by PDFPage.

00:09:51.066 --> 00:09:52.526
The PDFPage does so much more

00:09:52.526 --> 00:09:53.846
because it's also an owner of

00:09:54.016 --> 00:09:55.546
all the annotations that you see

00:09:55.546 --> 00:09:56.216
on screen.

00:09:57.416 --> 00:09:59.376
So, Document has pages, Pages

00:09:59.376 --> 00:10:01.566
has content and annotations, and

00:10:01.566 --> 00:10:03.216
to actually create a document,

00:10:03.216 --> 00:10:04.326
you could either initialize it

00:10:04.326 --> 00:10:05.746
by itself, and author one from

00:10:05.746 --> 00:10:07.386
scratch, or you could initialize

00:10:07.386 --> 00:10:07.976
it with a URL.

00:10:08.046 --> 00:10:10.086
But once you have that document,

00:10:10.086 --> 00:10:11.296
you could modify the collection

00:10:11.296 --> 00:10:11.766
of pages.

00:10:12.056 --> 00:10:13.746
You could add, swap, insert, and

00:10:13.746 --> 00:10:14.516
remove pages.

00:10:15.406 --> 00:10:16.696
PDFDocument is also really

00:10:16.696 --> 00:10:17.976
powerful because this is where

00:10:17.976 --> 00:10:19.496
you could decrypt the document

00:10:19.496 --> 00:10:20.746
and also save it with

00:10:20.746 --> 00:10:21.356
encryption.

00:10:21.606 --> 00:10:22.546
So, we give you that full

00:10:22.546 --> 00:10:24.036
feature of encryption both on

00:10:24.036 --> 00:10:25.276
opening and saving.

00:10:25.766 --> 00:10:26.966
It also gives you access to

00:10:26.966 --> 00:10:28.256
check what permissions you have

00:10:28.256 --> 00:10:28.836
on the document.

00:10:29.026 --> 00:10:30.166
So, as you unlock it, it's

00:10:30.206 --> 00:10:31.326
really important that you check

00:10:31.396 --> 00:10:32.686
what could you actually do with

00:10:32.686 --> 00:10:33.316
that document.

00:10:34.016 --> 00:10:35.156
This is also where you could get

00:10:35.156 --> 00:10:36.366
the attributes of a document, so

00:10:36.366 --> 00:10:37.386
you could figure out who

00:10:37.386 --> 00:10:38.676
authored it, when it was

00:10:38.676 --> 00:10:39.886
authored, what tools did they

00:10:39.886 --> 00:10:40.606
use to author it.

00:10:41.136 --> 00:10:42.666
And finally, a really nice

00:10:42.666 --> 00:10:43.726
feature, if you want to ever

00:10:43.726 --> 00:10:45.086
search the document, and the

00:10:45.086 --> 00:10:46.466
document strings, you could do

00:10:46.466 --> 00:10:46.696
so.

00:10:46.896 --> 00:10:48.656
PDFDocument has a series of APIs

00:10:48.656 --> 00:10:49.886
to do exactly that.

00:10:50.346 --> 00:10:52.416
Let me give you a full, an

00:10:52.536 --> 00:10:53.896
example, something you kind of

00:10:53.896 --> 00:10:55.306
saw earlier, which is we're

00:10:55.306 --> 00:10:56.706
going to set a Document on a

00:10:56.706 --> 00:10:58.296
view, but I wanted to show you

00:10:58.296 --> 00:10:59.626
the explicit path of, we're

00:10:59.626 --> 00:11:00.926
going to initialize the document

00:11:01.026 --> 00:11:01.986
by checking your bundle.

00:11:01.986 --> 00:11:03.296
Does it have the PDF file in

00:11:03.296 --> 00:11:03.666
question?

00:11:03.666 --> 00:11:05.536
If it does, then go ahead and

00:11:05.536 --> 00:11:06.776
try to initialize that PDF

00:11:06.776 --> 00:11:08.816
document, and on success, just

00:11:08.816 --> 00:11:09.566
assign it to the View.

00:11:09.796 --> 00:11:11.106
We take care of everything else

00:11:11.146 --> 00:11:11.456
for you.

00:11:11.776 --> 00:11:13.716
A couple of more examples, if

00:11:13.716 --> 00:11:15.186
you want to save the file, it's

00:11:15.186 --> 00:11:16.076
really straightforward.

00:11:16.076 --> 00:11:17.736
Just do write method call with

00:11:17.766 --> 00:11:18.816
that new file path.

00:11:19.486 --> 00:11:20.766
Let's say you want to save width

00:11:20.766 --> 00:11:22.316
encryption; it's really

00:11:22.316 --> 00:11:23.156
straightforward too.

00:11:23.276 --> 00:11:25.706
Do a writeto with options, and

00:11:25.706 --> 00:11:26.496
then the options is the

00:11:26.496 --> 00:11:28.006
dictionary where we map special

00:11:28.006 --> 00:11:29.346
enumerations in the header file

00:11:29.776 --> 00:11:31.046
with a password that you care

00:11:31.046 --> 00:11:31.266
about.

00:11:31.666 --> 00:11:32.576
So, here, I'm saving the

00:11:32.576 --> 00:11:33.696
document with full honor

00:11:33.696 --> 00:11:34.916
permissions, and you could only

00:11:34.916 --> 00:11:36.576
open it using my password Apple.

00:11:36.576 --> 00:11:39.116
A couple of more examples, if

00:11:39.116 --> 00:11:40.746
you want to retrieve a page, we

00:11:40.746 --> 00:11:43.286
use a base 0 index system.

00:11:43.536 --> 00:11:44.676
What that means is the first

00:11:44.676 --> 00:11:46.346
page is an index 0; second page

00:11:46.346 --> 00:11:47.646
is an index 1, etcetera.

00:11:47.826 --> 00:11:49.506
So, retrieving the first page is

00:11:49.506 --> 00:11:51.676
as simple as doing .page at and

00:11:51.676 --> 00:11:52.576
give us that index.

00:11:53.266 --> 00:11:54.516
The second one is if you want to

00:11:54.516 --> 00:11:55.976
insert a page, you could do so

00:11:55.976 --> 00:11:57.556
with a page and an index.

00:11:58.276 --> 00:11:59.756
If you want to exchange pages,

00:11:59.756 --> 00:12:01.096
just give us two indices.

00:12:01.876 --> 00:12:03.196
Finally, if you want to remove a

00:12:03.196 --> 00:12:04.986
page, again, just pass us an

00:12:04.986 --> 00:12:05.376
index.

00:12:05.376 --> 00:12:06.896
We will take care of the full

00:12:06.896 --> 00:12:07.976
document construction when you

00:12:07.976 --> 00:12:09.756
mutate it and save it out to

00:12:09.756 --> 00:12:10.000
disc.

00:12:11.866 --> 00:12:13.296
Now, I've mentioned encryption

00:12:13.296 --> 00:12:14.486
when you save, but let me show

00:12:14.486 --> 00:12:15.886
you an [inaudible] example when

00:12:15.886 --> 00:12:16.916
you open the file.

00:12:17.266 --> 00:12:18.916
So, here, I'm initializing a PDF

00:12:18.946 --> 00:12:20.736
document from a given URL, and

00:12:20.736 --> 00:12:22.096
the very first thing I need to

00:12:22.096 --> 00:12:23.976
do is I need to check, is this

00:12:23.976 --> 00:12:25.236
document actually encrypted?

00:12:25.526 --> 00:12:26.916
If it is, no problem.

00:12:26.916 --> 00:12:28.266
I'm going to try to decrypt it.

00:12:28.266 --> 00:12:29.476
I'm going to decrypt it by using

00:12:29.476 --> 00:12:31.406
the method unlockwithPassword.

00:12:31.896 --> 00:12:32.906
And unsuccess.

00:12:32.906 --> 00:12:33.806
That's great.

00:12:34.286 --> 00:12:35.196
I just need to do one more

00:12:35.196 --> 00:12:36.016
thing, which is I need to

00:12:36.016 --> 00:12:37.746
actually check what my role and

00:12:37.746 --> 00:12:38.656
my permissions are.

00:12:39.586 --> 00:12:41.186
What I mean by role is that the

00:12:41.186 --> 00:12:42.686
PDF document file format has

00:12:42.726 --> 00:12:44.036
this really cool idea that you

00:12:44.036 --> 00:12:45.006
could unlock a document with

00:12:45.006 --> 00:12:46.486
actually two passwords, right.

00:12:46.696 --> 00:12:48.006
You've got your owner password,

00:12:48.006 --> 00:12:49.276
which has full permissions over

00:12:49.276 --> 00:12:49.826
the document.

00:12:49.826 --> 00:12:51.386
You could copy, paste, share it,

00:12:51.616 --> 00:12:53.566
print it out, or you could have

00:12:53.566 --> 00:12:54.886
a limited role, like maybe the

00:12:54.886 --> 00:12:55.626
user role.

00:12:55.926 --> 00:12:57.256
And with this limited role, you

00:12:57.256 --> 00:12:58.526
might have variable permissions.

00:12:58.886 --> 00:13:01.426
Maybe you can copy, maybe you

00:13:01.426 --> 00:13:02.736
can print, but it's not

00:13:02.736 --> 00:13:04.166
guaranteed, and as app

00:13:04.266 --> 00:13:05.736
developers, it's critical that

00:13:05.736 --> 00:13:07.036
when you do unlock a document,

00:13:07.376 --> 00:13:08.486
check these privileges.

00:13:08.776 --> 00:13:10.506
The reason why is PDFKit will

00:13:10.506 --> 00:13:11.986
enforce these privileges for

00:13:11.986 --> 00:13:12.176
you.

00:13:12.586 --> 00:13:13.796
So, if you open a document, and

00:13:13.836 --> 00:13:15.236
you can't copy it, right, it's

00:13:15.236 --> 00:13:16.826
really a bad user experience not

00:13:16.826 --> 00:13:18.256
to understand why you can't copy

00:13:18.256 --> 00:13:18.346
it.

00:13:18.676 --> 00:13:19.726
So, you could check this and

00:13:19.726 --> 00:13:21.026
maybe communicate to the user,

00:13:21.026 --> 00:13:22.716
hey, this document is unlocked,

00:13:22.906 --> 00:13:24.276
but with the user password.

00:13:24.416 --> 00:13:25.276
That means you don't have full

00:13:25.276 --> 00:13:26.396
permission, and if you do want

00:13:26.396 --> 00:13:27.436
to give us the older password,

00:13:27.726 --> 00:13:28.966
we could try to unlock it again,

00:13:28.966 --> 00:13:30.216
and you'll be able to copy it

00:13:30.216 --> 00:13:30.586
after all.

00:13:32.136 --> 00:13:33.726
So, when you unlock the

00:13:33.726 --> 00:13:35.136
document, it returns a Boolean,

00:13:35.366 --> 00:13:36.826
but some of these events on a

00:13:36.826 --> 00:13:38.396
document and other classes will

00:13:38.396 --> 00:13:40.606
post notifications and will call

00:13:40.606 --> 00:13:41.596
optional delegates.

00:13:42.026 --> 00:13:43.426
A couple of examples is, again,

00:13:43.646 --> 00:13:44.686
when you unlock a document,

00:13:44.686 --> 00:13:45.846
we'll post the document did

00:13:45.846 --> 00:13:47.066
unlock notification.

00:13:47.446 --> 00:13:48.446
This could have been driven by

00:13:48.446 --> 00:13:49.426
the user because we have a

00:13:49.426 --> 00:13:51.316
default password unlock a view.

00:13:51.946 --> 00:13:53.236
But also, if you start saving

00:13:53.236 --> 00:13:54.426
the document, maybe you want to

00:13:54.426 --> 00:13:55.536
catch that in some other

00:13:55.536 --> 00:13:56.546
observers in code.

00:13:56.816 --> 00:13:58.206
You could do so with the

00:13:58.206 --> 00:13:59.026
notifications.

00:13:59.126 --> 00:14:00.646
You could also implement any of

00:14:00.646 --> 00:14:01.656
these delegates, and they

00:14:01.756 --> 00:14:02.956
typically match one-to-one.

00:14:03.016 --> 00:14:04.376
They have very similar function

00:14:04.376 --> 00:14:04.666
calls.

00:14:05.816 --> 00:14:06.176
All right.

00:14:07.046 --> 00:14:08.306
So, we talked a lot about pages,

00:14:08.486 --> 00:14:09.546
or excuse me, a lot about

00:14:09.546 --> 00:14:10.836
document; let's talk about

00:14:10.876 --> 00:14:11.406
Pages.

00:14:12.056 --> 00:14:13.666
So, pages can be retrieved from

00:14:13.666 --> 00:14:14.796
a document, or they can be

00:14:14.796 --> 00:14:15.986
initialized empty; maybe you're

00:14:15.986 --> 00:14:17.516
offering a new document, or they

00:14:17.516 --> 00:14:18.796
could even be initialized with

00:14:18.796 --> 00:14:19.536
an image.

00:14:19.536 --> 00:14:20.746
That's a really helpful feature

00:14:20.746 --> 00:14:22.106
if you're trying to translate a

00:14:22.106 --> 00:14:23.806
collection of images into a PDF

00:14:23.806 --> 00:14:24.266
document.

00:14:24.516 --> 00:14:25.826
I'll show you an example later.

00:14:26.296 --> 00:14:28.076
But also, what's powerful about

00:14:28.076 --> 00:14:29.496
PDFPages is that it's that

00:14:29.496 --> 00:14:30.646
Annotations container.

00:14:30.646 --> 00:14:31.766
So, if you interact with

00:14:31.826 --> 00:14:32.906
Annotations, or if you want to

00:14:32.906 --> 00:14:35.366
mutate Annotations, PDFPage is

00:14:35.366 --> 00:14:35.986
where to do that.

00:14:36.726 --> 00:14:38.166
Finally, PDFPage has a lot of

00:14:38.166 --> 00:14:39.426
custom graphics, so if you want

00:14:39.426 --> 00:14:40.466
to change its size, its

00:14:40.516 --> 00:14:42.306
orientation, or if you want to

00:14:42.306 --> 00:14:43.716
do custom graphics in that

00:14:43.716 --> 00:14:45.196
content, you could do so with

00:14:45.196 --> 00:14:46.156
the PDFPage class.

00:14:46.886 --> 00:14:48.796
It also has a series of a really

00:14:48.796 --> 00:14:50.606
powerful text selection at API.

00:14:51.186 --> 00:14:52.216
I'll give you an example.

00:14:54.266 --> 00:14:55.746
So, first and foremost, let's

00:14:55.746 --> 00:14:57.576
create a PDFPage with an image.

00:14:57.576 --> 00:14:59.596
So, I'm going to use UIImage to

00:14:59.596 --> 00:15:01.116
go ahead and initialize an image

00:15:01.156 --> 00:15:02.466
asset, and now I'm going to

00:15:02.466 --> 00:15:03.986
instantiate PDFPage with an

00:15:03.986 --> 00:15:04.356
image.

00:15:04.826 --> 00:15:06.406
What's really cool about this is

00:15:06.456 --> 00:15:08.056
if the image has special

00:15:08.056 --> 00:15:09.876
content, like it's a P3 wide

00:15:09.876 --> 00:15:11.436
gamic color space, we will

00:15:11.516 --> 00:15:13.006
author that page, and eventually

00:15:13.006 --> 00:15:14.746
the document, with that P3 color

00:15:14.746 --> 00:15:15.206
space.

00:15:15.676 --> 00:15:17.376
What's also nice is we default

00:15:17.376 --> 00:15:19.286
the PDFPage to US letter, but

00:15:19.286 --> 00:15:20.266
you could set that size to

00:15:20.266 --> 00:15:21.876
whatever you want, but if you

00:15:21.876 --> 00:15:22.856
initialize it with an image,

00:15:22.856 --> 00:15:24.146
we'll always try to maintain

00:15:24.146 --> 00:15:25.586
that image's aspect ratio in the

00:15:25.586 --> 00:15:26.966
size in the document.

00:15:29.186 --> 00:15:30.736
If you want to extract string

00:15:30.736 --> 00:15:31.736
content from a PDFPage, you

00:15:31.736 --> 00:15:33.236
could do so by just calling the

00:15:33.236 --> 00:15:34.016
string method.

00:15:34.396 --> 00:15:36.036
But if you want to get rich text

00:15:36.106 --> 00:15:37.196
out of that document, you could

00:15:37.196 --> 00:15:38.826
do so with the Attributed

00:15:38.826 --> 00:15:40.096
string, and this has been

00:15:40.096 --> 00:15:41.356
really, really powerful with our

00:15:41.356 --> 00:15:42.826
improvements in accessibility.

00:15:44.256 --> 00:15:45.636
There's also, like I mentioned

00:15:45.636 --> 00:15:47.216
before, these really powerful

00:15:47.246 --> 00:15:48.166
text selection APIs.

00:15:48.226 --> 00:15:49.636
I'll give you two examples.

00:15:50.096 --> 00:15:51.406
The first one is let's say you

00:15:51.406 --> 00:15:52.836
want to select text at a

00:15:52.836 --> 00:15:54.136
specific character range.

00:15:54.456 --> 00:15:56.316
You could do so by a method on

00:15:56.316 --> 00:15:57.956
the PDFPage called Selection for

00:15:57.956 --> 00:15:58.366
Range.

00:15:58.656 --> 00:16:00.506
So, here, we'll select character

00:16:00.506 --> 00:16:01.816
10 and for a span of 5

00:16:01.876 --> 00:16:02.286
characters.

00:16:02.616 --> 00:16:03.736
We'll extract that, and you

00:16:03.736 --> 00:16:04.746
could do a lot of geometry

00:16:04.746 --> 00:16:05.936
conversions with the PDF

00:16:05.936 --> 00:16:07.036
selection class to figure out

00:16:07.306 --> 00:16:09.096
where visually that is on Page.

00:16:09.716 --> 00:16:11.456
But there's also the means of

00:16:11.456 --> 00:16:12.796
pulling out text based on

00:16:12.796 --> 00:16:13.476
geometry.

00:16:13.766 --> 00:16:15.146
So, if you give us a rectangle

00:16:15.146 --> 00:16:16.626
rather than just a span of text,

00:16:16.906 --> 00:16:18.086
we could pull out that PDF

00:16:18.086 --> 00:16:19.386
selection for you, and there's a

00:16:19.386 --> 00:16:20.316
lot you could do with that.

00:16:21.236 --> 00:16:22.356
But I want to go back to

00:16:22.406 --> 00:16:23.366
Attributed string.

00:16:24.016 --> 00:16:25.536
I wrote a really simple desktop

00:16:25.536 --> 00:16:27.326
application where on the left,

00:16:27.326 --> 00:16:28.466
just like in our previous demo,

00:16:28.466 --> 00:16:30.046
we have a drag and drop PDFView,

00:16:30.406 --> 00:16:31.376
and on the right, we've got a

00:16:31.376 --> 00:16:32.226
Rich Text field.

00:16:33.006 --> 00:16:34.166
And here, I'm going to drag and

00:16:34.166 --> 00:16:36.526
drop a little user manual, and

00:16:36.526 --> 00:16:37.916
then on the left, I'm pulling

00:16:37.916 --> 00:16:39.146
out and publishing the

00:16:39.146 --> 00:16:39.856
Attributed string.

00:16:40.496 --> 00:16:41.886
And this is what's really cool

00:16:41.886 --> 00:16:43.706
is we maintain the full content

00:16:43.706 --> 00:16:45.176
as best as possible for text

00:16:45.176 --> 00:16:47.786
positioning, text order, fonts,

00:16:47.876 --> 00:16:49.766
color, bolds, and all of these

00:16:49.766 --> 00:16:50.646
other attributes.

00:16:51.006 --> 00:16:52.226
And it's critically important

00:16:52.226 --> 00:16:54.026
because this gets exposed to the

00:16:54.026 --> 00:16:55.676
accessibility system, which is

00:16:55.676 --> 00:16:57.406
available on both Mac OS and

00:16:57.406 --> 00:16:57.626
iOS.

00:16:58.066 --> 00:17:00.226
That means just by adopting

00:17:00.226 --> 00:17:01.876
PDFView, you get all of these

00:17:01.876 --> 00:17:03.526
accessibility improvements for

00:17:03.526 --> 00:17:05.036
free on both platforms.

00:17:06.796 --> 00:17:07.096
All right.

00:17:07.766 --> 00:17:08.925
So, there's another cool feature

00:17:08.925 --> 00:17:11.406
new to 2017, which is PDFPages

00:17:11.406 --> 00:17:13.626
Method Thumbnail of size for a

00:17:13.626 --> 00:17:14.496
display box.

00:17:14.935 --> 00:17:15.925
Oftentimes, you might be in a

00:17:15.925 --> 00:17:17.776
situation where you have a PDF

00:17:17.776 --> 00:17:19.346
document and all you want to do,

00:17:19.415 --> 00:17:20.586
nothing more complicated, all

00:17:20.586 --> 00:17:22.006
you want to do is just show a

00:17:22.006 --> 00:17:22.856
preview of a page.

00:17:23.656 --> 00:17:25.406
With this new method, we do all

00:17:25.406 --> 00:17:26.806
of that work for you and, again,

00:17:26.806 --> 00:17:28.246
we'll respect the P3 color

00:17:28.246 --> 00:17:28.566
space.

00:17:28.566 --> 00:17:29.856
So, if your document has any

00:17:29.856 --> 00:17:31.466
sort of complicated asset that

00:17:31.466 --> 00:17:32.836
has a wide gamut color, we'll

00:17:32.836 --> 00:17:34.596
make sure that the UI image or

00:17:34.596 --> 00:17:36.066
the NS image like gets authored

00:17:36.066 --> 00:17:38.116
from this is P3 compliance.

00:17:38.596 --> 00:17:39.456
What's also nice, this will

00:17:39.456 --> 00:17:40.886
track size to fit the document

00:17:40.886 --> 00:17:42.006
in the given bounds while

00:17:42.006 --> 00:17:43.426
maintaining aspect ratio.

00:17:44.496 --> 00:17:46.146
But that last argument display

00:17:46.146 --> 00:17:47.166
box, what is that?

00:17:47.536 --> 00:17:49.696
So, to explain that enumeration,

00:17:49.746 --> 00:17:51.016
I have to kind of explain how

00:17:51.176 --> 00:17:53.256
PDF content works in terms of

00:17:53.356 --> 00:17:53.846
graphics.

00:17:54.996 --> 00:17:56.576
So, we're going to start with

00:17:56.576 --> 00:17:57.766
the Cartesian Coordinate Space.

00:17:57.836 --> 00:17:59.486
This is the content coordinate

00:17:59.486 --> 00:18:01.256
space that all PDFPages draw

00:18:01.256 --> 00:18:01.676
into.

00:18:01.676 --> 00:18:03.406
So, you've got origin at 00.

00:18:03.406 --> 00:18:04.956
X positive grows to the right.

00:18:05.196 --> 00:18:07.346
Y positive grows up, and I'm

00:18:07.346 --> 00:18:08.346
going to put a little string,

00:18:08.346 --> 00:18:09.646
I'm going to say "Hello, San

00:18:09.646 --> 00:18:10.006
Jose."

00:18:10.836 --> 00:18:12.246
And with this string, I want to

00:18:12.246 --> 00:18:13.956
put it on a page, so it's got a

00:18:13.956 --> 00:18:14.606
location.

00:18:14.606 --> 00:18:15.426
I'm going to put that on the

00:18:15.426 --> 00:18:16.656
page, and the page itself, of

00:18:16.656 --> 00:18:17.556
course, has a size.

00:18:17.816 --> 00:18:18.986
So, we've got all of these

00:18:18.986 --> 00:18:20.346
geometric properties, but

00:18:21.116 --> 00:18:22.836
something really bothers me, and

00:18:22.836 --> 00:18:23.966
what bothers me is it's not

00:18:24.096 --> 00:18:24.476
centered.

00:18:24.696 --> 00:18:27.356
Right? So, we could redraw this

00:18:27.356 --> 00:18:28.666
entire content, but that's

00:18:28.666 --> 00:18:29.876
really unacceptable and

00:18:29.876 --> 00:18:30.366
expensive.

00:18:30.366 --> 00:18:32.056
No one wants to re-author a PDF

00:18:32.056 --> 00:18:34.236
document by re-issuing and

00:18:34.236 --> 00:18:35.866
redrawing all of these draw

00:18:35.866 --> 00:18:36.346
commands.

00:18:36.876 --> 00:18:37.876
So, instead, we're going to take

00:18:37.876 --> 00:18:39.326
advantage of the power of PDF

00:18:39.326 --> 00:18:40.376
and take advantage of the

00:18:40.376 --> 00:18:41.866
enumeration I was talking about.

00:18:42.396 --> 00:18:43.326
We're going to take this

00:18:43.326 --> 00:18:45.246
PDFPage, and we're going to set

00:18:45.506 --> 00:18:46.926
the frame for that specific

00:18:46.926 --> 00:18:48.496
display box to be slightly

00:18:48.496 --> 00:18:48.976
offset.

00:18:49.276 --> 00:18:50.376
It's offset because we want to

00:18:50.376 --> 00:18:51.916
keep San Jose dead center.

00:18:52.446 --> 00:18:54.766
And I don't really like

00:18:54.766 --> 00:18:55.906
Landscapes; I want to turn it

00:18:55.906 --> 00:18:57.106
into Portrait, and I could do so

00:18:57.106 --> 00:18:58.496
again without reissuing any of

00:18:58.496 --> 00:18:59.616
my draw commands, I could just

00:18:59.616 --> 00:19:00.906
set that frame property.

00:19:02.436 --> 00:19:04.656
Now, why is it that I could

00:19:04.656 --> 00:19:06.666
change to use PDFPage Geometric

00:19:06.666 --> 00:19:07.856
Properties without changing the

00:19:07.856 --> 00:19:08.296
content?

00:19:08.296 --> 00:19:09.426
What's the real benefit other

00:19:09.426 --> 00:19:10.676
than we're just saving some time

00:19:10.676 --> 00:19:11.716
when saving the file?

00:19:12.196 --> 00:19:14.236
The real benefit is PDF comes

00:19:14.236 --> 00:19:15.816
from the physical printing

00:19:15.816 --> 00:19:16.106
world.

00:19:16.456 --> 00:19:17.646
That means that there are cases

00:19:17.646 --> 00:19:18.766
where you actually want to have

00:19:18.806 --> 00:19:20.616
multiple PDFPages for the same

00:19:20.616 --> 00:19:21.126
content.

00:19:21.956 --> 00:19:23.596
You should think about PDFPages

00:19:23.596 --> 00:19:25.486
at least when it comes to this

00:19:25.486 --> 00:19:26.126
content.

00:19:26.126 --> 00:19:27.036
When you're drawing it out, you

00:19:27.036 --> 00:19:28.546
should see them as View portals

00:19:28.546 --> 00:19:29.356
into your content.

00:19:29.686 --> 00:19:32.186
There's one box of content, but

00:19:32.186 --> 00:19:33.246
then there could be several view

00:19:33.246 --> 00:19:34.936
portals or pages into that

00:19:34.936 --> 00:19:35.406
content.

00:19:35.766 --> 00:19:37.126
And the reason why we do that

00:19:37.126 --> 00:19:38.826
is, take a look at the corners,

00:19:39.526 --> 00:19:39.806
right.

00:19:39.946 --> 00:19:41.396
In the physical printing world,

00:19:41.466 --> 00:19:42.276
when you're trying to print this

00:19:42.276 --> 00:19:43.576
professionally, oftentimes,

00:19:43.576 --> 00:19:44.686
they're going to print this

00:19:44.846 --> 00:19:46.616
through several passes, and each

00:19:46.616 --> 00:19:47.576
pass is going to lay on a

00:19:47.616 --> 00:19:48.646
separate layer of ink.

00:19:48.646 --> 00:19:50.516
And to do that perfectly, there

00:19:50.516 --> 00:19:51.426
needs to be some sort of

00:19:51.426 --> 00:19:51.776
alignment.

00:19:52.216 --> 00:19:53.316
So, here, we've authored the

00:19:53.316 --> 00:19:54.756
page with optical alignment

00:19:54.756 --> 00:19:56.426
characters at each corner so the

00:19:56.526 --> 00:19:57.856
physical process can put that

00:19:57.856 --> 00:19:58.886
ink perfectly.

00:20:00.226 --> 00:20:01.616
And that's why we have these

00:20:01.616 --> 00:20:01.976
enumerations.

00:20:02.616 --> 00:20:03.846
In this case, I'm showing the

00:20:03.846 --> 00:20:05.026
digital version, which is the

00:20:05.026 --> 00:20:05.616
Prop Box.

00:20:05.686 --> 00:20:07.196
That's what PDFKit defaults to,

00:20:07.556 --> 00:20:08.626
and then we're also showing the

00:20:08.766 --> 00:20:09.846
physical version, which is what

00:20:09.846 --> 00:20:11.696
we'll physically print, via the

00:20:11.696 --> 00:20:12.476
media box.

00:20:12.826 --> 00:20:14.106
There's three more that you

00:20:14.106 --> 00:20:15.676
could play with, and then also

00:20:15.676 --> 00:20:16.746
don't forget what's really

00:20:16.746 --> 00:20:18.586
powerful about this is any

00:20:18.586 --> 00:20:19.776
modifications you make to one

00:20:19.776 --> 00:20:20.736
box, because you're modifying

00:20:20.736 --> 00:20:22.036
that content, is going to appear

00:20:22.036 --> 00:20:22.866
in both Pages.

00:20:23.576 --> 00:20:25.026
All right.

00:20:25.466 --> 00:20:27.416
So, let's now talk about Custom

00:20:27.416 --> 00:20:28.686
PDFPage Drawing.

00:20:28.686 --> 00:20:29.556
We've talked about changing

00:20:29.556 --> 00:20:30.606
everything else, but what about

00:20:30.606 --> 00:20:31.846
actually drawing content?

00:20:32.616 --> 00:20:33.936
There are three simple steps.

00:20:34.236 --> 00:20:35.936
The first is given a PDF

00:20:35.936 --> 00:20:37.276
document; we're going to set a

00:20:37.276 --> 00:20:38.726
PDFDocument delegate.

00:20:39.046 --> 00:20:39.856
The reason why we set that

00:20:39.856 --> 00:20:42.096
delegate is Step 2, that

00:20:42.096 --> 00:20:43.396
delegate should implement

00:20:43.396 --> 00:20:44.386
classForPage.

00:20:44.386 --> 00:20:46.306
We're going to return a subclass

00:20:46.366 --> 00:20:48.016
that we've implemented that's

00:20:48.016 --> 00:20:49.476
going to define how do we want

00:20:49.476 --> 00:20:50.666
to draw this PDFPage.

00:20:51.166 --> 00:20:52.046
So, in this case, I'm going to

00:20:52.046 --> 00:20:53.956
say please draw with my custom

00:20:53.956 --> 00:20:55.756
subclass called WatermarkPage.

00:20:56.576 --> 00:20:58.516
Third step, third and final, is

00:20:58.516 --> 00:20:59.846
we need to actually override

00:20:59.846 --> 00:21:01.766
that PDFPage subclass' draw

00:21:01.766 --> 00:21:02.136
method.

00:21:02.406 --> 00:21:03.426
So, we're going to do draw with

00:21:03.466 --> 00:21:05.136
box to context.

00:21:05.496 --> 00:21:07.276
Let me show you a full example

00:21:07.376 --> 00:21:08.330
and end.

00:21:15.456 --> 00:21:16.000
Perfect.

00:21:18.796 --> 00:21:18.946
All right.

00:21:19.126 --> 00:21:21.746
So, here I've got iOS simulator

00:21:21.746 --> 00:21:23.076
running a sample application

00:21:23.076 --> 00:21:24.526
that implements my three rules,

00:21:25.106 --> 00:21:26.636
and in this application, I just

00:21:26.636 --> 00:21:27.676
get to scroll around just like a

00:21:27.676 --> 00:21:30.236
normal PDFView, but I want

00:21:30.236 --> 00:21:31.076
something different in this

00:21:31.076 --> 00:21:31.646
application.

00:21:31.776 --> 00:21:33.106
I want to say that we're

00:21:33.106 --> 00:21:34.186
handling really sensitive

00:21:34.186 --> 00:21:35.816
documents, and every time one of

00:21:35.816 --> 00:21:37.506
my users opens these documents,

00:21:37.926 --> 00:21:38.746
we have to track them.

00:21:38.776 --> 00:21:40.926
We have to know that user X has

00:21:40.926 --> 00:21:43.106
seen this content, and if user X

00:21:43.106 --> 00:21:44.776
leaks this content, right, we'll

00:21:44.776 --> 00:21:45.776
know exactly who did it.

00:21:46.086 --> 00:21:47.596
So, our goal is to draw some

00:21:47.596 --> 00:21:49.426
custom identifier atop every

00:21:49.426 --> 00:21:51.316
single page, and we could do so

00:21:51.316 --> 00:21:52.386
with those three steps.

00:21:52.456 --> 00:21:54.406
So, the very first step, if we

00:21:54.406 --> 00:21:55.806
go to our ViewController,

00:21:56.386 --> 00:21:57.266
there's a little bit of overhead

00:21:57.266 --> 00:21:58.686
to set up the PDFView, but

00:21:58.806 --> 00:21:59.836
here's the core step.

00:22:00.276 --> 00:22:01.446
We are setting the delegate to

00:22:01.446 --> 00:22:02.016
ourselves.

00:22:02.016 --> 00:22:03.156
We are setting the delegate to

00:22:03.156 --> 00:22:03.946
the ViewController.

00:22:04.366 --> 00:22:05.736
The reason why we do that, Step

00:22:05.736 --> 00:22:07.496
2, we're going to declare, like

00:22:07.496 --> 00:22:08.776
you saw previously in the sides,

00:22:08.776 --> 00:22:09.666
we're going to declare that

00:22:09.666 --> 00:22:11.256
watermarkPage as this PDFPage

00:22:11.306 --> 00:22:13.026
subclass, and we want to return

00:22:13.026 --> 00:22:14.196
that as our customDrawer.

00:22:15.096 --> 00:22:18.006
The final step, Step 3, is we're

00:22:18.006 --> 00:22:20.076
now overriding the Draw

00:22:20.076 --> 00:22:21.326
Function, draw with Box 2

00:22:21.326 --> 00:22:22.836
context, and we're putting all

00:22:22.836 --> 00:22:24.166
of our custom graphics inside.

00:22:24.996 --> 00:22:26.496
So, before coming to stage

00:22:26.496 --> 00:22:27.666
today, I commented out

00:22:27.666 --> 00:22:28.586
everything just to see what it

00:22:28.586 --> 00:22:30.456
would look like before.

00:22:30.456 --> 00:22:31.636
And well, let me show you what

00:22:31.636 --> 00:22:32.406
it looks like after.

00:22:33.196 --> 00:22:34.656
So, in the code, I first call

00:22:34.656 --> 00:22:36.506
Draw super, and then I draw my

00:22:36.506 --> 00:22:37.836
custom graphics, and there's a

00:22:37.836 --> 00:22:38.626
reason why I do that.

00:22:39.446 --> 00:22:40.736
So, when I execute the code with

00:22:40.736 --> 00:22:42.376
that modification, all pages

00:22:42.376 --> 00:22:44.136
have this graphical content

00:22:44.136 --> 00:22:44.476
added.

00:22:44.736 --> 00:22:45.836
And what's really nice about

00:22:45.836 --> 00:22:47.386
this is if I attempt to save the

00:22:47.386 --> 00:22:48.896
document or print it, it's

00:22:48.896 --> 00:22:50.156
guaranteed to have that custom

00:22:50.156 --> 00:22:51.626
graphics that I've just put in.

00:22:52.386 --> 00:22:53.306
But I wanted to mention again,

00:22:53.436 --> 00:22:55.636
order is critical because we

00:22:55.636 --> 00:22:57.136
respect the painter's algorithm.

00:22:57.136 --> 00:22:58.836
What that means is whatever you

00:22:58.836 --> 00:22:59.906
draw first, if you draw the

00:22:59.906 --> 00:23:01.506
original content, followed by

00:23:01.506 --> 00:23:02.836
drawing your custom content,

00:23:03.096 --> 00:23:04.336
your custom content will appear

00:23:04.336 --> 00:23:04.696
above.

00:23:05.296 --> 00:23:06.596
If you flip that, if you draw

00:23:06.596 --> 00:23:08.116
your custom content and then you

00:23:08.116 --> 00:23:09.906
draw super, right, the original

00:23:09.906 --> 00:23:11.146
content will be above.

00:23:11.606 --> 00:23:12.846
So, just keep that in mind when

00:23:12.846 --> 00:23:13.766
you're vieing custom drawing.

00:23:13.766 --> 00:23:13.976
All right.

00:23:17.316 --> 00:23:19.596
So, we have talked a lot about

00:23:19.596 --> 00:23:22.596
PDFView, PDFDocument, PDFPage; I

00:23:22.596 --> 00:23:23.646
think it's time we talk about

00:23:23.806 --> 00:23:24.486
Annotations.

00:23:24.736 --> 00:23:25.076
Nicki.

00:23:25.706 --> 00:23:26.500
>> All right, perfect.

00:23:27.516 --> 00:23:31.396
[ Audience Applause ]

00:23:31.896 --> 00:23:32.316
>> All right.

00:23:32.316 --> 00:23:33.736
Let's talk about my favorite

00:23:33.776 --> 00:23:35.086
thing, Annotations.

00:23:35.156 --> 00:23:36.996
First off, we keep saying this

00:23:36.996 --> 00:23:38.096
word Annotations a lot.

00:23:38.096 --> 00:23:38.736
What are these?

00:23:39.226 --> 00:23:40.456
Well, these are interactive

00:23:40.456 --> 00:23:41.776
graphical elements that we can

00:23:41.876 --> 00:23:42.966
add to a PDF document.

00:23:43.806 --> 00:23:45.216
These are things as simple as a

00:23:45.216 --> 00:23:47.676
line or a square, but there's a

00:23:47.676 --> 00:23:48.906
handful of other annotations as

00:23:48.906 --> 00:23:51.036
well, like highlight, underline,

00:23:51.436 --> 00:23:53.346
circles, links, and even

00:23:53.346 --> 00:23:54.656
widgets, which are interactive

00:23:54.656 --> 00:23:55.386
form elements.

00:23:56.076 --> 00:23:58.386
We mentioned earlier that

00:23:58.386 --> 00:23:59.616
Annotations are owned by

00:23:59.616 --> 00:24:00.396
PDFPage.

00:24:00.876 --> 00:24:01.936
So, whenever you create an

00:24:01.936 --> 00:24:03.816
Annotation, you add or remove it

00:24:03.816 --> 00:24:05.146
to and from a PDFPage.

00:24:05.456 --> 00:24:06.846
And then, if your page is in a

00:24:06.846 --> 00:24:08.696
PDFView, whenever you update

00:24:08.696 --> 00:24:10.006
properties on that Annotation,

00:24:10.236 --> 00:24:11.696
we will update it for you in

00:24:11.696 --> 00:24:12.856
real time in the View.

00:24:14.086 --> 00:24:15.726
What's fairly new to PDFKit is

00:24:15.726 --> 00:24:16.986
our universal Annotation

00:24:16.986 --> 00:24:17.366
support.

00:24:17.546 --> 00:24:18.616
Okay. What is this?

00:24:19.226 --> 00:24:20.446
Well, all those annotations that

00:24:20.446 --> 00:24:22.126
I just showed you, those are the

00:24:22.126 --> 00:24:24.256
ones that PDFKit supports, and

00:24:24.256 --> 00:24:25.486
when I say that, I mean, we have

00:24:25.486 --> 00:24:26.946
our own native rendering for

00:24:26.946 --> 00:24:27.956
those annotation types.

00:24:28.046 --> 00:24:29.276
But that doesn't mean you're

00:24:29.276 --> 00:24:31.006
limited to only creating those

00:24:31.006 --> 00:24:32.006
types of annotations.

00:24:32.536 --> 00:24:33.716
With our universal support, you

00:24:33.716 --> 00:24:34.926
can create whatever you want

00:24:35.256 --> 00:24:36.966
because, well, the PDF spec

00:24:37.466 --> 00:24:39.366
defines an annotation as just a

00:24:39.366 --> 00:24:40.766
dictionary of keys and values.

00:24:40.826 --> 00:24:42.256
So, we've gone ahead and

00:24:42.256 --> 00:24:44.006
mimicked that within PDFKit.

00:24:44.396 --> 00:24:46.466
For example, the PDF spec can

00:24:46.466 --> 00:24:47.746
have extensions to it that

00:24:47.746 --> 00:24:49.336
defines all sorts of annotations

00:24:49.336 --> 00:24:50.196
we've never seen before.

00:24:50.896 --> 00:24:52.256
Take the GPS Annotation.

00:24:52.516 --> 00:24:53.766
This can have certain

00:24:53.766 --> 00:24:54.936
properties, coordinates,

00:24:54.936 --> 00:24:56.806
latitude, longitude, and with

00:24:56.806 --> 00:24:58.196
their universal support, we can

00:24:58.196 --> 00:24:59.976
go ahead and set those values on

00:24:59.976 --> 00:25:01.786
our dictionary, and then what

00:25:01.786 --> 00:25:02.656
you see is what you get.

00:25:03.266 --> 00:25:04.546
Whatever you set, we'll go ahead

00:25:04.546 --> 00:25:05.886
and author that into the file

00:25:05.886 --> 00:25:06.756
whenever you write it out.

00:25:06.866 --> 00:25:08.906
Even though the PDFKit might be

00:25:08.906 --> 00:25:10.436
undefined, you'll still be able

00:25:10.436 --> 00:25:11.356
to save it as part of the

00:25:11.356 --> 00:25:12.106
PDFDocument.

00:25:12.516 --> 00:25:14.926
What's new this year is we've

00:25:14.926 --> 00:25:16.426
added an extension to this

00:25:16.426 --> 00:25:18.206
class, which is PDFAnnotation

00:25:18.206 --> 00:25:18.766
utilities.

00:25:19.346 --> 00:25:20.866
This has a handful of category

00:25:20.866 --> 00:25:22.176
methods that make it just that

00:25:22.176 --> 00:25:24.056
much easier to be able to set

00:25:24.056 --> 00:25:25.856
and get the properties for

00:25:25.856 --> 00:25:27.496
annotations that we do support

00:25:27.626 --> 00:25:28.856
or just properties that are

00:25:28.856 --> 00:25:30.086
common amongst the annotations

00:25:30.086 --> 00:25:32.006
in general, like a color or a

00:25:32.006 --> 00:25:32.376
border.

00:25:32.866 --> 00:25:34.636
We'll take a look at our

00:25:34.636 --> 00:25:35.966
annotations again, but let's

00:25:35.966 --> 00:25:37.816
just focus in on one, a line

00:25:37.816 --> 00:25:38.426
annotation.

00:25:39.456 --> 00:25:40.916
We all know that annotations are

00:25:40.916 --> 00:25:42.456
just a bunch of properties, so

00:25:42.456 --> 00:25:43.196
whenever I change the

00:25:43.196 --> 00:25:45.136
properties, here all I've done

00:25:45.136 --> 00:25:46.576
are change my line ending styles

00:25:46.576 --> 00:25:47.506
and my border.

00:25:47.806 --> 00:25:48.816
We can make a simple line

00:25:48.816 --> 00:25:50.086
annotation look different six

00:25:50.086 --> 00:25:50.336
ways.

00:25:51.326 --> 00:25:52.306
So, let's take a look at how we

00:25:52.306 --> 00:25:53.456
actually set those properties.

00:25:54.416 --> 00:25:55.686
So, a line, it needs a start and

00:25:55.686 --> 00:25:57.296
end point, so we'll set that on

00:25:57.296 --> 00:25:58.686
our dictionary using SetValue

00:25:58.686 --> 00:26:00.606
forAnnotationKey with our

00:26:00.606 --> 00:26:01.356
linePointsKey.

00:26:02.566 --> 00:26:03.826
We'll set the line ending styles

00:26:03.826 --> 00:26:05.306
and want a closed arrow on one

00:26:05.306 --> 00:26:06.316
end and an open arrow on the

00:26:06.316 --> 00:26:08.176
other, and then we'll change the

00:26:08.176 --> 00:26:08.526
color.

00:26:08.886 --> 00:26:09.936
We'll change it to red.

00:26:10.546 --> 00:26:12.036
But remember those category

00:26:12.036 --> 00:26:13.386
methods I just talked about,

00:26:13.386 --> 00:26:14.426
let's go ahead and use those to

00:26:14.426 --> 00:26:15.606
do the same exact thing.

00:26:16.766 --> 00:26:17.116
Here we go.

00:26:17.116 --> 00:26:18.416
We're still setting the start

00:26:18.416 --> 00:26:19.486
and end point, the line ending

00:26:19.536 --> 00:26:20.466
styles, and the color.

00:26:20.466 --> 00:26:22.486
And when we compare the two,

00:26:22.806 --> 00:26:24.186
sure, the category methods might

00:26:24.186 --> 00:26:25.416
be a few extra lines of code,

00:26:25.416 --> 00:26:26.746
but it's very clear as to what

00:26:26.746 --> 00:26:27.246
we're doing.

00:26:27.296 --> 00:26:28.836
When we're setting values on the

00:26:28.836 --> 00:26:30.606
dictionary, we're mimicking the

00:26:30.606 --> 00:26:31.906
spec, and the spec can be a

00:26:31.906 --> 00:26:32.746
little confusing.

00:26:32.746 --> 00:26:34.836
To set an array of numbers or

00:26:34.836 --> 00:26:36.236
array of strings for our line

00:26:36.236 --> 00:26:37.386
points and line ending styles,

00:26:38.286 --> 00:26:39.996
that's just, again, confusing.

00:26:40.456 --> 00:26:41.606
With the category methods, it's

00:26:41.606 --> 00:26:42.806
explicit that you're setting the

00:26:42.806 --> 00:26:44.526
start point, the end point, the

00:26:44.526 --> 00:26:45.806
start and line style, and the

00:26:45.806 --> 00:26:46.066
color.

00:26:46.596 --> 00:26:48.606
Just makes life a little bit

00:26:49.356 --> 00:26:49.506
easier.

00:26:49.616 --> 00:26:50.756
Okay. Let's create an

00:26:50.756 --> 00:26:51.386
Annotation.

00:26:51.516 --> 00:26:53.156
Our [inaudible] method takes

00:26:53.186 --> 00:26:55.086
three properties, bounds, type,

00:26:55.086 --> 00:26:56.156
and the dictionary properties.

00:26:56.636 --> 00:26:58.256
Only two of these are required;

00:26:58.556 --> 00:26:59.746
abounds, we need to know where

00:26:59.746 --> 00:27:00.746
it's supposed to be in the page,

00:27:01.136 --> 00:27:01.936
and then a type.

00:27:02.276 --> 00:27:03.426
For here, we're going to create

00:27:03.426 --> 00:27:04.306
a square annotation.

00:27:05.026 --> 00:27:06.346
The properties parameter, we're

00:27:06.346 --> 00:27:07.396
going to leave no for now, but

00:27:07.396 --> 00:27:10.176
I'll get to that in a second.

00:27:10.286 --> 00:27:11.886
Okay. Let's set some properties.

00:27:11.886 --> 00:27:12.906
We'll set the color on it.

00:27:12.906 --> 00:27:13.936
We already know how to do that.

00:27:14.376 --> 00:27:15.476
But we'll set the border as

00:27:15.476 --> 00:27:17.016
well, and I want to touch on

00:27:17.016 --> 00:27:19.356
this PDFBorder object for just a

00:27:19.486 --> 00:27:19.706
second.

00:27:19.926 --> 00:27:21.486
The annotation dictionary is

00:27:21.486 --> 00:27:23.316
just a dictionary of keys and

00:27:23.316 --> 00:27:24.916
values, but some of its values

00:27:24.946 --> 00:27:26.696
can also be dictionaries, and so

00:27:26.696 --> 00:27:28.036
you don't have to go and pull up

00:27:28.036 --> 00:27:29.146
the spec and figure out how

00:27:29.146 --> 00:27:30.086
you're supposed to construct

00:27:30.086 --> 00:27:31.446
this border dictionary value.

00:27:31.706 --> 00:27:32.866
We've already created a support

00:27:32.866 --> 00:27:34.036
class for you, and that's

00:27:34.086 --> 00:27:34.746
PDFBorder.

00:27:35.576 --> 00:27:37.556
We'll set the line width, set to

00:27:37.556 --> 00:27:39.056
our annotation border property,

00:27:39.146 --> 00:27:40.536
and then when we add it to the

00:27:40.536 --> 00:27:41.316
page, it looks a little

00:27:41.316 --> 00:27:42.006
something like this.

00:27:42.346 --> 00:27:43.386
Just have a simple square,

00:27:43.736 --> 00:27:45.126
bottom left corner of our page,

00:27:45.126 --> 00:27:45.756
and it's red.

00:27:46.316 --> 00:27:48.806
Let's take a look at that

00:27:48.806 --> 00:27:50.266
properties parameter though.

00:27:50.266 --> 00:27:51.466
So, what we can do is we can

00:27:51.466 --> 00:27:53.156
kind of prebake a dictionary to

00:27:53.156 --> 00:27:53.706
properties.

00:27:54.216 --> 00:27:55.046
We're going to create a line

00:27:55.046 --> 00:27:56.556
annotation again, and we already

00:27:56.556 --> 00:27:57.856
know it takes line points, line

00:27:57.856 --> 00:27:59.626
ending styles, color, and now

00:27:59.626 --> 00:28:00.036
border.

00:28:00.656 --> 00:28:01.546
So, then, when we [inaudible]

00:28:01.546 --> 00:28:03.786
our annotation, we will, instead

00:28:03.786 --> 00:28:05.216
of using nil for our properties

00:28:05.216 --> 00:28:06.406
parameter use our line

00:28:06.406 --> 00:28:07.316
attributes dictionary.

00:28:08.036 --> 00:28:09.136
So, when we add it to the page,

00:28:09.136 --> 00:28:09.926
it looks a little something like

00:28:09.926 --> 00:28:10.196
this.

00:28:10.806 --> 00:28:12.286
It has a line starting at the

00:28:12.286 --> 00:28:14.046
origin, going up, and to the

00:28:14.046 --> 00:28:15.986
right, has a closed arrow on one

00:28:15.986 --> 00:28:17.296
end, and the color is red.

00:28:17.426 --> 00:28:21.026
I want to touch on this one

00:28:21.026 --> 00:28:22.276
property that annotations has

00:28:22.276 --> 00:28:23.266
which is really powerful.

00:28:23.516 --> 00:28:24.486
It's Action property.

00:28:24.736 --> 00:28:26.496
Just like PDFBorder was a

00:28:26.496 --> 00:28:28.246
wrapper for a dictionary, so is

00:28:28.246 --> 00:28:30.366
PDFAction, so you can do things

00:28:30.366 --> 00:28:32.416
such as jumping to a URL, and

00:28:32.416 --> 00:28:34.306
here we create URL, use that to

00:28:34.306 --> 00:28:36.026
create a PDFAction URL object,

00:28:36.146 --> 00:28:37.256
and then set it on our

00:28:37.256 --> 00:28:37.956
Annotation.

00:28:38.156 --> 00:28:39.196
For here, it's going to be a

00:28:39.196 --> 00:28:40.036
Link Annotation.

00:28:40.596 --> 00:28:42.116
But we can also do things such

00:28:42.116 --> 00:28:43.426
as jumping to a specific point

00:28:43.426 --> 00:28:43.986
in a document.

00:28:44.596 --> 00:28:46.116
We can do that by creating a

00:28:46.116 --> 00:28:47.276
PDFDestination object with the

00:28:47.276 --> 00:28:49.196
page and a point, using that to

00:28:49.196 --> 00:28:50.926
create our PDFAction go to

00:28:50.926 --> 00:28:53.076
action, and then, again, set our

00:28:53.076 --> 00:28:53.746
Action property.

00:28:54.456 --> 00:28:57.176
Okay. Let's talk about widgets.

00:28:57.936 --> 00:28:59.206
Widgets are, again, our

00:28:59.206 --> 00:29:00.806
interactive form elements, but

00:29:00.806 --> 00:29:02.006
these are a little confusing how

00:29:02.006 --> 00:29:03.236
to create, so I want to break it

00:29:03.236 --> 00:29:03.936
down for you guys.

00:29:04.026 --> 00:29:05.886
We have very different flavors

00:29:05.886 --> 00:29:06.346
of widgets.

00:29:06.426 --> 00:29:08.696
These are text widgets, buttons,

00:29:08.696 --> 00:29:09.496
and choice widgets.

00:29:09.966 --> 00:29:11.776
And so PDFKit knows what type of

00:29:11.776 --> 00:29:13.036
widget and interactive element

00:29:13.036 --> 00:29:14.276
to add to your PDFDocument.

00:29:14.616 --> 00:29:15.476
You need to let us know.

00:29:15.846 --> 00:29:17.056
And this is driven by our widget

00:29:17.056 --> 00:29:18.616
field type property to be either

00:29:18.616 --> 00:29:19.766
a text button or choice.

00:29:21.536 --> 00:29:22.626
Even further, some of our

00:29:22.626 --> 00:29:24.036
subtypes have more flavors.

00:29:24.526 --> 00:29:25.816
Like a button, we can have a

00:29:25.816 --> 00:29:27.616
radio button, a check box, or a

00:29:27.616 --> 00:29:29.116
push button, and this is driven

00:29:29.116 --> 00:29:30.346
by our widget control type

00:29:30.346 --> 00:29:30.776
property.

00:29:32.196 --> 00:29:33.666
And same with width or choice

00:29:33.666 --> 00:29:34.066
widgets.

00:29:34.556 --> 00:29:36.176
We have a list box, which is

00:29:36.176 --> 00:29:38.176
like a TableView, or a combo

00:29:38.176 --> 00:29:39.386
box, which is like a dropdown,

00:29:39.526 --> 00:29:40.966
and this is driven by our

00:29:40.966 --> 00:29:42.026
isListChoice property.

00:29:42.486 --> 00:29:44.036
By default, it's going to be a

00:29:44.306 --> 00:29:45.886
list box, but I want to let you

00:29:45.886 --> 00:29:46.656
know that there are two

00:29:46.656 --> 00:29:47.216
different types.

00:29:47.886 --> 00:29:50.176
Let's go ahead and create a

00:29:50.176 --> 00:29:50.416
widget.

00:29:50.416 --> 00:29:51.686
We're going to create a text

00:29:51.686 --> 00:29:52.016
widget.

00:29:52.686 --> 00:29:54.236
So, our subtype is going to be

00:29:54.576 --> 00:29:56.326
widget, but then when we start

00:29:56.326 --> 00:29:57.366
our properties, we know that we

00:29:57.366 --> 00:29:58.286
have to set the widget field

00:29:58.286 --> 00:29:59.156
type, and we're going to set it

00:29:59.156 --> 00:29:59.646
to be text.

00:29:59.746 --> 00:30:00.636
Then, we'll set a few other

00:30:00.636 --> 00:30:00.976
properties.

00:30:01.376 --> 00:30:03.146
We have our background color,

00:30:03.376 --> 00:30:05.246
font, and a string value, and

00:30:05.246 --> 00:30:06.606
then when we add it to a page,

00:30:06.606 --> 00:30:07.736
it'll look a little something

00:30:07.736 --> 00:30:08.026
like this.

00:30:08.026 --> 00:30:10.076
We have our text widget about

00:30:10.076 --> 00:30:11.366
the middle of the page, the blue

00:30:11.366 --> 00:30:13.136
background, and our string,

00:30:13.176 --> 00:30:15.016
WWDC2017.

00:30:15.656 --> 00:30:16.746
And if this was in a View,

00:30:16.746 --> 00:30:17.796
whenever I tapped on it or

00:30:17.796 --> 00:30:19.056
clicked on it, it would be fully

00:30:19.056 --> 00:30:19.596
interactive.

00:30:22.066 --> 00:30:23.836
Okay. Let's take a look at a

00:30:23.876 --> 00:30:26.016
real world example using

00:30:26.016 --> 00:30:26.416
widgets.

00:30:27.226 --> 00:30:28.656
So, I've already gone ahead and

00:30:28.766 --> 00:30:30.966
taken a PDF, which is going to

00:30:30.966 --> 00:30:32.266
be a survey, and I've added some

00:30:32.266 --> 00:30:33.626
interactive form elements to it.

00:30:34.156 --> 00:30:35.786
Let's take a look at what this

00:30:35.786 --> 00:30:36.186
looks like.

00:30:36.976 --> 00:30:37.686
So, here it is.

00:30:37.686 --> 00:30:39.856
I have text fields, which have

00:30:39.916 --> 00:30:41.876
the blue backgrounds, and then

00:30:42.106 --> 00:30:43.476
buttons, which have my gray

00:30:43.476 --> 00:30:45.146
backgrounds, and since we're all

00:30:45.146 --> 00:30:46.796
widget wizards, we all know that

00:30:46.796 --> 00:30:48.346
our text fields will have widget

00:30:48.346 --> 00:30:50.146
field type text; buttons will

00:30:50.146 --> 00:30:51.266
have widget field type button,

00:30:51.526 --> 00:30:53.176
and then even further, our

00:30:53.176 --> 00:30:54.416
buttons will have the proper

00:30:54.416 --> 00:30:56.826
widget control type set.

00:30:57.376 --> 00:30:58.446
So, we have our radio buttons,

00:30:58.746 --> 00:31:00.976
our check boxes, and then a push

00:31:00.976 --> 00:31:01.896
button down here, which is

00:31:01.896 --> 00:31:03.426
supposed to reset my entire

00:31:03.426 --> 00:31:03.726
form.

00:31:04.206 --> 00:31:05.546
There are some things though

00:31:05.546 --> 00:31:06.776
that aren't really working right

00:31:06.876 --> 00:31:07.496
with this PDF.

00:31:07.646 --> 00:31:09.426
For example, when I go to enter

00:31:09.426 --> 00:31:12.686
my date, which is June 9, you

00:31:12.686 --> 00:31:13.456
can see, it doesn't have the

00:31:13.456 --> 00:31:14.726
spacing as I would expect.

00:31:15.186 --> 00:31:16.256
And also, I can enter more

00:31:16.256 --> 00:31:18.066
characters than what the PDF

00:31:18.116 --> 00:31:19.236
says that I should be able to

00:31:19.236 --> 00:31:19.526
enter.

00:31:19.906 --> 00:31:20.996
That's not right.

00:31:21.546 --> 00:31:22.596
Also, when I select my radio

00:31:22.596 --> 00:31:24.396
buttons, I can select both at

00:31:24.396 --> 00:31:25.056
the same time.

00:31:25.056 --> 00:31:26.126
That's not really how radio

00:31:26.126 --> 00:31:27.146
buttons are supposed to behave.

00:31:28.186 --> 00:31:29.546
And finally, my button at the

00:31:29.546 --> 00:31:31.366
very bottom, when I click it, it

00:31:31.366 --> 00:31:32.436
does nothing.

00:31:32.886 --> 00:31:33.936
Well, let's go ahead and change

00:31:33.936 --> 00:31:35.896
all of that.

00:31:36.066 --> 00:31:37.466
Let's go to our date field.

00:31:37.506 --> 00:31:38.766
So, remember the things that

00:31:38.766 --> 00:31:39.186
were wrong.

00:31:39.186 --> 00:31:40.346
It was the spacing and the

00:31:40.346 --> 00:31:41.496
number of characters that we can

00:31:41.496 --> 00:31:41.786
enter.

00:31:42.026 --> 00:31:43.276
Well, we'll start with the easy

00:31:43.276 --> 00:31:44.416
one, and that's the number of

00:31:44.416 --> 00:31:44.966
characters.

00:31:45.586 --> 00:31:47.246
This is driven by our maximum

00:31:47.246 --> 00:31:47.876
length property.

00:31:48.046 --> 00:31:49.936
So, we'll set it to 5, 2 for the

00:31:49.936 --> 00:31:51.696
month, 1 for the slash and 1 for

00:31:51.696 --> 00:31:51.976
the day.

00:31:51.976 --> 00:31:53.526
So, now, the spacing.

00:31:53.526 --> 00:31:55.116
That seems a little hard to do.

00:31:55.646 --> 00:31:56.916
But actually, with PDFKit, it

00:31:56.916 --> 00:31:57.516
really isn't.

00:31:57.886 --> 00:31:58.946
All it is is a property that we

00:31:58.946 --> 00:32:00.366
have to set, which is our

00:32:00.366 --> 00:32:01.566
hasComb property.

00:32:02.436 --> 00:32:04.136
So, this property, what it does

00:32:04.136 --> 00:32:06.096
is if it's set, it will divide

00:32:06.096 --> 00:32:07.656
our text widget into an equal

00:32:07.656 --> 00:32:10.076
number of partitions or combs to

00:32:10.206 --> 00:32:11.426
the number that is set on our

00:32:11.426 --> 00:32:12.346
maximum length field.

00:32:12.576 --> 00:32:14.906
So, this property only works in

00:32:14.996 --> 00:32:16.676
conjunction with maximum length.

00:32:17.116 --> 00:32:17.446
All right.

00:32:17.536 --> 00:32:18.216
That's one's done.

00:32:18.286 --> 00:32:19.416
On to our radio buttons.

00:32:20.746 --> 00:32:22.206
The issue here is that they

00:32:22.206 --> 00:32:23.336
weren't behaving like radio

00:32:23.336 --> 00:32:23.706
buttons.

00:32:25.056 --> 00:32:26.806
So, all our widgets, they

00:32:26.806 --> 00:32:27.916
already have their own

00:32:27.916 --> 00:32:29.296
identifier, and this is driven

00:32:29.296 --> 00:32:30.756
by our field name property.

00:32:31.246 --> 00:32:32.426
So, if you want to group widgets

00:32:32.426 --> 00:32:33.786
together, they need to have the

00:32:33.786 --> 00:32:34.596
same field name.

00:32:35.046 --> 00:32:37.266
Let's do that.

00:32:37.336 --> 00:32:38.636
We'll have our yes button be

00:32:38.636 --> 00:32:39.266
Question 1.

00:32:39.846 --> 00:32:41.616
And then, our no button also be

00:32:41.616 --> 00:32:42.206
Question 1.

00:32:43.456 --> 00:32:44.296
I'm going to point out that it

00:32:44.296 --> 00:32:45.206
doesn't matter what these

00:32:45.206 --> 00:32:46.676
strings are; all that matters is

00:32:46.676 --> 00:32:47.596
that the two are the same.

00:32:48.036 --> 00:32:49.506
But if I were to run this code

00:32:49.506 --> 00:32:50.916
and select a radio button, all

00:32:50.916 --> 00:32:52.156
of them would turn on or all of

00:32:52.156 --> 00:32:53.486
them would turn off.

00:32:53.486 --> 00:32:55.116
That's because we don't know, we

00:32:55.116 --> 00:32:55.676
don't have a way to

00:32:55.676 --> 00:32:57.246
differentiate the yes button

00:32:57.246 --> 00:32:58.016
from the no button.

00:32:58.066 --> 00:32:59.856
They're each going to have their

00:32:59.856 --> 00:33:01.406
own unique kind of sub

00:33:01.406 --> 00:33:02.036
identifier.

00:33:02.646 --> 00:33:04.186
We can do that by setting the

00:33:04.186 --> 00:33:05.126
button widget state string

00:33:05.126 --> 00:33:05.556
property.

00:33:06.406 --> 00:33:08.186
Let's do that now.

00:33:08.186 --> 00:33:09.526
We'll set our yes button to yes

00:33:09.656 --> 00:33:12.046
and our no button to no.

00:33:12.616 --> 00:33:13.696
But again, it doesn't matter

00:33:13.696 --> 00:33:14.566
what these strings are.

00:33:15.006 --> 00:33:17.646
I can have this one be Nicki and

00:33:17.736 --> 00:33:18.616
this one be Brower.

00:33:19.676 --> 00:33:20.756
All that matters is that they're

00:33:20.756 --> 00:33:21.106
different.

00:33:21.656 --> 00:33:22.916
So, now, we've grouped them

00:33:22.916 --> 00:33:24.516
together with our field name

00:33:24.516 --> 00:33:25.906
property, but we've also set

00:33:25.906 --> 00:33:27.356
them apart with our button

00:33:27.356 --> 00:33:28.136
widget state string.

00:33:28.636 --> 00:33:32.146
Last but not least, we have our

00:33:32.146 --> 00:33:32.886
reset button.

00:33:33.526 --> 00:33:35.636
But again, we want to reset our

00:33:35.636 --> 00:33:37.086
entire form back to its original

00:33:37.086 --> 00:33:37.426
state.

00:33:38.086 --> 00:33:40.016
And just like PDFAction URL and

00:33:40.016 --> 00:33:41.866
PDFAction go to, we have

00:33:41.866 --> 00:33:43.366
PDFActionResetForm.

00:33:44.016 --> 00:33:45.916
Go ahead and create that now.

00:33:47.416 --> 00:33:49.966
Well, how this action works is

00:33:49.966 --> 00:33:51.476
it takes an array of strings,

00:33:52.196 --> 00:33:53.396
strings that represent field

00:33:53.396 --> 00:33:54.896
names like the ones we just set

00:33:54.896 --> 00:33:56.856
on the radio button, and the

00:33:56.856 --> 00:33:58.046
default behavior is when this

00:33:58.046 --> 00:33:59.376
action is performed, it will

00:33:59.376 --> 00:34:00.986
reset all of the widgets that

00:34:00.986 --> 00:34:03.016
are associated with my array of

00:34:03.016 --> 00:34:03.886
string field names.

00:34:04.346 --> 00:34:05.486
But I don't want to have to go

00:34:05.486 --> 00:34:06.586
through and figure out the field

00:34:06.586 --> 00:34:07.616
names of all my widgets.

00:34:07.616 --> 00:34:08.856
That just is too much work for

00:34:08.856 --> 00:34:09.005
me.

00:34:09.005 --> 00:34:10.466
So, I'm going to kind of change

00:34:10.466 --> 00:34:12.326
the behavior of this action, and

00:34:12.326 --> 00:34:13.366
I'm going to do that by setting

00:34:13.366 --> 00:34:14.795
our fields included are clear

00:34:14.795 --> 00:34:15.766
property to false.

00:34:16.246 --> 00:34:18.136
So, with just one line of code,

00:34:18.136 --> 00:34:19.346
I've kind of done two different

00:34:19.346 --> 00:34:19.676
things.

00:34:20.426 --> 00:34:21.826
I've now changed the behavior to

00:34:21.826 --> 00:34:23.196
where when I press -- when I

00:34:23.196 --> 00:34:25.126
perform this action, all of the

00:34:25.126 --> 00:34:27.036
widgets not included in my list

00:34:27.036 --> 00:34:28.266
are going to be cleared, and

00:34:28.266 --> 00:34:29.966
also, I haven't set any on my

00:34:29.966 --> 00:34:30.346
list.

00:34:30.906 --> 00:34:31.946
So, now, when I perform this,

00:34:32.266 --> 00:34:33.576
every widget in my document will

00:34:33.576 --> 00:34:34.716
be cleared, which is exactly

00:34:34.716 --> 00:34:35.266
what I wanted.

00:34:35.516 --> 00:34:37.366
And then, of course, we have to

00:34:37.366 --> 00:34:38.456
set the action property on our

00:34:38.456 --> 00:34:40.255
button, and that's it, just

00:34:40.255 --> 00:34:40.985
three lines of code.

00:34:41.436 --> 00:34:43.516
So, let's rerun this and fill

00:34:43.516 --> 00:34:44.706
out our survey from the very

00:34:44.706 --> 00:34:45.726
beginning with everything

00:34:45.726 --> 00:34:46.416
working properly.

00:34:47.056 --> 00:34:49.326
Here we go; we have our name,

00:34:49.966 --> 00:34:52.505
which is Nicki Brower; our date,

00:34:52.505 --> 00:34:53.926
which is June 9.

00:34:54.406 --> 00:34:55.606
We have the spacing that we

00:34:55.606 --> 00:34:57.426
wanted, and I don't know if you

00:34:57.426 --> 00:34:58.386
can hear, but I'm pressing a

00:34:58.386 --> 00:34:59.496
button and I can't enter more

00:34:59.496 --> 00:35:01.496
characters than what is desired,

00:35:01.496 --> 00:35:02.586
which is what we wanted.

00:35:03.356 --> 00:35:04.096
Have you been to a music

00:35:04.096 --> 00:35:04.856
festival before?

00:35:04.986 --> 00:35:06.516
No. Wait, yes, I have.

00:35:07.346 --> 00:35:08.176
Which of the following music

00:35:08.176 --> 00:35:09.296
festivals have you attended?

00:35:09.436 --> 00:35:10.776
I've been to iFestival,

00:35:10.776 --> 00:35:12.946
Swiftopia, but not Applepalooza.

00:35:14.016 --> 00:35:15.436
Give one recommendation to

00:35:15.436 --> 00:35:17.046
improve a music festival.

00:35:17.916 --> 00:35:21.026
All music festivals should be

00:35:21.026 --> 00:35:21.366
free.

00:35:21.366 --> 00:35:23.816
And I want to point out that our

00:35:23.816 --> 00:35:25.346
text widgets by default are

00:35:25.346 --> 00:35:26.926
single line, but if you want

00:35:26.926 --> 00:35:28.116
them to be multiline and have

00:35:28.116 --> 00:35:29.186
this word wrapping that I have

00:35:29.186 --> 00:35:30.736
here, all it is, is a simple

00:35:30.736 --> 00:35:31.906
category method that you have to

00:35:31.906 --> 00:35:32.216
set.

00:35:32.856 --> 00:35:34.436
And so now, with this PDF, I

00:35:34.436 --> 00:35:35.696
could save it, and it'll have

00:35:35.696 --> 00:35:36.806
all the values that I want, and

00:35:36.806 --> 00:35:38.176
I could send it to people, and

00:35:38.176 --> 00:35:39.186
they can see my values.

00:35:39.666 --> 00:35:41.886
Or if I want, I can still go

00:35:41.886 --> 00:35:43.336
ahead and clear my entire PDF

00:35:43.576 --> 00:35:45.326
with my Obliviate button at the

00:35:45.326 --> 00:35:45.916
very bottom.

00:35:46.346 --> 00:35:47.716
So, I'll press it, and we're

00:35:47.716 --> 00:35:48.856
back to the very beginning,

00:35:49.896 --> 00:35:51.226
which is the behavior that we

00:35:51.226 --> 00:35:51.636
wanted.

00:35:52.346 --> 00:35:53.586
So, I showed you with PDFKit, it

00:35:53.586 --> 00:35:54.996
really isn't that hard to take a

00:35:55.036 --> 00:35:57.126
simple PDF, add some widgets,

00:35:57.126 --> 00:35:58.276
and now you have a fully

00:35:58.276 --> 00:35:59.366
interactive one that you can

00:35:59.366 --> 00:36:00.396
share with whoever you want.

00:36:00.496 --> 00:36:02.126
And I don't know about you guys,

00:36:02.126 --> 00:36:03.666
but I think that's pretty cool.

00:36:03.666 --> 00:36:04.976
So, we're going to go ahead, oh!

00:36:05.516 --> 00:36:08.436
[ Audience Applause ]

00:36:08.936 --> 00:36:09.726
So, we're going to go back to

00:36:09.726 --> 00:36:10.686
Jeremy, and he's going to talk

00:36:10.686 --> 00:36:11.976
about a few best practices.

00:36:16.416 --> 00:36:16.856
>> Perfect.

00:36:17.316 --> 00:36:18.476
Thank you very much, Nicki.

00:36:19.276 --> 00:36:21.116
So, this year, Annotations have

00:36:21.116 --> 00:36:22.596
greatly improved, and we've also

00:36:23.006 --> 00:36:24.956
fixed a lot of issues in PDFKit

00:36:24.956 --> 00:36:26.376
and greatly improved other

00:36:26.376 --> 00:36:27.276
functionality too.

00:36:27.696 --> 00:36:29.096
And with our experience, we

00:36:29.096 --> 00:36:30.076
really want to give you a couple

00:36:30.076 --> 00:36:30.936
of recommendations that you

00:36:30.936 --> 00:36:32.326
could take away and improve on

00:36:32.326 --> 00:36:33.196
your code today.

00:36:33.786 --> 00:36:35.346
So, a couple of recommendations

00:36:35.346 --> 00:36:35.816
straight away.

00:36:36.216 --> 00:36:38.076
Use annotations for any sort of

00:36:38.076 --> 00:36:40.396
interactive elements or complex

00:36:40.396 --> 00:36:41.786
graphics that you want to do at

00:36:41.786 --> 00:36:42.346
run time.

00:36:42.686 --> 00:36:44.256
We've greatly put effort into

00:36:44.256 --> 00:36:45.576
optimizing these graphics, so

00:36:45.576 --> 00:36:46.696
it's a great option to take

00:36:46.696 --> 00:36:47.276
advantage of.

00:36:47.656 --> 00:36:48.746
And of course, if you are going

00:36:48.746 --> 00:36:50.516
to be mutating PDFAnnotations,

00:36:50.986 --> 00:36:51.956
take advantage of that

00:36:51.956 --> 00:36:53.786
PDFAnnotationUtilities category

00:36:53.786 --> 00:36:54.866
class extension.

00:36:55.266 --> 00:36:56.536
The reason why, as Nicki said,

00:36:56.536 --> 00:36:57.736
is that these are statically

00:36:57.736 --> 00:36:58.536
typed functions.

00:36:58.816 --> 00:37:00.046
You don't have to worry that a

00:37:00.046 --> 00:37:01.196
line point is an array of

00:37:01.236 --> 00:37:01.696
points.

00:37:01.696 --> 00:37:03.046
Actually, a line point is just a

00:37:03.146 --> 00:37:05.186
CG point, a pair of CG points.

00:37:05.516 --> 00:37:06.396
It's really straightforward.

00:37:07.026 --> 00:37:08.546
Finally, if you want to do a

00:37:08.546 --> 00:37:10.506
custom PDFPage drawing, it is

00:37:10.506 --> 00:37:12.186
required that your code be

00:37:12.376 --> 00:37:13.246
thread-safe.

00:37:13.566 --> 00:37:14.786
The reason why is, again, we've

00:37:14.786 --> 00:37:15.976
put so much effort into

00:37:15.976 --> 00:37:17.576
optimizing PDFKit to draw as

00:37:17.576 --> 00:37:19.086
fast as possible, we want to

00:37:19.086 --> 00:37:20.256
take advantage of all the cores

00:37:20.256 --> 00:37:21.236
that our different platforms

00:37:21.236 --> 00:37:21.486
have.

00:37:21.926 --> 00:37:23.216
And since many of our platforms

00:37:23.216 --> 00:37:25.146
are multi-core, it's absolutely

00:37:25.146 --> 00:37:26.766
possible that two threads might

00:37:26.766 --> 00:37:28.316
be drawing your PDFPage maybe in

00:37:28.316 --> 00:37:30.396
the main view and PDFPage as a

00:37:30.396 --> 00:37:31.766
thumbnail at the same time.

00:37:32.186 --> 00:37:33.276
So, make sure that your code is

00:37:33.276 --> 00:37:33.846
thread-safe.

00:37:34.296 --> 00:37:35.636
And along these lines, if you

00:37:35.636 --> 00:37:37.386
are doing custom PDFPage

00:37:37.386 --> 00:37:39.116
drawing, make sure that you call

00:37:39.116 --> 00:37:40.556
super at the appropriate time.

00:37:40.686 --> 00:37:41.796
If you want to put your graphics

00:37:41.796 --> 00:37:43.236
on top of the existing content,

00:37:43.536 --> 00:37:44.896
call super, and then execute

00:37:44.896 --> 00:37:45.896
your custom drawing code.

00:37:46.236 --> 00:37:47.216
Or if you want to put your

00:37:47.216 --> 00:37:48.396
custom graphics behind that

00:37:48.426 --> 00:37:50.306
content, do your custom code

00:37:50.306 --> 00:37:51.966
first, and then execute super

00:37:51.966 --> 00:37:52.456
last.

00:37:53.146 --> 00:37:54.706
Now, what we don't recommend,

00:37:54.816 --> 00:37:57.056
moving forward, is because

00:37:57.136 --> 00:37:58.976
PDFView derives from UIView and

00:37:58.976 --> 00:38:00.166
NSView on each platform

00:38:00.166 --> 00:38:02.426
respectively, those view classes

00:38:02.426 --> 00:38:04.166
give you the ability to call a

00:38:04.166 --> 00:38:06.006
method, call set needs display

00:38:06.006 --> 00:38:07.386
or some mutation of that method.

00:38:07.666 --> 00:38:08.536
And that method is really

00:38:08.536 --> 00:38:10.096
expensive because refreshing all

00:38:10.096 --> 00:38:11.936
of the content at once is just

00:38:12.036 --> 00:38:12.576
expensive.

00:38:12.926 --> 00:38:13.816
So, try to avoid it.

00:38:13.816 --> 00:38:14.876
Again, if you want to do custom

00:38:14.876 --> 00:38:15.956
graphics, take a look at

00:38:15.956 --> 00:38:16.576
Annotations.

00:38:17.276 --> 00:38:19.266
Finally, don't mutate PDFPage

00:38:19.266 --> 00:38:20.866
properties at the same time from

00:38:20.866 --> 00:38:21.446
different threads.

00:38:21.736 --> 00:38:23.806
A good example is don't rotate

00:38:23.806 --> 00:38:25.356
the PDFPage while you're drawing

00:38:25.356 --> 00:38:26.676
a thumbnail at the same time.

00:38:27.016 --> 00:38:28.406
There might be some undefined

00:38:28.526 --> 00:38:30.406
visual effects that might happen

00:38:30.546 --> 00:38:31.446
during those cases.

00:38:32.116 --> 00:38:33.596
And finally, this is specific to

00:38:33.596 --> 00:38:35.266
Mac OS only, but try to stay

00:38:35.266 --> 00:38:36.936
away from the deprecated drawing

00:38:36.936 --> 00:38:37.346
methods.

00:38:37.786 --> 00:38:39.076
The reason why goes all the way

00:38:39.076 --> 00:38:40.586
back to multi-threaded drawing.

00:38:40.966 --> 00:38:42.236
So, we build these really

00:38:42.236 --> 00:38:43.456
complicated contexts so you

00:38:43.456 --> 00:38:44.286
could draw your beautiful

00:38:44.286 --> 00:38:45.916
graphics into, and we want to

00:38:45.916 --> 00:38:46.816
give you these contexts

00:38:46.896 --> 00:38:47.746
explicitly.

00:38:47.746 --> 00:38:48.976
That's what the new signatures

00:38:48.976 --> 00:38:49.326
are for.

00:38:49.636 --> 00:38:50.836
The old signatures had an

00:38:50.886 --> 00:38:52.316
implicit context, and we want

00:38:52.316 --> 00:38:53.366
you to avoid that as much as

00:38:53.366 --> 00:38:53.806
possible.

00:38:54.516 --> 00:38:56.096
So, these are bits and pieces

00:38:56.096 --> 00:38:56.836
that we recommend.

00:38:57.866 --> 00:38:59.366
But looking at PDFKit again, we

00:38:59.366 --> 00:39:01.076
want to emphasize it's really

00:39:01.226 --> 00:39:02.626
easy for app developers to get

00:39:02.626 --> 00:39:04.186
started with PDFHandling today.

00:39:04.186 --> 00:39:05.956
They could use PDFView just to

00:39:05.956 --> 00:39:07.226
look at a document, or you could

00:39:07.226 --> 00:39:08.906
totally author a brand new one,

00:39:09.156 --> 00:39:10.216
or you could take an existing

00:39:10.216 --> 00:39:11.266
document, add a bunch of new

00:39:11.266 --> 00:39:12.226
content inside.

00:39:12.866 --> 00:39:15.176
It's also really easy to read,

00:39:15.306 --> 00:39:16.886
modify, and write these files,

00:39:16.886 --> 00:39:17.796
and you could write it with the

00:39:17.796 --> 00:39:19.596
latest encryption supported by

00:39:19.596 --> 00:39:20.886
the PDF specification.

00:39:21.706 --> 00:39:22.966
Of course, when you do write

00:39:22.966 --> 00:39:24.416
these files with that latest PDF

00:39:24.416 --> 00:39:26.026
specification, you could author

00:39:26.026 --> 00:39:27.236
these files with these really

00:39:27.236 --> 00:39:28.746
awesome form field widgets.

00:39:28.746 --> 00:39:30.046
So, that means fully interactive

00:39:30.046 --> 00:39:31.266
forms that you could fill out

00:39:31.266 --> 00:39:32.866
for your business needs or

00:39:32.986 --> 00:39:34.406
whatever other needs you have.

00:39:35.346 --> 00:39:37.106
Finally, just by adopting

00:39:37.106 --> 00:39:38.626
PDFView, don't forget, you get

00:39:38.686 --> 00:39:40.186
rich accessibility improvements

00:39:40.186 --> 00:39:41.396
that we've worked really hard on

00:39:41.396 --> 00:39:43.136
this year for both platforms.

00:39:43.496 --> 00:39:44.916
So, your users will really take

00:39:44.916 --> 00:39:46.646
advantage of that if they have

00:39:46.646 --> 00:39:48.136
any accessibility needs, and you

00:39:48.136 --> 00:39:49.106
don't have to worry about any

00:39:49.106 --> 00:39:50.226
sort of custom programming.

00:39:50.906 --> 00:39:51.906
Nicki and I want to thank you

00:39:51.906 --> 00:39:53.216
very, very much for coming to

00:39:53.216 --> 00:39:53.956
today's session.

00:39:54.016 --> 00:39:55.166
If you have any questions at

00:39:55.166 --> 00:39:56.216
all, [applause] thank you.

00:39:56.436 --> 00:39:57.776
Please visit our website, or

00:39:57.776 --> 00:39:58.786
come down to the podium.

00:39:58.786 --> 00:39:59.796
We'll gladly answer any

00:39:59.796 --> 00:40:00.306
questions.

00:40:00.616 --> 00:40:02.336
Have a fantastic rest of WWDC.

00:40:02.336 --> 00:40:02.926
Thank you again.

00:40:03.056 --> 00:40:03.346
>> Thank you.