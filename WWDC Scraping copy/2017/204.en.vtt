WEBVTT

00:00:07.516 --> 00:00:16.500
[ Cheers ]

00:00:23.516 --> 00:00:25.896
[ Applause ]

00:00:26.396 --> 00:00:27.726
>> Good afternoon everybody!

00:00:28.096 --> 00:00:30.256
Welcome to WWDC2017.

00:00:30.936 --> 00:00:32.206
My name is David Duncan.

00:00:32.206 --> 00:00:34.536
I'll be joined by Raj Ramamurphy

00:00:34.536 --> 00:00:35.626
[phonetic] and Kyle Sluder

00:00:35.626 --> 00:00:35.693
[phonetic].

00:00:35.693 --> 00:00:37.506
And we're here to talk to you

00:00:37.806 --> 00:00:39.946
about updating your app for iOS

00:00:40.016 --> 00:00:40.476
11.

00:00:42.176 --> 00:00:44.076
So first a little agenda for

00:00:44.076 --> 00:00:46.416
what we're going to talk about

00:00:46.416 --> 00:00:46.906
today.

00:00:47.816 --> 00:00:48.966
The first thing that I'm going

00:00:48.966 --> 00:00:50.116
to be discussing with you is

00:00:50.366 --> 00:00:52.486
adopting new functionality in UI

00:00:52.486 --> 00:00:55.586
kits bars; UI navigation bar, UI

00:00:55.586 --> 00:00:58.426
tab bar, UI toolbar, and UI

00:00:58.426 --> 00:00:59.086
search bar.

00:00:59.086 --> 00:01:00.736
And we're going to talk to you

00:01:00.736 --> 00:01:02.216
about how these can update your

00:01:02.216 --> 00:01:04.135
app to the new looks that we've

00:01:04.135 --> 00:01:06.056
introduced throughout iOS 11.

00:01:07.266 --> 00:01:09.956
Next Kyle will come up and talk

00:01:09.956 --> 00:01:11.116
to you a bit about managing

00:01:11.116 --> 00:01:13.116
margins and insets, changes that

00:01:13.116 --> 00:01:14.656
we've made to UI scroll view and

00:01:14.656 --> 00:01:17.816
table view will come after that,

00:01:17.816 --> 00:01:21.286
and we're going to use all that

00:01:21.286 --> 00:01:22.186
to show you how you can make

00:01:22.186 --> 00:01:22.686
your app better.

00:01:23.256 --> 00:01:25.086
So let's start by taking a look

00:01:25.086 --> 00:01:26.936
at the files app.

00:01:27.616 --> 00:01:29.896
So if you've gotten the chance

00:01:29.896 --> 00:01:31.616
to install the beta and take a

00:01:31.616 --> 00:01:33.176
look at the files app, you'll

00:01:33.176 --> 00:01:35.586
see some changes that it's

00:01:35.586 --> 00:01:37.586
taking advantage of from UI kit.

00:01:38.126 --> 00:01:39.636
You can see that giant, large

00:01:39.636 --> 00:01:41.126
title view up there showing the

00:01:41.126 --> 00:01:42.116
browse feature.

00:01:42.926 --> 00:01:43.986
You've got a search bar right

00:01:43.986 --> 00:01:45.246
below it that has a bit of a

00:01:45.246 --> 00:01:46.446
different appearance from any

00:01:46.486 --> 00:01:47.596
search bar you've probably seen

00:01:47.596 --> 00:01:48.526
before.

00:01:49.206 --> 00:01:51.266
Now the tab bar actually has

00:01:51.266 --> 00:01:53.066
some changes, but you won't see

00:01:53.066 --> 00:01:54.466
them here so let's go ahead and

00:01:54.466 --> 00:01:56.696
rotate this to landscape.

00:01:57.136 --> 00:01:58.496
We've got this brand new

00:01:58.496 --> 00:02:00.416
appearance for the tab bar, both

00:02:00.416 --> 00:02:02.876
in landscape and on iPad, where

00:02:02.876 --> 00:02:04.556
we show the icon and the text

00:02:04.556 --> 00:02:05.316
side by side.

00:02:05.316 --> 00:02:08.436
And in particular on iPhones the

00:02:08.436 --> 00:02:10.106
icon is smaller and the tab bar

00:02:10.106 --> 00:02:11.366
is smaller to give a bit more

00:02:11.366 --> 00:02:12.006
room vertically.

00:02:12.706 --> 00:02:13.836
We're going to discuss how you

00:02:13.836 --> 00:02:15.576
can customize the icons for

00:02:15.636 --> 00:02:19.066
landscape and tab bar as well.

00:02:19.066 --> 00:02:20.796
Now things getting smaller can

00:02:20.796 --> 00:02:22.826
sometimes be a problem for users

00:02:22.826 --> 00:02:24.156
that are hard of vision or

00:02:24.156 --> 00:02:25.176
otherwise need a little

00:02:25.176 --> 00:02:26.166
assistance to see things

00:02:26.166 --> 00:02:26.636
clearer.

00:02:27.546 --> 00:02:28.856
We've got you covered there too.

00:02:28.856 --> 00:02:32.116
If you turn on larger text then

00:02:32.116 --> 00:02:34.156
when you long press on one of

00:02:34.156 --> 00:02:35.996
these items -- this is in tab

00:02:35.996 --> 00:02:38.356
bar, tool bar, and navigation

00:02:38.356 --> 00:02:40.606
bar -- we'll put up this HUD

00:02:40.606 --> 00:02:43.026
that shows you clearly what the

00:02:43.026 --> 00:02:45.206
text is and what the icon is.

00:02:45.206 --> 00:02:47.586
And now I'm going to explain how

00:02:47.586 --> 00:02:48.806
both of these features can be

00:02:48.806 --> 00:02:50.066
adopted in your app and they're

00:02:50.066 --> 00:02:50.976
really, really easy.

00:02:52.476 --> 00:02:55.126
So there's this class called UI

00:02:55.126 --> 00:02:56.776
Bar Item that you probably never

00:02:56.886 --> 00:02:58.216
thought much about because it's

00:02:58.216 --> 00:03:00.406
actually the super class of two

00:03:00.406 --> 00:03:02.586
important bar item classes in UI

00:03:02.586 --> 00:03:05.136
kit; UI tab bar item and UI bar

00:03:05.136 --> 00:03:05.666
button item.

00:03:05.756 --> 00:03:09.286
And so to customize the image in

00:03:09.286 --> 00:03:11.766
landscape on that tab bar all

00:03:11.766 --> 00:03:12.946
you have to do is set this

00:03:12.946 --> 00:03:14.836
property, the landscape image

00:03:14.836 --> 00:03:17.166
phone property, on any UI tab

00:03:17.236 --> 00:03:18.906
bar items that you're placing in

00:03:18.906 --> 00:03:19.656
your tab bars.

00:03:19.656 --> 00:03:21.446
And of course we'll have support

00:03:21.446 --> 00:03:22.456
for this in storyboards and

00:03:22.456 --> 00:03:24.116
everywhere else, but that's how

00:03:24.116 --> 00:03:25.096
you would customize that.

00:03:25.096 --> 00:03:26.126
And there are also some inset

00:03:26.126 --> 00:03:27.226
properties in case you need

00:03:27.256 --> 00:03:27.536
those.

00:03:28.306 --> 00:03:30.876
For that HUD image we've got

00:03:30.876 --> 00:03:33.436
another related property called

00:03:33.436 --> 00:03:35.736
the Large Content Size Image.

00:03:36.746 --> 00:03:38.856
Now you can set this, put a big

00:03:38.856 --> 00:03:40.186
image in there, it'll appear in

00:03:40.186 --> 00:03:42.726
the HUD, but if you're using PDF

00:03:42.726 --> 00:03:45.236
assets in your asset catalogue

00:03:45.406 --> 00:03:46.386
it's even easier.

00:03:46.966 --> 00:03:49.676
All you have to do is set that

00:03:49.786 --> 00:03:53.156
preserve PDF data and we'll

00:03:53.156 --> 00:03:55.566
automatically pick up the PDF

00:03:55.566 --> 00:03:57.036
data, resize it larger, and

00:03:57.036 --> 00:03:58.406
display it in that HUD without

00:03:58.406 --> 00:03:59.516
you having to do anything to

00:03:59.516 --> 00:03:59.976
your assets.

00:04:04.086 --> 00:04:06.426
So if you wanted to learn more

00:04:06.426 --> 00:04:07.636
about accessibility features

00:04:07.636 --> 00:04:08.976
such as the HUD and how you can

00:04:08.976 --> 00:04:10.526
pick that up, there's the What's

00:04:10.526 --> 00:04:11.796
New in Accessibility session

00:04:11.796 --> 00:04:12.946
happening this Wednesday.

00:04:12.946 --> 00:04:14.356
I recommend you go there to

00:04:14.356 --> 00:04:15.386
learn all about what's new in

00:04:15.386 --> 00:04:17.016
accessibility in iOS 11.

00:04:17.016 --> 00:04:19.886
And so let's talk next about

00:04:19.886 --> 00:04:20.956
navigation bar.

00:04:21.026 --> 00:04:22.836
How do we get those large titles

00:04:22.836 --> 00:04:24.296
that appeared in the files app

00:04:24.296 --> 00:04:25.286
and other apps across the

00:04:25.286 --> 00:04:25.516
system?

00:04:26.156 --> 00:04:28.926
So first there's a new property

00:04:28.966 --> 00:04:31.436
on UI navigation bar, prefers

00:04:31.436 --> 00:04:32.296
large titles.

00:04:32.856 --> 00:04:34.566
If you set this to "true" on any

00:04:34.566 --> 00:04:36.686
given navigation bar then you'll

00:04:36.686 --> 00:04:38.486
start seeing large titles all

00:04:38.486 --> 00:04:39.486
across the system -- all across

00:04:39.486 --> 00:04:40.136
your application.

00:04:41.356 --> 00:04:42.796
Now you might be wondering; what

00:04:42.796 --> 00:04:44.326
do these other three words that

00:04:44.326 --> 00:04:45.556
I've got here on this slide --

00:04:45.556 --> 00:04:46.476
maybe they're a little hard to

00:04:46.476 --> 00:04:48.026
see, but automatic, always, and

00:04:48.026 --> 00:04:48.906
never -- what does that have to

00:04:48.906 --> 00:04:49.296
do with?

00:04:49.946 --> 00:04:51.776
Well, there's a second property

00:04:51.776 --> 00:04:52.996
to control when these appear;

00:04:52.996 --> 00:04:55.176
the large title display mode.

00:04:55.886 --> 00:04:57.346
This is what easily allows you

00:04:57.346 --> 00:04:58.546
to determine for each view

00:04:58.546 --> 00:04:59.846
control you push onto a nav

00:04:59.886 --> 00:05:01.126
controller or to a navigation

00:05:01.126 --> 00:05:03.436
bar stack when the large title

00:05:03.436 --> 00:05:03.976
appears.

00:05:04.386 --> 00:05:05.516
And let me show you how that

00:05:05.516 --> 00:05:05.866
works.

00:05:07.326 --> 00:05:09.046
So we turned on large titles on

00:05:09.046 --> 00:05:11.286
this navigation bar and we put

00:05:11.286 --> 00:05:12.116
an item on there.

00:05:12.456 --> 00:05:14.346
It defaults to automatic and

00:05:14.346 --> 00:05:16.456
automatic means whatever the

00:05:16.456 --> 00:05:18.506
current state is, whoever asked

00:05:18.506 --> 00:05:20.436
last for that bar to appear,

00:05:20.776 --> 00:05:21.496
keep it.

00:05:22.046 --> 00:05:23.326
Since nothing else is on the

00:05:23.326 --> 00:05:24.646
stack and we turned on large

00:05:24.646 --> 00:05:26.226
titles, we have a large title.

00:05:26.226 --> 00:05:28.226
But let's go ahead and push a

00:05:28.226 --> 00:05:29.516
navigation item that we don't

00:05:29.516 --> 00:05:30.896
want to display that large title

00:05:30.896 --> 00:05:32.996
on and we just set the large

00:05:32.996 --> 00:05:34.326
title display mode to "never"

00:05:34.326 --> 00:05:36.526
and the large title goes away.

00:05:38.076 --> 00:05:38.876
Now again we'll push an

00:05:38.876 --> 00:05:40.506
"automatic," preserve whatever

00:05:40.506 --> 00:05:42.126
we have now, and so we don't get

00:05:42.126 --> 00:05:43.926
a large title, and then we'll

00:05:43.926 --> 00:05:46.286
push "always," and now the large

00:05:46.286 --> 00:05:47.026
title is back.

00:05:47.026 --> 00:05:48.546
And again, we can push an

00:05:48.546 --> 00:05:50.796
"automatic" and we're all there.

00:05:51.236 --> 00:05:54.266
Simple. So there are two more

00:05:54.266 --> 00:05:55.736
things we want to talk about on

00:05:55.736 --> 00:05:58.706
navigation item and the first is

00:05:58.706 --> 00:06:00.226
how to integrate the search

00:06:00.226 --> 00:06:01.486
controller and the new search

00:06:01.486 --> 00:06:02.916
bar look with your navigation

00:06:02.916 --> 00:06:03.256
bars.

00:06:04.456 --> 00:06:06.316
There's a single property again,

00:06:06.556 --> 00:06:07.726
navigation item search

00:06:07.726 --> 00:06:08.256
controller.

00:06:08.716 --> 00:06:09.476
You assign your search

00:06:09.476 --> 00:06:10.526
controller to the navigation

00:06:10.526 --> 00:06:13.476
item and you're done.

00:06:13.586 --> 00:06:14.556
The search bar is placed

00:06:14.556 --> 00:06:17.326
correctly and it behaves just as

00:06:17.326 --> 00:06:19.436
it does in a lot of our apps.

00:06:19.616 --> 00:06:20.636
Now if you've actually gotten a

00:06:20.636 --> 00:06:22.486
chance to play with "files" or

00:06:22.486 --> 00:06:23.696
"mail" or some of the others

00:06:23.696 --> 00:06:24.806
you'll notice that sometimes

00:06:24.936 --> 00:06:26.396
that search bar stays pegged

00:06:26.396 --> 00:06:27.436
when you scroll, sometimes it

00:06:27.436 --> 00:06:28.186
does not.

00:06:28.266 --> 00:06:29.516
In particular in "files" it

00:06:29.516 --> 00:06:31.216
stays pegged and that's

00:06:31.216 --> 00:06:33.346
controlled by this "hide search

00:06:33.386 --> 00:06:35.266
bar when scrolling" property.

00:06:36.126 --> 00:06:37.276
It defaults to "true."

00:06:37.276 --> 00:06:38.686
So, for example in "mail" it

00:06:38.686 --> 00:06:40.916
scrolls away, but in "files"

00:06:40.916 --> 00:06:41.936
they've turned it off.

00:06:41.936 --> 00:06:43.346
And so it stays pegged.

00:06:43.346 --> 00:06:44.396
You can always reach the search

00:06:44.396 --> 00:06:46.726
bar and it looks great.

00:06:47.356 --> 00:06:49.796
So how does all this work?

00:06:49.796 --> 00:06:51.106
A little bit of behind the

00:06:51.106 --> 00:06:52.166
scenes on some of these things.

00:06:52.956 --> 00:06:54.156
And the first thing you should

00:06:54.156 --> 00:06:55.676
know is that a lot of these

00:06:55.676 --> 00:06:56.806
interactions are actually

00:06:56.806 --> 00:06:58.626
mediated by UI navigation

00:06:58.626 --> 00:06:59.106
controller.

00:06:59.566 --> 00:07:01.226
So if you're taking the

00:07:01.226 --> 00:07:03.066
navigation bar and assembling

00:07:03.066 --> 00:07:04.346
kind of the entire push and pop

00:07:04.346 --> 00:07:05.746
experience yourself, and not

00:07:05.746 --> 00:07:07.476
many people do, but if you are

00:07:07.936 --> 00:07:08.946
you're not going to get some of

00:07:08.946 --> 00:07:09.626
these features.

00:07:10.006 --> 00:07:11.636
In particular you're not going

00:07:11.636 --> 00:07:12.576
to get the search controller

00:07:12.576 --> 00:07:13.186
integration.

00:07:13.216 --> 00:07:15.536
You're not going to get refresh

00:07:15.536 --> 00:07:17.636
controls hoisting and you're not

00:07:17.636 --> 00:07:18.586
going to get rubber bending.

00:07:18.586 --> 00:07:19.956
Rubber bending is when you start

00:07:19.956 --> 00:07:21.456
pulling down, that large title

00:07:21.456 --> 00:07:23.496
grows larger, and responds to

00:07:23.496 --> 00:07:24.086
that scroller.

00:07:25.666 --> 00:07:27.606
So that's navigation bar,

00:07:27.606 --> 00:07:29.386
navigation controller, and those

00:07:29.386 --> 00:07:30.816
new large title features.

00:07:31.846 --> 00:07:33.716
But while we're here making all

00:07:33.716 --> 00:07:34.826
of these changes we figured

00:07:34.826 --> 00:07:36.016
let's actually make some other

00:07:36.016 --> 00:07:37.346
changes to help your lives be

00:07:37.456 --> 00:07:38.636
easier as well.

00:07:38.636 --> 00:07:42.756
And so now in iOS 11, UI toolbar

00:07:42.756 --> 00:07:45.846
and UI navigation bar both have

00:07:45.846 --> 00:07:47.596
intricate and express support

00:07:47.596 --> 00:07:47.976
for auto layout.

00:07:48.516 --> 00:07:54.106
[ Applause ]

00:07:54.606 --> 00:07:56.266
So what this means is that your

00:07:56.266 --> 00:07:57.706
custom bar button items, your

00:07:57.706 --> 00:07:59.216
custom title of use, can now use

00:07:59.216 --> 00:08:01.126
layout to express their size to

00:08:01.126 --> 00:08:03.276
us and get the proper layout

00:08:03.276 --> 00:08:04.466
that you would otherwise expect.

00:08:05.326 --> 00:08:06.726
Now there are a few things to

00:08:06.726 --> 00:08:07.346
keep in mind.

00:08:07.926 --> 00:08:08.966
One of them is you kind of want

00:08:08.966 --> 00:08:10.216
to keep your constraints inside

00:08:10.216 --> 00:08:10.776
of that view.

00:08:11.286 --> 00:08:12.546
So if you give us a custom title

00:08:12.546 --> 00:08:13.496
view you want to make sure that

00:08:13.496 --> 00:08:15.356
any constraints there only

00:08:15.356 --> 00:08:16.946
reference that title view and

00:08:16.946 --> 00:08:19.566
any of its sub-views.

00:08:19.756 --> 00:08:21.776
And this one is kind of big, but

00:08:21.776 --> 00:08:23.246
it's kind of worth bringing out,

00:08:23.416 --> 00:08:25.136
is that when you use auto layout

00:08:25.136 --> 00:08:26.216
we also assume you know what

00:08:26.216 --> 00:08:28.746
you're doing [laughter] and the

00:08:28.746 --> 00:08:30.866
reason why I bring this up is

00:08:30.866 --> 00:08:32.866
because otherwise you end up in

00:08:32.866 --> 00:08:34.586
this case where you have to --

00:08:34.885 --> 00:08:36.586
you get zero sized views.

00:08:37.446 --> 00:08:39.155
So how do you avoid these zero

00:08:39.155 --> 00:08:39.876
sized views?

00:08:40.196 --> 00:08:43.155
Well, UI navigation bar and UI

00:08:43.155 --> 00:08:44.316
toolbar provide positioning

00:08:44.316 --> 00:08:44.876
information.

00:08:45.796 --> 00:08:47.366
Zero sized views end up becoming

00:08:47.366 --> 00:08:48.806
because you have some ambiguous

00:08:48.806 --> 00:08:49.606
constraint layout.

00:08:49.606 --> 00:08:51.246
And so the position is taken

00:08:51.246 --> 00:08:51.886
care of for you.

00:08:51.886 --> 00:08:52.946
You won't get your views shoved

00:08:52.946 --> 00:08:54.086
up in an upper left corner

00:08:54.086 --> 00:08:56.366
somewhere, but you still have to

00:08:56.366 --> 00:08:57.866
provide sizing for us.

00:08:57.946 --> 00:08:59.406
And there are three ways you can

00:08:59.406 --> 00:09:00.256
do that.

00:09:01.136 --> 00:09:03.096
You could add constraints for

00:09:03.096 --> 00:09:04.376
width and height; perfectly

00:09:04.376 --> 00:09:05.756
legal, perfectly legitimate.

00:09:05.756 --> 00:09:07.536
Do that. You can put whatever

00:09:07.536 --> 00:09:08.966
else you want in there and

00:09:08.966 --> 00:09:09.686
you're golden.

00:09:11.076 --> 00:09:12.376
You could also implement

00:09:12.446 --> 00:09:13.816
intrinsic content size.

00:09:13.816 --> 00:09:15.626
That'll also give us as much

00:09:15.626 --> 00:09:16.856
information as we need.

00:09:17.376 --> 00:09:18.446
You go along with the content

00:09:18.446 --> 00:09:19.336
compression hugging and

00:09:19.336 --> 00:09:20.586
compression resistance and

00:09:20.586 --> 00:09:21.706
you're set.

00:09:22.736 --> 00:09:24.566
But finally, the most easy way,

00:09:24.566 --> 00:09:26.566
for most people, is to actually

00:09:26.566 --> 00:09:27.586
make sure that all of your

00:09:27.586 --> 00:09:29.286
sub-views are properly connected

00:09:29.286 --> 00:09:30.486
and set up with auto layout.

00:09:30.486 --> 00:09:32.826
And what that means is let's say

00:09:32.826 --> 00:09:34.956
you have a custom title view and

00:09:35.016 --> 00:09:36.276
you have a label and a button in

00:09:36.276 --> 00:09:38.416
there, if you want to make sure

00:09:38.416 --> 00:09:39.726
that you get the proper

00:09:39.726 --> 00:09:41.426
horizontal width of that title

00:09:41.426 --> 00:09:43.556
view you just need to make sure

00:09:43.556 --> 00:09:45.426
that there are constraints set

00:09:45.426 --> 00:09:46.716
up between those labels and

00:09:46.716 --> 00:09:48.146
buttons such that the leading

00:09:48.146 --> 00:09:50.156
and trailing edge, or the width,

00:09:50.246 --> 00:09:51.936
of that title view is defined in

00:09:51.936 --> 00:09:53.046
terms of those two views.

00:09:54.276 --> 00:09:56.266
And so that's how you can use

00:09:56.326 --> 00:09:59.006
auto layout to add precise

00:09:59.006 --> 00:10:00.706
control to the size of your

00:10:00.706 --> 00:10:02.006
custom title views and bar

00:10:02.006 --> 00:10:02.706
button items.

00:10:03.436 --> 00:10:05.446
Now, to demonstrate all the

00:10:05.446 --> 00:10:06.656
things we've talked about today

00:10:06.656 --> 00:10:07.596
we bring up Raj Ramamurphy to

00:10:07.596 --> 00:10:07.966
give you a demo.

00:10:08.516 --> 00:10:16.246
[ Applause ]

00:10:16.746 --> 00:10:17.396
>> Thanks David.

00:10:17.766 --> 00:10:19.986
So as David just explained, we

00:10:19.986 --> 00:10:21.956
have a bunch of great new API in

00:10:22.056 --> 00:10:23.916
iOS 11 for these new, large

00:10:23.916 --> 00:10:24.696
navigation bars.

00:10:25.346 --> 00:10:26.326
I'm going to walk you through

00:10:26.326 --> 00:10:28.226
updating an app for iOS 11.

00:10:29.246 --> 00:10:30.166
So here's a sample app we're

00:10:30.166 --> 00:10:31.176
going to be working with today.

00:10:31.176 --> 00:10:32.826
It's a pretty simple app called

00:10:32.826 --> 00:10:33.586
"Trail Diary."

00:10:34.036 --> 00:10:35.276
It's just a diary of some trails

00:10:35.276 --> 00:10:35.776
I visited.

00:10:36.636 --> 00:10:37.846
So here we are in the main view

00:10:37.846 --> 00:10:38.936
controller, which I called the

00:10:38.936 --> 00:10:40.016
"memory view controller."

00:10:40.656 --> 00:10:42.056
Now, if I tap on one of these

00:10:42.056 --> 00:10:43.666
cells you'll notice I get a

00:10:43.666 --> 00:10:44.766
detail view controller.

00:10:45.216 --> 00:10:46.586
This contains a photo, a

00:10:46.586 --> 00:10:47.736
description, and some

00:10:47.736 --> 00:10:48.646
information about this.

00:10:49.726 --> 00:10:50.776
There's also a way to add

00:10:50.776 --> 00:10:52.046
comments, and we're going to get

00:10:52.046 --> 00:10:52.986
into that a little bit later,

00:10:53.486 --> 00:10:55.276
but for now let's start updating

00:10:55.276 --> 00:10:56.436
this app for iOS 11.

00:10:57.316 --> 00:10:58.616
One of the first things I'd like

00:10:58.616 --> 00:11:00.686
to do is introduce support in

00:11:00.686 --> 00:11:02.096
this application for those

00:11:02.096 --> 00:11:03.396
beautiful, new large titles.

00:11:04.076 --> 00:11:05.136
So let's go ahead and do that.

00:11:06.066 --> 00:11:07.826
We'll go over to the navigation

00:11:08.076 --> 00:11:08.976
-- or sorry -- to the memory

00:11:08.976 --> 00:11:10.876
view controller here and we're

00:11:10.876 --> 00:11:11.726
going to get the navigation

00:11:11.726 --> 00:11:11.976
controller.

00:11:17.186 --> 00:11:19.836
Get the navigation bar and set

00:11:20.056 --> 00:11:22.256
the "prefers large titles"

00:11:22.256 --> 00:11:24.056
property on the navigation bar.

00:11:24.996 --> 00:11:26.516
Now, when we set this property

00:11:26.886 --> 00:11:29.216
we get large titles everywhere.

00:11:29.916 --> 00:11:31.836
And if I recompile and rerun the

00:11:31.836 --> 00:11:34.716
application, head back over to

00:11:35.296 --> 00:11:37.106
it, and bring up the memory view

00:11:37.106 --> 00:11:39.316
controller you'll notice we have

00:11:39.316 --> 00:11:41.356
this beautiful, large title, and

00:11:41.516 --> 00:11:42.616
since we already have a refresh

00:11:42.616 --> 00:11:44.206
control that gets hoisted into

00:11:44.206 --> 00:11:45.686
the navigation bar and we get

00:11:45.686 --> 00:11:46.926
the rubber banding experience --

00:11:47.126 --> 00:11:48.036
everything's looking great.

00:11:48.876 --> 00:11:50.386
Now, "prefers large titles" will

00:11:50.386 --> 00:11:52.266
turn large titles on everywhere.

00:11:52.656 --> 00:11:54.506
So if I tap back into the detail

00:11:54.506 --> 00:11:55.946
view controller you'll see we

00:11:55.946 --> 00:11:57.546
get a really nice transition and

00:11:57.546 --> 00:11:58.386
we have the detail view

00:11:58.386 --> 00:11:59.716
controller showing a large title

00:11:59.716 --> 00:12:00.126
as well.

00:12:01.126 --> 00:12:02.656
Now this is great, but sometimes

00:12:02.656 --> 00:12:03.876
the large title isn't what you

00:12:03.876 --> 00:12:04.816
want everywhere.

00:12:05.356 --> 00:12:06.966
And so for that, as David

00:12:06.966 --> 00:12:08.786
explained, we have the

00:12:08.786 --> 00:12:10.856
navigation item property, "large

00:12:10.856 --> 00:12:11.706
title display mode."

00:12:12.956 --> 00:12:15.416
So in this view I'd like to show

00:12:15.416 --> 00:12:16.596
the standard inline title.

00:12:16.916 --> 00:12:18.356
So let's update this view

00:12:18.356 --> 00:12:19.816
controller to show that.

00:12:21.246 --> 00:12:22.936
If I go over to the detail view

00:12:22.936 --> 00:12:24.186
controller and set its

00:12:24.186 --> 00:12:26.346
navigation items' large title

00:12:26.346 --> 00:12:28.506
display mode to "never," as

00:12:28.506 --> 00:12:29.786
David showed you before with the

00:12:29.786 --> 00:12:33.596
stack, if we recompile and rerun

00:12:33.596 --> 00:12:35.446
the application, we'll start out

00:12:35.446 --> 00:12:37.996
with the large title, but if I

00:12:37.996 --> 00:12:39.586
push view controller now we have

00:12:39.586 --> 00:12:41.216
this standard inline title and

00:12:41.216 --> 00:12:42.136
you get a great transition

00:12:42.136 --> 00:12:43.416
between them and everything's

00:12:43.416 --> 00:12:44.166
looking really great.

00:12:45.326 --> 00:12:46.066
So that's how to use the

00:12:46.066 --> 00:12:48.246
navigation item properties for

00:12:48.246 --> 00:12:50.536
showing the large title, but I'd

00:12:50.536 --> 00:12:51.806
also like to add search to this

00:12:51.806 --> 00:12:52.426
application.

00:12:53.256 --> 00:12:54.496
So I've already gone ahead and

00:12:54.496 --> 00:12:55.576
configured a search controller

00:12:55.576 --> 00:12:57.066
instance and I just need to show

00:12:57.066 --> 00:12:57.986
the search bar in the

00:12:57.986 --> 00:12:58.566
application.

00:12:59.246 --> 00:13:00.486
As you may have seen, we're

00:13:00.486 --> 00:13:01.696
showing search bars in the

00:13:01.696 --> 00:13:04.056
navigation in iOS 11.

00:13:04.346 --> 00:13:05.476
So let's add that appearance.

00:13:06.556 --> 00:13:08.516
If I go over to the memory view

00:13:08.516 --> 00:13:10.476
controller again and set the

00:13:10.476 --> 00:13:12.396
navigation item's search

00:13:12.396 --> 00:13:13.696
controller property to our

00:13:13.696 --> 00:13:15.586
instance -- in this case it's

00:13:15.586 --> 00:13:16.926
just called "search controller."

00:13:20.606 --> 00:13:22.646
Recompile and rerun the

00:13:22.646 --> 00:13:22.976
application.

00:13:27.116 --> 00:13:28.006
You'll notice when the

00:13:28.006 --> 00:13:29.226
application comes up into the

00:13:29.226 --> 00:13:31.386
memory view controller, we still

00:13:31.386 --> 00:13:33.796
have the large title, but now if

00:13:33.796 --> 00:13:35.236
we pull down we get this

00:13:35.236 --> 00:13:36.726
beautiful new search appearance.

00:13:37.546 --> 00:13:38.816
So this app is looking really

00:13:38.816 --> 00:13:39.166
great.

00:13:39.766 --> 00:13:42.606
So that's just how to update

00:13:42.606 --> 00:13:44.236
some of your bars for the new

00:13:44.236 --> 00:13:45.496
appearance in iOS 11.

00:13:46.096 --> 00:13:47.496
Now I'd like to bring Kyle

00:13:47.496 --> 00:13:49.016
Sluder up who's going to talk to

00:13:49.016 --> 00:13:50.706
you about margins, insets, and

00:13:50.706 --> 00:13:50.976
scroll views.

00:13:51.516 --> 00:13:56.666
[ Applause ]

00:13:57.166 --> 00:13:58.166
>> Well done.

00:13:59.346 --> 00:13:59.976
Thank you Raj.

00:14:04.496 --> 00:14:06.156
So in iOS 11 we've made a number

00:14:06.156 --> 00:14:07.546
of improvements to give you more

00:14:07.546 --> 00:14:09.396
information and better control

00:14:09.396 --> 00:14:10.766
over how your views lay out

00:14:10.766 --> 00:14:11.756
their user interfaces.

00:14:12.606 --> 00:14:13.806
And let's start by talking about

00:14:13.806 --> 00:14:14.756
layout margins.

00:14:15.426 --> 00:14:16.756
Layout margins are a portion of

00:14:16.756 --> 00:14:19.146
the interior of your views that

00:14:19.186 --> 00:14:21.506
UI kit gives you as a guide to

00:14:21.506 --> 00:14:22.666
layout your content and give a

00:14:22.666 --> 00:14:24.706
little breathing room between it

00:14:24.706 --> 00:14:25.556
and the surrounding user

00:14:25.556 --> 00:14:26.406
interface elements.

00:14:26.986 --> 00:14:28.116
And we give this information to

00:14:28.116 --> 00:14:28.906
you in two ways.

00:14:29.356 --> 00:14:30.966
The first is a UI layout guide

00:14:30.966 --> 00:14:32.736
object, which you can use with

00:14:32.736 --> 00:14:34.546
auto layout to position your

00:14:34.586 --> 00:14:35.026
content.

00:14:36.316 --> 00:14:38.116
The second is a set of edge

00:14:38.116 --> 00:14:38.636
insets.

00:14:38.756 --> 00:14:40.086
And you can read these from your

00:14:40.086 --> 00:14:41.886
view and write to them to

00:14:41.886 --> 00:14:43.206
customize your layout margins.

00:14:44.606 --> 00:14:45.926
In iOS 11 we're adding a new

00:14:45.926 --> 00:14:47.656
property; directional layout

00:14:47.656 --> 00:14:48.196
margins.

00:14:48.786 --> 00:14:49.946
And this allows you to express

00:14:49.946 --> 00:14:50.996
the layout margins in your

00:14:50.996 --> 00:14:52.566
views, not just in left and

00:14:52.566 --> 00:14:54.126
right terms, but in leading and

00:14:54.176 --> 00:14:54.556
trailing.

00:14:55.556 --> 00:14:57.296
And these two properties are in

00:14:57.296 --> 00:14:58.086
sync with each other.

00:14:58.086 --> 00:15:00.676
The left property is in sync

00:15:00.676 --> 00:15:01.566
with the leading, when you're

00:15:01.566 --> 00:15:03.106
writing in an LTR or left to

00:15:03.106 --> 00:15:04.196
right language.

00:15:04.526 --> 00:15:05.526
And the right property and the

00:15:05.526 --> 00:15:06.686
trailing property are in sync.

00:15:07.356 --> 00:15:09.106
So I can do something like write

00:15:09.106 --> 00:15:10.436
a value to the trailing property

00:15:10.436 --> 00:15:12.456
of this view, which will cause

00:15:12.456 --> 00:15:15.056
its layout to adjust, and then

00:15:15.056 --> 00:15:15.896
when I'm running in a right to

00:15:15.896 --> 00:15:17.806
left language that trailing

00:15:18.096 --> 00:15:19.516
space will be put on the left

00:15:19.516 --> 00:15:21.576
side of the view and my layout

00:15:21.576 --> 00:15:22.946
code can then read it from the

00:15:22.946 --> 00:15:23.706
left property of the layout

00:15:23.706 --> 00:15:23.956
margin.

00:15:24.516 --> 00:15:30.546
[ Applause ]

00:15:31.046 --> 00:15:32.046
You may also be familiar with a

00:15:32.046 --> 00:15:33.336
behavior that has existed since

00:15:33.336 --> 00:15:34.596
we introduced layout margins

00:15:34.596 --> 00:15:36.296
where adding a view to a view

00:15:36.296 --> 00:15:38.196
controller would fix its layout

00:15:38.196 --> 00:15:40.086
margins to UI kit defined

00:15:40.086 --> 00:15:40.656
values.

00:15:42.516 --> 00:15:44.596
Well starting in iOS 11 these

00:15:44.596 --> 00:15:46.236
are no longer fixed values.

00:15:46.556 --> 00:15:47.736
They're actually minimums.

00:15:48.326 --> 00:15:49.776
And we communicate the size of

00:15:49.776 --> 00:15:51.276
these values to you with this

00:15:51.276 --> 00:15:53.106
new property, system minimum

00:15:53.106 --> 00:15:54.106
layout margins.

00:15:54.586 --> 00:15:55.806
And you can change your view's

00:15:55.806 --> 00:15:57.616
layout margins to any greater

00:15:57.616 --> 00:15:58.976
value, no changes needed.

00:15:59.516 --> 00:16:03.976
[ Applause ]

00:16:04.476 --> 00:16:05.976
But we went one step further and

00:16:05.976 --> 00:16:07.826
we added another new property on

00:16:07.826 --> 00:16:09.496
view controller; view respects

00:16:09.496 --> 00:16:11.096
system minimum layout margins.

00:16:11.456 --> 00:16:14.086
If you set this to "false" you

00:16:14.086 --> 00:16:15.156
can actually change your layout

00:16:15.156 --> 00:16:16.276
margins to whatever value you

00:16:16.276 --> 00:16:18.276
want, including zero, and you

00:16:18.276 --> 00:16:19.546
can have full width content in

00:16:19.546 --> 00:16:21.256
any view including those that

00:16:21.256 --> 00:16:21.926
are managed by a view

00:16:21.926 --> 00:16:22.346
controller.

00:16:25.256 --> 00:16:27.256
Since iOS 7 we've had these

00:16:27.256 --> 00:16:29.306
translucent bars throughout the

00:16:29.306 --> 00:16:30.746
operating system and we've

00:16:30.746 --> 00:16:31.966
encouraged you to draw your

00:16:31.966 --> 00:16:33.486
content through those bars, as

00:16:33.486 --> 00:16:34.396
you can see happening here in

00:16:34.396 --> 00:16:35.036
the photos app.

00:16:36.146 --> 00:16:37.206
The way that you do this is

00:16:37.206 --> 00:16:38.596
using the edges for extended

00:16:38.596 --> 00:16:40.016
layout property on UI view

00:16:40.016 --> 00:16:40.476
controller.

00:16:41.096 --> 00:16:42.326
And what this does is it causes

00:16:42.326 --> 00:16:44.096
container view controllers to

00:16:44.096 --> 00:16:46.676
size your views underneath the

00:16:46.676 --> 00:16:47.216
bars.

00:16:48.026 --> 00:16:50.016
By default it applies to all

00:16:50.016 --> 00:16:53.176
edges and we communicate to you

00:16:53.436 --> 00:16:55.186
the size of the overhanging bars

00:16:55.616 --> 00:16:57.176
via these two properties; top

00:16:57.176 --> 00:16:58.556
layout guide and bottom layout

00:16:58.556 --> 00:16:58.806
guide.

00:16:59.986 --> 00:17:01.176
Starting in iOS 11 we're

00:17:01.176 --> 00:17:02.916
deprecating these properties and

00:17:02.916 --> 00:17:03.836
replacing them with a new, more

00:17:03.836 --> 00:17:05.396
powerful construct that we call

00:17:05.396 --> 00:17:05.816
the "safe area."

00:17:10.215 --> 00:17:11.726
The safe area is a way of

00:17:11.726 --> 00:17:13.226
describing the portion of your

00:17:13.226 --> 00:17:14.826
view that isn't occluded by any

00:17:14.906 --> 00:17:15.476
content.

00:17:16.276 --> 00:17:17.826
It's available to you as a set

00:17:17.826 --> 00:17:20.695
of insets or as a UI layout

00:17:20.695 --> 00:17:21.306
guide object.

00:17:22.185 --> 00:17:24.116
And on TV it incorporates a very

00:17:24.116 --> 00:17:26.866
useful bit of information called

00:17:26.866 --> 00:17:28.226
the "over scan compensation

00:17:28.226 --> 00:17:28.796
insets."

00:17:29.056 --> 00:17:30.736
So any view on the screen can

00:17:30.736 --> 00:17:32.606
layout its content and make sure

00:17:32.606 --> 00:17:33.836
that it isn't overlapped by the

00:17:33.836 --> 00:17:35.126
physical bezel of the

00:17:35.126 --> 00:17:35.676
television.

00:17:36.176 --> 00:17:38.156
Now if you have a custom

00:17:38.156 --> 00:17:39.726
container view controller, you

00:17:39.726 --> 00:17:41.176
might be adding your own bars

00:17:41.486 --> 00:17:43.506
and you can increase the size of

00:17:43.846 --> 00:17:45.096
the -- excuse me -- you can

00:17:45.096 --> 00:17:46.916
increase the size of the safe

00:17:46.916 --> 00:17:49.096
area insets via this new

00:17:49.096 --> 00:17:51.036
property; additional safe area

00:17:51.036 --> 00:17:51.666
insets.

00:17:52.246 --> 00:17:53.616
And if any of your ancestor view

00:17:53.616 --> 00:17:55.396
controllers change their size of

00:17:55.396 --> 00:17:57.416
their safe area insets you will

00:17:57.416 --> 00:17:58.666
get a call back in two different

00:17:58.666 --> 00:17:59.056
ways.

00:17:59.276 --> 00:18:01.066
Every view can get safe area

00:18:01.066 --> 00:18:02.566
insets to change and view

00:18:02.566 --> 00:18:03.906
controllers can get view safe

00:18:03.906 --> 00:18:05.226
area insets to change.

00:18:06.896 --> 00:18:07.816
[applause] Thank you.

00:18:08.456 --> 00:18:10.456
[ Applause ]

00:18:10.896 --> 00:18:12.576
So one really common view that's

00:18:12.576 --> 00:18:14.086
used with UI view controller is

00:18:14.086 --> 00:18:14.746
UI scroll view.

00:18:15.436 --> 00:18:17.026
And in this little sample here I

00:18:17.026 --> 00:18:18.286
have some text that's inside of

00:18:18.286 --> 00:18:19.926
the UI scroll view and contained

00:18:19.926 --> 00:18:21.636
within a navigation controller.

00:18:22.766 --> 00:18:24.386
Now traditionally navigation

00:18:24.386 --> 00:18:26.706
controllers would impart a

00:18:26.706 --> 00:18:28.806
content inset to the scroll

00:18:28.806 --> 00:18:30.296
views of their topmost view

00:18:30.296 --> 00:18:30.766
controller.

00:18:31.786 --> 00:18:33.156
We're making a really big change

00:18:33.156 --> 00:18:34.886
here in iOS 11 and we're no

00:18:34.886 --> 00:18:36.566
longer populating the content

00:18:36.566 --> 00:18:37.596
inset property through scroll

00:18:37.596 --> 00:18:37.876
views.

00:18:38.386 --> 00:18:40.356
Instead we've added a new

00:18:40.356 --> 00:18:42.176
property, adjusted content

00:18:42.176 --> 00:18:44.536
inset, that includes the sum of

00:18:44.536 --> 00:18:46.476
the content inset and any

00:18:46.476 --> 00:18:48.096
overlap from container view

00:18:48.096 --> 00:18:48.716
controllers.

00:18:49.876 --> 00:18:51.376
This means you can use the

00:18:51.376 --> 00:18:52.856
content inset property for

00:18:52.856 --> 00:18:54.196
whatever purposes are

00:18:54.196 --> 00:18:54.886
appropriate for your

00:18:54.886 --> 00:18:56.356
application, such as this

00:18:56.416 --> 00:18:58.436
additional information about

00:18:58.436 --> 00:19:00.976
this text here, and we won't

00:19:00.976 --> 00:19:01.456
change it.

00:19:02.066 --> 00:19:02.886
And you don't have to worry

00:19:02.886 --> 00:19:04.266
about saving and restoring any

00:19:04.266 --> 00:19:05.906
UI kit provided values and

00:19:05.906 --> 00:19:07.236
having content underlapping

00:19:07.486 --> 00:19:08.816
navigation bars or the status

00:19:08.816 --> 00:19:08.936
bar.

00:19:09.516 --> 00:19:15.046
[ Applause ]

00:19:15.546 --> 00:19:16.986
You may be familiar with our

00:19:16.986 --> 00:19:18.466
auto layout support in UI scroll

00:19:18.466 --> 00:19:20.436
view that lets you dictate how

00:19:20.436 --> 00:19:21.806
big the scrollable region of

00:19:21.806 --> 00:19:23.286
your scroll view is by

00:19:23.286 --> 00:19:25.446
constraining sub-views to the

00:19:25.446 --> 00:19:26.536
scroll view itself.

00:19:27.176 --> 00:19:28.406
And we've added a couple of UI

00:19:28.406 --> 00:19:30.056
layout guide objects that make

00:19:30.136 --> 00:19:32.026
your layout more clear and more

00:19:32.026 --> 00:19:33.436
expressive and more powerful.

00:19:33.986 --> 00:19:35.756
The first is a UI layout guide

00:19:35.756 --> 00:19:37.056
object called the frame layout

00:19:37.096 --> 00:19:37.406
guide.

00:19:37.816 --> 00:19:39.216
And this layout guide

00:19:39.266 --> 00:19:41.096
corresponds to the position and

00:19:41.096 --> 00:19:42.486
size of your scroll view in

00:19:42.486 --> 00:19:44.636
screen space, which means you

00:19:44.636 --> 00:19:45.976
can do things like constrain the

00:19:45.976 --> 00:19:47.126
sub-view, like this page

00:19:47.126 --> 00:19:48.476
indicator, and it will stay

00:19:48.596 --> 00:19:50.016
fixed on screen as the user

00:19:50.016 --> 00:19:50.616
scrolls.

00:19:51.966 --> 00:19:53.216
The second layout guide object

00:19:53.216 --> 00:19:54.676
we've added is the content

00:19:54.676 --> 00:19:55.246
layout guide.

00:19:55.766 --> 00:19:56.786
And you can contain your

00:19:56.786 --> 00:19:58.146
sub-views in order to influence

00:19:58.146 --> 00:19:59.656
the scrollable size of your

00:19:59.656 --> 00:20:02.296
scroll view or have things move

00:20:02.296 --> 00:20:03.456
as the user scrolls.

00:20:04.916 --> 00:20:06.806
One really common sub class of

00:20:06.806 --> 00:20:08.786
UI scroll view is UI table view

00:20:09.066 --> 00:20:09.896
and we've made a number of

00:20:09.896 --> 00:20:11.466
changes here too, the biggest of

00:20:11.466 --> 00:20:13.446
which is that table views use

00:20:13.446 --> 00:20:16.516
self-sizing by default on iOS

00:20:16.516 --> 00:20:17.906
11, not on tvOS.

00:20:19.116 --> 00:20:20.396
This means that your headers,

00:20:20.446 --> 00:20:23.556
your footers, and your cells are

00:20:23.556 --> 00:20:25.676
using estimated sizes.

00:20:25.986 --> 00:20:27.066
We've done this by changing the

00:20:27.066 --> 00:20:29.076
default value of the estimated

00:20:29.076 --> 00:20:30.886
size properties on UI table view

00:20:31.246 --> 00:20:32.576
to this constant, automatic

00:20:32.576 --> 00:20:33.006
dimension.

00:20:34.456 --> 00:20:35.916
This means that you need to

00:20:35.916 --> 00:20:37.736
ensure that your cells all have

00:20:37.736 --> 00:20:39.166
sufficient internal constraints

00:20:39.166 --> 00:20:40.396
to tell UI table view how big

00:20:40.396 --> 00:20:42.296
they should be or you need to

00:20:42.296 --> 00:20:43.726
implement the delegate methods

00:20:43.956 --> 00:20:45.356
that tell us how big your rows

00:20:45.356 --> 00:20:45.586
are.

00:20:45.776 --> 00:20:46.846
You should also implement those

00:20:46.846 --> 00:20:48.446
delicate methods for you headers

00:20:48.706 --> 00:20:49.536
and your footers.

00:20:50.826 --> 00:20:52.286
Now maybe you want to link your

00:20:52.286 --> 00:20:53.806
application against the iOS 11

00:20:53.876 --> 00:20:55.966
SDK, but you're not ready to

00:20:56.186 --> 00:20:57.186
adopt this new behavior.

00:20:57.516 --> 00:20:59.026
You can opt out of it by setting

00:20:59.026 --> 00:21:00.426
the estimated height properties

00:21:00.426 --> 00:21:02.096
on your table views to zero.

00:21:02.476 --> 00:21:03.926
That will turn off estimated

00:21:03.926 --> 00:21:06.236
sizes, which will also disable

00:21:06.236 --> 00:21:06.906
self-sizing.

00:21:09.596 --> 00:21:11.096
Now you may be familiar with

00:21:11.096 --> 00:21:12.226
another concept we introduced a

00:21:12.226 --> 00:21:13.636
while back called the readable

00:21:13.636 --> 00:21:14.466
content guide.

00:21:14.936 --> 00:21:16.106
And this is a portion of your

00:21:16.106 --> 00:21:17.516
views that if you lay out your

00:21:17.516 --> 00:21:18.806
content within, will be

00:21:18.806 --> 00:21:20.056
comfortable to read even on a

00:21:20.056 --> 00:21:21.876
large device like an iPad in

00:21:21.876 --> 00:21:22.416
landscape.

00:21:22.926 --> 00:21:25.906
Now by default table views have

00:21:25.906 --> 00:21:28.106
a separator inset that is within

00:21:28.106 --> 00:21:30.146
the readable content area and

00:21:30.146 --> 00:21:31.446
this influences the position of

00:21:31.446 --> 00:21:33.556
the separators and of the labels

00:21:33.556 --> 00:21:34.796
in the table use content view

00:21:34.796 --> 00:21:35.266
itself.

00:21:36.316 --> 00:21:38.056
And if you change the separator

00:21:38.056 --> 00:21:41.766
insets' values you would see

00:21:41.766 --> 00:21:43.586
that the separator inset moves

00:21:43.586 --> 00:21:45.596
relative to its readable content

00:21:45.596 --> 00:21:46.176
guide position.

00:21:47.066 --> 00:21:48.346
Starting in iOS 11 we're

00:21:48.346 --> 00:21:51.436
changing this and the separator

00:21:51.436 --> 00:21:53.226
insets will always be relative

00:21:53.276 --> 00:21:54.366
to the edges of the cells

00:21:54.366 --> 00:21:55.566
themselves, which are the full

00:21:55.566 --> 00:21:56.966
width of the table view, which

00:21:58.016 --> 00:21:59.526
means you can set these values

00:21:59.526 --> 00:22:01.416
to zero and have full width,

00:22:01.776 --> 00:22:03.476
full bleed content even on an

00:22:03.596 --> 00:22:04.866
iPad running in landscape.

00:22:05.296 --> 00:22:08.006
And this is a table view on an

00:22:08.006 --> 00:22:10.726
iPhone and if I change the

00:22:10.726 --> 00:22:12.976
separator inset here you can see

00:22:12.976 --> 00:22:14.696
that it is also defined relative

00:22:14.736 --> 00:22:16.316
to the edges of the cell -- to

00:22:16.316 --> 00:22:17.186
the edge of the table view.

00:22:18.276 --> 00:22:19.416
We've added a new property to UI

00:22:19.416 --> 00:22:21.886
table view, separator inset

00:22:21.886 --> 00:22:23.236
reference, that you can use to

00:22:23.236 --> 00:22:24.426
tell us that you actually just

00:22:24.426 --> 00:22:26.036
want to adjust the separator

00:22:26.036 --> 00:22:27.826
inset from its default automatic

00:22:27.826 --> 00:22:28.246
position.

00:22:30.176 --> 00:22:31.266
And this works on iPad too.

00:22:31.846 --> 00:22:34.016
A couple of things to keep in

00:22:34.016 --> 00:22:34.946
mind about the way the table

00:22:34.946 --> 00:22:36.056
views interact with the safe

00:22:36.056 --> 00:22:38.036
area; those automatic separator

00:22:38.036 --> 00:22:39.646
insets are relative to the safe

00:22:39.646 --> 00:22:40.396
area insets.

00:22:40.726 --> 00:22:42.476
So by default the entire content

00:22:42.476 --> 00:22:44.026
of your table view avoids the

00:22:44.026 --> 00:22:45.346
safe area insets from its

00:22:45.376 --> 00:22:46.556
ancestor view controllers.

00:22:47.296 --> 00:22:49.656
UI table view cell and UI table

00:22:49.656 --> 00:22:50.966
view header/footer view, which

00:22:50.966 --> 00:22:52.076
might be one of the longer names

00:22:52.076 --> 00:22:53.936
in the kit, they both have a

00:22:53.936 --> 00:22:55.236
content view property.

00:22:55.446 --> 00:22:56.256
That's where you should be

00:22:56.256 --> 00:22:57.456
adding your sub-views.

00:22:58.276 --> 00:22:59.636
Both of these classes make sure

00:22:59.636 --> 00:23:01.526
that that content view also

00:23:01.526 --> 00:23:03.156
avoids the safe area insets.

00:23:03.646 --> 00:23:05.206
So you should be using UI table

00:23:05.206 --> 00:23:07.176
view header/footer view for all

00:23:07.176 --> 00:23:08.156
of the headers and footers in

00:23:08.156 --> 00:23:09.896
your table views; table headers

00:23:09.896 --> 00:23:11.726
and footers and section headers

00:23:12.236 --> 00:23:14.196
and footers.

00:23:14.346 --> 00:23:15.496
We've also brought over the

00:23:15.496 --> 00:23:17.296
really rich swipe action

00:23:17.986 --> 00:23:19.586
functionality from the mail

00:23:19.586 --> 00:23:20.776
application to your

00:23:20.776 --> 00:23:21.476
applications.

00:23:22.146 --> 00:23:24.176
So on iOS 11 your applications

00:23:24.176 --> 00:23:25.426
will get the new swipe action

00:23:25.426 --> 00:23:27.596
look and feel by default, and if

00:23:27.596 --> 00:23:30.256
you link against iOS 11, you can

00:23:30.256 --> 00:23:31.636
get full swipe to delete

00:23:31.636 --> 00:23:32.986
behavior, just like you're used

00:23:32.986 --> 00:23:33.786
to from the mail app.

00:23:34.596 --> 00:23:35.306
And if you go ahead --

00:23:35.966 --> 00:23:36.616
[applause] some people are very

00:23:36.616 --> 00:23:37.516
excited about this I know.

00:23:38.406 --> 00:23:39.836
[applause] And if you go ahead

00:23:39.836 --> 00:23:41.736
and adopt a few new APIs you can

00:23:41.736 --> 00:23:43.026
get some really cool features,

00:23:43.386 --> 00:23:44.736
like images in your swipe

00:23:44.736 --> 00:23:46.736
actions, or swipe actions from

00:23:46.736 --> 00:23:47.876
both the leading and the

00:23:47.876 --> 00:23:50.646
trailing edges, or a completion

00:23:50.646 --> 00:23:51.936
handler that lets you cancel the

00:23:51.936 --> 00:23:52.606
swipe action.

00:23:53.066 --> 00:23:55.286
And to show us how to adopt all

00:23:55.286 --> 00:23:55.886
these features in our

00:23:55.886 --> 00:23:57.236
application, Raj is going to

00:23:57.236 --> 00:23:57.926
come up and give us another

00:23:57.926 --> 00:23:58.216
demo.

00:23:58.406 --> 00:23:58.706
Raj?

00:23:59.516 --> 00:24:05.906
[ Applause ]

00:24:06.406 --> 00:24:06.936
>> Thanks Kyle.

00:24:07.596 --> 00:24:08.576
So we're going to switch over to

00:24:08.576 --> 00:24:10.506
the demo machine again and as

00:24:10.506 --> 00:24:12.136
you can see we've got these big

00:24:12.136 --> 00:24:13.286
beautiful bars in this new

00:24:13.286 --> 00:24:13.936
application.

00:24:14.286 --> 00:24:15.216
It's looking really great.

00:24:16.436 --> 00:24:17.116
But I want to show you the

00:24:17.116 --> 00:24:18.106
comments view controller.

00:24:18.106 --> 00:24:19.646
Now if I push into the comments

00:24:19.646 --> 00:24:21.216
view controller here, you'll

00:24:21.216 --> 00:24:22.266
notice we have some really

00:24:22.266 --> 00:24:24.636
interesting comments and we've

00:24:24.636 --> 00:24:26.046
got all the comments here in a

00:24:26.046 --> 00:24:27.216
comment bar at the bottom.

00:24:28.096 --> 00:24:29.586
Now our users have been asking

00:24:29.586 --> 00:24:31.466
us for one thing and that's time

00:24:31.466 --> 00:24:31.876
stamps.

00:24:32.436 --> 00:24:33.776
And so I went and spoke to our

00:24:33.776 --> 00:24:35.366
designer and got this really

00:24:35.366 --> 00:24:37.086
cool design for this awesome new

00:24:37.086 --> 00:24:37.736
scroll bar.

00:24:38.436 --> 00:24:40.376
This scroll bar also indicates,

00:24:40.856 --> 00:24:42.506
not only where you are in the

00:24:42.506 --> 00:24:44.446
comments view, but also the time

00:24:44.446 --> 00:24:45.776
stamp where it's pointing.

00:24:46.666 --> 00:24:48.146
So let's go ahead and implement

00:24:48.146 --> 00:24:48.346
that.

00:24:49.456 --> 00:24:50.606
I'll switch over to the comments

00:24:50.606 --> 00:24:52.456
view controller and create our

00:24:52.456 --> 00:24:54.426
scroll bar using a method I

00:24:54.426 --> 00:24:55.086
wrote earlier.

00:24:55.876 --> 00:24:58.176
And when I recompile and rerun

00:24:58.176 --> 00:25:02.026
the application, scroll down,

00:25:03.306 --> 00:25:05.656
tap on one of these cells, and

00:25:05.656 --> 00:25:06.346
into the comments view

00:25:06.346 --> 00:25:07.936
controller you'll see there it

00:25:08.566 --> 00:25:08.636
is.

00:25:08.636 --> 00:25:09.776
So it's looking pretty cool.

00:25:09.776 --> 00:25:11.116
It shows you where you are in

00:25:11.116 --> 00:25:12.296
this comments view controller

00:25:12.816 --> 00:25:15.436
and the time stamp of the cell

00:25:15.526 --> 00:25:17.456
that it's pointing at.

00:25:18.146 --> 00:25:19.776
But, as you might notice, there

00:25:19.776 --> 00:25:20.606
are a few issues here.

00:25:21.236 --> 00:25:22.906
The first issue is that this

00:25:22.906 --> 00:25:24.716
indicator actually overlaps with

00:25:24.716 --> 00:25:26.306
the table view cell a little bit

00:25:26.306 --> 00:25:27.466
and so it makes things maybe a

00:25:27.466 --> 00:25:28.346
little bit hard to read.

00:25:29.286 --> 00:25:30.886
The second thing is that this

00:25:30.936 --> 00:25:32.116
indicator overlaps with this

00:25:32.146 --> 00:25:33.496
input field here at the bottom.

00:25:34.376 --> 00:25:36.386
So let's use some new APIs in

00:25:36.466 --> 00:25:37.856
iOS 11 to help solve these

00:25:37.856 --> 00:25:38.276
problems.

00:25:38.916 --> 00:25:40.596
We're going to use the

00:25:40.596 --> 00:25:42.146
additional safe area insets

00:25:42.146 --> 00:25:44.586
property on UI view controller

00:25:44.586 --> 00:25:45.706
to help solve this.

00:25:46.406 --> 00:25:47.766
So I'll go ahead and unwrap our

00:25:47.766 --> 00:25:49.956
two views and I'll set our

00:25:49.956 --> 00:25:51.576
additional safe area insets to a

00:25:51.576 --> 00:25:52.996
UA edge insets.

00:25:54.366 --> 00:25:56.066
So on the top we don't have

00:25:56.066 --> 00:25:57.136
anything additional to add.

00:25:57.996 --> 00:25:59.376
On the left that's the same

00:25:59.376 --> 00:25:59.796
story.

00:26:00.346 --> 00:26:01.976
On the bottom we want to make it

00:26:01.976 --> 00:26:04.096
the comment bar's size.

00:26:04.366 --> 00:26:05.456
So we'll get the height of the

00:26:05.456 --> 00:26:07.726
comment bar and on the right we

00:26:07.726 --> 00:26:08.636
have a property that I've

00:26:08.636 --> 00:26:10.286
written earlier on the side

00:26:10.286 --> 00:26:12.516
indicator that gives its

00:26:12.516 --> 00:26:13.376
preferred width.

00:26:14.616 --> 00:26:16.106
So now we've set up our

00:26:16.106 --> 00:26:17.406
additional safe area insets.

00:26:17.976 --> 00:26:20.676
If I recompile and rerun the

00:26:20.676 --> 00:26:23.846
application, head into the

00:26:23.846 --> 00:26:25.316
detail view and again into the

00:26:25.316 --> 00:26:26.806
comments view controller, you'll

00:26:26.806 --> 00:26:27.896
notice things are starting to

00:26:27.896 --> 00:26:28.756
look pretty good.

00:26:29.366 --> 00:26:31.176
We've got our content inset from

00:26:31.176 --> 00:26:33.656
the right edge and the scroll

00:26:33.656 --> 00:26:35.146
indicator's also inset from the

00:26:35.146 --> 00:26:37.416
bottom edge, but you'll notice

00:26:37.416 --> 00:26:39.356
here, down at the bottom, that

00:26:39.926 --> 00:26:42.406
this comment field actually is

00:26:42.606 --> 00:26:43.726
inset a little bit from the

00:26:43.726 --> 00:26:44.646
right edge of the screen.

00:26:45.796 --> 00:26:48.526
So the reason for that is the

00:26:48.526 --> 00:26:51.306
comment field's text field is

00:26:51.306 --> 00:26:53.056
constrained to its super views

00:26:53.106 --> 00:26:54.046
layout margins.

00:26:54.836 --> 00:26:57.076
Now in iOS 11 your layout

00:26:57.076 --> 00:26:59.046
margins are actually inset from

00:26:59.046 --> 00:27:01.286
the safe area and because we

00:27:01.286 --> 00:27:02.686
added additional safe area

00:27:02.686 --> 00:27:04.506
insets on the right of this view

00:27:04.986 --> 00:27:06.316
our layout margins get inset

00:27:06.316 --> 00:27:06.896
accordingly.

00:27:07.836 --> 00:27:09.206
Now most of the time this is

00:27:09.206 --> 00:27:10.376
going to be exactly what you

00:27:10.376 --> 00:27:12.476
want, but we do have a property

00:27:12.476 --> 00:27:14.736
on UI view, "insets layout

00:27:14.736 --> 00:27:16.746
margins from safe area," which

00:27:16.746 --> 00:27:17.896
lets you control this property.

00:27:18.586 --> 00:27:20.236
So for this use case let's go

00:27:20.236 --> 00:27:20.966
ahead and set that to "false."

00:27:27.046 --> 00:27:27.836
When I go ahead and do that,

00:27:28.526 --> 00:27:30.166
recompile and rerun the

00:27:30.166 --> 00:27:33.906
application, go back into the

00:27:33.906 --> 00:27:35.256
detail view controller and

00:27:35.256 --> 00:27:36.186
finally into the comments view

00:27:36.186 --> 00:27:38.056
controller, you'll see things

00:27:38.056 --> 00:27:38.896
are starting to look really

00:27:38.896 --> 00:27:39.156
good.

00:27:39.646 --> 00:27:40.916
We've got our content at the

00:27:40.916 --> 00:27:41.726
right spot.

00:27:41.966 --> 00:27:42.836
We've got our beautiful new

00:27:42.836 --> 00:27:43.626
scroll indicator.

00:27:44.036 --> 00:27:45.896
Everything is inset and the

00:27:45.896 --> 00:27:47.296
comment field is a full width.

00:27:47.746 --> 00:27:50.816
Awesome! The next thing I'd like

00:27:50.816 --> 00:27:53.006
to show you is adding swipe

00:27:53.006 --> 00:27:54.436
actions to this application.

00:27:55.236 --> 00:27:57.136
So I've decided that I'd like to

00:27:57.136 --> 00:27:59.216
add the ability to favorite and

00:27:59.216 --> 00:28:00.126
maybe delete some of these

00:28:00.126 --> 00:28:00.386
things.

00:28:01.656 --> 00:28:03.306
So let's go to the memory view

00:28:03.306 --> 00:28:06.266
controller and add support for

00:28:06.346 --> 00:28:08.296
the new swipe actions in iOS 11.

00:28:08.866 --> 00:28:12.256
So it looks like a lot, but I'll

00:28:12.256 --> 00:28:12.946
walk you through it.

00:28:13.916 --> 00:28:15.366
All I've done is implemented two

00:28:15.366 --> 00:28:17.296
new methods; leading swipe

00:28:17.296 --> 00:28:18.736
actions configuration for road

00:28:18.736 --> 00:28:20.296
indexpath and trailing swipe

00:28:20.296 --> 00:28:21.646
actions configurations for road

00:28:21.646 --> 00:28:22.196
indexpath.

00:28:22.956 --> 00:28:23.646
So let's walk through the

00:28:23.646 --> 00:28:24.186
leading one.

00:28:24.926 --> 00:28:26.286
All I do is I create a UI

00:28:26.286 --> 00:28:27.786
contextual action here, with a

00:28:27.786 --> 00:28:29.266
style of "normal," a title of

00:28:29.266 --> 00:28:31.096
"favorite," and a block based

00:28:31.096 --> 00:28:31.516
handler.

00:28:32.636 --> 00:28:34.056
I update our favorites state,

00:28:34.256 --> 00:28:35.536
using a method I wrote earlier,

00:28:35.536 --> 00:28:37.046
and then I call the completion

00:28:37.046 --> 00:28:39.146
handler with the parameter of

00:28:39.916 --> 00:28:40.016
"true."

00:28:40.246 --> 00:28:41.326
Just so everything's looking

00:28:41.326 --> 00:28:42.856
right, I'll also set it to

00:28:42.856 --> 00:28:44.246
"unfavorite," based on whether

00:28:44.246 --> 00:28:45.476
that item's already favorited.

00:28:46.586 --> 00:28:48.586
And then I'll set the image to

00:28:48.586 --> 00:28:49.926
this beautiful star that I had

00:28:49.996 --> 00:28:52.026
made earlier and the background

00:28:52.026 --> 00:28:53.356
color to this awesome looking

00:28:53.356 --> 00:28:53.776
orange.

00:28:54.436 --> 00:28:56.106
And then all I need to do is

00:28:56.106 --> 00:28:57.296
create a UI swipe actions

00:28:57.296 --> 00:28:59.216
configuration using that UI

00:28:59.216 --> 00:29:00.966
contextual action and return it.

00:29:02.386 --> 00:29:03.496
The story's pretty much the same

00:29:03.496 --> 00:29:05.046
for the trailing actions; I just

00:29:05.046 --> 00:29:06.406
use the style of disruptive.

00:29:07.376 --> 00:29:08.916
So when I recompile and rerun

00:29:08.916 --> 00:29:13.716
this time, go back over, and

00:29:13.716 --> 00:29:15.386
swipe, you'll notice we get this

00:29:15.446 --> 00:29:17.606
option swipe actions and you can

00:29:17.606 --> 00:29:18.706
even have a swipe action on the

00:29:18.706 --> 00:29:19.976
leading edge, as you see here,

00:29:19.976 --> 00:29:21.156
which you were never able to do

00:29:21.156 --> 00:29:21.456
before.

00:29:22.836 --> 00:29:24.456
For full -- furthermore, you get

00:29:24.456 --> 00:29:26.036
full swipe to delete support out

00:29:26.036 --> 00:29:27.046
of the box.

00:29:27.416 --> 00:29:29.166
So all I need to do is swipe all

00:29:29.166 --> 00:29:30.596
the way across and it just

00:29:30.596 --> 00:29:30.976
works.

00:29:31.516 --> 00:29:37.666
[ Applause ]

00:29:38.166 --> 00:29:39.436
So that's a look at some of the

00:29:39.436 --> 00:29:40.676
new APIs for margins, insets,

00:29:41.036 --> 00:29:42.996
scroll views, and bars in this

00:29:42.996 --> 00:29:43.466
demo app.

00:29:43.696 --> 00:29:44.726
It's looking really great and

00:29:44.726 --> 00:29:46.026
definitely ready for iOS 11.

00:29:46.476 --> 00:29:47.736
Now Kyle's going to come back up

00:29:47.776 --> 00:29:48.726
to tell you about some related

00:29:48.726 --> 00:29:48.976
sessions.

00:29:49.516 --> 00:29:56.866
[ Applause ]

00:29:57.366 --> 00:29:58.236
>> Thank you again Raj.

00:29:59.136 --> 00:30:00.456
So just to recap what we've

00:30:00.456 --> 00:30:02.026
learned today; we've learned how

00:30:02.026 --> 00:30:03.716
to adopt large navigation titles

00:30:04.006 --> 00:30:05.076
and the new integrated search

00:30:05.076 --> 00:30:06.706
experience into our applications

00:30:06.806 --> 00:30:07.616
for iOS 11.

00:30:09.006 --> 00:30:10.516
We've also learned about some

00:30:10.516 --> 00:30:11.936
new improvements to layout

00:30:11.936 --> 00:30:13.296
margins that give us complete

00:30:13.296 --> 00:30:15.686
control over our views and the

00:30:15.686 --> 00:30:17.616
way they layout, as well as a

00:30:17.616 --> 00:30:18.826
new concept called the safe

00:30:18.826 --> 00:30:20.206
area, which tells us about

00:30:20.206 --> 00:30:22.006
overlapping contents and things

00:30:22.006 --> 00:30:23.376
like over scan compensation

00:30:23.376 --> 00:30:24.446
insets on Apple TV.

00:30:24.996 --> 00:30:27.046
We've learned about some new

00:30:27.046 --> 00:30:28.476
enhancements to UI scroll view

00:30:28.896 --> 00:30:30.276
that give us better control over

00:30:30.276 --> 00:30:32.456
our content inset and some new

00:30:32.456 --> 00:30:34.286
features in UI table view and

00:30:34.286 --> 00:30:35.526
how it interacts with concepts

00:30:35.776 --> 00:30:36.636
like the safe area.

00:30:37.276 --> 00:30:40.096
If you have more questions be

00:30:40.096 --> 00:30:41.436
sure to visit the site for this

00:30:41.436 --> 00:30:41.856
session.

00:30:42.436 --> 00:30:42.976
Have a great WWDC.

00:30:43.516 --> 00:30:49.500
[ Applause ]