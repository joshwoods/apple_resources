WEBVTT

00:00:00.868 --> 00:00:02.669
Deena Khattab: Hi,
I'm Deena Khattab,

00:00:02.669 --> 00:00:05.505
a designer on
the Apple Design team.

00:00:05.505 --> 00:00:07.641
Later, I'll be joined
by my colleagues

00:00:07.641 --> 00:00:09.943
Jennifer and Matthew.

00:00:09.943 --> 00:00:12.980
We're really excited to talk
through the process of designing

00:00:12.980 --> 00:00:17.050
for Apple Watch Series 7,
but before we get started,

00:00:17.050 --> 00:00:20.721
let's take a quick look
at what's new.

00:00:20.721 --> 00:00:24.625
Apple Watch Series 7
comes in two new sizes:

00:00:24.625 --> 00:00:28.862
41 mm and 45 mm.

00:00:28.862 --> 00:00:32.165
Both watches feature
larger active content areas

00:00:32.165 --> 00:00:34.534
than ever before.

00:00:34.534 --> 00:00:39.907
The 41 mm is 176 by 215 points,

00:00:39.907 --> 00:00:46.413
and the 45 mm
is 198 by 242 points.

00:00:46.413 --> 00:00:50.684
The display on Apple Watch
Series 7 curves over the edge,

00:00:50.684 --> 00:00:55.155
featuring a subtle
wraparound effect.

00:00:55.155 --> 00:00:56.823
The bezel around the screen

00:00:56.823 --> 00:01:01.695
is thinner and less visible
than ever before.

00:01:01.695 --> 00:01:04.698
Additionally, the screen has
a larger corner radius

00:01:04.698 --> 00:01:08.135
than previous devices.

00:01:08.135 --> 00:01:11.204
Keeping these key hardware
differences in mind,

00:01:11.204 --> 00:01:14.241
we identified three
useful design principles

00:01:14.241 --> 00:01:17.411
to shape the UI.

00:01:17.411 --> 00:01:21.915
Series 7 has the largest content
areas we've had on watch.

00:01:21.915 --> 00:01:25.252
We enlarged UI components
to make full use

00:01:25.252 --> 00:01:30.090
of the additional space
for enhanced usability.

00:01:30.090 --> 00:01:33.427
We closely examined
typography and color

00:01:33.427 --> 00:01:38.165
to create clearer hierarchy
in watch apps.

00:01:38.165 --> 00:01:40.901
Apple Watch has always been
about lightweight,

00:01:40.901 --> 00:01:43.236
glanceable experiences.

00:01:43.236 --> 00:01:46.173
We took a look
at navigation and wayfinding

00:01:46.173 --> 00:01:51.478
to offer a better sense of place
in just a quick glance.

00:01:51.478 --> 00:01:54.881
In summary,
apps for Apple Watch Series 7

00:01:54.881 --> 00:01:59.119
should be larger, clearer,
and more glanceable.

00:01:59.119 --> 00:02:00.420
In the next section,

00:02:00.420 --> 00:02:04.791
Jenn will talk about how
you can use updated UI elements

00:02:04.791 --> 00:02:09.963
to embody these principles
in your own apps.

00:02:09.963 --> 00:02:14.334
Jennifer Patton: Thanks, Deena.
Let's start with layout margins.

00:02:14.334 --> 00:02:16.903
Because the corners
are so curved,

00:02:16.903 --> 00:02:19.272
content needs
to come in and down

00:02:19.272 --> 00:02:22.142
so it fits well in the corners.

00:02:22.142 --> 00:02:24.077
Status bars get taller,

00:02:24.077 --> 00:02:26.780
matched by a taller
scroll clearance margin

00:02:26.780 --> 00:02:29.449
at the bottom of the screens.

00:02:29.449 --> 00:02:30.951
And with the smaller bezel

00:02:30.951 --> 00:02:34.488
between the active display area
and the hardware casing,

00:02:34.488 --> 00:02:36.323
we were discerning about content

00:02:36.323 --> 00:02:39.459
that nears the edges
of the screen.

00:02:39.459 --> 00:02:42.496
Layout margins
are generous on Series 7

00:02:42.496 --> 00:02:45.699
to give the content
plenty of room to breathe.

00:02:47.834 --> 00:02:49.169
Matthew Koonce:
Thanks, Jennifer.

00:02:49.169 --> 00:02:51.872
Hi there, my name is Matthew.

00:02:51.872 --> 00:02:53.874
Let's use Stocks as an example

00:02:53.874 --> 00:02:58.245
of how we can use margins
effectively on watchOS.

00:02:58.245 --> 00:03:04.051
First, let's remove the margins
that are already applied.

00:03:04.051 --> 00:03:08.121
As you can see, this layout
has a couple of issues.

00:03:08.121 --> 00:03:11.892
Let's take a closer look.

00:03:11.892 --> 00:03:16.396
The first issue is the text
for the current stock price.

00:03:16.396 --> 00:03:19.800
It's very close to the edges
of the display.

00:03:19.800 --> 00:03:22.536
This could be a problem
on the wraparound display

00:03:22.536 --> 00:03:25.806
on Apple Watch Series 7.

00:03:25.806 --> 00:03:28.975
The second issue
is the Nasdaq text,

00:03:28.975 --> 00:03:33.013
which is clipped
by the corners of the display.

00:03:33.013 --> 00:03:36.383
Additionally, we've lost
the text alignment

00:03:36.383 --> 00:03:39.653
to the leading edge
of the navigation bar.

00:03:39.653 --> 00:03:41.788
Let's see how we can
resolve these issues

00:03:41.788 --> 00:03:44.157
with some SwiftUI code.

00:03:44.157 --> 00:03:46.560
Here I have a snippet
from the Stocks layout,

00:03:46.560 --> 00:03:49.062
which is a simple VStack.

00:03:49.062 --> 00:03:52.632
First, we can adjust the layout
for the current price view

00:03:52.632 --> 00:03:55.569
by using the .scenePadding
modifier.

00:03:55.569 --> 00:03:58.605
This modifier applies
the system-defined padding

00:03:58.605 --> 00:04:00.874
for the layout margin.

00:04:00.874 --> 00:04:02.509
As you can see,

00:04:02.509 --> 00:04:06.613
this resolves the layout
for the current price view.

00:04:06.613 --> 00:04:09.116
Let's use the same
.scenePadding modifier

00:04:09.116 --> 00:04:11.818
on the Nasdaq text below.

00:04:13.887 --> 00:04:18.125
And once again,
this resolves our layout issues

00:04:18.125 --> 00:04:22.896
and restores the alignment
we were looking for.

00:04:22.896 --> 00:04:27.234
Note that we did not apply
the modifier to the day chart.

00:04:27.234 --> 00:04:29.603
Some content,
like this chart,

00:04:29.603 --> 00:04:33.306
is perfectly fine to go
to the edges of the display.

00:04:33.306 --> 00:04:36.643
Try to preserve using
the .scenePadding modifier

00:04:36.643 --> 00:04:39.646
only for text content
that would distort

00:04:39.646 --> 00:04:44.017
or be clipped by the edges
of the display.

00:04:44.017 --> 00:04:46.786
Jennifer: We brought large
titles into watchOS this year

00:04:46.786 --> 00:04:51.625
to make apps more glanceable,
offer a better sense of place,

00:04:51.625 --> 00:04:56.429
and establish clearer hierarchy
within apps.

00:04:56.429 --> 00:04:59.132
Scrolling table views
will get this large title,

00:04:59.132 --> 00:05:02.169
similar to large titles on iOS.

00:05:02.169 --> 00:05:06.373
The title transitions
into the status bar on scroll.

00:05:06.373 --> 00:05:10.177
Root levels and subviews
will get the large title.

00:05:10.177 --> 00:05:13.880
Settings is a great example
of how large titles can be used

00:05:13.880 --> 00:05:20.086
in an app to define
a clear sense of place.

00:05:20.086 --> 00:05:22.455
In fixed views
that don't scroll,

00:05:22.455 --> 00:05:25.025
we looked for opportunities
like Timer

00:05:25.025 --> 00:05:28.128
to bring the title of the view
into the content area

00:05:28.128 --> 00:05:30.130
and out of the status bar,

00:05:30.130 --> 00:05:33.533
or just remove it entirely
where it's not needed,

00:05:33.533 --> 00:05:35.702
divorcing the titling
of the view

00:05:35.702 --> 00:05:39.039
from the Back button navigation.

00:05:39.039 --> 00:05:41.675
We also have fixed views
where the status bar

00:05:41.675 --> 00:05:45.378
is still the best place
for titling information,

00:05:45.378 --> 00:05:50.550
like this world clock
detail example.

00:05:50.550 --> 00:05:52.719
Large titles were
particularly inspired

00:05:52.719 --> 00:05:57.557
by the larger active content
area available on Series 7

00:05:57.557 --> 00:06:03.797
but they also work well on
previous 40 and 44 mm devices.

00:06:03.797 --> 00:06:05.498
Matthew: SwiftUI makes it simple

00:06:05.498 --> 00:06:08.902
to configure large titles
for your app.

00:06:08.902 --> 00:06:13.740
By default on watchOS 8,
all navigation titles are large

00:06:13.740 --> 00:06:18.545
and are tinted by
the application accent color.

00:06:18.545 --> 00:06:22.582
If you do not want a large
title on a particular view,

00:06:22.582 --> 00:06:25.852
you can use the
.navigationBarTitleDisplayMode

00:06:25.852 --> 00:06:27.921
modifier.

00:06:27.921 --> 00:06:29.956
After applying
this modifier,

00:06:29.956 --> 00:06:32.926
any subsequent view
in your hierarchy

00:06:32.926 --> 00:06:36.029
will inherit the display mode
of the view above.

00:06:39.599 --> 00:06:42.335
Jennifer: Color is meant to help
with wayfinding,

00:06:42.335 --> 00:06:44.104
information hierarchy,

00:06:44.104 --> 00:06:47.007
and signal the personality
of your app.

00:06:47.007 --> 00:06:49.309
In this Mindfulness example,

00:06:49.309 --> 00:06:54.080
the teal color reinforces
the app identity and experience.

00:06:54.080 --> 00:06:57.517
We use System Teal
as the app key color

00:06:57.517 --> 00:07:00.787
and pushed back the System Gray
platter background color

00:07:00.787 --> 00:07:05.392
to create a more muted effect.

00:07:05.392 --> 00:07:08.061
List view apps
are common on watch.

00:07:08.061 --> 00:07:11.431
In this Mail example,
the use of blue backgrounds

00:07:11.431 --> 00:07:13.800
enforces that you're
in the Mail app

00:07:13.800 --> 00:07:19.539
and not another app that uses
a similar navigation pattern.

00:07:19.539 --> 00:07:21.341
In this example,

00:07:21.341 --> 00:07:24.644
bright yellow platters
visually differentiate Tips

00:07:24.644 --> 00:07:28.381
from other carousel navigation
apps like Workout.

00:07:28.381 --> 00:07:30.350
It also reinforces
the continuity

00:07:30.350 --> 00:07:35.355
of the Tips experience
across all our platforms.

00:07:35.355 --> 00:07:38.325
Matthew: You can configure
your application's accent color

00:07:38.325 --> 00:07:40.927
in the asset catalog.

00:07:40.927 --> 00:07:42.729
After setting a color here,

00:07:42.729 --> 00:07:46.766
all navigation bars will
automatically use this color.

00:07:46.766 --> 00:07:49.502
More information about
configuring the accent color

00:07:49.502 --> 00:07:53.206
can be found
in the developer documentation.

00:07:53.206 --> 00:07:57.544
Additionally, you can easily use
the color yourself in SwiftUI

00:07:57.544 --> 00:08:00.580
by using the
.accentColor modifier.

00:08:00.580 --> 00:08:03.717
In Mail,
we set the listItemTint

00:08:03.717 --> 00:08:09.823
to the application's accent
color at 30 percent opacity.

00:08:09.823 --> 00:08:11.358
Jennifer: We also took
a close look

00:08:11.358 --> 00:08:13.626
at buttons and button shapes

00:08:13.626 --> 00:08:17.063
while designing
for Series 7 watches.

00:08:17.063 --> 00:08:19.799
The current button system
looks like this.

00:08:19.799 --> 00:08:22.202
We have rounded
rectangular buttons

00:08:22.202 --> 00:08:24.671
that are seen
in scrolling views,

00:08:24.671 --> 00:08:27.374
and we have a set
of pinned buttons

00:08:27.374 --> 00:08:30.610
that are only seen in fixed
views that don't scroll.

00:08:30.610 --> 00:08:32.479
They're pinned
to the bottom of the screen

00:08:32.479 --> 00:08:37.016
and meant to complement
the shape of the screen.

00:08:37.016 --> 00:08:41.054
For Series 7, we expanded
on the same basic system

00:08:41.054 --> 00:08:44.357
of scrolling
and nonscrolling buttons.

00:08:44.357 --> 00:08:49.229
We simplified to a common
secondary-button color scheme,

00:08:49.229 --> 00:08:51.865
and side-by-side buttons
are switching

00:08:51.865 --> 00:08:57.504
from a split-lozenge shape
to side-by-side pill shapes.

00:08:57.504 --> 00:09:01.040
Here are a couple of examples
of buttons in updated apps.

00:09:01.040 --> 00:09:05.578
A primary scrolling button
in the Alarms list at left

00:09:05.578 --> 00:09:11.151
and side-by-side buttons in
the UIPickerView on the right.

00:09:11.151 --> 00:09:15.655
Let's take a closer look
at these pinned button shapes.

00:09:15.655 --> 00:09:19.159
We took great care in crafting
the shape of the buttons

00:09:19.159 --> 00:09:21.327
for Series 7.

00:09:21.327 --> 00:09:23.530
Here's an example
of what it would look like

00:09:23.530 --> 00:09:26.332
to use a simple pill shape.

00:09:26.332 --> 00:09:29.335
See how the flat plane
of the button at the bottom

00:09:29.335 --> 00:09:33.373
creates tension with
the curvature of the display?

00:09:33.373 --> 00:09:37.143
And here is the crafted
button shape.

00:09:37.143 --> 00:09:39.412
I'll do that again.

00:09:39.412 --> 00:09:40.947
The change is subtle,

00:09:40.947 --> 00:09:42.782
but deriving
the shape of the button

00:09:42.782 --> 00:09:45.151
from the shape
of the display itself

00:09:45.151 --> 00:09:47.387
makes it so that these buttons
that are pinned

00:09:47.387 --> 00:09:48.788
to the bottom of the screen

00:09:48.788 --> 00:09:53.693
and will harmonize with
the hardware of the watch.

00:09:53.693 --> 00:09:58.731
The updated buttons will go back
to pre-Series 7 devices too.

00:09:58.731 --> 00:10:00.733
The height of the buttons
will remain the same,

00:10:00.733 --> 00:10:03.269
so no updates to the layout
should be needed

00:10:03.269 --> 00:10:07.707
for adopting these new buttons
for existing UI.

00:10:07.707 --> 00:10:10.176
Matthew: We've updated
all buttons in SwiftUI

00:10:10.176 --> 00:10:14.147
with the new
Apple Watch Series 7 look.

00:10:14.147 --> 00:10:16.983
For the most part,
this happens automatically

00:10:16.983 --> 00:10:20.153
and no changes are necessary
in your app.

00:10:20.153 --> 00:10:25.091
That said, it's important
to keep a couple things in mind.

00:10:25.091 --> 00:10:26.793
When you define a button,

00:10:26.793 --> 00:10:28.962
like the Cancel button
seen here,

00:10:28.962 --> 00:10:34.834
SwiftUI is applying some default
modifiers on your behalf.

00:10:34.834 --> 00:10:39.772
Buttons on watchOS
use a bordered button style

00:10:39.772 --> 00:10:44.043
and an automatic
border shape by default.

00:10:44.043 --> 00:10:47.247
The automatic border shape
means the border shape changes

00:10:47.247 --> 00:10:49.482
based on context.

00:10:49.482 --> 00:10:53.219
Outside of a scroll view,
the shape is a capsule.

00:10:53.219 --> 00:10:58.391
For example,
these Cancel and Start buttons.

00:10:58.391 --> 00:11:02.629
In the scroll view, the button
has a rounded rectangle shape.

00:11:02.629 --> 00:11:06.332
For example,
the Add Alarm button.

00:11:06.332 --> 00:11:09.135
Additionally, there's
an alternative button style

00:11:09.135 --> 00:11:11.571
called bordered prominent.

00:11:11.571 --> 00:11:13.806
This style applies
the application accent color

00:11:13.806 --> 00:11:17.777
to the button,
which we do in Alarms.

00:11:17.777 --> 00:11:19.979
This gives the button
a more pronounced look

00:11:19.979 --> 00:11:22.181
that immediately draws
your attention.

00:11:25.184 --> 00:11:26.553
Deena: In this next section,

00:11:26.553 --> 00:11:30.456
we'll discuss
typography updates.

00:11:30.456 --> 00:11:35.662
Series 7 uses the same default
type sizes as Series 6:

00:11:35.662 --> 00:11:39.332
large for 40 mm and 41 mm

00:11:39.332 --> 00:11:44.437
and extra large
for 44 mm and 45 mm.

00:11:44.437 --> 00:11:47.640
As a result, we gain
more character count

00:11:47.640 --> 00:11:49.642
than previous devices.

00:11:51.010 --> 00:11:54.213
We also used type
to improve accessibility

00:11:54.213 --> 00:11:57.317
by adding three
larger type sizes.

00:11:57.317 --> 00:12:02.922
Here's the Mail app at the
default type size: extra large.

00:12:02.922 --> 00:12:10.697
And here it is at the new AX1,
AX2, and AX3.

00:12:10.697 --> 00:12:14.033
To help those who wish to use
larger type on their watch,

00:12:14.033 --> 00:12:17.270
we added Smart Type Suggestions.

00:12:17.270 --> 00:12:20.340
In the setup flow,
your phone now identifies

00:12:20.340 --> 00:12:24.377
whether you have a large
type setting implemented

00:12:24.377 --> 00:12:28.247
and suggests a similar
type size for your new watch.

00:12:28.247 --> 00:12:30.283
This feature
makes it easier to use

00:12:30.283 --> 00:12:34.621
your preferred type size
from the start.

00:12:34.621 --> 00:12:36.623
While focusing on typography,

00:12:36.623 --> 00:12:41.260
we recommend supplementing
text labels with SF Symbols.

00:12:41.260 --> 00:12:44.097
For apps with list view-based
navigation,

00:12:44.097 --> 00:12:46.466
we recommend using
outlined symbols

00:12:46.466 --> 00:12:52.205
in your application's accent
color, like Mail and Phone.

00:12:52.205 --> 00:12:58.511
This helps with cross-platform
consistency and accessibility.

00:12:58.511 --> 00:13:01.948
Align your symbol style
and colors across platforms

00:13:01.948 --> 00:13:04.283
where possible.

00:13:04.283 --> 00:13:06.653
For more information
on SF Symbols,

00:13:06.653 --> 00:13:12.625
check out these talks
from WWDC21.

00:13:12.625 --> 00:13:14.894
Next, we'll highlight
the new keyboard

00:13:14.894 --> 00:13:20.633
and text input features
on Apple Watch Series 7.

00:13:20.633 --> 00:13:23.302
Because of the larger
active screen areas,

00:13:23.302 --> 00:13:26.506
we added a full keyboard.

00:13:26.506 --> 00:13:29.409
For this keyboard
designed specifically for watch,

00:13:29.409 --> 00:13:32.745
we don't draw borders
around keys.

00:13:32.745 --> 00:13:34.881
This encourages swiping to type

00:13:34.881 --> 00:13:39.285
while avoiding the feeling
that you can miss a tap target.

00:13:39.285 --> 00:13:42.288
To maximize available space
for typing,

00:13:42.288 --> 00:13:44.924
we pulled the delete key
out of the keyboard

00:13:44.924 --> 00:13:48.161
and into the text field.

00:13:48.161 --> 00:13:51.397
Additionally, the keyboard
allows you to customize

00:13:51.397 --> 00:13:54.333
the autofill type
for certain use cases,

00:13:54.333 --> 00:14:00.239
like passwords
and two-factor authentication.

00:14:00.239 --> 00:14:01.974
Along with keyboard support,

00:14:01.974 --> 00:14:05.812
we improved functionality
for text inputs.

00:14:05.812 --> 00:14:08.414
The left and right accessories
can be customized

00:14:08.414 --> 00:14:11.451
using SF Symbols.

00:14:11.451 --> 00:14:14.821
We recommend using
your application's accent color

00:14:14.821 --> 00:14:20.093
for both symbols
to emphasize tapability.

00:14:20.093 --> 00:14:24.664
Use descriptive words
for input field placeholder text

00:14:24.664 --> 00:14:27.667
and suggested list titles.

00:14:27.667 --> 00:14:31.304
For more information
on the keyboard and text inputs,

00:14:31.304 --> 00:14:34.907
as well as how to best use them
in your applications,

00:14:34.907 --> 00:14:40.413
check out these WWDC21 talks.

00:14:40.413 --> 00:14:42.248
We showed you
how to take advantage

00:14:42.248 --> 00:14:46.819
of the new display's full
potential with scene padding,

00:14:46.819 --> 00:14:49.255
automatic button shapes,

00:14:49.255 --> 00:14:52.825
and hierarchical navigation.

00:14:52.825 --> 00:14:56.095
For more resources
on designing for Series 7,

00:14:56.095 --> 00:14:58.765
check out
"What's new in watchOS 8"

00:14:58.765 --> 00:15:03.669
and "What's new in SwiftUI"
from WWDC21.