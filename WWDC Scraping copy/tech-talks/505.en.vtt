WEBVTT

00:00:01.234 --> 00:00:03.871
Shloka Kini: The authentication
context is a web service

00:00:03.871 --> 00:00:05.839
that presents
the authentication UI

00:00:05.839 --> 00:00:08.976
and communicates with
your identity provider server

00:00:08.976 --> 00:00:11.545
to authenticate
your customer's credentials.

00:00:11.545 --> 00:00:13.881
It is one of many steps
you will need to take

00:00:13.881 --> 00:00:16.717
to get the Single Sign-On
feature for your TV provider

00:00:16.717 --> 00:00:19.152
on iOS and tvOS devices

00:00:19.152 --> 00:00:22.389
as part of the Apple TV
distribution program.

00:00:22.389 --> 00:00:24.925
The authentication context
is a web service

00:00:24.925 --> 00:00:28.262
hosted on your server that is
downloaded to an Apple device

00:00:28.262 --> 00:00:30.330
and executed at run time.

00:00:30.330 --> 00:00:32.031
When the authentication context

00:00:32.031 --> 00:00:34.201
passes an authentication
response

00:00:34.201 --> 00:00:36.303
to the VideoSubscriberAccount
framework

00:00:36.303 --> 00:00:38.872
it is saved into
the device keychain.

00:00:38.872 --> 00:00:41.742
On iOS devices
the authentication response

00:00:41.742 --> 00:00:45.879
can be synced to other
iOS devices via iCloud Keychain.

00:00:45.879 --> 00:00:47.214
And on Apple TV,

00:00:47.214 --> 00:00:49.750
the authentication response
will not leave the device

00:00:49.750 --> 00:00:53.220
because tvOS does not support
iCloud Keychain.

00:00:53.220 --> 00:00:55.789
The purpose
of the authentication context

00:00:55.789 --> 00:00:58.492
is to provide OS-level
authentication

00:00:58.492 --> 00:01:00.327
across supported apps.

00:01:00.327 --> 00:01:02.963
The first step of this process
is to prompt a person

00:01:02.963 --> 00:01:04.263
to type in their credentials

00:01:04.263 --> 00:01:07.301
by presenting them UI
for authentication.

00:01:07.301 --> 00:01:10.103
To specify the UI
for this credential entry,

00:01:10.103 --> 00:01:12.272
use an authenticationTemplate.

00:01:12.272 --> 00:01:14.007
This is an XML document

00:01:14.007 --> 00:01:17.177
similar to the examples
we provide in documentation.

00:01:17.177 --> 00:01:21.081
When you provide us this XML,
we take it and format it

00:01:21.081 --> 00:01:23.450
to look like
part of the Apple system UI,

00:01:23.450 --> 00:01:26.186
depending on which platform
the person is using.

00:01:26.186 --> 00:01:29.890
For example, the default
username-password template here,

00:01:29.890 --> 00:01:35.329
can be applied to both iOS
and tvOS devices.

00:01:35.329 --> 00:01:38.598
The autoAuthenticationTemplate
doesn't ask the customer

00:01:38.598 --> 00:01:39.933
to enter credentials.

00:01:39.933 --> 00:01:41.969
Instead,
it informs the customer

00:01:41.969 --> 00:01:44.938
which account they will be
automatically authenticated to,

00:01:44.938 --> 00:01:47.407
and gives them an option
to manually sign in

00:01:47.407 --> 00:01:49.109
to a different account.

00:01:49.109 --> 00:01:55.315
This template is also applicable
to both iOS and tvOS devices.

00:01:55.315 --> 00:01:57.718
If you are not able
to directly take credentials

00:01:57.718 --> 00:02:00.120
from a customer,
we provide alternative templates

00:02:00.120 --> 00:02:03.090
for authentication
in special cases.

00:02:03.090 --> 00:02:05.625
The onscreenCode
AuthenticationTemplate

00:02:05.625 --> 00:02:07.761
only applies to tvOS.

00:02:07.761 --> 00:02:10.964
It displays an onscreen code
for a person to enter

00:02:10.964 --> 00:02:12.899
on a web browser
on a separate device,

00:02:12.899 --> 00:02:16.336
such as their phone, tablet,
or computer.

00:02:16.336 --> 00:02:20.607
The webAuthenticationTemplate
applies only to iOS devices.

00:02:20.607 --> 00:02:22.609
It launches a web view,

00:02:22.609 --> 00:02:25.612
like this,
using the URL specified.

00:02:25.612 --> 00:02:28.215
To communicate between
the authentication context

00:02:28.215 --> 00:02:30.050
and the web view
that is launched,

00:02:30.050 --> 00:02:33.320
you use the
VideoSubscriberAccount class.

00:02:33.320 --> 00:02:36.256
To get started, you will create
an authentication context

00:02:36.256 --> 00:02:39.092
with JavaScript and define
the authentication UI

00:02:39.092 --> 00:02:40.827
with XML templates.

00:02:40.827 --> 00:02:43.497
Host this JavaScript file
on your server.

00:02:43.497 --> 00:02:46.633
Remember only to write
one authentication context,

00:02:46.633 --> 00:02:49.770
because the same one
can be used for both devices.

00:02:49.770 --> 00:02:53.006
Lastly, after writing
your context and XML,

00:02:53.006 --> 00:02:56.510
send us the TV provider
onboarding data.

00:02:56.510 --> 00:02:59.780
This data includes the name
to be displayed in our UI

00:02:59.780 --> 00:03:01.314
for the TV provider;

00:03:01.314 --> 00:03:03.417
the identifier
for the TV provider,

00:03:03.417 --> 00:03:05.018
which will be used
in our systems

00:03:05.018 --> 00:03:08.922
to identify the TV provider
uniquely amongst others;

00:03:08.922 --> 00:03:11.925
and the authentication URL,
the URL we need to ping

00:03:11.925 --> 00:03:14.761
on the TV provider server
to access and download

00:03:14.761 --> 00:03:17.330
your authentication
context to device.

00:03:17.330 --> 00:03:19.332
Send us the artwork
to be displayed

00:03:19.332 --> 00:03:22.335
for the TV provider's brand
in the App Store UI.

00:03:22.335 --> 00:03:24.304
For more details
on the artwork specs,

00:03:24.304 --> 00:03:26.006
see our documentation.

00:03:26.006 --> 00:03:27.841
Send us
a supported channel list.

00:03:27.841 --> 00:03:30.710
This is an optional piece
of onboarding data.

00:03:30.710 --> 00:03:34.114
Here, a channel references
TV provider-supported apps.

00:03:34.114 --> 00:03:36.283
In the Apple TV
distribution program,

00:03:36.283 --> 00:03:38.552
one app will be
automatically installed

00:03:38.552 --> 00:03:41.621
after the authentication flow;
that's the main app.

00:03:41.621 --> 00:03:43.590
If you have any additional apps

00:03:43.590 --> 00:03:45.725
that use your
TV provider credentials,

00:03:45.725 --> 00:03:49.729
use this list to show those
other TV provider-supported apps

00:03:49.729 --> 00:03:51.498
to the customer.

00:03:51.498 --> 00:03:54.034
To begin developing
the authentication context,

00:03:54.034 --> 00:03:56.036
handle the callbacks
for requests

00:03:56.036 --> 00:03:58.105
made by the
VideoSubscriberAccount framework

00:03:58.105 --> 00:04:00.841
to the authentication context.

00:04:00.841 --> 00:04:03.176
The first is onLaunch.

00:04:03.176 --> 00:04:06.113
This indicates what should
happen after a TV provider

00:04:06.113 --> 00:04:09.282
is selected from the
VideoSubscriberAccount list.

00:04:09.282 --> 00:04:11.184
After selecting a TV provider,

00:04:11.184 --> 00:04:14.955
a pending screen appears
until the next callback.

00:04:14.955 --> 00:04:17.958
onShowUserInterface.

00:04:17.958 --> 00:04:20.760
After launch, then you must
handle the callback

00:04:20.760 --> 00:04:24.631
to show the authentication
template for credential entry.

00:04:24.631 --> 00:04:27.067
Next is onRequest.

00:04:27.067 --> 00:04:30.170
After credentials are entered,
you take those credentials

00:04:30.170 --> 00:04:33.173
and send them directly to
your identity provider server.

00:04:33.173 --> 00:04:35.308
These credentials
are not stored on device.

00:04:35.308 --> 00:04:38.211
An authentication response
is sent back from the server

00:04:38.211 --> 00:04:40.046
to the authentication context

00:04:40.046 --> 00:04:42.082
to the VideoSubscriberAccount
framework

00:04:42.082 --> 00:04:45.051
to establish system-level
authentication.

00:04:45.051 --> 00:04:46.720
App-level authentication
requests

00:04:46.720 --> 00:04:48.555
will only be sent for processing

00:04:48.555 --> 00:04:51.525
if this system-level
authentication is good.

00:04:51.525 --> 00:04:54.828
To debug your application,
enable Developer Mode

00:04:54.828 --> 00:04:57.230
on your iOS and tvOS devices

00:04:57.230 --> 00:05:01.201
to add and test your TV provider
before code is live.

00:05:01.201 --> 00:05:03.770
To specifically debug
your authentication context,

00:05:03.770 --> 00:05:05.772
use Safari Web Inspector.

00:05:05.772 --> 00:05:08.308
Make sure to enable
Web Inspector on device

00:05:08.308 --> 00:05:12.012
so your macOS device
can debug the JavaScript.

00:05:12.012 --> 00:05:14.114
In summary,
the authentication context

00:05:14.114 --> 00:05:16.049
is a JavaScript-based
web service

00:05:16.049 --> 00:05:17.817
that facilitates communication

00:05:17.817 --> 00:05:20.954
between the identity provider
server for a TV provider

00:05:20.954 --> 00:05:23.590
and the VideoSubscriberAccount
framework.

00:05:23.590 --> 00:05:25.525
Thank you.