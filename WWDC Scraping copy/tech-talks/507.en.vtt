WEBVTT

00:00:00.667 --> 00:00:02.369
Shloka Kini: The
VideoSubscriberAccount framework

00:00:02.369 --> 00:00:03.703
is a native app framework

00:00:03.703 --> 00:00:06.573
that facilitates passing
the authentication token

00:00:06.573 --> 00:00:09.543
between the authentication
context and your app.

00:00:09.543 --> 00:00:11.378
The VideoSubscriberAccount
framework

00:00:11.378 --> 00:00:14.414
is a client-side framework
that is built into your app.

00:00:14.414 --> 00:00:16.583
Because it is
built into a native app,

00:00:16.583 --> 00:00:20.487
it requires native iOS
and tvOS development.

00:00:20.487 --> 00:00:22.222
To get access
to this framework,

00:00:22.222 --> 00:00:25.626
add this specific entitlement
to your entitlements file.

00:00:25.626 --> 00:00:27.694
You will need to update
your provisioning profile

00:00:27.694 --> 00:00:29.930
to include this
extended entitlement.

00:00:29.930 --> 00:00:32.366
This updated profile
should replace the original one

00:00:32.366 --> 00:00:34.401
in your app's project.

00:00:34.401 --> 00:00:36.503
Once your app
has access to the framework

00:00:36.503 --> 00:00:37.905
and integrates with it,

00:00:37.905 --> 00:00:40.908
it's important to remember that
because there is authentication

00:00:40.908 --> 00:00:43.043
at two different points
on the device --

00:00:43.043 --> 00:00:44.745
system level and app level --

00:00:44.745 --> 00:00:46.613
that those two
authentication states

00:00:46.613 --> 00:00:48.749
need to be synced visually.

00:00:48.749 --> 00:00:51.318
As a result, there are user
experience implications

00:00:51.318 --> 00:00:53.253
when integrating
with the framework.

00:00:53.253 --> 00:00:55.956
To fully be integrated with it
technically and visually,

00:00:55.956 --> 00:00:58.425
your app needs to handle
all these syncing cases

00:00:58.425 --> 00:01:01.395
on both a cold and warm start
successfully.

00:01:01.395 --> 00:01:04.331
First, check if the customer
has granted access

00:01:04.331 --> 00:01:05.966
to use the framework.

00:01:05.966 --> 00:01:09.603
If the customer has not
granted access, request it.

00:01:09.603 --> 00:01:11.605
Once the customer
has granted access

00:01:11.605 --> 00:01:13.807
to the VideoSubscriberAccount
framework,

00:01:13.807 --> 00:01:16.243
check the system level
authentication status

00:01:16.243 --> 00:01:18.779
using a
VSAccountMetadataRequest.

00:01:18.779 --> 00:01:20.948
If the customer
is not authenticated

00:01:20.948 --> 00:01:24.284
at the system level,
request this authentication.

00:01:24.284 --> 00:01:26.520
Next you need to present
a view controller

00:01:26.520 --> 00:01:29.556
containing the authentication UI
to the customer.

00:01:29.556 --> 00:01:31.825
This view controller
is created by the framework

00:01:31.825 --> 00:01:33.961
and is passed
to the VSAccountManager

00:01:33.961 --> 00:01:36.229
presentViewController
delegate method.

00:01:36.229 --> 00:01:38.899
Finally, request app-level
authentication

00:01:38.899 --> 00:01:42.202
with a verification token
in the metadata request.

00:01:42.202 --> 00:01:44.404
After fully integrating
with the framework,

00:01:44.404 --> 00:01:47.007
the application will go through
an additional QA review

00:01:47.007 --> 00:01:49.009
before formal app review.

00:01:49.009 --> 00:01:52.245
In summary, the
VideoSubscriberAccount framework

00:01:52.245 --> 00:01:55.816
exists so your app can talk
to the authentication context

00:01:55.816 --> 00:01:59.052
and a video subscriber
can be authenticated.

00:01:59.052 --> 00:02:01.054
Thank you.