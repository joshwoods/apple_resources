WEBVTT

00:00:12.270 --> 00:00:13.960
Hello again, everyone.

00:00:13.960 --> 00:00:14.960
Welcome back.

00:00:15.020 --> 00:00:18.430
Again, my name is Allan Schaffe,
I'm the Game Technologies Evangelist

00:00:18.430 --> 00:00:19.200
at Apple.

00:00:19.410 --> 00:00:24.150
And this next session is really picking
up where Paul and Paul just left off.

00:00:24.290 --> 00:00:26.840
So they talked about
the system technologies,

00:00:26.850 --> 00:00:29.830
things like multitasking, security,
and so on.

00:00:29.830 --> 00:00:33.180
And now I just want to keep on
going with that and talk about

00:00:33.180 --> 00:00:35.160
some of the game technologies.

00:00:35.160 --> 00:00:38.610
So for the next hour,
I'm really just going to take this

00:00:38.700 --> 00:00:41.180
and split it right down the middle.

00:00:41.190 --> 00:00:42.180
So I'll talk about the game technologies,
and then I'll talk about

00:00:42.180 --> 00:00:42.180
the game technologies.

00:00:42.230 --> 00:00:45.020
So I'll talk about
Game Center for the first half,

00:00:45.020 --> 00:00:48.990
and then Game Controllers for
the second half of the session.

00:00:48.990 --> 00:00:53.110
Now, I think as many of you
are already familiar with,

00:00:53.160 --> 00:00:56.930
Game Center is Apple's
social gaming network.

00:00:57.070 --> 00:01:00.560
We introduced it back in
iOS 4.1 several years ago.

00:01:00.560 --> 00:01:04.660
And, you know,
it's really there to implement a

00:01:04.660 --> 00:01:10.590
lot of the features that you all use
to drive engagement in your games.

00:01:10.670 --> 00:01:14.180
You know, being able to play games,
along with friends,

00:01:14.180 --> 00:01:19.120
and track leaderboards, post scores,
track achievements that

00:01:19.210 --> 00:01:21.480
players earn in your game.

00:01:21.530 --> 00:01:25.910
We recently added challenges to let
you challenge another person to beat

00:01:25.940 --> 00:01:27.560
your score or to earn an achievement.

00:01:27.560 --> 00:01:29.180
Then there's multiplayer.

00:01:29.180 --> 00:01:33.440
We have synchronous multiplayer
for real-time gameplay,

00:01:33.440 --> 00:01:38.580
and churn-based asynchronous
multiplayer as well.

00:01:38.660 --> 00:01:43.910
Typically, in a session like this,
you might expect that I would stand up

00:01:43.910 --> 00:01:48.820
and talk a lot about the new features
in Game Center and about adopting them,

00:01:48.820 --> 00:01:52.340
but I want to do something
actually a little different with

00:01:52.340 --> 00:01:54.400
this part of the session today.

00:01:55.030 --> 00:01:59.240
Because really, as for part of my job,
I look at a lot of different games.

00:01:59.240 --> 00:02:01.640
And, you know,
just as we saw here in the room,

00:02:01.640 --> 00:02:03.820
a lot of you are already
using Game Center,

00:02:03.830 --> 00:02:08.100
you're using the features,
and ultimately, it's a pretty simple

00:02:08.110 --> 00:02:09.710
API for you to adopt.

00:02:09.760 --> 00:02:14.530
And honestly, most developers are just,
they're doing the right

00:02:14.530 --> 00:02:16.660
thing with the API itself.

00:02:16.680 --> 00:02:21.490
So instead of talking about just adopting
the API and kind of the features of it,

00:02:21.490 --> 00:02:24.320
what I want to do is give
you some strategies that you

00:02:24.320 --> 00:02:25.000
can use to adopt the API.

00:02:25.020 --> 00:02:32.210
And I think these are going to
be some relatively simple things,

00:02:32.210 --> 00:02:37.790
simple ideas,
but the intention is really so that

00:02:37.790 --> 00:02:44.950
I can demonstrate some things that
you can do with Game Center that

00:02:44.980 --> 00:02:50.430
go beyond really just kind of the
simple use of scores for leaderboards

00:02:50.430 --> 00:02:53.510
and tracking achievements and so on.

00:02:55.020 --> 00:02:56.400
So three strategies.

00:02:56.400 --> 00:02:57.270
Here is number one.

00:02:57.280 --> 00:03:02.780
Think about ways that you can tie
the scores and achievements from

00:03:02.780 --> 00:03:09.000
your players from Game Center right
back into the core of your gameplay.

00:03:09.000 --> 00:03:12.180
And so what do I really mean by this?

00:03:12.180 --> 00:03:15.620
You know,
let's say that you have this example.

00:03:15.720 --> 00:03:19.400
You have an awesome tank
game up on the App Store.

00:03:19.400 --> 00:03:21.180
It's single player.

00:03:21.180 --> 00:03:23.140
You play against the computer.

00:03:23.140 --> 00:03:26.290
And, you know, typically... When you're
playing the game,

00:03:26.290 --> 00:03:27.220
okay, here we are.

00:03:27.220 --> 00:03:28.200
The game ends.

00:03:28.240 --> 00:03:29.690
You won, of course.

00:03:29.700 --> 00:03:36.230
And the game under the hood is going
to post that score up to Game Center.

00:03:36.240 --> 00:03:39.530
Now, from the player's perspective,
though,

00:03:39.530 --> 00:03:42.550
posting that score was invisible to them.

00:03:42.560 --> 00:03:45.580
So if they want to sort
of see how they're doing,

00:03:45.580 --> 00:03:48.700
how they rank against their friends,
you know,

00:03:48.700 --> 00:03:53.620
they're going to need to go and tap this
bottom that's down here at the bottom,

00:03:53.620 --> 00:03:54.840
for example.

00:03:55.410 --> 00:03:59.040
And bring up the leaderboard UI.

00:03:59.060 --> 00:04:01.480
And, okay, this is all fine.

00:04:01.480 --> 00:04:05.490
And they can see their score compared
to how their friends are doing.

00:04:05.500 --> 00:04:08.560
And, of course,
this is exactly what many most games that

00:04:08.560 --> 00:04:10.820
are using Game Center are doing today.

00:04:10.820 --> 00:04:11.890
And it's perfectly fine.

00:04:13.300 --> 00:08:11.700
[ Transcript missing ]

00:08:12.050 --> 00:08:14.920
Okay, so that's just,
that's the nugget of the ideas,

00:08:14.920 --> 00:08:19.050
to bring those things back into the
gameplay itself and think of ways

00:08:19.090 --> 00:08:21.300
to kind of show that to the user.

00:08:21.340 --> 00:08:25.270
But now, here are the ingredients that
you'll use to pull that off.

00:08:25.660 --> 00:08:28.170
So, of course,
you want to get the data out

00:08:28.290 --> 00:08:31.710
of the leaderboard and not
just have it show up in the UI.

00:08:31.710 --> 00:08:34.530
So,
you can actually use the GK leaderboard

00:08:34.530 --> 00:08:39.140
class to download the scores directly
from the Game Center service.

00:08:39.140 --> 00:08:43.890
And so, it'll give you the score data for
the players or all of their friends,

00:08:44.040 --> 00:08:47.630
or you can even get the global
leaderboard data as well.

00:08:47.660 --> 00:08:54.250
So, once you have these scores,
you can see the player ID.

00:08:54.260 --> 00:08:55.620
You can get the value.

00:08:55.620 --> 00:08:56.990
You can get the value
of the score itself.

00:08:57.060 --> 00:08:59.550
You can get their rank
on that leaderboard,

00:08:59.550 --> 00:09:02.910
the date, you know,
the date when they posted that score,

00:09:02.910 --> 00:09:03.650
and so on.

00:09:03.760 --> 00:09:07.410
And then, once you have the player ID,
you could take that even

00:09:07.560 --> 00:09:09.070
further if you wanted to.

00:09:09.180 --> 00:09:12.690
You know,
you could load the player's nickname

00:09:12.980 --> 00:09:18.020
and their photo and have that show
up in the game if they've provided

00:09:18.080 --> 00:09:21.030
Game Center with a photo to display.

00:09:21.160 --> 00:09:23.380
So, there's a lot that's there.

00:09:23.460 --> 00:09:27.770
And, you know, really, this,
provides all of that raw data

00:09:27.990 --> 00:09:30.850
that you need to be able to do
something that's a little more

00:09:30.880 --> 00:09:32.460
interesting with their scores.

00:09:32.560 --> 00:09:37.130
So, here's a quick code example
of doing exactly that.

00:09:37.190 --> 00:09:42.710
So, let's say that I want to download out
of Game Center the top 50 scores for

00:09:42.710 --> 00:09:45.290
my friends on a particular leaderboard.

00:09:45.530 --> 00:09:49.400
So, I'm going to create a
GK leaderboard object.

00:09:49.660 --> 00:09:50.960
And then here I configure it.

00:09:50.960 --> 00:09:52.500
So, configure the request.

00:09:52.500 --> 00:09:55.750
So, I'm saying, okay,
this particular leaderboard, tank game,

00:09:55.750 --> 00:09:56.760
tanks blasted.

00:09:56.760 --> 00:10:00.480
I'm going to set the time
scope to all time in this case.

00:10:00.480 --> 00:10:04.180
Set the player scope to
just my friend's network.

00:10:04.230 --> 00:10:09.450
And then set a range saying
I want the top 50 scores.

00:10:09.840 --> 00:10:13.280
And now that that's set up,
I can just make this call

00:10:13.280 --> 00:10:17.470
and fetch those scores out of
the Game Center leaderboard.

00:10:17.470 --> 00:10:20.160
So,
I'm calling load scores with completion

00:10:20.160 --> 00:10:25.130
handler and passing in just -- and
I'll get back an array of scores

00:10:25.130 --> 00:10:27.470
and maybe an error if one occurs.

00:10:27.500 --> 00:10:32.750
And so, now this array is going to have
those top 50 scores and my friends,

00:10:32.940 --> 00:10:36.300
and I can walk through that
array and put that into the

00:10:36.300 --> 00:10:39.030
gameplay itself and process those.

00:10:39.380 --> 00:10:40.300
Okay.

00:10:40.300 --> 00:10:45.260
Now, a few ways that you could go
even further with this same idea.

00:10:45.260 --> 00:10:50.070
So, we recently introduced a new
style of leaderboard called the

00:10:50.070 --> 00:10:52.450
most recent score leaderboard.

00:10:52.450 --> 00:10:58.480
So, instead of holding your all-time best
score or fastest time or whatever,

00:10:58.480 --> 00:11:03.070
it holds your most recent
score or your most recent time.

00:11:03.100 --> 00:11:07.100
Now, essentially,
this is a leaderboard that's intended

00:11:07.100 --> 00:11:11.880
for scores where your current state
will go up and down kind of as you're

00:11:11.880 --> 00:11:14.390
playing the game multiple times.

00:11:14.400 --> 00:11:18.610
You know, things like this may not be
the best example locally here,

00:11:18.610 --> 00:11:21.940
but batting averages in
baseball or win-loss ratios or

00:11:21.940 --> 00:11:24.800
poker chips in a tournament,
that sort of thing.

00:11:24.800 --> 00:11:32.160
And those things can be really
compelling to your players.

00:11:32.340 --> 00:11:33.300
The second one.

00:11:33.470 --> 00:11:37.410
So you, the developer, you know,
the game knows what my

00:11:37.410 --> 00:11:39.300
all-time best score was.

00:11:39.310 --> 00:11:41.900
Obviously, it posted it to Game Center.

00:11:41.990 --> 00:11:46.060
You have that information
from the leaderboard as well.

00:11:46.470 --> 00:11:49.180
And, you know, just think,
if I pass that score,

00:11:49.180 --> 00:11:51.880
the game could do something more special.

00:11:51.880 --> 00:11:54.850
You know, present a banner or show
something that says,

00:11:54.850 --> 00:11:58.180
okay, you've got a new high score
and tie that in somewhere.

00:11:59.740 --> 00:12:03.860
And then just to note also,
the examples that I've been citing so

00:12:03.930 --> 00:12:08.190
far are all dealing to do with scores,
but you could do the exact same

00:12:08.190 --> 00:12:10.340
thing with achievements as well.

00:12:10.570 --> 00:12:14.380
So rather than having
achievements be kind of passive,

00:12:14.380 --> 00:12:18.300
just something that the player
learns later that they got

00:12:18.470 --> 00:12:21.980
an achievement for something,
instead of that,

00:12:22.210 --> 00:12:27.170
before the player starts the game or
before they go into the next level,

00:12:27.170 --> 00:12:29.580
you could prime them with a score.

00:12:47.720 --> 00:12:47.720
And then just to note also,
the examples that I've been citing so

00:12:47.720 --> 00:12:47.720
far are all dealing to do with scores,
but you could prime them with a score.

00:12:47.720 --> 00:12:47.720
So rather than having
achievements be kind of passive,

00:12:47.720 --> 00:12:47.720
just something that the player
learns later that they got

00:12:47.720 --> 00:12:47.720
an achievement for something,
instead of that,

00:12:47.720 --> 00:12:47.720
before the player starts the game or
before they go into the next level,

00:12:47.720 --> 00:12:47.720
you could prime them with a score.

00:12:48.150 --> 00:12:49.930
But okay, so that is number one.

00:12:50.100 --> 00:12:53.230
Tie your scores and achievements
back into your gameplay.

00:12:53.230 --> 00:12:57.010
It's a really simple idea, of course,
but something that actually not

00:12:57.010 --> 00:13:01.630
very many games are doing right now,
and the ones that are doing it,

00:13:01.630 --> 00:13:05.150
it's really interesting
what they've done.

00:13:05.530 --> 00:13:08.680
Okay, here's item number two.

00:13:08.680 --> 00:13:13.710
Elevate challenges up
into your game UI as well.

00:13:14.210 --> 00:13:17.060
So it's a real similar idea to
what I was just talking about,

00:13:17.060 --> 00:13:20.410
but let's do a quick recap
of challenges before I go.

00:13:20.580 --> 00:13:23.930
So within Game Center,
you can challenge a friend

00:13:23.930 --> 00:13:27.620
to beat your score or to earn
a particular achievement.

00:13:27.620 --> 00:13:31.750
And the idea is to bring kind
of an additional competitive

00:13:31.820 --> 00:13:35.270
element into the game,
and particularly into

00:13:35.270 --> 00:13:37.080
single-player games,
right?

00:13:37.080 --> 00:13:42.700
Because it's going to drive
competition if I send you a challenge,

00:13:42.700 --> 00:13:44.010
for example.

00:13:44.080 --> 00:13:48.290
So, you know, let's say that, well,
there's two kinds of challenges.

00:13:48.290 --> 00:13:50.260
The first is a score challenge.

00:13:50.260 --> 00:13:54.380
And let's say that you and
I are friends in Game Center,

00:13:54.380 --> 00:14:00.220
and I challenge you to beat... My score
that I got in a particular game.

00:14:00.220 --> 00:14:03.660
So you'll get a push notification
that I've challenged you.

00:14:03.660 --> 00:14:07.630
And then when you run the game, you know,
you can try and beat

00:14:07.750 --> 00:14:09.370
the score that I got.

00:14:09.430 --> 00:14:12.020
And but then, okay, that's simple enough.

00:14:12.020 --> 00:14:15.340
But then it actually gets
a little more interesting.

00:14:15.340 --> 00:14:19.910
Because if you beat the score
that I challenged you to beat,

00:14:19.910 --> 00:14:25.520
then actually Game Center will
automatically re-challenge me back.

00:14:25.520 --> 00:14:27.580
And then I get a push notification.

00:14:27.660 --> 00:14:30.360
Saying that, you know, you beat my score.

00:14:30.360 --> 00:14:31.680
And I pull my phone out.

00:14:31.700 --> 00:14:32.590
I play the game.

00:14:32.590 --> 00:14:34.300
I try to beat your score.

00:14:34.300 --> 00:14:37.230
And this will keep on ping-ponging
back and forth between us for

00:14:37.250 --> 00:14:38.650
as long as we play the game.

00:14:38.720 --> 00:14:43.330
And kind of keep us both engaged in
the game competing with each other.

00:14:44.990 --> 00:14:47.930
So, and achievement challenges are very,
very similar.

00:14:47.930 --> 00:14:50.740
I can challenge you to earn
a particular achievement.

00:14:50.740 --> 00:14:52.620
It all works just in the same way.

00:14:52.860 --> 00:14:54.590
So, what's the issue?

00:14:54.590 --> 00:14:58.640
Well, you know, let's say that I wanted
to send you a challenge.

00:14:58.640 --> 00:15:02.680
So, I have to tap the button
and bring up that,

00:15:02.800 --> 00:15:07.290
the leaderboard UI,
and then I can tap myself here,

00:15:07.290 --> 00:15:13.380
and it would bring up more detail,
and then I can hit this button here,

00:15:13.380 --> 00:15:16.720
this bubble, that says challenge friends.

00:15:16.720 --> 00:15:19.660
And then from there,
it's going to bring up a UI where

00:15:19.660 --> 00:15:23.680
I would pick the friends I want to
challenge with this particular score,

00:15:24.010 --> 00:15:24.250
right?

00:15:24.260 --> 00:15:27.680
And, you know, this is,
that's just how it works.

00:15:27.680 --> 00:15:28.520
It's fine.

00:15:28.520 --> 00:15:32.550
And again, that's kind of the way
that most games work today.

00:15:32.590 --> 00:15:36.650
But the issue is really just
the exact same thing that

00:15:36.650 --> 00:15:38.810
I said in the last section.

00:15:38.870 --> 00:15:43.660
You want to try and find ways that
you can bring this flow up into,

00:15:43.660 --> 00:16:03.600
closer to the user,
in the gameplay itself.

00:16:03.600 --> 00:16:03.600
So, here's some ideas for
how you can do this.

00:16:03.600 --> 00:16:03.620
You know,
the first idea is actually very simple.

00:16:03.620 --> 00:16:03.620
If the game is over,
and I've just for the first time

00:16:03.620 --> 00:16:03.650
beat one of my friends' scores,
that's an ideal person

00:16:03.650 --> 00:16:03.940
to send a challenge to.

00:16:03.940 --> 00:16:07.130
So, the game could recognize
that that's the case,

00:16:07.140 --> 00:16:10.190
that this has happened,
and then offer a UI just to

00:16:10.190 --> 00:16:13.980
send a challenge to that one
person right then and there.

00:16:13.980 --> 00:16:14.860
Right?

00:16:14.860 --> 00:16:19.450
The second idea,
let's say that I've received challenges.

00:16:19.470 --> 00:16:23.000
Well, of course, you know,
the game should really provide some

00:16:23.000 --> 00:16:24.920
indication of that when I launch.

00:16:24.920 --> 00:16:27.500
You know,
some indicator as I come into the game,

00:16:27.550 --> 00:16:30.550
saying that there's challenges
that are pending for you.

00:16:30.560 --> 00:16:34.010
And then third,
let's say that I'm playing the game,

00:16:34.010 --> 00:16:36.980
and I've beat,
I'm trying to beat a particular

00:16:36.980 --> 00:16:39.240
challenge that I've received.

00:16:39.240 --> 00:16:43.180
Well, you know,
really think hard about how you could

00:16:43.180 --> 00:16:44.840
show that challenge to the other person.

00:16:44.840 --> 00:17:14.820
Right?

00:17:14.820 --> 00:17:44.790
So,
let's say that I've received a challenge.

00:17:44.800 --> 00:17:44.800
Well,
let's say that I've beat a particular

00:17:44.800 --> 00:17:44.800
challenge that I've received.

00:17:44.800 --> 00:17:44.800
Well,
let's say that I've beat a particular

00:17:44.800 --> 00:17:44.800
challenge that I've received.

00:17:44.800 --> 00:17:54.800
Right?

00:17:54.800 --> 00:17:58.780
So, those are some of the ideas here.

00:17:58.780 --> 00:18:03.350
Now, the ingredients of doing this
are actually very similar to what

00:18:03.360 --> 00:18:04.660
I just showed you a minute ago.

00:18:04.660 --> 00:18:07.900
We have the GK leaderboard,
which can download score data for

00:18:07.900 --> 00:18:10.790
the local player and the friends,
just as I showed you a

00:18:10.790 --> 00:18:12.260
couple of minutes ago.

00:18:12.260 --> 00:18:14.720
This is what you would use
if you were to launch a game.

00:18:14.810 --> 00:18:23.620
You would use GK score
and GK achievement.

00:18:23.620 --> 00:18:27.280
Of course, that's how you post scores and
achievements into your leaderboards

00:18:27.290 --> 00:18:28.940
or into the achievement system.

00:18:28.940 --> 00:18:34.120
But you also use those same objects to
issue challenges to the player's friends.

00:18:34.210 --> 00:18:37.390
So, there's a built-in UI that
you bring up with challenge

00:18:37.390 --> 00:18:41.290
composed controller with players,
a list of players, and a message,

00:18:41.290 --> 00:18:42.980
and a completion handler.

00:18:42.980 --> 00:18:44.750
And then on the other side,
you have the GK score.

00:18:44.760 --> 00:18:46.470
That's to send challenges.

00:18:46.480 --> 00:18:48.840
To receive them back,
there's these objects,

00:18:48.910 --> 00:18:51.810
the GK challenge and its subclasses,
score challenge and

00:18:51.830 --> 00:18:53.370
achievement challenges.

00:18:53.380 --> 00:18:55.800
That's how you track the
ones that you've received.

00:18:55.800 --> 00:18:58.410
And there's a class method,
load receive challenges

00:18:58.410 --> 00:18:59.900
with completion handler.

00:18:59.920 --> 00:19:02.350
That's stuff that you should do
when the game starts up to see if

00:19:02.390 --> 00:19:03.970
there's anything that's out there.

00:19:05.790 --> 00:19:08.810
But now,
so here's a quick example of this.

00:19:08.880 --> 00:19:12.440
Let's say that I want to just find out,
like I finished the game,

00:19:12.440 --> 00:19:17.430
and I want to find players that have
a lower score than what I just earned.

00:19:17.430 --> 00:19:19.300
So I can do that here.

00:19:19.320 --> 00:19:22.310
So I'm going to start out,
I'm going to go get the leaderboard data,

00:19:22.380 --> 00:19:24.330
just as I showed you a couple slides ago.

00:19:24.330 --> 00:19:26.780
I create the leaderboard,
I would set it up,

00:19:26.780 --> 00:19:29.910
that's the dot dot dot,
I would go and fetch those scores.

00:19:30.000 --> 00:19:32.240
So, so far it's the exact same code.

00:19:33.240 --> 00:19:37.540
Now, once I have that array of scores,
it's pretty simple for me to go

00:19:37.540 --> 00:19:41.260
through the array and find the
scores that are lower than mine,

00:19:41.260 --> 00:19:42.690
than the one I just did.

00:19:42.720 --> 00:19:46.480
You know, one real easy way to do it
is to set up an NSPredicate.

00:19:46.590 --> 00:19:51.430
So here, an NSPredicate with format,
I specify that the value is

00:19:51.430 --> 00:19:56.040
less than what I pass in,
which is the score I just earned.

00:19:56.040 --> 00:20:02.110
And I get, can then use NSArray method,
filtered array using predicate.

00:20:02.580 --> 00:20:05.770
You know, to give me back a new array,
just with the scores

00:20:05.780 --> 00:20:07.430
that are lower than mine.

00:20:07.470 --> 00:20:10.070
And probably the first element
in that array is going to be

00:20:10.070 --> 00:20:12.620
the one that's closest to mine,
and that might be,

00:20:12.640 --> 00:20:15.960
that might be who I would
issue a challenge to.

00:20:15.970 --> 00:20:16.460
Right?

00:20:16.460 --> 00:20:20.490
And so then I could have some code that's
going to go off and pull that apart and

00:20:20.500 --> 00:20:22.810
send off the challenge to that player.

00:20:23.470 --> 00:20:25.190
But so that's number two.

00:20:25.200 --> 00:20:28.750
Think of ways that you can
bring challenges up into

00:20:28.860 --> 00:20:33.660
the primary UI of your game,
either for sending challenges or for

00:20:33.660 --> 00:20:36.710
challenges that that player has received.

00:20:37.480 --> 00:20:43.790
Okay, and here now is number three,
which is to manage your leaderboards.

00:20:44.040 --> 00:20:48.050
You know, I'm sure that you guys have all
seen something kind of like this.

00:20:48.140 --> 00:20:52.640
Here is the all-time top
leaderboard for my awesome tanks

00:20:52.640 --> 00:20:54.660
game with a lot of players.

00:20:54.660 --> 00:20:58.030
But, you know,
if you take kind of a closer look,

00:20:58.030 --> 00:20:59.670
you see a lot of this.

00:20:59.670 --> 00:21:01.460
You know, what is this?

00:21:01.460 --> 00:21:08.480
Well, 9 quintillion, 223 quadrillion,
372 trillion, et cetera, right?

00:21:08.480 --> 00:21:10.620
So, what is this number?

00:21:11.080 --> 00:21:13.580
This is int64 max, right?

00:21:13.580 --> 00:21:17.600
It's the largest signed 64-bit integer.

00:21:17.600 --> 00:21:22.040
And so, which is, of course,
the biggest score that can

00:21:22.120 --> 00:21:24.580
be submitted to Game Center.

00:21:24.580 --> 00:21:27.730
So, you know,
it's kind of doubtful that people

00:21:27.730 --> 00:21:29.910
are really earning this score.

00:21:29.910 --> 00:21:33.020
Instead,
they're probably finding some way of

00:21:33.020 --> 00:21:35.810
just injecting this into your games.

00:21:35.900 --> 00:21:38.460
So, this is the game center.

00:21:38.460 --> 00:21:39.290
So, this is a problem.

00:21:39.310 --> 00:21:43.220
And, you know,
what it goes to is that you really

00:21:43.220 --> 00:21:48.340
want your goal here is actually
to be able to use your leaderboard

00:21:48.340 --> 00:21:50.880
to drive player engagement.

00:21:50.880 --> 00:21:55.190
But people are cheating and posting
fake scores to your leaderboard,

00:21:55.190 --> 00:21:57.340
which kind of breaks that flow.

00:21:57.340 --> 00:22:01.560
So, we need ways to get rid of that.

00:22:01.610 --> 00:22:04.400
And actually, now,
we have three great different

00:22:04.820 --> 00:22:06.400
ways that you can do that.

00:22:06.480 --> 00:22:08.430
So, the first is something that
I've been doing for a long time.

00:22:08.490 --> 00:22:09.520
And it's something that already existed.

00:22:09.520 --> 00:22:12.540
But I know that not many
people are using it.

00:22:12.630 --> 00:22:18.020
Because any time I see nine quintillion,
et cetera, I know they're not doing this.

00:22:18.020 --> 00:22:20.220
And what it is is this.

00:22:20.220 --> 00:22:23.230
In iTunes Connect,
when you go and you look at one of

00:22:23.230 --> 00:22:27.770
your leaderboards that you've set up,
there's an item there called the

00:22:27.770 --> 00:22:29.830
score range that you can set.

00:22:29.940 --> 00:22:33.320
And this,
you enter a low value and a high value.

00:22:33.340 --> 00:22:38.270
And any scores that are posted to that
leaderboard outside of that range.

00:22:38.700 --> 00:22:39.780
aren't going to show up.

00:22:40.930 --> 00:22:45.660
And it's even better than just,
they're not just like thrown away.

00:22:45.790 --> 00:22:48.700
They actually get stored
by the service and act,

00:22:48.700 --> 00:22:53.230
if they're outside of the range,
and act in a way as a honey trap,

00:22:53.280 --> 00:22:57.870
trapping that user with a high
score that is outside of the

00:22:57.870 --> 00:23:00.440
visible range for your game.

00:23:00.480 --> 00:23:03.450
So in a way,
you're kind of like defining the

00:23:03.450 --> 00:23:07.570
range of visible light in your,
you know, the bandwidths of visible

00:23:07.580 --> 00:23:08.540
light in your game.

00:23:08.540 --> 00:23:10.860
And if somebody posts
something in the ultraviolet,

00:23:10.880 --> 00:23:13.070
they're cheating,
but nobody will ever see it.

00:23:13.180 --> 00:23:14.210
Right?

00:23:14.220 --> 00:23:15.940
That's how this works.

00:23:15.940 --> 00:23:18.540
And so, and it's very powerful,
and you can set this up

00:23:18.540 --> 00:23:19.880
for every leaderboard.

00:23:20.720 --> 00:23:25.810
The second thing is that now, in iOS 7,
we are signing score submissions

00:23:26.100 --> 00:23:30.250
as they travel between the
Game Center daemon running on your

00:23:30.250 --> 00:23:33.100
device and the Game Center service.

00:23:33.120 --> 00:23:35.010
So here's our tank game again.

00:23:35.010 --> 00:23:38.640
You know, if it's,
if it is posting a legitimate score here,

00:23:38.720 --> 00:23:41.500
that's going to go up,
and the Game Center server

00:23:41.520 --> 00:23:45.510
will check the signature,
and of course, it's valid in this case,

00:23:45.510 --> 00:23:46.980
so it'll go through.

00:23:46.980 --> 00:23:52.890
But if somebody is a man in the middle,
and they end up hijacking that

00:23:52.900 --> 00:23:56.880
and posting a bogus score,
the signature is not going to match,

00:23:56.880 --> 00:24:00.600
and we will just not
accept that submission.

00:24:00.970 --> 00:24:01.860
So that's the second thing.

00:24:01.860 --> 00:24:04.000
It's something on our side.

00:24:04.050 --> 00:24:06.270
Now,
the third one is something that was just

00:24:06.370 --> 00:24:09.040
added and is actually really powerful.

00:24:09.040 --> 00:24:14.710
So we are now providing a way for you,
the developer, to manage your scores,

00:24:14.710 --> 00:24:19.100
manage your leaderboards
from within iTunes Connect.

00:24:19.100 --> 00:24:25.030
So you can go into iTunes Connect today
and look at the top 100 scores

00:24:25.030 --> 00:24:29.830
that are on your leaderboard,
and you can delete them

00:24:29.830 --> 00:24:33.660
if any are invalid,
and you can even block

00:24:33.720 --> 00:24:35.490
the user that posted them.

00:24:35.500 --> 00:24:38.700
So let's go and -- and this
is available to you already.

00:24:38.700 --> 00:24:41.470
And actually,
a lot of you probably got an e-mail

00:24:41.480 --> 00:24:45.690
from iTunes Connect just in the
past week or two talking about this.

00:24:45.700 --> 00:24:48.300
So let's talk in a little more detail.

00:24:48.300 --> 00:24:51.890
If you delete a score, you know,
you're just basically going and kind

00:24:51.990 --> 00:24:53.900
of cleaning up your leaderboard.

00:24:54.050 --> 00:24:55.280
There's just a button that you can hit.

00:24:55.310 --> 00:24:56.090
Delete the score.

00:24:56.280 --> 00:24:56.500
Okay.

00:24:56.500 --> 00:24:57.010
Confirm.

00:24:57.340 --> 00:24:58.300
And it's gone.

00:24:58.440 --> 00:25:01.170
So if you do that,
it's going to remove that score

00:25:01.170 --> 00:25:03.290
from just that one leaderboard.

00:25:03.410 --> 00:25:06.530
And, of course,
that player could come back the next day,

00:25:06.630 --> 00:25:11.720
play again, and post, you know,
that same score or whatever

00:25:11.720 --> 00:25:15.230
to the leaderboard,
and that's going to show

00:25:15.230 --> 00:25:17.500
up just like normal.

00:25:17.500 --> 00:25:19.040
this one leaderboard in your game.

00:25:19.100 --> 00:25:21.410
So, if there's any others that
need to be cleaned up,

00:25:21.470 --> 00:25:23.600
you would have to go
and do those as well.

00:25:23.600 --> 00:25:25.680
But that's still very powerful.

00:25:25.680 --> 00:25:29.700
You're able to just go in and
clean up those leaderboards.

00:25:29.700 --> 00:25:33.250
Now, the second part, though,
is blocking a user.

00:25:33.470 --> 00:25:38.290
So, if you have somebody who
is repeatedly posting bogus

00:25:38.380 --> 00:25:45.170
scores to your leaderboards,
well, now you can go and you can block

00:25:45.310 --> 00:25:47.180
them from submitting anymore.

00:25:47.200 --> 00:25:49.870
So, once you do that,
once you block a user,

00:25:49.870 --> 00:25:54.930
it's going to remove their scores from
all of your leaderboards for this game,

00:25:54.930 --> 00:25:59.600
and it will prevent them from posting
any new scores into any of your

00:25:59.980 --> 00:26:03.310
leaderboards from that point forward.

00:26:03.310 --> 00:26:07.480
And note that it also
applies to game groups.

00:26:07.480 --> 00:26:13.350
So, if you have your app grouped between,
for example, iOS and OS X,

00:26:13.350 --> 00:26:17.560
or you've set up a free version
of your game and a paid version of

00:26:17.560 --> 00:26:21.070
the game in the same game group,
then if you block a user,

00:26:21.070 --> 00:26:23.720
it's going to be across
that entire group.

00:26:23.820 --> 00:26:29.190
So, this is very powerful,
and it's something that we expect

00:26:29.190 --> 00:26:33.650
that you can use now to eliminate
a lot of the abuse that can be

00:26:33.650 --> 00:26:35.960
happening with leaderboards.

00:26:36.070 --> 00:26:39.830
But just bear in mind,
this is a big power to have.

00:26:39.830 --> 00:26:41.000
It's a pretty big hammer.

00:26:41.000 --> 00:26:41.680
And if you're going
to be able to do that,

00:26:41.710 --> 00:26:43.300
you're going to have to do a lot of work.

00:26:43.300 --> 00:26:45.010
And, you know, use this wisely.

00:26:45.010 --> 00:26:47.770
We're giving this capability to you,
the developer.

00:26:47.860 --> 00:26:48.600
It's your game.

00:26:48.700 --> 00:26:51.500
But, of course,
you want to only use this in cases

00:26:51.500 --> 00:26:55.750
where you're certain that you know that
somebody is abusing your scoring system.

00:26:57.290 --> 00:26:57.920
But so that is it.

00:26:58.050 --> 00:27:00.520
That is number three.

00:27:00.610 --> 00:27:03.000
Manage your leaderboards.

00:27:03.070 --> 00:27:03.360
Okay.

00:27:03.720 --> 00:27:05.620
And that takes me to
the end of Game Center.

00:27:05.620 --> 00:27:08.570
Just some great ways for
you to drive some increased

00:27:09.000 --> 00:27:11.650
engagement in your game and to,
you know,

00:27:11.990 --> 00:27:16.180
kind of go beyond what people are
doing right now with Game Center.

00:27:18.030 --> 00:27:20.900
But so next,
I want to just completely change topics.

00:27:21.030 --> 00:27:23.610
We're done with Game Center,
and now let's move on

00:27:23.660 --> 00:27:25.640
with game controllers.

00:27:31.790 --> 00:27:32.690
Okay.

00:27:32.750 --> 00:27:34.250
So, game controllers.

00:27:34.290 --> 00:27:37.900
You know,
so we announced back at WWDC that

00:27:37.900 --> 00:27:43.050
we'd be adding support for physical
game controllers into iOS 7.

00:27:43.060 --> 00:27:46.670
And, I mean, this is very exciting,
I think.

00:27:47.300 --> 00:27:51.480
Now, I want to go into a lot of the
detail that's involved with this.

00:27:51.480 --> 00:27:55.350
So, what we are delivering is
really coming in two parts.

00:27:55.350 --> 00:28:01.290
The first part is a spec that we're
providing to the manufacturers of game

00:28:01.290 --> 00:28:04.800
controllers who are in the MFI program.

00:28:04.840 --> 00:28:08.140
So,
this provides them with the spec defines

00:28:08.140 --> 00:28:14.120
a standard way for third-party accessory
developers to build controllers as part

00:28:14.120 --> 00:28:17.120
of our made-for-iPhone MFI program.

00:28:17.300 --> 00:28:21.430
You know, the spec is going to define all
the physical and technological

00:28:21.430 --> 00:28:25.820
requirements of the controllers,
you know, how the controls are laid out,

00:28:26.410 --> 00:28:31.720
how they behave,
the data transport between

00:28:31.720 --> 00:28:35.120
the controller and iOS,
and so on.

00:28:35.290 --> 00:28:40.770
And the real goal of the
spec is very specific.

00:28:40.780 --> 00:28:46.700
It's to ensure that when
customers are in a retail store

00:28:46.700 --> 00:28:52.150
and they see that MFI label,
that they can be very confident that

00:28:52.280 --> 00:28:55.790
they're looking at the box and they
see that with a controller inside.

00:28:55.800 --> 00:28:59.790
They can be confident that that
controller is going to work with

00:28:59.970 --> 00:29:04.830
games that's on the App Store that
are supporting game controllers.

00:29:04.930 --> 00:29:09.100
That is the first piece,
a spec to get consistency among

00:29:09.140 --> 00:29:12.310
the different device manufacturers.

00:29:12.320 --> 00:29:16.040
The second piece is for you guys,
probably.

00:29:16.040 --> 00:29:20.270
It is a framework for developers like
you to be able to add support for

00:29:20.270 --> 00:29:22.520
game controllers into your games.

00:29:22.640 --> 00:29:24.600
It is a pretty simple API.

00:29:24.640 --> 00:29:28.740
It lets you detect the controllers,
connect with them,

00:29:28.830 --> 00:29:33.660
and then just go and sample the
inputs that are coming off them.

00:29:33.660 --> 00:29:37.560
And, you know,
the goal of this framework, actually, is,

00:29:37.560 --> 00:29:39.440
well, it is consistency.

00:29:39.440 --> 00:29:43.020
You know,
we want for developers to be able

00:29:43.020 --> 00:29:49.440
to take advantage of one consistent
central API for all of the controllers,

00:29:49.440 --> 00:29:53.760
regardless of vendor,
so that you can all just kind of

00:29:53.870 --> 00:29:57.890
focus on making great games instead
of dealing with vendor-specific

00:29:57.890 --> 00:30:02.590
differences in the controllers.

00:30:02.810 --> 00:30:05.640
But so, now,
let's go into a little detail.

00:30:05.640 --> 00:30:10.630
There's three different kinds of,
or three different classes of controllers

00:30:10.630 --> 00:30:12.660
that are supported by the API.

00:30:12.660 --> 00:30:14.440
And here's the first one.

00:30:14.510 --> 00:30:18.410
So, this is called the
form-fitting standard gamepad.

00:30:18.420 --> 00:30:22.040
So,
form-fitting means that the controller

00:30:22.040 --> 00:30:25.570
itself physically encases your device.

00:30:25.570 --> 00:30:28.120
Your phone just snaps
into the controller.

00:30:28.760 --> 00:30:32.140
So, while you're playing,
you can be mashing the buttons,

00:30:32.140 --> 00:30:36.220
but then it's also very easy for you
to touch the screen with your fingers

00:30:36.220 --> 00:30:41.650
or use device motion to control
the game as well at the same time.

00:30:41.660 --> 00:30:43.610
Now, that's form-fitting.

00:30:43.950 --> 00:30:46.810
Standard gamepad,
what that refers to is the buttons,

00:30:46.810 --> 00:30:48.220
the control layout.

00:30:48.220 --> 00:30:52.220
So, a standard gamepad has
a D-pad on the left,

00:30:52.220 --> 00:30:56.290
the A, B, X,
and Y buttons over on the right.

00:30:56.320 --> 00:30:58.580
With those colors and that pattern.

00:30:58.760 --> 00:31:03.300
pattern, and then two shoulder buttons
that are on the front.

00:31:04.010 --> 00:31:06.120
Okay, here's the next one.

00:31:06.300 --> 00:31:09.900
This is called the
form-fitting extended gamepad.

00:31:09.980 --> 00:31:11.680
So, again, this is form-fitting.

00:31:12.000 --> 00:31:15.260
The device physically
snaps into the controller,

00:31:15.260 --> 00:31:16.440
just like the first one.

00:31:16.680 --> 00:31:19.820
But what's different here is
that instead of standard gamepad,

00:31:19.840 --> 00:31:21.300
it's extended gamepad.

00:31:21.300 --> 00:31:23.810
So it adds a couple more controls.

00:31:23.810 --> 00:31:27.040
Two thumbsticks,
one on the left and one on the right,

00:31:27.040 --> 00:31:30.250
and two triggers down
below the shoulder buttons.

00:31:31.920 --> 00:31:32.230
Okay.

00:31:32.230 --> 00:31:36.370
And then here is the third
class of controllers.

00:31:36.780 --> 00:31:39.880
This is called a standalone
extended gamepad.

00:31:39.880 --> 00:31:43.670
So, here,
the difference is that it is standalone.

00:31:43.940 --> 00:31:46.760
It is not physically
attached to your device.

00:31:46.760 --> 00:31:50.630
It could be connected over a wire,
but more often it will be connected

00:31:50.630 --> 00:31:52.380
wirelessly over Bluetooth.

00:31:52.460 --> 00:31:57.370
And the expectation with
a standalone controller,

00:31:57.370 --> 00:32:01.360
then,
is that all of the game input is only

00:32:01.360 --> 00:32:03.650
being taken from the controller itself.

00:32:03.790 --> 00:32:07.370
You're typically not also
interacting with the device or using,

00:32:07.760 --> 00:32:10.640
you know, the gyroscope and so on.

00:32:10.890 --> 00:32:13.340
Now, standalone extended gamepad.

00:32:13.430 --> 00:32:17.030
So, the controls are all the
same as the form-fitting

00:32:17.100 --> 00:32:19.600
extended gamepad you just saw.

00:32:20.180 --> 00:32:21.620
Okay, so those are the three kinds.

00:32:21.620 --> 00:32:24.900
Now,
as far as the controllers themselves,

00:32:24.990 --> 00:32:28.050
you know, we mentioned back in June that
we're working very closely with

00:32:28.050 --> 00:32:31.200
a number of manufacturers in
our MFI program who are building

00:32:31.200 --> 00:32:33.800
controllers like Logitech and Mocha.

00:32:33.800 --> 00:32:37.220
And, you know,
now that work has been paying off.

00:32:37.220 --> 00:32:40.940
And there are several controllers
that are now available in retail.

00:32:40.940 --> 00:32:43.220
I have a couple of them
with me here today.

00:32:43.220 --> 00:32:46.960
But so now let me look at how, you know,
just how to integrate these

00:32:47.010 --> 00:32:49.000
controllers into your games.

00:32:49.580 --> 00:32:54.370
So the main class that you'll use
for this is called GC Controller.

00:32:54.370 --> 00:32:59.020
This represents a controller that
is connected with your device.

00:32:59.110 --> 00:33:02.100
And, you know,
you use the same class for all

00:33:02.100 --> 00:33:05.810
of the different controllers
regardless of vendor.

00:33:05.820 --> 00:33:08.500
So what a GC Controller is
going to provide,

00:33:08.500 --> 00:33:11.800
well, kind of at a high level,
these three things.

00:33:12.320 --> 00:33:14.070
Methods for finding controllers.

00:33:14.070 --> 00:33:17.360
So it can give you the connectors,
the controllers that

00:33:17.360 --> 00:33:19.120
are currently connected.

00:33:19.560 --> 00:33:23.420
It'll give you notifications for
a live connect and disconnect.

00:33:23.420 --> 00:33:29.420
And there's methods there to help you
discover any wireless controllers.

00:33:29.420 --> 00:33:33.340
Then it'll give you access to all
of the input data off the D-pad,

00:33:33.340 --> 00:33:36.340
the buttons, the thumbsticks, triggers.

00:33:36.340 --> 00:33:39.990
And also some information
about the controller itself.

00:33:39.990 --> 00:33:43.110
We'll tell you its profile,
meaning whether it is

00:33:43.110 --> 00:33:45.170
standard or extended game pad.

00:33:45.230 --> 00:33:48.780
We'll tell you whether it's
attached or standalone.

00:33:49.590 --> 00:33:50.440
We'll tell you the vendor.

00:33:50.440 --> 00:33:54.010
We'll tell you a player index
for some lights on the front,

00:33:54.010 --> 00:33:56.730
pause button state, that kind of thing.

00:33:56.740 --> 00:33:58.200
Okay?

00:33:58.200 --> 00:34:00.110
So that's what the class provides.

00:34:00.110 --> 00:34:03.980
Let me just kind of show you how
you get connected to one of these.

00:34:04.000 --> 00:34:11.220
Really just there's a class,
an array on the class called controllers.

00:34:11.220 --> 00:34:15.240
And that's the main entry
point to using this class.

00:34:15.240 --> 00:34:19.300
It'll be empty at first
and then it gets updated.

00:34:19.520 --> 00:34:24.340
whenever controllers are
connected with your game.

00:34:24.550 --> 00:34:28.580
So let me describe visually kind
of the process you typically

00:34:28.580 --> 00:34:30.420
go through to set this up.

00:34:30.460 --> 00:34:34.110
So it's expected, probably,
that you will have a method in

00:34:34.110 --> 00:34:37.280
your app called setupControllers
or something like that,

00:34:37.410 --> 00:34:41.580
that you'll use as the
central location for any time

00:34:41.580 --> 00:34:43.520
there is a controller change.

00:34:43.530 --> 00:34:45.740
You just figure it out from there.

00:34:45.960 --> 00:34:49.560
And within that method,
that's where you can go and

00:34:49.680 --> 00:34:54.020
look at the controller's array,
see what's there,

00:34:54.020 --> 00:34:56.490
and then act accordingly.

00:34:56.840 --> 00:35:00.550
But then probably in your application
did finish launching with options,

00:35:00.630 --> 00:35:04.920
there's a few things you probably
want to kick off from that point.

00:35:04.920 --> 00:35:08.770
This is where you can set up
notifications for connections being

00:35:08.770 --> 00:35:13.740
disconnected or connected or disconnected
to calling to setupControllers.

00:35:13.740 --> 00:35:17.830
And it's also where you will kick off
discovery of any wireless controllers.

00:35:17.840 --> 00:35:22.700
And so you can kind of see
this flow from left to right.

00:35:22.740 --> 00:35:25.040
We start wireless discovery.

00:35:25.050 --> 00:35:29.750
And then whatever controllers are found,
be they wireless or connected,

00:35:29.840 --> 00:35:33.720
form fitting,
will get a connect notification.

00:35:33.750 --> 00:35:37.480
The connect notification will
call your setupControllers method.

00:35:37.490 --> 00:35:41.000
And then within that method,
you can go and look at the array and see

00:35:41.000 --> 00:35:44.250
what's there and then react from that.

00:35:44.750 --> 00:35:47.600
So here that is in a bit of code.

00:35:47.600 --> 00:35:50.120
We're in application did
finish launching with options.

00:35:50.120 --> 00:35:54.050
We start out just, you know,
here's some code first to check

00:35:54.050 --> 00:35:58.510
whether the controller class exists
on the OS version we're running,

00:35:58.640 --> 00:36:01.660
like Dave was showing you earlier today.

00:36:01.920 --> 00:36:05.960
And then assuming it does,
here is where we're setting up those two

00:36:05.960 --> 00:36:08.920
notifications for connect and disconnect.

00:36:08.920 --> 00:36:14.660
And then here I start kick off the
search for any wireless controllers.

00:36:14.660 --> 00:36:17.740
And really,
setup is just kind of that easy.

00:36:17.740 --> 00:36:21.120
You know,
here's our setup controllers method.

00:36:21.120 --> 00:36:24.640
All I'm doing in here, this is fake code,
right?

00:36:24.660 --> 00:36:27.020
It's just going and
looking at that array,

00:36:27.020 --> 00:36:30.300
and then I would,
the game would respond accordingly.

00:36:30.300 --> 00:36:31.450
Maybe moving inputs.

00:36:31.920 --> 00:36:33.770
Input over onto the
controllers and so on.

00:36:33.800 --> 00:36:37.520
But really, in a way,
that's the majority of all you

00:36:37.660 --> 00:36:40.340
have to do to support a controller.

00:36:42.060 --> 00:36:43.240
So now the assumption.

00:36:43.240 --> 00:36:43.530
Okay.

00:36:43.890 --> 00:36:45.770
We have a controller connected.

00:36:45.930 --> 00:36:48.250
I want to show you how
you read its inputs.

00:36:48.280 --> 00:36:52.340
And so, again, here are the three classes
of different controllers,

00:36:52.340 --> 00:36:54.620
just kind of drawn schematically.

00:36:54.620 --> 00:36:58.050
And so, to read the inputs,
you have to understand the

00:36:58.050 --> 00:37:00.540
concept of the controller profile.

00:37:00.540 --> 00:37:06.120
Because profiles define the controls
that are going to be on the actual

00:37:06.120 --> 00:37:08.920
buttons that are on the devices.

00:37:08.920 --> 00:37:13.180
So let's recall from earlier,
we have the standard game

00:37:13.740 --> 00:37:15.990
pads and extended game pads.

00:37:15.990 --> 00:37:16.540
Okay?

00:37:16.540 --> 00:37:18.840
So now, let me take a closer look.

00:37:18.840 --> 00:37:20.650
Standard game pad first.

00:37:22.210 --> 00:37:25.490
Okay, so a standard gamepad
has these four buttons,

00:37:25.490 --> 00:37:29.980
A, B, X, and Y, and their type,
which I'll go into in a second,

00:37:29.980 --> 00:37:31.540
is GC button input.

00:37:31.660 --> 00:37:34.770
The left and right shoulders
that are on the front of the

00:37:34.770 --> 00:37:38.070
gamepad are also GC button input.

00:37:38.560 --> 00:37:41.590
And then over here on the left,
you have the D pad,

00:37:41.910 --> 00:37:45.850
and that's a different type,
GC direction pad.

00:37:45.950 --> 00:37:47.100
Okay, so hold that thought.

00:37:47.100 --> 00:37:50.130
Here's the other kind of controller.

00:37:50.850 --> 00:37:53.700
Looking at the extended
gamepad profile now.

00:37:53.830 --> 00:37:54.080
Okay.

00:37:54.490 --> 00:37:59.660
So, this has all of the same
controls as the standard gamepad.

00:37:59.660 --> 00:38:01.790
It is a pure superset, always.

00:38:01.790 --> 00:38:05.770
So, it has A, B, X, and Y,
left and right shoulder, and a D-pad,

00:38:05.870 --> 00:38:06.480
always.

00:38:06.480 --> 00:38:10.080
And then it adds the left
and right thumb stick,

00:38:10.080 --> 00:38:15.840
which is of type GC direction pad,
and left and right triggers on the front,

00:38:15.840 --> 00:38:19.870
which are back to buttons,
button inputs again.

00:38:20.910 --> 00:38:21.680
Okay.

00:38:21.730 --> 00:38:24.870
So, just to have run through that now,
we see there's really

00:38:25.030 --> 00:38:26.300
just two types of inputs.

00:38:26.470 --> 00:38:31.780
We have button inputs and
we have direction pads.

00:38:31.780 --> 00:38:31.780
So, looking at button inputs.

00:38:32.600 --> 00:38:34.330
So this is used again
for the face buttons,

00:38:34.440 --> 00:38:36.340
the shoulder buttons, and the triggers.

00:38:36.340 --> 00:38:40.110
And this type is sort of overloaded.

00:38:40.140 --> 00:38:44.630
There's two different ways that you
can get values out of one button,

00:38:44.630 --> 00:38:45.720
for example.

00:38:45.790 --> 00:38:50.500
We can provide a Boolean value
for whether the button is pressed,

00:38:50.600 --> 00:38:55.610
kind of its classic button state,
just coming back as a Boolean.

00:38:55.620 --> 00:39:00.740
But also, all of our controls are analog,
including the buttons,

00:39:01.080 --> 00:39:03.690
including the triggers, and so on.

00:39:03.690 --> 00:39:06.540
They are all pressure sensitive.

00:39:06.540 --> 00:39:11.300
And so we can get a float value
out of any of these buttons

00:39:11.890 --> 00:39:14.310
normalized from zero to one.

00:39:14.320 --> 00:39:14.880
Okay?

00:39:14.880 --> 00:39:18.440
And you choose depending
on the needs of your game.

00:39:18.500 --> 00:39:21.880
Now, again,
they are all pressure sensitive,

00:39:21.880 --> 00:39:25.180
regardless of whether
it's a standard game pad,

00:39:25.650 --> 00:39:27.690
or extended game pad.

00:39:27.840 --> 00:39:30.020
All of the controls
are pressure sensitive.

00:39:34.590 --> 00:39:35.460
So, that was a button.

00:39:35.460 --> 00:39:38.260
Now, that other type was a direction pad.

00:39:38.260 --> 00:39:41.030
Again, this is used for the
D-pad and the thumbsticks.

00:39:41.100 --> 00:39:44.520
And again, this is another type that
is kind of overloaded.

00:39:44.520 --> 00:39:46.340
It can be treated in two different ways.

00:39:46.720 --> 00:39:51.080
The D-pad can either be treated,
and the joysticks,

00:39:51.080 --> 00:39:57.520
as four separate buttons up, down, left,
and right of type button input,

00:39:57.660 --> 00:40:02.630
or they can be treated as two axes
with a new type controller axis input.

00:40:02.660 --> 00:40:07.580
You know,
either the X and the Y axis there.

00:40:08.300 --> 00:41:59.400
[ Transcript missing ]

00:42:00.200 --> 00:46:08.700
[ Transcript missing ]

00:46:08.770 --> 00:46:08.990
Okay.

00:46:08.990 --> 00:46:10.660
So that's the pause button.

00:46:10.820 --> 00:46:12.070
Here's a quick example.

00:46:12.360 --> 00:46:14.960
If you go back and you think of
that setup controllers method

00:46:15.310 --> 00:46:18.410
that I was talking about earlier,
here's where you would

00:46:18.410 --> 00:46:19.560
add the pause handler.

00:46:19.850 --> 00:46:20.700
It's very simple.

00:46:20.700 --> 00:46:24.330
Just on the controller that's connected,
you can set up a

00:46:24.330 --> 00:46:25.740
controller paused handler.

00:46:25.740 --> 00:46:30.340
It takes a block,
and then within that block,

00:46:30.660 --> 00:46:34.230
you just do whatever you're going to do
to handle the pause button being toggled.

00:46:34.920 --> 00:46:35.730
Okay, so that's the first.

00:46:36.050 --> 00:46:39.190
The other one is the player indicators.

00:46:39.190 --> 00:46:44.860
So, on extended controllers,
these are mandatory, and on standard,

00:46:44.860 --> 00:46:46.640
they're optional.

00:46:46.640 --> 00:46:51.290
I'm sure you can all see up here,
there's four little lights up

00:46:51.290 --> 00:46:55.740
on the face of the controller
that show the player index.

00:46:56.740 --> 00:47:02.180
And we provide you with an
API to get and set those lights.

00:47:02.280 --> 00:47:05.780
And they'll be persistent for your game.

00:47:05.830 --> 00:47:09.270
And we actually,
we recommend that you set them.

00:47:09.290 --> 00:47:12.930
So, the reason is, you know,
set the lights, for one thing,

00:47:12.930 --> 00:47:16.600
so that the user immediately
recognizes or knows that your game

00:47:16.610 --> 00:47:19.040
is recognizing the controller and,
like,

00:47:19.180 --> 00:47:25.340
the control input is going to be moved
over onto the physical controller.

00:47:25.340 --> 00:47:30.000
But then, also, if you have a game that
supports multiple controllers,

00:47:30.040 --> 00:47:34.670
you know, like, because they could,
you could have multiple wireless

00:47:34.670 --> 00:47:39.340
controllers connected to your game,
if your game supports that,

00:47:39.660 --> 00:47:43.390
then you can use this and, you know,
you would have something in your game

00:47:43.390 --> 00:47:47.060
that would let the players decide,
I'm player one, I'm player two,

00:47:47.060 --> 00:47:47.780
et cetera.

00:47:48.140 --> 00:47:52.400
And then you would set those indices
accordingly on the controllers

00:47:53.030 --> 00:47:54.920
themselves through this API.

00:47:57.020 --> 00:48:00.570
Okay, so that is the player indicators.

00:48:01.020 --> 00:48:02.290
So, now, where are we?

00:48:02.290 --> 00:48:04.630
I've shown you how to
connect to controllers,

00:48:04.740 --> 00:48:07.850
how to read their inputs,
and a few extra things

00:48:07.910 --> 00:48:09.610
that you need to handle.

00:48:09.810 --> 00:48:12.380
So now I want to wrap up this
session just with some advice

00:48:12.380 --> 00:48:15.890
and some best practices,
essentially, for, you know,

00:48:15.900 --> 00:48:21.100
really ways to think about how you
can use controllers within your game

00:48:21.100 --> 00:48:24.090
and make it work with controllers.

00:48:24.260 --> 00:48:27.660
And the first piece of advice
is really just to really

00:48:27.660 --> 00:48:32.530
think through your controls,
you know, and comparing to the controls

00:48:32.640 --> 00:48:34.280
that you have today already.

00:48:34.280 --> 00:48:39.000
You know, touch and motion are really,
they're ideal for games that

00:48:39.000 --> 00:48:44.160
support direct interaction like
John was talking about this morning.

00:48:44.160 --> 00:48:46.790
You know, taps, gestures, and swipes.

00:48:46.900 --> 00:48:51.160
And think about controllers
as a way to augment that,

00:48:51.160 --> 00:48:56.210
you know, especially in games that
need tactile feedback for an

00:48:56.530 --> 00:48:59.660
indirect interaction model,
right?

00:48:59.660 --> 00:49:02.880
So, you know,
games that need really precise timing

00:49:02.880 --> 00:49:07.240
to do really tight moves or perform,
you know, different actions.

00:49:07.240 --> 00:49:14.540
And, you know, think about the case of a
form-fitting controller.

00:49:14.540 --> 00:49:16.880
You know, having touch along with
the controls is really,

00:49:16.880 --> 00:49:16.880
really important.

00:49:16.880 --> 00:49:19.760
And I think that, you know,
having touch along with form-fitting

00:49:19.830 --> 00:49:22.040
put together can really kind
of provide you with ideal

00:49:22.090 --> 00:49:23.890
circumstances for both situations.

00:49:23.920 --> 00:49:26.760
You know,
really precise physical controls

00:49:26.760 --> 00:49:29.750
for indirect manipulation,
plus, you know,

00:49:29.750 --> 00:49:33.490
being able to still do direct
manipulation just with your,

00:49:33.490 --> 00:49:38.120
you know, with the user's hand or with
device motion right on screen.

00:49:40.130 --> 00:49:44.180
Now, the second piece of advice,
you know, some best practices.

00:49:44.180 --> 00:49:48.960
Something to remember is that your
game cannot require a controller.

00:49:49.320 --> 00:49:51.550
Controllers are always optional.

00:49:51.600 --> 00:49:55.820
Every game on the App Store must
be able to work without a

00:49:55.820 --> 00:49:58.340
controller being attached.

00:49:59.470 --> 00:50:02.580
And your game should
support both profiles,

00:50:02.580 --> 00:50:07.090
both standard gamepad
profile and extended gamepad.

00:50:07.090 --> 00:50:12.180
And you really have to think about how
maybe the game will behave differently,

00:50:12.180 --> 00:50:16.130
you know, with the existence of
thumbsticks versus without,

00:50:16.140 --> 00:50:19.020
when you only have a D-pad
and buttons and the shoulders.

00:50:19.660 --> 00:50:22.780
But be sure that you support
both of those cases so that

00:50:22.900 --> 00:50:26.730
players can go and they can know,
no matter which device they buy,

00:50:26.730 --> 00:50:28.000
it's going to work.

00:50:28.430 --> 00:50:31.360
if you say that you support controllers.

00:50:31.650 --> 00:50:36.470
And, you know, also think you should
support both form factors,

00:50:36.470 --> 00:50:40.360
both the form fitting,
which is both of these up here,

00:50:40.760 --> 00:50:44.330
but also the standalone controller,
which I haven't shown you one of,

00:50:44.330 --> 00:50:46.530
but we have one over
in the lab to look at.

00:50:46.600 --> 00:50:50.410
You know,
think about how your game should behave

00:50:50.450 --> 00:50:56.110
differently depending on whether the
user can touch the screen or not.

00:50:56.490 --> 00:51:01.800
And then last is don't forget to
include support for the pause button.

00:51:01.930 --> 00:51:05.400
In most cases,
you should just treat it as a toggle.

00:51:05.450 --> 00:51:10.470
Pause if you're active,
and go active if you're paused.

00:51:11.080 --> 00:51:11.970
Two more things.

00:51:12.100 --> 00:51:15.270
So, you know,
another thing to think about is just how

00:51:15.290 --> 00:51:19.850
your game should react to controllers
being connected and disconnected.

00:51:19.940 --> 00:51:20.840
Right?

00:51:20.840 --> 00:51:24.710
So, if you detect that a
controller has been connected,

00:51:24.710 --> 00:51:27.780
meaning you set up a
notification and there,

00:51:27.780 --> 00:51:32.120
boom, there's a controller, well,
you should treat that as an

00:51:32.120 --> 00:51:34.760
expression of the user's intent.

00:51:34.760 --> 00:51:36.780
So, enable the controller.

00:51:36.780 --> 00:51:41.100
Move your input, you know,
move to controller-based input.

00:51:41.100 --> 00:51:44.470
And perhaps think about changes
that happen in the game.

00:51:44.480 --> 00:51:47.760
You may have a control
overlay that you put on,

00:51:47.760 --> 00:51:50.380
you know, that you put on screen.

00:51:50.380 --> 00:51:55.210
Maybe that should be moved aside or
maybe off screen entirely when the

00:51:55.210 --> 00:51:58.220
player is connected with a controller.

00:51:58.220 --> 00:52:03.760
And also, light up that player indicator
LED so the player knows that,

00:52:03.760 --> 00:52:04.740
ah, I'm using the controller.

00:52:04.740 --> 00:52:06.960
And you can see that the player is
using the controller buttons now.

00:52:07.190 --> 00:52:12.330
Now, when a player disconnects, also,
that may be an expression of intent

00:52:12.330 --> 00:52:14.700
or it could be unintentional.

00:52:14.700 --> 00:52:19.220
So, in case it was unintentional,
an unintentional disconnection,

00:52:19.390 --> 00:52:24.420
that's someplace where you should
always pause the gameplay on disconnect.

00:52:24.500 --> 00:52:29.210
And then, of course, you know,
move the controls back to your regular

00:52:29.220 --> 00:52:31.950
on-screen or device motion controls.

00:52:32.400 --> 00:52:34.300
Okay, so that's those.

00:52:34.300 --> 00:52:36.510
And now just a couple
of closing thoughts.

00:52:36.540 --> 00:52:38.020
You know, one more time.

00:52:38.020 --> 00:52:43.340
Again, really think it through how you
would support these different

00:52:43.340 --> 00:52:46.340
profiles and different form factors.

00:52:46.340 --> 00:52:52.890
You know, the standard gamepad adds
10 new buttons to your game.

00:52:53.020 --> 00:52:57.020
And the extended gamepad adds 14.

00:52:57.220 --> 00:53:03.650
So, you need to be really clear about how
you will design your game to those

00:53:03.740 --> 00:53:06.980
inputs or whether you will even.

00:53:07.290 --> 00:53:11.450
But, you know,
make sure that you have a really solid,

00:53:11.450 --> 00:53:14.690
you know,
gameplay experience worked out if

00:53:14.690 --> 00:53:16.920
you're planning to support controllers.

00:53:16.940 --> 00:53:19.320
You know,
and because I would say it this way,

00:53:19.320 --> 00:53:20.900
you know, this is your UI.

00:53:20.900 --> 00:53:24.020
It is the most,
it is the thing that matters

00:53:24.020 --> 00:53:26.580
most in terms of your gameplay.

00:53:26.580 --> 00:53:29.480
So it's got to be fantastic.

00:53:30.470 --> 00:53:33.580
You know,
really go and test with the controllers.

00:53:33.580 --> 00:53:36.640
Get them from the retail stores and keep,
you know,

00:53:36.860 --> 00:53:41.190
keep working on with it until you are
so happy with the way the controls work

00:53:41.300 --> 00:53:43.980
that you know that you are ready to ship.

00:53:43.980 --> 00:53:46.720
But so I think, you know,
the opportunity is there.

00:53:46.810 --> 00:53:50.430
I think that players are going to have
a great time with controllers and,

00:53:50.430 --> 00:53:52.780
you know,
hopefully they'll pick them up from

00:53:52.780 --> 00:53:56.550
the retail stores and we'll see a
lot of your games supporting them.

00:53:56.550 --> 00:53:58.170
I'm really excited about it.

00:53:58.240 --> 00:54:00.720
But so that takes me to
the end of the session.

00:54:00.720 --> 00:54:03.510
For more information,
you're welcome to contact me.

00:54:03.570 --> 00:54:06.830
Here's my email address or come
find us in the developer forums.

00:54:06.830 --> 00:54:08.140
So thank you very much.