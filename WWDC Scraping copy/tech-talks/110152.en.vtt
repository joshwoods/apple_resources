WEBVTT

00:00:00.400 --> 00:00:01.969
Hello, App Store developers.

00:00:01.969 --> 00:00:04.471
I'm Greg from
the App Store Review team.

00:00:04.471 --> 00:00:06.340
Today I'm going to share tips
from our team

00:00:06.340 --> 00:00:09.743
to help you write clear,
succinct purpose strings.

00:00:11.144 --> 00:00:12.746
At Apple,
we believe that privacy

00:00:12.746 --> 00:00:14.982
is a fundamental human right,

00:00:14.982 --> 00:00:17.351
and so Apple products are
designed to protect privacy

00:00:17.351 --> 00:00:21.255
and give users control
over their information.

00:00:21.255 --> 00:00:22.723
In addition to designing
our products

00:00:22.723 --> 00:00:25.492
with privacy protections,
privacy is central

00:00:25.492 --> 00:00:27.895
in the App Store Review
guidelines.

00:00:27.895 --> 00:00:31.164
Guideline 5.1.1, in particular,
details some requirements

00:00:31.164 --> 00:00:33.567
that are essential
for protecting user privacy

00:00:33.567 --> 00:00:36.637
in the Apple ecosystem,
like minimizing the data

00:00:36.637 --> 00:00:40.040
you collect to just
what you need.

00:00:40.040 --> 00:00:42.042
Today we're going to focus
on one requirement

00:00:42.042 --> 00:00:46.546
we see both new and experienced
developers struggle with:

00:00:46.546 --> 00:00:49.783
being clear and transparent
when requesting permission

00:00:49.783 --> 00:00:52.786
to access protected resources.

00:00:52.786 --> 00:00:54.955
We'll share tips and examples
to help you prevent

00:00:54.955 --> 00:01:00.560
a common 5.1.1 rejection:
insufficient purpose strings.

00:01:00.560 --> 00:01:02.229
We'll start by giving
some background

00:01:02.229 --> 00:01:04.398
on permission requests
and the role they play

00:01:04.398 --> 00:01:07.534
in protecting user privacy.

00:01:07.534 --> 00:01:09.903
We'll then focus in
on purpose strings,

00:01:09.903 --> 00:01:12.839
short descriptions provided
by you to describe why

00:01:12.839 --> 00:01:15.442
your app needs access,
and talk about some things

00:01:15.442 --> 00:01:18.712
App Store Review
looks for in review.

00:01:18.712 --> 00:01:21.048
We'll then finish with examples
of purpose strings

00:01:21.048 --> 00:01:22.983
that wouldn't pass review
and discuss

00:01:22.983 --> 00:01:27.621
how they can be rewritten
to be clear and specific.

00:01:27.621 --> 00:01:31.992
But first, let's talk
about permission requests.

00:01:31.992 --> 00:01:34.828
Our devices are
an important part of our lives.

00:01:34.828 --> 00:01:37.331
What people share from their
devices should be up to them,

00:01:37.331 --> 00:01:39.333
which is why all
Apple operating systems

00:01:39.333 --> 00:01:43.804
restrict access to protected
data and resources by default.

00:01:45.472 --> 00:01:48.475
To access this information,
apps must first request

00:01:48.475 --> 00:01:50.310
the user's permission.

00:01:50.310 --> 00:01:52.346
This puts users in control --

00:01:52.346 --> 00:01:55.582
they can decide which apps
have access to what.

00:01:55.582 --> 00:01:56.950
But to make
an informed decision,

00:01:56.950 --> 00:02:00.187
people need to know more
about why your app needs access

00:02:00.187 --> 00:02:03.156
and what it will do
once it has it.

00:02:03.156 --> 00:02:04.992
This is where purpose strings --
also called

00:02:04.992 --> 00:02:08.195
"usage descriptions," --
come in.

00:02:08.195 --> 00:02:10.731
A purpose string is
a short message you provide

00:02:10.731 --> 00:02:13.934
that appears on every
permission request.

00:02:13.934 --> 00:02:16.003
It describes why your app
needs access

00:02:16.003 --> 00:02:19.239
and what you will do
with the user's data.

00:02:19.239 --> 00:02:21.074
You'll define these messages
on an app's

00:02:21.074 --> 00:02:24.044
information property list --
or info p-list --

00:02:24.044 --> 00:02:28.648
by setting a string value
to a resource-specific key.

00:02:28.648 --> 00:02:32.085
This is an important interaction
between you and your app's users

00:02:32.085 --> 00:02:34.187
on Apple operating systems.

00:02:34.187 --> 00:02:37.024
It's a chance to build trust
by being clear and specific

00:02:37.024 --> 00:02:39.760
about what your app
is trying to do.

00:02:39.760 --> 00:02:41.895
Why is this so important?

00:02:41.895 --> 00:02:44.264
Let's compare these
permission requests from apps

00:02:44.264 --> 00:02:46.466
with a situation
from the real world;

00:02:46.466 --> 00:02:49.069
one that you've probably
experienced before.

00:02:49.069 --> 00:02:53.040
Imagine you go to buy a cup of
coffee from a local coffee shop.

00:02:53.040 --> 00:02:55.142
Coffee in hand,
you're ready to pay

00:02:55.142 --> 00:02:58.078
when the cashier asks
for your phone number.

00:02:58.078 --> 00:02:59.913
Huh. They haven't asked
for that before,

00:02:59.913 --> 00:03:01.782
so why would they need it?

00:03:01.782 --> 00:03:03.817
This can go one of two ways.

00:03:03.817 --> 00:03:06.386
The cashier could say,
"We use your number

00:03:06.386 --> 00:03:09.289
to provide a better
coffee-drinking experience."

00:03:09.289 --> 00:03:11.291
So that sounds great,
but it's not very specific

00:03:11.291 --> 00:03:13.527
and it's not clear
what that means.

00:03:13.527 --> 00:03:15.062
On the other hand,
they could tell you

00:03:15.062 --> 00:03:17.164
how they use your number
to track your purchases,

00:03:17.164 --> 00:03:19.066
rewarding you
with a free cup of coffee

00:03:19.066 --> 00:03:21.635
for every fifth cup
you buy.

00:03:21.635 --> 00:03:24.938
In both cases, it's up to you
what happens next,

00:03:24.938 --> 00:03:27.374
only in the second example
do you have the information

00:03:27.374 --> 00:03:31.111
you need to make
an informed decision.

00:03:31.111 --> 00:03:32.913
This kind of positive
user experience

00:03:32.913 --> 00:03:34.815
is what App Store Review
looks for

00:03:34.815 --> 00:03:37.884
when reviewing
purpose strings.

00:03:37.884 --> 00:03:40.520
We make sure the purpose string
gives users the information

00:03:40.520 --> 00:03:43.457
they need to make
an informed decision.

00:03:43.457 --> 00:03:46.693
What does this look like
when we review your app?

00:03:46.693 --> 00:03:49.963
Well, we approach apps
like a new user would.

00:03:49.963 --> 00:03:52.466
This means we see
permission request alerts

00:03:52.466 --> 00:03:55.569
just as your users will
when we try to use features

00:03:55.569 --> 00:03:58.738
that access protected resources.

00:03:58.738 --> 00:04:01.141
This way we understand
the full experience

00:04:01.141 --> 00:04:03.443
and can anticipate
what people need to know

00:04:03.443 --> 00:04:06.880
to make informed decisions.

00:04:06.880 --> 00:04:09.749
So in review,
we look for two key qualities

00:04:09.749 --> 00:04:11.551
in purpose strings.

00:04:11.551 --> 00:04:16.756
They should explain specifically
how the app will use the data

00:04:16.756 --> 00:04:20.360
and provide an example
of how the data will be used.

00:04:22.362 --> 00:04:23.763
Let's take a look
at some examples

00:04:23.763 --> 00:04:25.432
to see what purpose strings
look like

00:04:25.432 --> 00:04:27.234
when they have
these two qualities

00:04:27.234 --> 00:04:31.171
and what it's like for users
when they don't.

00:04:31.171 --> 00:04:33.273
First, we have a navigation app

00:04:33.273 --> 00:04:36.243
that specializes in recommending
scenic routes.

00:04:36.243 --> 00:04:38.778
When users try to access
the navigation feature,

00:04:38.778 --> 00:04:41.381
this is what they see:

00:04:41.381 --> 00:04:45.118
"To use location."

00:04:45.118 --> 00:04:46.753
Not much to go on, right?

00:04:46.753 --> 00:04:47.787
When you're developing an app,

00:04:47.787 --> 00:04:50.991
you know exactly what
you will use a resource for.

00:04:50.991 --> 00:04:53.393
But users don't have
the same understanding about

00:04:53.393 --> 00:04:55.061
how your app works.

00:04:55.061 --> 00:04:58.064
They rely on the information you
provide in the purpose string

00:04:58.064 --> 00:05:00.167
to make their decision,
and in this case,

00:05:00.167 --> 00:05:03.303
the user doesn't have
the information they need.

00:05:03.303 --> 00:05:06.072
To build trust, this developer
needs to say specifically

00:05:06.072 --> 00:05:11.111
how they plan to use the data
and provide an example.

00:05:11.111 --> 00:05:12.712
This would be better.

00:05:12.712 --> 00:05:14.981
"Your location is used to
determine the recommended route

00:05:14.981 --> 00:05:19.219
to your destination and provide
turn-by-turn directions."

00:05:19.219 --> 00:05:20.854
Now the purpose string
is specific

00:05:20.854 --> 00:05:23.456
and provides concrete examples
of what the app will be

00:05:23.456 --> 00:05:27.627
able to do with the user's
location data.

00:05:27.627 --> 00:05:29.796
Keep in mind, if your app
supports localizations

00:05:29.796 --> 00:05:31.164
for a global audience,

00:05:31.164 --> 00:05:34.868
be sure to provide localized
purpose strings as well.

00:05:34.868 --> 00:05:37.671
We recommend testing your app
set to different localizations

00:05:37.671 --> 00:05:43.243
to confirm the user sees the
correct localized app content.

00:05:43.243 --> 00:05:45.212
Well, let's take a look at
another example.

00:05:45.212 --> 00:05:47.814
Here we have
a social network app.

00:05:47.814 --> 00:05:50.217
The developer shares data
collected in the app

00:05:50.217 --> 00:05:54.387
with third parties to deliver
targeted advertisements.

00:05:54.387 --> 00:05:57.057
Before collecting any data
used to track though,

00:05:57.057 --> 00:06:01.995
they need to request permission
using App Tracking Transparency.

00:06:01.995 --> 00:06:03.296
When you first open the app,

00:06:03.296 --> 00:06:07.334
the App Tracking Transparency
permission request appears.

00:06:07.334 --> 00:06:09.970
Here's what it currently says:

00:06:09.970 --> 00:06:14.374
"Your data will be used
to provide a better experience."

00:06:14.374 --> 00:06:16.910
So this may be true,
but it doesn't tell the user

00:06:16.910 --> 00:06:18.378
what they need to know.

00:06:18.378 --> 00:06:21.381
How, specifically,
will their data be used?

00:06:21.381 --> 00:06:23.683
What's an example
of the better experience

00:06:23.683 --> 00:06:26.853
they should expect
if they grant permission?

00:06:26.853 --> 00:06:29.489
A better approach would be:

00:06:29.489 --> 00:06:32.492
"Your data will be used to
deliver personalized advertising

00:06:32.492 --> 00:06:36.096
for products that are
most relevant to you."

00:06:36.096 --> 00:06:37.897
Now it's clear what
the developer will do

00:06:37.897 --> 00:06:39.999
with this information
and what the user would gain

00:06:39.999 --> 00:06:42.369
from granting access.

00:06:42.369 --> 00:06:44.504
This developer could even
provide more context

00:06:44.504 --> 00:06:48.041
about what would happen
if the user says no to tracking.

00:06:48.041 --> 00:06:49.242
"Your data will be used

00:06:49.242 --> 00:06:51.544
to deliver
personalized advertising.

00:06:51.544 --> 00:06:53.046
You will still see
advertisements

00:06:53.046 --> 00:06:54.614
if you decline tracking,

00:06:54.614 --> 00:06:58.318
but they may be
less relevant to you."

00:06:58.318 --> 00:07:01.121
Either of these examples
would be fitting for this app.

00:07:01.121 --> 00:07:03.323
The goal is to be
transparent and clear

00:07:03.323 --> 00:07:06.559
at the moment
you request permission.

00:07:06.559 --> 00:07:09.796
Another thing to keep in mind;
many apps on the App Store

00:07:09.796 --> 00:07:13.333
integrate third-party
SDKs and libraries.

00:07:13.333 --> 00:07:16.469
These SDKs and libraries
can provide a wide variety

00:07:16.469 --> 00:07:20.073
of features and services,
such as account authentication.

00:07:20.073 --> 00:07:22.776
What you may not realize
is they can also reference

00:07:22.776 --> 00:07:26.012
APIs that will try to access
protected resources,

00:07:26.012 --> 00:07:27.847
like location data.

00:07:27.847 --> 00:07:30.417
If your app has a reason
to access these resources,

00:07:30.417 --> 00:07:32.952
define a purpose string
on the info p-list

00:07:32.952 --> 00:07:36.089
that applies to your app's
specific use case.

00:07:36.089 --> 00:07:38.625
If not, you should remove
references to these APIs

00:07:38.625 --> 00:07:41.328
from your app's binary.

00:07:41.328 --> 00:07:44.230
Remember, you are responsible
for everything in your app,

00:07:44.230 --> 00:07:49.302
including SDKs, libraries, or
other code from third parties.

00:07:49.302 --> 00:07:51.705
When developing your app,
be sure to familiarize yourself

00:07:51.705 --> 00:07:54.341
with any protected resources
they may try to access

00:07:54.341 --> 00:07:56.943
and ensure that these requests
are intentional

00:07:56.943 --> 00:07:59.446
before submitting
your app for review.

00:08:01.281 --> 00:08:03.049
So you might have noticed
the examples so far

00:08:03.049 --> 00:08:06.653
have focused on purpose strings
with too little information.

00:08:06.653 --> 00:08:08.888
But what about the opposite?

00:08:08.888 --> 00:08:12.759
Is there such a thing
as too much information?

00:08:12.759 --> 00:08:14.661
Let's see what
this could look like.

00:08:14.661 --> 00:08:16.329
Here we have an app
for local gardeners

00:08:16.329 --> 00:08:19.366
where you can look at pictures
of your friends' gardens.

00:08:19.366 --> 00:08:21.234
When we go to take
our first picture, however,

00:08:21.234 --> 00:08:23.870
we see the developer chose
to include a long description

00:08:23.870 --> 00:08:25.305
on the request.

00:08:25.305 --> 00:08:27.207
Let me see if I can
do this in one breath.

00:08:27.207 --> 00:08:28.041
[BREATHES IN]

00:08:28.041 --> 00:08:29.376
"Whether you're just discovering
your green thumb

00:08:29.376 --> 00:08:30.610
or a veteran plant expert,

00:08:30.610 --> 00:08:32.178
use our app to share
your love of gardening!

00:08:32.178 --> 00:08:33.747
With access to your camera,
you'll be able to take

00:08:33.747 --> 00:08:35.715
profile pictures posing
with your favorite succulent,

00:08:35.715 --> 00:08:37.617
capture your raised beds
in their best afternoon light,

00:08:37.617 --> 00:08:40.186
and much, much more!"

00:08:40.186 --> 00:08:41.888
A bit much, isn't it?

00:08:41.888 --> 00:08:43.390
Usually just a sentence
or two is enough

00:08:43.390 --> 00:08:45.725
to tell people
what they need to know.

00:08:45.725 --> 00:08:49.028
For our garden app,
this would be better:

00:08:49.028 --> 00:08:51.631
"Our app uses the camera
to capture photos

00:08:51.631 --> 00:08:55.168
for updating and sharing
on your gardener profile."

00:08:55.168 --> 00:08:57.737
Now the purpose string is
specific and includes examples

00:08:57.737 --> 00:09:02.609
that cover the various uses
of the camera in the app.

00:09:02.609 --> 00:09:04.411
Not too long, not too short,

00:09:04.411 --> 00:09:06.780
purpose strings
should be just right.

00:09:06.780 --> 00:09:08.782
Longer, wordier purpose strings

00:09:08.782 --> 00:09:11.084
can be accurate
and may pass review,

00:09:11.084 --> 00:09:14.120
but they're not the ideal
experience for the user.

00:09:14.120 --> 00:09:16.189
Keep the description
straightforward and to the point

00:09:16.189 --> 00:09:18.091
so it's easy to read
and understand

00:09:18.091 --> 00:09:21.561
when viewed in the app.

00:09:21.561 --> 00:09:22.829
Let's put all of that together

00:09:22.829 --> 00:09:25.131
and go on a quick
permission request journey

00:09:25.131 --> 00:09:28.535
with one of our
hypothetical apps.

00:09:28.535 --> 00:09:31.204
Accurately and concisely
explaining to the user

00:09:31.204 --> 00:09:34.374
why your app needs access
to sensitive data lets the user

00:09:34.374 --> 00:09:37.510
make an informed decision
and improves the chances

00:09:37.510 --> 00:09:39.612
that they'll grant access,
so that your app

00:09:39.612 --> 00:09:44.451
will function for them
exactly as you've intended.

00:09:44.451 --> 00:09:47.187
It allows you to describe
your app's unique experience

00:09:47.187 --> 00:09:49.122
while keeping
the user in control

00:09:49.122 --> 00:09:52.158
of their personal information.

00:09:52.158 --> 00:09:54.627
And understanding that users
will make their decision

00:09:54.627 --> 00:09:57.464
to grant access based
on what you write will help you

00:09:57.464 --> 00:09:59.833
add the appropriate context
to your purpose strings

00:09:59.833 --> 00:10:03.937
to keep them relevant,
transparent, and informative.

00:10:07.273 --> 00:10:09.642
Keep these examples in mind
for your future submissions

00:10:09.642 --> 00:10:11.044
to the App Store.

00:10:11.044 --> 00:10:13.112
We hope they help you keep
users informed and allow them

00:10:13.112 --> 00:10:18.485
to enjoy everything
your app has to offer.

00:10:18.485 --> 00:10:20.153
Thanks for watching our video.

00:10:20.153 --> 00:10:21.688
To learn more about
permission requests

00:10:21.688 --> 00:10:23.423
and developing
with privacy in mind,

00:10:23.423 --> 00:10:25.124
there's helpful guides
and documentation

00:10:25.124 --> 00:10:26.759
on the Apple Developer website

00:10:26.759 --> 00:10:29.596
and in the Human Interface
Guidelines.

00:10:29.596 --> 00:10:31.297
We look forward to reviewing
your future submissions

00:10:31.297 --> 00:10:33.600
to the App Store.