---
Title:  Game Developer Day Kickoff
Year:   2013
Web:    https://nonstrict.eu/wwdcindex/tech-talks/2013-21/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

All right, good morning. My name is John Geleynse. I'm the Senior Director of Technology Evangelism from Apple in Cupertino, and it is awesome to see you here this morning. We had a fabulous day yesterday. We packed this room, and you've done it again, and it's really great. We saw some awesome apps from your colleagues on the app side of the house. You're doing apps, too, but we're calling you games. But it was a fun day yesterday, and we hope that today is going to be a fun day, too. So it's great to be in Berlin.

We've been here before, and it's always a great experience. I want to thank you for taking time out of your busy schedule, first of all, to come and join us here. I know many of you probably didn't get to WWDC, so this is a great opportunity for you to be here. But nonetheless, it's time out of your day. It's time out of your work schedule. And we hope... We hope to pay you back in spades with information and tips and tricks and answers to your questions throughout the day. So we're excited that you're here.

So we've got a great day planned for you today. We are going to be going into a lot of detail about iOS 7 technologies, game technology specifically, things that apply to game developers. We're going to be talking about the new hardware that Apple has come out with over the last few months. And we'll be running a lab. In addition to the sessions in this room, we'll be running a lab next door throughout the day. But I'll talk more about that towards the end of this presentation.

But for starters, I wanted to give a review of a few important milestones that we've had over the last few months. And because these milestones are really important for you to see and think about as a game developer. First of all, we recently announced that Apple shipped its 700 millionth iOS device. And this is an unbelievable number.

I mean, I've been personally with Apple for 14 years and been through the whole OSÂ X release cycle, all of iTunes and the music store and iPods and everything. And then the iPhone came. And who would have thought at that time that we would hit this number? So this is an extremely amazing milestone. And it bodes well for you as a game developer because it's an enormous audience for you for your games.

And it means there are a lot of devices that can run your games. And there's a lot of opportunity for you to grow your market and to develop titles for this huge audience. And as you know, the growth of games on the App Store has been phenomenal. And so thanks for your work.

You know, your work. And I think that's the bigger part in the part you played in creating games for the App Store because it's probably half of the inventory of apps on the App Store. And they're selling like crazy. So now, since it's so easy for people to update iOS 7 and iOS on their devices, we also announced that, you know, more than 200 million of those 700 million devices were upgraded to iOS 7 in the first three days, the first weekend that iOS 7 was released. And that's an incredible amount of money.

And so I think that's the biggest thing that we've done. And I think that's the biggest thing that we've done. And in fact, that three days was the fastest update, you know, iOS update sequence that we've ever seen in the history of iOS since 2007. And it shows that, you know, iOS 7 is really popular. In fact, it's so popular that as of a few days ago, we announced that we're seeing nearly two-thirds of all iOS devices running iOS 7. So this is a huge, huge move forward.

And, you know, clearly, this means that your efforts in the coming months should be focused on supporting iOS 7 and the latest iOS devices. We're selling a lot of iPhones and iPads and iPad minis, and they are all running iOS 7, and almost three-quarters of our community has already transitioned to iOS 7.

And then after you've supported iOS 7 in the new devices, if that's the case, you're going to be able to get a lot of new devices. So if time allows and you still have customers that are running games on older OS releases and older systems, then consider adding legacy support for them. But all of your energy now should be on iOS 7.

Now, we've listened to your feedback over the last year, and we've done a bunch of things that we think many of you appreciated. We've heard back from developers who've given us this feedback and said, hey, you finally did that, and I wanted to go over a couple of these areas and things that apply to game developers and developers in general. Some of the highlights of these efforts. So the first was app transfer, letting you move your app from one team to another.

And so, for example, if you sell your game or your studio gets acquired, this is a really great capability inside of iTunes Connect. And we'll show you how this works today in the noon App Store marketing session. Another thing that we heard from developers and that we were able to implement is over-the-air download limit changes. So the limit was raised from 50 megabytes to 100 megabytes, and this makes it easier for people to get your games when they're on the go. Even if they're not on Wi-Fi. And this is huge for you as game developers, right?

Because many of you were doing a lot of work to keep your binary sizes down to about 50 megabytes. And you were trying to keep under that ceiling. And so this change means that it's a lot easier for you to build a universal app, to include your retina assets, to include a 64-bit slice, and all the other things that you need to put into your binary.

Now, the other thing we did was we heard a lot of feedback from developers who couldn't get to the developer conference, of course. We always hear feedback about ticket sales. And so we worked really hard this year to give you same-day videos. And because the demand for tickets was unprecedented, there were a lot of developers who really wanted to know what was going on and wanted to be there, so to speak, and learn what everybody else was learning that was at the conference.

So we did same-day videos, and this meant that people, developers around the world, many of you, could actually experience the developer conference from afar and learn what everybody else was learning in San Francisco. And one of the things that we saw as a result of this, which was pretty cool, was that there were many people who had one person who got into the show from their company, and what would happen is the videos would become available, and many of you would watch them back at home. Okay.

And then people were sending questions to their colleagues at the show, asking them to go to the labs and gather information, gather answers, and then send it back. So there was this real-time feedback loop that we were getting, and it was tremendous. So we got a lot of positive feedback on that, and we're going to try to continue this trend for future WWCs.

Another request was hosted in-app purchases. And in-app purchase, obviously, is something that you can use to monetize your games. Many of you know this. If you've got freemium, you're using the freemium model. And if you have something that you sell in your game that involves downloading additional content, Apple can provide for the hosting of that content, up to 2 gigabytes of content. We announced this at WDC this past year. There's no additional cost involved, and we simply provide this hosting service to you.

And so it's super easy to use. This was a big request, and it's now here for you to take advantage of. And for those of you who have paid apps, we expanded the volume purchase program. And what this really means for you is this is a way for you to sell your apps in large numbers at a discount to businesses or schools. And if you've got an entertainment-type game, this could be really interesting for getting it to schools in high volume. And it gives you, really, another way of expanding. your market.

So, and then finally we added enhanced sales and trends. So there's some great new ways to view your sales and trends data in iTunes Connect. And this makes it easier for you to know what's going on with your sales overall and to see how your app is selling. And we'll go into more detail about these reports and how you can extract even more information from them in the noontime session as well today.

And then finally, another big highlight of stuff that we've done based on your feedback is we added a kids category. And if you make games for children, this category makes it easy for parents to find age-appropriate games for their children. And this really increases the chances of people finding your game because you're not in such a big pond of the entire app store.

You're now just in this category. So kids category is a big deal. So we're listening, and those are a few of the things that we've done in the past year based on your feedback. But we are always interested in hearing from the developer community. We see your blogs. We get your email. But we want to encourage you to continue to file bugs, enhancement requests.

To send us email. You're going to see email addresses at the end of many of the presentations here today from the evangelism team. And we're also interested in your feedback throughout the day in the labs, in the reception afterwards, or in any time that you've got a moment to catch an Apple employee. There are a pile of us here.

There's a lot of us here. You'll see them at the end of this presentation. And we really do want your feedback. We want to make it great, even better, to be an iOS developer. So okay, that's the stuff that we've done. In the past, let's shift our focus to the present.

2013 was a really busy year for us at Apple. I mean, every year seems to be really busy. But it was also a really important one for us. We saw a fundamental evolution in the iOS operating system on the platform with the release of iOS 7. And we introduced a whole bunch of new devices.

And the thing to realize is that these changes provide... a completely new basis for...or a new foundation for a next generation of games and apps. And that's really what we want to talk about today. So at WWDC, as you know, we introduced iOS 7. And it's the next generation of iOS, obviously.

There have been six previous...six major releases of iOS previously since 2008 when the SDK first came out with iOS 2. And every time there's a new release, we're... you know, there's always a new SDK with tons of new technology for you to take advantage of in your games.

And iOS 7 is the most significant update to iOS since 2007. Even though there have been these six previous releases, we made a ton of changes with iOS 7. And now, obviously, with the numbers I shared earlier, you've got hundreds of millions of customers... that are running iOS 7 on their devices now.

And iOS 7 has so many new technologies and features for you to take advantage of as a game developer. I mean, there's SpriteKit for 2D games. Developers have been asking for something like SpriteKit for years, and now it's here. There's a new framework for supporting game controllers. We announced that at WWDC and actually had game controllers for people to play around with in the labs at the conference. There are major enhancements to existing frameworks, so OpenGL ES3 and Game Center have dramatically enhanced capabilities, and we'll cover these in sessions later on today. And then there's 64-bit, which lets you tap into the performance of the A7 processor. So iOS 7 is a huge change.

Huge step forward as an OS release. It introduces a brand new user experience, which you've all experienced, but it also introduces a ton of technologies for you to take advantage of as a game developer. And so, really, no matter what kind of game you develop, whether it's an arcade game, a puzzle game, a racing game, or an RPG, there is a lot of capabilities in iOS 7 for you to take advantage of.

And on the hardware side, we introduced a new generation of iOS devices. You know, this is the iPad Mini with Retina display. The iPad Air came out, and they were the most recent introductions to the hardware line. And these are incredibly powerful new devices that are built on the A7 chip with its 64-bit architecture. And alongside of that, they've got the M7 motion coprocessor. So these are very significant devices.

And with that, prior to that, we announced the iPhone 5c and the 5s. And the 5s is incredibly powerful. I mean, undoubtedly, you've been playing with it for a long time. And running your games, you know, builds of your games on it. And the GPU on that device is awesome for games. And the speed is amazing. And we think that, really, the iPhone 5s is going to be the new baseline for a lot of games. This is an incredible device.

And it's the combination of these new devices with the A7 processor and the retina displays and all of their hardware capabilities combined with iOS 7 that form a foundation for the next generation of iOS games. And helping you get the most out of all of these technologies and out of these devices is really what the focus is today. So I'd like to spend some time talking about the characteristics that I think people will come to expect in next-generation iOS games. I mean, there are great games on the platform today, but what we want to talk about this morning is next-generation iOS games.

So first and foremost, a next-generation game needs to be a great game. And I mean by great that, you know, people aren't going to do it for free. You can judge your game based on the technologies that you adopt. It's not about the technologies. People don't buy games because they use Game Center specifically. They don't buy games because they're built on OpenGL ES 3 or 2. and they also, you know, great games. It's not about what API you integrate specifically. It's not about the technology.

Instead, what people want is they want to have fun. They want to be entertained. They want to learn while they're doing a logic puzzle or they want to, you know, a casual game or so, or they want to be entertained in a group setting by doing group gameplay over AirPlay. It's about being entertained. And so what's important to people who are buying games is that the games are inviting and that they're engaging, that they're intuitive, and that they're polished. And so let's talk about a few of these for a minute.

So the best games on iOS are inviting, and this means that they leave a great first impression. Now, we saw some fabulous software yesterday, and I'll tell you, of all of the cities we've been to on the Tech Talks -- and I'm not just saying this because I'm on stage here in Berlin -- and frankly, the apps, the quality of the apps we saw yesterday was profound.

It was very, very, very high. And I'm assuming that today we're going to meet a bunch of you who have some experience with iOS. Yeah. And I'm assuming that today we're going to meet a bunch of you who have some experience with iOS. And I'm assuming that today we're going to meet a bunch of you who have some experience with iOS. Yeah. And I'm assuming that today we're going to meet a bunch of you who have some incredible games.

But frankly, not every game on the App Store is incredible. There are a lot of games that are okay, and they could be a lot better. And one of the things that a lot of developers struggle with is creating something that is inviting that leaves a great first impression.

And the first impression for a game, for an app, for anything really begins on the App Store. It's your icon. That's your calling. It's your calling card. It's the way you describe your game, the App Store description. It's the screenshots that you select for your game that people are going to view.

Now, why is this important? Well, it's because people are perusing the App Store. They're browsing the App Store all the time, looking for the next cool game to play. Right? And they're going to pick your game out based on what they see on the App Store. And so you need to have a great icon. You need to have appealing screenshots. And then your first impression, once they see it, they're going to be like, "Oh, that's cool. That's cool.

I'm going to play this game." And then once the game is downloaded, the first impression is reinforced again and again as players relaunch the game over and over, and your game starts up. And the question you really see, the question to ask yourself and the thing to evaluate of your own game is, every time it launches, does it launch quickly? Does it get people back to where they were before? Are you saving the state? Are you building excitement when the app is launched? Or do people constantly have to wait for stuff to happen before they can get into the gameplay? No one wants to wait.

Perhaps there's something that's interfering with launch. So a great first impression is really driven by being inviting, by launching quickly, and constantly reinforcing that impression over and over as people play your game. Now, great games are also intuitive. And this means that they should show the player how to get started. This means that they should provide feedback within the game that reinforces the gameplay.

And games, just like apps, should be intuitive and easy to use for the people that they were created for. I mean, there are so many different kinds of games, RPG, casual, first person shooters, all these different kinds of games. And different players are drawn to different kinds of games.

What one person understands and likes with a logic, a casual logic puzzle solving game is completely different from somebody who's playing a first person shooter like Call of Duty or something like that. And so what is obvious in one case might not be so obvious to a player in the other case. And so you really have to define your market, understand who you're going for, and then create a game that's intuitive and easy to use for them.

And another attribute of great games is that they're engaging. This means that they're addictive, that they're sticky. Engaging games bring people back again and again. You want people to download your game and leave it on their device. In fact, what you're doing, your number one competition is not so much other games in your category or in your genre, but it's more for the attention of customers, right?

Just because someone has downloaded your game doesn't mean they're going to play it again and again. And so your number one competition is for their attention. And engaging games that leave a great first impression, reinforce that over and over and over, and that are intuitive, are games that don't get deleted. Your competition is really whether or not customers are going to delete you off their device or not.

And then your competition after that is whether or not you can compete with other game developers. So engaging games are games that players just can't put down. And they, you know, they have to play just one more time, right? And I'm not a huge gamer myself, but there are about 10 games that I love to play again and again that I continue to keep on my phone, and they're the kinds of games that I can't put down when I'm on a transcontinental flight or whatever. And I just, I can't.

I keep wanting to play. I got to beat my high score. I got to beat my high score. And that's the kind of addictive, kind of engaging, bring people back replayability that's accomplished actually by having great gameplay, frequent updates, fresh new content, and new game levels, for example. All of those things, giving customers those things again and again, over and over, bringing them back in with new levels, new content, that kind of thing is what encourages replayability.

And also, great games are social. And this means they create a real sense of competition or reward or teamwork. And this is, you know, they offer different challenges. And on iOS, this is largely accomplished through Game Center. And we have a session later today that will cover Game Center enhancements and Game Center in and of itself in a lot more detail. And lastly, games, great games are polished. And this is all about having an attractive design, which actually ties back to leaving a great first impression. And polished games look gorgeous. And they feel just right on iOS. They're designed for iOS.

The graphics are retina quality. And the graphics fit the full resolution of the screen. They're not stretched or scaled to kind of fit and therefore, you know, they're distorted. And lastly, great games are polished. And this is all about having an attractive design, which actually ties back to leaving a great first impression. And polished games look gorgeous. And they feel just right on iOS.

They're designed for iOS. The graphics are retina quality. And the graphics fit the full resolution of the screen. They're not stretched or scaled to kind of fit and therefore, you know, they're distorted. Polished games should feel native, which means that buttons should behave like buttons. There should be feedback.

They don't have to look like standard UIKit controls, they can be completely custom UI, but if it looks like a button, it should behave like a button, because people on iOS, people on these devices expect all apps to behave certain ways. And lists within your game should scroll and be responsive beneath someone's finger. They should bounce at the top and at the bottom, like standard lists do in other apps.

So this is important for polished games to feel native. And polished games also need to pay attention to the details like saving progress when they quit, so that when they're restarted, you've saved state and customers can come back to where they left off. Particularly with multitasking in iOS 7, where someone might double tap the home button and leave the game momentarily to go do something else.

You want to pause and provide a really great experience and save the state and hold things where they're at, and then give a good experience for players coming back into the game once they return to it. And polished games handle device rotation correctly. And as I go through all of these attributes of being great, really, there's a lot of things in here that are check marks that you need to be checking that you're doing in your game.

All right. And lastly, great games are, great iOS games are innovative. And, you know, the way to define innovation is that they are frequently, you know, the first of their kind. They're category-defining. They are groundbreaking. They create a completely new genre of gaming, perhaps. That's what innovative games do. And they're like a breath of fresh air. And innovative games are often built on technological advances, frankly. And we'll look at some examples here shortly.

And here are a few examples of some really great iPhone and iPad games that have won Apple Design Awards over the years. I mean, I've been involved with the Apple Design Awards for pretty much my entire career at Apple. And I remember awarding Real Racing, the first version of it, an ADA. Doodle Jump, when it first came out, just took off. They won an Apple Design Award. Cut the Rope, Topple. Osmos came out on iPad. Fabulous game.

Tremendous flight control. Completely create a brand new genre of gameplay when it hit the App Store in 2008. And over the years, it's won a couple of Apple Design Awards. And then to more recent years. Apps like Ridiculous Fishing, Jetpack Joyride, Where's My Water from Disney. Fabulous games that are incredibly engaging. They keep people coming back again and again. They're attractive.

They're polished. They do all of the things I just spoke of that are important for great games. Badland. Unbelievable production quality in this game. Letterpress. Talk about a social game. Talk about great gameplay and interaction and familiarity. And it's feeling native without being, you know, even though it has custom UI. And then Sky Gamblers. Great performance. And an app that runs on iPad, iPhone, and OSÂ X.

So, you know, these are truly great games, and if you haven't already, spend time with these games, with all of them, and pay attention to how well they embody the characteristics that I just spoke of. I mean, look through these games, play them, and think about, you know, are these attractive? Are they responsive? Are they doing the things that I talked about earlier? Do they represent the characteristics of quality games?

And, you know, when you play with them, when you interact with these games, and many of you probably have, you'll quickly begin to understand why these games are so special, why they won an Apple Design Award. And maybe, in the process of learning these things and experiencing these attributes inside these games, you'll find ways and realize ways that you can also improve your game.

So there you have it, the traits of great games, but we were talking about next-generation games. And to be clear, having a great game is just the first -- is just the starting point for a next-generation game. So in addition to being great, next-generation games also have five notable new characteristics.

The first is that they're optimized for performance on the A7. And the A7, as you know, has been re-architected for 64-bit, making our newest devices the world's first 64-bit mobile devices. I mean, this is desktop-class architecture and horsepower in the palm of your hand. And no one else has done anything like this. And the A7 has got a brand-new CPU and a GPU that provides tons of computational power for the most demanding apps. And we're just beginning to see stuff come out now that's taking full advantage of this horsepower.

Now, with 64-bit architecture, with the 64-bit architecture that the A7 has, it means, what this really means is that we've got twice as many integer and floating point registers as earlier processors. So as the A6, for example, on the iPhone 5. And what these extra registers mean is that the LLVM compiler, for example, that you use to develop your apps with, it can use these extra registers to optimize assembly language and the Objective-C runtime. And so just by virtue of having extra registers on the processor, we can optimize the performance of iOS overall, and we can optimize your code simply running it through the LLVM compiler.

And because of all of that, the A7 offers faster performance for both 64-bit and 32-bit apps. Now, if you're worried about the switch to 64-bit and that it'll be difficult for you, don't worry. You can easily maintain a single code base and target both 32-bit and 64-bit devices.

And we'll cover some techniques and we'll cover details about how to do this in a session later on today. But what I want to make here is that the 64-bit architecture of the A7 is here to stay on iOS. This is the future. And so don't put off moving to 64-bit. Now's the time to do it. This is where we're moving.

The A7 improves CPU performance by up to 2x when compared to the A6, but it also gives you double the GPU performance as well. And you all know what the benefits of a faster GPU are, right? There's more polygons, more sprites, more particles, more complex shaders, more special effects, increased frame rates, smoother animations, more realistic lighting and visual effects, right?

These are all of the things that a GPU provides to you. And ultimately it means that the techniques that used to be too expensive for you to code or to employ in your games are now totally within reach. I mean, many developers would hold back because the hardware couldn't handle it.

And now there's no reason to hold back. We believe that the new GPU, the capabilities of a fast GPU like in the A7 are going to open up a whole new class of games. And, you know, let's look at a leading example of all of this. This is Infinity Blade III. You've probably seen this. You've probably played it. Maybe some of the authors of this game are here today. We demoed this game on stage at the launch of the iPhone 5S.

And Infinity Blade II, which was the predecessor, was an incredible game in and of itself. In fact, I remember Infinity Blade I being an amazing game and setting a standard for a really great game mechanic and great performance. And each subsequent release of this game has been amazing. But the guys behind this game, you know, they took Infinity Blade II and they just kept dialing up the polygon count, the texture size, the shader complexity, and turned... and turned... and turned on all kinds of special effects.

And they were blown away by the results. So if you take a look at this for a minute, this is captured off of... in real time off of an iPhone 5S at the launch. And if you just watch this carefully, you can see that there's incredible depth of field.

I mean, look at the lighting effects, the lens flare, the reflections off of the armor, right? The guys from Epic and Chair Entertainment were amazed at how capable the A7 was and what they could do with it while still maintaining their target frame rate. I mean, this is fantastic stuff. You see this on a Retina iPhone 5s. It's amazing.

And that's just one example of what's possible with the new 64-bit A7 chip that's powering the iPhone 5s and the new iPads. And frankly, if there's nothing else you take away from today and no further guidance that you, you know, take from Apple, it would be that taking advantage of this horsepower is probably the most important thing that you can do to build a next-generation iOS game.

If nothing else, if you just build a great game and take advantage of this horsepower, you'll have done an awesome job. But there's more, because the second trait of a next-generation game is that it's always ready to play, to be played. And this is possible due to a new feature in multitasking on iOS 7 that lets you do background downloads of your game content. In iOS 7, we added some new multitasking modes that all apps can use. And we did this in a way that preserves battery life.

So let me be clear. Multitasking gives your app numerous opportunities to stay up to date. iOS 7 does intelligent scheduling. So for example, it notices when people play a game, when the game is typically played. And it gives background cycles ahead of time so that your game can be ready to be played again at the same time.

iOS 7 also takes advantage of the times when a device is powered up to let your game do opportunistic updates. Maybe you want to go get some things for your game for the next time it's played. And because the device powers up, we give you some time to go get that content.

And thirdly, iOS 7 responds to push notifications as a trigger to give your game time to fetch the information it needs so that when people tap on the notification about your game, they're taken directly to the game and it's ready for them to play. And this stuff wasn't possible previously.

Now, this is doable using three new API tied to multitasking in iOS 7. The first is background fetch, where we will launch your game periodically so that you can pull down new data and update your UI accordingly. The second is remote notifications, where we'll run your game in response to a silent push notification so that you can update your content on demand.

And instead of having to poll your servers for updates when your game launches, for example, which slows down that initial launch time of your game, obviously. And it delays that instant gratification for players. They launch the game. They want to play. They have to wait because you have to go poll your server. That doesn't have to happen anymore. And the third part of this is the background transfers. iOS can download content updates in the background even if your game isn't running.

Now, since you have new opportunities for your game to be running on iOS 7 that didn't exist before, it's even more important than ever that you are being power smart as well when you do these background updates. So let me just touch on this briefly. Using the network, of course, obviously, uses power because we have to power up the antennas regardless of whether you're using cellular or Bluetooth or Wi-Fi.

So when you connect to an external resource, it's going to take power because we have to bring up the antennas and the radios on the device. So do access these external resources only when needed and avoid polling for information from your game servers or wherever you're reaching out to for more information. Another thing here about being power smart is that it's important to try to transmit the smallest amount of data possible.

[ Transcript missing ]

So that's a brief touch on multitasking, but on iOS 7, your game as a result can be always ready to play, which is a great thing. I mean, nowadays, who wants to wait, right? Next up is that next-generation games are, iOS games are secure. And these days, a lot of games are backed by a server. So it's more important than ever to be secure. Most of the developers that we talk with nowadays, certainly over the past year, have some server infrastructure that's supporting gameplay.

[ Transcript missing ]

And this is an important thing for you to understand, particularly if you have a server-backed game, because it has an effect on your game if you use the new multitasking API to do stuff in the background or when your game isn't running. So what happens is that data protection will encrypt data on disk using keys based on the user's passcode. And when an iOS device locks, we throw away these keys and may no longer be able to decrypt the data.

So with the new multitasking APIs in iOS 7, your game may be allowed to run not only in the background, but also when the device is locked. These are new capabilities. But the problem is that potentially, if you need to update your game in the background, you're going to need to access credentials in order to obtain player information from your game server. But if the device is locked, you might not be able to get these credentials.

So while data protection is important for securing data on the device, it's equally important that you use the latest best practices to securely transmit data over the network as well. And to do this, it's important to use secure protocols and to verify certificates and, whenever possible, to hash any sensitive data. And always respect your player's privacy. And we've got a session that goes in detail. Around data protection and access, credential access, and all of the things that I just spoke of later on today. And you don't want to miss it.

And just to drive home the point here, making your app secure, making your game secure is not something that should be an afterthought. It's important to plan for these things in advance and to ensure a secure user experience. We have a session, as I said, later today that will talk about this in more detail. Now, another attribute of next-generation games is that they are designed for touch. And what this means is that when you're creating an iOS game, it's critical that the controls and interactions are designed with direct manipulation and touch in mind.

Now, if your game was sort of, you know, the genesis of your game was, you know, recently around iOS, then, and you thought about multi-touch already, that's sort of the only place that your game has existed, then this is sort of a non-issue. Of course, it's going to be, you know, touch-enabled. But if your game is coming to iOS from a console platform, let's say, then the controller there was designed for you already, but it had many built-in assumptions about gameplay and interaction that may need to be reconsidered or changed.

So it sort of depends on where you're coming from with your game as to whether or not you are designed for touch or not. The best games on iOS create controls that are designed for touch, as I just said. And this means taps, swipes, gestures. They work well. They respond immediately. They track beneath the user's finger. They give feedback, this kind of thing. And by touch, I mean, you know, that touch defines the realm of possible controls, and the controls define the gameplay. So it's the gestures and taps that define the mechanic of the game.

and the key is to create controls designed around direct interaction, right? Direct manipulation reinforced by instantaneous feedback. And think about that for a moment. Direct interaction reinforced by immediate feedback. Does your game do that? So let's go back a few years and look at a classic example of this. And I said to you that there are about 10 games that I play over and over. This is one of them. This is one of that 10. I love flight control.

And this is flight control for FireBint, if you didn't know. They're now part of EA. And this game instantly defined a completely new genre of gaming when it arrived on the App Store in 2008, by the way. This was a really innovative game. Talk about technological advances. These guys had dabbled with the multi-touch capabilities of the SDK and had come up with the game mechanic for flight control.

And this is a game that was designed for touch from the get-go. So what I mean by that is that you see an airplane flying in-- you've undoubtedly played this game-- and you take your finger and drag a path to the runway that corresponds to the color of the airplane, right?

And that's it. It's super easy. Right? It's really great. There's no other rules. That's how you play the game. And that's why it's so compelling. Because people just pick it up and they're like, oh, is that all I need to do? That's incredible. And when this first hit the store, this blew people's minds. But it's such a super easy interaction. But why is this so great? Well, it's because your eyes tell you where the airplane is. You get audio and visual feedback when you touch the plane.

You feel friction as you draw the flight path on the glass. And you see immediately the path that you drew. And you see the effects of that action. Everything is in sync. And so, in other words, what you feel, what you see, and what you hear all reinforce each other.

This is what being designed for touch means. And there are not enough games yet on the App Store that do this correctly. And we want to work with you today to make sure that your games are doing this. So what works best for when you're designing for touch?

Well, what works best is game mechanics that are built around direct manipulation. Things like drawing, dragging path gestures like we just saw, swipes, touches, and taps. And that's all versus game mechanics built around indirect manipulation, like virtual D-pads and virtual joysticks. Those are far less efficient, and they're not designed for touch.

But there are games that are based on indirect interaction. And those types of games are great candidates for augmenting your touch input with support for a game controller. And game controllers are super great for providing the physical feedback that you need for indirect interactions, so tight sequence moves and so on. And we'll go into great detail this afternoon in one of the sessions around the MFI game controllers. And you can learn more about them. We may even have some samples in the lab. I can't remember.

And so anyway, that's a quick overview of what it means to be designed for touch, which is a vital trait of a next-generation game. And finally, let's talk about being state of the art. Because next-generation iOS games consistently need to target the latest and greatest to really differentiate themselves on iOS.

If you want to stand out from the crowd, then take advantage of the latest and greatest OS and hardware technologies. So state of the art games take advantage of the capabilities of the latest iOS devices. Every time we come out with a new device, we have new capabilities.

I mean, think about it. Go back to the iPhone 4. When it came out, we introduced Retina Display. Before that, we had devices that came out, we introduced the Gyroscope. And prior to that, the very first iPhone had the accelerometer. For example. And every time there's a new device, we're introducing new hardware capabilities that you can take advantage of in your games. And right now, new hardware capabilities to take advantage of are 64-bit, the A7 GPU, Open GLES 3.0, and those kinds of things.

state-of-the-art apps also support the latest iOS releases. And we recommend supporting the current release of iOS and 1 minus, so current OS and current OS minus 1. And this makes a lot of sense when you recall the speed with which people have latched on to iOS 7. As I mentioned earlier, as of a few weeks ago, we saw that 74% of all iOS devices today of the 700 million that we announced are running iOS 7. And that's an OS that came out just a few months ago.

So think about where you are putting your development resources. How much effort is going into the iOS 7 slice here, the slice that's growing, versus how much effort are you putting into the smaller slice? I mean, and really, the challenge is that you need to make sure that your resource allocation isn't out of balance.

Target iOS 7. That's where the energy is. Christmas is coming. People are going to buy tons of devices, and they're all going to be running on iOS 7. So target current iOS version and one minus that, and when the new version of iOS comes out, and undoubtedly there'll be another one, you know, move to that right away.

State-of-the-art apps also integrate with built-in game technologies, and the big ones on iOS 7 are the improvements to Game Center, OpenGL ES3, talked about much of this, the SpriteKit framework, Game Controller, and AirPlay. AirPlay, which has been around for a while, but still, not enough games are taking advantage of it. There's a huge opportunity here for you.

And there are so many other technologies in the SDK that have been around for a while or that have just been introduced that are enhancements to existing frameworks that you can use to do something really cool on iOS. So familiarize yourself with the built-in technologies on iOS and integrate them instead of rolling your own stuff, instead of creating your own custom libraries and trying to do things that the SDK already does very, very well and does in an optimal way for the... for the CPU and the GPU. And state-of-the-art games also are built using the current tools and techniques.

Now, our current tool set includes these three things, right? The current shipping version of Xcode, which is 5.0.1, it includes the iOS 7 SDK, and this version of Xcode is for OSÂ X Mavericks. So make sure that your development machine is running MacÂ OSÂ X Mavericks. Now, sometimes we hear, from people who say that they're using an older SDK and an older version of Xcode because they think that moving to the newest stuff is going to mean that they can't support anything older.

[ Transcript missing ]

So stay current with our tools, stay current with all of the capabilities that they provide, and take advantage of this to reach back to earlier versions of the OS. And we'll cover some more of this later today as well. So use the current tools and techniques and continually push ahead to stay modern. I mean, with every OS and SDK release, we keep innovating and adding new capabilities, like I mentioned earlier.

And players quickly move forward. Your customers are wanting the latest hardware. They're buying it, and they're upgrading to iOS. They want the newest capabilities of Game Center. They want the newest capabilities of this hardware. And they are going to quickly come to expect that your game is ready to go. They're ready for the new hardware and for the new capabilities. So it's important that you adopt these things quickly and avoid the temptation of sticking with an older SDK.

So avoid standing still, keep investing, keep learning, and keep current. And that's state of the art. So these are the five characteristics of next-generation iOS games. They are 64-bit optimized and optimized for the A7. They're always up to date. They're secure. They're designed for touch. And they are state of the art. And of course, it goes without saying that they have to be great. and these along with key iOS 7 technologies like we just mentioned earlier, OpenGL ES3, etc. are what we will be focusing on today in depth.

So iOS 7 and our latest devices make it possible for you to build next-generation iOS games that were impossible to imagine just a couple of years ago. So we hope you have a great day. We're really looking forward to talking to all of you. And we're going to take a real short break right now and start as soon as we can at 10 a.m. on the advances in OpenGL ES 3.0. Thank you so much for spending time with us today.
