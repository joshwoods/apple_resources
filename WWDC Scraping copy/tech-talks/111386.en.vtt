WEBVTT

00:00:00.667 --> 00:00:02.469
Bryan: Hello and welcome.

00:00:02.469 --> 00:00:04.771
Today we're going to discuss
how you can improve

00:00:04.771 --> 00:00:07.107
your app's subscription
retention strategy

00:00:07.107 --> 00:00:10.177
using the App Store features.

00:00:10.177 --> 00:00:13.814
I'm Bryan and I'm part of
the App Store Monetization team.

00:00:13.814 --> 00:00:15.148
And I'll be joined by Hemant,

00:00:15.148 --> 00:00:18.886
a developer advocate on our
App Store Commerce team.

00:00:18.886 --> 00:00:21.655
We'll start by sharing key
insights to help you think about

00:00:21.655 --> 00:00:25.592
managing your approach
to subscriber retention.

00:00:25.592 --> 00:00:26.927
We'll then walk through
the features

00:00:26.927 --> 00:00:29.096
the App Store provides
to help you improve

00:00:29.096 --> 00:00:32.566
your subscriber retention and
provide some sample strategies

00:00:32.566 --> 00:00:35.435
you can consider
to elevate them.

00:00:35.435 --> 00:00:37.237
I'll then hand it over to Hemant

00:00:37.237 --> 00:00:40.240
to discuss engineering
considerations.

00:00:40.240 --> 00:00:43.710
So, let's get started.

00:00:43.710 --> 00:00:46.513
For over 15 years,
the App Store has been a safe

00:00:46.513 --> 00:00:50.817
and trusted place for people
to discover and download apps.

00:00:50.817 --> 00:00:52.386
You can use in-app purchases

00:00:52.386 --> 00:00:56.623
to support a variety of business
models on the App Store.

00:00:56.623 --> 00:00:59.259
Customers trust that purchases
made through the App Store

00:00:59.259 --> 00:01:01.361
are held to high privacy
standards,

00:01:01.361 --> 00:01:02.930
and are encrypted
and protected

00:01:02.930 --> 00:01:06.867
to keep their personal
information safe.

00:01:06.867 --> 00:01:09.269
Auto-renewable subscriptions
have proven to be

00:01:09.269 --> 00:01:11.905
a popular way for developers
to grow their business

00:01:11.905 --> 00:01:14.741
on the App Store, as evidenced
by the continued growth

00:01:14.741 --> 00:01:18.946
in new subscription starts
each year.

00:01:18.946 --> 00:01:20.681
Since auto-renewable
subscriptions

00:01:20.681 --> 00:01:24.084
are a recurring revenue model,
they have a unique customer

00:01:24.084 --> 00:01:26.920
life cycle that require
monitoring and tracking

00:01:26.920 --> 00:01:28.956
at all stages.

00:01:28.956 --> 00:01:31.391
A customer must first
discover your app,

00:01:31.391 --> 00:01:33.460
either organically
on the App Store

00:01:33.460 --> 00:01:35.595
or through your own
marketing channels,

00:01:35.595 --> 00:01:38.966
before downloading it
to their device.

00:01:38.966 --> 00:01:41.969
Once in your app, you need
to acquire paid subscribers

00:01:41.969 --> 00:01:44.504
by informing customers
of your subscription

00:01:44.504 --> 00:01:48.075
and communicating the value
of the service.

00:01:48.075 --> 00:01:50.610
And once they become
paying customers,

00:01:50.610 --> 00:01:52.980
you need to ensure
they're consistently engaging

00:01:52.980 --> 00:01:56.917
with the service
and provided with ongoing value.

00:01:56.917 --> 00:02:00.487
While these stages are important
for scaling your business,

00:02:00.487 --> 00:02:02.689
we've observed the most
successful subscriptions

00:02:02.689 --> 00:02:04.658
to have thoughtful strategies
in place

00:02:04.658 --> 00:02:08.662
to make sure they're
retaining customers longer.

00:02:08.662 --> 00:02:10.564
The classic way to think
about this

00:02:10.564 --> 00:02:12.766
is by imagining
your subscription service

00:02:12.766 --> 00:02:16.503
as a leaky water bucket that's
been punctured with holes.

00:02:16.503 --> 00:02:18.939
If you spent all of your time
and resources

00:02:18.939 --> 00:02:22.442
filling up your bucket
or acquiring new subscribers,

00:02:22.442 --> 00:02:27.080
you would slowly lose water,
or subscribers, over time.

00:02:27.080 --> 00:02:29.950
However, you can help
remedy and address this

00:02:29.950 --> 00:02:32.853
by focusing your efforts
to plug some of these holes

00:02:32.853 --> 00:02:36.823
to effectively help retain
more of your subscribers.

00:02:36.823 --> 00:02:39.960
And one of the big benefits
of retaining customers longer

00:02:39.960 --> 00:02:42.262
is that it increases
your revenue.

00:02:42.262 --> 00:02:44.197
When a customer acquired
on the App Store

00:02:44.197 --> 00:02:47.234
stays subscribed to your app
for more than one year,

00:02:47.234 --> 00:02:52.672
your proceeds increase from
70 to 85 percent in year two.

00:02:52.672 --> 00:02:54.775
One of the main metrics
you can monitor

00:02:54.775 --> 00:02:59.012
to understand your subscriber
retention is your churn rate.

00:02:59.012 --> 00:03:02.215
Churn occurs when a customer's
subscription comes to an end

00:03:02.215 --> 00:03:04.251
and does not auto-renew.

00:03:04.251 --> 00:03:06.620
This can occur
for a variety of reasons,

00:03:06.620 --> 00:03:09.556
which fall into two categories.

00:03:09.556 --> 00:03:12.559
Voluntary, which is when
a customer chooses to cancel

00:03:12.559 --> 00:03:14.961
their subscription themselves.

00:03:14.961 --> 00:03:18.799
And involuntary, which occurs
when a customer doesn't intend

00:03:18.799 --> 00:03:21.868
for their subscription to end.

00:03:21.868 --> 00:03:24.704
Customers may voluntarily churn
from your subscription

00:03:24.704 --> 00:03:26.807
for a variety of reasons.

00:03:26.807 --> 00:03:29.643
For example, if your service
isn't consistently

00:03:29.643 --> 00:03:32.079
adding new content or features,

00:03:32.079 --> 00:03:35.515
or if it's intended
for shorter-term use.

00:03:35.515 --> 00:03:38.618
It can also occur if a customer
is no longer able

00:03:38.618 --> 00:03:41.788
to justify
the financial commitment.

00:03:41.788 --> 00:03:44.791
Involuntary churn primarily
occurs when a customer

00:03:44.791 --> 00:03:48.028
experiences a billing issue,
such as when their credit card

00:03:48.028 --> 00:03:52.866
expires and their billing
details haven't been updated.

00:03:52.866 --> 00:03:55.102
There are a number of factors
that can contribute

00:03:55.102 --> 00:03:57.471
to an app's voluntary
churn rate,

00:03:57.471 --> 00:04:00.974
such as where
a subscriber is located.

00:04:00.974 --> 00:04:04.444
For example, we can see that
compared to the United States,

00:04:04.444 --> 00:04:07.314
churn rates tend to be higher
in mainland China,

00:04:07.314 --> 00:04:09.483
where the concept
of an auto-renewing payment

00:04:09.483 --> 00:04:11.885
is less common.

00:04:11.885 --> 00:04:15.922
Similarly, churn can vary
depending on an app's category.

00:04:15.922 --> 00:04:17.524
Let's take a look
at the differences

00:04:17.524 --> 00:04:20.527
between a few sample categories.

00:04:20.527 --> 00:04:22.329
On the lower side
of the spectrum,

00:04:22.329 --> 00:04:25.632
health and fitness apps tend
to have lower median churn rates

00:04:25.632 --> 00:04:28.401
because customers oftentimes
commit to services

00:04:28.401 --> 00:04:32.339
for longer periods of time
to help achieve their goals.

00:04:32.339 --> 00:04:35.342
And music apps come
with a deep library of content

00:04:35.342 --> 00:04:40.514
that customers can consistently
find value and engage with.

00:04:40.514 --> 00:04:42.949
On the other hand,
some categories might see

00:04:42.949 --> 00:04:46.453
slightly higher median churn,
like entertainment,

00:04:46.453 --> 00:04:48.922
which customers
oftentimes churn from

00:04:48.922 --> 00:04:51.858
when their favorite shows
have ended.

00:04:51.858 --> 00:04:55.328
And lifestyle apps, which is
a category primarily made up

00:04:55.328 --> 00:04:58.298
of dating apps that are
designed to no longer be needed

00:04:58.298 --> 00:05:01.434
once a romantic goal is met.

00:05:01.434 --> 00:05:04.905
However, involuntary churn
is not necessarily correlated

00:05:04.905 --> 00:05:07.240
to factors
like region and category,

00:05:07.240 --> 00:05:10.143
as it's not linked
to customer behavior.

00:05:10.143 --> 00:05:12.345
Here you can see
the involuntary churn rates

00:05:12.345 --> 00:05:15.148
from some of our top
worldwide apps.

00:05:15.148 --> 00:05:17.317
As we'll discuss in a moment,
the App Store

00:05:17.317 --> 00:05:19.519
does a number of things
on your behalf

00:05:19.519 --> 00:05:23.757
to help combat involuntary churn
and keep these numbers low.

00:05:23.757 --> 00:05:25.425
Keep in mind that these
data benchmarks

00:05:25.425 --> 00:05:28.762
are directional and include
a wide range of apps.

00:05:28.762 --> 00:05:30.430
Each subscription is unique,

00:05:30.430 --> 00:05:35.302
and metrics
for your specific app may vary.

00:05:35.302 --> 00:05:37.504
So now you might be wondering
how to quantify

00:05:37.504 --> 00:05:40.473
the impact of improving
your retention.

00:05:40.473 --> 00:05:43.443
Let's look at an example
to visualize.

00:05:43.443 --> 00:05:44.911
This app starts out the year

00:05:44.911 --> 00:05:47.681
with a cohort
of 10,000 subscribers.

00:05:47.681 --> 00:05:51.117
If they observe an 85 percent
retention rate for the cohort

00:05:51.117 --> 00:05:53.286
every month
through the end of the year,

00:05:53.286 --> 00:05:58.024
they'll end the year
with 1,673 subscribers.

00:05:58.024 --> 00:06:02.896
This equates to a loss of nearly
83 percent of these subscribers.

00:06:02.896 --> 00:06:06.266
If they improve their retention
rate to 90 percent each month,

00:06:06.266 --> 00:06:11.304
they'd end the year
with 3,487 subscribers.

00:06:11.304 --> 00:06:14.407
And if they improved it
to 95 percent each month,

00:06:14.407 --> 00:06:19.145
they would end the year
with 5,688 subscribers.

00:06:19.145 --> 00:06:20.680
This means
they would end the year

00:06:20.680 --> 00:06:22.816
with triple the subscribers
they would have had

00:06:22.816 --> 00:06:25.719
at an 85 percent
retention rate.

00:06:25.719 --> 00:06:28.054
While this visual
is meant to serve as a helpful

00:06:28.054 --> 00:06:31.424
directional representation,
do note that it does not account

00:06:31.424 --> 00:06:36.329
for every variable
in the subscriber life cycle.

00:06:36.329 --> 00:06:38.732
Apple provides you with
a number of tools to help you

00:06:38.732 --> 00:06:41.768
track and grow your business
on the App Store.

00:06:41.768 --> 00:06:44.571
Within App Store Connect,
you can use Sales & Trends

00:06:44.571 --> 00:06:48.174
to view data related to your
subscriber retention rate.

00:06:48.174 --> 00:06:50.777
You can also download
your subscription report

00:06:50.777 --> 00:06:54.414
to track information about
your total paid subscribers

00:06:54.414 --> 00:06:57.183
and the subscription events
report to help understand

00:06:57.183 --> 00:07:00.420
aggregated subscriber updates.

00:07:00.420 --> 00:07:04.024
And App Analytics provides you
with retention benchmarks.

00:07:04.024 --> 00:07:06.593
This can help you understand
how your specific app

00:07:06.593 --> 00:07:10.530
performs against a cohort of
similar apps in usage retention,

00:07:10.530 --> 00:07:13.366
which can help you directionally
understand how much time

00:07:13.366 --> 00:07:17.971
your customers spend
engaging in your app.

00:07:17.971 --> 00:07:20.774
Now that we've discussed
the importance of retention,

00:07:20.774 --> 00:07:22.342
let's talk about
some of the features

00:07:22.342 --> 00:07:25.078
the App Store offers
to help you minimize churn

00:07:25.078 --> 00:07:27.480
and support retention.

00:07:27.480 --> 00:07:29.249
The App Store
has a number of features

00:07:29.249 --> 00:07:32.118
to help you retain
your subscribers for longer.

00:07:32.118 --> 00:07:34.654
Billing retry
and billing problem message

00:07:34.654 --> 00:07:37.357
are two tools that are
automatically initiated

00:07:37.357 --> 00:07:39.659
for all subscriptions
and don't require

00:07:39.659 --> 00:07:42.462
any additional
implementation work.

00:07:42.462 --> 00:07:45.098
And billing grace period
and subscription offers

00:07:45.098 --> 00:07:47.067
are tools you can choose
to adopt

00:07:47.067 --> 00:07:51.004
to help amplify your subscriber
retention strategy.

00:07:51.004 --> 00:07:53.173
Let's start with an overview
of the features

00:07:53.173 --> 00:07:56.242
the App Store does
on your behalf.

00:07:56.242 --> 00:07:59.679
Billing retry is a feature that
Apple automatically provides

00:07:59.679 --> 00:08:01.815
to help you
to recover failed renewals

00:08:01.815 --> 00:08:04.784
and prevent involuntary churn.

00:08:04.784 --> 00:08:06.586
In the event
of a payment failure,

00:08:06.586 --> 00:08:08.521
a customer
is automatically entered

00:08:08.521 --> 00:08:10.323
into the billing retry state,

00:08:10.323 --> 00:08:13.960
where they have 60 days
to recover their subscription.

00:08:13.960 --> 00:08:16.629
During this window, Apple
attempts to collect payment

00:08:16.629 --> 00:08:19.766
from the customer through a
number of communication methods,

00:08:19.766 --> 00:08:23.103
such as the App Store
push notification shown here.

00:08:23.103 --> 00:08:25.939
If the customer is recovered
within 60 days,

00:08:25.939 --> 00:08:28.708
their subscription resumes
and they continue to accrue

00:08:28.708 --> 00:08:30.276
their days of paid service,

00:08:30.276 --> 00:08:34.848
which can help you increase
your proceeds to 85 percent.

00:08:34.848 --> 00:08:37.150
Here's a visual to help
explain this further

00:08:37.150 --> 00:08:40.086
using a customer
on a monthly subscription.

00:08:40.086 --> 00:08:42.088
Let's say at the end
of the term,

00:08:42.088 --> 00:08:45.225
their credit card information
on file has expired.

00:08:45.225 --> 00:08:48.094
Without a valid payment method,
their renewal fails

00:08:48.094 --> 00:08:50.797
and they automatically
enter the billing retry state

00:08:50.797 --> 00:08:53.032
for up to 60 days.

00:08:53.032 --> 00:08:55.001
It then takes the customer
10 days

00:08:55.001 --> 00:08:57.470
to update
credit card information.

00:08:57.470 --> 00:08:59.806
And after they've done so,
their subscription

00:08:59.806 --> 00:09:02.642
is successfully recovered
and a new billing date

00:09:02.642 --> 00:09:04.911
is established
on the date of recovery,

00:09:04.911 --> 00:09:09.048
which is what all subsequent
renewal dates will be based on.

00:09:09.048 --> 00:09:11.251
During the 60-day
billing retry window,

00:09:11.251 --> 00:09:14.254
Apple attempts to notify
customers of their billing issue

00:09:14.254 --> 00:09:16.523
through email,
push notification,

00:09:16.523 --> 00:09:18.625
and an App Store banner.

00:09:18.625 --> 00:09:21.094
If a customer selects
any of these methods,

00:09:21.094 --> 00:09:23.630
they will be automatically taken
to their device settings

00:09:23.630 --> 00:09:26.999
to update their payment details.

00:09:26.999 --> 00:09:29.035
And Apple has developed
a methodology

00:09:29.035 --> 00:09:32.071
to effectively use these
channels to notify customers

00:09:32.071 --> 00:09:34.207
of the billing issue
at multiple points

00:09:34.207 --> 00:09:37.510
throughout the entirety
of the 60-day window.

00:09:37.510 --> 00:09:40.013
As you can see here,
customers are notified

00:09:40.013 --> 00:09:42.182
by email and push notification

00:09:42.182 --> 00:09:44.484
at multiple points
throughout the window,

00:09:44.484 --> 00:09:49.389
while the App Store banner goes
live at the start of the period.

00:09:49.389 --> 00:09:51.991
The billing problem message
takes the functionality

00:09:51.991 --> 00:09:55.228
of billing retry a step further
by providing customers

00:09:55.228 --> 00:09:58.231
in the billing retry state
a low-friction solution

00:09:58.231 --> 00:10:00.166
to update their payment
instrument details

00:10:00.166 --> 00:10:04.604
within the app that also
prevents involuntary churn.

00:10:04.604 --> 00:10:07.307
If a customer tries to use
your service after entering

00:10:07.307 --> 00:10:09.676
the billing retry state,
they will automatically

00:10:09.676 --> 00:10:12.212
be notified of the billing error
and be prompted

00:10:12.212 --> 00:10:14.347
to update their payment details.

00:10:14.347 --> 00:10:16.649
This both alerts the user
of the issue

00:10:16.649 --> 00:10:18.718
and provides a simple way
to resolve it

00:10:18.718 --> 00:10:23.089
without needing to leave your
app and navigate to Settings.

00:10:23.089 --> 00:10:24.791
Now that we've covered
what Apple does

00:10:24.791 --> 00:10:27.827
to help you keep subscribers,
let's discuss features

00:10:27.827 --> 00:10:32.265
you can implement to help
elevate your retention strategy.

00:10:32.265 --> 00:10:34.801
Billing grace period
helps you prevent lost revenue

00:10:34.801 --> 00:10:37.403
while improving
your involuntary churn rate.

00:10:37.403 --> 00:10:40.673
This feature builds on the
functionality of billing retry,

00:10:40.673 --> 00:10:43.209
allowing customers who have
encountered a billing issue

00:10:43.209 --> 00:10:45.645
to retain access
to their subscription

00:10:45.645 --> 00:10:48.915
while the App Store tries to
remediate the issue with them.

00:10:48.915 --> 00:10:50.750
This means that
rather than immediately

00:10:50.750 --> 00:10:54.320
losing access to your service,
customers can still access it

00:10:54.320 --> 00:10:58.157
while Apple attempts to recover
the subscription on your behalf.

00:10:58.157 --> 00:11:01.160
This can be helpful for you
since customers that resubscribe

00:11:01.160 --> 00:11:04.297
during the grace period retain
their original renewal date,

00:11:04.297 --> 00:11:07.767
meaning you won't accrue
any unpaid days of service.

00:11:07.767 --> 00:11:09.702
Best of all,
billing grace period

00:11:09.702 --> 00:11:12.805
can easily be implemented
within App Store Connect,

00:11:12.805 --> 00:11:16.342
which Hemant will walk
you through in a moment.

00:11:16.342 --> 00:11:18.478
Billing grace period
is also configurable

00:11:18.478 --> 00:11:21.214
to help fit the needs
of your business.

00:11:21.214 --> 00:11:22.682
You can apply the grace period

00:11:22.682 --> 00:11:24.817
to all of your active
subscription plans,

00:11:24.817 --> 00:11:27.987
or choose to exclude customers
in a free trial

00:11:27.987 --> 00:11:32.158
so that it only applies
to those on a paid plan.

00:11:32.158 --> 00:11:34.260
You can also choose
to set the grace period

00:11:34.260 --> 00:11:37.931
to be 3,
16, or 28 days long.

00:11:37.931 --> 00:11:39.365
Keep in mind that the more time

00:11:39.365 --> 00:11:41.935
you give a customer
to resolve their billing issue,

00:11:41.935 --> 00:11:45.438
the higher your chances will be
of reestablishing a subscription

00:11:45.438 --> 00:11:48.675
during the grace period.

00:11:48.675 --> 00:11:51.344
In fact, when looking
at successful subscription

00:11:51.344 --> 00:11:55.014
recoveries over time, we see
that 40 percent of customers

00:11:55.014 --> 00:11:57.617
correct their billing
information within three days

00:11:57.617 --> 00:12:00.720
of the billing issue
being recognized.

00:12:00.720 --> 00:12:02.188
The number of billing recoveries

00:12:02.188 --> 00:12:05.658
jumps to 75 percent
within 16 days

00:12:05.658 --> 00:12:08.528
and up to 90 percent
within 28 days

00:12:08.528 --> 00:12:11.731
of the billing issue
being recognized.

00:12:11.731 --> 00:12:15.468
Let's use another visual to
explain how this feature works.

00:12:15.468 --> 00:12:17.437
As with our previous example,

00:12:17.437 --> 00:12:20.139
the customer's credit card
information has expired,

00:12:20.139 --> 00:12:22.208
causing the renewal to fail.

00:12:22.208 --> 00:12:24.944
With billing grace period,
the developer has now

00:12:24.944 --> 00:12:28.514
carved out the first 28 days
of the billing retry period

00:12:28.514 --> 00:12:32.085
to reengage customers
without impacting billings.

00:12:32.085 --> 00:12:34.253
During this time,
customers will still be able

00:12:34.253 --> 00:12:36.856
to access their subscription.

00:12:36.856 --> 00:12:38.891
It then takes
the customer 14 days

00:12:38.891 --> 00:12:41.594
to update their
credit card information.

00:12:41.594 --> 00:12:44.931
After they've done so, their
subscription is reestablished,

00:12:44.931 --> 00:12:47.400
and they will remain
on the existing billing cycle

00:12:47.400 --> 00:12:51.070
so you won't lose
any days of paid service.

00:12:51.070 --> 00:12:53.072
We've seen developers
successfully use

00:12:53.072 --> 00:12:56.743
billing grace period to recover
and save subscription plans.

00:12:56.743 --> 00:12:58.111
And in the past year,

00:12:58.111 --> 00:13:00.847
we successfully recovered
nearly 80 million

00:13:00.847 --> 00:13:03.483
involuntarily churned
subscriptions for developers

00:13:03.483 --> 00:13:07.387
who have enabled the billing
grace period feature.

00:13:07.387 --> 00:13:10.156
Finally, subscription offers
can be an effective way

00:13:10.156 --> 00:13:12.058
to retain customers for longer

00:13:12.058 --> 00:13:14.093
and improve
your voluntary churn rate

00:13:14.093 --> 00:13:18.264
by surfacing free content or
enticing discounts to your app.

00:13:18.264 --> 00:13:20.299
App Store has
two distinct offer features

00:13:20.299 --> 00:13:23.569
to help retain your customers
for longer.

00:13:23.569 --> 00:13:26.072
Promotional offers is a feature
that allows you to give

00:13:26.072 --> 00:13:29.375
custom cohorts of existing
or previous subscribers

00:13:29.375 --> 00:13:31.344
a free or discounted
subscription

00:13:31.344 --> 00:13:36.115
for a specific duration
distributed inside of your app.

00:13:36.115 --> 00:13:38.918
And offer codes equip you
with additional flexibility

00:13:38.918 --> 00:13:44.057
for merchandising offers both
inside and outside of your app.

00:13:44.057 --> 00:13:46.159
There are a few
key scenarios to consider

00:13:46.159 --> 00:13:48.828
in order to create relevant
subscription offers

00:13:48.828 --> 00:13:51.197
that entice customers
to stay subscribed

00:13:51.197 --> 00:13:53.266
to your service for longer.

00:13:53.266 --> 00:13:55.868
You can use offers to save
low-engaging customers

00:13:55.868 --> 00:13:58.671
from canceling
their subscription.

00:13:58.671 --> 00:14:01.808
And you can also use offers
to try and reengage customers

00:14:01.808 --> 00:14:05.344
that have already turned off
auto-renewal for your service.

00:14:05.344 --> 00:14:07.113
Some of these customers
might still have

00:14:07.113 --> 00:14:10.149
remaining days of service
to enjoy your subscription,

00:14:10.149 --> 00:14:11.851
while others
might have fully churned

00:14:11.851 --> 00:14:13.820
from the subscription already.

00:14:13.820 --> 00:14:15.455
Let's now discuss
some strategies

00:14:15.455 --> 00:14:20.593
to help engage customers in each
of these three scenarios.

00:14:20.593 --> 00:14:22.128
You may have active customers

00:14:22.128 --> 00:14:24.063
who still have
auto-renew enabled,

00:14:24.063 --> 00:14:26.299
but are at risk of canceling
their subscription

00:14:26.299 --> 00:14:28.668
due to low engagement
in the product.

00:14:28.668 --> 00:14:31.237
This is a critical opportunity
to save customers

00:14:31.237 --> 00:14:35.141
from turning off auto-renew
and churning from your service.

00:14:35.141 --> 00:14:37.310
You can use these offers
as opportunities

00:14:37.310 --> 00:14:39.779
to communicate
the value of your service,

00:14:39.779 --> 00:14:42.715
or point customers
to new features and capabilities

00:14:42.715 --> 00:14:44.684
that they may not be aware of.

00:14:44.684 --> 00:14:47.086
You can provide them
with a free period or offer

00:14:47.086 --> 00:14:50.089
to upgrade or downgrade them
to a different product

00:14:50.089 --> 00:14:54.393
that may be more suitable
for their desired usage.

00:14:54.393 --> 00:14:56.662
It's most effective
to distribute these offers

00:14:56.662 --> 00:14:58.097
outside of your app,

00:14:58.097 --> 00:15:00.700
such as in emails
or push notifications,

00:15:00.700 --> 00:15:04.370
to improve your chances
of the customer seeing them.

00:15:04.370 --> 00:15:07.940
Here's an example from the
hypothetical app Ocean Journal.

00:15:07.940 --> 00:15:10.243
They've sent an email
to a low-engaged customer

00:15:10.243 --> 00:15:13.880
with an offer to enjoy the next
month of service for free.

00:15:13.880 --> 00:15:15.481
They've contextualized
the message

00:15:15.481 --> 00:15:18.184
with an announcement
of a new subscription feature

00:15:18.184 --> 00:15:21.721
that allows customers
to access content offline.

00:15:21.721 --> 00:15:24.390
If a customer has already
turned off auto-renew

00:15:24.390 --> 00:15:26.893
but still has access
to your subscription,

00:15:26.893 --> 00:15:29.128
you can surface offers
to attempt to prevent them

00:15:29.128 --> 00:15:32.598
from fully churning
and losing service.

00:15:32.598 --> 00:15:35.201
Many customers find themselves
in this scenario,

00:15:35.201 --> 00:15:37.270
as they tend to cancel
their plans in advance

00:15:37.270 --> 00:15:38.905
of their renewal date.

00:15:38.905 --> 00:15:42.008
In fact, over 90 percent
of customers cancel plans

00:15:42.008 --> 00:15:44.644
with at least two days
of service remaining,

00:15:44.644 --> 00:15:46.579
and many continue
to return to the app

00:15:46.579 --> 00:15:49.816
while throughout
the remainder of the term.

00:15:49.816 --> 00:15:52.051
You can leverage this window
to provide offers

00:15:52.051 --> 00:15:55.421
for discounted service that
motivate customers to continue

00:15:55.421 --> 00:15:59.826
subscribing while showcasing
the value of your subscription.

00:15:59.826 --> 00:16:02.395
Consider distributing
these offers in your app

00:16:02.395 --> 00:16:05.264
to reach the customers
who are still utilizing aspects

00:16:05.264 --> 00:16:07.533
of your subscription.

00:16:07.533 --> 00:16:10.102
Here's another example
from Ocean Journal.

00:16:10.102 --> 00:16:12.405
They're presenting an offer
for 50 percent off

00:16:12.405 --> 00:16:14.373
of a customer's
next month of service

00:16:14.373 --> 00:16:16.442
in the home screen of their app.

00:16:16.442 --> 00:16:17.543
In the message,

00:16:17.543 --> 00:16:19.278
they've highlighted
the customer's progress

00:16:19.278 --> 00:16:22.381
towards their monthly surfing
goal, and clearly communicated

00:16:22.381 --> 00:16:26.919
the subscription's impact
in helping them achieve it.

00:16:26.919 --> 00:16:28.921
In the event that
a customer fully churns

00:16:28.921 --> 00:16:32.258
from your subscription and loses
access to your service,

00:16:32.258 --> 00:16:35.962
you can use subscription offers
to try and win them back.

00:16:35.962 --> 00:16:38.865
However, it's important
to determine the optimal time

00:16:38.865 --> 00:16:41.701
after a customer churns
to begin providing discounts

00:16:41.701 --> 00:16:43.703
for your specific app.

00:16:43.703 --> 00:16:45.404
Keep in mind
that providing discounts

00:16:45.404 --> 00:16:47.840
as soon as your customer's
subscription ends

00:16:47.840 --> 00:16:50.042
may lead to unintended behavior,

00:16:50.042 --> 00:16:54.513
as users may cancel their plans
in order to receive discounts.

00:16:54.513 --> 00:16:56.649
Once you begin
distributing these offers,

00:16:56.649 --> 00:16:59.952
consider giving deeper discounts
as the amount of time churned

00:16:59.952 --> 00:17:01.454
continues to grow.

00:17:01.454 --> 00:17:04.924
And since these customers are
likely no longer using your app,

00:17:04.924 --> 00:17:07.493
the most effective method
to distribute these offers

00:17:07.493 --> 00:17:10.696
are through emails
and push notifications.

00:17:10.696 --> 00:17:12.598
Here's how this might look
if Ocean Journal

00:17:12.598 --> 00:17:15.635
surfaced preexisting customers
with an offer.

00:17:15.635 --> 00:17:18.371
They're using push notifications
to distribute an offer

00:17:18.371 --> 00:17:21.674
for 50 percent off the next
three months of service.

00:17:21.674 --> 00:17:23.342
If the customer dismisses it,

00:17:23.342 --> 00:17:26.345
they can consider sending
another offer in the future.

00:17:26.345 --> 00:17:29.415
But they should avoid sending
the customer too many offers

00:17:29.415 --> 00:17:33.052
to prevent the behavior
from feeling spammy.

00:17:33.052 --> 00:17:35.554
So billing retry,
billing problem message,

00:17:35.554 --> 00:17:38.224
billing grace period,
and subscription offers

00:17:38.224 --> 00:17:39.926
are some of the ways
the App Store

00:17:39.926 --> 00:17:42.929
helps retain
your customers for longer.

00:17:42.929 --> 00:17:44.864
Now that we know
what these features are

00:17:44.864 --> 00:17:46.232
and how to use them,

00:17:46.232 --> 00:17:50.102
Hemant will discuss how
to successfully engineer them.

00:17:50.102 --> 00:17:51.470
Hemant: Thank you, Bryan.

00:17:51.470 --> 00:17:54.674
In this section, we'll discuss
the best practices you'll need

00:17:54.674 --> 00:17:57.410
to consider when implementing
App Store features

00:17:57.410 --> 00:18:02.081
to prevent churn and retain
subscribers for your app.

00:18:02.081 --> 00:18:03.950
Before the subscription renewal,

00:18:03.950 --> 00:18:06.752
the App Store
checks for any billing issues

00:18:06.752 --> 00:18:09.288
that might delay or prevent
the subscription

00:18:09.288 --> 00:18:12.058
from being
automatically renewed.

00:18:12.058 --> 00:18:16.228
These checks include ensuring
a customer has an active

00:18:16.228 --> 00:18:18.197
and valid payment method on file

00:18:18.197 --> 00:18:21.067
to process
the subscription renewal.

00:18:21.067 --> 00:18:24.236
In case they do not,
the App Store proactively

00:18:24.236 --> 00:18:27.974
notifies the customer to update
the payment method on file

00:18:27.974 --> 00:18:30.609
before the subscription renewal.

00:18:30.609 --> 00:18:34.080
To deter fraud, the App Store
conducts fraud and risk checks

00:18:34.080 --> 00:18:38.017
on the customer profile
and payment method on file.

00:18:38.017 --> 00:18:42.188
And lastly, when applicable,
the customers are also notified

00:18:42.188 --> 00:18:45.091
about upcoming
subscription renewal.

00:18:45.091 --> 00:18:47.159
In addition to all these checks,

00:18:47.159 --> 00:18:50.696
App Store provides a set
of features to prevent churn

00:18:50.696 --> 00:18:54.433
and retain subscribers,
which Bryan covered earlier.

00:18:54.433 --> 00:18:57.269
Let's begin by taking a look
at the best practices

00:18:57.269 --> 00:19:01.107
you need to consider when
implementing these features,

00:19:01.107 --> 00:19:04.310
starting with features
such as billing retry

00:19:04.310 --> 00:19:06.612
and billing problem message.

00:19:06.612 --> 00:19:09.815
These features are a platform
benefit and are enabled

00:19:09.815 --> 00:19:13.886
for you by default to prevent
involuntary churn.

00:19:13.886 --> 00:19:18.057
A subscription automatically
enters a billing retry period

00:19:18.057 --> 00:19:23.963
for 60 days when it fails
to renew due to payment issue.

00:19:23.963 --> 00:19:25.464
During this period,

00:19:25.464 --> 00:19:28.167
Apple attempts
to recover a subscription.

00:19:28.167 --> 00:19:30.136
And depending upon
the scenarios,

00:19:30.136 --> 00:19:32.938
the subscription status
may change.

00:19:32.938 --> 00:19:35.574
Let's cover scenarios
that you need to account for

00:19:35.574 --> 00:19:39.211
when a subscription
is in a billing retry period.

00:19:39.211 --> 00:19:42.681
Here, we have a customer whose
subscription failed to renew

00:19:42.681 --> 00:19:46.852
due to payment issue and is in
a billing retry period.

00:19:46.852 --> 00:19:49.688
To identify a subscription
in billing retry

00:19:49.688 --> 00:19:51.957
and to stop providing service,

00:19:51.957 --> 00:19:54.727
you can use the StoreKit
renewal state property

00:19:54.727 --> 00:19:56.796
inBillingRetryPeriod.

00:19:56.796 --> 00:19:59.432
This allows you to identify
subscription status

00:19:59.432 --> 00:20:04.203
and determine access to service
without a need for a server.

00:20:04.203 --> 00:20:08.474
However, to receive updated
subscription status in real time

00:20:08.474 --> 00:20:12.678
you can choose to enable
App Store server notifications.

00:20:12.678 --> 00:20:15.614
Once enabled, you'll receive
a notification type

00:20:15.614 --> 00:20:20.219
DID_FAIL_TO_RENEW when
a customer enters billing retry.

00:20:20.219 --> 00:20:24.090
Now, a subscription in billing
retry can be recovered anytime

00:20:24.090 --> 00:20:26.192
over the period of 60 days.

00:20:26.192 --> 00:20:27.560
And once recovered,

00:20:27.560 --> 00:20:31.130
you need to start providing
service to the customer.

00:20:31.130 --> 00:20:33.699
So in this scenario,
consider the customer

00:20:33.699 --> 00:20:36.368
has updated their payment method
on file,

00:20:36.368 --> 00:20:38.737
which renewed
their subscription.

00:20:38.737 --> 00:20:40.706
Once a subscription
is recovered,

00:20:40.706 --> 00:20:44.076
the renewal state will be
updated to subscribed.

00:20:44.076 --> 00:20:46.045
And you'll receive notification

00:20:46.045 --> 00:20:49.148
DID_RENEW with subtype
BILLING_RECOVERY

00:20:49.148 --> 00:20:51.917
indicating a successful renewal.

00:20:51.917 --> 00:20:53.519
Since the subscription
is recovered

00:20:53.519 --> 00:20:55.454
in the billing retry period,

00:20:55.454 --> 00:20:58.457
you'll have a new subscription
expiration date.

00:20:58.457 --> 00:21:01.627
Now, for a scenario
when the App Store reaches

00:21:01.627 --> 00:21:03.062
the billing retry limit

00:21:03.062 --> 00:21:05.731
and is unable to recover
the subscription,

00:21:05.731 --> 00:21:08.400
the subscription expires
and the renewal state

00:21:08.400 --> 00:21:10.703
will be updated to EXPIRED.

00:21:10.703 --> 00:21:14.507
And you'll receive App Store
server notification EXPIRED

00:21:14.507 --> 00:21:18.310
with subtype BILLING_RETRY.

00:21:18.310 --> 00:21:20.746
In addition,
some of the best practices

00:21:20.746 --> 00:21:22.781
you need to consider
for subscription

00:21:22.781 --> 00:21:25.885
in billing retry include:

00:21:25.885 --> 00:21:28.354
is to not merchandise
a customer if they are

00:21:28.354 --> 00:21:31.490
already in billing retry
since the App Store

00:21:31.490 --> 00:21:34.493
is in process of recovering
the subscription.

00:21:34.493 --> 00:21:39.632
This is also important if you
provide service cross platform.

00:21:39.632 --> 00:21:42.635
As Bryan mentioned earlier,
if the customer is recovered

00:21:42.635 --> 00:21:45.137
within 60 days,
they continue to accrue

00:21:45.137 --> 00:21:48.707
their days of paid service,
which can help you increase

00:21:48.707 --> 00:21:52.344
your proceeds to 85 percent.

00:21:52.344 --> 00:21:55.514
It's important to know
that the customer can opt out

00:21:55.514 --> 00:21:58.884
of billing retry by cancelling
the subscription.

00:21:58.884 --> 00:22:03.989
In this case, App Store stops
the billing retry attempts.

00:22:03.989 --> 00:22:08.260
A subscription can also enter
a billing retry when you remove

00:22:08.260 --> 00:22:10.796
an auto-renewal product
from sale.

00:22:10.796 --> 00:22:13.132
This subscription
is not recovered

00:22:13.132 --> 00:22:17.069
unless the auto-renewal product
is cleared for sale again

00:22:17.069 --> 00:22:19.271
within 60 days.

00:22:19.271 --> 00:22:22.641
You can use the StoreKit
property expirationReason

00:22:22.641 --> 00:22:25.311
and expirationIntent
on a server

00:22:25.311 --> 00:22:28.881
to identify subscriptions
in this state.

00:22:28.881 --> 00:22:31.884
And to summarize,
you can validate your app

00:22:31.884 --> 00:22:35.321
and server implementation using
App Store sandbox

00:22:35.321 --> 00:22:39.024
for a subscription
in the billing retry state.

00:22:39.024 --> 00:22:41.961
To further accelerate
the subscription recovery,

00:22:41.961 --> 00:22:44.430
App Store sends
a billing problem message

00:22:44.430 --> 00:22:49.101
to customers in app to help
them resolve the issue.

00:22:49.101 --> 00:22:51.604
You can choose to defer
the billing problem message

00:22:51.604 --> 00:22:54.273
for a customer if you
do not want to interrupt

00:22:54.273 --> 00:22:56.742
their specific app experience.

00:22:56.742 --> 00:22:58.177
To do so, you can use

00:22:58.177 --> 00:23:01.347
StoreKit Message API,
property .reason

00:23:01.347 --> 00:23:04.049
and value .billingIssue.

00:23:04.049 --> 00:23:09.054
For more information,
see WWDC23 sessions

00:23:09.054 --> 00:23:12.658
"What's New in StoreKit 2
and StoreKit Testing in Xcode"

00:23:12.658 --> 00:23:16.629
and "Explore testing
in-app purchases."

00:23:16.629 --> 00:23:18.764
Now, let's discuss the feature

00:23:18.764 --> 00:23:22.568
you as a developer can adopt
to handle the impact

00:23:22.568 --> 00:23:25.537
of involuntary
and voluntary churn.

00:23:25.537 --> 00:23:29.408
We'll start by looking into
the billing grace period.

00:23:29.408 --> 00:23:32.311
To enable grace period
configuration for your app,

00:23:32.311 --> 00:23:34.313
navigate to your
App Subscription section

00:23:34.313 --> 00:23:36.148
in App Store Connect.

00:23:36.148 --> 00:23:38.751
This will open up a dialog
which will allow you

00:23:38.751 --> 00:23:40.886
to configure
a billing grace period

00:23:40.886 --> 00:23:43.289
for your app.

00:23:43.289 --> 00:23:47.826
You can then select from
available grace period duration.

00:23:47.826 --> 00:23:50.329
You can also select
the eligibility

00:23:50.329 --> 00:23:54.133
for the billing grace period
and select the environment.

00:23:54.133 --> 00:23:57.269
You can choose to enable it
first in the sandbox

00:23:57.269 --> 00:24:01.774
or choose to enable it
in both sandbox and production.

00:24:01.774 --> 00:24:05.244
Your selected configuration will
be visible in App Store Connect

00:24:05.244 --> 00:24:07.513
once you confirm.

00:24:07.513 --> 00:24:10.316
Once enabled,
a billing grace period begins

00:24:10.316 --> 00:24:13.419
when subscription
fails to renew.

00:24:13.419 --> 00:24:15.554
Here are all
the billing retry scenarios

00:24:15.554 --> 00:24:18.157
that we previously discussed.

00:24:18.157 --> 00:24:20.426
When you enable
the billing grace period,

00:24:20.426 --> 00:24:22.494
you need to account
for additional scenarios

00:24:22.494 --> 00:24:25.097
in the subscription life cycle.

00:24:25.097 --> 00:24:28.767
Now, let's illustrate
the scenario for the customer

00:24:28.767 --> 00:24:32.638
after enabling
the billing grace period.

00:24:32.638 --> 00:24:35.474
Here, since the grace period
is enabled, the customer

00:24:35.474 --> 00:24:38.844
will retain full access
to your app's paid content

00:24:38.844 --> 00:24:42.514
while Apple attempts
to recover the subscription.

00:24:42.514 --> 00:24:45.317
To identify a subscription
in a billing grace period

00:24:45.317 --> 00:24:47.219
and to continue providing
service,

00:24:47.219 --> 00:24:50.923
the renewal state
will be updated to inGracePeriod

00:24:50.923 --> 00:24:54.493
and you'll receive notification
type DID_FAIL_TO_RENEW

00:24:54.493 --> 00:24:57.663
along with subtype
GRACE_PERIOD.

00:24:57.663 --> 00:25:00.699
A customer can recover
in the billing grace period

00:25:00.699 --> 00:25:03.969
with no interruption
to your paid days of service

00:25:03.969 --> 00:25:07.773
and the subscription expiration
date remains the same.

00:25:07.773 --> 00:25:10.509
Once the customer recovers,
the renewal state

00:25:10.509 --> 00:25:14.346
will be updated to subscribed,
and you'll receive notification

00:25:14.346 --> 00:25:18.717
DID_RENEW
with subtype BILLING_RECOVERY.

00:25:18.717 --> 00:25:22.621
A customer may not recover
in the billing grace period,

00:25:22.621 --> 00:25:25.391
after which you can stop
providing them the service

00:25:25.391 --> 00:25:29.061
as the customer enters
in billing retry.

00:25:29.061 --> 00:25:30.729
And the renewal state

00:25:30.729 --> 00:25:34.199
will be updated to
inBillingRetryPeriod

00:25:34.199 --> 00:25:39.304
and you'll receive notification
GRACE_PERIOD_EXPIRED.

00:25:39.304 --> 00:25:43.542
Similarly, these additional
use cases can also be validated

00:25:43.542 --> 00:25:47.246
in the App Store sandbox
for both your app and server,

00:25:47.246 --> 00:25:50.716
when you enable
a billing grace period.

00:25:50.716 --> 00:25:54.653
Lastly, now let's discuss
subscription offers.

00:25:54.653 --> 00:25:56.855
We'll take a look
at these two scenarios.

00:25:56.855 --> 00:25:59.391
And I'm going to cover things
you need to consider

00:25:59.391 --> 00:26:01.827
when implementing
a relevant subscription offer

00:26:01.827 --> 00:26:04.396
into your app and server.

00:26:04.396 --> 00:26:07.833
In this first scenario,
we try to reengage a customer

00:26:07.833 --> 00:26:09.768
who has turned off auto-renewal,

00:26:09.768 --> 00:26:12.104
but still has remaining
days of service

00:26:12.104 --> 00:26:13.906
to enjoy your app.

00:26:13.906 --> 00:26:16.341
Here we are using
promotional offers

00:26:16.341 --> 00:26:18.644
as our tool to create
subscription offers

00:26:18.644 --> 00:26:21.914
for the cohort
of existing subscribers.

00:26:21.914 --> 00:26:25.017
To identify subscription
in this cohort, you can use

00:26:25.017 --> 00:26:28.320
StoreKit "RenewalStateProperty
= subscribed"

00:26:28.320 --> 00:26:33.225
and renewal info property
"willAutoRenew = false."

00:26:33.225 --> 00:26:35.427
On the server side, you can use

00:26:35.427 --> 00:26:39.765
Subscription Status API
properties "status = 1"

00:26:39.765 --> 00:26:42.901
and "autoRenewStatus = 0."

00:26:42.901 --> 00:26:44.903
In addition, if you have

00:26:44.903 --> 00:26:47.439
App Store Server Notification
enabled,

00:26:47.439 --> 00:26:51.009
you'll receive notification type
DID_CHANGE_RENEWAL_STATUS

00:26:51.009 --> 00:26:53.278
and subtype
AUTO_RENEW_DISABLED

00:26:53.278 --> 00:26:56.114
in real time when the customer
turns off

00:26:56.114 --> 00:26:58.217
the subscription renewal.

00:26:58.217 --> 00:27:01.620
Now, some of the best practices
you need to consider

00:27:01.620 --> 00:27:03.922
when implementing
a promotional offer

00:27:03.922 --> 00:27:07.192
is to merchandise the offer
details to the customer

00:27:07.192 --> 00:27:10.762
using the promotionalOffers
property of StoreKit,

00:27:10.762 --> 00:27:14.700
instead of hardcoding
or fetching it from your server.

00:27:14.700 --> 00:27:18.670
For promotional offers, it's
important to send a signature

00:27:18.670 --> 00:27:20.205
at the time of purchase,

00:27:20.205 --> 00:27:24.142
for example, right before
merchandising offer.

00:27:24.142 --> 00:27:25.844
This will help you to ensure

00:27:25.844 --> 00:27:27.946
that you have
a recent time stamp

00:27:27.946 --> 00:27:31.483
and are using up-to-date
offer configuration.

00:27:31.483 --> 00:27:33.018
To streamline the process

00:27:33.018 --> 00:27:35.053
and to help you
generate signature,

00:27:35.053 --> 00:27:37.956
we have introduced
App Store Server Library,

00:27:37.956 --> 00:27:39.625
which provides you
with a framework

00:27:39.625 --> 00:27:42.928
to securely generate
signature on your server.

00:27:42.928 --> 00:27:45.464
In addition,
it helps you easily adopt

00:27:45.464 --> 00:27:49.368
App Store Server API
and notifications.

00:27:49.368 --> 00:27:53.038
To identify promotional offer
redemption, you can use

00:27:53.038 --> 00:27:58.644
JWSTransaction, which will
contain offerType value = 2

00:27:58.644 --> 00:28:00.879
and the offerIdentifier.

00:28:00.879 --> 00:28:03.749
The offerIdentifier
will contain the value

00:28:03.749 --> 00:28:06.251
which you have configured
in App Store Connect

00:28:06.251 --> 00:28:09.354
when setting up
the promotional offer.

00:28:09.354 --> 00:28:11.390
You'll receive
the notification type

00:28:11.390 --> 00:28:14.593
OFFER_REDEEMED in real time
when the customer redeems

00:28:14.593 --> 00:28:18.363
an offer along with
all applicable subtypes.

00:28:18.363 --> 00:28:19.431
For more information

00:28:19.431 --> 00:28:21.833
on promotional offer
best practices,

00:28:21.833 --> 00:28:26.371
watch the WWDC sessions
"Meet App Store Server Library"

00:28:26.371 --> 00:28:31.376
and "Subscription offers
best practices."

00:28:31.376 --> 00:28:34.346
Now, for a scenario when
a customer is churned

00:28:34.346 --> 00:28:37.049
and may not be
actively using your app.

00:28:37.049 --> 00:28:40.385
To identify subscribers
in this cohort,

00:28:40.385 --> 00:28:44.056
you can use StoreKit:
RenewalState property = expired

00:28:44.056 --> 00:28:49.094
and renewal info property:
willAutoRenew = false.

00:28:49.094 --> 00:28:50.896
On the server side, you can use

00:28:50.896 --> 00:28:54.999
Subscription Status
API properties "status = 2"

00:28:54.999 --> 00:28:58.704
and "autoRenewStatus = 0."

00:28:58.704 --> 00:29:00.639
On App Store Server
Notification,

00:29:00.639 --> 00:29:03.775
you'll receive notification type
EXPIRED

00:29:03.775 --> 00:29:08.246
and subtype VOLUNTARY
when the subscription expires.

00:29:08.246 --> 00:29:10.649
For this scenario,
we are using offer code

00:29:10.649 --> 00:29:14.820
as a tool to win back
the customer for two reasons.

00:29:14.820 --> 00:29:18.190
First, it will help you
merchandise and provide offers

00:29:18.190 --> 00:29:22.761
to customers within your app
or outside the app.

00:29:22.761 --> 00:29:25.564
Second, you can embed
the offer code deep link

00:29:25.564 --> 00:29:28.400
in push notification or emails

00:29:28.400 --> 00:29:32.771
to begin the offer redemption
flow and win back the customer.

00:29:32.771 --> 00:29:35.674
For more information
on offer code implementation

00:29:35.674 --> 00:29:38.644
and best practices,
watch our Tech Talks

00:29:38.644 --> 00:29:40.445
"Subscription Offer Codes"

00:29:40.445 --> 00:29:45.384
and "Optimize subscription
for success: acquisition."

00:29:45.384 --> 00:29:47.519
Now, the App Store provides you

00:29:47.519 --> 00:29:51.089
with all the helpful transaction
information on the device

00:29:51.089 --> 00:29:55.727
and server that enables you
to entitle customers accurately

00:29:55.727 --> 00:29:57.729
and provide service.

00:29:57.729 --> 00:30:00.799
Expanding on that,
we introduce new properties

00:30:00.799 --> 00:30:03.568
in transaction information
to help you know

00:30:03.568 --> 00:30:06.938
your App Store product
and offer configuration,

00:30:06.938 --> 00:30:11.743
which includes properties
such as price, currency,

00:30:11.743 --> 00:30:13.979
and offerDiscountType.

00:30:13.979 --> 00:30:16.214
You can leverage
these properties to understand

00:30:16.214 --> 00:30:19.651
your offer redemption details.

00:30:19.651 --> 00:30:21.253
You can also leverage

00:30:21.253 --> 00:30:23.588
the recentSubscriptionStartDate
property

00:30:23.588 --> 00:30:26.892
to calculate the total period
the customer was subscribed

00:30:26.892 --> 00:30:29.127
to a subscription.

00:30:29.127 --> 00:30:32.731
This will help you get an idea
about customer loyalty

00:30:32.731 --> 00:30:36.568
and make the decision
to provide subscription offer.

00:30:36.568 --> 00:30:38.804
Let's take an example.

00:30:38.804 --> 00:30:43.508
A customer purchased a monthly
subscription on January 25

00:30:43.508 --> 00:30:47.379
and continuously renewed
over a monthly period.

00:30:47.379 --> 00:30:50.949
However, on December 5,
the customer decided

00:30:50.949 --> 00:30:54.352
to disable the subscription
renewal, which may result

00:30:54.352 --> 00:30:57.789
in the subscription getting
churned on December 25.

00:30:57.789 --> 00:31:01.359
We'll consider this period
as a safe period.

00:31:01.359 --> 00:31:04.830
During the period, you can make
a proactive decision

00:31:04.830 --> 00:31:07.866
to present a subscription offer
to the customer

00:31:07.866 --> 00:31:10.969
based on their length
of the subscribed period.

00:31:10.969 --> 00:31:13.605
If the customer chooses
to accept the offer,

00:31:13.605 --> 00:31:16.942
they will renew
on December 25.

00:31:16.942 --> 00:31:19.978
To summarize,
Apple initiated features

00:31:19.978 --> 00:31:22.948
like billing retry
and billing problem message --

00:31:22.948 --> 00:31:25.350
and in addition,
adopting features

00:31:25.350 --> 00:31:28.887
like billing grace period
and subscription offers --

00:31:28.887 --> 00:31:33.825
will help you prevent churn and
retain subscribers for your app.

00:31:33.825 --> 00:31:35.727
For more information
on getting started

00:31:35.727 --> 00:31:40.098
with subscriptions or details
about our subscription tools,

00:31:40.098 --> 00:31:42.934
you can find auto-enable
subscription documentation

00:31:42.934 --> 00:31:45.637
on developer.apple.com.

00:31:45.637 --> 00:31:48.840
This documentation
contains all resources

00:31:48.840 --> 00:31:53.311
and applicable links
for your reference in one place.