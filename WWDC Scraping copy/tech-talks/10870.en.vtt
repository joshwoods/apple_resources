WEBVTT

00:00:00.420 --> 00:00:04.080
Hi, my name is Mike and I'm a senior
consulting engineer at Apple supporting

00:00:04.080 --> 00:00:05.900
enterprise and education.

00:00:05.900 --> 00:00:09.040
I'm joined by my colleague Danielle from
Enterprise Product Marketing,

00:00:09.050 --> 00:00:11.540
and we're really excited to take
you through a technical deep

00:00:11.540 --> 00:00:14.670
dive of deploying macOS Big Sur.

00:00:15.120 --> 00:00:18.030
macOS Big Sur is our latest
operating system released last

00:00:18.130 --> 00:00:21.270
fall for our Mac computers,
and it brings so many new features

00:00:21.340 --> 00:00:25.100
that we decided to increment
the macOS version to version 11.

00:00:25.210 --> 00:00:28.160
It features an all-new design,
updates to apps you love

00:00:28.160 --> 00:00:31.440
like messages and maps,
includes enhanced translation features

00:00:31.440 --> 00:00:35.030
and privacy protections in Safari,
and so much more.

00:00:35.160 --> 00:00:40.590
Today, we'll focus primarily on platform
changes that affect IT organizations.

00:00:40.870 --> 00:00:44.600
In this session, I'll provide an overview
of those platform changes.

00:00:44.690 --> 00:00:47.220
Danielle will provide a deeper
focus on our moving of our

00:00:47.220 --> 00:00:50.770
Mac computers to custom Apple Silicon,
the considerations for

00:00:50.770 --> 00:00:52.840
deployment with that transition.

00:00:52.920 --> 00:00:55.480
And then we'll both wrap up
with specific workflow guidance,

00:00:55.530 --> 00:00:59.360
including recommendations for
one-to-one and shared deployments.

00:00:59.420 --> 00:01:02.830
Additional resources for this session
can be found alongside the recording

00:01:03.190 --> 00:01:05.960
and will be covered briefly at the end.

00:01:06.010 --> 00:01:08.890
So let's get started
with platform changes.

00:01:09.430 --> 00:01:13.000
Auto-advance is a feature we introduced
a few years ago for Apple TV that

00:01:13.010 --> 00:01:16.320
makes it super easy to set them
up at scale by allowing them to

00:01:16.320 --> 00:01:19.980
be automatically configured simply
by connecting power and ethernet.

00:01:20.130 --> 00:01:24.480
It's been very successful and we
brought it to the Mac in macOS Big Sur.

00:01:24.700 --> 00:01:28.650
Here's a quick demonstration of it in
action where you can see just how quickly

00:01:28.650 --> 00:01:30.800
we reached the macOS login window.

00:01:33.370 --> 00:01:36.340
Once a device enrollment profile
is assigned to the device using

00:01:36.340 --> 00:01:39.530
MDM and Apple School Manager or
Apple Business Manager,

00:01:39.530 --> 00:01:43.940
simply plug in power, connect ethernet,
and then power it on.

00:01:44.010 --> 00:01:46.620
You can pre-select language
and region using MDM,

00:01:46.660 --> 00:01:50.080
and all of the setup screens
are automatically advanced.

00:01:50.150 --> 00:01:54.890
Your network must support DHCP and must
not require a client proxy configuration

00:01:54.950 --> 00:01:56.910
for this to work out of the box.

00:01:57.260 --> 00:01:59.700
Once the process starts,
after about 30 seconds

00:01:59.700 --> 00:02:01.880
of no user interaction,
the Mac will quickly

00:02:01.880 --> 00:02:03.640
reach the login window.

00:02:03.690 --> 00:02:08.040
Because this workflow is ideal for shared
deployments or unattended configurations,

00:02:08.100 --> 00:02:11.270
it's assumed that user accounts,
besides the IT administrator account

00:02:11.660 --> 00:02:15.170
that's often created using MDM,
will either come from a directory

00:02:15.170 --> 00:02:18.760
service or be provisioned using
some additional helper tool.

00:02:18.830 --> 00:02:21.600
If you choose to use Auto Advance in
a one-to-one deployment,

00:02:21.640 --> 00:02:24.730
you'll need to consider how the
account for the initial user who

00:02:24.840 --> 00:02:26.460
uses the Mac will be created.

00:02:26.520 --> 00:02:29.000
Auto Advance is the fastest
way to set up a Mac,

00:02:29.060 --> 00:02:31.600
and combined with StartOS Install,
which I'll cover later,

00:02:31.670 --> 00:02:34.900
is a powerful combination that
allows for a completely automated,

00:02:34.950 --> 00:02:38.790
and even remote,
upgrade and reinstall of macOS.

00:02:39.740 --> 00:02:41.560
Over the years,
we've had a variety of different

00:02:41.560 --> 00:02:45.140
types of MDM enrollment on macOS,
including device enrollment,

00:02:45.220 --> 00:02:48.300
user-approved MDM enrollment,
and automated device enrollments,

00:02:48.300 --> 00:02:51.210
which happened as a result of
enrolling using Apple School Manager or

00:02:51.210 --> 00:02:52.460
Apple Business Manager.

00:02:52.460 --> 00:02:55.520
Each type of enrollment allowed
for managing or restricting

00:02:55.520 --> 00:02:59.230
more features respectively,
with automated device enrollment allowing

00:02:59.230 --> 00:03:02.920
for the strongest levels of device
management as it enabled supervision.

00:03:03.950 --> 00:03:07.350
In macOS Big Sur, user-approved MDM is
equivalent to supervision,

00:03:07.350 --> 00:03:11.300
greatly simplifying the considerations
for device enrollment on macOS.

00:03:12.800 --> 00:03:16.410
If a user manually enrolls their
Mac using a downloaded enrollment profile

00:03:16.500 --> 00:03:20.700
and installs it using system preferences,
last year in macOS Catalina,

00:03:20.760 --> 00:03:23.300
that resulted in user-approved MDM.

00:03:23.300 --> 00:03:26.240
In macOS Big Sur,
it's simply called a device enrollment

00:03:26.240 --> 00:03:30.520
and results in supervision to allow
for full management of the device.

00:03:30.680 --> 00:03:34.410
will also automatically convert all
existing user-approved MDM enrollments

00:03:34.460 --> 00:03:37.100
to supervised upon upgrade to Big Sur.

00:03:37.180 --> 00:03:39.700
User-approved MDM is a
consideration of the past,

00:03:39.750 --> 00:03:43.140
and we hope this will greatly
help your deployment workflows.

00:03:43.230 --> 00:03:47.060
There is a small caveat to supervision
for Mac computers with Apple Silicon,

00:03:47.140 --> 00:03:49.730
but Danielle will discuss that later.

00:03:51.070 --> 00:03:53.990
macOS Big Sur brings managed
apps to the Mac for both device

00:03:53.990 --> 00:03:56.080
enrollments and user enrollments.

00:03:56.140 --> 00:03:59.780
The primary benefit is that MDM can
now remove an app it has installed,

00:03:59.830 --> 00:04:03.790
either by choice or
automatically upon unenrollment.

00:04:04.170 --> 00:04:08.040
iOS-style managed app configuration
and feedback are supported as well.

00:04:08.130 --> 00:04:11.860
And while custom configuration profiles
with custom preferences have been

00:04:11.860 --> 00:04:15.540
supported on macOS for a long time,
managed app configuration allows

00:04:15.640 --> 00:04:18.690
for use with user enrollment,
and in most cases allows for a

00:04:18.690 --> 00:04:23.480
more tightly coupled configuration
within common MDM platforms.

00:04:23.560 --> 00:04:27.160
For device enrollments, MDM can convert a
non-managed app to managed,

00:04:27.210 --> 00:04:31.870
but converting from unmanaged to managed
is not supported for user enrollments.

00:04:32.230 --> 00:04:34.640
There are some requirements
for managed apps on macOS.

00:04:34.650 --> 00:04:38.470
The package installing the application
must only install a single .appbundle

00:04:38.560 --> 00:04:41.910
file into the applications directory,
and the application can be

00:04:41.910 --> 00:04:45.320
removed if it hasn't been moved
from the applications directory.

00:04:45.370 --> 00:04:48.550
Because apps installed from apps and
books from Apple School Manager or

00:04:48.550 --> 00:04:52.680
Apple Business Manager install into
the applications directory by default,

00:04:52.710 --> 00:04:55.960
this makes them perfect
candidates to be managed apps.

00:04:55.980 --> 00:04:59.540
Note that data separation and managed
open-end in the context of managed apps

00:04:59.660 --> 00:05:02.980
are currently unique to iOS and iPadOS.

00:05:03.500 --> 00:05:06.630
Custom apps let you meet the
unique needs of your organization,

00:05:06.630 --> 00:05:09.400
and now you can distribute
custom Mac apps.

00:05:09.430 --> 00:05:11.550
Custom apps can provide
a tailored look and feel,

00:05:11.750 --> 00:05:15.190
security features for sensitive data,
special functionality for unique

00:05:15.310 --> 00:05:18.340
business or school workflows,
and much more.

00:05:18.360 --> 00:05:20.830
They're then made available
privately to your organization

00:05:21.200 --> 00:05:24.160
through Apple Business Manager or
Apple School Manager so that you

00:05:24.160 --> 00:05:28.100
can then distribute them to your
customers or users internally.

00:05:28.130 --> 00:05:30.660
With macOS Big Sur,
a Mac Pro 2019 or later

00:05:30.670 --> 00:05:32.600
supports lights-out management.

00:05:32.630 --> 00:05:35.300
This means a Mac Pro can be started up,
shut down,

00:05:35.310 --> 00:05:38.430
and rebooted remotely if needed,
meaning no more physical trips to

00:05:38.430 --> 00:05:41.240
the data center for remedial tasks.

00:05:41.260 --> 00:05:45.080
An MDM-enrolled Mac gets designated
as a lights-out management controller,

00:05:45.120 --> 00:05:47.610
and when MDM wants to perform
a lights-out management

00:05:47.610 --> 00:05:51.690
action on a capable device,
MDM sends a command to the controller,

00:05:51.690 --> 00:05:54.180
and then the controller, in turn,
sends the command to the

00:05:54.180 --> 00:05:58.550
Mac Pro using a secured and
proprietary protocol over IPv6 that

00:05:58.550 --> 00:06:01.200
leverages industry-standard PKI.

00:06:01.230 --> 00:06:01.700
Lights-out management requires Mac Pro to
be able to run Macs on a computer,

00:06:01.700 --> 00:06:03.700
and the same is true for macOS Big Sur.

00:06:03.700 --> 00:06:05.110
The same is true for macOS Big Sur,
and your Mac Pro computers must

00:06:05.110 --> 00:06:08.290
have a network connection on the
same subnet as your controller

00:06:08.690 --> 00:06:11.180
Mac over IPv6 using Ethernet.

00:06:11.200 --> 00:06:13.670
You also need to ensure that you
have the lights-out management

00:06:13.670 --> 00:06:17.290
payload and a payload configuring
a certificate with an RSA key,

00:06:17.290 --> 00:06:20.570
such as SCEP, deployed to your controller
and Mac Pro computers

00:06:20.570 --> 00:06:21.880
that you wish to manage.

00:06:21.900 --> 00:06:26.760
Network interface bonding is supported
on Mac Pro computers you wish to manage.

00:06:27.710 --> 00:06:29.060
Here's a quick illustration.

00:06:29.100 --> 00:06:31.420
As an MDM admin,
you send a lights out management

00:06:31.490 --> 00:06:35.010
command from your MDM server and the
controller Mac receives the command

00:06:35.010 --> 00:06:39.370
and then distributes it to each of the
Mac Pro computers that you've targeted.

00:06:40.490 --> 00:06:43.500
macOS Catalina introduced
a read-only system volume.

00:06:43.570 --> 00:06:47.120
macOS Big Sur takes it a step further
by introducing a cryptographically

00:06:47.130 --> 00:06:50.020
signed system volume to protect
against malicious tampering.

00:06:50.200 --> 00:06:54.300
As a part of this, macOS actually boots
from an APFS snapshot.

00:06:54.600 --> 00:06:58.230
The signed system volume also allows
for easier updating of the system

00:06:58.340 --> 00:07:02.280
as the update process is now much
more similar to iOS and iPadOS.

00:07:02.760 --> 00:07:05.870
Because the system volume is
cryptographically validated,

00:07:05.870 --> 00:07:09.960
FileVault works a bit differently in that
it no longer encrypts the system volume.

00:07:10.430 --> 00:07:13.850
However, FileVault can still be used to
encrypt user data on the data volume.

00:07:14.170 --> 00:07:17.950
The general impact of this change
for IT should be minimal to none,

00:07:17.950 --> 00:07:20.840
but it's an important platform change
that we wanted you to be aware of.

00:07:23.160 --> 00:07:25.980
While interacting with secure token
at scale was made significantly

00:07:25.980 --> 00:07:29.600
better in macOS Catalina with the
introduction of the Bootstrap token,

00:07:29.670 --> 00:07:33.040
we've expanded how it can be used in
macOS Big Sur so that it can be even

00:07:33.040 --> 00:07:35.340
more useful to your organization.

00:07:35.410 --> 00:07:38.960
A Bootstrap token enables macOS
to grant secure token to accounts

00:07:39.340 --> 00:07:41.950
without needing to authenticate
separately with an already secure

00:07:41.950 --> 00:07:44.420
token-enabled admin password.

00:07:44.470 --> 00:07:46.980
In macOS Big Sur,
a Bootstrap token will grant

00:07:46.980 --> 00:07:50.220
secure token to any user on
a supervised Mac by default,

00:07:50.290 --> 00:07:52.460
including local user accounts.

00:07:52.540 --> 00:07:55.070
Previously,
the automatic granting of secure token

00:07:55.070 --> 00:08:00.260
was restricted to just mobile accounts
and the MDM-created IT admin account.

00:08:00.310 --> 00:08:04.460
Also, an important change to call out is
one that was made in macOS Catalina

00:08:04.460 --> 00:08:07.480
10.15.4 for that release in newer.

00:08:07.510 --> 00:08:10.900
If your MDM supports the Bootstrap
token feature and a Bootstrap

00:08:10.960 --> 00:08:14.840
token has not yet been generated
by macOS and stored with MDM,

00:08:14.880 --> 00:08:19.150
macOS will try to generate one and
store it any time any currently secure

00:08:19.230 --> 00:08:21.820
token-enabled user logs into the Mac.

00:08:21.820 --> 00:08:24.340
In most cases,
this means that a unique per-Mac

00:08:24.340 --> 00:08:27.660
Bootstrap token should be available
for use by Mac computers in your

00:08:27.660 --> 00:08:31.300
organization without additional
scripting being required.

00:08:31.300 --> 00:08:34.470
The Bootstrap token also enables
additional management features on

00:08:34.470 --> 00:08:38.490
Mac computers with Apple Silicon,
and Danielle will cover those later.

00:08:39.820 --> 00:08:44.020
System extensions introduced in macOS
Catalina are APIs to allow developers

00:08:44.020 --> 00:08:47.540
of apps for endpoint security,
networking, file providers,

00:08:47.540 --> 00:08:50.940
and printers and scanners to build apps
that are outside of the system kernel.

00:08:50.940 --> 00:08:54.360
Vendors who use kernel extensions
or KEXT should instead use these

00:08:54.360 --> 00:08:57.720
new system extensions to provide
existing and new functionality

00:08:57.720 --> 00:08:59.700
while keeping the system secure.

00:08:59.700 --> 00:09:02.660
As IT administrators,
we know you use device drivers,

00:09:02.660 --> 00:09:05.740
file providers, networking,
and security apps that may

00:09:05.760 --> 00:09:07.900
still require kernel extensions.

00:09:08.620 --> 00:09:11.420
We encourage you to talk with your
vendors about getting them to move

00:09:11.430 --> 00:09:14.800
to newer versions that are built on
system extensions as soon as possible.

00:09:14.940 --> 00:09:17.910
In some cases,
that may mean you need to switch vendors.

00:09:18.270 --> 00:09:20.880
These newer versions greatly
reduce the possibility of

00:09:20.880 --> 00:09:24.130
kernel panics on Mac computers
because they run in user space,

00:09:24.500 --> 00:09:27.810
reduce the attack surface,
and are manageable using MDM,

00:09:28.010 --> 00:09:32.370
just like how kernel extensions have been
able to be handled for a number of years.

00:09:33.440 --> 00:09:35.740
Regarding their older
equivalents kernel extensions,

00:09:35.760 --> 00:09:39.070
new in macOS Big Sur is that when
some kernel extensions that should be

00:09:39.100 --> 00:09:43.430
updated to use system extensions or
driver kit are attempted to be loaded,

00:09:43.430 --> 00:09:46.790
an alert will warn users that the
kecks need to be updated and they

00:09:46.860 --> 00:09:49.240
will not load on macOS Big Sur.

00:09:49.300 --> 00:09:52.760
There is an exception, however,
for kecks that have been allowed by MDM.

00:09:52.800 --> 00:09:56.420
This is designed to help support the move
to system extensions while also balancing

00:09:56.420 --> 00:09:59.310
the needs of large organizations.

00:09:59.780 --> 00:10:03.030
By default in macOS Big Sur,
installing a kernel extension and

00:10:03.030 --> 00:10:07.140
allowing it to load requires a
user-initiated action by an administrator

00:10:07.140 --> 00:10:08.840
to rebuild the kernel cache.

00:10:08.920 --> 00:10:12.820
We know many organizations don't allow
their users to be administrators,

00:10:12.840 --> 00:10:16.330
so macOS Big Sur provides two
options for organizations to enable

00:10:16.380 --> 00:10:20.490
kecks to load without requiring
administrative credentials.

00:10:21.710 --> 00:10:25.800
The first option leverages MDM to restart
the device and rebuild the kernel cache,

00:10:25.800 --> 00:10:28.940
instead of relying on a user
to be involved in the process.

00:10:29.030 --> 00:10:33.180
There are three options on the restart
device MDM command to accommodate this,

00:10:33.270 --> 00:10:36.510
one of which is new in macOS 11.3.

00:10:36.770 --> 00:10:40.510
The first option, Rebuild Kernel Cache,
tells the Mac to rebuild

00:10:40.510 --> 00:10:42.140
its cache and reboot.

00:10:42.180 --> 00:10:46.010
The optional accompanying Cache
Path option allows for MDM to ask

00:10:46.100 --> 00:10:49.620
specific Caches to be loaded that
haven't been discovered by the system yet

00:10:49.800 --> 00:10:51.940
through an app's attempt to load them.

00:10:51.990 --> 00:10:55.860
This allows MDM to install an app and
load the Caches without the user having

00:10:55.860 --> 00:11:00.500
to launch the app first before the
reboot that rebuilds the Kernel Cache.

00:11:00.770 --> 00:11:04.250
New in macOS 11.3,
the notify user option will display a

00:11:04.250 --> 00:11:08.840
notification to the user and includes a
restart now option in the notification.

00:11:08.900 --> 00:11:11.770
When clicked, this performs a graceful
restart of macOS,

00:11:11.770 --> 00:11:14.780
like going to the Apple menu
and choosing restart.

00:11:14.840 --> 00:11:17.920
It's worth noting that notify
user can be used with the restart

00:11:17.920 --> 00:11:21.520
device MDM command outside of
the context of kernel extensions,

00:11:21.560 --> 00:11:24.360
and therefore without the
KEXT related option shown here,

00:11:24.430 --> 00:11:27.320
but it's especially helpful
when they're combined.

00:11:28.110 --> 00:11:32.260
The second option is to include the new
key "Allow non-admin user approvals"

00:11:32.360 --> 00:11:37.000
set to true in the System Policy Kernel
Extensions payload from MDM.

00:11:37.070 --> 00:11:39.660
When using this key,
a standard user can manually complete

00:11:39.660 --> 00:11:44.070
the installation of Kecks by rebooting
the Mac from within System Preferences,

00:11:44.070 --> 00:11:47.140
Security and Privacy,
without having to provide

00:11:47.140 --> 00:11:49.050
administrator credentials.

00:11:49.830 --> 00:11:53.260
To increase data security and prevent
unintended profile installation,

00:11:53.310 --> 00:11:56.000
when a profile is downloaded
before it can be installed,

00:11:56.040 --> 00:11:59.330
an alert is shown to the user indicating
that they need to finish the profile

00:11:59.330 --> 00:12:01.010
installation in System Preferences.

00:12:01.140 --> 00:12:05.250
This is similar to what we
introduced in iOS and iPadOS 13,

00:12:05.450 --> 00:12:09.640
and is true for both MDM enrollment
profiles and configuration profiles.

00:12:10.660 --> 00:12:13.820
To install a profile or perform
a device enrollment into MDM,

00:12:13.820 --> 00:12:16.480
the user must manually
launch System Preferences,

00:12:17.000 --> 00:12:19.840
navigate to the Profiles Preference pane,
and select the profile.

00:12:19.980 --> 00:12:22.610
At that point,
the user will see a window describing

00:12:22.610 --> 00:12:26.050
what the profile does and can
choose to install it or ignore it.

00:12:26.230 --> 00:12:29.080
If no action is taken by the
user roughly eight minutes

00:12:29.190 --> 00:12:32.460
after the profile is downloaded,
the profile is automatically

00:12:32.460 --> 00:12:34.100
removed from System Preferences.

00:12:34.410 --> 00:12:37.150
These additional steps are important
to consider in your deployment

00:12:37.250 --> 00:12:38.820
workflows and documentation.

00:12:40.990 --> 00:12:43.580
We continue to make security
enhancements that impact several

00:12:43.580 --> 00:12:47.900
command line tools IT teams may
be using in deployment workflows.

00:12:47.980 --> 00:12:50.240
With macOS Big Sur,
it's no longer possible to

00:12:50.270 --> 00:12:53.680
install profiles using the
profiles command line tool.

00:12:53.740 --> 00:12:58.560
All other features of the tool remain the
same and continue to work as expected.

00:12:58.860 --> 00:13:00.880
Additionally,
the Network Setup command line tool

00:13:00.970 --> 00:13:04.660
doesn't allow standard user accounts
to change network settings without an

00:13:04.660 --> 00:13:06.940
administrator username and password.

00:13:07.020 --> 00:13:10.040
Standard user accounts can
still turn Wi-Fi on and off,

00:13:10.130 --> 00:13:14.820
change the Wi-Fi network name or SSID,
and read all network settings.

00:13:14.900 --> 00:13:18.120
This brings the Network Setup command
line tool into parity with what a

00:13:18.170 --> 00:13:21.480
standard user can control in either
the network pane of system preferences

00:13:21.930 --> 00:13:24.710
or the Wi-Fi menu in the menu bar.

00:13:25.020 --> 00:13:28.090
macOS Big Sur also prevents the
use of the security command line

00:13:28.110 --> 00:13:31.640
tool to add certificates to the
system keychain without interactive

00:13:31.680 --> 00:13:33.290
authorization from an admin user.

00:13:33.600 --> 00:13:37.070
This means it's no longer possible
to trust a root certificate across

00:13:37.070 --> 00:13:40.780
the entire system without either
an admin explicitly authorizing it

00:13:40.980 --> 00:13:43.860
or it being installed using MDM.

00:13:45.430 --> 00:13:48.740
Many changes were introduced in the areas
of software updates in macOS Big Sur.

00:13:48.740 --> 00:13:52.500
First, as I mentioned previously,
macOS has adopted an update

00:13:52.560 --> 00:13:54.370
mechanism similar to that of iOS.

00:13:54.430 --> 00:13:58.330
This allows the updater to make changes
to the system before you ever need to

00:13:58.340 --> 00:14:00.170
reboot when doing a software update.

00:14:00.170 --> 00:14:03.060
This significantly reduces
the downtime of a system while

00:14:03.060 --> 00:14:06.870
installing a software update,
which provides a better user experience.

00:14:06.870 --> 00:14:10.460
You can specify deferring major
upgrades and minor security,

00:14:10.460 --> 00:14:13.300
beta, and app updates for
macOS for up to 90 days.

00:14:13.300 --> 00:14:17.850
New in macOS 11.3 is that
major macOS upgrades,

00:14:18.140 --> 00:14:21.050
minor macOS updates,
and non-OS updates can each be deferred

00:14:21.050 --> 00:14:24.450
with separate deferral windows,
meaning three different

00:14:24.470 --> 00:14:27.780
possible deferral windows,
each up to 90 days.

00:14:28.330 --> 00:14:30.700
When sending the schedule
OS update MDM command to

00:14:30.760 --> 00:14:34.130
install a macOS software update,
MDM can force the installation

00:14:34.130 --> 00:14:37.920
of the update and,
if necessary, force a restart.

00:14:38.280 --> 00:14:40.440
If you've been using the
Software Update command line tool

00:14:40.440 --> 00:14:44.440
to ignore specific updates or set
a custom software update catalog,

00:14:44.510 --> 00:14:47.400
note that those flags have
been removed in macOS Big Sur,

00:14:47.480 --> 00:14:51.310
and managing software updates
using MDM is the way forward.

00:14:52.310 --> 00:14:54.680
On macOS,
there are two types of services within

00:14:54.680 --> 00:14:58.300
privacy preferences policy control:
user and system.

00:14:58.340 --> 00:15:02.970
User services are granted by individual
users and grant only access to processes

00:15:03.030 --> 00:15:05.040
operating within that user's session.

00:15:05.100 --> 00:15:08.480
For example,
access to a user's camera or microphone.

00:15:08.500 --> 00:15:11.390
System services, in contrast,
may only be granted

00:15:11.420 --> 00:15:14.420
access by administrators,
but authorize the service

00:15:14.460 --> 00:15:16.220
for every user on the system.

00:15:16.240 --> 00:15:18.980
Some services are especially
privacy sensitive,

00:15:19.020 --> 00:15:23.020
such as camera, microphone,
screen capture, and listen event.

00:15:23.060 --> 00:15:28.100
While they can be configured using MDM,
they can only be denied and not allowed.

00:15:28.120 --> 00:15:31.020
In macOS Catalina,
standard users were able to approve

00:15:31.020 --> 00:15:34.070
their own apps for screen capture,
but in macOS Big Sur,

00:15:34.410 --> 00:15:36.640
admin authentication is required.

00:15:36.670 --> 00:15:40.750
However, in macOS Big Sur,
MDM can specify apps that standard

00:15:40.750 --> 00:15:44.680
users can then approve themselves for
both screen capture and listen event.

00:15:44.710 --> 00:15:48.580
This helps ensure a balance between
the need to configure devices at scale,

00:15:48.620 --> 00:15:52.390
while still empowering users to make
informed and conscious decisions about

00:15:52.440 --> 00:15:57.570
apps or services that need to access
particularly privacy sensitive services.

00:15:58.420 --> 00:16:02.200
The Authorization Key can accept a
value of "Allow standard user to set

00:16:02.200 --> 00:16:05.840
system service for screen capture
and listen event service entries to

00:16:05.840 --> 00:16:09.630
enable this feature." After it's set,
the Security and Privacy Preference

00:16:09.740 --> 00:16:13.790
pane makes a clear visual distinction
in the table list for which apps can

00:16:13.870 --> 00:16:15.930
be approved by the standard user.

00:16:16.060 --> 00:16:19.060
The Authorization Key replaces
the previous "Allowed" key,

00:16:19.060 --> 00:16:22.820
which was only Booleaned true and false,
but we support both keys for

00:16:22.820 --> 00:16:27.090
other service types in macOS
Big Sur to help ease the transition.

00:16:27.660 --> 00:16:30.040
For machines that are
upgrading to macOS Big Sur,

00:16:30.160 --> 00:16:33.170
any entries that were approved in
previous versions of macOS will

00:16:33.170 --> 00:16:35.690
remain approved upon upgrade.

00:16:36.730 --> 00:16:39.440
macOS Big Sur includes a number
of new features and enhancements

00:16:39.440 --> 00:16:42.860
for SSO extensions in the
built-in Kerberos extension.

00:16:43.000 --> 00:16:45.780
First,
MDM payloads configuring SSO extensions

00:16:45.780 --> 00:16:49.200
can now be installed on the user channel,
and settings configured on the user

00:16:49.200 --> 00:16:53.620
channel take priority over any settings
configured on the device channel.

00:16:54.160 --> 00:16:56.470
Improvements were made
for how Per App VPN is

00:16:56.470 --> 00:17:00.250
handled for SSO extensions,
including that associated domains

00:17:00.390 --> 00:17:02.190
now work with Per App VPN.

00:17:02.610 --> 00:17:05.760
SSO extensions now also receive more
information about the calling app

00:17:05.880 --> 00:17:08.320
that's trying to use the extension.

00:17:08.600 --> 00:17:11.160
There's a new profile
removal operation too.

00:17:11.240 --> 00:17:15.180
When an MDM profile configuring an
SSO extension is removed from the device,

00:17:15.250 --> 00:17:18.100
extensions now have a short
window of time to sign out,

00:17:18.230 --> 00:17:22.160
clean up files or keychain entries,
revoke tokens, or perform other cleanup

00:17:22.210 --> 00:17:24.320
actions as necessary.

00:17:24.410 --> 00:17:27.140
For more detailed information
on SSO extensions and

00:17:27.140 --> 00:17:30.090
improvements in macOS Big Sur,
please watch the Leverage

00:17:30.170 --> 00:17:34.260
Enterprise Identity and
Authentication session from WWDC 2020.

00:17:36.140 --> 00:17:39.560
The built-in Kerberos extension also
includes a number of new features.

00:17:39.600 --> 00:17:42.280
If you're not familiar with the
built-in Kerberos extension,

00:17:42.320 --> 00:17:45.450
it offers a way to provide directory
connectivity to an on-premise

00:17:45.450 --> 00:17:48.630
active directory environment
without actually needing to bind a

00:17:48.630 --> 00:17:51.280
Mac computer itself to the directory.

00:17:51.310 --> 00:17:54.270
It offers a number of features
like password synchronization and

00:17:54.270 --> 00:17:56.660
automatic Kerberos ticket management.

00:17:56.710 --> 00:18:00.090
We built the Kerberos extension
into the operating systems in macOS

00:18:00.090 --> 00:18:04.080
Catalina and iOS and iPadOS 13,
and it is the replacement for

00:18:04.080 --> 00:18:06.620
Enterprise Connect going forward.

00:18:06.890 --> 00:18:09.780
We now support user channel
profile delivery for configuring

00:18:09.830 --> 00:18:11.200
the Kerberos extension.

00:18:11.280 --> 00:18:14.640
This improvement can allow for user-level
certificate identities for use with

00:18:14.640 --> 00:18:17.800
certificate-based Kerberos or PK-INIT.

00:18:18.060 --> 00:18:20.680
We also now support configuring
the Kerberos extension for

00:18:20.680 --> 00:18:23.100
app-to-per-app VPN on macOS.

00:18:23.170 --> 00:18:26.890
The Kerberos menu extra and the
app SSO agent must be added to the

00:18:26.900 --> 00:18:31.050
app-to-per-app VPN payload to take
advantage of this improvement.

00:18:31.760 --> 00:18:35.090
There's now more control for IT over
the initial login experience,

00:18:35.090 --> 00:18:39.940
including a new MDM configuration option
to delay the first login prompt and a

00:18:39.940 --> 00:18:44.290
new flag on the App SSO command line tool
to manually trigger the initial login

00:18:44.300 --> 00:18:48.460
prompt for when it's most convenient
during your deployment process.

00:18:48.490 --> 00:18:51.600
The menu extra now more accurately
represents the state of the

00:18:51.600 --> 00:18:53.650
extension to the user and,
when clicked,

00:18:53.850 --> 00:18:58.250
provides additional information about
the state of the network and credential.

00:18:58.670 --> 00:19:01.880
And lastly, the user interface is
now customizable too,

00:19:01.880 --> 00:19:04.520
including the ability to set
a custom identity name as

00:19:04.520 --> 00:19:06.910
well as custom help text.

00:19:07.220 --> 00:19:10.100
Here's an example of the identity
name being customized along

00:19:10.100 --> 00:19:12.470
with the custom help text.

00:19:14.320 --> 00:19:17.340
Regarding Enterprise Connect,
macOS Big Sur is the last release

00:19:17.340 --> 00:19:19.740
to support Enterprise Connect.

00:19:19.870 --> 00:19:23.280
Please test your workflows and deployment
methodologies using the new Kerberos

00:19:23.340 --> 00:19:27.740
extension and engage your Apple teams
for workflow and migration guidance.

00:19:27.800 --> 00:19:30.780
A user guide for the Kerberos extension,
which includes migration

00:19:30.780 --> 00:19:34.740
guidance from Enterprise Connect,
is available from apple.com/business

00:19:34.910 --> 00:19:38.900
on the IT page under Identity
Management Resources.

00:19:40.330 --> 00:19:44.080
That's a summary of the most important
platform changes in macOS Big Sur.

00:19:44.100 --> 00:19:46.880
I'd encourage you to check out
the Appleseed for IT release notes

00:19:47.030 --> 00:19:50.600
and the MDM Settings Guide for
IT for all of the latest updates.

00:19:52.110 --> 00:19:55.600
Now over to Danielle to discuss
the transition to Apple Silicon.

00:19:55.720 --> 00:19:56.600
Thanks, Mike.

00:19:56.740 --> 00:19:59.740
Mac is transitioning to
its own custom silicon,

00:19:59.850 --> 00:20:04.380
and it started this transition
in November 2020 with the M1.

00:20:04.470 --> 00:20:06.760
This gives Mac new and
exciting performance,

00:20:06.760 --> 00:20:09.080
as well as powerful new technologies.

00:20:09.170 --> 00:20:13.120
This change allows for common
architecture across all Apple products,

00:20:13.210 --> 00:20:16.560
making it easier for developers
to write and optimize their apps

00:20:16.730 --> 00:20:19.500
for the entire Apple ecosystem.

00:20:19.580 --> 00:20:23.870
We will continue to support Intel-based
Mac computers for years to come.

00:20:24.050 --> 00:20:27.560
There are some important considerations
with Apple Silicon in the context

00:20:27.640 --> 00:20:30.820
of deployment and management
that you should be aware of.

00:20:30.860 --> 00:20:32.950
Let's cover those now.

00:20:33.760 --> 00:20:37.280
A big consideration to the move
to the new processing architecture

00:20:37.360 --> 00:20:39.780
is application compatibility.

00:20:39.930 --> 00:20:43.850
macOS Big Sur includes technologies
that ensure a smooth and seamless

00:20:43.910 --> 00:20:46.180
transition to Apple Silicon.

00:20:46.320 --> 00:20:50.640
Using Universal 2 application binaries,
developers can easily create a

00:20:50.640 --> 00:20:54.570
single app that taps into the native
power and performance of the new

00:20:54.570 --> 00:20:58.540
Mac computers with Apple Silicon,
while still supporting

00:20:58.540 --> 00:21:00.890
Intel-based Mac computers.

00:21:01.410 --> 00:21:05.640
Developers can easily convert their
existing apps to run on Apple Silicon.

00:21:05.740 --> 00:21:08.680
And for the first time,
developers can make their iOS

00:21:08.990 --> 00:21:13.280
and iPadOS apps available on the
Mac without any modifications.

00:21:13.280 --> 00:21:18.750
New in macOS Big Sur 11.3,
MDM can install iOS and iPadOS apps

00:21:18.750 --> 00:21:21.850
on Mac computers with Apple Silicon.

00:21:24.070 --> 00:21:26.790
With the translation
technology of Rosetta 2,

00:21:26.790 --> 00:21:30.930
users can run most existing Mac apps
that have not yet been updated,

00:21:31.040 --> 00:21:33.430
including those with plugins.

00:21:33.620 --> 00:21:36.440
As Rosetta cannot translate
kernel extensions,

00:21:36.500 --> 00:21:41.560
kernel extensions must be recompiled to
run on Apple Silicon if they're needed.

00:21:41.630 --> 00:21:46.270
But vendors should adopt system
extensions instead going forward.

00:21:46.450 --> 00:21:50.160
The Hypervisor framework allows
for virtualization to be possible,

00:21:50.260 --> 00:21:53.310
including the ability to run Linux.

00:21:54.130 --> 00:21:56.240
Let's talk about Mac sharing mode.

00:21:56.420 --> 00:21:59.440
Mac computers with Apple Silicon do
not have target disk mode.

00:21:59.440 --> 00:22:02.530
Instead,
they have a feature called Mac sharing

00:22:02.530 --> 00:22:07.890
mode that uses SMB for connectivity
over Thunderbolt or a USB cable.

00:22:07.890 --> 00:22:11.180
Because it's file-based,
block copying data over this

00:22:11.180 --> 00:22:17.100
interface using tools like ASR or
Apple Software Restore are not supported.

00:22:17.140 --> 00:22:19.640
Once a Mac has been set
up with a user account,

00:22:19.760 --> 00:22:22.220
if FileVault or Activation
Lock is enabled,

00:22:22.250 --> 00:22:25.540
using Mac Sharing Mode requires
authentication.

00:22:25.560 --> 00:22:30.130
Mac Sharing Mode provides access to
the macOS volume in its entirety,

00:22:30.130 --> 00:22:33.350
not just access to the
user's home folder.

00:22:34.260 --> 00:22:36.770
The host Mac with
Apple Silicon shows up on the

00:22:36.770 --> 00:22:40.500
target Mac you're connecting it to,
just like a mounted network share,

00:22:40.840 --> 00:22:44.010
and all you need to do
is connect as guest.

00:22:45.590 --> 00:22:49.270
Mac computers with Apple Silicon have
similar macOS recovery environment

00:22:49.620 --> 00:22:52.900
called Recovery OS that you're
used to accessing today.

00:22:52.900 --> 00:22:57.470
However, instead of using Command plus R,
you access it by holding down

00:22:57.470 --> 00:22:59.140
the power button at startup.

00:23:00.330 --> 00:23:03.230
When reinstalling macOS
from the Recovery OS,

00:23:03.230 --> 00:23:06.940
the latest available update for
the major version of the macOS that

00:23:06.940 --> 00:23:08.640
you're currently running is installed.

00:23:08.640 --> 00:23:11.810
For example,
if you installed 11.1 on your Mac,

00:23:11.810 --> 00:23:17.220
but now 11.3 is available,
Recovery OS will install macOS 11.3.

00:23:17.220 --> 00:23:20.500
In the case where something
is wrong with Recovery OS,

00:23:20.500 --> 00:23:24.580
or it needs to be reinstalled,
instead of using internet recovery,

00:23:24.580 --> 00:23:29.280
like on Intel-based Mac computers,
Apple Configurator 2 can reinstall

00:23:29.400 --> 00:23:31.070
it through the Revive option.

00:23:31.540 --> 00:23:35.670
Apple Configurator 2 can even
install a fresh copy of the latest

00:23:35.760 --> 00:23:41.060
version of macOS during the process
if you choose the Restore option.

00:23:41.200 --> 00:23:45.450
This makes Apple Configurator 2 a great
option for rapid return to service

00:23:45.620 --> 00:23:48.240
on Mac computers with Apple Silicon.

00:23:48.320 --> 00:23:52.020
Note that upgrading macOS in
place is not supported using the

00:23:52.020 --> 00:23:55.620
Apple Configurator 2 recovery mechanism.

00:23:56.690 --> 00:24:01.960
On Mac computers with Apple Silicon,
macOS has a new unified login experience.

00:24:02.130 --> 00:24:07.520
The unified login experience allows for
new features even when FileVault is on.

00:24:07.670 --> 00:24:11.580
It supports a richer UI with
accelerated graphics that is consistent

00:24:11.580 --> 00:24:13.420
with the look and feel of macOS.

00:24:13.890 --> 00:24:18.210
This experience is made possible by being
able to fully boot into macOS without

00:24:18.210 --> 00:24:21.200
requiring a user to unlock the system.

00:24:21.390 --> 00:24:23.890
For example,
the username and password view is now

00:24:23.890 --> 00:24:28.500
supported if you choose to use that view
instead of the default list of users.

00:24:28.640 --> 00:24:32.660
It also has built-in support
for authentication with CCID and

00:24:32.660 --> 00:24:36.540
PIV compatible smart cards,
and includes voiceover support

00:24:36.540 --> 00:24:38.510
for greater accessibility.

00:24:40.080 --> 00:24:43.460
On Mac computers with Apple Silicon,
the ability to manage software

00:24:43.490 --> 00:24:47.250
updates and load kernel extensions
is automatically enabled for

00:24:47.250 --> 00:24:50.440
devices enrolled into MDM with
automated device enrollment,

00:24:50.440 --> 00:24:52.780
and it leverages the Bootstrap token.

00:24:53.200 --> 00:24:57.140
To cover that small caveat to
supervision that Mike mentioned earlier,

00:24:57.140 --> 00:25:00.400
for devices that are supervised
using device enrollment,

00:25:00.400 --> 00:25:03.600
which would have previously
been known as user-approved MDM,

00:25:03.600 --> 00:25:08.600
reduced security can be manually enabled
in the startup security utility to

00:25:08.600 --> 00:25:11.420
allow MDM to manage kernel extensions.

00:25:11.420 --> 00:25:16.700
This is not necessary for MDM to manage
software updates to the latest version.

00:25:18.440 --> 00:25:20.370
Mac computers with
Apple Silicon introduced

00:25:20.370 --> 00:25:21.710
the concept of ownership.

00:25:21.720 --> 00:25:26.380
Ownership can loosely be defined as
the user who has first claimed the

00:25:26.380 --> 00:25:29.970
Mac for configuring it for their
use and is not tied to true legal

00:25:30.040 --> 00:25:31.920
ownership or chain of custody.

00:25:31.920 --> 00:25:36.180
Ownership in this context defines
who is authorized to make changes

00:25:36.180 --> 00:25:39.840
to the startup security policy
for a specific install of macOS.

00:25:39.840 --> 00:25:43.440
The startup security policy
defines the restrictions around

00:25:43.510 --> 00:25:47.610
which version of macOS can boot on
Mac computers with Apple Silicon.

00:25:48.430 --> 00:25:52.940
As well as how and if third-party kernel
extensions can be loaded and managed.

00:25:52.940 --> 00:25:58.360
Ownership is backed by cryptography,
protected in the secure enclave,

00:25:58.510 --> 00:26:01.780
and should really be more of an
implementation detail versus a primary

00:26:01.780 --> 00:26:04.130
consideration for deployment operations.

00:26:04.140 --> 00:26:07.320
However,
because security policies are specific

00:26:07.350 --> 00:26:10.640
for each installation of macOS,
before you can perform

00:26:10.710 --> 00:26:13.580
certain installation actions,
such as installing an

00:26:13.580 --> 00:26:16.270
additional copy of macOS,
you may be prompted for a

00:26:16.290 --> 00:26:18.140
current user's credentials.

00:26:18.300 --> 00:26:21.900
And more specifically,
a current owner's credentials.

00:26:22.050 --> 00:26:24.620
You'll also be prompted for
an owner's credentials before

00:26:24.620 --> 00:26:28.480
making any changes to the startup
security policy for a specific

00:26:28.480 --> 00:26:30.870
macOS installation in Recovery OS.

00:26:30.980 --> 00:26:34.240
It's possible to be an owner
but not be an administrator,

00:26:34.420 --> 00:26:37.980
but certain tasks requiring
ownership will check for both.

00:26:37.980 --> 00:26:43.120
For example, modifying startup security
settings requires being both

00:26:43.130 --> 00:26:45.460
an administrator and an owner.

00:26:45.910 --> 00:26:49.560
Installing software updates on
Mac computers with Apple Silicon also

00:26:49.560 --> 00:26:53.900
requires owner authentication
before the installation can begin.

00:26:54.020 --> 00:26:59.620
But remember that managed devices also
leverage the Bootstrap token from MDM.

00:27:00.910 --> 00:27:03.630
So that's a summary of changes
related to deployment for

00:27:03.630 --> 00:27:06.100
Mac computers with Apple Silicon.

00:27:06.150 --> 00:27:08.240
Now,
Mike will discuss deployment workflows,

00:27:08.300 --> 00:27:11.920
including best practices for both
one-to-one and shared deployments.

00:27:12.930 --> 00:27:13.840
Thanks, Danielle.

00:27:13.860 --> 00:27:16.200
I'd like to start this section
by spending some time talking

00:27:16.200 --> 00:27:18.080
about the macOS Installer.

00:27:18.120 --> 00:27:20.270
It's critical to the
installation of macOS,

00:27:20.270 --> 00:27:23.300
and it contains powerful
automation tools for IT to help

00:27:23.390 --> 00:27:25.820
with various deployment workflows.

00:27:25.860 --> 00:27:28.520
We're proud to be able to
offer eight years of hardware

00:27:28.520 --> 00:27:29.980
support in macOS Big Sur.

00:27:30.030 --> 00:27:35.040
The macOS Installer will run on most
Mac computers that date back to 2013.

00:27:35.520 --> 00:27:38.680
Your deployment model and distribution
method for the macOS installer will

00:27:38.690 --> 00:27:41.340
determine the best way to acquire it.

00:27:41.360 --> 00:27:44.120
Historically,
in most cases for IT-driven workflows,

00:27:44.120 --> 00:27:46.140
including the ones I'll
go through shortly,

00:27:46.170 --> 00:27:48.440
acquiring a single copy
of the installer from the

00:27:48.440 --> 00:27:51.740
Mac App Store or System Preferences
has been the best method.

00:27:51.740 --> 00:27:54.490
Depending on your IT policy,
if users can upgrade their

00:27:54.590 --> 00:27:57.360
Mac computers themselves,
they can also simply leverage the

00:27:57.430 --> 00:28:01.240
Mac App Store or System Preferences
and download the installer.

00:28:01.260 --> 00:28:04.340
You can acquire licenses for the
macOS installer from apps and books

00:28:04.400 --> 00:28:07.600
within Apple School Manager or
Apple Business Manager for use

00:28:07.600 --> 00:28:09.780
with distributing from MDM.

00:28:09.800 --> 00:28:12.880
And another great option for acquiring
the installer is an option introduced

00:28:12.880 --> 00:28:16.940
last year in macOS Catalina for the
Software Update command line tool that

00:28:16.940 --> 00:28:18.500
allows you to script the download.

00:28:18.530 --> 00:28:21.250
I'll cover this in more detail shortly.

00:28:21.710 --> 00:28:24.060
Once you've acquired the installer,
you'll want to think about how you

00:28:24.060 --> 00:28:26.230
distribute it to your Mac computers.

00:28:26.360 --> 00:28:28.980
You can remotely copy it to
your Mac computers using your

00:28:28.980 --> 00:28:30.440
preferred tool of choice.

00:28:30.530 --> 00:28:32.680
You could place the
installer on external media,

00:28:32.680 --> 00:28:34.870
such as a USB thumb drive.

00:28:35.000 --> 00:28:38.200
You could push the installer
application directly using MDM as

00:28:38.200 --> 00:28:41.320
an app acquired through Apps and
Books in Apple School Manager or

00:28:41.320 --> 00:28:42.880
Apple Business Manager.

00:28:42.970 --> 00:28:46.620
Or as I mentioned, since macOS Catalina,
you can easily script the download,

00:28:46.720 --> 00:28:49.690
potentially directly on the target Mac.

00:28:50.220 --> 00:28:53.100
Since macOS Catalina,
the fetch full installer flag on the

00:28:53.100 --> 00:28:56.650
software update command line tool
automatically downloads the latest full

00:28:56.650 --> 00:28:59.780
copy of the macOS installer available
in the software update catalog.

00:28:59.780 --> 00:29:04.870
You can also specify a specific version
using the full installer version flag,

00:29:05.290 --> 00:29:07.380
assuming that version is still
available in the catalog.

00:29:07.380 --> 00:29:11.050
As a quick note, in macOS Catalina,
you may have needed to use that flag

00:29:11.050 --> 00:29:15.300
even to download the latest installer,
but that's not necessary in Big Sur.

00:29:16.710 --> 00:29:18.860
In Big Sur,
you can use the List Full Installers

00:29:18.870 --> 00:29:22.110
option to see a listing of
available installers for download,

00:29:22.150 --> 00:29:25.980
but know that the listing is customized
for the Mac that the command is executed

00:29:26.200 --> 00:29:29.970
on and will only include installers
dating back to the oldest macOS version

00:29:29.970 --> 00:29:32.210
that was available for that Mac.

00:29:32.510 --> 00:29:34.800
When used with StartOS Install,
which I'll cover soon,

00:29:34.980 --> 00:29:37.960
this can enable a completely
automated download and installation

00:29:38.030 --> 00:29:40.110
or reinstallation of macOS.

00:29:41.930 --> 00:29:44.040
Once you have a copy
of the macOS installer,

00:29:44.040 --> 00:29:47.800
there are many ways to actually start
the installation of macOS Big Sur.

00:29:47.900 --> 00:29:52.140
Having many choices enables a lot of
flexibility and many different workflows.

00:29:52.230 --> 00:29:54.340
In this next section,
I'll go through the methods shown

00:29:54.340 --> 00:29:56.640
to start the installation of macOS.

00:29:56.690 --> 00:29:59.750
Many of these installation methods
also leverage content caching to

00:29:59.750 --> 00:30:03.180
help reduce internet bandwidth
utilization on your network.

00:30:03.240 --> 00:30:06.880
Let's start with the command line tool,
startosinstall.

00:30:07.600 --> 00:30:10.480
StartOS Install is located
inside the macOS Installer's

00:30:10.530 --> 00:30:12.600
Contents and Resources folder.

00:30:12.650 --> 00:30:15.240
It allows for automated
workflows using scripting,

00:30:15.300 --> 00:30:18.280
and the tool has a number of flags
that make it a powerful tool for

00:30:18.280 --> 00:30:21.040
upgrading or reinstalling macOS.

00:30:21.080 --> 00:30:23.360
One of those flags is Erase Install.

00:30:23.420 --> 00:30:27.160
This flag is useful for reinstalling
macOS to its default state.

00:30:27.210 --> 00:30:31.280
It requires Apple File System, or APFS,
as it creates a new volume

00:30:31.280 --> 00:30:35.080
in the APFS container,
installs macOS to it, restarts,

00:30:35.220 --> 00:30:38.040
and then removes all of the other
volumes in the same container,

00:30:38.090 --> 00:30:40.240
including your previous boot volume.

00:30:40.320 --> 00:30:41.840
If you want to preserve
those other volumes,

00:30:41.860 --> 00:30:44.380
you can use the Preserve Container flag.

00:30:44.440 --> 00:30:47.210
The end result is that you have a
clean installation of macOS as if

00:30:47.210 --> 00:30:52.140
you had manually erased the internal
storage first using Disk Utility.

00:30:52.780 --> 00:30:55.160
Another powerful flag is install package.

00:30:55.230 --> 00:30:58.730
This flag enables you to have the
macOS installer install any number

00:30:58.810 --> 00:31:02.640
of packages for you after the
installation of macOS finishes.

00:31:02.710 --> 00:31:04.920
If you need to install
more than one package,

00:31:04.970 --> 00:31:08.380
just pass multiple install
package flags into the command,

00:31:08.380 --> 00:31:10.880
each with a path to a different package.

00:31:10.960 --> 00:31:13.560
If you combine a race
install and install package,

00:31:13.620 --> 00:31:16.500
you can take a machine that was
recently handed back into your help

00:31:16.820 --> 00:31:20.920
desk and reinstall macOS in any other
packaged applications and have it

00:31:20.920 --> 00:31:23.410
be ready to hand out to a new user.

00:31:23.630 --> 00:31:28.120
macOS Catalina and macOS Big Sur install
all packages passed to the command with

00:31:28.120 --> 00:31:32.200
the install package flag in the order
in which they are passed to the command.

00:31:32.240 --> 00:31:36.170
Note that using startOS install on
Mac computers with Apple Silicon requires

00:31:36.280 --> 00:31:39.740
passing administrator owner
credentials into the command.

00:31:39.790 --> 00:31:43.880
Run the command with -h to view
additional usage information.

00:31:44.920 --> 00:31:47.370
There's another command line tool
inside of the installer called

00:31:47.430 --> 00:31:50.580
Create Install Media that allows
you to create a bootable installer

00:31:50.690 --> 00:31:52.600
for use with installing macOS.

00:31:52.690 --> 00:31:56.740
You can run it with the -h
option to get usage information.

00:31:56.840 --> 00:31:59.470
This tool is helpful if you have
many machines you want to upgrade

00:31:59.480 --> 00:32:01.860
and have limited network resources.

00:32:01.950 --> 00:32:04.860
Using the installer on external
media has a minimal network

00:32:04.860 --> 00:32:08.200
impact during installation,
as nearly all of the files necessary

00:32:08.200 --> 00:32:12.760
for installing macOS are located
on the external media itself.

00:32:13.100 --> 00:32:15.690
There is a flag on the tool
called Download Assets,

00:32:15.720 --> 00:32:19.410
which will pre-download Apple T2
security chip firmware used during

00:32:19.410 --> 00:32:23.440
macOS installation on Mac computers
with the Apple T2 security chip.

00:32:23.720 --> 00:32:26.950
Note that internet connectivity
is still required on a Mac when

00:32:26.950 --> 00:32:31.180
installing even when using that flag,
as the operating system on Mac computers

00:32:31.180 --> 00:32:34.410
with the Apple T2 security chip
still needs to be personalized for

00:32:34.410 --> 00:32:37.670
that hardware during installation,
which requires connectivity

00:32:37.670 --> 00:32:38.760
to Apple servers.

00:32:39.940 --> 00:32:42.730
Also note that while booting
from external media is disallowed

00:32:42.730 --> 00:32:45.540
by default on Mac computers
with the Apple T2 security chip,

00:32:45.710 --> 00:32:47.140
it can optionally be allowed.

00:32:47.300 --> 00:32:50.960
Booting from external media is allowed
by default on other Mac computers,

00:32:50.960 --> 00:32:52.840
including those with Apple Silicon.

00:32:54.850 --> 00:32:58.380
Using recovery is another
option to install macOS Big Sur.

00:32:58.510 --> 00:33:01.550
There are three forms of recovery:
the local one to an Intel-based Mac,

00:33:01.710 --> 00:33:05.420
which is the macOS Recovery partition,
Internet Recovery for

00:33:05.430 --> 00:33:08.520
Intel-based Mac computers,
and RecoveryOS along with

00:33:08.520 --> 00:33:11.590
Apple Configurator 2 for Apple Silicon.

00:33:12.180 --> 00:33:14.680
For Intel-based Mac computers,
you can boot to the local

00:33:14.680 --> 00:33:18.630
macOS recovery partition by
pressing Command-R at boot time,

00:33:18.630 --> 00:33:21.290
and that allows you to reinstall
the latest version of macOS that

00:33:21.290 --> 00:33:22.770
was already installed on your Mac.

00:33:22.860 --> 00:33:25.610
Internet recovery for
Intel-based Mac computers,

00:33:25.700 --> 00:33:29.360
which is similar to macOS recovery
but is handled over the network by

00:33:29.360 --> 00:33:33.130
booting to servers in Apple's cloud,
is available even when something

00:33:33.130 --> 00:33:35.980
may be wrong with the local
recovery partition on the Mac.

00:33:36.810 --> 00:33:39.550
There are several different
boot keys for internet recovery,

00:33:39.590 --> 00:33:41.930
but the most commonly
used is Option-Command-R,

00:33:41.930 --> 00:33:44.800
which installs the latest
possible version of macOS.

00:33:44.800 --> 00:33:47.840
When using recovery,
either local or internet recovery,

00:33:47.840 --> 00:33:51.230
you can optionally use Disk Utility
to manually erase the internal

00:33:51.230 --> 00:33:52.950
storage before installing.

00:33:52.960 --> 00:33:56.630
Note that booting to the latest version
of macOS in internet recovery on

00:33:56.630 --> 00:34:00.560
Mac computers with the Apple T2 security
chip is dependent on the firmware

00:34:00.560 --> 00:34:04.340
version of the chip at the time you
try to boot to internet recovery.

00:34:05.110 --> 00:34:08.630
You can update it separately from
macOS if necessary by updating

00:34:08.630 --> 00:34:12.300
the T2 chip firmware in DFU mode
using Apple Configurator 2.

00:34:13.630 --> 00:34:16.210
Danielle discussed the new
Recovery OS and features in

00:34:16.210 --> 00:34:20.530
Apple Configurator 2 for Mac computers
with Apple Silicon earlier.

00:34:21.720 --> 00:34:25.210
Finally, if allowed by your IT policy,
users can also install macOS

00:34:25.300 --> 00:34:28.180
Big Sur on their own using
the install assistant from the

00:34:28.220 --> 00:34:30.340
Mac App Store or System Preferences.

00:34:30.390 --> 00:34:33.660
This is the same experience as
consumers at home and provides

00:34:33.660 --> 00:34:36.840
users with a graphical walkthrough
of the installation steps.

00:34:36.900 --> 00:34:40.560
It does require administrative
privileges to begin installation.

00:34:40.620 --> 00:34:43.130
Now, I'll hand it back to Danielle.

00:34:44.260 --> 00:34:45.240
Thanks, Mike.

00:34:45.260 --> 00:34:47.690
Now that we've covered
ways to install macOS,

00:34:47.690 --> 00:34:51.560
let's move on to covering some
recommendations for specific workflows,

00:34:51.630 --> 00:34:54.600
including both one-to-one
and shared devices.

00:34:54.620 --> 00:35:00.560
I'll cover initial deployment, upgrading,
and return to service.

00:35:00.600 --> 00:35:03.070
Let's start with initial deployment.

00:35:04.010 --> 00:35:07.450
For initial deployments of Mac computers
in a one-to-one environment,

00:35:07.450 --> 00:35:10.580
the best experience for both
users and IT is to leverage an

00:35:10.630 --> 00:35:14.830
out-of-the-box workflow that uses
MDM and automated device enrollment

00:35:15.310 --> 00:35:19.380
as part of Apple Business Manager and
Apple School Manager.

00:35:19.560 --> 00:35:23.100
Automated device enrollment enables
supervision and enables kernel

00:35:23.100 --> 00:35:26.770
extension management and software
update installation capabilities on

00:35:26.770 --> 00:35:29.440
Mac computers with Apple Silicon.

00:35:29.530 --> 00:35:33.660
Automated device enrollment allows
IT to customize and streamline the setup

00:35:33.660 --> 00:35:38.160
experience for their users by enabling
the ability to skip any of the common

00:35:38.160 --> 00:35:43.060
setup screens that would normally be seen
during a consumer setup of the device.

00:35:43.170 --> 00:35:47.000
During initial setup of the device,
MDM can hold the devices in the setup

00:35:47.000 --> 00:35:50.690
assistant until they're configured
with the most critical apps and

00:35:50.690 --> 00:35:53.000
configurations for first-time use.

00:35:53.080 --> 00:35:56.680
We encourage all organizations to
use local accounts where possible

00:35:56.780 --> 00:35:58.500
for one-to-one deployments.

00:35:58.600 --> 00:36:01.600
For more information on why,
take a look at the Leveraging

00:36:01.600 --> 00:36:06.210
Enterprise Identity and
Authentication session from WWDC 2020.

00:36:08.020 --> 00:36:10.640
For shared environments,
we also recommend that you use

00:36:10.790 --> 00:36:13.640
automated device enrollment
for all the same reasons.

00:36:13.640 --> 00:36:18.200
Using the new auto-advance feature
allows for a truly zero-touch setup

00:36:18.200 --> 00:36:21.540
and is incredibly powerful when
combined with the StartOS install

00:36:21.580 --> 00:36:23.240
that Mike discussed earlier.

00:36:23.240 --> 00:36:28.160
Because multiple users are using the Mac,
a directory service or identity

00:36:28.160 --> 00:36:31.380
provider helper tool often
provides access to accounts.

00:36:31.380 --> 00:36:34.740
In high-traffic areas such
as a library or computer lab,

00:36:35.320 --> 00:36:38.610
consider an account expiration
and removal strategy to help

00:36:38.610 --> 00:36:40.000
clean up local home folders.

00:36:40.000 --> 00:36:43.230
Whether you script this yourself
or use the built-in feature of

00:36:43.230 --> 00:36:47.210
mobile accounts to automatically
expire after a given period of time,

00:36:47.210 --> 00:36:48.220
it's up to you.

00:36:48.220 --> 00:36:50.220
Now let's look at upgrades.

00:36:52.110 --> 00:36:55.320
When upgrading to macOS Big Sur,
you can leverage one or many of

00:36:55.340 --> 00:36:58.680
the ways Mike covered earlier when
he discussed the macOS installer.

00:36:58.680 --> 00:37:01.270
Ultimately,
it will be up to you to decide which

00:37:01.270 --> 00:37:04.950
option works best in your environment,
but there are many available

00:37:04.950 --> 00:37:07.780
to accommodate different
situations and workflows.

00:37:07.780 --> 00:37:12.540
Whether to upgrade in place or
erase and upgrade is also up to you.

00:37:14.470 --> 00:37:17.640
Now let's look at return to service.

00:37:17.740 --> 00:37:21.120
For return to service,
the erase install flag in startos

00:37:21.200 --> 00:37:25.440
install is a great option because it's
supported on all Mac computers and can

00:37:25.440 --> 00:37:29.920
handle both upgrading and erasing a
Mac without any additional considerations

00:37:30.010 --> 00:37:32.570
or configurations required.

00:37:32.990 --> 00:37:36.240
On Intel-based Mac computers,
you can use Internet Recovery.

00:37:36.310 --> 00:37:39.240
And because in this context
of return to service,

00:37:39.320 --> 00:37:43.390
be sure to erase the internal storage
first before reinstalling macOS.

00:37:44.780 --> 00:37:47.840
On Intel-based Mac computers
and those with Apple Silicon,

00:37:47.920 --> 00:37:51.540
you can use macOS Recovery,
Recovery OS in Apple Silicon,

00:37:51.610 --> 00:37:53.140
or an external media workflow.

00:37:53.140 --> 00:37:57.560
Again, be sure to erase the internal
storage first using Disk Utility or

00:37:57.680 --> 00:38:01.820
use automation features built into
some provisioning tools to do so.

00:38:01.820 --> 00:38:05.670
Note that running StartOS install
from the Recovery environment

00:38:05.670 --> 00:38:08.710
is not recommended going
forward and is not supported on

00:38:08.710 --> 00:38:10.410
Mac computers with Apple Silicon.

00:38:11.340 --> 00:38:15.170
For Mac computers with Apple Silicon,
you can use Apple Configurator

00:38:15.170 --> 00:38:17.780
2 to reinstall macOS,
as discussed earlier.

00:38:17.780 --> 00:38:21.480
Note that using Apple Configurator
2 always installs the latest

00:38:21.480 --> 00:38:24.660
version of macOS at the time
you perform the restore.

00:38:27.440 --> 00:38:29.530
So that's a summary of
deployment workflows,

00:38:29.530 --> 00:38:33.180
including recommendations for both
one-to-one and shared devices,

00:38:33.210 --> 00:38:36.120
initial deployment, upgrading,
and return to service.

00:38:36.120 --> 00:38:41.380
Lastly, to wrap up,
let's take a look at available resources.

00:38:44.340 --> 00:38:47.120
While primarily intended
for MDM developers,

00:38:47.170 --> 00:38:50.690
the MDM developer documentation
is also an incredibly helpful and

00:38:50.690 --> 00:38:54.510
thorough resource that's available
to IT for helping understand how

00:38:54.520 --> 00:38:56.720
MDM works at the protocol level.

00:38:56.720 --> 00:39:01.440
The MDM Settings Guide for IT is a
technical resource with information about

00:39:01.520 --> 00:39:06.780
payloads available from MDM to help you
configure devices in your environment.

00:39:06.780 --> 00:39:10.010
The deployment reference for
Mac is a technical document

00:39:10.150 --> 00:39:12.030
on the topics we cover today.

00:39:12.860 --> 00:39:16.020
The Apple Platform Security Documentation
lists all software,

00:39:16.020 --> 00:39:18.920
hardware,
and services features across platforms.

00:39:18.920 --> 00:39:22.330
The AppleCare Professional Support
website hosts program

00:39:22.390 --> 00:39:25.960
information for each of the
AppleCare OS support offerings for

00:39:26.030 --> 00:39:28.220
IT departments and IT helpdesks.

00:39:28.220 --> 00:39:31.410
If you're interested in
testing new Apple software,

00:39:31.410 --> 00:39:35.100
any non-student managed
Apple ID from Apple School Manager or

00:39:35.100 --> 00:39:39.740
Apple Business Manager can participate
in our Apple SEED for IT program.

00:39:39.740 --> 00:39:42.740
This program allows you to
get access to pre-reviewed,

00:39:42.760 --> 00:39:45.340
pre-released Apple software for
testing in your environment,

00:39:45.800 --> 00:39:49.560
includes detailed test plans,
and puts your feedback into a dedicated

00:39:49.640 --> 00:39:53.780
queue for filing feedback where issues
and enhancements are reviewed by a team

00:39:53.780 --> 00:39:55.760
focused on education and enterprise.

00:39:55.760 --> 00:39:59.540
The release notes are also targeted
at education and enterprise,

00:39:59.540 --> 00:40:02.950
which allows us to highlight any
impactful changes or issues in the

00:40:02.990 --> 00:40:05.160
operating systems for organizations.

00:40:07.240 --> 00:40:10.420
Finally, here's a list of
Apple Support articles related to

00:40:10.430 --> 00:40:12.920
the topics that we've discussed.

00:40:13.080 --> 00:40:16.440
We hope you take advantage of those
resources and all the updates that have

00:40:16.440 --> 00:40:19.940
come to macOS Big Sur and Apple Silicon.

00:40:20.020 --> 00:40:21.700
Thank you.