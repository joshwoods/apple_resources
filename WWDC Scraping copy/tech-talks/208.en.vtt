WEBVTT

00:00:02.569 --> 00:00:04.771
The ClockKit
framework allows you to display

00:00:04.771 --> 00:00:06.907
your app’s data
on the watch face.

00:00:06.907 --> 00:00:09.476
These areas are called
complications.

00:00:09.476 --> 00:00:11.612
Complications are a great way

00:00:11.612 --> 00:00:13.814
to connect people
to their favorite apps

00:00:13.814 --> 00:00:15.115
with every wrist raise

00:00:15.115 --> 00:00:17.851
and keep them informed
throughout their day.

00:00:17.851 --> 00:00:22.556
Complications can also be tapped
for quick access into the app.

00:00:22.556 --> 00:00:24.358
With Apple Watch Series 4,

00:00:24.358 --> 00:00:27.694
we’re adding new complication
capabilities to ClockKit,

00:00:27.694 --> 00:00:29.830
which allow you to create
engaging,

00:00:29.830 --> 00:00:33.367
full-color complications
for the new Infograph

00:00:33.367 --> 00:00:36.236
and Infograph Modular
watch faces.

00:00:36.236 --> 00:00:38.038
On the Infograph watch face,

00:00:38.038 --> 00:00:40.073
these new complications
can extend

00:00:40.073 --> 00:00:43.911
into the corners
of the incredible new display.

00:00:43.911 --> 00:00:46.013
On the Infograph Modular
watch face,

00:00:46.013 --> 00:00:47.347
you can now present

00:00:47.347 --> 00:00:50.584
even more of your app’s
information in full-color,

00:00:50.584 --> 00:00:53.453
right in the middle
of the watch face.

00:00:53.453 --> 00:00:56.189
Complications are divided
into families.

00:00:56.189 --> 00:00:59.626
These determine how information
is presented onscreen.

00:00:59.626 --> 00:01:04.096
On Apple Watch Series 4,
we’ve added four new families:

00:01:04.096 --> 00:01:06.667
Graphic Corner,
Graphic Circular,

00:01:06.667 --> 00:01:10.270
Graphic Bezel,
and Graphic Rectangular.

00:01:10.270 --> 00:01:14.241
Each complication family uses
system-defined templates

00:01:14.241 --> 00:01:16.677
to determine how the information
is laid out,

00:01:16.677 --> 00:01:19.713
like the Graphic Circular family
seen here.

00:01:19.713 --> 00:01:22.282
There are many templates
for you to choose from

00:01:22.282 --> 00:01:24.217
to display your data.

00:01:24.217 --> 00:01:26.987
The complication family
templates each consist

00:01:26.987 --> 00:01:29.856
of different combinations
of data provider classes

00:01:29.856 --> 00:01:31.692
from the ClockKit framework,

00:01:31.692 --> 00:01:37.431
from text to images
to the all-new gauges.

00:01:37.431 --> 00:01:40.500
For the Infograph and Infograph
Modular watch faces,

00:01:40.500 --> 00:01:43.303
we’ve added
a new full-color image provider

00:01:43.303 --> 00:01:45.172
and a new gauge provider.

00:01:45.172 --> 00:01:47.741
Let’s learn about these.

00:01:47.741 --> 00:01:50.243
First is the all-new
gauge provider.

00:01:50.243 --> 00:01:53.580
Gauge providers allow you
to show progress completed

00:01:53.580 --> 00:01:56.917
or a value within a range
to the user in different ways,

00:01:56.917 --> 00:02:00.854
depending on the complication
template family you are using.

00:02:00.854 --> 00:02:03.390
You can also use
a time interval gauge

00:02:03.390 --> 00:02:06.360
to automatically animate
the values as they change,

00:02:06.360 --> 00:02:09.763
as you see here
with the timer complication.

00:02:09.763 --> 00:02:12.499
With gauge providers,
you can provide a single color

00:02:12.499 --> 00:02:14.234
or you can provide a gradient,

00:02:14.234 --> 00:02:17.437
specifying the gradient colors
along the gauge.

00:02:17.437 --> 00:02:20.340
You can also specify
whether the color or gradient

00:02:20.340 --> 00:02:22.976
will fill the gauge
as the data progresses

00:02:22.976 --> 00:02:27.948
or if it’s a range and uses
a ring to indicate the value.

00:02:27.948 --> 00:02:29.983
Next, we have image providers.

00:02:29.983 --> 00:02:33.086
Image providers allow you
to display a tintable image

00:02:33.086 --> 00:02:37.157
or a one-color image for use
on existing watch faces,

00:02:37.157 --> 00:02:40.994
and now on the Infograph and
Infograph Modular watch faces,

00:02:40.994 --> 00:02:43.430
full color images.

00:02:43.430 --> 00:02:46.733
Finally, we have text providers,
which allow you to use text

00:02:46.733 --> 00:02:48.802
throughout the various
templates.

00:02:48.802 --> 00:02:51.071
They can be used
to display text,

00:02:51.071 --> 00:02:55.909
dates, time, time ranges,
and even automatic countdowns

00:02:55.909 --> 00:02:59.846
or count-ups between two dates
or times.

00:02:59.846 --> 00:03:02.449
In a handful of complication
family templates,

00:03:02.449 --> 00:03:06.186
you can also now use multiple
text providers together,

00:03:06.186 --> 00:03:08.288
each with their own tint color,

00:03:08.288 --> 00:03:10.757
to make one
multi-purpose string.

00:03:10.757 --> 00:03:12.159
This can be really useful

00:03:12.159 --> 00:03:14.294
if your app has
specific branding

00:03:14.294 --> 00:03:17.431
for different pieces of data.

00:03:17.431 --> 00:03:19.099
Now that you’re familiar
with the gauge,

00:03:19.099 --> 00:03:20.967
image, and text providers,

00:03:20.967 --> 00:03:24.438
let’s look at the new graphic
complication family templates

00:03:24.438 --> 00:03:28.942
available on the Infograph and
Infograph Modular watch faces

00:03:28.942 --> 00:03:32.212
and learn how to combine
providers to display your data

00:03:32.212 --> 00:03:34.748
in different ways.

00:03:34.748 --> 00:03:37.150
The first new complication
family template

00:03:37.150 --> 00:03:38.885
is the Graphic Corner.

00:03:38.885 --> 00:03:42.456
This is available for use
on the Infograph watch face.

00:03:42.456 --> 00:03:45.225
This template curves along
the corner of the display

00:03:45.225 --> 00:03:48.829
to allow for more content
like never before.

00:03:48.829 --> 00:03:50.831
The Graphic Corner templates
have a handful

00:03:50.831 --> 00:03:54.000
of different combinations
of providers to use.

00:03:54.000 --> 00:03:56.603
You can use a gauge provider
with text,

00:03:56.603 --> 00:03:59.439
a gauge provider with an image,

00:03:59.439 --> 00:04:01.741
a set of text providers,

00:04:01.741 --> 00:04:04.177
a text provider with an image.

00:04:04.177 --> 00:04:08.515
And finally, you can use
a full-color image by itself.

00:04:08.515 --> 00:04:11.785
Now, for consistency
with other corner complications,

00:04:11.785 --> 00:04:13.820
it’s recommended
that you use providers

00:04:13.820 --> 00:04:16.389
that will curve
around the display.

00:04:16.389 --> 00:04:19.091
OK, let’s look at a code example

00:04:19.091 --> 00:04:21.827
of how to create
a graphic corner complication

00:04:21.827 --> 00:04:24.498
that uses a gauge provider
with text.

00:04:24.498 --> 00:04:27.200
Let’s make something similar
to the Weather app.

00:04:28.268 --> 00:04:30.637
First, we’ll need to work
with our designer

00:04:30.637 --> 00:04:33.940
to get some values
for the text tint colors.

00:04:33.940 --> 00:04:34.875
In this example,

00:04:34.875 --> 00:04:39.679
we have text showing our high,
low, and current temperatures.

00:04:39.679 --> 00:04:42.048
We will also need an array
of values

00:04:42.048 --> 00:04:44.451
for which colors
will make up the gradient.

00:04:44.451 --> 00:04:46.720
Here, we’re going to use
three colors.

00:04:46.720 --> 00:04:49.556
One for the low,
one for the middle of the range,

00:04:49.556 --> 00:04:51.324
and one for the high.

00:04:51.324 --> 00:04:54.361
watchOS will take care
of the gradient between colors,

00:04:54.361 --> 00:04:57.330
so the only additional
information we need to provide

00:04:57.330 --> 00:04:59.766
is an array of values to express

00:04:59.766 --> 00:05:04.871
where each color should
be located along the gauge.

00:05:04.871 --> 00:05:06.740
Now that we have
all of our values,

00:05:06.740 --> 00:05:10.343
we need to create our graphic
corner complication template.

00:05:10.343 --> 00:05:12.712
We’re going to create
a corner complication

00:05:12.712 --> 00:05:14.814
with a gauge provider
and text provider,

00:05:14.814 --> 00:05:19.719
so we create an instance of the
GraphicCornerGaugeText template.

00:05:19.719 --> 00:05:21.855
Once we’ve created
our template instance,

00:05:21.855 --> 00:05:23.757
we need to create
the providers for it,

00:05:23.757 --> 00:05:25.725
starting with
the gauge provider.

00:05:25.725 --> 00:05:28.995
Here we’re using
CLKSimpleGaugeProvider.

00:05:28.995 --> 00:05:30.630
The style can be a ring,

00:05:30.630 --> 00:05:33.333
which displays a ring
around the value in the gauge,

00:05:33.333 --> 00:05:36.236
or a fill, if you’re wanting
to fill the progress

00:05:36.236 --> 00:05:37.637
within the gauge.

00:05:37.637 --> 00:05:39.940
Here we’ll use the ring style.

00:05:39.940 --> 00:05:41.908
Next, we set our gauge colors

00:05:41.908 --> 00:05:44.344
to the gradient colors
we created earlier,

00:05:44.344 --> 00:05:46.546
as well as the gauge color
locations,

00:05:46.546 --> 00:05:50.016
which will define where
the colors are along our gauge.

00:05:50.016 --> 00:05:53.019
Finally, we need to set
the fill fraction.

00:05:53.019 --> 00:05:55.288
This sets the current value
for the gauge

00:05:55.288 --> 00:05:58.558
and should be dynamic,
depending on your data.

00:05:58.558 --> 00:06:02.362
Next, we set the gauge provider
property of the corner template

00:06:02.362 --> 00:06:05.198
and set the various
text providers for the template,

00:06:05.198 --> 00:06:08.868
which we created earlier in code
with tint colors for each.

00:06:08.868 --> 00:06:11.871
All that’s left is to pass in
the completed template

00:06:11.871 --> 00:06:14.207
to create a timeline entry.

00:06:14.207 --> 00:06:15.542
This looks great.

00:06:15.542 --> 00:06:17.477
You can see our gradient
between colors

00:06:17.477 --> 00:06:19.346
is handled by the system,

00:06:19.346 --> 00:06:20.914
and our ring-style
gauge provider

00:06:20.914 --> 00:06:24.317
centers in the ring
on our current value.

00:06:24.317 --> 00:06:25.552
Next, let’s look at

00:06:25.552 --> 00:06:28.488
the graphic circular
complication family templates

00:06:28.488 --> 00:06:30.557
available on both the Infograph

00:06:30.557 --> 00:06:33.860
and Infograph Modular
watch faces.

00:06:33.860 --> 00:06:36.429
The Graphic Circular templates
provide the ability

00:06:36.429 --> 00:06:39.332
to combine gauge providers
with text providers

00:06:39.332 --> 00:06:40.800
to show an open gauge

00:06:40.800 --> 00:06:43.403
with values
at the end of a range.

00:06:43.403 --> 00:06:45.272
You can also create a template
with text

00:06:45.272 --> 00:06:48.475
below the center text value
with an open gauge,

00:06:48.475 --> 00:06:51.177
as well as use a full-color
image provider

00:06:51.177 --> 00:06:54.014
below the center text
with an open gauge.

00:06:54.014 --> 00:06:55.815
Using a closed gauge,

00:06:55.815 --> 00:06:57.517
you can provide
a full-color image

00:06:57.517 --> 00:07:00.587
inside of the gauge or text.

00:07:00.587 --> 00:07:02.989
And finally, you can use
a full-color image

00:07:02.989 --> 00:07:07.560
to represent the entire area
of the complication.

00:07:07.560 --> 00:07:09.162
In our previous example,

00:07:09.162 --> 00:07:11.498
we created a graphic
corner complication

00:07:11.498 --> 00:07:13.500
representing weather data.

00:07:13.500 --> 00:07:15.602
Now, let’s take that same data

00:07:15.602 --> 00:07:18.204
and create a graphic
circular complication

00:07:18.204 --> 00:07:21.174
using an open gauge
with text.

00:07:21.174 --> 00:07:23.476
The text providers,
gradient colors,

00:07:23.476 --> 00:07:26.246
and gradient color locations
we're going to use

00:07:26.246 --> 00:07:27.947
are the same as we used

00:07:27.947 --> 00:07:30.383
in the graphic
corner complication.

00:07:30.383 --> 00:07:33.353
The main difference
is that we need to instantiate

00:07:33.353 --> 00:07:37.257
the graphic circular open gauge
range text template.

00:07:37.257 --> 00:07:40.360
We will create the gauge
provider as we did last time.

00:07:40.360 --> 00:07:42.762
One additional change
is that we will set

00:07:42.762 --> 00:07:45.765
the center text provider
property for the template,

00:07:45.765 --> 00:07:47.701
where on the graphic
circular template,

00:07:47.701 --> 00:07:50.003
this was an outer text provider.

00:07:50.003 --> 00:07:51.237
And that’s all.

00:07:51.237 --> 00:07:54.407
Now we have our graphic
circular complication.

00:07:54.407 --> 00:07:56.609
But there’s more that we can do

00:07:56.609 --> 00:07:59.479
with a graphic circular
complication.

00:07:59.479 --> 00:08:01.348
On the Infograph watch face,

00:08:01.348 --> 00:08:04.451
there is another family called
Graphic Bezel.

00:08:04.451 --> 00:08:07.754
This utilizes a graphic
circular complication

00:08:07.754 --> 00:08:09.823
and adds a text provider to it

00:08:09.823 --> 00:08:12.892
to wrap the text
within the time bezel.

00:08:12.892 --> 00:08:16.996
First, we start by creating
a graphic circular template.

00:08:16.996 --> 00:08:17.997
In this example,

00:08:17.997 --> 00:08:19.599
we’ll use the one
we just created

00:08:19.599 --> 00:08:21.468
in our last example.

00:08:21.468 --> 00:08:24.504
Once the graphic circular
template is configured,

00:08:24.504 --> 00:08:25.905
we create an instance of

00:08:25.905 --> 00:08:28.842
the GraphicBezelCircularText
template.

00:08:28.842 --> 00:08:31.745
This takes a configured
graphic circular template

00:08:31.745 --> 00:08:34.447
and a text provider
for the bezel text.

00:08:34.447 --> 00:08:38.451
Here, we’re just hardcoding
some values for the example.

00:08:38.451 --> 00:08:42.020
Finally, you need to pass
in the configured bezel template

00:08:42.020 --> 00:08:44.424
for the complication
timeline entry.

00:08:44.424 --> 00:08:48.294
Here’s our completed
Graphic Bezel complication.

00:08:48.294 --> 00:08:51.064
The text will automatically
curve along the bezel

00:08:51.064 --> 00:08:53.032
and display as uppercase.

00:08:53.032 --> 00:08:56.536
The bezel text can fill
nearly 180 degrees

00:08:56.536 --> 00:08:59.539
of the bezel
before it is truncated.

00:08:59.539 --> 00:09:02.275
The final addition
to our complication families

00:09:02.275 --> 00:09:03.910
is the Graphic Rectangular,

00:09:03.910 --> 00:09:07.447
which is available on the
Infograph Modular watch face.

00:09:07.447 --> 00:09:09.949
This family has templates
allowing you to create

00:09:09.949 --> 00:09:13.820
a full-color image that fills
the middle of the watch face.

00:09:13.820 --> 00:09:16.856
This template also includes
a text provider.

00:09:16.856 --> 00:09:18.992
This image should be
highly visual

00:09:18.992 --> 00:09:23.263
and not rely on text
to convey the information shown.

00:09:23.263 --> 00:09:25.765
The graphic rectangular
templates also allow

00:09:25.765 --> 00:09:28.034
for a more traditional
configuration,

00:09:28.034 --> 00:09:30.937
utilizing multiple
text providers.

00:09:30.937 --> 00:09:34.574
Additionally, an image can be
used beside the header text

00:09:34.574 --> 00:09:38.111
and you can also use a template
that displays a gauge provider

00:09:38.111 --> 00:09:40.346
instead of a third line of text.

00:09:40.346 --> 00:09:44.217
This is great
to communicate progress.

00:09:44.217 --> 00:09:46.953
Let’s create a graphic
rectangular complication

00:09:46.953 --> 00:09:48.288
that provides a header text

00:09:48.288 --> 00:09:51.124
and a big full-color image
below it.

00:09:51.124 --> 00:09:52.792
First, we need to instantiate

00:09:52.792 --> 00:09:56.029
our graphic rectangular
large image template.

00:09:56.029 --> 00:09:58.398
The next step is to create
a text provider

00:09:58.398 --> 00:09:59.899
with our header text.

00:09:59.899 --> 00:10:02.001
Again, this can be
a text provider

00:10:02.001 --> 00:10:05.004
that is made up
of multiple text providers.

00:10:05.004 --> 00:10:08.007
Finally, we create
a full-color image provider

00:10:08.007 --> 00:10:10.310
with an image of our data.

00:10:10.310 --> 00:10:13.847
Some key points to keep in mind
as you create complications

00:10:13.847 --> 00:10:17.784
for the new Infograph and
Infograph Modular watch faces

00:10:17.784 --> 00:10:20.954
are that the update
opportunities remain the same.

00:10:20.954 --> 00:10:24.090
You have 50 guaranteed
complication push updates

00:10:24.090 --> 00:10:25.825
every 24 hours,

00:10:25.825 --> 00:10:28.995
as well as the possibility
of an update each hour

00:10:28.995 --> 00:10:32.365
if your app is taking advantage
of background app refresh

00:10:32.365 --> 00:10:34.267
or is in the most
recently used apps

00:10:34.267 --> 00:10:37.437
on the person’s Apple Watch.

00:10:37.437 --> 00:10:40.139
As you take advantage
of the graphic circular

00:10:40.139 --> 00:10:42.242
and graphic
rectangular families,

00:10:42.242 --> 00:10:44.410
be aware that there are
potential CPU

00:10:44.410 --> 00:10:47.981
and update time thresholds
while you get your data,

00:10:47.981 --> 00:10:50.283
process it,
and render images,

00:10:50.283 --> 00:10:53.052
so do this work quickly.

00:10:53.052 --> 00:10:54.787
For full-color image providers,

00:10:54.787 --> 00:10:58.024
use the accessibility
label property to provide

00:10:58.024 --> 00:11:01.427
meaningful information
to people using VoiceOver.

00:11:01.427 --> 00:11:04.831
This is especially important
for graphic circular templates

00:11:04.831 --> 00:11:06.266
using only an image,

00:11:06.266 --> 00:11:08.735
as there will be
no accompanying text,

00:11:08.735 --> 00:11:09.669
as well as for

00:11:09.669 --> 00:11:12.438
the graphic rectangular
large image template,

00:11:12.438 --> 00:11:15.608
which allows for a lot of data
to be represented.

00:11:15.608 --> 00:11:17.510
For more information
on creating

00:11:17.510 --> 00:11:21.047
the new graphic complications
using the ClockKit framework,

00:11:21.047 --> 00:11:24.050
please visit the Apple developer
documentation

00:11:24.050 --> 00:11:26.452
at developer.apple.com.

00:11:26.452 --> 00:11:29.622
The watchOS Sketch
and Photoshop resources

00:11:29.622 --> 00:11:31.257
in the Human Interface
Guidelines

00:11:31.257 --> 00:11:34.394
have also been updated
for Apple Watch Series 4

00:11:34.394 --> 00:11:36.729
and watchOS 5.

00:11:36.729 --> 00:11:37.697
In addition,

00:11:37.697 --> 00:11:40.199
the size specifications
for each of the templates

00:11:40.199 --> 00:11:43.269
in the Graphic complication
families are shown here

00:11:43.269 --> 00:11:46.272
and can also be found in
the Human Interface Guidelines

00:11:46.272 --> 00:11:49.576
at developer.apple.com.