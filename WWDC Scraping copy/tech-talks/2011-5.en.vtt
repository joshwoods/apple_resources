WEBVTT

00:00:22.800 --> 00:01:28.100
[Transcript missing]

00:01:28.450 --> 00:01:32.350
So way back in the good old days,
you know, four or five years ago

00:01:32.350 --> 00:01:35.430
before iPhone came out,
this was the most common

00:01:35.430 --> 00:01:37.160
experience for buying software.

00:01:37.180 --> 00:01:41.130
You'd go to a physical store and
see all of these boxes on shelves,

00:01:41.130 --> 00:01:44.810
and they'd all be strongly branded
to the product and to the company

00:01:44.830 --> 00:01:46.160
that is selling the product.

00:01:46.160 --> 00:01:49.230
And you could pick up one of these boxes,
flip it over,

00:01:49.300 --> 00:01:53.250
and see more details about the
software that you were about to buy.

00:01:53.260 --> 00:01:57.280
For example, maybe some screenshots and
a short text description.

00:01:58.480 --> 00:02:01.700
And in a lot of ways,
this experience is really mimicked

00:02:01.700 --> 00:02:03.590
virtually on the App Store.

00:02:03.600 --> 00:02:08.980
So this is the new and noteworthy section
of the games category on the App Store.

00:02:09.200 --> 00:02:14.260
Each app icon is sort of analogous to
the front of a software box that you'd

00:02:14.260 --> 00:02:17.320
see in a physical real-world store.

00:02:17.600 --> 00:02:20.570
And if you were to tap
on one of these icons,

00:02:20.570 --> 00:02:23.500
you'd see more details about this app.

00:02:23.590 --> 00:02:25.760
A written description and some images.

00:02:26.030 --> 00:02:31.320
This is kind of like the back of the box
that you'd see in a real world store.

00:02:32.130 --> 00:02:35.040
So this model is great
for many types of apps,

00:02:35.160 --> 00:02:40.120
but it isn't quite right for
magazine and newspaper publications.

00:02:40.630 --> 00:02:44.740
Buying items from a newsstand
in real life is different.

00:02:44.900 --> 00:02:47.180
For one thing,
if I were to come back here week

00:02:47.250 --> 00:02:50.340
after week or month after month,
I'd see the covers of

00:02:50.340 --> 00:02:51.780
these publications change.

00:02:51.780 --> 00:02:55.780
They'd still be branded to the
company selling the publication,

00:02:55.780 --> 00:02:59.580
in many cases due to the title,
but the cover art and headlines

00:02:59.580 --> 00:03:03.820
would change to let me know what's
inside and to entice me to buy.

00:03:05.200 --> 00:03:08.600
Another way that magazines and newspapers
are different is that you can often

00:03:08.600 --> 00:03:13.990
subscribe to one of these publications
and have it delivered right to your door.

00:03:14.130 --> 00:03:17.160
So as you can see,
the experience of buying a periodical

00:03:17.160 --> 00:03:20.490
in real life is really quite a
bit different than the experience

00:03:20.560 --> 00:03:24.840
of buying a piece of software,
or what we would now call an app.

00:03:24.960 --> 00:03:27.170
And actually,
there are some aspects of the

00:03:27.170 --> 00:03:31.420
real-life Newsstand experience that
would be very handy for iOS apps that

00:03:31.420 --> 00:03:34.660
deliver magazine or newspaper content.

00:03:35.740 --> 00:03:39.680
To that end,
we introduced a new feature in iOS 5,

00:03:39.690 --> 00:03:41.400
Newsstand.

00:03:41.430 --> 00:03:44.160
Now Newsstand has two aspects to it.

00:03:44.200 --> 00:03:47.800
There is the end user aspect,
where magazine and newspaper apps are

00:03:47.800 --> 00:03:52.120
automatically collected into a single
location and displayed on a shelf

00:03:52.200 --> 00:03:55.090
similar to a real life Newsstand.

00:03:55.540 --> 00:03:59.630
And then there's the developer aspect,
a set of APIs that let you create a

00:03:59.630 --> 00:04:02.600
Newsstand app called Newsstand Kit.

00:04:02.660 --> 00:04:06.520
Using Newsstand Kit in your
app lets you do several things.

00:04:06.570 --> 00:04:10.490
You can display a cover that is
different than the standard app icon,

00:04:10.490 --> 00:04:14.310
which looks like the real world
version of your publication.

00:04:14.980 --> 00:04:18.160
You can update that cover
to reflect the latest issue,

00:04:18.160 --> 00:04:21.060
both on the user's device
and in the App Store.

00:04:21.140 --> 00:04:24.330
And most importantly,
Newsstand apps can download new

00:04:24.330 --> 00:04:27.290
content in the background so
that it's ready and waiting for

00:04:27.290 --> 00:04:29.180
users when they launch your app.

00:04:29.400 --> 00:04:32.390
Before Newsstand,
a typical scenario would be that a user

00:04:32.390 --> 00:04:36.380
would launch a magazine or newspaper
app and then they'd have to wait for

00:04:36.380 --> 00:04:38.530
the latest issue to be downloaded.

00:04:38.730 --> 00:04:41.920
If the issue was large,
this could take several minutes.

00:04:42.050 --> 00:04:45.480
So this was not a great user experience.

00:04:46.750 --> 00:04:49.540
There's one other aspect of
Newsstand that is really great,

00:04:49.540 --> 00:04:52.900
and that is that Newsstand is a
dedicated category on the App Store.

00:04:52.900 --> 00:04:57.180
So that means that magazine and
newspapers that the user has bought are

00:04:57.180 --> 00:05:01.310
collected in one place on the device,
and all magazine and newspaper apps are

00:05:01.340 --> 00:05:05.700
collected in one place on the App Store,
making it very easy for users

00:05:05.700 --> 00:05:07.580
to discover new content.

00:05:07.580 --> 00:05:11.580
There's two ways that users can
access this dedicated category.

00:05:11.580 --> 00:05:15.440
They can tap the Store button
from within Newsstand.

00:05:16.700 --> 00:05:19.580
or they can use the
App Store app or iTunes.

00:05:21.810 --> 00:05:27.130
In fact, after Newsstand made its debut,
CondiNASP published some sales data.

00:05:27.230 --> 00:05:33.460
After converting to Newsstand,
sales of single copies increased by 142%

00:05:33.600 --> 00:05:40.000
and sales of subscriptions increased
by 268%. The dedicated category on

00:05:40.000 --> 00:05:44.140
the App Store makes Newsstand apps
easy to discover and the Newsstand

00:05:44.140 --> 00:05:50.060
Kit APIs make it easier to deliver
content with a great user experience.

00:05:50.160 --> 00:05:53.490
So let's get started talking
about newsstand apps.

00:05:53.890 --> 00:05:56.440
In the first section,
I'm going to help you understand

00:05:56.440 --> 00:05:59.930
what makes a great Newsstand app and
what's expected for Newsstand apps

00:06:00.020 --> 00:06:04.470
so that you can determine whether
or not Newsstand is right for you.

00:06:07.330 --> 00:06:10.880
In the next section,
I'm going to discuss implementation,

00:06:11.020 --> 00:06:14.080
how to get started with Newsstand Kit,
considerations for the

00:06:14.080 --> 00:06:17.180
architecture of your app,
and best practices when

00:06:17.180 --> 00:06:20.110
using the Newsstand Kit APIs.

00:06:21.500 --> 00:06:24.400
And finally,
I'm going to talk about distribution,

00:06:24.520 --> 00:06:27.330
some tips for testing,
and what you need to know about iTunes

00:06:27.360 --> 00:06:29.910
Connect if you're a Newsstand app.

00:06:30.440 --> 00:06:33.900
Regarding implementation,
we went into a lot of implementation

00:06:33.900 --> 00:06:37.100
details at WWDC in 2011.

00:06:37.170 --> 00:06:42.220
I'm going to try not to repeat all of
the details at that WWDC session and

00:06:42.220 --> 00:06:46.220
instead focus on what we've learned
since Newsstand Kit was introduced.

00:06:46.360 --> 00:06:50.100
If you watch this video and decide
that Newsstand is right for you,

00:06:50.300 --> 00:06:54.480
you should definitely watch session 504,
Building Newsstand Apps,

00:06:54.480 --> 00:06:58.100
which can be found at this URL.

00:06:58.220 --> 00:07:02.870
So with that, let's get started
understanding newsstand apps.

00:07:04.480 --> 00:07:07.780
When it comes to designing
and creating a Newsstand app,

00:07:07.780 --> 00:07:11.040
there is a single great guiding
principle to keep in mind,

00:07:11.040 --> 00:07:14.540
and that is that your Newsstand
app should be like the real-world

00:07:14.770 --> 00:07:18.860
paper version of your publication,
only better.

00:07:19.210 --> 00:07:22.340
So there are a couple key points
that go along with this principle.

00:07:22.510 --> 00:07:24.430
The first point here is simple.

00:07:24.640 --> 00:07:27.430
For Newsstand,
we primarily expect to see apps

00:07:27.770 --> 00:07:30.910
that emulate publications found
at a real-world newsstand.

00:07:30.920 --> 00:07:35.040
That, of course, includes things like
newspapers and magazines.

00:07:35.080 --> 00:07:39.780
This definition might vary by region
because newsstands in different countries

00:07:39.820 --> 00:07:42.250
may carry different types of content.

00:07:43.060 --> 00:07:46.430
In all regions, however,
a Newsstand app on iOS should

00:07:46.600 --> 00:07:50.640
not include a collection of
several different titles for sale.

00:07:50.640 --> 00:07:54.900
For example, if your app currently sells
three different titles,

00:07:54.900 --> 00:07:57.960
you should create three Newsstand apps,
one for each of your

00:07:57.960 --> 00:07:59.240
three titles for sale.

00:07:59.240 --> 00:08:02.920
A Newsstand app should always
correspond to a single title.

00:08:04.570 --> 00:08:06.650
Finally,
you might be considering Newsstand

00:08:06.650 --> 00:08:11.280
so that your app can use the feature
that allows background downloading.

00:08:11.370 --> 00:08:14.920
If you're only considering Newsstand to
take advantage of this feature and your

00:08:15.040 --> 00:08:19.330
app doesn't contain any print content,
then Newsstand is probably

00:08:19.330 --> 00:08:20.710
not right for you.

00:08:22.350 --> 00:08:25.540
The second point is that you should
use familiar models to sell and

00:08:25.540 --> 00:08:28.040
distribute content within your app.

00:08:28.230 --> 00:08:30.580
The first model of content
delivery is simple.

00:08:30.910 --> 00:08:34.520
You can offer individual issues
for sale within your Newsstand

00:08:34.520 --> 00:08:37.350
app as non-consumable items.

00:08:37.570 --> 00:08:40.400
But what about this model,
where something is delivered to

00:08:40.400 --> 00:08:45.740
the user automatically without
any explicit user action?

00:08:45.950 --> 00:08:50.230
Well, let's start by taking a look at
how this works behind the scenes.

00:08:50.520 --> 00:08:53.830
There are three components involved here:
your server,

00:08:53.900 --> 00:08:58.240
the Apple Push Notification Service,
and the user's device.

00:08:58.560 --> 00:09:02.390
Your server sends a message to the
Apple Push Notification Service,

00:09:02.500 --> 00:09:05.360
which in turn sends a notification.

00:09:05.530 --> 00:09:08.210
You're in control of when
this notification is sent,

00:09:08.210 --> 00:09:12.500
and you control which devices
the notification is sent to.

00:09:12.590 --> 00:09:16.260
To initiate background downloading,
the payload of this notification

00:09:16.550 --> 00:09:19.740
should be contentAvailable = 1.

00:09:21.570 --> 00:09:24.150
When the iPhone or iPad
receives the notification,

00:09:24.260 --> 00:09:26.540
your app is woken up in the background.

00:09:26.550 --> 00:09:30.470
It's then able to request
content from your server and

00:09:30.470 --> 00:09:32.790
download the latest issue.

00:09:33.080 --> 00:09:38.050
Your Newsstand app is allowed one
background download in a 24-hour period.

00:09:38.610 --> 00:09:40.450
So as you can see,
all of this is happening

00:09:40.510 --> 00:09:42.260
automatically in the background.

00:09:42.350 --> 00:09:46.250
The user hasn't taken any explicit
action to download the latest issue.

00:09:46.350 --> 00:09:50.170
So how does a user opt in to
receiving content in this way?

00:09:50.360 --> 00:09:53.620
How do they know that they
should expect and anticipate new

00:09:53.620 --> 00:09:55.840
content from your Newsstand app?

00:09:56.560 --> 00:09:59.830
Well, the best approach for this type
of automatic delivery of content

00:10:00.160 --> 00:10:03.180
is to offer it via a subscription.

00:10:03.500 --> 00:10:08.640
In fact, all Newsstand apps must offer
a subscription for sale.

00:10:09.100 --> 00:10:12.300
There are two types of subscriptions
available for Newsstand apps:

00:10:12.430 --> 00:10:16.480
auto-renewable subscriptions
and free subscriptions.

00:10:16.790 --> 00:10:20.780
Auto-renewable subscriptions are
available to any type of app on iOS,

00:10:20.970 --> 00:10:26.040
but free subscriptions are something new
that we created just for Newsstand apps.

00:10:26.700 --> 00:10:29.220
If you're delivering an issue
as part of a subscription,

00:10:29.220 --> 00:10:32.740
that issue must be delivered
via a background download.

00:10:32.930 --> 00:10:36.160
When a user subscribes to your content,
they're going to expect it to

00:10:36.180 --> 00:10:39.910
be ready and waiting for them
when they launch your app.

00:10:40.200 --> 00:10:43.860
Don't attempt to download the issue
after the user has launched your app.

00:10:43.910 --> 00:10:48.120
Making the user wait in that way is
exactly the kind of poor user experience

00:10:48.500 --> 00:10:51.460
that Newsstand was designed to alleviate.

00:10:51.460 --> 00:10:57.690
So there are quite a few benefits to
letting users subscribe to your content.

00:10:58.000 --> 00:11:01.360
The first is that users will
come to expect and anticipate

00:11:01.800 --> 00:11:04.000
new issues of your publication.

00:11:04.180 --> 00:11:07.830
Not only will they be looking
forward to receiving new content,

00:11:07.840 --> 00:11:10.240
but you know as your
app receives new issues,

00:11:10.240 --> 00:11:13.140
the size of your app is
going to grow over time.

00:11:13.210 --> 00:11:15.860
If a user hasn't opted
into a subscription,

00:11:15.910 --> 00:11:18.890
they might be wondering why your
app is getting larger and larger

00:11:18.910 --> 00:11:22.980
when they look at it in Settings,
and they might even delete it.

00:11:23.690 --> 00:11:27.530
Auto-renewable subscriptions let
you offer an opt-in incentive.

00:11:27.880 --> 00:11:30.510
For some publishers,
it's very important to collect the

00:11:30.510 --> 00:11:34.180
user's contact information so that
they can market to them later on.

00:11:34.180 --> 00:11:38.740
With an auto-renewable subscription,
you can offer them a free issue or even

00:11:38.740 --> 00:11:43.320
a few free issues of your publication
in exchange for their contact info.

00:11:43.760 --> 00:11:46.280
Auto-renewable subscriptions,
as their name suggests,

00:11:46.280 --> 00:11:47.380
renew automatically.

00:11:47.430 --> 00:11:51.800
This means the user can opt out
of a subscription at any time,

00:11:51.800 --> 00:11:54.600
but if they choose not to,
then it will renew automatically.

00:11:57.220 --> 00:12:00.200
Free subscriptions never expire,
so there's very little action that

00:12:00.210 --> 00:12:01.750
you have to take once they're set up.

00:12:01.930 --> 00:12:04.100
No expiration date to check on.

00:12:04.100 --> 00:12:07.340
And finally,
using a subscription lets you

00:12:07.440 --> 00:12:10.100
focus on creating great content.

00:12:10.150 --> 00:12:14.070
You don't have to come up with a new way
to deliver content on an ongoing basis.

00:12:14.240 --> 00:12:17.540
You can just use our APIs and
our infrastructure for this,

00:12:17.770 --> 00:12:21.410
and you don't have to spend
your time reinventing the wheel.

00:12:22.510 --> 00:12:24.830
Okay, so that's it for subscriptions.

00:12:24.910 --> 00:12:27.760
A subscription is the right model
for delivering issues to your

00:12:27.760 --> 00:12:30.640
app via background downloading.

00:12:30.810 --> 00:12:33.350
But, as I mentioned earlier,
your Newsstand app is only

00:12:33.350 --> 00:12:37.280
allowed to perform one background
download in a 24-hour period.

00:12:37.480 --> 00:12:39.810
For some apps,
delivering up-to-the-minute

00:12:39.910 --> 00:12:43.980
breaking news is just as critical
as delivering a standalone issue.

00:12:44.180 --> 00:12:48.020
Newsstand apps can also update themselves
with breaking news throughout the day.

00:12:48.020 --> 00:12:50.420
To do this,
you'll have to download a small amount

00:12:50.420 --> 00:12:52.320
of content when the app is launched.

00:12:52.490 --> 00:12:54.500
Remember,
this should only take a few seconds

00:12:54.500 --> 00:12:59.130
because you should only be downloading
a few pieces of breaking news.

00:12:59.640 --> 00:13:02.730
Also, remember that although your
Newsstand app can receive a

00:13:02.730 --> 00:13:06.400
special kind of notification to
initiate a background download,

00:13:06.450 --> 00:13:08.880
it can also receive other
types of notifications.

00:13:08.880 --> 00:13:12.330
This means that you can deliver
notifications with a message,

00:13:12.330 --> 00:13:14.740
such as the headline of a breaking story.

00:13:14.760 --> 00:13:17.810
And this is actually a
really nice experience with

00:13:17.810 --> 00:13:19.970
Notification Center on iOS 5.

00:13:20.300 --> 00:13:23.440
So here,
I've put my iPad aside for a few hours,

00:13:23.440 --> 00:13:26.370
and when I came back to it,
I had several notifications

00:13:26.370 --> 00:13:28.680
waiting for me,
letting me know about breaking news

00:13:28.760 --> 00:13:30.560
that was happening throughout the day.

00:13:33.000 --> 00:13:36.320
So just to recap the different ways
that you can sell and distribute

00:13:36.380 --> 00:13:39.080
content in your Newsstand app.

00:13:39.200 --> 00:13:43.070
You can have a Newsstand app
that offers only a subscription.

00:13:43.380 --> 00:13:47.100
You can have a Newsstand app that
offers a subscription and individual

00:13:47.100 --> 00:13:50.200
non-consumable items for sale.

00:13:50.290 --> 00:13:54.050
Your Newsstand app can
optionally offer breaking news.

00:13:54.450 --> 00:13:57.900
But you can't have a Newsstand
app that offers only individual,

00:13:57.900 --> 00:14:00.900
non-consumable items for sale.

00:14:01.070 --> 00:14:05.300
And you can't have a Newsstand app
that offers only breaking news.

00:14:07.110 --> 00:14:10.380
So that's it for models
of content delivery.

00:14:11.000 --> 00:14:13.800
And the third point is to
remember to create content that

00:14:13.800 --> 00:14:16.240
is optimized for the platform.

00:14:16.290 --> 00:14:19.430
A lot of this advice might sound
familiar to you if you've used

00:14:19.430 --> 00:14:23.090
an iPad or an iPhone before,
but I just want to drive home a

00:14:23.090 --> 00:14:27.990
few key points that are relative
to magazine and newspaper content.

00:14:28.990 --> 00:14:31.700
The first is to take
advantage of the display.

00:14:31.770 --> 00:14:34.660
iPads and iPhones have
really beautiful displays,

00:14:34.680 --> 00:14:38.900
and the best magazines and newspapers
definitely take advantage of it.

00:14:39.050 --> 00:14:43.240
On the left, we see this beautiful cover
art for Wired Magazine.

00:14:43.350 --> 00:14:45.810
On the right,
the layout on the inside is putting

00:14:45.810 --> 00:14:50.060
the photograph front and center,
using an interesting font for the title,

00:14:50.270 --> 00:14:54.370
and an interesting layout to
navigate through the article.

00:14:55.080 --> 00:14:57.940
You should also remember to
take advantage of iPhone and

00:14:57.940 --> 00:15:00.000
iPad's multi-touch interface.

00:15:00.140 --> 00:15:03.270
So lots of apps have
swiping between pages,

00:15:03.290 --> 00:15:05.600
but you can take advantage
of the multi-touch interface

00:15:05.600 --> 00:15:08.000
within a single page as well.

00:15:08.120 --> 00:15:11.150
So on the left we have this
photograph of this machine,

00:15:11.300 --> 00:15:14.180
and as I tap different
areas of this display,

00:15:14.210 --> 00:15:17.710
I get more information
about this machine.

00:15:18.600 --> 00:15:21.780
On the right hand side,
we have a timeline implemented of

00:15:21.780 --> 00:15:26.680
the Ghostbusters movie franchise,
so a user can swipe right and left to

00:15:26.680 --> 00:15:29.820
get more information from this timeline.

00:15:32.050 --> 00:15:35.990
Finally,
remember to utilize iOS SDK technologies

00:15:36.390 --> 00:15:38.840
within your Newsstand app.

00:15:38.880 --> 00:15:42.480
So these devices, iPads and iPhones,
they're always connected.

00:15:42.510 --> 00:15:46.370
So you can easily tap a link to
send an email or make a phone call

00:15:46.470 --> 00:15:48.320
from within your Newsstand app.

00:15:50.700 --> 00:15:55.940
Audio and video is a great way to
supplement the written print experience.

00:15:56.110 --> 00:15:59.200
And don't forget about
the rest of the iOS SDK.

00:15:59.380 --> 00:16:02.950
Your Newsstand app should be like
your real-world paper publication,

00:16:02.950 --> 00:16:04.080
only better.

00:16:04.260 --> 00:16:09.360
Use APIs that you might think at first
are atypical for a magazine or newspaper.

00:16:09.550 --> 00:16:13.940
For example, you could use the Location
APIs to deliver content that is

00:16:13.950 --> 00:16:16.360
specific to that user's location.

00:16:16.510 --> 00:16:20.790
Or you could use the Twitter APIs to
allow a user to tweet about an article

00:16:20.840 --> 00:16:23.360
that they've read within your app.

00:16:23.760 --> 00:16:27.410
So that's it for
understanding Newsstand apps.

00:16:27.550 --> 00:16:31.360
Now let's move on to
implementing Newsstand apps.

00:16:33.600 --> 00:16:36.470
So as you know,
Newsstand has this really great display.

00:16:36.550 --> 00:16:39.260
It's this beautiful shelf with
all of these publications kind

00:16:39.260 --> 00:16:41.290
of lying against the shelf.

00:16:41.290 --> 00:16:45.250
And it's actually pretty easy to make
your app appear in the Newsstand.

00:16:47.440 --> 00:16:51.890
All that you have to do is set a
single key in your Info.plist file.

00:16:51.890 --> 00:16:55.710
You set the key UINewsstandApp to true.

00:16:56.190 --> 00:16:56.760
And there you go.

00:16:57.050 --> 00:17:00.500
Your app is now appearing
in the Newsstand.

00:17:00.640 --> 00:17:05.140
So even though my app is showing up,
it's a white star on a blue background,

00:17:05.270 --> 00:17:08.770
my application icon doesn't look
as good as everything else that's

00:17:08.820 --> 00:17:10.340
currently in the Newsstand.

00:17:10.490 --> 00:17:14.740
That's because my app icon is still
using the standard app icon and

00:17:14.740 --> 00:17:19.200
I should be supplying a special
icon that's just for Newsstand.

00:17:19.390 --> 00:17:22.000
So the first thing that you need
to do is create the cover art

00:17:22.160 --> 00:17:23.790
for your Newsstand app icon.

00:17:24.280 --> 00:17:27.790
Like any iOS icon,
you should start with a flat image.

00:17:27.820 --> 00:17:31.970
And there are different size
recommendations for different devices.

00:17:32.280 --> 00:17:35.220
On iPhone,
the longest edge of your Newsstand

00:17:35.220 --> 00:17:38.080
app icon art should be 90 pixels.

00:17:38.190 --> 00:17:41.020
And the longest edge can be
in the vertical direction

00:17:41.120 --> 00:17:43.780
or the horizontal direction.

00:17:44.380 --> 00:17:49.300
On iPhone 4,
the longest edge should be 180 pixels.

00:17:49.510 --> 00:17:54.730
And on iPad,
the longest edge should be 126 pixels.

00:17:55.160 --> 00:17:58.260
In all of these cases,
the aspect ratio should

00:17:58.260 --> 00:18:02.800
be between 1:2 and 2:1,
meaning that your Newsstand app

00:18:02.800 --> 00:18:05.990
icon shouldn't be dramatically
taller than it is wide or

00:18:05.990 --> 00:18:09.170
dramatically wider than it is tall.

00:18:10.230 --> 00:18:13.230
So now that we have created
the art for our Newsstand app,

00:18:13.230 --> 00:18:18.220
it's time to actually use
this art inside of our app.

00:18:19.670 --> 00:18:23.760
What we have to do here is
modify our Info.plist file.

00:18:23.900 --> 00:18:29.240
So this is what our Info.plist file
would have looked like on iOS 4.3.

00:18:29.300 --> 00:18:33.420
We have a top level
CFBundle icon files key,

00:18:33.420 --> 00:18:37.540
and the value for that key is an
array of strings that point to

00:18:37.540 --> 00:18:40.590
all of our different icon files.

00:18:42.520 --> 00:18:48.470
In iOS 5, for Newsstand,
there's a new top-level Info.plist key.

00:18:49.440 --> 00:18:53.380
That key is called CFBundle Icons
and it lets you point to a

00:18:53.380 --> 00:18:55.540
dictionary of icon styles.

00:18:55.670 --> 00:18:59.220
We're going to be using two different
styles in our Newsstand app:

00:18:59.350 --> 00:19:04.270
CFBundle Primary Icon
and UI Newsstand Icon.

00:19:07.010 --> 00:19:11.380
So let's go back to our Info.plist file.

00:19:11.460 --> 00:19:14.060
At the top level,
we're going to have our new key,

00:19:14.060 --> 00:19:16.170
CFBundleIcons.

00:19:17.030 --> 00:19:22.500
Then we have a dictionary where the
first key is CFBundle primary icon.

00:19:24.300 --> 00:19:28.750
And the value for that key is
really just what we saw in our

00:19:28.800 --> 00:19:31.800
Info.plist file for iOS 4.3.

00:19:31.810 --> 00:19:34.410
In fact,
we could have just copied and pasted

00:19:34.700 --> 00:19:37.670
from that file into this new file.

00:19:39.140 --> 00:19:42.600
We're going to collapse that area.

00:19:42.770 --> 00:19:45.980
And we're going to add a
new Newsstand style key,

00:19:45.980 --> 00:19:48.150
UI Newsstand icon.

00:19:49.690 --> 00:19:55.920
And the dictionary value for that key
is our list of CFBundle icon files that

00:19:56.070 --> 00:19:59.580
point to our different Newsstand images.

00:20:02.920 --> 00:20:05.990
So if you're looking to make a
single app that is compatible

00:20:06.090 --> 00:20:09.560
with iOS 4.3 and iOS 5,
there's good news.

00:20:09.560 --> 00:20:14.100
CFBundle Icons is required
for Newsstand apps in iOS 5,

00:20:14.100 --> 00:20:17.980
but it can coexist with icon
keys for earlier versions of iOS.

00:20:20.750 --> 00:20:26.150
You noticed that we kept our standard app
icon around with CFBundle primary icon.

00:20:26.390 --> 00:20:29.640
That's because even though our
magazine or newspaper cover is

00:20:29.800 --> 00:20:34.080
displayed inside of Newsstand,
we still need the standard app icon

00:20:34.080 --> 00:20:38.020
for other places on the system,
such as Settings, Search,

00:20:38.020 --> 00:20:39.600
and Notifications.

00:20:42.040 --> 00:20:45.110
So we've created the art
for our Newsstand app icon.

00:20:45.380 --> 00:20:47.820
We're pointing to it
in our Info.plist file.

00:20:47.820 --> 00:20:50.760
And now it's time to add
some real-world styling.

00:20:50.760 --> 00:20:55.950
So to do this, we're just going to keep
modifying our Info.plist file.

00:20:56.060 --> 00:20:59.580
So here we have our Newsstand
style key and icon files.

00:20:59.580 --> 00:21:02.980
And we're going to add
a couple more keys:

00:21:02.980 --> 00:21:08.660
UINewstandBindingType with a value
of UINewstandBindingTypeNewspaper

00:21:08.890 --> 00:21:13.740
and UINewstandBindingEdge with a
value of UINewstandBindingEdgeBottom.

00:21:13.740 --> 00:21:20.110
So this is telling iOS that
I want my Newsstand app icon

00:21:20.300 --> 00:21:23.430
to look as if it's bound like
a newspaper on the bottom edge.

00:21:23.610 --> 00:21:27.520
So there are several different
types of adornments that you can

00:21:27.580 --> 00:21:29.800
add to your Newsstand app icon.

00:21:29.970 --> 00:21:34.480
We saw a couple in our Info.plist file,
but you can specify a

00:21:34.560 --> 00:21:36.500
UINewstandBindingType magazine.

00:21:36.500 --> 00:21:40.700
That will add two adornments
to your Newsstand app icon.

00:21:40.700 --> 00:21:44.580
It'll give you staples on one
side and a little stack of

00:21:44.580 --> 00:21:46.780
pages on the opposite side.

00:21:47.430 --> 00:21:51.500
If you specify UI Newsstand
binding type newspaper,

00:21:51.500 --> 00:21:54.840
your Newsstand app will get this
sort of stacked effect where it

00:21:54.840 --> 00:21:56.740
looks like a stack of papers.

00:21:56.800 --> 00:22:02.430
And you'll see a subtle shading on
the bound edge to indicate a fold.

00:22:02.540 --> 00:22:06.580
So these are the two binding types,
UI Newsstand binding type magazine and

00:22:06.580 --> 00:22:09.540
UI Newsstand binding type newspaper.

00:22:09.770 --> 00:22:13.480
Magazines can be bound on
the left or right edge,

00:22:13.540 --> 00:22:16.070
and newspapers can be
bound on the left edge,

00:22:16.260 --> 00:22:19.000
the right edge, or the bottom edge.

00:22:19.930 --> 00:22:23.100
So we can add these decorations
to our Newsstand app icon

00:22:23.100 --> 00:22:26.360
by modifying Info.plist,
but when exactly are

00:22:26.360 --> 00:22:28.370
they supposed to show up?

00:22:28.730 --> 00:22:30.560
Well,
I like to say that these decorations

00:22:30.560 --> 00:22:35.540
are displayed when your publication
is off the shelf or lying flat.

00:22:35.660 --> 00:22:40.130
So this means that the staples and
stacks decorations will show up in the

00:22:40.130 --> 00:22:44.210
app switcher and also in the app store.

00:22:47.080 --> 00:22:52.540
These decorations are not applied when
your Newsstand app is lying on the shelf.

00:22:52.610 --> 00:22:55.080
In this case,
a 3D transform is going to be

00:22:55.080 --> 00:22:58.420
automatically applied to give
perspective to your Newsstand app

00:22:58.500 --> 00:23:02.380
icon and make it look like it's
lying flat against that angled shelf.

00:23:02.450 --> 00:23:06.580
In this view, if you specify a binding
type of newspaper and a

00:23:06.580 --> 00:23:10.400
binding edge of the bottom,
you'll see a subtle shading

00:23:10.400 --> 00:23:14.800
effect to indicate a fold at the
bottom of your newspaper icon.

00:23:14.870 --> 00:23:18.960
So far, I've talked a lot about the
appearance of Newsstand apps,

00:23:18.960 --> 00:23:20.610
but what about the behavior?

00:23:20.730 --> 00:23:23.650
Specifically,
how do we enable this experience

00:23:23.830 --> 00:23:27.690
where content is automatically
delivered to the user?

00:23:28.380 --> 00:23:30.190
While we've seen this
diagram once before,

00:23:30.410 --> 00:23:35.400
let's take a closer look at how to
enable automatic content delivery.

00:23:38.080 --> 00:23:42.770
The first thing that you have to do is
register for Newsstand notifications.

00:23:42.990 --> 00:23:46.320
There's a new notification type in iOS 5.

00:23:46.460 --> 00:23:51.560
That's UI Remote Notification
Type Newsstand Content Availability.

00:23:52.660 --> 00:23:56.360
You also have to set a key in
your Info.plist file to enable

00:23:56.480 --> 00:23:59.050
the Newsstand background mode.

00:23:59.560 --> 00:24:02.680
This key is Newsstand Content,
and this is what lets your

00:24:02.680 --> 00:24:06.850
Newsstand app be launched in the
background and perform the download.

00:24:09.840 --> 00:24:13.300
Finally, your Newsstand app has
to support multitasking.

00:24:13.340 --> 00:24:16.400
So if you're bringing over an
existing newspaper or magazine

00:24:16.400 --> 00:24:21.590
app over from iOS 4.3 to iOS 5,
make sure that you do not have

00:24:21.790 --> 00:24:25.560
the UI exit on suspend key set.

00:24:25.560 --> 00:24:28.240
So now we know how to
enable this notification.

00:24:28.340 --> 00:24:30.860
What else do we need to know about it?

00:24:30.900 --> 00:24:34.940
Well, as I mentioned before,
your Newsstand app is only allowed one

00:24:34.940 --> 00:24:38.590
background download in a 24-hour period.

00:24:39.000 --> 00:24:41.660
The reason for this is
to preserve battery life.

00:24:41.730 --> 00:24:45.780
If there were several Newsstand apps on
a device and they were all allowed to

00:24:45.780 --> 00:24:50.210
download new content throughout the day,
this would be a lot of network

00:24:50.210 --> 00:24:52.590
activity that would drain the battery.

00:24:52.900 --> 00:24:57.620
You can send additional notifications
to the device to attempt to

00:24:57.620 --> 00:25:01.570
initiate a background download,
but if there's more than

00:25:01.570 --> 00:25:05.290
one in a 24-hour period,
those additional notifications

00:25:05.320 --> 00:25:07.130
are just going to be ignored.

00:25:07.380 --> 00:25:09.470
So there's a little bit of
flex time built in here,

00:25:09.740 --> 00:25:14.820
meaning that if you are always
sending out your publication at 5 a.m.

00:25:14.820 --> 00:25:17.160
every morning,
but one day you're running late,

00:25:17.270 --> 00:25:19.720
or maybe the power is out,
or there's a problem with the server,

00:25:19.720 --> 00:25:24.220
and you have to ship your
issue at 5.03 or 5.04 or 5.05,

00:25:24.220 --> 00:25:27.990
so you might wonder if you always
have to ship your issue at 5.05

00:25:27.990 --> 00:25:31.130
the next day and the day after
that and the day after that.

00:25:31.440 --> 00:25:32.760
Well, the answer is no.

00:25:32.760 --> 00:25:35.060
There's a little bit of
flex time built in here,

00:25:35.340 --> 00:25:37.410
but it's on the order of minutes,
not hours,

00:25:37.510 --> 00:25:41.400
and it's not something that you should
rely on for your implementation.

00:25:41.400 --> 00:25:45.940
If your app can only perform one
background download in a 24-hour period,

00:25:45.940 --> 00:25:48.960
you might be wondering
how you're going to test.

00:25:50.620 --> 00:25:55.310
Well, there is a user default that you
can set to disable this throttle.

00:25:55.420 --> 00:25:58.630
It's called NK Don't Throttle
Newsstand Content Notifications.

00:25:58.640 --> 00:26:02.000
And if you set this default,
your Newsstand app will be able

00:26:02.000 --> 00:26:06.220
to perform background downloads
more than once in a 24-hour period.

00:26:06.220 --> 00:26:09.920
Just be sure to remove this before
you submit your app to the App Store.

00:26:13.490 --> 00:26:16.920
It's also important to understand
how the notification settings

00:26:16.920 --> 00:26:19.470
work for Newsstand apps.

00:26:20.260 --> 00:26:23.890
On the left, we're looking at all of the
settings for notifications for

00:26:23.940 --> 00:26:26.200
all of the apps on the system.

00:26:26.280 --> 00:26:29.200
Here, a user can toggle whether
or not they want to receive

00:26:29.200 --> 00:26:34.530
different types of notifications,
such as alerts, badges, and messages,

00:26:34.530 --> 00:26:36.190
from certain apps.

00:26:36.810 --> 00:26:39.450
On the right,
we're looking at Store Settings.

00:26:39.450 --> 00:26:43.440
And this is what a user looks at if they
want to enable or disable background

00:26:43.470 --> 00:26:45.980
downloading for your Newsstand app.

00:26:46.100 --> 00:26:49.980
So the way it works is a user
downloads your app and they receive

00:26:50.160 --> 00:26:55.560
the initial prompt asking them to allow
your app to receive notifications.

00:26:55.650 --> 00:26:59.860
If they say yes, then both of these
preferences are set to true.

00:26:59.930 --> 00:27:02.490
If they say no, they're both disabled.

00:27:02.680 --> 00:27:06.820
So remember that your app should be
ready for any possible configuration

00:27:06.910 --> 00:27:08.690
of these separate settings.

00:27:08.840 --> 00:27:12.350
So now you have sent a
notification to the device.

00:27:12.710 --> 00:27:13.710
It has been received.

00:27:13.970 --> 00:27:15.380
What happens next?

00:27:15.450 --> 00:27:17.640
Well, there's two possible scenarios.

00:27:17.730 --> 00:27:22.880
The first is that your app is not running
once the notification has been received.

00:27:22.940 --> 00:27:27.540
In this case, your app is launched in the
background and it's up to you to

00:27:27.540 --> 00:27:31.960
begin downloading all of the assets,
the text, images, et cetera,

00:27:32.070 --> 00:27:33.640
for your publication.

00:27:33.660 --> 00:27:37.170
An application did finish
launching with options.

00:27:38.070 --> 00:27:43.460
If the iPad or iPhone is on Wi-Fi,
the downloads will start immediately.

00:27:43.530 --> 00:27:48.760
If the iPad or iPhone is on 3G,
the downloads will be queued either until

00:27:48.760 --> 00:27:53.300
the app is brought to the foreground or
until the device joins a Wi-Fi network.

00:27:55.330 --> 00:27:59.310
Also, be aware that if you're combining
the content available payload with

00:27:59.340 --> 00:28:02.190
another payload in your notification,
such as an alert,

00:28:02.420 --> 00:28:05.310
the alert will not be shown in this case.

00:28:05.940 --> 00:28:09.000
The second scenario is that the
notification is received on the

00:28:09.010 --> 00:28:13.770
iPhone or iPad and your app is
already running and in the foreground.

00:28:14.360 --> 00:28:17.200
Just like any type of notification,
when your app is already

00:28:17.200 --> 00:28:19.730
running in the foreground,
it's up to your app to

00:28:19.730 --> 00:28:21.780
handle that notification.

00:28:22.620 --> 00:28:25.860
In this case, you're going to start
downloading the assets for your

00:28:25.970 --> 00:28:29.570
publication if the application
did receive remote notification.

00:28:29.830 --> 00:28:31.860
When the app is running
in the foreground,

00:28:32.070 --> 00:28:37.540
downloading will start immediately
whether the device is on 3G or Wi-Fi.

00:28:37.910 --> 00:28:41.400
Now the notification to initiate
the background download has been

00:28:41.400 --> 00:28:44.700
received on the device and it's
time to start downloading all

00:28:44.700 --> 00:28:50.530
of the assets such as images,
text, and media that comprise your issue.

00:28:50.680 --> 00:28:53.860
We recommend, if possible,
delivering all of these files

00:28:54.250 --> 00:28:57.140
via a single compressed zip file.

00:28:57.210 --> 00:29:00.420
This is better for system performance
because we don't always have to

00:29:00.950 --> 00:29:04.940
continuously wake up your app to let
it know that a download has finished.

00:29:05.000 --> 00:29:08.900
And it's a little bit easier
to code inside of your app.

00:29:10.120 --> 00:29:12.740
If it's not possible to group
all of the assets for your

00:29:12.770 --> 00:29:16.480
issue into a single download,
maybe because of your company's

00:29:16.570 --> 00:29:19.500
content infrastructure,
you should at least group these

00:29:19.500 --> 00:29:21.100
downloads into logical sets.

00:29:21.340 --> 00:29:24.100
For example,
all of the images and text that

00:29:24.100 --> 00:29:29.130
I need for the front page or for a
recent story would be one logical set.

00:29:30.280 --> 00:29:34.700
Once you begin downloading
individual assets for an issue,

00:29:34.760 --> 00:29:38.040
these downloads cannot be prioritized.

00:29:38.090 --> 00:29:41.880
Always remember to reconnect
when your app wakes up and

00:29:41.880 --> 00:29:44.260
complete any unfinished downloads.

00:29:44.380 --> 00:29:47.680
Otherwise, over time,
these downloads will be considered

00:29:47.680 --> 00:29:49.720
abandoned and eventually deleted.

00:29:49.960 --> 00:29:53.270
Once you have downloaded
an issue to the device,

00:29:53.530 --> 00:29:57.490
you should remember to always
organize your issues with NK Library.

00:29:57.590 --> 00:30:01.800
NK Library provides a persistent
state for available issues,

00:30:01.870 --> 00:30:04.520
ongoing downloads,
and it lets you mark the issue

00:30:04.520 --> 00:30:06.430
that is currently being read.

00:30:06.680 --> 00:30:11.100
Each real-world issue that is
downloaded by your app should

00:30:11.100 --> 00:30:13.270
correspond to an NK issue.

00:30:13.460 --> 00:30:18.140
You can create issues with a unique
name and publication date and add

00:30:18.140 --> 00:30:20.900
them to your Newsstand library.

00:30:21.450 --> 00:30:24.350
It's also possible to
maintain a repository for each

00:30:24.350 --> 00:30:25.970
issue within your library.

00:30:26.210 --> 00:30:29.390
Just access the content
URL for your NK issue.

00:30:31.040 --> 00:30:34.230
As you're downloading
issues of your publication,

00:30:34.240 --> 00:30:38.180
each real-world issue should
correspond to an NK issue.

00:30:38.380 --> 00:30:43.690
You can use NK Issue to create an issue
with a unique name and publication date.

00:30:45.870 --> 00:30:51.170
You can use NKissue to access the
repository of assets for a single issue.

00:30:51.500 --> 00:30:55.330
And you can provide an NK issue
to set currently reading issue

00:30:55.670 --> 00:30:59.460
to track the issue that is
currently being read by the user.

00:30:59.820 --> 00:31:02.900
When you download an issue
with the Newsstand Kit APIs,

00:31:02.900 --> 00:31:07.490
Newsstand Kit provides a managed
repository for your issues.

00:31:07.640 --> 00:31:12.240
This directory is not backed
up automatically via iCloud.

00:31:12.400 --> 00:31:14.990
And as I mentioned,
issues are put in this repository

00:31:15.410 --> 00:31:19.030
either by downloading them
with the Newsstand Kit APIs,

00:31:19.040 --> 00:31:22.620
or you could move them to the right
location after you have downloaded

00:31:22.620 --> 00:31:24.770
all of the assets for your issue.

00:31:25.380 --> 00:31:29.490
The Newsstand Kit Managed
Repository acts as a cache.

00:31:29.490 --> 00:31:33.060
And given that it's a cache,
issues may be evicted from the

00:31:33.150 --> 00:31:34.960
cache when system resources run low.

00:31:35.040 --> 00:31:37.640
And in this case,
the system resource that we're really

00:31:37.640 --> 00:31:39.240
concerned about is available space.

00:31:39.240 --> 00:31:43.870
However, information that you provide
helps Newsstand Kit prioritize

00:31:43.870 --> 00:31:46.380
which content should be preserved.

00:31:47.240 --> 00:31:51.220
So if there's very little space left on
the device and issues have to be deleted,

00:31:51.220 --> 00:31:55.180
you can tell Newsstand that you want
to preserve the issues that are marked

00:31:55.270 --> 00:31:59.020
with the Currently Reading Issue
property and the issue that you have

00:31:59.040 --> 00:32:02.260
most recently added to your NK library.

00:32:02.260 --> 00:32:05.280
So Newsstand will look at
the date parameter and add

00:32:05.280 --> 00:32:06.930
issue with name and date.

00:32:07.020 --> 00:32:10.940
So you might be thinking that you want
to guard against the scenario where an

00:32:10.940 --> 00:32:13.400
issue of yours could possibly be deleted.

00:32:13.400 --> 00:32:15.610
And you might be thinking
that you'll just move all of

00:32:15.610 --> 00:32:17.020
your issues to the document.

00:32:17.240 --> 00:32:18.990
folder.

00:32:20.070 --> 00:32:23.540
Well, I'm here to tell you do not
move issues of your publication

00:32:23.720 --> 00:32:25.820
to the Documents folder.

00:32:25.990 --> 00:32:31.190
This will significantly decrease the
amount of available space on the system.

00:32:31.370 --> 00:32:34.010
Since the Documents folder
is backed up to iCloud,

00:32:34.010 --> 00:32:38.980
this will significantly increase the
time it takes to backup a user's device.

00:32:39.030 --> 00:32:41.730
And in turn,
this will significantly decrease

00:32:41.900 --> 00:32:46.330
battery life because of all
the excess network activity.

00:32:47.750 --> 00:32:51.930
Instead, let your publications be managed
just like other publications

00:32:51.980 --> 00:32:53.840
on a system-wide basis.

00:32:54.040 --> 00:32:56.630
Remember that you should always
allow users to access the

00:32:56.630 --> 00:33:00.120
items that they've purchased,
even if it means letting them

00:33:00.130 --> 00:33:02.630
re-download one of those items.

00:33:03.320 --> 00:33:04.940
So that's it for implementation.

00:33:05.150 --> 00:33:08.310
Now let's move on to distribution.

00:33:10.160 --> 00:33:12.880
Before you distribute your app,
I would really encourage you

00:33:12.880 --> 00:33:15.180
to do a final round of testing.

00:33:15.310 --> 00:33:19.080
Try to prevent those one-star
reviews before they happen.

00:33:19.280 --> 00:33:23.560
Walk through the user experience from
start to finish and ask yourself:

00:33:23.610 --> 00:33:27.040
Are users downloading a
magazine or just a store?

00:33:27.110 --> 00:33:31.700
I've perused the one-star reviews
for Newsstand apps on the App Store,

00:33:31.720 --> 00:33:35.160
and one of the biggest complaints
is that users will download a free

00:33:35.160 --> 00:33:37.860
app but then not get any content.

00:33:37.960 --> 00:33:41.060
Not a single article, not a single issue.

00:33:41.180 --> 00:33:43.950
If users don't know what
your content even looks like,

00:33:44.190 --> 00:33:47.290
how will they know that
they want to purchase more?

00:33:47.900 --> 00:33:51.040
Are you offering to restore purchases?

00:33:51.090 --> 00:33:54.120
In this day and age,
users have multiple devices,

00:33:54.300 --> 00:33:57.710
they're deleting apps,
and when your app is downloaded

00:33:57.850 --> 00:34:01.370
to a different device or
restored after it's been deleted,

00:34:01.670 --> 00:34:05.750
offering to restore all of the purchases
is a great convenience for all users.

00:34:05.780 --> 00:34:09.390
Is your content intuitively
easy to navigate?

00:34:09.420 --> 00:34:13.990
So many Newsstand apps that I've
downloaded and tried out start off with

00:34:14.070 --> 00:34:18.400
a splash screen that has instructions
on how to navigate the content.

00:34:18.530 --> 00:34:23.510
For example, tap three times in the upper
left corner to go home.

00:34:23.510 --> 00:34:23.510
If you

00:34:23.700 --> 00:34:26.700
You might think that these type
of instructions are a service,

00:34:26.700 --> 00:34:30.640
but typically what happens is the user
dismisses this dialogue and then the

00:34:30.730 --> 00:34:32.660
instructions are difficult to remember.

00:34:32.920 --> 00:34:36.130
So you're better off just making
your content intuitively easy

00:34:36.130 --> 00:34:38.040
to navigate from the beginning.

00:34:38.170 --> 00:34:41.530
And finally,
are newly downloaded issues easy to find?

00:34:41.710 --> 00:34:45.260
There's nothing more frustrating
than purchasing a new issue and not

00:34:45.260 --> 00:34:47.910
being able to read it immediately.

00:34:48.540 --> 00:34:51.530
So when you're ready to opt
into Newsstand to become a

00:34:51.560 --> 00:34:54.780
Newsstand app on the App Store,
the first thing that you're going

00:34:54.780 --> 00:34:59.680
to do is enable your status as a
Newsstand app in iTunes Connect.

00:34:59.820 --> 00:35:03.740
So this is the summary page for your app,
and in order for this Newsstand button

00:35:03.740 --> 00:35:07.240
to appear on the app summary page,
your app has to be in a

00:35:07.240 --> 00:35:09.370
pre-binary upload state.

00:35:09.520 --> 00:35:13.880
So those states are: Prepare for Upload,
Rejected, Developer Reject,

00:35:13.880 --> 00:35:16.680
Invalid Binary, or Waiting for Upload.

00:35:17.520 --> 00:35:21.030
So once you click this button,
you'll be taken to a confirmation

00:35:21.030 --> 00:35:26.300
screen that asks you if you truly
want to enable Newsstand status.

00:35:26.440 --> 00:35:29.840
Once you enable Newsstand
status for a certain binary,

00:35:29.960 --> 00:35:32.330
you cannot revoke that
status for that binary.

00:35:32.660 --> 00:35:35.460
If you want to opt out
of Newsstand later on,

00:35:35.460 --> 00:35:39.670
you'll have to revoke this
binary and resubmit another one.

00:35:40.370 --> 00:35:42.830
Once you click the Enable button,
you'll be prompted to

00:35:42.930 --> 00:35:45.220
upload a default cover.

00:35:45.360 --> 00:35:49.640
So the default cover is really shown
when there's no cover for the current

00:35:49.730 --> 00:35:52.360
issue of your publication available.

00:35:52.560 --> 00:35:56.980
This piece of art should be a generic
version of your publication's cover.

00:35:57.190 --> 00:36:00.040
It should have the title
of your publication,

00:36:00.080 --> 00:36:03.340
a generic piece of cover
art that's not timely.

00:36:03.340 --> 00:36:08.300
For instance, you wouldn't want to have
Christmas trees on your default cover.

00:36:08.380 --> 00:36:13.250
And also, this shouldn't be a cover that
you've used for a previous issue.

00:36:14.070 --> 00:36:15.940
Once you've uploaded
your default cover art,

00:36:16.050 --> 00:36:18.960
it's time to add and manage new issues.

00:36:18.960 --> 00:36:21.420
So this is what the summary page
for your app looks like after

00:36:21.510 --> 00:36:23.960
you've enabled Newsstand status.

00:36:24.100 --> 00:36:26.540
This time,
if you click the Newsstand button,

00:36:26.540 --> 00:36:31.180
you're taken to a screen like this,
where you can add and manage new issues.

00:36:31.180 --> 00:36:34.850
If you click the Add Issue button,
you're able to enter information

00:36:34.930 --> 00:36:37.860
for your publication,
such as the date that you

00:36:37.860 --> 00:36:41.760
want an issue to be published,
the end date for that issue,

00:36:41.760 --> 00:36:45.880
the issue ID, a summary,
and cover art for that issue.

00:36:48.640 --> 00:36:53.130
Now, if you're only publishing new issues
once a month or even maybe once a week,

00:36:53.230 --> 00:36:56.040
it's not a problem to go into
iTunes Connect and enter all

00:36:56.050 --> 00:36:57.520
of this information manually.

00:36:57.520 --> 00:37:00.620
But if you're publishing
issues more often than that,

00:37:00.620 --> 00:37:04.120
you might want to automate
this process with an Atom Feed.

00:37:04.120 --> 00:37:08.810
The Atom Feed basically contains all of
the same information that you would have

00:37:08.810 --> 00:37:13.440
included manually in iTunes Connect,
but it's just parsed automatically.

00:37:16.740 --> 00:37:20.090
So that's it for distribution
and for all three sections:

00:37:20.160 --> 00:37:23.270
understanding Newsstand apps,
implementing Newsstand apps,

00:37:23.450 --> 00:37:25.660
and finally distributing them.

00:37:26.050 --> 00:37:30.430
In conclusion, I just want to drive
home a few key points.

00:37:30.540 --> 00:37:33.660
Remember that from the content that
you're delivering inside your app

00:37:33.910 --> 00:37:37.910
to the actual behavior of your app,
deliver a great user

00:37:37.910 --> 00:37:40.210
experience on Newsstand.

00:37:41.480 --> 00:37:45.440
Use our built-in technologies to
streamline your development and

00:37:45.440 --> 00:37:47.960
give users a familiar experience.

00:37:48.040 --> 00:37:52.070
Utilize in-app purchase and
subscriptions and use the Newsstand

00:37:52.180 --> 00:37:55.080
Kit APIs and manage repository.

00:37:55.590 --> 00:37:59.680
And finally, understand how iTunes
Connect interfaces with Newsstand apps.

00:37:59.680 --> 00:38:04.460
Remember how to enable Newsstand status
for your app and how to upload new issue

00:38:04.460 --> 00:38:07.020
information for display in the App Store.

00:38:07.020 --> 00:38:11.350
If you're looking for more information,
there are several pieces of documentation

00:38:11.360 --> 00:38:13.240
available on the iOS Dev Center.

00:38:13.240 --> 00:38:15.750
There's the Newsstand
Kit Framework Reference.

00:38:15.810 --> 00:38:20.020
There's a Tech Note that answers a
lot of frequently asked questions.

00:38:20.760 --> 00:38:23.080
And there's Guides for
Supporting Technologies,

00:38:23.080 --> 00:38:25.760
the Local and Push Notification
Programming Guide,

00:38:25.760 --> 00:38:27.800
and the In-App Purchase
Programming Guide.

00:38:27.800 --> 00:38:31.000
If you're looking for more
information about how iTunes

00:38:31.000 --> 00:38:34.600
Connect interfaces with Newsstand apps,
you can take a look at the

00:38:34.600 --> 00:38:36.280
iTunes Connect Programming Guide.

00:38:36.280 --> 00:38:40.820
And there's also a specification
available for the Newsstand Atom Feed.

00:38:42.250 --> 00:38:43.400
So that's it.

00:38:43.460 --> 00:38:47.000
By now you should know whether or
not Newsstand is right for your app,

00:38:47.090 --> 00:38:49.710
understand what is
possible with Newsstand,

00:38:49.730 --> 00:38:54.090
and have some ideas about how to
approach your Newsstand app architecture.

00:38:54.190 --> 00:38:57.100
If you have any questions about
the content of this video,

00:38:57.170 --> 00:39:03.100
you can find me on the Developer Forums
or email me directly at vicki@apple.com.