WEBVTT

00:00:10.700 --> 00:00:13.070
Hello, I'm Allan Schaffehr,
the game technologies

00:00:13.100 --> 00:00:15.000
evangelist at Apple.

00:00:15.070 --> 00:00:18.440
Last year with iOS 4.1,
we introduced Game Center,

00:00:18.490 --> 00:00:20.960
Apple's new social gaming network.

00:00:21.020 --> 00:00:24.590
Game Center enables the players
in your games to track their

00:00:24.600 --> 00:00:28.400
best scores on a leaderboard,
to compare their achievements,

00:00:28.460 --> 00:00:31.700
invite friends to play the game,
and to start a multiplayer

00:00:31.700 --> 00:00:33.600
game through auto-matching.

00:00:33.760 --> 00:00:36.100
So in this presentation,
I'll cover just the

00:00:36.110 --> 00:00:39.070
essentials of Game Center:
authentication, leaderboards,

00:00:39.130 --> 00:00:42.030
and achievements,
and the approach that you can use to

00:00:42.030 --> 00:00:44.440
integrate these features into your game.

00:00:44.550 --> 00:00:46.430
So let's get started.

00:00:46.570 --> 00:00:49.290
So as I said,
Game Center lets your game take

00:00:49.460 --> 00:00:54.960
part in an online social network
provided with iOS 4.1 and above.

00:00:55.050 --> 00:00:58.550
It allows your players to post
their scores and achievements

00:00:58.550 --> 00:01:02.260
to our online leaderboards,
and you can integrate achievements

00:01:02.260 --> 00:01:05.830
to reward the player as they
make progress through your game.

00:01:06.000 --> 00:01:09.760
We also take your game and make it
multiplayer so that your players

00:01:09.780 --> 00:01:13.100
can compete and communicate with
each other online in real time.

00:01:14.570 --> 00:01:19.200
And there's a lot we do to help you with
the promotion and discovery of your game.

00:01:19.250 --> 00:01:22.500
There's special badging on the
App Store and a special area

00:01:22.500 --> 00:01:25.490
where we feature games using
Game Center and their new releases.

00:01:28.150 --> 00:01:32.740
Now, the functionality of Game Center is
delivered in these three parts.

00:01:32.820 --> 00:01:36.280
The first is the Game Center app
built into the OS.

00:01:36.430 --> 00:01:40.250
And this is the central starting
point where your users will create an

00:01:40.250 --> 00:01:44.240
account and sign into Game Center and
then can interact with other players.

00:01:44.240 --> 00:01:48.380
They can set a status message,
invite other players to be their friends,

00:01:48.380 --> 00:01:51.680
and then see what games their
friends have played recently,

00:01:51.990 --> 00:01:55.900
and compare their achievements and
best scores with other players.

00:01:55.900 --> 00:01:59.890
They can also invite their friends to
play a game and start a multiplayer

00:01:59.890 --> 00:02:01.300
game through auto-matching.

00:02:01.300 --> 00:02:03.670
The second piece is
the Game Kit framework.

00:02:03.670 --> 00:02:06.800
And this is what allows game
developers to create apps that are

00:02:06.800 --> 00:02:08.480
going to work with Game Center.

00:02:08.480 --> 00:02:10.770
So this is where
authentication is handled,

00:02:10.800 --> 00:02:13.860
new friend management,
reporting and displaying scores,

00:02:13.860 --> 00:02:17.780
unlocking achievements,
and multiplayer functionality, and so on.

00:02:19.460 --> 00:02:22.100
And then the third piece
is the Game Center service.

00:02:22.250 --> 00:02:27.220
So this is an online service provided by
Apple to perform player authentication,

00:02:27.340 --> 00:02:31.120
provide leaderboard and
achievement data to your game,

00:02:31.160 --> 00:02:34.250
to carry out auto matching
for multiplayer games and

00:02:34.300 --> 00:02:35.970
a lot of other services.

00:02:36.580 --> 00:02:39.190
But so in this presentation,
I'm really just going to

00:02:39.190 --> 00:02:41.180
focus on the essentials.

00:02:41.200 --> 00:02:42.950
I'm going to start with authentication.

00:02:43.090 --> 00:02:46.100
So we'll talk about player
registration and how you perform

00:02:46.100 --> 00:02:47.580
the authentication within your game.

00:02:47.890 --> 00:02:50.170
Then we'll go on to
talk about leaderboards,

00:02:50.170 --> 00:02:54.290
so how you submit scores and display
your leaderboards to your users.

00:02:54.360 --> 00:02:58.810
The same then with achievements,
how you define and submit achievement

00:02:58.810 --> 00:03:00.850
data and how you display those.

00:03:01.890 --> 00:03:03.920
And then there's a few other
pieces that I want to cover.

00:03:03.920 --> 00:03:07.130
I want to talk about how
Game Center interacts

00:03:07.130 --> 00:03:10.200
with iTunes Connect,
which is where you'll go to enable

00:03:10.200 --> 00:03:13.410
Game Center and it's where you
define the metadata for your game.

00:03:13.420 --> 00:03:16.130
And then also talk about
the Game Center Sandbox,

00:03:16.190 --> 00:03:20.000
which is a test environment that you
can use before you release to make

00:03:20.000 --> 00:03:22.410
sure that everything is working right.

00:03:22.470 --> 00:03:25.880
But okay,
so let's start with authentication.

00:03:29.300 --> 00:03:31.920
So the concept here is pretty simple.

00:03:32.010 --> 00:03:35.120
Your players are going to sign
into a Game Center account,

00:03:35.120 --> 00:03:39.410
either from the Game Center app or it can
be done from within your game as well.

00:03:39.440 --> 00:03:43.160
And that account is what's
going to identify that player,

00:03:43.160 --> 00:03:45.900
and that will be used
later in leaderboards,

00:03:45.930 --> 00:03:50.820
in achievements, in friend requests,
or if your game is multiplayer

00:03:51.250 --> 00:03:53.240
and if it uses voice chat.

00:03:53.680 --> 00:03:57.890
So all Game Center games will
start by authenticating the player,

00:03:57.890 --> 00:04:01.080
and we actually handle that whole
process for you automatically.

00:04:01.180 --> 00:04:03.320
There's a couple of different
scenarios that could come up.

00:04:03.440 --> 00:04:07.060
Normally, it may just be that this is a
returning player who's signed

00:04:07.060 --> 00:04:10.700
into Game Center before,
and in that case, when you authenticate,

00:04:10.700 --> 00:04:13.410
we just pop up a little
welcome back dialogue,

00:04:13.420 --> 00:04:16.660
which goes away and then the
player is straight into your game.

00:04:16.660 --> 00:04:20.360
Another possibility is that perhaps
this is the first time they've ever

00:04:20.360 --> 00:04:22.160
signed into a Game Center game.

00:04:22.820 --> 00:04:24.560
Well, if that's the case,
then we'll bring up

00:04:24.560 --> 00:04:27.220
this sign-in dialogue,
where they can either sign in

00:04:27.220 --> 00:04:30.640
with an existing account or create
a new account or cancel out.

00:04:30.870 --> 00:04:33.180
Now,
if they sign in with an existing account,

00:04:33.180 --> 00:04:35.810
then they'll be just
straight into your game.

00:04:35.870 --> 00:04:38.080
But if they haven't
created an account yet,

00:04:38.080 --> 00:04:41.820
then actually we will just bring up
the entire creation process for you.

00:04:41.920 --> 00:04:44.260
All of this is handled
totally automatically.

00:04:44.260 --> 00:04:46.520
You don't have to do
any extra work for this.

00:04:46.520 --> 00:04:49.650
And then once they've created an account,
they'll be straight on

00:04:49.650 --> 00:04:50.850
into your game again.

00:04:51.000 --> 00:04:54.610
And so the third possibility is...
Perhaps when this dialogue came up,

00:04:54.620 --> 00:04:56.400
they may have chosen to cancel out.

00:04:56.580 --> 00:05:00.250
And usually if they cancel,
they'll just be straight into your game.

00:05:00.570 --> 00:05:04.200
But actually, if they cancel three times,
then we will disable

00:05:04.200 --> 00:05:06.840
Game Center for them,
so that they won't be asked

00:05:06.840 --> 00:05:08.650
to sign in anymore after that.

00:05:08.690 --> 00:05:10.830
They'll have considered
to have been opted out.

00:05:11.000 --> 00:05:14.700
But then, once they've done that,
they'll be straight into your game again.

00:05:16.200 --> 00:05:17.840
All right,
so let's look at authentication

00:05:17.920 --> 00:05:19.540
from the development perspective.

00:05:19.580 --> 00:05:22.600
I want to cover the steps
to perform authentication.

00:05:22.650 --> 00:05:25.820
I'll talk about how to handle
errors and how authentication

00:05:25.820 --> 00:05:27.200
interacts with multitasking.

00:05:27.200 --> 00:05:30.390
And then I'll have a couple of
recommended practices for you to follow.

00:05:32.610 --> 00:05:35.190
So the steps are actually very,
very simple.

00:05:35.530 --> 00:05:37.950
There's really three
stages that we go through.

00:05:38.110 --> 00:05:40.810
First is that we'll check for
Game Center support because there's

00:05:40.840 --> 00:05:44.040
some devices or some OS releases that
of course don't support Game Center.

00:05:44.080 --> 00:05:46.700
So we'll want to check for that first.

00:05:46.860 --> 00:05:51.010
Then we'll request authentication
using the GK local player object,

00:05:51.060 --> 00:05:52.780
which you see over here on the right.

00:05:52.860 --> 00:05:55.410
All of authentication and
all of Game Center really is

00:05:55.410 --> 00:05:57.360
centered around this object.

00:05:57.400 --> 00:05:59.820
This is where the player ID,
the player's nickname,

00:05:59.920 --> 00:06:01.600
and their friends list comes from.

00:06:01.600 --> 00:06:04.090
And it's how you can tell if
they're underage and if they've

00:06:04.090 --> 00:06:05.430
authenticated yet or not.

00:06:06.790 --> 00:06:09.460
So once we have requested
the authentication,

00:06:09.460 --> 00:06:11.280
then we'll check the result.

00:06:11.280 --> 00:06:14.270
And based on that,
either enable or disable the

00:06:14.270 --> 00:06:18.940
use of Game Center for the
rest of this run of the app.

00:06:19.030 --> 00:06:22.120
So let's look at an example.

00:06:22.870 --> 00:06:25.370
So here, first,
what I'm going to do is check

00:06:25.550 --> 00:06:28.520
for the presence of some of
the GK local player APIs.

00:06:28.590 --> 00:06:32.040
So I use NSClass from String and
just see if it exists or not.

00:06:32.080 --> 00:06:36.920
Of course, if I were running on iOS 4.0,
this would come back null.

00:06:36.940 --> 00:06:40.580
And so I would be able to
know to disable the use of

00:06:40.630 --> 00:06:42.950
Game Center if that were the case.

00:06:43.390 --> 00:06:45.570
Next, also here,
I'm checking if the device

00:06:45.570 --> 00:06:48.540
is running iOS 4.1 or later.

00:06:48.600 --> 00:06:53.040
So checking the device version
and comparing it to 4.1.

00:06:53.100 --> 00:06:57.170
Now the reason for this is
actually because we released

00:06:57.220 --> 00:07:00.680
a version of Game Center,
a preview version of Game Center to

00:07:00.680 --> 00:07:03.760
developers that ran on iOS 4.0.

00:07:03.820 --> 00:07:06.180
And we have to make sure that that
isn't the version that's being

00:07:06.180 --> 00:07:10.500
run here because it's no longer
compatible with the online service.

00:07:10.550 --> 00:07:14.270
the device has to be
running iOS 4.1 or above.

00:07:14.500 --> 00:07:17.440
But so,
assuming both of those tests pass,

00:07:17.440 --> 00:07:20.730
now I can go on and actually
request the authentication.

00:07:20.880 --> 00:07:25.400
So here I get a handle to
the GKE local player object.

00:07:26.210 --> 00:07:30.330
And here I'm calling local player
authenticate with completion handler.

00:07:30.330 --> 00:07:33.320
And as an argument,
I'm passing it a block.

00:07:33.490 --> 00:07:36.210
Now, I'll explain blocks
in just a few moments,

00:07:36.210 --> 00:07:40.440
but the result that's going to come back
from this is going to tell us whether

00:07:40.440 --> 00:07:42.730
the player is authenticated or not.

00:07:43.080 --> 00:07:47.380
And it will fill in the fields
of the local player object.

00:07:48.140 --> 00:07:51.660
So here I'm just checking if the
local player is authenticated,

00:07:52.040 --> 00:07:56.430
then it's successful and I can go on
into my game using Game Center features.

00:07:56.430 --> 00:07:59.280
Otherwise,
I still want to go into the game,

00:07:59.280 --> 00:08:02.580
but I just don't want to
use Game Center features.

00:08:02.580 --> 00:08:07.200
So I will disable posting scores
to Game Center leaderboards.

00:08:07.200 --> 00:08:10.540
I won't try to query
achievements and so on.

00:08:13.710 --> 00:08:17.800
And just to continue with that thought,
handling errors is really important

00:08:18.210 --> 00:08:21.440
for you with the authentication process
because it just might not be successful.

00:08:21.520 --> 00:08:23.140
There's a couple of cases.

00:08:23.140 --> 00:08:25.200
There's three of them
that I've listed here.

00:08:25.200 --> 00:08:29.820
One possibility is that perhaps you've
made a mistake and that you haven't yet

00:08:29.820 --> 00:08:32.310
enabled Game Center in iTunes Connect.

00:08:32.400 --> 00:08:34.560
Well, in that case,
the authentication will give

00:08:34.560 --> 00:08:37.120
you back an error saying that
the game is not recognized.

00:08:38.710 --> 00:08:43.120
Another possibility is that perhaps your
device does not support Game Center,

00:08:43.120 --> 00:08:47.740
and specifically the iPhone 3G
does not have Game Center support.

00:08:47.820 --> 00:08:50.440
So on that device,
when you attempt to authenticate,

00:08:50.530 --> 00:08:54.980
you'll just get an error back
saying GK error not supported.

00:08:55.560 --> 00:08:59.080
And then third, as I said,
perhaps the user has opted out.

00:08:59.140 --> 00:09:01.280
Well, if that's the case,
then you'll just get an error

00:09:01.280 --> 00:09:04.770
back that they've canceled,
and you should proceed accordingly.

00:09:04.780 --> 00:09:09.660
And really, in all three of these cases,
the intention is that you should

00:09:09.690 --> 00:09:14.110
still provide a graceful fallback
and proceed into the game,

00:09:14.110 --> 00:09:16.690
but just disable the
Game Center features.

00:09:18.200 --> 00:09:20.050
All right,
so let's talk about how authentication

00:09:20.050 --> 00:09:21.440
interacts with multitasking.

00:09:21.440 --> 00:09:25.540
And the thing to keep in mind is that
your authentication might not survive a

00:09:25.540 --> 00:09:30.140
trip of the app going into the background
or being suspended and then coming back.

00:09:30.280 --> 00:09:34.280
So anytime that that happens,
you actually have to re-authenticate.

00:09:34.280 --> 00:09:38.300
And that's going to occur
automatically in iOS 4.2 and above.

00:09:38.300 --> 00:09:41.250
But if you're running iOS 4.1,
you have to start the

00:09:41.260 --> 00:09:43.400
authentication process over again.

00:09:44.600 --> 00:09:47.660
Now, another thing to keep in mind is
that the player ID may have changed.

00:09:47.660 --> 00:09:50.080
Perhaps, actually,
that might be the reason why

00:09:50.080 --> 00:09:51.820
your application was suspended.

00:09:51.900 --> 00:09:55.280
The player might have suspended your app,
gone to the Game Center app,

00:09:55.280 --> 00:09:58.670
and signed in as a new player,
and then come back to your game.

00:09:58.700 --> 00:10:00.310
Well, you have to handle that.

00:10:00.560 --> 00:10:03.600
And if that occurs, really,
you should just start a new game.

00:10:03.660 --> 00:10:06.160
But in either case,
if you come back into the

00:10:06.250 --> 00:10:09.830
game after being suspended and
you're unable to authenticate,

00:10:09.830 --> 00:10:12.600
well,
just proceed with a graceful fallback.

00:10:12.600 --> 00:10:14.940
Just keep going with the game,
but with your

00:10:15.260 --> 00:10:17.460
Game Center features disabled.

00:10:17.680 --> 00:10:18.690
Thank you.

00:10:20.030 --> 00:10:22.190
Now, the last thing is just a tip.

00:10:22.460 --> 00:10:27.480
Something that we really think that you
should avoid is using extra dialogues

00:10:27.480 --> 00:10:30.180
to customize the authentication process.

00:10:30.370 --> 00:10:33.080
Like I see a number of games that
are doing something like this,

00:10:33.100 --> 00:10:35.830
where they're saying, "Hey,
do you want to enable Game Center?"

00:10:36.170 --> 00:10:37.880
and they make the user say yes or no.

00:10:37.950 --> 00:10:43.000
Then if they say yes, then we go into the
authentication process.

00:10:43.300 --> 00:10:44.930
This is really something to avoid.

00:10:44.960 --> 00:10:48.040
We think that this creates
a lot of confusion.

00:10:48.070 --> 00:10:51.800
And it's because this is
either redundant or incorrect,

00:10:51.830 --> 00:10:54.430
depending on what the user
has already done in the past.

00:10:54.430 --> 00:10:56.900
So they may have already authenticated.

00:10:56.900 --> 00:10:58.820
And if so,
then you don't need to ask them

00:10:58.820 --> 00:11:00.690
whether or not to enable Game Center.

00:11:00.690 --> 00:11:03.580
The authentication process is
just going to sign them in.

00:11:04.820 --> 00:11:07.080
Or they may have already
chosen to opt out,

00:11:07.080 --> 00:11:10.210
and you're just bothering them
again with a new question.

00:11:10.260 --> 00:11:11.940
And what if they were to say yes?

00:11:12.030 --> 00:11:15.520
Well, Game Center has already
been disabled system-wide.

00:11:15.540 --> 00:11:18.440
And so even if you say yes,
it's not going to take them into it.

00:11:18.490 --> 00:11:21.280
They have to go into the
Game Center app to re-enable it.

00:11:21.460 --> 00:11:22.610
So don't do this.

00:11:22.610 --> 00:11:28.210
Instead, just think of Game Center as a
system-wide service that isn't intended

00:11:28.210 --> 00:11:33.650
to have all of this custom enable and
disable behavior on a per-game basis.

00:11:34.940 --> 00:11:35.430
But okay.

00:11:35.430 --> 00:11:39.490
Now, before we proceed into
leaderboards and achievements,

00:11:39.540 --> 00:11:43.350
I want to talk about just a few
fundamental concepts that are

00:11:43.350 --> 00:11:47.190
going to help you understand
the use of the GameKit API.

00:11:47.950 --> 00:11:50.830
And the first of these is iTunes
Connect and its interaction

00:11:50.830 --> 00:11:52.530
with the Game Center service.

00:11:53.490 --> 00:11:57.070
So a lot of game developers maybe
only use iTunes Connect when

00:11:57.070 --> 00:11:59.320
they've finished with their game.

00:11:59.400 --> 00:12:01.830
They've done all of the coding,
and now it's just time to upload

00:12:01.940 --> 00:12:03.080
the game to the App Store.

00:12:04.580 --> 00:12:06.160
So that's not how it
works with Game Center.

00:12:06.210 --> 00:12:10.460
You actually need to go into
iTunes Connect up front to enable

00:12:10.460 --> 00:12:15.030
Game Center for the app and to set
up all of the metadata for your

00:12:15.040 --> 00:12:17.440
leaderboards and for your achievements.

00:12:18.390 --> 00:12:21.910
And once you've released multiple
versions to also specify the

00:12:21.920 --> 00:12:27.090
compatibility between different versions
of your game if you support multiplayer.

00:12:28.020 --> 00:12:31.350
So that's one important
fundamental to keep in mind.

00:12:31.900 --> 00:12:37.220
So the second thing is that you should
really program this API asynchronously.

00:12:37.520 --> 00:12:40.430
So all of the API is designed
to send messages to the

00:12:40.490 --> 00:12:45.380
Game Center service and then receive
back responses asynchronously.

00:12:45.490 --> 00:12:49.210
And all of that is implemented
using blocks as callbacks,

00:12:49.210 --> 00:12:52.760
or we call these completion
handlers in the API.

00:12:52.850 --> 00:12:54.200
So here's an example.

00:12:54.330 --> 00:12:56.760
When your game starts out and
it's going to send a message to

00:12:56.840 --> 00:13:00.420
the Game Center service asking
it to authenticate the player,

00:13:00.520 --> 00:13:03.930
that message gets sent,
and then the Game Center service

00:13:03.930 --> 00:13:07.280
is going to respond back,
and the response will be received

00:13:07.430 --> 00:13:09.550
by your completion handler.

00:13:09.670 --> 00:13:13.660
So this is something that we
use all over in the GameKit API.

00:13:13.780 --> 00:13:17.360
So in this case here,
I have some other object that's

00:13:17.360 --> 00:13:19.580
going to perform some action,
send that request to

00:13:19.580 --> 00:13:22.440
the Game Center service,
and then I'll receive a response

00:13:22.540 --> 00:13:24.300
back in my completion handler.

00:13:24.410 --> 00:13:28.880
So here I invoke object,
do some action with completion handler,

00:13:29.230 --> 00:13:31.770
and here's the block
that's going to be invoked.

00:13:32.010 --> 00:13:35.940
Now it's being passed back in NSAir,
and this is in common with

00:13:35.940 --> 00:13:39.400
most of the Game Center APIs,
that if we receive an error,

00:13:39.400 --> 00:13:41.380
then we'll go off and handle it.

00:13:41.640 --> 00:13:44.930
Otherwise, if there's no error,
then it generally means that

00:13:44.940 --> 00:13:46.720
that action was completed.

00:13:46.720 --> 00:13:49.720
And then the third fundamental
that I just want to mention

00:13:49.720 --> 00:13:51.210
is the Game Center sandbox.

00:13:51.520 --> 00:13:56.760
So this is a pre-release test
environment that you can use during

00:13:56.760 --> 00:14:01.460
your development to test your
game's interaction with Game Center.

00:14:01.620 --> 00:14:05.110
So this is going to duplicate
the functionality of the

00:14:05.120 --> 00:14:07.190
live Game Center service.

00:14:07.370 --> 00:14:09.490
You'll have the same
iTunes Connect metadata,

00:14:09.540 --> 00:14:13.680
meaning you'll have the same
achievements and leaderboard set up,

00:14:13.860 --> 00:14:17.890
but it's a different Game Center server,
so the data in those achievement

00:14:18.190 --> 00:14:22.580
lists or the data in that
leaderboard will be independent.

00:14:22.780 --> 00:14:27.700
And there's also separate accounts,
so just accounts for you and

00:14:27.700 --> 00:14:29.880
your beta testers to use.

00:14:29.990 --> 00:14:33.080
So which environment are
you using at any given time?

00:14:33.230 --> 00:14:35.640
Well,
just the rule of thumb to understand

00:14:35.670 --> 00:14:39.810
is that any game that is in development
is going to be using the sandbox.

00:14:39.950 --> 00:14:43.800
So that's your development builds,
any builds that are done

00:14:43.800 --> 00:14:47.110
using the simulator,
or any ad hoc builds that you

00:14:47.110 --> 00:14:49.340
distribute to your beta testers.

00:14:49.410 --> 00:14:54.030
And once a game goes live and your users
are downloading it from the App Store,

00:14:54.150 --> 00:14:56.520
well,
then that version of the game is going

00:14:56.520 --> 00:14:57.180
to be using the production system.

00:14:57.270 --> 00:14:59.680
So that's the production server.

00:14:59.680 --> 00:15:01.580
Okay, so now let's talk about accounts.

00:15:01.580 --> 00:15:05.520
Just bear in mind that you have separate
accounts between the sandbox environment

00:15:05.520 --> 00:15:07.820
and your production environment.

00:15:07.820 --> 00:15:11.760
Now, you could use the same login and
password between both of these.

00:15:11.920 --> 00:15:12.630
I do that.

00:15:13.230 --> 00:15:16.750
But a tip is if you are using
the same login and password,

00:15:16.760 --> 00:15:20.900
it can sometimes get confusing as to
which environment you're actually in.

00:15:20.900 --> 00:15:23.690
So choose different nicknames
because that's what the

00:15:23.700 --> 00:15:26.880
Game Center app will display to you,
and that's also what's displayed

00:15:26.980 --> 00:15:28.600
in the "Welcome Back" dialog.

00:15:28.600 --> 00:15:31.880
So just for example,
if I was Apollo in production,

00:15:31.880 --> 00:15:35.630
maybe I should change my name
to be Apollo Sandbox when I'm

00:15:35.630 --> 00:15:38.980
in the sandbox environment,
just so I can keep them straight.

00:15:39.710 --> 00:15:43.270
Now, a note about switching back and
forth between sandbox and production.

00:15:43.300 --> 00:15:46.730
If you want to go to the sandbox,
you're currently in production.

00:15:46.850 --> 00:15:50.640
All you have to do is run any game
that's going to use the sandbox,

00:15:50.640 --> 00:15:53.340
run any game that's still in development.

00:15:53.340 --> 00:15:56.480
You'll be prompted to enter
your sandbox login and password,

00:15:56.480 --> 00:15:58.730
and then you'll be
straight into the game.

00:15:59.540 --> 00:16:02.660
But if you're currently in the
sandbox and you want to get

00:16:02.670 --> 00:16:05.650
out of it and go to production,
then there's a process

00:16:05.750 --> 00:16:07.160
you have to go through.

00:16:07.160 --> 00:16:11.380
You need to go to the Game Center app
and tap the account ribbon,

00:16:11.450 --> 00:16:14.540
and it'll bring up a
dialog to let you sign out.

00:16:14.640 --> 00:16:18.290
And then after you've signed out,
still within the Game Center app,

00:16:18.300 --> 00:16:22.220
enter your production login and password,
and then sign back in again.

00:16:22.220 --> 00:16:25.470
And now you'll be back into
the production environment.

00:16:25.480 --> 00:16:30.940
With that done, let's change gears and
talk about... Leaderboards.

00:16:31.080 --> 00:16:34.560
And the concepts of
leaderboards are very simple.

00:16:34.620 --> 00:16:37.800
This is a list of all of
your players' best scores.

00:16:38.080 --> 00:16:41.170
You define how scoring
is done in your game.

00:16:41.170 --> 00:16:45.950
So it can be the most points,
or the best time, or the highest level.

00:16:45.990 --> 00:16:47.900
It can be sorted up or down.

00:16:48.080 --> 00:16:52.070
And what leaderboards really do
is increase the player engagement

00:16:52.110 --> 00:16:56.080
and encourage more competition
between players in your game.

00:16:56.080 --> 00:16:59.070
Everybody wants to look at the
scores that they're scoring.

00:16:59.080 --> 00:17:01.820
So you can look at the scores that
your friends have achieved and scores

00:17:02.110 --> 00:17:05.080
that are at the top of the leaderboard
and see if they can beat those.

00:17:05.080 --> 00:17:09.030
So now let's look at a couple of
features of our leaderboard API.

00:17:09.330 --> 00:17:15.010
You can either use our standard built-in
interface or present your own custom UI.

00:17:16.740 --> 00:17:23.380
We also provide filters either by time,
today, this week, or all time,

00:17:23.420 --> 00:17:23.940
or by audience.

00:17:23.980 --> 00:17:27.260
So you can look at just the
leaderboard entries from your friends,

00:17:27.260 --> 00:17:29.780
or you can see all the
players in the game.

00:17:31.690 --> 00:17:36.190
There's a variety of different score
types and score formats that we support.

00:17:36.210 --> 00:17:39.690
So your scores can be
ints or floats or times.

00:17:40.070 --> 00:17:42.470
They can have a number of
decimal places and so on.

00:17:43.740 --> 00:17:48.520
And we support up to 25 different
leaderboards in Game Center.

00:17:48.520 --> 00:17:52.750
So you can have at the same time
a leaderboard for the best score,

00:17:52.760 --> 00:17:55.660
but also maybe another one
that tracks the best time.

00:17:56.930 --> 00:18:01.200
So let's look at leaderboards from
the perspective of the developer.

00:18:01.200 --> 00:18:05.280
I'm going to talk about how you define
leaderboards and report a score.

00:18:05.460 --> 00:18:07.400
Then we'll get into how to
present the leaderboards,

00:18:07.520 --> 00:18:11.440
either with the built-in UI or
querying the data yourself and

00:18:11.440 --> 00:18:14.060
presenting it in your own custom UI.

00:18:14.060 --> 00:18:16.900
And at the end, I'll have a couple of
recommended practices.

00:18:19.220 --> 00:18:21.950
So here's the data that
you'll need to define your

00:18:21.950 --> 00:18:23.940
leaderboards in iTunes Connect.

00:18:23.990 --> 00:18:26.350
We'll start out,
we'll give each leaderboard a name

00:18:26.650 --> 00:18:30.580
and an ID that we'll use in the code
anytime we want to send data to this

00:18:30.580 --> 00:18:32.470
leaderboard or query its values.

00:18:32.500 --> 00:18:36.150
Then there's a number of
different pieces of metadata.

00:18:36.360 --> 00:18:38.290
So here you set the score type.

00:18:38.290 --> 00:18:40.500
So here I've chosen integers.

00:18:40.500 --> 00:18:43.670
Also the sort order for the
scores in this leaderboard,

00:18:43.720 --> 00:18:45.840
either ascending or descending.

00:18:45.840 --> 00:18:47.260
Here I've chosen descending.

00:18:48.300 --> 00:18:52.560
And then a series of fields which
are localizable for the language,

00:18:52.560 --> 00:18:56.140
the display name, the score format,
and a suffix.

00:18:56.140 --> 00:18:58.180
So here I've just chosen English.

00:18:58.370 --> 00:19:01.100
When this is displayed,
it's going to call this

00:19:01.310 --> 00:19:04.570
leaderboard top scores,
and scores will be presented

00:19:04.570 --> 00:19:08.590
using the American standard
for presenting large numbers.

00:19:08.600 --> 00:19:11.970
Then the suffix, singular,
is going to be point,

00:19:11.970 --> 00:19:13.810
and plural will be points.

00:19:13.900 --> 00:19:17.440
But these last few fields
can also be localized.

00:19:17.440 --> 00:19:21.140
So here I have German,
we support simplified Chinese, and so on.

00:19:21.490 --> 00:19:24.370
Now,
all of this data gets defined in iTunes

00:19:24.370 --> 00:19:29.250
Connect and just lives up in the cloud,
and your application then uses

00:19:29.250 --> 00:19:33.340
it when it's using Game Center by
indexing it through that ID.

00:19:35.390 --> 00:19:37.640
Now,
a couple of tips as you define that data.

00:19:37.720 --> 00:19:40.140
The first has to do with the sort order.

00:19:40.230 --> 00:19:43.700
So we see a number of developers
making this mistake from time to time.

00:19:43.760 --> 00:19:48.900
So a descending leaderboard is one
that has the highest scores at the top,

00:19:49.170 --> 00:19:53.020
and then as you go down the ranks,
the scores are decreasing.

00:19:53.110 --> 00:19:56.290
So that's appropriate for
like a high scoreboard.

00:19:56.450 --> 00:19:59.630
An ascending leaderboard has
the lowest scores at the top,

00:19:59.720 --> 00:20:02.440
and so that's appropriate for a
leaderboard that wants to show,

00:20:02.440 --> 00:20:05.310
for example, the shortest amount of time,
the lowest score.

00:20:06.920 --> 00:20:10.700
And the other tip has to do with the
suffix that's going to be displayed.

00:20:10.780 --> 00:20:15.280
Just note that we don't add
any leading space between this,

00:20:15.280 --> 00:20:18.420
so that when it's presented to the user,
if you want a space between

00:20:18.420 --> 00:20:22.280
the number and the suffix,
you need to add it yourself.

00:20:22.750 --> 00:20:25.360
Okay, so now let's talk about
reporting a score.

00:20:25.380 --> 00:20:28.370
There's really three steps
that we're gonna do here.

00:20:28.450 --> 00:20:32.310
The first is that we create a
GK score object and initialize

00:20:32.310 --> 00:20:33.660
it and set the value.

00:20:33.700 --> 00:20:38.280
Then we'll report that score to
Game Center and then we finally check

00:20:38.420 --> 00:20:41.680
for errors and handle those if necessary.

00:20:41.760 --> 00:20:45.010
And all of this is gonna be centered
around this GK score object that

00:20:45.010 --> 00:20:46.880
you see here on the right hand side.

00:20:46.930 --> 00:20:49.460
You set the category,
that's gonna be the ID of the

00:20:49.460 --> 00:20:52.440
leaderboard that you wanna submit it to,
and the value.

00:20:52.480 --> 00:20:57.000
And then once you've done that,
you can report that score to Game Center.

00:20:57.060 --> 00:20:58.530
So here's an example of that.

00:20:58.970 --> 00:21:03.440
Here I'm creating a GK score
object and initializing it with the

00:21:03.440 --> 00:21:06.650
ID of the leaderboard that I was
just showing you a moment ago.

00:21:06.780 --> 00:21:08.680
Here I set its value.

00:21:08.680 --> 00:21:11.720
The value is a 64-bit integer,
so here I'm just setting

00:21:11.720 --> 00:21:13.920
it to some value,
to some score.

00:21:13.970 --> 00:21:19.030
And I then report that score to
Game Center and give it and pass along

00:21:19.030 --> 00:21:23.630
with it a completion handler that'll
be called when I get a response back.

00:21:23.830 --> 00:21:28.020
The completion handler will
be called and passed in NSERR.

00:21:28.080 --> 00:21:30.410
And if there is one,
then we'll save the score for later.

00:21:30.420 --> 00:21:32.660
I'll talk about that in just a moment.

00:21:32.740 --> 00:21:36.000
But otherwise, if there's no error,
then we know that this score was

00:21:36.000 --> 00:21:39.610
submitted successfully and it should
now show up on the leaderboard

00:21:39.620 --> 00:21:42.040
if it's the player's best score.

00:21:42.110 --> 00:21:45.300
So now let's talk about that
case where an error might happen.

00:21:45.380 --> 00:21:48.960
It's really vital that you
handle any errors that occur

00:21:49.020 --> 00:21:50.560
during score submission.

00:21:50.610 --> 00:21:53.060
And it can happen for a
variety of different reasons.

00:21:53.100 --> 00:21:55.740
There might be a networking
failure so that the score

00:21:55.740 --> 00:21:57.680
wasn't received by Game Center.

00:21:57.700 --> 00:22:00.020
Or maybe there's some kind of a mistake.

00:22:00.050 --> 00:22:04.420
The player hasn't been authenticated
or the score wasn't set.

00:22:04.440 --> 00:22:07.600
Now, in all of those cases,
you need to handle that error.

00:22:07.650 --> 00:22:11.740
But let's look a little more closely
at the communications failure case.

00:22:11.780 --> 00:22:17.160
What you really should do then is to
save the score and resubmit it later.

00:22:17.230 --> 00:22:20.060
Perhaps the next time your
application starts up,

00:22:20.060 --> 00:22:23.680
you have a connection
on that later attempt.

00:22:23.680 --> 00:22:28.150
And something that makes this really
easy is the fact that the GK score

00:22:28.150 --> 00:22:31.220
object conforms to the NSCoding protocol.

00:22:31.220 --> 00:22:34.630
So it's really simple for you
to just take a score and archive

00:22:34.630 --> 00:22:38.860
it away and then bring that back
the next time you run your app.

00:22:38.860 --> 00:22:44.040
But one thing to keep in mind with
that is how to limit cheating.

00:22:44.080 --> 00:22:49.560
So cheating could occur if somebody
modifies your saved scores file.

00:22:49.560 --> 00:22:52.930
And then the next time you run your app,
you unpack that and just

00:22:52.930 --> 00:22:55.220
submit it back to Game Center.

00:22:55.220 --> 00:22:58.240
So you should take some
steps to try to limit that.

00:22:58.240 --> 00:23:02.370
A few options that you might
explore are adding a checksum into

00:23:02.370 --> 00:23:05.340
the file or a hash to the score.

00:23:05.340 --> 00:23:09.110
Or also now,
Game Center will limit score submissions

00:23:09.170 --> 00:23:13.500
to known valid amounts if you enter
that data into iTunes Connect.

00:23:13.500 --> 00:23:17.220
You can say something like,
"No score greater than 100,000

00:23:17.220 --> 00:23:19.060
is valid." And any score
submissions that you submit,

00:23:19.060 --> 00:23:22.560
score submissions higher than
that will just be dropped.

00:23:22.590 --> 00:23:25.760
Okay, so now let's move on to how
to display leaderboards.

00:23:25.780 --> 00:23:29.580
And I'll start with displaying
them using the standard UI.

00:23:29.660 --> 00:23:31.600
So this is actually really simple.

00:23:31.650 --> 00:23:35.220
We have a built-in class called
the GK Leaderboard View Controller.

00:23:35.250 --> 00:23:37.580
You see it over here
on the right-hand side.

00:23:37.670 --> 00:23:41.170
So all you have to do is create one of
these objects and set its properties.

00:23:41.300 --> 00:23:44.240
You tell it which leaderboard
you want to display.

00:23:44.270 --> 00:23:46.560
You tell it the time scope
that you want to see,

00:23:46.560 --> 00:23:48.560
either today, this week, or all time.

00:23:48.560 --> 00:23:51.790
And you set a delegate for
when it gets dismissed.

00:23:51.890 --> 00:23:55.460
And then you present this modally
using your root view controller.

00:23:55.520 --> 00:24:00.490
Okay, so here I'm creating a view
controller object and initializing it.

00:24:00.540 --> 00:24:04.280
And I set the category to the same
leaderboard that I showed you earlier.

00:24:04.310 --> 00:24:07.010
I set its time scope, in this case,
to all time,

00:24:07.060 --> 00:24:10.180
and set the delegate to myself.

00:24:10.250 --> 00:24:13.610
Now I present that modal view controller.

00:24:13.730 --> 00:24:17.400
And then it's going to come up and
display the leaderboards to the user,

00:24:17.460 --> 00:24:19.300
and there'll be a button to dismiss it.

00:24:19.430 --> 00:24:24.000
And once the user presses that button,
this delegate is going to fire of

00:24:24.000 --> 00:24:27.620
leaderboard view controller did finish,
and that's where I can

00:24:27.620 --> 00:24:29.690
dismiss the view controller.

00:24:30.180 --> 00:24:33.220
Okay, so that's all there is to it
for displaying leaderboards

00:24:33.220 --> 00:24:34.580
using the standard UI.

00:24:34.590 --> 00:24:38.590
Now, if you want to display leaderboards
using your own custom UI,

00:24:38.590 --> 00:24:41.810
then you need to query the
data out of them yourself.

00:24:42.060 --> 00:24:44.470
And we provide you the
functionality to do that.

00:24:44.470 --> 00:24:47.510
You can query data from
Game Center programmatically.

00:24:47.520 --> 00:24:50.940
So some typical queries that
you might do for this are,

00:24:50.940 --> 00:24:54.900
for example, the top 10 scores,
or you might query, say,

00:24:55.120 --> 00:24:58.750
ranks N through N plus 20
on the current leaderboard.

00:24:58.800 --> 00:25:00.090
Or you might.

00:25:00.370 --> 00:25:04.120
As for the ranks for a
certain list of player IDs.

00:25:04.320 --> 00:25:08.380
Now, in each of those cases,
you'll submit a query to Game Center,

00:25:08.500 --> 00:25:11.300
and the results are going to be
returned to you asynchronously

00:25:11.300 --> 00:25:12.590
in a completion handler.

00:25:13.020 --> 00:25:15.950
There are a few expectations
that we have about this.

00:25:16.080 --> 00:25:19.620
We expect that you're going to
query a relatively small range

00:25:19.950 --> 00:25:22.060
and with relatively low frequency.

00:25:22.460 --> 00:25:26.070
Something you should not try to do
is query your entire leaderboard.

00:25:26.120 --> 00:25:29.220
For one thing, it could be huge,
and that would be a very poor game.

00:25:29.240 --> 00:25:30.180
And that would be a very poor game.

00:25:30.180 --> 00:25:31.170
user experience.

00:25:32.900 --> 00:28:00.300
[Transcript missing]

00:28:00.950 --> 00:28:03.800
The second thing is to support archiving.

00:28:03.900 --> 00:28:07.200
So in case of any error,
you really need to check for

00:28:07.200 --> 00:28:10.600
the error and then save the
scores for later resubmission,

00:28:10.720 --> 00:28:14.110
perhaps when your application
starts back up again.

00:28:14.900 --> 00:30:03.000
[Transcript missing]

00:30:03.590 --> 00:30:07.880
We also have the idea of partial
progress for achievements from 0%

00:30:07.880 --> 00:30:12.340
to 100%. And this is really useful
for achievements like the one

00:30:12.340 --> 00:30:16.880
where you've defeated 50 enemies
or things along those lines,

00:30:16.940 --> 00:30:20.630
where you can show the player just
the kind of progress that they have

00:30:20.630 --> 00:30:23.330
made towards earning that achievement.

00:30:24.860 --> 00:30:28.650
We also have support
for hidden achievements,

00:30:28.710 --> 00:30:32.780
so that you can have certain achievements
that only reveal themselves when you

00:30:32.780 --> 00:30:34.630
decide to reveal them to the player.

00:30:34.640 --> 00:30:40.150
And this is something that you can
either use for hidden secret rewards,

00:30:40.200 --> 00:30:44.040
or maybe you just have in-app purchases,
for example,

00:30:44.040 --> 00:30:47.510
that unlock new levels in your game,
and you have achievements

00:30:47.510 --> 00:30:48.980
associated with those levels.

00:30:49.050 --> 00:30:52.790
You might only want those achievements
to become visible if the user has

00:30:52.790 --> 00:30:54.680
made that particular purchase.

00:30:54.700 --> 00:30:58.810
And then finally,
achievements in Game Center earn

00:30:58.810 --> 00:31:00.900
the player a number of points.

00:31:00.900 --> 00:31:04.660
And I'll get into that in just
a little bit more detail here.

00:31:04.660 --> 00:31:08.720
So as I say, the player earns points for
completing an achievement.

00:31:08.720 --> 00:31:11.860
They get from 1 to 100
points for each achievement.

00:31:11.860 --> 00:31:14.740
And of course,
you control the design of this.

00:31:14.740 --> 00:31:18.760
So more difficult achievements
in your game should generally

00:31:18.760 --> 00:31:20.790
earn the player more points.

00:31:21.150 --> 00:31:26.690
You have a maximum budget of 1,000
points total for your entire game.

00:31:26.690 --> 00:31:31.260
So be sure to leave headroom for
future expansion of your title,

00:31:31.620 --> 00:31:34.920
just in case at some point you
want to add more achievements

00:31:34.920 --> 00:31:36.130
and have more points.

00:31:36.130 --> 00:31:39.520
You need to make sure that there's
still some available for that.

00:31:40.080 --> 00:31:42.920
Or perhaps you might add new levels or,
again,

00:31:42.920 --> 00:31:47.580
you might get feedback from your users
with new ideas for new achievements and

00:31:47.580 --> 00:31:52.320
you want to be sure that you have the
headroom available to still add those.

00:31:53.800 --> 00:31:55.820
All right,
so let's get into achievements now from

00:31:55.820 --> 00:31:57.700
the point of view of the development.

00:31:57.730 --> 00:32:01.140
So first I'll talk about how you
define achievements in your game,

00:32:01.170 --> 00:32:05.660
then how you can report achievement
progress and display that to the user,

00:32:05.680 --> 00:32:08.370
and then finally how you can
programmatically query the

00:32:08.370 --> 00:32:12.080
achievement progress and present
that in a custom display.

00:32:12.110 --> 00:32:15.420
And then finally at the end,
some recommended practices.

00:32:15.460 --> 00:32:18.230
So just like with leaderboards,
there's some things you'll need

00:32:18.270 --> 00:32:20.560
to define in iTunes Connect.

00:32:20.630 --> 00:32:22.420
So here's an example of that here.

00:32:22.440 --> 00:32:25.420
You'll give each achievement
a name and an ID.

00:32:25.480 --> 00:32:29.000
The ID is what you'll use in the
API to reference this achievement.

00:32:29.060 --> 00:32:31.230
You tell us whether or not
the achievement is hidden.

00:32:31.370 --> 00:32:33.180
Most of the time they're not.

00:32:33.240 --> 00:32:36.930
You give the achievement a point value,
and then some localized

00:32:36.940 --> 00:32:38.490
fields per locale.

00:32:38.680 --> 00:32:42.140
So here I've given it
the title Master Warrior,

00:32:42.190 --> 00:32:45.960
and you earn this achievement
if you defeat 50 enemies.

00:32:46.030 --> 00:32:48.930
And the description of it after
you've earned that achievement

00:32:48.960 --> 00:32:51.140
is defeated 50 enemies.

00:32:51.220 --> 00:32:54.140
And you'll also see this image show up.

00:32:54.210 --> 00:32:57.120
Now you take all of that and
enter it into iTunes Connect,

00:32:57.180 --> 00:33:00.480
just like with leaderboards,
and that lives up in the cloud and

00:33:00.480 --> 00:33:03.900
is then accessed by your application.

00:33:04.100 --> 00:34:52.700
[Transcript missing]

00:34:53.450 --> 00:34:58.740
Now, to display achievements to the user,
we either have the standard UI or you

00:34:58.740 --> 00:35:01.280
can query achievements programmatically.

00:35:01.360 --> 00:35:03.420
So let's look at the standard UI first.

00:35:03.480 --> 00:35:06.300
And this is going to be, again,
exactly the same thing as

00:35:06.340 --> 00:35:08.920
you saw with leaderboards,
but now using the

00:35:08.920 --> 00:35:11.080
achievement view controller.

00:35:11.160 --> 00:35:12.560
So here it's very simple.

00:35:12.620 --> 00:35:16.020
You just create a
GKEachievementViewController object,

00:35:16.090 --> 00:35:20.010
you set its delegate for dismissal,
and then you'll present this modally

00:35:20.010 --> 00:35:21.660
on your root view controller.

00:35:21.800 --> 00:35:23.560
So here's the code for that.

00:35:23.620 --> 00:35:25.750
So the first thing I'm doing here,
I'm creating that

00:35:25.750 --> 00:35:28.590
achievements view controller,
I set that delegate,

00:35:28.720 --> 00:35:30.220
and then I present it modally.

00:35:30.290 --> 00:35:34.490
And then when the user presses done,
this delegate method is going to

00:35:34.490 --> 00:35:36.840
fire of achievementsDidPressDismiss.

00:35:36.880 --> 00:35:40.560
And that's where I can
dismiss that view controller.

00:35:40.820 --> 00:35:42.900
So that's very, very, very simple.

00:35:42.980 --> 00:35:45.210
All right,
next let's talk about how you can query

00:35:45.240 --> 00:35:47.260
achievement data from Game Center.

00:35:47.330 --> 00:35:50.960
There's really two common cases
where you might want to do this.

00:35:51.050 --> 00:35:53.420
The first is that when
your game starts up,

00:35:53.520 --> 00:35:57.090
you probably want to query
Game Center to load all of that

00:35:57.090 --> 00:35:59.680
player's current achievement progress.

00:36:00.030 --> 00:36:03.470
They may have switched devices,
or this might be a new player and

00:36:03.470 --> 00:36:06.290
you just haven't seen them before,
where you should query that

00:36:06.370 --> 00:36:08.820
data from Game Center to see
if they've already made any

00:36:08.820 --> 00:36:11.320
progress through your application.

00:36:11.400 --> 00:36:16.160
The second case is if you just want to
present a custom achievements display.

00:36:16.220 --> 00:36:19.850
You're going to need to get all of the
achievement data out of Game Center so

00:36:19.850 --> 00:36:22.440
that you can present that to the user.

00:36:22.510 --> 00:36:25.780
And for both of those,
there's two classes that are

00:36:25.780 --> 00:36:29.300
involved that are going to
give you arrays of data back.

00:36:29.370 --> 00:36:31.500
And so the first is the
GK achievement class,

00:36:31.550 --> 00:36:35.680
which is what you just saw
for reporting an achievement.

00:36:35.740 --> 00:36:39.200
You can also query Game Center for
the list of all of the achievement

00:36:39.200 --> 00:36:41.520
progress that this player has made.

00:36:41.570 --> 00:36:44.680
And it's going to come back as
an array of GK achievements.

00:36:45.060 --> 00:36:48.110
So you can see here,
each achievement has an identifier,

00:36:48.180 --> 00:36:49.680
a percent complete.

00:36:49.720 --> 00:36:52.240
It'll tell you whether or
not it's been completed,

00:36:52.270 --> 00:36:53.480
whether it's hidden.

00:36:53.530 --> 00:36:56.270
And then if this is a query,
it'll also give you back the date

00:36:56.430 --> 00:36:59.140
that it was reported to Game Center.

00:36:59.200 --> 00:37:02.640
But so that's all of the
achievements for the current player.

00:37:02.690 --> 00:37:05.360
You also,
if you're going to present a list of

00:37:05.450 --> 00:37:08.140
all of the achievements in your game,
you can also use the

00:37:08.140 --> 00:37:10.170
GK achievement description array.

00:37:10.180 --> 00:37:12.930
And that's the objects on
the right-hand side here,

00:37:12.940 --> 00:37:16.420
which is the GK achievement
description array.

00:37:16.420 --> 00:37:22.500
So this is an array corresponding to all
of the data that you've defined in iTunes

00:37:22.500 --> 00:37:24.940
Connect for all of your achievements.

00:37:24.940 --> 00:37:27.930
So each of these now
will have an identifier,

00:37:27.940 --> 00:37:32.410
a title, the description before and
after the achievement is earned,

00:37:32.420 --> 00:37:35.180
the number of points that
that achievement has value of,

00:37:35.180 --> 00:37:37.160
and whether it's hidden and its image.

00:37:37.160 --> 00:37:39.550
array of those,
you can present a big list of all

00:37:39.560 --> 00:37:40.680
of the achievements in your game.

00:37:42.000 --> 00:40:03.400
[Transcript missing]

00:40:03.580 --> 00:40:06.940
Now, after startup,
that's a great place for you to load

00:40:06.940 --> 00:40:10.710
all of the player's latest achievement
progress in case they had previously

00:40:10.750 --> 00:40:12.580
played your game on another device.

00:40:12.600 --> 00:40:16.390
Also, it's a good time for you,
if you had any achievements that

00:40:16.390 --> 00:40:20.100
previously had failed submissions,
that's a good time now to

00:40:20.100 --> 00:40:21.990
resubmit them to Game Center.

00:40:23.300 --> 00:40:26.200
And then during gameplay,
there's some things you should do.

00:40:26.280 --> 00:40:30.090
Really only report achievement
progress to Game Center if it changes.

00:40:30.090 --> 00:40:33.300
You don't need to go back
and re-report the same

00:40:33.300 --> 00:40:35.980
achievements over and over again.

00:40:35.980 --> 00:40:40.050
And then just like with leaderboards,
you should always check for errors when

00:40:40.050 --> 00:40:42.140
you're submitting the achievements.

00:40:42.140 --> 00:40:45.120
And if there is one,
save it to be resubmitted later.

00:40:46.930 --> 00:40:49.800
All right,
so I've covered a lot of ground here.

00:40:49.850 --> 00:40:52.140
I've gone into detail about
player authentication,

00:40:52.140 --> 00:40:55.000
submitting scores and
displaying leaderboards,

00:40:55.040 --> 00:40:58.420
and how to define, submit,
and display achievements.

00:40:58.420 --> 00:41:01.980
And I also discussed how the
Game Center service interacts with

00:41:01.980 --> 00:41:03.880
iTunes Connect and the Sandbox.

00:41:04.010 --> 00:41:06.760
But really,
that's just scratching the surface.

00:41:06.760 --> 00:41:10.960
I didn't cover multiplayer or voice chat,
and Game Center also has some great

00:41:10.960 --> 00:41:13.360
features for interacting with friends.

00:41:13.540 --> 00:41:15.840
So if you have questions
about those things,

00:41:15.840 --> 00:41:18.410
or any of the content
that I've presented here,

00:41:18.410 --> 00:41:20.080
here's my contact information.

00:41:20.250 --> 00:41:23.910
And we also have some great documentation
available in the iOS Dev Center,

00:41:24.210 --> 00:41:27.150
and you can come talk to us in
the developer forums as well.

00:41:27.150 --> 00:41:29.020
So I hope to see you in Game Center.

00:41:29.020 --> 00:41:30.430
Thanks for watching.