WEBVTT

00:00:06.820 --> 00:00:09.140
Good morning everyone.

00:00:09.140 --> 00:00:10.820
Very excited to have you all here today.

00:00:11.430 --> 00:00:14.440
This is the first session of
our Tools of Track for the

00:00:14.460 --> 00:00:16.700
Worldwide Developers Conference.

00:00:16.700 --> 00:00:19.700
And we have a lot to
talk about this week.

00:00:19.700 --> 00:00:24.040
We're highlighting tools
because Mac OS X creates such an

00:00:24.040 --> 00:00:25.700
enormous range of opportunities.

00:00:25.700 --> 00:00:30.700
Both in applications, drivers,
and in the tools themselves.

00:00:30.700 --> 00:00:32.700
Now, we are all dependent upon tools.

00:00:32.700 --> 00:00:34.780
You'll see tools through the entire show.

00:00:34.950 --> 00:00:37.700
They're essential for all of us.

00:00:37.730 --> 00:00:41.890
So we all know the difficulties
of working with the new operating

00:00:42.500 --> 00:00:46.370
system with pre-release tools,
with tools that aren't quite ready yet.

00:00:46.570 --> 00:00:49.310
and what we want to do is
we want to make Mac OS X the

00:00:49.490 --> 00:00:52.130
premier developer environment.

00:00:52.560 --> 00:00:56.220
To do that, Apple is very,
very serious about developer

00:00:56.220 --> 00:00:59.470
tools and about making sure that
you have everything you need to

00:00:59.470 --> 00:01:02.090
bring your applications to market.

00:01:02.620 --> 00:01:05.700
In this session we're going to
cover our goals and strategy,

00:01:05.790 --> 00:01:08.000
how we're going to get there,
we're going to give you an

00:01:08.040 --> 00:01:10.890
overview of the Apple tools,
and we're going to give you a look

00:01:11.010 --> 00:01:14.410
at the third party tools that are
coming available and some of which you

00:01:14.490 --> 00:01:16.500
have in your bags at the show today.

00:01:16.740 --> 00:01:20.500
And to start that,
I'm bringing to the stage Steve Naroff,

00:01:20.500 --> 00:01:24.570
our Senior Director in charge
of Java and Cocoa development.

00:01:39.050 --> 00:01:48.150
So I'm just going to take five minutes
and try and tell you what we're up to.

00:01:48.740 --> 00:01:51.480
One thing that's really
important for everyone to hear,

00:01:51.530 --> 00:01:57.610
sometimes I get emails, voicemails,
or just talk to folks in the

00:01:57.610 --> 00:02:02.920
audience who really sometimes want
to understand whether Steve Jobs and

00:02:02.920 --> 00:02:09.120
Avi Tavenian and other executives at
Apple are really committed to tools.

00:02:09.420 --> 00:02:11.930
And the answer is yes.

00:02:11.930 --> 00:02:16.050
And it's not just because it's the
right thing to do for you guys,

00:02:16.100 --> 00:02:18.940
even though that is the prime motivator.

00:02:18.940 --> 00:02:20.830
It's also because it's
just in their blood.

00:02:20.830 --> 00:02:23.180
It's in my blood, it's in their blood.

00:02:23.180 --> 00:02:28.770
And ever since I've been working
with the two of them for 15 years,

00:02:28.770 --> 00:02:33.270
like Avi has worked with Steve,
tools have been a focus of

00:02:33.450 --> 00:02:36.200
their work and of our strategy.

00:02:36.200 --> 00:02:39.400
So I think you could be assured.

00:02:39.400 --> 00:02:43.100
That A, we're making great progress
and I think you'll see that.

00:02:43.140 --> 00:02:46.050
But B,
this is a long term proposition here.

00:02:46.050 --> 00:02:49.840
This isn't something that's
going to change overnight.

00:02:50.030 --> 00:02:54.600
So we want to participate, okay?

00:02:54.700 --> 00:02:57.000
For a while there,
Apple wasn't participating

00:02:57.000 --> 00:03:00.100
in this activity.

00:03:00.100 --> 00:03:04.870
It was purely leaning on the third
party community for great tools.

00:03:04.900 --> 00:03:07.740
The good news is,
even though we're participating,

00:03:07.810 --> 00:03:10.450
even though we're investing,
even though I think

00:03:10.510 --> 00:03:14.200
we're doing great work,
we are also embracing our third parties.

00:03:14.460 --> 00:03:18.610
We work closely with Metrowerks,
we work closely with Borland,

00:03:18.610 --> 00:03:21.720
we work closely with a lot
of the companies you're

00:03:21.720 --> 00:03:23.460
going to hear about today.

00:03:23.460 --> 00:03:27.040
And the simple fact is
we can't do it ourselves,

00:03:27.040 --> 00:03:27.760
okay?

00:03:27.760 --> 00:03:29.460
The space is too complex.

00:03:29.460 --> 00:03:35.360
And the types of problems you guys are
solving are too broad for Apple to have

00:03:35.390 --> 00:03:38.340
or to be the sole purveyor of tools.

00:03:38.460 --> 00:03:42.250
So it's pretty clear
that that's our strategy,

00:03:42.250 --> 00:03:42.930
okay?

00:03:42.960 --> 00:03:46.700
So I'd like to close by... by saying,

00:03:46.970 --> 00:03:48.900
and David Koehn.

00:04:16.900 --> 00:04:20.800
One of the reasons we do tools
is to support our framework

00:04:20.800 --> 00:04:23.360
and platform initiatives.

00:04:23.360 --> 00:04:26.520
However, Carbon,
clearly Metroworks has been a

00:04:26.520 --> 00:04:30.350
leader in the community for years,
again before we decided

00:04:30.350 --> 00:04:34.870
to reinvest in tools,
so clearly Code Warrior is a superior

00:04:34.980 --> 00:04:39.380
environment for doing Carbon development.

00:04:39.380 --> 00:04:42.960
On the other hand,
if you're doing pure Java development,

00:04:42.960 --> 00:04:46.900
when I say pure Java I mean
not programming to web objects.

00:04:46.900 --> 00:04:49.950
Not programming to QuickTime and
so on and so forth,

00:04:50.100 --> 00:04:55.490
but just doing swing development because
you need that cross-platform application,

00:04:55.500 --> 00:05:00.640
then JBuilder is going to be
the sweet spot for that type.

00:05:00.640 --> 00:05:03.310
For those of you who
were in the Java talk,

00:05:03.310 --> 00:05:08.190
it's the moral equivalent of what
I was talking about in the Java talk,

00:05:08.190 --> 00:05:14.200
which is decide where you fit in
terms of what you're trying to do.

00:05:14.200 --> 00:05:16.860
You're going to make a
framework choice based on that.

00:05:16.860 --> 00:05:19.650
Then you're going to make a tool
choice based on your framework choice,

00:05:19.650 --> 00:05:23.640
or at least the framework choice might
be influenced by the tool choice.

00:05:23.640 --> 00:05:28.000
All those things factor into the
path that you guys need to take.

00:05:28.000 --> 00:05:30.300
Certainly many of you
have lots of legacy code.

00:05:30.300 --> 00:05:32.260
In that case,
the answer is fairly simple.

00:05:32.270 --> 00:05:35.580
I'm speaking to people
who are doing new things.

00:05:35.580 --> 00:05:39.710
People doing new things have to
basically reflect on what it is

00:05:39.810 --> 00:05:43.620
you are trying to accomplish and
make decisions based on that.

00:05:43.670 --> 00:05:46.320
With that said,
I'm going to bring up Dave Payne.

00:05:46.320 --> 00:05:49.360
He's one of my development
tools managers.

00:05:49.360 --> 00:05:51.880
He's going to take you
through the details.

00:05:53.080 --> 00:05:54.180
Hey Dave.

00:05:54.220 --> 00:05:55.280
Thanks Steve.

00:05:55.280 --> 00:05:56.450
Here you go.

00:05:56.450 --> 00:05:58.180
The magic button.

00:06:00.600 --> 00:06:05.690
Okay, many of you may have seen me before
here on stage at WWDCs in the past

00:06:05.800 --> 00:06:07.820
speaking about developer tools.

00:06:07.950 --> 00:06:12.960
I'm responsible for Project Builder,
the Compiler, Debugger and

00:06:12.960 --> 00:06:15.980
Performance Tools for Mac OS X.

00:06:15.980 --> 00:06:18.540
So we'll take a look at

00:06:19.800 --> 00:09:11.400
[Transcript missing]

00:09:12.950 --> 00:09:15.960
So with Project Builder you
can do all the development that

00:09:15.960 --> 00:09:18.400
you need to do for Mac OS X.

00:09:18.400 --> 00:09:20.900
So again there's a whole
variety of languages,

00:09:20.900 --> 00:09:23.960
the primary languages that
we support on the system.

00:09:24.020 --> 00:09:27.280
C, C++, Objective C, Java.

00:09:27.280 --> 00:09:29.660
With these you can develop
for all of our frameworks,

00:09:29.960 --> 00:09:34.130
Cocoa, Carbon, Java 2 as Steve showed you
in your previous session.

00:09:34.260 --> 00:09:36.680
We've got a great Java environment.

00:09:36.680 --> 00:09:40.920
And now WebObjects 5,
a full Java environment for WebObjects

00:09:40.920 --> 00:09:45.900
that Builder with the new developer
tools CD provides support for that.

00:09:45.900 --> 00:09:48.190
You can also do Unix development.

00:09:48.200 --> 00:09:53.670
You can write tools or server daemon
processes that you might want to interact

00:09:53.830 --> 00:09:56.460
with from graphical applications.

00:09:56.460 --> 00:10:02.340
And then I/O Kit kernel extensions
and device drivers as well.

00:10:02.340 --> 00:10:07.360
There was a question yesterday
about Objective C++ development.

00:10:07.360 --> 00:10:11.180
So we are going to be
resurrecting Objective C++.

00:10:11.180 --> 00:10:14.590
For the purpose of allowing
Cocoa applications to use

00:10:14.600 --> 00:10:16.420
existing C++ libraries.

00:10:16.420 --> 00:10:19.270
I'm not going to go into that
in detail in this session.

00:10:19.270 --> 00:10:23.200
If you want to hear more about
that go to the compiler technology

00:10:23.200 --> 00:10:26.060
session on Thursday morning.

00:10:26.060 --> 00:10:29.960
But through all this technology you
can build the full array of things

00:10:29.960 --> 00:10:32.450
that you'll need to do for Mac OS X.

00:10:34.230 --> 00:10:37.700
Sometimes people ask us,
so is Project Builder real enough

00:10:37.830 --> 00:10:39.340
that I can use it for big projects?

00:10:39.440 --> 00:10:44.540
So we use it for all of
what we do for Mac OS X.

00:10:44.540 --> 00:10:47.790
There's over 250 projects that
go into Mac OS X at Apple that

00:10:47.790 --> 00:10:49.580
are using Project Builder today.

00:10:49.580 --> 00:10:53.660
There's a lot of facilities in there
to really help with team development.

00:10:53.660 --> 00:10:57.160
So of course every user has their
own preferences for the application.

00:10:57.160 --> 00:11:00.550
But in addition, for each project,
each user has their

00:11:00.580 --> 00:11:02.120
own settings for that.

00:11:02.300 --> 00:11:05.880
So their own active build styles,
their own active target,

00:11:05.880 --> 00:11:08.100
their own bookmarks,
their own breakpoints.

00:11:08.100 --> 00:11:12.320
And all of this is integrated with
the CVS source code management system,

00:11:12.320 --> 00:11:15.080
so you can really work
effectively as a team.

00:11:15.080 --> 00:11:20.450
Unix has been known for a long time
as a great development environment in

00:11:20.500 --> 00:11:23.880
terms of the sheer power underneath it,
but it's been very complex.

00:11:23.880 --> 00:11:27.270
So again, Project Builder makes
things simple for you,

00:11:27.270 --> 00:11:29.430
but there's a lot of
power that you can tap.

00:11:30.220 --> 00:11:33.740
The GCC compiler,
we compile all of our code for

00:11:33.950 --> 00:11:35.660
Mac OS X with this compiler.

00:11:37.790 --> 00:11:42.460
So I've talked about that we
leverage a lot of open source tools.

00:11:42.460 --> 00:11:45.740
We are working to actively
give back to the community.

00:11:45.740 --> 00:11:49.700
We've started giving GCC patches
back to the Free Software Foundation.

00:11:49.700 --> 00:11:53.730
We've signed the copyright assignment
agreement with GDB as well so that

00:11:53.730 --> 00:11:55.470
we can do that with GDB changes.

00:11:55.540 --> 00:11:58.330
So for example,
giving Objective C support

00:11:58.330 --> 00:11:59.700
back in both cases.

00:11:59.880 --> 00:12:03.640
Project Builder uses the Jam build tool,
but if you need to know about that,

00:12:03.640 --> 00:12:05.700
then we're doing something wrong.

00:12:05.900 --> 00:12:10.610
CVS version control,
the file merge utility uses diff,

00:12:10.610 --> 00:12:14.490
so we take advantage
of a lot of this power.

00:12:15.550 --> 00:12:19.080
So from the very beginning,
Project Builder has been designed

00:12:19.080 --> 00:12:22.100
especially to develop for Mac OS X.

00:12:22.160 --> 00:12:25.210
And in order to understand
Mac OS X development well and in order

00:12:25.210 --> 00:12:30.770
to understand Project Builder well,
you really need to study and memorize

00:12:30.770 --> 00:12:33.690
and learn the system overview manual.

00:12:33.720 --> 00:12:38.720
Now you'll find this in HTML and
I believe even PDF on the system.

00:12:38.920 --> 00:12:42.060
You can order hard copy
like this from Fat Brain.

00:12:42.540 --> 00:12:45.720
There's a lot of concepts that
you'll hear about throughout

00:12:45.720 --> 00:12:49.720
the week that are documented in
very good detail in this manual.

00:12:49.720 --> 00:12:55.720
I'd highly recommend that you get a hold
of that and really study it in depth.

00:12:55.720 --> 00:13:00.720
So for example, Project Builder builds
properly formed bundles.

00:13:00.810 --> 00:13:03.720
This is all your application
packages themselves.

00:13:03.720 --> 00:13:05.720
Plugins, frameworks.

00:13:05.850 --> 00:13:09.720
Inside bundles, you can put multiple
localizations of an application.

00:13:09.720 --> 00:13:13.720
So English, Japanese, German, French.

00:13:13.720 --> 00:13:17.730
In fact, in the new developer CD,
we've got Project Builder

00:13:17.730 --> 00:13:19.720
localized into Japanese.

00:13:19.720 --> 00:13:22.600
But you've got to build bundles
in order to support this.

00:13:22.770 --> 00:13:26.720
Project Builder, you can localize files
directly from there.

00:13:26.720 --> 00:13:30.720
If you're using Carbon and
Carbon resource files,

00:13:30.970 --> 00:13:33.720
Apple strongly recommends that
you know what you're doing.

00:13:33.720 --> 00:13:38.830
You can now use flat data files to store
the resource manager resources in so

00:13:38.830 --> 00:13:44.850
that you can store this in a file system
agnostic way for file systems like UFS or

00:13:44.960 --> 00:13:48.700
NFS that don't support resource force.

00:13:48.820 --> 00:13:54.720
Again, this is the default way that
Project Builder builds on Mac OS X.

00:13:54.720 --> 00:13:58.740
We generate Maco binaries,
which is the primary format

00:13:58.740 --> 00:14:00.720
for binaries on Mac OS X.

00:14:00.720 --> 00:14:02.720
This provides you direct access to
all the systems that you're building.

00:14:02.720 --> 00:14:04.840
This provides you direct access
to all the system APIs that

00:14:04.840 --> 00:14:05.720
we've got throughout the system.

00:14:05.720 --> 00:14:11.490
And that also enables full use
of all of Apple's Mac OS X tools.

00:14:13.010 --> 00:14:14.500
Frameworks.

00:14:14.500 --> 00:14:16.870
You'll hear a lot throughout
the week about frameworks.

00:14:16.900 --> 00:14:19.320
It's a very fundamental
concept in Mac OS X.

00:14:19.320 --> 00:14:21.780
These are Mac OS X's shared libraries.

00:14:21.780 --> 00:14:25.600
So, for example, Project Builder itself,
the application is a very small

00:14:25.740 --> 00:14:29.970
application that links with a couple
of large private frameworks and

00:14:29.970 --> 00:14:32.150
a couple of smaller frameworks.

00:14:32.150 --> 00:14:35.540
We've really factored the
application out in that manner.

00:14:37.080 --> 00:14:40.580
Project Builder gives you full
access to all your system frameworks.

00:14:40.710 --> 00:14:43.420
So, for inclusion and
searching of header files,

00:14:43.630 --> 00:14:46.530
you get direct access to
pre-compiled headers for our

00:14:46.530 --> 00:14:50.490
umbrella frameworks like Carbon and
Cocoa and application services,

00:14:50.500 --> 00:14:51.720
core services.

00:14:51.720 --> 00:14:55.980
As well as,
if you do finds across API documentation,

00:14:55.980 --> 00:15:01.050
you see book icons that let you
go directly to the API for that.

00:15:01.060 --> 00:15:04.160
You, of course,
can build your own frameworks

00:15:04.160 --> 00:15:06.200
for your own applications.

00:15:06.720 --> 00:15:10.270
And then Project Builder gives
you facilities to allow you to

00:15:10.390 --> 00:15:14.700
test your application with your
development versions of the frameworks

00:15:15.090 --> 00:15:18.860
without needing to install either
of them fully into the system.

00:15:18.980 --> 00:15:24.350
So, you don't have to trash your working
versions that you may be depending upon.

00:15:25.270 --> 00:15:28.800
Moving on to other tools,
you saw a great demo yesterday in

00:15:28.800 --> 00:15:32.370
the keynote when Scott Forstall
showed you Interface Builder.

00:15:32.530 --> 00:15:38.260
This is our user interface construction
tool for building Aqua compliant

00:15:38.260 --> 00:15:41.290
user interfaces for Cocoa and Carbon.

00:15:41.570 --> 00:15:45.960
There's a lot of great new support in
Interface Builder for what we call guides

00:15:46.380 --> 00:15:50.900
that let you see exactly when you're
compliant with the ACWA guidelines.

00:15:50.900 --> 00:15:52.220
A very powerful feature.

00:15:52.220 --> 00:15:54.790
To learn more about that,
come to the Interface Builder

00:15:54.920 --> 00:15:56.200
session this afternoon.

00:15:56.200 --> 00:16:01.800
This is integrated with Project Builder
in that you can directly launch it from

00:16:01.800 --> 00:16:04.940
Project Builder and move back and forth.

00:16:04.960 --> 00:16:10.830
Interface Builder makes it very easy to
use Cocoa's outlets and actions paradigm.

00:16:11.320 --> 00:16:14.380
So you can directly set
up your connections there.

00:16:14.380 --> 00:16:17.710
And with Carbon,
you can create Carbon nib-based

00:16:17.710 --> 00:16:20.300
applications with Interface Builder.

00:16:20.300 --> 00:16:23.920
This really is the easiest way
to use the Carbon event model.

00:16:23.920 --> 00:16:27.160
So you might find that useful as well.

00:16:29.100 --> 00:17:27.300
[Transcript missing]

00:17:28.930 --> 00:17:32.500
We've got a full suite of
performance analysis tools.

00:17:32.690 --> 00:17:35.120
As you've heard,
the performance characteristics of

00:17:35.120 --> 00:17:38.700
Mac OS X are much different than
those of Mac OS 9 in some cases,

00:17:38.700 --> 00:17:42.150
so it's really important that you
use these tools and understand those

00:17:42.160 --> 00:17:44.980
differences and optimize for X.

00:17:44.980 --> 00:17:50.820
So there's a variety of categories
here to watch what your CPU is doing.

00:17:50.820 --> 00:17:54.070
You can use tools,
the sampler graphical application

00:17:54.070 --> 00:17:58.130
or its equivalent command line
tool sample to see where your

00:17:58.220 --> 00:18:00.900
application is spending its time.

00:18:00.900 --> 00:18:04.250
To examine what's going
on with your memory use,

00:18:04.250 --> 00:18:08.010
we've got tools like malloc
debug and object alloc,

00:18:08.220 --> 00:18:13.180
graphical tools for displaying where
in your application you're allocating

00:18:13.180 --> 00:18:17.650
all your memory from and how many
objects you've got at various times.

00:18:17.690 --> 00:18:22.010
There's also a set of command line tools,
heaps, leak and malloc history.

00:18:22.010 --> 00:18:26.960
Check out the man page of malloc to
see information about malloc history.

00:18:26.960 --> 00:18:29.630
For all of these tools,
go to the performance tools

00:18:29.630 --> 00:18:31.520
session on Thursday afternoon.

00:18:31.520 --> 00:18:34.780
Robert will give a great
demo at that point.

00:18:34.980 --> 00:18:39.700
Quartz debug shows you really,
are you drawing too much on the screen?

00:18:39.720 --> 00:18:42.820
Sometimes you'll be drawing the same
thing multiple times in the same place.

00:18:42.820 --> 00:18:43.720
You don't even know it.

00:18:43.810 --> 00:18:46.440
You can't tell,
but it's taking time away that could

00:18:46.440 --> 00:18:48.480
be used for other things in the system.

00:18:48.750 --> 00:18:53.310
FS usage for file system usage,
seeing what all calls you're making.

00:18:53.310 --> 00:18:55.580
SC usage for system call.

00:18:55.580 --> 00:18:56.660
VM map for VM usage.

00:18:56.660 --> 00:19:01.100
Top for overall system
performance analysis.

00:19:01.100 --> 00:19:05.170
We've got really a full suite here,
and it's important that

00:19:05.170 --> 00:19:08.090
you take advantage of this.

00:19:09.980 --> 00:19:12.890
So how do we deliver this?

00:19:12.890 --> 00:19:15.000
On the Mac OS X Developer Tools CD.

00:19:15.080 --> 00:19:18.540
So as you've seen,
we shipped this CD with Mac OS X.

00:19:18.540 --> 00:19:22.950
We think it's really important
that we get the development tools

00:19:22.950 --> 00:19:26.950
out there and widely available for
people to really start ramping up

00:19:26.950 --> 00:19:28.740
on Mac OS X as quickly as possible.

00:19:28.740 --> 00:19:33.220
I'm sure that you all are at
the leading edge of the curve.

00:19:33.220 --> 00:19:37.030
We plan to do quarterly releases
of new Developer Tools CDs.

00:19:37.090 --> 00:19:40.750
We're sort of still working
out the precise details here,

00:19:40.750 --> 00:19:45.110
but as you've seen, the first quarterly
update here is at WWDC.

00:19:45.120 --> 00:19:48.320
You should have all received
a new Developer Tools CD.

00:19:48.320 --> 00:19:50.360
If you didn't, check downstairs.

00:19:50.420 --> 00:19:53.040
Make sure you get one.

00:19:53.040 --> 00:19:58.280
The CDs are free to all
ADC Premier and Select members,

00:19:58.490 --> 00:20:01.580
and you'll also be able to
download the packages from the web.

00:20:01.590 --> 00:20:03.900
The current CD packages
are not yet up there,

00:20:04.100 --> 00:20:05.160
but should be soon.

00:20:06.790 --> 00:20:08.910
So on the CD as a whole,
what all do you get?

00:20:09.240 --> 00:20:12.250
So you get the developer
applications that I've talked about.

00:20:12.250 --> 00:20:15.170
In addition,
you get the open source development tools

00:20:15.220 --> 00:20:18.700
and the BSD tools from Unix underneath.

00:20:18.730 --> 00:20:22.640
And you get what we
call the Mac OS X SDK.

00:20:22.640 --> 00:20:25.700
So the headers for all
the system frameworks.

00:20:25.700 --> 00:20:29.700
You get profile and
debug libraries so that,

00:20:29.700 --> 00:20:33.090
for example, in Project Builder you can
switch easily to use a debug

00:20:33.170 --> 00:20:34.700
variant of your frameworks.

00:20:34.700 --> 00:20:38.650
So you can get more information about
what's going on inside the frameworks.

00:20:38.700 --> 00:20:42.570
The debugger session on
Friday will tell more about that.

00:20:42.700 --> 00:20:44.830
As I mentioned, you get sample code.

00:20:44.830 --> 00:20:48.060
There's a lot of documentation
on the system and the tech pubs

00:20:48.170 --> 00:20:51.700
people are hard at work creating
new documentation all the time.

00:20:51.700 --> 00:20:54.810
And you've also got CarbonLib
SDK on the CD itself,

00:20:54.960 --> 00:20:58.190
not in Mac OS X packages,
but out there so you can copy it

00:20:58.300 --> 00:21:02.670
on if you're still doing CarbonLib
development for Mac OS X and 9.

00:21:02.700 --> 00:21:02.700
So you get a lot of documentation
on the system and the tech pubs

00:21:02.700 --> 00:21:02.700
people are hard at work creating
new documentation all the time.

00:21:02.700 --> 00:21:02.700
And you've also got CarbonLib
SDK on the CD itself,

00:21:02.700 --> 00:21:02.700
not in Mac OS X packages,
but out there so you can copy it

00:21:02.700 --> 00:21:02.700
on if you're still doing CarbonLib
development for Mac OS X and 9.

00:21:02.760 --> 00:21:04.810
8 and 9.

00:21:06.140 --> 00:21:09.510
So what's new in the CD that
you got here at the conference?

00:21:09.690 --> 00:21:15.600
So the primary theme of this CD was
support for WebObjects 5 development.

00:21:15.760 --> 00:21:19.100
You can use this for all
development for Mac OS X.

00:21:19.280 --> 00:21:20.990
There's some general
purpose enhancements,

00:21:21.050 --> 00:21:22.930
but the primary theme is WebObjects 5.

00:21:22.960 --> 00:21:26.240
Because WebObjects 5 is
a pure Java environment,

00:21:26.240 --> 00:21:32.010
we've done some enhancements in
the Java support in this build.

00:21:32.010 --> 00:21:36.740
And we'll tell a bit more details in the
project builder intro session and then

00:21:36.870 --> 00:21:38.490
the Java sessions throughout the week.

00:21:38.600 --> 00:21:44.190
Also on the CD, you do get the WebObjects
5 developer packages.

00:21:44.190 --> 00:21:47.040
And in addition,
a time-limited license for

00:21:47.040 --> 00:21:50.450
a restricted version of the
runtime so all of you can start

00:21:50.450 --> 00:21:52.890
experimenting with WebObjects 5 today.

00:21:52.960 --> 00:21:56.040
We don't plan to put that on
the CD forever in the future,

00:21:56.040 --> 00:21:58.870
but this is a great
opportunity this time around.

00:21:58.960 --> 00:22:02.220
There's new documentation,
additional examples.

00:22:02.290 --> 00:22:05.540
So you'll find a new
performance manual out there.

00:22:05.540 --> 00:22:07.960
This is very important again to study.

00:22:07.960 --> 00:22:10.840
This one also you can
order from Fatbrain,

00:22:10.970 --> 00:22:11.960
get hard copy.

00:22:12.060 --> 00:22:14.570
It'll make the performance
characteristics of the system

00:22:14.570 --> 00:22:15.950
a lot more understandable.

00:22:15.960 --> 00:22:19.480
Also there's an accessing hardware
document for those of you writing

00:22:19.480 --> 00:22:22.870
apps that you want to get directly
to characterizes the system.

00:22:22.970 --> 00:22:24.960
It's a very useful document.

00:22:24.960 --> 00:22:26.330
It's a very useful document to
understand the characteristics of

00:22:26.330 --> 00:22:27.960
a device and a quartz primer to
understand the graphics system better.

00:22:27.960 --> 00:22:32.960
In addition, updated API documentation
for Cocoa and Carbon.

00:22:32.960 --> 00:22:37.730
And there was a bug in the original
developer tool CD that's been fixed

00:22:37.730 --> 00:22:42.230
here so you can get directly to
the Carbon APIs help information

00:22:42.230 --> 00:22:44.680
from project builder again now.

00:22:45.300 --> 00:22:47.960
So with that, that's a quick summary.

00:22:47.960 --> 00:22:50.110
Again,
there's lots of additional sessions,

00:22:50.120 --> 00:22:53.150
project builder intro this afternoon,
but let me turn it back over

00:22:53.150 --> 00:22:56.330
to Godfrey to learn more
about the third party tools.

00:22:56.330 --> 00:22:57.160
Thanks, Godfrey.

00:22:57.160 --> 00:22:58.330
Thank you very much, Dave.

00:22:58.330 --> 00:23:00.710
Big hand for our development tools team.

00:23:00.710 --> 00:23:04.900
They've done a tremendous amount of work
and obviously have a lot more to go,

00:23:04.900 --> 00:23:07.960
and we're going to continue
to be upgrading those.

00:23:08.200 --> 00:23:12.050
Let's talk now a little bit about our
third party tools and our collaboration

00:23:12.050 --> 00:23:13.690
with third party tool vendors.

00:23:13.810 --> 00:23:16.200
We work very closely with these people.

00:23:16.200 --> 00:23:18.100
We give them engineering direction.

00:23:18.100 --> 00:23:20.950
We give them engineering
assistance on a direct basis.

00:23:20.950 --> 00:23:24.780
We seed them with early versions
of the operating system that none

00:23:24.780 --> 00:23:29.670
of you in general would want to
run because they're too fragile.

00:23:30.250 --> 00:23:32.850
We also help them with business
coordination so that our tool

00:23:32.850 --> 00:23:37.240
strategy internally coordinates
well with their tools.

00:23:37.450 --> 00:23:41.300
And that they have the right
things on target when we go

00:23:41.300 --> 00:23:43.190
to market with our pieces.

00:23:43.500 --> 00:23:46.960
Just thought I'd walk through and review
some of the tools that are currently

00:23:46.960 --> 00:23:50.370
available for Mac OS X development,
many of whom you're well

00:23:50.520 --> 00:23:51.600
familiar with already.

00:23:51.600 --> 00:23:54.450
Absoft is doing their
Pro Fortran product.

00:23:54.540 --> 00:23:56.240
They've got a Mac OS 9 version.

00:23:56.240 --> 00:23:58.260
They've got a Mac OS X version in beta.

00:23:58.260 --> 00:24:01.950
They tell me they'll probably be
GM about the end of June and be ready

00:24:01.950 --> 00:24:06.390
for all of the science and technical
industry that has this huge code base,

00:24:06.490 --> 00:24:08.380
millions and millions of
lines of Fortran code.

00:24:09.440 --> 00:24:10.720
Metrowerk's with Code Warrior.

00:24:10.720 --> 00:24:13.580
They're releasing here at the show,
you have in your bag,

00:24:13.580 --> 00:24:16.200
the early access Pro 7 release.

00:24:16.200 --> 00:24:18.400
And they have lots and
lots of enhancements.

00:24:18.460 --> 00:24:21.100
I actually have the folks from
Metrowerk's here to talk about

00:24:21.160 --> 00:24:23.580
their release and give us all
an update on their products.

00:24:23.680 --> 00:24:27.550
Real Software with Real Basic to
answer the basic challenge.

00:24:27.580 --> 00:24:31.690
They've had a GM Mac OS X application
for some time now and they've

00:24:31.790 --> 00:24:36.000
done some updates and I have them
here to talk about that today.

00:24:37.650 --> 00:24:41.740
Another category of tools that developers
need are installers and utilities.

00:24:41.740 --> 00:24:44.630
We have both of our external
vendors of installers,

00:24:44.810 --> 00:24:49.500
Aladdin Systems and MindVision,
with GM Mac OS X Ready products now.

00:24:49.500 --> 00:24:52.690
So once you finish your development,
you can wrap it, you can package it,

00:24:52.690 --> 00:24:54.500
you can deliver it to your customers.

00:24:54.500 --> 00:24:59.640
Mathem Aesthetics has done a marvelous
job of updating Resorcerer and bringing

00:24:59.640 --> 00:25:03.220
it to Mac OS X for all of you who
have been using traditional resource

00:25:03.220 --> 00:25:07.560
manager resources for many years and
who have need for lots of new features,

00:25:07.630 --> 00:25:10.500
Apple Script debugging and
all kinds of other things.

00:25:10.500 --> 00:25:15.410
They've gone GM with the new version
of Mac OS X Resorcerer and they're here

00:25:15.410 --> 00:25:17.500
with it at the show in the Exhibit Fair.

00:25:18.910 --> 00:25:21.780
and then for the
Java specialists in the audience,

00:25:21.780 --> 00:25:23.450
we're working very closely with Borland.

00:25:23.450 --> 00:25:27.490
You have a new preview
of JBuilder in your bags.

00:25:27.490 --> 00:25:30.440
Also, Zero-G with their install anywhere.

00:25:30.530 --> 00:25:32.070
And VMGear with Optimizeit.

00:25:32.220 --> 00:25:33.690
They're all ready for you.

00:25:33.690 --> 00:25:36.780
They're coming up on Mac OS X in
the very near future.

00:25:37.370 --> 00:25:40.500
So I think we have a very complete set.

00:25:40.550 --> 00:25:42.840
These are only a sampling
of what's available.

00:25:42.850 --> 00:25:44.440
There are many other tools available.

00:25:44.730 --> 00:25:49.100
How many here have gone to
the exhibit fair already?

00:25:49.610 --> 00:25:51.300
About three quarters of the
audience has their hands up.

00:25:51.300 --> 00:25:52.960
I'd like everybody to go visit them.

00:25:52.960 --> 00:25:55.500
We're running it all the way
through Wednesday this year.

00:25:55.500 --> 00:25:57.950
So you should be able to visit and
talk with each of these people and

00:25:57.950 --> 00:26:01.500
see how their tools meet your needs.

00:26:02.560 --> 00:26:03.500
Now let's talk a little bit.

00:26:03.500 --> 00:26:07.240
I'm going to have our friend
from Real Software come up.

00:26:07.280 --> 00:26:09.580
Let's talk about the basic
challenge for a moment.

00:26:09.630 --> 00:26:12.650
When you look at the industry,
when you look at the industry

00:26:12.650 --> 00:26:14.790
journals and read what's out there,
you always hear that

00:26:14.790 --> 00:26:17.310
there's three times as much,
four times as much software

00:26:17.310 --> 00:26:20.240
for the Windows platform as
there is for the Macintosh.

00:26:20.460 --> 00:26:22.750
And when you look in the industry
journal and look at the statistics,

00:26:23.020 --> 00:26:26.760
what you find is that 60 to 80 percent
of the additional packages out there

00:26:26.760 --> 00:26:29.420
are implemented with Visual Basic.

00:26:29.420 --> 00:26:31.000
Why is it so successful?

00:26:31.060 --> 00:26:34.160
Rapid application development
and ease of access.

00:26:34.210 --> 00:26:36.500
Nearly anyone can learn Basic.

00:26:36.500 --> 00:26:41.690
Well, we've had a big hole in this area
for a long time and now I think

00:26:41.780 --> 00:26:44.560
we have a real contender to fill
it with a Mac OS X solution.

00:26:44.800 --> 00:26:47.900
Let me introduce Lorin Rivers,
the product manager from Real Software.

00:26:47.900 --> 00:26:56.140
Thank you, Godfrey.

00:26:56.230 --> 00:26:56.900
Thanks for having me.

00:26:57.050 --> 00:26:57.900
Thank you.

00:26:58.250 --> 00:26:59.840
And, uh...

00:27:07.320 --> 00:27:10.840
So Mac OS X is the present.

00:27:10.880 --> 00:27:14.540
If you were here for Steve's
presentation yesterday,

00:27:14.600 --> 00:27:19.940
talking about the likely adoption
of Mac OS X and how people who

00:27:19.940 --> 00:27:23.760
are running Mac OS X feel about
running classic applications,

00:27:23.760 --> 00:27:28.590
I think you got the message
about how important it is that

00:27:28.590 --> 00:27:29.970
you also support Mac OS X.

00:27:30.160 --> 00:27:36.400
Our relationship with Apple enabled
us to deliver Real Basic for

00:27:37.150 --> 00:27:38.620
Mac OS X in February.

00:27:38.620 --> 00:27:43.530
And through our collaboration with them,
we've also been able

00:27:43.620 --> 00:27:45.100
to release two updates.

00:27:45.100 --> 00:27:49.500
Our most recent one adds a lot
of support for the latest and

00:27:49.860 --> 00:27:51.870
greatest Mac OS X functionality.

00:27:52.080 --> 00:27:55.640
Mac OS X is not just for early adopters.

00:27:55.740 --> 00:27:58.140
You know,
I'm a marketing guy and I'm running it.

00:27:58.320 --> 00:28:03.620
And Mac OS X is not just
for people who are Luddites.

00:28:03.700 --> 00:28:08.170
You know, it's got a lot of,
there's a lot of legacy software that

00:28:08.170 --> 00:28:10.320
people need to continue supporting.

00:28:10.460 --> 00:28:13.840
And this opportunity,
as Steve alluded to yesterday,

00:28:13.840 --> 00:28:17.240
is very similar to the
introduction of the PowerPC.

00:28:17.470 --> 00:28:20.200
If any of you were in the
Mac market at that time,

00:28:20.710 --> 00:28:25.150
there were,
when Quark released QuarkXPress for

00:28:25.150 --> 00:28:28.920
native for the PowerPC,
it really exploded.

00:28:29.020 --> 00:28:33.580
And it was a great opportunity
for Quark to gain huge,

00:28:33.630 --> 00:28:35.710
amounts of market share.

00:28:35.860 --> 00:28:41.050
Real Basic runs on the Macintosh.

00:28:41.120 --> 00:28:47.160
In fact, you can run it on a Quadra
660 AV running 7.6.1.

00:28:47.160 --> 00:28:53.640
And it's not as fast as it is on a G4,
but it's certainly capable.

00:28:53.640 --> 00:28:57.300
And the really cool thing about it
is that even if you're running on an

00:28:57.300 --> 00:29:01.100
antique piece of hardware like that,
you can create a Mac OS X native

00:29:01.100 --> 00:29:03.940
application with nothing special.

00:29:03.940 --> 00:29:05.280
It'll just compile it for you.

00:29:05.800 --> 00:29:10.370
So we run on Macintosh, Mac OS X,
and we compile for those two

00:29:10.460 --> 00:29:12.800
as well as for that other OS.

00:29:13.070 --> 00:29:16.910
And it's a great opportunity
for you to possibly expand

00:29:16.910 --> 00:29:20.930
your market if you're able to,
without changes,

00:29:21.240 --> 00:29:24.310
generate a Windows executable as well.

00:29:24.400 --> 00:29:29.420
So, you know, create on the Mac,
deliver on three other platforms.

00:29:29.450 --> 00:29:30.780
And Real Basic is compiled.

00:29:30.780 --> 00:29:35.540
It's not basic like 10 Go To.

00:29:35.570 --> 00:29:41.020
It's a modern version of
basic that uses the familiar,

00:29:41.020 --> 00:29:44.660
you know,
object dot property kind of syntax.

00:29:44.820 --> 00:29:47.010
It's professional strength.

00:29:47.180 --> 00:29:49.610
There's plenty of commercial
developers using Real Basic.

00:29:49.790 --> 00:29:52.820
It's completely object-oriented
from the ground up,

00:29:52.820 --> 00:29:55.230
designed that way and very rigorously.

00:29:55.240 --> 00:29:59.770
So, at the same time, you know,
sure it's basic,

00:29:59.800 --> 00:30:05.040
but you have direct access to all
of the power of the underlying OS,

00:30:05.040 --> 00:30:09.410
direct access to Mac toolbox calls,
PapiSheet shared libraries,

00:30:09.490 --> 00:30:13.260
as well as the Win32
API through declares.

00:30:13.370 --> 00:30:14.740
It supports SQL.

00:30:14.860 --> 00:30:18.140
You can connect to almost
any database you might name.

00:30:18.380 --> 00:30:19.480
We provide plug-ins.

00:30:19.540 --> 00:30:23.110
And it uses a single
API to access all of them.

00:30:23.120 --> 00:30:28.620
So you can do your development running
against Real Basic's native relational

00:30:28.620 --> 00:30:31.180
database and then deploy on Oracle,
for example,

00:30:31.180 --> 00:30:34.600
or OpenBase or FrontBase or any
of the other ones that we support.

00:30:34.810 --> 00:30:36.830
Plus,
we have direct support for Apple events.

00:30:36.850 --> 00:30:40.490
You can drag a compiled Apple script
right into your project and

00:30:40.580 --> 00:30:46.280
access it quick time and plenty
of other great Apple technologies.

00:30:46.280 --> 00:30:49.320
Why would you use Real Basic?

00:30:49.320 --> 00:30:52.510
Well, you know,
Michael and his team at Microsoft use

00:30:52.510 --> 00:30:55.270
Real Basic extensively for prototyping.

00:30:55.280 --> 00:31:02.550
Every new feature that they add to the
new version of Office and to Explorer 5

00:31:02.820 --> 00:31:05.380
was all prototyped in Real Basic.

00:31:05.390 --> 00:31:09.500
Thank you, Michael.

00:31:09.500 --> 00:31:15.190
Another example would be
MYOB account edge made in Real Basic,

00:31:15.190 --> 00:31:18.520
but the engine was written in C.

00:31:19.100 --> 00:31:19.100
And, you know, it's a very,
very complex engine.

00:31:19.100 --> 00:31:25.180
And this tool allows MYOB adopters
to convert their crafty old

00:31:25.630 --> 00:31:34.850
QuickBooks documents over to MYOB,
someone who's supporting the Mac OS.

00:31:35.570 --> 00:31:40.180
The Real Basic also
provides a rich plugin SDK,

00:31:40.180 --> 00:31:43.730
so say there's something
that Real Basic doesn't

00:31:43.730 --> 00:31:46.840
provide you that you need,
you can write it in C.

00:31:46.940 --> 00:31:52.740
You can write it in a cross-platform
fashion and access it very easily

00:31:52.740 --> 00:31:58.340
from within Real Basic without
having to write a bunch of

00:31:58.340 --> 00:31:58.340
special code inside of Real Basic.

00:32:00.650 --> 00:32:03.390
Real Basic is a rapid application
development environment.

00:32:03.390 --> 00:32:06.730
It's very similar to Interface
Builder in many ways,

00:32:07.160 --> 00:32:08.850
except I can use it.

00:32:08.960 --> 00:32:10.960
I'm a marketing guy again.

00:32:10.960 --> 00:32:14.270
I have a degree in geography
with a minor in philosophy,

00:32:14.290 --> 00:32:15.910
and I can use Real Basic.

00:32:15.950 --> 00:32:18.560
I'm not stupid or anything,
but I'm certainly not

00:32:18.560 --> 00:32:21.020
a computer programmer,
or at least I wasn't until

00:32:21.020 --> 00:32:22.730
I started working in real software.

00:32:22.740 --> 00:32:27.440
The really cool thing about it is
that it's an iterative process.

00:32:27.440 --> 00:32:28.720
What you see is what you get.

00:32:28.740 --> 00:32:32.460
You put some stuff in your window,
you test it to see if you like it,

00:32:32.480 --> 00:32:34.980
you add a little more functionality,
and next thing you know

00:32:34.980 --> 00:32:37.080
it's 4 in the morning,
and you've got bags under

00:32:37.080 --> 00:32:40.290
your eyes the next day because
you're having so much fun.

00:32:41.200 --> 00:32:43.960
So, Real Basic gives the ability
to be both productive and have

00:32:43.960 --> 00:32:45.760
a great time using your tool.

00:32:46.030 --> 00:32:49.100
Concentrate on the
value add that you have,

00:32:49.130 --> 00:32:53.250
which is making great software.

00:32:54.550 --> 00:32:59.230
Going forward,
we've got big plans for Real Basic.

00:32:59.460 --> 00:33:02.260
We're enhancing the
performance of the compiler.

00:33:02.510 --> 00:33:04.500
We're going to make much
smaller applications.

00:33:04.500 --> 00:33:10.170
We plan to begin addressing other
operating systems and platforms

00:33:10.630 --> 00:33:14.610
and also be able to create
plug-ins for other applications,

00:33:14.610 --> 00:33:17.480
which is something I'm really
excited about because I think

00:33:17.480 --> 00:33:18.820
it would be really fun.

00:33:20.940 --> 00:33:25.640
So before I go on,
let me mention something real quickly.

00:33:25.640 --> 00:33:30.720
You know, there's a couple of events in a
software company or a technology's

00:33:30.720 --> 00:33:32.920
lifespan that are defining.

00:33:32.920 --> 00:33:36.200
So one of them would be the
appearance of an O'Reilly book.

00:33:36.250 --> 00:33:40.180
And, you know, you're really,
it's a validating event.

00:33:40.260 --> 00:33:41.460
And that's really cool.

00:33:41.460 --> 00:33:42.880
And this is a fantastic book.

00:33:42.880 --> 00:33:45.820
If you're interested in getting
deep and dirty with Real Basic,

00:33:45.820 --> 00:33:48.650
you can't do any better than this book,
which is going to have a

00:33:48.650 --> 00:33:50.460
second edition out this summer.

00:33:50.460 --> 00:33:50.860
Thank you.

00:33:50.900 --> 00:33:52.110
last summer.

00:33:53.500 --> 00:33:55.590
And that's all great, you know,
Riley stuff,

00:33:55.710 --> 00:33:59.790
top-notch technological things, but...

00:33:59.970 --> 00:34:03.460
But you know that you've
really arrived when there's a

00:34:03.460 --> 00:34:05.580
Real Basic for Dummies book.

00:34:05.580 --> 00:34:08.680
And actually the fact is,
this is a fantastic

00:34:08.680 --> 00:34:10.810
introduction to Real Basic.

00:34:10.810 --> 00:34:15.280
And it's a very well written book
and full of pithy information.

00:34:15.280 --> 00:34:17.820
I encourage you to take a look at it.

00:34:18.080 --> 00:34:22.440
So I want to show you around
a little bit in Real Basic.

00:34:22.440 --> 00:34:30.530
What I want to do is show you how easy
it is to use Real Basic to go from,

00:34:30.690 --> 00:34:34.200
like say you are a Real Basic developer,
to go from your old

00:34:34.200 --> 00:34:39.280
Real Basic code to Mac OS X.

00:34:43.310 --> 00:34:49.590
So here's Real Basic 2
running in Classic.

00:34:53.430 --> 00:34:58.530
One thing I love about Mac OS X is
being able to do other things

00:34:58.540 --> 00:34:59.820
while applications are launching.

00:34:59.820 --> 00:35:04.480
I was an old Next user
and it really spoiled me.

00:35:04.520 --> 00:35:08.380
So here's my Real Basic project.

00:35:08.380 --> 00:35:12.030
This is actually,
this is version 1.2 of Real Bugs.

00:35:12.090 --> 00:35:16.360
It's the tool we use to ask for our
customers to provide us with feedback.

00:35:16.360 --> 00:35:18.300
So this is version 1.2.

00:35:18.300 --> 00:35:20.750
I just dug around on my desk.

00:35:20.860 --> 00:35:23.280
I had a two-year-old
version of the source.

00:35:23.280 --> 00:35:26.680
You know, open it up, run it in classic.

00:35:26.680 --> 00:35:31.780
Simply run and, you know,
you want to enter a summary.

00:35:31.780 --> 00:35:37.120
You know, Real Basic, so rocks.

00:35:37.120 --> 00:35:40.310
You know, and then you submit
this bug and it'll send,

00:35:40.380 --> 00:35:45.240
it uses an Apple script to communicate
with the email program that you're using.

00:35:45.240 --> 00:35:47.470
And sends us an email and then
we can automatically track

00:35:47.470 --> 00:35:48.620
it and that kind of stuff.

00:35:48.680 --> 00:35:53.140
And, you know,
you can see this looks like a standard.

00:35:53.300 --> 00:35:55.980
Mac OS Platinum user interface.

00:35:55.980 --> 00:35:57.400
And.

00:35:59.690 --> 00:36:06.320
and what I'll do now is open
that same project in the

00:36:06.320 --> 00:36:13.230
latest version of Real Basic,
which is Real Basic 3.

00:36:15.500 --> 00:36:20.960
I'll just drag that same
Real Basic 2 project onto the icon,

00:36:20.960 --> 00:36:24.200
run it, and...

00:36:26.530 --> 00:36:28.700
and David It's a two year old project.

00:36:28.720 --> 00:36:30.530
I hadn't run it in two years.

00:36:30.580 --> 00:36:35.020
So, you know, it's just that easy and,
you know, creating it, you know,

00:36:35.020 --> 00:36:38.100
people talk about eating
their own dog food.

00:36:38.100 --> 00:36:39.440
We don't do that.

00:36:39.440 --> 00:36:41.220
We eat our own caviar.

00:36:41.220 --> 00:36:44.730
And we're using more and more of
Real Basic inside of Real Basic.

00:36:44.820 --> 00:36:48.690
And this version of 3.2,
all of the lists are actually

00:36:48.700 --> 00:36:51.060
Real Basic list boxes.

00:36:51.060 --> 00:36:55.220
So it's a powerful motivator
to update and fix any,

00:36:55.370 --> 00:36:58.940
you know,
missing features in your products.

00:36:58.940 --> 00:37:02.230
So I want to thank Godfrey very
much for having me out today.

00:37:02.570 --> 00:37:05.130
Thank you for your attention
and we get a lot of value out of

00:37:05.140 --> 00:37:06.310
our relationship with Godfrey.

00:37:06.330 --> 00:37:09.920
He's the bomb.

00:37:09.940 --> 00:37:10.940
Thank you very much, Lauren.

00:37:10.940 --> 00:37:10.940
Thank you, Godfrey.

00:37:10.940 --> 00:37:10.940
No doubt.

00:37:16.000 --> 00:37:19.370
So for more information about Real Basic,
Loren is here all week and he'll

00:37:19.370 --> 00:37:21.210
be over in the exhibit fair.

00:37:21.210 --> 00:37:22.900
There's some contact information.

00:37:22.900 --> 00:37:23.900
You can find him.

00:37:23.900 --> 00:37:28.170
And Real Basic has a birds
of a feather tonight.

00:37:28.170 --> 00:37:32.810
And that's their URL so you can
find them easily on the web.

00:37:33.030 --> 00:37:36.390
They deploy a lot of their software
via the web so you can download an

00:37:36.390 --> 00:37:37.890
evaluation copy and just try it out.

00:37:37.890 --> 00:37:38.830
See if it works for you.

00:37:38.900 --> 00:37:41.070
Extremely useful product.

00:37:41.070 --> 00:37:44.900
Tremendous capability
bringing apps to Mac OS X.

00:37:44.900 --> 00:37:48.900
At this point in time I believe
there are about 40 or 50 applications

00:37:48.900 --> 00:37:51.310
in the shareware domain that were
written with Real Basic and are

00:37:51.400 --> 00:37:53.890
immediately native Mac OS X apps.

00:37:54.010 --> 00:37:56.600
This is a great story.

00:37:57.000 --> 00:37:59.480
Now,
I'm sure all of you are waiting for this.

00:37:59.720 --> 00:38:04.370
I think it goes without saying that
95% of the Mac OS X commercial apps on

00:38:04.370 --> 00:38:07.460
the market are made with Code Warrior.

00:38:07.460 --> 00:38:11.540
So I felt it important to bring
them to talk with us today.

00:38:11.540 --> 00:38:15.300
They're our leading third party
supplier of development tools and

00:38:15.300 --> 00:38:19.200
we are working very hard to get
together on Mac OS X with them.

00:38:19.200 --> 00:38:22.310
And to talk about that,
I'm bringing Matt Henderson,

00:38:22.310 --> 00:38:25.570
the technical lead for Code Warrior,
to talk to you.

00:38:28.500 --> 00:38:30.700
Thanks Godfrey.

00:38:30.700 --> 00:38:32.500
Steve, you're on the phone.

00:38:32.750 --> 00:38:37.460
Okay, so I'm here to talk to you
today about a number of things.

00:38:37.460 --> 00:38:40.500
First off, I just want to say that we've
been on Mac OS X a long time.

00:38:40.500 --> 00:38:43.500
We've been doing this,
I've been in charge of getting everything

00:38:43.590 --> 00:38:47.500
on Mac OS X running and targeting
Mac OS X for almost two years now.

00:38:47.500 --> 00:38:50.110
So,
Mac OS X with the release of public beta

00:38:50.110 --> 00:38:53.590
and maybe with the release of final,
if you haven't moved your apps yet,

00:38:53.590 --> 00:38:54.500
is new territory for you.

00:38:54.500 --> 00:38:56.930
But it's,
we've absolutely been there from

00:38:56.940 --> 00:39:00.260
the very beginning and it's been
a lot of great fun for us all.

00:39:00.570 --> 00:39:05.820
So, in your show bag, speaking of that,
is your Code Warrior 7

00:39:05.820 --> 00:39:09.500
Pro Early Access CD that has
our latest stuff for Mac OS X.

00:39:09.500 --> 00:39:12.650
So if you haven't gotten that
CD out and tried to use it yet,

00:39:12.650 --> 00:39:13.500
you should.

00:39:13.500 --> 00:39:15.500
We've experienced,
I'm going to cover everything in depth,

00:39:15.500 --> 00:39:19.720
but it's an across the board
improvement for every aspect of the

00:39:19.730 --> 00:39:21.500
Code Warrior tools running on Mac OS X.

00:39:21.500 --> 00:39:24.500
And so,
after we cover what's in Mac OS X,

00:39:24.500 --> 00:39:24.500
we're going to cover the
Mac OS X development tools.

00:39:24.500 --> 00:39:27.490
And then, once we get the products on
the Pro 7 Early Access CD,

00:39:27.530 --> 00:39:31.060
we'll go into the future directions and
how we're going to continue to enable you

00:39:31.060 --> 00:39:35.490
to make cool apps for Mac OS X and take
advantage of new Mac OS X technologies.

00:39:37.740 --> 00:39:41.860
So first thing and most important
to everyone who's developing

00:39:41.860 --> 00:39:46.350
on Mac OS X is debugging,
which was probably the weakest

00:39:46.350 --> 00:39:50.700
part of the Code Warrior Pro 6
Mac OS X experience.

00:39:50.700 --> 00:39:52.460
So to talk about debugging,
I've got Ken Ryle,

00:39:52.460 --> 00:39:54.040
our Director of Debugging Technology.

00:39:54.130 --> 00:39:58.460
He's going to cover in-depth what's
new with the Code Warrior Pro 7

00:39:58.460 --> 00:40:04.920
Early Access stuff in regards
to Mac OS X debugging.

00:40:06.990 --> 00:40:10.520
So, for the past couple of years,
Metrowerk has come to WWDC and

00:40:10.550 --> 00:40:13.900
shown you Code Warrior debugging
applications on Mac OS X.

00:40:13.910 --> 00:40:17.170
But, of course,
the operating system has evolved since

00:40:17.170 --> 00:40:18.900
we shipped the Pro 6 tools last fall.

00:40:18.900 --> 00:40:23.050
So, as Matt said in your bag,
everyone's got one of these CDs and

00:40:23.140 --> 00:40:25.770
we wanted to update the tools we
shipped last fall so that they

00:40:25.770 --> 00:40:30.240
work a lot better with the release,
with the final release of

00:40:30.240 --> 00:40:34.900
Mac OS X now that the OS is
out the door and in your hands.

00:40:34.900 --> 00:40:38.920
Since most of our developers are
working with Carbon PEP apps,

00:40:39.030 --> 00:40:42.900
initially we focused on
improving debugging performance

00:40:42.900 --> 00:40:45.900
for CFM Carbon applications.

00:40:45.900 --> 00:40:49.900
So, the tools on this CD are faster,
they're more reliable,

00:40:49.900 --> 00:40:54.890
and work better than the ones that
we shipped with the Pro 6 tools.

00:40:54.900 --> 00:40:59.900
In particular, we worked on improving
debugging of shared libraries.

00:40:59.900 --> 00:41:02.900
We worked a lot of our larger
customers that have big applications,

00:41:02.900 --> 00:41:04.900
lots of shared libraries.

00:41:04.900 --> 00:41:06.900
Big plugin architectures.

00:41:06.900 --> 00:41:09.080
And so,
we worked with them to improve the whole

00:41:09.080 --> 00:41:13.650
shared library debugging experience
to try and get better performance

00:41:14.030 --> 00:41:17.680
and try and approach our real goal,
which is to give you the same kind of

00:41:17.680 --> 00:41:21.880
debugging experience on 10 that you've
had on 9 with our tools for years.

00:41:21.900 --> 00:41:24.900
We also cleaned up some
things about the tools.

00:41:24.900 --> 00:41:28.010
They no longer require some of the
helper apps that we've had before,

00:41:28.110 --> 00:41:31.290
like DebugNub or MetroNutBacks
that you may have seen in some

00:41:31.290 --> 00:41:32.900
of our tools releases before.

00:41:32.900 --> 00:41:34.890
So, we streamlined that process.

00:41:34.900 --> 00:41:38.830
We've also been working with
Apple to improve performance.

00:41:38.930 --> 00:41:41.860
Earlier,
Dave Payne talked about leveraging

00:41:41.860 --> 00:41:43.900
open source for tools on Mac OS X.

00:41:43.980 --> 00:41:50.900
And the Code Warrior debugger on 10
uses GDB as the low-level debug service.

00:41:50.900 --> 00:41:54.980
So, we've been working closely with
Dave and his team to improve

00:41:54.980 --> 00:41:59.330
GDB for our customers as well,
and consequently just improve the

00:41:59.330 --> 00:42:01.840
debugging experience on Mac OS X.

00:42:01.920 --> 00:42:02.900
So, that's it.

00:42:03.130 --> 00:42:03.900
Thank you.

00:42:03.900 --> 00:42:07.350
So, we've been doing all those
things for people developing

00:42:07.350 --> 00:42:10.030
Carbon PEP applications,
but we've also been

00:42:10.040 --> 00:42:11.790
working on Mac O debugging.

00:42:12.240 --> 00:42:16.890
Mac O has a different
symbolics format than Carbon,

00:42:16.890 --> 00:42:18.900
or rather, PEP applications do.

00:42:18.900 --> 00:42:21.890
They use SIM,
which you've seen on the Mac for years,

00:42:21.900 --> 00:42:23.900
and Mac O apps use Stabs.

00:42:23.900 --> 00:42:28.290
So, on the CD, there's a new plug-in to
Code Warrior that's a Stab

00:42:28.420 --> 00:42:31.730
symbolics reader that will let
you debug applications built

00:42:31.730 --> 00:42:32.900
with GCC and with our own NUCs.

00:42:32.990 --> 00:42:36.900
And with our own Mac O tools
that are also on the CD.

00:42:36.900 --> 00:42:41.830
The Mac O debugger isn't as
polished as the PEP debugger is,

00:42:42.000 --> 00:42:44.900
but we're going to be working
on both in the future a lot,

00:42:44.900 --> 00:42:48.920
and also improving the experience
if you're debugging both binary

00:42:48.920 --> 00:42:50.900
formats in the same process.

00:42:50.900 --> 00:42:56.880
So, if you have a Mac O application
hosting a CFM bundle and vice versa.

00:42:56.970 --> 00:43:01.880
So, that's what's new in
the debugger in this CD.

00:43:01.900 --> 00:43:04.850
And we're also going to be
doing more releases over the

00:43:04.850 --> 00:43:06.900
summer through our beta program.

00:43:06.900 --> 00:43:10.900
There's an email address on the CD that
we'd like for you to contact us at,

00:43:10.970 --> 00:43:15.000
let you know your experiences with
this CD and the tools in general,

00:43:15.000 --> 00:43:16.890
and let us know how
we're doing with that.

00:43:16.900 --> 00:43:20.850
And that way we can update you
with additional debugger components

00:43:20.900 --> 00:43:25.890
as we improve them towards our
Pro 7 release later this year.

00:43:25.900 --> 00:43:30.310
So, that's our debugging story,
and I'd like to get Matt back up

00:43:30.310 --> 00:43:30.900
to tell you about the rest of it.

00:43:30.900 --> 00:43:34.420
And I'll tell you about the rest of
the tools on the CD and what we're

00:43:34.430 --> 00:43:35.900
going to be working on in the future.

00:43:35.900 --> 00:43:37.900
Thanks again.

00:43:41.100 --> 00:43:45.570
So, after the bugger,
probably the central tool that you use

00:43:45.570 --> 00:43:48.470
the most on Mac OS X will be the new IDE.

00:43:48.850 --> 00:43:53.090
The Pro 7 Early Access CD that
you have includes the new 4.2 IDE.

00:43:53.100 --> 00:43:58.100
And it has a number of new features to
make Mac OS X development much better.

00:43:58.100 --> 00:44:01.100
First and foremost,
it handles untyped files.

00:44:01.100 --> 00:44:04.950
With Mac OS X,
Apple has rolled out the support

00:44:04.960 --> 00:44:09.400
for non-HFS file systems,
and so you can no longer rely on the

00:44:09.400 --> 00:44:13.950
HFS types and creator codes that FSP,
Github, Info gives you back.

00:44:14.100 --> 00:44:19.210
So the IDE uses a variety of mechanisms,
including content sniffing to identify

00:44:19.210 --> 00:44:23.100
files by what they really are and not
just what the file system says they are.

00:44:23.100 --> 00:44:26.360
And so as a consequence,
you can open both the untyped text

00:44:26.360 --> 00:44:31.100
files that Apple installs with their dev
tools and also any files on a UFS file.

00:44:31.100 --> 00:44:36.900
So that just makes actually looking
at the Mac OS X header files actually

00:44:36.900 --> 00:44:40.100
possible now with the CodeWare IDE.

00:44:40.390 --> 00:44:44.960
Also, one of our biggest features
for the new 4.2 IDE is support

00:44:45.160 --> 00:44:47.080
for Mac OS X frameworks.

00:44:47.170 --> 00:44:49.230
You've heard all the Apple guys
talking about frameworks,

00:44:49.300 --> 00:44:51.880
which is their new mechanism for
distributing headers and libraries

00:44:51.880 --> 00:44:53.100
together in a bundled package.

00:44:53.100 --> 00:44:57.100
And the IDE can now use those
to build and link against.

00:44:57.100 --> 00:44:59.710
So you can add a framework to your
project and it will show up in

00:44:59.710 --> 00:45:01.100
a new tab in the project window.

00:45:01.100 --> 00:45:03.100
So for you to see which
frameworks you're using.

00:45:03.100 --> 00:45:06.250
And once you've added them,
you're effectively linking against the

00:45:06.250 --> 00:45:08.100
Mac OS library that's in the framework.

00:45:08.100 --> 00:45:11.350
And so you can use that to get at
both the headers that are provided

00:45:11.350 --> 00:45:13.100
by the framework and the library.

00:45:13.100 --> 00:45:18.100
And you'll be linking against the library
and you'll get full access to the API.

00:45:18.100 --> 00:45:20.740
So through frameworks,
you can get access to all

00:45:20.740 --> 00:45:27.200
of the Mac OS only APIs,
such as Quartz, Launch Services,

00:45:27.200 --> 00:45:30.100
and some of the other native
APIs that aren't available via Python.

00:45:30.100 --> 00:45:30.330
So you can get access to
all of the Mac OS APIs,

00:45:30.340 --> 00:45:30.690
such as Quartz, Launch Services,
and some of the other native

00:45:30.690 --> 00:45:31.010
APIs that aren't available via Python.

00:45:31.130 --> 00:45:34.100
And of course to support
frameworks fully,

00:45:34.100 --> 00:45:39.460
Apple has introduced a new include
directive syntax where you qualify

00:45:39.460 --> 00:45:46.100
your file name with the framework
name in order to find the actual file.

00:45:46.100 --> 00:45:49.480
So for example,
include carbon/carbon.h really

00:45:49.480 --> 00:45:53.920
means find Carbon.h wherever it
is within the Carbon framework.

00:45:54.100 --> 00:45:57.100
We didn't support that before, we do now.

00:45:57.100 --> 00:46:00.100
So you can say include,
use that exact syntax.

00:46:00.160 --> 00:46:03.240
And that exact syntax on the screen,
it will compile fine with Code Warrior if

00:46:03.240 --> 00:46:07.200
you have your framework set up
and you'll be able to use the,

00:46:07.200 --> 00:46:10.210
you'll be able to compile Apple's
headers and use framework notation in

00:46:10.210 --> 00:46:12.100
your own include directives as well.

00:46:12.100 --> 00:46:15.320
And of course to prevent us to
not break all of your existing

00:46:15.360 --> 00:46:19.100
source that's assuming our sort
of flat access path mechanism,

00:46:19.100 --> 00:46:24.750
include Carbon.h without the framework
qualifier continues to work so you won't

00:46:24.870 --> 00:46:29.090
have to make massive numbers of source
change to your include directives.

00:46:29.100 --> 00:46:30.690
directives.

00:46:31.350 --> 00:46:35.490
Also for the IDE,
Apple has been talking for, I guess,

00:46:35.610 --> 00:46:40.770
over a year now about distributing
applications and binaries in bundles,

00:46:40.770 --> 00:46:44.360
which is sort of a magic directory
structure that contains both an

00:46:44.420 --> 00:46:46.300
application and all its resources.

00:46:46.300 --> 00:46:49.650
So we've added support for
building bundles from the IDE and

00:46:49.650 --> 00:46:51.490
all our other various tools.

00:46:51.490 --> 00:46:54.320
And in particular,
the IDE has a converter that will

00:46:54.380 --> 00:46:58.300
easily update your existing projects
so that they output bundles.

00:46:58.300 --> 00:47:00.290
So you can run this simple converter.

00:47:00.390 --> 00:47:04.270
It will generate the bundle directory
structure for your target output.

00:47:04.270 --> 00:47:09.400
It will create your plist
resource for you based on your

00:47:09.400 --> 00:47:11.300
old-style finder BNDL resource.

00:47:11.300 --> 00:47:14.300
And it will create
Mac OS targets for your project.

00:47:14.300 --> 00:47:18.060
So run this once and you're
ready to go to build a completely

00:47:18.340 --> 00:47:20.570
Mac OS X native application.

00:47:22.620 --> 00:47:25.110
So MSL has been updated
with a few feature tweaks.

00:47:25.150 --> 00:47:30.220
We've added support for
various HFS Plus features,

00:47:30.220 --> 00:47:32.720
the most notable of
which is long file names.

00:47:32.850 --> 00:47:36.060
So you can use, in MSL now,
you can use file names that

00:47:36.100 --> 00:47:37.490
have more than 31 characters.

00:47:37.500 --> 00:47:42.730
And when we're building for Mac O,
we don't use MSLC,

00:47:42.730 --> 00:47:47.940
we use the ANSI C implementation that
Apple supplies in System.Framework

00:47:48.460 --> 00:47:53.100
and our NCC++ application will link
against Apple's implementation and

00:47:53.140 --> 00:47:56.950
save you some overhead since Apple's
version is really just a shared library

00:47:56.950 --> 00:47:58.530
that's available to all system apps.

00:47:58.540 --> 00:48:02.720
So you don't have to build MSLC into
your Mac O applications and waste

00:48:02.720 --> 00:48:04.540
a bunch of code in disk space.

00:48:05.640 --> 00:48:07.360
The Power Plant has been revved as well.

00:48:07.360 --> 00:48:08.890
It now builds for Mac OS.

00:48:09.000 --> 00:48:13.260
So you can build your Power Plant for
Mac OS and get complete access

00:48:13.260 --> 00:48:17.640
to all of the new native APIs on
Mac OS X that aren't available for PEF.

00:48:17.640 --> 00:48:20.060
We fixed a number of Aqua-related
bugs in the Appearance

00:48:20.060 --> 00:48:24.450
Manager related code in Power Plant,
so your Power Plant applications will,

00:48:24.470 --> 00:48:26.860
in general,
if you're using Appearance Manager,

00:48:26.940 --> 00:48:29.500
come out looking much nicer
when running on X now.

00:48:29.940 --> 00:48:34.780
And we have a new version of Constructor
that outputs Apple's new recommended

00:48:34.990 --> 00:48:38.390
flat resource fork format where the
contents of the resource fork are

00:48:38.480 --> 00:48:43.000
actually stored in a files data fork,
so that file can live easily on

00:48:43.290 --> 00:48:48.240
flat file systems like UFS and be
transported over the internet easily.

00:48:48.240 --> 00:48:52.560
So all those features are in
Power Plant and Constructor now.

00:48:52.600 --> 00:48:55.180
The compiler and linker
have been revved as well.

00:48:55.180 --> 00:48:58.800
We continue to crank away on
optimizations for the compiler.

00:48:58.830 --> 00:49:05.520
With the new high-end PowerMax,
the 667 and 733 megahertz PowerMax,

00:49:05.520 --> 00:49:09.540
Apple introduced the
PowerPC 7450 chip from Motorola,

00:49:09.540 --> 00:49:13.470
which has a longer pipeline and
enhanced Altebec performance.

00:49:13.470 --> 00:49:16.890
And the compiler on the Pro 7 tool
supports optimization specific for

00:49:17.010 --> 00:49:23.300
that chip that will make the code
run faster when you target that chip.

00:49:23.300 --> 00:49:26.130
The PEF linker has been revved in
a manner similar to our other tools

00:49:26.130 --> 00:49:29.110
that deal with resource forks,
so it supports, or resource files,

00:49:29.240 --> 00:49:29.920
so it supports flat-file.

00:49:29.920 --> 00:49:34.870
resource files, and it supports building
application bundles easily as well.

00:49:35.050 --> 00:49:38.190
and we're completely new,
or not a completely new set of tools,

00:49:38.540 --> 00:49:42.460
but new tools that are actually beginning
to get into the realm of being very

00:49:42.460 --> 00:49:44.680
useful are our Mac O Compiler and Linker.

00:49:44.680 --> 00:49:47.380
We've put them before as extremely,
you know,

00:49:47.380 --> 00:49:51.100
extremely early access thrill seeker
on past releases and now they're

00:49:51.100 --> 00:49:54.620
getting to the point where you can
start using them to build big things.

00:49:54.640 --> 00:49:59.070
The Mac O Compiler is exactly
the same C/C++ front end as

00:49:59.080 --> 00:50:01.440
our existing PATH compiler.

00:50:01.990 --> 00:50:05.760
So really unless you're
using new Mac O API,

00:50:05.790 --> 00:50:08.580
you want to use new Mac O APIs,
there's no reason you'll have to

00:50:08.580 --> 00:50:12.320
change your source to switch from
PATH to Mac O using code ware.

00:50:12.380 --> 00:50:15.750
Our Mac O Linker,
right now we're using an interim

00:50:15.750 --> 00:50:19.460
linker that we've developed
in collaboration with Apple.

00:50:19.460 --> 00:50:21.660
It's based on Apple's
Darwin open source linker.

00:50:21.660 --> 00:50:28.420
It uses stabs for debugger symbolics
like Ken indicated earlier and it's

00:50:28.420 --> 00:50:31.920
a bit slower and stabs is quite a
bit bigger and more inconvenient.

00:50:31.920 --> 00:50:34.160
It's a bit more convenient
than the SIM symbolics are.

00:50:34.300 --> 00:50:38.040
So we're working really hard on a
new MetroWorks Mac O Linker that will

00:50:38.040 --> 00:50:39.480
be just as fast as our PATH linker.

00:50:39.480 --> 00:50:42.170
We'll use SIM for symbolics
and it will have all the

00:50:42.170 --> 00:50:44.900
features that you expect in the,
in a MetroWorks linker.

00:50:47.700 --> 00:52:00.200
[Transcript missing]

00:52:01.080 --> 00:52:02.180
So future directions.

00:52:02.270 --> 00:52:04.300
This is where we're going
with Code Warrior and we

00:52:04.310 --> 00:52:07.910
think that it's all solid,
you know, fundamental stuff that

00:52:07.910 --> 00:52:11.650
needs to be done for,
you know, to keep you as customers and

00:52:11.690 --> 00:52:14.680
to keep you targeting Mac OS X.

00:52:14.680 --> 00:52:18.190
First and foremost in the compiler
linker we're going to finish off

00:52:18.210 --> 00:52:20.380
our Cocoa and Objective-C support.

00:52:20.380 --> 00:52:23.970
We initially added Objective-C syntax
support quite a while ago in the back

00:52:24.130 --> 00:52:26.300
in the days of Yellowbox and Rhapsody.

00:52:26.300 --> 00:52:30.860
We haven't really gone through a rigorous
validation of that support though.

00:52:31.000 --> 00:52:34.720
And we're going to fully validate it,
qualify it, make sure it's, you know,

00:52:34.810 --> 00:52:39.200
100% compliant and, you know,
it's fully integrated into our compilers.

00:52:39.340 --> 00:52:43.100
We're also, as I mentioned earlier,
working on a new Maco linker based on

00:52:43.320 --> 00:52:46.650
our own linker technology and not the
Apple's Darwin open source linker.

00:52:46.720 --> 00:52:49.870
It will be, like I said,
inherit a lot of code from

00:52:49.870 --> 00:52:51.960
our existing PowerPC linker.

00:52:52.020 --> 00:52:53.500
It will be very fast.

00:52:53.660 --> 00:52:55.690
It will dead strip unused code that,
you know,

00:52:55.690 --> 00:52:58.920
is not called by our application but
is actually included in your project.

00:52:58.920 --> 00:53:01.000
And it will output SIM for data.

00:53:01.000 --> 00:53:04.400
And it will also be able to debug
your symbolics which are traditionally

00:53:04.410 --> 00:53:07.300
much smaller and tighter and
faster to use than Stabs is.

00:53:09.480 --> 00:53:14.720
and David So for the IDE,
in the immediate future you'll see

00:53:14.990 --> 00:53:18.980
hopefully for the fourth Pro 7 final,
you'll see long file name support.

00:53:18.980 --> 00:53:22.700
So you'll no longer have to worry
about headers and sources having

00:53:22.700 --> 00:53:24.320
only 31 characters in the file name.

00:53:24.380 --> 00:53:28.100
You'll be able to use full 255
character Unicode file names and

00:53:28.100 --> 00:53:32.160
have the IDE be able to deal with
those source and header files easily.

00:53:32.260 --> 00:53:35.350
We're in the initial planning
stages with Apple about integrating

00:53:35.440 --> 00:53:39.020
Code Warrior and Interface Builder
together to provide support for both

00:53:39.230 --> 00:53:43.720
Carbon Nib-based development and
Cocoa Objective-C and Java development.

00:53:43.720 --> 00:53:48.020
We would like to have
something to show for 7 final.

00:53:48.020 --> 00:53:50.730
We may not though,
but it's very interesting to us

00:53:50.830 --> 00:53:54.770
and Apple and we intend to fully,
fully explore that avenue

00:53:54.770 --> 00:53:56.620
of supporting Cocoa.

00:53:56.620 --> 00:53:58.730
And of course we're always
working on our user interface

00:53:58.730 --> 00:54:01.860
to make Code Warrior better,
easier and faster to use and we're

00:54:01.860 --> 00:54:05.720
always working on performance both
in our own tools and in CodeGen.

00:54:05.720 --> 00:54:10.260
so that your software will run
faster when it's built with CodeWare.

00:54:12.740 --> 00:54:13.800
The debugger.

00:54:13.840 --> 00:54:16.070
Our ultimate goal with the debugger is,
which has been the most

00:54:16.070 --> 00:54:20.190
frustrating aspect for people
using our Mac OS X tools so far,

00:54:20.190 --> 00:54:23.240
is to make the debugging
experience as smooth and work as

00:54:23.240 --> 00:54:25.390
well on Mac OS X as it does on 9.

00:54:25.600 --> 00:54:29.590
That being said, we're not there yet with
the 7 Early Access stuff,

00:54:29.620 --> 00:54:32.960
but it's gotten a lot,
lot better since 6 and some of

00:54:32.960 --> 00:54:35.150
the beta releases that some of
you have probably seen between

00:54:35.190 --> 00:54:37.600
6 and the 7 Early Access stuff.

00:54:37.600 --> 00:54:41.460
And it's going to get a lot better in the
future and it will be better for 7 and

00:54:41.510 --> 00:54:45.350
we're going to keep hitting on it until
it works like you expect it to work.

00:54:45.600 --> 00:54:50.400
And even more exciting for the debugger
stuff is that Mac OS X allows us,

00:54:50.400 --> 00:54:54.730
because we're using GDB as the
underlying low-level debugger,

00:54:54.730 --> 00:54:56.730
and by the way,
you will never see GDB when

00:54:56.730 --> 00:54:57.600
using Code Warrior.

00:54:57.600 --> 00:55:01.780
You'll be completely isolated from it,
so really the fact that we're

00:55:01.810 --> 00:55:05.590
using GDB is a technical detail
that doesn't concern you.

00:55:05.900 --> 00:55:10.660
Um... We will be able to do a few
cool new things like adding support

00:55:10.770 --> 00:55:12.550
for viewing opaque data types.

00:55:12.970 --> 00:55:15.880
Apple rolled out completely
opaque data types in the

00:55:15.880 --> 00:55:19.820
Carbon API such that you can't see,
you know, the actual values of the

00:55:19.820 --> 00:55:23.750
members of your window pointer,
for example, or you can't see the

00:55:24.130 --> 00:55:25.600
contents of a control handle.

00:55:25.600 --> 00:55:27.990
Um,
so hopefully we'll be able to integrate

00:55:27.990 --> 00:55:31.860
in some support that actually lets
you--tell you what the values of your

00:55:31.870 --> 00:55:35.600
control are or what the position of
your window is from the debugger,

00:55:35.600 --> 00:55:37.600
even in spite of the fact
that it's an opaque data type.

00:55:37.600 --> 00:55:41.320
And another thing,
a long requested feature for our

00:55:41.320 --> 00:55:44.600
debugger is support for calling
functions while debugging.

00:55:44.600 --> 00:55:48.710
Um, because on Mac OS X, because it's,
you know, Unix and has preemptive

00:55:48.710 --> 00:55:51.210
multitasking and protected memory,
we think we'll be able to get

00:55:51.210 --> 00:55:53.960
that feature into our debugger,
and you'll be able to just use

00:55:53.960 --> 00:55:57.600
function calls and expression
evaluations without any difficulty.

00:55:59.060 --> 00:56:00.440
So power plant.

00:56:00.470 --> 00:56:03.610
We continue to adopt new
Mac OS technologies and power

00:56:03.620 --> 00:56:05.600
plant as rapidly as possible.

00:56:05.790 --> 00:56:08.560
With the Appearance Manager,
we gained a lot of Aqua support.

00:56:08.690 --> 00:56:11.370
With this release of power plant
that's on the Early Access CD,

00:56:11.450 --> 00:56:13.780
we've polished up the
Aqua support a lot more,

00:56:13.780 --> 00:56:16.550
so it's a lot cleaner
and easier to deal with.

00:56:16.800 --> 00:56:20.930
We have initial support for Carbon events
in the Early Access power plant,

00:56:20.960 --> 00:56:24.770
an initial implementation of
a view class to support MLTE,

00:56:24.770 --> 00:56:31.650
which is Apple's new text API for
editing both in multibyte lingual

00:56:31.730 --> 00:56:34.680
scripts and for greater than 32K editing.

00:56:34.680 --> 00:56:37.980
So if you use MLTE,
you'll be safe for localization,

00:56:37.980 --> 00:56:41.740
and you'll have a full-featured
text editor that doesn't

00:56:41.740 --> 00:56:44.460
have text edits on 32K limit.

00:56:44.460 --> 00:56:47.670
And we also have started
investigating a wrapper class in

00:56:47.730 --> 00:56:50.970
power plant for the data browser,
which is Apple's new ListView API that

00:56:50.970 --> 00:56:53.460
the Mac OS X Finder uses.

00:56:53.760 --> 00:56:55.440
So that's it.

00:56:55.440 --> 00:56:59.290
On the who to contact thing before
I talk about sending us email,

00:56:59.290 --> 00:57:03.990
I'd like to mention that tomorrow
at 12:30 we have our very

00:57:03.990 --> 00:57:07.120
own lunch presentation at the
Civic Auditorium across the street.

00:57:07.510 --> 00:57:12.840
Lunch will be served there in case you
didn't want to go and not miss lunch.

00:57:12.840 --> 00:57:15.750
So if you show up in time,
you should get lunch.

00:57:15.800 --> 00:57:18.600
And we'll have a number
of cool things there.

00:57:18.600 --> 00:57:19.960
David Perkins,
the president of Metrowerks,

00:57:20.010 --> 00:57:20.640
will be talking.

00:57:20.640 --> 00:57:23.640
And Berardino Barada, the CTO,
will be talking.

00:57:23.640 --> 00:57:27.160
We'll be giving away the PlayStation 2
to somebody at the presentation.

00:57:27.320 --> 00:57:28.430
So please show up about that.

00:57:28.440 --> 00:57:31.330
You'll learn a lot of great things
about Code Warrior and you'll have

00:57:31.710 --> 00:57:34.780
a chance to win a PlayStation 2.

00:57:35.220 --> 00:57:38.850
Of course, contact me if you have
questions about Mac OS X tools.

00:57:38.970 --> 00:57:41.850
Contact Joe Hayden if you have
questions about Mac OS X tools.

00:57:41.860 --> 00:57:45.430
And when you start using
the Pro7 Early Access tools,

00:57:45.430 --> 00:57:47.950
send your bug reports, feedback,
feature requests,

00:57:48.060 --> 00:57:50.540
whatever you want to that email address.

00:57:50.610 --> 00:57:53.120
That email address is
actually in the package,

00:57:53.150 --> 00:57:55.540
so don't feel obligated to write it down.

00:57:55.540 --> 00:57:58.660
And with that,
I'll hand it back over to Godfrey.

00:57:58.670 --> 00:58:01.850
Thank you very much, Matt.

00:58:04.620 --> 00:58:07.460
The guys at Metrowerks
have really been amazing.

00:58:07.470 --> 00:58:10.530
They come to most of our Carbon kitchens.

00:58:10.660 --> 00:58:11.820
They support our engineers.

00:58:11.820 --> 00:58:14.510
Our engineers support them.

00:58:14.520 --> 00:58:16.480
We work tremendous,
tremendous amounts of hours with them.

00:58:16.490 --> 00:58:19.820
And I can't thank them enough
for the fantastic job they've

00:58:19.820 --> 00:58:21.600
done with the early access.

00:58:21.680 --> 00:58:25.620
So again, for more info from Metrowerks,
there's their URL.

00:58:25.630 --> 00:58:28.660
And remember the lunch
presentation tomorrow,

00:58:28.780 --> 00:58:31.050
12:30 to 1:30 p.m.

00:58:32.460 --> 00:58:35.840
Putting it all together,
for Mac OS X development tools

00:58:35.840 --> 00:58:38.400
are a very healthy state now.

00:58:38.430 --> 00:58:42.480
You saw in Steve Naroff's slide
that we've covered the bases for all

00:58:42.480 --> 00:58:43.660
of the work that needs to be done.

00:58:43.660 --> 00:58:46.300
Obviously all the tools are young.

00:58:46.420 --> 00:58:49.030
All the tools will take more
development and have better features

00:58:49.030 --> 00:58:50.680
and more performance as time goes on.

00:58:50.840 --> 00:58:52.860
The Apple tool suite is ready now.

00:58:52.940 --> 00:58:57.270
It builds all of Mac OS X and all of the
50 or 60 applications that we deliver.

00:58:57.270 --> 00:59:02.270
The 3rd party tool developer products are
ready now and there are lots more coming.

00:59:02.400 --> 00:59:03.840
So there really isn't any excuse.

00:59:03.840 --> 00:59:08.430
The goal is to get your applications to
customers to make Macworld New York and

00:59:08.530 --> 00:59:10.780
Apple Expo Paris a tremendous success.

00:59:12.820 --> 00:59:14.730
Information Resources at Apple.

00:59:14.730 --> 00:59:17.940
We have an information page
for all Mac OS X tools.

00:59:18.080 --> 00:59:20.370
All you have to do is go to
that one URL and you can walk

00:59:20.370 --> 00:59:24.660
through all of our products and
all of our third party products.

00:59:24.770 --> 00:59:27.900
We also support a mailing list server
so you can do self-help with other

00:59:27.900 --> 00:59:29.800
members of the development community.

00:59:29.910 --> 00:59:31.930
We have mailing lists
for Project Builder,

00:59:31.960 --> 00:59:36.050
for Cocoa Dev, for Carbon Dev,
for Java Dev, and several others.

00:59:36.170 --> 00:59:42.650
I think about 15 or 20
development-centric lists there.

00:59:43.790 --> 00:59:44.700
A roadmap.

00:59:44.700 --> 00:59:46.780
This is just the first
session of our tools track.

00:59:46.780 --> 00:59:49.920
We're really highlighting tools
throughout WWDC this year.

00:59:49.920 --> 00:59:53.130
You can see we have a tremendous
number right here in this

00:59:53.300 --> 00:59:54.820
hall today after lunch.

00:59:54.820 --> 00:59:57.760
We have Project Builder,
a full detailed feature

00:59:57.760 --> 00:59:59.960
presentation on Project Builder.

00:59:59.960 --> 01:00:02.260
We have at the same time for
the WebObjects community,

01:00:02.260 --> 01:00:05.900
an introduction to the WebObjects
tools over in the civic auditorium.

01:00:05.900 --> 01:00:08.700
We have Interface Builder
again here this afternoon.

01:00:08.700 --> 01:00:11.790
And then continuing through the week,
tomorrow Project Builder,

01:00:11.840 --> 01:00:14.300
Java development tools,
application packaging

01:00:14.300 --> 01:00:17.080
and document binding,
compiler technologies,

01:00:17.240 --> 01:00:20.560
very important session,
Apple Performance tools.

01:00:20.810 --> 01:00:22.920
We want not only your
applications to be there,

01:00:22.930 --> 01:00:24.860
we want them to perform at their best.

01:00:24.860 --> 01:00:27.390
And our tools can
really help you in that.

01:00:29.300 --> 01:00:31.970
All the way through Friday and
we cap the week with a developer

01:00:32.310 --> 01:00:36.000
feedback forum on Friday afternoon.

01:00:36.070 --> 01:00:40.200
And with that,
we've got about 10 minutes left.

01:00:40.270 --> 01:00:43.500
You can contact me if you're a vendor
or if you're just a developer and you

01:00:43.500 --> 01:00:46.640
need to know something about tools,
this is my contact information.

01:00:46.700 --> 01:00:50.300
If you want to give feedback to
the Apple Tool Developer Group,

01:00:50.380 --> 01:00:55.840
Developer Tool Group, excuse me,
there's a mass mailing address

01:00:55.860 --> 01:00:58.160
for us to receive your input.