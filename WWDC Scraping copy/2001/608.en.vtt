WEBVTT

00:00:03.370 --> 00:00:04.260
Good morning.

00:00:04.260 --> 00:00:05.640
Thank you for coming.

00:00:05.710 --> 00:00:08.190
This morning's session is
Solutions for WebObjects.

00:00:08.240 --> 00:00:09.100
My name is Robb Beaul.

00:00:09.100 --> 00:00:12.570
I'm a systems engineer
with Apple iServices.

00:00:12.950 --> 00:00:16.400
Today's, this morning's session,
we're going to talk about examples and

00:00:16.400 --> 00:00:19.730
case studies of how WebObjects has been
used to bring information to the web,

00:00:19.780 --> 00:00:21.460
streamline business operations.

00:00:21.460 --> 00:00:25.470
So what do we want you guys to
take away from today's session?

00:00:25.600 --> 00:00:27.400
Robb Beaulieu, Well,
we want you to know that

00:00:27.410 --> 00:00:30.680
WebObjects is being utilized
in extremely innovative ways.

00:00:30.680 --> 00:00:33.210
We also want you to realize
that WebObjects solves

00:00:33.210 --> 00:00:37.390
myriad business problems,
from integration-intensive portal apps

00:00:37.490 --> 00:00:42.060
to visually rich consumer applications
to business-to-business apps with

00:00:42.060 --> 00:00:45.620
enormous returns on investment,
etc., etc.

00:00:46.090 --> 00:00:48.090
We also want you to realize
that WebObjects projects

00:00:48.160 --> 00:00:50.460
have high success rates.

00:00:50.460 --> 00:00:53.840
For those of you in the audience that
are looking for WebObjects solution,

00:00:53.930 --> 00:00:56.490
when you pair a great
developer with WebObjects,

00:00:56.610 --> 00:01:02.000
be prepared for extremely
great things to happen.

00:01:02.000 --> 00:01:05.650
And finally, we want you,
the WebObjects developer community,

00:01:05.700 --> 00:01:09.000
to retell these stories to
your prospective customers.

00:01:09.000 --> 00:01:12.130
And so with that,
I'd like to introduce our first speaker,

00:01:12.160 --> 00:01:15.500
and it's with pleasure that I do that,
and Brian Fitzpatrick.

00:01:19.710 --> 00:01:21.700
Good morning.

00:01:21.700 --> 00:01:22.860
My name is Brian Fitzpatrick.

00:01:22.860 --> 00:01:25.190
I'm a senior consulting
engineer with Apple iServices.

00:01:25.190 --> 00:01:30.660
I was tapped to head the VRWay
project last year for the

00:01:30.670 --> 00:01:34.180
VRWay International Company.

00:01:35.460 --> 00:01:39.390
And my history is I started doing
web programming back in 1994,

00:01:39.390 --> 00:01:41.910
back in the Paleozoic
era of the internet,

00:01:41.930 --> 00:01:46.550
with shell scripting, Perl scripting,
and eventually I moved up to some

00:01:46.550 --> 00:01:51.460
other people who consider themselves
to be competing technologies such as,

00:01:51.530 --> 00:01:54.220
oh, I can't really mention the names like
Active Server Pages or ColdFusion.

00:01:54.220 --> 00:01:57.560
I found WebObjects four years ago,
and I said, wow,

00:01:57.680 --> 00:02:01.000
this is the most incredible
thing I've ever seen.

00:02:01.000 --> 00:02:03.430
I've been rolling around on a skateboard,
and I've got this great Rolls

00:02:03.430 --> 00:02:04.470
Royce to drive around in.

00:02:04.480 --> 00:02:07.240
So I... I got my stuff together
and came to work for Apple.

00:02:07.240 --> 00:02:10.990
In July of last year,
my boss came to me and said, Fitz,

00:02:10.990 --> 00:02:13.180
we have a client for the big project.

00:02:13.200 --> 00:02:14.690
I said, well, that's great.

00:02:14.720 --> 00:02:15.760
I said, I love big projects.

00:02:15.780 --> 00:02:19.070
He said, they want to do quick
time VR tours of Europe,

00:02:19.070 --> 00:02:20.460
different cities.

00:02:20.460 --> 00:02:21.790
I said, well, we can do that.

00:02:21.840 --> 00:02:25.730
He said,
we want to do WebObjects to do quick time

00:02:25.770 --> 00:02:29.240
tours of cities in Europe and image maps.

00:02:29.370 --> 00:02:32.160
We want to do image maps of Europe,
of different countries,

00:02:32.160 --> 00:02:34.920
so that users can click their
way down from a world map.

00:02:35.470 --> 00:02:36.840
all the way to a street.

00:02:36.840 --> 00:02:39.570
I said, well, I said, we can do that.

00:02:40.500 --> 00:02:43.600
He said, on top of that,
we want users to be able to add comments

00:02:43.600 --> 00:02:45.600
and reviews of all the VRs that they see.

00:02:45.620 --> 00:02:49.010
He said,
and we also want to have a chat room.

00:02:49.020 --> 00:02:51.340
I said, not just a chat room,
one chat room for every VR.

00:02:51.340 --> 00:02:53.420
I said, well, we can do that.

00:02:53.420 --> 00:02:57.240
He said, oh, and we need a back office
application for users,

00:02:57.240 --> 00:03:02.940
for the people that work at VRWay,
to import QuickTime VRs, image maps,

00:03:02.940 --> 00:03:05.090
tie them all together,
tie one city to the next,

00:03:05.090 --> 00:03:06.470
tie one country to the next.

00:03:06.600 --> 00:03:09.620
And we need it all in
three and a half months.

00:03:10.400 --> 00:03:13.250
I said, John, using WebObjects,
no problem.

00:03:16.050 --> 00:03:20.020
This is a screenshot of the front
page of the VRWay experience,

00:03:20.100 --> 00:03:20.650
as it's called.

00:03:20.650 --> 00:03:23.800
This is a company that's international,
however they are based in Switzerland.

00:03:23.800 --> 00:03:29.280
When a user comes to this page, they can,
by clicking the VR across the top,

00:03:29.280 --> 00:03:34.040
which is just a static image,
it's a randomly generated image,

00:03:34.040 --> 00:03:36.410
they can find themselves right there.

00:03:36.420 --> 00:03:38.600
For example,
here it would be in Barcelona, Spain.

00:03:38.600 --> 00:03:42.750
Or, they can click their way down
through a series of image maps.

00:03:42.750 --> 00:03:44.950
Europe is what's
implemented at the moment.

00:03:46.140 --> 00:03:48.580
So starting at Europe,
and then they can click

00:03:48.690 --> 00:03:50.680
their way into Italy.

00:03:52.630 --> 00:03:55.520
and then down to a city, for example,
the city of Rome here.

00:03:55.730 --> 00:03:58.480
You'll see several highlighted blocks.

00:03:59.250 --> 00:04:01.840
They can click on one of those
highlighted blocks and what you get is a

00:04:01.840 --> 00:04:05.030
street map with a bunch of little orange
dots that are numbered and they're

00:04:05.040 --> 00:04:09.650
described in detail below whether
they're an inside VR or an outside VR,

00:04:09.860 --> 00:04:12.740
what they describe,
what kind of a VR they are,

00:04:12.740 --> 00:04:17.490
whether they're a plaza or a street or
maybe a shop or something like that.

00:04:17.670 --> 00:04:20.260
There's also a little white triangle
so you can navigate laterally,

00:04:20.300 --> 00:04:23.960
sideways, up and down if you want to go
look at a near part of the city.

00:04:23.960 --> 00:04:27.230
And finally,
you find yourself looking at a

00:04:27.520 --> 00:04:31.930
fountain in the square of Piazza
Navona from your own house.

00:04:32.300 --> 00:04:38.900
Now, we used WebObjects, QuickTime,
Mac OS X, the old version of Mac OS X,

00:04:38.900 --> 00:04:41.760
an Oracle database,
and Apache to make this happen.

00:04:41.780 --> 00:04:44.920
The client said,
for our baseline 1.0 release,

00:04:44.920 --> 00:04:47.140
we want to scale to 600 users.

00:04:47.140 --> 00:04:49.180
So we got some testing software.

00:04:49.180 --> 00:04:51.660
We stress tested these applications.

00:04:51.660 --> 00:04:57.060
Not only did it scale to 600 users,
but we found that four G4 app servers,

00:04:57.060 --> 00:05:00.210
these are older G4 app servers,
not the new screaming dual

00:05:00.320 --> 00:05:05.130
processor 3 gigahertz processors,
four 500 megahertz G4 app servers

00:05:05.250 --> 00:05:07.770
saturated a 32 megabit per second link.

00:05:10.590 --> 00:05:12.940
The WebObjects application
tied the VRs together.

00:05:12.940 --> 00:05:15.630
All navigation is mediated
through the application.

00:05:15.630 --> 00:05:20.280
So when you click on a VR, on a hotspot,
in a QuickTime VR,

00:05:20.280 --> 00:05:23.930
that hotspot request is intercepted,
sent back to the WebObjects application,

00:05:23.970 --> 00:05:25.910
which can do whatever it wants with it.

00:05:26.320 --> 00:05:28.230
In one case,
it might link to the next part

00:05:28.540 --> 00:05:31.280
of your square you're going to,
a link down the street.

00:05:31.320 --> 00:05:32.910
It might link into a shop.

00:05:32.910 --> 00:05:37.040
The VR way experience is being
modified as we speak to add

00:05:37.130 --> 00:05:40.600
more and more shops and stores,
so that when you click your way

00:05:40.760 --> 00:05:43.260
down to Piazza Navona in Rome and
you see a shoe store there,

00:05:43.260 --> 00:05:45.510
well,
you could click inside the shoe store.

00:05:45.520 --> 00:05:49.630
You could go into the shoe store,
look around, look at some shoes,

00:05:49.980 --> 00:05:52.090
maybe even purchase a pair of shoes.

00:05:52.270 --> 00:05:55.530
The country region
navigation is static images,

00:05:55.540 --> 00:05:59.430
but the image maps,
the image map tags in the HTML are all

00:05:59.430 --> 00:06:03.200
built by our WebObjects application,
tied into our model.

00:06:03.200 --> 00:06:08.200
So what that enables us to do is
we can turn on new parts of a city,

00:06:08.220 --> 00:06:12.140
we can turn on a new country,
all from another WebObjects application.

00:06:12.190 --> 00:06:14.470
No sweat.

00:06:15.220 --> 00:06:18.530
The navigation and the
VRs are added on the fly.

00:06:18.580 --> 00:06:21.970
So they send a photography
crew out to San Jose.

00:06:22.060 --> 00:06:25.600
They go around, they take 360 VRs of all
different parts of the city,

00:06:25.600 --> 00:06:28.300
they come back,
do a little post processing,

00:06:28.320 --> 00:06:32.040
and before you know it,
they're in the experience.

00:06:32.040 --> 00:06:36.020
Reusability.

00:06:37.420 --> 00:06:39.280
In some of the previous
technologies I used,

00:06:39.400 --> 00:06:46.080
I wound up doing a lot of code reuse,
which consisted of cutting and pasting.

00:06:46.280 --> 00:06:49.840
People on my team, in fact,
I know one of my lead guys is here,

00:06:49.900 --> 00:06:54.160
he knows that my mantra was cutting
and pasting is not reusability.

00:06:54.360 --> 00:06:56.870
Taking HTML and SQL and
all that stuff mixed up,

00:06:56.870 --> 00:06:59.340
pasting it on another page,
not reusability.

00:06:59.660 --> 00:07:03.620
WebObjects component model,
where you can have a component as large

00:07:03.620 --> 00:07:07.450
as a page or as small as a character,
enables us to factor out

00:07:07.450 --> 00:07:10.360
parts that we wanted to reuse
from one page to the next.

00:07:10.670 --> 00:07:15.070
We had whole widgets that held
QuickTime VRs or image maps that we

00:07:15.080 --> 00:07:19.960
used from our front user application
to the back office application.

00:07:20.270 --> 00:07:24.480
So, a lot less code to write,
a lot less code to maintain,

00:07:24.480 --> 00:07:26.150
a lot less headache.

00:07:26.380 --> 00:07:27.300
Widgets.

00:07:27.380 --> 00:07:27.930
Simple widgets.

00:07:28.070 --> 00:07:30.570
Some of our components
were a pop-up menu,

00:07:30.570 --> 00:07:35.370
for example, a list of countries,
a list of cities, a list of types of VRs,

00:07:35.470 --> 00:07:39.300
maybe a shop, maybe a street,
that sort of thing.

00:07:39.530 --> 00:07:46.300
We had this chat problem was a
particularly hairy problem to address,

00:07:46.300 --> 00:07:49.760
so what we wrote is a framework
that wrapped this procedurally

00:07:49.760 --> 00:07:54.580
oriented chat commands into
an object oriented framework.

00:07:55.370 --> 00:07:58.180
In our application, we just say,
you know, new chat room,

00:07:58.180 --> 00:07:59.500
this is the name of the chat room,
and go.

00:07:59.540 --> 00:08:00.700
And that was all there was to it.

00:08:03.800 --> 00:08:08.800
Using object-oriented design
enables us to really come up with an

00:08:08.800 --> 00:08:11.190
application that can be maintained.

00:08:11.270 --> 00:08:13.300
An application that can be changed.

00:08:13.380 --> 00:08:15.690
We came up with 1.0 and they said, "Wow,
this is great.

00:08:15.700 --> 00:08:18.020
We're quite impressed,
but our graphic design guys came

00:08:18.110 --> 00:08:19.490
up with this new stuff here.

00:08:19.500 --> 00:08:22.140
How long is it going to take
you to get in?" We said,

00:08:22.140 --> 00:08:24.700
"Well, no problem." We handed it off.

00:08:24.780 --> 00:08:27.760
Never had to change a line
of code because of the way

00:08:27.760 --> 00:08:29.700
WebObjects use templates.

00:08:29.700 --> 00:08:32.300
They came to us and said,
"We've got this 1.0 thing.

00:08:32.390 --> 00:08:33.830
We have this VRWay experience.

00:08:33.830 --> 00:08:34.700
This is great.

00:08:34.700 --> 00:08:35.700
We want to add another feature.

00:08:35.700 --> 00:08:37.670
We want something like MapQuest.

00:08:37.700 --> 00:08:40.620
We want to go to a hotel and say, 'Okay,
we're going to put a link on

00:08:40.730 --> 00:08:43.690
your page that links back to us,
opens a little pop-up menu,

00:08:43.690 --> 00:08:46.930
and allows users just to
see stuff about your hotel,

00:08:46.930 --> 00:08:48.110
for example.'"

00:08:48.960 --> 00:08:51.500
Because of the way we factored
down all of our widgets,

00:08:51.500 --> 00:08:54.970
made things small, reused components,

00:08:55.270 --> 00:08:58.440
We knocked this out in record time,
like a month, month and a half.

00:08:58.600 --> 00:09:01.000
Absolutely unbelievable
turnaround on this.

00:09:01.000 --> 00:09:04.410
And it required very little
change to our existing widgets.

00:09:04.420 --> 00:09:07.620
And on top of that,
we managed to reuse all the

00:09:07.620 --> 00:09:09.590
stuff we'd already done.

00:09:09.620 --> 00:09:11.670
Less code to write, less to maintain.

00:09:11.780 --> 00:09:13.140
That's the way I look at it.

00:09:14.120 --> 00:09:18.090
Less than ten people knocked this whole
thing out in less than four months.

00:09:18.090 --> 00:09:21.340
A series of five applications
and four frameworks.

00:09:21.390 --> 00:09:23.430
And it works great.

00:09:23.550 --> 00:09:24.240
And you can go there today.

00:09:24.240 --> 00:09:26.440
It's www.vraway.com.

00:09:27.930 --> 00:09:30.470
Now I'm going to introduce
you to the next presenter,

00:09:30.490 --> 00:09:32.920
which is Bob Frank,
who is one of my colleagues in Chicago.

00:09:32.920 --> 00:09:36.820
He is a senior consulting
engineer with Abalyze Services.

00:09:43.400 --> 00:10:45.500
[Transcript missing]

00:10:47.720 --> 00:10:51.560
The basic architecture has,
I'm sure this design pattern is

00:10:51.570 --> 00:10:55.700
fairly familiar to those of you
that have done WoW work before.

00:10:55.700 --> 00:11:01.380
There is a few core frameworks
that contain their common EOs and

00:11:01.390 --> 00:11:06.400
some other core components,
and a variety of separate frameworks

00:11:06.400 --> 00:11:11.320
that use each of these core frameworks
to produce individual services.

00:11:12.100 --> 00:11:14.790
And as you can see
from the UI screenshot,

00:11:14.790 --> 00:11:18.080
each panel was basically
a different service.

00:11:18.080 --> 00:11:21.560
And all of this is wrapped
inside the basic application.

00:11:21.560 --> 00:11:24.740
This is very flexible, and this is a very
powerful design pattern.

00:11:27.400 --> 00:11:29.650
The key features that
they have implemented,

00:11:29.650 --> 00:11:31.280
as I mentioned, was webmail.

00:11:31.280 --> 00:11:34.390
They also have integrated security
through the entire application.

00:11:34.390 --> 00:11:37.920
I'll talk more about that in a
few slides if you are interested.

00:11:37.920 --> 00:11:40.520
It's a Kerberos-based security system.

00:11:40.520 --> 00:11:43.190
They have an address book,
a calendar system,

00:11:43.190 --> 00:11:46.470
course schedule from their
student information system,

00:11:46.700 --> 00:11:49.130
classified ads,
and all of these are their main

00:11:49.130 --> 00:11:52.740
features that they were able
to deliver to their students.

00:11:54.860 --> 00:11:57.580
This comes from a variety of
heterogeneous data sources.

00:11:57.600 --> 00:12:01.760
First and foremost, a variety of several
different Oracle databases.

00:12:01.760 --> 00:12:05.890
They have some data coming in from
XML feeds and some data derived

00:12:05.920 --> 00:12:08.260
from a Lotus Notes application.

00:12:08.260 --> 00:12:11.320
Their mail is provided via IMAP,
and of course,

00:12:11.320 --> 00:12:15.590
outgoing mail is taken care of via SMTP,
and directory information

00:12:15.590 --> 00:12:17.270
is provided from LDAP.

00:12:17.290 --> 00:12:20.580
All this is integrated together
using that basic architecture.

00:12:22.500 --> 00:12:25.900
Their development environment,
in the university environment,

00:12:25.920 --> 00:12:28.140
they have a variety
of different machines,

00:12:28.140 --> 00:12:31.370
and we had a lot of different
people working on this project.

00:12:31.370 --> 00:12:32.860
It was cross-platform.

00:12:32.860 --> 00:12:36.040
Development took place both,
the majority at the university

00:12:36.040 --> 00:12:39.540
was on Mac OS X server,
and there were some developers using NT.

00:12:39.540 --> 00:12:42.300
For syncing up all the
developers' work effort,

00:12:42.300 --> 00:12:43.230
they used CVS.

00:12:43.230 --> 00:12:45.930
If you don't know what CVS is,
you should learn,

00:12:45.970 --> 00:12:49.800
and if you do know what it is,
I recommend that you all use it.

00:12:50.200 --> 00:12:51.640
It'll save you a lot of pain.

00:12:51.640 --> 00:12:56.720
The basic application was,
CVS is a core source code versioning

00:12:56.720 --> 00:13:03.520
tool that allows different developers to
work on the same code and manage changes.

00:13:03.520 --> 00:13:07.780
The basic design that I showed you in
the architecture slide is a central

00:13:08.040 --> 00:13:10.460
application with a few core frameworks.

00:13:10.460 --> 00:13:13.620
What this really allows,
in a variety of different ways,

00:13:13.680 --> 00:13:16.470
in addition to rapid
development of new services,

00:13:16.470 --> 00:13:18.800
is it also allows a lot of parallelism.

00:13:19.900 --> 00:13:24.700
It allows developers to work on different
feature sets and to produce new features,

00:13:24.700 --> 00:13:27.060
I think, more quickly.

00:13:27.060 --> 00:13:30.380
This is particularly, I thought,
from a developer's point of view,

00:13:30.520 --> 00:13:31.900
an interesting feature.

00:13:31.900 --> 00:13:36.670
They had an integrated bug tracking
system that they developed,

00:13:36.670 --> 00:13:40.820
and this was integrated
into the entire application.

00:13:49.630 --> 00:13:51.380
They had a lot of work to do.

00:13:51.380 --> 00:13:54.870
They had to log this exception
and feed that back into their bug

00:13:54.880 --> 00:13:57.270
tracking and feature tracking system.

00:13:57.280 --> 00:14:00.800
Additionally,
they leveraged these core frameworks

00:14:00.800 --> 00:14:05.040
to produce this type of application
and several other back office

00:14:05.040 --> 00:14:07.400
administrative applications.

00:14:08.860 --> 00:14:10.700
This was a joint effort.

00:14:10.700 --> 00:14:18.700
The technology demonstration in the
spring was primarily an AIS-led effort.

00:14:18.710 --> 00:14:22.390
And then for the entire
development range was primarily

00:14:22.390 --> 00:14:27.120
a University of Michigan-led
effort with some AIS consultants,

00:14:27.130 --> 00:14:29.700
some on-site training provided by AIS.

00:14:29.700 --> 00:14:32.580
There was also additionally,
the University of Michigan took

00:14:32.640 --> 00:14:35.360
advantage of some training
provided here in Cupertino.

00:14:35.450 --> 00:14:38.520
I think that was some of their

00:14:39.000 --> 00:14:55.400
[Transcript missing]

00:14:56.460 --> 00:14:58.750
The development environment.

00:14:58.750 --> 00:15:04.440
They have a development integration
server that is both the application,

00:15:04.440 --> 00:15:07.440
the wall application, and the Apache web
server on the same box,

00:15:07.440 --> 00:15:10.400
and the various data
sources on separate boxes.

00:15:10.400 --> 00:15:14.020
The only difference between their
development integration server and their

00:15:14.060 --> 00:15:17.670
staging and deployment servers is that
in the staging and deployment arena,

00:15:17.670 --> 00:15:19.160
they are on separate boxes.

00:15:21.560 --> 00:15:24.350
A moment ago I mentioned that
they were able to integrate

00:15:24.350 --> 00:15:26.030
Kerberos into their system.

00:15:26.160 --> 00:15:30.480
Kerberos is a very powerful
authentication and security technology.

00:15:30.480 --> 00:15:35.150
The University of Michigan is using
Kerberos pervasively through all of

00:15:35.150 --> 00:15:37.950
their services across the university.

00:15:39.010 --> 00:15:42.740
This allowed them to leverage
a variety of other services

00:15:42.750 --> 00:15:44.950
inside their student portal.

00:15:44.960 --> 00:15:48.760
So for example,
on the web-based email system,

00:15:48.880 --> 00:15:51.300
their authentication is
provided using Kerberos.

00:15:51.300 --> 00:15:55.790
This allowed,
this Kerberos integration with the

00:15:55.790 --> 00:16:02.070
portal allowed them to then access
the individual user's email and then

00:16:02.070 --> 00:16:05.210
present that over the web pages.

00:16:06.110 --> 00:16:11.140
Their UI provided a configurable
approach to providing different

00:16:11.140 --> 00:16:15.030
services on their front page,
and some of them were in

00:16:15.030 --> 00:16:17.340
this mini type of a view.

00:16:17.340 --> 00:16:21.710
The left-hand column allowed you to have
short summary pieces of information.

00:16:21.720 --> 00:16:25.220
For example,
you have a lot of unread messages.

00:16:25.260 --> 00:16:30.150
This type of UI allows them to
provide summary information on

00:16:30.210 --> 00:16:35.790
a front page from a variety of
different full-fledged services.

00:16:36.340 --> 00:16:39.830
Additionally,
this calendar view did not lend itself

00:16:39.830 --> 00:16:42.980
to being compressed into a narrow column.

00:16:43.150 --> 00:16:45.990
They provided a wider approach to it.

00:16:46.200 --> 00:16:50.060
Another interesting feature on the
entire application was that they were

00:16:50.060 --> 00:16:53.560
able to integrate a help functionality
into the entire application.

00:16:53.560 --> 00:16:59.100
Each service has the option of
providing help with some sort

00:16:59.140 --> 00:17:05.480
of small amount of help for the
local features in that mini panel.

00:17:05.480 --> 00:17:09.230
Or, if you need more in-depth help,
a tour or so forth,

00:17:09.430 --> 00:17:12.680
they can take you to a
full-blown help system.

00:17:12.700 --> 00:17:19.140
This provides a great deal of upfront
support for the users of the system

00:17:19.180 --> 00:17:23.660
and cuts down on the calls that
they receive to their support lines.

00:17:23.910 --> 00:17:26.930
Additionally,
since it's fully integrated,

00:17:26.980 --> 00:17:30.140
it allows them to easily augment
it when new features are added.

00:17:33.900 --> 00:17:38.140
Another system that I think was very
interesting was a calendar system.

00:17:38.140 --> 00:17:42.630
This integrated with their student
information system to pull down

00:17:43.040 --> 00:17:46.380
calendar and schedule information
from their student information system.

00:17:46.380 --> 00:17:50.530
This means that if you have a class
scheduled at a certain time and day,

00:17:50.530 --> 00:17:53.340
it will display in the
student's calendar.

00:17:53.340 --> 00:17:58.150
Additionally, they were able to use this
basic system to have personal

00:17:58.510 --> 00:18:00.620
calendar information entered.

00:18:02.190 --> 00:18:07.690
I think that this allows you to have all
of your information available from any

00:18:07.690 --> 00:18:13.250
web browser on any system that you can
get access to in the university system.

00:18:14.700 --> 00:18:16.690
A simple screen that
allows you to add event.

00:18:16.700 --> 00:18:21.090
They spend a lot of time working
on cleaning up the user interface.

00:18:21.280 --> 00:18:25.260
This web-based personal information
system includes several other features,

00:18:25.340 --> 00:18:29.770
and I have a few slides to show
you what it looked like for that.

00:18:30.100 --> 00:18:33.210
Basically,
it allows them to have the calendar,

00:18:33.220 --> 00:18:38.090
which I just showed you,
and an address book, and the to-do list.

00:18:38.110 --> 00:18:41.350
The long-term goal of this
system is to provide integration

00:18:41.640 --> 00:18:45.640
with other desktop PIMs,
so you can do importing and exporting.

00:18:48.930 --> 00:18:53.780
Their mail system is the, I think,
the most look forward

00:18:53.780 --> 00:18:55.980
feature for the students.

00:18:55.980 --> 00:19:00.340
It allowed them to have simple
web-based access to their email system.

00:19:00.340 --> 00:19:04.420
Previously, for the most part,
they were using text-based systems.

00:19:04.420 --> 00:19:08.010
Some of them, as far as I know,
were using some desktop clients,

00:19:08.010 --> 00:19:11.290
but with a desktop client,
they were limited to a situation

00:19:11.290 --> 00:19:15.310
where they had their machine that
their software was installed on.

00:19:15.860 --> 00:19:18.560
And with a web-based system,
they're able to, once again,

00:19:18.580 --> 00:19:20.730
access it from anywhere
in the university.

00:19:20.740 --> 00:19:26.880
This is a shot of what their UI looks
like for viewing an individual message.

00:19:30.950 --> 00:19:33.290
and Composing a Message.

00:19:33.650 --> 00:19:37.200
Additionally,
another feature that they wanted to add,

00:19:37.290 --> 00:19:42.660
allow the students themselves,
not outside vendors like you

00:19:42.660 --> 00:19:45.950
would find in a traditional
classified ad in a newspaper,

00:19:46.010 --> 00:19:49.340
but just the students themselves
to utilize the system to exchange

00:19:49.340 --> 00:19:58.280
products or sublet apartments or resell
books at the end of the semester.

00:19:58.280 --> 00:20:00.870
This is not an auction type of a system.

00:20:00.900 --> 00:20:05.640
This is a simple marketplace for students
to exchange whatever they want to.

00:20:08.170 --> 00:20:11.990
This is a screenshot of what
the To Do system looks like.

00:20:12.120 --> 00:20:18.220
This basically allows them to go ahead
and keep track of various events,

00:20:18.220 --> 00:20:20.920
very similar to what you'll
find in the other personal

00:20:20.920 --> 00:20:22.490
information manager systems.

00:20:22.830 --> 00:20:28.130
Portable Bookmarks allows them
to be able to keep track of

00:20:29.210 --> 00:20:33.410
There are favorites from not just
one browser and one computer,

00:20:33.460 --> 00:20:36.190
but we'll actually follow them
wherever they log in in the system.

00:20:36.190 --> 00:20:39.690
And this allowed the university
to insert links into their

00:20:39.750 --> 00:20:41.160
students' bookmarks as well.

00:20:41.160 --> 00:20:43.850
An additional enhancement
that might occur in the future

00:20:44.170 --> 00:20:45.740
would be on a per class basis.

00:20:45.740 --> 00:20:49.870
If a professor has some sort of
information that is relevant to

00:20:49.870 --> 00:20:54.090
the research for that class or
a particular session of a class,

00:20:54.140 --> 00:21:00.140
they'll be able to provide it in
an automatic way to the students.

00:21:00.140 --> 00:21:03.720
Go ahead and log on to your
homepage and here it is.

00:21:04.330 --> 00:21:09.140
Their long term goal is to continually
add more services as more areas of

00:21:09.140 --> 00:21:13.010
the university want the ability to
add specific features and to be able

00:21:13.010 --> 00:21:18.490
to integrate on a general level with

00:21:20.130 --> 00:21:23.320
The existing course materials
that have already been built in.

00:21:23.580 --> 00:21:27.190
For example, with the calendar,
there might be a desire in the future

00:21:27.240 --> 00:21:34.110
to add more services based around
course information or course materials.

00:21:34.410 --> 00:21:39.200
and none of this will require
rewriting of much of the system

00:21:39.200 --> 00:21:43.140
because the infrastructure is
already built into the core systems.

00:21:44.900 --> 00:21:47.080
And now I'd like to
introduce David Black,

00:21:47.130 --> 00:21:50.900
another consultant with Apple iServices,
to talk about logistics management,

00:21:50.900 --> 00:21:56.240
a very good success story with a
large logistics management company

00:21:56.240 --> 00:21:57.940
that we can't use their name today.

00:21:57.940 --> 00:22:00.600
Dave.

00:22:05.800 --> 00:22:07.080
Thanks Bob.

00:22:07.080 --> 00:22:08.560
Alright.

00:22:08.560 --> 00:22:09.780
Welcome to WWDC.

00:22:09.800 --> 00:22:13.470
It's Wednesday, or hump day.

00:22:13.470 --> 00:22:13.470
Alright.

00:22:13.800 --> 00:22:42.200
[Transcript missing]

00:22:43.510 --> 00:22:44.220
All right, there we go.

00:22:44.240 --> 00:22:45.420
Logistics management.

00:22:45.420 --> 00:22:47.460
It's the business of moving stuff around.

00:22:47.460 --> 00:22:52.100
It's also the physical aspect
of a supply chain management.

00:22:52.100 --> 00:22:54.610
And most companies,
what they'll do is they'll just

00:22:54.610 --> 00:22:58.100
outsource all of the warehousing,
all the shipping, and everything,

00:22:58.180 --> 00:23:01.000
and they just basically become
the smart brain trust of their

00:23:01.000 --> 00:23:03.470
company and then let some other
company do all this other stuff.

00:23:03.540 --> 00:23:06.810
So this particular
company provided all this.

00:23:06.830 --> 00:23:10.760
And anyways, they asked us to come in
and do the work for them.

00:23:10.760 --> 00:23:14.600
So let's hope.

00:23:16.140 --> 00:23:18.390
So what are the critical
requirements of providing software

00:23:18.490 --> 00:23:19.960
to a logistics management company?

00:23:19.960 --> 00:23:24.360
In the logistics business,
information is absolutely paramount.

00:23:24.400 --> 00:23:28.380
It is what gives each company
a competitive advantage.

00:23:28.380 --> 00:23:33.230
If you use some of the systems out there
from various shipping companies that

00:23:33.360 --> 00:23:37.540
you might mail order something from,
you'll see just how valuable it is for

00:23:37.540 --> 00:23:39.220
you to see where your packages are.

00:23:39.220 --> 00:23:41.490
Well,
when you're trying to manage a supply

00:23:41.490 --> 00:23:45.420
chain and you're trying to get time,
the delivery of different products,

00:23:46.190 --> 00:23:51.030
it's very critical for the companies
who are actually shipping things

00:23:51.030 --> 00:23:55.260
to actually be able to have those
views into that tracking data.

00:23:55.260 --> 00:23:59.760
So anyway, basically these systems
had to be accessible.

00:23:59.760 --> 00:24:03.040
And that's probably the first
reason that they came to

00:24:03.040 --> 00:24:06.620
Next when WebObjects was around,
because it was really the first

00:24:07.020 --> 00:24:09.930
solution that gave web-based
access into legacy systems.

00:24:10.470 --> 00:24:17.250
And so they... were able to,
at that point,

00:24:17.250 --> 00:24:21.400
be able to give access into maybe a
shipping dock in the Philippines or to an

00:24:21.400 --> 00:24:24.760
import/export desk in Turkey somewhere.

00:24:24.760 --> 00:24:29.720
So anyway, accessibility was their number
one reason at that point to go

00:24:29.720 --> 00:24:30.980
with WebObjects when they did.

00:24:30.980 --> 00:24:32.980
Secondly, they needed scalability.

00:24:32.980 --> 00:24:35.680
They needed something
that would scale up.

00:24:35.680 --> 00:24:37.920
I mean, these were big databases.

00:24:37.920 --> 00:24:40.050
They needed interoperability.

00:24:40.060 --> 00:24:41.900
They had to tie into
the customer systems.

00:24:41.900 --> 00:24:43.880
They had to also tie into
their own legacy systems.

00:24:43.880 --> 00:24:45.710
They also needed rapid development.

00:24:45.740 --> 00:24:50.340
They did not want the typical, you know,
one year of planning,

00:24:50.340 --> 00:24:56.180
one year of development, then, you know,
one year of deployment and bug fixing.

00:24:56.180 --> 00:24:58.550
They wanted the stuff to be
turned around in three months,

00:24:58.550 --> 00:25:00.490
you know, to six-month cycles.

00:25:00.500 --> 00:25:02.660
They also wanted rapid adaptability.

00:25:02.850 --> 00:25:06.350
These applications needed to
basically be able to be replicated

00:25:06.380 --> 00:25:08.400
for each customer that they had.

00:25:08.420 --> 00:25:12.670
Some companies will basically put all
their customers into one database.

00:25:12.700 --> 00:25:15.560
This company actually wanted to have
a separate database for each company.

00:25:15.560 --> 00:25:20.740
Because I guess if one company left,
they could just throw the database away.

00:25:20.740 --> 00:25:25.370
So anyway, let's...

00:25:26.000 --> 00:25:29.260
Okay, so the environment that they had,
we used Solaris for test in

00:25:29.260 --> 00:25:30.940
our production applications.

00:25:30.940 --> 00:25:33.180
We used Oracle on HPUX.

00:25:33.180 --> 00:25:35.620
Development was on Windows NT.

00:25:35.660 --> 00:25:39.230
We did version control with CVS,
and while I was there

00:25:39.320 --> 00:25:42.640
in the last few months,
we were actually trying out CVL,

00:25:42.750 --> 00:25:45.200
which is a nice graphical
user interface for CVS,

00:25:45.310 --> 00:25:49.040
and it seemed to work really well,
integrated with Project Builder.

00:25:49.040 --> 00:25:52.180
Now we don't need that anymore
with our new Project Builder.

00:25:52.190 --> 00:25:53.110
It's built in.

00:25:53.960 --> 00:25:56.240
We also had two to eight
consultants on site,

00:25:56.240 --> 00:25:59.270
and these were consultants
either from Apple iServices,

00:25:59.270 --> 00:26:01.850
or we also used a variety
of subcontractors.

00:26:01.940 --> 00:26:04.220
All right.

00:26:04.220 --> 00:26:08.390
While we were there,
we developed some common frameworks,

00:26:08.390 --> 00:26:11.960
and I'll just run through
these really quickly.

00:26:11.960 --> 00:26:15.820
We had security authentication,
personalization, and what we had was

00:26:15.820 --> 00:26:17.320
called a logistics kit.

00:26:17.320 --> 00:26:20.080
And so starting off at
the very bottom here,

00:26:20.080 --> 00:26:23.880
we have our WebObjects and
EOF libraries that you can buy.

00:26:23.960 --> 00:26:27.560
We had our security framework,
which was basically a framework

00:26:27.630 --> 00:26:31.620
that we could bolt onto any of our
applications that would communicate

00:26:31.680 --> 00:26:35.610
with an authentication server and
basically communicate back to the

00:26:35.610 --> 00:26:40.540
application that a person did have
access into this particular application.

00:26:40.540 --> 00:26:43.900
We also had a personalization framework,
so that once a person

00:26:43.900 --> 00:26:47.220
was in the application,
it basically controlled things like

00:26:47.220 --> 00:26:50.860
access into certain administrative
screens or gave them different

00:26:50.860 --> 00:26:52.650
types of views into things.

00:26:52.660 --> 00:26:53.620
We were able to store permissions.

00:26:53.960 --> 00:26:56.680
Form fields would turn on and off.

00:26:56.800 --> 00:27:00.860
We were also able to put things
like mathematical constants.

00:27:00.860 --> 00:27:03.380
A variety of things were in
this personalization framework,

00:27:03.460 --> 00:27:06.930
and based on the customer and some other
things in their particular use case,

00:27:07.020 --> 00:27:10.630
we were able to really give them a
fine granular level of control in

00:27:10.630 --> 00:27:13.950
the way their application behaved.

00:27:13.960 --> 00:27:17.660
There was also what we
called a logistics kit.

00:27:17.790 --> 00:27:22.920
This was a collection of common code,
utilities, widgets,

00:27:22.920 --> 00:27:22.920
and other things that we could
use to control our application.

00:27:22.940 --> 00:27:23.900
We also had a lot of software.

00:27:23.900 --> 00:27:24.400
We had widgets.

00:27:24.400 --> 00:27:24.890
We had calendars.

00:27:24.900 --> 00:27:28.420
We had date formatters.

00:27:28.480 --> 00:27:30.600
We had all sorts of stuff in there,
and it was just kind of a

00:27:30.600 --> 00:27:31.870
grab bag of different things.

00:27:31.900 --> 00:27:36.680
On top of these three frameworks,
we were able to then build

00:27:36.680 --> 00:27:41.310
our custom application logic
for whichever application

00:27:41.310 --> 00:27:43.900
they needed us to do this for.

00:27:43.900 --> 00:27:45.530
Let's get into some of these.

00:27:45.620 --> 00:27:46.680
Shipment tracking.

00:27:46.700 --> 00:27:50.630
This is probably the most...

00:27:51.540 --> 00:27:54.540
typical application of any
kind of shipping company.

00:27:54.600 --> 00:27:57.740
Basically,
if someone is shipping something,

00:27:57.740 --> 00:28:00.910
they enter it in that it's
gone out off of the dock.

00:28:00.970 --> 00:28:04.080
At that point, everyone can start to see
where it is in the process.

00:28:04.080 --> 00:28:07.860
It's tracked through its entire process
from going from point A to point Z.

00:28:07.860 --> 00:28:11.310
And this particular
application that we wrote,

00:28:11.310 --> 00:28:16.680
it gave, it integrated really nicely with
some of their legacy systems.

00:28:16.720 --> 00:28:19.770
They actually had in some
part of their environments,

00:28:19.870 --> 00:28:21.000
C++, Fat Client.

00:28:21.640 --> 00:28:24.050
That would,
they would use to enter some of the data.

00:28:24.050 --> 00:28:27.160
We also did some web integration
with this with barcode scanners,

00:28:27.160 --> 00:28:28.530
a little bit of JavaScript.

00:28:28.550 --> 00:28:30.870
You just fire the thing,
it gets field to field.

00:28:30.870 --> 00:28:32.030
It's pretty cool.

00:28:32.040 --> 00:28:37.090
We also were able to customize
this application and put it into

00:28:37.130 --> 00:28:40.130
new customer space very quickly.

00:28:40.140 --> 00:28:41.910
If the customer had no
customer requirements,

00:28:41.950 --> 00:28:44.580
we could just turn it on in a day
by creating a new database for them.

00:28:44.580 --> 00:28:49.710
And our authentication framework
actually told which database that

00:28:49.720 --> 00:28:51.480
the application would be pointing to.

00:28:51.510 --> 00:28:55.010
So within the context of one session,
we could actually be going from one

00:28:55.010 --> 00:28:58.180
database to another dynamically.

00:28:58.380 --> 00:29:01.800
We had a return tracking application
that basically managed the whole

00:29:01.880 --> 00:29:06.240
process of people sending back
merchandise that was broken,

00:29:06.240 --> 00:29:09.510
things like RMAs and what have you.

00:29:09.520 --> 00:29:13.100
We also did what's called a
consolidation management system.

00:29:13.100 --> 00:29:15.340
This posed some really
interesting challenges.

00:29:15.340 --> 00:29:19.230
Let me tell you real quickly
what consolidation management is.

00:29:19.730 --> 00:29:24.890
Basically, when a company has,
let's take maybe a wireless

00:29:25.420 --> 00:29:30.570
phone system provider,
they get a contract to install

00:29:30.570 --> 00:29:33.410
12 cell sites in a city.

00:29:35.670 --> 00:29:40.590
The company installing this needs to be
able to coordinate the delivery of parts

00:29:40.680 --> 00:29:45.050
from all over the place into one center
and then immediately have them sent out

00:29:45.050 --> 00:29:47.080
as one big package to the cell site.

00:29:47.120 --> 00:29:51.540
So this system actually,
it's kind of like just-in-time compiling.

00:29:51.540 --> 00:29:52.320
Sorry.

00:29:52.320 --> 00:29:57.540
Anyways, so this system actually
allowed them to do this.

00:29:57.700 --> 00:30:02.960
It actually saved this company probably
millions of dollars in warehousing

00:30:02.960 --> 00:30:07.060
costs because they were able to time in
a very precise way when stuff arrived.

00:30:07.060 --> 00:30:10.530
They were able to hold shipments back
from different vendors and things and

00:30:10.530 --> 00:30:12.480
get it all to deliver at the same time.

00:30:12.480 --> 00:30:15.270
So anyway,
this was also interesting because

00:30:15.270 --> 00:30:19.870
we had to integrate with a database
that was not supported by WebObjects.

00:30:20.030 --> 00:30:27.680
They wanted to build an app server based
on progress and build a fat client.

00:30:27.700 --> 00:30:28.710
They wanted to build a
client interface for that.

00:30:28.740 --> 00:30:31.870
And so they came to us and they're like,
you know,

00:30:31.870 --> 00:30:34.800
progress doesn't have a database adapter.

00:30:34.800 --> 00:30:38.210
How are you guys going to tie into this?

00:30:38.320 --> 00:30:41.610
Well,
we found a Java API library for progress,

00:30:41.690 --> 00:30:47.520
and it was just a matter of hooking into
it with the WebObjects framework layer.

00:30:47.520 --> 00:30:50.900
And so essentially we created our own,
instead of using our

00:30:50.900 --> 00:30:53.970
enterprise object framework,
we were able to just tie

00:30:54.040 --> 00:30:56.100
directly into these Java APIs.

00:30:56.100 --> 00:30:57.680
So, you know, when we were doing this,
we were able to do it.

00:30:57.680 --> 00:31:00.290
And a lot of people are worried about,
you know, what kinds of databases

00:31:00.290 --> 00:31:01.260
WebObjects support.

00:31:01.260 --> 00:31:06.070
This actually shows that you can
use libraries from those vendors

00:31:06.140 --> 00:31:10.260
to be able to actually get at the
data and be able to talk to other

00:31:10.260 --> 00:31:13.960
systems without actually having to use
maybe our database connection layer.

00:31:13.960 --> 00:31:17.240
So that was a little bit
of an interesting problem.

00:31:19.300 --> 00:33:42.700
[Transcript missing]

00:33:43.060 --> 00:33:44.660
How did WebObjects help us there?

00:33:44.760 --> 00:33:46.900
It was just great.

00:33:46.990 --> 00:33:49.910
I mean, it was, it actually,
if you look at what I just showed

00:33:49.910 --> 00:33:51.520
you compared to some of these
other things you're seeing,

00:33:51.520 --> 00:33:53.960
these applications were not sexy.

00:33:53.960 --> 00:33:55.940
These things were business applications.

00:33:55.940 --> 00:33:57.180
They were all about money.

00:33:57.180 --> 00:34:00.000
They were all about getting
visibility into these systems.

00:34:00.000 --> 00:34:03.790
And so we basically...

00:34:04.020 --> 00:34:06.580
were able to do this really quickly,
be able to meet all the requirements.

00:34:06.580 --> 00:34:10.140
But the most important
thing to me was it was fun.

00:34:10.140 --> 00:34:12.830
I mean, WebObjects just made this
kind of development great.

00:34:12.840 --> 00:34:18.120
I've been doing this type of work
for probably about five years now.

00:34:18.120 --> 00:34:22.590
And I, well, let me digress here.

00:34:22.650 --> 00:34:26.360
Five years ago, I was at Nortel Networks.

00:34:26.360 --> 00:34:31.360
We were doing some work with a
product that I won't mention,

00:34:31.360 --> 00:34:32.630
ColdFusion.

00:34:32.630 --> 00:34:32.630
And...

00:34:35.300 --> 00:34:38.610
Excuse me.

00:34:38.680 --> 00:34:44.200
So anyway, we were scaling some
of these systems there.

00:34:44.210 --> 00:34:46.160
Really, these systems just kind
of got out of control.

00:34:46.160 --> 00:34:47.980
Everybody started wanting
to use these things,

00:34:47.980 --> 00:34:49.130
and our databases were getting huge.

00:34:49.140 --> 00:34:50.940
We were getting a huge user population.

00:34:50.960 --> 00:34:52.320
We were having to buy hardware.

00:34:52.360 --> 00:34:55.710
We were throwing everything
we could at this application.

00:34:55.730 --> 00:34:57.860
And it was just getting insane.

00:34:57.880 --> 00:35:02.460
So it just stopped scaling.

00:35:02.510 --> 00:35:06.160
We were getting four second per page
response times and what have you.

00:35:06.160 --> 00:35:09.510
So we started looking at WebObjects,
which was also considered the

00:35:09.560 --> 00:35:11.970
standard at Nortel at that time,
though our department didn't

00:35:11.970 --> 00:35:13.920
seem to agree with that.

00:35:13.930 --> 00:35:16.320
So we started playing with it.

00:35:16.330 --> 00:35:20.500
And I mean, immediately, out of the box,
we were just blown away.

00:35:20.500 --> 00:35:24.040
I mean, it was like,
this does everything right.

00:35:24.040 --> 00:35:27.010
I mean, I can forget.

00:35:27.240 --> 00:35:29.860
The whole user interfacing,
I can forget this whole database thing,

00:35:29.860 --> 00:35:31.910
I can focus on the business
in the middle rules,

00:35:31.910 --> 00:35:33.220
and I'm not really Mr.

00:35:33.220 --> 00:35:35.900
Web Architect, but hey,
I'm about to develop a system

00:35:35.900 --> 00:35:38.630
that's perfectly three-tiered,
and maybe I'm new to this,

00:35:38.630 --> 00:35:40.680
but it's still going
to be pretty darn good.

00:35:40.680 --> 00:35:43.730
So, we started playing with WebObjects,
and it was cool,

00:35:43.760 --> 00:35:47.010
and they came to us and they said, well,
you can do this little

00:35:47.020 --> 00:35:50.600
application in WebObjects,
knock yourself out, so we did.

00:35:50.600 --> 00:35:52.660
And they said, well,
we also need you to do a

00:35:52.730 --> 00:35:54.160
little bit of cold fusion.

00:35:55.900 --> 00:35:59.560
who said, "Sorry, we're going to Apple."

00:36:00.300 --> 00:36:05.180
So anyways, basically I love WebObjects.

00:36:05.200 --> 00:36:10.810
It's a great application to work with
and I hope you guys have an opportunity

00:36:10.810 --> 00:36:13.200
to play with it if you already
haven't been playing with it some.

00:36:13.440 --> 00:36:15.190
Alright, that's it.

00:36:15.220 --> 00:36:17.150
Thank you all very much.

00:36:21.530 --> 00:36:25.720
We've got a really cool presentation now.

00:36:25.900 --> 00:36:27.320
I mean, my stuff wasn't sexy.

00:36:27.320 --> 00:36:28.720
This guy's stuff is really sexy.

00:36:28.720 --> 00:36:29.970
This is Ricardo Florres.

00:36:30.000 --> 00:36:31.000
Thanks.

00:36:31.000 --> 00:36:32.480
Thanks, bud.

00:36:35.610 --> 00:36:36.400
Thank you all for coming.

00:36:36.400 --> 00:36:38.550
Again, my name is Ricardo Florres,
and I'm the Consulting

00:36:38.610 --> 00:36:40.760
Engagement Manager for
Apple Eye Services Southwest.

00:36:40.760 --> 00:36:44.230
As you've probably surmised by now,
Apple Eye Services is the

00:36:44.230 --> 00:36:46.420
consulting arm of Apple Computer.

00:36:46.420 --> 00:36:49.250
I'm here to talk to you about
Build Online by Modern Postcard.

00:36:49.260 --> 00:36:52.280
Modern Postcard is a small
company located in Carlsbad,

00:36:52.280 --> 00:36:53.110
California.

00:36:53.110 --> 00:36:55.000
Small in size, large in revenue.

00:36:55.000 --> 00:36:59.580
And what they do is they create postcards
for individuals and for corporations.

00:36:59.580 --> 00:37:02.390
Sounds very simple and kind of a niche,
but you'll see that it's

00:37:02.440 --> 00:37:03.580
much more than that.

00:37:04.020 --> 00:37:06.660
What Build Online is,
it's the result of their request

00:37:06.780 --> 00:37:10.050
for us to build them a web portal
that will allow their corporate and

00:37:10.150 --> 00:37:14.140
individual customers to jump online
and create dynamic web pages that allow

00:37:14.160 --> 00:37:17.730
a level of customization that we were
unable to find any place on the web.

00:37:17.740 --> 00:37:20.340
When they got this idea,
and I'll show you a demo

00:37:20.340 --> 00:37:22.810
in just a few moments,
we spent about two weeks

00:37:22.960 --> 00:37:26.310
scouring the internet trying to
find something that did what we

00:37:26.370 --> 00:37:30.080
envisioned the way we envisioned it,
and we couldn't find it.

00:37:30.140 --> 00:37:32.910
We found a lot of things
online that did postcards.

00:37:32.940 --> 00:37:34.000
But not really.

00:37:34.020 --> 00:37:36.390
what we intended to do.

00:37:36.660 --> 00:37:39.810
The goal, obviously, is to make money,
and that's a common thread that

00:37:39.810 --> 00:37:41.140
all of our presentations have.

00:37:41.150 --> 00:37:43.580
Yeah, they're cool, they're sexy,
and yeah, they were fun,

00:37:43.750 --> 00:37:45.940
but if they're not driving
revenue for the customer,

00:37:45.940 --> 00:37:48.430
we're not there, and the project ends.

00:37:48.440 --> 00:37:50.740
So that's obviously the goal,
and for modern postcards,

00:37:50.850 --> 00:37:53.310
market penetration is the key
to actually driving revenue,

00:37:53.310 --> 00:37:55.040
and they penetrate a number
of different markets.

00:37:55.040 --> 00:37:57.650
Individual selling cards is
obviously a key component for them,

00:37:57.650 --> 00:38:00.360
and there's a big business,
and people just printing cards of their

00:38:00.360 --> 00:38:02.180
dog or their daughter or what have you.

00:38:02.600 --> 00:38:05.380
The real estate community is really
significant because you probably

00:38:05.400 --> 00:38:07.530
get a lot of cards in the mail,
postcards from realtors

00:38:07.530 --> 00:38:09.840
either pushing themselves,
pushing a property,

00:38:09.840 --> 00:38:12.960
pushing Remax or Century 21,
what have you,

00:38:12.960 --> 00:38:16.400
and a lot of those people use
modern postcard for their services.

00:38:16.400 --> 00:38:20.080
The artistic and design community is
one of their biggest focal points,

00:38:20.110 --> 00:38:23.730
and the reason is, if you're an artist,
and you create a piece of work,

00:38:23.760 --> 00:38:26.750
and you pour your lifeblood into this,
and you're trying to

00:38:27.000 --> 00:38:29.910
distribute this to the masses,
you want something that really

00:38:30.000 --> 00:38:31.320
represents what you've done.

00:38:31.320 --> 00:38:32.460
The look, the feel.

00:38:32.600 --> 00:38:33.860
The depth, the texture.

00:38:33.860 --> 00:38:36.830
If it's fuzzy, if it's jagged,
it's not going to work for you,

00:38:36.840 --> 00:38:39.740
and so they have the highest end
technology that can produce a

00:38:39.750 --> 00:38:43.530
postcard with whatever you want,
however you want it on the front side.

00:38:43.540 --> 00:38:48.090
And also from a gallery perspective,
if they're actually presenting something,

00:38:48.090 --> 00:38:52.000
they want to present example or
examples of the artwork of the artists,

00:38:52.000 --> 00:38:54.610
that's what they do,
and so it looks great.

00:38:54.650 --> 00:38:56.970
And so they do a significant
amount of work for artists,

00:38:56.970 --> 00:38:59.560
for designers,
and for the artist and design community.

00:38:59.560 --> 00:39:02.560
But where the real revenue is,
and where the real push is, is the art.

00:39:02.630 --> 00:39:04.140
is obviously the corporate community.

00:39:04.140 --> 00:39:08.490
And the best example I can think of to
give corporate postcards is when you

00:39:08.490 --> 00:39:12.500
buy some software and you crack open
the box and all those cards fall out.

00:39:12.540 --> 00:39:16.180
Say, register your software and get
support and look at all these

00:39:16.290 --> 00:39:17.820
other cool products that we make.

00:39:17.820 --> 00:39:21.310
Those are postcards and they're not
the postcards on the little revolving

00:39:21.310 --> 00:39:24.830
kiosk on Hollywood and Vine that says
welcome to California and now go home.

00:39:24.910 --> 00:39:26.200
They are revenue postcards.

00:39:26.200 --> 00:39:30.430
They're postcards that drive money to
businesses for their goods and their

00:39:30.430 --> 00:39:33.300
services and that's where the real
money comes and so that's where we

00:39:33.320 --> 00:39:36.980
were really focusing doing this effort.

00:39:37.710 --> 00:39:40.400
So we had a number of requirements
that we had to do for the

00:39:40.400 --> 00:39:41.320
development of this product.

00:39:41.420 --> 00:39:43.920
Some of them pretty generic,
some of them very specific.

00:39:43.920 --> 00:39:46.550
On time and rapid development,
a good thing to have.

00:39:46.560 --> 00:39:49.220
Application scalability,
another good thing to have,

00:39:49.220 --> 00:39:50.880
but we took it one level further.

00:39:50.880 --> 00:39:54.200
The demo you're about
to see is a 5% solution.

00:39:54.200 --> 00:39:57.050
We anticipated full community
revolving around this application

00:39:57.530 --> 00:40:00.350
you're going to see with a bunch
of other features that we were

00:40:00.350 --> 00:40:02.280
just trying to flush out right now.

00:40:02.770 --> 00:40:05.540
But this is minimal compared
to what we're going to have

00:40:05.540 --> 00:40:06.800
in three to five years.

00:40:06.800 --> 00:40:10.320
It's also driving a significant
amount of revenue at this point.

00:40:10.340 --> 00:40:12.440
And we had to make sure
that all the objects,

00:40:12.440 --> 00:40:15.010
all the frameworks,
all the code is going to be usable

00:40:15.010 --> 00:40:18.440
because we're going to scale this
extremely quickly and we're not going

00:40:18.440 --> 00:40:22.820
to have time to go back and reverse
engineer or take components out.

00:40:22.820 --> 00:40:25.750
We must move forward,
so scalability had to be at 100%.

00:40:25.770 --> 00:40:28.780
So we're really taking the object
approach doing this to make sure

00:40:28.780 --> 00:40:32.080
that all the objects and all the
frameworks are going to be reusable.

00:40:32.760 --> 00:40:35.860
A streamlined UI was important because
we had an existing solution that

00:40:35.960 --> 00:40:37.560
they had online when we got there.

00:40:37.560 --> 00:40:38.700
It wasn't very elegant.

00:40:38.700 --> 00:40:42.580
We introduced some tracking mechanisms
that showed that their usage was low

00:40:42.580 --> 00:40:46.420
and also it wasn't driving people
back to the site for repeat business.

00:40:46.420 --> 00:40:50.180
Corporate licensing was very low,
so it really wasn't hitting their

00:40:50.180 --> 00:40:54.120
target space and we've been able to
do that and I think you'll see why.

00:40:54.120 --> 00:40:56.280
We had to interface with
existing back-end systems.

00:40:56.280 --> 00:40:59.360
Again, always an important thing,
but we had some unique challenges.

00:40:59.360 --> 00:41:02.360
Modern Postcard had several
disparate databases.

00:41:02.760 --> 00:41:05.510
And they were all linked together and
so we had to actually go and touch

00:41:05.510 --> 00:41:09.180
these databases and make sure that we
traded data back and forth in real time

00:41:09.220 --> 00:41:12.360
as people go into the order screen,
put in their name, their address, blah,

00:41:12.360 --> 00:41:12.760
blah, blah.

00:41:12.760 --> 00:41:14.880
We had to make sure all
that goes into the database,

00:41:15.050 --> 00:41:17.550
matches with existing records,
updates when appropriate,

00:41:17.650 --> 00:41:19.740
and then spawn to all
the other data sources.

00:41:19.760 --> 00:41:22.650
Not an ideal solution,
but it's the world that they had

00:41:22.650 --> 00:41:26.760
when we got there and so that's what
we integrated with very seamlessly.

00:41:26.760 --> 00:41:30.670
And yes, we're trying to get a better
singular solution and that's coming,

00:41:30.670 --> 00:41:32.220
but that was the world that we had.

00:41:32.220 --> 00:41:34.220
And so we had to go in there and say,
"We're not going to tell you what to do.

00:41:34.220 --> 00:41:38.300
We're going to integrate with what
you have," and that's what we did.

00:41:38.460 --> 00:41:40.790
But the real rub of this whole
thing is real-time preview.

00:41:40.790 --> 00:41:45.880
What real-time preview is,
it allows anybody to go online and

00:41:45.880 --> 00:41:49.160
create the postcard and actually
get a finished product online.

00:41:49.160 --> 00:41:51.550
The problem they had was,
if I go online and create

00:41:51.560 --> 00:41:53.770
a postcard and I say,
not exactly what I want,

00:41:53.770 --> 00:41:56.960
I want to move this here,
move this there, do this, do that,

00:41:56.960 --> 00:41:59.510
what I would do is I would jump
on the phone and call one of their

00:41:59.510 --> 00:42:02.720
highly paid design experts and say,
can you move that to the left a little,

00:42:02.720 --> 00:42:04.100
can you change the text to red?

00:42:04.600 --> 00:42:06.520
And this guy's making
dollars per hour going,

00:42:06.520 --> 00:42:09.410
yeah, sure, no problem,
fourth phone call, fifth phone call,

00:42:09.410 --> 00:42:12.220
and the margin of those postcards
keeps getting driven down because

00:42:12.220 --> 00:42:15.860
he's billable to a postcard that we
hope this person eventually purchases.

00:42:15.940 --> 00:42:17.950
So the margins were very low.

00:42:17.950 --> 00:42:21.890
What this has allowed us to do is,
and the requirement that we had was,

00:42:21.890 --> 00:42:24.570
90% of the time,
we wanted a customer to jump

00:42:24.630 --> 00:42:28.320
online and do the tweaking on
their own dime and their own time,

00:42:28.320 --> 00:42:31.230
and when it's finally what they want,
they can hit order,

00:42:31.270 --> 00:42:34.500
and then it goes to the design guy,
and then he makes it camera ready.

00:42:34.520 --> 00:42:35.180
And shoots it.

00:42:35.220 --> 00:42:37.810
So it's really streamlined,
it increases the margin

00:42:37.820 --> 00:42:39.700
of every postcard,
and it's also kind of

00:42:39.780 --> 00:42:42.830
cool for the customer,
and very quick and easy for the customer,

00:42:42.900 --> 00:42:45.520
so it drives them back to the site,
which was another key

00:42:45.630 --> 00:42:47.130
component that we had.

00:42:47.150 --> 00:42:50.990
So the real-time preview was the
most challenging thing we had to do,

00:42:50.990 --> 00:42:52.540
and the most important.

00:42:52.540 --> 00:42:54.440
It's what separated us from the pack.

00:42:54.500 --> 00:42:56.500
So how did we do that?

00:42:56.590 --> 00:42:57.940
Well, we had three key components.

00:42:57.940 --> 00:43:01.000
The first one is obviously WebObjects,
Apple's core development tool.

00:43:01.000 --> 00:43:02.700
The second one was Flash 5.

00:43:02.700 --> 00:43:04.500
We had to do some very dynamic things.

00:43:04.500 --> 00:43:06.540
Which, again, had not been done.

00:43:06.540 --> 00:43:08.030
And we talked to Flash.

00:43:08.040 --> 00:43:10.110
Flash said, that can't be done.

00:43:10.120 --> 00:43:11.800
But we did it.

00:43:11.860 --> 00:43:14.420
And I'll show you what and how.

00:43:14.420 --> 00:43:15.890
And, of course,
the last part of it was the

00:43:15.890 --> 00:43:17.520
Apple iServices Consulting Engineers.

00:43:17.520 --> 00:43:21.060
So this,
if we can get this to work properly,

00:43:21.060 --> 00:43:23.010
will be built online.

00:43:23.020 --> 00:43:24.630
There's the mouse.

00:43:24.640 --> 00:43:25.910
There's the mouse.

00:43:27.510 --> 00:43:30.280
Okay, this is the log on screen
and when you log on,

00:43:30.360 --> 00:43:33.230
if you don't have the proper software,
that being a current version

00:43:33.230 --> 00:43:34.760
of IE or Communicator,
it'll tell you.

00:43:34.760 --> 00:43:36.340
If not, you go to this screen.

00:43:36.340 --> 00:43:37.600
Note first the tabs on top.

00:43:37.610 --> 00:43:40.720
You go wherever you need to and it
shows you what tab you're using.

00:43:40.720 --> 00:43:42.720
What you saw there was
a list of categories.

00:43:42.720 --> 00:43:45.180
We picked faces and you look
at blown up thumbnails of the

00:43:45.180 --> 00:43:46.760
faces so they're not little tiny.

00:43:46.760 --> 00:43:48.150
You can see what you've got.

00:43:48.230 --> 00:43:50.570
When you select one,
it gives you a full size blow up.

00:43:50.650 --> 00:43:53.320
We chose the attractive young
lady with the tongue ring.

00:43:53.320 --> 00:43:56.210
And if you like that,
you hit select and it brings

00:43:56.210 --> 00:43:58.450
you to the desktop workspace.

00:43:58.540 --> 00:44:01.500
If not, you go back to the categories
and select another face.

00:44:01.620 --> 00:44:03.920
Once you choose the face,
it puts it on the workspace and you

00:44:03.920 --> 00:44:06.670
notice that you have the control
panel there on the left hand side.

00:44:06.680 --> 00:44:09.180
This is really where the magic
of the application occurs.

00:44:09.180 --> 00:44:12.230
You can go by the click of a button
on any of those control mechanisms,

00:44:12.230 --> 00:44:13.490
choose what you want to do.

00:44:13.490 --> 00:44:16.270
We clicked that we wanted a header
and once the header comes up,

00:44:16.270 --> 00:44:19.440
you have full word processor capability
to actually go and edit that.

00:44:19.440 --> 00:44:22.990
So we highlighted it, we put in new text,
you can make it say anything you want.

00:44:22.990 --> 00:44:24.240
Doesn't have spell check.

00:44:24.240 --> 00:44:25.460
It's coming in phase two.

00:44:25.460 --> 00:44:28.420
But other than that,
you can do whatever you want to.

00:44:28.510 --> 00:44:29.510
So here we put in text.

00:44:29.520 --> 00:44:32.240
With a click of the button,
we change it from black to white.

00:44:32.330 --> 00:44:34.120
Those are the two colors
that the customer required.

00:44:34.260 --> 00:44:35.380
So that was in the requirements.

00:44:35.380 --> 00:44:37.750
We're going to go in and we
can change the font and it

00:44:37.750 --> 00:44:39.190
dynamically changes the font.

00:44:39.230 --> 00:44:41.970
You'll note that the picture
doesn't change and the response

00:44:41.970 --> 00:44:43.500
time is extremely quick.

00:44:43.500 --> 00:44:46.510
We'll go in and change
the font again and boom,

00:44:46.510 --> 00:44:51.740
in a matter of one or two seconds,
the text font is actually changed.

00:44:51.740 --> 00:44:55.940
Other control mechanisms,
right now the text is

00:44:55.940 --> 00:44:57.460
upper left on the header.

00:44:57.460 --> 00:44:58.350
By using the grid mechanism, we click,
we want it bottom center and boom,

00:44:58.350 --> 00:44:59.480
it goes to bottom center.

00:44:59.480 --> 00:45:01.690
The picture didn't change,
the font didn't change,

00:45:01.690 --> 00:45:03.920
the color didn't change,
the point sign didn't change,

00:45:03.920 --> 00:45:06.020
the location is the
only thing that changed.

00:45:06.020 --> 00:45:06.710
Want a logo?

00:45:06.710 --> 00:45:07.560
Click on a logo.

00:45:07.610 --> 00:45:09.480
Want to change the location of the logo?

00:45:09.480 --> 00:45:11.190
Change the location of the logo.

00:45:11.220 --> 00:45:13.050
The text doesn't change,
the font doesn't change,

00:45:13.050 --> 00:45:14.000
the picture doesn't change.

00:45:14.000 --> 00:45:17.460
You can actually go ahead and change
the whole back end picture by selecting,

00:45:17.530 --> 00:45:20.850
there's two sizes, a custom postcard or
the generic postcard.

00:45:20.850 --> 00:45:23.440
And this is the deluxe one,
actually blows it up.

00:45:23.500 --> 00:45:25.720
And this doesn't just
increase the picture,

00:45:25.720 --> 00:45:28.140
it's actually spawning a
new file to the front side.

00:45:28.280 --> 00:45:30.390
Now, come in on the back side,
take the old picture out,

00:45:30.530 --> 00:45:32.550
put the new one in,
but all the intelligence is kept.

00:45:32.550 --> 00:45:35.890
All the settings that you've been messing
with on your control panel don't go away.

00:45:35.890 --> 00:45:38.010
When your front side's done,
you click on tab three,

00:45:38.010 --> 00:45:40.520
goes to the back side,
you have much the same functionality.

00:45:40.520 --> 00:45:42.890
These are templates that the
customer asked us to create.

00:45:42.890 --> 00:45:45.550
It can be more free format,
but these were custom requirements.

00:45:45.550 --> 00:45:47.870
They're orienting templates
to some of those core markets

00:45:47.870 --> 00:45:49.900
that I talked about earlier,
real estate, etc.

00:45:49.900 --> 00:45:51.990
You have much the same
functionality on the back side

00:45:51.990 --> 00:45:53.860
as you do on the front side,
full word processor

00:45:53.860 --> 00:45:57.240
capability on the actual text,
but there's one cool feature.

00:45:57.420 --> 00:46:00.600
You'll notice in a moment,
we're actually going to highlight a

00:46:00.600 --> 00:46:03.700
bunch of text and delete the text,
and nothing will move.

00:46:03.740 --> 00:46:06.150
And the reason is because
that's where you designated

00:46:06.150 --> 00:46:07.710
you wanted that text to be.

00:46:07.720 --> 00:46:10.800
A lot of the existing solutions
that are trying to do something like

00:46:10.800 --> 00:46:13.440
this are based on business rules,
so they actually build

00:46:13.580 --> 00:46:15.510
in hard-coded logic,
an example of which is

00:46:15.510 --> 00:46:18.700
when you highlight text,
the middle section there, and delete it,

00:46:18.700 --> 00:46:22.700
it says there's a bunch of white space,
we need to center that so it looks good.

00:46:22.730 --> 00:46:24.420
But what if you don't want it centered?

00:46:24.420 --> 00:46:24.840
Too bad.

00:46:24.860 --> 00:46:26.660
Well,
we didn't want too bad as an answer.

00:46:26.730 --> 00:46:29.200
We wanted, if you don't want it centered,
put it where you want it,

00:46:29.260 --> 00:46:32.770
and we'll figure out a way to
dynamically take those postcard-specific

00:46:32.770 --> 00:46:36.180
values unique to your postcard
and integrate that into your

00:46:36.180 --> 00:46:37.790
real-time preview result that you get.

00:46:37.790 --> 00:46:39.900
So you'll notice that the
text there didn't change.

00:46:39.900 --> 00:46:42.420
If you want to move it,
just like you did on the front side,

00:46:42.420 --> 00:46:43.020
you can.

00:46:43.020 --> 00:46:45.820
On this specific template, it's set,
but a lot of the templates

00:46:45.850 --> 00:46:47.000
are much more free form.

00:46:47.000 --> 00:46:49.390
So we look at the final
postcard in the back,

00:46:49.390 --> 00:46:50.740
and it looks to be okay.

00:46:50.740 --> 00:46:53.810
We're doing some final
modifications on the back side,

00:46:53.940 --> 00:46:56.890
trying to put a logo on there,
and the logo pops up on the bottom.

00:46:57.380 --> 00:47:02.520
And when you're done, you hit continue,
and this, tab four, is real-time preview.

00:47:02.520 --> 00:47:05.700
90% of the time, this is going to work.

00:47:05.720 --> 00:47:08.820
You can look at this and say,
it's precisely what I want,

00:47:08.820 --> 00:47:11.350
I'm going to go to the
fifth tab and order this,

00:47:11.350 --> 00:47:15.030
and it goes to the camera,
and you shoot it, and you're done.

00:47:15.030 --> 00:47:19.050
The bandwidth and the cycles that
the client spends is minimal.

00:47:19.050 --> 00:47:22.320
The savings that they've
devised as a result of this,

00:47:22.320 --> 00:47:26.400
the sky's the limit,
and that's why this is the 5% solution.

00:47:27.780 --> 00:47:28.860
So that's what we did.

00:47:28.970 --> 00:47:29.760
We think it's kind of cool.

00:47:29.760 --> 00:47:31.760
The client thinks it's very cool.

00:47:31.760 --> 00:47:33.640
How did we do it?

00:47:33.640 --> 00:47:37.250
It's a long process,
but the easiest way to explain it is

00:47:37.250 --> 00:47:41.800
to kind of take it from the end and
work our way back to the beginning.

00:47:41.800 --> 00:47:44.070
What you end up with
is what you just saw,

00:47:44.070 --> 00:47:46.800
a postcard that has a
lot of functionality.

00:47:46.800 --> 00:47:48.300
And no, it's not HTML.

00:47:48.300 --> 00:47:51.800
It's actually a series of
dynamically nested Flash movies.

00:47:51.800 --> 00:47:55.560
And Flash actually uses a very
dynamic component which allows

00:47:55.640 --> 00:47:57.860
you to go and change one element.

00:47:57.860 --> 00:48:00.210
So you want to change the font,
you change the font.

00:48:00.320 --> 00:48:02.650
Everything else stays the same,
and the font command is

00:48:02.720 --> 00:48:05.760
contained in a Flash movie,
so everything else stays the same.

00:48:05.760 --> 00:48:08.480
So the footprint is very
small for that command.

00:48:08.480 --> 00:48:10.520
It takes just what it needs,
throws it up there,

00:48:10.590 --> 00:48:13.560
so it's very... It's very quick,
and the rest of the

00:48:13.670 --> 00:48:16.380
data and the settings,
the integrity is intact.

00:48:16.380 --> 00:48:19.590
So you're allowed to dynamically
change whatever you need to very,

00:48:19.590 --> 00:48:21.310
very rapidly and very free form.

00:48:21.320 --> 00:48:24.020
So that was really significant for us.

00:48:24.020 --> 00:48:27.150
So you have your finished postcard,
and again, it's a series of dynamically

00:48:27.230 --> 00:48:28.190
nested Flash movies.

00:48:28.190 --> 00:48:31.420
Well,
Flash uses a file format called SWF,

00:48:31.420 --> 00:48:33.760
S-W-F,
much like Word uses the doc format.

00:48:33.780 --> 00:48:37.000
And so we had to figure out how
to get the SWF file format onto

00:48:37.070 --> 00:48:40.390
the browser so you could see
these movies and do the magic.

00:48:40.400 --> 00:48:43.780
Well, what we used was... What we used
was the WebObjects direct action,

00:48:43.780 --> 00:48:45.010
which is a call within WebObjects.

00:48:45.050 --> 00:48:46.840
There's a lot of different
ways we could have done this.

00:48:46.840 --> 00:48:48.780
WebObjects direct action
is cool for two reasons.

00:48:48.780 --> 00:48:53.770
One is you can actually bookmark
those files and come back to it later,

00:48:53.780 --> 00:48:55.550
and the second one,
which is more important for us,

00:48:55.550 --> 00:48:56.750
it allows a stateless session.

00:48:56.780 --> 00:48:59.760
So you don't need to spawn a
physical session because that

00:48:59.770 --> 00:49:03.770
wouldn't give us the dynamic nature
and responsiveness that we needed.

00:49:03.780 --> 00:49:06.880
We needed a stateless environment to be
able to push these actions very rapidly,

00:49:06.880 --> 00:49:08.720
and so that's why we
used the direct action.

00:49:08.770 --> 00:49:11.760
So that was really the mechanism
that we used to get this to work.

00:49:11.760 --> 00:49:15.280
the Swift and spawn it to the browser.

00:49:15.600 --> 00:55:13.800
[Transcript missing]

00:55:16.900 --> 00:55:23.810
And I think Robb's going
to finish up for us here.

00:55:26.200 --> 00:55:30.190
So we have the WebObjects
lab located in room K.

00:55:30.190 --> 00:55:32.520
It's actually in the other building.

00:55:32.520 --> 00:55:35.800
And the roadmap is just
some other sessions.

00:55:35.800 --> 00:55:41.000
The subsequent session is developing
desktop applications with WebObjects.

00:55:41.000 --> 00:55:42.170
I highly recommend it.

00:55:42.300 --> 00:55:48.300
Moving to WebObjects 5 in room
A1 and directed Java in room

00:55:48.300 --> 00:55:50.700
A1 immediately following it.