WEBVTT

00:00:05.470 --> 00:00:08.160
Good morning, ladies and gentlemen.

00:00:08.240 --> 00:00:12.760
Bob said it really well
at this early morning.

00:00:12.760 --> 00:00:16.100
Everybody's taking really useful polls,
so I will have to do the same.

00:00:16.200 --> 00:00:20.880
Who would not be up at this very hour
if it wasn't for this presentation?

00:00:21.960 --> 00:00:23.040
Thank you.

00:00:23.040 --> 00:00:26.670
I hope you have muffins, orange juice,
and all the other goodies that

00:00:26.670 --> 00:00:29.670
they're handing out for free,
so at least it's free food.

00:00:29.690 --> 00:00:33.140
I'm Stan Jiurman, and I will be joined in
a minute by Tom Naughton,

00:00:33.140 --> 00:00:36.680
who will be giving the
demos for this presentation.

00:00:37.590 --> 00:00:41.630
What's in this beautiful talk?

00:00:41.700 --> 00:00:44.480
Because it's so early,
we tried to put many demos in there

00:00:44.750 --> 00:00:46.470
so that you don't quite fall asleep.

00:00:46.520 --> 00:00:49.750
We'll be discussing the new
features in WebObjects 5 and

00:00:49.830 --> 00:00:52.500
the WebObjects tool integration.

00:00:52.500 --> 00:00:57.500
We've had presentations on
WebObjects Builder before.

00:00:57.500 --> 00:01:00.610
We had other sessions
talking about EOModeler,

00:01:00.650 --> 00:01:03.990
so we'll not address those
in too much of a depth.

00:01:04.930 --> 00:01:08.370
We will be talking about the
project builder assistants.

00:01:08.530 --> 00:01:10.580
At this point,
you're probably realizing this

00:01:10.640 --> 00:01:12.480
session should have been earlier.

00:01:12.480 --> 00:01:14.520
And I don't mean like at 7 o'clock.

00:01:14.520 --> 00:01:19.300
I mean Tuesday, because you've seen all
those assistants since,

00:01:19.300 --> 00:01:21.100
but we will talk more about them.

00:01:21.300 --> 00:01:23.060
We'll be discussing
the project structure,

00:01:23.060 --> 00:01:26.980
which has changed quite
dramatically since WebObjects 4.5,

00:01:26.980 --> 00:01:28.800
or even the prior versions.

00:01:28.810 --> 00:01:30.890
We'll be talking about
rapid turnaround mode.

00:01:30.910 --> 00:01:33.860
That's the nifty thing that you
don't have to compile a product,

00:01:33.860 --> 00:01:35.130
and it still works.

00:01:35.140 --> 00:01:37.460
We'll explain to you how it works,
or why it works,

00:01:37.460 --> 00:01:40.120
and why it sometimes doesn't work.

00:01:40.120 --> 00:01:45.000
We'll be discussing the CVS integration
on examples of WebObjects.

00:01:45.000 --> 00:01:49.660
We'll be talking about the
installation of a built product.

00:01:49.660 --> 00:01:52.320
And we'll be discussing,
or just briefly touching,

00:01:52.360 --> 00:01:55.100
custom palettes in WebObjects Builder.

00:01:57.380 --> 00:01:58.500
Project builder assistants.

00:01:58.530 --> 00:01:59.840
Now you've all seen them.

00:01:59.840 --> 00:02:01.730
You've seen probably all of them.

00:02:01.730 --> 00:02:05.390
And you've seen probably only one kind,
the project assistants.

00:02:05.480 --> 00:02:08.670
The project assistants are those
that help you set up a new project.

00:02:08.960 --> 00:02:13.230
File assistants are assistants that
help you with an existing project

00:02:13.230 --> 00:02:15.530
to add more and more stuff to them.

00:02:16.080 --> 00:02:21.750
As I said, project assistants help
with new project creation.

00:02:21.850 --> 00:02:26.370
They build a fully functional,
compilable application

00:02:26.380 --> 00:02:28.850
skeletons for you from scratch.

00:02:29.140 --> 00:02:32.420
And they add resources based
on what frameworks you choose,

00:02:32.420 --> 00:02:35.190
what model files you choose, et cetera.

00:02:36.280 --> 00:02:37.600
What's new in web objects 5?

00:02:37.600 --> 00:02:41.500
For those of you who have been
using web objects for a while,

00:02:41.500 --> 00:02:46.340
now you can add multiple EO model
files to a project right away,

00:02:46.340 --> 00:02:49.640
which is really helpful because
then the formal wizards,

00:02:49.690 --> 00:02:52.290
now assistants,
go with you through the whole

00:02:52.290 --> 00:02:54.480
process of reverse engineering.

00:02:54.480 --> 00:02:58.750
And you can get consistency errors if
you have only one model in the project.

00:02:58.760 --> 00:03:02.200
You can also add frameworks,
which again allows you to

00:03:02.240 --> 00:03:06.140
structure your product nicely
and have EO models in there.

00:03:06.160 --> 00:03:11.510
And of course, the new features of EO,
EOF Cocoa applications and

00:03:11.510 --> 00:03:13.560
all the new Java stuff.

00:03:15.330 --> 00:03:19.070
The file assistants,
once you have a functional product,

00:03:19.180 --> 00:03:22.780
project, excuse me,
then those assistants are used to

00:03:22.780 --> 00:03:25.200
add new things to your project.

00:03:25.310 --> 00:03:30.200
Java classes, nice templates with names
and everything filled in,

00:03:30.200 --> 00:03:32.560
web components,
they get already a little bit trickier,

00:03:32.710 --> 00:03:34.200
and Java client MIPS.

00:03:34.200 --> 00:03:36.630
That's the trickiest part.

00:03:37.140 --> 00:03:41.960
So that's done all for you,
and Tom now will come on stage and will

00:03:41.960 --> 00:03:47.080
show you something about the assistants.

00:03:48.610 --> 00:03:50.700
Okay, so as Stan mentioned,
you've probably all seen

00:03:50.700 --> 00:03:52.830
the assistants by now,
but let's just consider

00:03:52.860 --> 00:03:54.890
this a comprehensive review.

00:04:01.400 --> 00:04:04.120
So this is, of course,
the assistant panel in Project Builder.

00:04:04.120 --> 00:04:06.400
The WebObjects assistants
are all at the bottom.

00:04:06.400 --> 00:04:09.100
I'd just like to go through and explain
what each of these is in case we

00:04:09.100 --> 00:04:11.670
haven't covered them all consistently.

00:04:11.710 --> 00:04:13.810
The first is the Cocoa EOF application.

00:04:13.820 --> 00:04:17.650
This is the replacement for
using EOF in Cocoa applications.

00:04:17.670 --> 00:04:21.780
It basically just copies the
standard Java Cocoa project template,

00:04:21.980 --> 00:04:26.380
adds our frameworks,
and guides you through creating a nib,

00:04:26.380 --> 00:04:30.380
much like a direct Java client,
as you've seen.

00:04:30.440 --> 00:04:34.890
The next two, Java client,
direct to Java client, and direct to web,

00:04:35.140 --> 00:04:37.320
basically just ask you to choose a model.

00:04:37.320 --> 00:04:40.740
Direct to web asks you to choose
an appearance for the application.

00:04:40.860 --> 00:04:42.640
Then it just builds and
runs the application,

00:04:42.640 --> 00:04:46.440
and you customize all
the features at runtime.

00:04:46.440 --> 00:04:48.460
Display group application
I'm going to use in a minute.

00:04:48.460 --> 00:04:49.460
You've seen it many times.

00:04:49.460 --> 00:04:53.210
It creates a component with a
preconfigured display group,

00:04:53.300 --> 00:04:57.260
which is a kind of a Swiss army
knife controller object that

00:04:57.260 --> 00:04:59.540
manages a set of EOs for display.

00:04:59.540 --> 00:05:06.200
The next two are basically just
template copying assistants.

00:05:06.200 --> 00:05:11.800
They just copy the standard
basic WebObjects application and

00:05:11.800 --> 00:05:14.930
WebObjects framework projects,
and just customize them

00:05:14.930 --> 00:05:16.360
with the name that you add.

00:05:16.370 --> 00:05:19.180
So I'm going to go through and
do the display group application,

00:05:19.180 --> 00:05:24.380
because I basically need an application
to do the rest of the demos with.

00:05:24.450 --> 00:05:26.800
So we give it a name.

00:05:35.870 --> 00:05:39.800
And this panel is actually one of
the new features in WebObjects 5.

00:05:39.940 --> 00:05:42.800
Previous versions of the wizard
would just let you choose one model,

00:05:42.830 --> 00:05:45.800
and that made it difficult if you
had frameworks containing models,

00:05:45.800 --> 00:05:49.290
or if you had multiple models
with cross-model relationships.

00:05:49.300 --> 00:05:52.800
So this actually makes it a lot easier
to do things that you couldn't do before.

00:05:52.800 --> 00:05:57.300
I'm going to add a
business logic framework.

00:05:58.650 --> 00:06:01.840
And you can see in the next panel that
that framework contains two models.

00:06:01.840 --> 00:06:03.600
I could also add additional models.

00:06:03.650 --> 00:06:07.170
And as long as they don't
have conflicting entity names,

00:06:07.180 --> 00:06:12.160
I could use that entire model
group for the rest of the wizard.

00:06:13.410 --> 00:06:16.640
Next we choose the main
entity for the main component.

00:06:16.640 --> 00:06:19.120
I'm always going to go with movie.

00:06:20.960 --> 00:06:23.590
There are various options
for the layout that you want.

00:06:23.700 --> 00:06:26.200
For example,
you can just have a big list of

00:06:26.260 --> 00:06:32.620
all the attributes that you choose,
or you can have a list of EOs represented

00:06:32.620 --> 00:06:36.730
by the attribute that you choose,
and then clicking on it will display

00:06:36.730 --> 00:06:42.900
more detail below that you can
edit and use to create new EOs.

00:06:43.020 --> 00:06:51.810
I'm just going to go with the list
of EOs and what I just explained.

00:06:52.300 --> 00:06:55.300
Anyway, okay, so we need some attributes,
and I'm just going to show off

00:06:55.300 --> 00:06:59.200
that you can select multiple
attributes and add them all at once.

00:06:59.200 --> 00:07:00.930
I think I want to do that.

00:07:00.940 --> 00:07:03.400
And then I need to choose
an attribute to use for the

00:07:03.470 --> 00:07:06.200
hyperlink in the list of the EOs.

00:07:06.200 --> 00:07:08.360
And I just click on Finish.

00:07:09.400 --> 00:07:13.300
Okay, so basically you've seen this type
of project a number of times before.

00:07:13.300 --> 00:07:18.290
It's created this component with
a pre-configured display group.

00:07:21.600 --> 00:07:26.160
Since this is the assistant demo,
I'd also like to show you

00:07:26.160 --> 00:07:29.500
some of the file assistants,
which I don't think people have

00:07:29.500 --> 00:07:31.640
been showing in other demos.

00:07:31.820 --> 00:07:36.060
So again, the WebObjects assistants are
down at the bottom of the screen.

00:07:36.160 --> 00:07:38.410
You'll notice that there's a
Java class assistant here and

00:07:38.410 --> 00:07:40.360
another one up here under Cocoa.

00:07:40.470 --> 00:07:44.900
And the basic difference is the template
has different import statements.

00:07:44.910 --> 00:07:47.560
So if you want to import
the Cocoa frameworks,

00:07:47.560 --> 00:07:49.000
you would choose this one.

00:07:49.000 --> 00:07:50.920
If you want to import the
WebObjects frameworks,

00:07:50.920 --> 00:07:51.950
you would use this one.

00:07:52.050 --> 00:07:54.000
We're just going to
create a new component.

00:07:54.150 --> 00:07:56.780
Oh, and actually this reminds me.

00:07:57.020 --> 00:07:59.960
One important thing when you use
the Project Builder assistance is

00:07:59.960 --> 00:08:03.400
you have to choose the group that
you want to add the component to,

00:08:03.400 --> 00:08:06.370
or it'll just add it
wherever the selection is.

00:08:07.530 --> 00:08:12.180
So we're going to just create a
new plain old vanilla component.

00:08:12.180 --> 00:08:13.300
We get a list of the targets.

00:08:13.300 --> 00:08:15.750
Many of the assistants don't
give you a list of targets.

00:08:15.800 --> 00:08:18.800
They just know which target things
go in and choose it for you.

00:08:18.800 --> 00:08:22.940
But since this is a built-in project
builder template copying wizard,

00:08:23.040 --> 00:08:24.540
we have to choose the target.

00:08:24.540 --> 00:08:26.850
We're going to cover
targets a little bit later.

00:08:26.880 --> 00:08:29.800
But the important thing here is
that you pretty much never want

00:08:29.800 --> 00:08:32.940
to add things to the main target.

00:08:33.000 --> 00:08:34.790
And you want to add all
of your components to the

00:08:34.790 --> 00:08:36.100
application server target.

00:08:36.100 --> 00:08:38.150
So I'll go ahead and do that.

00:08:38.650 --> 00:08:41.230
And we have this configured
to open the Java file.

00:08:41.260 --> 00:08:44.830
You'll see that it's added
that with the other components.

00:08:44.900 --> 00:08:48.960
So the other way to create new
components is to use the builder.

00:08:51.260 --> 00:08:54.470
And when you save the component,
if you save it in the project directory,

00:08:54.480 --> 00:08:57.210
which it'll try to do by default,

00:08:59.910 --> 00:09:02.800
It'll ask if you want to add
the component to the project.

00:09:02.800 --> 00:09:05.790
Say yes, it asks if you want to
create the Java file.

00:09:05.800 --> 00:09:07.800
You pretty much always do.

00:09:07.950 --> 00:09:10.790
And that'll also just stick the
new component into the project.

00:09:10.850 --> 00:09:14.710
So you can either use WAB or
use one of the wizards.

00:09:18.700 --> 00:09:21.340
I'm just going to build this so
that we can do the next demo.

00:09:21.350 --> 00:09:22.940
But there's really no need to run it.

00:09:22.940 --> 00:09:24.900
You've seen it many times.

00:09:25.000 --> 00:09:26.390
So, Stan?

00:09:26.410 --> 00:09:27.340
All right.

00:09:27.340 --> 00:09:29.340
Now just sit here.

00:09:29.490 --> 00:09:30.340
Stay with us.

00:09:30.340 --> 00:09:30.960
All right.

00:09:31.040 --> 00:09:33.230
Don't run away.

00:09:33.300 --> 00:09:36.450
So back to the slides, if we can go.

00:09:38.400 --> 00:09:40.050
Yes.

00:09:40.120 --> 00:09:45.330
Tom pointed out initially in the
assistants the Cocoa EOF application.

00:09:45.370 --> 00:09:46.780
I'll repeat after me.

00:09:46.850 --> 00:09:48.760
That's in Java.

00:09:50.790 --> 00:09:53.360
Let's go into the next topic,
the project structure.

00:09:53.440 --> 00:09:59.840
We saw Tom talk about targets, buckets,
and we will also touch a

00:09:59.890 --> 00:10:03.220
little bit of mystery files,
which was selected as the last

00:10:03.300 --> 00:10:04.700
file on the previous demo screen.

00:10:04.700 --> 00:10:05.590
Now, what is a target?

00:10:05.740 --> 00:10:11.700
Target is something new for at least
the legacy WebObjects developers.

00:10:11.820 --> 00:10:17.700
It's a notion that comes
over from old Mac OS.

00:10:17.700 --> 00:10:20.980
It allows you for a file to
be part of multiple different

00:10:23.520 --> 00:10:26.280
You can have a file being-- OK,
it's complicated, you see?

00:10:26.280 --> 00:10:29.280
I mean, I work with it,
and I don't know how to explain it.

00:10:29.280 --> 00:10:33.660
A file can be part of multiple targets,
and a target describes where that file,

00:10:33.660 --> 00:10:37.330
when it's once built or copied
in the finished product,

00:10:37.330 --> 00:10:38.820
where it will be.

00:10:39.340 --> 00:10:41.980
So in a typical deployment
scenario for WebObjects,

00:10:41.980 --> 00:10:43.980
we have an application server.

00:10:43.980 --> 00:10:45.520
Then somewhere we have a web server.

00:10:45.740 --> 00:10:48.300
Sometimes it's the same machine,
but typically it's not.

00:10:48.480 --> 00:10:49.340
There's a firewall.

00:10:49.510 --> 00:10:52.290
They forgot the fire.

00:10:52.360 --> 00:10:57.290
The servers connect through the
firewall to all the clients.

00:10:57.350 --> 00:11:01.250
So we see that in the typical
scenario we have the app server

00:11:01.250 --> 00:11:04.550
and the web server apart,
and usually it's maybe

00:11:04.550 --> 00:11:06.290
even more computers.

00:11:06.370 --> 00:11:11.280
The web server target,
which is part of any WebObjects project,

00:11:11.300 --> 00:11:16.260
you put static stuff there,
stuff that just doesn't change.

00:11:16.330 --> 00:11:18.510
Things that the web server
has to fetch from disk,

00:11:18.510 --> 00:11:19.280
and that's it.

00:11:19.490 --> 00:11:24.540
Static images, static HTML,
client-side Java classes because

00:11:24.540 --> 00:11:27.300
they just get downloaded to
the client over the network.

00:11:27.340 --> 00:11:29.210
Java client Nib files, same thing.

00:11:29.340 --> 00:11:33.300
And anything that gets
access through normal URLs.

00:11:33.300 --> 00:11:35.770
Now here,
because this is so late in the week,

00:11:35.940 --> 00:11:38.290
you already know what normal URLs are.

00:11:38.460 --> 00:11:42.330
It's this non-so-fancy or
not-so-ugly looking thing.

00:11:42.760 --> 00:11:47.740
Then, to complement that,
we have the application server target.

00:11:47.800 --> 00:11:51.340
This one is used for
all the dynamic content,

00:11:51.590 --> 00:11:56.010
server-side Java classes, web components,
that would be what Tom was

00:11:56.010 --> 00:11:58.850
creating with Objects Builder,
EO models.

00:11:59.080 --> 00:12:00.700
These are also dynamic.

00:12:00.700 --> 00:12:04.800
They're considered dynamic, and also,
they're used by the application

00:12:04.850 --> 00:12:06.020
and by the web server.

00:12:06.020 --> 00:12:08.770
And images generated on the fly.

00:12:08.860 --> 00:12:11.440
An example of an image
generated on the fly is,

00:12:11.440 --> 00:12:17.900
you have already, hopefully,
visited the Apple Eye tools with

00:12:17.900 --> 00:12:21.010
the eye cards and sent nice,
cute little postcards

00:12:21.390 --> 00:12:22.780
to your mom and dad.

00:12:22.780 --> 00:12:27.490
This is an example of a
picture generated on the fly.

00:12:28.100 --> 00:12:29.580
Warning.

00:12:29.580 --> 00:12:32.280
If you don't know what you're doing,
don't touch them.

00:12:32.570 --> 00:12:33.620
Don't mess with them.

00:12:33.640 --> 00:12:34.730
Don't rename them.

00:12:34.790 --> 00:12:37.050
The targets, they are--

00:12:37.550 --> 00:12:40.680
They depend on their names
and don't modify them.

00:12:40.760 --> 00:12:44.460
Tom will show later when he's
giving the demo about targets

00:12:44.460 --> 00:12:46.210
what you really shouldn't touch.

00:12:46.270 --> 00:12:47.410
There's a lot of settings.

00:12:47.470 --> 00:12:49.460
And if you really don't
know what you're doing,

00:12:49.470 --> 00:12:51.510
just please stay away.

00:12:52.160 --> 00:12:52.800
Buckets?

00:12:52.800 --> 00:12:55.200
What buckets?

00:12:55.200 --> 00:12:59.830
In previous versions of WebObjects,
we had this old project builder,

00:12:59.830 --> 00:13:04.080
now known as Project Builder Woe,
except on Windows, where it's now known

00:13:04.080 --> 00:13:05.660
as the Project Builder.

00:13:05.800 --> 00:14:09.800
[Transcript missing]

00:14:09.910 --> 00:14:11.900
Ah, those buckets.

00:14:11.900 --> 00:14:15.900
"Mystery files." Some of
you may be wondering,

00:14:15.900 --> 00:14:19.900
"What are some of those files that
are there?" Let's delete them.

00:14:19.920 --> 00:14:21.900
They just take space and
nobody really uses them.

00:14:21.900 --> 00:14:25.890
It doesn't complain when they're gone.

00:14:26.400 --> 00:14:27.680
Two mystery files.

00:14:27.710 --> 00:14:30.670
The woohoo file.

00:14:30.770 --> 00:14:32.440
Woohoo.

00:14:32.810 --> 00:14:34.360
Display Group Definitions.

00:14:34.430 --> 00:14:36.340
You've probably heard
what a display group is.

00:14:36.460 --> 00:14:43.660
It does a lot of nifty stuff for you,
connects things for display, etc.

00:14:43.700 --> 00:14:45.950
That is defined in the Woo file.

00:14:46.110 --> 00:14:48.720
You delete that file, oops, not good.

00:14:48.740 --> 00:14:52.180
Component encoding,
even if you don't use display groups,

00:14:52.180 --> 00:14:57.190
many, especially advanced users, I guess,
are not using the display group so much.

00:14:57.190 --> 00:15:00.300
But you might be interested
in your data coming into the

00:15:00.300 --> 00:15:02.780
browser with the proper encoding.

00:15:02.780 --> 00:15:07.560
You're talking to a Japanese client,
it comes in Latin characters,

00:15:07.560 --> 00:15:08.550
not so good.

00:15:08.550 --> 00:15:13.780
So this is all stored in the component
encoding section of the Woo file.

00:15:13.780 --> 00:15:17.480
The second mystery file,
we got new icons, by the way,

00:15:17.480 --> 00:15:18.730
is the "A" file.

00:15:18.740 --> 00:15:23.170
This API file is in XML format,
following the new great

00:15:23.210 --> 00:15:26.200
standards that we are following.

00:15:26.350 --> 00:15:28.830
It's used during development only.

00:15:28.880 --> 00:15:34.030
It tells WebObjects Builder what are
legal and what are illegal bindings.

00:15:34.080 --> 00:15:37.970
So it won't allow you to make a
connection that requires an array

00:15:37.970 --> 00:15:40.460
to something that's a flat thing,
etc.

00:15:40.550 --> 00:15:43.860
And if you delete that, oh well,
it will live.

00:15:44.210 --> 00:15:49.210
It's used during development only,
and in your build project,

00:15:49.210 --> 00:15:49.210
you don't have to have it there.

00:15:49.920 --> 00:15:56.190
Now, as I promised in another demo,
Tom will talk about targets.

00:15:57.440 --> 00:16:00.680
Okay, so first I wanted to open up some
of these groups so that you can see

00:16:00.680 --> 00:16:02.300
the default project organization.

00:16:02.300 --> 00:16:04.180
And again,
these groups are basically just a

00:16:04.250 --> 00:16:06.280
figment of project builders' imagination.

00:16:06.300 --> 00:16:08.290
It doesn't correspond
to the layout on disk.

00:16:08.290 --> 00:16:12.250
It's just a convenient mechanism
for you to organize your project.

00:16:12.300 --> 00:16:18.580
One catch, though, is that our wizards,
our assistants,

00:16:18.580 --> 00:16:22.300
have preferred groups that
they like to put things in.

00:16:22.300 --> 00:16:25.300
So that, to make it easy,
when you create a new component,

00:16:25.300 --> 00:16:27.810
you know, "Gee, where did it put it in
my project?" You know,

00:16:27.810 --> 00:16:29.300
it put it in Web Components.

00:16:29.300 --> 00:16:33.300
Let's see, so we have classes go up here.

00:16:33.300 --> 00:16:35.300
We have the group with
the Web Components.

00:16:35.300 --> 00:16:37.250
Each component is in its own group.

00:16:37.300 --> 00:16:40.300
If you don't like that,
you can just completely rearrange that.

00:16:40.300 --> 00:16:46.300
You can put them all in one group or
each file in another group if you want.

00:16:46.680 --> 00:16:49.300
Resources, let's see.

00:16:49.300 --> 00:16:50.270
Whoops.

00:16:50.270 --> 00:16:51.300
That's annoying.

00:16:51.300 --> 00:16:52.720
- Annoying.

00:16:53.880 --> 00:16:56.160
Basically,
you would put your application resources,

00:16:56.160 --> 00:16:59.960
the ones that go on the
application server side,

00:17:00.160 --> 00:17:00.800
generally go in there.

00:17:00.800 --> 00:17:03.540
The web server resources
are GIFs and things,

00:17:03.540 --> 00:17:07.800
as Stan mentioned,
that need to be copied to the web server.

00:17:07.800 --> 00:17:12.990
Interfaces is the location
where it would put nib files for

00:17:12.990 --> 00:17:15.800
Java Client or Cocoa EOF Client.

00:17:15.850 --> 00:17:18.800
Frameworks bucket, of course,
contains frameworks.

00:17:18.800 --> 00:17:22.790
One interesting bucket is
the built product bucket.

00:17:22.800 --> 00:17:25.530
It's actually a convenient way
for you to go and look at the

00:17:25.530 --> 00:17:28.800
structure of the bundle that
was built for your application.

00:17:28.800 --> 00:17:31.060
For example,
if you have a burning desire to

00:17:31.060 --> 00:17:34.370
see the Windows launch script,
you can just drill right down

00:17:34.400 --> 00:17:37.780
into it without having to
use the finder or terminal.

00:17:37.820 --> 00:17:38.800
Don't show it to people yet.

00:17:38.800 --> 00:17:41.800
That's at the very end,
just before they walk out.

00:17:41.800 --> 00:17:42.800
Don't show it yet.

00:17:43.020 --> 00:17:43.800
Yeah, let's just start showing that.

00:17:43.800 --> 00:17:46.070
This is where it appears in the project,
but we're not going to discuss

00:17:46.070 --> 00:17:47.800
the project structure until later.

00:17:47.800 --> 00:17:48.790
Okay.

00:17:48.830 --> 00:17:50.770
As was mentioned by Stan.

00:17:50.800 --> 00:17:51.800
Let's see.

00:17:51.800 --> 00:17:53.800
I also wanted to show you the targets.

00:17:53.800 --> 00:17:55.780
There are two different
ways of looking at targets.

00:17:55.830 --> 00:17:58.770
To me,
the most convenient one is in this view.

00:17:58.800 --> 00:18:00.770
There's a pop-up that
shows all the targets.

00:18:00.800 --> 00:18:03.220
When you choose a target,
it puts a little donut next to

00:18:03.220 --> 00:18:04.800
the file that is in that target.

00:18:04.800 --> 00:18:07.800
If you want to add a file to a target,
you just turn on the donut.

00:18:07.800 --> 00:18:09.800
To remove it, you turn it off.

00:18:09.800 --> 00:18:13.990
You can see here that all the classes,
all the components, all the frameworks,

00:18:13.990 --> 00:18:17.800
and even the web server resources will
be in the application server target.

00:18:17.800 --> 00:18:22.730
Then looking at the web server,
you'll see that it's basically

00:18:22.730 --> 00:18:27.780
just the web server resources,
the GIFs, and some frameworks.

00:18:27.800 --> 00:18:29.870
So basically,
these GIFs will be copied both to your

00:18:29.870 --> 00:18:31.790
web server and to the application server.

00:18:31.800 --> 00:18:36.800
You probably won't always need to have
the GIFs in the application server side,

00:18:36.800 --> 00:18:41.500
but if you dynamically create images,
it's convenient to have a copy of them

00:18:41.500 --> 00:18:43.800
there so that you can access them.

00:18:43.800 --> 00:18:44.800
That's sort of up to you.

00:18:44.800 --> 00:18:46.800
The frameworks are
included in both targets.

00:18:46.800 --> 00:18:50.130
You can use the targets so that
your Java classes can have access

00:18:50.130 --> 00:18:51.800
to any of these frameworks.

00:18:51.800 --> 00:18:56.790
I think that basically covers
targets and project structure.

00:19:00.400 --> 00:19:01.400
Oh yeah, I'm still here.

00:19:01.400 --> 00:19:02.400
I was just looking.

00:19:02.400 --> 00:19:06.400
Come on, it's too early.

00:19:06.400 --> 00:19:08.400
Oh wait, no, I'm sorry.

00:19:08.400 --> 00:19:10.700
There's another way to...

00:19:10.830 --> 00:19:13.390
He is also one of those people
who should have raised the hand

00:19:13.410 --> 00:19:15.240
of not even being up at this time.

00:19:15.240 --> 00:19:18.420
I looked at my script and noticed that
there's another way to look at targets.

00:19:18.460 --> 00:19:21.720
You can click on the Targets tab,
and it lists the three targets.

00:19:21.750 --> 00:19:25.510
And what's important to note here
is that the application and web

00:19:25.510 --> 00:19:29.840
server target are both sub-targets
of the main project target.

00:19:29.890 --> 00:19:34.680
And so the whole reason the
main target exists is just to

00:19:34.680 --> 00:19:35.730
build the other two targets.

00:19:35.760 --> 00:19:37.170
You never put anything in there.

00:19:37.260 --> 00:19:40.240
It's just sort of a convenience
so that you wouldn't have to build

00:19:40.240 --> 00:19:41.960
the two targets independently.

00:19:42.030 --> 00:19:44.540
Now, show also why people
shouldn't touch them.

00:19:44.540 --> 00:19:45.910
Show the scary stuff now.

00:19:45.960 --> 00:19:46.420
The scary stuff, yes.

00:19:46.420 --> 00:19:47.680
So that they know the stop sign.

00:19:47.740 --> 00:19:48.240
Yes.

00:19:48.240 --> 00:19:52.080
When you click on these targets,
you get another view of the target that

00:19:52.080 --> 00:19:53.670
shows you all the files that's in them.

00:19:53.730 --> 00:19:57.300
You could drag and drop files from
the finder into these buckets as

00:19:57.300 --> 00:19:59.920
another way of adding files to targets.

00:19:59.960 --> 00:20:03.590
And down here, there are--

00:20:04.110 --> 00:20:08.240
There are scripts and various
settings that you probably

00:20:08.240 --> 00:20:12.310
wouldn't want to mess with,
such as...

00:20:14.390 --> 00:20:16.300
These are some build
settings for the targets.

00:20:16.300 --> 00:20:19.260
If you really know what you're doing,
you might want to mess with some of

00:20:19.260 --> 00:20:23.730
the flags sent to the Java compiler,
but chances are you wouldn't want

00:20:23.730 --> 00:20:26.260
to mess with most of these things.

00:20:26.260 --> 00:20:28.790
So basically,
targets are there for you to add

00:20:28.790 --> 00:20:31.760
and remove resources and files to,
but unless you really

00:20:31.770 --> 00:20:34.080
know what you're doing,
you should probably just leave them

00:20:34.080 --> 00:20:38.490
alone and not create your own targets
and certainly not rename them.

00:20:39.000 --> 00:20:40.000
I'm going to finish this time.

00:20:40.000 --> 00:20:41.980
Sounds lovely.

00:20:42.010 --> 00:20:45.680
And when we go back to the slides,
I'll rewound a few.

00:20:45.720 --> 00:20:48.020
That's why I was not paying attention.

00:20:48.120 --> 00:20:52.020
For recap,
two targets-- the web server target,

00:20:52.110 --> 00:20:54.290
static stuff.

00:20:54.660 --> 00:20:58.040
One of the examples Tom has
mentioned that you can put a

00:20:58.150 --> 00:21:02.530
file into more than one bucket,
excuse me, target.

00:21:02.570 --> 00:21:07.840
Static image might be an example or an
image in general for the static version

00:21:07.840 --> 00:21:09.380
that just gets downloaded to your client.

00:21:09.410 --> 00:21:12.410
And maybe your application will
want to do something with it,

00:21:12.460 --> 00:21:13.470
be creative with it.

00:21:13.530 --> 00:21:16.810
Again, my favorite example, those iCards.

00:21:16.850 --> 00:21:19.720
When you first come to the
selection of I want this picture,

00:21:19.720 --> 00:21:22.500
I want that picture, I want that picture,
it's a static image.

00:21:22.500 --> 00:21:23.600
It's just showing them to you.

00:21:23.600 --> 00:21:26.000
It's not doing anything with them.

00:21:26.090 --> 00:21:29.000
However, later,
when you actually start typing text and

00:21:29.050 --> 00:21:34.120
it shows you a preview of that slide,
that card, it became a dynamic image.

00:21:34.200 --> 00:21:37.540
So it has to be on the
application server as well.

00:21:38.270 --> 00:21:43.520
There is no need to put a Neo model
to both targets because WebServer

00:21:43.520 --> 00:21:45.470
won't know what to do with it.

00:21:45.480 --> 00:21:48.710
But some resources,
also some Java classes that might

00:21:48.730 --> 00:21:50.200
be used to put them into both.

00:21:50.200 --> 00:21:53.640
A Java class might have some
business logic that's used

00:21:53.640 --> 00:21:57.170
by the application server,
but it's also used by the Java client,

00:21:57.310 --> 00:22:01.200
and everything for the Java client
has to be in the WebServer resource.

00:22:01.200 --> 00:22:03.930
And again, as Tom said,
you saw that really,

00:22:04.050 --> 00:22:09.460
really crafty page with 10,000 settings,
which very few people understand.

00:22:09.460 --> 00:22:10.900
Don't mess with it.

00:22:11.900 --> 00:22:14.140
And now beautiful animations.

00:22:14.140 --> 00:22:16.040
I mean,
could not have done it any better.

00:22:16.040 --> 00:22:19.260
And let's go to the
rapid turnaround mode.

00:22:19.280 --> 00:22:21.660
The rapid turnaround
mode we all have seen,

00:22:21.660 --> 00:22:25.140
and we love it so much.

00:22:25.610 --> 00:22:26.230
How does it work?

00:22:26.360 --> 00:22:27.390
Why does it work?

00:22:27.420 --> 00:22:30.620
Why does it sometimes not work?

00:22:30.790 --> 00:22:31.850
First, what does it do for you?

00:22:32.070 --> 00:22:33.600
It improves the development time.

00:22:33.600 --> 00:22:36.040
You don't have to go through
the whole build cycle.

00:22:36.120 --> 00:22:40.090
Usually, you change a resource,
you change something fancy,

00:22:40.120 --> 00:22:43.830
you just press refresh on the page,
it looks different.

00:22:44.030 --> 00:22:45.890
So, that's nice.

00:22:45.980 --> 00:22:48.220
No need to perform a full split-install.

00:22:48.440 --> 00:22:50.650
Remember the beautiful firewall picture?

00:22:50.760 --> 00:22:54.400
App server, web server, two computers,
nasty.

00:22:54.400 --> 00:22:56.900
You really don't want to do it each
time when you build your project.

00:22:57.100 --> 00:22:59.210
This one allows you to not
even rebuild the project,

00:22:59.220 --> 00:23:00.890
forget about the split-install.

00:23:00.890 --> 00:23:03.890
Split-install joys to be discussed later.

00:23:03.890 --> 00:23:08.720
Allows tweaking of HTML files and images.

00:23:08.880 --> 00:23:10.900
You don't even have to have a web server.

00:23:10.900 --> 00:23:13.210
Everything is done on disk.

00:23:13.760 --> 00:23:16.100
I like traffic signs,
not necessarily those,

00:23:16.140 --> 00:23:23.290
but Project Builder needs to be running
while you are in rapid turnaround mode.

00:23:23.390 --> 00:23:26.220
So you can't, for instance,
just have WebObjects Builder running,

00:23:26.350 --> 00:23:30.140
tweak some components, press refresh,
and expect something to happen.

00:23:30.220 --> 00:23:32.170
That's not going to happen.

00:23:32.360 --> 00:23:35.850
That's because WebObjects Framework
and the WebObjects Builder are

00:23:35.920 --> 00:23:41.140
talking in the background with
Project Builder to find the resources.

00:23:41.230 --> 00:23:49.020
There is this really fancy thing,
thank you Tom, the abstraction layer that

00:23:50.200 --> 00:23:53.300
abstracts communication
between all our tools,

00:23:53.350 --> 00:23:57.190
the WebObjects tools,
and the proper OS X development tools.

00:23:57.200 --> 00:24:01.110
As I said, it used to be that through
this whole bucket thing,

00:24:01.110 --> 00:24:03.930
everything had to live in one directory.

00:24:03.940 --> 00:24:07.010
And so we could find all the
resources where we wanted them,

00:24:07.010 --> 00:24:09.540
because they were in
this little directory.

00:24:09.540 --> 00:24:11.650
Now you can have resources
spread out on the network,

00:24:11.650 --> 00:24:12.930
anywhere in the file system.

00:24:12.940 --> 00:24:14.740
So we have to find them.

00:24:14.890 --> 00:24:17.430
Only Project Builder knows
where all the resources are,

00:24:17.700 --> 00:24:19.080
because it's running.

00:24:19.200 --> 00:24:22.580
It knows it has the project loaded,
so when we ask it, "Hey,

00:24:22.580 --> 00:24:26.960
where's the component blah?" It tells us,
"Right here." And we can find it.

00:24:27.070 --> 00:24:30.290
So it's really important
that you have this

00:24:30.750 --> 00:24:33.430
That you remember to have
Project Builder running because

00:24:33.430 --> 00:24:36.880
otherwise rapid turnaround will not work.

00:24:36.880 --> 00:24:42.020
And back to our chief demo person.

00:24:44.090 --> 00:24:45.860
Okay,
so now I'm going to run this application,

00:24:45.910 --> 00:24:48.520
which I see has built successfully.

00:24:48.560 --> 00:24:50.590
Actually, did I run it yet?

00:24:52.850 --> 00:24:55.560
Okay, when I build, you have to make sure
you're on the main target.

00:24:55.590 --> 00:24:59.710
Otherwise,
your execution button won't highlight.

00:25:02.030 --> 00:25:06.140
Actually, as Stan said,
there are two pieces to rapid turnaround.

00:25:06.250 --> 00:25:09.380
One is your WebObjects application
talks to Project Builder.

00:25:09.390 --> 00:25:11.900
The other is WAB talks
to Project Builder.

00:25:11.900 --> 00:25:15.930
That's actually two different code paths,
and there are some subtle cases where

00:25:15.930 --> 00:25:17.900
they behave slightly differently.

00:25:17.900 --> 00:25:21.870
One example would be if you edit an
EO model in EO Modeler and save it,

00:25:21.870 --> 00:25:24.900
WAB will notice the changes and they'll
show up in your variables browser.

00:25:24.900 --> 00:25:28.270
But the running application
won't refresh the EO model,

00:25:28.270 --> 00:25:29.900
so you have to relaunch.

00:25:29.920 --> 00:25:31.900
But not rebuild.

00:25:31.900 --> 00:25:33.690
Yeah, you don't have to
rebuild your application,

00:25:33.690 --> 00:25:34.900
but you do have to relaunch it.

00:25:34.960 --> 00:25:40.810
And sort of the way it works
internally is the WebObjects framework

00:25:41.070 --> 00:25:43.900
basically treats Project Builder
as your application bundle.

00:25:43.900 --> 00:25:45.890
It doesn't even look in the build bundle.

00:25:45.890 --> 00:25:48.900
It just talks to Project Builder
whenever it's looking for a resource.

00:25:48.900 --> 00:25:52.630
So basically if you add a resource,
it'll always find it

00:25:52.700 --> 00:25:54.890
without the need to rebuild.

00:25:54.910 --> 00:25:57.900
So, okay, we've run the application.

00:25:57.900 --> 00:25:59.900
And we've got this component.

00:25:59.900 --> 00:26:01.290
- What?

00:26:01.730 --> 00:26:02.200
Let's see.

00:26:02.200 --> 00:26:06.710
And the way it's working is it's
actually pointing to the very same file

00:26:06.710 --> 00:26:08.760
that you're editing in the builder.

00:26:08.760 --> 00:26:14.620
So if you change your component--

00:26:17.600 --> 00:26:24.560
If I refresh in the browser, not home,
refresh, it'll update right away.

00:26:24.560 --> 00:26:28.520
And also, if you drag in a GIF-- and
I believe I have some graphics

00:26:28.520 --> 00:26:30.650
on this machine somewhere.

00:26:35.900 --> 00:26:45.050
will drag in a moose to
beautify our application.

00:26:45.050 --> 00:26:45.050
Let's see if I can have Project Builder
showing the background so that you can

00:26:45.050 --> 00:26:45.050
watch it put the GIF where it goes.

00:26:45.400 --> 00:26:46.930
So, OK, finder.

00:26:46.950 --> 00:26:49.180
We asked for a high
resolution but didn't get it.

00:26:49.180 --> 00:26:49.680
No.

00:26:49.680 --> 00:26:49.960
Let's see.

00:26:49.960 --> 00:26:51.050
This window's kind of in the way.

00:26:51.130 --> 00:26:51.600
There we go.

00:26:51.600 --> 00:26:54.350
Now we can see-- no,
we still can't see the project.

00:26:54.550 --> 00:26:58.000
Here's the project,
here are the resources,

00:26:58.000 --> 00:27:00.510
we're going to drag in the moose.

00:27:02.280 --> 00:27:07.330
"It offers to add it to the application,
and you can see it's

00:27:07.340 --> 00:27:08.500
stuffed in the bucket.

00:27:08.540 --> 00:27:10.200
It's updated in WAB.

00:27:10.260 --> 00:27:12.200
We now have...is that a moose?

00:27:12.200 --> 00:27:14.640
Yeah, there's a moose in there." "I
know that guy." "It's behind

00:27:14.700 --> 00:27:15.960
the tree." "It's hiding.

00:27:15.960 --> 00:27:18.200
I mean, you know,
moose are shy by nature."

00:27:18.200 --> 00:27:20.200
"We save the component.

00:27:20.200 --> 00:27:23.020
Switch back to Internet Explorer.

00:27:23.020 --> 00:27:24.340
Hit refresh."

00:27:25.700 --> 00:29:11.000
[Transcript missing]

00:29:12.350 --> 00:29:15.790
Let's go back to the lovely slides.

00:29:15.860 --> 00:29:18.810
So much for rapid turnaround.

00:29:18.890 --> 00:29:21.680
CVS integration in Project Builder.

00:29:21.710 --> 00:29:23.730
I don't know if you've been to
the Project Builder sessions.

00:29:23.750 --> 00:29:26.240
We scheduled the WebObjects
track so that you can always go

00:29:26.240 --> 00:29:27.600
to the Project Builder sessions.

00:29:27.600 --> 00:29:29.250
There was always nice gaps.

00:29:29.360 --> 00:29:31.980
They could have been used
for lunch and other breaks,

00:29:32.080 --> 00:29:34.920
but Project Builder was the thought.

00:29:35.150 --> 00:29:36.410
This was discussed there.

00:29:36.490 --> 00:29:37.330
What is CVS?

00:29:37.460 --> 00:29:40.810
We'll show you in our session
briefly how it really works

00:29:40.960 --> 00:29:42.150
well with WebObjects as well.

00:29:42.300 --> 00:29:46.700
What can it do for you
on OS X and what is it?

00:29:47.080 --> 00:29:48.240
What is CVS?

00:29:48.300 --> 00:29:50.890
Concurrent versioning system.

00:29:51.470 --> 00:29:55.180
It's open source,
which is great these days.

00:29:55.200 --> 00:29:58.310
It's not owned by a single gigantic
company who wants to own everything.

00:29:58.330 --> 00:30:03.320
It comes pre-installed with
the developer version of OS X.

00:30:03.390 --> 00:30:05.600
So we kind of know it's there.

00:30:05.600 --> 00:30:08.280
We can rely on its presence
and on its feature set.

00:30:08.280 --> 00:30:11.620
It's cross-platform,
so even if you're developing

00:30:11.620 --> 00:30:15.060
on the platform that's owned
by one big corporation,

00:30:15.060 --> 00:30:18.280
you still can use CVS,
and we do support that.

00:30:18.280 --> 00:30:20.510
It's command line only.

00:30:20.510 --> 00:30:21.280
Ouch.

00:30:21.380 --> 00:30:23.240
Don't say that in the
Macintosh community.

00:30:23.290 --> 00:30:29.760
It's very powerful, but also very,
very... CVS tends to get crafty.

00:30:29.760 --> 00:30:34.370
I mean, I read the main pages more
often than I would like to,

00:30:34.450 --> 00:30:39.370
but we use it internally,
so it's got to be good, and at least the

00:30:39.570 --> 00:30:43.310
integration is really good,
because all the tools are

00:30:43.310 --> 00:30:45.090
built to work with CVS.

00:30:45.480 --> 00:30:49.640
How does Project Builder
help you with CVS?

00:30:49.640 --> 00:30:54.280
There is this SCM menu, which stands for
Source Management Control.

00:30:54.290 --> 00:31:00.300
It's something Source Control.

00:31:00.300 --> 00:31:11.300
It shows you where you
added and deleted files.

00:31:11.300 --> 00:31:12.280
That's one of the tricky things.

00:31:12.320 --> 00:31:16.600
You are on command line, you add a file,
you edit to the make file,

00:31:16.760 --> 00:31:19.280
or what have you,
and you build the project.

00:31:19.310 --> 00:31:20.210
It's just great.

00:31:20.210 --> 00:31:21.170
You do a CVS commit.

00:31:21.170 --> 00:31:24.560
Next day you check it out,
and it's not working because

00:31:24.560 --> 00:31:25.300
you forgot to add it.

00:31:25.300 --> 00:31:27.300
Project Builder does that for you.

00:31:27.300 --> 00:31:32.290
It supports the deletion of simple files,
as well as wrappers.

00:31:32.290 --> 00:31:35.300
You know, file wrappers,
those really nice things

00:31:35.300 --> 00:31:37.300
that are a .woe or .eomodeld.

00:31:37.300 --> 00:31:40.490
They show up like a little file,
but if you don't know about it,

00:31:40.490 --> 00:31:44.290
you add it, and nothing got added because
it's actually a directory.

00:31:44.300 --> 00:31:45.290
So it works recursively.

00:31:45.300 --> 00:31:45.540
way.

00:31:47.160 --> 00:31:53.860
And it allows remote, it supports remote
CVS servers with security.

00:31:53.950 --> 00:31:55.050
So that's an add-on bonus.

00:31:55.140 --> 00:31:58.300
You don't have to have your
CVS repository somewhere on

00:31:58.300 --> 00:32:00.240
the file system on the network,
excuse me,

00:32:00.360 --> 00:32:03.180
and have everybody see it or not.

00:32:03.280 --> 00:32:06.170
It supports authentication.

00:32:06.510 --> 00:32:10.300
Tom,
you should have been in the first slide,

00:32:10.300 --> 00:32:10.820
like Naim.

00:32:10.820 --> 00:32:12.640
You're doing most of the work here.

00:32:12.670 --> 00:32:14.170
Show us.

00:32:15.340 --> 00:32:19.710
Okay, so Project Builder has all
kinds of support for viewing

00:32:19.710 --> 00:32:23.220
differences in your CVS repository,
but they haven't added something to

00:32:23.220 --> 00:32:25.800
allow you to check out a project,
so you still have to do

00:32:25.800 --> 00:32:27.450
that on the command line.

00:32:32.210 --> 00:32:37.200
So CVS checkout, CO for short.

00:32:37.310 --> 00:32:41.090
And we've created a
CVS repository on this machine.

00:32:42.500 --> 00:32:45.400
So that's checked out
the Think Movies project.

00:32:45.400 --> 00:32:47.410
We can open that with
the command line too,

00:32:47.410 --> 00:32:48.330
since we're already here.

00:32:48.340 --> 00:32:53.560
Uh-oh.

00:32:53.560 --> 00:32:57.470
That terminal does strange things
when you have a large font sometimes.

00:33:03.800 --> 00:33:08.540
OK, so now we're going to modify
one of these components and show

00:33:08.540 --> 00:33:11.220
you the interactions with CVS.

00:33:11.220 --> 00:33:13.080
So we'll go ahead and open that in WAB.

00:33:13.080 --> 00:33:16.150
And let's say we wanted to add a key.

00:33:26.400 --> 00:33:37.900
[Transcript missing]

00:33:38.650 --> 00:33:41.010
And actually,
you have to save the file before

00:33:41.010 --> 00:33:43.040
it actually checks with CVS.

00:33:43.090 --> 00:33:45.680
And you can see it's put a
little M over here to show us

00:33:45.680 --> 00:33:46.880
that we've modified that file.

00:33:46.880 --> 00:33:49.590
So as you go on working,
you'll notice M's appearing next

00:33:49.610 --> 00:33:51.160
to files that you've modified.

00:33:51.180 --> 00:33:54.920
You can quickly look and
see which ones have changed.

00:33:54.920 --> 00:33:57.670
Then after you've edited it for a while,
you'd probably want to go and

00:33:57.680 --> 00:34:00.510
see how it compares to the file
that you originally started with.

00:34:00.560 --> 00:34:03.760
So you can go up here
to the SCM menu and say,

00:34:03.760 --> 00:34:05.470
Compare with Base.

00:34:07.260 --> 00:34:12.900
And that opens both the original file
and the modified file in File Merge.

00:34:12.920 --> 00:34:16.040
So that makes it very easy to go
through and review your diffs,

00:34:16.040 --> 00:34:19.480
which is something that we do
before we check in our code.

00:34:22.950 --> 00:34:26.860
So Tom, I can do that in command line.

00:34:26.860 --> 00:34:30.980
My big problem with
CVS is renaming files.

00:34:30.990 --> 00:34:35.500
How many of you have tried and
failed to rename a file in CVS?

00:34:37.110 --> 00:34:39.580
Directories, all this good stuff,
you see?

00:34:39.590 --> 00:34:41.080
But, Tom, do you have an answer for that?

00:34:42.180 --> 00:34:43.770
We sure do, Stan.

00:34:44.300 --> 00:34:46.550
That's the right answer.

00:34:46.600 --> 00:34:48.200
Okay.

00:34:48.450 --> 00:34:50.500
Yeah, in general,
to rename a file in CVS,

00:34:50.500 --> 00:34:52.400
you have to remove the
file and then add it.

00:34:52.420 --> 00:34:56.650
And of course, you can't remove the file
unless you delete it,

00:34:56.650 --> 00:34:56.650
so you have to...

00:34:56.810 --> 00:35:00.900
Delete it, rename it, add it,
and remove it to just rename the file.

00:35:00.920 --> 00:35:02.300
In the right order, of course.

00:35:02.390 --> 00:35:05.250
In the right order, of course.

00:35:05.280 --> 00:35:08.700
But in Project Builder,
you can just do a Get Info on the file.

00:35:08.730 --> 00:35:13.090
And you'll notice that it has-- this is
a list of all the CVS commit logs with

00:35:13.090 --> 00:35:17.180
useful information about all the changes
that the engineers made on this project.

00:35:17.240 --> 00:35:20.630
And to change the name,
you just type in a new name.

00:35:23.900 --> 00:35:25.420
warns me that I'm changing the name.

00:35:25.440 --> 00:35:30.520
And actually, over here,
you'll notice that it's marked

00:35:30.570 --> 00:35:33.530
the old file for removal,
and it's created a new file

00:35:33.600 --> 00:35:35.730
that it's marked for addition.

00:35:41.500 --> 00:35:44.050
Which is a big improvement
over what we did before,

00:35:44.050 --> 00:35:45.500
which would look something like this.

00:35:45.510 --> 00:35:48.600
Before we check in,
we want to review our diffs.

00:35:52.400 --> 00:35:57.740
"This basically shows you stuff like
this." "If I'm in the right direction.

00:35:57.740 --> 00:35:59.160
But anyway, that was the old way.

00:35:59.160 --> 00:36:01.460
Now there's the new way."
"So when we're all done,

00:36:01.460 --> 00:36:05.430
we want to check in our project."
"You can either select an individual

00:36:05.430 --> 00:36:09.790
file and go over to 'Commit Changes'"
"or you can choose the root of the

00:36:09.790 --> 00:36:12.550
project and commit all the changes."

00:36:14.400 --> 00:36:19.000
What you can also do, actually,
is you can select a subgroup.

00:36:19.110 --> 00:36:20.740
Subgroup, subgroup,
and it will commit all

00:36:20.740 --> 00:36:21.940
the changes in that group.

00:36:22.030 --> 00:36:25.480
When you're renaming a file,
you have to select both files,

00:36:25.510 --> 00:36:27.640
or you just have to select
the supergroup of that,

00:36:27.710 --> 00:36:30.370
because otherwise it will
check in the new file,

00:36:30.370 --> 00:36:35.140
but it will not remove the old one,
so your rename process will be,

00:36:35.180 --> 00:36:37.910
just as usual, incomplete.

00:36:38.260 --> 00:36:43.830
Okay, so you're prompted for your helpful
and informative commit message.

00:36:45.160 --> 00:36:49.420
Tom is famous for his really
descriptive comments in CVS.

00:36:49.420 --> 00:36:52.130
Yes, it's important.

00:36:53.700 --> 00:36:57.440
All of the Ms, Rs, and As have gone away,
and it seems to have left an M up

00:36:57.450 --> 00:36:59.690
here for an inexplicable reason.

00:36:59.700 --> 00:37:03.680
So you just put a comment in that file.

00:37:03.680 --> 00:37:07.700
Can I get at it in some way to
see later what you actually did?

00:37:07.700 --> 00:37:11.090
Actually,
I believe I demonstrated that earlier,

00:37:11.090 --> 00:37:11.700
Stan.

00:37:11.700 --> 00:37:13.700
You can bring up the information panel.

00:37:13.700 --> 00:37:16.260
I mean, you have to check on him
from time to time because you

00:37:16.310 --> 00:37:17.690
never know what he's doing.

00:37:17.700 --> 00:37:20.850
And in the information panel,
it gives you a list of all the helpful

00:37:20.850 --> 00:37:22.700
and informative commit messages.

00:37:22.700 --> 00:37:23.760
Well, thank you.

00:37:23.760 --> 00:37:25.700
Now I know how to keep an eye on you.

00:37:25.700 --> 00:37:26.700
That's how that works.

00:37:26.700 --> 00:37:28.700
All right.

00:37:35.200 --> 00:37:36.600
So far so good.

00:37:36.600 --> 00:37:39.090
Now let's get to the really nasty stuff.

00:37:39.090 --> 00:37:44.990
It's not that nasty,
it's just demo is not so pretty.

00:37:45.330 --> 00:37:47.340
Installation of WebObjects applications.

00:37:47.340 --> 00:37:52.530
We will now discuss build styles,
split installs,

00:37:52.530 --> 00:37:57.480
and somewhat the content of a
finished build product project.

00:37:59.050 --> 00:38:00.120
Build Styles.

00:38:00.200 --> 00:38:03.220
We have touched the targets.

00:38:03.320 --> 00:38:07.100
That's only half of the whole
issue in Project Builder.

00:38:07.100 --> 00:38:09.150
We also have different build styles.

00:38:09.250 --> 00:38:12.830
Build styles define different
compiler settings in general

00:38:12.830 --> 00:38:15.030
during different kinds of build.

00:38:15.110 --> 00:38:18.070
It's used by WebObjects to

00:38:18.390 --> 00:38:24.360
These describe different parts,
where it should go, web server,

00:38:24.360 --> 00:38:27.060
app server, together with the targets.

00:38:27.140 --> 00:38:28.290
There's three build styles.

00:38:28.300 --> 00:38:30.930
There's the one for the development,
that's the one that you're using

00:38:31.030 --> 00:38:33.840
when you're using the turnaround,
when you're just debugging your

00:38:33.840 --> 00:38:35.300
app and still working on it.

00:38:35.300 --> 00:38:38.370
And there's the deployment one,
that you would use to actually

00:38:38.540 --> 00:38:40.300
finally deploy the application.

00:38:40.300 --> 00:38:43.240
And there's the third, the web server,
which is kind of confusing.

00:38:43.280 --> 00:38:49.910
It's used to build the
product for the web server.

00:38:50.480 --> 00:38:54.450
I didn't make this table,
but it sure looks nice.

00:38:54.540 --> 00:38:55.710
Things to install.

00:38:55.900 --> 00:39:00.000
There is many different kinds of
resources that are part of a project.

00:39:00.100 --> 00:39:04.600
There is the app server resources,
components, EU models, et cetera.

00:39:04.940 --> 00:39:06.500
That's the left column.

00:39:06.500 --> 00:39:10.080
Then we have the three columns
for the three different targets.

00:39:10.080 --> 00:39:13.180
During develop-- build style, excuse me.

00:39:13.200 --> 00:39:15.500
During development,
when we're using rapid turnaround,

00:39:15.500 --> 00:39:18.500
everything gets built
into the builds directory.

00:39:18.510 --> 00:39:20.660
You're building, you're compiling.

00:39:20.660 --> 00:39:24.290
You can specify in project builder
where all your build intermediate

00:39:24.410 --> 00:39:27.620
products will be placed,
usually in a local directory so

00:39:27.620 --> 00:39:30.120
the file system isn't so busy.

00:39:30.130 --> 00:39:34.660
But when we actually go to
develop and deploy-- good God.

00:39:34.660 --> 00:39:40.110
When we go to deploy an application,
we want to have the finished

00:39:40.150 --> 00:39:42.060
product built somewhere else.

00:39:42.060 --> 00:39:44.990
In the application server
installation directory,

00:39:45.000 --> 00:39:47.990
that's where the application
eventually will live.

00:39:48.840 --> 00:39:52.200
That's so good, so far so good,
but the web server resources,

00:39:52.200 --> 00:39:53.140
they're on a different server.

00:39:53.140 --> 00:39:56.700
Remember that slide where the web
server was kind of behind a firewall

00:39:56.700 --> 00:39:59.020
and the app server was behind a
firewall and they were not really

00:39:59.060 --> 00:40:00.400
the same computer necessarily?

00:40:00.440 --> 00:40:04.270
If that's the case,
you have to invoke the web server

00:40:04.270 --> 00:40:09.000
build style as well so that the
web server resources actually get

00:40:09.080 --> 00:40:11.940
copied onto the web server itself.

00:40:11.970 --> 00:40:14.840
So that's the one big difference.

00:40:15.000 --> 00:40:19.090
During development, remember,
use the development build style.

00:40:19.520 --> 00:40:21.490
Everything will be just ducky.

00:40:21.640 --> 00:40:25.730
When you're ready to deploy,
you have to invoke both the

00:40:25.730 --> 00:40:30.200
deployment and the web server
build style to get it done.

00:40:31.120 --> 00:40:36.090
The second somewhat not
quite optimal thing yet,

00:40:36.090 --> 00:40:41.860
in Project Builder, you cannot invoke the
install step from the IDE.

00:40:41.860 --> 00:40:44.340
You have to do it in terminal.

00:40:44.900 --> 00:40:51.760
So you have to open terminal and type
in pbxbuild install -buildstyle and

00:40:51.760 --> 00:40:57.310
then one of the two build styles,
either deployment or web server,

00:40:57.460 --> 00:40:58.260
and you have to do both.

00:40:58.360 --> 00:41:03.520
And then destrude="slash."
Usually you don't want the files,

00:41:03.560 --> 00:41:07.080
the build target to live in temp,
which is where the finished

00:41:07.080 --> 00:41:09.800
product will be placed,
because you reboot the machine

00:41:09.800 --> 00:41:10.820
and you know where temp went.

00:41:10.860 --> 00:41:15.740
So you want to have it live in slash
so that everything gets properly

00:41:15.950 --> 00:41:18.840
expanded and is really persistent.

00:41:19.180 --> 00:41:23.720
However, you might want to omit the
destrude="slash" in case that your actual

00:41:23.920 --> 00:41:29.070
server is not your development machine,
which oftentimes is the case.

00:41:29.100 --> 00:41:30.320
So you can leave it there.

00:41:30.700 --> 00:41:32.720
Everything will be
nicely installed in temp,

00:41:32.880 --> 00:41:36.600
and then you can use the tar program
of your choice to just tar the

00:41:36.670 --> 00:41:40.600
whole thing up and move it to your,
what do I know, Solari server.

00:41:41.880 --> 00:41:46.080
Split installs, once again,
require both the deployment and web

00:41:46.100 --> 00:41:50.600
server build style to be invoked so that
the files get in the proper directories.

00:41:50.640 --> 00:41:53.710
If you aren't doing a split install,
if you have one machine that

00:41:53.710 --> 00:41:56.000
does everything for you,
you don't have to do that.

00:41:56.000 --> 00:41:58.370
The deployment is sufficient.

00:41:59.830 --> 00:42:00.710
Okay, now we build it.

00:42:00.930 --> 00:42:02.840
Now, what's in there?

00:42:02.840 --> 00:42:08.860
WebObjects 5, as its predecessors,
but WebObjects 5 more so than before,

00:42:08.860 --> 00:42:14.030
is cross-platform because it's Java,
which brings some really

00:42:14.030 --> 00:42:16.450
nice problems with it.

00:42:16.520 --> 00:42:17.810
The launch scripts.

00:42:17.830 --> 00:42:20.880
You've been here all week now,
and you see that red thing scroll

00:42:20.880 --> 00:42:23.680
by in Project Builder each time when
somebody launches an application.

00:42:23.700 --> 00:42:26.670
It's no longer just a single
word to launch an app.

00:42:26.710 --> 00:42:32.270
You actually need more to be done because
you need to tell the Java VM things,

00:42:32.270 --> 00:42:32.700
etc.

00:42:32.700 --> 00:42:36.370
So, in the OS X and UNIX,
for the OS X and UNIX case,

00:42:36.370 --> 00:42:38.680
there is the launch scripts.

00:42:38.680 --> 00:42:45.690
They live in the main wrapper and
then also in contents/macos app name.

00:42:45.700 --> 00:42:46.700
That's a little script.

00:42:46.700 --> 00:42:49.430
It's the same script for
both UNIX and Mac OS X,

00:42:49.470 --> 00:42:51.690
probably because Mac OS X is UNIX.

00:42:51.710 --> 00:42:54.650
. for

00:42:56.650 --> 00:42:58.510
Windows deployment.

00:42:58.680 --> 00:43:03.310
There is the Windows deployment script,
which also lives in the main wrapper,

00:43:03.370 --> 00:43:06.570
and it's called appname.cmd.

00:43:06.570 --> 00:43:09.270
And it also lives in the
proper contents directory.

00:43:09.360 --> 00:43:15.980
Those two copies are identical,
but they're used to be used on Windows.

00:43:16.610 --> 00:43:19.830
Then there is the classpath file.

00:43:19.990 --> 00:43:25.730
That one is used for all the
information for the Java VM,

00:43:25.780 --> 00:43:27.940
you know,
where to find the other classes,

00:43:27.940 --> 00:43:29.480
where to find the frameworks.

00:43:29.530 --> 00:43:32.070
When you use Project Builder,
this is all created

00:43:32.070 --> 00:43:33.500
for you automatically.

00:43:33.500 --> 00:43:34.500
You don't have to worry about anything.

00:43:34.500 --> 00:43:38.700
And those classpath files
are automatically passed as

00:43:38.700 --> 00:43:41.450
arguments by the launch scripts.

00:43:41.500 --> 00:43:43.270
But just in case you
want to mess with it,

00:43:43.270 --> 00:43:44.500
that's where they are.

00:43:44.500 --> 00:43:48.490
They are in the content/
and individual directories,

00:43:48.540 --> 00:43:49.500
depending on platform.

00:43:49.500 --> 00:43:52.170
And here we see there is one for Mac OS,
there is one for UNIX,

00:43:52.170 --> 00:43:55.730
and there is one for Windows,
because your Solaris machine has

00:43:55.730 --> 00:43:59.500
most likely somewhat different
Java VM or different libraries

00:43:59.500 --> 00:44:02.380
than your Mac OS X machine.

00:44:03.310 --> 00:44:06.680
Then for Java Client,
we've had many nice and powerful

00:44:06.680 --> 00:44:12.160
demos of the Java Client,
direct-to-Java Client technologies.

00:44:12.200 --> 00:44:13.840
It's all really nice and good.

00:44:14.080 --> 00:44:16.390
When you don't know how
to launch the application,

00:44:16.440 --> 00:44:17.410
it's a problem.

00:44:17.500 --> 00:44:20.320
Many people don't know there's
actually a script to do that.

00:44:20.420 --> 00:44:25.910
It's in the main app wrapper in contents,
and there is the app name.

00:44:26.400 --> 00:44:32.800
[Transcript missing]

00:44:35.280 --> 00:44:38.480
And then there's some other
stuff in the app wrapper,

00:44:38.620 --> 00:44:39.930
the .woa.

00:44:40.020 --> 00:44:42.190
There is all kinds of resources.

00:44:42.250 --> 00:44:44.860
Again,
we have the application server resources,

00:44:44.870 --> 00:44:46.850
and we have the web server resources.

00:44:46.920 --> 00:44:49.300
So there's two directories
to distinguish those.

00:44:49.350 --> 00:44:51.360
On an application server,
when you have a split install

00:44:51.360 --> 00:44:54.360
where there's an app server
and there's a web server,

00:44:54.620 --> 00:44:57.700
those directories will have
very different contents.

00:44:57.730 --> 00:45:01.500
If it's one and the same machine,
it's going to be one and the same.

00:45:03.120 --> 00:45:06.490
Did you have enough of this?

00:45:06.570 --> 00:45:07.440
All right.

00:45:07.520 --> 00:45:14.020
The last part of today's presentation
will be the custom WAP palettes.

00:45:14.080 --> 00:45:17.320
And the good news is-- this is
the only slide for that topic.

00:45:17.370 --> 00:45:21.060
It's the good news for me,
because then I can retire.

00:45:21.130 --> 00:45:24.070
What are WAP palettes?

00:45:24.370 --> 00:45:29.690
This is one of those other new features
in WebObjects Builder for WebObjects 5.

00:45:29.740 --> 00:45:32.630
You can customize palettes in WAP.

00:45:32.880 --> 00:45:33.990
It's very easy now.

00:45:34.000 --> 00:45:37.350
It's just drag and
drop like it should be.

00:45:37.400 --> 00:45:41.800
And you can use it to store components,
reusable components.

00:45:41.870 --> 00:45:47.040
So for instance, if you are a developer,
a freelance person,

00:45:47.040 --> 00:45:49.830
and you want to reuse your components
for many different clients,

00:45:49.970 --> 00:45:53.270
you just create a palette and
drags-- drop stuff from it.

00:45:53.340 --> 00:45:56.820
If you're a company who wants
to share one of the same look

00:45:56.890 --> 00:45:59.900
and feel of components across
many different products,

00:45:59.960 --> 00:46:00.860
you do the same.

00:46:00.880 --> 00:46:04.560
You create a new palette,
and then you can use the same components

00:46:04.560 --> 00:46:08.910
over and over in all of your apps
to assure the same look and feel.

00:46:09.570 --> 00:46:14.430
So for the last time, Tom, show us.

00:46:14.460 --> 00:46:17.010
So here we are at the last demo.

00:46:17.100 --> 00:48:06.300
[Transcript missing]

00:48:06.830 --> 00:48:08.640
That's the whole wizardry behind it.

00:48:08.640 --> 00:48:11.040
That's why it's now called assistants.

00:48:11.040 --> 00:48:14.880
Yes, that's why.

00:48:15.360 --> 00:48:17.510
Okay,
so we're going to create a new palette.

00:48:17.510 --> 00:48:22.460
And actually, a lot of this code has been
reworked for this release.

00:48:22.900 --> 00:48:27.000
You can drag and drop.

00:48:27.000 --> 00:48:30.900
And it actually saves a little image
of the HTML that you've dragged.

00:48:30.900 --> 00:48:34.540
And you can resize that
to your heart's content.

00:48:35.710 --> 00:48:38.420
At this point,
I think that the feature request would

00:48:38.420 --> 00:48:40.940
be to make it proportional resizing.

00:48:40.940 --> 00:48:46.240
It kind of looks...
Proportional... Let's see,

00:48:46.240 --> 00:48:47.700
the shift key?

00:48:47.700 --> 00:48:48.600
No.

00:48:48.600 --> 00:48:52.140
Yes, that's... But then again,
you should know what you dragged

00:48:52.140 --> 00:48:52.140
there in the first place,
so...

00:48:54.200 --> 00:48:55.200
Let's see.

00:48:55.200 --> 00:48:57.540
Okay,
so now I wanted to show you a custom

00:48:57.570 --> 00:49:01.200
element that we've added that we're
going to drag into our application.

00:49:01.200 --> 00:49:03.900
So we'll put it somewhere
under the moose.

00:49:03.920 --> 00:49:04.890
Get rid of the moose.

00:49:04.900 --> 00:49:05.490
It's shedding.

00:49:05.500 --> 00:49:06.490
You don't like the moose?

00:49:06.510 --> 00:49:08.990
Yeah, well... Do you want to
put it on the palette?

00:49:09.040 --> 00:49:09.470
No.

00:49:09.520 --> 00:49:10.500
We'll do that later.

00:49:10.500 --> 00:49:14.990
We could put the moose on the palette,
should we choose.

00:49:15.080 --> 00:49:20.490
Okay, so we're dragging in
a custom search panel,

00:49:20.490 --> 00:49:22.620
and it's going to require
its own framework,

00:49:22.620 --> 00:49:26.500
which has some of the
GIF resources that it requires.

00:49:26.510 --> 00:49:29.520
So we drag that in, and we...

00:49:30.370 --> 00:49:35.800
Wire it up to the display group after
moving everything out of the way.

00:49:39.510 --> 00:49:40.490
Okay, so let's see.

00:49:40.500 --> 00:49:41.830
So it's Play Group.

00:49:41.850 --> 00:49:49.800
We want to search on movie title,
so we bind that to the search field.

00:49:49.820 --> 00:49:57.760
And when we click search,
we want it to requalify the data source.

00:49:57.760 --> 00:49:59.590
Action.

00:50:06.790 --> 00:50:09.600
This is the riskiest
part of all the demos.

00:50:09.600 --> 00:50:16.100
Relaunch the application.

00:50:38.600 --> 00:50:41.540
I forgot one step,
but that's okay because I can fix it

00:50:41.540 --> 00:50:44.200
using the power of rapid turnaround.

00:50:44.200 --> 00:50:52.120
I was supposed to paste all
of this stuff into here.

00:51:00.320 --> 00:51:01.300
There we go.

00:51:01.300 --> 00:51:07.460
So we've added a search panel and an
Aqua look and feel to our component,

00:51:07.460 --> 00:51:11.300
all by just dragging in a--
I don't know if you can call it.

00:51:14.900 --> 00:51:16.900
concludes the palette demo.

00:51:16.920 --> 00:51:17.890
Doesn't it?

00:51:17.900 --> 00:51:19.900
Tom,
you did really well in all four demos,

00:51:19.900 --> 00:51:22.900
even though you wouldn't
be up even at this time.

00:51:23.100 --> 00:51:24.960
No.

00:51:25.280 --> 00:51:28.520
Well, this kind of brings us to an end.

00:51:28.590 --> 00:51:32.480
I think the whole presentation
is like five minutes too short,

00:51:32.520 --> 00:51:36.970
because I guess I forgot
half of the stuff.

00:51:38.280 --> 00:51:42.550
To summarize, in short,
Project Builder is the core

00:51:42.610 --> 00:51:44.360
of WebObjects 5 development.

00:51:44.520 --> 00:51:47.200
Pretty much everything
revolves around it.

00:51:47.200 --> 00:51:54.190
It's in constant communication with
all of other WebObjects-specific tools.

00:51:54.640 --> 00:51:59.450
You have to use different build targets
for different parts of your project,

00:51:59.520 --> 00:52:01.440
for different files.

00:52:01.440 --> 00:52:05.070
As I said, images are the most likely
candidate to be one or the other,

00:52:05.190 --> 00:52:06.230
sometimes even both.

00:52:06.270 --> 00:52:07.710
Otherwise, it's more clear-cut.

00:52:07.760 --> 00:52:10.740
Components are always app server.

00:52:10.740 --> 00:52:13.740
Static stuff is pretty
much always web server.

00:52:13.740 --> 00:52:19.730
And different build styles to
finally deploy your project.

00:52:19.730 --> 00:52:22.450
It's in the last part when
you're really done with it,

00:52:22.520 --> 00:52:27.480
when you want to go to final testing,
you have to invoke those build styles on

00:52:27.480 --> 00:52:31.350
the command line because currently there
is no support for that from the IDE.

00:52:31.400 --> 00:52:38.170
And also you have to explicitly name
both build styles "deployment" and "web

00:52:38.170 --> 00:52:43.300
server." We are aware that that probably
could be optimized in the next release.

00:52:43.610 --> 00:52:48.000
At this point, I would like to invite you
to the WebObjects lab that

00:52:48.000 --> 00:52:49.700
closes in a few hours.

00:52:50.040 --> 00:52:54.300
And of course, do vote for WebObjects as
the coolest web server,

00:52:54.350 --> 00:52:56.220
because it is.

00:52:56.260 --> 00:52:58.320
App server, excuse me.

00:52:58.330 --> 00:53:02.220
And the roadmap is kind of short,
since there's not that much

00:53:02.640 --> 00:53:03.950
time left in this week.

00:53:04.030 --> 00:53:06.980
We have WebObjects security.

00:53:07.010 --> 00:53:09.860
Then we have optimizing
WebObjects applications.

00:53:09.900 --> 00:53:12.690
That's a pretty interesting talk as well.

00:53:12.740 --> 00:53:17.450
And I think you will want to voice
feedback in the feedback session.

00:53:17.930 --> 00:53:19.280
Who to contact?

00:53:19.510 --> 00:53:21.060
My boss, Tony.

00:53:21.130 --> 00:53:24.280
She's at WebObjects@apple.com.

00:53:24.320 --> 00:53:27.080
So is Bob Frazier,
who is our marketing person.