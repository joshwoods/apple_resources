WEBVTT

00:00:02.260 --> 00:00:07.380
Hello.

00:00:07.410 --> 00:00:08.840
My name is Eric Blaanpie.

00:00:08.840 --> 00:00:11.810
I'm a member of the QuickTime team,
the interactivity group.

00:00:11.820 --> 00:00:15.700
I'm going to talk to you about what
we've got going on in interactivity.

00:00:18.210 --> 00:00:23.300
First off, we'll go into what we're
doing in interactivity.

00:00:23.300 --> 00:00:25.650
A little later on, we'll talk more about
the really new stuff.

00:00:25.780 --> 00:00:30.100
When we talk about interactivity
in terms of QuickTime,

00:00:30.100 --> 00:00:34.800
we're talking about the ability to
provide a much more active viewing

00:00:34.800 --> 00:00:40.670
experience than what you'd get in a TV or
a linear video or a stream or something.

00:00:43.230 --> 00:00:46.310
Interactive movies tend to hold
the user's attention in ways

00:00:46.310 --> 00:00:48.080
that some other things don't.

00:00:48.980 --> 00:00:52.090
Interactivity is a great teaching tool.

00:00:52.090 --> 00:00:55.280
People get their hands on the
samples and examples and whatnot.

00:00:55.280 --> 00:01:00.540
QuickTime interactive movies have
a great advantage of playing the

00:01:00.700 --> 00:01:03.670
same on whichever platform you want.

00:01:03.690 --> 00:01:04.860
You've got a self-contained thing.

00:01:04.860 --> 00:01:07.340
You're not relying on the
JavaScript interpretation in

00:01:07.340 --> 00:01:10.060
this or that browser on this
or that platform or anything.

00:01:10.060 --> 00:01:11.980
It's a single movie.

00:01:13.210 --> 00:01:14.930
Um,

00:01:15.090 --> 00:01:18.880
Interactivity provides a great way
to customize the user experience,

00:01:18.880 --> 00:01:20.300
including branding and whatnot.

00:01:20.300 --> 00:01:25.070
In many cases,
as you'll see as we go on in this talk,

00:01:25.070 --> 00:01:28.100
we're talking about QuickTime's
great strengths for integrating

00:01:28.220 --> 00:01:29.500
various kinds of media.

00:01:29.500 --> 00:01:33.150
Many other companies do some of
the kinds of media that we do,

00:01:33.300 --> 00:01:36.540
but nobody lets you throw it
all together into really rich,

00:01:36.540 --> 00:01:39.640
well-combined,
almost like little applications.

00:01:41.720 --> 00:01:43.420
Finally,
Wired Actions are a big key to what

00:01:43.420 --> 00:01:45.180
goes on in QuickTime interactivity.

00:01:45.230 --> 00:01:49.090
The Wired Actions are the way
that we let you hook up and

00:01:49.320 --> 00:01:55.190
manipulate the various properties
of any kind of QuickTime media.

00:01:55.860 --> 00:01:58.380
We talk about media integration.

00:01:58.380 --> 00:02:01.940
We have basically a few very
interactive track types that you

00:02:01.940 --> 00:02:03.900
rely on for most interactive movies.

00:02:03.980 --> 00:02:09.170
The sprite track is for bitmap images
that are used as sprites and they can

00:02:09.170 --> 00:02:12.980
be animated various ways and they also
can have wired actions put on them to

00:02:12.980 --> 00:02:14.760
turn them into buttons or whatever.

00:02:14.760 --> 00:02:19.250
QuickTime VR is interactive
in that you can,

00:02:19.250 --> 00:02:21.440
I mean, it's all about what
the user does with it,

00:02:21.450 --> 00:02:22.760
panning it around and zooming it.

00:02:22.760 --> 00:02:26.760
Also, with the hotspots you
can add more wiring.

00:02:26.760 --> 00:02:33.000
And Macromedia Flash provides a
really great way to bring interactive

00:02:33.010 --> 00:02:36.200
movie elements into your movie.

00:02:36.660 --> 00:02:39.820
Although QuickTime's got
plenty of other tracks,

00:02:39.930 --> 00:02:42.190
a few of which I have listed here.

00:02:42.330 --> 00:02:46.520
All of these things can be thrown
together and we have all sorts of

00:02:46.560 --> 00:02:52.750
ways to manipulate their various
properties in the appropriate ways.

00:02:53.230 --> 00:02:56.620
Getting to Wired Actions a bit,
you can sort of think of it

00:02:56.620 --> 00:03:00.900
as QuickTime scripting access,
although it is not a scripting method

00:03:00.900 --> 00:03:06.900
and the application that creates the
Wired Actions can use whatever kind

00:03:06.900 --> 00:03:10.100
of scripting interface it chooses to
and then compile to the Wired Actions.

00:03:10.680 --> 00:03:17.560
For the user,
it's seen as the way to script

00:03:17.560 --> 00:03:17.930
a movie and make it do things.

00:03:18.070 --> 00:03:20.480
Like I said,
we provide access to many of the

00:03:20.480 --> 00:03:24.790
properties of QuickTime media,
track properties for media

00:03:24.790 --> 00:03:28.880
that make sense like sprites,
the individual sprites or whatever.

00:03:28.880 --> 00:03:34.990
And things like VR,
you can set pan angles and all.

00:03:34.990 --> 00:03:38.480
We have actions to
manipulate Flash media.

00:03:38.480 --> 00:03:41.240
And it's a comprehensive growing list.

00:03:41.240 --> 00:03:42.820
We have a lot of stuff.

00:03:42.820 --> 00:03:45.580
It's been in here for a while
and we keep adding to it.

00:03:45.600 --> 00:03:49.370
In fact,
here's a partial list of what we've got.

00:03:49.390 --> 00:03:54.870
The blue ones are the new ones and
there's a few more and still some more.

00:03:54.880 --> 00:03:58.000
If you'd like to be able to read that,
you can go off to the

00:03:58.000 --> 00:04:01.390
developer documentation and
find a readable version.

00:04:01.770 --> 00:04:06.290
Now, what's new?

00:04:06.500 --> 00:04:11.240
Cubic VR shipped with QuickTime 5.

00:04:11.360 --> 00:04:15.390
We also have added Media Skins.

00:04:15.800 --> 00:04:20.740
Macromedia Flash 4 support,
whereas we had three before.

00:04:20.740 --> 00:04:24.390
New Wired Actions to go with a lot
of these things and also do stuff

00:04:24.470 --> 00:04:25.600
that we weren't doing at all before.

00:04:25.600 --> 00:04:29.700
Server Communication via QT lists.

00:04:29.700 --> 00:04:33.050
Oh, we're going to Cubic VR.

00:04:33.050 --> 00:04:35.370
There's more on the other stuff.

00:04:37.580 --> 00:04:40.940
The big deal about Cubic VR,
we've had QuickTime VR for a while,

00:04:40.950 --> 00:04:44.590
but the panoramas didn't let you
look at the ceiling or the floor.

00:04:44.720 --> 00:04:49.360
And if you did a very high field of view,
they were pretty inefficient.

00:04:49.780 --> 00:04:53.360
Important thing to realize by Cubic
VR is that they work just like cylinders.

00:04:53.560 --> 00:04:56.920
Your application doesn't need
to know anything about the fact

00:04:56.940 --> 00:05:01.410
that it's playing a cubic pano
instead of a cylindrical pano.

00:05:01.600 --> 00:06:06.300
[Transcript missing]

00:06:06.480 --> 00:06:09.400
and turn that into Cubic VR movies.

00:06:09.420 --> 00:06:16.260
There's been some third party work
and we have sample code called the

00:06:16.270 --> 00:06:23.540
VRMakePanel library for exporting
Cubic VR movies from your application.

00:06:23.630 --> 00:06:28.030
So let's go over here
and show some Cubic VR.

00:06:28.740 --> 00:06:38.660
We've got a rather fresh topic here,
the Apple Store shot in

00:06:38.660 --> 00:06:41.170
Cubic VR in a case where

00:06:41.900 --> 00:07:00.400
[Transcript missing]

00:07:01.100 --> 00:07:05.460
These two were provided by
Jeannie Fitzgerald of Axis Images.

00:07:05.760 --> 00:07:10.640
And you know, it's got beautiful
high-speed performance.

00:07:10.670 --> 00:07:15.340
It's really slick and you're
completely in the place.

00:07:15.340 --> 00:07:18.060
There's no blocking out there.

00:07:18.100 --> 00:07:20.100
That's it for that demo.

00:07:20.100 --> 00:07:22.100
Go back to slides.

00:07:31.330 --> 00:07:33.450
So, third-party authoring.

00:07:33.610 --> 00:07:38.800
We've got RealViz has got a Stitcher,
which they previously had on Windows.

00:07:38.800 --> 00:07:40.680
They've done an excellent
port of it to the Mac.

00:07:40.740 --> 00:07:43.760
It's working very well on Mac OS X and 9.

00:07:43.760 --> 00:07:47.960
It's in beta right now and
should be shipping quite soon.

00:07:48.560 --> 00:07:54.720
VRWorks has had a tool out for doing all
sorts of VR authoring for a while now.

00:07:55.120 --> 00:08:00.900
Their new version supports Cubic movies
if they've been authored elsewhere to add

00:08:00.910 --> 00:08:04.940
various--put them into multi-node movies,
add hot spots, do things like that.

00:08:05.000 --> 00:08:09.570
And the Squamish Media Group's tools
for doing interesting wired things

00:08:09.660 --> 00:08:13.950
with QuickTime VR movies work just
as well with Cubes and some of them

00:08:13.950 --> 00:08:18.310
have been upgraded to take advantage
of Cubic things like tilt parameters.

00:08:18.560 --> 00:08:23.190
And, like I said,
RealViz is working well on OS X as

00:08:23.190 --> 00:08:26.360
shown in the screenshot there.

00:08:26.360 --> 00:08:31.850
And then we'll go on to Ken Turkowski
who's going to talk about our

00:08:31.980 --> 00:08:35.290
support for adding it to your apps.

00:08:40.420 --> 00:08:41.380
Thank you, Eric.

00:08:41.700 --> 00:08:45.650
How many of you guys out there really
love getting code from the developer CDs,

00:08:45.650 --> 00:08:50.600
trying to get it into your applications,
and get it running and linking?

00:08:51.460 --> 00:08:52.640
I didn't think so.

00:08:52.650 --> 00:08:54.410
It tends to be a lot of work.

00:08:54.560 --> 00:08:57.730
First thing that happens is that
you go into Code Warrior and

00:08:57.730 --> 00:09:00.890
it needs to convert the project
to get it into a newer project.

00:09:00.890 --> 00:09:02.390
Then you're missing some headers.

00:09:02.390 --> 00:09:06.260
And then you have to
go around finding them.

00:09:06.480 --> 00:09:09.890
Well, I hope to change that
experience for you today.

00:09:10.640 --> 00:09:15.080
Sometimes I like to pretend
like I'm a mathematician.

00:09:15.080 --> 00:09:20.490
And one of the things that mathematicians
tend to do is they'll do proofs.

00:09:20.550 --> 00:09:22.580
Proofs of one theorem.

00:09:22.910 --> 00:09:28.900
They'll say theorem 201 is
true by virtue of theorem 200.

00:09:29.150 --> 00:09:33.900
Well, what I want to do for you guys
today is to give you theorem 200

00:09:33.900 --> 00:09:38.890
so that you can go on to 201 and
continue on with your value added.

00:09:38.960 --> 00:09:40.350
Eric Blazik, Professor of Mathematics,
University of Michigan What I'll be

00:09:40.350 --> 00:09:46.050
talking about today is some sample
code that makes cylindrical and cubic

00:09:46.310 --> 00:09:51.720
QuickTime VR panoramas very easily
and something that you could easily

00:09:51.720 --> 00:09:55.200
add to your application even today.

00:09:55.200 --> 00:10:02.240
It takes us sources either G-Worlds,
picture files, or movie files.

00:10:02.580 --> 00:10:05.560
The other thing I'm going to be talking
about today is an application that's

00:10:05.590 --> 00:10:08.770
been built using this sample code.

00:10:09.050 --> 00:10:14.580
This will make Cubic QuickTime VR movies
either from cube faces or from

00:10:14.580 --> 00:10:18.880
equirectangular spherical picked images.

00:10:20.710 --> 00:10:24.370
Now the sample code, as I mentioned,
makes either cylindrical or

00:10:24.370 --> 00:10:26.220
cubic QuickTime VR movies.

00:10:26.300 --> 00:10:27.200
It's library quality.

00:10:27.200 --> 00:10:31.360
By that,
I mean that it has a rich interface

00:10:31.790 --> 00:10:35.130
with enough parameters in there
so that you don't have to actually

00:10:35.130 --> 00:10:36.780
go in and modify that code.

00:10:38.240 --> 00:10:41.380
It's got one header that
you have to interface to.

00:10:41.380 --> 00:10:46.560
You just drop the other
file into your application,

00:10:46.630 --> 00:10:48.550
link, and run.

00:10:48.550 --> 00:10:51.350
It's designed to be usable as is.

00:10:51.440 --> 00:10:54.860
Now here's what the sample
code generally looks like.

00:10:54.860 --> 00:10:57.820
There's a lot of different
kinds of interfaces,

00:10:57.820 --> 00:11:00.480
but they all take the same general form.

00:11:00.500 --> 00:11:05.180
You take a VR movie, picked, or G World,
convert it into a

00:11:05.560 --> 00:11:08.210
QuickTime VR cylinder or G World.

00:11:08.220 --> 00:11:10.880
You can also make a cubic panorama.

00:11:10.880 --> 00:11:14.580
If you happen to be making
a cylindrical panorama,

00:11:14.580 --> 00:11:20.370
you have the choice of either making the
classical style rotated panorama or the

00:11:20.370 --> 00:11:23.690
more modern style non-rotated panorama.

00:11:24.060 --> 00:11:32.150
There is a slight difference in the
performance of the non-rotated panorama

00:11:32.150 --> 00:11:36.200
in our current rendering engine.

00:11:36.200 --> 00:11:38.200
But you can make it either way.

00:11:38.200 --> 00:11:42.050
There's also some code in there
for creating 1.0 panoramas,

00:11:42.280 --> 00:11:46.080
but we don't encourage people
to make those panoramas anymore.

00:11:46.080 --> 00:11:51.080
Now in this interface,
there's basically five parameters.

00:11:51.080 --> 00:11:54.840
The first one is where most
of the complexity is buried,

00:11:54.840 --> 00:11:58.690
and that's where you set the parameters,
the pan, tilt,

00:11:58.770 --> 00:12:02.840
field of view for the initial view,
the minimum, maximum,

00:12:02.840 --> 00:12:04.950
all sorts of things like that.

00:12:05.080 --> 00:12:07.080
The rest of the things are the same.

00:12:08.330 --> 00:12:09.220
You're going to have the sources.

00:12:09.240 --> 00:12:13.240
You're going to have the source
picture or tiles or something,

00:12:13.320 --> 00:12:17.080
the hotspots, the fast start tiles if you
want to include them or not.

00:12:17.080 --> 00:12:20.080
If you don't have them,
you set those to null.

00:12:20.140 --> 00:12:24.080
And then the final thing is where
do you want to save the movie.

00:12:24.950 --> 00:12:29.360
So this is a particularly
simple interface,

00:12:29.420 --> 00:12:31.510
very easy to use.

00:12:32.140 --> 00:12:35.700
And the MakeCubic utility
application was built on top of that.

00:12:36.080 --> 00:12:41.340
This uses that code and
beyond what that has to offer,

00:12:41.340 --> 00:12:43.280
it's added a few additional features.

00:12:43.280 --> 00:12:47.760
It has the ability to convert from
an equirectangular spherical pic.

00:12:47.760 --> 00:12:51.680
Some of you out here may not
necessarily know what that is.

00:12:51.720 --> 00:12:54.760
It's sort of like a Mercator
projection of the Earth,

00:12:54.760 --> 00:12:58.360
where Greenland is huge and the
North Pole is extended to a whole

00:12:58.450 --> 00:13:00.640
line on the top instead of a point.

00:13:02.000 --> 00:13:05.760
There are some stitchers that
produce that as a native output.

00:13:05.770 --> 00:13:12.420
Helmut Dersch's Panorama Tools being one
and RealVis's Stitcher being another.

00:13:12.420 --> 00:13:16.420
I think RealVis will also produce
a Cubic VR movie directly,

00:13:16.420 --> 00:13:16.970
too.

00:13:16.980 --> 00:13:19.610
But regardless,
if you have that equirectangular pic,

00:13:19.610 --> 00:13:21.160
you can convert that easily.

00:13:21.160 --> 00:13:24.330
The other thing that's been
added to this application,

00:13:24.330 --> 00:13:28.760
beyond that which the sample code does,
it will compute an optimum

00:13:29.190 --> 00:13:31.920
minimum and default field of view.

00:13:31.920 --> 00:13:37.110
Now, what do we mean by an
optimum field of view?

00:13:37.240 --> 00:13:43.160
I consider some optimum to be
when there's no pixel zooming.

00:13:43.330 --> 00:13:46.480
So if you have one-to-one pixel zooming,
that's sort of like one optimum.

00:13:46.480 --> 00:13:51.310
It's one place where you can
get the maximum resolution

00:13:51.310 --> 00:13:54.690
and the maximum field of view,
too.

00:13:54.760 --> 00:14:02.940
The next thing that's added in
that application is that preview is

00:14:02.960 --> 00:14:10.680
generated to be independent of the
resolution of the original panorama.

00:14:10.840 --> 00:14:15.450
So if you have an extremely
high resolution panorama,

00:14:15.540 --> 00:14:21.070
such as that made by the Panoscan camera,
you don't necessarily want to have

00:14:21.250 --> 00:14:24.880
a panorama that only has one quarter
of the resolution for your preview.

00:14:24.880 --> 00:14:26.470
You want to have something much smaller.

00:14:26.770 --> 00:14:31.280
So here you get to actually
choose what the resolution is,

00:14:31.440 --> 00:14:31.910
totally independent of the resolution.

00:14:31.980 --> 00:14:38.960
Now, VRMakePano has some functions that
we don't make available in MakeCubic.

00:14:38.960 --> 00:14:43.270
First of all,
it won't make cylindrical panoramas.

00:14:43.420 --> 00:14:46.200
This is an application that's
just made for making cubics,

00:14:46.330 --> 00:14:47.440
so we aren't including that.

00:14:47.520 --> 00:14:52.760
The other thing is that it doesn't
allow you to make URL hotspots,

00:14:53.000 --> 00:14:55.600
only undefined hotspots that
you would then later have

00:14:55.600 --> 00:14:57.140
to define in your HTML code.

00:14:57.240 --> 00:15:00.100
But if you want to make
your own application out of

00:15:00.180 --> 00:15:02.920
the VRMakePano sample code,
you can do that,

00:15:02.920 --> 00:15:07.000
and you can have URL access to that.

00:15:07.720 --> 00:15:11.070
So now I'd like to go to
demo machine number two and

00:15:11.200 --> 00:15:16.170
demonstrate the MakeCubic software.

00:15:18.570 --> 00:15:23.680
This has been recently
carbonized so it can run on OS X.

00:15:24.980 --> 00:15:27.200
As well as OS 9 and 8.

00:15:27.200 --> 00:15:30.900
Now, there's really just two
menu selections here.

00:15:30.900 --> 00:15:34.800
One of them is the Convert menu,
and that's the one where you'd

00:15:34.800 --> 00:15:35.870
be doing most of your work.

00:15:35.890 --> 00:15:37.450
There's two sections to it.

00:15:37.920 --> 00:15:40.580
There's the
Source File Specification on top,

00:15:40.580 --> 00:15:43.710
and then there's the
Movie Settings Specification

00:15:43.890 --> 00:15:45.000
on the bottom.

00:15:45.380 --> 00:15:49.080
So first, let's choose a panorama.

00:15:49.380 --> 00:15:53.800
I'm going to choose a
panorama right here,

00:15:54.180 --> 00:15:59.110
which was,
this is an equirectangular spherical pic,

00:15:59.110 --> 00:16:03.380
which was made by
Dennis Glickman in France.

00:16:03.380 --> 00:16:06.560
And we'll open that up,
have that selected.

00:16:06.560 --> 00:16:09.160
You'll see it appears right there.

00:16:09.160 --> 00:16:11.600
We can change the compression settings.

00:16:11.600 --> 00:16:17.390
I usually like to set this
to... I usually like to set it

00:16:17.390 --> 00:16:21.280
to 40%, but 39 is close enough.

00:16:22.210 --> 00:16:29.240
We can choose to get grayscale for
the preview or blur the preview.

00:16:29.240 --> 00:16:32.270
Now notice over here,
this section here for generating

00:16:32.270 --> 00:16:35.070
the preview says pixels per degree.

00:16:35.100 --> 00:16:41.130
Some people with panoramas, they'll say,
"Oh, I have a 10,000 pixels

00:16:41.290 --> 00:16:44.200
per inch panorama." Well,
pixels per inch doesn't make

00:16:44.200 --> 00:16:45.100
any sense for a panorama.

00:16:45.100 --> 00:16:48.080
What really matters is
the pixels per degree.

00:16:48.080 --> 00:16:50.780
And as it turns out,
pixels per degree happens to be

00:16:50.780 --> 00:16:55.100
directly proportional to the focal
length of the lens that you use.

00:16:55.210 --> 00:16:56.780
So here we specify that.

00:16:56.780 --> 00:17:00.730
That can be either an integral
number like 1 or a fractional

00:17:00.730 --> 00:17:03.100
number like .7 or whatever.

00:17:03.100 --> 00:17:06.930
I tend to like something
between 1/2 and 1.

00:17:07.100 --> 00:17:09.180
So we'll generate this.

00:17:09.180 --> 00:17:12.840
Let's not blur it and
make a grayscale version.

00:17:13.100 --> 00:17:15.080
I don't have a hotspot.

00:17:15.280 --> 00:17:16.060
File for this.

00:17:16.060 --> 00:17:17.100
So we won't select that.

00:17:17.100 --> 00:17:22.100
Down on the bottom,
we can select our default pan and tilt.

00:17:22.100 --> 00:17:24.750
So this would be the
default pan and tilt.

00:17:25.300 --> 00:17:27.200
This is the pan angle.

00:17:27.200 --> 00:17:30.550
Here's a default tilt angle.

00:17:30.550 --> 00:17:34.780
And for the field of view, over here,
this has been automatically

00:17:34.780 --> 00:17:40.000
computed based on the window size
and the resolution of the panorama.

00:17:40.000 --> 00:17:44.840
That can be overridden by clicking off
this optimal FOV for the window size.

00:17:44.860 --> 00:17:50.960
So if we change the window size to be,
say, square, 480,

00:17:50.960 --> 00:17:54.880
you should see the field of view change.

00:17:55.200 --> 00:17:59.140
And what that's trying to do is to set
the field of view so that your zooming

00:17:59.320 --> 00:18:05.310
is going to be exactly 1:1 on the
pixels for the default field of view.

00:18:05.730 --> 00:18:11.150
And for the minimum field of view,
that will be 2:1.

00:18:11.930 --> 00:18:17.010
So, another feature that's
over here is Tiling.

00:18:17.460 --> 00:18:21.160
Now, a lot of you are familiar with
cylindrical panoramas where you

00:18:21.160 --> 00:18:28.140
can specify the tiling to be 24
by 1 or 48 by 4 or something.

00:18:28.140 --> 00:18:31.400
We can do a similar sort of
thing with cubic panoramas,

00:18:31.510 --> 00:18:36.680
only this tiling specifies the number
of tiles to be used on each face.

00:18:36.780 --> 00:18:44.040
Here we can click the auto tile and in
this case it likes it as a 1 by 1 tiling,

00:18:44.040 --> 00:18:45.530
so we'll just go with that.

00:18:45.600 --> 00:18:49.500
But we could change it
to 2 by 1 or whatever.

00:18:50.110 --> 00:18:52.680
Anyway, without further ado,
let me make this panorama.

00:18:52.840 --> 00:18:57.760
It automatically chooses
a file name for me.

00:18:57.760 --> 00:18:59.530
I can override that if I like.

00:18:59.960 --> 00:19:02.800
And here it's converting
that equirectangular to each

00:19:02.920 --> 00:19:03.760
of the faces at the moment.

00:19:03.760 --> 00:19:06.750
Pretty soon it will flash by the print.

00:19:06.760 --> 00:19:10.910
So, we have the preview track and then
the regular track and hopefully in

00:19:10.910 --> 00:19:14.710
this window we now have a panorama.

00:19:14.810 --> 00:19:17.760
This is tilted 50 degrees up, zoomed in.

00:19:17.760 --> 00:19:21.250
This is at the optimum resolution
so that if we zoom in anymore we're

00:19:21.400 --> 00:19:23.760
going to see the pixels blow up.

00:19:23.760 --> 00:19:26.760
But it's limited to be 2 to 1.

00:19:27.340 --> 00:19:31.150
Now, inside Make Cubic,

00:19:32.900 --> 00:19:34.800
The first thing you need to
do is set your preferences.

00:19:34.970 --> 00:19:40.530
You can set your preferences
for what you'd like your

00:19:40.530 --> 00:19:43.140
compression parameters to be.

00:19:43.140 --> 00:19:46.800
You can set what the optimal
field of view would be.

00:19:46.800 --> 00:19:50.220
So if you don't like 2:1 for minimum,
you can change that so it's

00:19:50.220 --> 00:19:51.800
automatically set that way.

00:19:51.800 --> 00:19:53.630
And there's a number of other
parameters you can set as well.

00:19:53.800 --> 00:19:58.450
So let me show you a
different kind of panorama,

00:19:58.470 --> 00:20:01.280
one that's made from faces.

00:20:01.650 --> 00:20:07.970
So here I have a number of faces,
six faces of a panorama that was

00:20:08.110 --> 00:20:11.190
captured by Janie Fitzgerald.

00:20:12.280 --> 00:20:15.910
and notice how that appears over here.

00:20:15.910 --> 00:20:19.400
The program has parsed this to
determine what's similar between

00:20:19.400 --> 00:20:22.200
the file names so it doesn't
take up a lot of space over here.

00:20:22.310 --> 00:20:27.360
I do happen to have a hotspot
set of faces over here too,

00:20:27.360 --> 00:20:29.490
so we will select those as well.

00:20:29.650 --> 00:20:33.120
You can see the faces are selected.

00:20:35.850 --> 00:20:45.040
And maybe I'll make this
to be 640 by 480 instead.

00:20:45.400 --> 00:20:46.260
And leave that like that.

00:20:46.370 --> 00:20:49.000
So now, when this creates it,
it will automatically

00:20:49.000 --> 00:20:50.730
suggest a file name for me.

00:20:51.080 --> 00:20:54.910
Reading all the picture files in,
creating everything,

00:20:54.980 --> 00:21:00.310
there is the freshly made panorama.

00:21:01.100 --> 00:21:08.280
Very easy to use, very powerful,
and it's free.

00:21:08.840 --> 00:21:12.770
So I'd like to go back to the slides now.

00:21:19.350 --> 00:21:22.430
With a message,
it's easy to make your application

00:21:22.890 --> 00:21:26.300
write QuickTime VR files,
either cylindrical or cubic panoramas.

00:21:26.300 --> 00:21:32.300
You can download VRMakePano.c
code this afternoon,

00:21:32.330 --> 00:21:35.300
link it in with your application tonight,
and ship it tomorrow.

00:21:35.300 --> 00:21:39.260
So I'd like to return
the presentation to Eric.

00:21:45.620 --> 00:21:52.600
Okay, Media Skins,
an exciting new QuickTime 5 feature.

00:21:52.880 --> 00:21:56.410
The essential idea behind a
Media Skin is it lets you have

00:21:56.450 --> 00:21:58.840
an arbitrarily shaped movie.

00:21:59.160 --> 00:22:03.530
The big deal here is that we're
skinning the media and not the player.

00:22:03.530 --> 00:22:06.770
We hear a lot of talk about
skins in various applications,

00:22:06.890 --> 00:22:09.420
but by skinning the
media and not the player,

00:22:09.420 --> 00:22:13.690
it means that your content is
customized so that every time it plays,

00:22:13.690 --> 00:22:16.950
regardless of how the user has
their QuickTime player set up,

00:22:16.950 --> 00:22:18.510
it's going to look the same way.

00:22:18.510 --> 00:22:22.670
Your message, your branding, whatever,
travels with the media.

00:22:22.670 --> 00:22:26.460
And if you make a change and next week
you want it to be a little bit different,

00:22:26.460 --> 00:22:28.640
you just change the movie
file and it's different Again,

00:22:28.640 --> 00:22:32.500
you don't have to get anybody to
download a skin for the player.

00:22:32.860 --> 00:22:35.940
It provides a great branding opportunity.

00:22:35.980 --> 00:22:38.800
Whatever goes with your
media is always there.

00:22:38.970 --> 00:22:42.670
And beyond the arbitrary
shape of the movie,

00:22:42.670 --> 00:22:44.930
you've got the full interactive
tool set of QuickTime that we're

00:22:44.970 --> 00:22:48.800
talking about here to make really
intricate and interesting movies.

00:22:48.800 --> 00:22:50.800
And we'll be seeing some examples.

00:22:50.800 --> 00:22:56.220
So we're going to go on to Demo 4.

00:23:05.700 --> 00:23:10.640
Okay, let's see a basic skin movie.

00:23:11.120 --> 00:23:12.940
Here we've got a skin.

00:23:12.940 --> 00:23:15.700
Again, this has branding all over it.

00:23:15.700 --> 00:23:18.880
It's a sprite movie with a video track.

00:23:18.880 --> 00:23:24.000
They've built custom controls in it.

00:23:24.550 --> 00:23:29.360
and every time this movie plays in
whatever version of QuickTime player,

00:23:29.370 --> 00:23:30.200
this is how it's going to look.

00:23:30.290 --> 00:23:36.270
It's a locked and
pre-designed presentation.

00:23:36.910 --> 00:23:44.850
We get a little fancier than that,
or in some ways.

00:23:44.910 --> 00:23:44.960
We've got a...

00:23:46.300 --> 00:23:51.530
There's a skinned movie here
where there's a separate

00:23:51.530 --> 00:23:54.290
navigation bar to allow you to

00:23:55.010 --> 00:23:56.290
Select what movie you want.

00:23:56.300 --> 00:23:58.370
We've got various wired actions going on.

00:23:58.370 --> 00:24:03.100
And then upon clicking on something,
we open a related skinned player

00:24:03.100 --> 00:24:07.090
that obviously goes with it.

00:24:07.370 --> 00:24:13.520
to give you a little more ability
to give your look to your content.

00:24:14.990 --> 00:24:22.320
We'll look at this movie a
little more a little later on.

00:24:23.530 --> 00:24:26.780
So that's it for the
demos on skins just now.

00:24:26.780 --> 00:24:29.090
Let's go back to slides.

00:24:31.900 --> 00:25:55.500
[Transcript missing]

00:25:57.110 --> 00:26:03.000
The new wired actions,
we've got all sorts of stuff going on.

00:26:03.110 --> 00:26:08.270
Text tracks have gained a lot
of interactivity in QuickTime 5.

00:26:08.410 --> 00:26:11.930
We can take user input,
we can have them be

00:26:12.240 --> 00:26:16.350
manipulated via scripts,
we can enter text,

00:26:16.390 --> 00:26:22.560
we can trap the key entry
much better than ever before,

00:26:22.560 --> 00:26:26.610
so you can do a combination of
keyboard entry from the user

00:26:26.700 --> 00:26:29.060
as well as script-based stuff.

00:26:29.060 --> 00:26:35.760
We've got a lot of actions for setting
the styles and the fonts and the colors

00:26:35.760 --> 00:26:39.210
and hypertext colors and whatnot.

00:26:39.210 --> 00:26:44.480
Text tracks are very
interactive now in QuickTime 5.

00:26:44.760 --> 00:26:50.300
We have some new application messages,
which primarily are seeing

00:26:50.300 --> 00:26:54.050
use in QuickTime Player,
but these are not specifically

00:26:54.050 --> 00:26:57.880
targeted just towards QuickTime Player.

00:26:57.880 --> 00:27:01.280
Basically,
the wired action is a simple thing

00:27:01.280 --> 00:27:05.470
which says send the app message with a
number to say which app message it is.

00:27:05.490 --> 00:27:08.580
The ones that make a big difference
to the content authoring community,

00:27:08.590 --> 00:27:13.470
especially once we've got skins out,
are the enter and exit full screen,

00:27:13.470 --> 00:27:16.620
which people wanted a lot,
and the close window,

00:27:16.620 --> 00:27:18.960
that's the one that has
lots to do with skins.

00:27:18.960 --> 00:27:22.120
By the time you get rid of
the OS's window controls,

00:27:22.180 --> 00:27:26.750
you've got to start adding some
in your own interface that you're

00:27:26.790 --> 00:27:31.320
building as a content creator,
so we've got that.

00:27:31.320 --> 00:27:34.560
As an application developer,
you could easily take advantage of this.

00:27:34.560 --> 00:27:37.600
You could pass different numbers
than what we've got and have

00:27:37.600 --> 00:27:39.040
your application catch them.

00:27:39.130 --> 00:27:42.770
You could also have a user who's going
to be in the middle of the screen,

00:27:42.770 --> 00:27:45.510
and you can just go ahead
and add a number to the app,

00:27:45.520 --> 00:27:47.860
and it will automatically
get a message that

00:27:48.550 --> 00:27:52.500
We've added things for doing
a better job of making movies

00:27:52.500 --> 00:27:54.020
that work well on the web.

00:27:54.060 --> 00:27:59.130
We've got network status and
allowing you to check on whether the

00:27:59.340 --> 00:28:03.960
network's up or whether -- I forget
exactly the number of steps,

00:28:03.960 --> 00:28:08.150
but you can find out before
you make somebody's modem dial,

00:28:08.150 --> 00:28:13.020
you can find out whether or not they're
online or not and ask them if they

00:28:13.020 --> 00:28:16.040
want to go online or things like that.

00:28:16.040 --> 00:28:18.020
And movie load state is very useful.

00:28:18.020 --> 00:28:24.590
We can get all of the different
steps of loading an HTTP movie.

00:28:24.910 --> 00:28:27.690
We can get information about that so
you can know when the movie is ready

00:28:27.690 --> 00:28:33.650
to play all the way or when it's
completely downloaded or whatever.

00:28:33.900 --> 00:28:38.040
With VR, we've added a number of new
things which are pretty cool.

00:28:38.040 --> 00:28:43.010
We basically now have enough
actions in there to reproduce

00:28:43.010 --> 00:28:48.790
the whole controller so when you
create your skin movie or whatever,

00:28:48.790 --> 00:28:50.860
you don't need to worry about
the fact that you don't have the

00:28:50.860 --> 00:28:52.140
VR controller around anymore.

00:28:52.140 --> 00:28:53.460
You can create buttons for all of it.

00:28:53.460 --> 00:28:55.780
Or even if it's not skin,
you want to just do your own artwork,

00:28:55.780 --> 00:28:56.840
we've got that in there.

00:28:56.840 --> 00:29:00.370
They also have the ability to
enable and disable hotspots,

00:29:00.370 --> 00:29:01.440
which is neat.

00:29:01.440 --> 00:29:04.030
You can have any particular
hotspot be turned on or off.

00:29:04.080 --> 00:29:09.120
We've got a bunch of new math functions,
sort of things that some people had

00:29:09.120 --> 00:29:13.280
created creative workarounds for before
but now they're built into QuickTime.

00:29:13.280 --> 00:29:18.410
And just a whole lot of other things,
like setting base and

00:29:18.440 --> 00:29:20.600
treble and it goes on.

00:29:20.600 --> 00:29:24.270
As you saw when I showed this slide
earlier on with the zillions of actions,

00:29:24.270 --> 00:29:27.260
we added something
like 100 new-- actions.

00:29:29.870 --> 00:29:37.470
Mac Media Flash support has been
upgraded in this release to 4.

00:29:37.790 --> 00:29:40.550
Combining Macromedia, Flash,
and Video is a pretty interesting

00:29:40.610 --> 00:29:44.940
thing to do and QuickTime is
really the best way to do it.

00:29:44.940 --> 00:29:49.850
You can layer it up in sophisticated
ways and produce things that

00:29:50.320 --> 00:29:54.060
you couldn't do anywhere else.

00:29:54.060 --> 00:29:57.370
We've got the full MP3 audio support.

00:29:57.640 --> 00:30:02.200
Text input is another approach to having
text input besides our text tracks.

00:30:02.200 --> 00:30:07.200
We've got loading movie
and loading variable.

00:30:07.360 --> 00:30:10.100
A QuickTime movie can have
multiple flash tracks,

00:30:10.100 --> 00:30:13.130
so you can get involved in
intricate things there that again

00:30:13.130 --> 00:30:17.290
are different from what you might
be doing just in Macromedia Flash.

00:30:17.300 --> 00:30:21.940
And we have a number of new wired
actions that are specifically in

00:30:21.940 --> 00:30:24.300
there for working with flash tracks.

00:30:24.300 --> 00:30:29.300
For instance, we can get and set the
text in a flash text field.

00:30:29.300 --> 00:30:35.280
And another really interesting
one is the ability to trigger a

00:30:35.280 --> 00:30:38.590
flash button via a wired action,
enabling you to have very complicated

00:30:38.800 --> 00:30:42.200
and Eric Schultz are the
developers of QuickTime 5.

00:30:42.200 --> 00:30:46.030
The Flash action scripts,
which you trigger from your wired

00:30:46.040 --> 00:30:48.600
content from elsewhere in QuickTime.

00:30:48.600 --> 00:30:51.380
Also,
you can do pretty interesting things

00:30:51.380 --> 00:30:53.910
with Macromedia's Flash tool itself.

00:30:53.990 --> 00:30:57.900
With Flash 4 added export for
QuickTime movies and that still

00:30:57.910 --> 00:31:02.340
works quite well on Flash 5 and there
is no need for an upgrade there to

00:31:02.340 --> 00:31:04.880
handle the new QuickTime 5 support.

00:31:04.880 --> 00:31:08.470
So now we'll look at some
Flash movies on Demo 2.

00:31:24.860 --> 00:31:33.110
Okay, so these are the Swift files here,
the actual exported movies from, um,

00:31:33.600 --> 00:31:41.520
The QuickTime icon is a feature
that allows you to play the game

00:31:41.620 --> 00:31:45.600
directly in the Flash player.

00:31:45.600 --> 00:31:49.630
Drag and drop one of them
onto QuickTime Player.

00:31:49.820 --> 00:31:54.590
The importer creates a new movie
right away with the Flash track.

00:31:54.820 --> 00:32:02.250
This one's got a lot of Flash 4
sort of features like text input,

00:32:02.580 --> 00:32:04.830
and what else?

00:32:04.860 --> 00:32:08.360
It's got some ActionScript stuff
that's doing calculations and

00:32:08.710 --> 00:32:13.180
all based on the input there.

00:32:13.560 --> 00:32:17.300
Right out of the box,
we're taking the Flash 4 content

00:32:17.300 --> 00:32:19.720
and making it work completely.

00:32:19.750 --> 00:32:25.020
Another example of that is
duplicating movie clips.

00:32:25.020 --> 00:32:30.890
Movie clips are Flash's way of having
a hierarchy with unslaved time bases.

00:32:30.890 --> 00:32:35.470
These things just work exactly
the way they do in Flash.

00:32:36.950 --> 00:32:43.810
And Flash 4 added support for making
it really easy to drag elements around,

00:32:43.980 --> 00:32:45.950
so that's working great too.

00:32:48.790 --> 00:32:51.240
Server Communication.

00:32:51.300 --> 00:32:58.420
Well, we've added the QuickTime lists,
QT lists to QuickTime 5.

00:32:58.530 --> 00:33:02.340
QuickTime lists are basically
hierarchical data structures.

00:33:02.340 --> 00:33:06.520
You've got various elements
and attributes which can

00:33:06.520 --> 00:33:08.470
have children and all.

00:33:08.520 --> 00:33:12.900
It resembles XML somewhat,
but it is not XML.

00:33:12.900 --> 00:33:17.690
It's an internal thing.

00:33:17.900 --> 00:33:21.010
You can have multiple
root levels and whatnot,

00:33:21.190 --> 00:33:23.620
which you cannot do in XML.

00:33:23.620 --> 00:33:27.170
There's one QT list per movie or track.

00:33:27.340 --> 00:33:31.580
So you can have multiple
QT lists in a movie.

00:33:31.580 --> 00:33:38.300
We are using XML as an exchange format
to send these to and from servers.

00:33:38.300 --> 00:33:43.070
In order to make them work as XML,
we do add a root element called

00:33:43.070 --> 00:33:48.160
QT list because a QT list structure
in a QuickTime movie can have

00:33:48.230 --> 00:33:49.900
more than one root element.

00:33:51.900 --> 00:33:56.030
It's important to note that QT lists
are very useful for things that are

00:33:56.030 --> 00:33:58.950
not related to server communication.

00:33:58.950 --> 00:34:03.930
I'll show you some stuff
about that in a little bit.

00:34:04.000 --> 00:34:12.590
We have a lot of wired actions in there
to manipulate these to where the list can

00:34:12.590 --> 00:34:14.900
be internal to a movie when you load it.

00:34:15.310 --> 00:34:19.490
You can go on to manipulate
it via wired actions.

00:34:19.520 --> 00:34:20.500
You can load them.

00:34:20.500 --> 00:34:21.700
You can send them back to the server.

00:34:21.700 --> 00:34:24.520
You can walk through the
hierarchy and find out things

00:34:24.560 --> 00:34:26.470
about them and do various stuff.

00:34:26.500 --> 00:34:29.470
Let's have some QT list demo.

00:34:29.500 --> 00:34:35.450
This will be demo 4 again.

00:34:39.200 --> 00:34:44.600
[Transcript missing]

00:34:45.590 --> 00:34:49.660
QT List movie that's not
doing too much in the way of,

00:34:49.660 --> 00:34:52.720
or any external communication.

00:34:52.720 --> 00:34:55.350
We've got this simple
little kaleidoscope movie.

00:34:55.750 --> 00:35:00.990
Now this is just doing fun little
sprite things in order to have something

00:35:00.990 --> 00:35:03.460
to build a list and keep track of.

00:35:03.460 --> 00:35:05.840
You'll see over here
on the right hand side,

00:35:05.840 --> 00:35:07.260
I'm building a list.

00:35:07.260 --> 00:35:12.710
Each thing that gets dragged winds
up adding an element to the list.

00:35:12.850 --> 00:35:16.540
As I change them,
the appropriate elements

00:35:16.540 --> 00:35:17.910
in the list get modified.

00:35:18.030 --> 00:35:23.900
If I reset what's on the screen,
I can read the list and load it.

00:35:23.900 --> 00:35:26.920
The movie does not store
everything in the list.

00:35:26.960 --> 00:35:29.220
It just stores the first
ones that get dragged.

00:35:29.310 --> 00:35:34.520
The rest is generated
from the list instead.

00:35:34.800 --> 00:35:41.480
You can delete them and have it
delete the item from the list.

00:35:42.860 --> 00:35:47.590
So this is sort of an example of where
you might want to do some sort of

00:35:47.590 --> 00:35:50.900
record keeping within a QuickTime movie.

00:35:50.920 --> 00:35:54.940
It's a much simpler way than having a
big long list of variables somewhere

00:35:54.940 --> 00:35:57.040
basically taking care of it for you.

00:35:57.040 --> 00:36:00.820
Oh, and this also,
the text track over here on the

00:36:00.820 --> 00:36:09.670
right is taking the content of the
QuickTime list and using some copied XML

00:36:09.770 --> 00:36:25.180
Create XML from the list and put it
into this text here so that this is

00:36:25.180 --> 00:36:25.180
what it looks like in an XML format.

00:36:25.180 --> 00:36:25.180
And we can scroll the text field now.

00:36:25.180 --> 00:36:25.180
That's another new
QuickTime 5 text action.

00:36:26.200 --> 00:36:30.320
This is a sprite track over
here sending events over to

00:36:30.340 --> 00:36:35.090
tell the text track to scroll.

00:36:36.520 --> 00:36:41.050
Let's go back to the list player again.

00:36:41.050 --> 00:36:43.120
I showed this very briefly
when talking about skins,

00:36:43.260 --> 00:36:50.700
but this guy uses a QuickTime list.

00:36:52.060 --> 00:37:01.590
So there's something called Movie List.

00:37:01.640 --> 00:37:03.270
It's written in XML.

00:37:03.330 --> 00:37:10.160
Each movie in the entry has a
name and has got a description,

00:37:10.160 --> 00:37:14.300
a bit of text, I call it a paragraph,
it didn't wind up that way,

00:37:14.300 --> 00:37:17.580
a pointer to a thumbnail,
and a pointer to the URL.

00:37:20.010 --> 00:37:26.490
The source files that are getting
referenced are all down here.

00:37:26.490 --> 00:37:26.490
When I open the Nav Unit

00:37:27.090 --> 00:37:30.500
It reads in the list and then
goes and finds out what the

00:37:30.700 --> 00:37:32.730
thumbnails were and sticks them in.

00:37:32.740 --> 00:37:37.040
And when someone has read the list,
it's got all that data

00:37:37.040 --> 00:37:40.300
that was in the XML file,
now in a QT list format in the movie.

00:37:40.300 --> 00:37:45.420
And it can use that to find out
what text to put in for the brief

00:37:45.420 --> 00:37:48.260
descriptions for the movies.

00:37:48.260 --> 00:37:52.960
It uses that to know what URL to
call for when we open up the movie.

00:37:52.960 --> 00:37:59.760
And change it.

00:38:01.700 --> 00:38:12.100
[Transcript missing]

00:38:13.130 --> 00:38:16.590
Similarly put together,
which has the right name,

00:38:16.660 --> 00:38:18.640
that's what will get fetched locally.

00:38:18.640 --> 00:38:20.190
This is using a get list.

00:38:20.300 --> 00:38:22.720
And we have a different set of movies,
something a little more up to

00:38:22.720 --> 00:38:26.280
date than what we had before.

00:38:27.150 --> 00:38:30.700
And again, just switching around these
switches which ones they do.

00:38:30.700 --> 00:38:34.740
So this enables you to--

00:38:38.080 --> 00:38:48.090
This enables you to put effort into a
fancy interface movie or set of movies,

00:38:48.090 --> 00:38:51.080
which might not be the sort of
thing which is worth doing every

00:38:51.080 --> 00:38:55.300
week on a website or something,
but you can easily change the content

00:38:55.300 --> 00:38:58.960
that this thing is using without having
anything to do with the QuickTime movie.

00:38:58.960 --> 00:39:01.310
You upload new content,
you edit the QuickTime list,

00:39:01.310 --> 00:39:03.480
and the movie suddenly
behaves differently.

00:39:06.140 --> 00:39:24.010
Eric Blazik,
Ken Turkowski This movie is loading

00:39:24.010 --> 00:39:24.010
a child movie into the window
there to show whichever content.

00:39:24.010 --> 00:39:24.010
There's that close action
I was talking about.

00:39:24.010 --> 00:39:24.010
The other thing you can
do is with that list,

00:39:24.010 --> 00:39:24.010
you can create another interface that...

00:39:24.740 --> 00:39:27.390
reads the same list and
uses it in a different way.

00:39:27.720 --> 00:39:33.700
This is a flash track which has
dumped the names of the movies or the

00:39:33.750 --> 00:39:36.440
descriptions into flash text fields.

00:39:36.490 --> 00:39:39.620
The roll over on the right
is the paragraph rather

00:39:39.620 --> 00:39:41.190
than the brief description.

00:39:41.370 --> 00:39:44.020
And the movies,
rather than using the little

00:39:44.020 --> 00:39:48.190
thumbnails we've used,
the actual rolling movie's in there,

00:39:48.200 --> 00:39:52.120
and it's all being masked nicely
with the flash alpha channels.

00:39:52.120 --> 00:39:54.880
And we can click on
those and we get another,

00:39:56.120 --> 00:40:02.580
a different player which
is related to this one.

00:40:03.660 --> 00:40:07.760
So this is a way to repurpose,
in a way it's repurposing content

00:40:07.800 --> 00:40:11.030
or it's just providing people with
different options for what look

00:40:11.030 --> 00:40:12.860
they want or anything like that.

00:40:12.860 --> 00:40:16.600
It's showing some versatility
in the QT list here.

00:40:16.670 --> 00:40:20.920
Or the approach to making a
movie which relies on lists

00:40:20.920 --> 00:40:23.370
to figure out how it drives.

00:40:25.290 --> 00:40:30.950
I've just come across something
that I didn't talk about before.

00:40:30.960 --> 00:40:32.840
We were talking about new messages.

00:40:33.030 --> 00:40:42.760
We've got the thing for going full
screen and exiting that's in here.

00:40:42.760 --> 00:40:45.800
We've also got the close message.

00:40:46.340 --> 00:40:53.290
Let me show you another Flash movie.

00:40:53.290 --> 00:40:57.310
We've got a Flash track and we've got
some sprite stuff down here that's

00:40:57.370 --> 00:40:58.530
made to look like it goes together.

00:40:58.590 --> 00:41:01.220
We've got editable text in here.

00:41:01.220 --> 00:41:08.570
I'm reading that URL and
using it to load a video.

00:41:09.180 --> 00:41:11.900
We're going to load a movie
into a child movie track here.

00:41:11.900 --> 00:41:14.000
And in fact, that can be local or not.

00:41:14.000 --> 00:41:18.890
We can use a relative URL.

00:41:20.200 --> 00:41:26.200
[Transcript missing]

00:41:27.200 --> 00:41:36.060
and Eric Levy are the developers
who created the new feature

00:41:36.900 --> 00:41:41.270
called the "Scrub" button.

00:41:41.270 --> 00:41:41.270
The "Scrub" bar is used to
set the length of the movie.

00:41:42.320 --> 00:41:46.750
Let's get into another
pretty interesting demo.

00:41:46.750 --> 00:41:52.820
Back to QT List, sorry about that.

00:41:57.710 --> 00:42:02.040
Let's go over to Michael Schaff's
small hand site where we have

00:42:02.050 --> 00:42:06.140
a movie that's up right now.

00:42:06.800 --> 00:42:19.600
[Transcript missing]

00:42:26.010 --> 00:42:30.110
When I enter something,
it is sending it off to a server

00:42:30.410 --> 00:42:35.010
that's at Totally Hip's place.

00:42:35.110 --> 00:42:40.710
Totally Hip, the publisher of LiveStage,
this is built in LiveStage,

00:42:40.720 --> 00:42:42.210
and it will in fact be...

00:42:43.220 --> 00:42:47.000
The source to this will be on
an upcoming LiveStage tutorial.

00:42:47.000 --> 00:42:52.100
We can scrub with the
movable text track here.

00:42:52.100 --> 00:42:59.140
Over here you see the syntax that's being
used to send messages back and forth.

00:42:59.140 --> 00:43:01.070
You see the actual QT list.

00:43:01.070 --> 00:43:05.310
You can change the slider here for how
quickly it goes and talks to the server

00:43:05.310 --> 00:43:08.180
to find out what new messages there are.

00:43:08.180 --> 00:43:10.300
One could imagine going
a lot further with this.

00:43:10.300 --> 00:43:14.620
You could easily build a chat kind
of movie where your video stream is

00:43:14.620 --> 00:43:16.380
on one side and then that's there.

00:43:20.430 --> 00:43:25.500
So that's,
I mean this is the first in a server

00:43:25.630 --> 00:43:27.020
communication demo we have here.

00:43:27.020 --> 00:43:32.100
I mean this one gets into some
pretty interesting options.

00:43:32.120 --> 00:43:39.170
So let's go back to
slides for a little while.

00:43:42.570 --> 00:43:49.280
Integration of media, as I said earlier,
is a really, really big deal with the...

00:43:52.630 --> 00:43:58.600
I must have been somebody out there,
okay.

00:43:58.610 --> 00:44:02.530
Like I said before,
QuickTime does a lot of interesting

00:44:02.530 --> 00:44:05.890
individual things and we even have
competition on some of those things,

00:44:05.970 --> 00:44:13.660
but nobody lets you put it all together
to make these really complicated,

00:44:13.660 --> 00:44:15.760
or not so complicated demos,
but nobody lets you add

00:44:15.760 --> 00:44:15.760
it together the same way.

00:44:16.090 --> 00:44:19.960
These complex movies have such a
power to hold the user's attention.

00:44:19.960 --> 00:44:22.150
You can build quizzes,
you can build games,

00:44:22.160 --> 00:44:26.500
you can do all sorts of things.

00:44:26.500 --> 00:44:28.440
You can wind up with
self-contained interactive

00:44:28.440 --> 00:44:29.990
experiences that play anywhere.

00:44:30.000 --> 00:44:34.100
You can play them in the player,
you can play them in your, in a browser,

00:44:34.100 --> 00:44:37.810
you can play them in your own
application and you can be pretty sure

00:44:37.850 --> 00:44:41.850
that they're going to look the same
all over the place in different places.

00:44:41.850 --> 00:44:45.900
The platform and browser issues
are much less of a deal than other

00:44:45.900 --> 00:44:48.880
ways of doing this sort of thing.

00:44:48.880 --> 00:44:54.120
So now we'll go back into demos and
look at some highly integrated movies.

00:44:54.120 --> 00:44:58.110
This will be on demo 4.

00:45:02.120 --> 00:45:07.000
Uh, okay.

00:45:07.000 --> 00:45:10.770
We've got another demo involving
Janie Fitzgerald's work.

00:45:10.790 --> 00:45:13.970
This is also, uh,
collaborators on this were

00:45:14.360 --> 00:45:17.000
Robert West and Michael Schaff.

00:45:17.000 --> 00:45:24.000
Um, it's Robert's interface, Janie's VR,
and Michael's, uh, wiring.

00:45:24.000 --> 00:45:29.510
We've got rollover buttons here,
a nice skin.

00:45:29.900 --> 00:45:37.280
We've even got some help text
on your hotspots at times.

00:45:37.980 --> 00:45:42.530
This is another movie which will
be put together as a tutorial

00:45:42.660 --> 00:45:44.900
for the new version of LiveStage.

00:45:44.900 --> 00:45:49.900
It will be available on their
CD eventually and for LiveStage 3

00:45:49.900 --> 00:45:53.380
as well as probably on their site.

00:45:55.400 --> 00:46:01.460
We've got a sprite-based compass up here,
which is reading pan angles

00:46:01.840 --> 00:46:04.920
from the movie and updating.

00:46:05.110 --> 00:46:10.370
We've got the sprite layers,
got these buttons which are...

00:46:11.550 --> 00:46:13.870
In some cases,
communicating to the VR and

00:46:13.870 --> 00:46:15.440
telling it to move around.

00:46:15.540 --> 00:46:22.120
We can go full screen.

00:46:23.130 --> 00:46:29.360
The mask that overlays the panorama
is done with a nice alpha channel,

00:46:29.360 --> 00:46:32.310
so it's really smooth and rounded.

00:46:35.800 --> 00:46:40.300
And again,
it's customized the user experience

00:46:40.300 --> 00:46:41.980
to this content completely.

00:46:42.040 --> 00:46:46.160
It's a very appropriate
way to be using this stuff.

00:46:46.900 --> 00:46:49.140
Oh, and there's directional audio.

00:46:49.250 --> 00:46:53.930
Paying attention to the pan
angle for how the audio is doing.

00:46:55.000 --> 00:47:00.880
A very nice, well integrated,
highly interactive experience.

00:47:01.750 --> 00:47:05.290
We do a lot of things,
people do a lot of really

00:47:05.290 --> 00:47:06.940
fascinating things in,
um,

00:47:08.010 --> 00:47:13.440
In the browser,
this is a Greenpeace.org site

00:47:13.450 --> 00:47:18.810
done by EC Media up in Vancouver.

00:47:19.910 --> 00:47:22.280
It's popping different
QuickTime movies into different

00:47:22.280 --> 00:47:23.480
places to all work together.

00:47:27.400 --> 00:47:33.580
We can, we've got a QuickTime VR movie
here that's unwrapped and flat.

00:47:33.590 --> 00:47:37.550
It winds up with a panable, zoomable map.

00:47:37.550 --> 00:47:44.290
And we can look at the map here and find
out where the different hotspots are.

00:47:46.010 --> 00:47:48.110
That sends a message to the
QuickTime movie up here.

00:47:48.130 --> 00:47:54.950
The top half of the browser
window is one movie.

00:47:55.240 --> 00:48:00.100
The bottom half of the control
bar and all is another movie.

00:48:00.280 --> 00:48:03.910
The movie up here is the panorama.

00:48:03.960 --> 00:48:07.200
There's also a picture track there,
which is making these other

00:48:07.200 --> 00:48:10.440
things show up on the side,
the images.

00:48:10.440 --> 00:48:12.080
Let's find another one.

00:48:12.120 --> 00:48:13.180
We click on it.

00:48:13.180 --> 00:48:15.400
We get yet another movie.

00:48:15.400 --> 00:48:18.620
This is all one QuickTime movie.

00:48:18.620 --> 00:48:20.860
You know, HTML here.

00:48:20.860 --> 00:48:23.170
There's a slideshow.

00:48:23.440 --> 00:48:28.580
We can leave it on autoplay or we can
choose which slide we want to look at.

00:48:29.400 --> 00:48:31.640
We can speed up, slow it down.

00:48:31.640 --> 00:48:33.280
The text is drawn with a text track.

00:48:33.280 --> 00:48:35.360
We've got to close here.

00:48:35.360 --> 00:48:39.050
That actually is doing it via
JavaScript so that we can tell

00:48:39.050 --> 00:48:42.260
the browser to close the window.

00:48:42.590 --> 00:48:46.740
And we've got things
like the zoom in and out.

00:48:46.780 --> 00:48:50.640
Oh, and they've got the ever
popular compass down there.

00:48:50.640 --> 00:48:54.680
In this case,
the panning movie is communicating

00:48:54.680 --> 00:48:58.010
with a different movie for the
place where that's going on.

00:48:58.030 --> 00:49:01.960
So you're seeing intermovie communication
between a lot of different movies here,

00:49:02.000 --> 00:49:03.060
which is pretty cool.

00:49:03.060 --> 00:49:10.970
I believe we can jump to
new nodes either via--

00:49:11.500 --> 00:49:33.800
[Transcript missing]

00:49:37.550 --> 00:49:41.930
Another EC Media demo.

00:49:42.140 --> 00:49:48.100
This is sort of a
distance learning example.

00:49:48.160 --> 00:49:53.280
We've got a gentleman here from
Electronic Arts talking about

00:49:53.780 --> 00:49:57.900
the ways that they get their,
they use academic research to

00:49:57.900 --> 00:50:00.270
figure out what to put into their
games and all to get new ideas.

00:50:00.280 --> 00:50:06.200
And he's talking about a topic
in a very general sort of way

00:50:06.320 --> 00:50:11.460
and he'll occasionally talk about
topics which are interesting

00:50:11.460 --> 00:50:14.840
without going into greater detail,
but we can go and click on those

00:50:14.870 --> 00:50:20.620
to get more information about
the topic he's going on about.

00:50:20.620 --> 00:50:23.270
It's got illustrations and text and all.

00:50:23.270 --> 00:50:25.720
And the background movie has paused.

00:50:25.790 --> 00:50:28.520
When we say back,
the background movie picks up right away.

00:50:28.520 --> 00:50:33.120
This is done with...
With QuickTime movie tracks.

00:50:33.190 --> 00:50:37.790
These are movies which are
embedded inside of other movies,

00:50:38.060 --> 00:50:42.860
which makes for a lot of
flexibility in saying,

00:50:42.860 --> 00:50:46.780
figuring out the point that this movie
is playing at doesn't change the point

00:50:46.780 --> 00:50:48.460
that this movie is playing at here.

00:50:48.460 --> 00:50:50.660
There are not two tracks
in the same movie.

00:50:57.730 --> 00:51:02.440
The, uh, and another one from EC Media.

00:51:02.440 --> 00:51:04.010
These guys are very creative,
doing a lot.

00:51:04.040 --> 00:51:07.590
This is an interface built just
about entirely out of Flash.

00:51:07.590 --> 00:51:12.200
The, um,
they've got a lot of rollover stuff here.

00:51:12.200 --> 00:51:15.030
They've got draggable
embedded movie clips and,

00:51:15.030 --> 00:51:19.090
um, the sort of stuff that you can
do with a lot of Flash scripting.

00:51:19.100 --> 00:51:23.100
Uh, and they've got a movie
that's built inside it.

00:51:23.100 --> 00:51:25.820
Um, this movie,
I believe this thing is built

00:51:25.820 --> 00:51:29.600
mostly in Flash with very little,
uh, work from elsewhere.

00:51:29.600 --> 00:51:32.700
And this is obviously linear video,
but you can go and set

00:51:32.700 --> 00:51:35.010
it to play slow motion,
which is extremely

00:51:35.010 --> 00:51:38.100
difficult to do in Flash,
which is a frame-based format

00:51:38.100 --> 00:51:39.100
rather than a time-based one.

00:51:39.100 --> 00:51:42.560
There's no way of saying
play at whatever speed,

00:51:42.570 --> 00:51:46.190
but in QuickTime all you've
got to do is say play at,

00:51:46.190 --> 00:51:48.920
set the rate to .5 or whatever.

00:51:48.920 --> 00:51:48.920
Um, and, uh,

00:51:49.700 --> 00:51:55.780
Meanwhile,
their slick rollover behaviors work

00:51:55.780 --> 00:51:59.720
fine and are uncoupled to the time base
because that is taking advantage of

00:51:59.720 --> 00:52:01.840
some of the really useful Flash aspects.

00:52:01.840 --> 00:52:09.790
And let's look back to talk even
more about the good old list player.

00:52:11.330 --> 00:52:14.220
Just to talk about it in
terms of integration of media,

00:52:14.220 --> 00:52:20.730
this movie here has got

00:52:20.750 --> 00:52:26.040
A sprite layer in the background
which contains the artwork

00:52:26.040 --> 00:52:28.760
and this basic button here.

00:52:28.810 --> 00:52:35.820
It's got a text track down here in this
opening which we use information from the

00:52:35.820 --> 00:52:38.660
rollovers to put the information into.

00:52:38.660 --> 00:52:45.280
And each one of these is a small
child movie which has loaded from

00:52:45.290 --> 00:52:48.480
the direction of the QT list.

00:52:48.480 --> 00:52:52.570
When we click on these,

00:52:53.230 --> 00:52:59.460
We first open up the second
movie with a get URL action and

00:52:59.460 --> 00:53:04.310
then send a message and do a
little inter-movie communication,

00:53:04.310 --> 00:53:07.260
send a message to the movie once it's
open after paying attention to make

00:53:07.260 --> 00:53:11.180
sure it opened up all the way and
tell it what movie it needs to load.

00:53:11.640 --> 00:53:17.740
We also have used a new QuickTime 5
action which lets you check on whether

00:53:17.740 --> 00:53:24.400
a movie is active or not to dim or
highlight the background movies.

00:53:24.400 --> 00:53:28.700
We've got, again,
a wired sprite layer in the

00:53:28.700 --> 00:53:34.340
background to set up the buttons
and whatnot and a movie track

00:53:34.340 --> 00:53:37.600
that's in the foreground here.

00:53:37.600 --> 00:53:43.550
We've also got another hidden
movie track which... is being

00:53:43.550 --> 00:53:45.640
used as a sprite override.

00:53:45.850 --> 00:53:51.180
Any QuickTime sprite can use
any track that's available in

00:53:51.180 --> 00:53:53.640
a movie to override its image.

00:53:53.680 --> 00:53:58.400
In this case,
it would be hard to have the

00:53:58.400 --> 00:54:02.690
perspective of the shadow and all
this stuff be a draggable sprite.

00:54:02.790 --> 00:54:06.690
So what we've done is we've got a...

00:54:07.190 --> 00:54:13.000
A little linear movie of a thumb moving,
which is loaded in a child

00:54:13.000 --> 00:54:19.060
movie and hidden and then
used to override that sprite.

00:54:19.060 --> 00:54:22.660
The beauty of that is that it becomes
time independent of everything else.

00:54:22.660 --> 00:54:28.190
The length of this track does
not have to sync at all with

00:54:28.280 --> 00:54:32.950
the length of this track,
which it's not going to because

00:54:32.950 --> 00:54:32.950
we can change that so often.

00:54:33.570 --> 00:54:35.480
So, yeah,
one of the great things about the movie

00:54:35.480 --> 00:54:44.460
track is to have unslaved time bases,
which don't happen elsewhere.

00:54:47.200 --> 00:54:54.400
[Transcript missing]

00:54:59.600 --> 00:55:01.220
That's unfortunately
sort of winding it up.

00:55:01.380 --> 00:55:05.860
Thank you very much.

00:55:12.510 --> 00:55:15.720
I guess there's a couple of slides left.

00:55:15.720 --> 00:55:22.280
Right, the feedback forum will be
tomorrow afternoon at 3:30.

00:55:22.490 --> 00:55:26.500
We'll be there to hear
everything you've got to say.

00:55:26.970 --> 00:55:27.860
Please do attend.

00:55:27.860 --> 00:55:29.500
We want that input.

00:55:29.500 --> 00:55:31.500
And in the fall,
don't forget QuickTime Live.

00:55:31.500 --> 00:55:34.380
Anyone who's really interested
in QuickTime needs to be there.

00:55:34.380 --> 00:55:38.500
It's got separate tracks for those
interested in API level development,

00:55:38.500 --> 00:55:41.500
content development,
and the marketing sort of issues.

00:55:41.500 --> 00:55:43.190
And it's a really fun event.

00:55:43.200 --> 00:55:44.820
So thanks a lot.