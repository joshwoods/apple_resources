WEBVTT

00:00:03.660 --> 00:00:05.310
Good afternoon.

00:00:05.310 --> 00:00:09.160
Hello and welcome to the
FireWire Mac OS X Overview.

00:00:09.230 --> 00:00:13.290
Today,
we'd like to review the current status of

00:00:13.400 --> 00:00:18.570
the FireWire hardware on the Macintosh,
summarize the functionality

00:00:18.570 --> 00:00:22.430
of FireWire on Mac OS X,
review some recent developer

00:00:22.720 --> 00:00:26.090
products and activities,
review some details regarding the

00:00:26.090 --> 00:00:31.000
FireWire technology specifically,
and touch on 1394b,

00:00:31.040 --> 00:00:33.880
the next generation of FireWire.

00:00:33.990 --> 00:00:35.800
Of course, we'll have some demos too.

00:00:41.560 --> 00:00:44.930
First thing I'd like to touch on
is that FireWire is available on

00:00:45.000 --> 00:00:47.660
100% of the Macintosh platform.

00:00:47.700 --> 00:00:49.690
That's new for this year.

00:00:51.130 --> 00:00:56.530
FireWire is an integral part of the
Macintosh connectivity strategy.

00:00:56.530 --> 00:01:00.470
And if you make a FireWire device,
you can be sure that the Macintosh

00:01:00.470 --> 00:01:04.630
product line will provide ports
for your device to connect to.

00:01:15.150 --> 00:01:17.250
FireWire Hardware Overview.

00:01:17.250 --> 00:01:20.900
All of the products have 400
megabits per second interface,

00:01:21.000 --> 00:01:23.160
two ports on the desktop,

00:01:23.410 --> 00:01:27.560
Those are the iMac, the G4 Tower,
and the Cube.

00:01:27.570 --> 00:01:34.480
And one port on portables,
that's the iBook and the PowerBook G4.

00:01:36.790 --> 00:01:40.140
They all provide cable power,
and that's for giving power

00:01:40.140 --> 00:01:42.840
to hard drives and to hubs.

00:01:43.250 --> 00:01:48.240
and they have the six pin
connector which is easy to use,

00:01:48.370 --> 00:01:52.630
it's very durable, and it's the only one
that provides cable power.

00:01:53.750 --> 00:01:57.470
They're also OpenHCI compliant,
which is the industry standard,

00:01:57.470 --> 00:02:01.300
and implement 1394a,
which is the latest update to the spec,

00:02:01.410 --> 00:02:05.050
including bug fixes and
performance enhancements.

00:02:10.200 --> 00:02:16.430
FireWire on Mac OS X is equivalent
in functionality to Mac OS 9.1.

00:02:16.840 --> 00:02:20.350
including a built-in DV driver
for QuickTime applications,

00:02:20.350 --> 00:02:23.000
DV capture, export, device control.

00:02:23.030 --> 00:02:28.240
And it also includes built-in mass
storage drivers for hard disks,

00:02:28.280 --> 00:02:31.730
MO drives, CD drives.

00:02:35.780 --> 00:02:38.040
The default mass storage
drivers are reliable,

00:02:38.190 --> 00:02:41.710
they provide good performance,
precludes need for implementing

00:02:41.710 --> 00:02:44.000
and installing other
drivers from third parties.

00:02:44.130 --> 00:02:48.330
However, it doesn't preclude third
party developers to write their

00:02:48.330 --> 00:02:54.350
own drivers to add additional
capabilities such as performance or

00:02:54.350 --> 00:02:58.410
encryption of the data on the drive.

00:03:03.950 --> 00:03:07.970
I'd like to spend some time comparing
some terminology of the drivers

00:03:08.080 --> 00:03:10.900
for FireWire on Mac OS 9 and 10.

00:03:10.960 --> 00:03:14.960
Initially there's a driver description
on Mac OS 9 that can be found

00:03:14.960 --> 00:03:17.340
in the driver's code fragment.

00:03:17.390 --> 00:03:20.370
On Mac OS X, that's in the bundle.

00:03:20.430 --> 00:03:25.010
The driver description is used for
driver matching and driver loading.

00:03:28.410 --> 00:03:32.620
The scheduling is very similar
on Mac OS 9 and Mac OS X for

00:03:32.620 --> 00:03:35.310
calling into your driver.

00:03:35.310 --> 00:03:39.620
Mac OS 9 and Mac OS X support
synchronous and asynchronous calls.

00:03:42.340 --> 00:03:46.660
Additionally, on Mac OS X,
the driver framework provides a

00:03:46.790 --> 00:03:49.040
foundation for your driver development.

00:03:49.230 --> 00:03:53.830
Previously on Mac OS 9, USB, SCSI,
FireWire all had their own way

00:03:53.830 --> 00:03:56.200
of driver matching and loading.

00:03:56.230 --> 00:04:00.410
On Mac OS X,
driver matching and loading is based

00:04:00.490 --> 00:04:03.830
on common services provided by I/O Kit.

00:04:09.710 --> 00:04:12.730
So I'd like to go over a few
things that's been happening in the

00:04:12.730 --> 00:04:15.510
FireWire space over the last year.

00:04:15.510 --> 00:04:19.260
There's a whole bunch of new
peripherals in every category.

00:04:19.370 --> 00:04:22.390
A wide range from smart card readers,

00:04:23.040 --> 00:04:28.720
To RAID systems from digital
still cameras to television sets.

00:04:29.280 --> 00:04:32.540
There's an increasing convergence
between computers and consumer

00:04:32.540 --> 00:04:36.550
electronics with respect to FireWire.

00:04:37.370 --> 00:04:42.430
I'd like to note one of the devices on
the screen in the lower left is the Sanyo

00:04:42.430 --> 00:04:47.800
ID Shot that uses SPB-2 via FireWire,
has lots of storage,

00:04:47.940 --> 00:04:53.350
supports video stills and motion video,
and FireWire was chosen since

00:04:53.350 --> 00:04:56.430
it is the best interface
available for this product.

00:05:02.800 --> 00:05:07.250
There are a lot of new mass storage
FireWire devices supporting between 15

00:05:07.250 --> 00:05:12.420
and 20 megabits per second performance
with new devices on the way.

00:05:19.330 --> 00:05:23.700
Additionally,
there are some RAID storage systems.

00:05:23.730 --> 00:05:28.840
These provide effective, convenient,
large-capacity storage systems.

00:05:28.870 --> 00:05:31.680
They're very friendly and
they're very easy to use.

00:05:31.710 --> 00:05:35.740
And it takes advantage of
FireWire's plug-and-play technology.

00:05:41.020 --> 00:05:42.770
There are DVD players.

00:05:42.770 --> 00:05:45.660
This one can hold up to 200 DVDs.

00:05:45.680 --> 00:05:50.320
It's a single highest capacity
storage device and 200 DVDs can

00:05:50.320 --> 00:05:52.260
store well over a terabyte of data.

00:06:00.720 --> 00:06:03.060
There are scanners for FireWire.

00:06:03.280 --> 00:06:05.650
These provide significant
increased performance compared

00:06:05.730 --> 00:06:08.100
to alternative interfaces.

00:06:08.200 --> 00:06:12.330
They can be shared with any
Macintosh on the FireWire bus,

00:06:12.330 --> 00:06:16.080
and all of the legacy
interfaces do not allow this.

00:06:17.240 --> 00:06:20.390
There are a number of interfaces
you can select between for

00:06:20.440 --> 00:06:22.140
your device to support.

00:06:22.320 --> 00:06:26.180
And here are some things to consider
when selecting your device interface.

00:06:26.710 --> 00:06:29.240
If you need more than
a megabyte per second,

00:06:29.340 --> 00:06:31.780
then FireWire is your choice.

00:06:32.090 --> 00:06:35.890
Often, in standard user configurations,
there will be multiple

00:06:35.890 --> 00:06:38.110
devices on the bus,
so you should also consider

00:06:38.520 --> 00:06:42.430
bandwidth headroom for your
device in that scenario.

00:06:42.540 --> 00:06:44.960
Additionally,
if you have a device that requires

00:06:44.970 --> 00:06:51.830
greater than 700k per second throughput,
well, then FireWire is your choice also.

00:06:57.220 --> 00:07:01.940
There's been a good deal of talk
about the Digital Hub concept lately,

00:07:02.030 --> 00:07:07.080
and Apple is very excited about using
the Macintosh as the Digital Hub.

00:07:08.350 --> 00:07:11.380
I'd like to go over some topics
relating FireWire to the digital

00:07:11.400 --> 00:07:15.460
hub and how your device can
benefit from being part of this.

00:07:17.160 --> 00:07:20.930
The Mac is the center of the digital hub,
and FireWire is the

00:07:21.040 --> 00:07:23.110
connectivity for this hub.

00:07:23.990 --> 00:07:28.130
Your devices will play in this
arena if they support FireWire,

00:07:28.130 --> 00:07:33.490
and the applications will benefit
from supporting these devices also.

00:07:35.260 --> 00:07:40.460
Another thing is customers will gain
value with their peripherals because they

00:07:40.460 --> 00:07:45.530
can use them together in conjunction with
the other devices on the FireWire bus.

00:07:53.560 --> 00:07:56.180
I'd like to introduce Eric Anderson,
the manager of the

00:07:56.320 --> 00:07:58.830
FireWire software team,
and we're going to go through

00:07:58.830 --> 00:08:00.920
a couple of performance demos.

00:08:19.330 --> 00:08:23.830
The first thing we'd like to
demonstrate is DV Capture on OS X.

00:08:23.870 --> 00:08:28.020
It's a pretty good real-time
example of performance from OS X of

00:08:28.020 --> 00:08:30.620
the FireWire software stack.

00:08:44.540 --> 00:08:48.950
So what you're seeing is Play-Through
right now on the computer,

00:08:48.950 --> 00:08:51.430
and let's do a little bit of a capture.

00:08:52.510 --> 00:08:57.390
It's 30 frames per second
frame-accurate capture.

00:08:57.400 --> 00:09:06.600
So we'll select that clip,
do a little playback.

00:09:12.330 --> 00:09:14.350
You can see how nice and smooth it is.

00:09:14.380 --> 00:09:19.010
We can also do full screen if you
want to see the real performance.

00:09:27.310 --> 00:09:28.580
This is new since last year.

00:09:28.580 --> 00:09:31.740
Last year in Mac OS X we
couldn't show you any kind of DV.

00:09:31.740 --> 00:09:34.720
Now we have iMovie running just like
nothing unusual would happen to it.

00:09:41.950 --> 00:09:45.930
Not that anything
unusual did happen to it.

00:09:46.070 --> 00:09:52.400
The next demo we'd like to show is
performance to an external FireWire disk.

00:09:52.490 --> 00:09:54.600
It's about 15 megabytes per second.

00:09:54.610 --> 00:09:58.180
Last year at this time we had
an experimental disk driver.

00:09:58.190 --> 00:10:07.010
Now we are shipping default disk
drivers in Mac OS X that are reliable

00:10:07.010 --> 00:10:08.680
and provide good performance.

00:10:08.680 --> 00:10:12.820
And we'll see that right now.

00:10:12.870 --> 00:10:15.940
This is copying from the
external drive onto the internal.

00:10:27.650 --> 00:10:29.720
That's it.

00:10:29.760 --> 00:10:36.590
That was 129 megabytes.

00:10:36.620 --> 00:10:37.470
That's the end of the demo.

00:10:37.470 --> 00:10:39.560
Let's go back to the slides.

00:10:54.830 --> 00:10:56.980
So many choices.

00:10:57.310 --> 00:11:03.460
Okay, I'm going to tell you now a little
more detail about FireWire technology.

00:11:03.560 --> 00:11:05.000
This is the introductory session.

00:11:05.000 --> 00:11:07.770
We have a whole other session
tomorrow at this time about

00:11:07.770 --> 00:11:09.790
programming for FireWire on Mac OS X.

00:11:09.830 --> 00:11:14.380
I'm just going to cover some
of the basics that everybody

00:11:14.380 --> 00:11:14.380
needs to know about FireWire.

00:11:17.000 --> 00:11:20.560
What is, I'm sure most of you know this,
but what is FireWire?

00:11:20.560 --> 00:11:21.890
Why do we call it a serial bus?

00:11:22.010 --> 00:11:24.550
What's IEEE 1394?

00:11:24.840 --> 00:11:30.620
IEEE 1394 is an industry standard
that specifies this technology.

00:11:30.660 --> 00:11:36.040
FireWire is just a name that
Apple uses when we talk about 1394.

00:11:36.070 --> 00:11:39.000
It's a little easier
to remember than 1394.

00:11:39.200 --> 00:11:42.120
We've made a lot of effort to
make this name widely known.

00:11:42.270 --> 00:11:44.860
It has excellent customer recognition.

00:11:44.860 --> 00:11:46.910
We would like you to use
the name FireWire also.

00:11:47.090 --> 00:11:50.100
To do that, you need a license from us,
which is free.

00:11:50.100 --> 00:11:53.100
You can also get the FireWire
logo from us for free.

00:11:53.100 --> 00:11:54.090
It's in the same license.

00:11:54.100 --> 00:11:58.100
There's details in the
URL on the Q&A slide.

00:11:58.790 --> 00:11:59.670
So what's a serial bus?

00:11:59.750 --> 00:12:01.630
Why does this matter?

00:12:01.670 --> 00:12:05.390
A serial bus,
as opposed to a parallel interface,

00:12:05.550 --> 00:12:09.510
means that data flows serially,
one bit at a time.

00:12:09.740 --> 00:12:13.660
This means that the data can go long
distances with ease because very few

00:12:13.660 --> 00:12:16.100
wires are required to carry the signal.

00:12:16.120 --> 00:12:20.610
On a parallel interface like
SCSI or PCI or PC parallel port,

00:12:20.610 --> 00:12:23.340
many wires carry the signal in parallel.

00:12:23.380 --> 00:12:26.300
That works fine for
short distances like PCI.

00:12:26.450 --> 00:12:29.940
But over a long distance it's very
difficult because on each of those

00:12:29.940 --> 00:12:33.160
lines the bits will show up at
slightly different times because

00:12:33.160 --> 00:12:35.020
of different lengths in the cable.

00:12:35.030 --> 00:12:38.150
A serial bus doesn't have this problem,
so a serial bus can go

00:12:38.150 --> 00:12:41.570
long distances with a thin,
friendly, easy-to-use cable.

00:12:42.720 --> 00:12:44.580
And why is it called a bus?

00:12:44.590 --> 00:12:48.000
A bus is a technology where
everybody sees the same messages.

00:12:48.000 --> 00:12:50.700
Everyone is sharing the
same communication media.

00:12:50.830 --> 00:12:52.920
This is different from, say,
the internet,

00:12:52.920 --> 00:12:55.560
where packets are routed from
node to node depending on

00:12:55.570 --> 00:12:56.900
where they're trying to go.

00:12:56.900 --> 00:12:59.760
On a bus, if I say something,
everyone hears it.

00:12:59.810 --> 00:13:02.530
Generally, most of them will ignore it,
but the one person who really wanted

00:13:02.540 --> 00:13:04.540
the message will listen to it.

00:13:04.540 --> 00:13:06.110
Why is a bus good for 1394?

00:13:06.330 --> 00:13:10.580
A bus is really low-cost because
you don't have any routing logic.

00:13:10.590 --> 00:13:12.990
You simply send the message,
everyone gets it.

00:13:13.020 --> 00:13:16.070
The person who it's for sees that
it's for them and receives it.

00:13:16.080 --> 00:13:17.800
Everyone else ignores it.

00:13:17.850 --> 00:13:21.840
So a serial bus is a very low-cost,
high-performance,

00:13:21.870 --> 00:13:24.240
customer-friendly solution,
and that's why this technology

00:13:24.250 --> 00:13:25.490
was adopted in FireWire.

00:13:28.200 --> 00:13:30.330
So what have we done
recently in FireWire?

00:13:30.400 --> 00:13:32.900
As Greg mentioned,
all of our products today have the

00:13:32.900 --> 00:13:35.830
industry standard 1394 OpenHCI.

00:13:35.900 --> 00:13:39.250
They all have 1394a-2000,
which is the very latest

00:13:39.570 --> 00:13:41.100
revision of the specification.

00:13:41.280 --> 00:13:44.090
Nothing changed from a
functional point of view,

00:13:44.090 --> 00:13:48.630
but 1394a brings us bug fixes,
clears up ambiguities in the spec,

00:13:48.700 --> 00:13:52.090
has some performance
improvements in the arbitration.

00:13:52.520 --> 00:13:54.820
So that's in all of our products now.

00:13:55.130 --> 00:13:57.930
As Greg mentioned,
all of our products provide cable power.

00:13:57.970 --> 00:14:02.990
The Fire in FireWire can be
considered the cable power.

00:14:03.090 --> 00:14:07.840
This allows you to run hard drives, hubs,
cameras, innovative new devices that

00:14:07.840 --> 00:14:09.990
hopefully some of you will ship.

00:14:10.090 --> 00:14:12.090
This sets FireWire apart
from other interfaces.

00:14:12.100 --> 00:14:15.950
There's much more power
available on FireWire.

00:14:17.040 --> 00:14:20.290
All of our products today
support all FireWire speeds:

00:14:20.420 --> 00:14:24.690
100 megabit for your camcorders,
400 megabit for your hard drives,

00:14:24.810 --> 00:14:29.990
200 megabit for that oddball device that
somebody shipped that's 200 megabits.

00:14:31.030 --> 00:14:33.660
They're out there,
but they're hard to find.

00:14:33.880 --> 00:14:37.580
We also support booting from
FireWire in all of our devices.

00:14:37.660 --> 00:14:40.680
This works in Mac OS 9
and it works in Mac OS X.

00:14:40.780 --> 00:14:45.230
You can use a FireWire hard drive to
boot any computer that we sell today.

00:14:45.900 --> 00:14:48.340
This is more convenient than you
might think if you have a tendency

00:14:48.340 --> 00:14:51.110
to do bad things to your hard drive.

00:14:52.080 --> 00:14:55.410
And finally,
we have what's called Target Disk Mode in

00:14:55.470 --> 00:14:57.360
all of our products today.

00:14:57.440 --> 00:15:00.440
Target Disk Mode is like SCSI Disk Mode.

00:15:00.510 --> 00:15:03.840
If you remember back when
PowerBooks had SCSI interfaces,

00:15:03.880 --> 00:15:07.620
you could reboot the PowerBook with
a special SCSI cable connected,

00:15:07.680 --> 00:15:09.470
and it would act as if
it was a disk drive.

00:15:09.660 --> 00:15:13.980
You could connect it to another Macintosh
through that SCSI port and see all

00:15:13.980 --> 00:15:17.690
the files on the desktop in a volume.

00:15:17.820 --> 00:15:20.740
Well, we don't have SCSI on any
of our products anymore,

00:15:20.780 --> 00:15:22.600
but we have FireWire on all of them.

00:15:22.640 --> 00:15:26.000
So we've implemented
Target Disk Mode in FireWire.

00:15:26.040 --> 00:15:30.300
It's essentially the same idea,
but there's a couple of key differences.

00:15:30.410 --> 00:15:33.600
SCSI Disk Mode was limited
to portable computers.

00:15:33.620 --> 00:15:36.880
FireWire Disk Mode is available
in everything we sell.

00:15:37.100 --> 00:15:40.530
Just like booting from FireWire,
this is more useful than you may realize.

00:15:40.580 --> 00:15:43.690
If you haven't tried Target Disk Mode,
it's very easy to do.

00:15:43.700 --> 00:15:45.120
I'm going to demonstrate it.

00:15:45.160 --> 00:15:45.880
Give it a try.

00:15:46.030 --> 00:15:49.650
You'll find it may be a very easy way
to move files from one computer to

00:15:49.650 --> 00:15:52.470
another using just a FireWire cable.

00:15:52.880 --> 00:15:55.500
Target Disk Mode is
implemented in Open Firmware,

00:15:55.500 --> 00:15:59.800
so you simply reboot the computer
and hold down the letter "T".

00:16:00.240 --> 00:16:05.080
The computer that you're connecting it to
needs to be running Mac OS 9 or Mac OS X.

00:16:05.140 --> 00:16:08.360
If you have Mac OS 9,
you need FireWire support

00:16:08.360 --> 00:16:11.060
version 2.3.3 or later.

00:16:11.070 --> 00:16:14.360
If you're running Mac OS X,
it's just built in and ready to go.

00:16:14.450 --> 00:16:17.540
So let's switch to the
split-screen demos now.

00:16:30.120 --> 00:16:35.200
Okay, up here we have two PowerMac G4
systems hiding under this table.

00:16:35.320 --> 00:16:37.000
One of them is already
in target disk mode.

00:16:37.000 --> 00:16:40.000
I simply held down the
letter T while booting it.

00:16:40.000 --> 00:16:43.200
It displays this delightful
dancing FireWire icon to tell

00:16:43.210 --> 00:16:45.000
you it's in target disk mode.

00:16:45.110 --> 00:16:47.000
The other machine is running Mac OS X.

00:16:47.000 --> 00:16:53.800
Connect the FireWire cable between them.

00:16:57.970 --> 00:17:01.340
and all the volumes from the machine
in target disk mode become available

00:17:01.680 --> 00:17:03.660
on the machine running Mac OS X.

00:17:03.710 --> 00:17:06.020
I don't need all three of these.

00:17:08.160 --> 00:17:09.570
There's three partitions on this drive.

00:17:09.590 --> 00:17:13.390
They simply show up as
three FireWire volumes.

00:17:13.420 --> 00:17:19.680
I can copy a file over target disk mode
just by dragging it like any other file.

00:17:22.400 --> 00:17:24.790
So if you haven't tried this,
you can see how easy it is.

00:17:24.910 --> 00:17:26.730
Just take any two of
our current products.

00:17:26.860 --> 00:17:28.630
Doesn't need to be a portable.

00:17:28.710 --> 00:17:31.200
Reboot one of them,
hold down the letter T,

00:17:31.330 --> 00:17:34.040
wait till you see the
dancing FireWire icon,

00:17:34.190 --> 00:17:37.740
plug it into the other one,
and it will show up on the desktop.

00:17:37.890 --> 00:17:39.960
There's one other thing
we've changed from last year.

00:17:39.990 --> 00:17:44.330
If you were paying attention,
you've already noticed it.

00:17:44.430 --> 00:17:47.030
This is now much faster
than it was last year.

00:17:47.090 --> 00:17:49.240
It's more than 500% faster.

00:17:54.540 --> 00:17:58.630
This is that same 129 megabyte
file that Greg copied earlier.

00:17:58.680 --> 00:18:00.960
It's not quite as fast as a
native FireWire hard drive,

00:18:00.960 --> 00:18:05.640
but it's a huge improvement.

00:18:05.640 --> 00:18:09.660
Okay, let's go back to the slides.

00:18:18.580 --> 00:18:21.740
Now, this year we have something
completely new to talk about:

00:18:21.820 --> 00:18:23.920
IEEE 1394b.

00:18:23.920 --> 00:18:26.740
This is the future of FireWire.

00:18:28.280 --> 00:18:30.400
1394b is coming.

00:18:30.490 --> 00:18:32.740
People have been working
on this for a long time.

00:18:32.910 --> 00:18:37.040
This is an enhancement to the FireWire
standard that's backwards compatible

00:18:37.060 --> 00:18:38.920
but offers a lot of new features.

00:18:39.050 --> 00:18:42.700
We are going to incorporate
1394b in our products.

00:18:42.720 --> 00:18:45.750
I'm not allowed to say when,
but now would be a good

00:18:45.820 --> 00:18:48.990
time for you to start making
peripherals to connect to us.

00:18:52.030 --> 00:18:54.900
1394b brings much higher speed.

00:18:55.010 --> 00:18:57.020
800 megabits is the starting point.

00:18:57.140 --> 00:18:59.840
1600 megabits is also possible.

00:18:59.940 --> 00:19:03.200
These are a factor of two
improvements over the 400 megabit

00:19:03.200 --> 00:19:04.950
interface that we have today.

00:19:05.170 --> 00:19:10.840
Another big new feature in 1394b is
the support for long-haul cables.

00:19:10.950 --> 00:19:15.300
FireWire today is limited to
about 4.5 meters per cable.

00:19:15.420 --> 00:19:20.740
1394b defines some optional new media,
such as optical fiber,

00:19:20.810 --> 00:19:23.250
that can stretch this by
a factor of 10 or more,

00:19:23.450 --> 00:19:25.770
50 meters or beyond.

00:19:27.270 --> 00:19:31.440
This will really open up FireWire
to some new application areas.

00:19:31.550 --> 00:19:34.000
For example,
consider a professional music

00:19:34.000 --> 00:19:37.660
studio or a theater application
where you might want to send

00:19:37.660 --> 00:19:39.710
digital audio fairly long distances.

00:19:39.820 --> 00:19:42.140
Or consider an industrial
application where,

00:19:42.140 --> 00:19:44.780
for safety reasons,
you might want a hefty amount of

00:19:44.780 --> 00:19:47.780
distance between your FireWire
device and the person who's

00:19:47.780 --> 00:19:49.790
actually operating the computer.

00:19:51.000 --> 00:19:54.600
What makes 1394B faster?

00:19:54.710 --> 00:19:57.650
It's not just 800 and 1600 megabits.

00:19:57.770 --> 00:20:02.440
1394B has a new mode of operation called,
"Beta Mode." We didn't simply double the

00:20:02.470 --> 00:20:04.620
clock rate for what we're doing before.

00:20:04.680 --> 00:20:09.310
If you're communicating at 800, or 1600,
or using any of the new media,

00:20:09.330 --> 00:20:11.990
you'll be communicating in Beta Mode.

00:20:12.290 --> 00:20:17.030
Beta Mode has many arbitration
improvements to give higher performance.

00:20:17.030 --> 00:20:22.210
In particular, the arbitration is done in
parallel with communication.

00:20:22.220 --> 00:20:24.630
So while I'm sending
a packet to somebody,

00:20:24.670 --> 00:20:29.130
the arbitration takes place in parallel
for who gets to use the bus next.

00:20:29.190 --> 00:20:33.000
This means you can get
essentially 100% utilization of

00:20:33.000 --> 00:20:35.880
the bus for payload transfer,
whereas today,

00:20:35.890 --> 00:20:39.220
some small amount of the bus
is used up in arbitration.

00:20:39.220 --> 00:20:42.770
So 800 megabits is not just twice
as fast as where we are today,

00:20:42.770 --> 00:20:44.740
it's even a little bit faster than that.

00:20:46.530 --> 00:20:50.400
The 1394b standard has been
in work for a long time.

00:20:50.400 --> 00:20:53.400
It passed its official
ballot with the IEEE.

00:20:53.480 --> 00:20:56.250
The ballot review committee is
now incorporating all of the

00:20:56.340 --> 00:20:59.400
feedback that they got as far
as typos and clarifications.

00:20:59.400 --> 00:21:01.400
It's in its final edit mode right now.

00:21:01.770 --> 00:21:05.850
This is the time to start
working on products with 1394b.

00:21:06.440 --> 00:21:11.450
If you're a developer and you need
silicon to implement a 1394b product,

00:21:11.480 --> 00:21:17.430
talk to Greg or talk to our developer
relations and we'll put you in contact

00:21:17.430 --> 00:21:17.430
with people who can provide that silicon.

00:21:19.810 --> 00:21:24.000
One of the most visible changes to
customers from 1394b is that there are

00:21:24.000 --> 00:21:26.140
going to be some changes to the cable.

00:21:26.230 --> 00:21:29.490
In particular,
there's a new connector for 1394b,

00:21:29.530 --> 00:21:32.120
which has nine pins,
as opposed to the six-pin

00:21:32.120 --> 00:21:33.860
connector that we have today.

00:21:33.870 --> 00:21:35.940
At first glance,
this may seem undesirable

00:21:35.940 --> 00:21:38.540
because it's yet another change,
but there's a really

00:21:38.540 --> 00:21:39.800
good reason for this.

00:21:39.940 --> 00:21:43.360
All the cables that have been sold
to date can't go 800 megabits,

00:21:43.360 --> 00:21:47.240
and they're not going to work well if
you plug them into the new technology.

00:21:47.350 --> 00:21:51.060
So a new connector that is qualified
for this speed has been defined so

00:21:51.060 --> 00:21:55.470
that it can be attached to new cables
that are also qualified for this speed.

00:21:55.860 --> 00:21:58.490
The 9-pin connector still
uses ordinary copper ports.

00:21:58.570 --> 00:22:02.700
It's about the same size as the
6-pin connector that we have today.

00:22:02.760 --> 00:22:06.460
It has 9 pins because they've
added individual signal grounds

00:22:06.880 --> 00:22:10.160
for the twisted pair lines in order
to improve the signal quality.

00:22:10.230 --> 00:22:14.450
There's also a 9th pin for
cable detect that gives us some

00:22:14.450 --> 00:22:17.680
flexibility for future enhancements.

00:22:21.880 --> 00:22:25.980
The key thing about this connector is
that it's still a copper interface.

00:22:25.980 --> 00:22:30.790
And this means that if you attach
it to silicon that is bilingual,

00:22:30.790 --> 00:22:34.680
you can have full compatibility
with existing FireWire devices,

00:22:34.680 --> 00:22:37.800
because we use a copper interface
on the connection today.

00:22:37.800 --> 00:22:42.680
A bilingual FireWire port is capable
of operating at all of today's speeds

00:22:42.850 --> 00:22:47.540
and at least one of 1394b speeds,
and it will automatically detect

00:22:47.830 --> 00:22:52.130
what kind of equipment it's connected
to and communicate accordingly.

00:22:53.510 --> 00:22:57.000
When we have products with
this 9-pin connector on them,

00:22:57.000 --> 00:22:59.550
the customers will need
two new kinds of cable.

00:22:59.550 --> 00:23:01.390
It's really very simple.

00:23:01.670 --> 00:23:04.680
There will be a cable with a
9-pin connector on one end and a

00:23:04.680 --> 00:23:06.900
6-pin connector on the other end.

00:23:06.900 --> 00:23:09.800
This will enable you to use
any of today's peripherals

00:23:09.800 --> 00:23:12.260
with a 1394b-capable computer.

00:23:13.170 --> 00:23:17.870
There's also a cable with a
9-pin connector on one end and a

00:23:17.870 --> 00:23:20.820
4-pin connector on the other end.

00:23:20.820 --> 00:23:24.380
This enables direct connection to all
of today's camcorders and other devices

00:23:24.380 --> 00:23:26.490
that have that little 4-pin connector.

00:23:26.500 --> 00:23:28.450
This cable is just a piece of wire.

00:23:28.450 --> 00:23:30.470
It doesn't have any circuits in it.

00:23:30.480 --> 00:23:32.660
There's nothing expensive about it.

00:23:32.740 --> 00:23:36.890
So it should be really very easy
for customers to move to 1394b

00:23:36.890 --> 00:23:40.470
just by replacing one or two
of the cables in their system.

00:23:40.480 --> 00:23:43.020
All of the cables they have
today connect to the 1394b.

00:23:43.020 --> 00:23:48.790
The only thing you need to do is connect
the cable to the computer that has 1394b.

00:23:48.790 --> 00:23:53.320
Of course, there's also a cable with
9-pin connectors at both ends,

00:23:53.320 --> 00:23:58.610
and that's used for a device and a
computer that have 1394b together.

00:24:02.440 --> 00:24:04.960
As hardware developers,
we hope that you will

00:24:04.960 --> 00:24:09.590
use the 9-pin connector,
but we hope that you'll use it correctly.

00:24:10.250 --> 00:24:12.360
Because it's a new connector
and it represents something

00:24:12.440 --> 00:24:15.570
better in the future,
it may be very tempting to

00:24:15.570 --> 00:24:17.390
try to use it right away.

00:24:17.460 --> 00:24:22.730
You must use the 9-pin connector
if you have a 1394b PHY,

00:24:22.790 --> 00:24:25.940
the physical layer interface chip,
in your device.

00:24:26.010 --> 00:24:28.240
You have to use that connector
in order to communicate

00:24:28.330 --> 00:24:29.950
correctly at the new high speeds.

00:24:29.970 --> 00:24:32.810
It simply won't work
on the old connector.

00:24:32.900 --> 00:24:33.800
But here's the important point.

00:24:33.800 --> 00:24:37.390
You must only use the new
connector if you have real

00:24:37.570 --> 00:24:39.800
1394b silicon in your product.

00:24:39.800 --> 00:24:42.800
This is really important.

00:24:42.800 --> 00:24:46.220
We've heard people say, "Oh,
I can put that connector on my

00:24:46.280 --> 00:24:48.600
products today." Don't do that.

00:24:48.720 --> 00:24:51.330
This will cause big
problems for customers,

00:24:51.330 --> 00:24:52.790
massive confusion.

00:24:52.900 --> 00:24:58.120
Do not put the new connector on an old,
non-1394b device, and don't put the old

00:24:58.210 --> 00:25:00.740
connectors on a 1394b device.

00:25:00.790 --> 00:25:06.000
If your device speaks 1394b,
it must have only 1394b connectors.

00:25:06.020 --> 00:25:08.700
Just let the customer buy the right
cable to connect it to whatever

00:25:08.700 --> 00:25:09.990
they want to connect it for.

00:25:09.990 --> 00:25:12.860
Don't try to be fancy and use
the wrong connector because

00:25:13.010 --> 00:25:14.450
they can recycle a cable.

00:25:14.500 --> 00:25:18.000
That will just create chaos.

00:25:18.190 --> 00:25:20.990
Everybody clear on that?

00:25:20.990 --> 00:25:20.990
This is going to be a quiz.

00:25:22.220 --> 00:25:23.860
Okay, backwards compatibility.

00:25:23.860 --> 00:25:28.060
We know Macintosh customers
love backwards compatibility.

00:25:28.130 --> 00:25:31.400
1394b is designed to be
fully backwards compatible.

00:25:31.510 --> 00:25:35.580
All of the significant changes in
1394b are in the physical layer.

00:25:35.670 --> 00:25:36.650
This is called the PHY.

00:25:36.770 --> 00:25:43.980
This is the silicon that actually
connects to the wire that drives

00:25:43.980 --> 00:25:43.980
the twisted pair lines and sends
bits up and down the cable.

00:25:44.600 --> 00:25:49.360
New devices that have 1394b in them
can be directly connected to old

00:25:49.360 --> 00:25:54.410
1394a and even 1394-1995 hardware.

00:25:55.580 --> 00:25:59.380
New devices can work with the old
hardware at the old hardware speeds.

00:25:59.560 --> 00:26:03.480
For example, all of the computers we've
ever sold with FireWire could

00:26:03.580 --> 00:26:05.940
connect to a 1394b hard drive.

00:26:06.000 --> 00:26:08.930
They'd simply connect
to it at 400 megabits.

00:26:08.970 --> 00:26:12.500
A future computer might
connect to it at 800 megabits.

00:26:12.620 --> 00:26:17.680
So you can make a device with
1394b and you're not locking

00:26:17.680 --> 00:26:19.950
out any part of the market.

00:26:19.950 --> 00:26:21.290
The millions of machines we've
already sold can use your device.

00:26:21.990 --> 00:26:27.580
Similarly, old devices and software can
work with your new device,

00:26:27.580 --> 00:26:30.000
and they'll work just as
fast as they always have.

00:26:30.040 --> 00:26:32.680
Your camcorder will continue
to work at 100 megabits.

00:26:32.740 --> 00:26:34.980
Your scanner will continue
to work at 400 megabits.

00:26:35.000 --> 00:26:38.060
Nothing gets any worse if
you connect it to 1394B.

00:26:38.060 --> 00:26:41.440
And if all your devices,
or any of your devices, are 1394B,

00:26:41.510 --> 00:26:44.870
they can communicate amongst
themselves at the new high speed.

00:26:44.880 --> 00:26:47.750
So it's very flexible, very easy to use.

00:26:47.980 --> 00:26:49.020
Nobody's been ruled out.

00:26:49.020 --> 00:26:51.560
It should be a very pleasant
experience for customers.

00:26:51.900 --> 00:26:54.980
Just use the right connector.

00:26:56.020 --> 00:26:58.800
So what are we changing
in software for 1394b?

00:26:58.850 --> 00:27:00.340
Almost nothing.

00:27:00.580 --> 00:27:03.140
A lot of software guys had their
hand in designing this spec,

00:27:03.190 --> 00:27:05.690
so what a great outcome.

00:27:06.880 --> 00:27:09.370
If you're writing a device driver
or you're writing an application,

00:27:09.380 --> 00:27:12.300
you probably don't have
to change anything.

00:27:12.440 --> 00:27:16.080
People today using our API don't specify
the speed they want to communicate at.

00:27:16.080 --> 00:27:18.460
We simply give them the
best possible speed.

00:27:18.480 --> 00:27:20.520
That continues to be true with 1394b.

00:27:20.610 --> 00:27:22.700
If your device can do it,
we'll send it a packet at

00:27:22.700 --> 00:27:25.520
800 or even 1600 megabits.

00:27:25.540 --> 00:27:28.900
In the core FireWire services,
the actual operating system,

00:27:29.080 --> 00:27:30.420
very few changes are required.

00:27:30.440 --> 00:27:33.940
We need to add a couple bits to
keep track of the new high speeds.

00:27:33.960 --> 00:27:34.780
That's about it.

00:27:34.830 --> 00:27:37.340
We expect to have no trouble
delivering that well in

00:27:37.340 --> 00:27:39.590
advance of anyone needing it.

00:27:41.880 --> 00:27:45.590
1394b also defines optical fiber,
as I mentioned earlier.

00:27:45.660 --> 00:27:49.920
This is a way to go much greater
distances than you can today.

00:27:50.640 --> 00:27:53.950
50 meters, even 100 meters,
is defined at various speeds

00:27:54.210 --> 00:27:57.190
on 1394b with optical fiber.

00:27:57.420 --> 00:27:59.700
This is not for everybody.

00:27:59.750 --> 00:28:03.890
A 100-meter cable,
100-meter FireWire cable is great.

00:28:04.210 --> 00:28:08.070
But if I'm burning DVDs
on my FireWire DVD drive,

00:28:08.090 --> 00:28:12.540
it's not going to do me much good to put
the drive 300 feet away from my computer.

00:28:12.960 --> 00:28:14.970
That's kind of inconvenient.

00:28:15.080 --> 00:28:17.270
Now,
if I've got a FireWire security camera,

00:28:17.270 --> 00:28:19.590
or maybe a FireWire
microphone out in the studio,

00:28:19.780 --> 00:28:21.300
that would be a great use for fiber.

00:28:21.440 --> 00:28:24.120
But a lot of devices don't need this.

00:28:24.840 --> 00:28:29.340
We recommend that most devices simply
use the copper connector because

00:28:29.340 --> 00:28:33.940
customers who need fiber can purchase
a FireWire hub that has copper on

00:28:33.940 --> 00:28:36.300
one side and fiber on the other side.

00:28:36.510 --> 00:28:42.310
1394b is designed so that all that's
needed in such a hub is a PHY plus

00:28:42.310 --> 00:28:46.500
whatever fiber optic transceiver you
need for the kind of fiber that's in use.

00:28:46.700 --> 00:28:50.040
So the hub does not have to be expensive.

00:28:50.230 --> 00:28:53.360
Anyone who wants to go long distance,
even with their DVD burner,

00:28:53.490 --> 00:28:55.480
could get two of these hubs,
run fiber between them,

00:28:55.480 --> 00:28:56.860
and go great distances.

00:28:56.860 --> 00:28:59.480
But most devices really
aren't going to need this.

00:28:59.480 --> 00:29:02.770
So just consider fiber as something
that enables new applications,

00:29:02.770 --> 00:29:05.240
not something that has
to be on every camcorder.

00:29:05.240 --> 00:29:07.610
I certainly don't expect to
see it on any camcorders.

00:29:10.640 --> 00:29:12.460
Okay,
I'd like to ask Greg to come back up.

00:29:12.520 --> 00:29:16.460
Greg's going to tell you about the
resources that we make available to you,

00:29:16.570 --> 00:29:18.430
FireWire developers,
in order to encourage you to

00:29:18.430 --> 00:29:22.660
develop hardware and software
that uses FireWire on Macintosh.

00:29:22.700 --> 00:29:26.270
Once Greg's done,
then we will both be back for Q&A.

00:29:36.560 --> 00:29:39.980
I'd like to point you guys at some
resources that are available to

00:29:40.010 --> 00:29:44.100
help give you some information for
doing FireWire software development.

00:29:44.230 --> 00:29:47.680
One of the most important things
is our software development kit,

00:29:47.680 --> 00:29:51.600
and that can be found at
the URL listed on the page.

00:29:52.140 --> 00:29:56.660
Additionally, we have email resources
that you can utilize.

00:29:56.670 --> 00:30:01.300
One of them is firewire@apple.com,
which basically goes right to me.

00:30:01.300 --> 00:30:06.240
And if you have some questions that you
want to talk directly to Apple about,

00:30:06.240 --> 00:30:07.880
you can send the question there.

00:30:08.000 --> 00:30:11.180
It tends to be less technical
than the technical FireWire

00:30:11.290 --> 00:30:13.890
questions mailing list,
which is comprised of

00:30:14.130 --> 00:30:17.640
both Apple engineering and
third-party software developers,

00:30:17.640 --> 00:30:21.080
so you can get some fairly quick
responses to some of your more

00:30:21.080 --> 00:30:25.530
difficult technical questions by
sending them to that mailing list.

00:30:27.180 --> 00:30:30.900
Additionally, I wanted to mention one
thing about the SDK.

00:30:31.060 --> 00:30:35.860
It contains two new debugging tools that
were previously unavailable with the SDK,

00:30:35.950 --> 00:30:39.200
Firebug and Firecracker,
which are very useful for

00:30:39.210 --> 00:30:41.690
debugging your FireWire devices.

00:30:46.270 --> 00:30:51.060
I'd like to summarize some things
to do for you to generate your

00:30:51.540 --> 00:30:56.200
FireWire device to fit into the
FireWire world much more easily.

00:30:56.330 --> 00:30:59.850
First of all,
please take advantage of bus power.

00:31:00.140 --> 00:31:02.000
We provide it.

00:31:02.220 --> 00:31:06.120
It makes a much better
customer experience,

00:31:06.120 --> 00:31:11.760
and the product is much more successful
in the marketplace by using BuzzPower.

00:31:12.290 --> 00:31:14.440
We provide bus power
on all of our products,

00:31:14.490 --> 00:31:18.590
including portables,
and you can see the values there.

00:31:18.990 --> 00:31:22.880
Additionally, take advantage of the
multi-host topology.

00:31:22.880 --> 00:31:26.620
This is very useful for FireWire
devices such as scanners or printers

00:31:27.000 --> 00:31:31.140
where you can connect it to the
FireWire bus and any Macintosh on the

00:31:31.140 --> 00:31:34.190
FireWire bus can utilize the device.

00:31:36.150 --> 00:31:39.040
Additionally,
please recognize that the 1394a

00:31:39.040 --> 00:31:42.840
specifies a range of 8 to 30 volts.

00:31:43.260 --> 00:31:46.670
You should tolerate the full range
within this spec and preferably

00:31:46.670 --> 00:31:51.960
operate in this range because you
will encounter devices on the bus

00:31:53.560 --> 00:31:59.500
You will encounter devices on the
bus in this range of the spec.

00:31:59.640 --> 00:32:03.390
Some other things to do:
Use the standard 6 or

00:32:03.580 --> 00:32:06.200
9 pin connector only.

00:32:06.230 --> 00:32:11.660
Use the 400 megabit per second
PHY or faster for your devices.

00:32:11.700 --> 00:32:15.190
Additionally,
you should provide two or three

00:32:15.190 --> 00:32:17.180
connectors for large devices.

00:32:17.280 --> 00:32:20.550
Customers enjoy daisy-chaining
devices together and you don't want

00:32:20.550 --> 00:32:23.890
to be a dead end in the firewire bus.

00:32:24.640 --> 00:32:30.110
Previous history SCSI devices that had
only one SCSI port on them didn't fare

00:32:30.300 --> 00:32:33.560
too well in the marketplace because
customers were really interested in

00:32:33.560 --> 00:32:35.640
daisy-chaining these devices together.

00:32:35.640 --> 00:32:41.710
And we're experiencing a similar
trend with FireWire devices.

00:32:42.870 --> 00:32:47.250
Also, please use a unique serial number.

00:32:47.400 --> 00:32:48.800
This is very important.

00:32:48.900 --> 00:32:51.830
For example, if you have two devices,
let's say if you're a

00:32:51.840 --> 00:32:53.840
disk drive manufacturer,
you have two drives.

00:32:53.950 --> 00:33:01.060
If they don't have unique serial numbers,
the drivers will not be loaded

00:33:01.060 --> 00:33:04.940
properly by the operating system
because that's how we go about

00:33:04.940 --> 00:33:04.940
identifying the devices on the bus.

00:33:05.110 --> 00:33:09.190
Additionally, during a bus reset,
the unique serial number is very

00:33:09.240 --> 00:33:16.900
important because this is how the
FireWire bus configures and knows about

00:33:16.900 --> 00:33:16.900
the devices on the FireWire bus itself.

00:33:18.540 --> 00:33:20.890
One final note,
please don't use the minimal ROM.

00:33:20.900 --> 00:33:24.140
That's the 4-byte ROM.

00:33:24.200 --> 00:33:29.920
One of the main reasons we recommend
against using that is there is no

00:33:30.030 --> 00:33:33.240
GUID included in the minimal ROM.

00:33:39.580 --> 00:33:42.600
Please take advantage of
the FireWire logo licensing.

00:33:42.600 --> 00:33:45.500
As Eric mentioned,
it's free and it's available.

00:33:45.550 --> 00:33:49.250
Additionally, for the Mac logo,
you can license that and get

00:33:49.340 --> 00:33:53.130
it at the same location that
you can get the FireWire logo.

00:33:53.690 --> 00:33:58.090
Market research has shown that the
FireWire logo is very recognizable,

00:33:58.120 --> 00:34:02.980
more recognizable than other 1394 logos,
and customers tend to purchase

00:34:03.390 --> 00:34:04.930
products which have the FireWire logo.

00:34:05.140 --> 00:34:07.230
So take advantage of that.

00:34:10.770 --> 00:34:15.620
I'd like to review some related sessions
that we're going to be having this week.

00:34:15.690 --> 00:34:19.020
One is a FireWire in-depth session,
which is going to be at

00:34:19.030 --> 00:34:20.140
the Civic Auditorium.

00:34:20.220 --> 00:34:24.610
That's actually across the street
and will be there tomorrow afternoon.

00:34:24.770 --> 00:34:27.500
There's a feedback forum on Thursday.

00:34:27.570 --> 00:34:29.650
And finally,
there's a FireWire Plugfest on

00:34:29.650 --> 00:34:32.160
the Apple campus in the Piano Bar.

00:34:32.280 --> 00:34:37.570
Come by, look at a bunch of devices,
have some fun, and drink some beer.

00:34:40.210 --> 00:34:41.040
Bring?

00:34:41.040 --> 00:34:43.040
Oh, bring devices too.

00:34:43.040 --> 00:34:43.770
It's a plug fest.

00:34:43.890 --> 00:34:46.150
You're supposed to bring devices.

00:34:47.310 --> 00:34:50.560
Here's some contact information.

00:34:50.560 --> 00:34:54.520
You can send an email to
me at firewire@apple.com or

00:34:54.520 --> 00:34:58.000
additionally my counterpart,
Greg Keithley, who's the FireWire and

00:34:58.010 --> 00:34:59.200
USB technology manager.

00:34:59.200 --> 00:35:03.060
You can contact him directly also.