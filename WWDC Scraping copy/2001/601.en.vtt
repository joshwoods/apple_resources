WEBVTT

00:00:03.900 --> 00:00:06.600
What day is it today?

00:00:06.600 --> 00:00:10.340
It's a holiday for Canadians, right?

00:00:10.340 --> 00:00:11.740
We don't really have to be here.

00:00:11.740 --> 00:00:12.930
We have the day off.

00:00:13.070 --> 00:00:14.260
We're going to be working next Monday.

00:00:16.170 --> 00:00:18.020
But I thought that
since it's Victoria Day,

00:00:18.060 --> 00:00:20.380
which commemorates the
birthday of Queen Victoria,

00:00:20.380 --> 00:00:22.540
it's a national holiday in Canada.

00:00:22.540 --> 00:00:25.980
This traditionally marks
only six more weeks of winter

00:00:25.980 --> 00:00:28.700
in Canada on Victoria Day.

00:00:31.090 --> 00:00:33.220
So I'm hopeful that the sound is
on on this computer so that you

00:00:33.340 --> 00:00:40.590
can all rise and sing with me,
"God Save the Queen."

00:01:25.400 --> 00:01:43.800
[Transcript missing]

00:01:44.470 --> 00:01:46.220
I want to show you the tools.

00:01:46.280 --> 00:01:48.530
I want you to understand the
titles of the other sessions,

00:01:48.530 --> 00:01:51.500
and I want to talk about what is
the deal with WebObjects 4.5.1.

00:01:52.890 --> 00:01:54.420
It's an application server.

00:01:54.460 --> 00:01:56.390
I don't like that term,
but that's what we're stuck with.

00:01:56.470 --> 00:02:00.740
It vends applications with, usually,
web interfaces to the internet.

00:02:00.740 --> 00:02:01.600
But it's more than that.

00:02:01.620 --> 00:02:04.120
Most importantly,
it's a collection of frameworks that

00:02:04.160 --> 00:02:07.620
do a whole lot of really good stuff for
you that we'll see in a few moments.

00:02:07.960 --> 00:02:12.250
For instance, you write apps,
and they run on this square thing here,

00:02:12.250 --> 00:02:15.170
and they vend interfaces by
collecting data from a bunch

00:02:15.170 --> 00:02:17.960
of different data sources,
by manufacturing these objects,

00:02:17.960 --> 00:02:20.550
by exploiting relationships
between the objects,

00:02:20.550 --> 00:02:23.590
and delivering a variety of
different UIs to the end user.

00:02:23.600 --> 00:02:25.020
It's a developer tool.

00:02:25.020 --> 00:02:27.910
It's got a steep learning curve,
but that's okay,

00:02:27.910 --> 00:02:31.600
because that means you learn a
lot in a short period of time.

00:02:37.430 --> 00:02:39.230
WebObjects works with Java.

00:02:39.300 --> 00:02:42.430
By the way, because it's Victoria Day,
we'll be pronouncing it Java for

00:02:42.470 --> 00:02:44.080
the remainder of the session.

00:02:44.120 --> 00:02:47.090
And we'll be saying, "Project Builder."

00:02:47.400 --> 00:02:48.540
in the Canadian way.

00:02:48.570 --> 00:02:51.070
Works with a variety of databases,
a variety of different UIs,

00:02:51.080 --> 00:02:52.440
a variety of different web servers.

00:02:52.460 --> 00:02:56.100
Open, open, open, open, open, open, open.

00:02:56.730 --> 00:02:57.360
Where can you use it?

00:02:57.440 --> 00:02:59.890
You can develop, as Ernie mentioned,
Windows continues to be

00:02:59.900 --> 00:03:02.750
a development platform,
but I think the experience on

00:03:02.840 --> 00:03:04.620
Mac OS X is awful darn good.

00:03:04.620 --> 00:03:08.240
You can deploy on OS X, on Windows 2000,
on Solaris, on HPX,

00:03:08.240 --> 00:03:12.040
theoretically on anything with the
right kind of Java 2 environment.

00:03:12.040 --> 00:03:14.970
And you can mix and match these
things as needed and start small

00:03:14.970 --> 00:03:17.770
on one little server and grow
to a big hog in deployment.

00:03:17.780 --> 00:03:21.400
You might start with one application
running on a little server like this,

00:03:21.400 --> 00:03:24.730
and then through the ease and miracle
of the WebObjects deployment tools,

00:03:25.000 --> 00:03:27.360
grow to a big scary complicated thing
like this where you've got several

00:03:27.890 --> 00:03:31.840
copies of the same app there and
several over here and multiple servers

00:03:31.840 --> 00:03:33.940
and multiple databases and so on.

00:03:33.980 --> 00:03:37.870
The hard work of managing that kind
of scalability is done for you.

00:03:37.940 --> 00:03:39.540
I should do a survey here.

00:03:39.540 --> 00:03:41.670
Put up your hands if you
hate it when they stop to

00:03:41.730 --> 00:03:43.140
ask you to put up your hands.

00:03:43.140 --> 00:03:44.880
People hate that?

00:03:44.940 --> 00:03:47.410
Okay, we'll keep going.

00:03:48.040 --> 00:03:48.890
Key ideas.

00:03:48.930 --> 00:03:51.190
Web components at the front end.

00:03:51.330 --> 00:03:54.480
Components that manage,
that are responsible usually for HTML.

00:03:54.480 --> 00:03:59.090
Enterprise objects at the back end
that contain data drawn from databases,

00:03:59.140 --> 00:04:01.920
but they're kept apart and
bound together at runtime.

00:04:01.920 --> 00:04:05.300
These components typically
can... Excuse me.

00:04:05.320 --> 00:04:07.410
Let's just take a second.

00:04:07.420 --> 00:04:08.690
Okay.

00:04:10.070 --> 00:04:11.660
Hello.

00:04:11.750 --> 00:04:13.050
Oh, hello.

00:04:13.170 --> 00:04:14.890
Fine.

00:04:14.980 --> 00:04:16.970
Yeah, okay.

00:04:18.300 --> 00:04:21.290
All right, I'm going to say Panama.

00:04:21.880 --> 00:04:27.320
Okay, say hi to Regis.

00:04:31.710 --> 00:04:32.600
Where were we?

00:04:32.600 --> 00:04:36.600
These HTML templates, come on,
this is serious.

00:04:36.600 --> 00:04:41.210
These HTML templates contain
this one special WebObject tag

00:04:41.280 --> 00:04:43.500
that's really a marker that says,
here's where something

00:04:43.540 --> 00:04:44.350
good's going to happen.

00:04:44.350 --> 00:04:46.740
Here's where we're going to
send a message to another object

00:04:46.750 --> 00:04:48.140
to cause something to happen.

00:04:49.160 --> 00:04:50.630
And on top of that,
there is a separate bindings

00:04:50.660 --> 00:04:52.280
file that defines the meaning
of each of these tags,

00:04:52.290 --> 00:04:55.150
and a whole lot of pre-written objects
that participate in this whole process.

00:04:55.150 --> 00:04:58.670
These components at the front
end typically emit strings,

00:04:58.670 --> 00:05:01.610
often HTML strings, sometimes plain text.

00:05:01.610 --> 00:05:04.940
They could be binary image data,
they could be Apple script commands,

00:05:04.940 --> 00:05:06.710
they could be virtually anything.

00:05:08.000 --> 00:05:10.500
They can be non-HTML components,
they can be PDF-based.

00:05:10.500 --> 00:05:13.300
We have a partner, ReportMill,
who's exhibiting over in the show

00:05:13.300 --> 00:05:15.990
that has a tremendous PDF-based
reporting solution that really

00:05:16.020 --> 00:05:17.390
works great with WebObjects.

00:05:18.000 --> 00:05:19.290
We have a partner in Europe, WAPObjects.

00:05:19.340 --> 00:05:22.820
We do XML natively,
and I'm going to show you some XML stuff

00:05:22.830 --> 00:05:26.300
if all goes well later in the demo,
for which I have 72

00:05:26.300 --> 00:05:28.380
minutes and 30 seconds.

00:05:28.440 --> 00:05:30.500
I've got a great clock here,
and I like that scoreboard.

00:05:30.500 --> 00:05:31.700
I like that scoreboard up there.

00:05:31.700 --> 00:05:34.840
Did you see there was a scoreboard
to count how many mistakes I make?

00:05:34.840 --> 00:05:38.030
I mean, they could put those up for
the visiting team or something.

00:05:38.220 --> 00:05:39.810
Enterprise objects at the back end.

00:05:40.140 --> 00:05:43.180
These are the objects that
implement your business rules.

00:05:43.220 --> 00:05:46.500
They're typically named after
things in your business,

00:05:46.500 --> 00:05:49.610
like customers, students, courses,
and so on.

00:05:49.640 --> 00:05:53.570
We have an adapter that draws the data
for these things out of a data source,

00:05:53.570 --> 00:05:57.320
and we have these model files that
pick a particular adapter from the vast

00:05:57.380 --> 00:06:00.800
array of adapters that we have now,
and fetch data from some data

00:06:00.980 --> 00:06:04.180
source and deliver certain kinds
of objects to your application.

00:06:05.300 --> 00:06:07.570
They also automatically manage,
in a very slick way,

00:06:07.570 --> 00:06:09.230
relationships between objects.

00:06:09.300 --> 00:06:11.010
You're going to see me go
completely crazy with the

00:06:11.130 --> 00:06:12.360
relationships a little later.

00:06:12.360 --> 00:06:17.380
But this back end Enterprise Objects
framework part is the real gem.

00:06:17.380 --> 00:06:21.380
These are pure business objects
that have no notion of the fact

00:06:21.390 --> 00:06:25.730
that they are rendering HTML or
rendering PDF or sending out WAP.

00:06:25.860 --> 00:06:29.180
They simply respond to messages
and deliver back an answer,

00:06:29.210 --> 00:06:32.350
and something else creates
them from the database.

00:06:32.360 --> 00:06:35.250
The Enterprise Object isn't even
really aware that it was fetched

00:06:35.250 --> 00:06:38.700
from Oracle or Sybase or Frontbase or
whatever your favorite actually is.

00:06:38.720 --> 00:06:41.480
It's all completely managed
for you in a very clean way.

00:06:41.480 --> 00:06:44.660
These are all bound together
by your WebObjects application

00:06:44.660 --> 00:06:47.520
that locates these tags,
sends a variety of messages,

00:06:47.580 --> 00:06:50.480
takes the results,
stirs them into the component,

00:06:50.480 --> 00:06:53.720
sends it back to the end user
with literally a million and one

00:06:53.720 --> 00:06:57.470
hooks by which you can customize
this entire process at runtime.

00:06:59.270 --> 00:07:01.580
along with some advanced
session management.

00:07:01.620 --> 00:07:04.710
Every WebObjects application
for free has a session object

00:07:05.210 --> 00:07:06.940
that you can extend as needed.

00:07:07.030 --> 00:07:10.010
And this session object contains
whatever you want in there,

00:07:10.050 --> 00:07:13.290
knowing you know that WebObjects
arranges to have one session

00:07:13.290 --> 00:07:16.860
object for every distinct user
who's coming to your application.

00:07:16.950 --> 00:07:20.030
You can extend this session object
to manage a shopping cart or to keep

00:07:20.100 --> 00:07:21.600
track of what a user's been doing.

00:07:21.940 --> 00:07:25.510
And WebObjects sorts out the thousands
of requests that are coming in

00:07:25.510 --> 00:07:28.700
and delivers them automatically
to the correct session objects.

00:07:29.870 --> 00:07:32.400
There's also some
runtime monitoring tools.

00:07:32.450 --> 00:07:34.800
The Monitor tool manages
that huge deployment.

00:07:34.810 --> 00:07:37.900
Remember that ugly slide I had with
all the instances all over the place?

00:07:38.080 --> 00:07:40.730
Monitor takes care of making
sure that they're all running,

00:07:40.800 --> 00:07:43.450
that they're all healthy,
gives you statistics,

00:07:43.450 --> 00:07:44.960
restarts them as needed.

00:07:45.720 --> 00:07:48.500
Well, let's see how this actually works.

00:07:48.550 --> 00:07:52.790
I want to do a little diagram here
and show you the sequence of flow of

00:07:52.790 --> 00:07:55.730
control of a WebObjects application.

00:07:55.800 --> 00:07:57.220
It's the internet up there.

00:07:57.410 --> 00:08:00.650
And we have a web server and
maybe several app servers in

00:08:00.650 --> 00:08:02.640
the database at the back end.

00:08:02.680 --> 00:08:04.620
I understand the internet has grown.

00:08:04.670 --> 00:08:07.650
I was going to put four iMacs on
it this year instead of three,

00:08:07.720 --> 00:08:08.990
but we ran out of time.

00:08:09.020 --> 00:08:12.140
So just to elaborate once again
what the various platforms are,

00:08:12.140 --> 00:08:14.030
that web server could be anything.

00:08:14.980 --> 00:08:15.880
It could be virtually anything.

00:08:15.880 --> 00:08:19.510
We have an adapter that plugs
into the web server and takes

00:08:19.810 --> 00:08:22.800
requests coming in from the user on
their web browser and routes them

00:08:22.850 --> 00:08:23.910
to the appropriate application.

00:08:23.920 --> 00:08:27.060
And through that web server,
the responses from these applications

00:08:27.080 --> 00:08:28.860
are delivered back to the end user.

00:08:28.860 --> 00:08:32.690
We have special plug-ins for a
variety of popular web servers,

00:08:32.820 --> 00:08:35.340
the Netscape server, Apache, IIS.

00:08:35.340 --> 00:08:39.700
We have a generic CGI plug-in if you're
running some other peculiar web server.

00:08:39.700 --> 00:08:40.270
Web server?

00:08:40.270 --> 00:08:41.330
Web server, pardon me.

00:08:41.360 --> 00:08:47.260
And the application server has...
A limitless now that is Java 2,

00:08:47.260 --> 00:08:50.700
a potentially limitless collection
of machines that you could

00:08:50.700 --> 00:08:51.940
deploy the application on.

00:08:51.960 --> 00:08:54.020
Anywhere there's a Java 2 environment.

00:08:54.060 --> 00:08:57.060
This is a major step from last year.

00:08:57.080 --> 00:09:00.630
Last year we had to tell you that
you could use HPUX or Solaris or

00:09:00.630 --> 00:09:02.540
Windows NT or Mac OS X server.

00:09:02.640 --> 00:09:05.120
Now you can use virtually anything
with the appropriate Java runtime.

00:09:06.670 --> 00:09:09.580
The adapter at the back end,
in the past we had several

00:09:09.580 --> 00:09:12.620
different adapters,
one for every distinct database,

00:09:12.620 --> 00:09:18.300
and there was a whole mishmash of
which adapters ran on which servers,

00:09:18.300 --> 00:09:20.900
and a lot of restrictions that
prevented you from getting,

00:09:20.980 --> 00:09:23.460
for instance, the SQL Server if you
were running on Mac OS X.

00:09:23.460 --> 00:09:28.090
A lot of other combinations didn't work,
but now that we've got JDBC as a pure

00:09:28.090 --> 00:09:32.330
Java way of moving the SQL commands
back and forth from the database,

00:09:32.340 --> 00:09:36.230
we can talk to all the databases
on all the different platforms.

00:09:36.620 --> 00:09:39.560
So let's suppose we had a
really simple application here,

00:09:39.560 --> 00:09:42.420
and we're going to follow the flow
of control here to give you an idea

00:09:42.500 --> 00:09:44.290
of the processing that's going on.

00:09:44.300 --> 00:09:51.770
I'm picturing some sort of
beginner application where

00:09:51.770 --> 00:09:52.300
I type my username in there,
and then it fetches some

00:09:52.300 --> 00:09:52.300
info about me and says,
"Hi, Steve."

00:09:52.530 --> 00:09:54.360
Well, there's really three steps
that are going on here.

00:09:54.440 --> 00:09:56.850
The WebObjects application
is going to take some values

00:09:56.950 --> 00:09:58.400
from that initial request.

00:09:58.400 --> 00:09:59.910
It's going to notice that you typed S.

00:09:59.910 --> 00:10:00.940
Hayman in a form field.

00:10:00.940 --> 00:10:03.180
It's going to invoke
some sort of an action,

00:10:03.180 --> 00:10:06.680
some sort of logic that says, all right,
we got this submit button.

00:10:06.690 --> 00:10:07.700
What do we do now?

00:10:07.700 --> 00:10:08.840
What page do we go to?

00:10:08.890 --> 00:10:10.460
What processing do we do?

00:10:10.460 --> 00:10:12.740
And then it's going to
generate a response,

00:10:12.740 --> 00:10:15.840
a stream of HTML that's going
to come back to the end user.

00:10:17.500 --> 00:10:18.390
How does this actually happen?

00:10:18.400 --> 00:10:22.660
Well, a user would submit a
request to a web server.

00:10:22.880 --> 00:10:27.390
The adapter on the web server would
find one of many different instances,

00:10:27.420 --> 00:10:31.470
many different identical processes
representing your application,

00:10:31.570 --> 00:10:34.120
and forward the request to the right one.

00:10:35.220 --> 00:10:39.140
Your session object in there would
find the WebObjects component

00:10:39.140 --> 00:10:42.070
that generated the initial page,
the component that put up

00:10:42.070 --> 00:10:45.440
the "What's your name?" page,
and it would study the various

00:10:45.510 --> 00:10:46.840
form values that came in.

00:10:46.870 --> 00:10:50.510
We seem to have received a text field,
someone has typed "shayman"

00:10:50.520 --> 00:10:52.800
in the text field,
and according to our instructions,

00:10:52.830 --> 00:10:56.960
we need to bind that to
our username variable.

00:10:57.000 --> 00:10:58.840
The requesting component,
then there's another

00:10:58.840 --> 00:11:00.030
step that goes through.

00:11:01.030 --> 00:11:03.550
It figures out which action to invoke.

00:11:03.590 --> 00:11:08.090
The submit button is connected in it by a
means I'll show you to perhaps a specific

00:11:08.090 --> 00:11:12.500
Java message being sent to a specific
class back in the application server.

00:11:12.500 --> 00:11:15.660
That class might be a method called,
that action might be a method

00:11:15.660 --> 00:11:17.140
called handle login here.

00:11:17.200 --> 00:11:18.540
Returns another component.

00:11:20.400 --> 00:11:22.340
So there'd be some Java code
associated with this.

00:11:22.370 --> 00:11:24.160
They could do whatever
business logic you want.

00:11:24.270 --> 00:11:26.600
I want to fetch the customer with
the username that we just got,

00:11:26.600 --> 00:11:28.650
and I want to return some other page,
and I want to put the

00:11:28.710 --> 00:11:30.170
customer's name in the session.

00:11:30.180 --> 00:11:32.590
That kind of thing is a
fairly common paradigm.

00:11:32.600 --> 00:11:34.920
That action returns another component.

00:11:35.010 --> 00:11:38.210
That other component is the
thing that's going to generate

00:11:38.210 --> 00:11:40.030
the response to the end user.

00:11:40.030 --> 00:11:42.050
So the session loads
the response component,

00:11:42.110 --> 00:11:44.580
another one of these things
with WebObject tags in it.

00:11:45.210 --> 00:11:46.120
It studies them.

00:11:46.120 --> 00:11:47.040
It finds the tags.

00:11:47.040 --> 00:11:49.380
It identifies what it needs to do.

00:11:49.870 --> 00:11:51.680
It's going to use these to
replace in this component so that

00:11:51.680 --> 00:11:52.950
it can generate the response.

00:11:53.010 --> 00:11:56.020
In this case, it's noticing I've got
a thing here called a,

00:11:56.020 --> 00:11:58.360
I've got in my HTML file,
I've got this tag that

00:11:58.360 --> 00:12:00.990
says name equals username,
and in this extra file,

00:12:00.990 --> 00:12:04.960
I have a definition that says username,
it's a string, and you send the message

00:12:05.030 --> 00:12:07.840
customer to the session object,
and you send the message

00:12:07.950 --> 00:12:09.630
first name to that object.

00:12:10.290 --> 00:12:13.330
Whatever comes out of that,
replace this little tag with it.

00:12:14.000 --> 00:12:16.400
And all that's,
that may cause various objects

00:12:16.400 --> 00:12:19.310
to be fetched from the database,
all transparently.

00:12:19.740 --> 00:12:20.930
Via this enterprise objects framework.

00:12:21.450 --> 00:12:23.630
We might in this case need to
load some sort of an enterprise

00:12:23.710 --> 00:12:25.430
objects model that says,
oh, by the way,

00:12:25.430 --> 00:12:28.720
customer objects are coming out
of the cust table on Oracle.

00:12:29.370 --> 00:12:33.010
And the enterprise objects framework
automatically figures out whatever

00:12:33.010 --> 00:12:34.540
ugly SQL it has to generate.

00:12:34.540 --> 00:12:35.660
It sends it to the database.

00:12:35.660 --> 00:12:37.910
A bunch of rows come
back from the database,

00:12:37.910 --> 00:12:40.580
and they're converted
into enterprise objects.

00:12:41.190 --> 00:12:43.120
And this is all happening while you wait.

00:12:43.120 --> 00:12:46.690
It's all happening without the need
for you to have any intervention here.

00:12:46.700 --> 00:12:48.160
This is a very seamless process.

00:12:48.480 --> 00:12:52.180
So a customer... A customer object
is created with the results of

00:12:52.260 --> 00:12:55.080
that fetch from the database
and populated with some data.

00:12:55.150 --> 00:12:58.000
We've got this model set up
that says customers have a name,

00:12:58.000 --> 00:13:00.100
and they have an address,
and they have a first name and

00:13:00.100 --> 00:13:01.930
a last name and a relationship
to some other things.

00:13:01.940 --> 00:13:05.670
The object is created automatically.

00:13:06.650 --> 00:13:10.050
We need to send the message first name
to that customer object and it responds,

00:13:10.120 --> 00:13:13.540
"Steve, hey." Coincidence.

00:13:13.540 --> 00:13:16.440
And that response is substituted
back into the WebObjects template.

00:13:16.440 --> 00:13:20.130
You can see it used to say WebObject
name equals username and now that's

00:13:20.130 --> 00:13:22.550
replaced with this single string,
Steve.

00:13:22.560 --> 00:13:28.950
So the stuff that's actually going
out to the end user has no evidence

00:13:29.080 --> 00:13:30.790
that it's ever actually been through
this entire WebObjects process here.

00:13:31.210 --> 00:13:33.860
Then this session sends the
plain HTML back to the user,

00:13:33.910 --> 00:13:34.980
and they are happy, happy, happy.

00:13:34.980 --> 00:13:36.920
Here it comes.

00:13:37.100 --> 00:13:38.390
Welcome back, Steve.

00:13:38.580 --> 00:13:41.440
But it's actually a fairly elegant
process when you get used to it.

00:13:41.440 --> 00:13:43.730
I mean, it seems like 300 steps
when I describe it here,

00:13:43.760 --> 00:13:46.780
and it seemed like 10,000 steps
when I was making this slide.

00:13:50.380 --> 00:13:52.900
Most of those steps just
happen automatically for

00:13:52.900 --> 00:13:54.780
every WebObjects application.

00:13:54.780 --> 00:13:56.860
It's just one of the many
great things that you get for

00:13:56.860 --> 00:13:58.280
free with this environment.

00:13:58.280 --> 00:14:01.820
And we call that the
request-response loop.

00:14:01.840 --> 00:14:05.710
Request comes in from a user,
and a response is generated

00:14:05.800 --> 00:14:07.880
and sent back to that user.

00:14:07.880 --> 00:14:09.640
And if you look into the
WebObjects documentation,

00:14:09.640 --> 00:14:11.960
we all heard how swell the
WebObjects documentation is becoming,

00:14:11.960 --> 00:14:15.490
you'll see a variety of methods
like take values from requests,

00:14:15.570 --> 00:14:18.010
or invoke action, or append to response.

00:14:18.060 --> 00:14:20.820
And these messages are
automatically delivered to various

00:14:20.820 --> 00:14:23.950
components in your application,
if they wish to receive them.

00:14:23.950 --> 00:14:27.770
And they can all participate in
this and add their own little bits

00:14:27.770 --> 00:14:31.650
of HTML or modify state in some
way as the result is going back.

00:14:31.680 --> 00:14:35.780
So that request-response loop was
considerably more important to

00:14:35.780 --> 00:14:40.030
WebObjects developers one year ago,
because if you wanted to do that

00:14:40.030 --> 00:14:45.120
more than 100 times a minute,
you had to give us $50,000.

00:14:45.120 --> 00:14:47.380
Now you just give us $700.

00:14:47.380 --> 00:14:48.020
You can do it.

00:14:48.060 --> 00:14:50.300
as many times as you like.

00:14:50.300 --> 00:14:52.890
What a deal, what a deal.

00:14:54.030 --> 00:14:56.980
You'll note from this that
the SQL and the HTML are kept

00:14:57.070 --> 00:14:58.650
as far apart as possible.

00:14:58.780 --> 00:15:01.340
This is really a fundamental
tenet of WebObjects.

00:15:01.340 --> 00:15:05.120
We keep database logic over here,
database access stuff over here.

00:15:05.120 --> 00:15:08.360
We keep user interface code
for drawing UIs over here.

00:15:08.360 --> 00:15:10.540
We keep business logic in the middle.

00:15:10.540 --> 00:15:13.000
And there's no need for
you as a developer to worry

00:15:13.080 --> 00:15:14.670
about writing HTML yourself.

00:15:14.710 --> 00:15:16.830
We have tools that can help you do that.

00:15:18.220 --> 00:15:19.550
Or generating SQL yourself.

00:15:19.550 --> 00:15:22.450
Again, we have tools,
our modeling tool that builds that model.

00:15:22.450 --> 00:15:24.010
They all figure out how to do that.

00:15:24.140 --> 00:15:25.270
Unless you want to.

00:15:25.270 --> 00:15:29.460
And that's one of the other great things
about WebObjects is that if you want to,

00:15:29.460 --> 00:15:32.870
you can override virtually every
one of those arrows on that last

00:15:32.870 --> 00:15:36.780
presentation and cause something
special to happen in your case.

00:15:36.780 --> 00:15:40.670
Frequently, not necessary,
but a great thing to have in the

00:15:40.760 --> 00:15:42.720
bag of tools as we move along.

00:15:43.200 --> 00:15:44.670
I need a brief drink of water here.

00:15:44.740 --> 00:15:45.110
Excuse me.

00:15:46.050 --> 00:15:47.200
Is there really 100
degrees in South Africa?

00:15:47.440 --> 00:15:47.820
Sacramento today?

00:15:47.820 --> 00:15:49.480
I mean, isn't that like the
boiling point of water?

00:15:49.480 --> 00:15:50.530
How do you stand it down here?

00:15:58.290 --> 00:16:02.300
So let's talk about the tools.

00:16:02.410 --> 00:16:06.190
Project Builder, WebObjects Builder,
EOModeler.

00:16:06.910 --> 00:16:09.400
WebObjects Builder is one of the
more interesting ones that you can

00:16:09.400 --> 00:16:14.470
learn all about in session 603 on
the introduction to WebObjects tools.

00:16:14.840 --> 00:16:18.240
It recognizes the fact that you need
to create a whole bunch of these

00:16:18.310 --> 00:16:20.340
WebObjects components in an application.

00:16:20.340 --> 00:16:23.300
And a component typically
contains some HTML,

00:16:23.330 --> 00:16:26.830
like we just saw,
with these WebObject tags in them.

00:16:26.840 --> 00:16:31.030
And that's, it's a directory called,
let's say, main.wo with a file in

00:16:31.030 --> 00:16:32.680
it called main.html.

00:16:33.300 --> 00:16:36.280
Then there's a second
file called the wad file,

00:16:36.280 --> 00:16:40.230
love that name, the wad file,
that defines the meaning of each

00:16:40.230 --> 00:16:42.400
of these tags in the first file.

00:16:42.400 --> 00:16:45.830
So you see, we're keeping anything even
remotely resembling business

00:16:45.830 --> 00:16:47.100
logic out of the HTML.

00:16:47.100 --> 00:16:49.820
Just this one little tag
that we put in the HTML.

00:16:49.820 --> 00:16:52.650
Hands up, everyone who says,
how come you didn't write

00:16:52.730 --> 00:16:55.800
the closing slash WebObject
tag on this little example?

00:16:55.800 --> 00:16:58.240
All the, yeah, all right,
all my buddies over here.

00:16:58.240 --> 00:17:00.310
Why did the font would have
been too small if I did that?

00:17:00.360 --> 00:17:01.830
Technically,
WebObject name equals string,

00:17:01.890 --> 00:17:03.240
and then a closing slash WebObject tag.

00:17:03.300 --> 00:17:03.910
Closing tag.

00:17:03.980 --> 00:17:05.140
You can learn all about that.

00:17:05.140 --> 00:17:07.060
Are we going into, like,
that level of detail in

00:17:07.150 --> 00:17:08.210
any of the other sessions?

00:17:08.210 --> 00:17:09.050
I don't know.

00:17:09.080 --> 00:17:13.230
But there's typically a Java class
associated with each of these as well.

00:17:13.230 --> 00:17:16.530
So my main component, for instance,
there's really three

00:17:16.800 --> 00:17:18.280
files associated with it.

00:17:18.280 --> 00:17:21.190
An HTML file,
a WebObject declaration file,

00:17:21.190 --> 00:17:24.280
and a bit of business
logic in this Java file.

00:17:24.280 --> 00:17:25.420
Java file, really?

00:17:25.450 --> 00:17:26.890
Do you really prefer that?

00:17:26.890 --> 00:17:27.980
I can't believe it.

00:17:27.980 --> 00:17:31.140
And a bit of logic that you as a
developer write that defines what

00:17:31.270 --> 00:17:33.090
happens for some of these tags.

00:17:33.140 --> 00:17:35.530
When we click on place order
on the hyperlink over there,

00:17:35.540 --> 00:17:38.290
it sends this message,
and it adds something to a shopping cart,

00:17:38.290 --> 00:17:39.920
and it takes us to a checkout page.

00:17:39.920 --> 00:17:42.860
You write logic like that in a Java file.

00:17:42.860 --> 00:17:47.510
WebObject combines it at runtime
with these HTML and WAD pieces in

00:17:47.510 --> 00:17:51.650
a stream of often plain HTML is
sent back to the end user.

00:17:51.660 --> 00:17:54.460
That would be a simple component.

00:17:54.460 --> 00:17:57.330
You're going to create a lot of
these in a WebObjects application.

00:17:57.330 --> 00:18:00.120
Usually one for each page,
often one for little

00:18:00.220 --> 00:18:01.990
subcomponents of the page.

00:18:02.980 --> 00:18:05.450
You can have interesting
components from your buddies and

00:18:05.520 --> 00:18:08.330
drag them into the application
and reuse them in effective ways.

00:18:08.330 --> 00:18:11.670
You can have components that wrap
themselves around other components to

00:18:11.670 --> 00:18:13.450
enhance what the inner one is doing.

00:18:13.460 --> 00:18:17.980
And we provide components for a bunch
of common UI elements out of the box,

00:18:17.980 --> 00:18:22.870
but you typically write lots of your
own using the WebObjects builder tool.

00:18:23.080 --> 00:18:25.790
Now, how do you actually
make these components?

00:18:25.790 --> 00:18:27.230
They're all files, okay?

00:18:27.390 --> 00:18:31.700
You can use whichever your favorite
tool is for editing these things.

00:18:34.080 --> 00:18:35.760
But, you know,
there are sort of professional

00:18:35.760 --> 00:18:36.600
level tools as well.

00:18:36.600 --> 00:18:39.720
And I don't know why you
couldn't do it with CAT,

00:18:39.720 --> 00:18:42.280
although Unix hackers,
maybe we'd rather use DD.

00:18:42.280 --> 00:18:46.000
You know,
you could use that to create a component.

00:18:47.680 --> 00:18:49.760
All right, let's show that.

00:18:49.800 --> 00:18:53.100
But you can also use any
visual HTML editor you like.

00:18:53.290 --> 00:18:56.620
Some of them, particularly Go Live,
have excellent support for

00:18:56.620 --> 00:18:58.140
managing WebObjects tags as well.

00:18:58.140 --> 00:19:00.450
And we have our own tool
that we think you'll like.

00:19:00.530 --> 00:19:02.780
Now, nobody says you have to
use WebObjects Builder,

00:19:02.780 --> 00:19:03.780
but it's pretty nice.

00:19:03.780 --> 00:19:05.840
Engineering has done a
nice job on this thing.

00:19:05.840 --> 00:19:08.600
So this is what WebObjects
Builder looks like when it's

00:19:08.600 --> 00:19:10.450
editing one of these components.

00:19:10.510 --> 00:19:12.850
And you're going to see
this in excruciating detail

00:19:12.850 --> 00:19:14.040
in a few minutes here.

00:19:16.260 --> 00:19:21.700
You have a view of some HTML in the
middle with little taggy things in

00:19:21.700 --> 00:19:24.610
there that represent objects you've
dropped into this HTML application.

00:19:24.610 --> 00:19:28.360
Up at the top, you have an inspector that
tells you the properties of

00:19:28.360 --> 00:19:30.280
the currently selected thing.

00:19:30.280 --> 00:19:33.190
In this case, I've got that click
here hyperlink selected,

00:19:33.190 --> 00:19:36.490
so you can see the properties of
a WO hyperlink object at the top.

00:19:37.180 --> 00:19:39.930
At the bottom,
you have an object browser that shows

00:19:39.960 --> 00:19:43.890
you what attributes and methods are
available in the collection of objects

00:19:43.890 --> 00:19:46.430
that your application currently contains.

00:19:46.460 --> 00:19:48.060
You draw lines.

00:19:48.160 --> 00:19:53.190
I can tell here that my main
component has an application variable,

00:19:53.190 --> 00:19:56.600
a session variable, a product variable.

00:19:56.600 --> 00:19:59.490
It also has a place order method.

00:19:59.490 --> 00:20:02.290
WebObjects Builder has figured this
out by looking around at the other

00:20:02.290 --> 00:20:03.740
tools to see what you're doing.

00:20:03.740 --> 00:20:07.020
I would like it when the user
clicks on that hyperlink.

00:20:07.180 --> 00:20:10.820
To send the message place order back
to my main object so I can figure

00:20:10.820 --> 00:20:12.690
out how to get to the next page.

00:20:12.700 --> 00:20:14.500
Well, you do this by drawing a line.

00:20:14.530 --> 00:20:16.700
It doesn't look exactly like that.

00:20:16.700 --> 00:20:18.300
That was the closest
I could come in PowerPoint.

00:20:18.300 --> 00:20:22.930
But you draw a line from the method that
you want at the bottom to the object

00:20:22.930 --> 00:20:27.180
you want to connect it to at the top,
the hyperlink in this case,

00:20:27.180 --> 00:20:30.220
and you choose a property
of hyperlink objects.

00:20:30.300 --> 00:20:32.550
Hyperlinks have a string
that they can contain,

00:20:32.550 --> 00:20:35.330
and they have a direct action
name that I really must read the

00:20:35.330 --> 00:20:37.150
documentation about sometimes.

00:20:37.170 --> 00:20:39.940
And they have a bunch of other
properties here that are available.

00:20:39.970 --> 00:20:42.610
But I want to connect it to action,
which is certainly the most popular

00:20:43.050 --> 00:20:44.460
one of all the hyperlink methods.

00:20:44.490 --> 00:20:46.650
This is the method you connect
to if you want a hyperlink

00:20:46.650 --> 00:20:47.860
to actually do something.

00:20:47.910 --> 00:20:50.570
And having done that,
you'll see at the top the inspector

00:20:50.660 --> 00:20:52.380
reflects that particular change.

00:20:52.410 --> 00:20:56.310
So WebObjects Development with WebObjects
Builder is an ongoing process of

00:20:56.410 --> 00:20:59.070
drawing lots of these little lines,
connecting things from here to there,

00:20:59.200 --> 00:21:01.440
picking through objects
in your browser down here,

00:21:01.550 --> 00:21:05.320
designing your HTML visually up here,
and saving it all as one of

00:21:05.320 --> 00:21:07.140
these main.wo components.

00:21:07.140 --> 00:21:09.060
So you can do that with
WebObjects Builder,

00:21:09.060 --> 00:21:10.970
or header.wo, or catalogitem.wo.

00:21:11.140 --> 00:21:14.480
If you like,
you can also work in raw mode.

00:21:14.510 --> 00:21:17.500
If you're really excited
about typing raw HTML,

00:21:17.570 --> 00:21:19.530
you can dive into that
with WebObjects Builder,

00:21:19.530 --> 00:21:24.140
and it will give you a view of the text
of the HTML file and the actual text

00:21:24.210 --> 00:21:25.780
of the wad file if you insist on that.

00:21:25.780 --> 00:21:27.780
Occasionally that's handy.

00:21:28.330 --> 00:21:31.200
You can also use palettes
to organize your stuff.

00:21:31.200 --> 00:21:34.600
These first two over here are
palettes that come with WebObjects.

00:21:34.600 --> 00:21:36.540
There's, I think,
five that come with WebObjects now.

00:21:36.540 --> 00:21:39.680
I'm a bit of a palette pack rat,
and you'll see some of my others later.

00:21:39.680 --> 00:21:42.940
You can create your own palettes
with useful objects on them,

00:21:42.940 --> 00:21:45.620
like the amazing pluralizer
that we saw last year,

00:21:45.620 --> 00:21:48.870
or a shopping cart, or a buy button,
or a localizer bar.

00:21:48.870 --> 00:21:52.080
Write these little things once
and put them on a palette.

00:21:52.140 --> 00:21:56.340
Then you can reuse them in WebObjects
easily by dragging and dropping.

00:21:57.340 --> 00:22:00.260
Sure, I was wondering what that
one in the middle is.

00:22:00.370 --> 00:22:01.180
It's not working right now.

00:22:01.180 --> 00:22:02.180
I really wanted to show it to you.

00:22:02.180 --> 00:22:02.670
That's a shame.

00:22:02.680 --> 00:22:03.520
We'll give it a shot.

00:22:03.520 --> 00:22:05.260
If we have lots of extra time at the end,
we'll give it a shot.

00:22:05.280 --> 00:22:09.150
Another important tool, EOModeler.

00:22:10.950 --> 00:22:14.340
This is really an editor
for EOModelD files,

00:22:14.340 --> 00:22:17.410
or if you want to be incredibly pedantic,
EOModelD directories that

00:22:17.410 --> 00:22:18.750
contain a bunch of files.

00:22:18.780 --> 00:22:22.910
One of these object models is full
of information that describes how to

00:22:23.020 --> 00:22:26.520
connect to a particular data source,
how to retrieve values from

00:22:26.570 --> 00:22:29.880
certain tables in that data source,
what kind of objects to make,

00:22:29.880 --> 00:22:32.490
what kind of relationships
to have between them.

00:22:32.560 --> 00:22:35.460
And EOModeler is really a
graphical editor that lets

00:22:35.570 --> 00:22:37.010
you set all this stuff up.

00:22:37.520 --> 00:22:41.070
So this is one that's kind of finished
for a CARS database that you might have.

00:22:41.120 --> 00:22:46.480
And hidden inside this EOModel is a lot
of useful information that you've set up.

00:22:46.530 --> 00:22:49.940
There's database connection information
that tells you the particular

00:22:49.940 --> 00:22:51.680
database that you want to talk to.

00:22:51.680 --> 00:22:57.180
In this case, we're talking to, you know,
that's not even right.

00:22:57.300 --> 00:22:59.560
That's the way to get to the real one.

00:22:59.560 --> 00:23:00.650
I made that last night.

00:23:00.660 --> 00:23:02.940
I looked at my slide and I thought, oh,
geez, my old one was wrong,

00:23:02.940 --> 00:23:04.340
and this one is not really any better.

00:23:04.340 --> 00:23:07.480
But you'll see that in a moment,
because we're going to make an EOModel.

00:23:07.500 --> 00:23:08.850
And you'll see what it
actually looks like.

00:23:08.880 --> 00:23:13.920
There's also information about
entities and tables built in here.

00:23:13.920 --> 00:23:16.630
An entity is a kind of a thing,
a general class of things

00:23:16.680 --> 00:23:18.200
that come out of an EOModel.

00:23:18.200 --> 00:23:20.720
The table is the particular
database table they come from.

00:23:20.760 --> 00:23:25.080
We can see in here that the MDL table in,
let's say, our Oracle database that

00:23:25.080 --> 00:23:28.750
this thing is connecting to,
every row in that is going to

00:23:28.750 --> 00:23:31.050
correspond to a vehicle object.

00:23:31.060 --> 00:23:34.630
I'm not stuck with ugly schemas
with incorrectly spelled

00:23:34.820 --> 00:23:36.460
table names in the data.

00:23:36.500 --> 00:23:37.420
Not that that ever happens.

00:23:37.520 --> 00:23:40.130
But in the database, I can put a nice,
meaningful view on it.

00:23:40.260 --> 00:23:43.540
I want vehicle objects to come
out of the MDL table in Oracle.

00:23:43.620 --> 00:23:47.160
There's also detailed information
about each of these entities.

00:23:47.160 --> 00:23:49.530
The vehicle object, you can see it's got
a bunch of properties.

00:23:49.540 --> 00:23:53.840
It has a base price and a loaded
price and some image JPEG data.

00:23:53.840 --> 00:23:56.150
And those things all
correspond to certain columns,

00:23:56.150 --> 00:24:00.040
certain columns in the Oracle table
that we're getting this stuff from.

00:24:02.020 --> 00:24:05.880
For instance,
the base price of the vehicle corresponds

00:24:05.890 --> 00:24:08.160
to the PRMin column in Oracle.

00:24:08.220 --> 00:24:12.200
So once the Enterprise Objects
Framework has manufactured one

00:24:12.200 --> 00:24:15.550
of these vehicle objects for you,
you can send it the message base price,

00:24:15.570 --> 00:24:19.060
and it's going to go, oh, okay,
here you go, returning the data from that

00:24:19.150 --> 00:24:20.950
column of the Oracle table.

00:24:20.960 --> 00:24:24.330
There's also relationship
information down here at the bottom.

00:24:24.340 --> 00:24:26.970
Vehicles have a related maker object.

00:24:27.160 --> 00:24:30.440
The Corvette object is
related to the Chevrolet.

00:24:30.440 --> 00:24:33.330
Some of the relationship
information in the bottom half,

00:24:33.380 --> 00:24:37.180
we can see that there's maker objects
corresponding to a different table,

00:24:37.180 --> 00:24:39.740
and EOModeler maintains
these relationships,

00:24:39.740 --> 00:24:41.200
sometimes one-to-one.

00:24:41.200 --> 00:24:42.780
A car has one maker.

00:24:42.780 --> 00:24:44.480
Sometimes they're one-to-many.

00:24:44.480 --> 00:24:46.520
Chevrolet makes a whole bunch of cars.

00:24:46.630 --> 00:24:50.140
And all that information about
how to actually do those SQL joins

00:24:50.140 --> 00:24:53.470
is hidden in this model and is
something you can exploit very

00:24:53.490 --> 00:24:55.970
easily later with WebObjects Builder.

00:24:57.460 --> 00:25:00.320
EOModeler can manage some fairly
complex relationships here.

00:25:00.320 --> 00:25:03.570
You get a diagram view that you saw in
the previous presentation that lets you

00:25:03.570 --> 00:25:05.530
see what relationships actually exist.

00:25:05.530 --> 00:25:08.800
You can even draw new ones that might
not be actually defined by the database.

00:25:08.800 --> 00:25:12.110
And my favorite part of all this
is what we call key value coding.

00:25:12.110 --> 00:25:15.390
It's this idea that you can make
up these little expressions.

00:25:15.390 --> 00:25:17.010
Vehicle.maker.name.

00:25:17.010 --> 00:25:19.100
Ask the vehicle object for its maker.

00:25:19.100 --> 00:25:20.670
Ask that object for its name.

00:25:20.740 --> 00:25:22.610
You get a string like Chrysler.

00:25:23.350 --> 00:25:24.290
Vehicle.packages.

00:25:24.290 --> 00:25:27.340
Give me the list of all the packages
that go with this particular car.

00:25:27.340 --> 00:25:30.270
You send these simple string
messages with these dots in them.

00:25:30.270 --> 00:25:33.020
You send even fancier ones
with this at sign notation.

00:25:33.020 --> 00:25:35.870
They can do averages and sums
and maximums and minimums.

00:25:35.940 --> 00:25:37.900
And that's that patented key value.

00:25:38.020 --> 00:25:38.790
Is it patented?

00:25:38.820 --> 00:25:40.260
It's patented, isn't it?

00:25:40.260 --> 00:25:41.920
Software patents are evil.

00:25:41.930 --> 00:25:42.940
But this is a good one.

00:25:42.940 --> 00:25:43.790
This is a good one.

00:25:43.790 --> 00:25:44.660
This is a good one.

00:25:44.660 --> 00:25:45.410
Sorry.

00:25:45.430 --> 00:25:46.180
Sorry.

00:25:46.180 --> 00:25:47.990
I forgot where I was.

00:25:48.100 --> 00:25:48.940
But not this one.

00:25:48.940 --> 00:25:50.620
This is a great software patent.

00:25:50.620 --> 00:25:53.220
And because it expresses this string.

00:25:53.220 --> 00:25:55.610
It's a simple concept that no
one's thought to do before.

00:25:55.720 --> 00:25:56.520
A.B.C.D.

00:25:56.520 --> 00:25:58.460
as a stream of messages in a,
I was going to say

00:25:58.460 --> 00:26:01.320
language independent way,
but that only mattered last year when

00:26:01.320 --> 00:26:03.240
we were doing Objective-C and Java.

00:26:03.240 --> 00:26:07.230
But in a nice neutral way that lets you
specify how to traverse this graph of

00:26:07.230 --> 00:26:09.490
objects and how to get results out of it.

00:26:09.580 --> 00:26:12.280
You'll see this exploited
in WebObjectsBuilder when

00:26:12.280 --> 00:26:13.600
I get to that in a moment.

00:26:13.600 --> 00:26:15.540
I tend to go nuts with these things.

00:26:15.540 --> 00:26:18.140
I made up one when I was
working on my demo.

00:26:18.240 --> 00:26:23.020
I made up an expression like that that
had seven dots in it and two at signs.

00:26:23.060 --> 00:26:24.430
Which was a personal best for me.

00:26:24.430 --> 00:26:27.190
I don't think I've ever come up with
a reason to have two of these at signs

00:26:27.190 --> 00:26:28.610
in a key value coding expression.

00:26:28.610 --> 00:26:31.030
Has anyone ever had two at signs
in key value coding before?

00:26:31.030 --> 00:26:31.680
Am I the first?

00:26:31.680 --> 00:26:32.520
Oh, geez.

00:26:34.760 --> 00:26:36.690
But thank you, there you're not.

00:26:36.780 --> 00:26:38.860
But it was so complicated I looked at it,
I couldn't even understand

00:26:38.860 --> 00:26:39.940
it after I'd done it,
and I thought, well,

00:26:39.940 --> 00:26:41.360
maybe we better not do
that in today's demo,

00:26:41.360 --> 00:26:42.540
so we'll try to keep that part simple.

00:26:42.540 --> 00:26:46.020
Let's do a really brief EO Modeler demo.

00:26:48.090 --> 00:26:50.560
If I could have demo screen three here,
you can see that I'm working

00:26:50.560 --> 00:26:53.560
on a machine that's protected
by this secret shroud here.

00:26:53.560 --> 00:26:56.810
I think this is our new 18
and three quarter inch monitor

00:26:56.810 --> 00:27:00.440
that hasn't been released yet,
so you can't actually look at it.

00:27:00.560 --> 00:27:02.270
But I'm looking at a great picture here.

00:27:02.440 --> 00:27:09.430
So I want to build a new
model using EOModeler here.

00:27:12.200 --> 00:27:43.200
[Transcript missing]

00:27:44.130 --> 00:27:45.100
I don't know.

00:27:45.100 --> 00:27:47.910
Something about electrical votes.

00:27:47.920 --> 00:27:49.330
I don't really know what those are.

00:27:49.430 --> 00:27:51.590
But it seems like a great
database to kind of work.

00:27:51.660 --> 00:27:54.480
Maybe we can write a business rule
that decides who the winner is and kind

00:27:54.480 --> 00:27:56.070
of speed up this process a bit here.

00:28:00.530 --> 00:28:02.810
I'll tell you one of the great
things about WebObjects 5,

00:28:02.810 --> 00:28:05.480
we have simplified your
choice of database adapter.

00:28:05.660 --> 00:28:11.630
JDBC or none.

00:28:13.700 --> 00:28:17.640
I love the Nunn adapter,
but I think today we

00:28:17.640 --> 00:28:18.670
use the JDBC adapter.

00:28:21.300 --> 00:28:23.110
So, one adapter that lets you
connect to a variety of data

00:28:23.230 --> 00:28:27.300
sources in a nice cross-platform,
database-independent kind of way.

00:28:27.370 --> 00:28:31.030
You need to have what they call
a Type 4 JDBC driver for your

00:28:31.030 --> 00:28:35.300
particular database installed
in a certain spot on the system.

00:28:35.300 --> 00:28:39.300
But since those are pure Java classes,
you can do that on any machine here.

00:28:39.360 --> 00:28:43.280
The fun part is in remembering the
clever syntax for this URL that connects

00:28:43.320 --> 00:28:45.260
you to that particular database.

00:28:45.420 --> 00:28:46.300
This is my least favorite part here.

00:28:46.300 --> 00:28:50.290
JDBC colon, oh God, what am I doing?

00:28:50.340 --> 00:28:54.210
Openbase colon slash slash
localhost slash US elections.

00:28:54.240 --> 00:28:58.300
That's a URL that describes how to use
JDBC to load a certain kind of driver,

00:28:58.300 --> 00:29:02.040
get to Openbase in this case,
and fetch information from

00:29:02.070 --> 00:29:05.540
the US elections database
running on this machine.

00:29:08.510 --> 00:29:11.300
These plugins are little helpers because
I gather JDBC isn't just quite rich

00:29:11.380 --> 00:29:14.700
enough to find all the information
that we need from a remote data source.

00:29:14.700 --> 00:29:17.000
So we have little additional
classes that help out here.

00:29:17.000 --> 00:29:20.420
And now you're prompted for what
kind of information from that

00:29:20.450 --> 00:29:24.000
database do you want to actually
incorporate in your model?

00:29:24.000 --> 00:29:27.000
I don't have any stored
procedures to worry about.

00:29:27.000 --> 00:29:28.820
I'm going to do custom
enterprise objects later,

00:29:28.830 --> 00:29:30.990
but we'll deselect those and
look at the rest of these.

00:29:31.000 --> 00:29:35.000
Of all the tables in your database,
which ones do you want to use?

00:29:35.000 --> 00:29:37.000
Well, I've got a table for candidates,
and I've got one for elections,

00:29:37.000 --> 00:29:41.020
and one for votes, and well,
let's use all of them.

00:29:41.020 --> 00:29:41.020
What the heck?

00:29:42.620 --> 00:29:45.840
Now,
EOModeler wants to be a nice citizen and

00:29:45.920 --> 00:29:49.540
work with the referential integrity rules
that you've specified for the database.

00:29:49.620 --> 00:29:54.210
You know, I always hit next here because
I don't know what this is all about.

00:29:57.400 --> 00:29:59.000
- I should look that up, you know.

00:29:59.050 --> 00:30:01.390
There's a reason I'm in sales
and I'm not actually delivering

00:30:01.490 --> 00:30:02.560
the consulting services.

00:30:02.570 --> 00:30:04.600
It's probably safer
for everyone that way.

00:30:04.600 --> 00:30:08.790
But here is our EO model
that's just been created.

00:30:09.400 --> 00:30:13.110
And this is a view like we kind of
saw a few dozen PowerPoint slides ago.

00:30:13.170 --> 00:30:17.450
It says that we've got campaign objects
coming from the campaign table and party

00:30:17.520 --> 00:30:19.050
objects coming from the party table.

00:30:19.060 --> 00:30:20.940
And you can actually look at
these in here if you want.

00:30:20.940 --> 00:30:22.280
There's a little data
browser where you can say,

00:30:22.440 --> 00:30:24.980
fetch me all the party objects
that you've got in the database.

00:30:24.980 --> 00:30:26.490
A whole bunch of them.

00:30:26.490 --> 00:30:31.040
The America First Party and the
Farmer Labor Party and the... Oh,

00:30:31.040 --> 00:30:32.200
you have a Liberal Party down here.

00:30:32.200 --> 00:30:32.990
Oh, isn't that interesting?

00:30:33.040 --> 00:30:33.810
I thought that was a bad word.

00:30:36.610 --> 00:30:38.540
There's also, for instance,
there's a candidate object,

00:30:38.540 --> 00:30:41.010
and you can see that the candidate
object has a first name and

00:30:41.010 --> 00:30:44.240
a last name and a home state,
and a couple of relationships.

00:30:44.240 --> 00:30:46.780
A candidate is related to a party.

00:30:46.780 --> 00:30:49.940
So-and-so ran for the Republican Party.

00:30:49.940 --> 00:30:52.860
A candidate has a one-to-many,
indicated by the two arrows,

00:30:52.860 --> 00:30:55.540
a one-to-many relationship,
or a list of campaigns that

00:30:55.580 --> 00:30:57.170
this candidate has been in.

00:30:58.380 --> 00:31:00.070
And there's other useful tables in here.

00:31:00.070 --> 00:31:02.130
There's an image table of
photos of certain people,

00:31:02.130 --> 00:31:05.030
but I might like to add a relationship
that's actually missing here.

00:31:05.050 --> 00:31:08.010
I'd like to be able to get from
the candidate object to the

00:31:08.090 --> 00:31:10.090
picture of the candidate object.

00:31:10.090 --> 00:31:13.810
So I'll add a new relationship,
not currently defined in the database,

00:31:13.810 --> 00:31:15.360
to this particular model.

00:31:16.980 --> 00:31:18.430
And in the inspector,
you can give it a little

00:31:18.430 --> 00:31:19.380
more detail about this.

00:31:19.400 --> 00:31:21.600
I want to go over to the,
from the candidate table

00:31:21.600 --> 00:31:23.700
to the image table,
and it's a one-to-one thing.

00:31:23.700 --> 00:31:25.910
We're going to join the image
ID here and the image ID there,

00:31:25.910 --> 00:31:26.370
connect.

00:31:26.480 --> 00:31:29.560
And now that I've done that,
every candidate object I get,

00:31:29.560 --> 00:31:33.200
I can now send it this message image,
and it will automatically fetch

00:31:33.220 --> 00:31:35.040
the picture of that guy for me.

00:31:36.540 --> 00:31:38.050
and it actually does it in a delayed way.

00:31:38.090 --> 00:31:42.030
We have this incredible
deferred faulting.

00:31:42.170 --> 00:31:44.840
You should really go to some of the
advanced EOF things and learn about this.

00:31:44.840 --> 00:31:45.680
It's hilarious.

00:31:45.680 --> 00:31:48.300
But the way we can keep stuff from being
fetched until it's actually needed.

00:31:48.300 --> 00:31:49.880
These engineering guys,
they've done a lot of work to

00:31:49.880 --> 00:31:52.380
minimize the hits to your database.

00:31:52.640 --> 00:31:55.720
So this is, I'm editing a document
here and I wanna save this.

00:31:55.720 --> 00:32:00.640
Let's call this,
put it on ye old desktop here.

00:32:00.640 --> 00:32:04.530
This is my elections.

00:32:05.700 --> 00:32:28.200
[Transcript missing]

00:32:30.120 --> 00:32:32.610
Kind of like the ice capades with
all this stuff sliding in and out.

00:32:32.710 --> 00:32:36.600
It's actually much more powerful and
extensible than the old Project Builder.

00:32:36.600 --> 00:32:39.040
I admit it takes a
little getting used to,

00:32:39.260 --> 00:32:42.340
but I found that actually after
I read some of the documentation

00:32:42.340 --> 00:32:44.860
about Project Builder,
I liked it quite a bit more than

00:32:44.910 --> 00:32:46.600
I did before I read the documentation.

00:32:46.600 --> 00:32:50.600
This is essentially your
development environment.

00:32:50.600 --> 00:32:52.600
You compile things in here,
you add resources,

00:32:52.600 --> 00:32:54.600
you check them into and
out of CVS if you want.

00:32:54.700 --> 00:32:56.600
You can hear all about
that in other sessions.

00:32:56.600 --> 00:32:58.600
I'm going to use it minimally later.

00:32:59.630 --> 00:33:00.740
Oh, now we're going to have another demo.

00:33:00.750 --> 00:33:01.160
That's great.

00:33:01.160 --> 00:33:01.400
Great.

00:33:01.400 --> 00:33:02.600
We had one slide in
between those two demos.

00:33:02.600 --> 00:33:04.540
I thought I could cool down
a little bit more first.

00:33:04.610 --> 00:33:07.800
Can I have this thing back, please?

00:33:08.990 --> 00:33:11.300
Let's build a project.

00:33:11.340 --> 00:33:14.210
I want to make a new project.

00:33:14.240 --> 00:33:18.000
We have all these wizards that
certain people feel they need to use,

00:33:18.070 --> 00:33:20.590
but we're going to
actually choose a plain,

00:33:20.640 --> 00:33:23.260
unassisted WebObjects application here.

00:33:23.270 --> 00:33:24.550
What do we call this?

00:33:24.550 --> 00:33:25.200
Woe is me.

00:33:25.200 --> 00:33:26.260
How about that?

00:33:29.150 --> 00:33:31.580
I want to make a simple
application that lets us browse

00:33:31.580 --> 00:33:33.170
for presidential candidates.

00:33:33.230 --> 00:33:35.000
The idea is going to be I type
part of the name Hayman,

00:33:35.010 --> 00:33:37.270
and I can see if anyone named
Hayman has ever run for president,

00:33:37.270 --> 00:33:39.180
which I'll tell you in
advance none of them have.

00:33:39.270 --> 00:33:40.800
But we can try other things as well.

00:33:40.800 --> 00:33:44.400
So, Project Builder coordinates web
components in your application.

00:33:44.400 --> 00:33:47.010
Here's a main.wo that we
were talking about before.

00:33:47.120 --> 00:33:50.220
It's a plain, empty little one that
doesn't do very much.

00:33:50.220 --> 00:33:51.510
It coordinates classes.

00:33:51.610 --> 00:33:53.450
We've got an application object here.

00:33:53.450 --> 00:33:54.140
Oh, big font.

00:33:54.290 --> 00:33:54.910
Here we go.

00:33:54.970 --> 00:33:57.480
An application object that doesn't
really do anything other than to say,

00:33:57.480 --> 00:34:00.830
hi, welcome to Woe Is Me,
and a session object that

00:34:00.880 --> 00:34:02.920
will be shared by all users.

00:34:02.920 --> 00:34:04.780
This is really all the code
there is in this application.

00:34:04.780 --> 00:34:07.590
There's a few lines of these
trivial classes here ready

00:34:07.590 --> 00:34:09.200
for you to extend as needed.

00:34:09.200 --> 00:34:16.390
But I want to start by working on this
main WebObjects interface file here.

00:34:30.280 --> 00:34:30.280
So this is that editor we
were talking about before.

00:34:30.280 --> 00:34:30.280
If you like, you can think of this as
just a simple HTML editor,

00:34:30.280 --> 00:34:30.280
Explore, Exploder?

00:34:30.280 --> 00:34:30.280
Okay, Exploder, why not?

00:34:30.670 --> 00:34:34.010
You can fool with the fonts and you can
make things bigger and you can bring up

00:34:34.010 --> 00:34:37.880
a color panel and be sure to go to the
session 957 on using the color panel.

00:34:40.300 --> 00:34:41.430
: There isn't a session.

00:34:41.430 --> 00:34:44.200
I like that because this takes me
back to the old Next Color panel.

00:34:44.350 --> 00:34:46.220
It's so fun to see
these things still here.

00:34:46.220 --> 00:34:48.180
And if you want,
this is just editing HTML.

00:34:48.180 --> 00:34:50.610
I haven't really put anything
very interesting in it.

00:34:50.610 --> 00:34:52.600
And if you wanted to,
you could pop over and just

00:34:52.650 --> 00:34:55.160
look at the raw HTML and fool
with it in here if you wanted.

00:34:55.160 --> 00:34:56.810
Nothing to this one yet.

00:34:58.050 --> 00:35:00.610
But it gets more interesting when
I want to put dynamic objects,

00:35:00.650 --> 00:35:03.050
which are what a lot of these
little buttons are up here,

00:35:03.120 --> 00:35:05.180
into my application.

00:35:05.220 --> 00:35:07.320
What we really want to
do here is have a form.

00:35:07.320 --> 00:35:11.140
That's a form,
going to be rendered as a form

00:35:11.140 --> 00:35:12.400
on the user's web browser.

00:35:12.500 --> 00:35:14.120
We'll put in someone's last name.

00:35:14.120 --> 00:35:18.140
We'll type part of a last name in
the text field and a submit button.

00:35:18.160 --> 00:35:19.720
I want to do a legitimate survey here.

00:35:19.720 --> 00:35:22.200
Has anybody in the history of
the web ever felt the need to

00:35:22.270 --> 00:35:24.750
actually click on the reset button?

00:35:25.400 --> 00:35:38.900
[Transcript missing]

00:35:39.470 --> 00:35:44.450
: I've had all this politics
on the brain for a while here.

00:35:44.690 --> 00:35:48.230
Now, let's actually arrange to fetch
some of these candidate objects.

00:35:48.260 --> 00:35:50.000
Now, these tools talk very nicely.

00:35:50.060 --> 00:35:52.760
You'll recall that we had our
modeler define a candidate object

00:35:52.910 --> 00:35:55.790
with a first name and a last name
and a relationship to a party.

00:35:55.790 --> 00:35:59.580
And if I drag this little object
out here and into this view,

00:35:59.580 --> 00:36:03.860
it's going to add my object model
to the big woes me application.

00:36:03.860 --> 00:36:07.310
And it's going to add what
we call a display group to

00:36:07.310 --> 00:36:09.520
this particular component.

00:36:09.520 --> 00:36:12.750
And a display group is this total
Swiss Army knife object that knows

00:36:12.750 --> 00:36:14.580
how to fetch a certain kind of object.

00:36:14.600 --> 00:36:16.460
In this case, candidates.

00:36:16.520 --> 00:36:19.870
It knows how to collect the criteria
of what candidate you want to fetch.

00:36:19.890 --> 00:36:20.810
Last name is like this.

00:36:20.810 --> 00:36:22.460
It knows how to send them
back to you in batches.

00:36:22.460 --> 00:36:23.380
Here's the first 10.

00:36:23.380 --> 00:36:24.260
Here's the next 10.

00:36:24.260 --> 00:36:25.240
Here's the next 10.

00:36:25.280 --> 00:36:28.550
So all you need to do is
draw some of those lines to

00:36:28.550 --> 00:36:31.580
tell the objects in the UI,
in the top half,

00:36:31.660 --> 00:36:35.500
what messages should be sent to
the objects back on the server

00:36:35.500 --> 00:36:38.480
to coordinate all this fetching.

00:36:39.080 --> 00:36:41.520
So one might start with,
let's have that submit

00:36:41.650 --> 00:36:44.720
button send the message,
"Qualify data source."

00:36:44.940 --> 00:36:45.610
Draw a line like that.

00:36:45.650 --> 00:36:48.450
Now every time a user sees this
submit button in their web browser,

00:36:48.450 --> 00:36:51.790
it's going to send the form back to
my application and send the message,

00:36:51.790 --> 00:36:54.030
Qualify Data Source,
to the display group.

00:36:54.100 --> 00:36:57.690
And the display group is then going
to collect some candidate objects

00:36:57.690 --> 00:36:59.570
defined according to my wishes.

00:36:59.600 --> 00:37:03.700
This display group also knows the various
properties of the object it's fetching.

00:37:03.700 --> 00:37:05.880
So here's all the
properties of candidates,

00:37:05.900 --> 00:37:07.370
and you can hook them up here.

00:37:07.370 --> 00:37:11.490
I want the candidate's last name as
we're fetching it to be drawn from there.

00:37:12.140 --> 00:37:14.250
By the way,
I want all the iServices guys up here,

00:37:14.250 --> 00:37:16.610
I want them all to cough
if I miss anything obvious.

00:37:16.620 --> 00:37:19.030
Like if I forget to save something,
could you all just cough a little bit

00:37:19.030 --> 00:37:20.400
and then I'll just remember to save it?

00:37:20.400 --> 00:37:20.970
Thank you.

00:37:24.280 --> 00:37:25.190
Well, we could go with this.

00:37:25.190 --> 00:37:26.640
We could go with this application.

00:37:26.640 --> 00:37:27.640
We could save it and we could run it.

00:37:27.670 --> 00:37:31.870
And what would be one slight
problem with this application?

00:37:32.000 --> 00:37:46.100
[Transcript missing]

00:37:46.680 --> 00:37:48.110
Let's put in a table.

00:37:48.230 --> 00:37:51.020
WebObjects has this little
table thing with an idea of,

00:37:51.100 --> 00:37:53.600
if you want, a second row that repeats
over and over again.

00:37:53.600 --> 00:37:58.350
So I want to have one row of this table
for every candidate that comes back.

00:37:58.420 --> 00:38:04.390
And I can ask this display group,
give me all of the displayed objects.

00:38:04.720 --> 00:38:14.710
on that repetition.

00:38:14.710 --> 00:38:14.710
It's a common design pattern.

00:38:14.710 --> 00:38:14.710
You have a repetition associated
with something that's going to

00:38:14.710 --> 00:38:14.710
be done over and over again.

00:38:14.710 --> 00:38:14.710
So we're going to get one
row of this table for every

00:38:14.710 --> 00:38:14.710
candidate that was fetched.

00:38:15.490 --> 00:38:19.790
It's also a common design pattern to use
a special object to go through the table,

00:38:19.840 --> 00:38:20.760
kind of an iterator object.

00:38:20.760 --> 00:38:22.440
So I might want to
come down here and say,

00:38:22.440 --> 00:38:28.740
I'd like to add a candidate
object of type can.

00:38:28.740 --> 00:38:29.890
I don't even have to
type the whole thing.

00:38:29.900 --> 00:38:30.420
It's type can.

00:38:30.420 --> 00:38:32.870
I want to create a candidate
object that's private to

00:38:32.920 --> 00:38:34.480
this particular component.

00:38:35.880 --> 00:38:38.530
And that candidate,
it's got a first name and a last name,

00:38:38.610 --> 00:38:42.220
but if I make an association like this,
item, this object will be set once for

00:38:42.220 --> 00:38:44.370
everything that came back on the list.

00:38:44.380 --> 00:38:46.980
If I fetch 37 candidates,
I'll have 37 rows in the table.

00:38:47.030 --> 00:38:49.500
I'll actually have 38 rows
because this is a title row.

00:38:49.500 --> 00:38:52.240
Name, and I'll fill these in later.

00:38:53.780 --> 00:38:56.030
Well, if I click on this button here,
these are WebObjects strings.

00:38:56.030 --> 00:38:59.200
These are the simplest possible objects
in the entire WebObjects framework.

00:38:59.200 --> 00:39:02.910
They send a message, they get a result,
they take the string,

00:39:02.920 --> 00:39:04.640
they put it into the HTML.

00:39:05.350 --> 00:39:09.100
Well, I can have those send a
message like first name to

00:39:09.170 --> 00:39:10.260
the current candidate object.

00:39:10.360 --> 00:39:12.610
Oh, there's too much junk up here.

00:39:12.690 --> 00:39:14.800
First name to the candidate object.

00:39:14.860 --> 00:39:17.270
You draw a line like that.

00:39:17.360 --> 00:39:20.230
Last name to this other string object.

00:39:20.620 --> 00:39:23.470
And this is probably worth actually
trying this to see if it works.

00:39:23.490 --> 00:39:25.130
If it doesn't work,
we'll just say goodnight, it'll be great.

00:39:25.190 --> 00:39:27.080
But this is a good starting point here.

00:39:27.080 --> 00:39:28.890
This will actually display candidates.

00:39:28.890 --> 00:39:30.780
It will fetch a list
of candidate objects,

00:39:30.880 --> 00:39:32.610
it will iterate through
them one at a time,

00:39:32.610 --> 00:39:34.830
and send the first name
and last name to each one.

00:39:34.840 --> 00:39:37.400
Get on with it,
I can hear everyone saying.

00:39:37.400 --> 00:39:40.290
So we come back here to Project Builder,
we compile, always a good opportunity to

00:39:40.290 --> 00:39:41.500
have a little drink of water.

00:39:46.750 --> 00:39:50.200
compiling the various Java classes,
it's making a big honkin' jar.

00:39:50.200 --> 00:39:51.930
What a WebObjects
application actually is,

00:39:51.980 --> 00:39:54.860
it's kind of a complicated
directory with like your .html

00:39:54.890 --> 00:39:57.960
files and your .wad files,
and somewhere in there, a jar,

00:39:57.960 --> 00:39:59.690
a Java archive of all of your classes.

00:39:59.690 --> 00:40:02.440
Then there's all these other
frameworks somewhere else in

00:40:02.440 --> 00:40:05.480
the computer that themselves
contain jars and other resources.

00:40:05.580 --> 00:40:07.520
And when you run a
WebObjects application,

00:40:07.570 --> 00:40:10.780
you're actually launching this
shell script that looks all around,

00:40:10.780 --> 00:40:13.490
that constructs this humongous
class path to find all the objects

00:40:13.680 --> 00:40:17.460
in all the jars all over the place,
and runs your main class to

00:40:17.470 --> 00:40:19.960
get the application going.

00:40:19.960 --> 00:40:23.890
And as a convenience,
it also launches your web browser,

00:40:23.960 --> 00:40:28.140
see there's the class path by the way,
you didn't believe me, but look at that,

00:40:28.180 --> 00:40:29.700
holy mackerel, I'm glad I don't have

00:40:29.900 --> 00:40:35.500
This is actually going to launch my web
browser and have it hopefully display

00:40:35.500 --> 00:40:37.280
some of these candidates for me here.

00:40:39.290 --> 00:40:40.960
Oh, there's my fantastic form.

00:40:40.960 --> 00:40:44.940
Let's compare that with what the
original actually looked like.

00:40:45.030 --> 00:40:47.770
Everybody whose last name begins with H.

00:40:48.630 --> 00:40:52.060
There's a whole bunch of guys
whose names began with H.

00:40:52.100 --> 00:40:55.210
How many people can
identify Austin Holcomb?

00:40:55.300 --> 00:41:07.300
[Transcript missing]

00:41:07.450 --> 00:41:08.700
Well, let's find out.

00:41:08.700 --> 00:41:13.800
Given that we have a candidate object,
it's fairly easy to add another string,

00:41:13.850 --> 00:41:14.980
one of these strings.

00:41:15.000 --> 00:41:20.580
Let's ask the candidate for its
party and ask the party for its name.

00:41:21.310 --> 00:41:23.500
I'm now working my way
through that object graph.

00:41:23.500 --> 00:41:26.400
I've descended through a
couple of levels down here.

00:41:26.480 --> 00:41:30.450
And what's actually going on as I'm
doing this back in the WAD file is

00:41:30.450 --> 00:41:34.310
there's now a string called string3,
and it's getting its value by sending

00:41:34.420 --> 00:41:38.890
the message party to the candidate and by
sending the message name to that thing.

00:41:39.800 --> 00:41:55.600
[Transcript missing]

00:42:25.310 --> 00:42:25.310
But by walking through
this graph of objects,

00:42:25.310 --> 00:42:25.310
you can put up some pretty interesting
data pretty fast on the screen.

00:42:25.310 --> 00:42:25.310
And I'd like to take advantage
of another relationship that's

00:42:25.310 --> 00:42:25.310
defined in this database.

00:42:25.310 --> 00:42:25.310
You'll see that each candidate
has a thing called campaigns.

00:42:25.310 --> 00:42:25.310
That's a list of all the
campaigns that they were in.

00:42:25.310 --> 00:42:25.310
You ran in 2000 and '96 and '92
and '37 and 1776 and whenever

00:42:25.310 --> 00:42:25.310
else they had elections.

00:42:25.310 --> 00:42:25.310
I'd like to display all of those
campaigns for each of these candidates.

00:42:25.310 --> 00:42:25.310
Because that gives me -- let's
put a nice little table on here.

00:42:25.310 --> 00:42:25.310
We've got to be neat.

00:42:26.400 --> 00:42:28.300
Elections.

00:42:28.300 --> 00:42:30.700
Which elections was this guy actually in?

00:42:30.980 --> 00:42:33.290
Well,
let's put in a handy repetition object.

00:42:33.290 --> 00:42:34.800
See that little loopy thing there?

00:42:34.800 --> 00:42:37.570
That says, let's just go over some list,
just like we did with the table,

00:42:37.570 --> 00:42:39.160
and do something over and over again.

00:42:39.160 --> 00:42:42.340
Let's loop over the
candidate's election objects,

00:42:42.350 --> 00:42:43.160
like that.

00:42:43.190 --> 00:42:47.090
Let me create another little
object here called an election.

00:42:47.130 --> 00:42:51.190
This will be a little private
instance of the election class.

00:42:51.300 --> 00:43:03.900
[Transcript missing]

00:43:05.210 --> 00:43:08.050
Now at this point we have to actually
pause and compile because in all that

00:43:08.150 --> 00:43:10.380
it added a whole line of code over here.

00:43:10.410 --> 00:43:14.140
It added this line that declared
an object called election.

00:43:14.140 --> 00:43:15.420
So we'll just stop.

00:43:15.420 --> 00:43:16.650
We'll recompile.

00:43:16.680 --> 00:43:17.930
Have another drink of water.

00:43:21.270 --> 00:43:21.840
Close this browser.

00:43:21.900 --> 00:43:23.090
It'll open it again in a second here.

00:43:23.090 --> 00:43:25.430
Our lovely WoeIsMe application.

00:43:30.360 --> 00:43:31.090
Look at that class.

00:43:31.180 --> 00:43:34.010
I just love that class path when it
goes by because it reminds me how

00:43:34.010 --> 00:43:35.800
much work WebObjects is doing for me.

00:43:35.870 --> 00:43:40.080
Look at all that stuff it's picking
up that I didn't have to describe.

00:43:40.110 --> 00:43:42.510
You have a certain amount of
patter when you're doing this here.

00:43:43.350 --> 00:43:45.720
Hey, H.

00:43:46.070 --> 00:43:48.550
Oh, look at all these guys that ran
all these different elections.

00:43:48.690 --> 00:43:49.500
Somebody ran in 1892.

00:43:49.500 --> 00:43:51.050
My database only goes back to 1892.

00:43:51.080 --> 00:43:51.900
I'm sorry.

00:43:51.900 --> 00:43:54.260
I could not get the complete
database done in time.

00:43:54.260 --> 00:43:56.280
Maybe next year we'll go back
to the Magna Carta and have

00:43:56.410 --> 00:43:57.800
every election since then.

00:43:59.780 --> 00:44:01.220
For now, we can see, oh,
I recognize a couple of these guys.

00:44:01.220 --> 00:44:04.240
John Hagelin of the
National Law Party and Warren Harding.

00:44:04.240 --> 00:44:05.220
He was somebody, wasn't he?

00:44:05.220 --> 00:44:05.950
And Benjamin Harrison.

00:44:06.020 --> 00:44:06.410
Didn't he win?

00:44:06.420 --> 00:44:06.810
I don't know.

00:44:06.810 --> 00:44:07.580
We'll get to that later.

00:44:07.580 --> 00:44:11.210
But it might be interesting to click
on some of these elections and find

00:44:11.210 --> 00:44:13.490
out a little more information about it.

00:44:13.500 --> 00:44:16.080
I gather that 2000 election
was kind of interesting.

00:44:16.080 --> 00:44:18.540
A little news about that
filtered over the border.

00:44:18.760 --> 00:44:22.780
So it might be useful to have a
page where we can display some

00:44:22.780 --> 00:44:25.690
details about a particular election.

00:44:25.690 --> 00:44:28.700
This gives me an excuse to introduce
the idea of a component that does one

00:44:28.780 --> 00:44:30.280
thing and that does one thing well.

00:44:30.290 --> 00:44:34.470
I want to make a little
component in WebObjects Builder.

00:44:34.470 --> 00:44:36.110
I'll make a new one.

00:44:36.540 --> 00:44:37.340
And actually, you know what?

00:44:37.340 --> 00:44:38.150
I got two ways to do it.

00:44:38.160 --> 00:44:40.800
And the other way is better for
reasons that are not worth explaining

00:44:40.800 --> 00:44:42.020
right at this point in time.

00:44:42.090 --> 00:44:47.020
I want to make a new WebObjects
component inside Project Builder.

00:44:47.020 --> 00:44:48.640
For anyone who's wondering
why I do it this way,

00:44:48.690 --> 00:44:49.490
take a look at Radar.

00:44:54.340 --> 00:44:55.350
Election Details.

00:44:55.360 --> 00:44:57.860
And, you know,
you should go to the Project Builder

00:44:57.860 --> 00:45:01.580
session to figure out what the heck is
going on with all these target things.

00:45:01.620 --> 00:45:03.070
I think that's the one I want.

00:45:03.070 --> 00:45:03.780
I don't know.

00:45:03.860 --> 00:45:05.760
Is there coughing going on over there?

00:45:05.810 --> 00:45:06.370
No coughing.

00:45:06.510 --> 00:45:06.910
Good.

00:45:06.910 --> 00:45:07.680
I'm all right.

00:45:07.750 --> 00:45:10.680
I've created another
component and I've added it.

00:45:10.860 --> 00:45:11.800
- To my application.

00:45:11.800 --> 00:45:14.040
And the idea of this one is gonna be,
it's gonna have its own

00:45:14.200 --> 00:45:15.180
private election object.

00:45:15.180 --> 00:45:17.080
Let's create another one.

00:45:17.110 --> 00:45:19.700
And let's remember to set it,
'cause we wanna set it

00:45:19.700 --> 00:45:20.970
from the first page.

00:45:21.320 --> 00:45:27.840
The fabulous election of some year.

00:45:27.940 --> 00:45:31.680
And we're going to display everybody
who ran in this particular election.

00:45:31.790 --> 00:45:32.870
Another table.

00:45:32.940 --> 00:45:34.790
You don't have to talk,
you can really do this pretty fast.

00:45:35.290 --> 00:45:39.080
Each election we want to go
through all the campaigns

00:45:39.080 --> 00:45:41.040
associated with that election.

00:45:41.180 --> 00:45:43.920
We want to have a campaign
object on this page as well,

00:45:43.920 --> 00:45:47.110
because these are separate pages,
separate objects.

00:45:49.480 --> 00:45:51.860
And for each campaign,
that's going to be my list.

00:45:51.930 --> 00:45:55.380
I want to display the first
name and the last name,

00:45:55.390 --> 00:45:57.390
just like we did before,
of the candidate relationship.

00:45:57.410 --> 00:46:00.400
I've got a lot of
relationships in this database.

00:46:00.660 --> 00:46:03.040
First name and last name.

00:46:03.040 --> 00:46:06.700
Let's display the party
because it's so easy.

00:46:07.520 --> 00:46:07.760
It is.

00:46:07.980 --> 00:46:08.390
Stop laughing.

00:46:08.400 --> 00:46:09.210
It is easy.

00:46:09.320 --> 00:46:10.300
You'll love this.

00:46:10.420 --> 00:46:13.090
Party, the party's name.

00:46:13.640 --> 00:46:16.110
And let's put titles on it because
my mother might be watching

00:46:16.110 --> 00:46:18.490
the DVD and she'll wonder why
I didn't put titles on here.

00:46:18.520 --> 00:46:20.250
Candidate.

00:46:20.270 --> 00:46:22.300
By the way,
I'd like to say hello to everyone

00:46:22.300 --> 00:46:23.870
that's watching the DVD in the future.

00:46:23.870 --> 00:46:25.900
Hello, people in the future
with the flying cars.

00:46:25.900 --> 00:46:26.530
How are you?

00:46:33.520 --> 00:46:35.840
How is WebObjects version 14?

00:46:35.840 --> 00:46:41.500
Are you looking back at this and going,
that was so primitive,

00:46:41.550 --> 00:46:42.880
I can't believe it.

00:46:43.560 --> 00:46:44.690
How did my children turn out?

00:46:44.690 --> 00:46:45.280
Did they go to college?

00:46:45.350 --> 00:46:45.930
I hope so.

00:46:45.970 --> 00:46:49.130
Can I expense their tuition now?

00:46:49.200 --> 00:46:51.000
Can I expense their tuition with
that because I mentioned them?

00:46:51.000 --> 00:46:51.730
No, I don't think so.

00:46:51.740 --> 00:46:54.340
Pari, party.

00:46:56.160 --> 00:46:56.810
Thank you.

00:46:56.950 --> 00:46:58.980
I spelled party wrong.

00:46:59.010 --> 00:47:00.470
And let's get fancy here.

00:47:00.500 --> 00:47:02.240
Let's display, whoop, no, not up there.

00:47:02.240 --> 00:47:04.160
Let's display how many
votes each person got,

00:47:04.160 --> 00:47:07.910
because this really gets into
borderline abuse of this whole

00:47:07.910 --> 00:47:09.600
key value coding business here.

00:47:09.640 --> 00:47:12.360
But if you dig deeply
into this kind of stuff,

00:47:12.380 --> 00:47:15.720
you can say for each, where are we here?

00:47:15.820 --> 00:47:19.580
For each campaign, I'm gonna add up,
take all the votes objects

00:47:19.580 --> 00:47:21.190
and display them there.

00:47:21.230 --> 00:47:23.360
But I don't really wanna
list all the votes objects.

00:47:23.470 --> 00:47:25.410
What I wanna do is,

00:47:25.640 --> 00:47:30.380
is throwing this little token that says,
"Sum." Don't list the things

00:47:30.380 --> 00:47:32.150
on the right hand side,
add them up.

00:47:32.260 --> 00:47:34.900
That's going to add up how
many votes each guy got.

00:47:35.240 --> 00:47:39.170
All that is a nice object that can
display everything about one election,

00:47:39.430 --> 00:47:43.090
provided we tell it
which election we want.

00:47:43.330 --> 00:47:45.100
One could do that on the first page.

00:47:45.100 --> 00:47:46.900
Remember the main page?

00:47:47.000 --> 00:47:49.060
Remember how we had a
hyperlink or a piece of text

00:47:49.060 --> 00:47:50.440
displaying the election year?

00:47:50.440 --> 00:47:53.410
I can make that into a hyperlink
by clicking on that little

00:47:53.410 --> 00:47:56.760
button which wraps this thing
inside a WO hyperlink object.

00:47:57.060 --> 00:47:59.600
And hyperlinks actually send
an action message back to the

00:47:59.600 --> 00:48:02.560
application when they're clicked on,
just like my submit button did.

00:48:02.560 --> 00:48:05.900
But I want this one to send
an application of my choosing.

00:48:05.900 --> 00:48:09.680
Show me all about this here election.

00:48:09.680 --> 00:48:12.060
How long can an identifier be in Java?

00:48:12.060 --> 00:48:12.920
I don't know.

00:48:12.980 --> 00:48:14.650
It's at least that long.

00:48:14.680 --> 00:48:17.450
And I'll tell it to go, oh,
I just typed E and it knew I had a page

00:48:17.590 --> 00:48:20.020
called election details in there already.

00:48:21.630 --> 00:48:24.030
and we'll arrange for that hyperlink.

00:48:24.050 --> 00:48:28.240
"Show me all about this here
election" to be called for every one.

00:48:28.240 --> 00:48:29.240
These are going to be hyperlinks.

00:48:29.240 --> 00:48:31.340
Even though there's 30
election years on the page,

00:48:31.340 --> 00:48:34.160
they're all sending the same
message back to WebObjects.

00:48:34.160 --> 00:48:37.880
WebObjects knew how it made this page,
so it can easily just figure out which

00:48:38.220 --> 00:48:41.720
of all those 35 election objects is
the one that sent me this message.

00:48:41.790 --> 00:48:44.170
This is really a powerful concept.

00:48:44.180 --> 00:48:46.460
You're not encoding junk
into the URLs yourself as

00:48:46.530 --> 00:48:47.940
you generate these pages.

00:48:47.940 --> 00:48:50.340
You're letting WebObjects do all the
heavy lifting of sorting out these

00:48:50.340 --> 00:48:54.650
collections of objects and indicating
to you which one was actually selected.

00:48:55.110 --> 00:48:57.000
Save that, save that,
come back to project-- oh, no, wait,

00:48:57.060 --> 00:48:57.940
what are you doing?

00:48:57.980 --> 00:48:59.200
Sorry, wrong application.

00:48:59.420 --> 00:49:01.010
Save that.

00:49:01.240 --> 00:49:02.050
Okay, here we go.

00:49:02.200 --> 00:49:05.540
Steve's going to try to type a line
of Java code without making a mistake.

00:49:05.990 --> 00:49:08.700
Here's my main application.

00:49:08.760 --> 00:49:11.480
Here is my nice
show-me-all-about-this-here

00:49:11.480 --> 00:49:15.220
election method that I just asked
WebObjects Builder to create for me.

00:49:15.260 --> 00:49:16.860
You can see what it's doing here.

00:49:16.860 --> 00:49:19.440
It's looking up the page
called Election Details,

00:49:19.440 --> 00:49:21.080
and it's returning that page.

00:49:22.810 --> 00:49:27.000
That page will be blank if I don't
dive in here and rescue the situation.

00:49:27.000 --> 00:49:29.990
Well, I'm going to tell the next page.

00:49:30.600 --> 00:49:54.000
[Transcript missing]

00:49:54.440 --> 00:49:57.740
Oh, is there any hope that I've done
all that without making a mistake?

00:49:57.790 --> 00:50:00.090
Didn't hear any coughing over here.

00:50:02.270 --> 00:50:03.340
Oh, not the sneeze!

00:50:03.460 --> 00:50:04.830
Oh no, not the sneeze!

00:50:04.840 --> 00:50:07.030
That was a secret signal for
something that I've forgotten.

00:50:07.030 --> 00:50:08.200
Okay.

00:50:08.200 --> 00:50:11.280
Let's try running this again here.

00:50:12.400 --> 00:50:15.600
How come no one's asked why I'm running
the classic Internet Explorer yet

00:50:15.600 --> 00:50:17.710
and not the Carbon one?

00:50:19.020 --> 00:50:21.700
will become clear in a moment.

00:50:21.770 --> 00:50:26.870
It's part of my fascination with XML and
my shock and horror at how some things

00:50:26.870 --> 00:50:32.820
aren't implemented as widely as you hope
when you start designing your WWDC demo.

00:50:33.210 --> 00:50:33.920
Thank you.

00:50:34.050 --> 00:50:35.250
That will become clear in a second here.

00:50:35.250 --> 00:50:37.080
Here's a bunch of guys.

00:50:37.080 --> 00:50:38.420
They ran in all these elections.

00:50:38.420 --> 00:50:39.930
Tell me about the 2000 election.

00:50:41.790 --> 00:50:45.760
All these guys ran in the year 2000,
and I've totaled up their votes.

00:50:45.760 --> 00:50:49.160
Well, that table,
that's not the most attractive

00:50:49.160 --> 00:50:50.940
table I could possibly recommend.

00:50:50.940 --> 00:50:53.540
You know, you don't believe me,
this is a real database.

00:50:53.540 --> 00:50:54.580
Tell me about 1952.

00:50:54.580 --> 00:50:57.090
Who here voted in the 1952 election?

00:50:57.090 --> 00:50:58.020
Bob, did you?

00:50:58.020 --> 00:50:58.470
No?

00:50:58.610 --> 00:50:59.130
Okay.

00:51:01.950 --> 00:51:03.190
Well, the 2000,
that's one that I remember,

00:51:03.200 --> 00:51:04.060
the 2000 election.

00:51:04.080 --> 00:51:06.690
And now that I've got
this page going here,

00:51:06.690 --> 00:51:09.400
we'll look at the details page.

00:51:09.440 --> 00:51:11.660
And the first thing I might
do is to take that string

00:51:11.660 --> 00:51:14.920
that's representing the number,
and in the inspector, one can say,

00:51:14.920 --> 00:51:18.020
don't just pump out the number,
pump it out with commas,

00:51:18.020 --> 00:51:20.040
because that just looks so nice.

00:51:20.040 --> 00:51:21.540
Makes a change like that.

00:51:21.580 --> 00:51:22.510
It's coming out with commas.

00:51:23.590 --> 00:51:24.280
Whoo, yeah.

00:51:24.280 --> 00:51:26.600
You can take a,
you see this little path down here?

00:51:26.600 --> 00:51:28.020
This is how things are nested.

00:51:28.020 --> 00:51:30.610
I've got a string inside a table data,
inside a table row,

00:51:30.610 --> 00:51:31.980
inside a WL repetition.

00:51:31.980 --> 00:51:34.040
I could take that table
data and inspect it and say,

00:51:34.150 --> 00:51:36.560
you should horizontally align
everything to the right,

00:51:36.560 --> 00:51:38.560
because that would probably look better.

00:51:38.560 --> 00:51:41.250
That does look better.

00:51:41.650 --> 00:51:45.110
You can even come in here and say,
let's add in this first

00:51:45.110 --> 00:51:46.590
cell an image object.

00:51:46.710 --> 00:51:51.120
Remember I added that image
relationship about 23 minutes

00:51:51.120 --> 00:51:54.780
and 11 seconds ago in the demo?

00:51:55.350 --> 00:51:56.440
That was not for no reason.

00:51:56.520 --> 00:51:59.200
Try translating that sentence.

00:52:05.600 --> 00:52:09.680
Remember, my candidate object has a
relationship to an image object.

00:52:09.680 --> 00:52:12.290
Images have some data,
and they have a MIME type that just

00:52:12.290 --> 00:52:13.780
says whether they're GIF or JPEG.

00:52:13.780 --> 00:52:17.600
I happen to have a database
table full of images here.

00:52:17.600 --> 00:52:19.590
Conveniently.

00:52:19.600 --> 00:52:21.020
Oh, that's better.

00:52:21.130 --> 00:52:22.600
How do you like that?

00:52:22.770 --> 00:52:25.110
Would you vote for this guy?

00:52:26.500 --> 00:52:31.740
Well, a lot of people voted
for some of these guys.

00:52:31.740 --> 00:52:35.810
And to my naive view,
I might think that since this

00:52:35.920 --> 00:52:43.450
number is greater than this number,
but what do I know?

00:52:43.450 --> 00:52:43.450
I don't know.

00:52:47.500 --> 00:52:48.340
I don't know anything.

00:52:48.340 --> 00:52:49.630
I have a Canadian math degree.

00:52:49.650 --> 00:52:52.550
We do it a different way up there.

00:52:56.120 --> 00:52:59.700
So you know what,
I'm kind of a visual guy.

00:52:59.700 --> 00:53:02.950
Not only am I a rugged outdoorsman,
but I'm also kind of a visual guy.

00:53:02.950 --> 00:53:08.240
And I would like to leverage some work
that's already been done in this area.

00:53:08.240 --> 00:53:10.760
How many of you have
heard of SVG from Adobe?

00:53:10.860 --> 00:53:12.760
Scalable Vector Graphics.

00:53:12.790 --> 00:53:15.530
Looks a lot like PostScript in many ways,
only it's XML.

00:53:15.530 --> 00:53:18.390
It's a way of describing an image
and sending it to a browser,

00:53:18.390 --> 00:53:20.590
and then the browser is
going to draw it for you.

00:53:20.940 --> 00:53:23.680
I want to draw those little maps
like they have on election night

00:53:23.680 --> 00:53:25.260
with all the states colored in.

00:53:25.260 --> 00:53:26.040
Wouldn't that be cool?

00:53:26.040 --> 00:53:28.510
I've already got in my
database information about,

00:53:28.510 --> 00:53:31.260
you didn't see the electoral,
there's an electoral votes

00:53:31.260 --> 00:53:33.440
table in there as well,
but how many electoral

00:53:33.440 --> 00:53:34.630
votes each guy got.

00:53:34.640 --> 00:53:37.660
Wouldn't it be cool if I could hook
up the list of who won electoral

00:53:37.690 --> 00:53:40.910
votes where to something that
knew how to draw a list of states?

00:53:41.000 --> 00:53:41.610
Wouldn't that be cool?

00:53:42.760 --> 00:53:43.260
No?

00:53:43.260 --> 00:53:43.960
Oh, come on, please.

00:53:43.960 --> 00:53:44.860
Thank you.

00:53:44.860 --> 00:53:45.360
Okay, thank you.

00:53:49.000 --> 00:53:50.500
Well, too bad that part's not working.

00:53:50.500 --> 00:53:51.120
No, no.

00:53:51.120 --> 00:53:53.590
Actually, no, it is working.

00:53:53.600 --> 00:53:56.370
It's not going to work yet
because I have to add a couple

00:53:56.490 --> 00:53:58.040
of frameworks to my project.

00:53:58.080 --> 00:54:02.190
Frameworks are collections of
objects that already exist.

00:54:02.190 --> 00:54:03.460
We give you some.

00:54:03.460 --> 00:54:07.040
I wrote some in my spare time,
and I entered that on the

00:54:07.100 --> 00:54:09.120
timesheet appropriately.

00:54:10.120 --> 00:54:14.100
And if I add them over here to—I happen
to have—I got this FireWire disk.

00:54:14.310 --> 00:54:15.950
I love them FireWire disks.

00:54:16.130 --> 00:54:18.720
Boy, oh boy,
because I've got conveniently over here

00:54:18.720 --> 00:54:22.900
some frameworks that have just been
hanging around waiting for the right time

00:54:22.900 --> 00:54:24.800
to be used in a situation just like this.

00:54:24.800 --> 00:54:27.780
Let me add three of my favorite
frameworks of objects I've personally

00:54:27.790 --> 00:54:29.750
written in the past to this application.

00:54:40.230 --> 00:54:40.230
Actually, you know what?

00:54:40.230 --> 00:54:40.230
Let me quit that.

00:54:40.230 --> 00:54:40.230
Okay, now I'm going to do this.

00:54:40.230 --> 00:54:40.230
We'll discuss that later.

00:54:41.240 --> 00:54:42.680
I want to add them,
and once again I look at all

00:54:42.730 --> 00:54:45.400
these little targets and I go,
oh man, the application server?

00:54:45.400 --> 00:54:45.830
I think so.

00:54:45.890 --> 00:54:49.300
The project builder can
build different targets.

00:54:49.350 --> 00:54:51.080
It can build a collection of
things that go for the web server,

00:54:51.140 --> 00:54:53.540
like static GIF images and stuff
that belong on the web server.

00:54:53.540 --> 00:54:55.980
But in this case, I'm adding frameworks
to the actual binary.

00:54:55.980 --> 00:54:58.720
And because I've done that,
I can take my little

00:54:58.850 --> 00:55:03.060
election details component,
go back into WebObjects builder here.

00:55:07.600 --> 00:55:08.360
And take advantage of some palettes.

00:55:08.360 --> 00:55:09.790
Remember I talked about -- oops,
pardon me.

00:55:09.970 --> 00:55:11.600
That's one app on the screen at the time.

00:55:11.600 --> 00:55:12.600
How's that?

00:55:12.710 --> 00:55:14.160
Remember I talked about palettes?

00:55:14.310 --> 00:55:17.170
These little handy collections
of pre-written objects that

00:55:17.210 --> 00:55:18.980
other people have written.

00:55:18.980 --> 00:55:20.830
You get a bunch of these with WebObjects.

00:55:20.860 --> 00:55:24.400
None of them draw maps,
but they do a number of useful things.

00:55:24.470 --> 00:55:26.370
This one does -- you know,
one of the great things about

00:55:26.370 --> 00:55:28.660
WebObjects is that this product
is so sophisticated that here's

00:55:28.660 --> 00:55:30.030
a whole palette full of objects.

00:55:30.110 --> 00:55:31.640
I have no idea what any of them do.

00:55:31.700 --> 00:55:33.740
But it comes with WebObjects.

00:55:33.740 --> 00:55:34.600
It's great.

00:55:34.810 --> 00:55:35.680
It's Smil.

00:55:35.680 --> 00:55:37.430
This is -- whoa, Smil.

00:55:37.500 --> 00:55:38.440
What is that?

00:55:38.460 --> 00:55:43.040
Synchronize multi -- is
there a session on that one?

00:55:43.080 --> 00:55:46.720
Let's hope so, because this isn't it.

00:55:46.720 --> 00:55:46.720
But let me --

00:55:47.590 --> 00:55:49.460
In addition,
I've got some palettes of my own.

00:55:49.570 --> 00:55:53.060
I'm a bit of a palette junkie,
and I've got a few of these guys.

00:55:53.060 --> 00:55:55.600
There's one, and we'll open him,
and we'll open this guy,

00:55:55.600 --> 00:55:57.980
and these are sort of
related to those frameworks.

00:55:58.000 --> 00:56:03.960
These palettes are objects
that I've collected over the

00:56:03.960 --> 00:56:09.900
years that do various useful,
interesting things.

00:56:09.900 --> 00:56:13.260
I've got some little JavaScript doodads,
and I've got a thing that makes words

00:56:13.260 --> 00:56:15.570
plural that was the big hit of WWDC 2000.

00:56:15.580 --> 00:56:16.150
Thank you very much.

00:56:17.820 --> 00:56:19.570
But, oh, wait until you see this.

00:56:19.660 --> 00:56:20.500
These draw maps.

00:56:20.660 --> 00:56:23.940
These take SVG files back on the server,
which you can create with

00:56:23.940 --> 00:56:26.920
Adobe Illustrator or a
bunch of other applications.

00:56:26.940 --> 00:56:29.300
They're just text files
that describe polygons.

00:56:29.340 --> 00:56:32.900
Line, line, line, line, line, line, line,
line, line, and then you give it a label.

00:56:32.900 --> 00:56:33.350
Montana.

00:56:33.350 --> 00:56:37.100
Line, line, line, line, line, line, line,
line, line, line, line, line, line, line,

00:56:37.130 --> 00:56:37.520
Indiana.

00:56:37.570 --> 00:56:39.240
This line and this other line, Michigan.

00:56:39.240 --> 00:56:41.040
And if you make one of these things up...

00:56:41.600 --> 00:56:45.320
Two polygons.

00:56:45.410 --> 00:56:51.840
If you have one of these things in SVG,
I wanted to find an excuse to

00:56:51.840 --> 00:56:54.620
use this Xerxes parser that
we've put into WebObjects 5.

00:56:54.620 --> 00:56:56.600
This is an XML parser
from the Apache project.

00:56:56.600 --> 00:56:59.050
And so I wrote a little thing
that would parse one of these

00:56:59.050 --> 00:57:02.230
SVG maps using this parser,
which is so easy, it's unbelievable.

00:57:02.230 --> 00:57:06.150
And every time it saw a polygon,
it would look at the name of the state,

00:57:06.150 --> 00:57:06.900
Montana.

00:57:07.620 --> 00:57:08.920
And it would consult another list.

00:57:09.010 --> 00:57:09.920
Is Montana on my list?

00:57:09.920 --> 00:57:10.900
Okay, I will fill it in.

00:57:10.960 --> 00:57:12.860
If it's not on my list,
I'll leave it outlined.

00:57:12.920 --> 00:57:16.100
And I put a bunch of these things
together on a palette like this.

00:57:16.100 --> 00:57:18.950
I've got one of Canada, one of the US,
one of Europe.

00:57:19.000 --> 00:57:22.450
I've got one of North America,
which I might as well use that one since

00:57:22.450 --> 00:57:27.120
I am thinking about my comrades back
home on holiday today at the beach.

00:57:30.000 --> 00:57:42.800
[Transcript missing]

00:57:45.350 --> 00:57:46.140
Wee!

00:57:46.150 --> 00:57:47.900
Let me draw the... Oops.

00:57:47.900 --> 00:57:49.540
Wee!

00:57:49.570 --> 00:57:49.780
There we go.

00:57:49.860 --> 00:57:53.700
That's an object that will draw maps
of Canada and or the United States,

00:57:53.700 --> 00:57:56.100
provided you tell it,
you bind it in WebObjects

00:57:56.100 --> 00:57:59.340
Builder to something else that
knows about a list of regions.

00:58:00.880 --> 00:58:03.100
This is why I love key value coding.

00:58:03.100 --> 00:58:04.130
We're going to go in here,
we're going to take the

00:58:04.200 --> 00:58:07.530
current campaign object,
take all of its electoral votes objects,

00:58:07.650 --> 00:58:10.190
ask each of them for their state,
ask each of those states

00:58:10.390 --> 00:58:13.640
for its state name,
and bind that to our selections list.

00:58:13.640 --> 00:58:17.310
Can it be that easy?

00:58:18.580 --> 00:58:20.660
People come up to me and they say, Steve,
can it, what?

00:58:20.660 --> 00:58:23.480
What?

00:58:23.480 --> 00:58:24.570
Thank you, Steve.

00:58:25.780 --> 00:58:28.100
Oh, we, well, all right.

00:58:28.130 --> 00:58:29.400
Oh, I bounded the wrong thing.

00:58:29.440 --> 00:58:30.880
Pardon me.

00:58:31.760 --> 00:58:32.570
Thank you for coughing.

00:58:32.570 --> 00:58:34.610
Selections.

00:58:34.630 --> 00:58:35.180
What's wrong with that?

00:58:35.260 --> 00:58:37.100
There we go.

00:58:38.040 --> 00:58:38.710
I put two of them in.

00:58:38.760 --> 00:58:39.210
Oh, my mistake.

00:58:39.270 --> 00:58:41.460
I got-- yeah.

00:58:41.480 --> 00:58:41.960
This time?

00:58:41.990 --> 00:58:44.900
There's this little validation
window in WoBuilder that will tell

00:58:45.090 --> 00:58:48.980
you when you design a component,
you can say, this is a required binding.

00:58:49.030 --> 00:58:50.360
This one's optional.

00:58:50.360 --> 00:58:52.820
And this thing will
check when you save them.

00:58:52.820 --> 00:58:55.210
And here I was panicking,
and it was right.

00:58:55.210 --> 00:58:57.320
I did have one in there that was unbound.

00:58:57.480 --> 00:58:58.810
Thank you for the coffee.

00:58:58.860 --> 00:58:59.720
Did I save this?

00:58:59.840 --> 00:59:00.620
I saved this.

00:59:00.620 --> 00:59:02.820
Project builder will build this again.

00:59:02.840 --> 00:59:03.910
I added the framework,
so they're going to find the code

00:59:03.910 --> 00:59:03.910
to load this SVG parsing thing.

00:59:07.620 --> 00:59:09.720
This is why I'm using
classic Internet Explorer.

00:59:09.720 --> 00:59:12.330
SVG plugins are only available
for certain browsers,

00:59:12.410 --> 00:59:15.390
not including the new
carbonized Internet Explorer.

00:59:16.490 --> 00:59:18.170
That's why I'm using
this classic thing here.

00:59:18.270 --> 00:59:19.580
We'll start this.

00:59:19.620 --> 00:59:21.580
This is all going to be very
anticlimactic if this doesn't work,

00:59:21.640 --> 00:59:25.740
which is a strong
possibility at this point.

00:59:25.910 --> 00:59:27.100
launched the application.

00:59:27.120 --> 00:59:29.760
Its class path is even more complicated
now because it includes three of my

00:59:29.760 --> 00:59:32.510
frameworks and all them little doodads.

00:59:33.000 --> 00:59:37.020
And I'm going to open this up here.

00:59:37.020 --> 00:59:38.690
That looks good.

00:59:39.430 --> 00:59:41.470
Tell me about all the guys named,
I don't know, Bush.

00:59:41.480 --> 00:59:43.890
Oh, there's two of them.

00:59:43.990 --> 00:59:44.280
Okay.

00:59:44.280 --> 00:59:45.050
Tell me about this one.

00:59:47.350 --> 00:59:49.290
Tell me about the big election of 2000.

00:59:49.350 --> 00:59:50.410
Oh, this is getting complicated now.

00:59:50.410 --> 00:59:53.500
It's loading up all these SVG things,
it's loading the Adobe SVG plugin,

00:59:53.500 --> 00:59:56.360
and for each guy that
actually has electoral votes,

00:59:56.360 --> 00:59:59.330
it's filling in that thing
with the necessary states.

01:00:09.200 --> 01:00:12.200
But you're saying, Steve,
they're all the same color.

01:00:12.200 --> 01:00:14.920
What can we do?

01:00:14.970 --> 01:00:17.230
Well,
remember part--did you happen to notice

01:00:17.230 --> 01:00:19.080
in my EO model that parties had a color?

01:00:19.080 --> 01:00:24.630
You can ask the current--where
are we here in my object graph?

01:00:24.720 --> 01:00:29.480
Campaign,
ask the current candidate for his party,

01:00:29.610 --> 01:00:31.720
ask the party for its color,
tell the map to use that color.

01:00:31.720 --> 01:00:31.720
Oh, wait, wrong one.

01:00:31.720 --> 01:00:31.720
Here we go, quick.

01:00:38.430 --> 01:00:43.260
I still can't really tell from
looking at who the winner is.

01:00:43.260 --> 01:00:47.910
It looks to me like there's
more red pixels on the screen.

01:00:47.910 --> 01:00:49.710
Is that how it works?

01:00:49.710 --> 01:00:51.980
Is it like by square miles?

01:00:52.000 --> 01:00:54.000
How do they do this?

01:00:54.420 --> 01:00:56.570
But I might want to,
this might be a good opportunity to

01:00:56.570 --> 01:00:59.630
write a little object that can solve
this problem for us once and for all.

01:00:59.700 --> 01:01:02.540
So let's return to this EO model.

01:01:32.170 --> 01:01:32.170
And, uh, just a moment,
I must have closed it.

01:01:32.170 --> 01:01:32.170
Let me reopen this EO model here.

01:01:32.170 --> 01:01:32.170
And we talked about the idea of
business logic in these objects.

01:01:32.170 --> 01:01:32.170
And so far,
all the objects that I've got defined

01:01:32.170 --> 01:01:32.170
here are what we call generic records.

01:01:32.170 --> 01:01:32.170
They're just simple containers.

01:01:32.170 --> 01:01:32.170
They store some data,
you can send them a message,

01:01:32.170 --> 01:01:32.170
they respond with the data.

01:01:32.170 --> 01:01:32.170
But they don't make any decisions.

01:01:32.170 --> 01:01:32.170
They don't implement any logic.

01:01:32.170 --> 01:01:32.170
But I might like to take a couple
of these and make Java classes for

01:01:32.170 --> 01:01:32.170
them to be added to my project.

01:01:35.880 --> 01:01:41.520
And we'll come back here and actually
add those files to the project itself.

01:01:41.580 --> 01:01:44.500
It's now created campaign.java
and election.java.

01:01:44.570 --> 01:01:46.930
And I want to make them
part of my project.

01:01:48.810 --> 01:01:50.800
I'm going to look at
this panel again and go,

01:01:50.800 --> 01:01:51.980
uh, yeah, OK, that one, all right.

01:01:51.980 --> 01:01:55.320
And if we look at the election object,

01:01:55.600 --> 01:02:12.800
[Transcript missing]

01:02:13.000 --> 01:02:18.900
[Transcript missing]

01:02:19.080 --> 01:02:21.320
I want to write two methods here.

01:02:21.320 --> 01:02:24.600
I want to write one method that sorts
everybody according to electoral votes,

01:02:24.710 --> 01:02:26.160
because I understand that
is sort of how this works,

01:02:26.160 --> 01:02:26.460
right?

01:02:26.640 --> 01:02:29.480
And I want to write a second one that
takes the sorted list and returns

01:02:29.480 --> 01:02:30.940
the guy at the top of the list.

01:02:30.940 --> 01:02:34.080
And you all thought I was kidding
about using stickies for development.

01:02:44.190 --> 01:02:45.760
There's a method that returns the winner.

01:02:45.760 --> 01:02:47.440
It asks for all the sorted campaigns.

01:02:47.440 --> 01:02:50.680
Here's a method that sorts
the campaigns by this key,

01:02:50.790 --> 01:02:53.420
sum up the electoral votes for each guy.

01:02:53.420 --> 01:02:55.090
Save those.

01:02:55.180 --> 01:02:57.630
Let's build that.

01:02:58.660 --> 01:02:59.090
What have I done?

01:02:59.090 --> 01:03:01.040
I've just added two additional
methods to the election object.

01:03:01.040 --> 01:03:03.820
If you look back in
WebObjects Builder over here,

01:03:03.820 --> 01:03:06.060
you'll see that we're
going through elections,

01:03:06.060 --> 01:03:09.730
and the election now suddenly
has this winner property.

01:03:09.730 --> 01:03:11.920
These tools are talking back and forth.

01:03:11.990 --> 01:03:15.230
WebObjects Builder has discovered
that there's an additional method

01:03:15.230 --> 01:03:16.940
available to election objects.

01:03:16.940 --> 01:03:19.500
You can send the message winner,
and it returns a campaign.

01:03:19.550 --> 01:03:22.020
You can send the message
candidate to the winning campaign

01:03:22.020 --> 01:03:23.390
and figure out who that was.

01:03:23.450 --> 01:03:27.140
You can put something up
here that says your winner.

01:03:27.660 --> 01:03:32.290
Last name.

01:03:34.090 --> 01:03:35.000
First name, last name.

01:03:35.000 --> 01:03:38.520
I think I, did I compile that while
that was happening?

01:03:38.520 --> 01:03:39.340
I don't remember.

01:03:39.420 --> 01:03:39.990
I think I did.

01:03:40.270 --> 01:03:42.600
Never hurts to compile it again.

01:03:42.640 --> 01:03:43.960
I want it really compiled, you know?

01:03:43.960 --> 01:03:46.080
I want the bits to stick to the disk.

01:03:46.080 --> 01:03:52.680
Cosmic rays could be entering the
auditorium here and messing this up.

01:03:56.380 --> 01:04:00.640
is going to launch again here.

01:04:00.650 --> 01:04:01.780
Lots of chatty error messages here.

01:04:01.850 --> 01:04:07.300
If you'd like,
you can turn on a variable that

01:04:07.300 --> 01:04:07.300
has all the SQL that's being sent
to the database spit out here.

01:04:07.770 --> 01:04:08.790
That's fun to read.

01:04:09.020 --> 01:04:10.780
Actually very useful for debugging.

01:04:10.840 --> 01:04:12.620
Sometimes you just can't
figure out why is this so slow,

01:04:12.620 --> 01:04:14.850
and it's because you were fetching
the same object too many times,

01:04:14.850 --> 01:04:18.060
or you weren't batching
things in an effective,

01:04:18.060 --> 01:04:20.600
efficient way that EOF lets you do.

01:04:20.690 --> 01:04:22.680
It's all those H guys again.

01:04:22.710 --> 01:04:24.960
John Hagelin, he ran in 2000.

01:04:24.980 --> 01:04:29.580
Who's, uh oh, wait, wait, oh, he's close,
don't look at that, wait, hang on.

01:04:29.610 --> 01:04:30.310
Alright, I'm gonna tell you something.

01:04:30.430 --> 01:04:34.000
I've got this other monitor here.

01:04:34.650 --> 01:04:36.620
I've got a sticky on here
to remind me what to do,

01:04:36.630 --> 01:04:43.490
and right there in bold it says,
"Save the EO Model." And I forgot.

01:04:45.400 --> 01:04:50.600
[Transcript missing]

01:04:54.100 --> 01:05:06.500
[Transcript missing]

01:05:06.950 --> 01:05:08.040
Hopefully this is worth it.

01:05:08.080 --> 01:05:08.890
Did we know who the winner is?

01:05:08.980 --> 01:05:10.700
This isn't news to anybody, is it?

01:05:10.700 --> 01:05:11.670
I mean, did you read the papers?

01:05:11.670 --> 01:05:13.360
I hope so.

01:05:15.780 --> 01:05:16.400
Is Gore still in it?

01:05:16.400 --> 01:05:17.400
Is there still a chance?

01:05:17.420 --> 01:05:20.040
How long does this go on?

01:05:20.050 --> 01:05:20.640
I'm not sure.

01:05:20.640 --> 01:05:21.640
Four years.

01:05:22.610 --> 01:05:24.100
Four years, yeah.

01:05:28.270 --> 01:05:30.200
Here, 2000 election.

01:05:30.200 --> 01:05:33.480
It's fetching a whole bunch of things.

01:05:33.610 --> 01:05:34.420
Your winner, George W.

01:05:34.420 --> 01:05:34.690
Bush.

01:05:34.740 --> 01:05:38.340
It evaluated that custom business
rule to add up electoral votes

01:05:38.410 --> 01:05:39.990
and decide who had the most.

01:05:40.060 --> 01:05:42.460
And in fact, so long as it's done that,
remember I added a method

01:05:42.460 --> 01:05:43.940
called sorted campaigns.

01:05:43.940 --> 01:05:46.720
We could take that table there,
instead of going through

01:05:46.720 --> 01:05:49.140
all the unsorted campaigns,
we could ask the election

01:05:49.140 --> 01:05:52.720
for the sorted campaigns,
and that, what am I doing here?

01:05:52.770 --> 01:05:55.460
That repetition would
look that much better.

01:05:56.400 --> 01:06:09.300
[Transcript missing]

01:06:12.500 --> 01:06:15.330
So I think I've shown some
relatively interesting concepts here.

01:06:15.380 --> 01:06:17.230
The idea that you can
have business objects,

01:06:17.230 --> 01:06:18.760
and that was a pretty trivial rule.

01:06:18.760 --> 01:06:20.410
I was just sorting something
and taking the first one.

01:06:20.410 --> 01:06:23.280
But you can implement much more
complicated business rules,

01:06:23.390 --> 01:06:26.540
and you frequently do with
WebObjects in your own application.

01:06:27.180 --> 01:06:29.100
Students, are they eligible to graduate?

01:06:29.100 --> 01:06:31.080
Well, we check,
have they paid their parking fines,

01:06:31.080 --> 01:06:33.020
and have they returned
all their library books?

01:06:33.020 --> 01:06:34.160
Did they pass all the tests?

01:06:34.280 --> 01:06:36.120
Does the supervisor
still say they're okay?

01:06:36.120 --> 01:06:39.320
You can implement that kind of
logic when it's appropriate in

01:06:39.320 --> 01:06:41.600
these middle-tier business objects.

01:06:41.600 --> 01:06:45.920
All this stuff is being done
in a database-independent way.

01:06:45.920 --> 01:06:51.150
None of these objects are even aware
which database they were coming from,

01:06:51.150 --> 01:06:55.590
which means you can do one last
moderately cool thing here.

01:06:55.820 --> 01:07:00.360
Remember I made this EO model here that
said let's talk to the US elections

01:07:00.360 --> 01:07:03.700
database and let's fetch candidate
objects in elections and so on?

01:07:03.720 --> 01:07:06.000
Let me take that out of my model.

01:07:07.500 --> 01:07:11.000
And we got my FireWire disk here.

01:07:11.050 --> 01:07:13.190
I'm bringing a different EO model.

01:07:18.030 --> 01:07:20.100
I'm going to bring in another EO model
and put it back in the same place.

01:07:20.100 --> 01:07:25.810
And we'll start this
application again here.

01:07:25.810 --> 01:07:29.900
Oops,
we'll compile it and start it again here.

01:07:32.210 --> 01:07:34.090
Maybe I had to do that.

01:07:34.200 --> 01:07:36.990
So I've dropped a totally
different EO model in here,

01:07:37.060 --> 01:07:39.270
totally different,
fetching from an entirely

01:07:39.660 --> 01:07:41.340
probably different database.

01:07:41.390 --> 01:07:43.520
It could be an entirely
different database than the

01:07:43.520 --> 01:07:45.100
one that we're using here,
it could be.

01:07:45.100 --> 01:07:47.900
But we don't know because we just
put an object model in there,

01:07:47.940 --> 01:07:50.980
and the object model has all
the information about how

01:07:50.980 --> 01:07:52.740
to actually fetch things.

01:07:52.760 --> 01:07:58.810
So once this thing gets going again here,
let's...

01:08:01.550 --> 01:08:05.920
This time fetch all the candidates.

01:08:05.920 --> 01:08:09.160
Oh, wait a minute.

01:08:09.270 --> 01:08:09.810
Who are these guys?

01:08:12.420 --> 01:08:13.770
Stockwell Day Reform Party.

01:08:13.790 --> 01:08:14.550
What is this?

01:08:14.620 --> 01:08:16.580
Different database.

01:08:16.680 --> 01:08:17.750
Oh my god.

01:08:18.130 --> 01:08:19.440
Tell me about that election.

01:08:20.810 --> 01:08:21.690
Wait, wait, wait, wait.

01:08:21.700 --> 01:08:22.160
Hold your applause.

01:08:22.200 --> 01:08:22.600
Here it comes.

01:08:22.600 --> 01:08:24.080
Your winner is Jean Chrétien.

01:08:24.110 --> 01:08:26.200
Oh, he won all those seats.

01:08:26.200 --> 01:08:28.400
And Day, he won all those ones out west.

01:08:28.510 --> 01:08:30.900
And the Black Quebecois,
very popular out there.

01:08:30.900 --> 01:08:34.480
And NDP seemed to have some
large chunk of northern Manitoba.

01:08:36.930 --> 01:08:40.050
So this application is
completely ignorant of what

01:08:40.050 --> 01:08:41.430
data source it's actually using.

01:08:41.430 --> 01:08:43.130
It all revolves around that EO model.

01:08:43.140 --> 01:08:45.210
I told it to use a different database.

01:08:45.210 --> 01:08:47.080
It could have been a different schema.

01:08:47.080 --> 01:08:48.310
And I could tell you it
was a different schema,

01:08:48.380 --> 01:08:50.050
and I wouldn't have to show you,
and you'd have to believe me,

01:08:50.050 --> 01:08:50.840
but it was the same.

01:08:50.840 --> 01:08:54.900
But it made the same kind of
objects with the same relationships.

01:08:54.900 --> 01:08:59.810
And the complete separation of back
end and front end of interface,

01:08:59.810 --> 01:09:03.160
these SVG map drawn
objects at the front end,

01:09:03.160 --> 01:09:06.790
these data bearing objects that are
coming out of OpenBase or FrontBase

01:09:06.790 --> 01:09:10.040
or Oracle or how many people added
the IBM number and the Informix

01:09:10.080 --> 01:09:11.930
number together on that graph?

01:09:13.640 --> 01:09:19.340
It could be any one of those databases.

01:09:19.410 --> 01:09:22.510
And you see the separation of the back
end and the front end enables you to

01:09:22.520 --> 01:09:24.100
do some pretty interesting things here.

01:09:24.180 --> 01:09:27.500
How many people are wondering what the
heck happened to Nunavut on this map?

01:09:27.590 --> 01:09:28.800
Canadians are going,
"There's no Nunavut on the

01:09:28.800 --> 01:09:30.740
map." The Americans are going,
"What?

01:09:30.740 --> 01:09:33.070
Who?" Had a little
problem with one polygon.

01:09:33.080 --> 01:09:35.100
Can I go back to my slides, please?

01:09:35.200 --> 01:09:39.860
I want to finish up with
a few more concepts here.

01:09:39.860 --> 01:09:39.860
Oh, thank you.

01:09:48.300 --> 01:09:48.900
Nobody said you had to use HTML.

01:09:48.900 --> 01:09:51.790
I was using SVG here,
which is a form of XML that's

01:09:51.790 --> 01:09:53.300
sent to the client.

01:09:53.300 --> 01:09:55.410
We have some pretty cool
technologies that let you

01:09:55.520 --> 01:09:58.290
build pure Java applications,
including Java Client.

01:09:58.290 --> 01:10:00.300
I would certainly urge you to go
and see the Direct-to-Java Client.

01:10:00.300 --> 01:10:03.300
I believe there's two
Direct-to-Java Client sessions.

01:10:03.300 --> 01:10:06.520
And the Direct-to-Web -- pardon
me -- go and check out the report

01:10:06.520 --> 01:10:10.300
mill and see how they're delivering
PDF in sort of a similar way here.

01:10:10.300 --> 01:10:13.290
Talk to guys like me about
how we did this XML thing.

01:10:13.300 --> 01:10:14.960
And take a look at
some of our assistants.

01:10:14.990 --> 01:10:17.250
We have Direct-to-Web,
which takes an EO model like I just

01:10:17.260 --> 01:10:19.850
made and makes you a full-featured
application that's pretty much

01:10:19.960 --> 01:10:22.660
done that you can tweak through
this very interesting rules engine,

01:10:22.660 --> 01:10:25.230
which you can learn about at
the Direct-to-Web session.

01:10:25.310 --> 01:10:27.790
Direct-to-Java Client,
the same sort of thing with

01:10:27.790 --> 01:10:29.300
a Java Client interface.

01:10:29.300 --> 01:10:31.040
And for deployment,
we've got a good session on

01:10:31.040 --> 01:10:33.300
deployment that tells you what
the heck is going on here.

01:10:33.300 --> 01:10:35.290
How do I keep all these arrows going?

01:10:35.300 --> 01:10:38.840
What is the role of the WebObjects
task demon that runs on each of these

01:10:39.280 --> 01:10:41.290
machines to keep an eye on everything?

01:10:41.300 --> 01:10:42.300
How does it communicate with
the WebObjects task demon?

01:10:43.540 --> 01:10:45.300
And then we have the WebObjects
adapter through the firewall.

01:10:45.300 --> 01:10:47.300
What are these messages that
are going back and forth?

01:10:47.300 --> 01:10:50.870
Well, we have a whole architecture and
a tool called Monitor that lets

01:10:50.880 --> 01:10:54.300
you describe how many applications
you're running and where.

01:10:54.300 --> 01:10:56.260
And it sort of lays
everything out for you.

01:10:56.400 --> 01:10:57.240
It starts them up.

01:10:57.350 --> 01:11:00.790
It gives you a UI like this where
it will start three copies on that

01:11:00.850 --> 01:11:04.080
machine and two on this machine
and inform the adapter on the

01:11:04.140 --> 01:11:06.300
web server about what's going on.

01:11:06.300 --> 01:11:09.410
And generally, it works pretty well.

01:11:11.210 --> 01:11:12.520
All right, it always works pretty well.

01:11:12.520 --> 01:11:13.520
I'm sorry.

01:11:13.610 --> 01:11:14.450
This stuff works great.

01:11:14.470 --> 01:11:17.030
Engineering has done a heroic job
in migrating this stuff to Java.

01:11:17.040 --> 01:11:20.400
The fact that it works at all,
considering where they came from this

01:11:20.400 --> 01:11:23.380
Objective-C code base to where it is now,
it's nothing short of miraculous.

01:11:23.380 --> 01:11:25.780
We have a number of,
how many people here are going

01:11:25.780 --> 01:11:27.550
to all the WebObjects sessions?

01:11:27.550 --> 01:11:29.270
The people here from the whole track,
well, that's great.

01:11:29.270 --> 01:11:30.260
You're going to love all of these.

01:11:30.300 --> 01:11:30.950
These are all great.

01:11:31.000 --> 01:11:32.170
These are all great.

01:11:34.050 --> 01:11:36.250
And what is the deal
with WebObjects 4.5.1?

01:11:36.420 --> 01:11:40.220
Well, Mac OS X Objective-C only.

01:11:40.220 --> 01:11:44.610
You don't want this unless you already
have a WebObjects project that you

01:11:44.610 --> 01:11:46.850
want to bring to a Mac OS X machine.

01:11:46.850 --> 01:11:49.360
If you're starting something new,
you want,

01:11:49.360 --> 01:11:51.870
you definitely want WebObjects 5.

01:11:51.930 --> 01:11:55.440
You do want WebObjects 4.5.1 if
you're going to bring a product to,

01:11:55.440 --> 01:11:59.000
if you're already using 4.5 on one
of the other platforms as well.

01:11:59.000 --> 01:12:00.020
You can move that along.

01:12:00.020 --> 01:12:03.950
The only thing that's really missing
is support for Java on Mac OS X.

01:12:05.000 --> 01:12:05.920
With this product.

01:12:05.990 --> 01:12:08.490
We still support Java and
Objective-C both on Windows NT and

01:12:08.490 --> 01:12:11.480
Windows 2000 and Solaris and HP UX,
just like before.

01:12:11.480 --> 01:12:12.140
But this is it.

01:12:12.230 --> 01:12:13.980
We swear this is the
last time we're doing an

01:12:13.980 --> 01:12:15.700
Objective-C release with WebObjects.

01:12:15.770 --> 01:12:17.420
We're no more fooling around here.

01:12:17.420 --> 01:12:17.800
We're not going to.

01:12:17.820 --> 01:12:21.300
So if you're starting something new,
I really urge you to look at WebObjects

01:12:21.360 --> 01:12:25.170
5 because 4.5.1 is for people
migrating existing projects along.

01:12:27.150 --> 01:12:29.640
Moving from 4.5 to 5,
pretty easy if you've got a project.

01:12:29.640 --> 01:12:30.750
We've got a whole session on that.

01:12:30.750 --> 01:12:31.780
The APIs are pretty close.

01:12:31.780 --> 01:12:33.610
Learn more.

01:12:33.610 --> 01:12:37.940
A couple of WebObjects training
classes that you can use.

01:12:37.940 --> 01:12:41.010
A week-long class on development,
another week-long class

01:12:41.010 --> 01:12:43.610
on more development,
and another three-day

01:12:43.740 --> 01:12:44.700
class on deployment.

01:12:44.700 --> 01:12:46.630
Excellent,
excellent classes taught by our

01:12:46.630 --> 01:12:48.400
iServices technical training guys.

01:12:48.400 --> 01:12:51.310
Feel free to come and see us in the
lab in room K in the other building,

01:12:51.320 --> 01:12:52.800
which is on the ground floor.

01:12:52.800 --> 01:12:53.920
Play with all this stuff.

01:12:53.980 --> 01:12:55.680
I'm going to try to have my
demo running on the machine.

01:12:55.680 --> 01:12:58.000
I'll try to have that set up if
anyone wants to see what the deal

01:12:58.000 --> 01:13:01.560
with that SVG mapping thing was
and why none of it was missing.

01:13:01.560 --> 01:13:03.280
Maybe you can help me
put it back in there.

01:13:03.280 --> 01:13:06.760
And there's lots more sessions.

01:13:06.760 --> 01:13:09.080
They asked us to put up the most
relevant sessions on these slides.

01:13:09.130 --> 01:13:11.390
I couldn't really think what they
were because they're all good.

01:13:11.440 --> 01:13:14.150
From this point on,
I have the advantage in doing the

01:13:14.150 --> 01:13:17.940
technical overview that all this
great stuff is following behind me,

01:13:17.940 --> 01:13:20.750
and I can refer you to virtually any
session that's coming up on WebObjects.

01:13:22.530 --> 01:13:23.470
Who to contact?

01:13:23.520 --> 01:13:28.940
Tony, Bob, iServices guys,
a whole bunch of URLs.