WEBVTT

00:00:04.090 --> 00:00:05.000
Good afternoon.

00:00:05.000 --> 00:00:08.240
My name is Rob Neville and I'm the
manager of the Service Location

00:00:08.240 --> 00:00:10.390
Engineering team at Apple.

00:00:10.500 --> 00:00:14.440
And this session for those of you in the
room in the dark out there is on NSL.

00:00:14.440 --> 00:00:18.390
If you came to hear about something else,
you can leave.

00:00:19.190 --> 00:00:24.560
I'd like to go over some of the
highlights of NSL and I'd like to start

00:00:24.560 --> 00:00:27.650
off with some of you in the room that
as I was looking before the session

00:00:27.800 --> 00:00:29.860
started I recognized from past years.

00:00:30.040 --> 00:00:36.010
And some of you were fresh faces.

00:00:36.010 --> 00:00:37.460
Doesn't mean you haven't been here,
it's just I didn't recognize you.

00:00:38.290 --> 00:00:40.740
NSL came out of a team
that was primarily,

00:00:40.740 --> 00:00:42.940
that Apple was primarily
responsible for doing personal

00:00:42.940 --> 00:00:45.560
web sharing about four years ago.

00:00:45.560 --> 00:00:50.760
And as soon as we delivered
a server on every desktop,

00:00:50.760 --> 00:00:55.650
we became acutely aware that it was
difficult to find TCP IP services on

00:00:55.650 --> 00:01:01.220
the net in the same way as we were able
to find personal file sharing servers

00:01:01.220 --> 00:01:03.340
or Apple share servers on the network.

00:01:03.400 --> 00:01:08.100
And as people started moving
into a more dynamic environment,

00:01:08.200 --> 00:01:12.660
where they didn't have a specific
TCP IP address from one boot to the next,

00:01:12.840 --> 00:01:18.150
it became even more critical to
be able to somehow put out to the

00:01:18.680 --> 00:01:24.500
world or to your intranet a way
to tell people where services on

00:01:24.500 --> 00:01:27.020
your particular CPU were located.

00:01:27.020 --> 00:01:31.310
And out of that investigation
and search came NSL,

00:01:31.710 --> 00:01:33.290
Network Service Location.

00:01:33.300 --> 00:01:38.180
In an essence, in a nutshell,
what NSL is, is a way for,

00:01:38.180 --> 00:01:43.840
for servers and services that are
written as part of the OS or by people

00:01:44.160 --> 00:01:49.790
like you to register those services on
the network and then have client-based

00:01:49.790 --> 00:01:51.870
applications find those services.

00:01:51.880 --> 00:01:56.960
Those services can be registered
dynamically in much in the same way as,

00:01:57.070 --> 00:02:01.270
you know, 10 years ago you were doing an
MVP register on an Apple Talk network.

00:02:01.300 --> 00:02:06.500
You can now do an NSL register and get
your services registered on your network.

00:02:06.580 --> 00:02:09.980
They can be found by your client,
and they can be found by your client.

00:02:10.160 --> 00:02:13.730
They can be found by your client-based
applications through a common interface.

00:02:14.010 --> 00:02:17.580
The first year that we did NSL,
we basically gave you a series

00:02:17.580 --> 00:02:18.930
of APIs that allowed you

00:02:19.240 --> 00:02:20.560
And we got feedback from you.

00:02:20.780 --> 00:02:24.900
And the feedback from you was
give us a common UI so that for

00:02:24.970 --> 00:02:28.690
all of our client applications
we don't have to roll our own.

00:02:28.950 --> 00:02:32.710
Next year we came back and you
had your Common UI and we've

00:02:32.930 --> 00:02:37.730
put that Common UI into 10,
excuse me, into 9.

00:02:38.400 --> 00:02:40.220
and into 8 before that.

00:02:40.410 --> 00:02:45.720
So it's in the classic Macintosh
operating system so that your

00:02:45.720 --> 00:02:49.090
servers can register on the network.

00:02:49.210 --> 00:02:53.470
And client applications that you write
that can connect to your servers or other

00:02:53.470 --> 00:02:59.210
services such as AppleScript that take
advantage of NSL can access your servers

00:02:59.210 --> 00:03:01.870
over the network as long as you register.

00:03:02.000 --> 00:03:05.700
Last year the theme was if you register,
they will find you.

00:03:05.790 --> 00:03:07.650
If you don't, they won't.

00:03:07.710 --> 00:03:11.180
And as we move forward,
it becomes critical for you as

00:03:11.180 --> 00:03:15.770
service providers and as developers
who provide services that customers

00:03:15.770 --> 00:03:20.970
are going to try and access for you
to register these in particular ways.

00:03:22.030 --> 00:03:27.340
We've gotten more feedback from you since
that time that simple URL registration,

00:03:27.730 --> 00:03:30.240
while it's good because it
gives the address of the server

00:03:30.240 --> 00:03:34.000
that you're trying to talk to,
may not go far enough.

00:03:34.090 --> 00:03:39.920
So as part of this particular session,
we'd like to have maybe a broader Q&A or

00:03:39.920 --> 00:03:43.740
maybe even a brainstorming session
towards the end to try and get your

00:03:43.740 --> 00:03:48.000
feedback on where you would like to
see this technology go in the future.

00:03:48.000 --> 00:03:53.000
NSL is shipping on the Macintosh
operating system since 8.0.

00:03:53.000 --> 00:03:56.680
It's callable via the APIs.

00:03:57.320 --> 00:03:59.990
There haven't been any
substantial changes in the

00:03:59.990 --> 00:04:02.000
APIs and no changes in the SDK.

00:04:02.000 --> 00:04:08.060
It's callable through AppleScript if
you have an in-house kind of service or

00:04:08.090 --> 00:04:11.000
application that you're trying to write
and you want to find one of the services

00:04:11.000 --> 00:04:15.000
that's available through AppleScript,
you can call it through AppleScript.

00:04:15.000 --> 00:04:19.790
And there are multiple plug-ins where
you can store and/or find the services

00:04:19.800 --> 00:04:23.860
that you wish to locate on the network.

00:04:23.890 --> 00:04:25.980
You can find them via MBP.

00:04:25.980 --> 00:04:27.980
You can find them via an LDAP plug-in.

00:04:27.980 --> 00:04:29.780
You can also find them via SLP.

00:04:29.860 --> 00:04:32.460
More on SLP as we go along.

00:04:32.620 --> 00:04:36.490
On Mac OS X, we have a Carbon UI library.

00:04:36.790 --> 00:04:40.700
The UI is callable
through the APIs as well.

00:04:40.700 --> 00:04:42.880
It's also available
through Apple Scripts.

00:04:43.020 --> 00:04:49.560
So if you write an Apple Script that's
runnable in your 9 environment,

00:04:49.560 --> 00:04:49.560
it's also runnable in 10.

00:04:50.400 --> 00:04:52.940
We've also made some tweaks to the UI.

00:04:53.080 --> 00:04:58.100
The tweaks we've made to the UI have
entailed some changes in functionality

00:04:58.100 --> 00:05:01.140
and some changes in the way that
the data is organized and displayed,

00:05:01.140 --> 00:05:04.630
and we'll get to that in a little bit.

00:05:05.760 --> 00:05:09.130
In Mac OS X, we only have 2 plug-ins.

00:05:09.260 --> 00:05:13.530
As you'll see when we get to a UI slide,
you only see one,

00:05:13.560 --> 00:05:15.840
but we have 2 plug-ins in Mac OS X.

00:05:15.840 --> 00:05:18.880
We have an SLP plug-in
and an MVP plug-in.

00:05:18.900 --> 00:05:23.250
The MVP plug-in is only available
through low-level API calls.

00:05:23.320 --> 00:05:26.880
A lot of the services available in
the Apple Talk stack are not available

00:05:26.880 --> 00:05:28.120
all the way to the session layer.

00:05:28.120 --> 00:05:33.000
We thought it probably would be confusing
if we made that readily available to

00:05:33.000 --> 00:05:39.330
customers when a lot of the services
that call NSL in the beginning weren't

00:05:39.330 --> 00:05:42.660
able to access those Apple Talk services.

00:05:44.150 --> 00:05:46.940
When we were here last year
we talked about having a

00:05:46.940 --> 00:05:48.940
Directory Services plug-in.

00:05:48.940 --> 00:05:52.240
We did extensive work on the
Directory Services plug-in.

00:05:52.320 --> 00:05:57.830
We have a Directory Services plug-in up
and running in various people's offices.

00:05:57.960 --> 00:06:03.830
It didn't make the cutoff date,
didn't make the ship date for Mac OS X.

00:06:04.070 --> 00:06:08.010
We don't have an LDAP plug-in per se.

00:06:08.200 --> 00:06:14.790
The beauty of Directory Services,
especially as it relates to NSL,

00:06:14.910 --> 00:06:19.800
is if you have your data stored
in primarily a static directory

00:06:20.290 --> 00:06:24.360
out there on the network,
you can use Directory Services to

00:06:24.650 --> 00:06:27.510
locate the data that you
wish to store out there.

00:06:27.670 --> 00:06:33.130
That gives IS departments the capability
of using existing infrastructure,

00:06:33.350 --> 00:06:38.780
writing with existing tools such as
PEARL to enter corporate assets or user

00:06:38.780 --> 00:06:42.080
assets in a directory of their choosing.

00:06:43.300 --> 00:06:45.580
We thought LDAP was one
that was utilized a lot,

00:06:45.660 --> 00:06:48.200
which is why we did it on 8 and 9.

00:06:48.410 --> 00:06:52.480
But they could put it in a directory of
their choosing and then access that data

00:06:52.480 --> 00:06:58.140
through a common UI through NSL because
we make a directory services calls.

00:06:58.200 --> 00:07:01.620
If someone comes along,
such as people here in this audience,

00:07:01.620 --> 00:07:05.200
and there was a presentation
yesterday on directory services,

00:07:05.360 --> 00:07:09.390
someone comes along and writes a
new directory services plug-in,

00:07:09.540 --> 00:07:12.200
let's say for ActiveX,
though I don't know,

00:07:12.200 --> 00:07:15.730
then you can also access
the same services,

00:07:15.870 --> 00:07:19.970
find URLs inside of an
ActiveX directory that you can

00:07:19.970 --> 00:07:25.190
inside of an SLP infrastructure
or inside an LDAP directory.

00:07:25.200 --> 00:07:28.180
And that's where the beauty of
directory services comes in.

00:07:28.310 --> 00:07:32.110
And we still intend, and as I said,
we had it working in the lab,

00:07:32.110 --> 00:07:34.390
but it did not make the ship date.

00:07:35.880 --> 00:07:38.700
We didn't--we're not doing a
demonstration today because

00:07:38.800 --> 00:07:40.390
NSL is shipping with the OS.

00:07:40.400 --> 00:07:45.300
It's shipped--the UI has
been shipping since Mac OS 8.

00:07:45.300 --> 00:07:47.510
In Mac OS 9,
you had AppleScript capability and

00:07:47.520 --> 00:07:54.210
functionality there so you had access to
the standard UI either via AppleScript or

00:07:54.220 --> 00:07:58.830
through making API calls and in 10,
you

00:07:59.850 --> 00:08:02.350
It's there when you call Connect2.

00:08:02.470 --> 00:08:10.800
Connect2 is a finder call which makes
a call then into our UI library.

00:08:11.030 --> 00:08:17.490
And it searches for only things
in this particular release that

00:08:17.490 --> 00:08:17.490
the finder knows what to do with.

00:08:18.130 --> 00:08:22.910
In this particular case,
the only plugin that's getting

00:08:23.150 --> 00:08:28.280
executed in Mac OS X as it
currently exists is the SLP plugin.

00:08:28.430 --> 00:08:32.290
That SLP plugin is put in--has
been put into a sub-container

00:08:32.470 --> 00:08:34.860
currently called Local Network.

00:08:34.990 --> 00:08:41.040
When you select the Local Network,
what you see then is a list of

00:08:41.090 --> 00:08:47.050
sub-scopes of that SLP network
and services in the default scope.

00:08:50.990 --> 00:08:55.390
There are some things that are
different in the Mac OS X environment

00:08:55.610 --> 00:08:59.520
versus any programming that
you might be doing in Mac OS 9.

00:08:59.750 --> 00:09:01.850
Threading is different.

00:09:01.950 --> 00:09:06.390
The threading mechanisms that
we used in Mac OS 9 we did not

00:09:06.390 --> 00:09:09.650
have to port over to Mac OS X.

00:09:09.800 --> 00:09:12.400
You don't have to yield any thread.

00:09:13.130 --> 00:09:20.590
We've also broken the plugins and
the managers and the UI library

00:09:20.590 --> 00:09:24.320
into their own frameworks.

00:09:24.680 --> 00:09:30.710
in such a way that should, going forward,
people want to make calls to

00:09:30.920 --> 00:09:34.590
the underlying managers to get
that raw data as it comes in

00:09:34.590 --> 00:09:37.060
over the wire after requests.

00:09:37.060 --> 00:09:39.990
Those can be done at as low
a level as we can make it.

00:09:40.030 --> 00:09:43.860
These are not just high-level
APIs that can be called.

00:09:44.010 --> 00:09:47.750
These are part of the
core foundation libraries.

00:09:47.770 --> 00:09:51.810
So the NSL UI library exists
in the Carbon framework and the

00:09:51.810 --> 00:09:56.520
low-level manager libraries exist
in the core services framework.

00:09:56.620 --> 00:09:59.860
So if you're writing something that's
going to be writing to core services,

00:09:59.860 --> 00:10:04.250
you can take advantage
of making NSL API calls,

00:10:04.440 --> 00:10:08.500
getting back the data that you wish,
and then you

00:10:08.830 --> 00:10:11.410
: So,
I'm going to start off by displaying

00:10:11.410 --> 00:10:13.100
that in whatever format you choose.

00:10:13.150 --> 00:10:19.140
If you wish to take advantage of the
common UI that we've rolled and continue

00:10:19.140 --> 00:10:28.920
to roll and to test and to fix bugs in,
then you would want to make calls

00:10:28.960 --> 00:10:30.330
to the higher level UI library
which is currently in Carbon.

00:10:33.510 --> 00:10:39.370
The other thing that has changed in
the NSL and the Mac OS X environment

00:10:40.320 --> 00:10:47.090
is the information is no longer
available per NSL neighborhood.

00:10:49.040 --> 00:10:52.230
In addition, the protocol list is handled
a little bit differently.

00:10:52.240 --> 00:10:55.000
And let me try and
explain this a little bit.

00:10:55.100 --> 00:11:05.310
And if you called NSL and
Mac OS 9 and you got your,

00:11:05.310 --> 00:11:05.310
quote, default

00:11:06.290 --> 00:11:11.200
Zone or your default subnet
or your default scope.

00:11:11.210 --> 00:11:14.190
We had an algorithm which went
and checked and see what your

00:11:14.200 --> 00:11:19.510
domain name was and that is what
we put your default scope in.

00:11:20.080 --> 00:11:28.830
And if we got information
back from multiple plug-ins,

00:11:28.830 --> 00:11:28.830
we group those together in a particular

00:11:28.960 --> 00:11:30.680
grouping in the UI.

00:11:30.720 --> 00:11:37.460
So for example,
if my domain was earthlink.net at home,

00:11:37.490 --> 00:11:41.280
and I had a couple of
servers at my home office,

00:11:41.320 --> 00:11:44.140
they'd all show up in earthlink.net.

00:11:44.170 --> 00:11:48.200
In a small corporate environment where
I may have some services that existed

00:11:48.200 --> 00:11:53.400
on a DNS server or in an LDAP directory,
and I got back common data

00:11:53.420 --> 00:11:58.690
both from that and from SLP,
we did the union of the data return from

00:11:59.110 --> 00:12:03.700
those and put it in what appeared to be
a single scope or a single neighborhood.

00:12:03.720 --> 00:12:05.890
That's no longer done.

00:12:06.530 --> 00:12:12.220
Basically, each individual setting
as you see back to

00:12:12.810 --> 00:12:19.610
This local network will just
currently return you SLP data.

00:12:19.810 --> 00:12:23.510
Our customers don't know what
SLP is and probably don't care.

00:12:23.610 --> 00:12:26.690
Your customers don't care what SLP is.

00:12:26.860 --> 00:12:30.410
When AppleTalk--when and if AppleTalk is
enabled in this particular environment,

00:12:30.460 --> 00:12:34.240
what you would see would be an
AppleTalk container which when you

00:12:34.260 --> 00:12:38.230
clicked on would give you all the
AppleTalk zones in your network and

00:12:38.230 --> 00:12:42.500
then you would have a local network
container which would give you all the

00:12:42.500 --> 00:12:47.050
SLP zones in your neighborhood and you
would also see those servers that would

00:12:47.050 --> 00:12:49.680
be accessible via directory services.

00:12:53.290 --> 00:12:57.380
So each of those are in
their same environment.

00:12:57.410 --> 00:13:04.390
The other thing which was mentioned
briefly in the Mac OS X server

00:13:05.330 --> 00:13:08.950
The first thing that we were gathering
yesterday was in Mac OS X server

00:13:08.950 --> 00:13:11.440
we're shipping an SLP server.

00:13:11.440 --> 00:13:15.430
Well, in actuality we're shipping
an SLP server in Mac OS X.

00:13:15.800 --> 00:13:19.320
It's configurable through a common UI.

00:13:19.390 --> 00:13:23.810
That common UI is managed
via remote administration.

00:13:24.170 --> 00:13:29.310
But that server is in essence the
same server that exists and is

00:13:29.310 --> 00:13:33.080
available in every version of Mac OS X.

00:13:33.190 --> 00:13:36.020
And it's an SLP daemon that we have.

00:13:36.020 --> 00:13:38.150
As I was mentioning,
it's fully configurable

00:13:38.150 --> 00:13:40.750
through the Mac OS X server.

00:13:40.840 --> 00:13:41.860
And what does this give you?

00:13:41.860 --> 00:13:46.280
Well, this gives you the capability
of subdividing your

00:13:46.280 --> 00:13:49.420
SLP network into logical,

00:13:49.620 --> 00:13:50.940
Scopes or Neighborhoods.

00:13:51.000 --> 00:13:52.360
There are scopes in SLP.

00:13:52.360 --> 00:13:58.060
But it allows you to have more than
one grouping of logical devices or

00:13:58.060 --> 00:14:01.130
logical services on the network.

00:14:01.180 --> 00:14:08.250
Currently, everything goes by default
into a scope known as default.

00:14:08.510 --> 00:14:10.440
However, they don't have to.

00:14:10.580 --> 00:14:12.820
There's always a default
neighborhood which is available,

00:14:12.820 --> 00:14:16.900
and that would be what people might
see as their local environment.

00:14:16.970 --> 00:14:22.510
But there is also the ability to
create scopes on an SLP server.

00:14:22.590 --> 00:14:25.050
And you can have more than
one SLP server on a network.

00:14:25.180 --> 00:14:29.570
You don't have to have the same
number of scopes on each server.

00:14:29.660 --> 00:14:32.690
You don't have to have the same names
of the same scopes on each server.

00:14:32.790 --> 00:14:35.610
If you do,
and I register in a local server

00:14:36.000 --> 00:14:39.800
next door to me or down the hall,
and there's a scope for, say,

00:14:39.800 --> 00:14:42.380
engineering in another building.

00:14:42.730 --> 00:14:53.600
That data will get propagated across
the network so that the person who's

00:14:53.600 --> 00:14:53.600
in an engineering scope in Building 1
and myself in Building 2 will see the

00:14:53.600 --> 00:14:53.600
same data in that particular scope.

00:14:54.690 --> 00:14:57.480
So your network will
no longer appear flat.

00:14:57.480 --> 00:15:03.780
However, SLP is not a hierarchical
networking architecture.

00:15:03.780 --> 00:15:06.520
It is, in essence, like Apple Talk.

00:15:06.520 --> 00:15:10.000
What it will allow you to
do is segment your network.

00:15:10.010 --> 00:15:15.030
But what we've seen at Apple and as we
roll this technology out internally is

00:15:15.030 --> 00:15:22.360
there are some services in Mac OS X and
Mac OS 9 which register with NSL.

00:15:22.360 --> 00:15:25.060
And when you call the finder
and you look for those services,

00:15:25.060 --> 00:15:29.470
primarily file services,
you will see thousands of them.

00:15:30.310 --> 00:15:32.600
That is very distressing.

00:15:32.850 --> 00:15:35.870
We attempt to solve this
problem with an SLP server.

00:15:36.000 --> 00:15:41.170
Much in the same way as if there
was no 255 node limit for AppleTalk,

00:15:41.270 --> 00:15:44.170
if you could have this
infinitely large AppleTalk zone,

00:15:44.830 --> 00:15:49.590
you know, what would the confusion
be in that particular case?

00:15:50.510 --> 00:15:56.150
So with NSL 10 Server,
we're shipping an SLP scope utility.

00:15:56.680 --> 00:16:00.540
Basically,
we're hoping at some particular point,

00:16:00.540 --> 00:16:04.130
though we don't know
how this is going to be,

00:16:04.290 --> 00:16:07.740
to us with SLP,
this is a natural extension

00:16:07.740 --> 00:16:08.990
of your system preferences.

00:16:08.990 --> 00:16:12.960
Much in the same way as you designate
what your default Apple Talk zone is,

00:16:13.110 --> 00:16:19.830
you'll get an opportunity to designate
what default scope you're going

00:16:19.830 --> 00:16:19.830
to be putting your service into.

00:16:20.500 --> 00:16:26.820
And it's also you can choose which scope
you want via an Apple script in Mac OS X.

00:16:27.090 --> 00:16:29.000
Excuse me, in Mac OS 9.

00:16:29.160 --> 00:16:37.030
There's an Apple script that ships with
the printer utility that allows you to

00:16:37.030 --> 00:16:37.030
choose which scope you wish to be in.

00:16:37.300 --> 00:16:41.130
And that becomes even more
useful now that we're shipping

00:16:41.140 --> 00:16:43.460
an SLP server on Mac OS X.

00:16:46.160 --> 00:16:50.060
So now we get to the point where we're
going to want some of your feedback.

00:16:50.060 --> 00:16:54.990
And before I ask for your feedback here,
I'd like to tell you some of the things

00:16:55.500 --> 00:16:58.000
which we're thinking about doing.

00:16:58.130 --> 00:17:02.000
And then I'd like to ask you whether or
not we're going in the right direction,

00:17:02.450 --> 00:17:07.560
whether or not there are more
things that you'd like to see,

00:17:07.560 --> 00:17:11.850
are there some things
we haven't thought of.

00:17:11.850 --> 00:17:13.130
Basically, let us know what you think.

00:17:13.230 --> 00:17:18.190
We had some feedback last year, just one,
but I wanted to bring it up

00:17:18.190 --> 00:17:20.040
again because we don't have it.

00:17:20.180 --> 00:17:22.560
We have a Carbon UI library.

00:17:23.070 --> 00:17:28.240
And we have been thinking internally
about providing a Cocoa UI library.

00:17:29.130 --> 00:17:38.200
We also are moving to use core foundation
types in the SDKs and in the APIs.

00:17:38.200 --> 00:17:40.200
That would mean some
changes to your code.

00:17:40.200 --> 00:17:48.190
We also are going to attempt or been
thinking about making the UI much more

00:17:48.830 --> 00:17:50.810
Customizable.

00:17:51.090 --> 00:17:54.630
Currently we have a few options.

00:17:54.720 --> 00:17:59.480
You can display the text edit box or not.

00:17:59.480 --> 00:18:05.700
You can display the list of services
that you want people to switch to or not,

00:18:05.820 --> 00:18:06.840
a pop-up.

00:18:07.590 --> 00:18:10.950
Fairly minor kinds of things.

00:18:10.960 --> 00:18:15.740
And we're looking at providing
more options in the NSL UI library.

00:18:16.310 --> 00:18:20.600
We also have been exploring
the possibility of providing,

00:18:20.600 --> 00:18:22.680
and I would like to get
your feedback on this,

00:18:22.720 --> 00:18:29.950
providing a full SLP library with
support for all SLP attributes

00:18:29.950 --> 00:18:29.950
as part of the Core OS.

00:18:30.920 --> 00:18:41.990
And we're also working for and attempting
to have more seamless integration with

00:18:41.990 --> 00:18:41.990
NSL as part of the Finder experience.

00:18:44.120 --> 00:18:50.540
One of the other things that we've been
looking at is a concept of meta URLs.

00:18:51.110 --> 00:18:53.960
As I mentioned at the beginning,
we've been around for about

00:18:54.120 --> 00:18:56.940
four years and when we started
doing this development,

00:18:56.990 --> 00:19:04.960
we were looking at solving
a particular problem.

00:19:04.960 --> 00:19:04.960
Well, since NSL now has been
out for three years,

00:19:05.200 --> 00:19:08.100
We're starting to get some
feedback as to how people are

00:19:08.100 --> 00:19:10.340
actually using the product.

00:19:10.490 --> 00:19:14.500
One of the people that is a primary
customer of our product currently

00:19:14.500 --> 00:19:16.540
is the Finder under Mac OS.

00:19:16.690 --> 00:19:19.370
And the Finder knows about files.

00:19:19.680 --> 00:19:22.420
It knows about file systems.

00:19:22.510 --> 00:19:24.200
Well, excuse me,
it doesn't know about file systems.

00:19:24.310 --> 00:19:27.800
It knows how to move files
around in a file system.

00:19:27.900 --> 00:19:30.080
But it only knows what to do with files.

00:19:30.080 --> 00:19:32.590
It doesn't know what
to do with web pages.

00:19:32.740 --> 00:19:39.740
From a display standpoint,
it doesn't know what to do with printers.

00:19:39.740 --> 00:19:45.100
So what we're thinking about
doing is having a prefix to the

00:19:45.100 --> 00:19:51.790
URL which would basically say
what the type of service was.

00:19:51.980 --> 00:19:52.900
How does this impact you?

00:19:52.900 --> 00:19:59.770
Well, if you agree and we move along with
the adoption of this particular

00:19:59.910 --> 00:20:06.450
: So, in the current approach,
it would mean probably registering

00:20:06.450 --> 00:20:08.850
more than one URL type.

00:20:08.850 --> 00:20:13.410
Registering the URL,
I'm in a WebDAV server and

00:20:13.410 --> 00:20:16.590
registering it being an X file.

00:20:16.680 --> 00:20:22.610
So that a service that knows--different
services that know how to handle

00:20:22.610 --> 00:20:22.610
different types could say,
"Give me all the types of file."

00:20:23.080 --> 00:20:26.440
Then, if you have a plug-in
architecture of some sort,

00:20:26.560 --> 00:20:30.710
you don't necessarily, at run time,
know which file systems are

00:20:30.710 --> 00:20:36.360
loaded or which file URLs,
remote file URLs, you know how to handle.

00:20:36.390 --> 00:20:40.040
But you say,
"Give me the types file on the network.

00:20:40.050 --> 00:20:44.340
I will then pass off the URL to
whatever my mounting mechanism is,"

00:20:44.340 --> 00:20:47.840
which may be different for NFS,
which may be different for AFP,

00:20:47.840 --> 00:20:53.140
which is different--definitely
different from WebDAV.

00:20:53.140 --> 00:20:56.400
And then that's--that
service will get mounted.

00:20:56.400 --> 00:21:00.010
In the current OS,
this is basically the way it works,

00:21:00.170 --> 00:21:03.200
except there's no free
form extensibility.

00:21:03.200 --> 00:21:06.450
Basically the file system knows
how to handle--file system right

00:21:06.540 --> 00:21:11.130
out of the box knows how to
handle and mount AFP volumes,

00:21:11.130 --> 00:21:15.630
NFS volumes, and WebDAV volumes.

00:21:15.880 --> 00:21:22.590
You can at the Connect To prompt
type in URLs for AFP,

00:21:22.700 --> 00:21:31.600
NFS, or HTTP and that HTTP will get
you to a WebDAV if there's a

00:21:31.600 --> 00:21:31.600
WebDAV server running at that address.

00:21:32.530 --> 00:21:37.400
And -- but it only cares
about mounting file systems.

00:21:37.400 --> 00:21:40.340
It passes that URL data off to URL Mount.

00:21:40.340 --> 00:21:44.200
URL Mount then goes and
mounts it in the file system.

00:21:44.200 --> 00:21:51.400
Once it's mounted in the file system,
the finder deals with it as it

00:21:51.400 --> 00:21:51.400
does any other mounted volume.

00:21:51.970 --> 00:22:00.120
You may also have a need or a want to
connect to a particular different types

00:22:00.230 --> 00:22:06.130
of web services or services of your own

00:22:06.200 --> 00:22:08.000
Design.

00:22:08.140 --> 00:22:15.220
So that you may design a plug-in
architecture into your particular system.

00:22:15.280 --> 00:22:19.790
At runtime, you don't necessarily know
what plug-ins are running.

00:22:20.140 --> 00:22:26.140
Those systems get registered at runtime
to know how to handle particular URLs.

00:22:26.300 --> 00:22:29.580
The servers that you're keeping
your data on will register what

00:22:29.580 --> 00:22:32.100
services are running on their machine.

00:22:32.200 --> 00:22:35.640
The UI that you use to find
those services would be dynamic,

00:22:35.640 --> 00:22:38.840
be able to find those,
and then you would be able to handle

00:22:38.840 --> 00:22:41.100
them and branch those off appropriately.

00:22:41.990 --> 00:22:45.100
In addition,
we're looking at extending the

00:22:45.100 --> 00:22:48.100
URLs to handle attribute lists.

00:22:48.170 --> 00:22:53.090
The primary impetus for this
has come from printer folks.

00:22:53.090 --> 00:22:57.110
They want to be able to browse
for printers that handle color

00:22:57.110 --> 00:23:01.440
printing two-sided on Wednesdays.

00:23:01.440 --> 00:23:01.440
And

00:23:02.090 --> 00:23:07.560
There's no real way to encode
that in a URL that we're used

00:23:07.680 --> 00:23:09.630
to dealing with right now.

00:23:09.900 --> 00:23:15.130
With the advent of our SLP server,
network administrators and/or

00:23:15.130 --> 00:23:19.810
people who are running print shops
with printers of different types,

00:23:19.810 --> 00:23:23.400
if the printers don't have this
registration for themselves

00:23:23.540 --> 00:23:26.830
built into their firmware,
can register these things with

00:23:26.950 --> 00:23:31.330
our SLP server and/or put it in an
LDAP directory or a NetInfo directory

00:23:31.330 --> 00:23:36.160
or an ActiveX directory or whatever,
because of directory services.

00:23:36.240 --> 00:23:40.700
And then their people using the
utility to access that printer

00:23:40.730 --> 00:23:43.560
can find it on the network,
can switch between one or another,

00:23:43.700 --> 00:23:45.800
depending upon what the attributes are.

00:23:45.880 --> 00:23:48.250
They can put up,
depending on what attributes are

00:23:48.420 --> 00:23:51.250
attributed with the registered
server or the registered printer

00:23:51.250 --> 00:23:55.040
out there in the network,
can change the dialog box appropriately.

00:23:55.160 --> 00:23:58.040
So what we're looking at and
what we've been discussing is

00:23:58.140 --> 00:24:02.990
having a group of meta URLs.

00:24:04.470 --> 00:24:05.760
It's Wednesday afternoon.

00:24:06.030 --> 00:24:11.110
What I understand is that at 6:00
they're going to start serving

00:24:11.410 --> 00:24:18.540
And we're at a point with NSL where
we've delivered a technology.

00:24:18.570 --> 00:24:22.510
We've talked to developers,
we've talked to you all out there,

00:24:22.690 --> 00:24:30.270
some of you who are developing and
are using this technology in a sort of

00:24:30.310 --> 00:24:32.140
New way.

00:24:32.140 --> 00:24:35.640
New in that you've got a technology
that really hasn't rolled out into

00:24:35.640 --> 00:24:38.280
production environment as of yet.

00:24:38.390 --> 00:24:40.300
But you're exploring the possibilities.

00:24:40.300 --> 00:24:46.290
Well,
we don't want to make changes to NSL that

00:24:46.700 --> 00:25:01.500
[Transcript missing]