WEBVTT

00:00:01.780 --> 00:00:02.790
My name is Tom Weier.

00:00:02.800 --> 00:00:06.300
I'm the Network and
Communications Technology Manager in

00:00:06.300 --> 00:00:07.460
Developer Relations.

00:00:07.460 --> 00:00:11.040
And I have the privilege
of introducing Session 301,

00:00:11.130 --> 00:00:13.290
Mac OS X Server Overview.

00:00:13.360 --> 00:00:17.220
As many of you have heard
from the keynote yesterday and

00:00:17.220 --> 00:00:20.300
some of the other sessions,
we've got a new X Server.

00:00:20.380 --> 00:00:24.370
And to talk about that,
I'm going to invite up Eric Zelenkia,

00:00:24.470 --> 00:00:27.610
Product Marketing Manager for
Mac OS X Server.

00:00:33.100 --> 00:01:22.700
[Transcript missing]

00:01:23.000 --> 00:01:25.600
So today we're going to be
discussing a little bit,

00:01:25.600 --> 00:01:28.820
we're going to be updating
you on Mac OS X Server.

00:01:28.820 --> 00:01:31.380
You'll hear a little bit more
about the details and the

00:01:31.380 --> 00:01:33.220
features of Mac OS X Server.

00:01:33.380 --> 00:01:35.690
We'll give you an update as
to the technologies that are

00:01:35.790 --> 00:01:38.200
included in Mac OS X Server.

00:01:38.200 --> 00:01:41.960
And we'll also discuss some developer
opportunities that are afforded

00:01:41.960 --> 00:01:47.660
to you by developing products and
solutions for Mac OS X Server.

00:01:48.720 --> 00:01:54.220
So specifically, we'll educate you on
what is Mac OS X Server,

00:01:54.330 --> 00:01:58.000
how Mac OS X Server relates to Mac OS X.

00:01:58.220 --> 00:02:01.340
Again, the developer opportunities
and then we'll point you to

00:02:01.340 --> 00:02:04.230
some additional sessions,
some breakout sessions where you

00:02:04.310 --> 00:02:08.590
can learn more about developing
for specific technologies.

00:02:10.030 --> 00:02:12.290
So our server strategy
at Apple is simple.

00:02:12.580 --> 00:02:18.180
Our goal is to deliver innovative,
scalable solutions that are built

00:02:18.180 --> 00:02:21.400
upon internet and industry standards.

00:02:21.520 --> 00:02:24.980
We want our server platform
to be the premier platform for

00:02:25.060 --> 00:02:29.490
high performance networking,
whether that's workgroup or

00:02:29.490 --> 00:02:31.720
internet server solutions.

00:02:31.790 --> 00:02:34.680
Our servers should be very easy to use.

00:02:34.700 --> 00:02:37.170
They should be easy to
manage and administer.

00:02:37.310 --> 00:02:41.170
They should offer a
full range of services.

00:02:41.870 --> 00:02:44.500
They should be able to integrate
easily into existing networks

00:02:44.500 --> 00:02:46.800
and existing infrastructures.

00:02:46.900 --> 00:02:51.460
And again, they should embrace and
support open standards.

00:02:54.000 --> 00:02:56.410
So what is Mac OS X Server?

00:02:56.450 --> 00:03:00.070
Avi introduced it yesterday
in his presentation.

00:03:00.070 --> 00:03:03.890
But Mac OS X Server is really a
combination of a couple things.

00:03:03.890 --> 00:03:08.530
Mac OS X Server builds upon
the innovation and the power

00:03:08.540 --> 00:03:13.160
of Unix and everything that
we delivered with Mac OS X.

00:03:13.550 --> 00:03:20.110
Mac OS X Server also includes a suite
of internet and networking services.

00:03:20.360 --> 00:03:25.160
includes a lot of open source solutions
and includes a similar interface

00:03:25.350 --> 00:03:26.700
to our Apple Share IP product.

00:03:26.720 --> 00:03:29.870
So it's very easy to use,
very comfortable.

00:03:29.930 --> 00:03:35.400
A teacher or work group administrator can
easily adopt Mac OS X Server and learn

00:03:35.400 --> 00:03:38.600
it without a lot of technical knowledge.

00:03:40.920 --> 00:03:44.100
So Mac OS X Server again,
it builds upon the industrial strength

00:03:44.100 --> 00:03:47.920
server platform that we have in Mac OS X,
and Darwin,

00:03:48.010 --> 00:03:51.800
and a lot of the open source solutions
that are out there on the network,

00:03:51.800 --> 00:03:52.800
on the internet.

00:03:52.940 --> 00:03:56.280
It integrates a lot of server
solutions for file and print,

00:03:56.280 --> 00:03:59.740
we'll go into more of these later,
internet and web,

00:03:59.740 --> 00:04:03.310
networking and security,
desktop management,

00:04:03.310 --> 00:04:05.310
and directory services.

00:04:06.290 --> 00:04:09.760
And again,
Mac OS X Server offers a superior

00:04:09.760 --> 00:04:14.900
ease of use with its secure
remote administration interface.

00:04:15.970 --> 00:04:19.760
So this is basically the
architecture of Mac OS X,

00:04:20.150 --> 00:04:21.060
Mac OS X Server.

00:04:21.340 --> 00:04:24.290
Mac OS X Server again
sits on top of Mac OS X.

00:04:24.350 --> 00:04:26.490
It supports the
Directory services architecture.

00:04:26.500 --> 00:04:30.140
And you can see that the services
that we provide are layered on

00:04:30.310 --> 00:04:32.350
top of the Directory services.

00:04:32.360 --> 00:04:35.840
So all of the services,
whether it's our file services

00:04:35.970 --> 00:04:39.760
or networking services or
desktop management solutions,

00:04:39.760 --> 00:04:42.250
all support Directory services.

00:04:42.560 --> 00:04:45.940
And then on top of that,
we provide the nice, clean, easy to use,

00:04:45.940 --> 00:04:48.660
elegant interface for
remote administration.

00:04:52.690 --> 00:04:55.960
So how does Mac OS X Server differ
from Mac OS X?

00:04:55.960 --> 00:04:58.090
Well, they're very similar in some ways.

00:04:58.100 --> 00:05:02.840
They're both based upon the great
Darwin Operating System Foundation.

00:05:02.840 --> 00:05:05.970
They both feature the reliable,
high-performance

00:05:06.040 --> 00:05:09.100
BSD networking stack and tools.

00:05:09.390 --> 00:05:13.090
And they both feature
the Aqua user interface.

00:05:13.190 --> 00:05:16.600
They differ in that
Mac OS X Server is a server platform.

00:05:16.600 --> 00:05:18.100
It's not the operating system.

00:05:18.100 --> 00:05:19.640
Mac OS X is the operating system.

00:05:19.850 --> 00:05:21.090
This is our server platform.

00:05:21.100 --> 00:05:24.150
It builds upon Mac OS X.

00:05:24.390 --> 00:05:27.730
Mac OS X Server also features
a full range of services for,

00:05:27.740 --> 00:05:30.740
we discussed earlier,
like file sharing and

00:05:30.740 --> 00:05:32.550
networking solutions.

00:05:32.840 --> 00:05:38.490
We have integrated remote administration,
management, and logging.

00:05:38.490 --> 00:05:40.710
So a server should produce reports.

00:05:40.710 --> 00:05:43.960
It should allow you to
remotely administer it.

00:05:44.880 --> 00:05:50.800
Mac OS X Server also features a series
of fault tolerance systems to recover

00:05:50.800 --> 00:05:54.800
from failures if one of the services
crashes it will automatically restart it.

00:05:54.910 --> 00:05:57.910
We have some hardware
integration there as well.

00:05:58.690 --> 00:06:02.540
Mac OS X Server also builds upon
some additional open source solutions

00:06:02.540 --> 00:06:07.390
which are not included in Mac OS X.

00:06:07.390 --> 00:06:12.600
And also some Apple design solutions
like Macintosh Manager 2 and NetBoot 2.

00:06:12.600 --> 00:06:15.600
And again,
Mac OS X Server is a complete solution.

00:06:15.600 --> 00:06:19.400
Out of the box,
everything that you need to set up your

00:06:19.400 --> 00:06:25.280
server to integrate your clients on your
network is provided in Mac OS X Server.

00:06:26.530 --> 00:06:28.770
So now I'd like to invite up Greg Burns.

00:06:28.870 --> 00:06:31.060
He's the director of
Internet Server Software.

00:06:31.080 --> 00:06:34.910
And he'll go into more about
Mac OS X Server Platform and

00:06:34.940 --> 00:06:36.340
the services it provides.

00:06:36.340 --> 00:06:38.110
Greg?

00:06:42.950 --> 00:06:43.960
Thanks Eric.

00:06:44.000 --> 00:06:47.240
Let's talk more about Mac OS X Server and
some of the technologies that we

00:06:47.240 --> 00:06:51.640
provide and that we've delivered
in Mac OS X Server with the new release.

00:06:51.660 --> 00:06:54.920
Eric's provided a good
overview of Mac OS X Server,

00:06:54.920 --> 00:06:57.960
but I want to talk in a bit more detail
about some of the things you should know.

00:06:58.010 --> 00:07:00.920
And then towards the end of the
presentation in a few areas,

00:07:01.070 --> 00:07:03.870
we're going to go into some more
depth in particular areas that you

00:07:04.010 --> 00:07:08.690
as developers should know about
developing for Mac OS X Server.

00:07:09.200 --> 00:08:16.900
[Transcript missing]

00:08:17.790 --> 00:08:20.420
So in addition to all this
scalability and performance benefits,

00:08:20.460 --> 00:08:23.250
another thing that's new with
Mac OS X Server with the new release

00:08:23.310 --> 00:08:26.220
is that we can take full advantage
of symmetric multiprocessing.

00:08:26.220 --> 00:08:28.830
This is something that,
unlike Apple Share IP in the past,

00:08:28.830 --> 00:08:31.340
we're now fully able to take
advantage of the multiprocessor

00:08:31.540 --> 00:08:34.870
hardware that we deliver in the
server product for great performance.

00:08:34.900 --> 00:08:39.020
And as Eric mentioned, we've added fault
tolerance systems as well.

00:08:39.020 --> 00:08:42.160
So we have a few things that
we've added to the server product.

00:08:42.350 --> 00:08:46.270
One is a watchdog process that will look
over the services that are running and

00:08:46.300 --> 00:08:48.640
make sure they continue to stay running.

00:08:48.680 --> 00:08:51.980
And if one should quit unexpectedly,
it will start it up again and make

00:08:51.980 --> 00:08:53.620
sure the services stay online.

00:08:53.620 --> 00:08:57.530
Another is a combination of
hardware and software that basically

00:08:57.530 --> 00:09:01.480
will monitor the overall system
and make sure that it's alive.

00:09:01.480 --> 00:09:03.820
And if the system should hang
for some unexpected reason,

00:09:03.820 --> 00:09:04.770
it will restart it.

00:09:04.780 --> 00:09:08.910
So even if your server is located 20
miles away in a remote office and it

00:09:08.910 --> 00:09:11.660
goes down in the middle of the night,
you don't have to worry because

00:09:11.660 --> 00:09:12.200
it will continue to hang.

00:09:12.220 --> 00:09:16.510
will automatically restart itself
and stay running and stay online.

00:09:17.620 --> 00:09:21.550
So now let's go into some of the
services and the capabilities that

00:09:21.550 --> 00:09:23.760
are provided in Mac OS X Server.

00:09:23.870 --> 00:09:27.690
So key to Mac OS X Server is the
Directory Services layer that is used

00:09:27.790 --> 00:09:32.440
by all the services in Mac OS X Server.

00:09:32.460 --> 00:09:36.550
Okay, so Directory Services provides
basically an integrated set of services,

00:09:36.570 --> 00:09:40.440
an API, and a back-end database that can
be used to share information about

00:09:40.440 --> 00:09:42.530
users and resources on the network.

00:09:42.650 --> 00:09:46.760
So client applications on the desktop
and server applications can use the

00:09:46.760 --> 00:09:49.040
API to access directory information.

00:09:49.060 --> 00:09:52.480
And in addition, we provide the back-end
database in the form of NetInfo,

00:09:52.480 --> 00:09:55.360
a distributed replicated
directory server.

00:09:55.400 --> 00:09:58.210
This is utilized by all the
services in Mac OS X Server.

00:09:58.360 --> 00:10:03.450
So whether it's File, Web, Print, Mail,
all of them access the network

00:10:03.590 --> 00:10:07.380
directory information and
access the shared accounts.

00:10:07.380 --> 00:10:09.890
And in addition,
we realize that there are people that

00:10:09.890 --> 00:10:12.170
have existing directory infrastructures.

00:10:12.210 --> 00:10:15.800
Uh, primarily using LDAP that are going
to want to be able to integrate

00:10:15.800 --> 00:10:17.540
Mac OS X Server into those environments.

00:10:17.620 --> 00:10:20.220
So in the directory,
we've provided LDAP support

00:10:20.220 --> 00:10:23.290
to allow Mac OS X Server to
integrate into these environments.

00:10:23.420 --> 00:10:28.460
So if you have an iPlanet LDAP server
or a Windows Active Directory server,

00:10:28.460 --> 00:10:33.140
you can take a Mac OS X Server and
basically deploy it in that environment.

00:10:33.230 --> 00:10:36.450
And any service that you
have up and running will be,

00:10:36.500 --> 00:10:39.110
have access to new user accounts
that are added into these

00:10:39.110 --> 00:10:40.850
servers as soon as they're added.

00:10:40.930 --> 00:10:42.520
So it's fully dynamic.

00:10:42.550 --> 00:10:44.530
and fully integrated.

00:10:47.390 --> 00:10:50.540
So, basically this picture shows
you how it's all put together.

00:10:50.540 --> 00:10:53.170
In the green there in the middle
you have the API which is the

00:10:53.170 --> 00:10:56.710
key piece that anybody writing an
application needs to be aware of.

00:10:56.800 --> 00:10:59.580
That's available on both the
client and the server and that

00:10:59.580 --> 00:11:01.300
allows you to access the directory.

00:11:01.300 --> 00:11:04.800
So, you see the Apple software there,
our Mac OS X services that take

00:11:04.800 --> 00:11:08.170
advantage of the directory through
this API as well as developer

00:11:08.250 --> 00:11:09.700
software that can use it as well.

00:11:09.800 --> 00:11:12.440
In order to access the
various directories,

00:11:12.440 --> 00:11:16.100
you have the choice of going
through the existing directories

00:11:16.100 --> 00:11:18.300
that we provide plug-ins for,
NetInfo and LDAP.

00:11:18.300 --> 00:11:22.260
Or as a developer you can write your
own plug-in for an existing directory.

00:11:22.300 --> 00:11:26.150
And other people as well,
IT organizations can do this as

00:11:26.150 --> 00:11:28.770
well for proprietary directories.

00:11:31.430 --> 00:11:35.100
So to summarize, the API is included with
every Mac OS X product,

00:11:35.100 --> 00:11:36.840
desktop, and server.

00:11:36.930 --> 00:11:39.100
Allows access to any directory.

00:11:39.140 --> 00:11:41.800
The APIs provide a central
point to access network

00:11:41.800 --> 00:11:45.230
resources in the directory,
and also to authenticate user

00:11:45.230 --> 00:11:46.740
accounts to the directory.

00:11:46.910 --> 00:11:49.240
It's extensible,
so new directory support can be

00:11:49.240 --> 00:11:51.300
added via the plugin architecture.

00:11:51.330 --> 00:11:56.770
And we've added NetInfo and LDAP support
included in the core server OS.

00:11:58.570 --> 00:12:00.400
Okay,
looking at our menu of services here

00:12:00.400 --> 00:12:03.800
that are provided in Mac OS X Server,
the first is file and print services.

00:12:03.800 --> 00:12:07.640
And obviously these are very important
in the education and graphics markets,

00:12:07.960 --> 00:12:10.080
very highly used in the LAN environment.

00:12:10.080 --> 00:12:13.210
And in addition to all the reliability
things that we talked about that

00:12:13.210 --> 00:12:16.860
we've improved in Mac OS X Server,
we've also focused a lot on performance.

00:12:16.860 --> 00:12:19.720
So we have a truly high performance
solution here that we're delivering.

00:12:20.320 --> 00:12:22.650
We've been doing benchmarks
against Windows 2000,

00:12:22.650 --> 00:12:25.570
and we've found that this
is Mac OS X Server is truly

00:12:25.740 --> 00:12:28.680
the fastest server for both
Mac OS and Windows clients.

00:12:28.720 --> 00:12:30.050
And so we're really happy about that.

00:12:30.060 --> 00:12:32.540
Another thing.

00:12:36.500 --> 00:12:37.500
Thanks.

00:12:37.500 --> 00:12:41.600
Another thing that's important is that we
need to be able to support all clients.

00:12:41.600 --> 00:12:47.300
So we've added support for, obviously,
we had AFP and Windows support

00:12:47.300 --> 00:12:48.610
in Apple Share IP.

00:12:48.700 --> 00:12:52.890
We've added NFS as well with
Mac OS X Servers and Unix underpinnings.

00:12:52.920 --> 00:12:54.600
And, of course, FTP.

00:12:54.600 --> 00:12:56.500
So no matter what client
you're coming from,

00:12:56.500 --> 00:12:58.260
you're fully able to access the server.

00:12:58.960 --> 00:13:02.340
And, of course, with AFP,
we've enhanced that with AFP 3.0

00:13:02.340 --> 00:13:06.500
to take full advantage of the
new Mac OS X file system layout.

00:13:06.500 --> 00:13:10.280
So things like Unicode file names,
long file names, privileges have all been

00:13:10.290 --> 00:13:11.880
enhanced in AFP 3.0.

00:13:11.900 --> 00:13:16.880
In addition, all these file services can
use both HFS Plus and UFS.

00:13:16.880 --> 00:13:19.460
So unlike a previous
release of Mac OS X Server,

00:13:19.460 --> 00:13:23.180
you truly are independent of the
underlying file system storage.

00:13:23.200 --> 00:13:28.760
And, finally, our Windows support.

00:13:28.860 --> 00:13:30.220
It comes from Samba,
which I'm sure many of

00:13:30.220 --> 00:13:31.130
you are familiar with.

00:13:31.160 --> 00:13:34.200
And in addition to adding
Samba into the product itself,

00:13:34.200 --> 00:13:37.160
we've made sure that it's really
well integrated with Mac OS X Server.

00:13:37.160 --> 00:13:40.700
So in terms of integrating with
the Unicode file system layout of

00:13:40.780 --> 00:13:44.960
Mac OS X and the directory APIs,
as well as the management utilities,

00:13:44.960 --> 00:13:47.110
we've made sure that that
all fits together well and

00:13:47.320 --> 00:13:50.220
provides a truly integrated and
easy-to-manage set of file services.

00:13:50.220 --> 00:13:53.440
On the print side,
we support Windows and Mac printing,

00:13:53.440 --> 00:13:55.920
and that integrates into the
Mac OS X printing environment

00:13:55.920 --> 00:13:57.210
for PostScript printers.

00:13:59.010 --> 00:14:01.240
And this picture kind of gives
you an idea of how all of this

00:14:01.240 --> 00:14:03.780
fits together and makes it
really easy to set up and manage.

00:14:03.890 --> 00:14:07.030
All of the configuration for shared
directories and privileges is

00:14:07.030 --> 00:14:09.140
shared by all of the file services.

00:14:09.250 --> 00:14:15.100
They all can access the underlying file
services whether it be UFS or HFS Plus.

00:14:15.180 --> 00:14:18.680
And they all use the directory
services to access the account

00:14:18.880 --> 00:14:21.230
information in our shared directory.

00:14:22.620 --> 00:14:25.300
Moving on to Internet services
is obviously another key part

00:14:25.440 --> 00:14:29.500
of server environment to be able
to do comprehensive web hosting

00:14:29.500 --> 00:14:32.980
and Mac OS X Server provides
a great deal of support here.

00:14:33.080 --> 00:14:37.630
In addition to the basic web services,
we also have a mail server product that

00:14:37.630 --> 00:14:39.940
we provide as well as in Mac OS X Server.

00:14:39.970 --> 00:14:43.520
We have media streaming with the
QuickTime streaming server and we

00:14:43.520 --> 00:14:48.450
have an application server environment
with the WebObjects 5 deployment.

00:14:49.770 --> 00:14:52.990
The Mail Server is a server
that has been brought over and

00:14:52.990 --> 00:14:54.810
improved from Apple Share IP.

00:14:54.900 --> 00:14:57.400
We've removed some of the
limitations that existed in the

00:14:57.400 --> 00:15:02.140
Apple Share IP products such as improving
the ability of the database to scale,

00:15:02.270 --> 00:15:04.600
increased the size limitations there.

00:15:04.600 --> 00:15:07.330
We've continued to maintain some
of the key features though like

00:15:07.330 --> 00:15:10.000
the high performance message
store and the fact that it's fully

00:15:10.100 --> 00:15:11.590
integrated with the Directory.

00:15:11.600 --> 00:15:16.310
The IMAP administration port makes it
easy to access the database locally

00:15:16.310 --> 00:15:20.600
or remotely from IMAP through the
protocol or from any IMAP client.

00:15:20.600 --> 00:15:24.450
One of the key things we wanted to
improve in the Mail Server for X is

00:15:24.450 --> 00:15:26.600
to really make it more flexible.

00:15:26.600 --> 00:15:29.470
The Mail Server is really easy to set up,
it's really easy to use,

00:15:29.470 --> 00:15:33.320
it's fully integrated,
but with that integration came

00:15:33.320 --> 00:15:36.600
some inability to modify it and
so we wanted to improve on that.

00:15:36.600 --> 00:15:39.810
And so what we've done with X is
we've allowed you to use it the

00:15:39.810 --> 00:15:41.600
way it exists with the integration.

00:15:41.600 --> 00:15:43.520
We've allowed you to use
the integrated SMTP router,

00:15:43.620 --> 00:15:46.850
but we've also allowed people to
set it up so that you can use a send

00:15:46.860 --> 00:15:48.600
mail as your back end SMTP router.

00:15:48.600 --> 00:15:51.600
And so that allows people that
really want to customize the

00:15:51.640 --> 00:15:54.880
server or if developers want to
add additional capabilities on

00:15:54.880 --> 00:15:57.530
top of the Mail Server platform,
they're able to do

00:15:57.530 --> 00:15:58.600
that through send mail.

00:15:58.670 --> 00:16:01.710
And so we've really increased
the flexibility in the

00:16:01.710 --> 00:16:03.190
Mail Server with Mac OS X.

00:16:05.200 --> 00:16:09.180
Another product on the internet side is
the QuickTime streaming services which

00:16:09.180 --> 00:16:15.200
provides both support for live media
and on demand media of QuickTime being

00:16:15.200 --> 00:16:16.600
streamed across the internet.

00:16:16.600 --> 00:16:21.250
You can stream any hinted QuickTime media
placed on the server as well as stream

00:16:21.460 --> 00:16:26.090
live events from a broadcast application
by reflecting them through the server.

00:16:26.100 --> 00:16:28.500
In addition,
you can take servers that are

00:16:28.530 --> 00:16:32.630
reflecting and basically build up
multiple chains of basically servers

00:16:32.630 --> 00:16:36.290
reflecting the servers to build very
large distribution environments for

00:16:36.300 --> 00:16:38.590
a really truly scalable architecture.

00:16:38.600 --> 00:16:42.600
It's fully standards based on
RTP and RTSP so it's fully compatible

00:16:42.600 --> 00:16:44.600
with other servers and clients.

00:16:44.760 --> 00:16:47.570
And it's fully open source and it
runs on a variety of platforms and

00:16:47.570 --> 00:16:50.600
we're now in our third release and
I'll talk about that in a minute.

00:16:50.600 --> 00:16:53.600
And overall this product
has been really popular.

00:16:53.600 --> 00:16:55.600
We've had over 135,000
downloads now of QuickTime.

00:16:55.600 --> 00:16:59.540
We've had over 135,000 downloads
now of QuickTime streaming server

00:16:59.540 --> 00:17:02.600
and a huge number of those have
been on Mac OS X Server itself.

00:17:05.000 --> 00:18:44.300
[Transcript missing]

00:18:46.860 --> 00:18:49.850
Of course, a core part of web services
is the web server itself

00:18:49.940 --> 00:18:51.400
and all that goes around it.

00:18:51.400 --> 00:18:56.600
And I'm sure many of you are familiar or
know that we include Apache as the core

00:18:56.600 --> 00:18:59.840
web server foundation in Mac OS X Server.

00:18:59.890 --> 00:19:02.700
And so we want to talk a bit more
in depth about what we've done with

00:19:02.700 --> 00:19:05.660
Apache and some of the additional
facilities we provide around that.

00:19:05.660 --> 00:19:10.610
So for that,
I'm going to bring up Rusty Tucker from

00:19:10.610 --> 00:19:14.060
the X Server Engineering Group.

00:19:16.700 --> 00:19:17.830
Hi, thanks.

00:19:17.900 --> 00:19:22.740
We've got a really interesting story to
tell around Apache and Mac OS X Server.

00:19:22.740 --> 00:19:26.770
I think it's really good news for
third party developers and there's

00:19:26.770 --> 00:19:31.930
a lot of new opportunities there.

00:19:32.510 --> 00:19:35.400
This could be a short story, I guess.

00:19:35.440 --> 00:19:38.900
As a developer, when I first took a
look at Mac OS X Server,

00:19:38.900 --> 00:19:43.600
it's really unique because you've
got the best graphic interface,

00:19:43.600 --> 00:19:46.400
the ease of use that
Macintosh has always had,

00:19:46.400 --> 00:19:47.440
and Unix under the hood.

00:19:47.480 --> 00:19:53.580
And those combine to make this
a really unique web server

00:19:53.580 --> 00:19:53.580
development environment.

00:19:54.490 --> 00:19:58.240
So of course we started off
with Apache and it comes with

00:19:58.240 --> 00:20:00.000
impressive qualifications.

00:20:00.000 --> 00:20:03.000
Millions of sites served,
a very large and active

00:20:03.000 --> 00:20:05.400
development community.

00:20:05.400 --> 00:20:09.210
It's very stable and very secure.

00:20:09.560 --> 00:20:14.810
And it's important to know that the
version of Apache that we ship on

00:20:14.810 --> 00:20:17.990
Mac OS X Server is very standard.

00:20:17.990 --> 00:20:24.400
But we've added to it some of the best
and most sought after tools from the

00:20:24.400 --> 00:20:32.280
open source community including PHP,
MySQL, ModPearl, and Tomcat.

00:20:33.700 --> 00:20:51.500
[Transcript missing]

00:20:54.580 --> 00:20:59.380
Apache is typically really all
about being the most flexible web

00:20:59.380 --> 00:21:04.230
server and it hasn't always been
known as the speediest web server.

00:21:04.240 --> 00:21:08.810
And so we've tried to improve that
by adding speed to the flexibility

00:21:08.810 --> 00:21:11.640
with the front end performance cache.

00:21:11.640 --> 00:21:15.290
In addition,
we've added configuration for secure

00:21:15.290 --> 00:21:22.080
sockets layer and configuring Apache to
be utilized as a caching proxy.

00:21:24.750 --> 00:21:28.450
When we talk about
Mac OS X Server as a great web

00:21:28.450 --> 00:21:34.170
application development platform,
what really stands out is WebObjects,

00:21:34.270 --> 00:21:38.450
which is a consistent award
winner in a deep and rich

00:21:38.450 --> 00:21:40.250
environment in its own right.

00:21:40.280 --> 00:21:45.620
You'll be hearing a lot about that
in different sessions here this week

00:21:45.620 --> 00:21:48.580
and also more in this presentation.

00:21:49.840 --> 00:21:53.900
We've also included MySQL,
which is a multi-user structured

00:21:53.910 --> 00:21:55.700
query language database.

00:21:55.700 --> 00:22:00.610
Most interesting dynamic web
applications require an SQL backend and

00:22:00.650 --> 00:22:03.180
now you've got one in Mac OS X Server.

00:22:03.180 --> 00:22:12.190
PHP provides portable scripting
language for Apache and it's

00:22:12.190 --> 00:22:16.090
highly integrated with MySQL.

00:22:16.710 --> 00:22:20.000
Pearl is really great at
text manipulation and also

00:22:20.050 --> 00:22:21.940
provides database access.

00:22:22.530 --> 00:22:28.290
And Tomcat provides Java serverlets and
Java server pages so that you can use

00:22:28.390 --> 00:22:35.280
the Java programming language to extend
Apache with greater performance and CGI.

00:22:40.460 --> 00:22:46.350
More on the applications to
Mac OS X Server and the Web Server.

00:22:46.430 --> 00:22:50.550
We've integrated Apple Technologies,
Sherlock for full text

00:22:50.700 --> 00:22:53.620
searching of your website,
Directory Services so you

00:22:53.720 --> 00:22:56.960
can take advantage of the
Directory Services architecture

00:22:57.400 --> 00:23:02.790
and provide a great way to
authenticate and control access.

00:23:02.800 --> 00:23:07.590
So you don't need to muck around with
HD access files or roll your own access

00:23:07.590 --> 00:23:10.090
control using a database backend.

00:23:10.090 --> 00:23:15.200
It's taken care of automatically and
integrated through Directory Services.

00:23:15.200 --> 00:23:19.780
To ease the transition from Mac OS 9,
we've included legacy support

00:23:19.780 --> 00:23:23.710
for Mac OS ACGIs including
those running under Classic.

00:23:23.780 --> 00:23:26.700
Of course,
you want to move to a native technology

00:23:26.700 --> 00:23:30.600
to take advantage of the performance
and reliability that X Server provides.

00:23:30.600 --> 00:23:35.520
And we've also included a custom
Mac binary module that allows

00:23:35.520 --> 00:23:40.870
for the transfer of classic files
that include a resource fork.

00:23:43.950 --> 00:23:48.150
One area that Mac OS X has
broad support for is in the

00:23:48.150 --> 00:23:53.310
web distributed and authoring
versioning protocol known as WebDAV.

00:23:53.420 --> 00:23:58.580
You'll find it's a set of extensions
that allows HTTP to easily

00:23:58.580 --> 00:24:01.620
manage the content of a website.

00:24:01.710 --> 00:24:07.960
In OS X Server you can control the use
of WebDAV through the user interface.

00:24:08.710 --> 00:24:12.040
And you'll also find
WebDAV client support in some

00:24:12.040 --> 00:24:13.840
of the best authoring tools.

00:24:13.840 --> 00:24:19.570
What's very surprising is that
you find WebDAV support built into

00:24:19.570 --> 00:24:22.840
Mac OS X as a client file system API.

00:24:22.840 --> 00:24:27.260
So websites can appear on your desktop
just like any other remote server volume,

00:24:27.640 --> 00:24:31.760
which means that Finder, Cocoa Apps,
Carbon Apps,

00:24:31.760 --> 00:24:36.890
and any command line application can
access and edit the contents of a website

00:24:36.890 --> 00:24:39.760
just using standard file system APIs.

00:24:43.710 --> 00:24:47.520
As we talked before,
Apache is a very popular web

00:24:47.530 --> 00:24:51.500
server serving 17.9 million
sites by one recent count.

00:24:51.520 --> 00:24:56.840
Apache has achieved this with
providing full support of HTTP,

00:24:56.840 --> 00:25:00.980
reliability, flexibility,
as evidenced by the modules

00:25:00.980 --> 00:25:04.200
and capabilities that we
include with Mac OS X Server.

00:25:04.200 --> 00:25:09.090
We've worked closely with the kernel
team to optimize for Apache and the

00:25:09.090 --> 00:25:15.150
result is really great performance on
100BaseT and Gigabit Ethernet networks.

00:25:21.430 --> 00:25:26.840
We thought we could do even better and as
a result created the performance cache.

00:25:26.840 --> 00:25:29.880
The performance cache is tightly
integrated with Apache so that

00:25:29.880 --> 00:25:33.330
Apache is the responsibility for
filling the back end of the request.

00:25:33.400 --> 00:25:39.400
It generates the HTML either from static
pages or through its modules or CGI's.

00:25:39.640 --> 00:25:42.240
Where the performance cache takes
care of the front end of the

00:25:42.270 --> 00:25:45.400
request and serves from memory
the results of that generation.

00:25:45.400 --> 00:25:48.400
And the results are pretty astounding.

00:25:48.400 --> 00:25:51.540
We've been able to more than
double Apache's performance on

00:25:51.540 --> 00:25:56.090
Mac OS X Server in static page
performance while maintaining all

00:25:56.090 --> 00:26:00.630
the flexibility and reliability
that's built into Apache.

00:26:00.990 --> 00:26:04.750
Module and content developers can
also take advantage of this front-end

00:26:04.750 --> 00:26:09.420
performance cache just by adding
expiration and cacheability headers to

00:26:09.420 --> 00:26:11.900
the responses that you normally generate.

00:26:11.900 --> 00:26:16.900
So if your module is already friendly
towards caching proxies on the internet,

00:26:17.060 --> 00:26:20.970
it will already automatically
exploit the advantages of the

00:26:21.040 --> 00:26:23.360
front-end performance cache.

00:26:28.040 --> 00:26:32.400
So to summarize, the Mac OS X Server is a
deep and rich development

00:26:32.400 --> 00:26:35.110
environment for web applications.

00:26:35.320 --> 00:26:40.070
You can take advantage of the performance
cache for higher performance at

00:26:40.070 --> 00:26:42.940
basically no cost in your development.

00:26:42.940 --> 00:26:47.530
And it represents a lot of,
a number of developer opportunities

00:26:47.560 --> 00:26:51.430
including the porting of
additional Apache modules to

00:26:51.570 --> 00:26:53.970
Mac OS X or plug-ins for Mac OS 9.

00:26:53.970 --> 00:26:58.770
Innovations that extend
Apache and exploit this unique

00:26:58.940 --> 00:27:00.100
server operating system.

00:27:00.100 --> 00:27:06.560
Development of web-based tools that ease
the management of Mac OS X Server itself.

00:27:06.600 --> 00:27:11.050
And of course, killer web applications
built with WebObjects,

00:27:11.050 --> 00:27:12.940
Perl, PHP, or Tomcat.

00:27:12.940 --> 00:27:17.940
So,
I thank you and give you back to Greg.

00:27:23.600 --> 00:29:28.600
[Transcript missing]

00:29:30.020 --> 00:29:31.540
So that's it for web services.

00:29:31.540 --> 00:29:35.110
Of course, another key feature of
Mac OS X Server and something that

00:29:35.180 --> 00:29:39.440
really differentiates it from a lot
of the other Unix servers that some

00:29:39.440 --> 00:29:42.860
of the core technology is derived from
is the administration capabilities.

00:29:42.860 --> 00:29:45.770
Of course,
we have Mac OS X and Aqua itself

00:29:45.770 --> 00:29:50.160
obviously provides a very
strong and easy to use platform.

00:29:50.160 --> 00:29:55.380
And we have full Aqua UI for managing
all of the key services in Mac OS X.

00:29:56.020 --> 00:29:58.940
So again, we have a very easy
to use server product.

00:29:59.010 --> 00:30:01.980
The administration secure can be used.

00:30:02.100 --> 00:30:05.580
You can manage it remotely or locally,
multiple services.

00:30:05.580 --> 00:30:08.940
The key here is that you have all of
the key features of the services that

00:30:08.940 --> 00:30:10.980
can be managed from this application.

00:30:10.980 --> 00:30:13.310
And of course,
the services like Apache are

00:30:13.430 --> 00:30:14.760
Apache under the hood.

00:30:14.790 --> 00:30:17.650
So if someone needed to,
they could go under there and access the

00:30:17.650 --> 00:30:21.980
Unix services themselves and configure
them themselves underneath the hood.

00:30:21.980 --> 00:30:21.980
But again, you don't need to because all
of the administration takes

00:30:21.980 --> 00:30:21.980
care of this whole thing.

00:30:21.980 --> 00:30:21.980
So again, we have a very easy
to use server product.

00:30:21.980 --> 00:30:21.980
The administration secure can be used.

00:30:21.980 --> 00:30:21.980
You can manage it remotely
or locally multiple services.

00:30:21.980 --> 00:30:21.980
The key here is that you have all of
the key features of the services that

00:30:21.980 --> 00:30:21.980
can be managed from this application.

00:30:21.980 --> 00:30:21.980
And of course,
the services like Apache are

00:30:21.980 --> 00:30:21.980
Apache under the hood.

00:30:21.980 --> 00:30:21.980
So if someone needed to,
they could go under there and access the

00:30:21.980 --> 00:30:21.980
Unix services themselves and configure
them themselves underneath the hood.

00:30:21.980 --> 00:30:24.660
But again, you don't need to because
all of the administration

00:30:24.660 --> 00:30:25.900
takes care of this for you.

00:30:26.000 --> 00:30:30.070
And you can easily do things like
setting up complex multi-hosted

00:30:30.070 --> 00:30:33.980
websites in minutes with the
UI and the administration tools.

00:30:36.060 --> 00:30:40.500
The last thing about some
of the core services in

00:30:40.500 --> 00:30:42.160
Mac OS X is the network services.

00:30:42.160 --> 00:30:45.140
If you're setting up a sophisticated
networking environment,

00:30:45.140 --> 00:30:49.240
you may need to take on some
additional work for TCP like setting up

00:30:49.350 --> 00:30:51.650
DNS servers or setting up DHCP servers.

00:30:51.660 --> 00:30:55.900
And Mac OS X provides a set of networking
services that allow you to do this.

00:30:55.900 --> 00:31:00.850
It's fully standards-based,
so all of the relevant standards, DHCP,

00:31:00.850 --> 00:31:04.900
BootB, DNS, SLP,
are all supported by Mac OS X Server.

00:31:05.640 --> 00:31:10.450
We have DHCP which provides support
for dynamic TCP address management

00:31:10.450 --> 00:31:15.640
and can also be used to set up NetBoot
clients included in Mac OS X Server.

00:31:15.640 --> 00:31:19.620
Mac OS X itself includes a
technology like Mac OS 9 did called

00:31:19.620 --> 00:31:24.390
SLP that allows you to dynamically
register resources on the network.

00:31:24.440 --> 00:31:28.610
It is TCP's equivalent of name
registration like NBP for those of

00:31:28.710 --> 00:31:31.420
you that are familiar with AppleTalk.

00:31:31.520 --> 00:31:35.120
And it really allows plug and play
of resources and services on the

00:31:35.120 --> 00:31:39.040
TCP network like AppleTalk but without
all the chattiness of AppleTalk.

00:31:39.050 --> 00:31:42.740
And the basic registration and
lookup is included in the clients.

00:31:42.740 --> 00:31:47.090
But what Mac OS X Server adds is a more
sophisticated server and administration

00:31:47.170 --> 00:31:50.550
capability that allows you to set up
scopes which are sort of like zones in

00:31:50.550 --> 00:31:54.050
AppleTalk to really manage a network,
an SLP network for a

00:31:54.050 --> 00:31:55.280
large number of clients.

00:31:55.280 --> 00:31:58.120
And of course those of
you that want to do DNS,

00:31:58.120 --> 00:32:01.810
there's a DNS server in there
as well and we'll be adding more

00:32:01.890 --> 00:32:04.650
sophisticated UI to that in the future.

00:32:04.690 --> 00:32:06.160
the Unix underpinnings as well.

00:32:06.160 --> 00:32:09.670
We have the Unix networking stack
and the IP filtering that goes

00:32:09.740 --> 00:32:12.740
with that for firewall protection.

00:32:12.960 --> 00:32:17.640
So that sort of covers the core
foundation services in Mac OS X Server.

00:32:17.640 --> 00:32:20.480
The next area, of course,
that's key to a lot of our customers

00:32:20.480 --> 00:32:24.210
is the desktop management that
includes Macintosh Manager and Netboot.

00:32:24.240 --> 00:32:26.160
And for that,
I'm going to bring up Rob Neville,

00:32:26.160 --> 00:32:31.000
who's going to talk to you more about
desktop management in Mac OS X Server.

00:32:50.900 --> 00:32:54.300
Hi, I'm here today to talk to you
about desktop management with

00:32:54.300 --> 00:32:57.640
Mac OS X Server software.

00:32:57.640 --> 00:33:01.660
Desktop management comes in basically

00:33:02.330 --> 00:33:04.440
Two different flavors
with Mac OS X Server.

00:33:04.440 --> 00:33:08.540
You have your basic
Mac Manager which is a server,

00:33:08.540 --> 00:33:13.880
the server controls your client software
in a variety of different environments.

00:33:13.880 --> 00:33:19.400
However, we also have Netboot and we're
releasing a Netboot 2.0 server

00:33:19.400 --> 00:33:24.010
in this release which enhances
and increases the performance

00:33:24.010 --> 00:33:26.830
and the capabilities of Netboot.

00:33:27.240 --> 00:33:29.290
For Mac Manager,
basically what we wanted to do is

00:33:29.450 --> 00:33:30.630
we have a certain set of goals.

00:33:30.730 --> 00:33:34.640
We wanted to make a simple
administration experience.

00:33:34.730 --> 00:33:39.320
We wanted to work in an integrated
environment with industry standards.

00:33:39.370 --> 00:33:46.010
And we wanted to allow you to administer
the server for Mac OS X and Mac OS 9.

00:33:46.730 --> 00:33:50.760
We wanted to make sure that as we
move Macintosh Manager forward that

00:33:50.760 --> 00:33:55.250
we maintain compatibility with the
thousands of Mac Manager clients

00:33:55.420 --> 00:33:57.190
that are out there.

00:33:57.530 --> 00:34:03.090
And we wanted to make the experience
that Macintosh Manager users have

00:34:03.340 --> 00:34:07.610
More integrated into the
Mac OS X Server environment so that what

00:34:07.660 --> 00:34:13.430
we're doing is we're no longer using
a separate users and groups environment.

00:34:13.500 --> 00:34:24.300
[Transcript missing]

00:34:30.150 --> 00:34:31.300
What does that mean?

00:34:31.390 --> 00:34:33.470
Well,
you have a single username and a single

00:34:33.550 --> 00:34:35.900
password for all of your services.

00:34:35.960 --> 00:34:40.110
The users use the same
Users and Groups database.

00:34:40.240 --> 00:34:45.240
Because the Users and Groups database can
access Directory services and accesses

00:34:45.240 --> 00:34:49.300
Directory services on Mac OS X Server,
that also means that you can store

00:34:49.300 --> 00:34:53.720
your Users and Groups data not
necessarily on the Mac OS X Server.

00:34:53.720 --> 00:34:59.390
They can be back-ended on an LDAP server
or an Active Directory server.

00:35:00.950 --> 00:35:06.010
This is the place where your Macintosh
user will have his home directories.

00:35:06.010 --> 00:35:12.130
And the experience will be very similar
to what you get under Mac OS X with

00:35:12.130 --> 00:35:14.540
their user home directories.

00:35:14.540 --> 00:35:19.070
Our admin for Macintosh
Manager is in Carbon.

00:35:19.170 --> 00:35:23.290
That means that you can
run it on a Macintosh

00:35:23.570 --> 00:35:36.930
The client support runs from
Macintosh operating system 8.1 to 9.x.

00:35:36.950 --> 00:35:39.880
This version also
contains Kerberos support.

00:35:40.640 --> 00:35:45.620
And the last item is we're planning to
do a technical article in the coming

00:35:45.620 --> 00:35:53.030
weeks hopefully to discuss what you
would do to have your applications fit

00:35:53.030 --> 00:35:57.070
inside a Macintosh Manager environment.

00:36:02.430 --> 00:36:06.200
This is basically the
Macintosh Manager architecture.

00:36:06.280 --> 00:36:10.800
Macintosh Manager server sits on the
same machine as your Apple Share server,

00:36:10.800 --> 00:36:14.160
your Mac OS X Apple Share server,
which both sit on top

00:36:14.240 --> 00:36:17.010
of Directory services,
as I discussed.

00:36:17.230 --> 00:36:21.400
Your user profiles are stored
through Directory services.

00:36:21.500 --> 00:36:25.700
Your users and groups database can be
stored locally on the Mac OS X Server or

00:36:25.700 --> 00:36:29.100
they can be stored remotely since they're
accessed through Directory services.

00:36:29.190 --> 00:36:32.920
And your clients sit out on
the network wherever they will

00:36:33.000 --> 00:36:34.890
as does your administration.

00:36:36.940 --> 00:36:38.200
Netboot.

00:36:38.230 --> 00:36:40.500
We've made a few changes to Netboot.

00:36:40.570 --> 00:36:43.960
We wanted to simplify the
workgroup administration.

00:36:43.960 --> 00:36:48.890
We wanted to have multiple desktops
share the same server hosted boot image.

00:36:48.890 --> 00:36:52.900
We wanted to be able to protect
that image from user modification.

00:36:52.900 --> 00:36:57.890
And we wanted to make
desktop OS upgrades trivial.

00:36:58.330 --> 00:37:04.210
We work currently with a standard
unmodified Mac OS 9 system.

00:37:04.410 --> 00:37:08.640
and currently we work
with Mac OS 9 system only.

00:37:08.740 --> 00:37:13.510
The boot performance that we've
experienced in this server is comparable,

00:37:13.570 --> 00:37:17.030
believe it or not, to a local disk.

00:37:19.760 --> 00:37:22.500
We have some improvements.

00:37:22.650 --> 00:37:24.560
Some of these are in the product now.

00:37:24.670 --> 00:37:28.230
We interoperate with
standard DHCP servers.

00:37:29.100 --> 00:37:32.900
In a previous version,
you had to have a hard-coded IP address

00:37:33.480 --> 00:37:37.340
for each individual Mac Netboot client.

00:37:37.460 --> 00:37:43.800
With the current release of 2.0,
the client gets its IP address from DHCP.

00:37:43.940 --> 00:37:48.930
This allows for you to be able
to add a new client dynamically

00:37:48.930 --> 00:37:51.780
to your Netboot environment.

00:37:52.010 --> 00:37:54.660
This also,
we've also added some scalability.

00:37:54.780 --> 00:37:58.900
In the previous release you
could have one server per subnet.

00:37:59.000 --> 00:38:01.900
In the current release you could
have multiple servers per subnet.

00:38:01.980 --> 00:38:06.900
However, since there are two
different types of clients,

00:38:06.900 --> 00:38:11.900
we have a 1.0 compatibility version
that's running in this current server.

00:38:11.900 --> 00:38:14.900
You can only have one
1.0 server per subnet.

00:38:15.140 --> 00:38:19.860
But if your clients are newer and you
can have multiple servers that offer

00:38:19.960 --> 00:38:25.880
the 2.0 functionality per subnet,
you can also talk across routers.

00:38:27.220 --> 00:38:29.930
So what do you need to,
how does this impact you other

00:38:29.930 --> 00:38:31.430
than as users of the product?

00:38:31.530 --> 00:38:36.390
Well you have to assume that the
Mac OS that you're going to be

00:38:36.500 --> 00:38:40.440
talking to or that your users are
going to be using is not persistent.

00:38:40.440 --> 00:38:41.230
And what does that mean?

00:38:41.240 --> 00:38:43.890
Well that means that the
operating system is existing on

00:38:43.960 --> 00:38:45.390
a hard drive and could go away.

00:38:45.460 --> 00:38:49.490
Not on a hard drive, excuse me,
on the network and could go away.

00:38:55.230 --> 00:38:59.660
So this is a brief graphic of the
way the server currently is working.

00:38:59.710 --> 00:39:04.280
Basically what you have is you can
have your own existing network.

00:39:04.300 --> 00:39:08.140
You can plug a Mac OS X Server any
place on that network on

00:39:08.140 --> 00:39:10.200
either side of the router.

00:39:10.810 --> 00:39:15.920
And your clients can get their
DHCP services from that server.

00:39:15.960 --> 00:39:18.800
They can also NetBoot from
that particular server.

00:39:18.920 --> 00:39:24.360
And we've built in some load balancing
so that if you have a certain number

00:39:24.360 --> 00:39:28.100
of clients coming in talking to
Server A in this particular example,

00:39:28.240 --> 00:39:32.750
and it's fairly busy serving pages,
it'll automatically route over

00:39:32.750 --> 00:39:34.820
to Server B and/or Server C.

00:39:38.650 --> 00:39:41.780
Next we're going to have
Greg Vaughan talk about

00:39:41.880 --> 00:39:44.610
developing for Mac OS X Server.

00:39:57.240 --> 00:40:00.080
Basically, I've been working doing
server development at

00:40:00.080 --> 00:40:02.130
Apple for like over 12 years.

00:40:02.760 --> 00:40:05.750
We've talked about a couple
developer opportunities here in

00:40:05.750 --> 00:40:07.520
conjunction with our product.

00:40:07.550 --> 00:40:11.480
What I'm going to focus on is
actually developing writing

00:40:11.480 --> 00:40:17.050
reporting servers to complement the
ones we provide in Mac OS X Server.

00:40:17.260 --> 00:40:19.040
It's a short presentation.

00:40:19.040 --> 00:40:22.610
I'm just going to point out a couple
things to watch out for and some things

00:40:22.620 --> 00:40:27.340
in X Server that you can use to take
advantage of and customize services.

00:40:29.750 --> 00:40:34.700
So, porting Unix servers to X Server,
I mean basically it's Unix,

00:40:34.700 --> 00:40:38.930
shouldn't be any more difficult to
port to than any other Unix platform.

00:40:39.150 --> 00:40:41.440
There are a couple
things to watch out for.

00:40:41.630 --> 00:40:45.670
Probably the biggest thing
is the fact that HFS is a

00:40:45.670 --> 00:40:48.380
case-insensitive file system.

00:40:48.680 --> 00:40:52.990
Definitely, Unix servers may or may not
rely on case sensitivity,

00:40:52.990 --> 00:40:55.050
but it's something to really
watch out for because it can

00:40:55.050 --> 00:40:56.290
cause really subtle bugs.

00:40:56.300 --> 00:41:00.470
When we were reporting Apache over,
we had a problem with the security

00:41:00.470 --> 00:41:05.550
stuff because the URLs you
enter in to restrict access,

00:41:05.610 --> 00:41:07.200
Apache would match case sensitive.

00:41:07.200 --> 00:41:12.800
And if the user used a different case,
Apache would say, "Oh, this is fine.

00:41:12.800 --> 00:41:15.780
It's for something else." Then the
file system would find the file

00:41:15.780 --> 00:41:17.200
you were trying to restrict.

00:41:17.330 --> 00:41:20.450
So basically,
that was something we ran into late and

00:41:20.450 --> 00:41:22.800
had to figure out a way to work around.

00:41:22.800 --> 00:41:26.400
It's subtle bugs that you
really need to watch out for.

00:41:26.400 --> 00:41:31.300
If you have a server that basically
you can't get to work any other way,

00:41:31.300 --> 00:41:35.600
you can always run it on UFS and
get the case sensitivity,

00:41:35.600 --> 00:41:36.980
but it's not as nice.

00:41:37.000 --> 00:41:44.500
Another thing is in /etc files
like /etc/password or /etc/fstab,

00:41:44.880 --> 00:41:46.000
generally you're not supposed to
really access those types of things.

00:41:46.000 --> 00:41:48.990
You're not supposed to really
access those directly any way.

00:41:49.000 --> 00:41:51.000
There are APIs to access them.

00:41:51.000 --> 00:41:54.460
Definitely on 10,
those files are redirected

00:41:54.460 --> 00:41:58.980
through the APIs to go to NetInfo
and other directory services.

00:41:59.010 --> 00:42:02.930
So you should use the APIs.

00:42:03.070 --> 00:42:06.550
If you're reporting a Unix server,
it's probably already talking

00:42:06.560 --> 00:42:07.940
to standard Unix APIs.

00:42:08.060 --> 00:42:11.000
For a server,
that's generally a good thing.

00:42:11.000 --> 00:42:15.990
There are some APIs you can use on
10 that will help you add value.

00:42:16.090 --> 00:42:18.000
Directory services is certainly one.

00:42:18.000 --> 00:42:21.000
The directory services presentation
is right after this one,

00:42:21.000 --> 00:42:24.000
so you might want to
stick around for that.

00:42:24.000 --> 00:42:27.350
Core Foundation provides a
lot of different utilities

00:42:27.390 --> 00:42:28.900
that can be very useful.

00:42:29.000 --> 00:42:38.000
Things for dealing with Unicode or
parsing XML files and stuff like that.

00:42:38.000 --> 00:42:42.140
And if you want to gain access
to the HFS+ information,

00:42:42.140 --> 00:42:45.000
resource forks, type in creator.

00:42:45.000 --> 00:42:48.000
Carbon file system stuff
is what you want to use.

00:42:48.000 --> 00:42:51.000
You do have to be really
careful though on 10.

00:42:51.050 --> 00:42:56.980
A lot of the APIs outside of the core
services require a logged in user.

00:42:57.050 --> 00:42:59.500
And for a server,
generally you'd like your service

00:42:59.500 --> 00:43:03.000
to be able to start at boot time
and not have somebody logged in.

00:43:03.000 --> 00:43:08.000
So certainly want to separate
out any UI related things.

00:43:08.000 --> 00:43:11.460
And you want to watch for
APIs that require a user to

00:43:11.460 --> 00:43:13.490
be logged in on the server.

00:43:15.620 --> 00:43:17.890
A couple of random little things.

00:43:17.920 --> 00:43:21.270
Starting the server.

00:43:21.490 --> 00:43:25.690
Most things in X Desktop are started
through bundles in startup items.

00:43:25.710 --> 00:43:31.590
Basically it contains a script that
starts your server usually based

00:43:31.590 --> 00:43:33.610
on a parameter in host config.

00:43:33.640 --> 00:43:36.900
And then there's a P list
to determine start order.

00:43:36.900 --> 00:43:40.640
You can add your stuff to
startup items to start a server.

00:43:40.640 --> 00:43:43.500
On X Server we also provide
the watchdog process.

00:43:43.620 --> 00:43:45.680
This is the thing that
provides reliability.

00:43:45.680 --> 00:43:47.670
I'll talk more about that in a second.

00:43:47.680 --> 00:43:51.270
Admin user versus root.

00:43:52.070 --> 00:43:56.560
Basically servers often will
run as root and that's fine.

00:43:56.680 --> 00:44:01.180
But when you actually log into the
machine physically the users are

00:44:01.180 --> 00:44:03.600
going to log in as an administrator.

00:44:03.600 --> 00:44:05.880
And Unix won't treat them as root.

00:44:05.990 --> 00:44:11.350
So you do have to be aware of the
things that administrators can and

00:44:11.350 --> 00:44:17.800
can't do and how they're going to
interact with the server running as root.

00:44:21.070 --> 00:44:25.130
As far as file system layout,
if you've got a Unix server,

00:44:25.130 --> 00:44:29.800
probably it's going to have files in the
normal Unix directories and that's fine.

00:44:29.800 --> 00:44:32.670
You do need to be aware of,
if you have files that you

00:44:32.670 --> 00:44:36.190
want the user to interact with,
log files or config files,

00:44:36.220 --> 00:44:39.400
since the Unix directories
aren't visible from the finder,

00:44:39.400 --> 00:44:42.760
unless you want the user to have
to go into the terminal and use VI,

00:44:43.100 --> 00:44:47.120
you may want to either move them
or one of the things we do is

00:44:47.260 --> 00:44:51.290
provide a SIM link in a place like
/library that points into the normal

00:44:51.290 --> 00:44:52.900
Unix place for the file to live.

00:44:52.900 --> 00:44:56.680
That way user can use, you know,
TextEdit and other GUI apps

00:44:56.680 --> 00:44:58.240
to deal with those files.

00:44:58.240 --> 00:45:02.880
Directory permissions, again,
because the administrator isn't

00:45:03.010 --> 00:45:05.040
going to be logging in as root.

00:45:05.040 --> 00:45:08.400
If he's going to write to a file,
you need to make sure it lives

00:45:08.430 --> 00:45:11.260
in a place where the admin
users have write access to.

00:45:14.520 --> 00:45:18.180
Other services,
the Watchdog service we've sort of

00:45:18.490 --> 00:45:20.640
referred to in the other sessions.

00:45:20.640 --> 00:45:24.500
It's the thing that provides the
reliability of restarting servers.

00:45:24.500 --> 00:45:29.500
It's got a config file that you can add
your own service to that will start it

00:45:29.720 --> 00:45:34.500
at boot time and if your service crashes
it'll get automatically restarted.

00:45:34.500 --> 00:45:37.490
It also,
you don't really need to directly deal

00:45:37.580 --> 00:45:42.500
with this but it also will work with
the hardware on the system so that

00:45:42.500 --> 00:45:45.500
the whole servers for some reason,
you know, gets hosed.

00:45:45.500 --> 00:45:48.500
It'll basically restart
the whole machine.

00:45:48.560 --> 00:45:53.250
If you have 10 server installed,
it's got a man page that fully describes

00:45:53.250 --> 00:45:58.970
it so you can just do man watchdog and
it'll say how to use the config file.

00:45:59.390 --> 00:46:04.410
Servers basically,
if it uses crypt authentication,

00:46:04.590 --> 00:46:06.630
you can continue to use that.

00:46:06.850 --> 00:46:09.200
If you want to provide other
authentication methods,

00:46:09.200 --> 00:46:12.280
again,
Directory services is the way we do that.

00:46:12.370 --> 00:46:16.600
You can go to the presentation
after this and find it.

00:46:16.680 --> 00:46:21.390
We use that with Samba to
provide NT style authentication.

00:46:21.450 --> 00:46:24.620
And it's also extensible,
so you can provide other

00:46:24.620 --> 00:46:26.490
authentication methods.

00:46:28.760 --> 00:46:33.840
As far as development tools,
if you have a Unix app that

00:46:33.840 --> 00:46:39.180
has scripts and make files,
it's usually easiest to

00:46:39.180 --> 00:46:40.700
continue to use those.

00:46:40.810 --> 00:46:43.920
You can use Project Builder
to edit your source code and

00:46:43.920 --> 00:46:45.700
create a project for that.

00:46:45.700 --> 00:46:49.700
If you're writing something from scratch,
I prefer using the GUI tools.

00:46:49.700 --> 00:46:52.700
You can always use VI if you like.

00:46:52.700 --> 00:46:57.920
If you're writing something that
specifically is for X Server versus

00:46:57.920 --> 00:47:01.700
X Desktop and you want to check to make
sure you're running on a X Server system,

00:47:01.710 --> 00:47:07.010
there is a file, basically,
serverversion.plist that only exists on

00:47:07.020 --> 00:47:10.680
X Server in System Library Core Services.

00:47:10.700 --> 00:47:14.200
You can just check for the
existence of that file.

00:47:14.300 --> 00:47:18.360
One final thing is,
I want to make a plea.

00:47:18.460 --> 00:47:22.040
If you're writing a normal desktop app,
the most important thing you're

00:47:22.040 --> 00:47:24.200
usually testing for is functionality.

00:47:24.200 --> 00:47:27.590
The server app,
most important thing is you want the

00:47:27.600 --> 00:47:30.200
server to be able to run for like months.

00:47:30.200 --> 00:47:33.960
And so you really need to watch out
for things like memory leaks that will

00:47:33.960 --> 00:47:36.190
affect system performance over time.

00:47:36.280 --> 00:47:40.260
There's a couple other sessions
you can go to in terms of debugging

00:47:40.280 --> 00:47:42.200
tools and performance tools.

00:47:42.290 --> 00:47:46.200
But you really want to pay attention to
that when you're debugging your apps.

00:47:46.200 --> 00:47:50.200
Malloc Debug is an example of a
good tool to look for memory leaks.

00:47:50.200 --> 00:47:54.200
And that's covered in other sessions.

00:47:55.020 --> 00:47:58.840
So basically here's some other
sessions that you want to go to.

00:47:58.840 --> 00:48:02.600
I don't obviously have time to
really go into detail on this and

00:48:02.600 --> 00:48:04.900
it's well covered in other sessions.

00:48:05.080 --> 00:48:07.900
First couple have already happened.

00:48:07.900 --> 00:48:10.900
The Network Services location if
you want to provide browsability

00:48:10.900 --> 00:48:14.900
for a server is very nice.

00:48:14.900 --> 00:48:17.900
And the Performance Tools and
Debugging Tools are very good sessions.

00:48:17.900 --> 00:48:19.900
I highly recommend.

00:48:19.900 --> 00:48:23.900
And also the Directory Services one
right after this.

00:48:24.110 --> 00:48:27.600
And Eric come back up.

00:48:33.500 --> 00:48:37.060
Thank you, Greg.

00:48:37.060 --> 00:48:40.000
So why develop for Mac OS X Server?

00:48:40.000 --> 00:48:45.710
Well, Mac OS X Server is Apple's server
platform for the next generation.

00:48:45.730 --> 00:48:48.570
Just like Apple is committed
to Mac OS X as the future

00:48:48.630 --> 00:48:53.490
of our operating system,
Apple is committed to Mac OS X Server as

00:48:53.490 --> 00:48:56.480
our future for our server platform.

00:48:56.480 --> 00:49:00.140
We've designed Mac OS X Server to
specifically be a server.

00:49:00.160 --> 00:49:01.420
It's not a desktop platform.

00:49:01.420 --> 00:49:03.660
This is a server platform.

00:49:03.660 --> 00:49:07.070
And by developing for Mac OS X Server,
you can take advantage of that.

00:49:07.070 --> 00:49:09.870
You can take advantage of some
of the server-specific features

00:49:09.880 --> 00:49:14.880
that we've provided like the fault
tolerance systems and the access

00:49:14.960 --> 00:49:17.540
to some of the other services.

00:49:17.540 --> 00:49:21.610
And by building for Mac OS X Server,
you can take full advantage of Unix

00:49:21.610 --> 00:49:25.900
and the open source development
community and open source projects

00:49:26.020 --> 00:49:29.420
as whether they're projects that
are out on the Internet today or

00:49:29.420 --> 00:49:31.330
they're code that's Apple's code.

00:49:31.340 --> 00:49:34.870
kicking back to those
open source projects.

00:49:36.290 --> 00:49:39.190
So some key developer
opportunities for you.

00:49:39.210 --> 00:49:41.820
Obviously, one of them,
which will be discussed more

00:49:41.820 --> 00:49:47.460
in the session that follows,
is Directory services integration.

00:49:48.040 --> 00:49:50.080
There's a lot of different
directory services,

00:49:50.190 --> 00:49:53.660
plug-ins that could be developed
for integration with Kerberos,

00:49:53.830 --> 00:50:00.450
Native Active Directory, Novell, NIS,
NIS+. There's server management

00:50:00.450 --> 00:50:04.290
and administration opportunities
for you as a developer to build

00:50:04.600 --> 00:50:10.850
web-based management systems or some
log analysis or reporting software.

00:50:11.020 --> 00:50:13.400
Server monitoring, backup and restore.

00:50:13.400 --> 00:50:17.110
So a lot of different
opportunities are available to you.

00:50:18.700 --> 00:50:21.490
On the web side,
we discussed some of these earlier,

00:50:21.490 --> 00:50:25.260
but you could build other
web interfaces and other

00:50:25.260 --> 00:50:27.500
applications for the web services.

00:50:27.640 --> 00:50:31.350
Whether it's taking advantage of the
patching module integration that we have,

00:50:31.410 --> 00:50:36.730
web objects, Java servlets,
or even building a database

00:50:36.730 --> 00:50:39.070
middleware solution.

00:50:39.580 --> 00:50:43.360
On the hardware side,
there's RAID solutions that could

00:50:43.360 --> 00:50:46.990
be developed or storage arrays,
power management systems.

00:50:47.000 --> 00:50:49.940
And in the design and
publishing community,

00:50:49.940 --> 00:50:54.200
there are professional high-end printing
solutions that could be developed

00:50:54.200 --> 00:50:55.900
and deployed on Mac OS X Server.

00:50:58.560 --> 00:51:03.300
So this is more of a roadmap for some
of the sessions that will follow.

00:51:03.300 --> 00:51:06.110
Notice the Directory Services one
following here.

00:51:06.130 --> 00:51:12.640
We will have a session on
QuickTime Streaming Server on Wednesday.

00:51:12.650 --> 00:51:17.560
There's a Mac OS X Server feedback
session on Friday.

00:51:17.560 --> 00:51:21.200
Network service location for
registering services on the network.

00:51:21.510 --> 00:51:23.950
Security in Kerberos on Thursday.

00:51:23.980 --> 00:51:29.140
And how to take advantage of
AFP 3.0 and the Apple Share client.

00:51:29.140 --> 00:51:32.670
That's in Mac OS X on Thursday as well.

00:51:34.100 --> 00:51:42.160
We've got some file system, open source,
BSE services, and of course, WebObjects.

00:51:42.940 --> 00:51:47.280
So if you have any questions
about developing for Mac OS X or

00:51:47.590 --> 00:51:49.700
taking advantage of some of
the networking services that

00:51:49.700 --> 00:51:54.020
we provide in Mac OS X Server,
feel free to contact Tom Weier.

00:51:54.020 --> 00:51:57.460
Hopefully all of you in this
room know him right now.

00:51:57.460 --> 00:51:58.390
There's his email address.