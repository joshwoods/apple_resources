WEBVTT

00:00:00.700 --> 00:00:02.960
Okay.

00:00:03.090 --> 00:00:07.260
Well, I'm here to talk today about
the AppleShare Client in

00:00:07.340 --> 00:00:11.510
Mac OS X and the AFP 3.0 Protocol.

00:00:14.470 --> 00:00:19.530
I want to go over what we've
done with AFP 3.0 in Mac OS X,

00:00:19.580 --> 00:00:23.910
talk about the AFP client
implementation and then go over the

00:00:23.920 --> 00:00:28.280
User Authentication Module SDK that
allows you to write plugin

00:00:28.280 --> 00:00:31.420
authentication for AppleShare on X.

00:00:33.920 --> 00:00:38.280
I'd like to start with a bit of overview
of the history and the goals of AFP 3.0,

00:00:38.290 --> 00:00:42.900
what we've got that's new,
and go over what we've

00:00:42.900 --> 00:00:44.900
actually accomplished here.

00:00:44.900 --> 00:00:52.580
AFP 3.0 is similar to HFS+ in
the same way that AFP 2.2 and the

00:00:52.590 --> 00:00:58.170
earlier versions were similar to HFS,
so some of the same

00:00:58.170 --> 00:00:59.900
limitations and things.

00:00:59.970 --> 00:01:07.890
So we did AFP 3.0 in order to provide
support for HFS+, provide longer names,

00:01:08.120 --> 00:01:13.900
improve the Unix-like
feel of the whole thing,

00:01:13.900 --> 00:01:17.540
and give you support for
greater than 2GB files,

00:01:17.560 --> 00:01:21.930
long file names,
and to improve our localization,

00:01:21.930 --> 00:01:24.390
our multilingual stuff.

00:01:27.110 --> 00:01:32.270
AFP 3.0 is just like all
the other AFP versions is a

00:01:32.280 --> 00:01:34.580
superset of the previous ones.

00:01:34.680 --> 00:01:37.500
We did have to remove ProDOS support.

00:01:37.500 --> 00:01:43.020
We've added long Unicode names
up to 255 Unicode characters,

00:01:43.020 --> 00:01:47.040
64-bit file sizes that's somewhere
way up in the terabytes instead of

00:01:47.040 --> 00:01:49.000
this 2-gig limit we've got today.

00:01:49.000 --> 00:01:51.280
We've added Unix permissions.

00:01:51.280 --> 00:01:56.000
We've added some optimizations to
the protocol for long attentions to

00:01:56.000 --> 00:02:01.000
support directory services much like
Kerberos realms and things like that,

00:02:01.270 --> 00:02:04.000
directory service nodes from
the DIRS services folks.

00:02:04.000 --> 00:02:11.270
Support for automatically reconnecting
if a connection gets broken and we now

00:02:11.270 --> 00:02:18.000
do things in GMT rather than in seconds
since the-- Seconds since the Epic.

00:02:19.000 --> 00:02:20.940
Let's see.

00:02:21.030 --> 00:02:25.000
The basic new data type that
we've added is an AFP name.

00:02:25.000 --> 00:02:27.980
It's in the Git folder,
Parms calls and things.

00:02:28.010 --> 00:02:29.990
It's a new path type.

00:02:30.000 --> 00:02:33.540
So it's a one-byte path type,
four bytes of an encoding hint which

00:02:33.550 --> 00:02:38.990
enables the finder and Carbon to display
the file name or what have you correctly.

00:02:39.020 --> 00:02:46.100
And two bytes of length and then
up to 765 bytes of UTF-8 data.

00:02:47.300 --> 00:02:51.240
The things that we've
not finished in Mac OS X,

00:02:51.350 --> 00:02:57.110
at least in the first release,
is that we do not have reconnect support,

00:02:57.300 --> 00:03:04.960
we do not have long attention support,
and we haven't completely hooked

00:03:04.960 --> 00:03:04.960
up with directory services to get
our full directory service support.

00:03:05.120 --> 00:03:12.100
The AFP version string that we're
advertising for AFP 3.0 is AFP X03.

00:03:12.100 --> 00:03:14.720
It'll be a Stump the
Experts question next year,

00:03:14.720 --> 00:03:16.680
so be ready.

00:03:20.300 --> 00:03:26.210
This is the list of the
calls that we've added.

00:03:26.570 --> 00:03:26.630
We've got the

00:03:26.800 --> 00:03:30.210
The first three there,
the byte range lock, read and write,

00:03:30.340 --> 00:03:36.640
are all things added to handle the
larger file sizes since we've got signed

00:03:36.640 --> 00:03:38.940
offsets and things like that in there.

00:03:38.940 --> 00:03:42.360
So we had to create
some new calls for that.

00:03:42.360 --> 00:03:46.210
The get auth methods and
the login extended are to

00:03:46.210 --> 00:03:50.810
support directory services.

00:03:50.810 --> 00:03:50.820
It allows you to

00:03:50.950 --> 00:03:58.830
query a directory node for the
authorization types that it supports.

00:03:59.260 --> 00:04:03.750
The login extended allows you to specify
the directory node you're logging into.

00:04:03.770 --> 00:04:10.580
It also allows you to use UTF-8 usernames
and longer usernames for that matter.

00:04:10.690 --> 00:04:17.790
GetSessionToken and DisconnectOldSession
are used by the Reconnect code.

00:04:17.860 --> 00:04:21.900
When the AppleShare
client logs in initially,

00:04:21.900 --> 00:04:24.200
if you're going to be
supporting Reconnect and

00:04:24.200 --> 00:04:28.240
have set an appropriate bit,
they'll ask for a session token,

00:04:28.290 --> 00:04:33.700
which is a way to uniquely identify
that specific session from the server.

00:04:33.700 --> 00:04:38.940
And then if that connection
breaks and the AppleShare client

00:04:39.090 --> 00:04:43.830
wishes to attempt to reconnect,
it will re-authenticate

00:04:43.830 --> 00:04:48.790
and then it will send the
FPDISCONNECTOLDSESSION request and

00:04:48.900 --> 00:04:54.140
is handing that token that it got back
from the FPGIT session token call.

00:04:54.140 --> 00:04:59.060
And that will tell the server
to release all of the locks,

00:04:59.060 --> 00:05:06.170
all of the files and things
that were held by the old

00:05:06.170 --> 00:05:06.170
session that is no longer there.

00:05:06.430 --> 00:05:10.210
That allows, hopefully,
for the client to seamlessly

00:05:10.210 --> 00:05:17.000
rebuild the resources and things
that were used by the old session

00:05:17.000 --> 00:05:20.250
that had gotten disconnected.

00:05:22.500 --> 00:05:24.670
We've changed a few calls,
pretty much adding new

00:05:24.710 --> 00:05:26.400
bitmaps and things like that.

00:05:26.430 --> 00:05:30.640
Server info call,
we've added flag bits to say it

00:05:30.640 --> 00:05:34.740
supports ReConnect and supports
the DIRS services stuff.

00:05:34.740 --> 00:05:37.990
We've added directory
names listed in there.

00:05:38.000 --> 00:05:41.240
Get server parms,
we're using UTF-8 volume names,

00:05:41.240 --> 00:05:44.970
but they still have
the single byte length.

00:05:44.990 --> 00:05:49.250
So what you get is just
an encoding change.

00:05:49.620 --> 00:05:56.160
Map ID and Map Name map between
user IDs and UTF-8 names now as

00:05:56.160 --> 00:05:59.730
well as just standard Pascal names.

00:05:59.730 --> 00:06:02.500
Map Name is the same thing the other way.

00:06:02.500 --> 00:06:07.110
Gitfile.derp arms also has,
it's not on the list here,

00:06:07.110 --> 00:06:12.920
but it's got some bitmap changes as
well to support longer file sizes.

00:06:15.150 --> 00:06:20.160
Leand Wallace: Going on to the AppleShare
client in Mac OS X.

00:06:20.160 --> 00:06:23.240
The basic goal of the project was to
provide the same functionalities the

00:06:23.240 --> 00:06:29.100
Mac OS 9 client and to capitalize
on what I promised last year

00:06:29.100 --> 00:06:35.080
to have minimal changes in the
APIs that you would program to it.

00:06:35.140 --> 00:06:39.930
We've done pretty good.

00:06:40.900 --> 00:06:46.560
The experience of mounting a volume
in Mac OS X is a little bit different.

00:06:46.560 --> 00:06:49.060
You've got a lot more
ways to mount volumes.

00:06:49.060 --> 00:06:56.060
From the finder through
the go-to server thing,

00:06:56.060 --> 00:06:56.060
you can use the classic chooser.

00:06:56.300 --> 00:07:19.200
[Transcript missing]

00:07:19.630 --> 00:07:20.880
Access files and stuff.

00:07:20.910 --> 00:07:24.740
And we've added a lot of
international support using the

00:07:24.890 --> 00:07:28.090
Mac OS X internationalization tools.

00:07:29.490 --> 00:07:36.320
In terms of what you see as a developer,
the AppleShare client fits into

00:07:36.320 --> 00:07:41.040
many layers in the 10 world.

00:07:41.210 --> 00:07:48.750
and we have three APIs that
we're working with at the moment.

00:07:50.800 --> 00:07:54.870
As you can see we've got some
things which live and can be called

00:07:54.870 --> 00:07:57.480
from Carbon as the finder there.

00:07:57.480 --> 00:07:59.800
There's a high level
AppleShare Client framework.

00:07:59.800 --> 00:08:04.260
There's a core framework that
gets called by command line tools,

00:08:04.260 --> 00:08:06.800
the auto mouter and things like that.

00:08:06.800 --> 00:08:11.710
Then there's some things in kernel space,
a plug-in file system

00:08:11.710 --> 00:08:13.790
and a socket interface.

00:08:13.800 --> 00:08:20.800
The user authentication methods sort
of straddle the Carbon non-Carbon line

00:08:20.800 --> 00:08:24.380
because they have a Carbon portion
which can put up HI and a non-Carbon

00:08:24.380 --> 00:08:28.110
portion for those times when
you're not allowed to put up HI.

00:08:30.200 --> 00:08:34.620
shared volume enumerator API which
was used by Nav Services in the

00:08:34.620 --> 00:08:40.100
network browser on Mac OS 9 has
got some more calls that allow

00:08:40.100 --> 00:08:43.190
you to do more things in a more

00:08:43.660 --> 00:08:47.900
in a more Unix-y fashion, I suppose.

00:08:47.950 --> 00:08:54.710
The CreateSharedVolumeEnumeratorFromAdd
ress takes the struct sock

00:08:54.710 --> 00:09:00.640
adder to do things rather
than a server name in a zone.

00:09:00.640 --> 00:09:07.460
MountSharedVolumeOnMP mounts a
volume on a specified mount point

00:09:07.460 --> 00:09:10.150
and the change password call
is one that we added in here.

00:09:10.490 --> 00:09:16.410
All these things need Carbon because
they can put up HI if need be.

00:09:16.640 --> 00:09:21.500
The other API that's currently
available is AFP URLs.

00:09:21.500 --> 00:09:26.500
And you've seen them if you've
looked at ConnectTo sometimes.

00:09:26.500 --> 00:09:29.500
And they're very similar to FTP URLs.

00:09:29.500 --> 00:09:34.500
These URLs will allow you to add
username and password to things.

00:09:34.500 --> 00:09:39.630
And in the example here,
I've got a username of Leland,

00:09:39.630 --> 00:09:44.910
password of foo, at a specific server and
a specific volume name.

00:09:45.640 --> 00:09:54.030
You can also specify an AppleTalk one,
although that's not

00:09:54.030 --> 00:09:55.670
very useful right now.

00:09:56.100 --> 00:10:01.850
Leand Wallace: So, I'm going to go ahead
and start the session.

00:10:01.850 --> 00:10:01.850
I'm going to go ahead

00:10:02.700 --> 00:10:06.580
You can specify user authentication
method names in there by

00:10:06.630 --> 00:10:09.510
inserting the auth equals

00:10:09.600 --> 00:10:25.700
[Transcript missing]

00:10:26.750 --> 00:10:28.680
The API is pretty simple.

00:10:28.740 --> 00:10:30.700
A way to create one.

00:10:30.700 --> 00:10:34.340
You hand it the fields
and it'll spit out a URL.

00:10:34.430 --> 00:10:35.940
A way to get rid of one.

00:10:35.940 --> 00:10:39.680
A way to tell if the string
that you're passing it is a UAM.

00:10:39.700 --> 00:10:45.860
A way to parse out the various
bits and pieces and a way to mount

00:10:45.860 --> 00:10:49.350
that URL on a specific mount point.

00:10:52.450 --> 00:10:57.940
Other API,
which we will have as a beta SDK, well,

00:10:57.940 --> 00:11:00.620
it's supposed to be up
on the website today,

00:11:00.620 --> 00:11:06.880
but it looks like it'll be next week,
is the user authentication module API.

00:11:06.880 --> 00:11:09.820
We've got a few changes from Mac OS 9,
but not many.

00:11:09.820 --> 00:11:15.920
It's packaged as bundles,
still has the same entry

00:11:15.920 --> 00:11:18.820
point as the old Mac OS 9,
same callbacks,

00:11:19.580 --> 00:11:24.950
and I'll go over what you need to
do to port a UAM from Mac OS 9 and

00:11:24.950 --> 00:11:27.590
show you an example of doing a port.

00:11:29.610 --> 00:11:34.120
The UAMs on Mac OS X are
bundles of type UAMX.

00:11:34.120 --> 00:11:38.360
They live in library file systems,
Apple Share authentication.

00:11:38.360 --> 00:11:41.940
They're loaded with the
standard CFBundle calls.

00:11:41.940 --> 00:11:43.460
There's nothing really
special about them.

00:11:43.460 --> 00:11:45.260
They're not CF plug-ins.

00:11:45.260 --> 00:11:47.680
I didn't need something that heavyweight.

00:11:47.680 --> 00:11:53.380
And it contains sub-bundles,
one of which is the high-level one,

00:11:53.380 --> 00:11:54.660
one of which is the low-level one.

00:11:54.660 --> 00:11:57.540
We need the low-level bundle,
the non-carbon bundle,

00:11:57.620 --> 00:12:00.150
because these things can be
loaded without a user context,

00:12:00.160 --> 00:12:04.020
such as by automounter at boot
time or other things like that,

00:12:04.040 --> 00:12:06.720
places where you can't go
to the Windows server and

00:12:06.720 --> 00:12:07.800
put up human interface.

00:12:10.270 --> 00:12:15.110
The biggest API level changes
are your HANA destruct SOC adder

00:12:15.110 --> 00:12:17.320
instead of an OT address.

00:12:17.320 --> 00:12:23.190
We've added a few fields to
pass to the UAM the UTF-8

00:12:23.220 --> 00:12:27.460
username and the directory names.

00:12:27.460 --> 00:12:30.820
Session reference number is
now a long instead of a short.

00:12:30.820 --> 00:12:33.850
And we're not using the async
callbacks because you can do

00:12:33.850 --> 00:12:36.110
multi-threaded access to this stuff.

00:12:37.300 --> 00:12:43.600
[Transcript missing]

00:12:43.760 --> 00:12:46.840
is a bundle and you can have
inside of it a high level

00:12:46.840 --> 00:12:48.260
bundle and a low level bundle.

00:12:48.260 --> 00:12:50.950
Those things are pointed
to by the Info.plist.

00:12:51.060 --> 00:13:00.590
Most of the things in the Info.plist are
from the UAMG resource on Mac OS 9.

00:13:01.400 --> 00:13:05.890
We've got keys for the protocol name,
the maximum password length,

00:13:05.890 --> 00:13:13.330
and a dictionary which tells the
AppleShare client where the high

00:13:13.330 --> 00:13:17.280
level and low level sub-bundles
are with an identifier and a path.

00:13:17.280 --> 00:13:20.580
And it also gives you the
name of the entry point,

00:13:20.580 --> 00:13:22.940
so you can change that if you want.

00:13:22.990 --> 00:13:28.340
There's also a localized string in there
which is the user visible name that will

00:13:28.340 --> 00:13:29.200
appear in the HI sometime in the future.

00:13:29.870 --> 00:13:32.950
The entry point is the same entry
point as we had on Mac OS 9.

00:13:32.960 --> 00:13:35.940
It takes a UAMR structure.

00:13:35.940 --> 00:13:39.840
It's very much a
parameter block interface.

00:13:40.810 --> 00:13:44.300
The selectors are just
the same as Mac OS 9.

00:13:44.300 --> 00:13:48.700
The open when the UAM is loaded,
the login when you requested to login,

00:13:48.700 --> 00:13:54.380
the close and then selectors for
optionally putting up dialogs for

00:13:54.380 --> 00:14:00.980
the password for the volume selection
for changing passwords and the

00:14:01.100 --> 00:14:07.800
[Transcript missing]

00:14:08.400 --> 00:14:11.760
Callbacks are the same as in Mac OS 9.

00:14:11.760 --> 00:14:14.150
Callback to get additional
information about the client.

00:14:14.160 --> 00:14:17.680
Callback to open the session,
to send the request to close the session.

00:14:17.680 --> 00:14:23.030
All of these things allow you to write
a UAM that has no idea what network

00:14:23.030 --> 00:14:29.190
it's going to because all of that's
abstracted out in the callbacks.

00:14:30.870 --> 00:14:36.110
In order to port a Mac OS 9 UAM,
all you have to do is compile

00:14:36.110 --> 00:14:39.920
your main code and resources
into the high level bundle,

00:14:40.020 --> 00:14:42.560
set up the entry points
in the outer bundle,

00:14:42.560 --> 00:14:48.090
set up the Info.plist in
the outer bundle,

00:14:48.210 --> 00:14:51.660
and then basically install it.

00:14:52.140 --> 00:14:56.100
Further information about this stuff
can be found up on the website.

00:14:56.100 --> 00:15:00.100
There's stuff in the developer.apple.com,
you know,

00:15:00.100 --> 00:15:02.300
the Mac OS networking page there.

00:15:02.300 --> 00:15:07.440
It's got information on
DIR services and on AFP 3.0 and

00:15:07.440 --> 00:15:10.700
on the AppleShare Client APIs.

00:15:10.700 --> 00:15:15.480
Bit SDK ought to be up
sometime next week and if not,

00:15:15.480 --> 00:15:17.370
give me an email.

00:15:18.300 --> 00:15:29.000
[Transcript missing]

00:15:30.720 --> 00:15:34.860
Both of the other sessions that might
be interesting have already occurred,

00:15:34.860 --> 00:15:37.800
so you'll have to catch them in DVD.

00:15:38.100 --> 00:15:42.500
and further stuff can be
directed towards Tom Weir.