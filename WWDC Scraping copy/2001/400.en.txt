---
Title:  QuickTime Overview
Year:   2001
Web:    https://nonstrict.eu/wwdcindex/wwdc2001/400/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Good morning. Thank you for coming. It's early. So we're going to talk about QuickTime 5 today and we're going to give you a little bit of a glimpse into the future for QuickTime. But before we start that, I thought it would be only appropriate to close the chapter on QuickTime 4. We've been working with QuickTime 4 for a long time now.

I thought you'd summarize how things went for us. The first thing we have to say, of course, is thank you to all of you developers, all of our content partners, and other partners around the world. This has been a really big effort and it's been a fantastic success and it wouldn't have happened without your help and support and most importantly feedback about what we're doing right and what we're doing wrong.

For QuickTime 4, we set some fairly basic goals. We wanted to make streaming a first-class citizen inside of QuickTime. We wanted to build a parallel network with the software to be able to allow us to distribute the content around the world. And we wanted to make sure that in doing all of this, we didn't lose all of the traditional strengths of QuickTime in the areas that you're all very familiar with. So how did we do? At the end of the day, it turns out we distributed over 150 million copies of the player. It's really quite a large number.

Somewhat possibly even more interesting is we distributed over 150,000 copies of the streaming server. This is, as you know, the streaming server is a body of software that we make available through the Darwin open source program. And developers can go up and pull it down. You create this very simple licensing agreement. And we've had over 150,000 people go and do that. This is a really wild one. There have been over 8,000 new products built on top of QuickTime 4. This is not all QuickTime products. This is just on top of QuickTime 4 from 5,000 different companies.

And of course, in the process of doing all of this, we've seen a large ecosystem of partner companies develop around QuickTime just over the last couple of years. It's really, really fantastic. QuickTime TV, as you know, it's our broadcast network. We've got over 50 channels. We've got some of the biggest names in media participating in the program. And we've also hosted hundreds of special and live events around the world over the last couple of years. Big success.

You may not be aware, but QuickTime is a very popular technology for the enhanced music CD marketplace. As the record publishers are looking for ways to promote the CDs over the songs that are available on the internet, say, they're looking to things like enhancing the CDs with videos and so on. And QuickTime's been by far the most popular option for enhanced music CD. We've had some of the biggest names from some of the best publishers.

In the space of digital cameras, we've had fantastic success here. Virtually all of the major camera manufacturers are licensing QuickTime today. And some of them have even gone so far as to build support for QuickTime right into the cameras. It's really remarkable. And last, of course, we've got the digital hub. Apple's been bringing new products to market built around the concept of the digital hub. And QuickTime is at the foundation of most of these products. iMovie, Final Cut Pro for video editing, iDVD, DVD Studio Pro, more recently iTunes.

And this will continue, I'm sure, but QuickTime is at the foundation of Apple's media strategy. So today I'd like to say goodbye to QuickTime 4. It's been a great product, but it's time to say goodbye. And it's time to say hello to QuickTime 5. So for most of the rest of the presentation today I'd like to talk about what's in QuickTime 5.

So far, we need to talk about how the product's been doing in the marketplace. As you probably know, we introduced QuickTime 5 last fall and we started a public preview program. This gives us a chance to do a broad seeding of the software, find out what people like, what they don't like, and of course, working with all of the developers to make sure that the software works in your applications. We had over 2 million people participate in the public preview. Really remarkable.

About a month ago, at the National Association of Broadcasters show, we launched QuickTime 5 officially. So this was the time at which the software was officially done. In the last month, we've had over 7 million downloads from just our US servers of QuickTime 5. So this is going at a really good clip. Just to give you some perspective on this, this is more QuickTime than we distributed for all of QuickTime 3. It's one month.

On Monday this week we announced the availability of the QuickTime streaming server version 3 that was launched on Monday and it's available in the Mac OS X server product version 10. It's also available through the Darwin open source project as I had mentioned earlier. And you can go up to the website and obtain the source code for the streaming server and compile it for your operating system. We support all of the major operating systems. So that's great. QuickTime 5 has got a bucket of new features. And let's go take a look.

We listened to your feedback about the player interface and we made a lot of changes in this release. We've refined the interface such that there's sort of a cleaner, simpler look. The windows can be more easily managed. We said goodbye to the channel drawer. There's some good feedback we got from you. We've come up with a whole new mechanism for managing the favorites and channels, which we think is a whole lot easier.

We've added some new audio and video controls that will be good for consumers to adjust the video for their personal preferences. We came up with a simplified movie info summary panel. And then we added a feature that will allow customers who might not know a lot about QuickTime to find out about interesting events that are happening in the QuickTime community.

So this panel is made available to customers. What happens is we push movies, or QuickTime movies, up to the clients on a regular basis. And they basically highlight all the interesting things that might be going on. So if you think you've got interesting content or news that might be of import to our customers, you should get in touch with our marketing group and let them know about it and maybe you can get your stuff noticed in the hot picks. So QuickTime's got support for many, many different types of media. We support dozens and dozens of file formats, dozens of different formats of data.

Every release of QuickTime, we work to enhance the media support that's in there. And this release is no different. Cubic VR is a technology that we introduced a while ago. It's finally shipping in the product and it's a really exciting technology. It provides the capabilities for photographers to be able to access and view a much broader range of content that might have been available with just the cylindrical panoramas previously supported.

Now of course, the Cubic VRs are new and available, but your cylindrical panoramas are still available and everything is still compatible. If you've written software to work with VR panoramas, your software is still going to work. It's completely compatible at the API level. At this time, I'd like to bring Jim Batson up, Chief Architect, for QuickTime. He's going to help me do some demos.

Now, I know that you've all seen QuickTime VR and Cubic VR before, but this is exciting stuff for us. I mean, when we have an opportunity to engage with the kind of creative people that are out there in the world today and see some of the things they're doing, it's just sort of impossible not to want to bring some of this stuff here and show you today.

So what we have here is we have a Cubic VR that was produced by Claudio Batter at Web Identity, and this is a VR that was shot at the peak of one of the taller mountains in Switzerland called Jungfraujoch, and it's really quite stunning. It's a very high resolution panorama. As you can see, you can look down, and it's not clear that you would want to look down on this one.

Very cool. There's a lot of interesting things going on there and we're seeing a lot of support from third-party developers to support the new format, so I think the content creation challenge will be well addressed on Cubic VR. Thanks, Jim. Let's go back to slides. OK. So QuickTime 5 brings a new music synthesizer to the mix.

QuickTime has had a MIDI-based software synthesizer built in for several years. But in light of all the development that we're doing on Mac OS X in the area of audio, we thought it would be appropriate to bring a whole new version of the software to the system. So we went back and rethought the architecture and completely rewrote the synthesizer for QuickTime 5.

It's a very advanced wavetable synthesizer. It's got lots and lots of features that you can tweak from your applications. And it supports all the popular standards. It's general MIDI compliant. Of course, it supports standard MIDI files. It's compatible with the Roland's GS specification for instrument libraries. We're very happy about this one. It supports the brand new downloadable sample specification called DLS-2. It's also compatible with Soundfont 2. DLS-2 is an interesting format because it's actually part of the MPEG-4 specification, which we'll be talking a little bit more about later today.

It's truly a professional quality synthesizer and when you combine it with the ultra-low latency that's available in Mac OS X, it's a fantastic technology and it's going to be a fantastic boon for customers. And I think there are some tremendous opportunities in here for you as developers. We watched for years and years people struggling to create software-based instructional products on Macintosh and Windows for that matter that provided an appropriate and adequate level of keyboard responsiveness and sound quality.

And it really wasn't possible until today. With the new synthesizer, I think you'll be very impressed and I'd like to, again, go to the demos and give you a little bit of a sample. Now you saw, before you start this, Jim, let me say a couple more things.

You saw Avi in his keynote do a demonstration that shows off the low latency, the very responsiveness of the keyboard and shows how in Mac OS X you're able to continue to perform with the low latency at the same time that you're doing other things in the OS and it doesn't disturb things. Today I want to show you what some of the power of the extensibility of the sound library infrastructure is. So Jim, go ahead.

The way that people put those things together is you've got a music authoring package to do the basic MIDI authoring, and then they work with the samplers to create a custom set of sounds that you can then plug into QuickTime and package all up together and create a very unique sound. This is not the sort of sound you'd expect from a standard MIDI file.

If you want to learn more about the audio services in QuickTime 5 and in 10, here's three sessions you can go to, some later today and some on Friday, or tomorrow and some on Friday. And then to learn more about VR and how that's done, some of the other interactive aspects of QuickTime, come to the session later today.

So DV. As you know, DV is a very important format for Apple. DV is the video format that's at the foundation of the new generation of digital camcorders. DV plus FireWire have enabled this fantastic convergence between the consumer electronics industry and the computer industry in the area of applications like iMovie and Final Cut Pro. For the first time, they're bringing professional quality at price points that are accessible to consumers. We've done tremendous enhancements to DV and QuickTime 5. We've made dramatic improvements in the speed of compression and decompression.

We've taken advantage of all the tricks available to us on Macintosh to support this. We've also taken a whole other look at the detailed math in the system and we've provided a much higher level of accuracy and color fidelity over multiple generations. I think you'll be very pleased with that.

QuickTime has supported software effects for a number of years now, and with QuickTime 5, I'm very pleased to be able to say that we now can support hardware-accelerated real-time effects. This is kind of the meat and potatoes of the pro video world. And now with QuickTime 5, applications like Final Cut Pro, Adobe Premiere, you can support hardware-based real-time effects without having to leave the QuickTime authoring environment. This is a very cool one. You can learn a lot more about these details at the professional video session later today. Amen.

MPEG-1. This is another technology that we've supported in QuickTime for a number of years. It's been Mac only until now. MPEG-1 is a foundation technology for the video CD standard. It's also a de facto standard for a wide variety of intranet type streaming. Enterprise streaming in the range of say 500 kilobits up to maybe one and a half megabits per second. Very popular format.

Today with QuickTime 5 we can now stream these industry standard formats into QuickTime on both Mac and Windows. Very exciting. The streaming itself conforms to the Internet Engineering Task Force standard protocols. Again, it's all standards-based stuff. And we support pretty much all of the MPEG-1 formats you'd expect us to support. Very cool.

Now, as you know, QuickTime has always been a very extensible architecture. This is one of these things we've talked about for years and years and years. There are lots of different ways that you as developers can plug into the architecture, extend the functionality of QuickTime. But one of the big problems that we've had is that it's been virtually impossible as a small developer to be able to come up with a groovy new component, some innovative technology, and then get it distributed to customers around the world. In the age of the Internet, it's virtually impossible.

You can't get the attention of the content publishers if you've got a new compression format without the capacity to distribute on a broad scale and without being able to convince them that you've got that taken care of. They just won't talk to you. With QuickTime 5, we've introduced some new technology that allows us to solve this problem.

When the system goes out, the customer is surfing the web, whatever, they come across a movie that contains some content that's not a part of the standard QuickTime software set. We can automatically detect this. And we can go back and check on a central server that we keep here at Apple and determine if we've got some additional software that could be your software. And then on demand, we can install this and automatically continue.

So the customer gets a fairly seamless experience as they surf the web and you have a chance to be able to distribute your technology far and wide more effectively than ever. So far, we've got three companies participating in this program. Be here, they do a sort of interesting, innovative 360-degree panoramic video technology. On to, they have a great, great codec for the internet and elsewhere. And then Pulse, who make interesting 3D interactive 3Ds. 3D scalable web streamable technology. Very cool.

This is a plea to you. We would like to get more components into this program. We've talked to dozens and dozens of developers who've been doing development in this area. We would love to talk to you again and get you signed up in the program. You can go to this website and get a lot more information about the program. I think you'll like it.

XML. So with QuickTime 5, QuickTime is going to start to support XML. XML is a very important standard in the internet these days. It's a great way to start to describe data sets, complex interactions between clients and servers. We've added rudimentary support in QuickTime for XML and we've provided a number of helper routines that you can take advantage of in parsing the XML files. This can be a complicated process. We're going to take that work over for you.

And what happens is that when QuickTime goes out, it's able to detect the presence of XML. We start to import it and then based upon typing information that's built into the XML files, we can detect which components are required to be able to process the XML. So we will search through the file based upon the various MIME types that will be specified in the file.

We can invoke customized importers and those importers can come in and then they can process the data that's in the XML stream and do pretty much anything you want with QuickTime. And this is a very powerful technology for creating a variety of applications, client server applications. My personal favorite is the template-driven authoring. Very powerful technique employed on a server but also very interesting from the client. Let's take a look at a demo of that.

So what we have here is, why don't we go back and first start with the pictures. So we've got a set of photographs here. These were taken during one member of the team's sort of hijinks from an airplane. And what I want to do-- this is my favorite demo of all time. I love taking slideshows and putting music to them and making that not be a big pain in the neck. So we've got 16 slides here. We've got some music. And then we've got this little XML file. Why don't you open that up?

Very simple structure. We define this language. You can define it any way you want. You've got the elements and attributes that are central to XML, basically describing a sequencing of images, durations for the images, transition effect between images, and then a music segment to go with that. So we take this and we can open this up inside of QuickTime. We wrote a little bit of code for the importer. Go ahead. The importer is invoked, it runs, it builds the movie. And here you go, no sweat.

I think he's a very smart guy. This is actually a series of photographs of a guy named Maynard Hanley who works on our team. He's one of the smartest guys around. He's written most of the MPEG code that we have today. Really brilliant guy. is foolish in his personal life, however. So let's talk about the improvements we made to streaming. I said we introduced streaming in QuickTime 4. We've made a lot of enhancements over the last couple of years. Let's talk about what's new in QuickTime 5. The big one, you heard Avi talk about it, skip protection.

Skip protection is actually A coordinated technology that works between the client and the server and it uses three basic techniques for improving the overall quality of service of the streaming experience. The first technology is the ability to retransmit lost packets. As you know, when you're streaming things over the internet, especially when you're using unreliable transport such as UDP, packets will get lost. When the client observes that there are packets being lost, it has the ability to obtain retransmitted packets, fill in the holes.

In addition, when the server notices that the network is beginning to be congested, it has the ability to dynamically scale the stream in order to cut down on the congestion that's being produced by the server itself and to maximize the likelihood that the stream will fit through the available bandwidth.

And then the last technology that's involved in skip detection is an aggressive buffering of the media. Basically, there are times when the network bandwidth is less than you want, and we've applied the first two techniques to improve the experience there. There are other times when the network bandwidth exceeds the necessary bandwidth for the media that you're trying to play, and we take advantage of that opportunity to buffer more data into the client, thereby enabling you to break the cable and life goes on very nicely for a while.

So we've had the ability to broadcast live streams in QuickTime, again since QuickTime 4, but this has not been a technology that's been available to you as developers. With QuickTime 5, we're introducing public APIs that will allow you to write your own broadcasting applications. It's a very flexible architecture. It allows you to introduce your own sources. It doesn't have to be a video source. You can write plug-ins to access any kind of input source, audio, video, otherwise.

We also added the capability for live broadcast to be able to support the transport over reliable protocols like TCP. This is very important because if you're trying to set up a live webcast, unless you are willing to go to the trouble of obtaining dedicated lines, leased ISDN lines or otherwise, what you will often experience is the process of getting from your webcast site to the streaming server introduces packet loss.

That's going to be replicated, you know, we can have 100% replication through the rest of the infrastructure of the Internet, but if you're already at 95% packet loss by the time you get to the entry server, you're not going to be able to overcome that. This technique allows us to guarantee 100% packet fidelity up to the server if you need to use that. The APIs are available on Mac OS.

Of course, if you're a Windows developer, there's nothing that keeps you from going out and developing your own broadcast capability because all of streaming is built on open standards after all. So you can go out and you can write the software if you need to be in a Windows environment. You can learn a lot more about the details of the live streaming capabilities of QuickTime 5 at the session later today. today.

We added support for another sort of streaming, Shoutcast, very popular format. We've supported MP3 for a long time now. With Shoutcast support, what you basically have is you've got MP3 streaming over an HTTP protocol. And we've added support for that. You can use it to integrate internet radio stations into your presentations.

I think the most interesting thing about this in the context of QuickTime is not so much that we can handle the streams, we're not trying to be a replacement for iTunes or be your radio player. That's not what we're up to here. But it's that you can take these kinds of streams and you can integrate them with other QuickTime content.

You can apply all the other powerful interactivity techniques around Shoutcast streams to provide just a much more interesting experience for customers. Let's talk about the streaming server for a minute. So I told you we had a lot of downloads of the server, over 150,000 downloads. We've had more than 250 companies license the source code.

Some of the biggest names in the server business are working with the QuickTime streaming server. This project really opened our eyes up to the power of open standards. When we made this source code available to companies around the world, they were beating a path to our door. We've been amazed at the number of companies who are coming to work with us around QuickTime because of this server project. It's been great. For the version 3 of the streaming server, we've added several new features that will be helpful for people who are working at the server end of things.

There's a very easy to use web-based server administration capability now so you can administer the server no matter where you are if you've got web access. We've improved the security of streams so that when you're streaming over the live internet, your content will be protected between the source and the destination.

We support the reliable delivery technology that I was just referring to in the live broadcast capability. We've made improvements to the support for caching proxy servers. And of course we work with the skip protection technology we were describing earlier, streaming server version 3. There are a couple of sessions to allow you to learn about the basics of the server as well as how to extend the server on Thursday.

So now let's shift gears and talk about the interactive capabilities of QuickTime. QuickTime has a very, very rich infrastructure and, you know, almost no matter what your knowledge base is as a content publisher or a software developer, we've probably got a technology in here that's going to allow you to be able to be comfortable working with QuickTime. The first thing I want to talk about is Flash 4 for Macromedia. We have integrated Flash 4 into the system.

It brings a number of key capabilities. Flash is very powerful for web-based graphic animations. It's great for some lightweight interactivity capabilities. With Flash 4, they've also provided very powerful techniques for manipulating text in forms and doing client-server kinds of interactions. that you've not been able to do before.

We've also taken the trouble not just to build Flash 4 into the system. Again, the goal here is not to replace the Flash player in your web browser. The goal is to identify opportunities to leverage QuickTime plus Flash to do things that you couldn't do with the two technologies alone.

So we've built a number of new capabilities into QuickTime that directly interface to the new features in Flash 4. I'd like to show you a demo of a couple of those things. One of the things that's very interesting if you want to start to talk about doing more elaborate, more interesting presentations of media in the internet is the idea of how do you put these interfaces together.

A lot of places you'll go and you'll look at the web page and they'll reserve this column over here for part of the interface and they'll create other controls over here on the web page. And they basically end up taking your full screen display and turning it into a tiny, tiny video space.

We think that this is the wrong way to approach things. And we've got some technologies in QuickTime with Flash that allow you to do a much, much better job of this. So Jim, why don't you bring up the movie. So what we've got here is we've got an interface that's the interactive elements are built with Flash and it's sitting over the top of a QuickTime interface. And Mr. Schaffer, would you prefer window or aisle?

So go ahead and let it play. Middle. Why don't you close the menu for a second. Middle. So when you don't want to see the interface, you can make it go away. You've got the effect of the whole display area for your video. When you want to bring the controls in, you can do that. Middle.

So when you bring the controls in, just go over to the menu. It pulls in the controls. They're translucent so you can still see the video. You can still tell what's going on. We think the overall effect is a very powerful effect. We think this is kind of the wave of the future for interfaces.

Thanks, Jim. That's good. So that's Flash 4. Now, the foundation for interactivity in QuickTime is built upon this concept we call Wired Movies. Basically, QuickTime's got a virtual machine like you'd expect in any kind of interactive environment. And we've got a series of media objects in QuickTime that support various properties and methods for communicating between them, and we have an elaborate event model for handling user events.

For QuickTime 5, we've added over 100 new Wired behaviors and properties to the system across a whole range of media types. We've also enabled a new type of interaction called QT List Actions, which are XML-based transactions that can go on between clients and servers. So QuickTime is now beginning to support servers in a more integral way than we have before.

One of the most exciting features that I see in QuickTime 5 is something we call media skins. Sometimes we refer to it as customized interfaces. The idea here is not that you're skinning the player. Player skins are like something that end users do. They change the behavior, they change the look of their players. They don't change the behavior. It's all the same controls that you would normally see.

They just change the appearance. We think that, again, that's a fine idea, but we don't think that's the most powerful concept. We wanted to create an ability for content publishers to easily alter the appearance of their media and wrap their media in attractive containers that allow you to do great branding of your content or to integrate with the interactive capabilities of QuickTime in new ways that are visually stunning. So let's take a look at a couple demos of that.

So this first demo we'll look at comes from a very creative artist, developer named Michael Schaaff, Small Hands Software. Why don't you fire it up. This is a QuickTime VR panorama in an interactive skin. So it's a non-rectangular window. As you see he's able to move around. He's using Live Stage Pro to create the interactivity elements here. And it's all wired up and very cool. You can't do this with other software products. So why don't we take a look at the second one. The second one is a very simple treatment. This is something that Apple's used for its own branding of Mac.com.

and Liquidator 5. Larry Apparee. Optimistic@mac.com. Squirrel82. They're very elaborate to look at, they're very beautiful, very, very simple to create. Just a couple of minutes in Photoshop, we've got Apple scripts that help you assemble all the elements together. You can do this, anybody can do these things. We're going to see these all over the web shortly.

You're going to learn about the details of how these are created at the interactive session later today. There's also great support for Java. If you're a Java developer and you care about QuickTime, there is great, great support in QuickTime for Java and in Java for QuickTime. With Mac OS X, we've enhanced this even further. And with QuickTime 5, we've made the full capabilities of the new feature set in QuickTime 5 available to Java programmers. And you can learn more about that at the session tomorrow.

So let's talk a little bit about QuickTime and Mac OS X. You've heard people talking about the power and flexibility of Unix and the simplicity of Macintosh. I'd like to add one more element to this, and this is the power of the QuickTime creation and publishing integrated with these other two elements.

This has not been done before in such an open and powerful environment. And we've got a little demo that we put together to kind of give you a hint, sort of a quick glimpse of what might be possible in this area. I think it's going to be a really, really big deal. Thank you.

We call it proxy editing. And so what we've got set up here is over on Jim's right, he's got a titanium power book that's running Mac OS X. He's going to be using an Apache web server, he's PHP scripts. We need the Mac OS 9, machine 8, please, on the screens.

So Jim's got a Mac OS X-based server running on his Titanium PowerBook. Over here on the client, we've just got a web page that we've set up to interact with the server. And what we're going to do is we're going to, go ahead, first step. We're looking, basically just looking at what's available on the server.

So Jim's going to select one of these videos. On the server, what we've got is very high resolution versions of the videos. Jim's going to pull down a very low resolution copy of the video, so it comes down very quickly. He's going to perform a simple edit on the video.

So he trims a little piece out of it. He's going to save that locally. He's just saving a reference movie, so it's a very tiny movie. We're then going to push that back up to the server. So now what's happening is he sent it back up to the server.

The server has now invoked a whole bunch of new processes that are running, that are integrating the-- What's happened is the server actually went and did the edit on the high res content. It's produced a number of different formats that we can then view. So we've got a web page version of a higher res output.

And then we also, at the same time, produced a version that can stream live to you over the web. All driven by the server. So the client's a very unsophisticated client. The server's got all this power built into it. I think this is going to be a technology direction that you're going to see a lot of developers moving into. There's some tremendous opportunities with all the power of the infrastructure of Mac OS X combined with all the authoring and publishing power of QuickTime. Thanks.

So that's QuickTime 5 and the QuickTime Streaming Server 3. I encourage you to please go take a look. There's a lot of stuff in there. We've been barely able to scratch the surface of the new features in QuickTime 5. I'd like to do a segue now to a whole new topic.

I think that the industry is at a real crossroads here and you don't have to have lived through the last year to be able to tell that, but for those of us who have going through the difficulties and the trials and tribulations of the dot-com meltdown, I think you're all well versed in the pain and suffering that it's created. Now, We in the streaming media world are not immune to this. There are real problems in our industry.

The production costs associated with streaming media are exorbitant, way too high. The cost of distributing your media is incredibly high. It does not scale. If you want to do a webcast to millions of people, you are going to, if you can make it work at all, you're going to be talking about major, major expenditures.

As you know, every year the media companies come out with new players, and new formats, and new codecs. This kind of churn just takes these other costs, which are inherent in the technologies we have today, and multiplies those by N. It's quite a dramatic effect. As a content publisher, you're constantly struggling, how do I know what formats to publish in? How can I reach the largest number of people possible?

Because of the software churn, the lack of compatibility from one version to the next, that you see in many of the players, the customer is basically cut off from the content publisher. When the proposition for the customer is, I've got to download a new piece of software to be able to watch this media, but you're losing customers. You're going to lose those customers every single time. And of course, the fact that we've got all these different formats vying in the big food fight of streaming media, that means that the broadcast, the compatibility isn't going to be there.

It's a bad experience for customers, it's a bad experience for publishers. I believe that the proprietary technologies that we've been building on are the problem. It's a big part of the problem. And I think that there are some answers to this. So I want to talk about this.

You will hear people talk about standards as if it's the problem. Standards impede innovation. The whole process of developing a standard is so slow and cumbersome. It's the worst of design by committee. The standards take so long to complete that by the time they're released, the technologies involved are already obsolete. And of course, the standards can't possibly be optimizing for high quality because they're late to market, they're designed by committee.

Is this true? Could this possibly be true? I don't think so. I don't think this is anything like the truth. I think this is wishful thinking that serves the purposes and the interests of certain companies, but it is not the truth. The truth of the matter is that standards build markets.

The TV industry would not be possible without standards. The telecommunications industry is premised on a standards-based approach. The consumer electronics industry could not achieve the compatibility that customers demand and expect from one generation of product to the next without the help of standards. And of course, the Internet wouldn't exist at all without standards.

Standards actually solve problems. They solve the problems we need to solve. The discipline of a standard helps to ensure, helps to maximize the likelihood of compatibility over the long haul. Standards encourage and support the notion of interoperable implementations, interoperable media, interoperable software between vendors. And standards also help to minimize a dangerous over-reliance on a single vendor.

The fact of the matter is that no one company, no matter how large the company, can service all the needs of the marketplace. And there's no way that a single implementation can service all the needs of every customer. The standards enable customers, developers to get together, craft solutions that are right for them, and create markets and grow businesses.

Standards actually fuel innovation. We're seeing this right now. It's playing out in our industry today. Music players, cameras, camcorders. The music player is a spin-off of the MP3 standard. It wouldn't happen without the MP3 standard becoming so important. Cameras, JPEG. I mean, it's, I guess it's pretty obvious here. These are very important technologies. Camcorders, of course, DV, FireWire. The technologies that allow these portable devices to connect to the PC, USB and FireWire, all standards. And they have fueled, you know, this huge, huge movement at Apple around the digital hub.

New optical disc capabilities. Again, completely standards-based, driving whole new models for authoring content, totally revitalizing the industry for movie distribution. Couldn't happen without standards. And as we look forward, we're going to see new standards that are going to be bringing web access to new kinds of devices that consumers will have.

And I guarantee you, this will change the way that the internet looks. It's going to change the way that people interact with the internet, and it's going to change the way that content publishers start to publish their content. Very exciting. Simple case in point. MPEG-2. Well, it was standardized way back in 1994. So clearly, it must be irrelevant.

It didn't use the most aggressive compression algorithm that was possible. I mean, after all, they were concerned about making sure that it would be able to be implemented in hardware at the time. Nevertheless, what we see over the last couple of years is not the momentum of MPEG-2 going down. Instead, we're seeing explosive growth around the technology of MPEG-2. Digital satellite, terrestrial cable, DVD, HDTV. HDTV, which is the next generation of television, is built on MPEG-2. This seven-year-old standard.

It's really quite remarkable. The thing that's critical to notice in all of this is that the quality of the media that is being produced today in MPEG-2 is better than ever before. This happens because We're not talking about 50 or even 100 engineers working on a piece of technology to make it better.

We're talking about hundreds of companies with thousands of engineers looking at the software, looking at the standard and looking for ways that they can improve the technology. The standard defines the bitstream. It doesn't define what the encoder is supposed to look like. It doesn't define what the decoder is supposed to do. It's about the bitstream.

And the innovative work of the thousands of engineers who can work on the standards is very powerful. It's something to be reckoned with. Likewise, the costs of doing MPEG-2 have gone down and down and down over the years. As these thousands of engineers and hundreds of companies are working together to iterate on the designs and to solve the problems of industry, they're at the same time working on solutions to the problems of cost. This is something that can be applied to all of the industry. This is the work that we do. QuickTime has paid attention to MPEG in the past.

Apple's made a huge investment in MPEG-2 with our line of DVD products. We announced about a month ago that we're going to be supporting MPEG-2 inside of QuickTime. And we have a demo here of our own MPEG-2 technology sitting on top of QuickTime 5. This isn't shipping yet, but we wanted to give you a glimpse of what is possible and let you know and reassure you that this is going to happen in QuickTime as well. Thank you.

So, great. So, MPEG is a very important standard. We're going to be supporting this in QuickTime 5. That file, you can put that on a DVD. It's the same media. It's the same media. There's another very important standard which is just now coming to the market called MPEG-4. Apple was involved, has been involved with MPEG-4 for a number of years.

As you probably know, the file format for MPEG-4 is based upon QuickTime's file format. We think this is going to be an incredibly important revolution for the realm of streaming media. Let's talk a little bit about what MPEG-4 really is, because there are some significant misconceptions in the marketplace about this.

I think a lot of people see MPEG-4 as being a better codec, a better video codec. And it is a better video codec, there's no doubt about that. But it's actually a complete architecture for doing multimedia systems. It incorporates all the data storage and transport that you'd expect.

It incorporates intellectual property management features. It provides a rich support for audio, video and other media types. It provides an interactive, interactivity framework built around Java. It provides all the synchronization. And it provides the overall, overarching compositional infrastructure so that you can organize media elements into a presentation. It's a very complex standard.

There are a lot of people behind MPEG-4. Apple recently had a chance to join, as a founding member, the Internet Streaming Media Alliance. This is an industry organization that we're putting together to help promote the MPEG-4 standard, but also to help to drive, as soon as possible, as quickly as possible, interoperable implementations of MPEG-4 so that you as a developer don't have to go to a single vendor for their implementation of MPEG-4. You can look at a whole host of companies. And likewise, as a content publisher, you'll have a wide variety of choices for technology providers as you publish to MPEG-4.

We are looking for new members, so if you're interested in MPEG-4, I strongly encourage you to go take a look at the website at isma.tv. It's a great organization. We're making tremendous progress in the area of interoperability, and I think you'll like what's happening there. Now, this is not just a computer industry endeavor. Like I said, standards aren't restricted in their use. Standards can be applied anywhere anybody thinks they make sense. And one of the most interesting uses of MPEG-4 that's coming along is in the area of mobile telephone technology.

The next generation telephones are called 3G, and they're beginning to be deployed around the world. The United States is behind on this effort, but we'll catch up. These next generation telephones are really remarkable. They bring very high bandwidth internet connections, and they provide a much richer set of functionality in the phone than you might have ever been able to have before. There's a standards body associated with this work called 3GPP, Third Generation Partner Project, and there's an industry forum that goes along with this called the Wireless Multimedia Forum.

A lot of big-name companies from the industry are participants in these endeavors: the NTT Docomos, the Nokias, big companies. They've chosen MPEG-4 as the basis for their standard going forward. This is going to happen. You look at JPEG 2000, it's the next generation of JPEG and Motion JPEG.

They're basing their work on this. They're basing their file format on MPEG-4, which by the way is a great thing, because that means both the phone world and the next generation imaging world will be built on an infrastructure that's very, very similar to QuickTime. Very cool. So what's Apple up to? Well, first of all, as I said, we're going to put MPEG-2 into the system. We're also going to build MPEG-4 into QuickTime. MPEG-4 is going to be a first-class citizen inside of QuickTime.

Initially, we're going to focus on the basic core audio/video streaming capabilities. We want to make sure that we've got the best audio and video codecs available. And we want to make sure that the streaming transport technology works fantastically. And again, as the industry is trying to get off the ground, we felt that it was most important to go for sort of the broad support of the basic functionality, get that up, prove to the industry the possibility of interoperability in a realm where people, frankly, have doubts.

We're positive this is going to work and we're going to focus on that part first. And you'll be able to do pure MPEG-4 in QuickTime, but of course, it is QuickTime. It's the ultimate in integration technologies. You'll be able to combine MPEG-4 with other QuickTime media to create presentations like we've seen with the skins or other interactive capabilities. Very neat.

We will announce availability of shipping products later this year, but stay tuned. It's going to be very exciting. Now I'd like to give you a brief demo of our MPEG-4 technology. Jim, why don't you fire it up? So this is a one megabit stream. Very high quality. Anybody who tells you that MPEG-4 is not a good codec has a different agenda.

So if you want to learn more about MPEG-4, believe it or not, you can hear more about it in the live streaming session later today. So, at this time, I have been notified that the team put together a little public service announcement. They asked me to show this to you. is the director of the Web Publishing and Marketing Department at the University of with a disturbing disregard for careful planning. But this industrious engineer has discovered the fun and gratifying results that come with strict adherence to standards.

Civil Discourse. Enjoy enriching presentations guaranteed to thrill, excite, and inspire. Regular delivery of exciting reading material with easy-to-remember standards names, too. of standards. After all, it was standards that brought us cheap, reliable electricity. Oh, crap. I can't work like this. Somebody call the governor. Get out of my way.

Before we finish, just a couple of thoughts to wrap up with. So, first of all, I want you to walk away with the message, Apple is embracing open standards. Everything we're doing at Apple is about open standards this day. You heard a lot about it in Avi's talk.

You've heard a lot about it today. Very, very important. I'd like to invite all of you to come with us and help make MPEG-4 a big success. QuickTime 5, it's available now. Go take a look. There's a lot of features in there. in there, love to have your help making things better.

And of course, as always, let us know what you think. We are building these technologies so your products can thrive. We don't do this for our own gratification. This is an important area. You are our customers. Tell us what you think. Tomorrow afternoon we'll have a feedback form. They're usually pretty fun. Come bring your rotten fruit, whatever. Let us know what you think.

We've got a big event coming up this fall. We have had QuickTime live conferences in the past. They've been very, very successful and I have to tell you they are a lot of fun. We have a special program this year for developers and we'd love to have you participate. It's at the Beverly Hills Hilton. It's a great venue and it's a lot of fun. You're going to meet a lot of people from the QuickTime community. It's a great, great experience. Please come.

If you have questions about today's presentation or other questions about QuickTime, Jeff Lowe is your guy. Jeff works in our developer relations group and he will answer all your questions. If he can't, he will get you to the right people who can. Thank you very much. Appreciate your patience. Have a good conference.
