---
Title:  What's New for Podcast Producer
Year:   2008
Web:    https://nonstrict.eu/wwdcindex/wwdc2008/514/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Good morning, everyone. My name's Dave O'Rourke. We're here to talk about what's new for Podcast Producer, or if you prefer the wrong slide, the Podcast Producer overview. This is your choice. I'm gonna let the final people get their seats, and then we'll get started. Um, I'm really excited to be here today because I get to do something we so rarely get to do. I get to talk about Apple's future plans.

So we have a real simple agenda for those of you that want to follow along at home. We're going to go a little bit over podcasting. Some of you are new. Some of you might not have heard of it. We'll talk a little bit about what podcasting is, where we think it is, and essentially a brief state of the union. We're going to be talking about what the existing product is for Leopard.

I heard some outlandish statistics about how many people in the audience might be new. So for those of you who are not yet familiar with Podcast Producer, you'll find this section very interesting. And for those of you who do know what Podcast Producer is, you can check your email. Then we'll talk about why you're all here, probably, which is to preview what's coming.

And we'll go over a brief summary so that you don't forget any of the morsels of information I've shared with you this morning. And we'll have Q&A at the end of the session. Oh, why am I looking behind me constantly? So, video and audio podcasting has been taking the world by storm. My wife lives on podcasting. Anyone listen to Physics for Future Presidents from UC Berkeley?

My wife can't get enough of podcasting, and I've heard from iPod sales and other things that there's other people like my wife. There's a broad range of topics. You can listen to Physics for Future Presidents from UC Berkeley, or you can listen to World of Warcraft, The Instance, every week to get your latest fix on the game.

Podcasting subscription rates are going through the absolute roof. The download stuff, the bandwidth consume, all of it's just up and to the right. We're in the early stages of adoption of this basic technology, but people are embracing it and endorsing it. This is a chart showing occasional and weekly subscriptions. The scale on the left is millions of podcast subscriptions per week. This is just phenomenal.

One of the reasons I think podcasting is so huge is the web took off because one person could reach a global audience. And podcasting has that same dynamic. One individual at home with a microphone or a video camera can generate a half-hour, 15-minute, 12-minute, 17-minute podcast that the entire world can access. So podcasting has a global impact that's just phenomenal. We showed a chart last year that I wasn't able to find in time for the presentation about the number of subscriptions coming into the iTunes U Store by geography. And it's just phenomenal, just absolutely phenomenal, worldwide phenomenon.

The other reason people like podcasting is it has the best features of an old technology called VCR. You can time shift the content. So people really resonate to podcasts. They can find the topic that they want to find. They can download it. And they can listen to it whenever they want. They can listen to it on the subway. They can listen to it while they're riding the bus. Or they can listen to it while they're in this session. But please stop.

So iTunes U has helped facilitate this particular phenomenon, and we offer a destination for universities that they're using to get their content out. We have 64 universities in six countries posting content, 25 are being on-campus providers, and 60,000 free audio and video assets. And that's just today. I think by next week it'll be like $600 billion or something like that. I'm not sure, but I'm a little fuzzy on the math.

We feel at Apple that we offer all the pieces. We offer the devices that people want to watch the content on, all the way from an iPod shuffle or listen to the content, and all the way up to a MacBook Pro. Podcasting is not just about the pod. The pod is the mobile portion of it, but you've got the phone, and you've got people's notebook computers. What were the statistics we shared in Bertrand's Day of the Union, or I believe it was the number of students coming on campus with a laptop?

Well, a laptop's just a big iPod, so you can listen to the content where you want, when you want, on the device you want to listen to it on. We have a lot of software to help you make podcasts. We have Podcast Capture front and center in the icon farm here.

But we also have QuickTime, we have iMovie, and we have GarageBand, and we have RSS. We offer all of the software technology you need to do podcasting. And we have a portal for you to distribute your content through if you're a university. So we have all the pieces of the technology pulled together.

We also have developer adoption of Podcast Producer, and podcasting starting to creep out into non-standard places. One of the most exciting developer briefings I got to attend this year was Tamberg. How many people in this room are familiar with Tamberg? There I'm offering integration with Podcast Producer directly out of their content server.

When we sat down and designed Podcast Producer, I'm sorry, I didn't think about video teleconferencing. But it's a natural application to take your video assets from your captured video teleconferences and make them a podcast, or make them an online asset library. And Tamburg is announcing support for Podcast Producer, where you'll be able to directly export your archived video out of their content server to a Podcast Producer workflow.

We've been working with Telestream, who was here last year, and they've given us some very valuable feedback over the year. And they have Episode Podcast, which is a product you can go buy today, which brings their codecs to the platform. So if you want to go to the legacy standards, such as Windows Media and Flash, you can use their product to get your different formats.

We're working with a number of universities. Whoops, went too far. We're working with a number of universities. This is not all the universities. This is just some examples of people who've been rolling out Podcast Producer. I know John Hopkins is on here. They're already using it for medical things. The Army, I don't believe, is listed here, but the Army is using it.

We're working with a number of institutions to deploy Podcast Producer, and they're very excited about it, and they're doing new and novel things with it that we never anticipated being done, which in my... I've been at Apple 18 years, and in my sense, it's always been gratifying when we see customers doing things with technology we didn't anticipate. That, to me, is the key of a successful technology.

But podcasting's still changing. This is still a relatively new phenomenon. We're seeing the growth curve of a new technology. For all the growth we're seeing, the potential's huge, still absolutely huge. So that means it's going to continue to change. We're still seeing institutions and individuals learn how to best use it.

Some people started by just doing slideware on a podcast, and that works well if you have an engaging audio track. It doesn't work so well when you don't. So people are still best learning how to use this technology, and we're going to see innovation in this space from you guys and from Apple.

And producing a podcast until Leopard came out was more craft than process. I mean, I walked through the steps manually. My wife's a lecturer. She lectures at San Jose State University. And she said, I want to take my lectures and make it a podcast. And before I started working on Podcast Producer, I sat down with her, and she said, what would I need to do? And we spent a day walking her through the process. And at the end of the day, she was very excited, but didn't have the time to go through all of the steps to produce a podcast.

And she says, well, can't you automate this? And so podcasting requires merging first-class content, like lectures my wife gives, with multiple disciplines that my wife lacks. And Podcast Producer allows San Jose State University to merge their experience with the disciplines with my wife's first-class content for her lectures. So there's a wealth of tools to capture. These are some of the tools I showed.

There's Live Capture Tools. There's Final Cut Pro, iMovie GarageBand. Third-party utilities are plentiful and all over the place. There are multiple methods for publishing. This is one of the disciplines you have to master. How am I going to publish my content? And there's multiple methods for people to view this content. This is becoming more.

With RSS and Atom Feeds, you can use pretty much any device to view the content. And all the pieces of technology exist, but as I've said, until Leopard came out, you had no way to automate and scale this process. You might be able to produce one or two podcasts a week, but you certainly can't do that. I certainly couldn't produce 50 podcasts an hour.

So with Leopard, we shipped Podcast Producer. Podcast Producer fully automates the ingestion of content, the processing of that content, and the publishing of that content to the world. We provided all of the tools you needed. We provide remote camera capture control. We provide direct file submission for those of you using Final Cut or iMovie to make your content. We provide a workflow architecture for you to standardize the recipe that you want your videos to be processed with.

And we use standard server scale technology because we heard from you when deploying this product that you think a lot of people are going to download your stuff. How do I make sure that I have the server infrastructure to deliver all of the content? We integrated with the administration tools so you didn't have to learn a different suite of tools to set and maintain the servers up. And we made it secure because we heard from some professors, not all professors, that they didn't want the students turning off their lecture in the middle of the lecture. So the system's secure end-to-end and is fully authenticated and authorized.

So an example in action, and this is the canonical example. This isn't the only way to use Podcast Producer, but it's an example that we constantly reference internally as we're designing the product, is you start with some content. You launch Podcast Capture, and you can either pull files in from any of the applications, or you can start a camera, or you can use the built-in camera on the Mac that's sitting in front of you, and you have some content that you want to publish to the world. Using Podcast Capture, you upload that content to a Podcast Producer cluster. This is a machine with a shared file system and a set of grid nodes that will process the video and execute the workflows.

When it's done processing the video, that cluster pushes the results to another set of servers, which are going to host the content. This could be iTunes U. This could be your email server, if you're going to send email notifications to your customers or your clientele. You can have a web server we push to. You can push to a QuickTime streaming server. Or you could just push it to an archive. We have a lot of people, surprisingly, using Podcast Producer to just take the content in, process it, and store it away for future reference.

So you can do anything you want with a workflow, but it goes from the content ingestion point to being processed by the cluster, and then out to other servers to host the content. And ultimately, you're publishing that content so that people can consume the content on the devices that they want to watch it on. So this is the canonical example that we constantly reference at Apple as we're designing the product. But you can be very creative with this model. But it is take the content, process it on the cluster, publish it to the servers.

And then people watch it where they want, when they want. But that's all dry. So at this point in time, I'd like to invite my coworker up on stage, Shel Bronder. And he's going to give you an actual live demo of the existing product. Thank you, Shel. Good morning. Good morning.

So I'm going to show you how easy it is. So I'm going to pretend to be Devo's wife and show you how easy Podcast Producer makes it. So let's launch Podcast Capture here. I'm going to log into the Podcast Producer server here. So I'm just going to type in my password.

So now I'm at the screen where I get to choose what kind of podcast I'm going to do. So today, I'm going to do a little keynote with some audio on top of it. So I'm just going to prep my keynote here. So I've got some slides that I want to show you. So let's just get that all ready. Just use a little mic here.

And now I'm going to select the screen. I'll come back to this stage in a few minutes to show you what other choices you have. And I'm just going to choose the unknown device here. And we're going to go for record. So Podcast Producer is an awesome end-to-end solution for podcasting. It allows users to easily capture, encode to multiple formats, and to deliver their content to all these different kinds of devices.

So there you go. Now I did my little recording here back in Podcast Capture. Pause it using a hotkey. And now I'm going to publish my content to the Podcast Producer system. So all I have to do here is click Publish. Here it's going to ask me for some information.

I'm going to choose the workflow that I want to submit to. So today I'm going to demo the blog in iTunes with Intro, and I'll explain what this is doing once I've submitted it. We'll say this is a Podcast Producer. We'll put it as a title, and we'll give it an end-to-end solution. If I can type.

And so once I've entered this information, all the end user has to do is click Done. The video is now being uploaded to the Podcast Producer system, where the system is going to chew on it. What is going to happen in this workflow? In this workflow, we're going to add an intro video. We're going to watermark the main content. We're going to use the titling information with my open directory information to create a nice little bumper title. And then we're going to add an outro video.

So while this is processing, I want to come back to the first screen we saw in Podcast Capture and show you the different types of podcasts you can create. So let me just hide Keynote here. So here in Podcast Capture, you have the video. So this allows you to do local or remote video capturing. So remote capturing, for example, is a DV camera that's hooked up to a headless Mac Mini. Your site administrator will have bound this to the Podcast Producer system at the beginning of the year.

And then any professor or any other user in your institution can then remotely start that camera. So if we had a camera in the back of the room, I wouldn't have to go all the way to the back of the room to start it. I could just do it from here. Audio is the same idea. I can do local remote audio recordings.

File upload. So this allows me, if I have some processed content that I've already made, I can just drag and drop it on top of the file or in here into the Podcast Capture. And it'll upload it to the Podcast Producer system that will then chew on it. And you just saw the screen capture. So, let's look at the problem.

The one technology that Podcast Capture leverages is XGrid. And you can see here in the XGrid admin, well, our job's already finished now, but you could follow the different progress of the job here. So I'm going to hide this, and you see that I've gotten an email. So I'm going to hop over here to-- well, I did make it on to the stage.

And we've gotten an email here from the Podcast Producer system. And I've got a little link here to the WWC08 blog. So I'm just going to click here. And you see that the content here is already on the system. So if I click here-- have a little intro video, which I'm sure a lot of you have come to know and love. Here's the dynamic titling that was generated on the fly using Quartz Composer. Producer is an awesome end-to-end solution for podcasting. It allows users to easily capture, encode to multiple formats, and to deliver their content to all these different kinds of devices.

So that's how easy it is. Thanks, and back to you, David. Thank you, Kjell. So for those of you already familiar with the product, you already knew that, but this is for those in the audience who are not. But that's a great demo. Thank you so much. So I get a lot of questions about Podcast Producer software in Leopard, so this is going to be a brief decomposition of all the elements of Podcast Producer.

The Podcast Producer is a suite of technologies, not any one thing, that are deployed in unison with each other, that all leverage and support each other to accomplish the goal that you just saw on screen. So it's both desktop and server technology. All the desktop components are built into Leopard Desktop, and all the server components come for free with Leopard Server.

The icons on the screen represent what I consider the three main elements of Podcast Producer. The icon on the left with Podcast Capture and the command line represent the desktop client tools. These are the software tools that you use to submit video into the system to be processed. And I want to emphasize, Podcast Producer is not just a GUI.

Everything you saw Kjell do can be scripted with the Podcast Command Line tool, so you could automate this process and use CronJobs or other things to do automatic and unattended submission of the video using the Podcast Command Line tool. Man podcasts for those of you who have Unix installed on your laptops, and you can see the man page.

The middle element is the server cluster that represents the processing engine of the system. There's a set of software running on the server that keeps the whole system secure and manages the grid and manages all the cameras. And finally, on the left is something you've all become, or I mean the right, something you've all become familiar with, which are workflows. Workflows are the instructions to the grid about how you want your video to be processed and where you want it to be published. Take the three combination of those technology elements and you can all produce a podcast in an automated and scalable fashion.

So a little brief talk about the desktop technology. So there is a new faceless background task on the desktop, and this is the camera recording software. Every time an instructor starts or stops a remote camera, this little server or this little background process is listening on the Mac Mini in the back of the conference room, and it tells the local camera to start recording and to stop recording. This is a new network service that's built into the desktop, and it can be configured and uses the server for all of its instructions.

When it's done, it uploads the finished video for processing. One of the things we heard is if you're going to do lecture capture, the camera in the back of the room has to be able to upload one video while it's recording another, and we've designed it to do that so that you can have the camera machine in a lecture room recording back-to-back sessions all day long, and it will just spool all the content to the local hard drive and stream it up to the server for uploading and later processing.

It's designed to run on a low-end headless CPU, such as a Mac Mini. It'll run on a Mac Pro just fine. If you want to put a Mac Pro in the back of all your things, our sales staff would be perfectly happy to do that. But it also works on a Mac Mini.

There's the command line tool, which I spoke of. This allows you to script or automate everything you can do in the GUI. You do not need anything beyond the command line tool. We've seen customers actually wrap this to present a little more customized HI for their particular site, so using Cocoa and stuff.

You can build your own little custom podcast capture application if you want to, simply by leveraging the power of this tool. And there's the Podcast Capture application, which you just saw Kjell demonstrate. It allows the four main types of video capture that we support, the single source remote video, the audio source, the screen capture, and the file upload.

There's a server technology to this. There's a new server process. What does that server process do? Well, it talks to all the cameras. It maintains the access control list for all the cameras. It submits all the jobs to the grid, monitors them for completion, and it maintains all the security elements of the system. The cameras are talking over an encrypted session to the server. The server's enforcing access control so that the biology department can't start recording on the physics department's cameras. And it just keeps the whole thing working. It's the conductor of the system.

It keeps everybody coordinated and organized. And there's other Leopard server technologies that we leverage. We leverage the wiki to serve RSS feeds. If you don't have your own RSS feed server, you set up the Leopard wiki server, and that will be your RSS server for you. You can set up the Leopard email server to do all that.

You can set up the Leopard email server to do all of your email notifications. And you use Xgrid for all of the scheduling. Podcast Producer does require a shared file system. When you're on the grid, all of the grid machines need access to the video. We do that via shared file system rather than slinging the 13-gigabyte uncompressed one-hour DV video around over the network. We put it on a single place so that everyone has access to it. And the two shared file system technologies we support are XSAN and NFS.

And we're fully integrated with Leopard Server Administration, so you don't have to learn a new suite of tools to manage this system. I do want to talk briefly about Xgrid. Xgrid is the power behind this system. Next to workflows, Xgrid is the most important technology in the system. As I came to realize in Bertrand's keynote today, Xgrid really is GCD. It's Grand Central Dispatch for the Network.

It allows you to leverage multiple CPUs in a scalable way. When pressure is applied to the system, it... Reduces the number of jobs it's scheduling. When pressure is relieved on the system, it increases the number of jobs it's scheduling. And Xgrid's been shipping now for two years. I wonder where Bertrand got the idea.

So XGrid is Apple's large-scale computing architecture. It's built into Leopard Server and desktop. And it can be used to schedule complex jobs across multiple CPUs, complex jobs like podcast producer workflows. As the jobs are run, Xgrid's monitoring what CPUs are busy and what CPUs are idle, and it's constantly trying to keep all of the CPUs on your grid busy. This is a valuable resource that you've invested in. You've purchased these CPUs to process video. Xgrid guarantees that they're fully utilized.

Podcast Producer workflows are X-Grid jobs, nothing more, nothing less. They're just a very specifically tailored job that processes video. So Podcast Producer workflows inherently scale because there is no such thing as a non-grid-based workflow. All workflows are a grid, even if you only have one XGrid node running on your system.

If you add a second node, without even restarting the job, XGrid will schedule the next task on an available CPU. So we are very confident that Podcast Producer can scale for your needs, and one of the things that gives us that confidence is the fact that we're based on XGrid, a two-year-old technology that we've been shipping through two major OS releases, and it's proven very effective for us.

Workflows. Workflows are the DNA of the system. The workflow that Kjell demonstrated had instructions. Add an intro video, add a watermark, add an exit video, do a title, encode, publish to the web. That had to be coded into a set of instructions that the grid ran. So workflows are scripts and descriptions of what you want done with your video, and this is how you automate your processing. As I've said, workflows are X-Grid job templates. The simplest concept you can think of is it's an X-Grid job template with the file name left for the last moment, and we just substitute the file name. It's actually more complicated than that, but that works for the presentation.

And Xgrid jobs are scripts that define a set of command line tools. What's really impressive about Xgrid is Xgrid can run any Unix command line tool or script. If you want to run grep as part of your Xgrid job, you can. If you want to run ls as part of your Xgrid job, you can. So Xgrid isn't anything special. It's just a way of running a series of Unix command line tools on a grid.

So this makes Podcast Producer enormously flexible. It can be customized to meet your needs. You can either purchase software from third parties or provide tools that do things for you, or you can write your own tools and make them part of your workflows because XGrid can run any tool Mac OS X can run.

They can be composed using any text editor, using XML syntax like shell scripts. And what we do is leverage Mac OS X technologies like QuickTime and Quartz Composer to do the video processing. So this makes our video processing platform very powerful and very flexible. So, and because they're just Xgrid tools, and Xgrid only can run any Unix command line tool, you can publish to any source you want.

You don't have to publish to iTunes U. You can publish to your own internal website. If you can come up with a Unix shell script that knows how to post to your custom web server, you can add it to the workflow and make that part of the workflow. We provide support for HTTP, podcasting, QTSS. But you can publish content to any host you want.

All you have to do is write a command line tool or script, and then make that command line tool and script part of your workflow, and it will publish to your custom hosting site. So virtually any shell script can easily be turned into an XGrid job, and therefore a Podcast Producer workflow. So if you can script on Unix, you can use Podcast Producer.

Now, if we just took the core set of Unix command line tools, what was missing before Leopard was a set of tools to process video. So one of the things Podcast Producer added is a new suite of command line tools that wrap the QuickTime APIs to do video processing as a batch process. So some of the editing tools we provide are listed here on my left. Merge and Join allows you to take two separate QuickTime movies and make them one movie. Title allows you to add a title to the QuickTime movie. Watermark adds a watermark.

QC Effect can apply any Quartz Composer composition that you can conceive of. Trim and Split allows you to shorten the video and split it into two. Extract a track. If you have an audio track and a video track, you can use the Extract Track command to just extract the audio track and make that a separate file that you post to your audio-only customers. Delete track. Delete a track.

And you can add a track. So if you have a second audio track that you want to add to the video, you can use Add Track to add the track. The next set of tools we provided that QuickTime did... that we didn't have command line alternatives for is to annotate a QuickTime video. This is adding metadata to the QuickTime file.

Set the poster frame so that the right title screen shows up for the single frame preview that your customers are going to see on your website. And encode for various destinations. This is the powerful tool that allows you to encode for all of the different types of devices that your customers are going to want to view your data on. We provide a set of publishing tools that make it easy to publish to a group blog, the QuickTime streaming server, iTunes U, email, iTunes podcast.

I want to emphasize these tools are just the tools we've provided. You can write your own tools and use them in any workflow. And we provide a set of utility tools. We provide a pre-flight script, a post-flight script, and an archive command which will copy the resulting files to a dedicated file system for archival purposes. And I'm excited today to announce a new feature that we're already shipping in 10.5.3. We've added a new tool for posting to user blogs and not just group blogs. So we're going to continue to fill out this tool supply.

We've been doing this with Google Suite over the years. And with third-party help and Apple's help, this will become a richer and more powerful set of workflow tools as you deploy and leverage Podcast Producer. We've also published a workflow tutorial that walks you through a very impressive demo from soup to nuts of how to write a workflow from scratch. This is available for download right now at that link. And this is a detailed -- how many pages is it, Shell?

120-page detailed description on how to write your own workflows. And the workflow itself is quite impressive and useful. So it's not a mythical example that we came up with a workflow. It's an actual workflow that we had customers tell us they wanted to see. We provided that as an example, and we provided a thorough decomposition to train you how to write your own workflows.

So we feel Podcast Producer is as much as you need. It's designed to be modular in scale because it's based on scalable technologies from day one. We leverage technologies like XSAN and XGrid, so you can build clusters of CPUs that work as a single unit to process all of your videos. So scaling your system is as easy as buying a new CPU, or if you run out of hard disk space, adding a hard drive. So you can start small and go big.

So architecturally, we can run on a single dedicated CPU. We actually test on a Mac Mini just in our cubes with little 15-second videos. This whole system can run on a Mac Mini. I wouldn't want to run 50 videos through a Mac Mini, but you can test the system for functionality.

And it can be configured to have some or all of its elements running on the same CPU or different CPUs. If you want dedicated functionality, you can have the Podcast Producer server running on one CPU, the XGrid server running on another, your mail server running on another, your file server running on a different. You can just factor this out as much as you want.

So you can start from this, which we consider a relatively small Podcast Producer system, and scale all the way up to this. If you want to talk to our sales team about purchasing this, they'll be very excited. So in summation, the existing Leopard Podcast Producer system we feel is an enormously powerful solution. It can scale to meet all of your needs. You can go from processing two or three videos a week to processing two or three videos an hour, all the way up to 50 or 60 videos an hour.

We leverage Xgrid and the power of Mac OS X to do all of the work. So there's a third-party developer opportunity here to deliver new and novel tools that are going to be used as part of a workflow. And this also means you're not limited to the workflow tool set that we provide. You're only limited by what you could implement on top of Unix.

We use QuickTime and Course Composer, which offer what we feel is the industry's most powerful video editing platform. The combination of these two technologies are fantastic. And Leopard Desktop and Server is all you need. 10.5.3 has some exciting new features. We've introduced a new user blog posting tool, and we've introduced a new workflow tutorial, and we're going to continue to work with customers and enhance the product.

But I don't think all of you were in the audience to hear that particular presentation. So we're now going to talk about what I'm very excited to talk about, which is the new stuff. So the first thing I'd like to announce is that we'll be shipping Podcast Producer 2 with Snow Leopard Server.

We've addressed a lot of customer feedback. Some of this you saw on Monday's session, since Kazu stole my thunder. Thank you, Kazu. And the top feature for Podcast Producer 2 are these seven icons, which I'm going to go over one by one. The first feature is one that's been highly requested, which is the ability to record two sources at once.

We've received a lot of requests for this feature. We will support recording from a remote camera and a local screen, all from Podcast Capture. So my wife will be able to start the camera in the back of the room and start recording her keynotes simultaneously. That will all go into a workflow, and we'll composite it into a picture-in-picture video. This allows for lecture-style presentations results in the final podcast. And you can use Quartz Composer to design your screen layout, and we will, of course, provide some sample Quartz Composer templates for what we feel are common picture-in-picture delivery formats.

So some sample screens of how this is going to look in Podcast Capture. We've replaced the file upload button in the lower right corner with a dual source screen. So my wife will just click on the dual source screen. She will then pick the two sources of video.

The one will be the lecture camera in the back of the room, and the right one will be the desktop that she's currently presenting on from Keynote. And all of that will be recorded, unified, and turned into a single video by a Podcast Producer workflow. So to graphically demonstrate this, two sources, a Mac Mini in the back of the room with a camera and a PowerBook with a presentation on it.

Start both of those recording with Podcast Capture. When she's done recording, Podcast Capture will upload it to the grid. The grid will process the video, and out will come a movie file that can be played back in QuickTime Player with a picture-in-picture presentation. Again, I want to emphasize, this particular format of a thing is just one sample thing you can do with CourseMaker. You could do anything you want with these two video sources by coding your own custom workflow. The next thing is the second most requested feature that we're going to provide for Podcast Producer. And that is a Podcast Producer workflow editor. How many people just love XML?

So workflows, if you haven't gotten this point by this time, workflows are powerful and complex tools. You can do anything Unix is capable of with a Podcast Producer workflow. So there's infinite freedom to compose a workflow that meets your custom needs. This is one of the reasons we feel our product is so compelling. We know there's no limits built into it.

However, with power comes responsibility and, for programmers, debugging. So XGrid workflows are specified using XML syntax. Computers love the XML syntax. It's easy to parse. It's fast. It's unambiguous. It's all the goodness that a computer programmer loves. But XGrid jobs are also parallel, and not a lot. As you heard us talk about multicore, not all programmers and not all people who can script can think in parallel.

So XGrid job descriptions require mastering two technologies. They require understanding XML, and they require thinking about a parallel grid job. And you've got to do that simultaneously while composing a workflow. And we wanted to do better. My father can't create a workflow, and I wanted to fix that. And so we have.

But before I show you the demonstration, I first want to show you some pseudocode of what a workflow looks like. This is perhaps the simplest workflow you could possibly conceive of. The first step of the workflow is to take the original movie and add a watermark. The second step is to join the watermarked movie with an intro video and an exit video.

And then the next step is to encode the video for four different sources. Now, the reason I've highlighted this box in this way is all of these will happen in parallel on the grid. If you have four idle CPUs on the grid, all four of these jobs will be running simultaneously.

If you have two idle grids on the node, it'll run the first two, and when one finishes, the third will go on, and it will just deal with it like a queue. And then the last step is to take the video that you just encoded and publish it to a source.

And again, there's no reason for these commands to run serially. They will run in parallel on the grid. That's probably unacceptable code, even though it's pseudocode. But that workflow turns into something that looks like this. If you catch the syntax error, you can get an iPhone 3G today.

So we wanted the podcast workflow editor to be simple and powerful. We wanted administrators to be able to quickly deploy a new workflow. When my wife calls up the administrator and says, hey, I don't like the way the workflow's working, change it. We wanted that to be easy.

We want full access to all the QuickTime components that you can do for encoding video. We wanted to be able to incorporate your custom artwork. I personally really... One of the funnest things I got to do on the Leopard thing was all the intro videos we did, and you saw our final result. That was really, really fun. But I don't think you guys want to use that video on all of your stuff, so we're going to allow you to do your own artwork and not force you to use ours.

And we needed the workflows to support single source and the new dual source functionality that we've incorporated in the Podcast Producer 2. But this is all kind of dry, so I'm going to invite my coworker up for a second time, and he's actually going to show you the workflow editor. Hello again.

No flickering today. So I'm going to walk you through the new Workflow Editor. So I'm just going to launch it here in the dock. And you're going to see that we've created a really simple workflow creation path for you. And I'm going to walk you through the seven different steps today to show you how easy it is to create a new workflow. So I'm going to start off right off the bat. The first thing the application is asking me for is some information about this workflow.

So this is the information that's going to be presented to the end user. So the name, this is what's going to pop up. You saw earlier in Podcast Capture when I selected different names of the workflow. Well, that's the workflow name. So we'll call this my third workflow. Um, I almost said this is still super easy.

And that's all I have to do to get that little information. We're going to go to the second step here. So the second step is the import stage. This is the funnel. This defines what kind of inputs my workflow is going to accept. So as David mentioned, the new feature that we're also shipping with Snow Leopard will be the dual source video. So here I can tell the workflow only accept one source or accept dual source. So since this is a new feature, I'm just going to leave it on dual source.

And then we go to the editing stage. This is the branding stage of Podcast Producer. This is where you get to brand your content. And you see there's four elements here. You've got the first element, which is the intro video. You've got the second one, which is the bumper title that you guys saw earlier.

The third one is a preview of what the content will actually look like with a watermark on top. And the fourth is the outro video. And you see they're all linked together by transitions. And I can even just skim over here like in iPhoto, and give you a little preview of what's in there.

But it's really easy to use. And I've got some branding content that my art department's provided for me here, an intro video and a watermark image. And all I have to do is take my intro video. I'm just going to drag it here. There you go. My watermark.

And I've watermarked my content. So that's how easy it is to just add your own intro video and your own watermark. I also wanted to change this here to a dissolve. And that's it. You know, I'll just change my transitions. So this is great. So with the skimming, I can see the different kind of things.

But it would be awesome if I could put this all together and kind of get a preview of what it looks like. So we've got this Preview button for you right here. And this will assemble the content and give you a preview of what the content will actually look like.

So there you see the dissolve, the flying title. And I can skim through here. And you see there's a little-- this is a preview. This is the stage before, which is providing the sample content of what it will actually look like. And you see the watermark that I added in. Somebody dancing around in a cube. And an outro video.

So that's the branding, and hopefully you can see it's really easy. So the export stage is where I define how I want to deliver and what formats I want to deliver this content. So by default, the workflow editor has chosen an iPod video and iPod-only format. Well, I'd like to add a little higher definition format, the Apple TV one. So I'm just going to click the plus button here, choose QuickTime, choose Apple TV in the pop-up here, and there you go. I've added my Apple TV encoder.

In the publishing stage, by default, you already have the podcast library. So David's going to talk about this in a few minutes. But I'd also like to upload this content to iTunes U. So in the plus here, I'm going to choose iTunes U. I'm going to upload the Apple TV version, so I'm just going to check that one. I'm going to give it my site credentials, my site address, thatapple.com. My tab ID is 20, still 20/20, and my admin credentials.

And there you go. Now my workflow is going to upload the Apple TV version to iTunes U each time the workflow is run. The last active stage here is the notification step. So by default, the podcast workflow editor will send an email to the administrator and the submitting user to notify them that their content has been produced and has been published.

If I wanted to, I could also send an iChat message or things like that. The last stage here is a quick summary. It just gives you an idea of the complexity of the workflow you have, just to give you an idea about--so you know how much of a bigger grid you actually need.

So now that this is done, I'm going to save off my workflow here. So up here in File, I'm going to Save. So you see now it's prompting me for a master password. So why is it doing this? Well, you saw in the publish stage, I entered iTunes U information with some account information. Well, that's sensitive data. I don't want to just store that flat on the file. So we're going to encrypt this with a master password for your workflow. So just the account information will be encrypted for you.

So we'll just accept that. And here I can say, call this Demo Workflow. And I'll save it to my desktop. And there you see it's on my desktop. Now that's great, it's on my desktop, but that's not very useful with a Podcast Producer system. How do I get this onto the system? Well, you may have seen when I was in File here that there's Upload Workflow. So if I select that, I can specify a Podcast Producer server address with my administrator credentials, and that will upload the workflow automatically to the system and deploy it for me.

So we've made that really easy for you, too. So just to show you that I'm not cheating here, I'm gonna hide this, and I'm gonna open this workflow in TextMate, You might not be able to see, but here I'm going to-- this is the account information. So what I want to show you here is that we've encrypted all the information.

The password's not stored in the clear. We can go down to the template.plist. You've got tons of all the XML that we were talking before. We also see I've got the intro movie, and I've got all the content that I've added has been incorporated into the workflow. So it's a standalone workflow. So all of the data is in there already.

But that's great. So it's really easy to make a workflow, but what does produced content by this workflow actually look like? So I've already run a workflow before, and I'm going to show you the output of this workflow. So here in iTunes U, history of mathematics, I think it was History of Pi. Does anybody want to see that? Okay, so I've just downloaded the content that was published up to iTunes U. And here's what the final content looks like. So this is the intro video I added. It's the flying title with the dissolve.

I want to talk to you today about two of my favorite things, AppleScript and math. And when I was learning AppleScript, I came across this list of predefined variables in the language. And one of them kind of left off the page at me a little bit. I mean, really, pi? What is pi doing on a list of variables?

It's not a variable. It's a constant. It's the ratio of the circumference of a circle to the diameter of every circle in the universe. It's got the same value of pi, 3.14159. You know what it is. But in AppleScript, AppleScript knows that. But you can also change it.

And it finally occurred to me that this might actually be useful in a couple of situations. For instance, depending on when and where you're writing your AppleScripts, back in the day, somebody created a molten sea that was 30 cubits around and 10 cubits across. So if you were doing biblical AppleScript programming, you might start off your AppleScript like this. Set pi to 30 divided by 10. You want to move forward a little bit.

In Indiana in 1897, they unanimously passed a bill declaring that in Indiana, the value of pi... was going to be 3.2. So every AppleScript programmer back then in Indiana started their script this way. Set pi to 3.2. Now, you don't have to depend on AppleScript's idea of the value of pi because AppleScript knows what it is. But we know what it is, too.

It's 3.14159. Everybody knows that, right? 2, 6, 5, 3, 5, 8, 9, 7, 9, 3, 2, 3, 8, 4, 6. You can look this up on Google if you don't believe me. 2, 6, 4, 3, 3, 8, 3, 2, 7, 9, 5, 0, 2, 8, 8, and so on. You know what?

When I was in high school, I was a bit of a geek. I know that's hard to believe. And I learned pi in 200 places because I thought that would impress girls. So I learned pi in 200 places because I thought that would impress girls. So I learned pi in 200 places because I thought that would impress girls. So I learned pi in 200 places because I thought that would impress girls. Let me tell you something. It doesn't impress girls.

So that's how easy it is to create a workflow with a new workflow editor. And I encourage you to all check out Steve Heyman's stuff on iTunes here. Thank you. Thank you, Shell. Can we go back to demo machine, please, or slide machine? Thank you. So that was the workflow editor demonstration. We're very excited about that.

I encourage you also, there's a session on Thursday at 10.30. I believe it's in Nob Hill, but I'm not sure. It's at the end of my slides. We'll go into much more detail of the workflow editor, and we've just scratched the surface here with what this workflow editor is capable of. So that's the workflow editor. We're very excited. You can do lots of cool things with it. But we're going to talk about some other features. I had seven icons up there. We've only covered two.

The next feature we're also equally excited about is the podcast library, although this is harder to demo, but I think you'll all understand it. It's a single-click RSS and Atom feed repository. If you want to host your own RSS feeds and you don't have one set up already, the choice was to set up a separate wiki server and Leopard server, but we heard from some customers that they'd rather just have podcast producer be an all-in-one solution, so we are providing a built-in, automatic, and fully functional RSS feed server that's automatically managed and maintained for you in Podcast Producer 2.0. So there's no longer a need to have a separate server hosting your RSS feeds. You'll get one by default. It will just work. All workflow content, and this is really... Enormously exciting.

We're going to harvest all of the results. It won't be just the results of the workflows. It will also be the original content. If everything that Podcast Producer touches will be archived, sorted, and cataloged into this RSS feed server. And we're going to leverage another cool Apple technology called Spotlight.

And you'll be able to configure the repository to have separate RSS feeds that equal a spotlight query. So how many of you would like to have an automatic feed for Professor O'Rourke, automatically maintained? So regardless of what workflow I upload to, Spotlight will find those workflows, see that I was the submitting author, and all of my video will be in an RSS feed. By using the power of Spotlight and RSS, there will be separate feeds that you can customize by any searchable criteria that you can conceive of in Spotlight.

So the feeds can also be directly served to iTunes U. I don't know how many people have gone to the iTunes U talks this week, but iTunes U is also now offering the option to not copy the content up to iTunes U. You can just have a pointer point back to your content. Well, we've been working with the iTunes U team, and they'll be able to directly scrape these feeds and get the preview video and all of that without you having to manually synchronize that information up to your iTunes U tab.

So we're working with the iTunes U development team to make sure that they have full integration with the Podcast Producer library, which is an automatic hosting service that just automatically works and maintains your RSS library for you. In addition, we're going to base-- not only are we going to use RSS, but we're also adopting a new standard called Atom. And for those of you who don't know, Atom is a multiple enclosure version of an RSS feed. So today, if you want to use RSS and you want to have an iPod version, an Apple TV version, an audio-only version, those are all three separate RSS feeds.

Atom allows you to consolidate that into one feed and have three separate enclosures. So you can have one bundle that represents all of the possible forms, and the client, using an Atom feed, will pick the correct version of the video that they want out of the Atom feed. So you can have RSS, or you can have Atom. Your choice. Both will be maintained for you and automatically served.

So this is an architectural feature of Podcast Producer 2.0, and we're very excited about it, because since all of the video can be served up over Atomfeeds, it now makes it much easier for third parties to access your Podcast Producer content. What if you had an Atomfeed viewer, say, built into Moodle, or an Atomfeed viewer built into Sakai? You could just enter the URL of the Atomfeed, and those services would go and automatically fetch.

Every time you run a workflow, a new episode shows up, Sakai would get updated through the Atomfeed notification. But again, this is harder to talk about than it is to demonstrate. So Kjell's come back up on stage, and we're going to give our last demo for this presentation, which is the iTunes U and RSS Atom Library.

So this is going to be a really short demo, but hopefully that's the whole point of it. And you're going to see how easy we've made it for us for you to integrate with iTunes U now with the podcast library. So how many of you here have already administered an iTunes U site?

see a few hands, I think you're really going to love this one. So here we are on my iTunes use site and I'm logged in as an administrator. I'm going to edit this page because I have this course I want to add. So before I do that, I'm actually going to show you the feed. So I have this monuments of Paris class. You see there's three enclosures. This is what David was talking about. This is an Atom feed we're just showing in Safari.

You see there's three different classes and each class has three enclosures. There's an Apple TV, audio only and an iPod version. Now, I want to bring this feed into iTunes U. So all I'm going to do here is I'm just going to grab this URL. I'm going to copy it here.

And I'm going Let's just hide Safari. So now I'm going to edit my--back here in iTunes U, I'm just going to edit my page. And you see I have an empty European Monuments session here, so let me just make this a bit wider for you. And we're going to create a new course.

And you see here, normally you have your simple course where you add in your title, your short name, and identifier. And here there's a new pop-up that we've been working with the iTunes U Team, and they've developed this new feature. And I just select the feed course. And I'm just going to put in "HDP" and paste in here the URL to my Atom feed.

Hit OK. Now the iTunes U store is actually going to scrape that Atom feed and create my page for me. So I'm done editing here. And you see, there you go. It grabbed the picture that was being served up through the Atom feed. It's created my Monuments of Paris class. And if I go in here, you now see that I have three different tabs for all the different formats.

iTunes U detected that there were three enclosures per episode and that there were three different versions. So now I have my Apple TV tab, my iPod audio, my iPod video. You see it also grabbed the picture and the title of my podcast and the description here. I didn't have to do anything.

And what also happens now is anytime content will be submitted to the library, since it's an Atom feed, the Atom feed will just update and iTunes U will automatically detect that there's new content and it'll just appear in your iTunes U site. So that's how easy it is to integrate iTunes U with a podcast library. Thank you.

Thank you, Kjell. Back to slides, please. Thank you very much. So while we've done a lot of work working with iTunes U, that's a natural and powerful fit. Well, I want to emphasize, we've adopted a standard of Atom so that anybody can do what iTunes U did. You want your own website to scrape our Atom feeds, just read the Atom spec, which is already published, and you can pull content from the iTunes library with no special programming or tools required. The next feature we've added is we've improved the scale and high availability of the system.

Podcast Producer's already a fully scalable system. A side effect of our scale architecture is there's a lot of redundancy, because XCrit schedules jobs on idle CPUs, and we assume that the pool of CPUs is constantly changing. We were already insulated from a single CPU failure. That just meant you had one fewer rendering machine available, but the jobs kept running.

And XSAN's already fully redundant, so if you use XSAN as your shared file system, there was no single CPU failure that could bring down your shared file system. you But in 1.0, there were two processes that couldn't be clustered, and that was the Podcast Producer itself and the Xgrid controller. With Podcast Producer 2, those will be both available in a fully redundant configuration.

We will require XAN, but you can deploy two separate servers, point them at the shared file system, and if one server goes down, your Xgrid jobs will continue to run, and if another server goes down, your Podcast Producer cameras will continue to record. So for higher-end configurations, we think this is excellent.

So this keeps your systems running even in the event of a CPU failure. And if you factor them out across four CPUs, two CPUs for the Podcast Producer server and two separate CPUs for the X-Grid controller, four CPUs total, you could actually have two CPUs fail and still have the system running.

The next feature we've added is a web-based podcast capture application. We've heard from a lot of you that Mac OS X is the most fantastic OS on the planet, but that you occasionally have to use a non-Mac OS X platform, and you'd like to be able to start a camera from that platform. So we're gonna offer a Safari-based application. It'll work with any modern web browser, but we think Safari's the best. And it can be used from Mac OS X, iPhone, or other lesser platforms.

It'll be included as a standard feature of Podcast Producer 2.0. And here's some sample screenshots. So you'll have your standard login dialog in Safari. Dr. Watson logs on, hits the login button, and he gets the three familiar choices. Now, why is there three? Because screen capture's not possible from JavaScript. So you can only upload a file, audio, or video, but you'll have most of the full functionality of the Podcast Capture application. We will support dual video from here from two separate video cameras.

The next feature is another highly requested feature. For those of you who don't know, we also have a very successful service called the Podcast Processor. We're a very successful suite of video editing tools. And Podcast Producer does video, they do video. We've received a lot of questions about further integration with that tool suite. And I'm happy to announce today we are beginning to do that with Podcast Producer 2.0.

So this will allow you to leverage your already existing investment in Apple's Pro video tools. We will be supporting Compressor as an alternate encoder to the QuickTime encoders that built in and freely provided with the OS. And we will be supporting Final Cut Server as a destination for uploading your video, so that you can automatically, through the Podcast Producer library, get all of that valuable content into the Final Cut Server as an asset library management system.

The next feature we're going to be including is improved authentication. This will add authentication for Kerberos, and we'll be supporting Active Directory secure authentication using Digest authentication from the Podcast Capture application. Both the command line tool and the GUI will support either Kerberos, Digest, or the existing authentication methods in the 1.0 product. We've heard from some customers, they do want single sign-on with Podcast Capture. They want to log in once at login window and just launch the Capture app and have it not require further authentication. We will support that in Podcast Producer 2.

So in quick review... The top features for Podcast Producer 2 are a workflow editor, dual video, the podcast library, high availability, improved authentication, web-based submission, and improved integration with the pro apps. My team is not going to sleep for the next several months. We think Podcast Producer is the most powerful automated processing platform available today.

It works for small systems, and it can scale up to very, very large systems. With Snow Leopard, we're going to extend our lead in this space by adding seven of the key features that you've seen in this presentation, and we think this will improve our lead and validate your investment in Podcast Producer 1.0.

And it will remain a flexible platform. Because we're based on Xgrid, we can run any executable Unix can run. You are not locked into our suite of workflow tools. This is both a feature for deployers and an opportunity for developers. You can develop for this platform and fill out the tool suite where Apple does not provide solutions. You're also welcome to compete with us where we do provide solutions. So with more standards, more integration, we believe Apple's platform strengths will make Podcast Producer 2 the best podcast producer production system you've ever seen.

I have the mother of all related sessions slide. Integrating iTunes U into your workflow, you should attend that yesterday. What's new for Podcast Producer? You're here now. Best practices for large-scale XSAN deployments. If you're going to be deploying Podcast Producer and using XSAN as your shared file system, I highly recommend attending that session.

Podcast Producer In-Depth is the session tomorrow at 10:30. You'll see more of the library and more of the workflow editor. It's a very, very exciting demo. We have some possible surprises. I recommend everybody attend. Deploying Podcast Producer is a practical hands-on review of people who've deployed Podcast Producer already, and you can learn from their lessons. Integrating and extending Course Composer.

Course Composer is so powerful, and so many people don't know about it. With Course Composer and Podcast Producer, you can do anything you can conceive of visually. I really recommend, if you have the time, that you go look at the Course Composer. I'm blown away every time I see someone who knows how to use Course Composer with what they can do with Podcast Producer. Deploying Final Cut Server and integrating with Final Cut Server, where they'll be talking about their further integration with Podcast Producer. So for more information, you can contact our server evangelists. And I appreciate everyone's time and your attendance.
