---
Title:  Publishing on the App Store
Year:   2008
Web:    https://nonstrict.eu/wwdcindex/wwdc2008/105/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

All right. Should we get started? My name is Max Muller. I'm the director of the iTunes Store Content Engineering Group. It's my group's responsibility for building the infrastructure for handling all things content, from content acquisition all the way through to content delivery and everything in between. To set the stage for this session, we're going to be looking at the process of taking a final, finished application and publishing it to the App Store. But before we start to talk about where we're going, let's first look at where we've been.

April 2003, Apple launched the iTunes Music Store, a revolutionary online music store featuring over 200,000 tracks, free 30-second previews, simple one-click purchase and download, and worry-free transfer to iPod. Fast forward five years, as one of the original iTunes Store engineers, I can tell you, it's been an action-packed five years. Today, the iTunes Store operates in 22 countries. It features movies, TV shows, music videos, audiobooks, podcasts, and iPod games. This past quarter, the iTunes Store reached a major milestone and is now the largest retailer of music in the world.

September 2007, Apple launched the iTunes Wi-Fi Music Store. Browse, search, preview, purchase, and download right on your iPhone or iPod touch. and this past January, Apple released the iTunes Store for Apple TV, bringing simple HD movie rental right to your widescreen television. Apple has accumulated five years of experience in hosting, distributing, and managing online digital content. and we're building on that infrastructure now to deliver the App Store to you and all your friends and all your friends' friends.

The App Store is really a revolution in online software distribution. Apple is handling all the infrastructure for the App Store by leveraging everything that we've built for the iTunes Store. on the hosting side, we host over 6 million unique songs. And we're adding a new song to the catalog on average every two seconds. On the distribution front, the iTunes Store operates in 22 countries. And just for you, adding 40 more countries, bringing the total to 62 countries that you will be able to distribute your applications into.

On the payment processing front, we have over 50 million accounts in the iTunes Store, and we've sold over 4 billion songs. Specific to the App Store, Apple is bringing a seamless download and installation experience, along with an automatic, unified software update system. And starting in early July, Apple is putting the App Store front and center on every iPhone and every iPod touch we ship, as well as integrating the App Store directly into iTunes. So in your search for Foo, not only are you going to find Foo Fighters, but you're also going to find FooBar by Acme Inc.

So what does this mean to you? This means you get to focus on the fun part, writing great applications. Because you don't have to worry about credit card, marketing, or hosting fees. For commercial distribution, 70% of the proceeds are going to go straight to you, the developer. And free apps are, well, free. So at this point, this is what Apple's bringing to the table for the App Store. And now we need a bunch of great software engineers to write a bunch of great software and get it published up onto the App Store.

So let's imagine I'm a great software developer and I've written an amazing application called Touch Fighter and I've gotten this published up on the App Store. Let's first start by looking at what the customer experience of interacting with Touch Fighter is going to be on the App Store as well as within iTunes.

So this is what Touch Fighter is going to look like in a list view. Someone would have gotten to this either by browsing or via search. Notice we're displaying the icon, the company name, and the application name, as well as the average user rating from our kind, gentle users.

and this is what a product page for Touch Fighter is going to look like. Notice at this point we've added a description as well as a screenshot. A customer at this point with one click would be able to purchase and download the app and play Touch Fighter on their phone.

and this is what Touch Fighter is going to look like in iTunes. Notice it's the same information but would now display it in a full rich iTunes page. With one click at this point, the customer could purchase and download Touch Fighter to their computer. The next time they plug in their phone, they could choose to sync the app over and play Touch Fighter on their phone.

So this is what the customer experience is with interacting with Touch Fighter on the App Store as well as with an iTunes. So now let's talk about you. How are you going to be able to publish your application to the App Store so that it can look even better than Touch Fighter?

Well, you're in luck. Publishing your app to the App Store is a simple five-step process. The first step is to set up an account in iTunes Connect. iTunes Connect is your online web portal for managing your content and your presence within the App Store. iTunes Connect is used by our music labels, our TV studios, our post-production houses, and our movie studios. If you can buy and download a piece of content within the iTunes Store, someone from that company has an account in iTunes Connect.

The prerequisite to set up an account for App Store publishing is that you must be a standard or enterprise member of the iPhone developer program. If you are currently only developing and running your application within the simulator, then grasshopper, you are not ready to publish an app to the App Store. The first time you access the iTunes Connect, you're going to want to have your administrator log in to the iPhone developer or program portal.

From there, they should click on the distribution link. This will talk you through everything you need to know about setting up a distribution signing identity, a distribution provisioning profile, and it will also have a link to iTunes Connect. Once you log into iTunes Connect, you'll end up here. This is the home screen. For App Store users, there are four modules: Contracts, Financial Reports, Manage Users, and Manager Content.

Later on in the presentation, we'll go into more detail about all four of these modules. But for now, we're done with the first step. We have an account. Next up, we're going to add a new app. To do that, we log into iTunes Connect and click "Manage Your Content."

If this is your first time logging into the content management module, I highly suggest you download the user guide linked off the middle part. The user guide contains detailed instructions as well as examples for everything that you will need to provide to us when you submit your application through the App Store.

All of your applications that you previously submitted would be listed here. You'll be coming back into this page to make edits to any of your metadata that you provided to us, as well as to provide a new binary for the update process. Now, I've already read the user guide, so I'm going to click on the upper left-hand button to add a new application.

The first time you add a new app, we are going to ask you for two pieces of information. The first is your primary or default language. This will come into play when we start to talk about how you localize your pages within the App Store. But for now, what we want to know from you is what language are you filling out all of the metadata about your application in?

The second is your company name. This is your brand within iTunes. Every application that you submit to the App Store will be listed under this company name. Now, the other thing to point out about these two pieces of information is that right now we don't have any facility to edit them, so you want to make sure you get them right the first time.

Next up, we're going to enter the details or the metadata about our application. The first question we're going to ask you is about export compliance. The iTunes Store servers are located within the United States, and as such, any time you move a binary to us, we are going to ask you three questions about your use of encryption. The first is, does your product contain encryption?

The second, is encryption used for authentication purposes only? And the third, is encryption used for the protection of data or information security purposes? If you answer yes to the third question, we are going to require that you upload a PDF copy of your CCATS file to us. If you don't know what a CCATS file is, and you think you might need one, I'm going to refer you to the U.S. Department of Commerce Commercial Encryption Export Control's website for further fascinating reading.

Next up is to provide the details about your application. This is your application name, description, categories, copyright and version information, as well as an application and support URL. and finally a support email and an end user license agreement if you have one as well as a SKU number.

Later on in the presentation we'll go into more detail about all of these fields, but for now the only thing I'd like to point out is that your SKU number is not on a customer visible field. It's only used for you for within your financial reports. Once you've submitted a SKU number to us, you cannot change your SKU number.

Next up are your supported devices. The App Store differentiates applications between two sets of devices. An application that works on the iPhone and the iPod touch and an iPhone only application. If, for instance, your application requires the use of the camera or the microphone, you are going to want to indicate your application as being an iPhone only application. It should be noted that iPhone only applications will be filtered out and not visible within the App Store on the iPod touch.

Optionally, if you have categorized your application as a game, we are going to ask you to provide the frequency or intensity level of the following game advisories. Based on these game advisories, we'll determine the rating of your game within the App Store. The App Store has four age-based ratings, 4+, 9+, 12+, and 17+. I should point out that iTunes will offer parental advisory controls to limit access to games of certain ratings.

At that point, we've provided all the metadata we need to about our application. Next up is the actual assets. The first and most important asset is obviously your binary. There are a few things that you need to ensure about your binary before you upload it to us. The first is that you have included a 57 by 57 PNG icon. Note the rounded corners as well as shine are automatically applied by both the App Store and the phone. If you've chosen to pre-render your icon, the App Store will respect the UI pre-rendered icon key if you set it in your Xcode project.

Next up is your app ID. You register your app ID within the iPhone developer portal. You'll use that app ID to create a distribution provisioning profile for your application. You should set up a separate distribution provisioning profile for each unique application that you plan to submit to the App Store.

Last is to actually build your application. Little bit different than building it for your development or testing. So in Xcode, you're gonna set your active SDK to device. You're gonna set your active configuration to release. You're gonna set your code signing identity to be your distribution identity. This is not the same as your development identity.

And last, you're gonna set your code signing provisioning profile to be the distribution provisioning profile for that application. After your application has been built in the Finder, you're going to compress it to a zip archive. This zip archive is what you will then be uploading to the App Store.

So what about if you get your zip together and it's 500 megabytes? Turns out the web experience for uploading a 500 megabyte file is what we would call less than ideal. How we solve this problem for our music and video partners is we actually provide software to them that they then use to upload terabytes of content to us every week.

So we've taken that same core infrastructure and we built a nice Cocoa app called Application Loader just for you. With Application Loader, you log in with your iTunes Connect account. Once logged in, you will see a listing of all of the applications that you have submitted to us that are awaiting a binary upload.

selecting one of those applications, you can then select a zip file and hit transfer, at which point you can watch the progress as your binary will move up to our servers. If for whatever reason your transfer should get interrupted, you can just hit resume and pick it right up, pick it right back up right where it was. Once the application has successfully moved to our servers, you'll get a nice confirmation dialogue that you'll know that you're done. Now, we are going to require the use of Application Loader.

We're going to require the use of Application Loader if your zip archive is over 200 megabytes. However, anyone can elect to use Application Loader if you are on a slow or spotty internet connection. and the last thing to point out is that we do have a hard limit of two gigabytes where we will not accept any archive that is over two gigabytes.

Now, since we are still within the beta program, at this point, we don't want you to upload a binary to us just yet. For today, we're looking at you setting up all your metadata within iTunes Connect and we'll notify you at a later point when we're ready for you to upload your binary to us. Next asset that we need is a 512 by 512 version of your icon. Note, this should be from the exact same artwork of the icon that was included in your binary.

and the last asset we need from you is one screenshot. Note, if your screenshot includes the status bar, we're gonna ask you to crop that out. You can provide up to four additional screenshots that will only be visible within the iTunes Store. At which point, we're done with our assets. Only one step left, and that is to specify availability.

Availability breaks down to two pieces of information. The first is the availability date. This is the earliest date that your application can appear within the App Store. and the second is distribution. When you're going through the flow, worldwide distribution is assumed. However, if that is not your intent, for the 22 stores that we currently operate the iTunes Store within, you can select which of those countries you would like your application to be visible within. And for the 40 new stores that we're adding, you're either opting into those 40 stores or out of those 40 stores. At this point, if your intention was to publish a free application, you've supplied everything you need to us.

So now let's look at a commercial application. For publishing a commercial application, we add two additional steps. The first is to set up your payment information. And the second is to set up your application pricing. Your payment information, like your account, is a one-time process. The first thing we're going to need from you is a signed paid applications contract. This can be electronically assigned by the administrator of your iTunes Connect organization.

Once we have that signed contract, we need you to provide three additional pieces of information. The first are your finance and legal contacts. The second is a bank account to receive payments. Note that even if you plan to distribute commercially in 62 countries, we only need a single bank account from you. Your bank will automatically handle the currency conversion for you.

and the last thing we need from you is your tax information. For developers within the United States, you can electronically submit your W-9 form within iTunes Connect. And for developers outside the US, you can download your W-8 bin form from iTunes Connect that you'll then need to fill out and put back in the mail to us. To get to your contracts, log into iTunes Connect, click on the upper left module called Contracts.

First time through, you'll notice contracts and amendments that you are eligible for are listed on the top part of the screen. contracts that you currently have that are in effect are listed in the bottom part of the screen. As part of your iPhone program developer contract, it included free distribution. So here at the bottom, we see we have one free distribution contract that is currently in effect. Once we have signed our paid applications contract, we provided our contacts, our banking information, as well as our tax information.

The paid applications contract will drop down into your NFX contracts. Once Apple has set everything up on our side, the green checkbox that you see in the upper and the bottom left-hand corner is your sign that you are now clear for commercial distribution in the 62 countries that we currently operate in.

That's it for the payment information. Next step is to set up the pricing. The pricing of your application, you will be picking a price tier. Price tier will determine one price tier maps to all the retail price points and all the App Stores that we operate in. For instance, if I was to choose price tier 10 in the left-hand column, you'd see what the customer price reflects in each of the countries. And on the right-hand side, you'd see what your proceeds are. Note that for the 40 additional countries that we're opening up, Those that are not within the Eurozone are all operating on the US dollar.

At this point, we've provided everything we need to for publishing a commercial application to the App Store. So now let's look at a worldwide app, either a free or commercial. In this case, what we're looking at now is how we localize the pages within the App Store. So for that, we had one additional step, which is to add languages.

The App Store supports the following supported languages: English, Dutch, French, German, Italian, Spanish, and Japanese. For every application that you submit to us, you can provide the following: application name, description, application support URLs, support email, and screenshots in each one of those languages. this is all about your marketing materials. Your actual binary you will have localized with the next code.

At this point, we're done. We have supplied everything to the App Store for publishing either a commercial or free application with localized eyes metadata. and at this point I'd like to bring up Ricardo Cortes, engineering manager responsible for iTunes Connect. He's going to walk us through publishing an app to the App Store. Ricardo. Thank you, Max.

So there are three steps in getting your application up on the App Store. We need to build it in Xcode. We need to zip it, create the metadata and pricing in iTunes Connect, and then if it's a large binary, use Application Loader to submit it to the iTunes Store. Let me go ahead and launch Xcode.

First thing you want to do is make sure that your toolbar is set up correctly. If you right-click on the toolbar and customize it, you want to grab the overview toolbar and drag it onto your toolbar pane. As Max alluded to, you need to set your active configuration and your active SDK.

You'll see that my active SDK is set to device iPhone OS 2.0, and my active configuration is set to release. The next step is to ensure your code signing identity bits are all set and correct. If you click on Touch Fighter in the target section, bring up the info panel. To get to it quickly, you can type code signing.

The code signing section comes up. You'll see the code signing identity is set to my distribution code signing identity. And my code signing provisioning profile is set to my distribution profile that I created within the WWDR portal. Once you've verified that you have the code sign identity and provisioning profile set correctly, you can go ahead and build your application.

And as Max alluded to, the final step after you build your application is to zip it in Finder. If you right click on the built product, you can reveal it in Finder. I already have my zip there, I'll delete that one. And right click on the app and compress it.

I have a demo folder over here. I'll drag that to my demo folder to upload later. And step one, Xcode is done. Next, you want to go into iTunes Connect. Let me launch iTunes Connect. Using the same login and password you have for the portal, On this page, you're brought to the four modules Max alluded to. The one of interest right now is manage your content.

As you can see, I have a game, Solitaire, that I previously uploaded on the 7th of June. Its status is currently waiting for upload, so it's a large binary, or I opted to choose the large binary flow due to a spotty or slow connection. Right now, I'd like to add a new application, so I'll go ahead and do that.

question is export compliance. Touch fighter does not contain any encryption, so I'll go ahead and indicate that by choosing no. And continue on in the flow. The Overview tab is where you enter most of your metadata that describes your particular application. So I'll go ahead and enter the application name first. I have a little cheat sheet here. Let me grab my application description from my cheat sheet.

The device is iPhone and iPod touch for this particular application. And it is a game. Due to the fact that I chose game as my primary category, I'm now given the option to choose up to two subcategories. I'll opt to choose one subcategory of action. Note that application name, application description, device, and primary category are bolded. These are required fields. You're not required to enter the non-bolded fields. The copyright.

[Transcript missing]

If you choose game as your primary category, you're required to now choose the advisories that describe the game, game's content. Touch Fighter does have some infrequent and mild use of cartoon or fantasy violence, so I will indicate that. The rest of the advisories do not apply.

After the Rating tab, we're brought to the Upload pane. The Upload tab, sorry. This application is a large binary, so I'll go ahead and indicate that with this checkbox. And move on to the next asset, which is my 512 by 512 icon. Click "Upload File." After you've properly uploaded the asset to the iTunes Store, a check indicates success. After the 512x512, it's your primary screenshot.

At this point, I'm not going to enter any additional screenshots. I'll move on to the next tab in the flow. The next tab is the Pricing tab. The availability date is already set to today. I would choose Tier 5. And once the tier is chosen, a dynamic matrix shows below the tier to reflect the customer price and proceeds in each of the App Stores.

You'll see US has a customer price of $499 and the proceeds are $350. Let's continue on the flow. At this point, because I set my primary language to English, and this is the localization I just added, I now have the option of adding up to six more localizations for the App Store. I will go ahead and choose French.

We auto-populate the application title from the first localization you entered. The application description is really the field you'll use to localize this particular application for a particular storefront. Using my cheat sheet, my five years of French is not going to pay off here, so I'll let you guys interpret.

And then, you know, your support URLs might change slightly depending on where you are. So I'll add "fr" to the end. At the bottom, you see we auto-populate your primary screenshot and any additional screenshots you've created on your first localization. You have the option here of changing them or keeping them as they were uploaded previously in the flow. I'll go ahead and continue.

Finally, we reached the Review tab. This is where you can confirm all the changes you've made for all the localizations. So if we look at the English localization, Of course we've got the application title, the description is in English. Device, primary category of games with a subcategory of action.

Copyright, URLs, email address, and the generated rating of 9+. At the bottom, the chosen tier of Tier 5 with customer price of $499 and proceeds of $350. Scrolling up, let's take a look at the French localization real quick. We choose the France App Store. and it loads the localization for the French language. As you can see, the application description is now in French. And with that, we're ready to go ahead and submit our application.

Due to the fact that I indicated in the flow that my application was a large binary, I'm now given the option of downloading Application Loader with this link here. I've already downloaded Application Loader, so I will skip this step. and we're brought back to the first page in the flow. When you enter manager content from the home page, you'll see Solitaire is still there, as is Touch Fighter. I indicated in the flow there was a large binary, so the binary was not uploaded through iTunes Connect, thus the status is waiting for upload.

So with that, we're done with step two. The last step is to upload the binary to Application Loader. Let me launch Application Loader. The first screen you brought to in Application Loader is a welcome pane. and it drives you through a wizard process through the application. Your login is obviously the same login you use for iTunes Connect. So I'll go ahead and authenticate myself.

At this point, Application Loader is authenticating me to ensure I'm enabled to deliver content to the App Store. It's done so, so I'll proceed into the flow. And now what Application Loader has done for me is it went and fetched the applications that I'm enabled to deliver to the iTunes Store, namely Solitaire and Touch Fighter, both which were in the status of waiting for upload in iTunes Connect. I'll go ahead and choose Touch Fighter.

Application Loader gives you a little bit of details about the application to ensure this is the application you really, really want to submit to the iTunes Store. So there's the application, version number, the SKU, and the copyright. And now we're ready to choose our zipped archive, our zipped binary, and send it to the App Store. in my demo folder, if you recall from Xcode, is my zipped binary. I'll go ahead and choose that.

Application Loader comes with a background activity monitor. Gives you a little idea of what's happening behind the scenes. It's also fully threaded, so you have the opportunity to do multiple things at once, including send two binaries at once to the App Store. You can see I've chosen touchfighter.zip off the file system. And the last step is to send it to the iTunes Store. So I'll go ahead and do that.

We authenticate ourselves, ensure that you're able to deliver the package, then we upload it. As you can see, the package has been uploaded to the iTunes Store. If I click Next in the flow, I get a confirmation page indicating success. Finally, if I click Done, that's it. I've uploaded my application in Application Loader. So to review, three steps. First, you've got to code your application. You've got to set your distribution profile and your code signing identity to distribution and Xcode.

Zip it. Then enter into iTunes Connect, enter your metadata, set your pricing, upload your screenshots, any localizations for any of the App Stores. And finally, if you have a large binary or a spotty connection, use Application Loader to deliver it to the App Store. Thank you. I'll turn it back to Max.

Thank you, Ricardo. See, I told you it was easy. And I'd like to hand it over to Elizabeth d'Errico. Elizabeth's team manages the content for the iTunes stores worldwide. She's the director of the iTunes store, iTunes production group. She's going to walk you through some of the best practices to how to make your application really shine within the App Store.

to the App Store on the device and to the iTunes Store on the web. Now I want to talk a little bit about best practices for how to present and promote your applications once there. use us to your advantage. So when you go to the device, you're going to be competing amongst each other for all of the great applications you're going to be developing for consumers' eyeballs.

The same way when you come to the iTunes Store on the desktop, you're actually going to encounter even more competition with TV shows and movies and music and all of the other wonderful things that are on the iTunes Store. We want to make sure that those who are coming in to find your applications are actually going to find them.

And there's a couple different ways to do that that I want to talk about. These tools that we'll talk about are the same tools that are used for whether it's a movie studio or a TV network or a music label. They all use these same tools, and now it's your turn.

Best ways of getting your app noticed and making sure that your consumers can find you. We'll talk about being discoverable on the store and we want to talk about being compelling. So once someone has found you, how to draw someone in and be more enticing and making them want to learn more. And then once they have that piece down, we want to make sure that they can actually have all the information necessary to understand that they cannot live without your application one more minute.

that's the goal. Discoverability. There's a couple different things to take a look at to make sure that you are being as discoverable as possible in the App Store on the device and on the iTunes Store on the desktop. One is simply your application name and the other is simply the category that you choose for your application.

As mentioned, there's certainly a lot of things going on in both platforms for you to have competition with. There's a lot of things we're featuring, there's a lot of things that are being promoted, but really a whole heck of a lot of people are going in and using search and browse in order to find what they're looking for.

So that's what we're going to take advantage of here. Looking at search, your name is really the first thing that you should pay attention to. On the device itself, as you've seen in the list view, not a lot of room, not a lot of real estate for a long name.

You have about 20 characters and that's about it, otherwise it starts getting truncated. So just something to think about. Similarly here as you see with the blue area, that's our XML area on the desktop, and that has segregated buckets of information so at least you're understanding the TV shows that go together and your results and your movies and your applications.

However, again, not a whole lot of information. So you're going to have to think about what you're going to use to get your results. So you're going to have to think about what you're going to use to get your results. So you're going to have to think about what you're going to use to get your results.

So you're going to have to think about what you're going to use to get your lot of space for your name there. And then down below, by relevancy, there's kind of a jumble of media types all in there, so really the only thing people are going to be able to see when trying to find your application there is the name. That's the only thing they can really look at there.

So a couple of things to think about with your name. One, do not include the version number. That is a separate field as Ricardo has gone over, and that's something that will occur in your product page separately. So this is really your evergreen name of your application that will live throughout its lifecycle. Do not use brands that do not belong to you to precede your app, enough said.

Do not use long names as mentioned because of the real estate issue. You will get truncated. Things to help you keep things short would be to, if you've got a lot of serial applications going on, if you've got Touch Fighter, the new generation, Tux Fighter, Extreme Action, Touch Fighter, Touch Fighter.

If you can avoid it, don't put Touch Fighter in front of all of those because again, what you'll end up with, especially in a list view, is just the word Touch Fighter over and over again and that may not be the best way to help your user find what they're looking for.

So simple to the point, concise, and relevant, if at all possible. If someone who remembers that fantastic game that they wanted to go get that had something to do with fighting, they want to go look that up, they will actually be able to find it if you have the word fight in your application, for example. We'll talk about your application description here in a little bit, and that is also indexed and categorized so that people can find that in search as well. So you can take advantage of the words you're using there, too, to have a good search experience for your consumers.

and then browse. Very simply, browse is used quite often both on the phone itself through use of categorization to browse through and also on the store, on the desktop in this view. Your primary category is that which follows your application throughout everything that you're doing so that if you happen to be found through something that's being featured or through search, that primary category is what will be seen every time your application is viewed.

Your secondary will be found using the browse as well. So if someone's going in to browse, they can find you in both categorizations that you've used. So I encourage you if you do have two that make sense to take advantage of that, use them both. It also helps us as a promotional tool.

If we're going to do a promotion on productivity apps or on utility apps, it helps us to understand, okay, this is how this person has categorized this application. Perhaps it's something we should look at in terms of doing a promotion. and then for games, just for the games category at the moment, we do have a couple of different subcategories that are afforded to you as well as Ricardo has shown.

So now that someone's found you, what are the best ways to draw people in more and to entice them to learn more about your application? Usually the best way to do that is through visuals, very visual creatures, and that's something that we have two things that you can take advantage of to do that, both your icons and your screenshots.

Users expect gorgeous icons. So again, when people are looking at anything really that's on the Apple platform, they're going to look for something that's been well thought out and beautifully presented. Same thing on the desktop if you're being observed there. Again, gorgeous movie posters, title treatments from TV, lovely album artwork. All of these things are going to be found within the store right next to your application and people are going to expect that your application icon looks great too. So here's a couple of things to do to help achieve that.

One is to always follow the human interface guidelines. That can help you to understand how to use a single light source and also just how to make your icon look homogenous with other things that they'll find from Apple. Don't scale up. That's probably the cardinal rule. If you've got your small 57 by 57 icon that you're putting within your binary and then you're going to have the 512 by 512 that you're later going to put into iTunes Connect, do not scale that tiny little thing up into the 512 by 512 or you'll get a lot of pixelation. So that's something to think about.

Legibility, again, icons are by definition iconic. So you're not going to want to use a lot of text or small imagery where people are trying to guess and squint and figure out what the heck that is. So you want to use something that's large and easily identifiable and universal.

This is the one asset that is not going to be allowed to be localized. So it's something that you're going to want to think about in terms of someone sitting in Japan or Germany or the U.S. If they're looking at this icon, do they understand what that represents and what that is?

Appropriateness, so we're a family store. We don't want someone coming in looking for Hannah Montana and Alvin and the Chipmunks to stumble across something that is explicit whether there's some type of nudity or some type of extreme violence going on. So keep that in mind as well. And don't be afraid to consult a graphic designer professionally.

If that's something that your forte is developing and you want to get that app the best that it can work and you'd rather have someone else doing the designs for those for your art assets, there is on the web, WWDR has an interface design assistance page at this URL behind me. And that's something, somewhere you can go to find professional help, at least for your artwork.

make sure you send us your flat and square artwork. And as Max mentioned, that will be rounded and we will add a rounding and a shine to it. and that's pretty much the icon. Screenshots. So screenshots are found both on the desktop and on your application, sorry, and on the device.

And this is really the best way to draw someone in and have them understand what it is that your application does. On the desktop store we have trailers for movies and we have 30 second clips for music. This is the equivalent of that for your application. This is really what should give people a sense of what your app does.

So a couple different ways to achieve that would be again, similar to the icon, you want to make sure it's legible. You're afforded five screenshots. If you've got three fantastic ones and two mediocre ones, just send in the three. You really want to just put your best foot forward for this and show your best screenshots you possibly can.

Make sure they're legible. Make sure that you don't have a lot of small things going on where people are wondering what's happening there. You want to make sure that it represents your app. If it's gorgeous, it really doesn't have anything to do with what you do using the application day to day, you're going to want to rethink that and present something that really shows off what your app can do.

We've talked about cultural sensibilities. Screenshots are able to be localized. So there may be a restriction somewhere where there's more sensitivity to violence or more sensitivity to nudity or just in general more sensitivity to certain things. You'll want to think about that and actually you can take different screenshots and localize them. based upon the knowledge in different territories. and also of course set your iPhone language before taking the screenshot so that you also are localizing it not only culturally but obviously the language as well.

To take the screenshot on the new OS, you will hold down the power button and press the home button and the screenshot will be saved into your camera roll. So that's the way you can do that. You can also use Xcode Organizer which has a nice screenshot tab that will do the same thing for you.

remove the status bar from the screenshot, as I think Max mentioned. The reason for that is if you're browsing on the device, you don't want to have double screenshot funkiness going on, so make sure that you crop that out. and that way you can have more real estate for your nice full screen screenshots. That's the portrait. Here's the landscape. Crop that out.

and that's your screenshots and your icons. So now that you've drawn someone in and you've enticed them to learn more, we want to make sure that when they get there that the information that they're viewing is going to help them make that decision that they, again, can't live without your application and have to hit that buy button right away or that download button right away. So a couple different things to think about when being informative.

Application description is one of the best ways of doing this. I encourage you to avoid having too much or too little going on there. This is clearly an example of too much copy. It could be a beautiful Shakespearean sonnet about how wonderful your app is, but no one, unfortunately, is going to read that. It actually takes away from your screenshot as well. No one can see it. So this is just way too much information.

So avoid doing that. You also don't want to have too little. Saying, you know, this app rocks or best app ever is where it's informative about how you feel about your app. It doesn't really help people make that decision that they are going to want to buy your app because they won't know exactly what it does. So just keep that in mind.

can't use HTML tags but I would encourage you to use line breaks and bullets in plain text to better set off some of your copy and make it more legible. Very quickly, copyright information, generally the copyright holder name and the date. We will append the copyright symbol so you don't need to include that. And again, if you can, keep that as short and succinct as possible as that will appear on your product page and can cause clutter if it's overly verbose.

Version number, again, the human interface guidelines can help you here, but generally a numeral is the best way to have someone easily understand exactly where they left off. And so you can serialize your versions. SKU number is not user facing, but I just bring it up to give a little more detail to it.

If you have a UPC code, that's the best way that you can possibly give us that information. However, if you don't, it really is just a unique identifier for your account that is used to track that information. And that application. And that's what you will receive in your financial reports when you go to see how much money you've made.

URL and email. So application URL, if you've provided it, that will be on the page for people to peruse, to jump over if they want to learn more information from your site before purchasing or downloading. Support URL, that's something that will not be placed on the page before they buy, but after they buy, they will be given your support URL to report any problems they find with the binary.

We will also send people to your support URL if when we have heard in our purchase history area if someone has complained specifically about problems with the binary, that's a way that we can send you that information, send them to your support URL there. And the support email is not being sent out. It's not going to be visible. You will not get a deluge of people to your support email address. However, we may contact you if we do find out that there's a problem with your binary. That's how we'll communicate with you.

End User License Agreement, if you have one, you can provide that and there is a link as well on the page that people can peruse that before they download and purchase. There are some terms it needs to just make sure it meets our minimum requirements and that can be found both on iTunes Connect, as Ricardo showed, by the End User License Agreement field and also within the contract. There's some information about that. If you want someone to specifically accept your terms and conditions, the best way to do that is to do that within the binary itself.

Thinking globally, we touched on this a little bit, but iTunes will now be in 62 countries coming up soon. It's very, very exciting. And 40 of those countries are just for you. 40 of those we will have applications. Now that number in the countries are subject to change a little bit, but basically that is the current situation. We're very excited about it. Territory versus language, just want to touch on this for a second. Ricardo in the iTunes Connect where he showed you you're putting in your language, that language could be used across several territories. For example, in the U.S.

storefront, we allow U.S. English and we also allow Spanish. So if someone is sitting and browsing the iTunes store in the United States with their OS set to Spanish, they're going to see the same Spanish that you put into iTunes Connect. So I just say that so that you don't use any local or territory-specific information in that localization because it is not territory-specific in where it will show up.

Creating a single bind. So you can create a binary with multiple localizations as Max spoke of. Being aware of cultural sensibilities, we touched on that a lot. Localize your description professionally or don't do it. Don't think, "Well, hey, I've got this great description. I spent a lot of time on it and it's native language and now I'm going to, you know, in a third-party application, put it up in the web and see what comes out." Highly unadvisable.

You'll have something like this that you spent a lot of time on, you know, "Save the universe and blast incoming enemy spaceships by tapping on the iPhone's multi-touch display." That sounds pretty good. You put it through your translator. And for those of you that speak Japanese, what you're essentially telling people is the universe that is by hitting with an iPhone as well as the blasting wind.

So I think that's first not what you want to say and secondly it's a little bit frightening. So I think that people would rather see that in English and actually go off of your screenshots and your icons and other things to help them make their decision and not frighten them away with something like that.

Considering app size, as Steve spoke about in the keynote, we do have some restrictions here. We are going to restrict 2 gigabytes for the files themselves. But if you picture someone sitting in their local coffee shop having a latte and you've done such a good job of drawing them in and making things compelling and they can't live without your application, they're going to download it right now. And then, oh my goodness, if they're on Wi-Fi, it's going to take them at least two or three lattes before they're going to have your application.

And if they're on cellular networks, they actually probably won't be able to get it. And if it's under -- sorry, if it's over 10 megabytes, they won't be able to get it. So sometimes it can't be avoided, obviously, if you have things that make that footprint creep. But really, if you can avoid doing that, that's the best thing.

Last thing I want to leave you with is additional promotions. So if we have elected to promote your application in some way to feature it, we are going to need some high quality, high resolution artwork from you. As you'll notice, most of the items here in what we call the top area here, the things that rotate along those are called splashes. The items in the middle are called bricks. And then on the device, the little things we used are called squishes, like small splashes. So for all of those, we do have things like title treatments and background artwork.

And we will contact you and tell you, hey, we would really like to feature you. Here's what we're going to need from you. And this information is in the user guide as well that you can download from iTunes Connect. So again, and we need vector artwork and we need transparent backgrounds and layers so that if we need to manipulate it in some way or add a tag to it that says something like app just added or something like that, that we can do so.

and if we're really going to blow it out and do a fully designed product page, again, we just need a large layered image for us to work with and fit into our templates. And Touch Fighter is a great app, so we're definitely going to feature that. So again, a lot of this can be found in the user guide.

And so I encourage you to take a look at that. And now that you've seen how you can get your application published and how you can best promote it, I'm going to have Max come back up. And he's going to talk to you about some of the things and what happens next.

Thank you, Elizabeth. All right. So now you've submitted a great application to the App Store. So what's next? The first thing to point out is to be prepared. Make sure that at the time you submit your binary to us that any services or external URLs that your application relies upon are live. Also make sure that your application and support URLs are live as well as your support email address. Nothing says you care like giving a customer a 404 when they're trying to get help about how to use your application.

Assuming issues were not found with your submission, you will receive an email notification and your application will go live, either immediately or on the availability date that you specified, whichever comes later. If issues were found with your submission, Apple will contact you, at which point you'll have the option of uploading a new binary through iTunes Connect, either through the page or using an application loader.

Other things you should look at doing are creating other iTunes Connect accounts for people within your organization. If you recall, only the administrator has an initial iTunes Connect account created for them, so they will need to set up other users and give them admin, finance, and technical roles, as well as set their access privileges and set their email notification preferences.

One notification that you want to make sure that you set up and that you receive is your reporting notification. We post reports on a monthly basis. You will receive an email notification when a report has been posted in iTunes Connect for you to download. You will receive one report per Proceed currency. Within that report, it will be grouped by your SKU.

To get to your reports, you'll log into iTunes Connect and click on the Financial Reports section. Every financial report that we have posted for you will always be there for you to download. This way, if you want to come back and compare sales for an application three months ago to how it's doing now, you'll be able to do that.

Other things that you might look at doing after you've submitted an application are making changes to that application. The App Store differentiates between two types of changes. The first are changes to your marketing material. This is your description, your screenshots, maybe adding a localization, as well as even changing the price. For these, we refer to those as live edits. Once you've confirmed a live edit, those changes are going to get pushed out and start to be visible within the App Store.

The second type of update is an actual update to your binary. For this, you're going to be using the integrated update system built into the App Store. First thing to point out is that this is not an incremental update. We're going to ask for you to provide the entire new binary to us, and that entire new binary is what is going to get pushed to all of your current users. Second, this works like software update, so all the updates going through the system are free.

and the last point to point out is that your app ID and your bundle identifier of your previously submitted application need to match your new binary exactly. If they do not match, we're going to reject your binary back to you and have you correct that before you can proceed.

And the last thing to point out is that you cannot become more restrictive in your supported devices. If version 1 of your application worked on the iPhone and the iPod touch, version 1.1 of your application cannot be an iPhone-only application. That's what we call a bad customer experience.

The process to update your app binary is you're going to log in to iTunes Connect and click on the Manage Content module. For every application that you currently have that is live, you'll have an update link. When you click on that link, we are going to ask you for four pieces of information. The first is export compliance, because you're moving a new binary to us. The second are your release notes.

This is the text that will be displayed to the user in the App Store and within iTunes, explaining why they're getting an update. For each language that you have chosen to localize your marketing message in within the App Store, we will allow you to provide release notes in that language. Next, we're going to need your new version number and then your new binary.

I should point out, this update is going to go through the same process as your original application submission. This time, when you receive an email notification, assuming issues were not found with your update, your update will now become live within the App Store. This means that new customers now purchasing your application are going to receive the new version of your binary.

Likewise, users that have previously purchased your application will now be the next time the App Store or iTunes phone's home for updates, your update will appear there. We will always offer the latest update to a user, meaning if I purchased a 1.0 version of an application, and since then you've come out with a 1.1, a 1.2, and a 1.3, when the App Store phone's home, I will be offered the 1.3 version of your application within the update process. So let's now look at how you can get ready for the App Store today. First step is if you haven't already done so, you're going to want to apply to the paid iPhone developer program.

Second step is you're going to want to make sure that your administrator logs into the iPhone developer program portal. They're going to follow the link to iTunes Connect. If you're interested in commercial distribution, you want to get that signed paid application contract going as well as get all the other information submitted to us so we can start the setup process on our side.

And the last step that you should get started on today to get ready for the App Store is to submit all the metadata about your application. Start that process going today. In summary, the App Store will be an amazing experience for users to find and discover great applications that they can't live without.

your applications. Because for you, the App Store is an incredible experience. Or incredible opportunity. And experience. For you to leverage Apple's infrastructure for distribution, installation, and updates. For you to reach iPhone and iPod touch users in 62 countries. And for you to use simple and intuitive tools to manage your content and your presence within the App Store.

So, early July, the train is leaving the station. actually trains a bad metaphor. The roller coaster is leaving the station. Early July, we want each and every one of you to be on board, strapped in, and ready for the ride. So to get more information, as mentioned before, the user guide, iTunes Connect, manage your content, makes for great bedtime reading. If you're interested in commercial distribution, download a PDF copy of the paid applications contract from iTunes Connect. Also makes for great bedtime reading.

Last up are the labs, located on the first level, operating Wednesday and Thursday from noon until 6:00 and Friday from noon until 4:00. App Store experts are on hand to answer any questions you have about the App Store. Go into anything covered in this presentation in more detail. We're not doing QA within this session, so if you have questions, I highly encourage you to go to the App Store.

and last up are the related sessions. This morning was the iPhone application development fundamentals at 9:00 a.m. If you slept in and missed it, at the conclusion of the conference, certain sessions will be posted online for attendees. Tomorrow at 9:00 a.m. is the iPhone application user interface design and tomorrow at 2:00 p.m. is internationalizing your software. And with that, I'd like to say thank you for coming and have a good week.
