WEBVTT

00:00:20.740 --> 00:00:22.640
Okay,
welcome to the Mac OS X printing session.

00:00:22.640 --> 00:00:24.840
For those who haven't met me,
my name is Howard Miller.

00:00:24.840 --> 00:00:26.680
I'm the engineering manager
for the printing team.

00:00:26.680 --> 00:00:29.330
Before we get started here,
let's see if we can wake

00:00:29.400 --> 00:00:30.770
people up a little bit.

00:00:30.850 --> 00:00:33.430
I know you guys got the party tonight,
so everybody was trying

00:00:33.430 --> 00:00:35.980
to sleep in this morning,
so I thank you for being here.

00:00:35.980 --> 00:00:39.430
I see a lot of people out there
that I know to be printer driver,

00:00:39.430 --> 00:00:40.780
printer developers.

00:00:40.780 --> 00:00:42.720
How many of these guys do we have?

00:00:42.720 --> 00:00:44.790
A lot, many from around the world.

00:00:44.790 --> 00:00:46.540
Thank you for being here.

00:00:46.540 --> 00:00:50.090
How many people are brand
new to the Mac platform?

00:00:53.000 --> 00:02:28.100
[Transcript missing]

00:02:28.320 --> 00:02:31.530
In terms of what we've added in
our featureless OS Snow Leopard,

00:02:31.530 --> 00:02:33.150
we've changed some things.

00:02:33.210 --> 00:02:34.550
Ad printers changed.

00:02:34.550 --> 00:02:37.180
We've exposed some power of CUPS.

00:02:37.180 --> 00:02:42.280
There'll be access control lists,
users and passwords per printer queue.

00:02:42.280 --> 00:02:45.790
The queue window,
we've added an inline preview,

00:02:45.790 --> 00:02:49.770
which lets you see your job in flight,
which is great.

00:02:49.780 --> 00:02:53.960
We've done some stuff to integrate more
tightly with multifunction devices.

00:02:53.960 --> 00:02:56.890
Major changes and
improvements to our SDK.

00:02:56.990 --> 00:03:01.920
I mentioned the driver thing,
and then of course CUPS 1.4.

00:03:02.480 --> 00:03:04.020
Everybody's seen the system preferences.

00:03:04.020 --> 00:03:06.870
Everybody knows about the
little plus to add printer,

00:03:07.030 --> 00:03:10.790
and everybody knows on Leopard you get
this floating window that you can lose.

00:03:10.790 --> 00:03:11.820
It's now a sheet.

00:03:11.830 --> 00:03:13.900
You will not be losing that anymore.

00:03:13.900 --> 00:03:15.240
Look at it closely.

00:03:15.240 --> 00:03:17.550
We've also greatly simplified it.

00:03:17.550 --> 00:03:21.100
No 47 different tool items
to pick across the top.

00:03:21.350 --> 00:03:24.220
Bad news is it's in your seed,
but you can't see it.

00:03:24.220 --> 00:03:28.190
So you'll see the old one for right now,
but in a future seed we'll get

00:03:28.280 --> 00:03:30.120
that one turned on for you.

00:03:31.490 --> 00:03:33.630
In the...

00:03:33.770 --> 00:03:36.820
In the sharing controls,
there's always been printer sharing.

00:03:36.820 --> 00:03:40.440
Now you'll notice that you can
actually add access control.

00:03:40.440 --> 00:03:44.100
So you can select a printer and
hit the plus button in terms

00:03:44.100 --> 00:03:48.280
of who can use the printer,
and then you can add users or groups.

00:03:48.340 --> 00:03:52.380
So now on a per-printer basis,
you can provide user password.

00:03:54.520 --> 00:03:59.550
In our desktop printer,
this is in your seed,

00:03:59.840 --> 00:04:03.830
We have the view of print jobs,
so you can hit the View button,

00:04:03.830 --> 00:04:08.180
and you will get the quick look view
of items that are in your print queue.

00:04:08.180 --> 00:04:11.550
We're going to try to do more with this,
but we'll see how far we get

00:04:11.640 --> 00:04:14.460
as we progress through the OS,
but at least now you

00:04:14.460 --> 00:04:15.950
can see your print jobs.

00:04:18.440 --> 00:04:21.850
Also in the printer proxy,
though not in your seed,

00:04:21.850 --> 00:04:26.020
you'll be able to scan directly
from the desktop printer.

00:04:26.020 --> 00:04:28.540
The support that we're
trying to build in,

00:04:28.540 --> 00:04:31.200
the concept is grab any
handful of pictures,

00:04:31.200 --> 00:04:32.980
throw them on your scanner.

00:04:32.980 --> 00:04:36.900
We will find them, identify their bounds,
straighten them, crop them,

00:04:36.920 --> 00:04:38.960
and give you individual pictures.

00:04:38.960 --> 00:04:42.840
You should be able to scan directly
into preview so you can see them.

00:04:42.840 --> 00:04:45.960
You should be able to scan
to your desktop or iPhoto.

00:04:47.380 --> 00:04:50.540
This sheet, this capability is also
being exposed system-wide.

00:04:50.690 --> 00:04:53.110
Every application will
be able to pick this up.

00:04:53.110 --> 00:04:56.150
So scanning is no longer
a corner case hidden item.

00:04:56.320 --> 00:04:57.840
We think it's going to be mainstream.

00:04:57.840 --> 00:05:01.110
Of course, if you're making printers,
you know that half or three-quarters

00:05:01.110 --> 00:05:04.580
of all printers sold are multifunction,
so there's a scanner there anyway.

00:05:04.580 --> 00:05:08.400
So if your printer driver developer,
many of them are in the room,

00:05:08.820 --> 00:05:12.350
provide an ICA-compatible driver,
this functionality becomes

00:05:12.350 --> 00:05:14.590
almost free for your application.

00:05:17.190 --> 00:05:20.740
Let me talk a little bit about some
of the things that are changing.

00:05:20.780 --> 00:05:25.080
AppleTalk was invented before
many people I know were born.

00:05:25.120 --> 00:05:27.720
It has been an absolutely
wonderful protocol.

00:05:27.760 --> 00:05:30.250
It has served everyone extremely well.

00:05:30.560 --> 00:05:33.060
It is no longer in Snow Leopard.

00:05:33.090 --> 00:05:35.720
It goes and it ends.

00:05:35.890 --> 00:05:36.870
It will not be there.

00:05:36.900 --> 00:05:41.540
The first printer I worked on at
Apple was the LaserWriter 16600.

00:05:41.540 --> 00:05:43.420
Does anybody in the room
still have one of those?

00:05:43.420 --> 00:05:45.580
Yeah, they're very reliable.

00:05:45.630 --> 00:05:47.420
They're great printers.

00:05:47.420 --> 00:05:50.550
They're officially done.

00:05:51.820 --> 00:05:55.900
Companies, you know, Lexmark, Brother,
sell great printers.

00:05:56.050 --> 00:05:59.160
HP will give you a rebate
or discount right now.

00:05:59.160 --> 00:06:04.340
So for about $300,
you can replace that 16600 with a great

00:06:04.340 --> 00:06:09.520
PostScript printer by a manufacturer,
many of them, higher resolution,

00:06:09.520 --> 00:06:10.790
higher speed.

00:06:11.340 --> 00:06:12.550
Apple Talk is dead.

00:06:12.680 --> 00:06:17.170
If somebody thinks they have a customer
installation where this is a big problem,

00:06:17.170 --> 00:06:18.050
send us mail.

00:06:18.110 --> 00:06:19.920
We'll try and work through.

00:06:20.440 --> 00:06:21.800
But our official answer is bonkers.

00:06:23.300 --> 00:06:23.820
Bonjour.

00:06:23.820 --> 00:06:25.820
Bonjour has officially
been in the OS since 10.3.

00:06:25.920 --> 00:06:28.890
In 10.2, it had a different name,
which we won't talk about.

00:06:29.190 --> 00:06:34.010
But virtually every PostScript and most
network printers do support Bonjour with

00:06:34.370 --> 00:06:37.700
an underlying IP print transport layer.

00:06:37.700 --> 00:06:39.460
So that's our official answer.

00:06:39.460 --> 00:06:41.020
You will not find Apple Talk.

00:06:41.120 --> 00:06:42.060
It is not a bug.

00:06:43.950 --> 00:06:46.220
A few other things,
and I put gradients on these.

00:06:46.220 --> 00:06:48.600
Tioga printer drivers.

00:06:48.600 --> 00:06:53.740
This is where we introduced with DP4,
was part of Mac OS X, the original.

00:06:53.740 --> 00:06:58.550
We integrated CUPS many years ago in X2,
and we've been encouraging

00:06:58.900 --> 00:07:01.340
people to move to CUPS drivers.

00:07:01.340 --> 00:07:03.750
Starting in Tiger,
we felt that every driver

00:07:04.160 --> 00:07:05.440
could be created with CUPS.

00:07:05.520 --> 00:07:08.540
We are now removing all
the Tioga header files.

00:07:08.690 --> 00:07:14.090
You will no longer be able to build
Tioga technology drivers on Snow Leopard.

00:07:15.870 --> 00:07:21.050
Likewise, Carbon PDEs, again,
introduced at the beginning of Mac OS X,

00:07:21.150 --> 00:07:25.200
and we have switched to
Cocoa PDEs officially in X4,

00:07:25.200 --> 00:07:29.690
and we are removing all
of the headers for this.

00:07:29.760 --> 00:07:34.870
This would include application
panes and print dialogues.

00:07:34.880 --> 00:07:39.050
So anybody who's adding those and
you're still using the old Carbon PDEs,

00:07:39.050 --> 00:07:42.990
be aware you will no longer be
able to build them on Snow Leopard.

00:07:43.620 --> 00:07:46.740
That said,
Tioga drivers that are well-written,

00:07:46.740 --> 00:07:49.790
Mike will talk later about
what may be not well-written,

00:07:49.790 --> 00:07:53.420
but well-written Tioga drivers should
continue to run on Snow Leopard.

00:07:54.880 --> 00:07:59.980
A well-written Carbon PDE will
run on Snow Leopard.

00:08:00.260 --> 00:08:04.720
One problem, Carbon PDEs will not run
in 64-bit applications.

00:08:04.760 --> 00:08:07.150
On your seed today,
you will find many of the

00:08:07.150 --> 00:08:10.370
Apple applications have already
been converted to 64-bit.

00:08:10.380 --> 00:08:11.840
Preview, for example.

00:08:11.840 --> 00:08:15.250
Customers do not have a
switch to say run 32-bit,

00:08:15.260 --> 00:08:16.520
run 64-bit.

00:08:16.540 --> 00:08:22.220
So if you've provided Carbon PDEs,
many of the applications your users have

00:08:22.220 --> 00:08:26.420
on Snow Leopard are going to be 64-bit,
and so your Carbon PDEs will not run.

00:08:26.420 --> 00:08:29.090
So yet another reason to move to Cocoa.

00:08:31.520 --> 00:08:33.880
Okay, so I mentioned a little
bit about image capture.

00:08:33.880 --> 00:08:36.480
For those interested,
there is an image capture

00:08:36.480 --> 00:08:37.940
session later on today.

00:08:37.940 --> 00:08:42.120
There is a lab directly
following this meeting.

00:08:42.120 --> 00:08:44.100
It's always been the tradition
to meet in the hallway,

00:08:44.100 --> 00:08:45.820
but this year we got smart.

00:08:45.820 --> 00:08:47.900
We scheduled the lab right
after the printing session.

00:08:47.900 --> 00:08:49.170
So just move on down.

00:08:49.170 --> 00:08:51.490
We're the second to
the last on the right,

00:08:51.560 --> 00:08:52.500
the media lab.

00:08:52.500 --> 00:08:54.830
Most of the engineering
team will be there.

00:08:54.830 --> 00:08:56.420
Developer support will be there.

00:08:56.420 --> 00:08:57.740
Evangelism will be there.

00:08:57.740 --> 00:09:00.280
We should be able to answer just
about any question that you've got.

00:09:01.880 --> 00:09:04.090
So we're going to talk about today,
which I kind of hinted at.

00:09:04.190 --> 00:09:06.000
We're going to cover
application printing.

00:09:06.000 --> 00:09:07.250
We're going to start from the basics.

00:09:07.270 --> 00:09:09.520
We're going to start with
the most fundamental APIs,

00:09:09.780 --> 00:09:11.890
and we will move through
the printing stack and show

00:09:11.890 --> 00:09:13.330
you the APIs of importance.

00:09:13.350 --> 00:09:16.180
We're going to show you how
to customize the print dialog.

00:09:16.180 --> 00:09:22.060
We will give you some pointers and tips
as to how to produce high-quality output.

00:09:22.060 --> 00:09:23.850
And then there's a few
header file changes,

00:09:23.860 --> 00:09:24.730
which I alluded to.

00:09:24.730 --> 00:09:26.660
We'll show you in
detail what we're doing.

00:09:27.990 --> 00:09:29.340
After that,
we're going to talk about CUPS,

00:09:29.340 --> 00:09:32.000
and we'll go through the
background for those who haven't

00:09:32.050 --> 00:09:33.660
been fully familiar with CUPS.

00:09:33.660 --> 00:09:37.460
We'll show you its architecture,
and then we'll spend some time on

00:09:37.460 --> 00:09:41.330
exactly what's new in Snow Leopard,
which is CUPS 1.4.

00:09:41.330 --> 00:09:43.620
So with that,
I want to introduce Alan Beck,

00:09:43.620 --> 00:09:46.230
who's going to talk about
application printing.

00:09:50.840 --> 00:09:51.540
Thank you, Howard.

00:09:51.540 --> 00:09:55.350
So today, well, actually,
first I want to say it's great

00:09:55.350 --> 00:09:57.360
to be up here again this year.

00:09:57.470 --> 00:10:01.060
It's a great WWDC,
and I am going to basically be talking

00:10:01.060 --> 00:10:06.980
about the application printing and how it
relates basically to Cocoa applications.

00:10:07.640 --> 00:10:12.860
So we're going to start talking about the
basics of how do you get your application

00:10:12.930 --> 00:10:15.090
to get output onto your paper.

00:10:15.090 --> 00:10:18.900
Then we'll just move on to how
to customize the print dialog,

00:10:18.900 --> 00:10:22.910
and not just the print dialog,
how do you customize the printing

00:10:22.910 --> 00:10:24.800
experience for your user.

00:10:26.490 --> 00:10:29.320
Then we'll go on to how to
produce high-quality output,

00:10:29.390 --> 00:10:33.310
and finally,
utilizing print core printing.

00:10:34.460 --> 00:10:37.890
So here are the basic APIs that
application developer sees.

00:10:38.060 --> 00:10:40.880
On the very top,
we have your application.

00:10:40.880 --> 00:10:45.430
Then we move down to the
Cocoa Printing classes.

00:10:48.870 --> 00:10:53.660
This is the basic API that your
application should be using.

00:10:53.670 --> 00:10:56.010
Then underneath that,
the Cocoa Printing Classes are

00:10:56.010 --> 00:10:59.100
built on the core printing APIs.

00:10:59.110 --> 00:11:02.820
And finally, we have the CUPS,
the Common Unix Printing System,

00:11:02.820 --> 00:11:05.610
which is CUPS,
which basically does all the real

00:11:05.610 --> 00:11:07.940
work for the printing system.

00:11:08.160 --> 00:11:11.780
So right now,
we're gonna dive a little more

00:11:11.780 --> 00:11:14.270
into the Cocoa Printing Classes.

00:11:15.910 --> 00:11:21.080
There are basically only five
classes in all of the Cocoa stack

00:11:21.200 --> 00:11:24.640
that deals with printing,
and they're basically very easy.

00:11:24.990 --> 00:11:29.680
First, we have NS Printer,
which basically encapsulates

00:11:29.880 --> 00:11:34.460
Information about the printer,
like what options it has, is it duplex,

00:11:34.480 --> 00:11:41.780
what options are installed,
what list of papers does it support?

00:11:41.780 --> 00:11:46.240
It's just basically your access
to information about the printer.

00:11:46.770 --> 00:11:49.960
Next we have the NS Print Info,
which basically contains

00:11:50.340 --> 00:11:54.310
information about a print job,
like how many copies you have,

00:11:54.510 --> 00:11:57.270
whether you want NUP,
and then we get into some of

00:11:57.270 --> 00:12:00.980
the page setup information,
what page size was selected,

00:12:01.120 --> 00:12:04.300
and the scaling that the
user may have chosen.

00:12:06.230 --> 00:12:09.640
Then we have the NSPrintPanel
and NSPageLayout,

00:12:09.660 --> 00:12:12.680
which is basically it's the print
dialog or the page setup dialog.

00:12:12.680 --> 00:12:15.080
It's how they get onto the screen.

00:12:15.080 --> 00:12:17.970
And finally,
we have the NSPrintOperation,

00:12:18.150 --> 00:12:22.810
which basically grabs all of those
together and puts them in one object

00:12:22.810 --> 00:12:27.690
that you can get access to and get
the information out that you need.

00:12:31.060 --> 00:12:34.870
These classes basically provide all
the information that you need as

00:12:34.870 --> 00:12:37.820
an application developer to print.

00:12:37.840 --> 00:12:40.180
They're very simple,
they're really not that complex,

00:12:40.230 --> 00:12:43.180
and they're very easy to use,
as I will show you.

00:12:43.680 --> 00:12:46.570
As I said before, these classes are built
upon core printing,

00:12:46.670 --> 00:12:49.590
so you as the application developer
should never really need to

00:12:49.590 --> 00:12:52.360
go down to the core printing
API except for certain cases,

00:12:52.640 --> 00:12:53.900
which I'll explain later.

00:12:56.620 --> 00:12:59.410
And if you base your application
on the NS document model,

00:12:59.480 --> 00:13:01.310
a lot of this is done for free.

00:13:01.390 --> 00:13:09.280
The Cocoa printing system
handles adding the print dialog,

00:13:09.280 --> 00:13:10.280
running the print dialog.

00:13:10.280 --> 00:13:13.710
There's just a very few operations
that you would need to override

00:13:13.970 --> 00:13:16.330
to get basic printing to work.

00:13:17.540 --> 00:13:21.420
So let's talk about what's the minimal
set that an outpatient would need to

00:13:21.420 --> 00:13:25.780
use to get the user to be able to print.

00:13:26.150 --> 00:13:27.700
There's basically three easy steps.

00:13:27.700 --> 00:13:31.800
There's only three steps that you
need to get your application to print.

00:13:31.860 --> 00:13:34.540
First of all,
you'd create an NSPrint operation,

00:13:34.570 --> 00:13:37.040
then you'd run the operation,
which basically put the print

00:13:37.040 --> 00:13:40.070
dialog up on the screen,
and then you would draw the

00:13:40.070 --> 00:13:42.100
content and your views draw erect.

00:13:42.480 --> 00:13:47.790
So here's some basic sample code.

00:13:48.930 --> 00:13:54.690
So in your Views Draw Rect,
what's passed in is the rect of

00:13:54.790 --> 00:13:56.790
the page that you're printing.

00:13:57.260 --> 00:14:00.250
And you would use the
Core Graphics APIs to draw the

00:14:00.250 --> 00:14:04.340
content for your application,
whether it be lines, text,

00:14:04.340 --> 00:14:06.370
whatever you need to draw.

00:14:07.570 --> 00:14:10.580
So, and one other thing is this
is the same draw rack that is

00:14:10.580 --> 00:14:12.320
used to draw to the screen.

00:14:12.390 --> 00:14:15.900
So there is no difference between drawing
on paper and drawing to the screen.

00:14:15.900 --> 00:14:19.650
The same methods are called.

00:14:21.140 --> 00:14:25.200
Okay, now let's say your user selects
the print command from the menu.

00:14:25.450 --> 00:14:26.780
This is what you would need to do.

00:14:26.940 --> 00:14:29.080
First of all,
you'd create a print operation.

00:14:29.080 --> 00:14:33.620
And one of the, yeah,
it just basically has two parameters.

00:14:33.650 --> 00:14:36.750
One of them is the view,
is my print view, basically is the view

00:14:36.750 --> 00:14:38.380
that you want to print.

00:14:38.430 --> 00:14:40.180
And the second parameter
is the print info.

00:14:40.250 --> 00:14:43.700
Basically,
it's the encapsulation of the information

00:14:43.700 --> 00:14:47.760
that we need to actually print the job,
like I said, copies, pages,

00:14:47.760 --> 00:14:51.690
and all the other stuff
that the user may select.

00:14:52.520 --> 00:14:55.400
And finally, you run the operation.

00:14:55.400 --> 00:14:57.400
There are two ways to run the operation.

00:14:57.450 --> 00:15:01.740
One of them is as a sheet
on your document window,

00:15:01.740 --> 00:15:05.720
which is the preferred way of
presenting the print dialog.

00:15:05.750 --> 00:15:10.340
And the other one is just run operation,
which basically runs it as a

00:15:10.340 --> 00:15:12.960
modal dialog for your application.

00:15:13.080 --> 00:15:14.900
So here we're doing it as a sheet.

00:15:15.020 --> 00:15:19.000
So we're calling the print operations
runOperationModalForWindow.

00:15:19.060 --> 00:15:21.580
We give it our document window.

00:15:21.990 --> 00:15:25.320
We tell it which delegate to use,
which is ourself,

00:15:25.320 --> 00:15:30.540
and then we pass in the did run selector,
which basically is this method will

00:15:30.540 --> 00:15:33.340
be called when the dialog goes away.

00:15:33.340 --> 00:15:34.660
So you will know...

00:15:36.690 --> 00:15:39.940
You will know when the dial
goes away and if you need to do

00:15:39.940 --> 00:15:42.330
any cleanup after that point.

00:15:43.880 --> 00:15:46.890
And then when the dialogue goes away,
the printing system,

00:15:46.890 --> 00:15:50.340
the Cocoa Printing classes will
then call your view sequentially,

00:15:50.340 --> 00:15:51.340
page by page.

00:15:51.340 --> 00:15:53.480
We'll do a draw rock for page one.

00:15:53.520 --> 00:15:55.560
You will go ahead and draw
your page one information.

00:15:55.760 --> 00:15:58.940
We'll call draw rock again for page
two with a different rectangle,

00:15:58.940 --> 00:16:01.210
basically going down,
stepping down your view

00:16:01.330 --> 00:16:02.440
on a per-page basis.

00:16:02.560 --> 00:16:04.400
So it's very simple.

00:16:05.050 --> 00:16:11.970
You draw on your draw rect,
you create a print operation,

00:16:11.970 --> 00:16:11.970
then you run the print operation.

00:16:14.780 --> 00:16:16.280
So now that we've talked
about how you get,

00:16:16.320 --> 00:16:18.730
how your application draws,
let's talk about more,

00:16:18.730 --> 00:16:21.750
a little bit about how do you
customize your printing experience.

00:16:21.940 --> 00:16:24.320
There's multiple ways you can do that.

00:16:24.370 --> 00:16:27.620
First of all is you
customize the print dialog.

00:16:27.820 --> 00:16:31.670
This basically allows you to
present information to the user

00:16:31.670 --> 00:16:33.520
that you think is important.

00:16:33.870 --> 00:16:38.480
You can customize the printing
experience by doing custom pagination.

00:16:38.480 --> 00:16:41.870
And finally,
you can use the core printing

00:16:41.870 --> 00:16:43.850
APIs to do some other stuff as well.

00:16:46.070 --> 00:16:47.880
So let's talk a little bit
more about customizing print

00:16:47.880 --> 00:16:52.330
dialog and ways that you as an
application developer can do this.

00:16:54.130 --> 00:16:56.810
You can add page setup
functionality to the print dialog.

00:16:57.070 --> 00:17:02.240
If your application creates, draws,
and formats data on the fly,

00:17:02.570 --> 00:17:05.140
there really is no need
for a page setup menu item.

00:17:05.480 --> 00:17:08.890
There is no document that is associated
with that page setup information.

00:17:09.110 --> 00:17:13.770
So you can actually add these
items to the print dialog.

00:17:13.840 --> 00:17:15.820
As you can see right here,

00:17:16.140 --> 00:17:19.820
Use applications can specify which
of the page set of items you want.

00:17:19.820 --> 00:17:22.900
You can have page size, orientation,
and/or scale.

00:17:22.900 --> 00:17:24.370
You can pick any combination of these.

00:17:24.480 --> 00:17:28.490
Say you only want to allow orientation
to change in your application.

00:17:28.620 --> 00:17:31.770
You can just say,
"I want to add the orientation."

00:17:32.650 --> 00:17:35.380
Then if you do this,
if you do add it to the page setup,

00:17:35.380 --> 00:17:38.180
print dialog,
go ahead and remove the page setup

00:17:38.180 --> 00:17:40.140
menu item from your file menu.

00:17:40.180 --> 00:17:41.620
There is no need for it.

00:17:41.830 --> 00:17:44.930
The user,
if you're going to do it at print time,

00:17:45.100 --> 00:17:47.720
the user doesn't want to have
to decide which one do I do?

00:17:47.770 --> 00:17:50.590
Do I want to do in the page setup dialog,
or do I want to do it

00:17:50.590 --> 00:17:51.800
in the print dialog?

00:17:52.100 --> 00:17:54.610
So just remove the page
setup item if you think it's

00:17:54.610 --> 00:17:56.780
appropriate for your application.

00:17:56.780 --> 00:18:00.460
I want to say this is very easy to do.

00:18:01.720 --> 00:18:08.440
Here again, basically you have two steps.

00:18:08.440 --> 00:18:08.440
First of all,

00:18:08.970 --> 00:18:14.140
You create your printer
operation like we did before,

00:18:14.140 --> 00:18:14.140
so there's no change there.

00:18:15.100 --> 00:18:17.120
And then from the print operation,
you go ahead and get

00:18:17.120 --> 00:18:18.100
your print panel out.

00:18:18.100 --> 00:18:21.070
This is the encapsulation.

00:18:21.700 --> 00:18:30.110
of the print dialog for your application.

00:18:30.110 --> 00:18:30.110
So basically, you get the print panel
out of the print operation.

00:18:30.580 --> 00:18:33.370
And lastly,
what you do is you set the options that

00:18:33.370 --> 00:18:35.090
you want for your print panel to show.

00:18:35.200 --> 00:18:37.090
In this case,

00:18:37.610 --> 00:18:40.380
We want to show just the
paper size and orientation.

00:18:40.530 --> 00:18:42.660
So what we do is we
call in the print panel,

00:18:42.660 --> 00:18:44.460
we tell it to set its options to.

00:18:44.460 --> 00:18:48.310
We get the current options,
which basically is the default options.

00:18:48.310 --> 00:18:52.050
It says I want copies, I want page range,
basically I want preview,

00:18:52.050 --> 00:18:53.200
and all that stuff.

00:18:53.200 --> 00:18:56.230
You get the current operations,
then you just orient the

00:18:56.460 --> 00:18:59.190
options that you want,
which I'm orienting in to show

00:18:59.190 --> 00:19:01.460
paper size and show orientation.

00:19:01.880 --> 00:19:03.440
So again, it's very simple.

00:19:03.500 --> 00:19:04.560
There's basically two steps.

00:19:04.580 --> 00:19:07.020
You get the print panel
from the print operation,

00:19:07.020 --> 00:19:10.520
your current print operation,
then you just set the options for the

00:19:10.520 --> 00:19:12.660
print panel to what you want to show.

00:19:15.310 --> 00:19:19.850
Another way your application might want
to customize the print dialog is to

00:19:19.890 --> 00:19:23.700
not show our copies or our page range.

00:19:23.950 --> 00:19:26.130
They're not needed.

00:19:26.240 --> 00:19:29.770
Say your application always
wants to print five copies of

00:19:29.770 --> 00:19:31.960
every document that prints.

00:19:32.270 --> 00:19:35.170
Therefore,
you would just remove the copies

00:19:35.170 --> 00:19:37.150
field from the print dialog.

00:19:37.570 --> 00:19:39.160
- And it wouldn't show.

00:19:39.240 --> 00:19:40.310
Same thing with page range.

00:19:40.430 --> 00:19:43.010
But here it's like,
if your application do a

00:19:43.010 --> 00:19:45.020
better job of page range,
go ahead and do it.

00:19:45.180 --> 00:19:47.580
Don't show ours and show yours.

00:19:47.590 --> 00:19:49.460
In this case,

00:19:50.300 --> 00:19:56.080
They're not showing ours,
and they're doing their own page range,

00:19:56.080 --> 00:19:59.370
which allows them to do the
textual version of page range,

00:19:59.380 --> 00:20:01.900
one to three, five, seven, and nine.

00:20:01.900 --> 00:20:04.310
That's one way of doing it.

00:20:05.710 --> 00:20:07.610
So basically,
if your application can do a

00:20:07.610 --> 00:20:11.560
better job than what we're doing,
go ahead and don't show

00:20:11.620 --> 00:20:13.270
ours and show yours.

00:20:13.380 --> 00:20:14.600
And again, here again, it's very easy.

00:20:14.600 --> 00:20:15.780
It's just like the page setup.

00:20:15.780 --> 00:20:19.330
Adding the page setup items,
you just basically,

00:20:19.330 --> 00:20:23.190
it's an option that you set
in the print panel's options,

00:20:23.270 --> 00:20:27.160
basically taking away the
page range or the copies.

00:20:32.070 --> 00:20:34.030
Print selection.

00:20:34.030 --> 00:20:37.240
This has been Instance Leopard.

00:20:37.470 --> 00:20:41.340
For some applications,
basically we're providing a

00:20:41.360 --> 00:20:45.780
common UI to allow your users
to only print a selection.

00:20:46.080 --> 00:20:48.170
Windows users have had
this for a long time,

00:20:48.490 --> 00:20:53.060
and we're just allowing you
to have the common UI to say,

00:20:53.060 --> 00:20:56.490
only let the user print the selection.

00:20:57.220 --> 00:21:00.240
You have to opt in for this
functionality just like everything else,

00:21:00.330 --> 00:21:02.890
but the problem is,
we as a printing system,

00:21:02.890 --> 00:21:04.840
we don't know what your selection is.

00:21:04.980 --> 00:21:09.230
So what we're going to do is we're going
to set this key in the NS Print Info,

00:21:09.240 --> 00:21:12.530
we're going to set the
KPM Print Selection Only key

00:21:12.640 --> 00:21:14.580
in the NS Print Info.

00:21:14.700 --> 00:21:16.780
Then when it comes time to draw,
it's up to you,

00:21:16.870 --> 00:21:19.710
the application developer,
to read the value out of the

00:21:19.710 --> 00:21:22.750
print settings and decide,
"Do I want to draw my whole

00:21:22.750 --> 00:21:25.570
document or just only selection?"

00:21:26.380 --> 00:21:27.020
So here it is.

00:21:27.020 --> 00:21:27.990
You have the pages.

00:21:28.000 --> 00:21:30.730
We have the all from,
and we added a third radio button,

00:21:30.780 --> 00:21:32.080
which is just selection.

00:21:33.760 --> 00:21:38.050
So I'm going to do a quick demo
of how easy it is to add print

00:21:38.050 --> 00:21:40.860
selection to your application.

00:21:47.850 --> 00:21:51.240
So I have a version of Sketch,
my favorite sample app.

00:21:51.340 --> 00:21:59.260
I've done, it's the basic Sketch that
is on your WWDC DVD,

00:21:59.260 --> 00:22:01.920
with just a few minor changes.

00:22:01.920 --> 00:22:03.580
I will get to them soon.

00:22:03.580 --> 00:22:06.710
Okay, so let's just open,
this is a document-based application.

00:22:06.800 --> 00:22:13.220
So I'm going to open up NSDocument,
their Sketch's document override,

00:22:13.220 --> 00:22:14.180
or subclass.

00:22:14.800 --> 00:22:19.820
I'm going to go down to
Print Operation with Settings.

00:22:21.160 --> 00:22:22.100
Here we are.

00:22:22.100 --> 00:22:26.680
This is where we create
the print operation.

00:22:28.970 --> 00:22:32.260
The only change I've made to this is,
in the rendering view,

00:22:32.260 --> 00:22:34.720
it used to just pass

00:22:35.210 --> 00:22:37.800
An array of your graphics that you have.

00:22:37.930 --> 00:22:40.900
Actually, before I do that,
let's go ahead and run it so you

00:22:40.900 --> 00:22:42.520
can see what Sketch looks like.

00:22:42.600 --> 00:22:47.560
So basically, it has a bunch of,
you can have squares, circles, and lines,

00:22:47.560 --> 00:22:50.620
and text, and whatever you want.

00:22:52.690 --> 00:22:58.180
And so basically, it's just an array of
these graphics objects.

00:22:58.200 --> 00:23:02.780
And you can select, you know,
multiple selections and stuff like that.

00:23:02.870 --> 00:23:06.740
So the basic version of Sketch,

00:23:08.410 --> 00:23:13.600
Basically, it used to pass in the
adjacent array of the graphics.

00:23:13.600 --> 00:23:16.860
For dealing with print selection,
we need more than just

00:23:16.860 --> 00:23:19.710
the array of the graphics,
we need the array controller,

00:23:19.820 --> 00:23:24.870
which basically gives us the graphics
and the current selection in the array.

00:23:25.210 --> 00:23:27.440
So basically,
I'm just passing the array controller

00:23:27.450 --> 00:23:30.920
versus just the basic array.

00:23:31.280 --> 00:23:32.320
So here's the print operation.

00:23:32.320 --> 00:23:33.440
They've created the print operation.

00:23:33.440 --> 00:23:34.340
That hasn't changed.

00:23:34.410 --> 00:23:36.960
And we just come down here a little bit.

00:23:36.990 --> 00:23:40.260
And you might recognize this code,
because I just showed you it

00:23:40.320 --> 00:23:42.420
for adding the page setup stuff.

00:23:42.490 --> 00:23:43.520
So basically, here I am.

00:23:43.520 --> 00:23:47.000
I'm getting the print panel
out of the print operation.

00:23:47.820 --> 00:23:51.140
And secondly, I set the options.

00:23:51.270 --> 00:23:55.080
I have the print panel set the
options to the current options,

00:23:55.180 --> 00:23:59.020
and I'm lowering in the
NS Print Panel Shows Print Selection.

00:23:59.540 --> 00:24:02.340
So that's all there is to
getting the print selection

00:24:02.340 --> 00:24:05.260
to show in the print dialog.

00:24:05.260 --> 00:24:07.750
So now let's go to your
actually drawing code.

00:24:07.850 --> 00:24:13.770
So let's go down to the rendering view,
and we're at the draw rect.

00:24:15.300 --> 00:24:18.540
So in Sketch's DrawRect,
first thing we're going to do

00:24:18.540 --> 00:24:21.290
is we're going to get the print
operation by just asking for the

00:24:21.290 --> 00:24:23.020
current operation that's going on.

00:24:23.100 --> 00:24:28.000
And from the print operation,
we go ahead and get the print

00:24:28.000 --> 00:24:30.750
settings out of the operation.

00:24:30.830 --> 00:24:33.620
We get the print info,
and from there we get the dictionary,

00:24:33.670 --> 00:24:35.130
which is the print settings.

00:24:36.960 --> 00:24:41.050
And from there,
we go ahead and read the value of

00:24:41.060 --> 00:24:42.960
the K print selection only key.

00:24:43.240 --> 00:24:47.460
So basically what I'm doing is
I'm asking the print settings

00:24:47.720 --> 00:24:51.170
to get the object for key,
and I'm passing in which

00:24:51.170 --> 00:24:55.120
key I'm looking for,
which is the K print selection only key.

00:24:55.120 --> 00:24:58.850
And if it's true,
I'm saying the user wants

00:24:58.850 --> 00:25:01.630
to print the selection only.

00:25:01.940 --> 00:25:04.090
Now let's... Okay, so we have that.

00:25:04.270 --> 00:25:05.850
Next is the index set.

00:25:07.790 --> 00:25:12.590
Basically, here's the getting the,
out of our graphics controller,

00:25:12.590 --> 00:25:14.410
getting the graphics.

00:25:15.170 --> 00:25:17.020
And now we're out of the
same graphics controller,

00:25:17.020 --> 00:25:20.590
we're going to get the set
of the selection indexes.

00:25:20.630 --> 00:25:23.490
Basically, it's the objects that have
been selected in the window,

00:25:23.510 --> 00:25:26.170
the user has selected in the window.

00:25:26.820 --> 00:25:30.580
So now we have all that stuff,
it's time to draw.

00:25:30.580 --> 00:25:34.400
So in our draw,
we're actually going to do the draw.

00:25:34.400 --> 00:25:37.890
Let's go ahead and get rid
of both of these comments.

00:25:38.660 --> 00:25:42.100
Okay, we have a graphic right here.

00:25:42.140 --> 00:25:44.940
If we're not printing selection only,
we're always gonna draw it,

00:25:44.970 --> 00:25:45.680
which is fine.

00:25:45.740 --> 00:25:49.760
But if the user has selected
print selection only,

00:25:49.830 --> 00:25:54.690
we say, ask,
is this graphic in the selection index?

00:25:54.790 --> 00:25:57.280
And if it is in the index,

00:25:57.740 --> 00:26:00.260
Then we will go ahead and draw that.

00:26:00.260 --> 00:26:02.140
If it's not in the index, we won't draw.

00:26:02.150 --> 00:26:04.800
Let's just go ahead and
run and see how this works.

00:26:04.840 --> 00:26:10.970
Add some objects again, here we go.

00:26:14.040 --> 00:26:15.040
And let's add some lines.

00:26:15.040 --> 00:26:16.960
Okay,
for you guys to see a little bit better,

00:26:16.960 --> 00:26:19.430
let's go ahead and...

00:26:20.930 --> 00:26:22.520
Color some of these.

00:26:22.570 --> 00:26:27.320
Green, let's get a red, and a blue.

00:26:28.120 --> 00:26:30.500
Let's get a pink.

00:26:30.500 --> 00:26:33.790
Thinking of my nine-year-old daughter,
she loves pink.

00:26:33.810 --> 00:26:35.470
Okay, so let's go ahead and print this.

00:26:35.480 --> 00:26:39.870
Actually, let's make sure we have some,
let's say I have a couple items selected.

00:26:41.530 --> 00:26:42.400
Let's go ahead and print.

00:26:42.560 --> 00:26:45.660
As you can see,
we now have the print selection

00:26:46.610 --> 00:26:49.390
item available to the user.

00:26:50.400 --> 00:26:53.680
And as you, you know,
slick between printing all pages

00:26:53.680 --> 00:26:57.400
or just printing selection,
the...

00:26:58.080 --> 00:27:03.920
Our draw record is being called,
and we are determining

00:27:03.920 --> 00:27:05.160
whether we should draw,
go through and determining

00:27:05.160 --> 00:27:05.160
whether we should draw these.

00:27:05.750 --> 00:27:07.870
Okay, so that's basically how
you add print selection.

00:27:07.880 --> 00:27:08.560
It's very easy.

00:27:08.560 --> 00:27:13.370
As you can see,
we just added the option to say we want

00:27:13.380 --> 00:27:21.180
to show print selection to the user,
and then in a draw rect,

00:27:21.180 --> 00:27:21.180
we determine whether we need
to draw the selection or not,

00:27:21.180 --> 00:27:21.180
and then we...

00:27:21.780 --> 00:27:26.360
When it's time to draw that object,
we check the value and we draw it or not.

00:27:26.530 --> 00:27:30.560
One last thing I want to do just to show
you how easy it is in Cocoa to do some of

00:27:30.680 --> 00:27:32.820
the other stuff I talked about earlier.

00:27:33.080 --> 00:27:37.650
We are in the Print Panel,
we are set options.

00:27:37.660 --> 00:27:39.660
Let's go here,
let's go and see what we have.

00:27:39.660 --> 00:27:42.820
Let's go ahead and add an orientation.

00:27:43.050 --> 00:27:45.310
Let's just orient.

00:27:46.310 --> 00:27:50.910
orientation here,
and let's try just running this one.

00:27:50.930 --> 00:27:52.980
We're going to stop that.

00:27:54.210 --> 00:27:57.760
And here again, brings the print dialog.

00:27:57.940 --> 00:28:03.670
As you can see, we added orientation,
and with just that one little oaring in,

00:28:04.040 --> 00:28:04.910
Everything just works.

00:28:05.050 --> 00:28:08.360
The printing system takes
care of the Cocoa classes,

00:28:08.450 --> 00:28:11.510
and the printing system takes
care of that the orientation

00:28:11.510 --> 00:28:14.120
is changing on the printer.

00:28:14.120 --> 00:28:17.520
You, as the application developer,
didn't have to do anything.

00:28:19.080 --> 00:28:20.700
So that's basically all for the demo.

00:28:20.700 --> 00:28:23.100
It's just to show you
how easy it is to add,

00:28:23.100 --> 00:28:25.540
to customize the print dialog.

00:28:25.540 --> 00:28:29.490
Let's go back to the slides.

00:28:32.390 --> 00:28:34.460
So I said,
there's only basically two actions

00:28:34.460 --> 00:28:37.390
that you need to do to add print
selection to a print dialog.

00:28:37.620 --> 00:28:41.680
First of all was ORing in the
flag to the print options,

00:28:41.850 --> 00:28:44.910
and then in your draw rect,
only checking the value of

00:28:44.910 --> 00:28:49.960
what was set in the print info,
and then choosing whether you

00:28:49.960 --> 00:28:53.290
need to draw the selection or not.

00:28:55.790 --> 00:28:56.850
Adding application panes.

00:28:56.870 --> 00:29:02.290
That's another way that your application
can customize a user's experience.

00:29:02.540 --> 00:29:07.500
The application panes are always the
first panes that are shown in the dialog.

00:29:07.660 --> 00:29:11.580
As you can see here,
preview is the first item

00:29:11.580 --> 00:29:11.580
in the pop-up menu list.

00:29:12.600 --> 00:29:14.600
And it brings the important
print options to the front.

00:29:14.710 --> 00:29:17.520
So basically,
if your application has items

00:29:17.520 --> 00:29:23.140
or has options that the user
needs to select at print time,

00:29:23.320 --> 00:29:27.210
this is how you would add them would
be through an application pane.

00:29:29.150 --> 00:29:32.730
This is a little more difficult than
oaring in a flag in the print options,

00:29:32.730 --> 00:29:38.860
but it's really not that difficult to add
an accessory view to the print dialog.

00:29:39.290 --> 00:29:41.330
Basically, here's the basic steps.

00:29:41.370 --> 00:29:46.110
You subclass the NSViewController,
that's what the application

00:29:46.110 --> 00:29:48.700
panes are based off of,
they are a view controller,

00:29:48.700 --> 00:29:51.780
and you adopt the
NSPrintPanelAccessorizing protocol,

00:29:51.780 --> 00:29:57.060
which basically adds some
methods that you can implement

00:29:57.510 --> 00:30:01.640
To make the preview work and
do other things to make your

00:30:01.930 --> 00:30:03.680
accessory view work correctly.

00:30:03.680 --> 00:30:08.080
Then you create a nib for your view,
basically an interface builder,

00:30:08.200 --> 00:30:10.510
create the options that you need.

00:30:12.320 --> 00:30:16.330
Next, you would implement the key pass
values for affecting preview.

00:30:16.340 --> 00:30:18.800
What a, that's kind of a tongue twister.

00:30:18.840 --> 00:30:21.910
Basically,
this allows the printing system,

00:30:21.920 --> 00:30:24.700
the Cocoa printing system,
to watch for these values.

00:30:24.700 --> 00:30:27.990
You return a set of these.

00:30:28.130 --> 00:30:30.900
And so basically, when these values,
they will sit and

00:30:31.010 --> 00:30:33.540
observe these key paths.

00:30:33.880 --> 00:30:37.560
And as these key paths change,
the printing system will know that

00:30:37.570 --> 00:30:38.760
we need to update the preview.

00:30:38.760 --> 00:30:44.420
So it basically allows for the
live updating of the preview

00:30:44.770 --> 00:30:47.490
as the user changes value.

00:30:48.600 --> 00:30:50.460
The next two of these are optional.

00:30:50.550 --> 00:30:52.700
It's basically implement
the localized summary items.

00:30:52.700 --> 00:30:55.320
Basically,
this allows your application pane

00:30:55.320 --> 00:30:58.710
to have an entry in the summary
panel of the print dialog to allow

00:30:58.710 --> 00:31:03.750
the user to see in one quick glance
all the print settings that the

00:31:03.750 --> 00:31:06.480
user is going to be printing with.

00:31:06.540 --> 00:31:07.820
The next is title.

00:31:07.820 --> 00:31:11.360
This is the title of your
pane in the panel pop-up menu.

00:31:11.360 --> 00:31:15.140
We give you the default title
of your application name.

00:31:15.140 --> 00:31:18.020
If you want something else,
just go ahead and override this method.

00:31:18.780 --> 00:31:19.410
to

00:31:21.900 --> 00:31:23.900
To add your own title.

00:31:23.940 --> 00:31:26.980
Then you add the accessory
view to the print panel.

00:31:27.350 --> 00:31:29.680
And that's basically,
then you run the dialog,

00:31:29.680 --> 00:31:31.060
and basically that's it.

00:31:31.120 --> 00:31:35.750
The old-style version of adding
accessory views is deprecated.

00:31:35.830 --> 00:31:39.560
So we're basically asking developers,
application developers,

00:31:39.690 --> 00:31:46.050
to use this new view controller method
to add application paints to the dialog.

00:31:48.340 --> 00:31:52.510
So here's, I'm going to go through some
code samples of basically showing

00:31:52.510 --> 00:31:56.060
you what is needed to add an
accessory view to the print dialog.

00:31:57.930 --> 00:32:00.360
First of all, you declare your class.

00:32:00.370 --> 00:32:03.760
We are declaring a
PrintPanelViewController and a

00:32:03.900 --> 00:32:06.280
subclassed OffaViewController.

00:32:06.880 --> 00:32:09.530
Then we adopting,
and then we have the little brackets,

00:32:09.530 --> 00:32:13.200
which means we're adopting the
NS Print Panel Accessorizing Protocol.

00:32:13.200 --> 00:32:16.840
And there's only one public method,
which is basically creating

00:32:16.840 --> 00:32:19.060
our shared controller,
which we do right here.

00:32:21.950 --> 00:32:24.640
Basically, this method just basically
creates a shared controller.

00:32:24.640 --> 00:32:27.980
If we have a static version
of our shared controller,

00:32:28.110 --> 00:32:29.870
if it's nil, we go and create it.

00:32:30.010 --> 00:32:33.080
We do an alloc of it,
and we init it with our nib,

00:32:33.080 --> 00:32:35.740
which is basically the
nib that we created,

00:32:35.760 --> 00:32:40.740
the NSD print accessory view,
and we give it no bundle,

00:32:40.740 --> 00:32:44.550
and we return it,
return our shared controller.

00:32:45.020 --> 00:32:48.400
The next thing we do would be
go ahead and create your nib.

00:32:48.400 --> 00:32:52.860
Sample I've here is basically
it has one checkbox.

00:32:52.860 --> 00:32:56.100
It's basically do we want to
print a frame around the page

00:32:56.210 --> 00:32:58.720
for every page that prints.

00:32:58.880 --> 00:33:05.190
And in this example,
I use bindings in Interface Builder.

00:33:05.830 --> 00:33:14.050
I bound the checkbox to modifying the
file's owner print page frame key path.

00:33:19.450 --> 00:33:23.480
Okay, now dealing with the KVO stuff,
dealing with how do we get the

00:33:23.540 --> 00:33:27.420
preview to know that you've
changed stuff and how to redraw it,

00:33:27.420 --> 00:33:28.580
it needs to be redrawn.

00:33:28.740 --> 00:33:34.120
So basically we have the key value,
key paths for values affecting preview.

00:33:34.170 --> 00:33:37.430
Basically we're asking you
to return a set of all the

00:33:37.430 --> 00:33:41.250
key paths that you will be,
the user has the option of changing

00:33:41.770 --> 00:33:48.130
that needs to be reflected in
the preview of the print dialog.

00:33:49.760 --> 00:33:52.470
Then we have the KVO methods,
which is basically dealing

00:33:52.470 --> 00:33:55.000
with those key paths,
the set and get methods.

00:33:55.320 --> 00:33:58.140
Basically, the get method,
the print page frame,

00:33:58.270 --> 00:33:59.800
and the set page frame.

00:33:59.910 --> 00:34:03.700
For this example,
we're just reading it out of

00:34:03.700 --> 00:34:07.460
the NS user defaults and the
print page frame preference key.

00:34:07.460 --> 00:34:12.860
We're either getting it or we're
setting it in NS user defaults.

00:34:14.870 --> 00:34:18.380
Then we have the summary and
the title that I talked about.

00:34:18.430 --> 00:34:21.840
For localized summary items,
basically we're asking you to

00:34:21.840 --> 00:34:23.750
return a localized summary item

00:34:23.970 --> 00:34:27.900
The Mac OS X printing system is a very
complex array of summary dictionaries.

00:34:27.900 --> 00:34:29.830
It's kind of long.

00:34:29.910 --> 00:34:33.050
Basically,
we want you to return us an array,

00:34:33.050 --> 00:34:37.430
and the array should contain
dictionaries of lines that you

00:34:37.430 --> 00:34:39.900
want to show on the summary dialog.

00:34:39.940 --> 00:34:43.900
In this case,
here we have the print page frame,

00:34:43.900 --> 00:34:47.890
which is basically the name of the item.

00:34:48.910 --> 00:34:51.890
Then we have the
description of that item,

00:34:51.960 --> 00:34:55.240
which is the NS Print Panel Accessory
Summary Item Description Key,

00:34:55.430 --> 00:34:57.700
which is basically whether
we want to print the,

00:34:57.810 --> 00:35:00.160
if we check to see are we
printing the page frame or not,

00:35:00.280 --> 00:35:04.080
and we just set it to be on or off,
and we return the array.

00:35:04.080 --> 00:35:10.190
So it's really not that hard to add
summary items to the summary pane.

00:35:12.360 --> 00:35:15.840
Then we have the title,
for the title of your pane.

00:35:15.850 --> 00:35:19.600
Basically, we turn in a string,
and this one is basically

00:35:19.600 --> 00:35:21.180
my sample application.

00:35:21.540 --> 00:35:25.480
You only need to do this if you want
something different than your application

00:35:25.480 --> 00:35:29.190
name as the name of your panel.

00:35:33.010 --> 00:35:33.950
Now we're almost done with this.

00:35:34.100 --> 00:35:40.270
Basically, kind of like setting the other
options for the print dialog,

00:35:40.270 --> 00:35:45.500
you take the print panel and you add your
accessory controller to the print panel.

00:35:46.870 --> 00:35:49.390
And that's basically it.

00:35:49.540 --> 00:35:52.740
Then it will be added when
the dialogue is brought up,

00:35:52.740 --> 00:35:58.040
the operation is run,
your panel will be the first panel shown.

00:35:58.090 --> 00:36:00.940
And lastly, in your view method,

00:36:01.890 --> 00:36:05.240
You basically read the value
out of the preferences file.

00:36:05.260 --> 00:36:08.430
If it's set,
say they want to print the page frame,

00:36:08.560 --> 00:36:12.550
we just set the color and frame
the rect of our views bounds.

00:36:15.200 --> 00:36:16.950
So basically here's a little example.

00:36:16.970 --> 00:36:19.940
It's Sketch again.

00:36:20.060 --> 00:36:22.700
We have the print page frame.

00:36:22.720 --> 00:36:23.950
User clicks it.

00:36:24.270 --> 00:36:28.340
The frame is put around.

00:36:28.770 --> 00:36:30.700
Page in the preview.

00:36:30.700 --> 00:36:33.700
So everything,
because we did the KVO stuff

00:36:33.700 --> 00:36:37.780
that I talked about,
we know that the preview needs to be

00:36:37.780 --> 00:36:41.690
drawn when the user clicks the button.

00:36:43.460 --> 00:36:49.790
So if you are going to be adding
a panel to the print dialog,

00:36:49.790 --> 00:36:49.790
here's a few guidelines that we have.

00:36:51.690 --> 00:36:55.500
We ask that you shouldn't be
providing formatting options.

00:36:55.500 --> 00:36:59.730
It's just print time options
that the user needs to change,

00:36:59.740 --> 00:37:04.710
that you feel the user needs to set,
or options the user needs to have to

00:37:04.710 --> 00:37:07.600
affect what gets printed on the page.

00:37:30.950 --> 00:37:30.950
And not every application needs one.

00:37:30.950 --> 00:37:30.950
There are plenty of other panels
that will show up in the dialog,

00:37:30.950 --> 00:37:30.950
whether it be our panels like
layout and all the print panels

00:37:30.950 --> 00:37:30.950
for setting quality and stuff.

00:37:30.950 --> 00:37:30.950
So just don't add a panel just
for the sake of adding a panel.

00:37:30.950 --> 00:37:30.950
If it's not needed for your application,
don't add one.

00:37:31.870 --> 00:37:35.420
Suggested width,
we have 420 pixels as the maximum.

00:37:35.420 --> 00:37:40.370
If you go beyond that,
we will need to grow the print dialog,

00:37:40.660 --> 00:37:44.900
resize it,
and move it when your panel is selected.

00:37:44.900 --> 00:37:49.500
So basically, we're asking that you
keep it to 420 maximum.

00:37:49.500 --> 00:37:53.240
Another thing we're asking is,
you saw my nib that I created,

00:37:53.240 --> 00:37:57.420
my view was the smallest view
I have around my checkbox.

00:37:58.440 --> 00:38:02.030
We, the printing system,
will take care of centering that

00:38:02.030 --> 00:38:05.980
and centering it in the space
available for the print panels.

00:38:05.980 --> 00:38:09.780
You don't need to worry about
going to the full width of the 420.

00:38:09.780 --> 00:38:12.810
So we're asking you to make
it as small as possible,

00:38:12.810 --> 00:38:17.240
and we will take care of the centering
of your panel in the print dialog.

00:38:18.730 --> 00:38:23.270
Suggested height, 380 scanlines.

00:38:23.750 --> 00:38:26.330
Think about the MacBooks
and MacBook Airs.

00:38:26.330 --> 00:38:29.950
They have a maximum
height of 800 scanlines.

00:38:29.960 --> 00:38:33.770
So if you go beyond a certain amount,
the print button falls off the

00:38:34.060 --> 00:38:37.690
bottom of the print dialog,
and the users are like, oh no,

00:38:37.690 --> 00:38:38.750
what do I do now?

00:38:38.750 --> 00:38:39.780
I can't print.

00:38:39.780 --> 00:38:42.100
So we're asking you to...

00:38:43.330 --> 00:38:47.870
The maximum is 380 scanlines to allow
all users of all of our different

00:38:47.870 --> 00:38:52.480
computers to be able to see the print
button at the bottom of the dialog.

00:38:56.590 --> 00:38:58.240
Application view versus inline preview.

00:38:58.240 --> 00:39:04.950
As you know, in Leopard,
we added the inline preview,

00:39:04.950 --> 00:39:09.290
but that doesn't mean your application
should not have the viewing of the

00:39:10.100 --> 00:39:12.210
of the printing in your application.

00:39:12.370 --> 00:39:15.390
WizardWig is still very
important to our users.

00:39:15.390 --> 00:39:20.250
What the user sees on the screen is what
they want to see printed on the paper.

00:39:20.250 --> 00:39:24.710
So don't rely on...

00:39:24.990 --> 00:39:28.350
This little preview to show the
user what they're going to print.

00:39:28.440 --> 00:39:30.050
They may want to see what
it's going to look like before

00:39:30.160 --> 00:39:31.180
they hit the print dialog.

00:39:31.180 --> 00:39:36.940
If it's a format that the user
likes to view it in on the screen,

00:39:37.000 --> 00:39:41.160
why not have it for
the print view as well?

00:39:43.090 --> 00:39:46.360
There again,
WYSIWYG is very important to our users.

00:39:46.380 --> 00:39:52.260
And here's a great example of what
we're talking about with the print view.

00:39:52.260 --> 00:39:54.670
In iPhoto, we have the print card
calendar and book views.

00:39:54.700 --> 00:39:59.450
As you can see,
this is what's going to be shown.

00:39:59.460 --> 00:40:01.200
This is what is going to be...

00:40:02.570 --> 00:40:03.800
Printed on the paper.

00:40:04.060 --> 00:40:10.560
We have the user can change layout,
they can change borders,

00:40:10.560 --> 00:40:18.900
they can change a lot of the options
to change what happens on the paper,

00:40:18.900 --> 00:40:22.460
but they can all do it right here
and the user sees exactly what

00:40:22.460 --> 00:40:22.460
is going to be printed on the

00:40:22.800 --> 00:40:44.600
[Transcript missing]

00:40:46.310 --> 00:40:48.940
So in summary,
customizing the print dialog, it's easy.

00:40:49.320 --> 00:40:51.540
Basically, that's what I wanna say.

00:40:51.540 --> 00:40:54.520
It's very easy for you
to get what you want.

00:40:54.700 --> 00:40:58.440
If I could summarize in one item,
it'd be my last item,

00:40:58.480 --> 00:41:01.450
you get to specify what is shown
in the print dialog that makes

00:41:01.460 --> 00:41:02.880
sense for your application.

00:41:02.900 --> 00:41:05.390
If you wanna do page range,

00:41:06.390 --> 00:41:07.460
Hide ours and do yours.

00:41:07.460 --> 00:41:10.120
If you want to add options
to the print dialog,

00:41:10.260 --> 00:41:12.240
add it and add your own print panel.

00:41:12.450 --> 00:41:15.700
It's very easy for you to get the
options that you want and to create

00:41:15.700 --> 00:41:18.910
the printing user experience that
makes sense for your application.

00:41:22.800 --> 00:41:24.610
Now let's talk a little bit about
the print driver developers.

00:41:24.610 --> 00:41:27.560
Print driver developers,
they don't have access to the

00:41:27.560 --> 00:41:29.940
NSView controllers or anything like that.

00:41:30.020 --> 00:41:33.280
But we do have the
Cocoa-based print dialogues.

00:41:33.280 --> 00:41:39.010
So basically you have the whole
bindings in the interface builder to

00:41:39.010 --> 00:41:42.800
create your nibs and stuff like that.

00:41:42.930 --> 00:41:47.170
So it is a much richer experience
for the developer to use their

00:41:47.280 --> 00:41:49.680
Cocoa print dialogue plugins.

00:41:51.000 --> 00:41:53.580
They work all the way back
to Mac OS Tiger and later.

00:41:53.580 --> 00:41:59.660
And basically we're saying don't create
the old Carbon CF plugin-based dialogues.

00:41:59.680 --> 00:42:03.330
They were deprecated in Tiger,
and as Howard said,

00:42:03.330 --> 00:42:08.150
they only run in 32-bit mode,
in 32-bit applications.

00:42:11.630 --> 00:42:14.690
If you are a driver developer,
you have to worry about the

00:42:14.690 --> 00:42:16.040
architectures that you are building.

00:42:16.040 --> 00:42:18.950
On OS X,

00:42:19.250 --> 00:42:22.420
The application is in
charge of the architecture,

00:42:22.560 --> 00:42:27.270
whether it be PowerPC running in Rosetta,
Intel 32, or Intel 34.

00:42:27.660 --> 00:42:30.270
So we're asking our drivers and
developers to make sure you build

00:42:30.280 --> 00:42:31.680
your plug-ins three-way FAT.

00:42:31.750 --> 00:42:35.940
We have PowerPC for the
PowerPC apps running in Rosetta.

00:42:35.980 --> 00:42:41.110
We have Intel 32 and Intel 64.

00:42:41.340 --> 00:42:43.880
So basically,
the processors have to match

00:42:43.890 --> 00:42:49.070
the application and the plug-in,
and the 32 versus 64-bit has to match.

00:42:49.070 --> 00:42:55.300
As well as, we have to make sure you have
garbage collection enabled in your,

00:42:55.500 --> 00:42:57.630
or aware in your plug-in.

00:42:57.630 --> 00:43:01.030
So basically, add your finalized
methods to your plug-in,

00:43:01.060 --> 00:43:05.520
and the system will basically turn on or
off garbage collection for your plug-in

00:43:05.520 --> 00:43:09.910
based on if the application you're
running in is garbage collected or not.

00:43:09.910 --> 00:43:11.080
Howard Miller, Mike Sweet

00:43:12.430 --> 00:43:22.870
So basically, if you don't do this,
you're going to get this,

00:43:23.010 --> 00:43:25.610
and a lot of your print-- your
users are going to get this,

00:43:25.610 --> 00:43:25.610
and a lot of the print
dialogues they see,

00:43:25.610 --> 00:43:25.610
basically,

00:43:25.950 --> 00:43:27.130
The architectures don't match.

00:43:27.260 --> 00:43:28.980
We couldn't run your plugin.

00:43:28.980 --> 00:43:33.740
We couldn't run your print panel,
so those options are not

00:43:33.750 --> 00:43:36.770
available to the users to select.

00:43:38.010 --> 00:43:39.140
Custom pagination.

00:43:39.180 --> 00:43:42.180
Let's move away from the print
dialog and start dealing with

00:43:42.180 --> 00:43:43.870
your actually drawing code.

00:43:44.180 --> 00:43:48.640
Custom pagination allows you to
basically stop that line being split

00:43:48.720 --> 00:43:50.470
between page three and page four.

00:43:50.640 --> 00:43:52.260
You just cut off right in the middle.

00:43:52.460 --> 00:43:56.190
So basically,
it's very easy to do in Cocoa.

00:43:56.590 --> 00:43:59.910
There's basically two
methods that you worry about.

00:44:00.150 --> 00:44:04.180
We have the Nose Page Range,
which basically tells

00:44:04.390 --> 00:44:08.670
the printing system,
hey, I know my page range.

00:44:08.670 --> 00:44:13.880
And yes, I will be able to tell
you what you need to know.

00:44:13.880 --> 00:44:15.350
So basically, here we go.

00:44:15.350 --> 00:44:16.620
We have Nose Page Range.

00:44:16.620 --> 00:44:19.150
It passes back a range,
and whether you basically

00:44:19.540 --> 00:44:20.980
know your page range or not.

00:44:21.260 --> 00:44:23.780
So in this case,
we get the bounds of our view,

00:44:23.780 --> 00:44:26.760
and then we go ahead and
get the print page height,

00:44:26.760 --> 00:44:31.990
which is basically how high
is the single page height.

00:44:32.690 --> 00:44:34.820
for this print job.

00:44:35.090 --> 00:44:37.550
And then we go and set our range.

00:44:37.650 --> 00:44:42.480
Basically, we have starting at page one,
and we have, say, five pages.

00:44:42.480 --> 00:44:44.930
Basically,
we get the height of our bounds and

00:44:45.000 --> 00:44:46.920
divide it by the print page height.

00:44:47.340 --> 00:44:51.150
That tells us how many pages we
need plus one because of the zero.

00:44:52.560 --> 00:44:56.110
And the second method you need to
do is basically a rect for page.

00:44:56.200 --> 00:44:59.080
You told me how many pages you have.

00:44:59.140 --> 00:45:01.260
You told the printing system
how many pages you have.

00:45:01.280 --> 00:45:04.420
Now we're going to go through,
as each page is about to be printed, hey,

00:45:04.420 --> 00:45:08.790
we're going to ask you what
rect you want for this page.

00:45:08.910 --> 00:45:10.420
So we say we pass in page one.

00:45:10.420 --> 00:45:14.780
You tell us what rect of your
view you want us to call your

00:45:15.170 --> 00:45:17.490
draw rect with for page one.

00:45:17.500 --> 00:45:21.180
We continue doing that for page two,
three, four.

00:45:21.340 --> 00:45:24.900
So when we get to page four, we tell you,
okay, what's the rect for page four?

00:45:24.900 --> 00:45:27.400
You do your calculations
that you need to do,

00:45:27.400 --> 00:45:30.030
and you tell us the rect that...

00:45:31.170 --> 00:45:34.260
He tells the rect for that page.

00:45:34.710 --> 00:45:37.470
This example is a very simple example.

00:45:37.480 --> 00:45:40.040
We get our bounds,
we get our page height,

00:45:40.300 --> 00:45:41.150
then we make our rect.

00:45:41.400 --> 00:45:46.900
Basically, the left and the right are
the size of our bounds.

00:45:47.600 --> 00:45:53.130
The only thing that
really matters is the...

00:45:54.270 --> 00:45:56.090
is the origin.

00:45:56.220 --> 00:46:00.510
Basically, we take our bounds minus the
page number that's being passed

00:46:00.510 --> 00:46:02.130
in times the page height.

00:46:02.260 --> 00:46:06.170
So it's very easy to add custom
pagination to your application.

00:46:06.170 --> 00:46:16.660
So basically, users don't get stuff,
you know, a little end on page three and

00:46:16.660 --> 00:46:16.660
the other part of it on page four.

00:46:18.500 --> 00:46:19.680
Producing high-quality output.

00:46:19.800 --> 00:46:21.980
So we're done with a lot
of the print dialog stuff,

00:46:21.980 --> 00:46:25.480
and we're moving on to
high-quality output.

00:46:25.560 --> 00:46:28.240
So I'm gonna talk about
things as your drawing,

00:46:28.240 --> 00:46:32.440
as your application is drawing,
what you need to consider,

00:46:32.520 --> 00:46:36.510
things you need to keep in
mind as you're printing.

00:46:36.700 --> 00:47:08.600
[Transcript missing]

00:47:08.930 --> 00:47:10.460
And then when dealing
with the print quality,

00:47:10.500 --> 00:47:13.070
basically,
how do you get the smooth color

00:47:13.070 --> 00:47:16.880
gradients to show up on the printed
output that I see on the screen?

00:47:16.880 --> 00:47:22.810
How do I get the best quality I can
get for the images that I print?

00:47:25.230 --> 00:47:27.940
So Mac OS X has built-in
color management.

00:47:27.940 --> 00:47:29.020
It's a great system.

00:47:29.020 --> 00:47:34.310
We do our best to make sure that
the color that the user sees on the

00:47:34.310 --> 00:47:39.750
screen or the original picture or
scanned item or anything like that

00:47:39.750 --> 00:47:44.480
is faithfully reproduced on the other
end when it comes off the printer.

00:47:44.580 --> 00:47:47.040
The problem is we can't do it by ourself.

00:47:47.040 --> 00:47:48.530
We need you.

00:47:48.570 --> 00:47:52.250
We need you to give us
device-independent color.

00:47:52.250 --> 00:47:54.080
How do you do that, you ask?

00:47:54.410 --> 00:47:57.800
Draw and calibrated color spaces.

00:47:58.160 --> 00:48:04.520
That is the easiest way to ensure
the quality of the image color will

00:48:04.520 --> 00:48:08.040
flow through the system correctly.

00:48:08.040 --> 00:48:12.590
So basically, your picture on your...

00:48:12.800 --> 00:48:35.600
[Transcript missing]

00:48:35.890 --> 00:48:36.540
You have the nice yellow.

00:48:36.540 --> 00:48:39.040
When you're drawing
with just device color,

00:48:39.040 --> 00:48:43.150
basically tying it to a specific device,
you get this orangish color.

00:48:47.140 --> 00:48:49.920
So what do you need to do to get this?

00:48:49.970 --> 00:48:55.520
Basically, device color is tied to
a specific output device.

00:48:55.690 --> 00:49:00.500
Say you have an RGB color 50%
red for a specific device.

00:49:01.000 --> 00:49:05.190
That red for that device is
not going to be the same 50%

00:49:05.200 --> 00:49:09.710
red on a different device,
whether it be laser,

00:49:09.710 --> 00:49:12.830
going from a laser to an inkjet.

00:49:12.830 --> 00:49:12.830
So basically,

00:49:13.100 --> 00:49:16.590
We don't want you to be tying
your colors to a specific device.

00:49:16.600 --> 00:49:19.260
Do it in a calibrated color space.

00:49:19.260 --> 00:49:23.910
That allows us to basically
create an intermediary color

00:49:23.910 --> 00:49:26.060
that can be translated.

00:49:26.060 --> 00:49:29.380
You draw to a calibrated color space,
we can then create this

00:49:29.800 --> 00:49:32.850
intermediary color,
and then when it comes time to print,

00:49:32.850 --> 00:49:36.680
we can take that intermediary color,
and with the help of the

00:49:36.680 --> 00:49:41.480
printer using their profile,
we can create the color that matches.

00:49:42.870 --> 00:49:45.400
So basically, we're asking you to draw
with calibrated color.

00:49:45.400 --> 00:49:51.810
For any Windows developers out there,
you're probably drawing in sRGB already.

00:49:51.820 --> 00:49:55.210
That's the default Windows color
space that you draw in.

00:49:55.320 --> 00:49:58.660
You may not even know it,
because Windows doesn't require

00:49:58.720 --> 00:50:00.550
you to declare a color space.

00:50:00.660 --> 00:50:04.150
On Mac OS X, we do require that you
declare a color space,

00:50:04.260 --> 00:50:06.740
and you're already drawing in sRGB.

00:50:06.770 --> 00:50:10.600
We're just asking that
you declare it as sRGB,

00:50:10.600 --> 00:50:12.560
and not generic RGB.

00:50:12.560 --> 00:50:17.240
That way,
you have your drawing code already,

00:50:17.240 --> 00:50:19.640
it's already in sRGB.

00:50:19.640 --> 00:50:23.420
Just declare it as sRGB,
and that will create the

00:50:23.420 --> 00:50:26.590
device-invented color that we need.

00:50:27.670 --> 00:50:30.340
So this is what happens when,
a little full chart of what happens

00:50:30.400 --> 00:50:32.000
with the color management on the system.

00:50:32.000 --> 00:50:36.930
Your app generates color,
your app generates the color for printing

00:50:36.930 --> 00:50:38.960
in one or more calibrated color spaces.

00:50:38.960 --> 00:50:42.010
One or more is basically,
say on a page you have,

00:50:42.010 --> 00:50:45.290
or a document you have,
three different images from

00:50:45.290 --> 00:50:47.190
three different cameras.

00:50:47.840 --> 00:50:50.500
You're going to have,
probably having two or

00:50:50.500 --> 00:50:54.220
three different images,
the images are going to be tagged

00:50:54.620 --> 00:50:59.850
with three different profiles
on how that image was captured.

00:51:02.370 --> 00:51:04.510
Then we, printing system,
will create the spool file.

00:51:04.510 --> 00:51:07.880
If you've drawn in your
calibrated color spaces,

00:51:07.880 --> 00:51:08.930
you're done.

00:51:08.940 --> 00:51:12.800
The application,
the printing system takes

00:51:12.800 --> 00:51:15.730
care of the rest and draws it.

00:51:17.720 --> 00:51:21.450
And then with the help of the drivers,
we get the color sync

00:51:21.530 --> 00:51:25.980
profile from the driver,
from the printer, and we render into the

00:51:26.110 --> 00:51:28.040
actual device color space.

00:51:30.470 --> 00:51:31.290
Drawing with fidelity.

00:51:31.360 --> 00:51:36.880
This is basically resolution
and bit depth of your images.

00:51:36.890 --> 00:51:39.930
We're asking that you don't assume the
destination printer characteristics.

00:51:40.060 --> 00:51:42.820
Don't assume that you're always
going to be printing to that

00:51:42.820 --> 00:51:44.800
black and white laser printer.

00:51:44.800 --> 00:51:49.790
Don't assume that you're going to be
printing to a little label printer.

00:51:50.090 --> 00:51:54.600
The user may be printing it out to a PDF,
and we don't want to lose the

00:51:54.600 --> 00:51:57.170
data that is present in the image.

00:51:57.170 --> 00:51:59.160
Draw up full resolution.

00:51:59.160 --> 00:52:01.700
Don't downsample.

00:52:01.700 --> 00:52:04.080
Don't ruin the data
that is already there.

00:52:04.080 --> 00:52:08.880
The printing path handles the
full 16-bit per color data path.

00:52:08.950 --> 00:52:13.730
So what happens, Safari,
let's say Safari encounters

00:52:14.290 --> 00:52:16.690
one of these deep images,
which are becoming more and

00:52:16.690 --> 00:52:20.850
more prevalent because of the,
you know, aperture and the raw and the,

00:52:20.850 --> 00:52:24.040
you know,
using all the raw formats of pictures,

00:52:24.050 --> 00:52:27.500
we are getting a lot more
of these deep data images.

00:52:29.500 --> 00:52:33.230
And so basically, Safari will encounter
one of these images,

00:52:33.230 --> 00:52:34.840
and it will pass it through
the printing system.

00:52:34.840 --> 00:52:38.670
When it gets out to paper,
you will get that full high-quality

00:52:38.670 --> 00:52:42.710
resolution for that image.

00:52:43.020 --> 00:52:47.480
And also you can see,
on some of the pro-sumer

00:52:47.530 --> 00:52:52.730
printers that are now shipping,
you can see the difference between the

00:52:52.730 --> 00:52:55.380
deep data pixels that are out there.

00:52:55.680 --> 00:52:58.140
So how do you maintain the image quality?

00:52:58.480 --> 00:52:59.670
Basically you use Quartz.

00:52:59.780 --> 00:53:01.660
Quartz preserves all the quality.

00:53:01.740 --> 00:53:05.620
CG image source, image curate,
context image, context draw image.

00:53:05.810 --> 00:53:07.410
They all preserve the quality.

00:53:07.520 --> 00:53:09.800
NS image preserves the quality as well.

00:53:09.890 --> 00:53:13.470
During printing,
they will pass the full resolution image.

00:53:13.810 --> 00:53:16.270
There's one caveat with NS image,
is basically if you're

00:53:16.270 --> 00:53:20.610
going to modify the image,
by basically locking focus on the image,

00:53:20.860 --> 00:53:24.010
at that point,
the image is going to be down-sampled

00:53:24.220 --> 00:53:29.250
to basically the resolution of
the backing store for that window.

00:53:29.280 --> 00:53:32.910
So basically,
if you're not going to modify the image,

00:53:32.910 --> 00:53:33.990
you're fine.

00:53:34.090 --> 00:53:37.520
If you're locking focus on the image,
then you have to beware.

00:53:37.640 --> 00:53:41.550
Then the image processing stuff,
basically core image

00:53:41.860 --> 00:53:43.520
preserves the quality.

00:53:43.520 --> 00:53:46.170
If you're doing your
own image processing,

00:53:46.210 --> 00:53:49.970
preserve the quality of the
images that are going through.

00:53:51.060 --> 00:53:55.120
Okay, so now we've learned basically
all the Cocoa ways of printing,

00:53:55.120 --> 00:53:58.260
you know,
everything you need from the creating,

00:53:58.260 --> 00:54:02.140
customizing the dialogue,
printing out the paper,

00:54:02.140 --> 00:54:03.800
maintaining image quality.

00:54:03.800 --> 00:54:06.420
For 95% of you, you're done.

00:54:06.420 --> 00:54:07.470
That's all you need to know.

00:54:07.480 --> 00:54:10.840
But for the other 5%, there
are a few cases where we need

00:54:10.840 --> 00:54:12.720
to dive into core printing.

00:54:12.720 --> 00:54:18.090
So that's a little blue box that
the Cocoa printing is based on.

00:54:19.550 --> 00:54:22.560
Core printing is an
application framework.

00:54:22.560 --> 00:54:25.730
It resides in application
services framework.

00:54:25.740 --> 00:54:29.360
It's a residual C interface
that provides no user interface.

00:54:29.360 --> 00:54:31.620
That's what Cocoa does.

00:54:31.770 --> 00:54:33.400
Cocoa provides the user interface.

00:54:33.400 --> 00:54:37.020
The core printing provides some
of the lower-level functionality.

00:54:37.020 --> 00:54:41.240
It provides the basic opaque types.

00:54:41.380 --> 00:54:46.990
They kind of look familiar, don't they,
with the NS printer and stuff like that.

00:54:47.100 --> 00:54:51.050
We have the PM printer, page format,
paper, which basically defines the

00:54:51.120 --> 00:54:53.830
paper and the margins of such,
the print settings,

00:54:53.830 --> 00:54:57.210
which is the settings for
the print dialog and such,

00:54:57.220 --> 00:54:59.930
and we have the print session,
which encapsulates the

00:55:00.440 --> 00:55:01.560
settings and the format.

00:55:03.200 --> 00:55:05.650
It's available to all applications,
but is rarely needed

00:55:05.650 --> 00:55:06.720
by a Cocoa application.

00:55:06.760 --> 00:55:10.500
There I said, it's that little 5%.
What would you use it for?

00:55:11.900 --> 00:55:14.110
Not much for most applications.

00:55:14.200 --> 00:55:18.200
You can change arbitrary print
settings like a job title,

00:55:18.280 --> 00:55:22.640
or as I said before,
you always want to print 10 copies.

00:55:22.640 --> 00:55:25.360
So, you'd say, you know, PM set copies.

00:55:25.360 --> 00:55:27.690
PM print settings set copies.

00:55:27.700 --> 00:55:31.280
If you want to set the
page size programmatically,

00:55:31.280 --> 00:55:36.300
and lastly is basically the direct
submission of PDF or PostScript.

00:55:36.500 --> 00:55:40.060
If you're dealing with a
PDF as your document format,

00:55:40.120 --> 00:55:41.630
why re-render it?

00:55:41.980 --> 00:55:45.110
just do a direct submission of
that PDF to the printing system.

00:55:47.910 --> 00:55:52.140
As I said,
it was available in Leopard and later.

00:55:52.140 --> 00:55:55.090
There's a few things you need
to know about how to use it.

00:55:55.290 --> 00:56:00.440
The NS Print Info contains a session,
a page format, and the print settings.

00:56:00.440 --> 00:56:03.200
So basically, if in NS Print Info,
you can call these methods to

00:56:03.200 --> 00:56:05.180
get these low-level objects.

00:56:05.180 --> 00:56:08.600
One thing we ask is once
you've modified those objects,

00:56:08.730 --> 00:56:11.880
you need to let the NS Print Info know
that you've changed those objects.

00:56:11.880 --> 00:56:14.670
So we're going to go and sync back.

00:56:14.870 --> 00:56:19.080
It will basically re-sync the information
that has in the NMS Print Info with

00:56:19.080 --> 00:56:23.240
the settings that are down in the
PM Print settings that you changed.

00:56:23.390 --> 00:56:26.420
So basically you'd call
update from PM page format

00:56:26.570 --> 00:56:30.020
or update PM Print settings,
which allows a sync to happen.

00:56:30.210 --> 00:56:35.680
And we have examples for you on your DVD.

00:56:35.680 --> 00:56:41.550
As Howard alluded to,
there are a few header file changes.

00:56:42.750 --> 00:56:46.070
One of them is
PM Print Settings Key replaces PM Ticket.

00:56:46.240 --> 00:56:51.120
So if you have a include
print core/pmticket.h,

00:56:51.120 --> 00:56:56.250
we're asking that you will
need to replace that with

00:56:56.250 --> 00:56:58.200
the PM Print Settings Keys.

00:56:58.250 --> 00:57:01.200
That's how it says you cannot
build Tioga components.

00:57:01.210 --> 00:57:04.720
New development of the Tioga
drivers should be used,

00:57:04.800 --> 00:57:07.000
should be done using
CUPS filters and backends.

00:57:07.020 --> 00:57:12.580
Cannot build the old style
Carbon print dialog plugins.

00:57:13.190 --> 00:57:15.990
New development should be
Cocoa Print Dialog plugins for

00:57:15.990 --> 00:57:19.230
drivers and the Anis Accessory
View Controller for Cocoa apps.

00:57:19.400 --> 00:57:25.980
As Howard said before,
well-written components will

00:57:25.980 --> 00:57:29.020
still run on Snow Leopard.

00:57:32.440 --> 00:57:35.050
Then we had to move some files around,
some of our headers around.

00:57:35.050 --> 00:57:40.480
On Leopard, PDE plugin interface and
pnprintdialoguextensions.h

00:57:40.480 --> 00:57:46.210
resided in the print framework,
which was under the Carbon framework.

00:57:46.240 --> 00:57:49.840
They really weren't needed
to be at that high of a level

00:57:49.840 --> 00:57:52.020
inside the Carbon framework.

00:57:52.180 --> 00:57:55.680
As a Cocoa app, you should not need to
be bringing in Carbon.

00:57:55.680 --> 00:57:56.800
So we moved them.

00:57:56.800 --> 00:58:00.230
Those files are now in the
application services framework

00:58:00.230 --> 00:58:02.280
under the print core framework.

00:58:02.280 --> 00:58:05.840
So basically we have conditionally,
we have show examples of how

00:58:05.990 --> 00:58:07.860
to conditionally compile this.

00:58:08.240 --> 00:58:12.140
Basically replace print in your
include file with print core.

00:58:12.140 --> 00:58:13.670
So it's very easy to do.

00:58:13.820 --> 00:58:15.920
As I said, we have examples for you.

00:58:16.040 --> 00:58:18.800
So now we're done with
the printing system.

00:58:18.860 --> 00:58:23.990
From the user perspective,
let's have Michael come up here and talk

00:58:23.990 --> 00:58:26.770
about where the real work gets done.

00:58:33.510 --> 00:58:34.900
Thank you, Alan.

00:58:34.900 --> 00:58:36.210
As he said, my name's Mike Sweet.

00:58:36.330 --> 00:58:39.330
I'm the person that created
CUPS in the first place,

00:58:39.330 --> 00:58:43.710
and I'm going to talk to you a little
bit about what we have in Snow Leopard

00:58:43.710 --> 00:58:46.290
and what the whole thing is.

00:58:46.890 --> 00:58:53.800
So, about 10 years ago,
I came into the need of creating

00:58:53.800 --> 00:58:58.220
this printing system to support
our customers at the time,

00:58:58.220 --> 00:59:01.290
and it's kind of taken off since then.

00:59:01.300 --> 00:59:03.840
You find all of the major
Linux distributions,

00:59:03.960 --> 00:59:06.880
it's available on all the BSDs
and the commercial Unixes,

00:59:06.960 --> 00:59:10.750
and of course Mac OS X are using
CUPS as a standard printing system.

00:59:12.180 --> 00:59:16.320
If you go onto the CUPS webpage,
you go on CUPS.org,

00:59:16.370 --> 00:59:21.820
you'll see a lot of compatible
add-ons and the developer and user

00:59:21.820 --> 00:59:25.830
communities that you can use when
you're developing printing that

00:59:26.030 --> 00:59:28.780
needs to access something in CUPS.

00:59:30.010 --> 00:59:33.720
Now, CUPS first showed up
in Mac OS X in Jaguar,

00:59:33.790 --> 00:59:38.110
that's the 10.2,
and we went on for about five

00:59:38.110 --> 00:59:41.190
years doing a licensing deal,
and then last year,

00:59:41.190 --> 00:59:42.800
Apple actually purchased CUPS.

00:59:42.800 --> 00:59:47.470
And, you know,
it was a little bit of an uproar

00:59:47.480 --> 00:59:52.220
when the news hit the net,
but things have been actually

00:59:52.270 --> 00:59:53.280
working out pretty well.

00:59:53.280 --> 00:59:57.190
We still have the same license agreement,
still the same website,

00:59:57.290 --> 01:00:00.480
and still the same group of
people developing the software,

01:00:00.480 --> 01:00:03.680
just we're developing it on the
West Coast instead of the East Coast.

01:00:03.680 --> 01:00:07.200
And it's kind of interesting,
we've actually had more releases

01:00:07.500 --> 01:00:11.590
in the last year than we had in all
the previous years as an average.

01:00:13.020 --> 01:00:16.900
Now, as I said, in Jaguar,
we first introduced CUPS.

01:00:17.090 --> 01:00:20.560
And that brought,
in addition to the CUPS architecture,

01:00:20.560 --> 01:00:25.120
it brought printer sharing that
was missing from previous releases.

01:00:25.410 --> 01:00:28.540
Panther added Bonjour-based
printing and printer sharing,

01:00:28.540 --> 01:00:31.780
and that was the first time
that Bonjour really got a

01:00:31.780 --> 01:00:33.260
lot of exposure that way.

01:00:33.280 --> 01:00:37.220
Tiger added per-printer sharing,
so you can actually share

01:00:37.230 --> 01:00:40.480
individual printers,
but not all printers.

01:00:40.480 --> 01:00:43.080
It was very much requested.

01:00:43.080 --> 01:00:47.100
And as you notice,
all of the previous Mac OS X releases

01:00:47.100 --> 01:00:49.870
were all based on CUPS 1.1.

01:00:50.610 --> 01:00:53.920
In Leopard,
we actually bumped up to CUPS 1.3,

01:00:53.920 --> 01:00:57.340
and that got us a lot
of interesting stuff.

01:00:57.510 --> 01:01:00.730
Kerberos, IPv6 support,
the full support for deep

01:01:00.840 --> 01:01:03.900
color printer drivers,
and some enhancements to the

01:01:03.900 --> 01:01:05.870
security model that was available.

01:01:05.920 --> 01:01:10.920
And then Snow Leopard and the
seed that you've got has a lot

01:01:10.920 --> 01:01:15.630
of new features for security,
but also incorporates some of

01:01:15.630 --> 01:01:19.920
the other components that have
previously been separately provided.

01:01:20.600 --> 01:01:24.770
Howard showed you the user interface
for the access control list and

01:01:24.770 --> 01:01:26.820
the sharing preference pane.

01:01:26.820 --> 01:01:31.180
There's some stuff with sandboxing
that we're doing for enhanced security.

01:01:31.180 --> 01:01:32.520
I'll talk about that a little later.

01:01:32.520 --> 01:01:36.090
And then the driver development kit,
which gives you additional

01:01:36.090 --> 01:01:38.930
printer drivers out of the box,
and a lot of tools for

01:01:38.930 --> 01:01:40.380
driver development.

01:01:42.690 --> 01:01:48.000
Now, I did a little retrospective,
if you will, of what it's been like for

01:01:48.260 --> 01:01:52.980
the last year at Apple,
and I noticed something interesting.

01:01:52.980 --> 01:01:55.630
On the CUPS website,
we have this bug database,

01:01:55.790 --> 01:01:58.880
and we get a lot of
contributions from the community,

01:01:58.880 --> 01:02:02.870
but I wasn't sure what
that actually was like.

01:02:03.040 --> 01:02:05.690
And when I looked at it,
it turned out that three-quarters

01:02:05.770 --> 01:02:08.990
of all the contributions and bug
fixes to the software actually came

01:02:08.990 --> 01:02:10.950
from the open-source community.

01:02:11.580 --> 01:02:15.350
We have all the Linux vendors,
the people at Sun with

01:02:15.490 --> 01:02:18.580
their open Solaris,
are contributing fixes and

01:02:18.580 --> 01:02:20.650
improvements to CUPS all the time.

01:02:20.660 --> 01:02:23.820
And so, you know, last year alone,
we've only had a quarter of

01:02:23.940 --> 01:02:26.860
those contributions coming
from Apple internally.

01:02:26.860 --> 01:02:29.680
So it's been really exciting
to see that the project

01:02:29.680 --> 01:02:32.600
continues to go on very strong,
both internally and

01:02:32.600 --> 01:02:34.170
outside of the company.

01:02:36.320 --> 01:02:40.250
So I'm going to talk a little bit
about how CUPS works and give you

01:02:40.250 --> 01:02:45.790
a little peek into what actually
happens after you hit the Print button.

01:02:46.340 --> 01:02:50.120
So CUPS is based around this
central server called the scheduler,

01:02:50.120 --> 01:02:54.550
and it basically manages all the
printers and jobs that are in the system.

01:02:54.560 --> 01:03:00.300
If you look in the activity monitor,
you'll see the CUPSd process running,

01:03:00.390 --> 01:03:01.240
usually.

01:03:01.240 --> 01:03:03.900
It's something that's
run on demand by LaunchD,

01:03:03.900 --> 01:03:07.550
so if you don't have any print jobs going
and you're not sharing any printers,

01:03:07.560 --> 01:03:10.970
you're not actually going
to see that process there.

01:03:10.980 --> 01:03:14.700
But as soon as you hit that
print button in the application,

01:03:14.830 --> 01:03:16.040
it'll get fired up.

01:03:16.200 --> 01:03:18.970
And it's a very lightweight process.

01:03:18.980 --> 01:03:22.420
It just does a few simple things,
and then anything more complicated,

01:03:22.420 --> 01:03:26.910
like printing a file to the printer,
actually gets farmed out to other

01:03:26.910 --> 01:03:31.230
helper applications so that it doesn't
have to manage a lot of internal

01:03:31.240 --> 01:03:32.810
state and use up a lot of memory.

01:03:32.820 --> 01:03:39.120
Because it deals with a lot of
security-related things and secure ports,

01:03:39.120 --> 01:03:41.070
it has to run as root.

01:03:41.160 --> 01:03:44.470
So we have to do a lot of stuff
internally to make sure that

01:03:44.520 --> 01:03:46.180
we don't expose the system.

01:03:46.180 --> 01:03:47.420
So we have to do a lot of stuff
internally to make sure that

01:03:47.420 --> 01:03:48.100
we don't expose the system.

01:03:48.180 --> 01:03:51.550
But whenever we run the helper programs,
we run them with another

01:03:51.820 --> 01:03:53.920
account called LP,
which doesn't have all

01:03:54.050 --> 01:03:55.600
those system privileges.

01:03:55.600 --> 01:04:00.770
When we're actually talking to the
scheduler from your application,

01:04:00.950 --> 01:04:03.220
you go down through the stack.

01:04:03.260 --> 01:04:08.430
The CUPS API talks to the
scheduler using IPP messages.

01:04:08.460 --> 01:04:10.420
IPP is the Internet Printing Protocol.

01:04:10.420 --> 01:04:13.750
And that's layered over top of HTTP,
which is the same thing

01:04:13.750 --> 01:04:15.500
that your web browser uses.

01:04:15.500 --> 01:04:15.820
So I have to do a lot of stuff
internally to make sure that

01:04:15.820 --> 01:04:16.180
I'm not getting a lot of data.

01:04:16.180 --> 01:04:18.980
So anytime the application needs
to send a print job or get the

01:04:18.980 --> 01:04:21.610
information about a printer,
it's talking over those

01:04:21.660 --> 01:04:23.340
protocols through the CUPS API.

01:04:23.340 --> 01:04:26.030
I have a little slide here to show that.

01:04:26.160 --> 01:04:30.850
CUPS API sits at the bottom
of all the print APIs.

01:04:30.860 --> 01:04:34.780
And you'll notice that the
scheduler uses the same CUPS API.

01:04:34.780 --> 01:04:38.860
The APIs are written so that they can
be used both by client and server.

01:04:38.860 --> 01:04:42.860
And they're very lightweight,
so we can talk very quickly and

01:04:42.860 --> 01:04:46.150
not use up a lot of resources
just to get something done.

01:04:46.260 --> 01:04:47.790
and print it out.

01:04:47.950 --> 01:04:50.770
Now, once you actually bring up the
print dialog and you print,

01:04:50.950 --> 01:04:52.040
several things happen.

01:04:52.040 --> 01:04:55.920
One is the print frameworks will generate
this PDF file from your application.

01:04:55.920 --> 01:04:58.700
Your application has done all
its drawing and everything.

01:04:58.700 --> 01:05:01.930
We get this PDF file,
hopefully with calibrated colors,

01:05:01.930 --> 01:05:07.310
and that will get fed into the
printing system to actually

01:05:07.310 --> 01:05:09.310
get printed out on the printer.

01:05:09.320 --> 01:05:12.390
You'll notice here we have a PDF file,
but there's also this

01:05:12.390 --> 01:05:14.280
other file out there,
this PPD.

01:05:14.280 --> 01:05:16.200
It's a PostScript Printer
Description File.

01:05:16.840 --> 01:05:19.320
That used to be just
for PostScript printers.

01:05:19.320 --> 01:05:21.780
In CUPS, it's also used for
non-PostScript printers,

01:05:21.780 --> 01:05:25.270
and it describes what the printer can do,
what features it has,

01:05:25.300 --> 01:05:27.760
what drivers to use, and so forth.

01:05:27.840 --> 01:05:31.980
So CUPSD, the scheduler,
is going to take that file and take

01:05:31.980 --> 01:05:36.170
the PPD file that describes the
printer and figure out what programs

01:05:36.220 --> 01:05:37.750
to run to get the job to print.

01:05:40.010 --> 01:05:44.140
So we start off with a series
of what we call filter programs.

01:05:44.680 --> 01:05:47.850
Depending on the job,
there may be a pre-filter that's

01:05:47.850 --> 01:05:51.750
applied by the driver manufacturer
to actually convert or examine

01:05:51.750 --> 01:05:56.260
the print data before it goes into
the rest of the print filters.

01:05:56.280 --> 01:05:59.770
And Apple provides several
standard print filters for going,

01:05:59.780 --> 01:06:02.480
say,
from PDF to PostScript or PDF to Raster.

01:06:02.480 --> 01:06:04.980
And then that all goes
into the printer driver,

01:06:04.980 --> 01:06:08.230
which is typically provided
by the printer manufacturer.

01:06:08.980 --> 01:06:12.730
It will take that,
create printer-ready data,

01:06:12.820 --> 01:06:17.150
And then we have an optional component
called a port monitor that handles

01:06:17.210 --> 01:06:20.060
any protocol level conversion.

01:06:20.060 --> 01:06:24.340
So you may need to take the data
from just a raw binary format

01:06:24.420 --> 01:06:28.760
and put it inside these frame
packets to go out to the printer.

01:06:28.760 --> 01:06:30.820
That's where you would handle that.

01:06:30.860 --> 01:06:33.380
And finally,
there's a program called the back-end,

01:06:33.380 --> 01:06:35.650
which actually communicates
with the device,

01:06:35.650 --> 01:06:38.000
and it takes all the print
data that the port monitor,

01:06:38.140 --> 01:06:39.910
the printer driver,
has supplied and feeds

01:06:40.060 --> 01:06:41.280
it out to the printer.

01:06:42.360 --> 01:06:44.980
Now, of course, the printer often has
something to say about that,

01:06:45.110 --> 01:06:48.330
so any status information
comes back over a back channel,

01:06:48.330 --> 01:06:50.290
which those programs can read.

01:06:52.180 --> 01:06:56.010
And starting in Leopard,
we added a side channel interface

01:06:56.160 --> 01:06:58.990
so that you can actually have the
driver communicate with the back end.

01:06:59.000 --> 01:07:03.330
It's typically used to find out what
the capabilities of that interface are.

01:07:03.330 --> 01:07:06.380
Does it support
bidirectional data transfers?

01:07:06.380 --> 01:07:09.090
What's the 1284 device ID?

01:07:09.090 --> 01:07:12.010
Other information about the printer.

01:07:14.740 --> 01:07:18.080
Now, as I mentioned before,
a lot of the stuff comes from us.

01:07:18.170 --> 01:07:22.270
The PDF file we create,
the standard filters we provide,

01:07:22.270 --> 01:07:26.620
the port monitors typically we provide
for PostScript printers at least,

01:07:26.620 --> 01:07:30.500
and all of the standard backends
for USB and network printing.

01:07:31.610 --> 01:07:33.730
And when you got your printer
from the manufacturer,

01:07:33.830 --> 01:07:37.390
obviously they provided the printer,
they provided all the driver components,

01:07:37.450 --> 01:07:40.610
which means the PPD file,
the driver filter, any pre-filters,

01:07:40.720 --> 01:07:43.600
and color profiles, icons,
all the things that go along

01:07:43.600 --> 01:07:45.030
with the printer driver.

01:07:47.460 --> 01:07:51.250
Now, as all these programs are running,
they're feeding status information back

01:07:51.250 --> 01:07:53.510
to the scheduler to say what it's doing.

01:07:53.520 --> 01:07:56.110
All those messages go
across to standard error,

01:07:56.110 --> 01:07:58.280
so they're just plain text messages.

01:07:58.280 --> 01:08:02.700
And, you know, basically,
it'll be things like printing page one,

01:08:02.700 --> 01:08:07.360
printing page two, out of cyan ink,
any sort of status information.

01:08:07.360 --> 01:08:10.030
Also handles things like page accounting.

01:08:11.720 --> 01:08:14.540
So, as I mentioned before,
we like to run these programs

01:08:14.610 --> 01:08:17.640
as an unprivileged user,
the user LP.

01:08:17.640 --> 01:08:20.590
But the backends, in some cases,
have to run as root to

01:08:20.590 --> 01:08:25.700
access security information,
to use privileged ports or interfaces.

01:08:25.700 --> 01:08:30.920
So you'll see sometimes the backends
are run as LP and sometimes as root.

01:08:30.980 --> 01:08:34.240
We like it when backends can run as LP.

01:08:36.600 --> 01:09:28.300
[Transcript missing]

01:09:29.990 --> 01:09:36.060
So, you've got this seed of Snow Leopard,
and it's got a new version of CUPS in it.

01:09:36.130 --> 01:09:40.680
We've done a lot of tuning
in that new version of CUPS,

01:09:40.760 --> 01:09:43.330
but there's also some
security improvements,

01:09:43.340 --> 01:09:46.390
and as driver developers,
you need to be aware of those things.

01:09:46.430 --> 01:09:47.790
I'm going to talk about
that in a little bit.

01:09:48.620 --> 01:09:51.360
The driver development kit,
which used to be a separate

01:09:51.450 --> 01:09:54.380
download on CUPS.org,
is now a standard part of CUPS.

01:09:54.500 --> 01:09:57.510
So, if you're developing add-ons
for those sorts of drivers,

01:09:57.590 --> 01:10:00.680
or you're developing drivers,
those tools will be available

01:10:00.680 --> 01:10:02.440
on every Snow Leopard system.

01:10:02.440 --> 01:10:05.690
The CUPS test PPD command,
which we've asked every

01:10:05.810 --> 01:10:09.390
driver vendor to use,
because we use it internally when

01:10:09.390 --> 01:10:13.830
we're testing the drivers you send us,
that's been improved again,

01:10:13.900 --> 01:10:18.410
and we'll continue to improve it
as we go on to add features to it.

01:10:18.620 --> 01:10:22.690
In order to better support printer
utilities and supply-level monitoring,

01:10:22.690 --> 01:10:24.070
we have a new interface.

01:10:24.070 --> 01:10:27.050
It's actually an old interface
from CUPS that's just being

01:10:27.130 --> 01:10:28.740
adopted in Snow Leopard.

01:10:28.740 --> 01:10:33.800
We added the operation to support
the job preview in the printer proxy.

01:10:33.800 --> 01:10:39.270
It allows us to securely allow any user
that submitted a job or an administrator

01:10:39.270 --> 01:10:42.310
to actually view the contents of a job.

01:10:42.320 --> 01:10:45.350
And finally,
we always update the web interface.

01:10:45.450 --> 01:10:47.110
It's been updated again.

01:10:47.120 --> 01:10:48.600
And even better, we've added a new
interface to the printer.

01:10:48.620 --> 01:10:51.110
better online documentation.

01:10:52.260 --> 01:10:57.200
So, on the security front, last WWDC,
if you were here,

01:10:57.200 --> 01:11:00.380
we introduced something for
Leopard called Seatbelt.

01:11:00.470 --> 01:11:02.880
It's now just officially
known as Sandbox,

01:11:02.970 --> 01:11:07.550
and it basically allows us to
control what a program can do.

01:11:08.140 --> 01:11:12.180
So, we looked at that, and we said,
we want to use this at some

01:11:12.290 --> 01:11:15.790
level in CUPS to further
secure the printing system.

01:11:15.790 --> 01:11:20.390
So, what you'll see in Snow Leopard is
we've used it to limit your write

01:11:20.390 --> 01:11:25.210
access to the file system and the
read access to the print job files.

01:11:25.300 --> 01:11:29.890
From the standpoint of a printer driver,
it means that you can no longer

01:11:29.890 --> 01:11:33.980
write files to library printers,
or to user home directories,

01:11:34.020 --> 01:11:35.360
for that matter.

01:11:37.340 --> 01:11:40.870
And for the print job filters themselves,
they can only access the files that are

01:11:40.870 --> 01:11:42.970
associated with the job you're printing.

01:11:42.980 --> 01:11:46.160
So, previously,
if you were to install a malicious

01:11:46.160 --> 01:11:50.280
piece of printer driver software,
it could actually collect all of

01:11:50.310 --> 01:11:54.250
the spool files on your system and
then email them to somebody or,

01:11:54.250 --> 01:11:58.260
you know, send it somehow,
so that that potentially confidential

01:11:58.260 --> 01:12:00.040
information would be exposed.

01:12:00.040 --> 01:12:03.710
So, this new security improvement
prevents that from happening.

01:12:06.530 --> 01:12:09.290
Now, the CUPS DDK,
if you're not familiar with it,

01:12:09.290 --> 01:12:11.850
it's the driver development kit for CUPS.

01:12:11.920 --> 01:12:13.720
It includes several components.

01:12:13.790 --> 01:12:16.340
One of them is a PPD compiler
for creating PPD files

01:12:16.340 --> 01:12:17.820
for your printer drivers.

01:12:17.860 --> 01:12:19.500
That's been improved.

01:12:19.560 --> 01:12:24.000
You can now localize with strings files,
which are the standard for Mac OS X.

01:12:24.000 --> 01:12:27.010
We've added support for
conditional directives,

01:12:27.010 --> 01:12:29.160
long file names, and a test mode.

01:12:31.210 --> 01:12:35.380
And then we've added in all of the
drivers from there so that they can

01:12:35.380 --> 01:12:37.750
be used in a standard Mac install.

01:12:37.750 --> 01:12:41.330
If you provide driver information files,
which are the files that

01:12:41.330 --> 01:12:44.180
the PPD compiler consumes,
you can actually install

01:12:44.180 --> 01:12:47.570
them in library printers,
ppds.drv, and the printing system

01:12:47.710 --> 01:12:49.280
will be able to use them.

01:12:52.000 --> 01:14:14.400
[Transcript missing]

01:14:15.960 --> 01:14:18.770
"It gets out to the printer,
the printer can feed back the

01:14:18.860 --> 01:14:21.300
information that you need,
and then you can feed that

01:14:21.390 --> 01:14:22.480
back up to your utility.

01:14:22.660 --> 01:14:25.430
So instead of talking
directly to the device,

01:14:25.440 --> 01:14:27.410
you just talk through CUPS."

01:14:30.090 --> 01:14:33.200
The web interface here,
just a quick little blurb,

01:14:33.350 --> 01:14:36.830
the online help is the
most common page to use.

01:14:36.900 --> 01:14:39.900
Fully searchable,
has additional information for driver

01:14:39.940 --> 01:14:43.180
development and application development
if you need to go to the CUPS level.

01:14:45.160 --> 01:14:48.180
And for additional information,
we've got some links here.

01:14:48.180 --> 01:14:52.220
If you have bugs that you find,
report them, please.

01:14:52.220 --> 01:14:53.780
Please report them.

01:14:53.780 --> 01:14:56.290
Bugreport.apple.com.

01:14:56.290 --> 01:14:59.710
The developer website
has a page on printing.

01:14:59.710 --> 01:15:02.620
There is a mailing list for printing.

01:15:02.620 --> 01:15:07.220
There's also CUPS mailing list,
CUPS website that have resources there,

01:15:07.310 --> 01:15:08.860
so please do use those.

01:15:10.420 --> 01:15:13.660
If you have any questions for this, Mr.

01:15:13.690 --> 01:15:17.970
Paul Danbold is our technology
evangelist for this.

01:15:17.970 --> 01:15:22.430
And for developing your user interfaces,
we do have the human interface

01:15:22.500 --> 01:15:24.410
guidelines that you can use.

01:15:26.140 --> 01:15:28.870
And finally, a reminder,
later this afternoon

01:15:28.870 --> 01:15:30.360
we have image capture.

01:15:30.360 --> 01:15:34.850
And we'll see you all in a few
minutes down in the printing lab.