WEBVTT

00:00:25.280 --> 00:00:27.200
Welcome to the
Apple Developer Conference.

00:00:27.260 --> 00:00:31.210
Thanks for coming to our
Bonjour networking session this morning.

00:00:34.780 --> 00:00:36.080
Why are you here?

00:00:36.130 --> 00:00:39.440
You're here because you are the guys
that make really cool networking

00:00:39.440 --> 00:00:43.580
software and networking hardware,
and you want it to be reliable and

00:00:43.620 --> 00:00:48.570
easy to use without users having to
type in host names and IP addresses and

00:00:48.570 --> 00:00:51.140
port numbers and nonsense like that.

00:00:51.800 --> 00:00:54.120
You want to do screen sharing,
you want to do file sharing,

00:00:54.120 --> 00:00:59.580
you want to print over the network,
you want to access music and photos and

00:00:59.820 --> 00:01:02.110
movies and other media over the network.

00:01:02.190 --> 00:01:05.780
And Bonjour makes that
reliable and easy to use.

00:01:07.570 --> 00:01:11.080
Sometimes your client and your
server or your communicating peers

00:01:11.410 --> 00:01:12.720
might not be on the same network.

00:01:12.890 --> 00:01:15.000
They might be on opposite
sides of the internet.

00:01:15.000 --> 00:01:18.640
Sometimes there might be
NAT gateways in the middle,

00:01:18.640 --> 00:01:21.870
rewriting the packets as they go through.

00:01:22.020 --> 00:01:25.600
Wide area Bonjour makes
that easy for you as well.

00:01:27.010 --> 00:01:31.140
So I'll start with an outline of
what we're going to talk about today.

00:01:31.460 --> 00:01:34.660
A lot of you here know all about Bonjour,
but more than half of the

00:01:34.660 --> 00:01:37.730
attendees this year are first
time at the developer conference,

00:01:37.730 --> 00:01:41.810
so we're going to have a quick recap
of what Bonjour is and how it works.

00:01:42.080 --> 00:01:45.490
Then Roary is going to tell you all
about the really cool new stuff we have

00:01:45.680 --> 00:01:48.730
using Bonjour on iPhone and iPod touch.

00:01:48.730 --> 00:01:50.470
And he's got some cool demos,
which I think you're

00:01:50.470 --> 00:01:51.180
really going to love.

00:01:51.260 --> 00:01:55.160
We'll also talk to you about
how Back to My Mac works,

00:01:55.410 --> 00:01:57.380
which is built on Bonjour.

00:01:57.380 --> 00:02:01.020
So Back to My Mac is not just for
screen sharing and file sharing.

00:02:01.020 --> 00:02:03.880
Your applications can use
Back to My Mac as well.

00:02:04.680 --> 00:02:07.480
We'll wrap up with some
tips and reminders,

00:02:07.650 --> 00:02:10.960
cover some frequent mistakes
that we see that we want to

00:02:10.960 --> 00:02:13.920
encourage you not to make,
and then we'll have

00:02:13.940 --> 00:02:15.720
time for Q&A at the end.

00:02:18.230 --> 00:02:21.670
So, summing it up in one sentence,
this is what it's all about.

00:02:21.740 --> 00:02:27.940
We want networking with TCP IP to be as
easy to use as plugging in a USB cable.

00:02:27.940 --> 00:02:30.500
And standing here today
saying this to you,

00:02:30.640 --> 00:02:33.010
this doesn't sound too surprising.

00:02:33.040 --> 00:02:35.200
I think this idea has become accepted.

00:02:35.200 --> 00:02:39.010
But five, ten years ago,
this was like heresy.

00:02:39.420 --> 00:02:43.210
When you suggested that you would
want to do things using IP networking,

00:02:43.210 --> 00:02:46.130
the reaction most people had was,
you must be crazy,

00:02:46.130 --> 00:02:48.920
typing in IP addresses and
subnet masks and default

00:02:48.920 --> 00:02:51.010
gateways and all that nonsense.

00:02:51.010 --> 00:02:54.010
I just want to plug my
printer in the USB port.

00:02:54.090 --> 00:02:57.870
Well, in the five years since that,
we've seen Bonjour get

00:02:57.940 --> 00:02:59.860
adopted in the marketplace.

00:02:59.860 --> 00:03:04.130
And now, for under $200,
you can buy a network printer with

00:03:04.130 --> 00:03:09.220
Bonjour and you plug it in and it shows
up in the print dialog just as easily.

00:03:09.240 --> 00:03:14.410
And that's what we want to see more of.

00:03:15.930 --> 00:03:19.050
Some of you are probably thinking,
but AppleTalk is really good for this.

00:03:19.160 --> 00:03:25.760
Well, we're here to tell you today,
officially, AppleTalk is dead.

00:03:32.130 --> 00:03:35.340
AppleTalk is no longer in Snow Leopard.

00:03:35.340 --> 00:03:40.490
And if you want to make a device,
the only network browsing

00:03:40.550 --> 00:03:42.570
to discover printers on the
Mac is going to be Bonjour.

00:03:42.630 --> 00:03:46.170
So that's what you need to be doing.

00:03:47.610 --> 00:03:50.300
This slide used to be the whole talk,
now we've condensed it down to one

00:03:50.420 --> 00:03:52.930
slide to make room for other stuff.

00:03:53.520 --> 00:03:58.010
These are the three technological legs
that make the foundation of Bonjour or

00:03:58.010 --> 00:04:00.590
zero configuration networking.

00:04:00.590 --> 00:04:03.460
And Bonjour is not about this technology.

00:04:03.460 --> 00:04:07.080
What Bonjour is about is the user
experience that we want people to have.

00:04:07.160 --> 00:04:09.700
This is not a protocol that
we designed and then slap a

00:04:09.700 --> 00:04:11.240
user interface on top of it.

00:04:14.130 --> 00:04:16.750
We started out with the user
experience we wanted people to have.

00:04:16.840 --> 00:04:18.720
But then to make that a reality,
we had to build the

00:04:18.720 --> 00:04:20.210
technologies to make that work.

00:04:22.550 --> 00:04:24.300
The first one is link local addressing.

00:04:24.310 --> 00:04:25.120
DHCP is great.

00:04:25.120 --> 00:04:26.700
Nothing wrong with DHCP servers.

00:04:26.750 --> 00:04:29.040
But if you don't have one,
the device shouldn't fall

00:04:29.040 --> 00:04:32.100
on its face and call for an
administrator to come and help it.

00:04:32.190 --> 00:04:34.410
It needs to be able to get
on the network on its own.

00:04:36.280 --> 00:04:38.420
So if you don't find a DHCP server,
it's very simple.

00:04:39.120 --> 00:04:42.060
We looked at what AppleTalk did
and we applied the same principles.

00:04:43.130 --> 00:04:46.850
You pick a random address in a
range reserved for this purpose.

00:04:46.940 --> 00:04:48.270
You send an ARP request.

00:04:48.540 --> 00:04:50.400
If somebody answers that,
it means they have the address

00:04:50.470 --> 00:04:51.530
and you pick a different one.

00:04:51.560 --> 00:04:53.200
If nobody answers, it's yours.

00:04:55.340 --> 00:04:57.640
So that's how devices can
just plug into an Ethernet hub

00:04:57.640 --> 00:04:59.620
and all get unique addresses,
which is great.

00:05:01.590 --> 00:05:03.460
But you need to know what the address is,
and you don't want to

00:05:03.540 --> 00:05:04.740
be typing in addresses.

00:05:04.870 --> 00:05:09.300
So multicast DNS is the next
layer of the three-layer cake.

00:05:10.160 --> 00:05:14.580
In standard internet applications,
DNS is the name service

00:05:14.580 --> 00:05:16.680
that we're familiar with.

00:05:16.680 --> 00:05:20.140
And just like I said with DHCP,
nothing wrong with DHCP servers,

00:05:20.150 --> 00:05:23.370
there's nothing wrong with
DNS servers as long as you have one

00:05:23.370 --> 00:05:25.340
and you know how to administer it.

00:05:25.500 --> 00:05:27.350
But we want a lightweight solution.

00:05:27.350 --> 00:05:30.020
We want a safety net for
when that's not available.

00:05:30.020 --> 00:05:34.170
So multicast DNS takes the same
packet formats and the same names

00:05:34.210 --> 00:05:39.110
and the same record types of standard
DNS but sends them over multicast.

00:05:39.140 --> 00:05:42.700
So every device has a little responder
listening for these packets and

00:05:42.750 --> 00:05:46.240
when it sees a query for its name,
it says, hey, that's me and gives a

00:05:46.260 --> 00:05:47.660
standard DNS answer.

00:05:47.660 --> 00:05:49.220
So that's good.

00:05:49.230 --> 00:05:52.450
So now you can type in a name,
something.local,

00:05:52.450 --> 00:05:55.140
and have that resolved by multicast.

00:05:55.250 --> 00:06:11.720
And you can type in a name,
something.local,

00:06:12.360 --> 00:06:24.790
and have that resolved by multicast.

00:06:25.220 --> 00:06:28.060
The URLs there tell you where
you can find more details

00:06:28.240 --> 00:06:30.160
and all the specifications.

00:06:34.100 --> 00:06:39.200
So this is our architecture that
we launched five or six years ago.

00:06:39.230 --> 00:06:44.430
It is the DNS service discovery semantics
delivered using multicast DNS packets,

00:06:44.670 --> 00:06:45.970
completely zero configuration.

00:06:45.980 --> 00:06:49.710
But the day we launched that,
we knew that the first question we

00:06:49.710 --> 00:06:53.380
were going to have once it became
popular was people would say,

00:06:53.410 --> 00:06:56.970
this is great,
but I want to scale it beyond the subnet.

00:06:57.310 --> 00:07:00.590
So there's a reason we picked
DNS packet formats and records

00:07:00.590 --> 00:07:04.290
and naming in the first place,
because DNS is the world's largest

00:07:04.300 --> 00:07:06.070
scale distributed database.

00:07:06.070 --> 00:07:08.930
It scales beyond the
enterprise to the whole planet.

00:07:08.940 --> 00:07:13.630
So using the same DNS service
discovery semantics,

00:07:13.630 --> 00:07:19.380
we can perform those operations
using wide area unicast DNS.

00:07:19.380 --> 00:07:23.790
So we register using standard
DNS dynamic update to put those

00:07:24.050 --> 00:07:28.890
records on the name server,
and we discover using DNS queries.

00:07:28.900 --> 00:07:31.420
And those of you who've
got your laptops out,

00:07:31.420 --> 00:07:34.520
if you look in Safari and
look under Bonjour bookmarks,

00:07:34.520 --> 00:07:38.910
you will see three pages that are
being advertised here with information.

00:07:38.940 --> 00:07:41.260
So if you forget the URL,
it doesn't matter.

00:07:41.320 --> 00:07:43.140
You don't have to remember the URL.

00:07:43.140 --> 00:07:45.920
You can just look in
Bonjour bookmarks and find those.

00:07:48.270 --> 00:07:50.820
Standard DNS is good,
but there were some extra

00:07:50.820 --> 00:07:52.300
things we wanted to do.

00:07:52.300 --> 00:07:55.480
Standard DNS updates stay
on the server indefinitely,

00:07:55.480 --> 00:07:59.560
so if you unplug your laptop from
the Ethernet cable and walk away,

00:07:59.560 --> 00:08:01.350
nobody's going to delete those records.

00:08:01.360 --> 00:08:05.770
And we didn't want an administrator
to have to clean those up,

00:08:05.770 --> 00:08:08.140
so we added a lease mechanism.

00:08:08.140 --> 00:08:11.170
Just like when you get a
DHCP address from a DHCP server,

00:08:11.240 --> 00:08:13.480
it's not permanent, it has a time on it.

00:08:13.680 --> 00:08:15.250
And if you don't renew
it before it expires,

00:08:15.250 --> 00:08:17.000
then you lose the address
and it goes back into the

00:08:17.080 --> 00:08:18.380
pool of available addresses.

00:08:18.380 --> 00:08:23.630
When we do updates on the server,
we have an extension to the DNS protocol

00:08:23.630 --> 00:08:26.580
that puts a lifetime on those updates.

00:08:26.680 --> 00:08:31.010
And as long as the client machine is
active and on the network and running,

00:08:31.010 --> 00:08:33.970
then it renews those
records and keeps them live.

00:08:34.040 --> 00:08:36.900
But if you unplug and walk away,
then when the records expire,

00:08:36.960 --> 00:08:38.630
they get deleted automatically.

00:08:41.770 --> 00:08:47.000
Another reality of today's world is a lot
of users are behind NAT gateways at home.

00:08:47.180 --> 00:08:50.730
And NAT gateways rewrite the packets so
that you only have one public address.

00:08:50.730 --> 00:08:53.840
And roughly speaking,
the client machine doesn't even

00:08:53.870 --> 00:08:55.780
know what the public address is.

00:08:55.780 --> 00:08:58.690
It doesn't know the packets
are being rewritten.

00:08:59.350 --> 00:09:03.860
So we added support to Bonjour so
that when your application running

00:09:03.870 --> 00:09:07.820
on Mac OS X or on Windows or
on Linux registers its service,

00:09:07.930 --> 00:09:12.460
we detect if there's a NAT gateway
and we talk to the NAT gateway.

00:09:12.460 --> 00:09:15.980
We set up a port mapping automatically
so the users no longer have

00:09:15.980 --> 00:09:19.420
to do that manual port mapping
that's very hard to explain.

00:09:19.420 --> 00:09:22.600
We find the public address,
we get a public port mapping,

00:09:22.600 --> 00:09:25.860
and then we put that external
information into the DNS so that

00:09:26.000 --> 00:09:27.890
you can run a web server at home.

00:09:27.910 --> 00:09:31.240
You can run... photo sharing,
you can run whatever

00:09:31.240 --> 00:09:32.000
applications you want.