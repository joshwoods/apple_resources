WEBVTT

00:00:21.990 --> 00:00:23.870
Good afternoon, everyone,
and welcome to the

00:00:23.870 --> 00:00:26.040
Mac OS X Server State of the Union.

00:00:26.220 --> 00:00:28.810
We've got some great product
updates for Mac OS X Server that

00:00:28.840 --> 00:00:30.310
we want to share with you today.

00:00:30.670 --> 00:00:34.040
But first, before we do that,
I want to do a quick recap of some

00:00:34.040 --> 00:00:37.040
recent updates we've had in the
server and storage product line.

00:00:37.520 --> 00:00:39.510
Over the past few months,
we've made many updates

00:00:39.510 --> 00:00:40.520
to the product line.

00:00:40.520 --> 00:00:57.670
Starting in January,
we introduced the new 8-core XServe.

00:00:57.670 --> 00:00:57.670
With dual 3 GHz quad-core
Xeon processors,

00:00:57.670 --> 00:00:57.670
faster memory bandwidth,
more disk I/O throughput,

00:00:57.670 --> 00:00:57.670
the server is over two times
faster than the previous XServe.

00:00:57.830 --> 00:01:01.710
In benchmarks of I/O intensive activity,
like this file server benchmark,

00:01:01.890 --> 00:01:05.470
you see it's 30% faster
than the previous XServe.

00:01:05.780 --> 00:01:09.940
And in application benchmarks like Java,
shown here by SPECJBB,

00:01:10.000 --> 00:01:12.410
it's over two times faster.

00:01:13.300 --> 00:01:16.970
In February,
we added support for the Promise V-Track

00:01:16.970 --> 00:01:20.000
RAID storage system in Apple products.

00:01:20.100 --> 00:01:21.800
This added several key new features.

00:01:21.800 --> 00:01:25.480
In particular,
we added support for Promise's dual

00:01:25.480 --> 00:01:28.670
active-active RAID controllers,
4-gigabit fiber,

00:01:28.670 --> 00:01:30.310
and support for SAS drives.

00:01:30.440 --> 00:01:34.620
And in fact, these are three of the most
requested features last year at WWDC,

00:01:34.620 --> 00:01:37.710
and they're now supported
on the Mac OS X platform.

00:01:38.800 --> 00:01:42.100
In February, we also introduced a
major new upgrade to XAN,

00:01:42.100 --> 00:01:43.940
XAN 2.

00:01:44.030 --> 00:01:48.300
Since we introduced it back in 2005,
XAN has become the most widely deployed

00:01:48.300 --> 00:01:50.690
SAN file system on any platform.

00:01:50.770 --> 00:01:54.090
It's used in newsrooms and
studios throughout the world,

00:01:54.090 --> 00:01:57.570
such as NBC, CNN, BBC, DreamWorks.

00:01:58.500 --> 00:02:01.700
And now with XAN 2,
we've added several new features.

00:02:01.700 --> 00:02:05.470
We've improved performance by optimizing
the layout of the file system on disk.

00:02:05.470 --> 00:02:08.730
And you can see that together
here with the V-Track RAID,

00:02:08.800 --> 00:02:13.610
XAN 2 can now deliver over
six simultaneous uncompressed

00:02:13.610 --> 00:02:19.270
1080p HD streams or up to
26 simultaneous uncompressed

00:02:19.270 --> 00:02:22.660
standard definition video streams.

00:02:22.850 --> 00:02:25.700
In XSAN 2, we also have an all-new admin.

00:02:25.700 --> 00:02:30.960
It makes it very easy to manage your SAN,
all the assets in your SAN.

00:02:30.960 --> 00:02:35.420
You can manage directly the LUNs,
the computers, the volumes, the mounts.

00:02:35.420 --> 00:02:37.720
It's much easier to
set up and administer.

00:02:37.720 --> 00:02:43.270
And we've also added support for
pre-tuned file system configurations.

00:02:43.270 --> 00:02:47.330
So whether you're doing high-definition
video or smaller files like in a file

00:02:47.370 --> 00:02:50.670
server or a mail server scenario,
it's very easy to get maximum

00:02:50.680 --> 00:02:52.520
performance out of your SAN.

00:02:52.700 --> 00:02:53.780
Thank you.

00:02:54.570 --> 00:02:56.650
And finally, XAMPP 2 supports Spotlight.

00:02:56.750 --> 00:03:00.400
So now, even with a massive SAN,
you can use the features within Leopard,

00:03:00.420 --> 00:03:05.650
such as Spotlight, CoverFlow, QuickLooks,
to search for data by content

00:03:05.650 --> 00:03:07.640
and access it in your SAN.

00:03:07.790 --> 00:03:09.320
So that's XAMPP 2.

00:03:09.340 --> 00:03:12.490
So that's a quick recap of some of the
updates we've made in the past few months

00:03:12.490 --> 00:03:14.560
in the server and storage products.

00:03:14.670 --> 00:03:16.750
And while we've been doing this,
some of our developers

00:03:16.750 --> 00:03:18.150
have also been busy,
and I want to do a

00:03:18.210 --> 00:03:20.940
quick developer update,
some key activity that's

00:03:20.940 --> 00:03:22.600
been going on there.

00:03:22.600 --> 00:03:24.850
You may remember back
in January at Macworld,

00:03:24.910 --> 00:03:28.010
we had two developers that
demonstrated virtualization of

00:03:28.010 --> 00:03:32.280
Mac OS X Server in a virtual machine,
Parallels and VMware.

00:03:32.340 --> 00:03:36.420
And since then, Parallels has announced
Parallels Server for Mac.

00:03:36.490 --> 00:03:39.070
It supports virtualization
of Mac OS X Server,

00:03:39.240 --> 00:03:42.610
along with other guest OSes,
such as Windows Server or Linux Server,

00:03:42.610 --> 00:03:44.070
running on the Apple hardware.

00:03:44.340 --> 00:03:46.760
It fully supports
symmetric multiprocessing,

00:03:46.760 --> 00:03:50.020
so you can assign up to four
virtual cores to a virtual machine,

00:03:50.020 --> 00:03:52.600
and it has full 64-bit support
for the guest OSes as well.

00:03:52.600 --> 00:03:56.000
And this is currently in beta right now.

00:03:56.510 --> 00:03:58.660
And many of you, I'm sure,
are familiar with VMware as well.

00:03:58.660 --> 00:04:02.300
They're used throughout the Fortune 100
for virtualizing server infrastructure,

00:04:02.430 --> 00:04:06.540
and they have also demonstrated support
for virtualizing Mac OS X Server.

00:04:06.610 --> 00:04:10.940
They have full support for SMP and
full support for 64-bit guest OSes.

00:04:11.050 --> 00:04:14.880
And VMware plans to release support
for virtualizing Mac OS X Server in

00:04:14.910 --> 00:04:17.900
their upcoming Fusion 2 release.

00:04:18.390 --> 00:04:20.600
We've also been working
closely with another developer,

00:04:20.600 --> 00:04:26.000
IBM, as they bring their products
to the Mac OS X platform.

00:04:26.070 --> 00:04:29.380
And so I'd like to invite
David Barnes to the stage.

00:04:29.450 --> 00:04:32.430
And David Barnes is from the
Software Development Group at IBM,

00:04:32.430 --> 00:04:34.780
and he's going to tell you more about
some of the work they've been doing.

00:04:34.780 --> 00:04:35.810
Thank you, sir.

00:04:36.020 --> 00:04:36.380
Right.

00:04:36.380 --> 00:04:38.330
Thank you very much.

00:04:40.390 --> 00:04:45.960
So I have to say that every time I meet
with a group of Apple developers,

00:04:45.960 --> 00:04:50.230
I feel closer and closer every
time and never so much as

00:04:50.500 --> 00:04:53.300
today because in IBM today,
let me tell you that

00:04:53.800 --> 00:04:55.630
I'm a Mac user in IBM.

00:04:55.630 --> 00:04:59.120
My vice president is a Mac user in IBM.

00:04:59.120 --> 00:05:02.460
I'm helping a general
manager switch in IBM.

00:05:02.460 --> 00:05:05.300
And if you don't know,
GMs in IBM are way out there.

00:05:05.370 --> 00:05:08.350
And most importantly,
my entire development team

00:05:08.650 --> 00:05:10.280
develops on the Mac platform.

00:05:10.300 --> 00:05:14.040
And not just for Mac products, cool,
but across our middleware

00:05:14.460 --> 00:05:17.390
portfolio as well,
which is really sweet because that's

00:05:17.460 --> 00:05:19.570
where we make a lot of our money.

00:05:19.570 --> 00:05:22.710
So there's a definite
change that's taking place.

00:05:22.710 --> 00:05:27.080
And it is really evident in the fact
that we have our enterprise customers,

00:05:27.180 --> 00:05:30.240
our very biggest customers
coming to us and saying,

00:05:30.240 --> 00:05:33.900
will you please start developing
on this platform and helping

00:05:33.900 --> 00:05:38.080
us move what's typically the
enterprise towards this platform.

00:05:38.080 --> 00:05:40.080
So that's good news for all of us.

00:05:40.230 --> 00:05:42.610
And that's because of the
opportunity that's there.

00:05:42.680 --> 00:05:46.820
The thing I want to mention today,
one of many things actually,

00:05:46.900 --> 00:05:51.810
is that we have recently shipped Informix
dynamic server for this platform,

00:05:51.990 --> 00:05:53.450
for the Mac platform.

00:05:53.570 --> 00:05:56.260
Now, if you're not familiar with it,
the first thing about it,

00:05:56.260 --> 00:05:57.970
it is modular and highly scalable.

00:05:57.970 --> 00:06:01.210
And I mean,
you can start out with a little database.

00:06:01.330 --> 00:06:04.960
You can scale up to literally
hundreds of thousands of users.

00:06:04.960 --> 00:06:07.770
The reliability of that
is built into the DNA.

00:06:07.770 --> 00:06:10.100
And it's been that way with
Informix for a long time.

00:06:10.150 --> 00:06:11.000
And it's been that way with
Informix for a long time.

00:06:11.000 --> 00:06:11.200
And it's been that way with
Informix for a long time.

00:06:11.200 --> 00:06:12.990
It's got a very loyal following.

00:06:13.060 --> 00:06:16.850
And so things like replication,
redundancy, et cetera,

00:06:16.910 --> 00:06:18.170
don't worry about it.

00:06:18.280 --> 00:06:19.390
It's not bolted down the side.

00:06:19.390 --> 00:06:20.090
It's in there.

00:06:20.100 --> 00:06:24.770
Something that's important to this group
also is that it's terrific for being able

00:06:24.770 --> 00:06:31.020
to feed different rich content sources,
rich multimedia, video, audio, et cetera,

00:06:31.020 --> 00:06:34.180
along with the normal database functions,
if you will.

00:06:34.180 --> 00:06:37.810
And the last thing,
and this is really very Apple and

00:06:37.890 --> 00:06:40.000
Apple developer related,
is we have a lot of people who

00:06:40.000 --> 00:06:40.000
are really interested in this.

00:06:40.000 --> 00:07:04.720
And that's what we've just
announced that is available now.

00:07:04.720 --> 00:07:07.340
But I'll tell you that that's not
all you're going to see from IBM.

00:07:07.340 --> 00:07:09.900
When people in the
organization found out that.

00:07:09.900 --> 00:07:11.240
I was going to come and talk to you.

00:07:11.240 --> 00:07:12.710
They're like, ooh, show my stuff.

00:07:12.840 --> 00:07:13.640
Ooh, show my stuff.

00:07:13.710 --> 00:07:15.130
And I'm like, ooh, no.

00:07:15.260 --> 00:07:20.700
So and that is both on this platform,
on the Mac platform,

00:07:20.700 --> 00:07:24.370
on OS X and the server platform,
and on the iPhone platform.

00:07:24.510 --> 00:07:28.540
So across IBM's software group,
you'll see us developing products.

00:07:28.590 --> 00:07:30.440
Remember, we don't make applications.

00:07:30.480 --> 00:07:33.650
We make products to enable
you to be able to develop,

00:07:33.760 --> 00:07:37.370
to reach out to a new enterprise
that's asking us all to

00:07:37.370 --> 00:07:39.260
help them catch the wave.

00:07:39.420 --> 00:07:39.800
So thank you.

00:07:39.800 --> 00:07:42.200
Thank you very much for
Apple for having me here.

00:07:42.200 --> 00:07:43.900
And I hope you all have
a great conference.

00:07:43.910 --> 00:07:44.400
Thanks.

00:07:53.730 --> 00:07:58.040
So that was a quick update of our
server product and also of the developer

00:07:58.040 --> 00:07:59.700
activity that's been going on recently.

00:07:59.740 --> 00:08:04.710
And so now let's turn our attention to
Mac OS X Server and the upcoming release.

00:08:04.790 --> 00:08:07.780
And today we're announcing
Snow Leopard Server.

00:08:07.780 --> 00:08:10.470
In addition to inheriting the
enhancements that you just heard about

00:08:10.480 --> 00:08:14.240
in the previous session in Snow Leopard,
we also have a few features

00:08:14.240 --> 00:08:15.480
that are coming up.

00:08:15.530 --> 00:08:17.450
And specifically,
we're doing a few things.

00:08:17.490 --> 00:08:19.700
We're enhancing the OS foundations.

00:08:19.750 --> 00:08:23.200
We've got some new features that we're
adding in the user-level services.

00:08:23.220 --> 00:08:25.720
And we've got some exciting
updates with Podcast Producer to

00:08:25.760 --> 00:08:27.170
tell you about as well.

00:08:27.250 --> 00:08:30.030
So first of all, to start off with,
to talk about our enhancements

00:08:30.130 --> 00:08:33.640
to the OS foundations,
I'm going to bring up Kazu Yanagihara.

00:08:33.650 --> 00:08:35.130
Kazu?

00:08:39.920 --> 00:08:40.980
Thank you, Greg.

00:08:41.080 --> 00:08:42.140
Good afternoon.

00:08:42.200 --> 00:08:45.210
So I'm going to talk about three
foundation technology areas today.

00:08:45.210 --> 00:08:47.340
And let's start with 64-bit.

00:08:47.400 --> 00:08:52.810
We started our transition to 64-bit
in Leopard Server and ported some

00:08:52.880 --> 00:08:56.110
of our services to 64-bit already.

00:08:56.310 --> 00:08:58.690
and in Snow Leopard Server,
we're moving the rest of

00:08:58.690 --> 00:09:00.070
the services to 64-bit.

00:09:00.280 --> 00:09:04.480
So everything from mail server,
file services, podcast producer,

00:09:04.610 --> 00:09:06.500
X Grid and on and on.

00:09:06.560 --> 00:09:10.860
And combined with the new 64-bit
kernel and the rest of the base OS,

00:09:10.930 --> 00:09:13.930
the Snow Leopard Server is
going to be the whole thing

00:09:13.980 --> 00:09:16.530
is going to be the 64-bit OS.

00:09:16.640 --> 00:09:17.880
So why we care about this stuff?

00:09:18.000 --> 00:09:20.070
Well, let's take a look.

00:09:20.860 --> 00:09:24.740
The most obvious one is the
much larger address space.

00:09:24.810 --> 00:09:27.340
So for those services that
manipulate a lot of data,

00:09:27.510 --> 00:09:30.500
such as Informix Dynamics
Server that Dave just mentioned,

00:09:30.610 --> 00:09:34.040
they can store more data in
the memory and avoid disk IO,

00:09:34.240 --> 00:09:36.690
which costs about 200 times
more than accessing memory.

00:09:36.690 --> 00:09:40.200
So those services can fetch
and serve those information to

00:09:40.200 --> 00:09:42.200
the client much more quickly.

00:09:42.910 --> 00:09:45.870
Number two,
making system calls on a 64-bit

00:09:45.880 --> 00:09:47.950
system is much more efficient.

00:09:47.950 --> 00:09:49.670
So services that make
a lot of system calls,

00:09:49.680 --> 00:09:54.510
like some of our web components,
can benefit by moving to 64-bit.

00:09:54.940 --> 00:09:57.340
Number three is computation.

00:09:57.570 --> 00:10:01.470
32-bit systems have access to
four general purpose registers,

00:10:01.480 --> 00:10:04.800
while 64-bit software gets 16,
four times as many.

00:10:04.980 --> 00:10:07.460
Any software that makes
heavy computation,

00:10:07.460 --> 00:10:10.710
like data encryption
algorithms or HPC applications,

00:10:10.800 --> 00:10:17.130
can get a pretty big boost by moving
to 64-bit and running on 64-bit OS.

00:10:17.840 --> 00:10:22.180
And the last one is a 64-bit
kernel is going to allow us to

00:10:22.180 --> 00:10:25.240
increase some of our OS limitations.

00:10:25.240 --> 00:10:28.100
For example,
the maximum number of processes that we

00:10:28.110 --> 00:10:30.940
have today is around 2,500 on Leopard.

00:10:30.940 --> 00:10:34.890
And we really couldn't up that much
higher with kernel running in 32-bit.

00:10:34.950 --> 00:10:38.100
But in Snow Leopard Server,
we're going to be able to double, triple,

00:10:38.100 --> 00:10:39.960
maybe quadruple that.

00:10:39.960 --> 00:10:41.300
So that's going to help the
performance and scalability of

00:10:41.300 --> 00:10:43.770
certain types of server applications.

00:10:43.800 --> 00:10:46.620
So those are the four great reasons
why performance and scalability-wise

00:10:46.620 --> 00:10:49.590
that we care and we are so excited
about this 64-bit transition.

00:10:51.510 --> 00:10:54.440
And speaking of performance,
that's our second topic.

00:10:54.470 --> 00:10:56.540
But before we talk about
Snow Leopard Server,

00:10:56.570 --> 00:10:59.580
I want to talk a bit about
how we did in Leopard Server.

00:11:01.790 --> 00:11:04.150
So what we did in the Leopard
Server project is we looked at

00:11:04.230 --> 00:11:07.840
each of the subcomponents of OS and
really optimized them for that

00:11:07.920 --> 00:11:09.580
new Intel hardware architecture.

00:11:09.730 --> 00:11:15.410
We implemented tons of
features throughout the system,

00:11:15.450 --> 00:11:17.760
some examples here.

00:11:20.470 --> 00:11:22.000
Here's the result.

00:11:22.120 --> 00:11:25.500
So comparing to Tiger Server,
we tripled performance.

00:11:25.500 --> 00:11:29.160
So that was a lot of hard work,
but it really paid off.

00:11:29.480 --> 00:11:32.700
Now, let's see what we're doing
in Snow Leopard Server.

00:11:32.780 --> 00:11:36.380
Our number one goal is
multi-core scalability.

00:11:36.380 --> 00:11:39.250
We are already up to eight cores and
the numbers continue to increase,

00:11:39.440 --> 00:11:43.930
so it's critical that both our OS as
well as server software can scale and

00:11:43.930 --> 00:11:46.960
scale to tens or even hundreds of cores.

00:11:47.050 --> 00:11:49.790
And in addition to all this
optimization we're doing,

00:11:49.790 --> 00:11:53.620
we're also introducing new technologies
like ground central dispatch so

00:11:53.620 --> 00:11:57.040
we can facilitate the massive
polarization of all the tasks.

00:11:57.790 --> 00:12:04.580
Another thing we are doing is we have
this performance list to-do list that we

00:12:04.580 --> 00:12:06.020
didn't get to finish in Leopard Server.

00:12:06.020 --> 00:12:08.560
So here are some examples from that list.

00:12:08.690 --> 00:12:11.300
So we are basically going down
the list and implementing them.

00:12:11.300 --> 00:12:14.380
Many of them are already in Snow Leopard
while the rest are still coming.

00:12:14.380 --> 00:12:18.230
So at this point, with these changes in,
what I want to do is take a

00:12:18.230 --> 00:12:21.800
look at how our server software
is doing on top of this new OS,

00:12:21.800 --> 00:12:23.930
which you have on your DVD as well.

00:12:25.210 --> 00:12:29.040
So bringing back our web server example,
since Leopard Server,

00:12:29.040 --> 00:12:32.680
our performance already
improved by 53%. So not bad.

00:12:32.840 --> 00:12:36.100
Here's the NFS number.

00:12:36.600 --> 00:13:06.800
[Transcript missing]

00:13:08.250 --> 00:13:10.200
The next topic is file system update.

00:13:10.290 --> 00:13:15.640
So as most of you know,
our primary file system is HFS.

00:13:15.770 --> 00:13:18.800
And we've been improving
this file system for years.

00:13:18.840 --> 00:13:22.070
We've added support for journaling,
I believe in Jaguar.

00:13:22.070 --> 00:13:24.880
And then we added support
for case sensitivity.

00:13:24.880 --> 00:13:27.920
And most recently, we added ACL support.

00:13:28.160 --> 00:13:30.820
So at this point,
it's a very solid and mature

00:13:30.820 --> 00:13:34.160
file system that meets needs
of most of our customers.

00:13:34.160 --> 00:13:35.390
And most, but not all.

00:13:35.390 --> 00:13:38.160
So let's take a quick look
at something else here.

00:13:39.810 --> 00:13:43.150
This is the storage capacity
trend in terms of terabytes.

00:13:43.450 --> 00:13:46.700
So as you can see here,
the graph is growing exponentially

00:13:46.700 --> 00:13:50.510
and our high-end customers have
all these huge file system volumes

00:13:50.580 --> 00:13:52.490
that they have to deal with.

00:13:53.220 --> 00:13:55.760
If you look at our hardware
that we ship on high end,

00:13:55.820 --> 00:14:00.380
both the Pro lines and Server line,
they can both accommodate three or

00:14:00.380 --> 00:14:03.680
four internal drives as well as we
can attach external rate system.

00:14:03.680 --> 00:14:06.820
So our customers really need some
kind of tool that they can use

00:14:06.820 --> 00:14:08.470
to manage all these spindles.

00:14:08.580 --> 00:14:12.890
And while HFS is an excellent
file system that's suitable for

00:14:12.890 --> 00:14:17.390
consumers and most of desktop needs,
it really wasn't designed for the

00:14:17.730 --> 00:14:21.310
high-end configurations with lots
of spindles and large volumes.

00:14:22.300 --> 00:14:25.250
But there is a file system
that was designed specifically

00:14:25.250 --> 00:14:27.740
for those configurations,
and that's GFS.

00:14:27.740 --> 00:14:30.470
So today,
I'm happy to announce that we're

00:14:30.470 --> 00:14:34.510
including the full read-write
version of GFS in Snow Leopard,

00:14:34.530 --> 00:14:37.120
both on the desktop and server side.

00:14:45.740 --> 00:14:47.960
So both in the desktop
and the server side,

00:14:48.050 --> 00:14:50.540
and along with HFS,
we can cover the full spectrum

00:14:50.550 --> 00:14:52.160
of the customer needs.

00:14:52.180 --> 00:14:54.360
So we're pretty excited about this.

00:14:54.360 --> 00:14:57.270
And for those of you who are new to ZFS,
let's take a quick

00:14:57.270 --> 00:14:58.940
look at what it can do.

00:15:00.560 --> 00:15:04.500
It's a 128-bit file system, not 64,
but 128.

00:15:04.500 --> 00:15:07.450
And it's very scalable.

00:15:07.680 --> 00:15:13.140
This is the maximum number of files
that you can have on a ZFS file system.

00:15:13.180 --> 00:15:15.420
And it's kind of hard to comprehend
this scientific notation,

00:15:15.520 --> 00:15:17.930
so let me help you with this.

00:15:19.440 --> 00:15:24.460
If you create 1,000 files every second,
it's going to take you over half a

00:15:24.470 --> 00:15:27.200
million years to reach that limit.

00:15:28.850 --> 00:15:31.520
So it's going to take our
QA team a while to test this.

00:15:31.520 --> 00:15:34.810
I don't know if you can
ship this next year.

00:15:35.440 --> 00:15:37.500
Here's another number.

00:15:37.750 --> 00:15:39.370
This is the maximum volume size.

00:15:39.400 --> 00:15:41.400
16 exabytes.

00:15:41.400 --> 00:15:43.300
Sounds really impressive.

00:15:43.320 --> 00:15:46.910
So if you have a volume of this
size and if you want to fill it,

00:15:46.920 --> 00:15:51.410
you need over 1.9 billion disk
image files of dual-layer DVD.

00:15:51.470 --> 00:15:54.080
So it's a great movie collection here.

00:15:54.980 --> 00:15:58.210
So it's a very scalable file system,
and we don't have to worry about

00:15:58.350 --> 00:16:00.590
hitting the ceiling anytime soon.

00:16:01.130 --> 00:16:04.590
It also has support for redundancy,
so if one of those drives goes,

00:16:04.640 --> 00:16:08.650
something goes wrong with those drives,
you still have access to your data.

00:16:09.720 --> 00:16:11.820
does automatic error
detection and correction,

00:16:11.820 --> 00:16:13.590
so normal running FSCK manually.

00:16:13.760 --> 00:16:19.450
Of course,
has support for snapshots and clones.

00:16:21.420 --> 00:16:24.300
And also has really nice
volume management capabilities

00:16:24.390 --> 00:16:25.600
built right into it.

00:16:25.600 --> 00:16:27.780
So, for example,
if your volume is getting full,

00:16:27.850 --> 00:16:31.290
you can simply attach another hard
disk to dynamically grow that volume.

00:16:31.290 --> 00:16:34.220
So it's a real handy
feature for the servers.

00:16:36.110 --> 00:16:37.880
So also there's dynamic striping.

00:16:37.880 --> 00:16:41.950
The bits are written out in stripes
to all the spindles that's out there

00:16:42.270 --> 00:16:45.200
so we can get the most performance
out of your system without actually

00:16:45.200 --> 00:16:47.170
doing any manual configuration.

00:16:47.220 --> 00:16:50.470
And there are many other features
that's built into this file system.

00:16:50.570 --> 00:16:54.140
Things like compression support
and variable block sizes and so on.

00:16:54.200 --> 00:16:56.380
So we're really excited about this
and we're looking forward to running

00:16:56.380 --> 00:16:58.040
our server software on top of this.

00:16:58.040 --> 00:17:01.540
And that's my update on
the foundation layer.

00:17:01.880 --> 00:17:05.880
So the Snow Leopard Server,
it's gonna be fully 64-bit.

00:17:05.880 --> 00:17:08.350
And the performance is looking
pretty good so far and we're

00:17:08.350 --> 00:17:09.820
gonna continue to work on this.

00:17:09.820 --> 00:17:11.880
And welcome to GFS.

00:17:12.210 --> 00:17:16.250
And now what I wanna do is invite
Chris LeCroy to the stage so he

00:17:16.260 --> 00:17:19.460
can tell us about the enhanced
services in Snow Leopard Server.

00:17:19.490 --> 00:17:22.200
Chris.

00:17:26.000 --> 00:17:27.870
So thank you, Kazu.

00:17:27.940 --> 00:17:31.360
So Kazu told you about some great
foundational things we're doing in the

00:17:31.360 --> 00:17:34.540
operating system for Snow Leopard Server.

00:17:34.540 --> 00:17:37.070
And I want to talk about some
of our collaborative services,

00:17:37.070 --> 00:17:39.840
specifically communications
and collaboration.

00:17:40.720 --> 00:17:44.080
So in Leopard Server,
we released a new Wiki server,

00:17:44.080 --> 00:17:47.120
which was also involved,
included a blog server,

00:17:47.120 --> 00:17:50.350
group mailing lists
and group web calendar.

00:17:50.400 --> 00:17:52.910
And we put a lot of work into making
it really easy for people to use.

00:17:52.970 --> 00:17:56.730
End users can easily create their own
Wikis without any administrator help.

00:17:56.800 --> 00:18:00.560
Editing is just a matter of clicking
buttons and dealing with the very

00:18:00.560 --> 00:18:02.600
easy-to-use WYSIWYG environment.

00:18:02.620 --> 00:18:05.440
We made it really easy to
attach documents and images

00:18:05.520 --> 00:18:07.180
into Wiki pages and so on.

00:18:07.180 --> 00:18:10.280
And so in Snow Leopard Server,
we want to simplify that even more.

00:18:10.360 --> 00:18:13.340
And actually, before I move on,
one thing that did happen is

00:18:13.340 --> 00:18:16.420
as we deployed this at Apple,
we had what effectively was an

00:18:16.420 --> 00:18:18.000
explosion of Wikis at Apple.

00:18:18.000 --> 00:18:20.790
And it's really become the primary
way we get work done at Apple in

00:18:20.790 --> 00:18:24.160
terms of working on projects,
dealing with departmental issues.

00:18:24.180 --> 00:18:27.300
There are even clubs at
Apple that have set up Wikis.

00:18:27.300 --> 00:18:28.400
So we use it really heavily.

00:18:28.400 --> 00:18:31.960
And it's been actually really nice to be
able to have a customer that basically

00:18:31.960 --> 00:18:35.430
sits right next to us and we can
actually listen to those future requests.

00:18:35.560 --> 00:18:37.180
So with that said,
we are going to do some things

00:18:37.180 --> 00:18:40.000
in Snow Leopard Server to make
the Wiki server more accessible.

00:18:40.000 --> 00:18:41.300
So we're going to make the
Wiki server even better.

00:18:41.300 --> 00:18:45.330
So first is we're going to make
it even simpler to create Wikis.

00:18:45.380 --> 00:18:48.060
This is probably an exaggeration.

00:18:48.060 --> 00:18:49.850
I don't think my mom actually
knows what a Wiki is,

00:18:49.990 --> 00:18:53.080
but if she did know what a Wiki was,
it will be something

00:18:53.080 --> 00:18:54.270
she'll be able to set up.

00:18:54.470 --> 00:18:58.290
So we're moving all the
Wiki creation directly into the web,

00:18:58.480 --> 00:19:00.620
which means that you'll no longer
have to launch the separate

00:19:00.630 --> 00:19:02.220
directory app to create a Wiki.

00:19:02.220 --> 00:19:05.030
And you'll be able to walk through
a very simple setup assistant,

00:19:05.330 --> 00:19:07.380
answer a couple of questions,
customize your Wiki,

00:19:07.380 --> 00:19:09.640
and in literally a minute or two,
you'll have a Wiki up and running.

00:19:09.640 --> 00:19:12.490
up and running and
customized for your needs.

00:19:12.840 --> 00:19:17.230
Second thing we found out at Apple is
that with all of the wikis across Apple,

00:19:17.230 --> 00:19:20.300
it can be difficult to
find things sometimes.

00:19:20.430 --> 00:19:24.300
So if I remember a phrase but I'm
not quite sure which wiki it was in,

00:19:24.300 --> 00:19:27.610
I have to go from wiki to wiki
performing searches to find

00:19:27.740 --> 00:19:29.280
the document I'm looking for.

00:19:29.460 --> 00:19:30.300
Well, we're fixing that.

00:19:30.300 --> 00:19:32.410
We're going to give you a single
location for doing a query,

00:19:32.450 --> 00:19:36.470
and that query will cause the wiki
server to send back results from

00:19:36.470 --> 00:19:39.300
all of the wiki servers that you
have access to in one location.

00:19:39.300 --> 00:19:42.300
So we think that'll be a very
big time saver for people.

00:19:42.310 --> 00:19:44.290
So that's cross-wiki searching.

00:19:44.930 --> 00:19:48.460
Next is support for
QuickLooks on the Wiki server.

00:19:48.460 --> 00:19:51.370
So as I mentioned,
the Wiki server makes it very

00:19:51.370 --> 00:19:53.960
easy to upload any kind of
document into a Wiki page,

00:19:53.960 --> 00:19:58.570
but the problem there is that web
browsers only know how to view and render

00:19:58.890 --> 00:20:02.980
certain types of documents like JPEGs and
HTML and maybe PDFs if it's Safari.

00:20:03.860 --> 00:20:08.250
So what happens is people end up having
to download those Keynote files or those

00:20:08.250 --> 00:20:11.560
Numbers files so that they can open them
up in an application and look at them.

00:20:11.560 --> 00:20:14.840
So what we're going to do is put
QuickLook support in the Wiki server,

00:20:14.910 --> 00:20:17.090
which means that when
I upload a Keynote file,

00:20:17.090 --> 00:20:20.280
upload a Numbers file or a Pages
file or any other type of file,

00:20:20.280 --> 00:20:25.100
the Wiki server will automatically render
a web-compatible version of that document

00:20:25.100 --> 00:20:28.440
that can be viewed directly in the Wiki,
directly in the web

00:20:28.440 --> 00:20:30.140
browser on any platform.

00:20:30.140 --> 00:20:32.240
So I think that'll be
a great boon to people.

00:20:38.650 --> 00:20:44.840
And another problem that we've found with
so many wikis at Apple is that wikis,

00:20:44.840 --> 00:20:47.380
one of the features of wikis
is that you want to be able to

00:20:47.380 --> 00:20:48.620
monitor what's happening on them.

00:20:48.620 --> 00:20:51.020
So you want to be able to
look for recent changes,

00:20:51.080 --> 00:20:52.560
see which new pages have shown up.

00:20:52.640 --> 00:20:55.190
Maybe see which pages have
been commented because it may

00:20:55.190 --> 00:20:56.860
require some action on your part.

00:20:57.140 --> 00:21:00.790
So we're introducing in Snow Leopard
Server a new feature called My Page,

00:21:00.790 --> 00:21:04.500
which is essentially an aggregation
of all of the changes happening across

00:21:04.500 --> 00:21:06.550
all of the wikis that you care about.

00:21:06.550 --> 00:21:08.580
So you'll be able to go to one place,
one page,

00:21:08.660 --> 00:21:11.590
see all of the new pages that have
been added to wikis you care about,

00:21:11.590 --> 00:21:13.760
any pages that have changed
that you care about,

00:21:13.760 --> 00:21:16.340
any comments on wikis
that you've changed about.

00:21:16.340 --> 00:21:19.210
And then from there,
take actions such as maybe

00:21:19.210 --> 00:21:22.810
adding them into your favorite
pages or actually going over

00:21:22.820 --> 00:21:24.980
and editing the pages some more.

00:21:24.980 --> 00:21:27.110
So again, this will be a big time
saver for organizations.

00:21:27.140 --> 00:21:30.050
organizations where wikis
were really taking off.

00:21:31.220 --> 00:21:34.320
And then lastly,
we're going to do a great deal of

00:21:34.320 --> 00:21:36.010
work in optimizing for the iPhone.

00:21:36.120 --> 00:21:38.970
So the existing Wiki server does
pretty well with the iPhone,

00:21:38.970 --> 00:21:42.280
but what we want to do is take
advantage of all of the new features

00:21:42.410 --> 00:21:48.860
coming to the iPhone in Safari,
make the pages load blazingly fast.

00:21:48.860 --> 00:21:52.380
We're changing the interaction so
it interacts much like the iPhone.

00:21:52.380 --> 00:21:55.880
And we think that the combination
of optimized for iPhone,

00:21:55.910 --> 00:22:00.170
quick looks on the Wiki and My Page are
going to give you the ability to walk,

00:22:00.170 --> 00:22:03.310
to be anywhere in the world and
get to all of the data in your

00:22:03.360 --> 00:22:06.100
organization in a way that's very,
very simple.

00:22:07.200 --> 00:22:08.420
So that's it for Wiki Server.

00:22:08.420 --> 00:22:11.140
I want to talk about the
communications tool that you

00:22:11.140 --> 00:22:12.310
guys probably all use the most.

00:22:12.430 --> 00:22:13.860
In fact, I'm sure you use it the most.

00:22:13.900 --> 00:22:15.480
And that's Mail Server.

00:22:15.480 --> 00:22:19.410
So Leopard Server contains a
very full-featured Mail Server,

00:22:19.460 --> 00:22:24.830
standards-based SMTP, IMAP, POP,
includes some very nice virus filtering

00:22:24.830 --> 00:22:27.600
and junk mail filtering features.

00:22:27.600 --> 00:22:30.340
And it's really just a really
nice workhorse of a server.

00:22:30.680 --> 00:22:32.930
So for Snow Leopard Server,
we're doing a few things.

00:22:33.030 --> 00:22:35.750
Number one is we're
improving the performance.

00:22:35.750 --> 00:22:38.380
We're doing a complete
overhaul of the engine,

00:22:38.380 --> 00:22:41.610
runs the Mail Server,
and we're going to really ramp up the

00:22:41.610 --> 00:22:46.360
number of concurrent connections it can
handle and make the thing really scale.

00:22:46.360 --> 00:22:47.520
And we think it'll really scream.

00:22:47.520 --> 00:22:48.570
So we're excited about that.

00:22:50.410 --> 00:22:55.990
Next, the long-standing feature request,
which is vacation auto replies.

00:22:58.260 --> 00:23:01.000
So end users will be able to
specify a start date and an

00:23:01.000 --> 00:23:02.640
end date for out of the office.

00:23:02.640 --> 00:23:05.600
The server will automatically take
care of sending emails off to people,

00:23:05.600 --> 00:23:08.950
letting people, responding to emails,
letting people know that those

00:23:08.950 --> 00:23:09.890
people are out of the office.

00:23:09.980 --> 00:23:11.950
That'll all be automatic.

00:23:12.680 --> 00:23:17.960
Next is server-side mailing rules.

00:23:18.100 --> 00:23:21.150
If you're anything like me,
you probably subscribe to

00:23:21.200 --> 00:23:23.060
far too many mailing lists.

00:23:23.060 --> 00:23:25.410
Because of that,
you've set up a lot of rules on your

00:23:25.680 --> 00:23:30.240
client to shuttle those mailing list
mails off into separate directories.

00:23:30.240 --> 00:23:31.710
That works fine when
you're on your Macintosh,

00:23:31.710 --> 00:23:33.800
but when you move to things
like webmail or the iPhone,

00:23:33.890 --> 00:23:37.000
those messages begin to
come into your main inbox,

00:23:37.000 --> 00:23:41.400
which can make it really difficult
to get through your mail.

00:23:41.400 --> 00:23:44.860
Side-mail rules will allow users
to set up rules on the server that

00:23:44.910 --> 00:23:47.180
will do that shuttling for them.

00:23:47.180 --> 00:23:49.480
And before the mail even hits the client,
the server will have put it into the

00:23:49.480 --> 00:23:50.770
appropriate directories for them.

00:23:52.620 --> 00:23:53.930
So that's mail.

00:23:53.990 --> 00:23:57.810
And next I'd like to
move on to iCal Server.

00:24:00.230 --> 00:24:04.040
So iCal Server is a new service
we added in Leopard Server.

00:24:04.040 --> 00:24:06.200
It's a full calendaring
and scheduling service,

00:24:06.210 --> 00:24:09.540
allows you to create
meetings and invite people.

00:24:09.760 --> 00:24:11.700
It's an open source project.

00:24:11.700 --> 00:24:13.960
We open sourced it as part of
Mac OS Forge as well as having

00:24:13.960 --> 00:24:15.490
it in our commercial product.

00:24:15.490 --> 00:24:17.100
And it's completely standards-based.

00:24:17.100 --> 00:24:19.600
It's based on a standard called CalDAV.

00:24:19.650 --> 00:24:21.550
And before I get into the features,
I want to talk a little

00:24:21.550 --> 00:24:22.490
bit about that standard.

00:24:22.560 --> 00:24:28.600
So the developers of -- or the authors of
the CalDAV spec did something very smart.

00:24:28.740 --> 00:24:31.560
They took two existing standards,
WebDAV and iCalendar,

00:24:31.560 --> 00:24:35.620
and basically mashed them
together to create a new spec.

00:24:35.640 --> 00:24:40.470
And the value in that is this,
that they could focus on calendaring

00:24:40.480 --> 00:24:42.060
and the details of calendaring.

00:24:42.060 --> 00:24:44.910
They didn't have to worry about
things like access controls,

00:24:44.910 --> 00:24:49.220
which WebDAV supports, or authentication,
which WebDAV supports, or a data format,

00:24:49.220 --> 00:24:50.800
which iCalendar supports.

00:24:50.800 --> 00:24:52.220
They could really focus on calendaring.

00:24:52.220 --> 00:24:54.710
So the benefit there was that
they were able to get the

00:24:54.730 --> 00:24:58.100
spec written very quickly,
get developers on board very quickly.

00:24:58.710 --> 00:25:00.750
And get it pushed through the
standards bodies very quickly.

00:25:00.760 --> 00:25:04.410
And speaking of the standards body,
I want to talk just really briefly

00:25:04.410 --> 00:25:07.500
about an organization that really
helped to drive that standard through.

00:25:07.500 --> 00:25:12.610
The IETF, and that is the Calendaring
and Scheduling Consortium,

00:25:12.610 --> 00:25:13.710
or CalConnect.

00:25:14.130 --> 00:25:19.970
It's a consortium of companies and
universities and other organizations.

00:25:20.030 --> 00:25:21.870
Apple's a member.

00:25:22.100 --> 00:26:24.500
[Transcript missing]

00:26:24.740 --> 00:26:25.820
First is performance.

00:26:26.020 --> 00:26:28.720
So like Mail Server and
many of the other services,

00:26:28.810 --> 00:26:31.160
we're putting a great deal
of effort into improving the

00:26:31.210 --> 00:26:33.090
performance of the calendar server.

00:26:33.210 --> 00:26:35.100
And back in Cupertino,
we've already seen some

00:26:35.100 --> 00:26:36.160
really great improvements.

00:26:36.290 --> 00:26:39.260
And by the time Snow Leopard ships,
we expect to see even more.

00:26:39.260 --> 00:26:41.700
And so we're going to really make
this into something that can really

00:26:41.700 --> 00:26:42.980
scale to large organizations.

00:26:44.840 --> 00:26:48.940
Next is about push notifications,
which is a little bit

00:26:48.940 --> 00:26:50.070
related to performance.

00:26:50.210 --> 00:26:51.550
You can clap.

00:26:51.760 --> 00:26:55.550
All you push notification freaks.

00:26:56.180 --> 00:26:59.400
So, as I mentioned,
CalDAV is based on WebDAV.

00:26:59.660 --> 00:27:01.690
WebDAV is based on HTTP.

00:27:01.810 --> 00:27:05.810
Well, HTTP is a polling protocol,
which means that client

00:27:05.830 --> 00:27:08.090
asks for something,
the server returns it.

00:27:08.210 --> 00:27:09.640
Client asks for something,
server returns it.

00:27:09.640 --> 00:27:14.210
The server never really has a way
to go and push things to the server.

00:27:15.820 --> 00:27:19.380
We are adding push notifications,
which will eliminate all this pulling.

00:27:19.380 --> 00:27:22.660
The problem with this is that it
puts a lot of loads on servers.

00:27:22.660 --> 00:27:25.420
When you get thousands of
clients continually asking,

00:27:25.420 --> 00:27:26.500
is there anything new?

00:27:26.500 --> 00:27:29.480
And in calendaring, it's never,
and it's rarely new.

00:27:29.480 --> 00:27:31.720
99.9% of the time, it's not.

00:27:31.720 --> 00:27:35.740
We all get maybe a handful of meeting
invitations a day if we're really busy.

00:27:38.720 --> 00:27:54.720
But it puts an enormous
amount of strain on servers.

00:27:54.800 --> 00:27:54.800
So push notifications
will take care of that.

00:27:54.800 --> 00:27:54.800
And while taking the
strain off the servers,

00:27:54.800 --> 00:27:54.800
we'll give you near instantaneous
invitations or you'll get near

00:27:54.800 --> 00:27:54.800
instantaneous invitations.

00:27:55.100 --> 00:27:57.790
Invitations and changes in your client.

00:27:57.890 --> 00:28:02.930
You won't have to wait for them like
you do when you do with polling.

00:28:05.910 --> 00:28:07.740
And then next,
when we released iCal Server,

00:28:07.740 --> 00:28:12.510
there was one big feature request,
and that was a web-based calendar client.

00:28:12.520 --> 00:28:17.780
Because CalDAV is a very new protocol,
there's only one shipping server,

00:28:17.780 --> 00:28:20.820
which is iCal Server,
and one shipping client, which is iCal.

00:28:20.820 --> 00:28:24.240
That makes it very difficult in
a cross-platform environment.

00:28:24.240 --> 00:28:28.920
So we're going to be shipping a web-based
calendar client in Snow Leopard Server.

00:28:28.920 --> 00:28:31.860
It's going to be a full CalDAV client.

00:28:31.860 --> 00:28:34.980
You'll be able to do everything you
can do in a normal CalDAV client.

00:28:35.960 --> 00:28:39.040
It's going to be very AJAX-y and very,
very rich application.

00:28:39.040 --> 00:28:43.260
And we think this is actually going to
really help drive the standard forward.

00:28:45.160 --> 00:28:47.100
because we plan to open
source that as well.

00:28:47.140 --> 00:28:50.360
So it'll be available to people
to put on their platforms and

00:28:50.360 --> 00:28:53.990
help drive the standard forward.

00:28:58.800 --> 00:29:01.100
A little push happy.

00:29:01.100 --> 00:29:03.920
The last thing for calendaring
server I want to talk about is

00:29:03.920 --> 00:29:06.200
the ability to invite anyone.

00:29:06.200 --> 00:29:09.600
So the way the CalDAV spec works,
in order for me to invite you,

00:29:09.600 --> 00:29:11.580
you need to be a member
of that CalDAV server.

00:29:11.580 --> 00:29:16.800
So we're adding support for inviting
people outside the CalDAV server.

00:29:16.800 --> 00:29:20.760
What that means is that you'll be able
to drag somebody from your address book,

00:29:20.760 --> 00:29:22.980
for example,
and the server will determine

00:29:22.990 --> 00:29:26.600
automatically if it's somebody who's
got an account on the CalDAV server

00:29:26.680 --> 00:29:28.610
or not or if they've got an email.

00:29:28.860 --> 00:29:32.430
If it's email, they'll email it off
to them automatically.

00:29:32.540 --> 00:29:36.100
If clients are using mail clients
such as Outlook or Apple Mail,

00:29:36.100 --> 00:29:39.640
those clients will automatically send
it off to their calendaring clients,

00:29:39.640 --> 00:29:44.960
and the whole process will be very
transparent and I think work very well.

00:29:44.960 --> 00:29:47.360
So that'll be coming from
Snow Leopard server for iCal server.

00:29:49.100 --> 00:29:52.430
So, I'd like to talk,
those are new features we're

00:29:52.430 --> 00:29:56.600
adding to existing servers,
services, and I want to talk about two

00:29:56.600 --> 00:29:57.940
new services that we're adding.

00:29:57.940 --> 00:30:01.540
So the first one is Address Book Server.

00:30:07.520 --> 00:30:09.660
So what does Address
Book Server allow you to do?

00:30:09.660 --> 00:30:12.660
It basically allows you to take all of
those contacts that you keep locally

00:30:12.660 --> 00:30:16.000
right now and move them up to a server,
which means that they're now

00:30:16.000 --> 00:30:18.890
on the network and you can
get to them from anywhere.

00:30:19.130 --> 00:30:22.840
In addition to that,
because they're on a server,

00:30:22.850 --> 00:30:25.700
you can also very easily share
your contacts with your colleagues

00:30:25.880 --> 00:30:29.620
by just dragging them into folders
and making that folder shared.

00:30:29.850 --> 00:30:34.400
Again, we like to deal in standards.

00:30:34.400 --> 00:30:36.900
And again,
the developers of this standard

00:30:36.900 --> 00:30:40.370
we're using took advantage
of two existing standards,

00:30:40.470 --> 00:30:43.470
WebDAV again, and on the other side,
vCard, and came up with a

00:30:43.550 --> 00:30:45.470
protocol called CardDAV.

00:30:45.970 --> 00:30:52.780
CardDAV is basically a
mashup of WebDAV and vCard.

00:30:52.820 --> 00:30:56.030
Some of you may be asking, well,
why not use things like LDAP or

00:30:56.030 --> 00:30:57.640
other directory services?

00:30:57.640 --> 00:30:59.760
There are some pretty
good reasons for that.

00:30:59.790 --> 00:31:02.780
CardDAV is designed specifically
to be a global address book.

00:31:02.850 --> 00:31:06.270
One reason is that it doesn't
contain IT-sensitive data.

00:31:06.340 --> 00:31:10.220
LDAP servers contain user accounts,
possibly authentication information,

00:31:10.220 --> 00:31:14.900
all sorts of things that directory
administrators do not want intermingled

00:31:14.970 --> 00:31:17.280
with data that users have created.

00:31:17.280 --> 00:31:21.140
The second thing is the access
controls in LDAP are not all that rich,

00:31:21.140 --> 00:31:24.740
especially if you want to be able
to do very fine-grained sharing

00:31:24.740 --> 00:31:26.960
of your contacts with colleagues.

00:31:26.960 --> 00:31:30.560
And because CardDAV uses
WebDAV... There's a very,

00:31:30.720 --> 00:31:32.960
very rich access control
model already there.

00:31:32.960 --> 00:31:37.410
Another problem with things like
LDAP is if you ever need to add

00:31:37.410 --> 00:31:41.550
a new attribute onto a contact,
for example,

00:31:41.620 --> 00:31:45.190
a Jabber ID or an OpenID URL,
which the LDAP schemas

00:31:45.300 --> 00:31:48.390
probably don't know about,
the only way to really do that is to

00:31:48.390 --> 00:31:50.560
update your LDAP schema on the server.

00:31:50.560 --> 00:31:53.320
You'll probably have to also
update it on your LDAP client,

00:31:53.460 --> 00:31:56.100
and that's not something
people are ever going to do.

00:31:56.100 --> 00:31:59.020
So vCards don't have a fixed schema.

00:31:59.260 --> 00:32:02.440
They're specifically designed
to allow extension by anybody.

00:32:02.440 --> 00:32:06.000
So an end user can add a new attribute,
and everything will work just fine.

00:32:06.000 --> 00:32:07.260
No schema change is needed.

00:32:07.260 --> 00:32:11.190
And the last thing is that because
it's built on top of WebDAV,

00:32:11.230 --> 00:32:16.370
which, as I mentioned, is HTTP,
makes this protocol very web-compatible.

00:32:16.380 --> 00:32:19.630
So that means that people who are
writing rich web applications can

00:32:19.630 --> 00:32:22.820
get into this data and use their
standard JavaScript and standard

00:32:22.820 --> 00:32:24.940
HTTP methods to get to all this data.

00:32:24.940 --> 00:32:27.910
They don't need a gateway to
LDAP or anything like that.

00:32:27.920 --> 00:32:31.260
So it's going to be... We're
expecting to see a lot of people use

00:32:31.260 --> 00:32:35.450
this protocol to build some very,
very rich collaborative social

00:32:35.450 --> 00:32:37.250
applications on the web.

00:32:37.960 --> 00:32:39.280
So enough protocol.

00:32:39.280 --> 00:32:42.240
I'd like to ask Juussi-Pekka Mantere
to come up and give you a very

00:32:42.240 --> 00:32:45.700
brief demo of Address Book Server.

00:32:45.700 --> 00:32:46.700
Thank you, Chris.

00:32:46.700 --> 00:32:52.440
All right.

00:32:52.440 --> 00:32:53.300
Thank you, Chris.

00:32:53.370 --> 00:32:56.200
So if we can go to demos, please.

00:32:59.500 --> 00:35:24.600
[Transcript missing]

00:35:25.530 --> 00:35:28.780
And let's see,
I also have multiple accounts here.

00:35:28.860 --> 00:35:30.680
So I don't have just a single server.

00:35:30.680 --> 00:35:34.400
I have configured a second server,
just like you would have multiple

00:35:34.400 --> 00:35:36.100
accounts with Mail or iCal.

00:35:36.100 --> 00:35:39.120
You can have multiple accounts
with the address book for several

00:35:39.120 --> 00:35:40.850
different address book servers.

00:35:40.920 --> 00:35:43.650
So here I have one address book
server that is specifically

00:35:43.650 --> 00:35:45.220
for the developer conference.

00:35:45.280 --> 00:35:47.440
So I have different groups here.

00:35:47.500 --> 00:35:51.500
One is for the speaker support team,
our graphics people who are

00:35:51.500 --> 00:35:54.930
helping us complete our slides,
and a second group for

00:35:54.930 --> 00:35:56.750
the presentation team.

00:35:56.760 --> 00:36:00.620
So here I have a pool of contacts
that I stay in touch with for

00:36:00.770 --> 00:36:03.280
the duration of the conference.

00:36:03.280 --> 00:36:08.280
And I noticed that there's a person
missing from this list of contacts.

00:36:08.280 --> 00:36:10.760
And I seem to have a vCard for Zoe.

00:36:10.920 --> 00:36:15.890
So for me to edit this list of contacts,
I can just drag Zoe's contact

00:36:15.890 --> 00:36:20.230
into the shared address book,
and it's immediately available to anyone

00:36:20.230 --> 00:36:22.440
else using the same address book server.

00:36:22.440 --> 00:36:25.700
And any updates that I do are
also pushed back to the server,

00:36:25.800 --> 00:36:28.920
and anyone connecting to that
server again will get the

00:36:28.920 --> 00:36:31.040
most up-to-date information.

00:36:31.040 --> 00:36:34.820
So I can actually edit Zoe's contact,
and let's say we want

00:36:34.820 --> 00:36:36.340
to add her a picture.

00:36:36.440 --> 00:36:38.640
So we can just drag her picture in here.

00:36:38.640 --> 00:36:40.620
And we can also change her name.

00:36:40.760 --> 00:36:44.290
So we can change her,
let's say give her a chatber

00:36:44.460 --> 00:36:46.760
ID on our iChat server here.

00:36:46.970 --> 00:36:53.360
So let's call it Zoe@chat, WWDC,
Apple.com.

00:36:53.370 --> 00:36:53.870
And that's it.

00:36:53.940 --> 00:36:57.560
So any edits that I just made
will now be pushed to the server,

00:36:57.560 --> 00:37:01.510
and other clients will get that
immediately downloaded when they

00:37:01.510 --> 00:37:03.920
connect to the server the next time.

00:37:04.060 --> 00:37:05.480
So this is address book server.

00:37:05.590 --> 00:37:08.960
And another thing with address book
server with the accounts is that these

00:37:09.270 --> 00:37:10.360
contacts are stored for a certain time.

00:37:10.360 --> 00:37:12.360
So they're stored for offline use.

00:37:12.360 --> 00:37:14.880
So even if I'm disconnected
from the network,

00:37:14.880 --> 00:37:18.100
any contacts that I see here
are actually cached for offline.

00:37:18.450 --> 00:37:23.080
So even when I'm not on the network,
I'm on the plane or on a remote island,

00:37:23.080 --> 00:37:25.360
I still have these
contacts accessible to me.

00:37:25.360 --> 00:37:29.660
So I can still at least compose
email or let's say send SMS messages

00:37:29.940 --> 00:37:34.080
to the contacts that I have when
they're cached for offline use.

00:37:34.360 --> 00:37:36.780
So that's a brief overview
of the address book server,

00:37:36.780 --> 00:37:38.360
and we have a session tomorrow.

00:37:38.360 --> 00:37:40.080
So if you want to know more about that,
please do.

00:37:40.080 --> 00:37:42.970
If you want to know more details
about the address book server,

00:37:42.970 --> 00:37:45.080
please come to our session at 2:00.

00:37:45.100 --> 00:37:47.080
And that's it.

00:37:47.080 --> 00:37:47.960
And back to Chris.

00:37:48.420 --> 00:37:49.080
Thank you.

00:37:57.900 --> 00:38:01.640
The address book server allows you
to put your contacts on a server.

00:38:01.640 --> 00:38:03.260
You can share them with people.

00:38:03.260 --> 00:38:05.410
It works when you're offline
and it works with other

00:38:05.410 --> 00:38:06.800
applications within the system.

00:38:06.800 --> 00:38:09.840
And in the vein of
driving standards again,

00:38:09.840 --> 00:38:13.850
again we're going to open source
this project because we really

00:38:13.850 --> 00:38:16.760
want to drive card data as the
standard for global address books.

00:38:22.810 --> 00:38:26.580
And the last new feature I'd like
to talk about is remote access.

00:38:26.580 --> 00:38:30.220
So we're adding a new proxy
service into Mac OS X Server for

00:38:30.220 --> 00:38:34.120
Snow Leopard that will allow you
to configure your system so that

00:38:34.150 --> 00:38:38.240
people can connect to their email,
their calendaring system,

00:38:38.240 --> 00:38:41.130
their address book server,
select websites without

00:38:41.130 --> 00:38:43.100
VPN in a very secure fashion.

00:38:43.100 --> 00:38:48.160
This is a service you would generally
put into your DMZ or your border zone.

00:38:48.160 --> 00:38:51.100
That'll be coming in
Snow Leopard as well.

00:38:52.650 --> 00:38:54.180
So.

00:38:55.510 --> 00:38:58.710
We've talked about some new features
coming to our existing servers,

00:38:58.840 --> 00:39:01.260
the Wiki server,
Mail server and the Calendar server,

00:39:01.260 --> 00:39:02.380
getting some great new features.

00:39:02.380 --> 00:39:07.460
And we have two new services
to Snow Leopard server,

00:39:07.460 --> 00:39:09.400
the Address Book server,
which will be open sourced and

00:39:09.400 --> 00:39:12.090
completely standards-based,
and our new remote access

00:39:12.090 --> 00:39:14.560
functionality in Snow Leopard server.

00:39:14.560 --> 00:39:16.610
That's all I've got today,
and thank you for

00:39:16.670 --> 00:39:17.960
letting me talk with you.

00:39:17.960 --> 00:39:21.200
And I'd like to bring Kazu back
up to talk about... I need to wait

00:39:21.350 --> 00:39:23.520
for Kazu to get his microphone on.

00:39:23.520 --> 00:39:23.820
There he is.

00:39:25.000 --> 00:39:28.000
To talk about some very exciting
things happening with Podcast Producer.

00:39:28.060 --> 00:39:29.980
Thank you, guys.

00:39:37.210 --> 00:39:39.190
Hello again.

00:39:39.380 --> 00:39:42.580
So, podcast producer.

00:39:42.580 --> 00:39:44.800
It's a new feature we introduced
in Leopard Server last year,

00:39:44.800 --> 00:39:46.960
but before we talk about it,
I want to talk a little bit

00:39:46.960 --> 00:39:48.150
about podcasting in general.

00:39:48.150 --> 00:39:49.550
It's background information.

00:39:49.550 --> 00:39:53.830
How many of you listen
to or watch podcasts?

00:39:55.380 --> 00:39:57.400
Pretty good, right?

00:39:57.400 --> 00:40:00.640
So you're one of those 30.3
million people in the US.

00:40:00.670 --> 00:40:02.950
So as you can see here,
the popularity of podcasting is

00:40:03.030 --> 00:40:05.480
continuing to grow at a really good pace.

00:40:05.480 --> 00:40:08.080
And more and more people
are producing podcasts.

00:40:08.110 --> 00:40:10.620
Certainly in all the major
media companies are doing that,

00:40:10.620 --> 00:40:12.620
more and more of that.

00:40:12.620 --> 00:40:15.770
And there are some new ones
that's becoming really popular.

00:40:16.470 --> 00:40:20.230
Enterprises uses podcasting for both
external communication to the public

00:40:20.280 --> 00:40:24.180
as well as for internal consumption for
things like employee training videos.

00:40:24.180 --> 00:40:26.140
And many companies are
starting to do that.

00:40:26.200 --> 00:40:28.180
And of course,
it's really exploding in higher

00:40:28.180 --> 00:40:30.840
education with all the students
carrying iPods everywhere.

00:40:30.840 --> 00:40:34.800
And here at Apple, we are fully embracing
this technology as well.

00:40:34.800 --> 00:40:38.790
We, of course, have podcasting built
right into the iTunes app.

00:40:38.840 --> 00:40:42.790
And we've created a dedicated
forum for podcasting for the

00:40:42.790 --> 00:40:45.190
higher education communities.

00:40:46.100 --> 00:40:48.020
So it's really at the
core of Apple's business.

00:40:48.020 --> 00:40:52.060
On the hardware front,
every single system that we

00:40:52.090 --> 00:40:56.440
ship is podcasting-ready,
the Macintosh, iPods, iPhone, Apple TV.

00:40:56.440 --> 00:40:59.980
But in this big picture,
there was one thing that was missing,

00:40:59.980 --> 00:41:04.900
and that's a tool that businesses
and institutions could use to produce

00:41:04.920 --> 00:41:09.410
podcasts in volume while meeting all
these requirements around scalability,

00:41:09.500 --> 00:41:12.440
security, flexibility to fit into
existing infrastructure,

00:41:12.440 --> 00:41:13.800
and so on.

00:41:15.080 --> 00:41:16.430
And podcasts produced a field that whole.

00:41:16.440 --> 00:41:21.310
It's a complete end-to-end solution that
lets you capture audio and video and

00:41:21.590 --> 00:41:24.530
automatically push it out to the server,
which in turn pushes it down

00:41:24.720 --> 00:41:26.360
to the grid for processing.

00:41:26.360 --> 00:41:29.620
It does things like adding watermarks,
appending intro movie,

00:41:29.620 --> 00:41:32.740
and encoding into different
file formats and screen sizes.

00:41:32.740 --> 00:41:35.850
And when that's done,
it automatically gets pushed out

00:41:35.920 --> 00:41:40.300
to the destinations of your choice,
which may be iTunes or Web Server,

00:41:40.300 --> 00:41:42.560
Wikiserver,
or any other publishing system.

00:41:42.560 --> 00:41:46.850
And while that's under the hood,
it's really powerful and sophisticated.

00:41:46.860 --> 00:41:48.720
It's really easy for the end-user.

00:41:48.720 --> 00:41:52.020
All they need to do is just a few
clicks to start and stop the recording.

00:41:52.020 --> 00:41:55.150
You select the workflow, click OK,
and that's it.

00:41:55.180 --> 00:41:59.100
When the processing is done,
the podcast is available to the end-user

00:41:59.100 --> 00:42:00.780
for their own consumption automatically.

00:42:00.780 --> 00:42:04.580
So this feature was received
very well by our customers,

00:42:04.580 --> 00:42:08.280
especially those in higher education,
and many of them are deploying it today.

00:42:08.280 --> 00:42:11.920
And what I'm going to do now
is to invite a guest speaker,

00:42:11.920 --> 00:42:12.210
Mr.

00:42:12.240 --> 00:42:14.610
James Partridge from Oxford,
so he can tell us about the

00:42:14.610 --> 00:42:14.960
features that we're using.

00:42:14.960 --> 00:42:18.000
about what they are doing as
podcast producer at Oxford.

00:42:18.000 --> 00:42:19.470
James?

00:42:24.200 --> 00:43:36.900
[Transcript missing]

00:43:38.230 --> 00:43:41.460
So after evaluating a
number of different options,

00:43:41.460 --> 00:43:46.970
we've settled on Podcast Producer because
we feel that it provides us with

00:43:46.970 --> 00:43:49.920
the flexibility that we really
need within this environment.

00:43:49.920 --> 00:43:54.970
The extensible architecture of
Podcast Producer integrates quite well,

00:43:54.970 --> 00:43:57.960
very quite easily into our environment.

00:43:57.960 --> 00:44:02.710
So what we're doing is we're
concentrating on Podcast Producer and

00:44:02.710 --> 00:44:08.080
Telestream's episode podcast as our
kind of core media production engine.

00:44:08.100 --> 00:44:15.740
And this leaves us to focus on the entry
and exit points for Podcast Producer.

00:44:15.740 --> 00:44:19.360
And in order to do this,
we're using our existing

00:44:19.440 --> 00:44:22.760
Open AFS service,
which we've now extended with a

00:44:22.760 --> 00:44:25.020
kind of special podcasting space.

00:44:25.020 --> 00:44:28.320
And as this uses the
MIT KDC for authentication,

00:44:28.320 --> 00:44:33.840
this gives us the closest we can get to
a kind of university-wide access point.

00:44:35.990 --> 00:44:38.640
So, very broadly speaking,
and this is of course simplified,

00:44:38.640 --> 00:44:41.100
this is how we expect
the process to work.

00:44:41.180 --> 00:44:45.800
So, content can be captured from any one
of a number of different sources.

00:44:45.800 --> 00:44:49.790
There's going to be plenty of lecturers
who are often giving tutorials.

00:44:49.800 --> 00:44:53.960
They're in their own offices and rooms,
and they'll be doing their own system.

00:44:53.960 --> 00:44:56.260
And we also have
classroom capture points,

00:44:56.380 --> 00:44:57.100
of course.

00:44:57.100 --> 00:45:00.960
And then we'd have material from
our media production services,

00:45:00.960 --> 00:45:03.480
which is usually very
high-profile speakers.

00:45:03.940 --> 00:45:07.830
the Dalai Lama a week or two back,
that kind of thing.

00:45:10.000 --> 00:45:12.100
Now,
all of this content is essentially going

00:45:12.100 --> 00:45:14.940
to be dumped into the Open AFS system.

00:45:14.940 --> 00:45:17.840
We expect this content
to come in several forms.

00:45:17.840 --> 00:45:21.140
It'll be up to people where possible.

00:45:21.140 --> 00:45:25.900
They'll pick a workflow that will
output things the way they want.

00:45:25.900 --> 00:45:29.920
Or an alternative would be that they
would submit a finished podcast.

00:45:29.920 --> 00:45:33.480
Or we also expect people to
just give us the raw materials,

00:45:33.480 --> 00:45:38.020
and we'll have a post-production
team in the computing service

00:45:38.020 --> 00:45:38.830
who will work on that.

00:45:43.840 --> 00:45:47.130
Now, in terms of the destinations
for this content,

00:45:47.340 --> 00:45:50.060
essentially we see three
possible paths at the moment.

00:45:50.060 --> 00:45:54.020
The first one is that we anticipate that,
well, we know, in fact,

00:45:54.100 --> 00:45:59.690
that a reasonable number of colleges and
departments will just want the material

00:45:59.690 --> 00:46:05.000
recycled back to their own web servers
for their own internal departmental use.

00:46:06.760 --> 00:46:09.640
A second alternative is
what we call Oxitems,

00:46:09.640 --> 00:46:13.060
which is essentially our own
internal RSS feed aggregator.

00:46:13.060 --> 00:46:18.670
We built this before we really knew
that iTunes U was coming to Europe,

00:46:18.680 --> 00:46:21.580
but it's still very
useful for our purposes.

00:46:21.580 --> 00:46:28.010
If content is submitted to Oxitems,
there'll also be another option that

00:46:28.010 --> 00:46:30.970
it can be sent to iTunes U as well.

00:46:35.160 --> 00:46:37.650
As things currently stand,
we've got a large part of this

00:46:37.670 --> 00:46:41.430
infrastructure already in place and
we'll be extending it through the summer,

00:46:41.550 --> 00:46:43.600
we hope, resources permitting.

00:46:45.090 --> 00:46:48.110
There's training programs
already underway,

00:46:48.200 --> 00:46:49.340
particularly aimed at the faculty.

00:46:49.340 --> 00:46:52.610
Some of our faculty are
fairly elderly and infirm,

00:46:52.620 --> 00:46:54.040
and they require quite a lot of support.

00:46:54.100 --> 00:46:57.640
And some of the students, too.

00:46:57.640 --> 00:47:02.300
And so we've got training
programs in place,

00:47:02.300 --> 00:47:05.590
and where possible,
we'll be putting in podcasting stations

00:47:05.590 --> 00:47:10.790
in lecture rooms and trying to push
that out across the university.

00:47:11.030 --> 00:47:15.480
We also already have a large number of
RSS feeds already in our Oxitem system.

00:47:15.480 --> 00:47:17.720
They're already available for students.

00:47:17.720 --> 00:47:20.900
And essentially,
we are planning to join iTunes

00:47:20.900 --> 00:47:22.420
U in September of this year.

00:47:22.420 --> 00:47:24.640
We just missed the initial launch.

00:47:24.640 --> 00:47:28.810
But once we join iTunes U,
then all of the existing feeds should

00:47:28.900 --> 00:47:30.410
be redirected up there as well.

00:47:30.420 --> 00:47:32.960
And all being well,
we'll hope to extend this

00:47:32.960 --> 00:47:34.980
service through 2009.

00:47:34.980 --> 00:47:36.530
Thank you very much.

00:47:45.360 --> 00:47:47.440
Thank you, James.

00:47:47.470 --> 00:47:49.840
So we are really thrilled with
all these activities happening

00:47:49.840 --> 00:47:52.940
around Podcast Producer and we
want to keep this momentum going.

00:47:52.950 --> 00:47:55.560
So what we are doing in
Snow Leopard Server is we are

00:47:55.560 --> 00:47:59.730
introducing Podcast Producer 2,
a brand new version of Podcaster

00:47:59.730 --> 00:48:01.830
with a bunch of new features.

00:48:02.680 --> 00:48:04.950
So, and I don't have time to
talk about everything,

00:48:04.960 --> 00:48:06.980
but I want to talk about a few of them.

00:48:06.980 --> 00:48:08.720
And by the way,
every single one of them that I'm going

00:48:08.720 --> 00:48:11.620
to talk about today is in response
to all this great feedback that we've

00:48:11.620 --> 00:48:13.600
been receiving from our customers.

00:48:14.890 --> 00:48:18.020
The first feature is
called Podcast Library.

00:48:18.020 --> 00:48:21.210
Podcast Producer 2 automatically
archives all the submitted

00:48:21.340 --> 00:48:24.680
and generated media files for
long-term storage and organization.

00:48:24.680 --> 00:48:27.480
And you can issue remote
search commands to it,

00:48:27.480 --> 00:48:31.290
and the library automatically
generates Atom Feed and also

00:48:31.470 --> 00:48:33.890
serves the podcast to you.

00:48:33.900 --> 00:48:37.200
So this means you no longer have to
have a separate publishing server.

00:48:37.200 --> 00:48:39.170
You can do everything
within Podcast Producer.

00:48:40.230 --> 00:48:43.990
And with this feature and integration
of Podcast Producer 2 and iTunes U,

00:48:44.230 --> 00:48:47.700
now you can host iTunes U content locally
on your own server instead of pushing

00:48:47.700 --> 00:48:49.090
it to the Apple server if you want to.

00:48:52.030 --> 00:48:54.600
The second feature is high availability.

00:48:54.600 --> 00:48:57.330
This is because many of our
customers deploy Podcast Producer as

00:48:57.330 --> 00:48:59.200
a mission-critical service.

00:48:59.200 --> 00:49:03.060
With Podcast Producer 2,
you can now configure active/passive

00:49:03.060 --> 00:49:06.500
failover configuration for both
Podcast Producer Server and

00:49:06.500 --> 00:49:07.770
X Grid Controller.

00:49:07.780 --> 00:49:09.970
So if you accidentally
spill coffee on your server,

00:49:10.020 --> 00:49:11.720
the backup automatically comes up.

00:49:11.720 --> 00:49:14.100
And then during the transition,
all the active jobs as well

00:49:14.100 --> 00:49:16.620
as all the pending jobs are
automatically moved over,

00:49:16.630 --> 00:49:20.120
so it's going to be completely
transparent to the end users.

00:49:24.000 --> 00:49:31.800
[Transcript missing]

00:49:32.900 --> 00:49:36.760
The most frequently used or usage
pattern for the podcast producer out

00:49:36.760 --> 00:49:39.190
there today is capturing lectures,
obviously.

00:49:39.320 --> 00:49:42.290
So with Podcast Producer 2,
you can capture both the video of

00:49:42.290 --> 00:49:46.250
the speaker and the presentation on
the screen and have it automatically

00:49:46.250 --> 00:49:48.080
create picture-in-picture videos.

00:49:48.080 --> 00:49:51.210
And of course,
you have the option to select different

00:49:51.210 --> 00:49:53.220
types of transitions and so on.

00:49:53.230 --> 00:49:55.450
And this is one of the most
frequently requested features,

00:49:55.460 --> 00:49:57.410
so here you go.

00:49:57.800 --> 00:50:03.690
The last but not the least,
Podcast Producer 2 includes

00:50:03.690 --> 00:50:05.250
a new workflow editor.

00:50:08.300 --> 00:50:32.200
[Transcript missing]

00:50:34.780 --> 00:50:37.300
So I'm really excited to be here,
to be able to show you the new

00:50:37.300 --> 00:50:39.460
Podcast Producer Workflow Editor.

00:50:39.530 --> 00:50:41.230
But before that,
I'd like to make sure that

00:50:41.250 --> 00:50:45.450
everybody's on the same page
about what a workflow actually is.

00:50:45.870 --> 00:50:48.200
So think of a podcast
producer workflow as a recipe.

00:50:48.300 --> 00:50:50.240
It's the podcasting recipe.

00:50:50.340 --> 00:50:53.820
So as in any recipe,
you have your list of ingredients.

00:50:53.930 --> 00:50:57.210
So these are the different resources
the podcast reader system uses

00:50:57.210 --> 00:50:59.940
to produce your final content.

00:51:00.020 --> 00:51:03.080
Examples are like an intro video
or a watermark image that you

00:51:03.090 --> 00:51:05.120
want to brand your content with.

00:51:05.570 --> 00:51:07.380
But in the recipe,
you don't just have ingredients.

00:51:07.500 --> 00:51:09.500
You also have instructions.

00:51:09.640 --> 00:51:12.690
Instructions are a list of tasks
that have to be accomplished in a

00:51:12.690 --> 00:51:15.490
certain order to produce your content.

00:51:15.560 --> 00:51:18.500
Same thing for podcast
producer workflows.

00:51:18.670 --> 00:51:20.940
The idea here is that you
also have order in them,

00:51:21.060 --> 00:51:21.500
right?

00:51:21.500 --> 00:51:23.490
So you have to do certain
tasks in a certain order.

00:51:23.550 --> 00:51:26.490
You can't bake your bread
before you've made your dough.

00:51:27.210 --> 00:51:30.470
There are tons of different tasks
that a podcast producer can do,

00:51:30.470 --> 00:51:33.360
but we've kind of brought them
down and broken it down into

00:51:33.530 --> 00:51:36.330
three main categories of tasks,
and I'm going to walk you

00:51:36.330 --> 00:51:37.720
through those right now.

00:51:38.030 --> 00:51:40.500
The first is mixing your content.

00:51:40.500 --> 00:51:43.250
This is where you have your intro video,
your watermark image,

00:51:43.330 --> 00:51:45.960
and you're just going to throw
it all together and produce your

00:51:45.960 --> 00:51:48.900
content and make what you want
your final result to look like.

00:51:48.900 --> 00:51:51.120
Once you have this, you have your dough.

00:51:51.120 --> 00:51:53.100
So then you want to bake it, right?

00:51:53.100 --> 00:51:56.680
So this is where you set the different
encoding settings and you encode your

00:51:56.680 --> 00:52:00.230
content to flatten out that content
to the different types you want to.

00:52:00.240 --> 00:52:03.300
For example, you might want to encode
to an audio-only format,

00:52:03.300 --> 00:52:06.860
an iPod video format, and maybe a higher
definition Apple TV format.

00:52:08.430 --> 00:52:10.460
Once you've baked your
content or you have your food,

00:52:10.460 --> 00:52:13.540
right, for any kind of food, well,
you have to serve it.

00:52:13.610 --> 00:52:14.940
So this is where the publishing comes in.

00:52:14.940 --> 00:52:16.800
You have to publish your content.

00:52:16.830 --> 00:52:20.460
So this might be putting it into
some RSS feed or an Atom feed or just

00:52:20.460 --> 00:52:23.010
uploading to a certain blog server.

00:52:23.760 --> 00:52:28.220
So to recap real quick,
you have to mix your content, bake it,

00:52:28.330 --> 00:52:30.040
and serve it.

00:52:30.040 --> 00:52:33.190
So this is what a podcast research
workflow actually looks like.

00:52:35.480 --> 00:52:38.320
So that's great, but let's see how we
can actually build one.

00:52:38.410 --> 00:52:39.190
So this is the fun part.

00:52:39.360 --> 00:52:43.700
Now I get to show you one of the most
exciting things I've ever worked on,

00:52:43.700 --> 00:52:45.380
which is the
Podcast Producer Workflow Editor.

00:52:45.380 --> 00:52:49.200
So we're going to move over
here to the demo machine,

00:52:49.200 --> 00:52:52.870
and I'm going to launch
the Workflow Editor.

00:52:54.490 --> 00:52:58.640
And you can see that we've now
created a workflow creation path.

00:52:58.720 --> 00:53:02.210
And we're going to walk you through
seven different stages in order to create

00:53:02.210 --> 00:53:04.400
your new podcast producer workflow.

00:53:04.460 --> 00:53:06.480
So I'm just going to walk you
through those now and show you

00:53:06.480 --> 00:53:08.230
how easy we've made it for you.

00:53:08.440 --> 00:53:10.400
I'm going to start off
with the information panel.

00:53:10.460 --> 00:53:14.560
And the first information I have
to give the workflow is its name.

00:53:14.630 --> 00:53:17.650
This is the name that is going
to end up in Podcast Capture and

00:53:17.650 --> 00:53:20.510
that your submitting users are
going to see when they choose the

00:53:20.510 --> 00:53:22.360
workflow they want to submit to.

00:53:22.440 --> 00:53:26.600
So we're going to call this
"My First Workflow." Can set

00:53:26.600 --> 00:53:28.440
some copyright information.

00:53:28.490 --> 00:53:32.480
Can give it a little description
to help the end users choose which

00:53:32.480 --> 00:53:34.520
workflow they want to submit to.

00:53:39.350 --> 00:53:41.460
Once we've done that,
we can now move to our

00:53:41.470 --> 00:53:42.690
first active stage.

00:53:42.700 --> 00:53:46.900
This, as I was just talking about,
we were talking about the

00:53:46.900 --> 00:53:48.200
mixing of your content.

00:53:48.240 --> 00:53:50.960
So we've broken this down
into two separate stages,

00:53:50.980 --> 00:53:52.960
the import stage and the edit stage.

00:53:52.960 --> 00:53:55.960
So in the first, in the import stage,
this is your funnel.

00:53:55.960 --> 00:53:59.950
This is where you define what kind
of content your podcast producer

00:53:59.950 --> 00:54:01.700
workflow is going to accept.

00:54:01.700 --> 00:54:05.770
It can either accept, as you see here,
a single QuickTime movie in

00:54:05.770 --> 00:54:08.700
SpotSource or two videos.

00:54:08.770 --> 00:54:13.700
The dual video input source is the
feature Kazir just talked about,

00:54:13.700 --> 00:54:16.200
that we now support picture-in-picture.

00:54:16.490 --> 00:54:18.970
Since it's a new feature,
I'm just going to leave

00:54:18.970 --> 00:54:20.220
that one selected.

00:54:20.610 --> 00:54:21.910
and move to the editing stage.

00:54:22.040 --> 00:54:24.500
This is where I get to brand my content.

00:54:24.630 --> 00:54:27.280
You can see that there are four
different elements here on the screen.

00:54:27.530 --> 00:54:31.500
We have the first, the intro video here.

00:54:31.640 --> 00:54:33.500
We then have the bumper title.

00:54:33.500 --> 00:54:37.200
We then have the main content that
I can overlay a watermark on or

00:54:37.200 --> 00:54:38.640
maybe some titling information.

00:54:38.640 --> 00:54:39.390
I'll show you that.

00:54:40.110 --> 00:54:43.150
And the outro video.

00:54:44.080 --> 00:54:48.400
So I really just want to change
real quickly the intro video.

00:54:48.400 --> 00:54:50.900
So I'm going to grab my
introduction video here,

00:54:50.950 --> 00:54:52.900
drop it onto the intro video element.

00:54:52.960 --> 00:54:54.900
And you can see here
that I can skim through,

00:54:54.900 --> 00:54:56.900
like in iPhoto,
I can skim through to get a preview

00:54:56.900 --> 00:54:59.660
of what the content in there is.

00:54:59.720 --> 00:55:02.100
My art department has also
supplied me with a watermark,

00:55:02.120 --> 00:55:04.560
and I'm just going to drag
and drop this onto my content,

00:55:04.600 --> 00:55:07.190
and now my content is watermarked.

00:55:08.540 --> 00:55:12.570
I showed you the skimming so I can skim
over these different elements to give

00:55:12.570 --> 00:55:15.200
me a preview of how they're playing.

00:55:15.200 --> 00:55:17.600
I also have the preview button here.

00:55:17.600 --> 00:55:19.800
So if I click this,
this will stitch all the different

00:55:19.800 --> 00:55:24.290
elements together and preview what the
main content will actually look like.

00:55:24.410 --> 00:55:29.730
The import stage is providing
some sample video of what this

00:55:29.740 --> 00:55:31.290
workflow will actually look like.

00:55:31.330 --> 00:55:34.950
So if I skim through here,
there's some sample content here too

00:55:35.020 --> 00:55:36.900
that shows me what it'll look like.

00:55:36.930 --> 00:55:38.560
And then if we skim all
the way here to the end,

00:55:38.560 --> 00:55:39.560
I get my outro video.

00:55:42.530 --> 00:55:44.900
So that's the editing stage.

00:55:44.900 --> 00:55:48.670
If we now move to the export stage,
this is where the baking that we

00:55:48.670 --> 00:55:50.860
were talking about just occurs.

00:55:50.920 --> 00:55:53.620
By default,
the workflow editor has chosen a iPod

00:55:53.620 --> 00:55:56.440
video format and an iPod audio format.

00:55:56.650 --> 00:56:00.360
So these are, by default,
the two export configurations

00:56:00.360 --> 00:56:01.610
that you'll have.

00:56:01.750 --> 00:56:07.430
But maybe I want to add maybe a
higher definition export setting.

00:56:07.520 --> 00:56:09.890
So all I have to do here
is click the plus button,

00:56:09.980 --> 00:56:15.900
choose QuickTime, choose, let's say,
Apple TV for here in the pop-up,

00:56:15.960 --> 00:56:16.580
and there you go.

00:56:16.790 --> 00:56:20.370
I've now added a encoding
to Apple TV in my workflow.

00:56:20.490 --> 00:56:24.560
So any--so all my output will
be outputted to iPod video,

00:56:24.600 --> 00:56:27.830
an audio only, and an Apple TV version.

00:56:28.400 --> 00:56:30.760
Once I'm done baking my content,
I can now move to the

00:56:30.760 --> 00:56:32.570
distribution of my content.

00:56:32.760 --> 00:56:34.840
So we've also broken this
down into two stages.

00:56:34.930 --> 00:56:38.800
You have your publish stage
and your notification stage.

00:56:38.890 --> 00:56:42.400
So publish, we're by default publishing
to the podcast library,

00:56:42.400 --> 00:56:45.400
which is a new feature
in Podcast Producer 2.

00:56:45.450 --> 00:56:49.860
But I also have a selection of
other destinations I can publish to.

00:56:49.910 --> 00:56:51.740
And in this case,
I want to publish to iTunes U,

00:56:51.740 --> 00:56:52.350
for example.

00:56:52.370 --> 00:56:54.860
So I'm just going to add iTunes U.

00:56:54.860 --> 00:56:58.690
Get to choose which produced
video I want to publish.

00:56:58.800 --> 00:57:01.700
We're going to choose the
Apple TV version here.

00:57:02.160 --> 00:57:05.240
Then asks me for some iTunes
U specific information.

00:57:05.240 --> 00:57:10.140
So my site address is
podcastproducer.apple.com.

00:57:10.190 --> 00:57:13.170
My tab ID is 2020.

00:57:13.170 --> 00:57:16.170
And then I just have to
enter my credentials.

00:57:16.920 --> 00:57:19.380
Once I've added this information,
I just click Done here,

00:57:19.410 --> 00:57:22.000
and now this workflow will
upload the Apple TV version to

00:57:22.000 --> 00:57:24.790
iTunes U for me automatically.

00:57:25.720 --> 00:57:29.500
Now that I'm done with my publish stage,
I can move on to notification.

00:57:29.520 --> 00:57:32.870
And by default here,
the Podcast Producer Workflow Editor will

00:57:32.890 --> 00:57:37.220
send an email to the administrator
and to the submitting user informing

00:57:37.220 --> 00:57:42.460
them that the Podcast Producer Workflow
has completed successfully.

00:57:42.460 --> 00:57:44.820
There are also other options,
like I can send an iChat

00:57:44.820 --> 00:57:47.070
message if I would want to.

00:57:47.900 --> 00:57:52.170
The last step here gives me a quick
overlook and an overview of my

00:57:52.170 --> 00:57:57.200
workflow and just a quick idea of
the complexity of this workflow.

00:57:57.490 --> 00:58:02.400
Now that I'm done here,
I can just go up to File, Save.

00:58:02.400 --> 00:58:05.900
The workflow editor now is
prompting me for a master password.

00:58:05.900 --> 00:58:09.890
What you saw in the iTunes U step,
we gave it some credential information.

00:58:09.900 --> 00:58:12.410
This is sensitive data that
we don't just want to have in

00:58:12.720 --> 00:58:14.400
clear text in the workflow.

00:58:14.400 --> 00:58:16.740
So we're going to encrypt
this information with a

00:58:16.740 --> 00:58:18.400
master password for you.

00:58:18.400 --> 00:58:20.900
So we'll just leave this password here.

00:58:21.060 --> 00:58:26.900
And I will save this to the desktop,
my first workflow.

00:58:28.910 --> 00:58:30.170
And we'll click save.

00:58:30.380 --> 00:58:32.640
And now the workflow is on my desktop.

00:58:32.750 --> 00:58:35.500
And that's great,
but now if I want to deploy my workflow,

00:58:35.500 --> 00:58:37.740
how do I get it up to the server?

00:58:37.830 --> 00:58:39.940
Well, you may have seen when
I was in file here,

00:58:39.960 --> 00:58:42.530
there is an upload workflow.

00:58:42.570 --> 00:58:46.670
By selecting this option,
I can now specify where my podcast

00:58:46.670 --> 00:58:51.280
producer server actually is,
a admin username and credentials,

00:58:51.410 --> 00:58:55.800
and my workflow will automatically be
deployed to the podcast producer system.

00:58:57.380 --> 00:59:01.240
So that's how easy it is to make a
workflow now with a workflow editor.

00:59:01.270 --> 00:59:05.670
What I'd like to show you now is
a sample output from the-- what is

00:59:05.670 --> 00:59:07.140
the sample output of this workflow.

00:59:07.210 --> 00:59:11.980
So we ran a video through this workflow,
and it's already on

00:59:11.980 --> 00:59:15.300
iTunes U waiting for us,
so why don't we just go there now.

00:59:15.310 --> 00:59:18.050
And I think it's in
History of Mathematics.

00:59:18.090 --> 00:59:20.060
So let's just access that page here.

00:59:20.070 --> 00:59:22.420
And I believe it was History of Pi.

00:59:22.460 --> 00:59:25.070
So let's just get that video here.

00:59:25.790 --> 00:59:28.820
And now in my History of
Mathematics playlist,

00:59:28.820 --> 00:59:29.700
I can play it back.

00:59:29.700 --> 00:59:35.040
So here you see the intro
video that we added.

00:59:35.040 --> 00:59:40.090
The bumper title.

00:59:45.900 --> 00:59:48.060
I want to talk to you today
about two of my favorite things,

00:59:48.100 --> 00:59:49.340
AppleScript and math.

00:59:49.400 --> 00:59:52.500
And when I was learning AppleScript,
I came across this list of

00:59:52.500 --> 00:59:54.400
predefined variables in the language.

00:59:54.400 --> 00:59:56.820
And one of them kind of left
off the page at me a little bit.

00:59:56.910 --> 00:59:57.400
I mean, really, pi?

00:59:57.400 --> 00:59:59.730
What is pi doing on a list of variables?

00:59:59.920 --> 01:00:02.400
It's not a variable, it's a constant.

01:00:02.400 --> 01:00:05.650
It's the ratio of the circumference
of a circle to the diameter of

01:00:05.650 --> 01:00:07.400
every circle in the universe.

01:00:07.410 --> 01:00:10.400
It's got the same value of pi, 3.14159.

01:00:10.400 --> 01:00:11.240
You know what it is.

01:00:11.440 --> 01:00:13.520
But in AppleScript,
AppleScript knows that,

01:00:13.520 --> 01:00:14.790
but you can also change it.

01:00:14.900 --> 01:00:17.280
And it finally occurred to me
that this might actually be

01:00:17.280 --> 01:00:18.810
useful in a couple of situations.

01:00:18.900 --> 01:00:22.900
For instance, depending on when and where
you're writing your AppleScripts,

01:00:22.910 --> 01:00:26.700
back in the day,
somebody created a molten sea that was

01:00:26.920 --> 01:00:29.400
30 cubits around and 10 cubits across.

01:00:29.520 --> 01:00:32.400
So if you were doing biblical
AppleScript programming,

01:00:32.500 --> 01:00:34.400
you might start off your
AppleScript like this.

01:00:34.610 --> 01:00:36.710
Set pi to 30 divided by 10.

01:00:36.890 --> 01:00:38.270
You want to move forward a little bit.

01:00:38.500 --> 01:00:42.200
In Indiana in 1897,
they unanimously passed a bill

01:00:42.210 --> 01:00:46.900
declaring that in Indiana,
the value of pi was going to be 3.2.

01:00:46.900 --> 01:00:50.900
So every AppleScript programmer back then
in Indiana started their script this way.

01:00:50.900 --> 01:00:52.900
Set pi to 3.2.

01:00:52.900 --> 01:00:55.900
So we're running out of time here,
so I'm just going to pause it here,

01:00:55.900 --> 01:00:59.000
and I encourage you to come
to our session on Wednesday,

01:00:59.000 --> 01:01:00.900
and we will play the whole video for you.

01:01:01.630 --> 01:01:04.260
So there you got a little preview
of what the picture-in-picture

01:01:04.260 --> 01:01:07.770
looks like and also how easy it
is to create a podcast producer

01:01:07.800 --> 01:01:09.490
workflow now with a workflow editor.

01:01:09.500 --> 01:01:10.940
So that's it.

01:01:11.020 --> 01:01:13.500
Thank you very much and back to you,
Kazu.

01:01:13.540 --> 01:01:21.410
Thank you, Kjell.

01:01:21.630 --> 01:01:24.150
Back to the presentation, please.

01:01:32.820 --> 01:01:36.180
Okay, so we've got very exciting feature
sets for Podcast Producer 2.

01:01:36.180 --> 01:01:41.040
We've got the Podcast Library,
failover support, and picture-in-picture,

01:01:41.040 --> 01:01:43.720
and the last one is the
visual workflow editor.

01:01:43.720 --> 01:01:46.280
But we do have a number of other
features that we just didn't

01:01:46.310 --> 01:01:47.860
have time to talk about today.

01:01:47.860 --> 01:01:52.210
For example, we do have complete Corvus
authentication support just for James.

01:01:52.220 --> 01:01:54.410
So if you're interested
in this technology,

01:01:54.410 --> 01:01:56.530
there are a few sessions
that are dedicated,

01:01:56.660 --> 01:01:57.900
as Kjell mentioned.

01:01:57.900 --> 01:02:01.460
On Wednesday at 9 o'clock,
we're going to talk about all the

01:02:01.520 --> 01:02:05.540
features of Podcast Producer 2 in detail,
including the one we didn't

01:02:05.540 --> 01:02:06.540
talk about today here.

01:02:06.540 --> 01:02:10.880
And on Thursday at 10.30,
Kjell and another engineer is going

01:02:10.880 --> 01:02:14.440
to talk about custom workflows,
and they have some really,

01:02:14.580 --> 01:02:15.740
really cool demos.

01:02:15.740 --> 01:02:17.460
So in fact,
they're so cool that they didn't want

01:02:17.460 --> 01:02:20.020
to do it here because they wanted
to keep it for their own session.

01:02:20.020 --> 01:02:22.200
So please go check them out.

01:02:22.220 --> 01:02:24.580
And that's all I had
for Podcast Producer,

01:02:24.580 --> 01:02:27.170
so now I'd like to give
the stage back to Greg.

01:02:27.220 --> 01:02:28.760
Thank you.

01:02:34.090 --> 01:02:35.130
Thanks, Kazu.

01:02:35.250 --> 01:02:36.830
So that's Snow Leopard Server.

01:02:36.960 --> 01:02:39.810
So just to recap,
we've enhanced the foundations,

01:02:39.960 --> 01:02:44.630
fully 64-bit,
even more performance in introducing ZFS.

01:02:44.730 --> 01:02:46.480
We have some great new
features in the Wiki,

01:02:46.480 --> 01:02:48.980
Mail Server and iCal Server,
and we've introduced the Address

01:02:49.050 --> 01:02:52.860
Book Server and Podcast Producer 2
with the Podcast Library,

01:02:52.940 --> 01:02:56.100
dual-source video and
easy workflow editing.

01:02:56.770 --> 01:02:58.580
There's a lot more that we're
going to be talking about these

01:02:58.620 --> 01:03:01.950
services throughout the week,
so please come to the sessions and labs.

01:03:02.070 --> 01:03:04.720
We hope to see you there,
and thank you all for attending.

01:03:04.720 --> 01:03:06.340
I hope you have a very good WWDC.