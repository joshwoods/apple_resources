WEBVTT

00:00:20.240 --> 00:00:21.800
Good afternoon, ladies and gentlemen.

00:00:21.810 --> 00:00:27.460
I'd like to welcome you to session 511,
iPhone configuration-- iPhone

00:00:27.460 --> 00:00:30.370
Management with Configuration Profiles.

00:00:32.320 --> 00:00:33.300
My name is Stan.

00:00:33.300 --> 00:00:37.620
I'm one of the guys who wrote
this piece of code and I'm going

00:00:37.620 --> 00:00:40.810
to go first through a few slides.

00:00:41.560 --> 00:00:43.190
What are you going to
learn in this session?

00:00:43.330 --> 00:00:46.950
We're going to be talking about
what configuration profiles

00:00:47.160 --> 00:00:48.640
are and how to use them.

00:00:48.690 --> 00:00:52.600
We're going to look at what we can
configure with configuration profiles.

00:00:52.640 --> 00:00:56.090
We're going to look
at the profile format.

00:00:56.350 --> 00:00:59.910
We're going to be talking and
actually showing you in a demo how

00:00:59.910 --> 00:01:02.380
to create configuration profiles.

00:01:02.380 --> 00:01:06.600
And eventually, we're going to also talk
about how to deploy a profile.

00:01:07.980 --> 00:01:11.180
So what are configuration profiles?

00:01:11.200 --> 00:01:16.620
Well, there are very small XML files that
contain information about how to

00:01:16.620 --> 00:01:20.330
configure an iPhone or an iPod Touch.

00:01:20.690 --> 00:01:24.030
They configure common,
yet potentially complex settings,

00:01:24.040 --> 00:01:27.730
such as VPN networking,
which would be really hard

00:01:27.730 --> 00:01:29.780
to do on the device itself.

00:01:30.080 --> 00:01:34.680
They can also enforce a specific
degree in security on the iPhone by

00:01:34.820 --> 00:01:39.850
imposing certain restrictions and
behavioral patterns on the user.

00:01:39.940 --> 00:01:42.190
They can install
credentials on the iPhone,

00:01:42.250 --> 00:01:46.430
such as certificates.

00:01:46.500 --> 00:01:48.970
They are not to be confused
with provisioning profiles.

00:01:49.000 --> 00:01:53.680
If you're here hoping to get
information about provisioning profiles,

00:01:53.690 --> 00:01:55.250
you're in the wrong session.

00:01:55.330 --> 00:01:58.330
This is purely about
configuration profiles.

00:01:59.260 --> 00:02:01.900
So what do configuration
profiles do for you?

00:02:01.940 --> 00:02:04.940
They can configure a series
of aspects of the phone.

00:02:05.090 --> 00:02:10.050
First of all, they can configure
Microsoft Exchange ActiveSync

00:02:10.500 --> 00:02:15.200
account settings,
passcode policies, credentials,

00:02:15.200 --> 00:02:20.370
certificates, VPN configuration and
Wi-Fi configuration,

00:02:20.460 --> 00:02:26.170
application access restrictions,
mail settings and APN settings.

00:02:26.280 --> 00:02:30.030
So let's go through all of those one by
one in detail and let's talk a little

00:02:30.200 --> 00:02:33.740
about how or what you can do with them.

00:02:33.820 --> 00:02:36.570
So first let's look at EAS.

00:02:37.510 --> 00:02:44.920
An EAS account is a Microsoft ActiveSync
push server that pushes email,

00:02:44.920 --> 00:02:50.300
calendars, and address book to the user,
or any subset of those three.

00:02:50.300 --> 00:02:53.940
It can also enforce a certain
level of security on the device.

00:02:53.940 --> 00:02:57.400
It can maintain a certain
degree of passcode strength.

00:02:57.400 --> 00:03:03.270
It can maintain a certain iPhone lock
that the phone will lock automatically

00:03:03.300 --> 00:03:05.100
after one minute of idle time,
et cetera.

00:03:05.620 --> 00:03:08.500
And it can also issue a remote
wipe command to the phone.

00:03:08.500 --> 00:03:12.020
So if the phone is lost,
you can remotely wipe it from the server.

00:03:12.020 --> 00:03:16.780
Next, we have passcode restrictions.

00:03:21.250 --> 00:03:26.450
Passcode restrictions allow you to
configure a similar set of restrictions,

00:03:26.510 --> 00:03:32.080
passcode requirements,
without actually using an EAS server.

00:03:32.080 --> 00:03:37.200
So it's the same passcode quality,
passcode expiration, et cetera.

00:03:37.200 --> 00:03:42.300
They are applied in conjunction
with your EAS settings.

00:03:42.300 --> 00:03:45.170
And therefore the policies will
be merged because it's possible

00:03:45.170 --> 00:03:48.920
that multiple profiles will have
different passcode policies specified

00:03:48.920 --> 00:03:54.740
or they might potentially conflict
with an EAS server specified policy.

00:03:54.740 --> 00:03:59.700
So let's have a look at
how this merging works.

00:03:59.700 --> 00:04:04.080
Let's look at, for instance,
example policy A requires at least

00:04:04.120 --> 00:04:09.080
six characters passcode and the
passcode to expire in 30 days.

00:04:09.080 --> 00:04:12.810
The policy B, say,
comes from a different profile,

00:04:12.830 --> 00:04:16.260
requires four characters PIN but
at least two special characters.

00:04:16.260 --> 00:04:16.260
So you can see that the policy
B requires four characters PIN but

00:04:16.260 --> 00:04:16.260
at least two special characters PIN.

00:04:16.260 --> 00:04:16.260
So you can see that the policy B requires
four characters PIN but at least two

00:04:16.260 --> 00:04:16.260
special characters PIN but at least
two special characters PIN but at least

00:04:16.260 --> 00:04:17.920
two special characters characters.

00:04:17.920 --> 00:04:22.900
So the synthesized policy for all
of this together is six characters,

00:04:23.210 --> 00:04:26.450
minimum two of them are complex,
and the whole passcode

00:04:26.450 --> 00:04:28.280
will expire in 30 days.

00:04:28.280 --> 00:04:30.670
And this can be basically
extended to infinity.

00:04:32.350 --> 00:04:36.630
Next, credentials or certificates.

00:04:36.710 --> 00:04:39.330
So what are certificates used for?

00:04:39.550 --> 00:04:41.630
Well, first, what are they?

00:04:41.640 --> 00:04:46.100
You can either install them onto the
phone as a raw PKCS file or packaged

00:04:46.170 --> 00:04:48.860
in one of those configuration profiles.

00:04:49.160 --> 00:04:50.470
There are some advantages to both.

00:04:50.580 --> 00:04:52.640
We'll be talking about that later.

00:04:52.910 --> 00:04:56.540
Organizations can install
their own signing certificates,

00:04:56.540 --> 00:05:00.950
root certificates on the device and then
in turn use those root certificates to

00:05:00.970 --> 00:05:03.560
sign their own configuration profiles.

00:05:03.750 --> 00:05:08.520
Like in the graph here, we see that the

00:05:09.120 --> 00:05:14.930
The first package to be installed on
the phone would be a PKCS1 certificate

00:05:15.410 --> 00:05:18.970
and then all the other profiles would
be signed with that certificate.

00:05:19.040 --> 00:05:28.080
Also, a VPN profile can be using an
identity certificate for Cisco VPN,

00:05:28.080 --> 00:05:30.160
for instance.

00:05:30.160 --> 00:05:31.300
And we'll be talking about that a
little bit later in greater detail.

00:05:32.680 --> 00:05:40.330
The next thing to be configured
with a configuration profile is VPN.

00:05:40.530 --> 00:05:42.900
VPN is a fairly simple thing.

00:05:42.900 --> 00:05:45.690
We support a number of protocols.

00:05:45.830 --> 00:05:54.540
And now and new on iPhone 2.0,
we also support IPsecs for Cisco,

00:05:54.540 --> 00:05:54.540
which uses certificates.

00:05:57.140 --> 00:06:00.590
Wi-Fi settings are a somewhat
more complicated example.

00:06:00.640 --> 00:06:04.790
I mean, when you look at the list,
you know what those things are.

00:06:04.950 --> 00:06:08.300
We can configure visible
or hidden networks,

00:06:08.300 --> 00:06:14.650
the good old standard web, WPA networks,
or the new 802.1x,

00:06:14.650 --> 00:06:17.860
WPA2 enterprise Wi-Fi networks.

00:06:17.940 --> 00:06:22.900
This is actually an example of something
that can be configured only via profile.

00:06:22.900 --> 00:06:25.740
There is no user interface to
do this on the phone itself,

00:06:25.790 --> 00:06:28.350
because the user interface
would be way too clumsy,

00:06:28.350 --> 00:06:31.020
and we don't expect normal
people to be actually able to

00:06:31.020 --> 00:06:33.420
understand and enter those values.

00:06:33.530 --> 00:06:36.580
So you deliver that only via profile.

00:06:38.740 --> 00:06:40.820
Next thing are application
access restrictions,

00:06:40.890 --> 00:06:43.920
also known as parental controls.

00:06:44.000 --> 00:06:48.660
Probably not necessarily used for your
teenagers in the enterprise environment,

00:06:48.660 --> 00:06:54.010
but still it can be interesting for an
IT department to disallow the use of

00:06:54.010 --> 00:07:01.210
certain applications such as YouTube,
Safari, iTunes Music Store,

00:07:01.260 --> 00:07:03.970
or very interesting, the installation of
third-party applications.

00:07:04.860 --> 00:07:10.090
You can also--this allowed access to
explicit media on the iPod application.

00:07:10.120 --> 00:07:14.100
Again, probably not very interesting
in an IT environment.

00:07:15.330 --> 00:07:18.510
Next, mail settings is one of the most
common things that you might

00:07:18.510 --> 00:07:20.190
want to configure on a phone.

00:07:20.200 --> 00:07:26.070
You can create a complete configuration
or just a subset of those very

00:07:26.080 --> 00:07:29.200
common settings like protocol,
host, account name,

00:07:29.200 --> 00:07:32.200
authentication scheme,
whether to use SSL or not.

00:07:32.200 --> 00:07:37.650
What's interesting for you as IT people,
you can create a template

00:07:37.650 --> 00:07:42.200
of a given subset,
basically not the account name.

00:07:42.200 --> 00:07:45.090
And then you can distribute
it to your whole organization,

00:07:45.090 --> 00:07:46.200
to a thousand people.

00:07:46.200 --> 00:07:49.440
And the people,
when they're installing that profile,

00:07:49.490 --> 00:07:54.200
will be prompted for username, password,
etc., for the missing pieces.

00:07:54.220 --> 00:07:58.260
So you can have one very generic
profile that will serve a large number

00:07:58.260 --> 00:08:00.310
of people and is very easy to use.

00:08:00.900 --> 00:08:02.260
Now finally, APN settings.

00:08:02.260 --> 00:08:04.370
What is APN?

00:08:04.380 --> 00:08:07.520
You either know what APN is or
you will never need to know.

00:08:07.520 --> 00:08:14.280
It's like basically Wi-Fi except it
goes via cell phone cellular technology,

00:08:14.280 --> 00:08:18.890
typically used by very large
corporations who want to route their

00:08:19.420 --> 00:08:22.160
edge data via their own stations.

00:08:22.160 --> 00:08:25.050
And so we have a means
to incorporate that,

00:08:25.050 --> 00:08:26.490
to configure that.

00:08:27.080 --> 00:08:29.350
That's also one of those
examples that can only be done

00:08:29.350 --> 00:08:32.780
by configuration profiles,
not on the phone directly.

00:08:36.200 --> 00:08:39.360
The content of the
profiles is quite flexible.

00:08:39.410 --> 00:08:44.080
You can configure in a profile either
any single of those components that

00:08:44.150 --> 00:08:49.430
I was talking about before or virtually
any combination of those settings.

00:08:49.470 --> 00:08:52.820
This is very convenient,
but it also can be used for what

00:08:52.920 --> 00:08:55.630
I call the carrot and stick approach.

00:08:55.800 --> 00:09:03.320
I give you access to, say, my VPN,
to my Wi-Fi network, but I will also make

00:09:03.360 --> 00:09:05.940
you abide by my rules,
by my passcode policies,

00:09:06.010 --> 00:09:09.090
by my device lock policies.

00:09:09.620 --> 00:09:12.850
So let's look at an example
of carrot and stick.

00:09:12.850 --> 00:09:17.600
So the carrot is you give the user
access to a certificate-based VPN,

00:09:17.660 --> 00:09:20.990
which is very user-friendly, very modern.

00:09:21.090 --> 00:09:24.840
You can also give them access
to your WPA2 enterprise network.

00:09:24.920 --> 00:09:28.160
On the other hand,
you enforce passcode quality,

00:09:28.180 --> 00:09:30.560
you enforce locking,
that the phone will lock itself

00:09:30.560 --> 00:09:32.900
after one minute of idle time.

00:09:32.980 --> 00:09:36.180
You disallow installation
of third-party applications,

00:09:36.180 --> 00:09:41.670
which might potentially
interfere with what you want your

00:09:42.060 --> 00:09:46.420
company-owned phone not to be doing.

00:09:47.850 --> 00:09:51.840
There are some restrictions
about content of profiles.

00:09:51.840 --> 00:09:55.710
Each profile can contain
only one of passcode policy,

00:09:55.710 --> 00:09:58.000
application access and EAS.

00:09:58.000 --> 00:10:02.010
EAS actually, on an iPhone 2.0,
we can have only one

00:10:02.010 --> 00:10:03.790
EAS account globally.

00:10:03.790 --> 00:10:08.410
So if you set up an EAS account manually,
you cannot also install a

00:10:08.450 --> 00:10:13.330
profile that will also specify
an EAS account and vice versa.

00:10:13.500 --> 00:10:16.190
The passcode policy and
application access kind of

00:10:16.240 --> 00:10:19.520
make sense that in one profile,
you cannot have two different

00:10:19.520 --> 00:10:22.800
ones because that would be kind
of not really making sense.

00:10:22.820 --> 00:10:27.220
But you can have two different profiles
that will both specify a passcode policy

00:10:27.220 --> 00:10:31.500
and an application access policy and
we will merge them as in the previous

00:10:31.530 --> 00:10:33.710
example that I've already shown.

00:10:34.460 --> 00:10:38.600
Really important to know is that
profiles are all or nothing.

00:10:38.700 --> 00:10:41.500
You cannot cherry pick what you want.

00:10:41.610 --> 00:10:46.940
Either all settings will get installed
or none of them will get installed.

00:10:46.940 --> 00:10:48.510
Removal is equally atomic.

00:10:48.510 --> 00:10:51.730
Either everything gets removed
or nothing gets removed.

00:10:51.810 --> 00:10:55.220
So when the user goes through
the install process--and we will

00:10:55.220 --> 00:10:56.690
see that later in the demo--

00:10:56.860 --> 00:11:00.130
Sometimes there is no questions
to be asked and we expect the

00:11:00.130 --> 00:11:03.240
installation to succeed and
everything gets nicely installed.

00:11:03.360 --> 00:11:06.010
Other times the user
first needs to go through,

00:11:06.040 --> 00:11:11.000
answer a few questions because you
omitted the user name or the password

00:11:11.100 --> 00:11:16.950
in the profile and maybe you need to
comply with a new password policy.

00:11:17.250 --> 00:11:20.410
If the user just stops and
doesn't want to have any of that,

00:11:20.410 --> 00:11:20.410
well then the profile as a
whole did not get installed.

00:11:23.910 --> 00:11:25.510
So what about signing?

00:11:25.520 --> 00:11:29.180
What about verification?

00:11:29.310 --> 00:11:34.090
There's three types of profiles that you
will see during the installation process.

00:11:34.100 --> 00:11:37.080
And again, we're going to see that
in the demo later on.

00:11:37.110 --> 00:11:39.450
It is not required that
profiles be signed.

00:11:39.510 --> 00:11:42.740
So you can have totally unsigned
profiles installed on the phone.

00:11:42.800 --> 00:11:46.000
And that's in the last example,
the unsigned.

00:11:46.010 --> 00:11:48.080
The user knows, hey,
this could be anything.

00:11:48.080 --> 00:11:52.320
This could be coming from
a not well known source.

00:11:52.420 --> 00:11:57.300
Or you can have a profile that is signed,
but then is it signed and traceable

00:11:57.410 --> 00:11:59.430
to a well known root authority?

00:11:59.500 --> 00:12:02.470
That's the difference between
verified and not verified.

00:12:02.540 --> 00:12:06.200
So if we can trace--

00:12:07.440 --> 00:12:11.560
Assigning to a well-known root authority,
we're going to say it's verified.

00:12:11.590 --> 00:12:14.620
If not, we're going to say it is signed,
but I cannot verify that it really

00:12:14.670 --> 00:12:17.630
comes from whoever claims it to be.

00:12:17.690 --> 00:12:21.480
And for it to be verified,
it has to be traceable to one

00:12:21.480 --> 00:12:25.460
of the roughly 600 pre-installed
certificates on the device.

00:12:25.460 --> 00:12:28.200
It's the same certificates as on OS X.

00:12:28.330 --> 00:12:30.900
We keep updating them
in software updates.

00:12:30.930 --> 00:12:34.010
And there's a way for an
organization to install their own

00:12:34.010 --> 00:12:36.950
signing certificate on the device,
as I mentioned earlier.

00:12:37.080 --> 00:12:39.940
PKC is one or packaged in a profile.

00:12:40.000 --> 00:12:43.250
And then all of the subsequent
profiles that the user will be

00:12:43.250 --> 00:12:46.620
installing will be shown as verified.

00:12:47.340 --> 00:12:49.500
What about the security?

00:12:49.550 --> 00:12:52.050
This time profiles are not encrypted.

00:12:52.130 --> 00:12:57.240
So if somebody intercepts a profile,
they're going to see a nice XML file.

00:12:57.310 --> 00:13:00.050
You can sign them to avoid tampering.

00:13:00.090 --> 00:13:03.720
If you sign a profile,
even if you sign it with a self-signed

00:13:03.840 --> 00:13:07.420
certificate and it's not traceable,
it's not verified,

00:13:07.530 --> 00:13:08.610
it cannot be tampered with.

00:13:08.710 --> 00:13:10.660
Nobody can change any fields in it.

00:13:10.710 --> 00:13:16.310
We will always refuse to install a
profile that has been tampered with.

00:13:16.390 --> 00:13:18.460
Some properties are obfuscated.

00:13:18.520 --> 00:13:20.500
They're not encrypted,
they're obfuscated.

00:13:20.500 --> 00:13:24.290
This will--the average snooper who
intercepts one of those profiles in

00:13:24.310 --> 00:13:27.690
email cannot really do much with it,
but it is definitely not

00:13:27.750 --> 00:13:29.660
something to deter the hacker.

00:13:29.840 --> 00:13:32.350
Therefore,
you should never fill in sensitive

00:13:32.470 --> 00:13:36.040
data like passwords or maybe even
usernames if you don't want to

00:13:36.040 --> 00:13:38.370
hand out Steve Jobs' email address.

00:13:39.700 --> 00:13:41.840
What are some of the caveats?

00:13:41.930 --> 00:13:43.720
Currently,
there is no dependency analysis

00:13:43.720 --> 00:13:45.900
when removing a profile.

00:13:45.960 --> 00:13:50.020
So, what that means is that removing
one profile can render another

00:13:50.020 --> 00:13:51.800
one potentially useless.

00:13:51.840 --> 00:13:57.340
Imagine that you have installed one
profile that contains a certificate,

00:13:57.340 --> 00:14:01.640
an identity certificate,
which is then used by a

00:14:01.800 --> 00:14:05.600
Wi-Fi configuration that's
installed in a different profile.

00:14:05.600 --> 00:14:08.430
If you remove the first
profile that has installed that

00:14:08.430 --> 00:14:11.560
identity and you remove it,
that identity is gone and the

00:14:11.560 --> 00:14:14.600
Wi-Fi profile is now kind of worthless.

00:14:14.610 --> 00:14:16.600
Also, we have no conflict resolution.

00:14:16.600 --> 00:14:21.460
What that means is that if you install,
say, a Wi-Fi configuration that calls

00:14:21.460 --> 00:14:25.600
your network "my network" and
another profile would try to install

00:14:25.600 --> 00:14:29.600
another Wi-Fi configuration that also
calls "my network," this will fail.

00:14:29.600 --> 00:14:33.600
And the whole payload,
the whole profile will fail to install.

00:14:33.600 --> 00:14:37.130
Passcode policies and application
access policies are the only exceptions,

00:14:37.130 --> 00:14:38.390
as I already talked before.

00:14:38.600 --> 00:14:41.210
We expect those to be potentially
conflicting and we have a

00:14:41.210 --> 00:14:42.600
resolution engine there.

00:14:43.630 --> 00:14:46.540
The other restriction is
there's no expiration date.

00:14:46.770 --> 00:14:49.730
That's both a feature and a caveat,
I guess.

00:14:49.740 --> 00:14:52.000
They live forever until
the user deletes them.

00:14:52.160 --> 00:14:54.580
You have no way of revoking them.

00:14:54.640 --> 00:14:58.980
And so keep that in mind.

00:15:00.790 --> 00:15:08.370
Profile format itself is
a straightforward XML.

00:15:08.370 --> 00:15:08.370
It uses the same DTD as
all pay lists on OS X.

00:15:09.150 --> 00:15:14.920
It is a very simple file format with lots
of repeating or consistent properties

00:15:14.940 --> 00:15:17.730
that we'll see that later in the demo.

00:15:18.170 --> 00:15:20.960
The specification for the
XML profile will be available

00:15:21.270 --> 00:15:23.600
by the time this product ships.

00:15:23.660 --> 00:15:27.340
As a matter of fact,
I think I saw it today going through

00:15:27.560 --> 00:15:31.050
the intranet's tubing at Apple,
the final document,

00:15:31.120 --> 00:15:34.240
so I think we're getting really,
really close.

00:15:34.350 --> 00:15:41.200
And again, you're going to see soon a
short demo of the format.

00:15:41.200 --> 00:15:41.200
So how do we create profiles?

00:15:43.340 --> 00:15:45.750
You have basically two
ways of creating a profile.

00:15:45.880 --> 00:15:49.540
We have, on one hand,
the iPhone configuration utility.

00:15:49.570 --> 00:15:53.570
It runs on Mac OS X Leopard and,
you know,

00:15:53.610 --> 00:15:56.700
features the full experience of OS X.

00:15:56.730 --> 00:16:03.250
And there's the alternative,
the iPhone configuration

00:16:03.250 --> 00:16:04.540
utility for the web,
which is browser-based and can

00:16:04.540 --> 00:16:04.540
be run basically on any machine.

00:16:05.700 --> 00:16:09.830
First, OS X,
iPhone Configuration Utility,

00:16:09.860 --> 00:16:14.300
serves as a curator for
Configuration Provisioning Profiles.

00:16:14.350 --> 00:16:17.940
It manages all the profiles that you
might have for different departments,

00:16:17.940 --> 00:16:21.110
say, also for Provisioning Profiles,
but we're not gonna be

00:16:21.110 --> 00:16:22.500
talking about those here.

00:16:22.500 --> 00:16:27.500
It can create Configuration
Profiles and also sign them,

00:16:27.500 --> 00:16:28.500
obviously.

00:16:28.550 --> 00:16:33.130
And it also allows you to view console
logs for iPhones and iPod Touches.

00:16:33.250 --> 00:16:34.940
So if some user has
some problems with it,

00:16:34.940 --> 00:16:37.520
you can plug it in there,
see the console log,

00:16:37.520 --> 00:16:43.260
and potentially file a bug or do
some troubleshooting of your own.

00:16:44.150 --> 00:16:53.100
The iPhone configuration utility for
the web is totally browser-based.

00:16:53.100 --> 00:16:57.560
It requires Ruby,
SQLite to be installed on

00:16:57.560 --> 00:16:57.560
the machine running it,
and also .NET if it's running on XP.

00:16:58.050 --> 00:17:01.610
It does not perform any
kind of device management.

00:17:01.750 --> 00:17:05.200
There's no provisioning
profile stuff in it.

00:17:05.200 --> 00:17:08.320
There's no way to look
at the console logs,

00:17:08.320 --> 00:17:09.440
et cetera.

00:17:09.540 --> 00:17:16.780
However,
it is command line driven as an option,

00:17:16.780 --> 00:17:18.120
so you can actually issue commands to
it and have it create things for you.

00:17:19.420 --> 00:17:22.130
So after all this talk,
I would like to invite on stage

00:17:22.250 --> 00:17:29.830
Ron and followed by Hernán,
and they're going to give you a demo

00:17:29.830 --> 00:17:29.830
of iPhone configuration utility.

00:17:29.970 --> 00:17:31.600
Actually, you're cooking on the demo.

00:17:31.600 --> 00:17:33.300
Thanks, Dan.

00:17:33.300 --> 00:17:36.820
I still like this.

00:17:36.840 --> 00:17:37.460
Okay.

00:17:37.460 --> 00:17:42.600
Up on the demo machine here,
we can see we have iPhone

00:17:42.600 --> 00:17:46.340
Configuration Utility,
or IPCU, as we normally call it.

00:17:46.440 --> 00:17:50.070
And as Stan mentioned,
there's a lot of stuff that iPhone

00:17:50.570 --> 00:17:52.250
Configuration Utility can do.

00:17:52.260 --> 00:17:56.400
We keep track of all the devices that
you've plugged into this computer.

00:17:57.000 --> 00:18:00.600
We can also install applications
and provisioning profiles.

00:18:00.600 --> 00:18:05.450
But as Stan also mentioned,
this session isn't about any of that.

00:18:05.590 --> 00:18:09.090
So we'll jump over to
configuration profiles here.

00:18:09.100 --> 00:18:10.210
Okay.

00:18:10.980 --> 00:18:18.830
So we have this iTunes-style UI where
we have the general restrictions,

00:18:18.950 --> 00:18:24.080
passcode, Wi-Fi, tabs for VPN, email,
exchange, credentials advanced,

00:18:24.150 --> 00:18:25.200
all these tabs.

00:18:25.250 --> 00:18:32.490
I'll just go through these one by one
to show you some of the things in them

00:18:32.550 --> 00:18:34.060
and how they relate to the configuration
profiles that Stan just described.

00:18:34.650 --> 00:18:39.780
So the first thing we have here,
if we create a new configuration profile,

00:18:40.170 --> 00:18:42.000
We can name it.

00:18:42.120 --> 00:18:50.650
So, "Profile from Ron." This is the name
that you'll see--that your users

00:18:50.650 --> 00:18:58.190
will see when they install this
configuration profile on their iPhones

00:18:58.190 --> 00:19:03.030
so that they can see that this is
a profile from Ron and--oops--and know

00:19:03.030 --> 00:19:03.030
a little bit about who this came from.

00:19:04.220 --> 00:19:08.810
Here in the identifier field,
you can see we have this little red

00:19:08.820 --> 00:19:13.190
circle with the arrow in it that
indicates this is a required field.

00:19:13.320 --> 00:19:16.500
This is what you need--this needs
to be filled in in order for this

00:19:16.620 --> 00:19:19.490
configuration profile to be installed.

00:19:19.810 --> 00:19:22.190
And the identifier is really just that.

00:19:22.190 --> 00:19:27.830
It's just a unique identifier for
just this configuration profile.

00:19:27.960 --> 00:19:33.040
And it's used to prevent overwriting
other settings from another

00:19:33.090 --> 00:19:35.770
configuration profile with the same name.

00:19:36.050 --> 00:19:39.860
So you could name them whatever you want,
but you should really use

00:19:39.860 --> 00:19:43.520
these identifiers to keep
configuration profiles unique.

00:19:43.630 --> 00:19:47.460
You can also use this instead of
preventing overwriting of settings,

00:19:47.610 --> 00:19:50.980
you can use this to intentionally
overwrite old settings from

00:19:50.990 --> 00:19:53.160
older configuration profiles.

00:19:53.300 --> 00:19:57.770
So just something to keep in mind that
this identifier is really important.

00:19:59.610 --> 00:20:02.400
If we look down here,
we also have an organization

00:20:02.400 --> 00:20:04.520
and a description field.

00:20:04.520 --> 00:20:08.500
And these are optional fields
that also-- the text of these also

00:20:08.500 --> 00:20:12.970
show up on the iPhone when this
configuration profile is installed.

00:20:13.330 --> 00:20:18.940
So your user gets a little bit
more information about what this

00:20:19.320 --> 00:20:25.460
profile will give them and which
organization this comes from.

00:20:25.460 --> 00:20:28.590
So maybe like the East Coast Sales Org.

00:20:31.050 --> 00:20:34.080
and from Ron.

00:20:34.200 --> 00:20:36.690
There you go.

00:20:36.780 --> 00:20:41.190
So from the General tab here-- oop,
we should fill that in.

00:20:45.460 --> 00:20:47.090
From the General tab here,
I'm going to jump over

00:20:47.100 --> 00:20:52.330
to the Restrictions tab.

00:20:53.640 --> 00:20:58.850
Here we can see we're presented with
this little badged icon that shows we

00:20:58.850 --> 00:21:01.490
haven't set up any restrictions yet.

00:21:01.610 --> 00:21:05.500
So we can go ahead and configure them
by pressing the Configure button.

00:21:05.500 --> 00:21:09.500
And we get this UI for setting
application restrictions,

00:21:09.500 --> 00:21:12.500
just like what Stan had
described earlier.

00:21:12.650 --> 00:21:16.500
So all of the same settings
are available here in IPCU.

00:21:16.500 --> 00:21:22.500
Explicit content--or rather,
disallowing access to explicit content.

00:21:22.500 --> 00:21:27.440
You can disable access to YouTube,
surfing the web, installing other apps,

00:21:27.530 --> 00:21:29.500
all of these things.

00:21:29.500 --> 00:21:32.500
So all of that is available here in IPCU.

00:21:32.500 --> 00:21:35.500
And the same thing is true
for the passcode policies.

00:21:35.770 --> 00:21:39.210
Here we can add passcode
policies to this configuration

00:21:39.210 --> 00:21:41.810
profile by hitting Configure.

00:21:42.610 --> 00:21:46.340
And by pressing this,
we've set in this configuration

00:21:46.340 --> 00:21:49.620
profile that when it's
installed on a user's iPhone,

00:21:49.620 --> 00:21:53.890
the user will be prompted for a
passcode so that you'll require

00:21:54.030 --> 00:21:56.290
a passcode on their device.

00:21:56.420 --> 00:21:59.590
We can even set things like
the quality of the passcode by

00:21:59.590 --> 00:22:04.510
specifying allow sample value,
requiring the number of characters,

00:22:04.520 --> 00:22:08.600
alphanumeric values,
all of these settings,

00:22:08.600 --> 00:22:14.020
passcode age and days,
the amount of minutes before it locks.

00:22:14.020 --> 00:22:15.880
We can even set the
number of failed attempts.

00:22:15.880 --> 00:22:17.450
And check this out, it even goes to 11.

00:22:17.590 --> 00:22:20.890
Sweet.

00:22:21.150 --> 00:22:24.980
So if you're familiar
with Exchange ActiveSync--

00:22:25.010 --> 00:22:26.060
I did pronounce that right,
right?

00:22:26.270 --> 00:22:28.400
If you're familiar with
Exchange ActiveSync settings,

00:22:28.470 --> 00:22:31.130
these probably look familiar to you.

00:22:31.310 --> 00:22:34.140
And actually,
now that I speak about Exchange,

00:22:34.330 --> 00:22:36.700
let's jump over to that tab.

00:22:37.470 --> 00:22:43.240
So here we can configure an
Exchange ActiveSync account.

00:22:43.470 --> 00:22:44.080
Neat.

00:22:44.180 --> 00:22:48.210
I guess I have to fill in this host name.

00:22:50.420 --> 00:22:56.290
And I could set the username here,
but I probably don't want to set up

00:22:56.640 --> 00:23:01.060
one username for all of the people
installing this configuration profile.

00:23:01.250 --> 00:23:04.160
And I'm not going to configure
a single profile for every user

00:23:04.270 --> 00:23:07.020
that I'm going to send this to,
a separate, you know,

00:23:07.080 --> 00:23:08.480
configuration profile.

00:23:08.540 --> 00:23:09.790
So I can leave this blank.

00:23:09.800 --> 00:23:13.600
I can leave the user field here blank.

00:23:13.600 --> 00:23:16.030
And on the iPhone,
when this configuration

00:23:16.080 --> 00:23:18.920
profile is installed,
the user will be prompted

00:23:18.920 --> 00:23:23.510
for the username for his
Exchange ActiveSync account name.

00:23:24.950 --> 00:23:27.640
And besides Exchange,
we can also set up regular

00:23:27.640 --> 00:23:30.860
old email accounts,
as you can see here.

00:23:30.910 --> 00:23:33.210
Go ahead and hit Configure.

00:23:34.630 --> 00:23:37.050
We can configure both
IMAP and POP accounts,

00:23:37.050 --> 00:23:39.360
set the email address and account name.

00:23:39.390 --> 00:23:42.540
And again, we can leave these blank and
leave it up to the user to

00:23:42.540 --> 00:23:44.040
fill these in at install time.

00:23:44.330 --> 00:23:48.600
We can set up the mail server,
another required field here,

00:23:48.600 --> 00:23:53.490
even set up using SSL for
incoming and outgoing mail.

00:23:53.650 --> 00:23:56.700
And while we're on the
topic of SSL and security,

00:23:56.760 --> 00:24:00.770
let's jump over to the Credentials tab.

00:24:02.550 --> 00:24:08.000
So Stan mentioned credentials as
dealing with certificates on the iPhone.

00:24:08.090 --> 00:24:11.550
And here you can -- let
me back up a second.

00:24:11.590 --> 00:24:14.730
You can install certificates
certainly directly onto the iPhone

00:24:15.020 --> 00:24:17.170
via Web delivery or as e-mail.

00:24:17.220 --> 00:24:21.730
But you can also embed them
inside of configuration profiles.

00:24:21.750 --> 00:24:26.910
And here is how you can embed them using
IPCU into this configuration profile.

00:24:27.040 --> 00:24:30.440
We just hit the configure
button and we get this dialogue,

00:24:30.450 --> 00:24:33.660
and we can choose any
certificates we want to embed.

00:24:33.900 --> 00:24:41.350
So for this one, let's add first our root
certificate for our company.

00:24:41.780 --> 00:24:42.670
Cool.

00:24:42.720 --> 00:24:46.700
Actually, you see here we have these
little plus and minus buttons.

00:24:46.810 --> 00:24:50.610
Go and add another certificate.

00:24:50.620 --> 00:24:53.980
Let's see, we have Johnny Appleseed P12.

00:24:54.040 --> 00:24:57.960
This is actually an identity certificate,
so we can add that as well.

00:24:58.290 --> 00:24:59.650
We have both kinds.

00:24:59.650 --> 00:25:01.080
We have both kinds.

00:25:01.110 --> 00:25:03.990
So now we have these
certificates in here,

00:25:04.010 --> 00:25:05.690
but what good are they?

00:25:05.690 --> 00:25:07.450
What can we do with them?

00:25:07.600 --> 00:25:11.700
Well, we'll jump over to the
Wi-Fi tab and I'll show you.

00:25:12.470 --> 00:25:16.010
Here we'll configure Wi-Fi settings
for this configuration profile

00:25:16.480 --> 00:25:20.340
so that all of our users can get
access to our Wi-Fi networks.

00:25:20.410 --> 00:25:26.240
So we can configure the SSID for,
you know, all of our access points.

00:25:26.240 --> 00:25:32.500
We can configure multiple Wi-Fi settings
in a single configuration profile here.

00:25:32.520 --> 00:25:35.160
We'll just go ahead and do the
one for this--for right now,

00:25:35.160 --> 00:25:35.770
though.

00:25:35.990 --> 00:25:39.200
And we can also set the security type.

00:25:39.260 --> 00:25:41.950
Here you're probably familiar
with the existing WEP,

00:25:42.010 --> 00:25:43.490
WPA.

00:25:43.650 --> 00:25:50.600
And of course, with iPhone 2,
we get WEP Enterprise and WPA Enterprise.

00:25:50.710 --> 00:25:55.530
If we choose one,
we see all of the geeky settings that we

00:25:55.530 --> 00:25:59.650
could set that we really wouldn't want
our end users to ever set on the iPhone.

00:25:59.720 --> 00:26:02.320
I mean, TLS, Leap, TTLS, EAP.

00:26:02.450 --> 00:26:02.880
Sweet.

00:26:03.050 --> 00:26:03.800
EAP Fast.

00:26:03.890 --> 00:26:04.750
That's the best one.

00:26:04.750 --> 00:26:05.960
It's fast.

00:26:05.960 --> 00:26:10.640
And then for authentication, though,
this is what I really wanted to show you.

00:26:10.640 --> 00:26:11.200
Check it out.

00:26:11.200 --> 00:26:14.620
We can do identity-based
certificates--identity-based

00:26:14.750 --> 00:26:18.540
authentication here by choosing
the certificate name that we

00:26:18.540 --> 00:26:20.770
set up in the Credentials tab.

00:26:20.800 --> 00:26:25.590
So this makes it really easy to set up
really easy Wi-Fi access for our end

00:26:25.590 --> 00:26:29.490
users by embedding the certificates
and then configuring our Wi-Fi to use

00:26:29.560 --> 00:26:32.590
that certificate for authentication.

00:26:33.120 --> 00:26:35.800
And we can do the same thing
for our trust settings,

00:26:35.800 --> 00:26:41.680
where we have our root CA cert here
available as one of the trusted

00:26:41.690 --> 00:26:45.250
certificates for this Wi-Fi setup.

00:26:46.370 --> 00:26:48.920
And we can do something
similar here for the VPN tab.

00:26:49.070 --> 00:26:51.800
We'll configure a VPN setting.

00:26:51.930 --> 00:26:54.220
Again,
we have the plus and minus buttons that

00:26:54.220 --> 00:26:57.560
show we can add multiple VPN settings.

00:26:58.110 --> 00:27:01.510
And we see the familiar L2TP and PPTP.

00:27:01.510 --> 00:27:06.100
And now we have the IPSec,
Cisco flavor IPSec settings.

00:27:06.220 --> 00:27:10.400
Again, the optional account name,
the required server name.

00:27:10.530 --> 00:27:13.790
You see here we have the shared
secret that we could fill in.

00:27:13.910 --> 00:27:17.090
Something you should know,
I think Stan actually mentioned this.

00:27:17.240 --> 00:27:20.500
We'll put in--we can put in
shared secret information into

00:27:20.580 --> 00:27:22.300
this configuration profile.

00:27:22.390 --> 00:27:25.430
And it's encoded to
prevent casual snooping,

00:27:25.570 --> 00:27:26.860
but it's not encrypted.

00:27:27.030 --> 00:27:32.180
So if you're worried at all
about sharing your shared secret,

00:27:32.240 --> 00:27:34.400
then you can leave this out.

00:27:34.500 --> 00:27:38.000
And it'd probably be better to
switch over to certificate-based

00:27:38.000 --> 00:27:40.390
authentication anyway,
where you can, again,

00:27:40.550 --> 00:27:44.970
choose the identity that
you want for authentication.

00:27:47.180 --> 00:27:49.540
So let's see,
we've gone over restrictions, passcode,

00:27:49.540 --> 00:27:49.860
Wi-Fi.

00:27:49.860 --> 00:27:51.040
Have I missed any of these?

00:27:51.210 --> 00:27:53.340
Have I missed any of these?

00:27:53.410 --> 00:27:56.560
Let's see what's under the Advanced tab.

00:27:56.760 --> 00:27:57.980
Let's see.

00:27:57.980 --> 00:27:59.320
APN.

00:27:59.320 --> 00:28:02.910
I actually don't know what that is,
so let's get rid of that.

00:28:03.010 --> 00:28:05.210
So here, of course,
is where you would set up

00:28:05.350 --> 00:28:09.210
the APN settings for your
configuration profile if you're

00:28:09.250 --> 00:28:10.900
sure you want to do that.

00:28:10.960 --> 00:28:12.150
Be careful.

00:28:12.220 --> 00:28:13.730
That's very dangerous, I've been told.

00:28:13.740 --> 00:28:18.250
So if we go back,
we've set up all these things for our

00:28:18.250 --> 00:28:22.750
configuration profile so that we can
enforce our security policies for our

00:28:22.750 --> 00:28:28.430
users using the stick and also provide
them with the carrot of access to our

00:28:28.430 --> 00:28:32.480
Wi-Fi and VPN networks and setting
up their email and exchange accounts.

00:28:32.480 --> 00:28:34.080
Now we want to go...

00:28:35.360 --> 00:28:36.300
Oh, wait.

00:28:36.300 --> 00:28:43.690
We should actually sign this first.

00:28:43.690 --> 00:28:45.980
I want to make sure that our users can
trust that this configuration profile

00:28:45.980 --> 00:28:45.980
actually comes from our company.

00:28:46.340 --> 00:28:50.500
So, IPCU allows you to sign
configuration profiles.

00:28:50.500 --> 00:28:54.930
We could leave it as unsigned,
but here I'll show you what

00:28:54.930 --> 00:28:57.010
it looks like to sign one.

00:28:58.000 --> 00:29:02.620
In our UI here, we can choose one or more
certificates to sign with.

00:29:02.670 --> 00:29:07.170
We'll just choose this one,
the Profiles Signing Certificate.

00:29:08.580 --> 00:29:12.340
And we also need a private
key file to sign with.

00:29:12.390 --> 00:29:17.260
So we'll go ahead and choose
our signingkey.pem file.

00:29:17.690 --> 00:29:20.620
Open that up and hit the Sign button.

00:29:20.770 --> 00:29:23.980
And here you can see
all of the text fields,

00:29:24.120 --> 00:29:30.160
all of the input fields for all of these
payloads have gone to non-editable.

00:29:30.370 --> 00:29:34.460
And we have the cool little signed
badge here to let us know that this

00:29:34.510 --> 00:29:38.280
is a signed configuration profile
and we can't accidentally go off and

00:29:38.280 --> 00:29:45.380
edit it and invalidate it and make
it invalid to install on an iPhone.

00:29:45.510 --> 00:29:48.420
Of course, if we want to actually
go back and make changes,

00:29:48.580 --> 00:29:50.820
we can easily remove the signature.

00:29:50.910 --> 00:29:53.390
We're warned that this will mean
you'll have to re-sign it again

00:29:53.400 --> 00:29:58.170
if you really want to install
a signed configuration profile.

00:29:58.410 --> 00:30:02.800
Go ahead and remove the signature,
make any of the changes we want,

00:30:02.950 --> 00:30:05.460
go back and sign it again.

00:30:06.280 --> 00:30:09.640
Once we have the
configuration profile set up,

00:30:09.790 --> 00:30:11.890
we can export it.

00:30:12.750 --> 00:30:19.410
and export it either to our in-house
web server or export it and send it over

00:30:19.830 --> 00:30:23.030
to mail and share directly via mail.

00:30:23.300 --> 00:30:27.340
So that's a quick tour of some of the
things that you can do with IPCU and

00:30:27.450 --> 00:30:30.310
configuring configuration profiles.

00:30:30.450 --> 00:30:38.630
And I'd like to ask Hernán to come
up and introduce you to iPhone

00:30:38.630 --> 00:30:38.650
Configuration Utility for the Web.

00:30:38.650 --> 00:30:38.650
Thank you very much, Ron.

00:30:40.660 --> 00:30:44.280
Good afternoon, everybody.

00:30:44.380 --> 00:30:48.140
Ron did such a great job that
actually what I have to do is

00:30:48.150 --> 00:30:51.600
very little to show you that the
iPhone Configuration Utility,

00:30:51.600 --> 00:30:55.670
IPCU for the web,
was designed based on the one

00:30:55.670 --> 00:30:58.900
for Mac OS X in order to simplify
the transition between the two.

00:30:58.900 --> 00:31:04.340
So whenever you have to use the web tool,
you will feel right at home.

00:31:04.340 --> 00:31:08.560
You can start by creating a profile
from scratch or you can just

00:31:09.160 --> 00:31:11.340
import one that you already have.

00:31:11.410 --> 00:31:18.670
In this case, I have already done that,
as you can see.

00:31:20.060 --> 00:31:23.360
So I have all the
information for the demo.

00:31:23.360 --> 00:31:27.140
When you import a profile,
you would do this because either

00:31:27.140 --> 00:31:32.050
you want to change it so that you
can redeploy it by updating it,

00:31:32.120 --> 00:31:36.700
and in that case, as Ron has mentioned,
make sure that the identifier in

00:31:36.700 --> 00:31:39.030
the general tab remains the same.

00:31:39.100 --> 00:31:42.120
So then the phone,
when the user is installing the profile,

00:31:42.320 --> 00:31:44.670
will find the one that's
already installed,

00:31:44.670 --> 00:31:47.380
remove it, and replace it with this one.

00:31:47.450 --> 00:31:50.600
If you want to create a new one but
you don't want to start from scratch,

00:31:50.670 --> 00:31:53.150
make sure that you change this.

00:31:53.150 --> 00:31:58.090
So very similar to what
we have on Mac OS X,

00:31:58.090 --> 00:32:00.800
you can specify restrictions.

00:32:00.840 --> 00:32:06.090
In this case, I'm disallowing explicit
content and YouTube.

00:32:07.100 --> 00:32:11.640
You can see the password
policy for the device.

00:32:11.690 --> 00:32:14.350
I have created, in this case,
two Wi-Fi networks.

00:32:14.490 --> 00:32:20.340
One is hidden and it will be much--
it's using WEP enterprise security,

00:32:20.340 --> 00:32:22.700
so fewer people will
be able to access it.

00:32:22.780 --> 00:32:24.210
But...

00:32:24.410 --> 00:32:28.910
You can also create, in this case,
a second Wi-Fi.

00:32:28.940 --> 00:32:31.020
Let me remove this one.

00:32:31.020 --> 00:32:31.860
Sorry.

00:32:31.860 --> 00:32:36.730
That is not hidden and everybody
in your organization can access.

00:32:39.200 --> 00:32:40.800
VPN.

00:32:40.800 --> 00:32:43.650
I have created three,
one for each type that is supported.

00:32:43.660 --> 00:32:54.050
We have the first one is IPC, SEC, Cisco,
followed by a PPTP VPN and an L2TP VPN.

00:32:54.190 --> 00:32:58.960
They all have specifying--they are
all specifying different authorization

00:32:58.960 --> 00:33:02.090
mechanisms and even encryption levels.

00:33:02.280 --> 00:33:04.500
As you will notice,

00:33:04.940 --> 00:33:09.180
I also left some information out,
like the account name,

00:33:09.180 --> 00:33:14.720
and the phone will prompt the user
during installation for this information.

00:33:14.880 --> 00:33:17.350
As we mentioned before,
this is so that you can distribute

00:33:17.350 --> 00:33:19.130
the same profile to multiple people.

00:33:22.010 --> 00:33:25.700
Two email accounts, IMAP and POP.

00:33:25.740 --> 00:33:28.420
Again, leaving some information.

00:33:28.660 --> 00:33:32.620
and an exchange account,
your corporate exchange account.

00:33:32.670 --> 00:33:35.300
I haven't specified
the user or the email.

00:33:35.360 --> 00:33:39.480
And again, the phone will prompt for this
information during installation.

00:33:39.480 --> 00:33:42.480
I will show you later in the second demo.

00:33:42.560 --> 00:33:43.660
Finally, we have credentials.

00:33:43.690 --> 00:33:46.680
In this case, it's a PKCS12 package.

00:33:46.740 --> 00:33:49.720
It's not being used by Wi-Fi or VPN,
but maybe some other applications

00:33:49.720 --> 00:33:52.900
use it or some other profile,
and you can install it.

00:33:53.030 --> 00:33:57.590
So let's say that I'm happy with
the configuration profile as it is.

00:33:57.740 --> 00:34:00.580
You can go back to general and sign it.

00:34:00.580 --> 00:34:03.910
In this case,
I already have the signing certificate

00:34:03.960 --> 00:34:06.460
and the private key used for signing.

00:34:07.810 --> 00:34:11.400
Once the profile is signed,
the only thing that is left is

00:34:11.400 --> 00:34:13.430
to deliver it to your users.

00:34:13.520 --> 00:34:17.700
You can either export it,
and in this case it will be automatically

00:34:17.700 --> 00:34:20.710
saved to your downloads folder,
so that then you can move it over

00:34:20.840 --> 00:34:23.930
to a web server where it's going
to be available for distribution,

00:34:24.050 --> 00:34:28.690
or from there you can use your
back-end system to send it by email.

00:34:29.410 --> 00:34:34.680
And again, similar to IPCU or Mac OS X,
you can email it from the

00:34:34.780 --> 00:34:38.180
tool to one or multiple users.

00:34:38.300 --> 00:34:42.280
So as you can see,
the tool feels very much the

00:34:42.280 --> 00:34:45.240
same as the desktop application.

00:34:45.340 --> 00:34:48.000
It behaves in the same way,
so we hope that you will be

00:34:48.000 --> 00:34:52.720
able to move between them based
on your needs and it will work.

00:34:53.250 --> 00:34:59.150
Before I return the presentation to Stan,
let me quickly show you

00:34:59.740 --> 00:35:02.580
The configuration profile,
how it looks like.

00:35:02.650 --> 00:35:05.840
In this case,
it's a profile that is setting

00:35:05.840 --> 00:35:08.200
up an exchange account.

00:35:08.290 --> 00:35:10.190
First, here.

00:35:14.800 --> 00:35:17.880
A passcode policy, second.

00:35:17.880 --> 00:35:20.670
And at the bottom we have
what maps to the general tab,

00:35:20.670 --> 00:35:23.460
which is a description
for the profile itself.

00:35:23.570 --> 00:35:27.130
As Stan mentioned,
the description for each one of these

00:35:27.130 --> 00:35:29.940
sections can be split into two parts.

00:35:30.030 --> 00:35:33.330
One that is common,
that you need to specify for all of them,

00:35:33.420 --> 00:35:37.100
and another one that is specific
to each one of the payloads.

00:35:37.210 --> 00:35:39.660
So in this case,
I've used black to highlight the parts

00:35:39.660 --> 00:35:41.530
that are shared between all of them.

00:35:41.620 --> 00:35:44.300
So for example,
if we look here at the root level,

00:35:44.400 --> 00:35:48.030
we have a description,
we have a display name,

00:35:48.120 --> 00:35:50.540
the payload identifier, etc.

00:35:50.540 --> 00:35:52.320
I have an ID, a version.

00:35:52.400 --> 00:35:58.140
We go back up to the description
for the passcode policy.

00:35:58.260 --> 00:36:02.660
And again, description, display name,
etc.

00:36:02.780 --> 00:36:07.490
Finally, we have the same for
the exchange account.

00:36:08.460 --> 00:36:12.000
Using different colors,
I have also highlighted the parts that

00:36:12.000 --> 00:36:15.280
are specific to the profiles--I'm sorry,
to the payloads.

00:36:15.300 --> 00:36:18.300
For the exchange account,
we need to specify the host.

00:36:18.300 --> 00:36:21.420
We need to specify whether
it uses SSL or not,

00:36:21.420 --> 00:36:23.290
and in this case also the username.

00:36:23.300 --> 00:36:27.070
In the case of the passcode policy,
we'll say what is the minimum

00:36:27.080 --> 00:36:30.300
length for the passcode that
is going to be installed,

00:36:30.560 --> 00:36:34.290
then the user needs to set
how long it's going to last,

00:36:34.380 --> 00:36:39.260
whether it needs to--the user
needs to use alphanumeric

00:36:39.290 --> 00:36:42.090
characters in the passcode.

00:36:42.530 --> 00:36:47.040
Some of these key value
pairs are obligatory.

00:36:47.050 --> 00:36:47.940
You need to set them.

00:36:48.140 --> 00:36:51.290
Otherwise,
the profile will be considered invalid

00:36:51.290 --> 00:36:55.220
and we will tell you that--we'll tell
that to the user during installation.

00:36:55.220 --> 00:36:56.760
And the other ones are optional.

00:36:56.900 --> 00:37:01.640
Now, some of them you can leave out
so that the phone will ask for

00:37:01.740 --> 00:37:03.540
information during installation.

00:37:03.540 --> 00:37:06.620
The other ones, if you leave them out,
we will assume that they are not needed.

00:37:06.620 --> 00:37:09.520
For example,
in the case here of the passcode policy,

00:37:09.570 --> 00:37:13.430
if you leave out required alphanumeric,
we will assume that it's not required,

00:37:13.430 --> 00:37:15.650
as if you had set it to false.

00:37:16.060 --> 00:37:20.020
All the information about which ones
are required and which ones are not,

00:37:20.020 --> 00:37:23.260
which ones the user--sorry,
the phone will prompt the user

00:37:23.260 --> 00:37:27.520
for will be available in this
documentation that Stan mentioned before.

00:37:27.610 --> 00:37:30.290
So as you can see, this is pretty simple.

00:37:30.350 --> 00:37:32.720
Anybody that is familiar with
Microsoft S10 with PLIS will

00:37:32.720 --> 00:37:36.600
feel right at home editing this,
creating tools for this.

00:37:36.640 --> 00:37:39.070
And if you're not familiar,
if you're familiar with XML,

00:37:39.230 --> 00:37:43.200
you will find the documentation
for PLIS in developer.apple.com,

00:37:43.220 --> 00:37:46.220
and you will basically
learn this in five minutes.

00:37:46.250 --> 00:37:49.900
So with that,
let me return the presentation to Stan.

00:37:49.900 --> 00:37:50.900
All right.

00:38:03.120 --> 00:38:06.370
So we have now seen how
to create the profiles,

00:38:06.580 --> 00:38:10.720
both via the OS X Leopard
and the web-based utility.

00:38:10.820 --> 00:38:13.560
What I would like to repeat,
which we have not shown in the demo,

00:38:13.560 --> 00:38:19.000
is that the IPCU web is actually also
command line driven or command driven.

00:38:19.120 --> 00:38:22.660
So you can have it sitting somewhere
on a server and issue commands to it.

00:38:22.660 --> 00:38:25.620
And it can spit out
configuration profiles for you,

00:38:25.640 --> 00:38:27.550
so that if you want to have
more individualized ones

00:38:27.550 --> 00:38:29.330
than just generic templates.

00:38:29.360 --> 00:38:34.480
And the documentation will be
also talking about how to do that.

00:38:34.650 --> 00:38:35.700
Now, profile deployment.

00:38:35.700 --> 00:38:36.960
Now you have created the profile.

00:38:36.960 --> 00:38:39.640
Now you want to get it to the people.

00:38:39.740 --> 00:38:44.180
We basically offer two ways of--

00:38:45.450 --> 00:38:47.050
No, I don't have a phone.

00:38:47.130 --> 00:38:49.750
We offer basically two ways
of distributing profiles.

00:38:49.810 --> 00:38:53.140
One is via the web, and one is via email.

00:38:53.220 --> 00:38:55.330
The first one is via the web.

00:38:55.550 --> 00:39:00.350
Let's say your organization has
created a nice web user interface.

00:39:00.430 --> 00:39:05.000
The user can go and click
on that little button,

00:39:05.000 --> 00:39:08.160
and the whole install process
that we'll get into in greater

00:39:08.160 --> 00:39:11.390
detail later will begin.

00:39:11.560 --> 00:39:15.270
This is useful for when you're
distributing to a large pool of people,

00:39:15.270 --> 00:39:16.820
potentially unknown people.

00:39:16.870 --> 00:39:18.850
Say you're in a university
or organization,

00:39:18.850 --> 00:39:24.550
and you want to just tell everybody, hey,
go and install those profiles.

00:39:24.560 --> 00:39:27.520
Remember, profiles are not encrypted.

00:39:27.520 --> 00:39:29.140
They're somewhat obfuscated.

00:39:29.140 --> 00:39:32.490
Do not put really, really sensitive data
into those profiles.

00:39:32.530 --> 00:39:36.310
Have the users enter them on
the phone and deliver that out

00:39:36.320 --> 00:39:39.150
of line in a different way.

00:39:39.300 --> 00:39:41.760
Potentially use password-protected
website for download.

00:39:41.760 --> 00:39:44.220
Use throwaway passwords,
whatever you want.

00:39:44.240 --> 00:39:51.420
You can also distribute the URL via
SMS so that typically entering a URL is

00:39:51.420 --> 00:39:57.300
not a very fun thing to do anywhere,
and people make several mistakes.

00:39:57.300 --> 00:39:58.460
You can send them the SMS.

00:39:58.460 --> 00:40:02.070
You just click on it,
and you get directed to that website.

00:40:02.520 --> 00:40:08.300
Also remember that if you want to
distribute profiles via the web,

00:40:08.300 --> 00:40:10.400
you need to set a special MIME type.

00:40:10.400 --> 00:40:11.430
That looks like that.

00:40:11.470 --> 00:40:15.170
Again, the documentation will
be talking about that.

00:40:18.010 --> 00:40:20.450
The alternative to that
is delivery via email.

00:40:20.470 --> 00:40:23.730
This is especially intended for
more personalized profiles when

00:40:23.800 --> 00:40:27.710
you not want to send it to 10,000
people in your organization.

00:40:27.760 --> 00:40:30.240
It's a more active way
of distributing it.

00:40:30.320 --> 00:40:33.520
The user does not have
to go and enter a URL.

00:40:33.560 --> 00:40:38.730
He just can attach .mobileconfig
or multiple of those into a file

00:40:38.880 --> 00:40:42.190
and send it off into an email
and send it off to the user.

00:40:42.350 --> 00:40:44.490
The advantage of that is

00:40:44.680 --> 00:40:48.010
The user's mailbox is
cached on the phone,

00:40:48.010 --> 00:40:53.180
and so if the user for whichever
reason needs to reinstall the profile,

00:40:53.180 --> 00:40:56.600
he just can go back to the
mailbox and click on the

00:40:56.600 --> 00:40:59.160
attachment and start from scratch.

00:40:59.250 --> 00:41:02.320
On the other hand,
remember it is not real push.

00:41:02.440 --> 00:41:06.550
So even though it will get pushed
into the user's email account,

00:41:06.570 --> 00:41:10.520
he still needs to go and click on
it and go through the installation

00:41:10.730 --> 00:41:13.760
so it's not forced on them.

00:41:13.840 --> 00:41:14.250
Um,

00:41:15.810 --> 00:41:19.470
Also, this might cause a chicken and egg
problem because what if the user

00:41:20.000 --> 00:41:23.850
doesn't have an email account,
you don't want to send it to their

00:41:23.850 --> 00:41:28.850
whatever third party email address,
so this might not be so suitable.

00:41:28.970 --> 00:41:30.930
But it's an alternative.

00:41:38.480 --> 00:41:41.250
So what I expected here.

00:41:41.480 --> 00:41:48.190
So next thing,
profile backup and migration.

00:41:48.190 --> 00:41:48.190
Weren't the--?

00:41:50.000 --> 00:41:53.100
Excuse us.

00:41:53.100 --> 00:41:54.780
No, this is--okay.

00:41:54.900 --> 00:41:57.080
Somehow this slide moved.

00:41:57.140 --> 00:42:03.630
So further topic that doesn't really fit
in here is profile backup and migration.

00:42:03.860 --> 00:42:05.660
Profiles are backed up for you.

00:42:05.660 --> 00:42:08.220
Each time when you connect
your iPhone to iTunes,

00:42:08.350 --> 00:42:11.010
it will do its syncing,
it will upload new music and it

00:42:11.010 --> 00:42:13.090
backs up the settings of the phone.

00:42:13.170 --> 00:42:17.390
The same applies for all the
managed configuration settings.

00:42:17.440 --> 00:42:20.100
So whatever you have installed,
whichever profiles you have installed,

00:42:20.100 --> 00:42:23.260
certificates and all that,
that will get backed up.

00:42:23.360 --> 00:42:25.650
If you need to wipe your
phone for whichever reason,

00:42:25.650 --> 00:42:28.300
you know, there's the reset all
settings and whatnot,

00:42:28.410 --> 00:42:33.560
and you sync it back with your Mac,
it will be preserved.

00:42:33.640 --> 00:42:34.660
However, there's no migration.

00:42:34.790 --> 00:42:39.460
So if you drop your phone in the river,
you buy a new one, plug it in,

00:42:39.560 --> 00:42:44.400
your music and other media
content will get migrated.

00:42:44.490 --> 00:42:47.540
Your managed configuration
settings or certificates,

00:42:47.540 --> 00:42:50.610
your keychain, et cetera,
will not get transferred.

00:42:50.800 --> 00:42:55.410
You have to go back to the web server,
receive that email again, reinstall it.

00:42:55.550 --> 00:42:57.990
That's a security feature
because we don't want,

00:42:57.990 --> 00:43:01.660
in the open cubicle landscape
where anybody can go and just plug

00:43:01.900 --> 00:43:08.210
into your co-workers' computer
and simply get their stuff.

00:43:08.540 --> 00:43:12.260
So now with that,
we're going to have a small guided

00:43:12.440 --> 00:43:14.840
tour of the installation experience.

00:43:14.900 --> 00:43:17.970
I'll give back to Hernán.

00:43:20.930 --> 00:43:23.570
We have talked a lot about
configuration profiles,

00:43:23.620 --> 00:43:25.500
the format, how to create them.

00:43:25.500 --> 00:43:28.490
So we thought it would be
interesting to show you how the

00:43:28.490 --> 00:43:33.270
user would interface with them,
how on the phone they would

00:43:33.270 --> 00:43:37.610
be able to receive them,
look at them, what are the contents,

00:43:37.610 --> 00:43:41.540
install them and remove them,
what would happen when

00:43:41.540 --> 00:43:43.360
these things take place.

00:43:43.700 --> 00:43:47.400
Also at the end,
we have a little clip of how we

00:43:48.060 --> 00:43:53.860
prevent configuration that has been
signed but has been altered afterwards

00:43:53.900 --> 00:43:56.670
from being installed on the phone.

00:43:57.910 --> 00:44:02.130
We thought of coming up
with a presentation that you

00:44:02.130 --> 00:44:03.180
would see with the simulator.

00:44:03.180 --> 00:44:05.900
Unfortunately,
our code doesn't work on the same,

00:44:05.900 --> 00:44:08.700
so we have recorded some
videos and I will talk to them.

00:44:08.710 --> 00:44:13.380
The idea is that I'm going to first
install a root certificate that is

00:44:13.380 --> 00:44:18.560
going to be used later on by the
second profile to verify its signature.

00:44:18.640 --> 00:44:23.390
For demo purposes,
the certificate is just raw data because

00:44:23.390 --> 00:44:29.250
we want to show you what happens when
a user receives such a certificate.

00:44:29.690 --> 00:44:33.110
But ideally what you would
do is put it in the profile,

00:44:33.210 --> 00:44:36.850
sign it, and even if you sign it with
a certificate that we cannot

00:44:36.850 --> 00:44:41.710
trace back to a known authority,
at least you will know that what the

00:44:41.710 --> 00:44:43.910
user is installing is what you sent him.

00:44:44.010 --> 00:44:45.900
It has not been tampered with.

00:44:45.980 --> 00:44:50.670
Much better would be if you actually
sign it with a certificate that can

00:44:50.670 --> 00:44:55.860
be traced back to one of those 600
certificates that Stan mentioned.

00:44:55.860 --> 00:44:57.670
And therefore we are
going to tell the user,

00:44:57.770 --> 00:45:01.830
and you will see how prominent we say
whether a profile has been signed or not.

00:45:01.940 --> 00:45:07.160
This will give the user peace of mind and
they would install without any problems.

00:45:07.230 --> 00:45:08.490
So let's go ahead.

00:45:08.570 --> 00:45:09.660
Let me show you.

00:45:09.770 --> 00:45:14.420
For this demo,
I've chosen mail as a delivery mechanism.

00:45:14.490 --> 00:45:18.640
And this is an email that one of
your users could receive where you

00:45:18.640 --> 00:45:22.100
explain what's in the contents and
what are the steps that they need

00:45:22.100 --> 00:45:24.250
to follow to configure their phone.

00:45:24.260 --> 00:45:25.860
The first one is to install
the root certificate.

00:45:25.860 --> 00:45:27.860
The first attachment.

00:45:27.880 --> 00:45:31.260
You tell them they will be taken
back here and they need to look

00:45:31.310 --> 00:45:33.160
for the second certificate.

00:45:33.160 --> 00:45:38.270
I'm sorry, the second profile,
which is at the bottom of the email.

00:45:38.410 --> 00:45:40.540
In this case,
I've also included information

00:45:40.540 --> 00:45:44.610
about the passwords that would
be asked during installation.

00:45:44.670 --> 00:45:47.090
You may want to use other means for that.

00:45:47.400 --> 00:45:53.530
So let's go ahead and tap
on the first attachment,

00:45:53.710 --> 00:45:57.220
the root certificate,
and the user would immediately

00:45:57.220 --> 00:45:58.660
be taken to settings.

00:45:59.320 --> 00:46:01.860
As you can see,
we've taken a root certificate

00:46:01.860 --> 00:46:05.900
and created a profile on the fly.

00:46:06.000 --> 00:46:09.310
The idea for this is that the
user can later on find this

00:46:09.400 --> 00:46:11.200
on the phone in settings.

00:46:11.260 --> 00:46:16.100
They can look at the contents and
they can actually remove it too.

00:46:16.240 --> 00:46:18.930
This is the only interface that
we currently have on iPhone

00:46:18.950 --> 00:46:22.810
2.0 for removing certificates.

00:46:24.640 --> 00:46:27.100
What does all this information mean?

00:46:27.200 --> 00:46:30.490
At the top,
we have the name of the profile

00:46:30.620 --> 00:46:33.550
followed by the name of the
organization that sent it.

00:46:33.950 --> 00:46:37.200
Very big in red letters, we say,
this has not been verified.

00:46:37.240 --> 00:46:39.730
So the user knows so.

00:46:40.100 --> 00:46:41.880
In the middle of the screen,
we have a description.

00:46:41.880 --> 00:46:44.920
As Ron mentioned, you could have here,
you could be repeating some information

00:46:44.920 --> 00:46:49.080
you have in your website or on the
email to give context to user while he's

00:46:49.090 --> 00:46:51.210
installing or about to install a profile.

00:46:51.430 --> 00:46:53.460
The data was received,
which becomes the data has

00:46:53.500 --> 00:46:56.680
been installed and is useful,
and what it contains.

00:46:56.700 --> 00:46:59.700
In this case, just a root certificate.

00:46:59.800 --> 00:47:03.540
If the user decides he can actually
get more information on the

00:47:03.610 --> 00:47:07.430
profile by going into more details.

00:47:10.560 --> 00:47:13.400
Again,
just the root certificate as we expected.

00:47:13.540 --> 00:47:17.140
We have name, when it was issued,
when it's going to be

00:47:17.230 --> 00:47:18.400
expired and who issued it.

00:47:18.400 --> 00:47:22.560
Furthermore, mostly probably for you,
the creators of profiles or

00:47:22.560 --> 00:47:27.400
some more technical users,
you can tap on this button and

00:47:27.400 --> 00:47:31.540
we are going to show you all the
gory details of the certificate,

00:47:31.540 --> 00:47:34.400
whether it's a PKCS1 or a PKCS12 package.

00:47:34.400 --> 00:47:38.010
And basically,
this is the information that is

00:47:38.060 --> 00:47:44.400
available to users on Mac OS X Desktop on
the Keychain Access application.

00:47:44.570 --> 00:47:50.400
So,
let's go back out to the install screen.

00:47:50.400 --> 00:47:55.640
I can show you what happens during
installation of a simple profile.

00:47:57.700 --> 00:48:02.120
The user would tap the Install button,
the only one there,

00:48:02.200 --> 00:48:04.220
and we will ask for a confirmation.

00:48:04.220 --> 00:48:07.280
This is the only time that we ask
for confirmation for installation.

00:48:07.290 --> 00:48:11.050
So given that we were not able to
verify the signature in the profile,

00:48:11.050 --> 00:48:14.410
we ask--I'm sorry,
we tell the user so with a big message,

00:48:14.440 --> 00:48:18.260
and we suggest that the profiles
should not be installed.

00:48:18.260 --> 00:48:22.680
You would have told the user
that it's okay to install this.

00:48:22.820 --> 00:48:27.550
So the user would tap the
Install Now button and

00:48:27.550 --> 00:48:29.260
installation would start.

00:48:29.370 --> 00:48:30.920
In this case,
the installation is very short

00:48:31.040 --> 00:48:34.360
because it's just a PKCS1 certificate.

00:48:34.460 --> 00:48:36.310
There's no need for user input.

00:48:36.370 --> 00:48:37.440
So basically, it's done.

00:48:37.510 --> 00:48:41.670
The root cert is installed
on the phone and it's active.

00:48:42.700 --> 00:48:44.060
Okay, let's go back.

00:48:44.060 --> 00:48:48.240
The user from here, basically,
tap the Done button and we'll take him

00:48:48.340 --> 00:48:51.320
back to Mail to continue installation.

00:48:51.440 --> 00:48:55.630
If it was the only profile,
he can just continue reading

00:48:55.790 --> 00:48:58.210
email or do whatever he wants.

00:48:58.940 --> 00:49:02.550
Before installing the second profile,
let me show you a springboard

00:49:02.620 --> 00:49:06.280
where we have Safari and
YouTube in particular available.

00:49:06.360 --> 00:49:08.740
And I want you to pay attention to
those because they're going to be

00:49:08.740 --> 00:49:11.790
removed using restrictions in a minute.

00:49:12.110 --> 00:49:17.860
So we go back to mail,
look for the second attachment, profile.

00:49:18.030 --> 00:49:23.510
The user would tap on it, and once again,
he will be taken to settings.

00:49:24.070 --> 00:49:28.160
In this case, the profile was able to be
verified thanks to the root

00:49:28.160 --> 00:49:30.740
certificate that just got installed.

00:49:31.100 --> 00:49:34.670
We know who signed it and
we display that to the user.

00:49:34.800 --> 00:49:37.800
And as you can see from
the contains section,

00:49:37.880 --> 00:49:40.470
this is a much more elaborate and
much more interesting profile.

00:49:40.550 --> 00:49:45.640
We have restrictions,
CBP and service and exchange account,

00:49:45.720 --> 00:49:48.240
and an identity certificate.

00:49:48.320 --> 00:49:52.110
Let's look a little bit more
into the details of those.

00:49:53.600 --> 00:49:55.840
In actuality,
we call it an identity certificate.

00:49:55.840 --> 00:49:59.500
It's actually a PKCS 12 package,
which is password encrypted.

00:49:59.510 --> 00:50:01.890
So we cannot yet display
the information for it.

00:50:02.010 --> 00:50:05.500
Once it's installed on the phone,
we will.

00:50:05.500 --> 00:50:09.560
We have the exchange account,
we have a server and an email address,

00:50:09.620 --> 00:50:11.500
in this case it's available.

00:50:11.500 --> 00:50:16.500
We have the three
VPN settings for Cupertino.

00:50:16.560 --> 00:50:19.500
We have Los Angeles and Oakland.

00:50:19.620 --> 00:50:21.550
And at the bottom,
the user can see what are the

00:50:21.550 --> 00:50:24.490
restrictions that are going
to be enforced on the device.

00:50:24.610 --> 00:50:29.500
In this case, removing, as I mentioned,
Safari and YouTube.

00:50:29.550 --> 00:50:32.650
Again, as Stan mentioned,
the carrot and stick.

00:50:34.310 --> 00:50:36.690
Let's go ahead and install the profile.

00:50:36.770 --> 00:50:39.730
Once again, we tap the Install button.

00:50:39.860 --> 00:50:42.280
And in this case,
given that we were able to verify

00:50:42.380 --> 00:50:46.830
the signature used for the profile,
we can suggest to the user that the

00:50:46.830 --> 00:50:48.680
default action has to be installed.

00:50:48.720 --> 00:50:51.150
It's okay to install, so go ahead.

00:50:52.530 --> 00:50:55.590
The user will tap there,
the installation starts,

00:50:55.590 --> 00:50:57.940
and in this case,
the phone detects there is some

00:50:57.950 --> 00:51:02.590
information that is missing in order to
fully install and activate this profile.

00:51:02.610 --> 00:51:05.870
The first thing that it found
is that we need the password

00:51:05.910 --> 00:51:07.600
for the Exchange account.

00:51:07.600 --> 00:51:10.940
We use this in order to go out
to the network and validate

00:51:10.940 --> 00:51:13.000
all the account information.

00:51:13.310 --> 00:51:17.590
and later on to validate
password policies from Exchange.

00:51:17.650 --> 00:51:22.920
So the user will type in the
password for his Exchange account.

00:51:23.000 --> 00:51:26.030
We will go out to the network
and verify that it's correct.

00:51:26.070 --> 00:51:29.550
If it is not,
we give the user a chance of retyping

00:51:29.740 --> 00:51:34.190
it or in the case of being offline,
just move it on.

00:51:34.370 --> 00:51:37.390
The second question is the
password that we need in order

00:51:37.460 --> 00:51:40.500
to decrypt the PKCS12 package.

00:51:40.540 --> 00:51:43.100
Again,
and you will see it's the same password.

00:51:43.100 --> 00:51:46.010
The user will type it,
will verify that it's correct

00:51:46.170 --> 00:51:48.700
by decrypting the memory
but not installing it yet.

00:51:48.750 --> 00:51:50.280
And the same is true for
the Exchange account.

00:51:50.350 --> 00:51:52.600
Nothing has been installed yet.

00:51:52.700 --> 00:51:56.800
The final question is after
talking to the Exchange server,

00:51:56.950 --> 00:52:00.600
we get a request for enforcing
a passcode policy on the device.

00:52:00.610 --> 00:52:03.680
Without this,
Exchange will not give us any data,

00:52:03.680 --> 00:52:05.900
emails, calendar information.

00:52:05.900 --> 00:52:09.770
It needs to be seven or more characters
and numbers with one special character.

00:52:09.810 --> 00:52:14.230
So the user needs to type
this in twice to verify it,

00:52:14.340 --> 00:52:16.250
like any passcode.

00:52:16.320 --> 00:52:22.000
And we won't let the installation
finish until we get a suitable passcode.

00:52:22.010 --> 00:52:24.890
As you can see,
there's also always the ability

00:52:24.890 --> 00:52:29.970
to cancel installation and nothing
will be installed on the phone.

00:52:30.690 --> 00:52:32.190
So we're done.

00:52:32.240 --> 00:52:33.000
It's installing.

00:52:33.000 --> 00:52:36.640
It's laying out all the accounts,
VPN services, et cetera.

00:52:36.830 --> 00:52:39.830
And it's also immediately
activating them so that the

00:52:39.930 --> 00:52:41.900
user can take advantage of them.

00:52:41.900 --> 00:52:45.600
Before verifying this,
let me show you that you are able to now

00:52:45.600 --> 00:52:48.480
see the contents of the PKCS12 package.

00:52:48.520 --> 00:52:49.890
Again, at the high level.

00:52:49.960 --> 00:52:53.900
And if you want all the gory details,
they are there for you to see, too.

00:52:59.300 --> 00:53:05.840
Okay, now the user will again tap done
and we take him back to mail.

00:53:05.970 --> 00:53:07.840
The user had to come
originally from Safari,

00:53:07.840 --> 00:53:11.390
we'll take him there too.

00:53:17.700 --> 00:53:21.100
Given that we're here,
let's first verify email information.

00:53:21.230 --> 00:53:24.060
Let's see what came down
from the Exchange server.

00:53:24.160 --> 00:53:27.640
First thing that we see is that
now we have multiple accounts.

00:53:27.640 --> 00:53:29.810
We didn't have that before.

00:53:30.540 --> 00:53:33.060
There's an exchange account.

00:53:33.130 --> 00:53:35.800
All the mailboxes have been downloaded.

00:53:35.840 --> 00:53:38.890
And for the inbox,
I already have--or the user

00:53:38.890 --> 00:53:41.570
already has--emails for it.

00:53:41.760 --> 00:53:45.140
Go to Springboard for a second
and please take notice that both

00:53:45.140 --> 00:53:46.580
YouTube and Safari are gone.

00:53:46.800 --> 00:53:49.670
There's no way to use them
anymore because of the restriction

00:53:49.680 --> 00:53:51.820
coming from the profile.

00:53:51.860 --> 00:53:53.980
We go into Calendar.

00:53:54.500 --> 00:53:59.240
All the events have come
down from the server and of

00:53:59.240 --> 00:54:02.090
course all the calendars too.

00:54:05.600 --> 00:54:09.750
The final piece of the Exchange equation
is contact information.

00:54:09.800 --> 00:54:12.520
We go to the phone,
see that we have all the

00:54:12.600 --> 00:54:14.880
contacts coming from Exchange.

00:54:14.880 --> 00:54:16.700
In this case,
the user didn't have any groups,

00:54:16.700 --> 00:54:20.800
but otherwise they would be there,
and you can also--he would be able to

00:54:20.870 --> 00:54:24.670
search the Exchange directory from here.

00:54:26.060 --> 00:54:29.540
Let's go back into settings
so we can see the rest of the

00:54:29.540 --> 00:54:31.500
things that got installed.

00:54:32.040 --> 00:54:36.000
First, in Mail Contacts and Calendars,
we're going to find the Exchange account,

00:54:36.070 --> 00:54:37.340
which we know that it's there already.

00:54:37.490 --> 00:54:41.400
But what I want to highlight is that
the account can no longer be removed.

00:54:41.400 --> 00:54:45.230
It cannot longer be deleted
because it has been installed by a

00:54:45.300 --> 00:54:47.640
profile and it's under its control.

00:54:47.660 --> 00:54:51.640
We do let the user change the
amount of information that gets

00:54:51.640 --> 00:54:55.360
synced at any given time because
given that it's a mobile device,

00:54:55.390 --> 00:54:58.390
he could be in different places
with different connection

00:54:58.390 --> 00:54:59.940
speeds and availability.

00:54:59.970 --> 00:55:02.060
So he may want to change this.

00:55:02.090 --> 00:55:07.000
But on the other hand,
once we get into account information,

00:55:09.450 --> 00:55:12.910
You'll see that most of
it has been disabled.

00:55:12.970 --> 00:55:16.800
We don't want the user tampering
with this by mistake or on purpose.

00:55:16.880 --> 00:55:18.680
Again,
because it's coming from a profile.

00:55:18.790 --> 00:55:22.870
We do let the user change the password
because it could change on the server.

00:55:22.870 --> 00:55:27.110
And we do let the user change
the description because maybe,

00:55:27.290 --> 00:55:29.460
you know,
he doesn't like Office Exchange as

00:55:29.460 --> 00:55:30.990
the name of the account.

00:55:32.440 --> 00:55:39.820
Okay, let's now go into general
and first stop in networking.

00:55:40.700 --> 00:55:42.500
Here we have a VPN.

00:55:42.640 --> 00:55:45.040
Now it's not connected,
but they are configured.

00:55:45.140 --> 00:55:48.250
Once again,
the user will not be able to remove

00:55:48.250 --> 00:55:53.360
these VPNs unless the profile is removed
and can select whichever one he needs

00:55:53.360 --> 00:55:55.830
to use at a given time and enable it.

00:55:56.290 --> 00:56:00.770
As you can see,
the passcode lock is enabled

00:56:00.860 --> 00:56:02.970
and it cannot be removed.

00:56:03.040 --> 00:56:05.020
Again, because in this case,
for the profile,

00:56:05.100 --> 00:56:07.830
the Exchange account requested this.

00:56:07.900 --> 00:56:11.970
The user can change it and we are going
to enforce the quality of the passcode.

00:56:12.030 --> 00:56:14.800
In this case, just based on Exchange,
but it could also include any other

00:56:14.800 --> 00:56:17.830
profiles that specify passcode policy.

00:56:20.070 --> 00:56:24.140
You can also see restrictions are on.

00:56:24.140 --> 00:56:26.540
Safari and YouTube have been disabled.

00:56:26.540 --> 00:56:30.540
And in this case,
the restrictions are completely

00:56:30.540 --> 00:56:31.750
under the control of profiles.

00:56:31.820 --> 00:56:34.970
The user cannot change
anything here at all.

00:56:37.080 --> 00:56:41.280
Finally, at the bottom of the section,
we now have profiles where the

00:56:41.280 --> 00:56:45.710
user can tap and see what profiles
have been installed on his phone.

00:56:45.730 --> 00:56:46.780
In this case, we just have two.

00:56:46.880 --> 00:56:50.320
The root certificate was first
and then the configuration.

00:56:50.350 --> 00:56:53.760
The user can go in here
to see details about them.

00:56:53.770 --> 00:56:57.620
And more importantly,
the user can come here to remove them.

00:56:57.650 --> 00:57:03.170
And this is actually the only place
where they can come to remove a profile.

00:57:03.710 --> 00:57:05.890
Let's see what happens
when we remove a profile.

00:57:05.990 --> 00:57:09.830
First, again, there's only one button
the user will tap there.

00:57:09.910 --> 00:57:12.240
We will prompt for a confirmation.

00:57:12.350 --> 00:57:14.040
And in this case,
given that there's a passcode

00:57:14.040 --> 00:57:16.670
already set on the device,
we're going to ask for it because we

00:57:16.670 --> 00:57:22.890
want to make sure that only the phone's
owner will be able to remove a profile.

00:57:23.010 --> 00:57:25.820
The same would have been
true for the installation,

00:57:25.870 --> 00:57:29.000
but there was no passcode
set on the phone at the time.

00:57:29.600 --> 00:57:31.600
That's okay,
and we are removing--at this point,

00:57:31.600 --> 00:57:34.760
we are removing all the
data and all the accounts,

00:57:34.760 --> 00:57:37.320
all the restrictions
and the profile itself.

00:57:37.380 --> 00:57:41.280
There's no such concept of
a profile that is sort of

00:57:41.280 --> 00:57:43.320
disabled but still on the device.

00:57:43.340 --> 00:57:46.430
It's either installed
and effective or not.

00:57:46.960 --> 00:57:50.760
The restrictions, as you can see,
have been removed and now

00:57:50.760 --> 00:57:52.810
they're under user control.

00:57:53.330 --> 00:57:54.480
The passcode we leave on.

00:57:54.640 --> 00:57:56.820
We leave the passcode
there for security reasons,

00:57:56.820 --> 00:58:01.490
but it can be turned off
and it can be changed.

00:58:01.700 --> 00:58:03.860
And in this case,
given there are no longer

00:58:03.860 --> 00:58:07.720
any restrictions on it,
do anything, basically.

00:58:08.270 --> 00:58:11.490
Last, VPN is no longer configured.

00:58:11.570 --> 00:58:13.570
We've got rid of all of them.

00:58:14.200 --> 00:58:16.170
As you can expect,
the Exchange account is gone,

00:58:16.200 --> 00:58:17.750
so I'm not going to go in there.

00:58:17.850 --> 00:58:22.700
Let's just verify in the different
applications that the data is also gone.

00:58:22.810 --> 00:58:27.820
First, contacts,
no more--no longer there, no groups.

00:58:27.930 --> 00:58:32.380
Calendars, all my events--all the
user events are gone.

00:58:32.460 --> 00:58:36.690
And finally, if we go into mail,

00:58:38.570 --> 00:58:41.730
We can see that there's
only just the Gmail account.

00:58:41.810 --> 00:58:44.330
The Exchange account is no longer there.

00:58:44.370 --> 00:58:47.980
So basically,
after a profile is installed,

00:58:48.000 --> 00:58:51.770
everything in it will
be enabled and active.

00:58:51.810 --> 00:58:54.990
After it's removed,
the profile itself and all of its

00:58:54.990 --> 00:58:58.210
contents will be removed from the device.

00:58:59.010 --> 00:59:04.000
To finish this tool demo of the UI,
let me show you what happens when the

00:59:04.000 --> 00:59:07.080
user receives an email with a profile.

00:59:07.130 --> 00:59:09.990
The profile has been signed,
but the contents have been

00:59:10.010 --> 00:59:12.880
altered after signing,
maybe by a man-in-the-middle attack.

00:59:12.930 --> 00:59:16.860
So the user goes on and taps on this
without knowing what had happened.

00:59:16.900 --> 00:59:20.880
We immediately check the signature,
compare that with the content,

00:59:20.900 --> 00:59:22.900
and we detect that it's invalid.

00:59:22.940 --> 00:59:26.900
And we don't let the user move on
and try to install or anything.

00:59:26.900 --> 00:59:28.890
We just don't give them the option.

00:59:28.990 --> 00:59:30.890
With that, I finish my presentation.

00:59:31.010 --> 00:59:32.690
Back to Stan.

00:59:44.970 --> 00:59:48.740
So now that we have seen how
profiles can be deployed,

00:59:48.740 --> 00:59:51.460
let's talk about some best practices.

00:59:51.500 --> 00:59:53.830
Please remember that you
can have multiple profiles,

00:59:53.840 --> 00:59:58.490
and that you should actually be
using this capability for the good

00:59:58.490 --> 01:00:02.180
of your security and of the user.

01:00:02.190 --> 01:00:07.280
So a profile can incorporate
identity credentials.

01:00:07.280 --> 01:00:14.060
Another profile can then leverage
those credentials and use them.

01:00:14.070 --> 01:00:18.250
And the iPhone will prompt
for any information that was

01:00:18.290 --> 01:00:20.300
potentially omitted in it.

01:00:20.300 --> 01:00:25.390
What Hernan has shown in his walkthrough,
you saw that the first thing that

01:00:25.390 --> 01:00:30.810
he installed was a raw PKCS1 file.

01:00:30.950 --> 01:00:33.180
That was the root certificate.

01:00:33.190 --> 01:00:36.380
And that itself showed as not signed.

01:00:36.570 --> 01:00:42.980
What you could do instead is package
that PKCS1 file in a profile using IPCU.

01:00:43.220 --> 01:00:46.520
Sign that with something
that is traceable to one of

01:00:46.520 --> 01:00:50.550
those 600 root authorities.

01:00:50.690 --> 01:00:54.050
And therefore,
have the entire workflow for the user be

01:00:54.050 --> 01:00:59.460
always verified so that it is possible to
have a workflow or user experience that

01:00:59.460 --> 01:01:02.910
is totally certified and every single
thing that they receive on the phone

01:01:03.450 --> 01:01:07.840
is totally trusted as coming from you.

01:01:10.320 --> 01:01:14.820
So an example of that would be: First,
deploy corporate root certificate,

01:01:14.820 --> 01:01:18.800
be it via PKCS1 file, which then again in
itself is not trusted,

01:01:18.800 --> 01:01:23.620
or packaged in and signed with
something that you got from VeriSign,

01:01:23.620 --> 01:01:25.110
for example.

01:01:25.460 --> 01:01:29.360
Distribute a second profile,
which has a generic email

01:01:29.620 --> 01:01:32.500
or EIS account template.

01:01:32.680 --> 01:01:34.980
Without the username,
without any passwords,

01:01:34.980 --> 01:01:37.710
and the user will be
prompted to enter these.

01:01:37.710 --> 01:01:40.650
Certificate-based VPN,
Wi-Fi configuration,

01:01:40.650 --> 01:01:44.790
stuff that we have seen,
and security policies, caret and stick.

01:01:44.840 --> 01:01:46.600
It's all or nothing.

01:01:46.610 --> 01:01:50.700
Then the third profile,
give it something to your sales

01:01:50.700 --> 01:01:56.350
organization or to your VPs or whatever,
some really high-profile server,

01:01:56.350 --> 01:02:00.710
and now you have even more
draconian access restrictions,

01:02:00.710 --> 01:02:01.140
passcode policies.

01:02:04.680 --> 01:02:08.160
For web distribution,
place it potentially on a

01:02:08.160 --> 01:02:09.880
password-protected website.

01:02:09.940 --> 01:02:11.950
Use throwaway passwords.

01:02:12.090 --> 01:02:17.140
Remember, the contents are not encrypted,
they're just obfuscated.

01:02:17.410 --> 01:02:19.090
Signed profiles are tamper-proof.

01:02:19.190 --> 01:02:23.170
The user or the man in the middle
can still see what's in the profile,

01:02:23.260 --> 01:02:25.750
therefore don't put secrets in them.

01:02:25.870 --> 01:02:29.670
However, it will not be installed,
no matter what.

01:02:29.760 --> 01:02:34.510
So you can really trust that
when you sign something,

01:02:34.510 --> 01:02:34.510
it's that or nothing.

01:02:36.910 --> 01:02:42.150
Ron and Hernan have stressed before
the importance of the identifier.

01:02:42.270 --> 01:02:45.670
The root identifier,
each individual payload within the

01:02:45.670 --> 01:02:47.820
profile has its own identifier.

01:02:47.820 --> 01:02:49.820
But we're talking about
a root identifier.

01:02:49.820 --> 01:02:57.150
The profile identifier determines
whether when a new profile is installed,

01:02:57.150 --> 01:03:00.990
whether it will be added to the list
of profiles installed on the phone or

01:03:01.130 --> 01:03:04.860
whether it will replace a profile that
is already installed on the phone.

01:03:04.920 --> 01:03:11.100
So be really careful how you
choose those profile identifiers.

01:03:11.310 --> 01:03:15.100
Currently, there is no way to push
the profiles to the user.

01:03:15.140 --> 01:03:18.870
The user always has to go either
to a website and click on it and

01:03:18.880 --> 01:03:21.240
then go install and all that or not.

01:03:21.300 --> 01:03:24.680
You cannot really force a
user to install a profile.

01:03:24.790 --> 01:03:26.890
You do it, again,
via the carrot and stick approach.

01:03:27.190 --> 01:03:31.580
You want the phone to
be really useful to you,

01:03:31.580 --> 01:03:31.580
you have to install it.

01:03:32.600 --> 01:03:37.200
In summary,
the profiles are intended to simplify

01:03:37.330 --> 01:03:40.190
iPhone and iPod touch configuration.

01:03:40.290 --> 01:03:42.550
Remember,
there are certain aspects of the phone

01:03:42.660 --> 01:03:44.650
that can be only configured by profiles.

01:03:44.750 --> 01:03:47.860
APN is an example that can
be only configured that way.

01:03:47.960 --> 01:03:54.480
Also, a lot of VPN and Wi-Fi,
like the whole 802.1X Wi-Fi network

01:03:54.540 --> 01:03:59.260
can be only configured by profiles
because you saw the UI on a desktop,

01:03:59.270 --> 01:04:00.660
it's pretty complicated.

01:04:00.760 --> 01:04:05.770
We did not want to incorporate
that into the phone.

01:04:07.220 --> 01:04:10.670
You have utilities available
for creating the profiles.

01:04:10.770 --> 01:04:14.100
You have an OS X native application,
you have a web-based tool that

01:04:14.280 --> 01:04:16.070
can also be driven via commands.

01:04:16.100 --> 01:04:23.090
So, you also have an XML description,
format description, or will have.

01:04:23.100 --> 01:04:28.100
You can then distribute the
profiles via web or email.

01:04:28.100 --> 01:04:32.090
And remember to consider
security when creating templates.

01:04:32.110 --> 01:04:36.090
Put in as much information as needed,
but only as much as necessary.

01:04:36.110 --> 01:04:39.310
Also, by omitting some information,
you can make a profile much

01:04:39.310 --> 01:04:42.090
more generically usable
throughout your company.

01:04:43.740 --> 01:04:46.410
Related sessions,
if you have Time Machine,

01:04:46.430 --> 01:04:51.930
you can go back to earlier today
and attend those two sessions.

01:04:52.020 --> 01:04:55.030
More importantly,
tomorrow morning at 10:30, we have a lab.

01:04:55.090 --> 01:04:57.700
We don't have a slide for it
because we forgot about it.

01:04:57.940 --> 01:05:00.760
Tomorrow morning at 10:30,
one of the labs is our

01:05:00.760 --> 01:05:03.560
lab about profiles.

01:05:03.580 --> 01:05:06.290
Mark,
do you by any chance know which lab?

01:05:07.000 --> 01:05:08.730
In the IT lab, obviously.

01:05:08.740 --> 01:05:13.360
So 10:30 you can come and bug
us with questions for an hour.

01:05:14.030 --> 01:05:16.830
You can also bug Mark Malone.

01:05:17.080 --> 01:05:17.990
That's his email address.