WEBVTT

00:00:20.390 --> 00:00:22.690
Good morning, everybody.

00:00:22.760 --> 00:00:23.700
My name is Scott Barbber.

00:00:23.700 --> 00:00:27.100
I'm the Integration Services Manager for
Apple Professional Services and

00:00:27.100 --> 00:00:30.140
Education,
and I'm here to present to you Deploying

00:00:30.140 --> 00:00:32.770
Portable and Network Home Directories.

00:00:35.560 --> 00:00:37.070
So we're going to review
a number of different home

00:00:37.070 --> 00:00:40.230
directory deployment models,
ranging from the simplest of

00:00:40.490 --> 00:00:44.360
home directory models that is a
strictly local home directory all

00:00:44.360 --> 00:00:48.620
the way up through mobile accounts
and portable home directories,

00:00:48.620 --> 00:00:52.530
and finally finishing off with
the concept of hosting network

00:00:52.530 --> 00:00:54.620
and portable home directories.

00:00:54.690 --> 00:00:58.450
And we'll be reviewing a number
of features that were added in

00:00:58.510 --> 00:00:59.810
Leopard and talk a little bit about
the impact of those new features

00:00:59.810 --> 00:00:59.810
to your respective environments.

00:01:00.140 --> 00:01:03.740
So starting with the sort of simplest
paradigm of home directory deployment,

00:01:03.740 --> 00:01:06.940
the local home directory,
and this is essentially where you've

00:01:06.940 --> 00:01:09.060
got your home stored on your computer.

00:01:09.060 --> 00:01:12.030
This is dictated by a specific attribute
on the user record known as the

00:01:12.030 --> 00:01:17.090
NFS home directory attributes and that
attribute just refers to a local path.

00:01:17.100 --> 00:01:20.580
In this case, /user/admin, for example.

00:01:20.580 --> 00:01:22.000
And this can be used
with any account type.

00:01:22.000 --> 00:01:24.440
So it's a common misnomer that in
order to have a local home directory,

00:01:24.500 --> 00:01:27.080
you must have a local account.

00:01:27.080 --> 00:01:30.210
In reality,
you can configure any type of account,

00:01:30.210 --> 00:01:34.600
a local account, a guest account,
or a network type account to have

00:01:34.600 --> 00:01:37.280
a locally defined home directory.

00:01:37.700 --> 00:01:41.640
And we've added in past releases
of Mac OS X the FileVault feature,

00:01:41.650 --> 00:01:46.400
whereby your home lives locally on your
Mac but lives in an encrypted disk image.

00:01:46.450 --> 00:01:53.030
This requires your administrative
users to enable this feature,

00:01:53.030 --> 00:01:57.620
and then you can set a
master password so that,

00:01:57.620 --> 00:01:58.200
for example,
if a user forgets his or her password,

00:01:58.200 --> 00:01:58.200
you still have a means
to recover that data.

00:01:58.550 --> 00:02:00.200
Now, new in Leopard,
we've added a feature

00:02:00.200 --> 00:02:01.530
called the Guest Account.

00:02:01.650 --> 00:02:05.170
And the idea behind the Guest
Account is to give you sort of

00:02:05.170 --> 00:02:09.240
a kiosk-style login whereby you
have a local account named Guest,

00:02:09.240 --> 00:02:11.930
and at logout time,
the contents of the home

00:02:11.930 --> 00:02:15.660
directory for that user are
actually completely deleted.

00:02:15.660 --> 00:02:20.320
So there's just essentially no footprint
for that user's previous login.

00:02:20.320 --> 00:02:23.810
This is enabled in the
Account System Preference pane.

00:02:23.820 --> 00:02:25.850
So there's a checkbox for allowing
Guest to log into the computer.

00:02:27.660 --> 00:02:30.900
There's also been a new feature
added to allow this to be managed.

00:02:30.900 --> 00:02:34.740
So if you're in an environment where
you're managing policies for your

00:02:34.800 --> 00:02:38.940
Mac clients via Open Directory or
via another directory system,

00:02:38.940 --> 00:02:42.370
you can actually enable guest
access in bulk at the computer

00:02:42.370 --> 00:02:44.230
or computer group level.

00:02:44.370 --> 00:02:48.730
And if you'd like to find out more about
managing Macs using Managed Client,

00:02:48.810 --> 00:02:51.240
I would encourage you to
check out Session 517,

00:02:51.240 --> 00:02:56.460
which is Managing Clients and Preferences
with Mac OS X and Leopard Server.

00:02:57.280 --> 00:02:59.080
So in terms of how the
local home gets created,

00:02:59.080 --> 00:03:02.720
if you have a local user and you go
to the account system preference pane,

00:03:02.720 --> 00:03:06.090
that local home directory is created
immediately upon you provisioning the

00:03:06.090 --> 00:03:07.730
account in the accounts pref pane.

00:03:07.740 --> 00:03:11.730
Now for all other methods that
you might use to create a local

00:03:11.810 --> 00:03:15.590
account or to create an account,
that causes the home directory to be

00:03:15.590 --> 00:03:17.510
created at the user's first login.

00:03:17.520 --> 00:03:19.980
So again, for the guest user,
for example,

00:03:20.150 --> 00:03:23.260
the home is created at login time,
deleted at logout time.

00:03:23.260 --> 00:03:26.420
And then for your network users, again,
that local home directory would

00:03:26.420 --> 00:03:28.030
be created at their first login.

00:03:28.040 --> 00:03:32.190
So the only time when you don't create
the local home directory at first login

00:03:32.200 --> 00:03:35.280
is when you provision an account via
the account system preference pane.

00:03:37.180 --> 00:03:39.210
At the command line,
there's actually a tool that's built

00:03:39.290 --> 00:03:43.030
into every shipping Mac OS X system
called Create Home Dir.

00:03:43.160 --> 00:03:46.330
And this can be used to
create home directories,

00:03:46.440 --> 00:03:49.540
and you can create them
either for local users,

00:03:49.540 --> 00:03:52.500
network users, really any type of user.

00:03:52.500 --> 00:03:56.580
You can call this command,
and what it does is checks the

00:03:56.590 --> 00:04:01.900
NFS home directory attribute,
looks at that path, and then creates the

00:04:01.900 --> 00:04:02.370
home directory for you,
depending on where that home is located.

00:04:03.190 --> 00:04:05.480
The creation of the home
directory is based on something

00:04:05.480 --> 00:04:06.440
known as the user template.

00:04:06.630 --> 00:04:10.610
And you can customize the user
template to change the user experience.

00:04:10.730 --> 00:04:14.990
This is located in
/system/library/usertemplates.

00:04:15.040 --> 00:04:17.270
Notably,
because it's in the system folder,

00:04:17.270 --> 00:04:20.700
just be aware that this is
something that can be modified

00:04:20.700 --> 00:04:23.140
or changed by a software update.

00:04:23.280 --> 00:04:26.560
So the contents of this have
to be owned by the root user,

00:04:26.570 --> 00:04:28.180
have to have the wheel group.

00:04:28.210 --> 00:04:29.940
Now, new in Leopard,
for those of you who've had some

00:04:29.940 --> 00:04:32.400
experience editing this in the past,
we've made some changes to

00:04:32.400 --> 00:04:34.320
the defaults of the template.

00:04:34.350 --> 00:04:37.800
One big change is that there's now
what's known as an everyone-denied-delete

00:04:37.850 --> 00:04:41.840
access control entry on the major
subfolders inside of your home directory.

00:04:41.840 --> 00:04:46.040
So for example, movies, music, pictures,
et cetera, those things now all have

00:04:46.350 --> 00:04:47.430
an everyone-denied-delete.

00:04:47.540 --> 00:04:51.400
This is more or less intended to
prevent a local user from accidentally

00:04:51.400 --> 00:04:53.180
deleting one of those folders.

00:04:53.220 --> 00:04:55.100
However,
your power users may express some

00:04:55.190 --> 00:04:57.420
frustration around the notion
of not being able to easily

00:04:57.420 --> 00:04:59.010
delete one of those folders.

00:04:59.050 --> 00:05:00.660
So just something to be aware of.

00:05:00.760 --> 00:05:03.800
In addition,
the local user gets a Dropbox by

00:05:03.840 --> 00:05:07.480
default as part of the user template.

00:05:07.500 --> 00:05:11.730
And one thing that's been added in
Leopard is an access control entry that

00:05:11.790 --> 00:05:16.000
causes anything dropped into there to
get an inherited access control entry

00:05:16.280 --> 00:05:18.120
for the owner of the home directory.

00:05:18.120 --> 00:05:22.090
This corrects some longstanding
issues around move operations and

00:05:22.090 --> 00:05:26.710
drag and drops into Dropboxes,
resulting in the file still being owned

00:05:26.710 --> 00:05:30.690
by the person that dropped it instead
of being accessible by the receiver,

00:05:30.690 --> 00:05:31.640
so to speak.

00:05:33.200 --> 00:05:36.100
So just some general guidelines
for editing the user template.

00:05:36.240 --> 00:05:38.840
First of all,
edit this at your own peril,

00:05:38.840 --> 00:05:40.930
in the sense that it's
located in the system folder,

00:05:41.040 --> 00:05:44.880
and it could be overwritten by a software
update or some other system change.

00:05:44.880 --> 00:05:47.950
Check for hard-coded paths in the things
that you put into the user template.

00:05:48.040 --> 00:05:50.500
So example, if you want to copy a
preference file into there,

00:05:50.500 --> 00:05:53.500
be aware that that preference
file may contain a hard-coded

00:05:53.620 --> 00:05:56.940
path to the home directory of the
user that created the pref file,

00:05:57.060 --> 00:05:59.940
and you may not want to propagate
that out to every single user

00:05:59.940 --> 00:06:01.760
that's accessing your system.

00:06:01.760 --> 00:06:03.420
In addition,
make sure you clean up after yourself.

00:06:03.640 --> 00:06:06.840
So if you're going to do a bulk copy
of items into the user template,

00:06:06.840 --> 00:06:10.350
be really careful that you don't leave
things like passwords or pref files

00:06:10.460 --> 00:06:13.560
that contain sensitive user data,
because that will get duplicated

00:06:13.560 --> 00:06:16.100
for every user of that system.

00:06:17.290 --> 00:06:20.660
Now for Active Directory environments,
local homes get special-cased

00:06:20.710 --> 00:06:21.960
ever so slightly.

00:06:21.960 --> 00:06:24.840
So there's a checkbox inside of
the Active Directory plug-in known

00:06:24.840 --> 00:06:26.760
as the fourth local home option.

00:06:26.760 --> 00:06:29.610
And what this does is it
programmatically causes the

00:06:29.610 --> 00:06:33.240
AD plug-in to return a local home
directory for all users of the system

00:06:33.240 --> 00:06:35.300
via the NFS home directory attribute.

00:06:35.300 --> 00:06:37.820
And then it programmatically
generates a second attribute.

00:06:37.880 --> 00:06:39.960
It's known as original home directory.

00:06:39.960 --> 00:06:42.490
And original home directory
is just an encoded URL back

00:06:42.490 --> 00:06:44.140
to your network home location.

00:06:44.140 --> 00:06:48.000
And so at the command line,
you can actually configure this

00:06:48.020 --> 00:06:49.830
as well using the config AD

00:06:50.130 --> 00:06:53.380
And it's important to note that this
actually generates a little bit of a

00:06:53.380 --> 00:06:56.890
small snippet of managed client policy
on the fly that does two things for you.

00:06:57.010 --> 00:06:59.260
First of all,
it mounts the SharePoint where your

00:06:59.260 --> 00:07:02.940
network home directory lives at login
time using your name and password.

00:07:02.940 --> 00:07:05.830
And then it also puts a link to
your network home on the dock

00:07:05.830 --> 00:07:08.720
directly so that you can go
into the dock and gain immediate

00:07:08.820 --> 00:07:10.940
accessibility to your network home.

00:07:10.940 --> 00:07:14.580
The note is this cannot be combined
with portable home directories.

00:07:14.860 --> 00:07:17.010
So if you want to use portable
home directories in an

00:07:17.010 --> 00:07:19.650
Active Directory environment,
make sure that you don't check

00:07:19.660 --> 00:07:20.790
the force local home box.

00:07:20.920 --> 00:07:23.610
Make sure that you either use
the option to create a mobile

00:07:23.680 --> 00:07:27.040
account or set the mobility policy
upstream in your management.

00:07:27.040 --> 00:07:28.390
All right.

00:07:29.680 --> 00:07:33.700
It's also important to note that this
requires that in Active Directory users

00:07:33.700 --> 00:07:37.670
and computers that you've populated
a home directory location,

00:07:37.720 --> 00:07:41.200
specifically that you've given
a UNC path that refers to a

00:07:41.200 --> 00:07:43.230
specific network location.

00:07:43.370 --> 00:07:47.900
And that's populated on the Profiles
tab in AD Users and Computers.

00:07:49.260 --> 00:07:51.940
So now moving away from local
home directories and onto

00:07:51.940 --> 00:07:54.250
network home directories.

00:07:54.460 --> 00:07:58.130
A true network home directory is
a network account combined with

00:07:58.190 --> 00:07:59.800
a network-based home directory.

00:07:59.800 --> 00:08:01.910
So there's no local
user footprint at all.

00:08:01.920 --> 00:08:06.060
And this retains sort of the Unix tilde
concept in the sense that if I type

00:08:06.150 --> 00:08:10.460
in the command line tilde username,
that that is a substitution for the

00:08:10.570 --> 00:08:12.780
actual path to my home directory.

00:08:12.780 --> 00:08:15.280
However,
a true full-blown network home directory

00:08:15.280 --> 00:08:17.290
is exceedingly bandwidth intensive.

00:08:17.300 --> 00:08:20.180
The general requirement for
these are switched 100 megabit

00:08:20.180 --> 00:08:23.260
connections to the client and a
recommendation of having a gigabit

00:08:23.260 --> 00:08:24.900
speed connection up to your server.

00:08:24.900 --> 00:08:27.940
This is not something that, for example,
can be trivially deployed

00:08:27.940 --> 00:08:31.270
in a wireless environment,
as there doesn't exist sufficient

00:08:31.270 --> 00:08:34.200
bandwidth to support all the
small file and large file

00:08:34.280 --> 00:08:35.580
traffic associated with this.

00:08:35.580 --> 00:08:38.550
Also be aware that you're
essentially tying your entire

00:08:38.550 --> 00:08:40.480
user experience to the network.

00:08:40.480 --> 00:08:44.320
And so as goes the network connection,
so goes the user experience.

00:08:44.400 --> 00:08:47.520
This can also mean that bad
application behavior can cause

00:08:47.520 --> 00:08:49.500
some significant end-user pain.

00:08:49.500 --> 00:08:51.360
For example,
an application that might pull.

00:08:51.600 --> 00:08:54.480
A given folder over and over
again looking for changes to

00:08:54.480 --> 00:08:57.290
maybe update a script menu item
or something along those lines.

00:08:57.300 --> 00:09:00.900
So why would you do network
homes in the first place then,

00:09:00.900 --> 00:09:02.290
given some of those caveats?

00:09:02.490 --> 00:09:04.800
Well, it does give you an opportunity
to centralize your data.

00:09:04.800 --> 00:09:06.510
So it becomes machine independent.

00:09:06.790 --> 00:09:10.120
Repurposing a lab, for example,
becomes really trivial if there's

00:09:10.190 --> 00:09:13.100
no user data stored locally that
I have to worry about retaining.

00:09:13.340 --> 00:09:18.260
This also can make it a little easier for
you to deal with backup because the data

00:09:18.260 --> 00:09:21.100
exists independent of the workstations.

00:09:21.700 --> 00:09:23.800
It means that you don't have
to worry about backing up

00:09:23.800 --> 00:09:25.100
content off the workstations.

00:09:25.100 --> 00:09:28.040
You simply back the server up
and your data has been preserved.

00:09:28.100 --> 00:09:31.300
In terms of how the
network home gets defined,

00:09:31.300 --> 00:09:34.200
we talked earlier about a local
home being defined strictly with

00:09:34.320 --> 00:09:35.890
the NFS home directory attribute.

00:09:35.900 --> 00:09:39.290
So in a network home
directory environment,

00:09:39.290 --> 00:09:42.600
you have the NFS home directory
attribute that refers to a network path.

00:09:42.760 --> 00:09:46.150
Specifically,
it starts with /network/servers,

00:09:46.240 --> 00:09:49.290
and then you have a host name and
then some additional path item.

00:09:49.300 --> 00:09:51.400
In addition,
you have an additional attribute

00:09:51.400 --> 00:09:51.400
called the network path.

00:09:51.400 --> 00:09:57.260
This is a shared relative
URL that's encoded and stored

00:09:57.260 --> 00:09:58.400
in the home directory attribute.

00:09:58.400 --> 00:10:01.360
And I've included an example here.

00:10:03.000 --> 00:10:07.400
To go along with the user record,
you also have to have a mount record.

00:10:07.400 --> 00:10:10.900
And this mount record is
accessible on the search path,

00:10:10.900 --> 00:10:14.630
and it can either be manually created
in your local directory or it can be

00:10:14.720 --> 00:10:20.560
created using Server Admin and populated
into a network-based directory system.

00:10:21.660 --> 00:10:24.110
Once again,
with Active Directory environments,

00:10:24.210 --> 00:10:25.880
this is a special case just a little bit.

00:10:25.880 --> 00:10:30.030
Mount records actually aren't required in
an Active Directory environment because

00:10:30.110 --> 00:10:34.420
the AD plugin generates Mount records
on the fly anytime it sees a user home

00:10:34.430 --> 00:10:36.840
directory populated on a user record.

00:10:36.840 --> 00:10:43.240
So again, the key is that you have to
make sure that you've populated

00:10:43.240 --> 00:10:46.870
the Active Directory Users and
Computers Profiles tab with

00:10:46.870 --> 00:10:46.870
a network home location.

00:10:50.910 --> 00:10:54.750
In terms of accessing the network home,
we do have support for three different

00:10:54.860 --> 00:10:57.800
protocols for accessing user home
directories over the network.

00:10:58.210 --> 00:11:01.800
Starting with AFP3,
this gives you full HFS+ feature support.

00:11:01.800 --> 00:11:03.800
It supports Kerberos authentication.

00:11:03.800 --> 00:11:06.800
We've had auto-reconnect
support for quite a while.

00:11:06.800 --> 00:11:08.800
There are implementations
available for Mac servers,

00:11:08.840 --> 00:11:11.800
for Windows servers,
for network servers as well.

00:11:11.800 --> 00:11:13.800
There's also an open
store stack out there,

00:11:13.800 --> 00:11:17.570
the NetATOX stack, which is available for
other platforms as well.

00:11:17.990 --> 00:11:20.200
Historically,
scalability with AFP has been a

00:11:20.230 --> 00:11:22.680
challenge with network home directories,
although this has much

00:11:22.680 --> 00:11:23.800
improved in Leopard Server.

00:11:23.800 --> 00:11:27.340
And there's no fast user switching
support when you're using AFP as

00:11:27.680 --> 00:11:29.800
your network home directory protocol.

00:11:29.800 --> 00:11:32.970
That's because at any given time,
only one user can be

00:11:33.070 --> 00:11:34.590
connected to that share.

00:11:34.820 --> 00:11:36.660
So when you flip over to
another user with a network home

00:11:36.660 --> 00:11:39.110
directory in that same share,
there's no way to drop the

00:11:39.110 --> 00:11:42.790
connection and re-establish it
as your newly connected user.

00:11:42.800 --> 00:11:45.020
So be aware that fast user
switching and AFP network

00:11:45.140 --> 00:11:46.800
homes don't really go together.

00:11:46.800 --> 00:11:50.080
Scott Barbber Now with NFS,
in Leopard Server,

00:11:50.230 --> 00:11:52.800
we added Kerberized NFS support.

00:11:52.800 --> 00:11:55.900
Implementations are available
on all major platforms with NFS,

00:11:56.000 --> 00:11:59.390
and you get full tilde username support,
meaning that any user can

00:11:59.390 --> 00:12:03.930
arbitrarily get to another user's
home directory fairly trivially,

00:12:04.150 --> 00:12:05.780
for example,
if there's public content that

00:12:05.780 --> 00:12:06.720
that user's hosting there.

00:12:07.030 --> 00:12:10.420
This also allows for fast user switching,
as you don't need to do any kind of an

00:12:10.520 --> 00:12:12.800
authentication switch on the connection.

00:12:12.950 --> 00:12:14.800
Bear in mind, however,
if you use ACLs in your environment,

00:12:14.800 --> 00:12:16.800
that NFS limits you currently
to being really connected to

00:12:16.800 --> 00:12:16.800
your network home directory.

00:12:16.800 --> 00:12:22.360
So if you've deployed ACLs,
having NFS connections to your home

00:12:22.700 --> 00:12:26.400
directories will limit you in that sense.

00:12:27.110 --> 00:12:30.490
Finally,
we do have support for SMB homes as well.

00:12:30.760 --> 00:12:35.100
In Leopard, client-side support was
added for auto-reconnect for

00:12:35.100 --> 00:12:37.200
SMB in Kerberos environments.

00:12:37.490 --> 00:12:41.410
There's also better NTFS stream
support so that if you shouldn't

00:12:41.410 --> 00:12:46.060
be going forward creating those
.underbar files that so many of you

00:12:46.060 --> 00:12:48.640
have expressed are challenging for you.

00:12:48.850 --> 00:12:51.060
There's also Kerberos
support for the SMB client,

00:12:51.100 --> 00:12:55.630
and this generally is the most
friendly to existing Windows IT shops.

00:12:55.660 --> 00:12:57.810
However,
Tiger and earlier OSs have somewhat

00:12:57.810 --> 00:13:00.220
limited support in this area,
and this is only fully

00:13:00.390 --> 00:13:01.870
supported with the AD plug-in.

00:13:01.950 --> 00:13:04.030
So you'll notice that if
you go into Server Admin,

00:13:04.040 --> 00:13:06.280
for example,
that you don't see the option to

00:13:06.400 --> 00:13:09.940
create an automount record for
anything other than AFP and NFS.

00:13:09.970 --> 00:13:14.620
That's because support for SMB home
directories right now is exclusively

00:13:14.680 --> 00:13:16.530
limited to the AD plug-in.

00:13:18.070 --> 00:13:21.160
New in Leopard is a feature called,
that we call folder redirection.

00:13:21.160 --> 00:13:24.530
This is a client-side feature,
and it's designed to really enable

00:13:24.530 --> 00:13:27.770
administrators to reduce small
file traffic back to the server.

00:13:27.780 --> 00:13:31.080
So certain folders, for example,
like the movies folder or the

00:13:31.080 --> 00:13:34.630
caches folder inside of the home
directory can be redirected to a

00:13:34.940 --> 00:13:36.850
local location on the workstation.

00:13:36.860 --> 00:13:39.330
This is activated by the
managed client policies,

00:13:39.340 --> 00:13:43.050
and there's actually a specific key
called the com.apple.mcx-redirector

00:13:43.050 --> 00:13:44.500
key that you would use.

00:13:44.580 --> 00:13:46.830
This, for example,
then allows you to redirect

00:13:46.920 --> 00:13:51.240
the library caches folder
down to a temporary location.

00:13:51.260 --> 00:13:54.440
And at this time,
I would actually like to demonstrate

00:13:54.440 --> 00:13:55.530
folder redirection for you.

00:14:01.650 --> 00:14:03.800
Okay,
so I've opened up Workgroup Manager here,

00:14:03.800 --> 00:14:07.930
and I've got a user already defined
in the system called Redirection.

00:14:08.030 --> 00:14:11.120
And what I'm going to do is go ahead
and set up a Manage Client Policy for

00:14:11.120 --> 00:14:15.790
this user that will cause his home
directory to be partially redirected.

00:14:15.880 --> 00:14:18.400
So I'm going to go into
Preferences in Workgroup Manager,

00:14:18.460 --> 00:14:19.900
and I'm going to go to Details.

00:14:19.900 --> 00:14:24.660
There's not a specific icon that
we use for this particular item.

00:14:24.820 --> 00:14:29.050
And I'm going to click this plus button,
and I'm going to...

00:14:30.540 --> 00:14:34.570
Go into the System folder,
into the Library folder,

00:14:34.570 --> 00:14:39.700
and then to Core Services.

00:14:39.700 --> 00:14:44.030
And I'm going to pick out an
application called manageclient.app.

00:14:48.580 --> 00:14:50.660
Once I choose "Add," you'll
see that this added a number of

00:14:50.660 --> 00:14:58.030
different preference IDs and names,
and the one that we're particularly

00:14:58.030 --> 00:14:58.030
interested in is the one marked
here as "Folder Redirection."

00:14:59.640 --> 00:15:02.800
So I'm going to double-click that item,
and I'm going to click the

00:15:02.800 --> 00:15:06.530
disclosure triangle here next to
"Always" and choose "New Key."

00:15:07.750 --> 00:15:11.000
I'll choose Login Redirections.

00:15:11.010 --> 00:15:13.190
Once again,
click the disclosure triangle.

00:15:13.240 --> 00:15:17.540
Choose New Key again, and we see Redirect
Action Info is populated.

00:15:17.630 --> 00:15:20.840
And I'm going to go ahead and just
use the defaults for this demo because

00:15:20.840 --> 00:15:22.460
it makes life a little easier for us.

00:15:22.460 --> 00:15:25.750
We'll see that there's an action,
which is the Delete and

00:15:25.780 --> 00:15:27.620
Create Sim Link action.

00:15:27.620 --> 00:15:29.500
There's a destination folder path.

00:15:29.550 --> 00:15:33.760
And it's a little tough to see,
but there's a %@ sign.

00:15:33.800 --> 00:15:37.020
And that %@ sign substitutes
in the currently logging in

00:15:37.020 --> 00:15:39.790
user's name into the path.

00:15:39.950 --> 00:15:43.410
And then finally, the actual folder path
that is to be redirected.

00:15:43.530 --> 00:15:47.210
So this action will redirect the
contents of the Library Caches folder

00:15:47.210 --> 00:15:50.960
in the user home directory into
the temp folder on the local hard

00:15:50.960 --> 00:15:55.240
drive of the system where I log in.

00:15:55.340 --> 00:15:57.610
So I'll click Apply now.

00:15:59.460 --> 00:16:03.400
And then it's time to actually put
this into action and make it work.

00:16:03.550 --> 00:16:05.990
So I'm going to switch my system here.

00:16:58.340 --> 00:17:00.940
Okay, so now at my login screen,
and I'm going to go ahead and

00:17:00.940 --> 00:17:03.300
log in with my Redirection user.

00:17:03.300 --> 00:17:06.300
Oops.

00:17:06.300 --> 00:17:16.300
Pardon me.

00:17:16.300 --> 00:17:26.300
There we go.

00:17:26.300 --> 00:17:29.000
So you can see here that Redirection
has a home directory that's

00:17:29.000 --> 00:17:31.380
located on xserve.pretendcode.com,
which is my server,

00:17:31.470 --> 00:17:33.300
and it's located in the
home directory share.

00:17:33.300 --> 00:17:36.300
I'm going to specifically look inside
of the library folder for this user,

00:17:36.300 --> 00:17:38.840
and we'll see that caches
has been replaced with what

00:17:38.930 --> 00:17:40.260
appears to be an alias.

00:17:40.300 --> 00:17:43.170
If I double-click this,
I see that this has now been

00:17:43.170 --> 00:17:47.200
redirected into the temp folder,
into a subfolder with my current

00:17:47.200 --> 00:17:50.290
user's name called Redirection,
and library caches.

00:17:50.300 --> 00:17:52.950
And that is folder Redirection.

00:17:58.840 --> 00:18:01.660
Moving on from network--full-blown
network home directories--

00:18:01.660 --> 00:18:03.300
onto mobile accounts.

00:18:03.390 --> 00:18:05.560
So with mobile accounts,
you have a cached network account

00:18:05.670 --> 00:18:07.800
combined with a local home directory.

00:18:07.900 --> 00:18:12.350
So user attributes are copied and then
stored locally in the local directory

00:18:12.350 --> 00:18:14.060
system with a local home directory.

00:18:14.180 --> 00:18:17.000
In addition, your password hash is
also stored locally.

00:18:17.000 --> 00:18:20.590
However, your network server is
preferred if it's reachable.

00:18:20.660 --> 00:18:23.980
So this allows for offline
access to the account if you

00:18:23.980 --> 00:18:26.180
are to roam off of your network.

00:18:26.960 --> 00:18:29.780
New in Leopard is an additional
feature that's sort of an

00:18:29.870 --> 00:18:34.370
extension of the mobile accounts
paradigm called external accounts.

00:18:34.470 --> 00:18:38.690
And an external account is nothing
more than a locally-cast account

00:18:38.790 --> 00:18:42.700
where the user's folder is also
stored on an external drive.

00:18:42.700 --> 00:18:44.900
This is going to be a
USB or a FireWire drive.

00:18:44.960 --> 00:18:51.130
Key important piece to this is that
the volume must be HFS+ formatted.

00:18:51.140 --> 00:18:55.980
So most of the time,
your pen drives and whatnot come FAT32

00:18:55.980 --> 00:18:58.050
or FAT16 formatted out of the box.

00:18:58.170 --> 00:19:00.660
Important to note that if you want to
use those drives with this feature,

00:19:00.770 --> 00:19:03.530
they need to be HFS+ formatted.

00:19:04.130 --> 00:19:07.400
So when you attach the drive,
this actually makes any user who's

00:19:07.400 --> 00:19:10.480
had the account cached onto that
drive available to authenticate.

00:19:10.580 --> 00:19:13.000
So the user actually
shows up in the user list,

00:19:13.040 --> 00:19:15.300
and if the computer's not in
the same directory domain,

00:19:15.300 --> 00:19:18.500
it will actually prompt for
admin authorization to gain

00:19:18.500 --> 00:19:20.200
access to the local system.

00:19:20.360 --> 00:19:23.830
And rather than explaining this,
the best way for me to show this

00:19:23.830 --> 00:19:26.010
off is to actually demo it for you.

00:19:31.310 --> 00:19:34.000
So switching back once
again to my system here,

00:19:34.000 --> 00:19:35.700
I've got redirection.

00:19:35.700 --> 00:19:37.700
I've got a new account
here called external,

00:19:37.700 --> 00:19:41.310
so I'm gonna go ahead and use that
one for this part of the demo.

00:19:41.670 --> 00:19:44.520
So, selecting the external account,
I'm going to go to Preferences,

00:19:44.520 --> 00:19:46.840
and I'm going to go to
the Overview section.

00:19:46.920 --> 00:19:49.520
So, there's a full UI for
this particular feature.

00:19:49.520 --> 00:19:51.510
If we go to Mobility,

00:19:51.610 --> 00:19:54.310
I'm going to go ahead and turn on
the mobility option to create a

00:19:54.310 --> 00:19:56.600
mobile account when the user logs in.

00:19:56.800 --> 00:20:02.730
And just for the sake of the demo,
I'll turn off the requiring confirmation.

00:20:03.340 --> 00:20:07.400
And we'll also turn syncing off for
the purposes of this demo as well.

00:20:07.440 --> 00:20:11.200
We're going to go to Options here,
and we'll manage this Always.

00:20:11.310 --> 00:20:13.900
And we'll notice that we have
Home Folder Location listed,

00:20:13.930 --> 00:20:16.520
and it says On Startup Volume or At Path.

00:20:16.760 --> 00:20:19.200
I'm going to actually
select the User Chooses,

00:20:19.350 --> 00:20:23.230
and I'm going to say
User Chooses Any External Volume.

00:20:23.330 --> 00:20:24.800
And then click Apply Now.

00:20:24.820 --> 00:20:28.800
So what this will do for me is that
when the user external logs in,

00:20:29.030 --> 00:20:32.590
they'll be prompted to select a volume,
and then I can actually have my

00:20:32.590 --> 00:20:35.800
mobile account provisioned not
only in the local directory system,

00:20:35.800 --> 00:20:37.800
but also in that external volume.

00:20:37.800 --> 00:20:41.800
So what I did was I brought
with me a pen drive,

00:20:41.800 --> 00:20:46.850
and I'm gonna go ahead and connect
that to my other demo system here.

00:21:11.190 --> 00:21:13.100
So I'm now prompted--create
a mobile account.

00:21:13.100 --> 00:21:15.440
I get an explanation, and it says,
"Select the home folder's

00:21:15.440 --> 00:21:18.100
volume." So in this case,
I'm going to choose my disk,

00:21:18.100 --> 00:21:23.130
which is my external volume,
and click "Create Now."

00:21:29.720 --> 00:21:32.000
And after a few moments,
what's happening behind the scenes

00:21:32.000 --> 00:21:35.400
right now is that my account is being
cached and my home directory is being

00:21:35.400 --> 00:21:38.520
provisioned on the external drive.

00:21:38.740 --> 00:21:41.300
So once I complete login,
we should see that this user's

00:21:41.380 --> 00:21:47.590
home directory is actually located
on the MyDisk external drive.

00:21:55.870 --> 00:22:03.450
And at this point, if I log out,
I now have the ability to take this

00:22:03.450 --> 00:22:05.540
drive and use it somewhere else.

00:22:05.540 --> 00:22:09.800
So I can move from system to system
to system and immediately gain

00:22:09.900 --> 00:22:12.120
access back to my full account.

00:22:12.120 --> 00:22:15.700
And more importantly,
I retain my full user experience.

00:22:15.840 --> 00:22:20.860
So I retain the characteristics
of my login session.

00:22:20.860 --> 00:22:23.240
I retain all of the private
system settings that I've

00:22:23.290 --> 00:22:24.660
historically been using.

00:22:25.010 --> 00:22:29.590
It all follows the user all
on this small external device.

00:22:37.100 --> 00:24:53.200
[Transcript missing]

00:24:54.150 --> 00:24:56.100
this takes us to portable
home directories,

00:24:56.100 --> 00:24:59.540
just sort of the next logical step
in the home directory evolution.

00:24:59.550 --> 00:25:02.250
With portable home directories,
it's a synchronization environment.

00:25:02.260 --> 00:25:06.070
Your home directory on your computer is
synchronized with your home directory

00:25:06.160 --> 00:25:07.800
that's stored on a server somewhere.

00:25:07.920 --> 00:25:10.260
It's important to note
that this is not backup.

00:25:10.260 --> 00:25:14.000
If you remove something from the server,
at next synchronization,

00:25:14.000 --> 00:25:17.200
it disappears from the client as well,
and vice versa if you

00:25:17.200 --> 00:25:19.790
remove it from the client,
at next synchronization,

00:25:19.910 --> 00:25:21.700
it's removed from the server as well.

00:25:21.700 --> 00:25:25.700
So you don't want to run into the
unfortunate scenario where a user thinks,

00:25:25.700 --> 00:25:28.520
"Oh, I can throw away all these things
locally "because they're already on

00:25:28.520 --> 00:25:32.100
the server because I just synced,"
except that if the following sync,

00:25:32.150 --> 00:25:34.780
all those items would disappear.

00:25:34.880 --> 00:25:38.600
So the way a portable home directory
works is that at first interactive login,

00:25:38.600 --> 00:25:40.200
you create a mobile account.

00:25:40.320 --> 00:25:45.400
You copy the home using
certain synchronization rules.

00:25:45.400 --> 00:25:48.200
The local template's
actually not used by default.

00:25:48.290 --> 00:25:50.450
So we talked earlier about
local home directories using the

00:25:50.450 --> 00:25:52.500
local home directory template.

00:25:52.500 --> 00:25:54.300
This is actually not used by default.

00:25:54.300 --> 00:25:56.180
Login and logout items are synced.

00:25:56.200 --> 00:26:00.700
So we'll talk a little bit about the
notion of login and logout item rules.

00:26:00.700 --> 00:26:03.490
By default,
the login and logout sync items

00:26:03.620 --> 00:26:06.800
are the library folder inside
the user's home directory.

00:26:06.800 --> 00:26:08.520
Essentially,
all of the items that you need to get

00:26:08.600 --> 00:26:12.700
in place and fully set up before the
user's interactive session can begin.

00:26:12.700 --> 00:26:14.600
Then there are what are
known as background items.

00:26:14.710 --> 00:26:17.460
Those are things that would
sync on an ongoing basis in the

00:26:17.460 --> 00:26:21.300
background as opposed to syncing
at login and syncing at logout.

00:26:21.300 --> 00:26:24.070
Those items, however,
are all synced at the first login.

00:26:24.110 --> 00:26:28.330
So if I'm syncing, let's say,
library at login and then movies

00:26:28.340 --> 00:26:31.900
and music in the background,
all three of those folders will sync

00:26:31.900 --> 00:26:35.180
at the first login for a given user.

00:26:36.180 --> 00:26:38.600
Note that login and logout
sync is a blocking sync.

00:26:38.600 --> 00:26:42.480
That is, the user can't get to the finder
until all of the synchronized

00:26:42.480 --> 00:26:44.400
items are done syncing.

00:26:44.570 --> 00:26:47.850
Background sync is a blocking
sync only on the first login.

00:26:47.900 --> 00:26:50.500
That is, the first login time,
those things are synced.

00:26:50.590 --> 00:26:53.770
At all subsequent logins,
they are synced according to a

00:26:53.870 --> 00:26:56.240
defined interval by management policy.

00:26:56.390 --> 00:26:59.740
That is, that either you say,
"I'm only going to sync this

00:26:59.840 --> 00:27:02.880
manually," or "I'll sync it at
a certain interval." Let's say 5

00:27:02.880 --> 00:27:05.530
minutes or 20 minutes or an hour.

00:27:06.010 --> 00:27:08.900
So just some general guidelines
for synchronization rules.

00:27:09.050 --> 00:27:10.770
First of all,
set up your rules by folder.

00:27:10.920 --> 00:27:13.990
For example, synchronize the Tilda
document in desktop,

00:27:14.060 --> 00:27:16.880
but maybe don't synchronize movies,
music and pictures.

00:27:17.410 --> 00:27:21.260
However, be really careful about
excluding by file extensions.

00:27:21.400 --> 00:27:24.900
There is the capability to filter
what you're syncing by file extension.

00:27:24.900 --> 00:27:29.860
However, we found that this can have some
unintended consequences for end users.

00:27:29.900 --> 00:27:32.160
For example,
if you have a keynote presentation with

00:27:32.160 --> 00:27:35.450
a bunch of embedded QuickTime movies,
those QuickTime movies are stored

00:27:35.450 --> 00:27:37.900
in the keynote presentation
as discrete .mov files.

00:27:37.940 --> 00:27:41.590
And if you restrict syncing of .movs,
you may have a user that

00:27:41.610 --> 00:27:45.900
create a PowerPoint--or sorry,
that create a keynote presentation,

00:27:45.900 --> 00:27:50.830
and then that is synced
upstream sans movies.

00:27:50.900 --> 00:27:53.180
So then the next time they
go to a new workstation,

00:27:53.180 --> 00:27:56.250
they sync all their stuff,
they go to launch their presentation,

00:27:56.350 --> 00:27:57.900
and all the movies are missing.

00:27:57.900 --> 00:27:57.900
Why?

00:27:57.900 --> 00:27:59.900
Because they were contained
in the presentation.

00:27:59.900 --> 00:28:00.900
Scott Barbber So if you
have a keynote presentation,

00:28:00.900 --> 00:28:00.900
you may have a user that created
a PowerPoint presentation,

00:28:00.900 --> 00:28:00.900
and all the movies are missing.

00:28:00.900 --> 00:28:00.900
Why?

00:28:00.900 --> 00:28:02.490
Because they were contained
within that keynote bundle file,

00:28:02.490 --> 00:28:03.900
and your sync rule excluded
them from being synced.

00:28:03.900 --> 00:28:06.480
So just a heads up on that one,
something to be aware

00:28:06.480 --> 00:28:07.900
of in your environments.

00:28:07.900 --> 00:28:11.900
A shorter background synchronization time
can actually lessen your server load.

00:28:11.900 --> 00:28:15.550
So in periodic lab classroom
type deployments where you have

00:28:15.580 --> 00:28:18.840
a lot of students coming in,
accessing the systems,

00:28:18.900 --> 00:28:20.810
and then all logging
out at the same time,

00:28:20.900 --> 00:28:24.300
if you sync all of those things,
either at a very long interval

00:28:24.300 --> 00:28:26.910
or all at login and logout,
you're going to have users waiting

00:28:26.920 --> 00:28:27.900
around for sync to complete.

00:28:27.900 --> 00:28:28.900
And as we're all aware of,
that's not going to happen.

00:28:28.900 --> 00:28:30.900
And as we're all aware
with our end users,

00:28:30.900 --> 00:28:32.840
a lot of times,
especially if they're using portables,

00:28:32.890 --> 00:28:36.900
that lid will get closed before that
last synchronization ever happens.

00:28:36.900 --> 00:28:40.790
So having the background sync
fire off pretty regularly allows

00:28:40.790 --> 00:28:44.900
data to be kind of trickled back
up to the server pretty evenly.

00:28:44.900 --> 00:28:47.540
And it means that at logout time,
you won't be waiting around for

00:28:47.650 --> 00:28:49.900
a lot of things to synchronize
all the way at the end.

00:28:49.900 --> 00:28:54.900
Also, train your users to understand the
concept of backing up their data still.

00:28:54.900 --> 00:28:57.860
I know this sort of seems intuitive.

00:28:58.010 --> 00:28:59.900
But again, a substitute for backup.

00:28:59.900 --> 00:29:03.880
So just make sure that your users
are educated into understanding

00:29:03.890 --> 00:29:07.430
that this does not provide a
complete safety net and that

00:29:07.430 --> 00:29:09.900
backing up data is still important.

00:29:09.900 --> 00:29:12.860
Finally, look for things that
you don't want to sync.

00:29:12.900 --> 00:29:15.980
For example,
there's really no need to sync log files,

00:29:15.980 --> 00:29:16.900
cache files.

00:29:16.970 --> 00:29:21.230
There's a lot of data that you
can pretty easily selectively

00:29:21.570 --> 00:29:23.890
exclude from your sync lists.

00:29:24.000 --> 00:29:25.900
These are all things that
the less items you sync,

00:29:25.900 --> 00:29:25.900
of course, the faster logins are,
the better they use.

00:29:25.900 --> 00:29:26.440
So if you're using a lot of data,
you're going to want to make sure

00:29:26.440 --> 00:29:26.900
that you're not using a lot of data.

00:29:26.900 --> 00:29:28.850
The faster logins are,
the better the user experience.

00:29:28.940 --> 00:29:32.900
So just be really careful about how
you're building your sync rule lists.

00:29:33.770 --> 00:29:35.820
Now,
new in Leopard is a feature that folks

00:29:35.820 --> 00:29:37.690
have asked us for in lab settings.

00:29:37.700 --> 00:29:39.400
It's expiring mobile accounts.

00:29:39.400 --> 00:29:42.510
And previous to Leopard,
whenever you provisioned

00:29:42.510 --> 00:29:45.160
a mobile account,
that mobile account existed on

00:29:45.220 --> 00:29:49.250
that workstation ad infinitum until
somebody came and manually removed it.

00:29:49.650 --> 00:29:52.800
There was no way to automatically
make these things go away.

00:29:52.820 --> 00:29:56.220
So every user who logs in,
they would get a home directory

00:29:56.220 --> 00:29:57.270
and a locally cached account.

00:29:57.280 --> 00:29:59.780
But you can now set an
expiration date on these things.

00:30:00.250 --> 00:30:03.160
And what this allows you to
do is to actually kind of turn

00:30:03.160 --> 00:30:05.560
off the mobile account locally.

00:30:05.560 --> 00:30:08.100
It actually just completely
removes all of the user's footprint

00:30:08.100 --> 00:30:09.610
after a certain amount of time.

00:30:09.620 --> 00:30:11.500
So, for example, I might say,
you know what?

00:30:11.590 --> 00:30:14.290
Go ahead and keep around this
mobile account with a portable

00:30:14.290 --> 00:30:17.180
home directory for five days
after the user's last login.

00:30:17.180 --> 00:30:20.130
So that if they log in again,
they don't have to go through

00:30:20.130 --> 00:30:21.720
the complete re-syncing.

00:30:21.720 --> 00:30:23.060
They can only sync changed items.

00:30:23.140 --> 00:30:26.120
But if they haven't logged
in for five consecutive days,

00:30:26.140 --> 00:30:28.460
I'm going to assume that I don't
want to retain that user's data

00:30:28.460 --> 00:30:29.760
on this workstation anymore.

00:30:30.330 --> 00:30:34.180
And I can go ahead and just
remove that account at the

00:30:34.180 --> 00:30:36.610
next successful user login.

00:30:38.600 --> 00:30:43.650
The best way to show this off
once again is to demo this.

00:30:43.650 --> 00:30:43.650
So, expiring mobile accounts.

00:30:48.080 --> 00:30:52.350
So I've defined yet another account
here called "Expiring." So I'll go

00:30:52.350 --> 00:30:56.840
into my Preferences folder here,
Preferences area, and I'm going to go to

00:30:56.840 --> 00:31:00.280
Mobility once again,
and we're going to go

00:31:00.290 --> 00:31:04.700
to Account Creation,
once again creating our mobile account.

00:31:05.020 --> 00:31:06.390
We'll say with default sync settings.

00:31:06.400 --> 00:31:09.540
And we're going to go
to our account expiry,

00:31:09.540 --> 00:31:10.760
and we're going to say always.

00:31:10.780 --> 00:31:14.240
And check the delete
mobile accounts option.

00:31:14.240 --> 00:31:16.620
Now,
we see that this is defined in weeks,

00:31:16.620 --> 00:31:18.620
days, and hours in the GUI.

00:31:18.620 --> 00:31:23.400
For demo purposes,
an hour really wouldn't work for us.

00:31:23.400 --> 00:31:26.520
So what we're going to
choose is zero hours.

00:31:26.520 --> 00:31:30.300
And what zero hours will do is simply,
at a successful logout,

00:31:30.740 --> 00:31:31.910
immediately delete the account.

00:31:32.660 --> 00:31:33.480
So I will log in.

00:31:33.480 --> 00:31:36.440
I will work with a portable
home directory that has

00:31:36.470 --> 00:31:37.600
synchronization enabled.

00:31:37.600 --> 00:31:40.970
And at logout time,
my mobile account and my PhD will be

00:31:41.070 --> 00:31:44.080
deleted off the local workstation,
thus leaving no footprint of

00:31:44.140 --> 00:31:45.570
my having logged in there.

00:31:45.580 --> 00:31:49.070
This can be very useful, again,
for kiosk and lab type settings.

00:31:49.100 --> 00:31:50.640
So let's change this to zero.

00:31:53.610 --> 00:31:56.220
You'll notice that there's a
checkbox here for "Delete only after

00:31:56.220 --> 00:32:00.240
successful sync." So it is possible,
for example, that you may end up in an

00:32:00.360 --> 00:32:06.400
environment where you don't
want the local account deleted,

00:32:06.750 --> 00:32:11.290
even if the user hasn't
logged in for 10 days,

00:32:11.290 --> 00:32:11.290
unless the system knows that one final
last successful sync has been completed.

00:32:12.100 --> 00:32:13.870
We'll go ahead and leave that checked.

00:32:13.870 --> 00:32:19.000
So I'm going to switch over
to my demo system here.

00:32:19.290 --> 00:32:23.000
And we'll log in as our expiring user.

00:32:33.500 --> 00:32:46.800
[Transcript missing]

00:32:56.500 --> 00:33:08.400
[Transcript missing]

00:33:09.730 --> 00:33:10.960
My stuff.

00:33:10.960 --> 00:33:15.260
And I'm going to go ahead and
synchronize my home directory.

00:33:31.500 --> 00:33:50.400
[Transcript missing]

00:33:54.190 --> 00:33:59.020
Mainly to show you that if
I look in my users folder here,

00:33:59.020 --> 00:34:02.500
you'll see that there is no remnant
of that previous user account.

00:34:02.610 --> 00:34:05.240
So the account has been expired,
the local home directory

00:34:05.240 --> 00:34:07.110
has been deleted,
and then if I were to log

00:34:07.110 --> 00:34:10.670
in with that account again,
it would be recreated for me and the

00:34:10.670 --> 00:34:12.900
contents would be resynchronized.

00:34:12.980 --> 00:34:17.330
And that's external--aspiring
mobile accounts.

00:34:20.040 --> 00:34:24.060
Finally, for hosting network and
portable home directories,

00:34:24.090 --> 00:34:27.280
in terms of scaling for home directories,
our general guideline is that

00:34:27.280 --> 00:34:30.160
your maximum number of concurrent
connections for what we call

00:34:30.160 --> 00:34:33.560
a mounted home directory,
that is a user passively accessing their

00:34:33.560 --> 00:34:36.770
home directory via connect to server,
can go anywhere from

00:34:36.770 --> 00:34:38.300
500 plus connections.

00:34:38.300 --> 00:34:41.810
It's really, at that point,
it has as much to do with your network

00:34:42.200 --> 00:34:44.880
and your use profile by your users.

00:34:44.880 --> 00:34:47.460
But at very minimum,
you should be able to handle 500

00:34:47.460 --> 00:34:48.900
in that kind of an environment.

00:34:48.930 --> 00:34:50.480
Now, once you get to portable
home directories,

00:34:50.480 --> 00:34:52.730
there's a fair amount of file
system enumeration that has to

00:34:52.730 --> 00:34:54.150
happen during the sync process.

00:34:54.310 --> 00:34:56.600
So at that point,
you're looking in the 300 range

00:34:56.720 --> 00:34:59.900
for concurrent connections for
portable home directory syncing.

00:34:59.900 --> 00:35:04.360
So if I'm looking at a deployment
of about 3,000 MacBook Pros,

00:35:04.400 --> 00:35:07.970
and I'm gonna have all of them
using portable home directories,

00:35:07.980 --> 00:35:10.900
I might be looking at, well,
what kind of concurrency do I have,

00:35:10.900 --> 00:35:12.980
and at any given moment,
how many will be syncing?

00:35:13.000 --> 00:35:16.670
And I don't wanna have,
if I said that maybe 600 of them would

00:35:16.670 --> 00:35:19.780
be in active use at any given moment,
I would need at least two XSERVs

00:35:19.860 --> 00:35:23.610
to handle the load associated
with those clients managing

00:35:23.610 --> 00:35:25.140
their portable home directories.

00:35:25.310 --> 00:35:27.400
Finally,
with full network home directories,

00:35:27.400 --> 00:35:30.280
where the entire home directory
is stored server side,

00:35:30.280 --> 00:35:33.780
the general sweet spot for this is
about 150 before you start to see

00:35:33.850 --> 00:35:35.620
some breakdowns in performance.

00:35:35.620 --> 00:35:38.760
Again, intensive,
intensive small file traffic,

00:35:38.890 --> 00:35:43.100
a lot of file system enumeration,
especially at login and logout time.

00:35:43.110 --> 00:35:45.930
So keep in mind that network
home directories are by far

00:35:45.930 --> 00:35:51.140
the most intensive server side,
load generating environment

00:35:51.230 --> 00:35:52.240
that you can have.

00:35:52.430 --> 00:35:54.240
So in terms of how to
improve concurrency,

00:35:54.290 --> 00:35:57.900
for true network home directories,
leverage redirection.

00:35:57.910 --> 00:36:00.910
Get a lot of those things like
Safari cache files out of the

00:36:00.940 --> 00:36:04.190
network home and get them into
a local scratch space where

00:36:04.190 --> 00:36:05.920
they don't need to be preserved.

00:36:05.920 --> 00:36:09.420
This decreases the enumeration,
decreases the small file traffic.

00:36:09.450 --> 00:36:11.640
Monitor your application
behavior as well.

00:36:11.640 --> 00:36:16.300
Make sure that you don't have apps that
are doing really colossally silly things,

00:36:16.300 --> 00:36:17.400
like polling the contents
of the home directory.

00:36:17.400 --> 00:36:21.070
For portable home directories,
reduce the items that you're syncing and

00:36:21.070 --> 00:36:25.400
also leverage a new feature in Leopard
called server side tracking for PHD sync.

00:36:25.400 --> 00:36:28.400
This is actually a separate daemon
process that runs out of band

00:36:28.400 --> 00:36:29.870
from the file services connection.

00:36:29.910 --> 00:36:33.310
It uses the FS events notification
system to track changes to

00:36:33.310 --> 00:36:34.890
your network home directory.

00:36:34.900 --> 00:36:38.020
This reduces the enumeration load
on the server because instead of

00:36:38.020 --> 00:36:41.900
the client having to comb the entire
network home and look for what changed,

00:36:41.900 --> 00:36:45.820
instead, the server actually provides the
client with a list of anything

00:36:45.820 --> 00:36:49.400
that has changed server-side,
during that client's login session,

00:36:49.400 --> 00:36:52.810
and then the client can change
those items without having to poll

00:36:53.000 --> 00:36:56.900
or to do a full run through all
the contents of the network home.

00:36:57.120 --> 00:36:59.400
Keep in mind that this
is not XAN compatible,

00:36:59.400 --> 00:37:03.210
so if you're using PHDs and
you're hosting them on XAN,

00:37:03.570 --> 00:37:07.830
bear in mind that you cannot use the
server-side file tracking feature.

00:37:08.200 --> 00:37:09.860
Finally, XAN and home directories.

00:37:09.860 --> 00:37:12.260
So just be aware that XAN does
allow multiple servers

00:37:12.340 --> 00:37:15.670
to share one file system,
but beware of portable home directories.

00:37:15.790 --> 00:37:19.540
PHDs on XAN do carry a really
significant enumeration load,

00:37:19.560 --> 00:37:22.600
especially because you don't have that
server-side file tracking support.

00:37:22.650 --> 00:37:26.150
And ultimately, your metadata controllers
become your bottleneck here.

00:37:26.210 --> 00:37:29.500
Also, just bear in mind that if
you're gonna store homes on XAN,

00:37:29.500 --> 00:37:31.460
that this does not provide
redundancy in your storage.

00:37:31.460 --> 00:37:36.450
You still need to have a backup plan for
home directories that are stored on XAN.

00:37:37.130 --> 00:37:38.790
Finally,
some tips and tricks for hosting homes

00:37:38.810 --> 00:37:40.940
in an Active Directory environment.

00:37:40.940 --> 00:37:44.600
We talked earlier about the
concept of defining that UNC name.

00:37:44.600 --> 00:37:46.940
And this generates two
attributes in the AD plugin,

00:37:46.940 --> 00:37:50.000
the NFS Home Directory and
the Home Directory attributes.

00:37:50.000 --> 00:37:53.240
Now this is--the NFS Home Directory path
is always a POSIX path and

00:37:53.450 --> 00:37:55.530
it always starts at root.

00:37:55.540 --> 00:38:00.760
So on a server,
it's /network/server/xserve.protenco.com,

00:38:00.760 --> 00:38:01.990
for example.

00:38:03.070 --> 00:38:05.000
So when you define a home
directory in Windows,

00:38:05.000 --> 00:38:05.990
there's only one attribute.

00:38:06.100 --> 00:38:07.980
There's not two like we have in Mac OS X.

00:38:08.010 --> 00:38:10.990
So you just have this native
attribute called home directory,

00:38:11.010 --> 00:38:12.000
and it's a UNC path.

00:38:12.000 --> 00:38:14.990
No concept of the volume where the
home directory share is located.

00:38:14.990 --> 00:38:22.000
So the AD plugin has
to make an assumption.

00:38:22.000 --> 00:38:22.000
It has to assume that that share
is on the root of the boot volume.

00:38:23.080 --> 00:38:25.920
So the AD plugin actually does a
little bit of magic for us here.

00:38:25.920 --> 00:38:29.770
It -- what it does is it looks at
the Active Directory home directory,

00:38:29.770 --> 00:38:32.380
breaks in into parts,
and then generates the two

00:38:32.380 --> 00:38:33.910
Mac attributes that we need.

00:38:33.970 --> 00:38:38.560
It generates the home directory attribute
and the NFS home directory attribute.

00:38:38.820 --> 00:38:41.240
However, it has to make an assumption.

00:38:41.240 --> 00:38:44.130
The assumption that it has to
make is that the home share is

00:38:44.130 --> 00:38:46.300
on the root of the boot drive.

00:38:46.410 --> 00:38:48.130
Now, we know that in most
of your environments,

00:38:48.150 --> 00:38:51.500
you're not hosting your home directories
on the boot drive of your servers.

00:38:51.500 --> 00:38:55.080
You're hosting them on some sort of
external volume or secondary volume.

00:38:55.080 --> 00:38:58.580
So the simple way to work around this
is you create a symbolic link from

00:38:58.690 --> 00:39:02.610
root to the actual share where your
home directories are being hosted.

00:39:02.690 --> 00:39:06.460
What this does is it allows that
path to be resolved appropriately.

00:39:06.460 --> 00:39:08.730
And what that means is that when
you're hosting home directories for

00:39:08.750 --> 00:39:13.280
Active Directory users on an XServe,
home directory auto creation works.

00:39:13.280 --> 00:39:16.660
You do not have to manually
provision the home for each user.

00:39:16.660 --> 00:39:19.650
The home will be provisioned
on the fly when the user

00:39:20.000 --> 00:39:21.500
first logs in via AFP or SMB.

00:39:24.190 --> 00:39:26.140
So at this point,
I would like to bring up Greg Nagel,

00:39:26.140 --> 00:39:29.200
who's the Senior Systems Engineer for
Walt Disney Animation Studios,

00:39:29.220 --> 00:39:32.960
to talk about a real-world implementation
of Network Home Directories.

00:39:33.030 --> 00:39:35.490
Greg.

00:39:39.010 --> 00:39:42.750
So, I'm Greg Nagel,
Senior Systems Engineer for

00:39:43.980 --> 00:39:44.110
Walt Disney Animation Studios.

00:39:44.470 --> 00:39:45.900
We're located in Burbank, California.

00:39:45.900 --> 00:39:49.060
We've got about 900
artists and technicians,

00:39:49.060 --> 00:39:51.790
and we support a wide range of platforms.

00:39:51.880 --> 00:39:55.150
On the desktop, we have Linux, Mac OS,
Windows.

00:39:55.150 --> 00:39:57.120
In the server room, we even have Solaris.

00:39:57.200 --> 00:40:00.160
There's probably a handful
of Irix boxes around still.

00:40:00.440 --> 00:40:05.770
Isn't that a fantastic photo?

00:40:05.770 --> 00:40:06.280
Smog can look so beautiful
when lit correctly.

00:40:07.670 --> 00:40:11.040
So we have an existing infrastructure.

00:40:11.220 --> 00:40:14.700
Our directory services are hosted
on Red Hat Directory Server.

00:40:14.700 --> 00:40:19.600
We have kick-ass NetApp appliances
serving up our home directories.

00:40:19.600 --> 00:40:22.160
Very high availability,
very high bandwidth.

00:40:22.190 --> 00:40:23.600
They work really well.

00:40:23.600 --> 00:40:28.600
And so our goals were to reuse
that existing infrastructure.

00:40:28.600 --> 00:40:31.130
We didn't want to have to have a
separate infrastructure for our Macs and

00:40:31.130 --> 00:40:34.530
a different one for our Linux boxes and
a different one for our Windows boxes.

00:40:34.620 --> 00:40:36.600
We wanted them all to use the same thing.

00:40:36.670 --> 00:40:38.600
We wanted to separate our
user data from the machine.

00:40:38.600 --> 00:40:42.600
And we wanted to enable fast
machine upgrades and swaps.

00:40:42.630 --> 00:40:45.450
We have an annoying
tendency to buy the latest,

00:40:45.450 --> 00:40:49.470
greatest hardware for the most
demanding artists and then take

00:40:49.620 --> 00:40:53.280
their hardware and move it down to
less demanding artists and then take

00:40:53.280 --> 00:40:56.720
their hardware and move it down to
administrative people and then take

00:40:56.720 --> 00:41:00.130
their hardware and move it down to me.

00:41:00.910 --> 00:41:04.080
So we're moving machines around a lot,
and it takes a lot of time.

00:41:04.190 --> 00:41:06.480
It's a heck of a lot easier if
you don't have to worry too much

00:41:06.480 --> 00:41:07.710
about the user data on the machine.

00:41:07.750 --> 00:41:11.030
If that's somewhere else,
then you can just swap out the machine.

00:41:11.560 --> 00:41:16.490
And also, many of our artists use both
Linux and Macs to do their job.

00:41:16.490 --> 00:41:20.500
They might do some animation in Maya,
but do some sort of

00:41:20.500 --> 00:41:22.330
painting in Photoshop.

00:41:22.430 --> 00:41:26.790
And so they need to be able to
share data back and forth between

00:41:26.790 --> 00:41:26.790
the two platforms very easily.

00:41:27.520 --> 00:41:31.070
So our first task in getting
this all to work was to enable

00:41:31.080 --> 00:41:33.790
network accounts on OS X.

00:41:33.940 --> 00:41:37.300
And we were able to do that
using the LDAP v3 plugin.

00:41:37.300 --> 00:41:44.900
And since we're using the standard
RFC2-2307 UNIX mapping schema in LDAP,

00:41:44.950 --> 00:41:47.290
that's built in to the LDAP plugin.

00:41:47.300 --> 00:41:49.860
It's one of the pop-up menus.

00:41:49.950 --> 00:41:53.890
You can just choose that and you can get
your users and groups right out of LDAP.

00:41:54.010 --> 00:41:57.750
And if you're lucky in your organization,
you may not have to do

00:41:57.750 --> 00:41:58.870
anything more than that.

00:41:58.900 --> 00:42:03.540
So what that allowed us then to do is
the user could then log in using their

00:42:03.950 --> 00:42:06.820
existing UNIX short name and password.

00:42:06.900 --> 00:42:09.700
Next thing we had to do, though,
was get Network Home Directories

00:42:09.700 --> 00:42:10.860
and NFS shares working.

00:42:10.900 --> 00:42:14.900
Now, prior to Leopard,
this was harder than it needed to be.

00:42:14.900 --> 00:42:18.720
Apple had a proprietary automounter
that didn't work really like any

00:42:18.720 --> 00:42:20.880
other UNIX automounter out there.

00:42:20.900 --> 00:42:24.160
And so we weren't able to
use our existing automount

00:42:24.160 --> 00:42:25.830
maps that we had in LDAP.

00:42:25.970 --> 00:42:27.900
We had to write scripts that
took us a long time to write.

00:42:28.900 --> 00:42:32.100
We took those in and rewrote them
out in a different format that

00:42:32.140 --> 00:42:33.860
the Mac OS X automounter liked.

00:42:33.960 --> 00:42:37.800
The Mac OS X automounter
mounted them in a strange place.

00:42:37.950 --> 00:42:39.870
And it didn't really work
very well with laptops.

00:42:40.000 --> 00:42:42.900
If the laptop went off the network,
back on the network,

00:42:42.900 --> 00:42:47.750
we had to do a lot of scripting
to handle those situations.

00:42:47.990 --> 00:42:53.140
Leopard now includes AutoFS,
and that's based on OpenSolaris'

00:42:53.140 --> 00:42:54.900
implementation of AutoFS.

00:42:55.020 --> 00:42:57.890
There's also AutoFS usually
on most flavors of Linux.

00:42:57.900 --> 00:43:05.560
So if you are using an automounter
on any other Unix-like platform,

00:43:05.560 --> 00:43:05.560
it's probably AutoFS.

00:43:05.900 --> 00:43:10.560
Apples can get the automount maps from
the directory services or local files,

00:43:10.560 --> 00:43:14.780
and with luck and a little work,
it can use the exact same automount maps

00:43:14.890 --> 00:43:17.300
as other Unixes in your organization.

00:43:17.310 --> 00:43:21.280
And here's the big thing for laptops,
is that it handles

00:43:21.280 --> 00:43:23.720
network transitions well,
because it's tied in

00:43:23.720 --> 00:43:25.400
to directory services.

00:43:25.520 --> 00:43:29.090
If you boot up a laptop off the network
but then plug it into your network,

00:43:29.230 --> 00:43:33.240
directory services sees that transition,
queries LDAP for the automount maps,

00:43:33.360 --> 00:43:35.550
and brings the automounts up.

00:43:38.040 --> 00:43:43.100
So, with AutoFS,
you can now configure LDAP to talk

00:43:43.100 --> 00:43:49.580
to AutoFS simply by pointing it to
the right stuff in your LDAP tree.

00:43:49.740 --> 00:43:53.300
There are some notes that you
might want to be aware of.

00:43:53.440 --> 00:43:58.190
Out of the box, Apple wants to use what's
called the AutoMount Map Schema.

00:43:58.240 --> 00:44:00.450
There are some older schemas.

00:44:00.650 --> 00:44:04.480
One that's in common use is
called the NIS Map Schema.

00:44:04.900 --> 00:44:06.530
So be aware of that.

00:44:06.610 --> 00:44:10.640
If you've got the NISMAP schema in LDAP,
you may have to do some remapping

00:44:10.640 --> 00:44:15.330
or talk your LDAP admins into
migrating to the newer schema.

00:44:15.420 --> 00:44:19.560
The map key in LDAP is asterisk.

00:44:19.660 --> 00:44:22.650
Now, that's always been traditionally
the wildcard key is asterisk,

00:44:22.760 --> 00:44:25.870
but for some reason,
older versions of Linux decided to use

00:44:26.050 --> 00:44:28.710
the slash as the wildcard key in LDAP.

00:44:28.810 --> 00:44:31.430
Well,
the OS X Automata doesn't like that.

00:44:31.700 --> 00:44:34.800
And the auto_mastermaps,
the format's different.

00:44:34.860 --> 00:44:36.300
They differ somewhat.

00:44:36.300 --> 00:44:41.570
Just be aware that AutoFS 4 and
earlier on Linux use a different format

00:44:41.570 --> 00:44:44.040
map than what everybody else uses.

00:44:44.040 --> 00:44:48.030
So if you've got AutoFS 4 machines,
you may have to have a separate

00:44:48.030 --> 00:44:50.810
auto_mastermap for your OS X machines.

00:44:51.810 --> 00:44:55.580
So, we're now approaching
network home nirvana.

00:44:55.640 --> 00:44:59.090
We have network accounts.

00:44:59.110 --> 00:45:02.700
We've got automated NFS home
directories and shares.

00:45:04.140 --> 00:45:07.800
And now our users can log in to any
machine with the same credentials

00:45:08.050 --> 00:45:11.190
and get the exact same working
environment and access the same data,

00:45:11.200 --> 00:45:15.300
no matter what machine they're on,
no matter what platform they're on.

00:45:15.380 --> 00:45:17.540
But Nirvana's not what
it's all cracked up to be.

00:45:17.540 --> 00:45:19.710
There are some challenges.

00:45:20.540 --> 00:45:25.390
Since there's an existing home directory,
we had configuration problems.

00:45:25.400 --> 00:45:31.660
The default preference is you
can't use the user template,

00:45:31.660 --> 00:45:31.660
and so the default preferences
aren't preset for people.

00:45:32.690 --> 00:45:33.270
So, we have to enforce quotas.

00:45:33.390 --> 00:45:37.560
We--that NetApp gear--very,
very high performance, very,

00:45:37.690 --> 00:45:41.190
very high reliability, very,
very expensive.

00:45:41.360 --> 00:45:48.400
So, we can't give everybody as much space
on the NetApp as we could locally,

00:45:48.400 --> 00:45:48.400
so we have to enforce quotas.

00:45:48.840 --> 00:45:50.690
Caches.

00:45:50.870 --> 00:45:57.050
Local caching directs a lot
of files to the network.

00:45:57.050 --> 00:46:01.560
There are some apps that don't
perform that well on networks.

00:46:01.560 --> 00:46:01.560
And increasingly, mobile users.

00:46:02.280 --> 00:46:07.150
So for default configuration,
since it's a network home directory,

00:46:07.310 --> 00:46:11.150
it doesn't use the system
library user template.

00:46:11.600 --> 00:46:13.240
Plus, that home directory pre-exists.

00:46:13.260 --> 00:46:17.000
It may have been used by a
Linux user for other things,

00:46:17.060 --> 00:46:19.170
so we can't just blindly
blow the directory away and

00:46:19.170 --> 00:46:20.430
copy a bunch of files there.

00:46:20.500 --> 00:46:24.730
So we have to have a way to set
up sane defaults for the user the

00:46:24.790 --> 00:46:26.500
first time they log into OS X.

00:46:26.500 --> 00:46:30.200
And our solution was to
write a custom app called the

00:46:30.200 --> 00:46:32.500
Disney Animation Setup Assistant.

00:46:32.500 --> 00:46:35.490
And I'd like to give a short demo.

00:46:41.500 --> 00:46:45.030
Or maybe not.

00:47:04.250 --> 00:47:04.890
Let's skip the demo.

00:47:04.900 --> 00:47:06.320
Trust me, it's fantastic.

00:47:06.320 --> 00:47:09.660
If you're actually
interested in seeing it,

00:47:09.700 --> 00:47:10.600
it's not important, Scott.

00:47:10.600 --> 00:47:13.160
If you're interested in seeing it,
there is a lab later this afternoon

00:47:13.160 --> 00:47:15.220
on network home directories
and portable home directories.

00:47:15.220 --> 00:47:17.630
I'd be happy to show it
to anybody at the lab.

00:47:17.640 --> 00:47:19.690
So moving on.

00:47:19.700 --> 00:47:22.190
Quotas were a challenge for us.

00:47:22.200 --> 00:47:26.280
The finder doesn't support or
doesn't recognize NFS quotas.

00:47:26.280 --> 00:47:28.160
So users would fill
up their network home.

00:47:28.160 --> 00:47:29.360
They really wouldn't know
what they were doing.

00:47:29.360 --> 00:47:31.900
And suddenly,
their apps would start crashing.

00:47:31.900 --> 00:47:33.530
The dock would reset to defaults.

00:47:33.600 --> 00:47:35.060
They'd call,
and they didn't know what was going on.

00:47:35.220 --> 00:47:38.680
So we needed to give them a way to know
when they were approaching their quota.

00:47:38.680 --> 00:47:41.160
Once again,
we wrote a custom app that just kind

00:47:41.160 --> 00:47:44.530
of sits down in the bottom corner
of their screen and gives them how

00:47:44.980 --> 00:47:50.670
full their network home is and warns
them as it gets fuller and fuller

00:47:50.670 --> 00:47:55.080
and fuller and then gives them what
they should do as it gets full,

00:47:55.080 --> 00:47:57.480
which is usually to call
somebody else to help them.

00:47:59.850 --> 00:48:05.200
Adam Gerson has written an
application that you can all download

00:48:05.290 --> 00:48:06.800
if you want to check one out.

00:48:06.810 --> 00:48:10.300
You also have the capability now,
perhaps, of writing your own,

00:48:10.390 --> 00:48:13.710
because at least in our environment,
the quota command actually

00:48:13.730 --> 00:48:17.960
returns something usable with
our NFS home directories.

00:48:17.960 --> 00:48:18.650
It didn't before.

00:48:18.790 --> 00:48:23.530
I don't know if that's an improvement
in Leopard or maybe it's a side

00:48:23.530 --> 00:48:27.630
effect of the AutoFS transition,
but you can actually get

00:48:27.630 --> 00:48:27.630
decent information now.

00:48:29.290 --> 00:48:32.180
The caches,
which is where you've got cache files

00:48:32.200 --> 00:48:37.460
being stored out in the network.

00:48:37.460 --> 00:48:42.890
My recommendation now is
to use MCX Redirector,

00:48:42.890 --> 00:48:42.890
as Scott showed earlier,
and just remove those

00:48:42.890 --> 00:48:42.890
caches to a local path.

00:48:44.180 --> 00:48:47.730
And finally--actually, I said finally,
but it's not finally--next,

00:48:47.850 --> 00:48:50.240
poorly performing apps.

00:48:51.310 --> 00:48:54.920
There's a lot of apps out there--less
and less each day--but there's a

00:48:54.920 --> 00:48:57.700
lot of apps out there that really
assume that the home is local,

00:48:57.700 --> 00:49:01.200
that the disk is right there,
it's not over the network,

00:49:01.250 --> 00:49:03.750
and they're really optimized for that.

00:49:03.840 --> 00:49:11.930
And they don't really perform well when
the home is out on the network and more

00:49:11.930 --> 00:49:11.930
limited bandwidth than you get from disk.

00:49:12.780 --> 00:49:15.100
There's an application,
Digidesigns Digidelivery.

00:49:15.100 --> 00:49:19.020
It won't even launch if the home
is not on the local machine.

00:49:19.070 --> 00:49:21.470
I don't know how it would
behave with an external account

00:49:21.470 --> 00:49:27.090
or on an external volume,
but I do know that if

00:49:27.090 --> 00:49:27.090
it's out on network,
it absolutely won't even launch.

00:49:27.370 --> 00:49:30.020
There are other apps that move
a lot of data-- Photoshop,

00:49:30.200 --> 00:49:31.920
Final Cut, iMovie.

00:49:32.320 --> 00:49:41.440
They're working with very large files,
and obviously it takes more time

00:49:41.440 --> 00:49:41.440
to move large files over a network
than it does to the local disk,

00:49:41.440 --> 00:49:41.440
and so they don't perform as well either.

00:49:41.660 --> 00:49:42.850
There's certainly a lot more.

00:49:42.920 --> 00:49:44.230
So what can you do?

00:49:44.240 --> 00:49:52.640
You want the benefits of the
home directories and--or you

00:49:52.720 --> 00:49:53.820
want the benefits of network home
directories and network accounts,

00:49:53.820 --> 00:49:53.820
but you want to give your
users a good user experience.

00:49:54.010 --> 00:49:56.890
So what you want to do is try
portable home directories.

00:49:56.960 --> 00:49:58.300
You don't have to do these on laptops.

00:49:58.300 --> 00:50:00.160
You can do these on desktops as well.

00:50:00.270 --> 00:50:07.750
And what it'll do is move the
data local to the machine,

00:50:07.750 --> 00:50:07.750
and so those apps that want
local data are going to get it.

00:50:09.400 --> 00:50:13.330
The final challenge with
Network Home Directories

00:50:13.330 --> 00:50:14.980
was mobile users.

00:50:14.980 --> 00:50:17.030
Four or five years ago when
we first started implementing

00:50:17.030 --> 00:50:19.270
Network Accounts and Home Directories,
we only had a very

00:50:19.320 --> 00:50:20.620
small number of laptops.

00:50:20.620 --> 00:50:22.470
So we treated them as kind of one-offs.

00:50:22.470 --> 00:50:25.430
We just created local accounts
on their machine and told people,

00:50:25.430 --> 00:50:28.640
hey, good luck with that,
make sure you back stuff up,

00:50:28.640 --> 00:50:29.360
and you know.

00:50:29.360 --> 00:50:32.520
And their passwords wouldn't be
the same as their network password,

00:50:32.610 --> 00:50:34.380
and they would get really confused.

00:50:34.380 --> 00:50:36.020
And it was kind of a pain to manage.

00:50:36.020 --> 00:50:38.500
And then when Apple made
the Intel transition,

00:50:38.500 --> 00:50:41.700
suddenly laptop use started
to really accelerate.

00:50:41.700 --> 00:50:45.160
And this is, I think,
because the performance of the laptops

00:50:45.420 --> 00:50:47.820
was on par with the desktop machines.

00:50:47.820 --> 00:50:51.080
They were really no longer second-class
citizen in terms of performance.

00:50:51.080 --> 00:50:56.000
Pricing is really good on laptops these
days compared to desktop machines.

00:50:56.000 --> 00:50:59.020
And wireless has exploded,
so you have a lot of benefit from

00:50:59.020 --> 00:51:02.150
working with a laptop because
you can walk around the building,

00:51:02.160 --> 00:51:04.740
you can go to a conference room
and bring your laptop with you.

00:51:04.740 --> 00:51:06.730
And so people want the laptops.

00:51:06.800 --> 00:51:13.160
In fact, we're only buying laptops and
high-end Mac Pro machines.

00:51:13.160 --> 00:51:14.500
We don't buy anything in between.

00:51:14.680 --> 00:51:17.770
We don't buy any other
desktops other than Mac Pros.

00:51:18.910 --> 00:51:22.210
So local accounts are a pain to manage,
local data is a pain to manage,

00:51:22.330 --> 00:51:26.400
so we moved to mobile accounts
with portable home directories.

00:51:26.460 --> 00:51:29.120
This is how it works at Disney Animation.

00:51:29.380 --> 00:51:32.170
The mobile accounts are managed via MCX,
Workgroup Manager.

00:51:32.230 --> 00:51:34.280
I'm sure you've seen it before.

00:51:34.760 --> 00:51:38.580
They're prompted to create the
mobile account on their first login.

00:51:38.630 --> 00:51:41.980
Admins can manually
create mobile accounts,

00:51:41.980 --> 00:51:44.970
for example,
for desktop users that might have

00:51:45.090 --> 00:51:47.690
applications that perform poorly.

00:51:48.330 --> 00:51:50.820
The laptop users,
their home directories are

00:51:50.820 --> 00:51:53.010
protected by FileVault,
and that's enforced via MCX.

00:51:53.010 --> 00:51:54.880
They don't have any
choice over the matter.

00:51:54.880 --> 00:51:57.990
It just automatically is
created when they first log in.

00:51:59.500 --> 00:52:02.100
And so they get that new laptop,
they log in with their

00:52:02.300 --> 00:52:04.990
network credentials,
they're asked for the mobile account,

00:52:05.010 --> 00:52:08.090
they say yes,
FileVault Home Directory is created,

00:52:08.200 --> 00:52:11.580
copy of the network,
home is copied locally,

00:52:11.640 --> 00:52:15.180
and now the user has their
data on their new machine.

00:52:15.200 --> 00:52:18.300
Almost no touching by a technician.

00:52:18.500 --> 00:52:23.180
In theory,
you could hand them the machine

00:52:23.180 --> 00:52:24.650
and run as fast as you could
to the other side of the room.

00:52:26.150 --> 00:52:30.610
So, Apple, especially in Leopard,
has made some really great

00:52:30.700 --> 00:52:34.220
default settings for home syncing,
but there are some additional

00:52:34.220 --> 00:52:38.000
changes you might want to consider,
certainly ones that we did.

00:52:38.190 --> 00:52:42.000
And our goals here were to not store
unnecessary data on the server.

00:52:42.000 --> 00:52:44.080
We wanted to minimize the
login and logout sync time,

00:52:44.100 --> 00:52:47.000
because the user just has to sit
there and wait while that's happening.

00:52:47.000 --> 00:52:50.100
And we want to minimize the sync
conflict dialogs that come up,

00:52:50.130 --> 00:52:52.990
because users don't know
how to respond to them.

00:52:53.000 --> 00:52:55.260
You know, say,
"Do you want to keep this file or

00:52:55.260 --> 00:53:00.050
this file?" And sometimes they say,
"Keep both." And when it's thousands

00:53:00.200 --> 00:53:02.900
of files and they've clicked "Keep
both" and now they've blown out

00:53:02.900 --> 00:53:05.000
their network home directory because
they've just doubled it in size,

00:53:05.170 --> 00:53:08.000
it gets really ugly.

00:53:08.070 --> 00:53:13.000
So, one strategy that we went to
was to exclude the big folders.

00:53:13.000 --> 00:53:14.970
We, by default,
do not synchronize movies,

00:53:14.970 --> 00:53:16.000
music and pictures.

00:53:16.000 --> 00:53:21.000
Our thinking there is music folder,
it's probably their iTunes music library.

00:53:21.000 --> 00:53:22.000
We don't want to back that up.

00:53:22.000 --> 00:53:22.880
We don't want to be responsible for that.

00:53:23.020 --> 00:53:25.000
That's their data.

00:53:25.000 --> 00:53:29.000
Movies, probably iMovie, iDVD stuff.

00:53:29.000 --> 00:53:31.960
Again,
not stuff that we're using in production.

00:53:32.160 --> 00:53:34.000
Pictures, probably mostly iPhoto stuff.

00:53:34.220 --> 00:53:35.990
Stuff that we're not using in production.

00:53:36.000 --> 00:53:37.350
It's personal data.

00:53:37.740 --> 00:53:39.570
But user education is critical here.

00:53:39.600 --> 00:53:43.530
You want to make sure they know that
that stuff is not being synchronized

00:53:43.530 --> 00:53:46.270
to the network so they don't
have a false sense of security.

00:53:46.480 --> 00:53:50.410
And so if that data is important to them,
they can back it up elsewhere.

00:53:50.510 --> 00:53:56.350
Or if they're storing company data there,
maybe they can decide to

00:53:56.350 --> 00:53:56.350
store it somewhere else.

00:53:57.460 --> 00:53:58.620
A couple others.

00:53:58.730 --> 00:54:00.700
I think you should exclude
the Downloads folder.

00:54:00.700 --> 00:54:02.640
I mean, they've downloaded it
once from the Internet.

00:54:02.640 --> 00:54:04.400
They can download it again.

00:54:04.690 --> 00:54:08.400
There's some other ones:
the Entourage Temp folder.

00:54:08.550 --> 00:54:10.360
Any time you get an
iTunes software update,

00:54:10.500 --> 00:54:13.400
it puts the entire software
image in your home folder.

00:54:13.400 --> 00:54:15.390
You don't need to synchronize that.

00:54:15.650 --> 00:54:20.080
Flash, the Downloads folder in Mail,
and yet more.

00:54:20.750 --> 00:54:24.400
This list up here comes from looking
at--you'll see the file there.

00:54:24.400 --> 00:54:26.400
It's the standard exclusions plist.

00:54:26.400 --> 00:54:31.400
It's used by Time Machine when
it decides what to back up.

00:54:31.400 --> 00:54:34.400
This is stuff that Time Machine says,
"I don't need to back this up,

00:54:34.430 --> 00:54:38.390
so why should we synchronize
it either?" So we're not gonna.

00:54:41.120 --> 00:54:43.650
And this time I'm going to say finally,
and I really do mean it.

00:54:43.800 --> 00:54:47.690
Finally,
let's talk a little bit about forensics.

00:54:48.230 --> 00:54:51.100
So, if you want to know a little
bit more about what's going

00:54:51.100 --> 00:54:54.080
on when there's a homesink,
or maybe the homesink isn't

00:54:54.080 --> 00:54:56.440
doing what you expect,
and you want to be able to

00:54:56.440 --> 00:54:59.970
investigate or troubleshoot,
here's where you want to look.

00:55:00.300 --> 00:55:03.220
There are log files in the
user's local home--library logs,

00:55:03.250 --> 00:55:06.590
file sync agent, file sync agent,
verbose.

00:55:06.610 --> 00:55:10.080
The sync state databases--this
is what keeps track of what

00:55:10.190 --> 00:55:14.140
has synchronized in the past,
so they know what things have

00:55:14.140 --> 00:55:16.460
been synchronized and what things
haven't been synchronized yet.

00:55:16.530 --> 00:55:19.430
There are two places those are
kept--one in the local home with the

00:55:19.430 --> 00:55:22.580
tilde and one out on the network home.

00:55:22.780 --> 00:55:26.320
If you delete both of those databases,
the next time there's a synchronization,

00:55:26.320 --> 00:55:27.920
it'll act like it's brand new.

00:55:27.950 --> 00:55:31.490
It resets it right to the virgin state.

00:55:31.620 --> 00:55:33.260
And the synchronization rules.

00:55:33.310 --> 00:55:35.730
There are local rules that are
kept in the user's home folder in

00:55:35.730 --> 00:55:38.960
librarypreferences.com.apple/homesync.pl
ist.

00:55:38.960 --> 00:55:43.160
And then, assuming that you are managing
additional rules via MCX,

00:55:43.160 --> 00:55:45.530
an easy way to check to see what's
actually being delivered to that

00:55:45.530 --> 00:55:48.740
machine or what that machine is paying
attention to is use System Profiler,

00:55:48.750 --> 00:55:51.400
either via the GUI or
via the command line.

00:55:51.440 --> 00:55:53.500
It now can show you the
Manage Client settings,

00:55:53.510 --> 00:55:56.020
so you can see that, oh,
what's being applied to this machine

00:55:56.020 --> 00:55:59.950
is what I think is supposed to
be being applied to this machine.