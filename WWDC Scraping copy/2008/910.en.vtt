WEBVTT

00:00:21.870 --> 00:00:23.330
Good afternoon.

00:00:23.670 --> 00:00:26.990
That always surprises me.

00:00:27.240 --> 00:00:29.800
My name's Kelly Keenan,
and I'd like to welcome you

00:00:29.800 --> 00:00:33.700
today to Designing Applications
with Interface Builder.

00:00:34.800 --> 00:00:39.790
The first thing I'd like to talk
about is why are you people here?

00:00:39.800 --> 00:00:41.290
Make money.

00:00:41.290 --> 00:00:42.400
Great.

00:00:42.400 --> 00:00:45.290
How many of you are new to our platform?

00:00:46.080 --> 00:00:46.930
A lot of you.

00:00:47.120 --> 00:00:47.530
Okay.

00:00:47.530 --> 00:00:52.000
How many of you have not really
ever used Interface Builder before?

00:00:52.510 --> 00:00:52.900
Okay.

00:00:53.030 --> 00:00:55.600
This session, this is for you.

00:00:55.600 --> 00:00:59.530
The rest of you,
hopefully you'll find some

00:01:00.100 --> 00:01:04.740
secret information that you
didn't know about and that,

00:01:05.030 --> 00:01:07.690
you know,
I can give you some pointers that

00:01:07.690 --> 00:01:07.690
maybe you didn't catch on to before.

00:01:07.690 --> 00:01:07.690
But this is really for the new people.

00:01:08.180 --> 00:01:12.140
So all of you probably have
some idea in your head of an

00:01:12.210 --> 00:01:14.370
application you want to build.

00:01:15.670 --> 00:01:19.580
And so you want to know,
how do I build an interface

00:01:19.720 --> 00:01:21.460
for that application?

00:01:21.820 --> 00:01:26.030
Now, your interface might be
something that's really simple,

00:01:26.270 --> 00:01:30.160
very small, not a lot of controls,
or it might be something

00:01:30.160 --> 00:01:31.980
that's very intricate.

00:01:32.710 --> 00:01:35.000
And the answer to the question,
how do I build an interface,

00:01:35.000 --> 00:01:37.500
is the same for both of these.

00:01:37.660 --> 00:01:44.020
And it's the same whether or not you're
building it on Mac OS X as it is for

00:01:44.020 --> 00:01:47.310
if you're building it on the iPhone.

00:01:47.400 --> 00:01:50.820
For both cases,
you want to use an application

00:01:50.820 --> 00:01:53.180
called Interface Builder.

00:01:53.890 --> 00:02:00.580
Now, we all know that you can build
your interfaces by writing code.

00:02:00.720 --> 00:02:04.670
And I've written a sample here that
just creates an image and creates a

00:02:04.670 --> 00:02:08.920
button and adds that image to a button,
sets some targets and some actions,

00:02:08.950 --> 00:02:11.990
and then adds that button to a window.

00:02:12.130 --> 00:02:15.590
And we've probably all done this
at some point in some language.

00:02:15.760 --> 00:02:18.700
This is Objective C.

00:02:18.730 --> 00:02:24.590
And all of this code that I wrote
creates a masterpiece that I would

00:02:24.590 --> 00:02:28.090
like to call Info Button on a View.

00:02:30.400 --> 00:02:35.900
[Transcript missing]

00:02:36.150 --> 00:02:39.080
You know, it's very formulaic.

00:02:39.080 --> 00:02:45.020
And wouldn't it be nice if there was
an application that would do some

00:02:45.020 --> 00:02:47.320
of that formulaic stuff for you?

00:02:48.950 --> 00:02:51.140
So we have Interface Builder.

00:02:51.200 --> 00:02:53.160
Interface Builder,
if you're new to the platform,

00:02:53.280 --> 00:02:55.130
has been around for a decade and a half.

00:02:55.320 --> 00:02:58.430
We've been using it to
design Mac OS X applications

00:02:58.520 --> 00:03:02.440
since Mac OS X started and
Next applications before that.

00:03:02.590 --> 00:03:05.430
So it's not a new application.

00:03:05.430 --> 00:03:09.200
It's new to using the iPhone platform.

00:03:09.290 --> 00:03:11.740
Interface Builder itself

00:03:11.980 --> 00:03:15.560
is an application that we use
to design interfaces by dragging

00:03:15.560 --> 00:03:19.790
and dropping controls and views,
configuring the properties

00:03:20.010 --> 00:03:24.110
for those controls and views,
and making connections between

00:03:24.450 --> 00:03:27.700
those elements and your code.

00:03:29.790 --> 00:03:34.980
We use this so that creating
something as simple as my info

00:03:34.980 --> 00:03:39.420
button on a view uses this much code.

00:03:40.790 --> 00:03:44.780
Because really,
you don't want to be writing that code.

00:03:44.820 --> 00:03:49.200
You want to be writing the code
that makes your application unique.

00:03:49.380 --> 00:03:50.200
Okay?

00:03:50.200 --> 00:03:52.200
So let us do this kind of stuff.

00:03:52.360 --> 00:03:56.460
Now, I'm not telling you that you
don't have to write any code.

00:03:56.520 --> 00:03:58.200
You still have to write code.

00:03:58.430 --> 00:04:03.000
And Interface Builder works hand
in hand with Xcode to create your

00:04:03.000 --> 00:04:08.280
interfaces and connect it to the
code that you've written in Xcode.

00:04:09.710 --> 00:04:14.060
By the end of today's session,
you should have learned how to

00:04:14.060 --> 00:04:16.700
create and customize an interface.

00:04:16.700 --> 00:04:21.320
You should have a good understanding
of how Interface Builder works with

00:04:21.630 --> 00:04:24.280
Xcode to give you a full experience.

00:04:24.480 --> 00:04:30.650
And how to connect your interface
to the code in your project.

00:04:32.650 --> 00:04:37.360
So let's start by creating
and customizing an interface.

00:04:37.600 --> 00:04:39.920
In Interface Builder,

00:04:41.130 --> 00:04:43.010
Can we go back to the slides?

00:04:43.330 --> 00:04:45.180
Thanks.

00:04:45.240 --> 00:04:48.900
Not quite ready for the demo.

00:04:50.700 --> 00:05:00.870
There are four components I want to
talk about today in Interface Builder.

00:05:00.870 --> 00:05:00.870
The first is the document window.

00:05:00.870 --> 00:05:00.870
This is your interface.

00:05:01.180 --> 00:05:09.220
This contains all of the elements that
you're using to create your interface.

00:05:09.220 --> 00:05:09.220
Okay?

00:05:10.010 --> 00:05:13.900
Now, we also provide the library.

00:05:13.940 --> 00:05:18.120
And the library contains all of
these preconfigured controls and

00:05:18.120 --> 00:05:20.800
views that we provide for you.

00:05:21.550 --> 00:05:27.160
And you can drag and drop those controls
from the library onto the document

00:05:27.160 --> 00:05:32.400
window or onto the design surface.

00:05:32.700 --> 00:05:35.900
So the design surface is where
you're going to drag around your

00:05:35.900 --> 00:05:40.700
views and controls so that your
interface looks just like it will

00:05:40.700 --> 00:05:43.440
when you build your application.

00:05:43.490 --> 00:05:47.280
This is great for those situations--
I know you've all done this-- where

00:05:47.280 --> 00:05:53.820
you've changed the pixels for different
widgets because they don't quite line up.

00:05:53.900 --> 00:05:56.340
And then you recompile the code,
and you look at it again.

00:05:56.340 --> 00:05:59.380
And you change the pixels again,
and then you recompile,

00:05:59.380 --> 00:06:00.520
and then look at it again.

00:06:00.580 --> 00:06:03.880
This way you know that things
are lining up because you can see

00:06:03.880 --> 00:06:07.790
exactly what it's going to look like
when you build your application.

00:06:08.480 --> 00:06:11.430
Now, we have all those
pre-configured controls,

00:06:11.430 --> 00:06:15.240
and when you're ready to change
them to make them more unique,

00:06:15.240 --> 00:06:16.770
we have the inspectors.

00:06:16.930 --> 00:06:22.040
And this is where you go to change
all the properties and configure

00:06:22.040 --> 00:06:27.470
your controls and views to look
and act the way you expect them to.

00:06:27.990 --> 00:06:28.880
Okay.

00:06:29.070 --> 00:06:33.600
So these four components,
the document window, the library,

00:06:33.850 --> 00:06:37.330
the design surface,
and the inspectors are the key

00:06:37.330 --> 00:06:40.180
components to Interface Builder.

00:06:40.180 --> 00:06:44.720
And the best way to understand them
is now to look at them in a demo.

00:06:48.160 --> 00:06:52.130
So I'm going to start by
creating a new project in Xcode.

00:06:52.130 --> 00:06:56.740
And for this example today,
we're going to create a

00:06:56.740 --> 00:06:59.130
new iPhone application.

00:07:00.490 --> 00:07:04.600
Now, everything that I talk about today,
even though I'm showing

00:07:04.600 --> 00:07:08.810
you an iPhone application,
is applicable to iPhone applications

00:07:08.810 --> 00:07:10.730
and Mac OS X applications.

00:07:10.850 --> 00:07:14.590
All of the concepts are
exactly the same in both.

00:07:18.400 --> 00:07:21.500
If you look in the Groups and
Files view of your project,

00:07:21.500 --> 00:07:23.940
you'll find our main window.

00:07:24.060 --> 00:07:28.600
And this is what we're going to work
with today to create our interface.

00:07:28.860 --> 00:07:32.560
So if I double click this, oops,
that was a little slow,

00:07:32.560 --> 00:07:34.900
it opens up Interface Builder.

00:07:35.130 --> 00:07:38.550
And you'll see two of the
components I just talked about,

00:07:38.550 --> 00:07:42.480
the document window
and the design surface.

00:07:42.810 --> 00:07:45.660
In the document window,
there's the files owner

00:07:45.660 --> 00:07:48.570
and first responder,
and these are things that

00:07:48.770 --> 00:07:51.150
you need to know about,
but they're a little beyond what

00:07:51.150 --> 00:07:52.320
we're going to talk about today.

00:07:52.320 --> 00:07:55.710
So I'd like to invite you to
come back on Thursday at 9 a.m.

00:07:55.740 --> 00:08:00.330
And our Mastering Interface Builder
session will talk more about the

00:08:00.520 --> 00:08:04.470
files owner and first responder and
how to use them in your application.

00:08:06.850 --> 00:08:10.620
What I want to talk about
right now is the window.

00:08:10.620 --> 00:08:15.360
Now, this window here in the document
window is the same window

00:08:15.360 --> 00:08:17.490
that is my design surface.

00:08:17.900 --> 00:08:22.080
And if I close the design surface,
I can always get back to it by

00:08:22.140 --> 00:08:24.610
double-clicking on my window.

00:08:25.840 --> 00:08:30.340
Now, kind of like the masterpiece
I showed you earlier,

00:08:30.440 --> 00:08:32.580
this isn't very exciting.

00:08:32.760 --> 00:08:35.490
So we want to add some controls to it.

00:08:37.400 --> 00:08:42.470
To add controls, I'm going to go to the
Tools menu and open the library.

00:08:42.510 --> 00:08:47.090
This is where all of those preconfigured
controls and views I told you about,

00:08:47.090 --> 00:08:48.980
this is where you find them.

00:08:50.250 --> 00:08:55.310
At the top of the library,
you'll see that there's an outline view.

00:08:56.160 --> 00:09:01.940
Which groups our controls and views and
all of our interface elements so that you

00:09:01.940 --> 00:09:04.700
can easily find what you're looking for.

00:09:04.700 --> 00:09:08.510
And it groups all the
related items together.

00:09:10.180 --> 00:09:16.110
In the center, you'll see all of the
elements that we need to use.

00:09:17.160 --> 00:09:19.980
And each one of them
has a short description.

00:09:20.090 --> 00:09:23.140
So you can see exactly what they do.

00:09:23.520 --> 00:09:25.420
And if you hover over
any of the elements,

00:09:25.420 --> 00:09:29.320
you also find a tooltip that gives
you the same short description.

00:09:29.330 --> 00:09:34.010
At the bottom is a longer description,
more detailed.

00:09:34.170 --> 00:09:39.140
So if the short description
isn't quite enough,

00:09:39.140 --> 00:09:40.220
you can look here.

00:09:40.260 --> 00:09:43.340
And if that still isn't enough,
don't forget that you can access

00:09:43.480 --> 00:09:48.280
all of the documentation as well,
the full documentation.

00:09:48.330 --> 00:09:50.370
The very bottom,

00:09:50.670 --> 00:09:55.600
There's an action menu where you can
go to configure how the library looks.

00:09:55.690 --> 00:09:58.910
So, for example,
I like to set it up so that I'm just

00:09:58.910 --> 00:10:03.770
looking at the icons because I've
used this for so long that I know

00:10:03.770 --> 00:10:09.150
what each of the icons does and what
they all represent for elements.

00:10:10.560 --> 00:10:14.500
We're going to keep it on
icons and descriptions for now.

00:10:14.500 --> 00:10:18.840
Now, I said icons,
and I probably shouldn't have used that

00:10:19.160 --> 00:10:24.950
word to describe the items in the library
because these are actual real controls.

00:10:25.310 --> 00:10:32.310
They aren't really just
pictures of controls.

00:10:32.310 --> 00:10:32.380
When we drag them and drop
them onto our design surface,

00:10:33.380 --> 00:10:38.390
You're going to see if
I select the navigation bar

00:10:38.490 --> 00:10:43.280
and drag it onto my surface,
I get an actual navigation bar.

00:10:43.430 --> 00:10:47.980
And I can place this wherever I want
to place it in the design surface.

00:10:48.680 --> 00:10:53.330
The application I want to build for you
right now is just a simple web browser.

00:10:53.650 --> 00:10:56.530
You all have an idea of what a
web browser is and the kind of

00:10:56.530 --> 00:10:58.330
elements we need to create one.

00:10:58.490 --> 00:11:04.110
For example, in my navigation bar,
I'm going to want a text field

00:11:04.110 --> 00:11:06.510
to be able to enter a URL.

00:11:07.450 --> 00:11:11.020
So if I use a search
field in the library,

00:11:11.120 --> 00:11:13.790
I can search for text field.

00:11:15.140 --> 00:11:20.110
And I can drag the text field out
and drop it onto my interface.

00:11:23.430 --> 00:11:28.640
Another important component
to my web browser would be,

00:11:28.810 --> 00:11:31.580
say, a web view, right?

00:11:32.120 --> 00:11:34.660
That might be particularly useful.

00:11:34.660 --> 00:11:38.820
So I can search again for a
web view and drag that out.

00:11:38.820 --> 00:11:43.010
And notice that in Interface Builder
we do a lot to try to resize things

00:11:43.130 --> 00:11:45.120
to exactly the size you need.

00:11:45.120 --> 00:11:47.280
We also have these things called guides.

00:11:47.570 --> 00:11:54.050
So if you can see the blue dotted
lines as I move the web view around.

00:11:54.470 --> 00:11:59.280
The guides are there to help
you align all of your elements.

00:11:59.340 --> 00:12:02.100
Like I said before, if you've tried to do
this in code before,

00:12:02.280 --> 00:12:04.800
it can be somewhat tedious to do in code.

00:12:05.060 --> 00:12:08.860
Interface makes this really easy
for you to be able to align things

00:12:08.860 --> 00:12:13.080
in the center or align them with
other elements that are on your page.

00:12:13.440 --> 00:12:17.460
You'll also notice when
you do this yourself,

00:12:17.460 --> 00:12:21.470
you'll feel the elements
snap to the guides.

00:12:21.600 --> 00:12:25.640
And I can't really show that to
you here because it's kind of,

00:12:25.750 --> 00:12:27.880
you know, it's hard to show.

00:12:27.880 --> 00:12:30.640
But once you try this on your own,
you'll see what I'm talking about.

00:12:32.380 --> 00:12:34.900
Okay, so I have a text field
and I have a web view.

00:12:35.110 --> 00:12:37.540
I'd also like to go back and forward.

00:12:37.540 --> 00:12:39.910
So let's add some buttons.

00:12:41.510 --> 00:12:43.630
Oops.

00:12:43.780 --> 00:12:49.000
So this is where some of that -- the
short description comes in really handy.

00:12:49.000 --> 00:12:52.400
I have a couple different buttons
that showed up when I said button.

00:12:52.550 --> 00:12:57.010
And in this case,
the bar button item is useful

00:12:57.010 --> 00:12:58.880
for UI navigation item.

00:12:59.270 --> 00:13:00.300
So I'm going to use that.

00:13:00.510 --> 00:13:04.930
And if I drag it out,
Interface Builder is showing me

00:13:04.930 --> 00:13:07.920
where I can drop this button.

00:13:07.920 --> 00:13:10.130
So I'm going to add one to each side.

00:13:12.780 --> 00:13:15.000
Now, in my design surface,
there are certain things

00:13:15.000 --> 00:13:19.550
I can do to customize my
elements in the surface itself.

00:13:19.890 --> 00:13:22.150
In this case, with buttons,
I can double-click on them

00:13:22.430 --> 00:13:24.210
and change their titles.

00:13:24.340 --> 00:13:27.740
And for now,
I'm just going to use a less than

00:13:27.740 --> 00:13:34.330
sign to represent my back button and a
greater than sign to represent forward.

00:13:34.330 --> 00:13:34.330
Okay?

00:13:34.580 --> 00:13:39.940
Now, it would be nice if I could get this
text field to stretch all the way across.

00:13:40.000 --> 00:13:42.390
And if you can see,
it might be hard in the back.

00:13:42.600 --> 00:13:47.600
There's two small buttons,
one on each side, the resize buttons,

00:13:47.630 --> 00:13:52.000
that I can select and then
resize the text field right

00:13:52.000 --> 00:13:54.590
here on the design surface.

00:13:55.660 --> 00:13:56.960
Okay, great.

00:13:56.960 --> 00:14:02.510
So now I have some of the basic
items that I need in my interface.

00:14:02.660 --> 00:14:07.100
And I can go ahead and
simulate my interface,

00:14:07.100 --> 00:14:09.890
and it brings up the iPhone simulator.

00:14:10.970 --> 00:14:13.990
I can click on the buttons
and I see that they,

00:14:13.990 --> 00:14:16.140
you know, act like real buttons.

00:14:16.210 --> 00:14:19.840
And I can click on the text field
and it actually brings up a keypad.

00:14:19.840 --> 00:14:22.930
Now, in my application,
I'd really -- since

00:14:22.930 --> 00:14:26.320
this is a web browser,
I'd like to have that go button that you

00:14:26.320 --> 00:14:31.250
see like when you use Safari and maybe
that .com button that's at the bottom.

00:14:31.250 --> 00:14:36.440
And there's a special web
keyboard that I'd like to use.

00:14:36.440 --> 00:14:39.890
So, if we go back to Interface Builder, I

00:14:43.300 --> 00:14:47.270
I want to customize these
elements that I have,

00:14:47.420 --> 00:14:51.170
so I need to go to the Tools menu
and open the Inspector.

00:14:52.260 --> 00:14:55.220
Now, the inspector is broken up
into a couple different pieces.

00:14:55.380 --> 00:14:57.930
We have the attributes inspector.

00:14:58.170 --> 00:15:03.500
We have the connections inspector,
the size inspector,

00:15:03.590 --> 00:15:05.660
and the identity inspector.

00:15:05.880 --> 00:15:08.220
And for this demo,
I'm going to talk about the size

00:15:08.290 --> 00:15:12.800
inspector and the attributes inspector.

00:15:12.900 --> 00:15:17.700
Now, in the size inspector,
you see this little animation.

00:15:17.760 --> 00:15:21.510
And this is a section on auto-sizing.

00:15:22.220 --> 00:15:29.110
So one of the things that
I need to do is my text field,

00:15:29.130 --> 00:15:32.830
when I rotate my interface,
the text field doesn't

00:15:32.830 --> 00:15:34.770
stretch all the way across.

00:15:35.160 --> 00:15:38.700
And I'd really like that to happen.

00:15:38.780 --> 00:15:41.490
So I can select the text field.

00:15:42.660 --> 00:15:48.040
And you'll see in the sample
animation that my text field

00:15:48.070 --> 00:15:49.900
is just staying in one place.

00:15:49.940 --> 00:15:56.770
Now, on the left-hand side,
there's four connections you can

00:15:56.970 --> 00:16:01.940
make to the outside of your widget,
and there's two stretchers,

00:16:01.940 --> 00:16:03.660
vertical and horizontal.

00:16:03.720 --> 00:16:06.300
And I want it to stretch horizontally.

00:16:06.340 --> 00:16:10.160
Now, you see the animation stretching,
but it's not going all the way across,

00:16:10.300 --> 00:16:13.890
And so I need to connect
it to the far side.

00:16:15.360 --> 00:16:20.400
And now when I rotate my view,
my text field is going to stretch to

00:16:20.430 --> 00:16:26.070
go across the entire top of the view.

00:16:26.070 --> 00:16:26.070
Great.

00:16:26.740 --> 00:16:28.440
So what else did I want?

00:16:28.750 --> 00:16:38.380
Well, I wanted that text field to have
the go button and the web keyboard.

00:16:38.600 --> 00:16:42.690
So if I go to the attributes inspector,

00:16:43.470 --> 00:16:48.240
The attributes inspector set up
hierarchically so that I can see what

00:16:48.450 --> 00:16:51.780
properties go with what controls.

00:16:52.200 --> 00:16:56.710
And in this case,
there's also some extra controls

00:16:56.710 --> 00:16:59.260
in the text input traits.

00:16:59.890 --> 00:17:06.900
And I want to change the
type of my text input to URL.

00:17:06.950 --> 00:17:10.540
Now, all of these properties that we're
setting in the attributes inspector

00:17:10.540 --> 00:17:14.990
are the same properties that you
see when you use the APIs to create

00:17:14.990 --> 00:17:18.040
these elements programmatically.

00:17:18.170 --> 00:17:18.780
Okay?

00:17:18.780 --> 00:17:24.820
So anything that you can do in the APIs,
we have matching properties

00:17:24.820 --> 00:17:27.060
that you can set here.

00:17:27.560 --> 00:17:31.000
So in this case,
I want to set the type to the URL.

00:17:31.000 --> 00:17:36.100
And I'd like to set the return
key to that blue Go button.

00:17:36.100 --> 00:17:39.380
And I want it to auto-enable
when I start typing.

00:17:39.380 --> 00:17:42.060
Now,
another thing I see is up at the top,

00:17:42.060 --> 00:17:46.390
I have text field properties,
and there's a placeholder text.

00:17:46.480 --> 00:17:48.820
Now, when my mother gets an
application like this,

00:17:48.820 --> 00:17:51.220
she doesn't necessarily
know that's a text field.

00:17:51.220 --> 00:17:53.960
We all have a good
idea it's a text field,

00:17:54.150 --> 00:17:56.380
but my mom, yeah, not so much.

00:17:56.820 --> 00:18:00.510
So I want to put some placeholder
text in here so that she knows what

00:18:00.510 --> 00:18:04.820
she's supposed to do with this text
field when she gets my application.

00:18:04.820 --> 00:18:11.810
So I'm going to type
in enter web address.

00:18:12.320 --> 00:18:20.510
And now you can see that the
placeholder text is in my text field.

00:18:20.510 --> 00:18:20.510
OK.

00:18:21.270 --> 00:18:24.920
So my interface is looking better,
but I'd really like it

00:18:24.990 --> 00:18:28.890
that sexy black color that,
you know, everybody uses.

00:18:29.030 --> 00:18:34.020
So I want to change.

00:18:34.670 --> 00:18:39.350
The first thing I want to
change is the window status bar.

00:18:39.350 --> 00:18:42.480
I'm going to change that to the black.

00:18:42.480 --> 00:18:45.840
And then I also want to change
my navigation bar to black.

00:18:45.920 --> 00:18:49.890
Now,
this is a good time to tell you about the

00:18:49.890 --> 00:18:53.990
different modes of the document window.

00:18:53.990 --> 00:18:53.990
So the document window

00:18:54.560 --> 00:19:00.040
You can see the top-level
elements in the icon view.

00:19:00.210 --> 00:19:06.360
But when you want to dig deeper into the
elements that are on your design surface,

00:19:06.360 --> 00:19:09.310
you can also use the browser mode.

00:19:15.730 --> 00:19:23.820
Hi, everyone.

00:19:23.820 --> 00:19:31.950
I'm Kelly Keenan.

00:19:32.600 --> 00:19:33.040
I'm the design engineer
at Interface Builder.

00:19:33.040 --> 00:19:33.040
I'm going to talk about how to
use the design interface to look

00:19:33.040 --> 00:19:33.040
through your design surface or
you can use the outline view,

00:19:33.040 --> 00:19:33.040
which I'm going to use right now.

00:19:33.040 --> 00:19:33.040
So if I just open the window,
I can see that the navigation bar

00:19:33.040 --> 00:19:33.040
is here and I can double click it
to select it in the design surface.

00:19:33.040 --> 00:19:33.040
And once it's selected
in the design surface,

00:19:33.040 --> 00:19:33.040
my inspector reflects what's selected.

00:19:34.330 --> 00:19:38.600
Now I can change the style of my
navigation bar to black opaque.

00:19:38.720 --> 00:19:42.940
Also notice that Interface Builder
helped me out by changing the

00:19:42.940 --> 00:19:46.990
buttons so that they're matching my
navigation controller and I didn't

00:19:46.990 --> 00:19:49.040
have to change anything there.

00:19:49.200 --> 00:19:49.480
Okay.

00:19:49.540 --> 00:19:50.660
Looking better.

00:19:50.770 --> 00:19:54.810
Now I want to add a little more to my
interface and I'm thinking I really want

00:19:54.810 --> 00:19:59.500
to stop in a reload button because this
isn't going to do me much at the moment.

00:19:59.500 --> 00:20:07.910
So there's not a lot of room up in
this top toolbar so I want to add

00:20:07.910 --> 00:20:07.910
a bottom -- a bar at the bottom.

00:20:08.270 --> 00:20:11.660
I can use the outline view
to navigate through here.

00:20:11.770 --> 00:20:15.200
I couldn't remember what the
bar at the bottom was called.

00:20:15.200 --> 00:20:19.900
I can scroll through and look and say,
oh, it was a toolbar.

00:20:20.070 --> 00:20:24.850
And now when I drag the toolbar out,
notice when I bring it into the

00:20:24.850 --> 00:20:29.380
design surface that it changed
to the black opaque color.

00:20:29.770 --> 00:20:33.640
So again,
Interface Builder does what tries

00:20:33.640 --> 00:20:39.550
to match some of the properties that
are similar in your design surface.

00:20:39.760 --> 00:20:43.450
And I'm going to set it
down here on the bottom.

00:20:44.360 --> 00:20:48.300
I have a button that's already there.

00:20:48.300 --> 00:20:51.760
And I'm just going to
duplicate that button.

00:20:51.760 --> 00:20:54.350
And notice that the two
buttons are side by side.

00:20:54.430 --> 00:20:56.780
I'd really like some space in the center.

00:20:57.050 --> 00:21:00.740
So if I look for a space,

00:21:01.600 --> 00:21:05.730
I can drag out a flexible
space and put it in between

00:21:05.730 --> 00:21:07.890
the two buttons to change them.

00:21:08.260 --> 00:21:11.380
Now I need to change the
properties of these buttons.

00:21:11.380 --> 00:21:14.370
So if I select the first button,
I can go to my inspector

00:21:14.400 --> 00:21:16.140
again to change properties.

00:21:16.200 --> 00:21:21.510
And I can change the identifier
for this property to refresh.

00:21:21.790 --> 00:21:27.880
So again, if I select the other button,
the properties that are listed here

00:21:27.880 --> 00:21:31.850
are the same ones that are available
if you did this programmatically.

00:21:32.020 --> 00:21:34.490
So I can set this one to the stop.

00:21:35.730 --> 00:21:40.230
And another nice thing about the
inspectors is we have something

00:21:40.440 --> 00:21:44.030
called multiple inspection,
where if I select both buttons at

00:21:44.030 --> 00:21:49.050
once by holding down the shift key,
I can now change the style of

00:21:49.180 --> 00:21:51.730
both of them at the same time.

00:21:51.740 --> 00:21:55.680
So if you have multiple elements
on your design surface that you

00:21:56.130 --> 00:22:00.070
want to change the properties of,
you can select all of them and

00:22:00.070 --> 00:22:02.750
change any of the common properties.

00:22:03.950 --> 00:22:06.830
So I'm going to change
these both to plain.

00:22:07.780 --> 00:22:12.200
Now, great,
my bottom bar is looking really good.

00:22:12.350 --> 00:22:18.040
So if you saw Matthew Furlick's
demonstration in the developer

00:22:18.040 --> 00:22:22.320
tools talk yesterday,
he dragged a toolbar that was

00:22:22.320 --> 00:22:24.300
already configured from the library.

00:22:24.300 --> 00:22:27.690
Now,
how did he get that there to begin with?

00:22:28.730 --> 00:22:45.580
I have this toolbar I might
want to use later in a demo.

00:22:45.580 --> 00:22:45.580
And so to do that,
all you have to do is select the

00:22:45.580 --> 00:22:45.580
toolbar and drag it back -- well,
sorry, I took it off there.

00:22:45.580 --> 00:22:45.580
Down to the

00:22:45.720 --> 00:22:52.010
Down in this section in the library,
there's a custom objects section

00:22:52.400 --> 00:22:56.410
where you can put any items
that you've configured already.

00:22:56.730 --> 00:23:01.600
And so we can drag this toolbar off and
just drop it into the custom objects.

00:23:01.600 --> 00:23:03.140
Okay.

00:23:03.160 --> 00:23:06.430
It's going to ask me for a
little bit of information.

00:23:06.560 --> 00:23:09.560
So in this case, I'm going to put in web
toolbar as the title.

00:23:09.560 --> 00:23:14.570
Give it a short description,
magically without typing much.

00:23:14.570 --> 00:23:16.440
And a long description.

00:23:16.440 --> 00:23:18.690
Because you know if I tried
to type this right now,

00:23:18.780 --> 00:23:20.380
I would misspell everything.

00:23:20.380 --> 00:23:23.780
So thank you, demo monkey.

00:23:23.780 --> 00:23:25.540
and

00:23:27.070 --> 00:23:31.680
When I press the OK button,
you'll now see that my toolbar

00:23:31.750 --> 00:23:33.740
appears in the library.

00:23:33.930 --> 00:23:37.390
The title I typed in, Web Toolbars,
is listed here as well

00:23:37.490 --> 00:23:39.400
as the short description.

00:23:39.560 --> 00:23:45.520
And the long description is down here
in the detailed description section.

00:23:45.800 --> 00:23:50.860
So anytime you have customized objects
that you'd like to reuse later,

00:23:50.940 --> 00:23:54.750
drag them back into the library
and they'll be available to you

00:23:54.750 --> 00:23:57.090
at any time through your process.

00:23:57.440 --> 00:23:57.890
Great.

00:23:57.890 --> 00:24:00.660
So I have this great
toolbar at the bottom.

00:24:00.740 --> 00:24:06.300
Now, I'd really like some custom images
for my back and forward buttons.

00:24:06.300 --> 00:24:10.290
So let's go back to Xcode for this.

00:24:12.130 --> 00:24:16.340
Now I need some resources,
and luckily I thought about

00:24:16.390 --> 00:24:18.170
my demo ahead of time.

00:24:18.420 --> 00:24:23.460
And I have a back and forward
button that I already created.

00:24:23.580 --> 00:24:27.830
So I can drag them into the
resources folder of my project.

00:24:28.750 --> 00:24:32.000
I'm going to have them copy into
my destination folder in case

00:24:32.000 --> 00:24:34.410
I delete the originals later.

00:24:34.410 --> 00:24:38.360
And I'm going to set
this to add to my target.

00:24:39.960 --> 00:24:43.560
Great, so I have these resources that
are now available in my project.

00:24:43.730 --> 00:24:46.710
Now if we go back to Interface Builder.

00:24:47.700 --> 00:24:49.930
Another section of the library
that I haven't told you about

00:24:50.000 --> 00:24:51.840
yet is the media section.

00:24:51.980 --> 00:24:56.440
And in the media section of the library,
you'll find all of the resources

00:24:56.600 --> 00:25:00.240
that are in your project.

00:25:00.330 --> 00:25:03.850
So you'll see that the back and forward
buttons that I added to my project

00:25:03.850 --> 00:25:06.100
are now available in the library.

00:25:06.330 --> 00:25:11.980
And I can drag these images out
and drop them onto my buttons.

00:25:12.650 --> 00:25:17.460
So all that code I had earlier to
put a custom image onto a button,

00:25:17.460 --> 00:25:20.890
I just did by adding these images
to my project and dragging and

00:25:20.980 --> 00:25:24.500
dropping them onto a button
that was on my design surface,

00:25:24.630 --> 00:25:30.410
which hopefully you'll agree with me
is a lot easier than writing the code.

00:25:30.930 --> 00:25:35.640
So let's just simulate
this one more time.

00:25:35.660 --> 00:25:39.820
But instead of simulating it,
I'm going to actually build it in Xcode.

00:25:42.970 --> 00:25:46.840
I'm going to save it because
I forget to do that sometimes.

00:25:46.860 --> 00:25:49.780
And we'll see now the
custom images that I put in,

00:25:49.780 --> 00:25:52.300
the buttons that I put at the bottom.

00:25:52.330 --> 00:25:59.920
And if I click on the text field,
I get that web keyboard

00:25:59.920 --> 00:25:59.920
with the dot com in it.

00:25:59.920 --> 00:25:59.920
And if I start typing,

00:26:02.800 --> 00:26:05.040
The Go button turns blue.

00:26:05.110 --> 00:26:09.400
And if I click on it, nothing happens.

00:26:09.540 --> 00:26:12.210
So we haven't connected
anything to code yet.

00:26:12.390 --> 00:26:12.780
Okay?

00:26:13.170 --> 00:26:15.500
And that's part of our next demo.

00:26:15.680 --> 00:26:18.250
So if we go back to the slides.

00:26:22.530 --> 00:26:26.340
Okay,
so we've created a custom interface.

00:26:26.340 --> 00:26:29.040
And I showed you four pieces
to Interface Builder that

00:26:29.040 --> 00:26:31.020
you need to know about today.

00:26:31.020 --> 00:26:32.740
The first being the document window.

00:26:32.740 --> 00:26:34.900
And this is the starting
point for your interface.

00:26:34.900 --> 00:26:37.800
It contains all of the interface
elements that are part of the

00:26:37.800 --> 00:26:39.620
interface that you're designing.

00:26:40.100 --> 00:26:45.270
It's available in the three views, icon,
outline, and browser view,

00:26:45.300 --> 00:26:49.390
so that you can search -- so that
you can go through your interface

00:26:49.510 --> 00:26:53.820
and find some of those elements
that might not be easily clickable.

00:26:53.820 --> 00:26:56.700
And it's searchable,
so that when you know

00:26:56.700 --> 00:27:00.300
what you're looking for,
you can just type it into the

00:27:00.300 --> 00:27:02.690
search field and easily find it.

00:27:03.040 --> 00:27:05.250
The second piece is the library.

00:27:05.350 --> 00:27:10.380
This stores all of the pre-configured
controls that we provide for you.

00:27:11.060 --> 00:27:14.940
It's divided in such a way that you
can -- we've grouped the controls

00:27:14.940 --> 00:27:18.780
so that you can see controls
that are related to each other.

00:27:19.150 --> 00:27:22.360
There's descriptive documentation
so if you don't know what a

00:27:22.470 --> 00:27:27.540
control or an element does exactly,
you can see a short description or a more

00:27:27.540 --> 00:27:30.500
detailed description about that element.

00:27:30.660 --> 00:27:31.940
It's searchable.

00:27:31.940 --> 00:27:34.970
And the library itself is customizable.

00:27:35.020 --> 00:27:38.650
So you can change it around a little
bit as you get more comfortable with

00:27:38.660 --> 00:27:42.030
using the library and interface builder.

00:27:42.030 --> 00:27:46.750
And also it's customizable in that
you can add any controls that you've

00:27:47.120 --> 00:27:52.240
created and configured back into
the library for you to use later.

00:27:54.390 --> 00:27:58.400
The third piece is the design
surface where you drag and drop

00:27:58.400 --> 00:28:03.100
all of these elements and move them
around your interface and they'll

00:28:03.100 --> 00:28:08.490
snap to the guides that are there
to help you lay out your interface.

00:28:10.020 --> 00:28:14.700
And everything you see on the design
surface is what you're going to see

00:28:14.700 --> 00:28:19.080
when you build and run your application,
just like we saw in the demo.

00:28:19.160 --> 00:28:22.310
The fourth piece is the inspectors.

00:28:22.630 --> 00:28:26.540
This is where you customize
all of the properties of each

00:28:26.540 --> 00:28:30.720
of the interface elements that
you're adding to your interface.

00:28:30.750 --> 00:28:33.700
They're grouped by type
so that you can easily,

00:28:33.720 --> 00:28:35.990
you know,
we looked at just the size inspector

00:28:35.990 --> 00:28:37.720
and the attributes inspector.

00:28:37.720 --> 00:28:40.870
And they're divided by
inheritance so you can see what

00:28:40.870 --> 00:28:43.060
properties go with what controls.

00:28:43.060 --> 00:28:47.160
And it's done that way to help
you learn a little bit about

00:28:47.160 --> 00:28:49.640
Cocoa and what goes with what.

00:28:49.740 --> 00:28:52.570
So what properties go with what elements.

00:28:52.600 --> 00:28:57.440
And it supports multiple
inspections so that if you want

00:28:57.440 --> 00:29:02.210
to change a common property for,
you know, a bunch of elements,

00:29:02.210 --> 00:29:05.350
you just select them all
and change them all at once.

00:29:05.870 --> 00:29:09.550
And we use these four pieces
to create a simple interface.

00:29:09.640 --> 00:29:13.600
And now I'd like to invite
Chris Pavicich to come on stage and

00:29:13.730 --> 00:29:16.670
explain to you how to make connections.

00:29:22.320 --> 00:29:23.150
Hello.

00:29:23.330 --> 00:29:23.840
Good afternoon.

00:29:23.840 --> 00:29:26.340
Hope you guys are enjoying
the session so far.

00:29:26.340 --> 00:29:28.980
Great demo so far, Kelly.

00:29:28.980 --> 00:29:33.040
That was an awesome visual
start to how you work with IB.

00:29:33.040 --> 00:29:35.840
So, I'm here to talk to
you about connections,

00:29:35.840 --> 00:29:39.980
and connections are the way you
make relationships between objects.

00:29:40.080 --> 00:29:43.770
It's how you're going to connect
the objects you've been working with

00:29:43.770 --> 00:29:47.410
in IB to the objects that you're
going to be working with in Xcode.

00:29:47.860 --> 00:29:52.330
So, how do I connect this pre-configured
interface that I've set up in IB to

00:29:52.440 --> 00:29:54.900
the source code I'm writing in Xcode?

00:29:55.320 --> 00:29:59.510
Before we get into that,
I'd like to talk for just a

00:29:59.510 --> 00:30:02.550
really brief second about MVC.

00:30:04.110 --> 00:30:13.610
So all of the applications in OS X on--
OS X and the iPhone OS are built around

00:30:13.610 --> 00:30:20.300
the model-view-controller paradigm.

00:30:20.300 --> 00:30:20.700
Show of hands-- it's
hard to see you guys,

00:30:20.700 --> 00:30:20.700
but how many of you
are familiar with MVC?

00:30:21.020 --> 00:30:21.400
All right.

00:30:21.400 --> 00:30:24.210
A pretty good section of the crowd,
but maybe 50/50.

00:30:24.350 --> 00:30:27.060
So let me explain MVC really quickly.

00:30:27.060 --> 00:30:30.270
So it's just a way of
partitioning the objects in your

00:30:30.270 --> 00:30:32.840
application into three slices.

00:30:32.840 --> 00:30:37.960
You've got the model layer that's really
the persistent data of your application.

00:30:37.960 --> 00:30:41.300
You've got the view layer
that's obviously your UI.

00:30:41.300 --> 00:30:45.560
And you have the controller layer,
and the controller layers of specific

00:30:45.640 --> 00:30:49.730
interest in the rest of this talk,
because it's really the glue

00:30:49.980 --> 00:30:52.800
that binds the model to the view.

00:30:52.800 --> 00:30:57.040
So when the view is clicked on,
someone manipulates a control,

00:30:57.040 --> 00:31:01.320
moves a slider, presses a button,
types in a text field,

00:31:01.320 --> 00:31:03.930
the controller layer is going
to need to respond to that and

00:31:03.930 --> 00:31:06.640
somehow change the model layer.

00:31:06.640 --> 00:31:09.450
And when something updates
in the model layer,

00:31:09.520 --> 00:31:13.170
say you get an over-the-air
notification that someone's added a

00:31:13.170 --> 00:31:17.540
new address book card using MobileMe,
we need to reflect that

00:31:17.540 --> 00:31:18.930
in the address book UI.

00:31:19.040 --> 00:31:23.470
So it's the controller layer that's,
again, responsible for noticing that part

00:31:23.740 --> 00:31:28.710
of the model layer has changed,
and I need to take the appropriate action

00:31:28.720 --> 00:31:31.310
to go ahead and update the view layer.

00:31:31.570 --> 00:31:34.110
So it's glue.

00:31:37.610 --> 00:31:42.640
Okay, so the rest of the talk is gonna
be concerned with how we tie the

00:31:42.640 --> 00:31:47.860
view layer to the control layer,
and we do that in IB Making Connections.

00:31:50.820 --> 00:31:54.490
Kelly showed you earlier how the
resources that she added to her

00:31:54.640 --> 00:31:58.950
Xcode project automatically showed
up in IB when she added them.

00:31:59.220 --> 00:32:02.980
As you would expect,
Xcode and IB work together to

00:32:02.980 --> 00:32:07.200
communicate about resources that
are available in your project,

00:32:07.230 --> 00:32:13.200
about changes you've made to the source
of the objects in your Xcode project.

00:32:13.730 --> 00:32:16.380
So one of the most important things
you can do when you're working with

00:32:16.430 --> 00:32:20.280
an object in Interface Builder is
make sure that its class is set

00:32:20.380 --> 00:32:24.630
correctly so that IB knows how to
ask the right questions to Xcode and

00:32:24.640 --> 00:32:29.440
you're working with the correct data
for the class you're working with.

00:32:29.610 --> 00:32:34.660
So it's pretty simple to set the custom
class of an object in Interface Builder.

00:32:34.820 --> 00:32:38.100
Select it in the document window
and we're going to talk about one

00:32:38.100 --> 00:32:41.560
of the four inspector modes that
Kelly didn't touch on earlier.

00:32:41.660 --> 00:32:43.190
And that's the identity inspector.

00:32:43.200 --> 00:32:46.410
The identity inspector,
you can think of it sort of

00:32:46.410 --> 00:32:50.600
as a view into your class.

00:32:50.800 --> 00:32:55.140
It shows that at the
top of the inspector,

00:32:55.140 --> 00:32:57.050
you see what class this object is.

00:32:57.140 --> 00:33:00.310
And then beneath that,
you see the actions and outlets.

00:33:00.320 --> 00:33:03.770
I'm not going to explain
actions and outlets right yet,

00:33:04.020 --> 00:33:06.560
but we're going to get into that
in just a second because they're an

00:33:06.610 --> 00:33:10.550
integral part of making connections and
tying your UI back to your source code.

00:33:10.560 --> 00:33:12.810
So the first thing I've got to do,
I'm going to go ahead and

00:33:12.870 --> 00:33:13.200
do a little bit of a test.

00:33:13.200 --> 00:33:14.280
Amen.

00:33:14.740 --> 00:33:17.090
When I'm ready to start working
with one of my controller

00:33:17.090 --> 00:33:20.740
objects and making connections,
it's selected in the document window.

00:33:20.870 --> 00:33:23.640
And be sure that the custom class is set.

00:33:24.360 --> 00:33:28.840
Now,
since we as developer tools engineers

00:33:29.040 --> 00:33:33.510
want to make your life easier and do-- we
want you to do as little work as you have

00:33:33.650 --> 00:33:39.700
to and just focus on writing a great app,
the projects that come out of

00:33:39.700 --> 00:33:46.570
the Xcode templates have a lot
of the custom classes set up

00:33:46.570 --> 00:33:46.570
already in Interface Builder.

00:33:46.570 --> 00:33:46.570
And this one's--

00:33:46.770 --> 00:33:47.450
No exceptions.

00:33:47.550 --> 00:33:51.130
Since Kelly created the
project from an Xcode template,

00:33:51.130 --> 00:33:53.780
the custom class has already been set.

00:33:53.960 --> 00:33:56.700
But this is something you guys
are going to do a lot when you're

00:33:56.700 --> 00:33:58.370
working with your own IB files.

00:33:58.380 --> 00:34:00.340
So it's important that you
understand how it works.

00:34:00.360 --> 00:34:04.360
So if I just start typing a
class name into that combo box,

00:34:04.540 --> 00:34:07.960
it'll autocomplete because
IB and Xcode are communicating.

00:34:07.960 --> 00:34:09.960
It knows about all the
classes in my project.

00:34:09.960 --> 00:34:13.360
And boom, you should see it autocomplete
and your class is set.

00:34:13.600 --> 00:34:17.680
Now IB knows the class of that
object and can start asking it

00:34:17.680 --> 00:34:22.980
about the actions and outlets that
are available from that class.

00:34:28.160 --> 00:34:33.280
So as I mentioned earlier,
there are connections or how you set

00:34:33.730 --> 00:34:40.250
Make relationships between the objects in
Interface Builder and your source code.

00:34:40.370 --> 00:34:42.990
There are two kinds of connections
you need to be concerned with

00:34:43.380 --> 00:34:45.720
when you're working with IB.

00:34:45.880 --> 00:34:47.880
The first of these is an outlet.

00:34:47.920 --> 00:34:50.640
IB outlet's a pretty simple concept.

00:34:50.680 --> 00:34:56.640
It's just a way of exposing a property
if you're using Objective-C2 or an

00:34:56.640 --> 00:35:02.120
instance variable if you're not yet
using Objective-C2 to Interface Builder.

00:35:02.270 --> 00:35:06.210
You can imagine in the controller
object for the web browser Kelly started

00:35:06.210 --> 00:35:10.120
to build earlier that when our
URL loads and our user's done

00:35:10.520 --> 00:35:14.410
typing in a URL into the text field,
that we're going to need to

00:35:14.500 --> 00:35:17.450
go make a socket connection,
load some content,

00:35:17.550 --> 00:35:25.020
and then display the HTML that was
returned in the web view that she

00:35:25.040 --> 00:35:26.600
dragged into the user interface.

00:35:26.900 --> 00:35:30.590
So somehow the

00:35:31.440 --> 00:35:35.600
Controller object that we're working
with in Xcode needs to know about the

00:35:35.600 --> 00:35:39.070
web view that Kelly dragged in from IB.

00:35:39.830 --> 00:35:42.980
So if you see on the top of this slide,
and I apologize if it's

00:35:42.990 --> 00:35:45.180
hard to read in the back,
there's a property

00:35:45.530 --> 00:35:47.240
declaration for a web view.

00:35:47.360 --> 00:35:50.520
And as this property
declaration is right now,

00:35:50.730 --> 00:35:52.500
this web view won't show up in IB.

00:35:52.500 --> 00:35:56.530
See the two inspector modes
I've got below the code?

00:35:56.530 --> 00:36:00.020
There's on the right the
connections inspector,

00:36:00.020 --> 00:36:02.160
and on your left the identity inspector.

00:36:02.160 --> 00:36:07.380
And you'll notice that there
are no outlets in either list.

00:36:07.610 --> 00:36:09.070
Why?

00:36:09.840 --> 00:36:14.400
Well, because we haven't told Xcode
to please tell IB that this

00:36:14.400 --> 00:36:17.130
property needs to be exposed.

00:36:17.250 --> 00:36:18.500
How do I do that?

00:36:18.590 --> 00:36:20.040
Well, it's pretty simple.

00:36:20.190 --> 00:36:25.810
I add one keyword to that property
declaration called IB outlet.

00:36:26.050 --> 00:36:31.260
And IB outlet is nothing more than a hint
to Interface Builder that this property

00:36:31.500 --> 00:36:34.700
is important and should be exposed to IB.

00:36:34.850 --> 00:36:38.190
So you see when I add
the IB outlet keyword,

00:36:38.700 --> 00:36:44.500
Interface Builder refreshes and I now
get a WebView outlet in both my identity

00:36:44.500 --> 00:36:46.990
inspector and my connections inspector.

00:36:47.140 --> 00:36:48.540
So great.

00:36:48.690 --> 00:36:53.500
We've got I-Bean knowing that there's
a WebView in source code that's going

00:36:53.500 --> 00:36:55.910
to be provided by this nib file.

00:36:59.740 --> 00:37:04.080
So outlets are how you expose
instance variables or properties

00:37:04.790 --> 00:37:06.680
from your source code to IB.

00:37:09.680 --> 00:37:10.200
Great.

00:37:10.260 --> 00:37:15.890
So far, I can talk to this web view,
but I can't respond to any user input.

00:37:16.040 --> 00:37:19.890
When Kelly was doing her demo earlier,
she started typing a

00:37:19.890 --> 00:37:22.600
URL in the text field,
hit go on the keyboard,

00:37:22.700 --> 00:37:24.000
and nothing happened.

00:37:24.100 --> 00:37:29.230
Well,
nothing happened because my controller

00:37:29.230 --> 00:37:33.230
class in Xcode had no idea what to do.

00:37:33.420 --> 00:37:35.100
It wasn't wired up.

00:37:35.340 --> 00:37:42.100
There was no connection between my
controller class and my text field in

00:37:42.100 --> 00:37:44.190
IB that responded to any user input.

00:37:44.400 --> 00:37:48.310
How do I respond to user input?

00:37:48.580 --> 00:37:50.500
I do that with IB Actions.

00:37:50.610 --> 00:37:56.470
IB Actions are used to connect the
methods that you write in code to

00:37:56.580 --> 00:38:00.970
controls in your user interface.

00:38:00.970 --> 00:38:00.970
So, I

00:38:01.160 --> 00:38:04.780
I've already written a load web
page method that'll go ahead and

00:38:04.850 --> 00:38:08.630
do all the magic right things
that need to happen to load a web

00:38:08.630 --> 00:38:12.210
page and show it in my web view.

00:38:12.510 --> 00:38:19.240
But again, if you look at the inspectors,
there are no-- my slides are wrong.

00:38:19.240 --> 00:38:20.540
I apologize.

00:38:20.630 --> 00:38:22.550
That should be blank.

00:38:22.860 --> 00:38:26.830
That load web page
should not show up yet.

00:38:26.830 --> 00:38:29.250
And I did a poor job
of reviewing my slides.

00:38:30.110 --> 00:38:35.730
Once I add the IB action keyword
to the declaration for this method,

00:38:36.010 --> 00:38:39.650
again, just like IB outlet,
it's a hint to Interface Builder that,

00:38:39.860 --> 00:38:44.010
hey, this method is important and
someone will want to connect to it.

00:38:44.200 --> 00:38:49.100
It shows up in IB,
and you see that we now have a

00:38:49.240 --> 00:38:53.610
load web page action showing up
in both the identity inspector

00:38:53.610 --> 00:38:53.610
and the connections inspector.

00:38:54.670 --> 00:38:58.730
So you've seen so far how
to use IB outlet to expose

00:38:58.930 --> 00:39:03.150
properties or instance variables
to IB and how to use IB action,

00:39:03.420 --> 00:39:07.380
which is a similar sort of keyword
for exposing methods to IB.

00:39:07.470 --> 00:39:10.790
But we haven't connected anything up yet.

00:39:12.230 --> 00:39:15.210
How do I make connections between
these objects and my source code?

00:39:15.460 --> 00:39:19.900
Well, I use the Connections Inspector.

00:39:20.960 --> 00:39:24.540
Making connections is just a
matter of clicking and dragging

00:39:24.760 --> 00:39:29.040
from the connections inspector to
the object you want to connect to.

00:39:29.140 --> 00:39:33.370
For instance,
I want to connect my load or my

00:39:33.890 --> 00:39:37.760
My web view outlet to the web view
that Kelly dragged in earlier.

00:39:37.900 --> 00:39:39.260
So how am I going to do that?

00:39:39.390 --> 00:39:42.040
From the connections inspector,
I'm going to click on

00:39:42.040 --> 00:39:45.670
the connection well,
and I'm going to drag over to the web

00:39:45.670 --> 00:39:48.940
view that is in my design surface.

00:39:49.020 --> 00:39:53.150
It's going to flash to let
me know that this is a valid

00:39:53.350 --> 00:39:57.090
endpoint for this connection.

00:39:57.090 --> 00:39:57.090
And when I

00:39:59.210 --> 00:40:03.270
When I let go of the mouse,
you'll see that the inspector updates

00:40:03.500 --> 00:40:08.270
and shows me on the right-hand side where
previously there was a connection well,

00:40:08.330 --> 00:40:14.650
that now the WebView outlet has been
connected to the WebView in my interface.

00:40:15.680 --> 00:40:17.800
The same goes for setting up an action.

00:40:18.050 --> 00:40:22.940
If I want to connect an action,
which represents a method, to a control,

00:40:22.990 --> 00:40:27.830
I simply drag from the connection
well on the right-hand side of the

00:40:27.920 --> 00:40:32.380
connections inspector to the control
that I want to connect that method to.

00:40:32.580 --> 00:40:36.420
So when the user manipulates
whatever control,

00:40:36.450 --> 00:40:41.670
in my case the URL text field,
it's going to send my load web page

00:40:42.230 --> 00:40:44.800
message to my controller object.

00:40:47.560 --> 00:40:54.080
So if we could get the demo machine,
the best way to learn is to see.

00:40:54.400 --> 00:40:57.980
So I'm going to finish the
application Kelly started earlier

00:40:58.410 --> 00:41:00.760
by making two connections.

00:41:01.750 --> 00:41:06.850
So from looking at the user
interface that Kelly started with,

00:41:06.980 --> 00:41:09.000
there's two things I need to do.

00:41:09.000 --> 00:41:12.080
I need to respond to a user
typing into that text field.

00:41:12.080 --> 00:41:16.140
Whatever URL they enter,
I've got to handle that,

00:41:16.220 --> 00:41:19.680
and I need my load web
page method called.

00:41:19.680 --> 00:41:19.680
And

00:41:21.700 --> 00:41:24.140
Once that URL is loaded,
I'm going to need some

00:41:24.350 --> 00:41:25.730
place to display it.

00:41:25.920 --> 00:41:31.740
So I'm going to need to connect my
controller in source code to my web

00:41:31.790 --> 00:41:35.560
view so that the user can see the
contents of the URL that they loaded.

00:41:35.710 --> 00:41:38.750
Pretty simple,
just two things we need to do today.

00:41:41.200 --> 00:41:46.100
So I'm going to go ahead and
start in Interface Builder.

00:41:46.100 --> 00:41:49.410
And I'm going to select my controller.

00:41:50.510 --> 00:41:54.830
And in the identity inspector,
we're going to see that-- yep,

00:41:54.830 --> 00:41:56.770
we've got the right class for this set.

00:41:56.770 --> 00:41:59.810
Like I said, it was set automatically
from the Xcode template.

00:42:00.280 --> 00:42:06.650
Just a way to save you time,
but should verify that

00:42:06.650 --> 00:42:06.650
it is the right class,
and it is.

00:42:06.850 --> 00:42:11.020
Now,
I need to add IB action and IB outlet

00:42:11.020 --> 00:42:16.250
keywords to that controller object,
and I need to do it in Xcode,

00:42:16.250 --> 00:42:18.120
or I'm going to do it in Xcode.

00:42:18.330 --> 00:42:23.350
So I need to jump to the source
definition for this object.

00:42:23.560 --> 00:42:25.320
How do I do that?

00:42:25.910 --> 00:42:28.620
Select the object in the document window.

00:42:28.640 --> 00:42:31.440
And in the Help menu,
there's an item called

00:42:31.490 --> 00:42:32.720
Interface for Selection.

00:42:32.950 --> 00:42:38.080
This will go ahead and jump me straight
to the header for this object in Xcode.

00:42:38.110 --> 00:42:42.080
There's also a shortcut if any
of you are power Xcode users or

00:42:42.080 --> 00:42:44.820
you have never used Xcode before.

00:42:44.850 --> 00:42:48.860
One thing that Xcode provides
is for you to command,

00:42:49.130 --> 00:42:53.300
double-click on any symbol
within your source file,

00:42:53.300 --> 00:42:55.060
and it'll jump you to the definition.

00:42:55.100 --> 00:42:56.830
Well, the same shortcut works in IB.

00:42:57.050 --> 00:43:00.130
So again, to jump to the source
definition for this,

00:43:00.130 --> 00:43:03.660
I could either say
Interface for Selection,

00:43:03.660 --> 00:43:06.500
or I could command, double-click.

00:43:11.720 --> 00:43:18.100
And you see that Xcode jumped me
straight to my controller's header.

00:43:18.140 --> 00:43:26.310
And I need to expose that web view.

00:43:30.520 --> 00:43:33.300
This is why you never type on stage,
folks.

00:43:33.300 --> 00:43:42.300
And since I'm using
Objective-C2 properties,

00:43:43.260 --> 00:43:48.530
Remember I need to use the
IB outlet keyword in the

00:43:48.530 --> 00:43:51.320
declaration for this property.

00:43:51.610 --> 00:43:53.740
So I'm going to go ahead and add that.

00:43:53.910 --> 00:43:57.290
And you notice there's also
my UI window has the IB outlet

00:43:57.670 --> 00:43:59.680
keyword in front of it as well.

00:43:59.840 --> 00:44:03.340
So if you're working with
pre-objective C 2.0 and you're

00:44:03.360 --> 00:44:07.400
not using properties yet,
you put the IB outlet declaration

00:44:07.840 --> 00:44:09.620
straight on the instance variable.

00:44:09.670 --> 00:44:12.450
If you're using properties,
you can either put it on the instance

00:44:12.450 --> 00:44:15.710
variable or on the property declaration.

00:44:16.020 --> 00:44:17.100
Either which way works.

00:44:17.180 --> 00:44:19.780
Just you should know
that you can do both.

00:44:21.900 --> 00:44:33.300
[Transcript missing]

00:44:35.370 --> 00:44:36.800
Load my web page.

00:44:36.880 --> 00:44:40.750
And again, I mentioned earlier that
this method isn't going to be

00:44:40.750 --> 00:44:44.500
exposed to IB yet because it's
missing the IB action keyword.

00:44:44.610 --> 00:44:46.370
So I'm going to go ahead.

00:44:46.570 --> 00:44:51.810
And change the return type
from void to IB action.

00:44:52.590 --> 00:44:56.790
And since watching me type
source code into Xcode is really

00:44:56.790 --> 00:45:07.980
painful... Listening to me
whistle on stage is much better.

00:45:16.470 --> 00:45:19.060
Sorry, I thought you weren't going to
have to watch me write code,

00:45:19.060 --> 00:45:23.170
but turns out you are.

00:45:47.820 --> 00:45:57.710
Demo Monkey to save the day.

00:45:57.710 --> 00:45:57.710
Hooray, there's my load web page action.

00:45:57.710 --> 00:45:57.710
And...

00:46:00.700 --> 00:46:01.760
Need to do a little cleanup.

00:46:01.950 --> 00:46:07.640
Got to take care of releasing
everything I'm responsible for.

00:46:07.640 --> 00:46:08.470
So great.

00:46:08.480 --> 00:46:13.750
I've got my load web page method written.

00:46:13.750 --> 00:46:13.750
And if we switch back to the header,

00:46:14.970 --> 00:46:17.970
I've got my web view property
declared as IB outlet,

00:46:18.040 --> 00:46:20.200
so it's going to show
up in Interface Builder.

00:46:20.320 --> 00:46:24.570
And I've got my load web page method with
the IB action keyword in front of it.

00:46:24.980 --> 00:46:27.830
So both of these,
the property and the method,

00:46:27.910 --> 00:46:31.180
are ready to go and they're
going to show up in IB.

00:46:31.900 --> 00:46:34.200
So we're done with Xcode.

00:46:34.250 --> 00:46:36.380
Go ahead and save.

00:46:36.620 --> 00:46:38.890
Switch back to IB,
and it's time to make some of those

00:46:39.020 --> 00:46:41.520
connections we talked about earlier.

00:46:43.150 --> 00:46:46.340
I mentioned that Xcode
and IB work hand in hand,

00:46:46.390 --> 00:46:47.420
work together.

00:46:47.420 --> 00:46:51.890
And if you've got your custom
class information set up,

00:46:51.990 --> 00:46:51.990
you see that--

00:46:52.960 --> 00:46:58.060
Now in the class actions section
of my identity inspector,

00:46:58.100 --> 00:47:01.060
my load web page method has shown up.

00:47:01.060 --> 00:47:03.900
And there's also an
outlet for my web view.

00:47:04.550 --> 00:47:09.890
So I want to start connecting the actions
and the outlets up to the actual objects

00:47:10.500 --> 00:47:14.040
in my UI so that my app does something.

00:47:14.200 --> 00:47:19.540
So I'm going to switch from the identity
inspector to the connections inspector.

00:47:19.630 --> 00:47:22.760
And the first thing I want
to do is connect my web view.

00:47:23.510 --> 00:47:28.900
So again, from the right-hand side of
the Connections Inspector,

00:47:30.040 --> 00:47:35.750
I'm going to click and drag,
and you see this thin blue line come out.

00:47:36.580 --> 00:47:39.060
And I don't know if you can
see it in the back of the room

00:47:39.060 --> 00:47:41.820
because it's kind of hard to see,
but when I bring the

00:47:41.940 --> 00:47:44.960
connection over the web view,
it highlights and that lets

00:47:45.100 --> 00:47:49.450
me know that this is a valid
endpoint for this connection.

00:47:49.500 --> 00:47:50.770
So I'm going to let go of the mouse.

00:47:50.880 --> 00:47:55.180
You see the inspector updated
and my web view is connected.

00:47:56.520 --> 00:47:59.020
If you're working with a nib
you've never worked with before,

00:47:59.100 --> 00:48:01.930
an Interface Builder document
you've never worked with before,

00:48:01.930 --> 00:48:05.140
and it's already pre-configured,
someone's done some work on it,

00:48:05.140 --> 00:48:08.460
and you're not sure of how
it's all connected together

00:48:08.460 --> 00:48:12.620
and you need a reminder,
if you slide your mouse over the

00:48:12.870 --> 00:48:18.710
connections in the Connections Inspector,
you'll see that it actually

00:48:18.710 --> 00:48:22.090
highlights the web view,
letting me know that's the web

00:48:22.090 --> 00:48:22.090
view this outlet is connected to.

00:48:25.080 --> 00:48:28.880
So great,
we can now push changes to the UI,

00:48:28.970 --> 00:48:32.910
but we can't react to any user
input yet because we haven't

00:48:33.400 --> 00:48:35.500
wired up our load web page method.

00:48:35.590 --> 00:48:40.240
So connecting actions is just
as easy as connecting outlets.

00:48:40.270 --> 00:48:43.110
I'm going to go ahead and
click on the connection well.

00:48:43.640 --> 00:48:47.440
Drag over my text field.

00:48:47.460 --> 00:48:49.910
And again,
it highlights to let me know this is

00:48:49.910 --> 00:48:52.820
a valid endpoint for this connection.

00:48:52.840 --> 00:48:54.850
Release the mouse.

00:48:55.180 --> 00:48:57.600
And again,
my inspector updates and lets me know

00:48:57.600 --> 00:49:03.000
that my load web page action is in
fact connected to that text field,

00:49:03.140 --> 00:49:05.330
my round style text field.

00:49:06.920 --> 00:49:07.390
Cool.

00:49:07.420 --> 00:49:11.300
So we've accomplished the two
goals we set out for in this demo.

00:49:11.340 --> 00:49:14.690
From my controller class,
I now have a connection to-- I have

00:49:15.110 --> 00:49:18.140
an IB outlet for my web view.

00:49:18.140 --> 00:49:22.430
And the web view that I designed in
the nib is now connected up to that

00:49:22.430 --> 00:49:25.320
property of my controller object.

00:49:25.320 --> 00:49:31.740
And I've got my UI responding to-- when
the user types into the URL text field,

00:49:31.740 --> 00:49:34.160
it's going to call my LoadWebPage method.

00:49:34.210 --> 00:49:36.420
So we're pretty much done.

00:49:36.420 --> 00:49:37.260
I'm going to hit Save.

00:49:37.260 --> 00:49:42.480
Let's go back to Xcode.

00:49:44.210 --> 00:49:46.100
Build and run.

00:49:46.100 --> 00:49:52.090
And if the demo gods are with me today,
we should have a working web browser.

00:50:08.000 --> 00:50:11.760
All right,
so let's take a look at what I just did.

00:50:11.760 --> 00:50:14.750
I'm not going to go head to
head with a mobile Safari team,

00:50:14.750 --> 00:50:16.700
but that's pretty cool.

00:50:16.700 --> 00:50:18.770
I just built a web browser.

00:50:18.880 --> 00:50:23.350
It actually works.

00:50:23.350 --> 00:50:23.350
And I wrote about--

00:50:23.550 --> 00:50:25.500
Seven lines of code maybe?

00:50:25.560 --> 00:50:28.840
And that's a pretty
complicated user interface.

00:50:29.010 --> 00:50:33.860
We should test to make sure it all works.

00:50:33.860 --> 00:50:33.860
So,

00:50:39.490 --> 00:50:42.030
We know the text field worked,
we saw that,

00:50:42.180 --> 00:50:45.300
but none of my navigation buttons work.

00:50:45.390 --> 00:50:50.720
So I'm gonna go ahead and quit
the simulator and go back to IB.

00:50:52.230 --> 00:50:54.020
Because there are some
connections I forgot to make.

00:50:54.200 --> 00:50:59.210
I didn't wire up any of those controls
in the nav bar or the toolbar at the

00:50:59.220 --> 00:51:03.950
bottom of the window to my controller
object or to any other object.

00:51:04.160 --> 00:51:06.780
So I can click them
until the cows come home,

00:51:06.790 --> 00:51:09.470
and as you saw, they won't do anything.

00:51:09.850 --> 00:51:11.860
We've got to change that.

00:51:11.940 --> 00:51:17.890
I happen to know that the UI web view
has a couple actions that it defines that

00:51:17.900 --> 00:51:20.760
I can connect objects from my nib to.

00:51:20.970 --> 00:51:25.280
So I'm going to select my web view.

00:51:26.360 --> 00:51:31.560
And I see that WebView has four actions:
go back, go forward, reload,

00:51:31.580 --> 00:51:33.500
and stop loading.

00:51:33.670 --> 00:51:38.770
Those seem eerily similar to
the controls I have in my UI.

00:51:38.900 --> 00:51:41.510
So I'm going to go ahead and
connect those up as well.

00:51:41.800 --> 00:51:43.540
Go back.

00:51:44.150 --> 00:51:50.700
Go forward, reload, stop loading.

00:51:50.850 --> 00:51:51.460
So good.

00:51:51.710 --> 00:51:56.410
We've got every interface element
that the user can interact with

00:51:56.410 --> 00:52:01.840
in this UI wired to something,
so they'll all do something.

00:52:01.840 --> 00:52:02.870
So I'm going to go ahead and save.

00:52:02.870 --> 00:52:10.550
Go back to Xcode again, build and run.

00:52:18.900 --> 00:52:28.580
And let's actually navigate in this
web view and see if back works.

00:52:28.580 --> 00:52:28.880
There we go.

00:52:28.960 --> 00:52:30.230
It's a little bit slow, but it did work.

00:52:30.420 --> 00:52:32.240
And does back work?

00:52:32.420 --> 00:52:33.980
Awesome.

00:52:33.980 --> 00:52:37.750
So that actually concludes my demo today.

00:52:37.780 --> 00:52:39.560
If we could get the slides.

00:52:46.500 --> 00:52:47.440
All right.

00:52:47.510 --> 00:52:48.660
So we talked about connections.

00:52:48.860 --> 00:52:54.110
Connections are the way you relate
objects in either within an Interface

00:52:54.110 --> 00:52:58.860
Builder document or between an Interface
Builder document and your source code.

00:52:58.940 --> 00:53:04.520
So it's all about making connections
and it's all about relating things.

00:53:04.520 --> 00:53:08.270
And there are two kinds of connections
you need to be concerned with.

00:53:08.270 --> 00:53:13.510
IB outlets, which expose instance
variables or properties from

00:53:13.510 --> 00:53:15.810
your source in Xcode to IB.

00:53:16.500 --> 00:53:19.680
And IB actions,
which expose the methods you've

00:53:19.680 --> 00:53:26.170
written in your source code to IB so
you can hook them up to controls.

00:53:26.440 --> 00:53:30.370
That actually brings an end
to our presentation today.

00:53:30.530 --> 00:53:36.070
If you have any questions
or need more information,

00:53:36.230 --> 00:53:37.830
please contact Michael Jurwitz.

00:53:38.130 --> 00:53:40.300
He's our Developer Tools evangelist.

00:53:40.300 --> 00:53:43.540
And if you need more documentation
about Interface Builder,

00:53:43.920 --> 00:53:49.600
please visit
developer.apple.com/documentation/develop

00:53:49.600 --> 00:53:53.300
ertools/conceptual/ibuserguide.

00:53:53.520 --> 00:53:55.300
Wow, that's a long URL.

00:53:55.300 --> 00:53:59.770
But there's great documentation
on the web about IB.

00:54:00.900 --> 00:54:03.960
And if we've really wet your whistle
today and you want to know more about

00:54:04.570 --> 00:54:09.350
why I wrote some of the source that
I wrote or how to do more advanced

00:54:09.430 --> 00:54:12.340
things with Interface Builder,
I'd invite you to join us to our

00:54:12.340 --> 00:54:14.520
Mastering Interface Builder session.

00:54:14.570 --> 00:54:17.210
That's going to be in the
marina at 9:00 AM Thursday,

00:54:17.210 --> 00:54:19.600
and it's going to be jam-packed
with a lot of really,

00:54:19.600 --> 00:54:20.900
really cool content.

00:54:21.070 --> 00:54:25.230
So if you like what you saw today,
please join us Thursday at 9:00 AM,

00:54:25.230 --> 00:54:28.760
and we'll have tons more
information for you.

00:54:29.760 --> 00:54:35.300
and all of the Interface Builder
engineers will be available

00:54:35.300 --> 00:54:36.700
in labs throughout the week.

00:54:36.770 --> 00:54:39.900
So please come and join us
if you've got any questions,

00:54:39.950 --> 00:54:41.520
you need some one-on-one help.

00:54:41.590 --> 00:54:43.580
Be happy to help you.