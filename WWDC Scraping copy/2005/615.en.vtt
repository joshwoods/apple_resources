WEBVTT

00:00:01.000 --> 00:00:06.250
Oh, it's great to see the
room full like this.

00:00:06.440 --> 00:00:08.740
If you were here for
the session last year,

00:00:08.740 --> 00:00:12.360
it had gotten moved four times,
from like a Wednesday to a

00:00:12.470 --> 00:00:15.900
Thursday to a Friday to back to a
Thursday and then back to a Friday.

00:00:15.910 --> 00:00:19.540
We had a smaller room,
and we had standing room only.

00:00:19.540 --> 00:00:23.940
And so it really,
really warms my heart in the enterprise

00:00:23.990 --> 00:00:28.970
track and the admin side of OS X to
be seeing this many people in this

00:00:28.970 --> 00:00:31.020
room interested in this stuff.

00:00:31.040 --> 00:00:33.030
So thank you very much
for coming for this.

00:00:33.060 --> 00:00:34.530
Thank you.

00:00:39.310 --> 00:00:44.060
Last year we covered three different
kinds of scripts in one hour.

00:00:44.060 --> 00:00:46.970
This year we're covering four.

00:00:47.070 --> 00:00:49.980
So guaranteed 25% new material.

00:00:50.030 --> 00:00:51.300
If you were here at the
last year's session,

00:00:51.300 --> 00:00:55.170
you definitely have 25% more.

00:00:55.330 --> 00:00:57.900
Last year we talked a little bit
about how to choose a language,

00:00:57.920 --> 00:01:00.520
a little bit more about how the
different pieces fit together.

00:01:00.550 --> 00:01:03.620
This year I want to talk about
getting started with scripting and

00:01:03.620 --> 00:01:05.260
actually getting motivated about it.

00:01:05.260 --> 00:01:08.510
So to that end,
we've got two people coming up here

00:01:08.510 --> 00:01:12.880
and I asked them to do some things
that they hadn't done before to kind

00:01:12.880 --> 00:01:15.360
of get into that feeling of stuff.

00:01:15.360 --> 00:01:27.360
So, AppleScript and UNIX Scripting
for System Administrators.

00:01:27.360 --> 00:01:27.360
Who's a system administrator?

00:01:27.360 --> 00:01:27.360
That's beautiful.

00:01:27.360 --> 00:01:27.360
That's good.

00:01:27.360 --> 00:01:27.360
Alright, so good,
you're in the right place.

00:01:27.700 --> 00:01:30.260
That's me, Joel Rennich,
Consulting Engineer for the

00:01:30.260 --> 00:01:32.100
Enterprise Consulting Services.

00:01:32.100 --> 00:01:35.820
You might also know a little website
that I run with some other folks.

00:01:35.970 --> 00:01:38.090
We'll talk about that maybe
a little bit in the end.

00:01:38.110 --> 00:01:39.500
Save the applause for the end, thanks.

00:01:39.500 --> 00:01:46.740
So, let's get, why are they giving me the
heterogeneous network slides?

00:01:51.720 --> 00:01:53.530
Okay.

00:01:53.560 --> 00:01:55.750
All right.

00:01:55.800 --> 00:01:58.990
Introduction to scripting in OS X.

00:01:59.690 --> 00:02:02.740
So a little bit of the stuff
that we're going to talk about,

00:02:02.840 --> 00:02:05.540
some script options that you have.

00:02:05.630 --> 00:02:08.480
Again, AppleScript, shell, Perl,
and Python.

00:02:08.630 --> 00:02:09.800
So we picked up another P.

00:02:09.800 --> 00:02:11.000
Who was at the Python session?

00:02:11.000 --> 00:02:12.730
All right, good.

00:02:12.740 --> 00:02:14.020
We're not going to teach you Python.

00:02:14.020 --> 00:02:17.130
We're just going to do some
sexy cool stuff with it.

00:02:18.180 --> 00:02:18.940
All right.

00:02:19.270 --> 00:02:22.800
And why you're here, right,
is lots of cool demo scripts.

00:02:22.950 --> 00:02:27.400
As fun and exciting as the slides are,
actually showing real-life code,

00:02:27.400 --> 00:02:30.840
doing real-life things,
doing things that make your life easier,

00:02:30.990 --> 00:02:34.720
that gets you napping at
2:30 in the afternoon because

00:02:34.720 --> 00:02:37.290
life is so good and easy,
right?

00:02:39.280 --> 00:02:41.260
So what script?

00:02:41.290 --> 00:02:46.010
To that end, there's a lot of scripting
languages out there.

00:02:46.540 --> 00:02:48.140
Especially if you're new to scripting,
you're going to get

00:02:48.140 --> 00:02:50.150
overwhelmed by a lot of this.

00:02:50.430 --> 00:02:53.800
This is all the stuff in
10.4 that we ship with.

00:02:53.840 --> 00:02:57.400
Notice now there's KSH fans.

00:02:57.740 --> 00:03:00.010
All right, yeah, but definitely,
definitely if you're coming

00:03:00.080 --> 00:03:02.040
from Solaris or whatever else,
do a lot of KSH work,

00:03:02.110 --> 00:03:03.510
we now have KSH here.

00:03:03.520 --> 00:03:04.540
So that's killer.

00:03:04.540 --> 00:03:08.030
That's one of the big changes
in 10.4 that we took from 10.3.

00:03:08.030 --> 00:03:09.750
All right, so new to that.

00:03:09.760 --> 00:03:14.320
A bunch more that we don't have built in,
but you're more than

00:03:14.320 --> 00:03:16.010
welcome to put it in.

00:03:16.080 --> 00:03:19.030
So a sea of options that are out there.

00:03:19.800 --> 00:03:22.650
We talked a little bit last year
about picking a scripting language.

00:03:22.970 --> 00:03:24.800
Still similar ideas here.

00:03:24.920 --> 00:03:28.300
What I wanted to do when we go
through some of these demos,

00:03:28.360 --> 00:03:30.830
we took a common element,
that of creating your own

00:03:30.930 --> 00:03:33.130
software update server,
and we've written that in

00:03:33.130 --> 00:03:34.860
three different languages.

00:03:34.890 --> 00:03:38.080
One person never touched
Python until a month and a half ago,

00:03:38.080 --> 00:03:41.980
and I said, "Hey,
why don't you learn Python for me because

00:03:41.980 --> 00:03:45.780
I'm on the plane a lot and it hasn't
been very successful for me to pick

00:03:45.860 --> 00:03:48.020
it up." So I want you to learn Python.

00:03:48.020 --> 00:03:50.830
I want you to tell me how you can
replicate what we've already done in

00:03:50.840 --> 00:03:54.710
shell and what we've already kind of done
in AppleScript and enable that in Python,

00:03:54.710 --> 00:03:57.420
and what's the difference between
picking scripting languages.

00:03:57.420 --> 00:04:00.260
All right, so we'll definitely speak to
a lot of that as we go through

00:04:00.260 --> 00:04:02.850
these demos and talk about how
you can pick the best scripting

00:04:02.850 --> 00:04:04.860
language for what you want to do.

00:04:04.860 --> 00:04:07.680
The end result of all this,
if you read the bullets up here,

00:04:07.900 --> 00:04:09.740
does the script do what you need?

00:04:09.740 --> 00:04:11.680
Can you know how to program in it?

00:04:11.680 --> 00:04:14.260
Is it going to accomplish something?

00:04:14.260 --> 00:04:16.010
Once you get past that,
the actual scripting

00:04:16.010 --> 00:04:18.420
language is almost secondary,
at least in my opinion.

00:04:18.640 --> 00:04:20.220
All right, we're admins.

00:04:20.470 --> 00:04:22.420
Beauty is in the eye of the coder.

00:04:22.420 --> 00:04:24.460
All right?

00:04:24.460 --> 00:04:26.480
You want it to do something,
you want it to work.

00:04:26.480 --> 00:04:29.550
If it fits those goals,
it's a good scripting language for you.

00:04:29.800 --> 00:04:30.530
It's a good script.

00:04:33.790 --> 00:04:35.180
Don't have to defend scripting.

00:04:35.240 --> 00:04:37.370
I think maybe early on in OS X we did.

00:04:37.570 --> 00:04:39.830
People weren't used to
writing their own stuff,

00:04:40.020 --> 00:04:40.490
admins.

00:04:40.490 --> 00:04:46.360
In the OS 9 timeframe,
if you weren't an AppleScript developer,

00:04:46.430 --> 00:04:49.010
if you weren't an AppleScript coder,
you probably just sat there and

00:04:49.010 --> 00:04:50.570
took things as they came your way.

00:04:51.050 --> 00:04:53.790
Joel Rennich, If OS 9 couldn't do this,
that's okay.

00:04:53.790 --> 00:04:55.700
I'll find another application.

00:04:55.700 --> 00:04:57.580
I'll wait until someone
makes an application,

00:04:57.630 --> 00:04:59.310
or I'll just, I'm not going to do that.

00:04:59.390 --> 00:05:04.800
And hopefully now,
nobody here as an admin takes that, okay?

00:05:04.800 --> 00:05:08.070
Joel Rennich, If you run into something
that you can't do,

00:05:08.220 --> 00:05:09.750
you write a script to fix it.

00:05:09.790 --> 00:05:13.350
If you run into something that you
have to do over and over again,

00:05:13.410 --> 00:05:15.750
you write a script to fix it, all right?

00:05:15.760 --> 00:05:17.320
Joel Rennich, That's what scripting is.

00:05:17.320 --> 00:05:19.520
That's what we have the power of
all these different languages and

00:05:19.520 --> 00:05:20.740
all these different things to do.

00:05:20.780 --> 00:05:24.160
Joel Rennich, And that's really what
I like out of scripting.

00:05:24.160 --> 00:05:25.530
It's not just a hack job.

00:05:25.530 --> 00:05:27.910
It's not a replacement
for network admins.

00:05:27.910 --> 00:05:29.160
It's not always fast.

00:05:29.160 --> 00:05:32.530
Nobody ever writes scripts to be
the fastest thing on the block,

00:05:32.530 --> 00:05:33.420
all right?

00:05:33.540 --> 00:05:36.120
Joel Rennich,
Compiled applications are always going

00:05:36.120 --> 00:05:38.090
to be faster because they're compiled.

00:05:38.160 --> 00:05:39.680
But scripts are easy to write.

00:05:39.680 --> 00:05:40.570
Who writes C?

00:05:41.370 --> 00:05:42.100
That's not a bad one.

00:05:42.100 --> 00:05:43.300
That's a little more
than I was expecting.

00:05:43.300 --> 00:05:43.830
All right.

00:05:43.830 --> 00:05:44.650
Fair enough.

00:05:44.750 --> 00:05:44.960
All right.

00:05:45.040 --> 00:05:46.990
So definitely you can
go with that option.

00:05:48.900 --> 00:05:51.570
How to start scripting.

00:05:51.670 --> 00:05:54.930
Maybe your hands are getting tired,
but who's never scripted before?

00:05:56.150 --> 00:05:57.860
Wow, that's cool.

00:05:57.890 --> 00:06:00.080
There was about five people.

00:06:00.180 --> 00:06:01.740
That's very cool.

00:06:01.770 --> 00:06:04.530
Very cool that we've got that many people
doing this many good scripts on there.

00:06:06.070 --> 00:06:07.420
If you're new to it, right,
what was the first,

00:06:07.640 --> 00:06:08.560
how did you start scripting?

00:06:08.560 --> 00:06:10.220
You had a problem.

00:06:10.310 --> 00:06:12.720
You had a problem that
you didn't want to do.

00:06:12.840 --> 00:06:15.030
You had a problem that
you were tired of doing.

00:06:15.280 --> 00:06:18.000
You had a problem that annoyed you.

00:06:18.000 --> 00:06:20.390
And that's probably when
you wrote your first script.

00:06:20.460 --> 00:06:24.520
Once you got that first one going,
it was a very steep, slippery slope.

00:06:24.570 --> 00:06:27.700
And probably now you spend more
time looking for problems that

00:06:27.700 --> 00:06:29.260
you can script your way out of.

00:06:32.920 --> 00:06:35.280
That certainly is an issue I have.

00:06:35.460 --> 00:06:37.280
Oh man, that almost works.

00:06:37.540 --> 00:06:40.580
I don't have any reason for it,
but that's a beautiful line of code

00:06:40.580 --> 00:06:42.760
that I could just do something with.

00:06:42.860 --> 00:06:46.290
So definitely that's the way to start
scripting if you haven't already,

00:06:46.290 --> 00:06:47.370
is to get a problem.

00:06:47.380 --> 00:06:48.460
Get a script.

00:06:48.610 --> 00:06:51.610
The gateway drugs are
AppleScript and Shell,

00:06:51.730 --> 00:06:52.460
right?

00:06:52.550 --> 00:06:54.740
We give those away for free.

00:06:54.740 --> 00:06:58.870
You just go back into your terminal
history and you've got a Shell script.

00:06:59.490 --> 00:07:02.700
You hit the record button or you
just start talking about some stuff

00:07:02.800 --> 00:07:04.170
and you've got an AppleScript.

00:07:04.180 --> 00:07:06.830
That's the gateway drugs.

00:07:06.920 --> 00:07:09.520
Then from there, maybe you move to Perl,
maybe you move to Python,

00:07:09.520 --> 00:07:12.320
maybe you move to any one of the other
ones that we talked about before.

00:07:15.570 --> 00:07:18.260
Tools, we use a handful of
different tools up here.

00:07:18.260 --> 00:07:23.170
My personal favorite is SubEther Edit,
if anybody is here from Coding Monkeys.

00:07:24.310 --> 00:07:26.260
Well, they already know how to script,
I guess.

00:07:26.360 --> 00:07:26.680
All right.

00:07:26.750 --> 00:07:28.020
Well, thank you guys for SubEther Edit.

00:07:28.020 --> 00:07:29.000
It's my personal favorite.

00:07:29.000 --> 00:07:29.850
I use it a lot.

00:07:30.080 --> 00:07:33.440
But we also have a big fan of
the BB Edit and Text Wrangler.

00:07:33.440 --> 00:07:35.360
Andrina's coming up here to do Python.

00:07:35.360 --> 00:07:36.320
She's using that.

00:07:36.320 --> 00:07:38.860
Might talk a little bit to
that and how she likes it.

00:07:38.940 --> 00:07:40.220
Of course, TextEdit, right?

00:07:41.950 --> 00:07:43.770
Yay, text edit.

00:07:43.870 --> 00:07:45.710
Text edit,
all you need to write is script.

00:07:45.800 --> 00:07:46.900
Okay?

00:07:46.900 --> 00:07:49.630
Then we've got some AppleScript tools,
Script Debugger, FacePan,

00:07:49.630 --> 00:07:50.790
those kinds of things.

00:07:50.790 --> 00:07:52.480
There's a couple other
development environments.

00:07:52.480 --> 00:07:54.900
Xcode, of course,
we're going to show you an

00:07:55.000 --> 00:07:58.800
AppleScript Studio app written from
scratch as we go through there.

00:07:58.890 --> 00:08:05.230
And finally, as you get around to
getting into scripting,

00:08:05.230 --> 00:08:07.200
you should never have to write
all your code from scratch.

00:08:08.250 --> 00:08:10.100
There is so much code out there.

00:08:10.280 --> 00:08:13.040
Now that you've got Spotlight,
I've got a folder full of code snippets,

00:08:13.040 --> 00:08:15.710
probably a couple hundred
different text files.

00:08:15.710 --> 00:08:18.800
I really like Spotlight because
I can put something in that,

00:08:18.800 --> 00:08:21.430
and I can search just that folder,
and I can find when

00:08:21.440 --> 00:08:24.140
I've used this utility,
I can find when I've used that

00:08:24.140 --> 00:08:27.170
little bit of code before,
and then I just cut and paste.

00:08:29.830 --> 00:08:33.200
I almost get coder's block sometimes
when you open up that blank window.

00:08:33.210 --> 00:08:36.180
You're like, "Oh man,
I've got to start." Where do you start?

00:08:36.200 --> 00:08:37.200
This is so daunting.

00:08:37.200 --> 00:08:40.200
I'm going to end up with a couple
hundred lines of code when I'm done.

00:08:40.390 --> 00:08:42.190
You don't have to worry about that.

00:08:42.230 --> 00:08:45.190
So use the examples,
use the scripts that you already have.

00:08:45.300 --> 00:08:46.570
All the scripts that
we're going to do here,

00:08:46.570 --> 00:08:49.200
we're going to post on AFP 548,
so you're going to get them onto there.

00:08:49.200 --> 00:08:52.260
Since it was such a collection
of different scripts,

00:08:52.380 --> 00:08:53.890
thank you, thank you.

00:08:54.070 --> 00:08:56.100
It was such a collection of different
scripts from different areas,

00:08:56.100 --> 00:08:57.880
we couldn't really easily
get them through legal in

00:08:57.910 --> 00:08:59.760
time to get put on the DMG.

00:08:59.810 --> 00:09:03.340
Alright, so, pick them up from the site.

00:09:03.740 --> 00:09:05.930
AppleScript, I want to hit real quick.

00:09:05.940 --> 00:09:07.890
There's one or two new things,
and I want to highlight

00:09:07.990 --> 00:09:11.580
one or two new things that,
for the AppleScript that I do,

00:09:11.580 --> 00:09:14.440
is very important,
allows us to do a lot more functionality.

00:09:14.440 --> 00:09:18.950
And then we've got Josh that's going
to come up here and create something

00:09:19.110 --> 00:09:23.690
useful in 15 minutes or less,
hopefully geared towards admins.

00:09:24.610 --> 00:09:27.230
AppleScript,
start off language control other apps,

00:09:27.400 --> 00:09:30.500
fully functional in its own right,
been around since OS 7.

00:09:30.550 --> 00:09:32.180
We all know this.

00:09:32.280 --> 00:09:35.400
Advantages to AppleScript is
the big thing is the GUI.

00:09:35.670 --> 00:09:38.400
There's now other ways of
getting Python and Perl and

00:09:38.400 --> 00:09:41.360
even shell script into GUIs,
but by far the easiest is by

00:09:41.360 --> 00:09:45.500
going through AppleScript or
an AppleScript Studio app.

00:09:45.680 --> 00:09:47.600
By far the easiest to
get through all that.

00:09:47.600 --> 00:09:48.540
It's probably easy to pick up.

00:09:48.640 --> 00:09:50.800
Who started with AppleScript?

00:09:51.350 --> 00:09:54.840
Probably about a third of the audience
here started with AppleScript.

00:09:54.850 --> 00:09:56.780
And once you got to AppleScript,
you started getting

00:09:56.780 --> 00:09:57.970
exciting about scripting.

00:09:57.990 --> 00:10:00.330
You started learning those techniques,
that basic logic,

00:10:00.330 --> 00:10:03.600
and then you moved your way on to
some of the more advanced stuff if you

00:10:03.600 --> 00:10:05.980
outgrew AppleScript in certain areas.

00:10:05.980 --> 00:10:09.240
So AppleScript Studio is cool, very cool.

00:10:09.480 --> 00:10:13.740
Disadvantages, spoken English syntax,
right?

00:10:13.800 --> 00:10:17.980
Who's gotten confused by
AppleScript that they wrote 10 years ago,

00:10:17.980 --> 00:10:22.800
tried to go back to read it and just was,
"Oh my." So that goes back to

00:10:22.880 --> 00:10:25.910
commenting and making sure you
have clean code to begin with.

00:10:25.940 --> 00:10:28.490
But definitely AppleScript can
get a little wordy in there,

00:10:28.490 --> 00:10:32.860
single-threaded,
and it's only on the Mac.

00:10:32.860 --> 00:10:32.880
All right?

00:10:32.890 --> 00:10:36.090
That statement has changed a
lot in the last couple days,

00:10:36.090 --> 00:10:36.760
I think.

00:10:36.760 --> 00:10:38.050
But AppleScript's only on the Mac.

00:10:38.050 --> 00:10:41.300
So if you want to write AppleScript,
you have to deploy on the OS X on Mac.

00:10:41.300 --> 00:10:42.160
All right?

00:10:42.520 --> 00:10:45.280
Here's a sample AppleScript,
really quick and cheesy.

00:10:45.300 --> 00:10:49.470
If you've written AppleScript before,
you see what this does.

00:10:49.490 --> 00:10:52.920
Checks the file size or your
free space on your drive,

00:10:52.930 --> 00:10:55.490
says something, displays an alert,
that kind of stuff.

00:10:55.890 --> 00:10:56.410
All right?

00:10:56.430 --> 00:10:59.760
Shows you how easy and simple
it is to get into AppleScript.

00:10:59.760 --> 00:11:00.580
It's just like speaking.

00:11:00.580 --> 00:11:05.200
The problem is you get used to
that and then you want to say,

00:11:05.200 --> 00:11:06.490
"Computer."

00:11:08.510 --> 00:11:16.180
Get the coffee, answer all the email,
fix all the help desk issues,

00:11:16.390 --> 00:11:19.460
and then put me in for
a tea time at 4:00.

00:11:19.460 --> 00:11:22.460
So can't get that.

00:11:22.460 --> 00:11:25.800
What I want to do now
is who's used PW Policy?

00:11:26.300 --> 00:12:42.100
[Transcript missing]

00:12:44.700 --> 00:12:46.400
Thank you, Joel.

00:12:46.400 --> 00:12:48.880
I know Joel asked about who
was here that was a sysadmin.

00:12:48.880 --> 00:12:51.340
How many people here are--
I know this is in the IT track,

00:12:51.480 --> 00:12:55.190
but how many people are enterprise
versus developers in here?

00:12:55.470 --> 00:12:56.390
Oh, good.

00:12:56.540 --> 00:12:59.140
So understanding that
outside of this room,

00:12:59.210 --> 00:13:01.300
probably, most people say enterprise
equals Microsoft,

00:13:01.300 --> 00:13:03.300
how many people have to
deal with Exchange at work?

00:13:03.360 --> 00:13:04.960
Oh, good.

00:13:04.980 --> 00:13:06.330
And you love Entourage, right?

00:13:06.330 --> 00:13:07.660
Okay.

00:13:07.660 --> 00:13:11.220
We have to deal with Entourage at work,
and so I've got a couple of different

00:13:11.220 --> 00:13:15.200
scripts we've developed for Entourage
to lead into our AppleScripting here.

00:13:15.200 --> 00:13:17.820
There were a couple of things
we noticed about Entourage

00:13:18.010 --> 00:13:19.430
that didn't work real well.

00:13:19.610 --> 00:13:23.190
It did not -- no, and I like Entourage,
sorry.

00:13:23.200 --> 00:13:26.320
It does not archive calendar
items out of your calendar and

00:13:26.390 --> 00:13:29.760
blows out your storage quotas,
and it doesn't follow servers

00:13:29.760 --> 00:13:31.190
if servers ever change.

00:13:31.200 --> 00:13:34.190
We've got about 20
Exchange servers at work,

00:13:34.280 --> 00:13:36.960
and if they remove a
user to another server,

00:13:36.960 --> 00:13:39.200
Entourage just loses its mind.

00:13:39.200 --> 00:13:42.200
It's a perfect example for AppleScript.

00:13:42.200 --> 00:13:45.100
And is there anyone from
Apple here on the AppleScript team?

00:13:45.200 --> 00:13:48.200
Script editing editor team?

00:13:48.490 --> 00:13:49.200
No?

00:13:49.200 --> 00:13:51.200
Oh, yes, because -- okay, more people.

00:13:51.250 --> 00:13:56.260
You've done something beautiful
in AppleScript editor in 10.4,

00:13:56.260 --> 00:14:00.200
and that's you've reworked how we
get to look at our dictionaries.

00:14:00.200 --> 00:14:03.200
And now we have this
wonderful-looking interface,

00:14:03.200 --> 00:14:06.690
and I just would really like to
say thank you for doing that.

00:14:10.680 --> 00:14:15.340
The first times we ever used
AppleScript back on OS 7 and 8 and 9,

00:14:15.390 --> 00:14:19.060
we didn't have a shell to push around,
so AppleScript pretty much exclusively

00:14:19.060 --> 00:14:20.700
pushed around other applications.

00:14:20.700 --> 00:14:25.540
You'd tell, hey, Finder, do this,
and hey, Word, do this, and hey, Excel,

00:14:25.540 --> 00:14:26.290
do this.

00:14:26.320 --> 00:14:28.720
So this first script,
of course my comments,

00:14:28.720 --> 00:14:31.640
a boss entourage around,
and what this script does is very

00:14:31.780 --> 00:14:35.610
simply it looks through a calendar,
and it takes anything that is

00:14:35.610 --> 00:14:39.610
a non-repeating item in your
Exchange calendar that is older than 30

00:14:39.610 --> 00:14:43.500
days and marks it to an archive status,
and then you tell

00:14:43.500 --> 00:14:46.370
entourage not to archive,
not to synchronize that status,

00:14:46.390 --> 00:14:50.980
and it builds a 30-day
dropping off the server,

00:14:50.980 --> 00:14:52.990
and it turns basically
into a personal calendar,

00:14:52.990 --> 00:14:55.460
which is something you can't do
in entourage normally because

00:14:55.500 --> 00:14:56.860
you only have one calendar.

00:14:56.860 --> 00:14:58.840
This way the events stay
in the user's calendars,

00:14:58.840 --> 00:15:02.320
they're removed from the Exchange server,
the Exchange admins are happy,

00:15:02.320 --> 00:15:05.160
the users are happy,
and they don't have to think about it

00:15:05.170 --> 00:15:07.730
because you just tell it run every day,
and it automatically rolls

00:15:07.730 --> 00:15:09.130
these things off their calendar.

00:15:09.140 --> 00:15:12.370
Looking at it very easily,
this one is just AppleScript,

00:15:12.380 --> 00:15:15.080
and entourage has a little
bit of a funny dictionary,

00:15:15.080 --> 00:15:18.090
and I will say that Microsoft's
news groups are very good for

00:15:18.100 --> 00:15:21.960
getting troubleshooting information,
especially on scripting with their apps,

00:15:21.960 --> 00:15:24.100
and just to take an
easy look at this one,

00:15:24.150 --> 00:15:27.870
we see the basic language of AppleScript,
tell application,

00:15:27.870 --> 00:15:31.680
and you actually name an application,
and AppleScript gets really wordy,

00:15:31.680 --> 00:15:33.670
it is a very natural language.

00:15:33.680 --> 00:15:33.760
This is a very natural language.

00:15:33.840 --> 00:15:37.480
which does lead to lots of
tell the app of the window,

00:15:37.480 --> 00:15:40.630
of the hard drive, of the folder,
and you get these things

00:15:40.840 --> 00:15:41.940
that go on and on and on.

00:15:42.080 --> 00:15:44.120
But--so this is just
a very simple script,

00:15:44.120 --> 00:15:46.360
and Entourage is not on here,
so I'm just gonna show

00:15:46.360 --> 00:15:47.280
you it a little bit.

00:15:47.320 --> 00:15:49.860
You get to weird things
sometimes in apps.

00:15:49.860 --> 00:15:52.990
For some reason, Entourage,
you have to stick these-- sometimes

00:15:53.020 --> 00:15:55.800
stick another tell in there that
doesn't actually do anything to

00:15:55.800 --> 00:15:57.960
kind of wake it up to keep it going.

00:15:57.960 --> 00:16:02.030
And then AppleScript has some
nice ways to handle dates now.

00:16:02.110 --> 00:16:04.080
If the date comes
before the current date,

00:16:04.080 --> 00:16:09.720
-31, so it just easily is a nice way
to calculate out one month ago.

00:16:09.740 --> 00:16:12.220
So we've deployed this
script out with Entourage,

00:16:12.220 --> 00:16:14.580
which actually has very
nice script support.

00:16:14.580 --> 00:16:18.540
If you see the slash CA on the end,
that adds a keyboard

00:16:18.540 --> 00:16:22.010
shortcut in a Microsoft app,
so then users can hit Control-A and

00:16:22.010 --> 00:16:24.980
archive their calendar anytime they want.

00:16:24.980 --> 00:16:29.220
A bigger problem for us with Entourage

00:16:29.790 --> 00:16:35.310
was the fact that if a server changed,
it did not refresh the server,

00:16:35.310 --> 00:16:37.330
and they move users around
servers sometimes for

00:16:37.330 --> 00:16:38.500
maintenance or other reasons.

00:16:38.520 --> 00:16:41.960
So this is an example of doShellScript.

00:16:42.040 --> 00:16:47.090
So doShellScript is a nice new thing
we got in OS X with AppleScript,

00:16:47.250 --> 00:16:50.980
and what it allows us to do is send
a command through to the shell.

00:16:50.980 --> 00:16:55.180
We get a response back from
the shell as text generally,

00:16:55.180 --> 00:16:57.250
and then we can use that.

00:16:57.300 --> 00:16:59.120
So here it's very simple.

00:16:59.600 --> 00:17:01.690
You just enter in

00:17:03.050 --> 00:17:05.960
So, this is your domains and
variables here at the top,

00:17:05.960 --> 00:17:08.940
and this assumes you're using
the AD plugin from Apple,

00:17:08.940 --> 00:17:13.300
and then it basically uses Discl and it
goes out and it looks at the username.

00:17:14.300 --> 00:17:15.900
And then it just looks
at the current user.

00:17:15.900 --> 00:17:19.710
And then what it does is it determines
where their home server is for exchange.

00:17:19.710 --> 00:17:23.820
And then it bosses Entourage around
and changes the free/busy and it

00:17:23.870 --> 00:17:28.730
changes the exchange server settings
of their account to be able --

00:17:28.740 --> 00:17:30.290
of the last exchange account.

00:17:30.380 --> 00:17:34.800
And it changes it to be able to follow
the server then when things move.

00:17:35.470 --> 00:17:38.830
The first time in our Macintosh group
that they moved some servers after

00:17:38.920 --> 00:17:42.400
they had started using Entourage,
there was this flood of support tickets

00:17:42.550 --> 00:17:46.800
in the morning because about 15 people
could not find anything in Entourage.

00:17:46.800 --> 00:17:47.790
It was all gone.

00:17:48.400 --> 00:17:49.350
And so panic sets in.

00:17:49.350 --> 00:17:50.310
They're designers.

00:17:50.310 --> 00:17:53.790
They start rioting and running around
with pitchforks and things like that.

00:17:53.790 --> 00:17:56.300
So that's an easy example.

00:17:56.750 --> 00:17:57.800
Do Shell Script can be very simple.

00:17:57.800 --> 00:18:00.150
This Do Shell Script is one shot.

00:18:00.150 --> 00:18:04.300
It's one big, long, piped-up,
ugly-said command and a display.

00:18:04.940 --> 00:18:06.630
And then you have the disk command.

00:18:06.630 --> 00:18:09.680
So I hate -- I'm not very good a
lot of times with the said commands.

00:18:09.680 --> 00:18:10.800
So mine look ugly.

00:18:10.800 --> 00:18:12.630
If people in here probably looking at it,
they're like, "Ah,

00:18:12.690 --> 00:18:16.910
he could have done that one step." But,
you know, it works.

00:18:18.090 --> 00:18:22.450
Then you can also mix actual shell
scripts with the do script command.

00:18:22.500 --> 00:18:26.720
So here I've got another one
that you put a script in there,

00:18:26.720 --> 00:18:29.680
and you just put this shell
script anywhere in your system.

00:18:29.680 --> 00:18:33.260
The shell script itself
is very ugly as well,

00:18:33.330 --> 00:18:36.980
but basically what it does is it
looks at your AD domain and looks

00:18:36.980 --> 00:18:39.690
for the LDAP service records,
and then returns all

00:18:39.690 --> 00:18:43.780
your LDAP information,
ping sorts it by response time,

00:18:43.780 --> 00:18:46.170
and then you pick a fast
one off the top of the list.

00:18:46.320 --> 00:18:49.100
We have another issue where they
tend to like to upgrade LDAP servers

00:18:49.100 --> 00:18:50.120
during the day and things.

00:18:50.140 --> 00:18:52.740
They don't realize
Outlook on a PC just goes,

00:18:52.840 --> 00:18:53.890
oh, I'll use a different one.

00:18:53.900 --> 00:18:57.960
But on the Mac it's all hard-coded into
the exchange settings of Entourage.

00:18:57.960 --> 00:19:02.060
So this one calls a shell script,
which actually writes to a temp file.

00:19:03.330 --> 00:19:06.430
And then this goes through,
and because I was exceedingly lazy,

00:19:06.430 --> 00:19:10.780
and it puts dead servers at the
top that have zero response time,

00:19:10.780 --> 00:19:13.240
because sort considers
that a lower number,

00:19:13.240 --> 00:19:15.560
I just take the fifth one
off the top of the list.

00:19:15.640 --> 00:19:18.680
Scripting isn't always about
doing everything in exactly

00:19:18.680 --> 00:19:22.100
the best way possible,
but this works really, really well.

00:19:22.100 --> 00:19:25.960
We've never had more than two dead
LDAP servers at any given time,

00:19:25.960 --> 00:19:28.020
so I went ahead and told it five.

00:19:28.040 --> 00:19:29.040
Play it safe.

00:19:29.100 --> 00:19:30.800
I can roll this out to my users.

00:19:31.020 --> 00:19:33.200
Now,
I don't get a support desk call when all

00:19:33.330 --> 00:19:35.350
of a sudden the LDAP server freaks out.

00:19:35.430 --> 00:19:37.560
Their own little help desk
people down there can say,

00:19:37.560 --> 00:19:40.980
oh yeah, hit control R,
and it'll refresh your LDAP script.

00:19:42.700 --> 00:19:47.380
So those are just some basic examples
of just really easy AppleScript.

00:19:47.430 --> 00:19:50.790
The other stuff that I want
to talk about here is--

00:19:52.090 --> 00:19:53.100
AppleScript Studio.

00:19:53.220 --> 00:19:55.460
And in this case,
we're going to actually build something.

00:19:55.610 --> 00:19:59.540
If you came-- Joel and I were
out here in January and we did an

00:19:59.540 --> 00:20:03.830
AppleScript Studio session and we
came up with this nifty little app.

00:20:04.920 --> 00:20:07.720
called PolicyMaker.

00:20:07.960 --> 00:20:12.290
PolicyMaker is a front end to PWPolicy,
and it allows you to simply

00:20:12.290 --> 00:20:13.720
set some password policies.

00:20:13.840 --> 00:20:17.170
PWPolicy picked up a lot
of nice features in 10.4.

00:20:17.340 --> 00:20:21.250
It can now pretty much do anything
on a local user as you could do on a

00:20:21.310 --> 00:20:23.880
password server user on an OS 10 server.

00:20:24.240 --> 00:20:27.760
So because of that,
we can sit there and set things

00:20:27.760 --> 00:20:29.700
like maximum filled logins.

00:20:29.730 --> 00:20:33.360
And one of the nice new flags it
picked up in 10.4 is an enable user,

00:20:33.500 --> 00:20:36.710
so that if a user has hit these
policies and become disabled,

00:20:36.710 --> 00:20:40.260
you can actually use PWPolicy
to re-enable the user.

00:20:40.310 --> 00:20:43.670
And what you can do with this is you can
create a little AppleScript Studio app

00:20:43.670 --> 00:20:46.930
that's extremely simple that you
can give to help desk people.

00:20:47.040 --> 00:20:49.500
So you don't have to give them
Work Group Manager or access to

00:20:49.500 --> 00:20:53.220
Work Group Manager so they can
go in and re-enable something.

00:20:53.250 --> 00:20:55.480
This way, you can just have them
open up a little box,

00:20:55.510 --> 00:20:57.640
type in the username,
and click an unlock button,

00:20:57.740 --> 00:20:59.420
and it will unlock the user account.

00:20:59.540 --> 00:21:01.680
So we're going to go through.

00:21:01.700 --> 00:21:05.690
We're going to give--
a user here a policy.

00:21:07.720 --> 00:21:26.280
Maxman Feld Logins.

00:21:26.280 --> 00:21:26.280
So that's two.

00:21:26.280 --> 00:21:26.280
How about that?

00:21:26.280 --> 00:21:26.280
Okay.

00:21:26.280 --> 00:21:26.280
So now if we come to the command line
and we try to switch to that tech user,

00:21:26.280 --> 00:21:26.280
we can see that he works
unless he's already logged.

00:21:41.000 --> 00:21:42.800
Okay.

00:21:42.800 --> 00:21:43.900
You know what?

00:21:43.900 --> 00:21:46.560
We're going to reset his
password very quickly here.

00:21:57.360 --> 00:21:59.100
Okay, now we're ready to go.

00:21:59.230 --> 00:22:02.300
So we can SU to him.

00:22:02.320 --> 00:22:02.520
Right?

00:22:02.720 --> 00:22:06.250
And we've set up a policy though,
so if he botches his

00:22:06.250 --> 00:22:07.980
password a couple times,

00:22:10.830 --> 00:22:14.540
Now he cannot log in.

00:22:14.540 --> 00:22:17.200
He's locked out of his account,
as he should be.

00:22:17.410 --> 00:22:20.490
So using the pwpolicy command,

00:22:21.890 --> 00:22:24.400
We can start to look
at ways to unlock him.

00:22:24.400 --> 00:22:26.990
And just when you write an
AppleScript Studio app and you

00:22:27.000 --> 00:22:29.280
do anything but do shell script,
what you need to do is start

00:22:29.320 --> 00:22:32.500
looking at what the options
and flags and commands are.

00:22:32.650 --> 00:22:37.700
So I can see here that I want
to use an enable user command,

00:22:37.860 --> 00:22:39.390
which is right here.

00:22:40.380 --> 00:22:43.800
I can see that I need to
specify an authenticator and

00:22:43.800 --> 00:22:47.780
a password for the domain,
which you can then obfuscate

00:22:47.780 --> 00:22:50.800
inside when you do a deployment
build of your scripting.

00:22:51.020 --> 00:22:55.800
And I can also see that I can
specify a directory node here,

00:22:55.800 --> 00:22:58.620
but if you don't do anything,
it's just going to go down the

00:22:58.660 --> 00:23:01.030
search list in directory access.

00:23:01.340 --> 00:23:04.550
So I can figure out really
easily that I can use a PWPolicy

00:23:04.570 --> 00:23:07.240
command that looks like that.

00:23:07.300 --> 00:23:11.440
Demo admin, unlock, user tech,
enable user.

00:23:11.560 --> 00:23:15.150
And then very easily,
that allows me to re-enable

00:23:15.790 --> 00:23:16.460
text account.

00:23:16.610 --> 00:23:18.670
So wouldn't it be nice
though if I didn't have to A,

00:23:18.760 --> 00:23:21.860
hand out a password and mess with
the Etsy authorization and make this

00:23:21.880 --> 00:23:23.300
neutered admin that can do that.

00:23:23.370 --> 00:23:25.470
And I don't have to tell people
to go to the command line

00:23:25.470 --> 00:23:26.550
and say type in PW policy.

00:23:26.550 --> 00:23:29.450
If you guys have helper monkeys,
you know that's not going to work.

00:23:30.680 --> 00:23:34.280
So what we like to do is be
able to do it in AppleScript.

00:23:34.280 --> 00:23:36.820
AppleScript Studio,
and one of the most important things

00:23:36.820 --> 00:23:41.470
about AppleScript Studio apps is
giving them nice pithy little names.

00:23:42.460 --> 00:23:45.580
So we'll call it Keymaster.

00:23:45.620 --> 00:23:49.310
And it builds a little app here.

00:23:49.630 --> 00:23:52.000
This is just standard-looking stuff.

00:23:52.140 --> 00:23:58.840
You can see inside under Resources the
AppleScript Kit Dictionary.

00:23:58.840 --> 00:24:01.160
So if you ever need a reference
when you're looking at building

00:24:01.160 --> 00:24:02.780
your AppleScript stuff,
you don't have to keep

00:24:02.780 --> 00:24:03.700
flipping back to a PDF.

00:24:03.700 --> 00:24:06.500
They actually just stick it in
every single AppleScript project as

00:24:06.500 --> 00:24:08.380
another resource you can look at.

00:24:08.390 --> 00:24:12.620
We've got our basic script here,
which currently has nothing in it.

00:24:12.620 --> 00:24:14.440
And where we want to
start is with our nib.

00:24:14.440 --> 00:24:18.740
So I'm going to open up Main Menu here.

00:24:18.740 --> 00:24:18.740
That's fine.

00:24:20.360 --> 00:24:22.540
And so now I've got my little nib here.

00:24:22.730 --> 00:24:25.540
And the first thing I like to do is--

00:24:27.080 --> 00:24:32.500
is come in, and I'd like to give this the
name that matches our application.

00:24:35.640 --> 00:24:36.600
I'll take out some things.

00:24:36.600 --> 00:24:39.590
We know we're never going to need
a window menu in this application.

00:24:39.600 --> 00:24:42.270
We know we're never going to need
a file menu in this application.

00:24:42.300 --> 00:24:46.140
I want the window to match the same name.

00:24:52.060 --> 00:24:54.430
And then there's something important
that I have to do for AppleScript Studio.

00:24:54.560 --> 00:24:58.000
AppleScript Studio will not
look for that window title.

00:24:58.120 --> 00:25:00.990
It has no clue about what that is.

00:25:00.990 --> 00:25:05.820
And one of the things I really hate
in Xcode is that this list changes.

00:25:05.960 --> 00:25:06.630
Have you noticed that?

00:25:06.640 --> 00:25:10.710
Sometimes AppleScript will be command 7,
sometimes it'll be command 8.

00:25:10.710 --> 00:25:12.910
This time it's command 9,
which I've never actually

00:25:12.910 --> 00:25:13.700
seen it be before.

00:25:13.700 --> 00:25:15.800
So if anyone can figure out
what's going on with that,

00:25:15.890 --> 00:25:16.740
it'd be nice.

00:25:20.280 --> 00:25:22.460
And I have an important thing
to tell you that I've discovered

00:25:22.460 --> 00:25:25.570
about the Intel stuff with
AppleScript Studio that we'll get to.

00:25:25.680 --> 00:25:29.050
But here,
I need to give it an AppleScript name.

00:25:29.160 --> 00:25:32.220
And I'm going to go with "Main"
because that's a good generic name.

00:25:32.390 --> 00:25:36.580
So now I can use AppleScript Studio to
call that window by its name of

00:25:36.580 --> 00:25:40.240
"Main." I'm going to need to change
a couple things about this window.

00:25:40.310 --> 00:25:42.850
I don't want them to resize it.

00:25:43.070 --> 00:25:45.370
And then I need some
little widgets and do-bobs.

00:25:45.380 --> 00:25:46.150
I need a button.

00:25:46.190 --> 00:25:48.480
I'm going to go ahead and
make this smaller because it

00:25:48.480 --> 00:25:50.160
doesn't need to be that large.

00:25:51.340 --> 00:25:56.090
So there's a button,
we'll call it unlock.

00:25:56.450 --> 00:26:00.320
And then I find if you give
these things really easy names,

00:26:00.340 --> 00:26:02.960
we'll call this one button.

00:26:03.010 --> 00:26:05.180
That one's kind of hard to miss.

00:26:05.390 --> 00:26:06.760
And then we've got just
other simple things.

00:26:06.760 --> 00:26:12.120
We'll drag in a text field
for the put the username in.

00:26:12.130 --> 00:26:17.320
We'll call this one--
call this one username.

00:26:17.340 --> 00:26:18.930
How about that?

00:26:20.480 --> 00:26:21.750
Just some font text here.

00:26:21.810 --> 00:26:23.600
And notice how I get all my--
you guys have seen Xcode.

00:26:23.600 --> 00:26:27.300
You get all your-- the metrics and
everything get laid out for you.

00:26:27.300 --> 00:26:32.300
Say, enter user's short name.

00:26:42.600 --> 00:26:46.290
And then I want to take another
one here because I like to give

00:26:46.310 --> 00:26:48.440
status text to my applications.

00:26:48.440 --> 00:26:51.000
One of my big pet peeves about
apps are apps that don't actually

00:26:51.060 --> 00:26:55.280
tell you when they're doing things
or reply that something happened.

00:26:55.280 --> 00:26:58.300
I need to know whether something
was successful or something was not

00:26:58.400 --> 00:27:00.080
successful and things like that.

00:27:00.240 --> 00:27:04.990
And in this case, PWPolicy is going

00:27:06.950 --> 00:27:09.600
different information.

00:27:09.600 --> 00:27:12.120
Like if I click on it
and it's not disabled,

00:27:12.120 --> 00:27:14.540
it tells me, hey,
that user is not disabled.

00:27:14.580 --> 00:27:17.690
And I've found out that
that's the longest reply I'm

00:27:17.690 --> 00:27:20.220
going to get from PwPolicy.

00:27:20.310 --> 00:27:22.380
So I can select that.

00:27:23.870 --> 00:27:28.170
Go back to Interface Builder,
paste that in here, and then I can size

00:27:28.170 --> 00:27:30.580
this box based on that.

00:27:32.630 --> 00:27:36.680
Okay, so I'll save my nib and then
I can run it right there.

00:27:36.680 --> 00:27:39.470
Check it.

00:27:40.790 --> 00:27:44.580
I do want to make that
button the default button.

00:27:44.580 --> 00:27:46.670
So if I give it the return,
and Interface Builder is

00:27:46.770 --> 00:27:48.140
absolutely wonderful to use.

00:27:48.140 --> 00:27:51.290
So now I've got this actually
functioning little interface,

00:27:51.290 --> 00:27:52.860
but it's not hooked up to anything yet.

00:27:52.910 --> 00:27:56.550
So the way I do that is I go back
into AppleScript and I set up a

00:27:56.710 --> 00:27:58.980
handler when the button is clicked.

00:27:58.980 --> 00:28:02.840
And I've taken fonts off this machine.

00:28:09.140 --> 00:28:10.740
Normally this will show up down here.

00:28:10.770 --> 00:28:14.140
If you pull some of the key
Apple system fonts out of a machine,

00:28:14.310 --> 00:28:18.100
then AppleScript Studio will freak
out and it will not show things here.

00:28:18.270 --> 00:28:24.100
So let me try the other
version of Xcode on here.

00:28:24.230 --> 00:28:27.270
Let me see if I can
open up a pre-made one.

00:28:27.270 --> 00:28:27.270
How about that?

00:28:40.200 --> 00:28:53.400
[Transcript missing]

00:29:03.010 --> 00:29:07.400
So if we look back at our nib,
if this was functioning in a way-- oh,

00:29:07.400 --> 00:29:07.810
there it is.

00:29:07.830 --> 00:29:08.540
OK, good.

00:29:08.570 --> 00:29:11.530
Notice that this time
AppleScript is number eight.

00:29:13.870 --> 00:29:17.470
I can come in here and
I can click on this script.

00:29:17.590 --> 00:29:21.470
This is the script that this
button handler is tied to.

00:29:22.050 --> 00:29:24.820
Click Edit and now it starts
my little script for me.

00:29:24.870 --> 00:29:28.380
On clicked the object,
add your script here.

00:29:28.380 --> 00:29:30.760
So let's start adding our script in.

00:29:31.160 --> 00:29:36.470
After we finish our nib, username,
and that needs to be...

00:29:37.430 --> 00:29:38.940
Status Text.

00:29:38.990 --> 00:29:42.900
Like I said, easy names make it easy
to remember everything.

00:29:45.080 --> 00:29:49.210
So the first thing we wanted to do
is we want to figure out what the

00:29:49.210 --> 00:29:50.700
name of the user is in that field.

00:29:50.820 --> 00:29:54.460
So since I'm nice about this and I've
written stuff that I have no clue

00:29:54.460 --> 00:29:58.370
how it works five or six years later,
I'm going to comment the code.

00:29:59.220 --> 00:30:00.230
Get the username.

00:30:00.290 --> 00:30:02.560
And here right away,
we're going to start seeing

00:30:02.560 --> 00:30:04.040
the wordiness of AppleScript.

00:30:04.040 --> 00:30:08.120
So it's tell window main.

00:30:12.330 --> 00:30:13.930
And I'll make a variable just the user.

00:30:14.110 --> 00:30:22.850
So set the user to
contents of text field.

00:30:26.270 --> 00:30:27.780
And then we use our
AppleScript name we put in.

00:30:27.840 --> 00:30:32.640
Can you guys see that?

00:30:32.640 --> 00:30:35.000
Is that big enough?

00:30:35.030 --> 00:30:36.750
I just noticed that.

00:30:52.050 --> 00:30:54.000
Let's try this one more time.

00:30:54.040 --> 00:30:56.000
Get out of there.

00:30:56.010 --> 00:30:57.690
Fonts.

00:31:17.890 --> 00:31:20.390
288 would be good,
but it's not going to let us see that.

00:31:20.440 --> 00:31:25.680
Which is the command for that?

00:31:25.680 --> 00:31:27.020
Anyone remember off
the top of their head?

00:31:27.020 --> 00:31:28.930
Option +.

00:31:32.630 --> 00:31:35.260
Thankfully, Apple has some stuff
to help us with this.

00:31:35.260 --> 00:31:36.000
Zoom on.

00:31:36.000 --> 00:31:42.460
And that would be Command Option Minus.

00:31:42.600 --> 00:31:48.490
Which, of course, that's going crazy on.

00:32:01.680 --> 00:32:01.680
How's that?

00:32:01.680 --> 00:32:01.680
Okay,
now as long as I don't touch the mouse,

00:32:01.680 --> 00:32:01.680
we'll be okay.

00:32:05.020 --> 00:32:08.840
Because I'm using a GUI scripting tool.

00:32:08.910 --> 00:32:12.580
So we'll set the user main to the
contents of the text field username.

00:32:12.650 --> 00:32:15.520
And that just looks back at
whatever's in that field.

00:32:15.560 --> 00:32:18.740
So we've now set that,
and we need to attempt

00:32:18.740 --> 00:32:20.550
to unlock our user.

00:32:24.000 --> 00:32:25.660
And we just put another comment in there.

00:32:25.660 --> 00:32:28.820
And we need a little
bit of error handling.

00:32:28.820 --> 00:32:34.550
So if the username is equal to nothing,

00:32:37.940 --> 00:32:38.900
I need a what?

00:32:38.900 --> 00:32:42.270
Double dash in there?

00:32:42.300 --> 00:32:48.710
Oh, thank you.

00:32:48.770 --> 00:32:48.770
There we go.

00:32:51.630 --> 00:32:55.120
See, the machines start blowing
up and things go crazy.

00:32:55.280 --> 00:32:55.950
Thank you very much.

00:32:56.090 --> 00:32:59.640
So if the user is equal to nothing,
then-- and here we'll

00:32:59.710 --> 00:33:05.050
start calling that text,
that status text field.

00:33:05.180 --> 00:33:07.980
So contents of text field.

00:33:15.000 --> 00:33:26.000
[Transcript missing]

00:33:27.480 --> 00:33:30.220
And this is where we go
into our PW Policy stuff.

00:33:30.310 --> 00:33:37.310
So we're going to set the
contents of the text field

00:33:42.130 --> 00:33:47.280
Status text to do shell script.

00:33:47.280 --> 00:33:54.190
And here's where a little trick comes in.

00:33:54.190 --> 00:33:54.190
Ooh.

00:33:59.680 --> 00:34:03.940
Now I need to make that smaller.

00:34:04.010 --> 00:34:07.960
So I've got my PWPolicy command here,
right?

00:34:07.960 --> 00:34:11.600
So what I want to do is
just select this guy.

00:34:11.600 --> 00:34:15.590
Is everyone dizzy yet?

00:34:18.120 --> 00:34:21.830
To do shell script,
and we just quote out our shell scripts,

00:34:21.830 --> 00:34:23.490
and it will, tab it in.

00:34:23.500 --> 00:34:26.550
And then what I do is I'm
going to go and take that user,

00:34:26.560 --> 00:34:30.280
the user tech, that's the part that I'm
pulling from my variable,

00:34:30.280 --> 00:34:31.780
I want to just replace it.

00:34:31.920 --> 00:34:37.460
So I delete it, I end the quote, and...

00:34:39.730 --> 00:34:42.140
The user and another quote.

00:34:42.190 --> 00:34:45.560
And then I probably need to
put a quote on the very end.

00:34:45.560 --> 00:34:48.620
I already did that.

00:34:49.750 --> 00:34:53.040
So you just take your stuff
right out of the shell,

00:34:53.040 --> 00:34:55.290
and you just paste it in here,
and then you comment

00:34:55.290 --> 00:34:56.420
out what you need to do.

00:34:56.420 --> 00:34:59.580
AppleScript does get really
weird with a bunch of different

00:34:59.770 --> 00:35:01.300
escaping going on sometimes.

00:35:01.340 --> 00:35:06.210
So you have to make sure that
everything is escaped properly.

00:35:09.020 --> 00:35:12.270
So then I take that and I say,
if the contents-- because

00:35:12.270 --> 00:35:15.400
I know-- remember I saw that thing
where it said is not disabled?

00:35:15.400 --> 00:35:22.080
So if the contents--

00:35:27.900 --> 00:35:34.400
[Transcript missing]

00:35:35.520 --> 00:35:39.020
And this is an example of scripting where
you have to just get kind of creative.

00:35:39.040 --> 00:35:45.890
And AppleScript having some nice things
to evaluate with does not end with...

00:35:47.410 --> 00:35:50.720
And at the end of that line,
it just said, is not disabled.

00:35:50.740 --> 00:35:53.280
If it was successful, you saw earlier,
there was no return.

00:35:53.320 --> 00:35:55.400
So I can just say, disabled.

00:35:55.400 --> 00:35:58.840
So if it doesn't end with disabled,
then I know that it actually worked.

00:35:58.840 --> 00:36:04.480
Then set contents.

00:36:11.200 --> 00:36:13.800
of the text field again.

00:36:14.120 --> 00:36:15.400
There's a lot of this in AppleScript.

00:36:15.410 --> 00:36:17.400
Did we mention it's wordy?

00:36:22.340 --> 00:36:23.800
I think I should have
had you guys at work.

00:36:23.840 --> 00:36:29.920
That would be good.

00:36:30.020 --> 00:36:33.810
So set status test to just user unlocked.

00:36:35.860 --> 00:36:37.700
And then, of course,
all the wonderful Ns.

00:36:37.700 --> 00:36:41.860
End if, end if, end tell.

00:36:41.860 --> 00:36:44.960
And hit enter, and look,
it actually worked.

00:36:45.130 --> 00:36:46.420
It verified the syntax.

00:36:50.950 --> 00:36:54.230
Isn't that nice when that
works the first time?

00:36:54.320 --> 00:36:56.880
So now I can click Build and Go.

00:36:56.950 --> 00:36:59.500
And there's my little app.

00:36:59.630 --> 00:37:02.160
I can put in my username.

00:37:03.520 --> 00:37:05.240
And I forgot to erase that first.

00:37:05.240 --> 00:37:08.550
So tech is not marked as disabled.

00:37:11.710 --> 00:37:17.230
If we were to use PW Policy,
which was the thing we built last time,

00:37:18.280 --> 00:37:19.500
All right,
actually he has a policy already.

00:37:19.500 --> 00:37:24.120
So if I go back to my sutech,
mess up his password,

00:37:24.120 --> 00:37:28.110
mess up his password,
mess up his password.

00:37:28.420 --> 00:37:32.580
And then I go back to Keymaster,
user unlocked.

00:37:32.650 --> 00:37:35.590
So it actually works.

00:37:35.800 --> 00:37:37.800
Despite all everything else.

00:37:37.800 --> 00:37:39.900
It's nice because you can
take this then and you can

00:37:39.900 --> 00:37:41.190
customize these sort of things.

00:37:41.320 --> 00:37:43.600
That's the really basic
hello world version of this.

00:37:43.680 --> 00:37:47.150
You can take that then and you can go
further and you can take it and extend,

00:37:47.150 --> 00:37:50.650
say, you make it look with Disco let your
search path and build a pick list of

00:37:50.650 --> 00:37:54.010
your domains you have that someone
can select different domains and you

00:37:54.010 --> 00:37:55.950
can do all sorts of things like that.

00:37:56.400 --> 00:37:58.090
Joel Rennich,
The other big thing that came in

00:37:58.140 --> 00:38:00.950
AppleScript Studio and I'll just
mention it very briefly is do shell

00:38:00.950 --> 00:38:05.000
script has it with administrator
privileges item that you can run.

00:38:05.000 --> 00:38:09.910
Joel Rennich, And new intent for

00:38:13.310 --> 00:38:19.070
So it just with administrator,
and you can't read that, can you?

00:38:19.330 --> 00:38:20.280
Let's see if we can get that one bigger.

00:38:20.280 --> 00:38:30.150
Hey, that one actually works.

00:38:43.810 --> 00:38:45.800
So I'm typing this out here.

00:38:45.800 --> 00:38:47.860
There.

00:38:47.860 --> 00:38:50.040
Check that syntax.

00:38:50.040 --> 00:38:53.270
Yes, and I can't spell, but luckily--

00:38:53.930 --> 00:38:55.520
Oh, I misspelled administrator.

00:38:55.520 --> 00:38:57.540
Admin is great.

00:38:57.540 --> 00:38:59.200
You guys know what it says.

00:39:03.010 --> 00:39:05.050
There was a problem that used
to be in AppleScript Studio,

00:39:05.050 --> 00:39:07.260
and that's you had to embed this
stuff in your pseudo commands.

00:39:07.260 --> 00:39:09.200
And then if you looked
at the process listing,

00:39:09.200 --> 00:39:12.750
it actually was just echoing and piping,
and so you would see your administrator

00:39:12.750 --> 00:39:16.440
username and password in the process,
which was a lot of fun.

00:39:16.520 --> 00:39:19.590
So now it actually has
authentication and pulls up the

00:39:19.600 --> 00:39:21.760
authentication system of the OS.

00:39:23.360 --> 00:39:25.600
And you can run your results right there.

00:39:25.600 --> 00:39:28.730
And it does not embed your username
and password in the process listing,

00:39:28.760 --> 00:39:30.780
which is very important.

00:39:33.030 --> 00:39:34.000
Thank you very much.

00:39:34.000 --> 00:39:35.000
Hand it back over to Joel now.

00:39:35.050 --> 00:39:36.000
Say something about Intel.

00:39:36.520 --> 00:39:37.000
Oh, yes.

00:39:37.000 --> 00:39:38.000
Intel.

00:39:38.640 --> 00:39:42.540
Currently,
and I've discovered this in the ADC labs,

00:39:42.540 --> 00:39:47.170
you cannot build a universal
binary on a PowerPC machine.

00:39:47.220 --> 00:39:49.880
If you try to build an
AppleScript Studio universal binary,

00:39:49.880 --> 00:39:52.640
and specifically
AppleScript Studio binary,

00:39:52.640 --> 00:39:55.580
on a PowerPC machine, it will fail.

00:39:55.580 --> 00:39:56.880
You can do it on an Intel machine.

00:39:56.880 --> 00:39:58.920
We'll build a PowerPC,
but it seems right now in

00:39:58.920 --> 00:40:01.960
Xcode 2.1 you cannot make,
and I've tried it on four or five

00:40:01.960 --> 00:40:05.140
different machines just to make
sure it wasn't a variable in the

00:40:05.140 --> 00:40:07.410
hardware or software of the machines,
but no.

00:40:07.450 --> 00:40:11.180
Right now to build a
universal AppleScript binary,

00:40:11.180 --> 00:40:13.390
you have to use an Intel Mac.

00:40:13.410 --> 00:40:14.400
Thank you very much.

00:40:14.790 --> 00:40:15.400
Thank you, Josh.

00:40:20.130 --> 00:40:22.300
Something useful, right?

00:40:22.300 --> 00:40:24.440
Yeah, useful.

00:40:24.470 --> 00:40:24.930
Cool.

00:40:24.950 --> 00:40:27.720
So in that, we concentrated a little
more on shell last year.

00:40:27.720 --> 00:40:29.860
I wanted to put a little
more AppleScript in here.

00:40:29.860 --> 00:40:33.790
I do a lot with AppleScript Studio just
for putting faces onto things.

00:40:34.300 --> 00:40:38.340
We'll package a software update system.

00:40:38.360 --> 00:40:40.360
We'll run a little short here.

00:40:40.360 --> 00:40:42.740
So we're going to package a couple
of different software update systems,

00:40:42.740 --> 00:40:44.290
and we'll put that onto the site.

00:40:44.300 --> 00:40:47.220
So you can take a look at different
ways of doing the same thing.

00:40:47.220 --> 00:40:48.640
Josh has some really
cool stuff with that.

00:40:48.690 --> 00:40:52.560
So once we get off planes and we actually
have some time in front of a machine,

00:40:52.560 --> 00:40:54.280
we'll put more stuff on the site.

00:40:54.330 --> 00:40:55.040
We promise.

00:40:55.040 --> 00:40:55.760
We promise.

00:40:55.770 --> 00:40:57.510
So this will all be up there.

00:40:58.000 --> 00:41:00.740
Here's an example of the
interaction with the shell commands.

00:41:00.740 --> 00:41:01.930
That's, again, do shell script.

00:41:02.020 --> 00:41:04.740
And like we said, cool,
killer new thing with 10.4 is that

00:41:04.980 --> 00:41:07.190
that authentication is done in there.

00:41:07.200 --> 00:41:08.170
It's done the right way.

00:41:08.170 --> 00:41:09.130
You get the trampoline.

00:41:09.130 --> 00:41:09.880
You go from there.

00:41:09.880 --> 00:41:11.720
You don't get echoed
into the command line.

00:41:11.740 --> 00:41:14.370
So that allows AppleScript Studio apps
now to be much,

00:41:14.430 --> 00:41:16.740
much,
much more viable for administration tasks

00:41:16.830 --> 00:41:21.120
in your environment because you don't
have to worry about embedding passwords.

00:41:21.120 --> 00:41:23.620
You don't have to worry about the
security risk that's involved with that.

00:41:25.630 --> 00:41:26.590
All right.

00:41:26.700 --> 00:41:29.700
Shell in like about five minutes or less,
right?

00:41:29.810 --> 00:41:30.680
We'll cruise here.

00:41:30.740 --> 00:41:34.840
We all have some time for
some question and answer.

00:41:35.010 --> 00:41:36.840
Oldest scripting language around,
pretty much, right?

00:41:36.940 --> 00:41:39.610
Somebody's going to take offense
to that because I'm sure there's

00:41:39.610 --> 00:41:40.400
something else that's older.

00:41:40.400 --> 00:41:42.220
But it's certainly one of the old guys.

00:41:42.220 --> 00:41:44.250
Cool stuff that you can do with shell.

00:41:44.250 --> 00:41:47.550
I use shell as my primary language now.

00:41:47.550 --> 00:41:48.960
I'm trying to get into Python.

00:41:49.070 --> 00:41:50.380
I want to get into Python.

00:41:50.380 --> 00:41:53.020
But I just naturally fall into shell.

00:41:53.020 --> 00:41:56.340
And when I write in my sleep,
you know when you wake up and you had

00:41:56.340 --> 00:41:58.430
that dream of all the codes you wrote?

00:41:58.430 --> 00:41:59.660
That I write in shell.

00:41:59.690 --> 00:42:01.670
And so that says something to me.

00:42:01.670 --> 00:42:03.950
But I've got to expand my horizon.

00:42:03.950 --> 00:42:04.880
So that's one of the
things that I've got to do.

00:42:04.900 --> 00:42:06.150
And I'll be doing over
the next couple months.

00:42:06.150 --> 00:42:09.640
Advantages to shell,
most of us already know it.

00:42:09.730 --> 00:42:12.010
If you've ever used a terminal,
you know it.

00:42:12.010 --> 00:42:13.070
You've used shell.

00:42:13.070 --> 00:42:16.250
Now I can just paste it all into a
command line or paste it all into

00:42:16.250 --> 00:42:17.880
a text edit and go from there.

00:42:17.880 --> 00:42:18.740
Very portable.

00:42:18.740 --> 00:42:22.190
Some disadvantages that we have here
is obviously we don't have a GUI.

00:42:22.190 --> 00:42:24.600
So for that,
I usually use AppleScript Studio.

00:42:24.600 --> 00:42:27.570
There are some other GUIs out
there that allow you to do that.

00:42:27.570 --> 00:42:29.970
Some shell script functions
are very hard to do.

00:42:30.030 --> 00:42:33.400
Setting up an SSH connection through
just a shell command requires you

00:42:33.400 --> 00:42:34.880
using expect and some other things.

00:42:34.900 --> 00:42:39.020
other stuff that really makes
your brain hurt after a while.

00:42:39.970 --> 00:42:41.850
Simple mail server backup.

00:42:41.870 --> 00:42:45.140
All right, these are a lot of the kinds
of scripts that I write.

00:42:45.150 --> 00:42:47.700
They're stuff that we
don't necessarily have.

00:42:47.720 --> 00:42:51.310
We've got this beautiful, beautiful,
beautiful open directory

00:42:51.310 --> 00:42:53.920
backup now in 10.4 server,
but we don't have a

00:42:53.940 --> 00:42:55.240
mail server backup yet.

00:42:55.330 --> 00:42:58.460
So here we can use server admin
to shut down the mail system.

00:42:58.500 --> 00:43:02.630
Just zip it, tar it, rsync it, ditto it,
whatever you want to do.

00:43:02.810 --> 00:43:04.840
Get your mail database
off somewhere else,

00:43:04.840 --> 00:43:06.180
and then start it back up.

00:43:06.330 --> 00:43:09.740
And this is why I like shell is
because Apple has tried very,

00:43:09.740 --> 00:43:12.640
very hard to make sure that all
the functions that you could ever

00:43:12.690 --> 00:43:16.580
get in the GUI and then some are
available on the command line.

00:43:16.600 --> 00:43:19.110
Knowing that,
you know that you can probably

00:43:19.120 --> 00:43:22.910
script anything that you
want through the admin tools.

00:43:22.920 --> 00:43:27.540
A very, very powerful, very,
very complete way of administrating

00:43:27.670 --> 00:43:29.640
and helping you with stuff.

00:43:29.680 --> 00:43:31.190
So now I want to get into a demo.

00:43:31.230 --> 00:43:33.010
This is something that
I thought was really cool.

00:43:33.020 --> 00:43:34.830
I didn't know that it was
going to work quite as well as

00:43:34.840 --> 00:43:37.340
it did when I implemented it.

00:43:37.340 --> 00:43:43.190
At my house, as I'm sure most of you do,
I have a couple extra cluster nodes.

00:43:45.000 --> 00:43:51.340
I'm a little,
I feel a little embarrassed about that.

00:43:51.590 --> 00:43:54.430
But hopefully I get another
seven drives before too long.

00:43:54.550 --> 00:43:57.050
But with a cluster node,
if you've used a cluster node,

00:43:57.050 --> 00:43:59.160
they can kind of be kind of,
they're a different beast.

00:43:59.200 --> 00:44:01.420
You've either got a remote setup,
you've got to do a

00:44:01.420 --> 00:44:04.810
FireWire target disk mode,
Netboot, something else like that.

00:44:04.860 --> 00:44:07.650
My network,
the cats keep stepping on the gig

00:44:07.650 --> 00:44:09.800
switch and pulling out cables.

00:44:09.800 --> 00:44:12.740
So I'm not hitting 5.9 up times yet.

00:44:12.760 --> 00:44:13.980
And I need to be able to do that.

00:44:32.420 --> 00:44:32.440
I need to be able to have a
way to reimage my machines.

00:44:32.440 --> 00:44:32.440
And I got very,
very tired of doing all of this

00:44:32.440 --> 00:44:32.440
through Netboot Server and having
to have my desktop be a Netboot

00:44:32.440 --> 00:44:32.440
Server and that kind of stuff.

00:44:32.440 --> 00:44:32.440
So instead I kind of came
up with what I really like,

00:44:32.440 --> 00:44:32.440
which,
I'm going to reach into my bag here.

00:44:32.970 --> 00:44:34.900
FireWire Drive.

00:44:34.910 --> 00:44:39.000
I've got a FireWire Drive and
I've got an OS X system on here.

00:44:39.050 --> 00:44:42.280
That OS X system has a startup item.

00:44:42.510 --> 00:44:48.940
That startup item goes and formats
the drive in my cluster node.

00:44:49.130 --> 00:44:52.480
It then takes a disk
image right off here.

00:44:52.960 --> 00:44:59.440
ASRs it down onto that freshly formatted
partition on that cluster node.

00:44:59.540 --> 00:45:03.930
When that's all done, it shuts down.

00:45:04.640 --> 00:45:08.220
Absolutely no user
interaction whatsoever.

00:45:08.220 --> 00:45:11.140
When it comes back up,
I don't know what IP address

00:45:11.150 --> 00:45:11.920
it's supposed to have.

00:45:11.920 --> 00:45:14.290
It doesn't know what IP address
it's supposed to have.

00:45:14.480 --> 00:45:17.850
The image is fully configured and fully
installed to a generic IP address.

00:45:17.850 --> 00:45:20.780
So then I take one of my key drives,
my thumb drives.

00:45:20.780 --> 00:45:25.020
I slide that in there as it boots up,
and I've got another startup

00:45:25.020 --> 00:45:27.340
item that reads in a config file.

00:45:27.390 --> 00:45:30.240
IP address, serial number,
all the other configuration

00:45:30.240 --> 00:45:33.010
information that I want,
and applies that to the cluster

00:45:33.010 --> 00:45:34.450
node as it goes through.

00:45:35.500 --> 00:45:36.490
All right.

00:45:36.500 --> 00:45:39.520
Now I've got a completely, well,
semi-automated.

00:45:39.550 --> 00:45:43.540
I need somebody to plug this in,
use front panel mode, and boot off this.

00:45:43.540 --> 00:45:46.680
Once you've done that,
everything else is done for you.

00:45:46.680 --> 00:45:47.870
So I need no keyboard.

00:45:48.020 --> 00:45:48.940
I need no video.

00:45:48.940 --> 00:45:51.390
I need nothing on this
XServe cluster node.

00:45:51.390 --> 00:45:53.390
That's shell script.

00:45:53.440 --> 00:45:55.930
That's the stuff that
allows me to go home early.

00:45:57.430 --> 00:46:01.180
So sub-eth edit,
and I've got a couple of config files.

00:46:01.180 --> 00:46:03.140
I can take a quick
look and show you this.

00:46:03.190 --> 00:46:05.540
All right.

00:46:05.720 --> 00:46:07.300
Pop on here.

00:46:07.440 --> 00:46:10.540
And it's a really pretty simple setup.

00:46:14.830 --> 00:46:15.900
We go through here.

00:46:15.900 --> 00:46:17.230
Look at the drives.

00:46:17.230 --> 00:46:17.930
We use DF.

00:46:17.930 --> 00:46:21.260
So I've modified this for
both XSERVs and cluster nodes,

00:46:21.360 --> 00:46:23.700
depending on how many drives you have.

00:46:23.700 --> 00:46:24.900
Go through there.

00:46:24.900 --> 00:46:25.830
Parse that out.

00:46:25.950 --> 00:46:27.220
Then we go through.

00:46:27.220 --> 00:46:28.060
We grab ASR.

00:46:28.100 --> 00:46:30.580
We grab an image,
and we image it onto it.

00:46:30.580 --> 00:46:32.260
Maybe do some other stuff.

00:46:32.260 --> 00:46:34.330
Maybe I set up an Apache 2 folder.

00:46:34.440 --> 00:46:39.010
Maybe I kick some other things off,
drop some config files in there.

00:46:39.010 --> 00:46:41.240
I then copy a config
startup item onto there.

00:46:41.240 --> 00:46:44.680
And once I get that config started,
I'm going to go through there.

00:46:44.700 --> 00:46:47.050
item,
it's going to pull from that USB thumb

00:46:47.510 --> 00:46:50.790
drive that I pop in when I boot up again,
all right?

00:46:51.090 --> 00:46:54.400
All that goes in here,
then that deploys an

00:46:54.400 --> 00:46:58.200
image with a startup item,
which is this auto

00:46:58.200 --> 00:47:00.520
configuration file here.

00:47:02.660 --> 00:47:06.870
This goes through and then
implements all those that it

00:47:06.870 --> 00:47:09.130
pulls off of the config file.

00:47:09.230 --> 00:47:11.230
So then we can use the
network setup command,

00:47:11.380 --> 00:47:13.730
the server setup command,
we can set a serial number,

00:47:13.900 --> 00:47:18.960
we can set an IP address,
we can set all of our information here.

00:47:19.010 --> 00:47:23.970
Not that we necessarily need yet
another way to automate deployments.

00:47:24.310 --> 00:47:26.600
But this can sometimes
come in really handy.

00:47:26.650 --> 00:47:29.430
This means that I can get
airdropped into a client location

00:47:29.870 --> 00:47:33.610
and I can set up equipment
without worrying about keyboards,

00:47:33.690 --> 00:47:36.640
without worrying about monitors,
without worrying about KVM switches,

00:47:36.760 --> 00:47:39.080
without worrying about networks.

00:47:39.190 --> 00:47:42.390
How many times have you had to
set up a couple machines and the

00:47:42.390 --> 00:47:44.290
network guy hasn't come in yet?

00:47:44.480 --> 00:47:46.050
That's a pain.

00:47:46.140 --> 00:47:51.460
Remote setup is a lot harder when you
don't have a network to work with.

00:47:51.460 --> 00:47:53.420
So some cool stuff that you can do.

00:47:53.420 --> 00:47:55.780
This, and it's such a simple,
we're probably talking maybe

00:47:55.780 --> 00:47:59.120
a hundred lines of shell here,
but does a really nice,

00:47:59.250 --> 00:48:02.580
really easy job of going through these.

00:48:02.580 --> 00:48:05.070
So back to the slides if we could.

00:48:06.980 --> 00:48:08.950
So we're going to also we're
going to post that code on there

00:48:08.950 --> 00:48:10.090
so you can take a look at it.

00:48:10.090 --> 00:48:13.850
We're going to build everything
live but and they didn't tell me we

00:48:13.850 --> 00:48:17.280
had XSERVs here or else except if
I get too close to them it's going

00:48:17.280 --> 00:48:19.090
to do some weird harmonics here.

00:48:19.090 --> 00:48:21.880
But if I knew that we might
have booted some of them off it.

00:48:21.880 --> 00:48:25.190
It's pretty cool to see except it's
not really as graphical as it could

00:48:25.190 --> 00:48:26.960
be because there's no monitor.

00:48:27.820 --> 00:48:29.820
We're also going to post Cheesy Soup.

00:48:29.820 --> 00:48:33.700
Cheesy Soup is a shell
software update system.

00:48:33.700 --> 00:48:38.340
It goes out,
it curls down packages from web

00:48:38.890 --> 00:48:42.430
servers and then installs them
using the package installer command.

00:48:42.440 --> 00:48:45.800
There's some things I'd like to add
to it but I took this and when we

00:48:45.910 --> 00:48:49.330
get to the Python section in a few
minutes I took this shell script that

00:48:49.520 --> 00:48:53.260
I hadn't touched in probably about a
year and I called up Andrina and I said

00:48:53.320 --> 00:48:55.550
Andrina we need some Python demos.

00:48:55.620 --> 00:48:59.530
But we also need some examples
of how easy it is to pick

00:48:59.540 --> 00:49:00.620
up a new scripting language.

00:49:00.620 --> 00:49:04.120
There was silence at that
point on the other phone.

00:49:04.120 --> 00:49:06.680
So Andrina has taken this and
translated it into Python.

00:49:06.680 --> 00:49:08.090
She's going to walk you through that.

00:49:08.210 --> 00:49:10.420
So I'm going to leave the
sexy cool new stuff for her.

00:49:10.470 --> 00:49:12.630
We'll post this on the site and
you can compare and contrast

00:49:12.630 --> 00:49:13.940
the differences between those.

00:49:15.540 --> 00:49:19.300
I also real quick want to mention
interaction with AppleScript.

00:49:19.330 --> 00:49:21.600
There are some things that
AppleScript does really,

00:49:21.600 --> 00:49:23.900
really well that shell can't even touch.

00:49:23.950 --> 00:49:27.800
One of them is interfacing with the user
and allowing them to pick something.

00:49:27.970 --> 00:49:30.520
So here's a little 10-line combo.

00:49:30.850 --> 00:49:33.020
The bit on top is a shell script.

00:49:33.020 --> 00:49:35.220
You run that shell script
and it calls an AppleScript.

00:49:35.220 --> 00:49:38.330
That AppleScript pops up a dialog box.

00:49:38.330 --> 00:49:40.950
So this is not an
AppleScript Studio application.

00:49:41.070 --> 00:49:44.700
This is purely a shell script that
has an AppleScript that joins with it.

00:49:45.230 --> 00:49:45.480
We call it an AppleScript.

00:49:45.500 --> 00:49:46.980
We call that AppleScript.

00:49:46.980 --> 00:49:48.390
It pops up a chooser file.

00:49:48.420 --> 00:49:49.320
We pick that file.

00:49:49.560 --> 00:49:52.120
We then echo it back to the shell script,
which means we can do

00:49:52.120 --> 00:49:53.180
something else with it.

00:49:53.180 --> 00:49:54.400
These go as a combo.

00:49:54.510 --> 00:49:55.470
You deploy them.

00:49:55.470 --> 00:49:57.330
You allow somebody to click on.

00:49:57.330 --> 00:49:59.990
You run a cron job that
does that shell script.

00:49:59.990 --> 00:50:01.910
We then get an interface with it.

00:50:01.920 --> 00:50:04.730
We get user interaction
and pass it back to it.

00:50:04.770 --> 00:50:07.770
There's huge amounts of things
that we can do with that.

00:50:07.770 --> 00:50:11.650
I know someone that's working with
things like this to allow users to be

00:50:11.650 --> 00:50:14.230
kicked off semi-gracefully off a machine.

00:50:14.240 --> 00:50:15.480
You know what I mean?

00:50:15.480 --> 00:50:18.760
When you're using ARD and you want to
do package updates and push those out,

00:50:18.960 --> 00:50:21.220
but maybe they're still in there,
but you want to reboot it because

00:50:21.220 --> 00:50:22.940
you've just done a 10.4.1 update.

00:50:22.940 --> 00:50:26.340
So this allows some interaction and we
can see if the user is there or not.

00:50:26.350 --> 00:50:29.600
So ideas like this really help
you take what you want to do and

00:50:29.600 --> 00:50:31.510
really make them into reality.

00:50:31.510 --> 00:50:34.550
If you're just coding in one language,
if you're just coding in

00:50:34.550 --> 00:50:36.920
one scripting language,
you're really missing

00:50:36.920 --> 00:50:38.180
out on a lot of stuff.

00:50:46.480 --> 00:50:50.920
I want to let a bias on the table.

00:50:50.980 --> 00:50:53.750
I don't think I am worthy of Perl.

00:50:56.620 --> 00:51:00.080
I look at Perl, I read Perl,
I own half the O'Reilly

00:51:00.080 --> 00:51:02.480
library on how to program Perl.

00:51:03.830 --> 00:51:07.160
My brain has been
compacted as I grow older,

00:51:07.200 --> 00:51:11.370
and I have yet to get into
Perl as much as I should.

00:51:11.520 --> 00:51:14.620
For those of you that do Perl,
you probably love it and you'll

00:51:14.620 --> 00:51:16.700
never go anywhere else again.

00:51:16.800 --> 00:51:18.320
I'm a shell guy.

00:51:18.320 --> 00:51:20.460
I want to change.

00:51:20.460 --> 00:51:20.460
I do.

00:51:21.160 --> 00:51:22.080
I want modules.

00:51:22.310 --> 00:51:24.640
I want a user community.

00:51:25.040 --> 00:51:28.300
I want camels on things.

00:51:28.410 --> 00:51:31.580
Shell doesn't have a fancy animal logo.

00:51:32.440 --> 00:51:34.180
But one of these days.

00:51:34.370 --> 00:51:38.800
For those of you who have gone Perl,
you don't go back, right?

00:51:38.820 --> 00:51:40.870
Maybe?

00:51:42.680 --> 00:51:45.450
Depends on the simplicity, depends on,
well, and so Python's coming up,

00:51:45.530 --> 00:51:46.600
so we'll address that in a little bit.

00:51:46.600 --> 00:51:49.120
So Perl present on a lot of UNIX systems.

00:51:49.120 --> 00:51:52.390
This makes cross-platform,
at least on the UNIX side, really,

00:51:52.440 --> 00:51:53.250
really nice.

00:51:53.250 --> 00:51:55.720
If you get Perl on Windows,
which is also available,

00:51:55.720 --> 00:51:58.010
now you can have a script
that can go anywhere.

00:51:58.010 --> 00:51:58.690
All right?

00:51:58.690 --> 00:52:00.700
So very, very active developer community.

00:52:00.700 --> 00:52:02.450
Lots of advantages to Perl.

00:52:02.450 --> 00:52:04.470
Lots of advantages to Perl.

00:52:04.490 --> 00:52:07.860
The Perl motto is,
there's more than one way to do it.

00:52:07.860 --> 00:52:08.880
All right?

00:52:08.900 --> 00:52:12.380
And you'll notice that's an
incredibly big disadvantage,

00:52:12.380 --> 00:52:12.580
too.

00:52:12.600 --> 00:52:13.760
Thank you.

00:52:14.590 --> 00:52:16.700
When I do Perl,
I spend more time trying to find the

00:52:16.700 --> 00:52:19.680
right module that I want to use or
the right sample code that somebody

00:52:19.680 --> 00:52:25.520
else has already written that I want
to borrow instead of actually coding.

00:52:25.810 --> 00:52:28.440
So that's one of the things that
I've gotten kind of down on Perl.

00:52:28.540 --> 00:52:30.500
For me,
it's got the highest learning curve.

00:52:30.560 --> 00:52:32.660
Item number two up there is
entirely personal opinion,

00:52:32.660 --> 00:52:34.740
but for me,
it's got the highest learning curve.

00:52:34.790 --> 00:52:37.000
It might have the greatest
rewards when you're done,

00:52:37.060 --> 00:52:40.290
but for me, it's got the highest learning
curve to get into there.

00:52:40.910 --> 00:52:42.240
Simple Perl script here.

00:52:42.280 --> 00:52:44.720
Just give you something to chew
on when you read the slides.

00:52:44.820 --> 00:52:48.010
Spins off an SSH process, demonizes it.

00:52:48.040 --> 00:52:50.100
It's a nice easy way to demonize things.

00:52:50.100 --> 00:52:51.290
If you want,
I'm just kind of running in the

00:52:51.350 --> 00:52:52.360
background but always there.

00:52:52.360 --> 00:52:54.440
I wasn't able to do this
very easily with shell,

00:52:54.440 --> 00:52:56.630
so this is something that
I had to do with Perl.

00:52:56.630 --> 00:52:59.960
I was actually calling this
from an AppleScript Studio app

00:52:59.960 --> 00:53:03.710
that was using shell to call a
Perl command and then come back.

00:53:03.710 --> 00:53:06.510
And it wasn't just because I could.

00:53:06.510 --> 00:53:09.020
I actually had to for the time.

00:53:09.700 --> 00:53:13.180
What I want to show you here,
another example,

00:53:13.330 --> 00:53:15.940
This is of a Perl script that
I thought was really cool.

00:53:16.050 --> 00:53:19.980
A friend of mine from Purdue University,
they use this.

00:53:20.850 --> 00:53:24.450
And what this is, it's a login hook.

00:53:24.860 --> 00:53:28.390
And so when you log into a system,
we need to make sure that

00:53:28.400 --> 00:53:31.160
we've got some preferences that
are what we're looking for.

00:53:31.160 --> 00:53:33.990
We want to make sure that you
have mail preferences that work.

00:53:34.170 --> 00:53:38.340
We want to make sure that your Mozilla
defaults are where they should be.

00:53:38.340 --> 00:53:41.740
We want to make sure that you have
the user environment that you want.

00:53:41.760 --> 00:53:45.230
And when they do this,
when they create new users,

00:53:45.230 --> 00:53:48.390
they actually give them preference files.

00:53:50.350 --> 00:53:52.550
All right, they've created their
own preference files.

00:53:52.610 --> 00:53:55.180
There's no app,
there's no Cocoa behind any of that.

00:53:55.220 --> 00:53:58.490
They just create preference
files with the defaults command.

00:53:59.180 --> 00:54:03.640
This script runs and it checks for
the presence of that pref file.

00:54:03.690 --> 00:54:05.710
It reads out of the defaults database.

00:54:05.780 --> 00:54:08.220
It gathers whether something
has been done or not before.

00:54:08.220 --> 00:54:11.160
And then we have a bunch of
sub-processes that hinge off that.

00:54:11.190 --> 00:54:13.330
If the user's already
been set up for mail,

00:54:13.330 --> 00:54:17.560
we don't have to worry about that because
there's already that flag and that plist.

00:54:18.350 --> 00:54:22.460
When they deploy a user,
they can preset the plist and they

00:54:22.460 --> 00:54:24.970
can say this user doesn't use mail.

00:54:24.970 --> 00:54:29.000
This user doesn't use a
network home folder for music.

00:54:29.000 --> 00:54:32.500
This user doesn't use Mozilla,
so chop that off.

00:54:32.660 --> 00:54:36.990
And now when this login hook runs,
we can customize the login environment

00:54:36.990 --> 00:54:41.170
for individual users based upon what
we want them to have or not have.

00:54:42.570 --> 00:54:44.540
If we wanted to even
improve this a little more,

00:54:44.600 --> 00:54:47.000
we could pull this off a website
or something else like that.

00:54:47.130 --> 00:54:50.490
So what this is using,
it's using the defaults command.

00:54:50.920 --> 00:54:54.890
And it's just a shell command
or a system call that Perl is

00:54:54.890 --> 00:54:56.960
using to go in from in there.

00:54:56.970 --> 00:54:59.950
Once we get those variables,
cruise down here towards the bottom and

00:55:00.110 --> 00:55:03.790
we can see that we spawn off all these
and we'll do actions based upon that.

00:55:05.200 --> 00:55:07.300
This is cool.

00:55:07.350 --> 00:55:09.200
Who thought you'd have a
preference file for a shell script?

00:55:09.200 --> 00:55:11.660
Just the frameworks that we
already have from within Apple.

00:55:11.750 --> 00:55:15.200
We can use these command line commands
that we've already been using.

00:55:15.200 --> 00:55:18.200
Who's used defaults just on
its own just to find stuff?

00:55:18.230 --> 00:55:20.150
Defaults is a cool command.

00:55:20.150 --> 00:55:23.310
Defaults really opens up the
abilities that you have out there.

00:55:23.340 --> 00:55:27.210
I use defaults to massage apps
all the time and login hooks.

00:55:27.210 --> 00:55:31.650
If an app I don't know,
iChat wants to check your bandwidth when

00:55:31.680 --> 00:55:34.680
it goes into a multi-video conference.

00:55:35.200 --> 00:55:38.700
I don't want that to happen on behind
a firewall on some other stuff.

00:55:38.740 --> 00:55:40.130
I'm really worried about security.

00:55:40.200 --> 00:55:43.190
Now I can use defaults to precede that.

00:55:43.310 --> 00:55:46.190
And I can override and I can put
that into the preference file.

00:55:46.330 --> 00:55:48.970
Here we're using it the other way,
which I think is even cooler,

00:55:48.970 --> 00:55:52.200
where we're creating a preference
file and we're pulling from that.

00:55:52.200 --> 00:55:55.180
Back to the slides if we could.

00:55:57.230 --> 00:56:00.100
So a little Perl script
you can get up from there.

00:56:00.100 --> 00:56:01.570
All right.

00:56:01.600 --> 00:56:03.070
Python.

00:56:03.240 --> 00:56:06.120
Honest to God,
named after the comedy group.

00:56:06.160 --> 00:56:07.840
No bones about it.

00:56:07.840 --> 00:56:08.580
It's cool language.

00:56:08.780 --> 00:56:13.730
Any language that's named after
Monty Python is all right by me.

00:56:13.980 --> 00:56:19.270
Mostly because it opens up a wealth
of opportunities for naming things.

00:56:22.540 --> 00:56:24.370
I think all the good script
names have been taken,

00:56:24.430 --> 00:56:27.700
so now we're just into the realm
of lunacy as we go through things.

00:56:27.800 --> 00:56:31.390
So definitely Python contributes to that,
and I like that.

00:56:31.580 --> 00:56:33.910
Python is on most UNIX systems,
the newer ones.

00:56:34.080 --> 00:56:38.300
It's a newer language, growing a lot,
very active developer community.

00:56:38.300 --> 00:56:41.790
Some people have
defected from Perl to it.

00:56:42.070 --> 00:56:43.060
Other people like it better.

00:56:43.060 --> 00:56:46.540
Some people start with Python because
it's a little easier to get into.

00:56:46.540 --> 00:56:48.930
Very easy to read.

00:56:49.000 --> 00:56:51.850
It's very easy to go back to code
that you've developed before,

00:56:51.940 --> 00:56:53.890
even if you were bad
and didn't comment it.

00:56:56.840 --> 00:56:59.240
Python is on most UNIX scripts,
the newer ones.

00:56:59.240 --> 00:57:02.840
It's a newer language, growing a lot,
very active developer community.

00:57:02.930 --> 00:57:05.880
Some people start with
Python because it's a newer language,

00:57:05.880 --> 00:57:08.680
growing a lot,
very active developer community.

00:57:09.760 --> 00:57:11.910
Python disadvantages.

00:57:11.920 --> 00:57:14.000
It's not still installed
by default on some systems,

00:57:14.000 --> 00:57:17.200
so you've got to be careful
when you're deploying.

00:57:17.200 --> 00:57:18.210
Some people still think it's new.

00:57:18.210 --> 00:57:21.190
I think it's 10 years or so
that Python's been around.

00:57:21.270 --> 00:57:25.900
But in the world of UNIX,
that's just a little baby still.

00:57:25.900 --> 00:57:27.690
So not quite as easy as
shell or AppleScript,

00:57:27.790 --> 00:57:30.990
so I wouldn't necessarily consider
it your first entry into scripting if

00:57:30.990 --> 00:57:34.720
you wanted to get your feet just kind
of dangling in and get a little wet.

00:57:34.770 --> 00:57:36.940
Here's a real quick simple Python script.

00:57:36.940 --> 00:57:39.560
We import an OS module so
that we can use OS calls,

00:57:39.560 --> 00:57:43.270
and then we're going to actually
do a system call to a disk util,

00:57:43.330 --> 00:57:45.430
and we're going to list out drives.

00:57:45.500 --> 00:57:47.150
And then we would process this from here.

00:57:47.160 --> 00:57:49.840
So you can see it's still
pretty easy to understand.

00:57:49.840 --> 00:57:51.820
It's not nearly as
stupid simple as shell,

00:57:51.860 --> 00:57:54.530
and it's not nearly as
English syntax as AppleScript.

00:57:54.530 --> 00:57:59.550
So it's kind of a little more towards
the programming language side of things,

00:57:59.550 --> 00:58:03.840
but that does lend itself
to other opportunities.

00:58:05.010 --> 00:58:07.290
If it's a Python script,
you gotta call it something cute.

00:58:07.420 --> 00:58:11.200
So now we have Shrubbery
Soup software update system.

00:58:11.200 --> 00:58:12.140
This is written in Python.

00:58:12.140 --> 00:58:14.290
I'm gonna bring Andrina Kelly up here.

00:58:14.390 --> 00:58:16.090
Andrina helps also with the site.

00:58:16.170 --> 00:58:18.860
If you've read some of the articles,
you might see some from her.

00:58:19.000 --> 00:58:20.520
All right, so like I said,
I called her up about a month

00:58:20.590 --> 00:58:23.010
and a half ago and I said,
"Andrina,

00:58:24.610 --> 00:58:26.630
We've got to do some
Python in this session.

00:58:26.750 --> 00:58:27.580
Python's cool.

00:58:27.620 --> 00:58:29.380
It's becoming exciting and new.

00:58:29.410 --> 00:58:30.800
I don't know squat about Python.

00:58:30.820 --> 00:58:32.020
I need somebody that does.

00:58:32.170 --> 00:58:34.640
And I think, Andrina, that's you.

00:58:34.760 --> 00:58:36.440
So very gracious, very wonderful.

00:58:36.530 --> 00:58:39.270
She was able to go through and
she was able to start from scratch

00:58:39.270 --> 00:58:40.810
with Python and create something.

00:58:40.890 --> 00:58:42.990
So I hand it over to Andrina.

00:58:46.600 --> 00:58:47.360
All right.

00:58:47.360 --> 00:58:49.360
Thanks a lot, Joel.

00:58:49.360 --> 00:58:52.200
So what we've got here is--
you'll have to excuse my voice.

00:58:52.200 --> 00:58:56.600
I'm losing my voice today,
but we'll carry on.

00:58:56.720 --> 00:58:58.600
The other scripts,
if we'd seen them earlier on today,

00:58:58.600 --> 00:59:00.600
they tend to use curl.

00:59:00.600 --> 00:59:01.600
They're HTTP.

00:59:01.600 --> 00:59:03.160
I want to do something
completely different,

00:59:03.160 --> 00:59:04.890
seeing as, you know,
I had to learn something

00:59:04.890 --> 00:59:05.600
completely different.

00:59:05.600 --> 00:59:08.600
So we're going to use FTP instead.

00:59:08.600 --> 00:59:11.670
Now, the other thing about this
script is it allows us to

00:59:11.730 --> 00:59:13.600
pass a host name at execution.

00:59:13.690 --> 00:59:15.600
So generally,
this script can be used anywhere.

00:59:15.600 --> 00:59:17.530
You're not going to need to
modify the body of this script

00:59:17.610 --> 00:59:19.600
if you're going to be using it.

00:59:19.600 --> 00:59:22.600
You put in your name of your
FTP server you want to connect to,

00:59:22.600 --> 00:59:26.600
and then it's going to be interactive
throughout to actually download

00:59:26.600 --> 00:59:28.410
the things from your FTP server.

00:59:28.600 --> 00:59:32.600
So we'll just go through
this nice and quickly.

00:59:32.820 --> 00:59:36.470
The first part we've got here is
importing some of our modules.

00:59:36.600 --> 00:59:38.500
There's a selection of
things we're importing.

00:59:38.600 --> 00:59:42.600
We can import an entire module
or just a portion of our module,

00:59:42.600 --> 00:59:43.600
like we're doing with the FTP here.

00:59:43.600 --> 00:59:44.900
Thank you.

00:59:46.010 --> 00:59:47.340
We've created our own definition.

00:59:47.340 --> 00:59:51.240
I've created this just to make the
actual download portion easier later on.

00:59:51.240 --> 00:59:54.140
I'm not going to get into
this in much detail right now,

00:59:54.140 --> 00:59:58.760
but you'll see it further down and I'll
explain what we're doing down there.

00:59:58.770 --> 01:00:01.350
Now this arguments part here.

01:00:01.570 --> 01:00:03.900
The argument is what we passed
when we executed the script.

01:00:03.900 --> 01:00:07.200
So our argument is our host name.

01:00:07.230 --> 01:00:09.870
You can do it to your local host if you
just want to play with it and create

01:00:09.940 --> 01:00:11.500
an FTP server on your local machine.

01:00:11.500 --> 01:00:13.960
Or it could be halfway across the world.

01:00:14.240 --> 01:00:14.940
It's an FTP server.

01:00:14.940 --> 01:00:17.410
You can do whatever you want.

01:00:17.470 --> 01:00:23.090
And then we're going to keep on setting
our FTP to keep our host name in there.

01:00:23.140 --> 01:00:24.960
And we're going to
connect to our FTP server.

01:00:25.150 --> 01:00:26.970
This is the first part.

01:00:27.840 --> 01:00:30.620
Now, this is an anonymous login
that I've created here.

01:00:30.910 --> 01:00:33.690
You can pass arguments one,
arguments two, if you wanted to use a

01:00:33.690 --> 01:00:34.700
username and password.

01:00:34.890 --> 01:00:38.130
Just for simplicity,
we're going to go anonymous.

01:00:40.320 --> 01:00:42.060
And the next thing, of course,
you want to know what's

01:00:42.060 --> 01:00:43.610
on your FTP server.

01:00:43.650 --> 01:00:45.260
There are other commands within FTP.

01:00:45.260 --> 01:00:46.890
You can change directories.

01:00:47.030 --> 01:00:50.110
But we're just going to be looking at
the actual root of our FTP server here.

01:00:50.220 --> 01:00:51.430
And we're going to retrieve the lines.

01:00:51.430 --> 01:00:54.630
So we're just going to get
a list of everything that is

01:00:54.630 --> 01:00:56.290
present on our FTP server.

01:00:56.550 --> 01:00:59.430
And this is where we go interactive.

01:01:01.950 --> 01:01:05.140
Now, for the user, they need to know what
we're going to be doing.

01:01:05.140 --> 01:01:06.310
Otherwise,
they just get this prompt and they

01:01:06.310 --> 01:01:07.300
have no clue what to put in there.

01:01:07.300 --> 01:01:09.880
So we've got a little bit of text
that will spit out at them saying,

01:01:09.880 --> 01:01:13.140
you can only download one file at a time,
but just keep on putting them in.

01:01:13.140 --> 01:01:15.020
And we'll go from there.

01:01:15.020 --> 01:01:17.920
And we start off with our while loop.

01:01:18.040 --> 01:01:24.510
Now, the loop here is an infinite loop,
rather appropriate.

01:01:24.510 --> 01:01:29.990
And it will keep on going until it
reaches a condition which will fail.

01:01:34.200 --> 01:01:39.630
So if we just continue on,
we're just going to start out

01:01:39.630 --> 01:01:42.340
with the try statement here,
and we're going to ignore

01:01:42.340 --> 01:01:43.860
these two if statements.

01:01:43.910 --> 01:01:46.680
So the first thing it's going to do is
it's going to ask us for the file name.

01:01:46.760 --> 01:01:49.540
So it's going to prompt the user again,
enter the name of the

01:01:49.580 --> 01:01:52.660
file you want to download,
and it's going to accept it as raw input.

01:01:52.660 --> 01:01:54.350
So your user's going to
put in the file name,

01:01:54.390 --> 01:01:57.670
and great, it's going to match up with
something on the server,

01:01:57.670 --> 01:01:59.860
and it's going to download it.

01:01:59.860 --> 01:02:03.440
Which brings us down to--

01:02:05.830 --> 01:02:09.980
So this is where we're using
this handle download definition

01:02:09.980 --> 01:02:12.000
that we created earlier.

01:02:12.560 --> 01:02:17.880
So it's just making this a lot
neater and cleaner to read down here.

01:02:17.980 --> 01:02:21.600
There are some strangenesses when
I was trying to do this interactively.

01:02:21.780 --> 01:02:24.890
It just wasn't working very nicely,
and when I created that definition,

01:02:24.890 --> 01:02:28.000
everything went smooth as butter,
so we just kept that in there.

01:02:28.000 --> 01:02:32.060
We're going to close out,
and then because it's a--we're going

01:02:32.060 --> 01:02:34.000
to then use the OS system call.

01:02:34.000 --> 01:02:36.500
It's going to expand the file
that we've just downloaded.

01:02:36.500 --> 01:02:39.000
Everything that we're going to keep on
our FTP server is going to be tarred up.

01:02:39.000 --> 01:02:42.500
If you're going to keep package files
on your FTP server and download them,

01:02:42.500 --> 01:02:45.500
it gets into a right mess because,
of course, the package is folders.

01:02:45.500 --> 01:02:47.760
You all know this, so it's fine.

01:02:48.660 --> 01:02:53.060
And we're going to expand it and
get rid of the tar file because

01:02:53.060 --> 01:02:55.040
we don't want mess left around.

01:02:55.180 --> 01:02:57.920
And being in the spirit
of loop back to beginning.

01:02:57.920 --> 01:03:00.910
And it's going to say, hey,
what do you want to do now?

01:03:01.700 --> 01:03:07.210
If our user is a very bad typer
and can't type for their life

01:03:07.350 --> 01:03:15.100
and put in the wrong file name,
part of the try clause here

01:03:15.410 --> 01:03:17.220
is also an accept statement.

01:03:17.310 --> 01:03:20.190
Right down at the very bottom
here is our accept and just

01:03:20.190 --> 01:03:24.190
reminding our user politely that
they need to learn how to type.

01:03:28.580 --> 01:03:31.940
So once we've reminded our user that they
can't type and they need to try again,

01:03:31.940 --> 01:03:33.010
we're going to go back.

01:03:33.010 --> 01:03:35.310
And this is where we can
run into our if statements.

01:03:35.310 --> 01:03:37.860
If they've forgotten by this point,
or it's rolled off the

01:03:37.860 --> 01:03:40.420
top of their screen,
what their list of files are that they

01:03:40.420 --> 01:03:43.540
can collect from their FTP server,
you can just simply enter in list.

01:03:43.570 --> 01:03:46.550
This is the same command that we had
back here at the beginning when we

01:03:46.550 --> 01:03:48.280
were getting our first initial list.

01:03:48.320 --> 01:03:51.040
We're just repeating it,
but just so that it can be interactive

01:03:51.040 --> 01:03:52.760
with the user so they can be reminded.

01:03:52.760 --> 01:03:55.670
And once they've got everything,
they're going to enter queue.

01:03:55.670 --> 01:03:58.470
That'll quit out of the loop,
or enter queue.

01:03:58.510 --> 01:04:01.560
And not quite out of the loop yet,
but it'll actually quit

01:04:01.560 --> 01:04:03.170
out of the FTP server.

01:04:03.270 --> 01:04:05.740
It'll close the FTP connection.

01:04:05.920 --> 01:04:10.190
And here we're going to get
into the OS System Call now.

01:04:10.270 --> 01:04:13.240
I've used OS System Call for a
couple things here that could be

01:04:13.240 --> 01:04:15.040
done with other Python commands.

01:04:15.300 --> 01:04:18.560
I've done this just because I started
learning Python a month and a half ago.

01:04:18.560 --> 01:04:20.660
Obviously,
I'm going to go back to this once

01:04:20.660 --> 01:04:22.270
I've had a bit more experience.

01:04:22.270 --> 01:04:24.180
I'm going to go back
and change things up,

01:04:24.270 --> 01:04:27.340
make it better,
throw some more Python stuff in there.

01:04:28.340 --> 01:04:32.840
But this particular one is going to
be finding in the local directory,

01:04:32.840 --> 01:04:35.820
it's going to find everything with
the--anything that we've downloaded

01:04:35.820 --> 01:04:37.880
and expanded with the .pkg on the end.

01:04:37.900 --> 01:04:39.890
And it's going to output
it to a file for us.

01:04:39.900 --> 01:04:43.150
And this OS.SystemCall here is
always going to have to stay in

01:04:43.150 --> 01:04:48.900
OS.SystemCall because there's no
such thing as an installer in Python.

01:04:49.030 --> 01:04:53.420
So we're going to read for each line that
we've just created in that PacMan file,

01:04:53.550 --> 01:04:57.190
and we're going to install from there.

01:04:57.490 --> 01:04:59.470
If you're used to using
installer and command line,

01:04:59.490 --> 01:05:01.790
you're going to know that
installer needs to run as root.

01:05:01.790 --> 01:05:04.030
We could have put a root check
in at the beginning of this.

01:05:04.030 --> 01:05:04.880
I haven't done it.

01:05:04.880 --> 01:05:07.090
And up to this point,
you actually don't need to be root.

01:05:07.210 --> 01:05:09.220
So you can just go and
download all these packages.

01:05:09.230 --> 01:05:11.000
And at this point,
it'll just error out of the

01:05:11.100 --> 01:05:13.550
script and say you don't have
the right permissions to do this.

01:05:13.580 --> 01:05:15.310
Your packages are still
going to be there.

01:05:15.320 --> 01:05:17.100
They're still going to
be ready to install.

01:05:17.120 --> 01:05:20.240
And then you can either come and do it
yourself later or just leave them there.

01:05:20.330 --> 01:05:22.030
Or even if you just
wanted to bring them down,

01:05:22.030 --> 01:05:24.460
but you actually wanted to
install them on another machine,

01:05:24.460 --> 01:05:27.380
you can just go and
download all these packages.

01:05:27.400 --> 01:05:33.810
just don't get to do it.

01:05:37.540 --> 01:05:40.800
And once you've done that,
you've made some strawberry soup.

01:05:40.800 --> 01:05:41.250
All is good.

01:05:41.260 --> 01:05:43.800
You've got some excellent
culinary progress.

01:05:43.850 --> 01:05:45.890
And we're going to break out of the loop.

01:05:45.970 --> 01:05:48.870
And this is what puts
this out of the script.

01:05:48.870 --> 01:05:50.820
And that's about it.

01:05:54.000 --> 01:06:01.820
Hopefully we all run out of names because
we're making so many good scripts,

01:06:01.820 --> 01:06:02.520
right?

01:06:02.520 --> 01:06:03.500
All the good names are taken.

01:06:03.500 --> 01:06:04.500
I'm just going to tell you that now.

01:06:04.500 --> 01:06:06.760
All the good script names are taken.

01:06:06.760 --> 01:06:08.920
You've got to go with the silly stuff.

01:06:08.920 --> 01:06:09.960
You'll be okay.

01:06:09.960 --> 01:06:12.820
A couple of links for more information,
and then we might do a little

01:06:12.820 --> 01:06:15.640
bit of wrap-up here and hopefully
maybe take one or two questions,

01:06:15.640 --> 01:06:17.980
but we're really,
really running tight on time.

01:06:19.800 --> 01:06:21.770
So, this is the WDC site.

01:06:21.800 --> 01:06:24.760
You've seen this before.

01:06:24.790 --> 01:06:25.370
Okay.