WEBVTT

00:00:00.500 --> 00:01:22.000
[Transcript missing]

00:01:22.470 --> 00:01:23.330
Thanks everybody.

00:01:23.400 --> 00:01:24.630
Good to see everybody here today.

00:01:24.630 --> 00:01:28.720
I'm here to talk to you about Subversion,
but first, since I'm not an Apple person,

00:01:28.720 --> 00:01:31.130
I'm going to go ahead and tell
you a little bit about who I am.

00:01:31.150 --> 00:01:34.960
I'm a Subversion developer
employed by Collabnet,

00:01:35.020 --> 00:01:38.390
who is a company funding commercial
development of Subversion.

00:01:38.400 --> 00:01:42.390
I'm also a member of the
Apache Software Foundation that is

00:01:42.490 --> 00:01:47.400
growing day by day and picking up
new sorts of open source projects.

00:01:47.400 --> 00:01:51.600
I'm also a co-author of the book called
Version Control with Subversion that

00:01:51.600 --> 00:01:54.700
O'Reilly has just informed me they've
sold out of out there in the lobby,

00:01:54.700 --> 00:01:56.940
which is great because I'm glad
somebody is selling the book.

00:01:57.000 --> 00:02:01.000
It's also available free on
the Subversion book website.

00:02:01.000 --> 00:02:05.340
It's the official reference
documentation for Subversion.

00:02:05.340 --> 00:02:08.270
Although there are now, I think,
four or even five separate versions.

00:02:08.360 --> 00:02:11.040
I used to work for Apple.

00:02:11.040 --> 00:02:12.980
I worked for Apple up until
about a year and a half ago,

00:02:12.980 --> 00:02:16.330
but even while I worked for Apple,
I was very involved with open source,

00:02:16.340 --> 00:02:18.340
specifically Subversion.

00:02:18.340 --> 00:02:22.340
I'm also a long-time Next aficionado.

00:02:22.340 --> 00:02:23.340
I knew somebody.

00:02:23.410 --> 00:02:26.340
I knew I got a woo-hoo
out of somebody for that.

00:02:26.450 --> 00:02:28.910
Let's talk a little bit about
what I'm hoping you'll learn today

00:02:28.910 --> 00:02:30.260
and what we're going to cover.

00:02:30.350 --> 00:02:32.330
We're going to cover a
lot of Subversion basics.

00:02:32.340 --> 00:02:35.340
I'd like to do a quick
Q&A of the room here.

00:02:35.340 --> 00:02:38.280
Who here has used Subversion?

00:02:38.300 --> 00:02:39.280
Oh, this is so great.

00:02:39.280 --> 00:02:40.280
Okay, thanks.

00:02:40.400 --> 00:02:42.230
Who here has used CVS as well?

00:02:42.270 --> 00:02:43.280
Okay.

00:02:43.280 --> 00:02:44.220
I'm so sorry.

00:02:44.320 --> 00:02:46.810
Really.

00:02:47.040 --> 00:02:49.820
We're going to cover a lot of the basic
stuff that you cover with Subversion.

00:02:49.820 --> 00:02:52.400
I'm really glad to see so many people
raise their hand and use Subversion

00:02:52.400 --> 00:02:56.080
because I came last year to the
open source Birds of a Feather.

00:02:56.080 --> 00:02:58.160
I don't know if anyone
here was at that session.

00:02:58.160 --> 00:03:01.170
And there was a lot of people there
who had heard about Subversion,

00:03:01.210 --> 00:03:02.690
but very few people had used it.

00:03:02.700 --> 00:03:05.220
And now I think we're at
almost 50% of the room.

00:03:05.480 --> 00:03:08.820
So we're going to cover the basics and
we're going to talk a little bit about

00:03:08.960 --> 00:03:11.060
some of the Mac OS X specific goodies.

00:03:11.060 --> 00:03:14.560
So what are some of the things
that you can help find Subversion

00:03:14.910 --> 00:03:17.180
will help you do on Mac OS X.

00:03:17.180 --> 00:03:20.010
And we're also going to cover
actually some of the things that

00:03:20.100 --> 00:03:23.280
Subversion won't help you do on
Mac OS X so that those don't bite you.

00:03:23.610 --> 00:03:27.170
We're going to cover some Subversion
tips for all you CVS users out there.

00:03:27.200 --> 00:03:30.800
So Subversion,
while it's designed with CVS's

00:03:30.800 --> 00:03:34.150
development model in mind,
as well as mirroring CVS's

00:03:34.150 --> 00:03:37.920
commands to a great extent,
Subversion does not, however,

00:03:37.930 --> 00:03:39.660
map one-to-one with CVS.

00:03:39.660 --> 00:03:45.000
There are some small little gotchas
that we're going to hopefully touch on.

00:03:45.810 --> 00:03:47.790
But first,
a few important Subversion tips.

00:03:47.870 --> 00:03:51.700
For those of you,
if anyone here has used a locking model,

00:03:51.700 --> 00:03:54.100
or a lock, modify,
unlock version control system,

00:03:54.100 --> 00:03:56.380
Subversion uses the copy, modify,
merge model.

00:03:56.380 --> 00:03:58.870
Those of you who know
CVS are familiar with that.

00:03:59.000 --> 00:04:01.140
It's sort of a melee type of situation.

00:04:01.140 --> 00:04:03.870
Everybody modifies a file,
and as long as the version control

00:04:03.870 --> 00:04:06.860
system can figure out who changed what,
and there's no conflicts,

00:04:06.940 --> 00:04:09.480
it'll merge it all in,
and everybody's sort of happy.

00:04:11.220 --> 00:04:15.110
And the mechanism you use for
determining who's working on something

00:04:15.110 --> 00:04:18.140
is human-to-human communication,
as opposed to you locking a

00:04:18.140 --> 00:04:21.010
file and going on vacation,
and someone else having to call

00:04:21.010 --> 00:04:22.850
the administrator to unlock it.

00:04:22.980 --> 00:04:26.220
However, Subversion 1.2,
which just fresh out the

00:04:26.220 --> 00:04:29.230
door about two weeks ago,
now supports file locking,

00:04:29.360 --> 00:04:32.730
also known as reserved checkouts,
which is a great thing to use

00:04:32.730 --> 00:04:36.320
on those Xcode project files,
perhaps maybe some of your JPEGs or

00:04:36.320 --> 00:04:38.450
binaries or that sort of thing.

00:04:38.460 --> 00:04:42.360
So, another thing,
and this is aimed specifically

00:04:42.360 --> 00:04:45.330
at you CVS users out there,
is that instead of

00:04:45.580 --> 00:04:48.380
file-based revision numbers,
Subversion has repository-wide

00:04:48.380 --> 00:04:49.380
revision numbers.

00:04:49.380 --> 00:04:51.540
I think this takes a
little bit getting used to,

00:04:51.540 --> 00:04:53.940
because you have the one file over
here that you've only edited once,

00:04:53.940 --> 00:04:56.260
and its revision number is 8,917.

00:04:56.260 --> 00:04:59.200
That doesn't mean it's
changed 8,917 times,

00:04:59.200 --> 00:05:02.010
it just means that that's
the repository number.

00:05:02.030 --> 00:05:04.880
There's a lot of advantages to that, too,
and maybe I'll touch on

00:05:04.920 --> 00:05:06.140
some of those later on.

00:05:06.390 --> 00:05:08.330
Lastly, SVN Help is your friend.

00:05:08.340 --> 00:05:12.630
SVN Help is,
not an IQ test like CVS Help was.

00:05:12.670 --> 00:05:16.280
CVS Help was just a fantastic utility.

00:05:16.280 --> 00:05:18.070
In fact,
I had to run CVS Help to figure out

00:05:18.070 --> 00:05:20.610
how to use CVS Help to find out what
the command was to do something.

00:05:20.740 --> 00:05:24.500
So, SVN Help is a lot friendlier
and a lot easier to use,

00:05:24.640 --> 00:05:27.200
and it's good to remember
because it's obviously always

00:05:27.200 --> 00:05:29.370
there at your fingertips.

00:05:30.400 --> 00:08:27.500
[Transcript missing]

00:08:27.640 --> 00:08:29.160
Working with Subversion.

00:08:29.160 --> 00:08:31.130
Now this is the part we're
going to concentrate on more,

00:08:31.130 --> 00:08:32.890
it's the daily work cycle,
which is where you

00:08:32.890 --> 00:08:35.050
come in in the morning,
you update, you modify files,

00:08:35.050 --> 00:08:36.760
and you delete, and that sort of thing.

00:08:36.760 --> 00:08:41.120
We're also going to cover
working with a static website.

00:08:41.120 --> 00:08:44.400
So a lot of people have used
Subversion for source code,

00:08:44.430 --> 00:08:48.180
and what we're going to do is an
example of taking a small website

00:08:48.190 --> 00:08:52.140
you might have of static pages,
or it could be PHP documents,

00:08:52.140 --> 00:08:56.380
that sort of thing, PHP scripts,
and put those in Subversion.

00:08:57.480 --> 00:09:00.660
Lastly,
using Subversion in OS config directory.

00:09:00.660 --> 00:09:03.660
We're going to talk a little bit about,
we have an example where we'll

00:09:03.730 --> 00:09:06.300
show you how to put your Etsy
under version control without

00:09:06.300 --> 00:09:07.920
blowing your machine to bits.

00:09:07.920 --> 00:09:10.930
And once I'm done with that,
Chris is going to get back

00:09:10.930 --> 00:09:13.600
up and show us a little bit,
cover a little bit of

00:09:13.600 --> 00:09:15.960
Subversion's Xcode integration.

00:09:15.960 --> 00:09:20.970
Now this is a hands-on presentation,
so don't hesitate to raise your hand

00:09:20.970 --> 00:09:23.450
and wave at me if I get stuck here.

00:09:23.520 --> 00:09:25.740
While I'm going through
what we're doing here,

00:09:25.770 --> 00:09:29.140
Fred's going to step up and... sort
of go through the same hands-on

00:09:29.160 --> 00:09:32.270
type of things that some of you
who have your laptops out and are

00:09:32.340 --> 00:09:34.100
not surfing the web will be doing.

00:09:36.020 --> 00:09:37.360
So let's do just a very quick review.

00:09:37.360 --> 00:09:39.130
I've got a couple slides
here about Subversion itself.

00:09:39.280 --> 00:09:42.750
Subversion's mission statement,
which we came up with back in 2000,

00:09:42.760 --> 00:09:46.890
very simple, compelling replacement for
CVS in the open source community.

00:09:46.890 --> 00:09:48.220
Well, done.

00:09:48.220 --> 00:09:50.420
I'm so happy to get up here
and say that's done instead

00:09:50.420 --> 00:09:51.730
of saying it's coming soon.

00:09:53.760 --> 00:09:56.030
Not only has it been a
compelling replacement,

00:09:56.080 --> 00:10:00.560
but Subversion's turned out to be way
more successful than we ever expected.

00:10:00.560 --> 00:10:02.970
We're shooting to provide
a compelling replacement,

00:10:03.020 --> 00:10:05.060
but now that we have,
we really didn't know what

00:10:05.060 --> 00:10:06.370
we were going to do about it.

00:10:08.200 --> 00:10:09.840
Public Subversion DAV servers.

00:10:09.850 --> 00:10:12.190
This is one of my favorite
little statistics.

00:10:12.190 --> 00:10:15.220
There's a website out there called
Security Space that monitors

00:10:15.360 --> 00:10:18.390
Apache modules across the internet,
sort of like the NetCraft

00:10:18.390 --> 00:10:20.250
version of Apache modules.

00:10:21.020 --> 00:10:25.300
In February of 2004,
there were 1307 Subversion

00:10:25.390 --> 00:10:26.550
servers existed.

00:10:26.600 --> 00:10:30.760
And I use this date in particular because
that is the date Subversion hit 1.0.

00:10:31.890 --> 00:10:34.220
Since then,
we've seen a lot more Subversion

00:10:34.220 --> 00:10:35.260
DAV servers out there.

00:10:35.260 --> 00:10:39.820
Now, mind you, this is only DAV servers,
and there's another network way to

00:10:39.840 --> 00:10:42.680
access your Subversion repository,
which we'll talk about in a bit.

00:10:44.140 --> 00:10:45.740
And I'm very happy to see this number.

00:10:45.760 --> 00:10:48.150
This also doesn't include
anything behind the firewall,

00:10:48.240 --> 00:10:49.690
local repositories people use.

00:10:50.670 --> 00:10:52.760
So what this tells me is that
Subversion's catching on pretty well.

00:10:53.760 --> 00:10:55.760
So now what are we going to do?

00:10:55.760 --> 00:10:57.760
We didn't have any exit strategy.

00:10:57.760 --> 00:11:02.500
We sort of subverted CVS and people
are switching over from CVS every day.

00:11:04.010 --> 00:11:06.620
Our goal now is to develop new features
to make it even more compelling.

00:11:08.360 --> 00:11:11.190
We just finished locking feature,
which is something a lot of

00:11:11.330 --> 00:11:12.640
people have been asking for.

00:11:14.110 --> 00:11:16.350
A lot of the poor souls, poor,
poor souls who are stuck using

00:11:16.350 --> 00:11:18.700
Visual Source Safe have gladly
come over to Subversion.

00:11:21.000 --> 00:11:21.910
Thank you.

00:11:22.140 --> 00:11:26.950
Log Message Templates is one of the
few CVS features that we do not have,

00:11:26.950 --> 00:11:29.600
but we're working on that right now.

00:11:29.600 --> 00:11:32.180
We're working on doing it right.

00:11:32.180 --> 00:11:33.190
Atomic Renames.

00:11:33.260 --> 00:11:37.550
Subversion provides rename capabilities,
copy, move, that sort of thing,

00:11:37.550 --> 00:11:40.860
but it's not done in an atomic fashion,
which gives you a little

00:11:41.050 --> 00:11:44.190
bit of difficulty when doing
some sophisticated merges.

00:11:44.190 --> 00:11:46.230
So we're trying to improve that.

00:11:46.410 --> 00:11:49.000
And lastly, sophisticated merge tracking.

00:11:49.000 --> 00:11:52.390
Subversion's branching and
merging is already miles ahead

00:11:52.390 --> 00:11:54.260
of what you had to do with CVS.

00:11:54.260 --> 00:11:56.770
In fact,
I know many people who never branched

00:11:56.820 --> 00:11:58.800
in CVS because it was too painful.

00:11:58.800 --> 00:12:03.240
I know several people who copied
their whole repository to a separate

00:12:03.240 --> 00:12:07.880
repository rather than having to
figure out how to do a branch in CVS.

00:12:08.160 --> 00:12:10.700
We're also helping developers
doing tool integration.

00:12:10.740 --> 00:12:14.530
Now, as Chris mentioned earlier,
Xcode supports Subversion,

00:12:14.650 --> 00:12:19.220
and I'm very happy to say that Apple is
the very first third-party IDE that

00:12:19.220 --> 00:12:21.740
claimed full Subversion support.

00:12:21.740 --> 00:12:25.380
So, that's been a real huge win, I think,
for Mac developers.

00:12:25.400 --> 00:12:28.090
And lastly, we're continuing to fix bugs.

00:12:28.100 --> 00:12:30.360
Obviously,
there are things in Subversion that

00:12:30.360 --> 00:12:32.150
need to be fixed and improved upon.

00:12:32.460 --> 00:12:35.920
And we're working on performance,
scalability, and reliability.

00:12:35.920 --> 00:12:39.760
Subversion is faster than
CVS in a lot of areas,

00:12:39.760 --> 00:12:41.560
but it's slower than CVS in other areas.

00:12:41.560 --> 00:12:45.200
And that has to do with Subversion,
because Subversion is doing so

00:12:45.200 --> 00:12:46.990
much more than CVS was doing.

00:12:47.000 --> 00:12:49.920
We're remembering a whole lot of
things that CVS just gladly forgot.

00:12:49.920 --> 00:12:54.640
So, if you're going to follow along,
we're going to get started now,

00:12:54.640 --> 00:12:59.240
and Fred's going to come up here
and drive the sort of demo server.

00:13:00.600 --> 00:15:39.300
[Transcript missing]

00:15:39.610 --> 00:15:42.960
So, we've got our path set up,
Subversion's in there.

00:15:42.970 --> 00:15:45.060
The first thing we're gonna
do is create a new repository

00:15:45.460 --> 00:15:47.100
that we're gonna work in today.

00:15:47.100 --> 00:15:49.520
We're only gonna create one repository.

00:15:49.530 --> 00:15:52.560
Now Subversion, as of 1.1,
has two different repository

00:15:52.610 --> 00:15:55.140
backends where we store our,
your data.

00:15:55.150 --> 00:15:57.560
The first is the
Berkeley database backend,

00:15:57.570 --> 00:15:59.720
and the second one is called FSFS.

00:15:59.910 --> 00:16:02.540
Berkeley database uses
Berkeley database files.

00:16:02.550 --> 00:16:05.700
FSFS uses just flat file system files.

00:16:05.700 --> 00:16:09.260
There's no dependencies on
any sort of database software.

00:16:09.280 --> 00:16:12.830
It works fine over NFS,
as well as your local disk.

00:16:12.900 --> 00:16:16.900
Now I recommend FSFS on
Mac OS X for one reason,

00:16:16.900 --> 00:16:20.730
and that reason is because,
actually for two reasons.

00:16:20.790 --> 00:16:23.150
The first reason is that we've
had some problems earlier when

00:16:23.150 --> 00:16:27.200
Subversion first hit 1.0 with
Berkeley DB stability on Mac OS X.

00:16:27.200 --> 00:16:30.000
Some people had some
corrupted repositories.

00:16:30.000 --> 00:16:34.540
Secondly,
is that the FSFS implementation is

00:16:34.540 --> 00:16:36.920
the default as of Subversion 1.2.

00:16:36.940 --> 00:16:38.920
So, it's much simpler.

00:16:38.920 --> 00:16:40.140
There's less moving parts.

00:16:40.140 --> 00:16:43.480
It's just got flat files,
and it's easier to rsync and

00:16:43.480 --> 00:16:45.450
backup and that sort of thing.

00:16:45.710 --> 00:16:47.820
So,
choose your repository access method is

00:16:47.860 --> 00:16:51.700
the next thing you have to decide to do
after you've created your repository.

00:16:51.700 --> 00:16:54.700
We're going to use the local
repository access method.

00:16:54.700 --> 00:16:56.700
And so now we're just going
to go ahead and create it.

00:16:56.700 --> 00:16:59.770
Use the svnadmin command.

00:17:00.400 --> 00:17:09.750
Subversion is a very common gotcha.

00:17:09.870 --> 00:17:27.300
People try to feed a URL to the
SVN admin and it only works with paths.

00:17:27.300 --> 00:17:31.970
very common gotcha people try to feed a
URL to the SVN admin and it freaks out.

00:17:32.520 --> 00:17:35.220
There are three access
methods for Subversion.

00:17:35.220 --> 00:17:40.030
We started off with the DAV method,
but then someone who liked the

00:17:40.030 --> 00:17:44.670
CVS Pserver model wrote SVN serve,
which you can run as a daemon.

00:17:44.670 --> 00:17:48.740
It will also do authentication
through SVN serve.

00:17:48.740 --> 00:17:52.410
Or you can run it over SSH,
which is very similar to the

00:17:52.430 --> 00:17:56.780
EXT method that you're probably
familiar with from using CVS.

00:17:57.200 --> 00:19:23.900
[Transcript missing]

00:19:24.800 --> 00:19:26.870
Thank you.

00:19:26.930 --> 00:19:28.160
I didn't actually do that, but thanks.

00:19:28.160 --> 00:19:33.590
The really nice win about that is you get
people who aren't familiar with version

00:19:33.590 --> 00:19:36.070
control or don't want to deal with it,
that sort of thing.

00:19:36.070 --> 00:19:39.060
You just point your browser at
this and save your files over here.

00:19:39.060 --> 00:19:42.450
You have a designer who's not interested
in dealing with version control,

00:19:42.450 --> 00:19:45.210
wants to drop some JPEGs in
or HTML files or whatever not.

00:19:45.310 --> 00:19:48.580
The one caveat with that is that
the way the finder talks to the

00:19:48.580 --> 00:19:50.420
file system is kind of chatty.

00:19:50.450 --> 00:19:53.700
And the finder doesn't know it's
talking to a version control server,

00:19:53.700 --> 00:19:56.320
so one dragged file into
your Subversion repository is

00:19:56.320 --> 00:19:59.420
going to result in like six,
seven, eight commits because of the

00:19:59.420 --> 00:20:01.130
way the finder handles things.

00:20:01.140 --> 00:20:04.220
So it's a little inefficient
from a space point of view,

00:20:04.420 --> 00:20:06.260
but again, it's still a huge win.

00:20:08.370 --> 00:20:09.470
So importing and getting to work.

00:20:09.520 --> 00:20:12.000
So we've created our repository,
now let's stuff something into it.

00:20:12.050 --> 00:20:15.300
Now we're going to start off
by importing a project and

00:20:15.300 --> 00:20:16.380
then check out a working copy.

00:20:16.380 --> 00:20:20.010
And you can also update
an existing working copy.

00:20:20.040 --> 00:20:22.030
This is part of your daily cycle,
like I said.

00:20:22.150 --> 00:20:24.800
Check out is something
you do infrequently.

00:20:24.800 --> 00:20:26.650
In Subversion,
it's a little slower than CVS.

00:20:26.660 --> 00:20:28.880
It's a fair bit slower than CVS,
but it's not something that

00:20:28.940 --> 00:20:30.330
you should be doing every day.

00:20:30.500 --> 00:20:33.600
I know people that do come in
every morning and check out

00:20:33.600 --> 00:20:35.290
a new working copy with CVS.

00:20:35.370 --> 00:20:38.990
That's mostly because they're afraid
that CVS is going to eat their project.

00:20:39.090 --> 00:20:41.840
Fear not,
Subversion will not eat your project.

00:20:41.920 --> 00:20:42.700
Importing.

00:20:42.700 --> 00:20:46.670
So you choose a directory that you
want to import and run the command.

00:20:46.670 --> 00:20:51.210
Now in your 619 Subversion directory,
we've put a little sample directory

00:20:51.320 --> 00:20:55.870
in there that's got some files in it,
and you can go ahead now and import that.

00:20:55.900 --> 00:20:59.600
Now for those of you
who feared CVS import,

00:20:59.600 --> 00:21:00.450
and you know, that's fine.

00:21:00.500 --> 00:21:01.480
That's me.

00:21:01.490 --> 00:21:05.600
I would go through crazy things to
not have to CVS import because I never

00:21:05.600 --> 00:21:07.460
could remember the syntax for it.

00:21:07.560 --> 00:21:09.450
Subversion import is
very straightforward.

00:21:09.500 --> 00:21:12.030
You give it the path you want
to import and you tell it where

00:21:12.030 --> 00:21:13.490
to put it in the repository.

00:21:13.500 --> 00:21:15.500
And you can even put it
in a parent directory.

00:21:15.500 --> 00:21:18.890
There's different options
you can pass along to it.

00:21:20.200 --> 00:21:21.650
Okay.

00:21:21.780 --> 00:21:24.400
So, now we want to check
out our working copy.

00:21:24.530 --> 00:21:25.430
And actually, do you want to back up?

00:21:25.540 --> 00:21:26.620
Do you want to show them your import?

00:21:26.680 --> 00:21:27.560
Did you already import that?

00:21:27.720 --> 00:21:28.080
Yep.

00:21:28.080 --> 00:21:28.390
Okay.

00:21:28.390 --> 00:21:30.850
So, is your screen not cleared yet?

00:21:30.920 --> 00:21:32.920
Can we switch to demo
two for a second here?

00:21:32.920 --> 00:21:35.820
Let's show what Fred's
import went ahead and did.

00:21:35.890 --> 00:21:39.110
You can see that Subversion tells you
of all the different files that it

00:21:39.110 --> 00:21:42.670
went ahead and added to the repository.

00:21:42.720 --> 00:21:45.300
Okay.

00:21:45.340 --> 00:21:47.780
If we could switch back to the slides.

00:21:49.030 --> 00:21:49.650
Thanks.

00:21:49.790 --> 00:21:52.370
Now we're going to go ahead
and check out our working copy.

00:21:52.370 --> 00:21:54.420
Since this is our sort of
first start in this project,

00:21:54.420 --> 00:21:55.780
we're going to use local access.

00:21:55.780 --> 00:21:59.520
We're not going to set up SVN server,
Apache HTTP server.

00:21:59.520 --> 00:22:00.840
There's really not time for that today.

00:22:00.840 --> 00:22:03.020
And this is a project
you're working on yourself.

00:22:03.020 --> 00:22:04.090
So we're going to check it out.

00:22:04.090 --> 00:22:05.600
Notice you're giving it a URL.

00:22:05.600 --> 00:22:06.990
And we're cheating here.

00:22:06.990 --> 00:22:09.440
We're using your dollar
sign home variable.

00:22:09.440 --> 00:22:09.890
Is that?

00:22:09.890 --> 00:22:11.390
Did you say something?

00:22:11.400 --> 00:22:11.690
Okay.

00:22:11.730 --> 00:22:13.960
We're using your dollar sign
home environment variable.

00:22:13.960 --> 00:22:17.230
And we're taking SVN repos and
we're putting it in a working

00:22:17.230 --> 00:22:18.980
directory called SVN WCV.

00:22:19.000 --> 00:22:22.290
So if you go ahead and check that out
and you do an LS of that directory,

00:22:22.300 --> 00:22:26.750
you'll see there's a single
directory in there called sample.

00:22:29.390 --> 00:22:30.920
So that brings us to
the basic work cycle.

00:22:31.020 --> 00:22:34.590
Now this is what you're going to be
doing with Subversion 90% of the time.

00:22:34.690 --> 00:22:39.790
90% of the time is not import,
it's not checkout, it's update, diff,

00:22:39.860 --> 00:22:43.220
add file, remove file,
that sort of thing.

00:22:43.240 --> 00:22:45.800
So you start off your day,
so the basic work cycle,

00:22:45.870 --> 00:22:48.690
you come into the office,
you update your working copy,

00:22:48.750 --> 00:22:50.450
you go out to get a cup of coffee.

00:22:51.240 --> 00:22:53.510
You come back,
you make changes to your project,

00:22:53.570 --> 00:22:57.260
you add files, you delete files,
you add directories, you, in Subversion,

00:22:57.260 --> 00:23:00.000
you copy files, directories,
move them around, that sort of thing.

00:23:00.000 --> 00:23:02.710
You examine what you've done,
and then before you commit and send

00:23:02.770 --> 00:23:05.510
your changes to the repository,
you're going to want to take a look

00:23:05.560 --> 00:23:06.990
at what other people have done.

00:23:07.000 --> 00:23:10.220
So you merge other people's
changes into your working copy,

00:23:10.220 --> 00:23:13.060
check everything out,
make sure it still works.

00:23:13.060 --> 00:23:14.680
I mean,
you really want to make sure that,

00:23:14.890 --> 00:23:17.030
and you might want to build
in case someone's changed some

00:23:17.030 --> 00:23:18.540
files that you're working on.

00:23:18.700 --> 00:23:21.110
And then lastly, you commit your changes
to the repository.

00:23:21.160 --> 00:23:21.990
For other developers.

00:23:22.000 --> 00:23:27.240
Now, some people make this work
cycle a day-long work cycle.

00:23:27.260 --> 00:23:29.350
Some people update in the morning,
and they don't commit anything

00:23:29.350 --> 00:23:30.130
at the end of the day.

00:23:30.140 --> 00:23:31.970
Some people don't commit
anything to the end of the week.

00:23:32.060 --> 00:23:35.890
For best practice with Subversion,
we recommend you choose a small

00:23:35.990 --> 00:23:38.130
granularity for your work cycle.

00:23:38.140 --> 00:23:40.300
Choose a particular feature,
a particular bug fix,

00:23:40.310 --> 00:23:41.380
or that sort of thing.

00:23:41.380 --> 00:23:45.020
And roll through this work
cycle frequently during the day.

00:23:45.020 --> 00:23:47.320
It seems a little onerous at first,
but it's something that you

00:23:47.410 --> 00:23:49.020
definitely get used to pretty quickly.

00:23:49.020 --> 00:23:51.060
And Subversion is optimized.

00:23:51.160 --> 00:23:55.130
Speed-wise for these sort of operations,
and tries to do as much as it can

00:23:55.180 --> 00:23:56.680
without going over the network.

00:23:57.900 --> 00:24:01.470
So, we've got our working copy,
we checked it out, now we're going to

00:24:01.590 --> 00:24:02.400
update our working copy.

00:24:02.400 --> 00:24:04.900
We're going to bring changes
from other developers in.

00:24:04.940 --> 00:24:07.890
Now, right now,
so we see the end of the working copy,

00:24:08.020 --> 00:24:09.970
and we're going to run
the update command,

00:24:09.970 --> 00:24:12.440
and it says you're at revision one,
nothing's happened, there's no one else

00:24:12.490 --> 00:24:13.250
working on this project.

00:24:13.340 --> 00:24:16.470
So it's pretty
straightforward at this point,

00:24:16.540 --> 00:24:17.670
no surprises.

00:24:18.120 --> 00:24:20.410
So then we're going to go
ahead and make changes.

00:24:20.470 --> 00:24:22.840
Now, in Subversion,
you're obviously going to edit files.

00:24:22.840 --> 00:24:24.680
You're going to add and
delete files or directories.

00:24:24.680 --> 00:24:27.740
And when you delete a directory,
it goes away.

00:24:27.890 --> 00:24:29.510
And that was like CVS,
where the directory

00:24:29.520 --> 00:24:30.620
just keeps coming back.

00:24:30.620 --> 00:24:34.130
It's like the directory
that just wouldn't die.

00:24:34.300 --> 00:24:37.290
You can also move and copy
files and directories.

00:24:37.670 --> 00:24:41.990
Remember to use the Subversion
command line client or some Subversion

00:24:41.990 --> 00:24:44.040
client when moving or copying things.

00:24:44.040 --> 00:24:48.330
If you use the finder or if you just use
Unix CP or move to move things around,

00:24:48.330 --> 00:24:49.740
Subversion is going to get confused.

00:24:49.740 --> 00:24:51.000
It's not going to know what happened.

00:24:51.000 --> 00:24:55.380
So you definitely want to remember
to let Subversion know to do this.

00:24:55.380 --> 00:24:59.070
So it will take a little
bit of a change to do that,

00:24:59.230 --> 00:25:02.050
changing your developing patterns.

00:25:02.060 --> 00:25:04.960
So here, for example,
we're going to start off removing

00:25:04.960 --> 00:25:06.970
the file afile.txt to foo.txt.

00:25:08.520 --> 00:25:11.780
and which is moving a file,
which is great.

00:25:11.910 --> 00:25:13.490
We're going to copy images to photos.

00:25:13.500 --> 00:25:16.150
And I look forward to the day
where I'm not walking around here,

00:25:16.150 --> 00:25:17.950
God, this is so cool, I can move a file.

00:25:18.050 --> 00:25:23.500
You're going to copy the images
directory to the photos directory.

00:25:23.500 --> 00:25:23.500
So we're going to wind up
with two directories there.

00:25:23.610 --> 00:25:27.530
and I used open command here
because another file.txt that'll

00:25:27.530 --> 00:25:32.940
pop open text edit or whatever you
have to that to that MIME type.

00:25:32.970 --> 00:25:37.550
So open up another file.txt and you'll
make some sort of change and save it.

00:25:37.600 --> 00:25:40.340
Now,
I'm saying this again for CVS people,

00:25:40.480 --> 00:25:42.580
don't forget you can
move and copy things.

00:25:42.580 --> 00:25:46.120
I have sat in day-long meetings
determining how a project is going

00:25:46.120 --> 00:25:49.240
to be laid out before importing
it because you can't move things.

00:25:49.240 --> 00:25:51.250
It really is the kind
of thing where you're,

00:25:51.340 --> 00:25:54.640
it took me quite a while to get used
to the fact that I could move things,

00:25:54.640 --> 00:25:55.360
you know.

00:25:55.440 --> 00:25:56.780
Eventually you get all
cavalier and you're like,

00:25:56.820 --> 00:25:58.700
"I'll just move this over here
and then over there," and you

00:25:58.700 --> 00:26:00.360
wind up rearranging your project.

00:26:00.440 --> 00:26:04.090
People who do development where
you're constantly refactoring,

00:26:04.090 --> 00:26:05.310
this is a huge win.

00:26:06.300 --> 00:26:09.750
So we've made some changes,
now we're going to examine those changes.

00:26:09.750 --> 00:26:12.490
Again, like I said, review what you've
done before committing,

00:26:12.560 --> 00:26:14.390
view the files and
directories that have changed.

00:26:14.400 --> 00:26:16.860
So here we run the SVN status command.

00:26:16.860 --> 00:26:20.660
It puts out one line per file
that's modified or changed.

00:26:20.660 --> 00:26:22.840
Notice it only shows
you interesting files.

00:26:22.840 --> 00:26:26.180
You can pass the verbose
option to Subversion status,

00:26:26.190 --> 00:26:28.310
and it will show you every file.

00:26:28.310 --> 00:26:30.120
You can also tell it to be non-recursive.

00:26:30.120 --> 00:26:32.430
There's a bunch of other options
that SVN help will tell you about.

00:26:33.180 --> 00:26:36.510
But for starters here,
you can see that we have foo.txt,

00:26:36.640 --> 00:26:39.570
which is added, as photos,
which is also added.

00:26:39.580 --> 00:26:41.770
Now photos is a copy from
the images directory,

00:26:41.770 --> 00:26:44.680
as we know,
and foo.txt is a move from afile.

00:26:44.680 --> 00:26:47.160
So you can see afile.txt
has been deleted,

00:26:47.160 --> 00:26:48.910
and foo.txt has been added.

00:26:48.910 --> 00:26:52.670
So the little plus signs mean that
this has some sort of history.

00:26:52.690 --> 00:26:55.010
Subversion is going to remember
where these things came from.

00:26:55.050 --> 00:26:57.720
It's going to remember where they came
from when you run Subversion log on them.

00:26:57.720 --> 00:27:00.200
And lastly, another file.txt isn't
terribly interesting,

00:27:00.200 --> 00:27:01.320
it's just been modified.

00:27:02.360 --> 00:27:05.620
So again, for CVS users,
stop using the update command to see

00:27:05.620 --> 00:27:07.820
what's changed in your working copy.

00:27:07.820 --> 00:27:10.770
SVN status does not
change your working copy.

00:27:10.870 --> 00:27:13.030
It does not contact the server.

00:27:13.030 --> 00:27:15.600
It uses data that's stored
in your .svn directories to

00:27:15.600 --> 00:27:17.070
figure out what's going on.

00:27:17.080 --> 00:27:20.820
So it's the kind of thing you
can run without network access.

00:27:22.540 --> 00:27:25.090
So we're going to also view the
contents that you've changed.

00:27:25.100 --> 00:27:25.960
So you've seen the files.

00:27:25.960 --> 00:27:28.520
Maybe you've made changes to
the structure of your project.

00:27:28.640 --> 00:27:30.030
But what if you changed files?

00:27:30.040 --> 00:27:32.620
So svndiff, by default,
outputs what's called

00:27:32.780 --> 00:27:34.220
unified diff format.

00:27:34.220 --> 00:27:37.040
Now if you look here,
the very first file has a minus

00:27:37.040 --> 00:27:38.940
one line that's been deleted.

00:27:38.940 --> 00:27:41.890
That's the file afile.txt
that's been removed.

00:27:41.900 --> 00:27:45.030
Or actually,
it's been renamed to foo.txt, I believe.

00:27:45.030 --> 00:27:48.350
And then we see another file.txt that
has one line that's been modified.

00:27:48.360 --> 00:27:49.120
We change that.

00:27:49.120 --> 00:27:51.470
It says this is a sample file, eek,
instead of boo.

00:27:52.180 --> 00:27:55.600
So that's what svndiff
will give you the changes.

00:27:55.600 --> 00:27:58.510
Now svndiff is not going to show
you changes to binary files,

00:27:58.510 --> 00:28:01.600
but it will say that a file is
changed with binary content.

00:28:01.620 --> 00:28:04.680
Now I use the word merge here
because we're not actually

00:28:04.680 --> 00:28:08.270
running the merge command,
which Subversion does have one.

00:28:08.370 --> 00:28:11.700
But you're going to pull changes from
the repository into your working copy.

00:28:11.700 --> 00:28:14.680
Undoubtedly, if you're working on a busy
project with a larger team,

00:28:14.680 --> 00:28:17.400
you're going to have other people
making changes and committing

00:28:17.400 --> 00:28:18.700
them throughout the day.

00:28:18.700 --> 00:28:21.850
So this will pull any other changes from
the repository into your working copy.

00:28:21.860 --> 00:28:25.390
Now you can get a preview of
what the update command will

00:28:25.390 --> 00:28:27.260
do by running status with -u.

00:28:27.260 --> 00:28:31.010
Unlike running straight SVN status,
-u will make a trip to the server

00:28:31.010 --> 00:28:34.290
because it's going to find out
what files will be updated,

00:28:34.290 --> 00:28:37.890
and it will mark those
accordingly in the status output.

00:28:38.360 --> 00:28:41.420
So, again, we're working on this big,
exciting project here all

00:28:41.420 --> 00:28:42.910
by ourselves on our laptop.

00:28:42.980 --> 00:28:43.980
Update, and we got nothing.

00:28:43.980 --> 00:28:45.830
So, we're still at revision one.

00:28:47.800 --> 00:30:20.600
[Transcript missing]

00:30:21.410 --> 00:30:22.420
Any questions so far?

00:30:22.440 --> 00:30:23.540
Is anyone lost?

00:30:23.540 --> 00:30:24.780
Is anyone following along here?

00:30:24.780 --> 00:30:25.750
Everyone?

00:30:25.750 --> 00:30:26.380
Okay.

00:30:28.260 --> 00:30:30.130
So other Subversion commands we've got.

00:30:30.320 --> 00:30:31.920
We have a number of others.

00:30:31.990 --> 00:30:32.920
Subversion has many commands.

00:30:32.920 --> 00:30:35.720
We've done our best to keep the
command set small in Subversion.

00:30:35.720 --> 00:30:39.940
The more commands we have,
the more difficult it's going to

00:30:40.070 --> 00:30:42.300
be for people to learn and use.

00:30:42.300 --> 00:30:43.830
And I know it's a
command line application,

00:30:43.830 --> 00:30:46.190
it's not some sort of beautiful
Cocoa app or anything like that.

00:30:46.310 --> 00:30:52.550
But we do put some effort into
the UI of our command line binary.

00:30:52.880 --> 00:30:56.200
One thing I will point out is that
options can go anywhere in the line.

00:30:56.200 --> 00:30:59.430
In CVS they had global options that
went before the command and local

00:30:59.430 --> 00:31:01.400
options that went after the command.

00:31:01.400 --> 00:31:04.720
And -d meant one thing under one
command and another thing under another.

00:31:04.720 --> 00:31:05.840
We don't do that anymore.

00:31:05.880 --> 00:31:08.340
An option is global period the end.

00:31:08.340 --> 00:31:12.070
So let's start talking about svn-revert.

00:31:12.220 --> 00:31:14.000
Now this is a great
little helpful command.

00:31:14.000 --> 00:31:17.070
It discards any changes that you've
made in your working copy and goes

00:31:17.070 --> 00:31:18.840
back to the base revision of a file.

00:31:18.840 --> 00:31:21.580
Now I'm very specific
on saying base revision.

00:31:21.580 --> 00:31:22.750
And I'll go through it a little bit.

00:31:22.850 --> 00:31:24.760
Go through this example and explain why.

00:31:24.760 --> 00:31:32.510
For example, here we're going to cat the
mati file into our file foo.txt.

00:31:33.570 --> 00:31:34.700
Can we switch to demo two now?

00:31:34.700 --> 00:31:37.580
Actually, I'll go ahead and let
Fred show this live.

00:31:37.690 --> 00:31:39.640
Can you make that a little bigger?

00:31:43.390 --> 00:31:46.700
Fred's gone ahead and
tossed that into there,

00:31:46.700 --> 00:31:50.630
so now take a diff and you can
see that he's changed the file.

00:31:50.630 --> 00:31:53.450
So if you want to go ahead
and get rid of your changes,

00:31:53.450 --> 00:31:55.320
you're going to run SVN revert.

00:31:57.990 --> 00:31:59.130
You have to provide the file name.

00:31:59.140 --> 00:32:03.940
It does not by default choose your
dot as path in your current directory.

00:32:03.940 --> 00:32:06.610
It does not by default act recursively.

00:32:06.610 --> 00:32:10.730
It knows that it can blow away
local data that you've made so that

00:32:11.120 --> 00:32:13.280
command is very careful about it.

00:32:13.430 --> 00:32:15.500
As you can see with diff,
nothing happens here.

00:32:15.500 --> 00:32:16.700
You can go back to the slides now.

00:32:18.150 --> 00:32:19.220
You have to provide the file name.

00:32:19.320 --> 00:32:21.590
It does not by default choose your
dot as path in your current directory.

00:32:21.590 --> 00:32:23.910
It does not by default choose your
dot as path in your current directory.

00:32:23.910 --> 00:32:24.900
You can go back to the slides now.

00:32:25.040 --> 00:32:26.410
One thing I want to point
out about SVN revert,

00:32:26.410 --> 00:32:28.040
CVS revert consists of two
commands as you all know,

00:32:28.040 --> 00:32:29.430
which is delete the file
and then run CVS up.

00:32:29.440 --> 00:32:31.370
Now the big problem with doing that,
and it's a habit you might

00:32:31.370 --> 00:32:33.120
go ahead and continue to do
while you're in Subversion,

00:32:33.120 --> 00:32:35.440
the big problem with doing that is that
you might not get the same version of

00:32:35.440 --> 00:32:37.540
the file you had in your working copy.

00:32:38.780 --> 00:32:40.700
Your working copy has a
revision we refer to as the base

00:32:40.710 --> 00:32:43.030
revision of your working copy,
and when you update you're going

00:32:43.030 --> 00:32:45.440
to get the head revision of the
server unless you specifically tell

00:32:45.440 --> 00:32:47.040
it to give you a different version.

00:32:48.410 --> 00:32:50.650
So revert the file instead
of deleting it and update it.

00:32:50.650 --> 00:32:53.460
It's hard to remember these little
sort of things at first I think.

00:32:55.370 --> 00:32:58.600
So SVN resolve, CVS when you got a
conflict in a local file,

00:32:58.610 --> 00:33:02.360
you'd have to go ahead and fix the
conflict markers and get rid of it and

00:33:02.360 --> 00:33:06.550
try and remember which part of it was
yours and which part of it was not.

00:33:07.970 --> 00:33:10.290
Subversion resolve not only will
tell Subversion you fixed the

00:33:10.440 --> 00:33:13.420
conflict but it will also remove any
temporary files that were created.

00:33:14.690 --> 00:33:16.400
So here we have a file
foo.txt as a conflict.

00:33:16.840 --> 00:33:20.230
Obviously,
this isn't something you can sort

00:33:20.230 --> 00:33:22.990
of play along with here because
you're working by yourself,

00:33:23.070 --> 00:33:25.800
but in this scenario the
foo.txt file has a conflict.

00:33:27.510 --> 00:33:30.100
So what Subversion does is
it creates three new files.

00:33:31.500 --> 00:33:34.560
One is the original file foo.txt which
has all the funny little greater than

00:33:34.570 --> 00:33:36.270
less than conflict markers in it.

00:33:37.590 --> 00:33:40.680
And then the next file is .mine which is
the file you were working on just now.

00:33:41.870 --> 00:33:44.210
And then it has the base revision of
your working directory and then it

00:33:44.260 --> 00:33:46.680
also has the revision that it just
pulled down from the repository.

00:33:47.720 --> 00:33:50.820
So you can feed those files to
another to an external program.

00:33:51.620 --> 00:33:53.360
You can feed it to file merge or
whatever not and look at what happened

00:33:53.430 --> 00:33:55.400
and go ahead and make your changes.

00:33:56.490 --> 00:33:59.100
If you're really feeling cavalier you
can copy .mine back to foo.txt and

00:33:59.150 --> 00:34:00.490
blow away somebody else's changes.

00:34:02.100 --> 00:34:04.970
I recommend being careful doing
that because if your coworkers

00:34:05.040 --> 00:34:07.850
are dangerous or carry heavy
weaponry you might get hurt.

00:34:09.560 --> 00:34:12.580
So once you've gone ahead and
figured out what you can do with your

00:34:12.580 --> 00:34:15.720
conflict you run the svn resolved
command and on the file again this

00:34:15.720 --> 00:34:18.440
is a This requires a specific path.

00:34:19.340 --> 00:34:20.320
So there we go.

00:34:21.530 --> 00:34:22.760
It got rid of all of our extra files.

00:34:24.360 --> 00:34:27.660
svn info file now svn info corresponds
pretty closely to CVS status.

00:34:28.880 --> 00:34:30.000
You get a lot of info about a file.

00:34:31.140 --> 00:34:32.640
Again this command does
not go over the network.

00:34:34.260 --> 00:34:37.740
It does it deal straight with the working
copy directory metadata and it tells

00:34:37.740 --> 00:34:40.850
you all sorts of info which I'm not
going to go into depth but you know go

00:34:40.860 --> 00:34:44.110
ahead and I'll let something I'll let
you do that at home for fun tonight.

00:34:46.040 --> 00:34:46.360
Manipulating and viewing properties.

00:34:47.740 --> 00:34:50.220
So subversion is a concept of
properties which is file metadata

00:34:50.350 --> 00:34:53.240
think extended attributes but it's
not really extended attributes.

00:34:54.910 --> 00:34:58.010
And it allows you to set those
attributes in any way that using any

00:34:58.010 --> 00:35:01.700
of these commands as well as retrieve
them back from the repository.

00:35:03.350 --> 00:35:06.820
Now the great thing about these
properties is that there are properties

00:35:06.820 --> 00:35:10.230
that subversion uses internally
as vn ignore to tell subversion what to

00:35:10.230 --> 00:35:13.910
ignore files to file patterns to ignore
in a directory subversion you can also

00:35:13.970 --> 00:35:15.970
use it to set tell subversion to set.

00:35:16.090 --> 00:35:16.340
So subversion is a concept of
properties which is file metadata.

00:35:16.340 --> 00:35:19.320
set the end of line style if you're
working cross platform with people

00:35:19.320 --> 00:35:23.180
you can use it as you can tell us
the version expand keywords in a file

00:35:23.180 --> 00:35:26.340
so version doesn't do any of that by
default because it's not gonna munch

00:35:26.340 --> 00:35:31.160
up your data so manipulating properties
prop set prop edit and prop dollar the

00:35:31.160 --> 00:35:35.480
way you can manipulate properties so if
you want to set a property for example

00:35:35.480 --> 00:35:39.850
the mime type property now as we talked
earlier you can serve your subversion

00:35:39.860 --> 00:35:43.920
repository through DAV and if you drop
an HTML file into your repository then

00:35:43.920 --> 00:35:47.540
you go and you look at it through in
in a Safari you're gonna it's gonna be

00:35:47.540 --> 00:35:51.160
served up as text and you're gonna look
and be looking at HTML tags however if

00:35:51.260 --> 00:35:55.410
you set the mime type of an HTML file
in this case a JPEG then subversion

00:35:55.410 --> 00:36:00.650
will happily set that as it feeds
it out to you through the web server

00:36:00.920 --> 00:36:03.780
So, now,
another thing you can use is prop edit,

00:36:03.780 --> 00:36:06.170
which is the kind of,
prop edit's what you want to use

00:36:06.170 --> 00:36:08.740
if you're going to edit a multiple
line property like SVN ignore,

00:36:08.740 --> 00:36:12.940
which is a new line separated list of
patterns of files you're going to ignore.

00:36:12.940 --> 00:36:15.500
So, in my case, I used emacs here,
and it waits for it,

00:36:15.500 --> 00:36:17.990
and then it was done,
and it says it set a new value.

00:36:17.990 --> 00:36:20.780
So,
we can take a look at what that value,

00:36:20.780 --> 00:36:25.070
SVN diff is going to show you the
differences in the properties,

00:36:25.070 --> 00:36:29.700
and then SVN status will show you
that the status has been changed.

00:36:30.140 --> 00:36:30.940
Are you ready for that, Fred?

00:36:31.020 --> 00:36:32.520
Can we go back to demo two here?

00:36:32.550 --> 00:36:35.260
Just take a peek at
what Fred's got there.

00:36:36.930 --> 00:36:42.180
Okay, notice it shows you up here that
you've got the new properties,

00:36:42.290 --> 00:36:44.650
property set, property changes on dot.

00:36:44.690 --> 00:36:45.980
It's set your ignore.

00:36:46.020 --> 00:36:47.860
As Fred said, it's a star, tilde,
I believe.

00:36:47.860 --> 00:36:51.590
And we also have the new mime
type image JPEG on the other file.

00:36:51.590 --> 00:36:53.330
Back to the slide, please.

00:36:56.800 --> 00:36:58.440
So you can manipulate properties.

00:36:58.440 --> 00:37:00.480
You can also manipulate
revision properties.

00:37:00.480 --> 00:37:01.960
Now this is an interesting concept.

00:37:01.990 --> 00:37:06.000
Properties correspond in
Subversion to files or directories.

00:37:06.000 --> 00:37:09.390
However, Subversion also ties
properties to a revision.

00:37:09.390 --> 00:37:12.510
Every revision gets an author,
which is the person

00:37:12.510 --> 00:37:16.020
who made the revision,
and it also gets a log message.

00:37:16.020 --> 00:37:18.900
And there's some other things, I believe,
date and whatnot.

00:37:18.900 --> 00:37:22.950
But these are non-version
properties tied to revision,

00:37:22.950 --> 00:37:27.410
and they can be changed by using
the --revprop option to SVN prop

00:37:27.410 --> 00:37:29.420
set or prop edit as well.

00:37:29.440 --> 00:37:33.530
Now here, for example, running --revprop,
and I say,

00:37:33.550 --> 00:37:38.110
please change the revision property
SVN log on revision one and

00:37:38.110 --> 00:37:40.660
change it to the words new file.

00:37:40.660 --> 00:37:43.120
Unfortunately,
actually not unfortunately,

00:37:43.210 --> 00:37:45.820
very carefully,
that is not enabled by default.

00:37:45.920 --> 00:37:48.800
So by default,
Subversion does not allow that.

00:37:48.800 --> 00:37:51.780
It does not allow you to change
this revision property data

00:37:51.780 --> 00:37:55.020
because it's not in version data,
and it's a repository

00:37:55.030 --> 00:37:58.500
administrator's decision whether
or not they want to change that.

00:37:58.500 --> 00:38:00.300
So, however,
Subversion even tells you how

00:38:00.300 --> 00:38:01.640
to go ahead and change that.

00:38:01.640 --> 00:38:04.450
So it's pretty easy for your
administrator to do that.

00:38:04.590 --> 00:38:08.220
And that's -- you can find out in the
book how to do that pretty easily.

00:38:08.500 --> 00:38:10.300
So viewing properties,
if you want to look at

00:38:10.470 --> 00:38:12.880
properties or examine properties
on a file or directory,

00:38:13.140 --> 00:38:15.640
you can use prop get or prop list.

00:38:15.710 --> 00:38:19.400
Prop get here, for example,
we say prop get svnmime

00:38:19.400 --> 00:38:24.970
type foo.jpg and it returns,
big surprise here, image slash jpg.

00:38:25.270 --> 00:38:30.760
If we run prop list on an S, on,
and we say I want to see the Sfinignore,

00:38:30.860 --> 00:38:33.290
prop list also will show
you that sort of thing.

00:38:33.460 --> 00:38:36.780
Prop get will also show you that as well.

00:38:42.710 --> 00:38:44.620
So there's other commands that
I'm not going to go over here.

00:38:44.620 --> 00:38:47.100
I do want to take a
quick peek here at them.

00:38:47.100 --> 00:38:51.580
We have svncat,
which is for concatenating a file.

00:38:51.580 --> 00:38:54.080
Cleanup,
which is to clean up your working copy.

00:38:54.080 --> 00:38:56.250
Your working copy's got a
whole lot more stuff going on.

00:38:56.250 --> 00:38:59.770
It journals every command it's
going to do before it actually does

00:38:59.790 --> 00:39:02.940
it to make sure that it doesn't
lose any information and keep

00:39:02.940 --> 00:39:04.980
your working copy in a sane state.

00:39:05.030 --> 00:39:07.510
Again,
Subversion does its best to be atomic,

00:39:07.510 --> 00:39:09.280
both in the client and server.

00:39:10.370 --> 00:39:12.310
Export is pretty much what you'd expect.

00:39:12.310 --> 00:39:13.360
It exports a file.

00:39:13.360 --> 00:39:16.860
List is a way of looking at,
of browsing a directory without

00:39:16.860 --> 00:39:18.600
actually checking it out.

00:39:18.600 --> 00:39:21.670
Lock, unlock,
or do you know the locking stuff?

00:39:21.720 --> 00:39:22.600
SVN merge.

00:39:22.600 --> 00:39:24.610
So these are some of the other commands.

00:39:24.610 --> 00:39:26.800
There's still,
there's other subcommands and

00:39:26.910 --> 00:39:30.740
there's other options and whatnot,
and you can find out what those are.

00:39:30.740 --> 00:39:33.520
But I just wanted to point out that
there's still other stuff that we're

00:39:33.530 --> 00:39:36.880
going to skip across here so we can get
on a little more hands-on information.

00:39:37.780 --> 00:39:42.340
So, using Subversion for a website.

00:39:43.850 --> 00:39:46.000
There's a number of different ways
you can publish your website if

00:39:46.050 --> 00:39:47.450
you want to put it in Subversion.

00:39:47.460 --> 00:39:50.120
Now, typically here I'm
talking about a website,

00:39:50.130 --> 00:39:53.750
a static collection of pages
or PHP scripts or CGI scripts

00:39:53.750 --> 00:39:54.880
or that sort of thing.

00:39:54.880 --> 00:39:58.750
I'm not talking about web applications
or web objects or stuff like that.

00:39:58.950 --> 00:40:01.450
You're going to put these files
in there and you're going to then

00:40:01.450 --> 00:40:02.900
serve them off your web server.

00:40:02.900 --> 00:40:05.780
So one way to do it is you just
put a Subversion working copy

00:40:05.780 --> 00:40:08.600
in Document Reader of your web
server and you go in there and

00:40:08.600 --> 00:40:11.530
you run SVN update every once in a
while and it pulls changes in the

00:40:11.530 --> 00:40:13.230
repository and then serves them up.

00:40:18.500 --> 00:40:21.860
Another way of doing it is to use
a post-commit hook to update a

00:40:21.880 --> 00:40:24.240
working copy on your web server.

00:40:24.360 --> 00:40:28.500
However, your repository and website
have to be on the same machine,

00:40:28.570 --> 00:40:31.140
the same server to do that,
or at least have access

00:40:31.140 --> 00:40:32.470
to the same file system.

00:40:32.590 --> 00:40:34.890
So that's sort of an automatic way.

00:40:34.890 --> 00:40:39.490
So you make a change and boom,
immediately it goes live to your website.

00:40:39.780 --> 00:40:41.690
You can also,
if your web server is in another machine,

00:40:41.690 --> 00:40:43.830
have it occasionally pull
the repository for updates.

00:40:43.830 --> 00:40:48.040
Maybe you have a cron job that runs
every hour that updates the working copy.

00:40:48.040 --> 00:40:51.460
It's working copy based on what
you've committed to the server.

00:40:51.460 --> 00:40:54.330
Or, lastly, and this is, you know,
if you're feeling cavalier,

00:40:54.330 --> 00:40:57.260
you can serve your site right
from your Subversion repository.

00:40:57.260 --> 00:41:01.400
You need to make sure your MIME types
are set properly on your files,

00:41:01.400 --> 00:41:05.700
and it also does require that you
use HTTP server and not SVN serve.

00:41:06.580 --> 00:41:09.120
And that, again,
this is only a static site only.

00:41:09.120 --> 00:41:12.900
If you serve your site from Subversion,
you can't serve PHP scripts

00:41:12.990 --> 00:41:16.380
from your Subversion repository
and expect PHP to parse them

00:41:16.380 --> 00:41:18.350
and hand them off to the users.

00:41:18.360 --> 00:41:21.340
What you're going to get out of
that is just raw PHP scripts.

00:41:21.340 --> 00:41:23.500
So,
that's sort of a shortcoming of the way

00:41:23.500 --> 00:41:25.560
that the Apache modules are laid out.

00:41:27.900 --> 00:41:30.940
So inside your lovely sample tarball,
there's a dump file.

00:41:30.940 --> 00:41:34.600
It's named website.dump in
this SVN dump files directory.

00:41:34.600 --> 00:41:37.200
And we're going to go ahead
and load it into a Subversion

00:41:37.200 --> 00:41:40.410
repository and take a look at how
the MIME types are set in that.

00:41:40.440 --> 00:41:42.380
So this is an example.

00:41:42.380 --> 00:41:46.840
What I've used here is
Subversion's website itself.

00:41:46.850 --> 00:41:51.300
So you've got a copy of
Subversion's terribly exciting

00:41:51.300 --> 00:41:54.160
website on your laptop there.

00:41:54.160 --> 00:41:56.980
And what that is is a
Subversion dump file.

00:41:57.920 --> 00:42:01.170
Subversion dump files are a way
of exporting your Subversion

00:42:01.170 --> 00:42:04.790
repository from the repository into
a flat file format that you can

00:42:04.790 --> 00:42:06.960
then load into another repository.

00:42:06.990 --> 00:42:10.160
So if you're going to transition from,
let's say,

00:42:10.160 --> 00:42:15.330
Berkeley database on G5 processor to
Berkeley database on an Intel processor,

00:42:15.330 --> 00:42:20.230
you would want to dump your repository
and then load it into the new repository,

00:42:20.400 --> 00:42:21.690
the new machine.

00:42:21.700 --> 00:42:24.570
If you're using FSFS,
there's no cross-platform

00:42:24.570 --> 00:42:26.290
issues to deal with there.

00:42:26.320 --> 00:42:30.530
It's also... Subversion dump is a
great thing to use for... The dump is

00:42:30.550 --> 00:42:33.900
a good way to back up your repository,
that sort of thing.

00:42:34.030 --> 00:42:37.890
So we go ahead and run this and
it's going to start adding stuff

00:42:37.890 --> 00:42:39.480
and doing all these sort of things.

00:42:39.590 --> 00:42:42.120
And then we can go in our
work and copy and update and

00:42:42.120 --> 00:42:43.990
we'll go ahead and see that.

00:42:44.960 --> 00:42:47.940
and then by doing prop list,
once we're back in the working copy,

00:42:47.940 --> 00:42:50.340
you can take a look at
all the different things.

00:42:50.340 --> 00:42:52.580
So let's switch over to demo
two and see what Fred's got.

00:42:52.670 --> 00:42:55.000
Are you keeping up with me here?

00:42:55.000 --> 00:42:57.100
Yeah.

00:43:00.050 --> 00:43:03.390
So you can see all the A's there.

00:43:03.440 --> 00:43:04.660
Right up there.

00:43:04.660 --> 00:43:05.670
Here's the load.

00:43:05.680 --> 00:43:06.840
Go ahead.

00:43:11.030 --> 00:43:14.900
Here's the update and the working copy.

00:43:15.060 --> 00:43:18.130
And then here comes typo.

00:43:20.450 --> 00:43:22.450
There's all the properties.

00:43:23.130 --> 00:43:25.230
So you can see everything's
got its property set.

00:43:25.340 --> 00:43:26.930
PNGs are set right.

00:43:27.010 --> 00:43:29.520
EOL style, you might see on one of those.

00:43:29.550 --> 00:43:30.980
It's patch.txt in there.

00:43:30.980 --> 00:43:35.240
There's a EOL style set to native,
so that it comes with the proper end

00:43:35.240 --> 00:43:39.660
of line markers for Windows and Unix.

00:43:39.660 --> 00:43:41.710
Okay, we can go back to slides.

00:43:44.200 --> 00:43:46.780
So managing OS config files,
that's managing a website.

00:43:46.780 --> 00:43:48.840
Like I said, it's nothing exciting,
but it's good to know

00:43:48.890 --> 00:43:49.930
a few tips about it.

00:43:49.980 --> 00:43:52.460
But managing OS config files
is kind of a neat thing.

00:43:52.460 --> 00:43:56.770
When we wrote the Subversion book,
all the authors would hang out in

00:43:56.810 --> 00:44:01.560
the Subversion users IRC channel,
and we wrote the book based on questions

00:44:01.560 --> 00:44:06.350
people asked and approaches that
people took to dealing with Subversion,

00:44:06.350 --> 00:44:09.660
to learning Subversion,
that sort of thing.

00:44:09.960 --> 00:44:13.230
Now, the one problem that we ran
into frequently was that some

00:44:13.230 --> 00:44:15.420
user would come in and be like,
"You know,

00:44:15.420 --> 00:44:17.810
I went to my machine and I wanted
to put Etsy in Subversion,

00:44:17.810 --> 00:44:19.760
and I moved it aside and
I tried to check it out,

00:44:19.760 --> 00:44:22.010
and you know, next thing you know,
their machine is booted." So there's

00:44:22.010 --> 00:44:25.450
a couple of different tricks
that you can use with Subversion.

00:44:25.710 --> 00:44:29.460
First of all, it's definitely possible,
but you're going to want to be careful.

00:44:29.460 --> 00:44:31.950
You don't want to blow
your Etsy directory away,

00:44:31.950 --> 00:44:35.460
and you certainly don't want to
make your machine unbootable.

00:44:35.740 --> 00:44:38.110
So, what you're going to do here,
we'll do a quick review

00:44:38.110 --> 00:44:39.380
of what we're going to do.

00:44:39.380 --> 00:44:41.690
We're going to add a directory
to your Subversion repository.

00:44:41.690 --> 00:44:44.400
We're going to check
out the empty directory.

00:44:44.400 --> 00:44:49.220
And then we're going to take the .svn
directory inside of that directory and

00:44:49.220 --> 00:44:53.610
move it into your config directory,
which is in this case, Etsy.

00:44:53.870 --> 00:44:55.560
We're not going to put it
in your real Etsy directory.

00:44:55.560 --> 00:44:56.120
I want to say that.

00:44:56.200 --> 00:44:58.000
So please don't get ahead of me here.

00:44:58.000 --> 00:45:00.060
This is just a demo.

00:45:00.060 --> 00:45:02.560
You're going to run SVN status
and then you're going to see,

00:45:02.560 --> 00:45:04.320
you know, magic happens basically.

00:45:04.320 --> 00:45:07.620
So then once you've done that,
you can go ahead and add files and

00:45:07.630 --> 00:45:12.260
directories that you want to manage under
version control and just ignore the rest.

00:45:12.260 --> 00:45:16.700
So we'll start one step at a time
here and go ahead and do this.

00:45:16.700 --> 00:45:19.360
So you start off by adding a new
directory to your Subversion repository

00:45:19.360 --> 00:45:20.900
and then you're going to check it out.

00:45:22.320 --> 00:45:24.410
I'm doing this here.

00:45:24.420 --> 00:45:27.140
We have the SVN make dir command
to create a new directory and

00:45:27.140 --> 00:45:31.230
I'm specifically using the
file colon slash slash URL.

00:45:31.230 --> 00:45:34.380
Notice that I'm creating a
directory on the repository in the

00:45:34.680 --> 00:45:36.750
repository without a working copy.

00:45:36.760 --> 00:45:40.330
You have to pass a log message
to this because you're actually

00:45:40.330 --> 00:45:42.020
changing the repository.

00:45:42.020 --> 00:45:43.360
There's no two steps.

00:45:43.450 --> 00:45:46.020
There's no make directory, then commit.

00:45:46.020 --> 00:45:48.570
This is a one step sends everything in.

00:45:48.840 --> 00:45:50.620
So once we do that,
then we're going to go ahead

00:45:50.620 --> 00:45:53.140
and check this out into a
new directory in our home.

00:45:53.140 --> 00:45:56.220
And this is a temporary checkout,
so you can check it in a

00:45:56.220 --> 00:45:59.170
temp or whatever or not,
but we're going to check it in

00:45:59.170 --> 00:46:01.280
our home directory slash svnetc.

00:46:05.080 --> 00:46:07.100
Now we cheat.

00:46:07.140 --> 00:46:11.560
We move the .svn directory over
into your configuration directory.

00:46:11.650 --> 00:46:14.440
Now,
I've given you a dummy Etsy directory

00:46:14.460 --> 00:46:19.620
in the 6.19 Subversion directory,
so if you go ahead and move the

00:46:19.620 --> 00:46:22.470
.svn directory into there...

00:46:26.260 --> 00:46:29.430
You run SVN status and you're going
to see all sorts of crazy stuff.

00:46:29.480 --> 00:46:30.540
So if we can switch over to demo.

00:46:43.760 --> 00:46:45.180
I did the wrong move, sorry.

00:46:45.180 --> 00:46:46.700
You didn't put that in
your real Etsy directory,

00:46:46.700 --> 00:46:47.990
did you Fred?

00:46:48.120 --> 00:46:49.360
Want to try it again?

00:46:49.540 --> 00:46:50.100
Yeah.

00:46:50.100 --> 00:46:51.830
Okay, so let's go back here.

00:46:51.910 --> 00:46:54.700
Let's watch Fred struggle
here for a minute.

00:46:55.630 --> 00:46:57.100
I don't have any jokes
prepared or anything,

00:46:57.100 --> 00:46:59.980
so I don't know that I can cover for you.

00:47:05.170 --> 00:47:08.010
Fred switched into the fake Etsy
directory and he's going to run status.

00:47:08.010 --> 00:47:11.020
Now you see just a bajillion
different question marks.

00:47:11.020 --> 00:47:14.640
Those sort of apply to every
file and directory in Etsy.

00:47:14.640 --> 00:47:18.900
So you can at your leisure add files
and directories to version control.

00:47:18.900 --> 00:47:20.790
You're working in your
live Etsy directory again.

00:47:20.830 --> 00:47:23.270
You're going to want to be careful
when you're in there just as you'd be

00:47:23.270 --> 00:47:24.940
careful while you're in there as well.

00:47:24.940 --> 00:47:27.920
Now if you have a server that
you're sharing with different users,

00:47:28.030 --> 00:47:31.070
Subversion has a dash dash username
switch that you can pass to it.

00:47:31.170 --> 00:47:34.430
So if you have different people
operating on files in Etsy as root,

00:47:34.530 --> 00:47:37.990
you get to tell them to remember to
use the dash dash username switch so

00:47:37.990 --> 00:47:41.500
that they can commit things as their
own username and pass their own,

00:47:41.920 --> 00:47:43.640
obviously their own credentials.

00:47:45.640 --> 00:47:47.650
So, as you can see,
Fred went ahead and added

00:47:47.850 --> 00:47:51.660
Etsy print cap and FTP users,
and now he's going to write a

00:47:51.660 --> 00:47:54.510
quick log message for some of
the changes that he's made.

00:47:54.520 --> 00:47:56.790
And notice he's using,
he didn't pass a log

00:47:57.040 --> 00:48:00.500
message in the command line,
so it popped up in editor form.

00:48:00.500 --> 00:48:02.060
That was a prop edit.

00:48:02.060 --> 00:48:02.700
That was a prop edit?

00:48:02.700 --> 00:48:03.240
Yeah.

00:48:03.240 --> 00:48:04.240
Okay, well go ahead and commit it then.

00:48:04.240 --> 00:48:07.010
So, you don't necessarily want to
check in your host key file,

00:48:07.010 --> 00:48:09.670
so like this is an example of
something you might want to add to

00:48:09.670 --> 00:48:14.400
your ignore if you're doing that here,
or, you know, Fitz files.

00:48:15.600 --> 00:48:16.660
That kind of thing.

00:48:16.660 --> 00:48:17.400
Okay.

00:48:17.400 --> 00:48:19.400
So, now when I do SVN status.

00:48:21.940 --> 00:48:25.270
The SSH host key files,
the pub key is there,

00:48:25.340 --> 00:48:29.270
but the private keys are not
showing up as something that

00:48:29.270 --> 00:48:31.020
I want to check in for you.

00:48:31.110 --> 00:48:31.980
Excellent.

00:48:32.110 --> 00:48:35.120
And now if you're really
crazy like myself,

00:48:35.230 --> 00:48:38.180
you can put your home directory
under version control.

00:48:38.330 --> 00:48:43.430
I've never had to do so much pruning and
cleaning up in my life before I did it.

00:48:43.490 --> 00:48:44.350
If we could switch back to slides.

00:48:44.400 --> 00:48:47.270
But the one nice thing that gets
you is you get a new machine and

00:48:47.330 --> 00:48:48.990
you're set up in no time flat.

00:48:48.990 --> 00:48:52.950
All you gotta do is check out your home
directory and kind of move it into place,

00:48:52.950 --> 00:48:55.500
log in again,
and you've basically got your whole

00:48:55.500 --> 00:48:57.620
environment you've come to expect.

00:48:57.680 --> 00:49:01.590
And in addition,
you've got your home directory

00:49:01.700 --> 00:49:05.710
backed up on your server somewhere,
which you're also backing up, right?

00:49:05.860 --> 00:49:11.400
So now I'm going to hand over the demo
here to Chris Parker to talk a little

00:49:11.400 --> 00:49:13.560
bit about using Subversion in Xcode.

00:49:13.560 --> 00:49:17.410
And then hopefully we'll finish
up a couple minutes early because

00:49:17.410 --> 00:49:20.630
for these sort of hands-on
sessions with Subversion,

00:49:20.630 --> 00:49:25.250
I tend to see a lot more Q&A than usual,
so we'll have plenty of time for Q&A.

00:49:26.620 --> 00:49:30.780
So if we could have demo two up here,
I guess.

00:49:30.790 --> 00:49:35.900
So I've opened up the sample app
Xcode project that Fitz put in your--

00:49:37.330 --> 00:49:41.610
The first place to look here in Xcode
if you haven't already turned on the

00:49:41.680 --> 00:49:45.790
SCM stuff is to look in the project
info tab here where it says general

00:49:45.790 --> 00:49:49.930
and down here where it says enable SCM,
you'll have which SCM system

00:49:49.930 --> 00:49:51.300
you're going to use.

00:49:51.340 --> 00:49:54.070
In this case we're using Subversion.

00:49:54.480 --> 00:49:57.230
And you may,
if you've configured things differently,

00:49:57.230 --> 00:50:00.560
you may have to edit the path
here to the Subversion binary.

00:50:00.560 --> 00:50:05.260
In this case it's installed here
on Fred's machine at that location.

00:50:05.260 --> 00:50:08.390
So once you've got that
set up and enabled,

00:50:08.390 --> 00:50:12.150
all of the SCM operations
that are available here in

00:50:12.150 --> 00:50:14.850
the menu work with Subversion.

00:50:14.860 --> 00:50:20.210
So we can take a look at, for instance,
a file here like maincontroller.m.

00:50:20.220 --> 00:50:23.700
And if we ask it to get SCM info here,
we'll see that we've got a file

00:50:23.700 --> 00:50:24.460
here that says maincontroller.m.

00:50:24.540 --> 00:50:28.010
We've got the revision
numbers down here on the left,

00:50:28.010 --> 00:50:31.120
the authors who committed
the files in the middle here,

00:50:31.120 --> 00:50:33.510
what date it happened on,
and the message.

00:50:33.560 --> 00:50:36.210
And there's even more
information down here about,

00:50:36.210 --> 00:50:38.990
well it's actually the same
information about the file

00:50:38.990 --> 00:50:40.630
names and things like that.

00:50:40.690 --> 00:50:44.170
So this is a good graphical way just
to be able to see a whole list of

00:50:44.170 --> 00:50:46.440
all the changes that have happened.

00:50:46.440 --> 00:50:51.340
We can also take a look at
maincontroller.m itself.

00:50:51.340 --> 00:50:54.360
And when it's up, or when it's selected.

00:50:54.480 --> 00:50:57.480
And the project thing,
everybody's probably done this, right?

00:50:57.580 --> 00:51:00.180
One of the options you can
do is update to latest.

00:51:00.180 --> 00:51:02.510
You can compare with different revisions.

00:51:02.520 --> 00:51:05.260
But one of the things you
do is get annotations for.

00:51:05.260 --> 00:51:08.770
CVS has this command called svn annotate,
right?

00:51:08.780 --> 00:51:10.780
Which shows you that
whole list of things.

00:51:10.780 --> 00:51:11.780
Let's be honest.

00:51:11.780 --> 00:51:13.680
Who's actually ever
looked at that and said,

00:51:13.680 --> 00:51:16.260
hey, I want to know who wrote that
really nifty bit of code.

00:51:16.260 --> 00:51:19.090
You're really interested in the
guy who broke the build last night.

00:51:19.190 --> 00:51:23.100
So when you check out get
annotations for latest,

00:51:23.100 --> 00:51:24.020
you can see that.

00:51:24.690 --> 00:51:27.270
For this file,
we've got the revision number down here.

00:51:27.590 --> 00:51:29.540
The author down the side here.

00:51:29.540 --> 00:51:31.980
And then the lines of the text.

00:51:32.000 --> 00:51:34.850
And I can look at, for instance,
this NS log that fits

00:51:34.850 --> 00:51:35.980
as left in the file.

00:51:35.980 --> 00:51:38.460
That says clearing count field.

00:51:38.700 --> 00:51:40.580
Oh gee,
let's get rid of that because we don't

00:51:40.580 --> 00:51:42.180
want to put that in production code.

00:51:42.360 --> 00:51:46.280
So we'll go back to the
maincontroller.m source file here.

00:51:46.280 --> 00:51:48.620
We can just select it
and delete the file.

00:51:48.860 --> 00:51:52.380
And now we can do things as
soon as we've saved it and say,

00:51:52.920 --> 00:51:53.980
compare with.

00:51:54.480 --> 00:51:58.670
That should say latest, but let's see.

00:51:59.100 --> 00:52:05.490
We can update the entire
project and compare with latest.

00:52:05.930 --> 00:52:09.100
And this actually launches Xcode and
goes ahead and does a comparison.

00:52:09.100 --> 00:52:11.920
And oh look,
we see that in the old version,

00:52:11.950 --> 00:52:15.820
it's got the log in it,
but in the new version, it doesn't.

00:52:15.820 --> 00:52:19.810
So now we've verified that that is
actually the change we wanna make.

00:52:20.030 --> 00:52:22.280
And I can actually say
from the SCM menu here,

00:52:22.280 --> 00:52:24.060
commit changes.

00:52:24.080 --> 00:52:26.480
And it pops down a little sheet
where I can type the log message.

00:52:26.480 --> 00:52:28.740
So instead of firing stuff up
from the command line client,

00:52:28.740 --> 00:52:29.580
I can do this.

00:52:29.580 --> 00:52:32.900
So remove log from Fitz.

00:52:32.900 --> 00:52:33.740
Oops.

00:52:34.520 --> 00:52:36.870
spell his name right.

00:52:37.040 --> 00:52:41.560
And when I commit it,
the SCM information is updated and now

00:52:41.560 --> 00:52:47.760
if I look at things like the SCM info,
I see that, well,

00:52:47.840 --> 00:52:51.400
I'm actually Fred committing this,
so when somebody looks back and

00:52:51.400 --> 00:52:53.940
finds out who broke the bill,
it'll look like it was Fred.

00:52:53.940 --> 00:52:57.660
But we removed the log from Fitz and
then we can also take a look at

00:52:57.660 --> 00:53:00.410
the annotations and we'll see that,
you know,

00:53:00.410 --> 00:53:05.320
that line that was there is gone and it
looks like this is all my file again now.

00:53:05.780 --> 00:53:07.720
So there are a lot of
other features here,

00:53:08.000 --> 00:53:10.760
but mostly the things that are
in the SCM menu in Xcode deal

00:53:10.760 --> 00:53:12.930
with the day-to-day things,
right?

00:53:12.980 --> 00:53:15.810
So tagging and branching and stuff
like that are things that you'll

00:53:15.810 --> 00:53:18.730
probably do with a command line
client unless new menu options show

00:53:18.730 --> 00:53:20.310
up here in Xcode at some point.

00:53:20.380 --> 00:53:25.450
But this is mainly the copy, modify,
merge kind of stuff.

00:53:25.520 --> 00:53:29.250
You check something out, you work on it,
you commit it back up,

00:53:29.250 --> 00:53:33.210
and that lets you update the
entire project with all your stuff.

00:53:33.240 --> 00:53:35.460
So for your basic workflow,
you can stay in Xcode.

00:53:35.580 --> 00:53:37.940
For a lot of the things that you're
going to do day in and day out.

00:53:38.040 --> 00:53:41.190
And for a lot of our internal
testing projects and stuff like that,

00:53:41.190 --> 00:53:43.030
we actually use this here at work.

00:53:43.040 --> 00:53:46.640
And that's it.

00:53:46.640 --> 00:53:48.860
If we could get the slides back here.

00:53:53.380 --> 00:53:58.860
Fred Heslick-Clicker.

00:54:01.900 --> 00:56:30.100
[Transcript missing]

00:56:30.400 --> 00:56:34.100
If you want more information
about Subversion,

00:56:34.140 --> 00:56:39.140
that's the WWC Uber URL for all
things related to anything in WWC.

00:56:39.140 --> 00:56:47.230
You can also go to Subversion.Tigris.org,
which is the homepage for the site.

00:56:47.350 --> 00:56:50.280
You can Google it if you
forget the actual name.

00:56:50.280 --> 00:56:56.140
And you can also buy the book
from O'Reilly & Associates.