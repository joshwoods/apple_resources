WEBVTT

00:00:10.700 --> 00:00:16.390
Well, how do you do that?

00:00:16.460 --> 00:00:19.590
Well, you use the Sync Services API.

00:00:19.830 --> 00:00:22.890
And you use it to do,
to write a little piece of

00:00:23.000 --> 00:00:25.940
software we call a Sync Client.

00:00:26.030 --> 00:00:28.440
Okay,
and this Sync Client cooperates very,

00:00:28.440 --> 00:00:31.800
very closely with your application.

00:00:31.880 --> 00:00:36.720
And it will move data from
your application data store

00:00:37.000 --> 00:00:40.970
In an application-specific way,
over into the sync engine,

00:00:40.970 --> 00:00:44.450
the sync engine will go and
put that data into the truth,

00:00:44.590 --> 00:00:49.220
merging it as necessary with other
data that may already be there.

00:00:49.320 --> 00:00:52.130
And then the sync engine will

00:00:52.410 --> 00:00:56.240
Talk back to you and say, well,
here is what the truth has.

00:00:56.300 --> 00:00:58.240
Here's some information
that you need to know,

00:00:58.320 --> 00:01:01.140
some updates, some deletes,
some modifies, what have you.

00:01:01.210 --> 00:01:04.950
And then you, with your sync client,
can react to that

00:01:04.950 --> 00:01:07.080
information coming back.

00:01:07.170 --> 00:01:11.880
from the Sync Engine and merge that
data into your application data store.

00:01:11.980 --> 00:01:15.680
It's kind of the basic
workflow of what happens.

00:01:15.840 --> 00:01:17.990
And after you do that,
your application data will

00:01:17.990 --> 00:01:20.090
be in sync with the truth,
which is sort of really

00:01:20.110 --> 00:01:21.180
where you want to be.

00:01:21.180 --> 00:01:23.610
You want to be in sync.

00:01:24.380 --> 00:01:25.300
Okay.

00:01:25.300 --> 00:01:30.390
So now, well,
you can kind of think of some ways

00:01:30.400 --> 00:01:31.670
you might want to do this yourself.

00:01:31.670 --> 00:01:32.830
You've just got a data file.

00:01:32.830 --> 00:01:36.200
Maybe you can just copy your
data file to another machine.

00:01:36.310 --> 00:01:44.580
Maybe you can come up with some
simplified sync methodology by yourself.

00:01:44.580 --> 00:01:44.580
But what you won't get

00:01:44.660 --> 00:01:48.420
All of these terrific features
that you get for free by using

00:01:48.420 --> 00:01:50.070
the Sync Services framework.

00:01:50.180 --> 00:01:54.220
Here's some of the real power,
the real advantage of leveraging the

00:01:54.220 --> 00:01:56.040
work that we've done to provide this API.

00:01:56.040 --> 00:01:58.230
You get this terrific stuff for free.

00:01:58.410 --> 00:02:00.700
Things like conflict management.

00:02:00.920 --> 00:02:05.500
Not only the recognition of conflicts,
but you also get for free a

00:02:05.500 --> 00:02:09.390
conflict resolution user interface.

00:02:09.510 --> 00:02:12.370
You get .Mac syncing for free.

00:02:12.750 --> 00:02:18.390
You can merge data with other
clients and other devices.

00:02:18.480 --> 00:02:20.600
We'll be looking at
examples of that later.

00:02:20.670 --> 00:02:23.100
You also get things like
a data change alert.

00:02:23.240 --> 00:02:27.700
So if you're going to be modifying
a large number of records,

00:02:27.980 --> 00:02:31.300
the user might be
interested in seeing that,

00:02:31.300 --> 00:02:35.700
"Oh, gosh,
all of my contacts are going to change."

00:02:36.040 --> 00:02:38.400
And yet again,
this data change alert is something

00:02:38.400 --> 00:02:44.600
that you get for free by using Sync
Services to implement your sync client.

00:02:44.740 --> 00:02:49.140
And really, I think all in all,
this moving data around,

00:02:49.140 --> 00:02:52.260
getting this stuff for free,
got what I think is a

00:02:52.260 --> 00:02:53.440
pretty good API to use.

00:02:53.700 --> 00:02:55.960
I think that's pretty interesting
just in this scenario.

00:02:55.960 --> 00:02:58.560
But wait, there's more.

00:02:58.650 --> 00:03:05.010
Because here, you've got a scenario which
really sort of begins to look like

00:03:05.230 --> 00:03:08.600
What a typical user's computing
experience looks like.

00:03:08.780 --> 00:03:11.740
They may have a smartphone,
they've got a .Mac account,

00:03:11.740 --> 00:03:15.940
they're using your application,
they're using some system applications,

00:03:16.090 --> 00:03:23.140
and if you get all of those
things talking together,

00:03:23.140 --> 00:03:23.140
exchanging data with the sync engine,

00:03:23.600 --> 00:03:24.320
That's pretty cool.

00:03:24.470 --> 00:03:28.360
And what's more, using .MAC,
you can now get that information

00:03:28.360 --> 00:03:34.280
moving from desktop machine to laptop
machine to desktop machine elsewhere.

00:03:34.500 --> 00:03:59.600
[Transcript missing]

00:04:00.130 --> 00:04:00.840
That's pretty cool.

00:04:00.890 --> 00:04:04.760
And what's more, using .MAC,
you can now get that information

00:04:04.760 --> 00:04:10.230
moving from desktop machine to laptop
machine to desktop machine elsewhere.

00:04:11.160 --> 00:04:14.230
It'll really benefit your users.

00:04:14.230 --> 00:04:17.230
And I think it's a pretty cool
new technology on Tiger as well.

00:04:17.350 --> 00:04:20.650
So now what I'd like to do
is give you a little example

00:04:21.280 --> 00:04:22.550
of how this actually works.

00:04:22.700 --> 00:04:27.610
We have the Demo 1 machine.

00:04:27.610 --> 00:04:27.610
Now what I've done

00:04:29.400 --> 00:04:34.480
is I've written a little
application over here that syncs.

00:04:34.480 --> 00:04:35.540
And that's wrong.

00:04:35.540 --> 00:04:46.280
Yeah, that's wrong.

00:04:46.280 --> 00:04:47.530
Just a moment.

00:04:59.160 --> 00:05:02.060
Okay, so what I've done over here
is I've written this little

00:05:02.060 --> 00:05:04.140
application that knows how to sync.

00:05:04.180 --> 00:05:07.120
And what does it sync with?

00:05:07.120 --> 00:05:07.120
Well,

00:05:08.480 --> 00:05:10.780
It syncs contacts with address book.

00:05:10.940 --> 00:05:13.540
So you'll see right now what
I've got is I've got a number

00:05:13.540 --> 00:05:16.470
of entries in the address book,
but my little demo

00:05:16.470 --> 00:05:19.040
application is empty of data.

00:05:19.380 --> 00:05:22.920
So I'm just going to come
along and hit the Sync button.

00:05:23.770 --> 00:05:26.140
It syncs contacts with address book.

00:05:26.140 --> 00:05:28.840
So you'll see right now what
I've got is I've got a number

00:05:28.940 --> 00:05:31.770
of entries in the address book,
but my little demo

00:05:31.770 --> 00:05:34.580
application is empty of data.

00:05:34.580 --> 00:05:38.220
So I'm just going to come
along and hit the Sync button.

00:05:53.720 --> 00:05:56.620
But now let's actually look at some
of the stuff that you get for free.

00:05:56.730 --> 00:05:59.240
So let's do a real-world case.

00:05:59.310 --> 00:06:04.550
So now a user comes over into
the People application and

00:06:04.550 --> 00:06:07.240
makes a change to an entry.

00:06:07.240 --> 00:06:10.030
John Doe is now John Doe
spelled like you would spell

00:06:10.420 --> 00:06:12.380
it if you were kneading bread.

00:06:12.380 --> 00:06:18.100
And then over in the address book,
before I sync, I'm actually going to make

00:06:18.100 --> 00:06:19.720
an incompatible change.

00:06:19.720 --> 00:06:22.890
So now over in the address book,
I've got John Doe.

00:06:23.510 --> 00:06:24.950
Okay.

00:06:25.060 --> 00:06:28.240
So now, what happens when I come
over here and sync?

00:06:28.240 --> 00:06:30.740
I poke the sync button in
the People application,

00:06:30.740 --> 00:06:35.440
and what's going to happen is I'm going
to get this conflict resolution dialog.

00:06:35.500 --> 00:06:39.830
Again, I wrote no code in my little
demo application to make

00:06:39.830 --> 00:06:41.760
this user interface come up.

00:06:41.830 --> 00:06:47.460
The sync engine recognizes this change,
is a conflict, gives me the opportunity

00:06:47.460 --> 00:06:50.140
to come over and say,
"Which one do you want?

00:06:50.290 --> 00:06:52.360
Do you want Dough or Dough?"

00:06:53.760 --> 00:06:55.980
I can come over,
select the one that I want,

00:06:56.040 --> 00:06:57.880
the one in the People application.

00:06:57.920 --> 00:07:00.080
No more DOLT for this
whole time here now.

00:07:00.100 --> 00:07:04.080
And again, this gives me now an
opportunity to sync again.

00:07:04.420 --> 00:07:09.690
And now you see that both applications
are in sync with the data that

00:07:09.690 --> 00:07:13.340
I chose from the conflict resolver.

00:07:14.850 --> 00:07:16.800
Okay.

00:07:16.990 --> 00:07:17.970
Pretty cool.

00:07:18.140 --> 00:07:20.810
Okay,
can we go back to the slides please?

00:07:22.930 --> 00:07:25.420
Okay, so again,
what we're going to be doing for the

00:07:25.420 --> 00:07:30.900
rest of the period is kind of looking at,
you know, yeah, the slides, yeah,

00:07:30.900 --> 00:07:32.160
I didn't go through all my slides.

00:07:32.160 --> 00:07:34.010
We're going to be talking
about making sync work.

00:07:34.120 --> 00:07:37.580
We're going to be talking
about what actually went on

00:07:37.710 --> 00:07:39.470
during that sync session.

00:07:40.880 --> 00:07:42.880
When I was adding and
deleting and modifying,

00:07:42.980 --> 00:07:44.160
what was actually happening?

00:07:44.350 --> 00:07:46.210
Talk about making sync work.

00:07:46.300 --> 00:07:48.800
Now, really, again,
to reiterate this point,

00:07:48.800 --> 00:07:51.580
if you've got this scenario here,
you've got your application

00:07:51.580 --> 00:07:52.780
sitting out there now.

00:07:52.960 --> 00:07:54.040
It doesn't sync.

00:07:54.040 --> 00:07:59.870
And now you want to make it possible
to interact with the sync engine

00:07:59.870 --> 00:08:02.230
and sort of join that sync ecology.

00:08:02.270 --> 00:08:04.980
Well, the thing that you need to do,
the one high-level thing you need to

00:08:04.980 --> 00:08:06.500
do is you need to write a sync client.

00:08:06.520 --> 00:08:08.480
Okay, talk's over, right?

00:08:08.680 --> 00:08:09.200
That's all done.

00:08:09.320 --> 00:08:09.520
No.

00:08:11.360 --> 00:08:15.440
But now what you need to do, right,
is go and learn about our APIs,

00:08:15.510 --> 00:08:18.900
read our documentation,
go out and experiment, you know,

00:08:18.900 --> 00:08:24.670
go out and use the code,
make some attempts, find some bugs,

00:08:24.730 --> 00:08:25.880
fix some bugs, and so forth.

00:08:26.140 --> 00:08:29.140
But now what I'd really like to do
is like what I mentioned before,

00:08:29.140 --> 00:08:31.990
is to give you some really
sort of high-level ideas,

00:08:31.990 --> 00:08:36.530
things that you won't get by just going
and reading the API documentation or

00:08:36.530 --> 00:08:41.840
looking at our tutorials and the other
information that we have on the Internet.

00:08:41.840 --> 00:08:44.360
As fine as it is,
I would like to just give you a

00:08:44.360 --> 00:08:48.120
few ideas that you can take away
with you as the high-level concepts

00:08:48.120 --> 00:08:52.020
to think about when it comes time
to write your own sync client.

00:08:52.020 --> 00:08:55.840
And I describe those as data
handling in your application.

00:08:56.330 --> 00:08:58.910
You need to do some work.

00:08:59.380 --> 00:09:03.880
to handle data,
to convert it to and from the format

00:09:04.630 --> 00:09:07.100
that the sync engine wants to work with.

00:09:07.810 --> 00:09:12.700
Next,
you need to think about registration.

00:09:12.750 --> 00:09:16.080
You need to tell the sync engine
about your client and about the

00:09:16.080 --> 00:09:18.510
kinds of data that you'll be syncing.

00:09:18.750 --> 00:09:23.200
Next, there's the real work,
the real actual moving data

00:09:23.200 --> 00:09:26.890
back and forth between your
code and the sync engine.

00:09:27.310 --> 00:09:28.830
And so there's session control flow.

00:09:29.110 --> 00:09:31.440
And finally,
there are a number of features,

00:09:31.440 --> 00:09:35.200
there are a number of options that
the API makes available to you.

00:09:35.240 --> 00:09:38.510
And you can take advantage of these
features depending on what kinds of

00:09:38.870 --> 00:09:42.200
applications you have and what specific
kinds of syncing you want to do.

00:09:42.200 --> 00:09:48.370
And so these four things really
sort of give us a roadmap,

00:09:48.950 --> 00:09:51.190
the things that we're going to be talking
about for the rest of the session.

00:09:51.910 --> 00:09:53.380
Okay?

00:09:53.520 --> 00:09:56.720
So now, you know,
this is sort of one of these, you know,

00:09:56.730 --> 00:09:58.580
hands-on setup sort of things.

00:09:58.660 --> 00:10:03.040
And so if you go--if you've downloaded
the sample code for the session,

00:10:03.040 --> 00:10:06.980
session 122,
add Sync to your application,

00:10:06.980 --> 00:10:11.280
there's actually a little Xcode
project in there for the people

00:10:11.280 --> 00:10:13.900
application that you see demonstrated
that I'm actually going to be using

00:10:13.900 --> 00:10:15.690
for the rest of the--rest of the time.

00:10:15.690 --> 00:10:16.970
And you can follow along.

00:10:16.970 --> 00:10:20.910
There will be actually quite a few
code examples and you may wish to,

00:10:21.210 --> 00:10:24.790
you know,
sort of get yourself oriented to those.

00:10:24.790 --> 00:10:24.790
But

00:10:24.950 --> 00:10:26.540
The code examples that
I'll be looking at,

00:10:26.540 --> 00:10:28.130
that I'll be showing, look like this.

00:10:28.260 --> 00:10:32.190
You'll see right across the top
is the file name that I'll be in.

00:10:33.490 --> 00:10:35.350
And then the method beneath that,
and then of course the

00:10:35.350 --> 00:10:36.460
code example beneath that.

00:10:36.580 --> 00:10:37.990
So if you're interested
in following along,

00:10:37.990 --> 00:10:39.640
that's sort of how to do it.

00:10:39.680 --> 00:10:43.990
If not, if you'd just rather look at me,
well maybe not.

00:10:44.080 --> 00:10:47.000
Maybe it'd be better if you look at code.

00:10:47.120 --> 00:10:49.190
This is sort of how it works,
so you can kind of follow along.

00:10:49.330 --> 00:10:51.760
So now we're back to this, the roadmap.

00:10:51.870 --> 00:10:56.240
And first on there is data handling,
so let's get right into that.

00:10:56.910 --> 00:11:01.290
There's two things to really think
about in terms of data handling.

00:11:01.360 --> 00:11:05.160
The thing that you need to
do to kind of make your app,

00:11:05.160 --> 00:11:11.360
your data sort of work with and interact
the sync engine is that first point,

00:11:11.360 --> 00:11:15.040
converting to and from
the sync data format,

00:11:15.040 --> 00:11:16.310
if you will.

00:11:16.720 --> 00:11:19.500
And secondly,
optimizing to track data changes.

00:11:19.560 --> 00:11:20.360
Let's look at the first one.

00:11:20.360 --> 00:11:22.610
First, converting data.

00:11:22.740 --> 00:11:25.400
So now you might imagine
from this People application

00:11:25.410 --> 00:11:28.520
syncing with Address Book,
some names from Address Book going

00:11:28.740 --> 00:11:30.300
into that People application.

00:11:30.300 --> 00:11:32.820
Well, you might imagine that I have
something like this in my

00:11:32.820 --> 00:11:34.720
little People application,
a person object.

00:11:34.990 --> 00:11:37.350
It's got a couple of fields in it.

00:11:38.520 --> 00:11:39.500
I might have something like that.

00:11:39.500 --> 00:11:41.560
It turns out, actually,
the way that this is implemented

00:11:41.560 --> 00:11:44.300
in the People application
is just a little record.

00:11:44.300 --> 00:11:47.380
It's just a little dictionary that
has some named keys for the things

00:11:47.500 --> 00:11:49.240
that are supported by the application.

00:11:49.320 --> 00:11:53.790
So we've got a first name key
and a last name key and so forth.

00:11:53.960 --> 00:11:58.500
And so your job is to go and
then convert that data from your

00:11:58.500 --> 00:12:04.520
application-specific format to the format
that the sync engine will understand.

00:12:05.040 --> 00:12:08.020
So you're going to have to
have this conversion step,

00:12:08.020 --> 00:12:12.840
this method or function that you're going
to need to write to do this conversion.

00:12:12.840 --> 00:12:15.440
You'll see in this example,
the conversion is very,

00:12:15.440 --> 00:12:16.180
very straightforward.

00:12:16.180 --> 00:12:18.240
It may be that way for your application.

00:12:18.240 --> 00:12:22.270
You may actually need to do
some serious work in this step.

00:12:23.800 --> 00:12:28.760
I've just written in the
People application just a very,

00:12:28.760 --> 00:12:32.820
very simple method to just go and
basically convert a dictionary from one

00:12:32.950 --> 00:12:35.050
form to a dictionary in another form.

00:12:35.350 --> 00:12:38.350
The one that my application uses
on the one hand to the one that

00:12:38.350 --> 00:12:40.040
the sync engine uses on the other.

00:12:40.100 --> 00:12:41.430
It's very, very straightforward.

00:12:41.440 --> 00:12:45.550
You see sort of the one highlighted
line there just sort of twiddling one

00:12:45.550 --> 00:12:48.320
sort of first name form to another.

00:12:48.360 --> 00:12:51.280
Again, in this case, very,
very straightforward.

00:12:52.110 --> 00:12:54.690
Similarly,
when the sync engine communicates

00:12:54.690 --> 00:12:58.400
back to you new information,
you need to then actually convert

00:12:58.710 --> 00:13:02.680
it to the internal representation
that your application uses.

00:13:02.720 --> 00:13:07.450
And so, again, there's just a method,
convert sync record to app record,

00:13:07.450 --> 00:13:09.210
just going the other way.

00:13:09.660 --> 00:13:12.050
Taking a dictionary,
converting it from one form back to

00:13:12.050 --> 00:13:14.160
the form that you use in your code.

00:13:14.330 --> 00:13:19.960
Again, very, very straightforward.

00:13:22.060 --> 00:13:23.430
So next.

00:13:23.700 --> 00:13:30.400
This next step, this optimization step,
is really just sort of a suggestion.

00:13:30.400 --> 00:13:31.650
It's not really a requirement.

00:13:31.710 --> 00:13:34.100
This data conversion that I was
mentioning before is really

00:13:34.100 --> 00:13:36.940
something that you must do,
whereas this is something that it's

00:13:37.040 --> 00:13:40.630
just strongly suggested that you do,
this tracking data changes.

00:13:40.730 --> 00:13:41.700
Well, why is that?

00:13:41.740 --> 00:13:44.420
Let me just, you know,
illustrate it with a small example.

00:13:44.420 --> 00:13:47.790
So let's say you're in your
application and you want to sync.

00:13:48.270 --> 00:13:56.770
So if you're not tracking data changes,
in other words,

00:13:56.770 --> 00:13:56.770
if you don't know what has changed
in your data since you last synced,

00:13:56.970 --> 00:13:57.900
Let's take this scenario.

00:13:57.900 --> 00:14:01.400
You've synced,
you've made some changes over time,

00:14:01.400 --> 00:14:02.690
and now you're ready to sync again.

00:14:02.790 --> 00:14:08.290
If you don't know what's just happened
only in that period between two syncs,

00:14:08.900 --> 00:14:13.260
The only thing that you can do is
actually then tell the sync engine

00:14:13.280 --> 00:14:17.580
about all the data that you have,
all of your sync information.

00:14:17.660 --> 00:14:21.250
It's your only option if you
don't know what has just changed

00:14:21.570 --> 00:14:23.990
or knowing only about the change.

00:14:23.990 --> 00:14:26.920
Sync session to sync session,
this is what you need to do.

00:14:26.920 --> 00:14:28.890
Push all your data.

00:14:29.740 --> 00:14:31.930
The alternative, of course,
is that if you do know, well,

00:14:31.930 --> 00:14:34.860
then you can just tell
the sync engine about,

00:14:34.900 --> 00:14:40.450
here's the only-- just what's
changed since I last spoke to you.

00:14:40.800 --> 00:14:44.190
And as you can see here now,
maybe in the case of

00:14:44.200 --> 00:14:46.800
the People application,
we only had a half a dozen records.

00:14:46.800 --> 00:14:48.300
It doesn't really make
that much of a difference.

00:14:48.340 --> 00:14:56.400
But if you're syncing a lot of data,
you can imagine that, well,

00:14:56.400 --> 00:14:59.890
pushing 10,000 records is not going
to go as nice for your user as

00:14:59.890 --> 00:14:59.890
just pushing maybe a small handful.

00:15:00.340 --> 00:15:03.170
And so again,
tracking these data changes,

00:15:03.290 --> 00:15:05.570
it's really strongly suggested.

00:15:06.050 --> 00:15:12.100
Particularly if your data set gets large,
for some definition of large.

00:15:14.890 --> 00:15:18.140
Sort of more suggested the
more you get into the thousands

00:15:18.140 --> 00:15:20.940
and ten thousands of things.

00:15:22.660 --> 00:15:25.580
Okay, now here's just a very,
very simple example of how the

00:15:25.670 --> 00:15:27.130
People application tracks changes.

00:15:27.170 --> 00:15:30.100
I just have a change object.

00:15:30.280 --> 00:15:32.830
It's sort of--this is in some
ways you might say this is sort of

00:15:32.830 --> 00:15:35.440
like the command design pattern.

00:15:35.440 --> 00:15:39.240
I just have an object
representing a change,

00:15:39.370 --> 00:15:41.990
an add, delete, or a modify.

00:15:43.240 --> 00:15:45.550
Over here,
you see this table view set object

00:15:45.650 --> 00:15:51.200
value just coming back right
from the Cocoa table view there.

00:15:51.370 --> 00:15:54.460
This is the way that the
application deals with the changes.

00:15:54.690 --> 00:15:58.530
And I just create one of
these little change objects,

00:15:58.730 --> 00:16:01.870
tell my application to apply it,
and over here, you see the key point.

00:16:02.060 --> 00:16:06.660
I actually use this to change
the internal data store,

00:16:06.660 --> 00:16:09.560
but you'll see that highlighted
line over there is I'm actually

00:16:09.560 --> 00:16:11.890
storing away that change object.

00:16:13.530 --> 00:16:14.540
I'll go and empty that.

00:16:14.540 --> 00:16:18.810
I'll go and empty that change
store when it comes time to sync.

00:16:21.170 --> 00:16:23.060
See, just got a little fringe
benefit in the bottom there.

00:16:23.060 --> 00:16:25.100
I can actually just implement
these for undo as well.

00:16:25.180 --> 00:16:26.840
So if you're not using
something like Core Data,

00:16:26.840 --> 00:16:30.770
which takes advantage--
or gives you that benefit,

00:16:30.770 --> 00:16:36.660
I mean, this is a very,
very useful pattern just generally.

00:16:36.690 --> 00:16:40.680
OK, but the important point is, again,
that I'm storing away this change.

00:16:43.380 --> 00:16:45.960
And again, that's just really,
really very,

00:16:45.960 --> 00:16:49.380
very strongly suggested if you're
going to be-- particularly if

00:16:49.380 --> 00:16:52.510
you're going to be dealing and
syncing with large data sets.

00:16:52.920 --> 00:16:54.710
And so again,
these are the two things that you

00:16:54.710 --> 00:17:01.950
need to think about in terms of data
handling to start syncing in your app.

00:17:02.680 --> 00:17:03.860
Okay, next.

00:17:03.960 --> 00:17:08.380
We go from data handling,
and now the second thing is registration.

00:17:08.640 --> 00:17:09.940
Well, what do you need to register?

00:17:09.940 --> 00:17:12.400
There are two things
you need to register.

00:17:12.590 --> 00:17:17.190
There's a sync schema and
a sync client description.

00:17:18.210 --> 00:17:23.260
Now, I have to admit to you that I'm
relatively new in sync technology.

00:17:23.510 --> 00:17:27.010
I've been working for a few
years on Safari and just recently

00:17:27.240 --> 00:17:28.880
came over to work on sync.

00:17:28.900 --> 00:17:31.330
And this is actually something that
was confusing to me in the beginning.

00:17:31.330 --> 00:17:34.460
So hopefully,
if you're new to sync as well,

00:17:34.540 --> 00:17:38.330
I can sort of maybe help you
and maybe save you some time on

00:17:38.330 --> 00:17:42.990
trying to get an understanding
of what these two concepts are.

00:17:43.830 --> 00:17:46.700
So first, the Sync Schema.

00:17:46.770 --> 00:17:50.670
What it does is it describes
data to the sync engine.

00:17:51.450 --> 00:17:56.240
In some ways it's analogous to,
it's really almost like a class,

00:17:56.240 --> 00:17:58.370
a class description.

00:17:59.950 --> 00:18:02.430
in say object-oriented programming.

00:18:02.550 --> 00:18:06.940
It's not exactly the same but it's
sort of the same conceptual area.

00:18:06.940 --> 00:18:11.250
And inside of these sync
schemas are entities,

00:18:11.250 --> 00:18:16.280
elements of just a data model,
just a thing in the schema.

00:18:16.280 --> 00:18:19.470
And there are also relationships which
are sort of referencing entities,

00:18:19.470 --> 00:18:23.540
referencing other entities in the schema.

00:18:23.540 --> 00:18:26.260
If you're familiar with databases,
you'll know that these two terms would

00:18:26.260 --> 00:18:30.100
probably be pretty familiar to you,
entities and relationships.

00:18:30.100 --> 00:18:32.820
And as a matter of fact,
sync schemas are really just that.

00:18:32.820 --> 00:18:36.370
They're just entity relationship graphs.

00:18:37.240 --> 00:18:39.840
And so you might be thinking, well,
you know, that People application,

00:18:39.840 --> 00:18:43.700
it just sort of did some
first names and last names,

00:18:43.700 --> 00:18:46.540
and that's all well and good for me,
for my, you know,

00:18:46.540 --> 00:18:48.360
nice little toy example up here on stage.

00:18:48.380 --> 00:18:51.430
But I want to point out to you
that these sync schemas can get

00:18:51.600 --> 00:18:54.670
to be really pretty detailed,
really pretty complex in

00:18:54.810 --> 00:18:58.960
the number of entities,
kinds of relationships in this.

00:18:59.020 --> 00:19:01.500
Really,
the important point is that you can make

00:19:01.500 --> 00:19:03.810
your own schemas to represent your data.

00:19:03.840 --> 00:19:06.620
It's one of the things
that's open about the system.

00:19:06.740 --> 00:19:12.550
It's one of the things that you as
developers can come in and add to to make

00:19:12.570 --> 00:19:14.760
it work for your particular application.

00:19:16.550 --> 00:19:21.100
And I just want to introduce one
more term having to do with schemas,

00:19:21.100 --> 00:19:27.340
because I'm probably
going to say it later.

00:19:27.340 --> 00:19:27.340
And I just want to make sure
that you know what I'm talking

00:19:27.340 --> 00:19:27.340
about when I do say it.

00:19:27.340 --> 00:19:27.340
And that's the notion of a data class.

00:19:27.310 --> 00:19:29.760
And this is really,
this data class is really,

00:19:29.770 --> 00:19:32.490
it's really just a logical
grouping of entities.

00:19:32.490 --> 00:19:34.300
And, well, logical to whom?

00:19:34.300 --> 00:19:35.590
To developers or users.

00:19:35.660 --> 00:19:37.980
Well, it actually turns out
to be logical to users.

00:19:37.980 --> 00:19:42.960
So you'll have a data class for contacts,
for instance.

00:19:42.960 --> 00:19:46.750
And that will include things like...

00:19:47.540 --> 00:19:52.930
Actual people, groups, things like that.

00:19:53.750 --> 00:20:01.690
So the whole sort of contact schema
addresses and IM addresses and so forth.

00:20:02.450 --> 00:20:10.320
Okay, so now again to stress this point,
if you have your own code, your own data,

00:20:10.660 --> 00:20:14.960
just a very simple little example,
let's say you have a little

00:20:14.960 --> 00:20:19.520
calendaring application or something
like that that keeps track of

00:20:19.520 --> 00:20:21.800
names and the start dates of events.

00:20:21.800 --> 00:20:25.450
Here I've got my vacation
which is actually true,

00:20:25.500 --> 00:20:27.640
it starts on 6/13.

00:20:27.640 --> 00:20:29.450
All I have to do is
get through this talk.

00:20:29.460 --> 00:20:31.680
So now it starts on 6/13.

00:20:31.680 --> 00:20:34.860
Well here's how you would represent
that schema to the sync engine.

00:20:34.930 --> 00:20:38.730
Just a name as well,
it's going to be a string and

00:20:38.730 --> 00:20:41.010
a start will be an NSDate.

00:20:42.060 --> 00:20:43.300
Just very simple and straightforward.

00:20:43.300 --> 00:20:49.660
Now, you may wish to go along and
sort of continue on that example,

00:20:49.660 --> 00:20:53.500
go out and completely flesh that
out so that it represents the data

00:20:53.570 --> 00:20:55.900
that you have in your application.

00:20:56.040 --> 00:21:03.830
But what you can also do is you can
use an existing schema on the system.

00:21:03.830 --> 00:21:06.600
And here are a couple of examples of
schemas that ship on Mac OS X Tiger.

00:21:08.010 --> 00:21:13.100
You saw in the People application
that application taking advantage

00:21:13.450 --> 00:21:16.700
of the contact schema and actually
syncing contacts with the address book.

00:21:16.850 --> 00:21:20.380
There's actually even a pretty
important point that I want to stress

00:21:20.380 --> 00:21:24.600
to you is that the People application
is not syncing with the address book.

00:21:25.260 --> 00:21:26.920
It's syncing with contacts.

00:21:27.150 --> 00:21:32.080
It's syncing with the contacts schema
that the sync engine knows about.

00:21:32.120 --> 00:21:36.000
It just so happens that the
address book also syncs with the

00:21:36.000 --> 00:21:38.960
contact schema and it's sort of,
you know,

00:21:38.960 --> 00:21:44.270
you might even say the canonical sync
client for that particular data class.

00:21:44.610 --> 00:21:46.490
But it's an important
conceptual difference is that

00:21:46.520 --> 00:21:50.380
you're syncing with a schema,
you're not syncing with an app.

00:21:52.880 --> 00:21:56.170
And so, if we just take a little look at
what is in that contact scheme,

00:21:56.170 --> 00:22:00.740
all the things like you might expect,
contacts, groups, email addresses,

00:22:00.740 --> 00:22:02.710
street addresses, and so forth.

00:22:04.110 --> 00:22:06.350
But that point that I was
just making is that you can,

00:22:06.440 --> 00:22:09.570
if you wish,
come along and just sync with a portion

00:22:10.090 --> 00:22:12.640
of one of these existing schemas.

00:22:12.720 --> 00:22:16.940
Your application may sync
with a little bit of contacts,

00:22:17.040 --> 00:22:21.390
a little bit of calendaring information,
and then a little bit of your own

00:22:21.530 --> 00:22:26.140
application-specific information
to make up sort of the recipe

00:22:26.140 --> 00:22:28.440
of what your application syncs.

00:22:28.510 --> 00:22:29.310
And this is possible.

00:22:29.320 --> 00:22:31.580
You saw an example of it.

00:22:32.710 --> 00:22:33.700
Okay?

00:22:33.700 --> 00:22:35.130
So now, just kind of get down into
the details a little bit.

00:22:35.200 --> 00:22:38.700
These schemas are defined in plist files.

00:22:38.730 --> 00:22:39.690
You can make one in Xcode.

00:22:39.700 --> 00:22:43.250
If you go to Xcode and choose
New Project and scroll down that list,

00:22:43.250 --> 00:22:47.220
you'll actually see that there is
a project type for a sync schema.

00:22:48.910 --> 00:22:54.810
strongly suggested that you use
the Xcode project to make it.

00:22:55.910 --> 00:22:57.560
Okay, so now back to registration.

00:22:57.560 --> 00:23:00.140
Now the second one on that item
is that client description.

00:23:00.240 --> 00:23:00.840
Well, what does that do?

00:23:00.840 --> 00:23:03.800
How is that different
from the sync schema?

00:23:04.050 --> 00:23:06.440
Well, see,
this client description is actually

00:23:06.440 --> 00:23:11.800
what your client uses to tell
the sync engine about itself.

00:23:11.920 --> 00:23:15.650
So the sync schema talks about data.

00:23:15.900 --> 00:23:21.140
The sync client really is talking
about an actual piece of code

00:23:21.140 --> 00:23:21.140
that's going to be syncing.

00:23:21.610 --> 00:23:23.580
Okay,
it's also described in a plist file.

00:23:23.670 --> 00:23:25.440
But really, what's the difference
between these two things?

00:23:25.440 --> 00:23:28.430
Again, that sync schema describes
data to the sync engine and

00:23:28.430 --> 00:23:31.260
the sync client description,
another way of thinking maybe

00:23:31.330 --> 00:23:34.260
is just a bridge between the
application and the sync engine.

00:23:34.390 --> 00:23:42.490
And over that bridge is going to
be going things as you've described

00:23:42.490 --> 00:23:42.490
them in that client description.

00:23:43.260 --> 00:23:45.150
Another way of looking at it
is maybe this sync scheme is

00:23:45.220 --> 00:23:48.200
what can possibly be synced.

00:23:48.330 --> 00:23:53.440
Defines the full range of options,
whereas the sync client description says,

00:23:53.490 --> 00:23:57.620
well, this is what I want to sync
just in this application.

00:23:58.330 --> 00:24:03.150
You may have a consumer and a
pro version of your application.

00:24:03.240 --> 00:24:06.570
Maybe that consumer version
only syncs a portion of what

00:24:06.900 --> 00:24:08.680
your pro application does.

00:24:08.850 --> 00:24:11.040
But if your user upgrades
to the pro version,

00:24:11.040 --> 00:24:14.950
you may want them to then have access
to that full version of the schema.

00:24:15.060 --> 00:24:18.000
So again, just a kind of a little
example of what the difference

00:24:18.120 --> 00:24:19.760
between these two things are.

00:24:19.880 --> 00:24:22.600
They're both described in plist files.

00:24:22.710 --> 00:24:26.240
And here's just a sort of a little,
you know, sort of naming example.

00:24:26.600 --> 00:24:29.690
You know, in the myschema.plist,
this is the sync schema.

00:24:29.880 --> 00:24:33.580
You'll see that there are data
classes and entities and attributes

00:24:33.620 --> 00:24:38.230
and relationships to things that are
required to make that sync schema work.

00:24:38.530 --> 00:24:40.350
This is documented.

00:24:40.350 --> 00:24:43.830
We're not going to go into it
in any great detail here now.

00:24:45.330 --> 00:24:48.160
The client description,
on the other hand, is again,

00:24:48.200 --> 00:24:50.940
this is the one that is actually
used by the People application.

00:24:50.940 --> 00:24:54.200
You'll see there that it's
just got those four columns.

00:24:54.200 --> 00:24:57.980
If you go and look at the contact schema,
well, it's very, very large.

00:24:58.070 --> 00:25:01.770
This is only syncing
with those four things.

00:25:04.030 --> 00:25:07.700
Okay, but again,
described in a P list file.

00:25:07.700 --> 00:25:11.520
So now if you kind of want to actually
go and do the work of this registration,

00:25:11.520 --> 00:25:14.240
which I had at the sort of
the kind of the splash graphic

00:25:14.290 --> 00:25:17.750
at the start of this section,
it was very, very straightforward.

00:25:17.760 --> 00:25:25.390
Registering a schema is just a couple
of lines of code as you can see,

00:25:25.400 --> 00:25:29.300
and also registering a client
is similarly straightforward.

00:25:29.520 --> 00:25:33.260
Of course, these are the essential steps,
sort of the bootstrap steps that

00:25:33.260 --> 00:25:36.620
you really need to do in order
to get going in your sync client.

00:25:36.640 --> 00:25:40.340
Okay, so that is registration.

00:25:43.320 --> 00:25:47.240
Now next, we're going to talk about
Session Control Flow.

00:25:47.340 --> 00:25:49.080
Pardon me a second.

00:25:54.480 --> 00:25:56.760
Okay, so Session Control Flow.

00:25:56.910 --> 00:26:00.990
So now you've kind of done the
work to get your data ready.

00:26:01.850 --> 00:26:03.360
And you've registered,
you've kind of bootstrapped

00:26:03.470 --> 00:26:05.970
the system there a little bit,
telling the sync engine about your

00:26:06.070 --> 00:26:07.720
schema and your client description.

00:26:07.720 --> 00:26:13.950
And now you actually want to go
do the work of syncing one time.

00:26:14.980 --> 00:26:17.690
And here are the steps
that you need to do.

00:26:17.790 --> 00:26:20.940
Starting a session,
negotiating the session,

00:26:20.990 --> 00:26:23.630
pushing and pulling data,
and then finishing or canceling.

00:26:23.750 --> 00:26:25.620
So let's look at these in turn.

00:26:25.780 --> 00:26:27.690
Starting a session.

00:26:28.040 --> 00:26:31.890
So this sync session is really,
and we're talking about

00:26:31.890 --> 00:26:35.130
this session control flow,
it really is this one complete

00:26:35.130 --> 00:26:37.300
transaction with the sync engine.

00:26:38.350 --> 00:26:42.040
Going and telling the data about
your data as it stands right now,

00:26:42.040 --> 00:26:46.950
getting back from the sync engine
all the new stuff that you need to

00:26:47.060 --> 00:26:50.420
worry about coming from the truth.

00:26:51.640 --> 00:26:54.660
And so there's actually two ways
that you can start a session,

00:26:54.660 --> 00:26:56.880
one synchronously and one asynchronously.

00:26:56.880 --> 00:26:59.390
Well, you say, well,
why would I need an asynchronous

00:26:59.570 --> 00:27:00.970
call to start a session?

00:27:01.060 --> 00:27:05.670
And that would be a good
question if you'd answer it,

00:27:05.670 --> 00:27:05.670
so I'll answer it.

00:27:06.010 --> 00:27:09.960
You'll actually notice if you
think back to the People example,

00:27:10.070 --> 00:27:13.500
I actually had the Sync
button in the People example,

00:27:13.660 --> 00:27:15.730
but there's no Sync button
in the Address Book.

00:27:15.860 --> 00:27:19.500
So how does the Address
Book know that it should sync?

00:27:19.680 --> 00:27:22.080
When I added that entry
to the People application,

00:27:22.080 --> 00:27:23.800
how did the Address Book get it?

00:27:24.160 --> 00:27:27.720
Well, there's actually a
notification that goes out.

00:27:28.820 --> 00:27:30.760
When the People application
started to sync,

00:27:30.880 --> 00:27:33.700
the sync engine said,
I'm syncing contacts.

00:27:33.700 --> 00:27:35.500
Anybody else interested?

00:27:35.570 --> 00:27:38.550
And the address book says, yes,
I'm interested.

00:27:39.430 --> 00:27:47.830
And so that's why you have
this asynchronous call,

00:27:47.830 --> 00:27:47.830
so that sort of invitation can
go out to other sync clients.

00:27:48.600 --> 00:27:51.260
is the first person to ask
them if they want to join in.

00:27:51.260 --> 00:27:54.210
You'll actually see there,
you're telling the entities

00:27:54.360 --> 00:27:56.560
that you're going to be syncing,
that second argument there and

00:27:56.560 --> 00:27:59.760
that begin session in background
at the bottom of the screen.

00:27:59.930 --> 00:28:03.810
And you actually then pass an object
and a selector that will get called

00:28:03.810 --> 00:28:06.600
back when the session is ready to begin.

00:28:06.730 --> 00:28:08.260
And here is that method
that performs sync.

00:28:08.260 --> 00:28:12.240
If you see there at the bottom,
it performs sync::.

00:28:12.240 --> 00:28:16.280
Here is actually what's in perform sync.

00:28:16.280 --> 00:28:18.510
You get You get a client in a session.

00:28:19.460 --> 00:28:22.900
Beginning the session may have failed,
so you check for nil.

00:28:22.900 --> 00:28:25.760
And if you actually have a good session,
you just go and do the other steps,

00:28:25.930 --> 00:28:28.550
which are on the earlier
slide-- negotiating,

00:28:28.550 --> 00:28:30.340
pushing, and then pulling.

00:28:31.670 --> 00:28:36.550
Now is a good time to actually mention
that the sync session is actually,

00:28:36.680 --> 00:28:38.510
it's really a state machine.

00:28:38.690 --> 00:28:41.390
You need to do certain
things in certain order,

00:28:41.440 --> 00:28:44.010
and this is documented very, very well.

00:28:44.360 --> 00:28:48.890
on the website and in your
developer documentation.

00:28:49.000 --> 00:28:52.950
But it's important to point out that you
can't pull then push in the same session.

00:28:53.280 --> 00:28:55.050
That will not work.

00:28:56.020 --> 00:28:58.800
And you have to negotiate to you,
you sort of have to get to an

00:28:58.800 --> 00:29:02.100
agreement with the sync engine about
what's going to happen before you

00:29:02.100 --> 00:29:04.090
can do either pushing or pulling.

00:29:04.500 --> 00:29:06.600
OK, so let's talk about
negotiating a little bit.

00:29:06.600 --> 00:29:11.320
Negotiating-- well, it's a little dose of
the real world here.

00:29:11.320 --> 00:29:13.700
Negotiating section-- you
ask for what you want,

00:29:13.710 --> 00:29:16.110
but you may not get what you ask for.

00:29:16.150 --> 00:29:20.290
It's really up to the sync
engine to tell you what kind of

00:29:20.390 --> 00:29:23.280
sync session is going to happen.

00:29:23.340 --> 00:29:29.100
Again, you can ask and your wishes will
be respected as much as possible.

00:29:29.150 --> 00:29:31.420
But again,
you may not get what you ask for.

00:29:31.520 --> 00:29:36.910
Here are the four different
kinds of sync sessions that

00:29:36.910 --> 00:29:38.060
we'll talk about here today.

00:29:38.230 --> 00:29:38.860
So there's FastSync.

00:29:38.860 --> 00:29:41.490
We described an example
of this to you before,

00:29:41.490 --> 00:29:44.170
which is just telling the sync
engine about the changes that

00:29:44.170 --> 00:29:45.880
you had since you last synced.

00:29:45.880 --> 00:29:47.910
I'll just tell you about my changes.

00:29:47.980 --> 00:29:48.780
That's it.

00:29:48.780 --> 00:29:50.120
There's Slow Syncing.

00:29:50.390 --> 00:29:53.200
I'm going to tell you
about all of my records.

00:29:53.200 --> 00:29:56.430
Interestingly here,
there's sort of--this is the

00:29:56.430 --> 00:29:57.910
way the deletes are done.

00:29:58.030 --> 00:30:01.460
If you slow sync and you don't
tell the sync engine about a record

00:30:01.460 --> 00:30:04.860
that you told it about before,
that's construed to be a delete.

00:30:07.540 --> 00:30:08.820
Okay?

00:30:08.820 --> 00:30:11.840
There's refresh syncing which is,
let's say,

00:30:11.850 --> 00:30:16.410
a scenario where you read your data file
and you notice there's some corruption.

00:30:16.500 --> 00:30:19.690
You don't have all the data
that you think you should have.

00:30:19.690 --> 00:30:23.230
You can actually ask the sync engine,
"Hey, look,

00:30:23.230 --> 00:30:25.240
I don't have all of my records.

00:30:25.240 --> 00:30:26.640
Some of them seem to be damaged.

00:30:26.640 --> 00:30:29.970
What I'm going to do is I'm going
to tell you about all the records

00:30:29.970 --> 00:30:35.280
I do have and you give me all of the
records that the truth has." Really,

00:30:35.290 --> 00:30:38.290
the important differences
here is if you don't tell the

00:30:38.290 --> 00:30:41.630
sync engine about a record,
it will not construe it as

00:30:41.630 --> 00:30:43.650
a delete in a refresh sync.

00:30:45.560 --> 00:30:46.500
Okay.

00:30:46.500 --> 00:30:49.800
And then there's Pull the Truth,
which is I just want to wipe out all

00:30:49.800 --> 00:30:54.710
of the data that I have and I want to
replace it with what the truth has.

00:30:56.120 --> 00:30:57.000
Okay.

00:30:57.000 --> 00:31:01.850
So those are the four different
kinds of sessions you can ask for.

00:31:02.150 --> 00:31:04.300
And here's a little bit
about how you ask for them.

00:31:04.300 --> 00:31:08.430
So in this Negotiate Session method,
if you remember that Perform Sync method,

00:31:08.560 --> 00:31:10.650
the first thing, Negotiate Session.

00:31:11.080 --> 00:31:13.840
If we just step through those quickly,
FastSync, well, FastSync is the default.

00:31:13.950 --> 00:31:17.110
So you don't have to do
anything to ask for that.

00:31:17.240 --> 00:31:19.300
You don't have to make any API call.

00:31:19.460 --> 00:31:21.490
That's the base assumption.

00:31:22.960 --> 00:31:29.290
If you do want to slow sync,
you tell the sync engine, well,

00:31:29.290 --> 00:31:29.290
I want to push all the records
for a particular entity name.

00:31:29.740 --> 00:31:34.710
So for contacts,
I want to push everyone that I have.

00:31:36.370 --> 00:31:41.850
For Refresh Sync, well,
I've reset all of my entity names.

00:31:42.010 --> 00:31:42.500
Excuse me.

00:31:42.550 --> 00:31:43.300
Yeah.

00:31:43.300 --> 00:31:45.180
Reset all of my entity names.

00:31:45.280 --> 00:31:49.730
This, both of these pass an array,
as you can see, of entity names.

00:31:50.350 --> 00:31:53.450
Now, pulling the truth is actually
sort of fibbing a little.

00:31:53.500 --> 00:31:58.210
That part of negotiation actually has
to happen before you start your session.

00:31:58.560 --> 00:32:02.490
It's sort of kind of such a special
operation that the sync engine

00:32:02.490 --> 00:32:06.060
needs to know about that actually
even before you start the session.

00:32:06.160 --> 00:32:10.070
So you'll see that
background call on the very,

00:32:10.080 --> 00:32:11.330
very bottom.

00:32:11.330 --> 00:32:15.770
And previous to that,
there's the check to see whether

00:32:15.770 --> 00:32:16.240
or not the sync mode that
you want is pull the truth.

00:32:19.200 --> 00:32:21.200
Okay.

00:32:21.360 --> 00:32:22.580
Okay, so that's about negotiation.

00:32:22.630 --> 00:32:26.160
What kind of sync session
are you going to have?

00:32:26.270 --> 00:32:30.020
So next,
once you have asked for your session,

00:32:30.020 --> 00:32:31.030
you push.

00:32:31.170 --> 00:32:35.830
And pushing is all about just telling the
sync engine about your application data.

00:32:36.340 --> 00:32:39.000
Okay, so now when you get
into the doing pushing,

00:32:39.000 --> 00:32:43.110
here's sort of like where
you find out what you got.

00:32:43.610 --> 00:32:46.280
from the Sync Engine,
you asked for some things

00:32:46.290 --> 00:32:47.980
in the negotiation phase.

00:32:47.980 --> 00:32:50.190
Here's where you find your answer.

00:32:50.780 --> 00:32:53.190
So in pushing data for session,
this line on the top is,

00:32:53.580 --> 00:32:56.270
should I push all the records
for a particular entity name?

00:32:56.440 --> 00:33:01.780
And if the answer to that question
comes back yes from the sync session,

00:33:01.780 --> 00:33:03.050
you slow sync.

00:33:03.190 --> 00:33:03.830
That's what this is.

00:33:03.920 --> 00:33:08.100
That's what a yes answer
from this method tells you.

00:33:08.220 --> 00:33:10.330
And you'll actually see there on
the second highlighted line that

00:33:10.340 --> 00:33:14.600
what you're doing there is that I'm
actually records is the data structure

00:33:14.600 --> 00:33:17.740
in the people application that contains
all of the records that I have.

00:33:17.740 --> 00:33:21.060
So I'm telling,
I'm enumerating over those.

00:33:21.160 --> 00:33:22.860
And you actually then
see a few lines down.

00:33:22.860 --> 00:33:25.920
If you look for the convert line,
you'll actually see that that's the step

00:33:26.030 --> 00:33:29.630
where I'm actually doing this conversion,
that data handling step of

00:33:29.730 --> 00:33:33.050
converting from an application
record to a sync record.

00:33:34.120 --> 00:33:36.100
And then going and
telling the sync session,

00:33:36.100 --> 00:33:40.880
push those changes down
at the very bottom there.

00:33:41.070 --> 00:33:43.720
Okay, so that's slow syncing.

00:33:44.280 --> 00:33:47.600
Here, should I push the changes
for the entity name?

00:33:47.600 --> 00:33:52.070
Well, that's pretty clear that
then this is a fast sync.

00:33:52.230 --> 00:33:55.190
And you'll see that the object
that I'm enumerating over now is

00:33:55.310 --> 00:34:00.120
that mchanges object that I had
before that I was storing away after

00:34:00.120 --> 00:34:05.180
I got the information back from
the user after handling the change

00:34:05.230 --> 00:34:07.940
in the table in the user interface.

00:34:07.990 --> 00:34:11.270
This is where I just
iterate over all of those.

00:34:12.900 --> 00:34:18.200
And then go Add, Modify,
Delete as the change object says.

00:34:18.600 --> 00:34:20.340
He was just sort of
skipping down a little bit,

00:34:20.340 --> 00:34:22.390
that same method.

00:34:22.560 --> 00:34:24.850
If I'm modifying,
I'm then going and converting my

00:34:24.850 --> 00:34:26.450
app record to a sync record again.

00:34:26.650 --> 00:34:29.260
And I'm pushing the
changes from that record.

00:34:29.460 --> 00:34:32.100
There's actually even a little
opportunity for an optimization here.

00:34:32.100 --> 00:34:35.720
If my record was particularly large,
I don't even have to

00:34:35.770 --> 00:34:36.940
push the whole record.

00:34:36.980 --> 00:34:40.900
I can just push sort of the
elements of the record that change.

00:34:40.960 --> 00:34:44.220
see that two commented outlines there.

00:34:44.410 --> 00:34:49.540
Sort of the my sync change with change,
sort of waving my hands here to say,

00:34:49.810 --> 00:34:53.500
you could write a method that
would then go and just extract out,

00:34:53.500 --> 00:34:56.740
if you change just the first
name and not the last name,

00:34:56.780 --> 00:35:01.890
the sync engine,
you can get down to that level

00:35:01.890 --> 00:35:01.890
of granularity and tell the
sync engine just about that.

00:35:03.100 --> 00:35:05.560
Okay, so that's pushing.

00:35:05.650 --> 00:35:07.170
And now pulling.

00:35:07.540 --> 00:35:10.510
So now pulling changes is
all about getting changes

00:35:10.650 --> 00:35:12.440
back from the sync engine.

00:35:12.480 --> 00:35:16.530
Okay, after you've pushed,
you pull changes.

00:35:17.400 --> 00:35:19.310
So now there's a little
bit of negotiation that

00:35:19.310 --> 00:35:20.630
needs to go along here now.

00:35:20.640 --> 00:35:25.820
Again, parts of the answer coming back
about what kind of session you have.

00:35:27.780 --> 00:35:31.400
So you ask this question, sync session,
should I pull changes for

00:35:31.480 --> 00:35:33.740
the entity name at all?

00:35:33.780 --> 00:35:36.950
Well, if not, then no,
no pulling is to be done and you

00:35:36.950 --> 00:35:38.380
can just return at this point.

00:35:39.840 --> 00:35:40.640
No polling.

00:35:40.670 --> 00:35:44.270
However, if that comes back yes,
you can ask it, well,

00:35:44.400 --> 00:35:48.180
should I replace all the records on the
client for this particular entity name?

00:35:48.230 --> 00:35:51.190
If this comes back yes,
it means you're pulling the truth.

00:35:51.740 --> 00:35:54.380
Now, an important point,
just something that just may not

00:35:54.380 --> 00:35:58.980
be readily apparent to you now is
don't delete all your data now.

00:35:59.110 --> 00:36:02.730
Now would be a bad time to
throw away all your data.

00:36:02.840 --> 00:36:05.520
The reason for that is the line
right beneath that is that,

00:36:05.620 --> 00:36:08.340
okay, I'm actually ready to pull.

00:36:08.450 --> 00:36:10.530
And you'll see that there's
a before date on that line.

00:36:10.630 --> 00:36:15.370
Prepare to pull changes for
entity name before date.

00:36:16.020 --> 00:36:17.660
You may never return.

00:36:17.730 --> 00:36:19.900
Or it may return no.

00:36:19.900 --> 00:36:21.120
Now think about that.

00:36:21.180 --> 00:36:25.810
If you said, "Okay,
should I replace all of my records?" Yes,

00:36:25.860 --> 00:36:26.290
great.

00:36:26.490 --> 00:36:27.660
Throw all my data away.

00:36:27.790 --> 00:36:29.330
And then this method returns no.

00:36:29.620 --> 00:36:33.490
Well, you just left the user
with a nice empty window.

00:36:33.980 --> 00:36:37.500
threw away all your local data and didn't
get any new data from the sync engine.

00:36:37.530 --> 00:36:38.730
Well, what do you do then?

00:36:38.760 --> 00:36:40.840
So there's actually--
you need to save that.

00:36:41.170 --> 00:36:50.130
Save sort of the state that you
want to replace all your records

00:36:50.130 --> 00:36:51.300
and wait until the sync engine says,
OK, yeah, you're ready to pull now.

00:36:52.040 --> 00:36:54.180
And then you can go and delete your data.

00:36:54.190 --> 00:36:57.520
So it's kind of a, again,
a sort of an interesting point which

00:36:57.520 --> 00:37:02.520
may not be readily apparent from
just the API description itself.

00:37:04.300 --> 00:37:06.250
about pulling.

00:37:06.440 --> 00:37:06.900
Okay.

00:37:06.900 --> 00:37:15.020
So when you pull data from a session,
it's just kind of in some ways very,

00:37:15.020 --> 00:37:18.500
very similar to pushing data.

00:37:18.500 --> 00:37:18.500
You get back an object,
you enumerate over the changes, adds,

00:37:18.500 --> 00:37:18.500
modifies, and deletes.

00:37:19.370 --> 00:37:26.120
You update your data store appropriately
for all those using those conversion,

00:37:26.220 --> 00:37:28.630
converting the sync back record
back to the app record things

00:37:28.700 --> 00:37:29.780
I've talked about before.

00:37:29.990 --> 00:37:32.080
That's where you would do
that right in this step,

00:37:32.340 --> 00:37:32.870
pulling data.

00:37:34.320 --> 00:37:35.880
And again,
you get that back from the sync

00:37:35.880 --> 00:37:39.130
engine in the form of adds,
modifies, and deletes.

00:37:41.410 --> 00:37:42.390
So that's pulling.

00:37:42.490 --> 00:37:44.700
So after you've done that,
now you're ready to finish or cancel.

00:37:44.700 --> 00:37:49.170
So now cancel is about, well,
the user hit the cancel button at

00:37:49.170 --> 00:37:51.780
any point during this operation.

00:37:52.020 --> 00:37:53.690
Or something went wrong.

00:37:53.970 --> 00:37:57.340
Maybe you've realized that
you've run out of disk space.

00:37:57.380 --> 00:38:02.350
I mean, maybe not so common,
but it's the kind of thing that

00:38:02.350 --> 00:38:06.890
could happen that might make you say,
well, no, no, I as the program need to

00:38:06.890 --> 00:38:06.890
cancel this sync session.

00:38:08.230 --> 00:38:09.100
Okay?

00:38:09.130 --> 00:38:12.820
So I've actually got this method
in the People application.

00:38:12.820 --> 00:38:14.110
Sync failed.

00:38:14.200 --> 00:38:17.600
As you can see, I did a very,
very complete job of error handling.

00:38:17.610 --> 00:38:19.430
And it's logged there.

00:38:19.590 --> 00:38:20.570
But it's localized.

00:38:20.700 --> 00:38:24.500
I went and got the localized string.

00:38:26.450 --> 00:38:27.500
just then did a little cleanup.

00:38:27.500 --> 00:38:31.770
The important line there is really the
cancel syncing line for sync session.

00:38:31.770 --> 00:38:33.690
Sync session, cancel syncing.

00:38:34.710 --> 00:38:37.660
Okay, now finishes is really this,
should not go over that too quickly,

00:38:37.790 --> 00:38:41.190
finishing is a two-part process.

00:38:41.830 --> 00:38:43.600
And let's look at what
those two parts are.

00:38:43.820 --> 00:38:48.200
So now, this is even later down
in the poll session part.

00:38:48.200 --> 00:38:51.000
It's the way that I wrote it.

00:38:51.400 --> 00:38:52.590
Okay.

00:38:52.820 --> 00:38:54.880
This first part

00:38:57.120 --> 00:39:03.140
is all about accepting
changes for a record.

00:39:03.140 --> 00:39:05.750
So now, when the sync engine tells
you about a new record,

00:39:05.750 --> 00:39:09.600
when you pull,
it gives you this identifier for it.

00:39:09.600 --> 00:39:13.000
And so you have to go back
and tell the sync engine,

00:39:13.000 --> 00:39:16.240
"Yeah, I accept that change.

00:39:16.240 --> 00:39:16.730
I've got it."

00:39:17.960 --> 00:39:22.690
And then later you'll see that then,
well, Sync Session client

00:39:22.690 --> 00:39:24.870
commit accepted changes.

00:39:26.010 --> 00:39:29.370
So now why might these two
steps be useful to you?

00:39:29.460 --> 00:39:30.690
Let's think about this for a second.

00:39:30.700 --> 00:39:34.550
So now let's say you know, I mean,
we try to do as good a job as we can

00:39:34.550 --> 00:39:37.050
to make that sync operation go quickly.

00:39:37.270 --> 00:39:40.950
But you'll notice if you think
back to the sync example that

00:39:40.950 --> 00:39:44.670
when you push the sync button,
well, we gave you a little

00:39:44.670 --> 00:39:46.820
indeterminate spinner there.

00:39:46.940 --> 00:39:49.740
And it came back after
a couple of seconds.

00:39:49.740 --> 00:39:53.570
Well, let's say that I actually
was pushing a lot of data.

00:39:53.570 --> 00:39:54.690
And it took many seconds.

00:39:55.660 --> 00:39:58.400
You may not want to shut down your
user interface while that's going on.

00:39:58.400 --> 00:40:01.830
You may want to keep that lively so
that the user can continue to use

00:40:01.830 --> 00:40:04.480
your application while you're syncing.

00:40:04.600 --> 00:40:08.610
So let's say you change a record
and you tell the sync engine

00:40:08.610 --> 00:40:13.200
about it and then the user comes
in and modifies that record.

00:40:13.230 --> 00:40:16.910
Now you've got a conflict
just waiting to happen.

00:40:18.380 --> 00:40:20.520
This would be an opportunity
if you can detect that.

00:40:20.640 --> 00:40:23.540
If you say, "Okay, well,
I've told the sync engine about this

00:40:23.540 --> 00:40:26.840
change." And now you come to this
point in the program and you say,

00:40:26.840 --> 00:40:30.120
"Oh, well, now I need to tell the sync
engine whether I'm accepting a

00:40:30.120 --> 00:40:34.260
change for that record." If you
can detect that difference that's

00:40:34.330 --> 00:40:38.470
happened since you started,
you can tell the sync engine, "No,

00:40:38.470 --> 00:40:40.930
I'm not going to accept this change.

00:40:40.930 --> 00:40:43.850
I'm going to actually
keep what the user had,

00:40:43.850 --> 00:40:45.810
what the user put in most recently,
since I started syncing."

00:40:46.310 --> 00:40:50.040
If you don't tell the sync engine
that you've accepted that change,

00:40:50.190 --> 00:40:53.120
the next time you sync,
you're going to get the nice

00:40:53.120 --> 00:40:54.900
conflict dialog for free.

00:40:55.800 --> 00:40:59.190
It'll give you that change again,
and the sync engine will

00:40:59.370 --> 00:41:01.070
detect the conflict.

00:41:02.530 --> 00:41:04.350
and give you the
opportunity to resolve it.

00:41:04.500 --> 00:41:07.320
So all you have to do here is
just a little bit of work to say,

00:41:07.320 --> 00:41:10.000
"Okay, well, I noticed that this
record has been changed,

00:41:10.000 --> 00:41:11.840
so just--I'm not going to accept it.

00:41:12.080 --> 00:41:13.590
Not now."

00:41:17.020 --> 00:41:17.900
Okay?

00:41:17.900 --> 00:41:22.970
And so every record that you don't accept
will be given to you again the next time.

00:41:26.140 --> 00:41:28.660
Okay, so you go through that step,
accepting and then commit

00:41:28.660 --> 00:41:30.000
your accepted changes.

00:41:30.150 --> 00:41:33.000
And then the last line, finish syncing.

00:41:33.320 --> 00:41:34.600
All done.

00:41:34.600 --> 00:41:36.500
Session done.

00:41:36.840 --> 00:41:38.280
Okay?

00:41:38.960 --> 00:41:42.040
So that takes us through
the whole operation:

00:41:42.280 --> 00:41:47.110
starting, negotiating, pushing, pulling,
finishing, and canceling.

00:41:48.300 --> 00:41:51.200
Okay, so now I'd like to do a
little bit of a demo to,

00:41:51.550 --> 00:41:53.140
no, I don't want to do that yet.

00:41:53.170 --> 00:41:56.900
Let's do the demo for
Session Control Flow.

00:42:00.470 --> 00:42:02.830
Okay, we're back in the
People application again,

00:42:02.860 --> 00:42:05.510
and just to make sure that
we are actually in sync,

00:42:05.560 --> 00:42:07.430
so I pressed the Sync button.

00:42:07.520 --> 00:42:10.860
You'll notice on the bottom there,
I've got a little pop-up button

00:42:11.250 --> 00:42:13.710
that right now says Fast Sync.

00:42:15.370 --> 00:42:17.380
So I'm just telling the sync
engine about my changes.

00:42:17.380 --> 00:42:19.590
You'll see if I pop that up,
I've got some of the other

00:42:19.600 --> 00:42:23.200
sync modes there that we've
talked about-- Fast Sync,

00:42:23.200 --> 00:42:26.740
Slow Sync, Refresh Sync,
and Pull the Truth.

00:42:26.890 --> 00:42:28.900
So let's actually give this a workout.

00:42:28.900 --> 00:42:31.680
I'm going to go and delete an entry.

00:42:32.130 --> 00:42:37.110
from the People application and
then come down here in Refresh Sync.

00:42:37.630 --> 00:42:40.410
This again sort of models, it's like,
well, maybe I lost that record.

00:42:40.570 --> 00:42:44.020
The data file got corrupted
right at that point.

00:42:45.750 --> 00:42:51.820
So if I refresh sync, you'll notice that,
well, I'll get that record back.

00:42:51.820 --> 00:42:54.450
The sync engine just says, well,
you didn't tell me about this one.

00:42:54.460 --> 00:42:55.870
Here it is again.

00:42:59.000 --> 00:43:06.040
Okay, you can also then,
let's just say I delete all my records,

00:43:06.050 --> 00:43:08.590
I can come down here and pull the truth.

00:43:08.890 --> 00:43:11.200
And similarly, I'll get them all back.

00:43:11.530 --> 00:43:15.110
Now, you may be wondering, as I did,
what the difference is between

00:43:15.110 --> 00:43:16.460
refresh and pull the truth.

00:43:16.660 --> 00:43:18.880
Now,
the differences in some ways are subtle,

00:43:18.880 --> 00:43:22.600
and I don't know if I really want to
get into it all that deeply right now.

00:43:22.600 --> 00:43:25.030
If you really have interest in that,
I'll give you just a little.

00:43:25.040 --> 00:43:28.300
We do have a lab session tomorrow where
we can get into that in real detail.

00:43:28.300 --> 00:43:31.830
But let me just give you a
little bit of a taste of what you

00:43:31.990 --> 00:43:35.930
might want to do with refresh,
sync, and pull the truth.

00:43:36.320 --> 00:43:41.120
This example was given to me
by a friend just recently.

00:43:41.120 --> 00:43:46.330
So let's say you've got your
phone and you notice that,

00:43:46.500 --> 00:43:49.840
oh, man, my phone, it's all garbled now.

00:43:49.840 --> 00:43:51.040
My information isn't there.

00:43:51.040 --> 00:43:53.100
So I've lost all my records.

00:43:53.170 --> 00:43:56.380
Man, I'm going to have to come back and
pull the truth next time I sync,

00:43:56.380 --> 00:43:59.030
so make sure I've got all
my entries back on my phone.

00:43:59.580 --> 00:44:03.740
But before you get back home,
let's say this happened to me.

00:44:03.930 --> 00:44:07.550
Angelina Jolie stops me on the way
out of the conference center today,

00:44:07.560 --> 00:44:09.920
and she says, "Ken,
I was in your sync session.

00:44:09.950 --> 00:44:11.050
I loved it so much.

00:44:11.360 --> 00:44:14.140
We need to have coffee sometime.

00:44:14.190 --> 00:44:16.580
Just want to know more about syncing."

00:44:17.780 --> 00:44:22.460
So I get her phone number
down in my phone now.

00:44:22.480 --> 00:44:24.300
So now I've got one entry in my phone.

00:44:24.300 --> 00:44:25.600
It's a pretty darn important one.

00:44:25.600 --> 00:44:26.840
I don't want to lose that one now.

00:44:26.840 --> 00:44:29.410
I want to give her a call back later.

00:44:30.350 --> 00:44:31.200
Okay?

00:44:31.200 --> 00:44:34.830
So now, pulling the truth would be bad
because pulling the truth says,

00:44:34.900 --> 00:44:38.100
"Well, I just want to throw out all my
records and replace them with what

00:44:38.100 --> 00:44:40.060
the truth has." That would be bad.

00:44:40.260 --> 00:44:43.910
I would lose Angelina's phone number,
and she'd just have to spend

00:44:43.910 --> 00:44:47.730
more time with Brad Pitt,
which would really be compared to me.

00:44:47.730 --> 00:44:47.730
I don't know.

00:44:49.520 --> 00:44:52.790
So now let's actually see if I can kind
of work up a little example of that.

00:44:52.920 --> 00:45:00.020
So now let's say I delete a
bunch of records from here.

00:45:01.180 --> 00:45:03.570
And actually,
let's say you can delete all the records.

00:45:03.680 --> 00:45:07.690
And I add back Angelina.

00:45:09.170 --> 00:45:11.440
Jolie, if I can only type.

00:45:11.450 --> 00:45:13.500
OK.

00:45:13.500 --> 00:45:14.390
And I pull the truth.

00:45:14.480 --> 00:45:17.600
Well, you'll see what will happen
is Angelina gets clobbered.

00:45:17.600 --> 00:45:18.220
That's it.

00:45:18.220 --> 00:45:18.840
It's gone.

00:45:19.070 --> 00:45:22.910
I just replaced my application
store with what was in the truth.

00:45:23.010 --> 00:45:30.730
If I do this again,
and I add back Angelina,

00:45:35.340 --> 00:45:40.540
And instead of pulling the truth,
I just refresh sync.

00:45:40.580 --> 00:45:45.280
You'll see that Angelina is still there,
along with all of the records

00:45:45.360 --> 00:45:46.970
that got deleted before.

00:45:47.010 --> 00:45:49.590
It's just, again,
just a little sort of example

00:45:49.880 --> 00:45:53.790
of what the difference is
between these two sync modes.

00:45:54.960 --> 00:45:56.100
Okay?

00:45:56.230 --> 00:45:59.960
And then naturally,
Fast Sync is just all about, again,

00:46:00.270 --> 00:46:05.660
just telling the sync engine
about changes that you had.

00:46:05.660 --> 00:46:09.980
You can see over here,
I've got seven records.

00:46:10.010 --> 00:46:16.010
I delete one and Fast Sync and what I've
got back over here is now six records.

00:46:16.040 --> 00:46:17.940
Just all about changes.

00:46:17.990 --> 00:46:19.080
Pushing that delete.

00:46:19.080 --> 00:46:22.040
Okay?

00:46:22.040 --> 00:46:23.740
OK?

00:46:23.740 --> 00:46:26.190
OK, let's go back to the slides.

00:46:28.570 --> 00:46:30.290
Okay,
so that's all about Session Control Flow,

00:46:30.410 --> 00:46:34.990
showing you the different kinds
of sync modes that are available.

00:46:35.410 --> 00:46:40.670
Okay,
so now the last sort of high-level idea,

00:46:41.290 --> 00:46:43.040
is Featured Decisions.

00:46:43.160 --> 00:46:47.180
Now there are many,
and I can't cover them all now,

00:46:47.180 --> 00:46:47.910
but I've picked out

00:46:48.360 --> 00:46:49.700
A few interesting ones.

00:46:49.820 --> 00:46:52.080
Things like record filtering,
record formatting,

00:46:52.080 --> 00:46:53.700
responding to sync alerts.

00:46:53.840 --> 00:46:55.300
These are things you may wish to do.

00:46:55.300 --> 00:46:56.690
That's why the question marks are there.

00:46:56.810 --> 00:47:01.900
Things you may wish to do when
you are writing your sync client.

00:47:02.070 --> 00:47:05.730
So let's take a closer look
at what some of these are.

00:47:05.860 --> 00:47:07.350
Record filtering.

00:47:07.420 --> 00:47:11.680
Well, record filtering is all
about ignoring records.

00:47:11.680 --> 00:47:14.920
There may be in your application
some records you're not

00:47:14.920 --> 00:47:14.920
interested in dealing with.

00:47:15.280 --> 00:47:22.440
Now, I actually made a filter
for the People application.

00:47:22.620 --> 00:47:25.940
And the way you do this is just with
a little hunk of code that conforms

00:47:25.940 --> 00:47:28.240
to the iSync filtering protocol.

00:47:28.240 --> 00:47:29.190
You'll see that at the top.

00:47:29.400 --> 00:47:33.020
In this example,
here's a last name filter.

00:47:33.190 --> 00:47:38.580
And what this actually does is this
one method here at the bottom should

00:47:38.580 --> 00:47:40.200
apply record with record identifier.

00:47:40.200 --> 00:47:45.110
What it does is it says, "Well,
in my client, my People application,

00:47:45.200 --> 00:47:48.180
I only want to deal with
records that have a last name.

00:47:48.300 --> 00:47:49.990
It doesn't have a last name.

00:47:49.990 --> 00:47:52.080
I just don't want to know about it.

00:47:52.210 --> 00:47:54.040
I'm not interested."

00:47:56.090 --> 00:48:00.000
We'll see an example of
where you can use this later.

00:48:00.000 --> 00:48:03.960
You may wish in your application to say,
"I'm not interested in

00:48:03.960 --> 00:48:07.480
records that are of a certain,
you know,

00:48:07.480 --> 00:48:16.410
too big or were created before a certain
time." You can put whatever sort of check

00:48:16.410 --> 00:48:16.410
that you want in there for that record.

00:48:17.500 --> 00:48:19.500
Okay.

00:48:19.580 --> 00:48:22.910
Okay, so record filtering,
they're set up before starting a session.

00:48:22.910 --> 00:48:27.610
And here's just how you do it.

00:48:28.950 --> 00:48:29.330
Okay.

00:48:29.410 --> 00:48:32.840
Before you start your session,
you just go and set your filters.

00:48:32.870 --> 00:48:34.220
Just very, very simple.

00:48:34.250 --> 00:48:36.680
One line of code, create that object,
set the filter.

00:48:36.680 --> 00:48:40.500
You'll see as an alternative,
you can just clear any filters

00:48:40.500 --> 00:48:45.660
you may have previously set by
just passing an empty array.

00:48:45.660 --> 00:48:47.580
Very, very straightforward.

00:48:48.880 --> 00:48:49.220
Okay.

00:48:49.230 --> 00:48:52.740
Before you start your session,
you just go and set your filters.

00:48:52.740 --> 00:48:54.120
Just very, very simple.

00:48:54.380 --> 00:48:57.060
The case where your application
stores data in a different

00:48:57.140 --> 00:48:59.800
format than the truth stores it.

00:49:01.740 --> 00:49:04.420
Okay, the very,
very simple example of that is,

00:49:04.780 --> 00:49:10.490
let's say you have a device that can only
store maybe 24 characters for an entry,

00:49:10.590 --> 00:49:11.600
for a name.

00:49:11.600 --> 00:49:14.200
Yet you may have some friends with very,
very long names.

00:49:14.200 --> 00:49:18.840
The truth will continue to store those,
but you want to store that

00:49:18.840 --> 00:49:22.070
clipped version on your device.

00:49:22.570 --> 00:49:26.150
Record formatting lets you keep
those in sync even though they

00:49:26.150 --> 00:49:28.560
don't look the same anymore.

00:49:28.620 --> 00:49:32.350
The sync engine can
detect that this thing,

00:49:32.500 --> 00:49:36.640
even though they look different,
they are actually the same.

00:49:38.510 --> 00:49:39.880
Okay.

00:49:39.880 --> 00:49:46.300
You'll notice this, if we go back to that
Pull Data for Session slide,

00:49:47.000 --> 00:49:53.980
when you're going through and doing
that sort of two-part finish-up process,

00:49:55.590 --> 00:49:56.850
Okay.

00:49:56.890 --> 00:50:03.450
You'll notice this, if we go back to that
Pull Data for Session slide,

00:50:03.450 --> 00:50:03.690
when you're going through and doing
that sort of two-part finish-up process,

00:50:05.160 --> 00:50:10.220
So that's where you do that,
right when you're accepting records.

00:50:10.270 --> 00:50:14.640
Accept it,
but here is my little alteration to it.

00:50:14.680 --> 00:50:16.810
Keep track of that, please.

00:50:18.240 --> 00:50:19.340
Okay?

00:50:19.390 --> 00:50:23.190
Here is just a, you know,
a little bit of code that

00:50:23.650 --> 00:50:26.990
would format first names to be,
you know,

00:50:26.990 --> 00:50:30.100
no longer than 16 characters in length.

00:50:30.110 --> 00:50:33.200
Really pretty simple, straightforward.

00:50:33.200 --> 00:50:36.700
So when I'm converting a sync
record back to the app griper,

00:50:36.700 --> 00:50:42.030
jumping back to that data handling step,
here's a place where you

00:50:42.030 --> 00:50:47.190
can put in your formatting,
record formatting.

00:50:49.870 --> 00:50:50.990
So record formatting sync alerts.

00:50:51.090 --> 00:50:53.920
Now I've already mentioned sync
alerts a little bit earlier.

00:50:54.070 --> 00:50:55.240
Sync is starting elsewhere.

00:50:55.240 --> 00:50:57.150
Do you care to join?

00:51:00.730 --> 00:51:05.100
This is again how the address book knew
to sync with the People application

00:51:05.100 --> 00:51:07.310
even though it doesn't have a button.

00:51:07.720 --> 00:51:09.440
There's actually a couple
of ways to do this,

00:51:09.500 --> 00:51:11.730
and again,
I can't get into all of the different

00:51:12.070 --> 00:51:13.270
possibilities and permutations.

00:51:13.280 --> 00:51:17.020
I will say that there's one
way we'll talk about right now,

00:51:17.020 --> 00:51:19.560
which is setting a Sync Alert Handler.

00:51:19.840 --> 00:51:25.620
It's just an object and a selector
that you set on the client to say,

00:51:25.620 --> 00:51:30.470
yeah, when syncs start happening,
please call me.

00:51:30.470 --> 00:51:35.500
Tell me about the entity
names that are going to sync.

00:51:37.230 --> 00:51:39.590
And you'll see there at the bottom,
the little implementation

00:51:39.590 --> 00:51:44.390
of the Sync Handler is the
exact same thing that happens.

00:51:44.710 --> 00:51:48.360
Um, when the user hits the Sync
button in the People application.

00:51:48.360 --> 00:51:51.800
So you'll still get the same dimming,
it's just sort of just the

00:51:51.840 --> 00:51:55.090
People application just
works that way when you sync.

00:51:56.130 --> 00:51:58.210
Again, this is sort of glossing
over a lot of details.

00:51:58.270 --> 00:51:59.520
There are more options here.

00:51:59.540 --> 00:52:02.250
Come to the lab period tomorrow if
you have particular interest in this.

00:52:04.030 --> 00:52:05.900
Okay,
so that's responding to sync alerts.

00:52:06.140 --> 00:52:11.480
Let's take a little look at doing that,
at what some of these features,

00:52:11.480 --> 00:52:12.730
how they actually work.

00:52:22.200 --> 00:52:24.860
Okay, so now I'm actually going
to come over here and create

00:52:24.860 --> 00:52:34.230
a company in Address Book,
Apple Computer.

00:52:34.280 --> 00:52:36.120
And I'm going to sync.

00:52:36.530 --> 00:52:39.660
So you'll see now that I'll get a new
entry over here with Apple Computer.

00:52:39.900 --> 00:52:43.470
Well, great, but Apple Computer does
not have a last name.

00:52:44.060 --> 00:52:47.510
And so if I just come over here
and go to the Options menu and say,

00:52:47.510 --> 00:52:50.270
well, yeah, now I use record filtering.

00:52:52.590 --> 00:52:56.080
So I'm not interested in records
that don't have a last name.

00:52:56.080 --> 00:52:57.980
Apple computer doesn't have a last name.

00:52:57.990 --> 00:53:01.460
It doesn't-- you'll also notice that
the address book doesn't delete that.

00:53:01.480 --> 00:53:03.820
It's just that the
People application is just saying,

00:53:03.820 --> 00:53:06.190
look, I'm not interested in that.

00:53:09.580 --> 00:53:13.900
I'll give you one more quick example,
since I'm running a little short of time,

00:53:13.930 --> 00:53:17.050
which is record formatting.

00:53:17.710 --> 00:53:22.300
If I just delete all of my records
and come back and pull the truth,

00:53:22.350 --> 00:53:26.780
you'll notice that my name, for instance,
is now clipped.

00:53:27.700 --> 00:53:29.540
In this case,
it was clipped to six characters

00:53:29.620 --> 00:53:33.790
to just-- my name is only eight,
so 16 wouldn't really

00:53:33.870 --> 00:53:34.980
be a very good demo.

00:53:35.030 --> 00:53:39.310
So you'll see again that that's
just the way that you can--

00:53:39.630 --> 00:53:41.360
Filter Records.

00:53:41.360 --> 00:53:44.650
And coming over and fast syncing.

00:53:45.360 --> 00:53:46.200
Everything will just be good.

00:53:46.200 --> 00:53:47.540
You're in sync.

00:53:47.720 --> 00:53:51.570
The sync engine knows that these
different representations of

00:53:51.570 --> 00:53:54.030
the data are actually the same.

00:53:55.410 --> 00:54:00.200
Okay, so that's just a little
look at some features.

00:54:00.200 --> 00:54:04.390
Okay, if I can go back to the slides now.

00:54:04.420 --> 00:54:08.580
Okay, so a little bit about features.

00:54:08.580 --> 00:54:08.580
And so there,

00:54:09.550 --> 00:54:10.440
Done talking about features.

00:54:10.440 --> 00:54:12.240
Again,
these are the four things that I would

00:54:12.240 --> 00:54:14.440
like you to take away with you today.

00:54:14.560 --> 00:54:16.710
If you're going to be
making your sync client,

00:54:16.850 --> 00:54:19.830
here are the four things you
need to know about data handling,

00:54:19.940 --> 00:54:23.350
registration, session control flow,
and feature decisions.

00:54:23.460 --> 00:54:28.460
This would be just, I think,
a good way to sort of now start looking

00:54:28.670 --> 00:54:33.900
at the API documentation we have,
the tutorials we have, very,

00:54:33.900 --> 00:54:35.440
very nice examples that let you
sort of get into this technology.

00:54:35.610 --> 00:54:36.600
Okay?

00:54:36.700 --> 00:54:39.840
And again, pay heed to these four things
and I think that'll be a good

00:54:39.840 --> 00:54:42.600
way for you to get started.

00:54:42.600 --> 00:54:43.000
So that's it.

00:54:51.280 --> 00:54:56.950
But there's one more thing,
and that's Synchro Spectre.

00:54:57.380 --> 00:55:00.470
Now SyncRespector is a developer
tool that I think you'll find very,

00:55:00.470 --> 00:55:01.470
very, very useful.

00:55:01.480 --> 00:55:04.170
If you haven't downloaded
the sample code yet,

00:55:04.230 --> 00:55:07.540
I strongly suggest that you
download it if you're going to

00:55:07.540 --> 00:55:09.950
be doing syncing so that you can
get your hands on SyncRespector.

00:55:09.960 --> 00:55:15.280
Now SyncRespector is a tool that we're
making sort of available to you now in

00:55:15.280 --> 00:55:18.390
a kind of a WWDC developer release form.

00:55:18.400 --> 00:55:23.000
We would love to get some feedback
from you on whether you like the tool,

00:55:23.000 --> 00:55:26.210
what other features you'd
like to see in the tool,

00:55:26.210 --> 00:55:27.250
and so forth.

00:55:27.360 --> 00:55:30.040
I think it's really essential if
you're going to be doing syncing.

00:55:30.040 --> 00:55:33.740
I'd like to show it to
you just very quickly.

00:55:40.510 --> 00:55:45.750
So over in your package,
just right in there with the people

00:55:46.710 --> 00:55:48.620
example is the Sync Respector app.

00:55:48.960 --> 00:55:53.090
And if you start it up,
it gives you a wealth of terrific

00:55:53.650 --> 00:55:56.380
information about the clients
that you have registered.

00:55:56.380 --> 00:55:58.620
Here you see we've got
the address book client.

00:55:58.620 --> 00:56:02.140
We've got the people client registered.

00:56:02.480 --> 00:56:06.080
It tells you information
about its registration,

00:56:06.080 --> 00:56:11.220
what it's registered for,
when it last synced.

00:56:11.480 --> 00:56:18.030
It tells you a little bit about what
kind of sync mode it's eligible for.

00:56:19.510 --> 00:56:22.150
tells you about the contents
of the Truth database.

00:56:22.150 --> 00:56:24.300
I mentioned that to you earlier today.

00:56:24.370 --> 00:56:29.190
You'll see that there's actually,
there's my entry in the Truth.

00:56:31.400 --> 00:56:36.040
tells you what kind of entity it is,
what its record identifier is.

00:56:36.070 --> 00:56:40.140
This terrific debugging tool over here,
call history.

00:56:40.170 --> 00:56:44.540
These are all of the sync sessions that
have happened with detailed information

00:56:44.540 --> 00:56:47.220
about what happened in the sync session.

00:56:47.270 --> 00:56:54.820
All of the sync API methods that got
called with arguments and results.

00:56:54.870 --> 00:56:57.670
So you can go and-- oh,
my sync didn't work.

00:56:57.710 --> 00:56:59.650
What happened?

00:57:00.590 --> 00:57:05.000
If you've got the Sync Respecter
preference on to enable call history,

00:57:05.000 --> 00:57:06.960
you will generate

00:57:07.570 --> 00:57:09.390
This call history,
like you're looking at now,

00:57:09.400 --> 00:57:15.170
it's really just an invaluable tool
if you're trying to sync and things

00:57:15.170 --> 00:57:19.210
don't go perfectly the first time.

00:57:21.530 --> 00:57:23.540
Okay, so again,
the Synchro Spectre tool is

00:57:23.570 --> 00:57:28.090
available right in your package
with the People application.

00:57:28.100 --> 00:57:31.900
And if you're really interested in
learning more about Synchro Spectre,

00:57:31.900 --> 00:57:33.560
again, come to the lab tomorrow.

00:57:35.820 --> 00:57:37.700
Okay, so back to the slides.

00:57:37.750 --> 00:57:38.740
Great, the developer tool.

00:57:38.740 --> 00:57:41.110
So that is really and truly it.

00:57:41.400 --> 00:57:43.370
So thank you.

00:57:48.910 --> 00:57:50.550
Just a little sort of
late additions there,

00:57:50.550 --> 00:57:51.550
some more information.

00:57:51.560 --> 00:57:54.210
Naturally,
you can go to the developer.apple.com

00:57:54.210 --> 00:57:56.260
website for sample code.

00:57:56.260 --> 00:57:59.200
We've got another really,
really nice example that

00:57:59.650 --> 00:58:03.630
someone on the team made,
a more sort of complex,

00:58:03.630 --> 00:58:07.320
in-depth example that uses
stickies that you really,

00:58:07.320 --> 00:58:08.850
really may be interested in looking at.

00:58:09.090 --> 00:58:11.190
Again, come to the lab tomorrow if
you're interested in that.

00:58:11.280 --> 00:58:15.440
I should say you could just download it
from the sample code and come to the lab

00:58:15.440 --> 00:58:17.960
if you're interested in talking about it.

00:58:18.500 --> 00:58:20.340
Just a little sort of
late additions there,

00:58:20.340 --> 00:58:21.100
some more information.

00:58:21.220 --> 00:58:23.390
Naturally, you can go to the
developer.apple.com website