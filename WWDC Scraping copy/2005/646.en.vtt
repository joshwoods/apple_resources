WEBVTT

00:00:02.280 --> 00:00:03.260
Good afternoon.

00:00:03.320 --> 00:00:06.260
Welcome to session 646,
Extending and Securing

00:00:06.260 --> 00:00:09.620
Mail Services Using Mac OS X.

00:00:09.670 --> 00:00:13.260
I'm Paul Schreiber,
a software engineer on Mac OS X.

00:00:14.070 --> 00:00:18.340
Today we're going to talk about securing
your mail server so your messages

00:00:18.350 --> 00:00:21.540
can't be read in transit and the
content of the messages can't be read.

00:00:21.560 --> 00:00:23.740
We'll talk about extending
the mail server to handle

00:00:23.860 --> 00:00:25.240
multiple domains and users.

00:00:25.320 --> 00:00:28.190
We'll show you a neat feature
of Tiger's Mail Client,

00:00:28.300 --> 00:00:33.170
which helps you pre-configure
mail accounts for your users.

00:00:33.260 --> 00:00:38.410
And we're going to explain how the
Mac OS X Server GUI makes this all

00:00:38.580 --> 00:00:40.430
easy to use and uses open source
and open standards tools to do so.

00:00:40.870 --> 00:00:43.490
So, when it comes to securing
the transport of your mail,

00:00:43.500 --> 00:00:47.040
we'll show you how you can use
SSL so the messages can't be read.

00:00:47.170 --> 00:00:51.240
We're going to show you how to use
SMIME to sign and encrypt your messages.

00:00:51.330 --> 00:00:53.890
We're going to talk about
Postfix and Open Directory and

00:00:53.960 --> 00:00:57.760
how they can be used to handle
multiple domains and many users.

00:00:57.770 --> 00:01:04.020
We'll talk about using ClamAV and
SpamAssassin to stop spam and viruses.

00:01:04.060 --> 00:01:08.120
And again, the Tiger Account Bundles
to help save you time,

00:01:08.120 --> 00:01:10.800
money, support calls,
make it easier on your users.

00:01:12.200 --> 00:01:15.540
Okay, quick overview of the
technologies involved here.

00:01:15.540 --> 00:01:18.210
Well, when it comes to mail,
we provide IMAP and

00:01:18.210 --> 00:01:19.900
POP services using Cyrus.

00:01:19.900 --> 00:01:23.700
We provide SMTP services using Postfix.

00:01:23.800 --> 00:01:29.140
We have HTTPS and
SMIME all using OpenSSL.

00:01:29.140 --> 00:01:34.470
As I said, SpamAV, ClamAV,
and SpamAssassin.

00:01:34.470 --> 00:01:39.140
And we also include SquirrelMail,
which is a web-based mail client.

00:01:40.530 --> 00:01:43.010
So we'll talk very briefly
about internet email.

00:01:43.280 --> 00:01:48.390
Just want to make sure you want to
focus on the last part of this diagram.

00:01:48.410 --> 00:01:53.690
Often people think of mail as
a mailbox and an email address,

00:01:53.840 --> 00:01:55.640
and that's not always true.

00:01:55.640 --> 00:01:58.330
It's very much a
many-to-many relationship.

00:01:58.400 --> 00:02:01.270
You're going to have to see,
we're going to show you

00:02:01.270 --> 00:02:03.380
managing multiple domain names.

00:02:03.500 --> 00:02:08.400
You're going to have multiple MX records,
so you could have multiple mail servers.

00:02:08.400 --> 00:02:11.400
And you could have many virtual domains.

00:02:11.400 --> 00:02:13.400
You could have different
aliases for your users.

00:02:13.400 --> 00:02:16.390
And you'll see more about
that later on in the talk.

00:02:16.400 --> 00:02:18.400
Okay.

00:02:18.540 --> 00:02:23.080
So on to part one,
securing the mail transport.

00:02:26.240 --> 00:02:27.070
OK.

00:02:27.150 --> 00:02:28.770
Quick overview of security.

00:02:28.910 --> 00:02:33.000
Security with regards to the mail server,
like anything else, is a tradeoff.

00:02:33.050 --> 00:02:36.600
There's a certain amount of time and
effort and money you're willing to expend

00:02:36.600 --> 00:02:38.640
to get a certain amount of benefit.

00:02:38.790 --> 00:02:42.060
And in this case, like in any other,
the human factor is

00:02:42.070 --> 00:02:43.830
always the weakest link.

00:02:43.830 --> 00:02:47.180
So no matter what sort of
password rules you set up or

00:02:47.180 --> 00:02:50.250
what grade of encryption you use,
people will always write their

00:02:50.270 --> 00:02:53.790
passwords down or they will share
their passwords with other accounts

00:02:53.790 --> 00:02:58.860
or they'll trade it for a chocolate
bar and you have to be aware of this.

00:02:58.860 --> 00:03:00.790
So there's two aspects to security.

00:03:01.100 --> 00:03:02.890
First off, there's physical security.

00:03:02.920 --> 00:03:05.740
So you want to make sure that
your server is in a locked room.

00:03:05.890 --> 00:03:08.270
You want to make sure it's
locked down to the desk.

00:03:08.280 --> 00:03:10.220
You want to make sure
that if you have a G5,

00:03:10.220 --> 00:03:12.840
you have a padlock on the back.

00:03:12.840 --> 00:03:15.820
When it comes to electronic security,
you want to do things like

00:03:15.940 --> 00:03:17.500
enable screen saver locking.

00:03:17.500 --> 00:03:21.400
You want to turn on the open firmware
password so people can't bypass it.

00:03:21.400 --> 00:03:25.000
You know the boot sequence if
they have access to the machine.

00:03:25.080 --> 00:03:28.150
If you have SSH enabled you
can turn off permit root login.

00:03:28.150 --> 00:03:31.030
And the last two are we're going
to concentrate on in this talk,

00:03:31.420 --> 00:03:34.390
securing the transport
and securing the content.

00:03:34.670 --> 00:03:38.450
So, why do we care about securing
our messages in transit?

00:03:38.450 --> 00:03:41.740
Well, first off everything is
in the clear by default.

00:03:41.760 --> 00:03:45.070
That means when you talk to the mail
server your password can be read,

00:03:45.400 --> 00:03:49.760
your user name can be read and all of the
messages going in and out can be read.

00:03:49.760 --> 00:03:52.000
Well a few years ago this
wasn't as big a concern because

00:03:52.140 --> 00:03:54.310
you had a bunch of desktops,
they're all wired down,

00:03:54.310 --> 00:03:56.260
you know they sat on your desk,
they're on a switch

00:03:56.330 --> 00:03:57.980
network and it was fine.

00:03:57.980 --> 00:04:02.350
But now everyone is using wireless
networks and you see Wi-Fi here at WWDC,

00:04:02.350 --> 00:04:05.390
you can go to your friend's house,
you can check your email there,

00:04:05.390 --> 00:04:08.910
you can go to a coffee shop and
there are a lot of opportunities

00:04:08.910 --> 00:04:12.850
for people to go and recover your
password and read your mail and you

00:04:13.110 --> 00:04:15.600
really don't want that to happen.

00:04:15.780 --> 00:04:18.320
So talk about authentication methods.

00:04:18.320 --> 00:04:19.300
What can you do?

00:04:19.300 --> 00:04:22.440
Well, at the very basics,
the thing you can do is you can

00:04:22.500 --> 00:04:23.810
put a password on your mail.

00:04:23.830 --> 00:04:26.300
And you can have a plain text password.

00:04:26.300 --> 00:04:28.540
But this is not a good solution.

00:04:28.540 --> 00:04:30.120
It is not adequate.

00:04:30.120 --> 00:04:32.850
Now having a password will protect
your email from being read by,

00:04:32.860 --> 00:04:34.640
say, your mom,
if you use a good password that's

00:04:34.640 --> 00:04:37.350
not your birthday or your dog's
name or something like that.

00:04:37.490 --> 00:04:40.240
But what you want to do is you
want to encrypt the password.

00:04:40.300 --> 00:04:43.370
So even if someone is listening
in on your network session,

00:04:43.420 --> 00:04:45.900
they can't go ahead and
figure out what it is.

00:04:46.200 --> 00:04:50.660
So we support several different
authentication methods and encryption

00:04:50.660 --> 00:04:52.690
methods in Mac OS X Server.

00:04:52.700 --> 00:04:58.060
In this case, we can use MD5, CRAM MD5,
to encrypt the password.

00:04:58.310 --> 00:05:03.320
And then that, however,
is not sufficient because if someone

00:05:03.320 --> 00:05:06.600
is listening in on your session,
even though they can't get your password,

00:05:06.600 --> 00:05:09.280
they can still listen
to or read your email.

00:05:09.510 --> 00:05:10.920
And you want to make
sure they can't do that,

00:05:10.920 --> 00:05:11.260
either.

00:05:11.390 --> 00:05:13.250
So we're going to use SSL encryption.

00:05:13.460 --> 00:05:16.820
And in Tiger server,
we make this really easy to do.

00:05:16.940 --> 00:05:19.060
So what is SSL?

00:05:19.090 --> 00:05:21.600
Well, this is a cross-platform
encryption standard.

00:05:21.600 --> 00:05:24.180
It'll work on Mac OS X,
it'll work on Windows,

00:05:24.210 --> 00:05:26.440
it'll work on Linux.

00:05:26.460 --> 00:05:28.440
This can be used with any mail client.

00:05:28.440 --> 00:05:30.280
It's an open standard,
so it's been implemented

00:05:30.280 --> 00:05:33.990
by Mac OS X Mail,
by Thunderbird, by Eudora, Outlook,

00:05:34.000 --> 00:05:35.680
Entourage, you name it.

00:05:35.840 --> 00:05:37.440
This is very hard to break encryption.

00:05:37.450 --> 00:05:38.730
It's not ROT 13.

00:05:38.870 --> 00:05:39.780
This is industrial strength.

00:05:39.780 --> 00:05:42.440
You don't have to worry about
people going and cracking it.

00:05:42.500 --> 00:05:45.080
However,
just because you've turned on SSL,

00:05:45.080 --> 00:05:46.380
that doesn't mean you're done.

00:05:46.530 --> 00:05:49.750
You have the same gotchas you
have with any encryption system.

00:05:49.850 --> 00:05:53.370
People can still use a weak
password that someone can guess.

00:05:53.380 --> 00:05:56.380
The message could be read in
transit after it reaches your

00:05:56.380 --> 00:06:00.880
mail server and goes out on the
internet to its destination.

00:06:00.880 --> 00:06:03.450
Of course,
it can also be read on disk on your

00:06:03.590 --> 00:06:05.420
server or someone else's server.

00:06:05.470 --> 00:06:09.380
And lastly, if you're using self-signed
SSL certificates,

00:06:09.380 --> 00:06:11.870
you need to be very aware
of the possibility of a

00:06:11.880 --> 00:06:14.370
man in the middle attack,
where someone impersonates

00:06:14.370 --> 00:06:18.700
your server and relays all
the traffic back and forth.

00:06:18.920 --> 00:06:21.220
So, in terms of SSL certificates.

00:06:21.590 --> 00:06:26.600
Well, SSL is Public Key Infrastructure
Encryption Technology.

00:06:26.600 --> 00:06:30.800
That means your mail client
has to trust the certificate.

00:06:30.860 --> 00:06:31.760
So how does it do that?

00:06:31.800 --> 00:06:34.020
Well, Mac OS X,
like every other operating

00:06:34.020 --> 00:06:37.390
system that supports SSL,
includes a collection of certificates,

00:06:37.490 --> 00:06:39.800
root certificates, that it knows about.

00:06:39.800 --> 00:06:43.340
So you could go and you could buy a
certificate that's been signed by one

00:06:43.380 --> 00:06:48.800
of these known authorities like Equifax
or VeriSign or Thought or GoDaddy.

00:06:48.900 --> 00:06:53.620
And you can spend anywhere from $30 to
$1800 and this would last you a year.

00:06:53.800 --> 00:06:55.970
Now if I said, "Okay,
go home and do that." Now,

00:06:56.020 --> 00:06:57.800
anyone here would have reservations
with their boss saying,

00:06:57.800 --> 00:07:01.100
"Hmm, I don't know if I want to
spend that kind of money."

00:07:01.390 --> 00:07:02.430
Okay, I see.

00:07:02.540 --> 00:07:02.820
Good.

00:07:03.130 --> 00:07:06.330
Now, the good news is you
don't have to do that.

00:07:06.410 --> 00:07:11.140
It's really easy in Tiger Server to
create your own self-signed certificate.

00:07:11.190 --> 00:07:12.900
Now, this will cost you nothing.

00:07:12.960 --> 00:07:15.300
It will require a little bit
of work on the client side,

00:07:15.300 --> 00:07:21.330
and we're going to show you how
to do that later in our demo,

00:07:21.330 --> 00:07:21.330
so users won't have to approve
the certificate every time.

00:07:21.620 --> 00:07:24.420
Now, there's another strategy that's
available for people in large

00:07:24.460 --> 00:07:26.300
organizations that have many servers.

00:07:26.450 --> 00:07:30.340
Instead of creating your own certificate,
you can become your own certificate

00:07:30.340 --> 00:07:36.720
authority and have the mail client
machine recognize that authority,

00:07:36.730 --> 00:07:42.320
and that way you can sign as
many certificates as you want,

00:07:42.320 --> 00:07:42.680
and they only have to add that one
root certificate to their collection,

00:07:42.680 --> 00:07:42.680
to their keychain.

00:07:43.100 --> 00:07:45.120
So, now we're going to show
you our first demo.

00:07:45.180 --> 00:07:49.350
Andrew's going to come up,
explain how to use Mac OS X Server to

00:07:49.350 --> 00:07:56.000
create an SSL certificate,
and then the client and how to use it.

00:07:56.180 --> 00:07:57.910
Thank you, Paul.

00:08:01.720 --> 00:08:04.180
My name is Andrew Moon,
and over the next 10 minutes,

00:08:04.180 --> 00:08:07.690
I'm going to be presenting a couple
of demonstrations on how to enhance

00:08:07.970 --> 00:08:11.940
the security of your mail service
using self-signed SSL certificates.

00:08:12.110 --> 00:08:13.050
It's going to be two parts.

00:08:13.190 --> 00:08:16.040
First, we're going to cover the
server-side configuration,

00:08:16.060 --> 00:08:18.210
and then we'll get to the client side.

00:08:18.530 --> 00:08:22.350
TigerServer has an enhanced Server Admin
application that lets you create and

00:08:22.350 --> 00:08:24.730
manage self-signed SSL certificates.

00:08:24.800 --> 00:08:27.990
Let's take a look at that now.

00:08:27.990 --> 00:08:27.990
Let's bring up Server Admin.

00:08:29.470 --> 00:08:31.100
And here in the Computers
and Services pane,

00:08:31.100 --> 00:08:32.990
we're going to select the
server we want to manage.

00:08:33.080 --> 00:08:36.310
In this case, it's demo646.local.

00:08:36.460 --> 00:08:40.880
Then we come over here to the
Settings button and the Certificates tab.

00:08:40.890 --> 00:08:42.620
Now you see that there's
this default certificate here

00:08:42.620 --> 00:08:44.090
that comes out of the box.

00:08:44.260 --> 00:08:46.470
We could use this with
a little bit of editing,

00:08:46.610 --> 00:08:48.620
but for the purposes
of this demonstration,

00:08:48.620 --> 00:08:49.860
let's create a brand new one.

00:08:49.900 --> 00:08:52.050
So click on the Plus.

00:08:52.220 --> 00:08:54.530
Now the common name is gonna
be the most important field,

00:08:54.750 --> 00:08:58.190
and you want that to be the fully
qualified host name by which your

00:08:58.190 --> 00:09:00.520
mail server is known and accessed.

00:09:00.520 --> 00:09:03.800
So in this case it's
gonna be demo646.local.

00:09:03.810 --> 00:09:07.500
And I'll just briefly fill
in these other fields.

00:09:10.600 --> 00:09:12.940
And this has a default
expiration period of one year.

00:09:12.940 --> 00:09:16.640
We'll leave the private
key size at 1024 bits.

00:09:16.640 --> 00:09:20.400
And we're gonna leave the private
key passphrase blank so that the

00:09:20.420 --> 00:09:24.570
SSL certificate can continue to
be used by the mail server even

00:09:24.570 --> 00:09:27.160
across unattended reboot situations.

00:09:27.160 --> 00:09:28.520
So I filled out this form.

00:09:28.520 --> 00:09:30.490
Let's click Save.

00:09:30.940 --> 00:09:33.180
And if we go back to the list,
there's the self-signed

00:09:33.180 --> 00:09:35.480
certificate that we just created.

00:09:35.840 --> 00:09:39.090
Now let's tell the mail servers
how to make use of that.

00:09:39.140 --> 00:09:41.500
So let's come over here to the
mail service of our server.

00:09:41.520 --> 00:09:45.000
Click on the Settings button.

00:09:46.220 --> 00:09:49.940
Over here to the Advanced tab
and the Security sub-tab.

00:09:50.070 --> 00:09:51.110
Now there are two sections here.

00:09:51.320 --> 00:09:55.100
The first part is authentication
for the various mail protocols.

00:09:55.160 --> 00:09:58.300
Now login, plain,
and clear are all unencrypted

00:09:58.300 --> 00:10:00.100
authentication methods.

00:10:00.100 --> 00:10:02.990
So let's make sure those are unchecked.

00:10:03.470 --> 00:10:05.980
Kerberos is typically more
appropriate for larger

00:10:05.980 --> 00:10:10.140
environments with many systems,
so for this single system demo,

00:10:10.270 --> 00:10:13.470
let's choose CRAM MD5
for both SMTP and IMAP,

00:10:13.470 --> 00:10:15.680
and APOP for POP.

00:10:16.220 --> 00:10:18.690
Next,
let's come down here to the SSL section,

00:10:18.690 --> 00:10:20.700
where we can control the
SSL configuration for

00:10:20.700 --> 00:10:23.100
SMTP as well as IMAP and POP.

00:10:23.170 --> 00:10:27.330
So this first pull-down lets
us choose whether to disable,

00:10:27.330 --> 00:10:28.970
use, or require SSL.

00:10:29.100 --> 00:10:32.080
So for SMTP, let's choose Use.

00:10:32.080 --> 00:10:34.960
So that means if both parties,
if both the server and

00:10:35.000 --> 00:10:39.100
the client support SSL,
that SSL will actually be used.

00:10:39.290 --> 00:10:42.640
Now the reason we're doing Use and
not Require here is that most mail

00:10:43.110 --> 00:10:46.680
servers on the Internet are not
actually configured to send mail

00:10:47.000 --> 00:10:49.030
to other mail servers using SSL.

00:10:49.100 --> 00:10:52.010
So we're going to probably have
to back off from SSL for that.

00:10:52.110 --> 00:10:56.090
However, you may have, say,
traveling users who are out on the road

00:10:56.150 --> 00:11:01.100
on other ISPs who want to relay mail
through your organization's mail servers.

00:11:01.120 --> 00:11:05.370
And for that, we can use SSL so that they
can use authenticated SMTP over

00:11:05.440 --> 00:11:07.010
SSL to your mail server.

00:11:07.090 --> 00:11:08.960
So we'll select Use.

00:11:09.120 --> 00:11:13.100
Then this second pull-down lets
us choose the certificate we want

00:11:13.100 --> 00:11:15.100
to use with the mail service.

00:11:15.230 --> 00:11:19.100
Because we just created that
certificate for demo646.local,

00:11:19.100 --> 00:11:21.090
it's available here on
this pull-down list.

00:11:21.100 --> 00:11:23.100
So let's go ahead and pick that.

00:11:23.280 --> 00:11:26.100
Now for IMAP and POP,
let's go ahead and choose Require.

00:11:26.140 --> 00:11:30.610
Most or all of the major mail
clients available today can connect

00:11:30.610 --> 00:11:32.100
to IMAP and POP servers via SSL.

00:11:32.100 --> 00:11:34.690
So that should be a good choice.

00:11:35.130 --> 00:11:36.500
Then let's choose the
same certificate here.

00:11:36.500 --> 00:11:39.180
And we're done, so we can click Save.

00:11:39.180 --> 00:11:41.550
And that should be it
for the server side.

00:11:41.560 --> 00:11:46.710
So let's now move on to
client side configuration.

00:11:47.360 --> 00:11:51.530
And how to connect via SSL to a server
that has a self-signed SSL certificate.

00:11:51.670 --> 00:11:56.600
So let me fast user switch over to a user
I've already created for this purpose.

00:12:07.350 --> 00:12:09.600
And let's bring up the mail application.

00:12:09.650 --> 00:12:12.800
So this is the first time we're bringing
up the mail application for this user.

00:12:12.820 --> 00:12:15.580
So it's gonna present me with
the new account setup assistant.

00:12:15.610 --> 00:12:16.490
So let's just go through that.

00:12:16.540 --> 00:12:19.070
Click Continue.

00:12:19.280 --> 00:12:21.890
Let's go ahead and
create an IMAP account.

00:12:28.900 --> 00:12:32.990
The incoming mail server
is going to be our server,

00:12:33.000 --> 00:12:36.000
and we're going to provide our
credentials to authenticate with.

00:12:37.720 --> 00:12:40.050
Uh-oh, we got an error message here.

00:12:40.210 --> 00:12:44.780
So what's going on is that we decided
to use a self-signed SSL certificate.

00:12:44.800 --> 00:12:47.520
Now, Paul mentioned a few
caveats with that choice,

00:12:47.660 --> 00:12:48.890
and this is actually one of them.

00:12:48.950 --> 00:12:51.920
So the mail application is not
trusting our server by default,

00:12:52.030 --> 00:12:54.120
and that's why it's throwing
up this error message.

00:12:54.280 --> 00:12:58.790
So since we know what's
actually going on here,

00:12:58.790 --> 00:13:02.460
let's click Continue for now,
and we're going to address this

00:13:02.460 --> 00:13:02.460
issue in just a few moments.

00:13:03.050 --> 00:13:05.850
Let's tell this account
configuration to use SSL.

00:13:06.060 --> 00:13:10.170
Now the authentication method,
you'll recall that we chose

00:13:10.170 --> 00:13:14.620
CRAM MD5 for IMAP and SMTP,
and here that corresponds to the

00:13:14.690 --> 00:13:17.010
MD5 challenge response choice.

00:13:17.620 --> 00:13:19.600
Choose that and click Continue.

00:13:19.790 --> 00:13:22.200
Now let's fill out the
outgoing mail server.

00:13:22.330 --> 00:13:26.490
Also use authentication.

00:13:30.200 --> 00:13:34.960
We don't have a problem here since it
doesn't have to connect via SSL to SMTP.

00:13:34.960 --> 00:13:37.360
Now we're done with that.

00:13:42.400 --> 00:13:47.900
I'm actually aware of some of
what's new in the mail application,

00:13:47.900 --> 00:13:47.900
so we'll skip that.

00:13:47.900 --> 00:13:47.900
Let's go ahead and check our mail.

00:13:48.070 --> 00:13:50.400
And we get another error
dialog that gets thrown up.

00:13:50.440 --> 00:13:54.760
So let me point you to the most important
part of this message is right here.

00:13:54.790 --> 00:13:57.380
The root certificate for this
server could not be verified.

00:13:57.380 --> 00:14:01.280
And that's again because we chose to
use a self-signed SSL certificate.

00:14:01.290 --> 00:14:03.840
Now this would be a real problem
if we continue to get this message

00:14:03.840 --> 00:14:07.280
every time we wanna connect
to our server and check mail.

00:14:07.300 --> 00:14:10.330
So we need to figure out some way
to tell the OS or tell the mail

00:14:10.400 --> 00:14:12.100
application to trust this server.

00:14:12.280 --> 00:14:14.110
The way we do that is we're gonna

00:14:14.570 --> 00:14:17.040
is we can click on the
show certificate button.

00:14:17.040 --> 00:14:19.870
Let's check on the details
to make sure that this is the

00:14:19.870 --> 00:14:21.700
server we want to connect to.

00:14:21.750 --> 00:14:23.380
And just briefly here,
one thing we can check

00:14:23.380 --> 00:14:24.210
is the common name.

00:14:24.320 --> 00:14:27.220
It's matching the server
that we want to connect to,

00:14:27.220 --> 00:14:28.720
demo646.local.

00:14:28.960 --> 00:14:32.410
We're going to take this certificate and
we're going to drag it over to desktop.

00:14:33.430 --> 00:14:35.690
Once on the desktop,
we can double-click on it,

00:14:35.820 --> 00:14:37.650
and that will bring up
the Keychain application,

00:14:37.690 --> 00:14:40.300
which hopefully asks us if we
want to add it to our Keychain.

00:14:40.300 --> 00:14:44.350
We do, however, we want to add it to a
special system-level Keychain,

00:14:44.370 --> 00:14:46.300
and that happens to be
called X.509 Anchors.

00:14:46.300 --> 00:14:48.970
And it's available on
this pull-down list,

00:14:49.010 --> 00:14:51.280
so let's go ahead and select that.

00:14:52.450 --> 00:14:54.660
And then let's click OK.

00:14:54.700 --> 00:14:57.760
Now because that's a special
system-level keychain,

00:14:57.780 --> 00:14:59.790
we need to authenticate with
our administrator privileges.

00:14:59.860 --> 00:15:03.840
Let's go ahead and do that.

00:15:03.860 --> 00:15:06.280
And the certificate gets added.

00:15:08.600 --> 00:15:10.760
And then let's click OK.

00:15:10.760 --> 00:15:13.860
Now because that's a special
system-level keychain,

00:15:13.860 --> 00:15:15.960
we need to authenticate with
our administrator privileges.

00:15:15.960 --> 00:15:19.930
Let's go ahead and do that.

00:15:19.940 --> 00:15:21.100
And the certificate gets added.

00:15:22.670 --> 00:15:23.700
And there it is.

00:15:23.980 --> 00:15:26.490
So there's the certificate
we just imported.

00:15:26.630 --> 00:15:29.040
Let's go ahead and put away
that Keychain Access application

00:15:29.040 --> 00:15:30.350
now that we're done with it.

00:15:30.510 --> 00:15:31.720
Let's continue onward.

00:15:31.720 --> 00:15:36.480
And now, if I restart mail,

00:15:38.060 --> 00:15:39.650
That error dialogue should
not come up anymore,

00:15:39.670 --> 00:15:41.500
so let's go ahead and
check our mail again.

00:15:41.500 --> 00:15:43.680
And we don't actually
have additional new mail,

00:15:43.710 --> 00:15:48.290
so we're connecting to our server,
and you'll notice that the

00:15:48.290 --> 00:15:50.090
error dialogue has not come up.

00:15:51.720 --> 00:15:53.660
And so that's all we have to do.

00:15:53.680 --> 00:15:56.590
That's client-side configuration,
and now the server certificate is saved.

00:15:56.590 --> 00:15:59.530
And I'm going to turn
this back over to Paul.

00:16:01.550 --> 00:16:03.880
Thank you very much Andrew.

00:16:03.960 --> 00:16:05.390
Slides please.

00:16:05.400 --> 00:16:10.110
Okay, so to review what did we
have to do to enable SSL?

00:16:10.250 --> 00:16:12.180
On the server side we did two things.

00:16:12.370 --> 00:16:15.040
First of all,
we created an SSL certificate

00:16:15.450 --> 00:16:18.130
and second of all,
we enabled it for the

00:16:18.130 --> 00:16:20.000
SMTP and IMAP services.

00:16:20.140 --> 00:16:23.420
On the client side we did two things.

00:16:23.420 --> 00:16:28.500
We configured the mail application
to use SSL and then we added the

00:16:28.530 --> 00:16:35.630
certificate to keychain access
in the X.509 anchors keychain.

00:16:36.600 --> 00:16:39.240
Now, this is all new on Tiger Server.

00:16:39.250 --> 00:16:43.050
If you're still using Mac OS X Panther,
you need to go to Terminal

00:16:43.360 --> 00:16:46.990
and enter a bunch of commands
to create the certificate.

00:16:47.220 --> 00:16:51.800
There's a document describing how to do
this on the developer.apple.com website,

00:16:52.030 --> 00:16:54.040
the URL of which you can see right here.

00:16:54.260 --> 00:16:59.700
It's called Creatinging
Secure Transactions on

00:16:59.700 --> 00:16:59.700
Mac OS X Server Using SSL.

00:17:01.280 --> 00:17:04.840
Okay, now we're on to the
second part of our talk,

00:17:04.840 --> 00:17:06.890
Securing Message Content.

00:17:12.330 --> 00:17:15.300
Sometimes SSL is not enough.

00:17:15.320 --> 00:17:19.310
You may have messages which are
very confidential and you want

00:17:19.310 --> 00:17:23.900
to make sure that not only can
they not be read in transit,

00:17:24.010 --> 00:17:26.500
but you want to make sure they
can't be read on the disk.

00:17:26.520 --> 00:17:33.760
Perhaps you don't trust the system
administrator in this case or

00:17:33.760 --> 00:17:33.760
all the system administrators
in between you and your recipient.

00:17:34.320 --> 00:17:41.720
This is perhaps other people
have physical access to your

00:17:41.720 --> 00:17:41.720
machine and you want to make sure
that they can't read the message.

00:17:42.520 --> 00:17:47.080
So, we're going to... There are many
different ways you can encrypt messages.

00:17:47.210 --> 00:17:52.130
You can use something like
PGP or OpenPGP or GPG.

00:17:52.160 --> 00:17:56.790
We're going to talk about
using SMIME because this

00:17:56.790 --> 00:17:56.790
is built into Mac OS X.

00:17:57.430 --> 00:17:58.940
SMIME will let you do two things.

00:17:59.130 --> 00:18:01.640
First of all,
it will let you sign messages.

00:18:01.640 --> 00:18:05.200
And second of all,
it will let you encrypt the messages.

00:18:05.700 --> 00:18:09.940
So, let's go back to our diagram
about authentication methods.

00:18:09.990 --> 00:18:13.500
As we started out with just
using a plain text password.

00:18:13.550 --> 00:18:16.670
And as we said before,
this is not an adequate method

00:18:16.780 --> 00:18:18.500
for protecting your data.

00:18:18.540 --> 00:18:22.140
Then,
we moved on to encrypting the password.

00:18:22.180 --> 00:18:25.580
And this will help keep out, say,
you know, your nosy neighbors who happen

00:18:25.700 --> 00:18:27.460
to be sharing your network.

00:18:27.520 --> 00:18:30.840
If we go and we use SSL to
encrypt the entire session,

00:18:30.880 --> 00:18:35.100
this will keep out some script kiddies
who are breaking into the network.

00:18:35.320 --> 00:18:37.820
And if we use S-MIME,
this will protect the message

00:18:37.820 --> 00:18:42.550
content from industrial
spies or foreign governments.

00:18:43.430 --> 00:18:46.320
So, what are the benefits of using SMOT?

00:18:46.610 --> 00:18:49.480
Well, you can ensure,
when you sign a message,

00:18:49.590 --> 00:18:53.160
you can ensure that the message,
once it's received,

00:18:53.200 --> 00:18:55.400
has not been modified in transit.

00:18:55.760 --> 00:18:58.010
Second of all,
you have to be aware that this doesn't

00:18:58.040 --> 00:19:01.590
make a claim about the human or
the computer that sent the message,

00:19:01.590 --> 00:19:10.470
so you can't guarantee that the
message is from who it says it's from.

00:19:10.660 --> 00:19:13.700
When it comes to encryption,
it prevents the messages from

00:19:13.700 --> 00:19:16.260
being read in transit and on disk.

00:19:16.390 --> 00:19:20.140
So let's take a look at how
you go ahead and use S-MOD.

00:19:20.190 --> 00:19:23.420
Well, Mac OS X Mail supports
this right out of the box.

00:19:23.600 --> 00:19:28.390
And like in the case of SSL,
you need to get certificates.

00:19:28.840 --> 00:19:33.900
Now, you can sign messages right away,
and you can encrypt messages.

00:19:34.160 --> 00:19:37.970
In order to do that, you need to have the
other person's public key.

00:19:38.190 --> 00:19:39.500
This is also PKI.

00:19:39.700 --> 00:19:41.690
So,
how do you get someone else's public key?

00:19:41.700 --> 00:19:42.700
Well, there's two ways you can do it.

00:19:42.700 --> 00:19:45.660
First of all, you can receive a signed
message from them.

00:19:45.780 --> 00:19:49.520
If you receive a signed message,
that will include enough information for

00:19:49.520 --> 00:19:51.690
mail to reply and encrypt the message.

00:19:51.700 --> 00:19:55.590
The other method is to retrieve
this information from a server.

00:19:55.590 --> 00:19:58.560
Many directory services servers,
such as LDAP,

00:19:58.870 --> 00:20:02.040
provide an option to store all
of the public keys from people

00:20:02.110 --> 00:20:03.500
in your organization on them.

00:20:03.690 --> 00:20:05.780
And that way,
you can look it up there and not

00:20:05.880 --> 00:20:09.330
need to receive a message from
someone before you send them one.

00:20:09.760 --> 00:20:13.200
So, how do we get an S/MIME certificate?

00:20:13.380 --> 00:20:15.940
Well, in this case,
we can go to a third-party vendor.

00:20:15.940 --> 00:20:18.700
We can go to VeriSign
and we can pay them $20.

00:20:18.700 --> 00:20:21.970
But the good news is,
you can get a free certificate from THOT,

00:20:22.110 --> 00:20:24.700
and that will automatically
be recognized as valid.

00:20:24.800 --> 00:20:29.700
Now, THOT's S/MIME certificates use
something called their Web of Trust.

00:20:29.700 --> 00:20:33.160
And when you get a certificate initially,
it says "THOT free mail member"

00:20:33.240 --> 00:20:34.590
instead of your real name.

00:20:34.760 --> 00:20:37.460
In order for your name to
appear on the certificate,

00:20:37.460 --> 00:20:41.180
you have to find people who are
considered notaries by THOT to assert

00:20:41.180 --> 00:20:42.700
that you are who you say you are.

00:20:42.700 --> 00:20:47.700
And once you find enough of those,
your certificate will bear your name.

00:20:48.250 --> 00:20:50.640
Alternatively,
if you're a large organization,

00:20:50.640 --> 00:20:54.200
you can consider becoming your own
certificate authority for SMIME.

00:20:54.290 --> 00:20:59.200
And that way you can validate everyone's
certificates in your organization.

00:20:59.320 --> 00:21:01.440
Now when you start using SMIME,
you're going to see a

00:21:01.440 --> 00:21:02.600
bunch of files around.

00:21:02.600 --> 00:21:05.140
There are two different file
types you need to worry about.

00:21:05.270 --> 00:21:07.700
The first type of file is a P7 file.

00:21:07.770 --> 00:21:10.100
That contains the certificate itself.

00:21:10.220 --> 00:21:13.630
When you use Safari to download
a certificate from Thought,

00:21:13.630 --> 00:21:15.190
you will see a .exe file.

00:21:15.210 --> 00:21:17.000
This is actually a P7 file.

00:21:17.070 --> 00:21:19.830
So if you're going to pass this around,
you're going to need to

00:21:19.830 --> 00:21:21.180
rename it before you do so.

00:21:21.290 --> 00:21:24.460
In order to use Safari to obtain
a certificate from Thought,

00:21:24.480 --> 00:21:29.000
you need to make sure you're
using Mac OS 10.3.4 or better.

00:21:29.130 --> 00:21:32.890
If you use a Mozilla-based browser,
such as Firefox,

00:21:33.870 --> 00:21:35.150
Now there's a caveat.

00:21:35.150 --> 00:21:38.310
You have to be careful when you're
managing these certificates.

00:21:38.520 --> 00:21:41.360
Because certificates expire,
at the end of the year,

00:21:41.360 --> 00:21:46.340
you'll see in your keychain red Xs
saying the certificate has expired.

00:21:46.390 --> 00:21:49.840
Don't delete those, because if you do,
you won't be able to read

00:21:49.840 --> 00:21:53.540
encrypted messages that person has
sent you with that certificate.

00:21:55.180 --> 00:21:58.400
The second thing you have to be
aware of is if you are deleting

00:21:58.400 --> 00:22:02.300
your own old certificates,
don't delete just the certificate

00:22:02.300 --> 00:22:03.900
and leave the key around.

00:22:03.900 --> 00:22:06.260
Because mail,
when it sends a message out,

00:22:06.420 --> 00:22:09.950
will include all of your keys,
and when the other person replies,

00:22:10.040 --> 00:22:12.360
they could choose the key to
which you no longer have the

00:22:12.460 --> 00:22:13.800
corresponding certificate.

00:22:13.840 --> 00:22:17.370
That means you won't be able to read
the encrypted message they send you.

00:22:18.030 --> 00:22:21.500
So, what does it look like in the
mail client when you do this?

00:22:21.530 --> 00:22:24.680
Well,
you can sign a message and in the bottom

00:22:24.790 --> 00:22:29.900
right-hand portion of the header you
check a checkmark and it looks like this.

00:22:30.040 --> 00:22:33.630
If you want to encrypt a message,
there's a padlock.

00:22:33.880 --> 00:22:35.580
Same place right beside the checkmark.

00:22:35.640 --> 00:22:38.320
And when you check the padlock,
it becomes locked.

00:22:38.450 --> 00:22:41.940
If you choose to both sign
and encrypt a message,

00:22:41.940 --> 00:22:47.210
you'll check both the checkmark and the
padlock and they will both be enabled.

00:22:47.520 --> 00:22:50.760
What happens when you receive
a signed or encrypted message?

00:22:50.940 --> 00:22:54.510
Well, when you receive a signed message
at the bottom of the header,

00:22:54.510 --> 00:22:57.300
the checkmark will appear and
the word "signed" will appear.

00:22:57.460 --> 00:23:01.700
If you receive an encrypted message,
in this case you'll see a lock icon

00:23:01.870 --> 00:23:05.640
and the word "encrypted". And lastly,
if you receive a message that's

00:23:05.770 --> 00:23:07.840
both signed and encrypted,
you'll see the lock

00:23:07.840 --> 00:23:10.180
icon and the checkmark.

00:23:10.180 --> 00:23:11.870
So this is what happens
when things go right.

00:23:11.880 --> 00:23:13.520
Well, what happens when things go wrong?

00:23:13.520 --> 00:23:17.730
Well, if mail receives an SMI message
that's been signed and it can't

00:23:17.890 --> 00:23:21.030
verify the message signature,
it will warn you about that,

00:23:21.040 --> 00:23:23.260
putting a big yellow
bar above the message.

00:23:23.260 --> 00:23:24.400
So what can cause this?

00:23:24.580 --> 00:23:25.620
Well, two things.

00:23:25.740 --> 00:23:28.700
First off,
the message content could be modified

00:23:28.850 --> 00:23:32.540
by someone who is purposely--some
adversary who's trying to modify

00:23:32.540 --> 00:23:35.540
the content of the message,
you know, to fool you, you know,

00:23:35.570 --> 00:23:37.900
if you get a message from
your boss or something.

00:23:37.900 --> 00:23:42.090
And the other thing is if you resend
a message with your signature,

00:23:42.120 --> 00:23:44.350
you will see that as well.

00:23:44.400 --> 00:23:46.880
And in that case, don't worry,
you can safely ignore the message.

00:23:46.880 --> 00:23:48.120
And what about encrypted messages?

00:23:48.190 --> 00:23:49.620
What happens when an error occurs?

00:23:49.620 --> 00:23:51.310
Well, in this case,
you won't be able to see the

00:23:51.410 --> 00:23:54.210
message at all and you'll see a
similar looking error with a lock

00:23:54.550 --> 00:23:58.060
saying "unable to decrypt message".
This could happen because the

00:23:58.060 --> 00:24:01.530
message was modified in transit or it
could happen because you don't have

00:24:01.670 --> 00:24:06.820
the right certificate and key pair,
you need the other person's public key.

00:24:07.740 --> 00:24:09.610
Now, we're on to the third
section of our talk.

00:24:09.830 --> 00:24:12.100
This is about managing multiple domains.

00:24:12.170 --> 00:24:15.770
If you're an ISP or you handle
multiple domains for your company,

00:24:16.330 --> 00:24:17.600
what do you do with that?

00:24:17.600 --> 00:24:20.600
Well, there are four cases
we're going to cover.

00:24:20.750 --> 00:24:24.020
First off, you have the easy case
where you have one domain.

00:24:24.450 --> 00:24:27.620
Second case is where you have
multiple domains with one namespace,

00:24:27.780 --> 00:24:30.600
and we call this virtual domains.

00:24:30.600 --> 00:24:33.690
The third case is virtual hosting,
where you have a bunch of domains

00:24:33.690 --> 00:24:35.600
and a bunch of different namespaces.

00:24:35.710 --> 00:24:37.880
This is very common if you're
an internet provider or you

00:24:37.880 --> 00:24:39.540
have a shared co-located server.

00:24:39.610 --> 00:24:44.140
And lastly, we'll cover some advanced
virtual hosting techniques.

00:24:44.790 --> 00:24:48.650
So, when you're using Mac OS X Server,
there are two ways to configure

00:24:48.650 --> 00:24:51.100
virtual hosting and virtual domains.

00:24:51.160 --> 00:24:53.800
First off,
you can use the Mac OS X GUI using

00:24:53.890 --> 00:24:57.170
Server Admin and Workgroup Manager,
and this will store the

00:24:57.190 --> 00:24:59.040
information in Open Directory.

00:24:59.040 --> 00:25:06.070
The second method is using
the Postfix configuration file

00:25:06.070 --> 00:25:06.070
that you see in Etsy Postfix.

00:25:06.580 --> 00:25:09.840
Let's take a look at what
happens when you have one domain.

00:25:09.840 --> 00:25:12.700
Well, in this case you don't have
to do anything special.

00:25:12.700 --> 00:25:17.460
You create a bunch of user accounts,
you set up the host or use that domain,

00:25:17.600 --> 00:25:21.500
and each user account will correspond to
the left-hand side of an email address.

00:25:22.690 --> 00:25:24.440
Now, what about virtual domains?

00:25:24.490 --> 00:25:27.480
Well,
in this case you have a shared namespace.

00:25:27.480 --> 00:25:30.500
This is very useful if your
company has multiple names,

00:25:30.500 --> 00:25:32.500
if you've registered
variations on the name,

00:25:32.500 --> 00:25:37.470
you have a misspelling you've registered,
and you want those all to receive email.

00:25:37.940 --> 00:25:42.040
What you can do is you create a
virtual domain in Mac OS X Server.

00:25:42.080 --> 00:25:44.100
This acts like an alias.

00:25:44.190 --> 00:25:47.990
And so we have, in our example,
we have a company, Banana Software,

00:25:48.140 --> 00:25:53.000
and they've registered
bananasoftware.ca and banana-inc.ca,

00:25:53.030 --> 00:25:56.010
and in both cases, they receive mail.

00:25:57.000 --> 00:26:15.400
[Transcript missing]

00:26:15.900 --> 00:26:46.100
[Transcript missing]

00:26:51.800 --> 00:26:56.190
Okay, so this time we're going to do the
Mac OS X configuration of the virtual

00:26:56.220 --> 00:26:57.980
hosting slide that Paul showed us.

00:26:58.020 --> 00:27:03.500
So let's work through that slide and
configure what he showed us as possible.

00:27:03.550 --> 00:27:04.580
Let's go ahead and actually do that.

00:27:04.650 --> 00:27:07.600
So let's bring up the
server admin application.

00:27:08.320 --> 00:27:10.260
And the way we're going to do that
is we're going to do part of the

00:27:10.260 --> 00:27:14.420
administration with server admin
to tell it about the virtual hosts,

00:27:14.470 --> 00:27:17.830
and then we're going to bring up
workgroup manager to alter user records.

00:27:17.940 --> 00:27:22.800
So first server admin, mail service,
settings, advanced tab,

00:27:22.850 --> 00:27:25.920
and this time we want
the hosting sub-tab.

00:27:26.290 --> 00:27:28.440
We're going to check the box
to enable virtual hosting,

00:27:28.460 --> 00:27:31.830
which will then allow us
to add our virtual hosts.

00:27:33.300 --> 00:27:37.040
The first one is Bananasoftware.ca.

00:27:37.040 --> 00:27:40.200
And the second one is
going to be Starfruit.ca.

00:27:40.200 --> 00:27:44.590
Let's go ahead and save that.

00:27:47.640 --> 00:27:49.520
That's all we need to
do with Server Admin.

00:27:49.550 --> 00:27:52.300
Now let's bring up the Workgroup Manager.

00:27:52.360 --> 00:27:55.070
So we saw that we had two people,
Joe and Joe Bob,

00:27:55.120 --> 00:27:57.940
and they both want Joe at
their domain names.

00:27:58.000 --> 00:28:02.210
So the way we do that is we look at
their user records and we're going

00:28:02.280 --> 00:28:07.300
to add the email address we want to
control into the short names field.

00:28:07.340 --> 00:28:09.960
So we're going to come
to this short name field,

00:28:09.960 --> 00:28:13.440
and we're going to go underneath the
last entry that is already there.

00:28:13.540 --> 00:28:17.460
We're going to double click on it,
and that allows us to edit this field.

00:28:17.560 --> 00:28:22.270
So we're going to add
joe@bananasoftware.ca.

00:28:22.340 --> 00:28:24.960
We'll go ahead and save that user record.

00:28:26.200 --> 00:28:32.250
and Joe Bob also wanted Joe,
but he wanted that at joe@starfruit.ca.

00:28:34.650 --> 00:28:40.100
and Andrew So now we've actually gone
through and that's all it takes to

00:28:40.100 --> 00:28:45.000
actually configure the scenario presented
in virtual hosting in Paul's slide.

00:28:45.000 --> 00:28:54.350
So now we have email sent to
Joe@bananasoftware.ca going to this

00:28:54.350 --> 00:29:00.240
person Joe and we have the email address
Joe@starfruit.ca mail to that email

00:29:00.240 --> 00:29:05.540
address going to Joe Bob and that's
all we have to do to do virtual hosting.

00:29:05.540 --> 00:29:08.580
Now I'm going to turn
it back over to Paul.

00:29:12.690 --> 00:29:15.220
Thank you very much, Andrew.

00:29:15.300 --> 00:29:17.130
So to summarize,
what do we have to do to set

00:29:17.130 --> 00:29:19.330
up virtual hosting on Mac OS X?

00:29:19.360 --> 00:29:21.420
First off, we use a Work Group Manager.

00:29:21.420 --> 00:29:24.140
The short name field contains
the email address for the

00:29:24.140 --> 00:29:26.200
other domain we want to use.

00:29:26.220 --> 00:29:29.060
And the advantage of using the
Open Directory method is that it

00:29:29.100 --> 00:29:33.160
keeps all of the configuration
information in one place.

00:29:33.190 --> 00:29:36.270
However, there's some things that you
can't do with Open Directory.

00:29:36.280 --> 00:29:39.540
And we're going to talk about a few
advanced virtual hosting techniques

00:29:39.540 --> 00:29:41.540
that are possible with PostFix.

00:29:41.610 --> 00:29:46.080
So the first technique is having one
email address go to multiple people.

00:29:46.080 --> 00:29:49.460
This is very useful if you have a
generic email address like contact,

00:29:49.840 --> 00:29:52.540
feedback, or info at your domain name.

00:29:52.540 --> 00:29:54.920
As you can see in the slide,
we have this email address

00:29:54.920 --> 00:29:56.640
going to three of our users.

00:29:56.640 --> 00:30:00.700
The second technique you can do is
create a catch-all email address.

00:30:00.700 --> 00:30:04.430
This means that any email address
that's not explicitly specified in your

00:30:04.430 --> 00:30:06.840
domain will go to this user's mailbox.

00:30:06.840 --> 00:30:09.670
And lastly,
we can provide an email address

00:30:09.670 --> 00:30:12.720
that exists without a user account.

00:30:12.890 --> 00:30:17.100
So in this case,
we can forward julie@bananasoftware.ca

00:30:17.190 --> 00:30:19.670
to her mac.com account.

00:30:21.460 --> 00:30:25.060
There are two types of virtual
domains that you need to be aware of.

00:30:25.200 --> 00:30:28.800
Now the first case is
this old sendmail style.

00:30:28.880 --> 00:30:33.100
If you were using Mac OS X Server Jaguar
that had sendmail,

00:30:33.450 --> 00:30:35.520
10.3 and later have Postfix.

00:30:35.730 --> 00:30:38.370
Postfix, however,
has a sendmail compatibility mode.

00:30:38.400 --> 00:30:42.060
If you use the default configuration,
you don't need to worry about this.

00:30:42.140 --> 00:30:45.730
However, if you're creating this
from scratch or by hand,

00:30:45.850 --> 00:30:46.740
you need to pay attention.

00:30:46.940 --> 00:30:49.000
When you use sendmail
style virtual domains,

00:30:49.180 --> 00:30:52.300
that means everything on the
left-hand side of an email address

00:30:52.720 --> 00:30:55.590
will go to that user account,
even if it hasn't been

00:30:55.730 --> 00:30:56.960
explicitly specified.

00:30:56.980 --> 00:30:59.840
In this case, we have two customers,
Joe and Jane,

00:30:59.840 --> 00:31:06.020
and Joe has Bananasoftware.ca,
and Jane has Guava.ca.

00:31:06.030 --> 00:31:08.880
However, Joe@Guava.ca is not a
valid email address,

00:31:08.880 --> 00:31:11.260
and neither is Jane@Bananasoftware.ca.

00:31:11.430 --> 00:31:15.240
With sendmail style virtual hosting,
this email address will continue

00:31:15.240 --> 00:31:18.250
to receive email and will
go into their mail accounts.

00:31:18.440 --> 00:31:21.020
Any mail sent to this
address is likely to be spam,

00:31:21.310 --> 00:31:23.820
and we don't want that to happen.

00:31:24.380 --> 00:31:26.600
So if we use post-fixed-style
virtual domains,

00:31:26.600 --> 00:31:29.400
this isn't a problem,
because with a post-fixed-style

00:31:29.400 --> 00:31:36.770
virtual domain,
only email addresses that are

00:31:36.770 --> 00:31:36.770
explicitly specified in the virtual
user table will be allowed through.

00:31:38.930 --> 00:31:41.800
Let's summarize the virtual
hosting features we talked about.

00:31:41.860 --> 00:31:45.800
Number one, you can have an email address
that will go to multiple people.

00:31:46.140 --> 00:31:49.800
They can be a combination of
local users and remote users.

00:31:49.800 --> 00:31:53.800
You can have an email address that exists
without a corresponding user account.

00:31:53.800 --> 00:31:57.800
You can think of this as an alias
or call forwarding for email.

00:31:57.840 --> 00:32:00.840
You can provide a
catch-all email address,

00:32:00.940 --> 00:32:04.800
which will receive all email not
explicitly specified for that domain.

00:32:04.800 --> 00:32:07.800
And finally, you can mitigate dictionary
attacks by spammers.

00:32:07.800 --> 00:32:10.840
By using post-fixed-style
virtual hosting,

00:32:10.880 --> 00:32:16.800
only email addresses that are explicitly
defined will allow email to go through.

00:32:17.790 --> 00:32:21.380
Now, Andrew is going to demonstrate how
to use the post-fixed configuration

00:32:21.380 --> 00:32:26.010
file to set up some of the advanced
virtual hosting techniques we described.

00:32:27.360 --> 00:32:28.460
Thank you, Paul.

00:32:28.630 --> 00:32:32.170
So for this demo,
we're going to go and set up

00:32:32.400 --> 00:32:35.420
the advanced virtual hosting
slide that Paul just described.

00:32:35.420 --> 00:32:38.820
And the way we're going to do that is
we're going to go a little beyond what

00:32:38.820 --> 00:32:43.300
the Apple Server GUI tools provide
and give a little exposure to the

00:32:43.300 --> 00:32:46.110
underlying text configuration files.

00:32:46.360 --> 00:32:47.390
So let's put these apps away.

00:32:47.400 --> 00:32:51.480
So you'll see that the virtual
hosting configuration is still there.

00:32:51.650 --> 00:32:52.240
That's important.

00:32:52.240 --> 00:32:56.090
And let's bring up the
terminal application.

00:32:56.790 --> 00:32:59.700
and change directory to
the /etc/postfix directory.

00:32:59.710 --> 00:33:03.500
This is the directory that stores
all the postfix configuration files.

00:33:03.560 --> 00:33:08.600
And let's start by editing
the main one called main.cf.

00:33:08.750 --> 00:33:10.500
I'm going to do that with vim.

00:33:10.530 --> 00:33:12.360
And I need to do that
with rootly privileges,

00:33:12.370 --> 00:33:14.780
so I'm going to preface this
command with the sudo command,

00:33:14.780 --> 00:33:17.080
as I've done on this command line.

00:33:20.400 --> 00:33:24.390
Let's go to the end of the file,
and we're going to add a line.

00:33:24.410 --> 00:33:26.280
It's called Virtual Alias Maps.

00:33:26.280 --> 00:33:30.020
Now, this is the parameter that tells
Postfix where to look for this

00:33:30.020 --> 00:33:31.980
virtual hosting information.

00:33:32.010 --> 00:33:36.900
Let's go ahead and set that
to Etsy Postfix Virtual.

00:33:37.540 --> 00:33:40.580
Now the hash just tells Postfix
what kind of file or how the

00:33:40.580 --> 00:33:42.990
storage is laid out in that file.

00:33:43.000 --> 00:33:46.990
Many of the Postfix configuration
files are going to be the hash type.

00:33:47.620 --> 00:33:50.500
And for this demo, that's all we need,
so let's go ahead and

00:33:50.620 --> 00:33:51.830
write out that file.

00:33:51.830 --> 00:33:55.490
Next, let's edit that virtual file.

00:33:56.590 --> 00:34:00.080
So this file already has a bunch
of comments and information

00:34:00.080 --> 00:34:00.900
there that we can look at.

00:34:00.940 --> 00:34:02.980
I'm going to jump to the end of the file.

00:34:03.020 --> 00:34:06.160
And let's go ahead and work
through the slide that Paul had.

00:34:10.370 --> 00:34:16.600
So we had info@bananasoftware.ca
and we wanted that to go to Joe,

00:34:16.770 --> 00:34:19.190
Joe Bob, and Jane.

00:34:20.030 --> 00:34:23.020
Next, we had the catch-all email address.

00:34:23.020 --> 00:34:28.380
So any other email address that's not
already specified at Banana Software.

00:34:30.700 --> 00:34:33.720
Next, we had the catch-all email address.

00:34:33.720 --> 00:34:39.080
So any other email address that's not
already specified at Banana Software.

00:34:40.340 --> 00:34:48.230
Julie@bananasoftware.ca
Julie@mac.com Julie@bananasoftware.ca

00:34:48.300 --> 00:34:52.270
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:34:52.310 --> 00:34:56.300
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:34:56.300 --> 00:35:00.240
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:00.360 --> 00:35:04.300
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:04.300 --> 00:35:08.300
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:08.300 --> 00:35:12.300
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:12.300 --> 00:35:16.300
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:16.300 --> 00:35:20.300
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:20.300 --> 00:35:24.290
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:24.300 --> 00:35:28.170
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:28.350 --> 00:35:31.810
Julie@bananasoftware.ca
Julie@bananasoftware.ca

00:35:32.400 --> 00:35:36.080
Now that Postfix,
now that we've told Postfix

00:35:36.170 --> 00:35:39.800
about this new table,
we also need to have Postfix

00:35:39.800 --> 00:35:41.440
reload its configuration files.

00:35:41.440 --> 00:35:45.160
And the way we do that is with
the Postfix reload command.

00:35:45.840 --> 00:35:48.900
And we get a message back saying that the
Postfix Mail System has been refreshed.

00:35:48.920 --> 00:35:51.080
So now all of our changes are in effect.

00:35:51.080 --> 00:35:54.040
And so now we've configured the
slide that Paul laid out in the

00:35:54.040 --> 00:35:56.030
Advanced Virtual Hosting slide.

00:35:56.140 --> 00:35:58.150
I'll turn it back over to Paul now.

00:36:02.930 --> 00:36:04.260
Thank you very much, Andrew.

00:36:04.310 --> 00:36:08.440
Let's do a quick recap of what
we had to do to configure the

00:36:08.500 --> 00:36:10.330
post-fix configuration file.

00:36:10.700 --> 00:36:12.800
First off,
we have to do all these commands as root.

00:36:12.800 --> 00:36:16.730
We need to edit the main
configuration file and enable

00:36:16.730 --> 00:36:19.800
the virtual-alias-maps command.

00:36:20.120 --> 00:36:25.470
Next, we need to edit the virtual file
itself and define the email address

00:36:25.470 --> 00:36:27.800
configuration that we'd like.

00:36:27.800 --> 00:36:32.190
Once we've updated the map,
we run the post-map command to create

00:36:32.190 --> 00:36:34.800
the hash that post-fix will use.

00:36:34.800 --> 00:36:37.850
And finally,
we reload the post-fix configuration

00:36:38.190 --> 00:36:40.800
file using the post-fix reload command.

00:36:40.830 --> 00:36:46.630
Now, there are two things about using
post-fix versus open directory.

00:36:47.340 --> 00:36:49.490
First of all,
the post-fixed configuration

00:36:49.490 --> 00:36:52.950
files are accessible by
standard UNIX tools like VI,

00:36:52.950 --> 00:36:54.540
Emacs, and grep.

00:36:54.650 --> 00:36:57.530
And the second advantage to this
method is that the post-fixed

00:36:57.610 --> 00:37:01.450
configuration file is compatible with
any other post-fixed configuration

00:37:01.450 --> 00:37:06.540
file on any other UNIX flavor
that you may happen to be running.

00:37:06.740 --> 00:37:11.580
Finally, let's move on to stopping
spam and viruses.

00:37:14.670 --> 00:37:18.050
Unwanted email is inundating your server.

00:37:18.140 --> 00:37:22.490
There are two ways we provide
to stop it in Mac OS X's server.

00:37:22.730 --> 00:37:25.900
First of all, we can help you stop spam.

00:37:26.030 --> 00:37:28.960
There are many different strategies
you can employ to stop spam.

00:37:29.010 --> 00:37:32.580
You can use real time
black hole lists or RBLs.

00:37:32.610 --> 00:37:36.780
You can use Spam Assassin,
which is a server side filtering tool.

00:37:36.810 --> 00:37:39.080
You could employ a
challenge response system,

00:37:39.240 --> 00:37:42.430
which means that everyone who sends
mail to one of your users has to fill

00:37:42.550 --> 00:37:44.250
out a form to prove they're human.

00:37:44.390 --> 00:37:48.410
You could use a white listing technique,
where you only accept mail

00:37:48.790 --> 00:37:52.580
from senders that you've
previously explicitly validated.

00:37:52.590 --> 00:37:54.980
You could also employ
client side filtering,

00:37:54.980 --> 00:37:57.880
like Mac OS X's junk mail filter.

00:37:57.900 --> 00:38:00.840
We're going to talk about RBLs,
and we're going to talk

00:38:00.840 --> 00:38:02.100
about Spam Assassin.

00:38:02.110 --> 00:38:07.340
When it comes to viruses and worms,
you say, well, Mac users aren't really

00:38:07.340 --> 00:38:08.600
affected by this stuff.

00:38:08.600 --> 00:38:10.220
You know, why should we care?

00:38:10.260 --> 00:38:12.590
Well, first of all,
not all of us have the luxury of

00:38:12.680 --> 00:38:14.050
working in an all Mac environment.

00:38:14.120 --> 00:38:15.200
All right.

00:38:15.500 --> 00:38:18.620
These are annoying, they waste bandwidth,
and you should really be a

00:38:18.620 --> 00:38:22.690
good internet citizen and stop
them from propagating further.

00:38:22.980 --> 00:38:27.590
Spammers will often explicitly
target the backup MX because they

00:38:27.590 --> 00:38:30.890
know it's often less protected.

00:38:31.520 --> 00:38:33.900
So, what about Real-Time Blackhole Lists?

00:38:34.050 --> 00:38:35.140
What can they do for you?

00:38:35.280 --> 00:38:38.320
Well, the upside is by enabling them,
there's a dramatic decrease in

00:38:38.320 --> 00:38:39.790
the amount of spam you receive.

00:38:39.800 --> 00:38:43.740
It just gets stopped before it's
delivered to your users' mailboxes.

00:38:43.780 --> 00:38:46.740
The downside to this is
they're often false positives.

00:38:46.810 --> 00:38:50.580
These lists are maintained by third
parties over whom you don't have control,

00:38:50.580 --> 00:38:55.030
and it's often difficult to get on a list
if you've been put on one inadvertently.

00:38:55.190 --> 00:38:57.930
Sometimes there are political
arguments over who should be

00:38:57.930 --> 00:38:59.420
on a list or who shouldn't.

00:38:59.440 --> 00:39:03.370
With those caveats said,
they're still extremely helpful.

00:39:03.510 --> 00:39:07.070
The first item you see on
the list here is rbls.org.

00:39:07.410 --> 00:39:10.730
This isn't an RBL itself,
but it's actually a real-time check

00:39:11.100 --> 00:39:15.240
which you can enter an IP address into,
and it will tell you how many RBLs are

00:39:15.310 --> 00:39:18.060
blocking this particular IP address.

00:39:18.330 --> 00:39:22.870
The rfcignorant.org RBL will
block mail from servers who

00:39:22.870 --> 00:39:24.550
aren't configured properly.

00:39:24.700 --> 00:39:28.810
This means they aren't accepting
mail for postmaster or abuse,

00:39:28.810 --> 00:39:31.430
or they don't have reverse DNS setup.

00:39:31.600 --> 00:39:37.100
Spamhouse.org, ORDB.org, NJABL.org,
Spamcop.net,

00:39:37.100 --> 00:39:39.040
or some other servers you can use.

00:39:39.050 --> 00:39:44.920
When we get to the end of the slides,
you'll see a URL for a site that lists

00:39:44.920 --> 00:39:50.990
dozens of different blackhole lists,
and you can consider using these

00:39:50.990 --> 00:39:50.990
for your organization depending
on which you feel are appropriate.

00:39:52.000 --> 00:39:55.780
Now,
spam assassin is a server-side filter,

00:39:55.780 --> 00:39:58.580
and that occurs after
you've received the mail.

00:39:58.720 --> 00:40:02.230
So if it hasn't been blocked
by your server using an RBL,

00:40:02.450 --> 00:40:04.000
spam assassin takes a look at it.

00:40:04.020 --> 00:40:05.770
And it employs a bunch
of different filters.

00:40:05.900 --> 00:40:08.300
These filters will look at
the content of the message.

00:40:08.340 --> 00:40:10.040
They'll look at the message headers.

00:40:10.060 --> 00:40:13.280
They'll decide, does this match my rules?

00:40:13.290 --> 00:40:17.060
And any time it matches a rule,
it's assigned a score.

00:40:17.100 --> 00:40:23.040
If the score exceeds a certain threshold,
that message gets marked as spam.

00:40:23.040 --> 00:40:26.110
If the message is marked as spam,
you can configure what to do with it,

00:40:26.110 --> 00:40:30.080
whether you want to keep the message,
whether you want to delete the message,

00:40:30.080 --> 00:40:31.700
or bounce the message.

00:40:32.180 --> 00:40:37.690
In addition to filtering messages based
on their content and the message body,

00:40:38.030 --> 00:40:42.860
SpamAssassin can use RBLs and assign
an additional score if a message is

00:40:42.870 --> 00:40:45.390
sent from a server that's in an RBL.

00:40:45.710 --> 00:40:50.130
It can employ Bayesian filtering,
which analyzes the message content,

00:40:50.130 --> 00:40:53.100
similar to the way
junk mail filter works.

00:41:14.050 --> 00:41:14.890
Well, what about viruses?

00:41:15.010 --> 00:41:17.990
Well, when it comes to viruses,
Tiger includes ClamAV,

00:41:18.000 --> 00:41:20.680
which is an open-source anti-virus tool.

00:41:20.720 --> 00:41:24.020
It will scan the email for viruses,
and once it's received,

00:41:24.020 --> 00:41:26.660
once it's found a virus,
it has a few options

00:41:26.730 --> 00:41:27.480
what it can do with it.

00:41:27.640 --> 00:41:31.570
It can delete the message right away,
it can quarantine it so you can check

00:41:31.570 --> 00:41:34.990
if it really is a virus-infected email,
and it can bounce the message.

00:41:35.070 --> 00:41:38.120
Now, bouncing the message
is a really bad idea.

00:41:38.160 --> 00:41:41.070
Most of the Windows viruses
and worms that are out there

00:41:41.070 --> 00:41:43.960
will forge both the from,
header, and the return address.

00:41:44.010 --> 00:41:47.820
So if you choose to bounce messages,
you'll be sending them back to some

00:41:47.820 --> 00:41:51.180
innocent third party who will be
inundated with bounce messages and

00:41:51.180 --> 00:41:53.400
wondering why they're getting them.

00:41:53.420 --> 00:41:56.870
You also have a few notification
options where you can notify the

00:41:56.870 --> 00:41:59.740
user who received the message or you,
the system administrator,

00:41:59.740 --> 00:42:02.300
one of these messages is received.

00:42:02.380 --> 00:42:05.860
So now Andrew will demonstrate how
to configure Mac OS X Server to

00:42:05.860 --> 00:42:07.520
use SpamAssassin in ClamAV.

00:42:10.520 --> 00:42:12.190
Thanks, Paul.

00:42:12.680 --> 00:42:16.400
So this is the last session of the
day and I'm getting a little antsy

00:42:16.400 --> 00:42:18.390
to get out of here for the weekend,
so I think I'm just going to

00:42:18.400 --> 00:42:21.240
try to race through this demo
as fast as I possibly can.

00:42:21.330 --> 00:42:24.080
So let's bring up
Server Admin Application.

00:42:24.210 --> 00:42:25.760
Let's bring up the Filters tab here.

00:42:25.760 --> 00:42:28.110
Let's check the box to
turn on SpamAssassin.

00:42:28.270 --> 00:42:30.250
Check the box to turn on ClamAV.

00:42:30.510 --> 00:42:33.340
Check the box to have my virus
database definitions updated.

00:42:33.400 --> 00:42:38.110
Click Save, and I think I'll hand
it over back to Paul.

00:42:39.110 --> 00:42:40.760
Wow, Andrew, that was really quick.

00:42:40.760 --> 00:42:43.000
Is there anything else you can tell us?

00:42:43.130 --> 00:42:44.180
Well, actually, okay.

00:42:44.320 --> 00:42:45.000
All right.

00:42:45.140 --> 00:42:46.000
Good.

00:42:46.000 --> 00:42:48.390
So let's go back and take a
closer look at some of these

00:42:48.680 --> 00:42:51.000
other options in the GUI.

00:42:51.040 --> 00:42:55.000
So Paul talked about the threshold
that has to be met by SpamAssassin.

00:42:55.000 --> 00:42:56.970
So this is a control for that.

00:42:56.990 --> 00:42:59.000
So least, moderate, and most.

00:42:59.000 --> 00:43:02.090
So if you leave it on least,
even mildly suspicious mail

00:43:02.090 --> 00:43:03.000
will get marked as junk.

00:43:03.000 --> 00:43:05.700
And if you have it set on most,
it will take many different

00:43:05.730 --> 00:43:09.000
criteria in order for a
message to get marked as junk.

00:43:09.150 --> 00:43:10.180
Accepted languages.

00:43:10.330 --> 00:43:13.710
Now SpamAssassin has some facility
to try to detect what language a

00:43:13.710 --> 00:43:16.000
given email message is written in.

00:43:16.130 --> 00:43:19.260
And so this selection lets you control
and choose those languages that

00:43:19.260 --> 00:43:24.000
you do not want to be considered a
potential characteristic of junk mail.

00:43:25.530 --> 00:43:28.830
Similarly with Locales,
SpamAssassin has some knowledge of

00:43:28.830 --> 00:43:32.430
what character sets are associated
with given country codes.

00:43:32.440 --> 00:43:35.380
So again,
this selector lets you choose those

00:43:35.640 --> 00:43:39.680
country codes that you do not want
to be considered as a potential

00:43:39.680 --> 00:43:41.710
characteristic of junk mail.

00:43:42.190 --> 00:43:45.670
Then this is some of that notification
option that Paul was mentioning.

00:43:45.690 --> 00:43:48.750
Once the message is
identified as junk mail,

00:43:48.750 --> 00:43:52.480
you can choose to bounce,
not such a great idea usually, to delete,

00:43:52.520 --> 00:43:53.850
deliver, or to redirect.

00:43:53.860 --> 00:43:56.270
Let's leave it undelivered,
and you can see that there

00:43:56.270 --> 00:43:58.880
are some additional options,
such as editing the

00:43:58.940 --> 00:44:00.680
subject line automatically.

00:44:00.820 --> 00:44:04.340
Keep in mind that SMAM Assassin already
adds its own header,

00:44:04.430 --> 00:44:07.030
so you might want to
look at that instead.

00:44:07.030 --> 00:44:12.100
Or you can choose to encapsulate the
mail as an attachment to a given message.

00:44:12.620 --> 00:44:16.020
Then this is some of that notification
option that Paul was mentioning.

00:44:16.140 --> 00:44:19.140
Once the message is
identified as junk mail,

00:44:19.150 --> 00:44:22.880
you can choose to bounce,
not such a great idea usually, to delete,

00:44:22.880 --> 00:44:24.260
deliver, or to redirect.

00:44:24.260 --> 00:44:26.460
Let's leave it undelivered,
and you can see that there

00:44:26.740 --> 00:44:29.200
are some additional options,
such as editing the

00:44:29.420 --> 00:44:30.990
subject line automatically.

00:44:31.090 --> 00:44:34.810
Keep in mind that SMAM Assassin already
adds its own header,

00:44:34.810 --> 00:44:34.890
so you might want to
look at that instead.

00:44:34.890 --> 00:44:34.890
Or you can choose to encapsulate the
mail as an attachment to a given message.

00:44:35.290 --> 00:44:38.540
And I think that's it for this final
demo on Spam Assassin and ClamAV,

00:44:38.540 --> 00:44:41.340
and I'll turn over the rest
of the session to Paul.

00:44:45.420 --> 00:44:46.390
Thank you very much, Andrew.

00:44:46.450 --> 00:44:50.320
So Mac OS X Server really makes it
easy to stop spam and virus-infected

00:44:50.320 --> 00:44:53.230
emails from getting to your mail server.

00:44:53.460 --> 00:44:55.600
Now onto the last portion of our talk.

00:44:55.600 --> 00:44:57.710
You've heard there are over
200 new features in Tiger.

00:44:58.060 --> 00:44:59.900
Well, this is one you probably
haven't heard about.

00:45:00.140 --> 00:45:01.740
It's Mail Account Bundles.

00:45:01.820 --> 00:45:04.400
What are Mail Account Bundles?

00:45:05.200 --> 00:45:08.850
They let you easily extend mail setup
assistant for your organization.

00:45:08.860 --> 00:45:12.990
You can put custom panels in that will
reduce the number of steps your users

00:45:12.990 --> 00:45:16.080
have to go through and the amount
of information they have to enter.

00:45:16.200 --> 00:45:19.950
This makes it really easy for them
to configure their account when they

00:45:19.960 --> 00:45:23.920
don't have to know the server or how
to turn on SSL or anything like that.

00:45:24.100 --> 00:45:29.100
It's going to mean fewer calls for you
and your support desk and fewer hassles.

00:45:29.280 --> 00:45:32.100
They're much less likely
to make a mistake.

00:45:32.100 --> 00:45:35.100
So what kind of things can you
configure with Mail Account Bundles?

00:45:35.100 --> 00:45:38.210
Well, you can configure the
name of the account,

00:45:38.210 --> 00:45:41.050
the server name,
the type of authentication

00:45:41.100 --> 00:45:43.100
such as Kerberos or MD5.

00:45:43.100 --> 00:45:46.100
You can choose the domain
name for the email address.

00:45:46.100 --> 00:45:51.100
You can specify if the email address
has to match the name of the account.

00:45:51.200 --> 00:45:53.920
You can choose whether SSL is
enabled or required and whether

00:45:54.290 --> 00:45:56.060
users are allowed to change this.

00:45:56.840 --> 00:45:58.850
You can say,

00:45:59.280 --> 00:46:01.540
Aha, what if you're stuck and
you need more information?

00:46:01.540 --> 00:46:05.440
I'm going to give you a clickable
URL which points to a web page

00:46:05.440 --> 00:46:09.420
on say your company's internet,
which will have even more information.

00:46:09.430 --> 00:46:12.690
And finally, these Mail Account Bundles
are also localizable.

00:46:12.880 --> 00:46:16.170
So if your organization provides mail
services to users who speak different

00:46:16.170 --> 00:46:19.420
languages or are in different countries,
you can use one Mail Account Bundle

00:46:19.420 --> 00:46:22.060
and give it to everyone,
and it will provide the

00:46:22.060 --> 00:46:24.620
information in their language.

00:46:24.700 --> 00:46:25.900
So what does this look like?

00:46:26.040 --> 00:46:28.230
Well, take a look at the screenshot here.

00:46:28.330 --> 00:46:31.110
In this Mail Account Setup
Wizard Assistant,

00:46:31.110 --> 00:46:33.540
we have Banana Software,
our fictional company.

00:46:33.540 --> 00:46:35.220
And their logo appears here.

00:46:35.490 --> 00:46:41.920
And in this case,
you can see the username

00:46:41.920 --> 00:46:45.040
has been filled in as Joe,
and appbananasoftware.ca

00:46:45.040 --> 00:46:46.500
has already been specified.

00:46:46.500 --> 00:46:48.320
That means when the user
gets to the next screen,

00:46:48.480 --> 00:46:51.260
they don't have to fill
that information in.

00:46:51.260 --> 00:46:55.200
You can also let the email
address be unrestricted.

00:46:55.220 --> 00:46:58.260
So if your organization is large
and you have multiple people.

00:46:58.260 --> 00:46:59.500
You can also let them
fill in the email address.

00:46:59.500 --> 00:47:01.530
And you can also let them
fill in the email address.

00:47:01.700 --> 00:47:04.630
And you can also let them
fill in the email address.

00:47:04.640 --> 00:47:07.360
And you can see here,
this field's not editable,

00:47:07.530 --> 00:47:10.120
which means the users can't
accidentally mistype the mail server

00:47:10.170 --> 00:47:14.910
and start getting wrong password
or server not found error messages.

00:47:15.220 --> 00:47:16.940
So how do you create one of these?

00:47:16.990 --> 00:47:19.800
Well, we provide one for .mac.

00:47:19.900 --> 00:47:24.300
If you take a look in
/library/mail/accounttypes,

00:47:24.300 --> 00:47:25.200
you'll find one.

00:47:25.260 --> 00:47:27.840
Take that bundle and make a copy.

00:47:27.860 --> 00:47:30.370
Inside there,
you'll find a TIFF file containing

00:47:30.370 --> 00:47:35.290
the .mac globe logo and a plist
called mailaccounts.plist.

00:47:35.650 --> 00:47:37.960
This is a file you need to edit.

00:47:37.990 --> 00:47:41.920
It has a bunch of unique IDs for both
the sending and receiving accounts.

00:47:41.940 --> 00:47:43.050
You need to create your own.

00:47:43.200 --> 00:47:47.800
To do this,
use the UUID Gen Command Line tool.

00:47:48.760 --> 00:47:52.780
Once you're finished editing the plist,
you save it.

00:47:52.800 --> 00:47:56.060
You can provide a graphic such
as your organization's logo.

00:47:56.100 --> 00:47:58.670
And then to test it,
stick it in your library folder.

00:47:58.900 --> 00:48:04.860
And this can go in /library,
tilde/library, or /network/library,

00:48:04.880 --> 00:48:06.480
whatever you feel is most appropriate.

00:48:06.480 --> 00:48:08.280
If you want to,
you can go ahead and provide an

00:48:08.280 --> 00:48:11.310
installer for your users that
will put this in the right place.

00:48:11.460 --> 00:48:14.700
If you preconfigure systems for
them before you deploy them,

00:48:14.730 --> 00:48:18.010
go ahead and include
this as one of the files.

00:48:18.610 --> 00:48:20.200
So, what did we learn today?

00:48:20.300 --> 00:48:23.300
Well, in summary, we've talked about how
you can secure your mail.

00:48:23.300 --> 00:48:26.390
So you can go home at the end of
the session and you can disable

00:48:26.520 --> 00:48:28.380
plain text passwords on your server.

00:48:28.510 --> 00:48:30.440
Make sure they can't be read in transit.

00:48:30.580 --> 00:48:35.000
You can go and you can enable SSL,
so your entire session is secure.

00:48:35.100 --> 00:48:39.040
You can get SMIME and you can start
signing and encrypting your mail.

00:48:39.550 --> 00:48:41.040
You'll be able to filter your mail.

00:48:41.170 --> 00:48:45.780
You can use RBLs to block spam
before it reaches the server.

00:48:45.850 --> 00:48:50.030
You can use SpamAssassin to minimize the
amount of spam that reaches your users'

00:48:50.030 --> 00:48:52.140
mailboxes even after it's accepted.

00:48:52.270 --> 00:48:57.220
You can use ClamAV to stop virus-infected
emails from getting to your users.

00:48:57.340 --> 00:49:01.360
And finally,
you can go and deploy a mail account

00:49:01.360 --> 00:49:04.580
bundle so when your users have
to configure their mail client,

00:49:04.580 --> 00:49:04.580
they have much less work to do.

00:49:06.130 --> 00:49:11.200
So if you need any more information,
the WWDC website contains documentation,

00:49:11.240 --> 00:49:13.870
resources, sample code.

00:49:15.220 --> 00:49:18.540
For those of you watching
at home or on the DVD,

00:49:18.540 --> 00:49:22.130
there are a few other sessions
you might find interesting.

00:49:22.340 --> 00:49:27.740
The Mac OS X Server Overview,
Moving to Tiger Server from Windows,

00:49:27.780 --> 00:49:32.850
Upgrading to Tiger Server,
Managing Clients in the Enterprise,

00:49:32.850 --> 00:49:36.350
and Enterprise Messaging Solutions.

00:49:36.610 --> 00:49:40.310
Now, we'll turn it over to
Jason Anthony Guy who

00:49:40.310 --> 00:49:40.310
will manage the Q&A.