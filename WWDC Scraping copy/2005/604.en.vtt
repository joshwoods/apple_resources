WEBVTT

00:00:06.350 --> 00:00:10.080
...to talk about today,
and I'd just like to get a show

00:00:10.190 --> 00:00:14.100
of hands just to see who has been
attending what and what kind of level of

00:00:14.100 --> 00:00:15.840
WebObjects knowledge we have out there.

00:00:15.840 --> 00:00:22.160
So if you could raise your hand if you
attended the Xcode keynote yesterday.

00:00:22.530 --> 00:00:23.000
Great.

00:00:23.000 --> 00:00:23.360
All right.

00:00:23.400 --> 00:00:28.800
So everybody's interested in finding
out the latest great Xcode information.

00:00:28.800 --> 00:00:32.020
So how many of you out there
are newbies and haven't used

00:00:32.020 --> 00:00:34.930
WebObjects at all or even touched it?

00:00:35.060 --> 00:00:36.020
Wow.

00:00:36.020 --> 00:00:36.330
Okay.

00:00:36.440 --> 00:00:39.100
So we have a lot of newbies out there.

00:00:39.100 --> 00:00:40.820
Great.

00:00:40.820 --> 00:00:44.070
So we'll definitely have a
little information for you

00:00:44.080 --> 00:00:48.020
later in the presentation to
hopefully get you up to speed.

00:00:48.020 --> 00:00:53.430
How many of you have used WebObjects
for about five years or less.

00:00:54.110 --> 00:00:56.600
Less, yeah.

00:00:56.750 --> 00:01:00.500
How about you grizzled veterans
have been using WebObjects when

00:01:00.500 --> 00:01:03.380
it was in Objective-C or used
WebScript or something like that?

00:01:03.500 --> 00:01:05.200
Wow.

00:01:05.200 --> 00:01:05.700
Okay.

00:01:05.700 --> 00:01:10.570
So I think we have a good
selection in the audience here,

00:01:10.600 --> 00:01:15.180
and hopefully we can have enough
information for everybody today.

00:01:17.040 --> 00:01:20.940
So what I'd like to start off with is
just give an overview of the WebObjects

00:01:20.940 --> 00:01:25.520
technology and what kind of bits
and tools and frameworks are in it.

00:01:25.650 --> 00:01:29.400
And then a little later,
I'll move on to more recent events,

00:01:29.400 --> 00:01:32.940
what we've been doing and what
we plan to do in the future.

00:01:32.960 --> 00:01:36.840
And then we'll move on to talking about
some other stuff like documentation and

00:01:36.840 --> 00:01:40.870
other training materials and support
stuff that you can get a hold of.

00:01:43.090 --> 00:01:46.300
So the first thing I'd like to
talk about are various rumors

00:01:46.380 --> 00:01:49.720
that were floating around on the
net coming up to the conference.

00:01:49.780 --> 00:01:53.000
Especially, you know,
a lot of people like to speculate

00:01:53.000 --> 00:01:56.320
about what the next version of
WebObjects will have in there.

00:01:56.390 --> 00:02:00.400
And so a lot of you guys think we
don't read the Apple mailing list,

00:02:00.550 --> 00:02:01.440
but we do.

00:02:01.460 --> 00:02:06.350
And a lot of times we're
very amused by your posts.

00:02:06.550 --> 00:02:12.120
I recently saw a roadmap posted
for the next version of WebObjects,

00:02:12.120 --> 00:02:16.490
and someone satirically did a takeoff
on our Direct-to-Star technologies.

00:02:16.500 --> 00:02:20.500
And so for those of you who do
not know what Direct-to-Star is,

00:02:20.500 --> 00:02:25.060
we use that to refer to our rapid
prototyping technologies and ways to

00:02:25.180 --> 00:02:27.500
build applications within five minutes.

00:02:27.540 --> 00:02:31.910
So someone did a takeoff on that,
and they posted one of the

00:02:31.910 --> 00:02:34.500
features as Direct-to-Brain.

00:02:34.500 --> 00:02:38.500
I'm not sure what that means,
except maybe we have cortical implants.

00:02:38.500 --> 00:02:44.500
Maybe it'll code your app directly
to disk and deploy it or something.

00:02:44.500 --> 00:02:47.750
I don't know, but I can safely say that
that is not a feature in the

00:02:47.840 --> 00:02:49.500
next version of WebObjects.

00:02:51.280 --> 00:02:54.760
direct to newest OS release was
another thing someone wanted.

00:02:54.930 --> 00:02:58.400
Well, we just released
WebObjects 5.2.4 for Tiger,

00:02:58.400 --> 00:03:00.900
so I think we're doing a
pretty good job in this area,

00:03:00.900 --> 00:03:04.510
but we could probably try
to do a little better.

00:03:05.400 --> 00:03:07.580
Direct to programming language.

00:03:07.580 --> 00:03:11.210
Hey, we just announced an
Intel compiler for Fortran.

00:03:11.210 --> 00:03:13.890
Why don't we move WebObjects to Fortran?

00:03:13.890 --> 00:03:15.040
How about that?

00:03:15.040 --> 00:03:17.210
How many Python users out there?

00:03:17.280 --> 00:03:19.120
Maybe we'll move to Python.

00:03:19.120 --> 00:03:22.970
I can safely say that WebObjects
is staying in Java and that is

00:03:22.970 --> 00:03:27.500
our platform of choice and our
programming language of choice.

00:03:28.800 --> 00:03:31.460
Direct-to-Customer Buzzword.

00:03:31.530 --> 00:03:34.740
Our marketing guys love this,
and they would love for us to have

00:03:34.740 --> 00:03:38.220
some kind of bot out there that
screen scrapes all the IT world or

00:03:38.270 --> 00:03:40.960
e-weekly magazine and grabs the latest,
greatest buzzwords,

00:03:40.960 --> 00:03:42.830
and somehow we get that into the product.

00:03:42.830 --> 00:03:45.570
But somehow I don't think
that will be a feature,

00:03:45.570 --> 00:03:49.180
but we try our best as far as
keeping up with the latest stuff.

00:03:51.020 --> 00:03:53.960
And I think this is where most of
these features are going to end up,

00:03:53.960 --> 00:03:56.400
which is directly on the mailing list.

00:03:56.470 --> 00:04:00.500
And it's fun to speculate
what we're doing,

00:04:00.500 --> 00:04:03.900
but I think that's most of these
features are going to end up there.

00:04:06.320 --> 00:04:09.400
So what is in the next
version of WebObjects?

00:04:09.480 --> 00:04:12.300
I'd like to kind of play off
that theme and kind of throw

00:04:12.300 --> 00:04:15.590
out a few phrases myself.

00:04:15.730 --> 00:04:17.990
Direct to customers.

00:04:18.070 --> 00:04:23.570
So that somehow we're going to get
WebObjects in the hands of more people.

00:04:24.680 --> 00:04:25.630
Direct to your wallet.

00:04:25.760 --> 00:04:29.150
So Apple is going to be
putting money in your pocket,

00:04:29.360 --> 00:04:31.210
whether you know it or not.

00:04:32.420 --> 00:04:35.210
and direct-to-developer tools.

00:04:35.500 --> 00:04:38.930
So what I'd like to do is just leave
you guys gnawing on those phrases.

00:04:39.060 --> 00:04:41.940
I might, throughout the presentation,
drop a few Easter eggs here

00:04:41.940 --> 00:04:45.000
and there as far as what's in
the next WebObjects release,

00:04:45.000 --> 00:04:48.340
but what I'd like to do
is move on and talk about,

00:04:48.340 --> 00:04:50.800
in general,
what is in the WebObjects technology,

00:04:50.800 --> 00:04:55.500
what's in our bundle,
and what you can do with our tools.

00:04:56.860 --> 00:04:58.800
So what is WebObjects?

00:04:58.810 --> 00:05:03.980
It's a collection of tools and frameworks
that allow you to build Java application

00:05:04.080 --> 00:05:07.990
servers and web services very easily.

00:05:09.210 --> 00:05:13.670
Within the bundle,
we have an Xcode IDE that

00:05:13.910 --> 00:05:18.410
is our IDE of choice,
and that's where you'll begin building

00:05:18.410 --> 00:05:24.480
your projects and compiling your
code and manipulating your data.

00:05:24.540 --> 00:05:27.830
We have a database mapping
tool called EOModeler,

00:05:27.830 --> 00:05:30.530
and that does object relational mapping.

00:05:31.000 --> 00:05:44.300
[Transcript missing]

00:05:44.910 --> 00:05:48.350
And we have web services built
underneath everything and a

00:05:48.390 --> 00:05:53.370
bunch of tools that allow you to
build web services very easily.

00:05:53.860 --> 00:05:59.440
And we have a HTML page layout
application called WebObjects Builder.

00:05:59.440 --> 00:06:03.840
And so we'll dive in a little
deeper in a few more minutes.

00:06:05.000 --> 00:06:08.390
So a lot of you guys are familiar
with a lot of Java technologies,

00:06:08.390 --> 00:06:12.270
I'm sure, and the J2E specifications,
and there's a whole laundry list of

00:06:12.340 --> 00:06:15.680
technologies under that umbrella,
and how does WebObjects

00:06:15.680 --> 00:06:17.300
kind of fit into this?

00:06:17.300 --> 00:06:20.190
And I kind of like to
visualize it this way,

00:06:20.190 --> 00:06:24.390
that WebObjects kind of wraps
a lot of these technologies,

00:06:24.490 --> 00:06:28.770
and either we make it easier
to access those technologies,

00:06:28.770 --> 00:06:33.580
or we provide equivalent technology
that you can accomplish the same thing.

00:06:34.100 --> 00:06:37.990
And then we also integrate well
with some of these other things,

00:06:37.990 --> 00:06:41.070
like Java mail and such,
and you can bolt that functionality

00:06:41.070 --> 00:06:42.300
onto your application.

00:06:46.110 --> 00:06:48.820
So why do we think WebObjects is cool?

00:06:48.950 --> 00:06:53.700
We have very graphical tools
that allow you to access the

00:06:53.740 --> 00:06:55.270
powerful frameworks that we have.

00:06:55.600 --> 00:06:58.150
And really,
our frameworks have a lot of best

00:06:58.210 --> 00:07:03.640
practices or a lot of code that you can
reuse or leverage to your advantage,

00:07:03.640 --> 00:07:07.630
and that helps you build
your apps a lot faster.

00:07:07.890 --> 00:07:11.930
We also scale very well.

00:07:12.130 --> 00:07:15.890
WebObjects was architected to
be an enterprise application --

00:07:16.000 --> 00:07:20.040
enterprise-level application server,
and there are quite a number of

00:07:20.040 --> 00:07:25.110
examples of WebObjects deployments
that have scaled to huge heights,

00:07:25.320 --> 00:07:28.270
including, like, our iTunes Music Store.

00:07:29.830 --> 00:07:32.590
So where is WebObjects used?

00:07:32.670 --> 00:07:37.450
We've seen a lot of people in our
core markets using WebObjects,

00:07:37.460 --> 00:07:40.660
places like digital and print media,
asset management.

00:07:41.220 --> 00:07:46.420
So I've seen an app recently that helped
people edit video and then annotate it

00:07:46.420 --> 00:07:52.430
and log it and put it into a workflow for
people to edit and produce their videos.

00:07:52.550 --> 00:07:53.660
And it's really cool.

00:07:53.820 --> 00:07:56.280
So we've seen some
interesting apps in that area.

00:07:56.320 --> 00:08:00.890
We've also seen people in higher
education building portal sites

00:08:00.980 --> 00:08:03.040
or student information systems.

00:08:03.040 --> 00:08:05.340
And that's definitely a
core market for Apple.

00:08:05.340 --> 00:08:09.890
We're very interested in
our higher ed customers.

00:08:10.200 --> 00:08:12.140
In the scientific and
technical community,

00:08:12.140 --> 00:08:16.100
we've seen various biotech companies
building apps off of WebObjects.

00:08:16.100 --> 00:08:20.090
And of course, us being Apple and this
being an Apple technology,

00:08:20.100 --> 00:08:24.100
we want to eat our own dog food,
and we really do eat our own dog food.

00:08:24.170 --> 00:08:27.520
So as an Apple employee,
I can't go a day without interacting

00:08:27.520 --> 00:08:30.100
with a WebObjects application internally.

00:08:30.100 --> 00:08:37.260
So as far as accessing my latest pay
stub or making my HR elections or

00:08:37.270 --> 00:08:41.680
just checking bugs over RadarWeb,
you're accessing a

00:08:41.680 --> 00:08:44.100
WebObjects application.

00:08:44.270 --> 00:08:46.100
But we didn't stop there.

00:08:46.230 --> 00:08:49.240
We have based our core business
and some of our most important

00:08:49.370 --> 00:08:51.080
business off of WebObjects.

00:08:51.100 --> 00:08:55.180
So places like the Apple online store,
we do hundreds of millions

00:08:55.310 --> 00:08:57.100
of dollars of business.

00:08:57.100 --> 00:09:00.030
It's a 24/7 operation.

00:09:00.100 --> 00:09:06.100
And it's scaled very well
and it's international.

00:09:07.830 --> 00:09:10.460
In .Mac,
we have a number of tool sets like

00:09:10.530 --> 00:09:16.530
our web mail and iCards applications
that are also in WebObjects.

00:09:16.910 --> 00:09:21.780
And of course, the million-pound gorilla
is the iTunes Music Store.

00:09:21.880 --> 00:09:25.650
And we sell millions and
millions of songs a year.

00:09:25.730 --> 00:09:30.480
I think Steve said we're closing in on,
you know, half a billion pretty soon.

00:09:30.480 --> 00:09:34.420
And, you know, this is the gold
standard of music stores,

00:09:34.520 --> 00:09:36.520
digital music stores in the industry.

00:09:36.520 --> 00:09:39.260
And this is all based off of WebObjects.

00:09:39.320 --> 00:09:42.940
And if there's any question
whether WebObjects can scale,

00:09:42.980 --> 00:09:45.530
you just have to point
at the Music Store.

00:09:48.140 --> 00:09:51.100
So let's talk about the
architecture really quickly.

00:09:51.420 --> 00:09:55.360
As you can see from the graph,
it's very much a three-tiered

00:09:55.430 --> 00:09:57.580
application server architecture.

00:09:57.760 --> 00:10:01.340
So you have your data access layer,
and then you have in the

00:10:01.420 --> 00:10:05.930
middle tier your app layer,
or where you put all your business logic,

00:10:05.940 --> 00:10:09.600
and then you have a presentation layer,
or where your clients are

00:10:09.740 --> 00:10:11.800
accessing your application from.

00:10:11.990 --> 00:10:15.470
Another thing to note is that
there's a real clean separation

00:10:15.630 --> 00:10:22.040
of function in this diagram,
and we really try to use the model view

00:10:22.040 --> 00:10:29.110
controller design pattern and stick
to that concept within our designs.

00:10:30.770 --> 00:10:34.160
So what's development workflow look like?

00:10:34.240 --> 00:10:38.140
So usually you guys have a data
source that you'd like to access,

00:10:38.140 --> 00:10:41.650
something that's relational
database usually.

00:10:41.660 --> 00:10:45.980
And we allow you to access any
JDBC 2.0 compliant database that

00:10:45.980 --> 00:10:47.380
has a JDBC driver available.

00:10:47.510 --> 00:10:52.890
So things like Oracle, Sybase, MySQL,
they're all accessible as long

00:10:52.890 --> 00:10:54.890
as you have those drivers.

00:10:55.120 --> 00:10:59.500
We also allow you to access through
J&DI various directory services.

00:10:59.620 --> 00:11:02.740
So things like OpenLDAP are accessible.

00:11:02.740 --> 00:11:06.840
And what you'd start off with is
actually using our EOModeler application

00:11:06.840 --> 00:11:14.080
and you'd model your data or you'd
blast a model onto your data source.

00:11:14.680 --> 00:11:18.370
The next thing you would
do is go into Xcode,

00:11:18.370 --> 00:11:22.150
build using some of
our default templates,

00:11:22.210 --> 00:11:25.630
build an application,
start customizing it,

00:11:25.630 --> 00:11:28.590
adding your custom Java business logic.

00:11:30.210 --> 00:11:32.770
And then after that,
that's a jumping off point to

00:11:32.770 --> 00:11:36.480
building other applications like
web-based applications and using

00:11:37.020 --> 00:11:39.300
tools like our WebObjects builder.

00:11:39.300 --> 00:11:40.390
But it doesn't stop there.

00:11:40.510 --> 00:11:45.100
You can use those same components
and start building web services.

00:11:45.260 --> 00:11:48.850
And again, you can use similar -- the
same components and build

00:11:49.060 --> 00:11:50.790
Java desktop applications.

00:11:50.870 --> 00:11:55.110
So when I say same components,
I'm saying that after building

00:11:55.110 --> 00:11:58.400
a model and building some
of your custom app logic,

00:11:58.480 --> 00:12:02.580
you can jump off and build all kinds of
different views or presentation layers

00:12:02.720 --> 00:12:05.900
for your application and your business.

00:12:05.900 --> 00:12:07.870
And that's a powerful concept.

00:12:07.960 --> 00:12:12.030
We'll talk about that a little bit later,
but it helps you build

00:12:12.030 --> 00:12:15.980
your business a lot faster.

00:12:17.240 --> 00:12:24.620
So everyone has data they need to
access what goes on in our runtime.

00:12:24.940 --> 00:12:28.000
What I like to think
WebObjects in particular,

00:12:28.000 --> 00:12:32.800
our EO Enterprise objects
framework insulates you from

00:12:32.800 --> 00:12:38.290
really having to write any SQL or
JDBC specific code to a data source.

00:12:38.460 --> 00:12:41.020
We'll do all the heavy lifting for you.

00:12:41.020 --> 00:12:45.350
And all you're really doing is you'll
need to specify a model file that

00:12:45.350 --> 00:12:50.460
describes your tables and how they'll
map to objects within our frameworks.

00:12:50.460 --> 00:12:56.260
And the typical workflow is that
our runtime realizes it needs

00:12:56.300 --> 00:13:00.060
to access or fetch data from the
database or update or insert data.

00:13:00.060 --> 00:13:07.100
It'll go into access the model
file that specifies that data.

00:13:07.100 --> 00:13:09.080
It'll move on and

00:13:09.310 --> 00:13:12.930
create a query for you to
access your data or commit

00:13:12.930 --> 00:13:15.280
your data to the data source.

00:13:15.280 --> 00:13:19.580
And then if you're fetching data in,
it will actually convert that

00:13:19.650 --> 00:13:22.680
data into Enterprise objects.

00:13:22.680 --> 00:13:26.200
And these objects are
very generic objects.

00:13:26.200 --> 00:13:29.480
And what that means is in those
objects you don't care about

00:13:29.480 --> 00:13:31.390
what's backing in the data store.

00:13:31.390 --> 00:13:34.120
So you don't have any
database-specific information in there.

00:13:34.120 --> 00:13:38.210
And let me just elaborate on
that concept a little bit more.

00:13:38.310 --> 00:13:41.670
For instance,
if you had a model that pointed

00:13:41.800 --> 00:13:45.210
to an Oracle data source and then
you had a model that pointed to a

00:13:45.210 --> 00:13:51.600
MySQL data source and you had one that
pointed to an OpenLDAP data source,

00:13:51.600 --> 00:13:55.450
when you need to access that
information into the runtime,

00:13:55.490 --> 00:13:58.950
all those rows are
converted into objects.

00:13:58.970 --> 00:14:00.830
And you don't care where
those objects came from.

00:14:00.950 --> 00:14:03.360
You just manipulate them
through their getter and setter.

00:14:03.360 --> 00:14:04.200
You just manipulate them through
their getter and setter methods.

00:14:04.200 --> 00:14:06.790
And you don't care
what's in the back end.

00:14:06.830 --> 00:14:09.100
We do all the lifting for you.

00:14:11.740 --> 00:14:16.640
So to start off in building your model,
you would fire up our

00:14:16.640 --> 00:14:18.200
EOModeler application.

00:14:18.290 --> 00:14:21.750
And we have wizards that help you
reverse engineer your database

00:14:21.910 --> 00:14:23.520
if you already have legacy data.

00:14:23.780 --> 00:14:29.530
So we will discover all the tables,
all the columns and relationships

00:14:29.640 --> 00:14:31.450
within your database.

00:14:31.550 --> 00:14:37.980
Or you can go over and generate a
schema design yourself in your model and

00:14:37.980 --> 00:14:41.100
then blast that onto your data source.

00:14:41.300 --> 00:14:44.080
After you're done with that,
we have some templates,

00:14:44.250 --> 00:14:48.930
Java template files that get you
started in customizing your code and

00:14:48.930 --> 00:14:51.690
adding business logic to your objects.

00:14:53.220 --> 00:14:57.900
So let me show you a
screenshot of Yield Modeler.

00:14:57.900 --> 00:15:00.940
Hey, that doesn't look like the Yield
Modeler that you guys are used to.

00:15:00.940 --> 00:15:03.080
Maybe this is what you're used to.

00:15:03.950 --> 00:15:09.650
So here's a glimpse of maybe
something that's coming in the future.

00:15:09.740 --> 00:15:14.420
So this is a version that
we shipped in the WebOx 5.2.

00:15:16.680 --> 00:15:21.070
We can go back to that,
but we'll go there.

00:15:21.220 --> 00:15:23.750
So like I said,
this is a very visual tool.

00:15:23.920 --> 00:15:28.340
And you can see how
tables are represented,

00:15:28.390 --> 00:15:30.140
and we call those EO entities.

00:15:30.220 --> 00:15:32.710
And those are the big
rectangles right there.

00:15:32.840 --> 00:15:37.650
And then within those tables or entities,
there are attributes.

00:15:37.720 --> 00:15:41.360
And those attributes usually
represent columns in your database.

00:15:41.430 --> 00:15:44.250
And then you can see number
of relationships between

00:15:44.250 --> 00:15:46.350
these entities or tables.

00:15:46.410 --> 00:15:50.100
And there are two one relationships
and too many relationships.

00:15:50.220 --> 00:15:53.920
So that's a quick look at
what EO Modeler is about.

00:15:53.920 --> 00:15:56.390
We'll discuss this a little
bit later in the presentation,

00:15:56.420 --> 00:16:00.630
but hopefully that gives you a
flavor of what EO Modeler is.

00:16:00.920 --> 00:16:04.300
Okay,
so back to our development workflow.

00:16:04.350 --> 00:16:06.000
We have just finished our model.

00:16:06.160 --> 00:16:07.840
We think we have our
schema the way we want it,

00:16:07.840 --> 00:16:12.300
and we have just asked EOModeler
to build our business logic

00:16:12.430 --> 00:16:13.280
code and give us a template.

00:16:13.280 --> 00:16:19.860
We had fired up our Xcode IDE and
create a project and add all

00:16:19.860 --> 00:16:23.510
that stuff into the project.

00:16:23.900 --> 00:16:27.510
And then we'd start
prototyping our application.

00:16:27.510 --> 00:16:33.230
And this is a very powerful concept
that most other systems like

00:16:33.230 --> 00:16:36.930
J2E or other development systems,
you're spending a lot of

00:16:37.030 --> 00:16:41.280
time in the design process,
making sure your schema

00:16:41.280 --> 00:16:42.420
is the way you want it to.

00:16:42.420 --> 00:16:46.180
Then you've got to code a lot of
your business logic into the app.

00:16:46.320 --> 00:16:48.760
And then finally, you get to building
your presentation layer.

00:16:48.760 --> 00:16:52.480
And this could be months down the
line before you're actually able

00:16:52.480 --> 00:16:53.780
to show a client or a client.

00:16:53.800 --> 00:16:57.640
Or to show how your app might
look or prototype your app.

00:16:57.640 --> 00:17:01.420
And what we think is we have
a better way of doing things.

00:17:01.420 --> 00:17:05.980
And so once you've modeled your data
and you've got your business logic,

00:17:05.980 --> 00:17:10.940
we have rapid prototyping tools that
within minutes you can access your data,

00:17:10.940 --> 00:17:13.940
manipulate your data,
and then you can begin to

00:17:13.960 --> 00:17:16.200
refine your business logic.

00:17:16.200 --> 00:17:20.040
So you can get feedback right away
whether your data source or your data is

00:17:20.180 --> 00:17:22.450
modeled correctly or the way you want it.

00:17:22.470 --> 00:17:23.780
You can get feedback right away.

00:17:23.870 --> 00:17:26.830
And then you can refine
your business logic.

00:17:26.860 --> 00:17:31.460
So instead of spending months down
the line in your development cycle,

00:17:31.510 --> 00:17:35.160
you're getting right within
minutes access to your data

00:17:35.160 --> 00:17:37.350
and you're working on that.

00:17:38.780 --> 00:17:43.760
Another powerful thing is that since
we provide some default templates,

00:17:43.820 --> 00:17:48.730
you're able to customize the way
your data is presented right away.

00:17:48.990 --> 00:17:53.140
And we have very powerful tools to make
reusable components that you can embed.

00:17:53.140 --> 00:17:57.740
And what that allows you to do is
build your interface a lot faster.

00:17:57.740 --> 00:18:01.520
And so in the end, you end up with a very
polished application in a

00:18:01.520 --> 00:18:03.480
fraction of an amount of time.

00:18:03.480 --> 00:18:08.910
So hopefully you'll dig it a little bit
deeper into our rapid development tools

00:18:08.910 --> 00:18:13.510
and our tool set and find out how fast
you can actually develop your apps.

00:18:16.280 --> 00:18:18.240
So let's go back to our
development workflow and talk

00:18:18.240 --> 00:18:21.250
about building web applications.

00:18:23.530 --> 00:18:28.510
So WebObjects Builder is a
very graphical HTML editor.

00:18:28.560 --> 00:18:33.020
And within there,
you're going to define how your data

00:18:33.100 --> 00:18:37.000
binds to your interface objects,
or how it will be

00:18:37.000 --> 00:18:39.710
presented within the HTML.

00:18:40.030 --> 00:18:43.900
We provide you with a bunch of
reusable components in a pallet

00:18:44.060 --> 00:18:48.140
that you can drag and drop into the
interface and then bind up and use.

00:18:48.290 --> 00:18:50.890
There are also quite a number
of open source projects that

00:18:50.890 --> 00:18:54.060
you can leverage information
from or their components from,

00:18:54.060 --> 00:18:57.240
and things like Project Wonder have
been really good for the community.

00:18:57.240 --> 00:19:00.690
So I encourage you to check that out.

00:19:03.360 --> 00:19:07.340
So one important distinction
about using WebObjects,

00:19:07.340 --> 00:19:11.310
our HTML templates,
or what we call WoW components,

00:19:11.310 --> 00:19:14.860
is that we're really isolating
a lot of the logic and not

00:19:14.910 --> 00:19:17.980
embedding that into the HTML layer.

00:19:17.980 --> 00:19:21.600
And actually,
none of this is embedded in the page.

00:19:21.670 --> 00:19:25.540
And that's a differentiation
factor with technologies like JSP,

00:19:25.760 --> 00:19:30.250
where you're actually a lot of times
putting your business logic or your data

00:19:30.250 --> 00:19:32.840
source information into your JSP code.

00:19:34.800 --> 00:19:37.830
Another thing that's great and where
WebObjects has an advantage is that

00:19:37.840 --> 00:19:41.430
we do all the session management
for you and we build sessions for

00:19:41.430 --> 00:19:44.200
you and unique sessions to users.

00:19:44.240 --> 00:19:48.700
You do not need to rebuild the widget,
the whole machine.

00:19:48.720 --> 00:19:50.780
We'll take care of all that for you.

00:19:50.930 --> 00:19:59.590
So it's very powerful and hopefully you
guys will realize how that is beneficial.

00:20:01.230 --> 00:20:06.100
WebObjects can generate both HTML and
XML code within our components,

00:20:06.120 --> 00:20:09.290
so it's very flexible.

00:20:09.410 --> 00:20:11.590
We have interop with
other J2E technologies,

00:20:11.710 --> 00:20:12.290
JSP.

00:20:12.510 --> 00:20:16.640
If you want to use JSP technologies or
if that's part of your requirements,

00:20:16.640 --> 00:20:22.390
it's certainly easy to add that to
your raw HTML code or create WebObjects

00:20:22.390 --> 00:20:25.290
components that embed JSP code.

00:20:25.990 --> 00:20:28.880
If you need internationalization,
it's easy to add localized

00:20:28.890 --> 00:20:31.300
bundles to your Wo components.

00:20:31.360 --> 00:20:36.870
And let me give you a preview of
what WebObjects Builder looks like.

00:20:36.980 --> 00:20:37.900
Well, wait a second.

00:20:37.900 --> 00:20:39.830
Now, this is what you guys are used to.

00:20:39.830 --> 00:20:41.400
Or is it this one?

00:20:41.400 --> 00:20:46.600
Okay, so maybe this gives you an idea of
something you might see in the future,

00:20:46.600 --> 00:20:50.700
but this is what we
shipped on WebObjects 5.2.

00:20:50.820 --> 00:20:54.340
And as you can see in the toolbar,
there are quite a number of

00:20:54.340 --> 00:20:55.820
elements that you can add.

00:20:55.900 --> 00:21:00.340
It's very graphical,
and it's very easy to bind

00:21:00.560 --> 00:21:03.590
these components to your data.

00:21:03.710 --> 00:21:06.410
And we'll get back to
this a little later.

00:21:07.940 --> 00:21:11.080
So getting back to our
development workflow,

00:21:11.120 --> 00:21:13.460
we can take our same model
that we built earlier,

00:21:13.620 --> 00:21:17.560
we can use the same business
logic and all our customizations

00:21:17.560 --> 00:21:21.090
for our business code,
and then we can start

00:21:21.100 --> 00:21:22.180
building a web service.

00:21:22.260 --> 00:21:27.510
So we're reusing these components
to build a web service.

00:21:28.700 --> 00:21:30.040
What are web services?

00:21:30.040 --> 00:21:34.540
They're a very standard way or a
standard protocol for communicating

00:21:34.540 --> 00:21:36.600
between various clients and servers.

00:21:36.600 --> 00:21:44.800
And it's kind of delivering on
the promise or has a lot of the

00:21:44.800 --> 00:21:48.790
same kind of buzz around it that
Corba had a number of years ago,

00:21:48.920 --> 00:21:51.590
interoperability between various systems.

00:21:51.600 --> 00:21:55.540
So you can conceivably have an
Apple script server in the back

00:21:55.540 --> 00:22:00.020
end and maybe a .NET client in
the front end or on the client

00:22:00.110 --> 00:22:01.600
side consuming your web service.

00:22:01.600 --> 00:22:07.140
And it's added a whole new
level of interoperability

00:22:07.290 --> 00:22:10.600
between different systems.

00:22:10.600 --> 00:22:14.740
So we think there's a whole class
of new programmers out there that

00:22:14.740 --> 00:22:18.980
are learning how to build these
web services and learning this

00:22:18.980 --> 00:22:21.600
kind of coding to these protocols.

00:22:21.600 --> 00:22:25.380
And we're happy to be able to
add some of that functionality

00:22:25.380 --> 00:22:27.600
into the WebObjects project.

00:22:31.070 --> 00:22:34.930
So if I want to build a web
service on the server side,

00:22:35.020 --> 00:22:38.540
the first thing I would do is fire
up our web services assistant.

00:22:38.540 --> 00:22:42.490
And what that does is
allow you to graphically,

00:22:42.490 --> 00:22:45.440
without writing a line of code,
actually configure a web service

00:22:45.530 --> 00:22:47.170
and then actually test it.

00:22:48.820 --> 00:22:52.770
So you're leveraging a lot of
things in our rapid prototyping

00:22:52.960 --> 00:22:54.910
tools to get to that point.

00:22:54.980 --> 00:23:01.560
And it's conceivable where you don't have
to ever type a line of XML or SOAP or

00:23:01.560 --> 00:23:05.210
WSDL and you can publish a web service.

00:23:05.220 --> 00:23:09.400
So we keep you out of all
the implementation details.

00:23:09.400 --> 00:23:15.100
And let me just give you an idea of
how a web service might be configured.

00:23:15.100 --> 00:23:22.860
So if you look at the graphic,
we have a real estate service defined.

00:23:22.860 --> 00:23:26.040
And under that,
we have a search operation defined,

00:23:26.040 --> 00:23:30.030
if you look on the left-hand side.

00:23:30.300 --> 00:24:12.100
[Transcript missing]

00:24:14.340 --> 00:24:18.340
So web services are built into
the 10 platform and they're very

00:24:18.340 --> 00:24:21.950
integrated in there and there are
all kinds of clients you can build.

00:24:22.520 --> 00:24:26.020
If you leverage the
WS make stubs tool utility,

00:24:26.040 --> 00:24:30.560
you can build stubs for C or
C++ or Objective-C apps and

00:24:30.560 --> 00:24:33.020
that can be your front end.

00:24:33.020 --> 00:24:37.510
You can also use AppleScript or
Automator to be a client and

00:24:37.510 --> 00:24:39.960
access web services that way.

00:24:40.000 --> 00:24:43.400
And of course with Tiger,
the coolest kind of web service

00:24:43.430 --> 00:24:44.180
client is the WebObjects.

00:24:46.200 --> 00:24:50.930
So Web services are built into
the 10 platform and they're very

00:24:50.930 --> 00:24:50.930
integrated in there and there are
all kinds of clients you can build.

00:24:50.930 --> 00:24:50.930
If you leverage the WS make stubs
for C or C++ or Objective-C apps

00:24:50.930 --> 00:24:50.930
and that can be your front end.

00:24:50.930 --> 00:24:50.930
You can also use AppleScript or
Automator to be a client and

00:24:50.930 --> 00:24:50.930
access web services that way.

00:24:50.930 --> 00:24:50.930
And of course with Tiger,
the coolest kind of web service

00:24:50.930 --> 00:24:50.930
client is the WebObjects.

00:24:51.590 --> 00:24:55.040
Within WebObjects,
we have various APIs that allow you

00:24:55.040 --> 00:24:57.860
to consume web services on the net.

00:24:58.020 --> 00:25:02.100
So things like if you want to connect to
a service that you found on X methods,

00:25:02.100 --> 00:25:07.170
it would be easy to define that
service and then suck that data

00:25:07.300 --> 00:25:10.590
into your application and then
publish it through your app.

00:25:10.590 --> 00:25:14.600
So that's web services in a nutshell.

00:25:15.100 --> 00:25:21.840
Let me talk really quickly about how
to build Java desktop applications.

00:25:24.110 --> 00:25:28.810
So if you decide to leverage
our rapid prototyping tools,

00:25:28.820 --> 00:25:32.780
you can build a desktop
application really quickly.

00:25:32.780 --> 00:25:37.710
And I think these are great for
building intranet applications

00:25:37.710 --> 00:25:41.230
or admin applications where you
need to access your data and

00:25:41.230 --> 00:25:43.180
manipulate your data really quickly.

00:25:43.220 --> 00:25:49.390
And our direct-to-Java client assistant
allows you to customize how your desktop

00:25:49.390 --> 00:25:52.470
app and how the data is presented to you.

00:25:53.080 --> 00:25:57.380
And if you want to go into further,
deeper, or customize your app even more,

00:25:57.460 --> 00:26:02.610
we have tools that you can use like
Interface Builder to build custom

00:26:02.610 --> 00:26:07.910
widgets for swing widgets that you
can embed into your Java client apps.

00:26:08.390 --> 00:26:14.800
We have Java Web Start integration and
we use JNLP files that allow you to

00:26:14.800 --> 00:26:22.460
upload or define what classes to upload
to your client and help you version those

00:26:22.460 --> 00:26:28.000
classes that are on your client so that
you can dynamically upload the latest,

00:26:28.040 --> 00:26:30.300
greatest bits to your client machines.

00:26:30.300 --> 00:26:33.380
And so that's really powerful.

00:26:34.080 --> 00:26:38.740
So those are Java desktop applications,
and I encourage you to look at them.

00:26:38.740 --> 00:26:43.720
So after you've built your latest,
greatest app and you're ready to deploy,

00:26:43.720 --> 00:26:48.010
we have a couple of different options
for deploying WebObjects applications.

00:26:48.020 --> 00:26:52.050
You can deploy in a J2E container,
or you can use our

00:26:52.050 --> 00:26:53.700
traditional WebObjects tools.

00:26:53.700 --> 00:26:57.240
Neither one is better or worse.

00:26:57.240 --> 00:26:58.790
It just depends on your requirements.

00:26:59.750 --> 00:27:04.120
If for some reason you need to
deploy in a J2E container like JBoss,

00:27:04.120 --> 00:27:09.600
we have JBoss and Tomcat on Tiger Server,
you can build a .war bundle.

00:27:09.600 --> 00:27:16.170
And .war bundles are the standard way of
building web applications and deploying

00:27:16.170 --> 00:27:19.300
web applications within J2E containers.

00:27:19.300 --> 00:27:22.780
And all you need to do is build
that bundle and then drop that

00:27:22.910 --> 00:27:27.230
into the deploy directory and then
start using the configuration and

00:27:27.230 --> 00:27:29.600
monitoring tools for that J2E.

00:27:29.740 --> 00:27:31.210
So that's a great way to get
your application server to get

00:27:31.430 --> 00:27:34.440
your application up and running.

00:27:36.880 --> 00:27:39.670
Now,
we also have our WebObjects deployment

00:27:39.750 --> 00:27:43.950
tools that are also on Tiger Server,
and those are also part

00:27:43.950 --> 00:27:44.820
of the default install.

00:27:44.820 --> 00:27:47.760
We have built-in clustering
support for them,

00:27:47.760 --> 00:27:51.680
and there are a number of load-balancing
algorithms that you get to choose from.

00:27:51.680 --> 00:27:55.430
We provide all the session
management facilities and automatic

00:27:55.430 --> 00:27:57.920
restarting of app instances for you.

00:27:57.920 --> 00:28:01.150
And there's a whole lot of
other configuration options

00:28:01.150 --> 00:28:04.620
I can't get into right now,
but it's very powerful tools.

00:28:04.640 --> 00:28:08.620
We also have monitoring tools that
allow you to remotely administer

00:28:08.770 --> 00:28:12.510
and configure your applications,
and I encourage you to

00:28:12.540 --> 00:28:14.380
check out Java Monitor.

00:28:18.480 --> 00:28:21.140
So we encourage you to buy XSERVs.

00:28:21.320 --> 00:28:26.290
They're our platform and hardware
deployment platform of choice.

00:28:26.390 --> 00:28:29.800
We have unlimited deployment
licenses on every XSERV.

00:28:29.810 --> 00:28:32.830
WebObjects deployment
becomes with every install,

00:28:33.000 --> 00:28:37.350
so does JBoss and Tomcat and
any other deployment environment

00:28:37.390 --> 00:28:39.800
you might want to deploy with.

00:28:40.100 --> 00:28:58.500
[Transcript missing]

00:28:59.310 --> 00:29:02.750
So let's talk about recent events,
what has been going on

00:29:02.760 --> 00:29:04.590
in the WebObjects world.

00:29:04.720 --> 00:29:10.040
So we released WebObjects 5.2.4
maybe about five or six weeks ago,

00:29:10.070 --> 00:29:11.960
and that was with the Tiger release.

00:29:11.960 --> 00:29:15.820
And it's really about a
compatibility release with Tiger.

00:29:15.820 --> 00:29:19.420
It's supported on the Java 1.4.2 JVM.

00:29:19.900 --> 00:30:17.600
[Transcript missing]

00:30:20.060 --> 00:30:23.580
Okay, so that's WebObjects 5.24.

00:30:23.840 --> 00:30:26.270
Let me get back to--

00:30:26.440 --> 00:30:29.230
My phrases I threw out there earlier.

00:30:29.350 --> 00:30:33.900
So direct to customers,
direct to your wallet,

00:30:33.900 --> 00:30:36.600
and direct to developer tools.

00:30:37.980 --> 00:30:39.810
Any ideas what that means?

00:30:39.910 --> 00:30:42.910
Or anybody got any feedback on that?

00:30:42.970 --> 00:30:45.540
What they might think that is?

00:30:45.590 --> 00:30:49.290
Well, I think I was trumped
yesterday by the keynote,

00:30:49.290 --> 00:30:49.290
but--

00:30:49.740 --> 00:30:54.900
Let me introduce WebObjects 5.3
for the Xcode 2.1 developer tools.

00:30:55.030 --> 00:31:02.690
And that is WebObjects 5.3 is going
to be on every DVD that you guys

00:31:02.760 --> 00:31:04.310
have gotten today or this week.

00:31:04.390 --> 00:31:06.960
I encourage you to install them.

00:31:06.970 --> 00:31:09.600
They're an optional install.

00:31:09.600 --> 00:31:13.530
And we're really excited about
this because WebObjects has just

00:31:13.530 --> 00:31:17.600
gotten more available to the
rest of the developer community.

00:31:17.600 --> 00:31:20.600
And we think it's a pretty
exciting development.

00:31:20.600 --> 00:31:25.750
And I would just stay tuned
for more information on that.

00:31:26.330 --> 00:31:32.400
We also have a WebObjects 5.3
software update that's in the works.

00:31:32.400 --> 00:31:35.810
It's not ready today,
but look for it in the upcoming weeks and

00:31:35.810 --> 00:31:38.990
check your software updaters for that.

00:31:41.180 --> 00:31:45.060
So WebObjects 5.3, what is in it?

00:31:45.180 --> 00:31:50.600
So we've introduced an
Xcode ELModeler plugin,

00:31:50.600 --> 00:31:54.580
and we really looked at what was going
on with core data modeling last year,

00:31:54.600 --> 00:32:00.610
and we thought we could bring that
functionality to modeling ELModels.

00:32:00.810 --> 00:32:02.750
We also updated WebObjects Builder.

00:32:02.840 --> 00:32:07.540
We gave it a little bit of a facelift
and did some stuff under the hood.

00:32:08.460 --> 00:32:11.400
A lot of feedback we got last year
after talking with you guys is

00:32:11.400 --> 00:32:16.640
that we need to do something about
our HTML and XHTML compatibility.

00:32:16.680 --> 00:32:21.450
So we've tried our best to
support the latest standards.

00:32:22.020 --> 00:32:25.140
We also looked at our
Java Collection Classes support,

00:32:25.140 --> 00:32:30.340
and we've added Collection Classes
support into Java Foundation Classes.

00:32:33.760 --> 00:32:39.030
We've updated our web services
to improve interoperability

00:32:39.040 --> 00:32:41.320
with various other clients.

00:32:41.320 --> 00:32:46.440
And we've also added formal
qualification for Oracle 10G within

00:32:46.440 --> 00:32:48.930
our WebObjects product.

00:32:49.560 --> 00:32:51.170
So let's dive in a little bit.

00:32:51.400 --> 00:32:53.270
So Xcode EOModeler plugin.

00:32:53.500 --> 00:32:58.230
So last year we looked at the
cool integration features or

00:32:58.230 --> 00:33:02.360
the core data modeling tool.

00:33:02.360 --> 00:33:05.560
We thought that, hey,
this is great technology,

00:33:05.560 --> 00:33:08.260
and we need to somehow bring that to EOF.

00:33:08.260 --> 00:33:13.310
And so we took a stab at it,
and we think we've come up with

00:33:13.360 --> 00:33:15.170
a pretty good core data modeler.

00:33:15.220 --> 00:33:16.860
And hopefully you guys will like it.

00:33:16.860 --> 00:33:20.620
We're intending on improving
this modeling tool,

00:33:20.620 --> 00:33:25.720
and we'd love to get feedback
on if it suits your needs.

00:33:27.310 --> 00:33:32.040
So this is the old EOModeler plugin,
or EOModeler application.

00:33:32.100 --> 00:33:35.240
And here is the new EOModeler plugin.

00:33:35.280 --> 00:33:39.780
And it looks very much more
integrated into the Xcode IDE.

00:33:39.830 --> 00:33:46.060
And hopefully, it'll help improve your
workflow within applications.

00:33:46.170 --> 00:33:48.810
So without further ado,
I'd like to invite

00:33:49.290 --> 00:33:51.980
Jonathan Wrench up here,
and he's going to give us a

00:33:51.980 --> 00:33:56.190
demo of the Xcode EOModeler
plugin and give us a tour.

00:34:01.980 --> 00:34:03.190
Thank you, Daryl.

00:34:03.290 --> 00:34:05.740
Hi, I'm Jonathan Wolf-Wrench,
and I'd like to introduce you to

00:34:05.740 --> 00:34:08.880
the Xcode 2.1 EOModeler plugin.

00:34:08.880 --> 00:34:11.490
Okay, I'm on screen.

00:34:12.020 --> 00:34:14.070
That's going to open up
a simple project here,

00:34:14.200 --> 00:34:16.950
pretty much empty,
except for the WebObjects

00:34:16.960 --> 00:34:20.730
EO Model D document that comes
with the WebObjects distribution.

00:34:20.740 --> 00:34:24.630
It's just a little movie sample here
that illustrates interrelationships

00:34:24.640 --> 00:34:27.510
and some data model we all
can wrap our heads around.

00:34:27.560 --> 00:34:29.430
So I'll double-click it.

00:34:31.500 --> 00:34:33.860
First thing you'll notice is
that instead of opening up

00:34:33.870 --> 00:34:37.900
EO Modeler in a separate process,
we are opening up the model

00:34:37.900 --> 00:34:39.400
directly inside of Xcode.

00:34:39.400 --> 00:34:45.290
So you can use this to view and edit
your model right inside of Xcode.

00:34:45.300 --> 00:34:50.530
I want to point out the
four main views here.

00:34:51.020 --> 00:34:54.140
On the top left corner,
you have the Entity View.

00:34:54.230 --> 00:34:58.700
This is the view that lists
all the entities in your model.

00:34:59.610 --> 00:35:02.640
Then, in the middle top here,
is the Properties View.

00:35:02.860 --> 00:35:09.800
This is where it lists your entity's
attributes and relationships.

00:35:11.050 --> 00:35:13.810
And finally,
in the top right corner here of

00:35:13.810 --> 00:35:16.190
the top views is your Detail view.

00:35:16.200 --> 00:35:20.270
This changes to detail
whatever you've selected.

00:35:21.200 --> 00:35:46.200
[Transcript missing]

00:35:48.140 --> 00:35:51.640
And the other thing you'll notice
is as I click on entities here,

00:35:51.640 --> 00:35:53.980
that these top views are updating.

00:35:53.980 --> 00:35:58.810
And it's both for entities
and for individual attributes

00:35:58.820 --> 00:36:03.210
and relationships I click on,
which is a great way to navigate

00:36:03.210 --> 00:36:06.040
your complex entity diagram.

00:36:06.040 --> 00:36:09.850
So let me get -- Thank you.

00:36:11.320 --> 00:36:14.770
We are pretty now.

00:36:14.840 --> 00:36:17.400
I like to draw a little
bit more detail--draw your

00:36:17.400 --> 00:36:19.240
attention to the detail view.

00:36:19.240 --> 00:36:22.760
This is segmented control,
so there's a couple of layers here.

00:36:22.900 --> 00:36:25.290
The first layer thing that
looks like a little EO here

00:36:25.290 --> 00:36:31.820
in the side of the document,
that lists the object side of your EO.

00:36:31.820 --> 00:36:36.560
So things like what--in this case,
we've selected an attribute,

00:36:36.680 --> 00:36:39.730
so what value class is your attribute?

00:36:39.730 --> 00:36:40.980
Is it a string?

00:36:41.060 --> 00:36:42.840
Is it a Java number?

00:36:42.840 --> 00:36:43.980
What is it?

00:36:43.980 --> 00:36:44.850
Can it be null?

00:36:44.960 --> 00:36:49.720
These type of object side of--object
side details of your entity.

00:36:49.980 --> 00:36:52.910
Then on the little thing that looks
like a database cylinder here of the

00:36:52.940 --> 00:36:59.020
same attribute is the details for
the persistence side of your entity.

00:36:59.020 --> 00:37:01.980
So in this case,
we're still selecting the attribute.

00:37:01.980 --> 00:37:05.790
So how does this attribute,
what column does it map

00:37:05.790 --> 00:37:07.950
onto in your database?

00:37:08.090 --> 00:37:09.680
And what type of column is that?

00:37:09.680 --> 00:37:11.620
Is it integer or string or whatever?

00:37:11.620 --> 00:37:16.160
So same thing when you
select a relationship.

00:37:16.160 --> 00:37:19.820
So when you select a relationship,
the detail on the EO side would be,

00:37:19.820 --> 00:37:20.910
is it a 2-1?

00:37:20.980 --> 00:37:23.250
Is it a 2-many relationship?

00:37:23.260 --> 00:37:25.980
What's the destination it goes to?

00:37:25.980 --> 00:37:28.510
On the database side,
what happens when you

00:37:28.510 --> 00:37:30.670
delete a set of related EOs?

00:37:30.670 --> 00:37:32.780
What's your delete rule there?

00:37:32.780 --> 00:37:36.740
And what type of joint semantic
does this relationship map onto?

00:37:36.740 --> 00:37:38.060
And what does it represent?

00:37:38.310 --> 00:37:44.120
So these are the things that you can set
in the new Xcode 2.1 EO Modeler plugin.

00:37:44.180 --> 00:37:45.290
And that's it.

00:37:45.390 --> 00:37:45.960
Back to slides.

00:37:46.030 --> 00:37:47.620
Thank you, Daryl.

00:37:52.020 --> 00:37:57.170
Thank you, Jonathan,
and hopefully this is a new wave

00:37:57.210 --> 00:38:01.450
of -- a new generation of modeling,
EO models, and I think this is

00:38:01.450 --> 00:38:05.660
going to be very cool,
and I think it adds just another

00:38:05.660 --> 00:38:12.320
integration point for WebObjects within
Xcode and makes your life a lot easier.

00:38:12.360 --> 00:38:15.100
Okay, so can we go back to slides?

00:38:17.710 --> 00:38:19.960
So what other things
have we been working on?

00:38:19.960 --> 00:38:20.580
HTML.

00:38:20.770 --> 00:38:23.740
So last year,
I got a lot of feedback that

00:38:23.780 --> 00:38:27.240
quite a number of you were
running post processing on our

00:38:27.240 --> 00:38:30.980
HTML that we were creating just
because we were doing things that

00:38:30.980 --> 00:38:32.970
were not up to the recent specs.

00:38:33.150 --> 00:38:39.410
Or we're not doing things that
were compatible with XHTML.

00:38:39.450 --> 00:38:40.720
Or even CSS.

00:38:40.720 --> 00:38:42.210
We were mentioning people's CSS.

00:38:42.390 --> 00:38:46.040
So we really wanted to address
this and work on compatibility.

00:38:46.160 --> 00:38:50.480
So we looked at our tools and frameworks
and did what we could to bring it up

00:38:50.630 --> 00:38:54.140
to the 4.01 specification for HTML.

00:38:54.390 --> 00:39:00.710
We also did some work where we're not
munching CSS and we fixed known issues

00:39:00.770 --> 00:39:03.500
with our XHTML compatibility story.

00:39:03.500 --> 00:39:07.000
So things like double quoting
attributes or properly closing

00:39:07.000 --> 00:39:11.190
some WebObjects tags we addressed.

00:39:12.600 --> 00:39:16.800
So one area that we definitely
focused on was WebObjects Builder and

00:39:16.800 --> 00:39:20.500
making sure that we were doing the
right thing in WebObjects Builder.

00:39:20.500 --> 00:39:27.360
And we built in HTML 4.0.1 support
into all our components that we

00:39:27.450 --> 00:39:30.500
create into our WebObjects tags.

00:39:30.500 --> 00:39:36.490
And we also did what we could as
far as making our WebObjects tags

00:39:36.490 --> 00:39:41.490
HTML compliant within WebObjects Builder.

00:39:41.900 --> 00:39:44.900
We did give WebObjects
Builder a facelift,

00:39:44.950 --> 00:39:48.640
so we thought we could reorganize
the toolbar and various other

00:39:48.640 --> 00:39:53.700
elements and streamline your
workflow within the application.

00:39:53.810 --> 00:39:57.090
And then we also added
a new preview mode.

00:39:57.280 --> 00:40:00.690
So we've based it off of
WebKit and the WebKit view,

00:40:00.820 --> 00:40:03.400
so what that gives you is
a better approximation.

00:40:03.400 --> 00:40:05.210
It can now do CSS.

00:40:05.220 --> 00:40:11.810
It can do JavaScript and run all that
stuff in the preview mode before.

00:40:15.440 --> 00:40:17.770
Before,
we just couldn't display it or just would

00:40:17.850 --> 00:40:21.000
not dynamically emulate your JavaScript.

00:40:21.000 --> 00:40:24.380
So this is what the old
WebObjects builder looked like,

00:40:24.490 --> 00:40:28.940
and it was quite busy and definitely
didn't look like a tiger application.

00:40:28.940 --> 00:40:33.580
It actually harkens from the
OpenStep era of applications,

00:40:33.580 --> 00:40:39.010
and there's a very busy toolbar,
and we thought we could do better.

00:40:39.380 --> 00:40:41.920
And here is the new WebObjects Builder.

00:40:41.970 --> 00:40:44.670
And as you can see,
we took a look at the toolbar,

00:40:44.670 --> 00:40:47.930
and we may have simplified it
and hopefully concentrated on

00:40:47.930 --> 00:40:52.530
various modes that you guys
are more apt to be working in.

00:40:52.650 --> 00:40:54.610
So instead of having
me talk about all this,

00:40:54.740 --> 00:40:58.760
I think I'll invite Jonathan up,
and we'll do a demo of the

00:40:58.760 --> 00:41:00.900
new WebObjects Builder,
and he'll give us a tour.

00:41:01.030 --> 00:41:03.740
So if we could go to the demo machine.

00:41:12.590 --> 00:41:14.260
Thank you, Daryl.

00:41:14.290 --> 00:41:16.640
I'm going to open up a simple
little project here that

00:41:16.680 --> 00:41:20.300
contains an empty main.roa.

00:41:21.670 --> 00:41:23.440
Fire up the new WebObjects 5.3.

00:41:23.440 --> 00:41:26.940
I'm sorry, WebObjects Builder 5.3.

00:41:26.940 --> 00:41:29.020
And let's hide that.

00:41:29.020 --> 00:41:29.020
There we go.

00:41:29.660 --> 00:41:32.100
So this is the new WebObjects builder.

00:41:32.110 --> 00:41:36.600
First thing you'll notice is that
it has a more streamlined interface.

00:41:36.600 --> 00:41:39.830
This is now a standard Cocoa toolbar.

00:41:39.930 --> 00:41:43.200
It is, you know,
instead of the small little, you know,

00:41:43.310 --> 00:41:47.360
set of open,
tiny little icons all over the place,

00:41:47.360 --> 00:41:51.600
we've replaced that with a standard
Cocoa toolbar widget so you get things

00:41:51.600 --> 00:41:55.670
like customization now to put those
elements that you use every day and

00:41:55.670 --> 00:41:58.200
rearrange things to match your brain.

00:41:58.430 --> 00:42:02.500
The previous pop-up mode pop-up
button has been replaced with a

00:42:02.500 --> 00:42:06.350
segmented control that makes it more
obvious what mode you're currently in,

00:42:06.450 --> 00:42:08.410
and it's easier to hit.

00:42:08.850 --> 00:42:13.470
Um, in this--this elements pop-up
toolbar item is where-- that

00:42:13.600 --> 00:42:15.210
lists all your static elements.

00:42:15.350 --> 00:42:18.790
So things, uh--so in this case,
I've set a heading to h1 here.

00:42:18.810 --> 00:42:22.490
So let's put a little sample text here.

00:42:23.520 --> 00:42:27.470
Under the WebObjects toolbar
item is another pop-up that

00:42:27.570 --> 00:42:29.640
lists your dynamic elements.

00:42:29.640 --> 00:42:33.670
I could put things
like a repetition here.

00:42:37.400 --> 00:42:39.760
We've freshened the interface
in a number of other places too,

00:42:39.760 --> 00:42:44.400
instead of just the main window,
in addition to the main window.

00:42:44.400 --> 00:42:47.830
The inspector has been
slightly refreshed.

00:42:48.040 --> 00:42:51.790
Preferences have also been refreshed.

00:42:55.010 --> 00:42:58.410
And the palette has also been freshened.

00:42:58.650 --> 00:43:01.580
So the palette's a great way to
drag reusable components into your

00:43:01.580 --> 00:43:06.730
WebOps application and just drop them
in and start using them right away.

00:43:06.770 --> 00:43:09.250
Darryl Lee:
But beyond the interface tweaks

00:43:09.270 --> 00:43:12.400
that we've added to this release,
the big news is that now we're

00:43:12.400 --> 00:43:14.710
using WebKit to render the preview.

00:43:14.910 --> 00:43:17.500
WebKit is the same engine used by Safari.

00:43:17.500 --> 00:43:22.870
So this allows a richer preview
of how your component is going

00:43:22.880 --> 00:43:25.150
to look on a real browser.

00:43:25.160 --> 00:43:30.360
So things like XHTML, CSS, JavaScript,
they just work.

00:43:30.360 --> 00:43:33.530
And to prove that to you,
I'm going to do something that

00:43:33.530 --> 00:43:37.220
-- I'm going to load a page
that's fairly rich that uses CSS,

00:43:37.260 --> 00:43:40.150
uses JavaScript,
and that's Apple's main web page.

00:43:40.180 --> 00:43:44.260
I'm going to grab the
source code from that.

00:43:44.960 --> 00:43:49.540
Copy it and paste it into WebObjects
Builder and move to preview.

00:43:49.620 --> 00:43:51.730
Now, if you used to do this on the
previous WebObjects Builder,

00:43:51.750 --> 00:43:55.890
well, you're braver than I am.

00:43:56.320 --> 00:43:59.490
And you'll notice it just works.

00:44:04.370 --> 00:44:07.030
Even the hot news headline here,
the JavaScript ticker here,

00:44:07.110 --> 00:44:08.010
is firing like it should.

00:44:08.480 --> 00:44:12.580
So this is a much higher fidelity
previewing experience for you to

00:44:12.580 --> 00:44:15.720
work on your components and get
up to speed and make them right

00:44:15.720 --> 00:44:17.230
before you even get to the browser.

00:44:17.230 --> 00:44:18.950
Back to slides.

00:44:19.000 --> 00:44:20.870
Thank you, Daryl.

00:44:25.530 --> 00:44:28.500
So thank you, Jonathan,
and hopefully that gives you guys a taste

00:44:28.500 --> 00:44:31.150
of what is in the new WebObjects builder.

00:44:31.210 --> 00:44:34.380
And we're pretty excited about that,
and I encourage you to try it

00:44:34.380 --> 00:44:35.360
out and give it a test drive.

00:44:37.890 --> 00:44:40.420
So other things we've been working on.

00:44:40.540 --> 00:44:44.310
So I can't remember how many years
I've heard of that people want

00:44:44.710 --> 00:44:49.090
Java collection classes interfaces
implemented within Java Foundation,

00:44:49.090 --> 00:44:52.500
and in particular, NSArray, NSDictionary,
and NSSet.

00:44:52.690 --> 00:44:57.060
So as of today, in WebObjects 5.3,
we have implemented those

00:44:57.140 --> 00:45:00.980
interfaces within NSArray,
NSDictionary, and NSSet.

00:45:01.050 --> 00:45:07.180
And they implement the list, map,
and set interfaces.

00:45:07.250 --> 00:45:10.570
So we'd love to get feedback and find
out what kind of needs you guys have.

00:45:10.680 --> 00:45:13.540
Hopefully,
this gives you better interoperability

00:45:13.540 --> 00:45:18.160
with other Java packages and allows you
to exchange our Java collection classes,

00:45:18.160 --> 00:45:21.700
Java Foundation collection
classes with other packages.

00:45:21.700 --> 00:45:25.620
And we'd love to get feedback on
anything else that you'd like for

00:45:25.620 --> 00:45:29.120
us to add into our frameworks.

00:45:30.260 --> 00:45:32.100
So web services.

00:45:32.100 --> 00:45:38.500
WebObjects 5.2 shipped with Axis
1.0 as its underlying engine.

00:45:38.500 --> 00:45:40.760
And so we looked at it and we said,
you know, we need to make some

00:45:40.770 --> 00:45:42.100
improvements in this area.

00:45:42.100 --> 00:45:46.750
So we looked for the latest GM release
of Axis and Axis 1.1 is the latest.

00:45:46.790 --> 00:45:50.960
So we've embedded that
into WebObjects 5.3.

00:45:50.960 --> 00:45:57.040
And we're hopeful that that gives you
a better level of interop with other

00:45:57.070 --> 00:46:00.070
services and gives you more performance.

00:46:00.110 --> 00:46:06.320
So I'd like to invite Jonathan up here.

00:46:06.320 --> 00:46:10.660
And we thought we'd show a
little web service integration

00:46:10.740 --> 00:46:12.700
between WebObjects and Dashboard.

00:46:12.700 --> 00:46:15.280
So Jonathan, why don't you come up here?

00:46:15.280 --> 00:46:18.190
Jonathan Allen: Thank you, Darryl.

00:46:18.200 --> 00:46:21.040
Let's close up this previous demo.

00:46:24.540 --> 00:46:30.000
I'm opening up a small little project
here I wrote and it's started running.

00:46:30.170 --> 00:46:35.850
So dashboard widgets are those
HTML pages with JavaScript logic.

00:46:35.950 --> 00:46:43.360
And it turns out that WebObjects
is a great HTML environment.

00:46:43.360 --> 00:46:46.590
Furthermore, dashboard widgets,
when they want to communicate

00:46:46.600 --> 00:46:48.940
with the outside world,
they use web services.

00:46:48.940 --> 00:46:49.740
And guess what?

00:46:49.900 --> 00:46:52.980
WebObjects is a great web
services server and client.

00:46:52.980 --> 00:46:55.100
So they really go together well.

00:46:55.100 --> 00:46:58.380
And so I whipped up this demo to
show you how a dashboard widget

00:46:58.470 --> 00:47:01.200
can talk to a WebObjects back end.

00:47:01.200 --> 00:47:04.040
And here I'm playing off the
-- you guys -- how many guys

00:47:04.040 --> 00:47:06.190
have seen the WWC trading cards?

00:47:06.500 --> 00:47:11.700
There was this little thing here
that someone took the front page

00:47:11.700 --> 00:47:16.880
of the WWC developer promotion,
and they took the various

00:47:16.880 --> 00:47:18.260
engineers and said,
"Wait a minute.

00:47:18.260 --> 00:47:23.100
Those almost look like trading cards."
So they whipped up a set of trading

00:47:23.100 --> 00:47:25.720
cards for the various Apple engineers.

00:47:25.720 --> 00:47:30.050
So this dashboard widget
allows you to maintain and

00:47:30.050 --> 00:47:32.680
categorize your trading cards.

00:47:32.680 --> 00:47:37.090
So if you want to get all
your information on Bertrand.

00:47:46.260 --> 00:47:46.260
Or if you want to, you know,
what's going on with Spotlight?

00:47:46.260 --> 00:47:46.260
Who should I talk to?

00:47:46.260 --> 00:47:46.260
Maybe I should talk to Jan there.

00:47:47.220 --> 00:47:51.930
So this is a dashboard widget that's
talking to a web services application,

00:47:51.930 --> 00:47:53.600
which is a WebObjects application.

00:47:53.680 --> 00:47:59.010
So as I type here,
it starts narrowing down what

00:47:59.010 --> 00:48:00.460
I could be talking about.

00:48:00.590 --> 00:48:03.800
So let me tell you what's
going on behind the scenes.

00:48:04.120 --> 00:48:06.730
This is an NS Search Field Enhanced.

00:48:07.020 --> 00:48:10.370
Remember,
dashboard widgets are thus HTML.

00:48:10.380 --> 00:48:12.020
So this is HTML interface
you're looking at here.

00:48:12.020 --> 00:48:16.560
In order to get the look and the
interaction of the search field here,

00:48:16.560 --> 00:48:19.600
is that this is an
NS Search Field Enhanced

00:48:19.600 --> 00:48:21.450
input text box element.

00:48:21.450 --> 00:48:24.020
And what it is,
is tied to a JavaScript method.

00:48:24.180 --> 00:48:28.180
And every time I type
in another character,

00:48:28.220 --> 00:48:29.510
a JavaScript method is fired.

00:48:29.510 --> 00:48:32.800
That JavaScript method takes what
I've typed into the query box,

00:48:32.800 --> 00:48:36.610
turns it into a HTTP request,
throws it over to my

00:48:36.770 --> 00:48:38.870
WebObjects application.

00:48:39.130 --> 00:48:42.920
My WebObjects application takes that
request with the query string and

00:48:42.950 --> 00:48:44.670
puts it into a fetch specification.

00:48:44.780 --> 00:48:47.720
And at that point,
my WebObjects application is done.

00:48:47.770 --> 00:48:51.350
The WebObjects framework picks
up the fetch specification,

00:48:51.350 --> 00:48:54.470
dynamically generates
database-specific SQL and hands

00:48:54.660 --> 00:48:56.470
it over to an open database.

00:48:56.720 --> 00:48:59.940
Open base looks at the query,
turns it into a bunch of SQL rows,

00:48:59.940 --> 00:49:01.530
hands it back to the
WebObjects framework.

00:49:01.540 --> 00:49:04.650
The WebObjects framework
takes these SQL rows,

00:49:04.650 --> 00:49:09.350
turns them into objects for me,
and hands them to my application.

00:49:09.590 --> 00:49:11.580
At this point,
my application just has these objects

00:49:11.580 --> 00:49:13.070
that happen to match the query.

00:49:13.260 --> 00:49:16.960
And all my application does
at that point is turn those --

00:49:16.960 --> 00:49:19.470
serialize those objects into XML.

00:49:19.600 --> 00:49:22.860
And without any code,
we're able to do that.

00:49:22.860 --> 00:49:27.240
Then the XML is thrown back to
the widget in the HTTP response.

00:49:27.240 --> 00:49:30.760
The widget, now back in JavaScript,
takes the -- the HTML response,

00:49:30.760 --> 00:49:32.750
and then it takes the SQL response,
and then the XML breaks it apart and

00:49:32.750 --> 00:49:38.860
uses that information to manipulate the
DOM to update our HTML user interface.

00:49:38.970 --> 00:49:41.080
And that happens with each keystroke.

00:49:43.670 --> 00:49:50.960
So if you're interested in core image or
maybe you're interested in core video,

00:49:50.960 --> 00:49:52.110
who do I talk to for this?

00:49:52.210 --> 00:49:55.160
Oh, if it helps, I spell video right.

00:49:56.610 --> 00:49:59.430
And, or maybe, you know,
Core Data is kind of cool, too.

00:49:59.490 --> 00:50:01.000
So, who's that?

00:50:01.000 --> 00:50:02.000
Ted.

00:50:02.130 --> 00:50:05.860
So, that's Dashboard Widget,
using web services to talk

00:50:05.910 --> 00:50:08.500
to a WebObjects application
that's database-backed.

00:50:08.990 --> 00:50:12.640
Web services are how widgets
talk to the outside world,

00:50:12.690 --> 00:50:14.670
and WebObjects makes web services easy.

00:50:14.670 --> 00:50:15.420
Thank you.

00:50:15.440 --> 00:50:16.590
Thank you.

00:50:22.640 --> 00:50:24.090
So, thank you, Jonathan.

00:50:24.140 --> 00:50:27.160
So, dashboard widgets are really cool
and WebObjects is cool and hopefully

00:50:27.160 --> 00:50:31.600
you guys can create some cool widgets
that access your applications data.

00:50:31.600 --> 00:50:36.040
So, hopefully that gives you some
ideas of what you can do with

00:50:36.040 --> 00:50:37.890
WebObjects and Dashboard.

00:50:39.110 --> 00:50:42.070
So here's the WebObjects
5.3 compatibility matrix.

00:50:42.110 --> 00:50:43.810
I'm not going to go into
all the details here,

00:50:43.810 --> 00:50:45.790
but we're going to be
posting that online,

00:50:45.790 --> 00:50:49.680
and you can check out all the latest,
greatest support for that.

00:50:51.400 --> 00:50:52.770
So that's WebObjects 5.3.

00:50:52.840 --> 00:50:53.920
We're pretty excited about it.

00:50:53.960 --> 00:51:00.450
We're happy to be on the developer
tools and shipping with Xcode 2.1.

00:51:00.830 --> 00:51:03.840
Look for us in the future
to ship WebObjects releases

00:51:03.840 --> 00:51:05.870
through the developer tools.

00:51:06.150 --> 00:51:09.910
We've posted our compatibility online,
and you can check out

00:51:09.910 --> 00:51:13.380
all that information,
or you can absolutely drop

00:51:13.380 --> 00:51:17.920
by our WebObjects lab and ask
us more questions about that.

00:51:18.790 --> 00:51:21.170
WebObjects 5.3 is available now.

00:51:21.370 --> 00:51:25.500
So you have it in your hands and
we've shipped it at the conference.

00:51:25.500 --> 00:51:31.700
It's also available through ADC download
and I encourage you to go grab it.

00:51:31.840 --> 00:51:35.280
WebObjects 5.3 for
Tiger Server will be shipping soon,

00:51:35.410 --> 00:51:37.890
so look for that in the upcoming weeks.

00:51:40.500 --> 00:51:42.000
So that's WebObjects 5.3.

00:51:42.000 --> 00:51:45.600
What are we looking for forward into
the future and what are we going to do?

00:51:45.600 --> 00:51:49.600
So being part of the
developer tools release,

00:51:49.630 --> 00:51:53.500
we're obviously going to integrate
tighter with the Xcode IDE and we're

00:51:53.500 --> 00:51:59.340
going to look for new ways of improving
workflow through our tool chain.

00:51:59.340 --> 00:52:03.520
We're going to look forward to
improving the EO Modeler plugin

00:52:03.550 --> 00:52:05.780
and making that more usable.

00:52:05.780 --> 00:52:07.880
We'd love to get feedback
from you guys for the latest,

00:52:07.880 --> 00:52:09.970
greatest features that
you'd like to see in there.

00:52:11.310 --> 00:52:13.240
WebObjects Builder.

00:52:13.310 --> 00:52:15.940
We are looking for new ways
of improving workflows through

00:52:15.940 --> 00:52:20.950
that and improving experience,
seeing if we can leverage WebKit more

00:52:21.000 --> 00:52:23.420
and various other components.

00:52:24.580 --> 00:52:27.410
Further down the line,
we're going to look into our

00:52:27.410 --> 00:52:30.250
deployment story and monitoring story.

00:52:30.320 --> 00:52:34.690
And it's been difficult in the past to
get all the information you guys needed

00:52:34.720 --> 00:52:39.650
out of our frameworks at deployment time,
and we want to assist you guys as far as

00:52:39.920 --> 00:52:44.900
instrumenting your applications in your
deployment environment and providing more

00:52:44.900 --> 00:52:50.920
information and feedback on what's going
on within your deployment environment.

00:52:52.050 --> 00:52:58.220
Whenever Java 1.5 becomes the
default JVM on client and server,

00:52:58.440 --> 00:53:03.370
we will look into supporting and fully
qualifying WebObjects on that JVM.

00:53:03.760 --> 00:53:06.390
There's lots of things to look
forward to in the next year,

00:53:06.400 --> 00:53:11.220
and hopefully next year at WDC we'll
have lots of good things to show you.

00:53:11.250 --> 00:53:13.240
We're very happy about that.

00:53:13.350 --> 00:53:18.160
So I'd like to invite Katherine Wentz up,
and she'll talk to us a little bit

00:53:18.160 --> 00:53:21.110
about WebObjects documentation.

00:53:27.800 --> 00:53:28.940
Hi, I'm Catherine Wentz.

00:53:28.940 --> 00:53:32.070
I'm the Technical Publications
Manager for WebObjects.

00:53:32.230 --> 00:53:35.800
And this morning I'd like to talk
to you about a couple of things.

00:53:35.830 --> 00:53:40.710
I'd like to talk to you about the
documentation that we have available

00:53:40.830 --> 00:53:45.300
today for WebObjects 5.3 and what
you'll be seeing in coming months.

00:53:45.300 --> 00:53:48.990
On the website today at
the ADC Reference Library,

00:53:49.080 --> 00:53:52.750
we have the WebObjects 5.3 release notes.

00:53:52.970 --> 00:53:57.300
And that explains new features,
resolved issues,

00:53:57.300 --> 00:54:01.960
known issues in their workarounds,
and that's available today.

00:54:01.960 --> 00:54:06.960
Let's see, we have the WebObjects 5.3
reference in Java doc format.

00:54:06.960 --> 00:54:12.260
We have the WebObjects 5.3 update,
which explains the API differences

00:54:12.310 --> 00:54:14.960
between WebObjects 5.2.4 and 5.2.5.

00:54:15.300 --> 00:54:17.010
3.

00:54:17.240 --> 00:54:20.060
Now those of you who go to
the ADC Reference Library on a

00:54:20.060 --> 00:54:24.720
regular basis know that we update
the documents there monthly.

00:54:24.720 --> 00:54:27.850
So in the coming months
you'll see some changes.

00:54:28.990 --> 00:54:33.130
We'll be revising some existing
documents to reflect new

00:54:33.130 --> 00:54:35.680
WebObjects 5.3 functionality.

00:54:35.810 --> 00:54:39.780
We'll be retitling and
recategorizing some documents.

00:54:39.840 --> 00:54:43.980
And we'll also be replacing
some outdated documents.

00:54:44.060 --> 00:54:50.160
Project Builder screenshots will become
Xcode screenshots and books such as,

00:54:50.160 --> 00:54:53.540
yes, Project Builder for WebObjects,
they'll be going away.

00:54:53.770 --> 00:54:57.340
All the Xcode specific information
for WebObjects will be in

00:54:57.340 --> 00:54:59.600
the Xcode documentation set.

00:54:59.650 --> 00:55:02.860
So some specific titles you'll
be seeing in the coming months.

00:55:02.890 --> 00:55:05.960
You'll see a new Getting Started with
Web Applications.

00:55:06.010 --> 00:55:11.440
That will have an updated learning path
to reflect the new titles and categories.

00:55:11.470 --> 00:55:13.400
We'll also be making some other changes.

00:55:13.450 --> 00:55:18.930
We'll be taking larger existing documents
and breaking them down into shorter,

00:55:18.980 --> 00:55:21.210
more cohesive documents.

00:55:21.260 --> 00:55:25.380
So a chapter that's currently a
tutorial in one of the large books,

00:55:25.380 --> 00:55:27.720
it'll become a separate tutorial.

00:55:27.720 --> 00:55:30.750
A chapter that explains
how to use a tool,

00:55:30.880 --> 00:55:33.600
it'll become a separate user guide.

00:55:33.870 --> 00:55:38.860
And a chapter that introduces
technology will become an overview.

00:55:38.960 --> 00:55:43.670
So in the coming months,
look out for a new WebObjects overview,

00:55:43.680 --> 00:55:47.640
a new WebObjects Web Applications
Programming Guide,

00:55:47.760 --> 00:55:50.680
and new WebObjects tutorials.

00:55:51.700 --> 00:55:54.830
How many of you have been to the
ADC Reference Library recently

00:55:54.830 --> 00:55:58.360
and seen the new documentation
feedback form at the bottom of each

00:55:58.360 --> 00:56:01.390
page and used it to send feedback?

00:56:02.030 --> 00:56:02.660
Oh, good.

00:56:02.730 --> 00:56:03.890
I have a captive audience.

00:56:03.930 --> 00:56:05.740
I can tell about something new.

00:56:05.770 --> 00:56:08.140
It's called the
Did This Document Help You?

00:56:08.150 --> 00:56:11.950
And it's a quick and easy
way to provide documentation

00:56:11.950 --> 00:56:14.460
feedback directly to tech pubs.

00:56:14.460 --> 00:56:17.290
You can give us feedback
in one of three ways.

00:56:17.290 --> 00:56:19.050
Yes, it was helpful.

00:56:19.050 --> 00:56:20.740
Tell us how it helped.

00:56:20.860 --> 00:56:24.690
It was helpful,
but maybe you found a typo.

00:56:24.780 --> 00:56:28.860
Maybe there was a mistake
in the sample code.

00:56:28.870 --> 00:56:32.060
Maybe, you know, you just needed some
additional information.

00:56:32.060 --> 00:56:34.010
So tell us more about that.

00:56:34.040 --> 00:56:36.440
And then, no, it wasn't helpful.

00:56:36.440 --> 00:56:38.610
So tell us what would have helped.

00:56:38.630 --> 00:56:42.660
I strongly encourage you to use
this new documentation feature.

00:56:42.660 --> 00:56:45.460
It's a great way to get
feedback back to us.

00:56:45.460 --> 00:56:50.460
In closing, you now know more about the
WebObjects 5.3 documentation.

00:56:50.880 --> 00:56:54.490
We've covered the documentation set,
both present and future.

00:56:54.490 --> 00:56:57.710
And now you all know about this
Did This Document Help You?

00:56:57.710 --> 00:56:58.360
feature.

00:56:58.360 --> 00:56:59.630
Thanks for your time.

00:56:59.650 --> 00:57:04.200
I'll be available throughout the week at
the conference to answer any questions.

00:57:04.200 --> 00:57:06.950
I'll also be at the
WebObjects feedback session.

00:57:06.950 --> 00:57:08.780
And thanks for your time again.

00:57:08.780 --> 00:57:10.480
Back to you, Darryl.

00:57:10.480 --> 00:57:11.260
Thank you, Kathleen.

00:57:15.760 --> 00:57:18.840
So lots of good things coming
up with WebObjects documentation

00:57:18.840 --> 00:57:21.650
and lots of different books
that are going to be refreshed.

00:57:21.650 --> 00:57:24.620
So we'll have the latest and
greatest information for you.

00:57:24.620 --> 00:57:27.920
So we have a whole bunch of other
WebObjects sessions that you

00:57:28.040 --> 00:57:31.230
guys can attend this week and
especially today we have a number

00:57:31.230 --> 00:57:33.000
of sessions later on this afternoon.

00:57:33.000 --> 00:57:38.190
We have a WebObjects tool session and
I would encourage a lot of you newbies to

00:57:38.280 --> 00:57:44.110
come to that session and get an idea of
how all our tool chain interacts together

00:57:44.110 --> 00:57:46.350
and get more hands-on with our tools.

00:57:46.360 --> 00:57:50.980
Immediately following that we have
a WebObjects deployment session and

00:57:50.980 --> 00:57:55.030
how to deploy into J2E containers
and so that would be another good

00:57:55.030 --> 00:57:58.710
session for you guys to explore
if you haven't gone through the

00:57:58.850 --> 00:58:01.130
deployment process with WebObjects.

00:58:01.720 --> 00:58:04.720
We have a lab on Wednesday morning,
so I encourage you to

00:58:04.720 --> 00:58:09.600
attend that and give us,
bring any questions or bring your code

00:58:09.600 --> 00:58:13.470
and show it to us and hopefully we can
help you out with any problems you have.

00:58:15.380 --> 00:58:17.500
Later on in the week,
I think it's on Friday,

00:58:17.500 --> 00:58:20.180
we have a WebObjects performance
and optimization session.

00:58:20.180 --> 00:58:22.460
And I would definitely encourage
all of you to go to that.

00:58:22.500 --> 00:58:26.160
We'll have a number of iTunes
music store engineers here,

00:58:26.260 --> 00:58:30.340
and they're going to share all kinds of
war stories and best design practices,

00:58:30.340 --> 00:58:33.720
et cetera, on designing your
WebObjects applications.

00:58:33.720 --> 00:58:38.290
And then later that day,
we have a WebObjects feedback forum,

00:58:38.410 --> 00:58:43.830
and I can tell that a number of you
guys are going to be showing up there.

00:58:45.300 --> 00:58:46.780
Thank you.

00:58:48.270 --> 00:58:52.250
So another thing to point out is that
we have training available for you.

00:58:52.260 --> 00:58:57.160
If you log on to training.apple.com,
there are a couple WebObjects classes.

00:58:57.290 --> 00:58:59.800
I believe the curriculum
was refreshed last year.

00:58:59.800 --> 00:59:04.780
And so look into the internet application
development using WebObjects and

00:59:04.780 --> 00:59:07.950
advanced WebObjects development classes.

00:59:07.950 --> 00:59:11.870
And I hear they're great.

00:59:13.410 --> 00:59:14.190
So who to contact?

00:59:14.330 --> 00:59:19.740
Send some email to webobjx@apple.com
and hopefully we can respond

00:59:19.740 --> 00:59:24.200
to any of your questions and
get any information you need to.