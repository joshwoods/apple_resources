WEBVTT

00:00:10.810 --> 00:00:13.200
So I'm going to talk to
you about games today,

00:00:13.200 --> 00:00:16.120
a little bit about the business,
and then we're going to dive in and

00:00:16.120 --> 00:00:23.050
talk about a lot of the technical issues
and opportunities in the gaming space.

00:00:23.600 --> 00:02:03.100
[Transcript missing]

00:02:03.160 --> 00:02:08.610
and as these titles,
as these blockbuster game titles

00:02:09.030 --> 00:02:13.570
start to enter the mainstream culture,
become part of the popular culture,

00:02:13.570 --> 00:02:16.780
what we've also seen is we are
seeing the business of gaming

00:02:16.780 --> 00:02:20.710
begin to look more and more like
the business of the film industry,

00:02:20.760 --> 00:02:21.740
the movie industry.

00:02:21.740 --> 00:02:27.840
This includes investing in extremely
high production value content,

00:02:27.840 --> 00:02:29.760
fancy talent, fancy graphics.

00:02:31.910 --> 00:02:36.110
Companies investing lots of money
to build proprietary technology,

00:02:36.150 --> 00:02:41.740
game engines and rendering pipelines
and tool sets and things like that.

00:02:41.760 --> 00:02:45.490
We're also seeing tremendous
energy going into the launch

00:02:45.490 --> 00:02:47.750
activities for these new titles.

00:02:47.840 --> 00:02:53.910
They're being launched the same
way that Hollywood launches movies.

00:02:54.120 --> 00:02:57.760
And in addition,
when you find a hit title,

00:02:58.070 --> 00:03:02.910
what happens now is that it becomes kind
of a repeat-until-rich sort of a process.

00:03:03.040 --> 00:03:06.930
You take these titles and
they become franchises,

00:03:07.160 --> 00:03:09.910
and it becomes incredibly important
because of the business that

00:03:10.220 --> 00:03:11.700
they don't mess with the formula.

00:03:11.700 --> 00:03:17.580
You want to kind of repeat
that initial success,

00:03:17.580 --> 00:03:18.190
just like you see happening
in the movie industry.

00:03:18.480 --> 00:03:22.700
Well,
because of this huge upfront investment

00:03:22.700 --> 00:03:27.040
and because of the tremendous
pressure that this is putting

00:03:27.040 --> 00:03:32.080
on the financial side of the business,
there's creating also incredible pressure

00:03:32.080 --> 00:03:33.840
to get the products out the door.

00:03:33.840 --> 00:03:36.540
And everyone knows about the
dynamic of hitting Christmas holiday

00:03:36.540 --> 00:03:37.680
season with your title.

00:03:37.680 --> 00:03:40.580
Well, the good news is you're going
to become rich and famous,

00:03:40.580 --> 00:03:41.100
right?

00:03:41.100 --> 00:03:42.280
This is what it's all about.

00:03:42.280 --> 00:03:44.440
Well, your results may vary.

00:03:44.440 --> 00:03:48.280
In fact, side effects include long hours,
low wages, burnout.

00:03:48.280 --> 00:03:51.570
And we've been reading a whole
bunch of stuff on the web,

00:03:51.570 --> 00:03:55.090
hearing about the kinds of conversations
that have been taking place at

00:03:55.100 --> 00:03:58.530
some of the big gaming conferences,
and this is exactly the sort of

00:03:58.530 --> 00:04:00.570
thing we've been hearing about.

00:04:00.580 --> 00:04:05.990
Well, there's more to it than that.

00:04:06.060 --> 00:04:10.760
When we look at the marketplace,
here's kind of the conventional wisdom

00:04:10.760 --> 00:04:12.260
of what gaming is supposed to be.

00:04:12.280 --> 00:04:16.420
It's 99% teenage boys
engaged in extreme acts,

00:04:16.420 --> 00:04:20.050
with the rest of the market,
1% for the rest of us.

00:04:20.220 --> 00:04:26.570
So clearly, this is not what the rest
of society looks like,

00:04:26.570 --> 00:04:30.860
and we think there is another way here.

00:04:30.880 --> 00:04:34.660
And we'd like to say this is the
time to declare your independence.

00:04:37.300 --> 00:06:17.300
[Transcript missing]

00:06:17.540 --> 00:06:22.880
We believe that Mac OS X could
be the ideal place for this

00:06:23.000 --> 00:06:25.490
transformation in games to occur again.

00:06:25.500 --> 00:06:29.090
In the 80s,
Mac was on the forefront of the

00:06:29.090 --> 00:06:30.900
transformation of the music industry.

00:06:30.900 --> 00:06:33.880
In the 90s, again,
the Macintosh was on the

00:06:33.880 --> 00:06:38.040
forefront of a dramatic
transformation in the video world.

00:06:38.060 --> 00:06:43.160
And we think that in this decade,
this could happen again,

00:06:43.160 --> 00:06:45.450
and we're starting to see
signs of this already.

00:06:45.460 --> 00:06:48.680
What I'd like to do now is I'd
like to bring Peter Grafagnino up,

00:06:48.770 --> 00:06:51.050
and he's going to tell you about some
of the technical ingredients that

00:06:51.050 --> 00:06:52.940
are powering this transformation.

00:06:52.960 --> 00:06:55.030
Peter Grafagnino: Thanks, Tim.

00:06:58.570 --> 00:06:59.260
Morning, everybody.

00:06:59.260 --> 00:07:01.900
It looks like versus Dashboard,
we sort of did okay.

00:07:01.900 --> 00:07:02.490
That's pretty good.

00:07:02.490 --> 00:07:04.870
I realize there's a lot of traffic
with the weather this morning,

00:07:04.880 --> 00:07:06.160
too, so thanks for showing up.

00:07:06.270 --> 00:07:10.200
I'm going to talk about some of the
game technology we have inside of the

00:07:10.230 --> 00:07:13.520
OS and kind of take you through it
from a couple of different slices.

00:07:13.520 --> 00:07:17.700
First off, I'm just going to talk about
the basic technology itself,

00:07:18.050 --> 00:07:20.290
the core tech in the OS,
and point at some

00:07:20.290 --> 00:07:22.300
third-party stuff as well.

00:07:22.900 --> 00:07:25.620
Then I'm going to talk about
development models and how games are

00:07:25.620 --> 00:07:28.810
put together and kind of whether it's
a big budget or a small operation,

00:07:28.810 --> 00:07:31.310
some of the ways people
can approach things.

00:07:31.360 --> 00:07:35.540
I'm also going to talk about a new trend,
these game development platforms,

00:07:35.540 --> 00:07:39.360
which are almost you can think of
them as Xcode for developing games,

00:07:39.520 --> 00:07:42.200
very visual environments
where you can create games in

00:07:42.200 --> 00:07:43.860
a very approachable manner.

00:07:43.860 --> 00:07:48.040
And then I'm going to go through kind
of a laundry list of some really simple

00:07:48.040 --> 00:07:52.560
best practices things about installers
and how to support our monitors.

00:07:52.780 --> 00:07:58.740
There are just best practice things if
you are writing a game to keep in mind

00:07:58.800 --> 00:08:02.040
to have a great Mac game experience.

00:08:02.400 --> 00:12:00.100
[Transcript missing]

00:12:03.060 --> 00:12:04.300
That's without.

00:12:04.310 --> 00:12:08.050
It's a little bit subtle,
but you can get much cleaner video.

00:12:08.050 --> 00:12:10.270
And when you see this
thing on a cinema display,

00:12:10.400 --> 00:12:12.540
the efficiency of the
codec is incredible.

00:12:12.540 --> 00:12:17.060
So for nice cut scenes, you know,
and these scenes are rendered with,

00:12:17.060 --> 00:12:20.290
you know, film technology using
Maya and tools like that.

00:12:20.370 --> 00:12:23.390
And having a great codec to preserve
all that quality is really nice.

00:12:23.440 --> 00:12:28.030
So QuickTime sessions right after
this session in this room is going to

00:12:28.030 --> 00:12:32.440
be a session talking about video and
QuickTime working together with OpenGL.

00:12:32.440 --> 00:12:34.180
So you definitely want to see that.

00:12:34.310 --> 00:12:40.250
And then there's the QT Kit session
as well on Wednesday later today.

00:12:40.440 --> 00:12:40.960
Open AL.

00:12:40.960 --> 00:12:43.850
So Open AL is our audio
solution for games.

00:12:43.850 --> 00:12:46.580
It's built on top of
our core audio engine,

00:12:46.590 --> 00:12:54.380
and it adds positional sound and powerful
APIs for games modeled after OpenGL.

00:12:54.380 --> 00:12:57.800
So if you're familiar with OpenGL,
driving OpenAL is very similar.

00:12:57.800 --> 00:13:01.200
And it's been widely adopted
across the game community.

00:13:01.200 --> 00:13:04.130
In fact, you guys were kind of a little
bit ahead of us on this,

00:13:04.150 --> 00:13:07.860
but we built the version into Tiger now,
so we have OpenAL support

00:13:07.970 --> 00:13:10.200
on the platform,
and we're actively engaged.

00:13:10.300 --> 00:13:12.260
With the open source effort on that.

00:13:12.310 --> 00:13:16.390
So a bunch of games are using OpenAL,
and so we think it's a great solution.

00:13:17.020 --> 00:13:19.550
On input, we've got the USB HID.

00:13:19.560 --> 00:13:23.300
USB solved a bunch of problems in
terms of connectivity with devices.

00:13:23.300 --> 00:13:25.660
We realize it doesn't
solve every problem.

00:13:25.660 --> 00:13:27.590
And so this is an area, actually,
we're interested in

00:13:27.620 --> 00:13:28.700
getting some feedback.

00:13:28.700 --> 00:13:31.670
We realize game configuration,
controller configuration

00:13:31.670 --> 00:13:33.350
UI is very difficult to write.

00:13:33.360 --> 00:13:39.180
But we don't necessarily want to get into
your game and write your user experience.

00:13:39.750 --> 00:13:42.600
So a way to think about it in terms
of object-oriented programming,

00:13:42.600 --> 00:13:44.390
there's model, view, control.

00:13:44.600 --> 00:13:49.000
You guys are going to own the UI in
terms of how your game setup should work.

00:13:49.020 --> 00:13:53.240
But what can we do at the model
level to improve the abstractions?

00:13:53.280 --> 00:14:00.250
So things like learn mode and mapping
of input points is easier to do.

00:14:00.360 --> 00:14:08.190
So anyway, talk to us after the session
or at the games thing tonight.

00:14:08.920 --> 00:14:10.500
and there's the email address for you.

00:14:10.510 --> 00:14:14.240
The other thing we did in
Tiger is built-in haptic support.

00:14:14.290 --> 00:14:17.540
So we worked with Immersion,
who's the clear leader in this field,

00:14:17.580 --> 00:14:20.170
and we have force feedback
framework in Mac OS X,

00:14:20.390 --> 00:14:25.280
so that's great for giving
feedback for devices as well.

00:14:25.710 --> 00:14:29.590
The last section I'm going to talk about
in terms of core technology is tools.

00:14:29.600 --> 00:14:31.640
Now, these tools come with the OS.

00:14:31.740 --> 00:14:34.280
Obviously, Xcode,
you heard about the importance of Xcode.

00:14:34.280 --> 00:14:37.550
Obviously, with the processor
transition we're undergoing,

00:14:37.550 --> 00:14:39.220
very important to use Xcode.

00:14:39.220 --> 00:14:41.220
The other thing is our
performance tools are great.

00:14:41.220 --> 00:14:43.440
These performance tools
are cross-architecture,

00:14:43.530 --> 00:14:44.700
PowerPC and Intel.

00:14:45.140 --> 00:14:48.490
Great analysis tools for
developing code that runs really

00:14:48.490 --> 00:14:52.600
fast on both architectures,
which we think is really going to be a

00:14:52.600 --> 00:14:55.580
compelling story for us on performance.

00:14:55.580 --> 00:14:58.710
And obviously, OpenGL Profiler,
hopefully all of you are

00:14:58.710 --> 00:15:00.500
well familiar with this tool.

00:15:00.500 --> 00:15:04.030
It's just a great tool
for tuning your games.

00:15:04.040 --> 00:15:07.040
And if you haven't used it,
you probably have some orders of

00:15:07.040 --> 00:15:09.150
magnitude of performance on the table.

00:15:09.240 --> 00:15:11.960
But you can get just
by firing up this tool.

00:15:12.080 --> 00:15:14.640
So definitely something
you should know about.

00:15:14.720 --> 00:15:17.180
So those are the pieces of
kind of Apple supplies in the

00:15:17.180 --> 00:15:18.830
OS in terms of core technology.

00:15:18.910 --> 00:15:22.440
But in terms of building a game,
there's a few other pieces you need.

00:15:22.460 --> 00:15:26.740
You know, so-called middleware,
networking is one, physics is another.

00:15:26.780 --> 00:15:28.880
And I'll talk about a couple of those.

00:15:28.970 --> 00:15:32.690
AGEA, Novadex physics engine,
they're very excited to

00:15:32.690 --> 00:15:34.040
come to the platform.

00:15:34.070 --> 00:15:39.180
Actually, they're going to be giving a
lunch talk today on their engine.

00:15:39.180 --> 00:15:40.400
It's been ported over.

00:15:40.640 --> 00:15:44.020
It's a great physics engine
optimized for multiple platforms.

00:15:44.090 --> 00:15:46.640
So this is really a great thing
if you want to learn more,

00:15:46.640 --> 00:15:50.330
go to their website or just
see them today at lunch.

00:15:50.890 --> 00:15:53.270
Another area is networking.

00:15:53.640 --> 00:15:55.330
I can get this thing to work.

00:15:55.380 --> 00:15:56.260
Another area is networking.

00:15:56.260 --> 00:15:58.830
There's both commercial
solutions like Game Ranger,

00:15:58.920 --> 00:16:02.290
open source solutions like Open Play,
and a ton of other things in

00:16:02.730 --> 00:16:04.430
terms of doing networking.

00:16:04.560 --> 00:16:09.480
So there are some URLs to go check out
if you're just getting into this stuff.

00:16:09.740 --> 00:16:12.970
So that's the kind of game
technology areas in terms of the

00:16:13.120 --> 00:16:18.370
portfolio of the kind of tools in
the tool chest to build a game.

00:16:18.380 --> 00:16:23.080
But let's talk about how that
maps over to various kind of

00:16:23.080 --> 00:16:25.740
game development paradigms.

00:16:25.840 --> 00:16:28.620
So we call this Pathways
to Game Development.

00:16:28.620 --> 00:16:32.010
So here's kind of the big
high-end sort of Hollywood studio

00:16:32.160 --> 00:16:33.720
model game development.

00:16:33.720 --> 00:16:37.680
To be honest, not a lot of this occurs
on the platform right now,

00:16:37.680 --> 00:16:39.100
but we think it's a great opportunity.

00:16:39.560 --> 00:16:43.570
You saw Michael Johnson from
Pixar talk about how his team builds

00:16:43.660 --> 00:16:47.690
really creative internal tools
for Pixar to help them create games.

00:16:47.700 --> 00:16:51.510
We think there's a big opportunity
here for doing things like level

00:16:51.630 --> 00:16:55.450
editors and asset management
in terms of custom development.

00:16:55.460 --> 00:17:00.000
But we've got all the great content
creation tools on the platform.

00:17:00.000 --> 00:17:02.340
We've got a great technology stack.

00:17:02.420 --> 00:17:03.260
We've got Xcode.

00:17:03.260 --> 00:17:05.820
We've got PowerPC and
Intel optimization tools.

00:17:05.820 --> 00:17:10.980
So this is an area we think
could be very... very interesting

00:17:11.290 --> 00:17:13.540
for the high-end studios.

00:17:13.540 --> 00:17:17.940
The other thing that typically happens
on the platform is those games are not

00:17:18.000 --> 00:17:20.400
developed natively on the platform,
but they're ported.

00:17:20.440 --> 00:17:24.430
And so we've got a bunch of developers,
great developers, who do that for us.

00:17:24.560 --> 00:17:27.700
And, you know,
this is a pretty vibrant community.

00:17:27.700 --> 00:17:30.310
You know, a lot of the high-end games
you see come through here.

00:17:30.320 --> 00:17:35.770
And they use all the great tools, OpenGL,
OpenAL, Build with Xcode, Tuneless Shark,

00:17:35.770 --> 00:17:37.410
and OpenGL Profiler.

00:17:37.420 --> 00:17:40.420
So that's a... that's a great way
to get into the mode of development.

00:17:40.420 --> 00:17:42.360
Probably not a lot of you in
the audience are in this field,

00:17:42.440 --> 00:17:45.420
but it's a critical part
of our success with games.

00:17:45.420 --> 00:17:49.760
The last two I'm going to get
to are kind of a little more,

00:17:49.760 --> 00:17:53.120
you know,
small budget ways of developing.

00:17:53.210 --> 00:17:56.360
You know, these are things that a small
team could do with a great idea.

00:17:56.540 --> 00:18:00.020
One interesting one is
Mac-only game development.

00:18:00.080 --> 00:18:03.660
And kind of think of this as, you know,
you're not so worried about being

00:18:03.720 --> 00:18:05.300
cross-platform or anything like that.

00:18:05.300 --> 00:18:07.510
You want to leverage all
the technology Apple has,

00:18:07.580 --> 00:18:11.360
not just the core stuff, like,
OpenGL and OpenAL, of course,

00:18:11.360 --> 00:18:15.600
but maybe some new things like, you know,
iChat or the iSight.

00:18:15.670 --> 00:18:18.970
Or you want to use Quartz Composer
to do something because it makes

00:18:18.970 --> 00:18:21.590
you express your ideas more quickly.

00:18:21.600 --> 00:18:28.400
And one example of a game like this is
the Big Bang board games from Freeverse,

00:18:28.400 --> 00:18:32.090
where they've integrated iChat and
all these great OS X technologies

00:18:32.100 --> 00:18:35.430
to build something you really,
you know, can't exactly have an analog

00:18:35.430 --> 00:18:38.270
for on another platform,
but it just feels so much like a

00:18:38.280 --> 00:18:39.300
Mac experience when you're on the phone.

00:18:39.300 --> 00:18:40.840
And you're playing the game.

00:18:40.870 --> 00:18:43.340
And I think that this is really
ripe for experimentation.

00:18:43.340 --> 00:18:47.440
I think there's a lot of cool things that
could be done with iSight and OpenGL and

00:18:47.440 --> 00:18:50.030
all the technology on the platform.

00:18:50.280 --> 00:18:53.250
And so that's an area that could
be pretty interesting to think

00:18:53.250 --> 00:18:56.830
about if you're thinking about
getting into game development.

00:18:56.980 --> 00:19:01.770
The other thing that's really interesting
that's going on is what I'm going to

00:19:01.860 --> 00:19:03.390
call downloadable game development.

00:19:03.400 --> 00:19:08.860
These are ways of developing
games that have the wide reach,

00:19:08.860 --> 00:19:11.550
and so there's a runtime
that runs across,

00:19:11.560 --> 00:19:14.400
say, Mac, PC, consoles.

00:19:14.400 --> 00:19:17.360
But the focus is on the
gameplay and not technology,

00:19:17.360 --> 00:19:20.260
and more importantly,
the focus is on the creation

00:19:20.260 --> 00:19:25.260
of the game and not so much
on technology development.

00:19:25.260 --> 00:19:30.600
And these are kind of, again,
complete IDEs for games,

00:19:30.600 --> 00:19:33.920
kind of as a way to think about it.

00:19:33.980 --> 00:19:37.190
Like Xcode, you know, you press build,
your game comes out.

00:19:37.220 --> 00:19:40.130
They have scripting languages,
very visual design tools,

00:19:40.130 --> 00:19:43.670
the kind of thing, you know,
a few folks with some graphic design

00:19:43.670 --> 00:19:48.430
skills and a little bit of logic
skills can come up with a game.

00:19:48.440 --> 00:19:50.690
And so this is,
and we'll talk about a couple of these.

00:19:50.750 --> 00:19:54.910
Over the Edge Entertainment is
a group in Denmark.

00:19:55.480 --> 00:19:58.020
And you saw this engine,
the Unity engine,

00:19:58.020 --> 00:20:01.920
demoed in Scott Forstall's
Mac OS X State of the Union talk.

00:20:02.120 --> 00:20:04.830
The interesting thing about Unity is
you can kind of think of it,

00:20:04.830 --> 00:20:06.770
it's almost like a Flash environment.

00:20:06.780 --> 00:20:09.300
I mean, it's not meant for the
same things that Flash is,

00:20:09.300 --> 00:20:10.810
but it's very approachable.

00:20:10.820 --> 00:20:15.370
You know, a designer with some scripting
skills can put together some fairly

00:20:15.370 --> 00:20:17.800
interesting content with this tool.

00:20:17.800 --> 00:20:20.520
So it's an integrated editor.

00:20:20.520 --> 00:20:22.220
It's only on Mac OS X.

00:20:22.220 --> 00:20:24.800
However, their runtime lets you deploy.

00:20:25.260 --> 00:20:27.260
You can deploy to other systems.

00:20:27.340 --> 00:20:29.260
You can create console
quality games with this thing.

00:20:29.260 --> 00:20:31.260
They've got a neat dashboard widget.

00:20:31.260 --> 00:20:33.260
You can make your game
into a dashboard widget,

00:20:33.260 --> 00:20:33.260
which is kind of neat.

00:20:33.260 --> 00:20:35.260
They've got all the, you know, buzzwords.

00:20:35.260 --> 00:20:41.240
Their, you know,
engine has pixel shaders and particles.

00:20:41.360 --> 00:20:43.250
And it's built on that
Novadex physics engine,

00:20:43.260 --> 00:20:45.260
so that comes with it.

00:20:45.260 --> 00:20:48.990
And it, you know,
so it's just a great platform to

00:20:48.990 --> 00:20:52.090
experiment with and play around with.

00:20:52.940 --> 00:20:54.940
And in fact,
you may have heard of the game Goo Ball.

00:20:55.000 --> 00:20:58.220
Goo Ball is kind of a fun game,
like the old marble

00:20:58.750 --> 00:21:01.410
game that Ambrosia did,
and they did it with this tool.

00:21:01.420 --> 00:21:05.930
And I think it's really a great
way to accelerate development.

00:21:05.940 --> 00:21:09.910
There's another company that's
doing some really innovative stuff

00:21:10.040 --> 00:21:13.420
in the downloadable game space,
and that's Garage Games.

00:21:13.440 --> 00:21:16.820
And rather than me talk about it,
I'm going to invite Jay Moore up

00:21:16.820 --> 00:21:20.580
to the stage to tell you about
what they're up to on the Mac and

00:21:20.580 --> 00:21:21.760
give you an overview and a demo.

00:21:22.070 --> 00:21:22.440
Thanks, Jay.

00:21:27.920 --> 00:21:32.410
So Garage Games came to the conclusion
from a group of guys that have

00:21:32.410 --> 00:21:36.660
been developing games for over
15 years at Dynamics that games

00:21:36.660 --> 00:21:39.680
needed to be changed in terms of
how they're both made and played.

00:21:39.680 --> 00:21:42.900
So we founded a company six years
ago that is out with the mission

00:21:42.900 --> 00:21:46.100
to actually create a space where
independent development can

00:21:46.100 --> 00:21:48.220
actually bring new games to market.

00:21:48.220 --> 00:21:52.530
And the open platform for OS X is
an ideal situation for that.

00:21:52.540 --> 00:21:55.150
We knew that there were three
things that had to happen for us

00:21:55.230 --> 00:21:56.900
to be able to do this successfully.

00:21:57.500 --> 00:22:02.160
The first one was we needed to create
AAA technology that was available to

00:22:02.230 --> 00:22:04.200
anybody to be able to get access to this.

00:22:04.200 --> 00:22:09.060
The kind of technology that was licensed
for a million dollars and required you to

00:22:09.180 --> 00:22:13.040
pay a back-end percentage of royalties,
which is still the business model

00:22:13.130 --> 00:22:16.940
today in the AAA game space,
is really what we were coming out

00:22:17.180 --> 00:22:19.500
against with the Torque game engine.

00:22:19.500 --> 00:22:23.500
Then we actually came to the next pace,
which was to get a community of people

00:22:23.500 --> 00:22:27.600
together that were like-minded that
would actually collaborate together.

00:22:27.600 --> 00:22:32.760
Today we can claim 100,000 members
in our community and 45,000

00:22:32.760 --> 00:22:35.900
active game developers actually
working inside our environment,

00:22:35.900 --> 00:22:39.900
actually solving solutions to
shared game design issues that

00:22:40.030 --> 00:22:43.800
otherwise you'd have to have a very,
very large team in order to compete with.

00:22:43.800 --> 00:22:46.060
And the third thing that we
had to do was actually have

00:22:46.060 --> 00:22:47.580
a good go-to-market strategy.

00:22:47.600 --> 00:22:51.260
Today we're shipping eight
successful OS X titles,

00:22:51.260 --> 00:22:53.760
one of them that comes on
every Mac that's shipped in

00:22:53.760 --> 00:22:55.390
the consumer channel today.

00:22:55.400 --> 00:22:56.700
So we feel like we've
gotten on the right track.

00:22:56.700 --> 00:22:57.660
We feel like we've gotten a long ways.

00:22:57.730 --> 00:23:01.690
But right now with OS X 1.4,
or with Tiger,

00:23:01.790 --> 00:23:04.690
we feel like we're at the very
cusp of actually breaking through

00:23:04.700 --> 00:23:06.200
into where innovation can happen.

00:23:06.300 --> 00:23:10.500
So I want to talk a little bit about
the technology that we came to.

00:23:10.500 --> 00:23:13.610
And I just, real quickly,
how many people have ever heard

00:23:13.690 --> 00:23:16.240
of garage games or the Torque
game engine in this room?

00:23:16.300 --> 00:23:20.080
Okay, so from the show of hands,
how many people actually

00:23:20.080 --> 00:23:22.510
own one of our platforms,
one of our engines?

00:23:22.600 --> 00:23:25.590
So we've got about a 10%
market penetration in the room,

00:23:25.590 --> 00:23:26.470
it looks like.

00:23:26.560 --> 00:23:27.260
Maybe 15.

00:23:27.300 --> 00:23:30.200
We want everybody to have access to this.

00:23:30.210 --> 00:23:32.040
We want to democratize the technology.

00:23:32.100 --> 00:23:35.100
Now this is not technology
that's easy to learn.

00:23:35.100 --> 00:23:39.200
We've got students graduating this year
from colleges all across the planet,

00:23:39.200 --> 00:23:43.300
where about a thousand of them will
have been in Torque for about two years,

00:23:43.300 --> 00:23:49.200
and about another 500 to a thousand
have been in Torque for about two terms.

00:23:49.300 --> 00:23:53.020
But it's about an 18-month learning
cycle to get completely up to speed.

00:23:53.100 --> 00:23:56.300
And what we're doing is actually breaking
down those barriers and making it easy

00:23:56.300 --> 00:23:56.300
for them to get to the top of the world.

00:23:56.300 --> 00:23:57.800
And we're making it easier to access.

00:23:57.800 --> 00:24:01.700
And probably the title that I'm most
excited about and we're talking about

00:24:01.700 --> 00:24:05.810
lately is our Torque 2D technology that
allows you to understand how to build

00:24:05.930 --> 00:24:10.200
a game quickly in a 2D environment
with state-of-the-art physics,

00:24:10.200 --> 00:24:17.320
state-of-the-art actual
collision systems,

00:24:17.320 --> 00:24:20.140
as well as using 3D rendering
in a 2D environment.

00:24:20.200 --> 00:24:22.520
But the Torque game engine stands alone.

00:24:22.980 --> 00:24:24.800
Its source is available.

00:24:24.800 --> 00:24:26.000
So you actually get to
be able to build a game.

00:24:26.100 --> 00:24:29.000
You can actually make your game
and customize it the way you want.

00:24:29.170 --> 00:24:31.500
And rather than talking
about a lot of these things,

00:24:31.500 --> 00:24:35.000
let me go ahead and show you just
a quick trailer-type demonstration

00:24:35.000 --> 00:24:36.000
of the Torque game engine.

00:24:36.000 --> 00:24:39.990
If I could see demo two.

00:24:43.090 --> 00:24:48.570
So here we've got the Warzone demo,
which is our 1.4 implementation

00:24:48.600 --> 00:24:50.740
of the Torque game engine.

00:24:51.010 --> 00:24:52.950
And in this,
you're going to see just a brief

00:24:52.950 --> 00:24:57.360
highlight of some of the core features
inside of the Torque game engine.

00:24:57.850 --> 00:25:01.710
I do a one-day demonstration of the
Torque game engine that's about a 45,000

00:25:01.720 --> 00:25:04.120
foot level overview of our technology.

00:25:04.120 --> 00:25:08.670
We're going to do that in
just a couple of minutes here.

00:25:10.560 --> 00:25:17.000
So here you've got the real-time scene
basically showing our cube map skyboxes.

00:25:17.060 --> 00:25:21.310
You're going to see flying over here a

00:25:21.360 --> 00:25:25.090
A moving vehicle where we've
actually used the volumetric

00:25:25.100 --> 00:25:27.860
lighting and particle effects to
create an immersive environment here.

00:25:27.860 --> 00:25:32.980
That was rigid body physics that
blew the barrel down on top of us.

00:25:32.980 --> 00:25:36.270
You'll see that here we've got...

00:25:36.440 --> 00:25:43.040
Connected to this,
an ability to mount particle and

00:25:43.040 --> 00:25:46.760
volumetric lighting to the actual object.

00:25:46.920 --> 00:25:51.010
Running through here,
we've got the computer-driven AI,

00:25:51.010 --> 00:25:55.800
actually with just giving them a
destination and targets for the weapons.

00:25:55.800 --> 00:25:59.730
So you're actually getting a real
immersive space with computer-generated

00:25:59.760 --> 00:26:01.740
bots that you're playing against.

00:26:01.740 --> 00:26:05.540
The tracer fire is guided by our
customizable projectile system.

00:26:05.540 --> 00:26:09.240
So we have both the particle
engine as well as a projectile

00:26:09.240 --> 00:26:11.430
system built into the engine.

00:26:12.910 --> 00:26:16.100
This scene is going to
demonstrate what we're known for,

00:26:16.100 --> 00:26:19.380
which is seamless interior
and exterior fly-through,

00:26:19.430 --> 00:26:23.740
so that you've got portalization,
you've got as good a quality

00:26:23.740 --> 00:26:28.540
input on the visual distance
as any engine on the market,

00:26:28.540 --> 00:26:31.050
so you've got long visual
distance on the terrain.

00:26:31.060 --> 00:26:35.820
We use a level of detail manager,
which allows your game to

00:26:35.830 --> 00:26:38.360
have efficient rendering.

00:26:38.360 --> 00:26:42.860
Here you're going to see the rigid
body physics working integrated.

00:26:42.860 --> 00:26:45.910
One of the things that differentiates
the Torque game engine from

00:26:45.910 --> 00:26:49.930
every other engine on the planet,
it was built on the Starseeds

00:26:49.930 --> 00:26:54.420
tribes base of technology,
and we have the most efficient net code,

00:26:54.420 --> 00:26:58.210
allowing for the most people to
play against each other online in

00:26:58.210 --> 00:27:00.480
the same space with the lowest lag.

00:27:01.040 --> 00:27:04.450
And that's something that
is a built-in play mechanic,

00:27:04.450 --> 00:27:09.020
but also allows for you to create a
real immersive multiplayer game space,

00:27:09.130 --> 00:27:13.360
whether it be a card game or whether
it be a first-person shooter.

00:27:16.770 --> 00:27:20.540
Now this is going to
showcase ragdoll animation.

00:27:20.580 --> 00:27:24.320
We're actually using this to be able
to have real efficient net code use.

00:27:24.320 --> 00:27:28.000
So we use an animation as well as a
physics engine for getting that effect.

00:27:28.080 --> 00:27:33.590
Now you've got a lot of weather,
and we're using AI pathing on this.

00:27:33.590 --> 00:27:37.040
The vehicle physics are
actually built into the engine,

00:27:37.040 --> 00:27:39.840
and right now you're seeing the terrain.

00:27:39.840 --> 00:27:42.840
We've got a full terrain editor
built into the engine as well.

00:27:42.940 --> 00:27:47.470
So there's literally 18 different modules
to our engine that you actually are

00:27:47.500 --> 00:27:53.000
going in from lighting to mission editing
to control of the terrain as well.

00:27:53.000 --> 00:27:57.010
So that's just a brief highlight
of the Torque game engine.

00:27:57.010 --> 00:27:59.450
Available instead of
for a million dollars,

00:27:59.510 --> 00:28:04.020
for $100 to anybody who makes
less than $250,000 a year.

00:28:04.020 --> 00:28:08.060
We've literally got tens of thousands
of developers working inside of Torque.

00:28:08.690 --> 00:28:11.790
There's 2,500 active projects
being worked on in Torque today.

00:28:12.220 --> 00:28:14.820
100 of those will probably
become commercial projects.

00:28:15.320 --> 00:28:19.120
50 of those we'll bring to
market over the next five years.

00:28:19.160 --> 00:28:25.270
And actually OS X now represents
60% of our game sales to date,

00:28:25.350 --> 00:28:28.720
and that's showing you that
there's an active market and a

00:28:28.720 --> 00:28:31.960
great growing opportunity on OS X.

00:28:39.930 --> 00:28:42.900
And if you guys want to find out more,
catch Jay after the

00:28:43.070 --> 00:28:45.160
session and talk to him,
because he's got a lot of

00:28:45.160 --> 00:28:48.590
resources for game development.

00:28:49.380 --> 00:28:53.470
So the last section here I'd
like to talk about is what I call

00:28:53.470 --> 00:28:56.040
Mac OS X game best practices.

00:28:56.040 --> 00:29:00.980
And these are a lot of little
things you can do in your game to

00:29:01.360 --> 00:29:04.170
enhance the Mac user experience.

00:29:04.220 --> 00:29:05.970
The first one is sort of obvious.

00:29:06.050 --> 00:29:06.720
I mentioned it before.

00:29:06.720 --> 00:29:07.500
Use the tools.

00:29:07.500 --> 00:29:10.500
I mean,
obviously with the processor transition,

00:29:10.520 --> 00:29:12.150
again, very important.

00:29:12.160 --> 00:29:15.380
Another thing that's true about
the tools is that since it's

00:29:15.380 --> 00:29:18.530
all Unix and GCC under the hood,
you can actually use Xcode

00:29:18.530 --> 00:29:21.900
as a development environment,
but then have a nice cross-platform

00:29:21.900 --> 00:29:26.740
make-file strategy that you can
build in other environments as well.

00:29:26.740 --> 00:29:28.910
So the fact that it's
layered on top of Unix,

00:29:29.080 --> 00:29:30.620
some people have found
really interesting.

00:29:30.640 --> 00:29:35.400
The next thing, support our displays at
their native resolution.

00:29:35.400 --> 00:29:41.120
I mean, if you see a game running at
full res on a cinema display,

00:29:41.120 --> 00:29:42.270
it's just jaw-dropping.

00:29:42.280 --> 00:29:47.120
And a lot of games tend to
switch into lower resolutions,

00:29:47.380 --> 00:29:50.400
or they don't understand the
native resolution of the display.

00:29:50.400 --> 00:29:54.220
And the thing about LCD technology
is that when it's not running native,

00:29:54.220 --> 00:29:57.240
it looks really bad because
it's a digital device,

00:29:57.240 --> 00:30:01.940
so it really only has one pixel,
unlike a CRT where the signal

00:30:02.060 --> 00:30:05.060
is analog on the actual glass.

00:30:05.160 --> 00:30:09.960
So it's real important to support
our displays at a native resolution.

00:30:09.980 --> 00:30:12.290
It's just going to make your
games look the best they can.

00:30:14.030 --> 00:30:15.840
The other thing, use home directories.

00:30:15.860 --> 00:30:20.510
A lot of games have tended to
install things like save games

00:30:20.510 --> 00:30:22.030
in the folder where the game is.

00:30:22.060 --> 00:30:24.820
People, you know,
reinstall or update and they

00:30:24.820 --> 00:30:26.180
lose all of their stuff.

00:30:26.180 --> 00:30:28.860
Put preferences in the per-user places.

00:30:28.860 --> 00:30:32.850
And make sure that your game's
compatible with fast user switching

00:30:32.860 --> 00:30:35.340
because that's another important thing.

00:30:35.440 --> 00:30:37.810
So per-user data,
per-player data should always go

00:30:37.810 --> 00:30:39.890
somewhere in the user's home directory.

00:30:39.950 --> 00:30:40.740
Important thing.

00:30:40.860 --> 00:30:42.850
Next one, package your application.

00:30:42.850 --> 00:30:45.730
I mean, how many applications have
you seen that look like this?

00:30:45.860 --> 00:30:51.850
You know, and Mac users, 8.3 file names,
I mean, come on.

00:30:51.860 --> 00:30:53.800
This is, of course, a fictitious example.

00:30:53.870 --> 00:30:56.850
This is no one's game, actually.

00:30:56.860 --> 00:30:59.830
So we have great packaging
technology in the OS.

00:30:59.900 --> 00:31:02.860
So here's that game all wrapped up
into one double-clickable thing.

00:31:02.870 --> 00:31:04.760
Obviously, you know,
I know a lot of you guys

00:31:04.760 --> 00:31:06.860
have done this already,
but I think it's real important.

00:31:06.860 --> 00:31:08.830
Drag installs.

00:31:08.910 --> 00:31:10.860
Again, if you package your app,
you can just drag it from me to you.

00:31:10.860 --> 00:31:14.860
And you can just drag the media
onto the disk and it'll just work.

00:31:14.860 --> 00:31:18.160
And the same thing the user
drags on to install is the

00:31:18.590 --> 00:31:20.390
thing they drag on to play.

00:31:20.600 --> 00:31:22.460
or thing they click on
when they want to play.

00:31:22.770 --> 00:31:25.710
Another thing is smart
patches and updates.

00:31:25.800 --> 00:31:28.760
So first when you're installing,
you know,

00:31:28.890 --> 00:31:30.560
avoid compressing the compressed.

00:31:30.560 --> 00:31:34.260
You know, that's not--it's a waste of
everyone's time and usually

00:31:34.260 --> 00:31:35.480
a waste of disk space too.

00:31:35.680 --> 00:31:39.570
And zip inside stuff inside tar,
inside DMG, inside--you know.

00:31:39.760 --> 00:31:42.160
It's like, you know,
a Russian doll game to try

00:31:42.160 --> 00:31:44.260
to get at the actual content.

00:31:44.260 --> 00:31:46.590
And the other thing is, you know,
sometimes people have done

00:31:46.660 --> 00:31:47.980
things like multi-step updates.

00:31:48.040 --> 00:31:50.000
If you have to upgrade a game, you know,
obviously,

00:31:50.000 --> 00:31:53.430
the media is huge to begin with,
so you don't send the whole thing out.

00:31:53.540 --> 00:31:55.000
You send out a little update.

00:31:55.000 --> 00:31:57.350
Then there's a readme file saying,
"Put this thing over in

00:31:57.360 --> 00:32:00.680
system library and this thing,
and you're ready to go." And, you know,

00:32:00.680 --> 00:32:02.760
if the user makes one mistake,
his game has got to

00:32:02.760 --> 00:32:03.970
reinstall from scratch.

00:32:04.040 --> 00:32:08.500
So obviously use the computer to
compute so it knows where to put things.

00:32:08.500 --> 00:32:10.000
That would be a great thing.

00:32:10.000 --> 00:32:12.000
So create smart downloads.

00:32:12.000 --> 00:32:14.000
This is another technology
that we have in the OS.

00:32:14.000 --> 00:32:18.070
You see Safari use this
for-- it has automatically

00:32:18.500 --> 00:32:22.500
Internet-enabled disk images,
so when it sees DMG come down,

00:32:22.570 --> 00:32:26.500
it can unpack it,
put up the appropriate user interface,

00:32:26.760 --> 00:32:29.500
and automatically clean up
after itself when it's done.

00:32:29.500 --> 00:32:33.790
So there's a great tech note
on this that's in Xcode of how

00:32:33.810 --> 00:32:37.730
to distribute software using
Internet-enabled disk images,

00:32:37.730 --> 00:32:39.500
so check that out.

00:32:39.500 --> 00:32:41.500
Next thing is integrating with .Mac.

00:32:41.500 --> 00:32:45.860
This is something we've started
where you can use .Mac as a

00:32:45.860 --> 00:32:51.000
kind of storage place to hold,
you know, game ladders and rankings,

00:32:51.000 --> 00:32:51.930
high scores, things like that.

00:32:52.010 --> 00:32:59.000
There's an SDK for .Mac, the 2.0 version,
which you can go hear about later today,

00:32:59.000 --> 00:33:01.000
but that's a really
interesting opportunity.

00:33:01.000 --> 00:33:05.860
In fact, the Sims has a, you know,
place to go save your Sim on .Mac,

00:33:05.860 --> 00:33:08.330
and so it's really pretty cool.

00:33:09.940 --> 00:33:12.760
And with that,
I'd like to bring Tim back up for

00:33:12.770 --> 00:33:16.830
some thoughts and take us through
the rest of the presentation.

00:33:16.830 --> 00:33:17.170
Thanks, Tim.

00:33:17.190 --> 00:33:19.330
Thanks, Peter.

00:33:21.820 --> 00:33:26.610
Okay, so we've covered some of the key
technologies that Apple produces and

00:33:26.610 --> 00:33:29.990
some very interesting new technologies
that are coming from the third-party

00:33:29.990 --> 00:33:34.800
community to help support creating
some great games for Mac OS X.

00:33:34.800 --> 00:33:38.170
But of course,
there's more to getting a game into

00:33:38.170 --> 00:33:43.430
the market then and having success
with that than simply writing the game.

00:33:43.440 --> 00:33:46.340
Now that's a lot of work, of course,
and that's the focus of most of

00:33:46.340 --> 00:33:47.920
what we're talking about here.

00:33:48.340 --> 00:33:51.730
But I want to touch on a few of
the other things that are relevant.

00:33:51.740 --> 00:33:56.170
You know,
great games end up living within

00:33:56.170 --> 00:34:01.890
a community of engaged users,
and having a successful gaming

00:34:01.890 --> 00:34:07.840
business requires an intelligent
approach to getting to market.

00:34:07.840 --> 00:34:13.750
In terms of the resources that
Apple can provide to help you kind of

00:34:13.750 --> 00:34:18.150
get your game going and learn about
what's going on and then market it,

00:34:18.180 --> 00:34:18.180
I think it's a great
way to get a game going.

00:34:18.230 --> 00:34:21.080
And then market that game and develop,
help you build a community

00:34:21.080 --> 00:34:22.750
around your titles.

00:34:23.120 --> 00:34:24.870
There's several things you can do.

00:34:24.880 --> 00:34:29.360
First of all,
we've got this resource where we post

00:34:29.360 --> 00:34:33.150
game trailers on apple.com/games.

00:34:33.530 --> 00:34:35.070
Number one game trailer site.

00:34:35.160 --> 00:34:37.160
It gets a tremendous amount of traffic.

00:34:37.160 --> 00:34:41.370
In addition,
every week we send out emails,

00:34:41.380 --> 00:34:48.160
HTML-style emails to about
8 million customers covering

00:34:48.160 --> 00:34:48.160
all kinds of different topics.

00:34:48.160 --> 00:34:50.160
And then we have a lot of news
about Apple and QuickTime.

00:34:50.160 --> 00:34:54.160
And we often build into these
communications information

00:34:54.160 --> 00:34:56.160
about interesting developments
in the world of gaming.

00:34:56.160 --> 00:34:58.150
And so this is a great resource.

00:34:58.160 --> 00:35:02.150
If you've got some information,
you've got some ideas,

00:35:02.160 --> 00:35:04.160
come talk to us and we'll
see what we can do there.

00:35:04.160 --> 00:35:06.300
And then of course there's
the Apple Start page,

00:35:06.370 --> 00:35:11.160
which draws people in and often
directs them into interesting parts

00:35:11.190 --> 00:35:16.100
of the website that talk about
issues of importance to the gamers.

00:35:16.170 --> 00:35:18.090
And the last one is in the corner.

00:35:18.200 --> 00:35:20.160
We've got a quicktime player.

00:35:20.160 --> 00:35:22.620
We've actually got a little
content guide that comes up

00:35:22.660 --> 00:35:24.160
whenever you launch the player.

00:35:24.160 --> 00:35:31.160
And we use that a lot to promote music
or video events that are coming up.

00:35:31.160 --> 00:35:34.940
We also often use it to talk
about interesting things that are

00:35:34.950 --> 00:35:37.160
happening in the world of games.

00:35:37.160 --> 00:35:40.700
Now beyond that,
for the development community and for

00:35:40.700 --> 00:35:43.560
the kind of the business community,
we've got this website at

00:35:43.560 --> 00:35:48.140
developer.apple.com that's focused
on kind of a clearinghouse for,

00:35:48.140 --> 00:35:53.510
gaming information and resources
and things like that that can

00:35:53.630 --> 00:35:58.010
help you figure out what do
I need to do to develop a game,

00:35:58.240 --> 00:36:01.240
how do I get that game to market,
and you know, just a bunch of good

00:36:01.260 --> 00:36:02.140
information resources.

00:36:02.140 --> 00:36:05.140
So you should check
that one out for sure.

00:36:05.180 --> 00:36:09.170
And then lastly,
there is a tremendous amount of

00:36:09.470 --> 00:36:13.650
information and sort of community
resources out on the web that can be

00:36:13.650 --> 00:36:18.120
very useful for you as you're trying
to get your game into the market.

00:36:18.200 --> 00:36:22.120
Have it become known
within the community.

00:36:22.240 --> 00:36:24.990
And so you should definitely
check these things out as well.

00:36:25.250 --> 00:36:27.120
They're very, very useful.

00:36:28.360 --> 00:36:33.180
Now, I'm not going to spend a lot of
time today talking about the real

00:36:33.230 --> 00:36:38.920
detailed aspects of how Apple can help
you get your game into the market,

00:36:38.920 --> 00:36:43.260
but I want you to understand that
we have a lot going on at Apple to

00:36:43.330 --> 00:36:44.940
help support game developers.

00:36:44.940 --> 00:36:51.140
And this afternoon in this room,
Kristy Wyatt from the developer

00:36:51.140 --> 00:36:54.070
relations team is going to be here,
and she's going to give you a real

00:36:54.070 --> 00:37:00.480
detailed look at some of the things that
Apple can do to help you with your titles

00:37:00.480 --> 00:37:03.430
once you've got the technology done.

00:37:03.690 --> 00:37:05.750
And I think if you're in
the business of games,

00:37:05.750 --> 00:37:08.360
this is a very important
session to come and see.

00:37:08.360 --> 00:37:11.560
You'll learn a lot about
what's up with Apple.

00:37:11.700 --> 00:39:46.300
[Transcript missing]