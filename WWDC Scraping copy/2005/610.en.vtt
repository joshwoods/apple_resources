WEBVTT

00:00:00.700 --> 00:00:01.360
Hi there.

00:00:01.420 --> 00:00:02.870
Thanks for coming.

00:00:03.020 --> 00:00:04.500
Boy, this headphone is interesting.

00:00:04.530 --> 00:00:06.110
I kind of feel like I should
take it off and just,

00:00:06.180 --> 00:00:07.040
you know, use the force.

00:00:07.040 --> 00:00:08.720
But I'm going to keep it on.

00:00:08.720 --> 00:00:09.560
We'll see.

00:00:11.010 --> 00:00:17.550
Yeah, right, we're here to talk about
WebObjects and J2EE deployment.

00:00:18.730 --> 00:00:20.190
Hope everybody's in the right room.

00:00:20.260 --> 00:00:22.040
So, how are you all doing?

00:00:22.130 --> 00:00:24.310
Appreciate you hanging around all day.

00:00:24.560 --> 00:00:29.040
How many people have been to either of
the other two WebObjects sessions today?

00:00:29.180 --> 00:00:29.420
Wow.

00:00:29.500 --> 00:00:30.900
A lot of dedicated people.

00:00:30.900 --> 00:00:31.400
We like that.

00:00:31.500 --> 00:00:32.190
We appreciate that.

00:00:32.280 --> 00:00:34.990
There certainly is enough,
there are enough interesting things

00:00:34.990 --> 00:00:38.220
that are being shown at this conference,
so that shows some dedication.

00:00:41.300 --> 00:00:42.500
I got the clicker right.

00:00:42.500 --> 00:00:44.080
All right, my name is Ray Kiddy.

00:00:44.080 --> 00:00:45.960
I'm WebObjects EOF engineer.

00:00:47.050 --> 00:00:50.250
And session 610.

00:00:51.600 --> 00:00:56.160
What we're going to talk
about is not development,

00:00:56.190 --> 00:00:57.200
because you're done with development.

00:00:57.200 --> 00:01:01.120
Now, maybe you're a developer and you
now have to deploy your application.

00:01:01.150 --> 00:01:02.430
Maybe you're just a deployer.

00:01:02.460 --> 00:01:06.450
And so, if you're a developer,
you've thought about your app one way.

00:01:06.550 --> 00:01:09.450
You need to start to think
about it another way.

00:01:09.460 --> 00:01:12.020
If you're a deployer,
maybe you don't know WebObjects

00:01:12.020 --> 00:01:15.480
or you don't want to know all that
much about the development process,

00:01:15.480 --> 00:01:19.580
but you need to know how to ask the right
questions to get the deployment set up.

00:01:19.780 --> 00:01:21.600
So, we're going to talk about that.

00:01:21.740 --> 00:01:25.630
We're going to start from the bottom,
the data, configuring EOF.

00:01:25.740 --> 00:01:28.450
We're going to talk about
some easy ways to deploy the

00:01:28.450 --> 00:01:30.470
application to get things started.

00:01:30.540 --> 00:01:32.790
Sort of set the alpha state,
get it working.

00:01:32.940 --> 00:01:35.870
Other ways to deploy your
applications and then some of

00:01:35.980 --> 00:01:39.650
the other pieces of the puzzle,
scalability, troubleshooting,

00:01:39.650 --> 00:01:40.900
things like that.

00:01:42.300 --> 00:01:47.010
So this is sort of the vocabulary
list of the things you'll learn.

00:01:47.010 --> 00:01:50.520
You'll learn how to ask some
good questions of developers,

00:01:50.680 --> 00:01:52.570
how to know if you're
ready for your deployment,

00:01:52.580 --> 00:01:54.440
what the buzzwords are,
what the classes are,

00:01:54.480 --> 00:01:55.460
and what the tools are.

00:01:55.480 --> 00:02:00.500
You'll know how to start deploying
the application via Direct Connect and

00:02:00.500 --> 00:02:04.010
also via the WoW adapter,
and then how to deploy another

00:02:04.310 --> 00:02:06.800
way using the J2EE container.

00:02:06.800 --> 00:02:10.090
Then we're going to talk about
monitoring the application to

00:02:10.100 --> 00:02:11.960
try to find out what's going on.

00:02:12.270 --> 00:02:15.560
You know, trying to get a sort of
knowledge-based approach to

00:02:15.560 --> 00:02:17.540
dealing with your application.

00:02:17.540 --> 00:02:19.080
You know,
we want to try to make it so that

00:02:19.080 --> 00:02:21.600
when you deploy your application
and if something goes wrong,

00:02:21.600 --> 00:02:25.420
you know, you should know where to go to
get information to make changes.

00:02:25.420 --> 00:02:27.300
You don't want to make
changes based on your guesses.

00:02:27.300 --> 00:02:30.740
You want to make changes based on
actual information that you've seen

00:02:30.740 --> 00:02:32.640
and actual knowledge that you have.

00:02:32.700 --> 00:02:35.180
And so we want to help you get that
knowledge about your application.

00:02:35.180 --> 00:02:38.480
And again, the ever-present theme,
don't panic.

00:02:41.510 --> 00:02:44.950
So the vocabulary of WebObjects,
just terminology.

00:02:44.960 --> 00:02:49.320
WebObjects applications are just,
you know, Java servlet applications.

00:02:49.320 --> 00:02:51.140
That's in quotes because that's
sort of management speak.

00:02:51.240 --> 00:02:53.450
They're not servlets,
but they're close enough.

00:02:53.610 --> 00:02:55.560
You know, if somebody reads some
of those magazines,

00:02:55.610 --> 00:02:57.130
you can say it's a servlet application.

00:02:57.130 --> 00:02:57.810
That's fine.

00:02:59.550 --> 00:03:01.760
So obviously HTTP server
is on the system,

00:03:01.760 --> 00:03:02.910
MySQL and or Oracle.

00:03:02.910 --> 00:03:06.870
The server admin is used, you can,
you know, we're using with WebObjects,

00:03:06.870 --> 00:03:09.660
J2EE,
so that's there to administer those.

00:03:11.170 --> 00:03:14.790
WoMonitor and Tomcat,
also known as Apache, Jakarta Tomcat.

00:03:14.810 --> 00:03:16.960
They keep complicating the names.

00:03:18.890 --> 00:03:24.920
Axis, aka Web Services Project at Apache,
and then JBoss, aka Mark Fleury, PhD.

00:03:25.380 --> 00:03:31.610
So if you know him,
you know it's a... J Boss is his, so.

00:03:33.300 --> 00:03:36.820
So, information is not knowledge.

00:03:36.880 --> 00:03:37.790
We're starting with the data.

00:03:37.790 --> 00:03:41.280
Now,
this is actually a metaphorical thread,

00:03:41.280 --> 00:03:45.200
and I've been told I can't just throw
these quotes out there without context,

00:03:45.250 --> 00:03:46.320
so I'm going to have to go through them.

00:03:46.540 --> 00:03:49.480
First, I want to point out, though,
that given that you are

00:03:49.640 --> 00:03:52.010
concerned about data,
think about going to

00:03:52.010 --> 00:03:54.650
one of these sessions,
either the MySQL session

00:03:54.670 --> 00:03:58.220
or the Oracle session,
and that's on Thursday and Friday.

00:03:59.140 --> 00:04:01.470
So, tell me if anybody knows this quote.

00:04:01.470 --> 00:04:04.040
Come on, you know, be representing here.

00:04:04.040 --> 00:04:04.930
Let me know.

00:04:05.120 --> 00:04:06.550
Let me know I'm not up here alone.

00:04:06.560 --> 00:04:08.200
Information is not knowledge.

00:04:08.200 --> 00:04:10.100
Knowledge is not wisdom.

00:04:11.500 --> 00:04:13.390
Wisdom is not truth.

00:04:13.450 --> 00:04:14.840
I don't see any recognition yet.

00:04:15.020 --> 00:04:17.680
Truth is not beauty.

00:04:17.680 --> 00:04:19.680
The man in the back got it right, Zappa.

00:04:19.780 --> 00:04:20.670
Okay, truth.

00:04:20.900 --> 00:04:23.360
Beauty is not love.

00:04:26.800 --> 00:04:34.800
[Transcript missing]

00:04:36.030 --> 00:04:37.780
Yeah, well, see, I wanted to use this.

00:04:37.780 --> 00:04:41.070
I mean, you know,
iTunes is driven by WebObjects, really.

00:04:41.250 --> 00:04:43.650
You know, Steve Jobs, really,
he loves us.

00:04:43.820 --> 00:04:45.840
You know,
he doesn't know how much he loves us,

00:04:46.000 --> 00:04:48.450
but he does.

00:04:48.450 --> 00:04:50.700
You know, it's just,
it's painfully clear.

00:04:50.700 --> 00:04:52.800
I mean, look at the music store,
look how beautiful it is.

00:04:52.800 --> 00:04:54.900
It's, you know,
one of the world's largest

00:04:54.900 --> 00:04:57.590
WebObjects deployments,
and basically it wouldn't be

00:04:57.590 --> 00:05:01.050
there if it wasn't for the
flexibility and power of WebObjects.

00:05:02.500 --> 00:07:01.300
[Transcript missing]

00:07:05.000 --> 00:07:06.860
When you're deploying an application,
you need to think more

00:07:06.860 --> 00:07:08.120
aggressively about undo-redo.

00:07:08.120 --> 00:07:11.050
It's very easy to not think about
this when you're developing an

00:07:11.120 --> 00:07:14.940
application because you're just running
a single instance and doing things.

00:07:14.950 --> 00:07:18.520
But then when you deploy,
it can use a lot more memory.

00:07:18.570 --> 00:07:22.540
Everything you do in the editing
context generates copies,

00:07:22.540 --> 00:07:25.400
potentially, in the undo-redo stack.

00:07:25.980 --> 00:07:29.100
And so look at these methods in
the EO editing context and see

00:07:29.100 --> 00:07:31.080
how you want to handle undo-redo.

00:07:31.080 --> 00:07:34.820
Find out how much of that state
you really need to keep around.

00:07:34.820 --> 00:07:38.160
If your app is going to
encounter memory pressure,

00:07:38.160 --> 00:07:41.470
you should know where to
tune it to get it to behave,

00:07:41.470 --> 00:07:43.340
to get it to be smaller.

00:07:48.780 --> 00:07:53.690
Freshness and synchronicity is actually
a little bit of a complicated topic.

00:07:57.100 --> 00:09:10.700
[Transcript missing]

00:09:12.820 --> 00:09:17.540
The fetch timestamp in the editing
context is how you configure this.

00:09:17.540 --> 00:09:20.640
And so by default,
the editing context will keep the

00:09:20.780 --> 00:09:22.520
data no more than an hour old.

00:09:22.560 --> 00:09:26.790
And so as you're deploying,
think about if you want to change that,

00:09:26.970 --> 00:09:28.100
move it up, move it back.

00:09:28.200 --> 00:09:31.190
It affects how the app behaves.

00:09:31.280 --> 00:09:36.550
It's very much a deployment issue because
you can develop for quite a while and

00:09:36.550 --> 00:09:38.450
you'll never have to think about it.

00:09:38.700 --> 00:09:41.750
And then you get a couple of users
or a bunch of users on the app.

00:09:41.850 --> 00:09:44.720
And then all of a sudden,
it comes up and you'll

00:09:44.940 --> 00:09:49.030
have to deal with it,
sometimes in very sophisticated ways.

00:09:49.060 --> 00:09:50.670
So it's something to keep in mind.

00:09:55.500 --> 00:11:19.000
[Transcript missing]

00:11:21.100 --> 00:11:22.780
Obviously,
you can hear more about this from

00:11:22.780 --> 00:11:25.520
the performance session on Friday.

00:11:28.750 --> 00:11:33.210
So again, this is the object graph,
shared data, undo, redo,

00:11:33.360 --> 00:11:35.760
freshness and synchronicity,
and managing rights to the database.

00:11:35.760 --> 00:11:40.520
These aren't the only things you need to
know about EOF to deploy an application.

00:11:40.520 --> 00:11:43.880
But if you're deploying an application,
especially if you're

00:11:43.880 --> 00:11:47.200
not a developer also,
you want to, as I said,

00:11:47.310 --> 00:11:52.210
ask the developer about these questions
and at least make sure that they

00:11:52.210 --> 00:11:54.070
have intelligent answers for them.

00:11:54.620 --> 00:11:58.300
Ask them, so of all the data that
we have in the database,

00:11:58.300 --> 00:12:01.810
how are you making sure that
copies of data aren't being

00:12:01.840 --> 00:12:06.200
shared among too many instances,
too many copies being made?

00:12:06.200 --> 00:12:07.480
How are you sharing the data?

00:12:07.480 --> 00:12:11.280
How many copies of different things
are you keeping in the editing context?

00:12:11.280 --> 00:12:14.690
If the developer has intelligent
answers for these questions,

00:12:14.700 --> 00:12:19.200
then there shouldn't be many surprises
when the application actually deploys.

00:12:19.200 --> 00:12:22.330
What you want to avoid is you
bring up your application,

00:12:22.400 --> 00:12:24.220
you're running it as a developer.

00:12:24.380 --> 00:12:26.380
You're running it as a developer with
one or two different sessions going on.

00:12:26.380 --> 00:12:28.380
And then you put it out and
five or ten people use it.

00:12:28.380 --> 00:12:30.800
And then, you know,
maybe it's a public app

00:12:30.800 --> 00:12:32.380
and it gets slash dotted.

00:12:32.390 --> 00:12:36.380
You know, you go to the floor right then.

00:12:36.380 --> 00:12:38.910
I mean, if you haven't thought
about these things before,

00:12:38.910 --> 00:12:40.370
you'll have no idea what to do.

00:12:40.400 --> 00:12:44.290
These questions make it so
that when your demand scales,

00:12:44.400 --> 00:12:50.930
that you can scale the applications
up to meet the demand quickly.

00:12:56.150 --> 00:12:59.220
This last one is just, I wanted to say,
what does the developer need

00:12:59.220 --> 00:13:00.320
to know about the deployment?

00:13:00.320 --> 00:13:04.340
And I would say,
why does the developer ask?

00:13:04.400 --> 00:13:06.150
They don't need to know.

00:13:06.160 --> 00:13:10.270
The data should be abstracted for them.

00:13:10.390 --> 00:13:13.450
They look at it through the
EOModeler application and they

00:13:13.450 --> 00:13:14.960
shouldn't have to worry about it.

00:13:14.960 --> 00:13:18.860
And frankly, if they're doing too many
cute things under the covers,

00:13:18.960 --> 00:13:21.590
it's just going to
cause problems later on.

00:13:25.660 --> 00:13:31.030
Knowledge is not wisdom.

00:13:31.160 --> 00:13:35.420
So I just wanted to go through
the base case starting with a

00:13:35.420 --> 00:13:39.300
simple WebObjects application,
you know, the parts of it.

00:13:39.350 --> 00:13:44.380
And again, this is somewhat from the
perspective of somebody who's not

00:13:44.460 --> 00:13:47.100
an expert in WebObjects already.

00:13:48.770 --> 00:13:53.440
First time you deploy an application,
a lot of people see strange things

00:13:53.440 --> 00:13:57.610
because the class path isn't
quite how they think it should be,

00:13:57.690 --> 00:13:59.910
and they don't realize
that that's the problem.

00:13:59.940 --> 00:14:03.160
Deployment machines,
it can be a little bit differently

00:14:03.160 --> 00:14:06.570
laid out than what you have
on your development machine.

00:14:06.580 --> 00:14:08.970
Or you've just gotten
the app from a developer.

00:14:09.060 --> 00:14:11.380
You don't know how this person
has their machine set up.

00:14:11.540 --> 00:14:13.460
So you launch the app.

00:14:13.470 --> 00:14:18.350
The class path is set up
in a file inside the WOA,

00:14:18.420 --> 00:14:23.060
and it is in the console output.

00:14:23.530 --> 00:14:25.580
This is perhaps a shallow point,
but I just wanted to point it out

00:14:25.660 --> 00:14:31.980
because we get a lot of questions and
we can often answer them by starting,

00:14:31.990 --> 00:14:36.650
"Well, if you look in the class path,
you'll see..." So, you know,

00:14:36.750 --> 00:14:38.180
this is a job application.

00:14:38.480 --> 00:14:41.790
You know,
look carefully at the class path and make

00:14:41.880 --> 00:14:44.320
sure that it is what you think it is.

00:14:45.240 --> 00:14:49.450
and a lot of the initial
deployment pain will be reduced

00:14:49.450 --> 00:14:52.710
if you're cognizant of this.

00:15:04.400 --> 00:15:08.500
So keep in mind,
when you're deploying an application,

00:15:08.500 --> 00:15:14.570
it is very often valuable to
separate cleanly the server

00:15:14.570 --> 00:15:14.570
side and client side resources.

00:15:15.520 --> 00:15:17.880
So when you're first
developing WebObjects,

00:15:17.880 --> 00:15:18.260
it's easy.

00:15:18.260 --> 00:15:20.270
Most things end up in the server side.

00:15:20.280 --> 00:15:22.590
The server side is your business logic.

00:15:22.600 --> 00:15:28.140
It is dynamically generated resources,
not so often used perhaps,

00:15:28.140 --> 00:15:30.590
but custom WoE component
logic is on the server side.

00:15:30.640 --> 00:15:34.140
And these are things,
when you install your application,

00:15:34.140 --> 00:15:39.030
you actually do two builds,
one to the desk root for the

00:15:39.030 --> 00:15:43.640
application server target and
one for the web server target.

00:15:44.220 --> 00:15:47.120
So you're getting the two different
sides of the application separately.

00:15:47.120 --> 00:15:50.800
In a deployment, you can separate those,
and there is quite a bit

00:15:50.800 --> 00:15:52.010
of benefit to doing so.

00:15:52.020 --> 00:15:55.350
The server side,
obviously your Java class

00:15:55.350 --> 00:15:57.280
is talking to your database.

00:15:57.280 --> 00:15:58.660
That all needs to be there.

00:15:58.660 --> 00:16:03.720
The client side is
very often very static.

00:16:03.800 --> 00:16:09.690
Perhaps it's HTML fragments you
include in your application.

00:16:09.700 --> 00:16:10.560
It's JPEGs.

00:16:10.560 --> 00:16:11.120
It's pictures.

00:16:11.120 --> 00:16:15.050
It's things that you reference in your,
in your WoE component

00:16:15.050 --> 00:16:16.990
logic via an href binding.

00:16:20.290 --> 00:16:24.940
It's also the custom interface
classes in Java client applications.

00:16:24.940 --> 00:16:27.410
So those are very separate.

00:16:27.410 --> 00:16:32.380
When your user starts up
a Java client application,

00:16:32.380 --> 00:16:35.880
WebStart identifies the server side,
where they want to be,

00:16:35.880 --> 00:16:38.280
and then it downloads the client side.

00:16:38.280 --> 00:16:41.560
That download can actually come
from anywhere on the internet.

00:16:41.560 --> 00:16:45.810
The static client side application
resources can actually be served

00:16:45.810 --> 00:16:47.920
from anywhere on the internet.

00:16:47.920 --> 00:16:51.890
And so oftentimes you'll see a shop
that they have a deployment machine

00:16:51.890 --> 00:16:56.330
with the server side resources,
and then off to the side they have

00:16:56.330 --> 00:17:01.760
something which just does nothing
but scream HTTP and nothing else.

00:17:01.760 --> 00:17:07.100
And that's for static resources for
simple vending through the HTTP adapter.

00:17:07.100 --> 00:17:08.250
And that's all the stuff that's going on.

00:17:08.260 --> 00:17:10.040
And that's all the client side stuff.

00:17:10.050 --> 00:17:12.220
And as I said,
that doesn't even have to be

00:17:12.220 --> 00:17:14.840
in your subnet that you serve
the rest of the data from.

00:17:15.050 --> 00:17:16.210
That can be anywhere.

00:17:16.340 --> 00:17:20.480
So it's often useful
to separate those out.

00:17:22.260 --> 00:17:23.960
In Xcode, this is the command you do.

00:17:23.960 --> 00:17:27.410
Xcode build install with the
different configurations,

00:17:27.410 --> 00:17:34.460
and this will get you the two sides
of your application separately placed.

00:17:38.720 --> 00:17:43.780
So as a deployer, you've been given this
WebObjects application.

00:17:43.780 --> 00:17:45.670
Now, does it work?

00:17:45.670 --> 00:17:47.900
You may not know.

00:17:48.190 --> 00:17:49.180
Hopefully it does.

00:17:49.180 --> 00:17:52.370
But somebody just handed
you some directories,

00:17:52.370 --> 00:17:55.180
and so you don't really know if it works.

00:18:14.150 --> 00:18:14.150
So as a deployer, you've been given this
WebObjects application.

00:18:14.150 --> 00:18:14.150
Now, does it work?

00:18:14.150 --> 00:18:14.150
You may not know.

00:18:14.150 --> 00:18:14.150
Hopefully it does.

00:18:14.150 --> 00:18:14.150
But somebody just handed
you some directories,

00:18:14.150 --> 00:18:14.150
and so you don't really know if it works.

00:18:14.400 --> 00:19:15.700
[Transcript missing]

00:19:20.720 --> 00:19:22.060
Wisdom is not truth.

00:19:22.060 --> 00:19:31.860
So, Woe Monitor is the application that
we have made for configuring and

00:19:32.210 --> 00:19:34.440
deploying WebObjects applications.

00:19:34.440 --> 00:19:36.000
It's very flexible.

00:19:36.000 --> 00:19:42.130
One instance of it runs within a
subnet and it can deploy applications

00:19:42.130 --> 00:19:46.510
on any machine in that subnet and
it can deploy multiple instances

00:19:46.510 --> 00:19:50.570
of different kinds of applications
on any machine in that subnet.

00:19:50.600 --> 00:19:52.600
So, it is very flexible.

00:19:52.600 --> 00:19:57.140
It has a web interface,
so you can even access it remotely.

00:19:57.140 --> 00:20:01.170
You may well want to consider the
security of that situation if you do it.

00:20:01.450 --> 00:20:06.680
Maybe you want to put that through a
special pipe so that it's secure or

00:20:06.680 --> 00:20:10.610
access it over a secure connection.

00:20:11.000 --> 00:20:13.090
So we're going to go
through the overview,

00:20:13.100 --> 00:20:17.490
the adapter information,
configuring and managing applications.

00:20:25.400 --> 00:20:27.400
A Downside to the Mic.

00:20:27.400 --> 00:20:36.260
So here's a classic install of
a couple different applications

00:20:36.260 --> 00:20:38.830
on a couple different machines.

00:20:39.050 --> 00:20:44.000
The browser comes from outside
and accesses the WoW adapter.

00:20:44.000 --> 00:20:49.160
WoW adapter, of course,
is a program that you can see

00:20:49.160 --> 00:20:50.830
the source for on your machines.

00:20:50.920 --> 00:20:52.080
It's written in C.

00:20:52.100 --> 00:20:58.100
It translates the HTTP requests
and homes them in on specific

00:20:58.100 --> 00:21:01.140
WebObjects application instances.

00:21:01.180 --> 00:21:02.840
And so you can see how that works.

00:21:02.840 --> 00:21:07.100
It will send it to the HTTP server.

00:21:07.320 --> 00:21:11.120
The WebObjects adapter,
this confuses people who are

00:21:11.120 --> 00:21:12.290
dealing with it at first.

00:21:12.450 --> 00:21:18.970
The WoW adapter is another process that
sits on the outside of your subnet or

00:21:18.970 --> 00:21:21.220
on the outside of your installation.

00:21:21.280 --> 00:21:25.980
The WebObjects adapter is in
your application instance doing a

00:21:25.990 --> 00:21:28.820
similar task within the application.

00:21:28.850 --> 00:21:35.460
It is getting connections and then homing
them to different sessions and different

00:21:35.530 --> 00:21:37.260
applications on different machines.

00:21:37.280 --> 00:21:39.470
within the subnet.

00:21:42.480 --> 00:21:49.830
You can access the WoWAdapter info page,
which will list for you all the running

00:21:49.830 --> 00:21:53.900
applications and a lot of statistics
about the applications that are running.

00:21:54.030 --> 00:21:56.390
You'll be able to see if things are
going wrong with the applications.

00:21:56.390 --> 00:22:00.420
You'll be able to see if some of
the applications are not responding,

00:22:00.530 --> 00:22:04.150
if they've gone dead.

00:22:04.780 --> 00:22:07.650
This page also can be
protected by password.

00:22:07.720 --> 00:22:10.360
So, you know,
anything with a web interface,

00:22:10.360 --> 00:22:13.770
you may want to put an administrative
password on it just to make sure

00:22:13.770 --> 00:22:15.280
not everybody can get into it.

00:22:15.340 --> 00:22:19.600
We know early on people, you know,
put things like Woe Stats pages and

00:22:19.600 --> 00:22:22.340
they were accessible from the internet.

00:22:22.340 --> 00:22:26.800
You know, somebody running,
somebody looking at your store catalog,

00:22:26.800 --> 00:22:31.030
you know, could say, you know,
myflowerstore.com slash

00:22:31.070 --> 00:22:32.560
and then Woe Stats.

00:22:32.560 --> 00:22:35.480
And they could see a bunch of
information about the site.

00:22:35.510 --> 00:22:37.460
This kind of thing is not a good idea.

00:22:37.460 --> 00:22:41.580
So make sure your administrative
pages are password protected.

00:22:45.840 --> 00:22:50.800
This is the interface for managing
applications in WoMonitor.

00:22:51.050 --> 00:22:55.800
Again, one WoMonitor per subnet,
one WoMonitor instance.

00:22:56.100 --> 00:22:59.800
Now, actually, it doesn't enforce this.

00:22:59.800 --> 00:23:05.380
If I have my way, it will,
because only one instance should come up.

00:23:05.800 --> 00:23:10.930
You start the WoMonitor via
the server admin application.

00:23:10.950 --> 00:23:14.400
So you go to the WebObjects service,
you start the WebObjects service,

00:23:14.400 --> 00:23:18.250
and on the settings page there
is a keep WoMonitor running,

00:23:18.250 --> 00:23:21.260
keep JavaMonitor running checkbox.

00:23:21.260 --> 00:23:24.330
And you check that and save,
and that will keep the monitor

00:23:24.330 --> 00:23:26.140
running on that machine for you.

00:23:26.200 --> 00:23:29.640
Server admin actually also allows
you to administer any number

00:23:29.650 --> 00:23:31.410
of machines within a subnet.

00:23:32.360 --> 00:23:35.770
Actually, not just in a subnet, you know,
any machines you can give the

00:23:35.770 --> 00:23:37.820
address to and that it has access to.

00:23:37.820 --> 00:23:41.260
So you can use server admin to talk
to all your different machines and

00:23:41.260 --> 00:23:43.100
do that level of configuration.

00:23:43.100 --> 00:23:46.120
You can use the WoMonitor application
to talk to all those machines and

00:23:46.120 --> 00:23:47.740
do that level of configuration.

00:23:47.740 --> 00:23:50.520
So it's very customizable, very flexible.

00:23:55.580 --> 00:23:57.900
You can configure things
about the application.

00:23:57.900 --> 00:24:00.320
You can configure for
any number of instances.

00:24:00.320 --> 00:24:02.390
You can say for all
the instances do this,

00:24:02.440 --> 00:24:04.580
maybe just for one.

00:24:05.710 --> 00:24:07.810
As I said,
it's a securable web interface,

00:24:07.810 --> 00:24:10.360
and anything that you want
to do in the application,

00:24:10.360 --> 00:24:14.520
anything that's accessible,
you can administer via this interface.

00:24:14.520 --> 00:24:18.570
There's no secret hooks that you can
only do through the command line.

00:24:18.570 --> 00:24:19.730
It really is all here.

00:24:25.250 --> 00:24:30.960
So managing the running applications.

00:24:30.970 --> 00:24:33.650
And now we're going to go to a demo.

00:24:33.930 --> 00:24:37.020
Chris Pavicich is going to
show you deploying a simple

00:24:37.020 --> 00:24:38.630
WebObjects application.

00:24:47.300 --> 00:24:49.300
and Chris Pavicich.

00:24:49.300 --> 00:24:52.480
Do you guys hear me?

00:24:59.230 --> 00:25:03.850
So as Ray said, I'm going to show you how
to get WoMonitor up and

00:25:03.850 --> 00:25:07.840
running on Mac OS X server.

00:25:07.870 --> 00:25:09.310
Any better?

00:25:13.150 --> 00:25:17.220
The first thing we're going to need
to launch is the server admin tool.

00:25:20.470 --> 00:25:24.780
Server admin tool is
divided into two sections.

00:25:24.780 --> 00:25:28.500
On the left, there's a list of the local
services that are running.

00:25:28.500 --> 00:25:32.480
If I click the disclosure
triangle here next to home local,

00:25:32.600 --> 00:25:35.490
that's this box sitting
in front of me here.

00:25:47.600 --> 00:25:48.600
Wait, don't run away.

00:25:48.600 --> 00:26:01.900
Okay, so what you see on the left is
a list of all the services that

00:26:01.900 --> 00:26:04.330
are up and running on this box.

00:26:07.200 --> 00:26:14.900
[Transcript missing]

00:26:44.400 --> 00:26:47.580
Okay, so on the left, I'm going to select
the WebObjects service.

00:26:47.710 --> 00:26:51.400
Right now you see that it's
stopped and the monitor is stopped.

00:26:51.400 --> 00:26:55.080
So the settings tab on the bottom.

00:26:56.200 --> 00:27:11.800
[Transcript missing]

00:27:13.200 --> 00:27:15.200
and I will go back to the overview.

00:27:15.200 --> 00:27:17.200
Now we see that the monitor is running.

00:27:17.200 --> 00:27:19.880
The WebObjects service is still stopped,
so I'm going to go ahead and

00:27:20.030 --> 00:27:22.990
hit the green play button
on the toolbar at the top.

00:27:24.220 --> 00:27:27.190
Now the WebObjects service is running.

00:27:27.700 --> 00:27:31.110
And if you want to get to monitor
directly from the server admin tool,

00:27:32.900 --> 00:27:45.700
[Transcript missing]

00:27:50.810 --> 00:27:53.100
and Hacker stay out.

00:27:53.100 --> 00:27:56.550
So that was the wrong password.

00:27:56.550 --> 00:27:56.550
Get the right password.

00:28:02.800 --> 00:28:20.000
[Transcript missing]

00:28:33.830 --> 00:28:34.840
This has all been set up already.

00:28:34.860 --> 00:28:36.210
I'm going to walk you
through setting it up again.

00:28:36.330 --> 00:28:40.740
So the first thing you need to do
is set up a host to run monitor.

00:28:40.780 --> 00:28:44.280
And as Ray said,
you should really have one instance

00:28:44.280 --> 00:28:46.850
of monitor running per subnet.

00:28:47.650 --> 00:28:51.680
I'm going to add an instance
of monitor here on localhost.

00:28:51.840 --> 00:28:52.800
Type in localhost.

00:28:52.810 --> 00:28:56.090
There's a note here that says, hey,
if you're putting in localhost

00:28:56.100 --> 00:29:02.770
with the local loopback
address 127.0.0.1 as the host,

00:29:02.770 --> 00:29:05.900
it should be the only host.

00:29:06.480 --> 00:29:13.370
Localhost, this is OS X, add a host,
and there we go.

00:29:13.620 --> 00:29:14.670
Our host has been added.

00:29:14.720 --> 00:29:16.200
It's available.

00:29:16.450 --> 00:29:18.400
There are no instances running.

00:29:18.450 --> 00:29:23.000
Processor description is
PowerPC and it's 10.4.1.

00:29:23.700 --> 00:29:28.940
So now I'd like to get an
application up and running.

00:29:29.130 --> 00:29:34.960
So I'm going to add an
application called Think Movies.

00:29:35.010 --> 00:29:39.820
It's one of our developer examples.

00:29:39.820 --> 00:29:42.240
So Think Movies is the name of the app.

00:29:42.280 --> 00:29:44.450
Hit Add Application.

00:29:45.470 --> 00:29:51.090
And there's this new instance defaults
sort of wizard that you need to fill out.

00:29:53.350 --> 00:29:55.810
So we're running on OS X,
so I'm going to click the

00:29:55.810 --> 00:29:58.200
path wizard next to OS X.

00:29:58.220 --> 00:30:02.990
It's going to bring up this file browser,
and I'm going to navigate to

00:30:03.010 --> 00:30:05.070
the Developer Examples folder.

00:30:09.200 --> 00:30:16.900
[Transcript missing]

00:30:18.020 --> 00:30:21.280
Prebuilt WOA and I'm going
to select the executable so

00:30:21.370 --> 00:30:24.390
that path filled in correctly.

00:30:26.800 --> 00:30:30.740
And the only other thing I'm going
to tweak here today is just I want

00:30:30.740 --> 00:30:36.910
to send all the output that's
generated on Mac OS X to temp.

00:30:37.610 --> 00:30:41.380
And down here in the lower right corner,
if you fill in any,

00:30:41.470 --> 00:30:45.040
if you change more than one
of these fields at a time,

00:30:45.040 --> 00:30:48.100
you'll want to push them all together.

00:30:48.100 --> 00:30:51.860
If you just select the push icon
to the right of any one field when

00:30:51.970 --> 00:30:55.730
you've changed more than one value,
it'll only push the field

00:30:55.730 --> 00:30:57.390
that you've hit push on.

00:30:57.390 --> 00:31:00.530
So I'm going to hit push all.

00:31:01.800 --> 00:31:05.200
and then back up here on the top,
I'm going to press the

00:31:05.490 --> 00:31:06.980
detail view button.

00:31:06.980 --> 00:31:06.980
So.

00:31:07.560 --> 00:31:13.200
Right now the Think Movies app has been
configured and Monitor knows about it,

00:31:13.260 --> 00:31:16.580
but there aren't any instances running,
so...

00:31:17.200 --> 00:31:21.950
We'd really like to see that
apps can be started from Monitor.

00:31:22.030 --> 00:31:24.960
So I'm going to run two instances.

00:31:24.980 --> 00:31:28.130
And there's a dropdown here that says,
on which host do you

00:31:28.130 --> 00:31:29.830
want to run your app?

00:31:29.950 --> 00:31:33.820
If we had a cluster of boxes
all set up to do deployment,

00:31:33.840 --> 00:31:36.460
they would all show up in this dropdown.

00:31:36.600 --> 00:31:37.890
We only have one box here today.

00:31:37.920 --> 00:31:43.180
So local host, two instances, click Add.

00:31:45.300 --> 00:31:49.520
See that it added each of the instances.

00:31:49.940 --> 00:31:53.810
I'm going to go ahead and
click the green button.

00:32:24.720 --> 00:32:28.890
and what Monitor did there was
complain that there were old

00:32:28.970 --> 00:32:31.770
versions of these apps running.

00:32:31.770 --> 00:32:33.710
So I'm just flipped over to the terminal.

00:32:33.860 --> 00:32:35.600
I'm going to kill them.

00:32:41.800 --> 00:32:51.300
[Transcript missing]

00:32:52.750 --> 00:32:54.520
I'm going to click on
one of the app instances.

00:32:54.520 --> 00:33:02.290
I'm going to stop all the
instances and restart them.

00:33:05.900 --> 00:33:10.700
and Now you see the Frankenstein
switches changing state from off to on.

00:33:10.710 --> 00:33:14.090
It'll take a few moments here
for them to get up and running.

00:33:22.600 --> 00:33:23.600
and Chris Pavicich.

00:33:23.600 --> 00:33:24.580
Let's see how they're running.

00:33:24.600 --> 00:33:26.320
Click on an app instance.

00:33:26.320 --> 00:33:29.520
There's our Think Movies application.

00:33:29.520 --> 00:33:31.620
Let's search for a movie.

00:33:31.620 --> 00:33:33.910
Let's see what's in the database.

00:33:34.650 --> 00:33:36.580
There's our data.

00:33:36.670 --> 00:33:39.580
So that's a brief demonstration
of getting your apps up

00:33:39.580 --> 00:33:40.500
and running in WellMonitor.

00:33:40.500 --> 00:33:43.360
I'm going to turn things
back over to Ray now.

00:34:58.510 --> 00:34:59.340
- Can you turn it off?

00:34:59.340 --> 00:35:01.330
No, it's on, okay, it's working.

00:35:01.550 --> 00:35:03.690
Do you guys know what pod buddies are?

00:35:03.860 --> 00:35:06.600
I think Chris and I should
have just decided to be pod

00:35:06.600 --> 00:35:08.950
buddies for our microphones.

00:35:09.000 --> 00:35:12.060
When you see two people walking down the
street and they each have one earphone

00:35:12.140 --> 00:35:15.350
from an iPod going to each other,
isn't that cute?

00:35:15.360 --> 00:35:20.250
Yeah, it's so beautiful to see.

00:35:20.270 --> 00:35:25.250
If we had shared the mic,
this might have worked better.

00:35:25.680 --> 00:35:31.990
So now we're going on to not the most
simple way to deploy an application,

00:35:31.990 --> 00:35:35.000
but there certainly are
reasons to look at deploying

00:35:35.000 --> 00:35:37.300
applications in J2EE environments.

00:35:37.300 --> 00:35:42.130
We provide the JBoss
container on Mac OS X server.

00:35:45.140 --> 00:35:48.050
So why do J2EE?

00:35:48.440 --> 00:35:52.400
It is a lot more complicated
in some ways than just talking

00:35:52.820 --> 00:35:57.340
about plain Java applications,
but it is a standards-based

00:35:57.340 --> 00:35:58.600
deployment environment.

00:35:58.600 --> 00:36:02.740
A lot of times an organization won't
want to hear that a technology is

00:36:02.750 --> 00:36:07.400
from Apple or is using this great
technology or that great technology.

00:36:07.520 --> 00:36:11.340
They want to hear standards, buzzwords,
acronyms.

00:36:11.600 --> 00:36:15.850
And so J2EE is a great
acronym for quieting down a

00:36:15.850 --> 00:36:18.370
certain type of management.

00:36:19.840 --> 00:36:24.700
It provides JMX tools for
administering applications.

00:36:24.700 --> 00:36:27.150
If you don't know what JMX is, it's

00:36:27.390 --> 00:36:33.200
Just one of the many acronyms you get to
learn if you work with this technology.

00:36:33.200 --> 00:36:37.210
And as I said, buzzword compliant for
selling to management.

00:36:38.850 --> 00:36:42.000
So we're going to give
you an example of this,

00:36:42.100 --> 00:36:44.640
but getting started,
what you have to think about

00:36:44.640 --> 00:36:48.680
is you have to build the app
slightly differently when you're

00:36:48.680 --> 00:36:50.360
building for a J2EE container.

00:36:50.360 --> 00:36:54.640
When you create the project,
there's an option for enabling the

00:36:54.700 --> 00:36:57.540
J2EE frameworks in the application.

00:36:58.150 --> 00:37:00.400
You have to check those,
and you have to decide what kind

00:37:00.400 --> 00:37:03.080
of application it's going to be,
whether it's going to be a single

00:37:03.420 --> 00:37:06.380
directory deployment or there
are a couple different kinds of

00:37:06.990 --> 00:37:13.100
packaging schemes for the war
that will come out of the project.

00:37:13.570 --> 00:37:16.040
These can be deployed
on any JBoss container.

00:37:16.170 --> 00:37:20.180
For instance, if you pick the single
directory deployment,

00:37:20.390 --> 00:37:23.820
it puts everything that's needed
to run the WebObjects application

00:37:24.020 --> 00:37:30.550
in one directory so that it can be
transported to any machine and run.

00:37:30.550 --> 00:37:34.170
Now, that turns out to be a big jar.

00:37:34.400 --> 00:37:38.460
If you want to take just one thing
and give it to somebody and say,

00:37:38.460 --> 00:37:41.440
put this in your J2EE container,
trust me,

00:37:41.440 --> 00:37:44.210
it'll do great stuff and it'll work,
this is what you do.

00:37:45.710 --> 00:37:50.180
and they can use standards-based
JMX tools to deploy and administer

00:37:50.210 --> 00:37:53.820
the application and they don't
need to worry about anything else.

00:37:53.970 --> 00:37:56.040
So you can also,
if you're on Mac OS X server,

00:37:56.040 --> 00:37:58.980
you can deploy the application
via the deployment tool,

00:37:58.980 --> 00:38:01.820
which is a web-based
application we provide that

00:38:01.820 --> 00:38:05.300
makes it a little bit easier,
certainly easier than editing

00:38:05.300 --> 00:38:07.880
raw XML for deploying in JBoss.

00:38:07.880 --> 00:38:12.320
And you can configure it via the
JBoss management application,

00:38:12.320 --> 00:38:15.840
which, again,
is easier than finding the correct

00:38:15.930 --> 00:38:19.960
XML file inside of the WAR or
the SAR or the TAR or the JAR.

00:38:20.960 --> 00:38:22.580
You know,
you have to find these things and put

00:38:22.580 --> 00:38:24.130
them together in the right order again.

00:38:24.140 --> 00:38:28.070
The JBoss management application does
a lot of that heavy lifting for you.

00:38:37.200 --> 00:38:50.100
[Transcript missing]

00:38:52.220 --> 00:38:58.910
Okay, so I'm going to walk you through a
quick demo on deploying within JBoss.

00:39:04.740 --> 00:39:08.230
Okay, so as Ray said,
when you're building

00:39:08.290 --> 00:39:10.520
your project in Xcode,

00:39:27.440 --> 00:39:30.110
So there's just a few quick
things I want to point out to you

00:39:30.360 --> 00:39:39.060
when you're building a WOAP for
deployment in a J2EE container.

00:39:39.060 --> 00:39:42.220
Some things to be aware of you
need to look for in your project,

00:39:42.570 --> 00:39:45.600
make sure they're set up correctly.

00:39:45.600 --> 00:39:48.260
So I've got my project set up.

00:39:48.260 --> 00:39:51.960
When I built it with
the project assistant,

00:39:51.960 --> 00:39:55.740
I did click the J2EE deployment option.

00:39:55.740 --> 00:40:02.270
So I'm going to select the main
target for this application.

00:40:03.600 --> 00:40:04.590
and I'm going to bring up the inspector.

00:40:04.600 --> 00:40:07.100
I'm going to double click on it.

00:40:07.100 --> 00:40:10.100
And I'm going to select, under settings,
I'm going to select the expert view.

00:40:10.100 --> 00:40:13.570
This is all the keys that are getting,
keys and values that are getting

00:40:13.570 --> 00:40:15.940
used to build this particular target.

00:40:15.940 --> 00:40:19.330
There are four keys that you
need to make sure you have set.

00:40:19.330 --> 00:40:24.400
The first of those is servlet
copy jars should be set to no.

00:40:24.400 --> 00:40:29.600
Servlet single directory
deployment should be set to no.

00:40:29.600 --> 00:40:33.580
Servlet single directory deployment
license should be set to no.

00:40:33.580 --> 00:40:36.710
And this last one is sort of interesting.

00:40:36.710 --> 00:40:40.430
It's servlet underscore
web apps underscore dir.

00:40:41.030 --> 00:40:46.380
Whenever we build this project in Xcode,
not necessarily a deployment build,

00:40:46.380 --> 00:40:51.090
any build, it's going to build this
app into slash library slash

00:40:51.090 --> 00:40:53.960
JBoss slash 3.2 slash deploy.

00:40:54.090 --> 00:40:58.170
So it will essentially be hot
deploying this app every time

00:40:58.170 --> 00:41:00.550
you click the build icon.

00:41:01.850 --> 00:41:07.490
You'll see later when we switch
to the JBoss configuration tools,

00:41:07.490 --> 00:41:11.710
since this app has been built already,
I'll build it again now.

00:41:12.690 --> 00:41:15.860
and Chris Pavicich.

00:41:15.860 --> 00:41:22.070
We have a list of applications available.

00:41:22.070 --> 00:41:22.070
Once the application
is up and configured,

00:41:22.070 --> 00:41:22.070
it will be hot deployed.

00:41:22.070 --> 00:41:22.070
As soon as JBoss is up and configured,
we'll see this app in the list of

00:41:23.230 --> 00:41:26.310
Oh, one more thing I need
to show you in Xcode.

00:41:26.310 --> 00:41:29.140
Go ahead and close that.

00:41:29.140 --> 00:41:34.640
And I'm going to bring up
under the serverlet resources,

00:41:34.640 --> 00:41:39.160
under resources, the JBoss-web.xml file.

00:41:39.160 --> 00:41:44.800
This particular application is
using MySQL as a JNDI service

00:41:44.800 --> 00:41:48.420
that it's resolving through JBoss.

00:41:48.420 --> 00:41:55.140
So this JBoss-web.xml file should
get created for you automatically

00:41:55.160 --> 00:42:00.180
when you click the J2EE deployment
tick box in the project wizard.

00:42:00.180 --> 00:42:07.160
And this JNDI name and this XML here will
be big sort of block letters that says,

00:42:07.160 --> 00:42:09.140
please fill me in.

00:42:09.160 --> 00:42:11.000
Before you deploy.

00:42:11.000 --> 00:42:15.760
If you don't change that value,
unless you name your data source,

00:42:15.760 --> 00:42:20.650
please fill me in in JBoss,
it's not going to work.

00:42:20.660 --> 00:42:24.720
So I just want to point out to you here,
we've called it MySQL DS.

00:42:24.720 --> 00:42:29.550
You'll see that again in the
JBoss tools in just a second.

00:42:35.060 --> 00:42:36.130
So I'm done with Xcode.

00:42:36.240 --> 00:42:41.140
I'm going to go ahead and close that up.

00:42:41.760 --> 00:42:44.260
and Ray mentioned the
JBoss Management tool.

00:42:44.420 --> 00:42:47.840
You need to make sure that's
running on your OS X server box.

00:42:47.840 --> 00:42:49.690
I'm going to switch to the terminal
for a minute because we're going

00:42:49.740 --> 00:42:52.100
to run that from the command line.

00:42:52.240 --> 00:42:58.590
And the JBoss Management app
is in Library,

00:42:58.590 --> 00:43:02.200
JBoss, Applications, JBoss Management.

00:43:04.100 --> 00:43:06.820
and Chris Pavicich.

00:43:06.820 --> 00:43:11.820
I'm going to run that in the background.

00:43:11.820 --> 00:43:13.180
Whoops.

00:43:24.270 --> 00:43:27.200
Then a second to come up and run.

00:43:27.200 --> 00:43:28.600
I'm pleased with it.

00:43:28.660 --> 00:43:30.910
Hide the terminal window.

00:43:32.330 --> 00:43:35.760
Now the next thing we're going to do is
switch back to the server admin tool,

00:43:35.770 --> 00:43:38.890
and I'm going to get
JBoss up and running.

00:43:39.420 --> 00:43:44.770
Again, before, services on the left,
details about services on the right.

00:43:45.150 --> 00:43:47.480
I'm going to pick the application server.

00:43:47.500 --> 00:43:49.640
And we see that JBoss has stopped.

00:43:49.680 --> 00:43:53.480
So click the big green Start button.

00:43:53.790 --> 00:43:55.410
It's going to start up.

00:43:55.410 --> 00:43:58.900
And JBoss isn't really that
great at reporting back to the

00:43:58.910 --> 00:44:01.020
admin tool that's up and running.

00:44:01.030 --> 00:44:03.940
So hit refresh.

00:44:04.060 --> 00:44:05.560
See that it's running.

00:44:05.570 --> 00:44:07.300
Looks good.

00:44:07.530 --> 00:44:10.210
Click on the settings tab at the bottom.

00:44:10.710 --> 00:44:13.020
And we don't really need
to change anything here,

00:44:13.040 --> 00:44:15.930
but I do want to click the
Manage JBoss button here,

00:44:15.930 --> 00:44:23.010
and that's going to bring up the
JBoss administration tool in Safari.

00:44:24.950 --> 00:44:27.660
This is going to give a couple of
warnings and actually these things,

00:44:27.680 --> 00:44:28.330
it's good.

00:44:28.730 --> 00:44:32.400
What it's doing,
this is a NetInfo password.

00:44:32.400 --> 00:44:34.720
Your username and NetInfo
password for your machine.

00:44:34.720 --> 00:44:36.380
So it's accessing it via JNI.

00:44:36.380 --> 00:44:39.420
Safari wants to make sure
you know you're doing that.

00:44:39.420 --> 00:44:42.530
And then later on you'll see there's
a warning about the certificate.

00:44:42.530 --> 00:44:43.870
These are good things.

00:44:43.890 --> 00:44:46.860
You want Safari to tell you
when it's doing something with

00:44:46.880 --> 00:44:48.460
the security of the system.

00:44:48.460 --> 00:44:50.120
So that's what it's doing.

00:44:50.120 --> 00:44:53.230
Let me just point that out again
so you guys can see the dialogue.

00:44:54.900 --> 00:44:55.740
Continue.

00:44:55.740 --> 00:44:57.500
Somna.

00:45:04.130 --> 00:45:07.200
The first thing we need to change on this
page is this isn't a development box,

00:45:07.200 --> 00:45:09.240
this is a deployment box.

00:45:09.300 --> 00:45:13.730
So I'm going to change this configuration
to say deployment standalone.

00:45:13.800 --> 00:45:16.350
We've only got one box in our

00:45:17.000 --> 00:45:20.620
and Chris Pavicich,
the deployment fleet here.

00:45:20.620 --> 00:45:22.740
So deployment standalone.

00:45:22.740 --> 00:45:27.990
And then I want to modify the
configuration of this JBoss installation.

00:45:27.990 --> 00:45:30.600
So Java applet is going to run here.

00:45:30.600 --> 00:45:34.150
Yes,
we do want to accept this certificate.

00:45:36.060 --> 00:45:39.640
And now it's letting me know
that host name mismatched.

00:45:39.640 --> 00:45:47.130
It's using a locally
resolved rendezvous name.

00:45:48.250 --> 00:45:51.240
for this host,
and that the certificate is from Apple,

00:45:51.240 --> 00:45:53.240
but yeah, that's all good.

00:45:53.240 --> 00:45:55.480
Hit yes.

00:45:55.480 --> 00:45:58.570
And the JBoss tools are up and running.

00:46:03.400 --> 00:46:06.240
So let's look at what's
on the local host.

00:46:06.320 --> 00:46:08.600
Click the disclosure triangle there.

00:46:08.600 --> 00:46:09.480
Let's look at the services.

00:46:09.480 --> 00:46:13.180
I mentioned the MySQL service that we
were going to be accessing earlier.

00:46:13.180 --> 00:46:16.070
That should show up
in this services list.

00:46:18.700 --> 00:46:20.700
and Chris Pavicich.

00:46:20.700 --> 00:46:24.350
We're going to go ahead
and start the demo.

00:46:24.350 --> 00:46:27.560
The first thing we're going to
do is MySQL DS and the JNDI name.

00:46:27.680 --> 00:46:28.210
We got it right.

00:46:28.230 --> 00:46:30.310
It matches what we had in our app.

00:46:30.310 --> 00:46:31.360
MySQL DS.

00:46:31.360 --> 00:46:38.240
One thing that's missing here is when you
do the service resolution through JBoss,

00:46:38.240 --> 00:46:43.060
it needs some connection
dictionary information here.

00:46:43.060 --> 00:46:43.590
It needs a username and password.

00:46:43.590 --> 00:46:43.590
So I'm going to fill that in.

00:46:46.400 --> 00:46:51.400
: Actually, Chris,
the username should be MySQL.

00:46:52.040 --> 00:46:52.400
Is it?

00:46:52.400 --> 00:46:52.400
Ray Kiddy: Yeah, yeah, yeah.

00:46:53.600 --> 00:46:55.100
Okay, thank you.

00:46:58.770 --> 00:47:00.700
This is the MySQL user.

00:47:00.860 --> 00:47:03.010
Oh, and it's MySQL, MySQL, Ray?

00:47:03.210 --> 00:47:04.000
No, no.

00:47:04.230 --> 00:47:05.860
The password's right.

00:47:09.990 --> 00:47:12.740
Ray can read the little stars.

00:47:12.740 --> 00:47:13.900
That's one of his talents.

00:47:13.900 --> 00:47:16.840
So, set up.

00:47:16.950 --> 00:47:17.900
I'm going to go back to JBoss.

00:47:17.900 --> 00:47:21.900
I'm going to hit Change Configuration
to save those changes.

00:47:21.900 --> 00:47:27.170
And hopefully the MySQL service
will set up and run correctly.

00:47:27.910 --> 00:47:31.800
Now I want to manage
this local instance here.

00:47:31.800 --> 00:47:33.930
So I'm going to click the
Manage Local Host button.

00:47:33.930 --> 00:47:36.990
And I'm going to show you that
the app we set up earlier for hot

00:47:37.080 --> 00:47:42.780
deployment is in fact installed
and running and talking to MySQL.

00:47:42.780 --> 00:47:46.340
So this has changed slightly now.

00:47:46.340 --> 00:47:51.100
We see under JBoss,
this is going to be a list of host names,

00:47:51.160 --> 00:47:53.940
or in this case, IP addresses.

00:47:53.940 --> 00:47:55.130
So I'm going to disclose that.

00:47:55.130 --> 00:47:57.000
That's this local box.

00:47:57.000 --> 00:47:57.780
And I'm going to disclose that.

00:47:57.800 --> 00:48:01.690
And I'm going to show you that we
have our new movies.war application.

00:48:01.690 --> 00:48:05.020
And this is where we have our
new movies.war applications.

00:48:05.020 --> 00:48:06.810
And there's our new movies.war.

00:48:07.010 --> 00:48:10.360
That's our application that
I built earlier and hot deployed.

00:48:10.360 --> 00:48:11.200
So it's there.

00:48:11.250 --> 00:48:12.720
JBoss knows about it.

00:48:12.720 --> 00:48:12.720
Just a quick reminder.

00:48:13.410 --> 00:48:14.400
I'll show you one thing.

00:48:14.400 --> 00:48:17.550
If you click on applications and
you've built a WAR file already,

00:48:17.550 --> 00:48:22.030
but you didn't set it up to hot deploy
and you want to add it to JBoss,

00:48:22.030 --> 00:48:24.400
you can do it from the
JBoss console here.

00:48:24.400 --> 00:48:25.750
Just click choose file.

00:48:25.940 --> 00:48:28.400
You'll get a standard
file chooser dialog.

00:48:28.610 --> 00:48:30.230
Select your WAR and it'll get added.

00:48:30.230 --> 00:48:34.390
Now I want to show you that.

00:48:35.600 --> 00:48:40.240
Our Movies app is in fact up and running.

00:48:40.240 --> 00:48:41.870
Oh, it's not.

00:49:05.200 --> 00:49:34.500
[Transcript missing]

00:49:49.520 --> 00:49:53.080
and Chris Pavicich.

00:49:53.080 --> 00:49:55.190
Thank you.

00:50:11.530 --> 00:50:14.750
I think we're just going to have
to say that we didn't sacrifice

00:50:14.750 --> 00:50:18.920
a fatted calf to the demo gods.

00:50:19.860 --> 00:50:22.330
I can actually say though,
because management is

00:50:22.360 --> 00:50:23.680
letting us say this,
you know,

00:50:23.740 --> 00:50:27.480
they did call out specifically that
the deployment is something we're

00:50:27.480 --> 00:50:29.540
going to be looking at in the future.

00:50:29.540 --> 00:50:33.220
And so we are going to
be improving these tools.

00:50:33.220 --> 00:50:36.660
We're very interested in what you
all want to see in these tools.

00:50:36.660 --> 00:50:39.400
And so any suggestions?

00:50:39.400 --> 00:50:43.900
Don't file a bug that says make it work.

00:50:44.020 --> 00:50:49.690
We know that it was working and
we had it working several times.

00:50:49.800 --> 00:50:52.930
So thank you.

00:50:52.940 --> 00:50:53.800
Thank you, Ray.

00:50:53.800 --> 00:50:55.570
All right.

00:51:04.800 --> 00:51:10.900
[Transcript missing]

00:51:15.620 --> 00:51:18.630
All right, so beauty is not love.

00:51:18.890 --> 00:51:20.690
We are going to talk
about what can go wrong.

00:51:20.880 --> 00:51:23.640
Things can go wrong.

00:51:23.640 --> 00:51:26.670
Amazingly enough, I know it's a shock.

00:51:27.270 --> 00:51:30.960
As smart as we are,
things do occasionally go wrong.

00:51:31.000 --> 00:51:34.740
But I wanted to just list some of the
things that you can do about them.

00:51:34.820 --> 00:51:38.520
Actually, this list of database problems,
host connectivity problems,

00:51:38.620 --> 00:51:43.360
and browser compatibility issues,
those actually aren't something we're

00:51:43.440 --> 00:51:48.310
going to talk about because those are
things you have to set up on your own.

00:51:48.310 --> 00:51:49.310
You set up your databases.

00:51:49.340 --> 00:51:52.640
The browser,
we're talking standards-based

00:51:52.640 --> 00:51:54.580
HTML 4.01 now.

00:51:54.580 --> 00:51:57.180
So there shouldn't be
any problems with that.

00:51:57.200 --> 00:51:58.430
There shouldn't be any problems
with different browsers.

00:51:58.660 --> 00:52:00.760
What I am going to talk about
is woe adapter problems and

00:52:00.760 --> 00:52:02.170
application response issues.

00:52:05.280 --> 00:52:09.100
So I just wanted to point out the things
to look at when you're looking at your

00:52:09.100 --> 00:52:10.400
WoW adapter and how it's behaving.

00:52:10.400 --> 00:52:14.430
You want to look at, you know,
is your WoW adapter distributing first

00:52:14.430 --> 00:52:15.880
requests according to your policy?

00:52:15.880 --> 00:52:19.040
And actually, you know,
I'm always arguing that you should

00:52:19.220 --> 00:52:22.550
use the appropriate technology
for the appropriate task.

00:52:22.600 --> 00:52:25.770
You can take a very high-tech
approach to this problem,

00:52:25.770 --> 00:52:29.900
but actually you can also just hit the
adapter with curl or something like

00:52:29.900 --> 00:52:32.100
that and look at what it tells you.

00:52:32.270 --> 00:52:35.840
Down at the bottom is even just
a regular expression in Perl for

00:52:35.840 --> 00:52:38.200
pulling out the application number.

00:52:38.200 --> 00:52:43.200
So, you know, access your application
through the WoW adapter.

00:52:43.320 --> 00:52:47.190
Make sure that you can hit the app once,
hit it again, hit it again,

00:52:47.290 --> 00:52:50.700
and that you see a proper
distribution of applications.

00:52:50.700 --> 00:52:54.130
You know, if you've made three
applications available,

00:52:54.130 --> 00:52:57.890
make sure that they are deploying
to all three applications.

00:52:57.900 --> 00:53:02.180
So you can set the policy in
the WoW adapter page to do that.

00:53:02.180 --> 00:53:09.960
You can also set the policy in
the WoW adapter page to do that.

00:53:11.930 --> 00:53:16.480
So, and then for timing, you know,
just access it via something low

00:53:16.480 --> 00:53:19.630
level and you can get information
about how it's responding.

00:53:19.640 --> 00:53:25.060
You know, make sure that you isolate the
different parts of your system.

00:53:25.060 --> 00:53:28.380
You know,
if people are complaining about an app,

00:53:28.380 --> 00:53:30.900
you know,
try connecting to it directly and see

00:53:30.900 --> 00:53:32.960
what the application response time is.

00:53:32.960 --> 00:53:35.170
You know,
come out one layer to the WoW adapter

00:53:35.170 --> 00:53:37.120
and try accessing it through there.

00:53:37.120 --> 00:53:40.230
You know, oftentimes,
especially if an application is

00:53:40.230 --> 00:53:44.140
being accessed through proxy servers,
the problem can be very far

00:53:44.140 --> 00:53:46.200
away from your application.

00:53:46.200 --> 00:53:48.560
So, you know,
make sure that before you start changing

00:53:48.560 --> 00:53:51.960
your deployment that you're gathering
data about what might be happening.

00:53:57.650 --> 00:54:02.780
So if you're having issues
with Woe Tasty or Woe Monitor,

00:54:05.180 --> 00:54:08.400
So check the server admin application.

00:54:08.690 --> 00:54:12.150
There is log data that
is in that interface.

00:54:12.160 --> 00:54:13.860
It shows you what it's complaining about.

00:54:13.860 --> 00:54:16.400
If there are errors in that log,
it can tell you what it's doing.

00:54:16.400 --> 00:54:20.750
I just wanted to share with
you sort of a low-level detail,

00:54:20.750 --> 00:54:24.380
which is that in Tiger,
there is a system service

00:54:24.380 --> 00:54:28.760
available called LaunchD,
and we are using that for starting

00:54:28.760 --> 00:54:30.850
and stopping these services.

00:54:30.860 --> 00:54:35.730
It's a very reliable mechanism for
having an application be configured

00:54:35.770 --> 00:54:37.770
to be running all the time.

00:54:37.820 --> 00:54:40.430
If the application shuts down,
it will be restarted.

00:54:40.460 --> 00:54:43.820
If the machine is rebooted,
the application will be restarted.

00:54:43.930 --> 00:54:51.810
It's used for many services throughout
Mac OS X and Mac OS X Server.

00:54:51.810 --> 00:54:51.810
It's very reliable.

00:54:51.940 --> 00:54:57.390
So how you configure
it is in these files.

00:54:57.440 --> 00:55:00.020
If you look in system
library launch daemons,

00:55:00.020 --> 00:55:03.920
you'll see a plist files,
and each of those is a different service.

00:55:03.920 --> 00:55:08.440
And the plist configures the application,
gives the parameters,

00:55:08.440 --> 00:55:11.110
gives some information,
what user it runs at,

00:55:11.110 --> 00:55:14.900
what group it runs at,
and how it responds to different things.

00:55:14.900 --> 00:55:17.780
And then if you're going to
look at it in this level,

00:55:17.950 --> 00:55:20.320
what happens is you
can use launch control,

00:55:20.360 --> 00:55:22.590
which is a command line application.

00:55:22.590 --> 00:55:24.350
There's man pages for it.

00:55:24.400 --> 00:55:27.300
If you use launch control
to launch the application,

00:55:27.300 --> 00:55:30.390
you can either tell it to start
the app or to stop the app.

00:55:30.470 --> 00:55:34.460
And if you start the app,
it will be kept running through reboots,

00:55:34.670 --> 00:55:38.390
through shutdowns, whatever happens,
it'll be restarted.

00:55:38.420 --> 00:55:43.540
So this is a very powerful system tool
that we've taken advantage of with Tiger.

00:55:44.700 --> 00:55:44.760
One of the big things that we've done
is we've taken advantage of the Tiger.

00:55:44.760 --> 00:55:44.840
One of the big things that we've done
is we've taken advantage of the Tiger.

00:55:44.920 --> 00:55:50.690
One of the benefits of our platform
choice now is that we can do the more

00:55:51.290 --> 00:55:56.420
elegant things that are available to
us on Mac OS X and Mac OS X server.

00:55:56.420 --> 00:56:01.750
Oftentimes we've wanted to do things,
and frankly, the cross-platform story

00:56:01.770 --> 00:56:06.120
complicates the issue with
other departments within Apple.

00:56:06.120 --> 00:56:10.770
So we've very much
simplified the equations now.

00:56:10.800 --> 00:56:16.260
And we're going to provide... ...a
very... ...very elegant solutions

00:56:16.300 --> 00:56:18.130
for managing deployments on Mac OS X.

00:56:18.140 --> 00:56:22.030
And any input you can give about
what you want those to look like,

00:56:22.110 --> 00:56:27.460
please go to bugreport.apple.com and
let us know what things you want to see.

00:56:27.460 --> 00:56:32.450
And we'll definitely take these
suggestions under advisement.

00:56:36.340 --> 00:56:38.100
As I said, launch control.

00:56:38.160 --> 00:56:42.570
This lets you launch
or stop an application.

00:56:45.670 --> 00:56:47.060
And then other tools.

00:56:47.060 --> 00:56:50.120
An often neglected tool
is the WoW Event Center.

00:56:50.120 --> 00:56:51.910
You can see the Java doc for it.

00:56:51.910 --> 00:56:55.880
You can declare an atomic
WoW event or an interval WoW event.

00:56:55.880 --> 00:56:58.720
And then you can put
them in your application,

00:56:58.760 --> 00:56:59.880
give them a name.

00:56:59.880 --> 00:57:03.650
And if you want to see what various
parts of your code are doing,

00:57:03.790 --> 00:57:05.550
you declare the WoW events.

00:57:05.550 --> 00:57:08.890
And then you can access a page
that will show you how many

00:57:08.890 --> 00:57:12.610
times a WoW event was hit,
how many times a WoW event was hit,

00:57:12.740 --> 00:57:15.470
and how many times a WoW event was hit.

00:57:15.600 --> 00:57:17.950
What was the duration
of the interval events,

00:57:18.070 --> 00:57:20.970
so that you can see, you know,
in your application logic,

00:57:20.970 --> 00:57:24.220
especially the component logic,
you can see a lot more about what

00:57:24.290 --> 00:57:26.240
is going on in your application.

00:57:27.700 --> 00:58:50.500
[Transcript missing]

00:58:52.710 --> 00:58:54.820
Love is not music.

00:58:54.820 --> 00:58:58.320
So this is about scalability
and I just wanted to point out

00:58:58.910 --> 00:59:00.410
WebObjects is very scalable.

00:59:00.640 --> 00:59:03.390
Scalability is at the
heart of the architecture.

00:59:03.400 --> 00:59:04.220
It's very flexible.

00:59:04.280 --> 00:59:07.220
We do scale up to world
class deployments.

00:59:07.240 --> 00:59:09.960
As I said,
the music store is a massive application.

00:59:09.960 --> 00:59:14.300
And I just wanted to point out, you know,
make sure you find your

00:59:14.300 --> 00:59:17.800
bottlenecks by looking,
by getting information,

00:59:17.900 --> 00:59:19.870
and not just by guessing.

00:59:19.930 --> 00:59:22.800
Make sure that if you see
problems with your deployments,

00:59:22.800 --> 00:59:25.730
make sure that you're attacking
the right part of the problem.

00:59:25.740 --> 00:59:28.640
So, you know,
we make a lot of information available

00:59:28.640 --> 00:59:30.640
to you through the various tools.

00:59:30.640 --> 00:59:35.480
So, you know, try to get specific
information about where your

00:59:35.480 --> 00:59:38.120
application may not be scaling.

00:59:38.120 --> 00:59:44.710
And you use a data driven and
information and knowledge driven

00:59:44.840 --> 00:59:46.200
approach to solve the problem.

00:59:46.290 --> 00:59:49.560
If you don't see the information
that you need to solve the problem,

00:59:49.560 --> 00:59:50.370
let us know.

00:59:50.370 --> 00:59:53.150
You know, we can make some of this
information more obvious,

00:59:53.150 --> 00:59:54.990
more available.

00:59:56.820 --> 00:59:59.780
So one thing that can be done
is that all of these things can

00:59:59.780 --> 01:00:02.160
be unbundled from each other.

01:00:02.260 --> 01:00:05.120
You can have multiple databases.

01:00:05.120 --> 01:00:07.510
You can have WebObjects
instances running on many,

01:00:07.510 --> 01:00:08.880
many different machines.

01:00:08.880 --> 01:00:13.980
They can be talking to each other
in all sorts of complicated ways.

01:00:13.980 --> 01:00:17.800
You can have the example host5.

01:00:17.800 --> 01:00:19.390
That's the static server page.

01:00:19.390 --> 01:00:21.290
It's only talking static resources.

01:00:23.090 --> 01:00:25.350
So one thing that can be done
is that all of these things can

01:00:25.350 --> 01:00:26.610
be unbundled from each other.

01:00:26.610 --> 01:00:28.040
You can have multiple databases.

01:00:28.040 --> 01:00:29.470
You can have multiple databases.

01:00:29.470 --> 01:00:31.040
You can have multiple applications.

01:00:31.040 --> 01:00:31.350
You can have multiple
subnet applications.

01:00:31.570 --> 01:00:34.990
It's transparent to the application
how this is being done on

01:00:34.990 --> 01:00:36.670
the inside of your subnet.

01:00:36.680 --> 01:00:40.440
So don't be afraid to
take these things apart,

01:00:40.440 --> 01:00:43.260
put them on different machines,
have them communicate with each other,

01:00:43.260 --> 01:00:46.410
and spread them out so that
you can see what's happening.

01:00:46.420 --> 01:00:50.970
If your database server is maxing out,
try to fix that problem and

01:00:50.970 --> 01:00:53.180
then see what's happening.

01:00:53.180 --> 01:00:56.080
If the application server
is using too much memory,

01:00:56.080 --> 01:00:59.200
if everything is on the same machine,
some of these cloud problems

01:00:59.210 --> 01:01:00.170
will cloud each other.

01:01:00.860 --> 01:01:03.120
So if your application
is using too much memory,

01:01:03.120 --> 01:01:05.710
attack that problem and you'll
see things will speed up.

01:01:05.970 --> 01:01:06.980
Things will be much more scalable.

01:01:10.070 --> 01:01:14.390
So I just wanted to give a little
quick checklist of scalability.

01:01:14.390 --> 01:01:16.700
Is your database as fast as it can be?

01:01:16.710 --> 01:01:19.620
Test via native command
line tools and test directly

01:01:19.620 --> 01:01:21.120
through JDBC driver if you can.

01:01:21.120 --> 01:01:24.700
Is your application's
EOF stack properly tuned?

01:01:24.700 --> 01:01:26.160
Again, are you maxing out on memory?

01:01:26.160 --> 01:01:29.580
Are objects being garbage
collected quickly enough?

01:01:31.730 --> 01:01:35.400
We've tuned EOF quite a bit
to not hold heavy locks,

01:01:35.440 --> 01:01:37.960
heavy references on objects.

01:01:38.030 --> 01:01:42.740
So EOs are much more responsive to being
garbage collected when it's appropriate.

01:01:42.740 --> 01:01:47.000
But you need to make sure your
sessions aren't lasting too long

01:01:47.000 --> 01:01:52.110
and that those objects are getting
garbage collected when they can be.

01:01:52.470 --> 01:01:55.410
Are your custom WoE components
tuned for performance?

01:01:55.520 --> 01:01:58.330
Use WoE events to get
information about this?

01:01:58.400 --> 01:02:00.010
And is each tuned to its task?

01:02:00.090 --> 01:02:03.940
As one sees reusable components,
they're very flexible,

01:02:03.940 --> 01:02:11.420
but one can use a single
WoE component to do too many things.

01:02:11.420 --> 01:02:15.600
And I've seen this happen quite often
where somebody sees the power and the

01:02:15.600 --> 01:02:21.090
flexibility in the WoE component layer,
and then they get a bit

01:02:21.090 --> 01:02:22.860
too enthusiastic about

01:02:23.500 --> 01:02:35.700
[Transcript missing]

01:02:37.910 --> 01:02:41.560
Static resources can be
loaded from a fast web server.

01:02:41.570 --> 01:02:44.490
Are the resources as
small as they can be?

01:02:45.030 --> 01:02:47.340
Some of this seems a little obvious,
but you know,

01:02:47.340 --> 01:02:52.270
it is often the obvious things that
trip us up because we're down the

01:02:52.280 --> 01:02:54.600
path of developing an application.

01:02:54.600 --> 01:02:57.990
We're thinking about our models,
we're thinking about our pages,

01:02:57.990 --> 01:03:00.220
and we're thinking about the
abstract parts of our application.

01:03:00.220 --> 01:03:04.740
And then we get sort of tripped
up by the ground under our feet.

01:03:04.750 --> 01:03:07.450
So these are just details,
but they are important and they

01:03:07.550 --> 01:03:10.540
are things that people stumble
on when they're deploying.

01:03:30.840 --> 01:03:30.880
Some of this seems a little obvious,
but you know,

01:03:30.880 --> 01:03:30.880
it is often the obvious things that
trip us up because we're down the

01:03:30.880 --> 01:03:30.880
path of developing an application.

01:03:30.880 --> 01:03:30.880
We're thinking about our models,
we're thinking about the abstract

01:03:30.880 --> 01:03:30.950
parts of our application.

01:03:30.950 --> 01:03:30.950
And then we get sort of tripped
up by the ground under our feet.

01:03:30.950 --> 01:03:30.950
So these are just details,
but they are things that people

01:03:30.950 --> 01:03:30.950
stumble on when they're deploying.

01:03:31.720 --> 01:03:38.900
Don't just test your application
with the load you think will happen.

01:03:38.900 --> 01:03:46.330
Try to test your application with the
load that is so high it will break your

01:03:46.330 --> 01:03:48.380
application and see how that happens.

01:03:48.380 --> 01:03:52.280
Make sure that happens at a
point that you understand.

01:03:52.420 --> 01:03:57.130
Make sure that it scales as much as
it can before it starts to degrade.

01:03:57.140 --> 01:04:01.040
Don't wait for your application
to be slash dotted before you find

01:04:01.040 --> 01:04:05.790
out whether it can actually scale
to handle a lot of responses,

01:04:05.810 --> 01:04:07.370
a lot of requests.

01:04:09.570 --> 01:04:10.560
And here we are at the end.

01:04:10.600 --> 01:04:11.460
Music is the best.

01:04:11.540 --> 01:04:17.110
So we just,
we like to talk about the music store.

01:04:17.400 --> 01:04:22.170
It's a beautiful application and
of course WebObjects behind it.

01:04:22.220 --> 01:04:26.010
And well,
there are smart people working there too.

01:04:26.020 --> 01:04:30.990
So we can't take all the credit,
but we can take a little bit.

01:04:32.720 --> 01:04:37.870
So for more information,
go to the web pages and documentation.

01:04:38.070 --> 01:04:42.530
You saw before the documentation
is going to be updated.

01:04:42.530 --> 01:04:44.740
And we're very interested
in hearing from you.

01:04:44.740 --> 01:04:52.200
I think that one of the effects of
the platform choice we made is that

01:04:52.220 --> 01:04:58.490
we are going to be able to be more
responsive to doing things on Mac OS X.

01:04:58.500 --> 01:05:05.200
We can be more agile now than we
could when we were trying to do many,

01:05:05.240 --> 01:05:09.230
many things on other platforms as well.

01:05:09.480 --> 01:05:15.890
So there's definitely an upside to this
choice that the management has made.

01:05:17.630 --> 01:05:20.540
Related sessions are the
Development Lab is tomorrow.

01:05:20.540 --> 01:05:22.260
If you have any questions,
if you want us to look

01:05:22.260 --> 01:05:23.080
at your application.

01:05:25.200 --> 01:05:30.190
If you want to let us know what your
ideas are and see how they can be done,

01:05:30.200 --> 01:05:30.790
come to the lab.

01:05:30.800 --> 01:05:34.430
We're going to be there
from 9:00 to 12:00.

01:05:34.470 --> 01:05:36.720
Actually,
if you want to see us deploy in a

01:05:36.720 --> 01:05:41.580
JBoss application and make it work,
9:00 to 12:00, we'll be there.

01:05:44.610 --> 01:05:47.800
So the WebObjects performance
optimization session is

01:05:47.800 --> 01:05:49.700
at 2 o'clock on Friday.

01:05:49.700 --> 01:05:52.490
Those are, we have some people who
work at the music store,

01:05:52.490 --> 01:05:55.200
are going to be talking about the
kinds of things they've done to scale

01:05:55.200 --> 01:05:56.480
up to that size of a deployment.

01:05:56.480 --> 01:05:58.320
And then the feedback forum.

01:06:00.480 --> 01:06:05.230
If for Mac OS X server is on Wednesday.

01:06:05.310 --> 01:06:08.400
And of course, you know,
you want to deploy on Mac OS X server,

01:06:08.400 --> 01:06:10.530
so, you know,
you should get to know those folks.

01:06:10.560 --> 01:06:15.650
I wanted to point out the Customizing
Mac OS X Using Open Source session

01:06:16.110 --> 01:06:20.960
is on Wednesday and the Java and
WebObjects Feedback session on Friday.

01:06:20.960 --> 01:06:22.150
Thank you.