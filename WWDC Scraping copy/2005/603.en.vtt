WEBVTT

00:00:04.490 --> 00:00:06.040
Good morning, everyone.

00:00:06.040 --> 00:00:11.630
Welcome here bright and early for
the Mac OS X Server Overview session.

00:00:11.890 --> 00:00:16.460
Today we're going to go into depth on
some of the new features of Tiger Server,

00:00:16.460 --> 00:00:19.530
and we're going to spend time
on how they work and give you

00:00:19.530 --> 00:00:20.730
more information about them.

00:00:20.730 --> 00:00:23.660
But before we do that,
I'd like to spend a little bit

00:00:23.740 --> 00:00:26.360
of time talking about the key
goals we've had in developing

00:00:26.360 --> 00:00:28.040
Mac OS X Server and Tiger Server.

00:00:28.740 --> 00:00:31.920
Our first goal has been to make
sure that this is the easiest

00:00:31.920 --> 00:00:35.390
server to set up and deploy,
and we've spent a lot of effort

00:00:35.390 --> 00:00:37.220
on the tools to enable that.

00:00:37.270 --> 00:00:39.930
But we want to make sure
that it's also not just easy,

00:00:40.010 --> 00:00:42.530
but that it works well
in mixed environments.

00:00:42.540 --> 00:00:45.150
I'm sure that all of you
have mixed environments,

00:00:45.150 --> 00:00:49.080
and although Mac OS X Server integrates
well with the desktop with features

00:00:49.080 --> 00:00:52.880
like client management and NetBoot
and now portable home directories,

00:00:52.880 --> 00:00:56.050
we've also made sure that it
integrates seamlessly with your

00:00:56.050 --> 00:00:58.110
existing clients and networks.

00:00:58.780 --> 00:01:02.970
And finally, we've wanted to make it the
easiest path to deploying open

00:01:02.970 --> 00:01:06.640
source to provide a scalable,
proven solution that works for

00:01:06.640 --> 00:01:09.030
business-critical applications.

00:01:09.790 --> 00:01:12.810
We started developing
Mac OS X Server about four years ago,

00:01:12.810 --> 00:01:14.730
the first release in 2001.

00:01:14.830 --> 00:01:17.400
And since then,
we've been building a portfolio of server

00:01:17.400 --> 00:01:22.550
and storage products with the XServe,
the XServe RAID, the G5 XServe.

00:01:22.670 --> 00:01:26.680
And now, last year,
we did a major new release

00:01:26.680 --> 00:01:30.830
of Apple Remote Desktop,
our desktop management console.

00:01:30.920 --> 00:01:33.200
And this year,
at the beginning of the year,

00:01:33.210 --> 00:01:36.320
we introduced XAN,
our storage area network product.

00:01:36.420 --> 00:01:40.880
And this spring, of course, Tiger Server,
our fifth release of the server

00:01:40.960 --> 00:01:43.170
operating system in four years.

00:01:43.550 --> 00:01:48.250
We've had one underlying strategy for
all these releases of Mac OS X Server,

00:01:48.250 --> 00:01:50.660
and that's to take an
industry standard base,

00:01:50.660 --> 00:01:53.840
to layer open source on top of it,
and then to integrate it

00:01:53.840 --> 00:01:55.400
with Apple innovation.

00:01:56.360 --> 00:01:58.480
Mac OS X Server is industry standard.

00:01:58.600 --> 00:02:01.590
It's based on a Unix-based platform.

00:02:01.690 --> 00:02:05.640
The Darwin kernel that underlies
Mac OS X Server is based on FreeBSD,

00:02:05.640 --> 00:02:08.880
and it gives you the performance
and stability you'd expect

00:02:08.880 --> 00:02:10.950
from a Unix-based server.

00:02:11.350 --> 00:02:14.140
On top of that, we've taken the best
open source packages.

00:02:14.280 --> 00:02:17.210
Instead of developing proprietary
services to provide the service

00:02:17.280 --> 00:02:21.540
layer of Mac OS X Server,
we've taken Apache, and Samba, Kerberos,

00:02:21.590 --> 00:02:24.920
OpenLDAP, Postfix, SpamAssassin,
and many more.

00:02:25.080 --> 00:02:27.810
And we've integrated them all together.

00:02:28.430 --> 00:02:31.840
And that integration has made
all these services work together.

00:02:31.840 --> 00:02:33.660
For instance,
we've made sure that all these services

00:02:33.660 --> 00:02:36.600
work together with LDAP and Kerberos,
so that you don't have to do

00:02:36.600 --> 00:02:38.300
the integration on the platform.

00:02:38.460 --> 00:02:40.980
And then we've layered
on top of that a unified,

00:02:41.030 --> 00:02:45.250
integrated management console to
make the setup and deployment easy.

00:02:46.770 --> 00:02:50.380
This integrated,
open-source strategy has worked well,

00:02:50.380 --> 00:02:53.610
and we've seen the results of this
in rapid customer adoption of the

00:02:53.680 --> 00:02:55.140
server product in the last few years.

00:02:55.200 --> 00:02:58.190
And we're continuing this
momentum with Tiger Server,

00:02:58.190 --> 00:03:00.200
with over 200 new features.

00:03:00.200 --> 00:03:02.810
And some of the features that
we're going to go in-depth to

00:03:02.810 --> 00:03:06.190
today are major new features,
such as access control lists,

00:03:06.320 --> 00:03:10.200
the iChat server, X Grid,
portable home directories, and more.

00:03:10.200 --> 00:03:13.260
So to tell you more about some of
the new features in Tiger Server,

00:03:13.270 --> 00:03:17.060
I'd like to bring up Kazu Yanagihara,
and he's the engineering

00:03:17.100 --> 00:03:19.200
manager for Core Server.

00:03:24.480 --> 00:03:25.510
Good morning.

00:03:25.710 --> 00:03:27.310
So let's first spend a
couple minutes looking at the

00:03:27.420 --> 00:03:29.910
foundation of Mac OS X Server,
mostly for those of you

00:03:29.980 --> 00:03:31.400
who are new to the product.

00:03:31.590 --> 00:03:34.330
First, Unix Foundation.

00:03:34.370 --> 00:03:38.400
Our server, as Greg mentioned,
is built on top of very solid,

00:03:38.400 --> 00:03:41.400
proven technologies:
Mac kernel and FreeBSD.

00:03:41.400 --> 00:03:45.400
It delivers all the key features that
one would expect from a modern OS,

00:03:45.400 --> 00:03:50.300
such as SMP, protected memory,
real-time scheduling, and so on.

00:03:50.400 --> 00:03:53.670
And in Tiger Server,
we've significantly improved

00:03:53.680 --> 00:03:57.400
the scheduling performance
of SMP and multi-threading,

00:03:57.510 --> 00:04:01.130
so you should see it's pretty
good news for all of us.

00:04:01.380 --> 00:04:04.820
But probably the biggest news at
the Core OS layer in this release is

00:04:04.820 --> 00:04:07.930
the introduction of 64-bit support,
especially for

00:04:07.930 --> 00:04:09.680
high-performance computing.

00:04:11.030 --> 00:04:16.240
We no longer have the limitations of 4GB
that's imposed upon us by 64-bit apps.

00:04:16.420 --> 00:04:19.200
And with our 64-bit file system,
you can now have huge

00:04:19.200 --> 00:04:22.350
volumes beyond 16TB limit.

00:04:22.610 --> 00:04:24.720
And of course,
all the key libraries such as

00:04:24.720 --> 00:04:29.600
Mathlib and Vectorlib have been
upgraded and optimized for 64-bit.

00:04:29.980 --> 00:04:33.080
Development tools-wise,
every single copy of Tiger and

00:04:33.090 --> 00:04:36.910
Tiger Server ships with Xcode 2,
which now fully supports

00:04:36.940 --> 00:04:39.840
64-bit application development.

00:04:39.930 --> 00:04:43.940
And lastly,
unlike on some other 64-bit OS platforms,

00:04:44.020 --> 00:04:49.580
on Tiger, you can run native 32-bit
applications side-by-side with 64-bit.

00:04:49.810 --> 00:04:53.700
So there is no emulation mode
or associated performance loss.

00:04:55.510 --> 00:04:58.530
Next, our directory services system.

00:04:58.650 --> 00:05:02.550
Our directory, open directory,
is based on industry standard LDAP,

00:05:02.550 --> 00:05:06.580
and it also provides single sign-on
capabilities using Kerberos,

00:05:06.580 --> 00:05:10.390
as well as support for different
authentication methods out there,

00:05:10.580 --> 00:05:13.830
such as APOP and DHX.

00:05:14.260 --> 00:05:17.650
It also has a plugin architecture
so you can extend it and integrate

00:05:17.730 --> 00:05:22.710
with different directory systems
such as Active Directory and NIS.

00:05:23.010 --> 00:05:27.170
It provides high availability
features such as server replication

00:05:27.170 --> 00:05:30.900
and client-side failover in
case your server goes down.

00:05:31.000 --> 00:05:33.640
And lastly, in Tiger Server,
we've implemented an

00:05:33.690 --> 00:05:36.120
authenticated binding,
so you have a little

00:05:36.120 --> 00:05:37.680
bit more security now.

00:05:39.380 --> 00:05:42.530
So now let's start talking about some
of the higher level features that

00:05:42.530 --> 00:05:45.060
we've implemented in Tiger Server.

00:05:45.060 --> 00:05:48.540
And we're going to start with
File Access Control List,

00:05:48.560 --> 00:05:53.310
which is also known as
File ACLs or File ACLs.

00:05:53.570 --> 00:05:57.890
ACLs enable complex workflow in
places like publishing workgroups,

00:05:57.890 --> 00:06:00.590
where you have different people
needing to have different

00:06:00.600 --> 00:06:02.430
fine-grained permissions.

00:06:02.490 --> 00:06:06.620
It also enables Tiger Server and
client to work much better

00:06:06.620 --> 00:06:09.690
with Windows client and server.

00:06:10.240 --> 00:06:12.890
With ACL,
we are now 100% compatible with the

00:06:12.890 --> 00:06:17.900
NT-ACL model that's being used by
both Windows XP client and server.

00:06:18.740 --> 00:06:21.500
So let's look at how it works.

00:06:21.780 --> 00:06:24.940
Here's the old permissions
model that we had in Pencil

00:06:25.050 --> 00:06:29.280
Server and previously released,
known as POSIX permissions.

00:06:29.600 --> 00:06:31.430
As you can see,
you can define permissions

00:06:31.500 --> 00:06:35.500
for just one user,
one group, and everybody else.

00:06:35.670 --> 00:06:38.560
And the kinds of permissions that
you can set are fairly simple:

00:06:38.560 --> 00:06:42.610
read-only, read-write, write-only,
or none.

00:06:43.430 --> 00:06:47.340
With ACL, you can assign as many users
and groups as you want to any

00:06:47.340 --> 00:06:49.300
particular file or folder.

00:06:49.480 --> 00:06:51.740
And then for each of
those users and groups,

00:06:51.740 --> 00:06:55.820
you can specify one of the
pre-existing or predefined permissions,

00:06:55.930 --> 00:06:58.560
or you can go ahead and choose
the custom at the bottom,

00:06:58.560 --> 00:07:01.660
and you can set very granular
permissions if you want to.

00:07:01.810 --> 00:07:04.980
For example, you can say this particular
user can write to a file,

00:07:05.100 --> 00:07:07.810
but cannot delete that particular file.

00:07:09.950 --> 00:07:13.090
ASIO also supports allow and deny mode.

00:07:13.160 --> 00:07:15.340
And in most cases,
people want to use allow mode,

00:07:15.480 --> 00:07:18.600
but the deny mode gives you a little
bit more flexibility in defining

00:07:18.670 --> 00:07:20.900
exactly the permissions you want.

00:07:20.960 --> 00:07:23.090
For example,
you can set something like this,

00:07:23.240 --> 00:07:29.370
where everybody in Apple's software
organization have read-write

00:07:29.370 --> 00:07:33.380
access to one particular file,
but Kazu can only read,

00:07:33.380 --> 00:07:33.380
and you can accomplish that
using something like this.

00:07:35.360 --> 00:07:38.310
And lastly, for each of the folders
that you set permissions on,

00:07:38.450 --> 00:07:40.700
you can also define inheritance.

00:07:40.700 --> 00:07:43.820
So you can say how you want the
permissions that you've specified

00:07:43.820 --> 00:07:47.060
to be inherited by files and
folders inside that folder.

00:07:50.490 --> 00:07:52.890
So with ACL,
you have much more flexibility

00:07:52.960 --> 00:07:57.790
in defining and enforcing access
permissions on your shared files.

00:07:57.860 --> 00:07:59.560
But here's how we implemented it.

00:07:59.600 --> 00:08:03.150
We didn't really get rid of all
the Unix or the POSIX permissions,

00:08:03.280 --> 00:08:04.400
so it's still there.

00:08:04.400 --> 00:08:06.570
So if you want to,
you don't really require ACLs,

00:08:06.670 --> 00:08:08.870
you can continue to
use POSIX permissions.

00:08:08.970 --> 00:08:14.520
But when you do need those
flexibility and power of ACL,

00:08:14.520 --> 00:08:14.520
you can go ahead and use it.

00:08:14.870 --> 00:08:16.890
So implementation is really
a best of both worlds.

00:08:17.000 --> 00:08:20.580
You have the simplicity of Prozacs,
and then the power of ACL,

00:08:20.590 --> 00:08:24.650
which you can mix and
match any way you'd like.

00:08:26.700 --> 00:08:29.500
Administration-wise,
you can enable or disable

00:08:29.500 --> 00:08:33.560
ACLs on per volume basis,
and then on Mac OS X Server,

00:08:33.710 --> 00:08:37.210
it's enabled by default on
all the internal drives and

00:08:37.210 --> 00:08:39.590
direct attach rate systems.

00:08:39.880 --> 00:08:42.910
And you can manage it from GUI in
a workgroup manager application,

00:08:42.910 --> 00:08:45.170
or you can use standard
Unix command line tools,

00:08:45.240 --> 00:08:47.090
such as gmod.

00:08:48.640 --> 00:08:51.770
And this is something that wasn't
just kind of bolted on top of system,

00:08:51.770 --> 00:08:53.740
but it's really built into the system.

00:08:53.740 --> 00:08:57.220
It's enforced by the kernel,
and it's supported by key

00:08:57.220 --> 00:08:58.730
file systems in the OS.

00:08:59.210 --> 00:09:01.220
And as I mentioned earlier,
we've also updated all

00:09:01.220 --> 00:09:03.760
the command line tools,
so things like LS,

00:09:04.110 --> 00:09:07.100
correctly display information
when you have ACL set.

00:09:07.230 --> 00:09:10.780
And we've also modified
Finder and other copy engines,

00:09:10.900 --> 00:09:14.150
so when you copy or duplicate files,
the permissions are

00:09:14.150 --> 00:09:16.500
duplicated correctly as well.

00:09:17.990 --> 00:09:20.740
And as I mentioned earlier,
it's fully compatible

00:09:20.740 --> 00:09:23.120
with Windows NT ACL model.

00:09:23.160 --> 00:09:26.110
So, whatever you set on Windows shows
up exactly the same on

00:09:26.120 --> 00:09:28.970
Tiger Server and vice versa.

00:09:31.100 --> 00:09:33.740
And we've also made a number
of changes to the rest of the

00:09:33.740 --> 00:09:36.480
system for ACLs to work better.

00:09:36.680 --> 00:09:39.660
For example,
we now generate 128-bit GUIDs,

00:09:39.660 --> 00:09:44.050
or the global unique IDs,
every time you create users or groups.

00:09:44.120 --> 00:09:48.340
So when you specify one of
those users or groups in ACL,

00:09:48.430 --> 00:09:55.510
you have the-- I should say,
when you have that ACL specified,

00:09:55.540 --> 00:09:58.700
you can just go ahead and make
sure that there's no ID conflict.

00:09:58.840 --> 00:10:01.750
For example,
if you move a volume with ACL enabled

00:10:01.750 --> 00:10:06.490
from one system to the other,
there's no ID conflict with ID 501,

00:10:06.490 --> 00:10:07.790
for example.

00:10:08.530 --> 00:10:12.750
We've also removed the 16
group membership limitations,

00:10:12.750 --> 00:10:15.260
and also added support for nested groups.

00:10:15.370 --> 00:10:18.830
So now you have much better
control over defining groups and

00:10:18.900 --> 00:10:22.090
effectively utilizing them in ACL.

00:10:22.820 --> 00:10:26.370
And lastly, we've introduced a new
daemon called MemberD,

00:10:26.370 --> 00:10:29.290
which provides you with
group membership check,

00:10:29.410 --> 00:10:36.260
as well as ID translation between UIDs,
GUIDs, and Windows SIDs, or security IDs.

00:10:36.370 --> 00:10:38.960
And there's a public API,
so if you want to take advantage of it,

00:10:38.960 --> 00:10:39.930
it's there for you.

00:10:40.060 --> 00:10:42.480
For example, in your application,
if you want to check group

00:10:42.560 --> 00:10:46.060
membership of a particular user,
instead of writing a code to actually

00:10:46.060 --> 00:10:50.090
walk through all those nested groups,
you can just make a simple API call.

00:10:52.170 --> 00:10:56.640
And here is the GUI of
Workgroup Manager looks like.

00:10:56.750 --> 00:10:58.780
So on the top,
you can go ahead and continue to use

00:10:58.860 --> 00:11:00.990
POSIX permissions if you want to.

00:11:01.070 --> 00:11:03.640
But if you need more
flexibility and sophistication,

00:11:03.730 --> 00:11:06.250
you can go ahead and
set ACLs at the bottom.

00:11:06.320 --> 00:11:09.270
And when you have ACLs set,
it takes precedence over what

00:11:09.270 --> 00:11:11.930
you specified in the POSIX panel.

00:11:12.420 --> 00:11:15.720
And as you start to construct
very complex permissions with

00:11:15.720 --> 00:11:19.580
a bunch of nested groups and
a mix of deny and allow mode,

00:11:19.620 --> 00:11:22.970
a lot of times it's really difficult
to tell if a particular user,

00:11:23.040 --> 00:11:25.810
what the particular permission
of the particular user is.

00:11:25.840 --> 00:11:30.380
So to help you with that,
we do have a tool called Inspector.

00:11:30.520 --> 00:11:33.670
which let you show exactly the
effective permission of any particular

00:11:33.670 --> 00:11:37.790
user for any particular group,
or any particular folder or file.

00:11:38.530 --> 00:11:41.180
So that's File ACL.

00:11:41.180 --> 00:11:44.000
Now let's talk about
Service Access Control Lists.

00:11:44.110 --> 00:11:47.260
So File ACLs are for
controlling access to the files,

00:11:47.260 --> 00:11:49.990
and Service Control Lists
are for accessing control

00:11:50.050 --> 00:11:54.440
to services such as AFP,
FTP, mail, and so on,

00:11:54.440 --> 00:11:56.670
for a particular server.

00:11:57.180 --> 00:11:58.990
And why do you want this?

00:11:59.080 --> 00:12:00.780
Well, here's the problem.

00:12:00.780 --> 00:12:04.400
So more and more people are really
centralizing all the users and groups

00:12:04.520 --> 00:12:07.010
into a centralized directory system.

00:12:07.300 --> 00:12:09.730
and in a lot of corporations
or educational institutions,

00:12:09.730 --> 00:12:12.160
you have tens of thousands of users,
or hundreds of thousands of

00:12:12.160 --> 00:12:14.560
users in your directory system,
which is a good thing.

00:12:14.680 --> 00:12:17.180
It's much easier to manage that way.

00:12:17.370 --> 00:12:21.610
But within the organization,
people also bind different servers,

00:12:21.670 --> 00:12:25.830
the file servers, mail servers,
and so on, to that centralized directory,

00:12:25.830 --> 00:12:28.590
which is also a good thing,
because people can just go ahead

00:12:28.590 --> 00:12:32.560
and use single username and
password to connect to all different

00:12:32.880 --> 00:12:34.660
services on all those servers.

00:12:34.700 --> 00:12:39.350
But one problem there is now everybody,
the whole 10,000 or 100,000

00:12:39.350 --> 00:12:42.370
of them in the directory,
have access to every single service and

00:12:42.560 --> 00:12:45.430
every single server in your organization.

00:12:45.510 --> 00:12:48.970
And that's the problem
service access control solves.

00:12:49.810 --> 00:12:52.530
And setting it up is quite simple.

00:12:52.550 --> 00:12:54.840
So for example,
if you want to limit access to your

00:12:54.950 --> 00:12:58.930
file server to only a few people,
all it takes is just two steps.

00:12:58.980 --> 00:13:01.800
One, on the left-hand side,
you can define which service

00:13:01.910 --> 00:13:04.580
you want to control access to.

00:13:04.650 --> 00:13:07.260
And then, on the right-hand side,
you can just drag any number

00:13:07.260 --> 00:13:10.380
of users or groups into it,
and save, and that's it.

00:13:10.450 --> 00:13:12.730
Now only those three people,
Chris LeCroy,

00:13:12.730 --> 00:13:16.000
Kazu Yanagihar and Mike Lopp,
has access to your file server

00:13:16.000 --> 00:13:18.580
out of the thousands of people
in the directory system.

00:13:18.690 --> 00:13:20.640
So it's very simple,
but it's also very powerful.

00:13:23.900 --> 00:13:25.970
So if you're interested in
learning more about ACLs,

00:13:26.130 --> 00:13:27.800
there are two sessions
you may want to attend.

00:13:27.810 --> 00:13:30.260
There's one this
afternoon on file systems,

00:13:30.260 --> 00:13:34.230
where we're going to talk about more
of the technical aspects of file ACLs.

00:13:34.290 --> 00:13:37.430
And tomorrow,
we have a session dedicated to ACLs,

00:13:37.430 --> 00:13:39.360
both file and service ACLs.

00:13:39.410 --> 00:13:42.310
And there, we're going to talk about
different features more in detail,

00:13:42.430 --> 00:13:47.190
as well as talk about best practices
for sysadmins and developers,

00:13:47.190 --> 00:13:48.070
with some nice demos.

00:13:48.220 --> 00:13:49.410
So if you have time, please attend.

00:13:49.610 --> 00:13:51.380
Two o'clock tomorrow.

00:13:55.420 --> 00:13:57.850
Now let's talk about two
collaboration services that

00:13:57.870 --> 00:14:00.670
we've introduced in Tiger Server.

00:14:00.720 --> 00:14:03.420
We're going to start with iChat Server.

00:14:04.010 --> 00:14:10.810
Here are some of the reasons why you
may want to deploy Mac OS X Server as

00:14:10.810 --> 00:14:10.810
your instant messaging solution.

00:14:11.020 --> 00:14:12.000
It's very low cost.

00:14:12.150 --> 00:14:14.460
There's no per client access license.

00:14:14.530 --> 00:14:16.690
It's standards-based,
so there are tons of different open

00:14:16.750 --> 00:14:19.900
source products out there that you
can integrate on different platforms.

00:14:19.900 --> 00:14:24.430
It's integrated with open directory,
and most important of all,

00:14:24.520 --> 00:14:26.000
it's very secure.

00:14:29.180 --> 00:14:32.100
So security, of course,
it supports service access controllers,

00:14:32.100 --> 00:14:34.590
so you can specify exactly
who in the directory system

00:14:34.930 --> 00:14:36.960
can use the iChat server.

00:14:37.020 --> 00:14:40.000
It also encrypts every single
message that gets passed

00:14:40.070 --> 00:14:43.720
between client and server,
so people can adjust network and then

00:14:43.720 --> 00:14:46.500
see what you're talking in your iChat.

00:14:46.990 --> 00:14:50.960
And we also support body authorization,
so for anybody to add

00:14:50.960 --> 00:14:53.860
you to their body list,
they need to first get

00:14:53.860 --> 00:14:57.000
authorization from you,
which means random people cannot just

00:14:57.050 --> 00:15:02.320
add you to their body list and start to
track and monitor your online presence.

00:15:04.530 --> 00:15:08.920
Cross-platform, so it is based on
Java D open source project,

00:15:08.920 --> 00:15:11.690
and it supports Java D protocol,
which means you can interoperate

00:15:11.710 --> 00:15:15.990
with all the clients on Windows,
Linux, different flavors of Unix,

00:15:16.080 --> 00:15:18.530
and even cell phones and PDAs.

00:15:18.590 --> 00:15:21.200
And there's a pretty interesting
demo coming up in a few

00:15:21.200 --> 00:15:22.890
minutes to demonstrate that.

00:15:24.530 --> 00:15:27.880
And it's, iChat server automatically
uses directory services,

00:15:27.880 --> 00:15:31.600
so there's no need for you to go ahead
and set up separate external account on

00:15:31.600 --> 00:15:34.600
AOL or Yahoo Messenger or anywhere else.

00:15:34.710 --> 00:15:37.710
Everything stays within your firewall.

00:15:39.870 --> 00:15:42.400
And of course, it fully supports all
the features of iChat,

00:15:42.460 --> 00:15:46.900
such as chat rooms and U+3
audio and video conferencing.

00:15:47.900 --> 00:15:52.080
And lastly, we have some nice features
such as Store and Forward,

00:15:52.080 --> 00:15:55.630
where you can go ahead and send a
message to somebody who is not online,

00:15:55.630 --> 00:15:59.550
and then when that person becomes online,
the message gets delivered,

00:15:59.660 --> 00:16:01.860
even if you're offline at that time.

00:16:01.990 --> 00:16:03.860
It's sort of like a voicemail.

00:16:05.380 --> 00:16:10.180
And here's an example deployment of
iChat server within your corporation

00:16:10.180 --> 00:16:12.470
or educational institution.

00:16:12.560 --> 00:16:15.920
You have the directory server there
with all the users and groups defined,

00:16:15.940 --> 00:16:17.730
which means, again,
you don't need to create

00:16:17.730 --> 00:16:20.370
an external account,
and the users can use the same

00:16:20.370 --> 00:16:25.200
username and password that they use to
connect to file server or mail server.

00:16:25.530 --> 00:16:29.280
And your iChat server is inside, again,
inside a firewall,

00:16:29.280 --> 00:16:33.010
meaning your messages don't leave your
company or educational institution.

00:16:33.050 --> 00:16:35.240
It all stays within the firewall.

00:16:35.350 --> 00:16:37.910
And then everything that stays
within is also encrypted,

00:16:38.090 --> 00:16:39.940
so it's a very secure system.

00:16:40.110 --> 00:16:42.460
And you can really deploy
this with very low cost.

00:16:42.560 --> 00:16:46.660
All it takes is just one Mac OS X server,
and hopefully open directory server.

00:16:46.780 --> 00:16:48.590
And it's also very easy to set up.

00:16:48.590 --> 00:16:51.190
You can set it up
probably in a few minutes.

00:16:51.570 --> 00:16:55.260
So now I'd like to invite Chris LeCroy
to come up to the stage and then give us

00:16:55.260 --> 00:16:58.790
a quick demo of iChat Server in action.

00:17:05.010 --> 00:17:06.930
Can I have demo two, please?

00:17:06.930 --> 00:17:07.750
All right.

00:17:07.750 --> 00:17:09.090
So, iChat server.

00:17:09.090 --> 00:17:12.450
So, let me first show you the
UI for configuring it.

00:17:12.450 --> 00:17:14.900
In server admin, it's really simple.

00:17:14.970 --> 00:17:19.620
Basically, specify the domain that you
want to use for your Jabber IDs.

00:17:19.620 --> 00:17:22.920
In this case,
we're kind of using a closed network,

00:17:22.920 --> 00:17:25.280
so I have kind of a funny name.

00:17:25.280 --> 00:17:27.880
But an example of what
you'd want to do here is,

00:17:27.880 --> 00:17:31.960
at Apple, we want to have our IDs be
things like lecroy@apple.com,

00:17:31.960 --> 00:17:34.220
but the server we run on may
not actually be apple.com.

00:17:34.220 --> 00:17:36.100
It's probably going to
be jabber.apple.com.

00:17:36.100 --> 00:17:40.260
So, this field allows you to tell
the server what kind of host

00:17:40.260 --> 00:17:42.550
names it'll accept for chats.

00:17:42.560 --> 00:17:47.030
You can add a welcome message for people
to see the first time they log in.

00:17:47.310 --> 00:17:50.050
And you can specify the SSL certificate.

00:17:50.100 --> 00:17:52.880
By default, you're going to get the
default certificate.

00:17:52.940 --> 00:17:55.280
It's unsigned, so there are some
clients that may comply.

00:17:55.300 --> 00:17:59.080
But you can always go use our new
certificate UI in server admin

00:17:59.080 --> 00:18:03.280
and get a signed certificate and
cause those warnings to go away.

00:18:03.280 --> 00:18:06.310
iChat does not complain about it,
so that's good.

00:18:07.010 --> 00:18:09.460
So that's basically it for setting it up.

00:18:09.490 --> 00:18:14.320
And let me show you a
little bit of a demo here.

00:18:15.120 --> 00:18:16.180
So here's iChat.

00:18:16.180 --> 00:18:19.720
I'm not going to do a
big iChat client demo,

00:18:19.720 --> 00:18:21.260
because you guys have all
seen that a million times.

00:18:21.260 --> 00:18:23.320
Just show you some of the
unique things with Jabber.

00:18:23.320 --> 00:18:26.450
So if you look at the bottom here,
Wilfredo Sanchez waiting

00:18:26.450 --> 00:18:27.760
for authorization.

00:18:27.760 --> 00:18:30.850
What that means is that
I've invited Wilfredo to,

00:18:30.950 --> 00:18:34.170
or I've asked him if I can
have him in my buddy list.

00:18:34.260 --> 00:18:37.110
Until he authorizes me,
I'm not going to be able

00:18:37.240 --> 00:18:38.700
to see his presence.

00:18:38.700 --> 00:18:40.570
And I can still chat with him,
but I just won't be able

00:18:40.570 --> 00:18:41.520
to see his presence.

00:18:41.520 --> 00:18:42.910
So on his side,
he's going to get a little

00:18:42.910 --> 00:18:45.460
notification saying,
would like to add you to his buddy list,

00:18:45.460 --> 00:18:46.220
and he'll say okay.

00:18:46.220 --> 00:18:48.880
And then he'll show up
like Al Begley does here,

00:18:48.880 --> 00:18:50.780
with proper authorization.

00:18:50.780 --> 00:18:56.800
Another kind of cool feature is,
even when people are offline with Jabber,

00:18:56.800 --> 00:18:58.100
you can still send them messages.

00:18:58.100 --> 00:19:00.560
So I know that Doug likes to sleep in.

00:19:05.530 --> 00:19:09.840
So I can send him a chat and as
soon as his machine wakes up,

00:19:09.920 --> 00:19:12.080
after he wakes up,
he's going to get that instant message.

00:19:12.080 --> 00:19:15.440
He's going to know that I want him
to call as soon as he wakes up.

00:19:15.780 --> 00:19:21.200
So that's about all I'm going to
show you with the iChat client.

00:19:21.290 --> 00:19:23.300
So as Kazu mentioned,
there are like hundreds of

00:19:23.300 --> 00:19:29.950
Jabra clients out there,
from Windows, Linux, PDAs, everything.

00:19:30.030 --> 00:19:35.630
I actually went and downloaded
an open-source Python-based

00:19:35.730 --> 00:19:37.840
client called XMPP-PY.

00:19:37.890 --> 00:19:38.690
And I installed it.

00:19:38.780 --> 00:19:40.600
It took like two minutes to install.

00:19:40.690 --> 00:19:43.800
And it gives you this really rich
library of Jabber functionality

00:19:43.800 --> 00:19:46.020
that you can access via Python,
which means you can access

00:19:46.230 --> 00:19:47.360
it from shell scripts.

00:19:47.460 --> 00:19:50.300
So here's kind of what a command
looks like for sending a message.

00:19:50.300 --> 00:19:51.890
Xsend is the name of the little tool.

00:19:51.900 --> 00:19:55.700
I'm sending it to
Chris LeCroy at www.c.local.

00:19:55.700 --> 00:19:59.680
So if I hit that,
basically I've sent myself a

00:19:59.680 --> 00:20:01.700
little message from the terminal.

00:20:01.700 --> 00:20:04.740
So, mine on it.

00:20:05.670 --> 00:20:10.310
So, kind of extending that,
Mac OS X Server ships with a

00:20:10.440 --> 00:20:15.090
utility called Disk Space Monitor,
and what it does is it monitors

00:20:15.240 --> 00:20:19.490
hard drive space and will send
notifications when it notices that

00:20:19.500 --> 00:20:21.500
certain thresholds have been reached.

00:20:21.560 --> 00:20:24.440
So what I've done is I've
modified that script.

00:20:24.680 --> 00:20:29.620
There's kind of a default script.

00:20:31.290 --> 00:20:35.680
The default script that we changed,
so what's in blue is what I changed.

00:20:35.750 --> 00:20:38.470
I typically,
or by default it sends emails.

00:20:38.480 --> 00:20:41.280
So I commented out the
line that sends email,

00:20:41.280 --> 00:20:43.980
and I just added a few
X send calls in there.

00:20:43.980 --> 00:20:46.250
So let me show you how that works now.

00:20:46.300 --> 00:20:47.390
So I've got a...

00:20:48.460 --> 00:20:50.600
A server, so I've mounted an AFP volume.

00:20:50.600 --> 00:20:53.090
It's a very small volume,
only 2.4 megabytes.

00:20:53.180 --> 00:20:57.350
I'm going to copy a 2.3 megabyte
file over to that volume.

00:20:58.880 --> 00:21:03.220
And in a few seconds,
Disk Space Monitor noticed that

00:21:03.440 --> 00:21:05.880
the hard drive got full and
it sent me a message saying,

00:21:05.880 --> 00:21:09.790
"My hard drive is full with a bunch of
information." So this is really useful.

00:21:09.820 --> 00:21:11.300
There are all kinds of
things you can monitor.

00:21:11.300 --> 00:21:13.770
You can have it send it to iChat.

00:21:13.800 --> 00:21:15.660
If you've got other clients,
if you've got a Jabber

00:21:15.670 --> 00:21:17.780
client on your phone,
you can throw away your pager.

00:21:17.800 --> 00:21:23.630
So basically that's iChat,
or iChat Server.

00:21:41.700 --> 00:21:44.570
So we now ship block server
that's based on standards and

00:21:44.640 --> 00:21:47.080
integrated with open directory.

00:21:47.080 --> 00:21:49.790
And it's such a turnkey product,
you can just go ahead and start using

00:21:49.790 --> 00:21:51.980
it without any additional software.

00:21:51.990 --> 00:21:54.290
The old editor is built
into the browser and so on.

00:21:54.360 --> 00:21:56.160
So let's take a look.

00:21:56.990 --> 00:21:59.650
Security-wise,
it of course uses or supports

00:21:59.650 --> 00:22:02.890
service access controllers,
so you can again decide

00:22:02.890 --> 00:22:04.940
who can access this server.

00:22:05.110 --> 00:22:08.720
And you can also use Kerberos
for authentication if you

00:22:08.820 --> 00:22:11.100
want the most security there.

00:22:11.910 --> 00:22:14.510
And it's based on popular
BroadSum project out there,

00:22:14.720 --> 00:22:19.570
and uses all the standard protocols,
which means your users can use standalone

00:22:19.570 --> 00:22:23.190
editors or viewers if you want to,
or you can use what's built

00:22:23.250 --> 00:22:25.680
into a product based on browser.

00:22:26.870 --> 00:22:31.250
And you can create individual user
blogs or group blogs for collaboration,

00:22:31.410 --> 00:22:34.650
in which case anybody in that
group can create and edit

00:22:34.650 --> 00:22:37.990
blogs for a particular project,
for example.

00:22:39.570 --> 00:22:41.590
We do have this auto-blog
creation feature,

00:22:41.720 --> 00:22:44.100
so every time a user first logs in,
not every time,

00:22:44.100 --> 00:22:47.380
but first time when the user logs in,
the server automatically

00:22:47.390 --> 00:22:50.600
creates a blog for that user,
so the sysadmin doesn't have to

00:22:50.600 --> 00:22:53.060
do any manual configuration there.

00:22:55.070 --> 00:22:58.500
And lastly, we do ship with a handful
of very nice-looking themes,

00:22:58.660 --> 00:23:00.760
but if you want to, you can add your own.

00:23:00.860 --> 00:23:03.500
And there's also plugin API,
so you can extend the functionality

00:23:03.550 --> 00:23:07.770
of the server if you want to do
something additional to meet needs

00:23:07.770 --> 00:23:09.970
of your specific environment.

00:23:11.030 --> 00:23:12.840
Here's what GUI looks
like in the browser.

00:23:13.000 --> 00:23:14.140
It's one of the themes.

00:23:14.140 --> 00:23:17.000
But rather than me just kind
of going over every single one,

00:23:17.050 --> 00:23:19.930
what I'm going to do is I'm going to
invite Chris back onto stage so he can

00:23:19.930 --> 00:23:22.730
show us the live version of the software.

00:23:25.800 --> 00:23:33.220
Okay, so as Kazu mentioned,
its weblog server is based on Blodsum.

00:23:33.500 --> 00:23:35.600
First thing is it's
really easy to get to.

00:23:35.600 --> 00:23:38.450
If you just go to the host
name on a server machine,

00:23:38.510 --> 00:23:41.420
you get our default web page,
and you'll see a little

00:23:41.420 --> 00:23:42.500
web log link over here.

00:23:42.520 --> 00:23:45.490
Make that a little bigger
for those of you in the back.

00:23:46.030 --> 00:23:47.910
Maybe a little smaller.

00:23:48.040 --> 00:23:48.540
Welcome.

00:23:48.550 --> 00:23:49.040
Thank you.

00:23:49.040 --> 00:23:52.970
That's Weblog Server.

00:23:53.200 --> 00:23:56.360
Okay, so clicked on the weblog link,
and what you're seeing here are a

00:23:56.360 --> 00:23:58.470
list of the weblogs on this server.

00:23:58.730 --> 00:24:04.100
Weblogs are actually created dynamically,
so everybody in the directory system

00:24:04.100 --> 00:24:07.980
who has access to the server can
create a weblog really easily by

00:24:08.030 --> 00:24:09.980
just typing in their short name.

00:24:09.980 --> 00:24:14.520
So I'm going to type in Michael,
and Michael doesn't have a weblog,

00:24:14.540 --> 00:24:16.060
or didn't have one.

00:24:16.060 --> 00:24:17.140
Now he does have a weblog.

00:24:17.140 --> 00:24:19.040
Went out, looked in the directory,
and just automatically

00:24:19.040 --> 00:24:20.450
generated his weblog,
so the administrator

00:24:20.450 --> 00:24:21.370
doesn't have to do anything.

00:24:21.460 --> 00:24:22.140
It's very easy.

00:24:23.500 --> 00:24:34.400
[Transcript missing]

00:24:35.650 --> 00:24:40.240
They've all got kind of
calendar-based navigation.

00:24:40.800 --> 00:24:43.660
They've all got support for categories.

00:24:44.300 --> 00:24:45.740
Here's one.

00:24:45.820 --> 00:24:47.240
Looks a lot like the default web page.

00:24:47.240 --> 00:24:51.790
Here's one that's a little cooler
with some transparency and a little

00:24:51.800 --> 00:24:53.200
three-dimensional window there.

00:24:53.200 --> 00:24:58.280
Let me show you what the... We tried
to... We used a lot of dynamic HTML,

00:24:58.280 --> 00:25:03.200
and we really tried to make the
experience not too web-like,

00:25:03.200 --> 00:25:04.200
I guess, is one way to put it.

00:25:04.200 --> 00:25:09.650
So these little windows that pop up
make it really easy to... make it feel

00:25:09.650 --> 00:25:11.200
like you're kind of in an application.

00:25:11.200 --> 00:25:16.180
So let me log into ELLs blog and
show you how to do a new entry.

00:25:16.200 --> 00:25:18.820
So create new entry.

00:25:34.250 --> 00:25:36.440
I guess that would be personal status.

00:25:36.440 --> 00:25:43.140
Oh, and geez, I guess I should do
spell checking on that.

00:25:43.180 --> 00:25:47.120
So that's how you do data entry.

00:25:48.040 --> 00:25:54.910
Oh, another thing is that it completely
integrates with Safari RSS.

00:25:55.140 --> 00:25:56.620
Use that UI if I'd like to.

00:25:56.620 --> 00:25:59.100
And because of the
integration with Safari RSS,

00:25:59.100 --> 00:26:00.580
there are kind of some
unique things you can do.

00:26:00.580 --> 00:26:03.640
So we actually use this a lot at Apple,
especially for team status.

00:26:03.640 --> 00:26:08.940
So I've got bookmarks to everybody's
status that are actually feed URLs,

00:26:08.940 --> 00:26:11.250
which are the Safari RSS URL type.

00:26:11.260 --> 00:26:14.740
Kind of the cool thing about it is
I can have my entire team in a folder,

00:26:14.740 --> 00:26:16.800
and I can do view all RSS articles.

00:26:16.800 --> 00:26:20.060
And I can see everybody's status now,
and it's really a lot easier

00:26:20.400 --> 00:26:23.440
than dealing with all the emails
coming in with people's status.

00:26:25.000 --> 00:26:26.990
I like it a lot.

00:26:27.220 --> 00:26:31.400
And then another thing we do at Apple,
so we didn't build this to try to

00:26:31.450 --> 00:26:35.920
compete with any of the internet
blogging services out there.

00:26:35.920 --> 00:26:36.740
There are a zillion of those.

00:26:36.740 --> 00:26:39.420
We really intended for this to be kind
of an internal collaboration tool.

00:26:39.420 --> 00:26:41.520
So we use it internally quite a bit.

00:26:41.560 --> 00:26:45.600
And here's an example of
just an example project.

00:26:45.600 --> 00:26:47.100
We use it for project status primarily.

00:26:47.100 --> 00:26:50.220
So in this example,
I've got different categories.

00:26:50.250 --> 00:26:51.140
I've got build info.

00:26:52.600 --> 00:26:57.600
One thing to note about Blogson is that
the weblogs are actually text files.

00:26:57.600 --> 00:27:00.200
So if you wanted to,
you can build little tools that actually

00:27:00.200 --> 00:27:03.520
generate little blog entries for you
like the build system is doing here.

00:27:06.770 --> 00:27:10.700
You know, meeting notes, project status,
it's all searchable,

00:27:10.700 --> 00:27:17.420
so if I noticed in this project status
here that the first official build,

00:27:17.540 --> 00:27:21.190
1A322,
was fired off and it was a total failure,

00:27:21.190 --> 00:27:27.490
I can go in here and search for... Oops,
I have to go back to all entries.

00:27:29.380 --> 00:27:33.500
Search for 1.8.3.22 and then get
any info about that build problem.

00:27:33.500 --> 00:27:39.850
And that's basically it for WebLogs.

00:27:48.300 --> 00:27:50.620
Thanks, Chris.

00:27:50.770 --> 00:27:54.560
So next, let's talk about X Grid.

00:27:54.960 --> 00:27:57.570
It's our distributed computing solution.

00:27:59.140 --> 00:28:02.320
Here are some of the reasons why you
may want to use Mac OS X Server with Xub

00:28:02.480 --> 00:28:04.540
for your distributed computing needs.

00:28:04.540 --> 00:28:06.880
We now have a nice 64-bit architecture.

00:28:06.880 --> 00:28:09.680
We ship pretty nice development tools,
Xcode 2.

00:28:09.680 --> 00:28:14.000
And we have Xgrid,
our distributed computing engine,

00:28:14.000 --> 00:28:17.160
built into the OS,
which ships with nice management

00:28:17.270 --> 00:28:20.870
tools and supports open directory
with features like single-sign-on

00:28:20.870 --> 00:28:23.760
authentication using Kerberos.

00:28:24.360 --> 00:28:28.020
But before we talk about it,
let's take a quick look at how it works.

00:28:28.140 --> 00:28:33.320
There are three parts to it-- the client,
controller, and agents.

00:28:33.320 --> 00:28:36.920
Client is a system where you submit jobs,
jobs being some sort

00:28:36.920 --> 00:28:39.570
of computational jobs,
such as calculating first

00:28:39.600 --> 00:28:43.630
1 billion prime numbers,
or rendering graphics files, or so on.

00:28:43.680 --> 00:28:46.040
And when the job gets
submitted to the controller,

00:28:46.070 --> 00:28:48.580
the controller breaks it
down into different tasks,

00:28:48.670 --> 00:28:52.300
number of tasks, and assigns each task
to a different agent.

00:28:52.420 --> 00:28:56.200
So the agents can go ahead and
do the computation in parallel.

00:28:57.360 --> 00:28:59.730
The agents send back the task
result to the controller.

00:28:59.890 --> 00:29:03.510
The controller puts everything
back together and then notifies the

00:29:03.510 --> 00:29:05.800
client when the whole job is done.

00:29:06.260 --> 00:29:08.580
And of course, at that point,
the client can go ahead and retrieve

00:29:08.580 --> 00:29:10.960
the result of the job that's submitted.

00:29:11.050 --> 00:29:15.090
So that's sort of the 45-second
overview of how X-Grid works.

00:29:15.790 --> 00:29:19.690
And X Grid is built into
every Tiger and Tiger Server.

00:29:19.760 --> 00:29:22.950
On the server side,
you can make any Tiger Server a

00:29:22.950 --> 00:29:24.690
controller or agent.

00:29:24.720 --> 00:29:28.260
And you can define that,
or both actually, and you can define that

00:29:28.260 --> 00:29:29.900
in server admin software.

00:29:30.920 --> 00:29:34.980
On the desktop side,
any Tiger desktop can become an agent.

00:29:35.070 --> 00:29:37.290
All you have to do is go to
the system preference panel,

00:29:37.300 --> 00:29:39.980
go to sharing panel,
and then click check on that

00:29:39.980 --> 00:29:41.800
little X grid mark at the bottom.

00:29:41.800 --> 00:29:44.120
And if you want,
you can configure things like

00:29:44.150 --> 00:29:48.630
different authentication methods,
or whether you want your machine

00:29:48.630 --> 00:29:52.800
to be always acting as agent,
or only when you're sitting idle,

00:29:52.800 --> 00:29:55.110
not using the computer.

00:29:56.130 --> 00:30:00.220
We've also posted a PanServ
version of the agent on the web,

00:30:00.220 --> 00:30:02.850
so you can download and make
any PanServ desktop or the

00:30:02.860 --> 00:30:05.440
server XGrid agent as well.

00:30:08.220 --> 00:30:10.740
And setting up Next Grid is very simple.

00:30:10.750 --> 00:30:14.660
It uses Bonjour to discover
all the controllers and agents.

00:30:14.670 --> 00:30:17.550
And it really, within a few minutes,
you can click, click, click,

00:30:17.550 --> 00:30:21.060
and set up your whole grid,
ready for computation.

00:30:22.000 --> 00:30:24.150
So of course,
integrated with open directory,

00:30:24.170 --> 00:30:28.780
which means it uses all the users in the
centralized directory for authentication,

00:30:28.780 --> 00:30:31.860
and it supports things
like authentication,

00:30:31.860 --> 00:30:34.370
as well as password-based authentication.

00:30:35.730 --> 00:30:38.730
On the client side,
there are two different ways

00:30:38.790 --> 00:30:40.400
that you can submit jobs.

00:30:40.430 --> 00:30:43.190
One way is by using the
command line tool that we ship.

00:30:43.230 --> 00:30:45.550
You can either invoke them
directly from the terminal,

00:30:45.560 --> 00:30:50.530
from your shell script,
or C program or whatever you want.

00:30:50.610 --> 00:30:54.420
Or you can go ahead and create
a custom Cocoa application

00:30:54.610 --> 00:30:59.660
using our new X Grid Cocoa API,
which is on the SDK for it on the DVD.

00:31:01.450 --> 00:31:02.990
And complex workflow support.

00:31:03.180 --> 00:31:07.460
Xgrid supports dependencies management
between jobs and between tasks.

00:31:07.600 --> 00:31:11.620
So you can say, start this job when this
particular job is complete,

00:31:11.630 --> 00:31:14.290
so you can take a result from it
and do additional computation on it.

00:31:14.300 --> 00:31:19.210
And you can really put together a big,
complex system to solve your

00:31:19.210 --> 00:31:21.710
huge rocket science problem.

00:31:23.080 --> 00:31:25.190
And lastly,
we've improved our scalability

00:31:25.190 --> 00:31:28.760
limit somewhat since our last
release of Technical Preview 2,

00:31:28.760 --> 00:31:30.330
which was last summer, I believe.

00:31:30.450 --> 00:31:34.710
So here are some of the improved
limitations listed here.

00:31:37.150 --> 00:31:40.500
And Xgrid ships with its own
admin software called Xgrid Admin,

00:31:40.580 --> 00:31:42.270
and here's what it looks like.

00:31:42.400 --> 00:31:45.570
So with this app, you can create grid,
you can assign different

00:31:45.700 --> 00:31:48.210
agents to the grid,
and on the right-hand side,

00:31:48.210 --> 00:31:50.270
you can manage jobs and agents.

00:31:50.320 --> 00:31:53.130
You can monitor them,
you can pause or resume jobs,

00:31:53.240 --> 00:31:55.770
you can delete them, reassign them,
and so on.

00:31:55.780 --> 00:31:57.610
Of course,
you have a bunch of different statistics,

00:31:57.610 --> 00:32:00.410
so you can see how much aggregates
through CPU power you have,

00:32:00.420 --> 00:32:02.180
for example.

00:32:04.120 --> 00:32:07.040
And here's an example
deployment of X Grid,

00:32:07.040 --> 00:32:10.430
maybe at a science
department at a university.

00:32:10.530 --> 00:32:12.340
So of course you have the
controller in the middle,

00:32:12.350 --> 00:32:15.100
and then in this case you
have a rack full of X Serves

00:32:15.410 --> 00:32:17.020
that are dedicated agents.

00:32:17.120 --> 00:32:19.990
So any researchers with
right authorization can

00:32:20.060 --> 00:32:23.260
submit jobs to this system,
either from his or her

00:32:23.400 --> 00:32:25.160
laptop or from desktop.

00:32:25.160 --> 00:32:27.380
And then the person can
wait for the result,

00:32:27.390 --> 00:32:31.270
or he can go away and then be notified,
since some of those jobs

00:32:31.310 --> 00:32:33.280
may take days or even weeks.

00:32:33.780 --> 00:32:36.860
But with X Grid,
you can also take advantage of the

00:32:36.860 --> 00:32:41.600
CPU power that may be just sitting
idle right there in your institution.

00:32:41.610 --> 00:32:44.450
So for example,
student computer lab machines

00:32:44.540 --> 00:32:47.220
or some of the desktops that's
being used by secretaries that

00:32:47.220 --> 00:32:50.710
are not being used after 5:00,
if you mark the little checkbox

00:32:50.710 --> 00:32:54.770
in the system preference panel,
the controller automatically discovers

00:32:54.770 --> 00:32:56.760
them and starts assigning tasks.

00:32:56.920 --> 00:33:00.120
So you don't have any
CPU sitting there just idle,

00:33:00.120 --> 00:33:01.280
wasting time.

00:33:02.010 --> 00:33:05.640
Even any computer on the internet
can contribute to the grid.

00:33:05.690 --> 00:33:09.240
Again, all you have to do is
check the little check box,

00:33:09.300 --> 00:33:12.380
and then type in the
IP address of the controller,

00:33:12.430 --> 00:33:17.380
and now you have the SETI at
home style computational engine.

00:33:17.820 --> 00:33:19.620
So I can call my grandma
in Japan and say,

00:33:19.620 --> 00:33:21.510
hey, grandma,
if you're not using a computer today,

00:33:21.610 --> 00:33:24.860
can you turn it on and do the
checkbox and type in these four

00:33:24.860 --> 00:33:26.870
numbers with that in between?

00:33:26.930 --> 00:33:30.930
And then I can use the extra 1.8
gigahertz in Japan to solve some

00:33:30.930 --> 00:33:32.990
of the problems here in the US.

00:33:36.900 --> 00:33:41.280
So that's what XGrid is,
and it's primarily for scientific

00:33:41.280 --> 00:33:45.030
market or the professionals,
such as graphics and video editing.

00:33:45.030 --> 00:33:48.430
But some people are starting to
take a look at this and start

00:33:48.430 --> 00:33:49.940
to use it in more creative ways.

00:33:50.000 --> 00:33:52.920
For example,
one of the groups in my department

00:33:52.990 --> 00:33:56.670
is looking at using this as
an automated testing engine.

00:33:56.690 --> 00:33:58.950
So you can distribute a
whole bunch of different test

00:33:58.950 --> 00:34:02.320
scripts to multiple machines,
get it executed, and collect the result.

00:34:02.340 --> 00:34:07.030
So if you have time,
take a look and then see sort of creative

00:34:07.120 --> 00:34:10.050
ways you can think of to use XGrid.

00:34:11.610 --> 00:34:14.080
Here are some of the sessions
that are related to X Grid and

00:34:14.080 --> 00:34:15.980
high-performance computing.

00:34:16.050 --> 00:34:19.780
In particular, the third one,
Using X Grid to Create Blah Blah Blah,

00:34:19.780 --> 00:34:21.940
is the one dedicated to X Grid.

00:34:21.940 --> 00:34:24.620
It's just too long.

00:34:24.620 --> 00:34:27.330
So, and then there you have to,
we're going to have a pretty nice

00:34:27.490 --> 00:34:30.660
demo of how you can use X Grid to
improve the productivity of your

00:34:30.750 --> 00:34:33.720
day-to-day tasks that have nothing
to do with scientific computing.

00:34:33.720 --> 00:34:37.220
So, when you get a chance,
drop by and take

00:34:38.490 --> 00:34:41.910
And that's all I had, so now I'd like to
introduce Michael Lopp,

00:34:41.930 --> 00:34:44.980
who's going to tell us all about
desktop management features built

00:34:45.080 --> 00:34:46.630
into Tiger and Tiger Server.

00:34:46.640 --> 00:34:47.080
Michael.

00:34:47.080 --> 00:34:50.040
Thanks, Kazu.

00:34:52.320 --> 00:34:53.700
Good morning, everyone.

00:34:53.800 --> 00:34:54.600
My name is Michael Lopp.

00:34:54.600 --> 00:34:57.300
I run the
Desktop Management Technologies Group at

00:34:57.300 --> 00:34:58.140
Apple.

00:34:58.140 --> 00:35:01.260
And I'm going to give you
guys a super-fast overview of

00:35:01.260 --> 00:35:03.580
desktop management at Apple,
and I'm going to give you a demo

00:35:03.580 --> 00:35:07.700
of portable home directories,
as well as talk about software updates.

00:35:07.700 --> 00:35:12.550
So we've got a lot of tools built
straight--a lot of desktop management

00:35:12.550 --> 00:35:15.850
technology built straight into Tiger,
as well as some great

00:35:15.850 --> 00:35:17.240
tools in Tiger Server.

00:35:17.460 --> 00:35:21.000
Right now, WorkRoot Manager has a great
utility we call Manage Desktop,

00:35:21.000 --> 00:35:24.990
which allows you to really deploy
a wide variety of different

00:35:24.990 --> 00:35:27.300
management policies to your desktops.

00:35:27.340 --> 00:35:28.500
Maybe you're running a school.

00:35:28.500 --> 00:35:30.710
Maybe you've got--you want to
lock down a desktop and not have

00:35:30.710 --> 00:35:32.100
the kids doing strange things.

00:35:32.170 --> 00:35:34.730
Or maybe you've got a small
business where you want to just

00:35:34.730 --> 00:35:36.310
plant breadcrumbs on a desktop.

00:35:36.340 --> 00:35:39.350
WorkRoot Manager is a great way to
deploy and manage your desktops.

00:35:39.350 --> 00:35:41.150
I'm not going to demo it today,
but there's a lot of sessions

00:35:41.150 --> 00:35:42.500
that I'll be talking about it.

00:35:42.600 --> 00:35:45.600
The other technology I'm
responsible for is system imaging.

00:35:45.600 --> 00:35:49.430
This is NetBoot Network Install,
a great technology that will actually

00:35:49.430 --> 00:35:52.780
allow you to actually boot images
over the network or also allow

00:35:52.780 --> 00:35:56.390
you to build custom images and
deploy software via network install.

00:35:56.490 --> 00:35:59.360
So I'm going to talk about software
update server and portable home

00:35:59.360 --> 00:36:00.400
directors a little bit more.

00:36:00.400 --> 00:36:02.600
I want to put a plug in for ARD.

00:36:02.600 --> 00:36:04.750
ARD 2.2 just came out with Tiger.

00:36:04.750 --> 00:36:09.800
This has Tiger support and it's
the Swiss Army knife of management,

00:36:09.800 --> 00:36:10.980
the way--that's what I think of it.

00:36:11.110 --> 00:36:14.270
You see the binoculars there that
were actually in the keynote as well.

00:36:14.470 --> 00:36:17.500
And that's a feature that we're famous
for is the observing and controlling.

00:36:17.500 --> 00:36:19.600
There's a lot of other features in ARD.

00:36:19.600 --> 00:36:19.600
And I encourage you to
check out the ARD website.

00:36:19.600 --> 00:36:21.310
I've got a lot of other features in
ARD and I encourage you to go to a

00:36:21.320 --> 00:36:23.380
lot of the sessions and check it out.

00:36:23.400 --> 00:36:24.650
So, let's get started.

00:36:24.850 --> 00:36:26.130
Software update server.

00:36:26.150 --> 00:36:27.660
Probably know what this is.

00:36:27.680 --> 00:36:30.520
You've got some interesting
challenges with software update.

00:36:30.520 --> 00:36:32.910
First issue, it's really a question.

00:36:32.910 --> 00:36:36.440
It's how do I maintain standard
desktop configurations?

00:36:36.440 --> 00:36:39.240
How do I test updates
before my users get to them?

00:36:39.330 --> 00:36:41.560
How do I minimize bandwidth costs?

00:36:41.800 --> 00:36:44.410
When software updates
are a force of nature,

00:36:44.410 --> 00:36:46.760
they just seem to always be coming.

00:36:46.930 --> 00:36:49.450
And also,
with the software update client,

00:36:49.450 --> 00:36:53.640
it's really easy for users to
get to these updates without

00:36:53.690 --> 00:36:57.010
you actually being in the way,
which may be a little bit of a

00:36:57.150 --> 00:36:59.470
So, anyway,
we have a software update server which we

00:36:59.470 --> 00:37:01.410
really released as part of Tiger Server.

00:37:01.460 --> 00:37:06.640
This is a proxy cache of all of our
software updates on your local system,

00:37:06.690 --> 00:37:09.590
which gives you management and
control over all those updates.

00:37:09.660 --> 00:37:12.600
You've got to be in the intermediary
from all of the updates.

00:37:12.650 --> 00:37:16.330
And the good thing is,
when that 20-meg keynote update shows up,

00:37:16.330 --> 00:37:20.620
and you can actually restrict it
so that users can actually see it

00:37:20.710 --> 00:37:24.460
until it actually is available,
until you want to make it available.

00:37:24.570 --> 00:37:26.400
So let's go over the
network diagram here.

00:37:26.650 --> 00:37:28.980
Up at the top, we've got the mother ship.

00:37:29.160 --> 00:37:31.600
That's all -- that's our
software update servers,

00:37:31.600 --> 00:37:33.100
and every single update
is up there right now.

00:37:33.100 --> 00:37:35.950
And then you have the Internet,
and you have your infrastructure,

00:37:35.950 --> 00:37:37.820
and then you have all your clients.

00:37:37.940 --> 00:37:40.240
So what we want to do here,
what a software update

00:37:40.310 --> 00:37:42.640
server allows you to do,
it allows you to put a

00:37:42.670 --> 00:37:46.220
server right in the middle,
an XServe, and actually this will be your

00:37:46.220 --> 00:37:48.420
cache of all the software updates.

00:37:48.420 --> 00:37:51.930
So what that means is,
when that 1,000 -- when that

00:37:51.930 --> 00:37:54.890
new keynote update shows up and
1,000 users try to download it,

00:37:54.890 --> 00:37:57.190
they're going to download
it from your infrastructure,

00:37:57.190 --> 00:37:57.960
from your network.

00:37:57.980 --> 00:37:59.840
They're not going to pull
it down from the Internet.

00:38:00.050 --> 00:38:01.600
Huge bandwidth savings there.

00:38:01.730 --> 00:38:05.260
And of course, via Workgroup Manager,
you can actually control -- you

00:38:05.260 --> 00:38:08.650
can control the updates as well
as you can manage the software

00:38:08.760 --> 00:38:11.930
update server via Server Admin.

00:38:11.930 --> 00:38:13.910
Surprise, surprise.

00:38:13.920 --> 00:38:16.560
Sorry, you guys in the back probably
can't see this very well,

00:38:16.560 --> 00:38:19.440
but it looks a lot like
Software Update Client.

00:38:19.570 --> 00:38:21.040
Key difference, though.

00:38:21.150 --> 00:38:22.330
You're going to see,
when you first turn on

00:38:22.330 --> 00:38:25.630
Software Update Server,
you're going to see the

00:38:25.730 --> 00:38:26.290
updates that are going to be
on your software update server.

00:38:26.290 --> 00:38:28.600
You're normally used to seeing only
the updates that apply to your machine.

00:38:28.600 --> 00:38:30.940
So you're probably going to see
some things you've never seen before

00:38:30.940 --> 00:38:33.500
because you've never installed,
I don't know, motion.

00:38:33.500 --> 00:38:34.980
So remember,
all the updates are going to be

00:38:34.980 --> 00:38:36.300
on your software update server.

00:38:36.300 --> 00:38:37.430
And there's two columns here.

00:38:37.450 --> 00:38:39.340
You can't see it in the back,
but there's a mirror and

00:38:39.390 --> 00:38:40.730
there's an enable column.

00:38:40.960 --> 00:38:43.990
Mirror means pull this -- pull
this update down and put it on

00:38:43.990 --> 00:38:45.660
my -- put it on my local server.

00:38:45.840 --> 00:38:48.550
Enable means actually
share that with my network.

00:38:48.550 --> 00:38:51.350
And then all the other information
that you can see about that.

00:38:51.370 --> 00:38:54.080
So as I said,
there's a lot of different management

00:38:54.220 --> 00:38:55.100
scenarios that you might have.

00:38:55.100 --> 00:38:58.270
You -- that you can manage
a software update with.

00:38:58.420 --> 00:38:59.920
So maybe you want to
use WorkRoute Manager.

00:38:59.920 --> 00:39:02.660
You can actually do that and have
the Software Update Client point at

00:39:02.660 --> 00:39:04.590
your server versus another server.

00:39:04.630 --> 00:39:07.480
Or you can use -- you can actually use
the inspector and directory to actually

00:39:07.800 --> 00:39:11.700
change a -- change the record that we
look up the Software Update Server for.

00:39:11.710 --> 00:39:13.600
And also,
if you're building custom images,

00:39:13.670 --> 00:39:15.820
you can just use a command
line to actually configure

00:39:15.850 --> 00:39:17.030
the Software Update Client.

00:39:17.030 --> 00:39:19.470
We are totally integrated with
the Software Update Client

00:39:19.580 --> 00:39:21.220
and it's a great tool.

00:39:21.220 --> 00:39:24.600
It's a really handy tool to
defer a lot of costs from,

00:39:24.600 --> 00:39:28.360
you know, all the bandwidth costs as well
as controlling all the updates.

00:39:28.360 --> 00:39:31.350
So that's Software Update Server.

00:39:31.360 --> 00:39:33.040
Portable home directories.

00:39:33.040 --> 00:39:33.990
This is a cool feature.

00:39:34.100 --> 00:39:37.930
So we have some other challenges
in mob -- with mobility.

00:39:37.930 --> 00:39:40.600
And it's not just mobile computers.

00:39:40.670 --> 00:39:42.620
First off,
we do have mobile computers and they're

00:39:42.620 --> 00:39:44.210
wandering around all over the place.

00:39:44.220 --> 00:39:45.630
We got all the machines in here.

00:39:45.630 --> 00:39:47.220
We got the ones down at Starbucks.

00:39:47.220 --> 00:39:50.440
When you're an IT person,
you're responsible for monitoring

00:39:50.440 --> 00:39:51.460
and managing the machines.

00:39:51.460 --> 00:39:54.090
It's really hard to do that
when they're not there.

00:39:54.090 --> 00:39:54.100
So that's a big thing.

00:39:54.100 --> 00:39:55.090
So that's a big challenge.

00:39:55.090 --> 00:39:58.000
The other thing is users are mobile too.

00:39:58.000 --> 00:40:02.380
In a lot of K-12,
students are moving from machine

00:40:02.380 --> 00:40:04.580
to machine and the problem
they have is their content's

00:40:04.620 --> 00:40:06.440
not following them around.

00:40:06.440 --> 00:40:09.780
So the technology to solve
this problem already exists.

00:40:09.780 --> 00:40:13.170
We already have home directories,
a nice envelope which does that.

00:40:13.220 --> 00:40:15.700
If you end synchronization
on top of that,

00:40:15.710 --> 00:40:20.330
you get -- whoops, sorry -- you get an
interesting transition.

00:40:20.420 --> 00:40:23.600
You combine mobile home
directories with synchronization,

00:40:23.600 --> 00:40:26.600
and you get portable home directories.

00:40:26.600 --> 00:40:30.220
So let's do a quick scenario here.

00:40:30.280 --> 00:40:31.450
Your most important file.

00:40:31.450 --> 00:40:32.590
Let's talk about this.

00:40:32.590 --> 00:40:34.500
Got this gentleman down here right here.

00:40:34.650 --> 00:40:37.540
He's got his portable and he's writing
his most important document right now.

00:40:37.540 --> 00:40:39.450
Don't know what it is,
but it's a big deal.

00:40:39.590 --> 00:40:40.980
And if he loses it, that's a problem.

00:40:41.120 --> 00:40:43.590
So the problem is he writes his document,
it's on there,

00:40:43.670 --> 00:40:47.480
and it's an obvious problem,
but if that computer vanishes,

00:40:47.620 --> 00:40:49.160
his content's gone too.

00:40:49.160 --> 00:40:50.630
But this guy's bright.

00:40:50.630 --> 00:40:54.230
He knows there's some guys in the
back room with a rack of servers,

00:40:54.230 --> 00:40:57.720
and these servers are well maintained,
and if one of these servers goes down,

00:40:57.720 --> 00:40:59.220
cell phone goes off,
and someone gets a call,

00:40:59.290 --> 00:41:01.990
and they drop whatever they're doing,
and he knows that if he puts

00:41:01.990 --> 00:41:05.010
his file on that document --
that document on that server,

00:41:05.010 --> 00:41:08.700
chances if he's portable
being harmed or vanishing,

00:41:08.860 --> 00:41:10.560
he still has his content.

00:41:10.560 --> 00:41:11.560
We all want to do this.

00:41:11.560 --> 00:41:15.130
We all want to back up our content,
but we don't always remember to do it.

00:41:15.170 --> 00:41:18.270
What we want is a synchronization
-- we want a synchronization tool

00:41:18.290 --> 00:41:19.380
that actually does it for us.

00:41:19.420 --> 00:41:22.600
And that's what portable
home directories is.

00:41:22.600 --> 00:41:24.470
Another network diagram.

00:41:24.480 --> 00:41:27.460
So it's very similar
to a software update.

00:41:27.520 --> 00:41:29.820
So you have your servers up on
top and your clients down below.

00:41:29.940 --> 00:41:32.550
What happens is all your clients,
when they have portable homes

00:41:32.550 --> 00:41:35.400
actually working for you,
it actually does synchronization.

00:41:35.610 --> 00:41:38.650
When the network goes away,
the synchronization actually stops.

00:41:38.650 --> 00:41:42.580
And then when the network reappears,
the synchronization will continue again.

00:41:42.580 --> 00:41:45.190
So what I'm actually going
to do -- and actually,

00:41:45.200 --> 00:41:47.080
I'll demo this in one second,
but I want to show you how

00:41:47.080 --> 00:41:49.070
you can actually opt into
software update -- I mean,

00:41:49.090 --> 00:41:50.700
software -- portable home directories.

00:41:50.850 --> 00:41:52.100
There's two ways.

00:41:52.100 --> 00:41:53.210
If you've got a network,
if you've got a network account

00:41:53.210 --> 00:41:55.600
and you log into your account,
you go into accounts preference,

00:41:55.600 --> 00:41:59.130
you'll see at the bottom there's
a configure button there.

00:41:59.150 --> 00:42:00.390
If you click that, you'll see

00:42:00.860 --> 00:42:02.900
You're actually going to see
the various options that you

00:42:02.900 --> 00:42:03.750
have that you can configure.

00:42:03.760 --> 00:42:06.290
There's a timing policy,
how often do you want me to sync,

00:42:06.360 --> 00:42:07.620
and then there's what
do you want me to sync,

00:42:07.670 --> 00:42:09.030
which content.

00:42:09.090 --> 00:42:11.120
Now you're thinking,
that's pretty simple.

00:42:11.270 --> 00:42:12.560
Here's some great news.

00:42:12.610 --> 00:42:16.400
There's a million ways to
configure this via WorkRootManager.

00:42:16.530 --> 00:42:19.090
So we've got three,
this is actually a sub-screen

00:42:19.110 --> 00:42:21.100
shot of within WorkRootManager.

00:42:21.210 --> 00:42:22.130
We've got three panels.

00:42:22.290 --> 00:42:26.540
Login/logout sync, background sync,
and the options associated with it.

00:42:26.610 --> 00:42:29.280
Login/logout sync is,
tell me what I should be syncing

00:42:29.300 --> 00:42:30.640
every time I log in/log out.

00:42:30.930 --> 00:42:33.190
Which content, which folders,
whatever you want.

00:42:33.280 --> 00:42:36.390
Below it is the exclusion list.

00:42:36.460 --> 00:42:40.010
Maybe you don't want to be syncing all
your MP3s or your video or whatever.

00:42:40.160 --> 00:42:44.350
So we allow you to create really
complex exclusion lists to say,

00:42:44.350 --> 00:42:45.590
don't sync this.

00:42:45.860 --> 00:42:47.440
So that's login/logout sync.

00:42:47.500 --> 00:42:50.150
Background sync has the
same basic set of options,

00:42:50.150 --> 00:42:53.440
except background's actually
happening when you're sitting

00:42:53.440 --> 00:42:54.880
there at your machine.

00:42:55.050 --> 00:42:56.380
Same options, which content.

00:42:56.380 --> 00:42:58.420
as well as the exclusion list.

00:42:58.490 --> 00:43:00.380
And then lastly,

00:43:00.640 --> 00:43:01.500
The options.

00:43:01.560 --> 00:43:02.160
How often do I sync?

00:43:02.240 --> 00:43:03.440
Every five minutes.

00:43:03.490 --> 00:43:05.000
Maybe I don't want to
do background syncing.

00:43:05.000 --> 00:43:07.860
Maybe I just want to turn it off
and actually just do it manually.

00:43:08.010 --> 00:43:10.480
So, let's give a quick demo here.

00:43:10.700 --> 00:43:13.140
I'm going to go to demo three.

00:43:13.150 --> 00:43:16.600
I call this the
dog-eat-my-powerbook scenario.

00:43:16.680 --> 00:43:22.990
And I won't be demoing a dog
actually eating a powerbook.

00:43:23.090 --> 00:43:26.370
So what I'm going to do here
is this is my powerbook,

00:43:26.370 --> 00:43:29.050
and I've got my demo files here.

00:43:29.120 --> 00:43:31.590
And what I'm going to do here
is I'm going to create my

00:43:31.590 --> 00:43:33.550
three most important files,
okay?

00:43:33.600 --> 00:43:34.800
And I have them right here.

00:43:34.870 --> 00:43:37.920
I have Project X,
which is my career-defining project.

00:43:37.990 --> 00:43:39.600
This is a big deal that gets done.

00:43:39.760 --> 00:43:41.850
And I have all my specs
associated with it.

00:43:41.910 --> 00:43:44.540
And if it doesn't work out,
I've got my resume just in case.

00:43:44.640 --> 00:43:47.120
So these are very important
files that I need.

00:43:47.180 --> 00:43:50.670
So what I'm going to go ahead
and do is actually pull these

00:43:50.820 --> 00:43:52.910
and put them on my desktop.

00:43:53.060 --> 00:43:55.680
Okay, and then I'm gonna change,
what time is it?

00:43:55.680 --> 00:43:57.650
It's 9:44.

00:43:57.750 --> 00:43:59.190
So let's change this one here.

00:43:59.200 --> 00:44:00.360
If I can click it, there we go.

00:44:00.360 --> 00:44:04.130
I opened it.

00:44:05.170 --> 00:44:08.590
There we go, and it's 9:44 still.

00:44:08.700 --> 00:44:10.430
Okay, so now I'm gonna synchronize.

00:44:10.510 --> 00:44:12.540
Now, normally you wouldn't do this,
what I'm about to do,

00:44:12.540 --> 00:44:14.670
'cause the synchronization
will just happen for you.

00:44:14.680 --> 00:44:16.780
It's gonna be happening
behind the scenes.

00:44:16.780 --> 00:44:21.480
So we'll go ahead and we'll synchronize.

00:44:23.970 --> 00:44:26.550
And you'll see a dialogue here in one
second as the synchronization occurs.

00:44:26.630 --> 00:44:28.770
Again,
normally you will never see this because

00:44:28.940 --> 00:44:30.460
it's happening in the background.

00:44:30.540 --> 00:44:32.700
So why do we call this the
dog-eat-my-powerbook scenario?

00:44:32.700 --> 00:44:36.030
It's because a lot of students
come up with interesting excuses

00:44:36.170 --> 00:44:37.640
for losing their content.

00:44:37.710 --> 00:44:39.180
And who knows what's going
to happen to this powerbook.

00:44:39.330 --> 00:44:43.830
So let's just say that this powerbook
got eaten by a dog and it's gone.

00:44:43.840 --> 00:44:44.910
My content's gone.

00:44:44.930 --> 00:44:47.460
My resume, my projects,
my project schedule.

00:44:47.600 --> 00:44:49.880
So let's go over to demo two.

00:44:51.630 --> 00:44:53.440
Login as me.

00:44:53.550 --> 00:44:55.800
Because I want to remember, oh wait,
I turn on portable

00:44:55.840 --> 00:44:57.540
homes for this account.

00:44:57.650 --> 00:45:00.190
So shouldn't everything that
I did be actually synchronized

00:45:00.250 --> 00:45:01.490
with my network home directory?

00:45:01.560 --> 00:45:02.200
And there you go.

00:45:02.240 --> 00:45:04.420
Let's actually organize
this a little bit.

00:45:04.460 --> 00:45:05.370
There's my resume.

00:45:05.520 --> 00:45:07.030
There's my time-stamped file.

00:45:07.080 --> 00:45:08.420
And there's my folders.

00:45:08.510 --> 00:45:10.120
Everything has been backed up for me.

00:45:10.120 --> 00:45:11.690
I know this machine right here.

00:45:11.810 --> 00:45:15.040
I realize it's a simple demo,
but the point is,

00:45:15.060 --> 00:45:18.390
portable home directories are working
for you when you least expect it.

00:45:18.440 --> 00:45:21.880
Because when we were installing,
late in the development cycle,

00:45:21.880 --> 00:45:23.580
we were installing a lot
of versions of Tiger.

00:45:23.580 --> 00:45:25.770
And we turned them into portable
home directories because

00:45:25.770 --> 00:45:27.080
we were developing them.

00:45:27.120 --> 00:45:29.760
Now what we found is,
on the second time that we upgraded the

00:45:29.760 --> 00:45:33.210
OS to the latest development version,
suddenly all my content was

00:45:33.250 --> 00:45:34.610
there from the previous day.

00:45:34.760 --> 00:45:37.390
And the reason was,
as I turned on portable home directories,

00:45:37.390 --> 00:45:39.720
everything was being synced
with my network home.

00:45:39.720 --> 00:45:42.040
So what I found was,
my content was constantly

00:45:42.130 --> 00:45:43.100
following me around.

00:45:43.350 --> 00:45:46.740
These are the sort of ah-has you're going
to have with portable home directories.

00:45:46.790 --> 00:45:48.390
And I think it's an
amazingly great feature.

00:45:48.400 --> 00:45:50.940
So that's all I have.

00:45:50.940 --> 00:45:54.180
I've been great back up.

00:45:54.180 --> 00:45:55.850
Thank you very much.

00:46:00.700 --> 00:46:02.400
All right, thanks, Michael.

00:46:02.570 --> 00:46:05.260
So I'm just going to wrap it up here.

00:46:05.430 --> 00:46:09.200
Tiger Server-- so you've heard about
the foundation of Tiger Server with

00:46:09.350 --> 00:46:14.040
some major new features with ACLs
and 64-bit application support.

00:46:14.040 --> 00:46:16.000
On top of that, we have open source.

00:46:16.000 --> 00:46:22.280
We've added some new services-- Blodsham,
Jabber, and then we have-- oh,

00:46:22.280 --> 00:46:25.100
and SpamAssassin, of course,
and many others.

00:46:25.100 --> 00:46:29.330
And on top of that,
we have also services that integrate

00:46:29.330 --> 00:46:31.140
directly with the Mac OS X desktop.

00:46:31.140 --> 00:46:33.530
And we talked about a few
of those as well-- X Grid,

00:46:33.530 --> 00:46:37.750
and Software Update Server,
and Portable Home Directories.

00:46:37.870 --> 00:46:40.280
For more information,
we mentioned a bunch of sessions

00:46:40.280 --> 00:46:41.840
throughout the presentation.

00:46:41.840 --> 00:46:45.150
Of course, at the Apple developer site,
there's also documentation

00:46:45.150 --> 00:46:46.600
and downloads available.

00:46:46.740 --> 00:46:49.850
And there are some other sessions that
we'll be having throughout the week

00:46:49.860 --> 00:46:51.600
as well that you ought to check out.

00:46:51.680 --> 00:46:54.600
So, for Active Directory and
for Open Directory support,

00:46:54.720 --> 00:46:57.000
we have a few sessions
throughout the week.

00:46:57.080 --> 00:46:59.770
If you are programming
with WebObjects or J2E,

00:46:59.770 --> 00:47:03.070
there are two sessions today
that you should check out.

00:47:03.280 --> 00:47:06.710
We have a session
tomorrow afternoon on XAN,

00:47:06.870 --> 00:47:08.200
our Storage Area Network product.

00:47:08.240 --> 00:47:12.300
And we'll stay up here shortly
after the presentation,

00:47:12.430 --> 00:47:15.630
but I want to definitely put in a
plug tomorrow morning for anyone

00:47:15.630 --> 00:47:18.980
that has feedback or questions to
attend the server feedback forum.

00:47:18.980 --> 00:47:20.660
It's tomorrow morning at 10:30 a.m.

00:47:20.660 --> 00:47:24.280
And then throughout the week,
we have hands-on labs in the

00:47:24.280 --> 00:47:27.580
Enterprise IT Lab related
to the various products,

00:47:27.580 --> 00:47:29.470
and there'll be people there
that can answer your questions.