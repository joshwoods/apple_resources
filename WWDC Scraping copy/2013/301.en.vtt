WEBVTT

00:00:00.506 --> 00:00:10.946
[ Silence ]

00:00:11.446 --> 00:00:12.246
>> Good afternoon.

00:00:12.426 --> 00:00:15.286
How are you doing?

00:00:16.716 --> 00:00:22.746
Welcome to Session 301:
Extending your Apps

00:00:22.846 --> 00:00:24.606
for Enterprise and
Education Use.

00:00:25.246 --> 00:00:28.366
My name is Dave Rahardja and I'm
up here with Victor Alexander.

00:00:30.676 --> 00:00:33.576
So as you know, the use of iOS

00:00:33.576 --> 00:00:36.636
in the enterprise is
growing at a phenomenal rate.

00:00:37.526 --> 00:00:40.906
There's great momentum in the
enterprise to adopt the devices

00:00:40.906 --> 00:00:43.896
that people love so much
and that allows them to do

00:00:43.896 --> 00:00:45.616
so many things that
they couldn't do before.

00:00:47.256 --> 00:00:52.306
From everything, from retail
to corporations, to medical,

00:00:52.686 --> 00:00:56.216
to education, even
inside airline cockpits,

00:00:56.686 --> 00:00:58.466
iOS devices are everywhere
you go.

00:01:00.306 --> 00:01:03.056
A large part of the
success is of course due

00:01:03.056 --> 00:01:05.135
to the elegant design
of iOS devices,

00:01:05.776 --> 00:01:08.416
the great management
capabilities of iOS itself,

00:01:08.886 --> 00:01:12.586
data security that's built
into the device and a host,

00:01:12.586 --> 00:01:15.516
a lot of things that people
love about the device carry

00:01:15.516 --> 00:01:17.236
over into the enterprise use.

00:01:18.006 --> 00:01:22.386
But much of the success is
thanks to developers like you

00:01:23.086 --> 00:01:27.026
that develop apps that allow
the enterprise to do things

00:01:27.026 --> 00:01:27.866
that they couldn't before.

00:01:28.526 --> 00:01:31.726
Apps in the App Store,
in the custom B2B store

00:01:31.986 --> 00:01:33.536
and in-house apps
that are developed

00:01:33.536 --> 00:01:34.896
by the enterprise themselves.

00:01:36.096 --> 00:01:40.166
So during this hour,
I'd like to talk to you

00:01:40.166 --> 00:01:43.886
about how you can make
your apps more attractive

00:01:44.596 --> 00:01:46.866
to the enterprise so
you can take advantage

00:01:46.866 --> 00:01:48.666
of the growth in this industry.

00:01:49.176 --> 00:01:54.306
And I'm going to do that by
highlighting four major areas

00:01:54.636 --> 00:01:58.596
that you can implement
in your apps to do this.

00:01:59.426 --> 00:02:02.616
They are: authentication,
networking,

00:02:03.736 --> 00:02:06.326
data security, and management.

00:02:07.176 --> 00:02:10.076
And, of course, this is an
incomplete list of making an app

00:02:10.076 --> 00:02:11.886
that would be attractive
to the enterprise.

00:02:12.296 --> 00:02:15.106
Of course, your apps have
to provide a solution

00:02:15.676 --> 00:02:16.526
that they're looking for.

00:02:16.746 --> 00:02:20.826
Of course, your apps have to
have a great user experience

00:02:21.486 --> 00:02:23.386
and those things are a given.

00:02:23.536 --> 00:02:25.236
But these are the things
that we're going to focus

00:02:25.236 --> 00:02:27.896
on that will let you add
that little bit of extra

00:02:28.566 --> 00:02:30.716
so that your apps stand
out from the crowd

00:02:30.716 --> 00:02:33.046
in the enterprise market.

00:02:34.696 --> 00:02:36.896
So, let's start up
with authentication.

00:02:37.826 --> 00:02:38.926
Authentication is, of course,

00:02:39.136 --> 00:02:40.476
very important in
the enterprise.

00:02:41.666 --> 00:02:46.936
When someone logs into
your app, you have to know

00:02:47.006 --> 00:02:48.906
that this person is
who they say they are.

00:02:50.316 --> 00:02:55.356
So, iOS has built an, of course,
a great authentication tool

00:02:55.356 --> 00:02:57.476
if you are an in-house developer

00:02:57.936 --> 00:02:59.276
or if you're an App
Store developer

00:02:59.276 --> 00:03:01.176
that has developed
a suite of apps

00:03:01.176 --> 00:03:03.166
and we call that
shared keychain.

00:03:03.956 --> 00:03:06.556
Now, that way shared
keychain works is

00:03:06.836 --> 00:03:09.116
that if you're a developer
and you have multiple titles

00:03:09.306 --> 00:03:12.816
or multiple apps that are
deployed on a single device,

00:03:14.396 --> 00:03:18.606
those apps share the keychain
or could share the keychain.

00:03:19.636 --> 00:03:23.706
This allows you to sign into
one app and reuse the sign-in

00:03:23.706 --> 00:03:25.536
in a second app and
it's very convenient

00:03:25.536 --> 00:03:27.016
because users don't
have to keep signing

00:03:27.016 --> 00:03:28.446
in every time they
switch their apps.

00:03:29.186 --> 00:03:31.876
And for in-house developers,
this is a great solution

00:03:32.056 --> 00:03:33.836
because all your in-house
apps can be signed

00:03:33.836 --> 00:03:36.346
with the same shared
keychain with the same ID

00:03:36.776 --> 00:03:39.246
and you can implement
this in your own Apps.

00:03:40.016 --> 00:03:43.886
But what happens if you
want to mix and match?

00:03:44.536 --> 00:03:46.036
So, if you're an
enterprise and you say, "Hey,

00:03:46.036 --> 00:03:47.196
that's a great App Store app."

00:03:47.196 --> 00:03:48.316
You want to pull it in,

00:03:48.316 --> 00:03:50.356
it supports my authentication
model,

00:03:50.906 --> 00:03:53.066
but you can't really
share the keychain.

00:03:53.546 --> 00:03:56.156
So now, you end up having
to log in twice depending

00:03:56.156 --> 00:03:58.426
on which app you have.

00:03:58.626 --> 00:04:06.706
So, new in iOS 7, we are
introducing Single Sign-On.

00:04:07.206 --> 00:04:10.266
[ Applause ]

00:04:10.766 --> 00:04:14.706
Single Sign-On takes the
burden of authentication

00:04:15.686 --> 00:04:18.446
and places it inside iOS.

00:04:19.676 --> 00:04:23.946
So, let's take a
closer look at this.

00:04:24.156 --> 00:04:27.586
In iOS 7, Single Sign On is
built on top of Kerberos.

00:04:28.886 --> 00:04:30.696
This is a very popular
authentication scheme

00:04:30.696 --> 00:04:32.286
as you know inside
the enterprise.

00:04:32.666 --> 00:04:36.546
You can grant access to
your Single Sign On accounts

00:04:36.766 --> 00:04:38.426
to specific apps only.

00:04:38.426 --> 00:04:42.856
And of course, the passwords
are never stored inside the Apps

00:04:43.136 --> 00:04:44.476
but they are managed by iOS.

00:04:44.956 --> 00:04:52.766
As an app developer, this
is what you have to do.

00:04:52.766 --> 00:04:55.346
Oh and by the way, for every
one of the topics that I'm going

00:04:55.346 --> 00:04:57.336
to talk about, I'm
going to talk about it

00:04:57.336 --> 00:04:58.886
from three different
perspectives.

00:04:59.176 --> 00:05:01.696
I'm going to present to you
what iOS brings to the table.

00:05:02.256 --> 00:05:04.846
And then, I'm going to talk
like I do here about what you

00:05:05.216 --> 00:05:08.436
as the app developer can do to
take advantage of the service.

00:05:08.876 --> 00:05:10.366
And then, I'm also
going to talk about it

00:05:10.366 --> 00:05:12.156
from the IT integrator's
point of view

00:05:12.716 --> 00:05:16.926
to tell you what you need
to be aware of when you want

00:05:16.996 --> 00:05:20.626
to deploy this feature in your
enterprise and what to look

00:05:20.626 --> 00:05:25.236
for when you are trying to find
the next great app to deploy

00:05:25.236 --> 00:05:26.416
in your enterprise, what kind

00:05:26.416 --> 00:05:27.566
of features you're
going to look for.

00:05:27.876 --> 00:05:28.686
So keep that in mind.

00:05:29.336 --> 00:05:30.596
So Single Sign On.

00:05:30.596 --> 00:05:34.856
As an app developer, I
have great news for you.

00:05:34.856 --> 00:05:40.516
You have no co-changes required
if you use NSURLConnection.

00:05:41.976 --> 00:05:44.056
If you don't use
NSURLConnection,

00:05:44.696 --> 00:05:46.986
the way you take advantage
of Single Sign On is

00:05:46.986 --> 00:05:48.346
to use NSURLConnection.

00:05:49.026 --> 00:05:50.946
So that's-- so we built this

00:05:50.946 --> 00:05:52.686
into the NSURLConnection
mechanism.

00:05:52.686 --> 00:05:55.966
You can also use NSURLSession
which is the great new API

00:05:55.966 --> 00:05:58.336
that we're introducing in iOS 7.

00:05:58.796 --> 00:06:02.416
So, the only change that you
will see as a developer is

00:06:03.036 --> 00:06:05.986
when you access a resource
that has been configured it

00:06:05.986 --> 00:06:09.096
to be managed-- to use Single
Sign On authentication,

00:06:09.386 --> 00:06:12.556
you will not receive
this callback:

00:06:12.556 --> 00:06:15.546
the willSendRequestFor
AuthenticationChallenge

00:06:15.546 --> 00:06:16.066
callback.

00:06:16.356 --> 00:06:18.206
So, what you'll do is
you'll make a request,

00:06:18.606 --> 00:06:20.076
you will not see
an authentication,

00:06:20.346 --> 00:06:23.676
iOS will prompt the user
to enter their credentials.

00:06:24.356 --> 00:06:27.236
If it's successful, your
request will just complete,

00:06:27.236 --> 00:06:27.996
it will just succeed.

00:06:28.666 --> 00:06:31.046
If not, then it'll just fail.

00:06:32.056 --> 00:06:36.306
So, your app probably already
works with Single Sign On.

00:06:38.066 --> 00:06:42.086
For IT integrators, the way
you configure Single Sign-On is

00:06:42.086 --> 00:06:43.886
using a configuration profile.

00:06:44.176 --> 00:06:47.056
So as you know, configuration
profiles is the--

00:06:47.226 --> 00:06:50.426
is the way that we manage
settings and accounts on iOS.

00:06:51.686 --> 00:06:53.436
Inside the configuration
profile,

00:06:53.436 --> 00:06:55.736
you can define a
Single Sign-On payload,

00:06:56.506 --> 00:06:58.866
define the account,
you know, the realm.

00:06:59.616 --> 00:07:03.366
And define the app bundle IDs
that you are going to allow

00:07:03.366 --> 00:07:05.616
into this system, into the
Single Sign On account,

00:07:06.876 --> 00:07:09.216
you can also define
URL prefixes.

00:07:09.556 --> 00:07:12.696
So, when you go to Safari
and you hit the URL prefix,

00:07:12.696 --> 00:07:14.066
it will trigger Single Sign On.

00:07:14.576 --> 00:07:18.476
So, that's what new
in Single Sign On

00:07:18.476 --> 00:07:20.136
and authentication on iOS.

00:07:20.566 --> 00:07:25.816
Next, we're going to
talk about networking.

00:07:26.706 --> 00:07:28.066
So the networking environment

00:07:28.066 --> 00:07:31.026
in an enterprise is
maybe a little different

00:07:31.026 --> 00:07:34.436
from the environment at home.

00:07:34.436 --> 00:07:38.896
Generally, iOS has great support
for enterprise networking.

00:07:38.896 --> 00:07:43.086
It has great SSL and TLS or
TLS Support and we, of course,

00:07:43.086 --> 00:07:46.486
allow MDM to install
certificates, certificate chains

00:07:46.486 --> 00:07:47.856
and such if you have
you have your own

00:07:47.856 --> 00:07:48.926
self-signed certificates.

00:07:49.726 --> 00:07:55.616
Then, we also have proxy support
both per SSID and Global Proxy,

00:07:56.086 --> 00:08:01.636
and we support enterprise
Wi-Fi 802.1X, WPA, WPA2,

00:08:02.096 --> 00:08:04.566
and we support virtual
private networks.

00:08:04.946 --> 00:08:09.526
And VPN tunnels the
traffic from your iOS device

00:08:09.526 --> 00:08:12.116
into the enterprise,
into the intranet.

00:08:12.576 --> 00:08:15.196
All right, something
new in iOS 7,

00:08:15.996 --> 00:08:17.936
we're introducing per-app VPN.

00:08:19.416 --> 00:08:19.956
So, what's this?

00:08:21.306 --> 00:08:23.296
Here is what this conceptual--

00:08:23.296 --> 00:08:28.286
a conceptual model of
what per-app VPN does.

00:08:28.476 --> 00:08:29.686
So, let's say you have two apps

00:08:29.686 --> 00:08:32.476
that the enterprise has
installed: app one and two,

00:08:33.356 --> 00:08:35.326
and you have an app
that the user installed

00:08:35.326 --> 00:08:36.326
on their own device.

00:08:36.326 --> 00:08:38.145
Let's say this is a "bring
your own device" scenario,

00:08:38.145 --> 00:08:39.556
the user installs
their own device--

00:08:39.736 --> 00:08:41.135
their own app on the App Store.

00:08:42.056 --> 00:08:47.056
Per-app VPN allows you to
specify that apps one and two go

00:08:47.056 --> 00:08:51.466
to the VPN into the corporate
intranet and not app three.

00:08:51.576 --> 00:08:54.076
App three that the user
installed does not get access

00:08:54.076 --> 00:08:54.726
to the intranet.

00:08:55.666 --> 00:08:57.096
So that's what it
is conceptually.

00:08:58.396 --> 00:09:01.776
This limits VPN access
to only the apps

00:09:01.776 --> 00:09:04.536
that the enterprise has
installed, specific Apps.

00:09:05.346 --> 00:09:09.406
It enhances both
security and privacy.

00:09:09.746 --> 00:09:14.796
So, security because you are not
exposing your intranet to apps

00:09:14.886 --> 00:09:17.696
that the user may have installed
from the App Store on their own.

00:09:17.976 --> 00:09:21.706
That's better than
system wide VPN.

00:09:22.686 --> 00:09:26.906
And privacy, because your
user's personal traffic

00:09:26.976 --> 00:09:28.316
to the internet does not go

00:09:28.316 --> 00:09:32.626
through your enterprise
network, all right?

00:09:38.526 --> 00:09:40.236
I knew you'd like that.

00:09:40.666 --> 00:09:44.496
All right, so per-app VPN for
app developers, what do you have

00:09:44.496 --> 00:09:46.656
to do to take advantage
of this great feature?

00:09:47.686 --> 00:09:50.566
Nothing, your app already works.

00:09:51.246 --> 00:09:53.586
It works transparently, you
don't have to change a thing,

00:09:53.796 --> 00:09:56.166
this is my favorite
slide, it's great.

00:09:58.116 --> 00:10:01.596
For IT integrators, what do you
have to do to install this--

00:10:01.596 --> 00:10:03.686
to configure this feature?

00:10:04.196 --> 00:10:07.646
You need support from
your VPN plug-in.

00:10:07.646 --> 00:10:09.326
Now, these are the
same VPN plug-ins

00:10:09.326 --> 00:10:10.756
that you probably already use

00:10:10.806 --> 00:10:13.156
from your third party
VPN vendors.

00:10:13.706 --> 00:10:14.756
They need to have a plug-in

00:10:14.756 --> 00:10:20.336
that supports the
notion of per-app VPN.

00:10:20.546 --> 00:10:22.096
Once that plug-in is installed,

00:10:22.476 --> 00:10:24.626
you then configure
the VPN account

00:10:25.026 --> 00:10:29.516
with a configuration profile
through MDM and then you use MDM

00:10:29.516 --> 00:10:33.986
to tag which apps are allowed
to use that VPN connection.

00:10:34.716 --> 00:10:35.966
More things about networking?

00:10:36.486 --> 00:10:40.416
If you are developing
without using NSURLConnection,

00:10:40.726 --> 00:10:41.916
you'll see a pattern
here by the way.

00:10:42.496 --> 00:10:47.686
If you don't use NSURLConnection
or NSUrlSession, you must--

00:10:47.756 --> 00:10:50.816
you need to be aware
of the presence

00:10:50.816 --> 00:10:52.846
of proxies inside
the enterprise.

00:10:53.766 --> 00:10:57.186
If you are using NSURLConnection
or the new NSURLSession,

00:10:57.396 --> 00:10:58.846
we take care of that
for you, you have to--

00:10:58.896 --> 00:10:59.916
don't have to worry about it.

00:11:00.536 --> 00:11:03.026
But if you're using
say, CFSocketStream

00:11:03.026 --> 00:11:06.226
or UNIX level sockets, you
need to be aware of that.

00:11:06.226 --> 00:11:08.966
Read the API, you probably need
to move some data structures

00:11:08.966 --> 00:11:10.906
around to take care
of the presence

00:11:10.906 --> 00:11:14.246
of proxies in your path.

00:11:14.246 --> 00:11:16.906
And as a final note and this
is not just for enterprise,

00:11:16.906 --> 00:11:19.046
this is just good practice
for an app developer.

00:11:19.916 --> 00:11:23.496
Be conscious of your
app's cellular data usage.

00:11:24.436 --> 00:11:28.286
In iOS 7, we've enhanced
multi-tasking

00:11:28.766 --> 00:11:32.716
so that your app can be woken
up at particular intervals

00:11:32.716 --> 00:11:34.326
or when a push notification
comes in.

00:11:35.096 --> 00:11:37.716
This is great for you to
update the status of your app

00:11:38.486 --> 00:11:39.956
but you need to ask
the question,

00:11:40.256 --> 00:11:41.966
"Should I be doing
this over cellular?"

00:11:42.196 --> 00:11:45.366
If you're going to update
a large amount of data,

00:11:45.916 --> 00:11:48.096
maybe you should defer it to
when the user brings the app

00:11:48.096 --> 00:11:51.116
to UI foreground or
when you are in Wi-Fi.

00:11:51.426 --> 00:11:55.486
So, in an enterprise, it
is especially attractive

00:11:55.656 --> 00:11:58.126
if your app knows
how to behave itself

00:11:58.126 --> 00:12:00.246
and limit the consumption
of cellular data.

00:12:01.236 --> 00:12:05.026
And the way you do that is
you tag your URL request

00:12:05.286 --> 00:12:09.666
with this property,
allowsCellularAccess equals no

00:12:09.936 --> 00:12:13.686
and that-- really, that's it
and that request will not go

00:12:13.686 --> 00:12:16.016
out over cellular, very simple.

00:12:16.536 --> 00:12:20.846
So, that's a short session on
networking in the enterprise.

00:12:21.436 --> 00:12:25.216
Next stop, data security.

00:12:29.536 --> 00:12:32.906
So, data security is very
important in the enterprise.

00:12:34.416 --> 00:12:37.016
One of the things that you'll
notice when you develop apps

00:12:37.016 --> 00:12:39.546
for the enterprise is
the enterprise is really,

00:12:39.546 --> 00:12:41.266
really concerned
about the security

00:12:41.266 --> 00:12:42.646
and privacy of their data.

00:12:43.546 --> 00:12:46.306
And here are some
things that are available

00:12:46.306 --> 00:12:47.466
to you in iOS already.

00:12:48.166 --> 00:12:52.886
So, built into iOS, we have a
great data protection model.

00:12:54.786 --> 00:12:57.416
There are three main
data protection classes

00:12:57.416 --> 00:12:59.986
in iOS, just to review.

00:13:01.016 --> 00:13:03.486
There are some subtle variations
on these, but basically,

00:13:03.486 --> 00:13:05.756
there are three classes
that you can choose from.

00:13:06.176 --> 00:13:09.776
These classes can be applied to
files that you write to flash.

00:13:10.316 --> 00:13:13.866
So you have none which is none,
they're not data protected.

00:13:14.886 --> 00:13:17.396
You have complete
with authentication

00:13:18.276 --> 00:13:21.876
which protects the data
in an encrypted fashion

00:13:21.916 --> 00:13:24.516
until the user enters
their passcode

00:13:24.516 --> 00:13:26.046
for the first time
after a restart.

00:13:26.876 --> 00:13:31.756
And complete, which will
protect your data as long

00:13:31.756 --> 00:13:32.696
as the phone is locked.

00:13:32.896 --> 00:13:35.636
So when the user locks the
phone again, it gets protected.

00:13:35.716 --> 00:13:36.736
Let me illustrate that.

00:13:36.736 --> 00:13:41.806
So, after the device has
restarted, none is readable,

00:13:41.896 --> 00:13:44.336
the others are encrypted,
unreadable by your apps.

00:13:44.756 --> 00:13:48.306
When the user enters
their passcode,

00:13:48.816 --> 00:13:51.056
then all the classes
become available

00:13:51.056 --> 00:13:51.996
for reading and writing.

00:13:51.996 --> 00:13:56.266
When the user locks
the device again,

00:13:56.816 --> 00:13:59.966
that complete class gets
locked while the others

00:13:59.966 --> 00:14:00.996
remain unencrypted.

00:14:01.356 --> 00:14:04.996
So, keep that in mind, this is
the model that you can choose

00:14:04.996 --> 00:14:09.646
from and you can start to
see that this is a good way

00:14:09.646 --> 00:14:12.236
of binning your data
to see which kind

00:14:12.236 --> 00:14:14.636
of sensitivity does
the enterprise have

00:14:14.636 --> 00:14:17.726
about that particular
file and for you to choose

00:14:18.216 --> 00:14:21.306
which class you want
to choose from.

00:14:21.896 --> 00:14:25.176
So, but there's one
thing new in iOS 7

00:14:25.876 --> 00:14:27.466
that we're really proud of.

00:14:27.736 --> 00:14:32.676
We are improving the data
security of all apps in iOS 7

00:14:32.676 --> 00:14:35.116
across the board,
even App Store apps.

00:14:36.056 --> 00:14:38.636
All App Store apps
and enterprise apps

00:14:38.666 --> 00:14:42.326
that are installed in iOS
7 automatically receive the

00:14:42.826 --> 00:14:45.656
complete until first
authentication class,

00:14:45.656 --> 00:14:46.596
the second class.

00:14:47.246 --> 00:14:49.276
What this means is that
for the enterprise,

00:14:49.276 --> 00:14:51.106
for the IT integrators
of the enterprise,

00:14:51.576 --> 00:14:53.996
you can now feel confident
that when you install an app

00:14:53.996 --> 00:14:57.236
from the App Store even,
that that data has some--

00:14:57.236 --> 00:14:59.056
has a greater level
of protection

00:14:59.056 --> 00:15:01.546
in iOS 7 than it did in iOS 6.

00:15:01.686 --> 00:15:03.056
And we do this across the board

00:15:03.276 --> 00:15:07.376
and there's no change
required for most of the apps.

00:15:07.456 --> 00:15:11.846
Also, you may be aware or
not that starting from iOS 6,

00:15:12.066 --> 00:15:15.196
we have FIPS 140-2
certification.

00:15:15.746 --> 00:15:17.406
This is a government
certification

00:15:17.736 --> 00:15:21.046
that certifies the
integrity of our crypto,

00:15:21.046 --> 00:15:24.976
CoreCrypto algorithms and
we're really proud of this.

00:15:25.176 --> 00:15:29.516
So, for app developers,
what do you have to--

00:15:30.136 --> 00:15:32.226
what can you do to
enhance your data security?

00:15:33.016 --> 00:15:37.186
Well, use the protection
complete class when appropriate.

00:15:37.896 --> 00:15:41.276
Ask yourself the question,
if somebody were to be able

00:15:41.276 --> 00:15:42.796
to read this file off a disk--

00:15:42.796 --> 00:15:47.746
off the disk, will that make
my enterprise customer happy

00:15:47.746 --> 00:15:48.106
or not?

00:15:48.846 --> 00:15:50.996
And if the answer is no,

00:15:50.996 --> 00:15:54.466
then please consider using the
File Protection Complete Class.

00:15:56.356 --> 00:15:59.866
There is a small wrinkle
when you do that, of course,

00:16:00.166 --> 00:16:02.916
when the device is locked
and your App gets woken

00:16:02.916 --> 00:16:06.506
up by multi-tasking, you can't
actually write to your database

00:16:06.506 --> 00:16:08.566
because it's unreadable
and unwritable.

00:16:08.566 --> 00:16:11.986
And as I said, there are
some variations to this theme

00:16:11.986 --> 00:16:15.626
but in general you will be woken
up and then you'll discover

00:16:15.626 --> 00:16:18.186
that you can't write to the
files that you need to write.

00:16:19.066 --> 00:16:23.196
So, at this time, consider
what your options are.

00:16:23.546 --> 00:16:28.336
First of all, you can always
write down the fact or write

00:16:28.336 --> 00:16:30.526
to disk the fact that
there is an update

00:16:31.096 --> 00:16:32.796
and the next time the
user launches the app

00:16:32.796 --> 00:16:37.016
in UI foreground, device is
unlocked, go fetch the update.

00:16:37.136 --> 00:16:39.896
Or you can create
a side buffer file

00:16:40.316 --> 00:16:42.386
of maybe the second
protection class, you know,

00:16:42.386 --> 00:16:44.336
complete until first
user authentication

00:16:44.656 --> 00:16:47.246
to buffer your data.

00:16:47.336 --> 00:16:50.306
And then, write that over
to the protected data base

00:16:50.306 --> 00:16:51.806
when your App goes
to foreground.

00:16:52.036 --> 00:16:53.796
But of course, the
question you ask there is,

00:16:53.976 --> 00:16:55.726
should I be doing
that with this data?

00:16:56.206 --> 00:16:58.416
And if the answer is no,
then just write the fact

00:16:58.416 --> 00:17:00.796
that you are-- that you
need to do an update

00:17:00.796 --> 00:17:03.066
when the app comes back
to foreground and do it

00:17:03.066 --> 00:17:04.665
when the app starts back up.

00:17:06.296 --> 00:17:10.076
The keychain has an additional
attribute that you can place

00:17:10.076 --> 00:17:12.396
on the data security
of each item.

00:17:13.026 --> 00:17:14.056
You can assign an app--

00:17:14.056 --> 00:17:16.596
a data security attribute
per keychain item by the way,

00:17:16.675 --> 00:17:18.056
the same classes that
you have up there

00:17:18.596 --> 00:17:21.226
with an additional
feature in there.

00:17:21.776 --> 00:17:24.846
If you'll notice, the
attribute here says accessible

00:17:24.846 --> 00:17:28.406
after first unlock this
device only in the end.

00:17:29.356 --> 00:17:33.066
This helps you to secure
credentials, private keys,

00:17:33.066 --> 00:17:36.956
passwords or whatever from
getting backed up off the device

00:17:37.226 --> 00:17:38.896
and restored to another device.

00:17:39.736 --> 00:17:42.366
Right? The fact that your
keychain items are backed up

00:17:42.366 --> 00:17:45.386
and restored as a great
convenience for end-users

00:17:45.616 --> 00:17:47.326
because you don't
have to log in again.

00:17:47.666 --> 00:17:50.606
But for the enterprise, you
should ask the question,

00:17:51.116 --> 00:17:53.856
if a user logs into this
device which may be managed

00:17:53.856 --> 00:17:57.126
by the enterprise, is it
appropriate for that login

00:17:57.126 --> 00:17:59.876
to transfer to another
device that the user owns

00:18:00.326 --> 00:18:02.246
that may not be managed, right?

00:18:02.726 --> 00:18:05.686
So in many cases, the
answer is no, and you need

00:18:05.686 --> 00:18:10.456
to put this attribute on the
keychain items to prevent backup

00:18:10.456 --> 00:18:13.476
and restore from taking that
credential out of that device.

00:18:13.966 --> 00:18:18.586
And finally, iCloud
Document Sync.

00:18:19.416 --> 00:18:22.406
Now, iCloud Document Sync is
another feature that users love

00:18:23.506 --> 00:18:28.106
but this becomes a
problem for enterprise data

00:18:28.576 --> 00:18:32.226
because sensitive enterprise
data may leak out into the cloud

00:18:32.226 --> 00:18:34.886
and into other unmanaged
and unprotected devices.

00:18:35.936 --> 00:18:38.166
So, the enterprise
does have a restriction

00:18:38.486 --> 00:18:41.816
to disable iCloud document
sync across the whole device.

00:18:42.566 --> 00:18:46.886
And it would be better
if there was a way

00:18:46.886 --> 00:18:49.926
to disable iCloud Document
sync in your app only

00:18:49.926 --> 00:18:51.136
so that the user doesn't have

00:18:51.166 --> 00:18:52.946
to turn off document
sync across the board.

00:18:53.726 --> 00:18:56.076
So, consider adding a--

00:18:56.076 --> 00:18:58.656
the capability of
storing your documents

00:18:58.656 --> 00:19:00.856
in your local documents
folder instead

00:19:00.856 --> 00:19:02.416
of the iCloud document folder

00:19:02.746 --> 00:19:05.146
when your app is configured
for enterprise use.

00:19:05.966 --> 00:19:08.286
But, how do you configure
your app for enterprise use?

00:19:08.286 --> 00:19:10.476
You certainly don't
want to put a UI switch

00:19:10.846 --> 00:19:12.536
to let users turn
off this feature.

00:19:13.476 --> 00:19:15.636
Well, there's a great way
of doing that and I'll talk

00:19:15.636 --> 00:19:17.766
about it a few slides
down so hang in there.

00:19:20.086 --> 00:19:22.036
So, there's data security.

00:19:22.536 --> 00:19:26.236
Let's talk about management.

00:19:27.656 --> 00:19:31.376
When we talk about management
on iOS, we generally talk

00:19:31.376 --> 00:19:34.106
about mobile device
management protocol.

00:19:34.836 --> 00:19:38.606
This is a very powerful protocol
that allows an enterprise

00:19:38.916 --> 00:19:41.656
to manage and administer
thousands

00:19:41.656 --> 00:19:44.126
of iOS devices over the air.

00:19:45.346 --> 00:19:50.036
And some of the things MDM
can do, it can set passcode

00:19:50.236 --> 00:19:52.846
and security policies,
like you'd have

00:19:52.846 --> 00:19:54.936
to have a certain
number of letters

00:19:54.936 --> 00:19:56.606
in your passcode
and stuff like that.

00:19:57.436 --> 00:20:03.426
It can install accounts
including email, calendar, VPN,

00:20:03.426 --> 00:20:06.776
you know, Wi-Fi accounts,
any-- all kinds of accounts.

00:20:07.866 --> 00:20:12.756
It can remotely erase your
device and it can, of course,

00:20:13.046 --> 00:20:19.396
great news for you, install
and remove apps over the air.

00:20:19.396 --> 00:20:23.156
Now, the accounts and
apps that are installed

00:20:23.156 --> 00:20:26.836
by MDM are called Managed
Apps, Accounts and Apps.

00:20:27.346 --> 00:20:29.736
So things that are
installed with MDM are Managed

00:20:30.346 --> 00:20:32.966
and the things that
users install

00:20:32.966 --> 00:20:34.336
in the device are
called Unmanaged.

00:20:35.736 --> 00:20:39.246
So, Managed Apps and Accounts.

00:20:40.046 --> 00:20:45.516
So in iOS 7, we're
introducing another great way

00:20:45.516 --> 00:20:48.566
to manage the data inside your
managed apps and accounts,

00:20:48.926 --> 00:20:51.156
we call it Managed Open In.

00:20:52.216 --> 00:20:55.796
Managed Open In prevents the
unintentional data movement

00:20:56.546 --> 00:21:00.246
between managed and
unmanaged apps and accounts.

00:21:01.146 --> 00:21:05.466
Managed apps-- managed data stay
inside managed apps and accounts

00:21:05.936 --> 00:21:08.156
and they don't leak out
to the unmanaged ones.

00:21:08.846 --> 00:21:12.166
So, to show you a demo of
this, I'm going to call Victor

00:21:13.276 --> 00:21:16.596
to show you a little
demo of Managed Open In.

00:21:16.806 --> 00:21:17.356
>> Great.

00:21:17.856 --> 00:21:22.776
[ Applause ]

00:21:23.276 --> 00:21:24.056
Thanks Dave.

00:21:24.166 --> 00:21:25.106
All right.

00:21:25.106 --> 00:21:28.726
So here, we have an iOS
device which is running iOS 7

00:21:28.726 --> 00:21:31.616
and it's being managed by the
enterprise via an MDM server.

00:21:32.026 --> 00:21:33.546
You notice we have number

00:21:33.546 --> 00:21:35.276
of applications installed
on this device.

00:21:35.716 --> 00:21:38.316
But specifically of
note that the top of row

00:21:38.316 --> 00:21:40.866
of applications were
ones that were installed

00:21:41.236 --> 00:21:43.896
by the enterprise via
MDM, and the second row

00:21:43.896 --> 00:21:45.676
of applications were
installed by the user,

00:21:45.866 --> 00:21:46.966
so we have a bit of a mix here.

00:21:47.916 --> 00:21:50.156
So normally, when the user might
say or do something like open

00:21:50.156 --> 00:21:55.556
up mail, tap on a message and
view an attachment and want

00:21:55.556 --> 00:21:58.086
to send that attachment
to another application.

00:21:58.266 --> 00:22:01.806
If we tap the share sheet,
you'll notice that the list

00:22:01.806 --> 00:22:03.456
of applications here is the same

00:22:03.456 --> 00:22:04.836
as what we saw in
the Home screen.

00:22:04.836 --> 00:22:08.016
Long list, we've got drop box
present, a long list of apps

00:22:08.076 --> 00:22:11.056
and that might-- that might not
be desirable in the enterprise.

00:22:11.786 --> 00:22:16.286
So, since this email account
is a managed Exchange account,

00:22:16.426 --> 00:22:18.766
we have the ability to
enable Managed Open In.

00:22:19.196 --> 00:22:21.826
So, I'm going to go ahead
and push that change

00:22:21.826 --> 00:22:24.776
down to the device,
we'll give it a moment

00:22:24.776 --> 00:22:26.826
to actually take effect.

00:22:27.606 --> 00:22:30.566
And now, when the user goes
back to the share sheet,

00:22:30.796 --> 00:22:33.166
what you'll notice is that
there's a much shorter list

00:22:33.166 --> 00:22:35.946
of applications present,
it's only those applications

00:22:35.946 --> 00:22:37.486
that were installed
by the enterprise.

00:22:37.896 --> 00:22:39.836
Thus, limiting the
user's ability to--

00:22:44.606 --> 00:22:47.936
thus limiting the user's ability
to try and send that attachment

00:22:47.936 --> 00:22:50.506
to a non enterprise-installed
application

00:22:50.506 --> 00:22:52.286
and that is Managed Open In.

00:22:52.286 --> 00:22:52.746
Back to you Dave.

00:22:52.906 --> 00:22:53.656
>> Thanks Victor.

00:22:55.216 --> 00:23:01.706
So, Managed Open In works
with both apps and accounts.

00:23:02.116 --> 00:23:05.566
So, when you tap an
attachment and there's an--

00:23:05.566 --> 00:23:09.106
there's a mail action that
you can tap on, when you tap

00:23:09.106 --> 00:23:11.736
on that mail action,
if the attachment came

00:23:11.736 --> 00:23:16.016
from a managed account,
the email accounts

00:23:16.016 --> 00:23:19.656
that you can choose to send
it from are also filtered

00:23:19.656 --> 00:23:20.886
down to the managed accounts.

00:23:21.636 --> 00:23:24.646
So, that's a-- that's a very
cool feature, and it works

00:23:24.646 --> 00:23:27.266
with all kinds of
accounts including mail

00:23:27.266 --> 00:23:28.206
and calendar attachment.

00:23:28.586 --> 00:23:30.886
So that's Managed Open In.

00:23:31.986 --> 00:23:34.066
Next up, a great new feature

00:23:34.066 --> 00:23:37.246
in iOS 7 called App
Configuration and Feedback.

00:23:38.576 --> 00:23:39.826
So, what is this?

00:23:40.976 --> 00:23:45.166
This is a way to reduce your
support calls, IT integrators,

00:23:46.226 --> 00:23:48.286
by configuring apps
that you install.

00:23:48.546 --> 00:23:54.426
And the way to do this is an
MDM server can send a dictionary

00:23:54.796 --> 00:23:57.626
into a managed app
to configure it.

00:23:58.266 --> 00:24:02.016
Now, the dictionary that
you push down appears

00:24:02.166 --> 00:24:05.816
in the NSUserDefaults of that
app, it's very convenient.

00:24:07.246 --> 00:24:11.016
And the feedback part of this
allows an app to write something

00:24:11.016 --> 00:24:16.006
into the NSUserDefaults that
can be read by the MDM Server

00:24:16.006 --> 00:24:20.496
to report-- to report back
a status out of band, right?

00:24:21.726 --> 00:24:22.766
It's very simple.

00:24:22.766 --> 00:24:25.076
As an app developer here's--
here is all you need now.

00:24:25.436 --> 00:24:28.216
This is very similar
to what happens

00:24:28.216 --> 00:24:29.386
if you use a settings bundle.

00:24:29.476 --> 00:24:31.466
So, if you already
have a settings bundle

00:24:31.626 --> 00:24:34.886
that allows the user
to go to Settings

00:24:34.886 --> 00:24:37.356
and configure your apps, this
is very, very similar to that.

00:24:37.706 --> 00:24:38.386
Excuse me.

00:24:39.386 --> 00:24:42.136
Your app needs to
read the dictionary

00:24:42.136 --> 00:24:48.536
from a particular magic key:
com.apple.configuration.managed,

00:24:48.586 --> 00:24:51.446
that's where the dictionary
will appear that's pushed

00:24:51.446 --> 00:24:52.506
down by the enterprise.

00:24:53.896 --> 00:24:57.606
When you write your feedback
out, write it to com--

00:24:57.906 --> 00:25:02.336
NSUserDefaults key
com.apple.feedback.managed.

00:25:02.716 --> 00:25:05.216
And when the MDM
Server queries your app,

00:25:05.216 --> 00:25:07.126
it will find your
dictionary there.

00:25:08.506 --> 00:25:11.846
Listen to this notification, the
defaults did change notification

00:25:12.406 --> 00:25:15.576
to be aware that the
configuration has changed

00:25:15.856 --> 00:25:17.536
or that the server
has read your feedback

00:25:17.536 --> 00:25:19.036
and erased it to make it nil.

00:25:19.686 --> 00:25:21.606
You can be aware of that
by listening to this.

00:25:21.956 --> 00:25:25.296
And your app may not be
running, of course, when you--

00:25:25.296 --> 00:25:26.696
when the configuration changes

00:25:26.696 --> 00:25:28.466
or when the feedback
is retrieved and erased

00:25:28.466 --> 00:25:29.926
from your NSUserDefaults.

00:25:30.376 --> 00:25:33.856
So, read the configuration
every time your app starts up.

00:25:34.106 --> 00:25:36.506
Again, the same things
that you've already done

00:25:36.506 --> 00:25:39.166
for Settings bundles,
basically, the same idea.

00:25:40.086 --> 00:25:42.356
So, in order to show
you how this works,

00:25:42.356 --> 00:25:44.996
I'm going to ask Victor
to come back up here

00:25:44.996 --> 00:25:47.466
to give you a little demo.

00:25:48.416 --> 00:25:49.236
>> Thanks Dave.

00:25:52.376 --> 00:25:54.196
So here, we have a
sample application

00:25:54.196 --> 00:25:56.486
that was developed using app
configuration and feedback

00:25:56.926 --> 00:25:59.306
and you'll notice at the top
here, we've got a URL bar,

00:25:59.306 --> 00:26:02.226
we've got a success and failure
values that were tracking.

00:26:02.466 --> 00:26:04.446
And in the center,
we've got a UIWebView.

00:26:04.806 --> 00:26:06.106
And also at the bottom
here, take note,

00:26:06.106 --> 00:26:08.056
we have a Cloud document
sync switch.

00:26:08.256 --> 00:26:09.716
Maybe not something you
might want to add to the UI

00:26:09.716 --> 00:26:12.436
of your app but for the
purposes of our sample demo,

00:26:12.436 --> 00:26:13.856
I think it's appropriate to use.

00:26:15.046 --> 00:26:16.986
So, you might notice at
the top of the application,

00:26:17.126 --> 00:26:20.166
we have URL that might
not work correctly.

00:26:20.516 --> 00:26:23.346
Let's start tap the go button
here and see what happens.

00:26:24.186 --> 00:26:25.616
Our app is not quite
working correctly,

00:26:25.616 --> 00:26:27.976
we got a failure
there, no web page loads

00:26:27.976 --> 00:26:29.496
in the center, we've
got a problem.

00:26:29.496 --> 00:26:31.796
This might be something
your user hits if they want

00:26:32.116 --> 00:26:34.736
to load their login information
for their enterprise app

00:26:34.736 --> 00:26:37.496
or help documentation and
if we try and connect,

00:26:38.286 --> 00:26:39.346
we just keep hitting errors.

00:26:39.816 --> 00:26:41.526
Wouldn't it be nice
if we had a mechanism

00:26:41.706 --> 00:26:44.386
through which we could update
that, reset it, correct it

00:26:44.386 --> 00:26:47.716
and get this app back
into a working state?

00:26:48.476 --> 00:26:51.586
So since the URL
value is something

00:26:51.756 --> 00:26:54.756
that I configured using app
configuration, I could push

00:26:54.756 --> 00:26:58.546
down the change to that app
to update the URL and see

00:26:58.546 --> 00:26:59.496
if we can get things working.

00:26:59.496 --> 00:27:02.016
So, I'm going to go ahead
and push down that change,

00:27:02.846 --> 00:27:05.066
give it a moment for the
device to receive it.

00:27:05.346 --> 00:27:07.786
You noticed almost immediately,
the URL bar updates,

00:27:08.216 --> 00:27:11.416
you noticed almost immediately
the URL string updates

00:27:11.416 --> 00:27:14.336
with a much more valid
looking URL and also note

00:27:14.336 --> 00:27:16.106
that the UI Switch
is now disabled.

00:27:16.106 --> 00:27:18.246
So, we've done a couple of
really powerful things here

00:27:18.246 --> 00:27:20.616
to get this app into a
better state and let's see

00:27:20.616 --> 00:27:25.096
as a test here, I will tap,
go and our webpage loads

00:27:25.096 --> 00:27:27.636
in the UIWebView as expected
which is-- which is excellent.

00:27:28.136 --> 00:27:30.596
Now, we have these-- so
that's the configuration side

00:27:30.596 --> 00:27:32.976
of things, what about the
feedback side of things?

00:27:33.066 --> 00:27:35.356
We've hit, you know,
three errors on this app.

00:27:35.586 --> 00:27:37.526
It might be useful for the
enterprise to find that out

00:27:37.686 --> 00:27:40.926
if users are having problems or
issues and we can have the MDM

00:27:40.926 --> 00:27:46.056
to sort of pull that information
from the apps and collect it

00:27:46.056 --> 00:27:47.686
and work with that data.

00:27:48.056 --> 00:27:52.286
Now, if I place a command to
this app from the MDM Server

00:27:52.946 --> 00:27:55.346
to fetch that error information.

00:27:55.546 --> 00:27:58.086
What we'll see here is
that not only the failures

00:27:58.086 --> 00:28:01.136
but the success values
were pulled out of the app,

00:28:01.136 --> 00:28:04.046
sent back to the MDM Server
for evaluation by the IT Staff.

00:28:04.046 --> 00:28:06.596
But also, the values
were set back to zero

00:28:06.796 --> 00:28:10.446
so that any future polls for
that information can be clean

00:28:10.446 --> 00:28:11.736
and updated and evaluated

00:28:11.736 --> 00:28:13.726
between the last two times
the information was pulled.

00:28:14.116 --> 00:28:16.046
And that is app configuration
and feedback.

00:28:16.426 --> 00:28:17.326
Back to you Dave.

00:28:17.786 --> 00:28:18.516
>> Thank you Victor.

00:28:22.666 --> 00:28:24.936
So app configuration
and feedback,

00:28:25.116 --> 00:28:28.166
very simple feature,
very powerful.

00:28:28.986 --> 00:28:32.386
For IT integrators,
this is invaluable

00:28:32.386 --> 00:28:35.306
to configure the apps
in your enterprise.

00:28:35.566 --> 00:28:37.536
You need to look for
apps that support this.

00:28:38.056 --> 00:28:40.266
Now normally, you would
send out apps to your users

00:28:40.266 --> 00:28:42.486
and then send them a email
or something that says, "Hey,

00:28:42.486 --> 00:28:44.646
tap this, tap that,
type this in, type that"

00:28:44.646 --> 00:28:48.136
and you get you know--
and you get support calls.

00:28:48.786 --> 00:28:52.516
With app configuration, you
can prepare the dictionary

00:28:52.966 --> 00:28:55.426
for that app and
send it to the users

00:28:55.426 --> 00:28:56.576
without their intervention.

00:28:56.876 --> 00:28:59.296
The first time they launch that
app, it's already configured.

00:28:59.766 --> 00:29:03.846
Let's take a closer look at
what's going on under the--

00:29:03.846 --> 00:29:04.606
under the covers here.

00:29:05.176 --> 00:29:12.626
So, I added this notification
observer in viewDidLoad.

00:29:12.626 --> 00:29:16.576
You could add this view
will appear or, you know,

00:29:16.576 --> 00:29:18.546
in your apps delegate or
wherever it's appropriate

00:29:18.546 --> 00:29:19.866
for you handle the event.

00:29:20.706 --> 00:29:24.256
So, the first thing you
notice is I added an observer

00:29:24.256 --> 00:29:26.416
for NSUseDefaultsDidChange,

00:29:27.116 --> 00:29:30.346
always add the notification
observer before reading the

00:29:30.346 --> 00:29:33.036
values, so that you
don't miss an update.

00:29:33.786 --> 00:29:36.776
And when that notification
fires,

00:29:37.126 --> 00:29:39.046
what this app will do
is it will call this

00:29:39.046 --> 00:29:40.656
readDefaultsValues method.

00:29:42.016 --> 00:29:45.076
And once that's done, I actually
call the read defaults values

00:29:45.076 --> 00:29:46.576
method to read it at least once.

00:29:48.876 --> 00:29:53.116
The readDefaultValues method
does what you probably will do

00:29:53.116 --> 00:29:55.976
if you are using a
settings bundle is to read

00:29:55.976 --> 00:29:58.476
that magic key, magic
dictionary column.apple.

00:29:58.696 --> 00:30:02.306
configuration.managed, and
then it picks apart the keys

00:30:02.356 --> 00:30:03.776
and the values from
that dictionary.

00:30:04.776 --> 00:30:08.666
Notice that I validate
the values here so I pick

00:30:08.666 --> 00:30:11.206
out the value under
the key serverURL,

00:30:11.906 --> 00:30:13.486
make sure it's a string first.

00:30:13.896 --> 00:30:15.336
This is not a very
string validation

00:30:15.336 --> 00:30:18.566
but it's some kind validation
before accepting the URL.

00:30:19.746 --> 00:30:22.126
If a URL is not found
in the dictionary,

00:30:22.356 --> 00:30:24.226
make sure you provide
a default value

00:30:24.226 --> 00:30:25.856
that is sensible
even if it's nil.

00:30:26.466 --> 00:30:29.016
So, if that's not
available, set it to something

00:30:29.306 --> 00:30:30.836
that is reasonable default.

00:30:32.976 --> 00:30:36.936
So, for the feedback
part, what I've--

00:30:36.976 --> 00:30:41.476
what we've done here is to have
a little feedback-writing piece

00:30:41.476 --> 00:30:44.976
of code inside the increment
success and failures.

00:30:45.606 --> 00:30:48.286
So, every time the success and
failure count is incremented,

00:30:48.906 --> 00:30:52.196
we create-- we try to read
the feedback dictionary

00:30:52.196 --> 00:30:53.206
that already exists.

00:30:53.426 --> 00:30:56.226
If one doesn't exist, we create
one, a mutable dictionary

00:30:56.986 --> 00:31:01.256
under that magic key
com.apple.feedback.managed.

00:31:01.836 --> 00:31:06.346
We then write the value of the
success count as a key under--

00:31:06.346 --> 00:31:08.706
into this dictionary
under a well-known key.

00:31:08.706 --> 00:31:11.506
In this case, successCount,
and that's it.

00:31:11.506 --> 00:31:13.356
We just write it back
to NSUserDefaults

00:31:13.676 --> 00:31:16.316
and it just sits there until
the MDM Server picks it up.

00:31:16.906 --> 00:31:17.636
It's really simple.

00:31:19.466 --> 00:31:22.246
So, what can you use
app configuration for?

00:31:23.556 --> 00:31:25.696
Well, settings and
preferences of course.

00:31:26.346 --> 00:31:29.346
You can set your app UI settings
from here, the same kind

00:31:29.346 --> 00:31:31.526
of things that you would
set in your settings bundle

00:31:32.336 --> 00:31:35.236
but very useful thing
to setup here: URLs.

00:31:35.426 --> 00:31:39.376
URLs are very, very
powerful things to configure

00:31:39.376 --> 00:31:40.956
with the server and
you can bootstrap a lot

00:31:40.956 --> 00:31:42.076
of things using URLs.

00:31:42.956 --> 00:31:45.886
And here is where you put
the disable iCloud document

00:31:45.886 --> 00:31:46.576
sync switch.

00:31:47.206 --> 00:31:50.206
So, this allows you to
disable iCloud document sync

00:31:50.206 --> 00:31:52.086
in an enterprise
deployment situation

00:31:52.256 --> 00:31:55.256
without exposing
a user facing UI.

00:31:57.816 --> 00:32:01.956
Some things to note about this
configuration, it is stored

00:32:01.956 --> 00:32:04.266
as file protection
none just as the rest

00:32:04.266 --> 00:32:05.676
of your NSUserDefaults are.

00:32:06.596 --> 00:32:09.226
So, no passwords or
private keys please.

00:32:09.736 --> 00:32:13.686
You need to document your
dictionary keys, of course,

00:32:13.796 --> 00:32:16.696
so that the enterprise
can configure your app.

00:32:17.256 --> 00:32:19.576
And specify what
kind of data types

00:32:19.576 --> 00:32:24.066
and the valid value
ranges that you accept.

00:32:24.066 --> 00:32:27.876
And validate all the types
and values that you get.

00:32:27.876 --> 00:32:29.446
From your app's perspective,

00:32:29.726 --> 00:32:31.976
the enterprise server is
an unknown third party.

00:32:31.976 --> 00:32:33.746
They are giving you
a dictionary that--

00:32:33.746 --> 00:32:35.156
that your app is
supposed to ingest,

00:32:35.416 --> 00:32:37.286
make sure you validate
the content.

00:32:37.766 --> 00:32:42.566
And of course, keep it small,
as anything that you put

00:32:42.566 --> 00:32:44.026
in your NSUserDefaults.

00:32:44.786 --> 00:32:48.096
You're going to read your user
defaults every time your app

00:32:48.096 --> 00:32:50.726
starts up and every time it
changes so keep it small.

00:32:50.726 --> 00:32:53.986
No documents or images or little
sound files or things like that

00:32:53.986 --> 00:32:58.156
in there, put the URLs in
there and read the assets

00:32:58.156 --> 00:32:59.736
when your app starts up.

00:33:00.956 --> 00:33:03.756
Once again, a reminder,
your app may not be running

00:33:03.756 --> 00:33:05.136
so read this every time.

00:33:06.496 --> 00:33:09.136
For feedback, what's
useful to put in there?

00:33:09.746 --> 00:33:12.846
As you saw, errors and user
statistics are very useful.

00:33:13.566 --> 00:33:17.436
Again, if your app can't talk
to the server, they can't report

00:33:17.436 --> 00:33:20.076
that they can't talk with the
server so this is a good place

00:33:20.076 --> 00:33:21.466
to put that information in.

00:33:21.466 --> 00:33:24.436
So I, you know, I can't reach
that URL, here is an error.

00:33:25.446 --> 00:33:27.096
Aggregate your reports.

00:33:27.366 --> 00:33:30.416
Do not log, because it will
grow without bound and again,

00:33:30.416 --> 00:33:32.156
this belongs in your
NSUserDefaults

00:33:32.156 --> 00:33:33.876
and it needs to be small.

00:33:34.736 --> 00:33:38.856
Document your dictionary keys so
that the enterprise knows what

00:33:38.856 --> 00:33:41.246
to look for and keep it small.

00:33:41.246 --> 00:33:43.276
It goes into the same
place that your--

00:33:43.276 --> 00:33:46.796
all the rest of your defaults
go in your NSUserDefaults.

00:33:47.676 --> 00:33:50.546
Your app might not be running
when the feedback is retrieved

00:33:50.546 --> 00:33:54.456
and very importantly,
respect your user's privacy.

00:33:55.066 --> 00:33:56.126
Before you send

00:33:56.126 --> 00:33:58.416
up any personally
identifiable information,

00:33:59.106 --> 00:34:02.116
things like location,
things like that,

00:34:02.116 --> 00:34:05.546
be sure that you are legally
allowed to do this and,

00:34:05.546 --> 00:34:09.466
of course, respect what the
user expects your app to report

00:34:09.795 --> 00:34:12.106
and preserve the user privacy.

00:34:12.335 --> 00:34:14.235
Your users will thank
you for that.

00:34:15.866 --> 00:34:19.516
For IT Integrators,
app configuration

00:34:19.516 --> 00:34:22.085
and feedback amounts to a
couple of new MDM commands

00:34:22.565 --> 00:34:27.606
so what you need to do
is to use these commands

00:34:27.606 --> 00:34:31.906
to configure your user's
devices as early as possible.

00:34:32.755 --> 00:34:35.916
So, there is an extension
to the app install command

00:34:36.116 --> 00:34:39.156
that allows you to add a
configuration dictionary inside

00:34:39.156 --> 00:34:40.536
the app installation request.

00:34:41.386 --> 00:34:44.856
So, do that if possible so that
the first time the user taps

00:34:44.856 --> 00:34:46.686
on the app, it's
already preconfigured.

00:34:47.396 --> 00:34:49.726
You can, of course,
refresh the configuration

00:34:49.726 --> 00:34:51.176
as on an ongoing basis.

00:34:52.196 --> 00:34:55.416
And use the feedback service
to detect configuration errors.

00:34:56.726 --> 00:34:58.746
All right, so that's app
configuration and feedback.

00:34:59.926 --> 00:35:02.466
Next, fonts.

00:35:03.286 --> 00:35:05.386
We can now install
fonts in iOS 7,

00:35:06.266 --> 00:35:08.116
they are installed using
configuration profiles.

00:35:09.416 --> 00:35:11.166
So as an app developer,

00:35:11.456 --> 00:35:14.006
this means that the
font list may change

00:35:14.006 --> 00:35:16.536
as your app is running
and you need to listen

00:35:16.536 --> 00:35:19.886
to this notification
to detect that event.

00:35:20.766 --> 00:35:24.806
And of course, this also means
that your app may have to deal

00:35:24.806 --> 00:35:28.076
with missing fonts, et cetera,
all that fun stuff that comes

00:35:28.076 --> 00:35:30.256
with a system that
has installable fonts.

00:35:31.286 --> 00:35:34.236
One of the things about
fonts in the enterprise is

00:35:34.236 --> 00:35:37.596
that you are very likely
to encounter custom fonts

00:35:37.686 --> 00:35:41.476
in an enterprise because an
enterprise will probably have a

00:35:41.476 --> 00:35:43.566
corporate identity
font of some sort

00:35:43.566 --> 00:35:46.426
that they will install
in every device.

00:35:46.786 --> 00:35:49.146
So, your app needs to
be able to adopt to that

00:35:49.146 --> 00:35:51.736
and at least use the fonts
that are installed to--

00:35:51.736 --> 00:35:54.286
in your documents and et cetera.

00:35:55.126 --> 00:35:55.936
So, that's fonts.

00:35:56.066 --> 00:35:59.796
Next, I want to highlight a
feature that is very popular

00:35:59.796 --> 00:36:01.646
in certain industries
in the enterprise

00:36:02.176 --> 00:36:05.006
and that's single app mode.

00:36:05.136 --> 00:36:09.966
So, you may not know this, but
MDM can put certain devices

00:36:10.246 --> 00:36:12.696
into Single App Mode which means

00:36:12.696 --> 00:36:15.226
that the device will run
one app and one app only.

00:36:16.276 --> 00:36:20.426
This mode is very resilient
you can restart the device

00:36:20.426 --> 00:36:21.636
and it would launch that app.

00:36:22.016 --> 00:36:24.086
The app can crash and it
will just keep launching

00:36:24.086 --> 00:36:26.406
and just keep launching
and crash again

00:36:27.966 --> 00:36:29.196
which is a good thing.

00:36:29.246 --> 00:36:32.396
You want this behavior
because this makes it perfect

00:36:32.396 --> 00:36:38.666
for Kiosks, for point of sale
like this, for exam taking,

00:36:38.666 --> 00:36:42.406
for example, or a whole host
of different applications.

00:36:43.206 --> 00:36:46.396
So, this already an
iOS but new in iOS 7,

00:36:46.836 --> 00:36:50.246
were adding an app-requested
single app mode.

00:36:51.486 --> 00:36:54.266
So, what's this?

00:36:54.696 --> 00:36:57.236
Some of you already
know what this is.

00:36:58.356 --> 00:37:02.556
So, app-requested single app
mode allows an MDM Server

00:37:02.556 --> 00:37:05.206
to pre-authorize a
set of app bundle IDs

00:37:05.206 --> 00:37:06.706
to go into single app mode.

00:37:07.296 --> 00:37:12.406
So-- and all the app has
to do is to call this API,

00:37:12.686 --> 00:37:14.136
so that first one
you see up there,

00:37:14.416 --> 00:37:17.956
UI accessibility request
guided access session

00:37:17.956 --> 00:37:20.836
that there is the parameter
you can put in there to say yes

00:37:20.836 --> 00:37:22.846
or no and enter a
session or exit a session.

00:37:23.696 --> 00:37:26.016
If successful, your
app will be locked

00:37:26.016 --> 00:37:28.096
into a single app
mode, all right?

00:37:28.396 --> 00:37:30.256
And when your app
is done with it,

00:37:30.256 --> 00:37:33.656
they can call the same API
again to get out with the--

00:37:33.656 --> 00:37:34.606
with the Boolean false.

00:37:35.406 --> 00:37:38.496
This is great for,
for example, exams.

00:37:38.746 --> 00:37:41.556
So, you have an exam
app, examination starts,

00:37:41.556 --> 00:37:43.566
the new student logs
in, you got locked in,

00:37:44.146 --> 00:37:45.716
and the exam is over,
it locks out.

00:37:46.666 --> 00:37:51.196
You can use the second API up
there, is guided access enabled,

00:37:51.776 --> 00:37:54.096
to detect whether your
app is in this mode.

00:37:54.596 --> 00:37:56.566
And you can use a notification

00:37:56.566 --> 00:37:59.626
to detect transitions
between states.

00:38:00.806 --> 00:38:04.756
So again, this state is very
resilient, your app will get--

00:38:05.326 --> 00:38:07.836
the device will only run
your app until you exit.

00:38:08.176 --> 00:38:10.316
So, make sure you have
an escape strategy

00:38:10.696 --> 00:38:13.556
in case your app crashes or
the user powers down the device

00:38:13.556 --> 00:38:14.566
and starts back up again.

00:38:15.106 --> 00:38:16.746
Try not to lock the user

00:38:16.746 --> 00:38:19.346
into your app forever,
but exit gracefully.

00:38:19.916 --> 00:38:22.956
OK. So, that's single app mode.

00:38:24.196 --> 00:38:27.986
Next up, app revocation.

00:38:28.676 --> 00:38:39.406
In iOS 7 and OS X Mavericks,
we are supporting a new model

00:38:39.406 --> 00:38:42.506
of volume purchasing
based on app assignment.

00:38:43.856 --> 00:38:47.166
If you're not aware of this,
it allows an enterprise

00:38:47.166 --> 00:38:49.126
to purchase an app
license essentially,

00:38:49.666 --> 00:38:53.876
assign it to a user's device
or a user on a iOS device

00:38:53.876 --> 00:38:56.436
and then later, revoke
that license from that--

00:38:56.436 --> 00:38:58.496
from that user and assign
it to some other user.

00:38:59.736 --> 00:39:04.316
So, what happens is your
app may be installed

00:39:04.316 --> 00:39:07.726
on some user's device and
then, the right to run

00:39:07.726 --> 00:39:09.926
that app may be revoked
from that device.

00:39:10.066 --> 00:39:11.436
So, what happens then?

00:39:12.266 --> 00:39:16.596
When that happens, your app
license "is going to expire."

00:39:17.376 --> 00:39:21.016
The iOS-- iOS will run the app.

00:39:21.016 --> 00:39:22.806
Well, first of all,
iOS will tell the user

00:39:22.806 --> 00:39:26.216
that that app has been revoked
and give them the opportunity

00:39:26.216 --> 00:39:27.716
to buy the app from
the app store.

00:39:28.836 --> 00:39:33.006
And it will continue to
run that app for 30 days.

00:39:33.926 --> 00:39:37.176
At the end of the 30 days, iOS
will no longer launch your app

00:39:37.936 --> 00:39:40.336
but instead, will launch
an alert or show an alert

00:39:40.336 --> 00:39:41.736
that says you got
to buy this app

00:39:41.736 --> 00:39:43.526
from the App Store
to continue using it.

00:39:44.106 --> 00:39:46.476
The reason we give the
grace period there is

00:39:46.476 --> 00:39:48.166
so that the user
doesn't lose their data

00:39:48.166 --> 00:39:50.806
and to give them an opportunity
to buy from the app store.

00:39:51.186 --> 00:39:55.926
If you're checking for receipts
already, the expiry date is

00:39:55.926 --> 00:39:58.296
on the receipt, so you might
want to check with that too.

00:39:58.596 --> 00:39:59.976
There is the session on
the receipt checking,

00:39:59.976 --> 00:40:02.596
I recommend it-- I
recommended you go to that one

00:40:02.596 --> 00:40:05.556
and we'll cite that at the
end of the presentation.

00:40:06.096 --> 00:40:09.836
So, that's management.

00:40:12.446 --> 00:40:18.186
So, as you can see, iOS 7
brings a lot to the table in all

00:40:18.186 --> 00:40:21.476
of these fields and there's
a lot that you can do,

00:40:21.746 --> 00:40:23.856
with very little
effort in some cases,

00:40:24.196 --> 00:40:26.366
to extend you app just
a little bit more,

00:40:27.046 --> 00:40:29.526
to make it very attractive
to the enterprise.

00:40:30.886 --> 00:40:36.436
Now, I want to talk a bit about
the philosophy that we have

00:40:36.436 --> 00:40:40.126
on iOS about enterprise apps.

00:40:40.896 --> 00:40:46.166
There are many cases where
an app developer who wants

00:40:46.166 --> 00:40:48.426
to put their app into
the enterprise just wants

00:40:48.426 --> 00:40:49.836
to tag something on in the end.

00:40:50.086 --> 00:40:51.796
I'm just going to wrap
my app in something,

00:40:51.796 --> 00:40:54.226
I'm going to add some
library to it and it's going

00:40:54.226 --> 00:40:54.996
to make it all better.

00:40:55.366 --> 00:40:58.396
It's going to make it
secure and stuff like that.

00:40:58.576 --> 00:41:05.726
And we don't-- we encourage
you to do something different,

00:41:07.396 --> 00:41:11.966
we encourage you to
build the next generation

00:41:12.516 --> 00:41:15.096
of enterprise apps, right?

00:41:15.516 --> 00:41:22.196
And what that means is we
would like you to build this--

00:41:22.196 --> 00:41:24.236
the iOS features into your app.

00:41:24.556 --> 00:41:26.876
The iOS 7 features,
they are like, you know,

00:41:26.876 --> 00:41:32.716
a Single Sign On, data
protection, Managed Open In,

00:41:34.096 --> 00:41:36.476
configuration or feedback for
app developers, of course.

00:41:37.056 --> 00:41:41.836
Build this right into your
app so that as iOS grows

00:41:42.146 --> 00:41:45.606
and additional features are
added, your app is ready to go

00:41:45.606 --> 00:41:50.146
into the enterprise,
to grow along with it.

00:41:50.686 --> 00:41:53.716
IT Integrators, I encourage
you to look for apps

00:41:53.716 --> 00:41:57.396
that actually support these
iOS 7 features inside their app

00:41:57.676 --> 00:42:00.036
natively and not just
tacked on at the end.

00:42:00.546 --> 00:42:02.236
These are the apps
that are going

00:42:02.236 --> 00:42:05.766
to serve your enterprise very
well into the next decade.

00:42:06.286 --> 00:42:17.186
So, to sum up, if you
ask me, you know Dave,

00:42:17.186 --> 00:42:20.976
as an app developer, what three
things can I add or do to my app

00:42:21.606 --> 00:42:24.446
to make it that much more
attractive to the enterprise.

00:42:25.736 --> 00:42:27.356
I will say these three things.

00:42:27.866 --> 00:42:32.536
First, support app
configuration and feedback.

00:42:33.146 --> 00:42:35.956
It's a very light-weight
extension to your app

00:42:36.486 --> 00:42:40.426
that will greatly help
the IT Integrators

00:42:40.886 --> 00:42:42.766
to deploy your app correctly

00:42:43.196 --> 00:42:45.956
and to save them a
lot of support calls.

00:42:48.036 --> 00:42:52.596
Next, use NSURLConnection
and NSURLSession.

00:42:52.806 --> 00:42:57.206
These are your best bets to
get an app into the enterprise

00:42:57.206 --> 00:43:02.416
and have it work correctly
the first time, all right?

00:43:02.416 --> 00:43:03.606
I know in some cases, you can't,

00:43:04.136 --> 00:43:07.356
but if you can, please
do use that.

00:43:07.356 --> 00:43:12.376
And finally, build in data
protection and security

00:43:12.736 --> 00:43:15.026
into your app, don't leave
it as an afterthought.

00:43:16.216 --> 00:43:18.136
When you write files to
disk, consider what kind

00:43:18.136 --> 00:43:19.716
of data protection
you're going to use.

00:43:20.006 --> 00:43:21.816
When you write items
into the keychain,

00:43:22.626 --> 00:43:25.816
think about what the use cases
might be in the enterprise.

00:43:28.326 --> 00:43:30.346
All right, so for
more information,

00:43:31.176 --> 00:43:37.846
our evangelist is Paul Marcos
and here are two great pages

00:43:37.846 --> 00:43:40.076
on our Apple website
for you to get started.

00:43:40.076 --> 00:43:43.266
So, if you're new to this
enterprise app development

00:43:43.266 --> 00:43:46.696
world, there are some
great articles and guides

00:43:47.006 --> 00:43:49.366
in both the business
and educational sites.

00:43:50.326 --> 00:43:53.766
And, of course, the developer
forums are a great help.

00:43:54.506 --> 00:43:57.646
There are some related sessions
that you are probably going

00:43:57.646 --> 00:44:00.346
to be interested in because
they are prevalent here.

00:44:01.186 --> 00:44:04.106
The first is already
gone passed 11:30 AM,

00:44:04.556 --> 00:44:06.006
Managing Apple Devices.

00:44:06.396 --> 00:44:09.796
If you haven't seen this
session, this session covers all

00:44:09.796 --> 00:44:12.336
of the new features in
mobile device management

00:44:12.646 --> 00:44:15.666
that we've added into
iOS 7 and OS X Mavericks.

00:44:15.666 --> 00:44:17.666
So, please go view
that video if you can.

00:44:18.676 --> 00:44:20.466
And the second one
is equally important,

00:44:20.906 --> 00:44:22.746
it's how to use your--

00:44:22.886 --> 00:44:25.666
how to check your receipts
to protect your apps.

00:44:26.276 --> 00:44:28.866
So, thank you very much
and see you at the labs.

00:44:29.366 --> 00:44:40.560
[Applause]