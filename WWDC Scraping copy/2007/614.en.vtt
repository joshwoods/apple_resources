WEBVTT

00:00:17.410 --> 00:00:18.890
>> Richard: Good morning.

00:00:18.890 --> 00:00:21.820
This is Designing Web Content for iPhone.

00:00:21.820 --> 00:00:26.810
I'm Richard Williamson, the manager
of the iPhone web technologies group.

00:00:30.329 --> 00:00:37.589
Even though this session is about designing web content
for iPhone, I want to start by saying that you don't have

00:00:37.590 --> 00:00:41.940
to design your web content for the iPhone.

00:00:41.939 --> 00:00:47.640
As you already know, Safari on
iPhone is a desktop caliber browser.

00:00:47.640 --> 00:00:54.259
That means that it can display the same
pages that are displayed on the desktop.

00:00:54.259 --> 00:01:02.469
And that's because the technology
behind Safari on iPhone is the same

00:01:02.469 --> 00:01:09.090
as the technology behind Safari
on OS X and now Safari on Windows.

00:01:09.090 --> 00:01:14.460
This is an important point because
you can develop sites on the desktop

00:01:14.459 --> 00:01:18.659
and be confident that they'll work well on the iPhone.

00:01:18.659 --> 00:01:25.289
And now with Safari 3.0, we have some sophisticated
development tools built into Safari that you can use

00:01:25.290 --> 00:01:30.510
to optimize your content, not just for
the desktop, but also for the iPhone.

00:01:30.510 --> 00:01:36.010
So what are we going to talk about in this session?

00:01:36.010 --> 00:01:42.630
First, I'd like to walk you through the
experience of browsing the web with iPhone.

00:01:42.629 --> 00:01:47.739
Then I'd like to cover a few of the
features of Safari on iPhone and then talk

00:01:47.739 --> 00:01:54.169
about how you can specifically optimize
your sites for deployment to iPhone.

00:01:54.170 --> 00:02:02.420
To show you what it's like to browse the web with iPhone,
I've put together a few movies of browsing on iPhone.

00:02:02.420 --> 00:02:04.719
I'd like to show you those now.

00:02:04.719 --> 00:02:09.830
When you load a page on iPhone, it's very natural
to pan the page up and down with your finger.

00:02:09.830 --> 00:02:12.170
The blue circle represents your finger.

00:02:12.169 --> 00:02:19.159
To enter a URL it's a simple matter to click in the
field and then using the keyboard type in the URL.

00:02:19.159 --> 00:02:25.419
In this case we're going to go to
news.google.com and hit the go button.

00:02:25.419 --> 00:02:27.909
And the page loads.

00:02:27.909 --> 00:02:35.729
One thing to point out is that we do scale a page
to fit, and at this size, text really isn't legible,

00:02:35.729 --> 00:02:37.699
so we've added a feature called double tap.

00:02:37.699 --> 00:02:41.699
That lets you focus in on a specific element on the page.

00:02:41.699 --> 00:02:46.030
We'll talk a lot more about double tap.

00:02:46.030 --> 00:02:49.330
The icon in the corner there is what we call page view.

00:02:49.330 --> 00:02:53.680
And the iPhone doesn't have Windows,
but we all like tabbed browsing.

00:02:53.680 --> 00:02:59.200
So page view lets you look at multiple
documents inside Safari.

00:02:59.199 --> 00:03:03.310
And if on the desktop you clicked on a
link, it would normally open a new window.

00:03:03.310 --> 00:03:07.580
On iPhone, you click on a link and
it opens up in page view, like this.

00:03:07.580 --> 00:03:20.320
In page view you can manage your documents, close
them and select them, keep a document set open.

00:03:20.319 --> 00:03:32.289
Safari on iPhone has auto complete of course, auto
complete will match on your history and on your bookmarks.

00:03:32.289 --> 00:03:34.739
So I can type A, for example, and it'll pull up URLs.

00:03:34.740 --> 00:03:43.520
I'm going to go to www.Apple.com,
load the page, browse to another page.

00:03:43.520 --> 00:03:45.630
Of course on iPhone we have bookmarks, too.

00:03:45.629 --> 00:03:53.840
That's what the other icon does
at the bottom of the screen here.

00:03:53.840 --> 00:03:57.659
Bookmarks on Safari on iPhone synchronize
with your bookmarks on your desktop.

00:03:57.659 --> 00:03:58.889
These are the same bookmarks.

00:03:58.889 --> 00:04:01.299
The same hierarchy it follows that you have on your desktop.

00:04:01.300 --> 00:04:09.850
Let's load a few, New York Times, navigate to a few links.

00:04:09.849 --> 00:04:13.000
History on the iPhone is also in bookmarks.

00:04:13.000 --> 00:04:17.240
Let's load a few more links.

00:04:17.240 --> 00:04:23.750
This is the WWC website.

00:04:23.750 --> 00:04:28.490
Maybe on final link here, the Yahoo finance site.

00:04:28.490 --> 00:04:30.800
Zoom in on an article.

00:04:35.889 --> 00:04:37.949
Let's go back to bookmarks and look at history.

00:04:37.949 --> 00:04:42.319
History is the top folder in the bookmarks list here.

00:04:42.319 --> 00:04:46.219
We can go back and look at documents
that we've previously loaded.

00:04:47.680 --> 00:04:51.610
Safari on iPhone also has full support for PDF.

00:04:51.610 --> 00:04:54.060
Let's go back and load a PDF document.

00:04:54.060 --> 00:04:57.579
This happens to be the iPod feature guide.

00:05:02.379 --> 00:05:06.909
And you'll not as you scroll through the
document, the page indicator updates.

00:05:06.910 --> 00:05:10.420
And just like you can zoom in on web
content, you can also zoom in on PDF content.

00:05:10.420 --> 00:05:14.050
And you can rotate the iPhone to look at any landscape, too.

00:05:14.050 --> 00:05:16.439
I think this looks great.

00:05:19.540 --> 00:05:23.990
So I'd like to show you, too, integration
with the other applications on iPhone.

00:05:23.990 --> 00:05:26.019
Let's do a search for a local restaurant, LuLu.

00:05:26.019 --> 00:05:28.659
It's very close to Moscone, here, great restaurant.

00:05:28.660 --> 00:05:32.180
Here's the Google page for it.

00:05:32.180 --> 00:05:35.790
Now I could make a phone call directly from
the web page, maybe make a reservation,

00:05:35.790 --> 00:05:38.480
or look at their website, look at the menu.

00:05:38.480 --> 00:05:41.509
Instead, I'd like to look at it in Google Maps on iPhone.

00:05:41.509 --> 00:05:44.389
And you can see that it's just
around the corner from Moscone here.

00:05:44.389 --> 00:05:51.279
And then we can look at the details for the restaurant.

00:05:51.279 --> 00:05:55.529
Now I'd like to show you the Safari TV commercial.

00:05:55.529 --> 00:06:14.199
You may have seen this before, but
I'd like to show you it one more time.

00:06:14.199 --> 00:06:16.250
Could I get audio, please?

00:06:16.250 --> 00:06:16.350
( Background Music )

00:06:16.350 --> 00:06:21.590
>> Kind of, sort of looks like the internet.

00:06:21.589 --> 00:06:30.709
It's just the internet, on your phone.

00:06:32.230 --> 00:06:35.210
>> Richard: That's Safari on the iPhone.

00:06:35.209 --> 00:06:39.689
We're really proud of it.

00:06:39.689 --> 00:06:43.060
Now I'd like to talk specifically
about some of the features of Safari.

00:06:43.060 --> 00:06:48.910
Of course, we support all of the latest,
greatest standards because it's the same engine

00:06:48.910 --> 00:06:54.380
as Safari on OS X and Safari now on Windows.

00:06:54.379 --> 00:06:57.709
But I'd like to emphasize one additional point.

00:06:57.709 --> 00:06:59.709
Web standards are evolving.

00:06:59.709 --> 00:07:04.909
There's a lot of current active work to
include the capabilities of web applications,

00:07:04.910 --> 00:07:12.560
in particular the WHATWG group in HTML5
and the W3 are doing a lot of work to improve,

00:07:12.560 --> 00:07:18.720
especially in areas like offline storage,
offline caching and enhanced media support.

00:07:18.720 --> 00:07:22.610
So you can expect that these standards
will evolve over time.

00:07:22.610 --> 00:07:26.889
And of course, Safari on iPhone will pick up these changes.

00:07:26.889 --> 00:07:37.389
We support the top four image formats on iPhone, GIF,
JPEG, PING, not PNG, it's pronounced PING, and TIFF.

00:07:38.870 --> 00:07:43.500
We support animated GIFS up to a certain size, 2 megabytes.

00:07:43.500 --> 00:07:47.339
Beyond that we'll just show the
first frame of the animated GIF.

00:07:47.339 --> 00:07:53.509
And the maximum decoded image size on iPhone is eight
megabytes, with one exception, and that is JPEG's.

00:07:53.509 --> 00:07:58.149
we can sub sample JPEG's to show much larger images.

00:07:58.149 --> 00:08:00.399
This is what that means.

00:08:00.399 --> 00:08:04.039
With a JPEG, we can decode to a reduced size,

00:08:04.040 --> 00:08:09.710
effectively using 16 times fewer pixels
and a corresponding reduction in memory.

00:08:09.709 --> 00:08:17.029
So 4 by 4 pixels like this get sub sampled to one, and
this allows us on the iPhone to show images generated

00:08:17.029 --> 00:08:23.219
by the latest generation's digital
cameras, like the new Canon Mach III.

00:08:23.220 --> 00:08:27.380
In fact, this is an image directly off
the Canon website, rendered on the iPhone.

00:08:27.379 --> 00:08:32.389
Now, of course, typically if you're designing content, you
wouldn't want to have such a large image on your website,

00:08:32.389 --> 00:08:35.289
you'd want to reduce the image so that
it's more appropriate for the iPhone,

00:08:35.289 --> 00:08:38.059
but it's nice to know that we do have this capability.

00:08:38.059 --> 00:08:42.779
There are a few other resource limits on your iPhone.

00:08:42.779 --> 00:08:47.049
The maximum size of your HTML, CSS and
JavaScript is limited to 10 megabytes.

00:08:47.049 --> 00:08:47.909
That's an awful lot.

00:08:47.909 --> 00:08:49.709
You can do a lot with that limit.

00:08:49.710 --> 00:08:54.620
As I mentioned already, decoded image
size is limited to eight megabytes.

00:08:54.620 --> 00:09:02.779
Now on the iPhone we want to provide a secure environment
for executing your web applications and web pages.

00:09:02.779 --> 00:09:07.019
So to that end, JavaScript execution
is limited to five seconds.

00:09:07.019 --> 00:09:13.519
That means for each entry point into the
interpreter, either from a timer or an event,

00:09:13.519 --> 00:09:15.759
you have a maximum of five seconds execution.

00:09:15.759 --> 00:09:21.610
This really keeps the responsiveness
of the device pretty fluid.

00:09:21.610 --> 00:09:26.310
You're also limited to 10 megabyte of
allocations on each of your web pages.

00:09:26.309 --> 00:09:30.399
If your script exceeds either of these
limits, you will get an exception.

00:09:30.399 --> 00:09:34.029
And most likely that exception is going
to be at some random point in your code.

00:09:34.029 --> 00:09:35.399
So try and stay within these limits.

00:09:35.399 --> 00:09:39.199
They're pretty generous, and you can
do an awful lot within these limits.

00:09:40.509 --> 00:09:45.169
Finally we have a maximum of eight documents
that can be opened at any one point in page view.

00:09:45.169 --> 00:09:50.089
So if you design a site where you have lots
of new windows opening up, keep this in mind.

00:09:50.090 --> 00:09:53.100
And a few extras here.

00:09:53.100 --> 00:09:55.250
Of course, we do support PDF natively.

00:09:55.250 --> 00:10:02.330
We have a rich support for audio and video formats and
we'll talk a lot more about that later in the session.

00:10:02.330 --> 00:10:06.009
No Flash and no Java.

00:10:06.009 --> 00:10:14.539
So, we've seen what it's like to browse with iPhone.

00:10:14.539 --> 00:10:16.750
We've seen some of the features of Safari.

00:10:16.750 --> 00:10:23.120
Now I'd like to talk specifically about optimizing
your sites and applications for iPhone in two areas.

00:10:23.120 --> 00:10:28.919
Some good design practices and then pages
that are written specifically for iPhone.

00:10:28.919 --> 00:10:34.179
Now these good design practices are applicable to
the desktop just as much as they are to the iPhone,

00:10:34.179 --> 00:10:40.549
so some of this may be obvious to those of
you who have already done a lot of web design.

00:10:40.549 --> 00:10:43.759
Separate your HTML and your CSS.

00:10:43.759 --> 00:10:48.110
Don't replicate style inline in
your elements inside the HTML.

00:10:48.110 --> 00:10:51.100
Factor that out into a CSS document.

00:10:51.100 --> 00:10:54.029
Use well structured and valid HTML.

00:10:54.029 --> 00:10:58.289
With the new development tools that we have
built into Safari 3.0, this is very easy to do.

00:10:58.289 --> 00:11:01.019
Take the time to validate your HTML.

00:11:01.019 --> 00:11:03.829
You can do this on Windows as well as OS X now.

00:11:03.830 --> 00:11:07.490
And there are a lot of other validators
out there that you can use.

00:11:07.490 --> 00:11:10.289
Size your images appropriately.

00:11:10.289 --> 00:11:17.500
Don't have a five megabyte image on your site
and then display it as a thumbnail on the client.

00:11:17.500 --> 00:11:20.940
Use small images as background images that get tiled.

00:11:20.940 --> 00:11:23.490
Don't have a large background image.

00:11:23.490 --> 00:11:25.370
And finally, avoid framesets.

00:11:25.370 --> 00:11:26.159
I hate framesets.

00:11:26.159 --> 00:11:28.980
Better yet, don't even use framesets at all.

00:11:28.980 --> 00:11:36.450
This is a general principle in terms of static's and layout.

00:11:36.450 --> 00:11:41.700
It's typically not so good to have text that
fits the full width of the screen,

00:11:41.700 --> 00:11:45.379
instead break your content up into
columns and blocks like this.

00:11:45.379 --> 00:11:50.700
Not only is this more aesthetically pleasing, it
also happens to work much better with double tap.

00:11:50.700 --> 00:11:54.759
Size does matter.

00:11:54.759 --> 00:11:57.850
Especially on the iPhone.

00:11:57.850 --> 00:12:03.149
The Edge Pipe is much smaller than the
WiFi Pipe, maybe by a factor of 10 or so.

00:12:03.149 --> 00:12:06.620
So if you're concerned about your
applications loading quickly on iPhone,

00:12:06.620 --> 00:12:09.529
really think about the bandwidth of the Edge Pipe.

00:12:09.529 --> 00:12:15.250
Here are two example pages, the page on the left,
news.google.com is a very large page with lots

00:12:15.250 --> 00:12:17.690
of resources, lots of text and lots of images.

00:12:17.690 --> 00:12:22.430
It's 242 K. It takes about 19 seconds to download over Edge.

00:12:22.429 --> 00:12:26.309
The page on the right is much smaller, much less content.

00:12:26.309 --> 00:12:30.219
It's 643 K. Takes about 51 seconds to download.

00:12:30.220 --> 00:12:35.990
That's because this page turns out to have
about 300 K of JavaScript, mostly redundant.

00:12:35.990 --> 00:12:41.049
It's used, that JavaScript is used on other areas
of the site, but isn't used on this main page.

00:12:41.049 --> 00:12:43.559
Don't download resources that you aren't going to use.

00:12:43.559 --> 00:12:50.479
What about the baby web?

00:12:50.480 --> 00:12:54.460
Well we don't do transcoding.

00:12:54.460 --> 00:12:59.040
We'll render the pages as you intended them to be rendered.

00:12:59.039 --> 00:13:01.599
We don't support WML.

00:13:01.600 --> 00:13:04.759
We do support XHTML mobile documents.

00:13:04.759 --> 00:13:10.120
XHTML mobile is a spec that includes a subset of HTML.

00:13:10.120 --> 00:13:14.730
And because it is a subset of HTML,
we render them just fine on iPhone.

00:13:14.730 --> 00:13:21.399
There are quite a few sites out there, like the
Google.com search site that is an XHTML mobile site.

00:13:21.399 --> 00:13:24.319
.mobi domains.

00:13:24.320 --> 00:13:27.040
There's nothing particularly about .mobi domains,

00:13:27.039 --> 00:13:32.809
but typically sites of .mobie domains are targeted
towards mobile devices, so we render these just fine.

00:13:32.809 --> 00:13:34.529
This is BMW.mobi.

00:13:34.529 --> 00:13:40.069
now you may have noticed that both of these
sites are actually rendered at 100 percent?

00:13:40.070 --> 00:13:45.200
And that's because we have a special
viewport for these kinds of sites,

00:13:45.200 --> 00:13:48.390
XHTML mobile and .mobi sites at .mobi domains.

00:13:48.389 --> 00:13:53.870
And we'll talk a lot more about the viewport in a moment.

00:13:53.870 --> 00:13:55.720
Here's the Safari user agent.

00:13:55.720 --> 00:13:57.420
This has leaked out already on the net.

00:13:57.419 --> 00:14:00.939
People are seeing this pop up quite a bit.

00:14:00.940 --> 00:14:03.130
Just a few things I want to point out.

00:14:03.129 --> 00:14:06.500
The platform is iPhone, not surprising.

00:14:06.500 --> 00:14:12.870
We've added a couple of different
version strings to the user agent.

00:14:12.870 --> 00:14:18.190
Version 3.0 will be the same version across all platforms.

00:14:18.190 --> 00:14:26.920
So if you want to look for, if you want to get aggregate
statistics for browser usage across all three platforms,

00:14:26.919 --> 00:14:32.339
you really want to look at this version 3.0
string as well as Apple WebKit and Safari.

00:14:32.340 --> 00:14:34.670
We've also added a version number for the mobile platform.

00:14:34.669 --> 00:14:41.370
Now I'm not going to go into a lot of detail about
how you should or shouldn't use the user agent string

00:14:41.370 --> 00:14:43.950
because there's a lot of great sites
out there that describe this already.

00:14:43.950 --> 00:14:45.509
I'm going to point you to a couple.

00:14:45.509 --> 00:14:51.259
webkit.org has a great site about good practices
in terms of looking at the user agent string.

00:14:51.259 --> 00:14:58.319
And there are other techniques that you can use
to conditionally load content or change content,

00:14:58.320 --> 00:15:03.830
including object detection, and there's two articles
at developer.apple.com that talk about that.

00:15:03.830 --> 00:15:10.759
So one thing that you can do to have conditional
content just for the iPhone is to use media query.

00:15:10.759 --> 00:15:12.769
And existing media queries look like this.

00:15:12.769 --> 00:15:18.460
You can a media rule like at media screen
or at media print or at media handheld

00:15:18.460 --> 00:15:24.230
and this will select a style sheet
based upon the target media type.

00:15:24.230 --> 00:15:27.120
On iPhone we don't support the handheld or print media type.

00:15:27.120 --> 00:15:29.289
You might ask why don't we support the handheld media type?

00:15:29.289 --> 00:15:37.299
And the answer is that sites that use the handheld media
type today typically were designed for low end devices

00:15:37.299 --> 00:15:43.029
and we don't want to show low end content, we
want to show the web in all of it's full glory.

00:15:43.029 --> 00:15:48.909
With CSS3, media queries have been substantially improved.

00:15:48.909 --> 00:15:56.370
Now you can use an expression language to select a style
sheet that's tailored to the capabilities of a device.

00:15:56.370 --> 00:16:03.190
This is a draft spec and here's the URL to the
W3 site that covers the spec. let me walk you

00:16:03.190 --> 00:16:06.300
through what a query would look like using CSS3.

00:16:06.299 --> 00:16:12.549
so I'd like to specify an expression
that selects for iPhone.

00:16:12.549 --> 00:16:20.250
So first cut I could do something like this, the screen
media type and the devices that match the device width

00:16:20.250 --> 00:16:27.679
of 320 or 480 pixels and these happen to be the
resolutions of the iPhone in portrait and landscape.

00:16:27.679 --> 00:16:32.419
And this would select the iPhone.css style sheet.

00:16:32.419 --> 00:16:37.259
But thinking about this a little more, I really
don't want to limit myself just to the iPhone,

00:16:37.259 --> 00:16:41.319
I want to select for all devices
that have similar small form factors.

00:16:41.320 --> 00:16:46.620
I really want to select all devices that
have a screen width of less than 480 pixels.

00:16:46.620 --> 00:16:50.789
So that's what this query would do.

00:16:50.789 --> 00:16:55.029
Screen media type and a max device width of 480 pixels.

00:16:55.029 --> 00:16:57.279
And it would specify the small device CSS.

00:16:57.279 --> 00:17:05.809
Now this is great except for one other issue, all
the browsers don't support CSS3 media queries.

00:17:05.809 --> 00:17:09.970
So there's a new keyword that you can
use in this expression language only,

00:17:09.970 --> 00:17:15.910
and older browsers who encounter this
expression will not recognize only and not match

00:17:15.910 --> 00:17:19.070
at all so they wouldn't load the style sheet.

00:17:19.069 --> 00:17:26.189
So this is the expression that you should use if
you want to specify style just for the iPhone.

00:17:26.190 --> 00:17:31.680
Now in your content, you've got to make small content
that's going to load a style sheet just for the iPhone

00:17:31.680 --> 00:17:33.970
and an alternate style sheet for the desktop.

00:17:33.970 --> 00:17:36.640
What does that alternate style sheet look like?

00:17:36.640 --> 00:17:38.190
It looks like this.

00:17:38.190 --> 00:17:44.019
This is gone match on any device that has
a device width greater than 480 pixels.

00:17:44.019 --> 00:17:50.660
And this would work even for browsers
that don't support CSS3 media queries

00:17:50.660 --> 00:17:55.160
because they will recognize the screen media
type and then ignore the rest of the expression.

00:17:55.160 --> 00:18:01.500
So using these two CSS3 media queries together,

00:18:01.500 --> 00:18:06.369
the same HTML document can be styled
both for the iPhone and for the desktop.

00:18:06.369 --> 00:18:12.489
Of course, alternatively, you can use a CSS media
rule like this, with the same expression syntax.

00:18:12.490 --> 00:18:20.519
Here's an example of a page that has a three column
layer that works great on a desktop with a wide window.

00:18:20.519 --> 00:18:26.170
But on iPhone, I'd like to have more of a
vertical orientation, so here's the same document

00:18:26.170 --> 00:18:31.539
without the window chrome and for the iPhone.

00:18:31.539 --> 00:18:36.250
Same HTML, different CSS.

00:18:36.250 --> 00:18:41.609
So that covers some general good design
practices that aren't specific to the iPhone.

00:18:41.609 --> 00:18:48.729
Now we're going to cover some things
that really are specific to the iPhone.

00:18:48.730 --> 00:18:54.360
So a disembodied hand isn't the same as a
mouse, as far as input devices are concerned.

00:18:54.359 --> 00:19:02.079
Your finger is much bigger than a mouse cursor,
so things like wind density are important.

00:19:02.079 --> 00:19:09.970
And the hand on the iPhone has a lot of
responsibilities in addition to emulating a mouse,

00:19:09.970 --> 00:19:13.079
so we'll talk more about that in the upcoming slides.

00:19:13.079 --> 00:19:19.839
The iPhone doesn't have Windows, which means there
are no scrollbars and there's no resize knob.

00:19:19.839 --> 00:19:21.089
That's important.

00:19:21.089 --> 00:19:24.409
We do have scaling.

00:19:24.410 --> 00:19:28.330
So you've seen already that we'll scale to
fit a document when we first load a page

00:19:28.329 --> 00:19:32.919
and then the user controls the scale with either
the pinch gesture or the double tap gesture.

00:19:32.920 --> 00:19:36.440
An important point about scaling
is that we don't scale a bitmap.

00:19:36.440 --> 00:19:42.660
We will actually re-render the page at the
target resolution, at the target scale,

00:19:42.660 --> 00:19:46.830
so you get gorgeous text as you scale into a page.

00:19:46.829 --> 00:19:54.849
These are the six areas that we're going to
talk about with regard to optimizing for iPhone.

00:19:54.849 --> 00:19:59.919
Viewports, what you can do with double tap, text sizing,

00:19:59.920 --> 00:20:05.160
how events are handled, form controls
and three special links.

00:20:05.160 --> 00:20:06.690
So first, viewports.

00:20:06.690 --> 00:20:08.090
What is the viewport?

00:20:08.089 --> 00:20:11.839
On the desktop people don't typically
think a lot about the viewport.

00:20:11.839 --> 00:20:14.859
But the viewport really is determined by the window size.

00:20:14.859 --> 00:20:22.349
And on the desktop, the viewport determines how
the page is laid out and how the content wraps.

00:20:22.349 --> 00:20:26.259
So if you resize a window in a
browser, often the content will re-flow.

00:20:26.259 --> 00:20:30.289
That's because the viewport is changing size.

00:20:30.289 --> 00:20:34.009
The viewport also determines whether
or not you need scroll bars.

00:20:34.009 --> 00:20:38.799
And it's tied to the window size and controlled by the user.

00:20:38.799 --> 00:20:42.950
On iPhone, just like on the desktop,

00:20:42.950 --> 00:20:47.289
the viewport determines how the page
is laid out and where the content wraps.

00:20:47.289 --> 00:20:54.750
But there is no resize know, so the viewport can be
controlled by you, the content designer, not by the user.

00:20:54.750 --> 00:21:02.720
And you can do this by specifying a new
viewport property at the head of your document.

00:21:02.720 --> 00:21:04.420
Here's an example.

00:21:04.420 --> 00:21:08.170
A viewport with a width property of 320 pixels,

00:21:08.170 --> 00:21:13.550
and there are other properties too
that we'll talk about in more detail.

00:21:13.549 --> 00:21:17.419
Here's an example of a page that
appears to be too narrow on the iPhone.

00:21:17.420 --> 00:21:21.160
And that's because the content designer
really wasn't thinking about the viewport.

00:21:21.160 --> 00:21:25.720
And on iPhone, the default viewport width is 390 pixels.

00:21:25.720 --> 00:21:31.819
This is the equivalent of opening up your window on
the desktop to 390 pixels and then loading a page.

00:21:31.819 --> 00:21:38.289
So really what the designer intended is to have
this portion of the page fill the entire screen.

00:21:38.289 --> 00:21:46.509
And a designer could do this by adding a viewport with
property of 590 pixels and then the page would layout

00:21:46.509 --> 00:21:53.640
like this, filling the entire width
of visible portion of the page.

00:21:53.640 --> 00:21:56.950
It's applicable to web applications, too.

00:21:56.950 --> 00:22:01.750
This is a sample app that without the
viewport tag, looks kind of goofy.

00:22:01.750 --> 00:22:06.460
But really, the designer intended to
clip it so that it fits the screen.

00:22:06.460 --> 00:22:10.289
And again, by default, we have 980 viewport pixel width,

00:22:10.289 --> 00:22:13.500
but the designer wanted this portion
of the page to fill the screen.

00:22:13.500 --> 00:22:19.230
So that can be done with, again,
a viewport width property of 320.

00:22:19.230 --> 00:22:24.970
now 320 turns out that is the width of
portrait on iPhone, so you get no scaling.

00:22:24.970 --> 00:22:28.190
This is content rendered at 100 percent.

00:22:28.190 --> 00:22:33.430
This is one of the few modifications that had to be added
to the directory application that Scott Forstall demoed.

00:22:33.430 --> 00:22:39.180
An additional viewport width property.

00:22:39.180 --> 00:22:42.060
There are six viewport properties that you can specify.

00:22:42.059 --> 00:22:43.919
Width and height, which are obvious.

00:22:43.920 --> 00:22:49.050
Initial scale, this is the scale that the page
will be first rendered at when it's first loaded.

00:22:49.049 --> 00:22:54.329
Whether or not the page can be scaled at
all by the user using double tap or pinch.

00:22:54.329 --> 00:22:58.119
A minimum scale and a maximum scale.

00:22:58.119 --> 00:23:01.589
So by specifying an appropriate viewport, you really get

00:23:01.589 --> 00:23:07.579
to control exactly how your pages
are going to be laid out on iPhone.

00:23:07.579 --> 00:23:11.689
Somewhat related to viewport are framesets.

00:23:11.690 --> 00:23:15.390
Again, avoid framesets if you possible can.

00:23:15.390 --> 00:23:21.890
On iPhone they present somewhat of a problem because
each frame in a frameset can be independently scrollable.

00:23:21.890 --> 00:23:23.920
And if you're interacting with a finger, how does that work?

00:23:23.920 --> 00:23:27.750
Well, we do something called exploding the frameset.

00:23:27.750 --> 00:23:33.849
We'll take a scrollable frame in a frameset
and expand it to fit the actual content.

00:23:33.849 --> 00:23:35.980
Similarly for full width iFrames.

00:23:35.980 --> 00:23:39.160
We'll expand those to fit their content.

00:23:39.160 --> 00:23:46.570
But, all of the iFrames are scrollable using a
two finger gesture like this within the iFrame.

00:23:46.569 --> 00:23:49.639
So that same frameset on iPhone looks like this.

00:23:49.640 --> 00:23:57.830
Each of the frames has been exploded to their full size and
then the whole frameset itself has been scaled down to fit,

00:23:57.829 --> 00:24:02.750
so you can pan the entire frameset, you
can't scroll each frame independently.

00:24:02.750 --> 00:24:10.109
But if you do want scrollable regions, you can still
achieve that with a scrollable iFrame overflow element.

00:24:10.109 --> 00:24:15.529
Double tap zooming, let's talk about that.

00:24:15.529 --> 00:24:22.500
So double tap zooming works by finding a tapped element and
then working up and down for the first appropriate block,

00:24:22.500 --> 00:24:26.920
and there's some fuzzy rules about an
appropriate block, or an image element

00:24:26.920 --> 00:24:32.120
and then it takes the block and
it zooms it to fit width wise.

00:24:32.119 --> 00:24:35.419
If it's an image, it'll zoom the image to fit.

00:24:35.420 --> 00:24:39.350
It will also center that element within the visible region.

00:24:39.349 --> 00:24:44.480
And if you've already zoomed in, when
you double tap, it will zoom out.

00:24:44.480 --> 00:24:48.529
So what should you do on your side of web
application to account for double tap?

00:24:48.529 --> 00:24:53.670
You don't really have to modify your
site in any way except for the layout.

00:24:53.670 --> 00:24:56.810
So use a simple block structure throughout your page.

00:24:56.809 --> 00:25:01.549
Really think about regions that
the user will be double tapping on.

00:25:01.549 --> 00:25:04.079
Organize your site into digestible sections.

00:25:04.079 --> 00:25:07.359
And digestible really is something
left as an exercise to the reader,

00:25:07.359 --> 00:25:13.009
but something that makes some logical
sense and use a column layout.

00:25:13.009 --> 00:25:18.779
And avoid wide blocks of text that
fill the full width of the page.

00:25:18.779 --> 00:25:21.839
Here are some examples.

00:25:21.839 --> 00:25:27.179
This is the old, from yesterday, the old apple.com website.

00:25:27.180 --> 00:25:28.460
Bringing the hand of God here.

00:25:28.460 --> 00:25:30.910
Double tap.

00:25:30.910 --> 00:25:33.060
We double tapped on that image element.

00:25:33.059 --> 00:25:35.099
It works very well.

00:25:35.099 --> 00:25:36.079
Here's another example.

00:25:36.079 --> 00:25:41.619
slashdot.org has a three column layout and
double tapping works great on this site.

00:25:41.619 --> 00:25:47.469
We'll double type on the center column, find
their blog and then zoom in and center.

00:25:47.470 --> 00:25:52.600
Here's an example of a site that doesn't work so well.

00:25:52.599 --> 00:25:55.750
It's a great site, but the layout isn't so good.

00:25:55.750 --> 00:26:03.759
And the layout is the full width of the screen, so when we
try and double tap, we'll select a block, we'll center it,

00:26:03.759 --> 00:26:05.920
but it already fits the screen
so there's nothing to zoom in on.

00:26:05.920 --> 00:26:09.140
Now you could say well, why don't we zoom in anyway?

00:26:09.140 --> 00:26:14.710
And we tried this, but the matter of fact is that you end
up with something like this, where not only do you have

00:26:14.710 --> 00:26:19.100
to pan vertically to read the content,
you've also got to pan horizontally.

00:26:19.099 --> 00:26:21.419
And it doesn't make for a very good user experience.

00:26:21.420 --> 00:26:25.240
So the better experience is for the user to
locate the device and look at the content

00:26:25.240 --> 00:26:28.380
in landscape and then just pan vertically.

00:26:28.380 --> 00:26:35.990
So that's double tapping and what you can do
on your sites to make it work well on iPhone.

00:26:35.990 --> 00:26:39.970
Now I'd like to talk about a new
concept, text size adjustment.

00:26:41.230 --> 00:26:45.440
Naturally, if we load a page without any
changes on iPhone, it would look like this.

00:26:45.440 --> 00:26:48.320
Even with double tap, this text is kind of hard to read.

00:26:48.319 --> 00:26:48.970
It's too small.

00:26:48.970 --> 00:26:49.690
It's not legible.

00:26:49.690 --> 00:26:54.620
What we'd like to do is after double
tap, have the text look like this.

00:26:54.619 --> 00:26:57.009
And at this size, it's quite legible.

00:26:57.009 --> 00:27:00.619
That's what text size adjustment is all about.

00:27:01.869 --> 00:27:08.849
We will adjust the font size of text on your
documents so that it's readable after double tap.

00:27:08.849 --> 00:27:14.029
We do this by getting the width of a block of text,
determining the double tap scale from that width

00:27:14.029 --> 00:27:18.920
and then adjusting the font size so
that after the double tap it's legible.

00:27:18.920 --> 00:27:22.580
Now this works remarkably well.

00:27:22.579 --> 00:27:26.059
So well, in fact, that people don't
even realize it's happening.

00:27:27.950 --> 00:27:32.330
But just in case, we've added a CSS
property, WebKit Text Size Adjustor,

00:27:32.329 --> 00:27:36.199
that allows you to have fine control
of the text size adjustment.

00:27:36.200 --> 00:27:37.940
There are three possible values.

00:27:37.940 --> 00:27:41.440
None, none will disable text size adjustment.

00:27:41.440 --> 00:27:46.750
So if you don't want this futzing with your page, add
this to an element and we won't modify the text size.

00:27:46.750 --> 00:27:48.960
Auto, that's the default.

00:27:48.960 --> 00:27:50.549
And then multiply a percentage.

00:27:50.549 --> 00:27:58.409
And multiply a percentage allows you to do something very
much like make text bigger, make text smaller in Safari.

00:27:58.410 --> 00:28:07.360
Here's none, auto and 200 percent.

00:28:08.609 --> 00:28:13.129
So when would you want to override the
auto behavior of text size adjustment?

00:28:13.130 --> 00:28:19.470
Well if you really care about having direct control
of how your site looks on iPhone, turn it off.

00:28:19.470 --> 00:28:24.740
Or sometimes, the automatic behavior
does disrupt the layout of a site.

00:28:24.740 --> 00:28:26.289
Here's one specific example at Wikipedia.

00:28:26.289 --> 00:28:32.730
You'll not that the menus at the top
of the page are clipped and that's

00:28:32.730 --> 00:28:36.799
because we've adjusted the text size a little too big.

00:28:36.799 --> 00:28:41.940
Under fixed position elements, they're not actually
fixed, they're absolute positioned elements,

00:28:41.940 --> 00:28:44.890
that caused the clipping of those menu items.

00:28:44.890 --> 00:28:50.270
So the fix is simple to add text
size adjust none to those elements

00:28:50.269 --> 00:28:53.759
and then the page is restored to
it's original intended layout.

00:28:53.759 --> 00:29:00.549
Now I'd like to show you a movie of
the internal directory application

00:29:00.549 --> 00:29:02.789
and some of these principles to fix size viewport.

00:29:02.789 --> 00:29:08.609
We're going to do a search with employees with
CH in their name and then select Henry Chan.

00:29:08.609 --> 00:29:11.859
This is the same demo that Scott Forstall
showed in his keynote, if you saw that.

00:29:11.859 --> 00:29:16.309
And it feels a lot like a native application on an iPhone.

00:29:16.309 --> 00:29:18.369
You get the same kind of scrolling behavior.

00:29:18.369 --> 00:29:24.579
We can look at Henry's boss, Kathy,
and look at her director ports.

00:29:24.579 --> 00:29:25.059
There's Henry.

00:29:25.059 --> 00:29:28.559
We can do another search.

00:29:28.559 --> 00:29:33.819
We'll search for Pete.

00:29:33.819 --> 00:29:35.389
Here's Pete Jensen.

00:29:35.390 --> 00:29:41.980
And then we have integration with the other applications
on iPhone, so I can click on a map link and go directly

00:29:41.980 --> 00:29:44.829
to the map application right from my web application.

00:29:44.829 --> 00:29:47.909
There's the Apple Campus.

00:29:47.910 --> 00:29:53.980
And I can go back to Safari from the
map application and make a phone call.

00:29:53.980 --> 00:29:56.809
This is with the simple Tel Link.

00:29:56.809 --> 00:29:59.059
So here's another example.

00:29:59.059 --> 00:30:05.319
This is the iTunes website at apple.com and on
the left side of the page, there's a little widget

00:30:05.319 --> 00:30:09.849
that lets you search the things in the iTunes catalog.

00:30:09.849 --> 00:30:15.480
This is directly on the, this is an existing
page, we didn't do anything for it for the iPhone.

00:30:15.480 --> 00:30:20.589
And then you can scroll through the
album art for the search results.

00:30:20.589 --> 00:30:26.859
So what we though is what can we do to take this existing
content and just tune it a little bit for iPhone.

00:30:26.859 --> 00:30:29.009
So that's what we did in this demo.

00:30:29.009 --> 00:30:35.609
It's pretty much exactly the same JavaScript, the same
AJAX, almost the same layout, we tweaked the style

00:30:35.609 --> 00:30:40.679
and a viewport tag and it looks
vastly better now on the iPhone.

00:30:40.680 --> 00:30:44.299
We'll do the same search.

00:30:44.299 --> 00:30:49.649
And using simple DHTML we can scroll back
and forth through this list of album art.

00:30:49.650 --> 00:30:52.240
So doing these kinds of things
are really simple on the iPhone.

00:30:52.240 --> 00:30:57.049
Small tweaks to your web applications
or sites make them look great.

00:30:57.049 --> 00:31:04.539
So we talked about double tap and text size adjustment.

00:31:04.539 --> 00:31:08.369
Now I'd like to talk about events on iPhone.

00:31:08.369 --> 00:31:12.509
So when you have a mouse, events
are pretty straight forward.

00:31:12.509 --> 00:31:17.910
You move the mouse back and forth on the
desktop and your page gets a mousemove event.

00:31:17.910 --> 00:31:20.550
You click the button and your page gets a mousedown event.

00:31:20.549 --> 00:31:23.250
You release you get a mouseup and a click.

00:31:23.250 --> 00:31:25.210
Things aren't quite so simple on the iPhone.

00:31:25.210 --> 00:31:31.309
Your fingers are the input device on the iPhone.

00:31:31.309 --> 00:31:36.029
And fingers, a single finger on the
iPhone has to do quadruple duty.

00:31:36.029 --> 00:31:43.149
It has to pan the page, it has to zoom the page via
double tap, and if you click and hold on a link,

00:31:43.150 --> 00:31:49.590
you'll get an information bubble telling you about that
link, and then finally, it has to emulate the mouse

00:31:49.589 --> 00:31:54.309
so that you get expected mouse events in your content.

00:31:54.309 --> 00:32:00.399
Two fingers on iPhone do triple duty.

00:32:00.400 --> 00:32:08.650
They pinch zoom the page, they pan the page,
and for overflow elements and iFrames,

00:32:08.650 --> 00:32:12.630
they can do two finger panning
and generate scroll wheel events.

00:32:12.630 --> 00:32:18.940
So here's kind of a rough flow chart of how
events get from the device to your page.

00:32:18.940 --> 00:32:20.730
The touch screen generates lots of touch events.

00:32:20.730 --> 00:32:26.710
Those get interpreted by Safari, often intercepted,
and your webpage will get no events whatsoever.

00:32:26.710 --> 00:32:30.340
But in some cases, you will get the expected mouse events.

00:32:30.339 --> 00:32:39.809
So those cases can best be described by defining two
terms, clickable elements and scrollable elements.

00:32:39.809 --> 00:32:44.509
Clickable elements aren't just clickable elements, but
they're those elements that can receive mouse events,

00:32:44.509 --> 00:32:47.109
mousedown, mouseup, mousemove and click.

00:32:47.109 --> 00:32:50.649
And scrollable elements are those
elements that will get scroll wheel events.

00:32:50.650 --> 00:32:52.920
Let's talk specifically about what I mean.

00:32:52.920 --> 00:33:02.830
A clickable element is either a link,
a form element, an image map area,

00:33:02.829 --> 00:33:07.990
or an element with a handler, like
a mousemove, down, up or click.

00:33:07.990 --> 00:33:14.589
So if you have elements like this on your pages, they
will get the expected events and Safari won't use any

00:33:14.589 --> 00:33:17.529
of the other thing it needs to,
like panning or double tapping.

00:33:17.529 --> 00:33:20.149
The events will go directly to your page.

00:33:20.150 --> 00:33:25.400
A scrollable element is either an element
with an appropriate overflow style,

00:33:25.400 --> 00:33:28.450
this happens to be the linked in
contact sheet, which is great.

00:33:28.450 --> 00:33:36.340
It's an overflow auto scroll region in the center of the
page and you can use two fingers to scroll that region.

00:33:36.339 --> 00:33:37.309
Text areas.

00:33:37.309 --> 00:33:42.079
If you have a large block of text
you can scroll it using two fingers.

00:33:42.079 --> 00:33:44.899
And a scrollable iFrame.

00:33:44.900 --> 00:33:48.160
And really, if you want to use frames,
really think about using iFrames instead.

00:33:48.160 --> 00:33:49.759
Avoid using framesets.

00:33:49.759 --> 00:33:58.250
So if you have clickable elements or scrollable
elements, for the most part your site will get events

00:33:58.250 --> 00:34:03.079
as though the user were interacting with
it via a mouse and not with a finger.

00:34:03.079 --> 00:34:05.000
Things just work correctly.

00:34:07.069 --> 00:34:10.509
These are the summary of the mouse events.

00:34:10.510 --> 00:34:17.850
In addition to the mouse events, all the usual kinds of life
cycle events are sent to a page as well as blur and focus.

00:34:18.900 --> 00:34:24.369
There's a category of things that the iPhone doesn't do,
and as a result you don't get the corresponding events.

00:34:24.369 --> 00:34:26.699
The iPhone doesn't do copy and paste.

00:34:26.699 --> 00:34:28.419
It doesn't do drag and drop.

00:34:28.420 --> 00:34:30.990
And it doesn't do selection.

00:34:30.989 --> 00:34:36.109
So your page will never get these events.

00:34:36.110 --> 00:34:39.079
Here's an example of a great site, dpreview.com.

00:34:39.079 --> 00:34:44.250
and on the left side of the screen there's
some DHTML menus that make use of mouse move.

00:34:44.250 --> 00:34:45.750
These menus work just fine.

00:34:45.750 --> 00:34:51.480
You can click on a menu, see the exploded
sub items and maybe select an item.

00:34:51.480 --> 00:34:58.300
Let's select a review of the Canon
940X, or D40X, I think it is.

00:34:58.300 --> 00:35:00.260
They work just fine.

00:35:00.260 --> 00:35:02.150
This site, of course, wasn't modified in any way.

00:35:02.150 --> 00:35:04.460
It's the existing dpreview.com site.

00:35:04.460 --> 00:35:10.269
So we've talked about events.

00:35:10.269 --> 00:35:15.630
Now I'd like to talk about form controls on iPhone.

00:35:15.630 --> 00:35:19.760
Form controls on iPhone are resolution independent.

00:35:19.760 --> 00:35:23.270
What that means is as you scale up and
down, we'll render the appropriate scale.

00:35:23.269 --> 00:35:24.909
They look beautiful.

00:35:24.909 --> 00:35:27.989
And they're stylable.

00:35:27.989 --> 00:35:30.289
You can make form controls look like whatever you want.

00:35:30.289 --> 00:35:35.279
I'm not necessarily saying this is
good design, but you can go crazy.

00:35:35.280 --> 00:35:37.390
You can do whatever you want with these form controls.

00:35:37.389 --> 00:35:41.210
Same goes for text fields.

00:35:45.329 --> 00:35:47.809
And also select controls.

00:35:47.809 --> 00:35:52.349
And again, this isn't necessarily good design, but
you can do whatever you want with form controls.

00:35:52.349 --> 00:35:58.690
The iPhone doesn't have a user visible file system.

00:35:58.690 --> 00:36:02.269
So as a result, there is no file upload.

00:36:02.269 --> 00:36:07.809
We will, however, render a disable
control in your web content.

00:36:07.809 --> 00:36:15.079
It looks like this, and this is so the layout doesn't get
disrupted if you include one of these controls on your site.

00:36:16.630 --> 00:36:19.660
So that's forms on iPhone.

00:36:19.659 --> 00:36:25.009
Now I'd like to talk about three special
links that are supported on iPhone.

00:36:25.010 --> 00:36:26.320
Telephone links.

00:36:26.320 --> 00:36:31.760
It is a phone, after all, so you can make calls
directly from y our websites and web applications.

00:36:31.760 --> 00:36:35.330
You can do that by specifying a Tel Link, like this.

00:36:35.329 --> 00:36:39.509
Now if you don't specify a Tel Link, and there's a lot
of content out there that doesn't use the Tel Link,

00:36:39.510 --> 00:36:45.810
we'll scan the page and look for anything that appears
to be a phone number and convert it to a Tel Link.

00:36:45.809 --> 00:36:51.519
And 99 percent of the time this does the right thing,
but if you really want to have a number on your page

00:36:51.519 --> 00:36:56.090
that isn't a telephone number, but looks like a
telephone number, if you break it up into two elements,

00:36:56.090 --> 00:37:01.160
maybe two side by side spans, we
won't convert it to a telephone link.

00:37:02.190 --> 00:37:04.000
Mail links.

00:37:04.000 --> 00:37:11.340
Safari has a built in mail compose sheet, so you
don't have to leave Safari to compose an email.

00:37:11.340 --> 00:37:15.380
You can click on an email, the compose sheet will come
up, you can send email and go directly back to Safari

00:37:15.380 --> 00:37:19.190
without having to go to SpinBoard by the menu button.

00:37:19.190 --> 00:37:21.170
And Google Map Links.

00:37:21.170 --> 00:37:27.769
If your site includes links to maps.google.com, we'll
send you to the built in Google Maps client instead

00:37:27.769 --> 00:37:32.070
of going over the web to maps.google.com.

00:37:32.070 --> 00:37:40.610
so that's an overview of what it takes to optimize your
applications for iPhone in terms of the HTML and the CSS.

00:37:40.610 --> 00:37:44.180
Now I'd like to introduce Sam Bushell
from the QuickTime Engineering Team.

00:37:44.179 --> 00:37:50.509
And he's going to talk about what you
can do to encode your content for iPhone.

00:37:50.510 --> 00:37:56.320
( Applause )

00:37:56.320 --> 00:37:57.860
>> Sam: Thank you, Richard.

00:37:57.860 --> 00:38:01.700
Okay. It's time to take off your CSS hats.

00:38:01.699 --> 00:38:05.859
It's time to put on your H.264 goggles.

00:38:05.860 --> 00:38:09.630
I'm here to talk to the media folks in the audience.

00:38:09.630 --> 00:38:13.130
The iPhone is a terrific media device.

00:38:13.130 --> 00:38:20.030
It's not just a wide screen video iPod, it is
a wide screen video iPod that can play video

00:38:20.030 --> 00:38:24.340
and audio while it's being streamed over the wireless web.

00:38:24.340 --> 00:38:26.039
It is terrific.

00:38:26.039 --> 00:38:28.389
I'm going to talk to you about three things.

00:38:28.389 --> 00:38:34.429
I'm going to talk about how you can encode
movies to optimize them for the iPhone.

00:38:34.429 --> 00:38:37.940
How you can configure a server to make
sure that it's compatible with the iPhone.

00:38:37.940 --> 00:38:41.639
And I'm going to talk about embedding movies on web pages.

00:38:41.639 --> 00:38:50.549
But first, I'm going to have my own little demo
about what the iPhone web video experience is like.

00:38:50.550 --> 00:38:53.269
Again, we're using prerecorded movies.

00:38:53.269 --> 00:38:57.349
Here's the start page, the start screen.

00:38:57.349 --> 00:39:00.329
Let's bring up the web browser and look at bookmarks.

00:39:00.329 --> 00:39:06.759
I have a bookmark here that will take us to a webpage
that we set up that has the Mac World Keynote Presentation

00:39:06.760 --> 00:39:09.970
from January this year, where Steve introduced the iPhone.

00:39:09.969 --> 00:39:12.179
There's a little blue button in the corner.

00:39:12.179 --> 00:39:15.059
The blue button is how you bring up the video for playback.

00:39:15.059 --> 00:39:18.590
Let's listen to Steve for a sec.

00:39:18.590 --> 00:39:24.190
>> Steve: This is a day I've been
looking forward to for 2.5 years.

00:39:24.190 --> 00:39:24.530
>> Sam: Okay.

00:39:24.530 --> 00:39:30.170
So let's have a look at what the elements on the screen are.

00:39:30.170 --> 00:39:34.619
At the top, there's a timeline so we
can see where in the movie we are.

00:39:34.619 --> 00:39:42.489
At the bottom there's the familiar rewind, play or
pause and fast-forward buttons and a volume control.

00:39:42.489 --> 00:39:48.139
Now we can rotate iPhone to go into landscape
mode, which is often a better fit for a video.

00:39:48.139 --> 00:39:51.170
We can let it play again in a moment.

00:39:51.170 --> 00:39:57.139
But first, I'm going to jump into
middle by dragging that timeline slider.

00:39:57.139 --> 00:39:59.579
Now we just did something cool here.

00:39:59.579 --> 00:40:01.210
We did something terrific.

00:40:01.210 --> 00:40:03.940
We've skipped halfway through this movie.

00:40:03.940 --> 00:40:12.409
This move is about a gigabyte long and we've jumped way
past the portion of the movie that we've already downloaded.

00:40:12.409 --> 00:40:17.879
This is here on the iPhone before you were
able to do that on QuickTime on your desktop.

00:40:17.880 --> 00:40:24.119
Another thing to have a look at, on the
top right corner there's a little icon

00:40:24.119 --> 00:40:27.210
with two arrows pointing towards each other.

00:40:27.210 --> 00:40:35.990
This button is how you can toggle between a landscape,
sorry, between a letterbox and a full screen view.

00:40:35.989 --> 00:40:37.149
So let's do that quickly.

00:40:37.150 --> 00:40:41.950
It turns out that with this particular content at this
point in the movie, there are black bars at the side.

00:40:41.949 --> 00:40:46.899
So going to the letterbox means you see black
bars all the way around, which isn't, perhaps,

00:40:46.900 --> 00:40:49.139
the right choice for this content right now.

00:40:49.139 --> 00:40:55.690
>> So let's go to Amazon, and I love to go to the DVD
section of Amazon and see what DVD's they're selling.

00:40:55.690 --> 00:41:01.070
>> Sam: So, at this point, Steve is doing a
live demo of the web browser on the phone.

00:41:01.070 --> 00:41:04.980
But I am showing you a movie of an iPhone.

00:41:04.980 --> 00:41:11.099
It's a little bit self referential, I apologize.

00:41:13.789 --> 00:41:20.590
We can rotate the video while it's
playing, that's not a problem.

00:41:20.590 --> 00:41:26.400
So if we tap the screen, the heads up display
comes back up and we can tap the done button

00:41:26.400 --> 00:41:28.730
in the corner to return back to the webpage.

00:41:28.730 --> 00:41:33.019
Okay. So that's a page that we set up.

00:41:33.019 --> 00:41:39.739
Although the content is the same content that you
could download as a video podcast of that keynote.

00:41:39.739 --> 00:41:44.279
But we constructed that page so we could have done anything.

00:41:44.280 --> 00:41:50.560
But there are oodles of web pages with video on them
right out there right now and many of them work just fine.

00:41:50.559 --> 00:41:52.900
So let's go and visit a couple of those.

00:41:52.900 --> 00:41:58.360
. let's go and take a look at Tiki Bar TV.

00:41:58.360 --> 00:42:03.920
Tiki Bar TV is a humorous video podcast made up in Canada.

00:42:03.920 --> 00:42:04.409
Go Canada.

00:42:04.409 --> 00:42:14.799
Oh, this is a little bit rude.

00:42:14.800 --> 00:42:16.100
Please don't do this.

00:42:16.099 --> 00:42:21.319
Please don't bring up JavaScript alerts
asking your users to go and download software.

00:42:21.320 --> 00:42:24.309
You don't know whether or not they'll be able to.

00:42:24.309 --> 00:42:29.659
Certainly on the iPhone there is no Flash,
and you're not going to be able to go

00:42:29.659 --> 00:42:33.170
to a new webpage and download a new version of Flash.

00:42:33.170 --> 00:42:36.889
Besides, I think somebody spelled Adobe wrong.

00:42:36.889 --> 00:42:39.409
It's spelled with fewer M's.

00:42:41.199 --> 00:42:42.259
all right.

00:42:42.260 --> 00:42:44.320
Let's cancel out of this alert.

00:42:44.320 --> 00:42:47.980
Apart from that, this page works fine.

00:42:47.980 --> 00:42:54.929
Let's tap on that little blue play
icon to focus in on the movie.

00:42:54.929 --> 00:42:56.509
Ah.

00:42:56.510 --> 00:43:01.160
( Music )

00:43:01.159 --> 00:43:07.619
>> It's a story of a guy and a girl and another guy and she
builds a robot and it serves some drinks and it goes crazy.

00:43:07.619 --> 00:43:09.940
Everyone lives happily ever after.

00:43:09.940 --> 00:43:13.139
I'm just going to skip over, past to the end.

00:43:13.139 --> 00:43:16.509
Watch what happens when we play past the end of the movie.

00:43:16.510 --> 00:43:35.080
( Music )

00:43:35.079 --> 00:43:37.519
>> Sam: Wacky Canadians.

00:43:37.519 --> 00:43:39.500
Okay. Let's visit another site.

00:43:39.500 --> 00:43:41.510
Let's go to Rocketboom.

00:43:41.510 --> 00:43:48.650
( Pause in speaking. )

00:43:48.650 --> 00:43:50.500
>> Sam: Here's the page loading.

00:43:50.500 --> 00:43:53.909
The gray box is the media content.

00:43:53.909 --> 00:43:59.799
It's a gray box because there's not poster image but we
can recognize that there's a player icon in the corner

00:43:59.800 --> 00:44:02.100
and if we hit that, we'll focus in on the video.

00:44:02.099 --> 00:44:04.509
Let's watch this for a moment.

00:44:04.510 --> 00:44:10.010
( Pause in speaking. )

00:44:10.010 --> 00:44:23.360
( Music, newscaster speaking. )

00:44:23.360 --> 00:44:24.050
>> Sam: How depressing.

00:44:24.050 --> 00:44:27.810
If only they'd let me vote.

00:44:27.809 --> 00:44:31.679
So we're not limited to just video podcasts.

00:44:31.679 --> 00:44:34.799
We can play audio podcasts from webpages as well.

00:44:34.800 --> 00:44:38.080
Let's go to the website for one of those.

00:44:38.079 --> 00:44:47.559
There's one called Escape Pod, which is short
form, science fiction, spoken word short stories.

00:44:47.559 --> 00:44:52.269
Like many podcasts, there's a website
that has details about every episode.

00:44:52.269 --> 00:44:56.500
And we can go in and zoom in on this episode and
see if we can find a link that'll let us play it.

00:44:56.500 --> 00:45:03.219
So here we go and we'll zoom in
and then pan down and have a look.

00:45:05.550 --> 00:45:07.910
Ah, a download link, that'll do.

00:45:07.909 --> 00:45:09.839
Let's pop up that link.

00:45:09.840 --> 00:45:15.950
Listen to this.

00:45:15.949 --> 00:45:16.909
>> Warning.

00:45:16.909 --> 00:45:19.440
Today's story is a children's story.

00:45:19.440 --> 00:45:24.480
There is no strong language, no adult
content and very little violence.

00:45:24.480 --> 00:45:29.800
We recommend that mature audiences listen
only with the direct supervision of a child.

00:45:31.000 --> 00:45:31.929
>> Sam: Okay.

00:45:31.929 --> 00:45:34.519
Be warned, everything on the internet isn't safe for adults.

00:45:34.519 --> 00:45:37.869
So what have we seen?

00:45:37.869 --> 00:45:46.319
We've seen that lots of pages with video and audio
content just work great on the iPhone right now.

00:45:46.320 --> 00:45:50.430
But there are some ways in which you
can optimize the iPhone video experience

00:45:50.429 --> 00:45:53.079
for people coming and looking at your content.

00:45:53.079 --> 00:45:58.650
Let's start out by talking about encoding.

00:45:58.650 --> 00:46:06.240
If you've used QuickTime Player Pro to encode video, you
know that there is an export command in the file menu

00:46:06.239 --> 00:46:08.769
and there's a list of exporters that you can choose from.

00:46:08.769 --> 00:46:15.019
There are four exporters that you can
use to prepare content for the iPhone.

00:46:15.019 --> 00:46:16.699
Two of these you're familiar with.

00:46:16.699 --> 00:46:23.769
There's the movie to iPod exporter and the movie
to MPEG4 exporter and two of these are coming soon.

00:46:23.769 --> 00:46:29.929
There's one that's called Movie to iPhone and
one that's called Movie to iPhone-Cellular.

00:46:29.929 --> 00:46:32.960
Unfortunately these didn't make it into the Leopard scene.

00:46:32.960 --> 00:46:34.510
I apologize.

00:46:34.510 --> 00:46:40.170
But that makes this an excellent opportunity
for me to plug the QuickTime scene program.

00:46:40.170 --> 00:46:46.230
If you'd like to apply to participate in our QuickTime
Seeding, please send mail seedqt@apple.com,

00:46:46.230 --> 00:46:50.500
mention the name of this session so they
understand where you're coming from.

00:46:50.500 --> 00:46:57.349
Let's talk about the supported
formats in a little bit more detail.

00:46:57.349 --> 00:47:04.079
iPhone supports a broad array of codecs
for video and audio file formats.

00:47:04.079 --> 00:47:05.449
It supports H.264.

00:47:05.449 --> 00:47:06.269
It supports AHC.

00:47:06.269 --> 00:47:13.159
It supports everything that can play on
today's iPod video and then a whole bunch more.

00:47:13.159 --> 00:47:17.349
Talking about video codec jargon for
a moment, for those of you who know,

00:47:17.349 --> 00:47:24.500
we support H.264 Baseline Profdile Level 3.0
up to 640 by 480 at 30 fps.

00:47:24.500 --> 00:47:31.650
Now some of you may not know all of these details about
H.264 spec. you don't have to know a whole lot about it,

00:47:31.650 --> 00:47:38.470
but what I want you to understand is that some of the
technologies and tools we use to encode video for high def

00:47:38.469 --> 00:47:44.689
on the desktop are not supported by the
baseline profile that the iPhone uses.

00:47:44.690 --> 00:47:50.670
In particular, B frames are not in the baseline
profile and hence B frames are not supported

00:47:50.670 --> 00:47:53.360
in the video content that can be played on the phone.

00:47:53.360 --> 00:48:04.800
We need to start thinking about bitrate a bit more than
we have in the past when delivering content to the iPod.

00:48:04.800 --> 00:48:12.870
When you sync content to an iPod, you
do so using iTunes and a fast USB cable.

00:48:12.869 --> 00:48:18.259
The bitrate basically only effects
the size on the iPod's disc.

00:48:18.260 --> 00:48:24.940
Now that would effect the number of movies
you could jam onto your large iPod disk.

00:48:24.940 --> 00:48:32.190
If you were to try to transfer a movie that would seem
complicated or too high of a bitrate, iTunes would step in

00:48:32.190 --> 00:48:40.369
and act as a kind of gatekeeper to protect you from
transferring content that you wouldn't be able to play.

00:48:40.369 --> 00:48:44.150
Now the iPhone is a widescreen video iPod.

00:48:44.150 --> 00:48:47.130
So it supports that to begin with.

00:48:47.130 --> 00:48:51.800
But it also adds this new model of the
wireless web and being able to stream content.

00:48:51.800 --> 00:48:57.000
And in the streaming case, the bit
rate determines the user experience.

00:48:57.000 --> 00:49:02.929
Because if the bitrate is too high, then the
network is not able to deliver date in time,

00:49:02.929 --> 00:49:07.409
then we'll run out of data and we'll stall.

00:49:07.409 --> 00:49:14.879
Remember, like Richard said, the Edge
network is a much smaller pipe than WiFi.

00:49:14.880 --> 00:49:23.160
Another thing to think about is that if you
encode video with the iPhone's screen size

00:49:23.159 --> 00:49:26.369
in mind, you'll get better looking results.

00:49:26.369 --> 00:49:30.909
The iPhone's screen is 480 by 320 pixels exactly.

00:49:30.909 --> 00:49:32.589
This is actually really easy to remember.

00:49:32.590 --> 00:49:38.220
It's exactly 160 pixels per in`ch and
it's exactly two inches by three inches.

00:49:38.219 --> 00:49:43.529
We recommend that you pick an encoded
movie size within 480 by 360.

00:49:43.530 --> 00:49:47.310
this is the next four by three size upwards.

00:49:47.309 --> 00:49:57.170
Remember that users can choose a letterboxed view or a
full screen view and the scaling choices between these.

00:49:57.170 --> 00:50:04.480
The scaling on iPhone's hardware
acceleration is incredibly high quality.

00:50:04.480 --> 00:50:06.460
It looks terrific.

00:50:08.010 --> 00:50:10.980
So let's go back and look at those four exporters again.

00:50:10.980 --> 00:50:13.480
What are the results we get out of those?

00:50:13.480 --> 00:50:21.869
From the new movie to iPhone exporter, that
targets about one megabit, for WiFi connections.

00:50:21.869 --> 00:50:28.909
The new Movie to iPhone Cellular exporter targets
Edge data rates at about 80 kilobits per second.

00:50:28.909 --> 00:50:35.819
The existing Movie to iPod exporter targets 1.6 megabits.

00:50:35.820 --> 00:50:43.280
Be aware that even though it's a higher data rate than Movie
to iPhone, you should get better results with the Movie

00:50:43.280 --> 00:50:46.600
to iPhone exporter, even though it's one megabit.

00:50:46.599 --> 00:50:53.089
If you're a wizard and you want to twiddle all the
knobs, you can use the Movie to MPEG-4 exporter.

00:50:53.090 --> 00:50:59.470
But you wizards, I want you to remember one thing,
you have to make sure that your content will conform

00:50:59.469 --> 00:51:05.969
to the baseline profile and to do that you
need to go to the H.264 video options dialogue,

00:51:05.969 --> 00:51:09.719
find the checkbox that says baseline,
and make sure that's checked.

00:51:09.719 --> 00:51:12.489
Store that in your noggin wizards.

00:51:12.489 --> 00:51:15.639
Okay. So here's my Goldilocks slide.

00:51:15.639 --> 00:51:19.909
All of these are the best choice for someone.

00:51:19.909 --> 00:51:26.329
On iPhone, over Edge, we want it to be
a low data rate version of the movie.

00:51:26.329 --> 00:51:32.079
On iPhone in a WiFi network, you
want to choose a one megabit version.

00:51:32.079 --> 00:51:36.250
On the desktop you probably want to use
high technologies and maybe high def sizes.

00:51:36.250 --> 00:51:41.880
Now, on your website you can have three
links to these three different choices.

00:51:41.880 --> 00:51:48.930
But that's requiring the viewer, the user of that iPhone
to know all of that stuff that I just explained to you.

00:51:48.929 --> 00:51:56.169
And it might be better, I put it to you, it might be
better to make the iPhone make the decision for itself.

00:51:56.170 --> 00:52:03.400
We have a technology that's been in QuickTime since
QuickTime 3 that we've got for this called reference movies.

00:52:03.400 --> 00:52:05.230
A reference movie is a simple idea.

00:52:05.230 --> 00:52:10.039
It's a list of URLs to movies with a
little decision tree to pick between them.

00:52:10.039 --> 00:52:16.759
And the tools in the decision tree include being
able to detect the bitrate of the connection

00:52:16.760 --> 00:52:19.690
and the capabilities of the target device.

00:52:19.690 --> 00:52:26.929
We have added the ability to describe
am I on the iPhone as a test.

00:52:26.929 --> 00:52:34.199
So, with a reference movie you can have
the iPhone detect when it's on Edge or WiFi

00:52:34.199 --> 00:52:43.469
and pick between a low data rate 1 megabit version of a
movie stream and on the desktop it knows it's on my phone

00:52:43.469 --> 00:52:52.469
and I'll use another movie, or another selection of movies,
because we can detect the network data rate there, too.

00:52:52.469 --> 00:52:59.589
There's a tool called make ref movie that we use
and we have available to help make reference movies.

00:52:59.590 --> 00:53:04.280
We will be updating it to include
the iPhone test fairly soon.

00:53:04.280 --> 00:53:08.160
So let's move on to the second
thing I was going to tell you about.

00:53:08.159 --> 00:53:09.889
That's server configuration.

00:53:09.889 --> 00:53:15.679
Now do you remember when I jumped half
way through that long, long movie?

00:53:15.679 --> 00:53:17.099
It was a gigabyte long.

00:53:17.099 --> 00:53:18.469
How do we do that?

00:53:18.469 --> 00:53:26.679
Well there's a technology in HTTP1 spec, 1.1
spec, since 1999 called byte-range requests.

00:53:26.679 --> 00:53:31.679
Also called content range or partial range,
I think the spec is all of those names.

00:53:31.679 --> 00:53:36.559
A byte-range request allows a client to say hey,
server, give me this file, but not the whole thing,

00:53:36.559 --> 00:53:38.559
I just want this little bit in the middle.

00:53:38.559 --> 00:53:44.920
We use byte-range requests on the iPhone to
do random access feeds of the media file.

00:53:44.920 --> 00:53:54.389
And in fact, it's so important to the mobile web content
viewing experience that we require byte-range support.

00:53:54.389 --> 00:53:56.789
Let me say that again, it's quite important.

00:53:56.789 --> 00:54:04.019
The iPhone requires byte-range support from
the server that's serving the media files.

00:54:04.019 --> 00:54:11.489
And if it doesn't find that it does have byte-range support,
it'll just display an icon saying sorry, I can't play this.

00:54:11.489 --> 00:54:18.939
So, the good news is byte-range support
is in most HTTP 1.1 servers already.

00:54:18.940 --> 00:54:24.990
If you are anxious, and maybe you should be,
and you're worried and you want to check whether

00:54:24.989 --> 00:54:29.079
or not your server supports there,
you can do an easy experiment.

00:54:29.079 --> 00:54:33.909
Bring up a terminal window, use the call
command line tool to download a short range

00:54:33.909 --> 00:54:37.019
at the beginning of the file and watch what happens.

00:54:37.019 --> 00:54:39.300
Call tells you how much is downloading
and how much it's doing,

00:54:39.300 --> 00:54:45.519
and if it seems to be saying I've just downloaded the
first hundred bytes and I've stopped, that's great.

00:54:45.519 --> 00:54:52.179
But if it says I'm downloading the whole file, even though
I asked for a little bit, then you should have a look

00:54:52.179 --> 00:54:55.710
at your web side and see if you
can reconfigure or adjust it.

00:54:55.710 --> 00:55:01.630
While you're tweaking your web server, another
thing to check is that you have configured it

00:55:01.630 --> 00:55:06.910
to send the correct mime types for
the movie file family suffixes.

00:55:06.909 --> 00:55:11.480
mp4, m4v, 3gpp, mov.

00:55:11.480 --> 00:55:18.929
Another thing to think about is whether or not your
media web server supports movies over two gigabytes.

00:55:18.929 --> 00:55:20.230
iPhone does.

00:55:20.230 --> 00:55:24.579
For what it's worth, Apache 2 does,
I believe, out of the box.

00:55:24.579 --> 00:55:29.650
Okay, the third thing I was going to talk
about was embedding video into web pages.

00:55:29.650 --> 00:55:31.440
This is just the same as you'd do it.

00:55:31.440 --> 00:55:35.700
Follow our best current practices
for embedding video on web pages,

00:55:35.699 --> 00:55:42.089
we have a great tutorial called
embedding QuickTime on Apple's website.

00:55:42.090 --> 00:55:47.829
If you haven't read it, check it out.

00:55:47.829 --> 00:55:55.409
You remember how when we had a look at the two websites,
we just saw a gray box when we were looking at the webpage?

00:55:55.409 --> 00:56:01.119
This is what you're going to get if you embed
with the source pointing directly at a movie.

00:56:01.119 --> 00:56:07.400
Because we don't start decoding the video until
we switch into that full screen playback mode.

00:56:07.400 --> 00:56:16.690
An alternative is to set up a poster JPEG, which is a proxy
that fills in that area inside the webpage on the desktop

00:56:16.690 --> 00:56:21.579
until you click and on iPhone until you
transfer into the full screen playback.

00:56:21.579 --> 00:56:35.840
Many of you will be making JavaScript movie controls
to have really advanced interfaces, movie on the web.

00:56:35.840 --> 00:56:42.150
Peter Graffagnino session yesterday
afternoon showed an excellent example of this.

00:56:42.150 --> 00:56:44.480
On the iPhone, this doesn't really fit the model.

00:56:44.480 --> 00:56:52.460
Because on the iPhone, to begin with you're looking
at a webpage, which has your JavaScript running on it,

00:56:52.460 --> 00:56:58.079
and then you transition into full screen playback
and at that point, your JavaScript isn't there

00:56:58.079 --> 00:56:59.739
because your webpage isn't there anymore.

00:56:59.739 --> 00:57:04.619
So since they never appear at the same time it's
rather inconvenient for one to control the other.

00:57:04.619 --> 00:57:08.909
Now, you can still have JavaScript
to do navigation in the web domain,

00:57:08.909 --> 00:57:15.460
you just can't use it to control the
details of the playback of video or audio.

00:57:16.610 --> 00:57:24.170
Finally, a reminder for podcasters, if
you have a custom player on your webpage,

00:57:24.170 --> 00:57:28.389
I recommend that you also have a direct link to the media

00:57:28.389 --> 00:57:36.309
because a direct link will take an iPhone
user straight into full screen media playback.

00:57:36.309 --> 00:57:41.269
So let's summarize what I've talked about.

00:57:41.269 --> 00:57:47.690
We have new QuickTime exporters coming on to you soon.

00:57:47.690 --> 00:57:54.950
One of these targets a low data rate for Edge
networks, when you're outside of the range of WiFi.

00:57:54.949 --> 00:58:01.589
Another targets WiFi data rates, also on the iPhone.

00:58:01.590 --> 00:58:05.550
Use reference movies to finesse the problem
of using which and when and make sure

00:58:05.550 --> 00:58:09.980
that you automatically stream the best
content for the current circumstance.

00:58:12.230 --> 00:58:21.480
Configure your media servers to support byte-range requests,
or the iPhone won't be able to play your content from them.

00:58:21.480 --> 00:58:24.639
Poster JPEGs improve the embedded experience.

00:58:24.639 --> 00:58:32.170
And if you have a custom player, also
have a direct link to the podcast episode.

00:58:32.170 --> 00:58:37.320
You've got 17 days to prepare your
content for iPhone's arrival.

00:58:37.320 --> 00:58:41.170
You may not need to do very much.

00:58:41.170 --> 00:58:45.500
You can do a small amount and it can make a big difference.

00:58:45.500 --> 00:58:53.289
But this is going to be a terrific experience for you and
for all of the people who buy this terrific new product.

00:58:53.289 --> 00:58:55.190
I think we should all be very excited.

00:58:55.190 --> 00:58:57.809
Richard, would you like to wrap up?

00:58:57.809 --> 00:58:58.509
>> Richard: Sure.

00:58:58.510 --> 00:59:05.200
( Applause )

00:59:05.199 --> 00:59:08.599
>> Richard: Thanks a lot Sam.

00:59:08.599 --> 00:59:15.139
So we've seen that you really don't have to do very
much at all, if anything, to make your content work well

00:59:15.139 --> 00:59:23.839
on iPhone both for the HTML the
CSS and also for the media content.

00:59:23.840 --> 00:59:32.930
So, to summarize, there are some good design practices
that are applicable both to the desktop and for the iPhone.

00:59:32.929 --> 00:59:35.149
Follow those practices.

00:59:35.150 --> 00:59:40.329
Column layout, think about how your page is laid out.

00:59:40.329 --> 00:59:41.599
Size really matters.

00:59:41.599 --> 00:59:45.449
The Edge pipe is pretty small,
so design for that small pipe.

00:59:45.449 --> 00:59:52.349
Use media queries to provide alternate
style on your web content.

00:59:52.349 --> 01:00:00.529
And specifically for the iPhone, think about adding
a viewport meta property to the top of your HTML.

01:00:00.530 --> 01:00:05.290
Think about double tap and text size adjustment.

01:00:05.289 --> 01:00:10.860
Think about how events and how the user
will be interacting with your page.

01:00:10.860 --> 01:00:18.630
And finally, think about the media
and coding that Sam talked about.

01:00:18.630 --> 01:00:25.599
So for more information about the HTML and the CSS
stuff that we talked about, you can contact Mark Malone,

01:00:25.599 --> 01:00:30.809
the Internet Technologies Evangelist, and there's
a link, a few links here for more information.

01:00:30.809 --> 01:00:33.539
And on the media side of things,
you can contact Allan Shaffer.

01:00:33.539 --> 01:00:37.590
And there are a few more links
to things that Sam referred to.