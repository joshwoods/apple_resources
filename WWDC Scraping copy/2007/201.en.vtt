WEBVTT

00:00:16.949 --> 00:00:18.829
>> Good morning.

00:00:18.829 --> 00:00:23.869
My name is Christian Wagner and we're here this
morning to talk about Dashboard widget development,

00:00:23.870 --> 00:00:26.400
Effective Widget Development using Dashcode.

00:00:26.399 --> 00:00:28.320
So first off thanks for coming here.

00:00:28.320 --> 00:00:29.530
It's a bright and early Tuesday morning.

00:00:29.530 --> 00:00:32.070
Hopefully your attention spans are still at a good rate.

00:00:32.070 --> 00:00:35.189
And we'll teach you a lot of widget design this morning.

00:00:35.189 --> 00:00:40.189
So first and foremost, hopefully you're all
familiar with Dashcode or Dashboard at this point.

00:00:40.189 --> 00:00:45.589
It's this layer that overlies your desktop,
provides these miniature applications called widgets.

00:00:45.590 --> 00:00:48.490
And hopefully by now your Dashboard
looks a little bit more like this,

00:00:48.490 --> 00:00:51.320
has a whole bunch of these little applications on there.

00:00:51.320 --> 00:00:57.289
In Mac OS X Leopard, we're providing this new
application called Dashcode that helps you make widgets.

00:00:57.289 --> 00:01:00.649
Widgets, you probably know are made with web technologies.

00:01:00.649 --> 00:01:05.200
A lot of times its very buzz word compliant,
AJAX, Web 2.0 and all that brouhaha.

00:01:05.200 --> 00:01:06.430
So that's all there.

00:01:06.430 --> 00:01:11.100
Now Dashcode provides these wonderful templates
that help jump start your widget development.

00:01:11.099 --> 00:01:16.089
So for instance, it's very easy to make a widget
that counts down to an upcoming event like WWDC.

00:01:16.090 --> 00:01:21.680
It also has this great daily feed template
and helps you show like a comic or something

00:01:21.680 --> 00:01:24.350
that updates on a less regular frequency.

00:01:24.349 --> 00:01:28.099
Oops. There we go.

00:01:28.099 --> 00:01:30.849
So in case you like Dilbert, you
can easily make a Dilbert widget.

00:01:30.849 --> 00:01:35.169
And also now in Leopard we have
two new, new, two new templates.

00:01:35.170 --> 00:01:40.760
We have the video podcast template which makes
it really easy to make a video podcast widget.

00:01:40.760 --> 00:01:44.770
So if you have for instance a podcast like
Ask a Ninja, you can make a widget very easily.

00:01:44.769 --> 00:01:48.439
And there's also this great new
Google maps mash up template.

00:01:48.439 --> 00:01:54.539
So if you have any type of geographic data in an RSS feed or
an XML file, this guy can handle it, display that on a map.

00:01:54.540 --> 00:01:56.770
It's really easy to use.

00:01:56.769 --> 00:02:00.939
Now today's session is going to focus
on when you should make a widget.

00:02:00.939 --> 00:02:02.620
So there's three cases.

00:02:02.620 --> 00:02:05.680
The first one is you have a great idea, OK?

00:02:05.680 --> 00:02:10.670
You have a fantastic idea and you think
you know this really needs to be a widget.

00:02:10.669 --> 00:02:13.189
So that's the first case in which you would make a widget.

00:02:13.189 --> 00:02:14.729
Second case is you have a website.

00:02:14.729 --> 00:02:18.819
You have some online property that
you feel belongs on people's desktops.

00:02:18.819 --> 00:02:25.219
And this is great because it allows you to be on people's
Dashboard even when they're not visiting your website.

00:02:25.219 --> 00:02:29.120
The final case for making a widget
is when you have an application.

00:02:29.120 --> 00:02:36.289
So you want to provide a hot new Mac OS X technology
with your widget, or with your application to compliment it.

00:02:36.289 --> 00:02:41.769
Making a widget is a great way to pull out a single feature
from your application, put it on people's Dashboards

00:02:41.770 --> 00:02:44.790
so they don't always have to launch
your application to add that feature.

00:02:44.789 --> 00:02:50.539
Along the way we're going to talk about some things like color
and fonts and using those to the best of their advantage.

00:02:50.539 --> 00:02:54.569
And XML HTTP request and RSS feed parsing.

00:02:54.569 --> 00:02:56.329
And finally we're going to talk about some native technologies,

00:02:56.330 --> 00:03:00.030
how to use things like Automater
and AppleScript within your widget.

00:03:00.030 --> 00:03:05.539
So to get you in the mood for making a great idea, which
I just got two what I like to think are great ideas.

00:03:05.539 --> 00:03:09.099
First one is what I like to call the business card widget.

00:03:09.099 --> 00:03:10.560
So this is a sales tool.

00:03:10.560 --> 00:03:15.080
If you're a salesman and you're giving people
demos and your computer, you give them your demo

00:03:15.080 --> 00:03:18.780
and then afterwards you can just show
Dashboard, already have your information here.

00:03:18.780 --> 00:03:21.550
And they can just type in their email address and hit send.

00:03:21.550 --> 00:03:22.510
It does one thing.

00:03:22.509 --> 00:03:23.840
It does really well.

00:03:23.840 --> 00:03:26.710
It's a good model for a widget

00:03:26.710 --> 00:03:30.939
Another idea is the idea of an erase CD-RW widget.

00:03:30.939 --> 00:03:34.439
I don't know if you've ever erased a CD-RW
in Mac OS X, but it's actually kinda tricky.

00:03:34.439 --> 00:03:38.669
You have to go to disk utility, pull up
a dialog, it's, it's kinda convoluted.

00:03:38.669 --> 00:03:42.619
Here's a widget that just recognizes
when there's a CD-RW inside of your drive

00:03:42.620 --> 00:03:44.780
and if so gives you the option to erase it.

00:03:44.780 --> 00:03:46.939
One thing really well.

00:03:46.939 --> 00:03:51.639
So on that note, I'd like to talk about staying on task.

00:03:51.639 --> 00:03:54.750
A widget really needs to pick one thing and do it well.

00:03:54.750 --> 00:03:57.530
Up here you'll see a widget that is an iTunes controller.

00:03:57.530 --> 00:04:01.439
It does play, pause, forward, backwards,
has a scrub bar on it.

00:04:01.439 --> 00:04:04.210
And it also has the name of the currently playing track.

00:04:04.210 --> 00:04:08.689
But underneath you're seeing that it also shows you
some you know popular albums in iTunes right now.

00:04:08.689 --> 00:04:12.750
And the thing is, is that that's kind
of, that's kind of a discrepancy.

00:04:12.750 --> 00:04:13.530
It doesn't quite fit.

00:04:13.530 --> 00:04:15.780
There's too many degrees of separation there.

00:04:15.780 --> 00:04:19.600
So instead of doing something that's kind of
attenuated, do something that's more direct.

00:04:19.600 --> 00:04:23.180
For instance, here's the cover art
of the song that's playing right now.

00:04:23.180 --> 00:04:27.180
That's directly related to the song,
you've just provided a value add, OK?

00:04:27.180 --> 00:04:30.410
Or show the lyrics of the song that's playing right now.

00:04:30.410 --> 00:04:34.430
Or my personal favorite, show me when this
person's playing all over the United States

00:04:34.430 --> 00:04:37.060
or all over the world, show me their concert schedule.

00:04:37.060 --> 00:04:42.030
That's something that's directly related to the, to
the main focus of the widget, playing back a song.

00:04:42.029 --> 00:04:47.009
So on that note, I'd like to go to demo please.

00:04:47.009 --> 00:04:50.599
( Period of silence )

00:04:50.600 --> 00:04:57.650
So one of the big feature requests, and this might
surprise you, that we've had for Dashcode is for a template

00:04:57.649 --> 00:05:02.219
that does an analog clock, just
good old minutes, seconds, and hours.

00:05:02.220 --> 00:05:05.850
And I'm here to tell you that it's
actually really easy to do.

00:05:05.850 --> 00:05:06.830
You don't even need a template.

00:05:06.829 --> 00:05:09.550
You can do it in about five minutes
and we're going to build one right now.

00:05:09.550 --> 00:05:14.280
And what's cool about this is that normally when you make
a clock, you have to deal with all the drawing on a canvas,

00:05:14.279 --> 00:05:16.989
on a JavaScript canvas element
of the hands and all that stuff.

00:05:16.990 --> 00:05:20.490
Well, Dashcode includes some handy parts
that just make that all easy for you.

00:05:20.490 --> 00:05:21.650
You won't even have to do it.

00:05:21.649 --> 00:05:22.709
So let's go right into that.

00:05:22.709 --> 00:05:26.250
I'm going to bring up Dashcode here.

00:05:27.410 --> 00:05:32.180
And you'll see that we have the new templates here,
maps and video cap podcasts that I mentioned.

00:05:32.180 --> 00:05:35.780
But we're just going to start with a basic custom template.

00:05:37.410 --> 00:05:41.580
So now that we've got the window open here,
you'll see we've got the canvas right here

00:05:41.579 --> 00:05:43.839
in the center and that's where you design your widget.

00:05:43.839 --> 00:05:47.810
Over here on the side you have all of the
different elements that make up this widget

00:05:47.810 --> 00:05:51.120
and at the bottom here you have the steps
that guide you through making a widget.

00:05:51.120 --> 00:05:53.709
We're going to hide that right now.

00:05:53.709 --> 00:05:57.579
So I want this widget to be a square, so I'm
going to go here and bring up the Inspector.

00:05:57.579 --> 00:06:01.939
The Inspector is where you can modify the
elements for any element on the canvas, I'm sorry,

00:06:01.939 --> 00:06:04.350
the attributes for any element on the canvas.

00:06:04.350 --> 00:06:07.650
So what we're going to do is I'm going to select
the widget itself here in the Navigator.

00:06:07.649 --> 00:06:15.579
And go over to the Metrics Inspector and
just make this guy 300 by 300, there we go.

00:06:15.579 --> 00:06:16.889
So we've got a square one.

00:06:16.889 --> 00:06:21.209
And I don't need this Hello World
text, so I'm going to get rid of that.

00:06:21.209 --> 00:06:22.199
going to hide the Inspector.

00:06:22.199 --> 00:06:26.969
I'm going to bring up the Library is a handy place
to get all these different parts that we include.

00:06:26.970 --> 00:06:33.030
These are common controls and views, things you want to use
when making a widget and they really save you a lot of time.

00:06:33.029 --> 00:06:34.489
If you're already familiar with widget development,

00:06:34.490 --> 00:06:37.199
a lot of these wrap around the
existing Apple classes that we provide.

00:06:37.199 --> 00:06:40.149
These are JavaScript classes that
provide buttons and sliders.

00:06:40.149 --> 00:06:42.939
So you don't have to implement these yourself.

00:06:42.939 --> 00:06:48.209
So I'm going to look for one of the new
Dashcode-specific ones called a Gauge.

00:06:48.209 --> 00:06:52.370
Now the Gauge is literally like a radial display, right?

00:06:52.370 --> 00:06:55.100
It's just got a circle and a hand on it.

00:06:55.100 --> 00:06:57.960
They have it by default set up
to be kind of like a speedometer,

00:06:57.959 --> 00:07:00.669
but a clock is just a round circle with a pointer on it.

00:07:00.670 --> 00:07:03.300
So we're just going to use this for our clock.

00:07:03.300 --> 00:07:06.220
So I'm going to take this guy up here.

00:07:06.220 --> 00:07:10.670
And I'm going to resize it and see how it's not
doing it, it's not doing it proportionally?

00:07:10.670 --> 00:07:13.340
If I hold down the shift key, it'll make that proportional.

00:07:13.339 --> 00:07:15.519
So that's just a handy little, little tip.

00:07:15.519 --> 00:07:20.529
So now that I've got the Gauge here on my,
my canvas, I'm going to pull up the Inspector

00:07:20.529 --> 00:07:22.159
and I'm going to go to the Attributes Inspector.

00:07:22.160 --> 00:07:24.870
This is where I can set various
attributes on how this Gauge works.

00:07:24.870 --> 00:07:26.480
I'm going to set some values here.

00:07:26.480 --> 00:07:29.379
First thing I'm going to do is I'm going to call this guy minutes.

00:07:29.379 --> 00:07:32.689
I'm going to turn off my caps lock and type that again.

00:07:32.689 --> 00:07:34.660
OK, so now this is our, going to be our minutes hand, OK?

00:07:34.660 --> 00:07:41.180
And then down here on the bottom there's the different
values that this, that this control corresponds to.

00:07:41.180 --> 00:07:44.280
So right now its range is 0 to 100.

00:07:44.279 --> 00:07:48.259
We're going to change that to be 0 to 60,
because there's 60 minutes in an hour.

00:07:48.259 --> 00:07:52.029
And then there's also different
Thresholds where it'll change this display.

00:07:52.029 --> 00:07:53.429
We don't worry about that right now.

00:07:53.430 --> 00:07:54.530
We're just going to get rid of that altogether.

00:07:54.529 --> 00:07:57.889
We're going to set its Warning value off to 80, out of range.

00:07:57.889 --> 00:08:02.509
And now for Geometry, by default,
this guy kind of goes from 45 to 315.

00:08:02.509 --> 00:08:06.420
So we're going to change that so it goes
from 0 all the way around to 360.

00:08:06.420 --> 00:08:10.970
So if I type in 0, you'll see that the
Gauge, by default actually points straight down.

00:08:10.970 --> 00:08:13.270
So we want that to go up 180 degrees.

00:08:13.269 --> 00:08:14.930
So we're actually going to have it start at angle B,

00:08:14.930 --> 00:08:18.920
180 degrees and we're going to have it
go one revolution around from that.

00:08:18.920 --> 00:08:22.569
We're going to have it to 540 degrees.

00:08:22.569 --> 00:08:27.509
And the last thing I'm going to do is I'm going to take
this guy's background image which is right now kind

00:08:27.509 --> 00:08:31.939
of this Gauge style, we're just going to but a clear
PNG there so that there's no background at all.

00:08:31.939 --> 00:08:34.539
So I'm going to click Choose here.

00:08:34.539 --> 00:08:36.490
Or actually I'll show you something else you can do.

00:08:36.490 --> 00:08:40.330
If we go here to the Files view, these
are all the files that make this widget

00:08:40.330 --> 00:08:44.550
and there's an Images directory right here in the
bottom that house all the images for this widget.

00:08:44.549 --> 00:08:48.500
So I've got this clear PNG right here, I'm
just going to drop that into the Images directory

00:08:48.500 --> 00:08:50.529
and you'll see that now we've got that there.

00:08:50.529 --> 00:08:55.039
That's how easy it is to add an image or
any type of supporting file to a widget.

00:08:55.039 --> 00:09:01.539
So back to our Inspector, I'm going to choose the
picture here and I'm going to just choose within,

00:09:01.539 --> 00:09:04.889
actually I'll just choose the clear PNG off the desktop.

00:09:06.600 --> 00:09:12.580
OK, and then I'll do the same for the on value that
way when we change a value, it'll also be clear.

00:09:12.580 --> 00:09:14.980
OK, now that'll update on the canvas in a second.

00:09:14.980 --> 00:09:17.000
But, so we've got the minutes hand all set up.

00:09:17.000 --> 00:09:22.070
I'm going to duplicate this guy and I'm
going to use this one to be my hours hand.

00:09:22.070 --> 00:09:26.030
So I've got it right on top of the minutes
and I'm going to go back here to the values.

00:09:26.029 --> 00:09:31.709
Now hours go from 0 to 12 instead
of 0 to 60, so I'm going to choose 60.

00:09:31.710 --> 00:09:36.440
And then one other thing the hours hand on a watch is
usually a little bit smaller than your minutes hand.

00:09:36.440 --> 00:09:42.230
So in the Geometry here, instead of being
85 of the...85% of the radius of the,

00:09:42.230 --> 00:09:45.200
the Gauge, I'm going to make it be 60%.

00:09:45.200 --> 00:09:47.850
OK, so that's our minutes hand, or the hours hand.

00:09:47.850 --> 00:09:50.590
I'm going to change this ID to be hours.

00:09:50.590 --> 00:09:52.310
And now we've got hours.

00:09:52.309 --> 00:09:54.649
So the last thing I need to do is add a seconds hand.

00:09:54.649 --> 00:09:57.389
So I'm going to take the minutes and
I'm going to duplicate it one more time.

00:09:57.389 --> 00:10:01.199
And to duplicate it, I'm just using
command-D, or File > Duplicate.

00:10:01.200 --> 00:10:05.200
And I'm going to go and change its ID to be seconds.

00:10:06.289 --> 00:10:10.299
going to move it, lets see, lets move everything
out of the way here.

00:10:10.299 --> 00:10:13.889
going to move it so it's on top of the minutes too.

00:10:13.889 --> 00:10:18.179
And then I want it to be underneath the minutes hand,
so if you just got into the Navigator on the side,

00:10:18.179 --> 00:10:23.739
and you just move the seconds below the minutes there,
which is above, below, it's just how the Dom ordering is.

00:10:23.740 --> 00:10:29.100
And we are going to make the second hands be 95%.

00:10:29.100 --> 00:10:29.750
And that's it.

00:10:29.750 --> 00:10:31.100
We've just pretty much designed a widget.

00:10:31.100 --> 00:10:33.769
Now this is obviously not the most
gorgeous widget you're ever going to see.

00:10:33.769 --> 00:10:36.139
But the rest is just art at this point.

00:10:36.139 --> 00:10:38.679
Except for the code to actually make the hands move.

00:10:38.679 --> 00:10:39.399
Let's do that.

00:10:39.399 --> 00:10:48.019
So if I go to the View menu and I show the Source Code,
you'll see the Source Code editor pops up underneath.

00:10:48.019 --> 00:10:52.649
I'm going to just double click on the separator that brings
the code all the way up to the top and I'm going to click

00:10:52.649 --> 00:10:55.990
on our green dot here to make it fill screen.

00:10:55.990 --> 00:10:59.210
Now I have one function here that I wrote already,

00:10:59.210 --> 00:11:03.610
just going to drag it in right here
at the top that changes the time.

00:11:03.610 --> 00:11:06.279
And so what this does, this has seven lines of code.

00:11:06.279 --> 00:11:14.399
OK? It gets a new JavaScript data object, pulls out the
hours, minutes, and seconds and then it uses the Dom to go

00:11:14.399 --> 00:11:19.459
and get the Gauges individually and just set their
values to the respective hours, minutes, and seconds.

00:11:19.460 --> 00:11:20.590
That's all this does.

00:11:20.590 --> 00:11:23.090
OK? So I'm going to run this widget.

00:11:23.090 --> 00:11:28.629
If you just click on the Run button here,
the widget launches and nothing happens,

00:11:28.629 --> 00:11:30.710
because I have never called this function.

00:11:30.710 --> 00:11:35.580
So I could quit the widget right now, but I'm
going to be lazy and use Dashcode Evaluator.

00:11:35.580 --> 00:11:40.810
If you go to View and EWvaluator here, the Evaluator
is a JavaScript console that lets me run in,

00:11:40.809 --> 00:11:45.919
individual JavaScript commands in one, in
real time in the run time one at a time.

00:11:45.919 --> 00:11:53.250
So I'm just going to call the setClock() function right
here and you'll see that we now have the time set.

00:11:53.250 --> 00:11:55.279
So that's works pretty well.

00:11:55.279 --> 00:12:00.480
Let's hook it up so that this, this
clock now refreshes every second.

00:12:00.480 --> 00:12:03.399
To do that, we're going to bring up the
source code again and the shortcut

00:12:03.399 --> 00:12:07.819
for getting the source code is just clicking
this button in the, the bottom bar here.

00:12:07.820 --> 00:12:11.350
And there's two, two events that we care about here.

00:12:11.350 --> 00:12:13.379
On widget show and on widget hide.

00:12:13.379 --> 00:12:16.860
So when the widget is shown we
want this clock to start updating.

00:12:16.860 --> 00:12:21.220
So we're going to go here in the function
pop up and look for the show function.

00:12:21.220 --> 00:12:27.710
And what I'm going to do is I'm going to use an interval and
I'm going to set that interval to update every second.

00:12:27.710 --> 00:12:36.480
So I'm going to say setInterval, whoops,
I'm actually going to say myInterval,

00:12:36.480 --> 00:12:41.480
I'm going to use a global variable to
hold this, then say setInterval.

00:12:41.480 --> 00:12:43.330
(SetClock)

00:12:45.080 --> 00:12:51.200
Every 1000 seconds, and again since I have a
global variable, I should declare it globally.

00:12:51.200 --> 00:12:58.379
myInterval = null and I'll put a var in front of that.

00:12:58.379 --> 00:13:01.919
And that also in the hide function,
I should clean that up, OK?

00:13:01.919 --> 00:13:07.089
And the idea behind this is when a widget, when
Dashboard is not showing, you shouldn't take up any CPUs.

00:13:07.090 --> 00:13:10.379
So it should turn off any timers
intervals that you're using.

00:13:10.379 --> 00:13:14.000
OK? So I'm going to do clearInterval here.

00:13:14.000 --> 00:13:18.809
I'm going to say go ahead and get rid of myInterval.

00:13:18.809 --> 00:13:24.349
And just for bookkeeping purposes, I'm going to set it to null.

00:13:24.350 --> 00:13:27.730
OK, so this, fingers crossed, should work.

00:13:27.730 --> 00:13:30.139
I'm going to hit the Run button here.

00:13:30.139 --> 00:13:35.039
And there we go, every second we
got this second hand sweeping about.

00:13:35.039 --> 00:13:36.230
So that is pretty much it.

00:13:36.230 --> 00:13:38.529
Like I said, the rest of this widget is just design.

00:13:38.529 --> 00:13:42.509
So just to give you a taste of what
can be done here, here's a version,

00:13:42.509 --> 00:13:45.200
and I just got some art from Dashcodes Archive Max.

00:13:45.200 --> 00:13:47.030
And he put that in the background here.

00:13:47.029 --> 00:13:49.600
And I also added a little bit of animation.

00:13:49.600 --> 00:13:55.610
There's this Apple animator JavaScript class which will
let you iterate between values over a period of time.

00:13:55.610 --> 00:14:00.159
And so what I do is every time the second hand moves,
I don't just move it, I actually animate it to move.

00:14:00.159 --> 00:14:01.750
So let's run that.

00:14:01.750 --> 00:14:04.419
You'll see when it first loads,
it's going to move the hands about.

00:14:04.419 --> 00:14:10.709
And now every second, it's actually
moving the hand, using animation, so.

00:14:10.710 --> 00:14:12.340
Slides, please.

00:14:13.509 --> 00:14:22.340
( Period of silence )

00:14:22.340 --> 00:14:27.950
So now that I've shown you how easy it is to use
Dashcode to just, you know, make your great idea

00:14:27.950 --> 00:14:31.620
into a functioning widget, let's
talk a little bit about design.

00:14:31.620 --> 00:14:36.539
So the great thing about Dashcode has been that it's
been really easy for a lot of users to make widgets.

00:14:36.539 --> 00:14:40.959
One thing that we've seen a lot of is people taking
our templates and just kind of changing one color.

00:14:40.960 --> 00:14:44.590
And we think that there's a little bit more that
you can do to really make your widget stand out.

00:14:44.590 --> 00:14:48.399
So for instance, here's a Podcast and the person has
added, you know, a little bit of yellow in the gradient

00:14:48.399 --> 00:14:51.980
and the purple kinda goes against
the grain of the yellow and its,

00:14:51.980 --> 00:14:53.950
there's some things we could do to clean this guy up.

00:14:53.950 --> 00:14:57.710
So first thing we're going to do is I'm
going to talk about Color Schemer Studio.

00:14:57.710 --> 00:15:02.960
This is an application, third party, that
makes it easy to make color schemes.

00:15:02.960 --> 00:15:08.950
And so I'm a big fan, if you provide a color of using the
analogous colors, so those are nearby ones for different,

00:15:08.950 --> 00:15:12.720
for different buttons and objects on the widget canvas.

00:15:12.720 --> 00:15:16.950
And the monochromatic one is good
for glass and gradient effects.

00:15:16.950 --> 00:15:22.250
They also have this suggested colors feature which will give
you an entire scheme, an entire layout which is really handy

00:15:22.250 --> 00:15:24.149
if you're not good at picking out colors.

00:15:24.149 --> 00:15:27.319
It'll just give you an entire scheme
for your, for your widget.

00:15:27.320 --> 00:15:31.230
So using just the colors that you
find in Color Schemer Studio,

00:15:31.230 --> 00:15:36.039
you can make a widget that looks, originally would
look like this, and then use a little bit of glass

00:15:36.039 --> 00:15:42.169
and kind of transition it to be something, fits more
in with this yellow theme that the person chose.

00:15:42.169 --> 00:15:44.929
Another thing you can use to your advantage are fonts.

00:15:44.929 --> 00:15:49.189
This here is a list of standard fonts that
are included on every Mac OS X machine.

00:15:49.190 --> 00:15:52.530
And they're really clear, easy to read
and they're good for use on a widget.

00:15:52.529 --> 00:15:56.129
There's more fonts that are available in Mac OS X
but this is a good subset to work with.

00:15:56.129 --> 00:16:00.389
They're very versatile, they work well on widget interfaces.

00:16:00.389 --> 00:16:04.149
So for instance, if you have a widget that
does command-line output like this one,

00:16:04.149 --> 00:16:06.579
you might want to use a monospaced font like Monaco.

00:16:06.580 --> 00:16:09.080
This makes all your tabs and spaces look the same.

00:16:09.080 --> 00:16:10.480
It's kind of what people except.

00:16:10.480 --> 00:16:16.340
And that's the point I want to make here is that use fonts
that kind of reinforce what people inspect, expect.

00:16:16.340 --> 00:16:19.560
So if they're expecting a headline, use a nice serif font.

00:16:19.559 --> 00:16:24.519
If they're expecting something command
line, use a nice monospace Monaco font.

00:16:24.519 --> 00:16:28.779
And just in case you didn't quite jot down that
list, it's essentially the widgets that you, the,

00:16:28.779 --> 00:16:30.889
the fonts you can use with the Stickies widgets.

00:16:30.889 --> 00:16:36.639
So if you flip the Stickies widgets over backwards,
all of those fonts are very safe to use and Monaco.

00:16:36.639 --> 00:16:39.919
It's not there, but Monaco is a good one to use too.

00:16:39.919 --> 00:16:42.769
So the next thing I want to talk about
were Preferences on your widget

00:16:42.769 --> 00:16:46.159
and making sure you put the preferences
on the back of a widget.

00:16:46.159 --> 00:16:49.079
So here is a website, superconcerts.com that I made

00:16:49.080 --> 00:16:53.250
up that shows you the upcoming
concerts in your metropolitan area.

00:16:53.250 --> 00:17:00.080
And they put this pop-up on the bottom of the widget that
lets you choose what city of the concerts you'd like to see.

00:17:00.080 --> 00:17:03.040
So the thing is that how often do you move in your lifetime?

00:17:03.039 --> 00:17:05.230
A dozen times at most, right?

00:17:05.230 --> 00:17:10.720
So this is information that really doesn't need to
changed nearly as frequently as you use this widget.

00:17:10.720 --> 00:17:16.430
So if you flip this widget on to the back and move that
menu onto the back, that's where this type of stuff belongs.

00:17:16.430 --> 00:17:20.930
Things that don't get changed, updated as
frequently, go on to the back of the widget.

00:17:20.930 --> 00:17:24.560
In addition to any preferences, you might
want to also put About information on the back.

00:17:24.559 --> 00:17:27.940
So your website again, most people
know your widget belongs to you.

00:17:27.940 --> 00:17:29.840
That's why they put it there in the first place.

00:17:29.839 --> 00:17:32.799
So go ahead and put your About information on the back.

00:17:32.799 --> 00:17:39.019
So if I flip this guy back around, you'll see that now
I've saved myself a whole bunch of pixels on the bottom,

00:17:39.019 --> 00:17:44.250
making the widget smaller, making it more likely that
someone's going to want to keep this widget on their Dashboard.

00:17:44.250 --> 00:17:47.519
And you'll notice that I still have the
superconcerts.com banner on the top.

00:17:47.519 --> 00:17:51.379
I can get rid of that, now that I've put it
on the back and replace it with a control

00:17:51.380 --> 00:17:53.630
that lets me change which day is being displayed.

00:17:53.630 --> 00:17:55.510
And now the widget is infinitely more useful.

00:17:55.509 --> 00:17:59.960
I can you know go backwards, forwards in time
and see what concerts are playing on what day.

00:17:59.960 --> 00:18:02.500
So that's really handy.

00:18:02.500 --> 00:18:05.220
New in Leopard are syncing preferences.

00:18:05.220 --> 00:18:06.670
This is something you should be aware of.

00:18:06.670 --> 00:18:09.610
People can sync their Dashboards over .Mac and Leopard.

00:18:09.609 --> 00:18:13.699
And so you probably want to be aware of this
if you're saving preferences at any point.

00:18:13.700 --> 00:18:16.809
There's a new JavaScript handler called widget.onsync.

00:18:16.809 --> 00:18:22.259
And onsync is called whenever sync is completed
and new preferences, and it gives you a chance,

00:18:22.259 --> 00:18:27.589
sorry, to read your preferences and
compare those preferences to your state.

00:18:27.589 --> 00:18:31.750
So if there's new preference, just update your
state accordingly and you're in good shape.

00:18:31.750 --> 00:18:33.769
Now if you have any preferences that you would not

00:18:33.769 --> 00:18:38.980
like to have synced using .Mac, use
the SyncExclusions info plist key.

00:18:38.980 --> 00:18:46.009
Basically in this array you provide all of the keys that
you would like to not have synced and we'll respect that.

00:18:46.009 --> 00:18:50.220
I mentioned before in my last demo that the
Dashcode parts are really handy and I,

00:18:50.220 --> 00:18:56.420
and when you're making your great idea a widget, go ahead
and take a look, see if any of these parts suit your needs.

00:18:56.420 --> 00:18:59.519
There's a whole slew of them from
QuickTime all the way through to QC

00:18:59.519 --> 00:19:02.599
and some Dashcode-specific ones
like the Gauge and the Indicator.

00:19:02.599 --> 00:19:06.119
So go ahead, browse through there, they've
got descriptions and all that stuff.

00:19:06.119 --> 00:19:11.250
They're really handy and they might help you bring
your widget just that much quicker to market.

00:19:11.250 --> 00:19:15.339
And finally, Web Kit in Leopard has some new
features that might also be of use to you.

00:19:15.339 --> 00:19:17.839
First is -webkit-border-radius.

00:19:17.839 --> 00:19:20.879
So if you've ever used a rounded rectangle on your widget,

00:19:20.880 --> 00:19:25.360
you've probably had to do that
in, in Illustrator or Photoshop.

00:19:25.359 --> 00:19:29.500
Well, now in Leopard, you'll just be able
to take a div, put it on your widget,

00:19:29.500 --> 00:19:32.380
and then just use this CSS property
to round off its corners.

00:19:32.380 --> 00:19:35.080
And that allows you to change it on the
fly without having the round trip back

00:19:35.079 --> 00:19:37.289
and forth between a graphics app and Dashcode.

00:19:37.289 --> 00:19:38.670
So that's a really easy one.

00:19:38.670 --> 00:19:43.009
Another one that's in the same vein is -webkit-box-shadow.

00:19:43.009 --> 00:19:47.640
This puts drop shadows underneath any
element on a widget's UI, on a webpage too.

00:19:47.640 --> 00:19:50.810
And so what's great about this guy is
again, you don't have to round trip

00:19:50.809 --> 00:19:54.149
between Illustrator, or Photoshop and Dashcode.

00:19:54.150 --> 00:19:57.980
You'll just be able to apply this property,
tweak it on the fly, you got drop shadows.

00:19:57.980 --> 00:20:03.250
So using some of the things I just told you, I'd
like to go to demo and give a widget a makeover.

00:20:05.359 --> 00:20:10.519
So I have this widget here on my Dashboard
and this widget is a secure notepad.

00:20:10.519 --> 00:20:12.539
And they did do some things that I liked.

00:20:12.539 --> 00:20:15.319
I'm glad they made a widget and I'm
glad they made it this orange color

00:20:15.319 --> 00:20:17.839
because it's unique, it makes it stand out a bit.

00:20:17.839 --> 00:20:22.829
And so, but they did some things that I'd
like to now show you and tweak a little bit.

00:20:22.829 --> 00:20:29.909
So I've got the widget here on my desktop and all I'm going
to do is I'm going to drag the widget on to Dashcode.

00:20:29.910 --> 00:20:32.870
And when I do that Dashcode opens this widget in place.

00:20:32.869 --> 00:20:34.659
This is one of the features we've added.

00:20:34.660 --> 00:20:40.630
And we do this because sometimes you don't want to use
the code generation features that Dashcode offers.

00:20:40.630 --> 00:20:43.800
You just want to use the debugging
features and write all the code yourself.

00:20:43.799 --> 00:20:45.779
This mode gives you that.

00:20:45.779 --> 00:20:51.309
so you'll be able to just write the code and test it, using
the debugging features we're going to demonstrate tomorrow

00:20:51.309 --> 00:20:54.259
for you and you know that's going to work great.

00:20:54.259 --> 00:20:58.369
But the down side to this is that it makes
giving this widget a makeover kinda hard.

00:20:58.369 --> 00:21:02.219
You'll see I can't move any of
the elements here on the canvas.

00:21:02.220 --> 00:21:06.769
So what I'm going to do is if I go to the View
menu here, I can start the Code Generator.

00:21:06.769 --> 00:21:10.379
So that means importing this widget into a
widget project, not just opening it on disk,

00:21:10.380 --> 00:21:12.220
but actually making a new project out of it.

00:21:12.220 --> 00:21:14.009
So I'm going to click Start, Import.

00:21:14.009 --> 00:21:17.349
And I'm just going to save the new file on my desktop.

00:21:17.349 --> 00:21:18.569
And here we are.

00:21:18.569 --> 00:21:21.220
You'll notice that there was a stripe
along the bottom that had a lock on it.

00:21:21.220 --> 00:21:23.250
That meant that the code generation was off.

00:21:23.250 --> 00:21:25.589
Now that stripe with the lock is gone.

00:21:25.589 --> 00:21:27.359
We can do anything we want with this guy.

00:21:27.359 --> 00:21:31.859
So the first thing I want to do, and if you look at
this widget, there's this lock on the top corner here.

00:21:31.859 --> 00:21:34.269
And there's this big stripe of nothing to the side of it.

00:21:34.269 --> 00:21:36.799
So that's just kind of not the wisest use of space.

00:21:36.799 --> 00:21:42.159
So I'm going to take this lock and I'm going to
just move it straight down to the bottom.

00:21:42.160 --> 00:21:45.509
And I'm going to resize it a little
bit, even a little bit bigger.

00:21:45.509 --> 00:21:50.309
And so now by doing that I've got this huge stripe
of just orange up there that I can get rid of.

00:21:50.309 --> 00:21:53.819
So I'm going to select all of the items on my canvas here.

00:21:54.940 --> 00:21:58.960
And one trick when you import a widget is that
the Info button doesn't show up, but it's there.

00:21:58.960 --> 00:22:01.170
So make sure you grab that too.

00:22:01.170 --> 00:22:04.390
And I'm just going to move it straight up.

00:22:04.390 --> 00:22:07.380
So now I've reclaimed all of this space.

00:22:07.380 --> 00:22:11.270
Now you'll see that the front image doesn't resize with me.

00:22:11.269 --> 00:22:12.960
And that's because I've imported this widget.

00:22:12.960 --> 00:22:15.170
Dashcode doesn't know to redraw this.

00:22:15.170 --> 00:22:22.259
So I'm going to add a front image part to the, to the widget
here so that we can redesign it and add some effects to it.

00:22:22.259 --> 00:22:27.379
So if I bring up the Library here,
I'm just going to search for Front Image.

00:22:27.380 --> 00:22:31.330
I'm just going to drag it onto the widget right now.

00:22:31.329 --> 00:22:34.990
And by default it's locked, so I'm going
to just go right away and unlock it.

00:22:34.990 --> 00:22:37.440
That lets me freely move it.

00:22:37.440 --> 00:22:40.570
And I'm just going to move it so that
it fits here on the widget.

00:22:40.569 --> 00:22:44.759
And right now it's this gray gradient, which isn't terribly
exciting, so I'm going to bring up the Inspector here.

00:22:44.759 --> 00:22:46.509
And there's the Fill in Stroke Inspector.

00:22:46.509 --> 00:22:50.319
This lets me adjust the style, the
color, the stroke of any object.

00:22:50.319 --> 00:22:52.869
I'm just going to take this guy and right now make it solid.

00:22:52.869 --> 00:22:54.849
And I'm going to click this color chip.

00:22:54.849 --> 00:22:59.549
That brings up the Color Inspector, going to use the
magnifying glass to just grab this orange color.

00:22:59.549 --> 00:23:02.869
Like I said, I'm actually glad that
this person used a unique color,

00:23:02.869 --> 00:23:06.559
so we're just going to grab that and close out this.

00:23:06.559 --> 00:23:09.849
And get rid of the original image here.

00:23:09.849 --> 00:23:14.529
So I'm going to select this guy and one thing I'm going to
do is I'm going to turn Autoresize on the inside on.

00:23:14.529 --> 00:23:18.170
And so that means that when I resize
this widget on the canvas,

00:23:18.170 --> 00:23:22.810
it's going to automatically, automagically resize this
front image for me.

00:23:22.809 --> 00:23:26.279
So I'm going to shrink it again.

00:23:26.279 --> 00:23:29.279
( Period of silence )

00:23:29.279 --> 00:23:30.889
OK, so now we're doing better.

00:23:30.890 --> 00:23:37.160
So I'm going to go back here and solid color is okay, but
Dashboard gives me a little bit of glitz and glamour here.

00:23:37.160 --> 00:23:40.370
So I'm going to make this guy a gradient.

00:23:40.369 --> 00:23:43.739
And I don't like the orange to white so
I'm just going to take the orange color here,

00:23:43.740 --> 00:23:46.339
you can just grab it like any other NS color well.

00:23:46.339 --> 00:23:48.079
Drop it up here.

00:23:48.079 --> 00:23:50.279
And then if I put this guy, I'm going to make it lighter.

00:23:50.279 --> 00:23:52.599
So now I've got a nice light gradient.

00:23:52.599 --> 00:23:57.299
And, of course, Dashcode makes it easy
to put glass onto a, a front image,

00:23:57.299 --> 00:23:59.710
so I'm just going to take this guy and just play with it.

00:23:59.710 --> 00:24:01.090
And this is where you get to be the artist.

00:24:01.089 --> 00:24:03.829
You can, you can change these values however you see fit.

00:24:03.829 --> 00:24:07.509
I'm going to make it a little bit curved, move it up.

00:24:07.509 --> 00:24:09.210
But you see that, you know, I've done all this stuff.

00:24:09.210 --> 00:24:10.750
You really can't see it, right?

00:24:10.750 --> 00:24:13.930
We've got this big, white box just
blocking up our UI right now.

00:24:13.930 --> 00:24:15.810
So I am just going to get rid of it.

00:24:15.809 --> 00:24:16.609
There, it's gone.

00:24:16.609 --> 00:24:18.369
How are you going to use this widget though?

00:24:18.369 --> 00:24:24.259
So I'm going to get rid of the Inspector and bring
up the Library and I am going to just use a box.

00:24:24.259 --> 00:24:28.329
OK? Now a box is just Dashcode's word for a div.

00:24:28.329 --> 00:24:30.470
So I'm just going to drop this guy on here.

00:24:30.470 --> 00:24:35.569
( Period of silence )

00:24:35.569 --> 00:24:37.909
And I'm going to give it a new name in the Inspector.

00:24:37.910 --> 00:24:42.710
I'm going to call it inputbox.

00:24:42.710 --> 00:24:45.750
Now by default, you can't just type into any old div.

00:24:45.750 --> 00:24:51.920
We're going to use Web Kit's content editable support
to add this as a text field that you edit in.

00:24:51.920 --> 00:24:55.950
So I'm going to close off the Inspector here
and I'm going to use Dashcode's search feature

00:24:55.950 --> 00:24:58.420
to show me, to reveal the HTML for this element.

00:24:58.420 --> 00:25:00.590
Because I, I don't want to search through HTML.

00:25:00.589 --> 00:25:01.720
It's a pain in the neck.

00:25:01.720 --> 00:25:06.370
So I'm just going to put in inputbox
the name that I just gave this one.

00:25:06.369 --> 00:25:10.500
And you'll see here on the side, we now
have the object logically on the canvas.

00:25:10.500 --> 00:25:11.430
We have the style for this.

00:25:11.430 --> 00:25:13.240
And we also have the HTML.

00:25:13.240 --> 00:25:18.509
And so right here is the div that makes this box.

00:25:18.509 --> 00:25:20.279
So I've got a code snippet right here.

00:25:20.279 --> 00:25:22.819
I'm just going to drop it right in there.

00:25:22.819 --> 00:25:26.490
And you'll see what I've done is I've just
made this contenteditable="true".

00:25:26.490 --> 00:25:29.870
That means that this div I'll be able
to type into it and select in it.

00:25:29.869 --> 00:25:34.069
Do all the stuff that you normally expect from a text area.

00:25:34.069 --> 00:25:35.519
So that's step one.

00:25:35.519 --> 00:25:38.299
Step two, let's make it actually look like something.

00:25:38.299 --> 00:25:42.250
So I'm going to pop open this guy's CSS here.

00:25:42.250 --> 00:25:43.930
And you'll see that inputbox is right here.

00:25:43.930 --> 00:25:46.560
Actually let me double click on the
separator and bring us our code.

00:25:46.559 --> 00:25:48.669
So by default, there's all ready all of this CSS here.

00:25:48.670 --> 00:25:51.740
I'm going to add a couple of lines right here.

00:25:51.740 --> 00:25:53.099
And we're going to format that.

00:25:53.099 --> 00:25:54.519
So I'm going to use a couple things.

00:25:54.519 --> 00:26:00.609
First off, I'm going to use the -webkit-border-radius, what
I showed you before to give it some rounded corners.

00:26:00.609 --> 00:26:03.750
I'm also going to make it an -apple-dashboard-region.

00:26:03.750 --> 00:26:05.849
This is a subtle thing that some people miss.

00:26:05.849 --> 00:26:09.679
By default, a widget's UI can be
grabbed anywhere and moved around.

00:26:09.680 --> 00:26:14.920
But if you're within a text area, some place where someone's
adding text, you actually don't want that behavior.

00:26:14.920 --> 00:26:17.500
You want them to be able to select
the text, not move the widget.

00:26:17.500 --> 00:26:21.359
You use the -apple-dashboard-region
CSS property to make that happen.

00:26:21.359 --> 00:26:22.609
So there we go, we've added that.

00:26:22.609 --> 00:26:26.519
I've also just added some font information,
given it a Helvetica Neue Bold.

00:26:26.519 --> 00:26:28.109
We've made it 14 point.

00:26:28.109 --> 00:26:31.899
And I've also given it some padding by
having the rounded corners on there now.

00:26:31.900 --> 00:26:33.970
The text would normally just squish
right all the way to the edge

00:26:33.970 --> 00:26:36.339
and show up underneath the, the rounded corner, that's nice.

00:26:36.339 --> 00:26:37.399
That's not so nice.

00:26:37.400 --> 00:26:42.320
By giving it a padding, we're just making sure everything
fits nicely within our rounded, rounded rectangle.

00:26:42.319 --> 00:26:47.629
So I've added this code, let's go back to
the canvas, and see what it looks like.

00:26:47.630 --> 00:26:52.010
So now that we've refreshed, you'll see that now
I've got a rounded rectangle, we're almost there.

00:26:52.009 --> 00:26:55.259
Adding the padding changed the
dimensions of the div a little bit.

00:26:55.259 --> 00:26:57.390
So let's move that back.

00:26:57.390 --> 00:27:00.640
And I'm going to go here to the Inspector
and I'm going to tweak it a little bit.

00:27:00.640 --> 00:27:04.740
I don't like the back line around
it, so we're going to get rid of that.

00:27:04.740 --> 00:27:07.180
But I am going to fill it with a solid color.

00:27:07.180 --> 00:27:10.390
Instead of black, we're going to go to white.

00:27:10.390 --> 00:27:12.060
OK, so now we're almost to where we were before.

00:27:12.059 --> 00:27:13.419
We've got a big white box.

00:27:13.420 --> 00:27:16.200
Let's add some opacity, knock that down a little bit.

00:27:16.200 --> 00:27:20.220
We're going to move it down to 60 some odd one`s here.

00:27:21.609 --> 00:27:24.639
OK, so now we've got this more orange theme.

00:27:24.640 --> 00:27:28.060
There's one thing that I can think
of left to do for this widget.

00:27:28.059 --> 00:27:30.159
And that's the three controls at the bottom.

00:27:30.160 --> 00:27:33.320
Right now, they're good old fashion H refs.

00:27:33.319 --> 00:27:36.750
And I need to tell you that a widget isn't a webpage.

00:27:36.750 --> 00:27:41.599
It may technically be a webpage, but from
a user perspective, it's an application.

00:27:41.599 --> 00:27:45.019
So instead of using hyperlinks in the sort, use buttons.

00:27:45.019 --> 00:27:48.910
So Dashcode's Library includes buttons
that make this really easy to do.

00:27:48.910 --> 00:27:52.840
So I'm going to actually mimic the good old segmented
controller that you're used to seeing and I'll go,

00:27:52.839 --> 00:27:56.579
I'm going to give it a design that fits in with this widget.

00:27:56.579 --> 00:28:01.049
So what I'm going to do is I'm going to
grab the, the left rounded part.

00:28:01.049 --> 00:28:04.399
I'm going to grab the right rounded part.

00:28:04.400 --> 00:28:08.430
And then in the middle we're going to put just a square button.

00:28:08.430 --> 00:28:09.090
And there we go.

00:28:09.089 --> 00:28:10.740
There's our segmented controller.

00:28:10.740 --> 00:28:13.019
Let's shrink that to fit.

00:28:13.019 --> 00:28:17.910
And another thing is that the, the links here are
using you know greater than and less than.

00:28:17.910 --> 00:28:18.890
That's not so nice.

00:28:18.890 --> 00:28:20.820
Let's use English language.

00:28:20.819 --> 00:28:22.519
We'll do Previous.

00:28:22.519 --> 00:28:26.319
( Period of silence )

00:28:26.319 --> 00:28:27.899
We'll get rid of these.

00:28:27.900 --> 00:28:34.250
( Period of silence )

00:28:34.250 --> 00:28:38.299
OK and then we'll have an Add button to replace the plus.

00:28:40.740 --> 00:28:44.299
And then here on the end we'll have a Next.

00:28:44.299 --> 00:28:47.690
( Period of silence )

00:28:47.690 --> 00:28:53.269
One of the new features that was added in Dashcode
for Leopard was the support for multiple selection.

00:28:53.269 --> 00:28:54.960
So this is actually a big deal.

00:28:54.960 --> 00:28:58.309
I can select these three elements at once.

00:28:58.309 --> 00:28:59.490
Bring up the Inspector here.

00:28:59.490 --> 00:29:02.750
And now I can modify the design
of all three of them at once.

00:29:02.750 --> 00:29:07.750
So instead of being a gradient, we're going to make them
solid, but we're going to leave the glass effect on them

00:29:07.750 --> 00:29:11.660
and the font we're going to bump it down a notch.

00:29:11.660 --> 00:29:15.620
Whoops, instead of adding a notch, we'll go down a notch.

00:29:15.619 --> 00:29:17.379
So a little bit smaller.

00:29:17.380 --> 00:29:19.400
Oh, and the stroke is gray on these.

00:29:19.400 --> 00:29:21.200
That's not so nice.

00:29:21.200 --> 00:29:23.120
Let's tweak that too.

00:29:23.119 --> 00:29:27.199
And again, I'm just going to grab the color
from the body and put it down here.

00:29:27.200 --> 00:29:29.460
And let's make him a little darker.

00:29:29.460 --> 00:29:33.870
( Period of silence )

00:29:33.869 --> 00:29:36.329
OK, now they'll stand out a little bit.

00:29:36.329 --> 00:29:39.909
So I think at this point, our widget
makeover is just about done.

00:29:39.910 --> 00:29:44.730
Let's go ahead, take this widget,
and deploy it onto our Dashboard.

00:29:46.200 --> 00:29:48.990
We'll install it.

00:29:48.990 --> 00:29:50.069
And keep it.

00:29:50.069 --> 00:29:52.649
And so here we've got our before and after.

00:29:52.650 --> 00:29:58.410
We've got a kind of a chunky widget, now we got this
one glossy, shiny, rounded rectangle widget ready to go.

00:29:58.410 --> 00:30:01.590
Did that in about five to ten minutes.

00:30:01.589 --> 00:30:04.509
Let's go back to slides, please.

00:30:04.509 --> 00:30:11.980
( Period of silence )

00:30:11.980 --> 00:30:19.160
So now that we spent a good while talking about taking
your great idea and making it work and look good,

00:30:19.160 --> 00:30:21.410
let's talk a little bit about the
next portion of our presentation.

00:30:21.410 --> 00:30:24.019
And that's making a widget for your website.

00:30:24.019 --> 00:30:28.960
If you have a website today, there's probably a lot of
things on your website that you can use to make a widget,

00:30:28.960 --> 00:30:31.900
web properties you can kind of utilize for a widget.

00:30:31.900 --> 00:30:33.750
This is a webpage you're probably all familiar with.

00:30:33.750 --> 00:30:35.640
This is the Apple hot news page.

00:30:35.640 --> 00:30:38.940
And this page is a gold mine for making widgets right here.

00:30:38.940 --> 00:30:41.250
So we're going to play a game that I
like to call, Where's the widget?

00:30:41.250 --> 00:30:44.670
And it's basically identifying the
widget opportunity on this page.

00:30:44.670 --> 00:30:49.740
So the first place where I can see a widget on this
page is in the top corner, there's an events list, OK?

00:30:49.740 --> 00:30:54.400
So you could very easily take this list and make
it into a widget that looks a little bit like this.

00:30:54.400 --> 00:31:00.509
And again the real benefit to doing this is that people now
don't have to go to your webpage to see what's happening.

00:31:00.509 --> 00:31:05.589
Every time they show Dashboard, they're just going to
see that events that are happening sponsored by Apple.

00:31:05.589 --> 00:31:09.009
And again, we've taken this design and done something a
little bit different than what's normally on the webpage.

00:31:09.009 --> 00:31:14.160
Instead of just a boring list, we've given it this purple
style and made it nice and long, given it some colors.

00:31:14.160 --> 00:31:15.940
It's a little bit more fun.

00:31:15.940 --> 00:31:18.860
Next on the list is the top stories here.

00:31:18.859 --> 00:31:23.089
Dashcode has a template called the Daily Feed
template which makes this really easy to use.

00:31:23.089 --> 00:31:28.659
If you do press releases and you want to give a widget to
people who work in PR firms, this would be really helpful.

00:31:28.660 --> 00:31:33.820
And finally in the bottom corner here, you'll
see there's this widget for the iTunes Top 10.

00:31:33.819 --> 00:31:38.569
This would also work well as a widget, something
like this where you list all of the artists

00:31:38.569 --> 00:31:40.799
and click on it, it'll bring it up in iTunes.

00:31:40.799 --> 00:31:42.309
That would work really well.

00:31:42.309 --> 00:31:46.720
Now all of you were at the keynote
yesterday and you saw Web Clip.

00:31:46.720 --> 00:31:48.880
And Web Clip is a great user feature.

00:31:48.880 --> 00:31:51.430
Lets users make widgets out of whatever they want.

00:31:51.430 --> 00:31:54.210
But you as developers can kind of do a little bit better.

00:31:54.210 --> 00:31:56.789
You can, you can one up this and
really kind of make Dashboard

00:31:56.789 --> 00:31:59.970
and your widget your own by making,
by shipping your own widget.

00:31:59.970 --> 00:32:04.769
The first reason why you want to do that is because you
don't want to have to put a message like this on your website

00:32:04.769 --> 00:32:09.879
that says if you want a widget of my website, go ahead
and load up Safari, because not everyone uses Safari.

00:32:09.880 --> 00:32:16.410
Click on the add to Dashboard button and then
kind of wrap this, this is a bad user experience.

00:32:16.410 --> 00:32:20.900
If you provide your own widget,
it's a much better experience.

00:32:20.900 --> 00:32:24.130
And the second reason why you might want to
provide your own widget over just relying

00:32:24.130 --> 00:32:28.780
on Web Clip is if a user goes offline, this happens.

00:32:28.779 --> 00:32:31.660
All the sudden the widget isn't replaced with
the content, it's replaced with this kind

00:32:31.660 --> 00:32:34.460
of we can't open this page kind of a, a feel.

00:32:34.460 --> 00:32:35.860
And that's not so nice.

00:32:35.859 --> 00:32:39.929
So if you provide your own widget, you
can handle this case a lot more elegantly.

00:32:39.930 --> 00:32:42.470
So what we're going to do is we're going to take the
iTunes Top 10

00:32:42.470 --> 00:32:46.120
that I just showed you and we are
going to model it after this.

00:32:46.119 --> 00:32:50.529
If you're all familiar with pop music,
there's the Billboard Hot 100 Singles list.

00:32:50.529 --> 00:32:52.259
And this is about what it looks like.

00:32:52.259 --> 00:32:55.490
And so what we're going to do is we're going to
just learn things from this particular design

00:32:55.490 --> 00:32:59.099
and apply them to a widget that, that mimics it.

00:32:59.099 --> 00:33:00.459
So here's our, here's where we start.

00:33:00.460 --> 00:33:01.090
Here's our Web Clip.

00:33:01.089 --> 00:33:04.929
So the first step is just to break it
out of Web Clip and make it a widget.

00:33:04.930 --> 00:33:09.710
So what we've done now is we've used an
iframe in a widget to show our content.

00:33:09.710 --> 00:33:14.630
And that's really not much better because if a user goes
offline, well the iframe is going to do the same thing.

00:33:14.630 --> 00:33:16.490
It's just going to be a white box instead of your content.

00:33:16.490 --> 00:33:20.890
So I know people like to do that because it's kind
of the cheap, dirty, easy way of making a widget.

00:33:20.890 --> 00:33:23.860
But I'm going to have to ask you not to.

00:33:23.859 --> 00:33:29.089
Instead, what you really want to do is extract the
text from a feed somewhere and put it on your widget.

00:33:29.089 --> 00:33:29.849
Like this.

00:33:29.849 --> 00:33:31.019
And how are you going to do that?

00:33:31.019 --> 00:33:33.619
Well, you're going to do that using XMLHttpRequest.

00:33:33.619 --> 00:33:39.329
So this is a JavaScript object that lets you make
HTTP calls, then parse the data and put it on a widget.

00:33:39.329 --> 00:33:42.990
So there's a code snippet in Dashcode which
is a feature where we provide a whole bunch

00:33:42.990 --> 00:33:45.870
of shrink-wrapped code ready to
go that provides this all for you.

00:33:45.869 --> 00:33:48.059
And this is that snippet right now.

00:33:48.059 --> 00:33:50.599
So the first two lines are basically
things that you provide.

00:33:50.599 --> 00:33:56.049
The URL that you want to get the feed from and the
handler that you want called when the feed is loaded.

00:33:56.049 --> 00:33:59.339
And in that handler you're going to
do some type of Dom operation

00:33:59.339 --> 00:34:02.559
to pull the information out and put it on your widget's UI.

00:34:02.559 --> 00:34:06.279
Usually not too hard, take a look
at our code to see how that works.

00:34:06.279 --> 00:34:10.130
The second half of this particular
snippet really is just ready to go.

00:34:10.130 --> 00:34:13.619
All it does is it sets up the handlers,
sets up the request object.

00:34:13.619 --> 00:34:15.369
It's also going to then send the feed off.

00:34:15.369 --> 00:34:18.440
And it also turns off cache controls,
that way you don't get stale data.

00:34:18.440 --> 00:34:20.320
That's an important thing.

00:34:20.320 --> 00:34:26.960
So, OK, we've got our XHR working, now we've got
this widget that gives us our text on a widget UI.

00:34:26.960 --> 00:34:28.159
What's the next step?

00:34:28.159 --> 00:34:30.379
Well, we're going to pull in some fonts into this whole thing.

00:34:30.380 --> 00:34:35.880
So here's the Hot 100 list, and I'm going to pull up that
list of fonts from before and have you guys look at it.

00:34:35.880 --> 00:34:40.559
And can anyone guess what the font
that's being used in the Hot 100 list is?

00:34:40.559 --> 00:34:42.000
Takers? Anyone?

00:34:42.000 --> 00:34:42.789
What was that?

00:34:42.789 --> 00:34:44.289
>> (Unclear).

00:34:44.289 --> 00:34:46.860
>> It's Helvetica, is that, yeah, sorry.

00:34:46.860 --> 00:34:49.510
It is Helvetica, but it's a specific brand of Helvetica.

00:34:49.510 --> 00:34:50.970
So you're right.

00:34:50.969 --> 00:34:52.689
It's Helvetica Neue Condensed.

00:34:52.690 --> 00:34:54.440
You get a prize later, come see me.

00:34:54.440 --> 00:35:00.220
So we're going to use Helvetica Neue
Condensed to make this widget happen.

00:35:00.219 --> 00:35:05.759
So here's our original widget with the text on it.

00:35:05.760 --> 00:35:08.080
And here's our widget with Helvetica Neue Condensed.

00:35:08.079 --> 00:35:12.389
You'll see that it has already a lot
more of the feeling of that Top 100 list.

00:35:12.389 --> 00:35:14.170
So OK, what's the next we want to do?

00:35:14.170 --> 00:35:17.409
We want to a little bit of good old
elbow grease spit and polish.

00:35:17.409 --> 00:35:23.579
So there's a design element here in this Hot 100 list
that's kind of unique and that is all these lines that kind

00:35:23.579 --> 00:35:26.179
of separate the data, because everything's
in tight confines.

00:35:26.179 --> 00:35:28.440
We want to kind of mimic that look in our widget.

00:35:28.440 --> 00:35:30.570
So I'm going to take those lines, I'm
going to put them into our widget.

00:35:30.570 --> 00:35:32.160
And I'm going to do one more thing.

00:35:32.159 --> 00:35:34.819
And this is kinda when you hit the top
and you know you've done the right thing.

00:35:34.820 --> 00:35:37.870
We're going to make it look like someone ripped
this widget right out of the newspaper.

00:35:37.869 --> 00:35:39.400
We're going to give it a folded corner.

00:35:39.400 --> 00:35:41.690
We're going to give it a crinkly edge along the side.

00:35:41.690 --> 00:35:45.240
And now we've got a fun widget here that people
are more likely to keep on their Dashboard.

00:35:45.239 --> 00:35:50.859
So we've started off with a web clip which you know is
great for a webpage and we've gone to this fun widget

00:35:50.860 --> 00:35:53.920
that people are actually going to be willing to use.

00:35:53.920 --> 00:36:01.340
So one that note, I'd like to go to demo and show you
another kind of makeover for a widget for a Podcaster.

00:36:02.510 --> 00:36:08.020
( Period of silence )

00:36:08.019 --> 00:36:14.559
So there's a podcast that I like to listen to, which I made
up back in Chicago, my hometown, called the ChicagoCast.

00:36:14.559 --> 00:36:16.739
And these guys do different walking tours of Chicago.

00:36:16.739 --> 00:36:21.319
And they've got this great website and they
decided, hey, we're going to make a widget.

00:36:21.320 --> 00:36:23.269
And here is the widget right here.

00:36:23.269 --> 00:36:28.039
And it's actually you know they've taken a lot of the
design elements from their website, imported it to a widget.

00:36:28.039 --> 00:36:29.519
And that's really cool.

00:36:29.519 --> 00:36:32.489
But the problem with this widget
is that it's not terribly unique.

00:36:32.489 --> 00:36:33.500
They use a lot of white.

00:36:33.500 --> 00:36:35.539
They're not using color to, to their advantage.

00:36:35.539 --> 00:36:39.730
And they, they need to really kind of embrace
the idea of making an application instead

00:36:39.730 --> 00:36:42.829
of just taking a webpage and putting it into a widget.

00:36:42.829 --> 00:36:48.170
So they were kind enough to provide
their widget project for me.

00:36:48.170 --> 00:36:50.820
( Period of silence )

00:36:50.820 --> 00:36:57.570
And so now we're going to go about getting, making
this a more bonafide, beautiful Dashboard widget.

00:36:57.570 --> 00:37:01.840
And the first thing I'm going to do is I'm going to get rid of
this banner on the top, because that's a lot of dead space.

00:37:01.840 --> 00:37:04.460
They can just put that on the back of the widget.

00:37:04.460 --> 00:37:07.639
And they got this gray gradient
underneath, we're going to get rid of that too.

00:37:07.639 --> 00:37:09.429
So already we've saved this huge stripe.

00:37:09.429 --> 00:37:18.149
We can now take some things, all the elements on
our widget's interface here and move that all up.

00:37:18.150 --> 00:37:21.220
OK, so that's an improvement and
we can resize the widget accordingly.

00:37:21.219 --> 00:37:23.319
Now another thing, ah, wait, hold on for a second.

00:37:23.320 --> 00:37:26.940
You'll see that the info button
is moving along with the bottom.

00:37:26.940 --> 00:37:28.010
We don't want that.

00:37:28.010 --> 00:37:30.560
So let's go ahead and click the info button here.

00:37:30.559 --> 00:37:35.789
And you'll see if you bring up the Metrics
Inspector that its Autoresize properties are set

00:37:35.789 --> 00:37:39.559
so that it basically is anchored
to the bottom right hand corner.

00:37:39.559 --> 00:37:40.739
Well, we actually don't want that.

00:37:40.739 --> 00:37:44.869
We want it anchored to the bottom, to
the top and to the right hand side.

00:37:44.869 --> 00:37:47.650
So I'm going to move the springs here
so that that's, that's the case.

00:37:47.650 --> 00:37:53.280
And now when I resize it, now it just
moves over with the, with the right edge.

00:37:53.280 --> 00:37:55.440
OK, so that's just one bit of trivia for you.

00:37:55.440 --> 00:37:57.400
So there's two things here.

00:37:57.400 --> 00:37:59.660
An Episode Date and an Episode Description.

00:37:59.659 --> 00:38:01.929
Now I can tell you that these guys
don't care about the date.

00:38:01.929 --> 00:38:03.980
They update regularly once a week.

00:38:03.980 --> 00:38:07.519
So feel free with any of our templates
to just get rid of it.

00:38:07.519 --> 00:38:11.210
OK? If it's not something that
people care about, get rid of it.

00:38:11.210 --> 00:38:12.460
The widget, the templates can handle that.

00:38:12.460 --> 00:38:14.639
They're resilient, you're not going to hurt their feelings.

00:38:14.639 --> 00:38:17.239
So let's see.

00:38:17.239 --> 00:38:24.759
Now the next thing we can do here is we can move it so that
the Episode Description and the Episode Name pop-up are

00:38:24.760 --> 00:38:29.400
above each other and move the play button right next to it.

00:38:29.400 --> 00:38:30.950
And resize this accordingly.

00:38:30.949 --> 00:38:36.989
And we've got ourselves much more
of a, a lozenge-style widget.

00:38:36.989 --> 00:38:39.559
So that's pretty good.

00:38:39.559 --> 00:38:43.190
But the thing about that is now we've got a white widget.

00:38:43.190 --> 00:38:44.710
And that's not terribly exciting.

00:38:44.710 --> 00:38:46.409
And we've lost our branding.

00:38:46.409 --> 00:38:47.879
There's no way for people to know.

00:38:47.880 --> 00:38:49.119
So here's a trick.

00:38:49.119 --> 00:38:53.789
If you take a look at the webpage here, they happen
to have this nice round logo in the corner here.

00:38:53.789 --> 00:38:57.829
And that's going to fit really well into the
lengthwise orientation of this widget.

00:38:57.829 --> 00:39:00.219
So I've got that badge right here as a PNG.

00:39:00.219 --> 00:39:07.899
And so I'm just going to literally
drag and drop this onto the canvas.

00:39:07.900 --> 00:39:11.280
That's how easy it is to take custom
artwork and put it into your widget.

00:39:11.280 --> 00:39:15.320
So I'm going to resize all of these
elements across a little bit.

00:39:15.320 --> 00:39:18.000
( Period of silence )

00:39:18.000 --> 00:39:24.030
And put the logo here on the side and I'm
going to shrink it so that it fits in the body.

00:39:24.030 --> 00:39:26.930
All right, so we'll make it a little bit bigger.

00:39:26.929 --> 00:39:31.569
And this is the usual fiddling you're going to
have to do when you make a widget, but that's okay.

00:39:32.989 --> 00:39:34.939
OK, so now we've got a white widget with a logo.

00:39:34.940 --> 00:39:35.880
We're half way there.

00:39:35.880 --> 00:39:38.769
I'm going to take, I'm going to look at there logo.

00:39:38.769 --> 00:39:43.210
And if you look at the logo, they've got this
red star and that's a very distinctive red.

00:39:43.210 --> 00:39:45.110
And that's a good thing to pull out in a widget.

00:39:45.110 --> 00:39:49.590
If you take a color that your website uses,
pull that out, make the body that color,

00:39:49.590 --> 00:39:52.059
it'll help people remember that that's your widget.

00:39:52.059 --> 00:39:54.429
So I'm going to go here, I have the
front image already selected.

00:39:54.429 --> 00:39:55.619
I'm going to go in the Inspector.

00:39:55.619 --> 00:39:59.500
And I'm going to make it a solid color right now.

00:39:59.500 --> 00:40:06.369
And again, I'm going to use the Color Inspector and just use
the magnifying glass to just pick up that color right there.

00:40:06.369 --> 00:40:09.289
Let's go for the darker side.

00:40:09.289 --> 00:40:12.110
Whoops! Slippery fingers.

00:40:12.110 --> 00:40:16.170
( Period of silence )

00:40:16.170 --> 00:40:19.090
OK, so now we've got a red, a red widget.

00:40:19.090 --> 00:40:23.579
OK, so let's have it so that the
widget wraps around the logo.

00:40:23.579 --> 00:40:27.150
That would probably be a little bit nicer.

00:40:27.150 --> 00:40:32.019
So let's keep bumping up the corner
roundness of the front image.

00:40:32.019 --> 00:40:33.800
That's looks about right.

00:40:33.800 --> 00:40:37.760
OK, so the next thing that's kind of
disruptive here is this pop-up menu.

00:40:37.760 --> 00:40:40.980
Let's make that also fit in with this design.

00:40:40.980 --> 00:40:42.740
Let's make it also red.

00:40:42.739 --> 00:40:47.099
So I'm just going to pick up this red right here.

00:40:47.099 --> 00:40:50.230
And you'll see that it kept the glass property, that's good.

00:40:50.230 --> 00:40:51.469
But the shine is a little bit much.

00:40:51.469 --> 00:40:53.319
That's, tone that down a bit.

00:40:53.320 --> 00:40:55.660
And I just realized that it also has a white stroke.

00:40:55.659 --> 00:40:58.289
So let's get rid of, actually let's
just get rid of that altogether.

00:40:58.289 --> 00:41:01.449
And the background is kind of boring.

00:41:01.449 --> 00:41:02.339
It's a solid color.

00:41:02.340 --> 00:41:04.660
Let's actually give that some glass.

00:41:04.659 --> 00:41:07.599
( Period of silence )

00:41:07.599 --> 00:41:12.960
Tone that, tone it down a little bit, some
curvature, move up the horizon a little bit.

00:41:12.960 --> 00:41:15.559
OK, that's starting to look a lot better.

00:41:15.559 --> 00:41:17.670
Now the text on the pop up menu is gray.

00:41:17.670 --> 00:41:20.340
So red on, gray on red doesn't look so nice.

00:41:20.340 --> 00:41:21.530
So let's actually flip that around.

00:41:21.530 --> 00:41:24.750
If I go to the Text Inspector here, I can change this.

00:41:24.750 --> 00:41:29.489
And actually, I want to change the
description of the text and the pop-up.

00:41:29.489 --> 00:41:32.750
So what I'm going to do is I'm going to make them white.

00:41:32.750 --> 00:41:33.710
And here's a trick for you.

00:41:33.710 --> 00:41:38.150
A lot of widgets like to have this embossed
look, like the text is pushed into the widget.

00:41:38.150 --> 00:41:44.160
So what we're going to do is the trick to do that is you
take a shadow of a darker color, we're going to say gray

00:41:44.159 --> 00:41:48.210
and you just move its Y Offset to
negative one and now the text looks like,

00:41:48.210 --> 00:41:50.909
looks like it has the subtle indented feel to it.

00:41:50.909 --> 00:41:52.589
So that's just a handy little trick.

00:41:52.590 --> 00:41:55.300
So we are almost there.

00:41:55.300 --> 00:42:00.900
One last thing which I want to do is I want to visually group
the pop-up menu, the description, and the play button

00:42:00.900 --> 00:42:02.639
since those three things kind of go together.

00:42:02.639 --> 00:42:05.569
I'm going to use a Dashcode part to do that.

00:42:05.570 --> 00:42:10.470
So in addition to functioning parts that do
different controls, that act as controls and views,

00:42:10.469 --> 00:42:13.469
there's also just some straight up
design elements you can use here.

00:42:13.469 --> 00:42:20.199
So if I look for rounded, there's a rounded,
rounded rectangle shape that I can use.

00:42:20.199 --> 00:42:23.289
So I'm just going to grab this guy and drop him in here.

00:42:24.369 --> 00:42:25.909
And so right now it's on top of everything.

00:42:25.909 --> 00:42:31.750
If I go here to the Inspector, I can just move it
underneath everything, except for the front image.

00:42:31.750 --> 00:42:36.420
And I am going to resize it to
be under all of these controls.

00:42:36.420 --> 00:42:43.240
And right now it's not sticking out very much, so let
me close the Library and bring up the Inspector again.

00:42:43.239 --> 00:42:46.969
And in the fill in Stroke Inspector,
I'm going to just turn off the glass.

00:42:46.969 --> 00:42:51.500
And I'm going to bump up the corner
roundness a little bit on that.

00:42:51.500 --> 00:42:57.559
And you'll see it's subtle, but now all of the
play controls are kind of grouped together in one.

00:42:57.559 --> 00:43:00.769
So I think this widget is just about graphically made over.

00:43:00.769 --> 00:43:07.079
One last touch I would like to add and that's the idea
of opening the website when you click on the logo.

00:43:07.079 --> 00:43:10.319
So what we're going to do is this is the only place
we're going to write code in this particular demo.

00:43:10.320 --> 00:43:13.780
I'm going to select the, the logo here and I'm
going to go to the Behaviors Inspector.

00:43:13.780 --> 00:43:18.030
This is how you add a like basically
a click behavior to anything.

00:43:18.030 --> 00:43:21.730
We're going to go over here to the onclick
event, double click in the Handler column.

00:43:21.730 --> 00:43:25.889
I'm just going to do showWebsite.

00:43:25.889 --> 00:43:29.980
And when I do that, the canvas
is replaced with a Code Editor

00:43:29.980 --> 00:43:32.139
and a new function has been inserted into my code here.

00:43:32.139 --> 00:43:34.859
And it says Insert Code Here.

00:43:34.860 --> 00:43:40.500
Now I don't remember off the top of my head
the code that it takes to open a website.

00:43:40.500 --> 00:43:43.079
But Dashcode provides this code for you.

00:43:43.079 --> 00:43:47.119
So I'm going to just go back to the
Library and there's this Code tab here.

00:43:47.119 --> 00:43:52.460
And if I just do a search for web, you'll
see that I've got Show website here.

00:43:52.460 --> 00:43:58.860
So I'm just going to grab this code snippet, drop it right
into here and you'll see that this code let's me just put

00:43:58.860 --> 00:44:02.070
in a URL and then opens that URL in a browser for you.

00:44:02.070 --> 00:44:04.530
So I didn't even have to write any of the code today.

00:44:04.530 --> 00:44:06.240
So I'm going to save this widget.

00:44:06.239 --> 00:44:09.919
And then run it on Dashboard.

00:44:12.480 --> 00:44:14.980
Woo, I don't want to replace.

00:44:16.179 --> 00:44:21.769
And you'll see that we've gone from this kind of
website inspired widget to this more colorful,

00:44:21.769 --> 00:44:24.469
more at home on Dashboard widget right there.

00:44:24.469 --> 00:44:25.819
And it'll load, trust me.

00:44:25.820 --> 00:44:30.510
Let's go back to slides.

00:44:30.510 --> 00:44:36.440
( Period of silence )

00:44:36.440 --> 00:44:45.099
So the last thing that I wanted to talk about in depth today
is making a widget to compliment your existing application.

00:44:45.099 --> 00:44:50.449
So this here is a new application called Calorific
by Wagnerian Software, it's my new software company.

00:44:50.449 --> 00:44:53.919
And what this does it is allows you to plan your diet.

00:44:53.920 --> 00:44:58.960
You can put in all the food that you like
and basically plan a diet for your calories.

00:44:58.960 --> 00:45:02.559
And then shows you your history
and all sorts of stuff like that.

00:45:02.559 --> 00:45:07.900
And I've decided that I want to make a widget or maybe
even a set of widgets to compliment this application.

00:45:07.900 --> 00:45:13.309
So the first widget that's really would be useful
to my users is a widget that's shows my history,

00:45:13.309 --> 00:45:16.590
my caloric history, which is normally
shown in the bottom corner of the app.

00:45:16.590 --> 00:45:18.370
So that widget could look something like this.

00:45:18.369 --> 00:45:22.849
You know has the chart on it, they can always
just show Dashboard, see how they're doing.

00:45:22.849 --> 00:45:29.199
The next widget that would be really handy for
this one is basically my upcoming meals, my menu.

00:45:29.199 --> 00:45:33.829
So you could easily make a widget that just shows you what
you should be eating in a day and that way you don't have

00:45:33.829 --> 00:45:38.049
to show Dashboard every time you're curious or launch
your application, I mean, every time you're curious

00:45:38.050 --> 00:45:39.289
about what you should be eating today.

00:45:39.289 --> 00:45:42.820
And the final widget for this application is the input.

00:45:42.820 --> 00:45:47.460
So if you have a new meal that you've got, a new
recommendation, a new recipe, you could easily make

00:45:47.460 --> 00:45:51.050
a widget that just lets people put that in so they
don't have to launch your application.

00:45:51.050 --> 00:45:53.950
And the point behind all of these widgets are this.

00:45:53.949 --> 00:45:57.460
If you have one discrete area of
functionality in your application

00:45:57.460 --> 00:46:01.150
that people use often, consider making a widget out of that.

00:46:01.150 --> 00:46:04.750
Pull that out, make a widget so people don't
always have to launch your application.

00:46:04.750 --> 00:46:09.519
And another point to make is that you're not limited
to having just one widget for your application.

00:46:09.519 --> 00:46:15.309
You can have many, as many as you like, as long as
they're useful for your users, you should provide them.

00:46:15.309 --> 00:46:17.460
And there's some great developers that have done this too.

00:46:17.460 --> 00:46:21.840
The folks at iSale, actually I think its
Equal, Equinux, I forget the company name,

00:46:21.840 --> 00:46:24.350
but they, they're perennial ADA favorite.

00:46:24.349 --> 00:46:26.529
They made a widget to compliment their application.

00:46:26.530 --> 00:46:29.420
And what this widget shows you, it
shows you all of your eBay auctions.

00:46:29.420 --> 00:46:32.769
So that way you don't always have to launch the
application, click within the app, find your auctions.

00:46:32.769 --> 00:46:37.059
There's one widget, keeps track of it all,
you can get rid of it when you don't want it.

00:46:37.059 --> 00:46:42.590
The folks at Panic also have a very handy
widget for their Transmit application.

00:46:42.590 --> 00:46:47.820
This guy works as a bookmark, so if you ever have one place
that you upload a lot of files to, a drop box of some sort,

00:46:47.820 --> 00:46:51.010
you can just make a widget out of
it, drag your files into that widget.

00:46:51.010 --> 00:46:53.890
Just happens, everything happens like magic.

00:46:53.889 --> 00:46:58.369
So I want to talk a minute about the
tools of the trade to make this happen.

00:46:58.369 --> 00:47:00.359
We provide you the widget.system API.

00:47:00.360 --> 00:47:05.740
And this let's you take any command-line
option and run it from within a widget.

00:47:05.739 --> 00:47:12.459
In addition to widget.system, there's also widget plug-ins
which lets you tie in Objective-C code into your widget.

00:47:12.460 --> 00:47:18.389
Now I want to side bar for a second and look
at Dashboard's architecture in Leopard.

00:47:18.389 --> 00:47:20.989
And something is different from Tiger.

00:47:20.989 --> 00:47:25.229
You'll notice that for performance, Leopard is
a lot snappier when it comes to running widgets.

00:47:25.230 --> 00:47:31.469
And that's because all widgets now by default run in one
process instead of every widget getting its own process.

00:47:31.469 --> 00:47:35.269
So this process grouping, the gentleman
to thank is sitting down here.

00:47:35.269 --> 00:47:36.750
You can thank him afterwards.

00:47:36.750 --> 00:47:43.239
The, having all these widgets together in
one process makes things much faster, OK?

00:47:43.239 --> 00:47:48.599
But if you happen to be using a widget plug-in,
we're going to have to put you into your own process.

00:47:48.599 --> 00:47:50.440
That's to avoid main space collisions.

00:47:50.440 --> 00:47:55.070
OK? And so now we've got a whole
other process just for this one widget.

00:47:55.070 --> 00:48:00.880
And we'll even group widgets of the same, of the same
class, but either way, now we've got three processes just

00:48:00.880 --> 00:48:03.610
for these two widgets and all the other
widgets running in this one process.

00:48:03.610 --> 00:48:08.340
So you've just kind of, you kinda circumvented
some of the work we did to help make things snappy.

00:48:08.340 --> 00:48:12.550
So when possible, please avoid using widget plug-ins.

00:48:12.550 --> 00:48:14.780
That's why I wanted to bring up widget.system again.

00:48:14.780 --> 00:48:20.860
This particular guy makes it really easy to tap
into your AppleScript and Automator investment.

00:48:20.860 --> 00:48:29.690
If you've already got a scripting dictionary or Automator
actions, you can very easily use the osascript command

00:48:29.690 --> 00:48:37.760
with the -e that's for an expression or the
automator-i to, to pass in and run a workflow.

00:48:37.760 --> 00:48:39.720
One thing I want to bring up, actually back up a slide here.

00:48:39.719 --> 00:48:44.639
One thing I want to point out with widget.system is that
widget.system actually has two modes of operation.

00:48:44.639 --> 00:48:46.920
Synchronous and asynchronous.

00:48:46.920 --> 00:48:53.309
And in Leopard you really, really, really want to avoid
synchronous operation because since you're all running

00:48:53.309 --> 00:48:57.590
in one process now, if you do anything
synchronously, you're not just blocking your operation,

00:48:57.590 --> 00:48:59.769
you're blocking everybody in your process.

00:48:59.769 --> 00:49:04.429
And so whenever possible, make sure
you use asynchronous operation.

00:49:04.429 --> 00:49:08.239
In widget.system, you run asynchronous
by providing a handler function

00:49:08.239 --> 00:49:10.769
for that second parameter that you're seeing up there.

00:49:10.769 --> 00:49:12.309
That makes you run asynchronously.

00:49:12.309 --> 00:49:16.279
That makes sure you don't block,
block every widget in your process.

00:49:16.280 --> 00:49:17.750
I really need to emphasize that.

00:49:17.750 --> 00:49:19.480
That's really important.

00:49:19.480 --> 00:49:24.070
So now we're going to fast forward through these,
AppleScript, Automator, go ahead and use these.

00:49:24.070 --> 00:49:24.789
They're wonderful.

00:49:24.789 --> 00:49:28.949
All right, some other things that
are really helpful for you to use

00:49:28.949 --> 00:49:32.909
when you're trying to display data is Quartz Composer.

00:49:32.909 --> 00:49:38.369
Lets you do motion graphic and the canvas tag,
lets you do CG-style rendering using JavaScript.

00:49:38.369 --> 00:49:40.779
And these are actually very, very powerful.

00:49:40.780 --> 00:49:45.500
If you were thinking of using a Web Kit plug-in to
draw a Cocoa view into a widget, try these instead.

00:49:45.500 --> 00:49:48.480
They're much lighter weight and again
you won't be stuck in your own process.

00:49:48.480 --> 00:49:51.389
It's a lot, a lot cleaner this way.

00:49:51.389 --> 00:49:54.859
Another thing that you want to consider is using a drop cell.

00:49:54.860 --> 00:50:01.150
So if you're widget wants to know files, wants to have files
dropped on it, instead of trying to mimic a file dialog

00:50:01.150 --> 00:50:02.809
or something like that, just use drag and drop.

00:50:02.809 --> 00:50:07.559
People can be moving a file, show Dashboard,
drop it on the widget, it just works.

00:50:07.559 --> 00:50:11.279
Can I see a show of hands here who
downloaded our head start for this session?

00:50:11.280 --> 00:50:12.950
( Period of silence )

00:50:12.949 --> 00:50:13.949
Hey, that's pretty good.

00:50:13.949 --> 00:50:14.649
Thanks, guys.

00:50:14.650 --> 00:50:18.200
So if you've downloaded our head start, you
already know a little bit about drag and drop.

00:50:18.199 --> 00:50:20.949
And in a minute, our demo I'm going to go into that a bit more.

00:50:20.949 --> 00:50:25.779
Again, use our Dashcode Library, the parts here
are really helpful when you're making a widget.

00:50:25.780 --> 00:50:30.390
And finally, one thing which I do have to
kind of advise against is key combinations.

00:50:30.389 --> 00:50:33.199
Widgets don't have the idea of focus, OK.

00:50:33.199 --> 00:50:35.769
So it's hard for a user to know when something has focus.

00:50:35.769 --> 00:50:39.079
And then if you want to like have them
hit keys, it doesn't work so well.

00:50:39.079 --> 00:50:40.619
Try buttons instead.

00:50:40.619 --> 00:50:41.859
It's much more straightforward.

00:50:41.860 --> 00:50:42.890
It's much more visual.

00:50:42.889 --> 00:50:44.619
People will get that a lot better.

00:50:44.619 --> 00:50:48.019
So with that in mind, let's go to demo.

00:50:49.510 --> 00:50:54.910
( Period of silence )

00:50:54.909 --> 00:51:00.670
So this is the coding head start that we asked you
guys to download before, before today's session.

00:51:00.670 --> 00:51:05.289
And if you did it, you'll realize that
it's a widget that does drag and drop.

00:51:05.289 --> 00:51:10.949
And when you drop an image onto it, it just previews
that image, shrinks it down, fades it in, right?

00:51:10.949 --> 00:51:13.329
So we're going to take this widget and we're going to gut it.

00:51:13.329 --> 00:51:16.639
And instead of having it show an image, we're
going to have it take whatever gets dropped

00:51:16.639 --> 00:51:19.559
on the widget and feed it to an Automator workflow.

00:51:19.559 --> 00:51:24.239
And again, the idea behind this is that if you have
an investment in Automator for your application today,

00:51:24.239 --> 00:51:29.189
you can very easily wrap up a set of default
actions or something like that into a widget,

00:51:29.190 --> 00:51:32.389
brand it accordingly and ship it as a widget.

00:51:34.699 --> 00:51:39.949
So what, what I've got here is I've got a workflow
that just takes whatever is dropped onto the widget,

00:51:39.949 --> 00:51:46.129
puts it in new email and changes the
subject to be files from and then my name.

00:51:46.130 --> 00:51:51.099
So I'm going to just take this workflow and
drag it right here into my Files list.

00:51:51.099 --> 00:51:54.420
So now the workflow is being included inside of the widget.

00:51:54.420 --> 00:51:59.139
The next thing we're going to do is I know
this particular widget has a drop handler.

00:51:59.139 --> 00:52:03.759
So this means that when a file is dropped
onto the widget, this function is called.

00:52:03.760 --> 00:52:06.350
And I know that that's called dwDragDrop.

00:52:06.349 --> 00:52:10.509
So I'm just going to go here in the Function pop-up
list and go to that and just like before,

00:52:10.510 --> 00:52:13.470
I'm going to hide the canvas for the time being.

00:52:13.469 --> 00:52:19.059
So in here is all this code to handle the, the image
side of this widget, which I'm just going to delete.

00:52:19.059 --> 00:52:20.980
We're going to get rid of that right now.

00:52:20.980 --> 00:52:25.380
And I'm going to put in this one if statement right here.

00:52:25.380 --> 00:52:29.900
And what this if statement say is if
I've gotten a string from the drop event,

00:52:29.900 --> 00:52:32.389
I want you to clean it up because normally strings are URIs.

00:52:32.389 --> 00:52:34.559
I want them to be actually UNIX paths.

00:52:34.559 --> 00:52:35.929
So I'm going to have that clear that up.

00:52:35.929 --> 00:52:37.419
I've got a preparePath function.

00:52:37.420 --> 00:52:38.880
Then I want it to run the workflow.

00:52:38.880 --> 00:52:41.760
So let's actually add those two functions here.

00:52:42.909 --> 00:52:46.279
Add some space here.

00:52:46.280 --> 00:52:49.090
And first thing I'm going to do is
I'm going to add the preparePath.

00:52:49.090 --> 00:52:50.640
And there's not too much to really worry about here.

00:52:50.639 --> 00:52:55.210
This just decodes the URA, URI, takes care
of some edge cases and cleans up the path.

00:52:55.210 --> 00:53:00.720
And the second thing, and this is the real,
the real good stuff here is the runWorkflow.

00:53:00.719 --> 00:53:04.159
So what I've done is I've got the workflow name here.

00:53:04.159 --> 00:53:06.690
So by default, it's Default.workflow.

00:53:06.690 --> 00:53:08.409
And then I assemble a command.

00:53:08.409 --> 00:53:15.149
Now how the Automator command line works is if I want
to feed it any information, I use the -i flag.

00:53:15.150 --> 00:53:16.670
That means I'm in interactive mode.

00:53:16.670 --> 00:53:18.380
Then I throw another dash on the end of that.

00:53:18.380 --> 00:53:20.780
That means just read from standard input.

00:53:20.780 --> 00:53:24.030
So then I'm piping in something from echo before hand.

00:53:24.030 --> 00:53:26.670
And in this case I'm echoing in the path.

00:53:26.670 --> 00:53:31.550
So that way when once the Automator command
line loads, it'll just read that path

00:53:31.550 --> 00:53:34.280
in there and then feed it to the workflow.

00:53:34.280 --> 00:53:36.970
Notice then that I'm then calling widget.system.

00:53:36.969 --> 00:53:42.059
I'm calling command and again, I want to
make sure this widget runs asynchronously.

00:53:42.059 --> 00:53:44.340
So I provided an empty function here.

00:53:44.340 --> 00:53:45.250
OK, and you can do that.

00:53:45.250 --> 00:53:47.989
And JavaScript functions can very easily just be variables.

00:53:47.989 --> 00:53:51.329
So by doing this, I've just provided an empty
function and this will run asynchronously.

00:53:51.329 --> 00:53:54.690
So you don't always have to just provide some
function and do something in it if you don't have to.

00:53:54.690 --> 00:53:56.230
But still it's important to do this.

00:53:56.230 --> 00:53:58.230
So that's pretty much it.

00:53:58.230 --> 00:54:00.360
That's our entire widget right there.

00:54:00.360 --> 00:54:02.480
So I'm going to run.

00:54:04.090 --> 00:54:09.420
And you'll see I'm going to hide this guy and
I'm just going to drag this image on top of it.

00:54:09.420 --> 00:54:12.220
And, uh oh.

00:54:12.219 --> 00:54:14.419
It didn't work.

00:54:14.420 --> 00:54:15.750
Well, that's not good.

00:54:15.750 --> 00:54:16.809
This is a common gotcha.

00:54:16.809 --> 00:54:19.309
A lot of time, whenever you're
using command-line operations.

00:54:19.309 --> 00:54:24.110
If you go to the widget attributes, it turns out
that you have to turn on command line access.

00:54:24.110 --> 00:54:26.250
And this happens to even seasoned widget builders.

00:54:26.250 --> 00:54:27.800
It happens to me all the time.

00:54:27.800 --> 00:54:33.900
So make sure if you're going to use the command line,
you go in here and click Allow Command Line Access.

00:54:33.900 --> 00:54:35.280
Notice that there's other check boxes here.

00:54:35.280 --> 00:54:38.420
If you're going to use XML HTTP requests,
you're going to have to turn that on.

00:54:38.420 --> 00:54:40.960
If you're going to use a plug-in of
some sort, you have to turn that on.

00:54:40.960 --> 00:54:44.170
So make sure that's your first thing
to check if something goes wrong.

00:54:44.170 --> 00:54:46.230
Make sure you got the right check boxes on.

00:54:46.230 --> 00:54:48.650
OK, so let's stop that.

00:54:48.650 --> 00:54:50.760
Let's run it again.

00:54:50.760 --> 00:54:53.360
All right, if I did everything right, it should work great.

00:54:53.360 --> 00:54:55.420
We're going to drop this on here.

00:54:55.420 --> 00:54:58.950
And Automator is running in the menu bar.

00:54:58.949 --> 00:55:04.039
Mail is loading and come on Leopard.

00:55:04.039 --> 00:55:04.789
And there it is.

00:55:04.789 --> 00:55:08.550
There's my new email that has the image, that
has a whole bunch of other stuff in there.

00:55:08.550 --> 00:55:13.370
And so you can obviously imagine any Automator
workflow, this is the one I've chosen to show you today.

00:55:13.369 --> 00:55:15.389
So let's go back to slides, please.

00:55:15.389 --> 00:55:18.859
( Period of silence )

00:55:18.860 --> 00:55:24.150
So as we wrap up our session, there's a few things
that I'd like you to take home from today's session.

00:55:24.150 --> 00:55:27.130
And I just want to note, this is the first
bullet list you'll be seeing all day.

00:55:27.130 --> 00:55:28.130
Everything else has been graphics.

00:55:28.130 --> 00:55:32.789
So if I'm using bullet list, I really, really mean it.

00:55:32.789 --> 00:55:36.279
It's easy to make your ideas into a widget using Dashcode.

00:55:36.280 --> 00:55:39.530
Dashcode provides a lot of parts, code in there.

00:55:39.530 --> 00:55:43.970
It makes it really easy to prototype
your widget, get it working.

00:55:43.969 --> 00:55:48.849
Make your widgets gorgeous, just make
them pretty, pretty the heck out of them.

00:55:48.849 --> 00:55:56.619
Because that way people will remember them, they'll
like to use them, they'll look forward to using them.

00:55:56.619 --> 00:55:58.599
Colors and fonts are the key to doing that.

00:55:58.599 --> 00:56:01.860
Make sure your widget has unique
design with a lot of great colors.

00:56:01.860 --> 00:56:05.220
Make sure to use some imaginative fonts.

00:56:05.219 --> 00:56:09.679
If you're making a widget to compliment your website,
remember that you're widget is not a website.

00:56:09.679 --> 00:56:13.239
It is a presence, an opportunity
for presence on the desktop.

00:56:13.239 --> 00:56:17.219
OK. So it's something that people will
also see whenever they use Dashboard.

00:56:17.219 --> 00:56:19.119
And that's a great opportunity.

00:56:19.119 --> 00:56:21.980
And finally, if you have an application,
tie into your application,

00:56:21.980 --> 00:56:25.139
leverage your Automator and AppleScript investment.

00:56:25.139 --> 00:56:29.339
If you've got it, easily wrap it into a widget and ship it.

00:56:29.340 --> 00:56:31.090
We have two labs this week.

00:56:31.090 --> 00:56:37.019
Tonight at 5:00pm in Mac OS X Lab D
and on Friday 3:30pm in Lab B. So please come

00:56:37.019 --> 00:56:38.789
and visit us, let us know if you have any questions.

00:56:38.789 --> 00:56:43.079
If you have any questions about my demos, feel
free to come by and I'll gladly answer them.

00:56:43.079 --> 00:56:47.190
If you have any questions that you want outside
of the conference here, contact Matt Drance,

00:56:47.190 --> 00:56:52.090
he's the Sharing Technology Evangelist which sharing,
widgets are a sharing technology in case you were curious.

00:56:52.090 --> 00:56:56.329
So Matt's the guy to talk to about widgets and about
developer tools as a whole, talk to Matt Formica.