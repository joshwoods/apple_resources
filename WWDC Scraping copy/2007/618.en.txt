---
Title:  Designing and Extending the Mac OS X Blog Experience
Year:   2007
Web:    https://nonstrict.eu/wwdcindex/wwdc2007/618/

[!] This transcript has potential transcription errors.
---

So it is my pleasure to introduce to you the designing and extending in Mac OS X Blog Experience session. We have a fun session planned for you this morning, and we have Melvin Rivera from Mammoth Advertising as well as AllForces.com who will be providing the presentation to us. So, I'd like to welcome Melvin onto the stage right now.

( Skipped audio )

Thank you. Good morning.

Good morning.

- Good morning.
- All right. Everybody is awake. My name is Melvin Rivera, and I'm from Mammoth Advertising, an advertising agency in New York City and today we're going to be covering designing and extending the Mac OS X blog experience. Specifically we're going to be covering WordPress, how to set it up, how to customize it, and we'll show kind of a live -
- a real live scenario for Michael Moore's new film, Sicko.

So before we get started, this is some of the things we're going to cover just to make sure you guys are in the right session and it's a time investment, I understand. So we're going to cover the benefits of WordPress as a blog or CMS. We're going to set-up a local server to run WordPress, get an understanding of the WordPress loop the template query logic of WordPress and the template hierarchy.

We'll also build a custom WordPress theme and expand a WordPress blog through the use of plug-ins and like I mentioned study a real case sample of Michael Moore's new film, Sicko. A little bit of curiosity before we get going, are any of you guys bloggers like active bloggers out there?

Okay. All right. That gives me a good idea of who I'm talking to. Well, this is -- this is a great introduction session to what blogging is in general and specifically through WordPress. So the first question we'll start with, and we won't spend too much time on this, is what the blog format is and why has it spread out so much. I mean, it spread out like wildfire. It really feels more like it's a revolution of our current -- of -- of our current generation in the Internet.

This is little sample of some of my daily readings which have changed through the years and now are composed of mostly blogs that I follow through the day. I don't know if you can see top left over there is one of the founders from Panic, PhotoMatt over here is the main developer for WordPress.

Blogging really has taken over as kind of like the primary way of personal publishing on the Internet and there's many reasons for this. My personal take on this is that blogging is, you know, compared to other formats cause there's other formats like wikies, there's, you know, regular content CMS applications and there's even static HTML pages but, specifically, I think what makes blogging unique is that it's kind of a friendly -- it's a friendly -- it's friendly application.

It's a friendly way of doing this and what I mean is that it's, you know, blogs like to talk, they like to listen, and they talk behind your back just like -- just like real friends, and I explained this really quickly. They like to talk and, if we use an analogy of talking, then the person talking is the content provider.

What's unique about the blogging format is one of the many ways that you can actually develop -- not develop content but create content for a blog. You're not tied down to logging into your specific blog, you know, entering a new entry in the browser where you're connected to the Internet. You can blog through e-mail; you can blog through your phone; you can even use a desk application like Ecto or Marset to submit new entries to your blog.

So it really -- it has changed the way content is created in many ways, also through interaction with other social sites like Flickr and Twitter. I mean I recently installed a plug-in on my blog where I just used the service of Twitter and I do updates through the day and at the end of the day WordPress goes, gets all my updates and puts is automatically in one post without me having to do anything.

So blogging -- blog -- the blog format likes to talk. It likes to listen and, if we continue the same analogy once the author says something, then there's the listening part and that's done through the use of comments which are very common on -- on blogs where people can go in and comment on a specific post and interact with -- with the person who wrote the original story.

The third part in my theory of friendship is that blogs talk behind your back and that happens through the use of track backs and pings which are very unique to the blogging platform. For those of you who don't -- are not familiar with this, I'll give you an example: If I'm blogging -- if I am browsing a blog and I read a story, for example, about a certain phone that might be coming out in a couple of weeks and I'm interested in writing about it I'm totally excited about reading this and hey, I want to comment on that particular post, but I don't want to do a comment on that site.

I want to actually turn it into a post on my blog. I can grab the URL from that particular -- from that particular website and go to my blog where I have a specific entry for track backs and I put the URL in there. When I publish, my blog will automatically communicate with the other blog and say, "Hey, here's this blog.

It's talking about this particular post." Sends the information, sends all the data of my post, it shows up on the other blog as a comment or -- or as, you know, a referring URL that's talking about that particular post and the same thing can happen vice versa where somebody sees a particular entry on my post, they can track back to me, and it shows on my post and that's without me having to do anything.

So, blogs talk -- continuing the analogy -- behind your backs. So it's a very friendly environment and I think, in my opinion, that's -- that's one of the reasons why they've taken over. Another reason is it's a very simple format of posts in chronological order which is what really makes it a blog.

Where it's kind of solve the case of how to design a website home page. A lot of designers struggle with getting content, you know, how to organize content on the home page of a specific web site. Blogs solve this by, as you can see up here, having posts in chronological order, so you always have the top one, you know, the most recent entry at the top and as you scroll down you see the previous one and there's no need to reinvent the wheel. You have those and you can browse the archives and you can search the archives. So for those and many other reasons, we think blogs are quite amazing.

I'll show you one example. We did this site a couple of weeks ago for Michael Moore's new film, Sicko. We had about a day and a half to build this from the initial PhotoShop design 'til we actually delivered it, and we used a blog. They wanted a blog, I think just for the idea of allowing people to communicate because it's kind of a -- it's a hot subject.

So we set one up. It's not set-up in a traditional blog format of dates, but it has everything else. It has all the track backs. We installed a plug-in that allows people to rate insurance provider. We have a plug-in that allows you to send automatically the URL to all these other social websites like Big and Delicious, so it was very successful and we were able to set it up rather quickly.

So this brings me to why WordPress. Why are we using WordPress as our blog application. WordPress, if you guys are not familiar with it, it's -- it's an open source -- open source software that's available at WordPress.org. It also has WordPress.com which is a free hosting service that they added that's very similar to blogger.com, but today we're really covering WordPress the actual software that you download, you install on your server and you customize it however you want.

It is based on -- it's -- it's written in PHP, and it uses MySequel as a database. So some of the reasons why we highly recommend and love WordPress, of course it's open source. It has a very active community of developers. It gets constantly updated, there's a plethora of plug-ins that get automatically released almost on a daily basis, search engines love it.

Within a week of launching the Sicko website, the blog, it was listed -- it was on the first page on the top ten of -- on the Google search result and repeatedly, every time we've set-up a particular site on WordPress, it automatically gets ranked very highly through search engines and that has to do a lot with the fact that every time you post, WordPress automatically pings the specific blog-related search engines, like Technorata.

It also has -- also has to do obviously with, you know, proper XHTML coding but again and again search engines have loved it, so our clients are usually very happy about that. WordPress has a solid core of features and it's easily expandable through plug-ins. Data can be easily imported and exported through built-in tools and you can also tap into MySequel database.

WordPress also has a multi-user version and by multi-user I really mean multi-blog where you can actually set up WordPress, one installation of WordPress to run multiple -- multiple blogs and that's kind of what they do in WordPress.com so, if you are inclined to setting up your own kind of social website where you provide people blogs, it's a great -- it's a great software for this and last it can be set up in less than five minutes give or take a few days for tweaking and things like.

We're going to cover this very quickly because we have a lot of things to do covering how WordPress works but just keep in mind the architecture of the information, things are very specific to WordPress, to blogging, things like comments, track backs, pings, RSS and socializing that means new elements that are visually on the page so you've got to keep that in mind as you're designing, you know, your infrastructure, your wire frame of your website, you know, are you going to have a page of RSS feeds.

WordPress automatically creates RSS and Adam Feeds per category, per author of posts, has a combine post of RSS, you know, an RSS feed of combined posts, comments or comments for posts. So it automatically creates all that but obviously, as a designer, it's up to you what -- how you organize that information, so keep that in mind as you're going through this. Here's an example of bringing in some stuff from Flickr and from Last.fm in the sidebar of this particular site and then you have searchable objects and ways of organizing archives. This is a sample of one of my favorite sites.

He's the guy that designs the default theme for WordPress. Archives are organized like by chronology where you can see -- you can browse through a year, month and then you see the date listings. You can browse through full or you can see the tags that he uses and as you can see some of tags have different sizes and that denotes, you know, how much -- how much or how much more frequently they're used and taxonomy is organized in specific categories. So we'll get on -- we're going to switch to a demo and do a quick little demo on how to install and -- and run WordPress. Specifically we're going to do -- all right.

Specifically we're going to use MAMP, Headdress, to run -- to run the site locally. Now Mac OS X comes with Apache and MySequel already built in and, if you are so inclined, you can tweak things to get things working. It requires a little bit more -- more work specifically if you want to do subdomains, if you're dealing with multiple websites but for this example we've downloaded Mamph which is kind of like an all in one package of Apache, MySequel and -- and PHP and the cool thing is that it's all enclosed in one folder.

So theoretically you can dump it in your iPod and actually take it wherever you're going and continue your development, you know, passing on from computer to computer. We're using Headress specifically for multiple domains in the case that you're developing multiple websites but, if you're only doing one, it's not really -- it's not really required.

So, just to show you how simple it is to set up, I've downloaded Headress and I've downloaded Mamph and I've downloaded WordPress, the new version of WordPress which I've installed in the sites folder. So number 1; we're going to launch Headress and yes, try the demo. It's very cheap. It's like 20 something dollars; it's totally worth it.

So the first thing we're going to do is we're going to tell -- we're going to tell Headress that we're going to be using the Mamph installation, so we're going to come over here and link it together. So open the HTTP file of Mamph. I'm going to browse through applications folder, look for Mamph look for the config, Apache, all right.

Now, if you see over here on the right you see the little elephant, that means the Apache config file for -- for Mamph. The top one is -- is the one that comes built in with Mac OS X. All right. Once we have that, we're going to add WordPress to Headress, so we're going to come over here and say add site, and I'm going to come over here, choose this is my sites folder and my personal home folder and I'm going to select -- that's the WordPress that I downloaded.

You can rename that folder to whatever you want, if you want to specifically rename to whatever your site, and that's it. So now we have this set up over here. Number 3 is we're going to launch this and create the database, so we're going to launch Mamph. Mamph automatically takes you to where is this thing -- all right.

Mamph automatically take you to this kind of starter page and right from here you can go to PHP my admin page to manage the database of Mamph, and I'm just going to create a new database. I'm going to call it WordPress but, if you're dealing with multiple projects, I suggest you label it accordingly so that you know what's what.

Okay. So now we have a new database that we created. I'm going to come back here to the start -- to the start page and this should give us the information that we're going to enter, database, you know, host, the user is root, password is chiefs. All right.

So we're going to come over here and launch the site -- no, actually what am I doing here? Okay. Back to the WordPress folder. I'm going to edit the config file of WordPress which we do by removing the sample from the section and launch that file and we're going to enter the database information that we got. Database name -- Okay.

Ah. Something is not working here. Here let me redo this part right here. And config from Mamph -- You guys following? All right. All right. Why isn't this working? Maybe -- I'm going to restart the server really quick. You know, I've tried this like ten times in the last two days and this is the first time it doesn't work so just -- there you go.

All right.

( Applause )

So you know, if you're working with multiple projects it's just as simple as going to add site and linking to a new installation of WordPress and, you know, just repeating those steps, but we're going to -- oh, something happened here with my -- maybe reopen the start page. Okay. Password root that's what happened. So I'm going to change the config file of WordPress.

Okay. So password is root. Okay. We got it working. So this is WordPress running and -- ah, cancel that database -- let's see -- open start page -- double check that the database is still there, not there. Okay. Very weird. Okay. Come back over here. Okay. All right. No, no this is good.

This is good. It's seen the database, and it says you haven't installed WordPress yet because the installer installs the tables and database so -- so we got WordPress working, so all we have to do is click Install.PHP. WordPress automatically puts all the database tables and all that, so let's take the first step. So we take the first step, name our -- name our thing. Okay. I'm going to deselect this particular option and that tells it to automatically submit a new post to search engines.

Okay. So now it's done; it gives me a temp password. I'm going to copy that and then go to the log-in page, admin log-in, and I'm in the admin of WordPress. I'm going to quickly go here to users, and I'm going to change -- I'm going to come in and change my password really quick to something I'll remember. All right.

And then I'm going to go to options and turn on permalinks, so are you guys familiar with permalinks? Yeah. WordPress is a PHP application, if you don't turn permalinks on, then all your URLs are something like Index.PHP question mark P equals, you know, something or other, so permalinks are kind of like pretty URL's.

They're a little bit more contextual. So I'm going to set-up the date and name base so, if I write I post on 2007, June 15th called sample post, then that will be my actual URL. All these URL's get redirected to PHP and PHP automatically outputs the correct one out.

So I'm going to update that, and I said I'll give you a quick overview of WordPress; dashboard shows latest activity here and gives you some WordPress news; write is where you would write a new post or a new page which is different than a new post, pages are not tied into the chronological order index, so a page would be something you would use to do like a contact page or, you know, a videos page or an about us page, so it doesn't show when you're browsing archives through date; manage view is where you manage posts, you know, pages, categories and things like that; comments that's where, you, you know, disapprove all the nasty stuff that you're guaranteed to get on your site; blog roll is kind of like the blogging name used for links and sidebars. You can add links and put them in categories et cetera. Presentation is where you choose new templates and plug-ins is where you activate plug-ins; users is where you manage users.

So it's a -- it's -- it's a very simple interface that you're dealing with. So that's kind of the end of the demo of setting up WordPress. As you can see it's -- it's very easy. It took less than five minutes, I think, give or take a few days. That's three Aps we used and this is kind of all the steps that we took and -- and that was the demo we took.

So, again, WordPress on interface is very clean, very easy, if you actually don't like it and hate blue there's a few plug-ins that automatically change the CSS, makes it look completely different. There's even a plug-in that allows you to change the name of the labels so, if you would rather have links instead of blog roll or if you don't use that, you can actually delete it. So it's very extensible.

This is the file structure of WordPress as you can see most of the files start with WP at the beginning except for the index file obviously and the XMLRPC file but everything else it's very easy, most of your stuff -- most of the content on your site lies in the content folder that's where you have your themes and plug-ins. So as you're upgrading WordPress you kind of update everything else except your content and your config file.

So we'll delve into how to customize WordPress and it's theme, the best way to customize a theme in WordPress, themes in WordPress are not really called templates it's really a collection of themes, every theme is really different because it's -- it's a collection of different files and functions. You're even allowed to create your own personal, you know, some things even come with plug-ins that come in automatically with them.

So the best way, if you want to customize a look of a specific theme, is to duplicate the default theme that comes in your themes folder and what you do is you duplicate it, rename it and then you edit, there's a style.CSS style sheet file in that folder and all you have to do is rename the metadata at the very beginning.

In this example I named it my custom theme and, once you do that and you go the admin, you will see right here at the bottom left, my custom theme. You just select that and WordPress automatically starts using that theme as a theme and then, once you have it set-up, you can go in and start editing the files.

I have two lists here, one is the required files and the other one is a basic template, the required files are the requirement that WordPress has to run a theme properly. It only requires those two files, everything else is a way of easing the process as a developer.

The index file is the actual PHP code that culls the content. It's the same in every single page. I'll show you an example, if you see on the list on the right, there's a very basic one, there's obviously Index.PHP which is the main template the one that's called template on the right, on the middle that's the -- that's the page that gets run when you first hit the home page of a -- of a WordPress blog.

If you click on a specific post link and you go to the page where it only shows that particular post, WordPress will automatically look for Single.PHP which is a post template that shows right here. If WordPress doesn't find that particular file, it will automatically default to Index.PHP that's why -- that's why index is required, the same thing with page template. If you create an About Us page when you click on that link, WordPress will automatically look for the Page.PHP file.

If it doesn't find that, it defaults to index. So there's other -- other files like that. There is a 44 file in case, you know, they add -- somebody goes into a link -- a page that's no longer there, again, it defaults to index if that file is not found.

There's a few other files here on this list for example header and footer and sidebar, those are split just as a way of optimizing their design so that you're not repeating code in every single -- in every single footer and header, you know, they just get included in -- in some of the template files so that you're not redoing the same code. You just edit it once and that's it.

So how to -- specifically how to customize a page? Well, we have two ways -- two things you can customize. You can customize a particular post, you know, the post that's tied into the -- into the timeline and then you can customize the page. To customize a post, I'll give an example, if you have a blog specifically talking about games and you want to split it into, you know, PlayStation, you know, you split it by platform you want to cover PlayStation, Xbox and Wi then what you do is you have three main categories, you find the ideas you see on the first list here, you find the idea of that category you can get it by going to the manage categories section and -- and get the ID and what you do is you duplicate the file Single.PHP and you add a number -- that number at the end of the file name, so if you hit -- if you're browsing a WordPress site and you drill down to a specific post that's about PlayStation, PlayStation happens to be category number three, then WordPress will automatically look for Singlethree.PHP.

If it finds that it will show that. If not, it looks for Single.PHP and if it doesn't find that it reverts to Index.PHP. So it's -- it's a hierarchy of trying to find template files. It's, you know, once you have that particular page, you can edit however you want. You can remove the sidebar. You can have a custom CSS file that's unique to that specific section so that you can -- it can be all related to PlayStation et cetera.

Now pages are handled differently, pages -- you actually select from the admin menu what template you want to use and what you do is for the sample we'll duplicate Page.PHP from the -- from the theme folder, you know, edit however you want and what you do is you include a code, a PHP comment that says templatename:videos which is number three right here on the right.

So, once you have a page that has that, when you go to the WordPress admin, you'll see this on the right, there's a page template section and the name that we selected over there which is videos in this example, will show up over here and you say hey, this page I wanted it to use this particular template.

So it's very easy to customize, you know, individual pages or post pages based on the specific category. I'll give you an example based on the Sicko website that we developed, the trailer page we had to customize because we wanted the trailer to be like full screen; we didn't want any of the sidebar.

We didn't want the red column that was, you know, on the regular post, so that's -- that's what we did we attached a specific class style sheet, CSS class, that had the parameters of, you know, wide, you know, angle, center page and so it was very easy to do that. Another way of customizing templates in WordPress is through doing custom queries and this is available in every page of -- of a WordPress theme.

WordPress provides specific functions that you can use as a conditional tag and this example the first one to show the search field on the sidebar only on the home page. All you have to do is do a PHP conditional tag that says, if it's home, then, you know, include this file, search form and, if it's not the home page, it won't show it.

Second example shows category, if show category name when browsing so, if you're specifically browsing a category so if -- if you go to, you know, your blog, category and then the category name, then you can say well, they're browsing the category let's identify that and, you know, so we'll use this particular function. If it's category and you're currently browsing the, you know, category name. I'm going to show you some -- some of the conditional tags that are available.

There are author-related -- author-related tags, so you can have specific things happening when a post that was written by a specific person. You can have things that show up or hide specifically on one particular post or one particular page or if it's search results is home which we already saw, if it's category, if it's not found, date based if you're browsing by year, by date, by a month or by day. If it's an archive there's kind of all these conditional tags that are available. Next this is the index page of WordPress.

I've kind of trimmed down a little bit on the HTML code -- the HTML code that comes in the default -- in the default thing just for clarity of this example, but you'll see that we have a couple of WordPress functions here, get header, all it really does is it doesn't include a PHP include but just for simplifying we're using WordPress built-in function that automatically includes that.

So you can include a header, include a sidebar this is where the content is and then you can include the footer at the end. The content is kind of where the magic happens and this is kind of the same -- the same code that's used throughout all the different WordPress pages and templates. First it asked if it has any posts.

If it doesn't have any, then you can have a custom content, you know, that says not found or you can provide a search field or even bring in archives, if it finds, then it goes through the WordPress loop and the WordPress loop is -- is where WordPress goes and gets the content from the database. There's a few functions that are available for use, one of them is bring in the title which is -- this is all PHP codes.

This is very simple -- this is a -- this is a PHP file so you're mixing in HTML with PHP code which is actually very easy for you guys who are familiar with PHP, if not that's I -- but I have a hunch you guys are into programming, so it should be pretty -- this is the one that brings the actual content and if you see here there's a specific parameter that says read the rest of this entry that's because WordPress you can -- whenever you make an entry, you can specifically split a particular point and say show only this and the index and have people, you know, click for more and you can customize the way the actual text that shows up.

There's other ones, you know, like the time, the category but there's a lot more that you can include that has, you know, information about the author, you know, the date, comments et cetera. If you want to do multiple loops, there is just a matter of adding one more PHP code which is a query post function from WordPress.

Why would you want to do multiple loops, well, going back to the example of setting up a blog for different gaming platforms, you might want your home page to have -- to be split into three columns, you know, one for each particular gaming platform. In that case all you have to do is specify with a query post right before the WordPress loop, this first one we're showing the last ten posts of category ID-3 right, so if the category with the number three is PlayStation then this will show the last ten posts of the PlayStation, so it's very simple, you know, it's category equals three in this case we're trimming it down to only the posts from the year 2004 just for ki cks and then we show the last ten posts and then on the next example we actually, just for you to get an idea, we can show every single post except category number three, so and you do that just by adding a negative three.

You can do multiple categories by doing commas, you could do, you know, category three, comma five, comma 15, comma negative 4 and here's some example of the parameters you can use: Category, category name which is the actual full on name of the category which is not recommended because you can always rename that and then screw up your site; there's, you know, author, author name, post number and page ID, minutes, seconds, it's a lot of freedom. Last we will talk about expanding the blog experience through plug-ins and widgets, WordPress built in media support and how to insert media from other social websites.

Plug-ins and widgets, WordPress I think it's mostly known for its amazing plethora of plug-ins that are available. They get updated on a daily basis. I subscribe to RSS feed of any new plug-ins and it is -- it's amazing how active the community is and you can get just about everything WordPress plug-ins are executed by predefined plug-in hooks so every plug-in works differently because it gets executed different parts, there are some that get executed before any page loads, some load after the page load, some are applied as filters to posts, so there's, I mean, there's -- there's a plug-in for example that changes comments looking for bad words, but it doesn't actually change it on the database.

It actually applies a filter on the execution when you're actually viewing the page, so that it doesn't actually tinker with the actual content. So if you guys are interested in plug-in development, it's -- it's -- there's a lot of cool things that can be done just because it's very extensible.

But some examples of the plug-ins that are available are, you know, spam checkers, there's a plug-in called Akismet which is made by the developers of WordPress and that's probably the best spam blocker available for any blog platform out there. It's not only available for WordPress; it's also available for other blogging platforms, and it's developed by the same people. If you guys don't blog, spamming in -- on the blog comments in post is -- has gotten probably worse than e-mail spam with, you know, casino invitations and things like that.

Other things that are available are tagging, WordPress has very basic tagging out of the box or you can just pretty much the title and a description, but it doesn't really have any metadata so there's plug-ins available for that where you can add key words and descriptions per post or per category or globally there's also integration with sites, external sites like YouTube, Flickr, there's a mobile blogging plug-ins where you can allow, you know, it allows you to edit and add content through your phone and there's plug-ins that enhance some of the main features of WordPress, allow you to manage categories better, give you extra options and extra labels in particular posts, the way posts work in -- in the -- in WordPress is they have a lot of options for metadata so a lot of plug-ins use this, you know, particular option where if, for example, if it's a plug-in that rates a particular, you know, item and you're, you know, for example want to have a site where you review books and you want to give it, you know, three stars or five stars or whatever you can actually roll out your own plug-in very easily just by adding a metadata, you know, to that particular post, you know, called rating.

It's very easy. It's very cool for plug-in developers. There's admin enhancements, obviously, like I mentioned if you want to change the look of the admin interface there is a -- and there's also widgets. If you guys know most blogs have sidebars and the new version of WordPress has widgets where it allows the content, you know, the content creator of the blog to organize their sidebar and add widgets and delete widgets and things like that.

To install a plug-in, it's very easy. You download the particular plug-in you're interested in. You can find them at WordPress.org they have an extend section where you can find items to extend your blog. Download the plug-in and read the instructions because all plug-ins are not created equal. Some are a collection of files, you know, in a folder that you need to put in the plug-ins folder, some are just one file, some require some extra steps but pretty much follow the instructions, put them in the plug-ins folder, then you go to the plug-ins tab and you'll see a list. In this example I'm showing post ratings which is the one we used in the Sicko blog. It's activated so you have the button to deactivate right there to disable it.

This particular plug-in shows me a ratings tab at the very top of WordPress -- of the WordPress admin where I can change things like how the rating looks whether it tracks people's API, you know, IP addresses, whether it allows, you know, who do you want to be allowed to rate. You can say only rate people that have a WordPress account on my blog or have anybody be able to rate, and this is, again, this is the plug-in at work. It's a very cool plug-in.

It's a -- it uses AJAX so you can go in, select your particular, you know, insurance company to rate it see the little AJAX magical little progress bar and that's it so it doesn't really take you to a separate page or anything like that can't beat of -- the bad thing about plug-ins is you need to keep an eye on them because, you know, not everybody is a great plug-in designer and this particular one brought the site down a few times because it was doing way too many access to the database.

It wasn't using cache so we had to do some magical work, you know, in cache all the content on an hourly basis so that, you know, get some relief to the database of the site so and other than that there's also, you know, not everybody is great, and not everybody writes code that's -- that's web standard.

So it might, you know, you might be very anal about having your code being very proper and install a plug-in and all of a sudden, you know, you're no longer up to standard, and, you know, you might want to -- every time you install something, you know, go through it, check what code it actually outputs You might want to edit, you know, some of the output code so that it's, you know, up to your standard of -- of, you know, expertise and all that, so.

These are what the widgets look like in the admin area. Widgets are only available if you specifically have it set in your -- in your WordPress theme. You need to actually add a function -- Functions.PHP file that you can see actually in the default WordPress installation that says this is going to be a dynamic sidebar and then you can need to have that in the actual Sidebar.PHP but once you have them these are kind of like what comes with default with WordPress and the ones that have the little icon to the right are the ones that you can actually have a specific options panel, you know, for example for Flickr you'll need obviously a Flickr account in API but, you know, you can easily just drag stuff over and rearrange and it redoes your sidebars. So, it's very easy.

WordPress built in media support, uploading a certain media into a post out of the box. WordPress has a very basic way of managing media. You can do it as an upload -- an upload functionality right into the -- right into the post when you're writing a post or writing a page.

You can upload images -- you can upload other things -- this is kind of what it looks like. I'm not on the upload tab, I'm on the browse tab so I've uploaded one image here and I can just easily drag it over or double click it to get some options like whether I want to show the thumbnail only or the big, you know, original image, whether I want it to link to the big image or link to somewhere else, but it's very limited -- it's very limited.

You can upload all the images and have them properly shown. You can upload other media like a QuickTime movie or a Flash Movie and it will show up only as a text link where you can click and it puts it as a link in your post, but it doesn't bring in the actual embedded code for, you know, say a QuickTime movie or a Flash embed.

For that we use pretty cool plug-ins we have available and also the upload engine it uses PHP to upload which has a certain -- out of the box -- it has a certain limitation of file size, so on my blog I just change that I just changed the HT access file and allowing PHP to use, you know, have a -- a higher maximum upload but that's not available to everybody so that's something that you need to look at -- so, here you go -- so like I said we can easily solve this problem by some really cool plug-ins, this one in particular brings some basic video embedding into the site.

As you can see it adds automatically some icons that you guys might recognize, YouTube GoogleVideo, iFilm, got MySpace, QuickTime, Flash. You click into any of those it give you a little pop-up window so, let's say you guys want to import a specific YouTube video and just grab the -- go the YouTube page grab the URL from the top, come over here, click on the YouTube, you'll get a pop up window, paste in the URL, click on Okay and that's it.

It automatically brings in the -- puts in the embedded code for the -- for your YouTube video or any of the other formats. This is an example showing -- showing Flickr through another plug-in. All I did was put in my user name, and it automatically brings in all my string of all my photos and I can just browse.

There's a preference pane where I can choose what -- what version of the image I want to bring into my post, whether I want the thumbnail, the medium, you know, the thicker medium size or the large or the small size. It's very simple to expand WordPress through plug-ins which is actually kind of the most exciting part because, you know, once you're all familiar all of a sudden a new thing comes out and it's like Christmas again, you know, you have a new WordPress that can do magical things, so, that's it.

We just review some of the stuff we've covered today. We learned about WordPress really, setting up WordPress on the Mac, dissected how the WordPress loops and how WordPress goes about choosing files and how to customize and we covered how to expand the magical world of WordPress through some pretty cool plug-ins. Anyways this is really exciting stuff and I -- I encourage you guys to delve into the world of plug-ins if you have not and it's quite amazing. So, thank you very much for your time.
