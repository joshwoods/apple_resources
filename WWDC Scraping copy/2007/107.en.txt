---
Title:  Students-Getting the Most Out of WWDC
Year:   2007
Web:    https://nonstrict.eu/wwdcindex/wwdc2007/107/

[!] This transcript has potential transcription errors.
---

We really appreciate the travel time you took to come here. The energy the student community brings to the Developer's Conference is always reflected back to the engineering community and the other attendees as a really positive experience. And we want to give you some sign posts and guidance today to help you maximize that energy and to help you take the best advantage of the Developer's Conference for this year. The first thing I'm going to start off with is just talking about what the point of your being here is. It's not just a week of fun. It's a week of your future for most of you in the room.

It's an opportunity for you to interact with professional software developers both from Apple and from a great many third parties from information technology organizations and from large universities. Take advantage of that time. This is probably one of the few times in your career where you'll have the opportunity to interact with people from skill levels from super guru to beginner. And get in their heads, but don't get in their way.

There's a lot of conversation going on in the hallways. Participate by standing around and listening. If you're invited in, join in. But do a lot of listening. Pay attention to what your fellow programmers, who may have a lot more years under their belts, are paying attention to and are talking about, because that's going to guide you on what's important for your career. And a lot of what this is is basic hallway hygiene.

The other thing to think about is what you want to do. We have three real important clientele in this building this year. We have the information technology folks, two tracks, two rooms full of information technology subjects all week long. We have the traditional API developers doing Cocoa, doing Carbon, doing UNIX programming. Do you fit into that community? And then third is content and media.

This morning one of the things that I hope that you take away from the keynote and what you have an advantage over someone, like me quite frankly, is Web 2.0 and Ajax. That's the way to develop an application for the iPhone. It's a way to develop an application for Safari on Mac and on Windows.

Go to those sessions, dive into that and show us the way to be creative with that. Some of us have been around too long to have new ideas in those spaces. So take advantage of your fresh viewpoint in there and get some ideas that are going to surprise all of us.

And finally, this is your chance to look eye to eye with a software developer at our developer bash on Thursday night, or at lunch, or in the evenings and say, tell me what it's really like. I may have spent all this time in high school, in college, in post doc or post graduate studies, learning how to do something called software. But what is it really like when eight to 16 hours a day, five to seven days a week, you're writing and debugging code, code that's not yours?

Code that may be going into a database application that powers American Airlines' reservation system? Or it may be something as compelling as a game, but you're only doing the file system portion of it. Learn from people here how they survive those times of it's not really creative, it's not really fun, it's a grind of being a programmer day to day.

You'll find from a lot of them that it's not a grind. It's still a lot of fun. But the transition from being in the academic side of learning how to become a programmer, to actually being a coder, watch the labs, watch people in the hallways, and if you have the opportunity, talk to people about their experiences and what saved their sanity in their progress to being master programmers. That's your opportunity this week. Many people don't get that opportunity as they transition from school to the professional community. Take advantage of it. Now I'd like to bring up Michael to give you some more perspectives on the week.

( Applause )

Michael: Thanks, CK. So CK is actually my boss's boss, so I have to watch what I say when I'm up here. Excellent that'll make it a lot easier. All right. So my name's Michael Jurewitz. I work as a developer technical support engineer, so I work in CK's organization.

My job is to work with 3rd party developers like yourselves, like those who are premiere and select members, and I answer code level questions that come into our frameworks. I focus primarily on Core Data, Cocoa, and bindings. So if you see me throughout the week, feel free to ask me a question.

So first and foremost, welcome to everyone of you who are here. This is a really exciting WWDC for all of us, especially for the students. We have over 450 of you from oPver 30 countries. It's actually the biggest WWDC we've ever had and the biggest student contingent we've ever had. So we're actually really excited about this.

And the most important part is that all of this happening at this conference, the sessions, the labs, the conversations happening in the halls, they're all for you guys, and that's the really important part. So make sure that you know that, and make sure that if you see people in the labs, don't be afraid. Go in there. Ask questions. Because this week we're here to educate you, we're here to answer your questions, and we're here to show you our cool stuff in the form of Leopard and various other things we have happening during the week.

And really remember, we're human. We're engineers at Apple, but a year ago, I was a student like yourself just graduating from college and here I am working here now. And we're always eager to answer your questions. For a lot of engineers throughout the week, this is the high point of being able to deal with everyone and seeing the people who are actually using the technologies and those who are really excited about the things that are being done. So don't be bashful, get in there an ask questions. Really dive deep with this.

So this is a really exciting time for us to work at Apple. Apple's one of the top 10 most valued brands. We have over 100 million iPods we've sold, stock's at an all time high, and we have over 500,000 developers registered with the ADC, all of which you guys are a part of.

And the real key with this is that you guys are the future of the platform. There are awesome applications coming out these days written by people just like you, who really understand what it is to be a Macintosh programmer, understanding the user interaction side of things. Whether that's Checkout, Coda, Delicious Library, or any one of the really awesome new applications that are coming out, the real focus is on the user and we're counting on you guys to really help drive us forward as a platform.

So now to do that, we have tons happening this week. We've got six tracks, whether you're looking for the Mac OS X essentials. So most of the foundational technologies, Leopard innovation, a lot of the new things that are happening this week, or even information technology or content and media, if you're really interested in delivering content to things like the iPhone, for instance.

We also have some really awesome extracurricular fun for all you guys. The design awards are happening this evening. You get a chance to honor our best developer who have really done exceptional work throughout the year. It's a good chance, too, as students, to see some of that work and understand how you can build on that in the future. After that, we've also got Stump the Experts happening. It's a great chance to battle wits with some people who have been at Apple for probably longer than they'd be willing to admit.

And later in the week, we've got Matt Neuburg who's going to be coming in doing a session called Packets of Pure Power. So that one sounds kind of interesting, I'm going to have to see what's going on with that. There's also the bash also happening up here on the campus, or up here at Mascone, across the street at Yerba Buena. We've actually taken the campus bash from Cupertino, brought it up here, made it so that you guys don't have to hop on busses and deal with that. It's going to be a great time, so we're looking forward to having you there.

So one of the real problems, or I guess one of the real awesome things, actually, about WWDC is there are tons of sessions to go to. If you look in your packet, how do you possibly decide which ones? I always find myself asking that exact question. Which sessions should I go to?

so I've prepared a small list here of highlights that if there are a few sessions you go to this week, you're going to want to try to pick up, especially as students, but really even if you're just new to the platform, or even if you've been coding for a long time, these are really foundational sessions.

So Tuesday morning we've got Coding Smarter with Objective C2. I'm actually presenting in that, so come see it, please, please. We also have later on Building Animated Cocoa User Interfaces and Adding Core Animation to Your Application. One of the major new technologies in Leopard is Core Animation, and it is incredible what you can do with the user experience when you take advantage of that. These are going to be excellent sessions focusing just on that. I highly recommend that you come in.

So Wednesday, Cocoa drawing techniques. Again, we look at the quality of user experience. It's all about being able to really present a UI that they user feels comfortable in and that facilitates their experience. So this will be an excellent session, make sure you come to it. Thursday, we have Leopard User Interface Design. So John Geleynse who will actually be talking later on in this session will be doing that one on Thursday.

It's always a great way to understand how you should be structuring your applications, again, from a user experience standpoint. So we're looking forward to seeing you there as well. And this one's a pretty interesting one, and it's probably not something that as a student you'd run into very much, so Friday we have Code Hardening Techniques.

Obviously security is a big issue these days with code, so we're going to be diving into this on Friday and looking at ways that you can write more secure code and help to make sure that you're awesome application isn't going to be the victim of all the not so good things that can happen. So staying sane this week, there's a ton going on. Is it really possible to stay sane? That's the real question. Well, you can try hydrating or eating bananas, but really you just want to jump right in.

This is a great week for all of you guys to be here to soak up everything that's happening here at the conference. And you want to make sure that you go to sessions, between those sessions grab some snacks, go to more sessions, after that, grab some Odawalla juice, it's delicious. After that, go to more sessions. You're here really to just soak everything up.

And make sure you go to labs, too. Again, I'm going to keep on pounding that in because this is really your time to spend with Apple engineers and to ask them questions, and as CK said, to listen and to find out what other people are asking who have had more experience on the platform as well. So look for people who have got these blue shirts there in the lab and come up to us, don't be bashful.

So a lot of this is really geared around you. And the whole idea is that we really need you guys as developers. You guys are the future of our platform. So this year was really unique because we were able to provide you with seed access to Leopard. I don't think ever, in our history, that we were able to provide seeds to students ahead of time from the conference simply because they received a scholarship So this is really something new and we're really excited about that because you guys have had a chance already to be building applications, to be building around with the new technologies.

So the big thing is that we're counting on your guys to find things that don't work, to find things you don't like and to let us know about it. We've got a few months here to go until Leopard's going to be shipping in October and we need to make sure that this is going to be the most solid OS release in history.

You guys are going to be a big part of that by helping us in filing bugs. So please, do that for us. Sometimes it can be a little bit of a cool process. Sometimes you'll get a bug that comes back to you and you lose site of what's actually happening with the original issue, but the high point of that is that we know about the issue and that's the important part. So help us out as developers. Pound on Leopard, do your development even if there's UI things you don't like, let us know about it. We really do want to know.

And remember, again, this week is all about you guys. So there's probably three different kinds of you out there in the audience. People who are interested in standards, standards compliant, UNIX type development, people who are hardcore Cocoa developers, and people who are more interested in cross platform development, so whether you're in SciTech or just focused more on Java.

Or perhaps, more realistically, you guys are a mix of all three. So what do we have happening this week to cater to that? Well I guess for open standards in UNIX, why would you be interested in the first place? So obviously it's a solid foundation for the future. So you've got a wealth of projects to work on.

The open source community's huge. It's vibrant. And the skills that you learn there you're going to be able to apply in almost any job that you have anywhere. And sometimes it can be rather lucrative. If you're someone who's been involved with rail development, you'd know that for sure.

So sessions happening later in the week that you might be interested in, if that's where you find your interest lying, so we've got Getting Started with OS X, Mac OS X Kernel Programming, again, the Fundamentals of Kernel Debugging, the Inside the Mac OS X Boot Process, and Developing for Unix on Mac OS X. All of these are really solid session I recommend. If this is where your interest is, definitely check those out.

So for Cocoa, obviously it's the future of our platform and we're seeing tremendous growth here, a continued need for skilled developers. If you're on any of the Cocoa lists, whether the student lists or even just the regular Cocoa dev lists, you'll notice that people looking for Cocoa programmers has increased substantially. It really is necessary for the vibrancy of our platform that people like you learn these technologies, apply them and that you're there to provide quality software for our end users.

So session you might want to check out, again, Coding Smarter with Objective C2, be there, Cocoa Today, it's a great session, Getting Started with Cocoa Bindings, again, Cocoa Drawing Techniques, and Developing Cocoa Applications with Python and Ruby. This is a new one. It's pretty different. We've actually delivered on some very interesting technologies in Leopard in the form of the scripting bridge. So come check that out. This actually allows you to write native applications, native Cocoa applications, in Python or Ruby calling through directly to the objective C APIs. It's really rather cool. I recommend you come out to it.

If you're interested in cross platform development, well, obviously, there are lots of large companies that need your expertise. Whether you're talking bout Microsoft, Adobe, Mathematica, any of these big houses that have been doing development for quite some time or that have products they want to be able to span the gap between both platforms. And it's really important that they have new blood for new perspectives on development. You guys are the people who are going to provide that for them and they want your talent. There's also, obviously, a wealth of projects for you to work on.

Again, these are pretty similar to the Cocoa slides. I've also put in a Quartz session, Creating Leading Edge 2D graphics with Quartz and the main focus with that is that you really are going to still need the same foundations as a cross platform development in Cocoa developments, that you understand the issues on both sides. Additionally, knowing things about our graphic subsystems, like Quartz, will really help you in those endeavors.

So after the conference, what can you guys to for yourselves to really make sure that you've gotten the most out of this? Well, the first thing is to continue to use the coding headstarts. This is the first year that we actually delivered on these coding headstarts. They're really a unique concept if you've done some of them.

You might have seen me in the video for the Objective-C 2 session that you should see tomorrow morning. So these have been great because they're actually in the form of Apple sample code that we've walked you through the steps of creating a brand new project and exploring the technologies that we've brought to bear. So now the really neat thing is that you can take this code and extend it in any way you want, turn it into your own project and ship an app with it.

Apple sample code let's you do that. It's there for you to use as you see fit. And that's really the point. Build an application. Whether you just want to do it for fun, or whether you want to do it to be able to show off to an employer.

But employers especially want to see this. They want to see that you know what App development really is. That you know what it is to usher an app through that creative process, to push it out in the mainstream, and then get feedback, make changes, understand what it is to deal with users at that end.

It's going to go a huge way to you when you sit down in an interview to say, yeah, I've written an app, here it is, it's awesome, and be able to show that off to them. And most importantly have fun. Because this is what this is all about. It's going to be a great week. It's going to be a tiring week But soak it all up and enjoy every bit of it.

And now I'd like to introduce Kyle McNealy, he's the marketing manager for the campus rep program. I've had a chance to work with Kyle for about a year and a half now I think. I was the campus rep at northwestern before I came here to work for Apple. So yeah, Kyle.

( Applause )

[Kyle McNeely]
So I have to admit, a lot of that stuff went kinda over my head because I'm in the marketing realm of things, but I, myself just graduated about a year ago from college and came out to San Francisco, moved out here without a job. I had saved up some money during school and applied to a lot of different places. I ended up finding a contract job within the developer relations group, continued interviewing and finally got this job in education.

So kinda the moral of that story is if you really want it and you want to find where you want to go once you graduate, spend a lot of time, spend the energy, go out there and just try it out. You know, kinda just dive in like Michael said. So on behalf of education group, welcome to WWDC. Show of hands, how many of you is this your first WWDC? We've got a bunch of you out there.

Okay. How many of you have been to San Francisco before? Hands up. Great city. Fun town. What I want to talk to you specifically about is the campus rep program. So the campus rep program has hundreds of campus reps all across the country. And what their core goal, what their job is, is a sales marketing function on campus. So they're supposed to make Apple very visible among student groups, amongst Greek life, amongst student government, all those sorts of things. And I think we actually have a few campus reps out here. Raise your hand or stand up if you're campus reps.

Cool. So if you guys have questions about campus rep programs later in the week, ask these guys right here, they're a great source of information. Each person kinda approaches the job a little differently. We've got some core tools that you can use to help evangelize the brand on campus, but we also allow for you to kinda brace or grab hold of your passions, the things you're really interested in and you want to kinda pursue. So we have a diverse group of people.

And one way we take advantage of this is help each other, share those ideas. So we do a pod cast on a monthly basis, a couple times a month. And I want to share you a quick little video on that pod cast, kinda show you what some of the campus reps are doing, who they are, where they're at, that sort of thing.

( Video playing. )

[Kyle McNeely]
So we've got all sorts of different people doing all sorts of different things. I know Michael was able to weave in kind of his development passion into his job. He was able to team up with people running events because he could help them with databases of running a dance marathon, or any kind of student activity he was able to give his services, let his skills, the Apple technology and solutions kinda be the hero, enhance that event. So there's opportunities for those sorts of things as well.

Kind of the main focus we'd like to have with campus reps is to build relationships. So build relationships with the student groups, with faculty and staff, because it's all about those connections you're able to build and then leverage later on when you try to get a job, which we all will have to do at some point, sadly.

Additionally, a large portion of the job is something we call table tops. So you will set up a table on campus and demo the latest Apple products and solutions. Some things campus reps do are have Photo Booth open so that people come up take a quick picture and then they can upload it to Face Book. It just gets more people's hands on a Mac and exposed to our platform, which we want, right?

Also, we do some kind of bigger events. So we had a campus rep for the Tiger release get a baby Tiger from the local zoo, and I've kinda thrown a challenge out there for all of our campus reps across the country, if anyone can get a Leopard for the Leopard release. Big Prize will be involved.

We also have a lot of campus reps that are really creative in nature. They're photography majors or they're into design. So we help them pursue those passions as well. We had a campus rep up in Michigan who put on a multimedia art exhibit, so he was able to get 20 - 24 inch iMa cs and instead of having art up on the wall on a piece of canvas, it was on the iMacs. So they submitted either a picture or multimedia piece and they were able to throw an art exhibit over this sort of thing.

So really cool stuff. His idea and then we just helped him execute it. We also do corporate type events and marketing with our campus reps. This was with our partner Nike at the University of Washington, Huskies Stadium. It was a relay for life event and what we were doing is we brought a Nike Plus iPod Van so people as they were walking, 24 hours straight, could record how far they've gone, what their current pace is so that they could better understand the Nike Plus solution.

So we also do those type of corporate events. Get more hands on a Mac. That sort of thing. And my next slide. If you're interested in this, if this sounds interesting, something that you might be able to weave into your current activities on campus, please go to the campus rep website. You can see a couple of profiles of current campus reps, what they like about the job.

Also in the body of that page you can see what the core duties are. The URL for that is Apple.com slash education slash campus reps. Or find one of the campus reps that stood up throughout the week and chat with them about information about the job. So that's all I got. I want to introduce John Geleynse, the manager of Software Technology Evangelism. Thank you.

( Applause )

[John Geleynse]
Thank you. Well, welcome. What evangelism does is that we are the team that works very closely with third party developers and gives them the technical guidance that they need to build really awesome products in Mac OS X. So I have a team of six people, including myself, and we all specialize in a variety of technologies on Mac OS X. And we meet with hundreds of companies over the course of any given year and we sit down with those companies and we walk through their code, we look at their UI, we look at all different aspects of what they've done and we help them understand how to take those things that they've done and make them even better. So it's a great job. And what I want to share with you is based on my experience working with these companies, this number of companies for the last seven and a half years that I've been at Apple.

There's a great quote that I want to start off with. EB White, he's the author of Charlotte's Web, you know the story, the children's book. The quote is this, I wake up every morning determined both to change the world and have one hell of a good time. Sometimes this makes planning the day a little difficult.

And you know, our desire for you is that that's kinda the quote for you, is that you wake up as a student with some great ideas and you want to change the world and, of course, you want to have a good time in the process. You're trying to make connections for your life, you're trying to establish relationships, all these kinds of things, and so of course there's the desire not to just study, you want to have a good time. And sometimes, I'm sure, that makes your lives a little difficult.

But it's definitely a great goal. And I want to talk through some of the things that you can do to achieve those goals. And here's the recipe. You know, if you're going to change the world you need to first look at where the opportunity is that you can maybe get connected with.

The next is you need to learn from others and be a great citizen. And I'll talk about what that means from my perspective as kind of an old guy compared to you guys. Next, there is some core ingredients on Mac OS X if you're going to build products for this platform.

And we'll walk through those. And then lastly, I want to help you understand sorta what it means to focus on the important and give you that guidance, that you should focus on the important because it's easy to get distracted by stuff in this day and age with lots of stuff going on and lots of stuff putting demands on your time. And then we'll just talk about how to imagine and then we'll talk about how to do. So that's kind of the course outline. So let's talk about where the opportunity is.

Of course, you're here at WWDC so you get it. You understand what's going on at Apple. Apple is on fire. I mean there's so much going on with this company now, it's definitely the right place to be in terms of building products. If we talk about iPod, we've had 100 million iPods shipped to date. That's our last public figure. Phenomenal growth in that platform, right? And you guys know, probably more than anybody, what the impact has had amongst your peers and on your campuses and such.

And just in the last year, the last fiscal year, which is two quarters ago now, 36 million iPods in one year. So phenomenal numbers, right? Well, there are some development opportunities for you in terms of that ecosystem. You can, whatever you're doing with audio - video pod casts, or with just audio files of all different types, those audio files and those video files can play on the iPod, so don't forget that fact.

If you're building applications or if you're doing something with a web solution, and the web solution creates some sort of content or archives it or does something with it, make sure that there's a gateway for that content to move to the iPod because that's a natural next step for that content.

Think about the opportunity for communicating information to audiences about things that you know about. So perhaps there's an opportunity for you on campus to make an audio pod cast or video pod cast about what's happening on your campus. How to move around the campus. How to find things.

Maybe it's an orientation for new students that you put together. And again, whatever you do, that gets iPods into people's hands, and it's a good thing. And it helps you establish yourself amongst your peers and with potentially future employers. It helps you establish yourself with them and show them that you've done something significant and you've created something that's valuable to a huge segment of the populate. So here's some examples of the Museum of Modern Art's and then another tour of some stuff. So these audio video pod casts are a great way to get stuff out there to the world.

Another way to sort of guide people, and again, it's a sort of connection with the iPod, is through the notes functionality. So there's an API, or a document which you can get, which is that iPod notes reader guide dot PDF, look for that on the developer website. It tells you how to build notes, documents, that can be put onto the iPod and then people can just scroll through notes and read information about whatever you want to communicate with them. So it's a real simple way to get content that maybe you have exposure to, depending on potentially your discipline of study or something else that you know about, and get it into the hands of another, wider, bigger audience.

Again, another development opportunity for you on iPod is the fact that every iPod can show context, it's a reader for context so any thing that's on a v text format can move to the iPod so if you do something and since the web design, web solution design or an application your thinking about and it manages contacts.

Of course you should enter it with address book which I'll talk about in a few moments, but equally that, those contacts can move down to an iPod. So always make sure that you've enabled that sort of on ramp to the iPod for that content. Same thing with events and calendar activities a v cal format moves to the iPod and, and so the iPhone being the best iPod we've ever made of course the opportunity exists for the iPhone for all of this as well. So don't lose sight of the fact that at Apple there's a phenomenal opportunity for you to actually develop content or enable content to the iPod or the iPhone in these terms.

And lastly in terms of the really healthy iPod ego system if you're a hardware person, I know a few of you are hardware designers or you know your studying that electrical engineering. If your in that space and your thinking about building something really cool for the iPod there is a really healthy ego system of accessories for the iPod and if you've got a good idea or you've built something send an email to me for iPod at Apple dot com, because they're the folks that want to know about it and they'll help you get that out to the world.

So that was iPod, but of course there's incredible growth in the Mac side. Mac OS X. Corporately we've got sort of a fifty fifty between music and the Mac right now in terms of revenues gross quarter over quarter, year over year, has been phenomenal on the Mac side we continued to increase the number of units that we're moving on a quarterly basis. And so in the last couple of quarters we're moving close to one point five million Mac's are going out the door every quarter. That's incredible numbers that's a lot of people who might have interest in running a solution that your going to write.

M00:31:56 (silence) M00:32:01 So understand the opportunity, the opportunity is significant it's phenomenal on Mac OS X and in the Apple ego system with Mac OS X and iPod. Second thing you can do to. To be sort of successful or get the most at WWC and out of life I guess is to learn from others.

(silence) Excuse me. Inside of Apple there's this really great sort of dynamic going on and the dynamic is such that we build these OS technologies, the Mac OS X engineering team built stuff in the OS, you know pick an API that your familiar with and will build something in you know that's pretty cool and then it gets out there in the next OS release and third part developers start looking at that thinking hum I can do something interesting with that and they start building on top of that. And then equally internally we build, rewrite applications that are built on these technologies.

And so the apps division internally will leverage these technologies to do something cool and then, and then they release the products and then the OS team looks at what the apps division has done and says ah wait a second that's an interesting use of this technology we made previously. And they're sort of pushing the limits of it.

We can extend it, we could add more capabilities or equally they'll see the applications group do something that isn't built into the OS yet and they'll take that from the apps team and they'll you know sort of reinvent it inside of the OS. So there's this great cycle of innovation going on where everybody is kind of being motivated by the other teams. And so it's this great, great cycle occurring internally.

And that's true in terms of the third party developer community as well. I work with hundreds of companies every year and its amazing to me how when Apple does something with an OS release we enable all kinds of new solutions and capabilities and third party developers are inspired by that and they'll see something in the OS and they'll go oh I can do something with that as well, I got another idea of leveraging that same type of technology or what have you. And I would encourage you to try to be you know, my commentary to you for WWDC is do everything you can to stand in the hallways and listen and try to catch the vision, try to be inspired.

Hang out with people that you think have great ideas and be inspired by them and hang out with Apple engineers and run your ideas by them and see if they've got some cleaver ways of modifying that idea so that it really blooms and becomes something great. Be inspired take the opportunity to be inspired by others.

In Mac OS X there's a ton of technologies today right, if we've got Spotlight, you've seen all of this, Dashboard you've seen what's possible with widgets on Mac OS X. Sync services are really powerful syncing engine built into Mac OS X that's available to you today. So that you don't have to write it yourself.

We've got Web Kit, which drives, you know it's the underpinnings of safari and is an HTML renderer and a JavaScript debugger and all this functionality is there ready for you to use. We have an incredible graphics stack upon which you can build some fantastic games some incredible science you know data visualization, applications and much more.

And whole bunch of other stuff and this is just you know a one screen of dozens I'm sure I can show you with technology icons on them, but iChat, instant messaging and iPhoto integration , iSight camera API so that you can get things off the camera through image kit and you don't have to worry about the details.

There's a lot of technology built into Mac OS X that is enabling for people, is helping people do some really cool stuff, because the people doing the cool stuff don't have to worry about these underpinnings. They're taking advantage of all the cool pieces that are already there and they're building something great on top. They're putting there value add on.

We do that, we build a lot of really cool aps that ship with the operating system, but also are sold through are retailed channels and you know these applications are built on these really cool technologies in Mac OS X, but for you guys its important to understand that its not just Apple that's using Apple technologies the third party community is doing some amazing things, including students. Know let me give you some examples.

Know not all these are student applications the ones towards the end of the sequence are, but third parties are defiantly doing some rally cool stuff with Mac OS X with these enabling technologies. Here's a product that won an Apple design award last year. It's from a company here in the bay area called Luxology. The application is called modo, it's a volumetric enabling tool that has sort of mesh, you'd lay a mesh over a model and then you could manage individual portions of this mesh to get real fine grain control in what your doing.

Super high end modeling application and it toke one person you know not a lot time to move this over to Mac OS X. Incredibly power in this application and its doing what it doers because it takes full advantage of OpenGL in Mac OS X that OPenGL stack, it takes advantage of Quartz and Quartz Extreme. And does some really cool stuff on Mac OS X and Mac OS X only. Now it's available for windows, but it has better performance in Mac OS X cause they're leveraging native technologies.

You know what do you have, what are some of the ideas that you've got that need powerful graphics capabilities. So those capabilities are built into Mac OS ten now really the only challenge for you is, okay how do you over lay your idea on top of what's in Mac OS X.

Another application DataTank written by one guy entirely in Cocoa. it's a mathematical analysis tool. You basically inter math functions, complex mathematical formulas and you can solve for you know these crazy equations that I would have failed at a school if I even looked at, but this developer is really sort of changing this market segment of math software because of this application which takes advantage of all the graphic technology in Mac OS X and leverages spotlight for example, so each of your documents can contain multiple formulas and results and everything and you can just spotlight on any of the variables in a formula or an equation.

You can spotlight on some of the key results, you can create QuickTime VR models so that you can rotate around or flip around all of your three d models. Really amazing software written by one person. that's the power of Cocoa that's the power of all of these technologies.

ToySight Apple designer award winner from a couple years ago is a product that was totally, really innovative on the platform in its day came from a company called Free Verse, written by two guys on Mac OS X, toke advantage of the graphics technologies on Mac OS X. integration with the iSight camera in a way that nobody had up until that point.

So basically in front of your machine users can sort of, users can stand in front of there iMac at the time, or now you know any machine with a built in iSight and you control the game because of some cool algorithms they built into the software were the cameras watching you and you know sort of normalizing with the back round and your controlling the game in different ways you play. It's kind of like a Wii a little bit in the sense that your gestures control the game. Great idea really innovated and only possible in Mac OS ten with that few number of programmers and few lines of code, because of what's built in Mac OS X.

Osirix. Another winner in the Apple designer awards. A couple of years ago these guys came out with Osirix, it's a volumetric imaging tool for medical research so it takes results of a CT scan and builds a three d model from this and in real time your rotating these models around, but these guys jumped around on top of all kinds of Mac OS X technologies so that you could take the results of what this application does and sort of enable a collaboration between doctors either on sight together or in remote locations.

So for example they got connected with iChat and before iChat theatre was available, that's not some thing that we condoned, but they did it in a cool way so I'll talk about it. But they got onboard with sort of iChat theatre before iChat Theater was there and allowed the application to push the model that it was rendering across iChat to another doctor, perhaps an expert in a particular area in another location.

Totally cool way of collaborating in a day an age in a time when this wasn't really going on in the Mac, even though you know video conferencing and stuff. But this is a couple years ago. These guys also integrated with sync services so that they could take the images that were produced by the application, these 3D models and they could move them down to the iPod, because then doctors could then take the iPOd and sit down and do a patient bedside consultation and rotate just you know with the thumb wheel. Goes through all the images with the patient at their bed side and say hey here's what's going on with your heart or whatever the issue was. Very cool, very innovative two guys wrote this application.

That was an open source component as well, but Comic Life, Comic Life came out of no where just a few people writing a Cocoa based application that decided that you know what there's all of this media, all of these images that we've got in our iLife repositories. We've got all these videos, all these images. Wouldn't it be cool if you could create a comic book, because comic books are a really great medium for communication. You can do serious content, you know humorous content, they're a really great medium for communication.

And so these guys out of nowhere came out of left field and introduced Comic Life as a tool for quickly building comic books and they integrated with iLife, they took advantage of Quartz and Mac OS X to do some really great visual effects and in no time in a matter of minutes you can put together something really compelling and then they integrated with dot Mac uploaded so you could build a web page they synced with iPhoto so that you could push this stuff out to one of the iPhoto hard cover coffee table books.

Just a few people had a great idea and jumped on board of all these cool enabling technologies in Mac OS X and came up with something really cool. Won an Apple design award and just came out of no where and just sort of made everyone think like oh that's a great app I want to buy a Mac for that, you know cause I want to access that application.

Delicious Library, a cataloging tool for anything with an ISP end code, whether it's a book, a DVD, a video game, a CD you can scan this thing with the iSight camera, kind of like a grocery scanner, goes out to Amazon, retrieves information about the document and lets you catalog it or organize your library of information.

Basically written by like two people and the first release 1.0 came out of nowhere. This guys working out of a coffee shop in Seattle. They could do what they did because they took advantage of Mac OS X. And they totally changed this market segment. It was traditionally list based kind of boring software and they just added like bam something really cool, great UI, all OpenGL driven at the time, iSight integration, dot Mac integration, Blue tooth scanner integration, again very cool app. Only possible because of what is built on Mac OS X.

3D Weather Globe and Atlas written by a company in Ukraine call Software MacKiev. Changing the way teachers in elementary schools talk about the planet you know the globe and all OpenGL based, great UI leverages all the graphics technologies. Got a Dashboard widget, spotlight enabled so you can search for country names and this thing in real time, its just super fast responsiveness.

Your rotating globe run, you zoom in, high-res NASA photography overlaid so you can have were the sun is shining, you have a day view at night. You see these NASA satellite images at nighttime and lights were there's power, were there isn't power in the world. Really, really great app and entirely written in Cocoa, written by a very, very small team.

Here's a student winner of the Apple design awards, last year, William Thimbleby if I remember correctly. And Will wrote Line Form essentially providing it's a vector illustration tool giving about you know , I don't know fifty percent of the functuality of Adobe Illustrator or other vector freehand illustration tools.

In one app written by one student entirely in Cocoa leveraging Core Image and Quartz and QuickTime for file imports, export. Fantastic application he was picked up after his design award by Free Verse and now they're marketing this for him. He was at Macworld last year, the guy's having phenomenal success.

A peer student of yours who took a great idea and said, I think I can do better than what's out there and I can do it faster and quicker and all that stuff. Great story, here's an application written by a student that some of you might know, the student might be here in the room today.

It's called Picturesque, really great product by a student. Its essentially, it's a batch image beautifier so to speak you take any image of any pretty much any format you drag it on the main window and then through this transparent panel, you can adjust whether you want rounded corners , whether you want reflectivity and how much, how long, do you want a glow around the seems. You do all kinds of attributes to the image and then you can save it out into whatever format you want .

You think well big deal there's lots of applications that can do that, well the big deal is for one the UI is really simple and its dead easy to use, just drag and drop interface, tweak a couple of things and you save it out. But more importantly its batch imaging so you can take two hundred and fifty images, drag them on the main window screen, set all the attributes and then say save as, specify the format you want to output to because you might have dragged in all kinds of formats and you want to out put them all as jpeg u save and bum, they're all saved in jpeg with all of the attributes that you specifies in the ui .

Very cool tool and added Cocoa scripting so that this thing is entirely scriptable so know its automatable through Automator and he's provided some Automator actions so that you can build an Automator work flow to do exactly what you want. Save the work flow as a double clickable application on the desktop and now any user of this application can drag and drop any number of images onto that double clickable work flow and instantly there converted and saved into what format you want. Very cool great idea, streamlining and automating something that's been done by lots of apps, but not in such a straight forward cohesive, automatable way. A student of your, a pier student of yours has done something great on Mac OS X.

Another student on Mac OS X I know the student is here this year I saw him last night, Pathway the product, if you Google on Safari Pathway Mac OS X you'll find the product. it's a Wiki browser that shows you this the relationships between links on a page and so you might go into, you go into pathway and you type a term like Mac OS X and you hit return and bum and it searches Wikipedia and it goes to the Mac OS X page in Wikipedia an instantly just kind of explodes this relationship diagram of all of the links that are on Mac OS X Wikipedia page.

And then you can click you start clicking on all these things and every time you click on a link bum it gets parsed and you get another relationship diagram and it's a really cool way of browsing content on Wikipedia because you see relationships that you never thought, not that you never thought were there before, but you know a Wikipedia page is really awesome, but sometimes they're really long.

Just sort of reading all of that manually and sort of grocking all of the connections that are there you know its not the most optimal way of doing it. Pathway kind of solves that by showing you this graphical relationship diagram and it is a very cool way of looking at relationships going oh I didn't know that was connected there and kind of doing that thing.

Great student product that's enabled because of technologies in Mac OS X like WebKit and the graphic stack and other things, Cocoa. M00:48:07 (silence) M00:48:13 So of course the challenge to you is what ideas have you got. And what are you going to build, you know how are you going to build them and which technologies in Mac OS X are you going to use.

Alright we talked way back about how you could change the world and the first thing I said was recognize opportunity. And definitely there's an opportunity with iPod and definitely there's an opportunity with Mac OS X all the Macintosh. And then I talked about some of the technologies you could leverage using the right ingredients make sure that whatever bread you bake so to speak, whatever software loaf you bake you use the right ingredients right.

You could use the wrong ingredients of course, if you've ever baked something you know that you can have the right ingredients, but mix them incorrectly and you get something that's pretty awful. But equally you could try to you know improvise and you come up with a crazy recipe and it doesn't you know taste good at all. So picking the right ingredients and then mixing them together correctly is the key.

Alright third thing you can do to try to change the world and benefit from your time here at WWDC is to be a good citizen. You know social networking is huge in the younger generation, which I suppose is a little bit younger than me, but the guidance that we give you is that you know that being a good citizen at WWDC and terms of the development of the community, means sort of honoring the trust that your trying to...you know establishing trust with people. So for example social networks are great for socializing and they absolutely have value there, but there not so great for business necessarily.

Because they provide you with a, a pretty large bullhorn so to speak to tell the world about something. and the same is true for blogs. In some cases, you know blogs can be, not in some cases you know blogs are a phenomenal tool. But, if your starting to establish relationships with people who potentially you'll work with or you'll partner with or you know anything related to business, you want to be careful that these tools aren't used incorrectly and that you say something that could potentially come back to haunt you in the future.

So that's one set of guidance. I think related to that is working hard to earn the trust of others. You know, you're young, you've got great ideas. A lot of the people walking that halls here at WWDC who've been on the Mac platform for a long time who have been in the industry developing software for a long time, you know, in some ways you're potentially threatening to them because you've got lots of great ideas and lots of energy. In other ways, you know, it's like you're kind of unknown and what are you going to do with the information I give you.

And these are some of the thoughts that might be going through peoples heads. So work hard to build the trust of others. And not just here at the conference of course. But as you sort of step out into your career of development hopefully and as you step out into your career of sort of web content web applications and design, work hard to build the trust of others. And that means that you need to be careful about what you say, when you say it and to whom you say it.

Maybe this next one is, you know, just my generation or my parents generation. But, there's nothing like, there's nothing better than working with someone, who when they say they're going to do something they do it. And there're definitely people that I work with, you know, in all aspects of my life in all walks and parts of my life, there are definitely people that I'm connected with that their word is bond. I mean when they say they're going to do something I can trust them, you know, completely.

And other people where, you know, it's not that I don't trust them it's just that, you know, you're just not sure yet. You don't have enough mileage with these people, or maybe once or twice they said they would do something and they didn't do it. And so, make sure that you fall into the former camp.

Make sure that you, when you give your word to someone it is, it's solid and it's sealed and you, you know you're good for it. I mean that is going to go so far in you establishing trust with other people and allowing you to kinda get connected with people and take advantage of, in a positive sense, you know, leverage those relationships and go far with people.

Communicate keep everyone in a loop. Of course communication's key everybody talks about that. But I think in terms of, you know, when you start to partner with people it's so important that you're talking to them and sharing what you're feeling and sharing what your ideas are. And, you know, talking about it. And I think, you know, the social network in generation's real good about that.

There's lots of blogs that share ideas and that's all good. NDA material is NDA whether from Apple or anyone. I mean this goes back to the building trust but, just because someone tells you something about what they're thinking about or what they're working on, even if it's not secret, it isn't something necessarily that is appropriate to share with other people.

And I think until such time as the person who has given you that information, you know, gives guidance to talk about to others, I think a safe assumption is that it's not something you should be sharing with other people. And it's just, it's just some guidance, it's just some wisdom from me to you. But I think it's really valuable for you here at WWDC to keep that in mind and I think, as you work hard to establish trust with others it's a real key thing too.

And be the developer everyone wants to work with, you know. Work hard. Be the person who does what they say they're going to do. Be the person with energy and ideas and do everything you can to be the person that everybody else wants to work with. That's going to get you so far in your career, farther probably than, you know, great academic, you know, marks and rankings and all of those things.

While all these things are important, at the end of the day life is about relationships. And the more you can do to be someone who is a pleasure to work with and who is, you know, trustworthy and works hard. And that's going to take you further, I think, than a lot of other things. And so, I just give you that guidance as well. And here at the conference too, be somebody that's like, you know, a riot to be around. I think that's great as you connect with people.

Take advantage of core ingredients is another recipe for being successful on Mac OS X and with your ideas. And I'm going to move through this list real fast because you've heard a lot of this today. But I want to talk about these technologies, these core ingredients. I showed you how some other third parties and students were using them.

But I want to talk about them in terms of what the opportunity is for you of making something great. Cocoa, you're probably using Cocoa already. But Cocoa is the framework, it's the wrap it up linkage and development environment of Mac OS X. Cocoa enables some great products. I would say the best of the best new products in Mac OS X today without a doubt are all Cocoa based.

So if you haven't looked in Cocoa yet, look at Cocoa closely and start to learn it. Spotlight, spotlight definitely is a feature that we introduced in Tiger. It's available in Leopard. Of course you've seen the demos earlier on today. And you used it yourself and stuff. But think beyond just sort of Spotlight searching in the finder.

Think about how search can be integrated into whatever idea you've got that you're going to turn into a solution in an application on Mac OS X. It's not just about making your file format, you know, searchable. But you could do a lot with search inside of your UI in terms of smart lifts, smart albums, that, you know, are calling through to the query API's to find things that auto populate these folders within the UI, within your UI. And there's lots more that you can do with spotlight and we can talk about that one on one if you've got questions about it.

Quicklook, you've seen all the stuff we're doing with Quicklook it's absolutely critical, you know, it's sort of an essential ingredient of all of the things that you do on Mac OS X make sure that you are Quicklook ready if you're file based. And I won't go deeper into that.

Core animation, you've seen cover flow today, you've seen the demos that were shown this morning in the keynote. Animation is going to take the user interface on Mac OS X to a whole new level. And we're just beginning to see how it's doing that. If, you know, if you see the experience in cover flow you get a sense for that, if you look at front row when you sort of do the remote controller on the iMac or on any machine that's now front row enabled. You see this mode switch and front row starts to rotate these icons around it.

It's a completely new way in a sense, a very engaging way of presenting information to the user or presenting a UI to the user. And you could start very simply in our app by adding animation by just simply animating lists. As things come into a list, for example, like the iChat buddy list. People appear online and the buddy list opens up space.

And the buddy enters or is added to the list, and when the person goes off line they disappear and the buddy list collapses. That's a very simple use of animation or a simple example of the use of animation inside of an application to convey lots of information to the user in a very elegant very interesting way. Front row is a major way of introducing animation to do a mode switch.

A cover flow is great way of using animation to sort of navigate information. And I'm sure that you guys, when you start to think about it core animation is going to, is going to be one of those enabling technologies that are going to let you guys create some really great stuff. That wasn't possible previously without a lot a lot of code.

Core image and image I/O, again core ingredients, pardon the pun, that you should be using if you're going to deal with anything related to camera images or file formats or what have you. If you want to do any image effect inside your application don't waste any time writing the importers and the exporters. Don't waste any time writing these image filters unless you want to add to what's already in Leopard or in Tiger.

But take advantage of these built in technologies to do all of the cool affects that you see inside if iPhoto and some of our other applications. They're just calling through the system to do like a sepia tone or, you know, a black and white conversion, or some kind of a pointilization or whatever effect. And then built in support for raw camera image format so that your app doesn't have to worry about the stuff. It can just bring these image formats in and it can do what it needs to do.

Image Kit framework, again a really powerful framework for you to build your cool idea on top of because your image kit takes care of all of presenting the UI for standard image effects which in turn go back to core image to be applied. Image Kit presents you with all of the UI you need and all of the under, you know, all of the plumbing that you need to talk to an iSite camera with the picture taker UI. So, you don't have to worry about any of that. With like three or four lines of Objective-C code you can present this UI, take a photo, and your retrieve and your given back a photo from the Image Kit Framework.

And lastly, Image Kit provides you with standardized UI for slideshows like in iPhoto. If you've gone to full screen mode in iPhoto and you've managed your photos in there all of that UI is provided through image kit. And so, it's available to you. So you can do the same things in your applications without having to write all this custom code.

OpenGL limited only by the GPU. The GPU's performance graphics processing unit on the Macs and in the industry is a whole, GPU performance is going through the roof compare to CPU performance. So a phenomenal increase in power there and we're doing everything we can on Mac OS X to take all the graphic stuff, the entire graphic stack and put it on top of OpenGL and push it through the GPU for optimal performance.

And if you're thinking of doing some, if you got a great idea and you want to get on top of sort of how to render this correctly in a 3D way and a way= that's visually, you know incredibly appealing. OpenGL's the way to go. And so you should make sure the visit the OpenGL or the graphics lab downstairs. Find somebody who knows something about OpenGL and tell them to sort of do a brain dump to you about how this stuff works. And that's true for all these technologies.

Quartz compositions, here's an opportunity for you to do something either in your application or separate from your application to really get mind share with people and do something that's very cool. You can even turn these into products in and of themselves separate from an application. So Quartz compositions, if you didn't know already are created with a tool called Quartz composer it's bundled on every, in the developer tools folder in Mac OS X Tiger and Leopard.

But Quartz Composer lets you build these compositions. And compositions are the sort of, it's a visual, Quartz Composer provides a visual editor where you bring patches in, these little boxes. And each patch basically exposes functionality from an API and Mac OS X. So, you might be sitting out there going well like what API?

I mean, you know, OpenGL? The answer is yes, OpenGL, Quartz, Bonjour, RSS, all kinds of technologies in Mac OS X that you might not have learned the API for and you don't necessarily know anything about. I mean not everybody in this room knows how to program OpenGL. Maybe you don't really want to know how to program OpenGL. And that's okay. But you can take advantage of OpenGL through compositions because you can drag boxes around and you can hook lines up in this visual letter, anybody can. And you can create these things that are really compelling.

And once you've created a composition you can expose sort of these values on each of these little patches, which expose an API to your application or to a wrapper application through Cocoa bindings because any application can now set these values. So, for example, you might have a shape that has a color.

You can export and make public the color value and then a Cocoa binding can connect to a color pallet in the UI. And whatever color the user chooses, you tell the composition hey, this is the color for that value and boom the thing automatically redraws in the new color. That's a simple example.

The point here is as students you guys might have some really creative visual ideas of things you want to do but you don't have the time today right now this week or, you know, in the course of this year to learn everything there is to learn about programming Quartz or Bonjour or any of these API's or even more that I haven't mentioned. But you can get on top of these and use them and leverage them inside of Quartz compositions. And you can build a whole library of compositions that other developers could use or other people could use. And I'll give you two examples here.

Here is a let me just see if this works for a second, if the mike is on. ( Clapping ) No it's not, the mike's not on. So, here's a Quartz composition that two students in Atlanta made. And they use it in the context of a church that they're participating in and in the context of some concerts that they're part of. And so, they've put these, this is a Quartz composition running right now.

They're doing some clever stuff inside the composition for moving this needle in the view meter and they've hooked up some patches. They've hooked up one of the patches that's in input for the audio in on the computer. And so, this composition, which isn't working at the moment, but basically it's monitoring whatever the audio in port is on the Mac and it's adjusting the U meter based on the volume of that sound. So if I clap you would've seen the needle, the needle jump.

Well they use these compositions. They've got a whole raft of them. I won't show you them all. But they use these compositions in a contest concert scenario where there's a VJ in the back doing some really cool stuff on the front of the, in the front of the concert and where they get the crowd all rowd up. And so the whole crowd's trying to get this view meter really high, right. It's very cool. It's very applicable I a particular context but it's a creative idea and there was no programming that went into this at all.

This is simply done with Quartz composer. Here's another one that's not going to show up very well because it's not working. There's a blue line, anyway I'll tell you very quickly. But it's a blue line with different thicknesses. The same thing takes the audio in read and adjust the line sort of like a different kind of a meter. And again it's all about applause ometer. You know, it's measuring the sound in the room and it's getting the audience all excited. And anyway, it doesn't look like much here but I'll show you on my machine later.

Another opportunity for you in terms of core ingredients is Safari and web kit You've seen all the news today about Safari going to Windows. You've seen all the news I've heard all the stuff about Safari on the iPhone. There's definitely a huge opportunity for you if you understand, you know HTML, CSS JavaScript and want to move in that direction. There's a real big opportunity for you to build a presence in the developer community by being an expert at this stuff and getting out to all of those browsers that are there.

Dashboard same thing if you know CSS HTML Java script you can do some very compelling widgets. We got some great widgets that have been submitted over the past from students. And we look to see what else you've got up your sleeve so to speak, so again another opportunity for you. And there are some developers that have created widgets that they sell and they generate income from widgets. And they do quite well for themselves. So there's a great opportunity for you with dashboard.

Address book, you guys are big in the social networking I'm sure. Whatever you create, whether it's a stand alone application or a widget you can link to, if it manages people make sure you store it in the central data base on Mac OS X, another great ingredient for your product.

Calendar store, if your product or your idea relates to events make sure that you're retrieving calendars and restoring events into the central calendar store on Mac OS X Leopard, because that means that whatever you do in terms of adding events, creating calendars or modifying them, any other application that deals with calendars on the Mac including iCal and others can take advantage of that.

Instant messaging, again you guys are big into social networking connecting to people and IM-ing and texting and such I'm sure. And on Mac OS X is a built in message framework. It's a great way to build community within your user base. So, think about, you know, whatever idea you've got that you've been sort of, you know, letting percolate for a while and now you're at WWDC and you're thinking well how do I, how do I do that iChat thing? Well the answer is instant messaging, the instant message framework in Mac OS X.

You can indicate presence and you don't have to do it through iChat. Your application can call through to the instant message framework for any buddy name and get their online status. And you can show it inside of your application in with the same kind of UI or slightly different UI. And even if you were a web solution you could wrap your web solution in a web view with a thin Cocoa application and now that application can talk through the native API's on Mac OS X like the instant message framework.

And then, could pass that information up into the web view, up to your server, so that your web solution which is embedded in this thing, application in a web view, has awareness of presence so a great way to get access to the native system API's for web view. Anyway, the value of knowing if somebody's online is obvious when you're inside of Mail etcetera.

So think about the idea you've got and knowing if buddies are online or not would be valuable to that, and make sure you take advantage of instant messaging. iChat theater, you've seen it today. it's a great way to just take whatever your ideas, whatever your application is and push that content out to users.

And automation, I talked early about how picture ask, this image beautifying tool that the student created is really compelling because it's automatable. It can easily integrate into a bigger workflow and just be one essential piece of workflow. But once it's part of that workflow no one's going to let go of it.

So the best thing you can do if you're writing applications on Mac OS X, whatever the application is to make sure that it can be part of an automation workflow. That, somehow some way, through AppleScript or through the scripting bridge in Mac OS X Leopard, people, other users, other applications can talk to your app and get stuff out of it without users having to launch the app and integrate with the UI. And automation has extended a lot of the aps that we include on Mac OS X today. And extended those apps in ways that the original engineering team never even thought about and didn't write specific API's for.

It's just that when you start to call things through the scripting API's you now can do things in certain orders and get additional functionality out of these aps. So for example, you know, there's a bunch of apps on Mac OS X that are enabled and have a lot more features because they're scriptable. Don't forget the value of scripting. Okay, last couple things to finish off here and then we'll be done. So, another thing you can do is focus on the important.

You know all the ingredients. You've seen how the third parties have bundled these things together. You're starting to form partnerships - in the week here at WWDC and over the course of the next couple of years as you get into your careers, and stuff. But, as you build products it's not just about the technologies. What makes some of the best products great is the fact that they combine the ingredients in the right way to produce something that's really great.

Alright, I was talking about combining ingredients correctly or incorrectly, and one of the best ways to combine the ingredients correctly is to make sure that you focus on the things, the attributes of software that are very important for you. So, as you walk around the show today, talk to other developers and ask them how did you make your application elegant, if they did.

How did you make your application easy to use, if they did? You know, what do you do to make sure that your app is super simple? How did you design your application and focus on simplicity? What did you do to make your application super high performance? Well of course they ran Shark and they use the right API's and you know. but there's, focus on these things.

Apps that are defined by these types of characteristics, sorry these types of characteristics are the apps that people want to use. And just take a moment for a second think about the apps you love to use. They probably embody a lot of the characteristics that I've got on the screen here, imagine.

So, we've talked about the technologies in Mac OS X and I went through a whole raft of ones that are in Leopard. And so, this is some of them, you know, enhanced from the previous slide. And so, the question of course is what's your app going to do?

are you going to focus on attributes like simplicity ease of use, you know, adaptability, compatibility and all the things that people want? And are you going to use the right technologies? Because if you do, it'd be really great for me to be able to talk about you next year or perhaps at the Apple Design Awards and go through here and say, you know what? This app from this student uses all of these technologies and it delvers a really great elegant, you know, easy to use high performance solution for Mac OS X. that's the goal.

So just do it. You guys have great potential. I've talked to a bunch of you already, not just today, but over the course of the last year. I've chatted with a bunch of you who know me. You guys have time in the sense that you don't have the same demands on you that sort of working people do. that doesn't mean you're not busy. I'm not trying to belittle. I'm just saying your demands are different.

And for many of you you've got time in ways that other people don't have to kinda come up with something. You have energy you've got access. People like talking to young people. They like talking to people with great ideas. They like talking to people with, you know, who think, you know who think big. And students are typically people who think real big.

Lastly I want to end on this. There are a lot of great apps on Mac OS X today that are being written by really young developers. Now maybe some of the ages that I'm going to share in a moment are a little older than you but it's possible.

And there's a whole new generation of applications of software coming out of Mac OS X written by what I would say is very young people. And you guys can be, maybe some of you are some of these people. But you can definitely be, you know, a part of this. And a I said some of the best stuff is coming out of the younger generation and these are really great apps that do the right thing. So let's look at some of the ages of these developers.

There's not a single developer who's written these application that's, I mean every one of them is under the age of 30 if not 28 I think. I think the highest number on here is 28. So, 28, no 29 here over here in the corner on the job, but you know, that's not real old.

Some of the guys walking around here are pretty old, you know. and they're still doing good stuff. so think about what these guys have accomplished, you know, and what's most exciting to me is all of these apps as far as I know, and I might be wrong, are written by one person, okay.

They're all written in Cocoa. They were all written over the last 12 months or 18 months potentially. I might be wrong in a couple of cases. They're all written by somebody who's young, and they're all getting great traction on Mac OS X. they're seeing success, there's an opportunity here. and you guys, I'm sure, have great ideas and it would be great to see you guys develop a product that shows up here whether it's a widget or a web solution or a double clickable desk top application.

So, here's a quote from Lee Iacocca founder of Chrysler years and years ago, I love this, I love this quote. I want to end with this. So apply yourself. Get all the education you can. But then by God do something. Don't just stand there, or sit there, you know, make it happen.

There's so much potential here. I love the fact that we got so many students at WWDC this year. And I love just sort of anticipating what's going to  come out of you guys in terms of productivity tools for Mac OS X. and the key thing, of course, is get all the education you can here at WWDC. Milk this place for all it's work.

Don't, you know, hang out. Talk to Apple engineers. Get their ideas. Say, hey I'm thinking of doing this thing. How would you do it? What technology would you use? How would I make it simple? How would I make it high performance? How do I do all these things? You know, and there's lots of really smart people here that you can get information out of.
