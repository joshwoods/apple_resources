---
Title:  IT State of the Union
Year:   2007
Web:    https://nonstrict.eu/wwdcindex/wwdc2007/500/

[!] This transcript has potential transcription errors.
---

Thank you, and welcome to the IT State of Union. Today, I'm going to talk about trends in IT, and more specifically, one specific trend, which is the consumerization of IT. So, what I'm going to do is we're going to go through four different areas, and we'll look at how consumer products have changed the face of IT and the way that we work, and we'll start off with storage. So, storage is the growth in storage is not just limited to back-end service anymore, and in fact the back-end storage is very expensive, so this is creating some interesting problems. Gardener, actually, in a recent survey, said that 93 percent of corporate data is now at the edge.

In addition, corporate data, the data types that we're using, is becoming consumerized as we're introducing more complex kinds of data, the use of video, complex presentations, and so forth. So, the data itself is becoming consumerized, and because all this data is out on the edge, we now find that work critical and life critical data is often residing on the same system.

Now, with a large growth of data, easy access to this data is crucial, and in fact, we see that your market response time is actually proportional to the amount of time it takes to access your data, so therefore accessing the data quickly is becoming increasingly important for your enterprise. The other interesting feature that is going on with storage is that with traditional storage systems, the cost of maintaining those storage systems frequently exceeds the cost of replacing them, and so the whole picture around the TCO of your storage system is changing.

Now, this is actually the storage that's being purchased. This is not the existing storage. So, this is just a graph of the growth of storage, and some customers that we see are easily seeing 100 percent growth per year on their storage requirements, and these are people like, you know, the video post production, broadcasting, print and publishing, people who are dealing with rich media.

Now, the other interesting thing is that costs are going down, and this is due to people like Apple, who are introducing consumer or commodity based products to be able to have a significant decrease in costs, and in fact, not only are we driving the costs of storage, but driving the industries cost of storage down because we're using sort of consumer like drives.

Excuse me. Now, I talked about content. There are many different data types, and the data that we're using in storage is getting more and more complex. We start off with simple email, although that is even, even that's sort of become richer. We're going from plain text to html kinds of things, words, photos, podcasts which starts including video and QuickTime, Keynote actually is a very rich medium, so that data type is expanding, and then high definition movies, which is the largest of that set.

And the interesting thing is that with all this consumer data size exploding, even the small data, such as your email, is now carrying a lot of this other stuff as a payload, so even that is exploding also. And enterprise data is really following suit as IT users become more creative in the way that they present corporate data.

As an example, we have NFL films, and their network where they were trying to make all their live footage available to their live shows from the various different games to their live shows immediately as it happened, and they had an old infrastructure that just couldn't scale. And so they installed XN on a 54 terabyte ApplTe storage system, and they're expecting that to double. So, we provided a scalable system at a commodity kind of pricing that made it affordable for them.

In addition, they used the QuickTime formats, which are available on all platforms, so they had this ubiquitous format that they could then distribute their data with, and for extensibility with Final Cut Pro, the xml project exchange allowed them to merge things like game stance with the media as it was being distributed, and then make it immediately available to their TV programs. So, you can see how this consumer based technologies, or consumer oriented or driven technologies can turn an enterprise solution, and make it cost effective and rapidly deployable.

So that's storage. Now, you have all this storage, what do you do with it? We need to consume it. And that's what distribution is about. So, what we're talking about is not publishing, right, and so today we have multiple different devices to consume this data. Data is richer and bigger, we've got movies, we have music, we have photos, and we have to deliver it to multiple different devices, whether that's your iPod, whether it's your computer, whether it's the large screen TV, and time from receiving this data to distribution, is shrinking. You cannot wait and sit and process this data and sit on it, you have to be able to send it out to the people that need to consume it. And this is true regardless of whether it's a consumer, or whether it's in your enterprise.

Now, this is an interesting little graph, to show you what I mean by the explosion of the rich data types, this is the amount of data that it takes for a human being to consume in a minute. So, text we have about 1 K, audio is a couple of megabytes, video, standard video is, a QuickTime kind of movie is 5 megabytes, a standard definition TV, 10 megabytes, and high definition TV, 25 megabytes. So, you can see that as we put greater demands on the quality of the information that is delivered to us, we also have a similar problem with the amount of data that that actually consumes.

And a good example of this is podcasting. When podcasting was starting in iTunes, we had Car Talk, or something like Car Talk, which is an audio podcast, and then the initial podcasts and video were sort of like standard definition and so they were bigger, but not huge, and now we've seen the trend go towards high definition podcasts, so we are having to be able to push large amounts of data, and the trend is always towards a bigger scale.

So, we have this big content distribution problem. We have massive amounts of data. It has to be in a human consumable format. People don't want to have large pieces of data, they want to have information that comes out of it. We have to distribute across large geographic areas because that's where enterprises are, and we have multiple formats because you need to be able to consume it on the device where you need it, whether it's your iPod, your computer, and one format just doesn't work, right? It has to look good everywhere.

So, someone must have solved this problem. Well, it just so happens, it's us. It's Apple. So, in iTunes we believe we've solved a significant amount of the distribution, content distribution problem. We have a massive amount of data. In iTunes we have over 5 million songs. We have 350 TV shows. 500 movies. We have an ability to mine this data with an easy to use interface with iTunes It allows you to find exactly what you want very quickly.

It's available in 22 languages. We have iTunes stores throughout the world. And the interesting thing is we can support multiple formats. With iTunes, when you get a video, you have to know whether you're going to be watching it on your desktop, your iPod, Apple TV because you need different formats for the different destinations.

So, we believe we've solved this content distribution problem, and so we have iTunes U which is really solving this content distribution problem for education. We replace the music content with education content, we keep the same easy to use interface to be able to navigate and find the information that you want out of this data.

It's available in the U.S. and Canada, and again, we have to tailor it, the distribution delivery, to the media that it's going to be presented on, the various different formats that you need for desktop, iPod, Apple TV, etc. And so it brings me pleasure to invite Adrian Sannier up here from Arizona State University to talk about their experiences with iTunes U.

( Applause )

Well, thanks very much Simon.

Hey, it's really exciting to be here today. My name is Adrian Sannier, and I'm here representing Arizona State University. I'm the University Technology Officer there. Arizona State University is one of the nation's largest and fastest growing universities with 65,000 students in the Valley of the Sun. Now, with the leadership of our president, Michael Crow, we're pursuing a new vision for higher education.

A vision founded on increasing excellence, access, and impact that defines a new standard for what higher education would be. An education, an educational institution that prides itself on who it includes, not on who it excludes, and that judges itself by the quality of its output, and not just the quality of its input. Now, this is a pretty healthy mission for us to undertake. And so what I want to talk to you about today is how Apple, with iTunes U is helping us to meet that goal.

There was a time when universities were technology leaders. Now, I know, especially given how exciting today was, that that time is maybe a little hard to remember, but I know there are people in this audience today old enough to recall when you didn't get your email address from Google or Yahoo or Hotmail. The first time you got an email address was when you went to university and somebody gave you a dot edu address. Ethernet. The biggest networks were on campuses, between the buildings where IT staffs dragged cables that they had twisted with their own hands to connect people.

Some of the earliest self-serve applications were designed to get students out of registering in the gym, and also to help them find books by bringing card catalogs online. So, that's what our innovation curve has looked like, but those days are over. The accelerating consumerization of high technology is putting university leadership completely out of reach.

Completely and totally out of reach. The kinds of innovations that powerhouses like Apple can do, the scales at which they can work, dwarf the capacities of universities, and so we've gone from the front seat to the back seat, and without a change in strategy, we're very soon going to find ourselves standing by the side of the road watching consumer technologies leading edge disappear into the sunset with our students riding along with them. Because that's where their expectations are being set.

And so how is it going to be that a university is going to be able to match this consumer experience. Well, we think the answer is to shift our focus from context to core. Now, Jeffrey Moore, of Crossing the Chasm fame, he describes context to core as this. Core activities are the ones that distinguish your institution.

They're the ones that, in the case of a university, bring students to our school instead of the University of Arizona. They're the ones that help our students succeed. They're the ones that attract world class faculty. Beyond that, if an activity doesn't directly correlate to that, it's context, and yet, and I'll bet there's a few of you in this room, we spend most of our effort, most of our time, providing context, and very little of our time applying world class solutions to our core problems. We do this because what was once core, has become context. You used to be able to differentiate yourself with your own internal IT, you can't do it anymore.

And so our only chance is to move our focus away from context toward our core, toward the application of leading edge consumer technologies, to our core missions, to make learning more fun, to make research to do and easier to collaborate on, we have to spend that time, but where will our context come from? This is the major challenge.

Now, our strategy, ASU's new strategy relies on working with technology leaders like Apple. It relies on the idea that they will be able to create infrastructure, and deploy that infrastructure at a scale that dwarfs ours. The Economist in the holiday edition last year featured ASU's technology strategy, and in that article I was quoted as saying that working with technology giants like Apple, these consumer powerhouses, is like receiving technology from an advanced alien culture.

Now, all of you know what I'm talking about because whenever you hear about these innovations, I know what it's like to be a developer, and when you watch the unbelievable power of this, of this enterprise, and you see it, oh, you're desperate in the next 18 days to go and write an app for the iPhone. I know you are, because I am too.

But that platform that's being provided is what's so extraordinary, and there's no better illustration of that than iTunes U. With iTunes U, ASU has been able to skip the part where we try to emulate a world class infrastructure. You know the deal, we get a whole bunch of developers together, we get a whole bunch of money together, we have an overly confident reliance on open source software, we whack and craft for like a year, and we have a big demo, and at the end of the day, people go, hey, that's really great, that's almost as good as iTunes was last year.

Instead of a pale reflection, we go right to the head of the class. We go all the way onto the big show, using the same infrastructure that all of our students are already thinking about when they think about rich media distribution, and that means we can focus on its use, on its value, and so our whole community has a new outlet.

For example, our administration now has a channel, using the world class iTunes infrastructure to communicate the progress of this experiment we've got going on down in the desert, and so everybody who's interested can track what it is that we're doing in this new American university odyssey to try to change the face of higher education.

We also have an unprecedented opportunity to reach out to middle school students. These are the students who are making a decision about whether they can go to school or not, and many of them are making the wrong decision. This gives us an opportunity to use the same infrastructure where they find their music idols, where they interact with cinema stars to also interact with world class educators who can give these kids an idea of what the world is like, and what their place could be in it. So, then finally, a deeply integrated experience for our faculty and students.

Totally integrated into our brand, totally integrated into the flow of our course definition, and then delivering podcast content, lecture material, all sorts of supplements that only grow as this rich media expands. All of that through a familiar infrastructure that our students already come to school knowing how to use.

So, this idea is extraordinary for us. It's allowed us to skip the part where we try to pretend a world class infrastructure, and instead focus on what this means. We're doing our part, we are focusing on the content, focusing on training our students and our staff and our faculty in the use of this stuff, and deploying networks sufficient to the task of distributing this content and making it available. Apple, ASU, and iTunes University, working together to help redefine what the new American university is. I'd like to take this opportunity to thank Apple for its help, and turn it back to you, Simon.

( Applause )

Thank you.

Oh, wrong way. So, thanks. So, this is really just an example of how consumer driven technology can solve enterprise distribution problems, but in a very human friendly way. So now I'd like to move onto presentation, and what I mean by this is, you know, how do we develop applications to present the data in a way that is accessible to people?

So, in presentation there are a number of ways which you can develop your applications. We can do a traditional desktop application that we've done many of, and these are quite incredible applications that can produce a very rich experience. Or more recently there's the web application, the Yahoos, the You Tubes, that provide a different view of the application through a browser that would view the application that's residing on a server somewhere else, and then more recently still, we've had this sort of hybrid view, which is where you have a desktop component, and a web service, and that provides you with things like, you know, Google, Street View as an example, or Colloquy which is an internet chat client which basically uses a lot of the of the standards, IRC, SILC, and ICB for Mac OS X, and provides you with a desktop experience, but basically is using web services as a form of presentation.

And so if we look at sort of the old web 1 dot oh kinds of applications, that was really about connecting computers, and making the information available between computers, but web dot two dot oh is really about connecting people, enabling collaboration between people. It's all about participation. So, we'll have a little look at the Web 2.0 ecosystem, in particular around participation. One of the interesting things to note is that of the non-participants, the 52 percent of these non-participants, the average age is 50, so clearly, the future is with the participants.

So, if we then look at the participants and break that down a little, we can see they come into various different factions, right. So, we have the collectors. These are basically the people who create the metadata, they create pages of links, and thinks like that to be able to redirect and collect knowledge. We have the joiners. These are people who participate in things like Facebook, they read and publish blogs, and interestingly they're the youngest of all the participators.

Then we have the critics, these are people who make comments on blogs, they post reviews, things of that nature. We then have the spectators, a big group of people. They're the audience. They're the people who are actually consuming this experience. And then finally, of the categorized group, we have the creators.

These are the people who are actually generating content, and they're, it's interesting, because they're the younger group and they're pretty evenly split 50-50 male to female, but the other interesting fact is that they are twice as likely to be Mac users. So, Mac users are twice as likely to create content on the web than any other user.

Now, some of these Web 2.0 apps are actually dominating their category, even so for example Wikipedia, the hits outnumber on Wikipedia a more traditional encyclopedia application like Encarta, three, almost three and a half thousand to one. And Web 2.0 is really just exploding, right. It's twelve percent of all the U.S. web activity, and has an almost 6X growth, 670 percent, over 6X growth in the last two years alone.

If you look at something like YouTube, 18 to 24 are the age group of the most people who view, and the people who upload are in the age group of 35 to 45. So, this is the younger end of the spectrum, so clearly Web 2.0 is the future. So, for presentation, what are the challenges here? We have a number of different development models. We're trying to maintain developer productivity, we want to keep our administration costs under control.

So, we clearly have traditional desktop applications providing a great experience we want to leverage the web, and so hybrids are really a very interesting direction to go. Using standards like AJAX, css, and basically everything that's in WebKit. WebKit is a great supporter of all the Web 2.0 standards.

Which basically means that WebKit is the target platform, which actually means that you'd have less testing, right. You're not writing an application for Windows and porting it to the Mac or vice versa and what do you do about Linux and so forth. You have WebKit as the platform. Your deployment is simpler. It's a patching. You have a web server anyway, and so these hybrids create a really interesting scenario where they have a desktop experience with a web app development ease, and so this allows you to get greater developer productivity, and your hosting services already exist.

You already have an Apache server, a MySQL, more than likely in your enterprise anyway, and so you're leveraging your existing infrastructure. So, to talk about hybrid application development, I'd like to invite Dale Jensen onstage, who's the co-founder and Chief Executive Officer of Ntractive, who will talk about elements.

( Applause )

Thank you, Simon. Well, I happen to be here this afternoon to talk about Elements SBM, a project that's in development at Ntractive. Awhile back, my friend Justin came to me with an idea that he said was for a killer application. As a long time developer, you know, I'm accustomed to people coming with ideas they want me to write a program for them, and in the end in turns out to be a good idea for them and a few other people, but this really was a great idea, and I'm really happy to be involved with it.

So, what is it? Elements SBM, the SBM stands for Small Business Management. Now, I know that doesn't sound very interesting or exciting, but what we put together, and how we did it really is. What we did is we took all of the pieces the Small Business uses to manage the company, and all of the data that the small business generates, the knowledge that's generated, whether it's in sales, marketing, finance, product development, and we brought all those together in a real time application.

The resulting is that you get consolidated information flow for real time reactivity. What does that mean? It means that your business, you can make decisions on it based on what's happening today, not based on what's happening on the report from a month ago that your accountant gave you.

We created a multi use collaborative system. You set up your employees as users in the system, use access control lists to give them access to the parts that they need, they generate the data, the data flows together, and you can make decisions, and it's available anytime and any place.

Well, when we were working through the scope of this project, we thought about how are we going to go about doing this, and again, I'm a Mac developer with about 20 years of programming experience, so my first thought was, let's do a client server desktop application. Well, you know, one of the problems of small businesses is that oftentimes they don't have the infrastructure, the people, that's required to support a network application, and as we thought things through, we thought, oh, maybe there's another way.

So, we went onto something else. We thought, how about creating a web application? Right out of the gate, that solves a lot of the problems that we had with the desktop application, but it introduces some new challenges. Well, we thought we're up for them, so we decided to go ahead and do that.

We decided to create software as a service. Now, to be honest with you, software as a service is becoming kind of an overused buzzword. It seems like anybody who takes a database and puts it up on the internet, and gives you a web page and some fields that you type into, and then charges you for it, is software as a service.

That's kind of boring though. We're Mac guys, we want to do something exciting and innovative and fun. So, we approached it from a different angle. We decided that we would create a web application that looks and feels like a desktop application. That's quite a challenge, because in a traditional browser, that's not very easy to do. So, we came up with a hybrid implementation. What is that? It's a custom browser written in Cocoa, using WebKit. It's a rich Web 2.0 application running over the Internet. Combine the two, and you have Elements. And what does that look like?

It looks like this. This is Elements SBM. Now, you'll note some traditional desktop features. It's running out of the dock. It has menus, windows, help, preferences, but all of the content, everything that you see in the windows there, is dynamically generated over the internet. This is a web application in spite of what it may look like.

It's a hybrid, desktop plus web equals Elements. We have tight integration with Mac OS X. By doing this hybrid, we can take advantage in a web app of features and functionality that were previously only available on a desktop. The result is a web app that works, looks, and feels like a true desktop application.

Present a unified user interface. That means there's no scroll bars, no resizing, your data's not hidden, it's presented to you logically, there's no web browser, you don't access this through Safari, or Firefox, it's all run through the Elements system. And that's Elements SBM, it's a new way to look at your business.

What are the advantages to this system for our target user, the small business person? Clearly, the ease of use. Because of the familiar nature of this application, you're going to have lower support, lower training costs, lower cost of ownership. It's a complete solution. Again, we pull pieces form sales and marketing and calendaring and in out and finance, and bring them all together, and it's a web service with all that that entails.

It doesn't matter if your employees are generating data whether they are in Minneapolis, and you're in California, you can, within a few seconds, log into the system and see the current health of your business. And it was designed on a Mac, built for the Mac, and served from a Mac, or a lot of Macs as the case may be.

What about Ntractive? What was the benefit to us? I can't emphasize enough the benefit of writing for a single target. It doesn't matter if Internet Explorer supports CSS 3, or if Firefox renders fonts differently than Safari, we write to one target, WebKit, and it's universal across the board.

There is no convoluted code, it's all consolidated. And we have security and control that's unprecedented in a web application. There's no forward, backward buttons that people to use to navigate through the system. They can't open up this bit of the window over here and resize it, or go into the URL and monkey around with it. We have control of an environment, and the result is a definable, predictable, and stable interface in a web application.

How do we build it, what do we put it together with? I'll pop up some icons here, some familiar faces, Xcode, TextWrangler, Transmit, the middle line there, that's the core of Elements. MySQL on the backend, Apache on the front end, and Lasso for Lassosoft is the middleware piece that pulls the two together. The business logic is written in Lasso and JavaScript, and so as you can see there, there's not a lot of tools, and there's not a lot of cost associated with that either. Where do we go from here?

We're currently finishing up development of the product. We're expecting a beta later this year. If you would like more information about Elements, or would like to sign up to participate in the beta, you can come to our website at NTeractive dot com, and we'll be here at Mosconi in January 2008 for the official launch of the product. So, thank you very much, I'll turn it back over to Simon, and have a great day.

( Applause )

Thank you.

So, you can see that you can build beautiful desktop looking apps by using web based services, and that's the presentation. So, finally, we're going to look at infrastructure. At how consumerization impacts what we build in infrastructure. So, the problem is that, you know, IT costs are growing, but slower than requirements. You know what that means. There's a lot of expectations put on you, and then they don't give you the money to back them up.

So, the solution is really to try and leverage consumer products, which, you know, have a different cost structure to reduce IT costs. This is probably a trend that you're all very familiar with. This is the growth of expenditure in IT, so this is not matching what people are asking you to do, so that's really the nub of the problem.

So, let's look at some of the problems here and how we can solve these with consumer products. So, we're talking about content creation. So, this is basically the information that you are moving around your company. How to manage systems across a network, remote administration. How to keep software up to date, you know, and how to make sure that people systems are running smoothly.

And finally, this is a mobile world, and is getting more mobile. We actually sell more and more mobile products than we do static products, and with the iPhone, it's going to become dramatically more mobile. So, this kind of, in our scenario, with wireless networks being ubiquitous in your environment is very important. So, let's start with content creation.

So, professional products are available for these things, but, you know, by and large, they're expensive, they're hard to learn, so there's a training cost element to this, you know, and they're not available in the box to go off and buy them. So, you have to purchase them, train people, and it's time consuming.

With products like iWork, with Keynote, and Pages, and iLife, it's, you know, video, iMovie kinds of editing and so forth, you have a lot of the tools available on the system to allow people to be able to create the content that they need in the work environment, and the other advantage is that they're all easy to use. They're designed for people who don't want to know how to use a computer. They don't have a huge learning curve. So, this reduces the costs in your infrastructure, both in terms of purchasing, and in terms of training.

For remote administration, excuse me, so remote administration is really important, and we have Apple remote desktop. This is a powerful, enterprise critical application, but we've leveraged Apple's consumer sensitive UI expertise, which basically means that we can administer hundreds of machines, but in a very simple fashion, because we're very careful about how we design the control systems in the product so that it's a product that's simple enough for teachers to use, for example, in this particular example of managing ranks of machines which move through classrooms. So, there's another example of how consumer viewpoint is changing the products to reduce costs because now the teachers can manage the systems.

Self service management. The solution here is Mac OS X. The reason that I say that is that Mac OS 10 is a consumer product, fundamentally, which means that many administration tasks are done automatically by the system itself, and end users can also be self sufficient enough to be able to do a lot of basic system management themselves.

Software update for example. It's a very simple program, it's very reliable, there's no fixing the system after you do it, and as a consequence, this frees your IT staff to focus on things that are more valuable for the business, which is the core services behind in the centralized system.

Finally, wireless network setup. We have Airport Extreme, another product that's designed for the home, powerful enough for your business, and therefore simple to administer, even if you're administering one or you're administering a hundred, because they're designed for people who neither know about networks or want to know about networks. So, it's a very simple set up cost. Now, what does this do to, for example, your infrastructure costs, in terms of the number of people that you need to support your business?

So, this is actually Apple. We've taken to this to an extreme. We have nobody to administer your desktop systems. We're all responsible for administering our own systems, to keep our software up to date, and to install packages that we need. So, we have moved the IT focus in Apple away from the desktop, back to the centralized services.

This allows us to do some really interesting things, which is, as well as needing fewer people to do this, we can actually consolidate. You do things like consolidation of fragmented services, because we're now focusing on the core. So, for example, Apple used to have 5 different HR databases that needed all sorts of maintenance and support. We now have one because instead of updating everybody's system, we now can focus on adding value to the business. And so this allows us to reduce costs even more.

So, we've can use consumer products to reduce costs in multiple ways. We can get cheaper hardware. We can reduce training costs by using simpler products. We don't have to waste time on administering machines that are complex to machines, because those machines are simpler. We have much more consumer oriented pricing structures, which is saving money there, but also at the same time we get increased productivity, because the clients can be able to update their systems when it's suitable for them, and they can do it themselves. There's less down time to them. IT is now allowed to focus on the things that bring value to the business.

And so we're now using better tools to produce faster results to make the organization more efficient as a whole. But you know, it's not only Apple, we have other people doing this too. And so I'd like to introduce Dr. David Aucoin, who's from VCA to tell us their experiences of using Apple's products in their business.

( Applause )

Thanks, Simon.

Appreciate it. Hi. I'd like to thank Simon and Apple for both the invitation and the opportunity to speak about a multi year project which we're in the first phase of between Apple and VCA Antech. So, I want to tell you something about our company, VCA. Also about our IT problems that occur in a rapidly growing company such as ours.

The solutions that were provided by Apple professional services, and then finally, why did we choose Apple as an IT enterprise solution provider. So, first, let's just talk about VCA. Well, we're Veterinary Centers of America. We are the world's largest provider of veterinary health care. Certainly in the United States.

We are in fact a growth company. That is what our foundation is. Currently at three business units. We started our company in 1986 with a single hospital. We have grown from a little of 2 million in revenue in 1986 to this year over 1 billion dollars. We currently have 12,000 employees, and our hospital division has now grown to over 400 hospitals in 37 states.

This year alone, we will see something like 6 million unique pet patient visits. We also have a laboratory division, Antech Diagnostics. Antech Diagnostics, the largest provider of clinical laboratory in the United States has 26,000 diagnostic customers, veterinary clinics throughout all 50 states, and this year we'll process something in the area of about 300 million laboratory results.

The new addition to the family has been Sound Technologies, a hardware and proprietary software imaging provider, providing pack solutions for medical imaging, primarily in ultrasonography, and digital radiography. We currently have about 600 clinics and growing rapidly, and the disc storage for that alone is a terabyte per month.

We are a rapidly growing, heavily datacentric company that has IT challenges, with the typical IT challenges you find in all companies that are spread across a large geographical area. We do have multiple organizations, multiple configurations. Each of our business units has its own infrastructure, LAN, WAN, as well as its own operating system and hardware, and they function independently, meaning responsible for their data acquisition, as well as their data distribution, and they do a fairly good job about doing that It is difficult, though, to scale on these processes without increasing cost, i.e. we can't leverage the infrastructure.

Now, and interestingly enough, although they all do data acquisition and distribution, the integration component of our businesses is really poor, and it's surprising because VCA Animal Hospitals are consumers of, in fact, the laboratory data, as well as the imaging data, but the can't in fact integrate to those two business, and primarily it's because their acquisition software, their practice management software was actually built for us in the 1970s, and until a few years ago, was still running on green screens. Now, still running just on terminal emulators, either on PCs or on Macs, so not only did it lack the tools for integration, but even if it did, it couldn't render graphics, no less multi media. It was just impossible.

And then also, each of our hospitals acts as data islands if you will, responsible for their own systems, so backup is done by an office manager coming in and putting in a tape, hopefully she remembered and it backed up. Ooh, what if the backup didn't go very well? Well, hopefully the system doesn't crash. So, high availability, disaster recovery, not exactly a part of our infrastructure and game plan. So, data acquisition, data distribution, and data integration were the challenges that we gave Apple to come back with.

So, how they addressed those challenges is literally that for the acquisition they were going to come up with a new patient management system for us, and it was important when we told them is that we did not want an Apple only proprietary product. We wanted them to bring us industry open standards so that we were absolutely OS and hardware agnostic. And distribution was one of the coolest things they built for us, is actually an ability, in almost near real time, for any synchronous transactional data transfer back to corps, and I'll show you some of the neat things that that allows us to be able to do.

And then finally, the integration, by using just a beautiful acquisition system, to take advantage of some standard messaging systems such as web services, that allow us to integrate to our laboratory and our imaging, and then of course all on beautiful OS X run hardware with iMacs, where an average VCA clinic will have about 15 iMacs in a single Xserve.

Introducing Woofware. Yeah, I know. Woof is our Nasdaq symbol, okay? Our CEO has a very weird sense of humor, okay, so Woofware is in fact a beautiful application brought to you by the fellows at Effogen who have done just a marvelous job. What it is, is primarily an open standard, open source solution, a Web 2.0 application built on a high customized Mozilla Gecko engine browser, customized using Zule and sprinkled very heavily with AJAX, so literally the responsiveness is like a client server desktop application, and not very much like a web, however, the web functionality was very important to us, and the back end, a single Xserve running on the application server with the container of Tomcat and Jboss as its server itself, and connecting to the only shrink wrap product of our application, which was Sybase's iAnywhere. We chose that because as a full relational database, it also was self-tuning, and self-managing, an important part of our criteria for a low IT management.

So, literally this thing is beautiful. What it does though, with a single point of failure, with one Xserve in the background, is that with the asynchronous transfer, which we do by using Mule as an enterprise service bus and JMS services. We use a publish and subscribe model, so that all the data from the hospital is almost replicated at corporate. If the server fails, the application just points to a new URL, and the hospital goes on like nothing happened.

When the local systems come back, the data synchronizes, and it repoints back to the local system, and second of all, and a really cool feature, is that every client who is in fact entered into any of our hospitals anywhere, gets published, and then all the subscribers are all other hospitals, so one patient now is in all the hospitals across the country, so if our customer or client moves from one city to another, across the state, or even across the country, and they go visit another of our hospitals, all their patient medical records are there, and that was accomplished by this thing. So, Woofware starts out in the fall. We're just finishing up phase 1 development now.

Goes to pilot later this fall, goes into production late in 2007, early ?208, and it'll be in southern California with our hospitals there, and then we're going to spread like a virus, which is interesting, considering it's Mac OS X, across the United States, literally going into 400, 500 hospitals by the time that we finish in order to be able to literally get us on one hardware platform and to really accomplish this. Now, why did we choose Apple, and in our enterprise solution? Well, the commercialization of hardware and software is an interesting thing to us.

I mean Mac OS X is a commercialized product, but it's a perfect platform, because people forget that it's a Unix based operating system, and it has all the features and functionality regarding service, reliability, security that any good Unix system has, plus the open source technologies that are bundled in with it, just really let's us use this as a beautiful platform. Plus, the active GUI that is available in the integration of its application allows a training module. We have 10,000 employees we have to train on this new platform. How are we going to do that an easy way?

Effogen's created a really new interactive training tool as incorporation as part of this application, utilizing the content creation ability of Apple. So, we can get professional content without using professionals, and leverage the multi media functions within OS X. And then finally and not least of all is the OS X Server technology. At the end of this, we'll be having over 500 servers and over 5000 iMacs that Pwe're going to have to maintain.

Now, the licensing model alone in OS X Server is an excellent, believe me, we're all about ROI in this business, and that's a perfect model for us, but again, their software, their software update server, their desktop management tools, allow us to be able to literally leverage for the first time our IT infrastructure as we continue to grow. So, I'd like to take, thank you all for listening. I'm going to turn back over to Simon, and hopefully learn more about OS X Server. ( Applause ) >> Thank you, so much.

That was amazing. Okay, that really sort of sums up what I have to say for these, on these four subjects. What I'd really like to sort of draw attention to is, is that you know, there's a traditional wisdom that enterprise technologies trickle down into consumer products as the consumer products become more powerful, but in fact, what we're really seeing in this new world is that consumer simplicity is really sort of trickling up to the enterprise to be able to make the enterprise problem set a lot easier to manage, and there's an example of a product that actually does this which is a server based product that has taken in the culture of consumer simplicity, and that makes a really powerful product. And so, to talk about Mac OS X Server, I'd like to ask Greg Burns up on the stage to tell you what's coming in Leopard server.

( Applause )

Thank you. Thanks, Simon.

So, I'm going to talk about some of the great new features that we're introducing in Mac OS X Server for Leopard, and how we've really made it simple at the core, while still adding these new features, but first I'd like to talk about another product which is Xsan, and today we're announcing a new release of Xsan which is Xsan 2, and with Xsan 2 we are introducing several new features. The first is we have greatly improved the administration.

We have a brand new administration app, so again this is example of keeping simplicity at core, in addition to Xsan 2 can also manage, optionally, your users groups and network settings for all the systems on your san, so this is great if you have a small san for video editing, for instance, where you want to set it up and manage it very easily, you don't want to fiddle with the networking, open directory, etc. Xsan can do it all for you. Of course, you can still work with open directory, all that functionality is still there, or you can let Xsan manage it.

We've improved performance, we've optimized the data layout on disc to improve performance for streaming video, and we have several presets that really optimize performance for different workloads so you can get the best performance out of your san. We also have a new feature called multi san. If you have multiple controllers on your san, you can have individual volumes hosted on a particular controller. This is really important when you have critical volumes where you need the reliability, uptime, and performance, you can designate them to an individual controller.

And finally, we've integrated Spotlight into Xsan, so now all the functionality you expect from Leopard Spotlight works transparently on Xsan for all your clients on the san, to indexing rich text queries, everything just works. So, that's Xsan 2. It will be shipping this fall, and we have a seed that's available today. This seed is available to Apple developer connection members and you can check out the website that will be posted sometime today.

So, Xsan 2. So, now, let's get onto Leopard. So, Leopard Server, we've put a lot of new features into Leopard Server, and of course, again, trying to keep it simple at the core. One thing we've done is we've made Leopard Server much easier to manage. We have a new application called server preferences which is great for managing a server in a small environment, and small organization, and also workgroups within larger organizations.

This application looks, coincidentally, a lot like System Preferences. It lets you manage the users and the services of the server, and so it's very easy to set up, very easy to manage, but if you manage large numbers of Macs, if you're in a large organization and you're wondering how this would work for you, it also lets you set up the server as a workgroup. You can still assign account from Open Directory, you can still integrate and can use the advanced tools to monitor the server, so it's great for setting up workgroups in a larger organization, as well as small organizations.

So, we have really made it a lot easier to manage Leopard Server. In addition to workgroups, Leopard Server has the power to scale, so as you've heard, and I'm sure many of you know, it's Unix at the core, and we have put a lot of effort into improving the performance in Leopard. We've improved the performance of the kernel in terms of the process schedule of the kernel, as well as locking, and you can see how this translates into server scalability.

Here's an example of benchmark of AFT, and you can see now on a quad zeon Xserve that we have linear scaling of AFT, and this translates into real end user performance, so here we have two file server benchmarks, cifs or smb, and that benchmark just by upgrading the Leopard server on the same hardware, 42 percent fasteBr, and AFP home directory workload benchmark, 73 percent faster on Leopard Server, just from an upgrade from Tiger.

We've got great performance improvements in Leopard Server, and with Leopard being 64-bit across the whole OS. We've taken advantage of that as well, so now you can leverage the performance from the upside of addressing larger memory, and we are shipping Apache, MySQL, and many other services 64-bit native in Leopard Server, and there's no downside. It's the performance is on par and it enables you to take advantage of the larger memory spaces.

Leopard Server, in addition to the core, is built on a lot of open source technologies. We've taken these many, many technologies and integrated them tightly into Leopard Server to provide the core services, and we've made several updates across the server in this release. So, the first of these is Mail. With Mail, we've added clustering for increased performance and scalability. On the web, in addition to updating the existing apps that are there, we've added Ruby on Rails, Mongrol and Capistrano to make it a great platform for hosting rails apps.

We've added iChat Server 2 which does server to server confederation, so it allows you to chat with other users on Jabber servers such as Google Talk. With a Spotlight server, you can now search and have the search queries performed at the server, and with TimeMachine Leopard Server can serve as a backup host for TimeMachine clients, and we can control the TimeMachine settings and policy with worker manager for all of your Leopard desktops.

With Open Directory, we've added radius authentication to integrate authentication of AirPort Extreme base stations, and we have a lot of advances is system management, but one key one there is we've completely rewritten the system imaging utility, added automator sport, and enabled us to image, added Bootcamp support as well. So, we've got a lot of updates there, but there are a few more I'd like to highlight, and there are a few innovative services that we've added that are new in Leopard Server, and the first of these is Podcast Producer.

Podcast Producer lets you capture, process, and deliver high quality podcasts automatically with Leopard Server. We have a new app in the client called Podcast Capture, lets you capture video or audio. You can also capture screen recordings with audio, which is great for capturing and turning Keynote presentations into podcasts, or you can take a pre-existing file and submit it. This gets uploaded to the server where it's processed. You can automatically add headers, trailers, layer on titles, watermark images, you can do transitions, and compositions with Quartz Composer, all of this happens automatically, and then the Podcast is published to the web.

You can publish it as podcast, you can stream it, but most importantly you can also publish it automatically to iTunes U, so now in Leopard Server, you can automatically capture high quality podcasts and publish those to iTunes U. So, the next feature we've got going is the iCal server.

iCal and iCal Server provide standards based group calendaring in Leopard and Leopard Server. This is open, you're no longer locked into proprietary system or proprietary client for group calendaring, and we've been working with a standard called CalDav, which is being promoted by the CalConnect organization to enable this.

This is a great standard that's gaining a lot of traction for calendaring, and Apple's been working with them to help promote this over the last 18 months. And we've been working with them, but it's not just us, it's also a host of other major companies and universities have been working to really push the standard forward. Many of these groups are working on applications that work with CalConnect and work with CalDav, and so we see this really taking off and to encourage it as well, we've released the entire source base for the CalDat server on Mac OS Forge.

We've released that as open source, and so now in Leopard, with Leopard Server group calendaring's got all the features you'd expect. Full scheduling, free, busy, availability, everything you'd expect from a group calendar service in Leopard Server. And finally the third product I'd like to highlight is Apple wiki.

Apple Wiki is something that we've been using internally for the past 18 months, actually within the team developing the Leopard Server project. We use wikis quite extensively throughout Apple, and this project is one that has been very beneficial to us as well. It's a great, high quality wiki that's included in Leopard Server. It's got all the features you would expect of a modern web app.

Its dynamic page updates, it's got editable content, no markup language required, and basically, in addition to editing the text and the pages, obviously its rich text, so we have images, media, you can include, embed web widgets, links, you can get full revision history of your content. All of the content is searchable, you can tag all of the content across the wiki, you have RSS feeds of all the content changes across the week, and its calendar events are also integrated into the wiki as well. So, that's the Apple wiki, we've been using it internally, it's been really productive for us in terms of unstructured collaboration within the group.

And in addition, in terms of collaboration, we have another app called Directory App, which ties the directory app in with wiki. Here you can define workers for collaboration, you can also define shared contacts and resources that exist within Open Directory, which are used by both the wiki and calendaring services. So, that's Leopard Server. We have a lot of new features coming. That's also scheduled to ship this fall in October, and we have another session right after this, where we'll be going into a lot more details and demos, so I hope to see you there. Thank you.

( Applause )

Great, thank you. Thanks, Greg. So, that wiki is an amazing product. The Mac OS X Server as a whole, actually this time is just, will blow you away. It has so much innovation in it. It's an incredible product. So, to sum up, the consumerization of IT is not just about cost. Clearly there are cost savings, but that's not the only feature. It's basically changing how IT gets done.

It allows you to bring sort of human quality of information to your clients, to your end users, and throughout your business, and basically give a richer experience. It's also about productivity. It allows you to get things done faster, both entirely inside your IT organization, and also amongst your organization as a whole, your business as a whole.

So, that's our talk. I'd like you to enjoy the rest of the conference. There are over 30 sessions her0e associated with IT, whether it's best practices sessions, some sessions on system management, some sessions on deployment. Importantly, there's over ten labs, including Mac OS X Leopard Server. You can meet the engineers.

There's a four to one ratio of attendees to engineers, so the chance of you being able to bump into an engineer and find out the answers to your questions are very high this year, and there are hands on tutorials, so you can be able to learn a lot more about the technologies that we have.
