WEBVTT

00:00:20.079 --> 00:00:21.169
>> It's early in the morning.

00:00:21.170 --> 00:00:23.700
Most of you were probably having a great time last night.

00:00:23.699 --> 00:00:27.410
So I appreciate that you're coming here just
to relax and not get into anything deep.

00:00:27.410 --> 00:00:31.390
We are not going to cover any major APIs and
you do not have to look at a lot of code.

00:00:31.390 --> 00:00:38.240
We are going to do something a little different in this
session which is cover high level guidelines for how

00:00:38.240 --> 00:00:43.010
to design a great application on Mac OS X, and I'm
going to cover specific things that you need to know

00:00:43.009 --> 00:00:47.159
for designing an application for Leopard.

00:00:49.469 --> 00:00:54.129
We are going to talk about what's new in Leopard
specifically so that you kind of get a sense

00:00:54.130 --> 00:00:58.010
of where things are going and how it affects
your application and what you can do about it.

00:00:58.009 --> 00:01:02.439
I want to talk about how to transition your product from
Tiger to Leopard and give you some insight into that

00:01:02.439 --> 00:01:05.390
if you have an application today that is shipping on Tiger.

00:01:05.390 --> 00:01:12.920
And then we will talk about user-centric design because
while you can do something specific for Leopard,

00:01:12.920 --> 00:01:20.129
if your application isn't structured correctly and
you haven't set things in an intelligent fashion

00:01:20.129 --> 00:01:27.810
and an appropriate fashion for your user base it really
doesn't matter what paint you put on the walls so to speak.

00:01:27.810 --> 00:01:32.379
So we'll cover sort of how to make an application
that is really well designed and it's really sort

00:01:32.379 --> 00:01:36.789
of platform agnostic in many ways in
that regard so we'll get deep into that.

00:01:36.790 --> 00:01:41.500
Then we're going to talk about issues on
Leopard sort of beyond the application window.

00:01:41.500 --> 00:01:47.099
I think the first thing is to sort of set expectations here.

00:01:47.099 --> 00:01:52.979
You are just going to see the tip of the iceberg
in terms of guidelines and tips and tricks

00:01:52.980 --> 00:02:00.310
for creating a great user application experience
and there is no possible way that standing

00:02:00.310 --> 00:02:06.420
up here I could give you everything you need to know
about creating to make the greatest application on earth.

00:02:06.420 --> 00:02:12.550
User experience you know user interface design
is a really difficult thing to do and the long

00:02:12.550 --> 00:02:14.640
and short of it is that it is a really hard to do.

00:02:14.639 --> 00:02:21.689
And I have met with a hundred of developers, probably
close to a thousand developers in my 8 years at Apple

00:02:21.689 --> 00:02:30.900
and in every single case I have take the expertise that I've
got, the understanding and knowledge that we've got at Apple

00:02:30.900 --> 00:02:35.680
and really bring that to bear on each individual situation.

00:02:35.680 --> 00:02:42.760
So each of you has got a product or set of products that
has specific set of features and functionality and that set

00:02:42.759 --> 00:02:47.979
of functionality and features is tuned or
should be tuned for your audience of viewers.

00:02:47.979 --> 00:02:54.039
But what your audience is, is not necessarily
the same audience as someone else's.

00:02:54.039 --> 00:03:00.359
And your functionality and capabilities of
your product are not the same as the next guys.

00:03:00.360 --> 00:03:08.310
So interface design principles have to be
customized and tailored to each individual situation.

00:03:08.310 --> 00:03:11.840
And you know I follow very closely
the conversations on the web

00:03:11.840 --> 00:03:15.259
and I'm on pretty much every HI discussion list out there.

00:03:15.259 --> 00:03:20.269
I'm the main contributor for content
to the interface guidelines at Apple.

00:03:20.270 --> 00:03:27.090
I know that many of you sit out there and go I've
read those and they don't apply to me anymore.

00:03:27.090 --> 00:03:33.400
Well, you might think they don't apply to you because they
are maybe not up-to-date and I take full credit for that.

00:03:33.400 --> 00:03:36.930
We have not done what we need to do in
some areas with the interface guidelines.

00:03:36.930 --> 00:03:44.189
We have some great plans for forth coming and I think
you'll like what you see in a certain period of time.

00:03:44.189 --> 00:03:49.189
But understand that there is a lot of great stuff
at the front of that book in particular relative

00:03:49.189 --> 00:03:55.930
to design principles that is always a good read but
again, has to be tailored to your individual situation.

00:03:55.930 --> 00:04:01.750
So there is no single book in this world, there's no
single presenter that is going to give you all the answers

00:04:01.750 --> 00:04:06.439
that you need and be able to give you everything
you need to create a good user experience on Ten.

00:04:06.439 --> 00:04:08.229
Just to set expectations here.

00:04:08.229 --> 00:04:14.310
But, that being said, we are going to touch, we're going to
see the tip of the iceberg here sort of scratch the surface

00:04:14.310 --> 00:04:17.530
but you are going to get a lot of
great content this session anyway.

00:04:17.529 --> 00:04:23.449
Then I encourage you to come to the HI lab or follow-up
with me after the show and we'll spend some time with you

00:04:23.449 --> 00:04:26.560
and tailor this stuff to your application situation.

00:04:26.560 --> 00:04:28.680
Let's begin in the Leopard desktop.

00:04:28.680 --> 00:04:32.439
You saw this stuff in the keynote and
you saw it in the State of the Union.

00:04:32.439 --> 00:04:36.230
You've seen it in other sessions and probably
installed the beta on your machine by now.

00:04:36.230 --> 00:04:40.689
This is the desktop that you have seen
and that you are interacting with.

00:04:40.689 --> 00:04:42.240
You know it's changed.

00:04:42.240 --> 00:04:43.269
Windows pop.

00:04:43.269 --> 00:04:46.810
It's a very, it's changed in a number of ways.

00:04:46.810 --> 00:04:54.180
It's definitely a step, a natural
evolution in user interface of Mac OS X.

00:04:54.180 --> 00:05:00.000
The question, of course for you, is how is your app
going to fit into this environment on the desktop.

00:05:00.000 --> 00:05:06.120
Well, the simple answer is use standard
controls and windows and don't do customization.

00:05:06.120 --> 00:05:11.420
The apps that are going to have trouble on Leopard,
you know, on the beta right now and the release version

00:05:11.420 --> 00:05:16.490
of Leopard are the applications that have
got customization through and through.

00:05:16.490 --> 00:05:19.430
They do not use a single standard control.

00:05:19.430 --> 00:05:25.569
They've changed help, pop-up menus look, you
know they've done all kinds of customizations

00:05:25.569 --> 00:05:28.089
because they want to stand out to the crowd.

00:05:28.089 --> 00:05:30.189
They want to do something special.

00:05:30.189 --> 00:05:32.569
In most cases that is why people customize.

00:05:32.569 --> 00:05:37.000
In some cases you customize because we didn't give you
the controls that you needed and we understand that.

00:05:37.000 --> 00:05:41.060
We are doing everything we can and I think
you'll like what you hear later on the session

00:05:41.060 --> 00:05:43.220
in terms of what we are providing you in Leopard.

00:05:43.220 --> 00:05:48.670
We probably have more to do and we
continue to solicit your bugs and feedback.

00:05:48.670 --> 00:05:54.400
We'll do our best to give you everything you need in
terms of a widget set, you know controls and UI elements.

00:05:54.399 --> 00:05:59.389
You know a lot of developers customize
for customization sake.

00:05:59.389 --> 00:06:05.279
A lot of people sort of want to skin their
app in order to stand out from the crowd.

00:06:05.279 --> 00:06:08.839
I would say that is not the way to stand out from the crowd.

00:06:08.839 --> 00:06:14.779
That's not the way to get people to acknowledge your
app and use it and sense or feel it's a lot of better.

00:06:14.779 --> 00:06:19.409
Because, a lot of time, skinning an app doesn't
make it better it just makes it look different.

00:06:19.410 --> 00:06:25.870
If you are app is still not reliable and doesn't have a
cohesive user experience, if it doesn't give good feedback

00:06:25.870 --> 00:06:28.639
and status communication and if it's not organized

00:06:28.639 --> 00:06:31.329
and if it doesn't have a good interaction
model then it doesn't matter what it looks

00:06:31.329 --> 00:06:34.009
like it is going to be a dog to use.

00:06:34.009 --> 00:06:40.789
So the way to fit into Mac OS X Leopard is to
use the standard system controls and windows.

00:06:40.790 --> 00:06:43.980
And Leopard makes it easy.

00:06:43.980 --> 00:06:46.840
If you have done that and many of you are on Cocoa today,

00:06:46.839 --> 00:06:52.289
many of you even on Carbon have done standard system
controls and no customizations in terms of windows.

00:06:52.290 --> 00:06:56.819
All of your customization is just inside
your value added window content ad area.

00:06:56.819 --> 00:07:02.349
Your app is going to transition pretty
much in a straight forward manner.

00:07:02.350 --> 00:07:11.240
Tiger windows will automatically adapt, etc. So we've got
the Leopard desktop and I want to point out what's new

00:07:11.240 --> 00:07:12.889
if you haven't paid attention yet this week.

00:07:12.889 --> 00:07:16.889
There is a new menu bar you've see, got lots
of feedback about already into my inbox.

00:07:16.889 --> 00:07:18.769
People have stopped me in the halls.

00:07:18.769 --> 00:07:23.680
You know, keep using it, keep playing around with it
and give us feedback we would love to hear from you.

00:07:23.680 --> 00:07:28.759
And by the way, there is a great feedback forum on
Friday afternoon at 3:30 Mac OS X user experience forum.

00:07:28.759 --> 00:07:30.029
We'd love to have you there.

00:07:30.029 --> 00:07:35.659
We look forward to your feedback there and of course
we encourage you to log bugs at bugreporter.com.

00:07:35.660 --> 00:07:38.110
What else has changed?

00:07:38.110 --> 00:07:42.600
Well, we have a new inactive secondary window appearance.

00:07:42.600 --> 00:07:46.320
So may be difficult to see on the projector here

00:07:46.319 --> 00:07:49.800
but if you have been running the beta you can
tell there is a big difference between windows

00:07:49.800 --> 00:07:53.610
that are active now versus windows that are inactive, right.

00:07:53.610 --> 00:08:01.090
So real active windows, the new doc on this on this slide.

00:08:01.089 --> 00:08:08.019
So active windows, the active primary window,
pops up from the screen and that's mainly

00:08:08.019 --> 00:08:11.589
because we've got this heavy shadow on it.

00:08:11.589 --> 00:08:15.310
A larger shadow on the window that really
sets it out in front of everybody else.

00:08:15.310 --> 00:08:19.870
There is a lot more depth to the Leopard
desktop than there was previously on Tiger

00:08:19.870 --> 00:08:22.250
or any earlier revision of the Mac OS X.

00:08:22.250 --> 00:08:24.500
And that is really going to be key for usability.

00:08:24.500 --> 00:08:30.399
I think the usability for users knowing which window is
active versus which windows are inactive is really key

00:08:30.399 --> 00:08:37.059
for them knowing what's going on and hopefully for
all of us it will solve some of the usability issues

00:08:37.059 --> 00:08:39.699
that we may have experienced in that past.

00:08:39.700 --> 00:08:42.340
So that's the desktop, you've all seen
it and all been interacting with it.

00:08:42.340 --> 00:08:47.790
Let's all dig deeper into what's
changed on the window level in Leopard.

00:08:47.789 --> 00:08:48.750
So there's a new window look.

00:08:48.750 --> 00:08:50.100
It's called the unified look.

00:08:50.100 --> 00:08:51.700
We've unified tool bar and title bar.

00:08:51.700 --> 00:08:55.210
There is no longer lineation between the
title bar of the window and tool bar.

00:08:55.210 --> 00:08:57.759
It's just a smooth sort of finish there.

00:08:57.759 --> 00:08:59.360
We've got no side margins.

00:08:59.360 --> 00:09:03.740
There is a bottom bar there now which is available to
you as developers and you can take advantage into that.

00:09:03.740 --> 00:09:08.299
There are new controls in Leopard and we've
got more standard images in the system

00:09:08.299 --> 00:09:10.169
that are available for you to use as well.

00:09:10.169 --> 00:09:13.009
Let's go through all of these.

00:09:13.009 --> 00:09:19.429
In Tiger we had a textured window appearance, we had
the, what was called textured in appearance in Tiger.

00:09:19.429 --> 00:09:23.419
So that window type it had rounded
corners that you are familiar with.

00:09:23.419 --> 00:09:29.209
It's got the appearance here but what's going
on here is that we've got custom controls used

00:09:29.210 --> 00:09:31.320
in the toolbar and they weren't available to use.

00:09:31.320 --> 00:09:35.050
So if you want to use this you
have to customize things yourself.

00:09:35.049 --> 00:09:36.740
We had the metal appearance.

00:09:36.740 --> 00:09:41.810
We've gotten lots of feedback over
the years about the metal.

00:09:41.809 --> 00:09:47.509
Side margins in this type of a
window, we had Tiger splitters.

00:09:47.509 --> 00:09:50.189
So the splitter views between different views.

00:09:50.190 --> 00:09:57.170
Probably the biggest issue here was that across the system
I think there were about seven different splitter views.

00:09:57.169 --> 00:09:58.799
Carbon had a different set.

00:09:58.799 --> 00:10:03.479
Then Cocoa did, and even within the individual
frameworks there were different variants,

00:10:03.480 --> 00:10:05.269
and then developers were doing their own version.

00:10:05.269 --> 00:10:10.379
So across the system, if you just sort of took a random
selection of multiple applications there was a lot

00:10:10.379 --> 00:10:13.360
of variation in terms of Window splitters.

00:10:13.360 --> 00:10:18.800
And then there's a bottom bar in this particular
window, this metal window, and it had custom controls,

00:10:18.799 --> 00:10:23.990
custom buttons, and you all saw these first
in iTunes way, way back, and you know,

00:10:23.990 --> 00:10:26.299
I got lots of feedback around, hey, how do I do that?

00:10:26.299 --> 00:10:29.500
Well the answer was, you can't,
you need to do this on your own.

00:10:29.500 --> 00:10:36.879
And so that was sort of the situation in Tiger, but
if we transition to Leopard, I won't bounce back

00:10:36.879 --> 00:10:41.299
and forth between the slides, but on your own
machine, just pay attention, just look at the corners,

00:10:41.299 --> 00:10:46.250
the corners are tighter, they're smaller, they're
a little bit, it's a little bit of a square window,

00:10:46.250 --> 00:10:49.669
but it just kind of brings it in
and we've got other changes on here.

00:10:49.669 --> 00:10:53.399
So we've got Leopard tool bar controls
that are available to you

00:10:53.399 --> 00:10:56.990
so you can do this exact same appearance
on your applications.

00:10:56.990 --> 00:11:01.500
We've got the unified title toolbar so there's
no delineated line, as I was saying before.

00:11:01.500 --> 00:11:07.830
There's no more margins on Windows, that's the design
pattern that we'd like to see in lots of applications,

00:11:07.830 --> 00:11:12.509
although you're welcome to put a margin there but the
tendency within Leopard is we're removing those margins.

00:11:12.509 --> 00:11:17.899
We have a Leopard zero with splitter, so between
views the mouse is going to roll over these splitters,

00:11:17.899 --> 00:11:21.319
standard between carbon and cocoa, high level toolbox app.

00:11:21.320 --> 00:11:26.660
kit and they're now a single pixel wide and the mouse,
the cursor's, going to change over top and you're going

00:11:26.659 --> 00:11:30.600
to get a consistent experience between
all applications with splitters.

00:11:30.600 --> 00:11:35.790
And lastly, you've got a button bar at the
bottom with Leopard button bar controls,

00:11:35.789 --> 00:11:38.110
which are the same ones that you use in toolbars.

00:11:38.110 --> 00:11:42.009
So again, you've got access to all of these,
you can do exactly the same appearance

00:11:42.009 --> 00:11:45.470
and be completely consistent with
everything else in the system.

00:11:46.509 --> 00:11:53.919
Okay, here's the Finder in Tiger, and we had, you know,
you've got the sidebar, the shelf on the left there,

00:11:53.919 --> 00:11:57.779
you've got the wide splitter custom
controls and the toolbar, the whole thing.

00:11:57.779 --> 00:12:05.589
The Leopard finder window is tighter, we've got a source
list on the left, which I'll talk about a little later,

00:12:05.590 --> 00:12:09.910
how to do source lists, when to use them,
that sort of thing, we've got live, you know,

00:12:09.909 --> 00:12:14.129
the thumbnails that have got the actual images in
them, the content for the file using quick look.

00:12:14.129 --> 00:12:18.879
So all of this is just a lot more, it's
tighter and it's giving you more information,

00:12:18.879 --> 00:12:22.460
and it's more consistent across the system.

00:12:22.460 --> 00:12:28.180
Safari and Tiger, same thing, you know,
the Tiger window-type metal appearance,

00:12:28.179 --> 00:12:35.379
custom window controls in the top in the toolbar,
and in Leopard this transitions, not a lot of change,

00:12:35.379 --> 00:12:38.620
pretty much the same thing, just
now it's got the unified look

00:12:38.620 --> 00:12:42.070
and it's using the standard system
controls that you can get access to as well.

00:12:42.070 --> 00:12:43.700
Let's look at iTunes.

00:12:43.700 --> 00:12:45.360
No, sorry, Calculator in Tiger.

00:12:45.360 --> 00:12:48.800
Calculator in Tiger, pay attention to the
corners if you're interested in little,

00:12:48.799 --> 00:12:50.829
little details like how we change things.

00:12:50.830 --> 00:12:58.180
This is the calculator in Tiger, we transitioned to
Leopard and it's just a slightly smaller corner curve

00:12:58.179 --> 00:13:04.000
and the whole window has the Leopard appearance to it.

00:13:04.000 --> 00:13:05.960
Here's iTunes.

00:13:05.960 --> 00:13:09.110
So iTunes went through some changed in Leopard as well.

00:13:09.110 --> 00:13:18.550
Okay, now pay attention, look very carefully at the
changes that are going to occur between this Tiger window

00:13:18.549 --> 00:13:21.599
and iTunes and the Leopard iTunes window, okay?

00:13:21.600 --> 00:13:24.779
Are you ready?

00:13:24.779 --> 00:13:29.819
Did you notice anything?

00:13:31.129 --> 00:13:45.309
Yeah, you didn't notice anything
because not much has changed.

00:13:45.309 --> 00:13:47.029
So, I'll just help you out here.

00:13:47.029 --> 00:13:50.789
Watch the blue circles, what happens
inside the blue circles.

00:13:50.789 --> 00:13:52.289
That's it.

00:13:52.289 --> 00:13:57.819
So, a big part of the appearance of Leopard, in terms
of the unified window look and the control style

00:13:57.820 --> 00:14:02.200
and everything has been informed heavily by what
we did with iTunes over the last couple years.

00:14:02.200 --> 00:14:07.350
And you saw lots of changes going on in iTunes and of
course, there was lots of feedback in the community

00:14:07.350 --> 00:14:11.860
around well, what's Apple doing with iTunes and why
isn't it like the rest of the system, and you know,

00:14:11.860 --> 00:14:17.450
in many ways we were sort of testing the waters
with iTunes, seeing what worked, what didn't work

00:14:17.450 --> 00:14:21.890
and what the community felt about it and I think that
definitely carried forward to what we've done on Leopard,

00:14:21.889 --> 00:14:26.539
as you can see, not a lot of changes there.

00:14:26.539 --> 00:14:31.689
Okay, so new window look, unified toolbar
controls available to you, and etcetera.

00:14:31.690 --> 00:14:35.280
And there's nothing you need to do.

00:14:35.279 --> 00:14:40.000
If you're well behaved today in the sense that you've
used standard system controls and you've just standardized

00:14:40.000 --> 00:14:42.950
on windows and you've got minimal
customization, carbon and app.

00:14:42.950 --> 00:14:46.040
kit are going to do the right thing for
you and your application should transition

00:14:46.039 --> 00:14:50.029
without a lot of difficulty over to Leopard.

00:14:50.029 --> 00:14:52.549
Now let's get even deeper here.

00:14:52.549 --> 00:14:56.229
So in Leopard there's only one window type.

00:14:56.230 --> 00:14:58.129
Now, we're talking about document windows, right?

00:14:58.129 --> 00:15:04.659
You've still got dialog boxes and you've got sheets and that
type of thing and those haven't really changed from Tiger

00:15:04.659 --> 00:15:10.129
to Leopard in any big way, but the window
area's where we really wanted to work hard

00:15:10.129 --> 00:15:11.980
to get a lot of consistency for the system.

00:15:11.980 --> 00:15:19.279
So in Leopard there's one window and it has some options,
some accessories you can put on it and it can be with

00:15:19.279 --> 00:15:23.459
or without a toolbar, with or without a bottom bar.

00:15:23.460 --> 00:15:29.950
So, here's a one window without a bottom bar, it's
just the title bar of the window, it's just got a view.

00:15:29.950 --> 00:15:33.840
This is the kind of thing you'd see in
like Text, Edit kind of thing, right?

00:15:33.840 --> 00:15:36.940
This same window can have a toolbar.

00:15:36.940 --> 00:15:41.990
So this is the standard window without a tool
bar, with a tool bar, no bottom bar on each,

00:15:41.990 --> 00:15:46.639
they're both resizable, very, very clean design.

00:15:46.639 --> 00:15:53.240
Or you can have this same window appearance
with a bottom bar, but no toolbar.

00:15:54.259 --> 00:15:57.240
Or, you can have it with a toolbar and a bottom bar.

00:15:57.240 --> 00:15:58.740
And that's it.

00:15:58.740 --> 00:16:01.250
That's the window appearance in Leopard.

00:16:01.250 --> 00:16:06.490
So your application, as a designer, you know, you need to
know as a programmer/designer, you need to figure out, okay,

00:16:06.490 --> 00:16:09.100
what am I going to do, do I need a bottom
bar, why would I have a bottom bar?

00:16:09.100 --> 00:16:11.310
And we're going to cover all of that in a few moments here.

00:16:11.309 --> 00:16:15.279
Just want to drive home the point that
there aren't multiple types of windows.

00:16:15.279 --> 00:16:22.019
There isn't a textured and a metal something or other,
and a non-metal, there's only one window type in Leopard,

00:16:22.019 --> 00:16:26.569
you can have a toolbar, you can have no toolbar, you
can have a bottom bar, you can have no bottom bar.

00:16:26.570 --> 00:16:31.640
Okay, how do you create on of these in
Leopard on the builds that you've got now?

00:16:31.639 --> 00:16:39.340
Well, in interface builder you drag out a
textured window from right here in the palette

00:16:39.340 --> 00:16:43.560
and you drop it right on the window that's there.

00:16:43.559 --> 00:16:50.189
And if you want to leave space, if you add a view within
that window, you can, if you leave space at the bottom,

00:16:50.190 --> 00:16:56.260
you can get the bottom bar that you need if that's
interesting to you, if it's useful in your application.

00:16:57.370 --> 00:17:03.590
So, here we can take this view, which is just
standard window with a bottom bar but no toolbar,

00:17:03.590 --> 00:17:06.769
and you can drag in from interface builder a toolbar.

00:17:06.769 --> 00:17:13.289
And now you've got one window type
with a toolbar and a bottom bar.

00:17:13.289 --> 00:17:14.930
Straight forward in interface builder.

00:17:14.930 --> 00:17:22.370
And by the way, just in case you wonder how we do
calculator, calculator just the one window type

00:17:22.369 --> 00:17:28.729
without any kind of a main content area view that
would give the white coloration that you would see

00:17:28.730 --> 00:17:33.599
in like a word processor, you know, there's no lists in
there or nothing, it's just the background, the window type,

00:17:33.599 --> 00:17:43.899
with the gradient fill and then it's got the standard
toolbar, or button bar controls, on top of it.

00:17:43.900 --> 00:17:48.690
Okay, so that's the window type, now let's
drill down into the components of a window.

00:17:48.690 --> 00:17:50.820
So each window's made up of three parts.

00:17:50.819 --> 00:17:55.389
We've got the toolbar at top, toolbar,
title bar, we've got the content area

00:17:55.390 --> 00:17:57.770
which is the part that you have the most control over.

00:17:57.769 --> 00:18:01.879
I mean, you have control over the toolbar and the bottom
bar as well, but the content area's where really the magic

00:18:01.880 --> 00:18:07.820
of your application occurs in a big way, and
then of course, we've got the bottom bar here.

00:18:10.150 --> 00:18:13.019
So let's talk about the toolbar.

00:18:13.019 --> 00:18:19.420
So, toolbars in Leopard have a unified
appearance, they are connected with the title bar

00:18:19.420 --> 00:18:24.470
and there's some elements here that you need to be aware of.

00:18:24.470 --> 00:18:29.980
There's certain things that you cannot change, there's
the title bar, the unified look that you can not change,

00:18:29.980 --> 00:18:33.860
it's got the Leopard gradient, that's nothing that
you can change, we've got the hide/show button

00:18:33.859 --> 00:18:38.869
on the far right side, we've got the close/minimize/zoom
buttons, you have some control over those obviously,

00:18:38.869 --> 00:18:44.239
that's not changed, but these are things that the
system provides and it's part of the window appearance.

00:18:44.240 --> 00:18:56.470
The things that you can do is that you can add
things like search fields and the toolbar controls.

00:18:56.470 --> 00:19:01.990
So, as I was telling you before, the appearance
of controls and toolbars is available to you,

00:19:01.990 --> 00:19:05.170
these widgets are available to you,
and they're called Leopard buttons.

00:19:05.170 --> 00:19:10.500
We tried to come up with creative names and,
basically, we decided no, they're just Leopard buttons.

00:19:10.500 --> 00:19:12.440
Search fields are provided in app.

00:19:12.440 --> 00:19:17.769
kit as well as they're available to you, and
so, we recommend that they go on the right side,

00:19:17.769 --> 00:19:23.240
just for visual balance, and we'll get into visual
balance discussions later on in the session.

00:19:23.240 --> 00:19:29.099
Just in case you care, and you follow some of this
trivia, what we called Tiger textured buttons in some

00:19:29.099 --> 00:19:33.579
of the headers are referred to textured
in the constant names and stuff,

00:19:33.579 --> 00:19:38.480
that's really referred to now in
Leopard as rectangular style, okay?

00:19:38.480 --> 00:19:42.650
All right, so, let's talk about toolbar control behavior.

00:19:42.650 --> 00:19:47.180
We just looked at what a toolbar can look like, now what
do you stick up there and how are they supposed to behave?

00:19:47.180 --> 00:19:52.299
Well, let's pop this one out and go
through each one of these controls.

00:19:52.299 --> 00:19:58.500
So, here on the left you've got the
segment control, segmented Leopard control,

00:19:58.500 --> 00:20:01.380
you can have these segment control can be a single segment,

00:20:01.380 --> 00:20:04.680
in which case it's a single button,
or it can be multiple segments.

00:20:04.680 --> 00:20:11.509
So here we've got two and these operate as a button toggle,
they basically operate as a set of radio buttons, right?

00:20:11.509 --> 00:20:17.710
They go down and they're mutually exclusive,
you click one or the other kind of thing.

00:20:17.710 --> 00:20:23.730
In this case, we've got the same control, it's called
the Leopard toolbar segment control, it's got a force,

00:20:23.730 --> 00:20:30.599
it's a four segment version, and these work like
checkboxes, they maintain state, they stay down and, sorry,

00:20:30.599 --> 00:20:35.279
in this case they work like radio buttons because you're
choosing one view or other, but they do stay down,

00:20:35.279 --> 00:20:41.210
they maintain state and they show you which
one is selected until another one is selected.

00:20:41.210 --> 00:20:46.579
So you have radio button behavior, you have checkbox
behavior, and you have standard pushbutton behavior

00:20:46.579 --> 00:20:50.619
with the Leopard rectangular toolbar segment control.

00:20:50.619 --> 00:20:55.359
Here's the same thing, one segment, but
it's behaving as single push button.

00:20:55.359 --> 00:20:59.729
You click it and it does something immediately,
it doesn't stay down, it pops up immediately.

00:20:59.730 --> 00:21:04.860
And here's the same thing, one segment, but
it has a pop up window associated with it,

00:21:04.859 --> 00:21:11.619
so if you use this standard control, you can pretty
much simulate any widget scenario that you need,

00:21:11.619 --> 00:21:16.519
you can do pop up menus, push buttons,
multi-segmented controls that act as push buttons,

00:21:16.519 --> 00:21:21.450
that act as radio buttons, check boxes, whatever behavior
you want, you set it all up in IB, or programmatically,

00:21:21.450 --> 00:21:26.360
of course through the API's, and you can get
all of this behavior with the same control.

00:21:28.450 --> 00:21:35.009
There's another control available to you for toolbars
in Leopard, it's the capsule toolbar segment control.

00:21:35.009 --> 00:21:37.690
So rectangular, capsule.

00:21:37.690 --> 00:21:40.100
Let's pop this thing out and look at it.

00:21:40.099 --> 00:21:46.909
This is what you're familiar with in mail, this is now
available to you as a developer to put in your application.

00:21:46.910 --> 00:21:53.529
So this works similar to the rectangular control, here's
a set of two, you determine how many segments you want,

00:21:53.529 --> 00:21:56.619
you can have a single one, you
can have multiple segments, here,

00:21:56.619 --> 00:22:04.899
this set of this two segment version works
as a toggle, so they flip off and on.

00:22:04.900 --> 00:22:10.009
This set is a segment as well, these are
just individual buttons that you would push.

00:22:10.009 --> 00:22:17.039
In fact, I think in every case on this, in every one of
these instances, these are all push buttons now that I think

00:22:17.039 --> 00:22:23.019
about it, but you've got it multi-segmented so you can
group them together and say all of these controls relate

00:22:23.019 --> 00:22:27.549
to navigation, or these other two
related to grouping items, or something,

00:22:27.549 --> 00:22:30.549
but with the capsule button you can group them together.

00:22:30.549 --> 00:22:32.359
Now what about other toolbar controls?

00:22:32.359 --> 00:22:38.109
Well, here's a toolbar that I created and you can't do this.

00:22:38.109 --> 00:22:43.129
You can't use a standard aqua control in
toolbars in Leopard, that's our guidance.

00:22:43.130 --> 00:22:51.750
So you can't do a standard translucent,
standard aqua push button in a Leopard toolbar.

00:22:51.750 --> 00:22:54.980
You can do icons on the background, the unified background.

00:22:54.980 --> 00:22:59.539
It looks great, there's applications out there
today that we ran, we took some, you know,

00:22:59.539 --> 00:23:03.379
I download lots of applications, people send
me lots of apps for the App Design Awards,

00:23:03.380 --> 00:23:08.470
we ran a whole raft of the App Design Award
submissions against the Leopard beta build

00:23:08.470 --> 00:23:11.180
and most of them just transitioned without an issue.

00:23:11.180 --> 00:23:17.600
And for many of them that had just icons on the toolbar
background, in Tiger it looked great on Leopard.

00:23:17.599 --> 00:23:19.949
So that's cool, you can do that.

00:23:19.950 --> 00:23:26.309
So use only Leopard rectangular or
capsule toolbar controls in your toolbars.

00:23:26.309 --> 00:23:33.649
I know this is a little bit minutia and we're kind of
plodding through here, but we need to just communicate this

00:23:33.650 --> 00:23:39.790
to you so just bear with me for a few minutes and then we'll
get real exciting and get into design techniques and stuff.

00:23:39.789 --> 00:23:42.609
So how do you design your toolbar appearance?

00:23:42.609 --> 00:23:48.029
You want to make sure that you are using system provided
icons when possible, we've opened up a lot more imagery

00:23:48.029 --> 00:23:54.440
for you, so we encourage you to look through the system, use
what's available to you inside the system, but, of course,

00:23:54.440 --> 00:24:00.920
work with folks like icon factory and lots of other
companies, Iconizer, etcetera, who do great icon design,

00:24:00.920 --> 00:24:04.720
and, of course, get them to do custom icons
for your application if you need them.

00:24:04.720 --> 00:24:12.230
For example, a standard image that's in the system would
be the gear that's on the action menu and you should use

00:24:12.230 --> 00:24:17.720
that for your action menus rather than
something else, a customized version of the gear.

00:24:17.720 --> 00:24:21.900
Create icons using familiar shapes and real world metaphors.

00:24:21.900 --> 00:24:27.750
So, if you work with a design agency like I mentioned, or
other ones, typically visual designers understand this,

00:24:27.750 --> 00:24:30.779
they're going to get it right, don't do
this yourself if you're a programmer.

00:24:30.779 --> 00:24:35.649
You shouldn't be designing icons for your application,
leave that up to folks who understand visual design,

00:24:35.650 --> 00:24:42.230
who understand what it means to represent a concept, or a
task, as an icon, because otherwise you end up with some

00:24:42.230 --> 00:24:46.299
of the disasters that we'll see in a few moments.

00:24:46.299 --> 00:24:52.309
And by default, your application should display
icons, have your app launch for the very first time

00:24:52.309 --> 00:25:00.720
with the regular sized labels and toolbar controls,
don't came up with no labels under your icons,

00:25:00.720 --> 00:25:08.470
teeny tiny little icons in the toolbar, on top of teeny
tiny little buttons, make sure that for the first time user

00:25:08.470 --> 00:25:14.019
of your application that they can immediately see,
oh there's grouping of functionality in my toolbar,

00:25:14.019 --> 00:25:18.019
we're going to talk about that in a few minutes,
and they can read the labels and all of that stuff.

00:25:18.019 --> 00:25:24.859
Make sure that your default appearance is something that's
very, it presents a lot of information to new users.

00:25:24.859 --> 00:25:27.959
Once users get up to speed they can
customize the toolbar and go off

00:25:27.960 --> 00:25:30.809
and do their own thing, whatever customization they want.

00:25:30.809 --> 00:25:36.970
Here I've got an example of the keynote toolbar, and you
see there's some really great grouping going on here,

00:25:36.970 --> 00:25:42.589
there's some standardized imagery in the right side, if
you're going to do an inspector, pick up the standard eye,

00:25:42.589 --> 00:25:44.449
the blue eye, that says that's inspector.

00:25:44.450 --> 00:25:48.630
If everybody does that then every app on Mac OS
10, users will know that if they hit that button

00:25:48.630 --> 00:25:51.380
in the toolbar they get some sort of inspector.

00:25:51.380 --> 00:25:57.590
Same thing with fonts, bring up the fonts panel with
the slightly italicized A, bring up the color panel

00:25:57.589 --> 00:26:00.240
with the color wheel there, with the same label.

00:26:00.240 --> 00:26:06.470
Use the same labels, use the same icons, let's get
some consistency there across all apps on the platform

00:26:06.470 --> 00:26:11.509
and it'll really be a boon to the platform,
in terms of users knowing what to do

00:26:11.509 --> 00:26:15.740
and having standard expectations inside
of any application that they're in.

00:26:15.740 --> 00:26:26.029
There's some other icons here that are not, sort of, system
used, or used system wide, but they are pretty generic

00:26:26.029 --> 00:26:30.079
so they are appropriate to be used in other
applications that sort of do the same thing.

00:26:30.079 --> 00:26:35.849
For example, adding a comment in
keynote with a little sticky note icon,

00:26:35.849 --> 00:26:40.009
that's a great icon to use for that type of functionality.

00:26:40.009 --> 00:26:46.269
A common question that I get at Apple all the
time is, somebody will send me a screen shot,

00:26:46.269 --> 00:26:53.569
or a portion of a toolbar from mail or from finder or
whatever, and they'll say, hey can I use the some such icon

00:26:53.569 --> 00:26:57.009
from this or that app that's shipped by Apple?

00:26:57.009 --> 00:27:03.710
And you know, in some cases it's an easy answer, it's like
sure, no problem, that's just a generic delete symbol,

00:27:03.710 --> 00:27:07.230
it's just delete mail, or delete
an item or something like that.

00:27:07.230 --> 00:27:14.349
In other cases, it's an icon that has a particular
place and has a particular meaning inside

00:27:14.349 --> 00:27:16.869
of a particular application on the platform.

00:27:16.869 --> 00:27:21.879
At the moment I'm drawing a blank and I should have had a
slide for you for this, but if you look around the system,

00:27:21.880 --> 00:27:27.300
ask yourself if you have this question about which icon you
can use, look at the icon you want to use from the system

00:27:27.299 --> 00:27:35.289
and decide, and figure out for yourself, whether this
icon has a particular meaning inside of this app,

00:27:35.289 --> 00:27:37.569
does it mean one thing inside of this app?

00:27:37.569 --> 00:27:40.609
And it wouldn't mean the same thing somewhere else.

00:27:40.609 --> 00:27:44.169
So, for example, and I just thought
of one, which is the home icon.

00:27:44.170 --> 00:27:51.560
A home icon inside of finder in the past, you know,
was a little house with the roof and whatever,

00:27:51.559 --> 00:27:55.789
that meant go to the home user's, to the
current logged in user's home directory,

00:27:55.789 --> 00:28:01.750
and that icon means that in the Finder, so taking that
icon and putting it somewhere else and using it to go

00:28:01.750 --> 00:28:12.390
to your base web page, or going back to the front of
your app, it's overriding the meaning of that icon.

00:28:12.390 --> 00:28:19.920
But there are other icons, kind of like a no smoking
sign, or a plus, minus that are generic, they mean add,

00:28:19.920 --> 00:28:26.460
delete or add, remove and in the context of where, you
know, they mean the same thing regardless of where they sit

00:28:26.460 --> 00:28:30.430
as long as they are near a list where you are adding
items or they're near a view where you've got, you know,

00:28:30.430 --> 00:28:34.330
you add things and delete things,
they make sense in that context.

00:28:34.329 --> 00:28:38.990
So certain icons work and they're generic and you can
move them around as long as they do the same behavior.

00:28:38.990 --> 00:28:43.640
Add should always add something,
delete should always delete something.

00:28:43.640 --> 00:28:46.170
Enough on that.

00:28:46.170 --> 00:28:50.910
So how do you decide what to include in your toolbar?

00:28:50.910 --> 00:28:56.710
You now know what the appearance is, you can use rectangular
Leopard control, you can use the capsule control,

00:28:56.710 --> 00:29:00.870
you can use icons in the background,
you shouldn't use standard aqua, right?

00:29:00.869 --> 00:29:03.769
How do you decide what to put in your toolbar?

00:29:03.769 --> 00:29:11.410
Well, clearly some people have problems with this, and
other people kind of get it, but the main thing is,

00:29:11.410 --> 00:29:18.500
you always want to think about putting things in your
toolbar relative to the frequency of use by the user.

00:29:18.500 --> 00:29:21.980
So if there's something that you want the
user, that the user's going to do all the time,

00:29:21.980 --> 00:29:30.430
you want to give them a shortcut in your primary UI, and
the top of the window is primary placement for things.

00:29:30.430 --> 00:29:36.509
Same thing for a webpage, if you're designing a website,
you put important navigation stuff at the top of the page,

00:29:36.509 --> 00:29:40.589
because that's sort of the first
place people look, in a sense.

00:29:40.589 --> 00:29:47.529
People don't always read from top left to bottom right,
but it's a good rule of thumb to remember that guidance,

00:29:47.529 --> 00:29:52.299
which is, top of the window, most significant
stuff, towards the bottom of a page,

00:29:52.299 --> 00:29:55.549
towards the bottom of an application
window, you do sort of secondary,

00:29:55.549 --> 00:30:01.720
tertiary functionality, and then you know, frequency of use.

00:30:01.720 --> 00:30:05.890
Think about whether the command you want to
create an icon for and put in the toolbar,

00:30:05.890 --> 00:30:12.259
is it global to your application, or is it specific
to a particular portion, or a particular view,

00:30:12.259 --> 00:30:16.430
elements on the window, or particular
a mode of the application?

00:30:16.430 --> 00:30:25.019
And, so, what you'll see in some applications is, you'll
have a toolbar, which is perfect because all the commands

00:30:25.019 --> 00:30:30.519
in the toolbar are sort of global in nature, and
then you might switch into a certain mode of the app.

00:30:30.519 --> 00:30:33.589
So, for example, the other night, and I
don't know if this is exactly the case,

00:30:33.589 --> 00:30:38.049
but in the Apple Design Awards I demoed Coda
from Panic, great application by the way,

00:30:38.049 --> 00:30:47.990
and congratulations to those guys, but Coda has these sort
of modes, your either in edit mode, or in CSS editing,

00:30:47.990 --> 00:30:53.359
style sheet editing, or you're in terminal mode, or books,
and it's great because those modes are up in the toolbar,

00:30:53.359 --> 00:30:57.899
they're global to the application and
then when you choose one of those modes,

00:30:57.900 --> 00:31:05.160
further down the window you've got a secondary toolbar
that has functionality, looks kind of like a toolbar,

00:31:05.160 --> 00:31:09.490
it's got functionality for that mode specifically,
so it's sort of progressive revelation.

00:31:09.490 --> 00:31:14.559
You've got this global stuff as users decide the mode,
or they do something, now the app changes its state

00:31:14.559 --> 00:31:17.579
and then you offer users more capabilities.

00:31:17.579 --> 00:31:26.639
You used to see this in iPhoto, as well, where you had the
secondary toolbar and remember, way back you had import,

00:31:26.640 --> 00:31:30.390
organize, edit, share kind of thing,
then if you were in those modes,

00:31:30.390 --> 00:31:33.980
share then you could create a coffee
table book, it's that kind of an idea,

00:31:33.980 --> 00:31:37.250
where as you drill down in different
modes you show different UI.

00:31:37.250 --> 00:31:39.630
So not everything belongs in a toolbar.

00:31:39.630 --> 00:31:49.220
Don't put view zooming controls in the main toolbar of
the app if the view isn't always on the main window,

00:31:49.220 --> 00:31:53.759
or if it's not something users
do a lot of, or very frequently.

00:31:53.759 --> 00:31:57.539
Maybe it belongs below the view, and
we'll talk more about that later.

00:31:57.539 --> 00:32:02.589
Avoid creating a toolbar item for
every menu command in your application.

00:32:02.589 --> 00:32:10.399
However, make sure that you've got a menu command
for every toolbar item, because you can hide toolbars

00:32:10.400 --> 00:32:17.880
and if you only have functionality exposed in your toolbar,
and you don't have equivalent commands for those icons,

00:32:17.880 --> 00:32:22.630
what happens when the user clicks the top right
corner of the screen and they hide the toolbar?

00:32:22.630 --> 00:32:26.690
Now they can't get at the functionality
that was exposed through your toolbar.

00:32:26.690 --> 00:32:29.789
It happens a lot, trust me, I look at lots of apps.

00:32:29.789 --> 00:32:36.250
And the main thing here is, and we'll talk about user mental
model in a few moments, but the things you want to put

00:32:36.250 --> 00:32:44.819
in your toolbar should directly relate to the primary
tasks and key objects that the user has in mind

00:32:44.819 --> 00:32:49.139
as they approach the task that your application solves.

00:32:49.140 --> 00:32:55.130
This is true for web pages as well, if you're designing
a website, a web based application, you want to show,

00:32:55.130 --> 00:33:01.170
you know, you want to put controls and things
in the menu eye that relate to the primary tasks

00:33:01.170 --> 00:33:04.330
and key objects that the user's thinking about.

00:33:04.329 --> 00:33:09.429
Remember, you're designing an application
for your users and you are not your user.

00:33:09.430 --> 00:33:15.519
Even if you've just been, you've moved out of industry and
decided you were a fantastic scientist and now you're going

00:33:15.519 --> 00:33:22.889
to write the best science app on the platform, you are
no longer a scientist, you're a scientist programmer

00:33:22.890 --> 00:33:29.580
and you've started to write code and now it's too easy for
your to express the architecture of your code in the UI,

00:33:29.579 --> 00:33:33.439
and I can't tell you how many times
I sit down with companies

00:33:33.440 --> 00:33:37.470
and people show me their app and
it's not designed for the user.

00:33:37.470 --> 00:33:43.990
There's too many cases where the structure
of the code, the hierarchy of the classes,

00:33:43.990 --> 00:33:49.339
and the objects inside of the code is expressed
in the UI, and it's the wrong way to go about it.

00:33:49.339 --> 00:33:56.849
What you want to do is come up with a UI, which is
user centric in nature, and then you want to take that

00:33:56.849 --> 00:34:01.659
and have that inform the architecture of your code.

00:34:01.660 --> 00:34:04.590
And avoid contextual menus in toolbars.

00:34:04.589 --> 00:34:10.889
Don't hide functionality in some
contextual menu for a toolbar item.

00:34:13.480 --> 00:34:23.449
For one thing, very, very few users understand contextual
menus, it's typically sophisticated users and frequent users

00:34:23.449 --> 00:34:28.460
who are on the computer constantly, who once they've seen a
contextual menu, they get it and they look for it elsewhere,

00:34:28.460 --> 00:34:33.329
but the majority of users do not know what
contextual menus are and how to use them.

00:34:34.750 --> 00:34:40.250
Here's a toolbar, and I'll just finish the designing
a toolbar thing, here's a couple of principals,

00:34:40.250 --> 00:34:44.530
again these are principals, they're
not hard and fast rules, okay?

00:34:44.530 --> 00:34:49.640
They're guidelines and we provide these
guidelines to you because you're busy writing code,

00:34:49.639 --> 00:34:54.929
you don't all have interface designers in your companies,
so that's what the interface guidelines document is about.

00:34:54.929 --> 00:35:01.089
It's to provide you with something, some kind of guidance,
so that if you don't have anyone else that you can refer

00:35:01.090 --> 00:35:02.900
to you can look at the interface guidelines.

00:35:02.900 --> 00:35:07.139
But here's a set of guidelines for designing a toolbar.

00:35:07.139 --> 00:35:13.690
From left to right you want to group your items by default
because users can customize things their own way, of course,

00:35:13.690 --> 00:35:19.369
but by default, present the UI that has things
grouped this way, which is more frequently used items

00:35:19.369 --> 00:35:25.489
on the left, less frequently used items on the right.

00:35:25.489 --> 00:35:31.029
So if you think about Keynote, in this case, I don't
know if this page is keynote, I can't remember, anyway,

00:35:31.030 --> 00:35:35.750
on the right side you don't always click the
fonts panel, you don't always open it up,

00:35:35.750 --> 00:35:39.170
you actually create slides a lot
more often, actually it's keynote,

00:35:39.170 --> 00:35:42.300
you create slides a lot more often
than you would open the fonts panel.

00:35:42.300 --> 00:35:48.870
And so, just in general, it's sort of a more
frequently used, less frequently used type of thing.

00:35:48.869 --> 00:35:55.190
But that's not always the case because this stuff
is, you have to contextualize this for the given,

00:35:55.190 --> 00:36:00.889
each individual application, but another way to think
about it perhaps is, it's not about frequency of use,

00:36:00.889 --> 00:36:03.059
maybe it's more around the user mental model.

00:36:03.059 --> 00:36:11.289
More high profile tasks are on the left, less high profile
tasks on the, lower profile tasks are on the right side.

00:36:11.289 --> 00:36:15.989
You kind of just want to think about
what's the most important thing?

00:36:15.989 --> 00:36:22.829
If our eye reads from top left to bottom right, then the
most important corner of your main UI, of your window,

00:36:22.829 --> 00:36:26.340
your web page, whatever, is the top left corner, okay?

00:36:26.340 --> 00:36:33.660
Now your eye scans all over the place anyway, so it's not
like your eye - you have to put things in the top left,

00:36:33.659 --> 00:36:36.569
but it's a good guideline to keep in mind.

00:36:36.570 --> 00:36:38.980
Your eye will find things that are bright and shiny

00:36:38.980 --> 00:36:43.920
and all that stuff automatically,
but it's good to keep this in mind.

00:36:43.920 --> 00:36:46.829
Now that being said about bright and shiny,
your eye finding these kinds of things,

00:36:46.829 --> 00:36:52.489
that doesn't mean you should put honking
buttons in your UI so that people find them.

00:36:52.489 --> 00:37:00.949
I mean, I have seen so many scanning applications that
have horrific UI with huge controls because no one seems

00:37:00.949 --> 00:37:03.399
to find them so they made them bigger so you would see them.

00:37:03.400 --> 00:37:09.160
That is not how you design UI, you want to design it in
such a way that there's a natural flow in the window,

00:37:09.159 --> 00:37:15.629
there's a natural progression and
it's just there, people find it.

00:37:15.630 --> 00:37:17.820
So let's talk about how to group things in the items.

00:37:17.820 --> 00:37:21.670
So you've got it laid out correctly, you've used the
right controls, you've chosen your icons, you know,

00:37:21.670 --> 00:37:27.349
you've decided which controls or commands and items you
want to put in your toolbar, how do you group things?

00:37:27.349 --> 00:37:30.839
Well, again, this is very subjective.

00:37:30.840 --> 00:37:35.140
You kind of have to deal with each one on a case
by case basis, but let's just zoom in on this one.

00:37:35.139 --> 00:37:40.379
New and play, these two controls, top left corner
of the window, the first items in the toolbar,

00:37:40.380 --> 00:37:47.910
they relate to primary tasks in Keynotes, when you're
creating a slide deck, you're constantly creating new slides

00:37:47.909 --> 00:37:53.679
and you're constantly checking what the transitions
look like, etcetera, by playing the thing, right?

00:37:53.679 --> 00:38:01.099
And then you've got grouping here around tasks and
options related to the creation of secondary options.

00:38:01.099 --> 00:38:05.299
Slides are primary objects, slides contain
objects and these are secondary controls.

00:38:05.300 --> 00:38:11.240
So as we move down the toolbar, we're kind of going
down the hierarchy of objects in the application.

00:38:11.239 --> 00:38:17.889
A slide deck contains slides, slides contain objects,
so slides are the first controls in the toolbar,

00:38:17.889 --> 00:38:22.389
the objects themselves to create them are the second,
as we move down the toolbar there are sort of down

00:38:22.389 --> 00:38:24.469
in the hierarchy, they move to the left, okay?

00:38:24.469 --> 00:38:27.029
And let's keep going.

00:38:27.030 --> 00:38:35.140
Here we've got things, grouped items related to arranging
secondary objects and lastly, we've got things that relate

00:38:35.139 --> 00:38:37.619
to options for opening accessory windows.

00:38:37.619 --> 00:38:42.059
You don't always open accessory windows but you
want to have them visible and available to users

00:38:42.059 --> 00:38:45.259
because it's a great shortcut to go, oh, I
want to change the font, boom, font panel,

00:38:45.260 --> 00:38:49.510
or I want to change the color, boom, color panel, etcetera.

00:38:49.510 --> 00:38:55.890
Some people get this, here's a great CSS
Edit, great app, won an Apple Design award,

00:38:55.889 --> 00:38:59.929
great toolbar in terms of what this
application does, great, nice, clean UI.

00:38:59.929 --> 00:39:01.289
Here's another one, Sandbox.

00:39:01.289 --> 00:39:07.469
Great UI, great organization of the toolbar, if you use
this application you'll understand what I mean, but nice,

00:39:07.469 --> 00:39:12.239
clean design, the primary objects are over here,
creating pages for the website, creating page lets,

00:39:12.239 --> 00:39:16.359
creating collections and then there's sort of
all the inspector stuff over to the right side.

00:39:16.360 --> 00:39:19.809
Great design, clearly these guys get it.

00:39:19.809 --> 00:39:24.039
But, some don't, so here's a disaster,
I love showing this one.

00:39:24.039 --> 00:39:26.779
It's just, you know, everything's all over the place.

00:39:26.780 --> 00:39:29.830
This dates way back, I think this
developer's changed it since now,

00:39:29.829 --> 00:39:33.029
but it's just such a great slide, I wanted to show it.

00:39:33.030 --> 00:39:39.260
Here's another one, you know, just hodge podge
whatever the sort of programmer's working

00:39:39.260 --> 00:39:42.190
on that day became a toolbar icon
and you just stick it in there.

00:39:42.190 --> 00:39:48.099
So, we've got top left corner, remember the most
important corner of the application, is preferences icon.

00:39:48.099 --> 00:39:50.679
How frequently do people changes preferences?

00:39:50.679 --> 00:39:51.949
Not frequently at all.

00:39:51.949 --> 00:39:55.049
In fact, they should probably just do
it once for your app and that's it,

00:39:55.050 --> 00:39:57.340
it shouldn't be in the toolbar, in my opinion.

00:39:57.340 --> 00:40:01.950
And then just, you know, from down there, just more
and more there's no grouping, there's no organization,

00:40:01.949 --> 00:40:08.159
there's no stylistic, even the visual design
of these icons doesn't group them together.

00:40:08.159 --> 00:40:15.690
Colors, you know, I wouldn't say colors all over the
map, but lots of colors and lots of different designs.

00:40:15.690 --> 00:40:24.730
Bottom bar, bottom bar in Leopard, you used the rectangular
toolbar controls or you use the capsule controls,

00:40:24.730 --> 00:40:27.469
you've got the Leopard gradient
appearance, which you can't change,

00:40:27.469 --> 00:40:30.339
but these controls are now available to you in Leopard.

00:40:30.340 --> 00:40:35.059
These are the same ones you'd use in the
toolbar and no capsule buttons are allowed,

00:40:35.059 --> 00:40:37.420
in fact, I've just contradicted myself, sorry.

00:40:37.420 --> 00:40:40.280
Rectangular buttons only in the bottom bar.

00:40:41.429 --> 00:40:43.500
There are two sizes of a bottom bar.

00:40:43.500 --> 00:40:48.449
You can do standard size, regular size,
which has the 32 pixel high regular controls,

00:40:48.449 --> 00:40:53.789
the rectangular Leopard controls and you can do
a 22 pixel high if you want to do small controls.

00:40:53.789 --> 00:41:01.639
So depending on your UI you might want to choose large
or small, and two examples of this are address book

00:41:01.639 --> 00:41:07.009
in Mac OS X, Leopard, this is the small bottom
bar and you wouldn't know that until I put

00:41:07.010 --> 00:41:10.070
up the big bottom bar from iChat buddy list, okay?

00:41:10.070 --> 00:41:14.680
So you can see the difference in height, it just really
comes down to whether you want the bigger controls,

00:41:14.679 --> 00:41:21.269
rectangular controls, in there, or you want the smaller
ones, really depends on your UI, either one is fine.

00:41:21.269 --> 00:41:28.659
Bottom bar guidelines, you know, think from top to
bottom, most frequently used items at the top typically,

00:41:28.659 --> 00:41:33.379
less important items, more secondary objects,
at the bottom and so think about that

00:41:33.380 --> 00:41:34.910
in terms of what you put in the bottom bar.

00:41:34.909 --> 00:41:41.649
Use only the Leopard controls, avoid custom
controls, standard aqua controls, contextual menus,

00:41:41.650 --> 00:41:46.490
don't label things down in the bottom bar
because you don't have enough height there.

00:41:46.489 --> 00:41:51.729
You could potentially, sometimes, put a label beside it
for certain items, but not underneath like a toolbar.

00:41:51.730 --> 00:41:57.190
And use the standard system plus and minus icons and stuff.

00:41:57.190 --> 00:41:59.740
Now, let's talk about the window body.

00:41:59.739 --> 00:42:03.469
This is where the guts of your application is represented.

00:42:03.469 --> 00:42:06.549
This is where you put controls and
you put collections and you put photos

00:42:06.550 --> 00:42:08.870
and you put all this stuff that your app does, obviously.

00:42:08.869 --> 00:42:10.869
You have full control over this area.

00:42:10.869 --> 00:42:19.710
Now, a lot of the applications that I look at
are well traveled, got to lot mileage on them,

00:42:19.710 --> 00:42:25.730
been around for a long time, been around the block a few
times, got a little beat up, a few broken windshields,

00:42:25.730 --> 00:42:33.360
kind of thing, and if you just do, sort
of, a blind application of the guidelines,

00:42:33.360 --> 00:42:37.230
you're going to have an app that
looks like this, a bit of a beater.

00:42:37.230 --> 00:42:41.559
And if you don't think even about
placing the toolbar icons and stuff,

00:42:41.559 --> 00:42:45.239
you'll have this kind of vehicle,
so to speak, software vehicle.

00:42:45.239 --> 00:42:47.889
What you really want is something like this, right?

00:42:47.889 --> 00:42:53.089
You want to totally make an app that's totally
great and that's why this next section is so key.

00:42:54.250 --> 00:43:00.900
It's important, regardless of what paint we put on Mac OS
10, and how closely you adhere to that paint, so to speak,

00:43:00.900 --> 00:43:07.079
to take a renovation analogy or home building
analogy, you have to have things structured correctly,

00:43:07.079 --> 00:43:09.639
so let me take a few moments to
talk about user centered design.

00:43:09.639 --> 00:43:15.139
First of all, you're going to decide what is your
app going to do, what problem are you going to solve?

00:43:15.139 --> 00:43:21.779
Do one thing and do it really, really well, don't ship
everything and the kitchen sink in terms of features.

00:43:21.780 --> 00:43:23.730
Do one thing and do it really, really well.

00:43:23.730 --> 00:43:32.909
Sandbox does a great job in that regard, CSS Edit nails
it, Coda has five modules, but they combine all this stuff

00:43:32.909 --> 00:43:37.710
to do one thing, which is to be a web IDE,
and there's lots of other examples as well.

00:43:37.710 --> 00:43:43.490
So the best way to do this is, figure out what you're going
to do and then come up with a product definition statement

00:43:43.489 --> 00:43:48.429
and whatever you come up with, that should
define and drive everything that you do.

00:43:48.429 --> 00:43:51.909
It should act as the filter through which
you decide whether or not features are added

00:43:51.909 --> 00:43:55.949
to your application, or whether they're left off.

00:43:57.130 --> 00:44:02.269
So, here's typically what your app does, right?

00:44:02.269 --> 00:44:05.179
If you think about what you're
application's going to do, next application,

00:44:05.179 --> 00:44:08.259
or what your current application
does, you could list all the features.

00:44:08.260 --> 00:44:12.450
And here's just a version from last year's
presentation where I had an application on screen

00:44:12.449 --> 00:44:16.259
that was a file editor hex byte, you know, thingamabob.

00:44:16.260 --> 00:44:22.540
So, first of all you could list all of
your functionality of your application,

00:44:22.539 --> 00:44:27.259
but that's not a product definition
statement, that's what the app does,

00:44:27.260 --> 00:44:30.550
and it's all of the features of the application.

00:44:30.550 --> 00:44:39.390
A product definition statement takes those things and boils
it down into a single statement about what the app does,

00:44:39.389 --> 00:44:44.460
and that statement determines everything about
what you add and what you don't, you know,

00:44:44.460 --> 00:44:46.460
in terms of functions, what you add and take away.

00:44:46.460 --> 00:44:53.380
So in this case, a file snooping and editing tool for
highly technical users, hmm, highly technical users,

00:44:53.380 --> 00:44:56.840
that's going to impact the terminology
you use onscreen and it's going

00:44:56.840 --> 00:44:59.460
to determine the functionality
that you add to the application.

00:44:59.460 --> 00:45:05.420
But notice, it's not a file decompression tool, so you
don't want to add, anyway, you don't know the application

00:45:05.420 --> 00:45:09.130
because I didn't show it to you this year,
but just think about what you're app does,

00:45:09.130 --> 00:45:18.099
or what you hope to do in your next application idea and
first just kind of list all the stuff and then kind of,

00:45:18.099 --> 00:45:23.440
summarize it in one statement and use
that statement to filter everything.

00:45:23.440 --> 00:45:29.070
And I can not emphasize this enough, and if you come to
a certain point in the design and development process

00:45:29.070 --> 00:45:37.410
and you go, you know we've got this new thing that so and so
suggesting last night, a feature, and it doesn't really fit

00:45:37.409 --> 00:45:40.409
into this product definition statement,
what are we going to do?

00:45:40.409 --> 00:45:43.409
Then you need to get together with
all the decision makers and decide,

00:45:43.409 --> 00:45:47.349
perhaps the product definition
statement is a little bit too tight.

00:45:47.349 --> 00:45:53.529
Maybe you do want to expand it slightly, but always go back
and double check everything because if it doesn't fit in

00:45:53.530 --> 00:45:57.500
and you're absolutely certain that that is
what you wanted to build, then leave it out.

00:45:57.500 --> 00:46:04.559
The best solution's today on Mac OS X, or
any platform, best products, everything,

00:46:04.559 --> 00:46:12.139
are the products that have the best usability, best user
experience, not the products with the most features.

00:46:12.139 --> 00:46:18.129
So, user mental model is key in this whole thing,
understanding what your users are thinking is critical.

00:46:18.130 --> 00:46:24.610
So the user mental model is the way the application is
perceived and designed from the programmer's perspective.

00:46:24.610 --> 00:46:26.180
No, it's not.

00:46:26.179 --> 00:46:32.779
You do not want to express your architecture design
in the UI, it's not about you, it's about your users.

00:46:32.780 --> 00:46:37.260
This puts the burden of learning your application
on the user, they have to figure out what

00:46:37.260 --> 00:46:39.770
in the heck you were thinking when you created this thing.

00:46:39.769 --> 00:46:40.969
Why is this button here?

00:46:40.969 --> 00:46:41.980
What does this view do?

00:46:41.980 --> 00:46:44.250
Why do I have to drag this and hold this key?

00:46:44.250 --> 00:46:46.670
Etcetera, etcetera.

00:46:46.670 --> 00:46:51.610
Mental model means, the definition of mental
model is the way the application is perceived

00:46:51.610 --> 00:46:53.800
from the user's perspective.

00:46:53.800 --> 00:46:59.400
How are they thinking about the task that
they're trying to get done with your application?

00:46:59.400 --> 00:47:03.320
That's the right way to do it.

00:47:03.320 --> 00:47:12.309
Okay, so how do you in 60 seconds here, how do
you apply mental model to your design process?

00:47:12.309 --> 00:47:19.440
Well I've got a very simple self help formula, very
simple technique that I teach to people in the HI lab

00:47:19.440 --> 00:47:24.789
and anytime I meet with people, and that
is first, number one, identify the objects

00:47:24.789 --> 00:47:28.329
and the tasks that your user is thinking about.

00:47:28.329 --> 00:47:33.319
So, if you were designing a music playing software,
this example I always come up with is iTunes,

00:47:33.320 --> 00:47:37.670
if you're designing a music playback tool, you want to
think about what are the things the users are thinking

00:47:37.670 --> 00:47:42.110
about when they're considering a piece of
software that would play and organize their music.

00:47:42.110 --> 00:47:49.630
Well, they're thinking about things like tracks and songs
and albums and iPods and maybe a store, and searching, okay,

00:47:49.630 --> 00:47:59.630
searching is a task and so you list the objects, albums,
songs, devices and that sort of thing and then you list,

00:47:59.630 --> 00:48:03.829
equally, a second list, you build a list
of the tasks that people are going to do.

00:48:03.829 --> 00:48:10.279
They're going to burn, rip, mix,
equalize, search, play back, control,

00:48:10.280 --> 00:48:13.340
you know, fast forward, etcetera, those are tasks.

00:48:13.340 --> 00:48:19.240
Then you prioritize those tasks, you don't just do
this by yourself, call together a cross functional team

00:48:19.239 --> 00:48:24.250
within your organization, get documentation
writers, get product managers, get decision makers,

00:48:24.250 --> 00:48:29.210
get all kinds of people together, sit down for two
hours, three hours, a whole afternoon, whatever,

00:48:29.210 --> 00:48:35.199
and explain the task, send people off for
some homework, get everybody back together,

00:48:35.199 --> 00:48:38.639
have each person present their
ideas and collectively come up with,

00:48:38.639 --> 00:48:42.420
okay what is the definitive list of
objects the users thinking about?

00:48:42.420 --> 00:48:47.530
What is the definitive list of tasks
that this application's going to do?

00:48:47.530 --> 00:48:51.690
And then you prioritize those, which are the primary tasks?

00:48:51.690 --> 00:48:57.639
Creating a slide might be a good one,
you know, etcetera, in terms of Key Note.

00:48:57.639 --> 00:49:00.980
And then you take that and that's
going to inform the UI that you create.

00:49:00.980 --> 00:49:05.469
And this is going to inform everything, it's going
to inform the presentation of information on screen,

00:49:05.469 --> 00:49:10.719
how much space things take up, it's going to inform
the interaction, what you do next and how it occurs.

00:49:10.719 --> 00:49:17.129
It's going to inform the structure and organization of your
menus, because from left to right you want to do primary

00:49:17.130 --> 00:49:19.550
to secondary, remember that diagram I did for the toolbars?

00:49:19.550 --> 00:49:21.110
Same thing for your menus.

00:49:21.110 --> 00:49:26.010
It's going to impact the terminology and
labeling, you're either for very technical users

00:49:26.010 --> 00:49:30.340
or very non-technical users, that kind of thing.

00:49:30.340 --> 00:49:33.110
Always ask what's important now
when you're designing the UI.

00:49:33.110 --> 00:49:35.820
What's important now?

00:49:35.820 --> 00:49:42.519
Think about the mode your application's in and only put
UI elements on the main screen, or in the dialog box,

00:49:42.519 --> 00:49:49.039
or in the panel, whatever, relative
to what the user is doing now.

00:49:49.039 --> 00:49:52.949
Don't put stuff in there that they're
going to use later on in the workflow.

00:49:52.949 --> 00:49:57.989
If it doesn't apply now, don't put it in the UI.

00:49:57.989 --> 00:50:03.199
Your main interstate is the most valuable real estate that
you've got and you've got to be careful to not overload it.

00:50:03.199 --> 00:50:10.939
There's too many applications today on multiple
platforms, but all I talk about is Mac OS X.

00:50:10.940 --> 00:50:12.539
Too much UI.

00:50:12.539 --> 00:50:17.320
The hardest job for a designer, the
hardest job for as an interface person;

00:50:17.320 --> 00:50:20.789
somebody that cares about this is to simplify.

00:50:20.789 --> 00:50:26.170
There's nothing harder than simplifing and
I think Apple does this really, really well.

00:50:26.170 --> 00:50:34.389
It's a brutal process of doing something, coming up with
prototypes, then saying to yourself, what can we take away?

00:50:34.389 --> 00:50:37.730
What's not necessary right now?

00:50:37.730 --> 00:50:42.480
And there's always the urge internally
as a programmer particularly and perhaps

00:50:42.480 --> 00:50:45.369
as a product marketing person and
there's probably managers here.

00:50:45.369 --> 00:50:52.179
It's very, very hard to fight the
urge to take away features,

00:50:52.179 --> 00:50:55.500
and just because it comes off the UI
doesn't mean your taking away the features,

00:50:55.500 --> 00:50:59.260
you're making it more approachable
by the users, so keep that in mind.

00:50:59.260 --> 00:51:00.520
Here's iTunes.

00:51:00.519 --> 00:51:05.429
Let's go through this mental model exercises, okay?

00:51:05.429 --> 00:51:14.649
So, here are the tasks and objects or concepts,
so objects, songs, collections, devices, concepts,

00:51:14.650 --> 00:51:17.539
tasks/rip, playback, search, mix, burn, organize.

00:51:17.539 --> 00:51:18.800
These are al the things you do with iTunes.

00:51:18.800 --> 00:51:22.340
It's not a comprehensive list this is just illustration.

00:51:22.340 --> 00:51:28.430
So, then you figure out what are the priority tasks,
well play back and search is key, organizing is key,

00:51:28.429 --> 00:51:33.690
burning and mixing well you may do that, but it's not
always done, collections and songs are key devices,

00:51:33.690 --> 00:51:36.960
I don't know actually it turns out
that devices are just collections.

00:51:36.960 --> 00:51:39.260
They are just containers of songs.

00:51:39.260 --> 00:51:44.270
Play lists are containers of songs, the music stores is
a container for songs, iPods are containers for songs.

00:51:44.269 --> 00:51:48.630
Shared users are containers for songs,
so collections are big on iTunes.

00:51:48.630 --> 00:51:51.410
So, songs are a key object.

00:51:51.409 --> 00:51:53.989
It's a primary; it's the number one on our list.

00:51:53.989 --> 00:51:55.599
We just went through the exercise as a team.

00:51:55.599 --> 00:51:59.929
It's the number one object, so
it dominates the UI for iTunes.

00:51:59.929 --> 00:52:04.619
The most secondary thing is organizing.

00:52:04.619 --> 00:52:09.109
It's an important task and here's where the science
of UI design comes in, because sometimes objects

00:52:09.110 --> 00:52:14.510
and tasks are related, anyway you have
to think through those sorts of things,

00:52:14.510 --> 00:52:20.840
but in iTunes organizing is a key task and
collections area key object so they go in the left.

00:52:20.840 --> 00:52:28.120
Why? Because from left to right you
want to go general to specific options.

00:52:28.119 --> 00:52:32.429
You want to make choices over here that
percolate to the right, that flow to the right.

00:52:32.429 --> 00:52:36.049
That's why column view and finder goes from left to right.

00:52:36.050 --> 00:52:40.560
You pick the hard drive, then you pick the folder,
then you pick another folder, trial folder, etc.,

00:52:40.559 --> 00:52:50.029
etc. Now a key task primary task for users
in iTunes is playback, top left corner.

00:52:50.030 --> 00:52:52.160
No preferences icon.

00:52:55.349 --> 00:53:00.960
Status, communication of information
to the user is it primary?

00:53:00.960 --> 00:53:09.369
Well, you know one could talk about it or probably six
different ways, but we put it there because it's important

00:53:09.369 --> 00:53:14.869
when you shrink the window down that it stays in the same
place and it definitely is important to see what's going on

00:53:14.869 --> 00:53:20.179
and see progress, so in terms to visual balance
a whole bunch of reasons why it's where it is.

00:53:20.179 --> 00:53:22.730
It is important for users, so it is in the primary UI.

00:53:22.730 --> 00:53:24.420
And searching, searching is important.

00:53:24.420 --> 00:53:27.950
It's appropriate to put on the right-side of the
tool bar just from a consistency point of view

00:53:27.949 --> 00:53:32.710
and a visual balance point of view and it's a primary
task as well, because finding your music is key.

00:53:32.710 --> 00:53:40.090
And then, the bottom bar in iTunes you know you can
hide it, it's got stuff in it that you do access,

00:53:40.090 --> 00:53:44.809
but it's not critical functionality it's
miscellaneous, so keep that in mind from top

00:53:44.809 --> 00:53:50.150
to bottom, frequently used primary, secondary.

00:53:50.150 --> 00:53:56.389
Don't put whatever the word after tertiary is
fourth level importance down at the bottom.

00:53:56.389 --> 00:53:59.099
If it's fourth level importance
it shouldn't be in the main UI,

00:53:59.099 --> 00:54:01.909
it's should be up in a menu command
cause it's rarely accessed.

00:54:01.909 --> 00:54:05.119
I get all passionate about this stuff.

00:54:05.119 --> 00:54:08.769
Okay, so once you've gone through
this exercise what is the next step?

00:54:08.769 --> 00:54:11.280
Pull out Photoshop and start making mock-ups, right?

00:54:11.280 --> 00:54:16.000
Pull out interface peeler and start clicking and ragging
bottoms and building list and doing all this stuff.

00:54:16.000 --> 00:54:16.969
Answer is no.

00:54:16.969 --> 00:54:18.459
My personal opinion is no.

00:54:18.460 --> 00:54:23.829
Some people do it that way great, that's
your thing and if that works great.

00:54:23.829 --> 00:54:25.619
I recommend something called Paper Prototyping.

00:54:25.619 --> 00:54:28.500
There's a great book on Amazon called Paper Prototyping.

00:54:28.500 --> 00:54:30.300
Buy it, read it, it's great.

00:54:30.300 --> 00:54:34.050
Basically once you've decided your
primary tasks, primary objects;

00:54:34.050 --> 00:54:38.570
you've got your basic you know
prioritization done; all that stuff.

00:54:38.570 --> 00:54:45.760
Now a good exercise for people on your cross-functional
design team and don't just give it to once person,

00:54:45.760 --> 00:54:51.790
get everybody involved in the design process, because
everybody has got ideas and good insight into the product.

00:54:51.789 --> 00:54:57.279
Not about everything, they don't necessarily know the code,
but they might know the user, they might know the kind

00:54:57.280 --> 00:55:01.460
of tech support calls you get, they
might know the issues the users run into.

00:55:01.460 --> 00:55:05.119
If you're a documentation writer is
involved they can provide al a lot of value.

00:55:05.119 --> 00:55:11.739
Why? Because they understand what it
takes to explain how to do something.

00:55:11.739 --> 00:55:15.049
So, if they've tried to document something
for you in your current shipping version

00:55:15.050 --> 00:55:20.260
and it took eighteen pages there's a problem
there and they can highlight what the problem is,

00:55:20.260 --> 00:55:24.290
and they might be able to say all this extra stuff here,

00:55:24.289 --> 00:55:27.309
if you just put this there and
blah, blah, blah it would solve it.

00:55:27.309 --> 00:55:29.029
It would be a lot simpler.

00:55:29.030 --> 00:55:30.450
That's good insight.

00:55:30.449 --> 00:55:33.019
So anyway, decide who the key people are good-smart people,

00:55:33.019 --> 00:55:36.630
and then takes these designs and
start drawing them on paper.

00:55:36.630 --> 00:55:40.349
Everybody can draw box, everybody can draw a straight line,

00:55:40.349 --> 00:55:44.589
everybody can write you know a
label and everybody can print.

00:55:44.590 --> 00:55:50.220
There's no/nothing getting in your way
to doing the UI with a pencil and paper.

00:55:50.219 --> 00:55:59.599
And the reason I emphasis this so heavily is because most
companies, most people jump...unless you're a design fine.

00:55:59.599 --> 00:56:02.429
If you're a designer go into Photoshop,
because you live in PhotoShop,

00:56:02.429 --> 00:56:05.669
but most of you don't necessarily live in PhotoShop.

00:56:05.670 --> 00:56:09.559
It's not your primary, you don't really know
how to use the thing, you don't really know how

00:56:09.559 --> 00:56:14.299
to use necessarily Interface Builder to its full
extent or it doesn't do what you need it to do in terms

00:56:14.300 --> 00:56:16.630
to prototyping the UI that's very possible too.

00:56:16.630 --> 00:56:23.650
And the problem is when you start to use these tools
to do your mock-up you get bogged down in the fact

00:56:23.650 --> 00:56:30.530
that the application you're using to build the
prototype doesn't have a particular control.

00:56:30.530 --> 00:56:35.450
Right? How many times have you tried to do a prototype
in Interface, but were not had the things you needed,

00:56:35.449 --> 00:56:42.149
and so you get bogged down and it's unbelievable how much
time you waste fiddling with the application to get it

00:56:42.150 --> 00:56:46.190
to do what you want and in two seconds
you could have drawn what you wanted.

00:56:46.190 --> 00:56:48.920
So draw it on paper, cut out all the pieces.

00:56:48.920 --> 00:56:56.180
Each little icon, each little list, each use acetate, color
paper or you know transparent paper to do the high bars

00:56:56.179 --> 00:57:01.099
on lists and all this stuff and I'm not
kidding do this then lay it out like this.

00:57:01.099 --> 00:57:03.009
This is from a session that I did with a developer.

00:57:03.010 --> 00:57:07.360
I told him to do this, they went off, they did it, they
came back with an envelope full of pieces of paper,

00:57:07.360 --> 00:57:10.590
we dumped it on the table and we
started to build this thing.

00:57:10.590 --> 00:57:15.680
Build it as a cross-functional team, build multiple-paper
prototypes and give them to people who are designers

00:57:15.679 --> 00:57:20.019
or who are part of a design team and get everybody
to go away for a week and do a homework project,

00:57:20.019 --> 00:57:23.659
and then come back and have each of them
present what they think the design is,

00:57:23.659 --> 00:57:27.509
and then get consensus on what the design should be.

00:57:27.510 --> 00:57:32.910
Now once you've got this thing designed and it's easy to
move around, you can have conversations, you know the boss

00:57:32.909 --> 00:57:38.829
or whatever comes in and says no, no, no that list has
to be over here, well he can just grab it and move it.

00:57:38.829 --> 00:57:42.259
That's easy, but you come up with a great result.

00:57:42.260 --> 00:57:43.660
I'm not kidding.

00:57:43.659 --> 00:57:50.210
The results I've seen through this process are fantastic
and then once you've got consensus and everybody agrees,

00:57:50.210 --> 00:57:55.510
then you take a photo of this or something;
digitalize it and now give to someone

00:57:55.510 --> 00:57:58.820
who can build this in PhotoShop or Interface Builder.

00:57:58.820 --> 00:57:59.580
We've got to keep moving.

00:57:59.579 --> 00:58:00.799
Oh, my goodness.

00:58:00.800 --> 00:58:06.140
Feature groups, so when you're designing this thing think
about feature groups, think about the primary objects,

00:58:06.139 --> 00:58:13.679
the primary tasks, secondary objects, secondary tasks and
construct you UI based on these kinds of concept areas,

00:58:13.679 --> 00:58:17.000
these tasks, functionality, work flow blocks.

00:58:17.000 --> 00:58:23.090
Think about your application not from, Eww I need
a blue button here, think big, think concepts,

00:58:23.090 --> 00:58:26.050
think block and get that down right first.

00:58:26.050 --> 00:58:30.550
It's like when you renovate your house you
don't say I would like to have a pantry here

00:58:30.550 --> 00:58:33.110
that is 3 feet by 7 feet by so many feet.

00:58:33.110 --> 00:58:35.660
You just say hey babe we need a pantry right here.

00:58:35.659 --> 00:58:39.629
You know wouldn't it be great right beside the okay right
and we need to move the stove here and we need to do this

00:58:39.630 --> 00:58:42.160
and you do these big picture things first.

00:58:42.159 --> 00:58:45.960
You say you know w hat let's put the kitchen
over here, so we can look into the back yard.

00:58:45.960 --> 00:58:50.780
Okay great that's a modular bid picture
move like in one of these feature groups.

00:58:50.780 --> 00:58:52.510
Okay you know where the kitchens is going to be,

00:58:52.510 --> 00:58:56.270
now you can start to eventually focus
on what are you doing in the kitchen?

00:58:56.269 --> 00:58:59.300
Oh well let's put the pantry over here, let's
put the stove over here and you get more

00:58:59.300 --> 00:59:03.030
and more granular in that block, in that space.

00:59:03.030 --> 00:59:05.519
Same thing with software Interface design.

00:59:05.519 --> 00:59:10.409
Have a predicable workflow left
to right, general to specific.

00:59:10.409 --> 00:59:13.480
You choose collections, you populate that way.

00:59:13.480 --> 00:59:19.170
It's a guideline so lock into this,
but it's a good guideline.

00:59:19.170 --> 00:59:22.200
General to specific, left to right, top to bottom,

00:59:22.199 --> 00:59:29.000
you're going higher frequency/lower
frequency, primary/secondary okay.

00:59:29.000 --> 00:59:30.230
Left to right, top to bottom.

00:59:30.230 --> 00:59:30.789
Think that way.

00:59:30.789 --> 00:59:35.469
It isn't actually like this, but these are
great guidelines to work with for people who are

00:59:35.469 --> 00:59:38.449
like designers trust me these are what you need.

00:59:38.449 --> 00:59:44.219
Okay, when your building the consent for your
main window, whether it's a dialog box, a sheet,

00:59:44.219 --> 00:59:48.099
whatever these still exist in (inaudible)
nothing changes, there's some basic things are

00:59:48.099 --> 00:59:50.989
that in the interface guidelines, but
I'll just talk through them very quickly.

00:59:50.989 --> 00:59:56.409
And that is there is a concept of center
equalization, it's about visual balance.

00:59:56.409 --> 01:00:01.299
You know so you take the is one and say and
you say it seems easy enough The window in half

01:00:01.300 --> 01:00:04.130
and I'll balance everything around that, right?

01:00:04.130 --> 01:00:08.610
If you put a box around everything,
which is what you should.

01:00:08.610 --> 01:00:13.490
Design your UI, then put a box around sort of
a bounding box left most, right most, gilfs,

01:00:13.489 --> 01:00:22.919
etc. Seems pretty straight forward, center that thing in
the window, its mathematical correct, but it's not correct.

01:00:22.920 --> 01:00:29.579
Now I know this is a designer talking and it's like okay big
deal most of you are probably gee I'm just glad it works,

01:00:29.579 --> 01:00:33.630
and there's no bugs, but that would be good enough.

01:00:33.630 --> 01:00:38.090
If most you did that I would be a happy guy,
but just to get it right, this ain't right.

01:00:38.090 --> 01:00:43.640
Okay it's mathematically correct, but what you want to do
is take the visual weights and you want to sort of balance

01:00:43.639 --> 01:00:48.420
if you weighed the text on one side of
the line versus the text in there control

01:00:48.420 --> 01:00:50.400
like check boxes and stuff, they are heavy.

01:00:50.400 --> 01:00:52.869
You're kind of teetering around.

01:00:52.869 --> 01:00:56.289
You want to get visual balance, okay?

01:00:56.289 --> 01:01:00.759
You don't want to center align everything
for sure, which is what's happened here.

01:01:00.760 --> 01:01:06.190
You get his like jagged edge, you want to take this
and you want to get this balancing, this weighting,

01:01:06.190 --> 01:01:11.490
weight on either side of this balance, so you
build a box around it, remember what we did before,

01:01:11.489 --> 01:01:15.169
now I've actually shifted everything over beside the weight

01:01:15.170 --> 01:01:21.309
of those long lines there is a little heavier you know it's
balanced now actually with the weight of the check boxes.

01:01:21.309 --> 01:01:26.519
If you imagined that pixels had a weight sort of a
collected weight of the pixels on either side of the line.

01:01:26.519 --> 01:01:27.789
Keep that in mind.

01:01:27.789 --> 01:01:33.119
I know most of you will probably
forget it, but hey it's on video now.

01:01:33.119 --> 01:01:35.889
It's really about a visual balance.

01:01:35.889 --> 01:01:39.170
Here's another example from an application
that I redesigned last year in my session.

01:01:39.170 --> 01:01:46.340
You know bounding boxes around it and it's centered in the
window and this isn't only for techs, these are my examples,

01:01:46.340 --> 01:01:51.940
but even if you go to very visual
UI lots of graphics and thumbnails,

01:01:51.940 --> 01:01:56.460
you just put a bounding box around
it and balance it visually.

01:01:56.460 --> 01:02:01.559
Kind of funny to say not just for techs in
the slide and just have techs in this slide.

01:02:01.559 --> 01:02:07.759
Okay, a line labels and controls, so when you're labeling
anything in sheet or a dialog always write a line,

01:02:07.760 --> 01:02:12.880
the labels along the colons like
this left the line that controls.

01:02:12.880 --> 01:02:22.480
Same thing here, you want to left the line the dependants so
you see size and points there is at left edge of the S glyph

01:02:22.480 --> 01:02:25.550
and the left of the A for add is alliance.

01:02:25.550 --> 01:02:27.410
There is a clear indentation, okay?

01:02:27.409 --> 01:02:32.719
And Interface Builder doesn't always do this
exactly that way I think so you have to anyway,

01:02:32.719 --> 01:02:35.679
please try to remember and we'll try to fix the IB as well.

01:02:35.679 --> 01:02:37.569
Maybe it does it right now.

01:02:37.570 --> 01:02:39.269
Use white space to group items and controls.

01:02:39.269 --> 01:02:44.989
Don't always put group boxes around everything, don't
always put separator lines everywhere and if you do,

01:02:44.989 --> 01:02:48.119
if you do draw lines in your UI
make sure they are not black.

01:02:48.119 --> 01:02:49.829
75 percent black please.

01:02:49.829 --> 01:02:53.539
It's a little softer, it's happier, it's more comfortable.

01:02:53.539 --> 01:02:59.320
So use white space to group items and controls so
here this big blocks of kind of big separator areas

01:02:59.320 --> 01:03:02.230
between these items, and that's okay that's all you need.

01:03:02.230 --> 01:03:06.559
Your eye need to kind of break up these
blocks and it realizes that they are grouped.

01:03:06.559 --> 01:03:10.110
Here's a different spacing up there,
but it's a spacing none the less.

01:03:10.110 --> 01:03:13.840
There's not uniform spacing between everything along here.

01:03:13.840 --> 01:03:18.950
Put controls near the objects they affect, so here we
are whether it's a window or a dialog box with a list

01:03:18.949 --> 01:03:26.549
or whatever I can't tell you how many times I find
applications like an add button for a list and it's like way

01:03:26.550 --> 01:03:31.680
over here and the list is over here or something
and there's not connection between these things.

01:03:31.679 --> 01:03:34.449
Place things you know, it's like in your home okay.

01:03:34.449 --> 01:03:38.159
There's some homes with great old Victorian
homes or whatever and they were wired

01:03:38.159 --> 01:03:41.289
like rewired sixty years after the place was built.

01:03:41.289 --> 01:03:45.779
IF you've ever been in a house where you walk into a
bedroom and you flip the light switch and nothing happens,

01:03:45.780 --> 01:03:47.890
but hey light comes on in the hallway or something.

01:03:47.889 --> 01:03:51.239
That's kind of the same experience
you have sometimes in software.

01:03:51.239 --> 01:03:56.469
You click a button and something over
here happens or it's a bit strange.

01:03:56.469 --> 01:03:58.449
Generally what you want to do is group.

01:03:58.449 --> 01:04:02.439
Put the controls, so adding to that list
we kind of have a standard were come do

01:04:02.440 --> 01:04:05.360
on here Mac OS X put the controls near the list.

01:04:05.360 --> 01:04:06.280
They don't have to be at the bottom.

01:04:06.280 --> 01:04:12.140
That's kind of s standard we are doing, but put
the controls that effect a view near the view.

01:04:12.139 --> 01:04:15.379
Maybe above, maybe beside, but hey should be near it.

01:04:15.380 --> 01:04:18.480
In this case we are doing little single
splitters, so we are grouping them all together.

01:04:18.480 --> 01:04:24.110
Here is an other one joined with that list,
here's the added button joined with that panel.

01:04:24.110 --> 01:04:29.000
Controls near the objects they effect, again the
controls down here that effects with the play of stuff

01:04:29.000 --> 01:04:32.710
over there, but not entirely, but generally.

01:04:32.710 --> 01:04:36.300
Control pay back status; these
controls effect the view there.

01:04:36.300 --> 01:04:38.780
Now one can argue they should be down below that one.

01:04:38.780 --> 01:04:46.230
It's a bit of visual balance, it's a bit of well that's
what iTunes did, but keep the general principle in mind.

01:04:46.230 --> 01:04:51.130
Okay, can I put new Leopard controls
in the body of my window?

01:04:51.130 --> 01:04:54.720
No! Only standard option controls
goes into the body of you window.

01:04:54.719 --> 01:05:01.819
Leopard, rectangular, and capsule controls go in tool
bars, Leopard, and rectangular buttons goes in bottom bars.

01:05:01.820 --> 01:05:05.019
No aqua in toolbars, no aqua in bottom bars only aqua is

01:05:05.019 --> 01:05:11.469
in the body no Leopard specific
tool bar or bottom bars in the body.

01:05:11.469 --> 01:05:17.009
Use standard aqua in controls, so here's an
example: standard scroller, standard combo box,

01:05:17.010 --> 01:05:21.480
standard scroller over here, slider thingy.

01:05:21.480 --> 01:05:22.349
Source lists.

01:05:22.349 --> 01:05:26.000
Source list are new they are now
available to you in an API and Mac OS X,

01:05:26.000 --> 01:05:32.820
so that you can do what you see happens in iPhoto, iWeb.

01:05:32.820 --> 01:05:36.920
This is me at the Design Awards like year, pretty chic.

01:05:36.920 --> 01:05:43.460
Hugo Boss suit I'll say and you see source
lists everywhere, you can now do these.

01:05:43.460 --> 01:05:48.099
A source list is a great file system
obstruction that's why they're so great.

01:05:48.099 --> 01:05:53.230
You can drag imagines into a collection,
into an album and the ser doesn't need

01:05:53.230 --> 01:05:57.150
to worry about where the images were, right?

01:05:57.150 --> 01:05:58.320
iPhoto takes care of that.

01:05:58.320 --> 01:06:02.039
iWeb worries about where the files
are in the system, the user doesn't.

01:06:02.039 --> 01:06:05.539
In the Finder now you can have these
collections in the source list.

01:06:05.539 --> 01:06:12.480
The user doesn't need to worry as much about where these
things are cause the smart folder aggregates stuff from all

01:06:12.480 --> 01:06:14.610
over the system based on some spotlight query.

01:06:14.610 --> 01:06:19.950
That's great for users, so think about source lists
were you want to obstruct the file system from users.

01:06:19.949 --> 01:06:27.230
Think about source lists when you want you've got
an application that team more novas users generally

01:06:27.230 --> 01:06:33.570
because sources are great for protecting
complexity, also you know we could have done iPhoto

01:06:33.570 --> 01:06:38.980
as a document based application where every time you open
the photo album a new window opened up wit thumbnails.

01:06:38.980 --> 01:06:45.000
It would work, it would be fine, but there's
efficiency gained with a source list,

01:06:45.000 --> 01:06:50.420
so think carefully about whether you can do source list
to gain efficiency and whether it makes since in terms

01:06:50.420 --> 01:06:55.730
of your user mental model that there are collections
of objects in as soon as you do your mental model

01:06:55.730 --> 01:06:57.780
and you realize there are collections of objects

01:06:57.780 --> 01:07:02.790
and there is a great hierarchy you know what source
lists are great anytime there is a collection of objects.

01:07:02.789 --> 01:07:07.279
That's sort of the primary way of thinking
about how things get done in the application.

01:07:07.280 --> 01:07:11.280
Don't always do sources lists, but in
many cases they work really, really well.

01:07:11.280 --> 01:07:13.640
Could be genes, you know human genes stuff.

01:07:13.639 --> 01:07:18.719
Could be photos, could be all kinds of stuff.

01:07:18.719 --> 01:07:25.149
The appearance of source lists is pretty much dictated by
the system, but you do have some degree of control over it.

01:07:25.150 --> 01:07:28.230
If you're a single source list window
and if you have a single source list

01:07:28.230 --> 01:07:34.389
in your application make sure you are using
the white background, you can do blue or white.

01:07:34.389 --> 01:07:37.839
Make sure you use the blue background
for a single source list.

01:07:37.840 --> 01:07:42.360
If you have a window with multiple
source lists like the font book

01:07:42.360 --> 01:07:48.789
and Address Book there are two lists you chose the group
and you get the name and you get the V card type scenario,

01:07:48.789 --> 01:07:50.449
then you want to go with the white background.

01:07:50.449 --> 01:07:57.449
Now, you can do a single source list as a white background
in Leopard where we that's fine, but I would say only do

01:07:57.449 --> 01:08:03.750
that when the overall look of your application
is maybe compromised some degree by the blue.

01:08:03.750 --> 01:08:07.940
You might have a color scheme inside
your application were blue is like yeah,

01:08:07.940 --> 01:08:11.119
white is a much more neutral color
that will fit in better in that case.

01:08:11.119 --> 01:08:13.279
Multiple source lists here font book shows you that.

01:08:13.280 --> 01:08:21.369
If you have two level of hierarchy in a source
list go ahead and use a disclosure triangle,

01:08:21.369 --> 01:08:26.130
but if you have more of two levels of hierarchy go to
multiple source lists, so you've got this cascading kind

01:08:26.130 --> 01:08:31.930
of column view please, otherwise you'll have a source list
with like you know tweedy down, tweedy down, tweedy down,

01:08:31.930 --> 01:08:37.659
now you have these honkin' wide source lists to kind
of capture this hierarchy and forget that stuff.

01:08:37.659 --> 01:08:41.550
Scope bar new in Leopard, it's now
available to you as developers.

01:08:41.550 --> 01:08:47.880
This is a great tool for restricting and
refining the searching that the user is doing,

01:08:47.880 --> 01:08:51.239
so you've seen these before in
mail, they're now available to you.

01:08:51.239 --> 01:08:57.519
They're now in the Finder, they're in Safari, they're all
over the system and you can do exactly this appearance

01:08:57.520 --> 01:09:03.240
and the same behavior and you can restrict this search,
so it only appears when the user initiates a search.

01:09:03.239 --> 01:09:08.670
Don't have the scope bar sitting there the whole time, only
show it when they start to search in your search filed.

01:09:08.670 --> 01:09:17.180
Use mail, you'll see what the behavior is, and it
provides a simple way for users to trick their search.

01:09:17.180 --> 01:09:25.289
Again, only do a search bar if searching is key to
your application if it's a fundamental sort of aspect

01:09:25.289 --> 01:09:29.729
of how your application is structured where
users are searching for objects in a hierarchy.

01:09:29.729 --> 01:09:33.109
Scope bar and Leopard works like this.

01:09:33.109 --> 01:09:38.589
Basically start typing, scope bar appears, and you
get the results that are restricted by the scope bar

01:09:38.590 --> 01:09:43.350
where you can find the search to a particular volume
of particular collection or something like that

01:09:43.350 --> 01:09:46.270
and now you get the results down
there that match the search.

01:09:46.270 --> 01:09:48.540
You've all seen it before, so I won't to spend time here.

01:09:48.539 --> 01:09:49.769
Animation.

01:09:49.770 --> 01:09:53.020
And I'm running out of time, but
I will get through this section.

01:09:53.020 --> 01:09:59.840
Animation is new in Leopard and
it enhances the user experience.

01:09:59.840 --> 01:10:05.390
By adding sort of physicality and realism
to the UI in a way we could never do before.

01:10:05.390 --> 01:10:13.070
It communicates progress, it conveys valuable feedback
to the user, it clarifies a process or concept in the

01:10:13.069 --> 01:10:18.170
since that it shows the user what's going to happen
sometimes before they complete their gesture.

01:10:18.170 --> 01:10:23.960
It shows for example in iWeb you are creating a
website now and you move your thumbnails around;

01:10:23.960 --> 01:10:28.869
you've all experienced that, that's pre-Core Animation,
but it's a great example of where you move this around

01:10:28.869 --> 01:10:34.519
and you see the impact of your move
before you even drop the photo there.

01:10:34.520 --> 01:10:40.210
We've actually had animation in Mac OS X since day one

01:10:40.210 --> 01:10:45.069
and a lot of people didn't realize the genie
effect was animation, moving things to the dock

01:10:45.069 --> 01:10:49.460
where icons separate was animation, sheets and drawers
moving in and out, and up and down, and all that.

01:10:49.460 --> 01:10:54.920
That was animation and it conveys a lot of useful
information to the user about what's going on.

01:10:54.920 --> 01:10:58.010
Here's a great example of animation
in Leopard or it was in Tiger as well.

01:10:58.010 --> 01:11:02.460
Watch this item, okay the guy appears
online, it animates the list very suddenly,

01:11:02.460 --> 01:11:07.970
very you know very nice touch just shows
you to come online in a non-intrusive fashion,

01:11:07.970 --> 01:11:10.579
so animation is great for placing items in a list.

01:11:10.579 --> 01:11:13.750
Animation is great for navigating collections.

01:11:13.750 --> 01:11:17.359
Cover flow is a great example of that, but it
doesn't; have to be left to right, it can be up, down,

01:11:17.359 --> 01:11:21.439
yes I was talking to a developer great idea for jazzing

01:11:21.439 --> 01:11:29.509
up what is basically a pretty boring
experience in with cover flow type scenario.

01:11:29.510 --> 01:11:34.329
Animation when showing it shows results of a not yet
committed user action, so here I'm dragging stuff

01:11:34.329 --> 01:11:37.720
down to the dock and you see this thing moving
around the icon are sliding left, right,

01:11:37.720 --> 01:11:42.360
and center perhaps you're application does
some kind of a design and you're moving objects

01:11:42.359 --> 01:11:47.859
around in your content area you could shift things about
of the way if it was appreciate just like iWeb does.

01:11:47.859 --> 01:11:50.809
Very, very compelling, very, very useful for users.

01:11:50.810 --> 01:11:55.890
You could use animation to switch the interaction
mode of an application, so here's front row

01:11:55.890 --> 01:12:00.930
and you get this dramatic UI change
and I get this stuff circling around

01:12:00.930 --> 01:12:04.560
and it's a very engaging great way to use animation.

01:12:04.560 --> 01:12:09.560
Be careful to not do this thing if you
don't need to, doing it just for sex appeal,

01:12:09.560 --> 01:12:12.130
but it's very valuable in the appreciate context.

01:12:12.130 --> 01:12:14.020
Time Machine is why you see animation there.

01:12:14.020 --> 01:12:18.090
Okay, it's also useful for when you
change the properties of an object.

01:12:18.090 --> 01:12:20.610
You could have things animating and
you know moving around very slightly

01:12:20.609 --> 01:12:23.849
so that users understand that something was applied.

01:12:23.850 --> 01:12:26.039
It's useful for giving feed back about an action.

01:12:26.039 --> 01:12:28.439
Sheets, drawers opening, closing this kind of thing.

01:12:28.439 --> 01:12:32.869
You might have things inside your application were you
create a new object and beep the thing just slides,

01:12:32.869 --> 01:12:35.079
suddenly you know zip moves over kind of thing.

01:12:35.079 --> 01:12:37.609
It's really, really compelling

01:12:37.609 --> 01:12:40.460
Now, void the temptation to animate everything.

01:12:40.460 --> 01:12:45.630
This isn't like we don't have the experience with
animation that we had with fonts back in the 80?s

01:12:45.630 --> 01:12:50.079
where everybody's newsletter was completely
unreadable, because people went completely crazy

01:12:50.079 --> 01:12:54.789
with all the fonts they could do,
so be careful how you use animation.

01:12:54.789 --> 01:12:58.269
Avoid creating this extreme or distracting animations.

01:12:58.270 --> 01:13:00.760
Front Row isn't suitable for most applications.

01:13:00.760 --> 01:13:03.869
You don't have massive mode changes like that.

01:13:03.869 --> 01:13:09.189
Animation isn't necessary when you're
switching tabs or closing views necessarily.

01:13:09.189 --> 01:13:13.049
Now Coda does this really cool, you know
you choose this site and they turn.

01:13:13.050 --> 01:13:19.300
That's cool, that's just a nice view transition
that makes a since, but I think that's sort

01:13:19.300 --> 01:13:22.510
of the realm in which you need to be doing this.

01:13:22.510 --> 01:13:28.760
Create meaningful motions that provide live
feedback, but don't do stuff that's you know, extraneous.

01:13:28.760 --> 01:13:33.460
Now we've talked about images and bottom bars
and tool bars for years you've seen them all

01:13:33.460 --> 01:13:37.750
over the system the plus/minus button, the
action menu all these things you just wanted them

01:13:37.750 --> 01:13:47.060
so badly you couldn't get them, well it was a ghost town
for getting images and it was pretty rough in those days.

01:13:47.060 --> 01:13:52.200
You have to customize everything, well you know none of them
we available for you, but now I'm happy to announce today

01:13:52.199 --> 01:13:55.519
in Leopard you have access to lots of
images in the system including these.

01:13:55.520 --> 01:13:56.570
These are the constant mains.

01:13:56.569 --> 01:14:00.059
You're never going to have time to write them
down, because I only have two minutes left.

01:14:00.060 --> 01:14:02.450
You have these which are in PDF format.

01:14:02.449 --> 01:14:04.840
Actually back here these you have to use as is.

01:14:04.840 --> 01:14:07.750
You can not customize these icons,
cause they're icons format.

01:14:07.750 --> 01:14:10.180
Don't change them.

01:14:10.180 --> 01:14:16.210
These are PDF format they're scalable, they're tin table you
can make them big, small, change their color, they're fine,

01:14:16.210 --> 01:14:18.600
but just scale them and tint them that's all.

01:14:18.600 --> 01:14:24.770
They are useful for doing views, so you can you know
and these are great examples of icons that are generic

01:14:24.770 --> 01:14:28.190
in nature they don't have a particular
meaning in Finder only.

01:14:28.189 --> 01:14:34.619
They're generic to everybody and they should be
useful in most cases; locks and unlocks, etc. Alright,

01:14:34.619 --> 01:14:37.689
I've got 38 seconds left and I'm
going to run about one minute over,

01:14:37.689 --> 01:14:41.369
so hopefully the room director will give me a bit of grace.

01:14:41.369 --> 01:14:45.859
That's the window and I want to just talk very briefly
about some other stuff you're seeing in Leopard

01:14:45.859 --> 01:14:48.799
that I want to give you some guidance on.

01:14:48.800 --> 01:14:52.900
You're seeing more and more transparent panels in the UI.

01:14:52.899 --> 01:14:58.559
In Leopard you can now do these, but we haven't given
you all the transparent window widgets and stuff,

01:14:58.560 --> 01:15:02.840
so you still have to do some work on your
part, but you can get the window appearance.

01:15:02.840 --> 01:15:08.329
And transparent panels are appropriate, they weren't in
Tiger obviously so this was kind of the experience you had,

01:15:08.329 --> 01:15:11.640
but in Leopard you could do this type of effect.

01:15:11.640 --> 01:15:12.840
You get the transparent panel.

01:15:12.840 --> 01:15:14.579
Well, why is this a big deal?

01:15:14.579 --> 01:15:16.479
Why are these cool?

01:15:16.479 --> 01:15:18.279
You know they are sexy, okay.

01:15:18.279 --> 01:15:19.630
They do look great.

01:15:19.630 --> 01:15:26.279
I agree, but they're not appropriate in every
context, so please help us you know do this right,

01:15:26.279 --> 01:15:31.809
because I think then they will bring the
ultimate you know value that they can bring.

01:15:31.810 --> 01:15:39.210
They're appropriate in a immersive environment if you're a
photo editor and you live and die by the hours and photos

01:15:39.210 --> 01:15:42.029
that you know by the number of photos
that you produce everyday and you process

01:15:42.029 --> 01:15:49.259
and do you know your videography live inside
a final cut, your world in full screen okay.

01:15:49.260 --> 01:15:52.409
Having a very bright panel in white sitting

01:15:52.409 --> 01:15:56.670
on the screen you know that's not moving
eventually kind of burns into your retina.

01:15:56.670 --> 01:16:00.090
It's a bothersome thing and it takes
always from the content you're working on.

01:16:00.090 --> 01:16:06.130
So putting these transparent panels
and notice I'm not using the word HUD.

01:16:06.130 --> 01:16:10.680
They're transparent panels that's
all they are their just panels.

01:16:10.680 --> 01:16:15.470
They're not floating windows, not windoids, not
palettes, not all these words we used to call them.

01:16:15.470 --> 01:16:20.780
Let's get consistent with terminology they're
panels and they happen to be transparent.

01:16:20.779 --> 01:16:22.420
Users don't know what a HUD is.

01:16:22.420 --> 01:16:23.250
They're like a what?

01:16:23.250 --> 01:16:29.970
A hut? Here's another fully immersive
application right transparent panels work great

01:16:29.970 --> 01:16:34.970
in this environment they don't detract
from the content you're working on.

01:16:34.970 --> 01:16:42.470
Here's another one, but he point here is do
transparent panels when your application is very visual.

01:16:42.470 --> 01:16:46.610
When you've got video, photos, you know that kind of stuff.

01:16:46.609 --> 01:16:52.319
Web pages that are very rich visually, perhaps,
but it's really for media centric products.

01:16:52.319 --> 01:16:53.779
Here's some other ones from us.

01:16:53.779 --> 01:17:00.759
More this is Aperture, here's sort of
visual environment of Time Machine.

01:17:00.760 --> 01:17:06.260
We've got a transparent panel for QuickLook, but
that's because we do it everywhere in the system,

01:17:06.260 --> 01:17:12.869
so do them if you want to allow brief adjustments
to the content without obscuring the window

01:17:12.869 --> 01:17:17.399
and they immediately apply the users adjustments
to the content, so make sure if you do one of these

01:17:17.399 --> 01:17:19.489
that you don't have an apply button all over them okay.

01:17:19.489 --> 01:17:21.619
They should just if you move the
slider they apply immediately.

01:17:21.619 --> 01:17:26.569
Media centric applications should do this.

01:17:26.569 --> 01:17:33.159
An opaque panel would distract users from the
content that they're working on and only do this

01:17:33.159 --> 01:17:35.729
if you panel contains simple adjustment controls please.

01:17:35.729 --> 01:17:40.329
Don't pt word processors like huge lists
of renaming field and all this stuff

01:17:40.329 --> 01:17:43.729
in a transparent panel that's the
wrong UI for this kind of thing?

01:17:43.729 --> 01:17:46.149
So here's a great example of that.

01:17:46.149 --> 01:17:51.210
Here's transparent panel on a full screen mode right down
of in the application and then it's in full screen mode.

01:17:51.210 --> 01:17:55.699
Now that's the point, if you have a full
screen mode transparent panels are appropriate

01:17:55.699 --> 01:18:01.929
and if that application also have a non full screen
mode if you've already done transparent panels

01:18:01.930 --> 01:18:07.970
for full screen mode do them in non full screen mode, okay.

01:18:07.970 --> 01:18:10.890
So once you've done them, if you're in an
immersive environment, your very media rich,

01:18:10.890 --> 01:18:15.390
and you've done them everywhere in your application, but
don't switch back and fourth between Aqua and transparent,

01:18:15.390 --> 01:18:19.119
okay or non transparent opaque and non transparent.

01:18:19.119 --> 01:18:21.260
So, you don't need transparent panels here,

01:18:21.260 --> 01:18:28.579
because the application doesn't do an immersive
environment it's not visual rich necessarily these are fine,

01:18:28.579 --> 01:18:34.960
because the system provides them
even or here in the Finder, get info.

01:18:34.960 --> 01:18:37.079
It doesn't need to be transparent.

01:18:37.079 --> 01:18:43.180
It doesn't need to be there just
because, so don't do it just because.

01:18:43.180 --> 01:18:47.539
Use white or grey text and a small font size.

01:18:47.539 --> 01:18:52.539
Create small white controls, use high
contrast colors, but in very small amounts.

01:18:52.539 --> 01:18:57.319
Go into iPhoto full screen mode and
look at the little dock that pops up.

01:18:57.319 --> 01:19:03.009
There's color in there, but it's very
small bits of red, small bits of yellow,

01:19:03.010 --> 01:19:09.280
small bits of green like a few pixels not huge
swatches of color in this dark environment,

01:19:09.279 --> 01:19:12.769
because that would be the same thing as the white, in fact.

01:19:12.770 --> 01:19:18.800
So, the transition to Leopard is pretty easy if you've
been a citizen so far, you've done the right things,

01:19:18.800 --> 01:19:22.510
you've used the right controls,
you've not customized too much.

01:19:22.510 --> 01:19:28.930
If you've done some customization the transition won't be
to hard necessarily, but there's a lot of stuff you know

01:19:28.930 --> 01:19:34.720
that we've provide you and we hope you feel
really good about scope bars and source list

01:19:34.720 --> 01:19:40.730
and all this the bottom bars, tool bars, all this stuff
we've given you so much more and look forward to meeting

01:19:40.729 --> 01:19:46.049
with you each individual at some time in out careers
so we can look at your application so we can look

01:19:46.050 --> 01:19:47.699
at your application and make it great on Mac OS X.

01:19:47.699 --> 01:19:59.119
Thank you for being here, sorry for running over time.