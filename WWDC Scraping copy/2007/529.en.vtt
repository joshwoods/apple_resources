WEBVTT

00:00:13.419 --> 00:00:15.550
>> Good morning.

00:00:15.550 --> 00:00:21.100
Welcome to 9 a.m. Thursday at WWDC, the finest day at WWDC.

00:00:21.100 --> 00:00:22.210
I'm excited to be here.

00:00:22.210 --> 00:00:23.269
My name is David O'Rourke.

00:00:23.269 --> 00:00:28.660
I'm the Engineering Manager for introducing Pod, for Podcast
Producer, but I'm here to talk to you to introduce it.

00:00:28.660 --> 00:00:33.060
This is the tightest, funnest, and most concise
14 hour presentation you're going to attend

00:00:33.060 --> 00:00:36.450
at WWDC and I want everyone to pay attention.

00:00:36.450 --> 00:00:42.250
There will be two three-minute
bathroom breaks, and let's get going.

00:00:42.250 --> 00:00:46.539
So the agenda's fairly straight-forward
this evening, or this morning.

00:00:46.539 --> 00:00:48.449
I was up late.

00:00:48.450 --> 00:00:52.900
Podcast is taking the world by storm for those of you
who haven't noticed or have been living under a rock.

00:00:52.899 --> 00:00:54.359
A lot of podcasting going on.

00:00:54.359 --> 00:00:58.850
We're going to talk a little bit about that and
set the context for this particular product.

00:00:58.850 --> 00:01:04.590
We're going to talk about how podcasts are produced today
without this system that I'm going to be showing you later.

00:01:04.590 --> 00:01:10.650
We're going to talk about what's built into Leopard Server
and Leopard Desktop that enables Podcast producing.

00:01:11.769 --> 00:01:13.149
We're going to talk about a case study.

00:01:13.150 --> 00:01:18.260
The case study's very interesting to me because it's
the canonical example that we've based the product on,

00:01:18.260 --> 00:01:21.840
so walking through that has helped a lot of
customers and the engineering team stay focused

00:01:21.840 --> 00:01:24.640
and tight on what the product should and shouldn't do.

00:01:24.640 --> 00:01:26.379
We're going to go behind the scenes.

00:01:26.379 --> 00:01:31.159
You're going to see some of the technology behind
Podcast Producer, understand how it's put together.

00:01:31.159 --> 00:01:33.950
You know, how you can leverage that for your needs.

00:01:33.950 --> 00:01:37.710
And this product is ripe with third-party opportunities.

00:01:37.709 --> 00:01:38.649
There's a huge market.

00:01:38.650 --> 00:01:40.290
This is the first release of this product.

00:01:40.290 --> 00:01:43.530
A lot of people are going to be deploying
it so for the developers in the audience,

00:01:43.530 --> 00:01:45.109
stay tuned to the latter part of the session.

00:01:45.109 --> 00:01:48.219
We'll be going over the developer opportunities.

00:01:48.219 --> 00:01:54.140
And lots of demos, and because
it's a video, they're really cool.

00:01:54.140 --> 00:01:56.730
Podcasting is huge.

00:01:56.730 --> 00:01:59.990
I ripped this slide off from my
manager's presentation on Monday.

00:01:59.989 --> 00:02:02.379
They've redone the graphics but it's the same one.

00:02:02.379 --> 00:02:03.530
This is phenomenal.

00:02:03.530 --> 00:02:08.400
This is weekly downloads of podcasts up through 2006.

00:02:08.400 --> 00:02:12.810
So, podcasting is clearly a media format
that's here to stay and the efficient,

00:02:12.810 --> 00:02:17.009
and the need to efficiently produce
it, it's just off the charts.

00:02:18.699 --> 00:02:26.159
So, where we stand today with podcasting is Apple,
the industry, other platforms, lesser platforms,

00:02:26.159 --> 00:02:28.579
provide a wealth of tools to capture video.

00:02:28.580 --> 00:02:33.690
We've got Final Cut Pro, we've got iMovie, we've
got Garage Band, we've got third-party utilities.

00:02:33.689 --> 00:02:37.800
Creating and capturing video while still a
difficult concept is a fairly well understood problem

00:02:37.800 --> 00:02:40.650
at this point in time, at least in my opinion.

00:02:40.650 --> 00:02:42.750
And there's multiple ways to publish content.

00:02:42.750 --> 00:02:46.830
You've got RSS feeds, you've got Apple TV, you've
got blogging, you've got QuickTime Streaming Server,

00:02:46.830 --> 00:02:50.050
you've got DVD distribution, YouTube,
the new kid on the block.

00:02:50.050 --> 00:02:51.830
Just phenomenal.

00:02:51.830 --> 00:02:54.250
And people are consuming media any way they want.

00:02:54.250 --> 00:02:55.360
They want it on their YouTube.

00:02:55.360 --> 00:02:56.420
They want it on their phone.

00:02:56.419 --> 00:02:57.769
They want it on their iPod.

00:02:57.770 --> 00:03:00.969
You know, people all have different media delivery needs.

00:03:00.969 --> 00:03:05.139
They want their media where they
want it and when they want it.

00:03:05.139 --> 00:03:08.429
This is why podcasting is so useful.

00:03:08.430 --> 00:03:12.360
So all the pieces of technology exist
today, so why do we need a product for this?

00:03:12.360 --> 00:03:14.000
I can do all of this.

00:03:14.000 --> 00:03:14.599
No problem.

00:03:14.599 --> 00:03:16.769
I don't need Leopard or Tiger.

00:03:16.770 --> 00:03:18.750
I can do this.

00:03:18.750 --> 00:03:23.030
But, the challenge with all this is steps are mostly manual.

00:03:23.030 --> 00:03:25.569
I've been in the industry 18 years and for the life of me,

00:03:25.569 --> 00:03:28.259
I don't know how I would take a
video and get it up on a website.

00:03:28.259 --> 00:03:33.310
I mean, I'm sure I could figure it out
but sitting down is a very daunting task.

00:03:33.310 --> 00:03:39.250
All the technology's available but it requires someone even
as knowledgeable as myself to follow a very complex process.

00:03:39.250 --> 00:03:43.050
You not only have to be an expert in iMovie,
you have to be an expert in blog technology.

00:03:43.050 --> 00:03:49.040
So, from ingestion to publishing, it's very, very complex.

00:03:49.039 --> 00:03:50.709
And processes like this are repeatable.

00:03:50.710 --> 00:03:56.120
I mean, I might be able to do this for three or four
videos, but what if I needed to do this for 50 videos a day?

00:03:56.120 --> 00:03:58.490
What if I needed to do it for 50 videos an houPr?

00:03:58.490 --> 00:04:04.150
I mean, a manual process starts to break down
there and it really, really doesn't scale.

00:04:04.150 --> 00:04:06.770
It requires an expertise with a diverse set of technologies.

00:04:06.770 --> 00:04:10.120
You not only need to be an expert in video,
you need to be an expert in web technologies.

00:04:10.120 --> 00:04:16.290
You need to be an expert in encoding technologies
with QuickTime, and what if my institution wants

00:04:16.290 --> 00:04:17.740
to make sure all the videos are archived?

00:04:17.740 --> 00:04:21.650
Well, do I add that as a manual checklist that
I hand out all the people doing this work?

00:04:21.649 --> 00:04:28.689
I'd like some sort of guarantee that my
institution's standards and requirements are being met.

00:04:28.689 --> 00:04:34.839
So, posting a Podcast Producer session, in my opinion
these days, is largely hand, a hand-built exercise.

00:04:34.839 --> 00:04:39.919
We have all the tools but it requires a real craftsman and
a highly motivated craftsman to put the product together.

00:04:39.920 --> 00:04:45.800
A bullet that I had from last year that a lot of people
thought was kind of fun is it's about as automated

00:04:45.800 --> 00:04:50.160
as producing a car was prior to the Model T. So,
I mean, there were cars prior to the Model T,

00:04:50.160 --> 00:04:52.840
but they were all hand-built and it required a craftsman.

00:04:52.839 --> 00:04:58.009
The Model T was the first scalable
car that could be produced.

00:04:58.009 --> 00:05:02.209
So, Leopard Server has Podcast Producer.

00:05:02.209 --> 00:05:09.060
This Podcast Producer fully automates the process
of content ingestion and podcast production.

00:05:09.060 --> 00:05:11.870
We provide all the tools you need to do this.

00:05:11.870 --> 00:05:14.550
We provide remote camera capture and control.

00:05:14.550 --> 00:05:17.600
We provide the ability to do direct file submission.

00:05:17.600 --> 00:05:20.730
We provide work flows that can automate
and standardize a process.

00:05:20.730 --> 00:05:24.140
We're going to go into that in detail in this
session and we're going to go into more detail

00:05:24.139 --> 00:05:27.240
on the follow-on session, so stay in your seats.

00:05:27.240 --> 00:05:29.439
We use standard server scaling technology.

00:05:29.439 --> 00:05:34.029
If you want to scale this system out you scale it out the
same way you scale out your web servers, your file servers,

00:05:34.029 --> 00:05:36.809
or however you scale in your data center.

00:05:36.810 --> 00:05:43.149
We have administration tools that allow you to control,
manage, and monitor the system, and it's secure end to end

00:05:43.149 --> 00:05:47.639
because if you're going to be capturing video you
don't want the students interrupting the lecture,

00:05:47.639 --> 00:05:52.740
so you've gotta have security authentication
and authorization, and we provide all that.

00:05:52.740 --> 00:05:55.189
So, what is a Podcast Producer system?

00:05:55.189 --> 00:05:59.600
I mean, if I'm going to try to sell you one of
these things, what would I ask you to buy?

00:05:59.600 --> 00:06:01.400
Well, it consists of the following components.

00:06:01.399 --> 00:06:03.620
A set of cameras from which content can be captured.

00:06:03.620 --> 00:06:05.439
We have one here on stage.

00:06:05.439 --> 00:06:08.339
Later on, you'll see that this
camera's plugged into a Mac Mini.

00:06:08.339 --> 00:06:14.169
This is a camera machine, headless Mac Mini
camera plugged in, a Podcast Producer clustered

00:06:14.170 --> 00:06:17.220
to process the video, accept and process the video.

00:06:17.220 --> 00:06:20.050
These are as many machines are your budget can afford.

00:06:20.050 --> 00:06:29.060
Work flows to specify the standards and procedures that you
want your site to apply to every podcast that's produced

00:06:29.060 --> 00:06:34.810
to the system or that's presented to the system, and
servers and storage to host and publish the content.

00:06:34.810 --> 00:06:37.579
So, you've got your cameras on the front end.

00:06:37.579 --> 00:06:42.639
These are headless machines with digital video,
with Firewire DV cameras plugged into them.

00:06:42.639 --> 00:06:45.879
They will post video to a Podcast Producer cluster.

00:06:45.879 --> 00:06:49.879
After it finishes processing video,
the Podcast Producer cluster posts it

00:06:49.879 --> 00:06:52.199
to other machines which are hosting the video.

00:06:52.199 --> 00:06:53.149
This is your web server.

00:06:53.149 --> 00:06:54.959
This is your content management system.

00:06:54.959 --> 00:06:59.430
This could be iTunes U. These other
systems are the hosting destination.

00:06:59.430 --> 00:07:02.459
And then you have the consumers that
consume the content any way they want.

00:07:02.459 --> 00:07:03.649
They may view it on an iMac.

00:07:03.649 --> 00:07:06.769
They may view it in QuickTime through an email link.

00:07:06.769 --> 00:07:12.169
They may view it on their iPod, or they may just
use iTunes, the iTunes application to play it back.

00:07:13.290 --> 00:07:17.720
So, a case study, and this was the
scenario that was presented to us

00:07:17.720 --> 00:07:20.560
when we were designing this system, is university lectures.

00:07:20.560 --> 00:07:24.899
Stanford, Berkeley, a number of
institutions are starting to do daily, hourly.

00:07:24.899 --> 00:07:28.560
They're capturing the lecture videos
and making them available later offline.

00:07:28.560 --> 00:07:30.009
So this is a very hot topic.

00:07:30.009 --> 00:07:30.939
A lot of growth.

00:07:30.939 --> 00:07:35.139
Universities are a deal for this thing
because they're disseminators of information

00:07:35.139 --> 00:07:38.189
and a lot of them want to make that public.

00:07:38.189 --> 00:07:39.980
So, what should you do?

00:07:39.980 --> 00:07:42.080
Well, deploy cameras in each of the lecture rooms.

00:07:42.079 --> 00:07:45.889
Have a facilities guy go around and put them
behind plexiglass in each of your lecture rooms.

00:07:45.889 --> 00:07:46.870
What is a camera again?

00:07:46.870 --> 00:07:52.370
It's a Mac Mini with, or any headless computer
with a Firewire DV camera plugged into it.

00:07:52.370 --> 00:07:55.189
Let the instructors remotely start and stop the camera.

00:07:55.189 --> 00:08:00.670
If I was having a Podcast Producer system here in this room,
I need to be able to control the camera in the back of room

00:08:00.670 --> 00:08:02.750
from this, from this podium machine up here.

00:08:02.750 --> 00:08:04.310
I don't want to walk back there to start the camera.

00:08:04.310 --> 00:08:06.870
I want to do it from up here.

00:08:06.870 --> 00:08:12.980
And when the, and when finished, the lectures are
automatically submitted to the Podcast Producer system.

00:08:12.980 --> 00:08:14.990
Work flows make them available to the students.

00:08:14.990 --> 00:08:18.019
The work flows down sample the video
to whatever encodings you want.

00:08:18.019 --> 00:08:21.919
High, medium, and low is the example here on
this slide but it doesn't have to be that way.

00:08:21.920 --> 00:08:28.150
Audio's extracted for people that have an iPod Nano and
they can listen to the audio only version of the podcast.

00:08:28.149 --> 00:08:29.689
Lectures are archived at the schools?

00:08:29.689 --> 00:08:35.190
Xsan or life cycle management system for future
generations of students and they're automatically posted

00:08:35.190 --> 00:08:40.450
to whatever web publishing architectures
you want to publish them to.

00:08:40.450 --> 00:08:47.420
So, an example in action, a lecturer walks in and launches
the Podcast Capture application, logs in as himself,

00:08:47.419 --> 00:08:54.229
picks a camera in the back of the room, says
Start, lectures for an hour, walks out of the room,

00:08:54.230 --> 00:08:56.920
says Stop, and then walks out of the room.

00:08:58.289 --> 00:09:01.959
The cameras automatically upload the
video to the Podcast Producer cluster.

00:09:01.960 --> 00:09:05.050
It chews on the video for however long
it takes to chew on an hour's worth

00:09:05.049 --> 00:09:07.689
of video based on the complexity of your work flow.

00:09:07.690 --> 00:09:10.480
Chews on it, chews on it, chews on it.

00:09:10.480 --> 00:09:14.519
It then publishes it to other servers
which will then host the final results.

00:09:14.519 --> 00:09:17.139
Are we posting the high quality
digital video to these servers?

00:09:17.139 --> 00:09:18.220
Not necessarily.

00:09:18.220 --> 00:09:22.500
The work flow may have archived the source
material off and that will never leave the cluster.

00:09:22.500 --> 00:09:25.750
The work flows are under your control.

00:09:25.750 --> 00:09:32.419
And then students consume it through whatever mechanism they
have available and whatever mechanism you make available.

00:09:32.419 --> 00:09:35.449
But that's a really sucky slide.

00:09:35.450 --> 00:09:40.160
Nah, actually it's pretty good, but I'd like to bring
Nathan Spindel up here on stage and actually show it

00:09:40.159 --> 00:09:42.199
to you because it's much more compelling.

00:09:42.200 --> 00:09:43.020
Thank you.

00:09:43.019 --> 00:09:48.350
( Applause )

00:09:48.350 --> 00:09:49.320
>> Good morning.

00:09:49.320 --> 00:09:53.810
I'm Nathan and I'm an engineer on the Podcast
Producer and Server Administration Team,

00:09:53.809 --> 00:09:56.979
so what I'm going to demo is what
we did in Monday in Welcome

00:09:56.980 --> 00:10:00.620
to Leopard Server session and go a little more in depth.

00:10:00.620 --> 00:10:02.539
Ah, could we go to those slides?

00:10:03.950 --> 00:10:10.120
And some of you may have recognized me from
Monday when I was dressed up as a professor.

00:10:10.120 --> 00:10:15.860
So what I'm first going to show is as a professor how you'd
record a video podcast and then I'm going to switch hats

00:10:15.860 --> 00:10:19.159
and show as a student how you would consume a podcast.

00:10:19.159 --> 00:10:24.179
So, let's say this machine is our podium
lecture machine and at the back of the room,

00:10:24.179 --> 00:10:27.549
we have a Mac Mini with a DV camera connected to it.

00:10:27.549 --> 00:10:35.049
So, I walk up and I open up Podcast Capture, which is the
application for easily ingesting video into this system

00:10:35.049 --> 00:10:38.699
and it's installed on both Leopard
Server and Leopard Desktop.

00:10:38.700 --> 00:10:45.410
So I type in my log in and this integrates
with Open Directory so this is my campus log

00:10:45.409 --> 00:10:49.079
in that I use for other services and I click Connect.

00:10:49.080 --> 00:10:52.160
And here I'm presented with four
different kinds of podcasts I can make.

00:10:52.159 --> 00:10:54.969
For now, we'll do video and we'll
come back to the others in a minute.

00:10:54.970 --> 00:11:01.210
So once I click video I can choose
which camera I want to record from.

00:11:01.210 --> 00:11:05.810
These are limited by access control lists and
as a professor I'm only limited to the rooms

00:11:05.809 --> 00:11:11.739
that I wouldn't normally record in, and as you see,
we'll get a static preview that's updated every five

00:11:11.740 --> 00:11:20.860
to ten seconds and the reason we don't do streaming
is because we want to do low bandwidth because a lot

00:11:20.860 --> 00:11:24.740
of universities said they couldn't
support full streaming video.

00:11:24.740 --> 00:11:27.919
And that hasn't updated yet, but we'll record a video now.

00:11:27.919 --> 00:11:33.219
So we click the Record button and it counts down.

00:11:36.539 --> 00:11:41.399
Never before has podcasting been this
easy for professors and students.

00:11:44.370 --> 00:11:45.659
And then we just click Pause.

00:11:45.659 --> 00:11:48.480
At this point, we can resume the recording
if we want, if we wanted to take a break

00:11:48.480 --> 00:11:52.399
in the middle of the lecture, but we'll click Publish.

00:11:52.399 --> 00:11:57.679
And so here are the last three pieces of information we need
to provide, the work flow, the title, and the description.

00:11:57.679 --> 00:12:02.769
So, the work flow is a set of actions
that happen once the media files submitted

00:12:02.769 --> 00:12:07.049
and these can be set up by your IT person.

00:12:07.049 --> 00:12:13.149
So, as a Biology professor I'm only
allowed access to three work flows.

00:12:13.149 --> 00:12:15.360
So I'll choose Human Anatomy.

00:12:15.360 --> 00:12:24.440
The title is Foolproof Podcasting, Podcasting from WABC.

00:12:24.440 --> 00:12:32.960
And at this point I clicked Done and I'm automatically
logged out of Podcast Capture and I can walk away.

00:12:32.960 --> 00:12:37.300
We designed it with kiosk security
in mind because we found that a lot

00:12:37.299 --> 00:12:42.649
of universities podium machines have kiosk
accounts, so a shared log in that everyone knows,

00:12:42.649 --> 00:12:47.809
and we wanted to design Podcast Capture that when
it's deployed automatically has kiosk security.

00:12:47.809 --> 00:12:56.549
So, as you know, when I click New Podcast, I'm asked again
for my user name and password, and this is mainly so that

00:12:56.549 --> 00:13:01.049
if after a professor's done a student
can't go and upload naughty videos.

00:13:03.000 --> 00:13:10.669
And also, note that in the Podcast Capture preferences
you can set automatic log in for a personal machine.

00:13:10.669 --> 00:13:13.569
So these are the four types of podcasts we can make.

00:13:13.570 --> 00:13:16.250
As we showed, we did video.

00:13:16.250 --> 00:13:21.350
You can also do audio only for lecture
halls that don't have video facilities,

00:13:21.350 --> 00:13:24.430
and the third is screen recording which is really fantastic.

00:13:24.429 --> 00:13:29.789
It records a video of your Mac screen
and then sends that to your students.

00:13:29.789 --> 00:13:38.159
This is great for full screen Keynote or PowerPoint
presentations and you can also do an audio track over it.

00:13:38.159 --> 00:13:40.409
And finally, there's file upload.

00:13:40.409 --> 00:13:45.289
If you already have a movie file like
a TV clip or something made in iMovie,

00:13:45.289 --> 00:13:50.730
or something made in your existing professional
video system at your university, you can record that.

00:13:51.929 --> 00:13:54.899
So, that's Podcast Capture in a
nutshell, and now I'm going to switch

00:13:54.899 --> 00:13:59.449
over to the student account and
show how you can adjust the podcast.

00:13:59.450 --> 00:14:04.879
So Podcast Producer's fantastic because it already
publishes to iTunes, it already publishes to iTunes U,

00:14:04.879 --> 00:14:09.279
as well as the new blog on Leopard Server
which can also be subscribed to in iTunes,

00:14:09.279 --> 00:14:13.919
and so students already know how to use iTunes on the iPod.

00:14:13.919 --> 00:14:19.689
So in our student account, I'll launch mail that
up to see if we have a new podcast available.

00:14:19.690 --> 00:14:27.450
Our work flow, our sample work flow already does
email notifications, so you see I've got a new podcast

00:14:27.450 --> 00:14:31.660
from myself, which is a little
strange, but it says the title

00:14:31.659 --> 00:14:36.179
of the podcast, the time, and a link to subscribe to it.

00:14:36.179 --> 00:14:38.559
So, let's click on the iTunes U link.

00:14:38.559 --> 00:14:44.609
Those of you who don't know, iITunes U is a free service
provided by Apple for high quality university content.

00:14:44.610 --> 00:14:45.629
It's extremely popular.

00:14:45.629 --> 00:14:53.340
Berkeley and Stanford are joined up with it and
there's a session later this afternoon on it.

00:14:53.340 --> 00:14:58.629
So here's our Apple University iTunes U
and these are the nine courses available.

00:14:58.629 --> 00:15:08.230
We'll click on Biology 202 which is the work flow I chose
earlier and you'll see here are the four podcasts available.

00:15:08.230 --> 00:15:15.539
We haven't yet subscribed to this so I'll click
Subscribe and you can see it starts downloading

00:15:15.539 --> 00:15:17.829
and now as a student, I'm subscribed to this podcast.

00:15:17.830 --> 00:15:22.400
Whenever a new episode is available
it'll automatically be downloaded

00:15:22.399 --> 00:15:26.539
and we can sync it with Apple TV, iPod, and soon the iPhone.

00:15:27.559 --> 00:15:30.109
So, let's watch the video.

00:15:30.110 --> 00:15:44.950
>> Never before has podcasting been
this easy for professors and students.

00:15:44.950 --> 00:15:45.080
( Applause )

00:15:45.080 --> 00:15:51.400
>> And as you saw, our sample work flow has a
beautiful intro and outro using Quartz Composer

00:15:51.399 --> 00:15:56.679
and it's been watermarked with our university's
logo and as well as the titles where it was shown.

00:15:56.679 --> 00:15:58.849
Let's look at it again just to see.

00:15:58.850 --> 00:16:01.519
Note the reflections on the bottom.

00:16:01.519 --> 00:16:07.439
>> Never before has podcasting been
this easy for professors and students.

00:16:08.519 --> 00:16:14.649
>> And this video post processing is fully customizable
and we're going to talk about that later on in the session.

00:16:14.649 --> 00:16:15.350
Back to you, David.

00:16:15.350 --> 00:16:16.540
>> Thank you, Nathan.

00:16:16.539 --> 00:16:20.099
( Applause )

00:16:20.100 --> 00:16:25.320
>> Can we go back to the slide machine, please?

00:16:25.320 --> 00:16:26.950
We have more demos.

00:16:26.950 --> 00:16:28.520
They get better.

00:16:29.929 --> 00:16:33.759
So, all of this offer that you
just saw is built in to Leopard.

00:16:33.759 --> 00:16:38.129
You don't need to purchase anything other than
Leopard and you yourself can deploy this system.

00:16:38.129 --> 00:16:45.330
So, Podcast Producer like Apple, all of Apple's things is
an integrated set of software and hardware and there's a set

00:16:45.330 --> 00:16:48.230
of desktop software and there's a set of
server software that's been integrated

00:16:48.230 --> 00:16:50.879
to work together in a seamless manner.

00:16:50.879 --> 00:16:55.830
On the desktop, we have a new agent
that we call the pcast camera agent.

00:16:55.830 --> 00:16:59.240
This is the process that remotely
listens for the Start and Stop command.

00:16:59.240 --> 00:17:02.440
It's very similar to turning on
personal file sharing or SSH.

00:17:02.440 --> 00:17:05.140
We have a podcast command line tool.

00:17:05.140 --> 00:17:07.750
We have the Podcast Capture application.

00:17:07.750 --> 00:17:14.410
The podcast command line tool can do anything the
Podcast Capture application can do, therefore, in fact,

00:17:14.410 --> 00:17:19.730
the Podcast Capture application's just
a Cocoa wrapper on tool invocations.

00:17:19.730 --> 00:17:23.519
We have a new Podcast Producer server
that I'll go into some detail later.

00:17:23.519 --> 00:17:29.059
We, of course, have server administration, and we have a
wiki and blog server that's a built in destination

00:17:29.059 --> 00:17:33.019
if you don't want to use our wiki and
blog server to host your content.

00:17:33.019 --> 00:17:34.250
And we have work flows.

00:17:34.250 --> 00:17:38.289
And we've added video commands to the command
line architecture of Mac OS X that allow you

00:17:38.289 --> 00:17:41.279
to do basic work flow operations that are common for video.

00:17:41.279 --> 00:17:47.170
We'll be going into that more later, and
publishing commands, and it's all based on Xgrid.

00:17:47.170 --> 00:17:50.840
We leverage a lot of existing technologies
for Podcast Producer for your name

00:17:50.839 --> 00:17:53.269
and password authentication that you saw Nathan use.

00:17:53.269 --> 00:17:56.109
We use Open Directory, we use Server Administration.

00:17:56.109 --> 00:17:58.629
If you want a scalable file system, we have Xsan.

00:17:58.630 --> 00:18:04.460
We use Kerberos to authenticate the whole thing
end to end, and a lot of other server technologies.

00:18:04.460 --> 00:18:08.799
So the desktop technology consists
of camera recording software.

00:18:08.799 --> 00:18:12.919
The camera recording software uses the server
for authentication command and control.

00:18:12.920 --> 00:18:17.910
The camera machine will not do anything without
the server's explicit written permission.

00:18:17.910 --> 00:18:20.470
There's remote Start, Stop, and Pause.

00:18:20.470 --> 00:18:24.039
You can up, the camera machines uploads the
finished videos to the server when it's done

00:18:24.039 --> 00:18:27.240
and the camera machine's then ready for its next recording.

00:18:27.240 --> 00:18:30.609
The camera can upload one video
while it's recording another.

00:18:30.609 --> 00:18:33.139
This allows you to schedule back to back lectures,

00:18:33.140 --> 00:18:37.040
so while the next lecture's being recorded,
the previous lecture's being uploaded.

00:18:37.039 --> 00:18:41.649
We've designed and tested the system to
run on low end headless CPUs like Mac Minis

00:18:41.650 --> 00:18:45.110
as an ideal and canonical camera deployment.

00:18:45.109 --> 00:18:48.490
There's the podcast command line tool.

00:18:48.490 --> 00:18:51.539
This offers complete control over Podcast Producer.

00:18:51.539 --> 00:18:56.680
Some people who've seen this prior to Leopard have already
scripted chron jobs that like start a camera,

00:18:56.680 --> 00:19:02.380
record for 15 minutes, then just do that every
15 minutes and submit to a security work flow.

00:19:02.380 --> 00:19:06.570
So you can control cameras, work flows, job
submissions, and joining cameras to the servers,

00:19:06.569 --> 00:19:11.000
so you can automate any action of the entire
system with some very simple shell scripting.

00:19:11.000 --> 00:19:15.890
For those of you who have Leopard already installed on
your system, not that I want you to ignore my presentation,

00:19:15.890 --> 00:19:22.000
but you can type Man pcast in the terminal
right now and you'll see a full man page.

00:19:22.000 --> 00:19:27.349
And there's a Podcast Capture application which Nathan just
demonstrated, and this is the graphical front end for people

00:19:27.349 --> 00:19:31.569
that don't know the command line for controlling the system.

00:19:31.569 --> 00:19:34.169
Server technology.

00:19:34.170 --> 00:19:37.240
There's a new server process running in MAC OS X server.

00:19:37.240 --> 00:19:40.849
This server is the conductor or
coordinator of the entire system.

00:19:40.849 --> 00:19:42.279
It keeps the camera database.

00:19:42.279 --> 00:19:44.259
It keeps the work flow database.

00:19:44.259 --> 00:19:51.559
It submits work flows to Xgrid and monitors their progress,
and it maintains security tokens for the entire system.

00:19:51.559 --> 00:19:57.619
This is what keeps it secure and this is the command and
control infrastructure for the entire computer system.

00:19:57.619 --> 00:20:01.419
We leveraged several Leopard server
technologies, web and blog content hosting, email,

00:20:01.420 --> 00:20:04.019
you saw email being used for notification.

00:20:04.019 --> 00:20:10.980
We used Xgrid for scheduling and work flow scale and you
can use Xsan or NFS for the shared file system for the grid

00:20:10.980 --> 00:20:13.569
so that you can put all the video in
one place and not have to schlep it

00:20:13.569 --> 00:20:18.059
across the network multiple times
as the work flows are working on it.

00:20:18.059 --> 00:20:21.009
And we, of course, have full integration
with Leopard Server administration.

00:20:21.009 --> 00:20:23.420
I think we have a demo of that later, do we not Kjell?

00:20:23.420 --> 00:20:23.940
Yes, we do.

00:20:23.940 --> 00:20:25.299
Thank you.

00:20:26.470 --> 00:20:30.450
I want to take a slight aside and talk about Xgrid.

00:20:30.450 --> 00:20:36.750
Xgrid is the heart of Podcast Producer and Xgrid
is Apple's large scale computing architecture.

00:20:36.750 --> 00:20:39.250
For those of you who aren't familiar
with large scale computing,

00:20:39.250 --> 00:20:42.000
perhaps you've heard of SETI@home
or Folding@Home.

00:20:42.000 --> 00:20:47.140
Xgrid allows you to deploy your very own
distributive computing system in your lab.

00:20:47.140 --> 00:20:53.990
Podcast Producer work flows are Xgrid jobs and this is
why we feel the system scales because you can add notes

00:20:53.990 --> 00:21:00.069
to your Xgrid and do more jobs at once which
allows you to process 50 videos an hour.

00:21:00.069 --> 00:21:04.019
Xgrid is built into Mac OS X desktop and server.

00:21:04.019 --> 00:21:08.859
It can be used to schedule complex jobs across many CPUs.

00:21:08.859 --> 00:21:14.849
As the jobs are run, Xgrid is dynamically figuring
out how many CPUs are required to complete this job

00:21:14.849 --> 00:21:19.409
and if there's an idle CPU in the grid, it will say,
Ooh, there's someone out there I can go and grab.

00:21:19.410 --> 00:21:21.590
I'll go put a job out on it.

00:21:21.589 --> 00:21:25.079
So, parts of the job are farmed out to idle grid CPUs.

00:21:25.079 --> 00:21:29.369
If none of the grid CPUs are idle, Xgrid
waits patiently for one of them to become idle

00:21:29.369 --> 00:21:31.899
so that it can schedule the next part of the job.

00:21:31.900 --> 00:21:34.790
This allows work flows to scale infinitely.

00:21:34.789 --> 00:21:38.909
If you start with a four node cluster and it's
not quite processing the videos fast enough,

00:21:38.910 --> 00:21:43.110
you can transparently add another four nodes,
bring them online, and without even shutting down,

00:21:43.109 --> 00:21:49.009
the Podcast Producer system will start using
those idle CPUs on the very next job submission.

00:21:49.009 --> 00:21:52.670
Podcast Producer work flows are Xgrid job descriptions.

00:21:52.670 --> 00:21:55.950
How many people here are familiar with Xgrid, please?

00:21:55.950 --> 00:22:00.480
If you know how to write and Xgrid job you
know how to write a Podcast Producer work flow,

00:22:00.480 --> 00:22:04.610
so work flows are Xgrid job descriptions.

00:22:04.609 --> 00:22:08.209
So, all Podcast Producer work flows inherently scale.

00:22:08.210 --> 00:22:14.720
If you add more CPUs to the grid, your Podcast Producer
system can handle more videos being processed at once.

00:22:14.720 --> 00:22:18.910
This allows you to scale the system
to meet your video demands.

00:22:18.910 --> 00:22:24.240
As that chart showed earlier in the presentation,
the podcast downloads are going through the roof.

00:22:24.240 --> 00:22:29.940
As your system, it's a system you buy today doesn't match
your needs you can incrementally add to the system later to,

00:22:29.940 --> 00:22:32.759
as your podcasting takes off at your site.

00:22:32.759 --> 00:22:34.890
Work flows.

00:22:34.890 --> 00:22:40.980
These are another, these work hand in hand with
Xgrid and therefore are also the heart of the system.

00:22:40.980 --> 00:22:44.630
Work flows are the heart of the Podcast Producer system.

00:22:45.710 --> 00:22:49.539
They are simply scripts and descriptions
of what you want done with the video.

00:22:49.539 --> 00:22:51.930
This is how you automate your processing.

00:22:51.930 --> 00:22:57.029
Anything you can figure out how to code up in a shell
script could be very easily turned into a work flow,

00:22:57.029 --> 00:23:00.710
therefore for your work flow processing
system you could conceive

00:23:00.710 --> 00:23:04.100
of a UNIX shell script that would do all of the steps.

00:23:04.099 --> 00:23:09.669
You can easily transcribe that into an Xgrid work
flow, install it on the Podcast Producer system

00:23:09.670 --> 00:23:13.110
and now that's a new work flow for your particular site.

00:23:13.109 --> 00:23:15.209
Work flows are Xgrid job templates.

00:23:15.210 --> 00:23:19.110
They're really Xgrid jobs with the
filename left as an exercise for the reader.

00:23:19.109 --> 00:23:24.959
You know, that's the part that the Podcast Producer system
provides only after the final video's been uploaded.

00:23:24.960 --> 00:23:30.590
Xgrid jobs are simply scripts that decide
instead of command line tools to execute.

00:23:30.589 --> 00:23:32.069
This is a sample work flow.

00:23:32.069 --> 00:23:36.549
It's been grossly simplified because Xgrid job
templates are XML and that's a little hard to read,

00:23:36.549 --> 00:23:43.769
so think of this as pseudo code, but in concept this
is what a work flow is, so I'm going to take in a movie

00:23:43.769 --> 00:23:49.589
and I want to add a watermark to that movie, so I have an
addwatermark command in my script that says original movie,

00:23:49.589 --> 00:23:54.789
mylogo, and outputs a watermark movie
that I'll use later in the work flow.

00:23:54.789 --> 00:24:00.839
I then want to add my institutions introduction video and exit
video so I have a join movie command that we're providing

00:24:00.839 --> 00:24:06.250
and it then allows me to concatenate multiple movies
together in the order specified here in the parameter list.

00:24:06.250 --> 00:24:12.619
That will join an intro video, a watermark, the watermarked
movie that I made in the previous command and an exit video.

00:24:12.619 --> 00:24:14.459
That produces full movie.

00:24:14.460 --> 00:24:17.569
Now this is where the grid comes in.

00:24:17.569 --> 00:24:22.549
I now encode that movie to four
different encodings simultaneously.

00:24:22.549 --> 00:24:27.500
If I have four idle grid nodes on the system,
all four of there'll be executing in parallel.

00:24:27.500 --> 00:24:33.529
If I have two, only two of them will be executing and the
next two will be waiting until the first one finishes.

00:24:33.529 --> 00:24:38.170
So, all of these actions happen in parallel
on the grid when you write your work flow.

00:24:38.170 --> 00:24:42.029
After I've encoded all the video, I'm going
to post the video to my various locations.

00:24:42.029 --> 00:24:47.079
Again, none of these operations depend on
each other so they can be done in parallel.

00:24:47.079 --> 00:24:52.859
If I have more grid nodes in the system and these commands
execute, the very next work flow's already being processed

00:24:52.859 --> 00:24:55.319
on the grid, the work flow behind this one.

00:24:55.319 --> 00:25:00.669
So the grid is constantly busy and constantly
being optimized to having all the machines in use

00:25:00.670 --> 00:25:03.860
so that your videos get through
the system as fast as possible

00:25:03.859 --> 00:25:08.559
Again, if your system's not big enough to handle
the load, adding Xgrid nodes will make it big enough

00:25:08.559 --> 00:25:13.440
to handle the work flow load and
there's no need to buy a new system.

00:25:16.150 --> 00:25:17.759
Filled out.

00:25:17.759 --> 00:25:23.960
This is just a sample of some of the new command line
tools that are present in Leopard to support work flows.

00:25:23.960 --> 00:25:26.039
The first column, we have editing.

00:25:26.039 --> 00:25:29.279
We have a merge and join tool for
merging and joining QuickTime movies.

00:25:29.279 --> 00:25:32.099
We have a titling tool to allow you to add titles to movies.

00:25:32.099 --> 00:25:34.719
We have a watermarking tool that lets you add watermarks.

00:25:34.720 --> 00:25:38.200
QC Effects we'll be going into
later and in the following demo.

00:25:38.200 --> 00:25:39.350
We can trim and split the movie.

00:25:39.349 --> 00:25:42.199
What if you want to trim 10 seconds
off the front and the back?

00:25:42.200 --> 00:25:43.650
We have an extract and a track.

00:25:43.650 --> 00:25:48.570
For those of you who are not familiar with QuickTime
everything's a track so we have track manipulation tools

00:25:48.569 --> 00:25:51.349
since everything being processed
through the system is QuickTime.

00:25:51.349 --> 00:25:53.209
We can delete a track and we can add a track.

00:25:53.210 --> 00:25:56.140
Perhaps you want to add a secondary
audio track to your videos.

00:25:56.140 --> 00:25:59.020
You can do that in a work flow
simply with the Add Track command.

00:25:59.019 --> 00:26:05.129
We have encoding tools, adding QuickTime annotations, set
the poster frame, encode for a particular destination, iPod,

00:26:05.130 --> 00:26:10.200
Apple TV, 3GPP, extract the track so that I
can add it to another movie and delete a track.

00:26:10.200 --> 00:26:12.490
Delete track's been duplicated there.

00:26:12.490 --> 00:26:13.230
Publishing.

00:26:13.230 --> 00:26:18.019
I can publish to the group blog, I can publish to
QuickTime streaming server, I can publish to iTunes U,

00:26:18.019 --> 00:26:21.759
I can send an email notification, and
I can publish to an iTunes podcast.

00:26:21.759 --> 00:26:23.279
These are the commands we provide.

00:26:23.279 --> 00:26:27.879
You can write your own shell scripts or your own
command line tools to extend any one of these aspects.

00:26:27.880 --> 00:26:29.450
These are just what we're providing for you.

00:26:29.450 --> 00:26:34.750
And then we have some utilities, a pre-flight
utility, a post-flight utility, archive, and copy.

00:26:34.750 --> 00:26:39.180
So these are just some of the command line tools that've
been added to Leopard to make work flows more easy.

00:26:39.180 --> 00:26:43.269
So let's go over the process again.

00:26:43.269 --> 00:26:48.220
So the professor submits a work flow to the
Podcast Producer system, it receives the video,

00:26:48.220 --> 00:26:51.019
and after it's done receiving all the video it queues it

00:26:51.019 --> 00:26:55.519
to Xgrid using the Podcast Producer
work flow running on an Xgrid cluster.

00:26:55.519 --> 00:26:57.569
The Xgrid cluster chews on the video.

00:26:57.569 --> 00:27:01.710
While it's chewing on it it'll add transitions,
watermarks, an intro and exit video,

00:27:01.710 --> 00:27:06.610
might do some text to speech or
anything else you want it to do.

00:27:06.609 --> 00:27:07.729
Video encoding.

00:27:07.730 --> 00:27:10.630
It will then encode the video to as
many different outputs as you want.

00:27:10.630 --> 00:27:13.230
If you don't want to do video encoding
don't make it part of your work flow.

00:27:13.230 --> 00:27:16.559
If you do, you can add as many encodings as you like.

00:27:16.559 --> 00:27:20.309
After we're done with that, the typical result
would be to copy and publish the results

00:27:20.309 --> 00:27:22.710
to other servers on your network or out on the Internet.

00:27:22.710 --> 00:27:27.970
Again, you encode these steps into the
work flow and once they've been published,

00:27:27.970 --> 00:27:30.920
your customers can now consume the
data by downloading the results

00:27:30.920 --> 00:27:35.259
or watching the stream from the servers you've published to.

00:27:35.259 --> 00:27:38.440
I'd like to bring Kjell Bronder up on stage
right now that's going to give you a little bit

00:27:38.440 --> 00:27:42.559
of a behind the scenes look at Server Admin
and I believe go through a brief demo.

00:27:42.559 --> 00:27:43.049
Thank you, Kjell.

00:27:43.049 --> 00:27:43.379
( Applause )

00:27:43.380 --> 00:27:48.940
>> Demo, Demo 2 or Demo 3?

00:27:48.940 --> 00:27:50.120
>> Let's start over here.

00:27:50.119 --> 00:27:57.109
So, as they said I'm Kjell Bronder, I'm an engineer on
the Podcast Producer team and so Nathan went over more

00:27:57.109 --> 00:28:03.189
about the end case, the user use case scenario so
I'm going to take you a little bit behind the scenes

00:28:03.190 --> 00:28:06.049
and show you how to administer the Podcast Producer.

00:28:06.049 --> 00:28:17.509
So I'm going to log out here the student account
and we're going to log in as the podcast admin.

00:28:17.509 --> 00:28:24.299
So, for most services that any administrator
has to set up, you're usually, use Server Admin

00:28:24.299 --> 00:28:28.009
and we're going to use Server Admin for Podcast Producer.

00:28:28.009 --> 00:28:30.140
What a surprise.

00:28:30.140 --> 00:28:38.520
And so here we're going to connect to
our rack over here and you can see

00:28:38.519 --> 00:28:40.589
that for Podcast Producer before I even start talking

00:28:40.589 --> 00:28:45.009
about the Podcast Producer service
there're several other services,

00:28:45.009 --> 00:28:49.740
underlying services that Podcast
Producer needs to actually run.

00:28:49.740 --> 00:28:53.120
So we're running an open dir, we're running
some open directory servers over here

00:28:53.119 --> 00:28:55.179
so we have an open directory master and a replica.

00:28:55.180 --> 00:28:59.630
We're running a web server and a
mail server and we're running Xgrid.

00:28:59.630 --> 00:29:05.160
As David said, Xgrid is the engine behind Podcast Producer.

00:29:05.160 --> 00:29:09.390
So let me just cheat here real quick.

00:29:14.029 --> 00:29:23.190
So this is where I was supposed to have a joke.

00:29:23.190 --> 00:29:23.400
( Typing )

00:29:23.400 --> 00:29:29.090
And did that work?

00:29:29.089 --> 00:29:34.919
So we're going to, so we're going to refresh here.

00:29:34.920 --> 00:29:38.710
Let me try it one more time.

00:29:40.170 --> 00:29:41.980
There we go.

00:29:41.980 --> 00:29:45.049
So we have the Podcast Producer service here.

00:29:45.049 --> 00:29:50.450
The overview pane, we get some status about the
different cameras that are bound to the server

00:29:50.450 --> 00:29:54.680
so these are the remote cameras like the Mac,
the camera that's bound here to the Mac Mini.

00:29:54.680 --> 00:29:58.840
We have some information here about
the Xgrid and the shared file system.

00:29:58.839 --> 00:30:02.209
So I'm going to jump straight here into the settings.

00:30:02.210 --> 00:30:04.740
So there's a shared file system.

00:30:04.740 --> 00:30:10.269
This is the file system that the Xgrid nodes use
to store the media that they'll be processing,

00:30:10.269 --> 00:30:14.599
so all the nodes have to be able to access
the movies if they want to actually process it.

00:30:14.599 --> 00:30:19.139
So this is typically the SAN
that we have over here in our rack.

00:30:19.140 --> 00:30:21.070
Then we have the information about our Xgrids.

00:30:21.069 --> 00:30:23.939
We have to point Podcast Producer to an Xgrid controller

00:30:23.940 --> 00:30:29.250
and we give it the user name to
exit that it executes the jobs as.

00:30:29.250 --> 00:30:31.069
So that's all you need to start your Podcast Producer.

00:30:31.069 --> 00:30:36.720
Once you've filled in these three different
things, you can start your Podcast Producer.

00:30:36.720 --> 00:30:43.309
Now if we jump over here to properties, the idea behind
properties is that you might have some information

00:30:43.309 --> 00:30:49.250
that is site specific that you want to apply to all of your
podcasts, so the typical example here is your watermark.

00:30:49.250 --> 00:30:54.019
You're probably going to want to watermark all your
podcast from your site with this same image.

00:30:54.019 --> 00:30:58.629
So what, so how you could do that is
you go down here to the watermark image.

00:30:58.630 --> 00:31:02.140
Can we see that in the back?

00:31:02.140 --> 00:31:10.190
So you have your watermark image here and you can set
your watermark image to your school's logo or site's logo

00:31:10.190 --> 00:31:14.529
and if it changes all you have to do
is you go in here and you change it.

00:31:14.529 --> 00:31:21.720
So, if you saw in Nathan's demo the transition between the
intro video and the main video and then the outro video,

00:31:21.720 --> 00:31:25.279
it was a swing transition and this is using Quartz Composer.

00:31:25.279 --> 00:31:33.420
And we support, the new feature that Quartz Composer has
in Leopard which is the repository and repository IDs

00:31:33.420 --> 00:31:38.330
so it's very easy for me here to go and
change what kind of transition I'll be using,

00:31:38.329 --> 00:31:42.490
so I can just change the swing
transition to let's say cube transition.

00:31:42.490 --> 00:31:48.150
So here, I just use the repository ID and I'll type in Cube.

00:31:48.150 --> 00:31:55.540
I'll save this and now my Podcast Producer will use
the cube transition instead of the swing transition.

00:31:55.539 --> 00:31:56.819
So let me show you how that works.

00:31:56.819 --> 00:32:01.519
I'm going to switch over here to, ah, it didn't stick.

00:32:01.519 --> 00:32:07.430
Sorry. There we go.

00:32:07.430 --> 00:32:16.789
So let me go over here to the professor machine
and this time we'll do a screen recording.

00:32:16.789 --> 00:32:23.500
So I'll click here on the screen and we'll choose
the line in hooked up with our microphones here

00:32:23.500 --> 00:32:28.470
and I can bring up a little Keynote that I have here.

00:32:28.470 --> 00:32:38.319
I'll prep this, so here I can just hit Record here
or I can actually use the hotkey so if I was actually

00:32:38.319 --> 00:32:44.250
in Keynote all I have to do is hit the hotkey so Command F2.

00:32:44.250 --> 00:32:47.950
And here we can play, so I can walk
through the different slides here.

00:32:47.950 --> 00:32:52.730
So this is just some demo slides that
we have here for you about the brain.

00:32:54.009 --> 00:32:57.599
You'll see in the next demo I'll have
some, we'll talk, we'll talk over these.

00:32:57.599 --> 00:33:03.939
So, now that I'm done I can just
stop it with the hotkey also.

00:33:03.940 --> 00:33:07.320
So, it went a little bit long there.

00:33:07.319 --> 00:33:12.819
So now that this is done, like I did
before, I'm just going to click Done here.

00:33:12.819 --> 00:33:17.649
I'm going to choose the same work flow
that we did before, so Human Anatomy.

00:33:17.650 --> 00:33:24.860
And this was The Structure of the Brain.

00:33:24.859 --> 00:33:31.479
This was screen capture and let me submit that.

00:33:31.480 --> 00:33:34.630
So that, now I'm being uploaded
to the Podcast Producer server.

00:33:34.630 --> 00:33:40.670
You should be seeing some blue lights flickering over there
and while that's processing I'm going to go back over here

00:33:40.670 --> 00:33:43.640
to the admin machine and I'm going to
show you some other things.

00:33:43.640 --> 00:33:46.140
So I'm going to switch back here.

00:33:47.400 --> 00:33:50.140
So here, we saw the general settings.

00:33:51.900 --> 00:33:55.370
Here is where, there's another tab
here for the work flows so this is

00:33:55.369 --> 00:33:58.809
where the admin can administer the different work flows.

00:33:58.809 --> 00:34:06.679
So we can set different, we can set different access
controls on the work flows so as you saw here,

00:34:06.680 --> 00:34:14.039
the admin machine, we only had the Biology work
flows because I logged in as a Biology teacher

00:34:14.039 --> 00:34:17.980
and as a Biology teacher I can only see those podcasts.

00:34:17.980 --> 00:34:26.269
So I can set the access down
here and why isn't it... there we go.

00:34:26.269 --> 00:34:28.150
So, there we go.

00:34:28.150 --> 00:34:34.420
So here, I have all the different, so these are all
the different work flows that are actually available

00:34:34.420 --> 00:34:40.380
on the server but you saw that when I logged in with
Podcast Capture I could only see three of them and that's

00:34:40.380 --> 00:34:48.460
because you see down, you see here only the
Biology professors have access to these work flows.

00:34:48.460 --> 00:34:55.579
I can go over here to cameras, so cameras is the
cameras that are actually bound to the Podcast Producer.

00:34:55.579 --> 00:34:59.809
So, Pacific Heights, this is this camera
that's bound here using the headless Mac Mini

00:34:59.809 --> 00:35:02.860
and is bound to the Podcast Producer over there.

00:35:02.860 --> 00:35:08.230
So we can see when it was last used by so this was when
Nathan did his demo and we can also set access controls

00:35:08.230 --> 00:35:12.130
for the cameras so you could say that
only the Biology teachers have access

00:35:12.130 --> 00:35:15.289
to the cameras in the Biology buildings.

00:35:15.289 --> 00:35:20.239
So that's the, that's the quick overview of Server Admin.

00:35:20.239 --> 00:35:25.109
I'm going to show you two other little things here.

00:35:25.110 --> 00:35:32.039
So now that I have my, can we see that in the back here?

00:35:32.039 --> 00:35:41.009
So Davo mentioned the pcast command line
tool so I'll just show that command pcast works.

00:35:41.010 --> 00:35:44.880
The Podcast capture app wraps this
command line tool so anything you can do

00:35:44.880 --> 00:35:48.960
with the capture app you can write
a command line that will do it.

00:35:48.960 --> 00:35:52.530
We'll go more into detail in the
next presentation about this.

00:35:52.530 --> 00:35:53.800
So you can list the cameras.

00:35:53.800 --> 00:35:59.019
You can start it some, you can start a recording, you can
submit anything that the Podcast Capture app you can do,

00:35:59.019 --> 00:36:02.449
you can do it through the command line tool.

00:36:02.449 --> 00:36:11.089
And if you want to have a little look even more under the
engine and see what's happening, we have Xgrid Admin.

00:36:11.090 --> 00:36:19.329
So Xgrid Admin will let me log in to the grid
that I have running over here and I will sign

00:36:19.329 --> 00:36:29.730
on using my Kerberos credentials and I
can see here that my job did not get submitted.

00:36:29.730 --> 00:36:33.780
So this was the jobs that ran on the Podcast Producer system

00:36:33.780 --> 00:36:38.250
and I can get the status while they're
running and I can see where they are at.

00:36:38.250 --> 00:36:50.690
So that's it for the Server Admin demo
and I'll hand it off back to Dave.

00:36:50.690 --> 00:36:51.139
>> Thank you.

00:36:51.139 --> 00:36:53.170
( Applause )
>> So, back to the slide machine, please.

00:36:53.170 --> 00:36:55.519
Thank you.

00:36:55.519 --> 00:36:59.309
So I'm hoping you're getting a feeling here that
Podcast Producer is actually as much as you need.

00:36:59.309 --> 00:37:03.449
You can have a small system or you can have
a large system simply by using the grid.

00:37:03.449 --> 00:37:06.009
So we've designed it to be modular and scalar

00:37:06.010 --> 00:37:11.050
so that you can actually customize the
system to your exact processing requirements.

00:37:11.050 --> 00:37:18.220
So using technologies like Xgrid and Xsan, you can
build clusters of CPUs that offer greater performance.

00:37:18.219 --> 00:37:22.899
Scaling your system is therefore just as easy as
adding another CPU to the rack or should you run

00:37:22.900 --> 00:37:28.309
out of disk space processing all this video,
adding a hard drive to your Xsan file system.

00:37:28.309 --> 00:37:33.579
Architecturally, Podcast Producer can run on a
single CPU or as our rack demonstrates over here,

00:37:33.579 --> 00:37:36.590
you can actually divvy up the functionality
and have a dedicated CPU

00:37:36.590 --> 00:37:39.720
for each particular element of Podcast Producer.

00:37:41.289 --> 00:37:45.809
So, a simple Podcast Producer deployment
might look like this, one camera,

00:37:45.809 --> 00:37:49.389
one computer, one RAID box, lots of customers.

00:37:49.389 --> 00:37:53.369
That would be for someone maybe
processing two or three videos a day.

00:37:53.369 --> 00:38:00.719
A more complex Podcast Producer system might be multiple
cameras, a dedicated cluster for processing the video,

00:38:00.719 --> 00:38:03.589
and a different cluster for hosting all of the results.

00:38:03.590 --> 00:38:09.480
Again, consumed by all the customers using the same
software and same technologies, the simple system deployed.

00:38:09.480 --> 00:38:17.559
The ideal Podcast Producer system and the one we
recommend is the minimum system, looks like this.

00:38:17.559 --> 00:38:18.630
( Laughter )

00:38:18.630 --> 00:38:22.130
But you can scale it and it can be deployed this large.

00:38:22.130 --> 00:38:26.289
If you stay for the next session you'll see a,
actually a system that dwarfs this being discussed.

00:38:26.289 --> 00:38:28.179
Stay tuned.

00:38:28.179 --> 00:38:31.159
So, Podcast Producer's an "open" system.

00:38:31.159 --> 00:38:34.210
It can be customized to meet your needs.

00:38:34.210 --> 00:38:39.780
Because work flows, are Xgrid jobs they
can be composed using any text editor.

00:38:39.780 --> 00:38:41.330
If you like BBEdit, use BBEdit

00:38:41.329 --> 00:38:45.739
If you like vi or Emacs, there is no
custom work flow editor required.

00:38:45.739 --> 00:38:48.179
They're just a shell script.

00:38:48.179 --> 00:38:53.159
We leverage Mac OS X technologies like QuickTime
and Quartz Composer to do all the image processing.

00:38:53.159 --> 00:38:57.750
So these are well understood APIs,
well understood capabilities.

00:38:57.750 --> 00:39:02.320
All of the hosting technologies that we provide are
based on standards, but even that you don't need to use.

00:39:02.320 --> 00:39:04.780
You can use your own hosting technologies
if you have a different one

00:39:04.780 --> 00:39:11.640
but the ones we provide are all standard phase, HTTP,
RSS, Podcast file formats, QuickTime streaming server.

00:39:11.639 --> 00:39:13.949
You can use FTP for your file distribution.

00:39:13.949 --> 00:39:19.750
iTunes or iTunes U. So you can publish content to any
hosting service you want simply by writing an Xgrid job

00:39:19.750 --> 00:39:22.820
that knows how to post to that particular system.

00:39:22.820 --> 00:39:28.450
So virtually any shell script can be turned into an
Xgrid job and therefore a Podcast Producer work flow.

00:39:28.449 --> 00:39:33.189
If you can script it, it can be
a Podcast Producer work flow.

00:39:33.190 --> 00:39:36.220
There are huge developer opportunities inside this system.

00:39:36.219 --> 00:39:40.989
Again, this is an idealized picture of what a Podcast
Producer system might look like and we're going to highlight

00:39:40.989 --> 00:39:44.539
on this slide where the developer opportunities exist.

00:39:44.539 --> 00:39:48.019
The first developer opportunity is your media application.

00:39:48.019 --> 00:39:51.730
What if you have customers working inside
your application and they just want

00:39:51.730 --> 00:39:54.329
to send it directly to the Podcast Producer server?

00:39:54.329 --> 00:39:57.369
Well, your application can wrap the pcast tool.

00:39:57.369 --> 00:40:00.150
Very simple, very straightforward.

00:40:00.150 --> 00:40:02.619
The second opportunity is custom work flows and tools.

00:40:02.619 --> 00:40:07.019
Apple's not going to provide all the processing
tools that you can possibly conceive of.

00:40:07.019 --> 00:40:13.170
There'll be a huge opportunity here for both custom and
professionally developed command line tools to be added

00:40:13.170 --> 00:40:16.720
to the Podcast Producer system and
then integrated into a work flow.

00:40:16.719 --> 00:40:22.730
And the final integration opportunity is your application
or service as a hosting technology or a destination.

00:40:22.730 --> 00:40:26.550
In this case, your application service might
be a tape library that archives all the video,

00:40:26.550 --> 00:40:29.280
so just don't think about end users consuming the content.

00:40:29.280 --> 00:40:34.430
You might be the archive system that you
provide to people deploying Podcast Producer.

00:40:34.429 --> 00:40:37.699
So let's talk a little more about direct content submission.

00:40:37.699 --> 00:40:41.799
During the video capture phase, Podcast
Producer's not actually streaming the video.

00:40:41.800 --> 00:40:46.510
In the demos that you saw at the stage the video
was being copied to the Mac Mini's hard drive.

00:40:46.510 --> 00:40:48.100
It's not live streaming.

00:40:48.099 --> 00:40:52.110
Only after Nathan finished the video was the file copied.

00:40:52.110 --> 00:40:57.280
This architecturally means that submitting a video
to the Podcast Producer system, whether it be live

00:40:57.280 --> 00:41:00.580
or a final result from Final Cut Pro is identical.

00:41:00.579 --> 00:41:07.969
We can process heavily edited content just as well as we can
process extemporaneous content that's been captured live.

00:41:07.969 --> 00:41:13.669
So, all you need is a movie file and you can submit
to Podcast Producer and use the work flows to take

00:41:13.670 --> 00:41:17.230
that movie file through the last stages of production.

00:41:17.230 --> 00:41:22.789
There's lots of opportunity here for direct
integration with any media application.

00:41:22.789 --> 00:41:29.029
So, application writers can simply wrap the pcast command
line tool in their application for direct submission.

00:41:29.030 --> 00:41:34.910
In fact, if you have QuickTime Pro and a QuickTime
Pro key, QuickTime player can directly submit

00:41:34.909 --> 00:41:37.779
to Podcast Producer a movie that it's viewing in its window

00:41:37.780 --> 00:41:41.380
and we ourselves use the pcast
tool and the QuickTime player.

00:41:41.380 --> 00:41:47.369
So, pcast and its set of operations allow you to build Podcast
Producer into your application so the customers don't have

00:41:47.369 --> 00:41:53.179
to exit your application, use the pcast
capture application and lose work flow context.

00:41:53.179 --> 00:41:59.710
So, here's a sample of QuickTime Player which is in
Leopard and Podcast Producer is now in the sharing menu

00:41:59.710 --> 00:42:01.929
of QuickTime Player if you have the Pro key enabled.

00:42:01.929 --> 00:42:05.369
You log on using the same name and
password as you would in the capture app.

00:42:05.369 --> 00:42:09.599
After logging in you'll be presented to the list
of work flows and the title and description.

00:42:09.599 --> 00:42:15.400
All of this can be done with pcast
capture app, the pcast command line tool.

00:42:15.400 --> 00:42:20.460
The opportunity for new work flow tools is perhaps the
most exciting to me other than the direct integration.

00:42:20.460 --> 00:42:25.699
We've had some enormously creative ideas presented
to us about what people want work flows to do.

00:42:25.699 --> 00:42:30.809
The most interesting one is someone wants the video to be
processed for facial recognition and generate a transcript

00:42:30.809 --> 00:42:34.809
of everybody that, everybody that was present in the video.

00:42:34.809 --> 00:42:38.320
So work flows are just Xgrid job templates.

00:42:38.320 --> 00:42:41.620
Xgrid jobs seem specify UNIX command line tools to execute.

00:42:41.619 --> 00:42:45.329
If you can write a UNIX command line tool to
process some video to do something useful,

00:42:45.329 --> 00:42:48.699
it can be part of a work flow for Podcast Producer.

00:42:48.699 --> 00:42:51.589
Any valid UNIX command line tool.

00:42:51.590 --> 00:42:54.700
Any valid UNIX command line or tool.

00:42:54.699 --> 00:42:55.369
Or Perl script.

00:42:55.369 --> 00:42:58.589
You have a Perl script that knows how
to post to your content management system

00:42:58.590 --> 00:43:02.780
that can be the last step in your
Podcast Producer work flow.

00:43:02.780 --> 00:43:09.150
There will be a market for additional work flow tools that
offer capabilities beyond the standard set that we ship with.

00:43:09.150 --> 00:43:14.240
And different encoding options, publishing locations,
reporting tools to report billing information,

00:43:14.239 --> 00:43:18.679
these are all huge opportunities that you
can come in and use our platform to deploy.

00:43:18.679 --> 00:43:22.199
So the possibilities of both are endless,
absolutely endless for this system.

00:43:22.199 --> 00:43:27.029
Anything you can conceive of can be run as a work flow.

00:43:27.030 --> 00:43:28.769
New work flows.

00:43:28.769 --> 00:43:31.000
Some people may not want to go to
the trouble to write a work flow.

00:43:31.000 --> 00:43:32.789
They can be very simple or very complex.

00:43:32.789 --> 00:43:36.219
We see an opportunity for canned
work flows that are much more complex

00:43:36.219 --> 00:43:39.319
than the simple ones we're shipping with the product.

00:43:39.320 --> 00:43:41.410
Apple's going to ship 12 standard work flows.

00:43:41.409 --> 00:43:42.519
These are great sample code.

00:43:42.519 --> 00:43:45.639
I encourage you to review them, look
at them, use them as a place to start,

00:43:45.639 --> 00:43:49.339
but it's very likely customers will
need to enhance these work flows.

00:43:49.340 --> 00:43:53.550
Work flows are actually software and like all
pieces of software they can always be better,

00:43:53.550 --> 00:43:56.440
they can always be faster, they can always be more complex,

00:43:56.440 --> 00:44:01.429
and we fully support adding a new work
flow to the Podcast Producer system.

00:44:01.429 --> 00:44:06.309
So, customers who want enhanced work flows
that perform more complex tasks or operations.

00:44:06.309 --> 00:44:11.590
I think the ideal combination of a product would be,
here's my work flow tool that does something on the grid

00:44:11.590 --> 00:44:14.220
and here's a set of example work
flows that show you how to use it

00:44:14.219 --> 00:44:19.029
and ship that as a bundle, but you
can package it any way you want.

00:44:19.030 --> 00:44:24.670
So, we provide the platform and customers
and third parties will provide the solutions.

00:44:24.670 --> 00:44:26.170
So, standard video extensions.

00:44:26.170 --> 00:44:31.800
All the video that our work flows use use QuickTime
and Quartz Composer to process all the video.

00:44:31.800 --> 00:44:38.890
So, everything's processed so usually they're using
QuickTime APIs or the Quartz Composer Image Composting APIs.

00:44:38.889 --> 00:44:45.799
QuickTime, as you all know, provides the industry
leading set of video and audio media manipulation APIs.

00:44:45.800 --> 00:44:46.610
It's universal.

00:44:46.610 --> 00:44:52.940
It's supported on a wide variety of platforms, so anything
you can do with QuickTime can be done with Podcast Producer.

00:44:52.940 --> 00:44:55.929
Quartz Composer is really neat.

00:44:55.929 --> 00:45:02.419
How many of you attended the Quartz
Composer presentation yesterday?

00:45:02.420 --> 00:45:08.220
Anything you can do with Quartz Composer I can
apply to a frame of a video as part of a work flow.

00:45:08.219 --> 00:45:16.309
So, we have a new tool called qc2movie and qc2movie's
a powerful new command line tool shipping with Leopard.

00:45:16.309 --> 00:45:18.610
This tool is used by the Podcast Producer work flows.

00:45:18.610 --> 00:45:23.750
The intro and exit videos that you saw and the titling
and the watermark was all done using qc2movie.

00:45:23.750 --> 00:45:25.849
The tool takes two inputs.

00:45:25.849 --> 00:45:33.389
It takes a movie file, which can be any valid QuickTime
Movie file and Quartz Composer effects with parameters.

00:45:33.389 --> 00:45:40.379
The result is a movie with Quartz Composer effect
applied to every frame of the video, therefore,

00:45:40.380 --> 00:45:46.320
anything you can conceive of or hire an artist to do
with Quartz Composer can now be done to your movie file.

00:45:46.320 --> 00:45:51.580
The watermark that we did was a static watermark,
but Quartz Composer's a dynamic description language.

00:45:51.579 --> 00:45:55.569
Picture an animated watermark being added
to the first 15 seconds of your movie

00:45:55.570 --> 00:45:58.460
to brand your videos as it goes out on the web.

00:45:58.460 --> 00:46:02.980
So anything you can do in Quartz Composer,
transitions, filters, video effects,

00:46:02.980 --> 00:46:08.360
or simple art work adjustments can be done using
Quartz Composer using the qc2movie tool as part

00:46:08.360 --> 00:46:13.640
of your work flow and you can, you, too, can create
professional video, professional looking videos.

00:46:13.639 --> 00:46:19.170
Non-programmers can use Quartz Composer to create
the composition so this means you can hire an artist,

00:46:19.170 --> 00:46:23.559
have them use Quartz Composer and have them do what they
do best, which is art work, and then you can integrate

00:46:23.559 --> 00:46:28.159
that into your work flow after they
produce the Quartz Composer composition.

00:46:28.159 --> 00:46:33.179
So, in summary what I'd like to go over are
the developer opportunities one more time.

00:46:33.179 --> 00:46:37.509
We have three unique integration points, but
there's probably more, but the ones we're calling

00:46:37.510 --> 00:46:44.440
out are your application directly submitting to Podcast
Producer, enhancing our work flow platform by adding tools

00:46:44.440 --> 00:46:51.119
and sample work flows or custom work flows for certain
customer segments, and providing alternative location

00:46:51.119 --> 00:46:57.719
such as tape storage or other things for final destinations
for the results that are being processed on the cluster.

00:46:57.719 --> 00:47:03.769
I'd like to bring Kjell up for the requisite one
more thing demo and this is very, very slick.

00:47:03.769 --> 00:47:04.130
Thank you.

00:47:04.130 --> 00:47:04.769
( Applause )

00:47:04.769 --> 00:47:10.920
>> Hi again.

00:47:10.920 --> 00:47:16.250
So, as Dave said, the Quartz Composer's really
awesome and we can really do some amazing things

00:47:16.250 --> 00:47:18.159
with Quartz Composer with Podcast Producer.

00:47:18.159 --> 00:47:24.279
As I was trying to think of some really cool, real cool idea
for a demo and I was looking back at some presentations,

00:47:24.280 --> 00:47:30.190
some other podcasts, and I looked at a Keynote
from last year and I saw at some point there is,

00:47:30.190 --> 00:47:34.950
you'd have a little video at the bottom where you
had Steve and then you have it slides up at in kind

00:47:34.949 --> 00:47:37.669
of like a main screen, kind of like an iChat Theatre thing.

00:47:37.670 --> 00:47:38.500
That's kinda cool.

00:47:38.500 --> 00:47:43.500
You might want to have like a professor in the little
box in the bottom and then have your slides in the top.

00:47:43.500 --> 00:47:51.340
So, I wrote a little QC composition here that I'd
like to show you and you'll recognize the slides.

00:47:51.340 --> 00:47:55.809
So first we'll hide the little
composition in the back here, but,

00:47:55.809 --> 00:47:58.920
take the viewer here you can see
I've got picture in picture.

00:47:58.920 --> 00:48:04.380
So here I have two movies and I'm playing back that
we recorded previously and I have the slides here

00:48:04.380 --> 00:48:06.809
that are changing and I have my little picture in picture.

00:48:06.809 --> 00:48:08.449
So this is pretty cool.

00:48:08.449 --> 00:48:11.000
But we can do so much more with Quartz Composer.

00:48:11.000 --> 00:48:15.690
So, it's great to have the slides and the main screen all
the time, but sometimes they stay the same a very long time,

00:48:15.690 --> 00:48:18.990
so wouldn't it be cool if we could
actually like just bring up the presenter?

00:48:18.989 --> 00:48:20.719
So I added a little transition.

00:48:20.719 --> 00:48:25.739
So, here it's, with the mouse, so if
I just click on the mouse here, boom,

00:48:25.739 --> 00:48:28.159
we've got the presenter in the main screen.

00:48:28.159 --> 00:48:33.949
( Applause )

00:48:33.949 --> 00:48:38.250
So, that's cool, but the problem is this
is being processed on the grid, right?

00:48:38.250 --> 00:48:45.570
So, I can't be on the grid clicking each time I want the
transition to happen, so what I did is I wrote another patch

00:48:45.570 --> 00:48:53.100
which will add automatically detect when the slides change
and if the slides stay the same for let's say five seconds,

00:48:53.099 --> 00:48:56.489
then it'll put he presenter in the main screen
and then if the slides change again, well,

00:48:56.489 --> 00:48:58.349
it'll bring the slides back into the main screen.

00:48:58.349 --> 00:48:59.139
So let me show you that.

00:48:59.139 --> 00:49:06.179
So here you can see that I have in the middle my
mouse detector down here, so let me zoom in on that.

00:49:07.260 --> 00:49:09.800
So here's where I'm detecting the mouse click.

00:49:09.800 --> 00:49:12.590
So, I'm going to take my slides movie here.

00:49:12.590 --> 00:49:19.150
I'm just going to put it into, the input to my auto slide
detection patch here and I'm going to take this input

00:49:19.150 --> 00:49:24.519
and just replace where the mouse
was and now I will bring this back.

00:49:24.519 --> 00:49:29.119
We'll make this a bit bigger so
everybody can see it and I will step back.

00:49:29.119 --> 00:49:32.769
So, I'm not clicking anymore and you will
see here the slide, the first slide is less

00:49:32.769 --> 00:49:34.840
than five seconds, so it's not going to change.

00:49:34.840 --> 00:49:39.910
This one is a bit longer, so we'll wait about five
seconds until you can see the slide real nice.

00:49:39.909 --> 00:49:41.049
There it changes all by itself.

00:49:41.050 --> 00:49:44.450
( Applause )
And wait. Slide change.

00:49:44.449 --> 00:49:45.719
Brings the slides back.

00:49:45.719 --> 00:49:49.500
( Applause )

00:49:49.500 --> 00:49:56.030
Same thing, slide sits more than five seconds, it goes
back and one last time, because I really like this thing.

00:49:56.030 --> 00:49:58.440
There you go.

00:49:58.440 --> 00:50:00.500
( Applause )
So, that's in Quartz Composer.

00:50:00.500 --> 00:50:02.769
( Applause )

00:50:02.769 --> 00:50:04.210
So Quartz Composer has the video.

00:50:04.210 --> 00:50:09.280
Ah ha, the power of Quartz Composer.

00:50:09.280 --> 00:50:11.140
>> Welcome to Bio 202, Human Anatomy.

00:50:11.139 --> 00:50:13.039
Today we'll talk about the structure of the brain.

00:50:13.039 --> 00:50:14.730
The brain's covered by three layers.

00:50:14.730 --> 00:50:17.769
The dura mater, the arachnoid mater,
and the pia mater.

00:50:17.769 --> 00:50:21.940
All three layers are composed differently
and are crucial for protecting the brain.

00:50:21.940 --> 00:50:24.970
At a bird's eye view we can say the
brain is made up of four different lobes.

00:50:24.969 --> 00:50:29.099
These lobes all have different purposes from sensory
perception to memory and to language generation.

00:50:29.099 --> 00:50:33.250
In this slide you can see the layout
of the four different lobes.

00:50:33.250 --> 00:50:36.119
Next week we'll talk about gray
matter, white matter, and neurons.

00:50:36.119 --> 00:50:37.400
See you then.

00:50:37.400 --> 00:50:40.030
>> It's just to give you a quick example
of what you can do with Quartz Composer.

00:50:40.030 --> 00:50:41.830
( Applause )

00:50:41.829 --> 00:50:42.699
Back to you, Dave.

00:50:42.699 --> 00:50:43.549
>> Thank you.

00:50:43.550 --> 00:50:46.480
( Applause )

00:50:46.480 --> 00:50:48.420
Back to the slide machines, please.

00:50:48.420 --> 00:50:51.980
Quartz Composer blows my mind.

00:50:51.980 --> 00:50:52.760
I'm a server guy.

00:50:52.760 --> 00:50:53.630
I do network bits.

00:50:53.630 --> 00:50:54.500
I do security.

00:50:54.500 --> 00:50:56.099
I do network administration.

00:50:56.099 --> 00:51:00.440
We're learning about Quartz Composer and I'm
sure someone more familiar, shall we say,

00:51:00.440 --> 00:51:04.829
in the creative arts with Quartz
Composer and Podcast Producer,

00:51:04.829 --> 00:51:10.440
the sorts of videos that could be automatically
produced through your work flows are phenomenal and,

00:51:10.440 --> 00:51:13.940
I want to thank Kjell and the team for
pulling that simple demo together.

00:51:13.940 --> 00:51:18.010
But that's just scratching the surface
of what you can do with Quartz Composer.

00:51:18.010 --> 00:51:24.080
So, in summation, Podcast Producer, we feel, is
the most powerful set of technologies ever, ever,

00:51:24.079 --> 00:51:29.849
ever shipped that allows your site to ingest, process,
and automatically publish podcasts without you having

00:51:29.849 --> 00:51:33.420
to click on the mouse to do the video switching.

00:51:33.420 --> 00:51:36.659
Because of the design of Podcast
Producer system, you can scale it.

00:51:36.659 --> 00:51:38.579
You can scale it to process more videos at once.

00:51:38.579 --> 00:51:40.289
You can scale to store more video.

00:51:40.289 --> 00:51:45.570
You can scale it to have the systems that you're
posting to scale so that when 15,000 students all try

00:51:45.570 --> 00:51:49.690
to download a video at once, the
vast majority of them succeed.

00:51:49.690 --> 00:51:53.920
The use of Xgrid allows infinite
freedom in work flow definition.

00:51:53.920 --> 00:51:56.220
There is no proprietary work flow format here.

00:51:56.219 --> 00:52:01.689
There's just Xgrid jobs and Xgrid jobs can
execute any legitimate UNIX command line script.

00:52:01.690 --> 00:52:06.000
You can use Podcast Producer to
process statistical data if you want.

00:52:06.000 --> 00:52:10.590
You don't have to process videos,
but it's most powerful for that.

00:52:10.590 --> 00:52:16.019
And Quartz Composer and QuickTime offering image processing
platform that I think is unparalleled in the industry

00:52:16.019 --> 00:52:21.739
from the point of view of automatically
processing video and producing results.

00:52:21.739 --> 00:52:25.539
And, Leopard Desktop and Server comes
with everything you need, so you can take,

00:52:25.539 --> 00:52:28.000
and it's on your Leopard Server DVD and your Leopard.

00:52:28.000 --> 00:52:32.880
You can take Leopard today, begin setting up your
trial systems, and building experience with this system

00:52:32.880 --> 00:52:38.630
so that you can come up with a roll out plan for when
you're going to start using this at your actual site.

00:52:38.630 --> 00:52:42.019
There are some related sessions that I'd like to go through.

00:52:42.019 --> 00:52:47.179
The most important related session is the
next one, which is Deploying Podcast Producer,

00:52:47.179 --> 00:52:51.099
for which we'll go into even greater
detail and some much more impressive demos

00:52:51.099 --> 00:52:53.650
about what you can do with Podcast Producer.

00:52:53.650 --> 00:52:58.250
Other sessions that might interest you are Integrating
Rich Content Publishing and Infrastructure into iTunes U,

00:52:58.250 --> 00:53:00.219
since that might be a likely destination.

00:53:00.219 --> 00:53:04.230
For many of the videos processed by
this system, that's today at 3:30.

00:53:04.230 --> 00:53:05.849
And Introducing Xsan 2.

00:53:05.849 --> 00:53:08.980
We feel like Xsan 2 is the best
file system to use for the grid.

00:53:08.980 --> 00:53:15.210
It's the highest performance, most scalable file system you
can have for the Xgrid system that's processing the system,

00:53:15.210 --> 00:53:22.559
so we might want to learn about the feature sets of Xsan 2
if you're thinking about deploying a system like this.

00:53:22.559 --> 00:53:25.940
For more information, you can contact
the server and technology group.