WEBVTT

00:00:20.010 --> 00:00:27.230
>> Hello everybody and welcome to WWDC
2007 -- the second-to-last presentation.

00:00:27.230 --> 00:00:31.109
( Applause )

00:00:31.109 --> 00:00:36.570
>> Today we will be talking about building
system images for large-scale deployment.

00:00:36.570 --> 00:00:42.920
Where this information is coming from is from the
group I am part of; Custom Software Solutions.

00:00:42.920 --> 00:00:47.370
We are responsible for imaging within Apple.

00:00:47.369 --> 00:00:50.409
First of all, let's go over who I am.

00:00:50.409 --> 00:00:54.609
First of all, I am a build engineer
for Custom Software Solutions,

00:00:54.609 --> 00:00:57.679
and I'm one of the people who actually builds the images.

00:00:57.679 --> 00:01:08.730
I act as a consultant between internal Apple groups,
external Apple groups, and our customers to work together

00:01:08.730 --> 00:01:11.579
and actually be able to fix their problems.

00:01:11.579 --> 00:01:15.849
Third, I'm an advocate for both
internal and external issues resolution.

00:01:15.849 --> 00:01:21.429
This means if we have a problem with third party
software or one of our customers has a problem

00:01:21.430 --> 00:01:26.110
with third party software, we will
go to that vendor and work with them

00:01:26.109 --> 00:01:29.560
so that we can deploy their software for our customers.

00:01:29.560 --> 00:01:31.329
Oh. Sorry.

00:01:31.329 --> 00:01:33.060
And I'm also a big geek.

00:01:33.060 --> 00:01:35.799
And a second generation V I user.

00:01:38.349 --> 00:01:42.169
Because I already run one operating system.

00:01:44.840 --> 00:01:47.409
So Custom Software Solutions.

00:01:47.409 --> 00:01:48.179
We're lucky.

00:01:48.180 --> 00:01:49.910
We're in the middle of everything.

00:01:49.909 --> 00:01:51.909
We get to see our big projects.

00:01:51.909 --> 00:01:55.670
Our main customers education, Enterprise --

00:01:55.670 --> 00:01:59.670
we put government and Enterprise --
and then we also do iPod imaging.

00:01:59.670 --> 00:02:07.450
This is usually for corporate gifting, but we have
many customers who are using it for new and novel ways

00:02:07.450 --> 00:02:12.560
of advertising to welcoming new sales people.

00:02:13.629 --> 00:02:17.990
Also, when we're talking about
large scale, what is large scale.

00:02:17.990 --> 00:02:22.080
Our biggest to date is probably about
37-and-a-half thousand machines.

00:02:22.080 --> 00:02:25.600
Within the next year we hope to bump this to 60.

00:02:25.599 --> 00:02:28.829
The thing about this is the only limitation

00:02:28.830 --> 00:02:36.270
on how many custom machines Apple can produce is
how many machines are coming out of the factory.

00:02:36.270 --> 00:02:39.100
Every one of our machines can be customized.

00:02:39.099 --> 00:02:46.199
Our factories are ready for it but -- come on!

00:02:46.199 --> 00:02:49.659
So we're going to go through first a very general overview.

00:02:49.659 --> 00:02:50.569
What is imaging.

00:02:50.569 --> 00:02:54.079
Get everybody in the same vocabulary.

00:02:54.080 --> 00:03:00.469
Then I want to talk about where in this whole
process you can actually do customizations.

00:03:00.469 --> 00:03:03.460
Where the easy places to effect change.

00:03:03.460 --> 00:03:06.219
Then let's talk about some of these implementations.

00:03:06.219 --> 00:03:13.479
Talk about how they actually work, and we'll actually
go through some command line to accomplish it.

00:03:13.479 --> 00:03:14.789
Then I'm very lucky.

00:03:14.789 --> 00:03:16.679
We have two case studies for you.

00:03:16.680 --> 00:03:20.590
The first case study is going to be from Josh
Wiserbaker (assumed spelling) from Enterprise.

00:03:20.590 --> 00:03:24.319
The second one is going to be for education,
and that's by Daryl Haws (assumed spelling).

00:03:24.319 --> 00:03:31.909
Then we're going go through a Q and A.
First, the wonderful world of imaging.

00:03:31.909 --> 00:03:34.349
What is imaging?

00:03:34.349 --> 00:03:40.409
When we go down to the very base
components, it's a series of customizations.

00:03:40.409 --> 00:03:50.219
We want the system -- sorry -- we want the
system preconfigured before the user gets it.

00:03:50.219 --> 00:03:53.009
Which is why we build the images.

00:03:53.009 --> 00:03:55.090
One, because it costs less.

00:03:55.090 --> 00:04:00.080
If we're doing things exactly the
same, we can streamline the delivery.

00:04:00.080 --> 00:04:04.680
Also, if you have a computer that
fails, you need to add a new one,

00:04:04.680 --> 00:04:08.680
we have rapid return to service if
everything is on the same image.

00:04:08.680 --> 00:04:14.230
Consistent computing environments are
what a lot of our custom machines go into.

00:04:14.229 --> 00:04:19.370
For example, university computer environments, or kiosks.

00:04:19.370 --> 00:04:26.420
The one thing that your customers are
going to expect, and of course the quotes,

00:04:26.420 --> 00:04:31.230
all problems are going to be fixed
before they see this image.

00:04:33.089 --> 00:04:36.389
How do you deploy these images?

00:04:36.389 --> 00:04:41.439
Well, for new and existing images,
we can use all of Apple Suite.

00:04:41.439 --> 00:04:44.649
ARD. System image utility, ASR.

00:04:44.649 --> 00:04:49.509
And we just went over for new Macs,
we'll deploy them for you.

00:04:49.509 --> 00:04:54.389
We'll worry about putting all of the bits on the disc.

00:04:54.389 --> 00:04:59.439
In all of this, we'll just cover all
of our different deployment types.

00:04:59.439 --> 00:05:03.100
Our deployment times are segmented in two major categories.

00:05:03.100 --> 00:05:07.140
The first one is common computing environments.

00:05:07.139 --> 00:05:10.360
This machine will be used by multiple people.

00:05:10.360 --> 00:05:11.910
It's not a one to one.

00:05:11.910 --> 00:05:14.410
It is for a lab, a kiosk.

00:05:14.410 --> 00:05:20.930
The second one is when that computer
is owned by one specific person.

00:05:20.930 --> 00:05:22.620
We call these one to ones.

00:05:22.620 --> 00:05:26.410
We do those for higher Ed and K through 12.

00:05:27.790 --> 00:05:32.189
And to give you our vocabulary when
we talk about a monolithic image.

00:05:32.189 --> 00:05:35.689
This is what I bet you guys do now.

00:05:35.689 --> 00:05:37.990
This is bits on top of hardware.

00:05:37.990 --> 00:05:40.530
We are going to build an image.

00:05:40.529 --> 00:05:46.019
Get ASR, pull it off the disc, and
then deploy it as many times as we can.

00:05:46.019 --> 00:05:52.639
Incremental is where you build your image
slowly, one piece on top of the other.

00:05:52.639 --> 00:05:53.909
Third, hybrid.

00:05:53.910 --> 00:05:55.860
This is what we do within Apple.

00:05:55.860 --> 00:06:01.910
We use a monolithic base, and then we use
incremental improvements on top of that.

00:06:01.910 --> 00:06:04.750
We'll go into that in just a little bit.

00:06:04.750 --> 00:06:09.300
The advanced characteristics that I
want all of you to remember as I'm going

00:06:09.300 --> 00:06:13.079
through this is we want to be hardware independent.

00:06:13.079 --> 00:06:21.169
I'm not talking about our competitor hardware independent,
but any Mac, you should be able to put your image on.

00:06:21.170 --> 00:06:29.720
So for example, I am deploy a MacBook and a MacBook
Pro from our factory with an identical image.

00:06:29.720 --> 00:06:34.170
There's no need to have very specific hardware independence.

00:06:34.170 --> 00:06:36.449
Second, modularity.

00:06:36.449 --> 00:06:41.430
We are in the business of pushing very large,
very complex images through our factory.

00:06:41.430 --> 00:06:46.819
So we want to break these images
into as small pieces as possible.

00:06:46.819 --> 00:06:50.589
And use these pieces between projects.

00:06:50.589 --> 00:06:54.259
Having these pieces separate from
each other let's us test these,

00:06:54.259 --> 00:06:58.730
and we get reproducible imaging component by component.

00:06:58.730 --> 00:07:01.290
And again, layering.

00:07:01.290 --> 00:07:02.569
I get that a lot.

00:07:02.569 --> 00:07:03.909
Traceability.

00:07:03.910 --> 00:07:10.050
Traceability is very big because you need
to know your customer's environments,

00:07:10.050 --> 00:07:15.060
and then you need to engineer a solution
that accomplishes these requirements.

00:07:15.060 --> 00:07:22.480
Traceability let's you know what you put on there, how
you put it on there, and how you need to do it next time.

00:07:22.480 --> 00:07:25.350
Reduce complexity.

00:07:26.569 --> 00:07:28.959
Focus on the customization opportunities.

00:07:28.959 --> 00:07:32.979
A lot of the Apple ecosystem is there to help you.

00:07:32.980 --> 00:07:39.720
You don't need to worry about finding
two Novel of solutions.

00:07:39.720 --> 00:07:44.350
We'll show you here how to make your
life quite a bit easy -- easier.

00:07:44.350 --> 00:07:47.750
And then, also the economies of scale.

00:07:47.750 --> 00:07:54.829
I need to be able to put an image on 100
computers this week -- maybe 7,000 next week.

00:07:54.829 --> 00:07:56.539
How do you accomplish that.

00:07:56.540 --> 00:08:02.710
How do you know that when you build your smaller image
that it can then be ported to the larger environment?

00:08:02.709 --> 00:08:06.149
So customization opportunities.

00:08:06.149 --> 00:08:11.179
This will be our -- most of our
content section of the presentation.

00:08:11.180 --> 00:08:15.920
So what is a customization opportunity?

00:08:16.970 --> 00:08:21.390
We define that as the little places
within the praising system

00:08:21.389 --> 00:08:25.389
where it's really easy to change how an application works.

00:08:25.389 --> 00:08:32.370
For example, changing how an application
runs is registering it.

00:08:32.370 --> 00:08:35.320
It's preconfiguring user settings.

00:08:36.509 --> 00:08:38.819
So what are favorable junctures?

00:08:38.820 --> 00:08:42.040
Your first set of favorable junctures are file system ones.

00:08:42.039 --> 00:08:45.819
Because we're going to say that your
machine has not yet been booted.

00:08:45.820 --> 00:08:49.400
If it's not booted you can't use any APIs on that system.

00:08:49.399 --> 00:08:53.240
You must be sure that all of your
file system is written before hand.

00:08:53.240 --> 00:08:57.560
The next, is when you are actually on the system booted.

00:08:57.559 --> 00:09:00.679
You have many avenues here.

00:09:00.679 --> 00:09:03.989
Boot. Launch Demon, launch agents.

00:09:03.990 --> 00:09:07.889
If you're running on older versions of OS X, start up items.

00:09:07.889 --> 00:09:12.539
You know? When a user logs in, many operations can be done.

00:09:12.539 --> 00:09:15.189
And they can even be system-wide operations.

00:09:15.190 --> 00:09:23.610
And the first time a processor application is started
is also a very good place to do customizations.

00:09:25.799 --> 00:09:28.269
Let's look at the big picture.

00:09:28.269 --> 00:09:30.879
So we're talking about deployment.

00:09:30.879 --> 00:09:34.490
But unfortunately deployment is
the center of this whole equation.

00:09:34.490 --> 00:09:40.080
You're going it lose contact with your
machine as soon as it is deployed.

00:09:40.080 --> 00:09:43.220
So what happens after its deployed.

00:09:43.220 --> 00:09:44.680
Hopefully they turn it on.

00:09:44.679 --> 00:09:49.000
When they turn it on you, of course,
have your boot, your services,

00:09:49.000 --> 00:09:52.500
set up assistant will run, an then the user logs in.

00:09:52.500 --> 00:10:00.759
Well, if the system is running, you also need to worry
about current users, future users, users that are Admin,

00:10:00.759 --> 00:10:10.509
users that are standard, and by the way, of course, all
of this is on OS X. And in order to make everything work

00:10:10.509 --> 00:10:15.090
after the deployment, we always use the Apple installer.

00:10:15.090 --> 00:10:18.389
But we did drink the cool aid.

00:10:18.389 --> 00:10:20.250
So your base OS.

00:10:20.250 --> 00:10:21.759
What cat are you using?

00:10:21.759 --> 00:10:25.090
This presentation is mainly going to be for Tiger.

00:10:25.090 --> 00:10:26.600
I apologize for that.

00:10:26.600 --> 00:10:32.850
But all of the concepts you are going to see
here you can definitely pass on to Leopard.

00:10:32.850 --> 00:10:35.790
But Leopard will make your life quite a bit easier.

00:10:35.789 --> 00:10:47.719
Because you have far updated tools and session before
this and session after this -- very good technical detail.

00:10:47.720 --> 00:10:53.149
So why am I so worried about OS X, why am
I so worried about the operating system?

00:10:53.149 --> 00:10:55.509
That is the decoupled base of our image.

00:10:55.509 --> 00:11:02.460
We always build on top of whatever the latest
shipping operation is from our factory.

00:11:02.460 --> 00:11:06.820
A note on Tiger, remember, there is a Power
PC version, there is an Intel version.

00:11:06.820 --> 00:11:09.870
With Leopard, that, of course, goes away.

00:11:09.870 --> 00:11:15.919
On your base OS, we always include
software updates and drivers.

00:11:15.919 --> 00:11:24.919
So that way after you've completed your base OS, you can
then test it, log in, see if everything works correctly,

00:11:24.919 --> 00:11:29.399
and then worry about laying your image on top of it.

00:11:29.399 --> 00:11:34.919
Now we're going through and we're talking
about processes, and we're talking about time.

00:11:34.919 --> 00:11:38.759
I want to step back for a minute, and
I want to talk about the file system.

00:11:38.759 --> 00:11:44.679
Because we're definitely straddling do you
write a file, or do you call a process.

00:11:44.679 --> 00:11:48.279
So this is my view of the world.

00:11:48.279 --> 00:11:49.250
The kernel, of course.

00:11:49.250 --> 00:11:52.000
Do you require kernel extensions, drivers.

00:11:52.000 --> 00:11:58.200
System domain is generally what Apple gets to control.

00:11:58.200 --> 00:12:02.740
You will turn services on an off within there, but
you're not really going to do a whole lot in there.

00:12:02.740 --> 00:12:04.950
And of course these are template.

00:12:04.950 --> 00:12:12.390
The local domain or the UNIX domain is where
most of your customizations will happen.

00:12:12.389 --> 00:12:14.370
Besides user customizations.

00:12:14.370 --> 00:12:18.330
User customizations are always
layered on top of everything else.

00:12:18.330 --> 00:12:24.120
So the one thing that this picture does
not show is that your standard users

00:12:24.120 --> 00:12:32.070
and your administrative users will have
different permissions in different domains.

00:12:36.779 --> 00:12:43.459
Your first time that you can customize during
the execution of a Macintosh is of course boot.

00:12:43.460 --> 00:12:45.960
But why is this important?

00:12:45.960 --> 00:12:48.879
Well, we do everything when the machine is not booted.

00:12:48.879 --> 00:12:55.600
Therefore we can not get I P addresses -- Mac addresses,
and we cannot get the serial number of the Macintosh.

00:12:55.600 --> 00:12:59.129
So we use first boot to go through and configure all

00:12:59.129 --> 00:13:06.759
of these hardware customizations we could
not do while the system was not booted.

00:13:08.039 --> 00:13:16.990
The next thing that we use -- I apologize --
what we also do on boot is paranoia and security.

00:13:16.990 --> 00:13:19.970
So we will reset the firm ware password.

00:13:19.970 --> 00:13:23.139
Either the first time or every time, if you would like.

00:13:23.139 --> 00:13:26.299
And a lot of our customers use tattle-tale scripts.

00:13:26.299 --> 00:13:28.679
Is this student adding software.

00:13:28.679 --> 00:13:31.549
Is this student adding MP3s.

00:13:31.549 --> 00:13:35.209
Is this student changing permissions on the file system.

00:13:36.320 --> 00:13:42.660
After boot, set up assistant is your
user's usually first introduction

00:13:42.659 --> 00:13:52.159
to OS X. You can invoke set up
assistant even if I user is defined.

00:13:52.159 --> 00:13:58.259
So for example, you have a head
administrator for your IT help desk.

00:13:58.259 --> 00:14:03.039
So that way a student calls in, you
can get into their machine and help.

00:14:04.279 --> 00:14:11.720
Well, you can set up this user, invoke set
up assistant, and then that user will get

00:14:11.720 --> 00:14:17.420
to create their own administrative user
with their user name and their password.

00:14:17.419 --> 00:14:24.889
This will let you have control over the system,
and then let your user customize on top of that.

00:14:24.889 --> 00:14:29.620
Please remember; it does create an administrative account.

00:14:29.620 --> 00:14:33.649
We're going to talk about localization
clean up here in a few minutes.

00:14:33.649 --> 00:14:39.709
Localization clean up is a service that runs
after set up assistant that will go through

00:14:39.710 --> 00:14:46.740
and trim language content, or local-specific
applications for you.

00:14:46.740 --> 00:14:50.269
Final note; set up assistant does step on preferences.

00:14:50.269 --> 00:14:55.860
So if you want to set a user name and you
set it on first boot, then forget about it.

00:14:55.860 --> 00:15:00.000
Whatever your user defines is going
to be the name of that host.

00:15:01.309 --> 00:15:05.149
Log in hooks are very frequently used by our customers.

00:15:05.149 --> 00:15:10.870
First main purpose is updating the
software, or updating virus definitions.

00:15:13.379 --> 00:15:17.789
How do you know when that update is complete?

00:15:17.789 --> 00:15:20.159
Or do you care if that update completed?

00:15:20.159 --> 00:15:25.539
So what we would like you to do is
create completion-based log in hooks.

00:15:25.539 --> 00:15:29.389
For example, let's say you need a trim software.

00:15:29.389 --> 00:15:35.230
Well, if the user logs in and they say,
oh, I want all the software on there.

00:15:35.230 --> 00:15:42.180
And kill your completion based log in hook, they
should be prompted the next time they log in.

00:15:42.179 --> 00:15:45.959
This also enables user independent
configuration, but be careful.

00:15:45.960 --> 00:15:49.639
These log in items -- log in hooks -- do run as root.

00:15:49.639 --> 00:15:52.340
So you can definitely cut your foot off.

00:15:53.509 --> 00:16:02.759
Application execution is the final place to do
customizations in the timeline I'm presenting.

00:16:02.759 --> 00:16:09.799
When an application is executed it should
always check for its user preferences.

00:16:09.799 --> 00:16:14.639
Anything in the local or system domain
that it needs, including frameworks.

00:16:14.639 --> 00:16:21.379
Any services, demons, or agents that it
relies on, and, of course, kernel support.

00:16:21.379 --> 00:16:27.600
We'll talk about this in detail
during our implementation discuss.

00:16:27.600 --> 00:16:30.420
Let's revise the big picture.

00:16:31.710 --> 00:16:39.210
So now we have a mirror image of our
boot process or each one of our installs.

00:16:39.210 --> 00:16:47.210
I want to show you that for each software we decide to
include -- or our customers decide to include in an image --

00:16:47.210 --> 00:16:49.800
we need to worry about all the different phases

00:16:49.799 --> 00:16:56.719
of customization opportunity for
that software to be successful.

00:16:56.720 --> 00:17:03.970
Give you guys some testing considerations to
think about during this whole presentation.

00:17:03.970 --> 00:17:06.940
You must know your destination environment.

00:17:06.940 --> 00:17:13.940
Not only, you know, is it going into a lab, or
is it going into, you know, teacher's office.

00:17:13.940 --> 00:17:15.720
What type of lab is it going into.

00:17:15.720 --> 00:17:17.769
What type of teacher is that.

00:17:17.769 --> 00:17:21.619
Who is this destination user and how will they be using it.

00:17:21.619 --> 00:17:26.369
What support software are they going to
need to accomplish what they want on that.

00:17:26.369 --> 00:17:32.309
If you install two pieces of software, will
one of them step on the other's preferences,

00:17:32.309 --> 00:17:36.829
or will one of them cause another
piece of software not to run.

00:17:36.829 --> 00:17:42.059
And, unfortunately, we do have to
worry a little bit about hardware.

00:17:42.059 --> 00:17:47.460
For example, let's say you are
deploying on a very old iBook.

00:17:47.460 --> 00:17:49.160
These have modems.

00:17:49.160 --> 00:17:51.650
Now you want to put your image on a MacBook.

00:17:51.650 --> 00:17:53.450
They do not have modems.

00:17:53.450 --> 00:17:57.789
If you use the same monolithic
image for the same configurations,

00:17:57.789 --> 00:18:02.039
you're going to see an phantom modem on your MacBook.

00:18:02.039 --> 00:18:06.200
And that will definitely confuse your users.

00:18:06.200 --> 00:18:11.830
So how do we control this image as we're going
through and figuring out how to implement it.

00:18:11.829 --> 00:18:20.309
First thing, except 30 percent, or at least a
third of your time is just defining the image.

00:18:20.309 --> 00:18:29.849
Just figuring out what the customer actually wants on there,
as opposed to, well, could you turn that preference on.

00:18:29.849 --> 00:18:32.009
And that's the next one.

00:18:32.009 --> 00:18:36.480
Do task-based definition.

00:18:36.480 --> 00:18:39.289
Not turn off ARD.

00:18:39.289 --> 00:18:46.210
Say, we don't -- we would not like our
students to be able to ARD other machines.

00:18:46.210 --> 00:18:48.779
Different perspective on it.

00:18:48.779 --> 00:18:52.430
Treat image creation as traditional software.

00:18:52.430 --> 00:18:57.490
This is -- this is creating a product.

00:18:57.490 --> 00:19:05.349
So please use software development cycles,
and of course, your favor, Quarter Vision.

00:19:05.349 --> 00:19:07.469
Be creative.

00:19:07.470 --> 00:19:11.930
Remember, a lot of the people who are writing
the software aren't necessarily thinking

00:19:11.930 --> 00:19:15.310
that it's going to be deployed to 100,000 kids.

00:19:15.309 --> 00:19:27.639
So please be sure -- please be sure that
you be creative, but also keep it simple.

00:19:27.640 --> 00:19:30.160
The next two, of course, be methodical, be organized.

00:19:30.160 --> 00:19:33.800
These definitely relate back to your software development.

00:19:33.799 --> 00:19:45.230
But the more methodical you are, the more organized
you are, the more reproducible your images will be.

00:19:45.230 --> 00:19:49.599
Also how do we reduce our image complexity.

00:19:49.599 --> 00:19:51.649
Again, you saw for development techniques.

00:19:51.650 --> 00:19:54.269
They have been studied for a very long time.

00:19:54.269 --> 00:19:56.519
They work.

00:19:56.519 --> 00:19:57.819
Specify desire.

00:19:57.819 --> 00:19:59.490
Not implementation.

00:19:59.490 --> 00:20:02.960
So the customization opportunities that we go through,

00:20:02.960 --> 00:20:08.880
that's where we have found that
customizations work the best.

00:20:08.880 --> 00:20:13.130
You might find other ones, but I
would suggest starting at these.

00:20:14.259 --> 00:20:18.660
Everything within Apple is an ecosystem.

00:20:18.660 --> 00:20:21.360
Use the Apple ecosystems.

00:20:21.359 --> 00:20:23.629
Also Apple mailing lists.

00:20:23.630 --> 00:20:29.070
A lot of engineers do troll those, and if you have
questions, a lot of times they will be answered.

00:20:29.069 --> 00:20:32.950
But I cannot say that they will always be answered.

00:20:32.950 --> 00:20:42.509
So let's try -- so how do we implement these
customizations of the how do we take this knowledge

00:20:42.509 --> 00:20:49.319
of the customization opportunity and what
we want the image to do and combine them?

00:20:50.539 --> 00:20:51.920
Start at the beginning again.

00:20:51.920 --> 00:20:53.950
Preconfiguration.

00:20:53.950 --> 00:20:57.950
Your development machine should be big.

00:20:57.950 --> 00:21:04.269
For example, if you're trying to do an
image on an iBook compared to a Mac Pro,

00:21:04.269 --> 00:21:08.730
you're going to have a very big
difference in the imaging speed.

00:21:08.730 --> 00:21:15.309
Also, I heard in the last conversation -- in the
last discussion -- please use target disc mode.

00:21:15.309 --> 00:21:20.639
That is the easiest way to get your
image monolithically on a machine.

00:21:20.640 --> 00:21:25.170
But remember ownership much and
where do you get the base OS.

00:21:25.170 --> 00:21:28.710
You get it from your DVDs that come in the box.

00:21:28.710 --> 00:21:36.269
Or you can go out and get a shrink-wrapped copy of OS X.
But remember, if you get a shrink-wrapped copy of OS X,

00:21:36.269 --> 00:21:43.589
that doesn't include iLife in the iWorks
trial and other applications like that.

00:21:45.259 --> 00:21:51.430
When you're installs software, the
drag and drop ones are of course easy.

00:21:51.430 --> 00:21:54.930
But what else is there?

00:21:54.930 --> 00:21:56.500
You know, of course, we're Apple.

00:21:56.500 --> 00:22:00.099
We're going to say we want you to use the Apple installer.

00:22:00.099 --> 00:22:02.569
There are other installers, and they work very well.

00:22:02.569 --> 00:22:05.349
But just be sure they do work in your environment.

00:22:05.349 --> 00:22:09.490
If you're sure they work in a non root volume.

00:22:10.690 --> 00:22:17.870
During your application installation, remember, you
have a current user, you have other users on the system,

00:22:17.869 --> 00:22:20.849
and you have future users of that system.

00:22:20.849 --> 00:22:26.480
If you need to do configuration, do it
for all three categories of these users.

00:22:26.480 --> 00:22:34.829
And local preferences and resources, for example,
frameworks and preference files should be read and verified.

00:22:37.299 --> 00:22:40.289
Local domain customization.

00:22:40.289 --> 00:22:44.470
For example, Mac address.

00:22:44.470 --> 00:22:51.569
You need your Mac address to be
able -- or -- start from the top.

00:22:51.569 --> 00:22:52.869
Booted versus non booted.

00:22:52.869 --> 00:22:59.929
So -- if your machine is booted, you have access to all of
the APIs, you have access to all of the command line tools.

00:22:59.930 --> 00:23:02.460
If it's not booted, you don't.

00:23:02.460 --> 00:23:05.140
How do you go through and customize those changes.

00:23:05.140 --> 00:23:10.790
In our environment we will usually
pick a P-list or modify a P-list.

00:23:10.789 --> 00:23:17.139
Also, hardware-specific settings
used by applications need to be set.

00:23:18.309 --> 00:23:20.819
And other hardware.

00:23:20.819 --> 00:23:24.339
So are your students using a microscope?

00:23:24.339 --> 00:23:29.209
Do you have a big board for those students to use?

00:23:31.460 --> 00:23:35.559
Let's talk about how to implement setting the computer name.

00:23:35.559 --> 00:23:38.220
In this situation we are dealing with Tiger.

00:23:38.220 --> 00:23:40.680
So we do the conventional start up item.

00:23:40.680 --> 00:23:47.289
Within this start up item we use the command line utilities,
S C Util, to go through and set the computer name.

00:23:47.289 --> 00:23:49.359
But remember, this is on start up.

00:23:49.359 --> 00:23:53.439
So we have two different styles of
start up items that our users use.

00:23:53.440 --> 00:23:55.850
Self-destructing ones based on completion.

00:23:55.849 --> 00:23:57.519
Okay. I set the computer name.

00:23:57.519 --> 00:23:58.559
I'll just go ahead and die.

00:23:58.559 --> 00:24:01.609
And then the continuous ones.

00:24:04.759 --> 00:24:12.250
The only difference between setting
the user name programatically

00:24:12.250 --> 00:24:16.809
and setting it on this image is just when it happens.

00:24:16.809 --> 00:24:25.089
When is the information available on that note I
would really like to talk about ARD real quick.

00:24:25.089 --> 00:24:32.399
Because when you're going through and implementing your
local domain customizations, ARD can help you quite a bit.

00:24:32.400 --> 00:24:40.750
Network set up and systems set up are two executables
you can use to ply your system customizations.

00:24:40.750 --> 00:24:44.529
The reasons these are good and
interesting is that they are an API.

00:24:44.529 --> 00:24:46.889
You are not hacking P-lists.

00:24:46.890 --> 00:24:52.050
You can probably assume that they're
not going to change significantly.

00:24:53.329 --> 00:24:57.279
Now we get back to user customizations.

00:24:57.279 --> 00:25:02.500
Bi-host (assumed spelling) preferences are the
biggest question that our group gets asked.

00:25:02.500 --> 00:25:05.319
Well, let's go over what bi-host setting is.

00:25:05.319 --> 00:25:09.289
Let's say you have a common computing environment.

00:25:09.289 --> 00:25:15.210
That means you might have very low end
machines on one side for just e-mail and Web.

00:25:15.210 --> 00:25:20.509
And you might have very high end machines
for video editing on the other side.

00:25:20.509 --> 00:25:24.819
If a user sits down at the lower powered
machines, they're probably not going

00:25:24.819 --> 00:25:28.339
to want a very graphically intensive screen saver.

00:25:28.339 --> 00:25:35.849
Whereas if they are on the final cut machine, then
they will have the beefiness for a good screen saver.

00:25:35.849 --> 00:25:40.909
Well, that's where bi-host settings come in.

00:25:42.140 --> 00:25:49.770
They let you configure your settings
for the specific machine you were on.

00:25:49.769 --> 00:25:54.500
User customization for software is our next biggest problem.

00:25:54.500 --> 00:26:01.000
A lot of times software developers will say,
yeah, registration belongs in the local domain.

00:26:01.000 --> 00:26:05.480
Our problem with that is a lot of times
they'll put it in the local domain

00:26:05.480 --> 00:26:09.940
and not give standard users right to see that license.

00:26:09.940 --> 00:26:12.740
That means that your standard user is going to log in,

00:26:12.740 --> 00:26:18.680
and they're going to be prompted
for license information every time.

00:26:18.680 --> 00:26:29.890
Software configuration, also -- and user preferences.

00:26:29.890 --> 00:26:33.410
So let's go over bi-host configuration.

00:26:33.410 --> 00:26:39.920
What we are trying to do here is we are
trying to suppress the Bluetooth menu item.

00:26:39.920 --> 00:26:44.029
So the Bluetooth symbol in the
upper right-hand side of the screen.

00:26:44.029 --> 00:26:47.579
This is actually done through the system UI server.

00:26:47.579 --> 00:26:57.990
If we look at the format of a bi-host P-list,
it always goes domain, hardware address, P-list.

00:26:57.990 --> 00:27:02.670
So we'll see com Apple system UI server is the domain.

00:27:02.670 --> 00:27:08.850
Decaf bad is the IP it the Mac address -- and P-list.

00:27:08.849 --> 00:27:17.859
So what we would do is we would go through and in each
user's bi-host directory we will put a template file.

00:27:17.859 --> 00:27:25.869
We will put the file with all the content and either
put decaf bad, or any other token in there to show us

00:27:25.869 --> 00:27:31.469
that we need -- that that file needs bi-host provisions.

00:27:31.470 --> 00:27:36.339
On the first boot we are going to look in all
of the bi-host directories, find the files,

00:27:36.339 --> 00:27:41.509
and replace decaf bad with the actual condition Mac address.

00:27:41.509 --> 00:27:47.269
By the way, this also can be done with
parental controls or N C X settings.

00:27:48.740 --> 00:27:51.380
Localization clean up.

00:27:51.380 --> 00:28:00.010
Can I get a show of hands of everybody in here that has
used localization clean up or loc-setup (assumed spelling).

00:28:02.640 --> 00:28:05.480
That's three.

00:28:05.480 --> 00:28:09.490
So one thing that I wanted to tell you guys.

00:28:09.490 --> 00:28:15.690
Always run localization clean up
if you suppress setup assistant.

00:28:15.690 --> 00:28:21.289
What localization clean up, again, does,
is it will go in and for the main lo-cal

00:28:21.289 --> 00:28:25.460
of that machine, condition it for that environment.

00:28:26.490 --> 00:28:28.279
What is localization clean up?

00:28:28.279 --> 00:28:32.369
It is a script at user S Ben loc den setup.

00:28:32.369 --> 00:28:36.649
This script will not be on your machines right now.

00:28:36.650 --> 00:28:39.440
It is removed after it is run.

00:28:39.440 --> 00:28:44.750
So please go and get a fresh install and
then this script will be available to you.

00:28:44.750 --> 00:28:48.740
What this script (Inaudible) is
your language and your country.

00:28:48.740 --> 00:28:52.620
These come from dot global preferences P-list.

00:28:52.619 --> 00:28:58.799
But because setup assistant has not been run, you
are going to have to put these values in there

00:28:58.799 --> 00:29:03.409
so that localization clean up runs successfully.

00:29:04.680 --> 00:29:09.539
Another very common customization is enabling services.

00:29:09.539 --> 00:29:17.710
In this situation, you have a very large lab,
and you want to use Apple events for some reason.

00:29:17.710 --> 00:29:22.390
So how do you enable remote Apple events.

00:29:22.390 --> 00:29:25.130
Well, remote Apple events are a launch demon.

00:29:25.130 --> 00:29:29.680
You can go in a system Library
Launch demons system PC dot P-list.

00:29:29.680 --> 00:29:35.549
And use defaults to remove the disabled key.

00:29:36.720 --> 00:29:38.450
Sometimes you don't need a restart.

00:29:38.450 --> 00:29:43.529
Usually you can go and just go
directly to the pref pane and test it.

00:29:43.529 --> 00:29:46.759
But in this situation, let's say we restarted.

00:29:46.759 --> 00:29:55.299
Now we want to go in and actually verify that
our preference, that our configuration took.

00:29:55.299 --> 00:29:59.339
Well, unfortunately, it didn't.

00:29:59.339 --> 00:30:00.709
There's a problem.

00:30:00.710 --> 00:30:01.799
We restarted.

00:30:01.799 --> 00:30:08.919
We've gone into System Preferences, and we
click on the check box and nothing happens.

00:30:08.920 --> 00:30:10.400
We click on stop.

00:30:10.400 --> 00:30:11.880
And nothing happens.

00:30:11.880 --> 00:30:17.390
And after a while it will just grind to a
halt and then really nothing will happen.

00:30:17.390 --> 00:30:18.940
what's the issue?

00:30:18.940 --> 00:30:22.990
Who -- oops -- who broke the UI.

00:30:22.990 --> 00:30:24.450
Where did this come from?

00:30:24.450 --> 00:30:27.200
Well, default broke the UI.

00:30:27.200 --> 00:30:32.430
Defaults creates a new file, and then it
copies it on top of the old preference time.

00:30:32.430 --> 00:30:36.590
The default emask will leave it as 600.

00:30:36.589 --> 00:30:42.759
The permissions need to be 644 for
the preference pane to interact.

00:30:44.609 --> 00:30:51.039
Other verification steps that I encourage
you to run are not only checking permissions,

00:30:51.039 --> 00:30:57.879
but know where your resource works are,
and know which ones need to be there.

00:30:57.880 --> 00:31:00.900
Also P-list formats.

00:31:00.900 --> 00:31:06.640
This is if you want to get the most picky you possibly can.

00:31:06.640 --> 00:31:08.790
Keep P-list formats identical.

00:31:08.789 --> 00:31:14.940
So if you have an XML P-list in the
retail bundle on your base OS X image,

00:31:14.940 --> 00:31:20.430
please keep it as ASCII -- I mean, as XML in your image.

00:31:25.130 --> 00:31:33.720
So we've talked about applications, we've
talked about the local domain, well,

00:31:33.720 --> 00:31:37.380
how do applications actually interact
with that local domain?

00:31:37.380 --> 00:31:39.830
I would like to use ARD as an example.

00:31:39.829 --> 00:31:44.939
ARD will settle for an example if
it cannot find all of its resources.

00:31:44.940 --> 00:31:48.840
So you've installed ARD on your main lap top.

00:31:48.839 --> 00:31:52.589
You get a new lap top, and you're just
saying, oh, I'll drag over the dot app.

00:31:52.589 --> 00:31:56.509
Drag over the dot app to your new machine
and double-click it and what happens?

00:31:56.509 --> 00:32:02.329
It will go through, first, verify your local
domain, and then verify your kernel extension.

00:32:02.329 --> 00:32:05.500
And then it will go through and setup your user.

00:32:05.500 --> 00:32:08.950
In essence, reinstalling itself.

00:32:12.240 --> 00:32:14.799
And now let's talk about common pit falls.

00:32:14.799 --> 00:32:18.430
I've done every one of these a hundred times.

00:32:18.430 --> 00:32:20.470
So please don't feel bad.

00:32:20.470 --> 00:32:26.140
First, your installer scripts are probably going to
be the center of a lot of issues with the installers.

00:32:26.140 --> 00:32:33.040
A lot of installers do not take the
script argument as they need to be.

00:32:33.039 --> 00:32:41.720
For example, the -- install location
versus the install volume.

00:32:41.720 --> 00:32:47.720
The install volume is given to you because even though
you want to put your application into applications,

00:32:47.720 --> 00:32:51.819
other services need to be littered throughout the system.

00:32:51.819 --> 00:32:57.169
Second, bad permissions cause all sorts of havoc.

00:32:57.170 --> 00:33:06.810
We have seen countless random failures, UI
issues, that all come back to permissions.

00:33:06.809 --> 00:33:12.069
If you have to modify a P-list, test it more.

00:33:12.069 --> 00:33:15.700
Because in essence, you're going
around what the programmer has defined.

00:33:15.700 --> 00:33:24.250
With the API calls, you can actually go in and within
reason, make the same API call on different versions of ROS.

00:33:24.250 --> 00:33:30.210
Whereas if you go in and actually modify the P-list
by hand, it's probably going to break the next time --

00:33:30.210 --> 00:33:34.779
or it will break the next time
the developer changes that P-list.

00:33:36.750 --> 00:33:39.019
Over complication.

00:33:39.019 --> 00:33:44.430
I know that I just presented you a very long, drawn
out, somewhat complicated picture of the world.

00:33:44.430 --> 00:33:47.090
But watch out.

00:33:47.089 --> 00:33:49.240
You can simplifying a lot of things.

00:33:49.240 --> 00:33:50.809
You can leverage layering.

00:33:50.809 --> 00:33:54.839
You can leverage modularity, you can
leverage software development techniques.

00:33:54.839 --> 00:33:59.199
So please don't, please use those to simplify your image.

00:33:59.200 --> 00:34:06.880
Also, very common pitfall is running
repair permissions at the wrong time.

00:34:06.880 --> 00:34:09.490
So what is repair permissions?

00:34:09.489 --> 00:34:13.269
Repair permissions will go into your receipts directory

00:34:13.269 --> 00:34:18.880
and verify the permissions on all
of the OS and all of the files.

00:34:18.880 --> 00:34:25.960
Therefore, if in your image you've installed a piece
of software, noticed it had incorrect permissions,

00:34:25.960 --> 00:34:33.579
and updated those permissions, next time the user
runs repair permissions -- it's a big problem.

00:34:33.579 --> 00:34:37.250
They've gone through and they've
reversed your permissions change.

00:34:37.250 --> 00:34:40.179
How do you get around this is repackage it.

00:34:40.179 --> 00:34:44.529
If you change permissions, show the
permissions in the bill of material.

00:34:44.530 --> 00:34:49.710
That is the convention for the Apple installer.

00:34:49.710 --> 00:34:59.579
And since we're talking about implementation, let's
talk about actually getting your image out there.

00:34:59.579 --> 00:35:08.049
If you want an image a ton of Macs at a time, probably not
going to have -- probably not going to boot every system,

00:35:08.050 --> 00:35:12.170
go through and configure everything
by hand and then keep going.

00:35:12.170 --> 00:35:15.019
You're probably going to do a monolithic or a hybrid image.

00:35:15.019 --> 00:35:22.090
So if it's a monolithic image, remember
there's multicast -- multicast ASR.

00:35:22.090 --> 00:35:26.180
You can use a DVD, but this will
be your slowest way to install.

00:35:26.179 --> 00:35:29.230
And FireWire target disc mode.

00:35:29.230 --> 00:35:34.719
And then ARD is used to layer the rest on top of your image,

00:35:34.719 --> 00:35:39.000
once it has been deployed and you're
in a managed environment.

00:35:39.000 --> 00:35:47.110
An example of a different -- the difference in deployment
time of a minimal image monolithically as compared

00:35:47.110 --> 00:35:52.880
to incrementally, and again, this
is a very simple situation.

00:35:52.880 --> 00:35:59.510
I know that there's a lot of detail that many of
you will be liking -- or many of you would prefer.

00:35:59.510 --> 00:36:02.950
But 1 gig is our retail bundle size.

00:36:02.949 --> 00:36:06.139
Base OS plus iLife, plus iWorks.

00:36:06.139 --> 00:36:10.069
It's about 14 minutes over FireWire 800 to deploy.

00:36:10.070 --> 00:36:20.050
Whereas if you only have about a 10 Meg change, a
very simple system customization package, 30 seconds.

00:36:20.050 --> 00:36:26.720
This will -- we will loop back and talk about
this when Josh Wisenbaker comes back on stage

00:36:26.719 --> 00:36:31.299
and talks more about the larger deployment cycle.

00:36:31.300 --> 00:36:35.010
And for those of you coming to next year's WWDC,

00:36:35.010 --> 00:36:41.360
there are a bunch of Leopard features we
would like you to be aware of and learn.

00:36:41.360 --> 00:36:43.079
Code signing, D trays.

00:36:43.079 --> 00:36:47.710
Probably a lot of you actually saw these during this WWDC.

00:36:47.710 --> 00:36:50.800
And then enhanced parental controls.

00:36:50.800 --> 00:36:54.900
This is the session that's coming right after us.

00:36:54.900 --> 00:36:58.740
Now I'm very pleased to introduce Josh Wisenbaker.

00:36:58.739 --> 00:37:02.259
He is one of our enterprise consulting engineers.

00:37:02.260 --> 00:37:08.130
( Applause )

00:37:08.130 --> 00:37:09.410
>> Hi out there, everybody.

00:37:09.409 --> 00:37:16.170
I was talking to Steve Hayman earlier, right?

00:37:16.170 --> 00:37:18.309
The waiter is Italian.

00:37:18.309 --> 00:37:20.119
I don't know.

00:37:20.119 --> 00:37:21.719
He wouldn't finish it after that.

00:37:21.719 --> 00:37:26.319
But, like Timothy said, I am one of the
consulting engineers in Enterprise sales group,

00:37:26.320 --> 00:37:30.960
and I want to talk to you very briefly
today here about a customer that --

00:37:30.960 --> 00:37:34.829
we worked with, with the CSS group and
some imaging issues and things like that.

00:37:34.829 --> 00:37:40.980
So one of the things that you do, even though our imaging
tools are very easy to use, and we can really blast out lots

00:37:40.980 --> 00:37:44.659
of machines, there's just a heck of
a lot of work involved in this still.

00:37:44.659 --> 00:37:50.960
So even though we've got multicast ASR, and even though we
can do, you know, as many switch ports of machines at once

00:37:50.960 --> 00:37:57.720
as you have, if I had a thousand machines and a thousand
gig port, I still have to unbox a thousand machines.

00:37:57.719 --> 00:38:02.789
I still have to inventory them, carry them around, put
them to tables, plug them in, start them up with the N key

00:38:02.789 --> 00:38:05.610
down -- and then have to rebox all of them.

00:38:05.610 --> 00:38:07.410
And I have to deliver them to where they go.

00:38:07.409 --> 00:38:09.849
Unbox them again, put them on some guy's desk.

00:38:09.849 --> 00:38:14.219
If it's a professor -- whoever, make sure it okay
and make they know how to use the mouse and what not.

00:38:14.219 --> 00:38:15.730
And we can go on from there.

00:38:15.730 --> 00:38:17.539
So it becomes difficult.

00:38:17.539 --> 00:38:20.070
There's just a lot of effort in this.

00:38:20.070 --> 00:38:24.880
So what the CSS group can help us do in
this case particularly is we went and worked

00:38:24.880 --> 00:38:27.960
with them and developed these prebuilt machine.

00:38:27.960 --> 00:38:33.510
And in this case, the physical effort on the customer's
end was just reduced to unpack and turn it on.

00:38:33.510 --> 00:38:36.510
Mouse lessons still required for the people that need that.

00:38:36.510 --> 00:38:38.650
So a real world example of this.

00:38:38.650 --> 00:38:44.809
A customer who must remain nameless for me right now,
decided that they wanted to put out about a thousand iMacs.

00:38:44.809 --> 00:38:47.860
Now, the initial plan called for local imaging.

00:38:47.860 --> 00:38:49.930
The customer decided, you know, we can do this our selves.

00:38:49.929 --> 00:38:51.449
We can image all this stuff.

00:38:51.449 --> 00:38:55.599
But some networking issues, some staffing
issues, and some physical space issues.

00:38:55.599 --> 00:38:58.110
Where do you find the time to set up a thousand machines?

00:38:58.110 --> 00:39:00.309
Where do you put a thousand machines?

00:39:00.309 --> 00:39:02.190
You know? Those boxes take up a lot of room.

00:39:02.190 --> 00:39:03.420
And in this case, they're iMacs.

00:39:03.420 --> 00:39:05.119
The box is fairly large.

00:39:05.119 --> 00:39:09.779
So, it took them about a week or so to
get the first 200 units out the door.

00:39:09.780 --> 00:39:12.360
And then once they did that, they realized, wait a minute.

00:39:12.360 --> 00:39:14.860
There was more we should have done to those images.

00:39:14.860 --> 00:39:16.120
This isn't working right.

00:39:16.119 --> 00:39:18.739
So then they had to figure out
how to reimage all this stuff.

00:39:18.739 --> 00:39:20.819
This is a new to the Mac customer.

00:39:20.820 --> 00:39:25.789
This is not a real good first impression
for us to make, as far as imaging went.

00:39:25.789 --> 00:39:34.500
So because it was a fairly large Enterprise customer,
the Enterprise C E team, meaning me, went out on site --

00:39:34.500 --> 00:39:38.639
the other guys didn't get to go to this one
-- so there are more of us than just me.

00:39:38.639 --> 00:39:40.839
So I went out and I helped them work on their image.

00:39:40.840 --> 00:39:44.120
And we created an optimized round two image at this point.

00:39:44.119 --> 00:39:48.569
So one of the most important things that you're
going to do when you build images or do anything,

00:39:48.570 --> 00:39:50.930
is you're going to document, document, document.

00:39:50.929 --> 00:39:53.000
And in this case I used an out lying program.

00:39:53.000 --> 00:39:58.349
I just clicked it open and as I went through the
image I documented every step and everything I did.

00:39:58.349 --> 00:40:02.089
This way the customer could rebuild this
image later from scratch if they needed to.

00:40:02.090 --> 00:40:07.940
I didn't have to get on an airplane and shoot across the
country again just because they wanted to change one thing.

00:40:07.940 --> 00:40:13.010
We also gave up the local policy decisions
they've been trying to do with group policy --

00:40:13.010 --> 00:40:17.140
with the parental controls because
they had OD servers in place.

00:40:17.139 --> 00:40:22.230
And if you've got an OD server in place, why the heck
are you doing this stuff with the parental controls.

00:40:22.230 --> 00:40:28.889
So we helped them move on from using local policies
for this large deployment to using open directory OSs.

00:40:28.889 --> 00:40:31.400
Now when we do this, it makes things very, very easy.

00:40:31.400 --> 00:40:37.340
Like if I want to change one line in the log in hook we
can do an M C X log in hook, I change one line in the hook,

00:40:37.340 --> 00:40:39.750
stick it in Work Group Manager, and I'm done.

00:40:39.750 --> 00:40:43.119
All the machines pick it up the next
time they refresh the preferences.

00:40:43.119 --> 00:40:47.299
The application load and the OS
load was trimmed down significantly.

00:40:47.300 --> 00:40:52.340
And this helped us take their deployment
from about 18 gigs to about 10 gigs.

00:40:52.340 --> 00:40:55.640
So actually, reduced it by 10 gigs in size.

00:40:55.639 --> 00:40:58.889
We went from 18 gigs to less than 8 gigs of size.

00:40:58.889 --> 00:41:03.329
So this really cut down on the time it took
to deploy each image, if they did it locally.

00:41:03.329 --> 00:41:06.529
And then we also trained the customer staff in this.

00:41:06.530 --> 00:41:09.390
And a lot of this was part of the
documentation that went on.

00:41:09.389 --> 00:41:13.250
I'm telling you guys, if you don't
document it, then it's not going to work.

00:41:13.250 --> 00:41:16.400
The problem is, is it still takes all that effort.

00:41:16.400 --> 00:41:20.539
Box, unbox, rebox -- and at this
point, we were running out of time.

00:41:20.539 --> 00:41:23.800
In this case, we had to get these things on desks.

00:41:23.800 --> 00:41:26.560
So we gave the CSS group a call.

00:41:26.559 --> 00:41:31.849
And they said yeah, we can work with you guys and
get done fast, and we can help you out with that.

00:41:31.849 --> 00:41:36.339
And that image documentation that
was created is a perfect checklist.

00:41:36.340 --> 00:41:39.170
How to go through and configure these initial images.

00:41:39.170 --> 00:41:40.780
So we sent that up to them.

00:41:40.780 --> 00:41:42.800
That got a great head start for us.

00:41:42.800 --> 00:41:47.580
If we did not have that documentation for the
image build steps they would have taken much,

00:41:47.579 --> 00:41:50.150
much longer for this process to go on.

00:41:50.150 --> 00:41:57.039
So in less than one week we were able to up load that, build
it out, send it out to the customer, have them test it,

00:41:57.039 --> 00:42:00.969
have them verify it, go back, turn
around and release it to manufacturing.

00:42:00.969 --> 00:42:07.159
So we were able then at that point that
people were able to order from a custom skew,

00:42:07.159 --> 00:42:10.690
machine comes in a box, they take
it out and put it on a desk.

00:42:10.690 --> 00:42:13.090
There wasn't anything else that had to go into that.

00:42:13.090 --> 00:42:18.390
That cuts the deployment time way down
when you don't have to do any of that.

00:42:18.389 --> 00:42:20.730
We did also set up some local images options though.

00:42:20.730 --> 00:42:26.219
I spent all this time and spent, you know, the
better part of a day creating this image for them.

00:42:26.219 --> 00:42:29.099
So we still had the need to image on site though.

00:42:29.099 --> 00:42:32.849
And when you've got a large deployment,
you've got a couple different ways to image.

00:42:32.849 --> 00:42:35.889
The main two, we've got a unicast and multicast.

00:42:35.889 --> 00:42:38.179
And unicast is great for these onsie-twosies.

00:42:38.179 --> 00:42:39.389
Point to point.

00:42:39.389 --> 00:42:40.920
You can go select the machine at ARD.

00:42:40.920 --> 00:42:46.800
Have a fully automated image cast imager store say
go, and that machine will boot off that and go.

00:42:46.800 --> 00:42:49.830
But what happens if there's a refresh.

00:42:49.829 --> 00:42:54.509
That they decide, hey, you know this week we're
going to take all the Macs from building 3, level 2,

00:42:54.510 --> 00:42:56.920
and we're just going to reimage them all.

00:42:56.920 --> 00:42:59.900
So we also setup a multicast solution
for them there as well.

00:42:59.900 --> 00:43:05.950
That way if it ever came down to if they wanted
to do 30 at once, they could do 30 at once.

00:43:05.949 --> 00:43:12.279
And boot them up off the network, wipe them all down
with a multicaster image, and be done very quickly.

00:43:12.280 --> 00:43:19.510
So we do the combination of the CSS and the custom keys
for doing the initial setups with local imaging used

00:43:19.510 --> 00:43:23.920
for doing our up dates and redeployments of machines.

00:43:23.920 --> 00:43:29.180
So -- at this point I am going to hand things over to
Daryl, who can talk to us about an education case study.

00:43:29.179 --> 00:43:30.250
Thank you very much.

00:43:30.250 --> 00:43:33.460
( Applause )

00:43:33.460 --> 00:43:45.340
>> Hello. My name is Darryl halls and for about the next 20
or 30 minutes I'm 0going to be talking to you about imaging.

00:43:45.340 --> 00:43:47.250
It worked, Tim.

00:43:47.250 --> 00:43:49.010
Most people are running out the door.

00:43:49.010 --> 00:43:51.500
We're getting rid of the light weights.

00:43:51.500 --> 00:43:52.380
Fooled ya'.

00:43:52.380 --> 00:43:53.880
Anyway, so --

00:43:53.880 --> 00:43:56.099
( Laughter )

00:43:56.099 --> 00:44:02.130
>> I work in education, I am a system's
engineer up in the Maine area of the world.

00:44:02.130 --> 00:44:09.539
That's not primary, that's Maine
with an E. And yeah, whatever.

00:44:09.539 --> 00:44:16.349
( Laughter )
>> For about the last five years or so I have been pretty
heavily involved with a little project that we have up there

00:44:16.349 --> 00:44:19.799
which is known as the Maine learning technology initiative.

00:44:19.800 --> 00:44:24.050
LTI. I wanted to point out that
it's focused in the right place.

00:44:24.050 --> 00:44:27.170
A lot of people see LTI and they think lap top.

00:44:27.170 --> 00:44:28.650
It's not a technology initiative.

00:44:28.650 --> 00:44:30.610
It's the learning technology initiative.

00:44:30.610 --> 00:44:32.720
It's focused on education, where it should be.

00:44:32.719 --> 00:44:37.579
It's not focused on the computers and the technology.

00:44:37.579 --> 00:44:43.679
So what we've done is we've deployed a
state-wide program which is state funded.

00:44:43.679 --> 00:44:48.219
It's a one to one, meaning that every student
has a machine, every teacher has a machine.

00:44:48.219 --> 00:44:51.859
All 7 and 8 grade student throughout the entire state.

00:44:51.860 --> 00:44:55.539
There's about 242 schools in the state.

00:44:55.539 --> 00:44:58.099
That is about the size of the rest of New England.

00:44:58.099 --> 00:45:01.349
It's quite a large geo to be able to travel around.

00:45:01.349 --> 00:45:09.159
In order to meet our budgetary constraints to do
this entire project, provide support for the project,

00:45:09.159 --> 00:45:13.259
provide a yearly image, provide a
mechanism for, et cetera, et cetera,

00:45:13.260 --> 00:45:15.590
we did not have enough money to work in a server model.

00:45:15.590 --> 00:45:20.650
We would have had to deploy a server per school,
we would have had to support a server per school.

00:45:20.650 --> 00:45:26.260
And when you're talking about a state that has a lot of
rural areas where the local technology teacher happened

00:45:26.260 --> 00:45:32.370
to also become the tech support person, and that
one person is support for the entire school --

00:45:32.369 --> 00:45:37.650
you run into an issue with running -- jumping in
a car and going to help them with their server.

00:45:37.650 --> 00:45:39.070
So we tried to avoid that.

00:45:39.070 --> 00:45:40.940
Each school has their own tech support.

00:45:40.940 --> 00:45:43.269
Maybe one or two people who support the entire school.

00:45:43.269 --> 00:45:49.509
It's not uncommon for you to have one or two
people supporting 400, 1,000 machines, et cetera.

00:45:49.510 --> 00:45:52.910
Our support teams work to support the project.

00:45:52.909 --> 00:45:57.469
A gentleman named David McKee is really the key focus here.

00:45:57.469 --> 00:46:01.669
We have a special 800 number in the
Apple care that the Maine folks call.

00:46:01.670 --> 00:46:04.130
So they call Apple care at this 800 number.

00:46:04.130 --> 00:46:08.380
And if Apple care cannot assist -- this
is the education tier of Apple care --

00:46:08.380 --> 00:46:13.070
they actually escalate back from
Apple care to David McKee in Maine.

00:46:13.070 --> 00:46:18.580
And David in money is the Apple care liaison who
works with the individual issues that pop up,

00:46:18.579 --> 00:46:21.779
trying to find out where there
are commonalties to support it.

00:46:21.780 --> 00:46:25.320
And then we go back to Apple care and solve the problems.

00:46:25.320 --> 00:46:27.820
So the first project was a four-year lease.

00:46:27.820 --> 00:46:28.570
A four-year timeline.

00:46:28.570 --> 00:46:33.360
I am happy to say that Maine came back to Apple
and we went forward with a second project.

00:46:33.360 --> 00:46:38.110
Which is another four years, now starting
the second year of the second project.

00:46:38.110 --> 00:46:39.559
Around 40,000 iBooks.

00:46:39.559 --> 00:46:40.849
Well, 30,000 iBooks.

00:46:40.849 --> 00:46:45.579
In the first phase, it was phased outs
over two periods, over the first two years.

00:46:45.579 --> 00:46:50.059
And in the second phase all 37,000 dropped at the same time.

00:46:50.059 --> 00:46:53.679
The first image I created in a hotel room in Boston.

00:46:53.679 --> 00:46:53.919
( Laughter )

00:46:53.920 --> 00:46:57.360
>> Back on Mac OS 10.1.

00:46:57.360 --> 00:47:01.510
And there were a lot of concerns at that
time over making sure the project went well.

00:47:01.510 --> 00:47:05.790
The first image was about 3 gigabytes in
size and took me a very long time to do.

00:47:05.789 --> 00:47:09.500
I've been pretty heavily involved on
the imaging from that point forward.

00:47:09.500 --> 00:47:11.949
But again, David McKee is the gentleman who took over.

00:47:11.949 --> 00:47:14.429
We worked side by side in several different images.

00:47:14.429 --> 00:47:17.000
The current that is deployed is a 30 gig image.

00:47:17.000 --> 00:47:21.809
So you can see over a four year span of
time that things have changed quite a bit.

00:47:21.809 --> 00:47:24.809
The very first project which is just ended went

00:47:24.809 --> 00:47:32.920
from 500 gigahertz iBook (Inaudible) 3s
all the way up to 1.34 gigahertz iBooks.

00:47:32.920 --> 00:47:38.000
Around 40,000 machines -- one single system image.

00:47:38.000 --> 00:47:42.539
So earlier, Tim was talking about
categories of customization.

00:47:42.539 --> 00:47:47.340
We have well over 150 individual
customization line items in Maine.

00:47:47.340 --> 00:47:53.300
So you could safely say that we touch every
one of those potential areas of customization.

00:47:53.300 --> 00:47:58.769
So at application level, installing third
party apps, customizing application behavior --

00:47:58.769 --> 00:48:04.139
who has access to what system preference, what
System Preferences behaves like, the system level.

00:48:04.139 --> 00:48:09.869
We add kron jobs, we add log in hooks, we had log out
hooks when Virex (assumed spelling) was going zombie on us.

00:48:09.869 --> 00:48:12.150
All kinds of fun.

00:48:12.150 --> 00:48:14.210
Other categories of customization around security.

00:48:14.210 --> 00:48:16.539
We make sure there's an open framework
password on the system.

00:48:16.539 --> 00:48:18.409
We disable the console user.

00:48:18.409 --> 00:48:21.099
So tricky folks don't get the Terminal when they shouldn't.

00:48:21.099 --> 00:48:23.869
I mentioned we don't have servers.

00:48:23.869 --> 00:48:29.480
So unlike Josh's model, he talked
about saving disc space on his image.

00:48:29.480 --> 00:48:31.949
And he talked about saving time by using a server.

00:48:31.949 --> 00:48:33.439
We don't have that luxury.

00:48:33.440 --> 00:48:37.480
Instead, what we had to do was create local, generic users.

00:48:37.480 --> 00:48:40.409
So there is an Admin user, a student user, a parent user,

00:48:40.409 --> 00:48:43.569
a teacher user on every single
system that ships out of the factory.

00:48:43.570 --> 00:48:50.289
And every time we do a new image, those users are -- the
passwords are customized when the machines are deployed.

00:48:50.289 --> 00:48:54.009
I wanted to take a step back and talk about why we image.

00:48:54.010 --> 00:48:59.840
Basically, when imaging, this is a task that
we do in order to shape our operating system,

00:48:59.840 --> 00:49:03.130
our final deployment, to meet some local requirement.

00:49:03.130 --> 00:49:07.619
That local requirement may be based
upon our available technology.

00:49:07.619 --> 00:49:10.819
Or the technology that's not quite yet available to us.

00:49:10.820 --> 00:49:13.000
How many of you are going, oh, I want that Leopard feature.

00:49:13.000 --> 00:49:14.550
But I can't deploy Leopard quite yet.

00:49:14.550 --> 00:49:17.710
Well, welcome to my world.

00:49:17.710 --> 00:49:21.760
It's definitely without a doubt shaped by local policy.

00:49:21.760 --> 00:49:28.940
So when creating an image, I just want -- I want
to put the plug in there that you, the engineer,

00:49:28.940 --> 00:49:34.130
are really the liaison between the
policy makers and the final deployment.

00:49:34.130 --> 00:49:39.760
And a lot of us just blindly apply what's
asked of us without thinking it through.

00:49:39.760 --> 00:49:42.980
So you really need to define what's being asked of you.

00:49:42.980 --> 00:49:49.320
I had a couple of anecdotes that I brought with me to talk
about the disconnect between engineers and policy makers.

00:49:49.320 --> 00:49:51.390
And I have my little cheat card.

00:49:51.389 --> 00:49:53.699
I work in education.

00:49:53.699 --> 00:50:03.279
It's interesting to me that in education, as soon as you
introduce technology, problems become an entirely new issue.

00:50:03.280 --> 00:50:06.110
For instance, I had a student who's kind of a bully.

00:50:06.110 --> 00:50:09.150
Out on the playground that student bullys another student.

00:50:09.150 --> 00:50:14.889
They go to the principal's office and there's
a whole entire hierarchy of discipline actions.

00:50:14.889 --> 00:50:20.309
I can suspend the student, I can
put them in detention, et cetera.

00:50:20.309 --> 00:50:27.539
That same student bullys another student
over iChat or over e-mail -- oh my gosh!

00:50:27.539 --> 00:50:29.349
It happened through electrons!

00:50:29.349 --> 00:50:30.150
( Laughter )

00:50:30.150 --> 00:50:33.550
>> What should we do?

00:50:33.550 --> 00:50:37.039
Quick, let's call a school committee meeting?

00:50:37.039 --> 00:50:43.440
It's -- it's the same exact problem, almost every
technical problem that exists has a direct parallel.

00:50:43.440 --> 00:50:48.829
And I can give you example after example where I've had
telephone calls or e-mails about some issue that happens

00:50:48.829 --> 00:50:53.469
that is a direct parallel to what
happened yesterday in the playground.

00:50:53.469 --> 00:50:58.409
Why is it that we must always solve
social issues with technology?

00:50:58.409 --> 00:51:03.690
This has been something that we've gone through with
our imaging quite a bit, all again and again and again.

00:51:03.690 --> 00:51:09.960
I want to give you an anecdote from early on,
the very first image that we did five years ago.

00:51:09.960 --> 00:51:15.809
When we were in the RFP process we were going back and forth
with the state and there was a lot of concern, you know,

00:51:15.809 --> 00:51:19.809
there's a lot of fear for the first time you've
handing out iBooks to middle school student.

00:51:19.809 --> 00:51:20.989
They're going to take these things home.

00:51:20.989 --> 00:51:22.909
They're going to have access to them all day.

00:51:22.909 --> 00:51:25.449
There's a lot of fear about what
they'll do with those machines.

00:51:25.449 --> 00:51:30.549
And so we were asked basically can you
ensure that they don't see bad pictures.

00:51:30.550 --> 00:51:31.450
( Laughter )

00:51:31.449 --> 00:51:33.849
>> Those bad images shouldn't appear on the screen.

00:51:33.849 --> 00:51:36.059
And we had engineers running around.

00:51:36.059 --> 00:51:43.019
There's a third party that makes some software that
analyzes the skin tone on the screen and darkens that area.

00:51:43.019 --> 00:51:46.269
And we're literally talking about this.

00:51:46.269 --> 00:51:49.340
And Jim Tobin came in, he's a resulting
engineer in education.

00:51:49.340 --> 00:51:56.350
And he said, you can't teach a
back pack not to carry a Playboy.

00:51:56.349 --> 00:51:58.360
( Laughter )

00:51:58.360 --> 00:52:00.700
>> Why are we trying to solve that problem?

00:52:00.699 --> 00:52:03.519
( Applause )

00:52:03.519 --> 00:52:05.599
>> So we lucked out on that one.

00:52:05.599 --> 00:52:11.199
And I -- one last anecdote -- the governor of our state --
I wasn't sure how far back I wanted to go with this one.

00:52:11.199 --> 00:52:13.439
But the oftener of our state was given a loaner machine.

00:52:13.440 --> 00:52:19.619
And he's -- the governor at the time, Governor King
apparently was give a loaner lap top which he brought home.

00:52:19.619 --> 00:52:23.539
His son loved the lap top, grabbed
the iBook and went to town with it.

00:52:23.539 --> 00:52:26.469
And filled the hard drive with MP3s.

00:52:26.469 --> 00:52:29.369
If you fill a hard drive, you can't boot it.

00:52:29.369 --> 00:52:31.179
So he effectively broke the machine.

00:52:31.179 --> 00:52:32.859
And you know, it came back.

00:52:32.860 --> 00:52:39.410
And that's the anecdote that led to -- we were
told by the state when doing our first image,

00:52:39.409 --> 00:52:43.629
ensure that students can't listen to music files.

00:52:43.630 --> 00:52:45.539
You know, it's five years ago.

00:52:45.539 --> 00:52:47.900
We didn't have iTunes, we didn't
have the iTunes music store.

00:52:47.900 --> 00:52:49.590
People were worried about piracy.

00:52:49.590 --> 00:52:51.650
They were worried about swapping MP3s.

00:52:51.650 --> 00:52:53.059
Kind of makes sense.

00:52:53.059 --> 00:52:57.110
But again, the policy in the engineering
side of things, right?

00:52:57.110 --> 00:52:59.160
What am I actually being told here?

00:52:59.159 --> 00:53:01.009
What do you want me to do?

00:53:01.010 --> 00:53:06.780
We ultimately ended up deciding after a lot of discussion
that what you were asking me is to disable access

00:53:06.780 --> 00:53:16.950
to the iTunes application so that students cannot easily
create MP3 files, swap MP3 files, and playback MP3 files.

00:53:16.949 --> 00:53:22.179
But along the way we pointed out to sales management,
which is yet another policy maker along the track,

00:53:22.179 --> 00:53:30.849
that students actually could put a CD into the computer,
and drag the A F -- A I F F file off on to the desktop,

00:53:30.849 --> 00:53:34.779
double-click it, and live to music in QuickTime.

00:53:34.780 --> 00:53:38.860
And I hope I get as big a laugh
on this one, because it killed me.

00:53:38.860 --> 00:53:46.750
We were told by Apple sales management
-- can't you just disable QuickTime?

00:53:46.750 --> 00:53:48.500
( Laughter )

00:53:48.500 --> 00:53:52.119
>> So be careful that you really understand the question.

00:53:52.119 --> 00:53:54.630
As to why your customizing your image.

00:53:54.630 --> 00:54:00.579
So a quick peek at some of the actual customizations that
we do for our image, and this is a really small sub set.

00:54:00.579 --> 00:54:02.190
We suppress the setup assistant.

00:54:02.190 --> 00:54:04.480
We have those four users that are precreated.

00:54:04.480 --> 00:54:05.980
We define ARD settings.

00:54:05.980 --> 00:54:11.949
So the predefined Admin user is already
configured to be able to ARD control that station.

00:54:11.949 --> 00:54:15.230
We have a one-time run start up
item that sets the computer name.

00:54:15.230 --> 00:54:20.960
It actually sets a little string, my M L T I, and
then the last three octaves of the Mac address.

00:54:20.960 --> 00:54:22.849
The Mac address is pretty much guaranteed unique.

00:54:22.849 --> 00:54:27.500
You have that problem when machines auto name themselves,
and you bring a hundred of them up on the network

00:54:27.500 --> 00:54:30.000
at the same time -- and they all
choose the same automatic name?

00:54:30.000 --> 00:54:36.440
And now, you know, N computers minus 1
chooses a second same automatic name?

00:54:36.440 --> 00:54:41.900
And N computers minus 2 -- so the other thing that we
do is this is not a self-destructing start up item.

00:54:41.900 --> 00:54:43.200
We use plenty of those.

00:54:43.199 --> 00:54:47.139
But this is actually a start up item
that creates a little touch time.

00:54:47.139 --> 00:54:49.619
Just like Apple setup done and other things.

00:54:49.619 --> 00:54:56.349
The touch file is wonderful because what we
can do is use ARD to destroy the touch file.

00:54:56.349 --> 00:54:59.210
And now the next time the system
boots it automatically goes through

00:54:59.210 --> 00:55:02.329
and does that exact same operation as
if it had just come out of the box.

00:55:02.329 --> 00:55:03.469
We set our time zone.

00:55:03.469 --> 00:55:08.059
Obviously all retail machines coming
out in the U.S. are set to Coopertino.

00:55:08.059 --> 00:55:10.099
Because that the center of our universe.

00:55:10.099 --> 00:55:12.909
But in Maine, we wanted it to be in the east coast.

00:55:12.909 --> 00:55:18.799
If you just set it to east coast, it grabs the first
city alphabetically, which happens to be Atlanta.

00:55:18.800 --> 00:55:20.590
So we added Augusta.

00:55:20.590 --> 00:55:23.809
And I think the first time we did that, we removed Atlanta.

00:55:23.809 --> 00:55:27.559
I like them, but we had to remove it.

00:55:27.559 --> 00:55:30.480
Subsequently, we were able to select Augusta.

00:55:30.480 --> 00:55:31.679
We -- software updates.

00:55:31.679 --> 00:55:32.940
This is a big one for me.

00:55:32.940 --> 00:55:35.150
What in the world are we thinking, folks?

00:55:35.150 --> 00:55:40.730
Why do software updates configure
themselves to automatically alert a user

00:55:40.730 --> 00:55:44.710
that there is a software update,
when they cannot install it?

00:55:44.710 --> 00:55:45.889
( Applause )

00:55:45.889 --> 00:55:48.949
>> What is up with that?

00:55:48.949 --> 00:55:52.480
So we go through and we disable all applications.

00:55:52.480 --> 00:55:58.460
Apple applications, third party applications, and the
Apple OS to not prompt user that there's a software update.

00:55:58.460 --> 00:56:03.490
There are two techs in your school that would
actually install the update, probably remotely.

00:56:03.489 --> 00:56:05.179
But you know, they're being prompted.

00:56:05.179 --> 00:56:08.419
You've got 400 users knocking on your door all day long.

00:56:08.420 --> 00:56:10.950
It says security up date.

00:56:10.949 --> 00:56:14.239
I think I should have this one now.

00:56:14.239 --> 00:56:17.909
Ahem. So, we disabled the Dashboard in Tiger.

00:56:17.909 --> 00:56:22.899
There were several reasons for this, but we made
sure the users were not launching Dashboard.

00:56:22.900 --> 00:56:25.320
A lot of people complained.

00:56:25.320 --> 00:56:26.550
Power management concerns.

00:56:26.550 --> 00:56:29.380
This is a mobile project.

00:56:29.380 --> 00:56:33.280
Right? These students are using the machines
without being plugged in for about a school day.

00:56:33.280 --> 00:56:36.480
Right? They're running them several hours a day.

00:56:36.480 --> 00:56:39.179
So we wanted to be very careful
about our energy saver settings.

00:56:39.179 --> 00:56:40.829
We tweaked them from the default.

00:56:40.829 --> 00:56:44.699
And anything else that we could do
including turning off Dashboard to ensure

00:56:44.699 --> 00:56:46.759
that the system wasn't wasting resources.

00:56:46.760 --> 00:56:50.320
We install X 11, and for things
like grass, G A I, et cetera.

00:56:50.320 --> 00:56:56.510
We added some additional network locations where
even the automatic network location is tweaked.

00:56:56.510 --> 00:56:58.980
See, by default, everyone's wireless.

00:56:58.980 --> 00:57:00.980
So Airport is our default.

00:57:00.980 --> 00:57:02.639
It's not, in the OS.

00:57:02.639 --> 00:57:06.710
And we really don't need that modem
at the top for some reason.

00:57:06.710 --> 00:57:08.720
Safari customizations.

00:57:08.719 --> 00:57:10.689
Each user gets their own homepage.

00:57:10.690 --> 00:57:12.980
Each user has a favorites.

00:57:12.980 --> 00:57:14.179
And here's a fun one.

00:57:14.179 --> 00:57:15.359
The QuickTime Player.

00:57:15.360 --> 00:57:18.660
When you launch the QuickTime Player, do you
know about the hot picks window that opens up?

00:57:18.659 --> 00:57:20.049
Well, first off, it's a little slow.

00:57:20.050 --> 00:57:21.370
Because it's making a network connection.

00:57:21.369 --> 00:57:23.460
Now, imagine that times 30 kids in the classroom.

00:57:23.460 --> 00:57:24.940
When you go to launch QuickTime.

00:57:24.940 --> 00:57:30.340
But then number 2, I don't know about you, but
middle school students seeing the QuickTime window,

00:57:30.340 --> 00:57:35.380
every time you launch QuickTime, there's something
about necessarily in his underwear or whatever that is,

00:57:35.380 --> 00:57:37.930
you know, it's a little bit beyond P G 13.

00:57:37.929 --> 00:57:40.369
So we turned that off by default.

00:57:40.369 --> 00:57:44.869
And I wanted to support some of
the stuff that Timothy was saying.

00:57:44.869 --> 00:57:47.369
We really used to do a lot of monolithic imaging.

00:57:47.369 --> 00:57:50.179
That disc image that just goes right to the raw metal.

00:57:50.179 --> 00:57:55.719
And we had these considerations when we would get
to the point of actually capturing the disc image.

00:57:55.719 --> 00:57:57.929
All right, now on the master machine we're about to capture.

00:57:57.929 --> 00:58:00.079
Let's go through and make sure everyone's trash is empty.

00:58:00.079 --> 00:58:03.980
Let's make sure that, you know, browser.

00:58:03.980 --> 00:58:07.030
All of these line items that you
do before you actually capture.

00:58:07.030 --> 00:58:08.120
Then you capture.

00:58:08.119 --> 00:58:08.679
You deploy it.

00:58:08.679 --> 00:58:11.159
And then you find out you missed two of the steps.

00:58:11.159 --> 00:58:13.889
So you go back and you do it all over again.

00:58:13.889 --> 00:58:14.500
From scratch.

00:58:14.500 --> 00:58:17.010
Et cetera, et cetera -- all of these things ad infinitum.

00:58:17.010 --> 00:58:18.300
Really prone to failure.

00:58:18.300 --> 00:58:20.580
A realtime consumer.

00:58:20.579 --> 00:58:27.019
So if you look at the modular approach to it,
where you're just creating packages of changes --

00:58:27.019 --> 00:58:31.509
you're just creating those packages that actually
leave behind receipts with permissions on them.

00:58:31.510 --> 00:58:32.480
You save so much time.

00:58:32.480 --> 00:58:36.139
Because the base OS is -- was already supplied to you.

00:58:36.139 --> 00:58:38.519
And you're just modifying the base OS.

00:58:38.519 --> 00:58:44.550
You will save yourself a ton of time if you can get into
a more incremental approach than strictly monolithic.

00:58:44.550 --> 00:58:48.340
But worst case scenario, you take
the base image you currently have,

00:58:48.340 --> 00:58:52.510
you apply the packages you've been working
on, and you capture a new base image.

00:58:52.510 --> 00:58:57.940
You really didn't do anything in the middle to cause all
of those tweaks that you have to do to go back and fix.

00:58:57.940 --> 00:59:00.260
And you've got yourself a new base image.

00:59:00.260 --> 00:59:08.080
So at this point, I think they're going to bring
everybody up and talk about some common questions.

00:59:08.079 --> 00:59:13.590
So we can answer your questions before you ask them.

00:59:13.590 --> 00:59:20.370
( Applause )

00:59:20.369 --> 00:59:24.170
>> There's one common question I forget
for all you developers in the room.

00:59:24.170 --> 00:59:25.720
Have I modified your installer?

00:59:25.719 --> 00:59:25.879
Yeah.

00:59:25.880 --> 00:59:27.550
( Laughter )

00:59:27.550 --> 00:59:27.990
>> Yeah.

00:59:27.989 --> 00:59:39.759
>> So if we can bring up the house lights -- we're actually
going to go through some questions, but if you guys can get

00:59:39.760 --> 00:59:43.750
to the microphones, we're going to have an
opportunity to get some questions from you.

00:59:43.750 --> 00:59:50.679
But these are the ones you're going to ask first.

00:59:50.679 --> 00:59:50.859
( Laughter )

00:59:50.860 --> 00:59:51.039
(Inaudible) --

00:59:51.039 --> 00:59:53.940
>> So please feel free to chime in whenever.

00:59:53.940 --> 00:59:57.530
Monolithic images are not bad.

00:59:57.530 --> 01:00:01.790
They're just really bad when you've
got to do 40,000 machines.@

01:00:03.059 --> 01:00:06.130
Two, must I use the Apple installer?

01:00:06.130 --> 01:00:08.619
Uhh -- yeah.

01:00:08.619 --> 01:00:12.779
We do. It's one of those -- you do not need to.

01:00:12.780 --> 01:00:14.720
You can do this by laying files down.

01:00:14.719 --> 01:00:17.349
You can use your own development techniques.

01:00:17.349 --> 01:00:19.139
But we have been using it.

01:00:19.139 --> 01:00:20.480
And it's been great.

01:00:20.480 --> 01:00:24.519
We don't have stability issues with it.

01:00:24.519 --> 01:00:27.079
Should I modify temperamental installers?

01:00:27.079 --> 01:00:28.719
I do. Yeah.

01:00:28.719 --> 01:00:31.369
You're not going to get your (Inaudible)
materials correct unless you go through

01:00:31.369 --> 01:00:35.699
and change permissions of the or in my case, e-mail Timothy.

01:00:35.699 --> 01:00:38.159
And he'll fix it for me.

01:00:38.159 --> 01:00:38.250
Yeah.

01:00:38.250 --> 01:00:39.449
( Laughter )

01:00:39.449 --> 01:00:41.049
>> Where is help?

01:00:41.050 --> 01:00:43.910
First, the Internet, of course.

01:00:43.909 --> 01:00:46.429
Second, Apple mailing lists.

01:00:46.429 --> 01:00:54.029
If you are part of an Apple sales cycle, your presale
engineer will actually be there to help you out.

01:00:54.030 --> 01:00:58.220
They will -- they can come over and
show you how to do your image --

01:00:58.219 --> 01:00:59.669
>> So this is known as the tier approach.

01:00:59.670 --> 01:01:02.450
If you have a problem, you come to me.

01:01:02.449 --> 01:01:04.029
The S C in sales and education.

01:01:04.030 --> 01:01:08.310
Or to Josh, the, well, S E in business.

01:01:08.309 --> 01:01:12.199
And when we can't answer it, we e-mail
Timothy and ask him to fix it for us.

01:01:12.199 --> 01:01:13.019
>> And then I ask Bert.

01:01:13.019 --> 01:01:15.119
( Laughter )

01:01:15.119 --> 01:01:21.000
>> And we have not found anything that
we cannot do with incremental imaging.

01:01:21.000 --> 01:01:25.920
The one caveat to that is it depends on
how willing you are to do heavy lifting.