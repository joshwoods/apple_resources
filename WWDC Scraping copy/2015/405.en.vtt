WEBVTT

00:00:25.646 --> 00:00:25.966
>> SAM: Good morning.

00:00:26.516 --> 00:00:31.316
[Applause]

00:00:31.816 --> 00:00:33.666
So thank you all for
coming to today's session

00:00:33.666 --> 00:00:35.026
on authoring rich Playground.

00:00:35.176 --> 00:00:37.516
My name is Sam, and I'm an
engineer on the Xcode team.

00:00:39.576 --> 00:00:41.166
So Playgrounds have been
out for about a year now,

00:00:41.286 --> 00:00:42.976
and we've been absolutely
blown away

00:00:42.976 --> 00:00:43.966
by what you guys
have done with them.

00:00:44.396 --> 00:00:46.016
We've seen everything from
people writing their first

00:00:46.016 --> 00:00:47.516
"Hello, world" all the way

00:00:47.516 --> 00:00:49.676
up to people writing
entire books in Playgrounds.

00:00:50.066 --> 00:00:51.576
The response has
just been amazing.

00:00:52.486 --> 00:00:54.536
So today we're going to be
covering a couple of things.

00:00:54.536 --> 00:00:57.196
We're going to be talking
about some of the new features

00:00:57.196 --> 00:00:58.846
that were added to
Playground since last year,

00:00:58.846 --> 00:01:01.996
and we're also going to cover
some of the existing features

00:01:01.996 --> 00:01:02.736
that have been updated.

00:01:03.496 --> 00:01:05.355
And we'll also cover
some tips and tricks

00:01:05.355 --> 00:01:07.846
that can help you author
really, really rich Playgrounds,

00:01:08.326 --> 00:01:09.316
Playgrounds that
you want to share

00:01:09.316 --> 00:01:10.196
with the rest of the world.

00:01:10.316 --> 00:01:14.086
And as a bit of a
bonus, we're also going

00:01:14.086 --> 00:01:16.976
to be solving a problem that's
common among WWDC attendees,

00:01:16.976 --> 00:01:21.446
and that is how to
explore San Francisco.

00:01:22.056 --> 00:01:23.766
So what is the problem?

00:01:25.016 --> 00:01:26.956
Well, San Francisco
is a big place.

00:01:28.316 --> 00:01:30.916
There's a whole lot to see,
but really you're not going

00:01:30.916 --> 00:01:33.396
to find a lot of time to
do it between the sessions

00:01:33.396 --> 00:01:36.226
and the labs and writing
your next great apps.

00:01:37.276 --> 00:01:39.416
And you probably have a flight
to catch at the very end

00:01:39.416 --> 00:01:41.566
of the week, so there's
an endpoint here.

00:01:42.746 --> 00:01:45.676
And as engineers, we
want to be as efficient

00:01:45.706 --> 00:01:47.776
as we can possibly be
when we solve problems,

00:01:48.496 --> 00:01:51.476
which in the context of this
problem means we just don't want

00:01:51.476 --> 00:01:52.586
to walk any further
than we have to.

00:01:52.716 --> 00:01:54.976
So how are we going
to solve this problem?

00:01:55.866 --> 00:01:58.396
Well, once we know the
places that we want to visit,

00:01:58.796 --> 00:02:00.286
we're going to start
out at Moscone Center,

00:02:00.866 --> 00:02:02.486
traverse all the places
that we're going to see

00:02:02.486 --> 00:02:05.076
in the quickest way possible
before we finally have to jet

00:02:05.076 --> 00:02:07.076
out for San Francisco
International Airport.

00:02:07.356 --> 00:02:09.895
Now to do this we're going
to be building a Playground.

00:02:10.816 --> 00:02:14.386
So without further ado,
let's get into that.

00:02:22.206 --> 00:02:25.026
Okay, so I've got a
Playground already kind of set

00:02:25.026 --> 00:02:27.266
up for us here, and we'll
just take a quick moment to go

00:02:27.266 --> 00:02:27.966
through what we've got.

00:02:28.666 --> 00:02:30.686
So first up we've got a
struct here for place.

00:02:31.426 --> 00:02:33.476
So places are going to be
what we want to see when we're

00:02:33.476 --> 00:02:37.836
in San Francisco, and they're
going to have a name as a string

00:02:38.176 --> 00:02:41.086
and a location as a
CLLocationCoordinate2D.

00:02:42.996 --> 00:02:45.136
Next up we've got
a struct for city.

00:02:45.776 --> 00:02:48.046
So in the context of our
problem this is going

00:02:48.046 --> 00:02:49.296
to represent San Francisco.

00:02:50.356 --> 00:02:52.676
And we can think of this
as a collection of places.

00:02:52.676 --> 00:02:54.046
It's our own type to
hold these things.

00:02:54.626 --> 00:02:57.246
So internally we've
got an array of places,

00:02:57.486 --> 00:02:59.036
and then we've got
a function here

00:02:59.036 --> 00:03:00.956
that we can add places
to our city.

00:03:01.966 --> 00:03:04.326
So let's go ahead and
just create our city.

00:03:05.296 --> 00:03:06.906
We're going to call
it San Francisco.

00:03:07.996 --> 00:03:10.886
And like I said, we need to
start our journey somewhere.

00:03:11.056 --> 00:03:13.066
So we're going to go
ahead and create a place

00:03:13.066 --> 00:03:14.946
for Moscone Center, which is
where we're going to start.

00:03:15.926 --> 00:03:16.996
So let's create Moscone there.

00:03:16.996 --> 00:03:19.136
And then finally
we're just going

00:03:19.136 --> 00:03:20.976
to add the place to our city.

00:03:22.466 --> 00:03:24.826
So those of you who are familiar
with Playgrounds are going

00:03:24.826 --> 00:03:26.936
to remember that for each
line of code that executes,

00:03:27.396 --> 00:03:29.506
we get a result in the
results sidebar over here.

00:03:30.266 --> 00:03:33.096
So we can see that our add place
function is called, and it looks

00:03:33.096 --> 00:03:34.916
like we are passing in
Moscone Center to that.

00:03:35.716 --> 00:03:36.746
But if you look at it further

00:03:36.746 --> 00:03:38.976
down where we've created
our city and our place,

00:03:39.496 --> 00:03:40.646
all we're getting is the type.

00:03:41.246 --> 00:03:44.256
So this is handy,
but we kind of want

00:03:44.256 --> 00:03:45.836
to be a bit more descriptive,
especially if we're going

00:03:45.836 --> 00:03:47.226
to be creating a
few more places.

00:03:47.226 --> 00:03:50.176
If we see place after place
after place, we're not going

00:03:50.176 --> 00:03:51.576
to be able to differentiate
these things.

00:03:52.436 --> 00:03:55.546
So for our places, the most
descriptive thing is the name.

00:03:55.546 --> 00:03:59.086
So how do we get the name to be
returned in our results sidebar?

00:03:59.866 --> 00:04:01.406
Well for that we've
got a new protocol,

00:04:01.836 --> 00:04:03.726
and that is called
Custom String Convertible.

00:04:04.526 --> 00:04:09.216
So what I can do is I'll extend
my struct here for place to say

00:04:09.216 --> 00:04:09.536
that I'm going

00:04:09.536 --> 00:04:11.186
to be implementing
Custom String Convertible.

00:04:12.006 --> 00:04:13.866
And you can see now
I've got an area here

00:04:14.386 --> 00:04:16.426
because they're not actually
conforming to the protocol yet.

00:04:16.826 --> 00:04:19.435
So to actually conform to
the protocol we just need

00:04:19.435 --> 00:04:21.646
to implement a re
[unintelligible] property

00:04:21.706 --> 00:04:22.636
called description.

00:04:24.246 --> 00:04:25.826
And that's going
to return a string.

00:04:26.076 --> 00:04:28.226
And for us, we want to
return the name of our place

00:04:28.706 --> 00:04:29.936
because that's the
most descriptive thing.

00:04:30.436 --> 00:04:32.416
So you can see now, if
we look back down to

00:04:32.416 --> 00:04:33.496
where we created our place,

00:04:34.176 --> 00:04:36.526
we've got Moscone Center here
instead of just the type name.

00:04:37.526 --> 00:04:39.336
So what does this
mean for our city?

00:04:40.046 --> 00:04:42.476
Well probably the most
descriptive thing there is

00:04:42.826 --> 00:04:45.826
to return the list of places
that are currently in the city

00:04:46.106 --> 00:04:47.696
so we can see how our
journey is progressing.

00:04:48.436 --> 00:04:50.716
So we're going to go ahead
and do the exact same thing

00:04:50.716 --> 00:04:53.846
for city, just implement Custom
String Convertible there.

00:04:55.736 --> 00:04:58.756
And go ahead and
return the description.

00:04:59.046 --> 00:05:02.466
And for that we're going to
return to places.description,

00:05:02.516 --> 00:05:04.656
so the description of
our array of places.

00:05:05.646 --> 00:05:07.986
So now you can see when we
first created San Francisco,

00:05:08.526 --> 00:05:10.006
we don't actually
have anything in it

00:05:10.006 --> 00:05:12.036
yet so we get an
empty array here.

00:05:12.856 --> 00:05:16.066
But then when we add our place
to it, we get Moscone Center.

00:05:16.616 --> 00:05:18.896
So when we create more and more
places we're going to see more

00:05:18.896 --> 00:05:20.516
and more in our results sidebar.

00:05:21.856 --> 00:05:23.386
So one of the cool things

00:05:23.386 --> 00:05:25.296
about Playgrounds is
you're always able to kind

00:05:25.296 --> 00:05:28.386
of get a deeper look and get
more information about a result

00:05:28.746 --> 00:05:31.546
by clicking this Quick Look
here right next to the result.

00:05:32.066 --> 00:05:34.276
So I click that for
Moscone Center.

00:05:34.746 --> 00:05:37.386
We see a bit more
information about our place.

00:05:38.116 --> 00:05:40.826
So we've got the name and we've
got the latitude and longitude.

00:05:41.606 --> 00:05:45.526
This is superhandy to debug
but, I don't know, latitude

00:05:45.526 --> 00:05:46.996
and longitude doesn't
really help me.

00:05:46.996 --> 00:05:48.536
I'm not that great
at cartography.

00:05:48.536 --> 00:05:50.706
I don't know how to position
these things in the world.

00:05:51.376 --> 00:05:53.516
So I kind of want to see
something a bit more visual,

00:05:53.586 --> 00:05:54.506
something that just kind

00:05:54.586 --> 00:05:56.656
of screams out, yeah,
that's a place.

00:05:57.466 --> 00:05:59.776
And to me nothing
screams "place" more

00:05:59.776 --> 00:06:02.086
than just a big blue dot
with a name underneath,

00:06:02.156 --> 00:06:03.556
something I would put on a map.

00:06:03.956 --> 00:06:05.226
So how are we going to do that?

00:06:05.946 --> 00:06:07.636
Well normally when
we kind of want

00:06:07.636 --> 00:06:10.046
to do something a bit custom
and visual, we create a view.

00:06:10.046 --> 00:06:11.586
So we're going to go ahead

00:06:11.586 --> 00:06:13.436
and just create a UI
View subclass here.

00:06:14.496 --> 00:06:16.426
And we've got some of
that already set up.

00:06:16.426 --> 00:06:19.186
And let's just take a
quick moment to look

00:06:19.186 --> 00:06:20.026
through what we've got there.

00:06:21.036 --> 00:06:23.276
So we've got a class
here called View.

00:06:23.806 --> 00:06:25.656
It's going to be a
UI View subclass.

00:06:26.376 --> 00:06:28.606
And just internally we've
got another view that's going

00:06:28.606 --> 00:06:29.956
to be our big blue dot view.

00:06:30.116 --> 00:06:32.396
And then we've got a
name label that's going

00:06:32.396 --> 00:06:33.786
to show the name of our place.

00:06:34.606 --> 00:06:36.856
And then when we create
this thing, we're just going

00:06:36.916 --> 00:06:38.486
to let it decide how
big it wants to be.

00:06:38.966 --> 00:06:40.856
And finally in layout
subviews we're just going

00:06:40.976 --> 00:06:42.946
to position these things
so that blue dot's on top

00:06:43.096 --> 00:06:43.926
and the text is below.

00:06:44.896 --> 00:06:48.046
So we'll create one of these
just to see how it looks first,

00:06:48.536 --> 00:06:51.476
and we're going to pop
open the Quick Look.

00:06:53.546 --> 00:06:55.606
Cool, that's starting to
be a bit more like a place,

00:06:55.606 --> 00:06:57.286
like I can see that
appearing on a map.

00:06:57.836 --> 00:07:00.736
But how do we actually
join these things up so

00:07:01.316 --> 00:07:04.666
when we Quick Look our place, we
actually see our view returned?

00:07:05.826 --> 00:07:07.376
Well for that we've got
another new protocol,

00:07:07.946 --> 00:07:10.266
and that protocol is
called Custom Playground

00:07:10.266 --> 00:07:10.816
Quick Lookable.

00:07:11.856 --> 00:07:13.896
So what Custom Playground
Quick Lookable does is

00:07:14.116 --> 00:07:17.286
if you implement the required
method there, it will allow you

00:07:17.286 --> 00:07:20.896
to return another type to
appear as the Quick Look

00:07:20.896 --> 00:07:22.666
for your type or any other type.

00:07:22.666 --> 00:07:25.896
So that could be something
like a Bezier path or a color.

00:07:26.296 --> 00:07:27.756
But for our case we
want to return our view.

00:07:28.726 --> 00:07:29.896
So what I'm going to go ahead

00:07:29.896 --> 00:07:36.166
and do is just create an
extension for our place and say

00:07:36.166 --> 00:07:36.636
that that's going

00:07:36.636 --> 00:07:38.766
to be implementing Custom
Playground Quick Lookable.

00:07:39.876 --> 00:07:41.076
And so again, we've
got an error here

00:07:41.076 --> 00:07:42.726
because we're not actually
conforming to that yet.

00:07:43.306 --> 00:07:44.716
So we'll just add
the conformance there

00:07:44.876 --> 00:07:47.346
by implementing the Custom
Playground Quick Look method.

00:07:48.266 --> 00:07:50.306
And so inside that
method we're just going

00:07:50.306 --> 00:07:54.456
to return a Playground Quick
Look that's reflecting the view.

00:07:55.076 --> 00:07:57.316
Now because we're an extension
on place, we have access

00:07:57.396 --> 00:08:00.476
to the name of our place, so
we can just go ahead and throw

00:08:00.476 --> 00:08:01.536
that into the initializer there.

00:08:02.406 --> 00:08:06.016
So now, when we Quick Look our
place again, we should see,

00:08:06.586 --> 00:08:09.206
cool, we've got Moscone Center
there and everything is starting

00:08:09.206 --> 00:08:11.026
to look a bit more like a place.

00:08:12.476 --> 00:08:14.116
But we've kind of
ended up in a bit

00:08:14.116 --> 00:08:15.336
of code here that's just hanging

00:08:15.336 --> 00:08:17.256
around in the rest
of our Playground.

00:08:17.816 --> 00:08:19.926
And we kind of want to move
this just out of the way

00:08:19.926 --> 00:08:21.236
because no one else
really cares about this.

00:08:21.236 --> 00:08:24.256
It's not really helping us to
show what we're trying to do.

00:08:24.586 --> 00:08:27.156
So for this we're just
going to go ahead and,

00:08:27.326 --> 00:08:28.926
well first we're going to
delete this place view here

00:08:28.926 --> 00:08:29.666
because we don't need that.

00:08:30.596 --> 00:08:33.775
And we're going to grab the
view here that we declared

00:08:34.236 --> 00:08:37.336
and we're going to just go
ahead and put that directly

00:08:37.436 --> 00:08:39.126
in our extension on place.

00:08:40.976 --> 00:08:42.176
Clean up some white space here.

00:08:43.366 --> 00:08:46.036
And so when the Playground
reexecutes you should just see,

00:08:46.396 --> 00:08:48.336
cool, exactly what
we saw before but now

00:08:48.336 --> 00:08:51.366
that view code is all just
embedded within our extension

00:08:51.546 --> 00:08:53.236
so it's nice and clean.

00:08:54.756 --> 00:08:55.856
What does this mean
for our city?

00:08:56.836 --> 00:08:59.186
So if we're following the
kind of pattern that we want

00:08:59.186 --> 00:09:02.206
to see what's in our city at
the moment, then we kind of want

00:09:02.206 --> 00:09:03.416
to see what places
are in our city.

00:09:03.416 --> 00:09:05.706
And so this is going
to happen by default.

00:09:05.956 --> 00:09:07.776
So if we click on the Quick
Look for Moscone Center,

00:09:07.776 --> 00:09:09.136
we can see we've got
a place in there.

00:09:09.936 --> 00:09:12.416
And we can see the Moscone
Center, little blue dot

00:09:12.416 --> 00:09:16.636
in there, but as we add
more places, it's not going

00:09:16.636 --> 00:09:17.366
to help us all that much.

00:09:17.366 --> 00:09:18.346
It's just going to be listed up.

00:09:18.826 --> 00:09:21.426
We kind of want to visualize
how these things are positioned

00:09:21.426 --> 00:09:23.176
to each other based
on their location

00:09:23.346 --> 00:09:26.076
so we can start working out,
well if we're at Moscone Center,

00:09:26.076 --> 00:09:28.036
you know, we're probably
not going to go directly

00:09:28.036 --> 00:09:30.176
to Golden Gate Bridge, we'll
probably go to something

00:09:30.176 --> 00:09:31.216
like Coit Tower first.

00:09:32.326 --> 00:09:35.176
So for that we're going to
create another extension.

00:09:35.286 --> 00:09:36.046
This time on City.

00:09:36.136 --> 00:09:39.396
It's going to be again, Custom
Playground Quick Lookable,

00:09:40.346 --> 00:09:41.296
and we'll do that here.

00:09:41.296 --> 00:09:42.496
I've got a bit of
code ready for that.

00:09:42.496 --> 00:09:44.716
And we'll just walk
through this real quickly.

00:09:45.396 --> 00:09:46.616
So it's an extension on City,

00:09:46.966 --> 00:09:48.766
same way I implemented Custom
Playground Quick Lookable.

00:09:49.486 --> 00:09:50.376
We have conformed to that

00:09:50.436 --> 00:09:52.556
by implementing the Custom
Playground Quick Look

00:09:52.556 --> 00:09:52.956
method here.

00:09:52.956 --> 00:09:55.566
And then inside we're just
going to create a view,

00:09:56.036 --> 00:09:57.946
work out where these
things would be positioned

00:09:57.946 --> 00:10:00.686
within that view based on their
latitude and longitude pair.

00:10:01.656 --> 00:10:06.296
So now when we Quick Look
our city we should see, cool,

00:10:06.666 --> 00:10:08.406
Moscone Center on the
eastern side there

00:10:08.406 --> 00:10:11.726
by a little blank map, but we're
starting to build up a picture

00:10:11.756 --> 00:10:13.626
about what we're actually going
to be seeing while we're here.

00:10:14.616 --> 00:10:16.896
So now that we've got
this kind of in place,

00:10:17.026 --> 00:10:18.686
we're going to add
a few more places.

00:10:19.086 --> 00:10:20.796
But before we do
that, I kind of want

00:10:20.796 --> 00:10:23.426
to keep this map view here
just open all the time,

00:10:23.426 --> 00:10:24.246
or at least visual.

00:10:24.676 --> 00:10:27.266
I'm opening and closing it a lot
when I want to check my code.

00:10:27.996 --> 00:10:30.966
Well for that we've got this
cool little thing called an

00:10:31.006 --> 00:10:31.696
inline result.

00:10:32.126 --> 00:10:34.876
So right next to this Quick Look
button if I click Show Result,

00:10:35.396 --> 00:10:36.756
that's just going to
go ahead and throw

00:10:36.756 --> 00:10:38.876
that Quick Look directly
under the line of code

00:10:39.276 --> 00:10:42.846
that generated it so I can
keep working on my Playground

00:10:42.846 --> 00:10:44.296
and see it constantly running

00:10:44.336 --> 00:10:46.086
and see what's actually
happening.

00:10:47.006 --> 00:10:49.946
And the cool thing is it's
kind of small right now

00:10:50.346 --> 00:10:51.866
so we can actually just
grab it and drag it

00:10:51.866 --> 00:10:54.136
out like we would any other
window and make it as big

00:10:54.206 --> 00:10:54.916
or as small as we want.

00:10:56.256 --> 00:10:58.766
So cool, we can start working
on the rest of our Playground,

00:10:58.836 --> 00:10:59.736
adding our places to that,

00:11:00.086 --> 00:11:01.356
and we should see them
pop up in our map.

00:11:02.546 --> 00:11:03.886
So what do we want to see?

00:11:04.456 --> 00:11:08.256
I've heard Golden Gate Bridge
is pretty cool and famous,

00:11:08.256 --> 00:11:09.976
so I'm going to go ahead
and check that out.

00:11:10.586 --> 00:11:12.886
We'll add that to the
places that we want to see.

00:11:13.106 --> 00:11:15.056
And when the Playground
reexecutes we'll see that based

00:11:15.056 --> 00:11:16.706
on the location of our
Golden Gate Bridge,

00:11:17.106 --> 00:11:19.746
we're going to be putting
that in the northwest,

00:11:20.146 --> 00:11:21.926
which if my knowledge

00:11:21.926 --> 00:11:24.776
of San Francisco geography is
correct, I think that's true.

00:11:26.106 --> 00:11:28.056
What else do we want to see?

00:11:28.056 --> 00:11:29.186
Sutro Tower, how about that?

00:11:29.186 --> 00:11:31.196
That's kind of like something
out of War of the Worlds,

00:11:31.686 --> 00:11:35.746
going to chuck that in and put
that in the places as well,

00:11:35.746 --> 00:11:37.876
going to chuck in Sutro Tower.

00:11:38.606 --> 00:11:39.786
And the Playground reexecute

00:11:40.496 --> 00:11:43.036
and then we'll see
Sutro Tower down south.

00:11:44.086 --> 00:11:45.496
So we're starting to get
a really good picture

00:11:45.496 --> 00:11:47.916
of how our places are built
up, and as we add more and more

00:11:47.916 --> 00:11:49.366
of these things we can see,

00:11:49.436 --> 00:11:52.016
based on where their
location is, how we're going

00:11:52.016 --> 00:11:52.916
to be getting between them.

00:11:52.916 --> 00:11:56.336
I'm just going to go ahead
and switch back to slides now.

00:11:57.416 --> 00:12:01.006
So you may have noticed that our
Playground got a little bit long

00:12:01.006 --> 00:12:01.776
towards the end of that.

00:12:02.136 --> 00:12:05.646
We had some view code and some
extensions, and there's a lot

00:12:05.646 --> 00:12:07.736
of stuff that wasn't
really helping us to kind

00:12:07.736 --> 00:12:09.106
of describe the problem.

00:12:09.896 --> 00:12:11.646
It was not that great.

00:12:12.236 --> 00:12:15.196
So what we kind of want to do is
pull a lot of that code directly

00:12:15.196 --> 00:12:17.496
out of the main body of the
Playground but still keep it

00:12:17.496 --> 00:12:18.726
around so we can use it.

00:12:19.446 --> 00:12:20.776
So to show you how
we're going to do that,

00:12:20.916 --> 00:12:22.646
I'd like to invite my colleague
Connor up to the stage.

00:12:24.516 --> 00:12:33.416
[Applause]

00:12:33.916 --> 00:12:34.536
>> CONNOR: Thank you, Sam.

00:12:34.916 --> 00:12:35.666
Hello everyone.

00:12:35.856 --> 00:12:38.396
My name is Connor and I'm an
engineer on the Xcode team.

00:12:38.996 --> 00:12:39.866
Today I'll be talking to you

00:12:39.866 --> 00:12:42.206
about how you can make your
Playgrounds more powerful

00:12:42.526 --> 00:12:45.356
and making them even more
focused on the problem at hand.

00:12:45.706 --> 00:12:47.796
In order to do this, let's
dive straight into a demo

00:12:47.796 --> 00:12:50.556
where I'll take a look at the
Playground that Sam just started

00:12:50.556 --> 00:12:52.456
and add support for
finding the best path

00:12:52.616 --> 00:12:55.516
through San Francisco while
making it more focused.

00:12:55.516 --> 00:12:57.286
Let's head over to
the demo machine now.

00:13:08.806 --> 00:13:10.466
Okay, so here we are in Xcode.

00:13:10.466 --> 00:13:13.316
And if you noticed, we've got
basically the same Playground

00:13:13.316 --> 00:13:14.236
that Sam was just showing you.

00:13:14.706 --> 00:13:17.456
We start off by creating
a city for San Francisco.

00:13:18.056 --> 00:13:21.656
We create a few places, and then
we add those places to the city,

00:13:22.376 --> 00:13:25.526
ending up with this great inline
result showing you what we've

00:13:25.526 --> 00:13:26.326
built up so far.

00:13:27.386 --> 00:13:29.846
If you notice though, there
is one major difference,

00:13:29.946 --> 00:13:32.146
and that's that the
entire Playground now fits

00:13:32.146 --> 00:13:32.956
on one screen.

00:13:33.356 --> 00:13:36.496
I'm still using my custom
city in place structs, though.

00:13:36.496 --> 00:13:39.496
And even though Swift compiler's
pretty great, it isn't able

00:13:39.496 --> 00:13:41.406
to actually create structs
out of thin air yet.

00:13:41.946 --> 00:13:44.516
So what we're using instead
is a feature which we added

00:13:44.516 --> 00:13:46.896
in Xcode 6.3 called
Auxiliary Sources.

00:13:48.016 --> 00:13:50.716
The auxiliary sources are
additional Swift source files,

00:13:50.866 --> 00:13:52.576
which are embedded
inside of your Playground,

00:13:52.576 --> 00:13:55.286
and they're precompiled into
a separate swift module.

00:13:56.066 --> 00:13:58.146
Because they don't
need to be interactive,

00:13:58.266 --> 00:14:00.506
they can perform better
than the Playground itself.

00:14:01.566 --> 00:14:03.766
Additionally, since they're
in a separate module,

00:14:03.766 --> 00:14:07.036
you can use access control
to ensure that only the bits

00:14:07.036 --> 00:14:09.516
of your Auxiliary Sources which
you want to be made visible

00:14:09.516 --> 00:14:11.736
to the Playground are exposed,
so you can hide a bunch

00:14:11.736 --> 00:14:13.266
of internal implementation
details

00:14:13.266 --> 00:14:14.386
in the auxiliary sources.

00:14:15.686 --> 00:14:17.656
To find them, we'll go ahead
and open up the navigator.

00:14:17.656 --> 00:14:21.426
In your PC, we've got the
Playground at the top.

00:14:21.726 --> 00:14:22.156
And then inside

00:14:22.156 --> 00:14:23.776
of the Playground we've
got thr sources folder.

00:14:24.036 --> 00:14:26.226
In the sources folder
we've just got a collection

00:14:26.226 --> 00:14:27.196
of Swift source files.

00:14:27.196 --> 00:14:30.986
I can open one up, and
here we've got city.swift,

00:14:30.986 --> 00:14:35.256
and it's basically the same
struct that Sam was just working

00:14:35.256 --> 00:14:36.786
on with a few minor
modifications.

00:14:37.976 --> 00:14:41.606
First, I'd mark it as public
because we want the city

00:14:41.606 --> 00:14:44.906
to be able to be used by
the main Playground itself.

00:14:45.876 --> 00:14:48.646
I've also added support for
travel times to the city

00:14:48.646 --> 00:14:50.846
so that we can actually keep
track of the time needed to get

00:14:50.846 --> 00:14:52.676
between each place in the city.

00:14:53.806 --> 00:14:58.276
If we look at place.swift, we
see the same basic stuff here.

00:14:58.576 --> 00:15:00.896
So same struct that we
had before, just modified

00:15:00.896 --> 00:15:03.706
to become public and with
a few modifications to work

00:15:03.706 --> 00:15:05.586
with the updated city struct.

00:15:05.586 --> 00:15:08.466
I have a couple of other
auxiliary source files,

00:15:08.466 --> 00:15:09.856
which I'm not going
to dive into.

00:15:09.986 --> 00:15:12.076
One has to do with
property list serialization,

00:15:12.076 --> 00:15:14.036
and the other one is kind
of a grab bag of utilities

00:15:14.036 --> 00:15:15.606
that I've just pulled
together from other projects

00:15:15.606 --> 00:15:17.436
that I've worked on,
and it will help me

00:15:17.436 --> 00:15:19.136
out when I'm implementing
our algorithm.

00:15:20.306 --> 00:15:21.646
Let's switch back to
the main Playground now.

00:15:21.706 --> 00:15:26.166
And so here we see that we have,
you know, the start of a city.

00:15:26.226 --> 00:15:28.326
We're starting to
build something up,

00:15:28.326 --> 00:15:30.506
but I want to visit more
than just these two places,

00:15:30.946 --> 00:15:35.146
and we also want to have all
the travel times between places.

00:15:35.856 --> 00:15:38.516
I could add all of that in
code, but that wouldn't be great

00:15:38.516 --> 00:15:40.176
because we'd have a
bunch of code at the top

00:15:40.176 --> 00:15:41.676
of the Playground, which
isn't really instructive

00:15:41.676 --> 00:15:42.866
to what we're trying to show.

00:15:42.906 --> 00:15:45.766
So instead I'm going to take
advantage of another feature

00:15:45.766 --> 00:15:48.446
that we have in Playgrounds
called Embedded Resources.

00:15:48.966 --> 00:15:52.016
The embedded resources
are files which are copied

00:15:52.016 --> 00:15:55.056
into the Playground itself
and are made available

00:15:55.056 --> 00:15:56.666
to the Playground when it runs

00:15:56.666 --> 00:15:58.876
as the resources
of the main bundle.

00:15:58.876 --> 00:16:01.076
And they live in the
navigator as well,

00:16:01.076 --> 00:16:02.326
in this little Resources folder.

00:16:02.666 --> 00:16:05.456
What I'm going to do is I'm
going to drag in a plist

00:16:05.606 --> 00:16:09.226
from the Finder that defines
the city of San Francisco.

00:16:09.226 --> 00:16:11.086
So I'll go ahead and do that.

00:16:11.276 --> 00:16:12.736
I've got the SanFrancisco.plist.

00:16:13.296 --> 00:16:14.736
I can drag it in here,

00:16:14.736 --> 00:16:17.476
and it will get copied
inside the Playground file.

00:16:17.636 --> 00:16:18.836
This means that we
don't have to worry

00:16:18.836 --> 00:16:20.756
about any external file
references breaking

00:16:20.756 --> 00:16:21.686
when you decide that you want

00:16:21.686 --> 00:16:22.926
to share your Playground
with someone else.

00:16:23.336 --> 00:16:25.416
It's all just in there so you
can send it as a discreet unit.

00:16:26.656 --> 00:16:28.556
Let's take a look at what
this plist looks like.

00:16:29.806 --> 00:16:32.536
And so first we've got
an array of places.

00:16:33.516 --> 00:16:35.366
Each place is just
mapping a latitude

00:16:35.366 --> 00:16:36.656
and a longitude to a name.

00:16:36.716 --> 00:16:39.786
And then let's scroll
down a bit in this file.

00:16:40.246 --> 00:16:42.936
We'll see here that we've
got an array of travel times.

00:16:43.486 --> 00:16:46.316
And a travel time is just
mapping two places to the time

00:16:46.316 --> 00:16:48.696
and minutes needed to
get between those places,

00:16:49.576 --> 00:16:54.356
these times gathered using
the trans directions in iOS 9.

00:16:55.426 --> 00:16:57.516
Now even though I'm calling
these destination and origin,

00:16:58.006 --> 00:17:00.846
I am making this a little
bit simpler and assuming

00:17:00.846 --> 00:17:02.226
that the time it takes
to get from point A

00:17:02.226 --> 00:17:05.006
to point B is the same as
the time to get from point B

00:17:05.006 --> 00:17:07.826
to point A, so these are
actually bidirectional

00:17:07.925 --> 00:17:08.656
travel times.

00:17:10.246 --> 00:17:11.496
Switch back to the
main Playground now.

00:17:12.556 --> 00:17:15.096
And instead of having all
this code here, I'm just going

00:17:15.096 --> 00:17:18.266
to select a bunch of it and
delete it and replace it

00:17:18.266 --> 00:17:21.465
with a call to load my
city of San Francisco.

00:17:22.496 --> 00:17:25.205
So start out by calling
this initializer on city,

00:17:25.596 --> 00:17:27.316
call contents of
property list at URL.

00:17:27.316 --> 00:17:30.226
And what it will do is that
it will just simply look

00:17:30.226 --> 00:17:33.166
at the main bundle to get the
URL for a particular resource,

00:17:33.306 --> 00:17:35.526
this San Francisco plist.

00:17:36.376 --> 00:17:40.366
We know that we've just added
this into the Playground,

00:17:40.926 --> 00:17:42.806
so I'll force unwrap
that optional

00:17:42.866 --> 00:17:45.286
so I can pass it
to my initializer.

00:17:46.846 --> 00:17:48.506
Additionally, this
initializer has been updated

00:17:48.506 --> 00:17:50.776
to take advantage of Swift
2's error handling feature.

00:17:51.396 --> 00:17:52.366
So I'll indicate to the compiler

00:17:52.366 --> 00:17:55.056
that I know it can throw an
error with the Try keyword

00:17:55.456 --> 00:17:57.486
and add an exclamation point
at the end because I don't want

00:17:57.486 --> 00:18:00.416
to add a bunch of error handling
code that's not instructive

00:18:00.416 --> 00:18:01.776
for what I'm trying to
show in this Playground.

00:18:02.326 --> 00:18:05.066
Additionally, I know that this
plist is correct, so it's okay

00:18:05.066 --> 00:18:06.586
for me to load it this way.

00:18:08.246 --> 00:18:09.296
We can show this inline now.

00:18:10.246 --> 00:18:13.216
And let's make it a
little bit bigger.

00:18:13.446 --> 00:18:15.176
So here we've got our city now.

00:18:15.696 --> 00:18:19.166
We've got the Moscone Center,
Coit Tower, Fisherman's Warf,

00:18:19.166 --> 00:18:21.966
the Painted Ladies, Sutro
Tower, Golden Gate Park,

00:18:21.966 --> 00:18:24.996
Golden Gate Bridge, and
not pictured in our map

00:18:25.036 --> 00:18:27.666
but still there is the San
Francisco International Airport.

00:18:27.666 --> 00:18:29.496
And you can see all
the connections leading

00:18:29.496 --> 00:18:30.106
to the airport.

00:18:31.466 --> 00:18:33.336
So great, we've got a city
that we can work with now.

00:18:33.776 --> 00:18:35.276
But now that I look at it,

00:18:35.276 --> 00:18:37.736
I think I'd like to make this
Quick Look a little bit nicer

00:18:38.076 --> 00:18:40.726
by adding in some icons for
all the places that I'll visit.

00:18:41.836 --> 00:18:44.466
And it just so happens that
on my desktop I've got this

00:18:44.466 --> 00:18:45.196
Images folder.

00:18:45.866 --> 00:18:47.926
And if I open that up you can
see, here we've got a bunch

00:18:47.926 --> 00:18:49.626
of icons for each
of these places.

00:18:49.956 --> 00:18:53.366
So I'll just go ahead and
take those and drag them

00:18:53.366 --> 00:18:55.246
into the Resources
folder as well.

00:18:55.246 --> 00:18:57.656
Just like the plist,
they'll be copied in there

00:18:57.656 --> 00:18:59.126
and be made available
to my Playground.

00:18:59.776 --> 00:19:02.176
I do need to update my
Quick Look to take advantage

00:19:02.176 --> 00:19:02.956
of these images, though.

00:19:03.736 --> 00:19:06.796
So I'm going to go ahead and
open up the place.swift file

00:19:06.796 --> 00:19:09.106
in the Assistant editor
by option clicking on it.

00:19:09.706 --> 00:19:12.786
I will then find
this location view,

00:19:13.066 --> 00:19:15.546
and instead of initializing
it to just the blue circle,

00:19:15.546 --> 00:19:17.656
we're going to update this to
take advantage of the images.

00:19:18.386 --> 00:19:24.026
So I can take all that code and
we will update our place view.

00:19:24.896 --> 00:19:27.046
We'll start off by getting the
image associated with that,

00:19:27.866 --> 00:19:29.496
create an image view,
and then set a couple

00:19:29.496 --> 00:19:30.686
of properties before
returning it.

00:19:31.656 --> 00:19:34.366
Now when I save this
file, Xcode will notice

00:19:34.366 --> 00:19:35.986
that the auxiliary
sources have changed

00:19:35.986 --> 00:19:38.396
and will automatically
recompile their Swift module.

00:19:39.066 --> 00:19:42.456
Once the compile finishes, we'll
rerun the Playground itself

00:19:42.796 --> 00:19:45.046
and so the Quick Look
will update automatically.

00:19:45.226 --> 00:19:46.276
I didn't have to
do anything more

00:19:46.276 --> 00:19:47.946
than just make an
edit and save to disc.

00:19:49.336 --> 00:19:50.946
So great. That Quick
Look looks a lot better.

00:19:50.946 --> 00:19:52.626
Let's switch back to
the standard editor

00:19:52.716 --> 00:19:54.416
and start working
on our algorithm.

00:19:54.766 --> 00:19:56.276
I'm also going to
hide the navigator

00:19:56.276 --> 00:20:00.566
because I don't need it and
I'd like the extra space.

00:20:01.136 --> 00:20:03.766
So we're implementing a brute
force algorithm to find our way

00:20:03.766 --> 00:20:04.676
through San Francisco.

00:20:04.736 --> 00:20:06.416
And in order to get
that started,

00:20:06.696 --> 00:20:08.686
we need to just get all the
paths through San Francisco.

00:20:09.456 --> 00:20:10.266
So we'll start with this

00:20:10.266 --> 00:20:13.176
and what we do is we
just call this all paths

00:20:13.176 --> 00:20:15.706
through city method on our city
struct, telling it that we want

00:20:15.706 --> 00:20:17.816
to start at the Moscone
Center and that we want

00:20:17.816 --> 00:20:18.756
to end at the airport.

00:20:18.816 --> 00:20:21.086
And if you look in the
sidebar at the right,

00:20:21.086 --> 00:20:24.446
we see that we have 720 paths.

00:20:24.446 --> 00:20:26.126
I'll then implement
the algorithm itself,

00:20:28.306 --> 00:20:31.416
and here we're just starting
with a couple of variables

00:20:31.416 --> 00:20:34.636
which will hold our results, one
being for the best travel time

00:20:34.636 --> 00:20:36.156
and one for the best path.

00:20:36.816 --> 00:20:40.096
We'll then iterate over all
the paths through the city,

00:20:40.746 --> 00:20:42.836
getting the travel
time for each path.

00:20:44.006 --> 00:20:45.956
We'll then compare that
to our best travel time,

00:20:46.216 --> 00:20:48.286
updating our result
variables if necessary.

00:20:49.566 --> 00:20:53.276
Finally, at the end we can
see here the best travel time

00:20:53.276 --> 00:20:55.876
through the city so we'll
show that inline and we'll see

00:20:55.876 --> 00:20:59.036
that it will take 235 minutes
to get between all these places

00:20:59.036 --> 00:21:01.696
if we never stopped and
somehow managed to make all

00:21:01.696 --> 00:21:02.676
of our transit connections.

00:21:02.676 --> 00:21:07.316
We can also add the path itself
inline, and so we can see

00:21:07.316 --> 00:21:08.996
that we'll start off
at the Moscone Center,

00:21:08.996 --> 00:21:10.316
which is what we expected.

00:21:10.726 --> 00:21:12.976
We'll then head over to
Painted Ladies and Sutro Tower.

00:21:13.686 --> 00:21:15.616
Then up to Golden Gate Park
and Golden Gate Bridge.

00:21:15.666 --> 00:21:17.726
Then we'll head ove
to Fisherman's Warf

00:21:17.726 --> 00:21:20.036
and Coit Tower before heading

00:21:20.036 --> 00:21:22.186
down to the San Francisco
International Airport

00:21:22.276 --> 00:21:23.006
to catch our flight.

00:21:24.586 --> 00:21:26.726
So great, I've got all the
information that I need

00:21:27.246 --> 00:21:30.386
to go see the sights
so let's switch back

00:21:30.386 --> 00:21:32.906
to slides now to
take care of that.

00:21:50.116 --> 00:21:52.786
So I just showed you how you
can use the auxiliary sources

00:21:52.786 --> 00:21:55.036
and the embedded resources
features in Playgrounds

00:21:55.336 --> 00:21:57.716
to make your Playgrounds more
powerful while keeping them

00:21:57.716 --> 00:21:59.016
incredibly focused on the task

00:21:59.196 --> 00:22:00.566
that you're trying
to actually achieve.

00:22:02.026 --> 00:22:03.796
I think I have something
pretty interesting here,

00:22:03.796 --> 00:22:05.226
and I'd like to share
it with people

00:22:05.226 --> 00:22:06.666
when I get back home
from the conference.

00:22:07.276 --> 00:22:09.426
But it's not quite polished
enough that I'd be ready

00:22:09.426 --> 00:22:10.556
to show it to other people.

00:22:11.636 --> 00:22:13.896
We've added a bunch of great
features in Xcode 7, though,

00:22:13.896 --> 00:22:15.106
which makes sharing
your Playground

00:22:15.106 --> 00:22:16.566
with the world even
better than before.

00:22:17.156 --> 00:22:19.606
So now I'd like to invite my
colleague Matt up on stage

00:22:20.076 --> 00:22:21.686
to show you about that.

00:22:22.086 --> 00:22:22.386
Thank you.

00:22:23.516 --> 00:22:28.546
[Applause]

00:22:29.046 --> 00:22:30.186
>> MATT: Thank you
so much, Connor.

00:22:30.186 --> 00:22:30.726
Hi everybody.

00:22:30.726 --> 00:22:33.676
My name is Matt and I'm also
an engineer on the Xcode team.

00:22:34.256 --> 00:22:36.506
And I think Connor and Sam
have done a wonderful job

00:22:36.506 --> 00:22:38.886
of putting together a
really awesome Playground

00:22:38.886 --> 00:22:41.376
that shows people how to
get around San Francisco

00:22:41.376 --> 00:22:42.406
in the best way possible.

00:22:42.966 --> 00:22:45.266
But it really isn't ready
to be shared with the world,

00:22:45.266 --> 00:22:47.316
so I'm going to show you a
few tips and tricks you can do

00:22:47.546 --> 00:22:49.996
to make your Playground
richer and more engaging

00:22:49.996 --> 00:22:51.636
so you can put it out
there on the Internet

00:22:51.636 --> 00:22:52.526
and people will love it.

00:23:02.666 --> 00:23:04.546
So you can see here
we have the Playground

00:23:04.546 --> 00:23:06.456
as Connor just finished
working with it.

00:23:06.926 --> 00:23:09.766
And we have a very simple
algorithm that Connor wrote,

00:23:10.146 --> 00:23:12.606
which walks through all the
possible paths in the city

00:23:12.606 --> 00:23:15.096
of San Francisco and
compares them to one another.

00:23:15.096 --> 00:23:16.866
And it was great for you guys

00:23:16.866 --> 00:23:19.106
because we had Connor here
explaining every step of the way

00:23:19.106 --> 00:23:20.056
as he was implementing it.

00:23:20.846 --> 00:23:22.676
However, when we share
this with the world,

00:23:22.676 --> 00:23:24.476
unfortunately not
everyone was here at WWDC.

00:23:24.476 --> 00:23:27.946
So we'd like to add a little
bit of information, a little bit

00:23:27.946 --> 00:23:29.476
of context, so that people

00:23:29.476 --> 00:23:32.616
who view this Playground later
will understand exactly how we

00:23:32.616 --> 00:23:33.016
got here.

00:23:34.496 --> 00:23:35.656
So we introduced a new feature

00:23:35.656 --> 00:23:39.436
in Xcode 6.3 called
Playground Markup Comments.

00:23:39.726 --> 00:23:41.766
And that allows you to
annotate your Playground

00:23:41.766 --> 00:23:44.656
with rich prose formatted
in beautiful displays

00:23:45.076 --> 00:23:48.056
so that people can better
understand exactly how you got

00:23:48.056 --> 00:23:49.416
to the Playground
that you arrived at.

00:23:49.416 --> 00:23:52.476
So just to give us a little bit
more space I'm going to start

00:23:52.476 --> 00:23:56.186
by putting away our Quick
Look here, and I'm going

00:23:56.186 --> 00:23:59.106
to replace the comment at
the top of the Playground

00:23:59.906 --> 00:24:03.256
with a little bit of information
about exploring San Francisco.

00:24:03.346 --> 00:24:05.656
Now you can see this
looks a lot like a comment

00:24:05.656 --> 00:24:07.476
that you would put anywhere
else in your source file,

00:24:07.696 --> 00:24:08.576
but the biggest difference

00:24:08.576 --> 00:24:11.216
that differentiates
a rich markup comment

00:24:11.386 --> 00:24:13.486
from another comment
is the colon.

00:24:13.756 --> 00:24:16.386
We've got a colon after the
first asterisk in the comment,

00:24:16.576 --> 00:24:19.426
and we can actually do that as
well with single-line comments.

00:24:19.726 --> 00:24:21.196
So add a colon over
here as well.

00:24:21.866 --> 00:24:23.506
And when I go up
to the Editor menu

00:24:23.826 --> 00:24:27.326
and choose Show Rendered Markup,
you'll see that this rerenders

00:24:27.326 --> 00:24:30.296
and now we have these
beautiful rich blocks of text

00:24:30.606 --> 00:24:32.126
that we can use when we want

00:24:32.126 --> 00:24:33.696
to explain what's
happening in our Playground.

00:24:34.746 --> 00:24:36.646
We can actually format them
a little bit more as well.

00:24:37.396 --> 00:24:42.056
So if I switch back to the raw
markup, I can use a number sign

00:24:42.626 --> 00:24:44.466
to indicate that we'd
like a heading to indicate

00:24:44.466 --> 00:24:45.606
"Exploring San Francisco."

00:24:45.606 --> 00:24:48.696
And I could use, for
example, asterisks around

00:24:48.696 --> 00:24:50.446
"most efficient," to indicate

00:24:50.446 --> 00:24:51.806
that we want this
to be in italics.

00:24:52.786 --> 00:24:53.986
So if I render this again,

00:24:55.086 --> 00:24:57.536
you'll see that now we've
got a nice, big, bold heading

00:24:57.536 --> 00:24:59.876
that explains exactly what
we're going to be talking about.

00:25:00.136 --> 00:25:01.076
So that's a great start.

00:25:01.076 --> 00:25:03.496
I'd also like to
annotate a little bit more

00:25:03.496 --> 00:25:06.856
about the other things that are
happening in this Playground.

00:25:07.716 --> 00:25:09.056
For instance, all paths.

00:25:09.056 --> 00:25:11.226
All paths through the
city is a little bit vague

00:25:11.226 --> 00:25:12.726
and it's a little
bit mysterious,

00:25:12.926 --> 00:25:14.586
so I'd like to add a
little bit of information

00:25:14.836 --> 00:25:19.396
about how those paths
were computed.

00:25:20.536 --> 00:25:22.816
And the algorithm itself could
probably use a little bit

00:25:22.816 --> 00:25:23.766
of explanation as well.

00:25:24.696 --> 00:25:25.996
So we'll document the algorithm.

00:25:27.256 --> 00:25:29.916
And if I switch back once
more to the rendered markup,

00:25:30.336 --> 00:25:31.726
you'll see now we're
starting to get something

00:25:31.726 --> 00:25:34.266
that looks much more
like almost a book,

00:25:34.416 --> 00:25:36.086
something that a user
could sit down with,

00:25:36.156 --> 00:25:37.386
walk through, and understand.

00:25:37.566 --> 00:25:39.966
We've even got a nice
bolded list, which we use

00:25:39.966 --> 00:25:42.426
by inserting an asterisk
at the start of each line.

00:25:44.206 --> 00:25:45.026
So that's pretty awesome.

00:25:46.316 --> 00:25:47.786
But it isn't quite rich enough.

00:25:48.096 --> 00:25:50.256
We want to take it just
a little bit further.

00:25:50.606 --> 00:25:52.556
So to do that, we're
going to do a feature

00:25:52.556 --> 00:25:54.846
that we introduced a long
time ago on Playgrounds

00:25:54.956 --> 00:25:58.486
that is now even better on
Xcode 7, and that's Live Views.

00:25:59.166 --> 00:26:01.006
So I've taking the liberty
of writing a live view.

00:26:01.326 --> 00:26:04.726
I've put it into the auxiliary
sources already, and we're going

00:26:04.726 --> 00:26:07.416
to start by showing it
alongside this Playground

00:26:07.526 --> 00:26:10.266
to visualize exactly how
this algorithm works.

00:26:11.626 --> 00:26:13.346
So the first step to using
Live Views is that you need

00:26:13.346 --> 00:26:17.286
to import XCPlayground, which
is a module that has a bunch

00:26:17.286 --> 00:26:19.226
of really awesome
functions that allow you

00:26:19.226 --> 00:26:20.846
to do some pretty cool
stuff with Playgrounds.

00:26:21.196 --> 00:26:24.336
Now you're also welcome to do
this in your auxiliary sources

00:26:24.336 --> 00:26:26.526
and create, for instance,
a helper method

00:26:26.606 --> 00:26:27.616
that shows your live view.

00:26:27.616 --> 00:26:29.206
You don't need to do that
in the main Playground.

00:26:29.206 --> 00:26:30.646
But I'm going to do
it right here just

00:26:30.646 --> 00:26:32.216
so it's must clearer
how it all works.

00:26:34.286 --> 00:26:36.276
Once we've got our city of
San Francisco we're ready

00:26:36.276 --> 00:26:39.096
to show it, so I'm going to
instantiate a view controller

00:26:40.546 --> 00:26:43.136
with our new city view
controller, and I'm going

00:26:43.136 --> 00:26:45.166
to pass in the city
of San Francisco.

00:26:45.736 --> 00:26:49.986
I'm then going to use
the XCPShowView function,

00:26:50.486 --> 00:26:53.416
give it the name of a city,

00:26:53.836 --> 00:26:56.786
and pass in our view
controller's view.

00:26:58.136 --> 00:27:00.836
So if now I switch over and
show our Assistant editor

00:27:01.356 --> 00:27:05.146
after the Playground reexecutes,
we'll see a live view

00:27:05.536 --> 00:27:08.056
that looks just like the
city of San Francisco.

00:27:08.096 --> 00:27:16.706
And you can see that we've taken
the idea of the rich Quick Looks

00:27:16.706 --> 00:27:18.426
that we've already added
and we've laid them

00:27:18.426 --> 00:27:20.526
out onto something that looks
a little bit more realistic

00:27:20.526 --> 00:27:22.096
so people won't be
quite so disoriented.

00:27:23.146 --> 00:27:24.286
So that's the first step.

00:27:24.286 --> 00:27:27.346
But we also want to show how
the algorithm itself works,

00:27:27.756 --> 00:27:29.946
and to do that we're going
to add a little bit of code

00:27:30.676 --> 00:27:32.666
that updates the live
view as we're walking

00:27:32.666 --> 00:27:33.436
through our algorithm.

00:27:33.436 --> 00:27:37.336
So we have a loop here that
iterates through all the paths

00:27:37.336 --> 00:27:40.496
and all paths, and I'm going
to replace that with the method

00:27:40.496 --> 00:27:44.596
on my view controller called
Visualize Path Iteration.

00:27:45.386 --> 00:27:47.916
And I've written that to
use a trailing closure

00:27:48.786 --> 00:27:51.846
so I can actually update it so
that it looks almost exactly

00:27:51.846 --> 00:27:53.666
like the loop code
that we originally had.

00:27:53.666 --> 00:27:56.586
And I'm also going
to add a line in here

00:27:56.946 --> 00:27:59.556
so we can tell the view code
controller once we've found a

00:27:59.556 --> 00:28:01.916
better path, we want to
show that better path,

00:28:02.096 --> 00:28:03.886
especially on our map.

00:28:05.936 --> 00:28:07.796
So it will execute
through once more,

00:28:07.796 --> 00:28:14.236
and when it does you can see now
we're visualizing all the paths

00:28:14.376 --> 00:28:16.716
as we traverse them through
the city of San Francisco.

00:28:17.346 --> 00:28:19.276
And this is great
because now people

00:28:19.276 --> 00:28:22.926
who are reading this program can
really see exactly how we got

00:28:22.926 --> 00:28:27.176
to our answer of how to find
the best route through the city.

00:28:27.346 --> 00:28:28.266
You might notice
something, though,

00:28:29.436 --> 00:28:32.726
and that's that it's
checking a lot of paths.

00:28:32.726 --> 00:28:35.836
It's actually checking 720
paths, as Connor pointed

00:28:35.836 --> 00:28:38.266
out earlier, and
that's quite a few.

00:28:38.566 --> 00:28:42.156
In fact by default, live
views run for 30 seconds,

00:28:42.156 --> 00:28:44.846
which you can change
with this control

00:28:44.846 --> 00:28:46.286
down in the bottom
right of the Playground.

00:28:46.956 --> 00:28:49.736
And that isn't even enough
time to make it through all

00:28:49.736 --> 00:28:51.216
of the paths through the
city of San Francisco.

00:28:51.216 --> 00:28:52.916
Now we've artificially
slowed it down a little bit

00:28:52.916 --> 00:28:54.556
so you can see the
paths as we iterate

00:28:54.556 --> 00:28:55.426
through them on the live view.

00:28:56.256 --> 00:28:58.456
But I think when people see
that, they're going to say,

00:28:58.456 --> 00:28:59.966
well there must be a better way.

00:29:00.636 --> 00:29:01.606
And in fact there is.

00:29:01.606 --> 00:29:04.276
And we'd like to start out
by showing that to our users

00:29:04.366 --> 00:29:05.156
from the very beginning.

00:29:06.126 --> 00:29:07.486
So we're going to use
another algorithm.

00:29:07.926 --> 00:29:10.416
It's a nearest neighbor
approximation algorithm,

00:29:10.416 --> 00:29:12.416
and what that's going to
do is it's going to be

00:29:12.416 --> 00:29:14.036
as though we were
starting at Moscone.

00:29:14.036 --> 00:29:16.676
We looked at all the places
that we wanted to visit

00:29:16.676 --> 00:29:19.186
and then we just picked the
closest one and we went to that.

00:29:19.186 --> 00:29:21.126
And then from that place
we'll pick the next closest

00:29:21.126 --> 00:29:22.066
and we'll go on from there.

00:29:22.066 --> 00:29:24.936
And if I wanted, I could
implement that right

00:29:24.936 --> 00:29:27.226
at the bottom of this
Playground document.

00:29:27.906 --> 00:29:29.596
But that would start to
get a little bit confusing,

00:29:29.786 --> 00:29:30.806
and it's not as focused.

00:29:30.976 --> 00:29:32.926
One of the wonderful
things about Playgrounds is

00:29:32.926 --> 00:29:35.726
that they're very, very
focused pieces of content,

00:29:35.786 --> 00:29:37.336
so we want to be able
to preserve that.

00:29:38.126 --> 00:29:39.976
And to do that we have
a brand new feature

00:29:39.976 --> 00:29:42.626
in Xcode 7 called
Pages, which allows you

00:29:42.626 --> 00:29:44.036
to have multiple
pages of content

00:29:44.096 --> 00:29:45.616
in a single Playground document.

00:29:46.776 --> 00:29:48.866
So to do that we're going
to open the navigator.

00:29:48.866 --> 00:29:53.216
And in the bottom-left corner
we'll choose the Plus button

00:29:53.856 --> 00:29:55.616
and click New Page.

00:29:56.416 --> 00:29:58.196
And that's going to
create a brand-new page

00:29:58.196 --> 00:29:59.566
in the same Playground.

00:29:59.596 --> 00:30:02.306
I'm going to call this one
Nearest Neighbor, after the name

00:30:02.676 --> 00:30:06.106
of the algorithm that
we're going to be using.

00:30:06.646 --> 00:30:10.546
And then we're going to
rename our initial Playground

00:30:12.006 --> 00:30:12.846
to Getting Around.

00:30:13.526 --> 00:30:18.216
Now Pages are also
pretty cool because,

00:30:18.276 --> 00:30:21.236
like the auxiliary sources and
resources that you can include

00:30:21.236 --> 00:30:22.796
in a Playground at
the top level,

00:30:23.006 --> 00:30:24.736
you can do that on
a per page basis.

00:30:24.736 --> 00:30:28.516
You can see I can twist open any
one of these Playground pages

00:30:28.516 --> 00:30:31.586
and we can embed
their own sources.

00:30:32.116 --> 00:30:34.626
Any resources of the
same name, for instance,

00:30:34.626 --> 00:30:37.186
will also override those
in the larger Playground.

00:30:37.456 --> 00:30:39.976
So if you want to have some
different branding on each page

00:30:39.976 --> 00:30:43.026
or a particular image that
is specific to the concept

00:30:43.026 --> 00:30:44.446
that you're teaching
in each different page,

00:30:44.656 --> 00:30:45.876
you can do that pretty easily.

00:30:46.646 --> 00:30:49.326
So right now I'm going to switch
the nearest neighbor page,

00:30:50.486 --> 00:30:52.036
switch back to the raw markup.

00:30:52.496 --> 00:30:54.526
And I've already written up this
algorithm, so I'm just going

00:30:54.526 --> 00:30:56.406
to go ahead and paste that in.

00:30:57.816 --> 00:31:00.106
So what we have here
is a Playground

00:31:00.486 --> 00:31:03.206
with nearest neighbor
approximation, and you can see

00:31:03.206 --> 00:31:07.646
when this one runs it
examines way fewer paths

00:31:07.696 --> 00:31:08.386
through the city.

00:31:10.416 --> 00:31:12.576
Now this is not an
optimal algorithm

00:31:12.896 --> 00:31:15.426
in that it won't
necessarily find our best path

00:31:15.656 --> 00:31:16.156
through the city.

00:31:16.306 --> 00:31:19.336
But you can see it's already
done, which is pretty cool.

00:31:19.476 --> 00:31:21.556
So this is a great way
of showing, alright,

00:31:21.556 --> 00:31:23.666
there might be more than
one answer to this problem.

00:31:24.396 --> 00:31:28.796
And if we render
this, we can also show

00:31:29.456 --> 00:31:34.186
where we got this path from.

00:31:34.336 --> 00:31:37.436
We actually edited this on,
we found the information

00:31:37.496 --> 00:31:39.786
for this algorithm on Wikipedia.

00:31:40.416 --> 00:31:42.706
Unfortunately, I
invented a little too far.

00:31:42.706 --> 00:31:48.856
And we can embed a link
right into the Playground,

00:31:48.856 --> 00:31:51.286
which would take us to the page
explaining exactly how this

00:31:51.286 --> 00:31:52.106
algorithm works.

00:31:52.386 --> 00:31:55.636
We could also link between
pages in a single Playground

00:31:55.976 --> 00:31:59.356
and bring it back to our optimal
path that we discovered earlier.

00:31:59.356 --> 00:32:03.506
And in fact, when we look
at the number of paths

00:32:03.506 --> 00:32:05.396
and the different paths that
we took through the city

00:32:05.606 --> 00:32:07.686
and how long this
algorithm takes to execute,

00:32:07.926 --> 00:32:10.706
we examined 720 paths on
this one and find a path

00:32:10.706 --> 00:32:13.196
that is only 21 minutes
faster than the other page.

00:32:13.556 --> 00:32:15.706
So that gives people a frame
of reference for saying,

00:32:15.936 --> 00:32:17.296
maybe there are other
ways to do it.

00:32:17.406 --> 00:32:19.816
And they can use a Playground
to experiment with that all

00:32:19.816 --> 00:32:21.356
by themselves, which
is pretty awesome.

00:32:23.026 --> 00:32:26.316
So that's adding
sections of markup, Pages,

00:32:26.316 --> 00:32:27.746
and Live Views in Playgrounds.

00:32:29.516 --> 00:32:35.626
[Applause]

00:32:36.126 --> 00:32:38.646
So we have a lot of
really awesome new features

00:32:38.646 --> 00:32:40.016
in Playgrounds in Xcode 7.

00:32:40.436 --> 00:32:42.566
We showed you Custom Quick
Looks, which allow you

00:32:42.566 --> 00:32:45.126
to take your custom data
types and make them come alive

00:32:45.126 --> 00:32:47.166
in the same way that a lot
of the built-in types do.

00:32:47.796 --> 00:32:50.796
We've also got inline results,
which stay with the Playground,

00:32:50.796 --> 00:32:52.996
so you can show results right
next to the line of codes

00:32:52.996 --> 00:32:55.696
that produced them, and then
those go with the Playground

00:32:55.696 --> 00:32:56.736
when you share it
with other people.

00:32:57.426 --> 00:33:00.486
We also have Auxiliary Sources
so you can take the code

00:33:00.486 --> 00:33:03.206
that goes with your Playground
that isn't as instructive

00:33:03.206 --> 00:33:06.026
as the code in the main
Playground and put those aside

00:33:06.316 --> 00:33:09.206
so that your users see only
the API and the functionality

00:33:09.206 --> 00:33:10.156
that you want them to see.

00:33:10.536 --> 00:33:13.546
We also have Embedded Resources
so you can bring in images

00:33:13.546 --> 00:33:16.756
and make things feel even
more alive and more engaging.

00:33:17.486 --> 00:33:19.176
We've got brand-new
markup comments

00:33:19.536 --> 00:33:21.966
that are a really great
way to guide your user

00:33:22.076 --> 00:33:24.346
through your Playground when
you can't be there with them,

00:33:24.676 --> 00:33:26.976
enhanced Live Views which
are better than ever,

00:33:27.406 --> 00:33:29.846
and Pages which allow you
to cover multiple topics

00:33:30.126 --> 00:33:32.816
in a single Playground without
distracting from the focus

00:33:32.816 --> 00:33:34.716
of each of them, which
is really, really cool.

00:33:35.566 --> 00:33:38.876
So that is what we have
in Playgrounds in Xcode 7.

00:33:40.516 --> 00:33:43.556
[Applause]

00:33:44.056 --> 00:33:46.596
For more information, you
can visit the website.

00:33:46.596 --> 00:33:48.926
We've got documentation up
there and the developer forums.

00:33:49.376 --> 00:33:51.756
You can also talk
to Stefan Lesser,

00:33:51.756 --> 00:33:53.276
our Developer Tools Evangelist.

00:33:53.766 --> 00:33:55.676
We have a number of related
sessions that are going on.

00:33:55.986 --> 00:33:57.556
We've got Swift in Practice,

00:33:57.556 --> 00:33:58.946
which is happening
tomorrow afternoon,

00:33:58.946 --> 00:34:01.036
and Building Better Apps
with Value Types in Swift.

00:34:01.166 --> 00:34:02.656
Also the What's New in
Xcode and What's New

00:34:02.656 --> 00:34:04.616
in Swift sessions will
be great all week.

00:34:04.836 --> 00:34:07.596
Thanks so much everybody and
enjoy the rest of the WWDC.

00:34:08.016 --> 00:34:09.000
[Applause]