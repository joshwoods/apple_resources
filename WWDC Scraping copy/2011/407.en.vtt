WEBVTT

00:00:09.600 --> 00:00:10.250
Hi.

00:00:10.720 --> 00:00:12.860
Welcome to the introduction
to Game Center.

00:00:13.100 --> 00:00:14.080
I'm Nathan Taylor.

00:00:14.160 --> 00:00:17.640
I'm the engineering manager of the
Game Center team in iOS engineering.

00:00:17.640 --> 00:00:21.640
And I'm going to talk to you today
all about Game Center and how you

00:00:21.640 --> 00:00:24.100
can get Game Center on in your games.

00:00:24.120 --> 00:00:27.010
First,
a little overview of what Game Center is.

00:00:27.040 --> 00:00:29.680
Game Center is Apple's
online social network.

00:00:29.680 --> 00:00:33.020
It's been available since iOS 4.1.

00:00:33.110 --> 00:00:34.480
That's about nine months ago.

00:00:34.480 --> 00:00:39.500
A year ago, basically on this stage,
we presented Game Center as

00:00:39.500 --> 00:00:40.780
a developer preview.

00:00:40.780 --> 00:00:42.990
We got a lot of interest and excitement.

00:00:42.990 --> 00:00:46.700
We've seen some great games
since it released with iOS 4.1.

00:00:46.700 --> 00:00:49.860
Game Center provides several
features to make the gaming

00:00:49.860 --> 00:00:53.840
experience more social and more
competitive and more interesting.

00:00:54.120 --> 00:00:57.720
One, we have online leaderboards,
which really allow players to compare

00:00:57.760 --> 00:01:01.700
the best scores against their friends and
against the best players in the world.

00:01:01.860 --> 00:01:06.840
We also offer integrated achievements
so that you can reward your game

00:01:06.930 --> 00:01:09.770
players for exceptional gameplay.

00:01:09.810 --> 00:01:13.140
You can give them -- let them track --
you can track and reward their progress,

00:01:13.140 --> 00:01:14.710
you know,
and let them really feel that they've

00:01:14.710 --> 00:01:16.030
accomplished something in their game.

00:01:16.040 --> 00:01:17.760
You know,
a lot of people want to go and get

00:01:17.790 --> 00:01:19.290
all the achievements in the game.

00:01:19.290 --> 00:01:22.190
There's an achievement for beating
every level of the game that I know

00:01:22.190 --> 00:01:23.820
people that will go and try to get it.

00:01:25.320 --> 00:01:28.920
And then we had a big feature
called multiplayer gaming,

00:01:28.920 --> 00:01:30.840
and this also came with voice chat.

00:01:30.840 --> 00:01:35.960
And this allowed people to compete
online and communicate in their games.

00:01:35.960 --> 00:01:38.840
And it's been really great to see
some of the awesome multiplayer

00:01:38.840 --> 00:01:40.280
games that have come out.

00:01:40.280 --> 00:01:44.280
And Game Center itself provides
many avenues for promotion

00:01:44.280 --> 00:01:46.380
and discovery of your games.

00:01:46.380 --> 00:01:49.540
And just one of these is the friends
list and friend details where you can

00:01:49.540 --> 00:01:51.900
see what your friends are playing.

00:01:52.020 --> 00:01:56.550
Since we released,
we now have 50 million Game Center users.

00:01:57.600 --> 00:02:00.500
This is a massive community.

00:02:00.500 --> 00:02:04.060
We also have many of the top games
selling in the App Store today

00:02:04.060 --> 00:02:05.780
are Game Center enabled.

00:02:06.090 --> 00:02:10.290
And we really want all the top
games to be Game Center enabled.

00:02:10.460 --> 00:02:12.840
There's been a ton of
activity in Game Center.

00:02:12.870 --> 00:02:15.400
We've got a lot of users doing
a lot of different things,

00:02:15.460 --> 00:02:18.780
and we'd really like to see
them playing your games.

00:02:19.000 --> 00:03:23.000
[Transcript missing]

00:03:23.600 --> 00:03:27.030
Game Center is delivered in three parts:
the application,

00:03:27.030 --> 00:03:30.700
which is the user-facing front;
there's the GameKit framework,

00:03:30.810 --> 00:03:34.790
which you are going to use the API from
in your application; and then there's

00:03:34.850 --> 00:03:37.440
the Game Center services that manage
all of these users that we have,

00:03:37.440 --> 00:03:40.200
and all of the data, the leaderboards,
the achievements that they

00:03:40.200 --> 00:03:41.440
submit and they've earned.

00:03:41.460 --> 00:03:44.220
And we tie all these
together in Game Center,

00:03:44.220 --> 00:03:46.860
and you get to it through
the GameKit framework.

00:03:46.890 --> 00:03:49.020
We're going to start
with the Game Center app,

00:03:49.020 --> 00:03:53.220
get a brief overview of what it
provides and what's new in iOS 5.

00:03:53.250 --> 00:03:57.420
The Game Center app is the
built-in app for social gaming.

00:03:57.420 --> 00:04:01.800
It's a feature built into all
iOS devices we sell today.

00:04:01.850 --> 00:04:04.790
It provides most of the basic services.

00:04:04.910 --> 00:04:06.980
It starts off with account management.

00:04:06.980 --> 00:04:09.980
We need the users to create
their Game Center account.

00:04:10.040 --> 00:04:13.500
They can also manage their account,
change settings.

00:04:13.500 --> 00:04:16.700
But the more interesting features
are how they can use Game Center to

00:04:16.770 --> 00:04:20.640
browse and discover their friends
and make new friends and build this

00:04:20.950 --> 00:04:22.940
great friend graph that we have.

00:04:22.940 --> 00:04:28.040
And for you guys, how they can browse and
discover your games.

00:04:28.040 --> 00:04:30.230
And we really hope this --
when you adopt Game Center,

00:04:30.270 --> 00:04:33.680
this helps your game sales and makes
the experience better for users and

00:04:33.680 --> 00:04:36.380
really helps promote your games.

00:04:36.380 --> 00:04:38.850
So let's go through the
tabs of Game Center.

00:04:38.940 --> 00:04:41.340
And we'll start with the first tab.

00:04:41.370 --> 00:04:42.820
This is usually where people
are going to first come to.

00:04:42.990 --> 00:04:43.820
It's the Me tab.

00:04:43.900 --> 00:04:46.080
It shows everything
about the current player.

00:04:46.260 --> 00:04:49.320
It's a basic player overview,
and we can see, you know,

00:04:49.320 --> 00:04:51.980
the number of games I've played,
the number of points I've

00:04:51.980 --> 00:04:55.820
earned from achievements,
the number of friends I have.

00:04:55.820 --> 00:04:58.480
Then, you know, users get to interact,
and they can share some

00:04:58.480 --> 00:05:01.560
information with a friend,
so they can set a status.

00:05:01.560 --> 00:05:04.180
And new for iOS 5,
we can have photos associated

00:05:04.180 --> 00:05:06.250
with the Game Center accounts,
which are visible in

00:05:06.250 --> 00:05:09.560
leaderboards in your games,
and you can actually access them

00:05:09.560 --> 00:05:14.600
with an API to show and associate
with their avatar in your game.

00:05:14.670 --> 00:05:18.070
And finally, the boring part,
basic account management

00:05:18.070 --> 00:05:20.700
on the Game Center app.

00:05:20.700 --> 00:05:22.380
The next tab over is the friends tab.

00:05:22.400 --> 00:05:30.600
This is where users can browse and now
in iOS 5 discover many new friends.

00:05:31.040 --> 00:05:33.560
Now, this is basically the friends list.

00:05:33.560 --> 00:05:35.660
We order it by recently played.

00:05:35.660 --> 00:05:37.990
We have a few other features to order it.

00:05:38.160 --> 00:05:42.430
And we also now have a new feature
called the Achievement Leaderboard.

00:05:42.430 --> 00:05:45.770
And this is where the user can
come in and see how they are doing

00:05:46.290 --> 00:05:50.360
compared to their friends with
all their achievement points.

00:05:50.360 --> 00:05:52.380
And they can also compare themselves,
as you can see a little

00:05:52.550 --> 00:05:54.820
hint of at the bottom,
with top players in the

00:05:54.820 --> 00:05:56.320
Game Center community.

00:05:56.440 --> 00:06:01.290
We really think that this is going to
drive competition and make users look for

00:06:01.480 --> 00:06:06.150
games they can purchase and play and earn
more achievements so that they can climb

00:06:06.210 --> 00:06:11.850
these leaderboards and move to the top.

00:06:11.850 --> 00:06:11.850
And new in iOS 5,
we have a new feature called

00:06:12.100 --> 00:07:18.200
[Transcript missing]

00:07:18.630 --> 00:07:22.500
and also new in iOS 5 to
aid in friend discovery,

00:07:22.520 --> 00:07:24.240
we have friends of friends.

00:07:24.380 --> 00:07:30.000
So you can find the friends that
you're missing that your friends have.

00:07:30.110 --> 00:07:33.430
And we can make new friends and just
always find new friends and have

00:07:33.520 --> 00:07:35.500
someone to play games with at any time.

00:07:35.560 --> 00:07:38.050
The third tab,
I find this one pretty fun because

00:07:38.050 --> 00:07:41.500
I've got a lot of games on my device,
is the Games tab.

00:07:41.650 --> 00:07:45.710
This is where users browse
their games and where users are

00:07:45.710 --> 00:07:47.870
going to discover your games.

00:07:48.300 --> 00:11:36.900
[Transcript missing]

00:11:37.390 --> 00:11:39.300
at the Game Kit framework overview.

00:11:39.300 --> 00:11:42.080
Game Kit is a framework to
enhance game development.

00:11:42.080 --> 00:11:45.530
We want to provide you access
to all the social features that

00:11:45.540 --> 00:11:49.470
Game Center provides and provide you
incentives or provide you functionality,

00:11:49.470 --> 00:11:52.330
provide incentives to your
users to keep playing your game.

00:11:52.330 --> 00:11:55.880
So we provide the basic authentication
that gets things started and gets

00:11:55.880 --> 00:12:00.330
the ball rolling and then APIs to
submit scores when your user makes

00:12:00.330 --> 00:12:05.020
a high score and show it in the
leaderboard and then reward the user

00:12:05.020 --> 00:12:09.120
for beating a game level or killing
the final boss with achievements.

00:12:10.590 --> 00:12:14.910
And finally, we provide APIs to
establish multiplayer games,

00:12:14.910 --> 00:12:18.040
and you can connect the
people with our API,

00:12:18.040 --> 00:12:22.200
auto matching our invites,
and then play either a peer-to-peer game,

00:12:22.230 --> 00:12:27.970
a server hosted game where you
host the game on your own servers,

00:12:27.970 --> 00:12:27.970
or a new, a turn-based game.

00:12:28.100 --> 00:14:00.500
[Transcript missing]

00:14:00.980 --> 00:14:03.260
Players are all the
people in Game Center.

00:14:03.260 --> 00:14:05.240
We have 50 million of them.

00:14:05.250 --> 00:14:08.570
Each player is backed by an Apple ID.

00:14:09.010 --> 00:14:11.840
So everybody has an Apple ID.

00:14:11.840 --> 00:14:18.490
Every player has an invariant player
ID that you can use to identify

00:14:18.590 --> 00:14:22.470
this player in your code and in
your save game files and when you

00:14:22.560 --> 00:14:24.660
communicate with the Game Kit API.

00:14:24.760 --> 00:14:27.170
Also,
to enhance the experience and to draw

00:14:27.170 --> 00:14:30.320
your users into your game better,
you can take advantage of

00:14:30.420 --> 00:14:33.160
some of the settings that the
player has in Game Center,

00:14:33.160 --> 00:14:35.240
such as their nickname and their photo.

00:14:35.290 --> 00:14:38.340
We encourage you to use the
nickname that you get from

00:14:38.340 --> 00:14:40.880
Game Center when a user signs in,
you know,

00:14:40.880 --> 00:14:42.620
when you're walking them through,
instead of having to

00:14:42.620 --> 00:14:44.000
enter a new profile name.

00:14:44.040 --> 00:14:47.140
And also, in iOS 5,
if you load the photo, you can really,

00:14:47.170 --> 00:14:49.920
you know,
personalize the game experience for them.

00:14:50.270 --> 00:14:53.300
Show on the right here in the
block diagram a couple of the

00:14:53.340 --> 00:14:55.020
properties that GKPlayer has.

00:14:55.340 --> 00:14:59.540
As I mentioned, it has a player ID and
a nickname and photo.

00:14:59.580 --> 00:15:02.220
One of the players you can use
all the time is the local player.

00:15:02.280 --> 00:15:03.980
The local player is special.

00:15:04.060 --> 00:15:05.240
It's a subclass of GKPlayer.

00:15:05.240 --> 00:15:07.240
It's a GKPlayer called GKLocalPlayer.

00:15:07.240 --> 00:15:11.160
It provides additional functionality,
such as access to the friends list,

00:15:11.240 --> 00:15:15.240
so you can see the friends of this
player and explore the friend graph.

00:15:15.410 --> 00:15:20.230
It also provides you a flag to
indicate if this player is underage.

00:15:20.240 --> 00:15:23.280
When they signed up with Game Center,
we find out this information and

00:15:23.380 --> 00:15:27.450
we'll convey it to you in case
you need to use this information

00:15:27.450 --> 00:15:30.240
for locale-specific reasons.

00:15:30.240 --> 00:15:33.150
And most importantly,
the GKLocalPlayer class

00:15:33.290 --> 00:15:35.240
provides the authentication API.

00:15:35.240 --> 00:15:38.240
This is how you are going to
initialize your game with Game Center.

00:15:38.380 --> 00:15:40.240
Let us know that the local
player is authenticated.

00:15:40.240 --> 00:15:43.480
And if necessary,
Game Center is going to do the

00:15:43.610 --> 00:15:46.070
work to gather the information
and authenticate the user.

00:15:46.240 --> 00:15:48.160
And as you can see
from the block diagram,

00:15:48.240 --> 00:15:51.320
local player has basically
the same properties as player,

00:15:51.320 --> 00:15:53.240
plus the additional ones
I've already mentioned,

00:15:53.240 --> 00:15:57.240
the friend list, the underage property,
and whether the player is authenticated.

00:15:57.240 --> 00:16:02.240
So let's take a quick look at how
authentication works and what's going on.

00:16:02.340 --> 00:16:05.170
All Game Center games
start by authenticating.

00:16:05.270 --> 00:16:07.290
educating the local player.

00:16:07.730 --> 00:16:10.000
We want you to do this
as soon as possible.

00:16:10.000 --> 00:16:13.680
We recommend you do it when you're
basically apt to finish launching.

00:16:13.680 --> 00:16:18.280
Game Center handles the process of
authenticating the player automatically.

00:16:18.280 --> 00:16:21.740
So the common case is the
user's already signed on.

00:16:21.740 --> 00:16:24.480
We have single sign on for Game Center.

00:16:24.480 --> 00:16:26.010
So nothing else needs to happen.

00:16:26.020 --> 00:16:29.340
We're going to show the banner
welcoming them back to your game.

00:16:29.340 --> 00:16:30.730
And game will continue.

00:16:30.730 --> 00:16:32.640
You should continue and move on.

00:16:32.640 --> 00:16:36.460
However, if this is a new user to
Game Center or they've signed out,

00:16:36.460 --> 00:16:39.780
we're going to handle first time sign on.

00:16:39.780 --> 00:16:42.800
So the authenticate call
is going to process,

00:16:43.030 --> 00:16:47.280
allow the user to use an existing
account or create a new account.

00:16:47.310 --> 00:16:50.730
And then we will call your completion
handler when it's all done.

00:16:50.950 --> 00:16:54.650
And finally, we also handle the tricky
case if a user doesn't want

00:16:54.650 --> 00:16:56.940
to use Game Center right now.

00:16:56.940 --> 00:16:59.250
We handle this case where
they choose to opt out.

00:16:59.430 --> 00:17:04.800
So if the user chooses to cancel
from this alert three times in a row,

00:17:04.800 --> 00:17:08.090
we will let the user opt out of
Game Center and we handle this

00:17:08.090 --> 00:17:11.790
automatically and we communicate
this to you with an error code.

00:17:12.100 --> 00:17:15.560
If this happens, the user can re-enable
Game Center simply by going to the

00:17:15.560 --> 00:17:17.140
Game Center app and signing in.

00:17:17.390 --> 00:17:22.700
So let's take a look at the steps
we recommend for authentication.

00:17:22.730 --> 00:17:29.000
Because Game Center shipped with
4.1 and doesn't support all devices,

00:17:29.030 --> 00:17:31.340
you need to check a couple things first.

00:17:31.410 --> 00:17:36.000
One, you want to check for the
presence of the Game Center API.

00:17:36.030 --> 00:17:39.900
You need to test the OS version to make
sure it's greater than or equal to 4.1.

00:17:39.980 --> 00:17:41.900
And then you're going to
request authentication.

00:17:41.900 --> 00:17:46.100
If both of those cases are true,
using the GK local player API.

00:17:46.150 --> 00:17:48.980
The end,
check the result and do the appropriate

00:17:49.100 --> 00:17:54.000
steps for your application to enable
or disable Game Center functionality.

00:17:54.020 --> 00:17:55.720
It's important, though,
that if the user can't

00:17:55.800 --> 00:17:58.330
authenticate for some reason,
that your games still work,

00:17:58.460 --> 00:18:00.500
that there should be
something they can play.

00:18:00.540 --> 00:18:02.840
Otherwise,
they're going to be fairly disappointed.

00:18:02.940 --> 00:18:05.290
So let's take a look at this in code.

00:18:05.670 --> 00:18:08.060
First thing we do is start at the top.

00:18:08.060 --> 00:18:14.190
We're going to get the class from this
local player using NSClass from string.

00:18:14.320 --> 00:18:17.220
Then we're going to test the
version number to make sure that

00:18:17.220 --> 00:18:19.510
it's greater than or equal to 4.1.

00:18:20.830 --> 00:18:24.750
If supported, which we check here,
we have a class,

00:18:24.840 --> 00:18:29.150
and we have the right OS version,
we're going to authenticate using

00:18:29.210 --> 00:18:31.760
authenticate with completion handler.

00:18:31.760 --> 00:18:35.000
Here the completion handler
can receive an error,

00:18:35.000 --> 00:18:38.670
but it's important to note that
I don't use the error to determine

00:18:38.670 --> 00:18:40.260
if the player is authenticated.

00:18:40.260 --> 00:18:44.800
We check the local player's authenticated
property because you may receive an error

00:18:44.800 --> 00:18:50.560
that the user is offline but still have
an authenticated game center player,

00:18:50.560 --> 00:18:52.980
in which case proceed with game center.

00:18:52.980 --> 00:18:57.580
We function in an offline mode so that
users can keep playing their games.

00:18:57.580 --> 00:19:00.660
So as you saw,
there's some errors that you might get,

00:19:00.660 --> 00:19:04.780
and authentication may not
succeed for a couple reasons.

00:19:04.810 --> 00:19:06.390
First one.

00:19:07.020 --> 00:19:09.400
You might get is
Game Center is not enabled.

00:19:09.470 --> 00:19:12.200
This is the GK error game unrecognized.

00:19:12.240 --> 00:19:17.260
This can happen if you missed a
step when submitting your app to

00:19:17.260 --> 00:19:20.910
the app store and forgot to enable
Game Center for this version.

00:19:21.200 --> 00:19:25.600
So I'll show you what to look
for a little bit later so you

00:19:25.600 --> 00:19:30.280
never get this error code.

00:19:30.600 --> 00:19:32.320
is GK error not supported?

00:19:32.320 --> 00:19:35.000
This is if the device is not supported.

00:19:35.000 --> 00:19:38.420
There are some old devices that
Game Center is not supported on.

00:19:38.420 --> 00:19:41.920
We handle this for you and we'll return
you this error on authentication and the

00:19:41.920 --> 00:19:43.940
local player will not be authenticated.

00:19:44.010 --> 00:19:47.300
If the user has canceled authentication,
chose not to use it this time,

00:19:47.300 --> 00:19:52.000
or opted out, we will give you the
GK error canceled error code,

00:19:52.000 --> 00:19:55.250
in which case you should
proceed with your game with

00:19:55.610 --> 00:19:57.580
Game Center features disabled.

00:19:57.920 --> 00:20:00.780
It's very important to
provide a graceful fallback.

00:20:01.030 --> 00:20:04.740
If the user is offline,
they may be authenticated,

00:20:04.860 --> 00:20:07.740
still want to play,
but if they're not able to

00:20:07.740 --> 00:20:10.510
authenticate for some reason,
proceed with your Game Center features

00:20:10.520 --> 00:20:14.400
disabled and do not show Game Center UI.

00:20:14.430 --> 00:20:17.720
And if the user submits scores,
you may want to save those in

00:20:17.730 --> 00:20:21.640
your save game file for when the
user authenticates in the future.

00:20:21.700 --> 00:20:23.550
That is up to you.

00:20:23.680 --> 00:20:27.400
So leaderboards are a great
feature that Game Center provides

00:20:27.410 --> 00:20:29.000
to enhance competition.

00:20:29.000 --> 00:20:31.700
By showing someone where they rank
amongst their friends and amongst

00:20:31.720 --> 00:20:33.950
the best player in the world,
you're really going to tweak

00:20:33.950 --> 00:20:36.360
their competitive nerve and
they're going to want to,

00:20:36.360 --> 00:20:38.880
you know,
play your game more so they can do

00:20:39.200 --> 00:20:41.280
better and progress up the leaderboards.

00:20:41.530 --> 00:20:44.810
So the Game Center leaderboards
allow players to track how their

00:20:44.810 --> 00:20:47.980
friends are doing and see how the best
players in the community are doing.

00:20:47.980 --> 00:20:49.960
These encourage return play.

00:20:49.960 --> 00:20:52.240
You know, got to come back.

00:20:52.340 --> 00:20:54.260
My friend just beat my high score.

00:20:54.270 --> 00:20:55.900
They're ahead of me in the leaderboard.

00:20:56.100 --> 00:20:57.540
That irks me,
so I'm going to come back and

00:20:57.540 --> 00:20:59.890
I'm going to play your game
more so that I can beat them.

00:21:01.200 --> 00:21:04.440
We try to beat our friends and we come
back and we want to do better next time.

00:21:04.440 --> 00:21:05.940
We'll try to beat our best score.

00:21:06.030 --> 00:21:08.900
Leaderboards are defined
in iTunes Connect.

00:21:08.970 --> 00:21:11.780
It's important to specify
all these parameters.

00:21:11.800 --> 00:21:14.550
And I'm going to go over them
real quick because there are

00:21:14.550 --> 00:21:15.970
a couple of gotchas here.

00:21:16.030 --> 00:21:19.120
The first thing you do is you
give the leaderboard a name.

00:21:19.300 --> 00:21:20.580
This is how you refer to it.

00:21:20.580 --> 00:21:22.060
So scoreboard here.

00:21:22.160 --> 00:21:23.620
You give it an identifier.

00:21:23.690 --> 00:21:26.800
This is how you refer to it to Game Kit.

00:21:26.920 --> 00:21:29.220
We talked about leaderboards
by their identifier.

00:21:29.280 --> 00:21:30.620
Then you're going to want
to define a score type,

00:21:30.670 --> 00:21:34.500
whether you're using floats or integers.

00:21:34.500 --> 00:21:36.490
And then a sort order.

00:21:36.930 --> 00:21:39.640
Most common is high to low.

00:21:39.650 --> 00:21:42.980
This is if you want the highest
score to be the best score.

00:21:42.980 --> 00:21:48.360
Or you can choose low to high if you want
the lowest score to be the best score.

00:21:48.420 --> 00:21:51.300
This is often a mistake and
we wanted to call that out.

00:21:51.450 --> 00:21:54.300
Then you're going to define
some localized properties.

00:21:54.300 --> 00:21:57.070
For the English language,
I'm going to give this leaderboard

00:21:57.070 --> 00:21:58.600
a display name of top scores.

00:21:58.710 --> 00:22:03.500
Set the score format to 100,000 with
a comma as a thousand separator.

00:22:03.690 --> 00:22:08.900
And define singular and plural
suffixes for the score values.

00:22:08.900 --> 00:22:12.200
These suffixes are used when
Game Center displays your scores.

00:22:12.410 --> 00:22:16.730
And it's important to note that depending
on your score type and your suffix,

00:22:16.730 --> 00:22:21.800
you may want to or need to
prefix your suffix with a space.

00:22:21.820 --> 00:22:25.270
It reads a lot better to say
100,000 space points than having

00:22:25.270 --> 00:22:27.000
those two round right together.

00:22:27.160 --> 00:22:29.570
But if you're talking in an
abbreviation like seconds or

00:22:29.570 --> 00:22:32.980
milliseconds where you use s or ms,
it makes sense to concatenate

00:22:32.980 --> 00:22:33.300
them and not have them.

00:22:33.300 --> 00:22:38.000
We give you this control,
but it's often overlooked.

00:22:38.000 --> 00:22:39.600
So pay attention.

00:22:39.700 --> 00:22:43.400
So leaderboards are interacted
with a couple classes.

00:22:43.420 --> 00:22:45.950
The primary class,
the thing you can probably use

00:22:45.980 --> 00:22:47.600
first is the GK score class.

00:22:47.600 --> 00:22:52.030
GK score represents the
score that a player earned.

00:22:52.290 --> 00:22:58.590
And it also is used to report
the high score to Game Center and

00:22:58.720 --> 00:23:01.590
the GameKit services.

00:23:01.910 --> 00:23:06.880
We will store and forward score
submissions if the user is offline.

00:23:07.100 --> 00:23:10.800
The way this will work is instead of
giving you back the offline error,

00:23:10.810 --> 00:23:15.820
we're going to process that and
store the score and forward it

00:23:15.980 --> 00:23:18.700
next time the user is online.

00:23:18.780 --> 00:23:21.400
You also get scores back
when you query leaderboards.

00:23:21.430 --> 00:23:24.770
And in that case,
the score has several properties.

00:23:25.260 --> 00:23:27.000
The first property is the player ID.

00:23:27.010 --> 00:23:28.710
This is the player ID who
achieved the score.

00:23:28.840 --> 00:23:31.500
If you're reporting the score,
it's the local player.

00:23:31.650 --> 00:23:36.810
The category ID is the leaderboard
that the score was earned on.

00:23:36.870 --> 00:23:40.030
Then we have the raw value,
which is a 64-bit integer value

00:23:40.030 --> 00:23:41.980
that you submit with your score.

00:23:41.990 --> 00:23:46.400
It's interpreted based on the score type,
the value type that you've

00:23:46.400 --> 00:23:48.040
specified in iTunes Connect.

00:23:48.080 --> 00:23:52.500
And the formatted value that we get
back once we've processed your score

00:23:52.500 --> 00:23:54.910
and formatted it with your suffix.

00:23:55.140 --> 00:23:59.540
And finally we have the rank that the
score is currently at on the leaderboard,

00:23:59.660 --> 00:24:02.360
and the date that the score was achieved.

00:24:02.470 --> 00:24:06.410
Now to get these scores,
you use a GK leaderboard class.

00:24:06.570 --> 00:24:08.380
There are multiple
leaderboards for a game.

00:24:08.430 --> 00:24:10.760
We can actually support up
to 25 leaderboards per game.

00:24:10.760 --> 00:24:14.140
They're identified as categories
using the leaderboard ID.

00:24:14.360 --> 00:24:17.160
And you can get leaderboards
either for a range of scores,

00:24:17.220 --> 00:24:20.400
or for scores for an
array of specific players.

00:24:20.750 --> 00:24:23.360
It's very useful if you want to show,
in a multiplayer game,

00:24:23.570 --> 00:24:26.050
the ranks and scores,
best scores for the four

00:24:26.050 --> 00:24:29.740
people that I'm playing with,
myself and three others, so we can see,

00:24:29.740 --> 00:24:31.260
oh yeah,
you can even use these potentially

00:24:31.750 --> 00:24:33.900
to make teams that are balanced.

00:24:33.920 --> 00:24:39.200
And new in iOS 5, we allow you to specify
a default leaderboard.

00:24:39.240 --> 00:24:42.730
This is basically a hint to
Game Center about which leaderboard

00:24:42.740 --> 00:24:46.380
we should show in the Game Center app
when the user visits your page.

00:24:46.410 --> 00:24:50.310
We recommend that this probably be the
score that the user last submitted.

00:24:50.510 --> 00:24:53.150
It's an opt-in with a simple
Boolean when you submit a score.

00:24:53.440 --> 00:24:57.220
Now, when working with GK Leaderboard,
you're going to want to define a

00:24:57.220 --> 00:25:00.130
leaderboard with a category ID,
and if you're going to

00:25:00.140 --> 00:25:03.120
query a range of scores,
you'll specify the range,

00:25:03.140 --> 00:25:07.500
and then refine the query with
a time scope and a player scope.

00:25:07.540 --> 00:25:12.880
Time scopes can be today, this week,
all time, and player scopes can be

00:25:13.190 --> 00:25:15.480
just friends or all players.

00:25:15.510 --> 00:25:17.940
When it returns, you're going to get back
a localized title for that

00:25:17.940 --> 00:25:19.720
leaderboard so you can display it.

00:25:19.750 --> 00:25:22.360
You'll also get back the maximum range,
which is the number of scores

00:25:22.360 --> 00:25:24.920
that we have in this leaderboard,
and you're going to get back an

00:25:25.000 --> 00:25:27.060
array of scores matching your query.

00:25:27.360 --> 00:25:29.780
Game Center provides a
standard UI for leaderboards.

00:25:29.780 --> 00:25:31.800
This is through the
GK Leaderboard view controller.

00:25:32.000 --> 00:25:37.420
And new in iOS 5, in this standard UI and
in our other standard UIs,

00:25:37.540 --> 00:25:40.940
we provide access to app store ratings.

00:25:41.110 --> 00:25:45.800
So users who love your game can
rate it right from the leaderboard.

00:25:45.800 --> 00:25:47.640
It's great if they just
got their best score,

00:25:47.640 --> 00:25:49.550
they're going to be very happy,
and hopefully they'll

00:25:49.560 --> 00:25:50.380
give you five stars.

00:25:50.670 --> 00:25:53.340
Our leaderboard implementation,
implementation,

00:25:53.570 --> 00:25:57.180
provides both the friend and
global leaderboards in one view.

00:25:57.180 --> 00:25:59.310
So they can scroll, see their friends,
and scroll further and

00:25:59.310 --> 00:26:00.180
see the best players.

00:26:00.180 --> 00:26:05.270
However,
you can implement custom UI yourself,

00:26:05.270 --> 00:26:07.980
pulling data with the
GK Leaderboard class,

00:26:07.980 --> 00:26:10.900
and displaying it in a table
view or some other form.

00:26:10.900 --> 00:26:14.820
One thing that's worth mentioning
for performance reasons,

00:26:14.820 --> 00:26:17.660
it's recommended that
you load small ranges.

00:26:17.660 --> 00:26:21.860
There is actually a limit to how many
scores you can load at once of 100.

00:26:21.860 --> 00:26:23.300
Our implementation tends to
be a little bit more complex.

00:26:23.300 --> 00:26:25.060
It tends to be around 25.

00:26:25.060 --> 00:26:28.300
And then we just feel that it gives
a better performance for the user.

00:26:28.300 --> 00:26:30.660
You know, load small ranges,
they come back quicker.

00:26:30.730 --> 00:26:32.140
We prefetch the next page.

00:26:32.140 --> 00:26:33.640
So how to submit a score?

00:26:33.640 --> 00:26:37.820
First thing you need to do is
initialize a score with a category.

00:26:37.820 --> 00:26:41.020
Here, I'm kind of boring,
I got a leaderboard category.

00:26:41.020 --> 00:26:41.830
Then we're going to set the value.

00:26:41.980 --> 00:26:43.480
It's my new high score.

00:26:43.480 --> 00:26:44.440
And you'll see this next property.

00:26:44.480 --> 00:26:45.520
This is context.

00:26:45.570 --> 00:26:46.810
This is new in iOS 5.

00:26:46.880 --> 00:26:52.100
This allows you to specify 64 bits of
your own data attached to the score.

00:26:52.100 --> 00:26:53.260
Game Center doesn't interpret it.

00:26:53.260 --> 00:26:55.160
Game Center doesn't process it.

00:26:55.180 --> 00:26:58.140
But if you wanted to use it in
a custom leaderboard or to store

00:26:58.140 --> 00:27:00.950
and pull some information about
this best score for your user,

00:27:01.020 --> 00:27:03.600
like the level they were
on when they achieved it,

00:27:03.600 --> 00:27:05.990
what player class they were
using when they achieved it,

00:27:06.000 --> 00:27:08.700
you can store some data
in here and pull it out.

00:27:08.710 --> 00:27:13.120
Also, I'm using a new API in iOS 5,
the default leaderboard.

00:27:13.180 --> 00:27:15.920
So I want to make this score
my default leaderboard.

00:27:15.920 --> 00:27:19.650
Once I've configured the score,
we report it with report

00:27:19.820 --> 00:27:21.120
score with completion handler.

00:27:21.120 --> 00:27:23.190
And if it fails, you'll get an error.

00:27:23.520 --> 00:27:27.020
Before iOS 5, you might have gotten
communication errors,

00:27:27.020 --> 00:27:31.010
and we recommended that you store
these scores and forward them

00:27:31.440 --> 00:27:33.060
when the user is next available.

00:27:33.090 --> 00:27:35.340
With iOS 5, we do that for you now.

00:27:35.560 --> 00:27:37.540
And in those cases, you won't get errors.

00:27:37.600 --> 00:27:40.810
How to load scores so you can display
your leaderboard or just query

00:27:40.810 --> 00:27:42.500
the scores for a bunch of players.

00:27:42.500 --> 00:27:46.270
We initialize a leaderboard,
and then we set up the query.

00:27:46.280 --> 00:27:49.280
We're going to set the category
for the leaderboard here,

00:27:49.310 --> 00:27:51.280
and we're going to set the range.

00:27:51.290 --> 00:27:53.110
Leaderboards are one indexed.

00:27:53.180 --> 00:27:57.660
Zero is not a valid rank,
so always start your range with one.

00:27:57.690 --> 00:27:59.600
And I'm going to load 10
scores starting from one,

00:27:59.700 --> 00:28:01.120
so the top 10.

00:28:01.200 --> 00:28:04.200
Going to configure the time
scope and the player scope here.

00:28:04.270 --> 00:28:08.430
I want all time scores for my friends.

00:28:09.110 --> 00:28:12.150
And then I'm simply going to
load the scores using load

00:28:12.150 --> 00:28:14.300
scores with completion handler.

00:28:14.300 --> 00:28:16.700
This completion handler
has two properties.

00:28:16.700 --> 00:28:20.000
It comes back with scores,
which are the scores that were loaded,

00:28:20.030 --> 00:28:21.750
and possibly an error.

00:28:21.890 --> 00:28:26.270
And you'll notice in my handling code,
I handled them separately.

00:28:26.470 --> 00:28:30.500
We might get scores at the
same time we get an error.

00:28:30.620 --> 00:28:34.960
This can happen if the user is offline,
so we couldn't load new scores,

00:28:35.050 --> 00:28:36.790
but we have cached scores.

00:28:36.900 --> 00:28:40.200
It's better that we give you something so
that you can display the best information

00:28:40.200 --> 00:28:41.690
that Game Center has available.

00:28:41.800 --> 00:28:44.700
So that wrapped up leaderboards,
and let's move on to achievements.

00:28:44.790 --> 00:28:47.100
As you can see,
achievement view controller,

00:28:47.100 --> 00:28:48.680
we can rate games right here.

00:28:48.740 --> 00:28:51.920
Achievements keep players involved.

00:28:51.980 --> 00:28:55.180
You know, if you have achievements and
you display them to the user,

00:28:55.180 --> 00:28:57.480
they can see the achievements
list in Game Center,

00:28:57.540 --> 00:29:00.050
and they're going to be
inquisitive and figure out how

00:29:00.050 --> 00:29:01.680
to unlock these achievements.

00:29:01.810 --> 00:29:05.580
And if you provide hidden achievements,
you know, there are little hints.

00:29:05.610 --> 00:29:07.270
We'll indicate that there
are ten achievements,

00:29:07.300 --> 00:29:08.500
but there's only nine in the list.

00:29:08.550 --> 00:29:10.600
The user might get the subtle
hint that there's one missing,

00:29:10.650 --> 00:29:11.540
and they're going to look for it.

00:29:11.580 --> 00:29:14.240
If they see that their friend
found the hidden achievement,

00:29:14.320 --> 00:29:16.340
which we won't reveal
what it was exactly,

00:29:16.370 --> 00:29:18.660
they're going to talk to their friend,
and they're going to ask how

00:29:18.660 --> 00:29:20.240
they got this achievement.

00:29:20.310 --> 00:29:22.440
And so that, you know,
we allow them to compare

00:29:22.550 --> 00:29:24.530
to their friends,
and they can get more hints

00:29:24.530 --> 00:29:26.300
about your hidden achievements.

00:29:26.360 --> 00:29:30.320
Achievements are a great way
to track game progress and to

00:29:30.430 --> 00:29:32.800
reward exceptional results.

00:29:32.800 --> 00:29:34.590
They really encourage return play.

00:29:34.690 --> 00:29:37.910
I know quite a few people that
won't put down a game until they've

00:29:37.910 --> 00:29:39.190
unlocked all the achievements.

00:29:39.200 --> 00:29:42.080
Or at least all the achievements
they think they can get.

00:29:42.080 --> 00:29:45.520
Achievements are defined in iTunes
Connect like the leaderboard.

00:29:45.520 --> 00:29:49.740
Here you're going to define
before and after achieved states.

00:29:49.740 --> 00:29:53.300
You'll be able to define achievements
as hidden if you want them to be hidden

00:29:53.300 --> 00:29:55.490
from the user until they've earned them.

00:29:55.490 --> 00:29:57.390
And you can also define the images.

00:29:57.390 --> 00:30:00.340
These are images that we will
display in Game Center after

00:30:00.340 --> 00:30:02.630
applying to a gold coin template.

00:30:02.670 --> 00:30:06.180
There's a single set of
achievements per application.

00:30:06.180 --> 00:30:09.940
You get 1,000 points total
for your achievements.

00:30:09.940 --> 00:30:12.740
You can have up to 100 achievements.

00:30:12.740 --> 00:30:15.200
And you can have 100
points per achievement.

00:30:15.200 --> 00:30:19.130
We certainly recommend that, you know,
common sense would prevail, you know,

00:30:19.130 --> 00:30:21.950
give points based on the
difficulty of the achievements,

00:30:22.140 --> 00:30:23.510
the value of the achievement.

00:30:23.510 --> 00:30:25.500
You know,
with the achievement leaderboards,

00:30:25.500 --> 00:30:28.390
points on achievements matter now.

00:30:28.450 --> 00:30:32.390
So users are going to come back to
your game and they're going to strive

00:30:32.390 --> 00:30:34.860
to get these high valued achievements.

00:30:34.860 --> 00:30:37.970
And hopefully this keeps them
coming back until they do.

00:30:37.970 --> 00:30:41.000
And you add new features and
you add new achievements,

00:30:41.100 --> 00:30:43.120
you can get them to come back again.

00:30:43.120 --> 00:30:46.010
So there are primarily two
classes when you're talking about

00:30:46.010 --> 00:30:47.770
achievements in Game Center.

00:30:47.960 --> 00:30:51.200
The first of which is the
GK achievement description.

00:30:51.250 --> 00:30:53.100
This is the definition
of the achievement.

00:30:53.100 --> 00:30:55.010
This represents what you put into iTunes.

00:30:55.100 --> 00:30:57.320
This is what you put into iTunes Connect.

00:30:57.370 --> 00:30:59.870
You can use the achievement
description class to load all

00:30:59.870 --> 00:31:01.520
the descriptions for your game.

00:31:01.690 --> 00:31:04.690
And you can use the achievement
description class to load

00:31:04.690 --> 00:31:06.080
the achievement image.

00:31:06.100 --> 00:31:09.470
Each achievement description
has a handful of properties.

00:31:09.480 --> 00:31:10.300
There's the achievement ID.

00:31:10.300 --> 00:31:13.620
This is the identifier that you gave
the achievement in iTunes Connect.

00:31:13.620 --> 00:31:14.670
A localized title.

00:31:14.700 --> 00:31:16.940
Obviously the title of the achievement.

00:31:17.060 --> 00:31:18.860
And there are two descriptions.

00:31:18.890 --> 00:31:22.660
There's the achieved description
and the unachieved description.

00:31:22.660 --> 00:31:24.850
They'll see the unachieved
description until they've gotten

00:31:24.930 --> 00:31:27.200
100% complete on the achievement.

00:31:27.200 --> 00:31:29.040
In which case we'll
show the achieved one.

00:31:29.040 --> 00:31:31.520
You also mark the achievement as hidden.

00:31:31.520 --> 00:31:33.510
And it will be hidden until
they've gotten progress on it.

00:31:33.510 --> 00:31:36.740
And you can get the image for them,
the achievement description.

00:31:36.740 --> 00:31:39.960
The GK achievement class
is the user's achievement.

00:31:39.960 --> 00:31:43.520
This is what the user's actually
earned and what they've gotten.

00:31:43.520 --> 00:31:44.820
And it tracks their state.

00:31:44.850 --> 00:31:47.070
You use the GK achievement
class to load the achievements

00:31:47.890 --> 00:31:49.900
that the player has earned.

00:31:49.900 --> 00:31:51.730
So this is going to return to
you an array of achievements

00:31:51.760 --> 00:31:53.360
that's of a differing length.

00:31:53.360 --> 00:31:55.190
From your achievement descriptions.

00:31:55.350 --> 00:31:56.890
It's what the user's actually done.

00:31:57.050 --> 00:32:00.600
And new in iOS 5,
when you submit an achievement,

00:32:00.650 --> 00:32:05.800
we give you the option to show a
banner to the user that they've

00:32:05.980 --> 00:32:06.780
completed the achievement.

00:32:06.880 --> 00:32:09.960
If the achievement's got 100% complete
and you choose to show the banner,

00:32:10.000 --> 00:32:10.690
we will show a banner.

00:32:10.690 --> 00:32:12.990
It looks a lot like the welcome
banner with the title and the

00:32:13.120 --> 00:32:14.280
description of the achievement.

00:32:14.470 --> 00:32:16.830
The GK achievement starts
with an achievement ID.

00:32:17.170 --> 00:32:18.170
This is the same one.

00:32:18.260 --> 00:32:20.710
It matches up with the
achievement descriptions.

00:32:20.710 --> 00:32:22.960
And then you specify
the percent complete.

00:32:22.960 --> 00:32:22.960
This is the user's achievement.

00:32:22.960 --> 00:32:23.910
This is the user's progress.

00:32:23.990 --> 00:32:25.920
And we support partially
complete achievements.

00:32:26.090 --> 00:32:27.910
You can then query an achievement
description for whether it's

00:32:28.000 --> 00:32:30.720
completed or whether it's hidden.

00:32:30.720 --> 00:32:34.120
And you can get the date that the
achievement was last reported.

00:32:34.140 --> 00:32:36.520
And new in iOS 5,
you choose to show the banner

00:32:36.520 --> 00:32:37.960
when you submit the achievement.

00:32:37.960 --> 00:32:40.720
To display the achievements to the user,
we provide standard UI.

00:32:40.720 --> 00:32:43.460
This is the GK achievement
view controller.

00:32:43.460 --> 00:32:46.970
Game Center standard UI shows
the list of achievements,

00:32:47.160 --> 00:32:50.220
a summary of what the user
has and has not earned,

00:32:50.340 --> 00:32:52.300
and provides app store ratings.

00:32:52.650 --> 00:32:54.940
So let's take a look at some
code to submit an achievement.

00:32:55.100 --> 00:32:59.800
Starts off by initializing an
achievement with an identifier.

00:33:00.020 --> 00:33:05.400
Since I've completed this achievement,
I've got it 100% complete.

00:33:05.440 --> 00:33:09.560
And I want to reward the user with
immediate feedback with the banner.

00:33:09.570 --> 00:33:12.990
And then we'll report the achievement
to Game Center services with report

00:33:13.190 --> 00:33:15.320
achievement with completion handler.

00:33:15.320 --> 00:33:17.880
Just like with scores,
Game Center and iOS 5 will store and

00:33:18.060 --> 00:33:20.960
forward the achievements if we were
not able to send them to our servers.

00:33:21.300 --> 00:33:22.160
However, if you are running on a server,
you can also report the

00:33:22.160 --> 00:33:22.160
achievement to the GK.

00:33:22.160 --> 00:33:24.190
If you are running on a
version prior to iOS 5,

00:33:24.190 --> 00:33:27.560
we recommend that you consider storing
and forwarding these yourselves,

00:33:27.670 --> 00:33:29.060
especially if you already
have code to do so.

00:33:29.310 --> 00:33:31.160
Otherwise,
you just need to handle the error.

00:33:31.290 --> 00:33:34.730
So one of the big features in
Game Center that really keeps people

00:33:34.730 --> 00:33:38.080
involved and interacting with each other,
which is the reason

00:33:38.080 --> 00:33:41.160
we have friend graphs,
is to play multiplayer.

00:33:41.370 --> 00:33:45.160
Users want to come
together and play together.

00:33:45.280 --> 00:33:49.160
And Game Center offers two
modes of live multiplayer,

00:33:49.180 --> 00:33:51.580
either peer-to-peer or hosted.

00:33:51.760 --> 00:33:54.620
Peer-to-peer is where we have the devices
communicating directly to each other.

00:33:54.760 --> 00:33:58.560
And hosted is where we allow the
devices to communicate to your server.

00:33:58.890 --> 00:34:01.430
In either case,
multiplayer's connections are

00:34:01.430 --> 00:34:05.070
established through either
invitations or through auto-matching.

00:34:05.340 --> 00:34:08.370
Auto-matching is a service that
Game Center provides where we

00:34:08.370 --> 00:34:12.490
will pick the best people from a
pool of people that are wanting

00:34:12.560 --> 00:34:14.760
to play the game at the same time.

00:34:14.760 --> 00:34:17.760
And there are various properties
we use to match people.

00:34:17.880 --> 00:34:20.080
And we allow you to customize some
of the properties through player

00:34:20.080 --> 00:34:21.300
groups and player attributes.

00:34:21.410 --> 00:34:23.650
But in the end,
the end result is that we get

00:34:23.980 --> 00:34:27.260
people together through these
two methods so that they can

00:34:27.400 --> 00:34:29.360
play a game and keep coming back.

00:34:29.360 --> 00:34:32.040
If you're playing a peer-to-peer game,
you can take advantage of the

00:34:32.040 --> 00:34:33.360
in-game voice chat feature.

00:34:33.450 --> 00:34:36.360
And new, we have turn-based multiplayer.

00:34:36.360 --> 00:34:39.080
It's a new way to do multiplayer.

00:34:39.360 --> 00:34:42.360
People don't have to all
be online at the same time.

00:34:42.360 --> 00:34:45.360
But we put people together the same way.

00:34:45.360 --> 00:34:47.170
And the UI is very similar.

00:34:47.360 --> 00:34:50.960
We allow people to hook up for turn-based
through invitations and auto-matching.

00:34:50.960 --> 00:34:52.900
So why add multiplayer?

00:34:52.960 --> 00:34:54.940
It's quite a bit of work.

00:34:55.030 --> 00:34:56.960
You usually want to think about
multiplayer from the beginning.

00:34:56.960 --> 00:34:58.960
But it almost always pays off.

00:34:59.000 --> 00:35:00.960
It really makes your app stand out.

00:35:00.960 --> 00:35:04.990
If you think about some of the
most storied franchises in gaming,

00:35:05.060 --> 00:35:08.960
the ones that have had the longest run,
the most longevity,

00:35:08.960 --> 00:35:11.830
some of the more legendary
franchises had great multiplayer.

00:35:11.960 --> 00:35:15.600
And they continue to live beyond the
single-player campaign because of the

00:35:15.600 --> 00:35:17.960
communities that play their multiplayer.

00:35:17.960 --> 00:35:20.470
People really like to play
against real opponents.

00:35:20.560 --> 00:35:27.550
We're really good at figuring out
the inadequacies of AIs and bots.

00:35:27.560 --> 00:35:30.630
We can figure out how these
scripted opponents do things

00:35:30.630 --> 00:35:32.560
and they get too easy to beat.

00:35:32.560 --> 00:35:35.390
Also, multiplayer will encourage
cooperative play.

00:35:35.560 --> 00:35:37.560
There are a lot of
communications in the forums.

00:35:37.560 --> 00:35:40.540
People talk about and
really request multiplayer.

00:35:40.650 --> 00:35:43.560
And so it's one of the most discussed
and requested features around.

00:35:43.560 --> 00:35:46.560
And one of the features that
I like to see is cooperative play.

00:35:46.560 --> 00:35:48.450
It's fun to play with someone
instead of against them for a change.

00:35:48.560 --> 00:35:50.150
So imagine it really works.

00:35:50.160 --> 00:35:53.150
It really can increase the
longevity of your game.

00:35:53.270 --> 00:35:55.300
One of the ways this can happen,
especially with the friend

00:35:55.300 --> 00:35:58.160
graph in Game Center,
I've played your game.

00:35:58.160 --> 00:35:59.160
I've had a lot of fun.

00:35:59.160 --> 00:36:01.160
I beat the single-player campaign.

00:36:01.160 --> 00:36:03.160
And I've got all the
achievements and I put it down.

00:36:03.160 --> 00:36:07.160
But my friend in Game Center discovers
this game off my friend list,

00:36:07.290 --> 00:36:10.150
starts playing it,
and sends me a game invite.

00:36:10.160 --> 00:36:13.700
That's going to get me back in the
game and hopefully other players

00:36:13.700 --> 00:36:16.570
as well and will keep coming back
and playing your game now that

00:36:16.580 --> 00:36:18.160
I can play it with my friend.

00:36:18.330 --> 00:36:21.920
It's a great way to -- to keep
people coming back to your game and

00:36:21.920 --> 00:36:23.760
hopefully get more people playing it.

00:36:23.760 --> 00:36:25.610
It's sort of viral.

00:36:25.760 --> 00:36:28.830
You know,
the invitation message that we send,

00:36:28.830 --> 00:36:31.870
if the user receives the invite and
they don't have the game installed,

00:36:31.870 --> 00:36:34.960
we will still show them the invite
and give them the option to buy

00:36:34.980 --> 00:36:37.710
the game at that time and continue
and play with their friends.

00:36:37.760 --> 00:36:39.720
Let's take a look at how
the invite flow works.

00:36:39.880 --> 00:36:41.760
We start with the device on the right.

00:36:41.760 --> 00:36:44.570
I want to play a game with my friend.

00:36:44.760 --> 00:36:46.570
So first thing I'm going to
do is I'm going to invite my

00:36:46.570 --> 00:36:47.760
friends from my friend list.

00:36:47.760 --> 00:36:49.130
I invite Eunice to play.

00:36:49.360 --> 00:36:51.260
And we're going to send the invite.

00:36:51.360 --> 00:36:53.360
The invite results in
a push notification.

00:36:53.360 --> 00:36:57.360
Here I'm showing the new banner
from Notification Center.

00:36:57.370 --> 00:36:59.280
If I want to play -- if
my friend wants to play,

00:36:59.280 --> 00:37:02.250
she'll tap the banner,
which will bring her into your game,

00:37:02.250 --> 00:37:05.250
into the matchmaker controller,
send a reply back,

00:37:05.330 --> 00:37:07.160
and we're both ready to play.

00:37:07.360 --> 00:37:11.360
All I have to do now is hit play
now and jump right into the game.

00:37:11.360 --> 00:37:13.690
This is some screenshots
from our demo game you'll be

00:37:13.690 --> 00:37:15.360
seeing in tomorrow's sessions.

00:37:15.360 --> 00:37:18.960
We did a little take on Rock, Paper,
Scissors.

00:37:18.960 --> 00:37:20.960
And the rest of my team will
be happy to show it off.

00:37:20.960 --> 00:37:24.910
So GameKit provides several
ways to get connected.

00:37:24.970 --> 00:37:28.900
And the first one we'll
look at is peer-to-peer.

00:37:29.030 --> 00:37:30.960
Hosted is very similar.

00:37:30.960 --> 00:37:32.950
You start with the GK match request.

00:37:32.960 --> 00:37:36.950
The match request defines
the parameters of the match.

00:37:36.980 --> 00:37:40.070
And if we look at the block diagram,
we can see that for each match request,

00:37:40.070 --> 00:37:42.960
we want to specify a minimum
and maximum number of players.

00:37:42.960 --> 00:37:44.760
If you use a standard UI,
this allows the user to change

00:37:44.810 --> 00:37:46.940
the number of players in the
game and allows them to select.

00:37:47.060 --> 00:37:48.560
If you go with programmatic options,
you can change the number of players

00:37:48.560 --> 00:37:48.560
in the game and allows them to select.

00:37:48.560 --> 00:37:50.510
If you go with
programmatic auto-matching,

00:37:50.580 --> 00:37:53.660
it gives some flexibility in who we
match with you and we can get more

00:37:53.740 --> 00:37:54.560
flexibility and find games quicker.

00:37:54.560 --> 00:38:00.560
You also can specify a player group
if you want to keep matches separate.

00:38:00.600 --> 00:38:03.260
This is great, for example,
if you're playing a racing game

00:38:03.310 --> 00:38:06.560
that has different tracks and users
want to play on a specific track.

00:38:06.560 --> 00:38:08.560
You put them in a player
group for that track.

00:38:08.560 --> 00:38:13.470
Similarly, player attributes kind of tell
us what players from within a

00:38:13.700 --> 00:38:14.560
group should be put together.

00:38:14.560 --> 00:38:18.130
And this is done through
a Boolean option.

00:38:18.200 --> 00:38:20.160
And we'll get more details
on this in a later session.

00:38:20.160 --> 00:38:24.270
And finally, another way that you can
set up the match request,

00:38:24.270 --> 00:38:26.130
you can add players to invite to this.

00:38:26.210 --> 00:38:28.160
If you specify an array
of players to invite,

00:38:28.350 --> 00:38:32.160
this will bring up the matchmaker view
controller with these people preselected

00:38:32.160 --> 00:38:34.160
for the user to invite to the game.

00:38:35.100 --> 00:38:38.440
This is what you're going to want to do
when you receive players to invite from

00:38:38.440 --> 00:38:43.200
Game Center if the user chooses to play
a game directly from the Game Center app

00:38:43.200 --> 00:38:44.430
with one of their friends.

00:38:44.540 --> 00:38:47.900
Once you've passed the match
request off to one of the

00:38:47.990 --> 00:38:52.030
mechanisms to find you the match,
either the Match Review Controller or

00:38:52.030 --> 00:38:56.110
the Matchmaker,
you get back a GK match.

00:38:56.450 --> 00:39:00.290
The GK Match manages networking
in a peer-to-peer match.

00:39:00.300 --> 00:39:04.700
We also use it to track player state,
so you can find out when players

00:39:04.700 --> 00:39:07.280
disconnect and initially connect.

00:39:07.430 --> 00:39:11.300
The GK Match provides to
you an array of players.

00:39:11.300 --> 00:39:13.900
It also provides you the
expected player count,

00:39:13.910 --> 00:39:16.350
because at the time
we hand you the match,

00:39:16.410 --> 00:39:18.130
it's immediately after
matchmaking is completed.

00:39:18.300 --> 00:39:20.210
We know there are going
to be players coming in,

00:39:20.450 --> 00:39:22.300
but we don't necessarily
know exactly who.

00:39:22.300 --> 00:39:26.300
So you'll wait for people to connect,
and once all players are connected,

00:39:26.390 --> 00:39:28.300
you're ready to start the game.

00:39:28.300 --> 00:39:31.290
GK Match provides you mechanisms
to send data to players.

00:39:31.300 --> 00:39:34.300
You can send them to individual
players or to all players.

00:39:34.300 --> 00:39:37.490
And you can track player state
changes in case someone takes

00:39:37.490 --> 00:39:39.300
a phone call and disconnects.

00:39:39.300 --> 00:39:42.250
You can handle that state,
report it to the user.

00:39:42.430 --> 00:39:44.300
Sometimes it's possible
to even come back.

00:39:44.300 --> 00:39:48.300
And new with iOS 5,
we'll talk about it a little bit later,

00:39:48.310 --> 00:39:49.300
is a reconnect feature.

00:39:49.300 --> 00:39:51.300
So in a two-person match,
you can reconnect with the player.

00:39:51.310 --> 00:39:53.980
And continue your game.

00:39:54.520 --> 00:39:58.300
The GK Matchmaker is a singleton
object in GameKit framework.

00:39:58.300 --> 00:40:00.260
You're going to set your invite
handler on the matchmaker.

00:40:00.380 --> 00:40:03.300
This is a block that you
use to handle game invites.

00:40:03.300 --> 00:40:06.450
So when the user accepts a game invite,
we call your block and

00:40:06.910 --> 00:40:09.230
provide you the invite,
which you then feed to

00:40:09.230 --> 00:40:10.300
the UI to start the game.

00:40:10.300 --> 00:40:14.790
You can also use the GK Matchmaker to
provide quick auto-matching without

00:40:14.790 --> 00:40:17.300
showing the standard Game Center UI.

00:40:17.300 --> 00:40:20.290
And the fourth piece is the
Matchmaker View Controller.

00:40:20.300 --> 00:40:23.300
This is Game Center's
standard UI for matchmaking.

00:40:23.300 --> 00:40:26.300
It handles invites and auto-matching.

00:40:26.300 --> 00:40:31.300
And also provides another mechanism
for you to get great apps for ratings.

00:40:31.340 --> 00:40:34.300
Once you have a GK Match for
a peer-to-peer match,

00:40:34.300 --> 00:40:37.730
you can use GK Voice Chat to let
these people talk to each other.

00:40:37.810 --> 00:40:40.020
It allows you to create a
voice chat from a GK match.

00:40:40.210 --> 00:40:43.130
You can have multiple named voice chats.

00:40:43.800 --> 00:40:46.850
Users can control their
participation in the chats,

00:40:46.850 --> 00:40:52.210
so they can leave a chat, enter a chat,
and mute a chat.

00:40:52.410 --> 00:40:56.140
They can also get player state updates
for when players enter or leave a

00:40:56.170 --> 00:40:58.950
chat and adjust the volume on a chat.

00:40:59.060 --> 00:41:00.990
You do this through a
GKE voice chat object,

00:41:01.040 --> 00:41:03.160
which you create from
a match with a name.

00:41:03.160 --> 00:41:06.700
Obviously it has the players that
are participating in the voice chat.

00:41:06.760 --> 00:41:11.100
It has their states,
which you can query and be updated with.

00:41:11.130 --> 00:41:15.360
And then you can query and set whether
the voice chat is the active chat,

00:41:15.490 --> 00:41:19.040
this is the chat that the
microphone is routed to.

00:41:19.100 --> 00:41:23.250
And you can also adjust the volume of
the chat to squelch other chats if you

00:41:23.250 --> 00:41:25.280
have multiples going on at the same time.

00:41:25.320 --> 00:41:28.500
The big feature for iOS
5 for Game Center is

00:41:28.670 --> 00:41:31.190
turn-based multiplayer gaming.

00:41:31.270 --> 00:41:35.180
I like to think of this as a more
leisurely form of multiplayer.

00:41:35.220 --> 00:41:39.480
I can pick it up and I can play with
my friends whenever I have time.

00:41:39.550 --> 00:41:42.990
And then when I'm done with my turn,
they can pick it up on their

00:41:42.990 --> 00:41:44.680
schedule and take their turns.

00:41:44.730 --> 00:41:48.150
Yeah, games take a little bit longer,
but we can keep them going for a

00:41:48.190 --> 00:41:49.000
very long time and have a lot of fun.

00:41:49.000 --> 00:41:49.000
Yeah, games take a little bit longer,
but we can keep them going for a

00:41:49.000 --> 00:41:49.000
very long time and have a lot of fun.

00:41:49.000 --> 00:41:55.130
It's great for many of the classic
games that you know and board games.

00:41:55.260 --> 00:42:00.600
Some examples here are the classic chess,
backgammon, checkers.

00:42:00.660 --> 00:42:04.290
But you can think of many others that
this might be very applicable to.

00:42:04.600 --> 00:42:06.700
It's fully asynchronous.

00:42:06.740 --> 00:42:10.240
One way I like to think about this
is saying it's always your turn.

00:42:10.270 --> 00:42:12.860
When you create a new game,
it's your turn.

00:42:12.900 --> 00:42:16.560
When you enter into someone else's game,
it's your turn.

00:42:16.630 --> 00:42:19.980
Players never need to wait in the
game for someone else to join,

00:42:19.980 --> 00:42:21.280
to connect.

00:42:21.610 --> 00:42:24.500
The matchmaking and the
invitations are fully asynchronous.

00:42:24.620 --> 00:42:28.380
So we just tell our service, you know,
I want to invite these people and I want

00:42:28.390 --> 00:42:30.260
to auto match for this other seat.

00:42:30.310 --> 00:42:33.940
And when it's that person's turn,
they'll be notified that there's

00:42:33.940 --> 00:42:35.460
a game waiting for them to play.

00:42:35.500 --> 00:42:39.750
And the matchmaking seat will be
filled when it needs to be filled.

00:42:40.110 --> 00:42:43.570
You don't have to wait for someone
to decide to play this game right

00:42:43.700 --> 00:42:46.200
now before you can even start.

00:42:46.520 --> 00:42:49.730
And for turn-based gaming,
the game state is stored

00:42:49.930 --> 00:42:51.900
on the Game Center servers.

00:42:51.900 --> 00:42:53.170
So there's a few classes.

00:42:53.370 --> 00:42:54.900
Some are very similar.

00:42:54.930 --> 00:42:58.400
GK match request we reuse
for turn-based gaming.

00:42:58.510 --> 00:43:02.390
You set it up the same way as you would
for a peer-to-peer or a hosted match.

00:43:02.770 --> 00:43:05.200
You're going to get back,
instead of a GK match,

00:43:05.200 --> 00:43:07.940
a GK turn-based match.

00:43:07.940 --> 00:43:11.800
The turn-based match, like the match,
tracks the state of the match,

00:43:11.810 --> 00:43:15.980
and it also provides APIs for
you to load existing matches.

00:43:16.020 --> 00:43:18.700
We can have multiple turn-based
matches going on at the same time,

00:43:18.700 --> 00:43:22.000
so we allow you to query them and
you can show them in your own UI.

00:43:22.070 --> 00:43:24.820
And you can also use the
GK turn-based match to do quick

00:43:24.830 --> 00:43:26.700
auto-matching without any UI.

00:43:26.710 --> 00:43:31.000
The GK turn-based match object
provides you the match identifier,

00:43:31.040 --> 00:43:34.700
the creation date of the match,
the array of participants.

00:43:34.700 --> 00:43:36.820
So these are a little
bit more than players,

00:43:36.820 --> 00:43:38.700
and I'll show you later in a second.

00:43:38.700 --> 00:43:43.560
We get the status for the match,
whether it's active or not, or finished.

00:43:43.700 --> 00:43:46.700
You can query and download
the match data for the match.

00:43:46.700 --> 00:43:50.700
So this is actually your game state
that you associate with the match.

00:43:50.700 --> 00:43:53.460
And you can set a custom
message that will display in the

00:43:53.460 --> 00:43:55.670
Game Center UI after each and every turn.

00:43:55.730 --> 00:43:58.700
To display the list of matches
and to create new matches,

00:43:58.700 --> 00:44:01.700
you can use the GK turn-based
matchmaker view controller.

00:44:01.700 --> 00:44:04.520
This is, again,
Game Center's standard UI.

00:44:04.700 --> 00:44:09.810
It provides a list of the matches
that are ongoing for this player,

00:44:09.980 --> 00:44:14.150
and we separate it by where it's my turn,
someone else's turns,

00:44:14.280 --> 00:44:18.210
or games that I finished that
I might want to browse later.

00:44:18.560 --> 00:44:22.590
It also provides connection between
players via the standard mechanisms

00:44:22.590 --> 00:44:24.680
of invitations and auto matching.

00:44:24.720 --> 00:44:27.170
There are a few more classes
for turn-based match.

00:44:27.230 --> 00:44:29.620
There's a little bit
more to deal with here.

00:44:29.690 --> 00:44:32.510
Since there are additional events
beyond just getting an invite,

00:44:32.510 --> 00:44:35.160
we have this GK turn-based event handler.

00:44:35.200 --> 00:44:38.720
This is a singleton object that
you will use and set a delegate on,

00:44:38.720 --> 00:44:41.500
and it routes events to your delegate.

00:44:41.530 --> 00:44:48.020
These events include things like new game
invitations or new turns when it's your

00:44:48.400 --> 00:44:51.300
turn and the case where a game is over.

00:44:51.320 --> 00:44:55.400
And like I showed you,
as you saw on the GK turn-based match,

00:44:55.470 --> 00:44:59.220
instead of an array of players,
there's an array of participants.

00:44:59.250 --> 00:45:01.160
Participants are a little
bit more than players.

00:45:01.190 --> 00:45:04.150
They represent a seat at the table,
and they actually could be

00:45:04.150 --> 00:45:06.880
empty initially if you're
waiting for someone to take it.

00:45:07.170 --> 00:45:10.820
Each participant tracks the state
of that current participant,

00:45:10.920 --> 00:45:14.120
the player state there,
and will also be used to represent

00:45:14.120 --> 00:45:15.790
the outcome of the match.

00:45:15.800 --> 00:45:19.890
At the end of every turn-based match,
you need to set the outcomes

00:45:19.890 --> 00:45:23.240
for all the participants so
that Game Center and your UI,

00:45:23.320 --> 00:45:27.610
if you want, can know who won, who lost,
if it was a tie, first, second,

00:45:27.620 --> 00:45:28.760
or third place.

00:45:28.780 --> 00:45:33.970
And we also allow you to specify some
custom parameters to the outcome.

00:45:34.310 --> 00:45:37.840
Each turn-based participant
has a few properties.

00:45:37.980 --> 00:45:42.040
There's a player, if a player has been
assigned to the seat.

00:45:42.200 --> 00:45:47.190
There's also the date of the last
turn taken by this participant,

00:45:47.340 --> 00:45:50.440
the status of this participant,
whether they're actively playing,

00:45:50.570 --> 00:45:53.580
whether they've quit,
or whether we're still waiting

00:45:53.580 --> 00:45:57.000
for someone to be matched,
and finally, the in-game outcome that you

00:45:57.000 --> 00:45:58.540
can set for each participant.

00:45:59.120 --> 00:46:04.210
Taking a turn on a turn-based
match is pretty straightforward.

00:46:04.500 --> 00:46:07.320
First thing here I'm doing,
I'm getting my current match.

00:46:07.380 --> 00:46:09.600
This is whatever the user is playing.

00:46:09.620 --> 00:46:14.190
I'm going to get the game state
for that match as game data here.

00:46:14.320 --> 00:46:18.000
And I'm going to figure out who
should be the next participant.

00:46:18.000 --> 00:46:19.920
The next participant can
be anybody in the match.

00:46:19.970 --> 00:46:21.900
It doesn't have to go sequentially.

00:46:21.950 --> 00:46:23.580
You can reverse it.

00:46:23.580 --> 00:46:25.120
You can skip.

00:46:25.150 --> 00:46:28.130
You can totally change who it is.

00:46:28.130 --> 00:46:30.940
It can be anybody in the match.

00:46:30.940 --> 00:46:31.590
It can even be the same player again.

00:46:31.940 --> 00:46:39.600
Then at the end,
we'll intern with next participant,

00:46:39.600 --> 00:46:39.600
providing the match data
and a completion handler

00:46:40.130 --> 00:46:41.240
on the result.

00:46:41.250 --> 00:46:44.400
This will send the match data
and communicate who the next

00:46:44.400 --> 00:46:46.630
participant in the match should be.

00:46:46.630 --> 00:46:49.720
Then the services will send a
notification to the next player

00:46:49.920 --> 00:46:51.200
so they can take their turn.

00:46:51.200 --> 00:46:58.630
So, that wraps up a overall view of the
GameKit framework and what APIs provides.

00:46:58.770 --> 00:47:01.870
We have several sessions coming
tomorrow with more in-depth

00:47:02.010 --> 00:47:03.450
at various topics in there.

00:47:03.520 --> 00:47:06.010
But before I leave you,
let's talk a little bit about

00:47:06.210 --> 00:47:08.880
the GameCenter services and
how you can set up your app,

00:47:09.120 --> 00:47:13.020
test your app,
and submit it to the store.

00:47:13.540 --> 00:47:18.350
This is the third piece
that Game Center delivers.

00:47:18.350 --> 00:47:21.440
And you communicate your data
to the Game Center services

00:47:21.440 --> 00:47:22.830
through iTunes Connect.

00:47:22.950 --> 00:47:25.930
The first thing you need to remember
to do if you want to use Game Center is

00:47:26.020 --> 00:47:28.350
to enable your game to use Game Center.

00:47:28.390 --> 00:47:29.900
That's pretty obvious.

00:47:29.980 --> 00:47:34.320
Then you want to really
seriously consider adding

00:47:34.320 --> 00:47:34.320
leaderboards and achievements.

00:47:34.560 --> 00:47:38.280
And if your game has multiplayer,
you use iTunes Connect to specify

00:47:38.630 --> 00:47:40.640
multiplayer compatibility.

00:47:40.640 --> 00:47:44.080
We foresaw the need for cases
where one version of an app may

00:47:44.080 --> 00:47:48.400
not be compatible multiplayer-wise
with an older version of an app.

00:47:48.400 --> 00:47:51.010
Or say you add new
multiplayer to version 2,

00:47:51.010 --> 00:47:53.290
it's not compatible with version 1.

00:47:53.410 --> 00:47:55.300
This allows you to control that.

00:47:55.340 --> 00:47:59.360
Here's what the iTunes
Connect UI looks like.

00:47:59.360 --> 00:48:02.640
You access it through
Safari or your web browser.

00:48:02.640 --> 00:48:05.640
And you're here and you haven't yet
enabled Game Center for your app,

00:48:05.640 --> 00:48:09.590
so you want to click the enable button.

00:48:09.910 --> 00:48:12.440
Your app is Game Center enabled.

00:48:12.470 --> 00:48:16.130
We can use this same screen to go on
and add leaderboards and achievements,

00:48:16.270 --> 00:48:18.090
which is what I'll do next.

00:48:18.500 --> 00:48:20.560
First thing we want to do,
I've got some leaderboards here,

00:48:20.560 --> 00:48:22.400
but I want to walk
through adding a new one.

00:48:22.510 --> 00:48:25.150
So we'll click the "Add
Leaderboard" button.

00:48:25.580 --> 00:48:28.860
For this new leaderboard,
I'm going to specify a reference name.

00:48:28.880 --> 00:48:30.380
Here, number of rock.

00:48:30.380 --> 00:48:33.040
I'm going to use this leaderboard
to identify the number of times

00:48:33.110 --> 00:48:36.090
I've chosen rock in a rock,
paper, scissors game.

00:48:36.210 --> 00:48:38.900
And I give it a leaderboard ID.

00:48:38.940 --> 00:48:40.260
It's an integer.

00:48:40.310 --> 00:48:45.110
And I'm going to rank it high to low
so the most times someone chooses rock,

00:48:45.210 --> 00:48:46.290
they're on top.

00:48:46.800 --> 00:48:49.200
Next, I'm going to add language.

00:48:49.220 --> 00:48:51.070
Make sure that we have a
title for this leaderboard.

00:48:51.080 --> 00:48:52.840
I'm going to call it Rock.

00:48:52.870 --> 00:48:55.880
And we're going to set up a suffix.

00:48:55.910 --> 00:48:59.130
And if you look closely,
I've got preceding spaces on

00:48:59.130 --> 00:49:01.470
my suffixes of Rock and Rocks.

00:49:01.470 --> 00:49:03.590
And this is an integer value.

00:49:03.780 --> 00:49:07.240
Once we're done,
we can save and add other localizations.

00:49:07.280 --> 00:49:09.620
Next, I'll look and show you
how to add achievements.

00:49:09.850 --> 00:49:12.530
So similarly, we're going to click
the Add New Achievement.

00:49:12.770 --> 00:49:14.460
I've got a few here already.

00:49:14.660 --> 00:49:16.370
We add a new achievement.

00:49:16.490 --> 00:49:20.160
Here is my creatively named
Rock Steady achievement.

00:49:20.210 --> 00:49:25.070
I want to give this to people that
choose rock multiple times in a row.

00:49:25.260 --> 00:49:28.130
I'll give it an identifier and
it's going to be hidden because

00:49:28.130 --> 00:49:33.200
I don't want to be obvious that you
should choose Rock sequentially.

00:49:33.200 --> 00:49:35.200
And it's got a point value of 100 points.

00:49:35.200 --> 00:49:37.200
I mean,
if you manage to win picking the same

00:49:37.200 --> 00:49:39.690
-- picking Rock many times in a row,
well,

00:49:39.690 --> 00:49:42.200
I guess you deserve a lot of points.

00:49:42.200 --> 00:49:43.880
Then we'll add some localization.

00:49:43.880 --> 00:49:45.030
We're adding a language.

00:49:45.700 --> 00:49:47.090
Title is Rocksteady.

00:49:47.090 --> 00:49:49.200
And two descriptions here.

00:49:49.200 --> 00:49:52.730
You know, what -- before they earn it,
you know, tell them to choose

00:49:52.780 --> 00:49:54.180
Rock ten times in a row.

00:49:54.180 --> 00:49:56.250
Now, obviously,
it's hidden so they don't see that,

00:49:56.290 --> 00:49:59.150
but it's worth putting it in there
in case you want to unhide it later.

00:49:59.270 --> 00:50:03.100
And their reward for earning it,
they get to see the icon of a nice

00:50:03.360 --> 00:50:06.030
purple rock and you're steady as a rock.

00:50:06.030 --> 00:50:09.160
And then we'll save this.

00:50:09.600 --> 00:50:12.300
and once we're done making all edits
and adding all our achievements,

00:50:12.300 --> 00:50:14.610
we can save the achievements.

00:50:15.100 --> 00:50:18.950
So when you're developing an app,
your iTunes kinetic first

00:50:18.950 --> 00:50:20.520
goes into a sandbox.

00:50:20.520 --> 00:50:23.060
And this is the environment
that we provide,

00:50:23.060 --> 00:50:27.400
so that you can develop your app
before submitting it to the store

00:50:27.440 --> 00:50:29.760
and develop new versions of your app.

00:50:29.760 --> 00:50:33.070
Games and development run in the sandbox,
and this includes development

00:50:33.070 --> 00:50:35.800
builds that you build and
install on your device via Xcode.

00:50:35.800 --> 00:50:41.230
This includes builds that you
install and run on the simulator.

00:50:41.230 --> 00:50:46.340
And it also includes ad hoc builds
that you might deliver to beta testers.

00:50:46.340 --> 00:50:49.080
So beta testers playing an ad
hoc build will be playing in

00:50:49.080 --> 00:50:51.280
sandbox with your test version.

00:50:52.040 --> 00:50:57.180
Contrary to this, games in the App Store,
once you've submitted it,

00:50:57.320 --> 00:50:59.000
use our production servers.

00:50:59.060 --> 00:51:01.400
But we thought about you
when testing these games.

00:51:01.400 --> 00:51:03.130
We knew you'd want to test
backwards compatibility,

00:51:03.130 --> 00:51:04.400
especially in multiplayer.

00:51:04.570 --> 00:51:08.110
So it is possible,
and I'll show you how in a moment,

00:51:08.280 --> 00:51:10.990
to test a production game on Sandbox.

00:51:11.150 --> 00:51:15.830
So you can test your live app
with your new development app

00:51:15.920 --> 00:51:18.390
and play multiplayer against each
other and make sure that it works.

00:51:18.550 --> 00:51:23.100
So the way to look at Sandbox is
basically as another set of services.

00:51:23.190 --> 00:51:25.400
It's for testing your
application with Game Center.

00:51:25.400 --> 00:51:28.900
It duplicates all the production
Game Center functionality.

00:51:28.950 --> 00:51:33.120
Provides -- you know,
you use the same iTunes connect metadata,

00:51:33.120 --> 00:51:36.820
and these are separate
servers and separate players.

00:51:37.580 --> 00:51:41.900
As there are separate players,
a couple things to keep in mind.

00:51:41.900 --> 00:51:48.180
You can use the same Apple ID for
sandbox and production,

00:51:48.180 --> 00:51:48.180
but they will be separate
GKPlayer objects.

00:51:49.260 --> 00:51:52.540
We have a tip for identifying
which environment you're in.

00:51:52.580 --> 00:51:54.960
Use a different nickname.

00:51:54.960 --> 00:51:59.020
Here, my example,
I'm Apollo in production, but in Sandbox,

00:51:59.020 --> 00:52:00.590
I'm Apollo Sandbox.

00:52:01.720 --> 00:52:03.960
Switching to Sandbox is
pretty straightforward.

00:52:03.990 --> 00:52:06.080
It happens automatically.

00:52:06.080 --> 00:52:09.360
So when you run your app that's
in development or an ad hoc build,

00:52:09.400 --> 00:52:12.270
Game Center detects this and
will automatically require

00:52:12.270 --> 00:52:15.580
the user to authenticate into
Sandbox if they're in production.

00:52:15.580 --> 00:52:21.630
It only happens when required.

00:52:21.630 --> 00:52:21.630
And it happens during authentication.

00:52:21.930 --> 00:52:25.140
Switching out of Sandbox
is a manual process.

00:52:25.140 --> 00:52:27.570
As I mentioned,
we wanted to allow you to test

00:52:27.680 --> 00:52:30.800
your production apps in Sandbox
against your new version,

00:52:30.800 --> 00:52:33.320
so we made this manual and
you have to do it yourself.

00:52:33.370 --> 00:52:41.570
You do this by logging out with the
Game Center app and then logging

00:52:41.570 --> 00:52:41.570
back in or launching a live game,
a production game, and logging in.

00:52:43.200 --> 00:52:45.480
So the last thing you need to
do when you submit to the app

00:52:45.500 --> 00:52:49.400
store is to make sure you enable
Game Center for this version of your app.

00:52:49.470 --> 00:52:53.600
Each version of your app can
have Game Center on separately.

00:52:53.640 --> 00:52:57.880
So click that gray
button and make it green.

00:52:57.880 --> 00:53:01.140
Then verify that your bundle
identifier and version are correct.

00:53:01.250 --> 00:53:03.060
Submit your game to the app store.

00:53:03.320 --> 00:53:07.200
This will send your metadata
to the production environment.

00:53:07.360 --> 00:53:11.580
And it's worth noting and keep in
mind to test your leaderboards because

00:53:11.580 --> 00:53:13.520
changes are restricted after this.

00:53:13.610 --> 00:53:16.370
You can't remove leaderboards
once you've submitted and you

00:53:16.370 --> 00:53:17.880
can't change the sort order.

00:53:17.880 --> 00:53:20.710
So high to low or low
to high is permanent.

00:53:23.220 --> 00:53:25.130
So that wraps up Game Center services.

00:53:25.140 --> 00:53:27.440
I want to give you a quick summary.

00:53:27.470 --> 00:53:30.280
A couple things to become
a Game Center game.

00:53:30.400 --> 00:53:32.700
You enable iTunes Connect.

00:53:32.760 --> 00:53:36.120
You enable Game Center and iTunes
Connect and you authenticate the player.

00:53:36.430 --> 00:53:41.080
That's the minimum to be recognized
by Game Center and get your game

00:53:41.080 --> 00:53:41.080
to show up in the game list.

00:53:41.890 --> 00:53:45.800
But you really need to consider adding
one of our features for Game Center,

00:53:46.000 --> 00:53:49.040
including leaderboards, achievements,
and multiplayer.

00:53:49.040 --> 00:53:53.180
So quick summary of some of
the features new for iOS 5.

00:53:53.180 --> 00:53:55.200
We have turn-based gaming.

00:53:55.200 --> 00:53:58.150
We now have a custom invite sound
that you can specify in your bundle

00:53:58.150 --> 00:54:01.460
so that instead of the trumpet,
you'll hear your sound when the game

00:54:01.460 --> 00:54:03.320
-- the player receives an invite.

00:54:03.320 --> 00:54:06.780
You can add players to
in-progress peer-to-peer matches.

00:54:07.170 --> 00:54:10.710
Users can now submit app store
ratings from the Game Center UI and

00:54:10.710 --> 00:54:14.630
get game recommendations and
friend recommendations to discover

00:54:14.630 --> 00:54:16.200
new games and new friends.

00:54:16.200 --> 00:54:19.790
And there are the achievement
leaderboards to foster competition

00:54:20.120 --> 00:54:23.020
and more features which we'll
cover later in other sessions.

00:54:24.840 --> 00:54:28.220
So wrapping up,
Game Center and Game Kit provide

00:54:28.270 --> 00:54:31.280
easy ways to enhance social gameplay.

00:54:31.280 --> 00:54:37.700
We have several features to do so and
encourage competition and cooperation.

00:54:37.700 --> 00:54:40.610
And Game Center, the application,
provides a lot of ways for

00:54:40.610 --> 00:54:44.710
your apps and your games to get
discovered if you adopt Game Center.

00:54:44.710 --> 00:54:46.520
We show you your friends' games.

00:54:46.520 --> 00:54:50.560
We have game recommendations based
on games your friends are playing.

00:54:50.560 --> 00:54:53.780
We have multiplayer invitations
that will allow users to purchase

00:54:53.780 --> 00:54:55.900
the game if they don't have it yet.

00:54:55.900 --> 00:55:00.100
And on iPad, if you've seen the Me page,
it has some icons for top games

00:55:00.680 --> 00:55:02.900
where we will show featured games.

00:55:02.900 --> 00:55:05.040
So there's a couple more
sessions on Game Center,

00:55:05.160 --> 00:55:06.250
three more tomorrow to be exact.

00:55:06.310 --> 00:55:07.440
Starting at 9:00 a.m.

00:55:07.440 --> 00:55:10.550
in the morning in this room,
we have working with Game Center.

00:55:10.550 --> 00:55:14.740
Then we have multiplayer gaming and
turn-based gaming with Game Center.

00:55:14.820 --> 00:55:18.290
And I will repeat this session on
Friday for any of your colleagues that

00:55:18.350 --> 00:55:21.130
were not able to make this time slot.

00:55:21.130 --> 00:55:22.690
Thank you very much.

00:55:22.740 --> 00:55:26.330
I hope you add games
Add Game Center to your games.