WEBVTT

00:00:10.470 --> 00:00:14.480
Good morning and welcome to our session,
Working with iOS Accessories.

00:00:14.540 --> 00:00:19.160
I'm Emily Schubert and I'm responsible
for our interface to accessories.

00:00:20.800 --> 00:00:24.910
iOS provides more opportunities than
ever for applications to interact

00:00:25.020 --> 00:00:28.540
with accessories and external devices.

00:00:28.540 --> 00:00:35.320
In this session,
we will talk about some of those

00:00:35.320 --> 00:00:35.320
opportunities and we will highlight
for you what is new with iOS 5.

00:00:36.560 --> 00:00:39.310
Last year in this session,
we gave you an overview of all

00:00:39.480 --> 00:00:41.200
of the available interfaces.

00:00:41.200 --> 00:00:46.540
We also then went into some detail on
Bluetooth and told you how best to make

00:00:46.670 --> 00:00:51.160
use of the iOS Bluetooth interfaces
from an app and accessory perspective.

00:00:51.160 --> 00:00:54.950
Then we talked to you about the
External Accessory framework,

00:00:54.950 --> 00:00:57.270
which was an exciting new feature.

00:00:57.280 --> 00:00:59.490
We talked about it in some depth.

00:00:59.580 --> 00:01:02.200
Now today we have a number
of new topics for you,

00:01:02.220 --> 00:01:05.680
and then we'll give you updates
on some of the other topics.

00:01:07.590 --> 00:01:09.740
First, we will talk about AirPlay.

00:01:09.810 --> 00:01:15.010
This is a Wi-Fi feature and we will
talk to you about what AirPlay means

00:01:15.010 --> 00:01:19.780
to you as both an app developer
and an accessory developer.

00:01:20.670 --> 00:01:24.790
We will then give you an update
on Bluetooth and talk to you about

00:01:24.790 --> 00:01:31.320
what's new in Bluetooth for iOS 5,
as well as our recommendations for how

00:01:31.410 --> 00:01:37.300
to make the best Bluetooth accessories
or apps that really take

00:01:37.300 --> 00:01:37.300
advantage of our interfaces.

00:01:37.990 --> 00:01:42.400
We will wrap up with some updates
on specific accessory features

00:01:42.800 --> 00:01:50.140
that are more general and include
updates on EA in that section.

00:01:50.180 --> 00:01:54.980
Now I would like to hand it over to
Peter Langenfeld to talk about AirPlay.

00:01:59.200 --> 00:02:00.800
Thanks, Emily.

00:02:00.850 --> 00:02:01.610
Morning.

00:02:01.650 --> 00:02:04.590
I'm Peter Langenfeld, and I'm the feature
manager here at Apple,

00:02:04.590 --> 00:02:06.890
and I'm here to talk to you
guys about AirPlay today.

00:02:06.900 --> 00:02:09.890
So there's three basic
things I want to cover.

00:02:09.890 --> 00:02:12.260
First, what is AirPlay?

00:02:12.260 --> 00:02:14.480
Why are we here at
Apple so excited about it?

00:02:14.540 --> 00:02:17.110
Why do we think it's a great technology,
and why do we think all of you should

00:02:17.110 --> 00:02:18.540
be really excited about it as well?

00:02:19.430 --> 00:02:22.670
Next, for you iOS developers,
how do you best take advantage of

00:02:22.710 --> 00:02:26.970
AirPlay in your own apps to make
sure that your customers can get

00:02:27.070 --> 00:02:31.500
the kind of the premier experience,
if you will, with AirPlay accessories

00:02:31.500 --> 00:02:32.960
and AirPlay technology?

00:02:32.980 --> 00:02:35.330
And finally,
for you accessory manufacturers,

00:02:35.330 --> 00:02:37.980
I want to talk to you about kind
of a couple of things that you

00:02:38.030 --> 00:02:41.180
should be thinking about when
designing an AirPlay accessory,

00:02:41.180 --> 00:02:44.190
and a couple of things that are a
little different than your normal

00:02:44.240 --> 00:02:46.320
accessory development and application.

00:02:46.320 --> 00:02:48.030
So let's go ahead and get started.

00:02:48.830 --> 00:02:49.800
So what is AirPlay?

00:02:49.800 --> 00:02:54.830
AirPlay is a collection of wireless
streaming services and technologies

00:02:55.210 --> 00:02:58.840
that's really meant to take the
experience from the iOS device in

00:02:58.970 --> 00:03:02.600
the palm of your hand and to put
it up on the big screen television,

00:03:02.600 --> 00:03:06.100
on your home theater,
on pretty much any other accessory that

00:03:06.100 --> 00:03:08.540
isn't actually in the palm of your hand.

00:03:10.220 --> 00:03:17.120
It consists of audio, video, photo,
and as we just introduced yesterday, now,

00:03:17.350 --> 00:03:18.860
mirroring.

00:03:19.350 --> 00:03:24.040
So basically, AirPlay is designed to work
around the Wi-Fi standard.

00:03:24.100 --> 00:03:26.380
That means you don't have to
buy any special equipment.

00:03:26.420 --> 00:03:29.380
It just works with the router
that's already in your home.

00:03:29.380 --> 00:03:31.180
You don't have to buy any packages.

00:03:31.200 --> 00:03:34.340
Basically, you buy an AirPlay accessory,
you bring it home,

00:03:34.360 --> 00:03:36.420
get it on your network,
and it just works.

00:03:36.440 --> 00:03:38.660
If you want a second one,
you can buy a second one,

00:03:38.690 --> 00:03:42.350
but there's no need to buy any sort of
system or integrated technology beyond

00:03:42.350 --> 00:03:46.370
your iOS device and the single accessory
you just purchased in the store.

00:03:47.500 --> 00:07:00.400
[Transcript missing]

00:07:01.630 --> 00:07:02.940
On to photos.

00:07:02.940 --> 00:07:05.690
So photo streaming is once
again to the Apple TV.

00:07:05.930 --> 00:07:09.280
And the idea is basically
if you've created this great

00:07:09.310 --> 00:07:12.260
slide show on your iOS device,
on your Mac, et cetera,

00:07:12.440 --> 00:07:15.010
and you spent all this time
synchronizing your audio and

00:07:15.010 --> 00:07:18.850
designing your transitions perfectly,
with AirPlay photos you can just stream

00:07:18.850 --> 00:07:21.780
it directly to your Apple TV and enjoy
it with your friends and family a

00:07:21.780 --> 00:07:25.160
little easier than just trying to show
them the small device in your hand.

00:07:26.180 --> 00:07:30.560
If you decide to create a slide
show kind of on the fly and you

00:07:30.870 --> 00:07:34.290
decide not to put all that time
and effort into the transitions,

00:07:34.360 --> 00:07:37.330
you can also take advantage of the
transitions on the Apple TV itself.

00:07:37.380 --> 00:07:40.160
So you'll look like a rock star
even though you may not have spent

00:07:40.250 --> 00:07:41.730
the time to really become one.

00:07:41.800 --> 00:07:47.350
Finally, the announcement of yesterday
announced AirPlay mirroring.

00:07:47.350 --> 00:07:51.710
The idea between AirPlay mirroring is
really that it's the same as the digital

00:07:51.710 --> 00:07:55.490
AV cable that we introduced the iPad to,
just without the wires.

00:07:55.520 --> 00:07:55.910
So it's not the same as the digital
AV cable that we introduced the iPad to,

00:07:55.950 --> 00:07:56.160
just without the wires.

00:07:56.180 --> 00:07:58.930
It's the same mirroring function,
mirroring service,

00:07:59.060 --> 00:08:01.920
you don't have to worry about
having to walk over your TV,

00:08:01.920 --> 00:08:05.640
having an adapter, hooking it up,
it goes straight to the Apple TV just

00:08:05.640 --> 00:08:08.210
from a single route selection.

00:08:08.220 --> 00:08:12.590
You can utilize games, web, apps,
pretty much everything on your iOS

00:08:12.590 --> 00:08:17.060
device and put it up on the screen
without having to worry about it.

00:08:17.060 --> 00:08:21.560
You get the same rotation capabilities
you have with the digital AV adapter.

00:08:21.560 --> 00:08:25.030
When I rotate the iPad,
I see it in landscape or portrait

00:08:25.090 --> 00:08:27.240
depending on the orientation.

00:08:27.240 --> 00:08:28.230
So what does that mean?

00:08:28.260 --> 00:08:30.820
That means I can have a different
display on my iPad than I'm seeing

00:08:30.900 --> 00:08:32.620
on the big screen television.

00:08:32.650 --> 00:08:36.330
So I can actually tailor my app to
give a really great experience if

00:08:36.400 --> 00:08:39.990
I want to basically see a map or see
some sort of status on my iPad but

00:08:39.990 --> 00:08:44.970
really focus on the action on the
big screen or alternatively also the

00:08:44.970 --> 00:08:48.440
audio on the big home theater system.

00:08:48.600 --> 00:08:52.260
So moving on, AirPlay Accessories.

00:08:52.290 --> 00:08:55.110
We have this great ecosystem of
AirPlay Accessories that already exist.

00:08:55.160 --> 00:08:59.190
We're going to see an even bigger
ecosystem of AirPlay Accessories

00:08:59.270 --> 00:09:00.040
this holiday season.

00:09:00.040 --> 00:09:03.800
And I want to get you guys excited a
little bit about the concept that you can

00:09:03.830 --> 00:09:08.220
create accessories that really fit into
any corner of the lifestyle of the users.

00:09:09.120 --> 00:09:11.920
As you can see,
we have units that have displays,

00:09:11.920 --> 00:09:15.620
units without displays,
small sort of home theater systems.

00:09:15.620 --> 00:09:18.130
We have the Apple TV,
the Airport Express.

00:09:18.140 --> 00:09:21.940
Pretty much anything you can imagine
can be made into an AirPlay accessory.

00:09:21.960 --> 00:09:23.380
And I think there's a lot of space here.

00:09:23.380 --> 00:09:24.480
There's a lot of excitement.

00:09:24.560 --> 00:09:27.490
There's a lot of interesting things
we can do for the consumer in

00:09:27.760 --> 00:09:30.780
terms of making sure they can enjoy
their audio and their video kind

00:09:30.780 --> 00:09:32.520
of in every corner of their home.

00:09:34.620 --> 00:09:35.500
So that's it.

00:09:35.500 --> 00:09:36.000
That's AirPlay.

00:09:36.070 --> 00:09:38.580
Hopefully you guys are a little
more excited than when you started.

00:09:38.730 --> 00:09:42.240
You understand kind of generally what
it is we're talking about and maybe

00:09:42.240 --> 00:09:44.260
some possibilities of what we can do.

00:09:44.410 --> 00:09:47.710
Let's talk through a few more
specifics of actually using the

00:09:47.710 --> 00:09:49.940
individual AirPlay experiences.

00:09:50.080 --> 00:09:53.210
So on the left of the screen,
you'll notice the iPod app.

00:09:53.300 --> 00:09:55.230
On the right,
you'll notice the movie player.

00:09:55.400 --> 00:09:58.440
This is the standard view you get,
standard transport control,

00:09:58.450 --> 00:09:59.900
standard volume controller.

00:10:00.340 --> 00:10:04.480
And in this particular example,
I'm looking at a network that

00:10:04.710 --> 00:10:08.490
has no AirPlay devices resident.

00:10:08.500 --> 00:10:11.880
Now I've gone on to a network
where I do have AirPlay devices,

00:10:11.880 --> 00:10:16.160
and you'll notice the AirPlay icon has
popped up automatically with no kind of

00:10:16.240 --> 00:10:21.070
effort or action from the user other than
actually getting on the network itself.

00:10:21.930 --> 00:10:26.290
Now, once I click on that icon,
I get the route picker,

00:10:26.290 --> 00:10:29.420
and there's something I want to point
out here in terms of a difference

00:10:29.630 --> 00:10:33.190
between the iPod application and
the movie player application.

00:10:33.370 --> 00:10:36.780
You'll notice for the iPod application,
all I have are audio endpoints.

00:10:36.800 --> 00:10:39.640
Obviously that indicates
I can route the audio.

00:10:39.640 --> 00:10:41.780
It's the only thing you
can route from the iPod,

00:10:41.890 --> 00:10:43.580
so I guess it's kind of obvious.

00:10:43.580 --> 00:10:45.800
But on the right,
I have the movie player application.

00:10:45.800 --> 00:10:48.500
And you'll notice that
I have both video endpoints,

00:10:48.500 --> 00:10:51.540
indicated by the movie screen,
and audio endpoints.

00:10:51.550 --> 00:10:54.770
So the difference there is that a
video endpoint will route both the

00:10:54.770 --> 00:10:58.480
video and the audio to that endpoint,
whereas the audio route will

00:10:58.730 --> 00:11:01.890
continue to show the video on
the iOS device in your hand,

00:11:01.890 --> 00:11:06.180
and will actually take the audio and
route it up to the home theater system,

00:11:06.180 --> 00:11:08.120
speaker system, et cetera.

00:11:08.180 --> 00:11:09.080
Okay.

00:11:09.280 --> 00:11:11.220
So I'm going to select each of these.

00:11:11.220 --> 00:11:14.060
You'll notice that the
focus point changes.

00:11:14.060 --> 00:11:19.430
And now that I'm actually streaming
the AirPlay stream to the endpoint,

00:11:19.800 --> 00:11:22.280
the AirPlay icon turns blue.

00:11:22.280 --> 00:11:25.520
And in the case of the movie player,
I also get a nice message that

00:11:25.520 --> 00:11:28.610
indicates where that video is going.

00:11:28.930 --> 00:11:31.900
There's one thing I want to point out,
just because I mentioned it earlier,

00:11:31.930 --> 00:11:37.540
and that's with the memory of volume
for each of the AirPlay accessories,

00:11:37.580 --> 00:11:45.070
you'll notice that the system
volume on the left has now shifted

00:11:45.130 --> 00:11:47.650
up to the right and has remembered
what that AirPlay endpoint was

00:11:47.650 --> 00:11:47.650
set to as soon as I connect to it,
which is great.

00:11:48.540 --> 00:11:50.960
Okay, so how do you actually use
this in your application?

00:11:50.960 --> 00:11:55.040
For audio, basically you want to use
the Media Player framework,

00:11:55.040 --> 00:11:56.990
and you just want to use
the standard volume view.

00:11:56.990 --> 00:11:58.690
That's the one thing
you have to remember,

00:11:58.690 --> 00:12:00.810
just the standard volume
view for your application,

00:12:00.810 --> 00:12:02.910
and you'll get all the
features I just showed you.

00:12:03.540 --> 00:12:06.710
For video, you can use either
MP Movie Player Controller or

00:12:06.740 --> 00:12:09.790
AV Foundation,
which will give you a little more control

00:12:09.790 --> 00:12:12.120
over what you want to do with the video.

00:12:12.120 --> 00:12:14.640
But it's really just as simple as audio.

00:12:14.640 --> 00:12:16.900
All you have to do is use the
standard system level services

00:12:16.900 --> 00:12:19.130
that we offer to make sure you
can get both of those features

00:12:19.140 --> 00:12:20.800
integrated to your own application.

00:12:20.800 --> 00:12:23.680
Everything else is taken care of for you.

00:12:24.140 --> 00:12:26.150
Basically, we trigger the route
button automatically.

00:12:26.220 --> 00:12:27.910
The user can access
all the volume levels,

00:12:27.960 --> 00:12:29.810
the routes, et cetera,
without you having to

00:12:29.810 --> 00:12:31.020
worry about anything.

00:12:31.020 --> 00:12:33.440
You don't even have to worry about
when it's routing to AirPlay.

00:12:33.540 --> 00:12:38.420
It's all kind of taken care of for you.

00:12:38.420 --> 00:12:41.160
It's kind of a blind transition,
and there's no differences in terms

00:12:41.160 --> 00:12:42.600
of the way you control things.

00:12:44.340 --> 00:12:49.720
There are a couple more details that
I want to point out just because they're

00:12:49.870 --> 00:12:54.930
very useful to make sure that your
user can have the best experience.

00:12:54.930 --> 00:12:59.290
The first, if you use the MP Volume View,
make sure you don't

00:12:59.430 --> 00:13:01.180
hide the Route button.

00:13:01.180 --> 00:13:03.360
You have to do this actively.

00:13:03.440 --> 00:13:07.880
The default is definitely that
the Route button is visible,

00:13:07.880 --> 00:13:09.060
but if you hide it,
it makes the user have to go to

00:13:09.060 --> 00:13:09.060
the multi-touch -- excuse me -- the

00:13:11.610 --> 00:13:13.490
The switcher, basically,
from the home screen.

00:13:13.500 --> 00:13:14.880
So you have to double-click
the home button,

00:13:14.880 --> 00:13:18.570
and you have to go to the multitasking
UI to select your AirPlay route,

00:13:18.590 --> 00:13:19.820
which is kind of inconvenient.

00:13:19.840 --> 00:13:22.350
So just don't say no to this,
and you'll be fine.

00:13:22.380 --> 00:13:26.690
Finally, on the video side,
we ask that you explicitly

00:13:26.800 --> 00:13:30.200
allow AirPlay streaming from
your different media assets.

00:13:30.220 --> 00:13:33.440
In iOS 5,
this is done for you by default,

00:13:33.440 --> 00:13:36.830
but in iOS 4.3,
these are default set to no.

00:13:36.860 --> 00:13:38.550
So if you want to be
backwards compatible,

00:13:38.600 --> 00:13:40.880
it's best to go through and
actively set these to allow,

00:13:40.880 --> 00:13:41.440
and yes.

00:13:41.440 --> 00:13:44.460
Obviously,
this is just kind of the one or two

00:13:44.460 --> 00:13:45.820
high-level things you guys should do.

00:13:45.840 --> 00:13:47.360
It's fairly simple.

00:13:47.360 --> 00:13:51.200
If you want more information,
we have lots of sessions on core audio,

00:13:51.200 --> 00:13:52.240
core video.

00:13:52.240 --> 00:13:54.900
I encourage you to go to those,
ask questions at the labs,

00:13:55.000 --> 00:13:57.450
make sure you know exactly
what it is you want to do.

00:13:57.740 --> 00:14:00.260
But from a high level,
these are the points you really

00:14:00.260 --> 00:14:01.830
need to memorize and know about.

00:14:01.860 --> 00:14:02.780
Okay.

00:14:04.310 --> 00:14:07.300
Let's move on to using mirroring.

00:14:07.300 --> 00:14:10.960
So the way you use mirroring is you
actually go again to the multitasking UI.

00:14:10.960 --> 00:14:14.060
You pull it up with the double
click and the slide to the left.

00:14:14.070 --> 00:14:17.410
And obviously when you get on a network
where there's an AirPlay device,

00:14:17.410 --> 00:14:18.760
you get the AirPlay icon.

00:14:18.770 --> 00:14:20.110
I select it.

00:14:20.350 --> 00:14:21.720
I have routes just like before.

00:14:21.720 --> 00:14:23.580
But there's a slight difference now.

00:14:23.580 --> 00:14:26.930
When I select a route that
actually has the ability to mirror,

00:14:26.930 --> 00:14:29.890
I get this nice little switch, mirroring,
on or off.

00:14:29.890 --> 00:14:32.680
If I leave it off,
basically I get the same functionality

00:14:32.680 --> 00:14:34.270
I had when I was using AirPlay.

00:14:34.300 --> 00:14:35.730
And I showed you the movie player.

00:14:35.730 --> 00:14:38.390
So I'll just stream all of my media
assets directly to the screen.

00:14:38.450 --> 00:14:41.190
But when I turn it on,
I now get mirroring functionality.

00:14:41.330 --> 00:14:43.130
It's just that simple for the user.

00:14:43.130 --> 00:14:46.570
Obviously when I'm actually
routing in the multitasking UI,

00:14:46.570 --> 00:14:48.860
I have the glowing blue AirPlay icon.

00:14:48.860 --> 00:14:51.020
And once I actually go
back to the home screen,

00:14:51.080 --> 00:14:52.660
I want to point out the status bar.

00:14:52.750 --> 00:14:53.650
It now turns blue.

00:14:53.660 --> 00:14:56.620
And in the upper right,
there's actually a little AirPlay icon

00:14:56.620 --> 00:14:59.520
to remind the user that they're
mirroring everything on their

00:14:59.590 --> 00:15:01.670
screen to the big screen television.

00:15:03.110 --> 00:15:06.120
So this is a situation of
just standard mirroring.

00:15:06.130 --> 00:15:08.000
Basically,
I see the exact same thing on the

00:15:08.400 --> 00:15:09.700
iPad that I see on the television.

00:15:09.710 --> 00:15:11.380
It's a great user experience.

00:15:11.380 --> 00:15:14.540
But I can enhance that even,
if I so choose for my app,

00:15:14.580 --> 00:15:19.180
to basically give the UI screen view
or a different view between the iPad

00:15:19.250 --> 00:15:21.320
screen and the television screen.

00:15:21.320 --> 00:15:23.060
This can really be used
to enhance your game,

00:15:23.140 --> 00:15:25.180
to enhance your app,
to really give a targeted

00:15:25.350 --> 00:15:26.480
experience for AirPlay.

00:15:26.490 --> 00:15:28.880
But it's something you have
to do a little more actively.

00:15:28.930 --> 00:15:31.320
So how do you take advantage
of it inside your app?

00:15:31.330 --> 00:15:33.760
If all you want is mirroring, it's blank.

00:15:33.760 --> 00:15:34.720
You do nothing.

00:15:34.720 --> 00:15:37.510
You just leave the system to
whatever it wants to do and

00:15:37.510 --> 00:15:39.160
we'll take care of it for you.

00:15:39.180 --> 00:15:43.740
But if you're looking to create
that kind of tailored view for

00:15:43.740 --> 00:15:48.290
the actual AirPlay experience,
what you'll want to do is use UI screen.

00:15:49.280 --> 00:15:52.600
There's a session specifically
on AirPlay mirroring and

00:15:52.600 --> 00:15:54.690
UI screen here at WWDC.

00:15:55.070 --> 00:15:57.140
I encourage you to go and
get all the details there.

00:15:57.140 --> 00:16:00.880
Basically,
the overall function is that you get

00:16:00.880 --> 00:16:04.370
informed when an external screen arrives,
you get informed of the

00:16:04.370 --> 00:16:07.260
resolution of that screen,
and you can decide as an application what

00:16:07.260 --> 00:16:10.260
it is you want to do with that screen
in terms of frame rate resolutions,

00:16:10.260 --> 00:16:10.580
etc.

00:16:10.740 --> 00:16:12.170
There's a lot of detail there.

00:16:12.250 --> 00:16:14.280
I highly encourage you
to go to that session,

00:16:14.280 --> 00:16:17.490
go to those labs to really ask questions
about this and figure out how to

00:16:17.520 --> 00:16:21.230
really take advantage of the mirroring
functionality if you really want your app

00:16:21.230 --> 00:16:23.480
to have a tailored mirroring experience.

00:16:23.480 --> 00:16:25.970
Everything else is handled
by the system automatically.

00:16:25.980 --> 00:16:28.080
So just like all the other
AirPlay technologies,

00:16:28.080 --> 00:16:30.190
we handle the routes,
we handle the volume, etc.

00:16:30.310 --> 00:16:31.850
So you don't need to worry about it.

00:16:31.940 --> 00:16:32.880
Okay.

00:16:32.880 --> 00:16:35.370
So we're going to move on a
little bit from AirPlay and talk

00:16:35.380 --> 00:16:37.870
about some technologies that,
although really useful to

00:16:37.970 --> 00:16:41.200
be leveraged by AirPlay,
are also applicable to... all of our

00:16:41.270 --> 00:16:43.540
other transports in terms of accessories.

00:16:43.540 --> 00:16:44.930
First is using metadata.

00:16:44.950 --> 00:16:48.590
We're excited to announce that in iOS 5,
we now allow metadata to come

00:16:48.590 --> 00:16:51.940
from third-party apps and be used
on the system and distributed to

00:16:51.940 --> 00:16:55.580
accessories to inform the user what
it is you're playing back in terms of

00:16:55.700 --> 00:16:57.840
what your media asset is right now.

00:16:57.940 --> 00:16:59.300
So this is the lock screen.

00:16:59.600 --> 00:17:02.570
And basically, as you can see,
we have audio on the left,

00:17:02.570 --> 00:17:04.110
we have video on the right.

00:17:04.110 --> 00:17:06.920
I can see the album title,
I can see the artist name,

00:17:06.920 --> 00:17:08.640
I can see the track title.

00:17:08.640 --> 00:17:12.270
And again,
if I now go to... to the multitasking UI,

00:17:12.420 --> 00:17:13.920
you can see the track title there.

00:17:13.940 --> 00:17:15.800
All these are standard things
that you've seen before.

00:17:15.840 --> 00:17:19.350
What we also get, though,
is for AirPlay accessories,

00:17:19.360 --> 00:17:22.900
there's the ability to take that metadata
and distribute it outwards so that

00:17:22.980 --> 00:17:24.510
you can see everything that's playing.

00:17:24.520 --> 00:17:27.220
And so you have a television
system on the left,

00:17:27.220 --> 00:17:29.210
you have a small speaker
dock on the right.

00:17:29.210 --> 00:17:33.590
Great example of ways to use metadata
really thoroughly and inform your user,

00:17:33.590 --> 00:17:37.260
not only from the palm of their hand,
but from the device they're actually

00:17:37.260 --> 00:17:40.500
enjoying the music experience on as to
exactly what it is they're listening to.

00:17:40.820 --> 00:17:42.020
And so we have a lot of different
ways to use the metadata,

00:17:42.020 --> 00:17:42.740
including the album art.

00:17:42.740 --> 00:17:44.250
This goes beyond just
AirPlay accessories,

00:17:44.330 --> 00:17:44.740
though.

00:17:44.830 --> 00:17:48.220
And we also have automotive systems,
standard wired MFI accessories,

00:17:48.220 --> 00:17:49.740
wireless MFI accessories.

00:17:49.740 --> 00:17:52.740
Everything can use this metadata
information from a third-party app.

00:17:52.740 --> 00:17:57.910
So it's really interesting and important,
I think, that your app take advantage

00:17:58.170 --> 00:18:00.900
of this in iOS 5.0.

00:18:01.890 --> 00:18:04.020
So how do you actually provide
metadata from your app?

00:18:04.070 --> 00:18:07.060
Well, the first thing I want to touch on
is to make sure you guys realize

00:18:07.520 --> 00:18:10.660
you should provide all the metadata
that you can from your app.

00:18:10.700 --> 00:18:15.280
There's no reason to gate your user's
experience by you just deciding,

00:18:15.400 --> 00:18:18.460
oh, well, all they can see is the
album title right now,

00:18:18.540 --> 00:18:19.840
so that's all I'm gonna provide.

00:18:19.870 --> 00:18:23.210
The more information you give the system,
the better experience the user

00:18:23.210 --> 00:18:25.950
can have at the end of the day,
and the more expandability the

00:18:25.950 --> 00:18:27.300
system has into the future.

00:18:27.330 --> 00:18:30.760
So I really encourage you to give all
of the metadata you have accessible

00:18:30.810 --> 00:18:33.850
to yourselves and make sure that
the system is fully informed so

00:18:33.850 --> 00:18:37.570
that we can make sure that all of
the accessories are fully informed.

00:18:38.020 --> 00:18:41.670
The system will take care of formatting,
consistency, et cetera,

00:18:41.670 --> 00:18:45.090
so you don't have to worry about
trying to do anything special.

00:18:45.090 --> 00:18:47.900
Just give us the complete data
and we'll handle the rest for you.

00:18:47.900 --> 00:18:50.370
It should really be that easy.

00:18:50.950 --> 00:18:52.620
How do you actually do this in code?

00:18:52.830 --> 00:18:54.360
Well,
first you want to create a dictionary

00:18:54.570 --> 00:18:58.560
for the actual metadata information
about what it is that's now playing.

00:18:58.560 --> 00:19:02.710
Essentially, in this case,
we have the property of the

00:19:02.710 --> 00:19:04.840
artist and of the track title.

00:19:05.310 --> 00:19:07.820
Obviously,
we just create a nice variable.

00:19:07.820 --> 00:19:11.930
If you want to blank the metadata or you
don't want to show any metadata at all,

00:19:11.940 --> 00:19:13.350
you'd set that variable to nil.

00:19:14.290 --> 00:19:22.880
And then we simply assign the now playing
info center information to that variable.

00:19:22.880 --> 00:19:23.680
And that's it.

00:19:23.680 --> 00:19:24.150
You're done.

00:19:26.830 --> 00:19:30.160
This is the extensive list of
everything you can provide to the app,

00:19:30.250 --> 00:19:33.070
and once again, I want to stress,
and you'll hear this over and

00:19:33.070 --> 00:19:35.700
over in this presentation,
please provide as much of this

00:19:35.700 --> 00:19:39.920
information as possible and we'll try to
utilize it to the best of our ability.

00:19:39.920 --> 00:19:42.580
And I think it's a really
great experience if users know

00:19:42.580 --> 00:19:45.430
exactly what it is that's going
on in the system at the time,

00:19:45.430 --> 00:19:48.620
instead of having that blind
experience of maybe seeing one piece

00:19:48.620 --> 00:19:51.060
of metadata and hearing something else.

00:19:51.060 --> 00:19:54.720
So please go through in that,
start using metadata in iOS 5.

00:19:54.780 --> 00:19:57.560
The next thing I want to talk
about is using playback controls.

00:19:57.770 --> 00:20:00.770
This is something we introduced last
year and talked a little bit about,

00:20:00.930 --> 00:20:04.360
but I think it's more important than
ever now that we have AirPlay involved.

00:20:04.410 --> 00:20:07.630
Basically, you can do play, pause, stop,
next, previous,

00:20:07.630 --> 00:20:10.500
all sorts of media controls
directly from your device,

00:20:10.500 --> 00:20:12.300
directly from your accessory.

00:20:12.420 --> 00:20:15.060
So not forcing the user to go back
to the iOS device and worrying

00:20:15.380 --> 00:20:17.660
about having to change tracks,
et cetera.

00:20:17.720 --> 00:20:19.560
They can do it right from the
remote control of their device,

00:20:19.610 --> 00:20:21.310
right from the front
panel of their device.

00:20:21.430 --> 00:20:22.740
It's a great experience.

00:20:22.790 --> 00:20:25.590
It applies to AirPlay, Bluetooth,
MFI accessories,

00:20:25.610 --> 00:20:27.200
even the headphone remote.

00:20:27.330 --> 00:20:30.920
So all you have to do is handle this
once and we take care of distributing

00:20:30.920 --> 00:20:34.140
it out to all the accessories
that may be used at one time.

00:20:34.210 --> 00:20:35.420
How do you do this in code?

00:20:35.500 --> 00:20:38.070
Well, most importantly,
you have to turn it on.

00:20:38.160 --> 00:20:42.620
So make sure you start receiving remote
control events first and foremost.

00:20:42.690 --> 00:20:44.300
And then create a handler.

00:20:44.390 --> 00:20:47.470
Now, when you create the handler,
only handle those events that

00:20:47.470 --> 00:20:49.060
mean something to your app.

00:20:49.140 --> 00:20:49.720
Events only get sent
to the Now Playing app.

00:20:49.720 --> 00:20:50.760
So it's not like somebody else
is going to be able to handle it.

00:20:50.760 --> 00:20:50.760
So you can't just send it
to the Now Playing app.

00:20:50.760 --> 00:20:50.760
It's not like somebody else is
going to be able to handle it.

00:20:50.760 --> 00:20:50.760
It's not like somebody else is
going to be able to handle it.

00:20:50.760 --> 00:20:51.340
So you can't just send it
to the Now Playing app.

00:20:51.380 --> 00:20:52.120
It's not like somebody else is
going to be able to handle it.

00:20:52.120 --> 00:20:53.120
It's not like somebody else is
going to be able to handle it.

00:20:53.120 --> 00:20:54.210
So it's not like somebody else
is going to get the events

00:20:54.270 --> 00:20:54.860
if you don't handle them.

00:20:54.900 --> 00:20:58.040
And in this case, we're showing just how
to handle a Play event.

00:20:58.070 --> 00:20:59.980
But it's really just
a simple case switch.

00:21:00.010 --> 00:21:04.240
Go through and handle Play Pause next
if you don't handle previous.

00:21:04.240 --> 00:21:04.240
Don't handle previous.

00:21:04.270 --> 00:21:05.680
It'll drop on the floor.

00:21:05.690 --> 00:21:06.680
No one will be the wiser.

00:21:06.890 --> 00:21:11.330
It'll really be a great experience and
it'll match the UI of your application.

00:21:12.140 --> 00:21:14.910
This is the extent of the remote
playback controls available to you.

00:21:15.070 --> 00:21:16.710
Again, use everything that makes sense.

00:21:17.020 --> 00:21:19.540
Not all accessories
may have all of these,

00:21:19.660 --> 00:21:23.050
but you'll receive all the events
that come from the specific

00:21:23.140 --> 00:21:25.500
remote controls of that accessory.

00:21:25.680 --> 00:21:31.230
So again,
don't worry about trying to predict

00:21:31.230 --> 00:21:32.540
where the user will be using it.

00:21:32.540 --> 00:21:32.540
Just support everything
that you can from the API.

00:21:32.740 --> 00:21:33.700
A little bit of summary.

00:21:33.790 --> 00:21:38.080
So I think the biggest thing to stress
is just make sure you're using standard

00:21:38.080 --> 00:21:40.110
audio and video controls in your apps.

00:21:40.370 --> 00:21:42.440
It really helps the user
have a consistent experience.

00:21:42.440 --> 00:21:45.600
It really makes sure that you don't
have to worry about going out to the

00:21:45.950 --> 00:21:48.870
multitasking UI and trying to fiddle
around and make sure everything

00:21:48.910 --> 00:21:50.430
works just the way you want.

00:21:50.570 --> 00:21:52.800
If you just use the standard
APIs that we provide,

00:21:52.860 --> 00:21:55.680
you'll get the standard
experience that we've designed.

00:21:56.220 --> 00:21:58.120
Make sure you don't
hide the route button.

00:21:58.260 --> 00:22:00.130
I think that's an important
one for convenience.

00:22:00.130 --> 00:22:03.950
Make sure you do allow AirPlay video
to make sure that your media assets

00:22:04.230 --> 00:22:06.940
are backwards compatible to iOS 4.3.

00:22:06.940 --> 00:22:09.710
And then the other two that
apply not just to AirPlay but

00:22:09.780 --> 00:22:13.280
to all the other accessories,
make sure you provide as much metadata

00:22:13.340 --> 00:22:17.120
as possible to the system and start
handling remote playback controls to

00:22:17.120 --> 00:22:20.780
make sure that the user doesn't have
to go back to the iOS device to figure

00:22:20.780 --> 00:22:24.220
out what's going on or how to get to
the next track or how to skip through

00:22:24.410 --> 00:22:26.200
the functionality that you're using.

00:22:26.320 --> 00:22:29.770
that you've really designed and
given a great experience for already.

00:22:32.530 --> 00:22:34.400
Let's move on to
accessories a little bit.

00:22:34.620 --> 00:22:36.270
This is the AirPlay technology badge.

00:22:36.560 --> 00:22:41.230
This is the icon that you and users
will see on packaging throughout

00:22:41.320 --> 00:22:44.940
the world now and this coming
holiday season to indicate that

00:22:45.030 --> 00:22:48.920
a device or an accessory is fully
compliant with the AirPlay standard.

00:22:49.180 --> 00:22:52.240
So it should be,
the idea is that you walk into a store,

00:22:52.240 --> 00:22:54.980
you see this icon,
you can pick it up and have

00:22:54.980 --> 00:22:59.210
confidence and know I take this
device home and I install it onto

00:22:59.280 --> 00:23:02.460
my network and I have the same
experience that I would have with an

00:23:02.460 --> 00:23:04.350
Apple product and of the same quality.

00:23:06.560 --> 00:23:08.190
So how do you get
started in this program?

00:23:08.430 --> 00:23:11.270
Well, just like most of our other
accessory technologies,

00:23:11.380 --> 00:23:13.320
this is the standard MFI program.

00:23:13.440 --> 00:23:18.030
You go to developer.apple.com/mfi and
you can get all the documentation,

00:23:18.160 --> 00:23:22.580
all the details of what you need to do to
become and create an AirPlay accessory.

00:23:22.630 --> 00:23:25.570
And it's a great place to go if
you're interested in accessories in

00:23:25.570 --> 00:23:29.120
general because you not only can get
all the information about AirPlay,

00:23:29.120 --> 00:23:31.710
you can also get the information
for all sorts of accessories

00:23:32.040 --> 00:23:33.170
and how to support them.

00:23:33.300 --> 00:23:35.150
So it's really a great place
to get started and a great

00:23:35.150 --> 00:23:36.460
source for information.

00:23:38.100 --> 00:23:39.000
best practices.

00:23:39.000 --> 00:23:42.590
Obviously, the full documentation is
available through the MFI program,

00:23:42.800 --> 00:23:45.350
but I think there's a few things you
should be thinking about if you're

00:23:45.350 --> 00:23:47.560
conceiving of an Airplay accessory.

00:23:47.720 --> 00:23:50.530
First,
make sure you take full advantage of

00:23:50.610 --> 00:23:51.940
the information you've registered for.

00:23:52.410 --> 00:23:53.700
What does that mean?

00:23:53.700 --> 00:23:58.510
Just as I told the iOS developers
that they should be taking advantage

00:23:58.630 --> 00:24:02.450
of the full metadata and full
controls that are available to them,

00:24:02.450 --> 00:24:05.870
if you have a product and you're
conceiving of a product either with

00:24:05.870 --> 00:24:08.740
the screen or with a remote control,
make sure you don't limit

00:24:08.810 --> 00:24:09.910
what they can do with it.

00:24:09.930 --> 00:24:11.130
Make sure it makes
sense for your product,

00:24:11.180 --> 00:24:11.560
of course.

00:24:11.660 --> 00:24:13.690
We're not telling you you should
or shouldn't put a screen on it,

00:24:13.700 --> 00:24:16.720
but if you put a screen on,
don't limit the user to just using

00:24:17.000 --> 00:24:18.900
album title or just seeing track title.

00:24:19.150 --> 00:24:22.670
Give them the opportunity to see all
the rich information that's provided.

00:24:22.700 --> 00:24:24.430
It's really a better experience.

00:24:24.430 --> 00:24:26.610
It really gives them a richer experience.

00:24:26.810 --> 00:24:28.210
There's no reason to restrict it.

00:24:28.330 --> 00:24:30.440
So we really encourage you
to take full advantage of the

00:24:30.440 --> 00:24:32.960
information that's available to you.

00:24:33.020 --> 00:24:37.480
Next up, make sure you're available to
the user whenever possible.

00:24:37.510 --> 00:24:40.210
The most frustrating experience is
when you really want to listen to

00:24:40.210 --> 00:24:44.030
something on your home theater and you're
looking at it in the palm of your hand,

00:24:44.030 --> 00:24:46.050
but you have to pause it,
you have to get up,

00:24:46.050 --> 00:24:47.920
you have to walk over,
you have to turn on the device,

00:24:47.950 --> 00:24:50.030
then you have to go
back to your iOS device,

00:24:50.030 --> 00:24:53.640
you have to select the AirPlay route,
and then start everything.

00:24:53.660 --> 00:24:55.790
It's really a better experience
if you can just select the

00:24:55.790 --> 00:24:59.340
AirPlay route as soon as it occurs
to you from the palm of your hand.

00:24:59.340 --> 00:25:02.280
We understand there's power concerns,
we understand there's sleep/wake issues,

00:25:02.280 --> 00:25:04.630
there's all sorts of
regulations surrounding this.

00:25:04.630 --> 00:25:07.990
We're not telling you to violate those,
but please keep this in mind and

00:25:08.010 --> 00:25:11.660
make sure that you're taking full
advantage of the power regulations

00:25:11.690 --> 00:25:14.820
that you have and make sure that
you're available as often as possible

00:25:14.870 --> 00:25:18.630
so that you can really have that kind
of continuous user experience where

00:25:18.630 --> 00:25:21.640
I'm listening to it on my iOS device,
I realize I want to

00:25:21.640 --> 00:25:23.520
listen to it on a bigger,
richer system,

00:25:23.590 --> 00:25:26.600
and I just press the button and go.

00:25:26.720 --> 00:25:28.720
Finally,
I want to encourage you all to think

00:25:28.720 --> 00:25:30.120
about how to get on the network.

00:25:30.420 --> 00:25:33.900
Getting on the network is key in
terms of a first experience with

00:25:34.040 --> 00:25:36.680
your particular AirPlay accessory.

00:25:36.750 --> 00:25:40.920
Obviously, standard Wi-Fi is not
particularly complicated,

00:25:41.050 --> 00:25:44.050
but especially if you don't have
a display and you need to start

00:25:44.050 --> 00:25:47.160
entering SSIDs and you need to
start entering security information,

00:25:47.220 --> 00:25:49.410
you want to give this some
serious thought to make sure

00:25:49.450 --> 00:25:51.700
the user doesn't come home,
is super excited about

00:25:51.720 --> 00:25:54.170
their AirPlay accessory,
and then all of a sudden has to go

00:25:54.180 --> 00:25:57.120
through this really complex process
to get it set up on their network.

00:25:57.250 --> 00:25:58.620
You don't want them to
start off frustrated.

00:25:58.660 --> 00:26:01.100
You don't want them to have
a negative opinion about your

00:26:01.100 --> 00:26:02.710
product before they even start.

00:26:02.850 --> 00:26:06.200
So really put some serious thought into
this and figure out how to do it right,

00:26:06.280 --> 00:26:08.760
how to give a great
experience to your users.

00:26:08.890 --> 00:26:10.880
Okay,
so that's pretty much it on AirPlay.

00:26:11.020 --> 00:26:12.630
I hope you guys are a
little more excited,

00:26:12.630 --> 00:26:13.880
a little more interested.

00:26:13.910 --> 00:26:16.990
Obviously,
we'll be available in the lab session

00:26:17.040 --> 00:26:19.480
to answer any questions you might have.

00:26:19.550 --> 00:26:22.070
And I hope you start using
AirPlay as a technology in both

00:26:22.090 --> 00:26:23.670
your apps and your accessories.

00:26:23.810 --> 00:26:27.520
And kind of now staying
on the wireless topic,

00:26:27.780 --> 00:26:30.550
I want to bring up Brian Tucker to
talk through Bluetooth and iOS

00:26:30.930 --> 00:26:33.520
so that you can understand how
to use that technology as well.

00:26:33.560 --> 00:26:35.070
Thank you.

00:26:42.080 --> 00:26:42.900
Good morning.

00:26:42.900 --> 00:26:45.220
My name is Brian Tucker and I'm the
Senior Software Engineering Manager for

00:26:45.340 --> 00:26:46.970
Bluetooth Technologies.

00:26:47.010 --> 00:26:51.190
Pretty much across our
entire iOS platform.

00:26:51.400 --> 00:29:10.400
[Transcript missing]

00:29:10.660 --> 00:29:14.210
So with hands-free up till now,
we've been limited to 8

00:29:14.330 --> 00:29:16.110
kilohertz 16-bit audio.

00:29:16.120 --> 00:29:18.870
And it works,
but it doesn't sound really great.

00:29:18.960 --> 00:29:22.690
So the standards body has
implemented an update to this

00:29:22.780 --> 00:29:24.920
to support wideband speech.

00:29:24.920 --> 00:29:27.820
So we're supporting this in iOS 5.

00:29:27.820 --> 00:29:31.840
We're using the standard
modified SBC codec for this.

00:29:31.840 --> 00:29:35.100
It's a 16-kilo audio sample,
but it does not increase

00:29:35.100 --> 00:29:36.690
bandwidth consumption.

00:29:36.880 --> 00:29:39.940
So we're still looking at
64k streams up and down.

00:29:39.960 --> 00:29:43.990
So the big win here, obviously,
is a lot better audio quality.

00:29:44.000 --> 00:29:49.200
And so the advantage that you're going
to see as a consumer and as a developer

00:29:49.200 --> 00:29:52.380
is much better processing capabilities.

00:29:52.380 --> 00:29:55.020
For example, voice recognition is going
to work a lot better.

00:29:55.020 --> 00:29:57.240
Voice recording is going
to sound a lot better.

00:29:57.240 --> 00:30:01.420
Products like FaceTime or a VoIP app
is going to sound a lot better.

00:30:01.420 --> 00:30:05.000
And ultimately the goal here
is to try to create a seamless

00:30:05.000 --> 00:30:08.780
connection or a transparent,
just as you would perceive if you're

00:30:08.880 --> 00:30:13.600
using the microphone on the phone or if
you're using the microphone on a headset.

00:30:16.790 --> 00:30:19.560
So with this,
we also give apps the ability to

00:30:19.560 --> 00:30:24.050
use audio from the headset and
to send audio to the headset.

00:30:24.150 --> 00:30:28.900
So the voice capabilities of WBS can
now apply to third-party apps.

00:30:28.900 --> 00:30:31.910
So you can be tunneling
your audio from a VoIP app,

00:30:31.910 --> 00:30:34.840
for example, through a hands-free device.

00:30:34.840 --> 00:30:41.070
So a user could theoretically
make a VoIP call mobily in a car.

00:30:41.950 --> 00:30:44.910
And then finally,
we're allowing now multiple

00:30:45.000 --> 00:30:48.120
MFI accessories to be connected
simultaneously via Bluetooth.

00:30:48.120 --> 00:30:51.440
With wired,
this wasn't nearly as much of an issue.

00:30:51.440 --> 00:30:54.190
But with Bluetooth,
you can have multiple accessories,

00:30:54.190 --> 00:30:57.240
and we're allowing that to
happen with Bluetooth products

00:30:57.240 --> 00:30:58.540
or with the Bluetooth transport.

00:30:58.540 --> 00:31:02.140
So state of iOS Bluetooth,
this is kind of your menu of

00:31:02.140 --> 00:31:04.660
features that are available to you.

00:31:04.800 --> 00:31:06.320
HFP 1.6 is new.

00:31:06.320 --> 00:31:07.680
We covered that.

00:31:07.750 --> 00:31:09.700
AVRCP 1.4 is new.

00:31:09.700 --> 00:31:11.680
All of the other things are available.

00:31:11.880 --> 00:31:14.660
So we're allowing that
to happen with Bluetooth.

00:31:14.660 --> 00:31:18.580
And then, of course, we still support the
iPod Accessory Protocol.

00:31:18.580 --> 00:31:19.100
Okay.

00:31:19.100 --> 00:31:20.070
Guidelines.

00:31:20.070 --> 00:31:23.290
So last year,
we didn't have this available yet.

00:31:23.290 --> 00:31:27.010
But now, this is available to you
from the iOS Dev Center.

00:31:27.010 --> 00:31:30.480
You'll see it right on the website,
plain as day.

00:31:30.480 --> 00:31:32.370
And this is a living document.

00:31:32.370 --> 00:31:37.140
So every time that we update our software
or we update Bluetooth on our platform,

00:31:37.140 --> 00:31:38.870
we update this document.

00:31:38.880 --> 00:31:41.580
And this talks about things
like what we support.

00:31:42.020 --> 00:31:47.680
What best practices we encourage you to
develop for in terms of audio codecs,

00:31:47.680 --> 00:31:55.360
compression ratios, stiff modes,
everything that you should run into as

00:31:55.360 --> 00:31:59.250
a Bluetooth accessory manufacturer or an
application developer you should need.

00:31:59.260 --> 00:32:04.000
And if you don't see it in there,
let us know, and we'll keep updating it.

00:32:04.740 --> 00:32:07.920
So speaking of best practices,
there are some key things that

00:32:07.920 --> 00:32:10.360
I think everybody should strive for.

00:32:10.520 --> 00:32:13.960
One of them is use the
latest Bluetooth standards.

00:32:14.070 --> 00:32:18.520
Bluetooth 2.1 plus EDR or
Bluetooth 3.0 which has EDR built in.

00:32:18.560 --> 00:32:21.040
Implement these in your products.

00:32:21.040 --> 00:32:24.100
Your users are going
to love you for this.

00:32:24.670 --> 00:32:27.940
Some key things off of that,
use device ID profile.

00:32:28.160 --> 00:32:33.000
In our products,
in every iOS platform that we develop,

00:32:33.110 --> 00:32:36.280
we provide information
in the device ID profile.

00:32:36.280 --> 00:32:38.580
So if you're an accessory
and you connect to iOS,

00:32:38.580 --> 00:32:40.780
you know exactly what
you've connected to.

00:32:40.780 --> 00:32:43.930
What hardware, what version of software,
etc.

00:32:43.940 --> 00:32:46.660
What version of controller,
all of that information is

00:32:46.740 --> 00:32:47.970
developed to you in device ID.

00:32:47.980 --> 00:32:51.420
And we like the same
information from your accessory,

00:32:51.420 --> 00:32:52.390
hopefully.

00:32:52.500 --> 00:34:29.500
[Transcript missing]

00:34:29.730 --> 00:34:31.810
Topology Management.

00:34:31.820 --> 00:34:35.560
So one of the big things we're
running into right now is coexistence.

00:34:35.560 --> 00:34:39.180
We have more and more accessories
trying to connect to iOS at one time,

00:34:39.180 --> 00:34:42.860
and we have to try to keep all
those devices working together.

00:34:42.860 --> 00:34:46.100
So we have to manage antenna time.

00:34:46.100 --> 00:34:50.240
And when we have Wi-Fi connected and we
have a keyboard connected and we have

00:34:50.240 --> 00:34:54.550
a headset connected and we're tethering
with somebody else's phone and my,

00:34:54.550 --> 00:34:57.530
you know, on and on and on,
and we try not to limit

00:34:57.530 --> 00:34:59.880
you from doing all this,
well,

00:34:59.930 --> 00:35:04.320
in order for us to get that to work,
we have to be the master.

00:35:04.320 --> 00:35:06.600
But unfortunately,
we're not always able to do that

00:35:06.650 --> 00:35:08.920
because accessories don't allow us.

00:35:08.970 --> 00:35:12.340
Some key points here,
the master always has to be controlling

00:35:12.340 --> 00:35:17.080
timing and the client always has
to adhere to the master's timing.

00:35:17.080 --> 00:35:18.860
So let's look at a typical use case.

00:35:18.860 --> 00:35:22.230
So let's say we have our iOS device
here and you have an accessory and the

00:35:22.230 --> 00:35:25.360
accessory connects to the iOS device.

00:35:25.360 --> 00:35:27.800
So in that case, the accessory is master.

00:35:27.800 --> 00:35:29.700
The iOS device is slave.

00:35:29.700 --> 00:35:31.250
So let's say we have another accessory.

00:35:31.330 --> 00:35:33.040
So the first accessory,
let's say it's a headset and

00:35:33.040 --> 00:35:35.140
you're streaming HTTP audio.

00:35:35.140 --> 00:35:37.740
And the second device is a
keyboard and it connects.

00:35:37.740 --> 00:35:40.280
Well, in that case, it's master as well.

00:35:40.280 --> 00:35:43.260
But let's say the accessory,
the first device doesn't

00:35:43.260 --> 00:35:45.260
allow for a topology switch.

00:35:45.260 --> 00:35:47.960
So if we include Wi-Fi in
this whole thing and we're

00:35:48.030 --> 00:35:51.180
connected to a base station,
the entire environment,

00:35:51.230 --> 00:35:54.480
the whole ecosystem is severely,
severely limited.

00:35:54.480 --> 00:35:54.920
So if we have a device that's
connected to a base station,

00:35:54.950 --> 00:35:55.980
the entire environment,
the entire ecosystem is severely

00:35:55.980 --> 00:35:59.050
limited because we can't control the
timing for Wi-Fi nor can we control

00:35:59.060 --> 00:36:01.220
the timing for the accessories.

00:36:01.240 --> 00:36:04.050
So the way that we fix this
is if we have this accessory,

00:36:04.080 --> 00:36:06.440
we bring the other
accessory into the picture,

00:36:06.440 --> 00:36:07.920
the first accessory can be master.

00:36:07.920 --> 00:36:11.160
We don't have a problem with
that if it's one device.

00:36:11.160 --> 00:36:13.140
But as soon as the second
accessory connects,

00:36:13.140 --> 00:36:16.160
the iOS device is going to
try to do a role switch.

00:36:16.160 --> 00:36:20.160
And the idea here is it wants
to stay master of the ecosystem.

00:36:20.390 --> 00:36:23.010
So that when Wi-Fi comes
along and it connects,

00:36:23.180 --> 00:36:25.420
the overall experience is much better.

00:36:25.420 --> 00:36:28.970
We can now allow for time for
Wi-Fi to have maximum bandwidth,

00:36:28.980 --> 00:36:31.890
and we can allow A2DP to get
all of its packets across,

00:36:31.890 --> 00:36:35.050
because we're controlling
those windows of time.

00:36:35.080 --> 00:36:39.540
Time spaces are, unfortunately,
we have not conquered physics yet,

00:36:39.620 --> 00:36:41.860
so we have to adhere to time space.

00:36:42.760 --> 00:36:48.000
So key things to look at here,
allow iOS to do topology role switching.

00:36:48.020 --> 00:36:50.620
This is being covered in the
Bluetooth standards body right now,

00:36:50.620 --> 00:36:52.080
and it's being heavily debated.

00:36:52.080 --> 00:36:55.440
But in cases where you have a
device such as an iOS device that

00:36:55.440 --> 00:36:59.420
has to manage multiple accessories,
allow for role switching.

00:36:59.420 --> 00:37:02.420
And then secondary,
which I know is somewhat

00:37:02.520 --> 00:37:06.760
contradictory to what I'm saying,
but allow the iOS device to

00:37:06.870 --> 00:37:09.180
politely refuse a role switch.

00:37:09.180 --> 00:37:12.600
Because if it's running a scenario where
it has multiple Bluetooth accessories,

00:37:12.760 --> 00:37:17.430
and Wi-Fi, it may say, "No, sorry,
I can't let you be master right now.

00:37:17.430 --> 00:37:20.190
I've got to deal with all
these products." Okay,

00:37:20.400 --> 00:37:23.400
and then one other issue.

00:37:24.340 --> 00:37:27.330
It's probably not surprising
to you that audio is really,

00:37:27.340 --> 00:37:28.900
really important for us.

00:37:28.950 --> 00:37:31.700
We want the best possible
experience for the consumer,

00:37:31.750 --> 00:37:34.960
whether they're on a phone call,
whether they're listening to music,

00:37:34.960 --> 00:37:36.640
whether they're watching a movie.

00:37:36.670 --> 00:37:39.060
We want it to sound really, really good.

00:37:39.220 --> 00:37:42.580
So there's some key things that we
think we can do to improve that.

00:37:42.660 --> 00:37:44.360
First, use wideband speech.

00:37:44.630 --> 00:37:48.010
We talked about that already,
but if you're going to be making

00:37:48.010 --> 00:37:52.270
accessories in the future and it
involves SCO audio or mono audio,

00:37:52.300 --> 00:37:53.990
use wideband speech.

00:37:54.200 --> 00:37:58.570
Secondly, with HTTP,
we realized that SBCs are a requirement

00:37:58.660 --> 00:38:00.440
when you're implementing an HTTP profile.

00:38:00.480 --> 00:38:06.310
So if you're going to do that,
use standards or use parameters that

00:38:06.630 --> 00:38:08.670
generate the best possible audio quality.

00:38:08.680 --> 00:38:12.020
And the key point here is the bit pool,
primarily.

00:38:12.020 --> 00:38:16.270
You should shoot for a 53-bit pool,
which is going to generate

00:38:16.300 --> 00:38:18.550
about a 370 kbps stream.

00:38:18.560 --> 00:38:21.820
And you should be able to manage
that in modern headset controllers.

00:38:22.800 --> 00:38:26.170
But beyond that, if you can, look at AAC.

00:38:26.180 --> 00:38:29.700
We implemented this last year,
and we're starting to see devices on

00:38:29.720 --> 00:38:31.780
the market that are using AAC today.

00:38:31.780 --> 00:38:33.300
But implement this.

00:38:33.300 --> 00:38:35.270
Big win for two reasons.

00:38:35.440 --> 00:38:38.420
One,
it uses about 40% of the data bandwidth

00:38:38.420 --> 00:38:41.050
that a high-quality SBC stream uses.

00:38:41.080 --> 00:38:46.890
So rather than 350 or 360 kbps streams,
you're looking at 128 kbps

00:38:46.900 --> 00:38:48.850
stream with an AAC stream.

00:38:48.860 --> 00:38:50.920
And then secondly, it just sounds better.

00:38:51.460 --> 00:38:55.400
I mean, both subjectively and
objectively measured,

00:38:55.400 --> 00:38:59.560
AAC truly sounds better than SBC.

00:39:01.450 --> 00:39:04.280
Okay, so in summary, two key points.

00:39:04.400 --> 00:39:06.300
Go to the design guidelines document.

00:39:06.540 --> 00:39:07.400
Look that up.

00:39:07.400 --> 00:39:08.820
You'll find an iOS dev center.

00:39:08.820 --> 00:39:13.160
Like I said, we keep this up to date as
much as we possibly can.

00:39:13.160 --> 00:39:14.380
Definitely review that.

00:39:14.490 --> 00:39:19.380
And then secondly, if you have questions,
you can ask our Dev Relations team,

00:39:19.510 --> 00:39:22.400
but you can also get involved with
us by joining our mailing list.

00:39:22.400 --> 00:39:24.400
And we all monitor this mailing list.

00:39:24.400 --> 00:39:28.300
So if you have a question or if you're
working on a particular implementation,

00:39:28.390 --> 00:39:32.170
send your question on that mail
list and we will respond to it,

00:39:32.170 --> 00:39:36.630
usually within a day or even immediately,
depending upon whether we're

00:39:36.630 --> 00:39:38.390
at our computer or not.

00:39:39.000 --> 00:39:40.670
So that's Bluetooth.

00:39:40.890 --> 00:39:44.420
So I'd like to bring Emily back
up to cover accessories

00:39:44.840 --> 00:39:47.280
and we'll go from there.

00:39:54.500 --> 00:39:59.740
Now I have some more general
accessory related updates for you.

00:40:00.240 --> 00:40:03.100
Some of you might not be
familiar with the term IAP.

00:40:03.100 --> 00:40:04.810
We use it every once in a while.

00:40:04.930 --> 00:40:10.740
IAP stands for iPod Accessory Protocol,
and it allows an accessory to

00:40:10.760 --> 00:40:16.330
communicate with and control iOS device,
an iOS device.

00:40:16.520 --> 00:40:22.050
And if you want any more information on
IAP or if you want access to the hundreds

00:40:22.070 --> 00:40:26.970
and hundreds of pages of specifications,
just get in touch with the MFI program.

00:40:28.800 --> 00:40:36.920
First, I would like to talk to you about
the External Accessory framework,

00:40:36.920 --> 00:40:36.920
which we sometimes call the EA framework.

00:40:37.080 --> 00:40:43.490
EA allows an app to connect to
a compatible accessory and then

00:40:43.630 --> 00:40:49.960
exchange arbitrary data with it over
a protocol of the developer's design.

00:40:50.010 --> 00:40:53.430
This has been exciting
for a lot of developers.

00:40:53.540 --> 00:40:58.630
They've had an opportunity to make
accessories in all different categories

00:40:58.630 --> 00:41:00.400
that really weren't available before.

00:41:00.400 --> 00:41:05.400
I'd like to give you some examples
of what we've seen come to market.

00:41:05.400 --> 00:41:09.000
This has been available
since version 3 of the OS.

00:41:09.080 --> 00:41:12.990
I'd like to give you a few examples
out of the hundreds and hundreds

00:41:13.000 --> 00:41:16.140
of accessories that are out there,
just to show you the breadth

00:41:16.250 --> 00:41:18.500
of opportunities that the
developers have found.

00:41:18.500 --> 00:41:24.290
Here's the iBike Dash cycling computer.

00:41:24.300 --> 00:41:30.350
And the iGrill grilling
and cooking thermometer.

00:41:30.600 --> 00:41:32.470
Very useful.

00:41:34.700 --> 00:41:38.120
We also have the iHealth
Blood Pressure Dock.

00:41:38.130 --> 00:41:42.420
So these devices exist in every
vertical from home health to

00:41:42.500 --> 00:41:47.680
automotive and have really made for
some wonderful user experiences.

00:41:47.680 --> 00:41:52.500
We're very excited about what's
out there already and about what's

00:41:52.500 --> 00:41:57.440
coming down the pike for our
developers and for our customers.

00:41:57.460 --> 00:42:01.310
Really a lot of great products
that drive a lot of excitement

00:42:01.310 --> 00:42:03.050
about the iOS platform.

00:42:03.130 --> 00:42:07.260
All the things that our users can do
with this one device that they bought.

00:42:07.440 --> 00:42:11.680
They can buy all of these other
accessories and really make

00:42:11.680 --> 00:42:14.120
it the center of their lives.

00:42:14.540 --> 00:42:17.160
So what's new for the EA framework?

00:42:17.160 --> 00:42:20.400
What have we added for iOS 5?

00:42:20.400 --> 00:42:24.620
Well, first,
we've added the ability for apps that

00:42:24.700 --> 00:42:30.630
can already multitask to continue
talking to their connected accessory

00:42:30.630 --> 00:42:33.720
while they're in the background.

00:42:37.410 --> 00:42:39.240
Yeah, long awaited.

00:42:39.270 --> 00:42:42.420
And this, I think,
is key for a number of use cases.

00:42:42.420 --> 00:42:47.500
So, for example, an audio app or someone
who is using core location,

00:42:47.500 --> 00:42:52.060
when they go into the background,
they can keep that EA session open

00:42:52.060 --> 00:42:54.570
and continue talking to their app.

00:42:54.630 --> 00:42:57.120
I mean, really for a lot of
navigation apps in particular,

00:42:57.120 --> 00:42:58.200
this is just critical.

00:42:58.200 --> 00:43:00.060
So, very excited about this.

00:43:00.660 --> 00:43:05.880
We've also added the capability
for an accessory to trigger a

00:43:06.000 --> 00:43:11.790
notification to the user that will
then allow the user to launch an app.

00:43:12.700 --> 00:46:47.600
[Transcript missing]

00:46:48.730 --> 00:46:54.040
So another update that I have for
you today concerns accessibility.

00:46:54.080 --> 00:46:57.200
Apple is dedicated to accessibility.

00:46:57.250 --> 00:47:01.810
On both Mac OS and iOS we have a
number of features that are aimed

00:47:02.390 --> 00:47:07.830
specifically at accessibility and
our support is really legendary.

00:47:07.830 --> 00:47:11.260
It's something that users rave about.

00:47:11.260 --> 00:47:18.140
Last year we talked about voiceover,
which gave users who can't see the screen

00:47:18.190 --> 00:47:26.290
the ability to remotely with an assistive
input accessory navigate the OS and

00:47:26.500 --> 00:47:30.580
listen to where they are on the device.

00:47:30.910 --> 00:47:37.890
Now we're adding a new feature
with iOS 5 called Assistive Touch.

00:47:38.040 --> 00:47:41.300
Assistive Touch allows someone who can
see the screen but might not be able

00:47:41.300 --> 00:47:45.080
to manipulate it with their hands,
manipulate it remotely.

00:47:45.080 --> 00:47:50.400
And so they'll use an accessibility
input accessory to navigate around the

00:47:50.490 --> 00:47:55.870
screen and they'll get a cursor like the
one you see circled here on the left.

00:47:56.570 --> 00:48:02.980
They also have access using other
special features to multi-touch inputs.

00:48:03.040 --> 00:48:09.590
So they really get to do just about
anything that I can do on this device,

00:48:09.600 --> 00:48:12.780
they can do as well,
which is really liberating and I think

00:48:13.180 --> 00:48:15.900
quite a wonderful feature for iOS 5.

00:48:15.900 --> 00:48:19.950
There's going to be a session
on accessibility and they will

00:48:19.960 --> 00:48:22.070
show a demo in that session.

00:48:22.080 --> 00:48:25.800
And so that's something
that is accessory related.

00:48:25.800 --> 00:48:29.060
And that we hope accessory
manufacturers will take advantage of,

00:48:29.150 --> 00:48:32.580
much like they have voiceover with iOS 5.

00:48:34.700 --> 00:51:07.100
[Transcript missing]