WEBVTT

00:00:11.340 --> 00:00:15.860
I better watch what I say because
this is going to be caught on video,

00:00:15.860 --> 00:00:21.280
so none of my normal acerbic
wit will be used today.

00:00:22.840 --> 00:00:25.960
“Alright, don't get me upset.

00:00:25.990 --> 00:00:27.860
You know what happens.

00:00:27.900 --> 00:00:30.530
If you can make me stop this car now”

00:00:32.660 --> 00:00:37.610
Welcome, welcome to the one of
the last sessions today.

00:00:42.940 --> 00:00:53.920
“It’s about a continuing story
and a saga of one of Apple’s best

00:00:53.920 --> 00:01:01.390
and longest-living technologies,
the world of automation.

00:01:01.390 --> 00:01:01.390
And so today,
we're going to get an overview of

00:01:01.390 --> 00:01:01.390
what's new and improved in Lion.\ \

00:01:01.500 --> 00:01:03.970
begin here,
and we're going to talk about what's

00:01:04.030 --> 00:01:07.940
new and improved because we only have
a short period of time so I can't

00:01:08.020 --> 00:01:12.460
get in depth on all three of the
different automation technologies

00:01:12.460 --> 00:01:14.200
that we're going to be talking about.

00:01:14.200 --> 00:01:17.090
So this is pretty much an overview,
but I'm going to give you plenty of

00:01:17.090 --> 00:01:21.190
resources that you can go to to find
out more in-depth stuff if there's

00:01:21.200 --> 00:01:23.440
something in particular you want to know.

00:01:23.440 --> 00:01:27.400
So the technologies we're going to
talk about today are AppleScript,

00:01:27.410 --> 00:01:30.570
of course,
the English-like language that people

00:01:30.710 --> 00:01:35.640
love to use to automate processes
at companies and at individuals

00:01:35.640 --> 00:01:38.600
and even in finance departments.

00:01:38.600 --> 00:01:41.070
And we're going to be looking
at automator and services

00:01:41.070 --> 00:01:45.280
architecture and what's new and
improved in Lion for that as well.

00:01:45.420 --> 00:01:50.320
And for the first time ever,
we're going to include something new

00:01:50.320 --> 00:01:52.910
to our team in the world of automation.

00:01:52.910 --> 00:01:55.810
We're going to actually
look at the terminal.

00:01:55.820 --> 00:01:55.990
all.

00:01:59.920 --> 00:02:01.280
Applause for the new guy.

00:02:01.290 --> 00:02:01.970
Yeah, yeah.

00:02:01.970 --> 00:02:03.080
Make him feel the love.

00:02:03.160 --> 00:02:03.970
Make him feel the love.

00:02:04.040 --> 00:02:06.800
So normally,
we don't include Terminal in the Unix

00:02:06.800 --> 00:02:09.820
command line in the world of automation,
but you know,

00:02:09.820 --> 00:02:12.170
it's become part of our team,
and we welcome it,

00:02:12.240 --> 00:02:16.390
and we've done a lot of work
on it over this last cycle.

00:02:16.410 --> 00:02:20.620
And Chris Page, the engineer that's
done most of that work,

00:02:20.620 --> 00:02:23.920
is going to be demoing some of the
new really cool things about it.

00:02:24.000 --> 00:02:26.940
So now,
the Terminal is really an exciting thing.

00:02:26.940 --> 00:02:28.840
There's about 35 changes.

00:02:28.840 --> 00:02:32.750
You're going to love all of them,
including some really wacky stuff

00:02:32.750 --> 00:02:34.580
that we put in just for you.

00:02:34.720 --> 00:02:38.870
But for those that are new to automation
and need some information and background

00:02:38.870 --> 00:02:41.890
about any of these technologies,
I want you to go to

00:02:41.990 --> 00:02:44.890
macos10automation.com.

00:02:44.890 --> 00:02:48.000
That's macosxautomation.com.

00:02:48.000 --> 00:02:50.390
It's a great source for information.

00:02:50.450 --> 00:02:53.670
It contains three sub-sites,
one on AppleScript,

00:02:53.670 --> 00:02:58.220
one on service services,
and one on Automator as well.

00:02:58.220 --> 00:03:01.790
There's lots of tutorials, videos,
and information and

00:03:01.790 --> 00:03:03.540
downloads that you can use.

00:03:03.540 --> 00:03:06.660
So if you need to catch up
on the world of automation,

00:03:06.660 --> 00:03:09.550
this is a great website to go to.

00:03:09.710 --> 00:03:12.620
And if you click the little
orange button on the main page,

00:03:12.620 --> 00:03:15.240
it will take you to the training site.

00:03:15.240 --> 00:03:18.670
There's a special site dedicated
to each one of the technologies,

00:03:18.740 --> 00:03:21.920
and there's about hundreds
of videos on there.

00:03:21.920 --> 00:03:24.150
So if you want to get up
to speed on automation,

00:03:24.150 --> 00:03:24.960
start there.

00:03:24.960 --> 00:03:27.140
Subtitles by the Amara.org
community For this material

00:03:27.140 --> 00:03:35.940
that you're seeing today,
you can go to macos10automation.com/lion.

00:03:35.960 --> 00:03:38.760
And all the stuff I'm talking
about today is up there,

00:03:38.920 --> 00:03:43.020
and all the examples I'm going to
be showing you are downloadable.

00:03:43.020 --> 00:03:45.670
You can use them and try them out today.

00:03:45.670 --> 00:03:47.450
Yay!

00:03:50.200 --> 00:03:53.040
You know me,
and there's three sites up there.

00:03:53.040 --> 00:03:58.860
There's one on AppleScript and Lion,
one on Automator and Services,

00:03:58.860 --> 00:04:02.520
and one on some of the new
features in the terminal as well.

00:04:02.540 --> 00:04:04.790
So that's our reference material.

00:04:04.790 --> 00:04:08.200
I wanted to get it out up front,
and now let's begin.

00:04:08.200 --> 00:04:12.040
Let's take a look at what's been
happening in the world of automation.

00:04:12.040 --> 00:04:16.150
We'll start with Automator and Services,
and we'll take a look at

00:04:16.220 --> 00:04:21.420
some of the amazing things
that we shoved into the OS.

00:04:23.540 --> 00:04:24.470
Did I say shoved?

00:04:25.620 --> 00:04:27.260
Okay.

00:04:27.260 --> 00:04:29.100
We, you know,
thought about it very clearly,

00:04:29.100 --> 00:04:35.270
made decisions and followed
procedures and processes always.

00:04:35.270 --> 00:04:35.270
Always got management approval.

00:04:36.220 --> 00:04:37.320
So let's begin.

00:04:37.440 --> 00:04:40.520
We're going to take a look
at some of the new features.

00:04:40.520 --> 00:04:43.690
First of all,
we made sure that you had the

00:04:43.690 --> 00:04:48.470
ability to convert from one
type of workflow into another.

00:04:48.950 --> 00:04:53.240
For example, say you had made yourself a
little automator applet that

00:04:53.240 --> 00:04:56.910
responded to having things dragged
on top of and it would change an

00:04:56.910 --> 00:04:58.700
image or do something like that.

00:04:58.700 --> 00:05:04.050
But you wanted to change that to a
service that was triggered contextually

00:05:04.050 --> 00:05:07.560
by right clicking on an image.

00:05:07.560 --> 00:05:10.180
Prior to Lion,
you had to actually open up a new

00:05:10.180 --> 00:05:14.430
workflow file as a service and then
drag the actions one by one over

00:05:14.490 --> 00:05:19.500
to the new workflow and hope that
everything went across and then re-save.

00:05:19.640 --> 00:05:24.980
Now, we have a new menu under the
file menu called duplicate to.

00:05:24.980 --> 00:05:29.030
When you select that menu,
it will make a duplicate of

00:05:29.030 --> 00:05:33.860
your current workflow and
bring down the template sheet.

00:05:33.860 --> 00:05:37.030
So you can then choose what kind
of workflow you want to use.

00:05:37.030 --> 00:05:40.280
In this case,
I'd like to convert it to a service.

00:05:40.280 --> 00:05:44.630
So I would select service,
click okay and then the existing

00:05:44.630 --> 00:05:51.040
workflow is now converted and duplicated
to a same workflow but as a service,

00:05:51.040 --> 00:05:55.080
now taking its input
from files in the finder.

00:05:55.080 --> 00:06:00.990
So easy to convert between one type
of automator workflow into another.

00:06:01.810 --> 00:06:04.790
Next,
a lot of people were having problems

00:06:04.790 --> 00:06:07.160
dealing with installing actions.

00:06:07.160 --> 00:06:10.130
You had to write an installer.

00:06:10.130 --> 00:06:14.880
You had to know where to put the
action file in the core library,

00:06:14.920 --> 00:06:18.280
system library, user library/automator.

00:06:18.280 --> 00:06:20.980
We made it really easy experience.

00:06:20.980 --> 00:06:25.080
Just like a dashboard widget
or a Safari extension,

00:06:25.080 --> 00:06:29.820
if you double-click it in the finder,
you'll get this dialogue

00:06:30.320 --> 00:06:31.960
asking if you want to install.

00:06:31.960 --> 00:06:35.520
Once you choose that,
it moves the action into where it's

00:06:35.520 --> 00:06:37.470
supposed to go for you automatically.

00:06:37.470 --> 00:06:39.640
You don't have to deal with it.

00:06:39.720 --> 00:06:41.900
The same is true for services.

00:06:41.900 --> 00:06:45.470
If you double-click a
service file on the desktop,

00:06:45.470 --> 00:06:50.530
it too will present a permissions
dialogue for you to choose to install

00:06:50.530 --> 00:06:55.020
or open up the service in Automator
so you could review it before

00:06:55.020 --> 00:06:57.520
you choose to install it as well.

00:06:57.520 --> 00:06:58.240
Click install.

00:06:58.420 --> 00:07:04.800
The service file is automatically placed
in your user library/services folder.

00:07:05.640 --> 00:07:08.940
Next, we added,
along with a lot of people in the OS,

00:07:08.940 --> 00:07:09.890
version support.

00:07:09.900 --> 00:07:14.660
If you've been working on a particular
workflow idea and you've tried

00:07:14.750 --> 00:07:18.610
different techniques with it and you
wanted to go back and see an earlier

00:07:18.610 --> 00:07:22.660
technique or take something out of it,
then you can just go to the

00:07:22.660 --> 00:07:27.710
application menu that's now triggered
from the title and choose explore

00:07:27.710 --> 00:07:32.880
versions and you get the famous
time machine go back in time window.

00:07:33.480 --> 00:07:36.630
And you can open up existing versions,
previous versions,

00:07:36.630 --> 00:07:38.680
or drag things between them as well.

00:07:41.160 --> 00:07:43.110
Next.

00:07:43.110 --> 00:07:50.500
So that was some pretty much
housekeeping kind of things.

00:07:50.500 --> 00:07:50.500
Useful, but housekeeping.

00:07:50.500 --> 00:07:50.500
This is exciting.

00:07:50.500 --> 00:07:50.500
So,

00:07:51.460 --> 00:07:54.590
A lot of people, a lot of our customers
have been requesting,

00:07:54.590 --> 00:07:55.340
"We got it?

00:07:55.340 --> 00:07:56.080
It's working?

00:07:56.080 --> 00:07:59.160
Okay." Those guys were
trying to fix my car.

00:08:00.600 --> 00:08:04.730
“This crowd,
there's some crazy kids over here.

00:08:04.740 --> 00:08:07.530
So this is something
that has been around,

00:08:07.720 --> 00:08:09.780
it's been a problem for years.

00:08:09.860 --> 00:08:12.620
How do you encode audio
files on Mac OS X?

00:08:12.620 --> 00:08:16.520
Well, everybody's got their
own little set of tricks.

00:08:16.520 --> 00:08:19.420
Well, you open up the QuickTime player.

00:08:19.420 --> 00:08:23.670
No, you take it to iTunes,
then you change the compressors.

00:08:23.730 --> 00:08:27.070
No, you take it over to iMovie,
then you do this.

00:08:27.160 --> 00:08:28.690
You stand on one leg
and hop like a chicken.

00:08:28.890 --> 00:08:31.400
“It’s a nightmare.

00:08:31.660 --> 00:08:34.030
So now that’s all gone.

00:08:34.030 --> 00:08:37.870
In Lion, you simply select the
audio file you want,

00:08:37.870 --> 00:08:44.000
you bring up the finder contextual menu,
you choose encode selected audio files,

00:08:44.070 --> 00:08:47.590
and a dialog from an
Automator action comes up.

00:08:47.590 --> 00:08:51.220
You can pick which type
of audio setting you want,

00:08:51.310 --> 00:08:55.610
and it will automatically create
a compressed MPEG version for

00:08:55.610 --> 00:08:55.610
you right on the desktop.\ \

00:08:58.350 --> 00:09:01.680
“You like the glamour stuff.

00:09:01.720 --> 00:09:06.810
Oh, I got it.” And this
also applies for video.

00:09:06.810 --> 00:09:07.510
So,

00:09:10.410 --> 00:09:13.370
You're tired of trying to figure
out how to compress video files.

00:09:13.410 --> 00:09:14.880
Are these the right settings?

00:09:14.920 --> 00:09:16.040
Are they not the right settings?

00:09:16.080 --> 00:09:16.610
Forget it.

00:09:16.920 --> 00:09:18.760
Select the video file in the desktop.

00:09:18.760 --> 00:09:23.780
Choose encode selected video
files from the contextual menu.

00:09:23.780 --> 00:09:26.250
You'll get this new window coming up.

00:09:26.540 --> 00:09:29.230
You can pick the type of
setting that you want,

00:09:29.400 --> 00:09:32.860
like 487, 20, 1080 audio only,
Apple ProRes.

00:09:33.860 --> 00:09:38.400
And then once you make a decision,
you'll notice that the information

00:09:38.400 --> 00:09:43.590
about that particular setting,
its compatibility with Apple devices,

00:09:43.690 --> 00:09:47.030
its frame rate, its size,
all of that information is

00:09:47.140 --> 00:09:50.280
presented in that window for you,
and we've made it easy to

00:09:50.280 --> 00:09:53.950
choose which range of things
you want to be applicable with.

00:09:54.040 --> 00:09:57.650
Once you've done that,
you click the continue button,

00:09:57.660 --> 00:10:01.490
and it will encode your video
and make a nice MPEG copy

00:10:01.490 --> 00:10:03.660
for you right on the desktop.

00:10:03.680 --> 00:10:04.900
Yay!

00:10:09.070 --> 00:10:12.420
“The settings that are
used are really good.

00:10:12.770 --> 00:10:15.070
These are very, very good settings.

00:10:15.070 --> 00:10:20.140
If you've had some problems encoding out
of Keynote or one of the other apps that

00:10:20.140 --> 00:10:24.740
uses kind of a different set of settings,
these are really good because

00:10:24.740 --> 00:10:28.640
we lock the QuickTime engineers
in a room for 10 hours.

00:10:28.640 --> 00:10:32.470
We would not feed them, let them out,
until they gave us the

00:10:32.470 --> 00:10:34.170
appropriate settings.

00:10:34.170 --> 00:10:37.920
It took a lot of shock therapy,
but those are the right settings.\ \

00:10:38.820 --> 00:10:42.010
Next, this is an interesting one.

00:10:42.060 --> 00:10:48.570
So a lot of the focus of Automator
actions for Lion were about assisting you

00:10:48.570 --> 00:10:51.300
to develop content for mobile devices.

00:10:51.510 --> 00:10:54.260
Specifically the last two
actions I just showed you,

00:10:54.260 --> 00:10:57.140
the encoding actions,
were really designed to make it easy

00:10:57.140 --> 00:11:00.380
for you to prepare your content,
to move it to an iPad or an iPhone

00:11:00.520 --> 00:11:02.710
or anything else that you want to.

00:11:02.710 --> 00:11:07.010
This one is a variation on that
and it's quite interesting.

00:11:07.060 --> 00:11:10.400
It's called a website pop-up action.

00:11:10.630 --> 00:11:12.680
As input it takes a URL.

00:11:12.680 --> 00:11:19.660
Whether you generate the URL on the fly
or you get the URL from an existing view.

00:11:19.660 --> 00:11:22.710
In this particular case,
I have the word flounder

00:11:22.780 --> 00:11:25.350
selected in an email reply.

00:11:25.450 --> 00:11:31.410
I want to look up in Wikipedia the
word flounder and I want to present the

00:11:31.410 --> 00:11:34.780
content without having to use a browser.

00:11:34.950 --> 00:11:38.150
When I do this,
I get a contextual lookup because

00:11:38.150 --> 00:11:41.460
I've created a service called
lookup in Wikipedia that generates

00:11:41.520 --> 00:11:46.790
the Wikipedia URL lookup with
the word flounder and instantly a

00:11:46.800 --> 00:11:53.580
floating HUD will appear displaying
the contents of that web page.

00:11:53.580 --> 00:11:59.500
Thank you.

00:11:59.500 --> 00:11:59.500
Ooh, I love that.

00:12:00.450 --> 00:12:03.340
Now, you'll notice this little
floating HUD is interesting,

00:12:03.380 --> 00:12:03.920
isn't it?

00:12:04.090 --> 00:12:06.750
Well, it can have a different user agent.

00:12:06.760 --> 00:12:12.180
It can be an iPhone user agent,
you can choose to be an iPad user agent,

00:12:12.180 --> 00:12:15.850
or you can choose to use
Safari as the user agent.

00:12:15.860 --> 00:12:21.720
So if you want to trigger the viewing
of a mobile website like this one is,

00:12:21.720 --> 00:12:24.250
you just choose the
user agent of an iPhone,

00:12:24.390 --> 00:12:27.990
send it to the website,
the website sees an iPhone talking to it,

00:12:27.990 --> 00:12:30.150
and will supply the appropriate data.

00:12:30.400 --> 00:12:33.860
In addition,
you can also change the display

00:12:33.860 --> 00:12:36.540
so that it will automatically
display as an iPhone,

00:12:36.540 --> 00:12:40.590
like it is here, or as an iPad,
or as a custom size that

00:12:40.590 --> 00:12:42.580
you indicate yourself.

00:12:42.650 --> 00:12:49.280
And you can also have the palette
appear center screen or at the cursor.

00:12:49.280 --> 00:12:52.600
So literally right next
to where the user clicks,

00:12:52.600 --> 00:12:56.270
the pad can appear with just
the information that they need.

00:12:56.400 --> 00:13:00.340
The result, okay.

00:13:00.340 --> 00:13:04.140
The result of this action
is either the input URL that

00:13:04.270 --> 00:13:08.140
you originally passed to it,
or the current URL that the

00:13:08.140 --> 00:13:12.070
user has clicked through,
or the content that they

00:13:12.170 --> 00:13:14.880
have selected on the screen.

00:13:14.900 --> 00:13:19.930
So in this particular case,
I have it set for give me the content,

00:13:19.940 --> 00:13:21.860
the text selection that they have.

00:13:21.920 --> 00:13:24.580
So in this case,
the user would scan this,

00:13:24.580 --> 00:13:28.080
find the bit of information that
they want to know about the flounder,

00:13:28.080 --> 00:13:31.620
and then just click the OK button,
and instantly that data

00:13:31.620 --> 00:13:35.300
is replaced into this,
and the palette fades away.

00:13:35.300 --> 00:13:39.400
So we're really interested in how
our customers are going to use this

00:13:39.400 --> 00:13:45.110
website pop-up as a way to deliver the
content of the internet right where

00:13:45.110 --> 00:13:48.160
they need it at the point of need.

00:13:48.380 --> 00:13:52.590
Next, this is a big one.

00:13:54.400 --> 00:13:56.160
The world's turning to digital books.

00:13:56.160 --> 00:13:58.400
Everything is about digital books.

00:13:58.400 --> 00:14:00.290
Classrooms are digital books.

00:14:00.810 --> 00:14:04.680
Well, how you generate the
content for a digital book.

00:14:04.800 --> 00:14:09.280
Are there times when you're not
interested in creating a work of art,

00:14:09.280 --> 00:14:13.140
you just merely want to take
some technical documents and

00:14:13.140 --> 00:14:15.670
make them viewable on an iPad?

00:14:15.700 --> 00:14:22.050
Or perhaps you want something that's a
step up from that with media like a movie

00:14:22.050 --> 00:14:28.650
or audio or images and you want that to
appear nicely and formatted on your iPad.

00:14:28.650 --> 00:14:31.230
How do you create a digital book?

00:14:31.380 --> 00:14:34.980
Well,
now with the new digital book builder,

00:14:35.080 --> 00:14:38.620
EPUB Action,
you can create a digital book

00:14:38.620 --> 00:14:43.610
from text selected in a document
or from files on the desktop.

00:14:43.850 --> 00:14:48.080
And in addition,
it will support the inclusion of audio,

00:14:48.120 --> 00:14:52.100
video, and images.

00:14:52.100 --> 00:14:55.740
And one more thing,
if you pass this action in an RTF file,

00:14:55.740 --> 00:14:59.290
it will honor the formatting
of that for your book.

00:14:59.290 --> 00:15:04.570
So if you have a nicely formatted
RTF file and you pass it to this action,

00:15:04.720 --> 00:15:06.750
your book will look like that.

00:15:06.870 --> 00:15:08.070
Here's how it works.

00:15:08.070 --> 00:15:11.940
In this case,
I'm selecting four chapters for

00:15:11.960 --> 00:15:17.870
a book and then I run the action
and it brings up this window.

00:15:18.110 --> 00:15:21.620
On the left-hand side is the
information about the file,

00:15:21.620 --> 00:15:23.290
its name, the author.

00:15:23.350 --> 00:15:28.350
On the right-hand side is the media
that I'm adding to the publication,

00:15:28.350 --> 00:15:31.780
cover image,
where do I want the data placed in

00:15:31.850 --> 00:15:37.540
the chapters and do I want it to
automatically scale images for me.

00:15:38.030 --> 00:15:40.840
I'll fill in the information
and then I'll click add,

00:15:40.840 --> 00:15:45.180
select the media that I want
to add to my publication.

00:15:45.300 --> 00:15:47.270
Click continue.

00:15:47.480 --> 00:15:53.870
And then an ePub file is generated
for me automatically where I want to.

00:15:53.960 --> 00:15:59.240
You take that ePub file,
transfer it by email or any way that

00:15:59.240 --> 00:16:05.980
you want over to your iPad and you have
a gorgeous digital book with no fuss,

00:16:05.980 --> 00:16:07.170
no muss.

00:16:12.060 --> 00:16:16.140
“I have a very powerful,
instant digital book anywhere in the OS.

00:16:16.140 --> 00:16:20.590
Let's take a look at
how that's done.” “Ha!

00:16:20.700 --> 00:16:27.430
Here we go.” “So,
I have my text files for

00:16:27.430 --> 00:16:30.570
Alice in Wonderland here.

00:16:30.830 --> 00:16:35.100
I have some nice images
that I want to include.

00:16:35.100 --> 00:16:35.100
I have some audio files
that are from Lubervox.

00:16:43.830 --> 00:16:49.090
So these are narrations, open domain,
public use narrations

00:16:49.090 --> 00:16:53.030
of Alice in Wonderland,
and I even have a movie that

00:16:53.030 --> 00:16:55.700
I want to include as well.

00:16:57.140 --> 00:16:59.580
All this is going to go
into my EPUB document.

00:16:59.710 --> 00:17:01.840
I select my documents here.

00:17:02.010 --> 00:17:06.010
I choose Create EPUB Book with
Selected Files.

00:17:06.010 --> 00:17:10.980
Over here, I give it a title,
Alice in Wonderland.

00:17:10.980 --> 00:17:10.980
And

00:17:15.120 --> 00:17:22.770
“The author is not Apple”,
Lewis Carroll “and I'll save it as

00:17:23.860 --> 00:17:27.320
desktop, I'm going to have a cover image.

00:17:27.570 --> 00:17:30.900
Here I want to use Alice and
the Queen of Hearts.

00:17:30.900 --> 00:17:32.940
It's my cover image.

00:17:32.940 --> 00:17:36.140
I want to place, by default,
one piece of media at the

00:17:36.470 --> 00:17:38.320
beginning of each chapter.

00:17:38.320 --> 00:17:42.750
So the first thing I'm going to
add is the first chapter's media,

00:17:42.760 --> 00:17:44.740
which is going to be the movie.

00:17:44.740 --> 00:17:48.280
Then I'm going to add the
three audio files next.

00:17:48.350 --> 00:17:51.700
I want those at the beginning
of each one of those chapters.

00:17:51.900 --> 00:17:54.920
And then finally,
I'm going to add all of the other

00:17:54.980 --> 00:17:58.420
images to use as illustrations
that will be automatically placed

00:17:58.420 --> 00:17:59.730
at the end of the book for me.

00:17:59.730 --> 00:18:01.340
Click continue.

00:18:03.500 --> 00:18:27.500
[Transcript missing]

00:18:29.570 --> 00:18:36.530
So,
for some reason the cover image didn't

00:18:36.530 --> 00:18:36.530
come over on this particular one,
but I'll

00:18:37.300 --> 00:18:46.600
[Transcript missing]

00:18:47.530 --> 00:19:00.290
“I am going to go to Chapter 1 of
Alice's Adventures in Wonderland.

00:19:00.290 --> 00:19:00.290
This is a LibriVox recording.

00:19:00.290 --> 00:19:00.290
All LibriVox recordings
are in the public domain”.

00:19:02.720 --> 00:19:10.370
So this book was generated on the
desktop using the EPUB Automator action.

00:19:19.690 --> 00:19:22.820
So that's a quick overview of
some of the things in Automator.

00:19:22.900 --> 00:19:25.900
I'm going pretty fast on this
because I want you to have plenty

00:19:26.020 --> 00:19:27.800
of time with Chris Page at the end.

00:19:29.760 --> 00:19:31.850
to be wowed with terminal.

00:19:31.950 --> 00:19:33.570
Let's go to the next step.

00:19:33.630 --> 00:19:35.750
So that's automating services.

00:19:35.930 --> 00:19:40.460
Focus on delivering and making
content for mobile devices,

00:19:40.460 --> 00:19:44.690
innovative website pop-up,
encoding actions,

00:19:44.690 --> 00:19:48.450
and as well digital book creation tools.

00:19:48.840 --> 00:19:53.640
Next we're going to look at AppleScript,
one of the oldest technologies in the OS,

00:19:53.640 --> 00:19:58.210
but one of the most friendly and one
of the most widely used and popular.

00:19:58.210 --> 00:20:01.610
And what could we possibly
do to AppleScript to make

00:20:01.610 --> 00:20:03.520
it interesting for Lion?

00:20:03.660 --> 00:20:07.680
Well, the first thing we did is we took
something that is becoming more popular.

00:20:07.680 --> 00:20:10.120
We updated the voice technology support.

00:20:10.120 --> 00:20:14.680
So now you not only have commands for
having the computer say something,

00:20:14.750 --> 00:20:18.800
but you can also use any of the
new 35 international voices,

00:20:18.800 --> 00:20:21.350
high quality,
and we added commands for being

00:20:21.350 --> 00:20:25.140
able to control the speaking rate,
the modulation, that kind of thing,

00:20:25.140 --> 00:20:25.260
to be able to control the voice.

00:20:25.260 --> 00:20:25.260
So that's the first step.

00:20:25.260 --> 00:20:25.260
The second step is to make sure
that you're able to use the

00:20:25.260 --> 00:20:25.260
voice technology to make your
content more interesting for Lion.

00:20:25.260 --> 00:20:25.260
And the next step is to make
sure that you're able to use the

00:20:25.260 --> 00:20:25.260
voice technology to make your
content more interesting for Lion.

00:20:25.260 --> 00:20:25.450
And the next step is to make sure
that you're able to use the voice be

00:20:25.450 --> 00:20:28.610
able to control inflection in sound.

00:20:28.610 --> 00:20:34.310
We also enhanced the ability to have
that audio transferred to a file.

00:20:34.480 --> 00:20:37.980
And we included in the OS by
default an action called

00:20:37.980 --> 00:20:39.980
add to iTunes' spoken track.

00:20:39.980 --> 00:20:43.050
Whether you are in mail,
whether you are on Safari,

00:20:43.370 --> 00:20:46.690
whatever application you are in,
select the text,

00:20:46.690 --> 00:20:52.210
run the service and it will automatically
convert that text to spoken audio

00:20:52.210 --> 00:20:56.980
and place it in your iTunes ready
to be updated to your portable device.

00:20:57.050 --> 00:20:59.790
And finally, this one is good.

00:20:59.790 --> 00:21:04.710
We added support for the
ability to do phrase matching.

00:21:04.790 --> 00:21:12.050
So your script can now ask you a
question and based upon your response act

00:21:12.380 --> 00:21:15.780
accordingly using a listen for command.

00:21:15.970 --> 00:21:19.430
In this particular case,
the listen for command is

00:21:19.740 --> 00:21:21.220
passed a string of words.

00:21:21.260 --> 00:21:27.190
So, you can see that the script is now
matching the words that you want to use.

00:21:27.190 --> 00:21:28.220
So, you can

00:21:35.370 --> 00:21:37.730
“I have a question for you.

00:21:37.800 --> 00:21:42.370
You have a script that carries
on pretty detailed conversations.

00:21:42.370 --> 00:21:47.650
So I have one that goes,
“Play some music.” Which artist?

00:21:47.650 --> 00:21:48.850
Frank Sinatra.

00:21:48.850 --> 00:21:51.080
His early years or later years?

00:21:51.100 --> 00:21:54.540
I kind of like the Capitol recordings,
you know?

00:21:54.540 --> 00:21:57.690
“Birth of the Blues.” Let's do that one.

00:21:57.690 --> 00:21:57.690
All right, sure Sal,
but you've already heard

00:21:57.690 --> 00:21:57.690
that one 4,000 times.

00:21:57.690 --> 00:21:57.690
“I

00:21:58.300 --> 00:23:54.100
[Transcript missing]

00:23:54.450 --> 00:23:56.080
But there are two that we provide.

00:23:56.080 --> 00:23:59.070
One is if you get a
request for a conversation,

00:23:59.440 --> 00:24:00.140
what to do.

00:24:00.140 --> 00:24:04.300
And the other is how to keep
that conversation going.

00:24:04.400 --> 00:24:08.220
So you can imagine it
gets quite interesting.

00:24:08.410 --> 00:24:10.180
And the last one is a mail rule.

00:24:10.180 --> 00:24:14.750
How do you write a mail rule script
that responds when a certain conditions

00:24:14.790 --> 00:24:16.790
are met in the incoming message?

00:24:17.080 --> 00:24:18.750
This shows you how that's done.

00:24:19.050 --> 00:24:20.670
And this is quite useful.

00:24:20.670 --> 00:24:23.300
Nice new series of templates ready to go.

00:24:23.710 --> 00:24:25.560
But there's one more.

00:24:25.720 --> 00:24:29.350
And it is the one that is
the hottest thing going.

00:24:29.370 --> 00:24:33.570
It is new
AppleScript Objective-C Cocoa AppleScript

00:24:33.690 --> 00:24:34.360
applets.

00:24:34.620 --> 00:24:34.880
Woo.

00:24:34.880 --> 00:24:38.280
These -- thank you.

00:24:38.380 --> 00:24:43.020
We have brought the power of
AppleScript Objective-C to the desktop.

00:24:43.020 --> 00:24:47.950
In Snow Leopard, we introduced ASOC,
AppleScript Objective-C,

00:24:47.950 --> 00:24:53.610
which allows -- It allows AppleScripts
to call directly to class and

00:24:53.680 --> 00:24:56.310
instance methods in the OS.

00:24:56.310 --> 00:25:00.330
And so you could build your
AppleScript applications using ASOC and

00:25:00.530 --> 00:25:04.800
have access to the entire library
of Cocoa calls that you needed to make.

00:25:05.000 --> 00:25:08.100
But it was only in Xcode and
only for apps -- AppleScript apps

00:25:08.150 --> 00:25:09.830
that you created in Xcode.

00:25:09.830 --> 00:25:11.760
Now it's moved to the desktop.

00:25:11.890 --> 00:25:16.140
AppleScript applets in the
AppleScript editor can now

00:25:16.140 --> 00:25:20.030
call Cocoa directly in their
script and here's an example.

00:25:20.030 --> 00:25:26.080
You can call the Cocoa class methods
and the Cocoa class instance methods.

00:25:26.080 --> 00:25:29.310
So in the first one here,
I have taken a new

00:25:29.390 --> 00:25:30.860
property called NSString.

00:25:30.860 --> 00:25:37.120
I've made a variable and I'm assigning
it to the Cocoa class NSString.

00:25:37.400 --> 00:25:41.800
Then I have a standard
AppleScript string that I'm placing

00:25:41.810 --> 00:25:44.250
in a variable called source text.

00:25:44.350 --> 00:25:47.000
And then I'm applying a class method,
NSString's string.

00:25:47.000 --> 00:25:49.000
And then I'm applying a class method,
NSString's string.

00:25:49.000 --> 00:25:55.480
And then I'm passing that
AppleScript string to the method and

00:25:55.570 --> 00:26:01.640
that converts it into a Cocoa string
that I can then apply an instance

00:26:01.640 --> 00:26:04.240
method to called uppercase.

00:26:04.430 --> 00:26:07.420
Those of you that have written
AppleScript know there is no

00:26:07.520 --> 00:26:10.800
built-in way to change the
case of text in AppleScript.

00:26:10.910 --> 00:26:15.080
But now using these couple lines
of AppleScript Objective-C,

00:26:15.080 --> 00:26:18.930
I can convert from lowercase
to uppercase automatically.

00:26:18.960 --> 00:26:20.210
Amen.

00:26:20.400 --> 00:26:25.930
“Oh, lots of possibilities” So this
means that AppleScript applets

00:26:26.240 --> 00:26:31.160
now not only support Apple events,
but they also support the Unix command

00:26:31.160 --> 00:26:33.640
line through the do-shell script.

00:26:33.640 --> 00:26:36.860
And now you can call into
the Cocoa frameworks,

00:26:36.860 --> 00:26:42.220
the AppKit and Foundation frameworks and
all of the classes that they contain,

00:26:42.280 --> 00:26:47.710
using this AppleScript\Objective-C,
which allows custom user interfaces.

00:26:47.710 --> 00:26:49.190
So your scripts  “\

00:26:49.910 --> 00:27:00.740
“Your scripts can now have, like,
progress bars.

00:27:00.870 --> 00:27:02.360
Whoa!

00:27:02.360 --> 00:27:06.210
Only took me 14 years.

00:27:06.210 --> 00:27:06.210
Your tax dollars at work.” \
So let's take a look at that.\

00:27:11.910 --> 00:27:14.920
“Isn't that EPUB thing interesting?

00:27:14.920 --> 00:27:16.500
I just really dig that.

00:27:16.550 --> 00:27:22.520
Here's my new launcher.

00:27:22.520 --> 00:27:22.520
You like that?” \

00:27:24.400 --> 00:27:27.270
“I’m going to open up one of these.

00:27:27.350 --> 00:27:30.220
I’m going to take a
look at the menu here.

00:27:30.760 --> 00:27:37.590
“So if you want to create
an AppleScript Cocoa applet,

00:27:37.590 --> 00:27:44.030
you just go to the template and
it creates a new one for you.

00:27:44.090 --> 00:27:47.650
This one that we're looking
at here is one of those.

00:27:47.650 --> 00:27:47.650
I have it pre-done with a short
little script that basically goes

00:27:47.650 --> 00:27:47.650
to the address book app and says,

00:27:48.310 --> 00:27:52.220
give me the name of every person
that's in your address book and then

00:27:52.220 --> 00:27:56.990
I present it as a list and then once
the user chooses somebody from the list,

00:27:57.050 --> 00:28:00.670
I set the selection to that
person in the address book.

00:28:00.670 --> 00:28:04.730
Now, I'm going to click the "Run"
button and you'll notice that the

00:28:04.730 --> 00:28:07.420
Apple Script Editor is saying,
"Since this is a

00:28:07.420 --> 00:28:11.380
Cocoa Apple Script Applet,
you need to run it as an application

00:28:11.380 --> 00:28:15.750
and it provides you with the ability
to do that or you can go to the

00:28:15.750 --> 00:28:20.740
script menu and choose the run
application from there as well.

00:28:21.190 --> 00:28:25.490
It's Shift--I mean,
Option Command R instead of just the

00:28:25.490 --> 00:28:27.690
Command R but I'll run it anyway.

00:28:27.690 --> 00:28:30.000
Yeah, sure, save the changes.

00:28:30.000 --> 00:28:35.160
So it scanned my address book,
I picked somebody and there they are.

00:28:35.160 --> 00:28:37.040
Simple idea, right?

00:28:37.140 --> 00:28:40.430
Now, what if I want to sort that list?

00:28:40.700 --> 00:28:43.880
There is no verb in
Apple Script for doing a sort but

00:28:43.880 --> 00:28:44.800
since I have the ability to sort,
I can do that.

00:28:44.800 --> 00:28:44.880
So I'm going to go to the "Sort" button
and I'm going to click the "Sort" button

00:28:44.880 --> 00:28:44.880
and I'm going to click the "Sort" button.

00:28:44.880 --> 00:28:44.880
Now,
I'm going to click the "Sort" button and

00:28:44.880 --> 00:28:44.880
I'm going to click the "Sort" button and
I'm going to click the "Sort" button and

00:28:44.880 --> 00:28:44.920
I'm going to click the "Sort" button and
I'm going to click the "Sort" button.

00:28:44.920 --> 00:28:49.580
Now, ability to call into Cocoa,
I can use any of like the standard

00:28:49.580 --> 00:28:52.490
NSString or NSArray kind of ideas.

00:28:52.520 --> 00:28:58.610
So if we go to the Apple developer
documentation site for NSArray,

00:28:58.610 --> 00:29:04.080
you can see over here there's a
class method here that has a class

00:29:04.080 --> 00:29:06.750
method called array with array.

00:29:07.140 --> 00:29:10.270
So the same way I did string with string,
I can use that to convert

00:29:10.280 --> 00:29:14.410
an AppleScript list into a
Cocoa array and then I can call an

00:29:14.410 --> 00:29:17.560
instance method on that down here.

00:29:17.560 --> 00:29:20.190
I'm not used to this
upside down sorting thing.

00:29:20.350 --> 00:29:23.080
Sort with using selector
or something like that,

00:29:23.170 --> 00:29:27.290
one of the various sort options I have,
then I can call that instance method on

00:29:27.290 --> 00:29:29.900
the new Cocoa object that I've created.

00:29:30.030 --> 00:29:32.920
So let's look at that
and how that's done.

00:29:32.990 --> 00:29:34.560
So I'll bring back here.

00:29:34.560 --> 00:29:37.780
I'm going to first of all do the same
kind of technique that I did before.

00:29:37.910 --> 00:29:40.610
You don't necessarily
have to do it this way,

00:29:40.800 --> 00:29:41.380
but I like to do it this way.

00:29:41.380 --> 00:29:44.950
So I'm going to do like assigning the
class to a variable and that way it can

00:29:44.950 --> 00:29:50.640
just talk to the variable instead of
saying current applications NSArray.

00:29:50.640 --> 00:29:54.140
And then next,
once I've gotten the names,

00:29:54.140 --> 00:29:56.320
I need to do the sorting.

00:29:56.320 --> 00:29:59.340
So I'll insert that text over here.

00:29:59.340 --> 00:30:04.600
And you can see that here I'm saying
NSArrays array with array and I'm

00:30:04.600 --> 00:30:07.320
passing in the Apple Script list.

00:30:07.440 --> 00:30:10.090
It will coerce that into a Cocoa array.

00:30:10.090 --> 00:30:15.060
And then with that array, Cocoa array,
I'm calling an instance method on it

00:30:15.170 --> 00:30:19.340
using the localized standard compare,
which will sort it like

00:30:19.340 --> 00:30:21.800
the way the finder does,
basic thing.

00:30:21.800 --> 00:30:23.250
So now I can run this.

00:30:23.250 --> 00:30:27.800
I'll save this and use my new option,
Command-R, run this.

00:30:27.800 --> 00:30:33.330
And you can see that the list here
is now sorted alphabetically for me.

00:30:33.330 --> 00:30:36.880
And then I choose somebody and it's done.

00:30:36.880 --> 00:30:40.550
So now if it's not in Apple Script,
I don't have to look

00:30:40.570 --> 00:30:42.480
for third-party OSACs.

00:30:42.590 --> 00:30:46.780
I can look into the Cocoa library
and do things I need to do there.

00:30:46.780 --> 00:30:48.280
I can do NS image in there.

00:30:48.280 --> 00:30:50.200
I can do NSString in there.

00:30:50.200 --> 00:30:51.720
You can do NS object.

00:30:51.740 --> 00:30:58.050
You can do whatever Cocoa has
available to you and use those.

00:30:58.420 --> 00:31:07.700
So, let's take a look at an instance of
where I've done that to create some UI.

00:31:07.790 --> 00:31:13.080
So here I have an application,
an AppleScript Cocoa Applet,

00:31:13.280 --> 00:31:16.400
that is going to process some images.

00:31:16.400 --> 00:31:19.460
And when I choose Choose,
you'll notice that it has its

00:31:19.680 --> 00:31:24.290
own floating progress window,
and it will respond to

00:31:24.290 --> 00:31:27.570
the stop button as well.

00:31:27.660 --> 00:31:28.890
Maybe the cursor needs to be up.

00:31:28.990 --> 00:31:29.750
OK, there you go.

00:31:29.870 --> 00:31:33.810
And I'll run that again just to show you.

00:31:38.500 --> 00:31:43.320
“So you can create your
own UI” in this case,

00:31:43.320 --> 00:31:47.070
this was easy to create
dynamically on the fly.

00:31:47.280 --> 00:31:51.630
I just created my own
Cocoa class for progress window.

00:31:51.630 --> 00:31:55.510
And then I call that from
within my main script.

00:31:55.600 --> 00:32:00.220
So the two are on different
threads and functioning totally

00:32:00.490 --> 00:32:02.820
independently of each other.

00:32:02.880 --> 00:32:05.380
Let's take a look at that code.

00:32:05.380 --> 00:32:08.500
So I'm going to open this up into the

00:32:09.090 --> 00:32:13.040
And it has, yeah,
all the normal warnings about, yes,

00:32:13.040 --> 00:32:14.820
you can use this code,
but we'll pay attention

00:32:14.860 --> 00:32:15.670
to you or whatever.

00:32:17.730 --> 00:32:23.920
Okay, here it is just basically getting
a list of different things,

00:32:23.920 --> 00:32:27.340
choosing and then processing,
getting to do a repeat,

00:32:27.340 --> 00:32:29.420
and then finally down here
we're going to do a repeat.

00:32:29.420 --> 00:32:32.480
And it calls into the progress window.

00:32:32.480 --> 00:32:35.760
Well, where does this progress
window class live?

00:32:35.880 --> 00:32:40.780
If you go over to the bundle contents,
you'll see that in the bundle contents,

00:32:40.830 --> 00:32:43.020
I've added another script.

00:32:43.870 --> 00:32:48.220
And this script-- I open that up--

00:32:49.230 --> 00:32:54.800
contains a script object
that is my Cocoa class.

00:32:54.890 --> 00:32:58.930
And I have properties in there and
I have handlers and methods in there.

00:32:59.200 --> 00:33:02.200
And you can see that I've
created these various ones,

00:33:02.210 --> 00:33:06.130
what to do if the cancels press,
ready the progress window,

00:33:06.130 --> 00:33:10.730
increment the progress window,
and then down here at the bottom

00:33:10.740 --> 00:33:15.490
I have create the progress window
where I'm doing the alox init and

00:33:15.490 --> 00:33:20.740
creating the object assigning the
various properties for the window,

00:33:20.740 --> 00:33:23.680
positioning the items,
all those kinds of things.

00:33:23.700 --> 00:33:27.790
So this gets called from my
main script over here when I'm

00:33:27.790 --> 00:33:31.160
getting ready to process that.

00:33:31.260 --> 00:33:35.650
I create the progress window
using that new Cocoa class

00:33:35.770 --> 00:33:37.900
that I created in AppleScript.

00:33:38.030 --> 00:33:42.190
And when this whole thing gets run,
you get the wonderful effect of

00:33:42.190 --> 00:33:43.700
being able to have your own script.

00:33:43.700 --> 00:33:43.700
Okay.

00:33:43.700 --> 00:33:43.740
Okay.

00:33:43.740 --> 00:33:43.770
Okay.

00:33:43.800 --> 00:33:43.820
Okay.

00:33:43.830 --> 00:33:43.840
Okay.

00:33:43.860 --> 00:33:44.290
own

00:33:46.090 --> 00:33:49.890
“I am a developer, and I am a developer.

00:33:50.090 --> 00:33:54.420
I am an entrepreneur,
and I am a developer”.

00:33:54.540 --> 00:34:00.910
So, with Cocoa\AppleScript applets now
available in the AppleScript editor,

00:34:01.020 --> 00:34:05.860
you have all of the power of
AppleScript\Objective-C right

00:34:05.860 --> 00:34:07.310
on the desktop.

00:34:07.400 --> 00:34:07.950
Portable, lightweight,
powerful applications that can tie

00:34:07.950 --> 00:34:07.950
into a lot of what the OS has to offer.

00:34:11.460 --> 00:34:16.560
“So, in AppleScript, we've done a lot.

00:34:16.560 --> 00:34:22.150
We've had a new template architecture
added with some example templates.

00:34:22.150 --> 00:34:24.100
You can create your own,
put them in there.

00:34:24.220 --> 00:34:28.240
We also created the new
Cocoa-AppleScript applet that,

00:34:28.240 --> 00:34:33.270
again, brings the power of
AppleScript/Objective-C to the desktop,

00:34:33.410 --> 00:34:38.140
allowing you to tie into all the
power of Cocoa with AppleScript.

00:34:38.140 --> 00:34:41.090
So now you are very dangerous people.\ \

00:34:41.250 --> 00:34:44.390
“You have AppleScript, Apple Events,
you have the command line,

00:34:44.400 --> 00:34:45.500
and you have Cocoa.

00:34:45.610 --> 00:34:47.570
Dude, tear it up.”

00:34:50.000 --> 00:35:12.000
[Transcript missing]

00:35:12.940 --> 00:35:16.140
None of it, yeah, it's all okay, yeah.

00:35:16.140 --> 00:35:20.190
I was going to say none of it approved,
but no, it's all approved.

00:35:20.200 --> 00:35:21.980
So, let's begin.

00:35:21.980 --> 00:35:25.660
First of all, we added a lot of new
appearance controls,

00:35:25.760 --> 00:35:28.170
because when you're
working with a terminal,

00:35:28.170 --> 00:35:30.930
you really do,
everybody likes to have their

00:35:30.970 --> 00:35:34.880
windows their way and have
that granularity of design.

00:35:34.880 --> 00:35:37.660
If you walk down the hall
at Apple and you peer in and

00:35:37.660 --> 00:35:41.120
you watch all the engineers,
you'll see every one of them is using

00:35:41.120 --> 00:35:46.010
the terminal in a different way,
and it really does need that level of

00:35:46.010 --> 00:35:48.840
granularity in its appearance controls.

00:35:48.890 --> 00:35:53.650
Specifically, the first thing we added
was full screen display.

00:35:56.290 --> 00:35:58.840
“Yes, of course, duh.

00:35:58.840 --> 00:36:03.540
Right, you have to have the Terminal
full-screen on your Mac,

00:36:03.690 --> 00:36:07.460
and then you use your three-finger
swipe and you’re back to normal.

00:36:07.580 --> 00:36:10.720
And then, hey, I’m in “geek world”.

00:36:10.840 --> 00:36:12.430
Now I’m back to normal.

00:36:12.430 --> 00:36:14.240
Hey, I’m back to normal.

00:36:14.240 --> 00:36:15.800
Now I’m straddling.

00:36:15.800 --> 00:36:16.500
Whoa, okay.

00:36:16.760 --> 00:36:17.750
Well, that was good.

00:36:17.850 --> 00:36:19.290
So, full-screen display.

00:36:19.290 --> 00:36:21.750
There was one thing that didn’t get in.

00:36:21.750 --> 00:36:24.640
I asked the team to produce a
font that looked like an old,

00:36:24.640 --> 00:36:25.120
burned-in K-Pro.

00:36:26.000 --> 00:36:30.760
And I wanted it to start
jittering after 5 minutes.

00:36:31.160 --> 00:36:34.370
But it was too much code,
and they're busy with other things.

00:36:34.650 --> 00:36:35.860
But we got full screen display.

00:36:35.860 --> 00:36:36.440
It's wonderful.

00:36:36.440 --> 00:36:40.390
And it's also keyboard activated,
unlike the other ones that's Option,

00:36:40.390 --> 00:36:41.270
Command, F.

00:36:41.270 --> 00:36:42.880
You're in, you're out.

00:36:42.960 --> 00:36:46.070
Next, we expanded the text color support.

00:36:46.220 --> 00:36:49.060
Beyond the normal scope of the
text support that you have,

00:36:49.180 --> 00:36:53.720
you now have lots of controls
for color and variations.

00:36:53.800 --> 00:36:56.350
For Windows,
we added background images and

00:36:56.470 --> 00:36:59.160
automatic blur effect controls.

00:36:59.290 --> 00:37:02.800
And you can even have a folder of
images rotate through your window

00:37:02.800 --> 00:37:04.630
as you're using it during the day.

00:37:04.640 --> 00:37:09.120
So those that are really creative
can have a photo montage from

00:37:09.120 --> 00:37:13.540
the local weather station appear
automatically so that you can keep

00:37:13.540 --> 00:37:15.810
up on the weather as you're coding.

00:37:16.380 --> 00:37:23.400
New status indicators for unread text,
the activity, is something still active,

00:37:23.460 --> 00:37:26.560
and how many unread bell counters
are in this particular window.

00:37:26.700 --> 00:37:31.040
This works in tabs as well
as individual windows,

00:37:31.040 --> 00:37:34.760
and it also works with the live doc icon.

00:37:34.860 --> 00:37:42.090
So when you send your window to the doc,
you can see the content live and you'll

00:37:42.090 --> 00:37:42.660
get these bell indicators there as well.

00:37:42.940 --> 00:37:47.790
In addition, we've also added something
that's really nifty.

00:37:47.800 --> 00:37:51.980
It's proxy icon drag-and-drop support,
or drag-and-drop support enhanced

00:37:52.200 --> 00:37:53.780
throughout the terminal anyway.

00:37:53.780 --> 00:37:57.470
So you can take a file in
the Finder and drag it,

00:37:57.540 --> 00:37:59.360
take a folder in the Finder,
drag it to the terminal,

00:37:59.360 --> 00:38:01.140
and it starts a new CD to that folder.

00:38:01.140 --> 00:38:06.900
You can take a path from the terminal
window up into the tab and add it there.

00:38:06.900 --> 00:38:08.980
You can take the proxy
icon from the terminal,

00:38:08.980 --> 00:38:12.180
which is showing the current directory,
drag that down into one window

00:38:12.180 --> 00:38:14.510
or another window over here,
or drag it to a new tab and

00:38:14.510 --> 00:38:15.710
start another one there.

00:38:15.720 --> 00:38:20.070
So there's lots of enhanced drag-and-drop
support for the terminal as well.

00:38:20.080 --> 00:38:26.080
And we've also added in built-in system
services for terminal to do those kind

00:38:26.160 --> 00:38:29.700
of things that you always wanted to do,
CD to a Finder folder,

00:38:29.700 --> 00:38:34.280
grab a nicely formatted man page from
some text in a document somewhere.

00:38:34.280 --> 00:38:38.260
So if you're on a Safari web page and
you're reading about this new command,

00:38:38.260 --> 00:38:40.660
you select it and bring
up the man page for it,

00:38:40.660 --> 00:38:43.080
and you can view it right there.

00:38:46.370 --> 00:38:56.690
“The Terminator Page” “Now,
to show us this is the crazy

00:38:56.690 --> 00:38:56.690
person that wrote all this code,
my friend Chris Page,

00:38:56.690 --> 00:38:56.690
the Terminator Page.

00:38:56.690 --> 00:38:56.690
And take it away Chris, thank you.\ \

00:39:01.920 --> 00:39:07.680
He's a tough act to follow
but I'll do my best.

00:39:07.740 --> 00:39:12.050
I work on AppleScript and
Script Editor and more recently,

00:39:12.050 --> 00:39:12.730
Terminal.

00:39:12.780 --> 00:39:15.420
There are a lot of
enhancements in Terminal.

00:39:15.420 --> 00:39:17.520
I'm really excited to show you.

00:39:17.520 --> 00:39:21.090
There's more than I have time to
show you but I'm going to try to

00:39:21.090 --> 00:39:23.510
show you three things very quickly.

00:39:23.640 --> 00:39:26.220
One is the working directory support.

00:39:26.220 --> 00:39:30.530
This enables the terminal to display
your current working directory and

00:39:30.590 --> 00:39:34.570
let you manipulate it and create
new terminals from a folder in

00:39:34.570 --> 00:39:40.290
another application or even a path
name that's selected in text in any

00:39:40.540 --> 00:39:43.180
“The second thing I'm going to
show you is some of the display

00:39:43.180 --> 00:39:45.810
enhancements that Sal mentioned.

00:39:45.810 --> 00:39:49.270
And the third is going to be full-screen.

00:39:49.270 --> 00:39:53.480
And if I have enough time,
I'll show you a few tips

00:39:53.540 --> 00:39:57.390
and tricks as I go.” \

00:40:00.800 --> 00:40:09.180
So the first thing is, if I'm in Finder,
let's go to my user folder.

00:40:13.900 --> 00:40:22.170
“I have a question for you.

00:40:22.170 --> 00:40:23.300
I have a question for you.” “What is
the best way to get the best out of the

00:40:32.200 --> 00:40:36.470
“Let’s see, just one second.

00:40:36.470 --> 00:40:38.140
Please stand by.

00:40:38.140 --> 00:40:38.850
Okay.

00:40:38.880 --> 00:40:41.580
I can drag it on the terminal.

00:40:41.680 --> 00:40:42.540
There.

00:40:42.540 --> 00:40:46.610
Now I have a new terminal window.

00:40:46.610 --> 00:40:48.680
Can you read that?

00:40:48.680 --> 00:40:54.180
If I look at the current
working directory,

00:40:54.180 --> 00:40:57.150
you can see it's my documents folder.

00:40:57.150 --> 00:40:57.150
I can also drag a folder into

00:40:57.800 --> 00:41:03.400
“The tab bar to create a new
terminal at that directory.

00:41:03.590 --> 00:41:08.600
And there are services so that
from in any application that

00:41:08.680 --> 00:41:13.800
has a folder or a path selected,
I can go to the service,

00:41:13.980 --> 00:41:17.860
which you can enable
in system preferences,

00:41:17.860 --> 00:41:21.120
and say create a new tab or a
new window at that location,

00:41:21.120 --> 00:41:21.120
whether or not terminal
is already running.\'

00:41:23.540 --> 00:41:26.750
The other half of this is that if
you'll notice at the top of the

00:41:26.770 --> 00:41:30.800
window there's a proxy icon showing
the current working directory.

00:41:30.800 --> 00:41:35.960
There's support for an escape
sequence so that the shell and other

00:41:35.960 --> 00:41:39.440
programs can tell Terminal what
the current working directory is.

00:41:39.440 --> 00:41:42.990
Terminal will show you that in the
proxy icon which you can use to

00:41:43.000 --> 00:41:45.290
navigate to that location in Finder.

00:41:45.440 --> 00:41:49.980
You can drag it just like any other
folder to create a new Terminal,

00:41:50.100 --> 00:41:55.680
or maybe into another window.

00:41:55.950 --> 00:42:01.320
And if you drag it to an existing tab,
it'll issue a CD command.

00:42:17.530 --> 00:42:20.970
Another nice thing is since Terminal
knows your current working directory,

00:42:21.080 --> 00:42:24.280
by default, when you create a new tab,

00:42:26.310 --> 00:42:29.900
“It’s in the same working directory
that you were in in the previous tab.

00:42:29.900 --> 00:42:34.550
And there are preferences so that you
can do that for new windows as well.\

00:42:39.710 --> 00:42:44.590
I'm briefly going to show
you some of the new display

00:42:44.590 --> 00:42:48.280
enhancements that Sal mentioned.

00:42:48.340 --> 00:42:52.780
Here we have a window with
blur in the background.

00:42:57.500 --> 00:43:02.710
“Lest you think that this
is completely superfluous,

00:43:02.710 --> 00:43:07.300
you can actually have it become
clear when you're not using that

00:43:07.300 --> 00:43:13.000
terminal window.” And then the
blur makes the text readable.\ \

00:43:15.700 --> 00:43:23.110
“This is another built-in default
setting called Solid Colors,

00:43:23.240 --> 00:43:31.180
and the background image is set to a
folder containing images of solid colors.

00:43:31.180 --> 00:43:36.150
And so every time I create
a new terminal with that,

00:43:36.150 --> 00:43:37.200
it randomly selects a different color.

00:43:37.200 --> 00:43:37.200
So that can be used to
differentiate terminals.

00:43:43.400 --> 00:43:51.960
“I'm going to show you some
of the status information.

00:43:52.290 --> 00:44:00.370
This is really useful if you've
got multiple terminals open and you

00:44:00.370 --> 00:44:00.670
want to know what's going on in a
background tab or in a minimized window.

00:44:00.670 --> 00:44:00.670
If I start

00:44:00.780 --> 00:44:04.560
“I am running a long command”.

00:44:04.720 --> 00:44:10.140
You can see it is showing you a busy
indicator and it is showing you the

00:44:10.240 --> 00:44:12.890
current process that is running.

00:44:13.000 --> 00:44:16.890
If I switch to another tab,
you can see that it is

00:44:16.930 --> 00:44:19.250
still running back there.

00:44:19.250 --> 00:44:19.890
If I minimize that,
you can see what process is running.

00:44:19.890 --> 00:44:19.890
The ellipses indicate that
there is  “ Thank you.” \

00:44:22.250 --> 00:44:25.000
The ellipses indicate
that there is unread text.

00:44:25.000 --> 00:44:28.560
There are also - and you can -
I don't know if you can tell,

00:44:28.560 --> 00:44:31.600
but there is live text happening in here.

00:44:32.860 --> 00:44:34.850
It's really useful if you're
trying to monitor what's going

00:44:34.850 --> 00:44:41.240
on in multiple locations without
having to open up the window,

00:44:41.660 --> 00:44:43.990
take a look, close it again.

00:44:49.150 --> 00:44:56.070
“I am going to show you what happens when
a bell is played in a background tab.

00:44:57.800 --> 00:45:01.810
“Well, there was no audio,
but there's a little bell indicator.

00:45:01.810 --> 00:45:03.400
It fades away.

00:45:03.400 --> 00:45:07.740
If the window is minimized or if
the terminal is in the background,

00:45:07.790 --> 00:45:11.490
the terminal shows you the
number of bells that have gone

00:45:11.580 --> 00:45:13.350
off while you were away.\'

00:45:27.380 --> 00:45:31.040
So I'm going to cut this short.

00:45:31.120 --> 00:45:37.980
I'm going to briefly mention that
there's support for 256 colors.

00:45:38.260 --> 00:45:44.320
“The first thing I want to talk about
is the new “Color Eraser” feature.

00:45:44.320 --> 00:45:48.510
That's important for people who
use editors in Terminal and want to

00:45:48.510 --> 00:45:50.830
use syntax highlighting and so on.

00:45:50.830 --> 00:45:54.050
It gives you a much larger
palette to choose from.

00:45:54.050 --> 00:45:58.060
It supports background color erase,
which is used to clear the

00:45:58.060 --> 00:45:59.570
background color of the screen.

00:45:59.570 --> 00:45:59.570
Again, if you're using custom color
schemes in an editor like VI,

00:45:59.570 --> 00:45:59.570
it fills the screen with
that background color.

00:46:04.800 --> 00:46:16.440
“I want to show you full screen.” Now,
if you really feel like you want to be

00:46:21.350 --> 00:46:26.800
“You've probably never seen this much
information from top at one time.” \

00:46:28.510 --> 00:46:38.160
And of course, as Sal mentioned,
I can go back to the desktop,

00:46:38.160 --> 00:46:38.160
work with whatever
applications I want to,

00:46:38.160 --> 00:46:38.160
and at any moment, I've got a full-screen
terminal waiting for me.

00:46:48.100 --> 00:47:56.100
[Transcript missing]

00:47:56.760 --> 00:48:01.020
If you need to contact anybody here,
you can contact Eric or myself,

00:48:01.020 --> 00:48:06.510
and you can visit the forums,
the developer forums as well.

00:48:06.520 --> 00:48:07.660
Thank you very much.

00:48:07.740 --> 00:48:08.600
Thanks for attending.

00:48:08.600 --> 00:48:10.340
See you guys next year.

00:48:10.340 --> 00:48:12.120
Make some money.