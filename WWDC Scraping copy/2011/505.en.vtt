WEBVTT

00:00:11.330 --> 00:00:12.900
Good morning, everybody.

00:00:12.930 --> 00:00:17.480
I'm David Duncan with the iAd Group,
and we're going to talk about iAd

00:00:17.480 --> 00:00:19.190
Implementation Best Practices.

00:00:21.030 --> 00:00:24.110
So just going to go over quickly first,
what is an iAd?

00:00:24.160 --> 00:00:26.830
I'm sure a lot of you have seen them,
but for those that haven't,

00:00:26.840 --> 00:00:29.700
we're just going to go quickly on
what iAd is and what is the experience

00:00:29.890 --> 00:00:32.920
that your customers are going to see
when they actually launch an iAd.

00:00:32.920 --> 00:00:35.790
After that, we're going to spend a
little time talking about

00:00:35.790 --> 00:00:39.310
some mobile advertising 101,
just all those terms that you'll see

00:00:39.310 --> 00:00:42.830
in the portal on your reports so that
you'll understand exactly what we're

00:00:42.830 --> 00:00:46.410
telling you has been going on in
your application with respect to ads.

00:00:47.430 --> 00:00:49.610
Once we've gotten that done,
we're going to go ahead and jump

00:00:49.610 --> 00:00:52.700
into the nitty-gritty of actually
integrating iAd into your application,

00:00:52.700 --> 00:00:56.290
configuring your application in the
portal so that you'll get iAds when

00:00:56.290 --> 00:00:59.400
you actually ship to the App Store,
as well as adding banners or

00:00:59.400 --> 00:01:03.870
interstitials to your application so
that users will actually see those ads.

00:01:03.960 --> 00:01:07.740
And finally, a few best practices,
things that you should keep

00:01:07.740 --> 00:01:11.250
in mind when working with iAd
and just with iOS in general.

00:01:14.330 --> 00:01:19.300
So with that, let's go ahead and take
a look at what is an iAd.

00:01:19.320 --> 00:01:24.580
iAd is just a really great ad experience
using all those technologies and features

00:01:24.580 --> 00:01:29.360
of iOS that you take advantage of in your
application in these really great iAds,

00:01:29.390 --> 00:01:33.960
like the inline video,
gyroscope and accelerometer,

00:01:33.960 --> 00:01:34.940
in-ad downloads.

00:01:34.940 --> 00:01:38.810
You can get ads that actually download
applications and songs and all

00:01:38.810 --> 00:01:41.040
those things to your users' devices.

00:01:42.580 --> 00:01:45.920
And it integrates really
nicely with your application.

00:01:45.920 --> 00:01:50.360
It's this beautiful banner with this
beautiful content that just flows great

00:01:50.360 --> 00:01:52.910
and is worthy of your application.

00:01:53.480 --> 00:01:55.370
It's self-contained,
which means that you don't have

00:01:55.460 --> 00:01:58.470
to add anything aside from a
framework that already exists

00:01:58.470 --> 00:02:00.240
on iOS to your application.

00:02:00.420 --> 00:02:04.040
And the greatest part is
when a user goes into an iAd,

00:02:04.170 --> 00:02:05.360
they stay in your application.

00:02:05.430 --> 00:02:07.160
There's no exiting to anything.

00:02:07.300 --> 00:02:10.520
They come right back when they're
done and continue on with the

00:02:10.690 --> 00:02:13.040
experience inside of your application.

00:02:13.670 --> 00:02:17.610
These are really well-known brands,
things like BMW and Nissan and Target,

00:02:17.610 --> 00:02:20.400
things your users are
already familiar with,

00:02:20.480 --> 00:02:27.910
things that they're willing
to take a look at and go in,

00:02:27.910 --> 00:02:29.400
which means that you're going to see
the advertising revenue from them

00:02:29.400 --> 00:02:29.400
actually going and exploring these ads.

00:02:31.800 --> 00:02:33.290
And we're always expanding.

00:02:33.300 --> 00:02:34.910
We're always looking to go further.

00:02:35.090 --> 00:02:37.570
We're in all these countries,
and we're expected to get

00:02:37.570 --> 00:02:39.300
into Japan sometime this year.

00:02:39.300 --> 00:02:43.150
And so you'll be seeing ads
in more places all the time.

00:02:43.420 --> 00:02:46.550
And finally, we take care of all
those privacy concerns.

00:02:46.630 --> 00:02:49.210
With a lot of the other groups,
you have to go ahead and collect

00:02:49.210 --> 00:02:52.520
things from the device so that you
can identify what that device is.

00:02:52.550 --> 00:02:54.010
You don't have to worry
about that with iAd.

00:02:54.180 --> 00:02:59.650
It's taken care of for you,
and users will appreciate the enhanced

00:02:59.650 --> 00:02:59.650
privacy that iAd has to offer.

00:02:59.900 --> 00:03:01.840
And finally,
it's really easy to implement.

00:03:01.850 --> 00:03:05.310
You put one of these banners and
integrate them into your application,

00:03:05.310 --> 00:03:07.150
and you start receiving ads.

00:03:07.610 --> 00:03:09.730
And of course,
the thing that you're all interested in,

00:03:09.730 --> 00:03:10.490
you get ad revenue.

00:03:10.770 --> 00:03:14.260
60% of the revenue that
we get is your cut.

00:03:14.340 --> 00:03:16.110
So once you start
putting these banners in,

00:03:16.110 --> 00:03:18.080
you'll start seeing
that cut of the revenue.

00:03:18.080 --> 00:03:22.140
And so with that,
a few advertising terms.

00:03:24.600 --> 00:03:27.700
So the first thing that you
should be aware of is requests.

00:03:27.830 --> 00:03:29.790
And requests are a really simple concept.

00:03:29.980 --> 00:03:32.740
When you go ahead and you
create your iAd banner,

00:03:32.780 --> 00:03:34.920
then it'll start making
requests in the network.

00:03:35.010 --> 00:03:38.840
And that's basically saying,
please give me an advertisement to show.

00:03:38.900 --> 00:03:43.500
And when you get a successful
request and you get an advertisement,

00:03:44.940 --> 00:03:48.220
Then you'll see that beautiful ad pop in.

00:03:48.250 --> 00:03:52.520
You just move the banner on screen and
you get what's known as an impression.

00:03:52.560 --> 00:03:55.880
What an impression means is that
you've displayed the banner to

00:03:55.880 --> 00:03:58.860
the user and there's been enough
time that's gone by for the user

00:03:58.860 --> 00:04:00.840
to actually have seen the banner.

00:04:01.000 --> 00:04:04.090
So that's the impression.

00:04:05.480 --> 00:04:07.960
And once you know what
requests and impressions are,

00:04:07.980 --> 00:04:09.540
we can start looking at fill rate.

00:04:09.690 --> 00:04:12.030
So every time you make a request,
we'll try to get a banner.

00:04:12.030 --> 00:04:15.370
Sometimes we might not succeed,
and so we want you to hide the banner.

00:04:15.370 --> 00:04:18.200
But as long as you succeed
and you display the banner,

00:04:18.200 --> 00:04:21.470
you get that impression,
and you get what's the fill rate.

00:04:21.480 --> 00:04:25.710
And so all that is is
impressions divided by requests.

00:04:25.710 --> 00:04:28.800
And so in our little example here,
we made three requests

00:04:28.800 --> 00:04:31.860
and got two impressions,
so we had a 66% fill rate.

00:04:31.920 --> 00:04:33.360
It's really that simple.

00:04:34.490 --> 00:04:37.390
Similarly, there's the term click
and click-through rate.

00:04:37.390 --> 00:04:40.170
And those are very similar when
the user taps on a banner and

00:04:40.170 --> 00:04:41.640
starts engaging with the ad.

00:04:41.690 --> 00:04:44.610
So they're manipulating it,
they're tapping on controls.

00:04:44.750 --> 00:04:46.230
They're actually inside the ad.

00:04:46.400 --> 00:04:48.800
You get what is known in
advertising terms as a click.

00:04:49.270 --> 00:04:51.890
Obviously, we're on a mobile device,
so everything's taps,

00:04:51.910 --> 00:04:53.640
but the advertising term is a click.

00:04:53.720 --> 00:04:57.020
Now the click-through rate is, again,
just the ratio between those

00:04:57.020 --> 00:04:58.620
clicks and those impressions.

00:04:58.620 --> 00:05:01.210
So in our example,
we had a 50% click-through rate

00:05:01.210 --> 00:05:03.320
because we only made a click.

00:05:03.320 --> 00:05:07.280
'cause we only made two
impressions and only got one clip.

00:05:08.350 --> 00:05:12.460
So what is it that advertisers
are actually after?

00:05:12.470 --> 00:05:15.080
Well, as we said,
they want those eyeballs,

00:05:15.080 --> 00:05:15.880
those impressions.

00:05:16.000 --> 00:05:20.020
They want people to see their banners,
and they want people to know

00:05:20.110 --> 00:05:22.260
that their brand exists.

00:05:22.260 --> 00:05:24.150
But even more so,
they want people to actually

00:05:24.220 --> 00:05:25.880
engage with those banners.

00:05:25.970 --> 00:05:28.640
So while impressions are great,
clicks are better.

00:05:28.760 --> 00:05:32.000
When users actually tap on the
banner and engage with the content,

00:05:32.210 --> 00:05:33.840
that's a lot better for them.

00:05:33.840 --> 00:05:36.600
And advertisers are
willing to pay for that.

00:05:36.730 --> 00:05:39.230
They're far more willing to pay
for people to actually tap on

00:05:39.230 --> 00:05:43.760
those banners and engage with
the ad than just for impressions.

00:05:43.980 --> 00:05:46.060
But together, those give you revenue.

00:05:46.060 --> 00:05:49.880
And a statistic that you can use to
track the performance of ads in your

00:05:49.880 --> 00:05:52.100
application is just called ECPM.

00:05:52.100 --> 00:05:54.570
And we'll discuss that a
little more in a moment.

00:05:55.580 --> 00:05:59.340
So what kind of advertisements are
actually provided by the iAd Network?

00:05:59.370 --> 00:06:04.600
Well, as we discussed earlier, brands,
all those Targets and BMWs and Nissans,

00:06:04.650 --> 00:06:05.930
those are the brand advertisements.

00:06:05.930 --> 00:06:09.750
They're those gorgeous ads that
you see that tout the features

00:06:09.860 --> 00:06:13.000
of the latest Nissan Leaf or
whatever else is going on in there.

00:06:13.620 --> 00:06:15.380
You also have the developer campaigns.

00:06:15.450 --> 00:06:19.500
These are when you decide you want to
advertise your application with iAd,

00:06:19.500 --> 00:06:23.810
and you're able to say,
"I want to spend this much money," and

00:06:23.920 --> 00:06:28.200
your banners will start appearing with
iTunes links so that users can download

00:06:28.300 --> 00:06:30.500
your application right from the ad.

00:06:31.740 --> 00:06:34.950
Now, brand advertisements,
they pay for both impressions and clicks.

00:06:35.090 --> 00:06:39.290
So those advertisers are willing to pay
for every eyeball that sees their banner,

00:06:39.400 --> 00:06:43.760
as well as every time those users tap on
the banner and engage with the full ad.

00:06:43.800 --> 00:06:46.550
Developer advertisers
only pay for clicks.

00:06:46.550 --> 00:06:49.210
Since these are typically
from developers,

00:06:49.310 --> 00:06:52.980
they only really want to pay for
when users actually engage with

00:06:52.980 --> 00:06:57.270
the banner and are interested in
downloading those applications.

00:06:58.410 --> 00:07:00.450
And again, you get 60% of the revenue.

00:07:00.450 --> 00:07:03.920
So 60% is what you get is for you.

00:07:05.830 --> 00:07:09.750
Now we mentioned eCPM earlier,
and that's really just a way

00:07:10.230 --> 00:07:14.320
to determine the performance of
advertisements in your application.

00:07:14.350 --> 00:07:17.750
Now the formula is there,
but what that really means is how

00:07:17.850 --> 00:07:20.950
much money you're expected to make,
how much total revenue you're

00:07:21.040 --> 00:07:22.970
expected to get per 1,000 impressions.

00:07:22.970 --> 00:07:28.000
So 1,000 impressions comes in,
you make that much money,

00:07:28.050 --> 00:07:29.540
that's the eCPM.

00:07:31.340 --> 00:07:34.120
Now,
we've always had some common questions

00:07:34.620 --> 00:07:39.020
when working with the iAd Network,
such as what affects the requests that

00:07:39.020 --> 00:07:42.080
are actually made from your application?

00:07:42.120 --> 00:07:46.620
Well, the first thing, of course,
is just how many customers you have.

00:07:46.680 --> 00:07:48.920
The more customers you have,
the more people that are actually

00:07:48.920 --> 00:07:53.150
launching and using your application,
the more requests are going to be made.

00:07:54.350 --> 00:07:58.090
Similarly, banner placement can have a
really important effect on

00:07:58.090 --> 00:07:59.790
how many requests you make.

00:07:59.920 --> 00:08:02.120
For example,
if you only put your banner on some

00:08:02.120 --> 00:08:05.690
introductory screen and never show
it anywhere else in the application,

00:08:05.810 --> 00:08:08.410
you're going to make a lot fewer
requests than if you have that

00:08:08.410 --> 00:08:11.520
same banner placed on the most
active part of your application.

00:08:11.600 --> 00:08:14.960
So it's really important to think
about where you're going to place

00:08:14.980 --> 00:08:18.370
the banner in your application so
that you can get those requests as

00:08:18.370 --> 00:08:22.010
opposed to just making a few requests
when the user first launches it and

00:08:22.010 --> 00:08:23.510
never seeing any more afterwards.

00:08:24.090 --> 00:08:26.440
And finally,
time spent in the application.

00:08:26.490 --> 00:08:29.900
If a user launches your
application once a week and only

00:08:29.900 --> 00:08:32.900
spends a minute or two in it,
you're going to make fewer requests than

00:08:33.030 --> 00:08:36.120
someone that launches that app daily,
multiple times a day,

00:08:36.120 --> 00:08:37.760
for longer periods of time.

00:08:37.900 --> 00:08:44.320
So if your application-- the more
time people spend in your application,

00:08:44.320 --> 00:08:47.350
the more requests you're going to make,
and thus, the more requests you're

00:08:47.350 --> 00:08:47.350
going to make on the network.

00:08:48.180 --> 00:08:52.780
These next two questions, however,
are kind of the same thing.

00:08:52.800 --> 00:08:56.050
Recall that our definition of
fill rate is just the number of

00:08:56.050 --> 00:08:58.080
impressions you got per request.

00:08:58.170 --> 00:09:00.020
So when you ask what affects
my impressions and what

00:09:00.020 --> 00:09:01.850
affects my fill rates,
it's really the same kind of

00:09:01.850 --> 00:09:04.240
thing because it's all coming
back to those impressions.

00:09:05.650 --> 00:09:07.180
Well, what does have effect on that?

00:09:07.180 --> 00:09:09.840
Again,
banner placement can have a huge effect

00:09:09.950 --> 00:09:12.180
on the number of impressions you get.

00:09:12.180 --> 00:09:14.750
If the banner doesn't actually
get shown to the user,

00:09:14.750 --> 00:09:17.840
as we showed before,
you're not going to get an impression.

00:09:17.890 --> 00:09:20.890
So you need to make sure that
whenever there's an ad available,

00:09:20.890 --> 00:09:22.910
you want to show it as soon as possible.

00:09:24.990 --> 00:09:29.600
Similarly, the available advertisements
for your application.

00:09:29.670 --> 00:09:33.360
Some applications will be compatible
with more advertisements than others,

00:09:33.380 --> 00:09:35.260
and depending on what
time of the year it is,

00:09:35.320 --> 00:09:37.820
there'll be more or fewer
advertisements available.

00:09:37.980 --> 00:09:41.480
So the available advertisements
also has a huge impact on both

00:09:41.510 --> 00:09:43.330
impressions and fill rate.

00:09:43.560 --> 00:09:45.290
And finally, your customer location.

00:09:45.480 --> 00:09:49.280
These are the places that we
expect to be in by the end of 2011.

00:09:49.350 --> 00:09:52.260
But if your users aren't
in one of these locations,

00:09:52.300 --> 00:09:53.720
then we don't have to serve ads there.

00:09:53.940 --> 00:09:56.690
And so you're not going to
see any impressions no matter

00:09:56.690 --> 00:09:58.340
how many requests you make.

00:09:59.320 --> 00:10:01.270
And finally, why does my fill rate vary?

00:10:01.380 --> 00:10:04.800
Well, advertising is implicitly seasonal.

00:10:04.800 --> 00:10:09.030
Advertisers want to advertise when
your customers have money to spend.

00:10:09.070 --> 00:10:11.560
When do your customers
have money to spend?

00:10:11.560 --> 00:10:13.630
Well,
common time is right before the holiday

00:10:13.630 --> 00:10:15.560
season or right before back to school.

00:10:15.560 --> 00:10:18.760
It's at that point that advertisers
want to spend the most money on

00:10:18.760 --> 00:10:21.910
advertising because they want to
lock in those customers and get

00:10:21.910 --> 00:10:23.940
as much of their money as possible.

00:10:23.940 --> 00:10:26.160
After they've spent their money,
there's less interest in actually

00:10:26.360 --> 00:10:29.180
doing advertising because they know
they're not going to get any more money.

00:10:29.200 --> 00:10:32.300
So, as the seasons change,
as the time of the year changes,

00:10:32.430 --> 00:10:35.720
you're going to see your fill
rate vary just because advertisers

00:10:35.800 --> 00:10:39.190
are going to want to spend
more or less advertising money.

00:10:42.240 --> 00:10:46.940
So in terms of your own application,
what are the qualities of a

00:10:47.040 --> 00:10:50.850
successful application that
actually use advertising?

00:10:50.990 --> 00:10:50.990
Well,

00:10:51.360 --> 00:10:54.430
One of the most important
qualities is stability.

00:10:54.670 --> 00:10:57.030
If a user launches your
application and it crashes,

00:10:57.030 --> 00:11:00.570
or they're using your application and
something doesn't work quite right,

00:11:00.610 --> 00:11:02.800
they're going to use
your application less,

00:11:02.920 --> 00:11:04.780
they're not going to
get as much out of it,

00:11:04.860 --> 00:11:07.180
and more importantly,
if they're in the middle of

00:11:07.180 --> 00:11:10.510
experiencing one of these great
iAds and your application crashes,

00:11:10.510 --> 00:11:12.890
they're going to be
pulled out of that ad.

00:11:13.720 --> 00:11:16.300
So you really want to make sure that
your app is as stable as possible,

00:11:16.300 --> 00:11:19.120
and we've got a session tomorrow
morning improving the stability of

00:11:19.150 --> 00:11:21.850
your application that if you have
any issues or any questions you

00:11:21.850 --> 00:11:24.400
want to ask of those engineers,
I recommend you go over there

00:11:24.400 --> 00:11:25.900
and take a look at that session.

00:11:28.530 --> 00:11:32.120
Next quality is your application
itself should be engaging.

00:11:32.190 --> 00:11:33.870
Our iAds are highly engaging.

00:11:33.920 --> 00:11:37.290
People love to go in them and take
a look and see what they can see.

00:11:37.290 --> 00:11:39.800
But your application
should also be engaging.

00:11:39.910 --> 00:11:42.470
That means that they're
going to spend more time,

00:11:42.640 --> 00:11:44.820
like we said earlier,
and the more time they

00:11:44.820 --> 00:11:48.240
spend in your application,
the more times they launch it a day,

00:11:48.240 --> 00:11:51.110
the more integrated it is
in their own daily routine,

00:11:51.110 --> 00:11:54.410
the more ads you're going to request,
the more ads that they're

00:11:54.410 --> 00:11:57.710
going to actually see,
and the more money you're going to make.

00:11:59.190 --> 00:12:02.530
And finally,
even if you have that great engaging

00:12:02.610 --> 00:12:05.770
app and that really stable app,
you really need to get the word out.

00:12:05.780 --> 00:12:09.160
You need to make sure that you have
those loyal and active customers.

00:12:09.160 --> 00:12:12.540
These are the people that will take
your app out at a dinner party,

00:12:12.630 --> 00:12:15.430
show it to all their friends,
tell them how to get it,

00:12:15.430 --> 00:12:18.080
and just grow your application's network.

00:12:18.080 --> 00:12:20.730
So you want to make sure that you
can pull in as many of those loyal

00:12:20.730 --> 00:12:23.480
active users as you possibly can,
because that'll mean that more

00:12:23.480 --> 00:12:26.030
people are running your app,
you're making more requests,

00:12:26.140 --> 00:12:29.080
you're getting more ads,
and you're making more money.

00:12:29.100 --> 00:12:30.640
more money.

00:12:32.310 --> 00:12:34.650
And so with that,
let's switch over to actually

00:12:34.650 --> 00:12:39.010
the first part of implementation,
configuring the iAd Network.

00:12:44.330 --> 00:12:48.390
The first thing you want to do is
go into iTunes Connect and make

00:12:48.400 --> 00:12:50.700
sure you accept the iAd contract.

00:12:50.740 --> 00:12:54.700
If you don't accept the contract,
nothing else will actually

00:12:54.700 --> 00:12:56.260
be available to you.

00:12:57.750 --> 00:13:02.440
All you do is you request the contract,
a PDF will pop up,

00:13:02.450 --> 00:13:03.420
and you sign a digital.

00:13:06.180 --> 00:13:09.320
The next thing is you want to make
sure that you properly configure the

00:13:09.460 --> 00:13:11.340
primary audience for your application.

00:13:11.430 --> 00:13:15.590
This is a hint to us as to what
your application is targeting,

00:13:15.640 --> 00:13:19.410
what users there are,
and what kind of ad content we should

00:13:19.410 --> 00:13:22.220
actually display in that application.

00:13:22.980 --> 00:13:26.450
You can either set it to yes or no,
but be aware that if you set it to yes,

00:13:26.590 --> 00:13:29.700
that you are targeting those users
that are under the age of 17,

00:13:29.810 --> 00:13:31.400
you cannot change it
for that application.

00:13:31.400 --> 00:13:34.270
In order to change it,
you actually have to resubmit the

00:13:34.270 --> 00:13:37.540
application under a new bundle
identifier and basically start

00:13:37.540 --> 00:13:39.330
over with your customer base.

00:13:39.450 --> 00:13:41.390
So make sure you set this
correctly the first time.

00:13:41.390 --> 00:13:44.870
We want you to do this honestly,
but we can't change it afterwards.

00:13:44.880 --> 00:13:46.940
So make sure that you set it correctly.

00:13:49.420 --> 00:13:52.500
And finally, you want to enable iAds.

00:13:52.530 --> 00:13:56.140
This is what actually lets you
get ads in your application once

00:13:56.140 --> 00:13:58.830
you've published to the App Store.

00:13:59.180 --> 00:14:00.730
If you haven't done
that before submission,

00:14:00.730 --> 00:14:02.290
then you're going to have to resubmit.

00:14:02.380 --> 00:14:05.120
You're going to have to enable iAds,
resubmit your application,

00:14:05.170 --> 00:14:08.040
go through iAd App Review again
in order to get this enabled.

00:14:08.040 --> 00:14:08.940
So make sure you do it.

00:14:09.020 --> 00:14:11.510
I would recommend that as soon
as you decide you're going to

00:14:11.510 --> 00:14:14.760
integrate iAd into your application,
just go into the portal and do this.

00:14:19.120 --> 00:14:20.560
So what will you see?

00:14:20.600 --> 00:14:22.940
Well,
while you're developing your application,

00:14:22.940 --> 00:14:25.080
you're running it in the simulator,
or you're running it on your own

00:14:25.080 --> 00:14:28.620
device with a development certificate,
you're going to see test ads.

00:14:28.640 --> 00:14:31.410
And we intentionally vary the fill rate,
because we want to make sure

00:14:31.410 --> 00:14:34.580
that you can test the case,
both when you do and don't get an ad.

00:14:34.740 --> 00:14:36.480
So you'll see test ads.

00:14:36.500 --> 00:14:39.290
You won't see them all the time,
but be aware that you'll only

00:14:39.400 --> 00:14:40.700
see them in your development.

00:14:40.840 --> 00:14:43.000
Once you actually publish
your app to the App Store,

00:14:43.070 --> 00:14:45.900
and your users and customers start
downloading and using the app,

00:14:46.020 --> 00:14:47.490
they will always see live ads.

00:14:47.750 --> 00:14:50.960
So you don't have to worry about
any kind of configuration for that.

00:14:51.020 --> 00:14:52.300
They'll get live ads.

00:14:52.300 --> 00:14:54.390
You're going to get test ads.

00:14:55.950 --> 00:14:58.210
And with that,
we'll actually get into doing the

00:14:58.340 --> 00:15:01.080
code at iAd to your application.

00:15:04.800 --> 00:15:08.450
The iAd framework provides two classes,
the AD Banner View and

00:15:08.570 --> 00:15:12.160
the AD Interstitial Ad,
to actually provide content and that

00:15:12.160 --> 00:15:14.780
from advertisers in your application.

00:15:15.590 --> 00:15:18.960
The iAd Banner View is this
traditional small banner.

00:15:19.180 --> 00:15:22.780
You place it at the bottom of your UI,
users can tap on it,

00:15:22.790 --> 00:15:25.930
and they'll go into a
full ad when they do.

00:15:26.220 --> 00:15:33.710
We introduced this on iOS 4.0 and
we brought out the iPad on iOS 4.2.

00:15:34.100 --> 00:15:36.240
And it automatically cycles in new ads.

00:15:36.250 --> 00:15:38.400
Once you've created one of these,
it'll make requests on

00:15:38.400 --> 00:15:40.840
the network periodically,
get new ads,

00:15:40.930 --> 00:15:44.230
and all you have to do is listen to
the delegate methods and display it.

00:15:44.230 --> 00:15:47.080
And for those delegate methods,
that's the AD banner

00:15:47.080 --> 00:15:48.560
view delegate protocol.

00:15:48.560 --> 00:15:50.830
So that's how you
communicate with the banner,

00:15:50.830 --> 00:15:52.230
and that's what those are.

00:15:54.040 --> 00:15:56.560
The other one, the iAd Interstitial ad,
provides what we call

00:15:56.790 --> 00:15:57.660
full screen banners.

00:15:57.830 --> 00:16:01.130
These are basically like
pages in a magazine.

00:16:02.260 --> 00:16:08.980
We introduced this with iOS 4.3,
and these are available on iPad only.

00:16:09.600 --> 00:16:11.500
They provide persistent content.

00:16:11.500 --> 00:16:13.940
What that means is that we'll go
ahead and we'll fetch a banner,

00:16:14.060 --> 00:16:17.570
and if we're successful,
that banner is in your application

00:16:17.570 --> 00:16:19.330
for a long period of time.

00:16:19.750 --> 00:16:23.570
You can use it, reuse it,
and do a few special things with it.

00:16:23.790 --> 00:16:26.570
And similar to the banner view,
it communicates with the

00:16:26.570 --> 00:16:29.580
interstitial ad delegate protocol.

00:16:29.580 --> 00:16:31.190
So how do we actually use these?

00:16:31.400 --> 00:16:35.660
And we'll start with the banner view.

00:16:36.930 --> 00:16:38.800
The first thing, of course,
is banner placement.

00:16:38.800 --> 00:16:40.240
Where are we going to put this in our UI?

00:16:40.240 --> 00:16:43.080
Well,
you don't want to put it in the center.

00:16:43.080 --> 00:16:44.880
If you put it in the
middle of your content,

00:16:44.880 --> 00:16:46.720
then your users are
going to get frustrated,

00:16:46.870 --> 00:16:49.590
either because they want to work
with your application and they're

00:16:49.590 --> 00:16:52.800
accidentally tapping on a banner that
they're then going to have to close and

00:16:52.800 --> 00:16:55.800
you're not going to get any revenue for,
or they're going to want to work

00:16:55.800 --> 00:16:58.570
with the banner and accidentally
do something in your application

00:16:58.660 --> 00:17:00.480
that they're going to have to undo.

00:17:00.480 --> 00:17:02.200
It basically is just a mess.

00:17:02.660 --> 00:17:05.850
Always make sure that you place
it away from your content.

00:17:05.860 --> 00:17:08.920
We recommend at the bottom
of your application.

00:17:08.920 --> 00:17:12.830
And of course, to accommodate both
portrait and landscape UIs,

00:17:12.910 --> 00:17:16.540
the banner can be configured
to one of two sizes for either

00:17:16.590 --> 00:17:18.840
portrait or landscape layouts.

00:17:21.170 --> 00:17:26.500
Creating a banner is as easy as can be.

00:17:26.920 --> 00:17:28.900
You just alloc and edit.

00:17:29.100 --> 00:17:30.400
And you set the delegate.

00:17:30.420 --> 00:17:32.500
In this case,
we've got a very simple application.

00:17:32.500 --> 00:17:37.440
It's just got one view controller,
and it manages the whole UI.

00:17:37.440 --> 00:17:40.350
So we're just going to use
that view controller to manage

00:17:40.400 --> 00:17:42.310
those same delegate protocols.

00:17:43.280 --> 00:17:46.570
Now, when you actually do get content,
we're going to send you a

00:17:46.570 --> 00:17:50.300
variety of messages so that
you can react appropriately.

00:17:50.890 --> 00:17:54.540
New on iOS 5,
the first message we're going to send

00:17:54.540 --> 00:17:57.020
is this banner view will load message.

00:17:57.020 --> 00:18:01.520
We only send that on 5,
so if you're targeting earlier releases,

00:18:01.520 --> 00:18:02.480
you'll have to do something else.

00:18:02.550 --> 00:18:06.300
But we added this particular method
because a lot of our developers said,

00:18:06.380 --> 00:18:08.930
well,
I want to display house ads or ads from

00:18:08.930 --> 00:18:12.510
another network while also using iAd,
but iAd might take a little bit

00:18:12.590 --> 00:18:13.770
before it gets content to me.

00:18:13.780 --> 00:18:18.480
So this method is called as
soon as possible after we get a

00:18:18.480 --> 00:18:21.230
response from the server saying,
we've got an ad on the way,

00:18:21.240 --> 00:18:25.460
so if you want to display iAd,
this is a great time to do so.

00:18:25.460 --> 00:18:29.600
We recommend that you lead with iAd,
so if you get this message,

00:18:29.600 --> 00:18:32.600
we recommend that anything
else that you want to display,

00:18:32.600 --> 00:18:34.850
you put it off and you go
ahead and display your iAd.

00:18:34.880 --> 00:18:38.720
But not just yet, because the next method
that you'll get...

00:18:41.330 --> 00:18:43.900
is this banner view did load add.

00:18:43.920 --> 00:18:46.630
And what that means is that we've gone,
we've gotten all that

00:18:46.630 --> 00:18:48.640
content from the server,
we've prepared it,

00:18:48.740 --> 00:18:50.420
and it's ready to display to the user.

00:18:50.690 --> 00:18:56.640
Now is the time for you to
add that banner to your UI.

00:18:56.680 --> 00:19:01.290
Animated in, it's displayed to the user,
and you'll get that impression.

00:19:01.930 --> 00:19:04.700
Now, we'll continue to make
requests for new ads,

00:19:04.820 --> 00:19:07.570
and we might not be successful,
in which case we'll send you

00:19:07.800 --> 00:19:10.660
this banner view did fail to
receive ad with error method.

00:19:10.670 --> 00:19:15.540
That's your cue to pull the banner
out of your UI and hide it so that

00:19:15.540 --> 00:19:18.280
the users don't see a blank space.

00:19:18.350 --> 00:19:21.220
That's all that is to
handling those content events,

00:19:21.220 --> 00:19:22.590
those three methods.

00:19:23.660 --> 00:19:27.640
Now the next thing is if you've
got that portrait and landscape UI,

00:19:27.640 --> 00:19:31.200
you're going to want to make sure that
you size the banner correctly for both.

00:19:31.330 --> 00:19:36.140
So in your will animate rotation
interface orientation method,

00:19:36.140 --> 00:19:38.620
this is really all you have to
do to make sure the banner is the

00:19:38.620 --> 00:19:41.390
correct size for either portrait,

00:19:42.090 --> 00:19:43.400
or landscape.

00:19:43.420 --> 00:19:47.050
Just make sure that you check what the
new orientation is and set the banner's

00:19:47.130 --> 00:19:51.300
current contents identifier appropriately
for either portrait or landscape.

00:19:51.330 --> 00:19:54.860
You then have to just go ahead
and rearrange the rest of your

00:19:54.860 --> 00:19:58.890
UI as appropriate and the banner
view will integrate nicely.

00:20:02.230 --> 00:20:05.610
So as we've said earlier,
we're all interested in users

00:20:05.610 --> 00:20:08.470
actually tapping on that
banner and interacting with it.

00:20:08.570 --> 00:20:10.190
So how do you know when that's happened?

00:20:10.210 --> 00:20:13.880
Well, when the user taps on the banner,
we'll send you this action

00:20:14.010 --> 00:20:15.380
should begin method.

00:20:15.380 --> 00:20:20.420
And that's your cue to make your
application as amenable to that ad unit

00:20:20.420 --> 00:20:23.560
popping up for the user to interact with.

00:20:23.650 --> 00:20:24.560
And what does that mean?

00:20:24.560 --> 00:20:26.900
Well, very shortly,
a view controller is going to be

00:20:26.900 --> 00:20:28.600
presented over your application.

00:20:28.600 --> 00:20:32.070
So you should make sure that
you reduce your memory usage.

00:20:32.100 --> 00:20:34.550
Anything that you're
doing in the background,

00:20:34.550 --> 00:20:35.840
you want to settle it down.

00:20:36.140 --> 00:20:39.120
Any network access you're doing,
you probably want to stop it or pause it.

00:20:39.120 --> 00:20:42.410
And you just want to make sure
that your application is doing

00:20:42.410 --> 00:20:45.970
as little as possible because you
want the user to have as great an

00:20:46.040 --> 00:20:50.030
experience in that iAd as they've
been having in your application.

00:20:50.250 --> 00:20:53.120
The more you do to quiesce
what your application is doing,

00:20:53.230 --> 00:20:56.080
the faster the iAd will load,
the more likely the user is

00:20:56.080 --> 00:20:59.260
going to want to stay with it,
and the more time and fun they're

00:20:59.260 --> 00:21:00.700
going to have with the iAd.

00:21:01.050 --> 00:21:03.800
So you want to make sure that
when you get this message,

00:21:03.800 --> 00:21:06.650
you quiesce everything that
your application is doing

00:21:06.650 --> 00:21:08.360
and go ahead and return yes.

00:21:08.380 --> 00:21:14.390
Once you do that,
the advertisement pops up.

00:21:16.430 --> 00:21:19.830
And the user will interact with it,
spend as much time as they desire,

00:21:19.980 --> 00:21:22.960
and when they're done,
they'll eventually hit that

00:21:22.960 --> 00:21:26.160
close box or the home button and
come back to your application,

00:21:26.180 --> 00:21:29.460
at which point we'll send the banner
view action to finish message.

00:21:29.480 --> 00:21:31.700
Again,
this is your opportunity now to start

00:21:31.810 --> 00:21:35.100
up all those activities you were
doing before and get your app going

00:21:35.100 --> 00:21:38.600
so that the user can have as great
a time as they were having before.

00:21:40.340 --> 00:21:42.240
Now, finally,
we want to talk a little bit

00:21:42.310 --> 00:21:45.840
more about that did fail to
receive ad with error message.

00:21:45.890 --> 00:21:49.160
Now, as we said before,
the absolute minimum thing that you

00:21:49.200 --> 00:21:50.550
need to do is hide the banner view.

00:21:50.780 --> 00:21:52.810
If you do nothing else,
then you're golden.

00:21:52.810 --> 00:21:58.180
But while you're debugging
your application,

00:21:58.400 --> 00:22:00.930
you might be interested in what
the particular error you're getting

00:22:00.930 --> 00:22:00.930
back is and what it means to you.

00:22:01.650 --> 00:22:07.190
So these are all the possible errors
that iAd can return to your application.

00:22:08.180 --> 00:22:10.270
But we're going to focus on
these four because they're the

00:22:10.270 --> 00:22:13.060
most important ones to you.

00:22:13.130 --> 00:22:15.780
This first one, inventory unavailable.

00:22:15.840 --> 00:22:18.210
It's an error,
but it's not really an error.

00:22:18.450 --> 00:22:22.200
All it means is that we made
a request on the iAd Network,

00:22:22.270 --> 00:22:23.340
but we couldn't get a banner.

00:22:23.410 --> 00:22:25.980
There isn't one available right now.

00:22:26.030 --> 00:22:28.570
And there's not going to
be for a little moment.

00:22:28.820 --> 00:22:32.050
So we want you to just hide
that banner view and do whatever

00:22:32.530 --> 00:22:34.060
else you're going to do.

00:22:34.200 --> 00:22:37.040
So just make sure that,
as with all errors,

00:22:37.270 --> 00:22:40.090
We hide the banner view,
and this is good.

00:22:40.800 --> 00:22:44.200
The next one you might get
is configuration error.

00:22:44.260 --> 00:22:47.070
That typically means that
you forgot to go into iTunes

00:22:47.160 --> 00:22:50.930
Connect and actually enable iAd
before submitting to the App Store.

00:22:51.120 --> 00:22:55.270
So if you get this error,
and obviously if you're in

00:22:55.270 --> 00:23:00.120
production it's going to be a
little hard to figure it out,

00:23:00.230 --> 00:23:04.120
but if you get this error,
make sure you go back into iTunes

00:23:04.120 --> 00:23:04.120
Connect and you enable iAds
and resubmit your application.

00:23:05.400 --> 00:23:08.730
This next one basically means
that you didn't hide the banner

00:23:08.730 --> 00:23:10.180
view when we asked you to.

00:23:10.240 --> 00:23:13.000
And so we're just going to keep sending
this until you hide the banner view.

00:23:13.210 --> 00:23:16.380
So if you see this error,
it means that some part of your logic

00:23:16.390 --> 00:23:18.710
in hiding the banner view isn't working.

00:23:18.920 --> 00:23:22.700
So correct that,
and you won't see this error anymore.

00:23:23.790 --> 00:23:28.200
Now this final one means that you're
making too many requests too quickly.

00:23:28.200 --> 00:23:31.240
You've got too many banner
views in your application.

00:23:31.290 --> 00:23:34.060
Now we recommend that you
just use a single banner.

00:23:34.330 --> 00:23:38.920
Share it with all the view controllers
that are going to display it and not have

00:23:38.920 --> 00:23:41.640
to worry about this error ever occurring.

00:23:41.770 --> 00:23:45.400
And to get you started with that,
we're going to switch to a demo and show

00:23:45.490 --> 00:23:50.000
you how to share a banner view with all
the view controllers of your application.

00:24:08.930 --> 00:24:13.320
So right now,
we have this simple little application.

00:24:13.360 --> 00:24:15.510
And all it's got is two tabs.

00:24:23.880 --> 00:24:25.380
Obviously that doesn't
do a whole lot of work,

00:24:25.380 --> 00:24:26.700
but it does something.

00:24:26.740 --> 00:24:29.110
And the other one just shows a text view.

00:24:29.240 --> 00:24:32.700
And it supports all these orientations,
so all that's good.

00:24:32.740 --> 00:24:35.080
But it's a very simple application,
and we just want to add

00:24:35.170 --> 00:24:36.380
an iAd banner to it.

00:24:36.450 --> 00:24:40.280
So let's go ahead and take a look at how
to do that while sharing that same banner

00:24:40.280 --> 00:24:42.510
between both of these view controllers.

00:24:43.390 --> 00:24:47.730
So the first thing, of course,
we want to do is add the iAd

00:24:47.730 --> 00:24:50.530
framework to our application.

00:24:50.690 --> 00:24:55.400
And we're going to use the application
delegate to manage this banner view.

00:24:55.450 --> 00:24:59.300
And so it's going to be the
AD Banner View delegate.

00:25:09.300 --> 00:25:10.980
And finally,
we're going to declare our own

00:25:10.980 --> 00:25:14.770
little protocol on top of it
that's going to manage when a

00:25:14.770 --> 00:25:17.120
banner view shows and hides.

00:25:17.120 --> 00:25:20.420
Now we've got these two methods,
the showBannerView and hideBannerView

00:25:20.420 --> 00:25:24.080
that we're going to send whenever
the banner has content that

00:25:24.080 --> 00:25:26.190
we're ready for the user to see.

00:25:26.790 --> 00:25:30.840
And similarly, we've got these couple
of optional methods.

00:25:30.920 --> 00:25:33.460
So if we've got a view controller,
like you saw that progress controller,

00:25:33.770 --> 00:25:37.040
that does work, and we want it to stop
when the ad's coming up,

00:25:37.140 --> 00:25:41.110
we send these messages so that those
controllers can stop what they're

00:25:41.140 --> 00:25:43.590
doing and restart what they're doing.

00:25:48.320 --> 00:25:50.740
So to help with this,
we're going to implement-- we're

00:25:50.740 --> 00:25:52.640
going to forward a few things.

00:25:52.780 --> 00:25:56.860
We're going to keep our own little
banner view delegate method.

00:25:56.900 --> 00:26:01.750
And we're going to maintain a
reference to whatever the current

00:26:01.750 --> 00:26:02.920
controller that we're showing is.

00:26:03.050 --> 00:26:05.480
So that tab bar has two
view controllers in it.

00:26:05.520 --> 00:26:08.330
And we're just going to say,
this is a view controller that knows

00:26:08.330 --> 00:26:09.700
about the banner view container.

00:26:09.700 --> 00:26:11.870
And so we're just going to
keep that reference so that

00:26:11.870 --> 00:26:14.010
whenever we have a message,
we don't have to keep going back to the

00:26:14.010 --> 00:26:16.520
tab bar and doing a lot of type casts.

00:26:16.520 --> 00:26:20.000
And of course, we're going to synthesize
those properties.

00:26:22.740 --> 00:26:24.620
We're going to create the banner view.

00:26:24.700 --> 00:26:27.800
So as you see,
we just go ahead and allocate an edit.

00:26:27.830 --> 00:26:32.440
And we're going to set the frame
of the banner view so that it's

00:26:32.440 --> 00:26:35.240
sitting off the bottom of our UI.

00:26:35.240 --> 00:26:39.020
We do this because otherwise
it'll be at the top,

00:26:39.020 --> 00:26:44.260
and when it animates in the first time,
it won't look quite right.

00:26:44.260 --> 00:26:46.630
So we just want to make sure
we place it at a location

00:26:46.630 --> 00:26:46.630
that when it does animate in,
it does what we expect.

00:26:49.450 --> 00:26:51.910
Finally,
we're just going to make a reference

00:26:52.010 --> 00:26:56.440
of whatever the current control
of the tab bar is referencing so

00:26:56.440 --> 00:26:59.190
that we can reference that later.

00:26:59.480 --> 00:27:02.710
Now the UI tab bar controller
has a delegate protocol,

00:27:02.710 --> 00:27:05.670
and we're going to use a method
on that-- tab bar controller did

00:27:05.680 --> 00:27:08.810
select view controller-- to know
when the user taps on that tab bar to

00:27:08.810 --> 00:27:10.800
select a different view controller.

00:27:10.840 --> 00:27:13.720
Now the first thing we have to
be aware of is that the tab bar

00:27:13.810 --> 00:27:17.320
controller will send this message
regardless of whether or not the

00:27:17.400 --> 00:27:19.330
view controller actually changes.

00:27:19.410 --> 00:27:22.650
So we're just going to check to
see if the new view controller--

00:27:22.650 --> 00:27:25.660
if it's the same as the one
that we're already looking at,

00:27:25.660 --> 00:27:26.270
we're just going to return and
not do anything additional.

00:27:26.750 --> 00:27:30.870
But if the banner view is loaded
and we're changing controllers,

00:27:30.870 --> 00:27:34.310
then we want the old controller
to hide that banner view and

00:27:34.310 --> 00:27:36.290
the new controller to show it.

00:27:36.350 --> 00:27:37.980
And so we do that.

00:27:38.010 --> 00:27:40.280
And for the other methods
we're going to implement,

00:27:40.320 --> 00:27:43.910
we go ahead and remember that view
controller that we just switched to.

00:27:48.910 --> 00:27:52.030
Next, we're going to implement our
content notification methods.

00:27:52.170 --> 00:27:54.180
So we've got banner view will load ad.

00:27:54.220 --> 00:27:56.820
We aren't showing anything
else in this simple example.

00:27:56.920 --> 00:28:02.320
So we're just going to note that
this method was called by logging it.

00:28:02.360 --> 00:28:04.050
We've got banner view did load ad.

00:28:04.290 --> 00:28:06.760
So we know now that when
we get this message,

00:28:06.810 --> 00:28:09.280
the banner view has loaded
content and is ready for display.

00:28:09.320 --> 00:28:12.000
And so we're just going to tell the
current controller to go ahead and show

00:28:12.110 --> 00:28:14.650
it to the user so we get that impression.

00:28:15.160 --> 00:28:17.600
And finally,
this did fail to receive add with error

00:28:17.600 --> 00:28:22.710
method so that when we don't get an ad,
we can hide it.

00:28:24.850 --> 00:28:27.920
And finally, because the delegate's
going to receive everything,

00:28:27.920 --> 00:28:31.700
we need to implement the action should
begin and action did finish messages.

00:28:31.700 --> 00:28:35.470
Now in our protocol, those were optional,
so we just make sure that the current

00:28:35.630 --> 00:28:37.700
controller actually responds to that.

00:28:37.700 --> 00:28:41.930
And if it does, we'll tell it the banner
view began an action or the

00:28:41.930 --> 00:28:44.210
banner view action finished.

00:28:45.590 --> 00:28:47.900
And so now,
we just need to go ahead and go into

00:28:47.900 --> 00:28:53.930
our two view controllers and implement
all of those delegate methods.

00:28:54.050 --> 00:28:58.250
So of course, we import our delegate,
and we conform to the

00:28:58.250 --> 00:29:00.410
protocol that we created.

00:29:03.300 --> 00:29:05.570
And we're going to add some
new forward declarations to

00:29:05.570 --> 00:29:08.100
the one that already exists.

00:29:08.100 --> 00:29:10.730
So in order to do the layout,
if the user's interface

00:29:10.730 --> 00:29:12.820
orientation changes,
we have to keep a reference

00:29:12.930 --> 00:29:13.690
to that banner view.

00:29:13.980 --> 00:29:15.580
So we do.

00:29:18.860 --> 00:29:22.460
We go ahead and synthesize
the property for that.

00:29:22.500 --> 00:29:26.440
Now, we already went and implemented this
layout for current orientation method,

00:29:26.500 --> 00:29:29.310
but it doesn't need to do anything
right now because all the content

00:29:29.370 --> 00:29:32.840
is being taken care of in Interface
Builder using springs and struts.

00:29:32.890 --> 00:29:35.100
But now that we're adding a banner view,
we need to actually be

00:29:35.100 --> 00:29:36.720
able to relay out content.

00:29:37.050 --> 00:29:39.790
So we're going to go
ahead and add that method.

00:29:40.750 --> 00:29:45.170
And it looks like a bit of code,
but really all it's doing is it's saying,

00:29:45.170 --> 00:29:48.540
if we have a banner view,
then we're going to figure out what's,

00:29:48.540 --> 00:29:51.660
we're going to set the current
content size appropriately,

00:29:51.660 --> 00:29:54.110
and we're going to ask how tall is it.

00:29:54.170 --> 00:29:59.300
And if it's loaded a banner,
then we're just going to make some room

00:29:59.300 --> 00:30:02.520
in our UI so that the banner can appear.

00:30:02.520 --> 00:30:07.740
And if it isn't loaded,
we're going to animate that banner off.

00:30:07.830 --> 00:30:09.590
And then we just do our usual
animation block to actually

00:30:09.590 --> 00:30:10.580
make it look like a banner.

00:30:10.600 --> 00:30:12.910
move the banner on or off screen.

00:30:16.530 --> 00:30:20.330
And finally,
we're going to implement those delegate

00:30:20.390 --> 00:30:23.680
methods that we already described.

00:30:23.770 --> 00:30:26.880
So when we get the show
banner view message,

00:30:26.900 --> 00:30:29.260
we're going to remember
the banner view we got,

00:30:29.260 --> 00:30:33.580
add it as a subview to the tab bar,
and do layout so that the banner

00:30:33.580 --> 00:30:36.050
view will appear as appropriate.

00:30:36.170 --> 00:30:42.360
Similarly, for hide banner view,
we're going to remove it from our view,

00:30:42.380 --> 00:30:43.310
forget the reference,
and do layout again.

00:30:44.360 --> 00:30:46.300
So that's it for the TextView controller.

00:30:46.300 --> 00:30:50.020
And we're going to do something very
similar for our Progress controller.

00:30:50.020 --> 00:30:50.670
Implement that.

00:30:50.800 --> 00:31:00.680
And add the forward declaration.

00:31:08.200 --> 00:31:09.020
and do our layout.

00:31:09.020 --> 00:31:11.140
And this is the same
layout code we had before.

00:31:11.140 --> 00:31:20.680
And the same methods for
showing and hiding the banner.

00:31:20.690 --> 00:31:24.400
Now this particular view controller,
however, also runs a timer that

00:31:24.450 --> 00:31:26.400
updates that progress bar.

00:31:26.500 --> 00:31:29.590
So what we want to make sure we do is
when the user actually goes into an ad,

00:31:29.620 --> 00:31:33.580
we want to stop that timer,
reduce our usage as much as possible.

00:31:33.640 --> 00:31:35.520
And to do that,
we're going to implement those

00:31:35.520 --> 00:31:39.940
optional methods we created to
just stop and start the timer.

00:31:39.970 --> 00:31:43.200
So now that we've got all
of this taken care of,

00:31:43.200 --> 00:31:46.020
let's go ahead and take a
look at what that looks like.

00:31:47.560 --> 00:31:54.020
So we just loaded the ad,
and we should be showing the ad.

00:32:01.100 --> 00:32:03.140
There's the ad.

00:32:03.140 --> 00:32:04.660
And we go back here.

00:32:04.670 --> 00:32:08.130
And now if we click on it,
watch the progress bar for a moment,

00:32:08.130 --> 00:32:11.650
and you'll see that it pauses
right before the ad comes in.

00:32:12.040 --> 00:32:15.050
And when we close it,
it starts up again afterwards.

00:32:15.160 --> 00:32:18.410
So that's what you want to make
sure that your application does when

00:32:18.410 --> 00:32:22.930
the user enters and exits an ad,
that you go ahead and stop all

00:32:22.930 --> 00:32:25.420
those activities that might
take a little more CPU time,

00:32:25.420 --> 00:32:28.600
a little more memory,
so that the user can have as great

00:32:28.600 --> 00:32:32.730
an experience in the ad as possible.

00:32:32.770 --> 00:32:35.100
And so with that,
we'll go back to slides.

00:32:39.960 --> 00:32:42.120
So now that you've seen
how to share a banner view,

00:32:42.140 --> 00:32:44.940
let's go ahead and talk a little
bit more about the other object

00:32:45.060 --> 00:32:49.170
that the iAd framework prevents,
the interstitial ad.

00:32:49.840 --> 00:32:52.660
Now the interstitial ad is
very simple to create too.

00:32:52.840 --> 00:32:54.230
You do the same thing,
just allocate an edit

00:32:54.520 --> 00:32:56.410
and set the delegate.

00:32:57.310 --> 00:33:00.860
Now, there are two different methods
for displaying the interstitial,

00:33:00.860 --> 00:33:04.180
however, and this will really depend on
what kind of application you have,

00:33:04.180 --> 00:33:05.940
what the UI of your application is.

00:33:06.050 --> 00:33:09.800
The first one we have is this
inline presentation style,

00:33:09.930 --> 00:33:12.590
and that's intended for if you've
got like a magazine or a book

00:33:12.780 --> 00:33:15.860
where you've got lots of other
content that is also page-like,

00:33:15.860 --> 00:33:20.590
and the user will page through and go on,
and they'll just keep swiping through,

00:33:20.810 --> 00:33:22.920
and they'll see an interstitial.

00:33:23.430 --> 00:33:27.080
The other presentation
style is what we call modal.

00:33:27.100 --> 00:33:32.610
And so that would be perhaps if you have
a game or some other application where

00:33:32.940 --> 00:33:36.080
there's a break in whatever is going on,
and you want to just

00:33:36.080 --> 00:33:39.970
show it interstitially,
see about our sponsors type of page.

00:33:39.970 --> 00:33:45.150
And that presents as a view controller,
takes over the UI, and will dismiss after

00:33:45.150 --> 00:33:46.880
the user is done with it.

00:33:47.460 --> 00:33:48.520
So how do you do this?

00:33:48.520 --> 00:33:50.900
Well, we envision that in an
inline presentation,

00:33:50.900 --> 00:33:54.660
you're going to want to display this
interstitial as soon as you get it.

00:33:54.720 --> 00:33:57.280
So you implement the
interstitial add to load message,

00:33:57.530 --> 00:34:01.370
and you use this present in view
method on some view that you'll

00:34:01.370 --> 00:34:03.780
create to contain the interstitial.

00:34:04.010 --> 00:34:08.120
You go ahead and you add
that to your view hierarchy,

00:34:08.120 --> 00:34:10.610
and then as the user pages
around in your content,

00:34:12.200 --> 00:34:15.220
They'll see the interstitial
and they can go back to it.

00:34:15.250 --> 00:34:18.170
Remember, these are interst-- these are--

00:34:18.780 --> 00:34:20.410
These are persistent banners.

00:34:20.660 --> 00:34:23.880
So they take over the full screen,
but they last for a long time.

00:34:24.190 --> 00:34:27.160
So as the users go back and forth
in your UI and they pass by it,

00:34:27.500 --> 00:34:30.270
they'll see the same
interstitial again and again.

00:34:31.370 --> 00:34:36.230
In the other presentation style, however,
they're kind of more one shot.

00:34:36.380 --> 00:34:39.950
So you don't care about exactly
when the interstitial loaded.

00:34:40.070 --> 00:34:42.660
You just want to know if it's
actually been loaded or not.

00:34:42.730 --> 00:34:45.880
And so we've got this loaded
property that you can check and say,

00:34:45.960 --> 00:34:47.740
OK, the interstitial is loaded.

00:34:47.900 --> 00:34:51.220
So I'm going to go ahead and present
it from your view controller.

00:34:51.220 --> 00:34:54.260
It'll slide up, take over the UI,
and when the user's done,

00:34:54.370 --> 00:34:55.730
they can dismiss it.

00:34:57.090 --> 00:35:01.490
Just like with the banner view,
there's this actionShouldBegin

00:35:01.720 --> 00:35:07.170
method that is called before the
full interstitials banner is shown.

00:35:08.030 --> 00:35:11.280
After that method gets called,
they go into the full ad unit,

00:35:11.450 --> 00:35:14.740
they do whatever they would
do just like the banner view,

00:35:14.710 --> 00:35:18.120
And when they're done,
you'll get this action to finish.

00:35:18.130 --> 00:35:19.300
All the same applies.

00:35:19.300 --> 00:35:21.700
A view controller is presented
over your application.

00:35:21.700 --> 00:35:25.220
You should quiesce all that activity
that you normally would do and just make

00:35:25.370 --> 00:35:29.340
sure and prepare that the user can have
that great experience in the ad just like

00:35:29.340 --> 00:35:31.780
they've been having in your application.

00:35:32.360 --> 00:35:35.930
And with that, we'll show how to add an
interstitial to a simple magazine

00:35:35.930 --> 00:35:38.890
app with the 80 Magazine sample.

00:35:50.270 --> 00:35:51.900
All right.

00:35:51.930 --> 00:35:56.900
So just like going, just like when you're
adding the banner view,

00:35:56.940 --> 00:35:59.090
you're going to want to import iAd.

00:35:59.740 --> 00:36:03.340
And whatever view controller is managing
it becomes the interstitial delegate.

00:36:03.360 --> 00:36:06.350
This is a very simple app
with a single view controller,

00:36:06.470 --> 00:36:07.260
so it can manage it.

00:36:07.440 --> 00:36:09.230
If you had a more
complicated application,

00:36:09.300 --> 00:36:12.140
you might do the same thing we
did with the shared banner view.

00:36:12.740 --> 00:36:16.380
And there are a few instance variables
that we're going to add as well just so

00:36:16.380 --> 00:36:18.580
that we can manage that interstitial.

00:36:18.620 --> 00:36:21.010
And that's the interstitial add.

00:36:24.700 --> 00:36:27.090
Now just like before,
we're going to declare a few

00:36:27.090 --> 00:36:31.730
methods that will manage the
interstitial and do some work for us.

00:36:45.750 --> 00:36:46.960
Let's go ahead and set
up the interstitial.

00:36:46.990 --> 00:36:50.590
That cycle interstitial method
that we just forward declared takes

00:36:50.900 --> 00:36:54.300
care of creating a new interstitial
and releasing the previous one

00:36:54.450 --> 00:36:56.740
that we might have created earlier.

00:36:56.740 --> 00:37:00.540
And we just set this as a flag to know
that we haven't actually inserted it yet.

00:37:23.890 --> 00:37:27.040
We add this, and as we said before,
all it does is it releases the old

00:37:27.040 --> 00:37:28.880
one and sets the delegate to nil.

00:37:28.910 --> 00:37:30.690
This way we won't get any
more messages from that.

00:37:30.690 --> 00:37:34.800
And it creates a new one and
similarly sets its delegate to self.

00:37:36.830 --> 00:37:40.840
Now, in order to actually add
the interstitial to our UI,

00:37:40.900 --> 00:37:44.540
we implement this
insertInterstitial method.

00:37:44.650 --> 00:37:47.930
And it's a bit of code,
but all it really is doing is

00:37:47.930 --> 00:37:51.770
making sure that we create a
view that's the right size,

00:37:51.820 --> 00:37:54.930
and we add a page in our
magazine to contain it,

00:37:54.930 --> 00:37:59.240
and then just insert that
interstitial using the presentInView

00:37:59.380 --> 00:38:01.770
method into our application.

00:38:05.070 --> 00:38:06.900
And finally,

00:38:10.400 --> 00:38:14.330
We just want to implement that
load method that we talked about,

00:38:14.330 --> 00:38:17.880
interstitial added load,
and it's just going to insert an

00:38:17.880 --> 00:38:20.540
interstitial into our application.

00:38:20.540 --> 00:38:23.770
So let's see what happens now
that we've got this implemented.

00:38:28.920 --> 00:38:31.350
As you can see,
it's just a simple application

00:38:31.470 --> 00:38:33.300
that pages through bunnies.

00:38:33.360 --> 00:38:36.740
And we now have loaded an interstitial.

00:38:36.750 --> 00:38:40.830
And you can page past
it and page back to it.

00:38:41.310 --> 00:38:44.700
And if the user taps on it,
they get the full interstitial iAd,

00:38:44.720 --> 00:38:47.880
just like with the banner view control,
with the banner view.

00:38:47.910 --> 00:38:50.320
So that's interstitials.

00:38:50.320 --> 00:38:51.980
And we'll go back to slides.

00:38:58.540 --> 00:39:01.650
So now that we've seen how
to add a banner view or an

00:39:01.650 --> 00:39:04.840
interstitial ad to your application,
let's get into a few best

00:39:04.840 --> 00:39:08.350
practices for when you're actually
using iAd in your application.

00:39:09.930 --> 00:39:13.720
So the first thing is,
you need to make sure that you

00:39:13.760 --> 00:39:15.860
manage memory warnings properly.

00:39:15.860 --> 00:39:19.320
Because while an ad is up,
it can use a considerable

00:39:19.320 --> 00:39:20.660
amount of memory.

00:39:20.660 --> 00:39:23.280
And you'll probably see memory
warnings while it's happening.

00:39:23.280 --> 00:39:27.520
So if you don't implement these properly,
you might get very strange interactions.

00:39:27.520 --> 00:39:30.860
And one of the most important things
that you need to make sure you do is that

00:39:30.860 --> 00:39:32.970
you don't release those IADD objects.

00:39:33.180 --> 00:39:36.200
Remember, those are your connection
to the framework.

00:39:36.200 --> 00:39:38.850
They're sending you those
delegate messages that tell

00:39:38.850 --> 00:39:41.180
you when an ad is loaded,
when an action's begun,

00:39:41.180 --> 00:39:42.740
when an action's finished.

00:39:42.740 --> 00:39:45.440
If you release them while an ad
is currently being displayed,

00:39:45.440 --> 00:39:46.940
you'll never get the finish call.

00:39:46.940 --> 00:39:53.060
And all those things you paused when the
full ad unit popped up won't get resumed.

00:39:53.120 --> 00:39:57.020
So just make sure that you implement all
these correctly so that your application

00:39:57.020 --> 00:40:02.570
will resume and pick up right after
the user's finished looking at the ad.

00:40:04.200 --> 00:40:09.280
Now, the next thing we've seen is that
sometimes people do things that are not

00:40:09.280 --> 00:40:10.540
quite right with their view controllers.

00:40:10.540 --> 00:40:13.980
Well, in iOS 4,
nesting view controllers just

00:40:14.040 --> 00:40:16.110
doesn't quite work right.

00:40:16.200 --> 00:40:20.920
There are a lot of kind of edge cases
and gotchas that you might not expect.

00:40:20.980 --> 00:40:24.290
And one of them is, as we said,
iAd's going to present a

00:40:24.290 --> 00:40:26.190
view controller over yours.

00:40:26.230 --> 00:40:28.950
If you're pulling iAd
from one view controller,

00:40:29.160 --> 00:40:32.140
but your UI is in another,
then we're going to present over

00:40:32.260 --> 00:40:34.080
the view controller from iAd.

00:40:34.100 --> 00:40:39.580
And that might mean that when
you come back out of the banner,

00:40:39.580 --> 00:40:43.300
that now suddenly the iAd
is at the top of the screen.

00:40:43.400 --> 00:40:46.040
Your entire screen is
covered by some other view.

00:40:46.040 --> 00:40:47.650
It just doesn't look right.

00:40:47.650 --> 00:40:51.320
So iOS 4 doesn't really
understand how to do that.

00:40:51.480 --> 00:40:53.300
So make sure that you
do what UIKit expects,

00:40:53.300 --> 00:40:56.000
which is that a view controller
represents the entire screen,

00:40:56.080 --> 00:40:58.150
and that you don't nest view controllers.

00:40:58.380 --> 00:41:02.020
There are alternatives to doing so if
you need to have reloadable content.

00:41:02.020 --> 00:41:04.080
But don't do that.

00:41:04.100 --> 00:41:06.120
So iOS 4 doesn't really
understand how to do that.

00:41:06.170 --> 00:41:08.660
So iAd takes a view from some other
view controller and add it to the

00:41:08.680 --> 00:41:10.240
view of one other view controller.

00:41:10.240 --> 00:41:13.920
Now, obviously on iOS 5,
we introduced view

00:41:14.300 --> 00:41:15.760
controller containment.

00:41:15.760 --> 00:41:18.370
Unfortunately,
that session was yesterday morning.

00:41:18.370 --> 00:41:21.040
So if you didn't manage to get it,
when the videos come out,

00:41:21.180 --> 00:41:22.560
go ahead and take a look at it.

00:41:22.660 --> 00:41:25.940
It offers some great new possibilities
for working with view controllers.

00:41:25.980 --> 00:41:27.620
So I highly recommend the session.

00:41:27.620 --> 00:41:30.940
And if you follow the rules
that UIKit outlines for view

00:41:31.010 --> 00:41:34.000
controller containment on iOS 5,
then you can do a lot of things.

00:41:34.080 --> 00:41:35.470
So you can do that,
and you can have a great

00:41:35.470 --> 00:41:38.320
experience both with iAd and view
controller containment together.

00:41:40.230 --> 00:41:44.160
So in summary,
what are your users really after?

00:41:44.160 --> 00:41:46.240
Well, your customers--

00:41:46.560 --> 00:41:48.550
The advertisers are just
creating some really,

00:41:48.610 --> 00:41:50.400
really awesome experiences in iAd.

00:41:50.660 --> 00:41:52.890
And your customers
want those experiences.

00:41:52.960 --> 00:41:54.500
They want to see those iAds.

00:41:54.540 --> 00:41:58.140
They want to tap on those banners
and engage with that content.

00:41:58.740 --> 00:42:00.490
And that's really what they want.

00:42:00.590 --> 00:42:03.440
They want that great experience,
but not just with those iAds.

00:42:03.460 --> 00:42:05.070
They want them with your
applications as well.

00:42:05.080 --> 00:42:09.390
So if you can make a great
experience in your application,

00:42:09.390 --> 00:42:12.170
then adding iAd means that
you can see that great

00:42:12.700 --> 00:42:15.320
experience in your application,
and they can get those

00:42:15.830 --> 00:42:18.630
great experiences from iAd,
which means that you're

00:42:18.640 --> 00:42:20.290
going to make ad revenue.

00:42:21.300 --> 00:42:23.030
So if you remember nothing
else from this session,

00:42:23.030 --> 00:42:26.090
I just want to remember,
if you create a really,

00:42:26.090 --> 00:42:29.060
really great application
and you add iAd to it,

00:42:29.060 --> 00:42:32.330
then you've got that great
experience plus the great

00:42:32.330 --> 00:42:34.410
experience that iAd offers.

00:42:34.530 --> 00:42:38.000
For more information,
our evangelist is Vicki Murley.

00:42:38.000 --> 00:42:40.820
And of course,
we've got the human interface guidelines,

00:42:40.820 --> 00:42:43.360
which describe some more
about how to place banners and

00:42:43.460 --> 00:42:45.440
interstitials in your application.

00:42:45.440 --> 00:42:49.140
And if you've got questions,
we'll be here in the lab a little later.

00:42:49.210 --> 00:42:56.890
But we also invite you to come to
the dev forums and ask questions

00:42:56.890 --> 00:42:56.890
on there for after the conference.

00:42:58.330 --> 00:43:01.620
So again, that Improving the Stability
of Your Apps session,

00:43:01.780 --> 00:43:03.560
that's tomorrow morning.

00:43:03.590 --> 00:43:05.700
The Implementing
View Controller Containment

00:43:05.700 --> 00:43:06.560
was yesterday.

00:43:06.560 --> 00:43:09.080
And if you're interested
in how all those ads,

00:43:09.080 --> 00:43:13.190
those iAd content gets built, there's the
Building iAd Rich Media Ads with

00:43:13.190 --> 00:43:15.310
iiProducer session later today.

00:43:15.380 --> 00:43:18.770
Thank you all for coming,
and have a great WWDC.