WEBVTT

00:00:11.070 --> 00:00:13.440
All right, let's get started.

00:00:13.530 --> 00:00:14.410
So my name is Max Muller.

00:00:14.580 --> 00:00:16.840
I run the Digital Supply
Chain Engineering group,

00:00:16.990 --> 00:00:19.940
responsible for iBooks, iTunes,
as well as the app stores.

00:00:19.940 --> 00:00:23.020
It's my group's responsibility
for building the infrastructure

00:00:23.020 --> 00:00:25.720
so that you can get your great
applications onto the app store.

00:00:25.880 --> 00:00:29.160
Now, before we begin,
I would like to first welcome

00:00:29.160 --> 00:00:30.510
our Mac OS X developers.

00:00:30.720 --> 00:00:33.560
We launched the
Mac App Store this past January,

00:00:33.570 --> 00:00:35.840
and since then it has now
grown into be the largest

00:00:36.380 --> 00:00:38.920
Mac software store in the world.

00:00:38.970 --> 00:00:40.400
Now in years past when
we've done this session,

00:00:40.400 --> 00:00:42.050
we've always started with the basics.

00:00:42.220 --> 00:00:44.130
We've looked at how do
you set up an account?

00:00:44.220 --> 00:00:46.500
How do you publish an
application for the first time?

00:00:46.780 --> 00:00:51.080
Well, we now have over 425,000
apps live on the app store,

00:00:51.150 --> 00:00:53.320
so we're gonna assume that
this audience is already fairly

00:00:53.320 --> 00:00:54.820
familiar with the basics.

00:00:55.020 --> 00:00:57.480
If, however,
you would like to review the basics,

00:00:57.520 --> 00:00:59.020
I'm gonna refer you to
last year's session,

00:00:59.020 --> 00:01:01.480
which is session 310,
which is App Publishing

00:01:01.480 --> 00:01:02.740
with iTunes Connect.

00:01:02.810 --> 00:01:06.800
You can get to it on
developer.apple.com/videos.

00:01:09.240 --> 00:01:12.080
So with the training wheels off,
let's look at what we're

00:01:12.170 --> 00:01:13.100
going to cover today.

00:01:13.240 --> 00:01:16.860
First, we're going to go over what is new
or updated related to contracts,

00:01:16.900 --> 00:01:21.220
Game Center, in-app purchases,
App Review Resolution Center,

00:01:21.220 --> 00:01:23.600
iTunes Connect Mobile,
as well as Application Loader.

00:01:23.600 --> 00:01:26.950
Then in the second half of the session,
we're going to look at how you enable

00:01:27.030 --> 00:01:30.070
your application to take advantage
of the new features of iCloud,

00:01:30.080 --> 00:01:31.170
as well as Newsstand.

00:01:31.170 --> 00:01:33.190
And finally,
we'll wrap it up with some best

00:01:33.190 --> 00:01:34.950
practices and common pitfalls.

00:01:34.950 --> 00:01:39.100
So dive in right in.

00:01:44.680 --> 00:01:46.400
First up is contracts.

00:01:46.410 --> 00:01:49.560
On Monday, we updated the iOS
program license agreement.

00:01:49.590 --> 00:01:52.480
This added support for the
iOS 5 features for iCloud,

00:01:52.510 --> 00:01:54.510
as well as Newsstand.

00:01:56.440 --> 00:02:00.080
Monday, we also updated the
Mac Developer Program License Agreement,

00:02:00.190 --> 00:02:05.030
set it support for push notifications,
iCloud Storage,

00:02:05.900 --> 00:02:08.710
We also updated the
Mac OS X Schedule 2 agreement to

00:02:08.710 --> 00:02:10.970
add support for in-app purchases.

00:02:11.050 --> 00:02:12.980
If you'd like to enable your
Mac applications to take

00:02:12.980 --> 00:02:16.170
advantage of in-app purchases,
you need to log in to iTunes Connect,

00:02:16.340 --> 00:02:19.060
select the Contracts tab,
and agree to the new

00:02:19.060 --> 00:02:21.030
Schedule 2 agreement.

00:02:22.710 --> 00:02:24.560
And that's it for contracts.

00:02:24.560 --> 00:02:26.360
Next up is Game Center.

00:02:26.370 --> 00:02:28.520
Game Center was introduced in iOS 4.

00:02:28.520 --> 00:02:32.000
In the last nine months,
we now have over 50 million users.

00:02:32.000 --> 00:02:33.940
It has been an absolute home run.

00:02:33.940 --> 00:02:37.880
So we have two things we wanted to
mention to you about Game Center today.

00:02:37.970 --> 00:02:40.560
The first are leaderboard icons.

00:02:40.620 --> 00:02:43.110
This allows you, the developer, to

00:02:44.140 --> 00:02:49.620
to provide icons for each
of your leaderboards.

00:02:49.620 --> 00:02:52.730
The image must be a 512 by 512
image in the standard JPEG,

00:02:52.850 --> 00:02:55.400
TIFF, or PNG format.

00:02:55.400 --> 00:03:00.160
You can provide a different leaderboard
icon for each of your localizations.

00:03:01.650 --> 00:03:07.530
and your leaderboard icons will start
to show up in iOS 5 Gain Center.

00:03:07.570 --> 00:03:09.740
This is what it looks like
to add a leaderboard icon to

00:03:09.740 --> 00:03:12.090
one of your localizations.

00:03:13.350 --> 00:03:15.800
And here,
we now list all of your icons for all

00:03:15.800 --> 00:03:18.670
the localizations of a given leaderboard.

00:03:19.390 --> 00:03:21.500
This is what it's going to
look like on the device.

00:03:21.500 --> 00:03:22.760
It's on the left-hand side here.

00:03:22.760 --> 00:03:25.660
We'll now display all of your
icons for the localization.

00:03:25.720 --> 00:03:27.490
It's being displayed.

00:03:29.090 --> 00:03:32.810
Next up for Game Center are min and
max values for your leaderboards.

00:03:32.950 --> 00:03:35.880
This allows you, the developer,
to control the limits on leaderboards.

00:03:35.910 --> 00:03:38.940
Helps prevent the gaming
of leaderboard scores.

00:03:39.040 --> 00:03:42.220
Scores that are submitted outside
of the range that you've specified

00:03:42.570 --> 00:03:46.760
will automatically be deleted
and not counted in a leaderboard.

00:03:47.000 --> 00:03:51.520
And again, the min and max values must
be assigned 64-bit integer.

00:03:52.360 --> 00:03:55.060
Looking at this in terms of
when I set up a leaderboard,

00:03:55.060 --> 00:03:57.640
I now have the option to
specify a score format.

00:03:57.710 --> 00:04:00.070
Here I've set up my
level one leaderboard,

00:04:00.300 --> 00:04:03.780
and I've specified I had
a range of zero to 1,000.

00:04:03.820 --> 00:04:06.250
Any leaderboard scores that
are submitted outside of that

00:04:06.290 --> 00:04:08.490
range will not be included.

00:04:10.040 --> 00:04:11.920
And that's it for Game Center.

00:04:11.940 --> 00:04:13.960
Next up is in-app purchases.

00:04:14.000 --> 00:04:16.520
We added in-app purchases to iOS 3.0.

00:04:16.550 --> 00:04:19.600
In the past two years,
in-app has grown to represent a

00:04:19.600 --> 00:04:23.980
significant portion of the revenue
that our developer community generates.

00:04:24.030 --> 00:04:27.000
If you look at the top grossing
applications on the App Store today,

00:04:27.010 --> 00:04:31.090
of the top 25 applications,
14 of them are free and generating

00:04:31.090 --> 00:04:34.150
all of the revenue through
the use of in-app purchases.

00:04:34.330 --> 00:04:36.180
With that in mind,
we have significantly overhauled

00:04:36.220 --> 00:04:39.640
the iTunes Connect workflow
for managing in-app purchases.

00:04:39.680 --> 00:04:42.100
We've improved the layout,
added searching.

00:04:42.140 --> 00:04:45.580
We've streamlined the sign-off process,
the developer approval process.

00:04:45.580 --> 00:04:47.310
And finally,
for those of you dealing with

00:04:47.310 --> 00:04:50.380
large numbers of in-app purchases,
we've given you the

00:04:50.470 --> 00:04:52.360
option for a mass submit.

00:04:55.860 --> 00:04:58.490
To get to all of your in-app purchases,
you now need to go through your

00:04:58.530 --> 00:05:01.080
application and click on the
Manage In-App Purchases link

00:05:01.080 --> 00:05:02.900
on the upper right-hand corner.

00:05:04.510 --> 00:05:10.380
Here you see we've now streamlined the
addition and removal of localizations.

00:05:10.380 --> 00:05:13.490
So I was giving you a one button
submit when inspecting a single in-app

00:05:13.570 --> 00:05:16.110
purchase item to submit it for review.

00:05:18.790 --> 00:05:22.200
And for those of you that have lots of
in-app purchases for a given application,

00:05:22.200 --> 00:05:25.150
I'll give you a simple list
page here where you can search

00:05:25.170 --> 00:05:29.390
inside your in-app purchases,
sort them, as well as select given items,

00:05:29.390 --> 00:05:33.990
and with one click, submit all of the
selected items for review.

00:05:35.700 --> 00:05:38.990
Next up on in-app is our
auto-renewable in-app purchase type.

00:05:39.250 --> 00:05:41.120
We launched this a few
months back with the daily,

00:05:41.440 --> 00:05:44.670
which enables you to add
full subscription support

00:05:44.870 --> 00:05:46.780
to your applications.

00:05:46.810 --> 00:05:51.140
iTunes automatically handles all of the
subscription renewal management for you.

00:05:51.180 --> 00:05:54.440
And we built a nice interface
in iTunes as well as on iOS.

00:05:54.480 --> 00:05:57.020
We allow a customer to see all
of the subscriptions that they

00:05:57.020 --> 00:05:58.480
currently have outstanding.

00:05:58.530 --> 00:06:01.900
We also allow them to move between
the different subscription durations.

00:06:01.950 --> 00:06:04.120
They'd like to move from
a one month to a one year,

00:06:04.150 --> 00:06:08.280
or be down to a one week subscription,
or to opt out of any of their

00:06:08.690 --> 00:06:10.600
subscriptions at any point.

00:06:11.030 --> 00:06:13.500
The duration options that
you have are seven days,

00:06:13.520 --> 00:06:17.400
one month, two months, three months,
six months, and a year.

00:06:17.400 --> 00:06:20.160
And right now,
the auto-renewable subscriptions

00:06:20.170 --> 00:06:21.800
are only available on iOS.

00:06:24.730 --> 00:06:27.290
A few other things to point out
about auto-renewable subscriptions.

00:06:27.430 --> 00:06:30.360
One is that it is your responsibility
for checking the receipts that come

00:06:30.360 --> 00:06:34.580
back through the StoreKit API for
determining if a subscription is valid.

00:06:34.700 --> 00:06:38.940
When checking a receipt for an
auto-renewable subscription,

00:06:39.020 --> 00:06:42.260
you'll be using a shared secret
that you generate in iTunes Connect.

00:06:42.330 --> 00:06:46.060
You'll pass that shared secret
along with the receipt to

00:06:46.060 --> 00:06:48.250
our servers for validation.

00:06:48.420 --> 00:06:51.280
Also, if you are a publication,
we offer the option for a

00:06:51.280 --> 00:06:54.460
customer to opt in to share their
contact information with you.

00:06:54.460 --> 00:06:58.440
If you choose, you can also offer a
marketing opt-in incentive.

00:06:58.440 --> 00:07:01.760
What this is,
is this is an additional bonus duration

00:07:01.800 --> 00:07:05.300
on the first subscription period,
that you can offer to a user to

00:07:05.300 --> 00:07:08.620
incentivize them to share their
contact information with you.

00:07:08.620 --> 00:07:11.110
For instance,
if you set up a one-year subscription,

00:07:11.220 --> 00:07:14.300
you might set up a three-month
marketing opt-in incentive.

00:07:14.620 --> 00:07:18.780
What this means is on the first
time the customer purchases and

00:07:18.780 --> 00:07:23.040
chooses to subscribe to the one year,
they would actually be getting 15 months,

00:07:23.060 --> 00:07:25.390
and after that point,
the renewal would happen

00:07:25.390 --> 00:07:26.390
on a 12-month basis.

00:07:28.950 --> 00:07:32.140
A few other things to point out about
the marketing opt-in incentive is that

00:07:32.140 --> 00:07:35.460
it's your responsibility for displaying
the information about the marketing

00:07:35.460 --> 00:07:38.180
incentive in your application UI.

00:07:38.180 --> 00:07:40.000
As part of the store kit
dialogues that come up for

00:07:40.210 --> 00:07:43.050
subscribing to a subscription,
we do not mention the

00:07:43.050 --> 00:07:44.740
marketing opt-in incentive.

00:07:44.740 --> 00:07:48.840
Also, if your application is collecting
or has the option of collecting

00:07:49.450 --> 00:07:52.590
personal contact information,
we do require that you specify

00:07:52.990 --> 00:07:56.260
a publisher's privacy URL,
which is going to be shown

00:07:56.260 --> 00:07:58.330
on the customer's invoice.

00:07:58.830 --> 00:08:01.320
So what it looks like to
add a new auto-renewing

00:08:01.390 --> 00:08:04.870
subscription to your application,
you're going to log in to iTunes Connect,

00:08:04.870 --> 00:08:08.160
click on the Manage In-App Items,
and Add a New In-App Item.

00:08:08.170 --> 00:08:11.660
For this, we will now select the
Auto-Renew subscription.

00:08:13.210 --> 00:08:16.860
Now, the first part you're setting up
is the family of your subscription.

00:08:16.860 --> 00:08:19.060
The reference name at the top,
in this case,

00:08:19.060 --> 00:08:21.580
is the Touch Fighter Strategy Guide.

00:08:21.580 --> 00:08:25.890
We'll provide the different localizations
for what the subscription is.

00:08:26.070 --> 00:08:28.140
At the bottom part here,
we'll actually be setting

00:08:28.140 --> 00:08:29.400
up the different durations.

00:08:29.400 --> 00:08:33.000
It's important because these different
durations are the actual in-app items.

00:08:33.020 --> 00:08:37.060
In this case, we set up a seven-day
and a one-month item.

00:08:37.080 --> 00:08:39.520
Each one of them have their
own product identifiers.

00:08:39.550 --> 00:08:42.340
We make a store kit call in
to get the available products.

00:08:42.450 --> 00:08:45.900
In this case, we're going to be getting
back exactly two products.

00:08:48.440 --> 00:08:54.460
Here's what it looks like when looking
at inspecting our one month duration.

00:08:54.460 --> 00:08:56.400
In this case,
we have chosen to offer marketing

00:08:56.400 --> 00:08:59.270
opt-in incentive of seven days.

00:09:01.490 --> 00:09:04.080
And again, when setting up our
item for the first time,

00:09:04.100 --> 00:09:07.670
we're going to be asked to
provide a privacy policy URL.

00:09:11.000 --> 00:09:13.090
For validating receipts,
you'll also be asked to

00:09:13.090 --> 00:09:14.720
generate a shared secret.

00:09:14.730 --> 00:09:17.990
Note the same shared secret can
be used to validate all receipts

00:09:18.130 --> 00:09:19.680
within a given developer account.

00:09:19.700 --> 00:09:23.810
You have multiple applications that are
all taking advantage of auto-renewing

00:09:23.830 --> 00:09:26.480
receipts or the auto-renewing in-app.

00:09:26.510 --> 00:09:30.070
You only need one shared secret
to validate all those receipts.

00:09:32.980 --> 00:09:35.390
And finally,
here's what it looks like on the iPad.

00:09:35.470 --> 00:09:37.210
In this case,
you can see that they have set

00:09:37.210 --> 00:09:40.820
up within the same subscription
family two durations,

00:09:40.830 --> 00:09:43.080
a seven day as well as a one year.

00:09:43.100 --> 00:09:45.210
They chose to offer
more duration options.

00:09:45.260 --> 00:09:47.380
They would all be listed here.

00:09:47.380 --> 00:09:50.360
Note that the user can move
between any of those different

00:09:50.360 --> 00:09:54.910
subscription price points or turn
off the auto renew at any point.

00:09:56.870 --> 00:10:00.220
And now to give us a demo of the new
in-app purchase setup in iTunes Connect,

00:10:00.230 --> 00:10:02.230
I'd like to bring up Aloke.

00:10:15.300 --> 00:10:15.800
Hello, everyone.

00:10:15.800 --> 00:10:17.500
I'm Aloke Bhatnagar,
and I'm the engineering

00:10:17.500 --> 00:10:19.240
manager for iTunes Connect.

00:10:19.240 --> 00:10:21.450
As Max mentioned,
we made quite a few changes in

00:10:21.450 --> 00:10:24.180
the in-app purchase workflow,
and I'd like to walk you

00:10:24.180 --> 00:10:26.000
through some of those.

00:10:26.000 --> 00:10:28.290
So let's sign into iTunes Connect.

00:10:29.210 --> 00:10:32.220
One of the first things that you'll
notice is that the Manage In-App Purchase

00:10:32.220 --> 00:10:34.280
module has gone from the home page.

00:10:34.300 --> 00:10:36.980
We wanted to offer you a single,
streamlined way of managing

00:10:36.980 --> 00:10:38.240
your in-app purchases.

00:10:38.270 --> 00:10:41.830
And the way to do that is to
go to Manage Your Applications.

00:10:42.750 --> 00:10:45.080
And you can either search
for your applications.

00:10:45.080 --> 00:10:47.580
By the way, if you haven't noticed yet,
we've added search as your

00:10:47.580 --> 00:10:51.760
type for your application,
for those of you who have large catalogs.

00:10:51.790 --> 00:10:55.880
Or you can click on your application
from your recent activity list.

00:10:57.960 --> 00:11:02.660
You click on the blue Manage
In-App Purchase button,

00:11:02.660 --> 00:11:08.020
and you're brought to a listing of
current in-app purchases on this screen.

00:11:08.030 --> 00:11:10.850
Again,
you can search as you type over here.

00:11:10.850 --> 00:11:13.960
It doesn't have to be the
beginning of the string.

00:11:13.960 --> 00:11:16.130
You can search for substrings.

00:11:18.960 --> 00:11:21.440
And again, as Max mentioned,
for those of you who have

00:11:21.440 --> 00:11:25.260
large in-app purchase catalogs,
we've allowed you to mass submit now.

00:11:25.280 --> 00:11:28.080
You can do that either by
checking the boxes over here

00:11:28.080 --> 00:11:29.660
and hit Submit for review.

00:11:29.670 --> 00:11:33.610
Or you can use the Select All and
Deselect All buttons as you please.

00:11:34.870 --> 00:11:40.480
To be able to inspect an in-app purchase,
you can click on one of them.

00:11:40.480 --> 00:11:43.750
And you can either submit
from review from here.

00:11:43.920 --> 00:11:46.160
We can edit various pieces
of the in-app purchase,

00:11:46.190 --> 00:11:47.760
like the reference name.

00:11:47.760 --> 00:11:50.170
We can add a new localization.

00:11:51.250 --> 00:11:54.600
Edit an existing localization.

00:11:54.630 --> 00:11:56.530
Change the pricing.

00:11:56.800 --> 00:12:00.910
And this one already has a screenshot,
so we can go ahead and change

00:12:01.020 --> 00:12:02.970
the screenshot if necessary.

00:12:07.190 --> 00:12:11.700
Now, Max mentioned that we've recently
added auto renewables as an

00:12:11.780 --> 00:12:13.840
option for all developers.

00:12:13.910 --> 00:12:17.930
The first step you'd have to use to use
auto renewables is to be generating a

00:12:17.930 --> 00:12:20.410
shared secret for a seat validation.

00:12:20.420 --> 00:12:23.610
So you click on that
link and click Generate.

00:12:24.630 --> 00:12:24.970
There you go.

00:12:25.020 --> 00:12:27.920
The shared secret is generated for you,
and you can use that in

00:12:27.920 --> 00:12:29.580
your receipt validation.

00:12:29.600 --> 00:12:32.390
So let's go ahead and
create a new auto-renewable.

00:12:32.590 --> 00:12:34.190
Create new.

00:12:35.090 --> 00:12:38.340
Choose Auto Renewable Subscription.

00:12:38.340 --> 00:12:40.430
Add in a reference name.

00:12:45.020 --> 00:12:48.780
So for this, I'm adding a game strategy
guide for Touch Fighter.

00:12:48.780 --> 00:12:50.520
Add a localization.

00:12:50.520 --> 00:12:52.740
Just going to add the English for now.

00:13:07.240 --> 00:13:09.800
Let's save.

00:13:09.810 --> 00:13:12.440
And we need to add durations.

00:13:13.090 --> 00:13:13.870
Select duration.

00:13:13.960 --> 00:13:16.940
For now, let's just choose one month.

00:13:16.940 --> 00:13:19.010
Add in a product ID.

00:13:27.830 --> 00:13:30.980
You can choose to offer a
marketing opt-in incentive.

00:13:30.980 --> 00:13:32.890
If you choose yes,
you get an incentive duration,

00:13:32.890 --> 00:13:36.210
which is a function of the
duration that you chose earlier.

00:13:36.820 --> 00:13:40.040
And then you have the standard cleared
for sale and the price tier buttons.

00:13:40.040 --> 00:13:42.810
That's price at tier one right now.

00:13:44.460 --> 00:13:45.900
Click Save.

00:13:45.900 --> 00:13:46.980
Oops.

00:13:46.980 --> 00:13:49.900
Let me make the product ID a
little more descriptive.

00:13:56.120 --> 00:13:59.540
So as you can see, we've added this in
our purchase over here.

00:13:59.540 --> 00:14:01.020
Let's go ahead and add another duration.

00:14:01.100 --> 00:14:05.690
Say one year.

00:14:15.900 --> 00:14:18.220
offer a marketing opt-in incentive.

00:14:18.220 --> 00:14:21.520
Now you can see the incentive
duration options changed because

00:14:21.520 --> 00:14:24.580
I had a different duration up above.

00:14:24.600 --> 00:14:26.580
Select a price tier.

00:14:29.930 --> 00:14:31.880
Let's save over here.

00:14:31.880 --> 00:14:34.000
And you can see it added two
in-app purchases over here

00:14:34.000 --> 00:14:37.200
with the options I chose.

00:14:37.200 --> 00:14:39.610
When you create an in-app purchase,
it goes into waiting for

00:14:39.610 --> 00:14:40.680
screenshot initially.

00:14:40.680 --> 00:14:43.080
Now let's assume that I've
gone and tested all these

00:14:43.080 --> 00:14:45.100
in-app purchases in Sandbox.

00:14:45.100 --> 00:14:47.910
Let's go ahead and hit Save and
add the screenshot later.

00:14:48.810 --> 00:14:51.590
So as Max mentioned,
each duration contributes

00:14:51.700 --> 00:14:53.260
to one in-app purchase.

00:14:53.260 --> 00:14:56.300
And you can see it's created
two in-app purchases,

00:14:56.300 --> 00:14:58.780
one for one month and one for one year.

00:14:58.800 --> 00:15:02.140
If I wanted to change anything,
I could just click Edit as I did before,

00:15:02.140 --> 00:15:05.970
or I could hit Delete to delete an in-app
purchase that I didn't want anymore.

00:15:05.970 --> 00:15:11.930
And with that, I hand it back to Max.

00:15:19.110 --> 00:15:23.440
All right, thank you, Aloke.

00:15:23.440 --> 00:15:26.530
All right, every year we try to make the
app review process smoother,

00:15:26.580 --> 00:15:29.700
more transparent,
and give you more information if your

00:15:29.700 --> 00:15:32.150
application happens to get stuck.

00:15:32.440 --> 00:15:34.600
With that in mind,
this last year we've introduced

00:15:34.720 --> 00:15:37.080
the App Review Resolution Center.

00:15:37.160 --> 00:15:40.840
This allows for centralized access
to all rejection information.

00:15:40.840 --> 00:15:44.330
Also allows Apple to provide you
screenshots or stack traces of

00:15:44.340 --> 00:15:47.840
your application that hit a problem
as part of the review process.

00:15:48.090 --> 00:15:50.300
This allows you, the developer,
also to give the app review team

00:15:50.500 --> 00:15:55.840
back information on any issues
that they have highlighted.

00:15:55.870 --> 00:15:59.070
And it also gives you a nice central
view where you have an entire

00:15:59.070 --> 00:16:02.990
history of your app version's issues
that can be reviewed at any time.

00:16:03.100 --> 00:16:05.580
Now to get to the app
review resolution center,

00:16:05.580 --> 00:16:08.740
and again this should not be a
goal for anybody in the audience,

00:16:08.770 --> 00:16:11.950
but in case you have seen,
in case an update of

00:16:11.950 --> 00:16:14.810
yours does get rejected,
at that point the resolution

00:16:14.890 --> 00:16:17.320
center link will appear at the top.

00:16:18.000 --> 00:16:19.400
Click on the resolution link.

00:16:19.460 --> 00:16:23.820
We'll take you in to an entire
version history for every single

00:16:24.130 --> 00:16:26.030
binary that has been uploaded.

00:16:26.280 --> 00:16:28.720
In this case,
we uploaded a binary on June 6.

00:16:28.750 --> 00:16:32.030
It looks like it crashed as
part of the app review process.

00:16:32.190 --> 00:16:35.520
And the app review team has provided
us with some notes for essentially what

00:16:35.530 --> 00:16:40.420
happened when they triggered the crash,
as well as providing a stack trace.

00:16:41.900 --> 00:16:45.880
Now once we've corrected this issue,
then I can upload a binary and log back

00:16:45.880 --> 00:16:49.960
into the resolution center and provide
feedback back to the app review team.

00:16:49.960 --> 00:16:52.100
In this case,
it looks like we've corrected the bug,

00:16:52.100 --> 00:16:57.380
performed some clean unit tests,
and resubmitted the binary for review.

00:16:57.480 --> 00:17:00.300
Now all of this information will then
travel back to the app review team

00:17:00.310 --> 00:17:05.190
and be ready for them once they start
to review the new updated binary.

00:17:07.330 --> 00:17:09.540
Next up is iTunes Connect Mobile.

00:17:09.550 --> 00:17:13.690
We released iTunes
Connect Mobile last year at WWDC.

00:17:14.110 --> 00:17:17.990
Since then, we released a 1.1 version,
which added iPad support.

00:17:18.130 --> 00:17:21.440
And last week,
we released an iTunes Connect Mobile 1.2,

00:17:21.700 --> 00:17:23.000
which added push notification support.

00:17:23.000 --> 00:17:27.960
This enables you to get push alerts
for any app state transitions,

00:17:28.000 --> 00:17:31.600
so when your app moves to ready for
sale or pending developer release,

00:17:31.600 --> 00:17:35.200
or in the unfortunate case,
if you need to visit the

00:17:35.200 --> 00:17:37.670
App Review Resolution Center.

00:17:38.090 --> 00:17:39.760
To look at it,
this is what getting a push

00:17:39.760 --> 00:17:43.480
notification for a state
transition looks like on the iPad.

00:17:43.560 --> 00:17:45.990
Here, the app is now ready for sale.

00:17:46.070 --> 00:17:49.120
If you haven't downloaded
iTunes Connect mobile yet,

00:17:49.150 --> 00:17:51.440
you can log into iTunes Connect,
and there's a link at

00:17:51.520 --> 00:17:53.100
the bottom of the page.

00:17:53.700 --> 00:17:55.440
That's it for application.

00:17:55.440 --> 00:17:57.200
Next up is Application Loader.

00:17:57.200 --> 00:18:00.360
Application Loader ships
as part of the Xcode suite.

00:18:00.360 --> 00:18:04.480
It's found in the Utilities folder,
and it's one way that you can use to

00:18:04.480 --> 00:18:08.410
deliver your binaries to App Review.

00:18:08.580 --> 00:18:11.970
Now, one of the pieces of feedback that
we've heard from all of our developers

00:18:11.980 --> 00:18:15.870
is that the creation of many in-app
items within iTunes Connect is a rather

00:18:16.340 --> 00:18:18.460
time-consuming and laborious activity.

00:18:18.530 --> 00:18:20.060
So with that in mind,
we've created a new in-app

00:18:20.060 --> 00:18:23.410
purchase metadata workflow
right in Application Loader.

00:18:23.470 --> 00:18:28.970
This enables you to mass import in-app
purchase items from a tab-delimited file.

00:18:29.170 --> 00:18:32.480
And once you have all of them ready,
you can then either submit

00:18:32.480 --> 00:18:34.510
them ad hoc or with a binary.

00:18:34.610 --> 00:18:37.210
And this version of
Application Loader is coming for

00:18:37.210 --> 00:18:40.520
iOS and OS X later on in the fall.

00:18:40.740 --> 00:18:44.720
Here's what the new login page
looks like for Application Loader.

00:18:46.580 --> 00:18:48.330
Here's what the new home page looks like.

00:18:48.440 --> 00:18:50.510
And again, if you were to regularly
deliver a binary,

00:18:50.580 --> 00:18:53.020
this would be the Deliver Your App link.

00:18:53.040 --> 00:18:56.810
However,
you can now create a new package.

00:18:56.870 --> 00:19:01.020
And here we'll now select
Create New in App Packages.

00:19:03.060 --> 00:19:05.460
Here will be now displayed
all of your applications,

00:19:05.460 --> 00:19:09.400
as well as the number of in-app
items that they currently have.

00:19:09.400 --> 00:19:13.390
You'll select the application that
you wish to add in-app items to.

00:19:14.240 --> 00:19:17.350
Once you have imported in all of
your in-app items from a file,

00:19:17.350 --> 00:19:19.490
or created them in the
workflow interface,

00:19:19.490 --> 00:19:21.190
they'll all be displayed here.

00:19:21.220 --> 00:19:23.860
You can inspect them,
make any changes you want,

00:19:23.880 --> 00:19:27.190
and with one click,
submit them for review.

00:19:27.320 --> 00:19:30.800
What I'd like to do now is bring
up Jason Fozback to give you a

00:19:30.800 --> 00:19:33.440
demo of the new application loader.

00:19:33.440 --> 00:19:33.440
Jason?

00:19:38.740 --> 00:19:39.500
- Morning everyone.

00:19:39.540 --> 00:19:43.430
Just gonna give you a quick preview
here of what we've been working

00:19:43.440 --> 00:19:46.890
on here for a while for the new
version of Application Loader.

00:19:47.300 --> 00:19:50.930
So this is what Max was just showing you,
the new landing page for

00:19:50.930 --> 00:19:52.890
Application Loader when you launch it.

00:19:52.920 --> 00:19:55.580
And you can see there's a
Deliver Your App button here.

00:19:55.720 --> 00:20:01.590
So for those of you that have
uploaded applications in the past,

00:20:01.590 --> 00:20:01.590
this will look very familiar to you.

00:20:02.090 --> 00:20:05.500
So we've also added this new feature,
which is to create a new package.

00:20:05.620 --> 00:20:07.950
This will allow you to--

00:20:08.520 --> 00:20:10.500
Manage your in-app purchases
from an existing app.

00:20:10.700 --> 00:20:12.260
In other words,
load them into this tool so

00:20:12.330 --> 00:20:14.290
you can work on them offline.

00:20:14.520 --> 00:20:17.320
Manage the screenshots,
change the pricing in mass,

00:20:17.320 --> 00:20:18.620
whatever you want to do.

00:20:18.630 --> 00:20:21.940
But we've also added this feature here,
which is new from file.

00:20:22.010 --> 00:20:27.160
So we support creating a bunch of in-app
purchases from a tab-delimited file.

00:20:27.220 --> 00:20:31.860
So you can use a workflow
to generate those yourself,

00:20:31.880 --> 00:20:35.840
or for example, you can use numbers,
or any other spreadsheet.

00:20:35.840 --> 00:20:38.900
Anything that will write a
tab-delimited file will work.

00:20:38.970 --> 00:20:42.540
So this is a quick example here
of what this might look like.

00:20:42.540 --> 00:20:46.300
You can have all of your information
here in the tab-delimited file.

00:20:46.300 --> 00:20:49.760
The reference name, what type it is,
cleared for sale.

00:20:49.760 --> 00:20:51.900
You can specify the pricing.

00:20:51.900 --> 00:20:56.590
We even allow you to do your
localizations right here within the file.

00:20:57.950 --> 00:21:00.980
So that's an example of
what that looks like.

00:21:01.040 --> 00:21:04.100
So let's go ahead and walk through that.

00:21:04.160 --> 00:21:08.530
Click on New from File here
within Application Loader.

00:21:08.570 --> 00:21:11.910
Click on that tab delimited file,
and open it.

00:21:13.220 --> 00:21:16.120
So you see this editor comes up,
which allows you to see

00:21:16.120 --> 00:21:18.890
what you just imported.

00:21:18.920 --> 00:21:20.610
You can look at all the different things.

00:21:20.690 --> 00:21:23.510
You can ad hoc edit them
here within the tool.

00:21:23.670 --> 00:21:27.170
We support unlimited undo and redo.

00:21:28.960 --> 00:21:35.540
Pricing will allow you to edit
your pricing here within the tool.

00:21:35.580 --> 00:21:37.340
For those of you that do a lot of
pricing work within iTunes Connect,

00:21:37.340 --> 00:21:37.340
this should look very familiar to you.

00:21:37.790 --> 00:21:40.160
and we'll allow you to
edit your languages.

00:21:40.210 --> 00:21:43.200
So for example,
if I wanted to add Italian,

00:21:43.440 --> 00:21:52.670
I could go ahead and click there,
add some information here.

00:21:52.670 --> 00:21:52.670
Or, realizing I don't speak Italian,
oops, I can undo that.

00:21:53.870 --> 00:21:58.040
And then,
as you're in the process of editing,

00:21:58.340 --> 00:21:59.170
and you make a mistake potentially,

00:21:59.370 --> 00:22:01.880
When you go here to the delivery pane,
we'll actually detect

00:22:01.880 --> 00:22:03.100
that something is wrong.

00:22:03.200 --> 00:22:05.900
You can double click on that error,
and we'll drill you right

00:22:05.900 --> 00:22:08.730
down in the user interface
of where that problem exists.

00:22:08.840 --> 00:22:11.130
So I'll go ahead and undo that.

00:22:11.870 --> 00:22:15.120
And one of the other things that's really
convenient here is if you have thousands

00:22:15.120 --> 00:22:19.700
of in-app purchases potentially,
and you need to match up the screenshots

00:22:19.700 --> 00:22:24.470
with all of those in-app purchases,
you can hit this single button here.

00:22:24.940 --> 00:22:29.240
And if you name your screenshots
with your product identifier,

00:22:29.370 --> 00:22:32.340
in one shot,
you can go ahead and either select

00:22:32.340 --> 00:22:35.980
a bunch of those all at once,
or just select a directory

00:22:35.980 --> 00:22:37.780
of those screenshots.

00:22:37.800 --> 00:22:44.670
And we'll go ahead and match those up
with one quick operation in the tool.

00:22:45.370 --> 00:22:49.800
And then you can go ahead and
send that to us up on the store.

00:22:49.870 --> 00:22:52.720
With that, I'll go ahead and turn
it back over to Max.

00:22:59.070 --> 00:22:59.600
Thank you, Jason.

00:22:59.660 --> 00:23:02.440
So again, coming later on this fall,
watch for that.

00:23:02.440 --> 00:23:05.670
Now what I'd like to do is to turn it
over to Ricardo Cortes to walk us through

00:23:05.950 --> 00:23:08.130
some of the new iOS and Lion features.

00:23:08.150 --> 00:23:08.490
Ricardo?

00:23:12.140 --> 00:23:16.150
Thank you, Max.

00:23:23.590 --> 00:23:30.160
Five and Lion features
iCloud Storage and Newsstand.

00:23:30.160 --> 00:23:34.240
iCloud Storage, introduced at the keynote
earlier this week,

00:23:34.240 --> 00:23:36.160
is new for iOS 5 and Lion.

00:23:36.160 --> 00:23:38.460
It enables cloud storage
of app document data.

00:23:38.640 --> 00:23:40.580
There are two types of cloud
storage within your apps.

00:23:40.740 --> 00:23:42.610
There's documents and key value data.

00:23:42.610 --> 00:23:45.540
They work across iOS and OS X apps.

00:23:45.640 --> 00:23:48.670
For example, if I have Touch Fighter,
an OS X app on the desktop,

00:23:48.800 --> 00:23:52.230
and I have Touch Fighter Mobile,
these apps can share a single document

00:23:52.230 --> 00:23:55.300
space or a single QValue Datastore.

00:23:56.470 --> 00:24:00.160
In terms of setup and configuration,
you first need to enable cloud

00:24:00.160 --> 00:24:02.990
storage in the iOS developer portal.

00:24:04.300 --> 00:24:06.950
And there are two new
relevant entitlements,

00:24:07.050 --> 00:24:09.800
one for documents and
one for key value data.

00:24:10.790 --> 00:24:14.180
For documents, we have Calm, Apple,
Developer, Ubiquiti,

00:24:14.180 --> 00:24:15.660
Container identifiers.

00:24:15.660 --> 00:24:20.560
And for key value data, Calm, Apple,
Developer, Ubiquiti, KB Store identifier.

00:24:20.600 --> 00:24:23.170
Both are governed by the
provisioning profile.

00:24:23.200 --> 00:24:25.820
It's important to note,
you can implement one or the other,

00:24:25.840 --> 00:24:28.870
either documents, key value data,
or none of them.

00:24:30.130 --> 00:24:34.490
You enter the entitlements and
values in your entitlements.plist,

00:24:34.500 --> 00:24:37.000
and each of them is
prefixed with a team ID,

00:24:37.010 --> 00:24:39.790
which is also available in
the iOS developer portal.

00:24:40.640 --> 00:24:46.900
An example for document storage of
these new entitlement key values.

00:24:47.130 --> 00:24:50.640
For the Ubiquiti container identifiers,
this denotes the identifiers

00:24:50.640 --> 00:24:54.040
used by related apps to write to
the same document storage space.

00:24:54.070 --> 00:24:57.180
And it's also important to note
that these are identifiers that

00:24:57.180 --> 00:24:58.530
are only from the same developer.

00:24:58.530 --> 00:25:03.200
You can't use your friends'
or your buddies' identifiers.

00:25:03.210 --> 00:25:07.250
An example below,
you see I have COM Cyber Interactive

00:25:07.400 --> 00:25:09.980
Touch Fighter OS X for
my desktop version,

00:25:10.050 --> 00:25:14.500
as well as COM Cyber Interactive
Touch Fighter Lite.

00:25:14.530 --> 00:25:16.250
Both of them prefixed by the team ID.

00:25:16.300 --> 00:25:19.630
The presence of both of these
identifiers then allows both of them

00:25:19.630 --> 00:25:21.680
to write to a single document store.

00:25:23.100 --> 00:25:26.020
With key value data,
there's one identifier there.

00:25:26.240 --> 00:25:31.000
This identifier is used to access
the default iCloud key value store.

00:25:31.000 --> 00:25:35.600
Again, the value for the identifier is
prefixed by the team ID available

00:25:35.600 --> 00:25:37.280
in iOS developer portal.

00:25:37.310 --> 00:25:41.430
Here I have com, cyber interactive,
touch fighter, store.

00:25:42.760 --> 00:25:45.640
In terms of document storage,
there's one new Info.plist key.

00:25:45.640 --> 00:25:48.560
This is the NS Ubiquitous Display Set.

00:25:48.560 --> 00:25:51.730
This defines a logical grouping
for iCloud's storage display

00:25:51.780 --> 00:25:53.680
purposes in the Settings pane.

00:25:53.680 --> 00:25:57.140
We'll see a screenshot of this in a
second that'll really drive it home.

00:25:57.140 --> 00:25:59.520
These must match display sets that
are configured in iTunes Connect.

00:25:59.520 --> 00:26:01.880
These are new controls
being added for iCloud.

00:26:01.880 --> 00:26:04.440
And we recommend reverse domain syntax.

00:26:04.480 --> 00:26:09.890
So for example, com/apple/iwork/keynote
for iOS and for OS X.

00:26:10.450 --> 00:26:13.940
Here's what the management page
for document storage looks like.

00:26:13.940 --> 00:26:18.930
You can see I have Keynote at the bottom,
numbers and pages, and Keynote for iOS,

00:26:18.930 --> 00:26:23.190
say for example, and OS X are sharing a
single document store.

00:26:24.270 --> 00:26:26.790
Document storage rolled
up with a single value,

00:26:26.790 --> 00:26:28.840
98.2, I believe.

00:26:28.840 --> 00:26:30.150
Yes.

00:26:33.990 --> 00:26:38.260
Here, you can drill down in one of those
applications and see the documents,

00:26:38.470 --> 00:26:42.530
and you can manage them on
the device by deleting them.

00:26:44.050 --> 00:26:46.420
New for iTunes Connect,
we have a new Manage

00:26:46.570 --> 00:26:48.980
Display Sets interface.

00:26:49.020 --> 00:26:51.370
Under Manage Applications,
you go to the iCloud section

00:26:51.450 --> 00:26:53.720
and click Manage Display Sets.

00:26:55.010 --> 00:26:57.660
Here you'll see the display
sets you've already set up.

00:26:57.660 --> 00:27:00.400
I have Touch Fighter, Calm,
Cyber Interactive.

00:27:00.400 --> 00:27:02.500
Sorry, I have Touch Fighter,
the reference name, and Calm,

00:27:02.500 --> 00:27:05.000
Cyber Interactive,
Touch Fighter as the display set ID.

00:27:05.010 --> 00:27:08.560
Again, remember this must match the
value that's supplied in the

00:27:08.620 --> 00:27:10.510
NS Ubiquitous display set.

00:27:11.460 --> 00:27:15.170
Here, I'm setting up a new one,
reference name and display set ID.

00:27:15.170 --> 00:27:19.910
And I'm allowed to localize in the
languages that we localize the App Store.

00:27:22.630 --> 00:27:25.140
In this example,
I have a reference name of Touch Fighter,

00:27:25.140 --> 00:27:26.670
again, the display set.

00:27:26.670 --> 00:27:31.300
And I have two apps that are attached,
Touch Fighter 2 and Touch Fighter 3.

00:27:31.320 --> 00:27:35.590
The presence of these two apps allows
them to write to a single document store.

00:27:36.870 --> 00:27:38.670
And with that,
I'd like to bring up Paul Turner,

00:27:38.920 --> 00:27:41.400
Engineering Manager, iTunes Store,
Content Operations,

00:27:41.400 --> 00:27:43.230
who's going to walk you
through the new iCloud

00:27:43.570 --> 00:27:45.240
Storage controls in iTunes Connect.

00:27:45.280 --> 00:27:45.790
Paul.

00:27:45.800 --> 00:27:47.610
Thanks, Ricardo.

00:27:48.920 --> 00:27:50.240
Morning everyone.

00:27:50.260 --> 00:27:51.350
How you guys doing?

00:27:51.380 --> 00:27:53.430
Is the coffee kicking in and everything?

00:27:53.520 --> 00:27:55.040
All right.

00:27:55.110 --> 00:27:59.520
I actually developed the logistics
team that manages the digital

00:27:59.520 --> 00:28:02.040
distribution of all Apple's own apps.

00:28:02.160 --> 00:28:05.740
And we have a lot of apps,
so we actually use the same

00:28:05.740 --> 00:28:07.440
tools that you guys do.

00:28:07.440 --> 00:28:11.720
We are huge fans of iTunes
Connect and Application Loader.

00:28:11.720 --> 00:28:15.990
So we're not only engineers,
we're also the users.

00:28:16.260 --> 00:28:21.950
I just want to let you guys know,
it's an incredible and delicate ballet

00:28:21.950 --> 00:28:27.780
to produce these tools and services
that are ever evolving and available

00:28:27.780 --> 00:28:31.440
around the world 24 hours a day,
seven days a week.

00:28:31.470 --> 00:28:35.780
And it's actually done out of love.

00:28:35.860 --> 00:28:36.640
I know.

00:28:36.700 --> 00:28:42.900
We love our Macs, we love our devices,
we love the OS, we love our applications,

00:28:42.930 --> 00:28:46.990
and we love the applications and
content and peripherals that you guys

00:28:47.130 --> 00:28:49.420
create to complete the experience.

00:28:49.760 --> 00:28:52.480
It's pretty awesome.

00:28:52.940 --> 00:28:55.600
So I just, I'll get sappy for a second.

00:28:55.610 --> 00:28:58.680
I wanna speak for everyone
when I say thank you guys

00:28:58.740 --> 00:29:01.710
for doing what you guys love,
'cause it enables us to do what we love.

00:29:01.780 --> 00:29:02.710
So thank you guys.

00:29:03.970 --> 00:29:05.600
All right, enough of the sappy.

00:29:05.600 --> 00:29:08.370
I'll do some display sets here.

00:29:17.490 --> 00:29:24.120
From our Manage Our Applications page,
we're going to go down here

00:29:24.120 --> 00:29:26.870
to Manage Display Sets.

00:29:27.950 --> 00:29:30.240
All right, you see we have a couple
display sets already set up.

00:29:30.240 --> 00:29:32.620
We have Fighter and Thunder Runner.

00:29:32.620 --> 00:29:36.090
All right, we're going to create
a new one right now.

00:29:38.520 --> 00:29:39.940
Add in a reference name here.

00:29:39.940 --> 00:29:42.400
This is a name only for you.

00:29:42.400 --> 00:29:44.120
It will not be shown to your users.

00:29:44.120 --> 00:29:48.160
Now, this display set ID.

00:29:49.200 --> 00:29:52.050
Okay,
you gotta remember that this display set

00:29:52.050 --> 00:29:58.040
ID must match the NS ubiquitous display
set key that's located in your P list.

00:29:58.040 --> 00:30:02.380
So let's go over to
our touch fighter here.

00:30:03.200 --> 00:30:04.960
Add that key in.

00:30:05.110 --> 00:30:06.530
Just get it out of the way.

00:30:06.580 --> 00:30:11.940
Okay, you can't save a display set
without adding a language first,

00:30:11.940 --> 00:30:13.280
a localization.

00:30:13.330 --> 00:30:15.280
Let's add a language.

00:30:15.280 --> 00:30:19.780
Simple.

00:30:19.780 --> 00:30:21.780
Let's add another one.

00:30:21.780 --> 00:30:26.940
Let's do French.

00:30:33.600 --> 00:30:34.430
We'll hit save.

00:30:34.440 --> 00:30:39.960
All right, you can see our display
set's been set up.

00:30:40.400 --> 00:30:44.150
Let's take a look, inspect that.

00:30:45.870 --> 00:30:48.660
All right,
so our display set's been set up,

00:30:48.660 --> 00:30:53.890
and it's waiting to have applications
that are uploaded that reference that

00:30:53.940 --> 00:30:56.380
display set ID in its Info.plist.

00:30:56.680 --> 00:30:59.900
I could probably make my
French here a little bit nicer.

00:30:59.930 --> 00:31:03.200
So you can just click on
it and edit it right there.

00:31:05.950 --> 00:31:09.980
Check out a display set that actually
already has applications attached to it.

00:31:10.090 --> 00:31:12.810
Let's go ahead and take
a look at our Finder.

00:31:13.110 --> 00:31:16.350
You see here in Fighter,
we have Touch Fighter 2 for

00:31:16.570 --> 00:31:20.560
Mac and Touch Fighter 2 for the
iOS attached to this display set.

00:31:20.560 --> 00:31:21.970
I love the display set feature.

00:31:22.000 --> 00:31:25.750
It's just one of those little icing on
the cake features that creates a really

00:31:25.750 --> 00:31:27.670
clean cloud experience for the user.

00:31:27.680 --> 00:31:30.800
And I really love that we're
doing these little things.

00:31:30.800 --> 00:31:32.730
All right, we click Done.

00:31:33.150 --> 00:31:37.680
I just want to let you guys know
and show you one little feature

00:31:37.680 --> 00:31:40.100
that's over in your portal.

00:31:40.100 --> 00:31:44.680
Let's go to the dev center here.

00:31:56.060 --> 00:31:58.500
OK, you go over here to the
provisioning portal.

00:31:58.500 --> 00:32:01.120
And we'll go to our app IDs.

00:32:01.120 --> 00:32:04.120
I just want to show you guys,
when you're setting up your

00:32:04.120 --> 00:32:08.830
applications in the developer portal,
there's a new flag that you set,

00:32:08.950 --> 00:32:11.540
Enable for iCloud.

00:32:11.580 --> 00:32:15.710
Click that off,
and you click Done right there.

00:32:16.130 --> 00:32:18.110
Okay, back to our display sets.

00:32:18.210 --> 00:32:21.350
If I'm no longer using
a display set anymore,

00:32:21.350 --> 00:32:24.290
I can delete it very easily right here.

00:32:24.630 --> 00:32:29.040
You cannot delete a display set
if there are approved versions of

00:32:29.040 --> 00:32:35.090
your applications that reference
that key in their Info.plist.

00:32:35.460 --> 00:32:36.010
And that's all.

00:32:36.170 --> 00:32:36.870
That's display set.

00:32:37.020 --> 00:32:37.640
It's pretty easy.

00:32:37.640 --> 00:32:39.020
Aloke's team did a great job.

00:32:39.050 --> 00:32:40.210
Thank you guys very much.

00:32:40.220 --> 00:32:41.980
I'm going to bring back Ricardo.

00:32:42.090 --> 00:32:44.100
Enjoy the bash tonight.

00:32:47.300 --> 00:32:48.800
Thank you, Paul.

00:32:48.850 --> 00:32:50.610
One thing to note,
the controls you just saw on iTunes

00:32:50.770 --> 00:32:57.530
Connect will be available in the
impending months as we near iOS 5 GM.

00:32:57.610 --> 00:33:00.140
Let's talk about Newsstand.

00:33:00.290 --> 00:33:02.490
Newsstand is new.

00:33:03.690 --> 00:33:14.220
for iOS 5, and was also announced
on Monday at the keynote.

00:33:14.220 --> 00:33:14.220
There's a new area in the
App Store specifically designed for

00:33:14.220 --> 00:33:14.220
our subscriptions and publications.

00:33:14.920 --> 00:33:18.370
It's based on a collection of
classes called the Newsstand Kit,

00:33:18.410 --> 00:33:22.800
and it enables dynamic delivery of
your asset covers and issue content.

00:33:22.890 --> 00:33:26.240
Delivery of that content is backed
by a new push notification model.

00:33:26.240 --> 00:33:28.170
Upon receiving the push,
the app communicates in the

00:33:28.260 --> 00:33:31.740
background to developer servers
to download the content.

00:33:31.740 --> 00:33:34.280
This is important,
as it allows your app to be ready with

00:33:34.280 --> 00:33:38.270
the new content upon launch of the
new publication or periodical that

00:33:38.270 --> 00:33:40.030
you want to deliver to the customer.

00:33:40.130 --> 00:33:42.830
An ongoing issue cover
content is delivered from the

00:33:42.830 --> 00:33:44.430
publisher service as well.

00:33:45.510 --> 00:33:49.430
You supply the default issue
cover art in iTunes Connect.

00:33:49.550 --> 00:33:51.570
Here's what Newsstand looks like.

00:33:51.800 --> 00:33:53.880
The top right there,
you can see a little store button

00:33:53.880 --> 00:33:55.040
that'll take you into the store.

00:33:55.100 --> 00:33:58.000
You can browse for more
publications or newspapers.

00:33:58.980 --> 00:34:02.970
In terms of setup and configuration,
there are two new Info.plist keys.

00:34:03.030 --> 00:34:06.760
There's UI Newsstand App, a Boolean,
and UI Newsstand Icon,

00:34:06.760 --> 00:34:09.520
which defines the look and
feel of your binary artwork.

00:34:10.450 --> 00:34:12.260
I'm going to go into
a very quick example,

00:34:12.260 --> 00:34:14.840
but if you want to dive a little
bit deeper into Newsstand,

00:34:14.840 --> 00:34:16.400
there's a presentation right
after this in Russian Hill,

00:34:16.400 --> 00:34:18.020
I believe, building Newsstand apps.

00:34:18.040 --> 00:34:21.910
Here, you see an Info.plist that
has CFBundle icon files,

00:34:21.910 --> 00:34:24.480
a new entry, a new key for Newsstand.

00:34:24.480 --> 00:34:29.800
Underneath it, the UI Newsstand icon,
where I have a single News 1 X PNG,

00:34:29.800 --> 00:34:33.500
and I've chosen a type
of newspaper and an edge,

00:34:33.500 --> 00:34:36.500
a bottom,
to allow my cover art to be displayed

00:34:36.680 --> 00:34:38.350
like a newspaper in Newsstand.

00:34:38.860 --> 00:34:40.770
So when my new cover art is
fetched from the servers,

00:34:40.770 --> 00:34:44.170
I go to Newsstand, I go to load it,
not only do I have the latest

00:34:44.170 --> 00:34:49.060
cover art for the issue,
say June 2011, but I also have it

00:34:49.100 --> 00:34:51.160
looking like a newspaper.

00:34:52.940 --> 00:34:56.180
There's going to be an optional
developer supplied RSS feed that

00:34:56.180 --> 00:34:59.910
we will support for dynamically
updating issue metadata and artwork,

00:34:59.910 --> 00:35:02.500
as well as a set of iTunes
Connect controls to see current

00:35:02.500 --> 00:35:04.800
and past issues that you're
delivering to your customers.

00:35:04.800 --> 00:35:07.330
Both the RSS feed and
iTunes Connect controls

00:35:07.340 --> 00:35:09.050
are coming later this fall.

00:35:10.170 --> 00:35:13.400
And now, to talk about some app best
practices and common pitfalls,

00:35:13.400 --> 00:35:14.800
I'll bring Max up to stage.

00:35:14.830 --> 00:35:16.200
Thank you.

00:35:20.700 --> 00:35:22.460
All right, thank you, Ricardo.

00:35:22.460 --> 00:35:24.810
Now, I'd like to do is just kind
of walk you through some best

00:35:24.900 --> 00:35:26.800
practices and common pitfalls.

00:35:26.800 --> 00:35:30.600
These are all issues that
applications are running into,

00:35:30.600 --> 00:35:35.800
literally some of them hundreds of times
per week as part of the app review flow.

00:35:37.800 --> 00:35:43.300
Hopefully, a little bit of an ounce
of prevention here.

00:35:43.300 --> 00:35:43.300
The first is functionality.

00:35:43.460 --> 00:35:46.250
As part of the app review process,
we're looking at the

00:35:46.250 --> 00:35:49.050
description of your application,
how you are marketing your

00:35:49.050 --> 00:35:51.580
application to customers,
and we're ensuring that the

00:35:51.580 --> 00:35:55.000
functionality that you're advertising
actually matches the functionality

00:35:55.040 --> 00:35:56.300
of your application binary.

00:35:56.850 --> 00:35:59.390
If it doesn't,
we're going to ask you to correct that.

00:35:59.780 --> 00:36:01.800
Next up is metadata.

00:36:01.880 --> 00:36:04.200
Here, we're looking at all the
metadata that you provide,

00:36:04.260 --> 00:36:06.460
and we're looking to see if
you've provided any that would

00:36:06.530 --> 00:36:08.200
be considered inappropriate.

00:36:08.280 --> 00:36:10.800
For instance,
putting testing 123 or coming soon

00:36:10.890 --> 00:36:14.800
in your description is not going
to be allowed onto the App Store.

00:36:15.290 --> 00:36:16.520
Next up is crashing.

00:36:16.550 --> 00:36:20.640
Believe it or not,
one of the top reasons an application

00:36:20.640 --> 00:36:23.890
does not make it through the app
review process right now is because

00:36:23.890 --> 00:36:28.320
it crashes either on launch or it
crashes during the review process.

00:36:28.380 --> 00:36:31.980
So please, please make sure that you've
thoroughly tested your applications

00:36:31.980 --> 00:36:34.390
before you submit them for review.

00:36:34.900 --> 00:36:37.200
Next up would be
considered beta or trial.

00:36:37.230 --> 00:36:41.830
Beta or trial applications are
not allowed within the App Store.

00:36:42.640 --> 00:36:45.430
Next is what we'd call an ad
hoc distributed application.

00:36:45.680 --> 00:36:47.380
This would be a limited
utility application.

00:36:47.450 --> 00:36:49.880
For instance,
if I were to write an application that

00:36:49.880 --> 00:36:52.680
only controlled the lighting of my house,
while interesting to myself,

00:36:52.680 --> 00:36:56.420
it's probably not interesting
to a broader audience.

00:36:57.580 --> 00:36:59.700
Next is the icon mismatch.

00:36:59.750 --> 00:37:01.530
In iTunes Connect,
we ask you to provide a large

00:37:01.660 --> 00:37:03.900
512 by 512 version of your icon.

00:37:03.900 --> 00:37:05.480
And when you've submitted
your binary to us,

00:37:05.630 --> 00:37:09.120
we then extract the smaller
icons from your binary bundle.

00:37:09.170 --> 00:37:10.810
Now,
in different places within the store,

00:37:10.820 --> 00:37:13.380
we'll be using the large artwork,
and in other places,

00:37:13.380 --> 00:37:15.460
we'll be using the small artwork.

00:37:15.460 --> 00:37:18.270
We always want to make sure we
have a consistent user experience

00:37:18.380 --> 00:37:20.220
when flowing from page to page.

00:37:20.220 --> 00:37:25.210
So we want to make sure that
your icons look very similar.

00:37:25.710 --> 00:37:28.100
Next up is name inconsistency.

00:37:28.230 --> 00:37:29.800
When you set up your
application in iTunes Connect,

00:37:29.830 --> 00:37:31.300
you'll be providing a name.

00:37:31.400 --> 00:37:34.240
And when you upload your binary,
we're going to be comparing the name of

00:37:34.240 --> 00:37:36.420
your binary to the name of the store.

00:37:36.490 --> 00:37:39.790
If you set up the application in
iTunes Connect and called it Bananas,

00:37:39.910 --> 00:37:41.820
and yet when you uploaded
your application,

00:37:41.840 --> 00:37:44.930
the name of your application when
installed on a device is called Apples,

00:37:45.120 --> 00:37:45.970
that's going to be a problem.

00:37:46.110 --> 00:37:48.510
We're going to ask you
to correct one of them.

00:37:48.700 --> 00:37:49.990
Next up will be advertising.

00:37:50.080 --> 00:37:52.720
This is where an application is
literally providing no value,

00:37:52.720 --> 00:37:56.760
but just being used for marketing
or advertising purposes.

00:37:57.980 --> 00:37:59.490
Next is cell bandwidth.

00:37:59.570 --> 00:38:02.000
If you're using any of the
HTTP live streaming APIs,

00:38:02.000 --> 00:38:04.620
you want to make sure that you're
correctly accounting for how to

00:38:04.620 --> 00:38:06.380
handle them on a cellular network.

00:38:06.540 --> 00:38:09.080
There's guidelines out there,
and you want to make sure that

00:38:09.130 --> 00:38:10.890
you've tested those guidelines.

00:38:11.620 --> 00:38:14.200
Next is what we refer to
as the iPod Touch issue.

00:38:14.200 --> 00:38:17.050
This is where if you're using
features like video cameras or

00:38:17.180 --> 00:38:20.770
cellular functions within the OS,

00:38:20.960 --> 00:38:24.920
You need to make sure that you're
correctly handling the case where you're

00:38:24.920 --> 00:38:29.540
disabling it or prompting the user
to disable these different functions.

00:38:29.590 --> 00:38:32.410
If you don't want the application
to get onto those devices,

00:38:32.470 --> 00:38:34.110
there's something called
device capabilities,

00:38:34.130 --> 00:38:36.680
where you can actually say
that your application requires

00:38:36.770 --> 00:38:38.260
one of these capabilities.

00:38:38.320 --> 00:38:41.760
And then your application will not
actually be able to be installed

00:38:41.760 --> 00:38:45.280
on any device that doesn't
support those capabilities.

00:38:46.420 --> 00:38:48.050
Next up is the Apple Trademark.

00:38:48.160 --> 00:38:50.270
If you're using the Apple Trademark,
you want to make sure that

00:38:50.270 --> 00:38:53.720
you're abiding by the guidelines
for using that trademark.

00:38:54.100 --> 00:38:58.350
For Lion developers,
one of the guidelines that we're pointing

00:38:58.440 --> 00:39:00.640
out for Lion is the app signature.

00:39:00.700 --> 00:39:03.910
For the newer functionality that we're
adding in terms of push notification,

00:39:03.970 --> 00:39:06.770
as well as in-app purchasing,
requires a valid signature

00:39:06.870 --> 00:39:08.000
of your application.

00:39:08.000 --> 00:39:11.220
If you're doing anything on the first
launch of your application that might

00:39:11.220 --> 00:39:14.800
break the signature if you're starting to
put stuff in your application bundle that

00:39:14.800 --> 00:39:17.500
wasn't referenced within the resource,
there will break your

00:39:17.510 --> 00:39:19.980
application signature,
at which point your app will stop

00:39:20.070 --> 00:39:24.000
receiving push notifications and will no
longer be able to make in-app purchases.

00:39:25.440 --> 00:39:27.860
Next up for iCloud Storage.

00:39:27.860 --> 00:39:30.640
iCloud Storage is for
user-generated content.

00:39:30.660 --> 00:39:32.590
You should not be putting
anything that you download to

00:39:32.720 --> 00:39:34.020
cache locally on the device.

00:39:34.170 --> 00:39:35.580
For instance,
if you're downloading a bunch

00:39:35.580 --> 00:39:38.580
of maps or other what might be
deemed reference data that could

00:39:38.580 --> 00:39:42.550
be redownloaded at a later point,
we're going to ask you not to store any

00:39:42.560 --> 00:39:45.010
of those files within the iCloud Storage.

00:39:45.990 --> 00:39:47.620
Next is Lion testing.

00:39:47.680 --> 00:39:50.340
For this,
the Mac App Review team is switching to

00:39:50.600 --> 00:39:52.730
reviewing all applications under Lion.

00:39:52.820 --> 00:39:56.550
So for new applications being submitted,
or for updates to existing

00:39:56.550 --> 00:39:59.530
applications that are being submitted,
you want to make sure that

00:39:59.530 --> 00:40:02.730
you have thoroughly tested
that application under Lion.

00:40:04.170 --> 00:40:06.410
Next would be app
consolidation or app spamming.

00:40:06.510 --> 00:40:09.900
This is where you'll be submitting
large numbers of applications where

00:40:09.920 --> 00:40:13.880
all you're doing is basically modifying
the content of that application.

00:40:13.880 --> 00:40:16.500
This is a great use
for in-app purchasing.

00:40:16.560 --> 00:40:18.770
So when this happens,
what we'll be doing is we'll be

00:40:18.770 --> 00:40:21.210
taking all those applications,
handing them back to you,

00:40:21.210 --> 00:40:24.590
and asking you to consolidate them to
a single application and use in-app

00:40:24.590 --> 00:40:26.880
to unlock that different content.

00:40:27.070 --> 00:40:28.790
And finally,
it bears repeating one last time that

00:40:28.840 --> 00:40:32.540
crashing really is one of the top
reasons that an application does not

00:40:32.540 --> 00:40:34.500
make it through the app review process.

00:40:34.590 --> 00:40:36.800
So please, please,
please make sure you've thoroughly tested

00:40:36.830 --> 00:40:39.730
your applications before submitting them.

00:40:40.600 --> 00:40:42.840
So in summary,
you want to make sure that you're getting

00:40:42.840 --> 00:40:46.040
ready for the new iOS and Lion features,
namely in-app purchases for Lion.

00:40:46.040 --> 00:40:48.660
Newsstand is coming for iOS 5.

00:40:48.690 --> 00:40:51.640
iCloud Storage is coming for iOS 5,
as well as Lion.

00:40:51.660 --> 00:40:54.300
Binary submissions for Lion are
going to be coming soon.

00:40:54.310 --> 00:40:55.680
Watch for the announcements.

00:40:55.680 --> 00:41:00.210
And we'll be taking iOS 5
submissions later on this fall.

00:41:01.100 --> 00:41:04.880
For more information, Bill Dudney is the
Application Frameworks Evangelist.

00:41:04.970 --> 00:41:08.350
Additional documentation, the iTunes
Connect Developer User Guide covers

00:41:08.590 --> 00:41:11.000
everything that we've
covered today in far more detail.

00:41:11.000 --> 00:41:17.160
For videos of past presentations,
you can view developer.apple.com/videos.

00:41:17.160 --> 00:41:19.300
And again,
we always welcome your feedback

00:41:19.310 --> 00:41:21.000
on the Apple Developer Forums.

00:41:21.860 --> 00:41:23.370
Those are related sessions.

00:41:23.420 --> 00:41:24.630
This morning,
there was an in-app purchases

00:41:24.740 --> 00:41:28.080
for iOS and Mac OS X,
iCloud Storage Overview,

00:41:28.090 --> 00:41:30.940
and storing documents
in iCloud using iOS 5.

00:41:31.210 --> 00:41:33.850
If you missed any of these sessions,
you can look for them after the

00:41:33.850 --> 00:41:36.360
conference ends on the website.