WEBVTT

00:00:09.300 --> 00:00:10.530
Hello.

00:00:10.600 --> 00:00:13.200
Welcome to part two of iOS games.

00:00:13.230 --> 00:00:14.450
Working on game design.

00:00:14.640 --> 00:00:16.480
My name's Graeme Devine.

00:00:16.590 --> 00:00:20.810
Gonna be talking today
about game design on iOS.

00:00:20.950 --> 00:00:23.320
Just quickly,
how many of you are iOS game people

00:00:23.320 --> 00:00:26.040
out there and have apps in the store?

00:00:26.110 --> 00:00:27.310
That's absolutely awesome.

00:00:27.380 --> 00:00:28.210
It's most of you.

00:00:28.310 --> 00:00:29.520
Wow.

00:00:29.610 --> 00:00:31.570
Well, in part one,
we kind of went over the secret sauce

00:00:31.670 --> 00:00:34.520
to a whole bunch of iOS technologies.

00:00:34.590 --> 00:00:36.830
You know,
how Game Center works and how the

00:00:36.830 --> 00:00:40.230
new turn-by-turn gaming API lets
you make these turn-by-turn games,

00:00:40.290 --> 00:00:43.630
which are absolutely, you know, gonna,
I think, really change the way that

00:00:43.720 --> 00:00:45.580
we approach games on iOS.

00:00:45.760 --> 00:00:49.890
Nate talked about the cloud and how
to sync up to the cloud and how we

00:00:49.890 --> 00:00:54.020
can share between multiple devices
the preferences of our application and

00:00:54.020 --> 00:00:57.960
storing them there and then bringing
them back down and the code to do that

00:00:58.010 --> 00:01:01.080
with the short notification thing.

00:01:01.530 --> 00:01:04.360
Talked about GL kits and how
easy it is to load textures.

00:01:04.400 --> 00:01:09.360
And apply effects and do math and to set
up a render loop and make those things

00:01:09.360 --> 00:01:11.450
much easier than they've been before.

00:01:11.590 --> 00:01:15.640
And finally, talked about AirPlay and how
wonderful AirPlay is that,

00:01:15.640 --> 00:01:18.920
you know, it's so easy to set up a second
display now from our iPad 2 and

00:01:18.920 --> 00:01:21.110
broadcast that onto our HDTV.

00:01:21.170 --> 00:01:24.210
I think that's really gonna massively
change games and we'll talk about

00:01:24.570 --> 00:01:29.260
how some of those game design,
about some of that game design

00:01:29.260 --> 00:01:30.720
later on in the talk today.

00:01:30.830 --> 00:01:34.200
So, as Nate said,
it really is a fantastic time

00:01:34.200 --> 00:01:35.620
to be making games for iOS.

00:01:35.830 --> 00:01:37.670
I mean, wow!

00:01:37.800 --> 00:01:41.310
You know, we are a long way from that
first generation iPhone.

00:01:41.410 --> 00:01:44.610
We have graphic systems which are
so much more powerful now than

00:01:44.610 --> 00:01:46.200
they were on that first phone.

00:01:46.310 --> 00:01:48.920
The iPad 2 is an
incredibly powerful device.

00:01:48.920 --> 00:01:52.860
It's just, I think it's the best gaming
device on the planet by far.

00:01:53.060 --> 00:01:53.840
The SDK has changed.

00:01:53.840 --> 00:01:56.790
We have new and powerful
technologies like Game Center with

00:01:56.930 --> 00:01:58.920
50 million people online,
you know,

00:01:58.920 --> 00:02:04.040
wanting to play games and the ability to
build that right into our applications.

00:02:04.240 --> 00:02:07.880
Most fantastic though,
I say fantastic a lot by the way,

00:02:07.910 --> 00:02:12.880
I'm like Doctor Who that way,
games themselves are also evolving.

00:02:13.100 --> 00:02:15.590
Games have really changed from the
first games we put on the phone to

00:02:15.610 --> 00:02:16.890
the games we're presenting today.

00:02:17.070 --> 00:02:19.690
We're kind of still learning
our way about how to design the

00:02:19.750 --> 00:02:21.480
best of breed games for iOS.

00:02:21.480 --> 00:02:24.280
So, we're gonna take a look at some of
those games and what they're doing in

00:02:24.280 --> 00:02:28.510
terms of game design and what I think,
you know,

00:02:28.510 --> 00:02:30.890
really makes the best of breed game.

00:02:31.580 --> 00:02:35.940
So today we're going to talk about
10 ideas for making games great.

00:02:35.950 --> 00:02:38.380
And we're going to go through
each of those 10 ideas,

00:02:38.380 --> 00:02:43.160
and hopefully by the end of it,
you'll know a little bit more

00:02:43.160 --> 00:02:44.940
about making games for iOS.

00:02:45.010 --> 00:02:49.090
Let's talk about number one:
design to the platform.

00:02:49.580 --> 00:02:51.400
What do I mean by that?

00:02:51.460 --> 00:02:53.960
I mean,
we've been making games for a long time.

00:02:53.960 --> 00:02:56.640
There's a lot of game developers out
there who have made console games,

00:02:56.640 --> 00:02:58.900
and console games are
absolutely fantastic.

00:02:59.070 --> 00:03:01.480
They have controllers,
and the controller has buttons,

00:03:01.480 --> 00:03:03.320
and the buttons do things on the screen.

00:03:03.400 --> 00:03:05.360
And I'm looking at the screen,
and my hands aren't

00:03:05.360 --> 00:03:09.050
looking at the controller,
and a typical controller now has,

00:03:09.140 --> 00:03:11.780
you know, 10, 20 buttons on it that
do different things.

00:03:11.900 --> 00:03:14.670
And, you know, we have to design games
that reflect that.

00:03:14.840 --> 00:03:17.680
Game design has to reflect the
fact that it has a controller.

00:03:17.680 --> 00:03:20.900
Whereas on iOS, we've only got one thing.

00:03:21.030 --> 00:03:23.900
We've got a finger that touches glass.

00:03:23.900 --> 00:03:27.060
And there's a huge expectation amongst
players there that as soon as they,

00:03:27.060 --> 00:03:29.210
as soon as their finger
goes out and touches glass,

00:03:29.210 --> 00:03:30.900
that something's going to happen.

00:03:30.900 --> 00:03:32.730
Hopefully something magical.

00:03:32.900 --> 00:03:35.810
And so, there's a very different
approach to game design,

00:03:35.880 --> 00:03:39.710
and we need to be thinking about that
approach to game design right from the

00:03:39.710 --> 00:03:41.900
very first thought about our new games.

00:03:41.900 --> 00:03:44.900
It needs to think about
that actual difference.

00:03:45.040 --> 00:03:48.260
In reality,
because we're also holding these devices,

00:03:48.340 --> 00:03:51.900
we are holding the entire world
of our games in our hands.

00:03:51.900 --> 00:03:53.820
And that's a very
powerful kind of metaphor.

00:03:53.950 --> 00:03:55.900
If you think about the console games,
they've slowly got further

00:03:55.900 --> 00:03:57.090
and further away from us,
you know,

00:03:57.090 --> 00:03:58.920
across the other side of the living room,
now with wireless

00:03:58.920 --> 00:04:00.760
controllers 30 feet away.

00:04:00.910 --> 00:04:03.680
The fact I'm holding it in my hands,
and it's taking up so much

00:04:03.680 --> 00:04:06.020
of my view on the iPad 2,
and I can tilt it around,

00:04:06.020 --> 00:04:08.900
I can almost feel the world there,
and I can go and touch it.

00:04:08.960 --> 00:04:10.880
It adds to the game when
I actually touch the glass.

00:04:10.930 --> 00:04:11.900
I can actually feel the glass.

00:04:11.900 --> 00:04:12.890
I can actually feel the world.

00:04:12.940 --> 00:04:14.900
I'm actually going to interact
with that world behind me.

00:04:14.900 --> 00:04:17.820
We'll talk about some of the
game design ideas there on how to

00:04:17.970 --> 00:04:19.900
really make that feel interactive.

00:04:20.040 --> 00:04:22.900
And now with Apple TV,
we're sharing the world.

00:04:22.900 --> 00:04:25.750
We are broadcasting the world
from my iPad 2 to the TV set.

00:04:25.900 --> 00:04:28.520
We're going to talk about what
that means because our eyeballs

00:04:28.520 --> 00:04:31.190
might be somewhere else now,
and we might be thinking about

00:04:31.190 --> 00:04:33.900
what to do with a touch device
and what that actually means.

00:04:35.140 --> 00:04:38.360
So, a few years ago,
a game called Harbormaster

00:04:38.360 --> 00:04:40.760
came out from Emoji Studios.

00:04:40.890 --> 00:04:42.220
Are they out there?

00:04:42.290 --> 00:04:44.210
Big cheer for them.

00:04:47.620 --> 00:04:51.540
Because Harbormaster was kind of
that big duh moment in the sky of,

00:04:51.670 --> 00:04:53.090
here is how you make a great touch game.

00:04:53.090 --> 00:04:56.960
Here is how you make a game that
I'm going to draw around on the

00:04:56.960 --> 00:05:02.410
screen and move those boats around,
draw their lines, and it's a touch game.

00:05:02.410 --> 00:05:03.860
It's a fantastic touch game.

00:05:03.860 --> 00:05:06.680
It's one of those games that you went,
oh my god, this is how to do touch games.

00:05:06.710 --> 00:05:08.550
And so I loved it for that.

00:05:08.860 --> 00:05:12.150
And if you think about that game too,
it is impossible to, you know,

00:05:12.150 --> 00:05:15.250
it would be really hard to make
that game with a controller.

00:05:15.250 --> 00:05:17.640
That game wouldn't be
very good with a joystick.

00:05:17.640 --> 00:05:20.470
And that's exactly the kind
of thought process you need to

00:05:20.610 --> 00:05:23.740
have in your mind when you think
about making a game for iOS.

00:05:23.740 --> 00:05:26.160
I want this game to suck with a joystick.

00:05:29.300 --> 00:05:33.510
Because, you know, you know,
Harbourmaster, you know,

00:05:33.570 --> 00:05:35.480
touching the glass is that different.

00:05:35.480 --> 00:05:37.200
If you aren't thinking that,
something's wrong.

00:05:37.200 --> 00:05:43.570
You know, one of the things that's,
that's, you have, you know,

00:05:43.570 --> 00:05:45.790
when you have these devices is that,
you know,

00:05:45.790 --> 00:05:49.260
we have multiple iOS devices now,
and we hold them very differently.

00:05:49.260 --> 00:05:52.580
So when I'm holding the iPhone,
I typically hold the iPhone and

00:05:52.580 --> 00:05:55.700
I cusp it in my hands and I've
got my two thumbs doing stuff.

00:05:55.720 --> 00:05:58.950
And it's, you know, that's the way that
I expect to play games.

00:05:59.710 --> 00:06:02.260
Whereas when I'm on the iPad,
I kind of put my arm, you know,

00:06:02.460 --> 00:06:05.270
behind the iPad and
I use one single finger.

00:06:05.550 --> 00:06:08.990
And that one single finger is
affecting the world in front of me

00:06:08.990 --> 00:06:11.080
and kind of doing interesting things.

00:06:11.100 --> 00:06:14.740
And you can see this in Apple's
best of breeds applications.

00:06:14.740 --> 00:06:18.400
And here's Apple's iMovie on
both the iPhone and on the iPad.

00:06:18.400 --> 00:06:20.500
You can see on the,
that the interface is very

00:06:20.570 --> 00:06:22.280
different between the versions.

00:06:22.280 --> 00:06:25.320
They've thought about building different
versions for different iOS devices.

00:06:25.320 --> 00:06:28.260
On the iPhone,
there it is cusp at the side.

00:06:28.330 --> 00:06:29.260
I can use my thumbs.

00:06:29.300 --> 00:06:32.870
You can see the information
directly in the center of the

00:06:32.970 --> 00:06:35.520
screen and the timeline underneath.

00:06:35.660 --> 00:06:38.640
And you can see on the iPad version,
it's designed for holding

00:06:38.640 --> 00:06:41.750
with one hand back and playing
around with a single finger.

00:06:41.800 --> 00:06:42.960
And you can see on the iPad version,
it's designed for holding

00:06:42.960 --> 00:06:42.960
with one hand back and playing
around with a single finger.

00:06:43.190 --> 00:06:47.670
That user interface change means
that you cannot just up-res

00:06:47.670 --> 00:06:49.820
your application on an iPad.

00:06:49.960 --> 00:06:53.430
You can't just say,
"Here's my game." Suddenly my graphics

00:06:53.430 --> 00:06:57.550
are a little bit bigger and my screen
interface is going to be the same.

00:06:57.660 --> 00:07:00.610
You really need to think about
how people hold these devices.

00:07:00.900 --> 00:07:04.970
You need to look at that in your
game design if you're making a

00:07:04.970 --> 00:07:09.210
game which runs both on the iOS,
iPhone, and iPad.

00:07:11.900 --> 00:07:15.060
So, this is Quest we showed last year.

00:07:15.220 --> 00:07:18.120
There are two ways of
interacting with a game world,

00:07:18.130 --> 00:07:19.400
as I talked about.

00:07:19.510 --> 00:07:23.630
There is the indirect method
of using a virtual D-pad.

00:07:23.700 --> 00:07:25.620
We'll talk about those more later.

00:07:25.750 --> 00:07:29.140
And you can see the virtual D-pad there,
and I'm going to move it around,

00:07:29.140 --> 00:07:32.710
and the character's going to move
around or do something indirectly,

00:07:32.710 --> 00:07:34.920
and that's an indirect
approach to game design.

00:07:35.000 --> 00:07:36.980
And then I'm going to press
the buttons underneath,

00:07:37.020 --> 00:07:39.920
and it's going to launch magic
missiles and do all sorts of things.

00:07:39.970 --> 00:07:43.360
Or there is the direct approach of
touching the world in front of me,

00:07:43.490 --> 00:07:47.800
which is typically when I have an iPad
and I open up a game for the first time,

00:07:47.860 --> 00:07:48.980
that's what I'm going to try to do.

00:07:49.030 --> 00:07:51.830
I'm going to try and touch the screen,
because I expect when I touch

00:07:51.830 --> 00:07:54.200
the screen something to happen,
because it happens in

00:07:54.200 --> 00:07:55.400
every other application.

00:07:55.420 --> 00:07:59.160
It happens in photos, it happens in mail,
it happens in -- I expect

00:07:59.160 --> 00:08:00.680
things to happen directly.

00:08:01.080 --> 00:08:04.870
So, directly interacting with the
world is kind of the expectation

00:08:04.870 --> 00:08:06.830
I have from that application.

00:08:07.270 --> 00:08:10.560
Now if we look at some absolute
best of breed applications

00:08:11.020 --> 00:08:14.260
that deal well with touch,
we see Words with Friends.

00:08:14.400 --> 00:08:16.380
It's a board game implementation.

00:08:16.440 --> 00:08:19.440
And when you pick it up,
you know right away how to play the game.

00:08:19.490 --> 00:08:21.830
I'm going to be picking up a tile,
moving it around,

00:08:21.850 --> 00:08:23.340
and dropping it on the board.

00:08:23.400 --> 00:08:25.070
There's no instruction
book that comes with it.

00:08:25.220 --> 00:08:25.870
It's not indirect.

00:08:25.980 --> 00:08:28.830
I'm not here guiding with a
virtual D-pad and moving up and

00:08:28.830 --> 00:08:30.450
down and going left and right.

00:08:30.640 --> 00:08:33.850
It seems obvious,
but I've got to point this out.

00:08:35.520 --> 00:08:39.340
Crazy's Contraptions,
an absolutely excellent game that

00:08:39.340 --> 00:08:42.100
I see three and four year olds playing.

00:08:42.100 --> 00:08:45.150
You can give them an iPad
and they grok right away.

00:08:45.370 --> 00:08:48.430
I can move these things around on
the screen and something happens.

00:08:48.520 --> 00:08:50.750
I mean,
how fantastic is that that you can

00:08:50.880 --> 00:08:54.290
give a device to someone and right
away they get how things work?

00:08:54.380 --> 00:08:56.320
And of course, Harbormaster.

00:08:56.380 --> 00:09:01.150
And as I think about these games,
what I kind of notice about these games

00:09:01.160 --> 00:09:03.840
is they have staying power in the charts.

00:09:03.840 --> 00:09:03.840
They kind of stay in the top 25.

00:09:03.840 --> 00:09:06.950
Because people get them,
they know how to use them,

00:09:07.040 --> 00:09:08.220
they keep playing them.

00:09:08.290 --> 00:09:10.870
Absolutely wonderful games.

00:09:11.980 --> 00:09:17.360
Now when I think about indirect
interaction and virtual D-pads,

00:09:17.500 --> 00:09:20.980
what I'm saying to my game player when
I have a virtual D-pad on the screen is,

00:09:21.220 --> 00:09:26.220
"My game is better with a joystick."
"My game is more fun on Xbox Live,

00:09:26.220 --> 00:09:30.520
but I couldn't think of any way
to make my touch work directly,

00:09:30.520 --> 00:09:33.680
so I'm giving you a
virtual D-pad." And that,

00:09:33.680 --> 00:09:36.470
to me,
is not such a great way to interact

00:09:36.470 --> 00:09:38.740
with the world in front of me.

00:09:38.870 --> 00:09:41.410
Some games also draw cursors
that I'm going to move around,

00:09:41.450 --> 00:09:45.300
and that's kind of the way
that the game is going to work.

00:09:45.410 --> 00:09:48.280
Some games have jump buttons on the
other side as well as the virtual D-pad,

00:09:48.380 --> 00:09:50.980
so I'm kind of cusping my hand there,
side to side,

00:09:50.990 --> 00:09:55.050
which is great for the position,
but it's a bad way to implement a game

00:09:55.050 --> 00:09:57.500
design where I want to touch the world.

00:09:57.760 --> 00:10:01.140
So I really encourage you to think about
the way that I interact with the world

00:10:01.140 --> 00:10:04.670
and the way that I touch the world,
and the way that I move away from virtual

00:10:04.680 --> 00:10:08.700
D-pads as the major input into games,
because we have a glass interface.

00:10:08.700 --> 00:10:11.260
It doesn't come with a joystick.

00:10:11.260 --> 00:10:15.350
And also when I think about those games,
I try to think of how many of those

00:10:15.350 --> 00:10:17.810
games are in the top 25 that stay there.

00:10:18.180 --> 00:10:20.400
I couldn't think of a lot.

00:10:20.430 --> 00:10:23.900
So, something that's, you know,
really strikes home perhaps more than

00:10:23.900 --> 00:10:27.920
anything is that those games don't have,
you know, don't tend to have the same

00:10:28.040 --> 00:10:31.980
staying power that games have,
you know, the direct interaction do.

00:10:32.230 --> 00:10:34.110
So,
when you think about a touch interface,

00:10:34.110 --> 00:10:38.700
one of the things to think about
is discoverability and usability.

00:10:38.930 --> 00:10:42.960
Here's a card game,
and the card games are easy to pick up.

00:10:42.960 --> 00:10:44.150
You kind of know what to do.

00:10:44.250 --> 00:10:46.770
I'm going to want to move my
card around on the screen,

00:10:46.770 --> 00:10:47.890
so how do I do that?

00:10:47.970 --> 00:10:50.400
I'm going to point at
my card and drag it.

00:10:50.440 --> 00:10:52.890
And that seems kind of obvious,
and that's exactly what it does.

00:10:53.020 --> 00:10:57.210
I drag my card,
five of hearts up to the four hearts,

00:10:57.330 --> 00:10:58.580
and it does the right thing.

00:10:58.670 --> 00:11:01.700
Snaps into place, and the game continues.

00:11:01.900 --> 00:11:04.890
Usability-wise, though,
the user might think in the end, "Well,

00:11:04.890 --> 00:11:06.040
I'm doing that a lot.

00:11:06.040 --> 00:11:09.640
I just want to touch the four hearts
and have the five hearts move up there."

00:11:09.750 --> 00:11:13.920
So that's a little shortcut that you
can add in that lets the more proficient

00:11:13.920 --> 00:11:18.470
users that want to find things later
be able to optimize your application.

00:11:18.580 --> 00:11:20.660
You should always think about
the obvious thing first.

00:11:20.800 --> 00:11:23.730
What is the first person who picks up
this application going to try and do?

00:11:23.980 --> 00:11:25.980
They're going to try and move the card.

00:11:26.130 --> 00:11:27.480
But after a while,
they're going to want to think about,

00:11:27.480 --> 00:11:29.780
"What's the shortcut I can
achieve to do the same thing?

00:11:29.960 --> 00:11:33.650
I want to just click on the four
of hearts and have that drag in

00:11:33.650 --> 00:11:37.920
whatever is the appropriate thing
to do on the screen." So it's often

00:11:37.920 --> 00:11:41.030
good to think about discoverability
and usability when it comes to

00:11:41.130 --> 00:11:45.700
thinking about touch interface and
how things will work on screens.

00:11:46.930 --> 00:11:49.840
Something to think about when you're
touching the world as well is that

00:11:50.210 --> 00:11:53.200
interaction needs to be quick.

00:11:53.330 --> 00:11:57.560
When I have a game up and running
and it's going at 60 hertz,

00:11:57.760 --> 00:12:00.300
the game needs to be
running fast in front of me.

00:12:00.300 --> 00:12:02.560
It needs to be running extremely fast.

00:12:02.700 --> 00:12:04.880
But in word games,
it needs to be running at 60

00:12:04.940 --> 00:12:07.890
hertz whenever I touch the screen,
because what happens is I'm

00:12:08.040 --> 00:12:11.360
going to point at the screen,
pick up a ball, and move it around.

00:12:11.450 --> 00:12:14.370
The ball's going to lag behind me
because I'm running at 10 hertz,

00:12:14.370 --> 00:12:16.180
and me as the user,
I'm going to go back here

00:12:16.180 --> 00:12:17.340
to try to pick up that ball.

00:12:17.640 --> 00:12:19.170
Meanwhile,
it's gone here because that's where

00:12:19.240 --> 00:12:20.910
the touch thing told it to go,
and then I'm going to try

00:12:20.990 --> 00:12:22.880
to catch up to it again,
but it went back there.

00:12:22.960 --> 00:12:26.210
And then I'm going to let go and
not play your app anymore because it

00:12:26.210 --> 00:12:28.410
apparently can't drag the ball around.

00:12:28.540 --> 00:12:31.990
You need to think about going
at 60 hertz even when you're

00:12:31.990 --> 00:12:36.590
picking things up from the screen,
even in a simple game like Word for Word.

00:12:36.690 --> 00:12:40.320
Feel free to ramp down to 10
hertz once the thing's down again.

00:12:40.600 --> 00:12:41.320
Save on battery.

00:12:41.360 --> 00:12:47.360
But think about putting 60 hertz
whenever you do any touch application.

00:12:47.360 --> 00:12:50.480
So that's designing to the platform.

00:12:51.070 --> 00:12:53.990
Number two, audio from the start.

00:12:54.670 --> 00:12:57.010
Audio is incredibly
important in these games,

00:12:57.210 --> 00:12:59.400
but it's also incredibly hard.

00:12:59.570 --> 00:13:02.480
We have speakers, we have headphones,
people play at bus stops,

00:13:02.480 --> 00:13:05.100
they play indoors, they play in school,
they play with mute on,

00:13:05.100 --> 00:13:08.910
they play with mute off,
they play in all sorts of environments.

00:13:09.030 --> 00:13:12.680
So designing audio in from the very
beginning is just a smart idea.

00:13:12.760 --> 00:13:17.380
And thinking about audio from day one is
absolutely vital to get into your game.

00:13:17.890 --> 00:13:23.060
So, a couple of months ago,
I was on Twitter, as I normally am,

00:13:23.220 --> 00:13:26.510
and this tweet feed started to
go out of this constant thing of,

00:13:26.630 --> 00:13:28.880
we got the Megatome and
we are the smartest.

00:13:28.880 --> 00:13:30.700
And how many of you saw that that night?

00:13:30.700 --> 00:13:32.700
If you're on Twitter that night,
you couldn't help but not see it.

00:13:32.700 --> 00:13:35.350
And I went and looked at what
the hashtag was in Sorcery,

00:13:35.350 --> 00:13:38.020
and I downloaded this game
called Sword and Sorcery.

00:13:38.080 --> 00:13:43.130
And I was blown away by how
immersive the audio environment was.

00:13:43.300 --> 00:13:49.790
I was dragged into that game world by the
audio environment and how lively it felt.

00:13:49.970 --> 00:13:53.030
So to talk a little bit more about that,
I'd like to invite Nathan and

00:13:53.030 --> 00:13:56.470
Craig to the stage to talk about
how they implemented that audio

00:13:56.470 --> 00:13:58.280
design in Sword and Sorcery.

00:14:01.900 --> 00:14:04.360
Thank you.

00:14:04.780 --> 00:14:07.590
Hello, WWDC friends.

00:14:08.160 --> 00:14:09.650
So, I'm Nathan Vella.

00:14:10.000 --> 00:14:14.160
I'm here to talk a bit about audio
design in our game Superbrothers:

00:14:14.160 --> 00:14:16.160
Sword and Sorcery EP.

00:14:16.160 --> 00:14:18.310
It's a collaborative
project that my studio,

00:14:18.310 --> 00:14:23.030
Capybara Games,
made with Superbrothers and Jim Guthrie.

00:14:23.710 --> 00:14:26.000
So Super Brothers Sword &
Sorcery EP launched on the

00:14:26.170 --> 00:14:28.960
App Store about two months ago,
and in that time it managed to

00:14:28.960 --> 00:14:32.900
get about 200,000 downloads,
which made us super happy.

00:14:33.150 --> 00:14:36.210
It received a ton of positive
press from both the gaming

00:14:36.210 --> 00:14:39.600
media and the mainstream media,
and perhaps most importantly,

00:14:39.600 --> 00:14:43.000
it got thousands of five-star
reviews from our fans.

00:14:43.060 --> 00:14:46.510
Basically, it was this overwhelming
positive love fest,

00:14:46.510 --> 00:14:48.810
and we couldn't be happier about it.

00:14:49.760 --> 00:14:54.160
So, Super Brothers Sword & Sorcery
EP is an exploratory adventure

00:14:54.160 --> 00:15:00.130
game with combat elements,
puzzle elements, but the main emphasis is

00:15:00.130 --> 00:15:02.440
audiovisual style and soul.

00:15:02.600 --> 00:15:05.740
And while Craig's pixels
are pretty awesome and make

00:15:05.740 --> 00:15:08.950
for a wonderful screenshot,
we're pretty sure that the

00:15:08.950 --> 00:15:12.730
main reason why people really,
you know, resonated with the game was

00:15:12.830 --> 00:15:16.530
because of the audio design
and the music of Jim Guthrie.

00:15:17.190 --> 00:15:20.090
So our goal with the project from
the very beginning was to create a

00:15:20.090 --> 00:15:22.530
record that you could hang out in.

00:15:23.570 --> 00:15:27.450
I could talk a lot about how we did that,
but it's probably best that we just

00:15:27.450 --> 00:15:28.900
kind of show you what's shaking.

00:15:29.110 --> 00:15:31.170
Craig's going to give
a little bit of a demo,

00:15:31.170 --> 00:15:33.130
and I'm going to try to talk
over it a little bit to kind of

00:15:33.130 --> 00:15:34.900
let you know what's going on.

00:15:34.900 --> 00:15:37.500
So right away when you boot up,
what do you see?

00:15:37.500 --> 00:15:38.100
A record.

00:15:38.100 --> 00:15:41.470
Hopefully that kind of drives it in
that we're making a game that's just

00:15:41.470 --> 00:15:44.090
as much about audio as anything else.

00:15:46.460 --> 00:15:49.400
So once you get into the game,
one of the things you'll notice

00:15:49.480 --> 00:15:52.300
is that there is an actual
environmental sound design.

00:15:52.340 --> 00:15:55.900
The game world itself is making noise.

00:15:55.900 --> 00:15:59.300
You can tap on bushes,
you can tap on characters.

00:15:59.300 --> 00:16:03.300
There's vocalizations for
characters and also voice recording.

00:16:03.300 --> 00:16:06.300
And all of the sound
effects are in the world.

00:16:06.300 --> 00:16:09.400
They pan and attenuate.

00:16:10.720 --> 00:16:13.590
Craig is going to go ahead
and open up the door there,

00:16:13.650 --> 00:16:17.700
start walking up the mountain
with his pal Logfella and his dog.

00:16:17.710 --> 00:16:21.370
And as you do,
you're going to notice right away that

00:16:21.380 --> 00:16:25.290
music plays an extremely big component.

00:16:30.560 --> 00:16:34.260
So, in this point,
the music is set to drive you forward.

00:16:34.370 --> 00:16:35.850
You know,
you're walking along in the woods,

00:16:35.890 --> 00:16:37.500
so it's walking along in the woods music.

00:16:37.500 --> 00:16:41.490
As you enter the next room,
the environmental audio is going

00:16:41.550 --> 00:16:44.900
to kind of play with the music,
so you're going to start hearing as

00:16:44.940 --> 00:16:48.500
you approach the bridge some waterfall
action and a little bit of wind.

00:16:48.500 --> 00:16:52.420
And the whole idea is to make
sure that you're in the world,

00:16:52.420 --> 00:16:56.410
and then also that the music
is creating a mood and a tone.

00:16:56.600 --> 00:17:00.280
At a certain point though,
music will change.

00:17:00.380 --> 00:17:02.780
For example,
when you see the three-eyed wolf.

00:17:02.790 --> 00:17:05.660
And now all of a sudden it's
stopped being a kind of moving

00:17:05.660 --> 00:17:09.070
forward driving tune and it's
more into a creepy cautionary.

00:17:13.400 --> 00:17:15.520
And if you're actually
playing with headphones,

00:17:15.520 --> 00:17:18.300
we use stereo so that some audio
is coming out of the right,

00:17:18.300 --> 00:17:20.500
some coming out of the left.

00:17:24.390 --> 00:17:25.540
So that's about it for right now.

00:17:25.730 --> 00:17:28.380
Hopefully you get the picture of how we,
you know, a little bit of an example of

00:17:28.380 --> 00:17:30.430
how we used audio in the game.

00:17:32.640 --> 00:17:36.500
So how do we go about crafting
the Sword and Sorcery EP?

00:17:36.610 --> 00:17:40.060
Well, the very first step and a very
key step is actually going out

00:17:40.060 --> 00:17:41.870
and finding an amazing musician.

00:17:42.100 --> 00:17:46.240
So we went out, tapped Jim Guthrie,
who in Toronto is somewhat of a legend.

00:17:46.340 --> 00:17:50.500
He's a rock star composer
and an amazing performer.

00:17:50.500 --> 00:17:52.380
He keeps a relatively
low profile in the world,

00:17:52.500 --> 00:17:54.610
but you probably know a
lot of his friends and

00:17:54.710 --> 00:17:58.860
collaborators like Owen Pallet,
Feist, and the Arcade Fire.

00:18:00.200 --> 00:18:02.700
So we're going to show a
quick little clip of Jim here.

00:18:02.870 --> 00:18:06.310
He works a lot with both
analog and digital sounds,

00:18:06.430 --> 00:18:08.190
creates a whole bunch of
different soundscapes with

00:18:08.190 --> 00:18:10.420
a lot of different tools,
and then composes them all

00:18:10.470 --> 00:18:11.650
together in GarageBand.

00:18:11.770 --> 00:18:15.770
The idea being to create really rich,
really lush audio.

00:18:18.170 --> 00:18:20.100
Now I'm going to pass it over to
Craig here from Super Brothers,

00:18:20.160 --> 00:18:23.140
and he's going to talk a bit
about the process and so on.

00:18:23.210 --> 00:18:24.290
Hi, good morning.

00:18:24.460 --> 00:18:28.440
So I'm Craig from Super Brothers,
and on this project

00:18:28.440 --> 00:18:30.920
I was handling the art,
the writing,

00:18:31.040 --> 00:18:34.270
some of the initial design concepts,
and I was also really

00:18:34.270 --> 00:18:36.060
involved on the audio side.

00:18:36.200 --> 00:18:39.210
Previously I had worked
with Jim Guthrie's music.

00:18:39.340 --> 00:18:42.600
I had made a couple of
amateur pixel music videos,

00:18:42.700 --> 00:18:47.340
and this project is very much
an extension of that approach.

00:18:48.890 --> 00:18:51.210
So the way it worked is
I actually had some of Jim's

00:18:51.220 --> 00:18:54.650
music going back for a while,
and I was able to listen to the

00:18:55.080 --> 00:18:58.260
songs over and over and over again,
and just sort of figure out what

00:18:58.350 --> 00:19:01.090
the spirit of the song would be,
and then try to paint that

00:19:01.090 --> 00:19:04.130
with the right color palettes,
the right sort of story concepts,

00:19:04.190 --> 00:19:08.420
and just kind of clarify for myself
what I thought the idea was going to be.

00:19:08.420 --> 00:19:11.990
What you saw there was like a
clumsy music video that I was able

00:19:11.990 --> 00:19:15.520
to use to articulate my vision
to the Sword & Sorcery team.

00:19:16.630 --> 00:19:21.500
The next step after previsualization
was actually getting that going in game.

00:19:21.570 --> 00:19:24.320
So this is a playable
prototype running on iPhone.

00:19:24.320 --> 00:19:27.290
Basically runs through the same thing
you saw with that previous music video,

00:19:27.300 --> 00:19:29.500
but now we're actually doing it for real.

00:19:29.500 --> 00:19:31.250
We've got the code,
we've got the mechanics,

00:19:31.330 --> 00:19:34.160
we've got the input, the output,
and we've figured out

00:19:34.160 --> 00:19:36.220
the sound and art assets.

00:19:37.120 --> 00:19:40.410
The next step here, well,
the basic process for a lot of this

00:19:40.440 --> 00:19:44.520
game was to start with the music,
start with Jim's songs,

00:19:44.700 --> 00:19:47.310
figure out what those songs
would evoke for our project,

00:19:47.450 --> 00:19:49.320
you know,
this sort of sword and sorcery concept.

00:19:49.320 --> 00:19:52.820
I would paint or make
storyboards or make an animatic,

00:19:52.820 --> 00:19:56.620
and then we would get it in-game,
get our headphones on,

00:19:56.620 --> 00:20:00.580
and go and check to see how it felt
and what kind of ideas came from that.

00:20:02.120 --> 00:20:04.870
After that, of course,
there was a lot of hard work.

00:20:04.870 --> 00:20:08.740
There's a lot of iterative audio
design that happened in this project,

00:20:08.740 --> 00:20:11.500
and we were using FMOD,
which is an audio middleware.

00:20:11.500 --> 00:20:14.920
And there's actually an application
within FMOD called FMOD Designer,

00:20:14.950 --> 00:20:17.170
and I was actually very
involved on that side,

00:20:17.170 --> 00:20:19.840
even though I'm not
necessarily a sound designer.

00:20:19.840 --> 00:20:22.560
I was able to go in and
swap in and out sounds,

00:20:22.730 --> 00:20:26.310
change the panning and attenuation,
and then I was able to go

00:20:26.310 --> 00:20:30.570
into my hero Jim's music,
cut it to pieces, and put it in,

00:20:30.580 --> 00:20:32.080
and then kind of string logic.

00:20:32.200 --> 00:20:34.100
together, which you can see on
that slide a little bit.

00:20:34.130 --> 00:20:39.380
That was the idea of making the song
compositions react to the player's

00:20:39.390 --> 00:20:42.210
progress and the player's decisions.

00:20:42.550 --> 00:20:46.400
The other key part of this was that
Jim was involved from the start,

00:20:46.400 --> 00:20:48.830
and as we got going,
we would have him stop by

00:20:48.830 --> 00:20:51.500
the office every week or two,
get a new build,

00:20:51.500 --> 00:20:53.650
we'd talk about it sort of together.

00:20:53.930 --> 00:20:56.530
He'd go off and play it,
put his headphones on,

00:20:56.530 --> 00:21:00.550
and basically score the experience
that he thought would make sense.

00:21:00.680 --> 00:21:04.170
So he was very much a
co-creator on the project,

00:21:04.170 --> 00:21:07.390
along with myself and Capybara Games.

00:21:08.210 --> 00:21:11.230
So in the end, we actually did achieve
what we set out to do,

00:21:11.240 --> 00:21:11.860
amazingly.

00:21:11.860 --> 00:21:14.380
It really does feel like you're
walking through a record.

00:21:14.380 --> 00:21:19.380
There's as much variety and craft and
texture as you might want from a record,

00:21:19.380 --> 00:21:23.680
and it's all weaved together in this sort
of archetypical adventure video game.

00:21:24.120 --> 00:21:27.200
And the icing on the cake with
all of this is that there's

00:21:27.280 --> 00:21:31.080
actually a record out there,
Jim Guthrie's Sword and Sorcery LP,

00:21:31.080 --> 00:21:33.030
The Ballad of the Space Babies.

00:21:33.040 --> 00:21:35.940
It's on iTunes,
and we even went ahead and made

00:21:35.950 --> 00:21:40.220
a vinyl limited edition copy,
which is sort of a dream come true.

00:21:40.220 --> 00:21:42.250
We're all Jim Guthrie
fans on the project,

00:21:42.250 --> 00:21:46.220
so being involved in a record release
of his is a really exciting proposition.

00:21:48.600 --> 00:21:52.220
So a couple of takeaways
from this project.

00:21:52.330 --> 00:21:57.400
We found there is an audience for songs,
style, and soul.

00:21:57.400 --> 00:22:01.840
If you make something that
has audio in the foreground,

00:22:02.150 --> 00:22:03.280
people will respond to it.

00:22:03.280 --> 00:22:06.920
And despite what you may have heard,
they will take the time to put on

00:22:06.920 --> 00:22:13.100
headphones and actually get immersed in
that handcrafted audio visual experience.

00:22:13.740 --> 00:22:16.910
Second takeaway, very straightforward,
trust in the collaboration.

00:22:16.910 --> 00:22:20.160
Make sure that everybody involved
is there to add to the project,

00:22:20.160 --> 00:22:22.090
not just paste something on over top.

00:22:22.160 --> 00:22:25.830
So for example, Jim would send us a song,
we'd listen to it and be like,

00:22:26.030 --> 00:22:28.640
that is perfect, thanks very much,
full stop.

00:22:28.770 --> 00:22:31.430
But then there were other times where
he would send us music and come to the

00:22:31.570 --> 00:22:35.060
office when we started talking about it,
and we weren't really sure what it was,

00:22:35.140 --> 00:22:37.060
where it would fit, how it would work.

00:22:37.120 --> 00:22:39.580
But after we got it in game and
started playing and iterating,

00:22:39.580 --> 00:22:41.880
we realized, wait a second,
this actually is the perfect

00:22:41.910 --> 00:22:43.460
piece of music for that moment.

00:22:43.600 --> 00:22:44.810
We just had to trust Jim.

00:22:44.820 --> 00:22:49.060
And our last takeaway is
that anything is possible.

00:22:49.060 --> 00:22:52.220
These machines are a few years old now,
but they're still very

00:22:52.220 --> 00:22:53.480
much a blank canvas.

00:22:53.480 --> 00:22:57.240
The audience that's out there doesn't
have as many preconceived notions

00:22:57.240 --> 00:23:00.570
as on other video game platforms,
so you can surprise them.

00:23:00.580 --> 00:23:04.210
You can take genres and mix them
together or make something that doesn't

00:23:04.210 --> 00:23:06.280
even fit in any recognizable genre.

00:23:06.280 --> 00:23:09.030
You can put audio out front
and make that a selling point,

00:23:09.030 --> 00:23:10.500
and people will respond.

00:23:10.500 --> 00:23:13.570
There will be some percentage
of that broad audience.

00:23:13.610 --> 00:23:16.310
There will be some percentage of
the audience out there who will take

00:23:16.310 --> 00:23:19.110
a risk on an unusual artist-driven
project like Sword & Sorcery.

00:23:20.640 --> 00:23:21.500
So that's it.

00:23:21.500 --> 00:23:23.930
If you'd like to check in
with us with any questions,

00:23:23.930 --> 00:23:26.060
feel free to look us up on the internets.

00:23:26.190 --> 00:23:26.430
Thank you.

00:23:26.530 --> 00:23:28.490
Thanks, folks.

00:23:36.230 --> 00:23:38.360
That game rocks.

00:23:38.380 --> 00:23:43.300
I don't think I need to say
anything else about audio.

00:23:43.460 --> 00:23:45.880
Let's talk about leveraging Game Center.

00:23:45.890 --> 00:23:47.980
Game Center is an
incredibly powerful API,

00:23:47.990 --> 00:23:51.110
but it offers a lot more
than I think people think.

00:23:51.440 --> 00:23:54.400
Leaderboard is something built into,
you know, in the Game Center,

00:23:54.400 --> 00:23:57.400
and it should be built into
every one of your applications.

00:23:57.560 --> 00:23:58.540
Leaderboards are great.

00:23:58.580 --> 00:24:01.400
You put the score up there, and,
you know, people go look at it.

00:24:01.400 --> 00:24:03.940
But the real power of
leaderboards is kind of that

00:24:04.090 --> 00:24:06.400
friend-to-friend offline challenge.

00:24:06.400 --> 00:24:10.400
I'm going to play Nate, and I'm going to,
you know, beat his score at, you know,

00:24:10.400 --> 00:24:12.320
some racing game or whatever.

00:24:12.450 --> 00:24:14.570
And then I'm going to log online,
and he's going to see, "Oh,

00:24:14.570 --> 00:24:15.300
Graeme's beating me.

00:24:15.300 --> 00:24:18.400
I'm going to try and beat him."
And I'm going to go play that game.

00:24:18.400 --> 00:24:21.290
So that offline mode encourages
people to go back to your game

00:24:21.400 --> 00:24:23.400
and play it again and again.

00:24:23.400 --> 00:24:26.400
You know, you get two friends
going together like that,

00:24:26.400 --> 00:24:29.400
and you get a lot of engagement
or re-engagement in your game,

00:24:29.520 --> 00:24:32.400
which is vital for bringing people back
to your game and getting people back in.

00:24:32.400 --> 00:24:35.400
Achievements are also really interesting.

00:24:35.400 --> 00:24:37.400
I mean, a lot of people put
achievements in of just,

00:24:37.400 --> 00:24:38.400
"I've completed level one.

00:24:38.400 --> 00:24:39.770
I've completed level two.

00:24:39.770 --> 00:24:42.990
I've completed level three."
They're not really achievements,

00:24:42.990 --> 00:24:44.400
but they're really boring.

00:24:44.400 --> 00:24:46.400
The best achievements are
the creative and fun ones,

00:24:46.400 --> 00:24:48.850
the ones where I have to
go through a level without

00:24:48.850 --> 00:24:51.650
shooting a gun once and win,
the one where I have to go

00:24:51.650 --> 00:24:55.400
around a racetrack backwards and,
you know, not crash into any cars.

00:24:55.400 --> 00:24:58.400
Because people look through
those achievement lists,

00:24:58.400 --> 00:24:59.400
and they're thinking, "Well,
I can go do that now.

00:24:59.400 --> 00:25:03.520
That sounds kind of interesting and
different." And what that adds to your

00:25:03.610 --> 00:25:07.510
game is it adds the ability in your game
for you to add ways for your players to

00:25:07.510 --> 00:25:09.400
find different ways to play your game.

00:25:09.400 --> 00:25:10.400
Perhaps they're stuck
playing just the one level.

00:25:10.400 --> 00:25:12.400
Perhaps they're just
playing the one mode.

00:25:12.400 --> 00:25:14.490
But they're going to see an
interesting-sounding achievement,

00:25:14.490 --> 00:25:16.400
and they're going to go
try that different mode,

00:25:16.420 --> 00:25:20.400
and perhaps it opens up a whole bunch
more re-engagement in your game.

00:25:20.610 --> 00:25:23.400
Interesting achievements are
vital to great game design.

00:25:24.760 --> 00:25:30.040
At the conference today, or yesterday,
we announced turn-by-turn gaming.

00:25:30.040 --> 00:25:32.560
And I try to think of, you know,
I think there's a fantastic API,

00:25:32.560 --> 00:25:35.160
and there's going to be a lot of
just turn-by-turn games out there.

00:25:35.180 --> 00:25:38.130
But every game,
single-player games especially,

00:25:38.260 --> 00:25:41.060
should include this
API in their application.

00:25:41.060 --> 00:25:44.720
It's now incredibly easy to add
a challenge mode to my game.

00:25:44.720 --> 00:25:47.510
I'm going to play my game
as a challenge to a friend,

00:25:47.570 --> 00:25:50.740
and I'm going to upload the random
number seed as the only piece

00:25:50.740 --> 00:25:52.040
of data that I'm going to send.

00:25:52.100 --> 00:25:53.540
I'm going to go send
that seed to someone.

00:25:53.540 --> 00:25:55.620
They're going to play
exactly the same game.

00:25:55.620 --> 00:25:57.600
Perhaps it's a game of cards,
and I'm going to have the same cards

00:25:57.610 --> 00:25:59.050
that I'm going to play in front of them.

00:25:59.060 --> 00:26:01.860
And it's a one-turn game,
but it makes any game,

00:26:02.010 --> 00:26:04.940
any single-player game,
engaged with a friend,

00:26:04.940 --> 00:26:07.010
that I can then have a challenge
to go and try and beat them.

00:26:07.020 --> 00:26:08.520
And that's fantastic.

00:26:08.520 --> 00:26:10.740
Every game should now be
including Game Center,

00:26:10.820 --> 00:26:12.220
at least as that kind of mode.

00:26:12.260 --> 00:26:14.950
I think about co-op action games, and,
you know,

00:26:14.950 --> 00:26:18.630
I'm just playing a game where it's
one of those roly-marble games,

00:26:18.740 --> 00:26:21.740
and I'm going to roll past, you know,
my friends.

00:26:21.740 --> 00:26:26.310
of the score and it's going to then send
my new position finally out to him so

00:26:26.310 --> 00:26:28.950
that I can see little flags side by side.

00:26:29.260 --> 00:26:32.130
I really encourage you to think
outside the box when it comes to

00:26:32.220 --> 00:26:37.680
API because adding that single player,
adding single player game elements

00:26:37.680 --> 00:26:40.530
into the game is I think a fantastic
opportunity for every game.

00:26:40.530 --> 00:26:43.160
Don't just think of the board
games I can go make of this,

00:26:43.190 --> 00:26:45.810
think of every game as a
possibility for using this.

00:26:47.890 --> 00:26:49.430
Game Center also adds photos.

00:26:49.600 --> 00:26:50.550
I love putting photos in apps.

00:26:50.650 --> 00:26:53.180
It just makes such a difference
to the screen that I can

00:26:53.180 --> 00:26:56.140
go see the person's face,
and I can go see what's going on,

00:26:56.140 --> 00:26:58.680
and I can go see if
it's my wife or my mom.

00:26:58.680 --> 00:27:02.090
And it immediately brings you
engagement and love into games

00:27:02.140 --> 00:27:05.870
because you put your loved ones
in there or your friends in there.

00:27:06.030 --> 00:27:09.700
And that just makes the game more
attractive immediately to people.

00:27:09.750 --> 00:27:12.120
They stick photos all around their house.

00:27:12.230 --> 00:27:14.360
Let's get it on there.

00:27:14.460 --> 00:27:18.710
So, Abraham Lincoln tweeted
this the other week.

00:27:18.940 --> 00:27:22.640
Am I not destroying my enemies
when I make friends with them?

00:27:22.820 --> 00:27:24.350
And that is so true.

00:27:24.770 --> 00:27:28.920
The true power of Game Center is
actually the list of friends

00:27:28.920 --> 00:27:30.550
I have in Game Center.

00:27:30.620 --> 00:27:34.710
I have a list of friends that I can,
you know, when I start my application up,

00:27:34.720 --> 00:27:38.160
I can log into Game Center,
my application can download that list,

00:27:38.160 --> 00:27:40.690
and I know all these
people want to play games.

00:27:40.690 --> 00:27:43.000
And that's incredibly powerful.

00:27:43.080 --> 00:27:46.390
If I'm not doing something with that,
then I'm missing out on the biggest

00:27:46.390 --> 00:27:48.180
opportunity that iOS has to offer.

00:27:48.180 --> 00:27:50.500
You know,
I am able to get all those GK player

00:27:50.580 --> 00:27:54.120
IDs and then do something with it,
whether it's socially, you know,

00:27:54.140 --> 00:27:56.810
socially adding something, you know,
with my own server,

00:27:56.810 --> 00:28:00.000
or doing something with Game Center,
or thinking of interesting ways to

00:28:00.000 --> 00:28:01.860
use achievements or leaderboards.

00:28:01.890 --> 00:28:05.630
That combination of friends and
that list of friends is the most

00:28:05.670 --> 00:28:07.760
valuable thing in Game Center.

00:28:07.760 --> 00:28:09.410
It's your friends.

00:28:09.410 --> 00:28:12.810
It's, that's just,
I can't emphasize enough that, you know,

00:28:12.810 --> 00:28:16.320
include this in every single game design,
even if you think that my

00:28:16.320 --> 00:28:17.560
game is just for one player.

00:28:17.640 --> 00:28:22.560
Because it's, you know,
no game is just for one player.

00:28:22.650 --> 00:28:24.630
So that's thinking about
leveraging Game Center.

00:28:24.750 --> 00:28:27.080
Wow, I paced a lot there.

00:28:27.870 --> 00:28:30.760
Let's talk about going the extra mile.

00:28:30.800 --> 00:28:33.400
Now, we've all done this,
we get very excited

00:28:33.400 --> 00:28:35.160
about our applications,
super excited,

00:28:35.210 --> 00:28:37.860
and our application's finished,
and we're going to upload

00:28:37.860 --> 00:28:40.580
it onto iTunes Connect,
and it's going to be fabulous,

00:28:40.580 --> 00:28:43.370
and it's going to do well,
and we're so excited that maybe

00:28:43.370 --> 00:28:46.260
we forgot to add a little bit of
polish into the game that really

00:28:46.400 --> 00:28:47.840
will make it go the extra mile.

00:28:47.930 --> 00:28:51.520
And polish is really an absolutely
critical element of any game now,

00:28:51.520 --> 00:28:53.700
because if you go look
at that top 25 list,

00:28:53.810 --> 00:28:56.120
each of those games is highly polished.

00:28:56.240 --> 00:28:57.840
And polish is more than just UI.

00:28:57.840 --> 00:29:00.040
You should be thinking
about your UI from day one,

00:29:00.040 --> 00:29:03.960
and using the new UI appearance,
and skinning your application,

00:29:03.960 --> 00:29:05.260
and so forth.

00:29:05.340 --> 00:29:08.760
But you should make sure that you've
added gameplay that engages and builds.

00:29:08.940 --> 00:29:13.170
You should make sure that you don't
add all your aliens in level one,

00:29:13.260 --> 00:29:13.280
and so forth.

00:29:13.280 --> 00:29:19.800
And you should be adding gameplay which
really has levels that properly progress.

00:29:19.850 --> 00:29:21.910
When your game is live,
you should be reading

00:29:21.910 --> 00:29:23.280
the reviews on the board.

00:29:23.290 --> 00:29:25.340
I know that's tough,
going into iTunes and

00:29:25.410 --> 00:29:26.800
taking a look at those,
and reading the reviews

00:29:26.850 --> 00:29:27.750
sometimes is very tough.

00:29:27.820 --> 00:29:30.800
But often there's a thread
there of sanity that says,

00:29:30.800 --> 00:29:33.510
"This game needs a mute button."
And you didn't think about that.

00:29:33.590 --> 00:29:35.960
You didn't think, "Hey,
my game needs mute because it

00:29:35.960 --> 00:29:39.450
doesn't need mute because it has
awesome audio." But you know,

00:29:39.690 --> 00:29:43.290
players are out there, and unfortunately,
they want to play the

00:29:43.290 --> 00:29:45.720
game on their terms,
and you should add preferences

00:29:45.720 --> 00:29:49.400
that you yourself will never use,
because it will enable more players

00:29:49.400 --> 00:29:51.310
to enjoy the rest of your game.

00:29:51.910 --> 00:29:54.530
Going the extra mile also means
a little bit of thinking about

00:29:54.530 --> 00:29:56.300
the actual devices I'm using.

00:29:56.660 --> 00:30:00.520
Test your game on every
device you sell for.

00:30:00.920 --> 00:30:03.110
It seems easy,
but your beta tester should be

00:30:03.200 --> 00:30:04.640
able to help you cover this.

00:30:04.640 --> 00:30:07.200
You should be able to at least test
on every single iOS device that

00:30:07.200 --> 00:30:08.820
you're going to actually sell for.

00:30:08.950 --> 00:30:12.410
It's amazing how many people just,
you know, the only thing they've tested

00:30:12.530 --> 00:30:15.720
on is the simulator and,
oh my god, it doesn't run on the iPad.

00:30:15.820 --> 00:30:17.960
Go test on real devices and play it.

00:30:18.110 --> 00:30:20.250
Check every path through your app.

00:30:20.330 --> 00:30:23.030
You know, when you add in-app purchase,
you know, it's wonderful,

00:30:23.100 --> 00:30:25.720
but every time you go to test it,
you're testing the yes case,

00:30:25.720 --> 00:30:27.010
because of course that's
what you want to test.

00:30:27.100 --> 00:30:28.800
Does the in-app purchase work?

00:30:29.010 --> 00:30:30.860
What happens when you tap no and say no?

00:30:30.860 --> 00:30:32.970
Does the right thing
happen or does the app,

00:30:33.110 --> 00:30:34.020
you know, crash?

00:30:34.190 --> 00:30:36.890
Make sure that you test every
no path through your app.

00:30:37.060 --> 00:30:39.640
Every possible path needs testing.

00:30:39.700 --> 00:30:42.420
And think about when
you're making your app,

00:30:42.420 --> 00:30:46.350
how the release and the debug
versions need to be different.

00:30:46.450 --> 00:30:49.230
On Game Center, you know,
you have testing with friends and,

00:30:49.340 --> 00:30:52.240
you know, you only have the three friends
that you have on Game Center when

00:30:52.370 --> 00:30:53.970
you're testing in the sandbox.

00:30:54.100 --> 00:30:56.180
When you go live, you've got 50 friends.

00:30:56.340 --> 00:30:59.540
So those menus need to reflect the
ability to show 50 friends and not just,

00:30:59.600 --> 00:31:03.220
you know, the three friends you have on
Game Center in the sandbox mode.

00:31:04.390 --> 00:31:07.540
And finally, always keep in the back of
your mind that first update.

00:31:07.660 --> 00:31:10.060
You will be making an update.

00:31:10.170 --> 00:31:13.280
Think in the back of your mind
what you can do beside bug fixes

00:31:13.280 --> 00:31:14.910
to offer more to your users.

00:31:15.030 --> 00:31:19.970
Yes, fix the bugs,
but think about how I'm

00:31:19.970 --> 00:31:19.970
going to increment my
application to the next level.

00:31:21.610 --> 00:31:24.140
So, let's go in the extra mile.

00:31:24.190 --> 00:31:28.250
Number five,
refinement of my application.

00:31:28.420 --> 00:31:31.030
So, playtesting.

00:31:31.230 --> 00:31:35.580
Playtesting is something that
seems like an easy word to say.

00:31:35.660 --> 00:31:37.820
It seems like an easy thing to do.

00:31:37.890 --> 00:31:40.380
The main thing you have to
remember about playtesting is,

00:31:40.440 --> 00:31:43.300
you do not come with every app installed.

00:31:43.410 --> 00:31:47.100
So, when you playtest your game,
when you hand that device over

00:31:47.100 --> 00:31:50.370
and when you watch them play,
you have to remember to

00:31:50.470 --> 00:31:52.090
shut up and not talk.

00:31:52.490 --> 00:31:55.910
You have to watch them struggle
with your game and struggle with

00:31:55.910 --> 00:31:57.640
what might seem obvious to you.

00:31:57.640 --> 00:32:00.320
The game has a big red
button on it that says,

00:32:00.320 --> 00:32:04.190
"Press here to start." And they're
just not finding that big red button.

00:32:04.200 --> 00:32:07.870
They're trying to get this pixel
off the side of the bunny rabbit

00:32:07.950 --> 00:32:09.760
to try and animate or do something.

00:32:09.760 --> 00:32:11.750
And you really just
want to scream at them,

00:32:11.820 --> 00:32:14.140
"Hit the big red button."
But they're not pressing it,

00:32:14.140 --> 00:32:15.120
and they're not pressing it.

00:32:15.160 --> 00:32:15.860
You have to hold back.

00:32:15.980 --> 00:32:17.970
You have to listen to their
feedback afterwards as to

00:32:17.970 --> 00:32:20.560
why they didn't press it,
what they didn't find obvious about it,

00:32:20.570 --> 00:32:23.240
why that seemed so unobvious to them.

00:32:23.380 --> 00:32:26.630
Because it is much better that
they complain to you now than

00:32:26.630 --> 00:32:28.800
they complain on the App Store.

00:32:28.900 --> 00:32:33.280
So playtesting and withholding
from telling people what to do.

00:32:33.280 --> 00:32:37.070
Just remember, I don't come with the app
when people download it.

00:32:37.950 --> 00:32:41.460
Something we're all guilty of
is scope refinement as we go

00:32:41.500 --> 00:32:42.540
along when we're making apps.

00:32:42.660 --> 00:32:45.540
And this really adds to
unrefinement of applications.

00:32:45.610 --> 00:32:47.190
I unrefine an app.

00:32:47.390 --> 00:32:48.460
I feature creep design.

00:32:48.460 --> 00:32:51.520
I start making a card game, and I think,
oh, my card game's set in the old west.

00:32:51.580 --> 00:32:54.020
I'm going to add guns thing to it so
that I can bring out guns and shoot

00:32:54.120 --> 00:32:55.620
the cards when I don't like the deck.

00:32:56.320 --> 00:32:57.120
Well, what the heck?

00:32:57.120 --> 00:32:58.570
I'm going to add more
than guns thing to it.

00:32:58.580 --> 00:33:00.900
I'm going to be able to shoot the
other player when I don't like

00:33:00.900 --> 00:33:03.900
him and see him fall over with
rendering physics and real life.

00:33:03.980 --> 00:33:04.870
Oh, what the heck?

00:33:04.870 --> 00:33:07.440
There's that ability to tip the
table over and use that physics

00:33:07.520 --> 00:33:10.370
thing to make the cards go into
the air and the coins will offer.

00:33:10.450 --> 00:33:11.750
Sounds fantastic.

00:33:11.810 --> 00:33:13.410
But it's no longer a card game.

00:33:13.410 --> 00:33:15.490
You made a first-person shooter now.

00:33:17.070 --> 00:33:19.530
You've moved beyond the
scope of your initial design,

00:33:19.530 --> 00:33:23.150
but your initial game design and your
initial game class and everything you've

00:33:23.150 --> 00:33:24.960
coded so far reflects a card game.

00:33:25.020 --> 00:33:28.160
And a card game class can't
support a first-person shooter.

00:33:28.430 --> 00:33:32.900
So, don't allow feature creeps to
really enter into your game.

00:33:33.030 --> 00:33:35.560
Think about the game
you're making all the time.

00:33:35.620 --> 00:33:38.560
As you are playtesting,
think about gathering stats.

00:33:38.600 --> 00:33:41.490
Add the ability for your
application to gather stats on

00:33:41.540 --> 00:33:43.280
when the player starts playing,
when they stop playing,

00:33:43.280 --> 00:33:45.200
what level they're playing on,
when they die,

00:33:45.230 --> 00:33:47.740
when they pick up power-ups,
and store those things on

00:33:47.800 --> 00:33:49.160
a server and look at them.

00:33:49.180 --> 00:33:51.930
If they're all stopping playing on level
3 because they're finding it too hard,

00:33:52.000 --> 00:33:53.600
you might have to adjust level 3.

00:33:53.640 --> 00:33:55.390
Perhaps you wanted level
3 to be really hard,

00:33:55.430 --> 00:33:59.440
and it's not quite hard enough because
they're all zooming through it.

00:33:59.500 --> 00:34:02.490
Capturing those stats during beta
testing is incredibly important.

00:34:02.520 --> 00:34:06.680
It's how some of the big console
games get to be so finely tuned,

00:34:06.680 --> 00:34:09.920
is that they sit and
gather stats from beta.

00:34:09.950 --> 00:34:11.840
And don't be afraid to cut features.

00:34:11.870 --> 00:34:15.160
The only person that knows
you've cut a feature is you.

00:34:15.180 --> 00:34:17.440
When you sell your app,
they don't know that

00:34:17.440 --> 00:34:18.740
you've cut a feature.

00:34:18.830 --> 00:34:22.430
They don't know that the MMO mode
of your card game is missing.

00:34:22.560 --> 00:34:26.510
Just think about keeping your
game scoped so you sell what

00:34:26.510 --> 00:34:28.440
you initially went to make.

00:34:28.640 --> 00:34:30.640
Cut features.

00:34:30.900 --> 00:34:34.240
Let's talk about refinement.

00:34:35.920 --> 00:34:36.760
Optimization.

00:34:36.760 --> 00:34:39.240
This is a big subject.

00:34:39.520 --> 00:34:43.280
That's why it's got two slides.

00:34:43.800 --> 00:34:48.960
Optimization is incredibly hard.

00:34:49.100 --> 00:34:52.730
The best way to optimize your
app is to step away from your

00:34:52.750 --> 00:34:54.870
keyboard and take a walk.

00:34:55.340 --> 00:34:58.610
You know, the first,
the most tempting thing to do is always

00:34:58.610 --> 00:35:02.560
to jump into the profiler and to look
at the application and look at where,

00:35:02.670 --> 00:35:06.200
you know, what Objective-C copy in
NSString is taking up all the time,

00:35:06.200 --> 00:35:08.800
or the texture uploads
I'm doing too much.

00:35:08.940 --> 00:35:12.790
But the absolute best
optimizer is your brain.

00:35:12.940 --> 00:35:14.570
Your brain thinks better
than anything else.

00:35:14.670 --> 00:35:15.900
It knows the application.

00:35:15.900 --> 00:35:18.400
It knows how you use those algorithms.

00:35:18.400 --> 00:35:20.540
It knows what's really going on.

00:35:20.540 --> 00:35:24.940
It knows you have four million polygons
and that fire particle effect back there.

00:35:24.940 --> 00:35:27.760
It might strike you when it walks,
maybe I should reduce

00:35:27.760 --> 00:35:28.930
that to two million.

00:35:31.340 --> 00:35:32.650
Use your brain first.

00:35:32.650 --> 00:35:33.480
Take a break.

00:35:33.480 --> 00:35:34.300
Take a walk.

00:35:34.430 --> 00:35:35.360
Go look at something else.

00:35:35.570 --> 00:35:36.980
Think about your application.

00:35:37.180 --> 00:35:39.130
Then, by all means,
dive into some of the fantastic

00:35:39.200 --> 00:35:41.820
instruments and tools that
Apple has to offer for profiling.

00:35:41.840 --> 00:35:45.030
And I'm talking this
week about GL Analyzer,

00:35:45.120 --> 00:35:49.000
GL Detective,
and GL Debugger built into Xcode now,

00:35:49.000 --> 00:35:51.830
and the absolute fabulous
statistics that it offers,

00:35:51.830 --> 00:35:55.210
breaking down your application
and the suggestions it offers

00:35:55.320 --> 00:35:57.220
on how to fix your application.

00:35:57.220 --> 00:35:59.860
Those tools are great,
but always remember,

00:35:59.860 --> 00:36:01.310
use your brain first.

00:36:01.340 --> 00:36:02.560
Amen.

00:36:02.910 --> 00:36:05.960
One of the biggest things
to optimize is startup time.

00:36:06.030 --> 00:36:09.510
When you start your app,
your app should be interactive

00:36:09.670 --> 00:36:11.250
within three seconds.

00:36:11.400 --> 00:36:15.190
You must think about this three
seconds as the three seconds of hate.

00:36:15.310 --> 00:36:19.500
For every second that goes by,
I hate your application more.

00:36:20.130 --> 00:36:21.410
This is what users think.

00:36:21.540 --> 00:36:24.100
So you might as well approach this right.

00:36:24.160 --> 00:36:27.100
So if your application is
taking 10 seconds to launch,

00:36:27.300 --> 00:36:29.880
there's a lot of hate there.

00:36:30.000 --> 00:36:32.510
And that's before you've
actually shown the first thing,

00:36:32.510 --> 00:36:34.820
which is interactiveness,
before you've had a

00:36:34.880 --> 00:36:36.370
chance to entertain them.

00:36:36.550 --> 00:36:40.090
Do whatever you need to do
to have your application be

00:36:40.090 --> 00:36:42.560
interactive within three seconds.

00:36:42.900 --> 00:36:44.650
These people are playing
games at bus stops.

00:36:44.700 --> 00:36:48.380
They're playing games in
all sorts of strange places.

00:36:48.440 --> 00:36:50.440
They want to get your game quick.

00:36:50.640 --> 00:36:52.980
They want to swap in and out
and be able to get there.

00:36:53.140 --> 00:36:57.410
So think about what I can do to
make my game interactive quickly.

00:36:57.490 --> 00:36:58.970
Defer asset loading.

00:36:58.970 --> 00:37:02.850
Those 100 PNGs you have
loaded for the first level,

00:37:02.930 --> 00:37:03.660
you don't need to load them.

00:37:03.660 --> 00:37:04.980
Bring up the menu stuff.

00:37:05.040 --> 00:37:06.310
Think about threading.

00:37:06.490 --> 00:37:10.310
It's tough to get threading right,
but if you get it right, it rocks.

00:37:10.460 --> 00:37:12.810
Work out what's going on.

00:37:14.720 --> 00:37:18.280
Do I really need those 20
sound files right away?

00:37:18.500 --> 00:37:19.320
Well, no.

00:37:19.320 --> 00:37:20.880
You're bringing up a menu.

00:37:20.900 --> 00:37:22.120
Optimize your startup time.

00:37:22.140 --> 00:37:23.800
It's the most critical
element in your game.

00:37:23.800 --> 00:37:26.110
It's the first thing users see.

00:37:26.620 --> 00:37:28.440
Optimize battery life.

00:37:28.440 --> 00:37:30.900
This is something we really
have to think about with iOS.

00:37:31.040 --> 00:37:34.950
It's kind of an interesting thing
to optimize for because it seems to

00:37:34.950 --> 00:37:37.620
offset some opportunities that we want.

00:37:37.770 --> 00:37:41.360
But all these devices run off batteries,
and our game players are very

00:37:41.360 --> 00:37:43.860
sensitive to power-hungry applications.

00:37:43.960 --> 00:37:46.830
If I start up your game and I play
it for 10 minutes and I close down

00:37:46.830 --> 00:37:50.580
and I'm suddenly at 30% power,
I'm kind of going to remember that.

00:37:50.650 --> 00:37:54.820
I'm going to remember that your
application chews through power.

00:37:54.930 --> 00:37:56.670
Test and retest between updates.

00:37:56.880 --> 00:38:00.680
Whenever you make an update for an app,
make sure that your application

00:38:00.740 --> 00:38:04.980
is still as power-misery as
possible as it was before.

00:38:05.120 --> 00:38:07.460
There is an absolutely
fantastic app for testing this.

00:38:07.530 --> 00:38:12.640
The Instruments has the power
measurement tool in Xcode.

00:38:12.850 --> 00:38:14.740
Start up Instruments,
you go measure power.

00:38:14.810 --> 00:38:18.260
It shows you in your
application what's using power.

00:38:18.260 --> 00:38:20.260
It's the CPU, the GPU, the GPU.

00:38:20.270 --> 00:38:24.020
The GPS, the GSM radio, the other radio,
the other radio.

00:38:24.020 --> 00:38:27.690
It shows you what's on your device
and it gives you an estimation of

00:38:27.740 --> 00:38:32.900
how much power you're currently
using on a scale from 1 to 20.

00:38:33.010 --> 00:38:35.930
And that is an incredibly powerful
way to be able to measure your

00:38:35.930 --> 00:38:39.460
application and take a look at
the amount of power you're using.

00:38:39.460 --> 00:38:42.830
So always remember to look at the
battery life and look at what power

00:38:42.910 --> 00:38:45.020
you're using inside an application.

00:38:45.670 --> 00:38:47.000
Optimization.

00:38:47.100 --> 00:38:49.940
Three slides, you need to optimize.

00:38:50.070 --> 00:38:52.970
Connection, and being able to
connect to applications.

00:38:53.270 --> 00:38:56.000
This is something I really
started to look at recently,

00:38:56.060 --> 00:38:58.500
and I've started to add it
to all of my applications.

00:38:58.630 --> 00:39:01.480
It's adding a new section
into applications that enables

00:39:01.480 --> 00:39:03.300
me to talk to my audience.

00:39:03.330 --> 00:39:05.970
You know, I started learning how
to do server programming,

00:39:06.040 --> 00:39:09.090
and what it kind of meant to
actually run my own server.

00:39:09.260 --> 00:39:13.100
We should all be thinking about that,
because it's incredibly easy.

00:39:13.150 --> 00:39:15.950
Running your own server with the
ability to push news to applications

00:39:16.100 --> 00:39:20.770
is and may well be your only
marketing channel that you own.

00:39:20.900 --> 00:39:22.700
I love little news
sections in applications,

00:39:22.750 --> 00:39:26.240
because my application starts up,
it can query my server to

00:39:26.340 --> 00:39:27.700
see if there's any new news.

00:39:27.700 --> 00:39:30.700
If there is new news,
I can make a little thing flash and go,

00:39:30.700 --> 00:39:37.300
"Boof!" And then my user can opt in,
and can opt in to go look at that news.

00:39:37.300 --> 00:39:39.690
And I never force that
news to come up saying,

00:39:39.710 --> 00:39:43.950
"Whoa, blah, blah, big news,
new news," because my users,

00:39:43.950 --> 00:39:45.850
I want them to love my games.

00:39:46.160 --> 00:39:50.400
I want them to love me as a developer,
and love me and love my company.

00:39:50.440 --> 00:39:53.160
And if I've made a fantastic game,
if I've made a game that

00:39:53.160 --> 00:39:54.930
people enjoy playing,
if I've made something

00:39:54.930 --> 00:39:57.020
which is compelling,
they will want to have

00:39:57.020 --> 00:39:58.300
another game from me.

00:39:58.350 --> 00:40:01.100
You know,
they want to play the next game,

00:40:01.130 --> 00:40:04.200
so that when that news thing goes off,
boy, they're going to go to it.

00:40:04.220 --> 00:40:07.580
I don't have to force things
in front of people's faces.

00:40:07.920 --> 00:40:10.500
One of the things when you
add a news text into your

00:40:10.610 --> 00:40:12.320
app is you need to update it.

00:40:12.450 --> 00:40:15.790
I employ my sister now to
write my news things for me.

00:40:15.800 --> 00:40:22.040
She used Hype on the Mac to
write great little iOS websites.

00:40:22.320 --> 00:40:24.020
If I'm going to log into your app,
see news come up,

00:40:24.100 --> 00:40:27.040
and it's going to say September 2010,
I'm going to think,

00:40:27.100 --> 00:40:29.700
"This app is stale." It does
add another load to you to do,

00:40:29.700 --> 00:40:32.690
but it's a way of engaging your audience.

00:40:33.210 --> 00:40:39.030
Something that I saw in AppNuts by
Limbic Software was right on the

00:40:39.060 --> 00:40:40.940
first page it's got a feedback button.

00:40:40.940 --> 00:40:42.940
And absolutely incredible.

00:40:42.940 --> 00:40:46.240
It's just sitting there on a
little post that says feedback.

00:40:46.240 --> 00:40:48.370
And it comes up and it
comes down to some text.

00:40:48.460 --> 00:40:50.510
Hey, if you love this game or if
you don't love this game,

00:40:50.520 --> 00:40:51.530
send us some feedback.

00:40:51.650 --> 00:40:53.590
It hit that,
it comes up with a little mail thing.

00:40:54.210 --> 00:40:55.130
It's not intrusive.

00:40:55.130 --> 00:40:56.420
It's not doing anything.

00:40:56.420 --> 00:40:57.660
It doesn't hurt the game.

00:40:57.730 --> 00:41:02.900
But it allows your game players
to directly talk to the developer

00:41:02.900 --> 00:41:04.100
and to send them some feedback.

00:41:04.100 --> 00:41:07.720
Because the only other place they
have to send you feedback is in

00:41:07.820 --> 00:41:09.940
the app review section of iTunes.

00:41:09.940 --> 00:41:13.730
You know, because going anywhere else,
going to the support page of your

00:41:13.840 --> 00:41:17.650
web thing and finding email address,
clicking on that, opening up mail,

00:41:17.650 --> 00:41:20.090
if you've not done it right,
so I've got to cut and paste,

00:41:20.090 --> 00:41:23.420
can provide all sorts of hard ways
for users to get your feedback.

00:41:23.940 --> 00:41:26.070
But putting it in game
I thought was genius.

00:41:26.100 --> 00:41:28.670
You know, just that little button there,
you know,

00:41:29.110 --> 00:41:31.690
probably lets people provide feedback
with ideas for what they want,

00:41:31.690 --> 00:41:34.070
what they're enjoying,
what they're not enjoying.

00:41:34.220 --> 00:41:37.220
And I just thought that was absolutely
perfect touch to add to that game.

00:41:37.250 --> 00:41:38.520
By the way, I love that game.

00:41:38.530 --> 00:41:40.540
Always make that opt-in.

00:41:43.560 --> 00:41:46.730
Guess there's some devs in the audience.

00:41:46.830 --> 00:41:47.410
Don't force this.

00:41:47.500 --> 00:41:49.460
Don't come up and say, hey, rate my app.

00:41:49.460 --> 00:41:52.080
I've been guilty of this in the past.

00:41:52.150 --> 00:41:54.510
We have the ability now to
make all of this opt in.

00:41:54.580 --> 00:41:57.530
Like I said, your developers,
your game players will love your app.

00:41:57.640 --> 00:42:01.290
If they do, they'll want to send you
feedback telling you so.

00:42:01.450 --> 00:42:05.130
And finally, in community,
add to the community.

00:42:05.180 --> 00:42:07.730
That group of friends I told
you about in Game Center,

00:42:07.730 --> 00:42:08.850
extremely valuable.

00:42:09.070 --> 00:42:13.620
One of the fabulous ways to leverage that
is to form a community around your game.

00:42:13.700 --> 00:42:15.570
So jump flags,
when I'm playing a jump game,

00:42:15.660 --> 00:42:18.100
to show it as I'm jumping up
higher and higher and higher,

00:42:18.100 --> 00:42:20.780
here's my friend, here's my friend,
here's my friend.

00:42:20.930 --> 00:42:23.290
And just seeing that,
so those flags go by,

00:42:23.290 --> 00:42:26.450
kind of makes me feel as if
I'm playing a multiplayer game,

00:42:26.450 --> 00:42:28.740
even though I'm just playing on my own.

00:42:28.990 --> 00:42:31.770
When I'm playing a race car game,
I love to be able to download

00:42:31.770 --> 00:42:36.250
other people's race cars and
race around a track and see them

00:42:36.390 --> 00:42:40.080
race around their ghost cars so
I can try to race them virtually.

00:42:40.140 --> 00:42:43.900
I'm not playing head to head with them,
but I've downloaded their data so

00:42:43.900 --> 00:42:48.770
I can see how they race around a track
and I can virtually race against them.

00:42:48.840 --> 00:42:50.940
Finally, sharing puzzle solutions.

00:42:50.990 --> 00:42:54.400
I thought this was absolutely
fantastic in Casey's Contraptions.

00:42:54.460 --> 00:42:56.660
It comes up with two things.

00:42:56.710 --> 00:42:58.720
I can go share my
solution with my friends.

00:42:58.930 --> 00:43:01.540
I can go take a look at their solutions.

00:43:01.600 --> 00:43:04.870
And the fact that I can go take a look
at their solutions and how they ran,

00:43:04.870 --> 00:43:07.380
what they scored,
it's kind of just a little thing that

00:43:07.380 --> 00:43:10.540
adds to the game that makes me feel
connected as I'm playing the game.

00:43:10.590 --> 00:43:11.650
Whenever I see my friends,
I'm going to have a

00:43:11.760 --> 00:43:12.460
conversation about them.

00:43:12.460 --> 00:43:16.540
"Oh, I saw you use those crazy cars in
that one solution." Adding community

00:43:16.540 --> 00:43:18.460
in the games is incredibly powerful.

00:43:18.510 --> 00:43:23.020
I encourage you to do that in
every single application now.

00:43:23.110 --> 00:43:24.400
Talking about connections.

00:43:26.080 --> 00:43:29.040
Next, localization.

00:43:29.150 --> 00:43:31.900
Localization is getting
to be much more important.

00:43:31.910 --> 00:43:33.930
I'm going to talk to you here really
about the four things I kind of

00:43:33.960 --> 00:43:36.740
consider important about localization
and how they go along the way.

00:43:36.760 --> 00:43:39.740
First one is to always design
your app for localization.

00:43:39.740 --> 00:43:42.330
You know,
we're all guilty of having a whole

00:43:42.410 --> 00:43:46.200
bunch of Objective-C files that
we just put the strings into,

00:43:46.200 --> 00:43:50.470
you know, the at OK and the NS alerts and
so forth so that it's right there.

00:43:50.480 --> 00:43:52.580
And it's convenient
to do as we're coding.

00:43:52.620 --> 00:43:54.190
There's no doubt about that.

00:43:54.310 --> 00:43:56.800
But if your app then has
100 million downloads,

00:43:56.890 --> 00:43:58.270
you think, well,
I should localize for China.

00:43:58.280 --> 00:44:01.950
You know, try to get this to 100 million
downloads in a different country.

00:44:02.080 --> 00:44:04.510
You haven't thought about
localization from the very beginning.

00:44:04.510 --> 00:44:07.790
It's a real pain to be able to
go back and localize properly.

00:44:07.800 --> 00:44:11.720
And Objective-C and NSString obviously
allow us to easily localize and

00:44:11.790 --> 00:44:15.690
set up for localization from the
very opening of your application.

00:44:15.700 --> 00:44:17.880
Just adding, you know,
localized strings so that the

00:44:17.880 --> 00:44:19.030
table that goes looks it up.

00:44:20.480 --> 00:44:23.830
You know, so design for localization,
build that in at the very

00:44:24.120 --> 00:44:27.500
least because markets outside
North America are growing rapidly.

00:44:27.630 --> 00:44:31.320
If you can't localize
your app completely,

00:44:31.360 --> 00:44:34.600
at least think about localizing
your iTunes description.

00:44:34.720 --> 00:44:38.030
Now, a lot of game players,
they can work out left, right, fire,

00:44:38.030 --> 00:44:38.620
and score.

00:44:38.620 --> 00:44:39.600
These are things they recognize.

00:44:39.790 --> 00:44:43.530
But the iTunes description is the
first and foremost point of contact

00:44:43.530 --> 00:44:45.360
between you and the game player.

00:44:45.600 --> 00:44:48.490
It's the most text they will
ever see about your game.

00:44:48.600 --> 00:44:51.480
You know, they're going to base
their decision to download,

00:44:51.650 --> 00:44:53.790
try it, purchase it,
based upon that description and

00:44:53.860 --> 00:44:55.600
that localizing right there.

00:44:55.600 --> 00:44:57.600
It's a huge difference.

00:44:57.600 --> 00:44:58.490
It's the easiest thing to do as well.

00:44:58.600 --> 00:45:01.160
You know, in iTunes Connect,
to be able to localize it

00:45:01.160 --> 00:45:02.600
into the local languages.

00:45:02.600 --> 00:45:05.600
I don't have to add it
into my application.

00:45:05.780 --> 00:45:09.520
But it's the major point of contact,
you know, between me and my player.

00:45:09.650 --> 00:45:10.600
It's the first point of contact.

00:45:10.600 --> 00:45:13.560
And that decision will be
based upon that localization.

00:45:13.600 --> 00:45:17.600
And finally, I really encourage you to
localize all your apps.

00:45:17.600 --> 00:45:19.710
To actually make that app personal,
you know,

00:45:19.770 --> 00:45:21.470
for that localization to be played in.

00:45:21.650 --> 00:45:23.510
This is a changing world
that we're playing in now.

00:45:23.600 --> 00:45:23.600
We're selling games across the world.

00:45:23.630 --> 00:45:28.600
Fortunately, there's lots of languages.

00:45:28.600 --> 00:45:30.600
That's localization.

00:45:33.250 --> 00:45:34.500
Getting games up and running.

00:45:34.560 --> 00:45:35.380
We're making games.

00:45:35.380 --> 00:45:37.100
Games are fun.

00:45:37.100 --> 00:45:40.340
So I think games should
be running on day two.

00:45:40.470 --> 00:45:42.300
That's where,
if your game isn't running on day two,

00:45:42.550 --> 00:45:44.210
then you're kind of
working on something else,

00:45:44.210 --> 00:45:44.870
not the game.

00:45:45.700 --> 00:45:47.540
Now, there's lots of ways to play games.

00:45:47.730 --> 00:45:50.660
One of my favorite ways of
playing games is to make cards.

00:45:50.660 --> 00:45:52.760
But whether you're playing
your game on paper,

00:45:52.840 --> 00:45:55.650
chalkboards, whiteboards, or cards,
you'll get your game running,

00:45:55.650 --> 00:45:56.910
whether it's running in-game.

00:45:56.910 --> 00:45:59.320
Your game might be played with cards,
but a turn,

00:45:59.320 --> 00:46:01.940
which is going to take a tenth
of a second on the iPhone,

00:46:01.940 --> 00:46:04.170
takes 15 minutes to play with cards.

00:46:04.230 --> 00:46:06.820
And that is a fantastic opportunity.

00:46:06.910 --> 00:46:10.450
It lets you engineer at the
15-minute level what's going to

00:46:10.510 --> 00:46:12.380
happen in a tenth of a second.

00:46:12.380 --> 00:46:15.480
It's like going into the quantum level
on my game mechanics and adjusting it.

00:46:15.570 --> 00:46:16.700
It's like adjusting it in slow motion.

00:46:16.700 --> 00:46:18.760
How perfect is that?

00:46:18.840 --> 00:46:23.250
That tenth of a second becomes perfect
because I've worked on a game with cards.

00:46:23.310 --> 00:46:26.160
I've worked on a game
outside of the game engine.

00:46:26.160 --> 00:46:28.840
I've thought about how those
mechanics work very carefully.

00:46:28.840 --> 00:46:32.190
And that reflects, finally,
when you get the game running,

00:46:32.190 --> 00:46:33.930
that you have that math right.

00:46:33.930 --> 00:46:35.920
You have that hit structure right.

00:46:35.920 --> 00:46:37.750
You have that approach right.

00:46:37.810 --> 00:46:40.700
Think about playing your game
constantly on day two and

00:46:40.700 --> 00:46:42.400
playing it every single day.

00:46:42.400 --> 00:46:44.870
From the second day on.

00:46:44.880 --> 00:46:45.390
No matter what.

00:46:45.540 --> 00:46:46.690
Think about what you
need to do to play it.

00:46:47.050 --> 00:46:50.790
Never let technology stop
you from playing your game.

00:46:51.720 --> 00:46:54.190
One of the things that stops us
from getting the game running often

00:46:54.190 --> 00:46:59.330
is our need as game programmers
to make the super-duper renderer.

00:46:59.460 --> 00:47:00.880
Very technical term.

00:47:00.880 --> 00:47:05.460
The super-duper renderer is this
HDR renderer that has all this

00:47:05.460 --> 00:47:10.230
real-life lighting and these
fantastic shadows and fall-off and

00:47:10.230 --> 00:47:14.740
HDR and sun glints and I look up and
HDR changes to the ground and so forth.

00:47:14.740 --> 00:47:18.840
And has real physics that let things
tumble down from the ground and buildings

00:47:18.840 --> 00:47:21.100
fall over and all this wonderful stuff.

00:47:21.280 --> 00:47:23.200
And it's fantastic.

00:47:23.590 --> 00:47:25.280
Absolutely fantastic stuff.

00:47:25.330 --> 00:47:27.880
You know, who doesn't want to work
on something like that?

00:47:27.930 --> 00:47:31.590
It's absolutely terrible if you have
an eight-week dev cycle and you spend

00:47:31.590 --> 00:47:33.960
the first seven weeks working on
the renderer and the physics engine

00:47:33.960 --> 00:47:36.220
and the last week working on a game.

00:47:36.270 --> 00:47:38.600
That's going to mean your
game is going to suck.

00:47:38.650 --> 00:47:40.200
Why the fantastic renderer?

00:47:40.230 --> 00:47:44.040
Normally views might reflect that,
but your game sucks equals no sales.

00:47:44.090 --> 00:47:45.120
Work on the game.

00:47:45.160 --> 00:47:46.520
Remember what you're actually selling.

00:47:46.710 --> 00:47:48.900
Selling a game.

00:47:49.190 --> 00:47:50.960
Wow.

00:47:50.960 --> 00:47:53.480
Ooh, get up and running.

00:47:57.460 --> 00:48:00.740
Let's talk really about
embracing the platform.

00:48:00.740 --> 00:48:05.250
We're making games for the iPhone,
the iPad, the iPod Touch.

00:48:05.430 --> 00:48:09.300
The iOS SDK offers a stable
foundation to build upon.

00:48:09.300 --> 00:48:13.300
Now, as game programmers,
we love to roll our own.

00:48:13.300 --> 00:48:15.290
We love to roll our own
user interface design.

00:48:15.370 --> 00:48:17.300
We love to roll our own input scheme.

00:48:17.300 --> 00:48:20.810
We love to roll our own sound
engine that mixes the PCM directly

00:48:20.810 --> 00:48:22.300
onto the hardware pipe.

00:48:22.300 --> 00:48:23.750
We love that stuff.

00:48:23.780 --> 00:48:27.760
We love making our own castles
effectively and building a

00:48:27.850 --> 00:48:32.300
huge moat around it so that our
game engine is our game engine.

00:48:32.300 --> 00:48:36.450
But it's time to move on from
that way of thinking when we're

00:48:36.450 --> 00:48:39.280
thinking about making games for iOS.

00:48:39.300 --> 00:48:44.300
Building on top of the iOS technologies
is better than rolling your own.

00:48:44.300 --> 00:48:47.300
It has expected behaviors.

00:48:47.480 --> 00:48:51.300
When I have a UI button and
there is a lot of thought behind

00:48:51.300 --> 00:48:51.300
how the UI button presses.

00:48:51.300 --> 00:48:55.150
When the event happens on the tap
lift off and there's all sorts

00:48:55.150 --> 00:48:57.300
of state changes and so forth.

00:48:57.300 --> 00:49:01.300
And every other application
on the phone uses UI button.

00:49:01.330 --> 00:49:05.240
So game players and users are
used to the way that this works.

00:49:05.430 --> 00:49:09.300
They're used to the expectations
around the way the button works.

00:49:09.330 --> 00:49:12.890
So why would you roll your own
button when there's a button

00:49:12.890 --> 00:49:17.250
class that works the way users
expect in every other application?

00:49:17.300 --> 00:49:20.280
Of course you should use UI button.

00:49:20.280 --> 00:49:20.300
You should be using UI kit for
anything to do with interface.

00:49:20.450 --> 00:49:21.760
anything to do with interface.

00:49:21.890 --> 00:49:24.400
Provides expected behavior.

00:49:24.940 --> 00:49:27.760
You can finish your game faster because
you're building upon technologies

00:49:28.060 --> 00:49:31.520
that have wonderful documentation,
that don't leak memory,

00:49:31.630 --> 00:49:37.560
that have great Objective
C classes that are thought out,

00:49:37.560 --> 00:49:39.930
that work together,
that are built on top of iOS

00:49:40.050 --> 00:49:44.100
and provide a great framework
for your game to start off with.

00:49:44.160 --> 00:49:46.230
And they let you be an iOS app.

00:49:46.320 --> 00:49:48.970
Building in that way the game feels.

00:49:48.970 --> 00:49:52.960
Users love games that feel the
way that they expect things

00:49:52.960 --> 00:49:54.780
to feel on their device.

00:49:54.780 --> 00:50:00.150
They love the iPad applications that
have the full screen feel to them.

00:50:00.150 --> 00:50:03.920
It's kind of like the overall
direction that we're seeing some

00:50:04.070 --> 00:50:08.750
of the user interface go with the
buttons and the switches and so forth.

00:50:08.750 --> 00:50:11.100
Some absolutely great
stuff to be done there.

00:50:11.120 --> 00:50:14.140
You have to remember when
you're working on iOS.

00:50:14.160 --> 00:50:16.550
You can't just start
with a simple iOS device.

00:50:16.550 --> 00:50:17.920
It comes with one button.

00:50:18.010 --> 00:50:21.060
Well, some side buttons too,
but it comes mainly with one big

00:50:21.060 --> 00:50:22.740
button called the home button.

00:50:22.740 --> 00:50:25.590
And the home button really
is now your save game button.

00:50:25.660 --> 00:50:29.220
Way back in the 70s and 80s when
we first started making games,

00:50:29.440 --> 00:50:31.680
computers used to come
with floppy disk drives,

00:50:31.740 --> 00:50:34.930
and we used to store 160
kilobytes on a floppy disk drive.

00:50:34.960 --> 00:50:37.100
Now I can store more
than that in a cloud.

00:50:37.100 --> 00:50:38.720
It's just amazing.

00:50:38.720 --> 00:50:42.100
But we used to save a game,
come up with a dialogue saying

00:50:42.100 --> 00:50:44.000
insert the floppy disk now.

00:50:44.160 --> 00:50:46.440
We used to go clunk, clunk, clunk, clunk,
clunk, and it would save the thing.

00:50:46.440 --> 00:50:48.600
We would take the disk out,
we'd mark it save game one.

00:50:48.600 --> 00:50:50.350
And we kind of stuck with that metaphor.

00:50:50.460 --> 00:50:53.260
We kind of stuck with the idea
of save game being something

00:50:53.260 --> 00:50:54.590
that I'm going to go do.

00:50:54.600 --> 00:50:56.120
I'm going to go make this action.

00:50:56.250 --> 00:50:57.740
I'm going to have these slots.

00:50:57.820 --> 00:51:00.420
I'm going to have these nine slots for
save games because that's the first

00:51:00.490 --> 00:51:02.010
thing we did when hard drives came out.

00:51:02.080 --> 00:51:05.300
Oh my God, now I can store multiple save
games next to each other.

00:51:05.300 --> 00:51:08.680
But now the device is
kind of there constantly,

00:51:08.680 --> 00:51:12.940
and users expect to exit out
by pressing the home button.

00:51:14.160 --> 00:51:16.110
You need to be able to
save state right there.

00:51:16.160 --> 00:51:18.100
You need to be able to save
your game right at that point.

00:51:18.160 --> 00:51:20.310
Their expected behavior is
I'm going to come back to

00:51:20.310 --> 00:51:21.690
your application where it was.

00:51:21.760 --> 00:51:24.780
You need to be able to save right
there when things are going.

00:51:24.880 --> 00:51:30.860
The game machine is also a phone,
or some of them are phones,

00:51:30.920 --> 00:51:31.570
and they're going to ring.

00:51:31.600 --> 00:51:33.230
People are going to want
to talk to that person.

00:51:33.330 --> 00:51:34.010
It's going to be their mom.

00:51:34.080 --> 00:51:38.410
And you have to play nice when they pick
up and answer the phone to their mom.

00:51:38.480 --> 00:51:41.210
They're going to come back and
your game better be paused,

00:51:41.320 --> 00:51:43.600
and if it's asteroids,
you might have thought

00:51:43.600 --> 00:51:44.020
about moving something.

00:51:44.020 --> 00:51:46.090
You might want to take some of the
asteroids out away from the impending

00:51:46.090 --> 00:51:48.020
death syndrome they're about to have.

00:51:48.400 --> 00:51:51.940
There's all sorts of things
to think about when it comes

00:51:52.110 --> 00:51:53.850
to us being on a device.

00:51:54.450 --> 00:51:56.190
And so now we're offering iCloud.

00:51:56.340 --> 00:51:59.490
And I think about iCloud and
I think it's much more than syncing.

00:51:59.550 --> 00:52:02.040
It's making universal
apps much more attractive.

00:52:02.140 --> 00:52:05.560
I have this application which is my
space war application where on my

00:52:05.560 --> 00:52:09.040
iPad version I'm moving my spaceships
around and they're going to sit

00:52:09.040 --> 00:52:10.940
and get ready to attack the planet.

00:52:10.940 --> 00:52:13.640
And they're going to take two weeks
to build and then they're going to be

00:52:13.640 --> 00:52:16.770
here in three weeks and they're going
to bombard this planet on the ground.

00:52:17.080 --> 00:52:19.970
And then when I play my iPhone
version of the same application,

00:52:19.970 --> 00:52:22.710
it's a ground war and they're
being bombarded from space and

00:52:22.750 --> 00:52:25.710
it offers much more opportunity
for making applications which do

00:52:25.710 --> 00:52:28.880
interesting things between versions,
between the iPad version,

00:52:28.880 --> 00:52:30.580
between the iPhone version,
between the version

00:52:30.580 --> 00:52:32.080
I broadcast over AirPlay.

00:52:32.080 --> 00:52:35.910
So different gameplay,
but the same world.

00:52:35.910 --> 00:52:40.600
I think that's a huge opportunity to be
able to make something fantastic there.

00:52:41.070 --> 00:52:43.750
So talking about AirPlay,
it's one of those things where

00:52:43.750 --> 00:52:47.070
I think about AirPlay and
it really does offer some,

00:52:47.070 --> 00:52:49.410
you know,
everyone cheered yesterday when it was on

00:52:49.570 --> 00:52:51.220
screen and being shown as a game thing.

00:52:51.220 --> 00:52:51.800
It's wonderful.

00:52:51.800 --> 00:52:52.680
It's absolutely incredible.

00:52:52.680 --> 00:52:56.240
Also offers some design challenges
that we need to meet now as well.

00:52:56.260 --> 00:53:00.180
But when I broadcast to it, you know,
from my device to AirPlay,

00:53:00.180 --> 00:53:02.520
where are my eyeballs looking now?

00:53:02.740 --> 00:53:06.610
What is my expectation for
where my gameplay is looking?

00:53:07.200 --> 00:53:09.410
If I'm expecting my gameplay
to look at the TV set,

00:53:09.410 --> 00:53:12.930
and, you know, what is,
how are they going to interact with that?

00:53:12.950 --> 00:53:14.990
How are they going to
interact with the game?

00:53:15.000 --> 00:53:17.860
You know, with the iPad 2,
is it going to become one big button?

00:53:17.900 --> 00:53:21.060
Am I going to use the gyro,
the accelerometer, move things around?

00:53:21.060 --> 00:53:25.910
We really need to think about where
we expect players' eyeballs to be now.

00:53:25.910 --> 00:53:29.020
Up until now, we've been lucky.

00:53:29.020 --> 00:53:30.680
It's always been focused
right in front of us.

00:53:30.700 --> 00:53:33.340
But AirPlay, you know,
changes things up a little

00:53:33.430 --> 00:53:34.810
bit in terms of design.

00:53:34.810 --> 00:53:37.180
We really need to be careful
to design good interface there.

00:53:37.180 --> 00:53:40.890
So that people can still
continue to play our games and

00:53:40.890 --> 00:53:43.200
enjoy them now on their HDTVs.

00:53:43.260 --> 00:53:46.820
I think one of the huge opportunities
there is the opportunity of many

00:53:46.820 --> 00:53:48.920
local devices surrounding a HDTV.

00:53:48.950 --> 00:53:52.590
We've got to think about how to involve
those party games and think about

00:53:52.590 --> 00:53:56.360
some of the games Nate made and how
to actually make that interactive.

00:53:56.450 --> 00:54:03.050
I think that's going to become some
of the really killer games is that

00:54:03.070 --> 00:54:08.600
many local devices with one iPad
connects up to via AirPlay doing

00:54:08.600 --> 00:54:08.600
some absolutely wonderful games.

00:54:10.080 --> 00:54:11.190
That's number 10.

00:54:11.290 --> 00:54:11.890
Wow.

00:54:12.090 --> 00:54:13.990
Made it through all 10.

00:54:14.150 --> 00:54:18.190
Finally, make something fantastic.

00:54:18.540 --> 00:54:21.240
We're in the games industry.

00:54:21.400 --> 00:54:23.410
If we aren't getting up
every morning and thinking,

00:54:23.410 --> 00:54:27.720
"Oh, what I'm doing is fantastic,"
you're in the wrong industry.

00:54:27.720 --> 00:54:30.520
We're making games.

00:54:30.520 --> 00:54:31.790
Everything we make is fantastic.

00:54:31.790 --> 00:54:34.160
This is a fantastic
time to be making games.

00:54:34.230 --> 00:54:35.720
I'm loving it right now.

00:54:35.850 --> 00:54:38.140
Making fantastic games,
getting out of bed doing

00:54:38.140 --> 00:54:39.880
this is absolutely wonderful.

00:54:39.970 --> 00:54:40.480
So thank you.

00:54:40.680 --> 00:54:42.590
Thank you for listening.

00:54:50.090 --> 00:54:53.880
We have sessions on
Game Center today and tomorrow.

00:54:53.970 --> 00:54:57.240
I encourage you to go to all of those,
although we have a lab this afternoon.

00:54:57.240 --> 00:54:59.000
Come to our lab first.

00:54:59.080 --> 00:55:03.740
iCloud sessions today and tomorrow.

00:55:03.800 --> 00:55:05.700
Open GL ES sessions.

00:55:05.760 --> 00:55:07.340
That's going to be
wonderful to sit through.

00:55:07.340 --> 00:55:11.510
I'll be here sitting through all of
those tomorrow here in this room.

00:55:11.840 --> 00:55:15.840
The AirPlay session, Presidio,
this afternoon.

00:55:15.890 --> 00:55:19.520
And finally, if you have any questions,
Alan Schafer is your man.

00:55:19.560 --> 00:55:22.400
I'm sure he'll be down
visiting our lab as well.

00:55:22.580 --> 00:55:24.070
Here's his email address.

00:55:24.210 --> 00:55:25.940
Send him your questions.

00:55:26.000 --> 00:55:26.340
Thank you.

00:55:26.590 --> 00:55:28.450
Let's go have some lunch.