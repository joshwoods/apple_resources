---
Title:  Managing Clients in Heterogenous Environments
Year:   2006
Web:    https://nonstrict.eu/wwdcindex/wwdc2006/525/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

I'm John DeTroye, Senior Consulting Engineer for Apple, and this afternoon we're going to be talking about managing clients in a heterogeneous environment. What's that mean? We're going to be talking about managing clients where we have Macs and PCs on the net and we have to take care of everything. I'm between you guys and the beer bash.

And no, the buses will not show up until I'm done. When I wave, they'll bring the buses up. So don't leave early. It won't do you any good. So what we're going to talk about in the next few minutes, we're going to talk about the systems lifecycle, IT's favorite thing, some of the tasks involved in that. We're going to talk about some enterprise solutions that fit within this task set.

I have some really great customers here who are going to tell you about how they've implemented some of this stuff and how they're working within the lifecycle frame with some very good solutions. And then we'll finish off with a Q&A. So what is this systems lifecycle? What is this thing?

It's, for all intents and purposes, a task-oriented process. It runs usually yearly, and it involves the idea of you evaluating, deploying, and managing systems. If we break that down, it's the evaluation phase that we go through every year of, what do I have, what do I have to do, how many of the different tasks that my IT department has to handle are handled internally, externally, and so forth. How much manpower do I need to get this job done? How often am I going to perform the different tasks in the cycle? And am I getting paid enough to do this? So then we deploy, yeah, no.

Next year I'll fix the slide so it just says no. The images, how many images do you deploy? How many different sets? And how many different systems do you manage for deployment at each cycle? How often or how much of your deployment is done manually? The seat of the pants, you know, people running around with gobs of FireWire drives or DVDs and so forth. How much of it is done completely off a network where you just sit back, push the button, and let it go?

How much of it is done just one of those, you know, run down the hall and quick, it's a VP, fix this system. And how often do you go through this? Some sites do it every year. Some sites do it every week. Some sites do it every day. Some people just say, you know what, we're not updating anything. We went through enough of this. We're going to just do it, you know, whenever a machine breaks, we'll do an update.

And then the biggest piece of the pie is the management part. Maintaining and supporting this whole environment. And what we have to deal with there is the idea of, are we going to centralize all this systems management or do I have different sites, school buildings, campuses, and so forth that I can deploy this stuff out to? Can I spread it out?

Simple things like handling password changes. You know, if I have, on a Monday morning, if I have 40 different sites to deal with and I have the average of, you know, two or three people per site forget their password, how do I quickly get all those passwords reset and reorganized? And for those of you that are dealing in K-12 education, just picture the third-grade teacher in the lab with the kids sitting there going, I can't do it.

There's a long time between IT will get to it and, oh, by the way, it's done right now. System software, security updates, and so forth. How do you handle that stuff on a regular basis? Hardware replacement. If somebody's system goes down, do you recover their data or do you just say, you know, we told you not to do that?

Who handles help desk? Do you have a formal help desk operation? What about workflow management? Do you actually have a process electronically doing things? And that could be anything from an ad agency's workflow of an entire project all the way down to just a teacher saying, you know, how can I get book reports turned in electronically? What about managing your assets and doing license management? And once again, you just sit there and look at the clock and then, you know, you look at your paycheck and you go. So when the beach ball stops spinning, this is what you see.

We have asset management, imaging, software distribution, remote control, usage management, license management, patching, upgrading, and finally help desk management. Breaking it down, if we look at each of these, just a quick idea and perspective. Asset management. Where's my stuff? We got 52 scanners in last week. I saw them in the warehouse. Where are they?

All those USB cameras, all those FireWire, the digital cameras you got in because somebody ordered them and they needed them and they disappeared and you got the asset tags on your desk but the boxes are gone. Imaging. How do I deploy functional systems? How do we ship Macs? We. Kitchen table systems, right? They come equipped with things like, you know, Software to manage your finances. Games to keep you occupied. Do they actually come equipped with the stuff that you're going to deploy them to all your schools or to all of your employees in the cubes?

Probably not. So how do we deploy functional systems when we're done? Software distribution. Once I have systems out and deployed and I upgrade my software or work with things, how do I get complete deployment sets of software put together? How do I layer stuff on top of what the core systems are?

Remote Control: One Example: How Do Teachers Reach Out and Touch Students? How does the administrator reach out and send a message to people and say, "Hey, here's things that I need done," or send a message to somebody, or observe machines down in a shared library? How do I watch it?

Usage management. How do I preserve the user experience? User experience preservation can range from the... Be your own self on your own computer. IT guys love that, don't you? Wouldn't you love to have 51 different completely unique users doing whatever they want with their computers at any time? Or then there's the Klingon approach. You get text at it.

And we turned off the speech part. License management. How do I stay legal? In education, we always love that. We get a teacher who goes to a conference. Somebody gives them an NFR copy of a project, some sort of software to test out. Say, hey, test this out. Convince your school board you need it and everything. Next thing you know, there's a thousand copies of it across the school district and some lawyer from the company is standing there going, hmm.

Guess what you just bought? Patching and upgrading. Not that we release upgrades on a regular basis or anything, but... You know, how do I maintain my deployed systems? And that's back to how often I go through this. And then the help desk, tracking incidents, doing it formally, actually knowing how many times different systems had a problem, you know, how many system freezes, how many network cards, how many things went down.

So if we run this through the cycle throughout the year, starting today, let's just use that as an example. We're going to sit down. We're going to review everything we have, look at what we got, look at our mission statement, and go back and evaluate the needs of our users, right? Primary purpose, accomplish the mission, make sure that the users can get their jobs done. Teachers can teach. Students can learn. The cube rats can do whatever the cube rats do and go on from there. Then we determine the hardware and software required.

And we begin creating images. Of course, the part I left out of this was the great part of we determine the hardware and software required, and then we go and beg and plead for the money to get the stuff, but that's separate of the IT cycle. Then we test the configurations, and hopefully we don't iterate back and forth to the image creation too many times. When we're done, we've got some images and we're ready to deploy. We go out and we get the systems out. Everybody's happy. Everybody's all, you know, wow, the desktops look great. All the stuff works.

Then we spend the rest of our lives managing the systems, and we're sitting there going day to day, managing systems and doing updates and repairs and managing systems and doing updates and repairs, and all of a sudden, somebody looks at the calendar and says, wow, time flies when you're having fun.

So in order to accomplish this, what we're going to talk about today is some lifecycle task solutions from the enterprise side. These are some commercial solution providers that do something unique. Over the last couple of years, we've talked about lots of different solution providers. Today, what we're going to talk about specifically is these are four companies that support Macs and Windows machines in an environment where we can have an OS X architecture from top to bottom. OS X server-based. Even if they offer a Windows Server base, but they also offer OS X Server base solutions that have OS X Admin, OS X Client, and they support Windows.

The four companies we're going to talk about are Sassafras with their K2 License Management Suite, FileWave with FileWave and Asset Trustee Jamf with their Casper Suite, and LandRev with the LandRev Management Suite. K2, Key Auditor and Key Server. What do they do? Well, from the task of asset management, what we can do is perform complete inventories of all the software that I have on my PCs and my Macs. I can see everything that's on all of my systems, every single executable. I can also go back and I can perform incremental scans based on time.

I can say once a week, just check and make sure nothing new has shown up and so forth on my machines. And I can create reports from this. And we have web-based and console-based reports. We can host the process, the database that stores this on a bunch of different machines, OS X, Windows, Linux, or even NetWare.

From a usage management task perspective, supporting multiple groups and divisions or sets of computers out there, and the applications are location independent, so when we scan for the applications, it doesn't necessarily have to be in the applications folder. We'll pick up things in somebody's home directory and so forth.

We can deny access to unauthorized software, and we can schedule usage of software and reserve use of software based on the needs of the site or the needs of the users. We can do software deployment and usage reports and go back and see what's been deployed and what's in use at any one time.

From a license management perspective, we can centrally deploy and manage software licenses. Big deal of being able to say, I've got unlimited site licenses, I want to track those. I've got node lock licenses. This computer is allowed to run this software, I want to track that. Or a concurrent use license, a floating one. I have 30 licenses for this, and I've got 500 different machines. So 30 people at any one time can run the software.

We can also manage multiple profiles for the exact same application. So we have different versions of an application deployed based on licensing and purchasing plans and so forth. We can have different license management for different versions of the same app and manage and reclaim software licenses that have been dumped where somebody is no longer using the software. They've stopped running it and we can check and see it's not in use anymore so we can reassign that license to someone else. Lots and lots of reporting. Make management really happy. Look, we're in compliance.

Help desk management, being able to do audits of the hardware, know where your stuff is, and let the help desk guys know what types of machines they're working on. And then being able to do role and scope-based administration, basically looking at it from a task perspective or from, you know, I want to know if this task is being met or if all the computers in a single office are meeting the criteria. There's a widget for it to be able to go and look at stuff, web reporting, and RSS report feeds.

FileWave has Asset Trustee and FileWave itself. From an asset management perspective, what we've got is the ability to automatically gather and store all the information about our hardware and software, complete asset management. The client itself will actually initiate the scan and then report back to the server for storing of the data later on. And OS X Server is very well supported with this.

License management, maintaining data on our license compliance. How many licenses do we have deployed? Where is it being used? How many do I have that I have to watch out for? And working with FileWave, the application, if you find somebody that's installed licenses or installed software where they shouldn't, FileWave can go out and just very nicely remove the application from that machine saying, no, no, no, you're not allowed.

From a software distribution perspective, what FileWave allows me to do is create a file set. And these are self-healing sets of applications where I put them out on a machine, and if anybody messes with it, somebody tears out the help folder or removes a piece of an application bundle or whatever, the file set itself will actually go back and pull down all the rest of the contents and replace itself and heal the set that I've sent out to the different computers.

We can create snapshots to do baseline imaging and then add layers of file sets on top of that where we layer on, you know, here's what the teachers need above what the students need, here's what the admins need, here's what the accounting guys need over top of what the secretaries need, and so forth and so on.

From a patching and upgrading point of view, you can also scan the computers based on the asset trustee information and say, hey, these computers need all of these different updates, so let's build a set for these and deploy that. And we can associate that set of computers that comes back from the report with an upgrade or a patch file set. And then also look at the reports and get real-time data back of who's been upgraded and who hasn't so that we can keep track of the machines.

Maybe somebody keeps turning certain machines off and we have to go after them to make sure they've been upgraded. FileWave is also integrated with ARD. There are several tasks you can actually run, such as installing a FileWave client automatically using ARD or running post-flight scripts with the FileWave client to be able to do updates.

Casper from Jamf Software. From an asset management perspective, what Casper gives us is the ability to create reports using either their recon application or the Casper application itself for Mac OS 8, 9, 10, and 11. and Windows systems. I can go out and I can do different levels. I can establish different levels of administrators and give them access to different types of data depending upon who it is that I need to scan for this at a building level, at a district level, at a site level, campus level, and so forth. And I can create scheduled reports or triggered reports based on a certain criteria on that machine.

From an imaging and software distribution point of view, I can create software distribution packages, literally point and click, snapshot a machine, install a bunch of stuff, click a button, and it creates an installer kit for me. And the configurations are entirely based on what I need on that specific class of machine for my users. And the packages that I create can be in Casper format to be handled by Casper itself, or I can create PKGs that I can use for deployment at another point.

So if you have Vice installers and a bunch of other drag-and-drop installers and so forth, you go and do all that, and when you're done, I can create a single package installer or a Casper installer package from all of those different pieces and have a single unified package. From a remote control perspective, Casper supports the ability to do VNC support with SSH tunneling. I can also do things such as scheduling and running remote Unix commands, reset local passwords, and flush caches on a system, fix permissions, and so forth.

From a license management perspective, I can maintain a complete database of all licenses that are deployed in my systems, and I can also go search for things that I need to check on, such as, you know, do I have all the correct fonts available, all the correct plug-ins for my different applications, do I have all the correct sub-apps that I need to launch. And when I'm done, I can go back and view the results of that and say, I want to look at it specifically by the application, or I want to look at it by a specific type of system, like, you know, are all my iBooks current.

From a patching and upgrading point of view, when I create my patches or my upgrade sets, I can do that and I can make it completely unattended. I always keep saying unintended, but sometimes that happens too. The unattended upgrades, behind the scenes, the user doesn't know it's happening. It just goes out there and makes it happen. I can create different sets based on different computers, such as my G5s versus my G4s versus my Intel boxes and so forth.

LandRev. The LandRev Management Suite. Asset Management. Real-time or scheduled periodic updates of all of my inventory. Where's my stuff? and the ability to take and create custom reports by just dragging and dropping all the different data criteria into columns, and I can just create custom reports automatically for anybody to view.

From an imaging perspective, one of the really fascinating things I can do here is a complete user unaware installation. I can completely upgrade a system or install an entire system underneath a user while they're operating the computer. And then I send them a quick message on the screen and say, oh, by the way, I need to reboot you.

You've just been upgraded to Leopard. And I can take those disk image sets that I'm using and I can edit those offline and edit them in place and then just go ahead and throw those back into the fray if I decide, you know, like perhaps we ship, you know, a dot update.

Software distribution, patching and upgrading all fall together in the task set with being able to literally deploy any installation content. PKGs, MSIs, EXEs, the MSP formats, all of the different formats for all the different installers that are out there. Mac and Windows, all together in the same environment.

To be able to do bandwidth throttling, I know that we can't all wait until 10 o'clock at night to do a lot of this stuff, but then during the day, turning it on full bore leaves the phone ringing with everybody screaming, the internet's down, right? One of my favorites. You go and look out the window, well, it looks okay to me.

[Transcript missing]

A schedule for those things to go out when less people are on the network. And literally to be able to create a one-click patch management. I just bring everything in and click, say, create a patch upgrade, create a kit from this. From a usage management perspective, I can track user patterns. Who's using what software at what time?

[Transcript missing]

From a license management perspective, I can monitor all my application usage. I can make sure everybody's staying straight. Nobody's snuck off to Walmart and installed something they shouldn't have on the company network or on the classroom lab. I can track the per-seat and concurrent license usage, and if the application supports it, I can track all sorts of extra details, such as the installation date, the activation date of the software, what the serial number is, and volume license information. If the application supports that, I can make that happen, too.

I can also track and manage missing software. If somebody goes in and says, hey, I need to clean my machine up so they remove a whole bunch of stuff from the machine, I can go back and say, hey, get a flag that says a bunch of stuff's missing. Let's take care of that.

So with that, what I want to do is bring some much brighter people up here to talk about how they've actually deployed this software in their environments. And I have four really good customers with me here today. Jim Phillips from the University of Pacific, Mike Kneebone from the Metropolitan School District of Washington Township, Josh Kaiser from Cabela's, and Ted Colgate from TBWA Worldwide. And I'm going to bring them each up here and give them a few minutes to tell you about what they're doing from their solution perspective. So let's start with Jim Phillips.

I'm Jim Phillips, and I'm the Director of Educational Technology Services at the University of the Pacific. It's a private institution with about 6,000 students spread over three campuses. We have a dental school right here in San Francisco. We've got a nice law school in Sacramento. And then the rest of our academic units are in Stockton, California, beautiful Stockton, California, where we have a school of education, an undergraduate college, a conservatory of music, a school of engineering and computer sciences, our school of business, a school of pharmacy, and a school of international studies.

We also have libraries, which are big users of technology. With regard to support, we use a decentralized model. We have local technology support working with the central IT office. And some of the academic units don't quite have enough money to have the local technology support people, so they come directly to our central IT. directly to our central IT.

With regard to faculty and staff machines that we support, San Francisco and Sacramento are entirely Windows-based. There's about 420 PCs in San Francisco and another 275 PCs in Sacramento. Down on the Stockton campus, we have a mix of platforms, 2,000 Windows PCs, another 300-plus Macs, about 200 thin clients that use four terminal servers centrally. And then there's a smattering of Linux and Unix users, primarily in the School of Engineering and Computer Sciences. There's growing interest in thin client for security reasons, and also among our students, there's growing interest in Macs.

So our problem was when I arrived three years ago is we weren't leveraging our concurrent licenses. We were purchasing the licenses with one-time money. Often we had outdated versions. And I really wanted to operationalize the expense, and when we bought the license, I wanted to make sure we got on the maintenance contract as well.

So we needed a way to track usage of our concurrently licensed software such as Acrobat, Dreamweaver, and Photoshop. At the local level, our technology support providers also wanted to track usage of their discipline-specific applications, and sometimes these were purchased in very small concurrent license quantities or even individual licenses.

And did I mention that we were understaffed? So for us, the Sassafras solution was a good one. We were existing K2 users, but we were underlicensed for a three-campus deployment, and we wanted to maintain our ability to control our centrally licensed software while extending the possibility to the local technology support people to manage their licenses as well. And Sassafras actually worked with us to develop this in their newest version of K2 6.1. It's the role-based administrative feature.

So we were able to resolve many of our issues and we're actually able to do it in less time with fewer people. And we plan to deploy on a larger scale this year and enable the local technology support people to have the administrative access that they need. In addition to the license management, there are huge benefits for our security officer who can now do auditing and he can also quickly notify specific users if they are using a vulnerable application.

So in conclusion, the usage reports are going to be very useful. We're going to know what we're currently using. That's going to help us to predict what we're going to need in the future. It was good to work with Sassafras. They provide great support, and they were willing to change something in a newer version just because we wanted it. So that was kind of refreshing, you know, to have our needs addressed. And it can often seem like no one's listening, but in this case, they listened and they changed it.

So we're really going to look forward to this role-based administrative feature, and we'll be deploying it again, like I said, this year. And Sassafras actually dubbed it the University of the Pacific feature because I kept telling them we needed it so badly. But thank you very much. That's my story.

Next, I want to bring up Mike Kneebone from the Metropolitan School District, Washington Township to talk about how much fun it is in education to be an IT guy. I'll keep it brief because you're that close to the beer. But I am Mike Nevone, Technology Coordinator in North Central High School, Washington Township. We're based in Indianapolis. We have 10,000 students spread across 14 buildings. It's a fairly progressive township. Currently, we're ranked in the top 1.5% in all public schools in the country and number one in the state of Indiana.

But we fell into the same kind of pattern a lot of K-12 institutions did, where we did a good job acquiring technology. We did a great job deploying it, but really didn't have a long-term cohesive management plan. So quickly, we grew to 4,400 clients, 70% Mac, 30% PC. And every time there was a major deployment, we find ourselves going around and touching every single machine.

Sometimes not even major deployments, you know, some minor adjustments. And I'm sure we're unique in that and that most people here don't have to do that. But it was really killing us. So at the height of my frustration last year, Eric Wheatley from Apple introduced me to Oliver Noss at FileWave. And they said that their application would manage all those deployments, make them self-healing, worked on both PC and Mac, would give you a rollback function, and it was easy to use.

Well, it seemed to hit all of our problems that we were having, but it sounded like a brochure, and nothing ever works that way in my environment. So we wanted to install it and run a test on our machines on our network. So we ran it for 60 days in a mixed environment, and before we decided, yeah, this is what we need to deploy across the township.

One of the main problems for me was that our other applications that we'd used in the past for similar operations didn't have support, were very complicated to use, a really steep learning curve. So I find myself the only one able to deploy these packages, deploy settings, and I needed something I could hand off easier. So now we can have a tech up and running in about a half a day creating file sets and deploying software and updates.

One of the other issues was that our mobile users and what I'll call lazy users, because we'd have deployments scheduled or going out, and they would tie up a machine while it's being deployed, and patient users would just shut it off, crash it in the middle, not like it was important. Or laptop user closes their laptop, takes it off network, and either the deployment would fail, or the Well, it would fail. The deployment would fail or they'd miss the installation altogether.

So now with this client-based setup, it's a daemon that runs in the background. So if the laptop user closed their laptop, takes it off the network, it's not a problem because that information resides with the client. When they fire it back up, it picks up where it left off. Once it gets the whole file set, activates it, and it's running.

This also gave us some unique opportunities. One was that since it didn't tie up the machine anymore, we were able to deploy, like in our setting, we deployed iLife 06, fully installed and customized, to 30 machines in use, and our environment took about an hour and a half. It also gave us the ability to migrate to Tiger without touching the machines. With support, which has been excellent from FileWiff, we built a Tiger set, shot it out to all of our 10.3 machines, and they reboot into Tiger.

One of the features that I've really kind of worn out is the rollback.

[Transcript missing]

It's really kind of become like an extra set of hands for us, right? Because now we're able to go and take care of our business instead of do all these deployments by hand. We're literally going to save thousands of man hours over this next year. Excuse me.

So... With that time, I mean, ultimately our job is education. And the more we can make our maintenance transparent to the end user, the better off we are. We lose less instructional time. So we will now be able to not take down those machines and tie them up for deployments, free up our time to support the teachers and students, which is really what we're all about. With that, I would be happy to answer any specific questions about our deployment, too, at the bash later on.

Next, I want to bring up Josh Kaiser from Cabela's, and we want to jump into the business world and see how the IT guys on that side live, breathe, and love my little beach ball. Thanks, John. My name is Joshua Kaiser. I'm a Senior Graphic Systems Administrator at Cabela's Incorporated in Sydney, Nebraska.

Just a little bit about Cabela's, if you're not familiar with us already. We are a leading multi-channel reseller of hunting, fishing, and outdoor goods. We have really three main venues, how we deliver goods and services to our customers. We have more than 120 million catalogs a year that we deliver to 50 different states in 120 countries. We have 15 U.S. retail locations and 13 more currently announced. And we have a robust internet presence to deliver goods and information.

A little bit about our environment. We have a smaller Mac group that supports a lot of creative systems, and we're kind of in among the PC guys, what I like to refer to as the greater MIS or the dark side. Among our group, we have around 200 Mac workstations that we are in charge of supporting. We've got a little over a dozen Xserves.

We also have a handful of PC workstations and servers that we have to work with. As far as the configurations on those go, one of the big challenges that we've had is we have a lot of different configurations in a lot of different areas. We have 15 unique workgroups.

We have a team of 18 different locations across the United States and we have variations from one user to another within a workgroup depending on the specific peripherals that user may have to access or other specific functions they may have to work with. So we had a few problems. We don't like to call them problems. We like to call them opportunities. Sometimes it feels like land of opportunity.

Over the last two years, we've been making some changes to how we approach the workstation management lifecycle. At the time, everything that we were doing was manual when I came in two and a half years ago. It was literally sit down in front of a machine, pop in the install disk, run it, configure it, load the next piece of software, run it, configure it. And the problems with this are pretty obvious. It was entirely too slow.

We had some serious inconsistency issues with deployments of different workstations across the user base. We had really no effective means of delivering updates to the deployed machines. And the time and the efficiency issues for it were just a nightmare. We have a fairly small tech group. There's only five of us to support basically everything we have to do.

So currently, our solution is basically Netboot, Netrestore, the Casper Suite, and the Software Update Server. And that gives us some really nice things that we can do now and not spend near as much time as what we used to be doing. We can perform installs unintended and very quickly. Installs can occur overnight while we're not around. Just come in a little bit early in the morning, make sure everything loaded the way that it should.

We can pre-configure all the aspects of the user environment. This is one of the things that I really love about what we're doing now. We can actually have a machine up and going, installed, configured, and we don't have to worry about anything as far as user preferences. The user is ready to go as soon as that machine is rebooted and done installing. That includes the OS, the settings for the OS, the software and the preferences for the user, and all the custom scripts that we have associated.

The little automated processes that the system admins just love to run on our users' workstations. We can also maintain all of our software updates very easily, make sure that every machine out on our network gets that latest security update. I know that's a big issue. We can also install new packages while the users are working without interrupting the user.

We gather recon information about all of our clients' workstations. It's really useful to know what applications are on there, how much space the users have left. We can get just this really general idea of what the environment among our user base looks like. And then we also can get notification on all of those things and make proactive decisions, oftentimes before the user even realizes that there's anything wrong.

Also, we can regularly do a clean install and refresh those workstations so we can make sure that the user's experience is totally up to snuff. Finally, and this is one of my favorite things, we can cache packages on the local client. Even if our network goes down, the client actually has everything that it needs right there. All you have to do is reboot, hit the restore partition, and you can totally reload the machine from scratch.

So we can do all of this with only two base system images. We have a PowerPC base and an Intel base. We can do it with minimal staff, minimal time dedicated to setup and break fix. So in conclusion, over the last two years, we've been making a lot of changes, a lot of little tweaks. I'm really getting happy with what we have now. We have a more consistent platform. We have decreased downtime for maintenance and changes on the workstations. And we actually have a decreased technical presence among our users.

We're actually running into situations where our technicians just have to take the time to get out and mingle with the users and give them a little, hey, how are you guys doing? Just want to let you know we're still here. And that's been a pretty good problem to have. Thank you.

Next, I want to bring up Ted Colgate. And I want you to hear from the IT perspective of the guys that brought us the 1984 commercial and-- Good afternoon, everyone. I think I'm the very last speaker before our Apple beer bash, so I will be brief. My name is Ted Colgate, and I'm the CIO of TPWA Worldwide, an international advertising agency, and as John has said, Apple's agency. Apple and LandRev have asked me here today to talk a little bit about desktop management, and specifically about why we at TPWA have adopted LandRev in our environment.

Obviously, we've had a good experience with LandRev, or I don't think they would have invited me here to present. Let me start by painting you a picture of our network. TPWA has over 280 offices in 70 countries with over 10,000 employees. Our offices are very different in shape, size, and complexity. For example, our office in Norway has about 10 people, and our office in Paris has over 1,000.

It's hard to say if there's a typical TPWA office, but if I had to conjecture, I'd say it's about 75 people. And often when I talk to an IT director of a local office, I have to remind him or her that TPWA has more offices than they probably have employees.

TBWA has grown over the past 20 years by acquisition and natural growth. However, we have never opened an office from scratch. We find the most creative independent agency in a local market and we acquire them and introduce them to the TBWA brand and TBWA's way of doing business.

However, there is a delicate imbalance between efficiency and creativity. So, in order for our offices to maintain their creativity, or so I am told, we don't place too many rules and regulations on them. As you can imagine, this makes my job very difficult. Instead of mandating my technical choices to the companies, I am an ambassador to the local office to convince them to spend their hard-earned money, pounds, rupees, on the technical solutions that I recommend.

However, so far, LandRev has been a well-adopted pick. We've had installations from Austria to Germany, Vancouver, and in the US, and we're starting to roll out into Asia. So far, in only a few short months, 2,000 people of our user base are covered, and this number is growing rapidly. Why is this? Before I talk about why we went with LandRev, let's look back at what our issues were. Let's start with hardware asset inventory.

If we try to look and see what kind of asset inventory that we had, it generally boiled down to how organized the local IT director was. I might say, for an example, this next version of this application requires that you have 512 megs of RAM. Do you have that? And the normal response was, I need to check, and it would take about a couple weeks. With automation, he or she can check it while we're on the phone.

That's an example of application deployment, but probably more common is the problem of lease returns. When things come off lease, we quickly need to locate the hardware, the peripherals, any other RAM, etc. that are being returned with the machine. It can add up to a lot of wasted money if the IT director hasn't organized themselves well. With automation, this is so easy. However, probably the biggest reason besides organization to go with automated desktop management is time, saving time, time organizing the hardware, the software, the updates, the patches, you name it. matches, you name it.

[Transcript missing]

We looked for a package that had easy deployment of software and patch management with several methods to choose from, including redirecting Apple software updates and Windows updates, and even first-time machine provisioning. I'm still surprised at the number of companies that still rely on Sneakernet and manual processes and builds. We also needed a package that included not only hardware and software management, but also software metering.

LandRev's software administration not only helps identify licensing issues, but it reports on illegal software and can even deny it from launching. But software metering can even negate the cost of purchasing desktop management software in its entirety. For example, let's say you're hiring five designers that need Adobe Creative Suite. You can scan the network and see that you might have five people who haven't launched the software in eight months. You can reclaim those licenses.

And we just redeploy to the creative people and save the company $5,000. And lastly, we needed scalability. I commented on the fact that a typical TPWA office is 75 people. But we have every shape and size office from 10 to 1,000 employees. We wanted software that did the same. We needed software that was robust enough to cover the Paris and Los Angeles offices, while easy enough to understand and roll out to the Norwegian or the Bulgarian offices. That's it. Thanks.

Let's wrap this up. From an enterprise client management perspective, what we've been trying to focus on is literally solutions that are cross-platform but live within the Mac architecture as its baseline and could live in the other architectures. But what I really wanted to expose everybody to here today is the idea of software that we can use Mac OS X servers in the background, and we can use Mac OS X admins and Mac OS X clients, and we also support Windows with this.

So often it's the other way around, right? So the tools that we talked about today, Sassafras software with their K2 management suite, FileWave with FileWave and Asset Trustee, Jamf software with their Casper suite, and LandRev with the LandRev management suite. But they're not alone. There are a lot of other solutions out there. We could have turned this easily into an all-day exercise. We could stay.

Many other companies that also do Mac and PC support where they have the clients and the ability to handle all the different systems and do an awful lot of things that will cover the gamut, and we just could not begin to get into all of them. This is just a sample of them.

And in fact, some of the developers from these companies, some of the representatives of these companies are here today, and I'll ask them when we finish with the Q&A if they want to come up towards the stage in case anybody wants to meet and greet with them and talk to them.
