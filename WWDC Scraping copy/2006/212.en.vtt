WEBVTT

00:00:10.670 --> 00:00:11.590
Good morning.

00:00:11.640 --> 00:00:14.100
I'm Vince Utley, and I manage the
QuickTime engineering team.

00:00:14.100 --> 00:00:18.230
And I wanted to thank you all
for attending this session,

00:00:18.230 --> 00:00:20.680
especially,
I know it's very early for some of you.

00:00:20.680 --> 00:00:23.700
I also want to thank you for
your continued commitment

00:00:23.710 --> 00:00:25.560
to QuickTime technologies.

00:00:25.560 --> 00:00:27.920
Last year, we had an overview session.

00:00:27.920 --> 00:00:29.840
It wasn't this well attended.

00:00:29.840 --> 00:00:32.770
So we restructured it,
and I'd be very interested

00:00:32.920 --> 00:00:34.710
in your feedback afterwards.

00:00:34.720 --> 00:00:37.050
We want to make sure that there's
enough substance in it for you.

00:00:37.060 --> 00:00:40.130
So part of what we're doing
is introducing you to the

00:00:40.130 --> 00:00:41.790
other sessions we have.

00:00:41.800 --> 00:00:45.490
We want to tease you and
motivate you to attend them,

00:00:45.500 --> 00:00:47.520
but we want to make sure there's
enough substance in this presentation.

00:00:47.520 --> 00:00:50.740
But the fact that last year was
at a much more reasonable hour,

00:00:50.740 --> 00:00:53.240
but only this is much
more heavily attended,

00:00:53.240 --> 00:00:54.170
we appreciate that you're here.

00:00:54.180 --> 00:00:57.230
So I'm going to give a short
introduction to the sessions that are

00:00:57.230 --> 00:01:00.390
available to you at the conference,
and talk briefly about what

00:01:00.510 --> 00:01:04.090
you'll be hearing this morning
from the engineering team.

00:01:04.100 --> 00:01:08.220
So... I'll speak briefly to these points.

00:01:08.220 --> 00:01:14.670
We are advancing QuickTime,
even though the code base is pretty old.

00:01:16.280 --> 00:01:19.750
And there are some
challenges in doing so.

00:01:19.880 --> 00:01:22.400
And I'll speak briefly to that.

00:01:22.750 --> 00:01:26.940
We'll talk about some of the new features
we're adding in audio and video plumbing.

00:01:26.970 --> 00:01:30.870
And then we'll talk about some,
what do our annual provision of best

00:01:30.940 --> 00:01:36.160
practices to guide the new developers to
the right set of APIs and to enhance the

00:01:36.180 --> 00:01:39.270
skillset of the experienced developers.

00:01:39.600 --> 00:01:43.970
So I don't have any iPod giveaways,
but can anyone tell me

00:01:43.980 --> 00:01:45.660
how old QuickTime is?

00:01:45.730 --> 00:01:48.130
QuickTime framework, not the logo.

00:01:50.570 --> 00:01:52.880
End of '91, yeah,
December '91 when we introduced it.

00:01:53.050 --> 00:01:57.840
So it's showing its age.

00:01:58.080 --> 00:02:05.280
In terms of Silicon Valley technologies,
15 years is an eternity.

00:02:06.330 --> 00:02:10.810
And thank you, Brad,
for finding this image.

00:02:11.100 --> 00:02:16.160
So it is old,
but part of what we're trying to do with

00:02:16.160 --> 00:02:23.790
this image is to debunk the notion that
QuickTime is no longer usable or useful.

00:02:24.880 --> 00:02:29.340
And thank you, Brad,
for finding this image.

00:02:29.630 --> 00:02:34.640
So it is old,
but part of what we're trying to do with

00:02:34.720 --> 00:02:42.280
this image is to debunk the notion that
QuickTime is no longer usable or useful.

00:02:54.700 --> 00:02:58.930
because of our historical commitment
to backward compatibility,

00:02:59.290 --> 00:03:03.350
We depend on technologies like
QuickDraw that are appropriate to

00:03:03.350 --> 00:03:08.020
move into the 64-bit world and,
in fact, even appropriate to retain

00:03:08.100 --> 00:03:09.650
in our long-term plans.

00:03:09.660 --> 00:03:13.900
So we're doing our best,
but at certain areas we've reached our

00:03:13.900 --> 00:03:16.650
limit to how we can extend QuickTime.

00:03:18.180 --> 00:03:22.310
However, having said that,
the last four years the team has spent

00:03:22.830 --> 00:03:28.780
an incredible amount of effort redoing
large portions of the AV plumbing.

00:03:29.130 --> 00:03:33.720
and we continue to make enhancements
which we'll speak about today in detail.

00:03:33.830 --> 00:03:37.420
And in addition,
we want to be able to help you integrate

00:03:37.420 --> 00:03:41.280
QuickTime into the more modern frameworks
that are available on the platform.

00:03:42.570 --> 00:03:47.450
And the APIs we've introduced
in these renovations carry with

00:03:47.450 --> 00:03:53.890
them modern idioms that are based
on modern programming practices.

00:03:54.510 --> 00:03:57.860
What we want to do is encourage you,
one important message we want to

00:03:57.860 --> 00:04:01.950
give you today and the rest of the
conference is to move forward with us.

00:04:02.040 --> 00:04:03.950
Please adopt these new APIs.

00:04:03.960 --> 00:04:07.530
It's only through these APIs that
you're going to be able to exploit the

00:04:07.670 --> 00:04:11.780
introduction of new technologies as
they become available on the platform.

00:04:11.780 --> 00:04:14.560
So whether it be codec
acceleration through GPU,

00:04:14.670 --> 00:04:17.790
if it's available,
or the lower-level facilities,

00:04:17.790 --> 00:04:20.300
if you think really low,
fragrant programming level,

00:04:20.300 --> 00:04:22.550
later on top of that
is GL and core image.

00:04:22.970 --> 00:04:25.240
QuickTime rests on that to
take advantage of more powerful

00:04:25.330 --> 00:04:26.890
media processing capabilities.

00:04:26.900 --> 00:04:29.420
And that's the only way you're going
to be able to get to those resources.

00:04:31.520 --> 00:04:35.800
And if you have to change your code,
it's work to get there.

00:04:35.800 --> 00:04:36.560
We understand that.

00:04:36.620 --> 00:04:38.290
But it's work in the right direction.

00:04:38.320 --> 00:04:43.100
Even if the API is changed in the future,
what we're quite encouraged to do is the

00:04:43.150 --> 00:04:47.620
design and the algorithms are going to
be consistent with the programming model

00:04:47.620 --> 00:04:50.430
that we're endorsing on the platform.

00:04:50.440 --> 00:04:52.380
It's consistent with all the frameworks.

00:04:52.380 --> 00:04:55.220
This is a picture that
Tim Monroe is going to deconstruct

00:04:55.220 --> 00:04:56.880
for you in more detail later.

00:04:57.400 --> 00:05:00.150
But it's a picture you should become
familiar with because it's one of the

00:05:00.150 --> 00:05:02.260
icons of our new programming model.

00:05:02.260 --> 00:05:06.420
And part of this is to ensure you
that you're in safe hands with QtKit.

00:05:08.340 --> 00:05:12.380
We illustrate, so the bottom portion of
the diagram shows how we can

00:05:12.390 --> 00:05:16.130
modify the underlying pieces,
underlying components of the technology,

00:05:16.130 --> 00:05:19.030
but have an abstraction layer
on top of it to protect you from

00:05:19.050 --> 00:05:20.820
the API turmoil underneath it.

00:05:20.840 --> 00:05:25.590
And it helps us suss out and vet
some of the issues in these low-level

00:05:25.640 --> 00:05:30.180
components before we give you
exposure to the low-level C APIs.

00:05:32.590 --> 00:05:36.100
QtKit is not new,
so some of this information

00:05:36.100 --> 00:05:37.340
may not be new to you either.

00:05:37.340 --> 00:05:39.760
As I mentioned,
it's a high-level programming interface.

00:05:39.760 --> 00:05:41.770
Currently,
the only way you can get access

00:05:41.770 --> 00:05:47.840
to any kind of 64-bit support,
and we've added a new functionality,

00:05:47.840 --> 00:05:52.340
AV Capture,
that we're exposing first through QtKit,

00:05:52.340 --> 00:05:53.970
and you'll see some demos of that later.

00:05:56.540 --> 00:06:02.620
People are adopting QtKit rapidly,
and even internal to the company.

00:06:02.620 --> 00:06:04.540
Other applications within
Apple are using this.

00:06:04.540 --> 00:06:07.820
Michael Jones has been one
of our biggest evangelists.

00:06:07.820 --> 00:06:11.000
He spoke, I think, earlier this,
maybe yesterday.

00:06:11.000 --> 00:06:14.350
He spoke in previous years,
and not only is he using it,

00:06:14.410 --> 00:06:17.380
he's even using the new
AV Capture capability.

00:06:17.380 --> 00:06:23.100
And they developed a very sophisticated
animation production tool at Pixar.

00:06:23.100 --> 00:06:25.480
So we know what it's capable of doing.

00:06:26.140 --> 00:06:27.790
quite a bit.

00:06:28.320 --> 00:06:33.920
In the area of audio, we did a complete
renovation of sound media,

00:06:33.930 --> 00:06:37.600
re-hosting it on Core Audio,
and that was a significant effort.

00:06:38.070 --> 00:06:42.040
And if you have adopted that,
then you're familiar with audio context,

00:06:42.110 --> 00:06:46.890
and Brad's going to talk about some
enhancements we've made to that.

00:06:49.230 --> 00:06:50.060
Actively deprecating.

00:06:50.060 --> 00:06:52.300
So I think Apple is actually
very generous about deprecating.

00:06:52.300 --> 00:06:53.340
We don't really deprecate.

00:06:53.340 --> 00:06:54.540
We don't throw things away.

00:06:54.540 --> 00:06:58.050
We allow you to keep building your apps.

00:06:58.400 --> 00:07:01.260
But we are encouraging you,
if you're using Sound Manager,

00:07:01.400 --> 00:07:03.410
if you're using Sequence Grabber,
please stop.

00:07:03.490 --> 00:07:05.640
We have newer,
better things for you to use.

00:07:09.710 --> 00:07:12.890
The same with video.

00:07:12.900 --> 00:07:17.900
When we, in QuickTime 7,
we added B-frame support.

00:07:17.930 --> 00:07:21.500
And if you've, the ability to do that,

00:07:21.700 --> 00:07:28.480
and a code base that was never designed
to accommodate modern codecs was huge.

00:07:28.530 --> 00:07:30.720
It almost killed us.

00:07:30.980 --> 00:07:33.370
But we can now deliver to you
this very sophisticated codec,

00:07:33.370 --> 00:07:35.420
the 264 codec.

00:07:35.970 --> 00:07:40.060
If modern compression and decompression
techniques require a whole

00:07:40.170 --> 00:07:45.740
different kind of data flow model,
and what we did was using, again,

00:07:45.740 --> 00:07:48.780
a new metaphor,
a new construct called visual context,

00:07:48.780 --> 00:07:51.110
we can allow you to
have buffers in flight.

00:07:51.120 --> 00:07:57.360
So moving off of the old shallow
ICM buffer model was significant.

00:07:58.850 --> 00:08:01.430
I suspect that in changing
your applications to adopt

00:08:01.430 --> 00:08:04.070
these new technologies,
you're also going to have to build a more

00:08:04.080 --> 00:08:06.140
sophisticated memory management model.

00:08:06.220 --> 00:08:08.600
So again,
this is consistent with modern practices.

00:08:08.670 --> 00:08:11.080
We're asking you to move forward with us.

00:08:12.420 --> 00:08:16.880
Another significant factor of the
modifications we made is to allow you to

00:08:16.970 --> 00:08:18.500
integrate into these other frameworks.

00:08:18.500 --> 00:08:22.050
And Ken's going to talk to you
about what we did to allow you to

00:08:22.050 --> 00:08:25.720
integrate into core animation in
the Quartz Composer frameworks.

00:08:25.720 --> 00:08:30.600
So in the Aperture mode,
we've been littered with bugs about this.

00:08:30.620 --> 00:08:33.270
And what we attempted to do
here was be able to help users

00:08:33.490 --> 00:08:35.230
across the entire spectrum.

00:08:35.240 --> 00:08:38.480
The person just wants to open up their
movie and have it look consistent

00:08:38.520 --> 00:08:40.330
no matter what application they use.

00:08:40.900 --> 00:08:44.050
And the video production expert who
wants to be able to tag their content

00:08:44.050 --> 00:08:46.990
correctly and deal with dirty video.

00:08:50.790 --> 00:08:54.140
So, feedback session.

00:08:54.140 --> 00:08:55.820
A couple things we'd like you to do.

00:08:55.900 --> 00:08:58.880
Do what you can with
QtKit while you're here,

00:08:59.020 --> 00:09:00.690
especially the 64-bit piece of it.

00:09:00.880 --> 00:09:02.630
And come see us.

00:09:03.010 --> 00:09:10.310
Come to the labs and give us
feedback as soon as you can so that

00:09:10.310 --> 00:09:14.760
we have time to make changes where
appropriate before we ship Leopard.

00:09:15.440 --> 00:09:20.630
and find a QuickTime engineer,
ask all the questions you can,

00:09:20.790 --> 00:09:21.640
and give us good feedback.

00:09:21.640 --> 00:09:23.900
The last comment is about the session.

00:09:23.900 --> 00:09:25.850
I'm pointing you to the feedback session.

00:09:25.860 --> 00:09:28.910
In the past, it's been a place where
people come to vent,

00:09:28.940 --> 00:09:32.360
and I understand your
need for that relief.

00:09:32.380 --> 00:09:36.600
But what I want to encourage you
to do is bring us some ideas.

00:09:36.700 --> 00:09:38.190
We're trying to move forward.

00:09:38.200 --> 00:09:43.200
We want to know what is missing in
media services on the platform for you.

00:09:43.500 --> 00:09:46.160
What is inhibiting you to innovate?

00:09:46.160 --> 00:09:49.750
If you come talk to us about a bug
that someone filed 10 years ago,

00:09:49.800 --> 00:09:53.480
this radar bug,
we're not going to fix it.

00:09:57.320 --> 00:09:58.950
Took me a while to dig that up.

00:09:59.050 --> 00:10:00.880
And if you don't make
it to any of the labs,

00:10:00.920 --> 00:10:02.840
but you do make it to
the beer bus tomorrow,

00:10:02.960 --> 00:10:06.050
find somebody wearing this
t-shirt and give him or her

00:10:06.050 --> 00:10:08.780
your feedback or ask questions.

00:10:10.480 --> 00:10:13.480
So I just wanted to thank the team,
the QuickTime team,

00:10:13.480 --> 00:10:17.320
who are driving the sessions
and did all the work for the

00:10:17.610 --> 00:10:19.870
code that we're delivering,
the demos that we're

00:10:19.870 --> 00:10:21.050
doing here at the show.

00:10:21.060 --> 00:10:24.020
And I'll hand it off first to Tim.

00:10:32.630 --> 00:10:33.190
Thank you, Vince.

00:10:33.190 --> 00:10:38.950
The number one feature request for
QtKit from the very day it shipped

00:10:39.030 --> 00:10:43.090
was for us to give you a way to
grab audio and video data from

00:10:43.090 --> 00:10:44.620
devices attached to your computer.

00:10:44.620 --> 00:10:50.610
So we went ahead and we've added
some new AV capture classes to QtKit.

00:10:50.690 --> 00:10:54.190
The important thing for you to
understand is that this is not just

00:10:54.190 --> 00:10:56.340
a wrapper on the sequence grabber.

00:10:56.440 --> 00:11:00.670
On the diagram that Vince showed earlier,
you saw there was a new capture

00:11:00.810 --> 00:11:02.600
engine sort of at the bottom.

00:11:02.640 --> 00:11:06.710
So that is a pro-grade level
capture engine that we are

00:11:06.710 --> 00:11:09.160
now exposing through QtKit.

00:11:09.160 --> 00:11:13.800
There is no direct CAPI to that engine,
so if you want to get the

00:11:13.840 --> 00:11:18.840
capabilities that we have implemented,
you need to use QtKit.

00:11:18.840 --> 00:11:22.610
So what does it give us that, say,
sequence grabber didn't?

00:11:22.640 --> 00:11:26.420
Well, maybe most important,
it gives us accurate audio.

00:11:26.420 --> 00:11:27.780
Visual synchronization.

00:11:27.780 --> 00:11:31.010
This was sometimes very difficult
to do with sequence grabber,

00:11:31.040 --> 00:11:32.600
and here we just got it right.

00:11:32.660 --> 00:11:36.380
Another feature that it gives
us is frame accurate capture.

00:11:36.460 --> 00:11:39.250
So you can say,
I want to start capturing at this

00:11:39.340 --> 00:11:43.250
particular time code and I want
exactly 245 frames and we'll

00:11:43.250 --> 00:11:45.500
write that into the file for you.

00:11:45.520 --> 00:11:48.800
Another thing it gives
us is transport controls.

00:11:48.820 --> 00:11:52.690
So if you're hooked up to a camcorder
that can fast forward or rewind,

00:11:52.830 --> 00:11:54.600
we can do that through our API.

00:11:54.680 --> 00:11:56.400
And there are more
features that I've added.

00:11:56.440 --> 00:11:57.700
We'll talk about in a second.

00:11:57.700 --> 00:12:01.520
So let's just get straight to
a demo of these new classes.

00:12:01.520 --> 00:12:03.910
And could I have the demo machine,
please?

00:12:12.090 --> 00:12:13.560
It looks like we've gone to sleep here.

00:12:13.560 --> 00:12:17.790
There we go.

00:12:17.800 --> 00:12:20.920
This is a bit tricky because
of technical reasons.

00:12:20.920 --> 00:12:24.370
We're all having to look down at
this monitor here to do our work.

00:12:24.480 --> 00:12:27.420
So if I look like I'm sort of not
paying attention to this monitor,

00:12:27.420 --> 00:12:28.820
well, that's because I'm not.

00:12:28.900 --> 00:12:34.660
So I'm just going to launch this
application called QT Recorder.

00:12:34.660 --> 00:12:37.860
This is on your DVD,
the complete source code for this.

00:12:37.860 --> 00:12:41.960
So you can build and run this
yourself now with the seed you have.

00:12:41.980 --> 00:12:45.240
There's one restriction for the
seed you have that won't work,

00:12:45.300 --> 00:12:48.520
which is that this little,
let me see where my, there we go.

00:12:48.520 --> 00:12:52.940
This device selection pop-up will
not work in the seed you have.

00:12:52.960 --> 00:12:55.450
But if you come into the lab
and you play with it there,

00:12:55.470 --> 00:12:56.590
it should work fine.

00:12:56.600 --> 00:12:59.140
And what do we have there?

00:12:59.140 --> 00:12:59.820
I can't read that.

00:12:59.820 --> 00:13:00.900
What does that top thing say?

00:13:04.850 --> 00:13:07.850
All right, so I can select various
flavors of built-in audio and

00:13:07.850 --> 00:13:09.520
the eyesight with its audio.

00:13:09.520 --> 00:13:11.680
And let's just go ahead
and do a capture here.

00:13:11.680 --> 00:13:13.620
So I'll come down and hit this button.

00:13:13.620 --> 00:13:16.330
Testing, testing, one, two, three.

00:13:16.340 --> 00:13:17.720
And I'll stop it.

00:13:17.840 --> 00:13:19.940
It'll ask me where I want
to save that movie.

00:13:23.740 --> 00:13:24.250
I'll save it.

00:13:24.300 --> 00:13:29.900
It'll take a second to
write that out to disk.

00:13:30.620 --> 00:13:32.140
Did foo.move show up down there?

00:13:32.140 --> 00:13:32.680
Is that it there?

00:13:32.680 --> 00:13:34.880
And let's see.

00:13:37.800 --> 00:14:10.700
[Transcript missing]

00:14:13.910 --> 00:14:14.380
Is that there?

00:14:14.380 --> 00:14:20.360
And it automatically switched,
so we have on-the-fly device

00:14:20.410 --> 00:14:23.960
selection and device detection.

00:14:23.960 --> 00:14:28.240
And so I'm just going to go ahead,
and the lighting here isn't that good,

00:14:28.240 --> 00:14:30.740
but I'll see what I can capture with HD.

00:14:30.740 --> 00:14:33.290
So let's capture maybe my monitor here.

00:14:33.300 --> 00:14:35.880
That's not going to look very much fun.

00:14:35.880 --> 00:14:37.620
Not much light there.

00:14:37.620 --> 00:14:38.950
How about this?

00:14:38.950 --> 00:14:39.960
All right.

00:14:40.040 --> 00:14:41.760
So I've stopped that.

00:14:41.760 --> 00:14:43.020
We'll save it.

00:14:47.720 --> 00:14:50.150
Again, that'll take a second to
write itself out to disk.

00:14:50.240 --> 00:14:55.100
And somewhere down there, is this the...

00:14:56.700 --> 00:14:58.680
And it's high-def, so it's big.

00:14:58.750 --> 00:15:01.280
So let me just try and fit
that on the monitor here.

00:15:01.280 --> 00:15:03.880
And of course,
I didn't take anything very interesting,

00:15:03.880 --> 00:15:06.760
but if I had focused
on something wonderful,

00:15:06.760 --> 00:15:09.980
we'd have nice high-definition
video capture there.

00:15:09.980 --> 00:15:14.720
Okay, so let's go back to slides, please.

00:15:18.840 --> 00:15:20.840
And it's high-def, so it's big.

00:15:20.860 --> 00:15:23.380
So let me just try and fit
that on the monitor here.

00:15:23.380 --> 00:15:25.980
And of course,
I didn't take anything very interesting,

00:15:25.980 --> 00:15:28.860
but if I had focused
on something wonderful,

00:15:28.860 --> 00:15:32.080
we'd have nice high-definition
video capture there.

00:15:32.080 --> 00:15:36.820
Okay, so let's go back to slides, please.

00:15:48.700 --> 00:15:51.700
So let me point you to
the devices that you have,

00:15:51.700 --> 00:15:52.490
and actually, this list is incorrect.

00:15:52.490 --> 00:15:54.040
The core audio HAL devices are
also in the seed that you have,

00:15:54.150 --> 00:15:55.800
so that should be yellowed in this slide.

00:15:55.800 --> 00:16:00.430
We will support DV devices, and again,
if you want to do the ProDV formats,

00:16:00.560 --> 00:16:02.860
you need Final Cut Pro installed.

00:16:02.860 --> 00:16:05.800
And finally, I think will be
interesting to some of you,

00:16:05.840 --> 00:16:09.410
we're going to grandfather in
sequence grabber video devices.

00:16:09.420 --> 00:16:12.000
So if you have existing
devices that you work with,

00:16:12.000 --> 00:16:15.290
you'll be able to use those, too,
but again, not in the seed that

00:16:15.290 --> 00:16:16.580
you have in your hands.

00:16:16.620 --> 00:16:22.200
So let me point you to...
the main QT Kit session,

00:16:22.200 --> 00:16:23.870
which is tomorrow afternoon.

00:16:23.940 --> 00:16:27.060
That's the Building Multimedia
Applications with QT Kit.

00:16:27.140 --> 00:16:29.810
And then we have a couple of
labs which are actually going on

00:16:29.810 --> 00:16:34.090
contemporaneously Friday morning
in the Graphics and Media Lab.

00:16:34.140 --> 00:16:37.730
So with that,
let me bring up Brad Ford to talk

00:16:37.730 --> 00:16:41.580
to us about modern QuickTime audio
programming techniques.

00:16:41.650 --> 00:16:44.520
Thank you.

00:16:48.390 --> 00:16:51.250
Thanks, Tim,
and thank all of you for getting

00:16:51.250 --> 00:16:52.480
up as early as I had to get up.

00:16:55.510 --> 00:16:59.630
I'm going to give you an overview
of the audio subsystem of QuickTime,

00:16:59.630 --> 00:17:03.420
and I'd like to start by approaching
it from a question that we get very

00:17:03.420 --> 00:17:07.610
often on the QuickTime API list
and on the Core Audio list.

00:17:07.650 --> 00:17:08.600
Which do I use?

00:17:08.840 --> 00:17:12.930
There is this set of Core Audio APIs,
and there are the QuickTime APIs.

00:17:13.060 --> 00:17:17.140
I'm an audio programmer,
or I'm interested in audio in my app.

00:17:17.150 --> 00:17:19.960
Which set of APIs are
appropriate for me to use?

00:17:20.210 --> 00:17:22.680
Let's talk about why you might
want to choose QuickTime audio

00:17:22.780 --> 00:17:27.030
if we're doing your import,
decode, export, et cetera.

00:17:27.180 --> 00:17:30.940
In the area of import and decode,
it's all about the file formats.

00:17:30.950 --> 00:17:34.610
When you use QuickTime,
you get a host of file formats,

00:17:34.790 --> 00:17:39.940
some of which fall into the purview
of Core Audio and the Audio File API.

00:17:39.940 --> 00:17:40.960
Some of them do not.

00:17:41.180 --> 00:17:45.510
So what you find when you import using
the QuickTime Audio APIs is a superset

00:17:45.510 --> 00:17:49.810
of what you would get if you use the
Core Audio Audio File APIs alone.

00:17:50.160 --> 00:17:52.360
For instance, the .mov file format.

00:17:52.360 --> 00:17:52.700
.mov.

00:17:52.960 --> 00:17:57.840
many other video/audio mixed formats,
as well as third-party

00:17:57.840 --> 00:18:01.480
importers like for DivX and WMV.

00:18:01.890 --> 00:18:06.200
In the area of data formats, well,
we can decode a lot of different

00:18:06.270 --> 00:18:09.090
formats with QuickTime,
including all of the ones that you

00:18:09.090 --> 00:18:14.520
might get with the Core Audio decoders
and sound decompressors.

00:18:14.520 --> 00:18:18.300
We also have some third-party decoders
that only work with QuickTime.

00:18:20.140 --> 00:18:24.470
In the area of playback, well,
probably the biggest reason to use

00:18:24.470 --> 00:18:27.640
QuickTime for audio is because you
have video that you want to play

00:18:27.640 --> 00:18:28.900
at the same time as the audio.

00:18:28.900 --> 00:18:32.160
If you want to do that,
you can write an engine yourself

00:18:32.630 --> 00:18:35.990
that does synchronization,
startup sync, drift sync,

00:18:36.130 --> 00:18:37.850
or you can use QuickTime.

00:18:37.860 --> 00:18:40.110
We tend to do that pretty well.

00:18:40.120 --> 00:18:43.160
Also, we take care of media
time scaling for you.

00:18:43.160 --> 00:18:46.750
For instance, if you have some media
that has an edit in it,

00:18:46.800 --> 00:18:49.540
so you have one section of the
media that's supposed to play at

00:18:49.540 --> 00:18:50.680
a different rate than the rest.

00:18:50.720 --> 00:18:54.860
For instance, you have one section that's
supposed to be played at 1.5x.

00:18:54.860 --> 00:18:59.190
When you play that media using QuickTime,
it will automatically take care

00:18:59.300 --> 00:19:01.100
of that scaled edit for you.

00:19:01.100 --> 00:19:03.610
We also give you these
last three on the slide,

00:19:03.610 --> 00:19:06.960
pitch and rate control, volume,
spectral level metering,

00:19:06.960 --> 00:19:09.260
sample accurate multi-track mixing.

00:19:09.260 --> 00:19:14.080
None of that is... uh...
specific to QuickTime.

00:19:14.080 --> 00:19:16.380
You can get all of that
using Core Audio APIs.

00:19:16.420 --> 00:19:19.960
It's just that when you use QuickTime,
typically there's an easier,

00:19:20.310 --> 00:19:23.620
higher level interface,
so you write fewer lines of code.

00:19:23.620 --> 00:19:25.560
For instance,
if you're going to do pitch and

00:19:25.660 --> 00:19:29.090
rate control using Core Audio,
you would perhaps make an AU graph in

00:19:29.090 --> 00:19:32.840
which you inserted an AU very speed unit,
and then do all the setup

00:19:32.840 --> 00:19:34.630
necessary to configure that.

00:19:35.190 --> 00:19:37.530
Whereas with the
QuickTime audio interfaces,

00:19:37.630 --> 00:19:41.160
you just open a movie and play
it at some rate that's not 1,

00:19:41.160 --> 00:19:45.260
and you automatically get the...
the pitch and rate controls.

00:19:45.830 --> 00:19:48.870
We introduced in QuickTime 7
movie audio extraction,

00:19:48.890 --> 00:19:55.030
which is a great set of APIs for
getting mixed PCM audio out of a movie.

00:19:55.130 --> 00:19:57.810
This is something that people have
been doing with various success by

00:19:57.810 --> 00:20:02.650
dipping down to the media sample level
and decompressing samples themselves.

00:20:02.750 --> 00:20:05.860
We've had a lot of good
feedback about this API,

00:20:05.860 --> 00:20:10.210
movie audio extraction,
so we know that people are using it.

00:20:10.400 --> 00:20:14.410
It gives you access to the decoded
and mixed movie audio samples.

00:20:14.410 --> 00:20:19.030
So that means if you have some source
media that has multiple tracks,

00:20:19.030 --> 00:20:21.730
what you get out is a
summary mix of all of that.

00:20:21.950 --> 00:20:25.460
You don't have to dip down to
each track individually and

00:20:25.460 --> 00:20:26.970
then perform the mix yourself.

00:20:27.080 --> 00:20:27.860
We do it for you.

00:20:28.580 --> 00:20:32.940
And assuming that all of the audio
decoder components involved in the

00:20:33.150 --> 00:20:37.730
audio playback chain are threads
for the media that you care about,

00:20:37.730 --> 00:20:42.370
we support multiple threads,
which means you can extract movie

00:20:42.370 --> 00:20:46.020
audio on a different thread than
the main thread or the thread

00:20:46.020 --> 00:20:47.940
on which you open the movie.

00:20:47.940 --> 00:20:51.600
It also means that you don't have to
work with the audio converter directly.

00:20:51.600 --> 00:20:54.320
That might not scare some of you,
but some of you it might really scare.

00:20:56.680 --> 00:21:01.380
In the area of encode and export, well,
it should come as no surprise that

00:21:01.380 --> 00:21:04.700
we encode to a lot of formats,
including all of the formats

00:21:04.700 --> 00:21:06.110
that Core Audio supports.

00:21:06.160 --> 00:21:10.800
There is a caveat that I want to bring
up here because it comes up a lot.

00:21:10.800 --> 00:21:14.880
If you're interested in AAC and AMR,
which is not listed here,

00:21:14.880 --> 00:21:17.360
and you want to encode
to them on Windows,

00:21:17.360 --> 00:21:19.360
you do need to pay a licensing fee.

00:21:19.360 --> 00:21:21.960
We cover that blanket
license for you on the Mac.

00:21:22.040 --> 00:21:26.340
If you're a developer on the Mac,
you can encode to AAC for free.

00:21:26.600 --> 00:21:29.360
If you are doing so on Windows,
you need to acquire the

00:21:29.360 --> 00:21:31.020
license and pay some money.

00:21:32.520 --> 00:21:35.630
We also give you the standard
audio compression component,

00:21:35.630 --> 00:21:39.000
or SC audio,
to do compression cross-platform.

00:21:39.000 --> 00:21:40.340
I'll talk about that in a minute.

00:21:40.340 --> 00:21:42.720
This is a brand new
feature in QuickTime 7.1,

00:21:42.720 --> 00:21:44.470
so you might not be familiar with it.

00:21:44.780 --> 00:21:48.580
We give you the file formats
that Core Audio does,

00:21:48.580 --> 00:21:52.420
plus .mov, mp4, etc.

00:21:52.500 --> 00:21:56.680
So really what QuickTime Audio,
using the QuickTime level of APIs,

00:21:56.780 --> 00:21:59.540
gives you is a uniform
code path for opening,

00:21:59.540 --> 00:22:03.500
playback, import/export, and code.

00:22:04.180 --> 00:22:06.140
Now, I've said a lot of nice
things about QuickTime.

00:22:06.140 --> 00:22:10.100
I hopefully didn't detract from
Core Audio because there are

00:22:10.100 --> 00:22:13.790
definitely times when Core Audio is
the more appropriate API to use.

00:22:13.800 --> 00:22:15.490
So when would you want to use Core Audio?

00:22:15.490 --> 00:22:19.010
If you're an audio-only app,
an app that does a lot of

00:22:19.010 --> 00:22:23.190
signal processing with audio,
or you want to tap in directly

00:22:23.190 --> 00:22:26.000
to audio unit features,
then QuickTime might

00:22:26.000 --> 00:22:26.980
just get in your way.

00:22:27.220 --> 00:22:30.940
It might be a level of ease
that you don't want to pay for.

00:22:30.940 --> 00:22:36.730
You'd rather go down to the lower level
and get the finer level of control.

00:22:37.600 --> 00:22:41.140
So let's talk about, very briefly,
QuickTime Audio API best practices.

00:22:41.140 --> 00:22:45.120
Vince already talked about, in general,
what the best practices are to use

00:22:45.120 --> 00:22:46.700
and the strategies for going forward.

00:22:46.700 --> 00:22:48.100
And he showed you this slide.

00:22:48.100 --> 00:22:53.860
I just wanted to bring this back
before you because this picture is

00:22:53.940 --> 00:22:59.910
a perception of QuickTime that will
never go away unless we perform our due

00:22:59.920 --> 00:23:02.540
diligence and educate when necessary.

00:23:02.540 --> 00:23:10.180
And also, make the API level as
modern as the internals are.

00:23:10.500 --> 00:23:16.580
So we need to do our job and
deprecate when the system changes

00:23:16.580 --> 00:23:20.530
enough that it no longer makes sense
to have that set of APIs around.

00:23:20.540 --> 00:23:22.420
One of these is Sound Manager.

00:23:22.610 --> 00:23:24.360
So Sound Manager,
if you came yesterday to

00:23:24.360 --> 00:23:26.970
the core audio sessions,
you know that it is officially

00:23:27.090 --> 00:23:28.540
deprecated in Leopard.

00:23:28.540 --> 00:23:30.540
And let's talk about
what that means to you.

00:23:30.540 --> 00:23:33.480
So Sound Manager is...
Deprecated and leopard,

00:23:33.480 --> 00:23:36.630
let's have a moment of
silence for sound manager.

00:23:39.450 --> 00:23:42.700
If you are a codec writer,
this means you should not be writing

00:23:42.700 --> 00:23:46.180
sound compressors or decompressors.

00:23:46.420 --> 00:23:47.300
Here's the biggie.

00:23:47.340 --> 00:23:50.300
Most people holding on to
Sound Manager are doing so because

00:23:50.300 --> 00:23:53.230
they just want that sound converter.

00:23:53.310 --> 00:23:55.240
Well, that's deprecated too.

00:23:55.310 --> 00:23:59.230
If you're using a sound mixer,
that's deprecated.

00:23:59.330 --> 00:24:02.740
In the area of capture,
sound input components.

00:24:02.890 --> 00:24:06.200
In the area of playback, SDEVs.

00:24:07.030 --> 00:24:10.430
And this one's a little bit more vacuous.

00:24:10.430 --> 00:24:14.610
The use of legacy QuickTime audio
interfaces is discouraged.

00:24:14.610 --> 00:24:16.680
Let me tell you what that means.

00:24:16.680 --> 00:24:20.960
SG New Channel, for instance,
if you're using Sequence Grabber,

00:24:21.010 --> 00:24:25.280
is an API that you use to create
a new SG channel to capture from.

00:24:26.080 --> 00:24:28.350
This API,
you can pass into it the kind of

00:24:28.350 --> 00:24:30.330
channel that you want to make.

00:24:30.420 --> 00:24:35.200
So a video channel,
an SG audio media type channel,

00:24:35.200 --> 00:24:37.140
or this sound media type one.

00:24:37.140 --> 00:24:41.430
That one, the sound media type one,
happens to use a sound

00:24:41.430 --> 00:24:45.280
input component underneath,
which is deprecated.

00:24:45.300 --> 00:24:49.560
We can't deprecate our API because
it serves multiple purposes.

00:24:49.560 --> 00:24:55.790
But know that that particular code path,
creating an SG channel of sound media,

00:24:55.820 --> 00:24:59.020
should be considered deprecated
because we're no longer

00:24:59.020 --> 00:25:00.710
maintaining that code path.

00:25:02.460 --> 00:25:04.990
I've told you a lot about
what you should not use,

00:25:04.990 --> 00:25:07.210
but I'm not going to tell you
what you should use instead.

00:25:07.220 --> 00:25:10.400
You'll have to come to session
223 later today at 5 p.m.

00:25:10.400 --> 00:25:12.080
to find out what to use instead.

00:25:12.080 --> 00:25:14.580
I hope you're really
scared so that you'll come.

00:25:16.560 --> 00:25:19.040
Now let's talk about
SC Audio Compression APIs.

00:25:19.240 --> 00:25:24.480
New in QuickTime 7.1,
7.1 was released about

00:25:24.480 --> 00:25:25.840
four or five months ago.

00:25:25.840 --> 00:25:29.340
The SDK just became available this week.

00:25:29.340 --> 00:25:33.550
The 7.1 SDK for Windows is now live.

00:25:33.600 --> 00:25:36.480
The Mac OS X one is live,
and it's also in the

00:25:36.480 --> 00:25:38.960
Xcode 2.4 installation.

00:25:38.960 --> 00:25:42.480
So you have these new SDKs available.

00:25:43.780 --> 00:25:46.000
SC Audio Compression is
available on Mac and Windows.

00:25:46.030 --> 00:25:47.620
Look in QuickTimeComponents.h.

00:25:47.620 --> 00:25:53.220
And there's a sample code that you can
Google for called SC Audio Compress.

00:25:54.820 --> 00:25:56.000
What is it?

00:25:56.010 --> 00:25:59.610
It's the modern replacement for sound
converter that's cross-platform.

00:25:59.910 --> 00:26:03.970
So when you say to us on
the QuickTime API list,

00:26:03.980 --> 00:26:06.870
I need to know how to do such
and such with sound converter.

00:26:07.010 --> 00:26:09.800
And we reply, oh,
don't use sound converter.

00:26:09.800 --> 00:26:11.480
Use audio converter, you fool.

00:26:11.640 --> 00:26:14.480
And you say, well, I need it on Windows.

00:26:14.650 --> 00:26:16.910
And we have no answer for that.

00:26:17.080 --> 00:26:18.780
Well, finally we do have an answer.

00:26:18.780 --> 00:26:21.360
Use SC Audio compression instead.

00:26:21.360 --> 00:26:24.100
It can do all that
audio converter can do,

00:26:24.460 --> 00:26:25.640
plus mixing.

00:26:25.770 --> 00:26:29.250
So if you want to go from
a 5.1 to a stereo mix,

00:26:29.520 --> 00:26:31.200
and additionally perform an encode.

00:26:31.200 --> 00:26:35.150
You can do all of that
with a single API call.

00:26:36.330 --> 00:26:38.200
But enough talk, let's do a demo.

00:26:38.200 --> 00:26:40.130
Can we switch to demo machine please?

00:26:40.200 --> 00:26:47.070
I guess we went to sleep again.

00:26:55.450 --> 00:26:58.710
And now we're back.

00:26:58.840 --> 00:27:07.810
OK, so I'm going to bring up a version
of QuickTime Player in Leopard.

00:27:08.940 --> 00:27:13.300
SC Audio Compression is
a QuickTime 7.1 feature,

00:27:13.300 --> 00:27:15.240
not a Leopard-only feature.

00:27:15.240 --> 00:27:16.400
It is shipping now.

00:27:16.400 --> 00:27:17.280
You can use it now.

00:27:17.280 --> 00:27:21.590
But what I'm about to show
you is a Leopard feature.

00:27:23.270 --> 00:27:27.090
So I'm going to close Tim's app.

00:27:27.090 --> 00:27:31.320
And up here I have an audio-only file.

00:27:31.780 --> 00:27:35.500
This is of a concert that
I gave two weeks ago.

00:27:35.500 --> 00:27:38.020
Could we pump up the volume?

00:27:46.570 --> 00:27:50.390
So I'm going to close Tim's app.

00:27:50.390 --> 00:27:54.670
And up here I have an audio-only file.

00:27:55.160 --> 00:27:58.810
This is of a concert that
I gave two weeks ago.

00:27:58.810 --> 00:27:59.340
Could we pump up the volume?

00:27:59.340 --> 00:28:02.760
So I'm going to go into
my sound settings dialog.

00:28:02.760 --> 00:28:04.960
Any of you that are familiar
with QuickTime Pro probably

00:28:04.960 --> 00:28:06.240
have used this before.

00:28:06.260 --> 00:28:08.330
That's the sound settings dialog.

00:28:08.340 --> 00:28:14.090
It lets you configure an output
and export to a new file format or

00:28:14.140 --> 00:28:16.620
just encode to a different format.

00:28:16.830 --> 00:28:19.700
And to those of you who
have used this a lot,

00:28:19.760 --> 00:28:23.680
you'll notice that these two
buttons down here are new.

00:28:23.990 --> 00:28:30.010
We found that in feedback given to us,
these advanced feature dialogues are

00:28:30.010 --> 00:28:32.990
great for those of you who know what
you're doing with audio or video,

00:28:33.010 --> 00:28:36.670
but for those of you who
just want it to sound right,

00:28:36.680 --> 00:28:37.900
this might be overwhelming.

00:28:37.900 --> 00:28:42.300
Because once you get into this dialogue,
all of a sudden you've got eight or nine

00:28:42.300 --> 00:28:47.160
different choices for codecs and lots of
sample rates and lots of channel choices.

00:28:48.060 --> 00:28:50.590
And so you'll wind up iterating
over this several times,

00:28:50.600 --> 00:28:55.550
perhaps exporting your 20-minute content
and then listening to it and finding

00:28:55.550 --> 00:28:57.050
it's not exactly what you wanted.

00:28:57.100 --> 00:28:58.770
It's not the right quality setting.

00:28:58.780 --> 00:29:02.700
So using the SC Audio Compression APIs,
we already know the format

00:29:02.700 --> 00:29:04.200
that you want to go to.

00:29:04.200 --> 00:29:08.220
We just take a 10-second segment
of your source and loop it over

00:29:08.220 --> 00:29:12.240
and over and apply the settings
that you currently have selected

00:29:12.240 --> 00:29:17.930
so you can hear it as you're making
live updates to the settings.

00:29:18.060 --> 00:29:19.940
And hear how that will affect the sound.

00:29:19.940 --> 00:29:21.300
So I'm going to go ahead and play this.

00:29:21.300 --> 00:29:37.370
So what if I take the
sample rate down to eight?

00:29:44.010 --> 00:29:50.690
Maybe I'll choose AAC and
listen to how it sounds if

00:29:50.690 --> 00:29:51.780
I select a different bitrate.

00:29:51.800 --> 00:29:57.440
And at any time I can compare that
to the source by hitting play source.

00:30:06.490 --> 00:30:07.050
So there you go.

00:30:07.250 --> 00:30:15.090
That's a nice... Back to slides, please.

00:30:16.080 --> 00:30:21.240
Hopefully this will bring the
frustration level down a level.

00:30:22.030 --> 00:30:22.690
How did we do that?

00:30:22.740 --> 00:30:28.150
Well, like I just showed you,
there's that dialogue up at the top.

00:30:28.250 --> 00:30:29.100
That's what you see.

00:30:29.100 --> 00:30:32.980
Underneath, there's that new call
SC Audio Fill Buffer.

00:30:32.980 --> 00:30:35.020
It knows about the source movie.

00:30:35.020 --> 00:30:39.060
It performs an extraction from
that source movie and then creates

00:30:39.060 --> 00:30:43.340
a new destination movie using
Add Media Sample 2 and plays it.

00:30:43.420 --> 00:30:46.570
For a better explanation
of what we're doing,

00:30:46.580 --> 00:30:48.690
including what your
code should look like,

00:30:49.760 --> 00:30:52.220
you'll have to come to audio session 223.

00:30:54.340 --> 00:30:57.360
And another great feature that
I'd like to spend a few minutes on

00:30:57.360 --> 00:31:00.200
is the Audio Context Insert API.

00:31:00.320 --> 00:31:03.030
Movie audio extraction got us...

00:31:03.490 --> 00:31:05.920
75% of the way there
to what people wanted.

00:31:06.070 --> 00:31:08.860
This should hopefully
cover the rest of you.

00:31:09.090 --> 00:31:13.960
This gives your application access
to our audio rendering path.

00:31:14.410 --> 00:31:20.750
That is, you can insert your effects or
visualizations or whatever into the audio

00:31:20.760 --> 00:31:23.380
signal path while QuickTime is playing.

00:31:23.380 --> 00:31:25.950
You don't have to take care of the
synchronization you had to if you

00:31:25.950 --> 00:31:27.560
were using movie audio extraction.

00:31:27.560 --> 00:31:31.870
It does real-time rendering,
so you get called back when you

00:31:32.140 --> 00:31:34.600
register an audio context insert.

00:31:34.600 --> 00:31:38.260
You get called back on the
real-time IOPROC thread.

00:31:38.930 --> 00:31:41.450
You can also use it in movie
audio extraction if you want

00:31:41.450 --> 00:31:45.910
to insert some effects while
extracting PCM audio out of a movie.

00:31:45.920 --> 00:31:49.520
It's designed for
compatibility with audio units.

00:31:49.520 --> 00:31:55.050
That said, it is a callback interface,
so you don't have to be an audio

00:31:55.100 --> 00:31:57.520
unit in order to plug yourself in.

00:31:57.520 --> 00:32:00.340
You just have to register a
callback to do the processing

00:32:00.340 --> 00:32:01.670
or your own custom code.

00:32:01.680 --> 00:32:04.230
If you're on Windows,
you can use direct show filters

00:32:04.230 --> 00:32:06.760
or your own custom code,
whatever you would like.

00:32:08.810 --> 00:32:12.930
Let's take a look at what the audio
context is and how the audio data flow

00:32:12.930 --> 00:32:15.900
works in QuickTime's audio architecture.

00:32:16.040 --> 00:32:19.100
We have an abstraction
called a device context.

00:32:19.240 --> 00:32:24.140
That is a wrapper for the audio
device that you're playing to.

00:32:24.250 --> 00:32:29.250
You can get one of these device contexts
by having the UID of an audio device

00:32:29.510 --> 00:32:32.440
and then creating a context for it.

00:32:32.690 --> 00:32:37.790
There's also a movie audio context,
and that is the context in which all of

00:32:37.790 --> 00:32:41.360
the mixing takes place for the movie.

00:32:41.760 --> 00:32:44.120
When you perform a
movie audio extraction,

00:32:44.120 --> 00:32:47.730
there's also an extraction
context to which you are playing

00:32:47.870 --> 00:32:50.160
when you extract PCM audio.

00:32:50.160 --> 00:32:53.290
You don't see this extraction context,
it's just made for you underneath

00:32:53.290 --> 00:32:54.500
the covers automatically.

00:32:54.500 --> 00:32:58.020
Inside the movie audio context,
you'll see that if there

00:32:58.020 --> 00:33:01.440
are multiple tracks,
they are being mixed down before

00:33:01.440 --> 00:33:03.700
they're sent to the device context.

00:33:04.450 --> 00:33:07.850
If you have a more complicated movie,
for instance,

00:33:07.850 --> 00:33:11.510
here we've got one with three
tracks with varying channel

00:33:11.520 --> 00:33:16.360
valences and varying sample rates,
we mix them down to a movie summary mix,

00:33:16.360 --> 00:33:20.960
that is, we pick the highest sample rate
of all of the sample rates,

00:33:20.960 --> 00:33:25.620
and all of the like channels
mix to a common channel.

00:33:25.620 --> 00:33:29.400
So, for instance, there are two rights,
there's one in track two

00:33:29.500 --> 00:33:30.880
and one in track one.

00:33:30.880 --> 00:33:34.270
Those mix into a single right
in the movie summary mix.

00:33:34.300 --> 00:33:35.550
Thanks.

00:33:36.160 --> 00:33:39.340
And if you register an
audio context insert,

00:33:39.350 --> 00:33:42.920
you plug in right there after
the movie audio summary mix.

00:33:42.920 --> 00:33:46.970
Now, you can ask for a different
channel layout than we've

00:33:46.970 --> 00:33:48.650
provided in the movie summary mix.

00:33:48.730 --> 00:33:51.360
So, for instance,
if you have some processing

00:33:51.360 --> 00:33:54.880
that must be done in stereo,
like the audio unit that you're going

00:33:54.880 --> 00:33:58.670
to use only accepts stereo input,
you can tell QuickTime,

00:33:58.750 --> 00:34:02.080
I want you to give me stereo,
and what I'm going to give

00:34:02.080 --> 00:34:04.450
back to you is stereo or mono,
what have you.

00:34:05.000 --> 00:34:08.840
You'll see that that mix is performed,
the samples are provided to your

00:34:08.970 --> 00:34:12.910
callback to the client application,
you perform your signal processing,

00:34:12.910 --> 00:34:14.650
then you hand the samples back.

00:34:14.700 --> 00:34:17.820
The only caveat there is that you
must not change the sample rate,

00:34:17.870 --> 00:34:19.320
because that would just be mean.

00:34:20.900 --> 00:34:23.200
Let's go back to the demo machine.

00:34:23.390 --> 00:34:28.860
I'm going to show you a sample app
that was written by an engineer on

00:34:28.860 --> 00:34:34.040
the QuickTime audio team named Siley,
who's great.

00:34:35.150 --> 00:34:39.240
This is a Qt Audio Context Insert app.

00:34:39.240 --> 00:34:42.040
Not surprisingly,
it plays QuickTime movies.

00:34:42.150 --> 00:34:46.610
Like, for instance, "For Brad's."

00:34:51.790 --> 00:34:52.800
So what can I do with this?

00:34:52.800 --> 00:34:55.810
Well, I can bring up the-- oh, whoops.

00:34:56.050 --> 00:34:58.800
That brought it up in QuickTime Player,
didn't it?

00:34:59.000 --> 00:35:01.140
Let's try that again,
bringing it up in the

00:35:01.300 --> 00:35:03.100
Audio Context Insert app.

00:35:05.550 --> 00:35:10.500
And we have an audio
insert panel over here.

00:35:10.600 --> 00:35:14.900
So here we can visualize what
the context insert looks like.

00:35:15.050 --> 00:35:17.020
First we have to set a channel layout.

00:35:17.050 --> 00:35:19.100
I'll go ahead and select stereo.

00:35:19.200 --> 00:35:22.220
So I'm going to provide
the insert with stereo.

00:35:22.220 --> 00:35:24.260
I'm going to get stereo back out.

00:35:24.320 --> 00:35:28.670
And then I can choose a
Core Audio effects filter to apply to

00:35:28.680 --> 00:35:31.070
the audio as we're listening to it.

00:35:31.380 --> 00:35:33.780
So I'll go ahead and play around with it.

00:35:49.600 --> 00:35:51.600
Make myself sound like
I'm in a concert hall.

00:35:51.600 --> 00:35:56.120
Or bypass it.

00:35:58.800 --> 00:36:10.800
[Transcript missing]

00:36:12.200 --> 00:36:18.020
The QuickTime application
provides the ability to keep your

00:36:18.020 --> 00:36:24.610
application on the cutting edge
by keeping it on the cutting edge.

00:36:25.700 --> 00:36:36.890
www.vincetot.com/quicktime-application/

00:36:40.900 --> 00:36:46.330
www.vincetot.com/quicktime-application

00:36:46.900 --> 00:37:38.600
[Transcript missing]

00:37:39.100 --> 00:38:07.100
[Transcript missing]

00:38:07.800 --> 00:39:54.800
[Transcript missing]

00:39:55.500 --> 00:40:32.400
[Transcript missing]

00:40:32.500 --> 00:40:58.500
[Transcript missing]

00:41:00.200 --> 00:42:47.700
[Transcript missing]

00:42:49.400 --> 00:42:54.510
and other experts at the
University of Michigan.

00:42:55.300 --> 00:43:16.900
[Transcript missing]

00:43:17.400 --> 00:45:15.600
[Transcript missing]

00:45:19.600 --> 00:45:26.700
www.vincetot.com/quicktime-application

00:45:31.600 --> 00:45:35.320
The QuickTime application provides a wide
range of features that enable you to keep

00:45:35.320 --> 00:45:39.150
your application on the cutting edge by
taking full advantage of these features.

00:45:39.150 --> 00:45:39.150
Learn how to keep your application
on the cutting edge by taking

00:45:39.150 --> 00:45:39.150
full advantage of these features.

00:45:39.500 --> 00:45:52.300
[Transcript missing]

00:45:53.200 --> 00:46:02.090
www.vincetot.com/quicktime-application

00:46:03.710 --> 00:46:10.030
The QuickTime application is a
great way to keep your application

00:46:10.030 --> 00:46:16.490
on the cutting edge by taking
full advantage of these features.

00:46:16.490 --> 00:46:16.490
Learn how to keep your application
on the cutting edge by taking

00:46:16.490 --> 00:46:16.490
full advantage of these features.

00:46:25.900 --> 00:46:37.500
[Transcript missing]

00:46:38.100 --> 00:46:44.270
The QuickTime application
is a great way to keep your

00:46:44.270 --> 00:46:48.590
application on the cutting edge.

00:46:49.700 --> 00:47:03.500
[Transcript missing]

00:47:03.600 --> 00:47:10.700
www.vincetot.com/quicktime-application

00:47:11.000 --> 00:47:23.700
[Transcript missing]

00:47:25.700 --> 00:47:48.200
[Transcript missing]

00:47:49.300 --> 00:47:54.500
www.vincetot.com/quicktime-application

00:47:57.100 --> 00:48:03.700
The QuickTime application
is a great way to keep your

00:48:03.700 --> 00:48:08.230
application on the cutting edge.

00:48:08.230 --> 00:48:08.230
Learn how to keep your application
on the cutting edge by taking

00:48:08.230 --> 00:48:08.230
full advantage of these features.

00:48:09.300 --> 00:48:15.550
www.vincetot.com/quicktime-academy/

00:48:17.120 --> 00:48:22.150
www.vincetot.com/quicktime-application

00:48:22.500 --> 00:48:30.170
www.vincente.com/quicktime-application-
application

00:48:30.200 --> 00:48:40.900
[Transcript missing]

00:48:41.200 --> 00:50:12.300
[Transcript missing]

00:50:12.500 --> 00:50:17.680
www.vincetot.com/quicktime-application/

00:50:18.700 --> 00:50:54.900
[Transcript missing]

00:50:57.020 --> 00:51:04.410
www.vincetot.com/quicktime-application

00:51:04.700 --> 00:51:09.880
The QuickTime application provides
a complete and complete set of

00:51:09.880 --> 00:51:15.890
features that enable you to easily
and effectively use your application.

00:51:17.300 --> 00:51:39.000
[Transcript missing]

00:51:40.400 --> 00:51:47.400
[Transcript missing]

00:51:48.000 --> 00:51:55.290
www.vincetot.com/quicktime-application

00:51:55.600 --> 00:52:36.500
[Transcript missing]

00:52:37.120 --> 00:52:45.320
The QuickTime application provides
a complete and easy-to-use

00:52:45.320 --> 00:52:49.190
interface for your Mac OS X.

00:52:57.900 --> 00:53:15.500
[Transcript missing]

00:53:15.900 --> 00:53:48.200
[Transcript missing]

00:53:48.300 --> 00:55:07.000
[Transcript missing]

00:55:08.100 --> 00:55:11.720
The QuickTime application is a
great way to keep your application

00:55:11.720 --> 00:55:15.350
on the cutting edge by taking
full advantage of these features.

00:55:15.370 --> 00:55:18.830
Learn how to keep your application
on the cutting edge by taking

00:55:18.860 --> 00:55:21.150
full advantage of these features.

00:55:21.200 --> 00:55:51.700
[Transcript missing]

00:55:53.000 --> 00:56:00.930
www.vincetot.com/quicktime-application/

00:56:03.300 --> 00:56:29.600
[Transcript missing]

00:56:30.000 --> 00:56:45.600
[Transcript missing]

00:56:46.320 --> 00:56:52.370
www.vincetot.com/quicktime-application

00:56:54.100 --> 00:57:11.600
[Transcript missing]

00:57:11.800 --> 00:57:19.300
[Transcript missing]

00:57:19.400 --> 00:57:23.020
The QuickTime application is a
great way to keep your application

00:57:23.020 --> 00:57:26.650
on the cutting edge by taking
full advantage of these features.

00:57:26.650 --> 00:57:30.140
Learn how to keep your application
on the cutting edge by taking

00:57:30.140 --> 00:57:32.390
full advantage of these features.

00:57:33.210 --> 00:57:39.150
www.vincetot.com/quicktime-academy/

00:57:48.400 --> 00:58:56.600
[Transcript missing]

00:58:57.400 --> 00:59:04.820
www.vincetot.com/quicktime-application/

00:59:05.630 --> 00:59:12.440
The QuickTime application provides
a complete and easy-to-use

00:59:12.450 --> 00:59:15.620
interface for your Mac OS X.

00:59:15.620 --> 00:59:22.470
The QuickTime application provides
a complete and easy-to-use

00:59:22.470 --> 00:59:25.790
interface for your Mac OS X.

00:59:26.900 --> 00:59:36.240
The QuickTime application is a free,
free trial of the QuickTime application.

00:59:36.240 --> 00:59:36.240
The QuickTime application is a free
trial of the QuickTime application.

00:59:36.920 --> 00:59:42.700
The QuickTime application
provides a wide range of features,

00:59:42.730 --> 00:59:47.790
including the ability to
control the volume of audio,

00:59:47.790 --> 00:59:50.650
sound, and sound effects.

00:59:50.650 --> 00:59:50.650
The QuickTime application
provides a wide range of features,

00:59:50.650 --> 00:59:50.650
including the ability to
control the volume of audio,

00:59:50.650 --> 00:59:50.650
sound, and sound effects.

00:59:52.600 --> 01:00:02.960
www.vincetot.com/quicktime-application/

01:00:03.100 --> 01:00:08.660
www.vincetot.com/quicktime-application/

01:00:09.800 --> 01:00:48.200
[Transcript missing]

01:00:48.600 --> 01:01:07.100
[Transcript missing]

01:01:12.100 --> 01:01:21.820
www.vincetot.com/quicktime-application/

01:01:22.200 --> 01:01:28.840
The QuickTime application provides
the ability to integrate the

01:01:28.840 --> 01:01:32.550
Internet into your application.

01:01:32.550 --> 01:01:32.560
The QuickTime application provides
the ability to integrate the

01:01:32.560 --> 01:01:32.560
Internet into your application.

01:01:37.100 --> 01:01:44.070
www.vincetot.com/quicktime-application/

01:01:45.000 --> 01:01:53.120
www.vincetot.com/quicktime-application

01:01:53.400 --> 01:02:48.100
[Transcript missing]

01:02:48.200 --> 01:03:18.700
[Transcript missing]

01:03:20.600 --> 01:03:52.300
[Transcript missing]