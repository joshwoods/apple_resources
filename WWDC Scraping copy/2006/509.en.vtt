WEBVTT

00:00:10.560 --> 00:00:14.180
We're going to talk about what's old
in directory services today and what's

00:00:14.180 --> 00:00:17.220
new in directory services because
I've been told that some percentage

00:00:17.220 --> 00:00:21.020
of you have never been to a WWDC,
so you don't know about the brilliance

00:00:21.110 --> 00:00:23.000
and mastery that is directory services.

00:00:23.030 --> 00:00:26.210
So we'll go over some history and
we'll bring you up to speed on

00:00:26.210 --> 00:00:27.500
what our plans are for Leopard.

00:00:27.500 --> 00:00:30.500
So the agenda is really simple.

00:00:30.500 --> 00:00:33.390
What is Open Directory or
directory services as we

00:00:33.510 --> 00:00:35.350
interchangeably refer to it as?

00:00:35.510 --> 00:00:37.450
How is it used by the system?

00:00:37.500 --> 00:00:42.350
We'll be talking about what you can do
with Tiger today because spring 2007 is,

00:00:42.350 --> 00:00:45.500
I guess, the announced date from
yesterday's keynote.

00:00:45.500 --> 00:00:49.700
So that means that we've got at least
six months of the existing Tiger product

00:00:49.700 --> 00:00:52.340
for you to use and there's a lot of
features in directory services that I've

00:00:52.340 --> 00:00:53.500
been surprised people don't know about.

00:00:53.500 --> 00:00:55.500
So we'll bring you up to speed on that.

00:00:55.500 --> 00:00:57.460
And then we'll be talking about
why you're all really here

00:00:57.460 --> 00:00:59.500
and why you paid your money,
but we'll be talking about

00:00:59.500 --> 00:01:01.500
what we're doing with
directory services for Leopard.

00:01:01.500 --> 00:01:05.010
And then hopefully if there's
some time left at the end,

00:01:05.010 --> 00:01:07.490
we will have a short Q&A or a long Q&A.

00:01:07.500 --> 00:01:11.740
depending on how quickly
I talk through my slides.

00:01:12.040 --> 00:01:13.600
So what is Open Directory?

00:01:13.600 --> 00:01:16.900
Open Directory,
I get this question a lot.

00:01:16.900 --> 00:01:19.060
Open Directory is a technology name,
kind of like Quick Times and

00:01:19.060 --> 00:01:19.930
Umbrella technology.

00:01:19.930 --> 00:01:20.900
It's no one thing.

00:01:20.900 --> 00:01:21.910
It's a lot of different things.

00:01:21.930 --> 00:01:24.130
Open Directory is the way
we refer to both our client

00:01:24.130 --> 00:01:25.640
and our server technologies.

00:01:25.640 --> 00:01:28.880
And what we try to do with
Open Directory is integrate and promote

00:01:28.880 --> 00:01:32.790
industry standard directory technologies
or authentication technologies

00:01:32.790 --> 00:01:34.640
like our adoption of Kerberoos.

00:01:35.690 --> 00:01:38.600
Open Directory is built into Mac OS X,
the Mac OS X server.

00:01:38.600 --> 00:01:41.700
And it's open source as part of Darwin.

00:01:41.700 --> 00:01:43.670
So there's no magic in Open Directory.

00:01:43.720 --> 00:01:47.420
You can go download the LDAP plug-in,
the BSD local plug-in,

00:01:47.420 --> 00:01:48.600
the directory services daemon.

00:01:48.600 --> 00:01:50.390
It's all posted on the Darwin website.

00:01:50.390 --> 00:01:51.340
It always has been.

00:01:51.340 --> 00:01:54.160
We actually have some customers
that have modified the LDAP v3

00:01:54.200 --> 00:01:55.790
plug-in for some minor tweaks.

00:01:55.800 --> 00:02:00.520
It's always helpful to me to
talk a little bit about history.

00:02:00.520 --> 00:02:04.240
So in Jaguar, the things in white
were not new to Jaguar.

00:02:04.240 --> 00:02:05.600
The things in yellow were new.

00:02:05.620 --> 00:02:08.600
So in Jaguar,
we introduced the LDAP v3 plug-in.

00:02:08.600 --> 00:02:10.540
We introduced the NIS and
the flat file plug-in.

00:02:10.540 --> 00:02:13.980
We introduced AppleTalk, SLP, Bonjour,
and SMB.

00:02:13.980 --> 00:02:18.480
And we had NetInfo, LookUpD,
and LDAP v2 from Puma.

00:02:18.480 --> 00:02:20.930
But that's so long ago now
that I didn't want to fill the

00:02:20.930 --> 00:02:22.480
slide up with Puma or Cheetah.

00:02:22.480 --> 00:02:25.540
For Panther, we continued adding
things to Open Directory,

00:02:25.620 --> 00:02:28.660
the major addition being the
first release that we supported

00:02:28.660 --> 00:02:30.360
the Active Directory plug-in.

00:02:30.360 --> 00:02:34.000
We followed on with Tiger with
trusted LDAP v3 binding,

00:02:34.000 --> 00:02:35.600
which allows you to trust
that the directory is open.

00:02:35.600 --> 00:02:38.280
So you can see that the directory
server you're actually talking to is

00:02:38.280 --> 00:02:39.720
the one you configured to talk to.

00:02:39.720 --> 00:02:42.100
And we added MemberD,
which is a key new system

00:02:42.100 --> 00:02:45.140
daemon in Tiger that does nested
group resolution and was in

00:02:45.140 --> 00:02:48.640
support of the file system ACLs,
which were introduced in Tiger.

00:02:48.840 --> 00:02:51.980
And then what we're here to
talk about today is Leopard.

00:02:51.980 --> 00:02:56.320
And I'm not going to give away the
entire presentation on the third slide,

00:02:56.320 --> 00:03:00.060
so I left that blank for this
thing to keep you guys in the room.

00:03:00.180 --> 00:03:05.260
So we have the requisite layer diagram.

00:03:05.280 --> 00:03:07.280
So the Active Directory services
is this middle layer.

00:03:07.510 --> 00:03:09.380
Below Directory services
are a series of plug-ins.

00:03:09.420 --> 00:03:11.510
You can write these plug-ins yourself.

00:03:11.520 --> 00:03:13.640
So far, not a lot of people have.

00:03:13.680 --> 00:03:15.760
They are difficult to write because
they're part of the trusted system.

00:03:15.760 --> 00:03:17.880
But we have plug-ins for
accessing a local database.

00:03:17.880 --> 00:03:20.000
We have a plug-in for accessing LDAP.

00:03:20.000 --> 00:03:22.120
We have a plug-in for
accessing the /etc files.

00:03:22.120 --> 00:03:25.310
And we have Active Directory and NIST,
all as plug-ins underneath

00:03:25.310 --> 00:03:26.240
Directory services.

00:03:26.240 --> 00:03:28.510
And the rest of the operating
system sits on top of

00:03:28.540 --> 00:03:30.380
Directory services to some degree.

00:03:30.380 --> 00:03:32.500
Login window would be in the red box.

00:03:32.500 --> 00:03:34.620
Workgroup manager would
be in the red box.

00:03:34.940 --> 00:03:37.940
Server manager, for those of you familiar
with Server Admin,

00:03:38.050 --> 00:03:38.930
would be in the red box.

00:03:38.940 --> 00:03:41.060
Anything that looks up a user or a group.

00:03:41.070 --> 00:03:44.300
In some cases, in a twist,
the kernel actually sits on top

00:03:44.300 --> 00:03:48.180
of Directory services because when
it needs to do a group resolution

00:03:48.180 --> 00:03:51.160
to check a file access privilege,
and if it doesn't have the

00:03:51.160 --> 00:03:52.860
group in memory already,
it has to call

00:03:52.870 --> 00:03:54.320
Directory services to fetch it.

00:03:54.320 --> 00:03:59.190
So a lot of the operating system
sits on top of Directory services.

00:03:59.720 --> 00:04:02.790
So directory service is the green
layers in API for read/write

00:04:02.790 --> 00:04:04.360
access to the configuration.

00:04:04.360 --> 00:04:08.780
And this was one of the major
features is it is read/write.

00:04:08.780 --> 00:04:10.630
The most common,
but by no means the complete

00:04:10.640 --> 00:04:13.740
list of things that you access
with directory access is users,

00:04:13.740 --> 00:04:16.060
groups, and mount records.

00:04:16.060 --> 00:04:18.430
We also do the password
verification for the system.

00:04:18.430 --> 00:04:22.650
So anytime you guys type a password in
the login window or log on over SSH,

00:04:22.670 --> 00:04:27.540
those processes are calling directory
services to verify the password.

00:04:27.540 --> 00:04:30.170
Lib system APIs,
for those of you who are familiar with

00:04:30.170 --> 00:04:33.810
Unix programming or POSIX programming,
get PWNAM, get GRNAM,

00:04:33.810 --> 00:04:37.550
all of those calls are handled by a
process in the system called LookUpD,

00:04:37.550 --> 00:04:39.740
which is tied into directory services.

00:04:39.740 --> 00:04:42.400
And as of Tiger, as I said,
we introduced MemberD,

00:04:42.400 --> 00:04:46.080
which is the group resolution engine
for the entire operating system.

00:04:46.080 --> 00:04:50.100
The major support MemberD brought to
the equation was nested group support

00:04:50.100 --> 00:04:54.490
and support for more than 16 groups,
which was no small trick

00:04:54.570 --> 00:04:57.540
in the Tiger timeframe.

00:04:57.540 --> 00:04:59.120
So what is directory services in 10.4?

00:04:59.120 --> 00:05:03.640
It includes an LDAPv3 read/write plugin,
Active Directory, a NetInfo plugin,

00:05:03.840 --> 00:05:09.080
NIS/Etsy, service discovery plugins,
the finder uses directory services to do

00:05:09.120 --> 00:05:12.240
all the network browsing under /network.

00:05:12.240 --> 00:05:14.940
It's a documented access
API and plugin API.

00:05:14.940 --> 00:05:17.180
The SDKs are posted on
the developer website.

00:05:17.230 --> 00:05:20.420
There's a header installed
in system library frameworks.

00:05:20.420 --> 00:05:22.800
And there's command line tools like DSCL,
which stands for

00:05:22.800 --> 00:05:26.940
Directory Service Command Line,
DSEdit Group, DSImport, Password Policy,

00:05:26.940 --> 00:05:27.500
PassWD.

00:05:27.500 --> 00:05:28.880
These are all directory services.

00:05:28.880 --> 00:05:32.840
So we're going to go
ahead and get started.

00:05:32.840 --> 00:05:35.080
So let's get started.

00:05:35.700 --> 00:07:40.400
[Transcript missing]

00:07:40.780 --> 00:07:44.820
This is the closest of a
simplified architectural diagram.

00:07:44.880 --> 00:07:48.700
You have the legacy command line
products or Unix tools running,

00:07:48.700 --> 00:07:50.660
and they typically go
through the lib system APIs.

00:07:50.660 --> 00:07:52.680
Those dispatch to LookupD.

00:07:52.680 --> 00:07:55.380
LookupD has its own cache,
and it will call out to directory

00:07:55.410 --> 00:07:58.340
services if it can't find the data,
and then directory services

00:07:58.340 --> 00:07:59.780
will consult the plugins.

00:08:00.080 --> 00:08:03.460
Some of the applications call
directory services directly.

00:08:03.460 --> 00:08:06.420
In that case, they're still consulting
the same data source,

00:08:06.420 --> 00:08:09.940
so this is how we keep the two worlds
seeing the same set of users and groups.

00:08:09.940 --> 00:08:12.770
If they go through the legacy Unix APIs,
they hit LookupD,

00:08:12.770 --> 00:08:14.580
which calls directory services.

00:08:14.630 --> 00:08:18.700
If they go through the new APIs,
they hit directory services,

00:08:18.700 --> 00:08:21.280
which consults the same databases.

00:08:24.160 --> 00:08:26.640
So that's the client side.

00:08:26.640 --> 00:08:29.460
There's also a server side
to the directory services,

00:08:29.460 --> 00:08:31.880
which is if you don't have a
directory system already deployed,

00:08:31.880 --> 00:08:32.820
how do you deploy one?

00:08:32.840 --> 00:08:35.680
Well, Mac OS X4 includes a
full directory server.

00:08:35.680 --> 00:08:37.980
It includes Kerbero,
it includes a password server.

00:08:37.980 --> 00:08:41.860
It's a full authentication
replicated scalable directory system.

00:08:41.860 --> 00:08:44.080
It's based on LDAPv3.

00:08:44.080 --> 00:08:48.230
I believe the release that we're
based on is OpenLDAP 2.2.19.

00:08:48.280 --> 00:08:52.520
This directory server supports 10.2,
10.3, and 10.4.

00:08:54.020 --> 00:08:56.640
And we have an enhanced password server.

00:08:56.640 --> 00:09:01.710
The password server is one of
the most confusing parts of this.

00:09:01.760 --> 00:09:03.980
People want to know why we
have it if we have Kerbero.

00:09:03.980 --> 00:09:07.220
Well, Kerbero doesn't support
legacy authentication

00:09:07.270 --> 00:09:09.260
methods like NTLM or NTLMv2.

00:09:09.260 --> 00:09:13.320
So the password server bridges the gap
for the things that Kerbero doesn't do,

00:09:13.320 --> 00:09:14.540
the password server does do.

00:09:14.540 --> 00:09:17.990
And we keep those two
password databases in sync.

00:09:18.000 --> 00:09:21.600
The password server itself on
the wire is based on Sassl.

00:09:21.600 --> 00:09:23.440
If you actually look at a
password server exchange,

00:09:23.440 --> 00:09:23.980
it looks like NTLMv2.

00:09:23.980 --> 00:09:25.070
It's based on any other Sassl exchange.

00:09:25.100 --> 00:09:28.000
And the password server also
does all the policy enforcement.

00:09:28.000 --> 00:09:31.220
So if you want an account to expire
on June 30th or anything like that,

00:09:31.290 --> 00:09:33.660
the password server enforces
all of those sorts of features.

00:09:33.660 --> 00:09:37.500
We have a fully integrated Kerbero
server with only minor modifications

00:09:37.620 --> 00:09:40.090
for the password server synchronization.

00:09:40.100 --> 00:09:43.570
Other than that, it's a vanilla Kerbero
server that we get from MIT.

00:09:43.600 --> 00:09:48.770
And we support Windows clients via
PDC and BDC integration using Samba.

00:09:49.180 --> 00:09:53.700
Whenever Samba gets a PDC request,
it forwards it to Open Directory.

00:09:53.800 --> 00:09:55.890
So you create a user
record in Open Directory.

00:09:55.900 --> 00:09:59.900
If you have a PDC configured,
that user record is also

00:09:59.900 --> 00:10:01.300
visible on a Windows client.

00:10:01.300 --> 00:10:04.900
So your users can log on to a
Windows machine with a name and password,

00:10:04.900 --> 00:10:07.990
or they can log on to a Mac with
the same name and password.

00:10:08.040 --> 00:10:10.950
They change it on one platform,
it automatically gets changed

00:10:10.950 --> 00:10:11.980
on the other platform.

00:10:12.000 --> 00:10:13.870
Keeps the two worlds in sync.

00:10:13.900 --> 00:10:18.500
And we support secure replication
for LDAP and authentication data.

00:10:18.520 --> 00:10:21.100
So we think we have a fairly
scalable directory server.

00:10:21.100 --> 00:10:22.610
It's very complete and feature set.

00:10:22.700 --> 00:10:25.700
And so far, it has met many,
many of our customers' needs.

00:10:25.700 --> 00:10:27.650
And I hear about new ones every day.

00:10:27.710 --> 00:10:32.590
One of the innovations we added to
Tiger was a directory-based schema.

00:10:32.700 --> 00:10:35.500
For those of you who
have administered LDAP,

00:10:35.500 --> 00:10:38.620
if you have multiple replicas,
the way to add schema to the

00:10:38.620 --> 00:10:40.980
LDAP server is to edit the config file.

00:10:41.010 --> 00:10:45.000
Well,
that works really well on one server.

00:10:45.000 --> 00:10:46.290
But what if you have 30 servers?

00:10:46.320 --> 00:10:48.410
Well,
you have to go visit each 30 server's

00:10:48.410 --> 00:10:50.290
config files and update them manually.

00:10:50.790 --> 00:10:53.300
Wouldn't it be cool if you could
just put the schema in the directory

00:10:53.400 --> 00:10:56.100
and let the replication replicate
the schema out to the replicas?

00:10:56.100 --> 00:10:57.400
Well, that's what we did in Tiger.

00:10:57.400 --> 00:11:01.770
And that changed open LDAP is
open source and has been

00:11:01.770 --> 00:11:03.300
posted on the Darwin website.

00:11:03.300 --> 00:11:08.850
And we support up to 200,000
records in the directory system.

00:11:08.910 --> 00:11:11.500
I know some of you have
more than 200,000 records,

00:11:11.520 --> 00:11:14.800
but this meets a large,
large majority of our

00:11:14.800 --> 00:11:16.000
customer requirements.

00:11:16.000 --> 00:11:18.380
There are very few people that
need more than 200,000 user

00:11:18.380 --> 00:11:21.000
records in a directory system.

00:11:21.520 --> 00:11:24.960
So in summary,
Mac OS X comes with Open Directory and

00:11:24.960 --> 00:11:27.800
Tiger and has always come with
Open Directory since 10.0.

00:11:27.800 --> 00:11:32.880
The client and the server are fairly
complete and offer a very compelling

00:11:32.880 --> 00:11:37.280
solution for deploying managed networks,
maintaining your client workstations,

00:11:37.280 --> 00:11:39.800
and having central command and authority.

00:11:39.800 --> 00:11:42.910
We're based on industry standards.

00:11:42.920 --> 00:11:43.760
We're using LDAP.

00:11:43.760 --> 00:11:44.840
We're using Kerbero.

00:11:44.840 --> 00:11:46.700
We're using Sassl for our authentication.

00:11:46.700 --> 00:11:47.940
There's no secrets here.

00:11:48.490 --> 00:11:50.590
The vast majority of
Open Directory is open source,

00:11:50.630 --> 00:11:52.900
and we fit in with existing
directory deployments.

00:11:52.920 --> 00:11:55.380
So if you already have a
working directory system,

00:11:55.400 --> 00:11:56.840
there's a high probability.

00:12:01.240 --> 00:12:06.720
There's a high probability that you'll
be able to configure Mac OS X to work

00:12:06.800 --> 00:12:09.830
with that existing directory system.

00:12:09.940 --> 00:12:13.690
Directory services works below most
of the application and is transparent

00:12:13.690 --> 00:12:16.790
to the vast majority of the system.

00:12:16.800 --> 00:12:21.800
And Tiger saw a major upgrade
with our enhanced group support.

00:12:22.880 --> 00:12:25.040
So that brings you up to date
on where we are with directory

00:12:25.040 --> 00:12:28.550
services today in the Tiger that
you have running on your desktops.

00:12:28.610 --> 00:12:30.320
How many people have installed
Leopard on their notebooks

00:12:30.410 --> 00:12:31.300
and are running it right now?

00:12:31.410 --> 00:12:32.300
Oh, wow, that's a lot.

00:12:32.300 --> 00:12:33.880
So you're running directory
service on Leopard.

00:12:33.980 --> 00:12:37.300
For those of you that haven't,
you're using the Tiger directory system.

00:12:37.380 --> 00:12:41.550
So now we're going to talk about Leopard.

00:12:42.040 --> 00:12:44.090
So what are we doing with
directory services for Leopard?

00:12:44.100 --> 00:12:47.360
Well, we're doing a lot.

00:12:47.360 --> 00:12:49.790
We're going to have a major
architectural overhaul that

00:12:49.790 --> 00:12:51.400
I'm going to talk about later.

00:12:51.560 --> 00:12:55.500
We're making changes to the
local configuration database.

00:12:55.660 --> 00:12:59.740
We'll be talking about improvements
in the Active Directory plugin.

00:12:59.810 --> 00:13:02.300
And we'll be talking about
server enhancements that we

00:13:02.300 --> 00:13:04.930
have planned for the server.

00:13:05.510 --> 00:13:09.400
This is the standard architectural
diagram that I've been giving for

00:13:09.400 --> 00:13:12.090
about the past six or seven years.

00:13:12.380 --> 00:13:14.730
This is a simplified view.

00:13:14.740 --> 00:13:16.400
I believe it's highly accurate.

00:13:16.400 --> 00:13:20.330
However, like any diagram or any graphic,
it's simpler than it needs to be.

00:13:20.330 --> 00:13:22.900
And for purposes of the
conversation we're about to have,

00:13:22.900 --> 00:13:24.850
I'm going to have to pull back
the covers a little bit and show

00:13:24.900 --> 00:13:27.920
you a little bit more about what's
going on underneath the covers.

00:13:27.920 --> 00:13:30.810
So we're going to swap out
that architectural diagram for

00:13:30.810 --> 00:13:32.520
that architectural diagram.

00:13:32.520 --> 00:13:36.860
And the two changes are the
lib system APIs on the left

00:13:36.930 --> 00:13:39.650
and the DS APIs on the right.

00:13:39.660 --> 00:13:44.760
Below that is a cooperation among
three different daemons in the system.

00:13:44.890 --> 00:13:49.880
If you run tiger and you run top,
you'll see member D directory services

00:13:49.880 --> 00:13:52.980
and lookup D running in the process list.

00:13:53.020 --> 00:13:57.800
Those three daemons cooperate with each
other to provide the system with all of

00:13:57.820 --> 00:13:59.540
the directory information it requires.

00:13:59.540 --> 00:14:03.680
And then beneath all of that are
the plugins that provide access

00:14:03.700 --> 00:14:04.900
to the different data sources.

00:14:04.900 --> 00:14:08.330
So lookup D handles lib system.

00:14:08.330 --> 00:14:12.260
It caches results so that if an
application is launched and calls get

00:14:12.260 --> 00:14:15.570
PWNAM over and over and over again,
it's not actually doing I/O on

00:14:15.580 --> 00:14:16.610
the network or on the disk.

00:14:16.660 --> 00:14:18.550
It's reading it out of lookup D's cache.

00:14:18.600 --> 00:14:21.180
Does the DNS resolution for the system.

00:14:21.180 --> 00:14:23.280
If you resolve a host
name through Safari,

00:14:23.280 --> 00:14:27.880
that call ultimately hits lookup D and
lookup D does the host name resolution.

00:14:27.880 --> 00:14:29.860
So lookup D is the one that's going
to be the host name for the system.

00:14:29.880 --> 00:14:33.130
And it accesses the local database.

00:14:33.160 --> 00:14:35.840
It uses directory service
for network access.

00:14:35.840 --> 00:14:38.820
So if lookup D can't find the
user record in the local database,

00:14:38.820 --> 00:14:40.830
it fails over to directory
services and says,

00:14:40.870 --> 00:14:43.970
"Hey, directory services,
can you find this user record?" And if

00:14:43.970 --> 00:14:47.120
you have an LDAP server configured
and the user record actually exists,

00:14:47.120 --> 00:14:51.480
directory services will hand the result
to lookup D and magic will happen.

00:14:51.480 --> 00:14:54.610
Member D handles group resolution.

00:14:54.620 --> 00:14:57.860
So when the kernel encounters
a JPEG on disk and the user

00:14:57.860 --> 00:14:57.860
record is not in the directory,
it's going to be a group resolution.

00:14:57.860 --> 00:15:00.590
So if the user record doesn't
match the permission and there's

00:15:00.620 --> 00:15:03.730
groups on the permission list,
the kernel will call member D and say,

00:15:03.730 --> 00:15:06.830
"Is this user a member of that
group?" Member D is responsible

00:15:06.830 --> 00:15:09.820
for caching the answer and if it
doesn't have the answer in cache,

00:15:09.820 --> 00:15:12.540
it's responsible for getting
an answer for the kernel.

00:15:12.540 --> 00:15:15.690
So that's a critical part of the system
and it does groups result caching

00:15:15.690 --> 00:15:18.870
because the kernel asks about the
same group memberships quite a bit.

00:15:19.040 --> 00:15:22.130
I think on boot it asks about,
"Are you a member of wheel?"

00:15:22.130 --> 00:15:24.020
like over 2,000 times.

00:15:24.020 --> 00:15:25.640
So caching is very important.

00:15:25.860 --> 00:15:27.840
And then directory services.

00:15:27.840 --> 00:15:30.610
So the directory services provides
access to the network directories,

00:15:30.610 --> 00:15:30.890
NIS.

00:15:30.980 --> 00:15:34.620
It provides access to LDAP and provides
access to Active Directory or any other

00:15:34.680 --> 00:15:37.520
plugin that you've written or installed.

00:15:38.070 --> 00:15:41.120
There's always been some
redundancy in these daemons.

00:15:41.120 --> 00:15:43.690
Lookupd does some work that
then if it can't handle it,

00:15:43.750 --> 00:15:46.560
Directory Services does the same
work over because it doesn't know

00:15:46.560 --> 00:15:49.870
if it's being called by Lookupd
or being called by login window.

00:15:49.970 --> 00:15:53.000
There's been some redundancy
in this architecture.

00:15:53.160 --> 00:15:54.870
Engineers don't like redundancy.

00:15:54.930 --> 00:15:56.870
We're going to clean it up.

00:15:57.780 --> 00:16:01.030
So our goals for Leopard are to
actually have this architecture

00:16:01.030 --> 00:16:03.240
diagram be enormously accurate.

00:16:03.260 --> 00:16:06.330
There's only one Damon in the system.

00:16:09.310 --> 00:16:14.690
So the lib system APIs on
Leopard that you're running,

00:16:14.690 --> 00:16:17.280
dispatched today directly
to directory services.

00:16:17.280 --> 00:16:19.620
If you run the process list,
you will note lookupd is not

00:16:19.620 --> 00:16:23.310
running in the tiger seed or the
leopard seed that we gave you.

00:16:23.540 --> 00:16:28.440
The DS API is still dispatched to
directory services and for Leopard GM,

00:16:28.590 --> 00:16:29.720
MemberD will not be running.

00:16:29.720 --> 00:16:30.640
MemberD is still running.

00:16:30.640 --> 00:16:33.000
It was too much risk to
put into the WWDC build,

00:16:33.000 --> 00:16:34.040
but we've got it prototyped.

00:16:34.040 --> 00:16:34.500
It's working.

00:16:34.500 --> 00:16:37.840
So directory services is
consolidating all of the

00:16:38.300 --> 00:16:40.500
directory daemons into one daemon.

00:16:40.500 --> 00:16:44.460
So a single directory services
daemon to handle lib system,

00:16:44.460 --> 00:16:46.760
a single directory services
daemon that does caching,

00:16:46.760 --> 00:16:50.200
local data access,
and DNS host resolution is all

00:16:50.230 --> 00:16:52.280
done out of directory services now.

00:16:53.440 --> 00:16:54.840
Less IPC dispatch.

00:16:55.000 --> 00:16:57.740
Those lines that I gave you on
the architecture diagram earlier,

00:16:57.740 --> 00:16:59.940
every time you saw a
gray arrow going one,

00:16:59.960 --> 00:17:01.100
that's a Mach IPC.

00:17:01.100 --> 00:17:03.740
And while Mach IPC is
enormously high performance,

00:17:03.740 --> 00:17:07.100
anyone who programs in the audience
knows the fewer procedure calls

00:17:07.190 --> 00:17:09.480
or system calls you can make,
the better.

00:17:09.480 --> 00:17:12.100
This is fewer system calls,
and it will be a saved memory

00:17:12.100 --> 00:17:13.930
footprint of three fewer daemons.

00:17:15.650 --> 00:17:21.060
So lookupd and memberd will not be
running in the GM version of Leopard.

00:17:21.120 --> 00:17:25.580
Leopard already, with the build you have,
does not have lookupd running.

00:17:26.800 --> 00:17:27.670
So, where are we at?

00:17:27.820 --> 00:17:30.520
The WWDC build of Leopard
has no LookupD running.

00:17:30.520 --> 00:17:31.430
Go ahead, check.

00:17:31.490 --> 00:17:32.760
You can run top or PS.

00:17:32.760 --> 00:17:37.880
All lib system API calls now
dispatch to directory services.

00:17:37.880 --> 00:17:38.790
And this is kind of fun.

00:17:38.800 --> 00:17:41.010
I'm walking down the hall,
and the question I get the most is, hey,

00:17:41.060 --> 00:17:43.680
Dave, what are all of those lib system
calls that LookupD handles?

00:17:43.680 --> 00:17:45.810
That's exactly what
everyone's most interested in.

00:17:45.840 --> 00:17:47.740
Aqua, high DPI, calendaring.

00:17:47.740 --> 00:17:49.270
No one cares about that.

00:17:49.340 --> 00:17:52.240
They want to know what lib system
calls that LookupD used to handle.

00:17:52.740 --> 00:17:55.330
Well, I compiled a list with
the help of my engineers,

00:17:55.330 --> 00:17:56.390
and there they are.

00:17:56.410 --> 00:18:01.190
So, these calls have always,
even prior to Cheetah 10.0,

00:18:01.200 --> 00:18:03.240
these calls were always
handled by LookupD.

00:18:03.240 --> 00:18:06.220
So, all we did was take the
implementation that already existed

00:18:06.220 --> 00:18:10.000
and redirected all these calls to
talk directly to directory services.

00:18:10.020 --> 00:18:11.170
So, that's been done.

00:18:11.170 --> 00:18:13.370
So, if you call any of these
calls in your code,

00:18:13.370 --> 00:18:15.840
directly or indirectly,
you're now using directory

00:18:15.840 --> 00:18:17.020
services goodness.

00:18:18.820 --> 00:18:21.110
And when Leopard ships,
memberd will be subsumed by

00:18:21.110 --> 00:18:22.460
directory services as well.

00:18:22.460 --> 00:18:25.460
And the memberd APIs are only one
or two to ask about membership,

00:18:25.470 --> 00:18:28.990
and they're in membership.h,
which is in lib system.

00:18:29.660 --> 00:18:31.270
And that leaves one other daemon running.

00:18:31.380 --> 00:18:34.860
For those of you who are very,
very savvy about Mac OS X,

00:18:34.920 --> 00:18:37.390
you know that Mac OS X,
even when not bound to

00:18:37.390 --> 00:18:40.830
a network directory,
still has a local directory server

00:18:40.830 --> 00:18:42.920
running for your local database.

00:18:42.920 --> 00:18:45.870
That local directory is
lovingly referred to as NetInfo,

00:18:45.870 --> 00:18:49.420
and there's a daemon running
on this system called NetInfoD,

00:18:49.420 --> 00:18:54.140
which brokers access to
the local NetInfo database.

00:18:54.140 --> 00:18:56.280
We're getting rid of NetInfo.

00:19:02.910 --> 00:19:07.510
So even on a local Tiger system
with no network access,

00:19:07.550 --> 00:19:08.690
there's an extra daemon running.

00:19:08.700 --> 00:19:11.300
So NetInfo has been the
historical local database,

00:19:11.300 --> 00:19:12.430
and it works like this.

00:19:12.440 --> 00:19:15.590
Local data, talk to NetInfo.

00:19:15.600 --> 00:19:19.100
So the local data plug-in and
directory services talk to NetInfoD,

00:19:19.100 --> 00:19:24.220
and NetInfoD access to file on disk at
var db netinfo slash nidb dot local.

00:19:24.220 --> 00:19:27.260
For those of you who want to do a
clean install of your operating system,

00:19:27.330 --> 00:19:30.410
please delete this file right now,
and you can wipe the hard drive

00:19:30.470 --> 00:19:33.420
because that deletes your local
admin user and everything else.

00:19:33.420 --> 00:19:34.300
I'm just kidding.

00:19:34.350 --> 00:19:35.110
Don't do that.

00:19:37.900 --> 00:19:40.440
NetInfoD also handled remote access.

00:19:40.460 --> 00:19:44.460
So this is how directory services
got--for those of you who know

00:19:44.460 --> 00:19:46.650
a little bit about NetInfo,
NetInfo was both a local

00:19:46.720 --> 00:19:48.200
database and a remote database.

00:19:48.200 --> 00:19:49.390
It could be run across the network.

00:19:49.480 --> 00:19:53.800
Well, the daemon that accessed the
remote database was also NetInfoD.

00:19:53.800 --> 00:19:59.020
So NetInfoD was responsible for
both local data access and it's

00:19:59.020 --> 00:20:01.560
responsible for network data access.

00:20:01.660 --> 00:20:09.260
Now, we have not supported deploying a
NetInfo server since--is 10.2 Jaguar?

00:20:09.450 --> 00:20:10.980
Yeah, okay.

00:20:11.100 --> 00:20:12.440
Since Jaguar.

00:20:12.550 --> 00:20:15.880
So we haven't encouraged people
to deploy more NetInfo servers,

00:20:15.890 --> 00:20:18.370
but we haven't yet gotten--but
we hadn't yet gotten rid of

00:20:18.420 --> 00:20:20.840
the local NetInfo server.

00:20:20.970 --> 00:20:23.160
NetInfo could hold about 10,000 entries.

00:20:23.170 --> 00:20:25.300
It could store string
data but not binary data.

00:20:25.320 --> 00:20:27.960
It had write access controls
but no read access controls.

00:20:27.960 --> 00:20:31.780
It was a pretty good directory system,
but--but we didn't like the extra

00:20:31.780 --> 00:20:35.240
IPC dispatch even for local data access.

00:20:35.240 --> 00:20:39.290
So local access was handled by
a separate RPC-based daemon.

00:20:39.300 --> 00:20:40.440
RPC has some issues.

00:20:40.440 --> 00:20:43.600
If you think about it,
NetInfo is actually based on RPC for

00:20:43.600 --> 00:20:46.110
those of you who've looked at the source.

00:20:46.280 --> 00:20:49.050
And it's based on SunRPC which
requires the networking stack.

00:20:49.050 --> 00:20:52.360
And there's some very interesting
deadlock conditions in boot time and when

00:20:52.360 --> 00:20:55.460
you're waking from sleep and all that
sort of stuff that the networking stack's

00:20:55.500 --> 00:20:57.540
not even ready to handle loopback.

00:20:57.590 --> 00:21:02.840
So having an extra IPC dispatch led to
some very hairy programming problems

00:21:02.850 --> 00:21:07.420
that during very narrow windows of time,
NetInfoD may not have been

00:21:07.420 --> 00:21:10.950
responsive to local calls even
for accessing the local database.

00:21:10.980 --> 00:21:12.390
And it's another moving part.

00:21:12.580 --> 00:21:14.540
And again,
for the engineers in the audience,

00:21:14.600 --> 00:21:17.760
more moving parts is more risk,
more complexity.

00:21:17.920 --> 00:21:21.780
So we're removing this moving part
from the system for local access.

00:21:21.900 --> 00:21:28.070
So we're, as of Leopard,
retiring NetInfo.

00:21:28.070 --> 00:21:28.070
This is its jersey.

00:21:28.610 --> 00:21:33.780
So if any of you have NetInfo
deployed at your site,

00:21:34.150 --> 00:21:39.360
Now would be a really good time
to upgrade to Open Directory.

00:21:39.360 --> 00:21:41.100
I want to emphasize this.

00:21:41.140 --> 00:21:43.200
We will not even legacy support this.

00:21:43.310 --> 00:21:44.960
We're not saying that this
is going away and we're not

00:21:44.960 --> 00:21:46.440
doing any more enhancements.

00:21:46.440 --> 00:21:48.280
We are yanking this from the system.

00:21:48.280 --> 00:21:52.780
There will be no Net Info
support in Leopard at all.

00:21:53.780 --> 00:21:56.750
So the local data store replacement,
this is a question I get a lot.

00:21:56.760 --> 00:22:00.580
So now the local database for store
will be in var db dslocal nodes default,

00:22:00.580 --> 00:22:04.210
and underneath there,
there will be one folder per record type.

00:22:04.210 --> 00:22:07.760
Under default, you'll see users, groups,
and mounts,

00:22:07.810 --> 00:22:11.700
and underneath each one of those,
you'll see one file per record.

00:22:11.700 --> 00:22:14.560
The file format will be a plist.

00:22:14.560 --> 00:22:17.150
So if you want to edit this plist
while you're in single user mode,

00:22:17.250 --> 00:22:17.740
go ahead.

00:22:17.750 --> 00:22:23.460
It's just going to be a plist,
no tools required.

00:22:23.460 --> 00:22:25.320
So it's being replaced with
a local implementation.

00:22:25.320 --> 00:22:26.600
Records are plists.

00:22:26.600 --> 00:22:29.810
It can store string and binary
data in the local records.

00:22:30.030 --> 00:22:32.980
This is being used, by the way,
by login window and system accounts

00:22:33.080 --> 00:22:37.030
prefs to put the user picture into
the user record in the system and some

00:22:37.030 --> 00:22:39.780
other nifty little integration points.

00:22:39.780 --> 00:22:41.940
This is one less daemon
running in the system.

00:22:41.940 --> 00:22:43.900
NetInfoD will no longer be running.

00:22:43.900 --> 00:22:46.730
And to access a local database,
there's no longer an IPC required

00:22:46.790 --> 00:22:47.970
to talk to the database.

00:22:47.970 --> 00:22:52.400
This is a huge win in complexity,
reduces footprint, and makes the system

00:22:52.410 --> 00:22:53.980
more reliable overall.

00:22:54.190 --> 00:22:55.590
All local NetInfo data.

00:22:55.610 --> 00:22:57.340
So if you have an
existing NetInfo database,

00:22:57.340 --> 00:23:00.890
we will of course migrate all of
the data out of the local NetInfo

00:23:00.890 --> 00:23:05.340
database and into the new database.

00:23:05.440 --> 00:23:10.990
Network NetInfo will not
be supported in Leopard.

00:23:11.270 --> 00:23:14.740
LDAP, Active Directory, and NIST,
we think, cover the network directory

00:23:14.740 --> 00:23:16.200
access needs pretty well.

00:23:16.280 --> 00:23:18.730
So if you need a network
directory system,

00:23:18.740 --> 00:23:20.340
you can pick any one of these threes.

00:23:20.500 --> 00:23:23.670
We highly recommend
LDAP and Open Directory.

00:23:24.030 --> 00:23:27.790
NetInfo Manager and all the
NetInfo tools will be removed

00:23:27.790 --> 00:23:29.980
from NetInfo or from Leopard.

00:23:29.980 --> 00:23:33.480
There are several scripts that
we've developed internally at Apple,

00:23:33.480 --> 00:23:36.960
and I'm sure you as well have used
Nickel or some other NetInfo tools.

00:23:36.960 --> 00:23:41.450
Now is a really good time to migrate
those scripts onto the DS tools.

00:23:41.460 --> 00:23:45.310
The DS tools have been present in
the system since Jaguar with them

00:23:45.310 --> 00:23:48.370
getting more tools in every build,
so there's really nothing

00:23:48.440 --> 00:23:50.860
preventing you from going ahead
and moving away from Nickel,

00:23:50.860 --> 00:23:52.440
for example, if you're using that.

00:23:52.580 --> 00:23:55.840
In Tiger, you can do that today and
use DSCL instead of Nickel.

00:23:55.840 --> 00:24:01.520
The change is transparent to
99% of the system software.

00:24:01.520 --> 00:24:03.300
Because we have so many
abstraction layers,

00:24:03.300 --> 00:24:06.560
login window doesn't even know that
there's not a local NetInfo database,

00:24:06.560 --> 00:24:07.200
nor should it.

00:24:09.210 --> 00:24:14.040
So what tools should I use instead of
the NI tools that I've used historically?

00:24:14.210 --> 00:24:18.500
So legacy tools, Nickel,
you can use DSCL.

00:24:18.530 --> 00:24:20.560
That's been there since 10.3.

00:24:20.610 --> 00:24:23.740
NI Load, you can use DS Import,
which has been there since Jaguar.

00:24:24.020 --> 00:24:26.820
NI Dump, you can use DS Export,
which is new in Leopard.

00:24:26.820 --> 00:24:28.980
There's a man page.

00:24:28.980 --> 00:24:30.690
NetInfo Manager.

00:24:31.040 --> 00:24:33.090
Who has Leopard installed?

00:24:33.130 --> 00:24:36.700
Again, if you right click on a user
account in System Accounts Press,

00:24:36.730 --> 00:24:40.200
you can now edit the user record for UID,
Home Directory, Path, and other things.

00:24:40.200 --> 00:24:43.270
I have a screenshot of that later.

00:24:44.900 --> 00:24:47.440
If you need to edit groups
on the local system,

00:24:47.440 --> 00:24:49.900
you can use DS Edit Group,
which has been there since Tiger.

00:24:49.900 --> 00:24:53.380
If you need to edit mount records,
the new directory utility has a

00:24:53.380 --> 00:24:56.270
mount record editor for adding
local mounts to access Linux,

00:24:56.300 --> 00:24:57.500
NFS servers, or otherwise.

00:24:57.500 --> 00:25:00.510
And if you need to enable root,
there's always been

00:25:00.510 --> 00:25:02.890
the command line tool,
DS Enable Root,

00:25:02.920 --> 00:25:05.450
or you can go to directory
utility under the edit menu,

00:25:05.450 --> 00:25:07.940
and there's an Enable Root
command there as well.

00:25:07.940 --> 00:25:11.820
So we think we've covered most of the
legacy usage of any NI-based tools,

00:25:11.820 --> 00:25:14.680
and so you should get off of
those tools as soon as possible.

00:25:14.680 --> 00:25:18.400
Except for DS Export,
all of these tools are in Tiger.

00:25:18.400 --> 00:25:20.750
So you can move your scripts,
your internal deployments,

00:25:20.750 --> 00:25:23.110
anything that you've already
got can already be moved to

00:25:23.140 --> 00:25:25.780
these new replacements today
without waiting for Leopard,

00:25:25.780 --> 00:25:27.140
and then you're prepared for the future.

00:25:30.280 --> 00:25:31.900
So, account system preferences.

00:25:31.900 --> 00:25:34.960
If you right-click on a user record
in account system preference,

00:25:34.960 --> 00:25:38.200
we get this nifty pop-up
called Advanced Options.

00:25:38.230 --> 00:25:40.840
The HI people wouldn't let
us have an actual button,

00:25:40.840 --> 00:25:42.760
so it has to be hidden.

00:25:42.760 --> 00:25:46.580
So you right-click on the user
record and this sheet pops down.

00:25:46.580 --> 00:25:49.740
And you can edit all the things
most people needed to launch

00:25:49.740 --> 00:25:51.960
NetInfoManager to edit previously.

00:25:51.960 --> 00:25:54.160
So you can edit the UID,
you can edit the group ID,

00:25:54.160 --> 00:25:57.280
you can edit the record name,
you can edit the login shell.

00:25:57.280 --> 00:26:00.050
You know,
anything that you typically would have

00:26:00.050 --> 00:26:04.670
had to have launched NetInfoManager to do
in the past can now be done directly from

00:26:04.690 --> 00:26:07.580
within the system accounts preference.

00:26:07.580 --> 00:26:09.310
There's even some nifty support for this.

00:26:09.350 --> 00:26:11.620
If you're home directory,
if you hit Choose on the home directory,

00:26:11.620 --> 00:26:14.410
you can actually point it at an
encrypted file vault and reset your

00:26:14.430 --> 00:26:16.360
user record up to point to a file vault.

00:26:18.900 --> 00:26:22.140
Director Utility is,
we renamed it Utility because it

00:26:22.140 --> 00:26:26.150
no longer just manages access,
it also now has some utility functions.

00:26:26.150 --> 00:26:28.510
Under the Edit menu, we have Enable Root.

00:26:28.540 --> 00:26:33.030
And if you look carefully in the toolbar,
you'll see an icon there called Mounts.

00:26:33.030 --> 00:26:36.820
That's so you can add and remove
mount records to the local database.

00:26:36.820 --> 00:26:38.720
For those of you who
know anything about NFS,

00:26:38.730 --> 00:26:42.020
there has to be a mount record for
Mac OS X to recognize an NFS server.

00:26:42.200 --> 00:26:44.940
And previously,
the only way to teach Mac OS X about

00:26:44.940 --> 00:26:48.450
a mount record was to put it in
LDAP or use NetInfoManager to put

00:26:48.450 --> 00:26:50.020
it in the local NetInfo database.

00:26:50.020 --> 00:26:51.960
NetInfoManager's gone.

00:26:51.960 --> 00:26:54.280
How do I add mount records?

00:26:54.280 --> 00:26:57.450
Well, we put an HI in
Directory Utility for you.

00:26:59.340 --> 00:27:01.700
So now I can complete the timeline.

00:27:01.790 --> 00:27:05.420
So now we've got what Jaguar looked like,
what Panther looked like,

00:27:05.440 --> 00:27:07.480
what Tiger looked like,
and the new functionality

00:27:07.480 --> 00:27:09.430
for Leopard is DSLocal.

00:27:09.540 --> 00:27:12.640
We'll be talking about
Active Directory with packet signing,

00:27:12.640 --> 00:27:14.560
and we have some new
administration tools.

00:27:14.560 --> 00:27:17.230
What's important about this
slide is not what's new,

00:27:17.280 --> 00:27:18.480
but what's missing.

00:27:18.600 --> 00:27:22.630
LookupD is gone, MemberD is gone,
NetInfo is gone between

00:27:22.940 --> 00:27:23.730
Tiger and Leopard.

00:27:23.780 --> 00:27:25.660
So this is your future.

00:27:25.690 --> 00:27:29.100
This is the way Leopard is going to ship.

00:27:29.140 --> 00:27:30.950
If you have any questions
or anything like that,

00:27:30.960 --> 00:27:34.140
we'll be happy to answer them
at the end of the presentation.

00:27:35.370 --> 00:27:36.440
So architectural summary.

00:27:36.510 --> 00:27:40.450
Directory services, lookupd,
memberd are merging.

00:27:40.610 --> 00:27:43.020
This simplifies the system,
reduces daemon count.

00:27:43.020 --> 00:27:46.020
There's all sorts of
goodness coming out of this.

00:27:46.020 --> 00:27:47.540
Netinfo is no longer supported.

00:27:47.540 --> 00:27:48.780
I hope you get that message.

00:27:48.780 --> 00:27:51.200
Netinfo is not supported.

00:27:51.200 --> 00:27:52.450
It is still in the build.

00:27:52.460 --> 00:27:54.280
We had some engineering difficulties.

00:27:54.280 --> 00:27:56.040
And for risk management,
it's not in the build.

00:27:56.160 --> 00:27:58.800
So please, please,
please don't take the fact

00:27:58.940 --> 00:28:03.070
that your Leopard preview still
works with Netinfo to be a

00:28:03.120 --> 00:28:05.290
contradiction of this presentation.

00:28:05.340 --> 00:28:07.400
This presentation's the truth.

00:28:07.410 --> 00:28:10.170
What you have is a pre-release.

00:28:10.500 --> 00:28:16.330
We've also removed Bonjour, SLP, SMB,
and the Apple Talk plug-ins.

00:28:16.340 --> 00:28:19.500
This functionality is going to be picked
up with a direct browser in the finder,

00:28:19.500 --> 00:28:21.360
and that's all I can say
about that at this time.

00:28:21.360 --> 00:28:24.620
Leopard Directory server.

00:28:28.520 --> 00:28:31.520
So for Leopard,
we're very excited about the changes

00:28:31.520 --> 00:28:32.840
we've made to Open Directory.

00:28:32.900 --> 00:28:35.900
The directory services
architecture in Tiger is leaner,

00:28:35.900 --> 00:28:38.600
or in Leopard, is leaner, meaner,
and faster than it's ever been.

00:28:38.600 --> 00:28:41.180
And we hope to get a lot
better mobility support,

00:28:41.180 --> 00:28:44.090
more reliability,
and to make your administrative

00:28:44.090 --> 00:28:47.820
lives easier by getting rid of
one outdated networking protocol.

00:28:48.960 --> 00:28:51.100
So if you're using the
NetInfo command line tools,

00:28:51.110 --> 00:28:53.000
you've got to get off
of those right away.

00:28:53.000 --> 00:28:55.760
We don't see any reason that you
couldn't do that today in Tiger.

00:28:55.760 --> 00:28:58.660
And for the things that are missing,
we've added those in Leopard.

00:28:58.660 --> 00:29:01.360
If you have any software
that calls the NetInfo APIs,

00:29:01.360 --> 00:29:04.290
well,
those have been deprecated since 10.2.

00:29:04.300 --> 00:29:08.020
So if you didn't get the message when
there were compiler errors in Xcode,

00:29:08.020 --> 00:29:10.980
now's a really good time to
stop using the NetInfo APIs.

00:29:10.980 --> 00:29:13.250
And if you have any internal
scripts that use Nickel,

00:29:13.250 --> 00:29:14.180
move them to DSCL.

00:29:16.820 --> 00:29:19.200
So what are we doing
for Active Directory?

00:29:19.200 --> 00:29:20.900
Well, this is another exciting plugin.

00:29:20.900 --> 00:29:23.970
We introduced that in Panther,
and we've provided some

00:29:23.970 --> 00:29:25.560
enhancements in Tiger.

00:29:25.560 --> 00:29:28.260
Namely, we added support to the
Active Directory plugin

00:29:28.260 --> 00:29:30.200
to support MemberD,
so we could get nested groups

00:29:30.200 --> 00:29:31.300
out of Active Directory.

00:29:31.300 --> 00:29:33.030
But we weren't done
with Active Directory,

00:29:33.090 --> 00:29:35.350
and I think we're going to catch
up and make a lot of you happy

00:29:35.350 --> 00:29:38.180
with the Leopard feature set
in the Active Directory plugin.

00:29:38.180 --> 00:29:41.130
So Active Directory is a
very popular configuration.

00:29:41.130 --> 00:29:44.780
Surprisingly, it's used by about 40%
of our customer sites.

00:29:46.460 --> 00:29:50.120
And so for Leopard, we're improving the
replica and site support.

00:29:50.170 --> 00:29:52.780
There's been some feedback that we
don't always pick the same replica

00:29:52.780 --> 00:29:55.260
as a Windows machine would have,
so we're going to improve that and try

00:29:55.260 --> 00:29:57.980
to behave more like a Windows client
would in a similar situation.

00:29:57.980 --> 00:30:00.440
And we're going to
support packet signing.

00:30:00.440 --> 00:30:04.100
For those of you who don't know,
there is a lockdown mode that you can

00:30:04.100 --> 00:30:07.640
deploy Active Directory to require
full packet signing that every

00:30:07.720 --> 00:30:11.560
transaction with AD is authenticated
and authorized and signed.

00:30:11.560 --> 00:30:15.940
We haven't supported that,
and if you attend the SMB session,

00:30:15.940 --> 00:30:16.140
which is going to be
in the next few weeks,

00:30:16.140 --> 00:30:16.160
we're going to be able to do that.

00:30:16.220 --> 00:30:17.530
So if you're watching this
video and you're not sure what's

00:30:17.530 --> 00:30:21.270
going on right now next to me,
you will find out that we're adding

00:30:21.270 --> 00:30:23.210
packet signing to the SMB file protocol.

00:30:23.220 --> 00:30:25.140
So now that we have
it in the file client,

00:30:25.140 --> 00:30:27.900
it makes sense to add it to
the Active Directory client,

00:30:27.900 --> 00:30:33.110
so we're supporting packet signing in
Leopard with the Active Directory plugin.

00:30:35.710 --> 00:30:39.530
So this will make, we hope this will make
Mac OS X a first class citizen of

00:30:39.530 --> 00:30:42.880
Active Directory networks and will
support all the security options that

00:30:42.880 --> 00:30:44.460
you can set up on Active Directory.

00:30:44.630 --> 00:30:47.100
Currently to allow Mac OS X machine
to join your network,

00:30:47.100 --> 00:30:49.190
you've had to lower some
of the security settings on

00:30:49.190 --> 00:30:53.740
Active Directory and nobody likes that,
so we're fixing that.

00:30:54.520 --> 00:30:55.270
Server improvements.

00:30:55.340 --> 00:30:58.160
We're doing a lot of work
on the server for Leopard.

00:30:58.160 --> 00:31:02.580
Directory services is a never-ending
well of work for me and my team.

00:31:02.580 --> 00:31:04.400
My management doesn't like that.

00:31:04.400 --> 00:31:04.820
I do.

00:31:04.820 --> 00:31:07.370
It's kind of job security,
but we are putting some attention

00:31:07.370 --> 00:31:08.960
into the server for this release.

00:31:08.960 --> 00:31:12.430
So, first thing we're doing is
upgrading to OpenLDAP 2.3.x.

00:31:12.430 --> 00:31:15.350
I say .x because I don't know
what version OpenLDAP is going

00:31:15.350 --> 00:31:18.850
to be at in spring of 2007,
but it will be the latest version that

00:31:18.850 --> 00:31:21.180
we can reasonably ship and qualify.

00:31:22.020 --> 00:31:24.430
We're merging all of
Apple's diffs to overlays.

00:31:24.430 --> 00:31:28.440
This should make it far easier for those
of you who want to download a later

00:31:28.440 --> 00:31:32.660
version of OpenLDAP and still get all
of Apple's diffs applied for updating.

00:31:32.660 --> 00:31:33.710
We received some feedback.

00:31:33.720 --> 00:31:36.310
While we've posted all
of our source changes,

00:31:36.510 --> 00:31:39.820
prior to OpenLDAP 2.2,
there was no way to add plug-ins

00:31:39.820 --> 00:31:42.910
or overlays to OpenLDAP without
invading the source,

00:31:42.930 --> 00:31:45.160
and some of our changes were
somewhat source invasive.

00:31:45.200 --> 00:31:48.310
We received feedback from customers
in the OpenLDAP community that we

00:31:48.310 --> 00:31:49.400
can now use the overlay technology
to deploy a lot of the data.

00:31:49.400 --> 00:31:55.220
Like the directory-based schema
can be done as an overlay.

00:31:55.220 --> 00:31:57.980
So, we're moving all of our
changes to an overlay,

00:31:57.980 --> 00:32:01.760
which means you can download a
baseline OpenLDAP and just add Apple's

00:32:01.760 --> 00:32:05.420
overlays without changing the source
code or doing a source code merge.

00:32:05.420 --> 00:32:09.280
So, this will make it easier for you to
keep up to date with a newer version of

00:32:09.330 --> 00:32:13.370
OpenLDAP and make it easier for us to
keep up to date with a newer OpenLDAP.

00:32:13.380 --> 00:32:16.670
Those of you who have attended the
calendar or Teams presentation,

00:32:16.670 --> 00:32:18.680
what do you think of that technology?

00:32:18.680 --> 00:32:19.290
Is it good stuff?

00:32:19.400 --> 00:32:20.600
Thank you.

00:32:23.900 --> 00:32:25.150
I'm very excited about it.

00:32:25.150 --> 00:32:28.050
The directory services team has been
involved in a lot of the planning,

00:32:28.050 --> 00:32:30.900
and that doesn't come for free without
some directory services changes.

00:32:30.900 --> 00:32:33.620
So there's a number of changes
coming in Open Directory to

00:32:33.620 --> 00:32:38.340
support Teams and to support the
calendar and the Teams directory.

00:32:38.340 --> 00:32:41.430
Some of these changes are schema
and access control improvements

00:32:41.430 --> 00:32:43.000
and granular access controls.

00:32:43.140 --> 00:32:47.550
There will now be choices other than
directory administrator and nobody.

00:32:47.610 --> 00:32:51.670
You'll be able to have granular
settings in the directory system.

00:32:53.050 --> 00:32:56.230
We're also introducing
replication scale improvement.

00:32:56.330 --> 00:32:58.300
For those of you who know
about our current design,

00:32:58.300 --> 00:32:59.100
it's a hub-and-spoke model.

00:32:59.100 --> 00:33:02.090
You've got the master at the center
and you line up replicas around it,

00:33:02.090 --> 00:33:05.240
and they all beat on the master to try to
get as much data as they can out of it.

00:33:05.300 --> 00:33:09.250
Well, we all know that doesn't scale,
and we're going to address that.

00:33:09.280 --> 00:33:12.470
So the new design we're
calling cascading replication,

00:33:12.470 --> 00:33:15.790
and this will allow us to have
32 replicas of a master and

00:33:15.790 --> 00:33:17.920
32 replicas of each replica.

00:33:18.700 --> 00:33:24.290
By my math, 32 times 32 is 1024,
and so that will allow 1,025 replicas

00:33:24.290 --> 00:33:26.860
in a two-tier hierarchy to be deployed.

00:33:26.860 --> 00:33:28.940
We think this is a
substantial scale improvement.

00:33:28.940 --> 00:33:31.240
It allows you to guide
your network topologies,

00:33:31.240 --> 00:33:35.210
look for it, plan for it,
because for those of you who currently

00:33:35.210 --> 00:33:38.520
have more than 32 replicas deployed,
you're going to have to restructure those

00:33:38.520 --> 00:33:40.830
into a tree or a cascading architecture.

00:33:40.860 --> 00:33:44.790
But this should allow us to deploy many,
many more directory servers

00:33:44.790 --> 00:33:48.320
than we've previously been
able to effectively support.

00:33:50.630 --> 00:33:53.800
The next feature I'm very excited
about is airport base station support.

00:33:53.800 --> 00:33:57.210
How many of you have wireless networks?

00:33:58.670 --> 00:34:00.130
How many of you would like
to be able to use your

00:34:00.130 --> 00:34:04.740
Open Directory name and passwords
to access those wireless networks?

00:34:05.120 --> 00:34:07.740
The Leopard server that you have
in your hands can do that today.

00:34:07.740 --> 00:34:11.720
We support Radius,
and so does the airport base station.

00:34:11.720 --> 00:34:16.420
So Mac OS X server has a Radius
server included with it now,

00:34:16.420 --> 00:34:18.860
and you can configure
free Radius on Mac OS X,

00:34:18.860 --> 00:34:21.180
and we did a very, very simple thing.

00:34:21.180 --> 00:34:23.300
We took free Radius and
we wrote a plug-in for it,

00:34:23.360 --> 00:34:25.320
and every time it receives
a name and password,

00:34:25.320 --> 00:34:26.740
it forwards it to Open Directory.

00:34:26.740 --> 00:34:29.180
Once Open Directory has
verified the password,

00:34:29.180 --> 00:34:31.600
free Radius tells the base
station to let the user log in.

00:34:32.650 --> 00:34:35.080
Nothing more than that,
nothing less than that.

00:34:35.150 --> 00:34:37.540
So we have full airport
base station support.

00:34:37.540 --> 00:34:40.300
The Radius server can handle
multiple base stations.

00:34:40.300 --> 00:34:42.710
We're currently living on it at work.

00:34:42.780 --> 00:34:45.000
We have three base stations joined to it.

00:34:45.060 --> 00:34:46.160
We're doing some scale testing.

00:34:46.160 --> 00:34:49.620
It should easily handle 50 to 100 base
stations on a single Radius server.

00:34:49.620 --> 00:34:54.630
This allows users to authenticate
on your wireless network with their

00:34:54.660 --> 00:34:56.640
Open Directory name and password.

00:34:56.640 --> 00:35:01.220
This uses WAP2 Enterprise Authentication
802.1 uppercase X,

00:35:01.220 --> 00:35:02.500
please, because lowercase x.

00:35:02.580 --> 00:35:03.640
It's a little different standard.

00:35:03.640 --> 00:35:09.100
And so we use WAP2 and
802.1x authentication,

00:35:09.100 --> 00:35:12.790
and the Airport Express and
Airport Extreme already

00:35:12.790 --> 00:35:13.800
support this standard.

00:35:13.800 --> 00:35:15.680
There are no firmware upgrades
required at the airport.

00:35:15.680 --> 00:35:16.980
It just works.

00:35:18.580 --> 00:35:21.970
The RADIUS server is based on
Free RADIUS and all of our modifications

00:35:22.010 --> 00:35:25.440
will be posted to the Darwin website,
if they haven't been already.

00:35:25.440 --> 00:35:30.440
I'm not sure what the... Steve,
have we posted our mods on Darwin yet?

00:35:30.440 --> 00:35:32.510
No.

00:35:35.070 --> 00:35:39.510
So in summary,
Open Directory is Mac OS X's

00:35:39.560 --> 00:35:41.000
configuration infrastructure.

00:35:41.000 --> 00:35:44.230
We support both local and remote
management of common system

00:35:44.250 --> 00:35:46.000
configuration information.

00:35:46.000 --> 00:35:49.000
We have an architectural
overhaul coming for Leopard,

00:35:49.000 --> 00:35:52.000
major changes in the local
directory infrastructure.

00:35:52.000 --> 00:35:57.000
Local and network net info
will no longer be supported.

00:35:57.480 --> 00:36:14.140
We're improving the
Active Directory plugin.

00:36:14.900 --> 00:36:17.900
And we have several enhancements
for the Open Directory server.

00:36:17.900 --> 00:36:19.920
We have team services support.

00:36:19.920 --> 00:36:23.040
These are mostly boiled down to
schema and access control changes.

00:36:23.160 --> 00:36:26.470
We're moving to a new version of
OpenLDAP along with the migration

00:36:26.470 --> 00:36:31.360
of our diffs to overlays instead of
straight diffs to the baseline source.

00:36:31.460 --> 00:36:34.740
We're improving replication
scale and we support airport base

00:36:34.740 --> 00:36:38.000
stations via free RADIUS integration
for this particular release.

00:36:38.000 --> 00:36:41.480
Again, I encourage you to play with
the RADIUS server that you

00:36:41.480 --> 00:36:43.370
have in your Leopard preview.

00:36:43.480 --> 00:36:44.990
It has access control support.

00:36:45.010 --> 00:36:47.780
You can control who can access which
base station and so on and so forth.

00:36:47.780 --> 00:36:49.200
It's a fantastic product.

00:36:49.320 --> 00:36:51.470
We're very excited about it.

00:36:51.900 --> 00:36:54.700
For more information,
you can contact Skip Levens.

00:36:54.700 --> 00:36:57.910
He's the technology evangelist,
and there is documentation and

00:36:57.910 --> 00:36:59.800
sample code at the standard websites.