WEBVTT

00:00:10.600 --> 00:00:14.180
I'm John DeTroye,
Senior Consulting Engineer for Apple,

00:00:14.180 --> 00:00:16.800
and this afternoon we're going to
be talking about managing clients

00:00:16.800 --> 00:00:18.200
in a heterogeneous environment.

00:00:18.200 --> 00:00:19.020
What's that mean?

00:00:19.020 --> 00:00:22.070
We're going to be talking about
managing clients where we have

00:00:22.070 --> 00:00:25.260
Macs and PCs on the net and we
have to take care of everything.

00:00:25.260 --> 00:00:28.220
I'm between you guys and the beer bash.

00:00:32.400 --> 00:00:34.860
And no, the buses will not
show up until I'm done.

00:00:34.860 --> 00:00:36.570
When I wave, they'll bring the buses up.

00:00:36.620 --> 00:00:37.340
So don't leave early.

00:00:37.340 --> 00:00:38.200
It won't do you any good.

00:00:40.380 --> 00:00:42.800
So what we're going to talk
about in the next few minutes,

00:00:42.800 --> 00:00:44.560
we're going to talk about
the systems lifecycle,

00:00:44.560 --> 00:00:48.640
IT's favorite thing,
some of the tasks involved in that.

00:00:48.640 --> 00:00:52.260
We're going to talk about some enterprise
solutions that fit within this task set.

00:00:52.280 --> 00:00:55.290
I have some really great customers
here who are going to tell you

00:00:55.340 --> 00:00:58.440
about how they've implemented
some of this stuff and how they're

00:00:58.440 --> 00:01:02.100
working within the lifecycle frame
with some very good solutions.

00:01:02.100 --> 00:01:04.450
And then we'll finish off with a Q&A.

00:01:05.460 --> 00:01:07.530
So what is this systems lifecycle?

00:01:07.540 --> 00:01:10.370
What is this thing?

00:01:11.180 --> 00:01:14.840
It's, for all intents and purposes,
a task-oriented process.

00:01:14.840 --> 00:01:18.840
It runs usually yearly,
and it involves the

00:01:18.910 --> 00:01:23.900
idea of you evaluating,
deploying, and managing systems.

00:01:23.900 --> 00:01:27.510
If we break that down,
it's the evaluation phase that

00:01:27.510 --> 00:01:32.060
we go through every year of,
what do I have, what do I have to do,

00:01:32.060 --> 00:01:35.720
how many of the different tasks
that my IT department has to

00:01:35.720 --> 00:01:39.770
handle are handled internally,
externally, and so forth.

00:01:40.100 --> 00:01:42.700
How much manpower do I need
to get this job done?

00:01:42.700 --> 00:01:46.540
How often am I going to perform
the different tasks in the cycle?

00:01:46.540 --> 00:01:49.520
And am I getting paid enough to do this?

00:01:49.520 --> 00:01:52.980
So then we deploy, yeah, no.

00:01:55.830 --> 00:01:57.980
Next year I'll fix the
slide so it just says no.

00:01:57.980 --> 00:02:02.320
The images,
how many images do you deploy?

00:02:02.320 --> 00:02:04.030
How many different sets?

00:02:04.030 --> 00:02:08.860
And how many different systems do you
manage for deployment at each cycle?

00:02:08.860 --> 00:02:12.590
How often or how much of your
deployment is done manually?

00:02:12.590 --> 00:02:16.840
The seat of the pants, you know,
people running around with gobs of

00:02:16.840 --> 00:02:19.410
FireWire drives or DVDs and so forth.

00:02:19.480 --> 00:02:22.450
How much of it is done completely off
a network where you just sit back,

00:02:22.450 --> 00:02:24.000
push the button, and let it go?

00:02:24.570 --> 00:02:30.000
How much of it is done just one of those,
you know, run down the hall and quick,

00:02:30.000 --> 00:02:32.220
it's a VP, fix this system.

00:02:32.220 --> 00:02:34.760
And how often do you go through this?

00:02:34.760 --> 00:02:36.510
Some sites do it every year.

00:02:36.510 --> 00:02:38.260
Some sites do it every week.

00:02:38.260 --> 00:02:39.820
Some sites do it every day.

00:02:39.820 --> 00:02:42.450
Some people just say, you know what,
we're not updating anything.

00:02:42.450 --> 00:02:43.840
We went through enough of this.

00:02:43.840 --> 00:02:45.870
We're going to just do it, you know,
whenever a machine breaks,

00:02:45.880 --> 00:02:46.700
we'll do an update.

00:02:48.850 --> 00:02:51.630
And then the biggest piece of
the pie is the management part.

00:02:51.660 --> 00:02:54.540
Maintaining and supporting
this whole environment.

00:02:54.540 --> 00:02:57.060
And what we have to deal
with there is the idea of,

00:02:57.060 --> 00:02:59.900
are we going to centralize
all this systems management

00:02:59.900 --> 00:03:03.110
or do I have different sites,
school buildings, campuses,

00:03:03.130 --> 00:03:05.880
and so forth that I can
deploy this stuff out to?

00:03:05.880 --> 00:03:06.720
Can I spread it out?

00:03:07.540 --> 00:03:10.170
Simple things like
handling password changes.

00:03:10.250 --> 00:03:13.970
You know, if I have, on a Monday morning,
if I have 40 different sites to

00:03:14.010 --> 00:03:17.210
deal with and I have the average of,
you know, two or three people per

00:03:17.210 --> 00:03:20.510
site forget their password,
how do I quickly get all those

00:03:20.560 --> 00:03:22.970
passwords reset and reorganized?

00:03:23.000 --> 00:03:25.710
And for those of you that are
dealing in K-12 education,

00:03:25.760 --> 00:03:28.300
just picture the third-grade
teacher in the lab with the

00:03:28.300 --> 00:03:30.560
kids sitting there going,
I can't do it.

00:03:32.880 --> 00:03:35.490
There's a long time between
IT will get to it and,

00:03:35.600 --> 00:03:37.180
oh, by the way, it's done right now.

00:03:37.200 --> 00:03:41.070
System software, security updates,
and so forth.

00:03:41.080 --> 00:03:43.060
How do you handle that
stuff on a regular basis?

00:03:43.060 --> 00:03:44.120
Hardware replacement.

00:03:44.120 --> 00:03:47.810
If somebody's system goes down,
do you recover their

00:03:47.810 --> 00:03:50.800
data or do you just say,
you know, we told you not to do that?

00:03:54.900 --> 00:03:56.700
Who handles help desk?

00:03:56.860 --> 00:03:58.640
Do you have a formal help desk operation?

00:03:58.640 --> 00:04:00.460
What about workflow management?

00:04:00.460 --> 00:04:03.170
Do you actually have a process
electronically doing things?

00:04:03.170 --> 00:04:05.900
And that could be anything
from an ad agency's workflow of

00:04:05.900 --> 00:04:08.720
an entire project all the way
down to just a teacher saying,

00:04:08.730 --> 00:04:12.020
you know, how can I get book reports
turned in electronically?

00:04:12.020 --> 00:04:15.720
What about managing your assets
and doing license management?

00:04:15.720 --> 00:04:18.600
And once again, you just sit there and
look at the clock and then,

00:04:18.600 --> 00:04:20.900
you know,
you look at your paycheck and you go.

00:04:24.100 --> 00:04:27.040
So when the beach ball stops spinning,
this is what you see.

00:04:30.990 --> 00:04:35.500
We have asset management, imaging,
software distribution, remote control,

00:04:35.500 --> 00:04:39.400
usage management, license management,
patching, upgrading,

00:04:39.460 --> 00:04:40.860
and finally help desk management.

00:04:40.960 --> 00:04:43.070
Breaking it down,
if we look at each of these,

00:04:43.070 --> 00:04:44.960
just a quick idea and perspective.

00:04:44.960 --> 00:04:45.820
Asset management.

00:04:45.820 --> 00:04:48.240
Where's my stuff?

00:04:49.700 --> 00:04:51.440
We got 52 scanners in last week.

00:04:51.480 --> 00:04:52.320
I saw them in the warehouse.

00:04:52.320 --> 00:04:52.910
Where are they?

00:04:56.680 --> 00:04:59.340
All those USB cameras,
all those FireWire,

00:04:59.340 --> 00:05:01.860
the digital cameras you got in
because somebody ordered them and

00:05:01.860 --> 00:05:04.450
they needed them and they disappeared
and you got the asset tags on

00:05:04.450 --> 00:05:06.120
your desk but the boxes are gone.

00:05:06.120 --> 00:05:08.910
Imaging.

00:05:08.910 --> 00:05:10.980
How do I deploy functional systems?

00:05:10.980 --> 00:05:12.660
How do we ship Macs?

00:05:12.660 --> 00:05:13.640
We.

00:05:13.640 --> 00:05:16.880
Kitchen table systems, right?

00:05:16.880 --> 00:05:19.700
They come equipped with things like,
you know,

00:05:20.500 --> 00:05:22.590
Software to manage your finances.

00:05:22.680 --> 00:05:24.900
Games to keep you occupied.

00:05:24.900 --> 00:05:27.840
Do they actually come equipped with
the stuff that you're going to deploy

00:05:27.910 --> 00:05:31.500
them to all your schools or to all
of your employees in the cubes?

00:05:33.260 --> 00:05:34.100
Probably not.

00:05:34.100 --> 00:05:38.380
So how do we deploy functional
systems when we're done?

00:05:38.380 --> 00:05:39.860
Software distribution.

00:05:39.860 --> 00:05:41.890
Once I have systems out and
deployed and I upgrade my

00:05:41.890 --> 00:05:44.970
software or work with things,
how do I get complete deployment

00:05:44.970 --> 00:05:46.300
sets of software put together?

00:05:46.300 --> 00:05:50.820
How do I layer stuff on top
of what the core systems are?

00:05:51.050 --> 00:05:55.190
Remote Control: One Example:
How Do Teachers Reach Out and

00:05:55.190 --> 00:05:56.370
Touch Students?

00:05:57.010 --> 00:05:59.980
How does the administrator reach out
and send a message to people and say,

00:05:59.980 --> 00:06:03.390
"Hey, here's things that I need done,"
or send a message to somebody,

00:06:03.400 --> 00:06:05.780
or observe machines down
in a shared library?

00:06:05.780 --> 00:06:07.770
How do I watch it?

00:06:09.310 --> 00:06:10.240
Usage management.

00:06:10.240 --> 00:06:12.360
How do I preserve the user experience?

00:06:12.360 --> 00:06:18.030
User experience preservation
can range from the...

00:06:18.700 --> 00:06:20.580
Be your own self on your own computer.

00:06:20.580 --> 00:06:22.160
IT guys love that, don't you?

00:06:22.160 --> 00:06:24.360
Wouldn't you love to have 51
different completely unique users

00:06:24.400 --> 00:06:26.640
doing whatever they want with
their computers at any time?

00:06:28.400 --> 00:06:30.000
Or then there's the Klingon approach.

00:06:30.000 --> 00:06:34.180
You get text at it.

00:06:36.350 --> 00:06:38.300
And we turned off the speech part.

00:06:38.300 --> 00:06:42.580
License management.

00:06:42.580 --> 00:06:44.290
How do I stay legal?

00:06:44.500 --> 00:06:47.240
In education, we always love that.

00:06:47.280 --> 00:06:48.920
We get a teacher who
goes to a conference.

00:06:48.920 --> 00:06:51.410
Somebody gives them an
NFR copy of a project,

00:06:51.460 --> 00:06:53.550
some sort of software to test out.

00:06:53.590 --> 00:06:54.770
Say, hey, test this out.

00:06:54.790 --> 00:06:57.240
Convince your school board
you need it and everything.

00:06:57.240 --> 00:06:59.120
Next thing you know,
there's a thousand copies of it across

00:06:59.120 --> 00:07:01.620
the school district and some lawyer from
the company is standing there going,

00:07:01.620 --> 00:07:02.090
hmm.

00:07:04.610 --> 00:07:05.370
Guess what you just bought?

00:07:05.420 --> 00:07:07.940
Patching and upgrading.

00:07:07.940 --> 00:07:10.960
Not that we release upgrades
on a regular basis or anything,

00:07:10.960 --> 00:07:12.430
but...

00:07:13.050 --> 00:07:15.370
You know,
how do I maintain my deployed systems?

00:07:15.370 --> 00:07:17.330
And that's back to how
often I go through this.

00:07:17.330 --> 00:07:20.620
And then the help desk,
tracking incidents, doing it formally,

00:07:20.620 --> 00:07:23.770
actually knowing how many times
different systems had a problem,

00:07:23.880 --> 00:07:26.830
you know, how many system freezes,
how many network cards,

00:07:26.860 --> 00:07:28.350
how many things went down.

00:07:30.240 --> 00:07:33.560
So if we run this through the
cycle throughout the year,

00:07:33.560 --> 00:07:35.620
starting today,
let's just use that as an example.

00:07:35.620 --> 00:07:36.160
We're going to sit down.

00:07:36.160 --> 00:07:39.560
We're going to review everything we have,
look at what we got,

00:07:39.630 --> 00:07:41.790
look at our mission statement,
and go back and evaluate

00:07:41.870 --> 00:07:43.020
the needs of our users,
right?

00:07:43.200 --> 00:07:45.950
Primary purpose, accomplish the mission,
make sure that the users

00:07:45.950 --> 00:07:47.130
can get their jobs done.

00:07:47.350 --> 00:07:48.400
Teachers can teach.

00:07:48.460 --> 00:07:49.720
Students can learn.

00:07:49.790 --> 00:07:55.510
The cube rats can do whatever the
cube rats do and go on from there.

00:07:55.550 --> 00:07:58.990
Then we determine the hardware
and software required.

00:08:00.150 --> 00:08:02.120
And we begin creating images.

00:08:02.120 --> 00:08:03.290
Of course,
the part I left out of this was

00:08:03.290 --> 00:08:05.680
the great part of we determine the
hardware and software required,

00:08:05.680 --> 00:08:08.440
and then we go and beg and plead
for the money to get the stuff,

00:08:08.440 --> 00:08:10.300
but that's separate of the IT cycle.

00:08:10.300 --> 00:08:13.950
Then we test the configurations,
and hopefully we don't iterate

00:08:13.950 --> 00:08:17.040
back and forth to the image
creation too many times.

00:08:17.040 --> 00:08:18.730
When we're done,
we've got some images and

00:08:18.730 --> 00:08:19.800
we're ready to deploy.

00:08:19.800 --> 00:08:21.680
We go out and we get the systems out.

00:08:21.680 --> 00:08:22.850
Everybody's happy.

00:08:22.850 --> 00:08:26.080
Everybody's all, you know, wow,
the desktops look great.

00:08:26.080 --> 00:08:27.470
All the stuff works.

00:08:28.040 --> 00:08:30.050
Then we spend the rest of our
lives managing the systems,

00:08:30.050 --> 00:08:33.530
and we're sitting there going day to day,
managing systems and doing updates

00:08:33.530 --> 00:08:36.280
and repairs and managing systems
and doing updates and repairs,

00:08:36.280 --> 00:08:38.260
and all of a sudden,
somebody looks at the calendar and says,

00:08:38.260 --> 00:08:40.500
wow, time flies when you're having fun.

00:08:44.290 --> 00:08:46.990
So in order to accomplish this,
what we're going to talk about

00:08:46.990 --> 00:08:51.240
today is some lifecycle task
solutions from the enterprise side.

00:08:51.240 --> 00:08:55.900
These are some commercial solution
providers that do something unique.

00:08:55.900 --> 00:08:58.320
Over the last couple of years,
we've talked about lots of

00:08:58.320 --> 00:08:59.900
different solution providers.

00:08:59.900 --> 00:09:04.040
Today, what we're going to talk about
specifically is these are four companies

00:09:04.040 --> 00:09:08.960
that support Macs and Windows machines
in an environment where we can have

00:09:08.960 --> 00:09:11.460
an OS X architecture from top to bottom.

00:09:12.360 --> 00:09:15.110
OS X server-based.

00:09:15.650 --> 00:09:19.130
Even if they offer a Windows Server base,
but they also offer OS X Server base

00:09:19.130 --> 00:09:25.760
solutions that have OS X Admin,
OS X Client, and they support Windows.

00:09:28.940 --> 00:09:31.920
The four companies we're going
to talk about are Sassafras with

00:09:32.000 --> 00:09:36.490
their K2 License Management Suite,
FileWave with FileWave and Asset

00:09:36.490 --> 00:09:42.650
Trustee Jamf with their Casper Suite,
and LandRev with the

00:09:42.650 --> 00:09:42.650
LandRev Management Suite.

00:09:44.230 --> 00:09:46.200
K2, Key Auditor and Key Server.

00:09:46.200 --> 00:09:47.280
What do they do?

00:09:47.280 --> 00:09:51.520
Well, from the task of asset management,
what we can do is perform complete

00:09:51.520 --> 00:09:54.830
inventories of all the software
that I have on my PCs and my Macs.

00:09:54.830 --> 00:09:57.560
I can see everything that's
on all of my systems,

00:09:57.560 --> 00:09:59.220
every single executable.

00:09:59.220 --> 00:10:03.120
I can also go back and I can perform
incremental scans based on time.

00:10:03.120 --> 00:10:06.540
I can say once a week,
just check and make sure nothing new has

00:10:06.540 --> 00:10:08.910
shown up and so forth on my machines.

00:10:08.910 --> 00:10:11.360
And I can create reports from this.

00:10:11.360 --> 00:10:14.180
And we have web-based and
console-based reports.

00:10:14.200 --> 00:10:17.850
We can host the process,
the database that stores this on

00:10:17.850 --> 00:10:22.840
a bunch of different machines,
OS X, Windows, Linux, or even NetWare.

00:10:24.790 --> 00:10:29.110
From a usage management task perspective,
supporting multiple groups and divisions

00:10:29.110 --> 00:10:32.280
or sets of computers out there,
and the applications are

00:10:32.280 --> 00:10:35.680
location independent,
so when we scan for the applications,

00:10:35.680 --> 00:10:38.480
it doesn't necessarily have to
be in the applications folder.

00:10:38.480 --> 00:10:41.330
We'll pick up things in somebody's
home directory and so forth.

00:10:41.410 --> 00:10:44.600
We can deny access to
unauthorized software,

00:10:44.660 --> 00:10:48.540
and we can schedule usage of
software and reserve use of

00:10:48.550 --> 00:10:53.360
software based on the needs of the
site or the needs of the users.

00:10:54.060 --> 00:10:57.210
We can do software deployment
and usage reports and go back

00:10:57.210 --> 00:11:00.730
and see what's been deployed and
what's in use at any one time.

00:11:00.900 --> 00:11:04.940
From a license management perspective,
we can centrally deploy and

00:11:04.940 --> 00:11:06.890
manage software licenses.

00:11:07.020 --> 00:11:10.530
Big deal of being able to say,
I've got unlimited site licenses,

00:11:10.540 --> 00:11:11.510
I want to track those.

00:11:11.510 --> 00:11:13.400
I've got node lock licenses.

00:11:13.400 --> 00:11:15.820
This computer is allowed
to run this software,

00:11:15.830 --> 00:11:17.010
I want to track that.

00:11:17.090 --> 00:11:19.250
Or a concurrent use license,
a floating one.

00:11:19.260 --> 00:11:22.920
I have 30 licenses for this,
and I've got 500 different machines.

00:11:22.920 --> 00:11:25.640
So 30 people at any one
time can run the software.

00:11:28.280 --> 00:11:32.240
We can also manage multiple profiles
for the exact same application.

00:11:32.240 --> 00:11:36.220
So we have different versions of an
application deployed based on licensing

00:11:36.250 --> 00:11:38.460
and purchasing plans and so forth.

00:11:38.540 --> 00:11:43.170
We can have different license management
for different versions of the same

00:11:43.170 --> 00:11:48.160
app and manage and reclaim software
licenses that have been dumped where

00:11:48.160 --> 00:11:51.100
somebody is no longer using the software.

00:11:51.190 --> 00:11:54.420
They've stopped running it and
we can check and see it's not in

00:11:54.430 --> 00:11:57.850
use anymore so we can reassign
that license to someone else.

00:11:58.200 --> 00:12:00.230
Lots and lots of reporting.

00:12:00.230 --> 00:12:01.810
Make management really happy.

00:12:01.810 --> 00:12:03.200
Look, we're in compliance.

00:12:05.300 --> 00:12:07.960
Help desk management,
being able to do audits of the hardware,

00:12:07.960 --> 00:12:11.290
know where your stuff is,
and let the help desk guys know what

00:12:11.290 --> 00:12:13.250
types of machines they're working on.

00:12:13.260 --> 00:12:16.780
And then being able to do role
and scope-based administration,

00:12:16.780 --> 00:12:20.280
basically looking at it from
a task perspective or from,

00:12:20.280 --> 00:12:23.150
you know,
I want to know if this task is being

00:12:23.150 --> 00:12:27.700
met or if all the computers in a
single office are meeting the criteria.

00:12:27.700 --> 00:12:31.440
There's a widget for it to be
able to go and look at stuff,

00:12:31.500 --> 00:12:34.280
web reporting, and RSS report feeds.

00:12:36.950 --> 00:12:40.020
FileWave has Asset
Trustee and FileWave itself.

00:12:40.070 --> 00:12:43.740
From an asset management perspective,
what we've got is the ability

00:12:43.740 --> 00:12:46.980
to automatically gather and
store all the information about

00:12:46.980 --> 00:12:50.340
our hardware and software,
complete asset management.

00:12:50.340 --> 00:12:55.120
The client itself will actually initiate
the scan and then report back to the

00:12:55.120 --> 00:12:57.830
server for storing of the data later on.

00:12:57.840 --> 00:13:01.360
And OS X Server is very
well supported with this.

00:13:02.480 --> 00:13:05.730
License management, maintaining data on
our license compliance.

00:13:05.740 --> 00:13:07.360
How many licenses do we have deployed?

00:13:07.360 --> 00:13:08.350
Where is it being used?

00:13:08.350 --> 00:13:12.190
How many do I have that
I have to watch out for?

00:13:12.200 --> 00:13:14.880
And working with FileWave,
the application,

00:13:14.880 --> 00:13:18.200
if you find somebody that's
installed licenses or installed

00:13:18.200 --> 00:13:21.430
software where they shouldn't,
FileWave can go out and just very

00:13:21.440 --> 00:13:24.360
nicely remove the application
from that machine saying,

00:13:24.360 --> 00:13:25.430
no, no, no, you're not allowed.

00:13:27.380 --> 00:13:31.520
From a software distribution perspective,
what FileWave allows me to

00:13:31.520 --> 00:13:33.360
do is create a file set.

00:13:33.400 --> 00:13:37.150
And these are self-healing
sets of applications where

00:13:37.150 --> 00:13:40.780
I put them out on a machine,
and if anybody messes with it,

00:13:40.780 --> 00:13:44.380
somebody tears out the help
folder or removes a piece of an

00:13:44.380 --> 00:13:47.430
application bundle or whatever,
the file set itself will actually

00:13:47.430 --> 00:13:51.540
go back and pull down all the rest
of the contents and replace itself

00:13:51.540 --> 00:13:56.460
and heal the set that I've sent
out to the different computers.

00:13:57.170 --> 00:14:02.230
We can create snapshots to do baseline
imaging and then add layers of file

00:14:02.230 --> 00:14:06.670
sets on top of that where we layer on,
you know, here's what the teachers need

00:14:06.670 --> 00:14:09.630
above what the students need,
here's what the admins need,

00:14:09.640 --> 00:14:13.280
here's what the accounting guys need
over top of what the secretaries need,

00:14:13.280 --> 00:14:14.320
and so forth and so on.

00:14:16.810 --> 00:14:18.620
From a patching and
upgrading point of view,

00:14:18.620 --> 00:14:24.060
you can also scan the computers based on
the asset trustee information and say,

00:14:24.060 --> 00:14:27.020
hey, these computers need all
of these different updates,

00:14:27.020 --> 00:14:29.740
so let's build a set for
these and deploy that.

00:14:29.810 --> 00:14:34.490
And we can associate that set of
computers that comes back from the report

00:14:34.490 --> 00:14:36.920
with an upgrade or a patch file set.

00:14:36.980 --> 00:14:40.630
And then also look at the reports
and get real-time data back of who's

00:14:40.630 --> 00:14:44.640
been upgraded and who hasn't so that
we can keep track of the machines.

00:14:44.800 --> 00:14:47.750
Maybe somebody keeps turning certain
machines off and we have to go after

00:14:47.840 --> 00:14:49.660
them to make sure they've been upgraded.

00:14:52.060 --> 00:14:54.060
FileWave is also integrated with ARD.

00:14:54.060 --> 00:14:55.940
There are several tasks
you can actually run,

00:14:55.940 --> 00:15:00.410
such as installing a FileWave client
automatically using ARD or running

00:15:00.750 --> 00:15:05.320
post-flight scripts with the FileWave
client to be able to do updates.

00:15:08.280 --> 00:15:11.740
Casper from Jamf Software.

00:15:11.740 --> 00:15:16.140
From an asset management perspective,
what Casper gives us is the ability

00:15:16.140 --> 00:15:20.650
to create reports using either their
recon application or the Casper

00:15:20.680 --> 00:15:25.220
application itself for Mac OS 8,
9, 10, and 11.

00:15:25.510 --> 00:15:27.060
and Windows systems.

00:15:27.140 --> 00:15:30.240
I can go out and I can
do different levels.

00:15:30.240 --> 00:15:34.990
I can establish different levels
of administrators and give them

00:15:34.990 --> 00:15:39.880
access to different types of data
depending upon who it is that I need

00:15:39.880 --> 00:15:45.250
to scan for this at a building level,
at a district level, at a site level,

00:15:45.260 --> 00:15:47.490
campus level, and so forth.

00:15:47.490 --> 00:15:50.480
And I can create scheduled reports
or triggered reports based on a

00:15:50.480 --> 00:15:50.480
certain criteria on that machine.

00:15:50.850 --> 00:15:53.220
From an imaging and software
distribution point of view,

00:15:53.220 --> 00:15:56.590
I can create software
distribution packages,

00:15:56.590 --> 00:15:59.020
literally point and click,
snapshot a machine,

00:15:59.020 --> 00:16:03.900
install a bunch of stuff, click a button,
and it creates an installer kit for me.

00:16:03.920 --> 00:16:08.680
And the configurations are entirely
based on what I need on that specific

00:16:08.680 --> 00:16:10.930
class of machine for my users.

00:16:10.940 --> 00:16:14.390
And the packages that I create
can be in Casper format to

00:16:14.480 --> 00:16:18.750
be handled by Casper itself,
or I can create PKGs that I can use

00:16:18.750 --> 00:16:21.460
for deployment at another point.

00:16:21.480 --> 00:16:25.270
So if you have Vice installers
and a bunch of other drag-and-drop

00:16:25.270 --> 00:16:28.280
installers and so forth,
you go and do all that,

00:16:28.340 --> 00:16:30.600
and when you're done,
I can create a single package installer

00:16:30.600 --> 00:16:34.830
or a Casper installer package from
all of those different pieces and

00:16:34.830 --> 00:16:37.000
have a single unified package.

00:16:37.370 --> 00:16:43.790
From a remote control perspective,
Casper supports the ability to do

00:16:43.790 --> 00:16:45.960
VNC support with SSH tunneling.

00:16:46.010 --> 00:16:51.440
I can also do things such as scheduling
and running remote Unix commands,

00:16:51.440 --> 00:16:55.430
reset local passwords,
and flush caches on a system,

00:16:55.520 --> 00:16:58.200
fix permissions, and so forth.

00:17:00.110 --> 00:17:04.890
From a license management perspective,
I can maintain a complete database of all

00:17:04.890 --> 00:17:08.800
licenses that are deployed in my systems,
and I can also go search for

00:17:09.070 --> 00:17:11.850
things that I need to check on,
such as, you know, do I have all the

00:17:11.910 --> 00:17:14.150
correct fonts available,
all the correct plug-ins for

00:17:14.150 --> 00:17:16.560
my different applications,
do I have all the correct

00:17:16.630 --> 00:17:18.260
sub-apps that I need to launch.

00:17:18.260 --> 00:17:20.500
And when I'm done,
I can go back and view the

00:17:20.500 --> 00:17:22.730
results of that and say,
I want to look at it

00:17:22.780 --> 00:17:25.780
specifically by the application,
or I want to look at it by

00:17:25.780 --> 00:17:28.150
a specific type of system,
like, you know,

00:17:28.150 --> 00:17:29.880
are all my iBooks current.

00:17:30.790 --> 00:17:32.500
From a patching and
upgrading point of view,

00:17:32.500 --> 00:17:35.840
when I create my patches
or my upgrade sets,

00:17:35.860 --> 00:17:39.870
I can do that and I can make
it completely unattended.

00:17:40.040 --> 00:17:45.360
I always keep saying unintended,
but sometimes that happens too.

00:17:45.440 --> 00:17:47.580
The unattended upgrades,
behind the scenes,

00:17:47.630 --> 00:17:48.940
the user doesn't know it's happening.

00:17:48.940 --> 00:17:50.950
It just goes out there
and makes it happen.

00:17:51.000 --> 00:17:54.100
I can create different sets
based on different computers,

00:17:54.100 --> 00:17:59.490
such as my G5s versus my G4s
versus my Intel boxes and so forth.

00:18:01.960 --> 00:18:03.110
LandRev.

00:18:03.110 --> 00:18:05.100
The LandRev Management Suite.

00:18:05.190 --> 00:18:07.480
Asset Management.

00:18:07.510 --> 00:18:13.240
Real-time or scheduled periodic
updates of all of my inventory.

00:18:13.240 --> 00:18:14.090
Where's my stuff?

00:18:16.160 --> 00:18:20.960
and the ability to take and create custom
reports by just dragging and dropping all

00:18:20.960 --> 00:18:24.450
the different data criteria into columns,
and I can just create custom reports

00:18:24.490 --> 00:18:26.090
automatically for anybody to view.

00:18:28.340 --> 00:18:31.900
From an imaging perspective,
one of the really fascinating

00:18:31.900 --> 00:18:38.210
things I can do here is a complete
user unaware installation.

00:18:38.210 --> 00:18:42.150
I can completely upgrade a
system or install an entire

00:18:42.150 --> 00:18:45.340
system underneath a user while
they're operating the computer.

00:18:45.340 --> 00:18:47.740
And then I send them a quick
message on the screen and say,

00:18:47.760 --> 00:18:49.420
oh, by the way, I need to reboot you.

00:18:49.420 --> 00:18:51.300
You've just been upgraded to Leopard.

00:18:55.640 --> 00:18:59.520
And I can take those disk image sets
that I'm using and I can edit those

00:18:59.660 --> 00:19:04.270
offline and edit them in place and
then just go ahead and throw those

00:19:04.270 --> 00:19:09.710
back into the fray if I decide,
you know, like perhaps we ship, you know,

00:19:09.710 --> 00:19:11.000
a dot update.

00:19:13.520 --> 00:19:16.840
Software distribution,
patching and upgrading all

00:19:16.900 --> 00:19:20.230
fall together in the task set
with being able to literally

00:19:20.480 --> 00:19:22.940
deploy any installation content.

00:19:23.050 --> 00:19:29.120
PKGs, MSIs, EXEs, the MSP formats,
all of the different formats for all the

00:19:29.120 --> 00:19:31.400
different installers that are out there.

00:19:31.480 --> 00:19:34.960
Mac and Windows,
all together in the same environment.

00:19:35.050 --> 00:19:37.840
To be able to do bandwidth throttling,

00:19:37.940 --> 00:19:40.770
I know that we can't all wait
until 10 o'clock at night

00:19:40.840 --> 00:19:43.440
to do a lot of this stuff,
but then during the day,

00:19:43.460 --> 00:19:46.820
turning it on full bore leaves the
phone ringing with everybody screaming,

00:19:46.820 --> 00:19:49.650
the internet's down, right?

00:19:49.660 --> 00:19:50.820
One of my favorites.

00:19:50.820 --> 00:19:53.920
You go and look out the window, well,
it looks okay to me.

00:19:58.400 --> 00:20:10.600
[Transcript missing]

00:20:10.960 --> 00:20:14.830
A schedule for those things to go out
when less people are on the network.

00:20:14.940 --> 00:20:19.420
And literally to be able to create
a one-click patch management.

00:20:19.420 --> 00:20:22.920
I just bring everything in and click,
say, create a patch upgrade,

00:20:23.020 --> 00:20:24.360
create a kit from this.

00:20:26.470 --> 00:20:29.340
From a usage management perspective,
I can track user patterns.

00:20:29.340 --> 00:20:32.490
Who's using what software at what time?

00:20:33.000 --> 00:20:58.500
[Transcript missing]

00:20:58.970 --> 00:21:03.370
From a license management perspective,
I can monitor all my application usage.

00:21:03.380 --> 00:21:05.140
I can make sure everybody's
staying straight.

00:21:05.140 --> 00:21:08.660
Nobody's snuck off to Walmart and
installed something they

00:21:08.660 --> 00:21:12.550
shouldn't have on the company
network or on the classroom lab.

00:21:13.140 --> 00:21:16.760
I can track the per-seat and
concurrent license usage,

00:21:16.760 --> 00:21:21.110
and if the application supports it,
I can track all sorts of extra details,

00:21:21.120 --> 00:21:24.500
such as the installation date,
the activation date of the software,

00:21:24.500 --> 00:21:28.240
what the serial number is,
and volume license information.

00:21:28.240 --> 00:21:31.610
If the application supports that,
I can make that happen, too.

00:21:31.620 --> 00:21:34.100
I can also track and
manage missing software.

00:21:34.100 --> 00:21:36.570
If somebody goes in and says, hey,
I need to clean my machine up

00:21:36.570 --> 00:21:38.680
so they remove a whole bunch
of stuff from the machine,

00:21:38.680 --> 00:21:40.780
I can go back and say, hey,
get a flag that says a

00:21:40.780 --> 00:21:42.190
bunch of stuff's missing.

00:21:42.850 --> 00:21:43.650
Let's take care of that.

00:21:45.110 --> 00:21:47.870
So with that,
what I want to do is bring some

00:21:47.870 --> 00:21:53.130
much brighter people up here to talk
about how they've actually deployed

00:21:53.130 --> 00:21:55.040
this software in their environments.

00:21:55.080 --> 00:21:59.580
And I have four really good
customers with me here today.

00:21:59.580 --> 00:22:01.280
Jim Phillips from the
University of Pacific,

00:22:01.280 --> 00:22:03.960
Mike Kneebone from the
Metropolitan School District of

00:22:03.960 --> 00:22:07.410
Washington Township,
Josh Kaiser from Cabela's,

00:22:07.510 --> 00:22:10.890
and Ted Colgate from TBWA Worldwide.

00:22:11.400 --> 00:22:13.640
And I'm going to bring them each up
here and give them a few minutes to

00:22:13.640 --> 00:22:16.020
tell you about what they're doing
from their solution perspective.

00:22:16.020 --> 00:22:18.370
So let's start with Jim Phillips.

00:22:27.420 --> 00:22:29.590
I'm Jim Phillips,
and I'm the Director of Educational

00:22:29.590 --> 00:22:31.640
Technology Services at the
University of the Pacific.

00:22:31.640 --> 00:22:36.240
It's a private institution
with about 6,000 students

00:22:36.240 --> 00:22:38.520
spread over three campuses.

00:22:38.520 --> 00:22:41.420
We have a dental school
right here in San Francisco.

00:22:41.420 --> 00:22:44.680
We've got a nice law
school in Sacramento.

00:22:44.680 --> 00:22:47.730
And then the rest of our
academic units are in Stockton,

00:22:47.730 --> 00:22:50.630
California, beautiful Stockton,
California,

00:22:50.630 --> 00:22:54.780
where we have a school of education,
an undergraduate college,

00:22:54.780 --> 00:22:57.770
a conservatory of music,
a school of engineering

00:22:57.770 --> 00:23:00.540
and computer sciences,
our school of business,

00:23:00.540 --> 00:23:04.740
a school of pharmacy,
and a school of international studies.

00:23:04.740 --> 00:23:09.560
We also have libraries,
which are big users of technology.

00:23:09.560 --> 00:23:13.340
With regard to support,
we use a decentralized model.

00:23:13.340 --> 00:23:18.720
We have local technology support
working with the central IT office.

00:23:18.720 --> 00:23:22.200
And some of the academic units don't
quite have enough money to have the

00:23:22.200 --> 00:23:24.600
local technology support people,
so they come directly to our central IT.

00:23:24.600 --> 00:23:26.980
directly to our central IT.

00:23:27.910 --> 00:23:31.450
With regard to faculty and
staff machines that we support,

00:23:31.450 --> 00:23:35.920
San Francisco and Sacramento are
entirely Windows-based.

00:23:35.920 --> 00:23:40.710
There's about 420 PCs in
San Francisco and another

00:23:40.720 --> 00:23:43.480
275 PCs in Sacramento.

00:23:43.720 --> 00:23:47.900
Down on the Stockton campus,
we have a mix of platforms,

00:23:47.900 --> 00:23:55.380
2,000 Windows PCs, another 300-plus Macs,
about 200 thin clients that use

00:23:55.480 --> 00:23:57.980
four terminal servers centrally.

00:23:57.980 --> 00:24:00.750
And then there's a smattering
of Linux and Unix users,

00:24:00.750 --> 00:24:04.210
primarily in the School of
Engineering and Computer Sciences.

00:24:04.220 --> 00:24:08.270
There's growing interest in thin
client for security reasons,

00:24:08.270 --> 00:24:12.570
and also among our students,
there's growing interest in Macs.

00:24:14.000 --> 00:24:17.560
So our problem was when I arrived
three years ago is we weren't

00:24:17.570 --> 00:24:20.500
leveraging our concurrent licenses.

00:24:20.500 --> 00:24:23.900
We were purchasing the
licenses with one-time money.

00:24:23.900 --> 00:24:25.980
Often we had outdated versions.

00:24:25.980 --> 00:24:28.400
And I really wanted to
operationalize the expense,

00:24:28.400 --> 00:24:31.180
and when we bought the license,
I wanted to make sure we got on

00:24:31.180 --> 00:24:33.000
the maintenance contract as well.

00:24:33.000 --> 00:24:38.420
So we needed a way to track usage
of our concurrently licensed

00:24:38.420 --> 00:24:40.300
software such as Acrobat,
Dreamweaver, and Photoshop.

00:24:40.790 --> 00:24:43.300
At the local level,
our technology support providers

00:24:43.300 --> 00:24:47.430
also wanted to track usage of their
discipline-specific applications,

00:24:47.430 --> 00:24:51.280
and sometimes these were purchased
in very small concurrent license

00:24:51.280 --> 00:24:53.810
quantities or even individual licenses.

00:24:54.550 --> 00:24:56.760
And did I mention that
we were understaffed?

00:24:56.760 --> 00:25:00.920
So for us,
the Sassafras solution was a good one.

00:25:00.920 --> 00:25:04.430
We were existing K2 users,
but we were underlicensed for

00:25:04.430 --> 00:25:08.970
a three-campus deployment,
and we wanted to maintain our ability to

00:25:08.970 --> 00:25:14.250
control our centrally licensed software
while extending the possibility to

00:25:14.250 --> 00:25:19.380
the local technology support people
to manage their licenses as well.

00:25:19.380 --> 00:25:22.940
And Sassafras actually worked
with us to develop this in

00:25:22.940 --> 00:25:25.760
their newest version of K2 6.1.

00:25:25.760 --> 00:25:28.030
It's the role-based
administrative feature.

00:25:30.040 --> 00:25:33.730
So we were able to resolve many of
our issues and we're actually able to

00:25:33.730 --> 00:25:36.200
do it in less time with fewer people.

00:25:36.200 --> 00:25:40.150
And we plan to deploy on a larger
scale this year and enable the local

00:25:40.170 --> 00:25:45.480
technology support people to have the
administrative access that they need.

00:25:45.740 --> 00:25:50.360
In addition to the license management,
there are huge benefits for our security

00:25:50.360 --> 00:25:54.980
officer who can now do auditing and he
can also quickly notify specific users if

00:25:54.980 --> 00:25:57.500
they are using a vulnerable application.

00:25:57.690 --> 00:26:00.680
So in conclusion, the usage reports are
going to be very useful.

00:26:00.680 --> 00:26:03.900
We're going to know what
we're currently using.

00:26:03.900 --> 00:26:06.180
That's going to help us to predict
what we're going to need in the future.

00:26:06.180 --> 00:26:08.660
It was good to work with Sassafras.

00:26:08.660 --> 00:26:12.780
They provide great support,
and they were willing to change

00:26:12.780 --> 00:26:16.750
something in a newer version
just because we wanted it.

00:26:16.840 --> 00:26:22.180
So that was kind of refreshing, you know,
to have our needs addressed.

00:26:22.250 --> 00:26:24.600
And it can often seem
like no one's listening,

00:26:24.680 --> 00:26:29.210
but in this case,
they listened and they changed it.

00:26:29.920 --> 00:26:34.220
So we're really going to look forward to
this role-based administrative feature,

00:26:34.220 --> 00:26:36.340
and we'll be deploying it again,
like I said, this year.

00:26:36.340 --> 00:26:39.440
And Sassafras actually dubbed
it the University of the

00:26:39.440 --> 00:26:43.460
Pacific feature because I kept
telling them we needed it so badly.

00:26:43.460 --> 00:26:45.290
But thank you very much.

00:26:45.290 --> 00:26:46.660
That's my story.

00:26:53.180 --> 00:26:54.650
Next,
I want to bring up Mike Kneebone from

00:26:54.710 --> 00:26:58.000
the Metropolitan School District,
Washington Township to talk

00:26:58.040 --> 00:27:03.530
about how much fun it is in
education to be an IT guy.

00:27:08.540 --> 00:27:10.900
I'll keep it brief because
you're that close to the beer.

00:27:10.900 --> 00:27:15.160
But I am Mike Nevone,
Technology Coordinator in

00:27:15.160 --> 00:27:18.400
North Central High School,
Washington Township.

00:27:18.430 --> 00:27:20.370
We're based in Indianapolis.

00:27:20.380 --> 00:27:25.520
We have 10,000 students
spread across 14 buildings.

00:27:25.520 --> 00:27:29.210
It's a fairly progressive township.

00:27:29.270 --> 00:27:32.360
Currently,
we're ranked in the top 1.5% in all

00:27:32.470 --> 00:27:36.720
public schools in the country and
number one in the state of Indiana.

00:27:37.720 --> 00:27:43.870
But we fell into the same kind of
pattern a lot of K-12 institutions did,

00:27:44.040 --> 00:27:46.430
where we did a good job
acquiring technology.

00:27:46.430 --> 00:27:50.930
We did a great job deploying it,
but really didn't have a long-term

00:27:50.930 --> 00:27:53.020
cohesive management plan.

00:27:53.020 --> 00:27:58.390
So quickly, we grew to 4,400 clients,
70% Mac, 30% PC.

00:27:58.390 --> 00:28:01.500
And every time there
was a major deployment,

00:28:01.500 --> 00:28:06.480
we find ourselves going around
and touching every single machine.

00:28:06.940 --> 00:28:10.490
Sometimes not even major deployments,
you know, some minor adjustments.

00:28:10.490 --> 00:28:13.090
And I'm sure we're unique
in that and that most people

00:28:13.160 --> 00:28:14.550
here don't have to do that.

00:28:14.620 --> 00:28:18.000
But it was really killing us.

00:28:18.000 --> 00:28:20.930
So at the height of my
frustration last year,

00:28:20.930 --> 00:28:25.560
Eric Wheatley from Apple introduced
me to Oliver Noss at FileWave.

00:28:25.660 --> 00:28:31.250
And they said that their application
would manage all those deployments,

00:28:31.250 --> 00:28:35.240
make them self-healing,
worked on both PC and Mac,

00:28:36.160 --> 00:28:40.200
would give you a rollback function,
and it was easy to use.

00:28:41.700 --> 00:28:44.150
Well, it seemed to hit all of our
problems that we were having,

00:28:44.160 --> 00:28:47.150
but it sounded like a brochure,
and nothing ever works

00:28:47.200 --> 00:28:48.190
that way in my environment.

00:28:48.200 --> 00:28:53.200
So we wanted to install it and run a
test on our machines on our network.

00:28:53.200 --> 00:28:56.720
So we ran it for 60 days
in a mixed environment,

00:28:56.740 --> 00:28:59.690
and before we decided, yeah,
this is what we need to

00:28:59.690 --> 00:29:01.600
deploy across the township.

00:29:02.330 --> 00:29:07.110
One of the main problems for me was
that our other applications that

00:29:07.110 --> 00:29:13.040
we'd used in the past for similar
operations didn't have support,

00:29:13.040 --> 00:29:16.710
were very complicated to use,
a really steep learning curve.

00:29:16.720 --> 00:29:20.460
So I find myself the only one
able to deploy these packages,

00:29:20.460 --> 00:29:24.890
deploy settings, and I needed something
I could hand off easier.

00:29:25.760 --> 00:29:30.540
So now we can have a tech up and running
in about a half a day creating file

00:29:30.540 --> 00:29:32.820
sets and deploying software and updates.

00:29:34.800 --> 00:29:38.850
One of the other issues was
that our mobile users and

00:29:38.850 --> 00:29:43.070
what I'll call lazy users,
because we'd have deployments

00:29:43.070 --> 00:29:47.160
scheduled or going out,
and they would tie up a machine

00:29:47.250 --> 00:29:50.710
while it's being deployed,
and patient users would just shut it off,

00:29:50.710 --> 00:29:54.060
crash it in the middle,
not like it was important.

00:29:54.060 --> 00:30:00.110
Or laptop user closes their laptop,
takes it off network,

00:30:00.120 --> 00:30:02.890
and either the deployment would fail,
or the

00:30:03.400 --> 00:30:04.400
Well, it would fail.

00:30:04.400 --> 00:30:07.820
The deployment would fail or they'd
miss the installation altogether.

00:30:07.820 --> 00:30:10.960
So now with this client-based setup,
it's a daemon that

00:30:10.960 --> 00:30:12.600
runs in the background.

00:30:12.600 --> 00:30:14.400
So if the laptop user
closed their laptop,

00:30:14.400 --> 00:30:17.030
takes it off the network,
it's not a problem because that

00:30:17.030 --> 00:30:18.900
information resides with the client.

00:30:18.900 --> 00:30:21.530
When they fire it back up,
it picks up where it left off.

00:30:21.530 --> 00:30:26.240
Once it gets the whole file set,
activates it, and it's running.

00:30:26.400 --> 00:30:31.940
This also gave us some
unique opportunities.

00:30:31.940 --> 00:30:36.260
One was that since it didn't
tie up the machine anymore,

00:30:36.260 --> 00:30:38.180
we were able to deploy,
like in our setting,

00:30:38.180 --> 00:30:41.320
we deployed iLife 06,
fully installed and customized,

00:30:41.320 --> 00:30:44.280
to 30 machines in use,
and our environment took

00:30:44.280 --> 00:30:45.810
about an hour and a half.

00:30:47.000 --> 00:30:52.330
It also gave us the ability to migrate
to Tiger without touching the machines.

00:30:52.330 --> 00:30:55.050
With support,
which has been excellent from FileWiff,

00:30:55.070 --> 00:31:00.150
we built a Tiger set,
shot it out to all of our 10.3 machines,

00:31:00.200 --> 00:31:02.420
and they reboot into Tiger.

00:31:04.220 --> 00:31:07.910
One of the features that I've really
kind of worn out is the rollback.

00:31:10.800 --> 00:31:48.300
[Transcript missing]

00:31:49.070 --> 00:31:51.350
It's really kind of become like
an extra set of hands for us,

00:31:51.350 --> 00:31:51.820
right?

00:31:51.820 --> 00:31:55.040
Because now we're able to go and
take care of our business instead

00:31:55.120 --> 00:31:58.230
of do all these deployments by hand.

00:31:58.230 --> 00:32:03.040
We're literally going to save thousands
of man hours over this next year.

00:32:03.710 --> 00:32:09.350
Excuse me.

00:32:09.350 --> 00:32:09.350
So...

00:32:09.720 --> 00:32:12.390
With that time, I mean,
ultimately our job is education.

00:32:12.390 --> 00:32:17.240
And the more we can make our
maintenance transparent to the end user,

00:32:17.360 --> 00:32:18.060
the better off we are.

00:32:18.060 --> 00:32:19.410
We lose less instructional time.

00:32:19.420 --> 00:32:24.010
So we will now be able to not
take down those machines and

00:32:24.320 --> 00:32:29.110
tie them up for deployments,
free up our time to support

00:32:29.110 --> 00:32:33.090
the teachers and students,
which is really what we're all about.

00:32:35.900 --> 00:32:37.990
With that,
I would be happy to answer any specific

00:32:38.040 --> 00:32:40.840
questions about our deployment,
too, at the bash later on.

00:32:48.820 --> 00:32:52.020
Next, I want to bring up
Josh Kaiser from Cabela's,

00:32:52.120 --> 00:32:56.260
and we want to jump into the
business world and see how

00:32:56.260 --> 00:33:01.990
the IT guys on that side live,
breathe, and love my little beach ball.

00:33:02.000 --> 00:33:03.470
Thanks, John.

00:33:05.190 --> 00:33:06.220
My name is Joshua Kaiser.

00:33:06.220 --> 00:33:08.700
I'm a Senior Graphic
Systems Administrator at

00:33:08.750 --> 00:33:10.540
Cabela's Incorporated in Sydney,
Nebraska.

00:33:10.590 --> 00:33:14.060
Just a little bit about Cabela's,
if you're not familiar with us already.

00:33:14.060 --> 00:33:16.630
We are a leading multi-channel
reseller of hunting,

00:33:16.630 --> 00:33:18.270
fishing, and outdoor goods.

00:33:18.280 --> 00:33:21.950
We have really three main venues,
how we deliver goods and

00:33:21.960 --> 00:33:23.920
services to our customers.

00:33:23.920 --> 00:33:28.560
We have more than 120 million
catalogs a year that we deliver to

00:33:28.670 --> 00:33:32.100
50 different states in 120 countries.

00:33:32.720 --> 00:33:33.970
We have 15 U.S.

00:33:33.970 --> 00:33:37.180
retail locations and 13
more currently announced.

00:33:37.180 --> 00:33:41.380
And we have a robust internet presence
to deliver goods and information.

00:33:43.070 --> 00:33:45.300
A little bit about our environment.

00:33:45.300 --> 00:33:51.780
We have a smaller Mac group that
supports a lot of creative systems,

00:33:51.870 --> 00:33:56.000
and we're kind of in among the PC guys,
what I like to refer to as the

00:33:56.000 --> 00:33:57.600
greater MIS or the dark side.

00:34:01.540 --> 00:34:05.080
Among our group,
we have around 200 Mac workstations

00:34:05.280 --> 00:34:07.000
that we are in charge of supporting.

00:34:07.040 --> 00:34:09.450
We've got a little over a dozen Xserves.

00:34:09.510 --> 00:34:13.560
We also have a handful of PC workstations
and servers that we have to work with.

00:34:13.620 --> 00:34:17.990
As far as the configurations on those go,
one of the big challenges that

00:34:17.990 --> 00:34:20.900
we've had is we have a lot
of different configurations

00:34:20.940 --> 00:34:22.500
in a lot of different areas.

00:34:22.500 --> 00:34:25.690
We have 15 unique workgroups.

00:34:25.790 --> 00:34:32.930
We have a team of 18 different
locations across the United States and

00:34:32.930 --> 00:34:38.490
we have variations from one user to
another within a workgroup depending

00:34:38.490 --> 00:34:43.890
on the specific peripherals that user
may have to access or other specific

00:34:43.890 --> 00:34:46.880
functions they may have to work with.

00:34:47.230 --> 00:34:48.960
So we had a few problems.

00:34:48.960 --> 00:34:50.260
We don't like to call them problems.

00:34:50.320 --> 00:34:52.540
We like to call them opportunities.

00:34:52.540 --> 00:34:55.580
Sometimes it feels like
land of opportunity.

00:34:57.000 --> 00:34:59.270
Over the last two years,
we've been making some

00:34:59.270 --> 00:35:04.480
changes to how we approach the
workstation management lifecycle.

00:35:04.620 --> 00:35:07.400
At the time,
everything that we were doing was manual

00:35:07.400 --> 00:35:09.480
when I came in two and a half years ago.

00:35:09.480 --> 00:35:12.250
It was literally sit down
in front of a machine,

00:35:12.260 --> 00:35:15.140
pop in the install disk, run it,
configure it,

00:35:15.210 --> 00:35:18.620
load the next piece of software, run it,
configure it.

00:35:18.620 --> 00:35:22.080
And the problems with
this are pretty obvious.

00:35:22.080 --> 00:35:24.140
It was entirely too slow.

00:35:24.140 --> 00:35:29.310
We had some serious inconsistency
issues with deployments of different

00:35:29.390 --> 00:35:32.140
workstations across the user base.

00:35:32.930 --> 00:35:37.260
We had really no effective
means of delivering updates

00:35:37.260 --> 00:35:39.610
to the deployed machines.

00:35:39.750 --> 00:35:43.520
And the time and the efficiency
issues for it were just a nightmare.

00:35:43.520 --> 00:35:45.500
We have a fairly small tech group.

00:35:45.500 --> 00:35:50.870
There's only five of us to support
basically everything we have to do.

00:35:51.250 --> 00:35:54.990
So currently,
our solution is basically Netboot,

00:35:54.990 --> 00:35:58.430
Netrestore, the Casper Suite,
and the Software Update Server.

00:35:58.440 --> 00:36:04.160
And that gives us some really nice things
that we can do now and not spend near as

00:36:04.290 --> 00:36:07.360
much time as what we used to be doing.

00:36:07.360 --> 00:36:10.900
We can perform installs
unintended and very quickly.

00:36:10.900 --> 00:36:15.040
Installs can occur overnight
while we're not around.

00:36:15.040 --> 00:36:16.600
Just come in a little
bit early in the morning,

00:36:16.600 --> 00:36:18.450
make sure everything loaded
the way that it should.

00:36:19.440 --> 00:36:22.580
We can pre-configure all the
aspects of the user environment.

00:36:22.580 --> 00:36:25.910
This is one of the things that I really
love about what we're doing now.

00:36:25.920 --> 00:36:29.330
We can actually have a
machine up and going,

00:36:29.330 --> 00:36:33.240
installed, configured,
and we don't have to worry about

00:36:33.240 --> 00:36:35.520
anything as far as user preferences.

00:36:35.520 --> 00:36:41.660
The user is ready to go as soon as that
machine is rebooted and done installing.

00:36:41.660 --> 00:36:44.350
That includes the OS,
the settings for the OS,

00:36:44.350 --> 00:36:47.240
the software and the
preferences for the user,

00:36:47.710 --> 00:36:50.180
and all the custom scripts
that we have associated.

00:36:50.180 --> 00:36:53.850
The little automated processes
that the system admins just love

00:36:53.880 --> 00:36:56.060
to run on our users' workstations.

00:36:57.370 --> 00:37:01.140
We can also maintain all of our
software updates very easily,

00:37:01.250 --> 00:37:04.940
make sure that every machine out on our
network gets that latest security update.

00:37:04.940 --> 00:37:06.260
I know that's a big issue.

00:37:06.260 --> 00:37:10.780
We can also install new packages
while the users are working

00:37:11.200 --> 00:37:13.810
without interrupting the user.

00:37:14.030 --> 00:37:20.040
We gather recon information about
all of our clients' workstations.

00:37:20.040 --> 00:37:23.600
It's really useful to know
what applications are on there,

00:37:23.600 --> 00:37:26.100
how much space the users have left.

00:37:26.100 --> 00:37:29.640
We can get just this really general
idea of what the environment

00:37:29.640 --> 00:37:31.540
among our user base looks like.

00:37:31.540 --> 00:37:35.490
And then we also can get
notification on all of those things

00:37:35.490 --> 00:37:39.840
and make proactive decisions,
oftentimes before the user even

00:37:39.840 --> 00:37:42.780
realizes that there's anything wrong.

00:37:43.620 --> 00:37:47.570
Also, we can regularly do a clean install
and refresh those workstations so

00:37:47.590 --> 00:37:51.860
we can make sure that the user's
experience is totally up to snuff.

00:37:51.900 --> 00:37:55.370
Finally,
and this is one of my favorite things,

00:37:55.370 --> 00:37:58.580
we can cache packages
on the local client.

00:37:58.580 --> 00:38:03.320
Even if our network goes down,
the client actually has everything

00:38:03.320 --> 00:38:05.420
that it needs right there.

00:38:05.420 --> 00:38:08.590
All you have to do is reboot,
hit the restore partition,

00:38:08.590 --> 00:38:11.700
and you can totally reload
the machine from scratch.

00:38:27.150 --> 00:38:30.300
So we can do all of this with
only two base system images.

00:38:30.300 --> 00:38:32.920
We have a PowerPC base and an Intel base.

00:38:32.920 --> 00:38:36.300
We can do it with minimal staff,
minimal time dedicated

00:38:36.300 --> 00:38:37.880
to setup and break fix.

00:38:37.880 --> 00:38:40.120
So in conclusion,
over the last two years,

00:38:40.120 --> 00:38:43.340
we've been making a lot of changes,
a lot of little tweaks.

00:38:43.340 --> 00:38:45.860
I'm really getting happy
with what we have now.

00:38:45.860 --> 00:38:47.810
We have a more consistent platform.

00:38:47.810 --> 00:38:50.690
We have decreased downtime
for maintenance and changes

00:38:50.690 --> 00:38:52.040
on the workstations.

00:38:52.040 --> 00:38:55.440
And we actually have a decreased
technical presence among our users.

00:38:55.760 --> 00:38:59.640
We're actually running into situations
where our technicians just have to

00:38:59.700 --> 00:39:03.020
take the time to get out and mingle
with the users and give them a little,

00:39:03.020 --> 00:39:04.140
hey, how are you guys doing?

00:39:04.140 --> 00:39:05.820
Just want to let you
know we're still here.

00:39:05.820 --> 00:39:08.400
And that's been a pretty
good problem to have.

00:39:08.420 --> 00:39:10.120
Thank you.

00:39:19.590 --> 00:39:22.260
Next, I want to bring up Ted Colgate.

00:39:22.290 --> 00:39:26.670
And I want you to hear from the
IT perspective of the guys that

00:39:26.770 --> 00:39:30.690
brought us the 1984 commercial and--

00:39:31.000 --> 00:39:33.990
Good afternoon, everyone.

00:39:34.120 --> 00:39:37.220
I think I'm the very last speaker
before our Apple beer bash,

00:39:37.220 --> 00:39:38.020
so I will be brief.

00:39:38.040 --> 00:39:42.000
My name is Ted Colgate,
and I'm the CIO of TPWA Worldwide,

00:39:42.000 --> 00:39:47.160
an international advertising agency,
and as John has said, Apple's agency.

00:39:47.160 --> 00:39:50.250
Apple and LandRev have asked
me here today to talk a little

00:39:50.250 --> 00:39:53.910
bit about desktop management,
and specifically about why

00:39:53.910 --> 00:39:57.580
we at TPWA have adopted
LandRev in our environment.

00:39:58.660 --> 00:40:00.870
Obviously,
we've had a good experience with LandRev,

00:40:00.890 --> 00:40:03.340
or I don't think they would
have invited me here to present.

00:40:03.340 --> 00:40:06.130
Let me start by painting you
a picture of our network.

00:40:06.140 --> 00:40:12.040
TPWA has over 280 offices in 70
countries with over 10,000 employees.

00:40:12.040 --> 00:40:16.260
Our offices are very different in shape,
size, and complexity.

00:40:16.260 --> 00:40:18.940
For example,
our office in Norway has about 10 people,

00:40:18.950 --> 00:40:21.280
and our office in Paris has over 1,000.

00:40:21.280 --> 00:40:24.240
It's hard to say if there's
a typical TPWA office,

00:40:24.240 --> 00:40:28.120
but if I had to conjecture,
I'd say it's about 75 people.

00:40:29.590 --> 00:40:33.080
And often when I talk to an
IT director of a local office,

00:40:33.120 --> 00:40:37.310
I have to remind him or her
that TPWA has more offices than

00:40:37.310 --> 00:40:39.600
they probably have employees.

00:40:39.760 --> 00:40:44.530
TBWA has grown over the past 20 years
by acquisition and natural growth.

00:40:44.600 --> 00:40:48.380
However, we have never opened
an office from scratch.

00:40:48.380 --> 00:40:52.290
We find the most creative independent
agency in a local market and we acquire

00:40:52.310 --> 00:40:57.680
them and introduce them to the TBWA brand
and TBWA's way of doing business.

00:40:58.210 --> 00:41:01.540
However, there is a delicate imbalance
between efficiency and creativity.

00:41:01.660 --> 00:41:04.500
So, in order for our offices to
maintain their creativity,

00:41:04.500 --> 00:41:07.200
or so I am told,
we don't place too many rules

00:41:07.200 --> 00:41:08.490
and regulations on them.

00:41:08.500 --> 00:41:12.100
As you can imagine,
this makes my job very difficult.

00:41:12.100 --> 00:41:15.450
Instead of mandating my technical
choices to the companies,

00:41:15.450 --> 00:41:18.490
I am an ambassador to the local
office to convince them to

00:41:18.490 --> 00:41:21.320
spend their hard-earned money,
pounds, rupees,

00:41:21.320 --> 00:41:24.100
on the technical solutions
that I recommend.

00:41:24.440 --> 00:41:28.100
However, so far,
LandRev has been a well-adopted pick.

00:41:28.100 --> 00:41:30.580
We've had installations
from Austria to Germany,

00:41:30.580 --> 00:41:34.080
Vancouver, and in the US,
and we're starting to roll out into Asia.

00:41:34.100 --> 00:41:37.640
So far, in only a few short months,
2,000 people of our

00:41:37.640 --> 00:41:41.100
user base are covered,
and this number is growing rapidly.

00:41:41.100 --> 00:41:43.040
Why is this?

00:41:43.100 --> 00:41:45.090
Before I talk about why
we went with LandRev,

00:41:45.090 --> 00:41:47.090
let's look back at what our issues were.

00:41:47.090 --> 00:41:50.090
Let's start with
hardware asset inventory.

00:41:50.100 --> 00:41:53.100
If we try to look and see what kind
of asset inventory that we had,

00:41:53.100 --> 00:41:58.100
it generally boiled down to how
organized the local IT director was.

00:41:58.100 --> 00:42:00.860
I might say, for an example,
this next version of this application

00:42:00.860 --> 00:42:03.100
requires that you have 512 megs of RAM.

00:42:03.100 --> 00:42:04.100
Do you have that?

00:42:04.200 --> 00:42:09.050
And the normal response was,
I need to check,

00:42:09.100 --> 00:42:11.100
and it would take about a couple weeks.

00:42:11.130 --> 00:42:16.100
With automation, he or she can check it
while we're on the phone.

00:42:16.100 --> 00:42:19.100
That's an example of
application deployment,

00:42:19.100 --> 00:42:22.100
but probably more common is
the problem of lease returns.

00:42:22.100 --> 00:42:25.100
When things come off lease,
we quickly need to locate the hardware,

00:42:25.100 --> 00:42:29.560
the peripherals, any other RAM, etc.

00:42:29.560 --> 00:42:32.090
that are being returned with the machine.

00:42:32.100 --> 00:42:35.940
It can add up to a lot of wasted
money if the IT director hasn't

00:42:35.940 --> 00:42:38.100
organized themselves well.

00:42:38.100 --> 00:42:40.100
With automation, this is so easy.

00:42:40.420 --> 00:42:42.380
However,
probably the biggest reason besides

00:42:42.380 --> 00:42:46.080
organization to go with automated
desktop management is time,

00:42:46.220 --> 00:42:49.100
saving time,
time organizing the hardware,

00:42:49.150 --> 00:42:51.100
the software, the updates, the patches,
you name it.

00:42:51.110 --> 00:42:53.100
matches, you name it.

00:42:53.200 --> 00:44:25.100
[Transcript missing]

00:44:25.470 --> 00:44:27.890
We looked for a package that
had easy deployment of software

00:44:27.910 --> 00:44:30.680
and patch management with
several methods to choose from,

00:44:30.680 --> 00:44:33.920
including redirecting Apple software
updates and Windows updates,

00:44:33.920 --> 00:44:36.620
and even first-time machine provisioning.

00:44:36.620 --> 00:44:40.200
I'm still surprised at the number of
companies that still rely on Sneakernet

00:44:40.200 --> 00:44:42.000
and manual processes and builds.

00:44:42.000 --> 00:44:45.980
We also needed a package that
included not only hardware

00:44:45.980 --> 00:44:50.180
and software management,
but also software metering.

00:44:51.220 --> 00:44:55.420
LandRev's software administration not
only helps identify licensing issues,

00:44:55.420 --> 00:44:59.660
but it reports on illegal software
and can even deny it from launching.

00:44:59.660 --> 00:45:04.090
But software metering can even
negate the cost of purchasing desktop

00:45:04.090 --> 00:45:06.780
management software in its entirety.

00:45:06.780 --> 00:45:10.180
For example,
let's say you're hiring five designers

00:45:10.210 --> 00:45:12.460
that need Adobe Creative Suite.

00:45:12.460 --> 00:45:16.960
You can scan the network and see that
you might have five people who haven't

00:45:16.970 --> 00:45:19.580
launched the software in eight months.

00:45:19.580 --> 00:45:21.190
You can reclaim those licenses.

00:45:21.200 --> 00:45:25.780
And we just redeploy to the creative
people and save the company $5,000.

00:45:25.780 --> 00:45:28.920
And lastly, we needed scalability.

00:45:28.920 --> 00:45:33.300
I commented on the fact that a
typical TPWA office is 75 people.

00:45:33.300 --> 00:45:36.460
But we have every shape and size
office from 10 to 1,000 employees.

00:45:36.460 --> 00:45:38.380
We wanted software that did the same.

00:45:38.380 --> 00:45:41.090
We needed software that was
robust enough to cover the

00:45:41.090 --> 00:45:44.340
Paris and Los Angeles offices,
while easy enough to understand

00:45:44.340 --> 00:45:47.400
and roll out to the Norwegian or
the Bulgarian offices.

00:45:47.400 --> 00:45:48.680
That's it.

00:45:48.680 --> 00:45:49.080
Thanks.

00:45:57.100 --> 00:45:57.980
Let's wrap this up.

00:45:57.980 --> 00:46:02.620
From an enterprise client
management perspective,

00:46:02.620 --> 00:46:06.320
what we've been trying to focus
on is literally solutions that are

00:46:06.320 --> 00:46:10.370
cross-platform but live within the
Mac architecture as its baseline and

00:46:10.370 --> 00:46:12.860
could live in the other architectures.

00:46:12.860 --> 00:46:16.870
But what I really wanted to expose
everybody to here today is the

00:46:16.890 --> 00:46:21.110
idea of software that we can use
Mac OS X servers in the background,

00:46:21.170 --> 00:46:24.270
and we can use Mac OS X admins
and Mac OS X clients,

00:46:24.270 --> 00:46:26.820
and we also support Windows with this.

00:46:31.530 --> 00:46:33.320
So often it's the other way around,
right?

00:46:33.350 --> 00:46:37.990
So the tools that we talked about today,
Sassafras software with

00:46:38.020 --> 00:46:42.040
their K2 management suite,
FileWave with FileWave and Asset Trustee,

00:46:42.040 --> 00:46:44.900
Jamf software with their Casper suite,
and LandRev with the

00:46:44.910 --> 00:46:46.250
LandRev management suite.

00:46:48.240 --> 00:46:49.210
But they're not alone.

00:46:49.350 --> 00:46:51.610
There are a lot of other
solutions out there.

00:46:51.650 --> 00:46:54.080
We could have turned this
easily into an all-day exercise.

00:46:54.080 --> 00:46:57.350
We could stay.

00:47:00.360 --> 00:47:04.050
Many other companies that also do
Mac and PC support where they have the

00:47:04.050 --> 00:47:08.090
clients and the ability to handle all
the different systems and do an awful

00:47:08.090 --> 00:47:11.750
lot of things that will cover the gamut,
and we just could not begin

00:47:11.750 --> 00:47:12.920
to get into all of them.

00:47:12.920 --> 00:47:14.180
This is just a sample of them.

00:47:14.180 --> 00:47:17.680
And in fact, some of the developers
from these companies,

00:47:17.680 --> 00:47:21.460
some of the representatives of
these companies are here today,

00:47:21.460 --> 00:47:25.410
and I'll ask them when we finish with
the Q&A if they want to come up towards

00:47:25.730 --> 00:47:26.470
the stage in case anybody wants to meet
and greet with them and talk to them.