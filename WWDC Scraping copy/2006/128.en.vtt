WEBVTT

00:00:18.110 --> 00:00:21.500
So I'm here to tell you
about Sync Services.

00:00:21.590 --> 00:00:24.830
Here's a quick overview of the talk.

00:00:24.890 --> 00:00:27.780
I'm going to give a very
quick run-through of Sync,

00:00:27.840 --> 00:00:31.400
for those of you who are new to it,
and a very short overview

00:00:31.400 --> 00:00:33.250
of what we did in Tiger.

00:00:33.420 --> 00:00:36.490
Now we'll go through what
our goals were for Leopard.

00:00:37.630 --> 00:00:40.220
Then the large majority of the
talk will cover the new and

00:00:40.220 --> 00:00:41.420
improved features in Leopard.

00:00:41.420 --> 00:00:45.370
And we've got some demos interspersed
through the talk to keep you all awake.

00:00:45.440 --> 00:00:47.610
And there's Q&A at the end.

00:00:50.440 --> 00:00:52.330
The idea is that you
come out of this talk,

00:00:52.350 --> 00:00:56.550
you'll have got an idea of some
of the sync concepts so that

00:00:56.550 --> 00:01:00.140
some of the terminology that
we use will be more familiar.

00:01:00.360 --> 00:01:03.390
You know what's changed
between Tiger and Leopard.

00:01:04.000 --> 00:01:08.170
We've covered the changes in .max
sync between Tiger and Leopard.

00:01:08.420 --> 00:01:11.260
We've got some improved
tools that will help you,

00:01:11.260 --> 00:01:14.970
the developers, build sync into your
applications and debug them.

00:01:14.980 --> 00:01:18.450
And I'm going to go through
briefly some of our new APIs.

00:01:18.450 --> 00:01:23.520
There are actually quite a few changes,
but I'm going to cover a subset thereof.

00:01:23.580 --> 00:01:24.690
.

00:01:28.540 --> 00:01:30.150
So concepts first.

00:01:30.240 --> 00:01:31.710
I'm going to run through
this very quickly.

00:01:31.720 --> 00:01:33.370
So for those of you
who are sync veterans,

00:01:33.370 --> 00:01:34.180
I apologize.

00:01:34.180 --> 00:01:37.580
This is just for those
of us who are new to it.

00:01:38.060 --> 00:01:39.510
So this is our sync ecosystem.

00:01:39.640 --> 00:01:43.060
We use that term because there
are all of these players involved.

00:01:43.060 --> 00:01:43.840
We've got devices.

00:01:43.840 --> 00:01:44.800
We've got .Mac.

00:01:44.970 --> 00:01:49.810
We've got Apple applications
and your applications.

00:01:50.100 --> 00:01:53.290
And all of these talk
through the sync engine.

00:01:58.090 --> 00:02:01.660
Now, as part of that,
we keep a copy of the

00:02:01.660 --> 00:02:04.140
data that you send us.

00:02:04.260 --> 00:02:08.070
A copy of everything that you send us
in something that we call the truth.

00:02:08.350 --> 00:02:14.600
That is a data repository which stores
all of the per-user information.

00:02:14.600 --> 00:02:19.560
The reason we do that is that one
part of sync is that certain devices,

00:02:19.560 --> 00:02:24.020
if they decide they've got
confused or you've got a new phone,

00:02:24.030 --> 00:02:27.110
they will ask for a
fresh copy of the data.

00:02:27.110 --> 00:02:31.980
And since we have a copy of everything,
we can send them that copy.

00:02:31.980 --> 00:02:32.290
That's one aspect of it.

00:02:35.210 --> 00:02:38.820
So what do you as an
application developer have to

00:02:38.820 --> 00:02:40.860
worry about in terms of sync?

00:02:40.870 --> 00:02:43.520
Most of you aren't
concerned with devices,

00:02:43.520 --> 00:02:45.590
you're writing applications.

00:02:47.010 --> 00:02:51.030
So you talk to the sync engine
through the Sync Services API,

00:02:51.290 --> 00:02:53.360
and to do that, you write a sync client.

00:02:53.470 --> 00:02:57.460
A sync client can either
be your application,

00:02:57.460 --> 00:03:01.470
or it can be a small tool that
you write off to the side that

00:03:01.990 --> 00:03:04.940
we use when a sync is requested.

00:03:07.850 --> 00:03:11.500
When we start a sync session,
your responsibility to begin with

00:03:11.500 --> 00:03:15.140
is to push the data that you have
that you want to give to the sync

00:03:15.140 --> 00:03:18.320
engine through the Sync Services API.

00:03:19.920 --> 00:03:24.210
We then take that data,
compare it with the existing data,

00:03:24.370 --> 00:03:27.340
compare it with the changes that
all the other clients have supplied.

00:03:27.430 --> 00:03:29.910
We did this process called mingling.

00:03:30.260 --> 00:03:34.900
And the end result of that is we
then give you back the net change.

00:03:34.970 --> 00:03:39.080
We give you back new data, some updates,
perhaps some deletes, some modifies.

00:03:39.230 --> 00:03:41.710
And you store those in your
proprietary data format.

00:03:41.740 --> 00:03:46.230
So the distinction here is that
your application data is stored in

00:03:46.230 --> 00:03:48.690
a way specific to your application.

00:03:49.020 --> 00:03:50.090
We don't know about that.

00:03:50.270 --> 00:03:53.740
When you give data to
us and take it back,

00:03:53.840 --> 00:03:57.390
it's in Sync Services record format,
which is a generic data type.

00:03:58.480 --> 00:04:01.620
And the end result of that process
is your application data is in

00:04:01.620 --> 00:04:03.100
sync with what's in the truth.

00:04:05.990 --> 00:04:06.900
And what do you get for free?

00:04:06.900 --> 00:04:10.720
Well,
as part of being a Sync Services client,

00:04:10.720 --> 00:04:13.480
we provide you with conflict management,
which means we notice

00:04:13.480 --> 00:04:15.890
when there are conflicts,
i.e.

00:04:16.390 --> 00:04:20.530
the user has made changes either
on a device and in an application

00:04:20.590 --> 00:04:22.240
or on two different Macs.

00:04:22.290 --> 00:04:25.300
And we provide resolution,
so we put up a UI and let the

00:04:25.300 --> 00:04:28.690
user decide which version of
that data they want to keep.

00:04:30.800 --> 00:04:32.200
Oh, sorry.

00:04:32.200 --> 00:04:36.320
You get .max sync,
you get device support,

00:04:36.340 --> 00:04:39.020
and we have a data change alert
which alerts the user if a large

00:04:39.330 --> 00:04:43.140
number of changes have been made
and they may want to intervene

00:04:43.140 --> 00:04:45.960
and accept the changes or not.

00:04:48.150 --> 00:04:52.830
So in Tiger,
we gave you all of these things.

00:04:53.030 --> 00:04:57.120
The Sync Engine,
the public API was new in Tiger.

00:04:57.290 --> 00:04:59.850
We had a bunch of data classes
that were all built into

00:04:59.850 --> 00:05:01.400
Mac OS X that you could use.

00:05:01.400 --> 00:05:05.050
We support third-party data classes,
which several applications

00:05:05.050 --> 00:05:06.800
are already benefiting from.

00:05:06.800 --> 00:05:09.470
And you add all of these features.

00:05:13.500 --> 00:05:15.310
So I was syncing Tiger.

00:05:15.400 --> 00:05:16.600
So what's new in Leopard?

00:05:16.680 --> 00:05:23.080
Well, when we set about deciding what
we were going to put into Leopard,

00:05:23.200 --> 00:05:25.880
we had a few high level goals in mind.

00:05:25.940 --> 00:05:28.600
First of all, usability.

00:05:28.780 --> 00:05:30.460
We were looking at this
from two perspectives,

00:05:30.540 --> 00:05:32.160
both user usability, i.e.

00:05:32.160 --> 00:05:34.390
the end user,
your customer and our customer,

00:05:34.490 --> 00:05:38.730
make life easier for them,
and secondarily, usability for you,

00:05:38.810 --> 00:05:39.700
the developer.

00:05:43.040 --> 00:05:45.410
We also want to make the whole
of sync more bulletproof.

00:05:45.630 --> 00:05:50.280
So when expected problems arise,
we should do the right thing.

00:05:50.320 --> 00:05:53.220
And when unexpected problems arise,
we should also try and

00:05:53.220 --> 00:05:54.770
do the right thing.

00:05:56.410 --> 00:05:58.840
Everybody likes
improvements in performance,

00:05:58.980 --> 00:06:02.180
so we focused on that as well.

00:06:02.580 --> 00:06:06.800
We've tried to expand the sync ecosystem
that I was describing at the beginning.

00:06:06.850 --> 00:06:11.200
So we want to have sync
even more pervasive,

00:06:11.370 --> 00:06:14.140
apply it to more applications.

00:06:16.210 --> 00:06:19.520
And we want to make development easier,
because if we make it easier,

00:06:19.520 --> 00:06:23.680
then more of you can adopt
sync into your application.

00:06:23.850 --> 00:06:27.270
So I'll go through
these topics one by one.

00:06:29.450 --> 00:06:32.290
So for usability,
what we focused on at the user

00:06:32.500 --> 00:06:35.780
level is primarily dialogues.

00:06:35.880 --> 00:06:44.140
For most people, when they see sync,
especially if they've

00:06:44.140 --> 00:06:45.780
got it in automatic mode,
the only thing they really see is

00:06:45.780 --> 00:06:45.780
when something unusual happens,
either

00:06:46.080 --> 00:06:51.240
A large number of changes go through
and they wanted to be alerted to that,

00:06:51.240 --> 00:06:51.880
or there are various

00:06:52.910 --> 00:07:03.590
We've made some simple changes to
reduce the number of dialogues they see,

00:07:03.590 --> 00:07:07.900
and our big focus has been to
improve the data change alert.

00:07:07.900 --> 00:07:14.200
There are two reasons for that.

00:07:14.200 --> 00:07:14.210
As developers,
if you're developing a sync application,

00:07:14.550 --> 00:07:17.770
You actually tend to have the
data change alert switched on all

00:07:17.770 --> 00:07:20.650
the time because you want to see
what's happening under the hood.

00:07:20.740 --> 00:07:24.080
So you as developers will see this
a lot more than the average user.

00:07:24.370 --> 00:07:26.960
But secondarily,
a lot of people have said, well,

00:07:26.960 --> 00:07:30.560
it's difficult to use this because
we get told there are these changes,

00:07:30.560 --> 00:07:31.520
but what do we do?

00:07:34.040 --> 00:07:38.880
And what we are considering with this
is when we put this alert up to say

00:07:38.880 --> 00:07:45.260
you have 10 changes in your contacts
or three changes in your calendars,

00:07:45.280 --> 00:07:47.600
the rule that we have right
now is very simplistic.

00:07:47.690 --> 00:07:50.100
And we're considering changing that.

00:07:50.120 --> 00:07:54.080
And I'd specifically like some feedback
at the lab this afternoon on that if

00:07:54.080 --> 00:07:56.480
anybody has any opinions to share.

00:07:58.880 --> 00:08:01.760
So what I'd like to do is I'd
like to ask Paul to come up,

00:08:01.760 --> 00:08:04.610
and we're going to give you a little
demo of the data change alert.

00:08:04.740 --> 00:08:10.380
We can switch the screen, right?

00:08:14.200 --> 00:08:16.860
So we have a number of users logged
in at the same time on this machine,

00:08:16.860 --> 00:08:18.430
so we're going to start
off with this user.

00:08:18.440 --> 00:08:19.720
Testing, you guys can all hear me?

00:08:19.760 --> 00:08:22.090
So as Andy said, I'm Paul.

00:08:22.150 --> 00:08:24.160
I'm going to talk to you a little
bit about the data change alert.

00:08:24.160 --> 00:08:27.860
And for expediency's sake,
I'm going to refer to it as the DCA.

00:08:27.880 --> 00:08:35.160
So if you were a user of sync in Tiger,
either as an end user or as a developer,

00:08:35.160 --> 00:08:37.060
you've probably seen these dialogues.

00:08:37.060 --> 00:08:39.620
And this is what we're talking about
when we talk about the data change alert.

00:08:41.750 --> 00:08:44.680
It's, as Andy mentioned,
it's intended to alert the user that a

00:08:44.680 --> 00:08:48.110
large percentage of changes are coming
into the truth and potentially give

00:08:48.110 --> 00:08:51.100
the user the ability to cancel out
that sync and find out what went wrong.

00:08:51.100 --> 00:08:53.790
Now, as you can see here,
we have one add and one modify,

00:08:53.790 --> 00:08:55.050
and that's not too bad.

00:08:55.060 --> 00:08:56.900
But what do you do when
you find this situation?

00:08:56.900 --> 00:08:58.990
So I remember adding a
whole bunch of contacts,

00:08:59.040 --> 00:09:01.290
but I sure don't remember
deleting any of them.

00:09:01.340 --> 00:09:03.430
And we got a lot of
feedback that on Tiger,

00:09:03.530 --> 00:09:05.960
you guys were looking
for more information.

00:09:05.960 --> 00:09:09.170
And so I'm going to show you
what we did for Leopard on that.

00:09:11.340 --> 00:09:13.250
Now, in order to make the demo
go a little bit smoother,

00:09:13.260 --> 00:09:15.780
we're going to be using address
book as our source of changes.

00:09:15.780 --> 00:09:19.590
And in order to allow it to pop
up with a data change alert,

00:09:19.590 --> 00:09:22.070
we're going to be using this
application Sync Respector.

00:09:22.080 --> 00:09:25.190
Now, we're going to talk about this
a little bit later in the talk.

00:09:25.200 --> 00:09:27.760
But for the time being,
the thing to notice here is the

00:09:27.760 --> 00:09:29.420
always show data change alert.

00:09:29.440 --> 00:09:32.090
Now, as Andy mentioned,
we have a number of heuristics as

00:09:32.150 --> 00:09:33.780
when we should show this alert.

00:09:33.820 --> 00:09:36.690
Among them are,
is the client who's pushing in data

00:09:36.690 --> 00:09:38.740
currently a server or a device?

00:09:38.740 --> 00:09:40.810
That normally means .Mac or a phone.

00:09:40.960 --> 00:09:46.210
Is the percentage of changes incoming
greater than a threshold of the

00:09:46.210 --> 00:09:47.880
total number of records in the truth?

00:09:47.960 --> 00:09:51.110
Is there another client
syncing this same data?

00:09:51.160 --> 00:09:53.990
And is there any data of
this type in the truth?

00:09:54.080 --> 00:09:56.200
For example,
if you are pushing in new records

00:09:56.200 --> 00:09:58.760
to a brand new data class,
you don't necessarily want to alert

00:09:58.850 --> 00:10:02.030
the user for that because really
this is meant as data protection.

00:10:02.060 --> 00:10:05.140
And if there's no data there,
nothing to protect.

00:10:05.140 --> 00:10:08.280
So as you can see here,
we have just the default address book

00:10:08.280 --> 00:10:10.570
that you get when you create a new user.

00:10:10.580 --> 00:10:13.500
We've got the Apple computer account
and we've got the me account.

00:10:13.520 --> 00:10:16.550
And by, oh, I should mention,
by enabling the always

00:10:16.550 --> 00:10:19.420
show data change alert,
we are now going to pop it

00:10:19.420 --> 00:10:23.320
whenever any changes come into
the truth for any application.

00:10:23.320 --> 00:10:26.130
So we're, by doing this,
we're removing the restriction

00:10:26.130 --> 00:10:28.100
that only .Mac and devices show it.

00:10:28.200 --> 00:10:31.360
Now, for the sake of this demo,
I'm going to be making some changes

00:10:31.360 --> 00:10:34.410
rather quickly in the hopes of
completing them before At Dispute

00:10:34.410 --> 00:10:36.100
decides to trickle sync on me.

00:10:36.100 --> 00:10:38.770
I'm going to add a new card.

00:10:40.200 --> 00:10:43.470
We are going to delete the me card.

00:10:44.440 --> 00:10:47.120
And for the Apple Computer Card,
we're both going to

00:10:47.120 --> 00:10:49.540
modify a phone number.

00:10:49.570 --> 00:10:52.910
And let's add a new phone number.

00:10:53.420 --> 00:10:57.480
Yeah, well, yeah, close enough.

00:10:57.480 --> 00:10:58.840
I just feel like it's parsing that.

00:10:58.840 --> 00:11:00.680
So we're finished editing,
and we're going to put I just

00:11:00.680 --> 00:11:02.060
spoke to the background,
which is going to kick

00:11:02.060 --> 00:11:02.780
off a trickle sync.

00:11:04.980 --> 00:11:08.740
And you'll notice here that we have the
same alert that we've seen in Tiger.

00:11:08.740 --> 00:11:12.570
However, well, as you expect,
we're both adding, modifying,

00:11:12.570 --> 00:11:13.680
and deleting a contact.

00:11:13.790 --> 00:11:16.480
But now we've got this handy dandy
little more info button here.

00:11:16.560 --> 00:11:18.310
And as you can see,
we're presenting to the

00:11:18.310 --> 00:11:20.770
user a lot more information.

00:11:25.900 --> 00:11:28.060
So there are a couple points
I want to make about this.

00:11:28.060 --> 00:11:30.550
As you can see here,
if you've seen a conflict ever

00:11:30.600 --> 00:11:33.120
pop up in Conflict Resolver,
you're going to notice that this

00:11:33.120 --> 00:11:34.540
has pretty much the same layout.

00:11:34.750 --> 00:11:37.360
And the reason for that is that
we built this on top of the

00:11:37.360 --> 00:11:40.450
same underpinnings that are
underneath the Conflict Resolver.

00:11:40.600 --> 00:11:42.580
And that allows us to do
some pretty neat things.

00:11:42.580 --> 00:11:44.760
So as you can see here,
we've got our various

00:11:44.760 --> 00:11:46.310
information that we've added.

00:11:46.430 --> 00:11:48.140
Let's have a look at a modify.

00:11:48.140 --> 00:11:50.820
Now what I like about this is that we
can not only see the new information

00:11:50.820 --> 00:11:53.240
that Irisbook is pushing in,
but also the information

00:11:53.240 --> 00:11:54.470
that was there in the truth.

00:11:54.500 --> 00:11:58.850
And furthermore-- whoo!

00:11:59.750 --> 00:12:02.060
And furthermore, we're separating things
out so that we can see,

00:12:02.060 --> 00:12:05.610
OK, we have a modified phone number
and we have an added phone number.

00:12:05.780 --> 00:12:08.060
And in true Apple form,
we'll hold down Shift.

00:12:08.060 --> 00:12:12.570
And you can see here that we're
also pulling information out of

00:12:12.570 --> 00:12:16.320
the truth as it once was to show
what would have been deleted.

00:12:16.330 --> 00:12:20.260
So we've gone from what was--
let me bring that back up.

00:12:20.280 --> 00:12:23.990
Conference office airbag
stays up over everything.

00:12:24.100 --> 00:12:26.520
So we've gone from, oh, no,
I've deleted a contact.

00:12:26.520 --> 00:12:28.630
I don't know what
contact I've deleted to,

00:12:28.870 --> 00:12:31.630
ah, this is the contact I deleted.

00:12:32.000 --> 00:12:34.810
Now, as Andy mentioned,
the goals for this are twofold.

00:12:34.820 --> 00:12:38.280
First off,
we believe this is going to present to

00:12:38.280 --> 00:12:41.920
the user enough information that they
can make a more informed decision as

00:12:41.950 --> 00:12:45.360
to whether or not the changes currently
coming into the truth are the changes

00:12:45.360 --> 00:12:47.340
they expected to come into the truth.

00:12:47.340 --> 00:12:51.260
And secondly,
this is present for you guys.

00:12:51.260 --> 00:12:54.310
Normally, as the syncing part of your
application nears its beta,

00:12:54.440 --> 00:12:58.100
you tend to run without all of the
extensive sync services logging turned on

00:12:58.190 --> 00:13:01.700
and a very common development technique
is simply to enable always show data

00:13:01.700 --> 00:13:04.340
change alert and then go about your day.

00:13:04.570 --> 00:13:07.590
And we're hoping that this will
help you guys figure out exactly

00:13:07.650 --> 00:13:09.210
what your application is doing.

00:13:09.260 --> 00:13:11.690
And back to Andy.

00:13:20.110 --> 00:13:25.690
All right,
now onto our topic of resilience.

00:13:25.750 --> 00:13:28.510
So at the developer level,

00:13:30.000 --> 00:13:34.140
What we've done so far, in fact,
we released a tool for Tiger that

00:13:34.230 --> 00:13:37.910
some of you may have already been
using that allows you to do schema

00:13:37.910 --> 00:13:41.460
validation because some of the problems
that we've seen in the past is people

00:13:41.460 --> 00:13:44.420
have started using schemas and they
weren't actually entirely valid.

00:13:44.420 --> 00:13:47.270
We didn't trap it in time,
and so we've seen shipping

00:13:47.270 --> 00:13:48.790
applications like this.

00:13:49.300 --> 00:13:53.840
So the tool should help you
validate your Tiger schemas,

00:13:53.840 --> 00:13:55.690
and then in addition,
we've actually got runtime

00:13:55.690 --> 00:13:58.500
validation in Leopard so that
once you're running on Leopard,

00:13:58.500 --> 00:14:00.470
you won't get any further.

00:14:02.750 --> 00:14:06.960
We've added sync anchors,
which allow us to detect mismatches

00:14:06.960 --> 00:14:09.970
between your client data and the truth.

00:14:10.090 --> 00:14:13.740
So if you have two different versions,
we'll now be able to detect that.

00:14:14.040 --> 00:14:18.610
The primary motivation for that was,
for example, restoring from a backup.

00:14:18.690 --> 00:14:22.790
So if instead the user decides to
restore one directory and they leave

00:14:22.930 --> 00:14:26.000
their Sync Services truth alone,
we'll be able to detect that what

00:14:26.000 --> 00:14:29.580
we thought the client had is not the
same as what the client actually has.

00:14:30.700 --> 00:14:35.780
And we've added some improved
runtime error handling.

00:14:38.530 --> 00:14:43.420
Now, the user level, our main focus again
has been on .Mac sync.

00:14:43.450 --> 00:14:45.840
We're handling certain
network errors better.

00:14:45.840 --> 00:14:48.920
There were some problems
in early Tiger releases.

00:14:48.920 --> 00:14:51.640
We have auto retry.

00:14:51.640 --> 00:14:56.870
So for those customers who are on
dodgy or low-power airport networks,

00:14:56.880 --> 00:15:02.890
we will automatically retry in a certain
number of times if we have failures.

00:15:03.820 --> 00:15:06.800
And lastly,
we've added this per-data class sync.

00:15:06.830 --> 00:15:10.320
So instead of trying to
sync everything at once,

00:15:10.320 --> 00:15:12.460
we split it up by data class.

00:15:12.460 --> 00:15:15.900
And the advantage of that is it
means if one particular thing

00:15:15.900 --> 00:15:20.080
does not work for whatever reason,
then it doesn't stop all the customer's

00:15:20.260 --> 00:15:22.280
data from syncing up to .Mac.

00:15:22.280 --> 00:15:25.590
And it gives us the benefit
of having a timeout.

00:15:25.770 --> 00:15:28.900
.Mac imposes a timeout
on every connection.

00:15:28.900 --> 00:15:33.620
So we get that per-data class
instead of the entire transaction.

00:15:33.820 --> 00:15:34.910
Amen.

00:15:35.210 --> 00:15:38.560
And for customers who are
using slow modem links,

00:15:38.560 --> 00:15:39.790
that's quite important.

00:15:44.480 --> 00:15:48.640
So in the future,
we will be adding-- this

00:15:48.640 --> 00:15:51.760
is not in the current seed,
but we will be adding support

00:15:51.760 --> 00:15:53.500
for what we call schema SKU.

00:15:53.530 --> 00:15:58.320
And this is the case where, for example,
you are shipping an application,

00:15:58.570 --> 00:16:00.960
but you've shipped various
versions of an application.

00:16:00.960 --> 00:16:03.770
And you might have the same
application on two different machines.

00:16:03.860 --> 00:16:06.530
The customer is using one at work,
one at home.

00:16:06.670 --> 00:16:09.370
But the one at work is an older
version than the one at home,

00:16:09.380 --> 00:16:12.360
and the schemas do not necessarily match.

00:16:12.840 --> 00:16:16.380
So we will,
at the moment that does not work.

00:16:16.400 --> 00:16:20.820
And so our advice to you currently
is try and make sure that you

00:16:20.870 --> 00:16:24.120
tell your customers to keep their
applications in sync or don't

00:16:24.230 --> 00:16:26.320
modify your schema in the meantime.

00:16:37.100 --> 00:16:44.100
So, performance.

00:16:44.100 --> 00:16:51.140
Having profiled our system and the
various forms of sync that we do,

00:16:51.140 --> 00:16:57.490
the fast sync, the slow sync,
we've noticed that the major

00:16:57.490 --> 00:17:01.290
benefit can be gleaned from
reducing the memory footprint.

00:17:01.930 --> 00:17:05.060
So we've put a certain amount of
effort into reducing the number of

00:17:05.060 --> 00:17:07.850
auto-released objects that we create.

00:17:08.620 --> 00:17:12.440
One of the things that we've done,
and it's only partially done in the seed,

00:17:12.440 --> 00:17:16.330
we will be doing this fairly
extensively in later drops,

00:17:16.420 --> 00:17:18.450
is modify the GUIDs.

00:17:18.540 --> 00:17:22.660
So if you have any code that
may somehow be dependent on

00:17:22.660 --> 00:17:26.680
the actual format of our GUIDs,
be aware of that.

00:17:26.680 --> 00:17:29.940
So we've removed the prefix,
and that has a surprisingly large

00:17:29.940 --> 00:17:33.260
effect on the application footprint.

00:17:35.310 --> 00:17:40.880
In addition, we've changed the way
we handle large NSDatas.

00:17:41.090 --> 00:17:46.100
So we've got feedback both from you
and from customers that because,

00:17:46.100 --> 00:17:51.870
as I mentioned earlier, in the truth,
we keep a copy of all your data.

00:17:52.370 --> 00:17:56.130
We also keep copies in the client side,
and then you keep copies.

00:17:56.270 --> 00:18:00.850
So having multiple
copies of large images,

00:18:00.850 --> 00:18:04.080
for example,
or PDF files of the equivalent

00:18:04.080 --> 00:18:10.920
DNS data representation thereof
is rather space consuming.

00:18:11.390 --> 00:18:15.150
So what we've added is a mechanism
that essentially takes one copy of

00:18:15.250 --> 00:18:20.010
this NSData the first time you sync,
uniques it, and then from then on,

00:18:20.020 --> 00:18:22.090
what we deal with is these proxy objects.

00:18:22.100 --> 00:18:27.210
So the first sync doesn't change,
but from then on, in memory,

00:18:27.360 --> 00:18:35.060
we just use this proxy representation,
and that keeps the footprint down.

00:18:35.220 --> 00:18:37.280
So if you go and change your NSData,
obviously,

00:18:37.280 --> 00:18:38.850
we'll have to get the new version.

00:18:38.860 --> 00:18:42.300
But in the case of a fast sync where
most of your objects and most of the

00:18:42.700 --> 00:18:46.290
attributes of an object are not changing,
it's a really big win.

00:18:48.950 --> 00:18:51.720
And we fixed a number of bugs
where we triggered a refresh

00:18:51.720 --> 00:18:52.900
sync for no good reason.

00:18:54.650 --> 00:18:58.380
So I just wanted to cover the
effect of these data wrappers,

00:18:58.380 --> 00:19:00.100
as we call them.

00:19:01.020 --> 00:19:05.170
This is a rather,
unfortunately somebody took the,

00:19:05.170 --> 00:19:07.780
you can't see the bottom line,
but this covers a range

00:19:07.870 --> 00:19:10.730
from zero to 512 kilobytes,
so we don't expect people to

00:19:10.730 --> 00:19:13.070
be syncing too many half a
megabyte documents around.

00:19:13.080 --> 00:19:20.450
But as you can see in Tiger,
essentially our memory usage was linear,

00:19:20.450 --> 00:19:20.450
and in Leopard,

00:19:21.200 --> 00:19:23.320
Really flat.

00:19:23.320 --> 00:19:26.340
And we do pay a small price
right at the beginning,

00:19:26.780 --> 00:19:30.950
and that knee is around
about 8 kilobytes.

00:19:31.650 --> 00:19:37.950
But overall our footprint for syncing
large numbers of large objects is really,

00:19:38.560 --> 00:19:40.170
really down.

00:19:40.360 --> 00:19:44.350
And the benefit of this is
that the time it takes to

00:19:44.410 --> 00:19:47.490
sync is significantly reduced,
and that's something that the

00:19:47.580 --> 00:19:48.800
customers will see straight away.

00:19:48.800 --> 00:19:56.440
And again, this is a blown up of the
first 16 kilobytes of data.

00:20:02.880 --> 00:20:07.040
So the other thing we've had feedback
about is from our .Mac customers,

00:20:07.040 --> 00:20:11.800
and again, you, the developers,
that they've been seeing timeouts,

00:20:11.800 --> 00:20:14.830
as I mentioned earlier, for example,
with .Mac.

00:20:15.010 --> 00:20:19.860
And what I wanted to remind you is
that there are certain things that

00:20:19.860 --> 00:20:25.580
you can do with your sync client
and with your schema to improve

00:20:25.580 --> 00:20:29.290
the life of our end user customers.

00:20:29.620 --> 00:20:31.640
The thing to remember is
that not everybody has a

00:20:31.660 --> 00:20:35.830
high-speed DSL or T1 line,
so they've got very limited bandwidth.

00:20:36.110 --> 00:20:39.900
And what we want to try and
do is to send as little bit,

00:20:39.900 --> 00:20:42.510
as small amount of data
back and forth as possible.

00:20:42.520 --> 00:20:47.500
So the key to that is to structure
your schema so that the elements

00:20:47.500 --> 00:20:52.480
of it are segmented nicely and
that you don't have one large blob.

00:20:52.480 --> 00:20:55.840
Because if you give us one large blob,
we can't really delta it and so we

00:20:55.840 --> 00:20:57.660
have to send a large blob each time.

00:20:57.660 --> 00:20:59.720
And that's just going
to take a long time.

00:20:59.720 --> 00:21:01.790
There's nothing we can do about it.

00:21:05.300 --> 00:21:09.100
And what we want to try and
do is to send as little bit,

00:21:09.250 --> 00:21:11.690
as small amount of data
back and forth as possible.

00:21:11.800 --> 00:21:16.150
So the key to that is to structure
your schema so that the elements

00:21:16.690 --> 00:21:17.290
of it are segmented nicely and
that you don't have one large blob.

00:21:31.600 --> 00:21:35.020
So we want to expand sync.

00:21:35.320 --> 00:21:37.550
Our customers love it.

00:21:39.630 --> 00:21:44.960
So what we've got in Leopard is
that a whole bunch of new features,

00:21:44.960 --> 00:21:49.040
which we think people will
really get excited about.

00:21:49.040 --> 00:21:53.570
We've added new data classes
for the Doc dashboard.

00:21:54.450 --> 00:21:58.800
Mail Notes is not ready yet,
but that will be coming.

00:21:58.800 --> 00:21:59.810
And Preferences is a big one.

00:21:59.810 --> 00:22:02.780
I'll cover that more in detail.

00:22:04.310 --> 00:22:11.870
And we're also going to support schema
extensions for all data classes.

00:22:11.870 --> 00:22:11.870
And this is--

00:22:13.260 --> 00:22:17.200
This is something that
was available in Tiger,

00:22:17.200 --> 00:22:21.240
but it was restricted slightly because
the main data classes did not support it.

00:22:21.280 --> 00:22:26.090
And there are some ramifications there,
which I will again go into

00:22:26.120 --> 00:22:28.300
a little bit more detail.

00:22:31.110 --> 00:22:32.990
And we've added some
integration with File Sync.

00:22:33.010 --> 00:22:40.680
File Sync is a technology used
for portable home directories,

00:22:40.800 --> 00:22:45.070
which is a 10-server feature, and iDisk.

00:22:45.200 --> 00:22:49.840
And what we've added is
the capability for you,

00:22:49.840 --> 00:22:54.230
a sync client,
to specify that you're going

00:22:54.230 --> 00:22:56.490
to deal with syncing these

00:22:56.960 --> 00:23:03.210
These files or the contents of these
files using Sync Services and so there is

00:23:03.210 --> 00:23:07.580
no need for File Sync to do it for you.

00:23:08.100 --> 00:23:11.210
And it's implemented very
simply as an iSync client.

00:23:11.370 --> 00:23:15.100
And there'll be more information
available forthcoming.

00:23:22.980 --> 00:23:27.940
So I'm going to talk in quite a bit
of detail about preferences sync.

00:23:27.940 --> 00:23:30.190
This is new in Leopard.

00:23:30.700 --> 00:23:52.500
[Transcript missing]

00:23:52.680 --> 00:23:57.780
So be careful what you wish for
because we are doing every application.

00:23:59.370 --> 00:24:05.540
So the outcome of this is
that if your application is

00:24:05.540 --> 00:24:08.070
a document-based application,
you don't want to sync the

00:24:08.070 --> 00:24:12.100
documents for whatever reason,
but you have a bunch of settings,

00:24:12.130 --> 00:24:15.550
maybe we're going to do
all of your sync for free.

00:24:16.660 --> 00:24:19.200
We will just take all
of those preferences,

00:24:19.200 --> 00:24:25.100
and if people check the checkbox,
we'll sync them to all their machines.

00:24:25.190 --> 00:24:26.920
And we sync all preferences by default.

00:24:26.920 --> 00:24:34.260
But it's not quite all.

00:24:40.690 --> 00:24:42.910
Obviously,
we only know about preferences which

00:24:42.910 --> 00:24:44.950
live within the preferences scheme.

00:24:44.960 --> 00:24:48.750
So that's anything based on
CFPreferences and anything

00:24:48.750 --> 00:24:50.760
based on NS user defaults.

00:24:50.820 --> 00:24:53.030
And we don't sync system defaults.

00:24:53.100 --> 00:24:54.820
That doesn't make any sense.

00:24:54.820 --> 00:24:58.710
So these are user application defaults.

00:25:03.280 --> 00:25:08.430
Now we've excluded some deliberately.

00:25:08.550 --> 00:25:11.920
There are some specific application
domains which we don't sync

00:25:11.920 --> 00:25:15.680
because they don't make any sense,
or because they're already

00:25:15.680 --> 00:25:19.160
synced by Sync Services.

00:25:19.260 --> 00:25:22.970
By host preferences are not synced.

00:25:24.690 --> 00:25:26.960
By host preferences,
in case you're unfamiliar with it,

00:25:27.010 --> 00:25:30.480
are meant to be preferences that
are somehow machine specific.

00:25:30.560 --> 00:25:34.040
And obviously translating them from one
machine to another would not make sense.

00:25:34.040 --> 00:25:38.870
So one example of this may be if you,
for whatever reason, you stored a license

00:25:38.960 --> 00:25:42.840
information in preferences and
you do per machine licensing,

00:25:42.840 --> 00:25:47.310
then you would expect that
would be a by host preference.

00:25:48.310 --> 00:25:51.770
Another example would be something
related to display size or

00:25:51.770 --> 00:25:53.570
something hardware specific.

00:25:55.160 --> 00:25:58.940
We also filter out certain
things like NS Window Frames.

00:25:58.940 --> 00:26:01.930
If you have a different display,
your window's going to appear

00:26:01.930 --> 00:26:02.880
in a different position.

00:26:03.060 --> 00:26:06.420
Wouldn't make much sense to try
and keep syncing those around.

00:26:06.420 --> 00:26:08.450
We also filter those out
because that would be a

00:26:08.450 --> 00:26:10.010
performance drain on the system.

00:26:10.010 --> 00:26:12.180
There would be too many
changes to deal with.

00:26:12.540 --> 00:26:14.200
But most importantly,
as far as application

00:26:14.200 --> 00:26:17.610
developers are concerned,
the application can choose

00:26:17.610 --> 00:26:19.630
to opt out if they want.

00:26:20.530 --> 00:26:26.280
There are two mechanisms available
by which you can opt out.

00:26:27.900 --> 00:26:33.670
The first way is to modify
the application Info.plist.

00:26:33.830 --> 00:26:36.110
Simply add a key.

00:26:36.500 --> 00:26:38.560
with a value,
and the value is just an array

00:26:38.560 --> 00:26:40.960
with a list of keys which
you don't want us to sync.

00:26:45.770 --> 00:26:51.310
And the advantage of that over the
secondary scheme is that we look at

00:26:51.470 --> 00:26:55.800
each application before we go sync them,
and that means your application

00:26:55.800 --> 00:26:59.770
doesn't have to run at all
before we go and examine it.

00:27:00.270 --> 00:27:03.210
The secondary mechanism by which
we just look in the preferences

00:27:03.210 --> 00:27:07.580
for that application itself,
obviously you have to at least

00:27:07.580 --> 00:27:12.800
run the application once so it
generated a preference file.

00:27:12.940 --> 00:27:18.220
We look at the exclusion
list in that order,

00:27:18.220 --> 00:27:22.740
so the preferences settings
will override defaults in the

00:27:22.810 --> 00:27:27.700
Info.plist such that if you choose,
you can make this opt-in,

00:27:27.700 --> 00:27:31.190
opt-out mechanism a default
in your own application,

00:27:31.190 --> 00:27:32.700
if that makes sense.

00:27:36.020 --> 00:27:39.930
Now the idea behind this whole
thing is that a lot of us,

00:27:40.100 --> 00:27:43.680
if we're in an education environment
or an enterprise environment,

00:27:43.680 --> 00:27:46.710
are used to using
network home directories.

00:27:46.970 --> 00:27:51.080
Now the idea behind this whole
thing is that a lot of us,

00:27:51.080 --> 00:27:54.680
if we're in an education environment
or an enterprise environment,

00:27:54.680 --> 00:27:57.720
are used to using
network home directories.

00:27:58.380 --> 00:28:01.550
So what we're doing with Preferences
Sync is essentially emulating a

00:28:01.550 --> 00:28:05.720
network home directory experience,
but using the sync mechanism.

00:28:08.480 --> 00:28:13.230
So we think that's going to bring a
lot of the advantages to network homes

00:28:13.350 --> 00:28:17.800
to people who just haven't got the...

00:28:17.980 --> 00:28:20.820
The will or the interest in
setting up a server and network

00:28:20.820 --> 00:28:22.550
homes and all of that complexity.

00:28:26.310 --> 00:28:29.120
The will or the interest in
setting up a server and network

00:28:29.120 --> 00:28:30.840
homes and all of that complexity.

00:28:35.700 --> 00:28:39.350
Now, there probably aren't that many
typical users in the audience,

00:28:39.360 --> 00:28:45.240
so what we're going to do is look at
what a developer might have set up.

00:28:45.510 --> 00:28:49.800
So in this case,
we're trying to do a demo, so we've

00:28:51.110 --> 00:28:55.750
We've set up terminal with large
fonts and some funky translucency.

00:28:55.750 --> 00:28:58.950
And we've got Xcode set up to
use a ridiculous font so that

00:28:59.060 --> 00:29:01.040
you guys can actually see it.

00:29:02.040 --> 00:29:07.970
So now we'll switch to another user,
which is our actual demo user.

00:29:13.060 --> 00:29:16.160
And as you can see,
he's set up to sync the

00:29:16.500 --> 00:29:18.360
dock and preferences.

00:29:18.460 --> 00:29:19.450
And just take a look at the dock.

00:29:19.490 --> 00:29:22.350
The dock at the moment is just a default.

00:29:22.640 --> 00:29:26.100
This is a first time sync,
just to prove that we're not

00:29:26.420 --> 00:29:28.480
doing anything on the hand.

00:29:28.870 --> 00:29:33.680
and we're going to choose to take
what was synced onto .Mac and

00:29:33.680 --> 00:29:35.700
replace what's on the computer.

00:29:35.700 --> 00:29:40.020
So you can see the dock's resized.

00:29:45.700 --> 00:29:47.610
And at this point,
what I will mention is that

00:29:47.610 --> 00:29:53.520
in reference to performance,
when I was talking about large NSDatas,

00:29:53.590 --> 00:29:58.020
probably what you want to do is not
store large NSDatas in your preferences.

00:29:58.020 --> 00:30:00.380
It was always a good idea anyway,
but now this is sort of

00:30:00.900 --> 00:30:02.620
reinforcing the fact.

00:30:02.630 --> 00:30:04.060
And we open a new terminal window.

00:30:04.060 --> 00:30:06.110
We've got the new preferences.

00:30:06.170 --> 00:30:10.560
You can see the old terminal window
that was there before is small font.

00:30:10.670 --> 00:30:12.510
Now we've got the big font.

00:30:15.520 --> 00:30:19.720
And save with Xcode,
so we got the new font.

00:30:19.720 --> 00:30:21.770
OK.

00:30:21.810 --> 00:30:23.330
Thank you, Karl.

00:30:32.500 --> 00:30:35.140
Now, I'm going to talk about
schema extensions.

00:30:35.300 --> 00:30:39.410
Now, again, for those of us who are
relatively new to sync,

00:30:40.100 --> 00:30:44.880
Schema extensions are the ability
to take an existing schema

00:30:44.880 --> 00:30:52.140
which describes some data class,
like contacts, bookmarks, mail accounts,

00:30:52.150 --> 00:30:53.710
and extend them for your own purposes.

00:30:53.800 --> 00:30:57.060
So you can add attributes,
you can add entities, or relationships.

00:30:57.110 --> 00:31:02.620
And this was fully available in Tiger,
and several applications

00:31:02.620 --> 00:31:02.620
have taken advantage of it.

00:31:03.820 --> 00:31:07.000
But there were a few limitations.

00:31:07.190 --> 00:31:10.990
We would... If you...

00:31:11.330 --> 00:31:15.540
added some schema extensions
to one of our shipping classes.

00:31:15.540 --> 00:31:20.300
We would sync them via .mac,
except for the three major ones:

00:31:20.470 --> 00:31:23.870
bookmarks, calendars, and contacts.

00:31:24.100 --> 00:31:27.390
And this limitation was due
to Panther compatibility.

00:31:27.520 --> 00:31:32.850
So to maintain the ability to just
have the Panther machines talk

00:31:32.980 --> 00:31:36.200
to Tiger machines through .Mac,
we had to restrict that.

00:31:36.240 --> 00:31:39.680
So in Leopard,
we are actually enabling all the

00:31:40.200 --> 00:31:44.760
schema extensions through .Mac
for all of those data classes.

00:31:45.600 --> 00:31:51.630
So the big deal here is there
is a transition involved.

00:31:51.630 --> 00:31:54.130
And some of you may have noticed
it in the release notes or in the

00:31:54.130 --> 00:31:57.080
notes that were on the Leopard DVD.

00:31:58.600 --> 00:32:06.170
So in order for this to work on Tiger,
for this developer seed,

00:32:06.540 --> 00:32:10.590
You have to actually run a transition
script to switch your Tiger machine

00:32:10.890 --> 00:32:14.750
from the old way of doing things
to the new way to sync to .Mac.

00:32:14.750 --> 00:32:18.420
Just for these three data classes.

00:32:21.260 --> 00:32:24.470
And that's if you want to sync your
Leopard machine with your Tiger machine.

00:32:24.480 --> 00:32:27.050
If you just upgrade your
Tiger machine to Leopard,

00:32:27.050 --> 00:32:28.200
you're good to go.

00:32:28.370 --> 00:32:32.350
But if you want to leave a Tiger machine
and you have a Leopard machine and

00:32:32.350 --> 00:32:34.190
you want to sync your contacts,
your calendars,

00:32:34.200 --> 00:32:38.830
your bookmarks between those two,
for now, you need to run the

00:32:38.850 --> 00:32:41.290
script that we provide.

00:32:42.900 --> 00:32:45.440
And the other limitation here
is that Leopard is no longer

00:32:45.440 --> 00:32:47.240
going to sync to Panther.

00:32:47.360 --> 00:32:52.010
They're essentially talking to
two different places in the sky.

00:32:52.750 --> 00:32:55.700
And a transition tiger machine
is effectively going to be

00:32:55.700 --> 00:32:58.160
doing the same thing as Leopard,
and so they won't be able

00:32:58.160 --> 00:32:59.020
to sync with Panther.

00:33:04.310 --> 00:33:07.310
So this is a little
visual of what we have.

00:33:07.570 --> 00:33:10.820
In Panther, we didn't support schema
extensions at all.

00:33:10.820 --> 00:33:15.390
In Tiger,
we supported it for a subset thereof.

00:33:15.470 --> 00:33:18.440
And in Leopard, we fully support it.

00:33:18.490 --> 00:33:26.220
And then when you run
your transition script,

00:33:26.270 --> 00:33:28.960
they're supported in Tiger as well.

00:33:35.730 --> 00:33:36.550
Excellent.

00:33:36.640 --> 00:33:43.100
So I just wanted to emphasize,
for the developer seed,

00:33:43.100 --> 00:33:44.460
this is a manual process.

00:33:44.460 --> 00:33:46.520
You can choose not to do it,
and the end result will be

00:33:46.520 --> 00:33:49.580
that on your Leopard machine,
it'll look like you're syncing

00:33:49.580 --> 00:33:55.690
to a brand new empty .Mac in the
sky for those three data classes.

00:34:00.680 --> 00:34:06.250
And the information's on the Leopard DVD.

00:34:06.250 --> 00:34:08.360
And it's not actually
attached to the session.

00:34:08.360 --> 00:34:09.490
It's on the ADC site.

00:34:09.560 --> 00:34:12.260
So if you log in with
your ADC information,

00:34:12.260 --> 00:34:13.460
it'll be there.

00:34:14.310 --> 00:34:16.400
If you upgrade to Tiger, it's automatic.

00:34:16.400 --> 00:34:19.800
And when we finally deliver
this to end user customers,

00:34:19.800 --> 00:34:21.400
we will have a seamless transition.

00:34:21.400 --> 00:34:25.200
They won't have to run any
scripts or anything like that.

00:34:30.050 --> 00:34:33.400
So I'm now going to demonstrate this.

00:34:33.400 --> 00:34:36.160
If we can switch to
the demo machine again,

00:34:36.160 --> 00:34:36.910
please.

00:34:46.360 --> 00:34:52.800
So what I have here is a,
what I've done is I've pre-populated

00:34:52.880 --> 00:35:00.570
.Mac with a bunch of contact
information and synced it up there.

00:35:01.710 --> 00:35:09.080
And some of you who were here last year
may remember the People demo application.

00:35:09.080 --> 00:35:09.080
We have

00:35:11.340 --> 00:35:16.980
taken that application and it
syncs using the context schema.

00:35:17.090 --> 00:35:23.300
So we've added some
schema extensions to that.

00:35:23.300 --> 00:35:26.140
What I'm going to do is--

00:35:28.100 --> 00:35:35.250
Pull down the information from
.Mac and show that not only the

00:35:35.630 --> 00:35:41.090
contact information comes down,
but also the additional information.

00:35:41.410 --> 00:35:45.220
So at the moment,
you can see that as previously,

00:35:45.420 --> 00:35:52.080
Address Book and the People application
have the same information.

00:35:52.260 --> 00:35:54.930
And they sync locally on this machine.

00:36:03.060 --> 00:36:05.680
I'm going to make sure
I have contacts selected.

00:36:05.760 --> 00:36:15.870
So again, it's a first time sync,
so I'm just going to replace

00:36:15.940 --> 00:36:18.100
what's on this computer.

00:36:20.080 --> 00:36:22.900
And the idea here is that we just go up,
we get all the contact

00:36:22.900 --> 00:36:26.190
information as we usually do,
but in addition there's

00:36:26.190 --> 00:36:27.640
extra information.

00:36:27.780 --> 00:36:30.400
So, oh,
I've got lots of contacts already.

00:36:30.400 --> 00:36:32.790
I could go through the data change
alert and see what's changed,

00:36:32.910 --> 00:36:35.420
but I'll not worry about that for now.

00:36:36.490 --> 00:36:39.390
And whoa, so I got a whole bunch of data.

00:36:39.470 --> 00:36:43.890
And what we've done in the extension
to this is that the contact

00:36:43.890 --> 00:36:48.440
information we have is name,
address, usual stuff like that.

00:36:48.520 --> 00:36:53.230
And what we added to spice things
up is we got the photograph.

00:36:53.260 --> 00:36:57.420
There's my photograph of me
sitting in my office working hard.

00:36:57.800 --> 00:37:02.600
Got various other members of the
team who contributed their photo.

00:37:03.690 --> 00:37:07.300
And the extension is we've
got these alternative

00:37:07.300 --> 00:37:10.830
photographs that have come in.

00:37:12.150 --> 00:37:14.790
coupled with that data.

00:37:14.840 --> 00:37:18.650
And that's Paul on a really bad day.

00:37:21.630 --> 00:37:25.330
So you see the schema extensions with
contacts works fine through .Mac.

00:37:25.340 --> 00:37:28.840
Yeah, you should applaud.

00:37:28.840 --> 00:37:30.080
Okay.

00:37:30.080 --> 00:37:34.290
Can we go back to the slides again,
please?

00:37:48.120 --> 00:37:51.480
Now, the biggest thing about a developer
conference is that we try and

00:37:51.580 --> 00:37:55.400
sell you on how much work we've
done to make your lives easier.

00:37:55.470 --> 00:37:59.850
So, the bulk of the rest of the talk,
obviously, is going to be talking about

00:37:59.850 --> 00:38:01.560
making your lives easier.

00:38:03.280 --> 00:38:07.500
Again, we got a lot of feedback,
a lot of input from everybody saying that

00:38:07.620 --> 00:38:10.890
sync was actually a hard thing to do.

00:38:11.290 --> 00:38:15.550
We've had successes with
several third parties,

00:38:15.630 --> 00:38:19.000
some very successful applications, but

00:38:19.680 --> 00:38:23.210
It's still a hard thing to grasp,
and some aspects of it seem

00:38:23.210 --> 00:38:27.150
much more complicated than
they otherwise need to be.

00:38:28.490 --> 00:38:30.760
So, why do we want to make
it less complicated?

00:38:30.760 --> 00:38:34.080
Well, we want to make sure that you
guys can write sync into your

00:38:34.100 --> 00:38:37.120
application and adopt it because,
again, our users love it.

00:38:41.150 --> 00:38:42.100
So what have we heard about?

00:38:42.100 --> 00:38:45.160
Well,
it seems that there's a certain amount of

00:38:45.160 --> 00:38:49.940
boilerplate code that we have to write,
and that's not that unusual.

00:38:49.940 --> 00:38:52.840
But the boilerplate code is
not actually very simple.

00:38:52.840 --> 00:38:54.210
It's not copy and paste.

00:38:54.210 --> 00:38:56.780
You've got to understand what's going on.

00:38:56.780 --> 00:39:00.310
There's a state machine behind the whole
sync process and being a sync client.

00:39:01.430 --> 00:39:04.380
There are lots of edge cases
that you have to deal with during

00:39:04.380 --> 00:39:08.590
certain phases in the state machine,
and we throw a bunch of exceptions

00:39:08.590 --> 00:39:10.900
which you have to remember to catch.

00:39:13.150 --> 00:39:17.330
So we looked at that list and thought,
well, how can we address those?

00:39:17.590 --> 00:39:20.840
This is the slide we had from last year.

00:39:20.840 --> 00:39:25.770
And there's a lot to think about
when you're writing a sync client.

00:39:27.190 --> 00:39:30.320
I don't know about you, but it scares me.

00:39:30.370 --> 00:39:35.890
So to deal with this complexity,
we thought we'd first of all start with

00:39:35.890 --> 00:39:41.240
the API and try and simplify things.

00:39:45.090 --> 00:39:49.140
So the idea is try and make it simpler
so that you don't need to understand

00:39:49.140 --> 00:39:51.970
as many details as you do currently.

00:39:52.850 --> 00:39:54.640
Reduce the amount of
code you need to write,

00:39:54.650 --> 00:39:56.690
always a good thing.

00:39:56.690 --> 00:39:59.120
And eliminate the need for
you to actually understand the

00:39:59.120 --> 00:40:01.690
whole state machine process.

00:40:02.910 --> 00:40:08.010
So our solution is something
we've called iSync Session Driver.

00:40:08.260 --> 00:40:14.400
It's a class that implements the sort
of 90% solution typical sync client.

00:40:14.430 --> 00:40:18.660
And the major focus we had is that it
will deal with all the control flow.

00:40:18.760 --> 00:40:22.530
So your application's job then,
the code that you write

00:40:22.650 --> 00:40:24.980
for the sync client,
is to just focus on

00:40:24.980 --> 00:40:26.390
the data manipulation.

00:40:26.490 --> 00:40:32.800
So all you have to do is to go grab your
proprietary formatted data and convert

00:40:32.820 --> 00:40:38.890
it into the generic sync format and
hand it to us at the appropriate time.

00:40:42.600 --> 00:40:51.000
[Transcript missing]

00:40:52.800 --> 00:40:55.160
Mike, I thought you were talking
about somebody called Mike.

00:40:55.180 --> 00:40:57.560
Is that better?

00:41:01.500 --> 00:41:10.200
[Transcript missing]

00:41:10.980 --> 00:41:13.610
Okay, well maybe it's the session behind.

00:41:13.610 --> 00:41:18.440
Yeah, pay no attention to the
man behind the curtain.

00:41:18.440 --> 00:41:22.720
Yeah, I'm not Mike, I'm Andy.

00:41:27.600 --> 00:41:31.280
So the other thing this does, this API,
is it's adopting the more

00:41:31.280 --> 00:41:34.880
Cocoa-like convention of returning
errors rather than exceptions.

00:41:34.880 --> 00:41:37.080
Now, we do still throw certain
runtime exceptions,

00:41:37.160 --> 00:41:38.340
but there are fewer to deal with.

00:41:38.500 --> 00:41:41.100
So that should make your
life a little bit easier.

00:41:41.250 --> 00:41:43.600
I just want to give you an
idea of what this looks like.

00:41:43.600 --> 00:41:47.360
This is the code sample from
a previous Sticky's example

00:41:47.540 --> 00:41:50.090
that we shipped in Tiger.

00:41:50.130 --> 00:41:52.970
I hope you can read it.

00:41:54.020 --> 00:41:55.900
And this is the new sample!

00:41:55.900 --> 00:41:57.900
Yeah, it's okay, it's not nothing, but...

00:42:09.580 --> 00:42:10.300
Right.

00:42:10.750 --> 00:42:15.650
What we've also added as a
tool in Leopard is something to

00:42:15.650 --> 00:42:18.810
support improvements in iSync.

00:42:19.350 --> 00:42:26.390
We came across a lot of new phones that
are being developed now that use SyncML.

00:42:27.000 --> 00:42:29.500
We came to the conclusion that
there was going to be a way to

00:42:29.500 --> 00:42:32.960
support those more generically than
we had supported phones in the past.

00:42:32.960 --> 00:42:35.540
So there's a new tool
called iSync Plugin Maker,

00:42:35.540 --> 00:42:41.730
shipping on every Leopard developer DVD,
and it allows anyone to develop a plugin

00:42:42.080 --> 00:42:45.320
for iSync that will support a phone.

00:42:45.340 --> 00:42:49.070
So all you have to do
is configure the plugin,

00:42:49.230 --> 00:42:53.700
you can run test suites with it,
no code required.

00:42:53.700 --> 00:42:58.340
You can add some code if necessary,
but the idea is to remove any

00:42:58.340 --> 00:43:00.060
necessity for you to write code.

00:43:00.060 --> 00:43:03.950
And...

00:43:07.110 --> 00:43:10.280
If anyone has any more specific
questions on this tool,

00:43:10.640 --> 00:43:13.750
we'll be available to answer
those questions in the

00:43:13.750 --> 00:43:15.310
lab later this afternoon.

00:43:15.320 --> 00:43:18.140
Or you can ask questions
at the Q&A session.

00:43:20.660 --> 00:43:25.450
We think this is going to really
help our support for new phones as

00:43:25.450 --> 00:43:28.880
they come online because basically
we don't have to do all the work now.

00:43:28.880 --> 00:43:30.400
We can have other people do it.

00:43:30.480 --> 00:43:32.630
Always a good thing.

00:43:38.240 --> 00:43:40.720
So for some reason the other
thing that we've heard is

00:43:40.720 --> 00:43:43.180
that debugging sync is hard.

00:43:43.270 --> 00:43:47.760
You know, there's a client involved,
there's a server involved,

00:43:47.780 --> 00:43:50.540
there's some asynchronous
GUI that we throw up involved,

00:43:50.570 --> 00:43:53.360
sometimes there are
other clients involved.

00:43:54.370 --> 00:43:57.650
So to try and give you a
better picture on that,

00:43:57.650 --> 00:43:59.970
we've provided the
SynchroSpator application.

00:44:00.120 --> 00:44:02.340
Now up until now,
this was just a sort of download

00:44:02.340 --> 00:44:05.650
available on the ADC site,
so not everybody had it.

00:44:05.750 --> 00:44:08.600
And what we've done is now made it
a fully supported developer tool.

00:44:08.600 --> 00:44:14.480
It ships in Leopard,
and we've made some enhancements

00:44:14.480 --> 00:44:17.010
to it to improve it.

00:44:17.340 --> 00:44:22.290
And what I'm going to do is ask Paul to
come up and do a fairly extensive

00:44:22.440 --> 00:44:26.410
walkthrough of all its capabilities.

00:44:33.490 --> 00:44:35.800
So while Paul's just setting up,
how many of you have

00:44:35.800 --> 00:44:37.400
actually used Sync Respector?

00:44:37.400 --> 00:44:42.880
Okay, yeah, there's some hands down here
at the front for some reason,

00:44:42.880 --> 00:44:45.490
but yeah, okay, so some of you.

00:44:45.500 --> 00:44:47.920
So to some of you this will be new.

00:44:47.920 --> 00:44:50.920
Can I--another little online survey.

00:44:50.920 --> 00:44:57.160
How many people have developed a sync
application and not used Sync Respector?

00:44:57.160 --> 00:44:58.990
Real programmers.

00:45:02.810 --> 00:45:03.640
It does on Leopard.

00:45:03.690 --> 00:45:07.340
It does on Leopard.

00:45:07.410 --> 00:45:11.980
Yes, for those of you unfamiliar,
we did post a version of Sync Respector.

00:45:11.980 --> 00:45:15.200
It was fully available,
but unfortunately it wasn't compatible

00:45:15.200 --> 00:45:18.340
with the final releases of Tiger.

00:45:18.430 --> 00:45:23.300
So it's been a little bit
difficult to get hold of this tool.

00:45:24.130 --> 00:45:27.190
But that problem should be done with now.

00:45:27.420 --> 00:45:28.610
So over to Paul.

00:45:28.660 --> 00:45:29.990
PAUL SELIMA: Oh, all right.

00:45:30.020 --> 00:45:32.740
So I'm going to give the quick run
through for those of you guys who

00:45:32.740 --> 00:45:34.840
have not seen SyncRespector before.

00:45:34.840 --> 00:45:38.380
This is what we like to call the
Swiss Army knife of sync development.

00:45:38.380 --> 00:45:41.760
It does pretty much everything
we can put a GUI on top of.

00:45:41.770 --> 00:45:44.370
And as you can see here,
we've got our various different windows.

00:45:44.430 --> 00:45:47.880
And I'm just going to take some time
and run you through each one of these.

00:45:47.940 --> 00:45:50.470
To start off with,
we have the Clients tab.

00:45:50.480 --> 00:45:53.000
This is showing every registered client.

00:45:53.000 --> 00:45:57.890
And for demo's sake,
let's add that Mac to this.

00:46:05.420 --> 00:46:06.920
Here we go, yada, yada, yada.

00:46:06.920 --> 00:46:15.910
So the interesting thing to note here
is that for those of you who were able

00:46:15.910 --> 00:46:18.980
to get Sync Respector working on Tiger,
you'll now notice that we have

00:46:19.040 --> 00:46:20.540
our one and only .Mac client.

00:46:20.540 --> 00:46:24.930
This is a throwback to what Andy was
mentioning in that we've transitioned

00:46:24.930 --> 00:46:27.340
how Leopard machines sync to .Mac.

00:46:27.400 --> 00:46:31.800
So as you can see here,
we have our various clients.

00:46:31.950 --> 00:46:35.360
We can see where they're registered,
if they have a sync alert handler,

00:46:35.360 --> 00:46:37.940
or if they have a sync tool,
which are the two mechanisms by which

00:46:37.940 --> 00:46:41.980
we contact a sync client when it's
time for them to do some syncing.

00:46:41.980 --> 00:46:44.890
We can have a look at what
they're registered to sync,

00:46:44.890 --> 00:46:46.480
when they've last synced.

00:46:46.480 --> 00:46:48.280
You'll notice no one
here has ever synced,

00:46:48.280 --> 00:46:49.920
so we have no generational number.

00:46:51.820 --> 00:46:52.930
Actually, let's change that.

00:46:52.960 --> 00:46:54.640
Let's get address book in the game.

00:46:54.640 --> 00:46:59.240
So you can see here address book synced.

00:46:59.240 --> 00:46:59.940
Everything was a success.

00:46:59.940 --> 00:47:02.890
Everyone, you know,
and there was much rejoicing.

00:47:02.900 --> 00:47:08.890
We can see here for the registration, we,
well, sort of blot out there,

00:47:08.890 --> 00:47:12.320
but the schema.plist of
the client registration,

00:47:12.400 --> 00:47:14.780
we can see for each entity what
attributes they're syncing.

00:47:14.780 --> 00:47:18.760
So very helpful in finding any
lint problems with coming up with

00:47:18.760 --> 00:47:21.120
your client registration plist.

00:47:22.170 --> 00:47:24.890
Additionally, you can also use this
to drive some syncs.

00:47:25.130 --> 00:47:28.420
So address book, for example,
has a sync tool.

00:47:28.580 --> 00:47:31.080
So when we click sync up here,
the sync tool will be alerted.

00:47:31.160 --> 00:47:32.710
Address book will have synced.

00:47:32.850 --> 00:47:34.090
Again, rejoice.

00:47:34.090 --> 00:47:38.900
And then lastly,
for each one of these entities,

00:47:38.940 --> 00:47:40.340
we can set our sync mode.

00:47:40.340 --> 00:47:43.500
So we can set it to pull the truth,
fast sync, slow sync, or refresh sync.

00:47:43.530 --> 00:47:47.260
All these are very useful in making sure
that your application can handle any kind

00:47:47.270 --> 00:47:50.830
of sync that the sync server requests.

00:47:51.050 --> 00:47:54.100
All right, so that's the Clients tab.

00:47:54.110 --> 00:47:57.310
The Truth tab,
which doesn't like small screens.

00:47:57.610 --> 00:48:00.240
Darn.

00:48:00.240 --> 00:48:02.600
Let's add some more entries in here
so we can have a look at these.

00:48:02.600 --> 00:48:09.110
That's my favorite contact.

00:48:15.000 --> 00:48:18.890
And so we can see lower down here, darn,
I wish I could show you the top.

00:48:19.020 --> 00:48:20.900
We have a rubber chicken up
here from when demos go bad.

00:48:20.900 --> 00:48:24.420
It's not going to help, but there you go.

00:48:24.530 --> 00:48:27.400
So as you can see here, we've got,
if you can see the headers,

00:48:27.400 --> 00:48:29.960
we'll have the global IDs,
what kind of record it is,

00:48:29.960 --> 00:48:32.480
what generation it was added,
and the generation it

00:48:32.480 --> 00:48:33.960
was last modified on.

00:48:33.960 --> 00:48:37.060
And then we can have a look at,
for each application,

00:48:37.180 --> 00:48:39.810
what the local ID is
for that application.

00:48:40.800 --> 00:48:43.060
You can drill down into it to
see its various properties.

00:48:43.060 --> 00:48:46.400
These, again,
don't like these small table views.

00:48:46.400 --> 00:48:50.720
But the useful thing here is not
only can we search by record ID,

00:48:50.720 --> 00:48:54.820
so we could pick 8C and not
find it because it's going

00:48:54.820 --> 00:48:58.580
to be the only one there,
or we can also search by properties.

00:48:58.580 --> 00:49:01.080
So for example,
if I wanted to find the Apple,

00:49:01.080 --> 00:49:02.980
did we get rid of the Apple card?

00:49:02.980 --> 00:49:07.300
Again,
where's the chicken when you need it?

00:49:11.900 --> 00:49:12.320
Here we go.

00:49:12.320 --> 00:49:14.920
So that one-two-one card I created,
you'll now notice there's one record.

00:49:14.920 --> 00:49:16.390
You can't see it,
but I promise you it's there.

00:49:16.400 --> 00:49:19.340
Useless.

00:49:23.100 --> 00:49:26.300
So we have our conflict tab here.

00:49:26.300 --> 00:49:28.660
And when there's a conflict,
which is kind of hard to demo,

00:49:28.660 --> 00:49:30.530
and obviously we can't do
all the easy demo stuff,

00:49:30.530 --> 00:49:32.160
so we'll save the hard stuff for later.

00:49:32.160 --> 00:49:35.640
But when there's a conflict existing,
you can have a look

00:49:35.640 --> 00:49:37.120
at the various values.

00:49:37.120 --> 00:49:40.690
It's pretty much an alternative UI to
what Conflict Resolver shows you.

00:49:40.700 --> 00:49:45.810
We have our history tab, which...

00:49:46.020 --> 00:49:48.340
In order to get going,
we enable call history

00:49:48.340 --> 00:49:49.870
in the preference pane.

00:49:49.910 --> 00:49:55.150
And we get address book back and going.

00:50:00.140 --> 00:50:02.380
So as you can see here,
we've got a history.

00:50:02.380 --> 00:50:03.700
It's got some very useful things.

00:50:03.700 --> 00:50:06.830
We can look at the truth
for any generation.

00:50:06.920 --> 00:50:10.980
So this is what the truth looked like
at the time of this particular sync.

00:50:10.980 --> 00:50:12.940
We can, for each client,
have a look at what

00:50:13.000 --> 00:50:14.130
changes they pushed us.

00:50:14.360 --> 00:50:16.240
We can see here that we deleted a record.

00:50:16.320 --> 00:50:21.930
And for the Brave, we have call history,
which is basically a recording of every

00:50:21.930 --> 00:50:25.740
single call that your sync client made
into the Sync Services public API,

00:50:25.780 --> 00:50:27.490
including its return values,
how long it took,

00:50:27.580 --> 00:50:29.050
all of those fun things.

00:50:29.130 --> 00:50:32.690
So you can see here that
it pulled a change back.

00:50:32.840 --> 00:50:35.610
And we can see the
various values of that.

00:50:41.000 --> 00:50:43.010
So yeah, Sync Inspector definitely
is a Swiss Army knife.

00:50:43.100 --> 00:50:45.030
We highly encourage you guys
all to go out and play with it.

00:50:45.090 --> 00:50:47.640
Now, for those of you who
were using this on Tiger,

00:50:47.640 --> 00:50:50.600
you'll be happy to know that
we've added a new panel here,

00:50:50.600 --> 00:50:53.600
or at least enabled a panel here,
which is the schema panel.

00:50:53.600 --> 00:50:57.660
So this is another way of seeing
exactly what the sync server believes

00:50:57.660 --> 00:51:01.300
is registered in terms of data classes,
entities, etc.

00:51:01.300 --> 00:51:06.060
So using the people
extension is a good example.

00:51:06.060 --> 00:51:08.520
This is the one that Andy used,
which added those photos.

00:51:09.330 --> 00:51:11.240
We can have a look at the entities.

00:51:11.290 --> 00:51:14.270
And so you'll notice that this
entity here is the contact entity

00:51:14.360 --> 00:51:15.940
because we are extending that.

00:51:15.940 --> 00:51:17.860
And for each entity,
we can have a look at

00:51:17.860 --> 00:51:21.260
the various properties,
whether or not it is a required property.

00:51:21.260 --> 00:51:23.660
I'm sorry,
identity property and required property.

00:51:23.660 --> 00:51:26.410
We can even see what schema it's part of.

00:51:26.410 --> 00:51:28.500
So down here for the
people schema extensions,

00:51:28.500 --> 00:51:31.750
you can see that we added extreme photo,
candid photo, and location.

00:51:33.350 --> 00:51:36.480
And then more information.

00:51:36.480 --> 00:51:41.690
And then lastly, if you guys noticed it,
there was the sync plans, which,

00:51:41.690 --> 00:51:45.470
while it's up, gives you a view into
syncs as they occur.

00:51:45.660 --> 00:51:49.470
So we can cause that
display to sync again.

00:51:49.490 --> 00:51:52.880
We can see who was involved in it,
what they were syncing.

00:51:53.060 --> 00:51:56.300
The status will tell you
status as it goes along.

00:51:56.300 --> 00:51:59.190
And you can also do things like
reset the server to basically

00:51:59.190 --> 00:52:01.330
take yourself back to step one.

00:52:01.800 --> 00:52:04.300
And then the last thing I want
to talk about very quickly

00:52:04.300 --> 00:52:07.550
is the various preferences.

00:52:08.090 --> 00:52:09.440
Most notably, these guys.

00:52:09.440 --> 00:52:11.000
Call history,
which you would enable in order

00:52:11.000 --> 00:52:13.000
to get that history tab to
show you all those fun things.

00:52:13.000 --> 00:52:17.440
And extensive logging,
which is basically a very extensive dump,

00:52:17.440 --> 00:52:20.460
which we often ask you guys,
if you follow radars,

00:52:20.460 --> 00:52:23.880
to include along with any
sync issues that might arise.

00:52:23.880 --> 00:52:29.390
Yeah, and that's Sync Respector.

00:52:29.400 --> 00:52:30.850
Thank you, Paul.

00:52:41.980 --> 00:52:44.020
So the summary, of course,
is we want you to add

00:52:44.110 --> 00:52:44.870
sync to your application.

00:52:44.890 --> 00:52:50.970
Now, before I switch to the next slide,
I obviously hadn't seen the

00:52:50.970 --> 00:52:52.010
keynote like everybody else.

00:52:52.120 --> 00:52:58.790
So I was unprepared for the fact
that there wasn't one more thing.

00:53:07.600 --> 00:53:13.390
So when we were, as I said earlier,
we were getting a lot of feedback from

00:53:13.390 --> 00:53:20.520
developers that the process of developing
a sync client was just too complicated.

00:53:20.520 --> 00:53:26.180
And they just wanted it to be much,
much simpler.

00:53:28.910 --> 00:53:34.940
So we put a great deal of effort
into trying to make it really easy.

00:53:34.940 --> 00:53:39.840
And the way we've done that is
to leverage one of the other

00:53:39.940 --> 00:53:41.260
technologies that we use.

00:53:41.270 --> 00:53:45.180
We use it internally at Apple a lot,
which is Core Data.

00:53:47.910 --> 00:53:51.240
We expect there are lots and
lots of applications out there

00:53:51.240 --> 00:53:53.810
that are already using Core Data.

00:53:54.960 --> 00:53:58.030
And we also expect that there
are lots of new applications that

00:53:58.030 --> 00:53:59.060
are going to be using Core Data.

00:54:03.900 --> 00:54:09.300
[Transcript missing]

00:54:11.700 --> 00:54:12.690
Everything.

00:54:12.690 --> 00:54:13.830
No, not quite.

00:54:13.830 --> 00:54:17.460
But maybe your next sync client
is going to be very simple.

00:54:23.230 --> 00:54:31.090
First thing you need to do, well,
like everything else,

00:54:31.090 --> 00:54:31.090
we ask you to register your sync client.

00:54:32.010 --> 00:54:34.800
and register your schema.

00:54:34.880 --> 00:54:37.080
But in this case,
you notice that we're using

00:54:38.180 --> 00:54:43.290
slightly different calls than
the usual Sync Services calls.

00:54:48.530 --> 00:54:53.720
Second step,
tell the persistent store coordinator.

00:54:53.740 --> 00:54:55.940
That's new.

00:54:56.070 --> 00:54:58.410
That's what Core Data gets you.

00:55:02.930 --> 00:55:07.990
So what we're doing here is
leveraging Core Data to track changes.

00:55:08.080 --> 00:55:08.880
It already does that.

00:55:08.880 --> 00:55:11.500
It has to do that for the application.

00:55:12.460 --> 00:55:17.760
And what we require of you to be a
sync client is that you track changes.

00:55:18.010 --> 00:55:22.530
Hence,
we can just get Core Data to do it.

00:55:26.840 --> 00:55:28.700
Last thing to do?

00:55:29.310 --> 00:55:31.780
Well, you just sync.

00:55:31.820 --> 00:55:40.740
And there is a third step,
but there is no fourth step.

00:55:49.790 --> 00:55:55.080
So there are a number of
caveats to this support.

00:55:55.110 --> 00:55:59.820
The idea is that your
Core Data model is your sync schema.

00:55:59.930 --> 00:56:04.900
So this technology is useful for
those people who have an application

00:56:04.900 --> 00:56:08.600
where you're using a Core Data model
and it just literally maps into

00:56:08.740 --> 00:56:10.610
whatever sync schema you have.

00:56:10.680 --> 00:56:15.230
So for new applications,
this is quite an interesting possibility.

00:56:15.440 --> 00:56:19.580
For existing applications,
there may be some changes involved.

00:56:20.060 --> 00:56:21.840
Core Data is going to be
tracking your changes,

00:56:21.850 --> 00:56:25.690
so you don't need to do any of that work
in the background to support fast sync.

00:56:28.250 --> 00:56:31.160
There's a certain amount of
work that you still need to do,

00:56:31.160 --> 00:56:34.060
which you would need to do
for any sync schema client.

00:56:34.220 --> 00:56:38.170
For example,
when we present your data class

00:56:38.170 --> 00:56:42.730
in the dot Mac preference pane,
those names have to be localized.

00:56:42.900 --> 00:56:51.620
There's currently no way to put that
information into a Core Data model.

00:56:51.620 --> 00:56:51.620
But we'll be looking
at that in later drops.

00:56:52.280 --> 00:56:56.260
The big thing here is that it's
not compatible with all schemas,

00:56:56.260 --> 00:56:58.520
all data classes.

00:56:58.570 --> 00:57:03.970
So it's not going to solve the world's
problems in terms of the sync universe.

00:57:06.010 --> 00:57:10.480
In particular, some of the existing data
classes that we ship aren't quite

00:57:10.570 --> 00:57:12.380
compatible with Core Data Sync.

00:57:17.010 --> 00:57:20.440
Now this technology is not
completely in the seed,

00:57:20.440 --> 00:57:25.890
so unfortunately you can't go away and
write your six line sync clients today.

00:57:26.530 --> 00:57:31.270
But we will be providing more
information and documentation later on,

00:57:31.270 --> 00:57:34.830
and you're welcome to come and to ask
questions at the end of this session

00:57:35.020 --> 00:57:38.630
or at the lab this afternoon at,
I think it's 5 o'clock.

00:57:45.370 --> 00:57:50.500
So we're going to ask Paul to come
up again and do a demo of this.

00:57:50.500 --> 00:57:52.740
Now, it's a little bit
difficult to demonstrate.

00:57:52.740 --> 00:57:57.280
What we'll do afterwards is sort of
try and walk you through the project,

00:57:57.370 --> 00:57:58.740
which is minimal.

00:57:59.640 --> 00:58:03.700
What we have here are
two sample applications.

00:58:03.700 --> 00:58:07.900
The key one at the moment
is Simple Stickies.

00:58:07.900 --> 00:58:09.780
That's a very simple sync client.

00:58:09.780 --> 00:58:14.130
It's written purely as a demo,
although we do supply the

00:58:14.130 --> 00:58:16.540
sample code on the Leopard DVD.

00:58:16.540 --> 00:58:20.460
This has been rewritten since
Tiger to use iSync Session Driver.

00:58:20.460 --> 00:58:22.870
So here,
what we're trying to do is give you

00:58:23.000 --> 00:58:26.990
a nice example of the two different
ways you can use the technologies

00:58:26.990 --> 00:58:29.040
we're supplying in Leopard.

00:58:32.020 --> 00:58:38.500
So what Paul can do here is he can
modify the title of the sticky,

00:58:38.540 --> 00:58:43.500
add a new one, change colors,
change the translucency.

00:58:43.500 --> 00:58:46.390
You can make any number
of changes in here.

00:58:48.240 --> 00:58:51.020
And then when you save
all of these stickies,

00:58:51.020 --> 00:58:54.230
you'll see them reflected
in the other application,

00:58:54.230 --> 00:58:58.050
which for various reasons
we've called Fancy Stickies.

00:59:00.900 --> 00:59:01.720
Hey, Presto!

00:59:01.800 --> 00:59:03.310
In Fancy Stickies, they pop up.

00:59:03.400 --> 00:59:04.840
We've got the new sticky.

00:59:04.840 --> 00:59:07.490
We've got the new translucency.

00:59:07.490 --> 00:59:13.860
And Fancy Stickies is using the
very same schema as Simple Stickies

00:59:14.030 --> 00:59:17.400
because the Core Data model is
compatible with that schema.

00:59:26.980 --> 00:59:28.660
Well, let's do a bit more demo.

00:59:28.660 --> 00:59:29.270
That's more.

00:59:29.290 --> 00:59:29.780
That's more.

00:59:29.780 --> 00:59:30.400
All right.

00:59:30.400 --> 00:59:32.260
Here we go.

00:59:32.370 --> 00:59:34.240
Can't do the font on here.

00:59:34.270 --> 00:59:36.110
Now in green.

00:59:37.260 --> 00:59:40.560
So the actual mechanism by which we're
showing you this isn't that great,

00:59:40.560 --> 00:59:42.470
but the things underneath,
the underpinnings here

00:59:42.470 --> 00:59:43.410
are just excellent.

00:59:43.430 --> 00:59:45.520
We've got one guy just
using Session Driver,

00:59:45.540 --> 00:59:48.020
another guy just using Core Data.

00:59:48.070 --> 00:59:50.900
PAUL SELFIMAN: Yeah,
so the point that this demonstration

00:59:50.900 --> 00:59:53.360
is trying to emphasize is
that for certain applications,

00:59:53.360 --> 00:59:56.030
you will want to use
iSync Session Driver.

00:59:56.120 --> 00:59:59.630
And in the future,
for those applications that are

00:59:59.630 --> 01:00:02.430
already using Core Data and where
you have a compatible schema,

01:00:02.480 --> 01:00:05.740
the Core Data Sync technology
may be the way to go.

01:00:13.900 --> 01:00:18.170
No, that wasn't supposed to be the
place where you all applauded,

01:00:18.170 --> 01:00:19.270
so...

01:00:20.350 --> 01:00:23.970
Can we look at the,
we'll just try and walk you

01:00:24.110 --> 01:00:27.140
through the Xcode project quickly.

01:00:32.000 --> 01:00:36.300
So the model here is the, as you can see,
is the Xcode model.

01:00:36.300 --> 01:00:38.600
It's very,
very simple in this particular case.

01:00:41.550 --> 01:00:44.420
Small number of attributes, translucency.

01:00:44.480 --> 01:00:47.160
The application, small number of classes.

01:00:47.160 --> 01:00:49.780
We've got a delegate,
we've got the sticky that

01:00:49.780 --> 01:00:55.600
represents the entity concerned,
and then some UE controllers.

01:00:55.600 --> 01:00:55.600
But the

01:00:59.460 --> 01:01:02.990
Yeah, what Paul's trying to do is to
just do a search for the project

01:01:03.000 --> 01:01:06.900
to prove that there's really not
that much code involved in syncing.

01:01:06.900 --> 01:01:10.660
So that's the...

01:01:14.420 --> 01:01:17.730
It's too difficult to read,
but there's a small amount

01:01:17.740 --> 01:01:28.930
of code involved in talking
to the object coordinator.

01:01:46.420 --> 01:01:49.320
Okay, well, yeah,
I think that pretty much covers it.

01:01:49.400 --> 01:01:50.400
Yeah.

01:01:50.400 --> 01:01:53.380
So what we'll do now,
we've got a couple of minutes spare,

01:01:53.410 --> 01:01:58.200
so all I wanted to just quickly
show you was iSync Plugin

01:01:58.200 --> 01:02:01.680
Maker since we got it in the doc.

01:02:01.680 --> 01:02:02.680
So this is the-- hmm?

01:02:02.880 --> 01:02:05.080
That countdown includes Q&A.

01:02:11.840 --> 01:02:14.860
Oh, we're back on the--
we're back on the slide.

01:02:15.010 --> 01:02:19.700
So what we'd like you to do is add
sync to your application still,

01:02:19.700 --> 01:02:22.290
and Core Data is coming soon.

01:02:22.880 --> 01:02:25.990
So this is iSync Plugin Maker.

01:02:26.330 --> 01:02:29.580
It's a fairly sophisticated tool.

01:02:35.330 --> 01:02:39.840
But the take-home thing is
that it's all configuration.

01:02:39.860 --> 01:02:44.540
And there are some hogs where you
can add some JavaScript support.

01:02:46.310 --> 01:02:50.140
And this is for sync ML phones only,
so you can't go off and write if you have

01:02:50.140 --> 01:02:52.720
an old phone that doesn't support that,
it doesn't apply.

01:02:52.720 --> 01:02:58.180
Okay,
can we flip back to the slides again?

01:02:58.180 --> 01:02:59.310
Yeah.

01:03:02.760 --> 01:03:04.110
So Core Data Sync, coming soon.

01:03:04.200 --> 01:03:13.570
If you want more information on the
Sync Services changes in Leopard--

01:03:15.110 --> 01:03:18.760
John Galenzi is our software
technology evangelist.

01:03:18.880 --> 01:03:24.240
We have some sample code up on the site,
and as I mentioned, if you log into ADC,

01:03:24.240 --> 01:03:28.710
the Tiger Transition Kit for the
.Mac sync is available there.

01:03:28.740 --> 01:03:35.220
Some of the examples that we've shown you
today are available on the Leopard DVD.

01:03:36.410 --> 01:03:38.300
And of course there's the
URL for the Waverdead chicken

01:03:38.300 --> 01:03:39.100
that obviously doesn't work.

01:03:39.180 --> 01:03:45.450
We have a lab today at 5pm,
so I'd love to see,

01:03:45.560 --> 01:03:48.030
I don't know whether I'd
love to see all of you there,

01:03:48.030 --> 01:03:48.840
but a large subset.

01:03:48.840 --> 01:03:52.690
Thank you.