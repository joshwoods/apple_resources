WEBVTT

00:00:10.100 --> 00:00:19.800
[Transcript missing]

00:00:21.950 --> 00:00:25.660
My name is Robert Ulrich and I'm one of
the engineers working on Time Machine.

00:00:25.720 --> 00:00:31.370
And so today,
here's what we're going to cover.

00:00:31.930 --> 00:00:34.680
Rather than spend a lot
of time doing a demo,

00:00:34.680 --> 00:00:38.220
which hopefully you've already seen,
and hopefully you've actually

00:00:38.220 --> 00:00:40.370
installed this stuff on your
machine and have tried it,

00:00:40.430 --> 00:00:42.990
there's really not a lot I could
show you better than what

00:00:42.990 --> 00:00:44.460
Scott showed you on Monday.

00:00:44.460 --> 00:00:46.810
So I'm not going to spend a
lot of time showing you the UI,

00:00:46.810 --> 00:00:48.720
because hopefully you've
already seen that.

00:00:48.780 --> 00:00:50.960
Instead,
what we're going to do is we're going

00:00:50.960 --> 00:00:54.460
to talk a little bit about what it
is that we've done with Time Machine.

00:00:54.460 --> 00:00:58.500
Some of our design goals, the features,
and why we've done them

00:00:58.630 --> 00:01:00.440
the way we've done them.

00:01:01.160 --> 00:01:04.790
How Time Machine works internally,
and how to make yourself

00:01:04.790 --> 00:01:08.130
play nice with Time Machine,
a few tips for your app,

00:01:08.130 --> 00:01:10.680
and then we'll have
plenty of time for Q&A.

00:01:13.190 --> 00:01:15.600
So why did we do Time Machine?

00:01:15.640 --> 00:01:20.230
As Scott kind of mentioned on Monday,
we did a survey of a bunch of users

00:01:20.230 --> 00:01:23.220
and we asked them if they thought
they should be backing up their data.

00:01:23.220 --> 00:01:26.420
And what we found out was that 80%
of the people said that they believed

00:01:26.420 --> 00:01:28.210
they should be backing up their data.

00:01:28.210 --> 00:01:32.380
So we then asked them, okay, well,
so how many of you do it?

00:01:32.380 --> 00:01:35.990
And we got this answer,
26%. So this means that over

00:01:35.990 --> 00:01:39.140
half the users not only know they
should be backing up their data,

00:01:39.140 --> 00:01:40.450
they're not doing it.

00:01:42.420 --> 00:01:44.850
So in addition,
the people who do it on a regular

00:01:44.850 --> 00:01:50.550
basis turns out to be 4%. And that's
kind of not a good number because,

00:01:50.590 --> 00:01:53.920
you know, you want to protect your data.

00:01:53.920 --> 00:01:55.600
It is important.

00:01:55.600 --> 00:01:57.290
And mistakes can happen.

00:01:57.290 --> 00:02:01.040
Things can get deleted and, you know,
hardware can crash.

00:02:04.530 --> 00:02:05.900
Why don't people backup today?

00:02:06.190 --> 00:02:09.080
Well, a lot of the reasons,
there's many reasons,

00:02:09.080 --> 00:02:09.860
here's a few of them.

00:02:09.870 --> 00:02:14.160
Existing solutions can be
intimidating to set up,

00:02:14.290 --> 00:02:16.570
they have a lot of options,
you see huge lists of files and you

00:02:16.570 --> 00:02:19.540
don't know which ones you really need
to backup and which ones you don't.

00:02:19.600 --> 00:02:22.940
It doesn't happen for you automatically,
so it's not just part of your life,

00:02:22.940 --> 00:02:24.860
it's something you have to think to do.

00:02:24.860 --> 00:02:27.760
It's not convenient, you know,
because you've got to remember when

00:02:27.760 --> 00:02:29.510
to do it and you've got to have,
you know,

00:02:29.510 --> 00:02:31.340
set everything up to do it at that time.

00:02:31.340 --> 00:02:34.790
And it can be really hard to
find those files later when

00:02:34.880 --> 00:02:36.520
you do actually need them,
you know,

00:02:36.700 --> 00:02:40.200
you're fumbling through different disks,
you know, you don't know where it's at

00:02:40.200 --> 00:02:41.600
and it can be very difficult.

00:02:41.650 --> 00:02:43.760
So we've tried to make
things really simple,

00:02:43.840 --> 00:02:44.790
that's kind of a goal.

00:02:44.820 --> 00:02:47.790
So the main design goals
we have are shown here.

00:02:47.790 --> 00:02:50.460
We want it to be really
simple to configure,

00:02:50.460 --> 00:02:53.800
integrated with the system
and just part of your life,

00:02:53.800 --> 00:02:56.410
automated so that it
just happens for you,

00:02:56.410 --> 00:03:00.300
you don't have to think about it,
very convenient to access your

00:03:00.440 --> 00:03:04.360
data and get to those files later,
and compatible with the system.

00:03:04.360 --> 00:03:08.590
with the system you use today,
not something that's hacked on.

00:03:09.390 --> 00:03:13.320
So here's what we did to
tackle the configuration.

00:03:13.570 --> 00:03:16.370
Some of you who've hopefully
installed Leopard by now and tried it,

00:03:16.520 --> 00:03:17.800
you've probably seen this.

00:03:17.980 --> 00:03:22.240
But we think we did a pretty good job of
making things really simple to configure.

00:03:22.300 --> 00:03:24.170
Because in fact,
all you need to do in order to

00:03:24.170 --> 00:03:30.380
run Time Machine is simply select
a disk and flip the switch.

00:03:30.760 --> 00:03:33.100
And then you're running Time Machine.

00:03:33.290 --> 00:03:37.320
So that hopefully will encourage
plenty of people to do it

00:03:37.900 --> 00:03:40.410
that are not doing today.

00:03:40.610 --> 00:03:45.580
And of course, one of the major features
of Time Machine is the

00:03:45.580 --> 00:03:47.080
integration with the system.

00:03:47.160 --> 00:03:48.880
We're fully integrated with the Finder.

00:03:48.970 --> 00:03:51.330
Hopefully you've already seen
the Time Machine browser,

00:03:51.330 --> 00:03:55.490
and we think this is really,
really a leap forward in terms of

00:03:55.490 --> 00:03:59.300
how to interact with backup data.

00:03:59.570 --> 00:04:01.960
In addition, we're fully integrated
with the installer.

00:04:02.020 --> 00:04:04.490
And we think this is another
really important thing.

00:04:04.640 --> 00:04:08.240
So when you go to do an install,
we've been telling people for years,

00:04:08.560 --> 00:04:12.300
before you install your machine,
go out and back up your data.

00:04:12.390 --> 00:04:15.770
And nobody does it,
because they don't know how.

00:04:15.890 --> 00:04:20.380
So today, now we can say,
go out there and back up your

00:04:20.380 --> 00:04:21.800
data before you do an install.

00:04:21.970 --> 00:04:23.790
And just offer them a
check box that says,

00:04:24.010 --> 00:04:25.080
back up my data for me.

00:04:25.330 --> 00:04:27.270
And it just happens.

00:04:31.590 --> 00:04:34.780
And then in addition, on the other side,
you can also,

00:04:34.780 --> 00:04:39.020
when you go to install a new system,
you can choose to install

00:04:39.200 --> 00:04:42.950
it directly from a backup,
which is really nice.

00:04:44.260 --> 00:04:45.320
It's automated.

00:04:45.390 --> 00:04:47.950
By default, everything is backed up.

00:04:48.090 --> 00:04:50.510
And it just happens once per day.

00:04:50.670 --> 00:04:53.600
And in addition,
we maintain rolling backups

00:04:54.080 --> 00:04:55.380
for the last couple of hours.

00:04:55.650 --> 00:05:00.770
And I'll get into that in a couple of
slides why that's useful and important.

00:05:01.990 --> 00:05:04.320
So here's the convenience.

00:05:04.560 --> 00:05:07.940
Because of the state of the art,
how disks have gotten

00:05:07.940 --> 00:05:11.100
so big and so cheap,
we've really been able to move

00:05:11.100 --> 00:05:14.470
to kind of a new paradigm,
which is to use high speed,

00:05:14.470 --> 00:05:18.680
high bandwidth storage devices,
which in our case is either

00:05:18.680 --> 00:05:23.990
locally attached external disks
or AFP servers over a local net.

00:05:25.280 --> 00:05:28.960
And this is really important
because it really brings your

00:05:28.960 --> 00:05:32.380
backups to where they're online,
they're always accessible,

00:05:32.380 --> 00:05:34.810
they're always there,
and they just become part of your system

00:05:34.810 --> 00:05:36.600
rather than being something on the side.

00:05:39.360 --> 00:05:44.690
So we use a compatible archive format,
and it's in fact so compatible

00:05:44.690 --> 00:05:46.610
that you're already using it.

00:05:46.820 --> 00:05:50.800
And that is HFS+ with journaling on.

00:05:51.110 --> 00:06:00.080
And you can view the disks on Tiger and
Panther systems because it's just HFS.

00:06:00.350 --> 00:06:04.120
And we don't encode or compress anything,
and we don't put everything

00:06:04.120 --> 00:06:07.030
into a huge data blob to make
it hard to go through later.

00:06:09.250 --> 00:06:13.110
So let's talk about a few of
the features of Time Machine.

00:06:14.640 --> 00:06:16.440
Automatic backups.

00:06:16.480 --> 00:06:19.490
Well, we backup changes on a
rolling basis each hour.

00:06:19.490 --> 00:06:22.690
So what this means is for
the last couple of hours,

00:06:22.690 --> 00:06:26.420
we always have the data at the
state it was about an hour ago.

00:06:26.420 --> 00:06:30.320
And this provides extra protection,
obviously,

00:06:30.440 --> 00:06:35.220
because if you should happen to
need to get to data that you had,

00:06:35.220 --> 00:06:37.820
you've only got an hour of lag.

00:06:38.280 --> 00:06:42.010
And at the end of the day,
we then take the last one of those and

00:06:42.020 --> 00:06:44.420
we roll it over into a daily backup.

00:06:44.420 --> 00:06:47.380
So we preserve those over time,
so that lets you go back and

00:06:47.380 --> 00:06:50.540
find older versions over time,
but you've always got a backup

00:06:50.540 --> 00:06:52.390
that's no more than an hour old.

00:06:53.810 --> 00:06:57.160
In addition,
you can specify if you happen

00:06:57.160 --> 00:06:59.890
to be somebody who doesn't want
the machine doing it hourly,

00:07:00.120 --> 00:07:04.060
you can specify that you only
want it once per day using the

00:07:04.060 --> 00:07:06.750
option in the control panel.

00:07:08.940 --> 00:07:11.460
So as you go and you
create multiple backups,

00:07:11.460 --> 00:07:14.320
you're going to end up
using more and more disks,

00:07:14.330 --> 00:07:16.480
obviously, on the backup disk.

00:07:16.570 --> 00:07:20.600
And by default,
we always keep all backups all the time.

00:07:20.600 --> 00:07:23.880
So you can always go back a year,
two years, however long,

00:07:23.880 --> 00:07:26.780
and look at every
backup that you've made.

00:07:26.850 --> 00:07:31.260
If, however, you decide that for me,
I only care about six months of backups,

00:07:31.340 --> 00:07:34.150
anything older than that,
I figure that I probably don't

00:07:34.160 --> 00:07:35.540
need or something like that.

00:07:35.610 --> 00:07:40.540
And you'd like to allow yourself to
get more data onto your backup disk,

00:07:40.570 --> 00:07:44.380
you can specify a time
period to keep backups.

00:07:44.440 --> 00:07:47.060
And in that case,
we'll still keep all your

00:07:47.060 --> 00:07:50.850
backups all the time until we
start running out of disk space.

00:07:51.150 --> 00:07:53.550
And if that's the case,
we'll start removing older

00:07:53.560 --> 00:07:55.460
backups to make room for new ones.

00:07:55.520 --> 00:07:57.850
And of course,
you always have the option,

00:07:57.980 --> 00:08:00.910
if you start running out of disk,
to buy a larger disk,

00:08:00.980 --> 00:08:02.900
which is always a good idea anyway.

00:08:02.900 --> 00:08:05.100
Because by the time
you get to that point,

00:08:05.170 --> 00:08:08.660
you know,
it may just be time to get a new disk.

00:08:08.720 --> 00:08:10.490
Because they just keep
getting bigger and cheaper,

00:08:10.490 --> 00:08:10.850
right?

00:08:10.940 --> 00:08:15.390
And in addition,
you can change the period to

00:08:15.520 --> 00:08:19.710
keep backups or manually delete
ones that you don't want.

00:08:21.620 --> 00:08:28.010
So one of the big features of
Time Machine is that you don't have to

00:08:28.010 --> 00:08:30.600
figure out what files are important.

00:08:30.660 --> 00:08:33.700
By default,
we back up everything that you

00:08:33.700 --> 00:08:35.240
need to restore a system disk.

00:08:35.290 --> 00:08:38.420
So this means that you don't
have to go and worry about,

00:08:38.590 --> 00:08:41.560
well, what if I didn't get this
one file that I need,

00:08:41.560 --> 00:08:44.240
and it's going to bite
me two years later?

00:08:44.240 --> 00:08:47.290
By default, we grab everything.

00:08:47.570 --> 00:08:49.020
And this includes system updates.

00:08:50.100 --> 00:08:54.870
And now, a lot of people,
when I first told them that, said, well,

00:08:54.920 --> 00:08:57.800
but system updates,
is that going to be too

00:08:57.800 --> 00:08:59.190
big and use too much space?

00:08:59.330 --> 00:09:03.150
But it turns out that system updates
are usually in the tens of megabytes

00:09:03.230 --> 00:09:05.260
on a hundreds of gigabytes disk.

00:09:05.260 --> 00:09:09.580
So it turns out that it's really
easy to grab system file changes.

00:09:09.580 --> 00:09:13.950
The other thing is that system files
only change every couple months or so.

00:09:14.080 --> 00:09:16.470
So it's really not a problem to do that.

00:09:18.920 --> 00:09:24.360
So here is an example of the layout
that we use for Time Machine.

00:09:25.260 --> 00:09:31.220
On the backup disk,
inside of there is a backup directory.

00:09:31.740 --> 00:09:34.600
And inside of that,
you'll see for each machine that has

00:09:34.600 --> 00:09:38.100
been backed up on this backup disk,
you'll see a folder.

00:09:38.210 --> 00:09:42.860
And inside that folder will
be a series of dated backups.

00:09:42.980 --> 00:09:46.360
And inside of each one of those
will be the disks that that

00:09:46.360 --> 00:09:48.520
machine has got backed up.

00:09:49.600 --> 00:09:53.640
So on top of that,
we use special access control

00:09:53.640 --> 00:09:59.280
lists on top of the files we lay
down that make these read only.

00:09:59.680 --> 00:10:01.020
These cannot be modified.

00:10:01.190 --> 00:10:02.740
You can't go and delete stuff.

00:10:02.850 --> 00:10:04.740
You can't rename stuff.

00:10:04.780 --> 00:10:09.850
The file system itself is
protected and can't be modified.

00:10:13.750 --> 00:10:18.070
So when you go to restore
with Time Machine,

00:10:18.290 --> 00:10:24.500
you can restore using the great
Time Machine interface on Leopard.

00:10:24.540 --> 00:10:28.100
You can also browse the structure
that I just showed you with your

00:10:28.100 --> 00:10:29.680
average file management tools.

00:10:31.020 --> 00:10:34.460
Or you can use the installer to
restore an entire system from

00:10:34.590 --> 00:10:36.310
a backup you've made before.

00:10:37.300 --> 00:10:41.160
Furthermore, if you buy a new system and
you want to move your files

00:10:41.160 --> 00:10:45.360
over to a brand new system,
you can make a backup,

00:10:45.450 --> 00:10:48.400
buy your new system,
and then use the migration assistant to

00:10:48.540 --> 00:10:52.200
migrate directly from that backup disk,
which is really a nice feature.

00:10:55.720 --> 00:10:57.500
So Spotlight.

00:10:57.660 --> 00:11:02.620
Well, our backups-- how do they
interact with Spotlight?

00:11:02.760 --> 00:11:06.350
Spotlight does index your backups.

00:11:06.440 --> 00:11:08.330
And so--

00:11:08.830 --> 00:11:11.710
Obviously, the question is, well,
when I search with Spotlight,

00:11:11.710 --> 00:11:13.370
what happens to those backups?

00:11:13.450 --> 00:11:18.210
Because I don't want to search for
some text file and find the last 20

00:11:18.210 --> 00:11:21.020
revisions of that text file in there.

00:11:21.180 --> 00:11:25.180
So what happens is, by default,
Spotlight does not include

00:11:25.380 --> 00:11:27.570
backups in any of your queries.

00:11:28.140 --> 00:11:31.300
And this is not implemented yet,
but by the time we ship,

00:11:31.300 --> 00:11:33.740
there will be special
options added to Spotlight,

00:11:34.130 --> 00:11:37.830
which will allow you to tell Spotlight
that you want to search backups.

00:11:37.940 --> 00:11:45.400
And you'll be able to use Spotlight on
your backups to find files from the past.

00:11:47.660 --> 00:11:51.020
So the requirements in order
to use Time Machine are here.

00:11:51.060 --> 00:11:52.400
First of all,
you must be running Leopard.

00:11:52.400 --> 00:11:54.570
That's probably not a surprise.

00:11:54.930 --> 00:12:01.880
You must have either an external hard
disk or an Apple server on a local disk,

00:12:02.120 --> 00:12:04.280
on a local network.

00:12:04.410 --> 00:12:09.480
And we do require, once again,
journaled HFS+ disk.

00:12:10.090 --> 00:12:12.450
On the external disk,
it should be formatted that way.

00:12:12.460 --> 00:12:17.200
On a server,
we use a disk image file with a

00:12:17.200 --> 00:12:20.330
journaled HFS+ disk image file.

00:12:21.770 --> 00:12:25.290
So that's kind of an overview
of what Time Machine is.

00:12:25.650 --> 00:12:30.080
Now let's talk about a little bit
behind the scenes about how it works.

00:12:31.520 --> 00:12:36.940
So when we first make up a backup,
as should be pretty obvious,

00:12:36.980 --> 00:12:40.440
everything needs to be copied
because we don't have anything yet.

00:12:40.560 --> 00:12:43.810
So the first time through,
we simply copy everything.

00:12:45.330 --> 00:12:49.800
After you've made a first backup and
you go to make additional backups,

00:12:49.850 --> 00:12:54.140
what happens is we use the new
facility in Leopard called FSEvents,

00:12:54.140 --> 00:12:57.400
and hopefully you at least
have heard about this.

00:12:57.420 --> 00:13:01.200
This is a new feature of Leopard
where the file system itself can

00:13:01.200 --> 00:13:05.750
broadcast events that happen to you,
and so you can find out, for example,

00:13:05.750 --> 00:13:10.470
everything in the file system that
has changed since a given time period.

00:13:11.050 --> 00:13:12.140
And this is really useful.

00:13:12.140 --> 00:13:16.340
This is what we use in order to say
what has changed since the last backup.

00:13:16.340 --> 00:13:20.520
And in this case, we have four files,
and FSEvents has reported to us

00:13:20.520 --> 00:13:24.310
that files B and D have changed
since we last made a backup.

00:13:27.280 --> 00:13:33.790
So we simply create a new backup and we
copy files B and D over to that backup.

00:13:34.560 --> 00:13:36.640
So what about the other files?

00:13:36.910 --> 00:13:39.760
What we do is we don't
want to copy those.

00:13:39.760 --> 00:13:40.880
They already exist.

00:13:41.110 --> 00:13:45.420
So we use file system hard links
to point back to the previous

00:13:45.420 --> 00:13:47.900
versions in the former backup.

00:13:51.330 --> 00:13:55.250
So this has a really nice benefit
because to the user there appear

00:13:55.250 --> 00:14:00.100
to be two separate directories each
which contain four individual files.

00:14:00.170 --> 00:14:04.350
But in fact on disk
there's only six files.

00:14:07.220 --> 00:14:11.420
So this allows us to fit a
lot more stuff on the disk.

00:14:11.470 --> 00:14:14.790
And obviously,
that means we can make backups and

00:14:14.790 --> 00:14:19.890
backups and backups and backups,
even for lots of data.

00:14:20.140 --> 00:14:23.070
So if we did that, that's great,
but it still means that

00:14:23.070 --> 00:14:24.740
we create a ton of links,
right?

00:14:24.830 --> 00:14:27.940
Because everything in every folder
needs to be linked that hasn't changed,

00:14:28.020 --> 00:14:32.690
needs to be linked to the file
that's in the previous backup.

00:14:32.810 --> 00:14:36.280
So we don't really want to do that,
so we don't.

00:14:38.350 --> 00:14:41.500
So what you'd really want to do
in this case is you'd want to say,

00:14:41.500 --> 00:14:44.140
well, everything in those two
top level directories,

00:14:44.160 --> 00:14:45.030
nothing has changed.

00:14:45.140 --> 00:14:47.550
So why do I need to do anything
inside the directories?

00:14:47.600 --> 00:14:50.100
Why don't I just say,
make that directory be the

00:14:50.100 --> 00:14:51.520
same as the one before?

00:14:51.520 --> 00:14:52.640
And in fact, that's what we do.

00:14:52.640 --> 00:14:55.560
We've got a new special
kind of links that we added,

00:14:55.560 --> 00:14:58.300
which are called archive directory links.

00:14:58.300 --> 00:15:01.140
And instead,
any time we've got a top level

00:15:01.220 --> 00:15:06.120
folder which has not changed,
we simply point it to the previous one.

00:15:06.140 --> 00:15:08.640
And this lets us,
in the case where there's

00:15:08.740 --> 00:15:12.030
very few file system changes,
to create an entire backup

00:15:12.030 --> 00:15:13.570
using very little data.

00:15:13.570 --> 00:15:16.440
And this means that this
is how we're able to fit so

00:15:16.440 --> 00:15:18.370
much data on a backup disk.

00:15:22.540 --> 00:15:25.150
So let's talk about integrity.

00:15:25.240 --> 00:15:30.020
One of the issues for doing backup is
there's a lot of things on the system.

00:15:30.020 --> 00:15:32.760
And the primary one are bundles,
where you've got files that

00:15:32.760 --> 00:15:34.600
are related to each other.

00:15:34.640 --> 00:15:37.790
And as we go to backup,
obviously all the files don't get

00:15:37.910 --> 00:15:39.220
copied across the link at once.

00:15:39.370 --> 00:15:40.920
They're copied serially.

00:15:40.970 --> 00:15:45.180
And as things are copied,
it takes time to occur.

00:15:45.410 --> 00:15:48.070
And at some point,
the user can come along and modify

00:15:48.070 --> 00:15:50.900
a file before we're finished,
after we've started and

00:15:50.900 --> 00:15:52.710
before we've finished.

00:15:52.990 --> 00:15:59.960
So when we do this, once again,
after we've completed, we ask FSEvents,

00:16:00.130 --> 00:16:03.080
well, what changed while we
were doing the backup?

00:16:03.090 --> 00:16:07.200
In this case, it came back and said,
well, the user changed file B.

00:16:07.390 --> 00:16:14.170
So we use that information to then go
and recopy B to make things stable.

00:16:15.710 --> 00:16:18.920
And this repeats,
this process repeats so long

00:16:18.920 --> 00:16:20.820
as the files keep changing.

00:16:20.960 --> 00:16:23.530
But what happens is over time
we start with a very large

00:16:23.530 --> 00:16:26.110
number of files getting copied.

00:16:26.110 --> 00:16:29.830
And then we say, FSEvents, well,
we copied this 100 files.

00:16:30.150 --> 00:16:30.760
What's changed?

00:16:30.780 --> 00:16:32.580
And it says, OK, well,
these two files have changed

00:16:32.580 --> 00:16:33.540
while you were doing that.

00:16:33.610 --> 00:16:37.340
So we go through and we
then recopy those two files.

00:16:37.340 --> 00:16:42.140
And then we ask FSEvents again, well,
how many have changed now?

00:16:42.140 --> 00:16:43.320
And hopefully it comes back zero.

00:16:43.930 --> 00:16:51.050
But what happens is that the first time,
the first copying window might take, say,

00:16:51.150 --> 00:16:53.260
five minutes to copy all of those files.

00:16:53.260 --> 00:16:56.020
But then the second one,
only two or three files have

00:16:56.110 --> 00:16:57.780
changed during that period.

00:16:57.780 --> 00:17:01.320
And the copying period during
that might be a matter of seconds.

00:17:01.380 --> 00:17:06.860
So in that time period,
we only have a small window to

00:17:06.860 --> 00:17:10.230
worry about things changing.

00:17:10.230 --> 00:17:12.820
And that window continues to get smaller.

00:17:12.820 --> 00:17:14.800
And hopefully it gets
more and more stable.

00:17:14.800 --> 00:17:17.510
But we will time out in the case that
there is extremely volatile files.

00:17:17.650 --> 00:17:19.330
But that should be really rare.

00:17:19.380 --> 00:17:25.260
So how can you play
nice with Time Machine?

00:17:29.240 --> 00:17:32.750
First of all, these are the top two
things that you can do.

00:17:33.060 --> 00:17:39.120
Number one is to tell us which files
you have which we shouldn't back up.

00:17:39.290 --> 00:17:43.490
The other one is to add
support for Quick Look.

00:17:45.560 --> 00:17:47.040
So excluding files.

00:17:47.300 --> 00:17:52.110
Here are examples of files that you
might want to exclude from the system.

00:17:52.180 --> 00:17:56.200
These are temporary files that you
know they're just there for a bit.

00:17:56.360 --> 00:18:01.280
Cache files, which just cache data
from your other files.

00:18:01.350 --> 00:18:04.320
Index files, which reference other files
if they're rebuildable.

00:18:04.380 --> 00:18:08.100
And in fact, any large rebuildable file,
you should mark and tell us,

00:18:08.100 --> 00:18:10.760
if you can rebuild it,
you're better to rebuild it

00:18:10.760 --> 00:18:14.490
after restore than to have
that backed up in every copy.

00:18:14.630 --> 00:18:24.110
So here's an example where we have the,
for Safari, Safari has cache files.

00:18:24.290 --> 00:18:28.260
This was shown by
Scott earlier this week.

00:18:28.410 --> 00:18:34.000
Safari has cache files here and that we
obviously don't want to back up because

00:18:34.170 --> 00:18:38.790
they're changing all the time and
there's no reason to keep them around.

00:18:39.400 --> 00:18:43.910
So the first thing you can do is to use
one of the well known existing locations

00:18:44.290 --> 00:18:47.300
for cache files or temporary files.

00:18:47.300 --> 00:18:52.270
And this is /temp or /tilda
library caches or /library caches.

00:18:52.610 --> 00:18:56.250
In the case of Safari,
it puts its temporary files

00:18:56.250 --> 00:18:58.570
into library caches Safari.

00:18:58.900 --> 00:19:01.070
And by default,
we just don't pick them up and

00:19:01.070 --> 00:19:03.290
Safari doesn't have to do anything else.

00:19:04.870 --> 00:19:09.010
The other thing you can
do is to use this API,

00:19:09.240 --> 00:19:13.830
CS Backup Set Item Excluded,
to exclude your items.

00:19:13.900 --> 00:19:15.360
And there's two ways you can use this.

00:19:15.610 --> 00:19:18.240
The first one is to exclude by path.

00:19:18.450 --> 00:19:21.550
In this case,
you specify a URL to a path,

00:19:21.680 --> 00:19:24.600
and you pass true for exclude by path.

00:19:24.730 --> 00:19:28.720
When you do this, the path is added to a
list of excluded locations,

00:19:28.720 --> 00:19:31.100
and we won't back that location up.

00:19:32.560 --> 00:19:36.580
It should note though that
this is stored by path.

00:19:36.690 --> 00:19:40.000
So if the contents in that path happen
to move somewhere else on the disk,

00:19:40.000 --> 00:19:41.990
they will get backed up.

00:19:43.320 --> 00:19:47.020
The other way is to
exclude a specific item.

00:19:47.100 --> 00:19:50.610
If you make the same call
but specify an item URL,

00:19:51.060 --> 00:19:52.960
and this can be either
a file or a folder,

00:19:53.100 --> 00:19:56.720
and false for exclude by path,
that specific item will

00:19:56.720 --> 00:19:58.440
be marked as excluded.

00:19:58.600 --> 00:20:01.460
And it will be excluded any time
we hit it anywhere in the system.

00:20:01.610 --> 00:20:07.000
So even if it moves to another location,
it will still be excluded.

00:20:08.290 --> 00:20:10.970
On the other side,
you can find out if a particular item

00:20:10.970 --> 00:20:16.390
is currently being excluded by making
a call to CS Backup Item is excluded.

00:20:17.360 --> 00:20:23.230
And this will return true if the item
is currently excluded from the backup.

00:20:23.510 --> 00:20:27.900
And exclude by path in this
case will be set to false if the

00:20:27.900 --> 00:20:33.100
specific item has been marked
as excluded by the previous API.

00:20:33.440 --> 00:20:35.280
Otherwise, it will return true.

00:20:35.340 --> 00:20:39.460
And that means that it's excluded
because of its current location.

00:20:39.580 --> 00:20:45.310
But that can mean either that it's
at a path which has been excluded,

00:20:45.350 --> 00:20:48.450
or it's contained within a
folder which has been excluded

00:20:48.630 --> 00:20:52.390
by item rather than by path.

00:20:54.760 --> 00:21:00.190
The other thing you can do
to help with Time Machine,

00:21:00.190 --> 00:21:03.960
and this is probably the most important
one in addition to the other one,

00:21:04.160 --> 00:21:08.580
is to add Quick Look support to your app.

00:21:08.700 --> 00:21:15.220
What this does is this allows us to
preview your app contents from older

00:21:15.220 --> 00:21:18.540
versions without having to load your app.

00:21:18.680 --> 00:21:22.800
And so the user can go back,
can find that old document

00:21:22.960 --> 00:21:26.820
from your app from a month ago,
hit a button, bring it back,

00:21:26.860 --> 00:21:29.380
and you're done.

00:21:29.620 --> 00:21:34.240
If you happen to use standard data
types like HTML or RTF or PDF,

00:21:34.330 --> 00:21:39.000
we have a set of these that we'll
be shipping and you'll already work.

00:21:39.150 --> 00:21:42.030
But if you have a proprietary format,
you should look into writing

00:21:42.130 --> 00:21:43.220
a Quick Look importer.

00:21:43.290 --> 00:21:47.210
And this will also help you with
anybody else who uses Quick Look,

00:21:47.210 --> 00:21:51.510
which in Leopard will include
Spotlight and a bunch of other stuff.

00:21:54.280 --> 00:21:56.120
So copying from backups.

00:21:56.180 --> 00:21:59.640
In general,
you should never need to do this.

00:21:59.700 --> 00:22:02.740
By default,
the user goes to Time Machine,

00:22:02.740 --> 00:22:05.360
finds the file they want,
brings it forward.

00:22:05.400 --> 00:22:07.480
It just happens entirely
outside of your app space.

00:22:07.480 --> 00:22:11.440
But there may be cases where your app
decides that it really needs to pull

00:22:11.650 --> 00:22:13.800
something out of the backup store.

00:22:13.800 --> 00:22:19.050
If you do that, it's important that you
use fscopyobject to do it.

00:22:19.260 --> 00:22:22.180
You can't just go and do a simple copy.

00:22:23.490 --> 00:22:27.420
This is because it handles things
like the archive directory links

00:22:27.570 --> 00:22:31.750
correctly and will rebuild the
directory tree so that it looks right.

00:22:31.750 --> 00:22:37.970
It'll also restore all the
original files permissions.

00:22:38.370 --> 00:22:42.740
It will also remove all of
the access control lists and

00:22:42.810 --> 00:22:45.000
set all that stuff right.

00:22:45.000 --> 00:22:48.380
It should be noted that this is exactly
the same copy engine which is currently

00:22:48.380 --> 00:22:51.470
used by Finder and Time Machine,
so you're guaranteed to

00:22:51.470 --> 00:22:53.720
work into the future.

00:22:55.830 --> 00:22:58.710
So here's an additional few
helpful tips for your application.

00:22:58.740 --> 00:23:07.260
When you use index files, if possible,
make the index rebuildable.

00:23:07.270 --> 00:23:10.840
Don't put any non-rebuildable
information into the index.

00:23:11.150 --> 00:23:15.020
Make it simply a cache of
information that you can rebuild

00:23:15.350 --> 00:23:17.710
from the items themselves.

00:23:18.660 --> 00:23:21.470
And if you do that,
it's good because then you can

00:23:21.470 --> 00:23:24.570
then go and mark that file as
not needing to be backed up,

00:23:24.690 --> 00:23:27.040
and it will just never be backed up.

00:23:28.420 --> 00:23:33.440
If you do have a backup file,
in this case the example is for

00:23:33.600 --> 00:23:37.890
a music system where you have an
index file that has a bunch of cast

00:23:37.940 --> 00:23:40.420
information about all of the music files.

00:23:40.670 --> 00:23:46.840
In this case it's got the album name,
the group name, but in this case they've

00:23:47.040 --> 00:23:48.400
included play count.

00:23:48.520 --> 00:23:53.100
What happens is that every
single time that you play a song,

00:23:53.100 --> 00:23:58.110
that index file gets touched
and play count gets bumped up.

00:23:58.460 --> 00:24:02.240
What happens is that that index file
might be multiple megabytes of file

00:24:02.240 --> 00:24:04.460
because I might have thousands of songs.

00:24:04.560 --> 00:24:07.530
What happens is every
time that you play a song,

00:24:07.530 --> 00:24:10.250
we have to then go and
re-backup that file.

00:24:10.460 --> 00:24:13.280
You're going to get in
every single backup,

00:24:13.280 --> 00:24:17.100
you're going to get this huge five
megabyte blob that gets moved into

00:24:17.100 --> 00:24:18.460
the backup when the song is played.

00:24:18.460 --> 00:24:20.460
It's not even needed.

00:24:20.460 --> 00:24:23.570
What you should do is any kind of
data which you know is going to

00:24:23.660 --> 00:24:27.400
be changing on a regular basis,
take out of your index files.

00:24:27.460 --> 00:24:31.490
Make the index files big static
caches that you can mark as

00:24:31.500 --> 00:24:33.460
not needing to be backed up.

00:24:33.690 --> 00:24:38.200
Then move any data which is going to
be changing on a regular basis into

00:24:38.200 --> 00:24:43.460
smaller little files that we can back
up and that don't take a lot of space.

00:24:45.980 --> 00:24:50.900
One option to consider that will
help you with this is if you-- it

00:24:50.900 --> 00:24:53.910
doesn't make sense in every case,
but if it makes sense for you,

00:24:53.910 --> 00:24:56.320
you can look at using
bundles for your app data.

00:24:56.430 --> 00:24:58.650
In this case,
this gives you a really simple

00:24:58.650 --> 00:25:03.060
way to separate any metadata,
things like play count or user

00:25:03.060 --> 00:25:07.220
rating or anything like that,
from the actual data itself.

00:25:07.310 --> 00:25:09.120
So in the case of, let's say,
for a song file,

00:25:09.120 --> 00:25:13.860
let's say the metadata has a user
rating and it has a play count in it.

00:25:14.190 --> 00:25:17.400
Well, in this case, by doing this,
we've separated the song data

00:25:17.870 --> 00:25:20.820
from the metadata itself,
from the user rating and all that.

00:25:20.900 --> 00:25:24.060
And if the user marks it changed,
we don't have to back

00:25:24.060 --> 00:25:25.430
up all the song data.

00:25:25.610 --> 00:25:29.350
We don't have 12 megabytes of song data.

00:25:29.670 --> 00:25:35.090
We just have 150k file
or something instead.

00:25:36.210 --> 00:25:39.920
The other advantage to this
is because it appears as a

00:25:39.920 --> 00:25:43.650
single icon within the finder,
if the user moves it

00:25:43.650 --> 00:25:48.420
to another directory,
all the metadata will go with the file.

00:25:48.510 --> 00:25:52.190
And when you rename it or
restore it with Time Machine,

00:25:52.310 --> 00:25:54.780
it will all come back as one unit.

00:25:57.280 --> 00:26:02.670
The other thing you can do if you happen
to have a database-based file is really,

00:26:02.670 --> 00:26:07.060
you should consider
adopting a document model.

00:26:07.130 --> 00:26:10.280
This means you don't assume
the database is a specific path

00:26:10.280 --> 00:26:11.680
and you can only have one open.

00:26:11.680 --> 00:26:13.660
And when you open your app,
you always open this

00:26:13.660 --> 00:26:15.620
database of this path.

00:26:15.670 --> 00:26:18.580
Instead,
allow selecting more than one database

00:26:18.590 --> 00:26:22.830
and having more than one database
open at a time so that you could,

00:26:22.950 --> 00:26:26.900
in the future some way down the road,
be able to open both

00:26:27.060 --> 00:26:31.970
versions of your database,
one from backup and one from current,

00:26:32.130 --> 00:26:35.080
and be able to merge records
from one into the other.

00:26:37.870 --> 00:26:40.650
So a final note.

00:26:40.770 --> 00:26:46.750
The API that we've talked about here
today can be found in backup.core,

00:26:46.750 --> 00:26:50.180
which is a new header
in carboncore.framework.

00:26:50.290 --> 00:26:55.630
And it should be noted that this is
one of the newest pieces of the system.

00:26:55.840 --> 00:26:57.340
It is rapidly evolving.

00:26:57.680 --> 00:26:59.600
Features are subject to change.

00:26:59.640 --> 00:27:04.830
And many changes already have been made,
even since we froze the conference DVD.

00:27:04.950 --> 00:27:09.190
So please keep your eyes open for
seed updates that will be coming.

00:27:09.310 --> 00:27:12.000
And this code is rapidly evolving.

00:27:12.050 --> 00:27:14.720
So just be aware of that.

00:27:14.960 --> 00:27:18.650
And if you want more information
or you have comments,

00:27:18.650 --> 00:27:24.040
this is the person you should contact,
John Galenze and his galenze@apple.com.