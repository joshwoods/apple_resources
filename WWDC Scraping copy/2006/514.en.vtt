WEBVTT

00:00:10.600 --> 00:00:11.500
All right.

00:00:11.500 --> 00:00:13.160
Oh, that's loud.

00:00:13.290 --> 00:00:14.310
Thank you, everybody, for showing up.

00:00:14.430 --> 00:00:16.240
And my name is Juussi-Pekka Mantere.

00:00:16.340 --> 00:00:19.500
I'm the Engineering Manager for
Managed Client and Managed

00:00:19.540 --> 00:00:21.580
Desktop and System Imaging.

00:00:21.680 --> 00:00:25.370
And let's see,
there are still people walking in,

00:00:25.370 --> 00:00:27.770
so people, find your spots.

00:00:27.970 --> 00:00:31.040
Oh, these are the Apple people who
are waiting for the overflow.

00:00:31.090 --> 00:00:33.300
So here's the agenda for today.

00:00:33.300 --> 00:00:35.580
But before I go into that,
so how many people were at the

00:00:35.850 --> 00:00:38.190
server overview session yesterday?

00:00:38.500 --> 00:00:39.120
Yay!

00:00:39.480 --> 00:00:43.910
So I have just two words for you:
command-line utilities.

00:00:43.910 --> 00:00:44.400
Yay!

00:00:44.400 --> 00:00:45.390
And thank you.

00:00:45.400 --> 00:00:47.420
So we're done.

00:00:47.550 --> 00:00:52.620
So the agenda for today is
we'll discuss managed desktop.

00:00:52.620 --> 00:00:55.470
The key features that we're
adding for that and application

00:00:55.470 --> 00:00:57.200
loss restrictions is first.

00:00:57.200 --> 00:01:01.660
And then-- oh my gosh--
Hierarchical Groups.

00:01:01.760 --> 00:01:04.980
So this is basically nested
management of groups.

00:01:04.990 --> 00:01:07.380
Then we have reporting tools for that.

00:01:07.380 --> 00:01:10.190
And we have external accounts,
which is an extension for

00:01:10.340 --> 00:01:11.840
Portable Home Directories.

00:01:11.860 --> 00:01:14.670
And-- oh my god.

00:01:14.680 --> 00:01:16.300
Thank you.

00:01:16.300 --> 00:01:21.290
And system imaging,
we have simplified image creation.

00:01:23.700 --> 00:01:30.740
Automator Actions for
System Image Utility and Command-Line

00:01:30.740 --> 00:01:33.930
Image Creation for System Image Utility.

00:01:35.100 --> 00:01:50.000
[Transcript missing]

00:01:50.970 --> 00:01:53.940
What we had for Tiger,
we had a preference manifest which is a

00:01:53.940 --> 00:01:58.850
way for developers to add descriptions on
their preferences into their application

00:01:58.850 --> 00:02:01.960
bundles so that they're easier
manageable through Workgroup Manager.

00:02:02.020 --> 00:02:05.880
And portable home directories which
was an extension to the cached

00:02:05.880 --> 00:02:09.920
accounts feature and then that
became portable home directories.

00:02:09.980 --> 00:02:12.720
And then for developer documentation,
so if you're a developer,

00:02:12.900 --> 00:02:17.810
not a system administrator or IT staff,
we had a session last year on the

00:02:17.810 --> 00:02:21.620
managed desktop and specifically about
using CF preference and some of the

00:02:21.860 --> 00:02:25.900
best practices on how you'd use your
applications in a network environment.

00:02:25.900 --> 00:02:29.180
Let's say if your application is
run on a net booted system or if

00:02:29.180 --> 00:02:32.900
your user's home directory would
be on a networked home directory.

00:02:33.000 --> 00:02:35.900
So we have documentation
on the developer site.

00:02:35.900 --> 00:02:36.900
So here's the URL.

00:02:36.900 --> 00:02:39.710
So if you get the slides
after this presentation,

00:02:39.860 --> 00:02:42.900
if you go to that and look at
the best practices that we have,

00:02:42.900 --> 00:02:45.850
so that covers basically
what we had in Tiger.

00:02:45.900 --> 00:02:49.160
But we're here to talk
about new technologies that

00:02:49.160 --> 00:02:50.900
are delivered in Leopard.

00:02:50.900 --> 00:02:52.900
So here's what we're doing.

00:02:52.900 --> 00:02:55.900
The focus on Leopard for managed
desktop is improved security.

00:02:55.900 --> 00:02:58.520
And this is through
application loss restrictions,

00:02:58.520 --> 00:03:01.900
actually make them work, fix it,
forget it, be done with that.

00:03:01.900 --> 00:03:06.900
And better manageability and specifically
this is about hierarchical groups.

00:03:06.900 --> 00:03:09.860
So you could actually have workgroups
that are nested so you could actually

00:03:09.870 --> 00:03:14.150
layer your preferences in some
logical shape and not have to have

00:03:14.200 --> 00:03:17.320
individual users in individual
workgroups and then figure out how

00:03:17.320 --> 00:03:20.900
they pick and choose amongst those.

00:03:20.900 --> 00:03:22.900
So this is more mobility.

00:03:22.900 --> 00:03:25.900
So this is extension of
cached accounts in Jaguar,

00:03:25.900 --> 00:03:28.150
excuse me,
in Panther and then portable home

00:03:28.150 --> 00:03:33.900
directories in Tiger and now external
accounts in Mac OS X Leopard.

00:03:33.940 --> 00:03:36.810
So let me first go into
application loss restrictions.

00:03:36.900 --> 00:03:40.850
So we've received feedback that there
are some things that we could improve

00:03:40.850 --> 00:03:45.250
with application loss restrictions,
specifically that people

00:03:45.250 --> 00:03:47.630
are able to go around them.

00:03:48.360 --> 00:03:52.000
There are not so much restrictions,
but when we look at the history of that,

00:03:52.000 --> 00:03:56.140
this feature was a legacy
carryover from Macintosh Manager.

00:03:56.360 --> 00:04:00.040
So what we had in Macintosh Manager is
basically application identities.

00:04:00.040 --> 00:04:03.300
You had resource IDs and
we had a whitelist,

00:04:03.320 --> 00:04:06.300
blacklist of applications that are
allowed to run or not allowed to run.

00:04:06.300 --> 00:04:10.570
And the way we find it,
this should say tiger weaknesses,

00:04:10.570 --> 00:04:13.300
Leopard will have no weaknesses.

00:04:13.300 --> 00:04:17.230
The bundle IDs can be easily changed.

00:04:17.430 --> 00:04:22.290
So previously you had to have at least
some advanced tools like Resedit.

00:04:22.510 --> 00:04:25.300
Resedit on Mac OS 9, 9, 8, 7, whatever.

00:04:25.490 --> 00:04:28.300
You have to go and edit the
application creator code.

00:04:28.300 --> 00:04:31.190
Well, today you can use TextEdit
to do the same thing.

00:04:31.320 --> 00:04:34.540
Go into the Info.plist and make
the application look like it's

00:04:34.540 --> 00:04:36.180
something else and you're done.

00:04:36.380 --> 00:04:38.940
And other thing for application launch
restrictions is that we don't have

00:04:39.020 --> 00:04:40.300
any support for widget management.

00:04:40.310 --> 00:04:43.300
So if you have a dashboard
as an allied application,

00:04:43.300 --> 00:04:49.050
then any widget that the user might have
access to actually is allowed to run.

00:04:49.380 --> 00:04:52.300
So we're addressing
that in Leopard as well.

00:04:53.160 --> 00:04:57.450
So, the leverage solution that we have
for Application Launch Restrictions

00:04:57.550 --> 00:04:59.290
is a kernel-based mechanism.

00:04:59.420 --> 00:05:01.420
So,
kernel is the lowest level we can go to.

00:05:01.560 --> 00:05:03.290
Like, after that it's bare metal.

00:05:03.400 --> 00:05:05.420
We're not doing a TPM.

00:05:05.490 --> 00:05:07.400
We could do a TPM something
on the hardware,

00:05:07.400 --> 00:05:09.410
but we thought that was maybe too much.

00:05:09.510 --> 00:05:13.100
So, on the kernel we have a
mechanism called KAUTH.

00:05:13.320 --> 00:05:15.520
This is something that's
shipped in Mac OS and Tiger.

00:05:15.660 --> 00:05:19.650
So, on top of the KAUTH mechanism,
which basically traps Unix system calls.

00:05:19.930 --> 00:05:23.720
So, when a application launches,
it goes through an execution

00:05:23.770 --> 00:05:27.700
mechanism and we can actually trap
that mechanism inside the kernel.

00:05:27.800 --> 00:05:30.610
So,
we built a enforcement kernel extension

00:05:31.090 --> 00:05:34.080
that then does the restrictions per user.

00:05:34.110 --> 00:05:38.470
And to manage the restrictions on a user,
we have a launch policy or

00:05:38.470 --> 00:05:42.470
application launch policy that's
another agent that talks to the

00:05:42.580 --> 00:05:44.300
kernel level of kernel extension.

00:05:44.340 --> 00:05:47.420
And then we have an application
identification piece as well that

00:05:47.520 --> 00:05:52.280
then talks to the enforcement So,
the only way you could actually get

00:05:52.280 --> 00:05:56.980
around this in Leopard would be if
you had root access to the system.

00:05:57.170 --> 00:05:59.500
So, if you can install a
KEXT and delete a KEXT,

00:05:59.570 --> 00:06:01.320
well, your system is compromised.

00:06:01.630 --> 00:06:06.110
So, there shouldn't be any user level
access to any of these modules now.

00:06:06.190 --> 00:06:09.510
So, editing an Info.plist file,
that wouldn't really do

00:06:09.510 --> 00:06:11.100
anyone any good anymore.

00:06:11.680 --> 00:06:15.650
And the implementation we
have right now is path-based.

00:06:15.700 --> 00:06:19.670
So that means that if we want to
restrict somebody from running Safari,

00:06:19.680 --> 00:06:24.850
we basically tell the policy
module that this user named

00:06:24.850 --> 00:06:28.760
Joe can launch application at
this location slash applications,

00:06:28.760 --> 00:06:33.380
slash Safari.app, slash contents,
slash Mac OS, Safari.

00:06:33.380 --> 00:06:34.790
And that's it.

00:06:34.980 --> 00:06:38.710
So we trust that the file system
permissions haven't been munched with

00:06:38.710 --> 00:06:42.310
in such a way that ordinary users would
be able to install applications there.

00:06:42.320 --> 00:06:46.670
So if somebody has access to
the file system and can change

00:06:46.670 --> 00:06:49.630
files from the file system,
then, well, they can install what

00:06:49.630 --> 00:06:50.580
applications they can.

00:06:50.580 --> 00:06:54.240
But if it's an administered system,
then we trust that anything

00:06:54.240 --> 00:06:57.920
under slash applications is
under administration control,

00:06:57.920 --> 00:07:01.440
and we can trust the file
system permissions to be of

00:07:01.490 --> 00:07:05.520
some level of integrity that we
won't have to worry about that.

00:07:05.520 --> 00:07:10.400
And in the future, we might look into,
we are looking into code signing.

00:07:10.400 --> 00:07:12.920
So instead of, instead of using just
path-based policies,

00:07:12.920 --> 00:07:17.040
we would use code signing and
maybe even some dynamic permission

00:07:17.180 --> 00:07:21.900
granting so that when the kernel
extension that we have the user agent,

00:07:21.900 --> 00:07:25.470
when it does a check for the
permissions for the application launch,

00:07:25.480 --> 00:07:27.500
it would actually go to
some external module,

00:07:27.500 --> 00:07:31.960
and that could be some RPC call,
IPC call, and then the grant would

00:07:32.050 --> 00:07:33.210
happen dynamically.

00:07:35.190 --> 00:07:39.960
So if you have family controls or
parental controls on the desktop client,

00:07:39.960 --> 00:07:45.620
you are using managed desktop and you're
using Application Launch Restrictions.

00:07:45.800 --> 00:07:48.450
So it's not if you're
a developer and think,

00:07:48.520 --> 00:07:51.950
well, I don't have to worry about that
because this is a K through 12 or

00:07:52.250 --> 00:07:53.780
enterprise or education feature.

00:07:53.890 --> 00:07:55.230
Well, it's not really.

00:07:55.430 --> 00:08:00.060
If your application is used at home
or anywhere else where somebody

00:08:00.060 --> 00:08:03.380
might be able to use or might
want to use parental controls,

00:08:03.410 --> 00:08:08.820
then the Application Launch Restriction
feature in parental controls sits on top

00:08:08.820 --> 00:08:13.490
of the Application Launch Restriction
side of managed desktop.

00:08:13.950 --> 00:08:16.860
And now let's go to a demo.

00:08:16.860 --> 00:08:22.980
So if we could have the
demo slides up please.

00:08:22.980 --> 00:08:22.980
And demo guards please.

00:08:23.870 --> 00:08:26.460
Yeah, demo guys,
because I have to look over there.

00:08:26.460 --> 00:08:28.550
I have a screen here that I don't use.

00:08:28.610 --> 00:08:32.160
So this is going to be interesting.

00:08:32.300 --> 00:08:35.960
I'll go to System B first.

00:08:36.020 --> 00:08:39.920
And System B.

00:08:42.990 --> 00:08:49.360
Do we get System B up on the screen?

00:08:50.520 --> 00:08:52.080
This is demo restriction.

00:08:52.100 --> 00:08:53.150
Thank you.

00:08:53.220 --> 00:08:57.560
So we have now demo A,
and now I'm going to demo B.

00:09:02.600 --> 00:09:04.840
- Okay,
I can log on to the administrator.

00:09:04.840 --> 00:09:05.660
- Yeah.

00:09:05.680 --> 00:09:11.940
I'm just gonna... -
Just refresh the screen.

00:09:25.100 --> 00:09:28.190
and Figaro Tone.

00:09:28.190 --> 00:09:29.300
Yay!

00:09:32.270 --> 00:09:33.360
It's coming back.

00:09:33.360 --> 00:09:34.200
Oh, let me try.

00:09:34.200 --> 00:09:36.840
Thank you.

00:09:38.300 --> 00:09:40.810
So we had some issues with
the displays here before,

00:09:40.810 --> 00:09:42.640
so please bear with us.

00:09:42.790 --> 00:09:46.800
So let me show you how
things work in Tiger.

00:09:46.850 --> 00:09:49.580
So right now I'm on a Tiger system.

00:09:49.620 --> 00:09:53.500
So if you look at this,
this is Mac OS 10.4.6.

00:09:53.510 --> 00:09:55.500
Actually,
I should do the demo from there.

00:09:55.530 --> 00:09:58.840
So I'm gonna log on a user.

00:09:59.960 --> 00:10:07.940
So I'm going to call this
leadhackser and password something.

00:10:08.160 --> 00:10:11.670
Oh, because this is not an O,
it's a zero.

00:10:15.900 --> 00:10:19.340
So my user now logs on.

00:10:19.340 --> 00:10:21.910
And OK, so I have some applications here.

00:10:22.000 --> 00:10:26.900
So let's see if I go back to system A.

00:10:31.900 --> 00:10:32.900
Okay.

00:10:32.900 --> 00:10:36.930
Excuse me if I peer over this
monitor because I'm not really

00:10:37.020 --> 00:10:41.540
happy with this resolution,
so I'll make this 10, 20.

00:10:41.540 --> 00:10:45.480
Can you tell if we had a little
bit rush getting this demo

00:10:45.480 --> 00:10:47.700
set up when we came on stage?

00:10:50.000 --> 00:10:50.980
Okay, that works.

00:10:51.010 --> 00:10:54.000
Now it's actually readable from here.

00:10:54.000 --> 00:10:55.810
And did we -- okay.

00:10:55.810 --> 00:11:02.270
So let me just verify that all our
demo systems are now up and running.

00:11:11.400 --> 00:11:13.200
Oh, I will log out, excellent.

00:11:13.200 --> 00:11:17.690
So now I'm supposed to be at demo three.

00:11:20.710 --> 00:11:25.910
Okay, so this is now demo C,
and we have no video from that either.

00:11:28.930 --> 00:11:29.900
- Dun dun dun.

00:11:29.900 --> 00:11:35.030
Yeah, what about that Leopard
Application Launch Restriction feature?

00:11:35.040 --> 00:11:40.660
So, should we just reboot that?

00:11:40.660 --> 00:11:42.780
So there's no computer scene.

00:11:46.500 --> 00:11:56.700
[Transcript missing]

00:12:01.950 --> 00:12:03.900
Did I try them again?

00:12:04.030 --> 00:12:06.200
Okay.

00:12:06.200 --> 00:12:09.190
So while we reboot,

00:12:18.960 --> 00:12:21.840
Yeah, the problem with this demo is that
we brought our own servers thinking

00:12:21.840 --> 00:12:24.100
that this was the safer way.

00:12:24.100 --> 00:12:26.900
And apparently that was
not such a good option.

00:12:26.900 --> 00:12:27.900
Okay.

00:12:27.900 --> 00:12:32.400
So we'll get that system up.

00:12:34.310 --> 00:12:36.000
That's the fun with doing servers.

00:12:36.030 --> 00:12:37.570
So we wanted to be on isolated networks.

00:12:37.580 --> 00:12:39.020
We have our own router.

00:12:39.040 --> 00:12:40.330
We have our own server.

00:12:40.430 --> 00:12:42.840
We have our own

00:12:43.090 --> 00:12:45.820
We're not connected to the
demo setup here except for

00:12:45.820 --> 00:12:48.400
the monitors and unfortunately
the monitors that we're using,

00:12:48.400 --> 00:12:52.190
we have a dual DVI output so
we're doing screen mirroring

00:12:52.250 --> 00:12:54.660
and our servers are Mac Minis.

00:12:54.760 --> 00:13:00.000
So those are very portable but we don't
have dual DVI out on the Mac Minis yet.

00:13:00.000 --> 00:13:05.340
And probably don't think we're
planning to but that's the demo

00:13:05.430 --> 00:13:08.020
setup we thought we'd go with.

00:13:10.240 --> 00:13:11.840
Okay,
so that should be coming up shortly now.

00:13:11.840 --> 00:13:13.390
Okay, thank you.

00:13:17.700 --> 00:13:20.860
So when the system is actually booted,
here we go.

00:13:20.860 --> 00:13:25.780
Oh, temporary refresh.

00:13:25.780 --> 00:13:28.460
Can I touch it now?

00:13:28.460 --> 00:13:33.570
Okay, my mouse is moving.

00:13:35.310 --> 00:13:40.860
I'm at System C now and
I'm supposed to get a

00:13:42.300 --> 00:13:43.200
There we go.

00:13:43.200 --> 00:13:52.800
So let me just change this resolution
to something more readable as well.

00:13:52.800 --> 00:13:53.200
This place.

00:13:58.790 --> 00:14:01.460
We have step four.

00:14:01.470 --> 00:14:02.620
Okay, so here we go.

00:14:02.840 --> 00:14:06.580
So let me just launch a
instance of Record Manager.

00:14:06.590 --> 00:14:08.810
So I'll be needing that too.

00:14:13.400 --> 00:14:16.160
and shortly, please don't beach ball.

00:14:16.160 --> 00:14:18.160
Okay.

00:14:18.160 --> 00:14:25.490
As soon as the beach ball is finished,
then I'll show you what's going on.

00:14:25.490 --> 00:14:25.490
Excuse the intermission and

00:14:26.210 --> 00:14:30.240
Soon we'll have our mighty
Mac Mini Server on Workgroup Manager.

00:14:38.500 --> 00:14:40.200
It's coming up.

00:14:40.200 --> 00:14:45.880
It's the first instance launch
of this particular build.

00:14:45.880 --> 00:14:46.370
Yay!

00:14:46.550 --> 00:14:50.190
So, now we have all our demos set up.

00:14:50.190 --> 00:14:53.270
Let me just see some users first.

00:14:53.490 --> 00:14:54.500
Please.

00:14:54.500 --> 00:14:56.770
We do have users here.

00:14:56.770 --> 00:14:58.900
We do have groups.

00:15:03.430 --> 00:15:10.080
So we're managing the server and we are
waiting for the user list to appear.

00:15:10.080 --> 00:15:15.670
And soon that's going to be-- no,
actually we're at 28.8 something here.

00:15:15.670 --> 00:15:23.430
So our serial connection
isn't so hot right now.

00:15:49.420 --> 00:15:52.010
So let me bring up a terminal
and see if we can actually talk

00:15:52.110 --> 00:15:54.050
to the server in any other way.

00:15:54.190 --> 00:15:57.370
This is a preview of upcoming demo.

00:15:57.450 --> 00:16:03.120
So CDL.play3 Server Auth Admin.

00:16:03.350 --> 00:16:08.080
Oops, actually, Dear Admin.

00:16:18.600 --> 00:16:22.760
So, looks like my directory server
is actually up and running.

00:16:22.770 --> 00:16:26.170
Except the Workgroup
Manager doesn't see anything.

00:16:26.340 --> 00:16:30.050
Okay, so let me just have that sit
there in the background and

00:16:30.440 --> 00:16:34.020
go back to my demo B system.

00:16:35.480 --> 00:16:40.430
So, okay, so what we have here is
this is a Tiger client.

00:16:40.430 --> 00:16:43.110
So in Workgroup Manager,
I have set this user on

00:16:43.540 --> 00:16:46.690
Application Launch Restrictions
so that this user has only

00:16:46.690 --> 00:16:48.330
access to two applications.

00:16:48.720 --> 00:16:52.100
So the user can launch chess,

00:16:53.000 --> 00:17:00.780
Yay, because we want people to be
cerebrally entertained during school.

00:17:00.780 --> 00:17:04.090
And for some reason,
this user also has access to Terminal,

00:17:04.100 --> 00:17:06.380
which is probably a bad thing.

00:17:06.380 --> 00:17:11.220
So there goes all your application
launch restrictions right there on Tiger.

00:17:11.240 --> 00:17:13.270
But the thing is that if
I try to launch Safari,

00:17:13.270 --> 00:17:15.580
for example,
I'm not able to launch Safari.

00:17:15.620 --> 00:17:18.050
So in effect,
I have just two applications

00:17:18.100 --> 00:17:19.520
that I granted for this user.

00:17:19.530 --> 00:17:22.680
So on Tiger,
if the user has copied a version

00:17:22.680 --> 00:17:26.440
of Safari onto their desktop,
well, if the Safari application is

00:17:26.440 --> 00:17:29.980
the same as the system version,
then that will not launch.

00:17:29.990 --> 00:17:33.190
But because this user has
access to their home directory,

00:17:33.280 --> 00:17:36.400
they can copy whatever files onto
their home directory they can.

00:17:36.430 --> 00:17:41.240
So let's imagine that this
copy of Safari came over on a

00:17:41.240 --> 00:17:43.320
FireWire drive or USB stick.

00:17:43.330 --> 00:17:47.080
And then this particular user
has a neat script that they

00:17:47.080 --> 00:17:49.100
changed the bundle ID of Safari.

00:17:49.100 --> 00:17:53.120
And now this copy of Safari--
that's the system copy in

00:17:53.190 --> 00:17:55.810
applications-- does not launch.

00:17:56.180 --> 00:18:00.800
But here, the desktop copy suddenly
became launchable.

00:18:00.970 --> 00:18:03.260
So this is the
Tiger Behavior Application Launch Rest

00:18:03.280 --> 00:18:03.710
rictions.

00:18:03.850 --> 00:18:06.030
Apparently, it's not so strong.

00:18:06.110 --> 00:18:08.770
So let's quit that.

00:18:09.060 --> 00:18:14.110
Let me go to our demo A system.

00:18:14.400 --> 00:18:19.200
So now if I log in this same user,
so we are now running 10.5,

00:18:19.200 --> 00:18:21.270
so this is a Leopard client.

00:18:21.760 --> 00:18:29.680
and on Leopard System,
I have network accounts, that's good.

00:18:29.680 --> 00:18:32.060
If I log on my LeetHackSource,

00:18:34.550 --> 00:18:39.430
and go and try to run the same demo
or try to do the same trick as in

00:18:40.010 --> 00:18:43.600
getting access to my home directory
and then trying to launch an

00:18:43.600 --> 00:18:46.080
application there that I had modified.

00:18:47.640 --> 00:18:50.700
As soon as my network logging works.

00:18:50.700 --> 00:18:52.740
- And restricted.

00:18:52.740 --> 00:18:55.770
- Yes, our network home directories
were protected at the same time.

00:18:55.880 --> 00:18:58.730
This user.

00:19:02.300 --> 00:19:05.500
Okay.

00:19:05.500 --> 00:19:06.760
Reboot the server.

00:19:06.760 --> 00:19:13.120
Yeah.

00:19:13.120 --> 00:19:16.880
So the problem is that I think my
network accounts are available.

00:19:28.200 --> 00:19:33.750
So, here, yeah, Bruce,
if we can reboot the, kill that,

00:19:33.750 --> 00:19:38.490
kill the clients,
and then start up the server.

00:19:38.590 --> 00:19:41.430
Okay, if we can go back to the slides,
please.

00:19:46.480 --> 00:19:52.200
So back to the slides, please.

00:19:52.200 --> 00:19:53.220
There are no slides.

00:19:53.390 --> 00:19:57.400
If I walk over here, do I have slides?

00:19:58.500 --> 00:20:04.960
Let's touch on the slides.

00:20:05.370 --> 00:20:05.410
Yay!

00:20:05.410 --> 00:20:05.410
At least something works.

00:20:05.410 --> 00:20:05.410
Maybe we should have done
the demos from the slides.

00:20:06.830 --> 00:20:12.190
There's a slight glitch with our demo,
if you haven't been able to tell.

00:20:12.370 --> 00:20:15.700
Our network doesn't seem to be quite
up and running the way we had hoped.

00:20:15.700 --> 00:20:18.690
So, what you would have
seen in the demo before,

00:20:18.700 --> 00:20:22.920
so when we use the Thai Leopard
Application Launch Restrictions,

00:20:23.110 --> 00:20:27.000
the client on the Leopard side,
even if we modify the

00:20:27.000 --> 00:20:30.920
local copy of Safari,
the K-auth mechanism and the

00:20:30.920 --> 00:20:35.850
kernel extension that we have on
top of that would have prevented

00:20:35.980 --> 00:20:38.620
that copy of Safari from running.

00:20:38.750 --> 00:20:42.340
So, only the legitimate copy of Safari,
oh sorry,

00:20:42.430 --> 00:20:46.010
only the legitimate applications,
Jess and Terminal, would be able to run.

00:20:46.420 --> 00:20:50.030
Even if you edit the application,
no matter where it resides

00:20:50.030 --> 00:20:52.710
in the file system,
that wouldn't make the

00:20:52.710 --> 00:20:54.820
application able to run.

00:20:55.110 --> 00:20:56.330
That's the demo.

00:20:56.330 --> 00:20:59.110
So let's move on to hierarchical groups.

00:20:59.110 --> 00:21:02.090
And guys,
are we having any luck with the server?

00:21:02.230 --> 00:21:04.490
No.

00:21:04.500 --> 00:21:08.340
We're not?

00:21:08.410 --> 00:21:08.410
Okay.

00:21:10.030 --> 00:21:13.370
and then pull the plug on this
and then I have to reboot that.

00:21:13.410 --> 00:21:16.150
So the server is rebooting and now,
and wait,

00:21:16.310 --> 00:21:18.370
wait a second for the server to reboot.

00:21:18.680 --> 00:21:19.300
Bruce?

00:21:20.090 --> 00:21:22.180
So wait for this to come up.

00:21:22.370 --> 00:21:25.230
So hierarchical groups,
and we have a demo of this as well,

00:21:25.230 --> 00:21:27.930
so let's hope that actually works.

00:21:28.810 --> 00:21:34.160
So for hierarchical groups,
what this allows you to do is

00:21:34.160 --> 00:21:36.050
to have granular management.

00:21:36.060 --> 00:21:41.820
So this is basically a way of attaching
users to not just top-level workgroups

00:21:41.870 --> 00:21:46.890
and having the user to choose between
multiple workgroups and essentially

00:21:46.890 --> 00:21:51.640
getting just one set of preferences
through that workgroup selection.

00:21:51.670 --> 00:21:54.310
So we can have nested groups
and we inherit some of the

00:21:54.320 --> 00:21:56.260
preferences through the nesting.

00:21:56.280 --> 00:22:00.430
So you can have user belong to group
A and if that group A belongs to group B,

00:22:00.430 --> 00:22:04.700
then the user gets all the
preferences that are in that chain.

00:22:04.700 --> 00:22:07.990
And we are also using the
member D functionality that

00:22:07.990 --> 00:22:09.790
was part of Mac OS X Tiger.

00:22:09.800 --> 00:22:12.090
So this is the way we do ACLs.

00:22:12.100 --> 00:22:16.480
So any group memberships are resolved
through member D and that basically

00:22:16.480 --> 00:22:19.740
gives us the nested group mechanism.

00:22:19.740 --> 00:22:22.110
And we are also using computer groups.

00:22:22.130 --> 00:22:29.020
So today, you can only have single
computer list per computer.

00:22:29.020 --> 00:22:32.450
Single computer can belong
only to a single computer list.

00:22:32.460 --> 00:22:34.530
So if you wanted to have
computer-level nesting,

00:22:34.760 --> 00:22:38.240
that wouldn't be possible today
using the computer list construct.

00:22:38.250 --> 00:22:42.720
So we are migrating the computer
lists mechanism into a computer group.

00:22:42.740 --> 00:22:47.770
So a computer can belong to multiple
computer groups and computer

00:22:48.100 --> 00:22:50.230
groups can be nested themselves.

00:22:50.240 --> 00:22:51.230
Thank you.

00:22:53.580 --> 00:22:58.310
There is a legacy computer,
so if you have mixed clients both

00:22:58.310 --> 00:23:02.700
running Mac OS X Panther or Tiger,
so using 10.4, 10.3,

00:23:02.890 --> 00:23:05.840
and then have some leopard
systems appear on the site,

00:23:05.920 --> 00:23:11.030
there is a way to map between the
computer lists into the computer groups.

00:23:11.700 --> 00:23:14.800
Here's an example of how
we'd use the computer list.

00:23:14.800 --> 00:23:18.600
Let's say we have a couple of
different scenarios we want to set up.

00:23:18.600 --> 00:23:23.210
Imagine you are doing software update and
login window and energy saver and try to

00:23:23.280 --> 00:23:27.840
do the same settings for another set of
machines and yet another set of machines.

00:23:28.000 --> 00:23:36.490
You'd have to basically narrow down the
unique collections of preferences and

00:23:36.490 --> 00:23:36.490
then create computer lists for those.

00:23:36.900 --> 00:23:38.290
and yeah, that's bad.

00:23:38.360 --> 00:23:42.220
But here, if we have the same set of
machines and we want to set up,

00:23:42.330 --> 00:23:45.860
for example, now Energy Saver,
we can create the Energy Saver

00:23:45.860 --> 00:23:50.260
group for never sleep for some
systems and then another group for

00:23:50.260 --> 00:23:51.730
systems that are allowed to sleep.

00:23:51.780 --> 00:23:54.700
And then if we have
login window preferences,

00:23:54.720 --> 00:23:58.390
we can have login window settings
that then overlap those same machines.

00:23:58.400 --> 00:24:03.290
And then on top of that all,
we just have one software update

00:24:03.410 --> 00:24:06.140
group that all the systems belong to.

00:24:06.630 --> 00:24:12.020
So we basically overlay all these
different settings on top of one another,

00:24:12.020 --> 00:24:16.960
and you can logically construct the most,
I'd say rational,

00:24:16.960 --> 00:24:20.420
but most understandable way
of grouping the computers into

00:24:20.420 --> 00:24:21.860
their particular settings.

00:24:23.200 --> 00:26:41.400
[Transcript missing]

00:26:42.220 --> 00:26:45.780
and... Okay.

00:26:45.780 --> 00:26:47.360
Here we go again.

00:26:47.410 --> 00:26:48.230
What did I do?

00:26:48.240 --> 00:26:50.160
Okay, we go to demo.

00:26:50.360 --> 00:26:51.890
Excellent.

00:26:55.980 --> 00:27:02.730
So if I can go to this screen
and now we are looking at demo

00:27:02.730 --> 00:27:05.690
one and I should be at demo two.

00:27:08.330 --> 00:27:11.960
And that would be my system C here.

00:27:12.000 --> 00:27:14.410
So let's see if that came up.

00:27:14.590 --> 00:27:16.230
Did this system come up again?

00:27:16.260 --> 00:27:18.240
Demo C?

00:27:18.240 --> 00:27:23.020
It has power.

00:27:23.180 --> 00:27:26.590
We're not locked down again.

00:27:30.560 --> 00:27:33.660
That's what Reboot did to us.

00:27:33.660 --> 00:27:37.660
There's going to be a
sleep on these machines.

00:27:38.450 --> 00:27:39.510
That's on C.

00:27:39.510 --> 00:27:44.790
So that's the system.

00:27:48.310 --> 00:27:49.200
Okay.

00:27:49.200 --> 00:27:50.200
This is C.

00:27:50.200 --> 00:27:52.200
Do you see better?

00:27:52.200 --> 00:27:53.180
Yeah.

00:27:53.200 --> 00:27:54.140
C is here.

00:27:54.200 --> 00:27:55.200
You're done with that?

00:27:55.640 --> 00:27:56.200
Yeah.

00:27:56.200 --> 00:27:57.200
Okay.

00:27:57.200 --> 00:28:00.200
The only way we can bring
this up is if we do this.

00:28:00.200 --> 00:28:01.200
Okay.

00:28:01.200 --> 00:28:02.110
So I'll do that.

00:28:02.200 --> 00:28:03.200
That's all right.

00:28:09.500 --> 00:28:12.840
While we're doing this,
no actually I shouldn't touch this.

00:28:12.840 --> 00:28:14.380
So this is now on computer C.

00:28:14.390 --> 00:28:20.400
We need both systems
for your demo as well.

00:28:30.200 --> 00:28:34.140
Let's do some emergency shuffling then.

00:28:34.140 --> 00:28:38.640
We'll go through
hierarchical groups and then

00:28:38.630 --> 00:28:41.500
We still need to get demo C up
before we go to Bruce's section.

00:28:41.500 --> 00:28:45.300
So let's just get something on
the screen from this system.

00:28:45.310 --> 00:28:47.170
Just now rebooting.

00:28:58.500 --> 00:28:59.500
Let me do this again.

00:28:59.500 --> 00:29:06.920
Okay, so System C is rebooting now again,
so if you can see if that comes up.

00:29:06.920 --> 00:29:12.190
Yeah, we have it switched on, thanks.

00:29:12.220 --> 00:29:23.260
Yes, okay, we're coming up, thanks.

00:29:39.500 --> 00:29:41.740
So what do I do next?

00:29:41.880 --> 00:29:42.360
OK.

00:29:42.360 --> 00:29:45.200
So if this system comes up
and I can log on with a user,

00:29:45.220 --> 00:29:47.170
then we're good to go.

00:29:51.760 --> 00:29:53.700
Bruce, now let's do a demo.

00:29:53.700 --> 00:29:59.440
So we're going back to demo A and Bruce.

00:29:59.740 --> 00:30:02.440
Okay, so if we can switch back
to the slides please.

00:30:02.440 --> 00:30:05.390
Back to slides please.

00:30:05.670 --> 00:30:09.600
So meanwhile,
while we wait for the demos to come up,

00:30:09.610 --> 00:30:13.990
we'll have Bruce Gaya come up and
do a demo of external accounts.

00:30:14.770 --> 00:30:15.000
Okay.

00:30:15.000 --> 00:30:16.000
All right.

00:30:16.000 --> 00:30:16.920
Thanks.

00:30:19.300 --> 00:30:20.840
How's my microphone on?

00:30:20.840 --> 00:30:21.840
Okay, great.

00:30:21.940 --> 00:30:26.210
So, external counts, next slide.

00:30:27.110 --> 00:30:29.000
and And we actually do a demo.

00:30:29.000 --> 00:30:32.000
So let's do a demo.

00:30:32.000 --> 00:30:35.000
Okay, first of all, let's go to Demo A.

00:30:35.000 --> 00:30:38.390
Can we go back to the demo slides,
please?

00:30:38.900 --> 00:30:40.620
Demo A.

00:30:40.670 --> 00:30:41.630
Let's hope it works.

00:30:41.740 --> 00:30:42.660
Yes.

00:30:42.660 --> 00:30:43.660
Okay.

00:30:43.660 --> 00:30:45.300
So, I've created an external account.

00:30:45.300 --> 00:30:47.980
It's on this Firewire drive here.

00:30:55.300 --> 00:30:57.040
I seem to have lost my microphone.

00:30:57.040 --> 00:31:01.030
What external account is, is a PhD,
everything you need,

00:31:01.030 --> 00:31:04.770
all on an external disk.

00:31:07.800 --> 00:31:13.170
Now, let's go to Demo C,
which I'll do here.

00:31:16.400 --> 00:31:18.480
Okay, we're not going to do demo C.

00:31:18.490 --> 00:31:21.900
Back to demo A.

00:31:21.910 --> 00:31:25.630
Okay,
well I'm going to plug this back in.

00:31:25.640 --> 00:31:26.580
Here's the cable.

00:31:26.580 --> 00:31:30.820
Okay, so I'm just going to
plug this back in here.

00:31:30.820 --> 00:31:32.130
Like this.

00:31:32.210 --> 00:31:35.550
Leave it alone.

00:31:35.740 --> 00:31:37.520
Check to make sure it's spinning up.

00:31:37.520 --> 00:31:39.170
Looks good.

00:31:42.630 --> 00:31:51.300
Okay, so now I'm going to log in
using my normal password.

00:31:54.550 --> 00:32:00.800
and Okay, great.

00:32:00.850 --> 00:32:02.960
So now this is my total home, right?

00:32:03.120 --> 00:32:05.420
I've got all my files here, everything.

00:32:05.420 --> 00:32:09.640
If I go to look at the
home here in the finder,

00:32:09.640 --> 00:32:11.070
you see that?

00:32:11.560 --> 00:32:14.640
It's right here on this FireWire drive.

00:32:14.670 --> 00:32:15.170
Okay?

00:32:15.430 --> 00:32:19.740
An external account is also a
mobile account and also a PhD.

00:32:19.860 --> 00:32:24.120
So I can synchronize,
synchronize back to the server.

00:32:24.160 --> 00:32:26.060
Though I won't do that right now.

00:32:26.090 --> 00:32:33.060
And I'm going to go through with
this and make a quick change here.

00:32:33.060 --> 00:32:36.580
And then I'll log out.

00:32:39.740 --> 00:32:41.310
and if the server was
up it would re-sync.

00:32:41.310 --> 00:32:41.500
Ah!

00:32:41.630 --> 00:32:42.720
What do you know?

00:32:42.860 --> 00:32:43.370
There we go.

00:32:43.460 --> 00:32:47.460
And so what it's doing is synchronizing
its hard drive back to the server.

00:32:47.460 --> 00:32:48.680
So now,

00:32:49.890 --> 00:32:52.320
Back to login window.

00:32:52.430 --> 00:32:56.740
I can take this out again,
put this in my pocket,

00:32:56.800 --> 00:32:59.500
go to another machine,
and do the same thing.

00:32:59.610 --> 00:33:00.440
That's the demo.

00:33:00.440 --> 00:33:03.490
Didn't see that.

00:33:05.870 --> 00:33:09.140
Okay, so I'm going to talk about
external accounts here.

00:33:09.200 --> 00:33:12.260
Let me head back to the slides.

00:33:14.250 --> 00:33:16.290
Okay, so what are external accounts?

00:33:16.510 --> 00:33:19.760
Next, evolution in managed mobility.

00:33:19.880 --> 00:33:22.170
In Panther, we had mobile accounts.

00:33:22.270 --> 00:33:25.080
That was essentially a network
cached account plus credentials

00:33:25.080 --> 00:33:26.800
and also a local home directory.

00:33:26.800 --> 00:33:31.720
In Tiger, latest release,
we had portable home directories.

00:33:31.830 --> 00:33:35.500
That's a mobile account so you have
a cached network account plus cached

00:33:35.590 --> 00:33:37.800
credentials plus home synchronization.

00:33:37.800 --> 00:33:40.960
So your network home and your
local home on your portable

00:33:40.960 --> 00:33:42.800
computer are synchronized.

00:33:42.800 --> 00:33:44.740
So you can go basically
take your account,

00:33:44.850 --> 00:33:48.800
work offline, come back, resynchronize,
you're back, everything's all nice.

00:33:48.800 --> 00:33:49.800
Now here we are in Leopard.

00:33:49.800 --> 00:33:51.800
We're going to introduce
external accounts.

00:33:51.800 --> 00:33:53.720
So what are external accounts?

00:33:53.800 --> 00:33:59.100
They're the total portable home directory
implementation plus everything is

00:33:59.280 --> 00:34:01.800
going to be cached right on the disk.

00:34:01.800 --> 00:34:04.740
Okay,
now I have to explain how this works.

00:34:04.740 --> 00:34:07.800
So for external accounts, two situations.

00:34:07.800 --> 00:34:08.720
You're inside the firewall.

00:34:08.840 --> 00:34:10.790
What I mean by this is
you're on your own network.

00:34:10.790 --> 00:34:14.430
You know, you have a network server,
network file server, LDAP,

00:34:14.430 --> 00:34:17.800
network authentication server,
it's all sitting there.

00:34:17.800 --> 00:34:21.800
So when you take an account and
present it to one of these machines,

00:34:22.080 --> 00:34:26.270
what happens is the account information
and the password information actually

00:34:26.270 --> 00:34:27.700
all go right from the server.

00:34:27.800 --> 00:34:30.800
Okay, they're not coming from
the cache on this disk.

00:34:30.800 --> 00:34:34.800
So it's perfectly, well,
it's as secure as a network login.

00:34:34.800 --> 00:34:37.120
All you're doing is you're
presenting a name and a password

00:34:37.120 --> 00:34:38.800
and a home directory and logging in.

00:34:38.800 --> 00:34:42.390
If you go outside the firewall,
that is on some of these machines,

00:34:42.460 --> 00:34:45.040
you know,
just connected at home or whatever,

00:34:45.040 --> 00:34:48.950
or just on a different network,
You present your disk.

00:34:49.550 --> 00:34:55.410
What you need now is you need not
only your account name and password,

00:34:56.270 --> 00:34:56.600
but you're also going to need

00:34:57.300 --> 00:35:12.700
[Transcript missing]

00:35:12.870 --> 00:35:20.090
Computer Administrator Authorization.

00:35:20.090 --> 00:35:20.090
Now, we remember this so that if you
come back to the same machine again,

00:35:20.090 --> 00:35:20.090
you don't have to go
through the same process.

00:35:21.840 --> 00:35:24.000
Okay, external accounts.

00:35:24.000 --> 00:35:26.230
They enhance OS X Server networks.

00:35:26.280 --> 00:35:29.170
I said external accounts as a PhD,
so what do you get with a PhD?

00:35:29.270 --> 00:35:31.480
You get local disk performance
with a network account,

00:35:31.480 --> 00:35:33.800
all the network manageability,
network password.

00:35:33.800 --> 00:35:35.780
It enables data backup.

00:35:35.780 --> 00:35:37.690
Now, what does a PhD do?

00:35:37.780 --> 00:35:41.920
A PhD provides a mirror between your
local disk and your network home,

00:35:42.040 --> 00:35:43.800
or local home and your network home.

00:35:43.800 --> 00:35:47.660
If you have backup on your server,
let's say Time Machine,

00:35:47.660 --> 00:35:52.800
you can actually recover all
your old versions and it forms

00:35:52.800 --> 00:35:54.800
a complete backup system.

00:35:54.800 --> 00:35:57.320
So all you need to do is backup your
servers and your images and you basically

00:35:57.320 --> 00:36:00.800
have all your portable home directories,
all your external accounts backed up.

00:36:00.800 --> 00:36:03.740
Okay, where external accounts are going
to be good is in computer labs.

00:36:03.820 --> 00:36:05.800
You set up labs all over.

00:36:05.950 --> 00:36:08.750
Your employees or students
can go from lab to lab,

00:36:08.790 --> 00:36:09.800
take your disk with them.

00:36:09.800 --> 00:36:12.780
You really don't need any synchronization
in this case except for backup.

00:36:12.800 --> 00:36:14.800
You can go campus to campus to home.

00:36:14.800 --> 00:36:18.800
It's nice, one campus, another campus not
connected to that campus.

00:36:18.920 --> 00:36:19.850
Still take your stuff with you.

00:36:19.850 --> 00:36:21.660
If you're a network administrator,
this might be fun.

00:36:21.870 --> 00:36:22.800
Go home.

00:36:23.020 --> 00:36:26.790
And also, it also kind of enables
a multi-user workstation.

00:36:26.790 --> 00:36:29.760
What I mean by that is if you have a
machine which is specially configured,

00:36:29.800 --> 00:36:32.800
let's say scanners, what not,
video hardware, what not.

00:36:32.890 --> 00:36:35.750
You can take your data with you, log in,
take your whole account with you,

00:36:35.750 --> 00:36:36.760
log into that machine.

00:36:36.820 --> 00:36:39.360
You can take it out and some other
user can come with their account,

00:36:39.360 --> 00:36:41.660
go to that machine and use all
the hardware in that machine.

00:36:41.800 --> 00:36:43.800
So it's kind of nice for that.

00:36:43.800 --> 00:36:46.150
So how should you manage?

00:36:46.560 --> 00:36:48.790
Leopard Workgroup Manager.

00:36:48.820 --> 00:36:50.260
That's where you manage it.

00:36:50.340 --> 00:36:54.130
First thing is in Leopard,
you can require that file vault

00:36:54.130 --> 00:36:58.970
be turned on at all portable home
directories and all external accounts.

00:36:59.170 --> 00:37:02.760
Okay, you can limit which computers
allow external accounts,

00:37:02.760 --> 00:37:06.030
so maybe it's appropriate for this lab,
not appropriate for some other lab.

00:37:06.110 --> 00:37:09.300
External accounts retain all
their MCX Managed Settings.

00:37:09.580 --> 00:37:12.470
They can retain their user
and their group settings.

00:37:12.470 --> 00:37:15.740
So wherever they go,
they can still be managed.

00:37:15.830 --> 00:37:19.060
Okay, talk about hardware briefly.

00:37:20.510 --> 00:37:24.200
Okay, best hardware is going to
be a portable firewire,

00:37:24.200 --> 00:37:26.470
portable disk, or USB disk.

00:37:26.540 --> 00:37:29.590
This is because they're generally
hardened for vibration or drops.

00:37:29.660 --> 00:37:32.960
I was looking at this one firewire drive,
and it said that it could be dropped from

00:37:33.090 --> 00:37:35.040
30 inches onto concrete without damage.

00:37:35.040 --> 00:37:35.890
That's pretty good.

00:37:35.900 --> 00:37:40.500
You can also use desktop disks,
but they're not going to have that

00:37:40.500 --> 00:37:42.150
kind of mobility aspect of them,
you know.

00:37:42.160 --> 00:37:43.900
And also,
if you're considering deployment,

00:37:43.900 --> 00:37:47.080
you might need to have some
extra power available for people

00:37:47.080 --> 00:37:49.880
who bring desktop disks or have
external accounts on desktop disks.

00:37:49.880 --> 00:37:52.310
And finally,
I have to say that flash-based

00:37:52.310 --> 00:37:54.180
devices are not recommended.

00:37:55.850 --> 00:37:58.480
Okay, security, use FireVault.

00:37:58.500 --> 00:38:01.040
Yeah, FileVault, not FireVault.

00:38:01.340 --> 00:38:04.920
Use FileVault, or basically,
when you have an external device

00:38:05.210 --> 00:38:08.050
connected to an unmanaged computer,
you can touch and read

00:38:08.050 --> 00:38:09.740
every bit of data on that.

00:38:09.860 --> 00:38:12.300
So if you want security,
we recommend that you turn on

00:38:12.880 --> 00:38:15.020
FileVault for all external accounts.

00:38:15.200 --> 00:38:16.960
So that's the end of external accounts.

00:38:17.110 --> 00:38:20.520
There was some other stuff I didn't get
to show today because of various reasons.

00:38:20.520 --> 00:38:24.810
If you're on the developer site,
we'd like to give feedback.

00:38:24.880 --> 00:38:26.540
You know, if you get a seed, let us know.

00:38:26.750 --> 00:38:29.040
We're continuing to develop
this as we move to Leopard.

00:38:29.180 --> 00:38:29.980
Thanks.

00:38:37.500 --> 00:38:41.160
Okay, so thank you, Bruce.

00:38:41.220 --> 00:38:43.920
Let's see where we are with our slides.

00:38:43.920 --> 00:38:48.250
So can we go to the demo slides, please?

00:38:48.230 --> 00:38:49.270
and see if we have anything up.

00:38:49.310 --> 00:38:51.320
So I need to resync.

00:38:51.470 --> 00:38:53.510
Oh my gosh.

00:38:54.000 --> 00:38:54.440
This is good.

00:38:54.500 --> 00:38:55.600
So this is good.

00:38:55.920 --> 00:38:58.230
Thank you, the tech guys.

00:38:59.210 --> 00:39:01.200
These guys rock.

00:39:01.200 --> 00:39:03.300
The WWDC tech crew rocks.

00:39:03.300 --> 00:39:05.220
So now let me just show you where I'm at.

00:39:05.220 --> 00:39:07.920
So running back-- so
this was 10 minutes ago,

00:39:07.920 --> 00:39:12.380
where you talked about application loss
restrictions and how Leopard clients,

00:39:12.420 --> 00:39:15.010
they have now different
means of preventing people

00:39:15.010 --> 00:39:16.480
from running applications.

00:39:16.480 --> 00:39:19.020
So here I am running on a Leopard client.

00:39:19.020 --> 00:39:24.420
And let me log on our lead
hacksaw who probably should

00:39:24.500 --> 00:39:28.060
be doing tech support for me.

00:39:28.060 --> 00:39:30.020
And now this user is logging on.

00:39:30.020 --> 00:39:34.680
And as you notice,
here is a copy of Safari on the desktop.

00:39:34.680 --> 00:39:38.060
So if we have the user
try to do the same thing,

00:39:38.060 --> 00:39:42.560
like go to terminal and
run the hack type scripts,

00:39:42.560 --> 00:39:45.520
well,
they still can't launch Safari from here.

00:39:45.540 --> 00:39:47.680
So it's still denied.

00:39:47.680 --> 00:39:51.040
And now the desktop
version is denied as well.

00:39:51.040 --> 00:39:53.560
So this is now the
modified copy of Safari.

00:39:53.560 --> 00:39:57.920
The user has brought this on their
FireWire drive or on a USB stick.

00:39:57.920 --> 00:40:00.420
And has full write access to that.

00:40:00.420 --> 00:40:04.760
Just mucking with the application no
longer makes it runnable on Leopard.

00:40:04.760 --> 00:40:08.360
So that is the new application
loss rejection feature.

00:40:08.360 --> 00:40:10.110
Yay.

00:40:11.700 --> 00:40:13.560
Thank you.

00:40:13.620 --> 00:40:17.570
And if I now go to our
second demo system.

00:40:17.610 --> 00:40:22.190
So if this syncs up.

00:40:22.190 --> 00:40:22.190
See, Workgroup Manager is up and running.

00:40:23.300 --> 00:40:25.800
- Thank God, thank God!

00:40:25.970 --> 00:40:29.300
So, I'm gonna show you,
if you would go back again in time.

00:40:29.300 --> 00:40:32.440
So this is a time machine,
we're using time machine here.

00:40:32.440 --> 00:40:36.590
I'm gonna run back 10 minutes again,
and I'm gonna show you nested groups.

00:40:36.770 --> 00:40:39.290
So if you remember on
our nested groups demo,

00:40:39.460 --> 00:40:42.100
we had a user that belonged
to multiple groups,

00:40:42.130 --> 00:40:45.010
but we didn't want to create
multiple work groups with just

00:40:45.080 --> 00:40:46.250
monolithic settings for them.

00:40:46.450 --> 00:40:50.410
So, what I'm gonna do now is create
a hierarchical management

00:40:50.410 --> 00:40:52.350
view for this particular user.

00:40:52.420 --> 00:40:56.900
So, what I'm gonna do is
go to the groups view,

00:40:56.900 --> 00:40:59.800
and I will create a preference setting.

00:40:59.800 --> 00:41:02.340
Actually, sorry,
I need to create my group first.

00:41:02.360 --> 00:41:08.240
So, create a new group,
and I'm gonna go all this doc, oops,

00:41:08.270 --> 00:41:11.400
doc default apps.

00:41:11.570 --> 00:41:13.730
So, doc default applications, great.

00:41:13.780 --> 00:41:16.510
So, I'm gonna save that,
and then we're gonna assign

00:41:16.510 --> 00:41:18.080
some applications to it.

00:41:18.080 --> 00:41:21.500
So, I'll go into the doc
and say manage always,

00:41:21.570 --> 00:41:24.380
and I don't really like
any of these applications,

00:41:24.380 --> 00:41:28.440
so let me remove these,
and let me add some applications

00:41:28.440 --> 00:41:32.320
that are supposed to be
the doc items for any user.

00:41:32.320 --> 00:41:38.480
And let's do chess again, and let's add,
let's say, automator as well.

00:41:38.490 --> 00:41:41.350
And we really like teams directory,
so let me add teams

00:41:41.680 --> 00:41:43.690
directory here as well.

00:41:43.810 --> 00:41:47.600
So, now I have my basic applications
that all the users should have.

00:41:47.600 --> 00:41:50.600
And apply now,
so now I have my default applications.

00:41:50.830 --> 00:41:54.430
And if I go back to accounts,
I will create a new group for another

00:41:54.430 --> 00:41:56.580
set of preferences for the doc as well.

00:41:56.600 --> 00:42:01.580
And I'm gonna call this
the doc admin apps.

00:42:01.680 --> 00:42:03.840
So, here I have the
administration applications,

00:42:03.840 --> 00:42:08.010
and I'll go into preferences again,
and change the doc settings,

00:42:08.010 --> 00:42:09.420
and manage it always.

00:42:09.420 --> 00:42:11.520
So, I'll remove all these applications.

00:42:11.520 --> 00:42:14.920
And what I want to do is add the
server administration application.

00:42:14.920 --> 00:42:18.460
So, I want to have, let's say,
server admin, yes.

00:42:18.460 --> 00:42:20.290
I want to have system image filter, yes.

00:42:20.420 --> 00:42:21.620
And record manager.

00:42:21.640 --> 00:42:24.300
So, I'll add these three applications.

00:42:24.320 --> 00:42:25.140
So, apply now.

00:42:25.140 --> 00:42:28.560
So, I now have two kind of work groups.

00:42:28.560 --> 00:42:30.920
But in the Tiger days,
this would have been unique,

00:42:30.920 --> 00:42:33.730
so you couldn't pick
both at the same time.

00:42:33.860 --> 00:42:39.840
So, now if I go back to accounts
and set the inheritance of this.

00:42:40.200 --> 00:42:42.170
So, I have...

00:42:42.470 --> 00:42:45.770
the default applications group
but I'll also make a member of

00:42:45.780 --> 00:42:49.800
this default applications group,
the admin applications.

00:42:49.800 --> 00:42:55.570
So now they are nested and click on save
and if I now go into the administration

00:42:55.650 --> 00:42:58.990
applications and add users to that,
so let's say Jane Smith is

00:42:59.090 --> 00:43:01.670
one of our admins,
so now Jane Smith belongs to

00:43:01.690 --> 00:43:03.600
the admin applications group.

00:43:03.600 --> 00:43:07.200
So when Jane logs on,
Jane should get the admin application

00:43:07.200 --> 00:43:10.750
preferences as well as the default
application preferences in her dock.

00:43:12.020 --> 00:43:15.470
So, excuse me, that's it.

00:43:15.500 --> 00:43:22.140
And if I now go back to my client
here and log out lead hacker,

00:43:22.140 --> 00:43:24.020
yes,

00:43:25.400 --> 00:43:30.710
and Lugon Chan-Smith.

00:43:32.900 --> 00:43:44.380
Jane Smith And now the doc should
be the default applications

00:43:44.880 --> 00:43:46.200
and the admin applications.

00:43:46.250 --> 00:43:50.110
So effectively, I got all the different
preferences combined.

00:43:50.240 --> 00:43:57.820
So Jane now has the Teams directory,
Chess, Automator items that came from the

00:43:58.220 --> 00:44:00.300
default applications group for everyone.

00:44:00.360 --> 00:44:03.900
And then these administration
applications came from the admin group.

00:44:03.930 --> 00:44:05.900
And Jane just belongs to one group.

00:44:05.930 --> 00:44:11.140
So Jane doesn't belong to the default
applications groups explicitly.

00:44:11.380 --> 00:44:13.700
She belongs to that through inheritance.

00:44:13.700 --> 00:44:19.290
So one way to tell this is if
I now go to System Profiler,

00:44:20.960 --> 00:44:22.550
and click on More Info.

00:44:22.560 --> 00:44:26.900
So you'll see that we have a
new section for Managed Client.

00:44:27.060 --> 00:44:31.520
So here,
if I click on any of this... Thank you.

00:44:33.100 --> 00:44:37.140
So you can tell that these application
hints come from two groups.

00:44:37.160 --> 00:44:39.130
And, oh, we have a bug here.

00:44:39.260 --> 00:44:42.240
So this doesn't really display
what they're supposed to be,

00:44:42.240 --> 00:44:44.890
so let me use a command-line
version of this.

00:44:44.930 --> 00:44:48.380
So I can use, let's see, ID, who am I?

00:44:48.410 --> 00:44:57.330
I'm Jane Smith, so if I use MCX query,
and user is Jane Smith, and my group was,

00:44:57.400 --> 00:45:02.600
that I logged on, is docadminapps.

00:45:04.280 --> 00:45:07.730
Ooh, now that looks kind of awful.

00:45:07.890 --> 00:45:11.440
But here, essentially you can tell that
these two groups were combined.

00:45:11.530 --> 00:45:14.400
So we have the
Duck Administration applications,

00:45:14.420 --> 00:45:16.380
and we have the
Duck Default applications.

00:45:16.400 --> 00:45:19.000
And these preferences
were inherited from that.

00:45:19.030 --> 00:45:22.170
And this is kind of readable, sort of,
kind of.

00:45:22.430 --> 00:45:25.790
And if you want to display
these preferences in a,

00:45:25.790 --> 00:45:30.830
let's say, repurposable way,
we can say Format XML.

00:45:31.060 --> 00:45:32.450
And this creates your PList.

00:45:32.650 --> 00:45:35.290
So now we can actually tell that, oh,
yeah, OK,

00:45:35.300 --> 00:45:39.220
these keys came from Application Server,
Workgroup Manager, whatnot.

00:45:39.250 --> 00:45:43.460
These keys were inherited from the
Duck Admin Applications group and

00:45:43.670 --> 00:45:46.030
Duck Default Applications group.

00:45:46.040 --> 00:45:47.770
OK?

00:45:47.820 --> 00:45:50.150
So that's reporting.

00:45:52.800 --> 00:45:55.780
And if I now go back to my demo setup.

00:45:55.880 --> 00:46:00.770
So that's reporting and client-side
features and we go back here.

00:46:00.950 --> 00:46:05.660
So now if I go to terminal and
so we mentioned that there was

00:46:05.690 --> 00:46:11.340
a Director Services Utility
extension or DSCL extension to

00:46:11.870 --> 00:46:17.300
MCX or MCX has an extension to
Director Services command-line tool.

00:46:17.430 --> 00:46:22.250
So if I use DSCL,
let me get my cheat sheet here.

00:46:22.250 --> 00:46:27.560
So I'm going to auth into the
LDAP node that is my LDAP server.

00:46:27.560 --> 00:46:32.990
So server.wcnet and do a Dear Admin auth.

00:46:33.290 --> 00:46:36.350
And I guess this is the password.

00:46:36.430 --> 00:46:38.000
Yes, OK.

00:46:38.110 --> 00:46:45.040
So if you're familiar with the DSCL,
so I can change my working directory

00:46:45.110 --> 00:46:47.900
just by navigating through the hierarchy,
and I know that, OK,

00:46:47.900 --> 00:46:50.380
I created the dot admin
applications group.

00:46:50.400 --> 00:46:59.310
So I can now use the reporting
extension inside the DSCL command

00:46:59.510 --> 00:47:03.500
line by just saying mcx read and dot.

00:47:03.520 --> 00:47:10.010
And these are my settings for this
particular mcx object for the managed

00:47:10.010 --> 00:47:12.150
client settings for this group.

00:47:12.290 --> 00:47:14.000
So I can see that there
are some settings here.

00:47:14.080 --> 00:47:20.180
But now, if I go back to the users and
try to look what's there for

00:47:20.180 --> 00:47:25.060
Jane-- so if I use mcx read dot,
Jane doesn't have any preferences.

00:47:25.060 --> 00:47:28.010
And that's evident if
I go back to the accounts.

00:47:28.260 --> 00:47:31.780
And try to click on Jane as a user here.

00:47:31.790 --> 00:47:36.990
And if I look at the preferences,
Jane doesn't have any preferences,

00:47:36.990 --> 00:47:38.060
which is fine.

00:47:38.100 --> 00:47:43.480
But if I wanted to do some preference
editing from the command line tool,

00:47:43.480 --> 00:47:45.950
what I'd do is call mcx set.

00:47:46.010 --> 00:47:49.330
And for this particular record,
and say I know that the

00:47:49.900 --> 00:47:52.000
application is called doc.

00:47:52.000 --> 00:47:56.670
And the preference I want
to set is orientation,

00:47:56.810 --> 00:48:00.160
and we have a-- refresh problem.

00:48:00.160 --> 00:48:00.880
Let's do that again.

00:48:00.880 --> 00:48:06.380
mcx set dot com apple doc.

00:48:07.020 --> 00:48:13.760
and do not make any typing
errors orientation and make it

00:48:13.760 --> 00:48:21.290
an always preference and it's
a string and it's called left.

00:48:22.640 --> 00:48:23.440
There.

00:48:23.440 --> 00:48:26.670
So now if I do MCX read,
this particular node,

00:48:26.690 --> 00:48:28.950
I've just set an MCX preference.

00:48:29.020 --> 00:48:32.110
So this is managed desktop
from the command line tool.

00:48:32.250 --> 00:48:33.830
And where could this be useful?

00:48:33.950 --> 00:48:37.180
If you have, let's say,
webfronts into your user base,

00:48:37.210 --> 00:48:40.730
and you'd want to set some
login options or whatnot through

00:48:40.870 --> 00:48:42.030
Ruby on Rails or whatnot.

00:48:42.120 --> 00:48:44.250
I don't even know what
you'd use this for.

00:48:44.320 --> 00:48:46.320
The options are endless, right?

00:48:46.320 --> 00:48:47.640
You have the power.

00:48:47.640 --> 00:48:52.470
I could create an automator action or a
automator workflow and embed MCX settings

00:48:52.470 --> 00:48:54.420
or managed client settings in that.

00:48:54.480 --> 00:48:58.340
So now you have full access
to the internals of MCX on

00:48:58.500 --> 00:49:00.750
managed client and use that.

00:49:06.200 --> 00:49:10.540
And let me just go back to Jane here
and actually show that this works.

00:49:10.700 --> 00:49:13.540
So now my dock is at the bottom,
as you can tell.

00:49:13.540 --> 00:49:15.100
And let's quit out of that.

00:49:15.100 --> 00:49:17.020
No more system profiler even.

00:49:17.020 --> 00:49:19.170
And log out Jane.

00:49:21.520 --> 00:49:24.370
And then we go into James Smith again.

00:49:24.820 --> 00:49:27.410
James Smith.

00:49:28.140 --> 00:49:30.340
and log her in.

00:49:30.340 --> 00:49:35.190
And without touching Workgroup Manager,
mysteriously her duck

00:49:35.190 --> 00:49:36.690
appears on the left.

00:49:36.760 --> 00:49:39.170
So this works.

00:49:42.800 --> 00:49:48.040
Okay, now I'll take a sip of water.

00:49:48.040 --> 00:49:50.240
So, all the demos rolled up into one.

00:49:50.240 --> 00:49:52.200
Where do we go next?

00:49:52.450 --> 00:49:57.260
Okay, so this was hierarchical
groups using Managed Client 10

00:49:57.260 --> 00:50:00.940
and using command-line tools,
using System Profiler.

00:50:00.940 --> 00:50:05.610
And there are options to use this
with computer groups now as well.

00:50:05.690 --> 00:50:10.640
So in future releases or future
seed releases of Leopard,

00:50:10.640 --> 00:50:12.000
we have all this stuff working.

00:50:12.110 --> 00:50:14.140
Right now on the developer
seat that you have,

00:50:14.160 --> 00:50:17.160
there are stubs here and there,
so you might actually see some of this,

00:50:17.160 --> 00:50:20.600
but all of that hasn't been
vetted from end to end,

00:50:20.600 --> 00:50:23.200
so you might see some
interesting interaction,

00:50:23.200 --> 00:50:25.840
but wait for the next seed,
and then please give us

00:50:25.840 --> 00:50:28.830
feedback as what works for you,
what doesn't.

00:50:28.940 --> 00:50:37.190
So that is the Managed Desktop demo,
and next we'll go on to...

00:50:39.200 --> 00:50:44.370
Slides and Nick,
do you want to set up your demo here?

00:50:46.500 --> 00:51:13.300
[Transcript missing]

00:51:17.990 --> 00:51:19.480
So now I know where we are.

00:51:19.490 --> 00:51:24.480
So Time Machine doesn't actually
give you future predictions,

00:51:24.480 --> 00:51:25.960
so that's too bad.

00:51:25.960 --> 00:51:27.980
External accounts,
so we did external accounts.

00:51:27.980 --> 00:51:29.820
And this was Managed Desktop.

00:51:29.820 --> 00:51:34.180
So for Managed Desktop features,
we also are looking at plugins.

00:51:34.180 --> 00:51:36.600
So there are new features
in Workgroup Manager,

00:51:36.600 --> 00:51:40.540
of course,
to keep up with Leopard Client.

00:51:40.540 --> 00:51:44.540
There are no controls over
application loss restrictions.

00:51:44.540 --> 00:51:46.400
There are controls over Dashboard.

00:51:46.400 --> 00:51:50.850
And for mobility, of course, we did--

00:51:51.310 --> 00:51:52.640
Go back.

00:51:52.730 --> 00:51:53.480
Popul Mobility.

00:51:53.630 --> 00:51:55.420
So we have account expiration.

00:51:55.420 --> 00:52:00.870
So if you wanted to have a cart
of MacBooks and have portable home

00:52:00.880 --> 00:52:05.340
directories created on those accounts
or have them expire automatically,

00:52:05.340 --> 00:52:07.240
now we have expiration control for that.

00:52:07.270 --> 00:52:10.420
We can restrict how many accounts
are created on a machine.

00:52:10.420 --> 00:52:14.420
We have external accounts, of course,
part of that, and controls in Workgroup

00:52:14.510 --> 00:52:15.720
Manager for that.

00:52:15.720 --> 00:52:19.720
And we have options of turning
off or disabling internet sharing.

00:52:19.720 --> 00:52:24.020
So if your site doesn't really want to
have rogue DHCP servers on the network,

00:52:24.020 --> 00:52:26.020
we can enforce that policy as well.

00:52:26.030 --> 00:52:29.900
And we have options of allowing
disk images to be restricted

00:52:29.900 --> 00:52:33.420
as a unique data type,
as opposed to just removable media.

00:52:33.530 --> 00:52:39.530
And we have also under the hood controls
for some application level settings.

00:52:39.610 --> 00:52:42.090
For example, for iChat,
if you were at the server

00:52:42.090 --> 00:52:46.260
overview yesterday,
the simple server setup where clients

00:52:46.260 --> 00:52:51.780
actually get their configurations from
their team server or their server setup,

00:52:51.810 --> 00:52:56.280
that is using the managed desktop
feature set for preference controls.

00:52:56.280 --> 00:52:59.260
And there will be others as
we develop other features,

00:52:59.270 --> 00:53:01.960
maybe for backup or
things of that nature.

00:53:02.120 --> 00:53:04.950
So this concludes the
managed desktop part.

00:53:05.070 --> 00:53:07.250
So let me then move on to system imaging.

00:53:08.700 --> 00:53:12.650
So system imaging,
we wanted to take the next

00:53:12.650 --> 00:53:14.060
step in system imaging.

00:53:14.190 --> 00:53:15.680
So bring the platform forward.

00:53:15.800 --> 00:53:21.040
And the two things we found that
we wanted to make it easier to use,

00:53:21.250 --> 00:53:24.110
and that is through an image assistant.

00:53:24.400 --> 00:53:27.760
So there is almost one-click
image creation process now.

00:53:27.830 --> 00:53:31.910
And then we wanted to make it
easier to redo your workflows.

00:53:32.020 --> 00:53:35.420
So if you're creating
similar images repeatedly,

00:53:35.420 --> 00:53:38.020
then we'd probably want to
use something like Automator

00:53:38.290 --> 00:53:40.040
to re-execute the workflows.

00:53:40.150 --> 00:53:44.340
So also under the hood,
you'd want to have control over

00:53:44.340 --> 00:53:45.520
how these images are created.

00:53:45.520 --> 00:53:49.930
So in addition to making it easy to use,
we also want to expose some of the

00:53:49.930 --> 00:53:53.260
internals of how system imaging
actually works and give you the

00:53:53.260 --> 00:53:57.930
option of creating exactly the kind of
deployment sets that you want to create.

00:53:58.150 --> 00:54:01.760
And this is also available
through command line tools again.

00:54:01.820 --> 00:54:05.230
So not just using SIU as a Cocoa app.

00:54:05.520 --> 00:54:09.200
we can now create system
images from terminal.

00:54:09.680 --> 00:54:12.830
So,
command-line tool and Automator Workflow.

00:54:13.040 --> 00:54:17.460
So, we decided that probably the best way
to expose all the things that happen

00:54:17.560 --> 00:54:19.960
when we are creating system images,
either creating net boot

00:54:19.960 --> 00:54:24.320
images or net install images,
is to create an Automator

00:54:24.320 --> 00:54:28.520
action for corresponding
items that we do internally.

00:54:28.830 --> 00:54:33.300
So, this is like the Erector set or
for Europeans that are Meccano set.

00:54:33.320 --> 00:54:37.560
And this is just giving us
the building blocks as well.

00:54:37.570 --> 00:54:42.360
So, we now have a very modular design
of the System Image Utility where

00:54:42.630 --> 00:54:45.940
individual elements can be called
independently from one another.

00:54:45.960 --> 00:54:49.800
It's not just a monolithic
like stove pile application.

00:54:49.800 --> 00:54:53.130
You can take pieces what you need
and basically build different

00:54:53.160 --> 00:54:58.530
kinds of workflows or methodologies
of creating images through this.

00:54:58.650 --> 00:55:00.600
So, it is modular by design.

00:55:00.600 --> 00:55:04.840
And what Automator gives us as well
is that we can reuse these workflows.

00:55:04.870 --> 00:55:08.420
We can save the workflows
and apply them to new images.

00:55:08.420 --> 00:55:14.900
So, let's say we get a
eight core Intel Xenon,

00:55:14.900 --> 00:55:15.420
who knows what.

00:55:15.710 --> 00:55:19.190
And you get the latest
Mac OS X Leopard version,

00:55:19.190 --> 00:55:21.140
9K1234.

00:55:21.420 --> 00:55:23.970
So, you probably know that that's
not something that you can

00:55:24.020 --> 00:55:25.660
just swipe on any system.

00:55:25.660 --> 00:55:28.020
So, you want to bring your
system images forward.

00:55:28.030 --> 00:55:32.110
And to recreate that system,
you can just apply a workflow

00:55:32.190 --> 00:55:35.600
against that system and get all your
other settings automatically applied

00:55:35.630 --> 00:55:39.710
so you don't have to maintain,
15 different versions of systems.

00:55:39.740 --> 00:55:43.930
You can just use this workflow
and apply it on multiple systems.

00:55:47.600 --> 00:55:51.440
So hopefully that's going to be, yeah,
resume from System Image Utility

00:55:51.440 --> 00:55:52.510
and from command-line.

00:55:52.530 --> 00:55:53.720
Here we go.

00:55:53.720 --> 00:55:55.470
And...

00:55:58.480 --> 00:56:00.940
This is kind of self-evident now.

00:56:00.940 --> 00:56:05.720
So you can also use the command-line
utility to bring up some parameters

00:56:05.740 --> 00:56:09.730
as to like call in the image that
you're creating on a different name.

00:56:09.890 --> 00:56:13.700
So passing variables that are
particular to that one image and

00:56:13.760 --> 00:56:17.720
pass those on as arguments into the
workflows so that you don't have to

00:56:17.720 --> 00:56:21.370
go back into System Image Utility
and edit the workflow just to touch

00:56:21.390 --> 00:56:27.690
up on some image ID or the image
name or some other parameters there.

00:56:27.760 --> 00:56:32.540
And now Nick, who is the lead engineer
now on System Image Utility,

00:56:32.540 --> 00:56:36.220
he will give a demo of
the system image utility.

00:56:39.600 --> 00:56:40.570
Hi.

00:56:40.810 --> 00:56:42.100
Can you hear me?

00:56:42.110 --> 00:56:43.260
Hello.

00:56:43.610 --> 00:56:46.380
I'll give you a short glimpse
at the new system image utility,

00:56:46.380 --> 00:56:48.970
which is at the moment
completely work in progress,

00:56:48.970 --> 00:56:50.880
so you won't find it on the seed CD.

00:56:50.930 --> 00:56:54.470
But just have a look and
take a look in the next seed,

00:56:54.470 --> 00:56:57.200
so you'll probably find it there.

00:56:57.400 --> 00:57:03.780
So let's just say Leopard came out and
you want to deploy it as fast as you can.

00:57:03.780 --> 00:57:07.590
You probably want to
use our new assistant.

00:57:07.600 --> 00:57:12.550
You just drag the DVD over here,
select assistant, and instantly,

00:57:12.550 --> 00:57:15.740
in the matter of a few clicks,
you can just create a

00:57:15.740 --> 00:57:17.430
new net install image.

00:57:17.440 --> 00:57:19.970
Everything gets filled out for you,
pre-filled.

00:57:19.970 --> 00:57:23.130
And at this point, you're already set and
you can create your image.

00:57:29.600 --> 00:57:37.040
I skipped this here, otherwise we would,
well, have no Q&A at all.

00:57:37.380 --> 00:57:39.990
At next I will show you how
to make your own workflow.

00:57:40.120 --> 00:57:41.640
Let's say the same scenario.

00:57:41.810 --> 00:57:45.850
Take your Leopard CD, take it over.

00:57:47.350 --> 00:57:50.880
Now we have here our image
selection action where you can

00:57:50.880 --> 00:57:55.900
choose whether a net install or
net boot or what source you want.

00:57:56.130 --> 00:57:59.620
Add some image data.

00:58:00.040 --> 00:58:00.560
Give it a name.

00:58:00.640 --> 00:58:03.070
Say we're making NetBoot.

00:58:03.670 --> 00:58:05.960
Netboot of Leopard.

00:58:06.000 --> 00:58:10.960
Leopard, give it some index and
we serve it remotely,

00:58:10.960 --> 00:58:13.140
locally.

00:58:13.190 --> 00:58:16.350
And because it's a netboot,
we have to add a user.

00:58:16.370 --> 00:58:19.470
So I want to add myself here.

00:58:19.820 --> 00:58:22.490
Nick and some password.

00:58:22.490 --> 00:58:26.360
And also at this point we already
could start creating the image.

00:58:26.360 --> 00:58:30.190
But I just want to save it here.

00:58:30.830 --> 00:58:32.290
We have already one workflow.

00:58:32.400 --> 00:58:33.800
Well, OK.

00:58:33.870 --> 00:58:36.320
So at this point,
I want to show you how to reuse an

00:58:36.320 --> 00:58:38.560
image and a workflow that was saved.

00:58:38.760 --> 00:58:40.200
Take it over.

00:58:40.240 --> 00:58:43.910
And so we have the same workflow
we just created over here,

00:58:44.040 --> 00:58:47.560
and now we can go completely crazy
with all the actions we have.

00:58:47.640 --> 00:58:50.570
We can add another user.

00:58:50.760 --> 00:58:51.700
What is it?

00:58:51.700 --> 00:58:52.700
Oh, add packages, sorry.

00:58:52.700 --> 00:58:54.410
Took the wrong one.

00:58:54.410 --> 00:58:56.300
Of course, you can add packages.

00:58:56.300 --> 00:59:02.850
Nothing interesting here,
so I'll skip this.

00:59:02.850 --> 00:59:02.850
Add another -- huh?

00:59:03.690 --> 00:59:04.990
Oh, I think I found another.

00:59:05.050 --> 00:59:05.710
Oh, yeah, okay.

00:59:05.850 --> 00:59:08.100
There we go.

00:59:08.100 --> 00:59:10.190
Make it a bit bigger.

00:59:11.200 --> 00:59:15.680
and some admin user here.

00:59:15.950 --> 00:59:17.850
Don't care about passwords.

00:59:17.990 --> 00:59:21.060
One of the very cool features
I think many of you requested is

00:59:21.100 --> 00:59:24.730
the per-image MAC address filtering.

00:59:25.020 --> 00:59:29.300
We have some issues
here with the scrolling.

00:59:29.310 --> 00:59:30.240
Where does it go?

00:59:30.240 --> 00:59:31.240
Make address filtering.

00:59:31.250 --> 00:59:32.240
Make address filtering.

00:59:32.240 --> 00:59:35.940
Here we go.

00:59:35.940 --> 00:59:35.940
Sorry.

00:59:36.950 --> 00:59:41.380
We can now filter the
Mac addresses per image and not

00:59:41.380 --> 00:59:43.900
on the server as it was before.

00:59:43.900 --> 00:59:49.200
So just enter here some fancy
Mac addresses you want to allow

00:59:49.270 --> 00:59:52.040
or deny for a specific image.

00:59:52.210 --> 00:59:58.650
We could also, of course,
customize our selections of packages.

00:59:59.810 --> 01:00:02.940
As it was used in the old
network image utility,

01:00:02.940 --> 01:00:05.770
go away.

01:00:10.720 --> 01:00:12.700
As is a mighty mouse.

01:00:12.880 --> 01:00:21.570
And... Hey, see I'm not the only one
who has problems with this.

01:00:22.620 --> 01:00:28.950
and and customize your selection
here or do model filtering as I have

01:00:28.950 --> 01:00:36.180
to fix this one and say we will only
get it out to our new Intel systems

01:00:36.250 --> 01:00:44.670
so we can really force the Yeah,
I know the new Mac Pro is missing.

01:00:44.670 --> 01:00:44.670
Sorry for this one.

01:00:45.700 --> 01:00:49.570
Tyed into a directory service,
of course this is still in.

01:00:49.570 --> 01:00:52.620
And one of the things I think
you all were waiting for is

01:00:52.810 --> 01:00:54.660
the remote image restore.

01:00:54.860 --> 01:00:59.230
We can now hook directly
into an ASR multicast stream

01:00:59.230 --> 01:01:01.210
and restore ASR images.

01:01:02.200 --> 01:01:22.700
[Transcript missing]

01:01:23.450 --> 01:01:28.050
I think we will add several more
actions for the next seats and on the

01:01:28.050 --> 01:01:29.960
next seats this too will be included.

01:01:29.960 --> 01:01:33.000
So yeah,
we hope to get your feedback for this.

01:01:33.010 --> 01:01:35.360
So I hand over to Juussi again.

01:01:42.620 --> 01:01:44.110
So, thank you Nick.

01:01:44.150 --> 01:01:45.100
Isn't that cool?

01:01:45.100 --> 01:01:47.100
Yes.

01:01:47.180 --> 01:01:49.250
Back to the slides please.

01:01:51.650 --> 01:01:53.060
So that was the demo of Automator.

01:01:53.150 --> 01:01:55.500
So this will be a Leopard-only feature.

01:01:55.500 --> 01:02:01.070
To use the 10.5 tools,
you require 10.5 OS.

01:02:01.130 --> 01:02:05.820
So if you need to create a tiger, jaguar,
panther, whatever images,

01:02:05.820 --> 01:02:10.100
you'll need to use the previous
tools from either Tiger or earlier.

01:02:10.150 --> 01:02:14.760
But you can still serve the images,
any images on a Leopard Server,

01:02:14.760 --> 01:02:21.350
and the Leopard-created images can be
served on other previous systems as well.

01:02:21.930 --> 01:02:26.860
And in summary, before we go into QA,
so what did we cover?

01:02:26.860 --> 01:02:27.640
Managed desktop.

01:02:27.700 --> 01:02:33.000
So the top three items we have,
application launch restrictions,

01:02:33.000 --> 01:02:34.560
so fix it and forget it.

01:02:34.700 --> 01:02:38.810
Users should not be able to go
and circumvent the application

01:02:38.810 --> 01:02:39.760
launch policies anymore.

01:02:39.760 --> 01:02:41.390
Adding dashboard support for that.

01:02:41.460 --> 01:02:45.240
Hierarchical groups,
so we can now have nested groups

01:02:45.240 --> 01:02:48.470
and workgroups that inherit
preferences from other workgroups,

01:02:48.760 --> 01:02:49.850
including reporting tools.

01:02:50.130 --> 01:02:53.700
So we have system profile integration,
and we have a command line tool,

01:02:53.700 --> 01:02:57.460
and we have command line tools for
setting managed client preferences.

01:02:57.460 --> 01:03:00.840
And external accounts,
so next generation of portable

01:03:00.840 --> 01:03:03.980
home directories and mobility,
so you can actually carry your

01:03:04.090 --> 01:03:06.890
home directory on a external drive.

01:03:06.920 --> 01:03:11.020
And then for system imaging,
so simplified image creation,

01:03:11.020 --> 01:03:14.200
and we have automated workflows,
and you can all do this

01:03:14.200 --> 01:03:15.630
from the command line.