WEBVTT

00:00:11.680 --> 00:00:15.720
And welcome to Interface
Builder Techniques.

00:00:15.770 --> 00:00:18.820
My name is Kelly Keenan,
and today I'd like to officially

00:00:18.900 --> 00:00:22.840
reintroduce you to Interface Builder.

00:00:22.870 --> 00:00:26.510
For those of you who
are new to our platform,

00:00:30.500 --> 00:00:32.820
Feel free to applaud
at anything you like.

00:00:32.850 --> 00:00:34.900
Anything you don't like, file bugs later.

00:00:34.900 --> 00:00:39.480
So for those of you who are
new to our platform and don't

00:00:39.480 --> 00:00:42.740
know what Interface Builder is,
Interface Builder is the application

00:00:42.740 --> 00:00:45.960
that you use in order to create
your application's interface.

00:00:45.960 --> 00:00:47.740
Easy enough, right?

00:00:47.740 --> 00:00:51.700
We make it easy for you to drag and
drop widgets and controls and windows

00:00:51.700 --> 00:00:56.020
and build panels and everything
that you need for the graphical user

00:00:56.020 --> 00:00:58.080
interface that your application uses.

00:00:58.870 --> 00:01:02.690
We support both Carbon and Cocoa.

00:01:02.930 --> 00:01:06.920
And Interface Builder
is over a decade old.

00:01:06.920 --> 00:01:10.530
And you've gotten used to
it over the last few years,

00:01:10.590 --> 00:01:12.670
and we've all come to love it.

00:01:12.710 --> 00:01:16.410
And this year, we've decided to give
it a little facelift.

00:01:16.560 --> 00:01:18.470
Thank you.

00:01:22.900 --> 00:01:27.290
So we've totally stripped out
Interface Builder and built

00:01:27.390 --> 00:01:29.860
it again from the ground up.

00:01:29.860 --> 00:01:32.690
You guys all know that every once
in a while this needs to happen,

00:01:32.690 --> 00:01:35.780
and a lot of the requests
that you've asked for us to

00:01:35.780 --> 00:01:38.060
do for features we can now do.

00:01:38.490 --> 00:01:42.470
We are continuing to support
both Carbon and Cocoa.

00:01:42.630 --> 00:01:44.980
And some of the new features that
we're going to go through today,

00:01:44.980 --> 00:01:47.240
we're going to see how we've
updated the document window.

00:01:47.240 --> 00:01:50.990
We're going to see the new library
that we're using and how we've

00:01:50.990 --> 00:01:55.200
changed the inspectors to accommodate
your custom widgets so that you

00:01:55.200 --> 00:01:59.420
can add your custom widgets into
the library and the inspectors.

00:01:59.420 --> 00:02:01.980
And there's a whole session
on that on Friday morning at

00:02:01.980 --> 00:02:03.520
9 that I highly recommend.

00:02:04.520 --> 00:02:07.180
I'm going to show you the new
connections heads-up display.

00:02:07.180 --> 00:02:12.470
And Chris is going to come up and show
you all about Cocoa animations and how

00:02:12.470 --> 00:02:16.740
you can use them in Interface Builder,
as well as some of the

00:02:17.140 --> 00:02:18.980
other new Cocoa controls.

00:02:23.250 --> 00:02:26.730
So like I just said,
we're going to do a quick

00:02:26.730 --> 00:02:29.250
tour of Interface Builder 3.0.

00:02:29.250 --> 00:02:33.070
We're going to talk about
some tips and best practices,

00:02:33.070 --> 00:02:36.340
and then how to soup up your interface
and use all the new spiffy things

00:02:36.340 --> 00:02:38.060
that AppKit has provided for us.

00:02:38.060 --> 00:02:43.550
So let's start with a quick
tour of Interface Builder 3.0.

00:02:46.280 --> 00:02:49.380
The first thing you see when you
open up Interface Builder and

00:02:49.380 --> 00:02:51.140
your nib is the document window.

00:02:51.190 --> 00:03:01.000
This is where all of the elements of
your interface actually come together.

00:03:01.040 --> 00:03:05.590
It represents the actual nib file.

00:03:06.280 --> 00:03:11.560
We now have icon, outline,
and browser views.

00:03:11.560 --> 00:03:16.540
And one of the best features that we've
added is that you can now search in here.

00:03:16.630 --> 00:03:20.400
It's been difficult sometimes.

00:03:22.740 --> 00:03:26.900
You know how hard it is occasionally
to find the things like,

00:03:26.910 --> 00:03:29.660
you know, the text fields sell
inside of a table column,

00:03:29.660 --> 00:03:32.580
inside of the scroll view, inside of,
you know, your window.

00:03:32.580 --> 00:03:35.100
And now you can just
search for those items.

00:03:37.130 --> 00:03:40.300
Once you've gotten your nib open,
the next thing you're going

00:03:40.300 --> 00:03:43.030
to want to start doing is
adding controls and widgets and

00:03:43.030 --> 00:03:44.900
everything else to your window.

00:03:44.900 --> 00:03:48.680
Those controls all live in the library.

00:03:51.400 --> 00:03:54.920
We've updated,
we've given the old palettes a new

00:03:55.110 --> 00:03:57.690
look by using the library instead.

00:03:58.830 --> 00:04:01.940
And now, you can also search.

00:04:02.050 --> 00:04:05.670
So you don't have to try to guess
which little icon to click on

00:04:05.710 --> 00:04:10.090
to find the palette that had the
widget that you used last week but

00:04:10.160 --> 00:04:13.560
can't remember where it was now.

00:04:13.700 --> 00:04:17.240
We also have made it so that
you can customize groups so

00:04:17.240 --> 00:04:20.380
that you can create a new group,
your favorites,

00:04:20.380 --> 00:04:23.720
and put all of the controls that
you're using for your application into

00:04:23.830 --> 00:04:29.050
that group so you can easily find them
as you're working on your project.

00:04:30.340 --> 00:04:33.380
We have all the old controls still,
so no worries,

00:04:33.410 --> 00:04:36.200
we haven't lost anything along the way.

00:04:36.370 --> 00:04:44.460
Text fields, buttons, tables, windows,
all of the old things are still there.

00:04:44.460 --> 00:04:46.900
And we've added some new ones.

00:04:47.900 --> 00:04:50.040
This is a trick slide.

00:04:50.100 --> 00:04:52.740
Number one, toolbars,
it's not a new control.

00:04:52.740 --> 00:04:56.550
It's been there for a while,
but we finally now have support

00:04:56.550 --> 00:04:58.610
for it in Interface Builder.

00:05:03.980 --> 00:05:07.400
We've added support now for the
predicate editor as well so that you

00:05:07.400 --> 00:05:10.460
can add that to your application.

00:05:10.500 --> 00:05:13.620
Core Data Entities,
if you saw the core data talk yesterday,

00:05:13.620 --> 00:05:18.410
you saw how easy it is to add
an entity and make an interface

00:05:18.510 --> 00:05:20.730
from your core data entities.

00:05:20.900 --> 00:05:24.460
We have the dictionary
controller and the grid view,

00:05:24.460 --> 00:05:29.110
which you'll notice that we used
ourselves in the new library.

00:05:30.990 --> 00:05:33.460
We've also changed the inspectors a bit.

00:05:33.490 --> 00:05:35.350
There are now five modes.

00:05:35.690 --> 00:05:43.120
We have attributes, size, connections,
bindings, and animations.

00:05:43.240 --> 00:05:46.740
And we're going to go through
each of those in just a second.

00:05:46.760 --> 00:05:49.700
One of the things that
you've been most asking for,

00:05:49.700 --> 00:05:53.210
though, we finally have,
which is you can do multiple selection

00:05:53.640 --> 00:05:58.800
and now change attributes for
multiple widgets all at the same time.

00:06:03.530 --> 00:06:06.690
I thought you'd like that one.

00:06:06.770 --> 00:06:11.270
So the first, the Attributes Inspector,
for those of you, again, who are new,

00:06:11.270 --> 00:06:13.450
once you've added
controls to your window,

00:06:13.450 --> 00:06:16.270
now you want to change how they work,
how they behave.

00:06:16.450 --> 00:06:18.040
This is how you're going to do that.

00:06:18.130 --> 00:06:21.090
You're going to use the
Attributes Inspector.

00:06:22.200 --> 00:06:25.630
They're now organized by inheritance.

00:06:25.680 --> 00:06:30.060
So instead of us deciding that
size should go next to title,

00:06:30.060 --> 00:06:34.390
next to something else,
there's actually an ordered flow to it.

00:06:34.500 --> 00:06:39.950
This also makes it really easy for
you to be able to add your custom

00:06:39.950 --> 00:06:44.780
widgets and palettes into the library.

00:06:44.840 --> 00:06:51.260
So now when you subclass,
you get everything from the superclass

00:06:51.260 --> 00:06:54.220
already in the inspector for you.

00:06:54.230 --> 00:06:56.290
And we've added collapsible slices.

00:06:56.310 --> 00:07:00.930
So if there's pieces of the attributes
inspector that you just never change,

00:07:01.210 --> 00:07:03.600
just close them and you
won't see them again.

00:07:03.610 --> 00:07:08.070
Or if something's really important,
you might want to keep that

00:07:08.070 --> 00:07:09.710
part open all the time.

00:07:11.380 --> 00:07:14.230
We've updated the size
inspector a little.

00:07:14.260 --> 00:07:19.020
One of the biggest changes you'll
see is for your main window now,

00:07:19.020 --> 00:07:24.420
you can dedicate where it's going
to land in the desktop space,

00:07:24.420 --> 00:07:27.940
and it's separate from where the
window is when it's opened in IB.

00:07:35.140 --> 00:07:38.600
I know we've all made that mistake
where you suddenly throw the window

00:07:38.600 --> 00:07:42.580
down in the corner somewhere and then
you run your application later and

00:07:42.580 --> 00:07:44.030
you're wondering where that window is.

00:07:44.040 --> 00:07:45.960
Now you don't have to
worry about that anymore.

00:07:45.960 --> 00:07:50.760
The other thing that we've added is
we've changed the struts and springs

00:07:50.880 --> 00:07:54.970
around a little bit and we've added an
animation so that you can actually see

00:07:54.970 --> 00:07:56.780
how it's going to affect that control.

00:07:56.780 --> 00:07:59.890
You don't have to guess anymore
and then resize and figure

00:07:59.890 --> 00:08:01.700
out what actually happened.

00:08:01.700 --> 00:08:03.300
It's going to show it for you.

00:08:05.600 --> 00:08:16.500
[Transcript missing]

00:08:16.920 --> 00:08:18.860
So, three other inspectors.

00:08:18.860 --> 00:08:23.190
Animations, which Chris is going to show
you more about in a little bit.

00:08:23.260 --> 00:08:27.580
Bindings, one of the changes that we've
made in the Bindings Inspector is

00:08:27.580 --> 00:08:31.600
that now you can have more than
one thing open at the same time.

00:08:31.600 --> 00:08:35.300
So you don't have to keep going
back and forth and reopening them.

00:08:35.300 --> 00:08:39.080
And the Connections Inspector.

00:08:39.080 --> 00:08:43.600
And now one of the new things
that we've added is we've

00:08:43.600 --> 00:08:46.370
added a new Connections HUD.

00:08:46.800 --> 00:08:50.710
You can still control
drag between controls.

00:08:50.890 --> 00:08:53.760
But now you can do Control-Click.

00:08:53.830 --> 00:08:57.150
And Control-Click will give you a list
of all the actions and outlets that

00:08:57.150 --> 00:08:59.200
are available to you with that control.

00:08:59.200 --> 00:09:02.890
And once you pick that,
you drag it around the window and

00:09:02.890 --> 00:09:07.320
it's going to show you what will
actually receive that action or outlet.

00:09:07.320 --> 00:09:10.140
So you don't have to do
as much guessing anymore.

00:09:10.140 --> 00:09:12.600
And we think it's a really slick tool.

00:09:12.960 --> 00:09:16.410
And it's pretty easy to, you know,
get rid of, just click the X and

00:09:16.530 --> 00:09:19.820
get rid of things that,
you know, you hooked up by accident

00:09:19.820 --> 00:09:21.090
or things like that.

00:09:21.120 --> 00:09:24.060
And I'm going to show you
more about this in our demo.

00:09:32.300 --> 00:09:37.340
So many of you might know
the controller play example.

00:09:37.340 --> 00:09:40.100
It's in the developer example code.

00:09:40.100 --> 00:09:42.640
I'm just going to use this to
demonstrate some of the things

00:09:42.640 --> 00:09:45.160
that I just talked about.

00:09:45.160 --> 00:09:48.680
So let's go ahead and
open up my document.nib.

00:09:52.400 --> 00:09:58.090
And the first thing that
we're going to do is--

00:09:59.780 --> 00:10:01.450
Look at the library.

00:10:01.540 --> 00:10:07.860
So we have all the Cocoa controls
that you're used to and

00:10:07.860 --> 00:10:09.780
they're all separated out.

00:10:09.780 --> 00:10:15.600
You can multiply select groups
that you're interested in or

00:10:15.600 --> 00:10:20.700
you can just select them all and
you can now search through them.

00:10:20.700 --> 00:10:25.290
So if I want to find all the buttons,
these are all the buttons that we have.

00:10:25.590 --> 00:10:27.980
Or maybe I just want the array
controller and I don't want to

00:10:27.980 --> 00:10:30.610
have to go looking around for it.

00:10:30.860 --> 00:10:36.470
The next thing though
is my favorite actually,

00:10:36.710 --> 00:10:39.180
is making a new category.

00:10:39.280 --> 00:10:48.900
And with our new category,
I'm going to put in all of the controls

00:10:51.160 --> 00:10:54.270
That I need for my application today.

00:10:54.330 --> 00:10:59.340
So I'm going to throw in the
text field and the label and

00:10:59.340 --> 00:11:03.450
a button and a color well.

00:11:03.450 --> 00:11:09.970
And I'm going to need an array
controller and maybe a data table.

00:11:10.300 --> 00:11:14.530
And some different controls for that.

00:11:14.620 --> 00:11:17.800
And now if I look,
I have all of the controls that I'm

00:11:17.800 --> 00:11:19.240
going to want to use in my application.

00:11:19.240 --> 00:11:21.320
I don't have to keep
searching around for them.

00:11:21.350 --> 00:11:28.310
So, over in the document window,

00:11:29.900 --> 00:11:33.170
I've already opened up my window,
so it's here.

00:11:33.260 --> 00:11:36.460
And I've pre-configured some stuff
already so I wouldn't have to go

00:11:36.460 --> 00:11:39.660
through the whole rebuilding this.

00:11:39.670 --> 00:11:43.040
And I want to add, oops,
I didn't add a checkbox.

00:11:43.060 --> 00:11:48.240
So let's go ahead, find the checkbox and
throw that in my group.

00:11:48.270 --> 00:11:53.130
So one of the things that I was missing
here was the checkbox for the flag.

00:11:55.100 --> 00:11:56.900
I'm not going to line it up very well.

00:11:56.900 --> 00:11:58.220
There we go.

00:11:58.230 --> 00:12:00.100
Change this to flag.

00:12:00.100 --> 00:12:02.100
Now something looks funny.

00:12:02.100 --> 00:12:06.170
Well, all of these other controls,

00:12:09.520 --> 00:12:09.890
Mini.

00:12:09.890 --> 00:12:13.700
And I want them all to be regular,
so now I'm just going to go ahead

00:12:13.700 --> 00:12:17.400
and select them all and change
them all to regular at once.

00:12:23.200 --> 00:12:29.910
Now, the next thing I want to show
you is in the document window.

00:12:30.300 --> 00:12:33.130
Now you can add more than
just controls and windows.

00:12:33.200 --> 00:12:36.960
You can add any view that
you are interested in using.

00:12:37.190 --> 00:12:40.280
So I've already set up a scroll
view with a table in it and just

00:12:40.410 --> 00:12:42.680
placed it in my document window.

00:12:42.750 --> 00:12:45.300
And I'm just going to
drag that right out.

00:12:47.450 --> 00:12:53.270
And what I haven't done though is,
you can see by the animation

00:12:53.270 --> 00:12:55.840
it's stuck up in the left corner.

00:12:55.840 --> 00:13:01.490
And I really want it to expand
and be connected on all sides.

00:13:01.570 --> 00:13:06.080
So we're just going to change
the shocks and the struts.

00:13:06.310 --> 00:13:12.080
The other thing I need to do is I've set
all the bindings except for this flag.

00:13:12.750 --> 00:13:19.540
And so I want array controller
selection and I want that to be flag.

00:13:21.850 --> 00:13:31.290
Now, I want to,
my array controller has a bunch of

00:13:31.290 --> 00:13:38.880
received actions and I want to connect
these to these buttons up here.

00:13:38.880 --> 00:13:38.880
And so,

00:13:39.830 --> 00:13:41.880
All you're going to do
now is I control clicked,

00:13:41.970 --> 00:13:45.320
I got this list,
and I'm just going to drag all

00:13:45.320 --> 00:13:47.940
of my connections all at once.

00:13:47.940 --> 00:13:52.340
So instead of control dragging each
time from the array controller,

00:13:52.340 --> 00:13:54.610
I'm going to connect them all together.

00:13:54.620 --> 00:13:56.660
I can also...

00:14:02.540 --> 00:14:05.480
Once you've moved this window,
it's going to stay up

00:14:05.630 --> 00:14:06.640
no matter what you do.

00:14:06.640 --> 00:14:09.180
So if you want to keep
track of what's connected,

00:14:09.230 --> 00:14:12.080
go right ahead and leave the window
up and just close it when you're done.

00:14:12.080 --> 00:14:16.930
Otherwise, if you don't move it and
say I just delete something,

00:14:17.110 --> 00:14:20.220
the next action I do makes it hide again.

00:14:20.220 --> 00:14:22.990
So let's reconnect that.

00:14:22.990 --> 00:14:25.100
Insert.

00:14:27.380 --> 00:14:31.300
And... Doo-doo-doo.

00:14:31.300 --> 00:14:35.790
So the last thing I want to show you,
well, next to last,

00:14:35.790 --> 00:14:40.290
is searching in the document window.

00:14:40.840 --> 00:14:44.260
Now if I want to find
all the table columns,

00:14:44.260 --> 00:14:47.930
it's fairly easy just to say column,
select all the columns,

00:14:47.930 --> 00:14:50.390
and do whatever I'd like to do with them.

00:14:51.600 --> 00:14:57.430
The other thing that you've asked for and
we've given you now is the ability to,

00:14:57.430 --> 00:14:59.880
if you control click
on the title bar here,

00:14:59.890 --> 00:15:05.100
you can now see the ID and the type.

00:15:06.010 --> 00:15:09.940
of all of the widgets in your window.

00:15:14.230 --> 00:15:17.440
And as a finale,
the last thing that we're going

00:15:17.440 --> 00:15:23.880
to do is there's a new menu
called the Build and Go in Xcode.

00:15:23.900 --> 00:15:29.320
And what this is going to do for
us is you might be able to see

00:15:29.580 --> 00:15:32.180
Xcode building at the bottom.

00:15:32.740 --> 00:15:36.740
And now it's ready and my
application's all ready to go.

00:15:36.940 --> 00:15:40.330
So I've actually built it in, yeah,
it's broken.

00:15:40.350 --> 00:15:41.920
That's the wrong one.

00:15:41.960 --> 00:15:43.240
Doo-doo-doo.

00:15:43.470 --> 00:15:45.200
You know what I didn't do?

00:15:45.250 --> 00:15:45.970
Save.

00:15:47.810 --> 00:15:52.140
Funny story,
I did that when I was practicing too.

00:15:52.230 --> 00:15:53.420
So let's try this again.

00:15:53.420 --> 00:15:56.720
I've saved and now it's build and go.

00:15:57.920 --> 00:16:01.120
I didn't quit the application before.

00:16:01.120 --> 00:16:02.880
Blah, blah.

00:16:02.900 --> 00:16:03.490
Good stuff.

00:16:03.580 --> 00:16:04.920
One more time.

00:16:05.370 --> 00:16:07.560
Third time's a charm, right?

00:16:07.560 --> 00:16:11.010
And here's our new application.

00:16:19.390 --> 00:16:22.250
Went out of these.

00:16:22.340 --> 00:16:24.470
Back to slides, please.

00:16:25.260 --> 00:16:29.060
So that's a bunch of the
new stuff that we've added.

00:16:29.060 --> 00:16:30.300
We have a lot more.

00:16:30.310 --> 00:16:33.040
And to show you some of the
tips and best practices,

00:16:33.040 --> 00:16:35.880
I'm going to hand it
over to Chris Pavicich.

00:16:45.200 --> 00:16:52.500
[Transcript missing]

00:16:53.260 --> 00:16:54.430
I'm Chris Pavicich.

00:16:54.490 --> 00:16:57.640
I'm an engineer on the
Interface Builder team.

00:16:57.640 --> 00:17:00.500
In the first section of my presentation,
we're going to talk about

00:17:00.550 --> 00:17:01.620
tips and best practices.

00:17:01.620 --> 00:17:06.240
I'm going to go through a little bit
more into the new features of IB3.

00:17:06.240 --> 00:17:11.590
And then we're going to get on
to the sexy stuff and talk about

00:17:11.590 --> 00:17:14.950
core animation support in IB3.

00:17:16.510 --> 00:17:21.380
So it's the little things in
life that make a big difference.

00:17:21.610 --> 00:17:25.920
Working with IB, you can create really
complicated user interfaces.

00:17:25.920 --> 00:17:28.770
So know your nib.

00:17:28.770 --> 00:17:34.720
At the bottom of the object inspector,
there's a slice in a text field that will

00:17:34.720 --> 00:17:37.960
let you name your user interface items.

00:17:37.960 --> 00:17:41.930
And this is particularly handy
when you've got a lot of the

00:17:42.080 --> 00:17:46.370
same element as a top level item
over and over again in your nib.

00:17:46.400 --> 00:17:50.120
So, yeah.

00:17:50.680 --> 00:17:55.340
We had a bunch of array controllers in
that nib that weren't named very well.

00:17:55.340 --> 00:17:59.810
We had three different array controllers,
and array controller just isn't

00:17:59.820 --> 00:18:02.030
the most descriptive of labels.

00:18:02.110 --> 00:18:06.210
So using the inspector,
I can go ahead and name the controllers,

00:18:06.260 --> 00:18:07.360
and you see that.

00:18:07.600 --> 00:18:08.680
There, now I know.

00:18:08.680 --> 00:18:11.560
That one does users and
that one does groups.

00:18:11.560 --> 00:18:12.340
Super.

00:18:12.340 --> 00:18:16.190
Clear to me and clear to anyone
else who works with my nibs.

00:18:16.200 --> 00:18:20.610
There's a new feature in IB3
that will let you add notes to

00:18:20.740 --> 00:18:23.420
any top-level item in your nib.

00:18:23.420 --> 00:18:25.460
That's also at the bottom.

00:18:30.200 --> 00:18:32.710
That's also at the bottom
of the Object Inspector,

00:18:32.710 --> 00:18:34.800
and it's just a free-form text field.

00:18:34.830 --> 00:18:36.700
Put as much text as you'd like.

00:18:36.710 --> 00:18:41.700
And if you tick the Show with Selection
button at the bottom of the Inspector,

00:18:41.910 --> 00:18:47.300
anytime you have your mouse over
that element in the document window,

00:18:47.400 --> 00:18:49.440
your notes will show up as a tooltip.

00:18:49.450 --> 00:18:54.010
So keep yourself organized,
keep your team organized,

00:18:54.010 --> 00:18:56.240
and get the most out of IB.

00:18:58.000 --> 00:19:04.270
So the next hallmark of good
design is that simple is beautiful.

00:19:04.390 --> 00:19:06.960
Small nibs are easier to manage.

00:19:07.060 --> 00:19:09.780
People new to Interface
Builder and sort of new to

00:19:09.780 --> 00:19:13.810
OS X development have a tendency
to create these really convoluted,

00:19:13.810 --> 00:19:14.880
complicated nibs.

00:19:14.880 --> 00:19:22.190
I have 7,000 views and 19 windows because
I'm not sure how nib loading works.

00:19:22.340 --> 00:19:25.100
I should keep it all in one
because I got one working,

00:19:25.100 --> 00:19:27.140
so we'll go with that strategy.

00:19:27.140 --> 00:19:28.180
Avoid that.

00:19:28.310 --> 00:19:32.600
Keep your nibs as simple as you can.

00:19:32.950 --> 00:19:35.810
Work towards,
as you would create reusable code,

00:19:35.810 --> 00:19:37.340
create reusable nibs.

00:19:37.340 --> 00:19:42.650
If you think a view or a
window that you're working on

00:19:42.650 --> 00:19:46.810
has some potential for reuse,
design towards that.

00:19:46.840 --> 00:19:50.520
There's a new menu item if you dig
yourself into the hole where you've

00:19:50.520 --> 00:19:54.160
got an overly complicated nib and
you'd like to break things up.

00:19:55.460 --> 00:19:57.540
People would dig themselves
into the situation in the

00:19:57.540 --> 00:20:00.720
past where they would say,
I've got this huge nib and it had

00:20:00.720 --> 00:20:04.570
thousands of hours of work in it
and if I went to break it up now,

00:20:04.570 --> 00:20:06.360
it would just take me forever.

00:20:06.360 --> 00:20:09.320
We've done the work for you.

00:20:09.320 --> 00:20:15.530
There's a new decomposed nib menu item in
Interface Builder that will break out all

00:20:15.530 --> 00:20:21.560
of the views and windows in your document
into separate nibs and will maintain as

00:20:21.560 --> 00:20:24.600
much of the document state as we can.

00:20:26.160 --> 00:20:30.420
So decompose menu items,
take your complicated nibs,

00:20:30.460 --> 00:20:30.920
break them up.

00:20:33.110 --> 00:20:41.260
OK, so one of the complaints we hear
most about Interface Builder is I'm

00:20:41.260 --> 00:20:42.920
not sure how to select this thing.

00:20:42.920 --> 00:20:45.380
I've got this table,
and I'm not sure how to

00:20:45.380 --> 00:20:46.970
get to the table column.

00:20:47.910 --> 00:20:50.120
As we started working
on Interface Builder 3,

00:20:50.120 --> 00:20:57.840
one of the things we focused on was
getting selection to be natural.

00:20:58.050 --> 00:21:00.530
So the first thing to remember
when you're working with

00:21:00.530 --> 00:21:04.460
IB3 is click where you mean,
and most of the time,

00:21:04.460 --> 00:21:08.720
it's going to give you the user
interface element you wanted.

00:21:08.800 --> 00:21:12.560
Clicking in a table view won't
give you the scroll view around it.

00:21:12.560 --> 00:21:13.740
It'll give you the table view.

00:21:13.780 --> 00:21:17.000
Clicking in a column will
generally give you the column.

00:21:18.160 --> 00:21:20.730
Working with complicated NIBs
where you've got a lot of

00:21:21.160 --> 00:21:25.840
user interface elements in a
container can get tricky as well,

00:21:25.840 --> 00:21:28.640
especially if it's a complicated view.

00:21:28.640 --> 00:21:32.340
You've got a box inside a tab view,
inside a scroll view.

00:21:32.340 --> 00:21:38.230
So the gesture to drill into those
containers in IB3 is just click,

00:21:38.230 --> 00:21:42.180
wait, click,
and that'll let you select into

00:21:42.350 --> 00:21:45.220
the container at the top level.

00:21:46.540 --> 00:21:50.300
And there's also a new gesture
in IB3 that we call pop and drag.

00:21:50.300 --> 00:21:53.540
So if you want to move
things out of a container,

00:21:53.540 --> 00:21:56.550
say you've laid out your user
interface and you've gone

00:21:56.630 --> 00:21:59.530
to design review and said,
oh, this is great,

00:21:59.530 --> 00:22:01.060
but we want it in a box.

00:22:02.660 --> 00:22:06.600
So you lay your things out,
you embed them in a box,

00:22:06.610 --> 00:22:10.020
go through a few more iterations,
and say, ah, the box was a bad idea.

00:22:10.020 --> 00:22:12.100
We want to go ahead and take that out.

00:22:12.320 --> 00:22:15.360
Well,
if I copy and paste those things out,

00:22:15.360 --> 00:22:18.090
it's going to blow away
all my connections,

00:22:18.090 --> 00:22:19.260
and that's bad.

00:22:19.260 --> 00:22:22.100
So there's a gesture to
help you around that,

00:22:22.200 --> 00:22:23.370
and that's pop and drag.

00:22:23.380 --> 00:22:28.080
So select the user interface items
you want to remove from the container,

00:22:28.080 --> 00:22:32.050
and click and hold,
and you'll see your UI elements pop up.

00:22:32.120 --> 00:22:35.180
And then you can safely move them
out of the container that they're in,

00:22:35.180 --> 00:22:38.110
off to another view,
off to another window.

00:22:46.910 --> 00:22:50.160
I just want to reiterate it again
because it's really important to us.

00:22:50.160 --> 00:22:53.200
Click where you mean when
you want to select something.

00:22:53.200 --> 00:22:58.650
Really, really, 90% of the time,
clicking once will get you what you want.

00:22:59.860 --> 00:23:02.250
If it doesn't,
there are some interesting navigation

00:23:02.250 --> 00:23:05.850
techniques in IB3 to get what you want,
and we're going to talk

00:23:05.850 --> 00:23:06.730
about those in just a second.

00:23:09.640 --> 00:23:14.600
Okay, so you can use the inspector
to track your selection.

00:23:14.600 --> 00:23:18.440
I think most people's workflow is to
leave the inspectors up all the time.

00:23:18.440 --> 00:23:21.050
If you're not sure
what you have selected,

00:23:21.050 --> 00:23:25.540
the great place to refer to is the top
of the inspector window because it'll

00:23:25.540 --> 00:23:28.300
always show you your current selection.

00:23:28.780 --> 00:23:31.240
And there's two modes
for selection in IBE3.

00:23:31.240 --> 00:23:34.540
One is in the document window,
the other is in the editor window,

00:23:34.540 --> 00:23:36.080
both shown on screen here.

00:23:36.080 --> 00:23:38.970
On the editor window,
the cancel button is selected,

00:23:38.970 --> 00:23:42.440
and the same button is shown
selected in the document window.

00:23:45.300 --> 00:23:47.940
So we talked about using the
inspector to track your selection.

00:23:47.940 --> 00:23:51.370
And as Kelly mentioned earlier,
the inspectors now support

00:23:51.760 --> 00:23:53.100
multiple selection.

00:23:53.100 --> 00:23:58.220
And the multiple selection model
is that we will show you all of the

00:23:58.220 --> 00:24:04.560
fields or properties for the UI element
selected that we can that make sense.

00:24:06.960 --> 00:24:14.520
So we talked about using the
inspector to track your selection.

00:24:14.520 --> 00:24:21.250
And as Kelly mentioned earlier,
the inspectors now support

00:24:21.570 --> 00:24:24.010
multiple selection.

00:24:24.010 --> 00:24:25.100
And as Kelly mentioned earlier,
the inspectors now support

00:24:25.100 --> 00:24:25.100
multiple selection.

00:24:25.220 --> 00:24:28.870
It's going to be a particular
property might be disabled.

00:24:31.350 --> 00:24:36.100
If you're not sure how to
get to the next item in IB,

00:24:36.100 --> 00:24:41.560
use the tab key, tab, cycle, selection,
hold it down and it'll cycle through

00:24:41.560 --> 00:24:44.020
and you'll actually go all the
way through your entire document.

00:24:48.400 --> 00:24:54.220
So there are some new menu items in
IB3 for navigating around if you want

00:24:54.220 --> 00:24:58.680
to inspect the current selections,
parent or child or sibling.

00:24:58.680 --> 00:25:02.600
Those are in the top level menu.

00:25:03.630 --> 00:25:07.690
And there's a pop-up on the
right-hand side of the HUD,

00:25:07.800 --> 00:25:10.350
the Connections HUD that
Kelly talked about earlier,

00:25:10.500 --> 00:25:12.390
that'll let you change your selection.

00:25:12.560 --> 00:25:15.360
Say you selected a button,
and what you really meant to

00:25:15.360 --> 00:25:17.930
edit was the button's cell.

00:25:18.100 --> 00:25:20.680
On the right-hand side of the HUD,
there'll be a small pop-up that

00:25:20.680 --> 00:25:25.720
will appear that'll let you
go about three user interface

00:25:25.720 --> 00:25:28.680
elements up or down in the tree.

00:25:29.180 --> 00:25:33.500
So if you bring up the HUD and you found,
oh, I've selected the wrong thing,

00:25:33.500 --> 00:25:37.000
you don't necessarily have to go back,
bring up the HUD again,

00:25:37.000 --> 00:25:39.340
select what you wanted to.

00:25:39.340 --> 00:25:41.010
It's right there on the right-hand side.

00:25:41.030 --> 00:25:42.380
There's a small pop-up menu.

00:25:45.310 --> 00:25:49.230
So I want to talk about the
effects of moving versus

00:25:49.230 --> 00:25:51.520
copying in Interface Builder.

00:25:51.520 --> 00:25:56.000
Moving things, as I mentioned earlier,
preserves all their attributes

00:25:56.190 --> 00:25:59.380
and all their connections,
whereas copy, cut,

00:25:59.380 --> 00:26:03.500
and paste preserves the attributes
but not the connections.

00:26:03.630 --> 00:26:06.270
So to tie this back to what
I was talking about earlier,

00:26:06.480 --> 00:26:10.190
the pop and drag gesture,
since it's a move,

00:26:10.210 --> 00:26:12.120
will retain your connections.

00:26:12.140 --> 00:26:16.860
And this is important after you've spent
quite a bit of time designing a nib,

00:26:16.860 --> 00:26:19.940
and you need to make this major change.

00:26:19.940 --> 00:26:21.820
You need to move things around.

00:26:22.100 --> 00:26:25.720
Maybe you need to move a whole section
of interface from one view to another.

00:26:25.740 --> 00:26:28.920
Copy and paste isn't the way
to go because you'll hose

00:26:28.950 --> 00:26:30.540
all of your connections.

00:26:30.690 --> 00:26:32.490
Pop and drag.

00:26:35.850 --> 00:26:39.570
So as I mentioned earlier,
there's an embed in menu item now.

00:26:39.580 --> 00:26:43.940
So you can band select multiple
items and then say embed in.

00:26:43.970 --> 00:26:49.210
And the menu item comes
preconfigured with the most popular

00:26:49.210 --> 00:26:53.190
containers to embed your items in.

00:26:53.230 --> 00:26:58.780
And most of those will-- you want
to use the auto sizing features to

00:26:58.780 --> 00:27:03.760
lay out your user interface elements
correctly once they're in the container.

00:27:06.000 --> 00:27:09.710
I mentioned earlier click, wait,
click to drill into a view.

00:27:09.730 --> 00:27:15.510
So this is great for selecting
the content of a container.

00:27:15.620 --> 00:27:19.360
Like the box view has a content view.

00:27:19.360 --> 00:27:27.540
And that has its own set of properties
that can be set aside from the box.

00:27:27.660 --> 00:27:31.560
So click, wait, click will select,
in that case,

00:27:31.560 --> 00:27:34.350
the content view of the box.

00:27:36.160 --> 00:27:39.000
And as I mentioned before,
pop and drag to pull things out of a

00:27:39.000 --> 00:27:44.800
container once they've been embedded,
and that preserves connections

00:27:45.300 --> 00:27:46.480
because it's a move operation.

00:27:53.110 --> 00:27:56.700
So there's a new tool in
IB3 called Lift and Stamp.

00:27:56.700 --> 00:28:03.080
And Lift and Stamp is useful for--

00:28:03.400 --> 00:28:11.500
[Transcript missing]

00:28:11.760 --> 00:28:16.400
Other UI elements in the
same view or nib file.

00:28:16.400 --> 00:28:20.920
So as an example,
imagine you're designing a UI with

00:28:20.920 --> 00:28:24.460
a bunch of table views and a
bunch of buttons to add and remove

00:28:24.460 --> 00:28:26.800
items from that table view.

00:28:27.420 --> 00:28:29.490
You go through a couple
cycles of development,

00:28:29.510 --> 00:28:32.780
decide the standard Cocoa buttons
aren't what we want.

00:28:32.860 --> 00:28:35.770
We want to change everything
to this bezeled style button.

00:28:35.880 --> 00:28:37.220
But I've got everything wired up.

00:28:37.360 --> 00:28:38.910
All my connections are made.

00:28:39.030 --> 00:28:40.460
All my bindings are set up.

00:28:40.530 --> 00:28:44.380
I don't want to go and
recreate all those buttons.

00:28:44.500 --> 00:28:49.180
I could multiple select and try
to change the style on all of

00:28:49.180 --> 00:28:51.790
the buttons at the same time.

00:28:51.850 --> 00:28:55.730
Or I could work with one button,
get it exactly the way I want,

00:28:55.920 --> 00:29:00.450
exactly the style I'm looking for,
and then use the lift and stamp

00:29:00.580 --> 00:29:05.050
tool to copy the attributes from
that button to all the other ones

00:29:05.050 --> 00:29:07.090
that need to look just like it.

00:29:07.240 --> 00:29:11.320
So the way you use the lift and
stamp tool is tweak your user

00:29:11.320 --> 00:29:13.540
interface until you're happy with it.

00:29:13.770 --> 00:29:16.960
Select the UI element that you
want to copy the properties from.

00:29:17.040 --> 00:29:19.740
Bring up the inspector, and then in--

00:29:20.250 --> 00:29:21.950
That's not a piece of art.

00:29:21.980 --> 00:29:23.650
That's actually the lift and stamp tool.

00:29:23.660 --> 00:29:27.760
So grab it from... I heard
someone in the back,

00:29:27.760 --> 00:29:28.120
oh.

00:29:28.120 --> 00:29:33.800
Just to share a story,
the first time I saw it, I also went, oh.

00:29:37.700 --> 00:29:40.810
So the,
and then you drag the wheel from the

00:29:40.810 --> 00:29:44.360
lift and stamp tool off to your new,
your other UI elements

00:29:44.360 --> 00:29:46.600
that you want to change,
and it'll apply the

00:29:46.730 --> 00:29:48.660
settings from the source.

00:30:04.610 --> 00:30:07.750
That was the lift and stamp tool.

00:30:07.890 --> 00:30:10.520
OK, so the next thing I want to
talk about while you're laying

00:30:10.520 --> 00:30:14.190
out your interface is sizing.

00:30:14.480 --> 00:30:17.000
These are simple sort
of beginnerish tips,

00:30:17.070 --> 00:30:21.940
but they're still important,
even if you used IB since version 0.8,

00:30:22.010 --> 00:30:23.320
the first version ever released.

00:30:23.340 --> 00:30:26.780
When you're designing a window,
set the minimum and max sizes

00:30:26.780 --> 00:30:28.560
where they're appropriate.

00:30:28.560 --> 00:30:33.680
No one wants, if you design a window with
three buttons and a table view,

00:30:33.680 --> 00:30:39.190
to be able to make that full screen
and show 90% screen area with the

00:30:39.190 --> 00:30:41.340
nice striped Cocoa background.

00:30:42.100 --> 00:30:44.300
So set minimum and maximum sizes.

00:30:44.300 --> 00:30:47.520
No one also wants to take your
window and make it three pixels by

00:30:47.520 --> 00:30:51.820
two pixels wide and it doesn't have
any meaningful content on screen.

00:30:53.250 --> 00:30:59.360
So the place in IB that you size
windows is in the size inspector.

00:30:59.360 --> 00:31:03.880
Remember, once you set the width
and height to actually--

00:31:04.120 --> 00:31:07.810
Tick the box that says has
minimum and maximum size.

00:31:07.810 --> 00:31:12.220
And remember to position your window on
screen where you'd like it to show up.

00:31:13.510 --> 00:31:15.210
The same thing goes for NSViews.

00:31:15.300 --> 00:31:16.890
They have heights and widths.

00:31:16.970 --> 00:31:20.300
We've got the new Springs and
Struts interface Kelly talked

00:31:20.300 --> 00:31:22.800
about earlier and the animation.

00:31:22.920 --> 00:31:25.750
It'll show you how things are sizing.

00:31:28.130 --> 00:31:30.080
Remember to set up your
springs and struts.

00:31:30.080 --> 00:31:33.400
No one wants to launch your app,
resize your window,

00:31:33.400 --> 00:31:38.830
and see this table view slink off to
the left and not resize with the rest.

00:31:38.840 --> 00:31:41.930
So make sure your springs and
struts are set appropriately so

00:31:41.930 --> 00:31:44.080
that your user interface looks good.

00:31:47.790 --> 00:31:50.800
If you're not sure what you've
done with the springs and struts,

00:31:50.800 --> 00:31:53.580
the animation is there to
help you figure it out.

00:31:53.690 --> 00:31:56.440
It'll show you the exact
behavior you're going to get.

00:31:56.540 --> 00:31:58.060
So, useful tool.

00:32:00.820 --> 00:32:04.180
And there's still a Cocoa Simulator
in Interface Builder 3.

00:32:04.180 --> 00:32:08.090
You access it with Command-R,
and that'll actually just launch

00:32:08.090 --> 00:32:12.700
your user interface as it would
if it were your app running,

00:32:12.700 --> 00:32:15.860
and you can test out your
resizing behavior there as well.

00:32:18.400 --> 00:32:25.150
So there's a property on
NSView called AutoResizeSubviews,

00:32:25.260 --> 00:32:27.700
which is on by default.

00:32:29.180 --> 00:32:31.600
That's in the inspector for NSVU.

00:32:31.600 --> 00:32:33.800
Most of the time,
you're going to want to leave it checked.

00:32:33.800 --> 00:32:34.970
Take advantage of that.

00:32:35.150 --> 00:32:40.230
The AppKit folks worked hard on it,
and it generally does the right thing.

00:32:41.770 --> 00:32:45.120
There's also a size to fit command in IB.

00:32:45.120 --> 00:32:46.180
It's command equals.

00:32:46.180 --> 00:32:52.620
When you make a selection, a button,
a text field, a label,

00:32:52.620 --> 00:32:57.030
and you hit command equals,
it'll automatically size that view so it

00:32:57.030 --> 00:32:59.620
best fits the content it's displaying.

00:32:59.620 --> 00:33:03.760
So good layout, use size to fit.

00:33:07.530 --> 00:33:13.020
So I want to talk for just a second
about first moving things around.

00:33:13.280 --> 00:33:18.720
If you've never used Interface Builder
before and you're completely new to OS X,

00:33:18.720 --> 00:33:22.020
you move things with the mouse.

00:33:22.020 --> 00:33:24.500
And the mouse is great
for course movement.

00:33:24.500 --> 00:33:27.130
So when you're dragging
things into your nib,

00:33:27.130 --> 00:33:29.560
you're first creating your document.

00:33:29.560 --> 00:33:30.740
It's great.

00:33:30.740 --> 00:33:35.210
When you're down to that end of the
cycle and you're almost ready to ship

00:33:35.210 --> 00:33:39.190
and everything's got to be just so,
making a selection and using the arrow

00:33:39.190 --> 00:33:43.040
keys will move things a pixel at a
time so you can get just the right

00:33:43.040 --> 00:33:46.020
alignment and layout you're looking for.

00:33:47.730 --> 00:33:51.570
So there's guides provided in IB to
make sure you're following the

00:33:51.640 --> 00:33:53.180
Apple Human Interface guidelines.

00:33:53.180 --> 00:34:00.940
These blue dashed lines that you see
are those Apple Aqua HIG layout guides.

00:34:00.940 --> 00:34:06.120
And those will pop up automatically
as you drag a UI element around.

00:34:06.120 --> 00:34:09.980
The Aqua guides pop up and show you that
you've got things aligned correctly.

00:34:12.180 --> 00:34:13.900
We've also got custom guides in IB.

00:34:13.900 --> 00:34:17.980
This is especially useful if
you're working with a team

00:34:17.980 --> 00:34:20.620
and you've got a custom layout
that everyone needs to follow.

00:34:20.620 --> 00:34:29.690
You can drag a guide on,
use it for your alignment, and...

00:34:30.100 --> 00:34:35.500
If you use the new Nib 3.0 format,
those guides will be

00:34:35.500 --> 00:34:37.320
retained with your document.

00:34:37.320 --> 00:34:41.130
And new in Interface Builder 3,
you can now place the custom

00:34:41.130 --> 00:34:43.240
guides inside of containers.

00:34:43.240 --> 00:34:47.640
So there's an example on screen of a
custom guide placed inside a container.

00:34:47.640 --> 00:34:48.970
Thank you.

00:35:01.160 --> 00:35:03.520
One of the things that's useful to
keep track of while you're laying out

00:35:03.560 --> 00:35:06.580
is what are the bounds of my view?

00:35:06.660 --> 00:35:11.790
In the Layout menu in IB3,
you'll find a menu item to

00:35:11.790 --> 00:35:13.090
show the bounds rectangle.

00:35:13.090 --> 00:35:18.310
The bounds is defined
by Cocoa and AppKit.

00:35:18.630 --> 00:35:22.280
And there's also another option that
a lot of people may not quite get,

00:35:22.280 --> 00:35:23.710
and that's layout rectangles.

00:35:23.820 --> 00:35:30.720
And layout rectangles are what
IB uses to do snapping for laying

00:35:30.720 --> 00:35:32.890
out two controls side by side.

00:35:33.020 --> 00:35:36.220
So if you need to know how two
elements are going to snap together,

00:35:36.440 --> 00:35:40.070
you can turn on the layout rectangles,
and you'll possibly understand a

00:35:40.110 --> 00:35:46.180
little bit better why IB is showing
the snapping behavior that it is.

00:35:49.910 --> 00:35:52.110
OK, so let's talk about
connections for a minute.

00:35:52.170 --> 00:35:57.180
This is, I think,
one of the coolest features of IB3.

00:35:57.180 --> 00:36:00.480
We're going to talk about the HUD.

00:36:01.290 --> 00:36:04.490
It seemed to be,
making connections in previous

00:36:04.500 --> 00:36:08.380
versions of IB seemed to be something
that people would get caught up on.

00:36:08.550 --> 00:36:14.300
Do I drag from the table view to
the button or the button to the

00:36:14.370 --> 00:36:20.200
table view and how does it work
and people would stumble over it.

00:36:20.880 --> 00:36:23.920
You can go either which way now.

00:36:23.920 --> 00:36:27.860
Drag in the direction
that makes sense to you.

00:36:27.860 --> 00:36:31.200
You can still do control drag
for people who are old school.

00:36:31.200 --> 00:36:33.900
And control clicking,
as Kelly mentioned earlier,

00:36:33.900 --> 00:36:37.640
will bring up the new connections HUD,
showing you the nice list of outlets

00:36:37.680 --> 00:36:39.430
and actions that are available.

00:36:43.290 --> 00:36:45.260
So a couple quick tips on the HUD.

00:36:45.260 --> 00:36:49.020
Kelly mentioned a few of these earlier.

00:36:49.340 --> 00:36:51.540
There's a selection pop-up
on the right-hand side.

00:36:51.540 --> 00:36:54.450
So if you've brought up the HUD and
you've selected the wrong element,

00:36:54.450 --> 00:36:57.750
you don't have to dismiss the HUD,
remake your selection,

00:36:57.750 --> 00:36:58.900
bring the HUD back up.

00:36:59.110 --> 00:36:59.950
It's there on the right.

00:37:00.010 --> 00:37:03.210
Just change the selection
and the HUD will update.

00:37:03.370 --> 00:37:04.900
You can use hover and pop.

00:37:04.980 --> 00:37:08.100
Say you're working with a nib
with two custom views in it,

00:37:08.140 --> 00:37:13.640
and you'd like to connect a button
in one to a table view in the other.

00:37:13.640 --> 00:37:17.350
And you realize as you
start connecting that,

00:37:17.350 --> 00:37:20.080
oh, that other view is closed.

00:37:20.080 --> 00:37:24.310
You can actually drag from the HUD to
the document window to the viewer

00:37:24.850 --> 00:37:29.920
window that you want to connect to that
contains the element you're looking for.

00:37:29.920 --> 00:37:32.930
And it'll pop that viewer
window open for you,

00:37:32.930 --> 00:37:35.920
and then you can complete the connection.

00:37:36.640 --> 00:37:38.850
And as Kelly mentioned
earlier in the presentation,

00:37:38.920 --> 00:37:42.080
if you move the HUD when it's popped up,
it'll become sticky.

00:37:42.080 --> 00:37:45.750
And that's really useful when
you're going to do a bunch

00:37:45.760 --> 00:37:48.020
of connections from one item.

00:37:48.020 --> 00:37:50.520
You've got a bunch of stuff to wire up.

00:37:50.590 --> 00:37:52.120
You can make the HUD stick on screen.

00:37:52.120 --> 00:37:55.480
And then you simply dismiss it with the
X on the left-hand side of the window.

00:38:01.750 --> 00:38:08.090
All right,
so two things we'd like to get everyone

00:38:08.160 --> 00:38:13.010
to adopt as much as they can as you're
developing your next great application

00:38:13.290 --> 00:38:17.010
is accessibility and scripting support.

00:38:17.080 --> 00:38:21.260
There are a lot of users,
and OS X provides a lot of facilities

00:38:21.860 --> 00:38:25.890
for users with special needs.

00:38:26.070 --> 00:38:28.460
Some of that is expressed
in Interface Builder.

00:38:28.460 --> 00:38:32.560
If you use the Attributes Inspector,
there's an accessibility slice

00:38:32.790 --> 00:38:37.860
that will let you set accessibility
properties on your UI elements.

00:38:37.960 --> 00:38:43.460
There are some also accessibility
connections within the Connections HUD.

00:38:43.610 --> 00:38:47.460
So please take advantage
of those features.

00:38:47.610 --> 00:38:52.490
It opens your app to a wider market.

00:38:52.740 --> 00:38:56.760
There's no good reason to limit
yourself and not use the accessibility

00:38:56.760 --> 00:38:58.980
features that the OS provides.

00:38:58.980 --> 00:39:01.260
And the other thing is scripting support.

00:39:01.260 --> 00:39:05.800
It's becoming more and more popular
to automate your applications.

00:39:05.800 --> 00:39:08.940
Automator has been a huge success.

00:39:08.940 --> 00:39:15.140
And when you're developing your tool,
it's important to keep in mind the

00:39:15.140 --> 00:39:18.560
fact that someone might want to
use your tool not as standalone,

00:39:18.560 --> 00:39:20.400
but as part of a workflow.

00:39:20.400 --> 00:39:25.640
And the better scriptable your tool is...

00:39:26.980 --> 00:39:29.030
The easier you're going
to make that for people.

00:39:29.210 --> 00:39:32.680
And there are lots of,
it has positive repercussions

00:39:32.680 --> 00:39:35.480
for you as a developer as well
because there are lots of automated

00:39:35.540 --> 00:39:40.330
testing tools coming out that
rely on that scripting interface.

00:39:44.830 --> 00:39:48.400
So let's talk about
integration with Xcode.

00:39:48.400 --> 00:39:50.580
You guys all know Xcode.

00:39:50.600 --> 00:39:52.660
You've met the new IB,
and I hope you like it.

00:39:52.770 --> 00:39:55.990
And they love each other.

00:40:01.780 --> 00:40:05.700
Okay, so Xcode and IB were both
designed to work together.

00:40:05.700 --> 00:40:09.590
Xcode, of course,
manages all your source code

00:40:09.590 --> 00:40:12.810
and resources for your project,
and IB is, of course,

00:40:12.810 --> 00:40:17.150
the premier design tool for
user interfaces under OS X.

00:40:18.850 --> 00:40:23.470
So I want to talk a little bit
about how the two are integrated.

00:40:23.700 --> 00:40:30.380
There's a slight change in IB3 as to how
things work from Interface Builder 2.

00:40:31.500 --> 00:40:37.860
Say you write a class in Xcode and you'd
like to use that class in your Nib file.

00:40:38.120 --> 00:40:43.950
The way you get IB to register
that that class exists is just

00:40:43.950 --> 00:40:48.680
to drag it from Xcode or from the
Finder into your document window.

00:40:50.810 --> 00:40:54.390
From that point on,
if both IB and the Xcode project

00:40:54.390 --> 00:41:00.360
are open at the same time,
IB will notice any changes that

00:41:00.360 --> 00:41:03.170
are made to the header file.

00:41:10.480 --> 00:41:13.220
So IB is automatically going to
notice that you made changes to the

00:41:13.220 --> 00:41:17.660
header file in Xcode once you save it,
and those will be reflected immediately.

00:41:17.660 --> 00:41:20.690
And then the other new
thing we've added to IB3,

00:41:20.690 --> 00:41:23.920
Kelly showed earlier,
is the Build and Run menu.

00:41:23.920 --> 00:41:28.120
So if you've got your nib open in IB3,
there's no need to switch back to Xcode

00:41:28.120 --> 00:41:30.400
as long as it's got your project open.

00:41:30.400 --> 00:41:34.110
Just use the Build and Run menu,
or I believe the keyboard

00:41:34.410 --> 00:41:38.090
shortcut is Command-Shift-R,
and it'll automatically build

00:41:38.090 --> 00:41:39.800
and run your project in Xcode.

00:41:40.400 --> 00:41:42.220
Do your design work.

00:41:42.220 --> 00:41:43.540
You want to test it out.

00:41:43.540 --> 00:41:44.600
Use some live data.

00:41:44.600 --> 00:41:45.740
See your app running.

00:41:45.740 --> 00:41:49.150
Command-Shift-R,
and it's going to fire up your Xcode

00:41:49.150 --> 00:41:51.410
build and start running for you.

00:41:55.750 --> 00:42:01.820
The next way we improve the integration
between IB and Xcode is searching.

00:42:01.820 --> 00:42:05.380
Nib files are now indexed
by the Xcode indexer.

00:42:05.500 --> 00:42:13.510
And using definitions searches,
not free text searches from Xcode,

00:42:13.580 --> 00:42:15.220
you can actually search into your nibs.

00:42:15.220 --> 00:42:19.190
You can search for outlets, actions,
and certain key paths.

00:42:19.220 --> 00:42:24.220
Thank you.

00:42:28.800 --> 00:42:32.240
I don't know how many of you
have seen the Xcode presentations

00:42:32.240 --> 00:42:36.080
about its new refactoring support,
but refactoring now works

00:42:36.080 --> 00:42:37.800
across nib files as well.

00:42:37.800 --> 00:42:42.200
The Xcode rename refactoring is the
only one that's supported right now,

00:42:42.200 --> 00:42:47.780
and if you rename an outlet, an action,
or a key path,

00:42:47.870 --> 00:42:52.790
that change can also be automatically
refactored in your nibs as well.

00:42:58.880 --> 00:43:01.240
Can I get the demo machine, please?

00:43:31.300 --> 00:43:35.200
Okay,
so the first thing I'd like to show you

00:43:35.400 --> 00:43:41.700
guys in this demo is the refactoring
support I talked about earlier.

00:43:41.700 --> 00:43:45.790
So I'm going to bring up the HUD and
show you the outlets and actions

00:43:45.860 --> 00:43:48.050
defined on this nib's files owner.

00:43:48.060 --> 00:43:53.690
So we've got a window here.

00:43:53.950 --> 00:43:57.700
An image view and we've
got a toggle action that's

00:43:57.700 --> 00:43:59.820
connected up to a button here.

00:43:59.820 --> 00:44:07.590
And I'm going to go into Xcode,
open that source up.

00:44:12.740 --> 00:44:16.640
And I am going to refactor this window.

00:44:16.640 --> 00:44:20.080
I called it Core Animation Window,
and I'd like to change the name of that.

00:44:20.080 --> 00:44:23.190
It's not very well named.

00:44:23.810 --> 00:44:26.180
So it brings up the
refactoring interface in Xcode,

00:44:26.180 --> 00:44:30.640
and I'm going to rename the
Core Animation Window to

00:44:33.260 --> 00:44:34.820
typing.

00:44:34.940 --> 00:44:36.920
My window.

00:44:36.970 --> 00:44:38.710
I'm going to hit preview.

00:44:38.790 --> 00:44:41.260
So the refactoring window,
if you guys haven't seen this,

00:44:41.260 --> 00:44:45.260
is going to show me all of the
files in which this refactoring

00:44:45.260 --> 00:44:47.590
will actually make a change.

00:44:49.880 --> 00:44:54.800
I can bring up a diff here that
will show me what's going to change.

00:44:54.800 --> 00:45:02.470
And I'm happy with that change,
so I'm going to go ahead and hit Apply.

00:45:05.300 --> 00:45:09.860
This code is going to
work on the refactoring.

00:45:09.860 --> 00:45:13.360
I'm going to go ahead and save
all the files I just changed.

00:45:20.040 --> 00:45:21.560
I'm going to bring up the HUD on my nib.

00:45:21.580 --> 00:45:27.200
And it renamed my window.

00:45:27.220 --> 00:45:32.590
So refactoring support in Xcode.

00:45:32.630 --> 00:45:35.420
Show you a quick demo of the searching.

00:45:43.200 --> 00:45:48.260
I'm going to do a definition search.

00:45:48.280 --> 00:45:51.340
I need to know,
I know somewhere in this nib,

00:45:51.340 --> 00:45:54.220
this project, I've got something
defined called my window.

00:45:54.220 --> 00:45:56.210
I need to know where.

00:45:57.180 --> 00:45:58.090
There we go.

00:45:58.150 --> 00:46:02.360
It's an instance variable in the header,
and it's a modeled

00:46:02.360 --> 00:46:03.920
property in my nib file.

00:46:03.920 --> 00:46:07.280
And if I double-click the nib,
back to IB.

00:46:07.280 --> 00:46:12.720
So the last thing I'd like to show you
is the integration of the build and run.

00:46:18.910 --> 00:46:20.920
I'm going to say build and go in Xcode.

00:46:20.950 --> 00:46:24.020
It's going to build my project.

00:46:24.070 --> 00:46:25.040
And there it is running.

00:46:25.100 --> 00:46:32.590
Can we go back to the slides, please?

00:46:39.700 --> 00:46:46.900
[Transcript missing]

00:46:53.600 --> 00:46:56.600
How many of you have seen
Core Animation this week?

00:46:56.600 --> 00:47:02.620
How many of you were psyched by it?

00:47:06.900 --> 00:47:12.080
How many of you are hoping that
I'm going to say IB3 supports it?

00:47:13.600 --> 00:47:16.920
And you're right.

00:47:16.950 --> 00:47:19.200
All right, so quick agenda for
this part of the talk.

00:47:19.200 --> 00:47:24.950
I'm going to talk a little bit about the
architecture of how Interface Builder

00:47:24.950 --> 00:47:31.540
works and show you where we get some
of the effects that we expose in IB3.

00:47:31.540 --> 00:47:35.450
And then we're going to move right on to
the meat and talk about the new visual

00:47:35.560 --> 00:47:37.980
effects that are available in IB3 today.

00:47:39.910 --> 00:47:41.660
Okay, so do you know that guy?

00:47:41.660 --> 00:47:43.160
Hopefully you'll come to love him.

00:47:43.160 --> 00:47:44.140
That's IB3.

00:47:44.140 --> 00:47:47.600
IB3 is built on top of
the Interface Builder kit,

00:47:47.600 --> 00:47:52.200
which gives us all of our
functionality for editing live UIs.

00:47:52.200 --> 00:47:55.280
Built on top of the app kit,
which gives you all the great

00:47:55.280 --> 00:47:57.300
Cocoa controls you know and love.

00:47:59.050 --> 00:48:01.300
Which is in turn built
on top of Quartz Core,

00:48:01.300 --> 00:48:07.990
which gives you lots of
high-powered imaging API,

00:48:08.020 --> 00:48:12.390
and on top of Core Graphics,
which does all of our low-level drawing.

00:48:13.300 --> 00:48:17.130
There's a new sub-framework that you've
heard talk about this week called

00:48:17.140 --> 00:48:22.400
Core Animations as part of Quartz,
and we've exposed that in IB3.

00:48:26.260 --> 00:48:30.800
So two of the new visual effects that
we've added are available directly

00:48:30.870 --> 00:48:32.740
from AppKit without doing anything.

00:48:32.740 --> 00:48:37.770
All you have to do is run
your application and target

00:48:37.770 --> 00:48:40.910
it for Leopard or later.

00:48:42.000 --> 00:48:45.470
Those two visual effects
are alpha transparency.

00:48:45.660 --> 00:48:52.420
So if you watch the alpha
slider and the text,

00:48:52.420 --> 00:48:56.300
as I crank the slider down,
it gets more and more alpha.

00:48:56.300 --> 00:49:00.680
So I can go from fully
transparent to fully opaque.

00:49:01.800 --> 00:49:09.190
The next effect that we're-- the app
kit supports that we're now offering

00:49:09.190 --> 00:49:11.870
up in IB3 is frame center rotation.

00:49:11.910 --> 00:49:14.030
So every view has a frame.

00:49:14.130 --> 00:49:18.240
And the frame center rotation is just,
how can I spin that view

00:49:18.240 --> 00:49:19.770
around its center point?

00:49:19.820 --> 00:49:25.320
So as the slider moves for the rotation,
there's 180 degree rotation

00:49:25.320 --> 00:49:27.970
and your UI is upside down.

00:49:31.350 --> 00:49:34.770
Okay, so as I mentioned before,
those two effects,

00:49:34.770 --> 00:49:38.840
alpha transparency and rotation,
are available without

00:49:38.950 --> 00:49:40.100
doing anything special.

00:49:40.100 --> 00:49:41.560
There's nothing you have to turn on.

00:49:41.560 --> 00:49:43.310
They're just provided by the kit.

00:49:43.310 --> 00:49:45.860
Works in Leopard or later.

00:49:46.220 --> 00:49:51.130
The core animation effects I'm
about to talk about need to

00:49:51.130 --> 00:49:56.360
have layer rendering turned on,
and that's available to any

00:49:56.360 --> 00:49:59.200
NS view or subclass thereof.

00:49:59.200 --> 00:50:05.310
And what happens when you turn on the
once layer property of a view is that

00:50:05.460 --> 00:50:12.300
its rendering actually gets handed off
from the app kit to core animations.

00:50:12.300 --> 00:50:16.190
And at that point forward,
core animations is responsible for that.

00:50:16.310 --> 00:50:21.670
So the first thing you need to remember
when you start playing with the core

00:50:21.670 --> 00:50:26.980
animations effects is to bring up
the attributes inspector for the view

00:50:26.980 --> 00:50:29.950
and turn on the once layer tick box.

00:50:33.730 --> 00:50:38.690
Okay, so the first effect that we're
supporting in IB3 are custom shadows.

00:50:38.690 --> 00:50:41.740
And I'm going to walk you through really
quickly how to set up a custom shadow,

00:50:41.880 --> 00:50:44.890
and I'm actually going to show
a demo of all this as soon

00:50:44.890 --> 00:50:46.840
as I'm done going through it.

00:50:46.990 --> 00:50:50.590
So, like turning on the layer hosting,
you need to remember

00:50:50.590 --> 00:50:51.500
to turn on the shadow.

00:50:51.500 --> 00:50:56.960
You can actually set all the effects
up and have the shadow disabled,

00:50:56.960 --> 00:50:59.300
and you'll wonder,
why is it not rendering?

00:50:59.300 --> 00:51:02.070
It's not rendering because
you didn't turn it on.

00:51:02.080 --> 00:51:05.100
So, remember to set the enabled checkbox.

00:51:06.920 --> 00:51:11.360
Then the shadow has a set
of offsets behind the view.

00:51:11.500 --> 00:51:16.800
Negative values are left or down and
positive values are right and up.

00:51:16.800 --> 00:51:21.400
So if you want an offset slightly
to the right and slightly down,

00:51:21.400 --> 00:51:28.230
it's a positive width offset
and a negative height offset.

00:51:29.520 --> 00:51:35.360
You can also set the blur radius of
your shadow from very small values.

00:51:35.360 --> 00:51:40.910
Zero blur radius is a very tight shadow
with a very strongly defined edge.

00:51:40.980 --> 00:51:46.890
Extremely large blur values will
give you an extremely diffuse shadow.

00:51:48.180 --> 00:51:52.800
and you can pick a color for your shadow
and the colors are standard NS color.

00:51:52.800 --> 00:51:59.610
You can pick using the different sliders
and color wheel that you're used to

00:51:59.610 --> 00:52:04.860
in Cocoa and the color for the shadow
also supports alpha transparency.

00:52:06.950 --> 00:52:09.340
Okay, so shadows are pretty cool.

00:52:09.490 --> 00:52:14.830
It's kind of like underlighting
on your low-rider car.

00:52:14.900 --> 00:52:19.680
I think the thing that everyone's
really going to dig here are the

00:52:19.680 --> 00:52:21.240
animation and transition effects.

00:52:21.240 --> 00:52:23.140
So what can I animate?

00:52:23.140 --> 00:52:27.100
You can animate any
NSView or subclass thereof.

00:52:28.900 --> 00:52:33.550
So there are three sort of events
that can trigger an animation

00:52:33.560 --> 00:52:35.500
as we're supporting it in IB.

00:52:35.500 --> 00:52:40.260
And those are the view ordering in,
so when the view comes on screen,

00:52:40.260 --> 00:52:43.760
when the view orders out,
or when it leaves the screen,

00:52:43.760 --> 00:52:49.040
or when the subview tree
of a given view changes.

00:52:49.040 --> 00:52:52.840
If you want to do more
with the animations,

00:52:52.840 --> 00:52:58.420
please refer to the documentation
in NSView and in Core Animations.

00:52:58.620 --> 00:53:01.600
There's a lot more that you can
do with these animations and

00:53:01.600 --> 00:53:04.580
transitions than we're exposing,
so if you need to do more

00:53:04.580 --> 00:53:07.060
than we're providing,
please check out the API.

00:53:10.360 --> 00:53:14.630
So now we know when we animate,
how do we animate?

00:53:14.790 --> 00:53:21.710
So Core Animation provides four
basic transitions-- a fade in,

00:53:21.710 --> 00:53:28.330
which is sort of a dissolve; a move in,
which is a slide; a push; and a reveal.

00:53:28.390 --> 00:53:31.980
And if you'd like to write
your own custom animation,

00:53:31.980 --> 00:53:36.040
there's API available in the
Core Animations framework.

00:53:36.160 --> 00:53:39.580
And the other kind of transition that
you can take advantage of is using

00:53:39.860 --> 00:53:43.380
the Core Image Transition Filters.

00:53:43.430 --> 00:53:48.820
And for that,
you get a lot of really high-powered

00:53:48.820 --> 00:53:53.810
animation effects for relatively cheap.

00:53:55.380 --> 00:53:59.800
When you are setting up your animation,
you'll see the list provided.

00:53:59.800 --> 00:54:03.700
When you select custom,
you'll be using the Layer Kit or

00:54:03.700 --> 00:54:06.300
Core Animation provided transitions.

00:54:06.300 --> 00:54:10.350
And this list at the bottom is all
of the Core Animation transitions

00:54:10.350 --> 00:54:11.800
that are supported.

00:54:18.820 --> 00:54:19.740
Okay.

00:54:19.740 --> 00:54:23.640
Sorry, I don't know how that
demo slide snuck in there,

00:54:23.640 --> 00:54:25.180
but we're not quite
ready for the demo yet.

00:54:25.180 --> 00:54:27.230
There's one more thing I'd
like to talk about that

00:54:27.260 --> 00:54:32.620
Core Animation Support provides,
and that's filtering for your views.

00:54:34.240 --> 00:54:39.920
So you can apply a filter to, again,
any NSViewer at subclasses.

00:54:39.940 --> 00:54:44.120
And there are three kinds of filters
we support-- background filters,

00:54:44.210 --> 00:54:47.380
content filters,
and one special kind of filter,

00:54:47.410 --> 00:54:49.170
which is used for compositing.

00:54:51.120 --> 00:54:55.280
When you select from the pop-up what
kind of filter you'd like and hit add,

00:54:55.340 --> 00:55:02.240
you'll be presented with this
standard filter selection picker

00:55:02.350 --> 00:55:04.000
that's provided by Core Image.

00:55:04.000 --> 00:55:07.700
And you'll see a list of categories
of filters on the left and

00:55:07.700 --> 00:55:09.990
actual filter names on the right.

00:55:10.000 --> 00:55:13.560
And pick the filter you want.

00:55:15.770 --> 00:55:21.610
So the filters for background
and content are additive.

00:55:21.810 --> 00:55:24.940
So the filters can be
chained together in a list,

00:55:25.000 --> 00:55:27.840
and they're applied in the
order that you add them.

00:55:27.940 --> 00:55:30.960
So if you want to get multiple effects,
I want to do a sepia

00:55:30.960 --> 00:55:33.200
tone and a bloom filter.

00:55:33.200 --> 00:55:35.530
You can use as many filters as you want.

00:55:35.650 --> 00:55:40.770
Since compositing is a special operation,
there's only one compositing

00:55:41.310 --> 00:55:43.790
filter that you can use at a time.

00:55:50.520 --> 00:55:52.300
Someone reordered my slides.

00:55:52.300 --> 00:55:53.910
So can I get the demo machine, please?

00:55:53.960 --> 00:55:57.790
Because I want to show
off the animation support.

00:56:16.660 --> 00:56:22.240
Okay, so I've written a very simple

00:56:23.460 --> 00:56:28.280
: We're going to use the
Cocoa application to show off

00:56:28.470 --> 00:56:31.200
what you can do with zero code

00:56:34.000 --> 00:56:38.380
in IB3 to support core
animation and AppKit effects.

00:56:38.380 --> 00:56:40.300
So I'm going to go
ahead and run the demo.

00:56:40.300 --> 00:56:43.020
This is without any
effects turned on at all.

00:56:43.060 --> 00:56:48.740
And it failed.

00:56:48.800 --> 00:56:50.570
Thank you.

00:57:13.100 --> 00:57:39.400
[Transcript missing]

00:57:55.310 --> 00:58:00.740
All right.

00:58:00.740 --> 00:58:05.320
Nothing like extemporaneous onstage
debugging in front of 800 people and

00:58:05.690 --> 00:58:07.640
your manager to get your blood flowing.

00:58:15.740 --> 00:58:19.240
So I've got this really
simple Cocoa application,

00:58:19.250 --> 00:58:22.060
and all it has is an
image view and a button.

00:58:22.060 --> 00:58:27.850
And when I hit the toggle button, hey,
it's ordering that view in and out

00:58:27.890 --> 00:58:31.980
of the content view of the window.

00:58:31.980 --> 00:58:33.500
Super.

00:58:33.500 --> 00:58:34.300
Not very spicy.

00:58:35.960 --> 00:58:38.020
I think we can do better.

00:58:38.020 --> 00:58:42.610
So I'm going to go ahead
and open the window up and

00:58:43.070 --> 00:58:47.760
To reiterate the point earlier,
you can do all the work in the world on

00:58:47.760 --> 00:58:55.540
setting up fancy filters and transitions
and whatnot if you forget to turn on

00:58:56.900 --> 00:58:59.600
The Once Layer support,
it will be all for naught

00:58:59.600 --> 00:59:01.180
and you will see nothing.

00:59:01.180 --> 00:59:05.610
So I'm going to go ahead and turn on
Once Layer for the content view of

00:59:05.610 --> 00:59:10.540
this window because we're going to
do some core animation support in all

00:59:10.540 --> 00:59:13.470
the different elements in this window.

00:59:15.610 --> 00:59:19.830
So let's talk about rotation.

00:59:19.840 --> 00:59:23.340
I'm going to bring up
the Animations Inspector.

00:59:23.470 --> 00:59:24.560
It's Command-5.

00:59:24.600 --> 00:59:28.840
It's the fifth section of the Inspector.

00:59:28.970 --> 00:59:33.900
And I'm going to go ahead and
rotate this button 180 degrees.

00:59:34.230 --> 00:59:36.850
So, woo, upside down.

00:59:36.880 --> 00:59:39.490
And I'm going to go ahead and
set its alpha transparency to

00:59:39.550 --> 00:59:45.540
50%. And we can see that now it's
upside down and semi-transparent.

00:59:45.560 --> 00:59:48.300
That's cool.

00:59:48.400 --> 00:59:51.410
Let's add a custom shadow.

00:59:52.160 --> 00:59:57.730
A little bit to the right,
a little bit to the bottom.

00:59:58.050 --> 01:00:01.340
And the blur radius of
four is pretty cool.

01:00:01.450 --> 01:00:05.480
So if you look, that's very, very sharp.

01:00:06.310 --> 01:00:10.860
That's so ridiculously diffusely
blurry that you can't see it anymore.

01:00:10.860 --> 01:00:13.880
So four is pretty reasonable.

01:00:16.900 --> 01:00:19.720
A little bit fuzzy, but not so much.

01:00:19.770 --> 01:00:21.490
And I'm going to pick a color.

01:00:21.530 --> 01:00:22.740
Someone shout out a color.

01:00:22.740 --> 01:00:24.620
Purple.

01:00:24.690 --> 01:00:26.370
Thank you.

01:00:35.640 --> 01:00:37.600
Is that pink?

01:00:37.600 --> 01:00:42.190
I'm, like most men, color blind,
so is that purple?

01:00:42.560 --> 01:00:44.040
Is that purple?

01:00:44.040 --> 01:00:46.500
That's purple.

01:00:46.600 --> 01:00:50.750
So one of the cool things
to note here is like,

01:00:50.950 --> 01:00:53.100
The core animation support is live.

01:00:53.100 --> 01:00:54.100
It's really happening.

01:00:54.200 --> 01:00:59.660
It really drew my shadow there and
it's really applying all the effects.

01:01:00.550 --> 01:01:02.750
So great, that nib looks super.

01:01:02.830 --> 01:01:04.640
Let's go ahead and build and run that.

01:01:04.690 --> 01:01:07.180
Again, I'm going to use the
IBM Xcode integration,

01:01:07.180 --> 01:01:09.760
because both the nib and
the project are open.

01:01:09.760 --> 01:01:12.210
So I'm going to hit Command-Shift-R.

01:01:14.020 --> 01:01:20.270
There's my upside down, semi-transparent,
custom shadowed button.

01:01:22.420 --> 01:01:25.510
And it still works.

01:01:25.580 --> 01:01:27.110
So still not enough.

01:01:27.220 --> 01:01:29.660
Not over the top, not outrageous enough.

01:01:29.820 --> 01:01:31.870
I think we can do more.

01:01:31.980 --> 01:01:34.000
So I'm going to go back to IB.

01:01:34.160 --> 01:01:37.550
And I want to use a custom
filter on that image.

01:01:37.580 --> 01:01:41.480
It was cool,
but I think we can make it sharper.

01:01:41.510 --> 01:01:44.670
So I want to set a content
filter on that image.

01:01:45.480 --> 01:01:49.580
And for whatever reason,
the London Underground is now in

01:01:49.580 --> 01:01:52.640
the Witness Protection Program,
so we need to blur its face.

01:01:52.640 --> 01:01:56.740
So I'm going to provide a Gaussian blur,
and you'll notice there's a

01:01:56.740 --> 01:02:01.160
preview here that shows you what's
going to happen to your image

01:02:01.160 --> 01:02:04.400
as you change the filter effect.

01:02:04.400 --> 01:02:08.310
So I'm going to go ahead
and Gaussian blur that.

01:02:08.810 --> 01:02:14.600
See that filter also applied
immediately and everything

01:02:14.600 --> 01:02:17.180
got a little bit more blurry.

01:02:17.820 --> 01:02:21.950
Okay, so I want to, we're ordering this
view on and off screen,

01:02:21.950 --> 01:02:23.880
so I want to add a
transition to that as well.

01:02:24.050 --> 01:02:26.790
So I'm going to change
the order in transition,

01:02:26.790 --> 01:02:29.800
and I'm going to use one of the built-in
ones provided by Core Animation.

01:02:29.800 --> 01:02:32.960
So I'm going to select order in.

01:02:34.020 --> 01:02:36.640
And I'm going to have
a move-in transition.

01:02:36.640 --> 01:02:39.040
And I'd like it to
move in from the right.

01:02:39.040 --> 01:02:42.000
And these two sliders here,
Start Progress and End Progress,

01:02:42.000 --> 01:02:45.710
are how far into the animation should

01:02:45.700 --> 01:02:49.380
Should the animation start
and how long should it run?

01:02:49.550 --> 01:02:52.000
So I want it to run the entire duration.

01:02:52.000 --> 01:02:54.420
So I'm going to set the start
all the way to the left,

01:02:54.420 --> 01:02:58.500
saying the beginning and the end
should run the full duration.

01:02:58.510 --> 01:03:01.050
So move it all the way to the right.

01:03:01.390 --> 01:03:03.290
Done setting that up.

01:03:03.330 --> 01:03:03.960
So cool.

01:03:04.270 --> 01:03:04.840
That's great.

01:03:04.840 --> 01:03:10.090
I want to show off what the
subviews transition does.

01:03:11.860 --> 01:03:15.180
I'm going to go ahead and use a
core image transition on that.

01:03:15.240 --> 01:03:18.620
So I'm going to use the
rotating cube transition.

01:03:18.620 --> 01:03:22.480
And when you pick these transitions
and when you pick the filters,

01:03:22.480 --> 01:03:27.820
you saw when I picked the filter it
brought up a configuration dialog.

01:03:27.820 --> 01:03:31.420
If at any time you need to go back and
edit the parameters to these filters,

01:03:31.420 --> 01:03:34.920
there's an edit button off to
the right or down below the

01:03:34.920 --> 01:03:36.340
table view for the filters.

01:03:36.340 --> 01:03:40.560
Select that and you can change
the properties on the transition.

01:03:40.890 --> 01:03:43.350
They're all given reasonable
defaults to begin with.

01:03:43.460 --> 01:03:48.390
So if you don't know what you're doing
with the transition or you just want

01:03:48.400 --> 01:03:52.820
to go with what comes out of the box,
it's already pre-configured for you.

01:03:52.820 --> 01:03:55.820
So I'm going to stick with the
custom transitions that are there.

01:03:55.820 --> 01:03:59.840
And I want to give this UI a little
bit of an antique look and feel.

01:03:59.840 --> 01:04:03.950
So I'm going to apply a content
filter to the entire window as well.

01:04:03.960 --> 01:04:07.630
So I'm going to go ahead and...

01:04:10.750 --> 01:04:12.820
Pick a color effect.

01:04:12.870 --> 01:04:18.180
And I'd like to sepia tone everything
so it looks a little bit old school.

01:04:18.580 --> 01:04:19.690
Hit OK.

01:04:19.850 --> 01:04:23.710
And you see the core image
filter applied immediately.

01:04:23.760 --> 01:04:25.340
So I'm going to go
ahead and save this nib.

01:04:25.400 --> 01:04:27.680
Again, Command-Shift-R.

01:04:27.680 --> 01:04:30.140
Build and run the application.

01:04:30.470 --> 01:04:34.850
And you see the sepia tone
filter is applying to the entire

01:04:34.850 --> 01:04:37.040
content view of the window.

01:04:37.040 --> 01:04:41.560
The image view before where it was
sharp has now been Gaussian blurred.

01:04:41.560 --> 01:04:47.720
The button is still alpha transparent,
has a custom shadow.

01:04:47.720 --> 01:04:50.230
And now for the transition effects.

01:04:51.300 --> 01:04:57.110
So what's going on there is that as
the image view is ordered in and out

01:04:57.290 --> 01:05:02.040
of the content view of the window,
its subview tree is changing.

01:05:02.040 --> 01:05:06.760
And we've said when the subview
tree of the window changes,

01:05:06.760 --> 01:05:10.730
it should change using
this transition effect.

01:05:10.800 --> 01:05:15.060
So move things out, move things in,
and you get the transition effect.

01:05:15.130 --> 01:05:17.920
That concludes my demo.

01:05:34.600 --> 01:05:36.600
Can you go back to the slides?

01:05:37.290 --> 01:05:38.160
Excellent.

01:05:38.160 --> 01:05:41.100
So just to wrap things up,
what did we talk about today?

01:05:41.100 --> 01:05:44.530
We talked about a bunch
of new features in IB3.

01:05:44.530 --> 01:05:48.600
We talked about the new library that
contains all the user interface elements,

01:05:48.700 --> 01:05:51.270
setting up custom groups in the library.

01:05:51.270 --> 01:05:55.800
There's a session tomorrow morning
at 9 by another one of the Interface

01:05:55.820 --> 01:06:00.360
Builder engineers on integrating
your custom controls into IB3.

01:06:00.360 --> 01:06:02.180
I'm sorry, Friday.

01:06:02.180 --> 01:06:03.960
I'm being reminded.

01:06:03.960 --> 01:06:04.580
Friday morning at 9.

01:06:04.600 --> 01:06:07.230
We talked about the new connections HUD.

01:06:07.230 --> 01:06:09.950
We talked about the
redesigned inspectors,

01:06:10.020 --> 01:06:12.310
the slices, how they're laid out.

01:06:12.310 --> 01:06:16.930
Talked about some of the new controls
that we've integrated from the app kit.

01:06:16.930 --> 01:06:19.490
And we talked about
core animation support.

01:06:19.490 --> 01:06:23.660
Okay, so IB3.

01:06:25.860 --> 01:06:28.070
It's the new hotness.

01:06:28.170 --> 01:06:29.560
It's on your desk.

01:06:29.640 --> 01:06:30.720
We hope you all use it.

01:06:30.790 --> 01:06:33.140
Where it breaks, we hope you file bugs.

01:06:33.140 --> 01:06:37.000
That's the way we...

01:06:37.590 --> 01:06:38.800
make things better.

01:06:38.870 --> 01:06:41.530
That's the way we hear your feedback.

01:06:41.590 --> 01:06:45.720
If you aren't ready to move to IB3 yet,
there are actually two interface

01:06:45.720 --> 01:06:47.850
builders on your Leopard disk today.

01:06:47.970 --> 01:06:51.300
There's Interface Builder,
which is Interface Builder 3,

01:06:51.360 --> 01:06:54.310
and there's Interface Builder Tiger for
people who aren't quite ready to

01:06:54.310 --> 01:07:00.140
move forward to the new IB3 yet and
want to start working with Leopard.

01:07:00.220 --> 01:07:05.330
So they're both there,
hopefully by the time we GM.

01:07:06.170 --> 01:07:09.400
We'll have a great IB3 ready to go.

01:07:09.530 --> 01:07:16.340
So I would like to invite up the Matts
and the Johns and the Kelly for QA.

01:07:16.340 --> 01:07:19.470
And please,
if you have more questions we can't get

01:07:19.540 --> 01:07:23.610
to today or you need more information,
contact Matthew Formica.

01:07:23.710 --> 01:07:26.890
He's our developer tools
software evangelist.