WEBVTT

00:00:22.810 --> 00:00:23.770
Good morning everybody.

00:00:23.870 --> 00:00:26.330
Welcome to Mac OS X in
Scientific Computing.

00:00:26.500 --> 00:00:29.780
For those of you that I haven't met,
I think there's quite a few of you,

00:00:29.930 --> 00:00:32.880
my name is Liz Kerr and I head
up the Marketing Group for

00:00:32.880 --> 00:00:34.180
Science and Technology at Apple.

00:00:34.180 --> 00:00:38.580
This is my third developer conference and
I have to say I'm thrilled to be here.

00:00:38.580 --> 00:00:42.980
The momentum that we've seen over
the past few years in this market

00:00:43.040 --> 00:00:47.510
is tremendous and it's really very
much tied to the scientific apps

00:00:47.510 --> 00:00:50.200
that you all bring to the platform.

00:00:51.040 --> 00:00:54.360
So I'm going to spend a few minutes
to kick off this morning's session to

00:00:54.360 --> 00:00:58.650
talk a little bit about that momentum
and also to talk about how my team

00:00:58.740 --> 00:01:03.900
is working to keep that going both
as a team and with our developers,

00:01:03.950 --> 00:01:05.330
with you guys.

00:01:06.590 --> 00:01:09.900
So the first thing I want to talk
about is just some interesting trends

00:01:09.900 --> 00:01:15.870
we've seen in the growth of the
science markets in three main areas.

00:01:15.890 --> 00:01:19.830
And this is really being driven
by new applications and better

00:01:19.830 --> 00:01:22.420
applications in all of these areas.

00:01:22.470 --> 00:01:26.010
In things like medical imaging
with programs like OSIRICS that

00:01:26.020 --> 00:01:30.180
keeps getting better,
and new developers coming to the platform

00:01:30.180 --> 00:01:32.660
like a group called Calgary Scientific.

00:01:32.700 --> 00:01:36.670
And we even found out this year
we have a medical image storage

00:01:36.750 --> 00:01:39.940
system that's FDA approved
that has come to the platform.

00:01:39.940 --> 00:01:42.780
Really exciting stuff in medicine.

00:01:42.880 --> 00:01:46.270
And engineering programs like
LS Dyna finally coming to Mac OS X.

00:01:46.490 --> 00:01:50.890
Huge, huge benefit to our customer base
and a real good opportunity for us

00:01:50.950 --> 00:01:53.940
to expand into these different areas.

00:01:54.010 --> 00:01:58.470
And then in chemistry with programs
like Vita from OpenEye that brings

00:01:58.550 --> 00:02:02.060
a three dimensional element and
just beautiful graphics to the

00:02:02.060 --> 00:02:07.740
platform to expand what we have to
offer for our chemistry customers.

00:02:09.980 --> 00:02:14.290
One of the things that has been so
exciting to see from an Apple perspective

00:02:14.290 --> 00:02:18.990
is just how fast our science
developers switched to UB apps and

00:02:18.990 --> 00:02:20.930
provided those out to the community.

00:02:20.940 --> 00:02:24.900
Really faster than any other
sub-market area that we saw.

00:02:24.900 --> 00:02:28.250
This is just a graphic to show,
we're obviously not all

00:02:28.250 --> 00:02:30.860
the way to February yet,
but looking at the top 100

00:02:31.100 --> 00:02:35.900
scientific applications,
just how quickly those came over.

00:02:35.900 --> 00:02:38.880
I mean it seemed like we had
at least a handful even when we

00:02:38.880 --> 00:02:40.900
announced the Intel processors.

00:02:40.900 --> 00:02:41.860
It was fantastic.

00:02:41.950 --> 00:02:44.140
So this is something that
we're thrilled about,

00:02:44.140 --> 00:02:48.240
you guys should be extremely proud of,
and it's just a real testament to how

00:02:48.830 --> 00:02:53.050
dedicated you are to providing the
science customers with the latest and

00:02:53.050 --> 00:02:54.900
greatest versions of your applications.

00:02:54.900 --> 00:02:57.380
take advantage of our technology.

00:02:58.400 --> 00:03:01.210
This is a little bit of a digression,
but one of the things we

00:03:01.210 --> 00:03:04.140
always get asked about,
especially from our scientific

00:03:04.480 --> 00:03:07.160
computing customers and developers,
is Fortran compilers.

00:03:07.160 --> 00:03:10.730
So I wanted to spend a minute and
talk about the Intel Fortran compiler

00:03:10.730 --> 00:03:12.900
that's available for Mac OS X.

00:03:12.900 --> 00:03:16.100
This, of course,
supports the Core Duo processors.

00:03:16.100 --> 00:03:19.070
It's got an auto-vectorization feature,
which is new,

00:03:19.070 --> 00:03:21.450
not something you could use for PowerPC.

00:03:22.940 --> 00:03:26.860
There is whole application
optimization with the

00:03:26.860 --> 00:03:28.640
inter-procedural optimization feature.

00:03:28.640 --> 00:03:33.260
And then if you have an
appropriate training workload,

00:03:33.260 --> 00:03:38.300
you can also get further
optimization from your app with

00:03:38.520 --> 00:03:39.960
profile-guided optimization.

00:03:39.960 --> 00:03:42.600
Now this is called the
Professional Edition,

00:03:42.600 --> 00:03:47.270
and there will be special pricing for
the Fortran compilers through December,

00:03:47.280 --> 00:03:48.220
so through the end of the year.

00:03:48.220 --> 00:03:51.340
So something to speak to the
Intel folks about if you're interested.

00:03:53.570 --> 00:03:55.860
So a little bit about
what we've been doing,

00:03:55.860 --> 00:03:59.420
my team and partnered with our
developers in this past year.

00:03:59.420 --> 00:04:02.360
And just to tell you a few
ways that we've been working

00:04:02.680 --> 00:04:04.260
with the developer community.

00:04:04.260 --> 00:04:07.980
The first thing I want to talk about
is just our conferences and trade shows

00:04:07.980 --> 00:04:13.020
because we really do mostly partner with
developers to show complete solutions

00:04:13.060 --> 00:04:16.670
on the platform because that's what our
customers are very much interested in.

00:04:16.720 --> 00:04:21.300
So at national level conferences like
Society for Neuroscience as an example.

00:04:21.300 --> 00:04:23.130
But we're also doing smaller things.

00:04:23.220 --> 00:04:26.810
Regional shows,
we did a show called BioCom which is a

00:04:26.890 --> 00:04:31.810
small biotech show in the San Diego area
which was really fun and a great

00:04:31.840 --> 00:04:35.650
way for us to get the message out
about the Apple platform and the

00:04:35.710 --> 00:04:38.260
solutions available on the platform.

00:04:38.260 --> 00:04:40.920
And then even to the
level of users groups.

00:04:40.920 --> 00:04:44.860
So a lot of you probably have
users groups for your customers.

00:04:44.860 --> 00:04:48.860
And just to let you know that we're...
We're always interested in playing

00:04:48.860 --> 00:04:50.960
a role here if it's appropriate.

00:04:50.960 --> 00:04:54.810
And this is just an example we did,
participated in the OpenEye

00:04:54.810 --> 00:04:56.470
user group this year.

00:04:57.780 --> 00:05:01.310
So for those of you that
visit apple.com/science,

00:05:01.360 --> 00:05:04.540
and I hope all of you
do on a regular basis,

00:05:04.540 --> 00:05:09.140
this is really the heart and soul
of the science marketing group.

00:05:09.220 --> 00:05:12.700
And we have a new web page
that launched yesterday,

00:05:12.700 --> 00:05:17.940
a new look and feel to the home page and
some new sections of apple.com/science.

00:05:17.940 --> 00:05:22.820
And the message here really is just that
we're wanting things to be a bit lively

00:05:22.820 --> 00:05:26.820
or a better place for your customers
and our customers to learn more about

00:05:26.820 --> 00:05:28.340
what's available on the platform.

00:05:28.370 --> 00:05:31.500
But also a new focus,
this is the home page,

00:05:31.670 --> 00:05:33.370
on science solutions.

00:05:33.400 --> 00:05:37.440
And this is really critical for us
to have the right applications on

00:05:37.440 --> 00:05:41.540
Mac OS X and really highlight the way
that the technology comes together

00:05:41.540 --> 00:05:45.820
with the applications to provide
customers with a real workhorse

00:05:45.820 --> 00:05:47.530
for them in the lab or in the lab.

00:05:47.550 --> 00:05:48.270
And this is really critical for us
to have the right applications on

00:05:48.270 --> 00:05:49.080
Mac OS X and really highlight the way
that the technology comes together

00:05:49.080 --> 00:05:51.540
with the applications in their office.

00:05:51.540 --> 00:05:53.540
So this is just a screenshot
of the new solutions page.

00:05:53.540 --> 00:05:55.540
And you'll see this evolve over time as
we get really nice things come together

00:05:55.540 --> 00:05:55.540
that we can highlight on this page.

00:05:55.540 --> 00:05:56.810
And each of these, of course,
will have its own sub page

00:05:56.810 --> 00:05:57.540
with much more detail.

00:05:57.540 --> 00:06:01.520
And each of these, of course,
will have its own sub page

00:06:01.520 --> 00:06:03.420
with much more detail.

00:06:03.670 --> 00:06:07.190
The other thing that we do fairly
often with developers is we highlight

00:06:07.530 --> 00:06:09.440
new applications to the platform.

00:06:09.440 --> 00:06:12.700
And this is an example with
Bitplane coming to the platform.

00:06:12.700 --> 00:06:16.170
And again, this is a rework of this page,
so it pops out a little bit

00:06:16.210 --> 00:06:19.090
more if you're brand new and
we can highlight you here.

00:06:19.420 --> 00:06:24.150
But it's a great way for us to help you
get the word out and have some marketing

00:06:24.150 --> 00:06:31.200
weight behind a launch on Mac OS X or
an improvement or whatever it is.

00:06:31.570 --> 00:06:33.890
The other thing that we do are profiles.

00:06:33.890 --> 00:06:34.730
You've probably seen these.

00:06:34.760 --> 00:06:38.280
We do a lot of them focused on customers,
but we also do them occasionally

00:06:38.280 --> 00:06:39.380
focused on developers.

00:06:39.380 --> 00:06:42.890
This is a group called Thrust
Belt Imaging that we recently

00:06:42.890 --> 00:06:44.680
published on our website.

00:06:44.680 --> 00:06:47.380
Fantastic story about
this group of developers.

00:06:47.380 --> 00:06:50.970
I would encourage you,
if you feel like you have a compelling

00:06:50.970 --> 00:06:55.260
story or if you have a customer that's
using your application in a cool way

00:06:55.260 --> 00:06:58.330
that you think would be a good story,
please let us know.

00:06:58.490 --> 00:07:01.010
We'd be happy to consider it,
and we're always looking for

00:07:01.150 --> 00:07:03.960
great profiles and stories,
both from a developer perspective

00:07:03.960 --> 00:07:06.390
and a customer perspective,
or a combination of both.

00:07:06.540 --> 00:07:07.480
So please let us know.

00:07:10.120 --> 00:07:13.060
For those of you that forgot,
there's something called

00:07:13.170 --> 00:07:14.000
the Mac Products Guide.

00:07:14.000 --> 00:07:16.030
And this is just to remind
you that it's still here.

00:07:16.180 --> 00:07:18.500
It's still a great
resource for our end users.

00:07:18.500 --> 00:07:21.430
They go here all the time
to learn what's on Mac OS X.

00:07:21.560 --> 00:07:25.790
If you don't have an updated profile or a
profile at all on the Mac Products Guide,

00:07:25.880 --> 00:07:29.780
this is an end user,
you put your own information

00:07:29.780 --> 00:07:30.790
into the Products Guide.

00:07:30.860 --> 00:07:33.910
So I encourage you all to do this
if you haven't or you haven't

00:07:33.920 --> 00:07:35.600
looked at your entry in a long time.

00:07:35.850 --> 00:07:38.600
Keep it fresh because
this is where people look.

00:07:40.080 --> 00:07:44.060
So another thing that we do
on a periodic basis is we send

00:07:44.060 --> 00:07:47.160
emails out to our customer base.

00:07:47.160 --> 00:07:51.520
And in many cases that's hundreds
of thousands of people that

00:07:51.520 --> 00:07:52.800
could get this communication.

00:07:52.800 --> 00:07:55.620
And we've been doing some
of these with a focus on,

00:07:55.620 --> 00:07:58.660
again,
product launches from our developers.

00:07:58.660 --> 00:08:02.000
This one is a product called
Array Assist from Strategene.

00:08:02.000 --> 00:08:04.410
And it's a great solution
for our customers,

00:08:04.410 --> 00:08:06.260
so we wanted to highlight this.

00:08:06.320 --> 00:08:09.700
So this is just another example
of how we try to really work

00:08:09.700 --> 00:08:15.800
with you to kind of boost up the
message of Apple and our solutions.

00:08:16.150 --> 00:08:19.050
I wanted to mention some community
resources just for those of

00:08:19.100 --> 00:08:20.400
you that aren't aware of them.

00:08:20.400 --> 00:08:22.480
I think most of you probably are by now.

00:08:22.590 --> 00:08:26.200
But there's some great
organizations that are,

00:08:26.360 --> 00:08:29.310
the first two are independent of
Apple but we work very closely with them.

00:08:29.310 --> 00:08:32.160
Macresearch.org and Macenterprise.org.

00:08:32.160 --> 00:08:36.890
These both have websites and communities
and are great forums for discussion,

00:08:36.890 --> 00:08:41.070
product reviews, product discussions,
lots of information that's

00:08:41.070 --> 00:08:45.260
completely independent of Apple so
there's no editorial from us.

00:08:45.280 --> 00:08:47.460
So it's a nice community,
these are both really

00:08:47.460 --> 00:08:48.720
nice community forums.

00:08:48.740 --> 00:08:51.300
There's also the
Apple Developer Connection and this

00:08:51.300 --> 00:08:54.450
is probably a resource you're really
familiar with but I encourage you to

00:08:54.570 --> 00:08:57.880
review that occasionally because there's
lots of new information that gets posted

00:08:57.880 --> 00:09:00.890
there that could be quite useful for you.

00:09:01.410 --> 00:09:04.240
So with that,
I'm going to turn it over to Bud Tribble,

00:09:04.240 --> 00:09:07.720
who's our VP of Software Technology,
and we're excited to have him here.

00:09:07.740 --> 00:09:09.420
Thanks, Bud.

00:09:14.300 --> 00:09:20.400
[Transcript missing]

00:09:20.890 --> 00:09:26.650
What I'd like to do is talk about
Mac and the sciences and start

00:09:26.650 --> 00:09:31.560
out with spotlighting some trends
that we see going on and I'm sure

00:09:31.560 --> 00:09:33.800
all of you see going on as well.

00:09:33.880 --> 00:09:36.800
Science to me is one of
our more fun markets.

00:09:36.800 --> 00:09:39.180
We like to,
you hear a lot about Mac being

00:09:39.180 --> 00:09:40.800
in the creative markets.

00:09:40.800 --> 00:09:43.920
To me I like to think of the
science market as being the

00:09:43.920 --> 00:09:45.800
most creative market we're in.

00:09:45.800 --> 00:09:51.800
There's a lot of change going on
right now in the scientific market.

00:09:51.800 --> 00:09:55.350
I'd like to go through what
are the things that are driving

00:09:55.670 --> 00:09:57.030
that and illustrate that.

00:09:57.030 --> 00:10:00.800
We have a few customers here to
illustrate some of these points.

00:10:01.080 --> 00:10:06.090
First one is data sensor proliferation.

00:10:06.090 --> 00:10:10.420
And this is leading to an
explosion of data which we'll

00:10:10.450 --> 00:10:12.800
get into in the next section.

00:10:12.800 --> 00:10:14.800
But really what's happening is
that sensors are going to be the

00:10:14.800 --> 00:10:14.800
most important part of the data.

00:10:14.850 --> 00:10:18.940
And what's happening is that
sensors are becoming cheap,

00:10:18.970 --> 00:10:22.800
small, ubiquitous,
networked with mesh networks.

00:10:22.800 --> 00:10:24.800
There's a torrent of data
coming in from these.

00:10:24.800 --> 00:10:28.720
Now this will be everything from
large projects that generate in

00:10:28.930 --> 00:10:30.800
and of themselves torrents of data.

00:10:30.870 --> 00:10:35.800
Like the synoptic sky survey
generating petabytes per year.

00:10:35.800 --> 00:10:39.420
You're going to hear about
the Large Hadron Collider at

00:10:39.420 --> 00:10:43.800
CERN that again is a petabytes
per year generation of data.

00:10:43.960 --> 00:10:48.800
These are pouring into disk
drives and pouring into databases.

00:10:48.800 --> 00:10:53.620
As that data gets analyzed,
it explodes yet again to keep

00:10:53.620 --> 00:10:55.800
around the analyzed data.

00:10:55.800 --> 00:11:03.680
All the way to small meshed networks
that are monitoring microclimates.

00:11:03.860 --> 00:11:07.690
Seismic monitoring is one example.

00:11:07.810 --> 00:11:11.690
The data is coming in
all sorts of diversity.

00:11:11.800 --> 00:11:15.750
The industry is settling in many cases
on standard formats for this data,

00:11:15.840 --> 00:11:18.800
open formats for this data.

00:11:18.800 --> 00:11:21.800
These sensors are out there.

00:11:21.800 --> 00:11:22.800
They're always on.

00:11:22.800 --> 00:11:24.790
They're pouring in data.

00:11:24.800 --> 00:11:26.780
They're supporting scientific research.

00:11:26.840 --> 00:11:29.800
But we have to put all
the data somewhere.

00:11:29.800 --> 00:11:33.800
Just right here in California,
under our noses, there's a 24/7,

00:11:33.800 --> 00:11:41.160
200 plus seismic stations monitoring,
pouring that data into companies

00:11:41.160 --> 00:11:47.800
and the government agencies that are
watching the earthquake activity,

00:11:47.800 --> 00:11:49.800
trying to predict the next earthquake.

00:11:50.040 --> 00:11:52.800
This is a tremendous amount
of data to deal with.

00:11:53.020 --> 00:11:56.680
Which brings us to the next issue,
which is data storage.

00:11:56.840 --> 00:11:59.070
As I mentioned,
some of these projects are

00:11:59.070 --> 00:12:00.800
generating petabytes per year.

00:12:00.800 --> 00:12:05.790
And it's actually stripping the ability,
as fast as we can build disk drives,

00:12:05.830 --> 00:12:08.790
it's stripping our
ability to store the data.

00:12:08.820 --> 00:12:14.850
The San Diego Supercomputer Center has
a project called Data Central,

00:12:14.900 --> 00:12:15.800
which they're very proud of.

00:12:15.800 --> 00:12:20.800
It has a petabyte of online storage
with about 10 times that much offline.

00:12:20.800 --> 00:12:23.800
But as you can see with
these large projects,

00:12:23.800 --> 00:12:26.800
and as you'll hear about
with these large projects,

00:12:26.800 --> 00:12:31.800
even that kind of a storage
facility is rapidly overflowed.

00:12:32.050 --> 00:12:37.390
There's a recent study in Nature that
made a determination that the amount of

00:12:37.410 --> 00:12:41.800
scientific data is doubling every year,
so you have an exponential growth curve.

00:12:41.800 --> 00:12:47.800
I actually think that's probably a
little underrepresented or underreported.

00:12:47.900 --> 00:12:51.860
If it was only doubling every year,
then actually our disk drives

00:12:51.860 --> 00:12:55.250
would be able to keep up with it,
because the storage capacity on

00:12:55.250 --> 00:12:58.780
disk drives is actually doubling
about every year for the same price.

00:12:58.800 --> 00:13:06.200
An extremely important thing for these
online repositories is that they're

00:13:06.200 --> 00:13:06.800
accessible by multiple scientists.

00:13:06.800 --> 00:13:14.140
So these many times are open repositories
that can support multiple research

00:13:14.140 --> 00:13:16.700
projects going on around the world.

00:13:16.800 --> 00:13:18.800
That's not always true.

00:13:18.800 --> 00:13:22.770
For example, in oil exploration,
these databases tend to be tightly held

00:13:22.780 --> 00:13:24.730
for reasons that are sort of obvious.

00:13:24.820 --> 00:13:27.650
But in many cases,
there are multiple research

00:13:27.650 --> 00:13:31.790
groups supported around the
world working on these data sets.

00:13:31.800 --> 00:13:35.800
There's an increasing use of storage
area network for these systems.

00:13:35.800 --> 00:13:42.800
And that is simply because really there's
no other way to manage these terabyte

00:13:42.800 --> 00:13:44.800
or petabyte class amounts of data.

00:13:44.800 --> 00:13:49.070
Just managing them as a flat
network file system is too much of a

00:13:49.070 --> 00:13:51.800
management burden really for anybody.

00:13:51.800 --> 00:13:57.800
And what SAN really brings to the story,
or projects like XSAN,

00:13:57.800 --> 00:14:00.650
products like XSAN,
is the ability to manage

00:14:00.650 --> 00:14:04.700
these huge data repositories.

00:14:05.490 --> 00:14:10.580
To illustrate this,
I'd like to invite Fons

00:14:10.620 --> 00:14:13.290
Rademaker from CERN.

00:14:13.290 --> 00:14:16.810
He works on the Large Hadron Collider
and he'll give you just a feeling

00:14:17.000 --> 00:14:22.400
for the amount of data that are being
generated and what they do with it.

00:14:22.400 --> 00:14:26.960
So Fons, thank you.

00:14:30.530 --> 00:14:32.780
Okay, good morning.

00:14:32.930 --> 00:14:36.840
Most of you probably have heard of
CERN as the place where the web was born.

00:14:37.000 --> 00:14:41.180
But actually we are doing, you know,
our core business is particle physics,

00:14:41.290 --> 00:14:44.460
pure research in high energy physics.

00:14:44.510 --> 00:14:49.370
So there's no direct commercial
offspring from this or goal of it.

00:14:49.580 --> 00:14:53.480
So our business is the bleeding edge
physics and to be able to achieve our

00:14:53.480 --> 00:14:56.090
goal we need bleeding edge computing.

00:14:56.610 --> 00:15:00.370
First of all the CERN Large Hadron
Collider is a machine that's been built

00:15:00.500 --> 00:15:05.650
since the last 10 years and hopefully
it will start in September 2007,

00:15:05.860 --> 00:15:09.650
producing its first collisions by
proton beams that collide on each other

00:15:09.730 --> 00:15:14.450
with a center of mass energy of 14 TeV,
which is by far the highest energy

00:15:14.460 --> 00:15:16.500
that any accelerator ever has achieved.

00:15:16.500 --> 00:15:23.830
The LHC is a 27 km circumference machine,
it's under the border between

00:15:23.830 --> 00:15:28.430
Switzerland and France in
a very nice location.

00:15:28.780 --> 00:15:31.580
So very convenient to work.

00:15:31.590 --> 00:15:37.220
It consists of at least some
1200 superconducting magnets,

00:15:37.220 --> 00:15:38.130
cryo-dipoles.

00:15:38.180 --> 00:15:41.300
Each dipole,
the whole system is filled with

00:15:41.300 --> 00:15:45.980
liquid helium and cooled to
almost absolute temperature.

00:15:46.090 --> 00:15:50.770
It generates a very high magnetic
field to keep the relatively

00:15:50.770 --> 00:15:53.330
heavy protons in the tight orbit.

00:15:55.310 --> 00:15:58.770
Of course to detect all the particles
that are being generated in the

00:15:58.770 --> 00:16:02.650
collisions we built humongous detectors,
very large detectors.

00:16:02.710 --> 00:16:07.620
There are four detectors being built at
the four different interaction regions.

00:16:07.690 --> 00:16:09.080
Two are called ATLAS and CMS.

00:16:09.220 --> 00:16:14.360
They are general purpose detectors
that will measure basically everything

00:16:15.170 --> 00:16:18.620
that happens in the collision and they
will be able to analyze and determine

00:16:18.620 --> 00:16:24.740
all kinds of new possible physics that
can happen in this region of energy.

00:16:24.780 --> 00:16:27.600
Then you have two other detectors,
ALIS and LHCb.

00:16:27.620 --> 00:16:33.220
They are more custom detectors for
measuring really specific physics events.

00:16:33.350 --> 00:16:38.750
And ALIS, the detector where I work for,
we also work with detecting

00:16:38.870 --> 00:16:40.580
heavy ion collisions.

00:16:40.730 --> 00:16:45.110
So one month per year the
LHC will run heavy ions and then

00:16:45.110 --> 00:16:50.780
you get a huge data stream of,
we will generate huge data streams.

00:16:51.930 --> 00:16:55.780
So to summarize,
the four detectors together will generate

00:16:55.780 --> 00:17:01.630
about 10 petabytes of data per year,
record 10 to the 10th events in total,

00:17:01.630 --> 00:17:07.260
and there will be about 4,000 or 5,000
physicists worldwide trying to analyze

00:17:07.260 --> 00:17:11.890
this 10 petabytes of data day and night.

00:17:12.650 --> 00:17:17.280
So, the LHC of course, the accelerator,
the beams circulate with

00:17:17.280 --> 00:17:20.530
almost the speed of light,
so you have about 40 million

00:17:20.530 --> 00:17:22.500
collisions per second happening.

00:17:22.500 --> 00:17:25.700
Of course nobody can record this
kind of amount of data streams.

00:17:25.820 --> 00:17:29.990
So the experiments after filtering,
we get about 100 interesting

00:17:29.990 --> 00:17:31.500
collisions per second.

00:17:31.500 --> 00:17:35.220
So depending on the detector,
the amount of data they measure,

00:17:35.220 --> 00:17:38.500
you measure from 1 to 12
megabytes per collision.

00:17:38.500 --> 00:17:41.430
And with that rate you can get up,
for the case of Alice,

00:17:41.430 --> 00:17:43.500
to 1.2 gigabytes per second.

00:17:43.500 --> 00:17:47.920
And that data rate will be sustained
for at least 24/7 for one month,

00:17:47.920 --> 00:17:50.500
after 1.2 gigabytes per second.

00:17:50.500 --> 00:17:53.690
And that's about a bit more than one
petabyte of data that you have to

00:17:53.690 --> 00:17:55.500
record in this one month of time.

00:17:57.040 --> 00:17:59.540
Like I said, 10 to the 10 collisions
will be registered,

00:17:59.570 --> 00:18:03.360
that will be about 10 petabytes,
and if you put it on conventional

00:18:03.360 --> 00:18:08.000
CDs you get a stack of about 20
km high generated in one year.

00:18:08.000 --> 00:18:10.960
And that for every year,
and the machine is planned to

00:18:10.960 --> 00:18:12.990
operate for the coming 15 years.

00:18:14.610 --> 00:18:16.620
So how do we are going
to analyze this data?

00:18:16.620 --> 00:18:18.970
Of course you cannot have a
single data center that will be

00:18:18.970 --> 00:18:20.360
able to process all this data.

00:18:20.370 --> 00:18:24.900
I mean there's no way that you
can even put them in one room.

00:18:24.900 --> 00:18:30.630
So what we are working on is,
okay also before you can

00:18:30.760 --> 00:18:36.520
put them all in one room,
you need worldwide collaboration.

00:18:36.520 --> 00:18:40.420
So nations don't want to invest the
money to put all the machines at CERN in

00:18:40.420 --> 00:18:42.340
one location to analyze the data there.

00:18:42.340 --> 00:18:45.330
So all the nations want to
prefer to build large clusters

00:18:45.340 --> 00:18:48.480
in their universities or
research centers where the local

00:18:48.480 --> 00:18:50.580
scientists will analyze the data.

00:18:50.580 --> 00:18:52.700
Of course also the
competences of the people,

00:18:52.710 --> 00:18:55.210
the system managers are
naturally distributed.

00:18:55.440 --> 00:18:59.660
And like I said, just at CERN there's not
enough real estate to house a

00:18:59.680 --> 00:19:01.730
computer center of that size.

00:19:02.540 --> 00:19:07.040
So all these computer centers,
they will be running,

00:19:07.040 --> 00:19:13.370
99% of them runs Linux for data
processing and the different levels,

00:19:13.400 --> 00:19:16.000
different versions of
Linux and different hardware.

00:19:16.000 --> 00:19:20.000
So it's a heterogeneous environment
where the software has to

00:19:20.000 --> 00:19:22.120
work on in reproducible ways.

00:19:22.180 --> 00:19:25.200
You cannot have physics that
runs one analysis in one site,

00:19:25.200 --> 00:19:28.730
turn different results when it runs
on a different site with different

00:19:28.800 --> 00:19:30.580
versions of the OS or compilers.

00:19:31.690 --> 00:19:35.100
So let's be well understood
and well maintained.

00:19:35.330 --> 00:19:39.530
To provide for the physicist an
environment where they can just submit

00:19:39.670 --> 00:19:44.020
the analysis jobs from a central
point and don't care where it runs.

00:19:44.020 --> 00:19:47.740
We have been working for a long
time on the concept of the grid,

00:19:47.740 --> 00:19:49.300
which has been very popular.

00:19:49.300 --> 00:19:52.780
You know,
people make everything as named grid,

00:19:52.810 --> 00:19:55.630
but the real idea behind the grid
is that you can run worldwide

00:19:56.200 --> 00:20:00.240
in a way that it looks like
you run in a local data center.

00:20:00.290 --> 00:20:06.300
And actually we will need grids of grids,
because for political and different

00:20:06.300 --> 00:20:08.420
reasons you don't have a single grid.

00:20:08.420 --> 00:20:12.160
I mean, people make the European grid
and US grid and Asian grid and

00:20:12.160 --> 00:20:13.890
they all have to work together.

00:20:14.150 --> 00:20:18.790
So for example we have the EEGE grid,
which is a European project that

00:20:18.790 --> 00:20:24.200
was funded by the European Union and
is now worldwide deployed.

00:20:24.290 --> 00:20:26.750
So this test setup,
because we don't have the real data yet,

00:20:26.750 --> 00:20:30.450
but this environment where we're testing,
we have 180 sites online,

00:20:30.450 --> 00:20:36.380
providing 15,000 CPUs at the moment,
and running 14,000 jobs per day.

00:20:36.500 --> 00:20:40.310
Considering that for the full
data analysis you will need about

00:20:40.360 --> 00:20:46.510
100,000 CPUs online and with 400,000
disks with the data ready on it.

00:20:47.500 --> 00:20:52.580
So how is Apple software being used
in this LHC computing environment?

00:20:52.610 --> 00:20:55.320
Of course, like I mentioned before,
all scientific computing is

00:20:55.350 --> 00:21:00.280
UNIX based and Mac OS X is a very
natural and very good fit there.

00:21:00.290 --> 00:21:05.100
People know immediately how
to use it coming from Linux.

00:21:05.110 --> 00:21:08.780
The big advantage of course is that on
this kind of machines we can run the

00:21:08.780 --> 00:21:12.480
presentation and office software at the
same time as the scientific software,

00:21:12.490 --> 00:21:16.720
which has been still lacking
a lot on systems like Linux.

00:21:17.400 --> 00:21:20.160
We have excellent development tools.

00:21:20.160 --> 00:21:23.250
You heard the talks about
Xcode and things like that.

00:21:23.300 --> 00:21:27.340
GCC compilers that we know and trust
because we use them on Linux too,

00:21:27.340 --> 00:21:31.490
and we know the results and
the quality of the code.

00:21:31.840 --> 00:21:36.460
For the Mac clusters we have,
we use of course the excellent

00:21:36.510 --> 00:21:39.510
cluster monitoring software,
which is quite ahead also compared

00:21:39.510 --> 00:21:43.070
to the open source software that
we find on the Linux environment.

00:21:43.080 --> 00:21:45.180
So it's a very nice environment.

00:21:45.200 --> 00:21:48.800
We found that the Intel compiler,
the C++ compiler,

00:21:49.250 --> 00:21:53.580
because all our code is purely C++
in the LHC computing environment,

00:21:53.620 --> 00:21:57.300
delivers up to 25% faster code than GCC.

00:21:57.300 --> 00:22:00.910
So this is very important because it's
almost a CPU generation that you gain

00:22:00.910 --> 00:22:04.140
by buying or getting this compiler.

00:22:04.310 --> 00:22:30.110
Edwin Schroeder, and Jens Stoltenberg.

00:22:30.190 --> 00:22:30.630
We are waiting for Valgrind,
which is an excellent

00:22:30.630 --> 00:22:30.630
memory leak detection tool.

00:22:30.630 --> 00:22:30.630
We are also having some problems
with the GDB in the C++ environment

00:22:30.630 --> 00:22:30.630
because it is not up to par.

00:22:30.630 --> 00:22:30.630
We are very happy that a company called
ATNOS released a TotalView debugger

00:22:30.630 --> 00:22:30.630
for Mac OS a few months ago,
which is an excellent debugger

00:22:30.630 --> 00:22:30.630
and it works perfectly.

00:22:31.240 --> 00:22:35.180
So the hardware that we can
use in the LEC environment,

00:22:35.180 --> 00:22:38.180
of course the move to
Intel was an enormous,

00:22:38.200 --> 00:22:41.980
you know, made Apple a candidate
to be used in our field.

00:22:42.030 --> 00:22:46.760
Because before we used some
PowerPC based machines,

00:22:46.760 --> 00:22:53.390
but they were just not fast enough for
the money that you could spend on it.

00:22:53.540 --> 00:22:56.950
So now with the MacBook Pros,
they are by far the most popular

00:22:56.950 --> 00:22:58.700
laptops that we use at CERN.

00:22:59.440 --> 00:23:02.530
We have, you know,
basically everybody gets one.

00:23:02.540 --> 00:23:07.640
We have powerful OpenGL based graphic
systems used for event display.

00:23:07.660 --> 00:23:12.710
So the very nice infrastructure and
the pipelines in the Apples help a lot.

00:23:12.780 --> 00:23:16.240
So in Alice we have, for example,
starting small,

00:23:16.240 --> 00:23:19.000
a small eight node cluster that
we have configured as a full

00:23:19.000 --> 00:23:21.660
member of one of the EGE grid.

00:23:21.810 --> 00:23:24.930
So it runs all the software which
is being delivered by the grid

00:23:24.940 --> 00:23:26.550
middleware from the central servers.

00:23:26.580 --> 00:23:29.300
And it's a full member
of the grid software.

00:23:29.490 --> 00:23:30.500
So it's a full member
of the grid environment.

00:23:30.610 --> 00:23:33.710
So the interesting thing is, of course,
that universities that see what

00:23:33.710 --> 00:23:37.030
we do at CERN can decide now to
buy an Apple based cluster because

00:23:37.130 --> 00:23:40.210
they know that all the software,
grid software, middleware that is needed

00:23:40.660 --> 00:23:42.840
runs on the Apple machines.

00:23:42.910 --> 00:23:45.120
And before that was not the case.

00:23:45.150 --> 00:23:52.140
And now the Intel based XSERVs have been
announced and we plan to make quite an

00:23:52.140 --> 00:23:56.490
extensive upgrade to these machines.

00:23:57.060 --> 00:24:00.360
So to summarize,
the LHC will generate data on a

00:24:00.360 --> 00:24:02.640
scale you have never seen before,
nobody has seen before.

00:24:02.640 --> 00:24:08.680
We will depend critically
on how the grid will work,

00:24:08.680 --> 00:24:12.160
and it has to work,
otherwise we are in big troubles.

00:24:12.160 --> 00:24:20.050
And Apple, with the move to Intel, opens,
you know, gives us a fantastic way

00:24:20.160 --> 00:24:23.640
to get into this business.

00:24:24.130 --> 00:24:28.360
And, you know, they can really approach
universities with,

00:24:28.370 --> 00:24:32.270
you know, to set up XServe clusters
for this kind of work.

00:24:32.280 --> 00:24:33.980
Okay, that is it.

00:24:44.140 --> 00:24:45.330
Thank you very much.

00:24:45.520 --> 00:24:50.110
So 10 petabytes per year
of data being generated.

00:24:50.150 --> 00:24:51.920
I did a quick calculation.

00:24:51.920 --> 00:24:58.240
I think we're probably shipping about
500 petabytes per year of iPod storage.

00:24:58.240 --> 00:25:03.350
So if everyone would just set aside
2% of their iPod space per year

00:25:03.430 --> 00:25:05.820
we could archive all your data.

00:25:07.430 --> 00:25:12.840
I'm not sure people would be willing
to give up 2% of their music though.

00:25:12.840 --> 00:25:14.040
Data visualization.

00:25:14.040 --> 00:25:17.020
Data visualization is
one of my favorite areas.

00:25:17.020 --> 00:25:22.910
It's very visual,
it's very innovative right now.

00:25:22.990 --> 00:25:27.920
Of course the trend here is driven by
these huge data sets that are being

00:25:27.920 --> 00:25:32.420
generated which ultimately come down
to something that a person wants to

00:25:32.440 --> 00:25:39.000
visualize and with a lot of data you end
up with very high resolution data sets.

00:25:39.000 --> 00:25:44.160
One of the latest things are display
walls and we're going to hear in detail

00:25:44.160 --> 00:25:47.740
about the hyper wall at UC Irvine.

00:25:47.740 --> 00:25:52.040
But these are very important in my
mind because you find that the human

00:25:52.490 --> 00:25:59.540
brain is actually very good at visual
data processing but when you're just

00:25:59.540 --> 00:26:04.470
focusing on a desktop you're actually
missing out on what we evolved to do

00:26:04.470 --> 00:26:09.710
over millions of years which is to take
in our entire environment by moving

00:26:09.710 --> 00:26:15.440
our head or walking around and these
large display walls really let you take

00:26:15.590 --> 00:26:20.770
advantage of that human processing power
in a way that's not been possible before.

00:26:20.930 --> 00:26:28.800
Of course stereo 3D is important as
well and we support that on Mac OS X.

00:26:29.160 --> 00:26:34.890
For the first time you can do
really high end visualization

00:26:34.940 --> 00:26:36.160
tasks on desktop machines.

00:26:36.160 --> 00:26:41.900
That is actually more than anything
being driven by the game industry

00:26:42.270 --> 00:26:47.600
and it's insatiable need for very
high end graphics processors.

00:26:47.600 --> 00:26:53.040
And with the new Pro line that you saw
that will be able to support extremely

00:26:53.040 --> 00:26:57.680
high end graphics processor and
coupled with an easy way to program it,

00:26:57.720 --> 00:26:58.600
I think that's going to
lead to a lot of new things.

00:26:58.600 --> 00:27:01.140
I think that's going to lead
to even more breakthroughs

00:27:01.140 --> 00:27:03.300
in scientific visualization.

00:27:03.320 --> 00:27:08.100
I think that if you look closely
you'll actually find that because of

00:27:08.100 --> 00:27:14.500
this pressure of the gaming industry
the abilities and the programmability

00:27:14.500 --> 00:27:20.120
of the GPU has actually outstripped
the scientific community's ability

00:27:20.120 --> 00:27:23.040
to take advantage of all that power.

00:27:23.040 --> 00:27:25.950
But I think with some of the
programming tools that we're making

00:27:25.950 --> 00:27:27.750
available on Mac OS X you're going
to find some really great things.

00:27:27.800 --> 00:27:29.100
And I think that's going to lead
to even more You're going to

00:27:29.100 --> 00:27:31.970
find some breakthroughs there.

00:27:33.880 --> 00:27:37.830
Graphics processing power has
actually been growing at a

00:27:37.870 --> 00:27:40.560
faster rate than CPU power.

00:27:40.560 --> 00:27:43.320
Maybe that's because they are
willing to run it hotter and put

00:27:43.320 --> 00:27:45.050
more fans on the graphics cards.

00:27:45.050 --> 00:27:50.050
But we're up to around 10 gigapixels
per second processing rate,

00:27:50.060 --> 00:27:55.400
which is, again,
much of the legacy visualization

00:27:55.530 --> 00:27:58.570
code does not realize this,
does not take advantage of it.

00:27:58.640 --> 00:28:02.540
But some of the newer visualization
applications coming along are

00:28:02.540 --> 00:28:07.350
jumping on this bandwagon of,
hey, I've got 10 million pixel process

00:28:07.440 --> 00:28:09.750
per second GPU sitting right here.

00:28:09.820 --> 00:28:14.610
What can I do with it to give
a very interactive scientific

00:28:14.610 --> 00:28:16.800
visualization experience?

00:28:17.340 --> 00:28:21.910
With that,
it's my great pleasure to introduce Dr.

00:28:21.910 --> 00:28:25.810
Falko Kuester, Department of Electrical
Engineering and Computer Science at

00:28:25.810 --> 00:28:29.110
University of California at Irvine,
and he's going to talk

00:28:29.190 --> 00:28:30.660
about the Hyperwall.

00:28:30.750 --> 00:28:32.490
Thanks a lot.

00:28:36.700 --> 00:28:39.550
So I'm going to talk about some of
the research challenges that we really

00:28:39.660 --> 00:28:43.600
face today when it comes to dealing
with massive scientific data sets.

00:28:43.750 --> 00:28:47.180
Now one of the things we just heard
over and over again is ever bigger

00:28:47.180 --> 00:28:50.280
scientific data sets are being
generated today through simulations,

00:28:50.290 --> 00:28:52.600
through acquisition, or a mix of the two.

00:28:52.620 --> 00:28:54.600
Now that's exciting,
it's a very good thing certainly, right?

00:28:54.600 --> 00:28:57.390
We get more detail and hopefully
we get more insight into particular

00:28:57.480 --> 00:28:58.600
phenomena we are studying.

00:28:58.620 --> 00:29:00.580
The question is how do we get there,
right?

00:29:00.650 --> 00:29:03.610
Just having the data doesn't help us,
we somehow need to visualize it,

00:29:03.610 --> 00:29:04.590
conceptualize it.

00:29:04.610 --> 00:29:06.610
So in the end,
we end up with a high resolution

00:29:07.150 --> 00:29:09.600
image that we somehow have to display,
right?

00:29:09.600 --> 00:29:11.710
Regardless of which
dimension the data set has,

00:29:11.710 --> 00:29:13.600
we need to display it
in 2D on our screen.

00:29:13.600 --> 00:29:16.600
So this could be one data set,
one set of, one particular parameter,

00:29:16.600 --> 00:29:20.600
or it could be a set of parameters,
a set of different images co-located

00:29:20.600 --> 00:29:22.600
that are visually being displayed.

00:29:22.610 --> 00:29:25.590
So the question is which one really
works better for what we are doing.

00:29:25.690 --> 00:29:28.490
In particular,
if you have to compare different data

00:29:28.490 --> 00:29:32.590
sets through some of the techniques
which work so well for the human,

00:29:32.600 --> 00:29:32.600
for visual data correlation.

00:29:32.700 --> 00:29:35.930
The question is then do we
use pattern recognition,

00:29:35.930 --> 00:29:38.740
being able to compare
things side by side,

00:29:38.740 --> 00:29:41.600
or do we use our temporal memory,
which we oftenly do today.

00:29:41.600 --> 00:29:45.480
We use that, look at one image slice or
one parameter set at a time,

00:29:45.640 --> 00:29:47.890
then sequentially we go through
all of these data sets and try

00:29:47.930 --> 00:29:49.600
to composite that in our brain.

00:29:49.790 --> 00:29:51.600
Doctors do that a lot, right?

00:29:51.600 --> 00:29:53.590
It's not necessarily
the best way to do this.

00:29:53.600 --> 00:29:56.790
Now if we look at one sample data set,
that's a confocal microscopy scan

00:29:56.920 --> 00:29:59.260
that you see in the lower left corner,
of a red brain,

00:29:59.310 --> 00:30:00.590
very similar to the human brain.

00:30:00.600 --> 00:30:04.490
18,000 pixels by 17,000
pixels resolution,

00:30:04.840 --> 00:30:07.600
320 megapixels total for that image.

00:30:07.600 --> 00:30:09.600
Great thing, good, very good.

00:30:09.610 --> 00:30:12.600
Now we have to map that to state
of the art display devices.

00:30:12.600 --> 00:30:15.600
Let's say we pick a 30
inch cinematic display.

00:30:15.600 --> 00:30:21.540
We have to put 1,560 by 1,600 pixels
resolution for 4 megapixels total.

00:30:21.680 --> 00:30:23.600
Now that becomes interesting, right?

00:30:23.600 --> 00:30:26.600
320 megapixels to 4 megapixels.

00:30:26.600 --> 00:30:28.600
So we essentially look at 1/80 of
the information at any given time.

00:30:28.600 --> 00:30:31.600
Which means if you do
a 1:1 pixel mapping,

00:30:31.600 --> 00:30:35.520
we only see 1 out of 80
tiles at any given time.

00:30:35.670 --> 00:30:37.590
We don't get the bigger picture.

00:30:37.640 --> 00:30:41.060
Or if we sub-sample the information,
we throw away a lot of information

00:30:41.060 --> 00:30:42.600
that is really available to us.

00:30:42.600 --> 00:30:44.600
That's somewhat bad.

00:30:44.600 --> 00:30:47.780
What gets really ugly though is if
you deal with medical data and the

00:30:47.780 --> 00:30:50.600
information you're looking at is a
brain scan or a scan of your body,

00:30:50.610 --> 00:30:54.280
and what you're sub-sampling away is
the cancer seed cell which is going

00:30:54.280 --> 00:30:56.600
to kill you in a couple of years,
right?

00:30:56.600 --> 00:30:58.600
And the donor at C might
actually kill you in the end.

00:30:58.600 --> 00:31:00.600
So that's not good.

00:31:00.600 --> 00:31:01.600
So that's really ugly.

00:31:01.600 --> 00:31:03.580
So we have all the three key components.

00:31:03.650 --> 00:31:04.600
The good, the bad, the ugly.

00:31:04.600 --> 00:31:08.980
The question is how do we handle the bad
and how do we somewhat address the ugly,

00:31:08.980 --> 00:31:09.600
right?

00:31:09.630 --> 00:31:11.580
So let's see high-performance motivation.

00:31:11.600 --> 00:31:14.600
So high-performance, network-centric.

00:31:14.690 --> 00:31:18.460
That's why the IP is in the title
"Display Wall". And the objective

00:31:18.550 --> 00:31:22.480
really is to support visual analytics,
meaning analytical reasoning

00:31:22.480 --> 00:31:24.600
through interactive visualization.

00:31:24.630 --> 00:31:28.940
And to really do that for large
data sets in larger or with larger

00:31:28.940 --> 00:31:33.490
collaborative teams of researchers,
allowing you to look at multiple

00:31:33.490 --> 00:31:36.510
view parameters at any given time,
co-locate information,

00:31:36.930 --> 00:31:39.750
have a comparative view,
but do that in a form where we

00:31:39.750 --> 00:31:42.300
really have video streaming or
streaming capabilities in general

00:31:42.780 --> 00:31:45.440
from diverse sites across the globe.

00:31:45.600 --> 00:31:47.660
So there are a couple
of really interesting,

00:31:47.720 --> 00:31:51.660
exciting, enabling research areas,
many not fully answered,

00:31:51.660 --> 00:31:55.300
so there's much for all of us to do,
in regards to how do we handle images,

00:31:55.300 --> 00:31:56.550
video streams.

00:31:56.600 --> 00:31:58.600
How do we best move data around?

00:31:58.600 --> 00:31:59.600
How do we cache it?

00:31:59.600 --> 00:32:00.600
Where do we cache it?

00:32:00.600 --> 00:32:03.540
We can't replicate a petabyte
locally just to visualize it.

00:32:03.620 --> 00:32:07.600
If you want to look at one particular
subset of the data we just heard about,

00:32:07.600 --> 00:32:10.480
how do we visualize it in real time?

00:32:10.670 --> 00:32:12.600
How do we support parallel rendering?

00:32:12.600 --> 00:32:15.600
And in the end,
how do we put ourselves into that data?

00:32:15.600 --> 00:32:16.600
How do we interact with it?

00:32:16.600 --> 00:32:19.600
Just displaying it statically
doesn't help us much.

00:32:19.600 --> 00:32:20.600
We need to be able to really
manipulate our own forces.

00:32:20.600 --> 00:32:26.880
So the hardware front end we
built for this research as part

00:32:26.880 --> 00:32:29.600
of HyperWall is a 50 tile display.

00:32:29.600 --> 00:32:32.490
Downstairs you will see an 18 tile
version that you can play with.

00:32:32.600 --> 00:32:37.570
So 10 tiles wide, 5 tiles high,
50 tiles total.

00:32:37.640 --> 00:32:42.700
Each tile essentially has
4 megapixel resolution,

00:32:42.700 --> 00:32:46.590
which gives us 25,600 by 8,000
pixels overall to work with.

00:32:46.600 --> 00:32:49.030
Now let's put that in
today's gold standard,

00:32:49.300 --> 00:32:49.600
right?

00:32:49.600 --> 00:32:53.330
HD, high definition video, 1080.

00:32:53.680 --> 00:32:55.600
We have roughly 2 megapixels resolution,
right?

00:32:55.600 --> 00:32:59.600
So one half of one HyperWall
tile is high def video.

00:32:59.600 --> 00:33:01.970
Or in other words,
HD is 1% of the resolution

00:33:02.070 --> 00:33:03.600
that HyperWall gives us.

00:33:03.600 --> 00:33:05.600
Why do we do this?

00:33:05.600 --> 00:33:08.730
We're sort of trying to extrapolate
ahead where we're going to be a couple

00:33:08.730 --> 00:33:12.040
of years from now when we have organic
light emitting displays that we can

00:33:12.040 --> 00:33:13.570
glue on walls or simply spray paint,
right?

00:33:13.650 --> 00:33:14.570
How do we drive this?

00:33:14.600 --> 00:33:18.600
Or since there are 10,000 of displays
shipped already of this particular type,

00:33:18.600 --> 00:33:23.120
what happens if you connect
them today to build these

00:33:23.260 --> 00:33:24.590
pervasive visualization spaces?

00:33:24.600 --> 00:33:26.190
How do we drive that
information possibly,

00:33:26.190 --> 00:33:26.540
right?

00:33:26.600 --> 00:33:28.600
How do we get people to collaborate?

00:33:28.630 --> 00:33:32.500
So in this case, the 50 tiles are powered
through 25 dual processor,

00:33:32.500 --> 00:33:34.600
dual core display nodes.

00:33:34.650 --> 00:33:39.600
There's roughly 50 terabytes of
cache disk space storage behind it.

00:33:39.660 --> 00:33:42.800
And everything is networked
essentially through fiber locally

00:33:42.860 --> 00:33:46.590
for data transport visualization,
but then globally through the Optiputer,

00:33:46.590 --> 00:33:47.600
a dedicated optical.

00:33:47.600 --> 00:33:50.600
And that's the optical
network that we can work with.

00:33:50.720 --> 00:33:53.600
Now, the obvious challenge, right?

00:33:53.600 --> 00:33:55.600
Massive amounts of
pixels have to be filled.

00:33:55.600 --> 00:33:58.590
If you just think about
24-bit RGB per pixel,

00:33:58.640 --> 00:34:01.600
we have 4.8 gigabit per frame.

00:34:01.600 --> 00:34:03.600
Now we want 60 frames per second, right?

00:34:03.600 --> 00:34:05.550
So that gets quite interesting.

00:34:05.630 --> 00:34:07.600
How do we generate these
pixels in the first place?

00:34:07.830 --> 00:34:09.570
How do we fill them in the end?

00:34:09.600 --> 00:34:12.810
And how do we do it at an interactive
rate so we can actually really

00:34:12.930 --> 00:34:14.600
work with it in a meaningful form?

00:34:14.600 --> 00:34:18.180
Now, scalability and failure tolerance,
and suddenly becomes a really big issue,

00:34:18.180 --> 00:34:18.600
right?

00:34:18.600 --> 00:34:22.600
When one of these tiles fails,
you're suddenly at a loss.

00:34:22.600 --> 00:34:25.470
It sort of blows your
entire workspace to pieces.

00:34:25.600 --> 00:34:29.600
So we decided to go with a really
reconfigurable IP-based display system,

00:34:29.600 --> 00:34:31.550
which allows us primarily
to add components,

00:34:31.610 --> 00:34:35.600
new resources as they become
available quite transparently,

00:34:35.600 --> 00:34:40.600
but it also allows us to replace
or remove failed components.

00:34:40.900 --> 00:34:44.020
Since it's network-centric,
we have access to all of the

00:34:44.020 --> 00:34:45.600
existing data repositories out there.

00:34:45.690 --> 00:34:50.600
So being able to tie into existing
data sources is of course important.

00:34:50.600 --> 00:34:54.710
And then to use the
visualization assets you have,

00:34:54.800 --> 00:34:58.600
the data you have, to really drive
interactive visualization,

00:34:58.600 --> 00:35:02.600
data fusion,
leveraging the GPUs as much as we can.

00:35:02.730 --> 00:35:04.600
So here are just a couple of examples.

00:35:04.600 --> 00:35:06.850
And if you want to hear more
about the details or the fun

00:35:06.870 --> 00:35:08.460
stuff underneath the hood,
which is really the science

00:35:08.540 --> 00:35:10.880
and research contribution,
come downstairs and

00:35:10.890 --> 00:35:12.600
we'll talk a little bit.

00:35:12.600 --> 00:35:14.600
Here's one example,
natural disaster management.

00:35:14.600 --> 00:35:16.510
Eric and Katrina,
all of us heard about it.

00:35:16.640 --> 00:35:20.580
Quite devastating, both to loss of life
and financial impact.

00:35:20.600 --> 00:35:22.860
The problem is you have
pre- and post-event imagery,

00:35:22.870 --> 00:35:23.500
for example.

00:35:23.750 --> 00:35:25.600
How do you identify what
crisis hotspots are?

00:35:25.600 --> 00:35:28.800
How do you do it in team environments
so that emergency management folks can

00:35:28.820 --> 00:35:31.600
deploy field responders more intuitively?

00:35:31.620 --> 00:35:35.600
So in this case, with image processing,
large-scale visualization,

00:35:35.600 --> 00:35:38.700
we have a mechanism to get a
better grasp of the bigger picture,

00:35:38.700 --> 00:35:40.600
the magnitude of what
really has occurred,

00:35:40.600 --> 00:35:41.580
to address it.

00:35:41.600 --> 00:35:43.600
Now, rather than one or a
couple of big images,

00:35:43.600 --> 00:35:45.600
we might be able to deal
with many smaller images.

00:35:45.600 --> 00:35:49.600
So we're working with folks
in brain imaging to identify

00:35:49.600 --> 00:35:53.600
particular patterns that might
exist in brain-related diseases,

00:35:53.600 --> 00:35:56.520
such as Alzheimer's, Parkinson's,
schizophrenia,

00:35:56.620 --> 00:36:00.570
things that should be close to all of
our hearts since they're quite pervasive.

00:36:00.700 --> 00:36:02.930
So in this case,
providing a lot of visual information

00:36:02.930 --> 00:36:06.570
concurrently for many patients,
being able to scroll through

00:36:06.570 --> 00:36:10.850
particular slices over time
and visually identify other

00:36:10.850 --> 00:36:12.600
particular patterns which may occur.

00:36:12.600 --> 00:36:15.600
And that, of course,
works then in 3D as well, right?

00:36:15.600 --> 00:36:20.600
Surface, representation, volume rendered,
or texture map information,

00:36:20.600 --> 00:36:23.570
so in this case, brain activation on
top of everything else.

00:36:23.600 --> 00:36:25.810
Earth system science,
another huge area of this

00:36:25.810 --> 00:36:28.820
gigantic computational resources,
hundreds of thousands of

00:36:28.890 --> 00:36:30.600
processes running problems.

00:36:30.600 --> 00:36:34.600
One example being the Intergovernmental
Panel on Climate Change,

00:36:34.770 --> 00:36:37.600
which is doing a 100-year simulation
of how our climate will change.

00:36:37.600 --> 00:36:40.490
20 different groups worldwide,
independent from each other,

00:36:40.560 --> 00:36:42.670
that want to compare data and
figure out if there's at least one

00:36:42.720 --> 00:36:45.600
parameter that everybody agrees on,
which is difficult, right?

00:36:45.600 --> 00:36:48.580
So we can't just average all the
data together and visualize it.

00:36:48.600 --> 00:36:52.870
We really need to show it co-located
so teams feel comfortable that their

00:36:52.900 --> 00:36:54.600
particular simulation is maintained.

00:36:54.600 --> 00:36:58.430
But in this case also, since grids,
meshes vary,

00:36:58.600 --> 00:37:00.600
information is properly represented.

00:37:00.600 --> 00:37:06.600
And it was quite beneficial because
individual simulation problems jumped out

00:37:06.740 --> 00:37:10.600
right away where somebody had a parameter
wrong or the timing simply set up wrong.

00:37:10.600 --> 00:37:15.600
Now, if you go from image data,
of course, to 3D, right?

00:37:15.600 --> 00:37:18.580
Digital elevation maps
being a great example,

00:37:18.620 --> 00:37:21.600
terrain rendering,
all the good stuff you've heard about.

00:37:21.600 --> 00:37:24.590
So that was Google Earth, for example.

00:37:24.810 --> 00:37:28.530
And then of course the next step,
volume rendering and so on.

00:37:28.530 --> 00:37:33.400
One very exciting area though is remote
visualization or control of experimental

00:37:33.400 --> 00:37:39.690
infrastructure from very high-end imaging
systems deployed in different areas.

00:37:39.700 --> 00:37:43.920
One example in our case is an electron
microscope in our building which

00:37:43.920 --> 00:37:48.700
generates image data by far exceeding
any display capability existing today.

00:37:48.700 --> 00:37:53.070
So the idea is why don't we use
this wall type interface to really

00:37:53.070 --> 00:37:56.700
cure and control the imaging system
which might exist somewhere else,

00:37:56.700 --> 00:37:56.700
right?

00:37:56.700 --> 00:38:00.680
All we really need is
that big network pipe.

00:38:00.680 --> 00:38:04.700
So in this case what you see across the
entire display is actually 300 microns,

00:38:04.700 --> 00:38:04.700
right?

00:38:04.890 --> 00:38:07.560
Lower left corner gives
you a scale of 10 microns.

00:38:07.780 --> 00:38:10.690
So that's a tremendous amount of
very high resolution image data

00:38:10.870 --> 00:38:12.700
that's suddenly being processed.

00:38:12.700 --> 00:38:16.700
Now there's an interesting set
of impacts that we're aiming at.

00:38:16.700 --> 00:38:19.700
And by long shot we're not there yet,
right?

00:38:19.700 --> 00:38:22.700
So everybody has a challenge to
contribute to that hopefully.

00:38:22.780 --> 00:38:24.980
So HyperWall is intended to
enable analytical reasoning

00:38:24.980 --> 00:38:26.700
through interactive visualization.

00:38:26.700 --> 00:38:31.450
There are three important areas:
support interactive collaboration

00:38:31.690 --> 00:38:36.540
on a somewhat larger scale than just
our research lab to help with the

00:38:36.540 --> 00:38:38.700
detection and correlation of patterns.

00:38:38.700 --> 00:38:42.700
Leverage really the power of the
human visual brain to intuit data.

00:38:42.760 --> 00:38:44.690
We're all very well trained to
work in our particular domain.

00:38:44.700 --> 00:38:50.700
If you bring people together,
cross-fertilize, tremendous impact.

00:38:50.720 --> 00:38:53.990
But the key aspect really is we
want to enable the discovery of the

00:38:53.990 --> 00:38:56.620
unexpected while exploring the expected.

00:38:56.720 --> 00:39:00.700
So in visualization in many cases we
look at data we're already expecting.

00:39:00.700 --> 00:39:02.700
But we visualize it the
way we expect it to be.

00:39:02.700 --> 00:39:05.220
Now if we find the things we
haven't been able to see before,

00:39:05.280 --> 00:39:06.590
that's a huge contribution.

00:39:06.700 --> 00:39:10.020
So in the end we have to provide
a means to really analyze

00:39:10.020 --> 00:39:13.560
large scale data sets in 2D,
3D or higher dimension.

00:39:13.880 --> 00:39:18.870
And makes that one innovation right
to save our life at the end hopefully.

00:39:18.900 --> 00:39:22.150
So feel free to come by
downstairs ask more questions.

00:39:22.200 --> 00:39:24.190
Feel free to talk to us in person.

00:39:24.220 --> 00:39:26.800
There are many interesting research
opportunities in our group.

00:39:26.800 --> 00:39:32.880
Bold plug here,
but many open jobs in hands-on research,

00:39:32.990 --> 00:39:38.280
hyper-wall related, grid centric,
and of course on plenty

00:39:38.280 --> 00:39:41.250
of good Apple hardware.

00:39:49.160 --> 00:39:53.230
Thanks very much and I really encourage
you to go downstairs and take a look at

00:39:53.230 --> 00:39:55.400
the smaller version of the hyper wall.

00:39:55.400 --> 00:39:59.400
It really is an insight as
to what can the human brain

00:39:59.400 --> 00:40:01.650
actually process usefully.

00:40:01.720 --> 00:40:07.910
It's a lot more than just
even a 30 inch display.

00:40:08.450 --> 00:40:13.480
This last area I want to talk
about is I think absolutely

00:40:13.480 --> 00:40:15.800
critical to the sciences.

00:40:15.950 --> 00:40:20.670
Open standards and
related to open standards,

00:40:20.670 --> 00:40:21.930
open source.

00:40:22.600 --> 00:42:54.900
[Transcript missing]

00:43:00.400 --> 00:43:04.160
So, I would like to start by thanking
Apple for inviting me to talk

00:43:04.160 --> 00:43:05.680
to you about BioCoCo today.

00:43:05.680 --> 00:43:10.950
So, in biology,
sequence data becomes more

00:43:10.960 --> 00:43:13.690
and more important and plays
a tremendous important role.

00:43:13.700 --> 00:43:17.620
And that is not only in really
large-scale bioinformatics

00:43:17.620 --> 00:43:23.130
projects like of the size of Phons,
of Radema or Falco's projects.

00:43:23.570 --> 00:43:28.470
But even like for wet lab
biologists like myself,

00:43:29.260 --> 00:43:35.260
biological data in the form of sequence
data formats plays an important role.

00:43:35.260 --> 00:43:37.990
We work with it on a daily basis.

00:43:38.240 --> 00:43:41.620
So this is one for instance and
we usually retrieve them from

00:43:41.630 --> 00:43:45.700
these large public databases that
Bud was already referring to.

00:43:45.700 --> 00:43:50.740
But for instance here you see a very
simple format as we get the sequences

00:43:50.740 --> 00:43:55.900
which is basically a one line description
followed by the actual sequence.

00:43:56.150 --> 00:44:01.440
But we also have more complex data
formats like this one where you

00:44:01.440 --> 00:44:05.620
have a lot of extra metadata about a
sequence like the date it was published

00:44:06.050 --> 00:44:09.900
and the species it was generated
for or what's not on this slide.

00:44:10.140 --> 00:44:13.120
This particular sequence for
instance encodes a protein which

00:44:13.120 --> 00:44:14.900
is the molecular target of Viagra.

00:44:14.900 --> 00:44:21.720
But the big problem really is that
with the big rise in bioinformatics

00:44:21.720 --> 00:44:26.110
we saw an enormous explosion of all
these different sequence formats and

00:44:26.200 --> 00:44:30.900
it was basically because everyone
was just inventing their own formats.

00:44:30.940 --> 00:44:34.900
So as a developer you're... Excuse me.

00:44:34.900 --> 00:44:38.900
As a developer... I will
go back to that one.

00:44:43.130 --> 00:44:45.870
So as a developer it's your
task to basically support

00:44:45.870 --> 00:44:47.720
all those different formats.

00:44:47.860 --> 00:44:51.880
And that is a tedious task and not
really fun to do because you basically

00:44:51.880 --> 00:44:54.000
have to reinvent the wheel all the time.

00:44:54.150 --> 00:44:56.550
And everyone has to do that.

00:44:56.830 --> 00:45:00.240
And also Peter Schoels
from Belgium recognized

00:45:00.240 --> 00:45:02.360
that as a Cocoa developer.

00:45:02.420 --> 00:45:07.930
And he decided that it would be time
for a lightweight Cocoa framework that

00:45:07.930 --> 00:45:11.200
would allow you to support all these
formats with only a few lines of code.

00:45:11.200 --> 00:45:13.190
Well, you saw it already.

00:45:13.200 --> 00:45:17.200
As an example,
this is what he came up with.

00:45:17.470 --> 00:45:21.340
Instead of having to get into
all these open standards,

00:45:21.340 --> 00:45:24.200
you now just have to
implement a few lines of code.

00:45:24.200 --> 00:45:29.240
We basically instantiate a reader
object and the framework does

00:45:29.460 --> 00:45:31.200
the rest for you if you handle
it to pass through the file.

00:45:31.200 --> 00:45:38.200
And it returns you a dictionary with
all the sequence files information.

00:45:38.200 --> 00:45:43.420
Now, when I was developing our
DNA sequence editor in Cocoa,

00:45:43.420 --> 00:45:49.420
EnzymeX, this was all I basically need
for now to have EnzymeX support

00:45:49.420 --> 00:45:50.200
all these different formats.

00:45:50.200 --> 00:45:56.260
And I could basically focus on all the
pretty stuff and all the nice features,

00:45:56.260 --> 00:45:58.170
which was very handy.

00:45:58.200 --> 00:46:01.980
So, quite soon after I and another
few Cocoa developers got

00:46:01.980 --> 00:46:05.110
involved in the BioCocoa project,
we realized that there was actually

00:46:05.210 --> 00:46:06.200
a need for a much broader format.

00:46:06.200 --> 00:46:12.310
Much like, for instance,
the Java language has the BioJava

00:46:12.310 --> 00:46:16.100
project and Perl has the BioPerl project,
etc.

00:46:16.200 --> 00:46:22.200
So, together we decided that it
was time for BioCocoa 2.0.

00:46:22.300 --> 00:46:25.200
And what we wanted to do in
this framework is the following.

00:46:25.200 --> 00:46:28.940
We started from scratch and we basically
wanted to provide Cocoa developers

00:46:29.460 --> 00:46:34.130
with a complete set of model objects
to represent biological sequences.

00:46:34.200 --> 00:46:37.020
And of course,
we would then still allow to support all

00:46:37.020 --> 00:46:39.200
the different popular sequence formats.

00:46:39.260 --> 00:46:42.200
And together this would form
the core of the framework.

00:46:42.200 --> 00:46:45.190
But on top of that,
we would like to add a number of tools

00:46:45.200 --> 00:46:48.200
to play with these model objects.

00:46:48.200 --> 00:46:51.290
Like, for instance,
you can imagine you want to translate

00:46:51.390 --> 00:46:56.200
this DNA sequence in that protein,
which is the target of, well, etc.

00:46:56.200 --> 00:47:02.200
So, and we would like to add advanced
tools for sequence analysis,

00:47:02.200 --> 00:47:05.150
like alignment tools
or these kind of stuff.

00:47:05.270 --> 00:47:11.010
So, and finally, ideally,
a set of UI elements that would

00:47:11.010 --> 00:47:14.200
allow end users to consistently
deal with those model objects.

00:47:14.200 --> 00:47:17.150
And together this would give
Cocoa developers a complete,

00:47:17.240 --> 00:47:21.200
powerful framework to make
bioinformatic applications.

00:47:21.200 --> 00:47:26.200
Now,
if you look at the framework overview,

00:47:26.200 --> 00:47:28.200
which you see basically here,
which we have in mind,

00:47:28.200 --> 00:47:30.200
then you can obviously also
see the analogy with the Cocoa.

00:47:30.200 --> 00:47:37.450
And we really try to make the
framework really leverage this powerful

00:47:37.570 --> 00:47:41.190
Objective-C language and the Cocoa APIs.

00:47:41.200 --> 00:47:45.770
And as an example, we use, for instance,
NSData as a way in the

00:47:46.030 --> 00:47:51.450
BC sequence model object,
as a way to give developers low-level

00:47:51.760 --> 00:47:56.000
access to the sequence data,
but at the same time in

00:47:56.000 --> 00:47:58.200
a very user-friendly way.

00:47:58.200 --> 00:48:02.640
So, and I'm happy to announce that
actually today we released a beta

00:48:02.640 --> 00:48:05.200
version of the core of BioCocoa.

00:48:05.200 --> 00:48:08.200
So, if you're interested in that,
please visit our website.

00:48:08.340 --> 00:48:12.200
Or we will do it later today
because it still has to be uploaded.

00:48:12.200 --> 00:48:14.160
But you can find it there.

00:48:14.220 --> 00:48:16.200
I will show you the URL in the end.

00:48:16.200 --> 00:48:19.200
But it's not,
we're obviously not there yet.

00:48:19.200 --> 00:48:23.200
So, we still have to add tools and
that's what we're basically doing.

00:48:23.200 --> 00:48:26.170
But that's something we could
really use a lot of help in.

00:48:26.260 --> 00:48:29.810
So, if you're interested, be sure to,
and you're a Cocoa developer

00:48:29.880 --> 00:48:33.170
targeting biosciences,
then be sure to visit our website.

00:48:33.310 --> 00:48:35.200
It's actually here.

00:48:35.200 --> 00:48:39.200
It's on bioinformatics.org/bioCocoa.

00:48:39.330 --> 00:48:43.200
And even better, if you wanted to have
questions already or comments,

00:48:43.200 --> 00:48:47.200
then yeah, feel free to visit us at the
poster session tomorrow evening.

00:48:47.200 --> 00:48:52.340
Or we have, I think,
a Thursday morning from 11:00 to 12:00 we

00:48:52.340 --> 00:48:54.120
have a session in the Science Connection.

00:48:54.410 --> 00:48:57.120
So, I hope to see you there.

00:48:57.300 --> 00:49:01.880
And I think BioCoa is a nice example
of how open source can in this

00:49:01.880 --> 00:49:06.000
case maybe tackle the problem of,
in this case,

00:49:06.000 --> 00:49:09.200
maybe too many open standard formats.

00:49:09.200 --> 00:49:12.300
But, and with your help,
we can even maybe bring

00:49:12.300 --> 00:49:14.180
it much further than that.

00:49:14.200 --> 00:49:16.200
So, thank you.

00:49:24.960 --> 00:49:27.710
Okay, so I'm just going to do a real
quick wrap up and cover some

00:49:27.710 --> 00:49:30.020
things also going on at the show.

00:49:30.090 --> 00:49:33.400
First I'd just like to say I think
we've heard a really nice discussion

00:49:33.400 --> 00:49:38.100
on some of the prevailing topics
in scientific computing today.

00:49:38.100 --> 00:49:41.820
You know, the diversity of data sets,
the really big visuals

00:49:41.820 --> 00:49:44.970
and the power of this,
the need for really big storage

00:49:44.970 --> 00:49:48.620
and how all the data that's being
generated is really driving this,

00:49:48.620 --> 00:49:50.190
and then open standards.

00:49:52.060 --> 00:49:55.610
So how do we learn more about all of
these things at the show and where can

00:49:55.610 --> 00:49:59.840
you connect with people and network
with folks around scientific computing?

00:49:59.840 --> 00:50:04.350
I really want to call your attention to
the scientific development poster session

00:50:04.400 --> 00:50:06.660
if you don't already know about this.

00:50:06.660 --> 00:50:10.270
So this is our first year doing a
poster session and I have to say the

00:50:10.270 --> 00:50:14.240
idea came from our developers last
year at the developer conference.

00:50:14.240 --> 00:50:17.390
This was a request that was
made and we were really excited

00:50:17.390 --> 00:50:19.220
to be able to deliver this.

00:50:19.220 --> 00:50:19.220
We have over 50 posters being presented.

00:50:19.220 --> 00:50:19.220
It's a fantastic idea.

00:50:19.220 --> 00:50:23.410
It's a fantastic way to find out what
your colleagues are doing and network

00:50:23.410 --> 00:50:27.480
with folks and just read about some
really cool development going on.

00:50:27.490 --> 00:50:30.050
This is Wednesday from 7 to 10 p.m.

00:50:30.050 --> 00:50:33.380
There's also some demos of the
code being presented in these

00:50:33.450 --> 00:50:37.410
posters in the Science Connection,
which is here on the third floor,

00:50:37.410 --> 00:50:39.620
Wednesday and Thursday from 9 to 6.

00:50:39.810 --> 00:50:43.430
And there's a schedule,
a revolving schedule at the entry to the

00:50:43.430 --> 00:50:48.830
Science Connection if you're interested
in seeing what's going to be demoed.

00:50:51.780 --> 00:50:54.120
In addition, we've been hearing,
you know,

00:50:54.120 --> 00:50:56.190
go downstairs and see the hyper wall.

00:50:56.240 --> 00:50:58.940
That's actually in an area
called Apple in the Lab.

00:50:58.940 --> 00:51:02.400
And we've got a big focus on
scientific visualization there.

00:51:02.400 --> 00:51:03.680
It's on the first floor.

00:51:03.680 --> 00:51:05.420
It's open through Thursday.

00:51:05.420 --> 00:51:07.000
So take a look down there.

00:51:07.000 --> 00:51:08.920
We have the smaller
version of the hyper wall.

00:51:08.920 --> 00:51:13.300
We've also got some fantastic 3D,
stereo 3D visualization stations

00:51:13.320 --> 00:51:17.170
set up for medical imaging as well
as for some molecular imaging,

00:51:17.250 --> 00:51:20.100
molecular modeling,
and some other really cool

00:51:20.100 --> 00:51:21.680
technologies on display.

00:51:21.700 --> 00:51:23.030
So take a look at that.

00:51:23.030 --> 00:51:26.400
The Science Connection,
which is here on the third floor,

00:51:26.400 --> 00:51:29.070
it's just a place you can
hook up to the network,

00:51:29.070 --> 00:51:33.100
sit down, talk to your colleagues,
take a break, look at some demos,

00:51:33.100 --> 00:51:35.780
play with some hardware, whatever.

00:51:35.780 --> 00:51:38.040
It's just a nice place to hang out.

00:51:38.040 --> 00:51:41.080
And then we're having
community discussions either

00:51:41.160 --> 00:51:44.500
in the Science Connection or
right across the way today,

00:51:44.500 --> 00:51:49.040
tomorrow, and Thursday at lunch
between 1230 and 130.

00:51:49.040 --> 00:51:51.680
And the topics are Mac OS X technology.

00:51:51.700 --> 00:51:52.900
So we're going to be having a lot of
discussion about the Mac OS X technology.

00:51:52.970 --> 00:52:10.560
And then we're going to be
having a lot of discussion

00:52:10.560 --> 00:52:21.680
about the Mac OS X technology.

00:52:21.730 --> 00:52:25.160
And then we're going to be
having a lot of discussion

00:52:25.160 --> 00:52:27.440
about the Mac OS X technology.

00:52:28.710 --> 00:52:33.240
There's some nice sessions here at
the developer conference that really

00:52:33.240 --> 00:52:35.080
relate to the topics you heard today.

00:52:35.160 --> 00:52:38.200
I'm going to leave this up
for those of you that haven't,

00:52:38.200 --> 00:52:40.080
you want to take a few
minutes to look at this.