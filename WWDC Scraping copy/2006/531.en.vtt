WEBVTT

00:00:11.020 --> 00:00:16.110
I'd like to welcome you to the
Open Directory in-depth presentation.

00:00:17.020 --> 00:00:18.950
I'm really excited about this technology.

00:00:18.960 --> 00:00:20.640
I was doing a countdown with my manager.

00:00:20.640 --> 00:00:23.160
I haven't introduced a new
technology in eight years.

00:00:23.160 --> 00:00:24.420
I've been talking about Open Directory.

00:00:24.450 --> 00:00:25.290
I love Open Directory.

00:00:25.300 --> 00:00:26.040
I'm still the manager.

00:00:26.040 --> 00:00:29.580
But I am really,
really excited about this technology.

00:00:29.580 --> 00:00:31.150
I think you're going to enjoy the demos.

00:00:31.150 --> 00:00:32.400
We're going to have a good time.

00:00:32.400 --> 00:00:33.970
And we're going to do
a little podcasting.

00:00:34.110 --> 00:00:35.640
Who likes podcasting by applause?

00:00:40.880 --> 00:00:43.710
So what, so I'm David O'Rourke,
I'm the engineering manager.

00:00:43.710 --> 00:00:46.580
I wasn't quite sure what to put as
my job title because we hadn't named

00:00:46.580 --> 00:00:49.510
the product when I made up the slide,
so I am the engineering manager for

00:00:49.600 --> 00:00:53.180
podcasting and also open directory,
but we're here to talk about podcasting.

00:00:53.180 --> 00:00:55.460
So what are we going to do today?

00:00:55.460 --> 00:00:57.780
First of all,
as some of you might notice,

00:00:57.780 --> 00:01:00.540
podcasting has been
taking the world by storm.

00:01:00.540 --> 00:01:03.660
Solutions are coming from
fast and furious from a lot

00:01:03.660 --> 00:01:06.500
of things and we at Apple,
having some involvement

00:01:06.500 --> 00:01:08.840
in this technology,
felt that we should have some

00:01:08.840 --> 00:01:12.420
server solutions that offer a lot of
different solutions to make your life

00:01:12.420 --> 00:01:15.200
easier and try to bring podcasting
to your everyday life in a way

00:01:15.200 --> 00:01:17.500
that you can manage it and deploy it.

00:01:17.580 --> 00:01:20.800
So as part of the presentation,
we're going to go over podcasting

00:01:20.810 --> 00:01:24.040
today where I personally see and
where Apple sees the technology

00:01:24.040 --> 00:01:26.550
and what people are doing with it.

00:01:26.630 --> 00:01:30.710
We're going to be talking about our
solution for podcast production.

00:01:30.890 --> 00:01:33.590
We're going to go over a simple case
study which I think will crystallize

00:01:33.630 --> 00:01:36.670
for you what it is we really
see this technology being used.

00:01:36.750 --> 00:01:40.570
We don't think this is the only usage,
but it's one of the most obvious.

00:01:40.570 --> 00:01:44.620
And what changes are we making
to Mac OS X Server to make

00:01:44.620 --> 00:01:47.110
sure that you can deploy this?

00:01:47.300 --> 00:01:48.720
So where is podcasting today?

00:01:48.800 --> 00:01:52.220
Well, Apple and the industry provide
a wealth of tools to capture,

00:01:52.480 --> 00:01:53.750
edit and produce content.

00:01:53.790 --> 00:01:56.200
You've got QuickTime,
you've got Final Cut Pro,

00:01:56.200 --> 00:02:01.560
you've got just a ton, a ton,
a ton of tools that can capture video.

00:02:01.560 --> 00:02:03.750
Some are from Apple,
some are from other vendors.

00:02:03.750 --> 00:02:06.740
There's really no problem
generating content.

00:02:06.740 --> 00:02:08.500
In fact,
I've heard the opposite from customers.

00:02:08.500 --> 00:02:11.040
They're generating too much content
and they don't know what to do with it.

00:02:12.200 --> 00:02:14.810
There's multiple methods
for publishing the content.

00:02:14.810 --> 00:02:17.200
You can publish it by
RSS feeds like podcasting.

00:02:17.200 --> 00:02:18.400
You can use your blog.

00:02:18.400 --> 00:02:20.700
You can use a QuickTime streaming server.

00:02:20.700 --> 00:02:22.860
You can even distribute it by
DVD if you want to sit there and

00:02:22.870 --> 00:02:24.200
feed discs into the DVD player.

00:02:24.200 --> 00:02:27.200
But it is a method by which you
can distribute your content.

00:02:27.200 --> 00:02:29.910
And there's multiple ways for
people to view this content.

00:02:29.910 --> 00:02:31.390
They can use their iPod videos.

00:02:31.390 --> 00:02:32.890
They can use their DVD players.

00:02:32.890 --> 00:02:35.180
They can use their
computers as a DVD player.

00:02:35.200 --> 00:02:37.200
I have Mac Mini set up at home.

00:02:37.200 --> 00:02:40.610
I bought a Mac Mini for my three
televisions and use it just as a

00:02:40.610 --> 00:02:43.180
dedicated DVD player for each of the TVs.

00:02:43.290 --> 00:02:45.200
iTunes plays back videos and even phones.

00:02:45.200 --> 00:02:47.700
How many of you in this room
have phones for which you can

00:02:47.700 --> 00:02:49.190
watch video by show of hands?

00:02:49.200 --> 00:02:50.200
I mean, it's just amazing.

00:02:50.200 --> 00:02:54.200
So, you can capture the content,
you can distribute it

00:02:54.200 --> 00:02:57.190
and you can play it back.

00:02:57.190 --> 00:02:58.160
So, what's missing?

00:02:58.200 --> 00:03:00.200
So, all the pieces exist today.

00:03:00.200 --> 00:03:04.200
The challenge with all this is if
you want to turn it into a podcast

00:03:04.200 --> 00:03:09.750
and get it into your customer's hand,
The steps to take it from capture

00:03:10.080 --> 00:03:13.140
The toolset to DVD are mostly manual.

00:03:13.140 --> 00:03:16.040
You have to know how to use
all the tools in the middle.

00:03:16.040 --> 00:03:18.790
The technology is available,
but it requires someone to follow

00:03:18.790 --> 00:03:20.070
a very complex set of steps.

00:03:20.150 --> 00:03:24.450
I sat down and tried to produce a podcast
from iMovie all the way out to a blog.

00:03:24.450 --> 00:03:28.060
And while it was not terrible,
it certainly wasn't something my mother

00:03:28.060 --> 00:03:31.820
could handle and certainly wasn't
something I could do on a daily basis.

00:03:31.820 --> 00:03:35.360
Processes that are
manual aren't repeatable.

00:03:35.360 --> 00:03:38.230
You don't want to have to have someone
like myself or yourself sitting there

00:03:38.240 --> 00:03:39.980
doing this process over and over again.

00:03:40.000 --> 00:03:43.530
And if you start thinking about it,
what if I needed to do that process

00:03:43.530 --> 00:03:48.140
50 times a day or 50 times an hour
or in some cases 50 times a minute?

00:03:48.250 --> 00:03:50.000
How would you go about doing that?

00:03:50.000 --> 00:03:54.270
I don't see how you would with
the tools that exist today.

00:03:54.530 --> 00:03:57.740
So it requires expertise with a
very diverse set of technologies.

00:03:57.740 --> 00:04:01.890
Like if you want to produce a video
with three different bandwidths,

00:04:01.930 --> 00:04:05.060
you have to choose save as
three times from Final Cut Pro.

00:04:05.060 --> 00:04:06.830
I mean, it's not terrible,
but I don't want to

00:04:06.830 --> 00:04:08.030
do that for 50 videos.

00:04:08.030 --> 00:04:09.710
You need to know where to post the video.

00:04:09.710 --> 00:04:10.270
Do I use FTP?

00:04:10.270 --> 00:04:10.950
Do I use Fetch?

00:04:10.950 --> 00:04:12.370
Do I use the finder's FTP support?

00:04:12.370 --> 00:04:14.130
How do I get the video where I want it?

00:04:15.060 --> 00:04:19.560
So producing a podcast today is largely,
in my opinion, a hand-built exercise.

00:04:19.560 --> 00:04:22.650
We have all the tools,
but it requires a real craftsman to

00:04:22.650 --> 00:04:25.120
produce the entire product end-to-end.

00:04:25.120 --> 00:04:27.240
And these processes, as I said,
are not repeatable.

00:04:27.240 --> 00:04:31.230
It's about as automated as producing
a car was prior to Model T.

00:04:31.230 --> 00:04:33.920
I mean,
there were cars before the Model T,

00:04:33.920 --> 00:04:37.280
but it was a hand-built
exercise to produce a car.

00:04:37.280 --> 00:04:39.620
Henry Ford came along and he
made it so he could turn out,

00:04:39.670 --> 00:04:41.600
you know, I don't know,
thousands an hour.

00:04:43.820 --> 00:04:47.400
Leopard will ship, Leopard Server,
slide's a mistake,

00:04:47.440 --> 00:04:50.780
Leopard Server will ship with a
product we call Podcast Producer.

00:04:50.820 --> 00:04:53.530
And what Henry Ford did
for producing cars,

00:04:53.530 --> 00:04:56.660
Podcast Producer will do
for producing podcasts.

00:04:56.660 --> 00:05:02.320
Leopard Podcast Producer fully automates
the process of content ingestion all the

00:05:02.540 --> 00:05:05.660
way out to production and publishing.

00:05:05.920 --> 00:05:08.460
Producing anything requires planning.

00:05:08.700 --> 00:05:10.780
This is not a one-shot thing.

00:05:10.850 --> 00:05:15.160
But once it's deployed,
you can use Podcaster Producer to

00:05:15.160 --> 00:05:19.840
reliably and automatically
produce podcasts on a daily basis.

00:05:19.920 --> 00:05:23.910
People who are submitting content into
the system don't have to know what

00:05:23.990 --> 00:05:25.450
the system is doing with the video.

00:05:25.450 --> 00:05:28.680
So they no longer have to be experts
in the technology because you can

00:05:28.980 --> 00:05:33.250
internalize all that with scripts and
workflows that we'll go into later.

00:05:33.750 --> 00:05:36.940
If you go from producing 50
videos a day to 50 videos an hour,

00:05:37.120 --> 00:05:41.350
you can transparently scale the
system by adding more computers

00:05:41.350 --> 00:05:43.660
to process more video per hour.

00:05:43.710 --> 00:05:47.460
Raw materials flow in,
finished podcasts flow out to

00:05:47.460 --> 00:05:49.950
wherever you specify them to go.

00:05:50.510 --> 00:05:55.560
Producing something requires control
of the producing infrastructure.

00:05:55.680 --> 00:05:58.340
So we're going to build
in control and management.

00:05:58.420 --> 00:06:02.930
If you have a certain set of cameras
that are on campus that are recording

00:06:02.930 --> 00:06:05.890
lectures like this one or other things,
you don't want the students to

00:06:05.890 --> 00:06:07.080
be able to interrupt the lecture.

00:06:07.120 --> 00:06:09.930
So we're going to put the normal
server admin and manageability

00:06:09.930 --> 00:06:13.460
controls into the product so that you
can control who can use the resource.

00:06:15.330 --> 00:06:17.060
You can change the process in production.

00:06:17.060 --> 00:06:20.530
Say your site decides that we want
four versions of every video rather

00:06:20.530 --> 00:06:22.200
than three versions of every video.

00:06:22.220 --> 00:06:25.780
You can change that process without
having to tell the submitters

00:06:26.020 --> 00:06:27.300
that there's a new process.

00:06:27.300 --> 00:06:33.760
So, what resources does Apple think you
need to deploy this type of system?

00:06:33.760 --> 00:06:36.420
Well,
a producer system consists of what we

00:06:36.420 --> 00:06:39.130
consider the following four components.

00:06:39.140 --> 00:06:42.100
It consists of a set of resources
from which content can be captured.

00:06:42.590 --> 00:06:44.670
At the lowest end,
this could be a Mac Mini with a

00:06:44.670 --> 00:06:47.320
digital video camera plugged into it,
plugged into the network.

00:06:47.340 --> 00:06:51.570
You need a server to collect the
video from all of these cameras.

00:06:51.620 --> 00:06:54.980
You need some scripts or what
we call workflows that say every

00:06:54.980 --> 00:06:57.020
time a video gets submitted,
do this to it.

00:06:57.020 --> 00:06:58.430
It's a stamp, it's a recipe.

00:06:58.440 --> 00:07:01.830
Every time a video comes in,
do these 12 things, do these 50 things,

00:07:01.870 --> 00:07:03.080
do these 100 things.

00:07:03.080 --> 00:07:05.680
And you need servers
to store all this data.

00:07:05.680 --> 00:07:08.340
This is why we like this product
because we're going to sell you servers.

00:07:08.380 --> 00:07:12.280
And you need storage to save and
publish the distribution content.

00:07:12.580 --> 00:07:16.000
X-rayed, X-San to store the content.

00:07:16.080 --> 00:07:21.560
So, what this might look like is a set
of Macintosh Minis or any Macintosh,

00:07:21.590 --> 00:07:24.180
anything that can have a digital
video camera plugged into it.

00:07:24.180 --> 00:07:26.940
And those things will
submit data to a farm,

00:07:26.940 --> 00:07:28.000
to a server farm.

00:07:28.080 --> 00:07:31.400
The server will process the
farm and then publish the video

00:07:31.400 --> 00:07:34.910
out to various web servers,
email servers, QTSS servers,

00:07:34.910 --> 00:07:37.670
possibly an archival system
that's unique to your institution.

00:07:39.080 --> 00:07:41.880
And your clients can use their iMacs,
their iTunes,

00:07:41.880 --> 00:07:44.830
their phones and their iPods
to receive the content.

00:07:44.880 --> 00:07:47.760
And as we go through the presentation,
you'll see that at every

00:07:47.760 --> 00:07:49.820
step along the way,
we've adopted standards.

00:07:49.880 --> 00:07:51.680
So, there's nothing here.

00:07:53.060 --> 00:07:54.400
This proprietary.

00:07:54.440 --> 00:07:57.290
So you can intercept this and
deploy it using any technologies

00:07:57.300 --> 00:07:58.360
you're already familiar with.

00:08:00.200 --> 00:08:01.860
So what's a case study of this example?

00:08:01.860 --> 00:08:04.040
And I mentioned it earlier.

00:08:04.090 --> 00:08:09.200
A university lecture is our
touchstone or the way we think about

00:08:09.200 --> 00:08:15.390
this product and make sure we're
on track as we're developing it.

00:08:15.850 --> 00:08:19.000
A mythical university would put
cameras into each of the lecture

00:08:19.000 --> 00:08:21.810
rooms or certain lecture rooms.

00:08:22.660 --> 00:08:25.930
The instructors would be allowed by the
system to start and stop the camera.

00:08:25.940 --> 00:08:28.570
So the model would be the
instructor walks into a lecture,

00:08:28.610 --> 00:08:31.860
logs onto a machine at the podium,
picks the room that he's in

00:08:31.860 --> 00:08:32.940
and says start recording.

00:08:32.940 --> 00:08:36.100
He then does his lecture
for an hour or so.

00:08:36.800 --> 00:08:39.430
When he's done,
he stops the lecture and the camera

00:08:39.430 --> 00:08:41.240
uploads the video to the system.

00:08:41.280 --> 00:08:43.800
At that point, the lecture is done.

00:08:44.010 --> 00:08:46.550
The system administrator or the
university has decided what will

00:08:46.550 --> 00:08:49.570
be done with all those lecture
videos and they put a workflow up

00:08:49.570 --> 00:08:52.950
on the podcast producer that will
execute that instructor's video.

00:08:52.960 --> 00:08:56.540
Lectures, for example,
could be sampled down to three versions,

00:08:56.540 --> 00:08:59.300
a high bitrate version,
a low bitrate version, a medium.

00:08:59.300 --> 00:09:02.620
Audio could be extracted so that
people could just get an audio.

00:09:02.620 --> 00:09:05.800
And lectures are automatically
archived to the XSAN system for

00:09:05.840 --> 00:09:07.740
future generations of students.

00:09:07.780 --> 00:09:12.930
The lecturer doesn't have to know nor
care that any of this is going on.

00:09:12.940 --> 00:09:16.210
All he did was start and stop a camera.

00:09:17.450 --> 00:09:21.900
So an example in action
is lecture walks in,

00:09:21.920 --> 00:09:24.400
logs on to Safari.

00:09:25.210 --> 00:09:30.300
We've modified Blossom,
which we'll show you.

00:09:30.300 --> 00:09:32.020
And he decides he wants
to start a camera,

00:09:32.020 --> 00:09:34.710
so he uses Safari, picks the camera,
starts the recording.

00:09:34.710 --> 00:09:38.560
The camera in the back of the room
that he picked records his lecture.

00:09:38.560 --> 00:09:40.940
He hits stop.

00:09:40.990 --> 00:09:44.740
The cameras submit the lecture
to the podcast producer system.

00:09:44.740 --> 00:09:47.350
The podcast producer system
chews on it for a bit.

00:09:47.460 --> 00:09:48.770
Video encoding is expensive.

00:09:48.770 --> 00:09:49.660
It takes a while.

00:09:50.700 --> 00:09:53.520
When it's done producing all
the versions of the video,

00:09:53.520 --> 00:09:56.690
it publishes it to the email server,
the webinar, RSS feed,

00:09:56.690 --> 00:09:59.500
the QTSS server and copies
it automatically to a system

00:09:59.500 --> 00:10:01.520
that's purely an archive server.

00:10:01.520 --> 00:10:03.920
As the archive fills up,
you give us more money and

00:10:03.920 --> 00:10:05.400
we give you another X-ray.

00:10:07.750 --> 00:10:10.780
The point is the students use
the technology that they already

00:10:10.780 --> 00:10:14.130
have in Tiger and in some cases
Panther to access the video so you

00:10:14.130 --> 00:10:20.890
don't have to provide your students
with any actual new software for

00:10:20.890 --> 00:10:24.070
them to consume these videos.

00:10:24.590 --> 00:10:29.380
I'm looking at this slide
and it's a bit too static.

00:10:29.420 --> 00:10:31.750
I think what I'd really like
to do is maybe demo this.

00:10:31.850 --> 00:10:34.220
Who would like to see a demo?

00:10:37.400 --> 00:10:38.380
Fantastic.

00:10:38.440 --> 00:10:40.880
At this point in time,
I'd like to invite David Kraemer

00:10:40.880 --> 00:10:43.870
up and we're going to show you
this all working in real life.

00:10:51.690 --> 00:10:54.200
Hello everyone,
I'm David Kraemer and I'll be

00:10:54.200 --> 00:10:56.090
showing you Podcast Producer.

00:10:56.200 --> 00:10:59.020
So, we'll start out,
I actually want to show you the

00:10:59.020 --> 00:11:03.030
student experience first to use
Dave's example because we really like

00:11:03.030 --> 00:11:06.710
to focus on the end-user experience
of what it's like to enjoy what

00:11:06.710 --> 00:11:08.790
you've created with your content.

00:11:08.820 --> 00:11:13.050
And then I will show you how we actually
create the content in the first place

00:11:13.050 --> 00:11:15.690
and get it published out to the blog.

00:11:16.500 --> 00:11:19.990
So, we'll start out,
here's my weblog and we can go

00:11:20.100 --> 00:11:22.690
check out and see what we have here.

00:11:22.690 --> 00:11:28.400
We actually have session 531,
this session, already posted.

00:11:28.400 --> 00:11:32.480
So, let's, we can subscribe to
this podcast right here.

00:11:32.480 --> 00:11:33.920
Just click on that link.

00:11:33.920 --> 00:11:37.480
Opens up iTunes, iTunes subscribes.

00:11:37.480 --> 00:11:39.780
We can watch the video.

00:11:43.470 --> 00:11:49.030
So we did this just a couple minutes
ago while Dave was introducing this.

00:11:49.680 --> 00:11:51.520
So, just works like that real quick.

00:11:51.520 --> 00:11:54.950
Well, that's basically it.

00:11:54.990 --> 00:11:55.840
That's what students are going to do.

00:11:55.840 --> 00:11:58.480
They're going to get back to their room,
their dorm room after the lecture.

00:11:58.480 --> 00:12:01.630
They're going to open up iTunes
and it'll just automatically

00:12:01.630 --> 00:12:03.280
download the latest video.

00:12:05.310 --> 00:12:07.700
So what's more interesting
though is how to create it,

00:12:07.760 --> 00:12:08.760
because that's why you guys are here.

00:12:08.760 --> 00:12:11.540
It's about podcast producer,
not podcast downloader.

00:12:11.700 --> 00:12:13.260
You all can already download podcasts.

00:12:13.260 --> 00:12:20.100
So we actually can do the recording
right here from the same blog,

00:12:20.280 --> 00:12:23.210
but what the teacher,
the lecturer would do is log in.

00:12:27.870 --> 00:12:31.840
And they would see down here a new link,
recording.

00:12:31.840 --> 00:12:34.950
Click here and we're given
the opportunity to select

00:12:35.010 --> 00:12:36.360
which room we want to record.

00:12:36.360 --> 00:12:39.020
So right now we only have
one camera hooked up.

00:12:39.020 --> 00:12:40.550
It's this guy right here.

00:12:40.550 --> 00:12:44.280
We're actually using the built-in
camera on this MacBook Pro.

00:12:47.700 --> 00:12:50.520
So what I'm going to do is
I'm going to record you guys.

00:12:50.520 --> 00:12:53.010
And I'll tell you when to wave.

00:13:00.410 --> 00:13:03.540
So I title it, give it a description.

00:13:03.540 --> 00:13:07.520
I'm going to automatically post this
to the blog as part of the workflow.

00:13:07.520 --> 00:13:11.730
And what's going to happen is
once this recording is finished,

00:13:11.730 --> 00:13:14.940
three different versions of this
video are going to be created.

00:13:14.940 --> 00:13:18.010
There's going to actually,
there's going to be an audio only

00:13:18.010 --> 00:13:21.630
version so that people who don't have
video capable iPods or just want to

00:13:21.630 --> 00:13:24.940
take it to go while they're listening,
while they're in the gym,

00:13:24.940 --> 00:13:27.180
they can download the audio podcast.

00:13:27.180 --> 00:13:30.220
We're also going to
create a iPod sized video.

00:13:30.400 --> 00:13:33.360
And then we're also going to keep a
copy of the high quality video that was

00:13:33.360 --> 00:13:36.700
recorded in case we need to create other
versions at some point in the future.

00:13:36.700 --> 00:13:40.520
So just by clicking here, record,
I confirm.

00:13:40.520 --> 00:13:43.410
And hopefully the little
green light turned on here.

00:13:43.410 --> 00:13:44.410
You can all wave.

00:13:44.410 --> 00:13:45.750
All right.

00:13:45.920 --> 00:13:47.040
All right.

00:13:47.040 --> 00:13:48.850
So I'll stop it.

00:13:50.290 --> 00:13:51.260
We're done.

00:13:51.340 --> 00:13:53.490
And we're done with that.

00:13:53.570 --> 00:13:56.910
So now we can pop down and take a look at

00:13:57.100 --> 00:13:58.090
What's going on?

00:13:58.110 --> 00:14:02.500
And we can see the job gets submitted
from the camera to the X Grid controller

00:14:03.180 --> 00:14:06.340
and X Grid starts running this
on your cluster of grid agents.

00:14:06.340 --> 00:14:09.770
In this case, we only have one agent,
so it's not going to

00:14:09.770 --> 00:14:11.200
go as fast as possible.

00:14:11.200 --> 00:14:14.860
If you had 10 agents,
you could have 10 classrooms all

00:14:15.230 --> 00:14:19.430
finishing their lecture at the same time,
all getting uploaded to the server

00:14:19.460 --> 00:14:21.440
and all being done in parallel.

00:14:22.960 --> 00:14:26.640
So this is going pretty quick,
but before I show you the result of this,

00:14:26.680 --> 00:14:27.700
I want to show you the email.

00:14:27.830 --> 00:14:32.660
So what happens is when
the recording is completed,

00:14:32.660 --> 00:14:36.040
an email is sent to both the
administrator of the camera and the

00:14:36.040 --> 00:14:38.190
person who initiated the recording.

00:14:40.120 --> 00:14:43.260
And so here we can see that
the recording succeeded.

00:14:43.260 --> 00:14:44.260
It was 13 seconds.

00:14:44.260 --> 00:14:45.240
Where was it from?

00:14:45.240 --> 00:14:47.670
And it's being uploaded
and submitted to Xgrid now.

00:14:52.000 --> 00:14:53.410
So yeah, there we are.

00:14:53.610 --> 00:14:55.860
Then this also goes to the administrator.

00:14:55.980 --> 00:15:00.130
And when XRID receives the job,
the grid administrator gets an email

00:15:00.130 --> 00:15:03.030
that tells them the job started,
when it was submitted

00:15:03.030 --> 00:15:04.400
and when it started.

00:15:04.400 --> 00:15:07.210
They also get the
notification when it finishes.

00:15:07.280 --> 00:15:11.510
And you could use this for accounting
to keep track of who did what when.

00:15:12.070 --> 00:15:15.800
As part of the workflow,
when the video was transcoded

00:15:15.800 --> 00:15:18.880
and then uploaded to the blog
and the blog entry created,

00:15:18.880 --> 00:15:23.460
this email was sent out to both the
administrator of the camera and to the

00:15:23.550 --> 00:15:24.920
person who initiated the recording,
me.

00:15:24.920 --> 00:15:27.640
And this basically tells you
which files were created,

00:15:27.640 --> 00:15:30.180
where they were put,
and then also includes a link to

00:15:30.180 --> 00:15:32.280
actually subscribe to the podcast.

00:15:32.280 --> 00:15:36.700
So let's head back to
the blog and reload.

00:15:36.700 --> 00:15:41.000
And we can see that our audience
recording has shown up here.

00:15:42.000 --> 00:15:45.850
You can watch it directly from the page.

00:15:49.660 --> 00:15:50.230
Everybody wave.

00:15:50.230 --> 00:15:55.530
All right, good job.

00:15:55.950 --> 00:15:57.710
So that's pretty exciting.

00:15:57.920 --> 00:16:01.670
Last step here, we head back to iTunes,
click update.

00:16:01.670 --> 00:16:04.100
Every few hours it's going
to update automatically.

00:16:04.100 --> 00:16:07.590
It downloads the latest video
and we get the same video,

00:16:07.590 --> 00:16:09.010
dorm room delivery.

00:16:09.010 --> 00:16:10.260
I hope you like it.

00:16:20.970 --> 00:16:21.900
Thank you, David.

00:16:21.900 --> 00:16:22.900
That was wonderful.

00:16:22.900 --> 00:16:27.100
What do you think of the demo?

00:16:31.100 --> 00:16:34.700
If you think about it that example
and action from was from a live video.

00:16:34.700 --> 00:16:38.150
But picture being able to run this
process for your high production

00:16:38.200 --> 00:16:40.690
value content that you're
producing with Final Cut Pro.

00:16:40.690 --> 00:16:44.440
Why can't I just take a file from
Final Cut Pro and copy it into the system

00:16:44.440 --> 00:16:46.350
and have a workflow applied to that too?

00:16:46.350 --> 00:16:49.270
So that the people producing your
videos don't have to know all the

00:16:49.330 --> 00:16:52.000
places you want to publish them,
they just submit it to the engine in the

00:16:52.080 --> 00:16:54.270
sky and the engine processes the video.

00:16:54.270 --> 00:16:56.600
Well that's also
supported by this product,

00:16:56.600 --> 00:16:59.480
so you could have iMovie or
Final Cut Pro take the output

00:16:59.480 --> 00:17:02.950
from one of those files,
have it submit to the system directly,

00:17:02.950 --> 00:17:06.740
have them process it and then the system
will apply the same workflow rules

00:17:06.740 --> 00:17:10.000
that it would have to a live video
and you can take your high production

00:17:10.000 --> 00:17:14.700
quality content and run it through the
system and have a recipe applied to it.

00:17:14.710 --> 00:17:18.450
Again at a rate that you can
actually sustain and start

00:17:18.490 --> 00:17:21.120
effectively deploying podcasts.

00:17:21.200 --> 00:17:24.740
Again the students as you saw,
there's no new technology out on the

00:17:24.740 --> 00:17:26.530
receiver end for the students to receive.

00:17:26.600 --> 00:17:31.110
You don't have to deploy licenses or
buy content viewing software for your

00:17:31.200 --> 00:17:36.820
students or your target audience to
consume the data that you're producing.

00:17:37.390 --> 00:17:40.570
So what are we going to do in
Leopard Server to produce all this?

00:17:40.670 --> 00:17:44.270
Leopard Server will
include Podcast Producer.

00:17:44.790 --> 00:17:47.340
We're going to give you a technology
behind the scenes overview,

00:17:47.340 --> 00:17:50.230
drill down a little deeper,
let you show how some of the

00:17:50.250 --> 00:17:51.800
moving parts are working.

00:17:52.230 --> 00:17:54.920
We're going to show you how you
can scale and integrate this with

00:17:54.920 --> 00:17:56.190
any existing production systems.

00:17:56.210 --> 00:17:59.950
I was amazed at the complexity of
some of the production systems that

00:17:59.950 --> 00:18:02.960
some of the high end customers that
we've been discussing this with.

00:18:03.000 --> 00:18:06.080
And since there's
developers in the audience,

00:18:06.120 --> 00:18:10.160
I personally believe and I'm sure you
can easily see there are third party

00:18:10.160 --> 00:18:13.810
opportunities for you to leverage this
platform and build value on top of

00:18:13.820 --> 00:18:18.500
this platform coming out the wazoo.

00:18:18.760 --> 00:18:21.680
So what is podcast producer technology?

00:18:21.720 --> 00:18:24.630
The first thing is a new piece
of software that's going to be

00:18:24.680 --> 00:18:27.540
installed in every Leopard desktop
called the camera recording software.

00:18:27.540 --> 00:18:30.750
This is the software that was
running on this PowerBook that

00:18:30.750 --> 00:18:34.570
listens on the network for a
remote start and stop command.

00:18:34.760 --> 00:18:39.220
That will be authenticated, fully secure,
it can live on your private network.

00:18:39.270 --> 00:18:42.140
This software will use the
podcast producer server for

00:18:42.140 --> 00:18:44.600
authentication command and control.

00:18:44.640 --> 00:18:46.050
It uploads finished videos.

00:18:46.110 --> 00:18:47.680
This is not a streaming solution.

00:18:47.750 --> 00:18:49.380
I first thought this was streaming.

00:18:49.510 --> 00:18:51.960
While the video is being recorded,
it's being spooled to

00:18:51.960 --> 00:18:53.300
the local hard drive.

00:18:53.340 --> 00:18:55.750
Not until the video is finished.

00:18:55.950 --> 00:18:59.230
Does the camera upload
the video to the server?

00:18:59.260 --> 00:19:01.660
It can upload one video while
capturing another video,

00:19:01.660 --> 00:19:04.500
so you can do back-to-back lectures.

00:19:04.610 --> 00:19:08.050
So one lecture finishes,
the next lecture walks in,

00:19:08.130 --> 00:19:11.370
the new video is being recorded
while the old one is being uploaded.

00:19:11.430 --> 00:19:14.820
If you have a fast enough network,
we haven't seen many uploads

00:19:14.820 --> 00:19:19.000
even for an hour-long video take
over more than 10 or 12 minutes.

00:19:19.220 --> 00:19:21.780
We're designing it to run
on low-end headless CPUs,

00:19:21.780 --> 00:19:22.640
the Mac Mini.

00:19:22.750 --> 00:19:27.100
We really see the Mac Mini as a,
what's the retail price right now, $699?

00:19:27.170 --> 00:19:32.460
A $699 machine plus a $400 digital
video camera is a remote network

00:19:32.460 --> 00:19:35.220
controlled camera running headless.

00:19:35.880 --> 00:19:37.840
We're going to provide some
remote control software.

00:19:37.840 --> 00:19:40.840
You saw some remote control
software that we've integrated with

00:19:40.910 --> 00:19:43.920
the existing Tiger Blog server,
but we're also going to produce

00:19:43.920 --> 00:19:46.460
a piece of software that will
have a nice user interface,

00:19:46.460 --> 00:19:49.310
a photo booth or something,
that lets you see the list of

00:19:49.310 --> 00:19:52.900
cameras and record and interact in
a high quality Apple user interface.

00:19:53.300 --> 00:19:57.230
The server will enforce access controls.

00:19:57.240 --> 00:19:59.790
You will be able to say on a
per camera basis who's allowed

00:19:59.790 --> 00:20:02.770
to start and stop that camera,
who's allowed to submit videos,

00:20:02.770 --> 00:20:04.040
all of that sort of stuff.

00:20:04.060 --> 00:20:07.040
You will retain complete command
and control of this infrastructure.

00:20:07.040 --> 00:20:09.590
It's a course since I'm the
Open Directory Manager fully

00:20:09.590 --> 00:20:11.290
integrated with Open Directory.

00:20:16.400 --> 00:20:17.870
The file transfer technology.

00:20:17.930 --> 00:20:19.290
What did we use for file transfer?

00:20:19.350 --> 00:20:22.720
Well, we dug deep,
we found the most sophisticated

00:20:22.720 --> 00:20:27.080
technology we could and we used FTP.

00:20:27.080 --> 00:20:29.190
Workflows can be specified
during the submission process.

00:20:29.240 --> 00:20:34.790
An important part of this that
I'll be getting into later

00:20:35.080 --> 00:20:38.600
is there's not one workflow,
there's many workflows and for each

00:20:38.600 --> 00:20:38.600
job submission you can pick a workflow.

00:20:38.750 --> 00:20:42.100
If you have all your machines on
a shared file system like an XSAN,

00:20:42.100 --> 00:20:45.980
which could become increasingly
possible as technology moves forward,

00:20:45.980 --> 00:20:47.700
the system will use CP.

00:20:47.720 --> 00:20:48.810
We'll just use a file copy.

00:20:48.810 --> 00:20:50.720
We won't actually
transfer it over anything.

00:20:50.720 --> 00:20:53.620
So picture one of these systems
hooked up to a shared file system

00:20:53.640 --> 00:20:56.450
where we don't have to really
do anything over the network.

00:20:56.450 --> 00:21:00.380
We just need to copy the video from the
spool folder to the destination folder.

00:21:00.380 --> 00:21:03.440
So we'll do the right thing
depending on whether you're directly

00:21:03.440 --> 00:21:06.570
connected to the file system
or remotely connected over FTP.

00:21:07.890 --> 00:21:10.680
There will be a podcast producer
process and what this does is

00:21:10.680 --> 00:21:12.520
monitors and controls the cameras.

00:21:12.520 --> 00:21:15.950
It enforces access controls and
it's the thing that notices a new

00:21:15.960 --> 00:21:19.800
job showed up in one of the drop
folders and submits the job to Xgrid.

00:21:19.800 --> 00:21:20.790
That's all it does.

00:21:20.870 --> 00:21:22.390
It doesn't do any more than that.

00:21:22.390 --> 00:21:24.330
It just, it's kind of the coordinator.

00:21:24.330 --> 00:21:26.500
It's the conductor of the entire system.

00:21:29.990 --> 00:21:34.100
Xgrid plays a key role in
all of this technology.

00:21:34.150 --> 00:21:36.560
This is where we get a lot
of our processing scale.

00:21:36.560 --> 00:21:40.860
What's really cool about this technology
is podcast producer workflows are just

00:21:40.860 --> 00:21:45.000
Xgrid job templates with the file name
left as an exercise for the reader.

00:21:45.000 --> 00:21:51.040
So anything you can specify as an Xgrid
job can be run by this workflow engine.

00:21:51.040 --> 00:21:55.040
And when the file gets substituted,
the podcast producer engine fills the

00:21:55.130 --> 00:21:57.420
file name in and submits the Xgrid job.

00:21:57.900 --> 00:22:01.390
You can add additional
computers to Xgrid.

00:22:01.390 --> 00:22:03.910
When there's more than one job pending,
Xgrid will schedule the job on

00:22:03.910 --> 00:22:05.290
as many computers as you have.

00:22:05.370 --> 00:22:09.400
Like I said, if you go from 50 videos a
day to 50 videos an hour,

00:22:09.400 --> 00:22:13.680
you just give us money for computational
nodes for Xgrid and you now have a

00:22:13.680 --> 00:22:16.160
much more capable production system.

00:22:16.160 --> 00:22:20.640
For those of you who don't know,
Xgrid jobs can execute any Unix

00:22:20.640 --> 00:22:22.880
command line tool or script.

00:22:24.670 --> 00:22:28.860
What could you do with video processing
with any Unix command at your beck

00:22:28.860 --> 00:22:31.760
and call for your submitted video?

00:22:31.890 --> 00:22:34.030
Workflows can be easily customized.

00:22:34.080 --> 00:22:37.040
So if you just edit the workflow,
you've now got,

00:22:37.040 --> 00:22:41.200
if what we ship you as a workflow is only
12 steps and you want it to be 15 steps,

00:22:41.200 --> 00:22:44.080
go edit the workflow, boom, bada bing,
bada boom, you've got your own

00:22:44.080 --> 00:22:45.460
customized workflow engine.

00:22:45.460 --> 00:22:49.270
This is an opportunity for both end
user customers to customize this

00:22:49.270 --> 00:22:53.340
technology and for third parties to
provide useful workflows as recipes

00:22:53.340 --> 00:22:55.560
to the podcast producer platform.

00:22:58.360 --> 00:23:01.260
As I've said before,
workflows are just an X-Grid job.

00:23:01.260 --> 00:23:04.240
We are going to ship with several
common and useful workflows.

00:23:04.240 --> 00:23:06.180
You saw some of them here today.

00:23:06.180 --> 00:23:09.780
There's some other workflows we
already have defined like audio only.

00:23:09.780 --> 00:23:12.400
We have some screen scraping workflows.

00:23:12.400 --> 00:23:14.950
We have a lot of workflows that
the system is going to ship with.

00:23:14.960 --> 00:23:17.220
So it will be useful to you out the gate.

00:23:17.230 --> 00:23:20.790
But the workflows that we ship by
no means will be the limits of what

00:23:20.790 --> 00:23:22.660
the system is capable of doing.

00:23:22.660 --> 00:23:24.970
You can do anything for
which you could buy,

00:23:24.970 --> 00:23:28.220
beg, borrow, steal or actually code a
Unix command line tool.

00:23:28.300 --> 00:23:31.620
Some examples of basic operations
that will be supported by the

00:23:31.620 --> 00:23:35.490
system are video transcoding,
screen size, bit rate, codec choices,

00:23:35.640 --> 00:23:36.780
audio extraction.

00:23:36.800 --> 00:23:39.100
And where do you post the output?

00:23:39.150 --> 00:23:40.300
Do I post the output to email?

00:23:40.300 --> 00:23:41.530
Do I post it to QTSS?

00:23:41.540 --> 00:23:43.020
Do I post it to an RSS feed?

00:23:43.020 --> 00:23:44.540
Do I post it to an HTTP server?

00:23:44.540 --> 00:23:45.760
Do I post it to a file copy?

00:23:45.760 --> 00:23:49.320
Or do I ship the data off to
another Unix script which then

00:23:49.320 --> 00:23:51.790
processes the video even further?

00:23:52.690 --> 00:23:56.610
With the built-in command line
tools and workflow templates,

00:23:56.620 --> 00:23:59.840
it's already useful,
but you can customize them.

00:23:59.840 --> 00:24:02.330
We're going to do full
integration across the board.

00:24:02.410 --> 00:24:05.660
How many of you would like to see full
Teams integration with this product

00:24:05.680 --> 00:24:07.600
so that the podcast producers...

00:24:09.850 --> 00:24:11.000
We figured that out.

00:24:11.000 --> 00:24:15.070
One of my jobs after WWDC is to sit down
with the teams people and figure out

00:24:15.070 --> 00:24:15.950
how we're going to do the integration.

00:24:15.950 --> 00:24:18.240
The reason we're not as far
along with this is we've

00:24:18.240 --> 00:24:19.540
recently come up with this idea.

00:24:19.540 --> 00:24:21.300
You're seeing a very
early technology preview.

00:24:21.300 --> 00:24:26.000
Not only is this new technology for me,
and not only am I very excited about it,

00:24:26.000 --> 00:24:30.340
but it's so new to us that we're
still in the process of designing it.

00:24:30.340 --> 00:24:33.620
So you're getting a rare sneak peek
at a technology that isn't yet fully

00:24:33.620 --> 00:24:35.800
flushed out and we're still designing it.

00:24:35.800 --> 00:24:38.380
So we're going to be looking
for your feedback after

00:24:38.380 --> 00:24:39.780
WWDC and get your feedback.

00:24:39.800 --> 00:24:43.390
creative ideas as to what you
think the product should be.

00:24:44.100 --> 00:26:19.700
[Transcript missing]

00:26:20.100 --> 00:26:24.360
Again, I want to emphasize workflows are
just Xgrid jobs and Xgrid can execute

00:26:24.360 --> 00:26:27.190
any legal Unix script or command.

00:26:27.190 --> 00:26:30.080
So you can do anything with
these workflows you want to

00:26:30.090 --> 00:26:32.220
accommodate any deployment topology.

00:26:33.100 --> 00:26:35.770
So what would a simple podcast
producer deployment look like?

00:26:35.860 --> 00:26:38.760
Well, we recommend for the simple
configuration two cameras,

00:26:38.760 --> 00:26:41.830
no more than two cameras,
just two cameras, no.

00:26:42.620 --> 00:26:45.600
One server probably with an x-ray,
all the services running

00:26:45.600 --> 00:26:46.740
on a single server.

00:26:46.850 --> 00:26:51.730
That alone is enough to get all of
your content delivered to all of your

00:26:51.730 --> 00:26:54.000
students or all of your customers.

00:26:54.010 --> 00:26:58.000
A medium complexity podcast producer
solution might look more like this.

00:26:58.120 --> 00:27:01.410
Three cameras,
no more than three cameras.

00:27:01.950 --> 00:27:04.840
Talking to a slightly bigger
engine with computational nodes.

00:27:04.840 --> 00:27:07.470
I want you to note the correct
artwork for the computational

00:27:07.470 --> 00:27:08.500
nodes at the bottom.

00:27:08.510 --> 00:27:09.900
There's not three drive bays there.

00:27:09.900 --> 00:27:16.720
So this can process more videos
per hour than a single CPU could.

00:27:18.400 --> 00:27:21.900
Hosting to separate servers hosting web,
RSS and QTSS.

00:27:21.940 --> 00:27:24.510
The reason you would do this
is if you had a large student

00:27:24.510 --> 00:27:27.830
population doing a lot of downloads,
you don't want the web servers time

00:27:27.840 --> 00:27:30.120
impacting the video processing time.

00:27:30.120 --> 00:27:33.610
So you separate the CPUs to keep
the processing on separate CPUs.

00:27:33.620 --> 00:27:35.610
The students don't know the difference.

00:27:35.660 --> 00:27:38.090
They're still using the same software.

00:27:38.100 --> 00:27:40.810
They're still receiving the
links over email or however

00:27:40.820 --> 00:27:42.280
you choose to publish it.

00:27:42.920 --> 00:27:44.030
You can even go complex.

00:27:44.030 --> 00:27:47.180
If you think about it, there are some,
well, we're live recording this,

00:27:47.180 --> 00:27:49.140
multiple cameras in
this particular session.

00:27:49.140 --> 00:27:52.830
What's to stop this conference room from
having a podcast producer engine here

00:27:52.830 --> 00:27:55.880
at WWDC that after this lecture is over,
we're tying in with a very

00:27:55.880 --> 00:27:57.920
sophisticated production system.

00:27:57.920 --> 00:28:00.400
I don't know how many of you know
about the AV work that goes in

00:28:00.500 --> 00:28:01.990
to carry these conferences off.

00:28:01.990 --> 00:28:02.790
It's not simple.

00:28:02.790 --> 00:28:04.220
I tried to figure it out one day.

00:28:04.220 --> 00:28:05.080
I couldn't.

00:28:05.710 --> 00:28:09.390
This is a very complex production
enterprise and I think you can all

00:28:09.390 --> 00:28:13.440
see that this could very easily
integrate with podcast producer.

00:28:13.520 --> 00:28:17.310
So all the way from live video
capture with a built-in eyesight,

00:28:17.330 --> 00:28:20.940
which I won't recommend
for capturing lectures,

00:28:20.940 --> 00:28:24.700
all the way up to a high-def
camera submitting directly to the

00:28:24.750 --> 00:28:29.440
system through multiple broadcast
and video management technology.

00:28:32.410 --> 00:28:36.290
Third party integration
opportunities here are stunning,

00:28:36.290 --> 00:28:37.420
in my opinion.

00:28:37.420 --> 00:28:39.270
The basic feature set is
going to be very useful.

00:28:39.290 --> 00:28:41.230
The feature set that we ship
in the box is going to be

00:28:41.230 --> 00:28:43.660
useful to an extraordinarily
large number of customers.

00:28:43.660 --> 00:28:47.210
But Apple's not going to provide
everything on this particular thing.

00:28:47.220 --> 00:28:50.070
There are lots and lots and lots
of opportunities for developers

00:28:50.070 --> 00:28:51.420
to enhance this platform.

00:28:51.420 --> 00:28:54.800
The three integration points that
I'm going to go through today

00:28:54.800 --> 00:28:58.500
are direct content submission,
enhancement to workflow choices,

00:28:58.500 --> 00:29:01.660
and post-processing the
results of a given workflow.

00:29:04.180 --> 00:29:05.340
Direct content submission.

00:29:05.340 --> 00:29:08.460
How many of you would like a save as
in your favorite video app that saves

00:29:08.460 --> 00:29:12.080
directly to this system so I don't
have to use the finder to do a copy?

00:29:12.080 --> 00:29:16.000
So the first integration point is if you
have an app that produces video content,

00:29:16.000 --> 00:29:17.910
integrate it directly into that app.

00:29:17.910 --> 00:29:21.100
We'll work with you to define
the technology and the APIs.

00:29:21.100 --> 00:29:23.300
The submission protocol will be FTP.

00:29:23.300 --> 00:29:25.500
CF Network makes it trivial to use FTP.

00:29:25.560 --> 00:29:28.700
It should be really,
really easy for your application to

00:29:28.770 --> 00:29:33.000
directly support direct submission
to the podcast producer system.

00:29:34.100 --> 00:29:39.830
The second integration point is
the application of the product.

00:29:39.830 --> 00:29:45.060
The application is a very simple
and easy way to use the FTP.

00:29:45.060 --> 00:29:50.970
You can use it to create a video,
to post your video or to use the FTP.

00:29:50.970 --> 00:29:54.590
We'll talk about that in a little bit.

00:29:55.450 --> 00:29:58.840
The second integration point
I think is very obvious,

00:29:58.920 --> 00:30:00.630
workflow enhancements.

00:30:00.670 --> 00:30:03.560
I don't think the 12 or 14 workflows
we're going to provide are going to cover

00:30:03.610 --> 00:30:05.230
everybody's requirements in the audience.

00:30:05.260 --> 00:30:08.800
We're going to need command line tools
that do really clever things with video.

00:30:08.800 --> 00:30:10.000
We're going to need a lot of stuff.

00:30:10.010 --> 00:30:12.960
The sorts of high-end
processing that could be done

00:30:12.960 --> 00:30:14.860
with this are also stunning.

00:30:14.860 --> 00:30:20.480
Could you do facial recognition on the
video and produce a list of who attended?

00:30:20.480 --> 00:30:24.400
Would be a very interesting
podcast producer job.

00:30:25.400 --> 00:30:29.350
Again, Xgrid jobs are simply jobs
describing a set of commands

00:30:29.350 --> 00:30:31.210
to be executed on the grid.

00:30:31.250 --> 00:30:33.920
If you have a command line
tool that can process video,

00:30:34.010 --> 00:30:36.400
you can make it part of
the podcast workflow.

00:30:36.400 --> 00:30:41.840
If you write new tools or scripts,
I really don't see an end to this.

00:30:41.950 --> 00:30:44.300
iMovie plugins that do
fancy video transformations,

00:30:44.300 --> 00:30:45.400
a huge market for that.

00:30:45.400 --> 00:30:48.490
How many of you are going to
want video transformations on

00:30:48.500 --> 00:30:50.400
your podcast producer videos?

00:30:50.400 --> 00:30:53.760
I think we can integrate
a lot of that stuff.

00:30:54.380 --> 00:30:56.590
The third one is kind of
a flavor of the first one,

00:30:56.590 --> 00:30:58.540
which is post-processing the results.

00:30:58.540 --> 00:31:01.710
And I think the only difference
between post-processing and modifying a

00:31:02.010 --> 00:31:04.660
workflow is when is the processing done.

00:31:04.960 --> 00:31:08.240
And in this case the processing
could be done after the

00:31:08.240 --> 00:31:10.060
video is published or posted.

00:31:10.060 --> 00:31:13.390
So does anyone here have a
digital asset management system

00:31:13.390 --> 00:31:15.060
they've deployed on campus?

00:31:15.140 --> 00:31:15.730
I don't see any.

00:31:15.750 --> 00:31:16.880
Okay, a couple.

00:31:16.980 --> 00:31:18.680
Yeah,
certainly post-processing here would

00:31:18.680 --> 00:31:21.900
be automatic posting of the digital
assets to that existing system.

00:31:21.900 --> 00:31:24.840
That could be something added to the
workflow or added to the scripts.

00:31:26.960 --> 00:31:31.660
So the real issue here is whether
the process works during the process

00:31:31.660 --> 00:31:33.960
or does it work after the process.

00:31:33.960 --> 00:31:36.390
Either way,
I think it's a huge opportunity

00:31:36.390 --> 00:31:39.970
for third parties and consumers
to customize this platform.

00:31:40.590 --> 00:31:44.610
So in summation,
podcast producer is a new

00:31:44.610 --> 00:31:46.740
and powerful set of services.

00:31:46.760 --> 00:31:50.730
We think it makes deploying and
hosting and publishing podcasts

00:31:50.730 --> 00:31:52.780
easier than it's ever been.

00:31:52.850 --> 00:31:54.720
We're using standards
throughout the product.

00:31:54.790 --> 00:31:55.650
There's no mystery.

00:31:55.850 --> 00:31:57.040
There's no mystery meat here.

00:31:57.040 --> 00:31:58.910
All the standards are laid bare.

00:31:59.090 --> 00:32:00.300
It's all using technology.

00:32:00.300 --> 00:32:01.540
You've all already deployed.

00:32:01.540 --> 00:32:06.080
So this allows you to easily mix
and match and substitute the system.

00:32:06.080 --> 00:32:08.780
We're going to add server
command and control so that you

00:32:08.780 --> 00:32:10.560
can actually manage the system.

00:32:10.560 --> 00:32:12.390
If you have 500 cameras,
you want to know who's

00:32:12.390 --> 00:32:14.460
using those cameras,
when they're using the cameras,

00:32:14.460 --> 00:32:16.870
and make sure that the students
aren't stopping the lectures

00:32:16.870 --> 00:32:18.200
in the middle of the lecture.

00:32:18.950 --> 00:32:22.280
So all the major access controls
and we'll be fully integrated with

00:32:22.280 --> 00:32:24.100
server admin groups and SACLs.

00:32:24.100 --> 00:32:25.990
How many people use
SACLs on Tiger Server?

00:32:25.990 --> 00:32:27.820
Service access controls?

00:32:27.820 --> 00:32:30.680
We're going to be using SACL models
on the camera so you can lock down a

00:32:30.690 --> 00:32:33.980
camera then only these five instructors
can start and stop this camera.

00:32:36.330 --> 00:32:39.310
And we're going to integrate the
Mac OS X Server technologies,

00:32:39.310 --> 00:32:44.660
QTSS, Open Directory, Teams, Wikis,
any number of technologies,

00:32:44.750 --> 00:32:46.880
because there could be a lot
of different places that you

00:32:46.880 --> 00:32:47.870
want this stuff published.

00:32:47.940 --> 00:32:49.900
I learned a new feature the other day.

00:32:49.900 --> 00:32:53.730
The calendar server can have enclosures.

00:32:54.280 --> 00:32:57.520
Well, picture posting a video for an
event that's scheduled that every,

00:32:57.560 --> 00:33:01.290
maybe every day on Wednesday, you know,
that you go over last week's lecture.

00:33:01.290 --> 00:33:04.970
Well, you could include the lecture in
the meeting maker attachment or

00:33:04.970 --> 00:33:08.220
not the meeting maker attachment,
the iCal server attachment

00:33:08.220 --> 00:33:10.220
that automatically gets posted.

00:33:10.220 --> 00:33:12.140
I think the possibilities
here are endless.

00:33:14.500 --> 00:33:17.030
So podcast producer is going
to allow you to manage,

00:33:17.040 --> 00:33:20.000
publish and produce podcasts on
a scale never before considered.

00:33:20.000 --> 00:33:22.850
I mean,
I could easily see the system managing

00:33:22.850 --> 00:33:24.700
five to six hundred videos an hour.

00:33:25.590 --> 00:33:27.830
So for more information,
you can contact our

00:33:27.900 --> 00:33:30.160
technology evangelist,
Skip Levens.

00:33:30.200 --> 00:33:32.960
I'm sure some of you will be
ringing his phone right away.