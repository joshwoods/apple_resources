WEBVTT

00:00:11.030 --> 00:00:12.620
Hi everybody.

00:00:12.730 --> 00:00:14.360
My name is Edwin.

00:00:14.450 --> 00:00:18.400
As you can see behind me today
we're talking about iOS accessories.

00:00:18.570 --> 00:00:21.420
So, on its own,
an iPhone or any other iOS

00:00:21.420 --> 00:00:23.490
device is pretty amazing,
right?

00:00:23.520 --> 00:00:26.930
You can do all these amazing
things besides talking on the

00:00:27.140 --> 00:00:28.900
phone with the power of apps.

00:00:28.910 --> 00:00:33.190
But there are some things that an iPhone,
due to its size and shape,

00:00:33.190 --> 00:00:35.900
is probably not that well suited for.

00:00:35.900 --> 00:00:38.610
For instance,
you probably wouldn't want to use

00:00:38.610 --> 00:00:40.400
this to open a bottle of beer.

00:00:40.450 --> 00:00:42.680
Now,
I had these great slides lined up for you

00:00:42.680 --> 00:00:46.440
today to tell you how you would be able
to build a beer bottle opening accessory

00:00:46.500 --> 00:00:48.320
and then buy an app to go along with it.

00:00:48.320 --> 00:00:50.260
It would be really fun.

00:00:50.500 --> 00:00:53.790
But unfortunately I was told at the last
minute that there are some of you in

00:00:53.790 --> 00:00:55.840
the audience who are actually underage.

00:00:55.960 --> 00:01:00.400
And so I regret to inform you that
we can't talk about beer today,

00:01:00.400 --> 00:01:02.390
but there are lots of other
things we can talk about.

00:01:02.400 --> 00:01:06.970
So, today we're going to show you
first how can you make your apps

00:01:07.130 --> 00:01:09.880
work great with iOS accessories.

00:01:09.950 --> 00:01:12.730
So, we're going to talk about the
external accessory framework,

00:01:12.890 --> 00:01:15.900
now playing metadata,
and remote control of some accessories.

00:01:15.900 --> 00:01:20.140
We will also give you all in the audience
who might be interested in how to get

00:01:20.140 --> 00:01:22.900
started developing your own accessories.

00:01:22.900 --> 00:01:26.520
So, to give a little bit of a
primer to the made for iPod

00:01:26.570 --> 00:01:31.270
or iPhone/iPad or MFI program,
we'll also talk about standards-based

00:01:31.270 --> 00:01:33.900
Bluetooth interfaces that exist on iOS.

00:01:33.900 --> 00:01:37.300
And last but not least,
I know a lot of you in the audience

00:01:37.300 --> 00:01:39.400
are really excited about AirPlay.

00:01:39.400 --> 00:01:40.400
So, let's get started.

00:01:40.400 --> 00:01:43.600
And just for you guys,
how do you want to make your

00:01:43.600 --> 00:01:45.360
apps work great with accessories?

00:01:46.520 --> 00:01:50.180
Some of you may know already about
the external accessory framework.

00:01:50.290 --> 00:01:53.120
It's probably the most
well-known interface for apps

00:01:53.120 --> 00:01:54.450
to work with accessories.

00:01:54.450 --> 00:01:58.050
And it's responsible for really
great inventions like this

00:01:58.230 --> 00:02:02.380
blood pressure cuff behind me,
which can communicate,

00:02:02.430 --> 00:02:07.080
take my blood pressure,
communicate with the app

00:02:07.080 --> 00:02:08.600
running on the phone,
and it'll probably remind me afterwards

00:02:08.600 --> 00:02:08.600
that I really need to get in shape.

00:02:09.080 --> 00:02:11.470
Working with this
framework is pretty simple.

00:02:11.640 --> 00:02:17.540
Your app has to declare which external
accessory or EA protocols it supports.

00:02:17.540 --> 00:02:20.120
And of course these have to be
protocols which are also supported

00:02:20.120 --> 00:02:22.200
by the accessory you're working with.

00:02:22.260 --> 00:02:24.150
Next,
your app will need to handle incoming

00:02:24.150 --> 00:02:28.340
connections from that accessory so
that you know the accessory is there.

00:02:28.400 --> 00:02:30.800
Then next,
open a session with the accessory.

00:02:30.870 --> 00:02:32.800
And after that,
interact with the accessory.

00:02:32.800 --> 00:02:35.900
You get a read and write stream
that you can use to communicate

00:02:35.900 --> 00:02:38.030
information to and from the accessory.

00:02:38.210 --> 00:02:41.590
It's entirely up to you and the
accessory developer to decide what

00:02:41.590 --> 00:02:43.220
data to send over that stream.

00:02:43.430 --> 00:02:45.220
It's pretty flexible.

00:02:46.150 --> 00:02:49.710
Now, in iOS 5,
we actually introduced the ability for

00:02:49.710 --> 00:02:52.860
EA sessions to operate in the background.

00:02:52.860 --> 00:02:56.060
And that's a big deal because it now
means that your app can communicate

00:02:56.150 --> 00:02:59.230
with an accessory even after it has
been backgrounded and the user is

00:02:59.230 --> 00:03:01.260
using another app in the foreground.

00:03:02.330 --> 00:03:04.700
We do have a couple of
requirements though.

00:03:04.890 --> 00:03:09.530
First, your app must have a means for the
user to explicitly start and stop

00:03:09.530 --> 00:03:14.100
communication with the accessory
from your app's user interface.

00:03:14.820 --> 00:03:19.250
Next, your app will need to declare to
iOS that your app does work with

00:03:19.250 --> 00:03:20.700
accessories in the background.

00:03:20.700 --> 00:03:25.570
And you do this via a UI background
modes key in one of your plist files.

00:03:26.740 --> 00:03:29.720
And last but not least,
accessories must use different

00:03:29.720 --> 00:03:31.940
protocols for each concurrent app.

00:03:31.970 --> 00:03:32.940
What does that mean?

00:03:33.040 --> 00:03:38.660
Well, it means that if you have one
accessory connected to one iOS device,

00:03:38.660 --> 00:03:41.710
it is now possible,
thanks to backgrounding,

00:03:41.710 --> 00:03:47.820
for one app to run in the foreground and
another app to run in the background,

00:03:47.820 --> 00:03:53.360
and both of these apps can talk
to the accessory at the same time.

00:03:53.360 --> 00:03:54.600
It's a pretty neat capability.

00:03:54.600 --> 00:03:54.600
But

00:03:55.220 --> 00:03:59.670
Both of these apps and the accessory
must use different EA protocols

00:03:59.960 --> 00:04:01.540
to communicate with each other.

00:04:01.540 --> 00:04:05.270
That is the one thing I really want
you all to take from this slide.

00:04:07.480 --> 00:04:10.690
And so to close out the EA framework,
I'd like to remind you all that

00:04:11.600 --> 00:04:13.590
accessories can come and go at any time.

00:04:13.590 --> 00:04:19.780
Users can plug in the accessory or
unplug it at really any time they choose.

00:04:19.850 --> 00:04:22.620
This doubly applies if you're working
with wireless accessories over,

00:04:22.640 --> 00:04:23.400
say, Bluetooth.

00:04:23.400 --> 00:04:27.400
So make sure that your app deals
gracefully with these events.

00:04:27.540 --> 00:04:29.700
Second,
don't assume that the communication

00:04:29.780 --> 00:04:32.940
between your app and the accessory
is completely error-free.

00:04:33.010 --> 00:04:35.400
Again, think about sudden
disconnects and reconnects,

00:04:35.400 --> 00:04:39.040
but also think about wireless accessories
that might be right on the edge of

00:04:39.040 --> 00:04:43.490
range or the accessory might be close
to running low on battery power,

00:04:43.490 --> 00:04:44.000
etc.

00:04:44.770 --> 00:04:47.130
Keep security in mind.

00:04:47.130 --> 00:04:51.180
If that was your blood sugar information
traveling from that accessory to

00:04:51.180 --> 00:04:54.100
that app running on the phone there,

00:04:54.500 --> 00:04:57.390
If you feel a little bit uncomfortable
about that being out in the open,

00:04:57.500 --> 00:04:59.990
then chances are your customers
will feel the same way.

00:05:00.130 --> 00:05:03.110
So think about that when you
design the protocol between

00:05:03.280 --> 00:05:04.690
the accessory and your app.

00:05:04.940 --> 00:05:08.010
And last but not least,
work closely with the

00:05:08.020 --> 00:05:09.380
accessory developer.

00:05:09.440 --> 00:05:13.280
This is a classical intersection
between hardware and software.

00:05:13.320 --> 00:05:17.060
And only close cooperation and
mutual respect and understanding

00:05:17.060 --> 00:05:21.700
on both sides is going to result
in truly seamless user experiences.

00:05:22.210 --> 00:05:24.410
Of course,
if you are developing the accessory

00:05:24.410 --> 00:05:27.780
and developing the app yourself,
then you should have no

00:05:27.780 --> 00:05:30.220
problem agreeing with yourself.

00:05:32.330 --> 00:05:35.700
Next,
let's talk about now playing metadata.

00:05:35.830 --> 00:05:39.640
Some of you may be developing apps that
can play media streams from external

00:05:39.690 --> 00:05:43.200
sources like streaming music or video,
media streams.

00:05:43.410 --> 00:05:47.650
You may not know that metadata about
the current playing stream can be sent

00:05:47.650 --> 00:05:52.100
automatically from iOS to any connected
iOS accessory that supports this feature.

00:05:52.200 --> 00:05:56.970
A good example is this TV behind
me where you can see that data

00:05:56.970 --> 00:06:01.460
about the current playing song,
its artist and its album

00:06:01.790 --> 00:06:04.190
artwork are all up on screen.

00:06:04.710 --> 00:06:06.080
It isn't just TVs though.

00:06:06.190 --> 00:06:09.880
There are lots of cars out there
with iPod and iPhone integration that

00:06:09.880 --> 00:06:13.540
will also happily accept and display
this metadata right in the dashboard.

00:06:13.660 --> 00:06:15.410
It's pretty cool.

00:06:16.600 --> 00:06:19.100
So now that you understand
just how neat this feature is,

00:06:19.190 --> 00:06:20.650
how do you make your app
take advantage of it?

00:06:20.820 --> 00:06:23.610
Well, not too hard at all.

00:06:23.920 --> 00:06:27.200
Sign up with the Now Playing Info
Center and then start

00:06:27.200 --> 00:06:28.940
providing information.

00:06:28.990 --> 00:06:31.740
We heavily recommend that you
provide as much information as

00:06:31.810 --> 00:06:35.820
possible off this list we have up
here on the screen and provide that

00:06:35.820 --> 00:06:38.170
information as often as possible.

00:06:38.250 --> 00:06:41.270
True, maybe the accessory you have in
front of you for testing doesn't

00:06:41.270 --> 00:06:44.590
display all this metadata,
but I am very certain that

00:06:44.590 --> 00:06:47.990
there is some accessory out
there in the world that does.

00:06:48.100 --> 00:06:52.170
And so why not give as much information
as possible to that accessory so that

00:06:52.170 --> 00:06:54.190
it can take full advantage of it?

00:06:56.840 --> 00:07:00.570
Next, we'd like to talk about
remote control events.

00:07:00.670 --> 00:07:02.700
Those same accessories I just
talked to you about that

00:07:02.860 --> 00:07:06.450
display now playing metadata,
many of them can also send user

00:07:06.670 --> 00:07:09.350
input events back to your app.

00:07:09.480 --> 00:07:12.880
So, good example,
if you have an accessory out there that

00:07:13.060 --> 00:07:17.550
receives metadata and also has a play
or pause or a next track button on it,

00:07:17.650 --> 00:07:21.820
your app can sign up to receive
those events back to your app.

00:07:23.340 --> 00:07:25.600
Adding support for this
is also really easy.

00:07:25.660 --> 00:07:30.190
Just call the method you see behind
me on the screen and then implement an

00:07:30.190 --> 00:07:33.240
event handler for each incoming event.

00:07:35.020 --> 00:07:36.790
These events can come
from all sorts of sources,

00:07:36.790 --> 00:07:39.880
starting first and foremost with a
source that isn't even an accessory.

00:07:40.110 --> 00:07:43.500
The iOS lock screen can
generate these events.

00:07:43.640 --> 00:07:47.520
So that means that a user can interact
with your app without having to

00:07:47.520 --> 00:07:49.740
unlock their phone or iOS device.

00:07:50.560 --> 00:07:54.020
The headphone remotes that come in the
box with every single iPhone and have

00:07:54.020 --> 00:07:58.040
the little button on the tap on the
cord also can generate these events.

00:07:58.190 --> 00:08:01.660
And so can a large number
of MFI accessories including

00:08:01.720 --> 00:08:03.450
lots of cars out there.

00:08:04.120 --> 00:08:07.300
Last but not least,
AirPlay speaker endpoints and

00:08:07.300 --> 00:08:11.190
Bluetooth AVRCP controllers can
also generate remote control

00:08:11.190 --> 00:08:12.420
events that your app can receive.

00:08:12.620 --> 00:08:15.000
So as you can see,
there's really no reason why your media

00:08:15.000 --> 00:08:19.840
playback app should not be listening
for and responding to these events.

00:08:21.810 --> 00:08:25.130
So, let's switch gears.

00:08:25.240 --> 00:08:27.600
Let's say you want to
make your own accessory.

00:08:27.670 --> 00:08:30.850
If so, great, we'd love to have you.

00:08:31.310 --> 00:08:33.440
What should you think of
before you get started?

00:08:33.580 --> 00:08:37.500
Well, we would heavily encourage that
you think about whether you need

00:08:37.500 --> 00:08:39.580
to be in the MFI program or not.

00:08:39.580 --> 00:08:41.820
And we'll talk more
about that in a minute.

00:08:42.470 --> 00:08:45.300
Second,
think about what accessory interface

00:08:45.370 --> 00:08:47.510
features you want to support.

00:08:47.680 --> 00:08:51.240
And last but not least,
think about whether you as an

00:08:51.320 --> 00:08:55.660
accessory developer want to also be
the only party writing apps for your

00:08:55.660 --> 00:08:59.360
accessory or whether you want to
make an accessory that works great

00:08:59.360 --> 00:09:03.790
with any of the apps in the app store
that can work with your accessory.

00:09:04.270 --> 00:09:07.390
These three questions interplay
with each other quite a bit.

00:09:07.390 --> 00:09:12.770
There are ways and accessory interfaces
that Apple fully supports and encourages.

00:09:13.050 --> 00:09:24.630
and other users.

00:09:25.790 --> 00:09:25.790
There are also accessory
interface features that only

00:09:25.790 --> 00:09:25.790
make sense if your accessory only
intends to work with one app.

00:09:25.790 --> 00:09:25.790
Choose carefully.

00:09:27.130 --> 00:09:29.000
Let's talk about MFI accessories.

00:09:29.000 --> 00:09:34.000
First, there's this logo
behind me on the screen.

00:09:34.110 --> 00:09:37.820
The Made for iPod,
iPhone and iPad badge is a mark that

00:09:37.950 --> 00:09:40.570
everyone in the world understands.

00:09:40.730 --> 00:09:43.560
They can walk into a store and if
they're looking for products that

00:09:43.560 --> 00:09:47.210
work great with their iOS devices,
they just look for this badge

00:09:47.540 --> 00:09:49.380
and out the door they go.

00:09:49.500 --> 00:09:53.050
They can buy with confidence and
that's why we definitely encourage

00:09:53.050 --> 00:09:57.100
accessibility developers such as
yourselves who want to specifically

00:09:57.100 --> 00:10:03.470
target and optimize your experiences
for iOS to enroll in the program.

00:10:04.350 --> 00:10:08.640
Signing up on the program also gives you
access to lots of additional information.

00:10:08.670 --> 00:10:11.170
Of course, there's technical information
and specifications and

00:10:11.560 --> 00:10:14.470
certain components and such,
but there's also assistance with

00:10:14.910 --> 00:10:18.300
product certification and of course
the logos and compatibility icons.

00:10:18.310 --> 00:10:23.000
And last but not least,
even though it's not

00:10:23.000 --> 00:10:25.990
mentioned on this slide,
you can get direct help

00:10:25.990 --> 00:10:25.990
from Apple engineers who
can answer your questions.

00:10:27.450 --> 00:10:29.160
So what's in the MFI program?

00:10:29.180 --> 00:10:33.960
Well, AirPlay accessories
are in the MFI program.

00:10:33.960 --> 00:10:36.480
So are AirPrint printers.

00:10:37.500 --> 00:10:40.270
The headphone and remote microphone
interface that you see on hundreds

00:10:40.280 --> 00:10:44.880
of third-party headsets around the
world is also part of the MFI program.

00:10:46.400 --> 00:11:08.300
[Transcript missing]

00:11:10.650 --> 00:11:13.900
Let's start with the
most basic feature here.

00:11:13.970 --> 00:11:16.120
Everyone loves power.

00:11:16.490 --> 00:11:20.510
If you're thinking about making an
accessory that docks with an iOS device,

00:11:20.590 --> 00:11:24.390
we strongly recommend that you find a
way to provide power to the Apple device.

00:11:24.400 --> 00:11:26.400
All of your users and
customers will appreciate that.

00:11:26.400 --> 00:11:29.360
It means that they can use your
accessory without having to worry

00:11:29.400 --> 00:11:33.400
about whether their battery is
going to drain in the process.

00:11:33.400 --> 00:11:36.430
Now that said,
there are some valid and very

00:11:36.460 --> 00:11:39.720
useful cases when it makes
sense for an accessory to draw

00:11:39.720 --> 00:11:41.400
power from an Apple device.

00:11:41.400 --> 00:11:47.180
That blood glucose monitor I showed
you earlier is a good example.

00:11:47.640 --> 00:11:51.490
But in general, we recommend that you not
treat iPhone as a battery.

00:11:51.610 --> 00:11:55.810
Your customers will appreciate that
because they won't have to worry.

00:11:57.950 --> 00:12:01.020
I also want to point out to you
that the dock connector supports

00:12:01.020 --> 00:12:03.200
USB audio and MIDI interfaces.

00:12:03.200 --> 00:12:06.330
Over the past year,
this interface has become really

00:12:06.330 --> 00:12:09.090
popular and there are lots of new
accessories coming to market and new

00:12:09.090 --> 00:12:12.450
apps all the time related to music
and we're very happy to see that.

00:12:12.570 --> 00:12:18.950
Certainly GarageBand for
iOS has definitely been a

00:12:18.950 --> 00:12:18.950
part of this trend as well.

00:12:21.080 --> 00:12:24.750
This interface is supported
by most recent iOS devices,

00:12:24.750 --> 00:12:27.000
starting with the iPhone 3GS.

00:12:27.000 --> 00:12:29.660
And if you're thinking of
writing an app that wants to

00:12:29.660 --> 00:12:30.990
work with these accessories,
well,

00:12:31.000 --> 00:12:32.300
you don't really have to think that much.

00:12:32.370 --> 00:12:34.990
Just use the Core Audio or
Core MIDI frameworks.

00:12:35.140 --> 00:12:39.000
These accessories will show up as
additional input or output paths.

00:12:39.000 --> 00:12:40.450
It's that simple.

00:12:42.240 --> 00:12:45.760
New in iOS 6,
we'd like to tell you all that

00:12:46.110 --> 00:12:48.720
it is now possible to build
accessories that support more

00:12:48.760 --> 00:12:51.120
than two channels of audio output.

00:12:52.250 --> 00:12:54.960
And this means that, yes,
you can indeed write apps

00:12:54.960 --> 00:12:57.800
or design accessories that
have more than two speakers.

00:12:57.830 --> 00:13:01.880
We definitely look forward to seeing your
apps and your accessories start taking

00:13:01.880 --> 00:13:03.910
advantage of this feature real soon.

00:13:06.590 --> 00:13:10.420
Now let's switch gears
to the IAP protocol.

00:13:10.540 --> 00:13:15.180
The IAP protocol is responsible
for a bunch of interesting features

00:13:15.180 --> 00:13:18.490
that we feel really enhance
the user experience for iOS.

00:13:18.640 --> 00:13:23.320
These are user experience
features that you won't find,

00:13:23.620 --> 00:13:25.680
say, in other platforms.

00:13:25.680 --> 00:13:28.790
And that's why we really encourage
accessory developers such as

00:13:28.950 --> 00:13:32.100
yourselves to make use of them
and create a product which is

00:13:32.100 --> 00:13:34.590
made for iPhone or made for iPad.

00:13:35.320 --> 00:13:37.540
For example,
let's say you've built a great

00:13:37.540 --> 00:13:39.960
app to work with your accessory.

00:13:39.980 --> 00:13:43.860
Well, if your accessory requires
that app to operate,

00:13:43.900 --> 00:13:47.570
how are you going to get your customer
to download and install the app once

00:13:47.660 --> 00:13:49.740
they've taken it home from the store?

00:13:49.740 --> 00:13:55.660
You could put a piece of paper in the
box or send them an email with a URL.

00:13:55.660 --> 00:13:56.050
But you know what?

00:13:56.160 --> 00:13:57.340
We think we have a better way.

00:13:57.610 --> 00:14:01.700
If you follow the points that
we put behind me here on the

00:14:01.760 --> 00:14:05.050
slide and your accessory informs
iOS of its preferred app,

00:14:05.050 --> 00:14:07.790
then as soon as they plug
it in for the first time,

00:14:07.790 --> 00:14:09.710
they get sent to the app store.

00:14:09.710 --> 00:14:11.820
Couldn't really be any simpler.

00:14:14.380 --> 00:14:16.600
This also, by the way,
applies if your app needs

00:14:16.690 --> 00:14:20.890
to launch or run in order to
operate with the accessory.

00:14:21.980 --> 00:14:24.510
If your accessory identifies
itself correctly to iOS,

00:14:24.690 --> 00:14:28.080
then it can launch apps, including,
of course, your app that you wrote

00:14:28.080 --> 00:14:29.000
for the accessory.

00:14:29.100 --> 00:14:33.230
And the user will get an alert asking
if they want to launch the app.

00:14:33.360 --> 00:14:36.610
They won't need to search through the
hundreds of icons for other apps they

00:14:36.610 --> 00:14:38.580
may have installed on their device.

00:14:38.670 --> 00:14:41.410
And quite frankly,
they won't even need to remember the name

00:14:41.410 --> 00:14:43.520
of your app because it just shows up.

00:14:43.660 --> 00:14:45.190
It's pretty cool.

00:14:48.220 --> 00:14:50.800
We have a similar
feature in IAP for Wi-Fi.

00:14:50.800 --> 00:14:55.440
Some of you may be building accessories
that have integrated Wi-Fi modules

00:14:55.440 --> 00:14:58.690
and have written an app to communicate
with the accessory of Wi-Fi.

00:14:58.800 --> 00:15:03.260
Well, I'm sure all of us in the audience
can identify with having to get a

00:15:03.420 --> 00:15:09.960
newly purchased Wi-Fi peripheral
on the network for the first time.

00:15:10.080 --> 00:15:12.580
We think we have a better way to do this.

00:15:13.480 --> 00:15:17.980
If you implement IAP Wi-Fi login sharing,
then your user manual for

00:15:17.980 --> 00:15:20.690
your accessory is three steps.

00:15:21.350 --> 00:15:24.120
Step 1: Connect.

00:15:24.250 --> 00:15:28.200
Step 2:
Push the Setup button on your accessory.

00:15:28.250 --> 00:15:31.390
And Step 3: Say Yes.

00:15:31.480 --> 00:15:35.660
Your accessory will then receive the
network information and password for

00:15:35.660 --> 00:15:39.200
that Wi-Fi network that the iOS device
is currently connected to on the spot.

00:15:39.400 --> 00:15:42.830
Your accessory can go online
and you're off and running.

00:15:43.400 --> 00:15:45.500
This mechanism for the Wi-Fi setup,
by the way,

00:15:45.500 --> 00:15:49.370
is heavily recommended if you're
thinking about building AirPlay speakers.

00:15:52.150 --> 00:15:54.140
A similar approach exists for Bluetooth.

00:15:54.270 --> 00:15:58.170
Let's say you've built an accessory
that also has a Bluetooth module,

00:15:58.190 --> 00:16:02.010
say to act as a headset or a speaker.

00:16:03.210 --> 00:16:06.100
You don't necessarily need to send
them to the Settings preference pane.

00:16:06.280 --> 00:16:10.320
Instead, ask them to connect their
accessory to the device once,

00:16:10.320 --> 00:16:16.690
and if your accessory is set up to
inform iOS of the Bluetooth MAC addresses

00:16:17.220 --> 00:16:21.040
that are part of that accessory,
then iOS will start the pairing process

00:16:21.040 --> 00:16:24.980
automatically if those components
have not been previously paired.

00:16:26.240 --> 00:16:29.880
I'd also like to highlight that there
are several features in IAP which are

00:16:30.050 --> 00:16:32.980
specifically targeted at accessibility.

00:16:33.580 --> 00:16:35.200
We at Apple care a lot
about accessibility.

00:16:35.200 --> 00:16:39.600
We want our products and our devices
to be accessible to all users.

00:16:39.700 --> 00:16:42.410
And to that end,
we have also created several

00:16:42.410 --> 00:16:46.800
accessory interface features to
help those users in particular.

00:16:48.430 --> 00:16:52.900
With technologies like VoiceOver,
our screen reader for the blind,

00:16:52.940 --> 00:16:56.910
as well as Assistive Touch for users
that have difficulty using more

00:16:57.070 --> 00:17:02.380
than one finger to operate iOS,
accessories can use IAP to augment those

00:17:02.450 --> 00:17:11.360
two features and actually give users who
have difficulty touching the screen at

00:17:11.360 --> 00:17:13.990
all the ability to use an iOS device.

00:17:13.990 --> 00:17:13.990
It's pretty neat.

00:17:15.490 --> 00:17:22.500
And in iOS 6, we have added support for
made-for-iPhone hearing aids.

00:17:22.900 --> 00:17:25.670
In addition to all the other great
features like FaceTime that we

00:17:25.670 --> 00:17:27.740
have for the hearing impaired.

00:17:27.920 --> 00:17:32.350
Made for iPhone hearing aids will be
coming from top manufacturers around

00:17:32.350 --> 00:17:36.940
the world in the not so distant future.

00:17:37.080 --> 00:17:41.080
And with them will come the ability
to grant hearing impaired users the

00:17:41.080 --> 00:17:45.900
ability to listen to high quality
wireless audio streaming direct from

00:17:45.920 --> 00:17:49.290
their iOS device to the hearing aids.

00:17:49.800 --> 00:17:52.630
And not only that,
we've baked in the ability for

00:17:52.740 --> 00:17:56.790
these hearing aids to be adjusted
and controlled straight from iOS,

00:17:56.790 --> 00:18:00.440
so you can change the volume and switch
between different programs on the spot.

00:18:00.540 --> 00:18:04.730
You will no longer need to
place your phone in the best

00:18:04.730 --> 00:18:09.040
position in order to hear someone
talking on the phone correctly.

00:18:09.130 --> 00:18:13.440
And you will not need to wear a dongle
around your neck to bridge between

00:18:13.950 --> 00:18:16.380
the hearing aids and your phone.

00:18:24.700 --> 00:18:26.710
Now in the short period of
time we have here today,

00:18:26.750 --> 00:18:30.060
I can't possibly go over all of
the really cool features that

00:18:30.060 --> 00:18:34.410
are part of the IAP protocol and
of the MFI program in general.

00:18:34.840 --> 00:18:39.440
But hopefully this brief overview has
given you an idea of what's there.

00:18:39.580 --> 00:18:41.600
We hope that you get interested.

00:18:41.600 --> 00:18:44.600
We have more information at the end
of the session on how to get started.

00:18:44.600 --> 00:18:49.600
And we definitely look forward to
seeing you be part of the program.

00:18:49.600 --> 00:18:52.090
At this time, I'd like to hand over the
podium to my colleague,

00:18:52.090 --> 00:18:55.830
Aaarti, who will also talk about the
standard Bluetooth interfaces

00:18:55.830 --> 00:18:57.550
available for accessories.

00:19:03.240 --> 00:19:04.060
Hello, everybody.

00:19:04.140 --> 00:19:05.460
How is everybody doing?

00:19:05.590 --> 00:19:06.940
Great?

00:19:06.940 --> 00:19:08.270
My name is Aaarti Kumar.

00:19:08.480 --> 00:19:11.640
I'm part of Bluetooth Engineering team
for iOS platform.

00:19:11.720 --> 00:19:13.700
And today,
I'm going to talk about exciting

00:19:13.740 --> 00:19:18.390
new Bluetooth features that we
have added as part of iOS 6.

00:19:18.590 --> 00:19:21.540
Here is a brief overview
of our presentation.

00:19:21.790 --> 00:19:24.500
We'll start with
Message Access Profile and then

00:19:24.500 --> 00:19:26.830
talk about Siri integration support.

00:19:26.940 --> 00:19:31.650
I'll briefly go over updates to
ATDP and AVRCP profile implementation

00:19:32.200 --> 00:19:35.860
and then provide an update about
Bluetooth Low Energy features.

00:19:35.880 --> 00:19:38.840
And lastly,
I'm going to talk about in-app accessory

00:19:38.900 --> 00:19:41.260
connection support that we have added.

00:19:41.470 --> 00:19:44.050
So let's get started with
Message Access Profile.

00:19:44.250 --> 00:19:46.210
What is Message Access Profile?

00:19:46.350 --> 00:19:49.950
Message Access Profile is part of
standard Bluetooth definition that

00:19:49.950 --> 00:19:54.280
defines procedures and features
that can be used to exchange

00:19:54.300 --> 00:19:57.470
message objects between two devices.

00:19:57.670 --> 00:20:02.780
and using Message Access Profile,
we have added support to send iOS-based

00:20:02.870 --> 00:20:07.080
app notifications like iMessages,
even reminders from an iOS

00:20:07.160 --> 00:20:09.560
device to your accessory.

00:20:09.830 --> 00:20:13.220
Our implementation is based
on Notification Center,

00:20:13.220 --> 00:20:16.830
so any active iOS app
notifications like event reminders,

00:20:16.900 --> 00:20:21.920
iMessage, email alerts,
can now be accessed via Accessory.

00:20:22.250 --> 00:20:26.690
These alerts and notifications
are based on message object.

00:20:26.960 --> 00:20:30.060
They are part of B message
format and will always have name

00:20:30.160 --> 00:20:32.010
and full name included with it.

00:20:32.160 --> 00:20:35.740
Phone number field may not be
included for every message.

00:20:35.900 --> 00:20:38.760
For example,
something like iMessage will not have

00:20:38.760 --> 00:20:40.910
phone number field included with it.

00:20:41.220 --> 00:20:45.720
We also do not support sending
message reply from the accessory yet.

00:20:45.840 --> 00:20:48.130
So here it is,
brand new profile in iOS 6,

00:20:48.190 --> 00:20:54.980
Message Access Profile,
with which accessories can now get events

00:20:54.980 --> 00:20:54.980
and notifications from their phone.

00:20:56.230 --> 00:21:00.240
Next,
I'm going to talk about Siri integration.

00:21:00.350 --> 00:21:03.790
All our customers love Siri,
and in iOS 6,

00:21:03.790 --> 00:21:07.030
we have enhanced Siri support
via Bluetooth Link.

00:21:07.160 --> 00:21:11.730
We have done this using hands-free
profile and added various new custom

00:21:11.730 --> 00:21:15.900
AD commands to get Siri status
information and availability.

00:21:16.070 --> 00:21:21.350
We have also improved voice recognition
performance over Bluetooth Link.

00:21:21.620 --> 00:21:26.860
and we have added support for what
we call for as Scott mentioned,

00:21:26.970 --> 00:21:28.300
Eyes Free Mode.

00:21:28.500 --> 00:21:29.870
So what is Eyes Free Mode?

00:21:29.880 --> 00:21:36.300
Siri Eyes Free Mode provides capability
for an accessory to limit Siri responses

00:21:36.360 --> 00:21:37.880
that have display information.

00:21:37.880 --> 00:21:44.880
A Bluetooth accessory can now enable or
disable Siri responses using this mode.

00:21:44.880 --> 00:21:48.920
With these responses an accessory
can get Siri status information like

00:21:48.920 --> 00:21:50.880
if Siri is available and is active.

00:21:50.880 --> 00:21:53.700
It can also enable or
disable Siri responses using

00:21:54.010 --> 00:21:57.880
Eyes Free Mode and then also initiate
a Siri session from my accessory.

00:21:57.880 --> 00:22:02.850
With this accessory also has an
option of using high quality wideband

00:22:02.960 --> 00:22:06.830
speech link for better audio quality
and we highly highly recommend

00:22:06.900 --> 00:22:08.830
everyone of you to use that.

00:22:09.030 --> 00:22:10.710
So this is Siri integration.

00:22:10.910 --> 00:22:13.840
I hope you all are as
excited about it as we are.

00:22:13.880 --> 00:22:15.880
Now let's talk about HTTP.

00:22:15.880 --> 00:22:20.260
In iOS 6 one of our main focuses was
to improve audio quality performance.

00:22:20.260 --> 00:22:26.720
Over Bluetooth link and with this in mind
we have added support for two new codecs.

00:22:27.380 --> 00:22:30.550
The first codec is AACLC.

00:22:30.620 --> 00:22:37.570
AACLC is part of standard A2DP profile
specification and we now render

00:22:37.570 --> 00:22:41.260
it at 256 kilobits per second
compared to what we have currently

00:22:41.260 --> 00:22:44.260
that is 128 kilobits per second.

00:22:44.260 --> 00:22:49.640
This means that if you have an accessory
that supports AACLC codec on its device,

00:22:49.640 --> 00:22:53.710
it will now be rendering at
a higher audio quality rate

00:22:53.840 --> 00:22:56.470
of 256 kilobits per second.

00:22:56.740 --> 00:23:02.240
The second codec that we have added
is AAC Enhanced Low Delay Codec.

00:23:02.240 --> 00:23:06.810
So this codec, in addition to having
a higher audio quality,

00:23:06.810 --> 00:23:11.340
also supports very low latency,
very low encoder and decoder

00:23:11.410 --> 00:23:15.830
latency that improves end-to-end
latency in the system.

00:23:16.020 --> 00:23:17.070
Why this is important?

00:23:17.230 --> 00:23:21.120
This is important for various
kinds of real-time apps like game

00:23:21.120 --> 00:23:23.400
applications or GarageBand-like apps.

00:23:23.440 --> 00:23:27.000
And we think that will be a
really pleasant experience

00:23:27.000 --> 00:23:28.960
for users to use this codec.

00:23:29.140 --> 00:23:33.000
Keeping latency in mind,
we have also added a capability for an

00:23:33.000 --> 00:23:36.550
accessory to report its playback latency.

00:23:36.610 --> 00:23:40.370
We will use this information that
is provided by an accessory and

00:23:40.450 --> 00:23:45.230
plug it into our system to get
better audio-video synchronization.

00:23:45.350 --> 00:23:47.240
So that's A2DP.

00:23:47.280 --> 00:23:50.200
Let's talk about AVRCP.

00:23:50.380 --> 00:23:55.670
In iOS 6, we have added support
for AVRCP media browsing.

00:23:56.690 --> 00:24:01.690
This provides an user to browse
through its music library,

00:24:01.740 --> 00:24:07.590
navigate through playlists,
all on an accessory itself.

00:24:07.700 --> 00:24:11.320
It can also search for audio
content that it's looking for

00:24:11.320 --> 00:24:13.300
and start its media playback.

00:24:13.840 --> 00:24:19.340
AVRCP Media Browsing We also have
support for extensive volume control

00:24:19.340 --> 00:24:23.330
and reporting commands that can be
exchanged between an accessory and iOS

00:24:23.330 --> 00:24:25.540
device to keep volume level in sync.

00:24:28.070 --> 00:24:33.000
Next, I'm going to talk briefly
about Bluetooth Low Energy.

00:24:33.000 --> 00:24:37.190
In iOS 6, we had our first implementation
of Bluetooth Low Energy feature

00:24:37.390 --> 00:24:40.470
that had support for central role.

00:24:40.560 --> 00:24:45.350
This provided an app to
communicate with the remote devices

00:24:45.640 --> 00:24:47.900
using a low energy protocol.

00:24:48.010 --> 00:24:53.390
And now in iOS 6,
we have added support for peripheral role

00:24:53.810 --> 00:24:57.900
and an ability for apps to host services.

00:24:58.000 --> 00:24:59.600
What does it mean?

00:24:59.600 --> 00:25:03.970
It means apps can now have iOS
to iOS communication and also

00:25:03.970 --> 00:25:06.170
have iOS to Mac communication.

00:25:06.380 --> 00:25:13.110
Apps can also host multiple services and
can have multiple inbound connections.

00:25:13.590 --> 00:25:17.690
We have follow-ups dedicated detailed
session on low energy features

00:25:17.790 --> 00:25:19.440
and core Bluetooth framework.

00:25:19.490 --> 00:25:23.580
And I would highly recommend everyone
for every one of you to attend that.

00:25:23.740 --> 00:25:26.170
So that's low energy.

00:25:27.930 --> 00:25:32.310
The last feature I'm going to talk
about is an app accessory connection.

00:25:32.480 --> 00:25:36.340
We had a lot of requests from app
and accessory makers to have a

00:25:36.470 --> 00:25:41.560
capability to find and connect to
your devices from an app itself.

00:25:41.650 --> 00:25:45.910
And so in iOS 6,
we have enabled this support.

00:25:46.660 --> 00:25:49.930
As you can see,
the apps can now use the new APIs that

00:25:49.930 --> 00:25:56.200
are added as part of Accessory
Framework to find the devices and then

00:25:56.200 --> 00:25:58.230
connect to it from the app itself.

00:25:58.490 --> 00:26:03.390
In addition to that,
we have also added capability to wake

00:26:03.390 --> 00:26:06.300
known devices from an app itself.

00:26:06.410 --> 00:26:09.510
So that's an app accessory connection.

00:26:11.420 --> 00:26:14.180
Let's take a glance at
Bluetooth specification-wise

00:26:14.180 --> 00:26:15.130
where we stand.

00:26:15.240 --> 00:26:18.700
So in iOS 5,
we had support for all these profiles.

00:26:18.830 --> 00:26:23.510
And now in iOS 6, in addition to this,
we have added support for message

00:26:23.510 --> 00:26:27.960
access profile at version 1.1,
Bluetooth Low Energy Service Manager,

00:26:27.960 --> 00:26:32.530
which is part of Core Specification 4.0,
and then

00:26:32.610 --> 00:26:37.950
Bluetooth Low Energy Peripheral Role,
which is also part of

00:26:37.950 --> 00:26:37.950
Core Specification 4.0.

00:26:39.080 --> 00:26:39.800
So this is it.

00:26:40.030 --> 00:26:43.340
We are all very excited about all the
new features that we have added as

00:26:43.360 --> 00:26:48.840
part of iOS 6 and would love to see
all these included in your products.

00:26:48.870 --> 00:26:51.930
Here is a link to our accessory
guideline document that talks about

00:26:52.000 --> 00:26:57.400
these features that we talked about
and has much more information.

00:26:57.400 --> 00:27:00.430
With this,
I would now like to call Peter Langefeld

00:27:00.430 --> 00:27:02.880
to talk about our AirPlay accessories.

00:27:03.060 --> 00:27:04.910
Thank you all.

00:27:08.700 --> 00:27:09.300
Good morning.

00:27:09.330 --> 00:27:12.240
Welcome, everyone,
once again to WWDC 2012.

00:27:12.430 --> 00:27:15.910
I'm Peter Langenfeld and I'm
here today to talk to you guys

00:27:15.970 --> 00:27:17.390
about AirPlay Accessories.

00:27:17.660 --> 00:27:20.320
Now, hopefully everybody's excited
about AirPlay Accessories,

00:27:20.320 --> 00:27:23.050
but if you're confused or don't
quite remember what AirPlay is,

00:27:23.100 --> 00:27:24.600
let me refresh your memory a little bit.

00:27:24.600 --> 00:27:29.770
AirPlay is a collection of audio, video,
photo and mirroring.

00:27:29.770 --> 00:27:32.860
It's a great new feature we
introduced in iOS 5.0 streaming

00:27:32.860 --> 00:27:35.540
technologies that's based around Wi-Fi.

00:27:35.600 --> 00:27:37.390
So, what am I going to focus on today?

00:27:37.390 --> 00:27:39.490
Well,
mainly I'm going to talk about audio.

00:27:39.600 --> 00:27:44.600
The reason for that is that audio is the
feature that third parties can access,

00:27:44.600 --> 00:27:47.980
that Apple's provided you an interface
with through the MFI program,

00:27:47.990 --> 00:27:51.600
in order to make your accessory
AirPlay compatible and make it such

00:27:51.600 --> 00:27:55.590
that any AirPlay source can see your
accessory just like any Apple accessory

00:27:55.590 --> 00:27:58.470
and stream the audio directly to it.

00:27:58.600 --> 00:28:02.600
So, we've talked about a lot
of wireless technologies.

00:28:02.600 --> 00:28:04.560
We've talked about a lot
of wired technologies.

00:28:04.680 --> 00:28:06.600
What are the advantages of AirPlay?

00:28:06.600 --> 00:28:07.600
Why would you want to choose
AirPlay over something else?

00:28:07.600 --> 00:28:09.600
Let me talk you through
that a little bit.

00:28:09.600 --> 00:28:12.150
First and foremost,
I think the key to AirPlay is

00:28:12.290 --> 00:28:13.580
that it's Wi-Fi based.

00:28:13.580 --> 00:28:15.600
It's standards based.

00:28:15.650 --> 00:28:17.760
So, the infrastructure you
already have in your home,

00:28:17.760 --> 00:28:20.600
the infrastructure that users in
general already have in their home,

00:28:20.600 --> 00:28:23.490
their Wi-Fi router, etc., just works.

00:28:23.620 --> 00:28:26.380
You don't have to go out and
buy anything special if you want

00:28:26.380 --> 00:28:29.600
to set up a nice wireless audio
streaming session in your home.

00:28:29.630 --> 00:28:32.070
You just have to buy
one AirPlay accessory,

00:28:32.070 --> 00:28:33.600
start enjoying AirPlay,
and as soon as you get

00:28:33.600 --> 00:28:34.870
that one first taste,
I'm sure you'll buy many

00:28:34.870 --> 00:28:36.600
other AirPlay accessories.

00:28:36.600 --> 00:28:38.600
Next up is that you have
a whole home audio range.

00:28:38.600 --> 00:28:42.600
Anywhere that that wireless network,
that Wi-Fi network can reach,

00:28:42.600 --> 00:28:46.040
your AirPlay accessory can be placed,
and you can have wireless

00:28:46.580 --> 00:28:48.590
audio in that location.

00:28:48.600 --> 00:28:52.520
That also means that I don't
have to be tied to a specific

00:28:52.520 --> 00:28:54.530
range of that accessory.

00:28:54.600 --> 00:28:56.860
So, if I decide to listen
to music in my bedroom,

00:28:56.860 --> 00:28:59.980
for example, and then I decide, "Oh,
wait, I've got to go pick up the laundry

00:28:59.980 --> 00:29:02.600
downstairs," as long as I have
Wi-Fi connection during that,

00:29:02.600 --> 00:29:02.600
I can walk away, grab the laundry,
and then go to bed.

00:29:02.600 --> 00:29:05.930
I can walk away, grab the laundry,
come back with no interruption of

00:29:05.930 --> 00:29:07.820
the audio stream as it's going on.

00:29:08.880 --> 00:29:11.330
In addition to that,
it's a multi-user experience.

00:29:11.530 --> 00:29:16.350
So anyone that's on your Wi-Fi network to
begin with also has access to all of the

00:29:16.420 --> 00:29:18.650
AirPlay endpoints on that Wi-Fi network.

00:29:18.750 --> 00:29:20.380
If you have guests over,
as long as they have

00:29:20.470 --> 00:29:23.690
access to your network,
again, they can just decide to stream

00:29:23.690 --> 00:29:27.500
something to your device without
having to specifically pair with it,

00:29:27.500 --> 00:29:29.160
without having to do any pre-thought,
etc.

00:29:29.270 --> 00:29:31.260
So as long as you're
sitting in your home,

00:29:31.260 --> 00:29:33.780
have Wi-Fi connection,
can enjoy the high-speed

00:29:33.780 --> 00:29:36.930
internet connection,
you can also enjoy streaming

00:29:36.930 --> 00:29:38.750
your audio to anywhere.

00:29:38.970 --> 00:29:40.900
Next up is synchronous audio playback.

00:29:40.900 --> 00:29:43.780
As I mentioned,
once you get a first AirPlay accessory,

00:29:43.780 --> 00:29:46.900
many people decide to go and
get a second AirPlay accessory.

00:29:46.900 --> 00:29:49.120
From iTunes,
you can decide to stream to all of

00:29:49.120 --> 00:29:51.380
those AirPlay accessories in parallel.

00:29:51.380 --> 00:29:52.900
So I can have a whole house party.

00:29:52.900 --> 00:29:55.900
I can enjoy music in my bedroom
and music in my laundry room

00:29:55.900 --> 00:29:56.820
as I walk through the home.

00:29:56.900 --> 00:29:58.080
They're all synchronized.

00:29:58.080 --> 00:29:59.890
I don't get echo effects
through the house.

00:29:59.990 --> 00:30:02.470
We'll talk through a little bit of
phasing concerns that you should

00:30:02.470 --> 00:30:03.900
have as an accessory manufacturer.

00:30:03.910 --> 00:30:06.700
This is a great whole home audio
experience that I can enjoy

00:30:06.700 --> 00:30:09.510
either targeted to a direct
single endpoint or I can decide to

00:30:09.530 --> 00:30:13.710
spread out through my entire house
so everyone there can enjoy it.

00:30:14.190 --> 00:30:16.950
The final thing that I think sets
AirPlay apart from many of the other

00:30:16.950 --> 00:30:21.460
streaming technologies out there is that
we use the ALAC or the Apple Lossless

00:30:21.460 --> 00:30:24.800
Audio Codec for the actual stream itself.

00:30:24.850 --> 00:30:28.340
So what that means is you can take full
advantage of whatever high-quality audio

00:30:28.340 --> 00:30:30.240
you're already enjoying on your device.

00:30:30.340 --> 00:30:31.940
We don't resample, we don't compress.

00:30:32.040 --> 00:30:34.570
You get the full effect anywhere you are.

00:30:34.720 --> 00:30:38.990
And that goes all the way up to
CD-quality sound of 44.1 16-bit.

00:30:39.210 --> 00:30:40.960
Okay, so that's great.

00:30:41.160 --> 00:30:42.510
Those are some of the
advantages of using AirPlay,

00:30:42.510 --> 00:30:43.910
but where can I use AirPlay from?

00:30:44.100 --> 00:30:48.820
How do I actually access and
start streaming things as a user?

00:30:48.940 --> 00:30:50.540
We've made it really
easy for them these days.

00:30:50.650 --> 00:30:53.700
Pretty much anywhere in terms
of the Apple ecosystem that you

00:30:53.700 --> 00:30:56.140
can enjoy your audio and you
can get to your audio library,

00:30:56.290 --> 00:31:01.490
including streaming applications,
you can now send that audio data

00:31:01.850 --> 00:31:03.390
out to the AirPlay accessory itself.

00:31:03.510 --> 00:31:05.240
So from iOS, what does that mean?

00:31:05.400 --> 00:31:08.400
We have both mirroring and
system audio or video output.

00:31:08.520 --> 00:31:10.590
Again, for accessories,
that's limited to audio,

00:31:10.590 --> 00:31:11.870
but it's full system audio.

00:31:11.990 --> 00:31:15.010
So you get all apps,
you get all of your iTunes match content,

00:31:15.050 --> 00:31:16.900
and you get all of your web content.

00:31:16.900 --> 00:31:18.900
So anything you can
do on your iOS device,

00:31:18.900 --> 00:31:21.900
you can take the audio and put it
out to a higher quality speaker.

00:31:22.030 --> 00:31:23.150
Now, that's not always ideal.

00:31:23.150 --> 00:31:24.800
Obviously,
we make the UI really easy so you

00:31:24.810 --> 00:31:27.290
can switch back and forth if you're
portable and want to walk around

00:31:27.310 --> 00:31:30.400
the house and just listen to it on
your headphones or your iOS device,

00:31:30.400 --> 00:31:30.870
that's great.

00:31:30.910 --> 00:31:31.690
You can do that.

00:31:31.850 --> 00:31:34.020
But as soon as you want
to kind of broaden it out,

00:31:34.020 --> 00:31:37.230
let more people enjoy it,
enjoy a different seating environment,

00:31:37.300 --> 00:31:40.900
a different level of quality,
you can do that with AirPlay as well.

00:31:41.030 --> 00:31:41.820
Next up is iTunes.

00:31:42.180 --> 00:31:44.470
Both Mac and PC.

00:31:44.970 --> 00:31:48.360
You can stream your entire music library,
all of your radio stations,

00:31:48.360 --> 00:31:50.900
all of your podcasts,
all of your iTunes U content

00:31:50.980 --> 00:31:52.900
directly to your AirPlay endpoints.

00:31:52.900 --> 00:31:55.440
So you can enjoy really everything
that's there and available to you

00:31:55.440 --> 00:31:56.900
through iTunes through AirPlay.

00:31:56.900 --> 00:31:59.810
And finally,
as was mentioned yesterday by Craig,

00:31:59.810 --> 00:32:03.370
we now, for Mountain Lion,
also allow the same great mirroring

00:32:03.370 --> 00:32:06.900
and system audio output that
we allowed from iOS last year.

00:32:06.900 --> 00:32:09.640
So again, that means all apps,
including iTunes match,

00:32:09.640 --> 00:32:10.900
including web content,
anything that you can get

00:32:10.900 --> 00:32:10.900
from your mountain lion,
you can get from iTunes.

00:32:10.930 --> 00:32:14.050
So basically,
anything that you can get from your Mac,

00:32:14.120 --> 00:32:16.900
you can now enjoy on an
AirPlay audio endpoint.

00:32:16.940 --> 00:32:19.880
Here's what that looks like since
that's the new great feature.

00:32:19.910 --> 00:32:21.790
It's basically just from
your sound settings.

00:32:21.900 --> 00:32:24.360
You select AirPlay audio
endpoints just like you select

00:32:24.360 --> 00:32:25.880
any other audio output device.

00:32:26.150 --> 00:32:27.900
You go to your settings.

00:32:27.900 --> 00:32:29.890
You select it here.

00:32:29.900 --> 00:32:31.890
We basically just use the friendly name.

00:32:31.900 --> 00:32:35.120
The friendly name is the name
that the customer decides

00:32:35.120 --> 00:32:36.900
for that AirPlay endpoint.

00:32:36.900 --> 00:32:38.560
So in this case,
there's an Apple TV and a

00:32:38.560 --> 00:32:39.900
Zeppelin Air on the network.

00:32:39.900 --> 00:32:41.900
But again, it's friendly.

00:32:41.900 --> 00:32:42.900
It's easy.

00:32:42.900 --> 00:32:43.900
You don't have to think through things.

00:32:43.900 --> 00:32:45.900
It's just there as an audio output,
and you're ready to go.

00:32:46.070 --> 00:32:47.550
Okay.

00:32:47.780 --> 00:32:48.860
So hopefully you guys are excited.

00:32:49.020 --> 00:32:51.660
Hopefully you're excited to start going
home and using AirPlay if you haven't,

00:32:51.730 --> 00:32:53.700
going out and buying an
AirPlay accessory if you haven't.

00:32:53.870 --> 00:32:56.460
And especially since
you're here as developers,

00:32:56.460 --> 00:33:00.500
hopefully you're excited to develop
products that utilize AirPlay.

00:33:00.650 --> 00:33:02.590
Now,
what do you have to think about when you

00:33:02.770 --> 00:33:05.000
talk about developing an AirPlay product?

00:33:05.180 --> 00:33:07.600
First and foremost is, you know,
customer experience is

00:33:07.630 --> 00:33:08.880
getting on the network.

00:33:08.970 --> 00:33:12.700
I come home, I unbox my device,
it's bright, it's shiny, it's great.

00:33:12.760 --> 00:33:14.170
I put it down, I plug it in.

00:33:14.170 --> 00:33:16.680
Oh wait,
I need to get on that Wi-Fi network.

00:33:16.860 --> 00:33:18.400
How do I do that?

00:33:18.490 --> 00:33:20.580
As Edwin mentioned,
there's a couple ways to do this.

00:33:20.850 --> 00:33:22.980
There's custom apps,
there's Wi-Fi login sharing,

00:33:23.010 --> 00:33:24.600
and there's acting as an access point.

00:33:24.720 --> 00:33:26.670
Let me touch a little
bit on each of those.

00:33:26.810 --> 00:33:30.120
Custom apps are a great way
to go because obviously you as

00:33:30.200 --> 00:33:32.370
developers know your customer best.

00:33:32.470 --> 00:33:34.990
If someone was attracted to
your product in the first place,

00:33:35.100 --> 00:33:37.690
they obviously like the
way you think as a company,

00:33:37.710 --> 00:33:39.000
they like your brand.

00:33:39.070 --> 00:33:42.500
And you can walk them through the
way to actually set up that AirPlay.

00:33:42.500 --> 00:33:43.680
And you can walk them through
the way to actually set up that

00:33:43.780 --> 00:33:44.580
AirPlay endpoint through an app.

00:33:44.610 --> 00:33:49.010
Obviously, if they plug into your device,
as Edwin mentioned, they get a prompt.

00:33:49.250 --> 00:33:50.940
You can go download the app
without having to think about

00:33:50.940 --> 00:33:53.300
where in the store to go,
without having to search anything.

00:33:53.350 --> 00:33:56.290
And then that app can act essentially
as the quick start guide or the

00:33:56.290 --> 00:34:00.400
manual to walk them through the whole
process of getting onto the network.

00:34:00.460 --> 00:34:01.800
Pretty good experience.

00:34:01.800 --> 00:34:03.600
Next up is Wi-Fi login sharing.

00:34:03.610 --> 00:34:06.500
If you don't want to take the
time to develop an application,

00:34:06.500 --> 00:34:09.960
if you don't think there's a branded
reason or an enhancement that

00:34:10.040 --> 00:34:13.290
developing an app will really give you,
you can use the Wi-Fi login

00:34:13.320 --> 00:34:14.900
sharing feature that Edwin showed.

00:34:14.940 --> 00:34:19.680
Again, you plug in the device,
they press the setup button on the back,

00:34:19.680 --> 00:34:21.500
and automatically the iPhone
prompts you and asks you,

00:34:21.500 --> 00:34:24.910
"Do you want to allow this
accessory to join your network?"

00:34:25.140 --> 00:34:26.430
Simple as that.

00:34:26.570 --> 00:34:28.270
Finally,
if you don't want to do any of those,

00:34:28.270 --> 00:34:30.600
you can act as a soft access point.

00:34:30.690 --> 00:34:32.840
Now, we require you to act
as a soft access point,

00:34:32.890 --> 00:34:34.380
not as an ad hoc network.

00:34:34.520 --> 00:34:36.950
That's to make sure that you
have enhanced compatibility with

00:34:37.020 --> 00:34:40.000
all the other devices out there,
including Macs and PCs that have a

00:34:40.150 --> 00:34:41.990
couple of quirks to them occasionally.

00:34:42.060 --> 00:34:44.350
A couple of things you
want to remember there,

00:34:44.540 --> 00:34:44.960
though.

00:34:44.960 --> 00:34:47.730
Make sure you support an
HTTP Bonjour record and make sure

00:34:47.730 --> 00:34:49.000
you're compatible with Safari.

00:34:49.000 --> 00:34:52.080
This is especially important if
you're using an iOS device because

00:34:52.400 --> 00:34:57.000
obviously most people will be setting
up the product from an iOS device.

00:34:57.000 --> 00:34:59.070
And that brings up
that last bullet point.

00:34:59.070 --> 00:35:01.990
Make sure your web pages are
compatible with iOS browsing.

00:35:01.990 --> 00:35:05.320
So make sure they don't have to
zoom and scroll and do weird things

00:35:05.320 --> 00:35:08.490
to get to the network setting
or get to the naming convention,

00:35:08.490 --> 00:35:09.000
etc.

00:35:09.000 --> 00:35:12.000
Very important as far as user
satisfaction with your product.

00:35:12.000 --> 00:35:14.020
right out of the box.

00:35:14.200 --> 00:35:16.340
Next up,
your customers are really going to

00:35:16.350 --> 00:35:18.340
notice the wireless performance.

00:35:18.340 --> 00:35:19.750
So what have we done to help you there?

00:35:19.980 --> 00:35:22.190
Well,
we've introduced Wireless Multimedia,

00:35:22.200 --> 00:35:22.600
WMM.

00:35:22.720 --> 00:35:25.300
We require everyone to be
WMM compliant now as far as an

00:35:25.300 --> 00:35:28.000
AirPlay product is concerned,
AirPlay accessory.

00:35:28.100 --> 00:35:31.420
And WMM is a quality of service
feature that's available on

00:35:31.420 --> 00:35:34.100
all 802.11n access points.

00:35:34.100 --> 00:35:36.100
What does that really mean?

00:35:36.100 --> 00:35:38.970
Well,
what quality of service does is make

00:35:38.970 --> 00:35:42.400
sure that the audio streaming data
is ranked above any other random

00:35:42.430 --> 00:35:44.100
data that's going on your network.

00:35:44.100 --> 00:35:47.360
It ensures that you have less dropouts,
ensures that you have a better

00:35:47.360 --> 00:35:50.080
quality of service at further
points on your network.

00:35:50.150 --> 00:35:52.650
So if you decide to take your
AirPlay accessory and put it on

00:35:52.650 --> 00:35:56.260
the very edge of your network,
it'll enhance that kind of -- the

00:35:56.400 --> 00:35:58.100
performance there on the edge.

00:35:58.100 --> 00:36:00.850
And that's because you won't drop
out that audio as much and you'll

00:36:00.850 --> 00:36:03.700
get a better overall experience
with your product in terms of making

00:36:03.700 --> 00:36:06.450
sure you always hear continuous
audio streaming even though your

00:36:06.450 --> 00:36:08.100
network is loaded up in other ways.

00:36:08.100 --> 00:36:12.070
The next thing you as accessory
manufacturers really have to

00:36:12.070 --> 00:36:16.100
be concerned about is antenna
placement and connection.

00:36:16.100 --> 00:36:19.090
What you really want to make sure is you
eliminate dead spots in your product.

00:36:19.100 --> 00:36:21.800
We do some compliance testing
when we bring your product in to

00:36:21.800 --> 00:36:25.100
make sure consumers have a great
experience when they bring it home.

00:36:25.100 --> 00:36:27.080
And the key here is that
wireless is a different beast.

00:36:27.170 --> 00:36:28.100
It's a different technology.

00:36:28.100 --> 00:36:30.300
It's a different beast than I think
a lot of you are probably used

00:36:30.300 --> 00:36:33.000
to if you've been dealing with
wired accessories in that signal --

00:36:33.010 --> 00:36:35.100
RF signal can come in from any angle.

00:36:35.100 --> 00:36:36.100
It'll bounce off the walls.

00:36:36.100 --> 00:36:37.100
It'll bounce off the ceiling.

00:36:37.100 --> 00:36:37.990
It'll bounce off the floor.

00:36:38.100 --> 00:36:40.390
So even if you're thinking
about putting your product up

00:36:40.390 --> 00:36:42.900
against a wall and you figure,
oh, I can put a giant dead spot

00:36:42.900 --> 00:36:45.090
in the back of my product,
it's not going to be a great

00:36:45.090 --> 00:36:48.030
experience for your user because
there is RF signal that will be

00:36:48.030 --> 00:36:50.100
coming in to the back of that product.

00:36:50.100 --> 00:36:53.100
So your goal should really be to
have no dead spots in your product.

00:36:53.100 --> 00:36:56.450
If you're looking at an azimuth plot,
make sure you try and do a perfect

00:36:56.450 --> 00:36:58.100
circle around in the Z axis.

00:36:58.100 --> 00:37:00.080
Make sure you can
receive from all angles.

00:37:00.100 --> 00:37:03.080
And that will really enhance
the experience of your user.

00:37:03.120 --> 00:37:06.540
It will really help them to get a better
wireless experience with your product

00:37:06.540 --> 00:37:09.980
no matter where they decide to put it
when they have that Wi-Fi connection.

00:37:10.100 --> 00:37:14.040
The other thing to note is make sure you
take manufacturing into consideration.

00:37:14.100 --> 00:37:16.710
We see a lot of people that
do great antenna placement,

00:37:16.710 --> 00:37:19.620
do great antenna design,
but then they route their cables in

00:37:19.620 --> 00:37:25.230
hard 90-degree angles and they have
really complicated routes and connections

00:37:25.300 --> 00:37:28.100
for the manufacturers to have to do.

00:37:28.100 --> 00:37:30.100
That all degrades your wireless signal.

00:37:30.100 --> 00:37:33.470
Any bending of the cables,
any strange connections you might

00:37:33.470 --> 00:37:37.090
have definitely takes away from
the end product performance.

00:37:37.110 --> 00:37:39.090
So make sure you do nice, calm curves.

00:37:39.100 --> 00:37:42.900
Make sure it's really easy to get that
connector fully seated in your product.

00:37:43.370 --> 00:37:46.720
Make sure it's just easy to make
sure all of your product as it goes

00:37:46.720 --> 00:37:51.100
out the door from the manufacturer
has the highest quality available.

00:37:51.390 --> 00:37:54.100
Finally, make sure you properly
shield your module.

00:37:54.100 --> 00:37:58.100
That doesn't just mean shielding
the actual wireless parts,

00:37:58.100 --> 00:37:58.100
but also shield any
other noisy components.

00:37:58.100 --> 00:38:00.090
Make sure you have a good
amount of monist in your system.

00:38:00.160 --> 00:38:03.100
The worst thing you can do is to spend
all this time designing your product,

00:38:03.100 --> 00:38:07.030
making sure you have great performance,
and then have the noise of all your

00:38:07.030 --> 00:38:10.100
other electronics when they're turned on
interfere with your wireless connection.

00:38:10.130 --> 00:38:13.090
You've just basically undone all
the great hard work you just put in.

00:38:13.110 --> 00:38:17.090
So make sure you take some readings,
do some sensing inside the box,

00:38:17.100 --> 00:38:19.600
and if you're worried about it,
just put a nice metal shield

00:38:19.600 --> 00:38:23.040
over the components that may be
creating noise in the frequency

00:38:23.120 --> 00:38:25.100
ranges you're concerned about.

00:38:25.100 --> 00:38:28.100
Also remember that just because
the peak frequency is low,

00:38:28.100 --> 00:38:28.100
it doesn't mean you're
going to get a lot of noise.

00:38:28.100 --> 00:38:30.750
The peak frequency of that
particular section of electronics

00:38:30.750 --> 00:38:32.100
may not be in the Wi-Fi band.

00:38:32.100 --> 00:38:34.090
It can still have resonances
in the Wi-Fi band.

00:38:34.130 --> 00:38:37.970
So be very careful with this and
don't just assume that you're good

00:38:37.970 --> 00:38:40.100
to go without doing some tests.

00:38:41.620 --> 00:38:44.920
Next up I want to talk about kind of
the next level of consumer experience

00:38:45.020 --> 00:38:47.960
and enjoyment is interruption behavior.

00:38:48.260 --> 00:38:52.000
We here at Apple strongly believe
in the fact that explicit user

00:38:52.050 --> 00:38:54.430
interaction should always take priority.

00:38:54.560 --> 00:38:55.100
What does that mean?

00:38:55.210 --> 00:38:56.700
It's a little confusing.

00:38:56.780 --> 00:39:00.540
What we mean by that is that whatever
the user intends to do should just

00:39:00.590 --> 00:39:03.180
happen without them having to think
about it or think through a specific

00:39:03.270 --> 00:39:05.500
set of steps they need to worry about.

00:39:05.560 --> 00:39:07.740
Let me give you an example.

00:39:07.810 --> 00:39:10.640
If you have a tape deck and I'm
listening to a tape deck through my

00:39:10.640 --> 00:39:15.580
accessory and I'm enjoying my 1980s
mix tape and all of a sudden I or

00:39:15.580 --> 00:39:17.640
someone else in the home is like,
"Oh wait,

00:39:17.770 --> 00:39:21.470
there's this great YouTube clip that
I want you to hear the audio from."

00:39:21.640 --> 00:39:23.170
I don't want to have to
think as a user that,

00:39:23.300 --> 00:39:25.600
oh, I have to stop the tape deck,
I have to walk over to

00:39:25.670 --> 00:39:28.200
my AirPlay accessory,
I have to switch the input,

00:39:28.320 --> 00:39:33.160
and then I can go to my iOS accessory
or my Mac or iTunes and start

00:39:33.540 --> 00:39:37.160
changing things and selecting the
AirPlay endpoint to listen to music.

00:39:37.380 --> 00:39:40.460
What I want to happen is,
as soon as someone thinks about the fact,

00:39:40.460 --> 00:39:43.160
oh, I want to listen to an
AirPlay stream right now,

00:39:43.280 --> 00:39:45.530
they start the AirPlay stream
and it just works.

00:39:45.850 --> 00:39:47.460
They hear that instead of the tape deck.

00:39:47.550 --> 00:39:48.180
That's the ideal.

00:39:48.270 --> 00:39:51.100
That's explicit user interaction
and there's no thought involved,

00:39:51.100 --> 00:39:54.560
they just enjoy the product
as it was meant to be enjoyed.

00:39:54.630 --> 00:39:56.680
You should make sure for
the device as a whole,

00:39:56.700 --> 00:39:59.410
in terms of AirPlay accessories,
that the device as a whole

00:39:59.410 --> 00:40:01.020
has this concept integrated.

00:40:01.160 --> 00:40:04.880
So if you're on a different input
that's not AirPlay and you notice

00:40:04.880 --> 00:40:08.460
an AirPlay stream coming in,
someone did that actively.

00:40:08.550 --> 00:40:09.970
Nobody's doing it automatically here.

00:40:10.080 --> 00:40:13.430
We as Apple don't decide to just
send you random AirPlay streams.

00:40:13.600 --> 00:40:15.720
Someone has commanded that
they want an AirPlay stream.

00:40:15.720 --> 00:40:19.490
So you as an accessory manufacturer
should appreciate that fact and

00:40:19.490 --> 00:40:23.680
switch over to the AirPlay stream to
let them get exactly what they want.

00:40:23.840 --> 00:40:28.250
Now, we've taken our own advice and we've
made sure that AirPlay streams themselves

00:40:28.250 --> 00:40:30.560
can interrupt other AirPlay streams.

00:40:30.560 --> 00:40:32.980
So now if I'm listening
to one AirPlay stream and

00:40:32.980 --> 00:40:34.830
my friend next to me says,
oh, wait,

00:40:34.920 --> 00:40:37.420
you've got to hear this instead,
I no longer have to

00:40:37.500 --> 00:40:39.380
worry about stopping it,
disconnecting from the

00:40:39.380 --> 00:40:42.130
AirPlay accessory and letting the
next person connect to it and play,

00:40:42.130 --> 00:40:42.680
et cetera.

00:40:42.810 --> 00:40:45.680
We handle it all for you.

00:40:45.680 --> 00:40:45.680
They just press play.

00:40:45.680 --> 00:40:46.910
It pauses the first stream.

00:40:47.120 --> 00:40:48.340
It disconnects.

00:40:48.340 --> 00:40:50.180
It leaves everything in a clean state.

00:40:50.220 --> 00:40:53.540
No worries for any of
the developers involved.

00:40:53.710 --> 00:40:55.090
Okay.

00:40:55.370 --> 00:40:57.550
The final thing I want to talk
to you guys about today is

00:40:57.550 --> 00:40:59.020
room-to-room synchronization.

00:40:59.060 --> 00:41:01.470
I mentioned that great feature
where you get whole home audio,

00:41:01.550 --> 00:41:03.950
you don't get any echoes,
you don't get any sort of random

00:41:03.950 --> 00:41:07.760
effects in the home as you're
walking from room to room.

00:41:07.820 --> 00:41:10.400
There's a little piece of this
that's not quite as clear,

00:41:10.510 --> 00:41:13.300
so let me walk you
through it a little bit.

00:41:13.300 --> 00:41:17.600
The key here is to really
let the user appreciate where

00:41:17.600 --> 00:41:18.790
it is they put the speaker.

00:41:18.790 --> 00:41:22.300
So if they decide to place the speaker
here in the center of the stage,

00:41:22.300 --> 00:41:23.620
there's a reason for that.

00:41:23.810 --> 00:41:27.360
They wanted to hear music
from the center of the stage.

00:41:27.700 --> 00:41:29.900
If you have any phase delay,
which you can get if you put

00:41:29.900 --> 00:41:31.910
a DSP into your system or you
have different electronics,

00:41:31.970 --> 00:41:34.870
etc., you can be out
of phase just slightly.

00:41:35.040 --> 00:41:36.550
We allow up to 5 milliseconds.

00:41:36.660 --> 00:41:37.040
What does that mean?

00:41:37.040 --> 00:41:38.700
That means up to 5 feet out of phase.

00:41:38.700 --> 00:41:42.390
So a radius of 5 feet from where
they place that speaker might be

00:41:42.570 --> 00:41:44.240
where the source of the audio is.

00:41:44.240 --> 00:41:45.990
That's pretty distracting in general.

00:41:46.140 --> 00:41:48.460
If I place the speaker
in a specific place,

00:41:48.660 --> 00:41:52.110
I don't want to hear it 5
feet shifted off to the left.

00:41:52.420 --> 00:41:55.680
The key here is that we now
have a new API that allows you

00:41:55.690 --> 00:41:57.440
to adjust this phase alignment.

00:41:57.570 --> 00:41:58.780
You can adjust it forward or back.

00:41:58.890 --> 00:42:00.910
You can tune it in exactly
to match your electronics.

00:42:01.000 --> 00:42:04.660
This is especially important if
you decide to do a DSP because

00:42:04.760 --> 00:42:08.680
a DSP can introduce quite a bit
of delay into your audio path.

00:42:08.890 --> 00:42:12.110
But it's up to you as developers
to make sure you tune that API and

00:42:12.110 --> 00:42:15.990
you tune your product as close
to zero milliseconds as you can.

00:42:16.430 --> 00:42:19.780
So your motivation is that what
you give your users is that

00:42:19.780 --> 00:42:23.780
they can hear audio from exactly
where they placed the speaker,

00:42:23.790 --> 00:42:24.650
which was their intent.

00:42:24.750 --> 00:42:29.190
Again, this whole idea that the
intent of the user is king.

00:42:29.290 --> 00:42:30.700
We think that's very important.

00:42:30.790 --> 00:42:33.950
We think this is going to really improve
the user's experience and really give

00:42:33.950 --> 00:42:36.840
them a much better whole home audio
experience for those people that decide

00:42:36.840 --> 00:42:38.780
to buy multiple AirPlay accessories.

00:42:38.980 --> 00:42:42.250
And I think it's in everyone's best
interest in this room that everybody

00:42:42.470 --> 00:42:45.620
buys as many AirPlay accessories
as possible because they have

00:42:45.620 --> 00:42:49.500
the variety and the enjoyment of
AirPlay in every room of their home.

00:42:50.200 --> 00:42:53.090
Okay, so, AirPlay accessories in general.

00:42:53.090 --> 00:42:55.560
Let me wrap up.

00:42:55.560 --> 00:42:58.360
We have a whole range of products that
are already available on the market.

00:42:58.550 --> 00:43:01.700
Simple speakers, audio/video receivers,
very complicated things,

00:43:01.700 --> 00:43:03.100
very niche products.

00:43:03.100 --> 00:43:06.090
That said,
there's room for great expansion.

00:43:06.090 --> 00:43:09.090
It's a whole home audio
experience by intent.

00:43:09.090 --> 00:43:12.570
So, ideally, you'll have a whole
range of price points,

00:43:12.640 --> 00:43:15.380
a whole range of quality,
a whole range of use cases where

00:43:15.400 --> 00:43:18.600
people want to buy these products
and we definitely aren't flooded.

00:43:18.620 --> 00:43:20.880
So, please consider putting
AirPlay into your product because

00:43:20.880 --> 00:43:22.100
we think it's a great feature.

00:43:22.100 --> 00:43:24.590
Also, take note of the fact
it's an MFI feature.

00:43:24.590 --> 00:43:27.100
So, once you decide to put
MFI into your product,

00:43:27.300 --> 00:43:28.370
you get AirPlay as well.

00:43:28.600 --> 00:43:30.870
So, you can decide to put
AirPlay into your product,

00:43:30.870 --> 00:43:32.940
take advantage of MFI,
put MFI in your product,

00:43:32.940 --> 00:43:34.530
take advantage of AirPlay, etc.

00:43:34.600 --> 00:43:37.600
It's a great thing that we think you
should all look into and consider.

00:43:37.600 --> 00:43:40.300
Next, make sure you design and
you innovate your product.

00:43:40.300 --> 00:43:43.890
Make sure you have your customer in mind
and think about exactly what they want.

00:43:44.280 --> 00:43:45.600
Again,
there's lots of products in the space,

00:43:45.600 --> 00:43:47.100
so figure out how to
differentiate yourself.

00:43:47.100 --> 00:43:47.100
How to make sure that you're not just a
product that's going to be sold to you.

00:43:47.100 --> 00:43:47.100
So, if you're a product that's
going to be sold to you,

00:43:47.100 --> 00:43:47.100
you're going to have to think about
what you're going to be selling.

00:43:47.100 --> 00:43:48.100
How to differentiate yourself.

00:43:48.100 --> 00:43:51.110
How to make sure that your brand
stands out and that people want to

00:43:51.110 --> 00:43:54.550
use your brand and continue to use
your brand in the rest of their home.

00:43:54.640 --> 00:43:57.790
It's not just a one-trick pony,
for example, if, you know,

00:43:57.840 --> 00:43:59.600
one speaker to fit them all.

00:43:59.600 --> 00:44:01.100
Everybody has different size constraints.

00:44:01.100 --> 00:44:02.590
Everybody has different
budgetary constraints.

00:44:02.650 --> 00:44:05.070
Everybody has different
desires in their audio quality.

00:44:05.190 --> 00:44:06.600
So, pay attention to that.

00:44:06.600 --> 00:44:08.300
And hopefully,
you guys will figure out a way to

00:44:08.310 --> 00:44:09.560
innovate and keep quality high.

00:44:09.670 --> 00:44:10.870
Okay.

00:44:11.950 --> 00:44:13.540
Obviously, we went through a bunch
of information here.

00:44:13.620 --> 00:44:16.470
We've got some great evangelists that
would love to hear from you guys.

00:44:16.610 --> 00:44:18.270
We'd love to walk you
through your questions,

00:44:18.280 --> 00:44:18.990
talk to you, etc.

00:44:19.120 --> 00:44:19.480
Here they are.

00:44:19.630 --> 00:44:21.600
Steven, Chicken, Craig, Keithley.

00:44:21.620 --> 00:44:24.100
Developer.apple.com is your friend.

00:44:24.100 --> 00:44:24.990
Make sure you go there.

00:44:25.120 --> 00:44:26.700
That's the great place,
kind of the front door to

00:44:26.700 --> 00:44:32.600
all the information about,
be it standard Bluetooth profiles

00:44:32.600 --> 00:44:36.540
that we support as Apple,
or specific kind of custom protocols

00:44:36.610 --> 00:44:39.100
like AirPlay and MFI type things.

00:44:39.100 --> 00:44:42.100
And also realize that if
you're designing accessories,

00:44:42.100 --> 00:44:46.080
we want you to report bugs the same
way you report bugs on our software.

00:44:46.160 --> 00:44:48.100
So,
please use the bugreport.apple.com tool.

00:44:48.310 --> 00:44:50.080
And please use the forums.

00:44:50.140 --> 00:44:51.040
Discuss this amongst yourselves.

00:44:51.140 --> 00:44:53.100
You can obviously help
yourselves quite a bit.

00:44:53.100 --> 00:44:55.100
We've got some related sessions.

00:44:55.100 --> 00:44:57.100
If anything that already talked
about is of interest to you guys,

00:44:57.100 --> 00:45:00.100
we've got a core Bluetooth session,
and we've got an advanced

00:45:00.100 --> 00:45:01.100
core Bluetooth session.

00:45:01.100 --> 00:45:02.820
We'll talk about Bluetooth Low Energy.

00:45:02.860 --> 00:45:05.360
We'll talk about all the great
features in iOS 6 and a lot of

00:45:05.360 --> 00:45:09.100
the things we've supported in the
past to refresh your memories.

00:45:09.100 --> 00:45:12.530
To wrap up in general,
we hope you're really excited about

00:45:12.530 --> 00:45:15.600
developing accessories because we
think there's a great opportunity

00:45:15.600 --> 00:45:15.600
for you to develop accessories.

00:45:15.930 --> 00:45:20.970
There's a great need for accessories to
add on to the experience of iOS devices,

00:45:20.980 --> 00:45:22.090
Mac devices.

00:45:22.100 --> 00:45:24.080
Our entire ecosystem is key here.

00:45:24.100 --> 00:45:27.290
And that is really one of the things
that keeps our customers happy is

00:45:27.290 --> 00:45:30.600
that you guys are developing great
accessories to make sure you can enjoy

00:45:30.600 --> 00:45:34.950
iOS devices in your entire lifestyle,
not just in the palm of your hand.

00:45:35.100 --> 00:45:37.640
MFI offers you some
great custom protocols,

00:45:37.640 --> 00:45:40.930
some great optimized experiences
for the iOS platforms,

00:45:40.940 --> 00:45:42.590
both wired and wireless.

00:45:42.600 --> 00:45:45.100
Anything custom falls into MFI.

00:45:45.230 --> 00:45:48.090
Our Bluetooth offerings are
obviously standards-based.

00:45:48.100 --> 00:45:50.600
iOS 6 is expanding on our support.

00:45:50.600 --> 00:45:52.600
We've had great support
there in the past.

00:45:52.680 --> 00:45:56.240
And AirPlay offers you a high-quality
whole-home audio experience,

00:45:56.240 --> 00:45:58.600
which we think your customers will love.

00:45:58.600 --> 00:45:59.520
So go out and develop.

00:45:59.520 --> 00:46:00.540
Thanks a lot, guys.