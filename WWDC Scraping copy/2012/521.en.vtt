WEBVTT

00:00:10.280 --> 00:00:14.100
Good morning, everybody.

00:00:14.200 --> 00:00:17.700
We're here to talk about OS X, right?

00:00:17.820 --> 00:00:21.180
Game Center for OS X,
specifically Game Center for OS X.

00:00:21.660 --> 00:00:25.600
Hopefully you've seen some
of the earlier slides.

00:00:26.070 --> 00:00:29.930
Excuse me, Kristy,
who just talked about multiplayer gaming,

00:00:29.930 --> 00:00:31.100
is awesome.

00:00:31.120 --> 00:00:34.060
And one of my favorite topics,
because I think all games

00:00:34.160 --> 00:00:35.300
should be multiplayer.

00:00:35.500 --> 00:00:38.890
But we're here to talk
about Game Center for OS X.

00:00:40.000 --> 00:00:40.590
I hope that shows up.

00:00:40.660 --> 00:00:41.260
It's a little tight.

00:00:41.260 --> 00:00:41.990
It says, welcome back.

00:00:42.130 --> 00:00:42.920
I'm Norman.

00:00:42.920 --> 00:00:44.440
Well, actually, he's Norman.

00:00:44.440 --> 00:00:50.910
Norman will be helping me by coming
on stage and showing a demo of Crush.

00:00:50.960 --> 00:00:56.620
You hopefully saw the demo two days ago,
yesterday, yesterday in Dan's talk.

00:00:56.820 --> 00:01:01.600
So we've taken what Megan and Dan did
and did a little OS X spin on it.

00:01:01.790 --> 00:01:03.200
So welcome to everybody.

00:01:03.200 --> 00:01:04.390
Welcome back for me.

00:01:04.710 --> 00:01:06.040
Welcome back to my crew.

00:01:06.040 --> 00:01:09.640
We've been doing Game Center for a
few years and this is really exciting.

00:01:10.130 --> 00:01:15.280
Because now we have it on OS X and it's
cross-platform and it works with all

00:01:15.280 --> 00:01:18.370
the iOS devices that are out there now.

00:01:18.400 --> 00:01:21.830
You don't have to wait for
iOS 6 for these features.

00:01:21.830 --> 00:01:25.630
So as I mentioned, Game Center is new for
OS X Mountain Lion.

00:01:26.060 --> 00:01:31.890
This is the first release we have
for OS X and we think it's great.

00:01:31.990 --> 00:01:36.370
It's the exact same community.

00:01:36.440 --> 00:01:39.980
So everybody who's been playing,
I think there's a hundred people.

00:01:40.010 --> 00:01:45.790
125 million users, something like that,
have access, already have accounts,

00:01:45.790 --> 00:01:47.220
already have friends.

00:01:47.420 --> 00:01:49.100
So we can leverage that.

00:01:49.100 --> 00:01:52.900
You can leverage that when
you're building your games.

00:01:52.900 --> 00:01:54.620
This is great.

00:01:54.790 --> 00:01:56.890
And of course, multiplayer features.

00:01:56.890 --> 00:01:59.490
You can compete with all 125 million.

00:01:59.490 --> 00:02:03.930
And after this,
maybe you'll have some insight how

00:02:03.930 --> 00:02:09.790
to create a game that works on both
platforms to have the most fun.

00:02:10.000 --> 00:02:13.000
So I'm going to be talking about
the API that we're delivering.

00:02:13.000 --> 00:02:18.240
I'm going to be talking about the user
interface that your users will be using.

00:02:18.240 --> 00:02:22.630
And I'm going to be talking about
this from the context of OS X.

00:02:23.050 --> 00:02:28.000
So specifically,
a little bit of a repeat here.

00:02:28.000 --> 00:02:31.380
Game Center API for OS X,
what's available to you?

00:02:31.380 --> 00:02:32.680
How do you use it?

00:02:32.690 --> 00:02:35.930
We're going to show you a little
bit about how to set up a project.

00:02:36.140 --> 00:02:37.960
So this is slightly new.

00:02:38.220 --> 00:02:39.960
It's similar to what we've
done with the previous OS X.

00:02:40.000 --> 00:02:42.840
So this is a little bit about what
you've done for iOS and how you get

00:02:43.020 --> 00:02:45.000
something into the iOS app store.

00:02:45.080 --> 00:02:47.700
We'll talk a little bit
about the OS X app store,

00:02:47.870 --> 00:02:48.910
the Mac app store.

00:02:49.300 --> 00:02:51.640
Primarily,
I'm going to try to focus on the

00:02:51.730 --> 00:02:53.760
differences between iOS and OS X.

00:02:54.060 --> 00:02:56.820
There's so much documentation
out there now for Game Center.

00:02:57.200 --> 00:03:02.000
We've done presentations at
WWDC for the last two years.

00:03:02.000 --> 00:03:03.850
All those are available online.

00:03:04.360 --> 00:03:08.000
There's developer documentation
also on the developer site.

00:03:08.000 --> 00:03:10.000
And if we have some chance,
we'll be doing that.

00:03:10.030 --> 00:03:11.870
And then, of course,
I'll talk to you about

00:03:11.970 --> 00:03:16.000
some best practices when
creating your games for OS X.

00:03:16.080 --> 00:03:19.000
So we'll go into this.

00:03:19.000 --> 00:03:22.950
Game Center as a whole is really
comprised of exactly three pieces.

00:03:23.040 --> 00:03:26.650
Game Center services is large,
but there's an application

00:03:26.650 --> 00:03:28.000
that the users use.

00:03:28.000 --> 00:03:33.990
There's the framework,
which you guys as developers use.

00:03:34.000 --> 00:03:38.000
And then there's the services,
which you need to -- which,

00:03:38.000 --> 00:03:38.000
as a developer,
you use to set up leaderboards,

00:03:38.000 --> 00:03:38.000
and so on.

00:03:38.000 --> 00:03:38.360
And then there's the services,
which you need to -- which,

00:03:38.360 --> 00:03:38.650
as a developer,
you use to set up leaderboards,

00:03:38.670 --> 00:03:39.000
and so on.

00:03:39.000 --> 00:03:43.000
up leaderboards, achievements,
group gaming which is new,

00:03:43.060 --> 00:03:45.950
which will allow you to
share your leaderboards and

00:03:46.040 --> 00:03:48.320
achievements across different apps.

00:03:48.320 --> 00:03:53.500
So they could be an app designed for
an iPad and an iPhone and an OSX app,

00:03:53.500 --> 00:03:55.760
that's the new part of it.

00:03:55.760 --> 00:03:58.640
Which is really awesome
and it works today.

00:03:58.640 --> 00:04:02.210
And in fact I've been told that some
people are already trying it out,

00:04:02.210 --> 00:04:03.210
which is great.

00:04:03.340 --> 00:04:06.260
As developers I hope you
all downloaded the SDK.

00:04:06.260 --> 00:04:10.880
We're going to be around this
afternoon and tomorrow in the lab.

00:04:11.130 --> 00:04:13.690
That's really your best resource.

00:04:13.690 --> 00:04:19.490
This slide is going to be
online in a couple of weeks,

00:04:19.590 --> 00:04:22.080
a few weeks I think.

00:04:22.080 --> 00:04:26.520
So let's talk about the
Game Center app to start with.

00:04:26.520 --> 00:04:28.650
So I'm just going to give
you a run through because

00:04:28.970 --> 00:04:33.600
if you're familiar with iOS,
this should look identical,

00:04:33.600 --> 00:04:35.350
almost identical.

00:04:35.460 --> 00:04:38.040
This is the page that
you see when you log in.

00:04:38.040 --> 00:04:43.820
So you have access to change your status,
your account, your photos.

00:04:43.860 --> 00:04:49.900
All the apps that are shown are
top apps in the Mac App Store.

00:04:49.900 --> 00:04:52.300
So it allows better discovery.

00:04:52.300 --> 00:04:57.040
You want to be on your top app and one
of the ways to do that is Game Center and

00:04:57.230 --> 00:04:59.540
will help promote your app.

00:04:59.540 --> 00:05:01.060
The other one is friends.

00:05:01.060 --> 00:05:05.020
So you can see your friends,
see what games your friends are playing,

00:05:05.020 --> 00:05:07.270
see what games in common you
have so that you can actually go

00:05:07.270 --> 00:05:09.780
and invite him to play a game.

00:05:09.830 --> 00:05:11.980
There's also a couple sections.

00:05:11.980 --> 00:05:14.790
If you scroll down,
you'll see OS X games.

00:05:14.880 --> 00:05:20.610
This is the new section as well as
what games your friend has on iOS,

00:05:21.160 --> 00:05:24.300
which you can't see in this screenshot.

00:05:24.600 --> 00:05:28.050
Then of course there's the game section.

00:05:28.050 --> 00:05:31.770
The top bar represents recommendations.

00:05:32.020 --> 00:05:33.780
These are all OS X game recommendations.

00:05:35.020 --> 00:05:37.780
And shows all your OS X games here.

00:05:37.810 --> 00:05:40.070
Again,
this screen is much larger and you can

00:05:40.260 --> 00:05:42.020
scroll through and see your iOS games.

00:05:42.080 --> 00:05:47.490
But you'll actually have the ability
to look at your achievements,

00:05:47.620 --> 00:05:52.510
the leaderboards for each of the games,
compare similar to iOS.

00:05:52.620 --> 00:05:54.330
And then the request page.

00:05:54.540 --> 00:05:57.520
So in this case,
Mikey has requested to be my friend

00:05:57.520 --> 00:06:00.980
and I can ignore him or accept it.

00:06:01.230 --> 00:06:03.820
Accept it, more friends, more games,
more fun.

00:06:03.820 --> 00:06:05.820
So we really like that.

00:06:06.080 --> 00:06:09.710
That in a nutshell was the app.

00:06:09.820 --> 00:06:11.820
But you guys are all developers, right?

00:06:11.820 --> 00:06:14.820
And you're really here to
find out about the framework.

00:06:14.820 --> 00:06:16.530
GameKit framework.

00:06:16.530 --> 00:06:18.820
It's even got the same name.

00:06:18.820 --> 00:06:24.820
So we've worked really hard to
try to make the GameKit framework

00:06:24.820 --> 00:06:29.820
on OS X equivalent to the
GameKit framework on iOS.

00:06:29.820 --> 00:06:32.820
Because we assume that
you've got some knowledge,

00:06:32.820 --> 00:06:32.820
some experience,
and you're going to be able to use it.

00:06:33.820 --> 00:06:36.660
So we've got some experience, hopefully,
because you all have

00:06:36.660 --> 00:06:37.820
apps on the app store.

00:06:37.820 --> 00:06:42.590
And when moving to a new platform,
we wanted to try to keep it as much

00:06:42.710 --> 00:06:45.820
the same as possible to ease your life.

00:06:45.820 --> 00:06:50.290
You'll see when Norman comes up,
he'll show you some magic in Xcode and

00:06:50.290 --> 00:06:52.750
you'll see how similar it really is.

00:06:52.820 --> 00:06:55.240
So this might end up being
a short talk because there

00:06:55.240 --> 00:06:56.810
aren't a lot of differences.

00:06:56.820 --> 00:06:59.680
But I'll go over an overview
of the GameKit framework.

00:06:59.820 --> 00:07:01.820
We provide you UI for you to use.

00:07:01.850 --> 00:07:06.760
We provide you UI for you to
show leaderboards really easily.

00:07:06.850 --> 00:07:08.820
It's two or three lines of code.

00:07:08.820 --> 00:07:13.820
It's almost identical to iOS.

00:07:13.820 --> 00:07:18.820
The major differences you'll
find is in OS X under AppKit,

00:07:18.820 --> 00:07:20.820
you have a multi-window environment.

00:07:20.860 --> 00:07:25.920
In iOS, it's a single window environment
and everything's presented

00:07:25.920 --> 00:07:27.820
modally on top of that.

00:07:27.820 --> 00:07:29.820
But here we see a leaderboard
for our demo game.

00:07:29.820 --> 00:07:33.740
With me up there.

00:07:33.850 --> 00:07:35.800
So I'm one of Norman's friends.

00:07:36.100 --> 00:07:36.820
That's great.

00:07:36.820 --> 00:07:38.820
Achievements.

00:07:38.820 --> 00:07:40.710
You can see the achievements
inside your game.

00:07:40.820 --> 00:07:42.740
Again, really easy to do.

00:07:42.850 --> 00:07:44.820
And of course, multiplayer.

00:07:45.000 --> 00:07:46.820
My favorite feature.

00:07:46.820 --> 00:07:49.780
And here you can see Norman's
just about to invite me to a game.

00:07:50.070 --> 00:07:51.710
But we'll get back to this.

00:07:51.820 --> 00:07:53.820
You'll see more in the demo.

00:07:53.820 --> 00:07:56.820
It's really cool when you get
to see all this stuff live.

00:07:57.620 --> 00:08:01.830
So the functionality of the game kit,
this is just sort of a list of what you

00:08:02.070 --> 00:08:06.970
would want to do or what features we give
to you that you can put into any game.

00:08:07.180 --> 00:08:11.480
So single player games can be more
fun and more competitive if you

00:08:11.480 --> 00:08:14.280
add leaderboards and achievements.

00:08:14.280 --> 00:08:18.630
You don't need to have a multiplayer
game to have competition.

00:08:18.640 --> 00:08:21.800
So we have access to players.

00:08:21.800 --> 00:08:23.000
Players have profiles.

00:08:24.140 --> 00:08:26.060
You can authenticate your players.

00:08:26.060 --> 00:08:27.720
The players have friends.

00:08:27.720 --> 00:08:29.080
You can see your players' friends.

00:08:29.080 --> 00:08:31.000
You can see your
players' friends' photos.

00:08:31.000 --> 00:08:33.480
And of course,
leaderboards and achievements.

00:08:33.480 --> 00:08:36.400
Submitting achievements is the same.

00:08:36.400 --> 00:08:39.700
Submitting scores is the same.

00:08:39.700 --> 00:08:41.710
There are subtle differences,
and we'll get into that.

00:08:41.740 --> 00:08:43.960
And of course,
there's all these multiplayer features.

00:08:43.980 --> 00:08:47.970
This is,
I think everybody should strive to try to

00:08:48.240 --> 00:08:51.430
make multiplayer a reality in your game.

00:08:51.580 --> 00:08:53.620
So, auto-matching.

00:08:54.150 --> 00:08:56.540
It's the same auto-match system.

00:08:56.540 --> 00:08:58.880
Invites work similarly.

00:08:58.880 --> 00:09:04.020
And in fact, when you're going into group
gaming and you've listed on iTunes

00:09:04.130 --> 00:09:08.380
Connect that you have a compatible game,
when you send an invite,

00:09:08.600 --> 00:09:12.360
it goes to all of the
devices that have that game.

00:09:12.360 --> 00:09:19.960
So you can send an invite and receive
it on both an iPad and a MacBook Pro,

00:09:19.960 --> 00:09:21.550
and you can decide where
you want to play the game.

00:09:21.580 --> 00:09:23.990
That's really cool, and it works.

00:09:24.190 --> 00:09:26.400
It works with all the iOS
devices that are out there now.

00:09:26.520 --> 00:09:28.520
And I'll get into that a little bit.

00:09:28.520 --> 00:09:30.510
So peer-to-peer networking.

00:09:30.520 --> 00:09:34.040
You can set up a match, a GK match,
as Christy eloquently

00:09:34.160 --> 00:09:36.490
described in the last session.

00:09:36.520 --> 00:09:40.520
How to communicate,
how to check for player statuses,

00:09:40.520 --> 00:09:42.510
all of that is almost identical.

00:09:42.520 --> 00:09:46.440
And then there's voice
chat and turn-based gaming.

00:09:48.290 --> 00:09:50.140
So, feature parity.

00:09:50.140 --> 00:09:55.920
I wanted to bring this up again
because I want you to know how hard

00:09:55.950 --> 00:09:58.660
we strive to make it ideally the same.

00:09:58.700 --> 00:10:02.780
So, if you've already got a game...

00:10:03.670 --> 00:10:05.260
That has these features on iOS.

00:10:05.260 --> 00:10:09.040
It's really simple,
at least for the Game Center parts of it,

00:10:09.110 --> 00:10:10.940
to make it work on OS X.

00:10:10.940 --> 00:10:16.890
So players are a GK player,
and authentication is handled the same,

00:10:16.890 --> 00:10:19.640
and it has the same
properties as a GK player.

00:10:19.640 --> 00:10:24.820
We're feature parity with iOS 5 because
Mountain Lion is shipping in a month,

00:10:24.820 --> 00:10:30.440
approximately, and we want it to work
cross-platform right out the gate.

00:10:31.380 --> 00:10:36.760
So all of you with iOS 5
devices can join in the fun.

00:10:36.760 --> 00:10:38.800
Leaderboard.

00:10:38.800 --> 00:10:41.160
So GK score is identical.

00:10:41.160 --> 00:10:43.910
GK leaderboard view controller.

00:10:43.920 --> 00:10:44.960
Achievements.

00:10:45.110 --> 00:10:47.890
There's a GK achievement descriptions.

00:10:48.020 --> 00:10:49.900
There's GK achievements.

00:10:49.900 --> 00:10:51.560
They're all identical.

00:10:51.650 --> 00:10:53.760
Submitting achievements
is exactly the same.

00:10:53.770 --> 00:10:57.260
Matchmaking is handled exactly the same.

00:10:57.260 --> 00:11:00.280
So you have a GK matchmaker
view controller.

00:11:01.190 --> 00:11:02.360
You present the view controller.

00:11:02.360 --> 00:11:05.600
We handle all the state
transitions of sending invites,

00:11:05.760 --> 00:11:09.100
notifications, accepting invites,
connecting people.

00:11:09.100 --> 00:11:11.900
So the multiplayer.

00:11:11.900 --> 00:11:15.100
Turn-based matches, exactly similar.

00:11:15.310 --> 00:11:18.500
And of course,
voice chat works across devices, too.

00:11:20.100 --> 00:11:22.320
There are, however, some differences.

00:11:22.320 --> 00:11:23.720
There have to be some differences.

00:11:23.720 --> 00:11:30.860
The biggest difference comes from the
object hierarchies between OS X and iOS.

00:11:30.860 --> 00:11:37.980
And everything in iOS land
uses the UIKit framework.

00:11:38.210 --> 00:11:42.460
And the UIKit framework gives you things
like UI view controllers and UI images.

00:11:42.460 --> 00:11:47.790
In OS X, we're underneath the app kit.

00:11:48.320 --> 00:11:52.950
And the app kit gives you things like
NS view controllers and NS images.

00:11:52.960 --> 00:11:55.530
In iOS, there's essentially one window.

00:11:55.540 --> 00:12:00.070
And everything is presented as
view controllers stacked up on top.

00:12:00.650 --> 00:12:05.750
Whereas in OS X,
it's a multi-windowed environment.

00:12:05.760 --> 00:12:09.780
So when you want to show one of
our leaderboards or achievements,

00:12:09.780 --> 00:12:12.530
it actually is a separate window,
and you can move it around.

00:12:12.600 --> 00:12:17.400
But what we've done is
we've added a class.

00:12:17.900 --> 00:12:19.840
So these are the differences.

00:12:19.840 --> 00:12:23.680
Pretty much the only differences
from a Game Center perspective

00:12:23.680 --> 00:12:25.340
between iOS and OS X.

00:12:25.350 --> 00:12:27.280
What we've done is we've
provided you with this class.

00:12:27.340 --> 00:12:29.150
It's called a GK dialogue.

00:12:29.340 --> 00:12:33.310
And you can use it in a very
similar manner to you would as

00:12:33.370 --> 00:12:35.340
a root view controller in iOS.

00:12:35.340 --> 00:12:40.840
So that when you want to present one of
our UI elements that we give you back

00:12:40.840 --> 00:12:43.840
as a GK leaderboard view controller,
you can use this.

00:12:43.840 --> 00:12:45.840
And it's really simple.

00:12:45.880 --> 00:12:47.760
So you can allocate a new one.

00:12:48.010 --> 00:12:53.840
You set the parent window so that
when you present the view controller,

00:12:53.840 --> 00:12:56.830
it shows up in the right spot.

00:12:56.920 --> 00:13:00.810
And then we provide a
present and a dismiss method.

00:13:00.880 --> 00:13:03.800
Of course,
when Norman actually gets to do the demo,

00:13:03.910 --> 00:13:04.840
you'll see this in play.

00:13:04.840 --> 00:13:06.830
He does a little Xcode magic.

00:13:06.840 --> 00:13:07.640
It's kind of cool.

00:13:07.840 --> 00:13:11.340
If you're using one window,
you only need one dialogue controller.

00:13:11.340 --> 00:13:14.050
If you're using multiple windows,
you'll want to have multiple

00:13:14.110 --> 00:13:15.290
dialogue controllers.

00:13:15.450 --> 00:13:19.590
In our case,
we have a single window game where

00:13:19.650 --> 00:13:22.360
the game itself is in one window.

00:13:22.360 --> 00:13:28.380
And all the methods to bring up the
leaderboard and the view controller all

00:13:28.500 --> 00:13:30.360
come from one main menu in our game.

00:13:30.360 --> 00:13:32.330
And so it's easy in our case.

00:13:32.410 --> 00:13:36.360
We just have a single dialogue view
controller -- a dialogue controller.

00:13:36.480 --> 00:13:38.360
And there's one thing that
I've been asked to mention.

00:13:38.360 --> 00:13:42.010
This is not Game Center related.

00:13:42.550 --> 00:13:44.360
Not entirely Game Center related.

00:13:44.360 --> 00:13:46.880
But early on when we released
GameKit Framework on iOS,

00:13:46.880 --> 00:13:49.880
before we introduced
Game Center features,

00:13:49.880 --> 00:13:51.880
we had these two classes.

00:13:51.880 --> 00:13:55.870
It's called a GK Session and
a GK Peer Picker Controller.

00:13:56.010 --> 00:14:03.840
And we used these to connect players
together and browse for players

00:14:03.840 --> 00:14:06.880
to play with and communicate.

00:14:06.880 --> 00:14:13.120
So what we're telling everybody to do is,
for best practice, use GK Match and

00:14:13.120 --> 00:14:14.880
GK Matchmaker Controller.

00:14:14.880 --> 00:14:18.400
At the end of the session,
if I have some time,

00:14:18.400 --> 00:14:22.600
I've prepared some slides to talk
a little bit about the GK Match and

00:14:22.600 --> 00:14:24.400
the Matchmaker View Controller.

00:14:24.430 --> 00:14:26.400
But the best resource was --

00:14:27.680 --> 00:14:28.670
No, an hour ago.

00:14:28.920 --> 00:14:31.840
But as I said,
all the videos are going to be online,

00:14:31.970 --> 00:14:33.330
and you should review that.

00:14:33.420 --> 00:14:34.780
And there's quite a lot of documentation.

00:14:34.780 --> 00:14:36.740
We talked about it last year as well.

00:14:37.110 --> 00:14:38.110
Things haven't changed.

00:14:38.120 --> 00:14:43.200
And then the last piece
is Game Center services.

00:14:44.720 --> 00:14:50.520
Game Center services is all the servers
that hold the leaderboards and the

00:14:50.520 --> 00:14:54.270
profiles and the profile pictures and
the achievements and things like that.

00:14:54.360 --> 00:14:58.620
And it interacts quite
closely with iTunes Connect.

00:14:59.080 --> 00:15:04.600
iTunes Connect is where you go to
enable your game for Game Center.

00:15:04.600 --> 00:15:06.760
So you set everything up there.

00:15:06.760 --> 00:15:10.640
You're going to say what
leaderboards you're using,

00:15:10.640 --> 00:15:12.700
what achievements you have.

00:15:13.630 --> 00:15:16.350
And this is a new piece where
you define the game groups.

00:15:16.610 --> 00:15:20.050
So Dan talked a little
bit about game groups.

00:15:20.290 --> 00:15:22.300
Christy talked a little
bit about game groups.

00:15:22.550 --> 00:15:25.520
There's the iTunes Connect session,
what's new in iTunes

00:15:25.520 --> 00:15:26.980
Connect this morning,
where they talked a

00:15:27.010 --> 00:15:27.810
little about game groups.

00:15:28.060 --> 00:15:31.220
That's where everybody probably
is because they're doing a repeat.

00:15:31.220 --> 00:15:34.920
And multiplayer version compatibility.

00:15:34.920 --> 00:15:39.590
So previously you were only allowed
to have version compatibility

00:15:39.590 --> 00:15:41.500
with the same bundle ID.

00:15:42.400 --> 00:15:46.490
Now they allow you to actually have
version compatibility across bundle IDs.

00:15:46.640 --> 00:15:52.460
This allows us to have
OS X games play with iOS games.

00:15:52.500 --> 00:15:54.610
And I think that's really, really cool.

00:15:54.700 --> 00:15:58.060
So now that I've sort of
told you about everything,

00:15:58.060 --> 00:16:00.500
I want to talk about how you
actually create the game.

00:16:00.620 --> 00:16:02.520
So it's a little bit more involved.

00:16:02.520 --> 00:16:06.840
If you're coming from OS X,
you can't just compile and go.

00:16:07.050 --> 00:16:10.810
You'll need to get a certificate.

00:16:10.880 --> 00:16:12.500
You'll need to deal with the -- You'll
need to deal with the -- You'll need

00:16:12.520 --> 00:16:13.070
to deal with the developer site.

00:16:13.210 --> 00:16:16.610
So the first thing you want to do
when you're getting started up,

00:16:16.610 --> 00:16:22.600
and this will be familiar to
everybody who has iOS experience,

00:16:22.670 --> 00:16:24.390
particularly getting
things into the store.

00:16:24.400 --> 00:16:26.720
So you go to the developer site.

00:16:27.110 --> 00:16:31.120
This is where you register
to get a signing certificate,

00:16:31.240 --> 00:16:35.510
where you get all your
provisioning profiles.

00:16:35.720 --> 00:16:38.190
So first thing you do,
you go to the dev site,

00:16:38.190 --> 00:16:39.700
you set up an app ID.

00:16:39.700 --> 00:16:43.000
Once you've set up the app ID,
you configure the app.

00:16:43.200 --> 00:16:46.200
In our case,
we want to say what machines we're

00:16:46.290 --> 00:16:48.810
going to be doing our testing on.

00:16:48.820 --> 00:16:51.880
You need an entitlement for Game Center.

00:16:51.880 --> 00:16:55.070
This is the new piece,
which is the main reason for going

00:16:55.140 --> 00:16:57.540
through here before you actually test.

00:16:57.670 --> 00:17:00.940
You need to sign your apps either
with an ad hoc certificate,

00:17:00.940 --> 00:17:02.880
sorry, profile.

00:17:03.080 --> 00:17:05.930
So when you go get the profile,
you'll get two profiles, right?

00:17:06.210 --> 00:17:10.020
You'll get one so that you can
share and beta test your apps,

00:17:10.060 --> 00:17:13.440
and you'll get another one that you
sign for submitting to the store.

00:17:15.100 --> 00:21:25.100
[Transcript missing]

00:21:25.180 --> 00:21:30.260
The version number, sorry, excuse me,
the build number inside Xcode, right?

00:21:30.510 --> 00:21:35.480
At the bottom is where you define,
and here we have another

00:21:35.480 --> 00:21:38.620
enabled Game Center,
and this is per version, right?

00:21:38.620 --> 00:21:42.340
So you have to do this for
every version of your game,

00:21:42.420 --> 00:21:44.680
not just for the overall game.

00:21:44.680 --> 00:21:47.800
You have to do that too,
but that's sort of another caveat.

00:21:47.800 --> 00:21:51.830
And here you can see I have some
leaderboards set for my group,

00:21:51.830 --> 00:21:52.660
right?

00:21:52.660 --> 00:21:55.840
There's a global leaderboard,
there's a few achievements,

00:21:55.840 --> 00:21:59.000
and this is the cool new part
that I like to talk about.

00:21:59.000 --> 00:22:02.470
You'll see there's two games in there
on the multiplayer compatibility side,

00:22:02.780 --> 00:22:03.000
right?

00:22:03.000 --> 00:22:07.460
There's an iOS game and a Mac OS X game.

00:22:07.500 --> 00:22:10.620
And we'll show you that it's
fairly easy to make that work.

00:22:10.740 --> 00:22:16.210
But this is a new thing,
and I hope to see lots of great games.

00:22:18.400 --> 00:25:14.000
[Transcript missing]

00:25:15.000 --> 00:25:16.670
Here we go, Game Center integrated.

00:25:16.770 --> 00:25:17.850
I'm logging back in.

00:25:17.940 --> 00:25:20.590
It has leaderboards.

00:25:21.200 --> 00:25:23.660
I have achievements.

00:25:24.100 --> 00:25:27.270
And the single player,
this is a typical vertical

00:25:27.270 --> 00:25:30.240
scroller slash shooting game.

00:25:33.200 --> 00:27:46.100
[Transcript missing]

00:27:46.490 --> 00:27:51.090
You as a developer can be creative in
terms of creating the right solution.

00:27:51.170 --> 00:27:54.110
So for Crash,
as you can see in the simulator,

00:27:54.330 --> 00:28:00.100
we basically hold down the single touch
on the screen so you can move around

00:28:00.100 --> 00:28:02.440
as well as performing the shooting.

00:28:02.440 --> 00:28:08.600
So you can be creative and bring the best
look and feel of the OS X native app.

00:28:08.920 --> 00:28:12.150
What we have down here is we
actually hook up to the mouse events,

00:28:12.150 --> 00:28:15.360
so when you click down the mouse,
then you can move left and right.

00:28:15.360 --> 00:28:18.370
But some users might prefer,
if you're coming from a first

00:28:18.450 --> 00:28:22.360
person shooting experience,
you might want to hook up to WASD or

00:28:22.360 --> 00:28:28.730
error keys in order to feel better
or be detached away from the mouse.

00:28:28.800 --> 00:28:32.790
Okay, so let's look at...

00:28:33.710 --> 00:28:34.760
The code here.

00:28:34.800 --> 00:28:38.570
So there's some fundamental differences,
as Gabe mentioned.

00:28:38.630 --> 00:28:42.760
One of the big ones is the difference
between app kit versus UI kit.

00:28:42.930 --> 00:28:47.420
So here we have a declaration
of UI view controller.

00:28:47.840 --> 00:28:51.560
By the way,
I'm going to be working in my menu.h

00:28:51.780 --> 00:28:54.640
and my menu.m file in our project.

00:28:54.860 --> 00:28:59.330
These are the primary files that deal
with creating the UI of the game.

00:28:59.340 --> 00:29:03.100
And these are the only places that
we have that deal with the game kit.

00:29:03.230 --> 00:29:06.090
So here we are in the header file.

00:29:06.160 --> 00:29:08.040
We have a declaration
of UI view controller.

00:29:08.260 --> 00:29:12.200
We type that to a view controller.

00:29:12.410 --> 00:29:18.800
Which is not going to be working for us
for OS X because we don't have UI kit.

00:29:19.000 --> 00:29:20.140
We have app kit instead.

00:29:20.570 --> 00:29:25.900
And the way we use this view
controller in our game is to bring

00:29:25.900 --> 00:29:28.940
up any of the associate views.

00:29:29.040 --> 00:29:32.240
For example,
achievement view or leaderboard

00:29:32.240 --> 00:29:32.600
view on the iOS side.

00:29:32.600 --> 00:29:35.680
As Gabe has mentioned
in his previous slide,

00:29:35.730 --> 00:29:40.080
we do have a GK dialog controller
that's available on the OS X.

00:29:40.100 --> 00:29:43.580
So we're going to be using that
to present and dismiss any of the

00:29:43.900 --> 00:29:46.070
leaderboard or achievement view.

00:29:46.240 --> 00:29:49.840
So let's go ahead and
add that into our class.

00:29:49.840 --> 00:29:53.800
So if we are on iOS,
let's keep the declaration of the

00:29:53.890 --> 00:30:00.060
UI view controller because that's what's
available and that's working for us.

00:30:00.060 --> 00:30:01.440
Otherwise, on OS X,
we're going to have a declaration

00:30:01.440 --> 00:30:01.990
of UI view controller.

00:30:01.990 --> 00:30:02.100
And that's working for us.

00:30:02.100 --> 00:30:02.100
Otherwise, on OS X,
we're going to have a declaration

00:30:02.100 --> 00:30:02.100
of UI view controller.

00:30:02.100 --> 00:30:03.060
So let's go ahead and
add that into our class.

00:30:03.250 --> 00:30:05.890
And we declare a new property
called GK dialog controller which

00:30:05.890 --> 00:30:11.600
we'll be using for translating the
presentation and dismissal of any

00:30:11.600 --> 00:30:16.600
of the view controller we bring in
and out from the game kit framework.

00:30:16.600 --> 00:30:20.530
So that's that.

00:30:20.530 --> 00:30:20.540
Let's switch to...

00:30:22.530 --> 00:30:23.200
The source file.

00:30:23.200 --> 00:30:27.000
So now we have a whole
bunch of compilation errors.

00:30:27.000 --> 00:30:30.020
So when you look at this,
as soon as we have a declaration

00:30:30.020 --> 00:30:32.680
of different properties
based on different platform,

00:30:32.800 --> 00:30:37.150
we need to change the synthesizers so the
right instance variable can be created.

00:30:37.160 --> 00:30:41.460
So instead of doing synthesizing
just the view controller,

00:30:41.460 --> 00:30:46.360
let's do if we are on iOS,
let's synthesize view controller.

00:30:46.360 --> 00:30:50.800
Otherwise, if we're on Mac,
because we are declaring the dialog

00:30:50.800 --> 00:30:54.670
controller as one of the properties,
let's synthesize that one.

00:30:54.720 --> 00:30:59.040
Okay, so what we have so far is on OS X,
view controller is no

00:30:59.040 --> 00:31:01.970
longer available to us,
and we use a GK dialog

00:31:02.420 --> 00:31:04.300
controller instead.

00:31:04.300 --> 00:31:07.140
But we can't really use it right now
without any of the other properties.

00:31:07.140 --> 00:31:13.110
So let's go ahead and
initialize this for the OS X.

00:31:13.400 --> 00:31:18.060
So in our view initialization,
let's do this.

00:31:18.170 --> 00:31:24.680
If we are not on iOS,
so which means we are on OS X,

00:31:24.720 --> 00:31:30.640
the GK dialog controller can be created
by calling the standard alloc init.

00:31:30.720 --> 00:31:34.700
And we're setting up a single property,
which is the pairing window.

00:31:34.700 --> 00:31:37.120
This is easy for us.

00:31:37.120 --> 00:31:39.340
We don't have a single window game,
so therefore we can always retrieve

00:31:39.340 --> 00:31:43.770
the window by doing the self view
window that will give us the one and

00:31:43.780 --> 00:31:46.120
only window that's available to us.

00:31:46.710 --> 00:31:48.730
And that.

00:31:50.200 --> 00:31:52.800
Okay, so we have a dialog
controller at this point,

00:31:52.800 --> 00:31:54.420
and it's initialized and ready to go.

00:31:54.690 --> 00:32:00.740
And now it's coming down to how
we present and dismiss any of the

00:32:00.740 --> 00:32:04.500
view controllers from GameKit.

00:32:04.610 --> 00:32:10.210
And you can see we have all these
iOS-specific code that we will

00:32:10.210 --> 00:32:12.750
need to do some refactoring.

00:32:13.490 --> 00:32:18.550
So to do some refactoring,
I come up with a generic present

00:32:18.830 --> 00:32:21.840
and dismiss method that's
available on both platforms.

00:32:21.840 --> 00:32:24.880
So when you call it on the iOS side,
it will be automatically

00:32:24.890 --> 00:32:28.310
calling the view controller,
present, and dismiss any of the view

00:32:28.310 --> 00:32:29.820
controller you want to bring up.

00:32:30.050 --> 00:32:31.960
But on the OS X,
it will just use the GK dialog

00:32:31.960 --> 00:32:34.970
controller to present and
dismiss the view controller.

00:32:34.980 --> 00:32:42.220
Let's go ahead and say if we're on iOS,
our present view controller.

00:32:42.460 --> 00:32:46.000
Notice how we're declaring
a UIViewController here.

00:32:46.000 --> 00:32:49.080
That's UIKit that's available on the iOS.

00:32:49.080 --> 00:32:53.990
So the body will be the
existing code that we have.

00:32:54.160 --> 00:32:59.720
So we use the UIViewController to present
a model view of the GameKit controller.

00:32:59.720 --> 00:33:00.540
And then we're going to use the
UIViewController to present a model

00:33:00.540 --> 00:33:01.070
view of the GameKit controller.

00:33:01.210 --> 00:33:06.410
And for the corresponding dismiss, again,
we're doing a UI view controller.

00:33:08.120 --> 00:33:13.530
and we'll be calling the view
controller directly dismissal.

00:33:13.900 --> 00:33:17.610
On OS X, since we have declared
GK dialog controller,

00:33:17.610 --> 00:33:20.030
and that's available to us
and has been initialized,

00:33:20.040 --> 00:33:21.800
so we can go ahead and use that.

00:33:22.020 --> 00:33:25.590
And for OS X,
because it's AppKit and we are

00:33:25.600 --> 00:33:29.140
switching to an SPU controller here.

00:33:30.210 --> 00:33:33.160
So we use the GK dialog controller
calling the present view of

00:33:33.160 --> 00:33:35.310
the input view controller here.

00:33:35.420 --> 00:33:39.400
And for the dismissal,
we are going to be doing the same thing

00:33:39.400 --> 00:33:42.310
of using the GK dialog controller.

00:33:43.290 --> 00:33:47.400
Alright, so with this block that's
in our code right now,

00:33:47.400 --> 00:33:53.640
we have two functions that's
available for iPhone and OS X.

00:33:53.690 --> 00:33:57.770
And it will behave differently,
but it's the same interface of

00:33:57.770 --> 00:34:00.030
calling in and out from your code.

00:34:00.150 --> 00:34:05.270
So let's go ahead and start using these
new functions and put them into our code.

00:34:07.050 --> 00:34:10.640
Alright, so we have a couple of places
doing view controller dismiss

00:34:10.840 --> 00:34:16.010
and view controller presentation,
but if you notice this code,

00:34:16.010 --> 00:34:18.710
this is our existing iOS code.

00:34:19.010 --> 00:34:22.570
What it does is, because iOS is single
window and it's full screen,

00:34:22.570 --> 00:34:26.480
everything is presented modally,
and in order to bring up any

00:34:26.550 --> 00:34:29.930
of the model view controllers,
you need to dismiss any of the

00:34:29.930 --> 00:34:31.640
previous one that's being brought up.

00:34:32.090 --> 00:34:35.400
So we're doing this fail-safe
tag here previously,

00:34:35.460 --> 00:34:38.280
but it's no longer needed for
OS X because we're dealing

00:34:38.370 --> 00:34:39.800
with multi-window environment.

00:34:39.800 --> 00:34:43.860
So let's make that iOS only.

00:34:48.300 --> 00:34:53.200
And for the completing
our new code refactoring,

00:34:53.200 --> 00:34:57.740
let's go ahead and start using
the new dismiss method because

00:34:57.740 --> 00:34:59.750
this has been factored out.

00:34:59.840 --> 00:35:03.720
So I already have that in.

00:35:04.650 --> 00:35:05.600
Remove that.

00:35:05.600 --> 00:35:09.360
And this is actually a
self-dub view controller.

00:35:09.360 --> 00:35:14.290
And for view controller presentation,
we have created a

00:35:14.290 --> 00:35:17.500
present view controller.

00:35:17.840 --> 00:35:21.110
So let's go ahead and use that.

00:35:21.110 --> 00:35:21.110
Remove this.

00:35:21.620 --> 00:35:25.470
And this is the second dialog
controller when invite happens.

00:35:25.510 --> 00:35:29.460
So we'll go ahead and make this iOS only.

00:35:29.530 --> 00:35:34.480
That's dismissing any of the model
view that's already presented.

00:35:35.020 --> 00:35:40.500
Let's use the dismissed
view controller here.

00:35:42.030 --> 00:35:43.410
And view controller presentation.

00:35:43.420 --> 00:35:46.440
Let's go ahead and use the
new function that we created,

00:35:46.440 --> 00:35:49.680
which is cross-platform.

00:35:49.770 --> 00:35:53.200
Copy that and here you see
how we show leaderboard,

00:35:53.220 --> 00:35:55.180
which is the old iOS code.

00:35:55.180 --> 00:35:59.810
I change that to use the new code,
which is for both platforms

00:35:59.910 --> 00:36:01.250
show achievements.

00:36:01.260 --> 00:36:05.290
Let's do the same thing for
present view controllers.

00:36:06.840 --> 00:36:11.100
And after we authenticated
matchmaking controller,

00:36:11.100 --> 00:36:15.100
we are going to be using the
new present view controller.

00:36:15.140 --> 00:36:18.120
And here,
any of the view controller that's

00:36:18.440 --> 00:36:23.310
finished being interactive with
the user will perform a dismissal.

00:36:23.410 --> 00:36:28.450
But let's do the -- go ahead and
use the new dismiss view controller

00:36:28.450 --> 00:36:30.620
function that's available to us.

00:36:30.840 --> 00:36:34.240
So here, this is the code to dismiss
the achievement view.

00:36:34.280 --> 00:36:37.040
And here, dismiss the leaderboard view.

00:36:37.090 --> 00:36:39.840
Dismiss matchmaking view controller.

00:36:39.910 --> 00:36:42.440
And again, matchmaking view controller.

00:36:42.580 --> 00:36:45.640
So now we have finished
making these changes.

00:36:45.700 --> 00:36:46.770
All right, build succeeded.

00:36:46.860 --> 00:36:49.800
Let's go ahead and launch that.

00:36:50.820 --> 00:36:53.670
Alright,
so this is Crash running on OS X and you

00:36:53.750 --> 00:36:57.570
can see it's logging me in automatically.

00:36:57.710 --> 00:37:02.740
And from Game Center I'm logging in here,
my profile photo is showing and

00:37:02.740 --> 00:37:06.940
I have one and only friend of Gabe.

00:37:07.120 --> 00:37:09.470
Right here.

00:37:10.090 --> 00:37:12.730
Crash is on iOS.

00:37:12.910 --> 00:37:16.400
The implementation is a
peer-to-peer multiplayer game.

00:37:16.590 --> 00:37:17.900
This is the most important part.

00:37:17.900 --> 00:37:20.940
So after -- yeah.

00:37:21.610 --> 00:37:23.360
So the leaderboard is
now being presented.

00:37:23.360 --> 00:37:24.800
It's the same chunk of code.

00:37:24.800 --> 00:37:26.890
PresentViewController and
DismissViewController is

00:37:26.890 --> 00:37:28.040
running on both platforms.

00:37:28.040 --> 00:37:31.310
So now achievement also works.

00:37:31.490 --> 00:37:33.340
And how you notice...

00:37:33.720 --> 00:37:35.960
These views are actually
independent windows,

00:37:35.960 --> 00:37:37.690
which is different compared to OS X.

00:37:37.700 --> 00:37:40.780
I'm going to go ahead and
send an invite to Gabe,

00:37:40.780 --> 00:37:44.440
who's going to be running the
very same app running on his iPad.

00:37:44.700 --> 00:37:46.510
Let's see if we can do a cross-play.

00:37:46.940 --> 00:37:50.700
Okay, invite friend, one and only.

00:37:50.700 --> 00:37:54.700
Hey, be nice to me.

00:37:54.700 --> 00:37:57.690
I'm a good friend to have.

00:38:05.000 --> 00:38:05.670
That's a good thing.

00:38:05.700 --> 00:38:09.100
We're connected and ready to play.

00:38:09.100 --> 00:38:09.890
Press play.

00:38:09.920 --> 00:38:12.880
There you go.

00:38:16.030 --> 00:38:17.100
I'm green, he's red.

00:38:17.170 --> 00:38:17.680
Yeah.

00:38:17.680 --> 00:38:20.120
It's fairly easy and
fairly straightforward,

00:38:20.120 --> 00:38:23.640
but you see how I am
at a disadvantage here,

00:38:23.640 --> 00:38:26.400
or maybe Gabe just being... Yeah,
I just stopped.

00:38:26.720 --> 00:38:27.160
Merciful.

00:38:27.160 --> 00:38:30.870
So I'm using a mouse here,
and immediately I notice

00:38:30.870 --> 00:38:34.230
the input that we're using,
it's...

00:38:34.400 --> 00:39:04.500
[Transcript missing]

00:39:04.870 --> 00:39:11.700
So that's... that... Okay,
so what do we have here?

00:39:11.850 --> 00:39:17.890
We have a single set of source file
that's being available for both projects.

00:39:17.970 --> 00:39:22.440
So let's go back to iOS project,
and you can see the changes that we

00:39:22.440 --> 00:39:26.660
have made are propagated to this project
because they share the same files.

00:39:26.700 --> 00:39:31.890
Let's just make sure we didn't break
that for doing any cross-platform work.

00:39:31.900 --> 00:39:34.100
It's always good to
verify on both platforms.

00:39:34.700 --> 00:39:37.700
All right, because we changed the view
controller presentation,

00:39:37.700 --> 00:39:41.430
this missed, and these are still working.

00:39:41.880 --> 00:39:43.540
and no problem.

00:39:43.580 --> 00:39:46.740
All right, so last week when Gabe and
I worked together,

00:39:46.770 --> 00:39:50.300
and Gabe came up with
this crazy idea saying,

00:39:50.320 --> 00:39:55.640
"Oh, you know, with Crash launching that
after you log into Game Center,

00:39:55.640 --> 00:39:58.710
we have no--any acknowledgment
for the user to know that

00:39:58.710 --> 00:40:04.060
you're logged in." So he said,
"Why don't you just put--load the

00:40:04.190 --> 00:40:07.840
player profile photo and put it
on the screen somewhere?" So we're

00:40:07.840 --> 00:40:09.820
going to go ahead and do that.

00:40:11.430 --> 00:40:13.420
So let's switch to OS X project.

00:40:13.730 --> 00:40:17.570
So now let's develop on OS X.

00:40:18.230 --> 00:40:20.640
And GKPlayer actually gave
us this functionality.

00:40:20.640 --> 00:40:24.550
So if you look at the GKPlayer,
there's an API already, existing API,

00:40:24.550 --> 00:40:26.300
got little photo for size.

00:40:26.450 --> 00:40:30.960
Everything is looking exactly
the same except this guy.

00:40:31.280 --> 00:40:36.560
So on iOS, it's a returning user,
a UI image pointer in a callback block,

00:40:36.700 --> 00:40:40.160
but it's only having an
NS image on the OS X.

00:40:40.600 --> 00:40:42.320
So we need to bridge the gap here.

00:40:42.680 --> 00:40:45.040
And from this point,

00:40:45.210 --> 00:40:48.610
Any code that we write should
always have the mentality of

00:40:48.650 --> 00:40:52.130
having to run on both platforms.

00:40:52.390 --> 00:40:56.600
So ideally, I would only want to
write this code once,

00:40:56.660 --> 00:41:03.260
having the logic set once,
but it works magically on both platforms.

00:41:03.300 --> 00:41:08.550
Okay, so let's figure out where we
need to stick that code in first.

00:41:09.430 --> 00:41:14.060
So in the initialization,
we're authenticating with Game Center.

00:41:14.190 --> 00:41:16.640
So at this point, we have a login result.

00:41:16.860 --> 00:41:21.270
Whether it's success or failure,
we are doing different things.

00:41:21.450 --> 00:41:24.700
So here would be a good place
to put in that code to perform

00:41:24.700 --> 00:41:26.080
a load of player profile.

00:41:26.280 --> 00:41:30.300
So let's say we load the player
profile and put it on the bottom

00:41:30.540 --> 00:41:32.440
right corner of the screen.

00:41:32.530 --> 00:41:33.290
So how do we do that?

00:41:33.490 --> 00:41:34.180
That's easy.

00:41:34.240 --> 00:41:35.220
We just call the API.

00:41:35.220 --> 00:41:36.910
It gave us the image.

00:41:37.270 --> 00:41:39.300
But how do we put the
image on the screen?

00:41:39.300 --> 00:41:43.470
We need to put the image to some
sort of image view and put that image

00:41:43.470 --> 00:41:47.100
view on the screen as a subview.

00:41:47.170 --> 00:41:47.380
OK.

00:41:47.700 --> 00:41:53.260
But on iOS,
we have a UI image and UI image view.

00:41:53.260 --> 00:41:57.420
But on OS X,
we have an image and image view,

00:41:57.450 --> 00:41:58.380
which is quite different.

00:41:58.510 --> 00:42:03.740
So to bridge the gap,
I'm declaring a new prototype

00:42:03.840 --> 00:42:07.190
called picture or profile photo.

00:42:07.200 --> 00:42:09.840
So let's go ahead and do that.

00:42:09.960 --> 00:42:13.340
If we are running on iOS,
I'm going to tap that UI view

00:42:13.340 --> 00:42:19.370
to a profile image data type,
and also I will type dive UI image

00:42:19.370 --> 00:42:21.730
view to profile image view.

00:42:22.080 --> 00:42:25.160
Otherwise on OS X,
I'm going to go ahead and use

00:42:25.160 --> 00:42:28.160
NSImage instead for this data type.

00:42:28.210 --> 00:42:31.080
I use NSImageView for...

00:42:31.500 --> 00:42:53.600
[Transcript missing]

00:42:53.890 --> 00:42:58.040
So we can go back to this code
and start loading our image.

00:42:58.100 --> 00:43:02.540
So to load image, we're calling into--
we find a local player,

00:43:02.540 --> 00:43:04.740
which is the player
that's always logging in.

00:43:04.740 --> 00:43:08.980
And then we call the load for the size,
specify a small.

00:43:08.990 --> 00:43:12.170
And notice the callback block here.

00:43:12.250 --> 00:43:15.860
Instead of taking the
NS image or UI image,

00:43:15.860 --> 00:43:20.100
I'm using the brand new data
type I have created above.

00:43:22.750 --> 00:43:32.290
So if the photo is set and loaded,
we're going to say define the dimension

00:43:32.290 --> 00:43:40.680
of the photo we want to display to be 64,
and we create this photo image view.

00:43:42.310 --> 00:43:44.700
We need to set where it's
going to be locating.

00:43:44.790 --> 00:43:48.740
So for the bottom right,
so the x axis will be the total

00:43:48.740 --> 00:43:53.500
width minus the dimension,
and y start at zero,

00:43:53.500 --> 00:43:58.300
and we want to display as a box,
so it's same dimension.

00:43:58.360 --> 00:44:01.470
So once we have the dimension
and we have the image view,

00:44:01.600 --> 00:44:05.560
we need to set the image property
to be the photo that's being

00:44:05.560 --> 00:44:09.400
returned to us by GameKit,
and we also set a frame,

00:44:09.450 --> 00:44:12.970
which is the location,
and we add that to our game view,

00:44:13.170 --> 00:44:16.700
so it will be overlaid on top,
and we close that.

00:44:16.700 --> 00:44:19.700
On OS X, let's go ahead and run that.

00:44:19.750 --> 00:44:20.920
Okay, so now I'm logging in.

00:44:21.110 --> 00:44:23.100
Profile photo is loaded and displayed.

00:44:23.190 --> 00:44:29.170
So let's, for sanity check,
let's go back to iOS project, builds,

00:44:29.260 --> 00:44:31.300
and let's load up the simulator.

00:44:31.340 --> 00:44:34.790
And it's working some sort,
and what do we have here?

00:44:34.800 --> 00:44:40.950
We have a... iOS only bug.

00:44:41.130 --> 00:44:45.920
The gotcha here is the difference
between UI view and NS view.

00:44:46.070 --> 00:44:49.310
In the UI view, the origin of

00:44:49.520 --> 00:44:53.740
The view starts at the top left corner.

00:44:53.830 --> 00:44:58.240
However,
if you switch to OS X using the NS view,

00:44:58.290 --> 00:45:00.390
it's on the bottom left.

00:45:00.770 --> 00:45:02.400
That's your origin.

00:45:02.490 --> 00:45:04.960
So there are a couple ways to solve this.

00:45:05.000 --> 00:45:07.900
You can apply a transform to your view,
just so that all the

00:45:08.020 --> 00:45:11.000
coordinates are exactly the
same across different platform.

00:45:11.240 --> 00:45:17.890
Or you can invert the math by
setting-- take the difference on the

00:45:17.890 --> 00:45:20.430
approach when calculating the y-axis.

00:45:20.570 --> 00:45:22.440
So let's go ahead and do that.

00:45:22.440 --> 00:45:24.440
So we are in the iOS project.

00:45:24.440 --> 00:45:26.650
So here's the code that we have loaded.

00:45:26.940 --> 00:45:31.200
And for OS X,
we want the y coordinate to be zero,

00:45:31.270 --> 00:45:33.200
because that's when the bottom starts.

00:45:33.200 --> 00:45:34.030
Let's change that.

00:45:34.240 --> 00:45:38.270
So if we're on iOS iPhone,
the height of where the y-axis

00:45:38.440 --> 00:45:41.380
should be-- the total height
minus the picture dimension.

00:45:41.760 --> 00:45:44.440
Otherwise, on OS X, we just use zero.

00:45:44.440 --> 00:45:47.470
So now let's build that and
have a quick run-through.

00:45:47.500 --> 00:45:49.480
And here we go.

00:45:49.480 --> 00:45:54.430
We invert it, and now the bug is fixed,
and OS X should not be touched.

00:45:54.480 --> 00:45:55.480
Here.

00:45:55.480 --> 00:46:00.220
So we have feature parity as well as
fixing the bugs on the iOS-only side.

00:46:00.800 --> 00:46:03.420
And I'm logging to Game Center.

00:46:03.510 --> 00:46:05.480
So let's look at the games.

00:46:05.480 --> 00:46:08.480
And I have Crash that's under me.

00:46:08.540 --> 00:46:11.480
And these are my achievements,
which have completed.

00:46:11.480 --> 00:46:16.400
And if you look at the achievement
over here on the iOS side,

00:46:16.690 --> 00:46:19.460
they are exactly the same,
which is quite cool.

00:46:19.600 --> 00:46:24.480
And you get that for free by using--
by adopting the GameKit framework.

00:46:24.480 --> 00:46:26.480
And using GameGroups.

00:46:26.480 --> 00:46:27.480
Yes.

00:46:27.480 --> 00:46:29.280
So that's the end of the demo.

00:46:29.580 --> 00:46:33.960
So hopefully you get an idea of how
easy it is to bring the equivalent

00:46:33.960 --> 00:46:37.290
GameKit functionality from iOS to OS X.

00:46:37.530 --> 00:46:39.480
And now I'm going to switch back to Gabe.

00:46:39.570 --> 00:46:43.430
So I think Norman did a great job,
especially showing how easy

00:46:43.550 --> 00:46:48.450
and similar the two platforms
are from the GameKit framework.

00:46:48.740 --> 00:46:53.480
We showed exactly how to deal
with the UI view controller

00:46:53.480 --> 00:46:56.480
and the NS view controller.

00:46:56.480 --> 00:47:01.420
We used a GK dialog controller
instead of a root view controller.

00:47:01.480 --> 00:47:03.480
Images, pretty much the same.

00:47:03.480 --> 00:47:05.480
There's a convenience here.

00:47:05.480 --> 00:47:09.970
It just so happens that the relationship
between an NS image and an NS image

00:47:09.970 --> 00:47:15.480
view is the same as the relationship
between a UI image and a UI image view.

00:47:15.480 --> 00:47:17.480
So that made it really easy for us.

00:47:17.480 --> 00:47:19.440
But you also notice
some of the difference.

00:47:19.640 --> 00:47:24.330
So the graphic coordinates, for example,
are different between the two platforms.

00:47:24.480 --> 00:47:28.480
And then, of course,
we saw that target OS iPhone

00:47:28.480 --> 00:47:30.480
show up quite a lot.

00:47:30.480 --> 00:47:32.450
It's probably really important.

00:47:32.490 --> 00:47:34.480
I have a few minutes left.

00:47:34.560 --> 00:47:37.040
And as I mentioned before,
I talked a little bit about this

00:47:37.040 --> 00:47:41.480
old API that existed for GK session.

00:47:41.480 --> 00:47:45.480
But I really wanted to talk a little
bit about peer-to-peer multiplayer.

00:47:45.480 --> 00:47:48.420
I know Christy did a fantastic job,
so I'm just going to

00:47:48.560 --> 00:47:51.390
go over this briefly,
and then I'll try to summarize it.

00:47:51.490 --> 00:47:53.480
I don't have much time left.

00:47:53.480 --> 00:47:56.480
So to get a multiplayer game going,
it's fairly easy.

00:47:56.480 --> 00:47:58.480
You have a match request,
a GK match request,

00:47:58.480 --> 00:48:00.480
which defines all your match parameters.

00:48:00.480 --> 00:48:03.480
How many people are in their game,
if you have any special

00:48:03.480 --> 00:48:06.270
matching attributes,
or you want to divide

00:48:06.300 --> 00:48:08.480
your players into buckets.

00:48:08.490 --> 00:48:12.480
GK matchmaker, which is a singleton,
which you can use to do a quick match.

00:48:12.510 --> 00:48:15.450
You set an invite handler there.

00:48:15.600 --> 00:48:19.480
There's a GK matchmaker view controller,
which is the UI.

00:48:19.480 --> 00:48:22.480
So you saw that in the demo
where Norman invited me.

00:48:22.480 --> 00:48:24.480
That's the GK matchmaker view controller.

00:48:24.480 --> 00:48:28.480
And then of course the GK match,
which you use to communicate

00:48:28.480 --> 00:48:30.480
between your different players.

00:48:30.600 --> 00:48:32.480
So I think I have three slides on this.

00:48:32.480 --> 00:48:34.480
The first is the
GK matchmaker view controller.

00:48:34.480 --> 00:48:36.480
And that gets created
basically in two ways.

00:48:36.480 --> 00:48:39.480
With a match request,
if it's an outgoing match,

00:48:39.750 --> 00:48:44.460
or with an invite,
if your user has accepted an invite,

00:48:44.720 --> 00:48:47.480
launches your game,
if you set the invite handler,

00:48:47.480 --> 00:48:49.870
you'll get this invite,
and you need to create

00:48:49.870 --> 00:48:51.480
the view controller.

00:48:51.480 --> 00:48:53.480
And of course displaying it
is just subtly different.

00:48:53.480 --> 00:48:55.260
It's still only a line.

00:48:55.610 --> 00:48:57.380
Really easy to do.

00:48:57.510 --> 00:49:01.480
The objects that you get back,
the GK matchmaker view controller,

00:49:01.480 --> 00:49:04.480
is still a GK matchmaker view
controller on both platforms,

00:49:04.480 --> 00:49:07.430
but use the dialog controller
in our case to present it.

00:49:07.480 --> 00:49:12.480
How you actually get a
GK match is one of two ways.

00:49:12.480 --> 00:49:16.480
Either as a delegate from the
GK matchmaker view controller,

00:49:16.480 --> 00:49:19.480
so when the invite has
been successfully made,

00:49:19.720 --> 00:49:21.480
and the...

00:49:22.100 --> 00:54:47.000
[Transcript missing]

00:54:47.750 --> 00:54:49.060
Related sessions.

00:54:49.230 --> 00:54:52.640
Yeah, I'm lost,
so these all happened before me,

00:54:52.650 --> 00:54:54.460
but videos will be available.

00:54:54.460 --> 00:54:58.840
I know that the presenters
will all be available.

00:54:58.840 --> 00:55:00.520
Thank you everybody for coming.