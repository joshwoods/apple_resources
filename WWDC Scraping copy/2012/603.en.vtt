WEBVTT

00:00:10.060 --> 00:00:11.930
My name is Mark Miller,
and we're going to be talking

00:00:11.950 --> 00:00:15.180
today about the iTunes and
App Store Affiliate Program.

00:00:15.500 --> 00:00:18.270
Before we get started with
the tools and services we

00:00:18.280 --> 00:00:21.630
provide to make this possible,
I wanted to go over a quick overview

00:00:21.760 --> 00:00:24.640
of what the affiliate program is,
what it can do for you,

00:00:24.640 --> 00:00:30.160
and kind of the basics just to make
sure that everybody's on the same page.

00:00:30.160 --> 00:00:31.390
So what is the affiliate program?

00:00:31.500 --> 00:00:35.560
Well, basically,
it's a matter of affiliates

00:00:35.620 --> 00:00:37.570
referring users to the stores.

00:00:37.770 --> 00:00:44.640
The users are exposed to great content
and other things they can download

00:00:44.640 --> 00:00:50.890
and preview and obtain that they
might not be otherwise familiar with.

00:00:51.070 --> 00:00:54.240
And in return,
the affiliate earns a commission for each

00:00:54.240 --> 00:00:56.800
of the purchases made after the referral.

00:00:58.040 --> 00:00:59.530
So what can it do for you?

00:00:59.550 --> 00:01:01.840
Why are we here?

00:01:02.100 --> 00:01:04.760
You can use it to promote your
own apps and other content.

00:01:04.760 --> 00:01:07.530
So if you've got books
or music or whatever,

00:01:07.580 --> 00:01:09.230
you can use it that way.

00:01:09.250 --> 00:01:12.120
You can also promote other
things that you don't create.

00:01:12.370 --> 00:01:16.300
So any content on the store
is really up for grabs.

00:01:18.160 --> 00:01:20.450
And of course you can use it
to earn money for referrals.

00:01:20.640 --> 00:01:24.420
And in some cases this money can be a
very important revenue stream and you

00:01:24.420 --> 00:01:26.670
can base an entire business around it.

00:01:27.320 --> 00:01:29.540
You can also use it to track the
effectiveness of your marketing.

00:01:29.540 --> 00:01:33.030
So trying to figure out what people are
clicking on and where they're going,

00:01:33.130 --> 00:01:34.300
you can do that.

00:01:34.300 --> 00:01:39.650
And the program works perfectly well
both on your website and in your apps.

00:01:40.180 --> 00:01:43.310
So there's a couple of common
use cases that I might go over.

00:01:43.390 --> 00:01:47.190
The first one is to drive customers
to your apps and other content.

00:01:47.310 --> 00:01:51.850
So if you've got a promotional website
for a new app that you just released,

00:01:51.850 --> 00:01:55.950
go ahead and make the links
from that promotional website

00:01:56.070 --> 00:01:58.460
into the store affiliated.

00:01:59.330 --> 00:02:03.570
You can also point users to
similar or complementary content.

00:02:03.670 --> 00:02:06.810
So if you've got a gaming app that
has a soundtrack or something,

00:02:06.880 --> 00:02:09.390
you can point to that
soundtrack on the store.

00:02:09.470 --> 00:02:15.720
You can also,
if maybe your app has a productivity

00:02:15.720 --> 00:02:22.140
app that it integrates well with,
you can refer users to that and earn

00:02:22.140 --> 00:02:22.140
a commission on those purchases.

00:02:22.750 --> 00:02:25.840
Most of all,
you're trying to get users to the

00:02:25.840 --> 00:02:32.280
content that they want so that they
can get it and make them happy.

00:02:32.350 --> 00:02:34.800
And again,
this works on the web and in your apps.

00:02:37.440 --> 00:02:41.220
A quick cast of characters for
what's going on with all this.

00:02:41.570 --> 00:02:43.630
First of all,
there's the iTunes app store,

00:02:43.670 --> 00:02:45.960
iBook store, Mac app store.

00:02:45.960 --> 00:02:49.540
For our purposes,
that's pretty much one entity.

00:02:49.540 --> 00:02:52.830
There's also, down at the other side,
the affiliate publishers,

00:02:52.830 --> 00:02:56.320
and that would be you, hopefully,
at the conclusion of this session.

00:02:57.620 --> 00:03:01.320
The affiliate networks are the ones
that are mediating that relationship.

00:03:01.320 --> 00:03:04.430
These networks provide
geo-specific services,

00:03:04.660 --> 00:03:08.950
payments, reporting,
all that sort of things that

00:03:08.950 --> 00:03:10.420
we are not set up to do.

00:03:10.420 --> 00:03:12.590
And finally, of course,
there's the customers,

00:03:12.590 --> 00:03:13.820
your customers and ours.

00:03:16.610 --> 00:03:20.970
Now these affiliate networks,
they vary depending on which

00:03:20.970 --> 00:03:23.760
region you're operating in.

00:03:23.840 --> 00:03:27.660
The networks provide all the
services I mentioned before,

00:03:27.760 --> 00:03:31.260
and it's important to use the
right ones for the right location.

00:03:31.380 --> 00:03:37.070
So in North America, in the US, Canada,
and recently Mexico,

00:03:37.420 --> 00:03:42.090
we partner with LinkShare,
and we also use a LinkShare

00:03:42.090 --> 00:03:42.090
subsidiary in Japan.

00:03:43.650 --> 00:03:47.000
In Europe and South America,
we use Trade Doubler.

00:03:47.130 --> 00:03:49.970
And again,
the terms and kind of some of the

00:03:49.970 --> 00:03:54.280
details about the programs will
vary according to the network.

00:03:54.340 --> 00:03:59.320
So I mentioned earlier there's a kind
of a window of commissionable sales.

00:03:59.490 --> 00:04:04.790
And also the percentage of the commission
might change from network to network.

00:04:04.790 --> 00:04:08.490
But in general,
it's about three days for the window and

00:04:08.490 --> 00:04:11.680
the commission is four or five percent.

00:04:13.600 --> 00:04:17.710
So finally, in Australia and New Zealand,
we've got DGM.

00:04:19.420 --> 00:04:21.320
So how does it work?

00:04:21.460 --> 00:04:24.070
Well, it's all about links,
putting links in front of

00:04:24.070 --> 00:04:27.650
users so that they can click
on them and get into the store.

00:04:29.000 --> 00:04:30.460
So here's an example link.

00:04:30.520 --> 00:04:35.700
Pretty simple URL that will
take a user into the store.

00:04:35.750 --> 00:04:37.780
To affiliate this,
we just need to put some

00:04:37.820 --> 00:04:39.520
information onto the URL.

00:04:41.060 --> 00:04:44.460
From a customer perspective,
clicking on an affiliate link is

00:04:44.500 --> 00:04:46.910
exactly like clicking on any other link.

00:04:46.930 --> 00:04:48.970
They'll be on a page,
they find a link they like,

00:04:48.970 --> 00:04:52.010
they click it,
and they get taken to the appropriate

00:04:52.010 --> 00:04:54.000
content in the iTunes store.

00:04:54.250 --> 00:04:58.530
Now, this works the same way on
iOS devices as the desktop.

00:04:59.940 --> 00:05:02.240
Under the hood,
there's a little more going on.

00:05:02.240 --> 00:05:04.860
So in this example,
we've got Mobile Safari on

00:05:04.860 --> 00:05:05.960
the upper left.

00:05:05.960 --> 00:05:11.230
This could also represent a desktop
browser or one of your apps.

00:05:11.240 --> 00:05:17.960
To the right of that is an iTunes client,
which could be App Store, Music Store,

00:05:18.090 --> 00:05:21.670
Book Store, Mac App Store, et cetera.

00:05:22.090 --> 00:05:25.070
Then we've got the affiliate networks,
and on the far right, the iTunes servers.

00:05:25.900 --> 00:05:30.580
So it starts by a user clicking an
affiliated link and that request

00:05:30.590 --> 00:05:32.240
goes to the affiliate networks.

00:05:32.290 --> 00:05:34.920
They're going to record that click
for reporting purposes and send

00:05:34.920 --> 00:05:36.810
a redirect back to the browser.

00:05:37.010 --> 00:05:41.160
The browser is going to launch iTunes,
which makes a similar affiliated

00:05:41.160 --> 00:05:45.800
request directly to the iTunes stores,
which will respond with

00:05:45.880 --> 00:05:47.240
a cookie and a redirect.

00:05:47.240 --> 00:05:51.010
So that cookie is going to live on
iTunes for the commission window and

00:05:51.010 --> 00:05:55.080
any purchases that are made within
that window will be commissioned.

00:05:56.780 --> 00:06:00.950
Then the user browses around and
perhaps eventually buys a product,

00:06:00.950 --> 00:06:04.580
downloads it, everything's great,
they're happy.

00:06:04.580 --> 00:06:07.750
After everything's settled,
iTunes will report the sale to the

00:06:07.750 --> 00:06:11.700
affiliate networks who will eventually
write you a check for the commission.

00:06:11.770 --> 00:06:16.600
I mentioned we have to add some important
affiliate information to the URLs.

00:06:16.780 --> 00:06:19.470
We'll take that example URL from before.

00:06:19.760 --> 00:06:21.700
We have to add a partner
ID query parameter.

00:06:21.700 --> 00:06:24.700
The partner ID identifies
the affiliate network.

00:06:24.700 --> 00:06:29.510
There's also an affiliate token which
identifies you to the affiliate network.

00:06:29.760 --> 00:06:33.070
That's sort of your user
ID within LinkShare,

00:06:33.100 --> 00:06:35.090
Tread Doubler, or DGM.

00:06:35.920 --> 00:06:38.420
So for LinkShare,
the partner ID value is 30,

00:06:38.420 --> 00:06:40.690
and the affiliate token name is site ID.

00:06:40.790 --> 00:06:43.040
And here in this example,
we've got ABCDEFG.

00:06:43.160 --> 00:06:47.060
That's the token assigned to
you by the LinkShare network.

00:06:47.350 --> 00:06:50.410
For Trade Doubler,
the Partner ID value is 2003 and

00:06:50.500 --> 00:06:53.440
the affiliate token name is TDUID.

00:06:53.780 --> 00:06:57.100
And for DGM,
the partner ID is 1002 and the

00:06:57.200 --> 00:06:58.650
affiliate token name is Aftoken.

00:06:58.650 --> 00:07:02.850
It's important to get these right
and make sure you've got the case

00:07:03.110 --> 00:07:05.530
of these query parameters correct.

00:07:07.310 --> 00:07:09.880
When a lot of people get
started with the program,

00:07:09.880 --> 00:07:14.180
they make a few common mistakes that
I want to go over really quickly.

00:07:14.180 --> 00:07:17.470
When you're attaching
your query parameters,

00:07:17.500 --> 00:07:19.460
make sure you're using
the right delimiter.

00:07:19.620 --> 00:07:21.910
If the url does not already
have a query string,

00:07:21.920 --> 00:07:25.300
you need to make sure that
you're attaching the new

00:07:25.300 --> 00:07:27.600
values using a question mark.

00:07:27.600 --> 00:07:30.130
Similarly, if there's already a
question mark on the url,

00:07:30.220 --> 00:07:32.830
don't use another one,
because then the url won't

00:07:32.830 --> 00:07:34.860
parse and nothing will work.

00:07:34.860 --> 00:07:38.810
So instead, check for the presence of the
question mark and do the right thing.

00:07:41.670 --> 00:07:46.440
Another common mistake that's a little
more complex is making sure that you're

00:07:46.440 --> 00:07:51.560
presenting the right link to users so
that you can actually earn a commission.

00:07:51.570 --> 00:07:55.580
For example,
if you have a French user who has

00:07:55.580 --> 00:08:02.130
an account in the French storefront,
they need to see a trade doubler link

00:08:02.130 --> 00:08:04.570
in order for that to be credited to you.

00:08:04.570 --> 00:08:04.570
If you give them a link share URL,
the sale won't be reported.

00:08:05.170 --> 00:08:09.260
So it's important to geo-target your
users and create your links correctly.

00:08:11.520 --> 00:08:18.010
Another one that commonly happens but
is worth calling out is not testing.

00:08:18.330 --> 00:08:20.820
Just make sure that the links
that you create actually work and

00:08:20.820 --> 00:08:23.950
take your users to the content
that you're trying to promote.

00:08:24.200 --> 00:08:29.450
And if you're rolling out a new
feature where you're generating

00:08:29.500 --> 00:08:34.940
a lot of links automatically,
try clicking on one of those links

00:08:34.940 --> 00:08:36.580
and then making a small purchase just
to verify that the sale is reported.

00:08:37.350 --> 00:08:38.920
So that's the overview.

00:08:39.240 --> 00:08:40.840
Fortunately,
we've got a lot of great tools

00:08:40.930 --> 00:08:45.700
to help you create these URLs,
and I'd like to go into those now.

00:08:45.940 --> 00:08:49.890
So starting from the very basics,
if you're just getting started

00:08:49.890 --> 00:08:52.920
with the affiliate program,
you might just want to create

00:08:52.950 --> 00:08:55.310
a few links to add to your
website and promote your app.

00:08:55.500 --> 00:08:57.400
We've got some great tools
to do that automatically.

00:08:57.400 --> 00:09:00.360
They're kind of focused at the end user.

00:09:00.880 --> 00:09:04.790
We also provide RSS feeds so that
you can be aware of what's popular,

00:09:04.890 --> 00:09:09.500
new, featured on the stores and

00:09:09.860 --> 00:09:12.680
Promote it to your users
with the knowledge that it's

00:09:12.730 --> 00:09:15.430
probably interesting to them.

00:09:18.100 --> 00:09:21.270
If you have a better idea specifically
about what you're interested in,

00:09:21.290 --> 00:09:27.370
we provide a web API so that you
can search and look up by ID a bunch

00:09:27.480 --> 00:09:30.990
of metadata about store content.

00:09:31.600 --> 00:09:37.000
And as you get even further up the chain,
you might need to...

00:09:37.180 --> 00:09:40.550
Do a bunch of offline processing
for a large amount of data.

00:09:40.550 --> 00:09:42.410
And for that,
we have a bulk data feed called

00:09:42.460 --> 00:09:44.970
Enterprise Partner Feeds,
or EPF.

00:09:45.770 --> 00:09:48.450
And finally,
we have a service that allows you to

00:09:48.450 --> 00:09:53.340
dynamically create playlists that you
can customize specifically to a user,

00:09:53.340 --> 00:09:55.940
which can be really powerful
if you use it correctly.

00:09:57.870 --> 00:10:01.360
So let's get started
with the simple stuff.

00:10:01.370 --> 00:10:02.300
First off is LinkMaker.

00:10:02.440 --> 00:10:08.700
LinkMaker is the simplest possible way
to create links to content on the store.

00:10:08.700 --> 00:10:10.500
You go to LinkMaker,
type in a search term,

00:10:10.580 --> 00:10:11.670
you'll get results back.

00:10:11.670 --> 00:10:12.660
It's pretty easy.

00:10:13.520 --> 00:10:17.550
If you click through to LinkMaker
from an affiliate network,

00:10:17.620 --> 00:10:22.280
the nice thing about doing it that
way is that all of the information

00:10:22.570 --> 00:10:26.720
about your account will be carried
through automatically so that the links

00:10:26.720 --> 00:10:31.260
that are generated will be already
populated with the affiliate data.

00:10:31.260 --> 00:10:33.190
And you don't need to worry
about question marks and

00:10:33.190 --> 00:10:34.410
ampersands and all the rest.

00:10:34.430 --> 00:10:36.730
If you don't do it that way,
it's available at

00:10:36.730 --> 00:10:39.040
iTunes.Apple.com slash LinkMaker.

00:10:39.040 --> 00:10:43.020
And if you go that route,
you have to set up the URLs manually.

00:10:45.910 --> 00:10:48.850
So here with link maker I've done
a search for Bob Dylan and I've

00:10:48.900 --> 00:10:51.530
got some search results back,
so I'm going to click on the

00:10:51.530 --> 00:10:52.800
one that I'm looking for.

00:10:52.800 --> 00:10:57.970
And I'll get a nice sheet overlay
that has some pre-formatted

00:10:57.970 --> 00:11:03.790
HTML that I can just drop right
into my website via my HTML editor.

00:11:03.810 --> 00:11:07.820
If I don't like the text link style,
I can also select for a

00:11:07.940 --> 00:11:11.210
badged icon type look,
and the icons come in two

00:11:11.210 --> 00:11:13.580
sizes; there's large and small.

00:11:13.800 --> 00:11:17.200
So you can choose whatever is appropriate
for your website and do it that way.

00:11:19.820 --> 00:11:22.620
We also provided,
this is a recent addition,

00:11:22.620 --> 00:11:26.690
we provide some pre-canned widgets
that you can drop onto your website.

00:11:26.860 --> 00:11:30.880
And these are really great
to get started quickly.

00:11:30.880 --> 00:11:34.670
The widgets are available
at widgets.iTunes.apple.com.

00:11:34.890 --> 00:11:36.340
and it's a really easy interface.

00:11:36.340 --> 00:11:39.130
You can choose from a drop
down of available widgets,

00:11:39.140 --> 00:11:41.150
customize them,
and generate some HTML that

00:11:41.150 --> 00:11:42.670
you can drop onto your website.

00:11:44.600 --> 00:11:47.010
Some of the examples,
you can do a search box.

00:11:47.330 --> 00:11:49.730
So put the search box on your site.

00:11:49.820 --> 00:11:53.840
Here the user is searching for Toy Story.

00:11:54.300 --> 00:11:59.910
You can also define a pre-canned playlist
of content that's interesting to you.

00:12:01.720 --> 00:12:04.000
If you are just trying
to promote a single app,

00:12:04.110 --> 00:12:09.590
you can create a picture
frame for that app.

00:12:10.030 --> 00:12:12.440
And finally,
you can also do a collection of books.

00:12:12.440 --> 00:12:15.970
So if you're doing a summer reading list,
perhaps, or something along those lines,

00:12:15.970 --> 00:12:17.090
you can drop those in.

00:12:17.090 --> 00:12:20.710
There's a lot of other options as well.

00:12:21.160 --> 00:12:25.130
Let's say we want to go more
along the customization route.

00:12:25.140 --> 00:12:27.810
For that, we can use RSS.

00:12:28.150 --> 00:12:33.380
RSS is a really simple
syndication originally.

00:12:34.050 --> 00:12:37.960
And it's a feed of dynamic,
constantly updating content.

00:12:37.960 --> 00:12:42.230
And it's available on
your site and in your app.

00:12:42.380 --> 00:12:47.320
And there's a lot of feeds available
for the most popular content,

00:12:47.320 --> 00:12:51.000
stuff that's been recently added,
featured on the store.

00:12:51.050 --> 00:12:53.160
All these are available.

00:12:53.160 --> 00:12:59.800
And we have what's called the
RSS generator available to

00:12:59.810 --> 00:13:00.300
create these links to the feeds.

00:13:01.290 --> 00:13:05.230
Let's take a look at some example usages,
just because we can modify the URLs to

00:13:05.270 --> 00:13:08.360
the feeds and get different options back.

00:13:09.710 --> 00:13:13.480
So for music,
the URL might look like this.

00:13:13.480 --> 00:13:16.590
You can have the top
albums feed in the US.

00:13:16.790 --> 00:13:18.720
Pretty simple there.

00:13:18.720 --> 00:13:20.880
You might also want to
try the top songs feed.

00:13:21.130 --> 00:13:25.470
These are logically separate data.

00:13:25.720 --> 00:13:28.700
For apps, for example,
we have the top paid applications feed,

00:13:28.700 --> 00:13:31.480
but we also have a top free
applications feed and the top

00:13:31.480 --> 00:13:33.040
grossing applications feed.

00:13:33.250 --> 00:13:36.570
All these are available
through RSS generator.

00:13:37.490 --> 00:13:39.980
We also have a large amount
of other media types covered,

00:13:39.980 --> 00:13:46.030
so podcasts, movies, books, TV shows,
music video, all there.

00:13:46.370 --> 00:13:47.960
Again, it's all on the generator.

00:13:47.960 --> 00:13:53.590
RSS generator is available
at iTunes.apple.com/rss.

00:13:54.200 --> 00:13:58.050
So some of the basic options,
you can specify the country and

00:13:58.050 --> 00:14:00.720
the feed that you're interested in.

00:14:00.720 --> 00:14:04.790
So here I've specified that
I want France based on the

00:14:04.790 --> 00:14:07.530
FR country code and top albums.

00:14:08.300 --> 00:14:10.520
But maybe I'm interested
in something more specific.

00:14:10.580 --> 00:14:15.200
I might want the top blues
albums in the French storefront.

00:14:15.360 --> 00:14:18.780
And there we just provide a genre ID,
which is two.

00:14:19.110 --> 00:14:22.980
We put that into the URL and we get
something more specific that way.

00:14:24.060 --> 00:14:27.670
I can also say, well,
maybe the default list of 25 top

00:14:27.670 --> 00:14:29.380
blues albums isn't really what I want.

00:14:29.380 --> 00:14:29.960
I want more.

00:14:29.960 --> 00:14:31.200
I want more depth.

00:14:31.200 --> 00:14:34.590
For that,
you can introduce a limit into the URL,

00:14:34.590 --> 00:14:37.950
and you'll get back the top 200 albums.

00:14:39.920 --> 00:14:42.400
There's even more advanced possibilities.

00:14:42.400 --> 00:14:45.260
The standard feed format is Atom,
which is kind of the de

00:14:45.260 --> 00:14:47.800
facto standard for RSS.

00:14:47.800 --> 00:14:51.890
And that's specified by having
that XML at the end of the URL.

00:14:52.490 --> 00:14:55.000
But you can also change
it to get JSON output.

00:14:55.000 --> 00:14:59.760
JSON is JavaScript Object Notation.

00:14:59.760 --> 00:15:03.350
And using this output,
you can pull RSS data from

00:15:03.350 --> 00:15:06.640
JavaScript on a web page very easily.

00:15:06.640 --> 00:15:10.900
It's very easy to parse.

00:15:11.050 --> 00:15:12.620
JSON is a pretty common format.

00:15:12.620 --> 00:15:17.240
It's similar to PList,
but I can't go over it today.

00:15:17.390 --> 00:15:19.520
I do recommend JSON.org, though.

00:15:19.520 --> 00:15:24.250
They've got a great specification
and a number of software libraries

00:15:24.250 --> 00:15:26.700
used to parse and generate JSON.

00:15:27.990 --> 00:15:30.580
You might also be familiar with JSONP.

00:15:30.620 --> 00:15:34.610
If you're doing web programming
and you need to pull a service

00:15:34.610 --> 00:15:41.080
from a different domain,
JSONP stands for JSON Prefixed or Padded.

00:15:41.210 --> 00:15:46.690
It's essentially a way to work around the
cross-site origin limits of a browser.

00:15:46.800 --> 00:15:50.390
So we support a callback
parameter such as this,

00:15:50.550 --> 00:15:54.910
and the JSON that we generate is
actually a function invocation

00:15:55.240 --> 00:15:57.590
that will call into your library.

00:16:01.350 --> 00:16:05.740
Recently,
we also added an RSS feed to track

00:16:05.740 --> 00:16:09.290
customer reviews for your apps.

00:16:09.840 --> 00:16:12.210
And this is a URL that looks like this.

00:16:12.370 --> 00:16:16.870
The tag name is customer reviews,
and you plug in the ID of the

00:16:16.870 --> 00:16:19.960
content that you're interested in.

00:16:20.020 --> 00:16:23.360
And again, as you'd expect,
JSON output is also available.

00:16:23.610 --> 00:16:29.040
And it's paginated because a
number of apps have many thousands

00:16:29.040 --> 00:16:31.730
of reviews going back in time.

00:16:31.930 --> 00:16:37.570
So we support pagination so
you can pull it in very easily.

00:16:38.580 --> 00:16:42.580
Your newsreader may not support
this pagination natively,

00:16:42.580 --> 00:16:47.560
so you might need to write a script to
pull in the full list of information.

00:16:47.700 --> 00:16:51.410
But you can go into your iTunes
Connect account and find links to the

00:16:51.410 --> 00:16:53.680
customer reviews tracking in there.

00:16:53.730 --> 00:17:00.060
It's a great way to stay on top if you
just released a new version and you want

00:17:00.110 --> 00:17:02.880
to know what people are saying about it.

00:17:02.880 --> 00:17:02.880
It'll show up in your newsreader.

00:17:02.880 --> 00:17:02.880
Quite useful.

00:17:04.790 --> 00:17:07.840
So for that,
for a demo of what you can do with Atom,

00:17:07.840 --> 00:17:11.230
I'm going to cut over to Ted Hosmann,
who's going to show us how we can

00:17:11.230 --> 00:17:14.700
integrate an Atom feed into a website.

00:17:14.700 --> 00:17:16.730
Thank you, Mark.

00:17:20.460 --> 00:17:24.640
Here I've got just a simple
website that I've been developing.

00:17:24.640 --> 00:17:26.500
It's a music blog site
that I'm working on,

00:17:26.500 --> 00:17:29.200
and you can see here
that it's pretty basic,

00:17:29.200 --> 00:17:30.320
pretty plain.

00:17:30.320 --> 00:17:33.830
As Mark had mentioned,
we've got widgets that you

00:17:33.830 --> 00:17:36.630
can embed in your website,
and I've gone ahead and I've already

00:17:36.630 --> 00:17:38.280
done that with my first posting.

00:17:38.280 --> 00:17:44.320
The widgets are nice, they look good,
and they've got this great feature

00:17:44.320 --> 00:17:47.850
where I can actually play a preview
of the song directly in the widget.

00:17:48.300 --> 00:17:51.060
This is our 30 second previews.

00:17:51.060 --> 00:17:54.740
And this is all done
automatically for you.

00:17:54.740 --> 00:17:58.130
There's not really much that
goes into making a widget.

00:17:58.250 --> 00:18:00.590
So,
what I'm going to do is I'm actually --

00:18:00.690 --> 00:18:05.230
I want more control over what I'm going
to present in my next blog posting.

00:18:05.440 --> 00:18:11.440
I want to use the RSS feed so that I can
have something that updates regularly.

00:18:11.440 --> 00:18:14.630
The widgets are nice,
but the album art is a little small.

00:18:14.900 --> 00:18:17.540
I want a little bit bigger album art.

00:18:17.560 --> 00:18:23.910
And I also want to show just a listing
of the songs that are on the albums.

00:18:23.910 --> 00:18:27.250
So, to do that,
I've gone ahead and built out

00:18:27.280 --> 00:18:30.520
-- here's my HTML for my blog.

00:18:30.520 --> 00:18:34.980
Let me first just bring
up -- instead of this,

00:18:34.980 --> 00:18:39.690
I'm going to bring up my RSS code
snippet that I've written.

00:18:39.730 --> 00:18:42.450
And this is a JavaScript code snippet.

00:18:42.460 --> 00:18:45.200
At the top you can see
the very first line.

00:18:45.220 --> 00:18:46.270
I've defined the feed.

00:18:46.310 --> 00:18:50.380
I want to use -- right here
I'm using the top albums.

00:18:50.400 --> 00:18:54.190
I want the genre 20,
which is the alternative rock

00:18:54.250 --> 00:18:56.250
albums that are on the store.

00:18:56.460 --> 00:18:57.440
And I'm using JSON.

00:18:57.460 --> 00:19:00.470
I've also included some of the
information from my affiliate

00:19:01.040 --> 00:19:05.970
account so that all of these links
automatically get populated with

00:19:05.970 --> 00:19:08.620
my affiliate tracking information.

00:19:08.620 --> 00:19:13.550
And then I've got JSON -- or
JavaScript library that will

00:19:13.660 --> 00:19:16.210
go ahead and parse this for me.

00:19:16.240 --> 00:19:19.110
So, what I'm going to do is I'm just
going to copy this and paste

00:19:19.160 --> 00:19:21.500
it right into my blog posting.

00:19:21.500 --> 00:19:24.220
As we scroll down,
you'll see that here's my

00:19:24.220 --> 00:19:26.180
most recent blog posting.

00:19:26.240 --> 00:19:28.970
I'm just going to paste it right here.

00:19:29.530 --> 00:19:30.730
And save it.

00:19:30.780 --> 00:19:34.390
And when we go back,
let's refresh my blog.

00:19:34.390 --> 00:19:38.830
You'll see that here I've now
got the top three albums from

00:19:38.840 --> 00:19:40.840
the alternative rock genre.

00:19:40.910 --> 00:19:44.080
As I hover over,
I'm showing the first five

00:19:44.080 --> 00:19:45.330
songs from each album.

00:19:45.330 --> 00:19:49.300
And when I click on any of the albums,

00:19:49.530 --> 00:19:54.120
It will launch me into the iTunes
preview page and iTunes will

00:19:54.120 --> 00:19:55.790
open up to that piece of content.

00:19:56.370 --> 00:20:02.890
And then just real quick,
if I can go back.

00:20:05.560 --> 00:20:08.590
They took away my back ability.

00:20:08.680 --> 00:20:09.590
Okay.

00:20:09.720 --> 00:20:16.620
So if I go back to my snippet that I did,
let's say I don't want alternative,

00:20:16.620 --> 00:20:19.080
but I want the actual rock genre.

00:20:19.220 --> 00:20:20.840
Let's go ahead and save that.

00:20:20.910 --> 00:20:22.400
Refresh here.

00:20:22.440 --> 00:20:26.600
And automatically,
it's been updated to our rock genre.

00:20:26.770 --> 00:20:31.290
So that's some of the things
you can do with the RSS feeds.

00:20:31.360 --> 00:20:34.420
And this will update as
the store charts update.

00:20:35.120 --> 00:20:36.160
Back to you, Mark.

00:20:36.390 --> 00:20:37.720
So that was RSS.

00:20:38.040 --> 00:20:42.740
It's popular content coming in.

00:20:42.740 --> 00:20:46.540
But we might -- our users might
have something specific in mind

00:20:46.540 --> 00:20:48.760
when they come to our app or site.

00:20:48.760 --> 00:20:56.360
And maybe we want to show something,
allow them to search for content

00:20:56.360 --> 00:20:57.520
or look it up by their ID.

00:20:57.520 --> 00:20:57.520
For that,
we have the Search and Lookup APIs.

00:20:59.840 --> 00:21:03.180
So this is a metadata
lookup available on the web.

00:21:03.180 --> 00:21:06.770
It's live, always up to date.

00:21:07.180 --> 00:21:13.400
The responses come back as JSON,
just like in the RSS format.

00:21:13.540 --> 00:21:14.540
Sorry.

00:21:14.540 --> 00:21:18.700
Just like the feeds provide JSON,
these responses are also in JSON.

00:21:18.780 --> 00:21:21.270
The two main actions
available are search.

00:21:21.500 --> 00:21:22.690
This is pretty much as you'd expect.

00:21:22.740 --> 00:21:27.410
You put in a term,
you get back results appropriate

00:21:27.410 --> 00:21:27.410
for that search term.

00:21:27.700 --> 00:21:31.130
You can also do a lookup if
you already know the ID of a

00:21:31.180 --> 00:21:34.940
particular piece of content,
which sounds kind of mundane,

00:21:34.940 --> 00:21:37.550
but you can actually do some
pretty powerful stuff with it.

00:21:39.160 --> 00:21:45.680
So a data example of this is kind of
what you'll get back if you do a search.

00:21:45.680 --> 00:21:47.500
There's quite a bit of information here.

00:21:47.500 --> 00:21:52.000
There's URLs to some icons
appropriate for this.

00:21:52.000 --> 00:21:57.120
This is a TV episode,
so it's got a description

00:21:57.120 --> 00:22:01.010
of what's going on,
what the TV season name is,

00:22:01.010 --> 00:22:01.010
what the price is, a lot of data there.

00:22:04.590 --> 00:22:08.810
So when you do a search,
the simplest possible thing to do is

00:22:08.840 --> 00:22:13.960
create a URL and add a term to it,
and that's your search term.

00:22:14.030 --> 00:22:16.700
But there's a number of other
modifiers you can do when you're

00:22:16.700 --> 00:22:22.240
creating that URL that will change
the results that you get back.

00:22:22.330 --> 00:22:23.340
The first two are pretty simple.

00:22:23.340 --> 00:22:25.490
It's country and language.

00:22:25.520 --> 00:22:28.370
Not all content is available
throughout the world,

00:22:28.370 --> 00:22:31.950
so it's important to specify the
right country for your users when

00:22:31.950 --> 00:22:34.060
you're doing a search or a lookup.

00:22:34.060 --> 00:22:38.520
And the language will also define how
things are formatted when they come back.

00:22:38.520 --> 00:22:42.460
So if we have metadata available
in a particular language,

00:22:42.530 --> 00:22:44.110
we'll use that one.

00:22:45.020 --> 00:22:47.870
Media allows you to sort of
narrow the scope of your search.

00:22:48.040 --> 00:22:52.810
So this allows you to define if you're
looking for books versus apps or

00:22:52.880 --> 00:22:55.900
music versus music videos or whatever.

00:22:55.900 --> 00:23:00.210
If you want to get even more
specific for within a media type,

00:23:00.380 --> 00:23:02.040
you can specify entity.

00:23:02.040 --> 00:23:04.540
And the entity will allow
you to distinguish between,

00:23:04.540 --> 00:23:08.810
say, an album versus a song or a
TV episode versus a season,

00:23:08.970 --> 00:23:10.810
that sort of thing.

00:23:11.510 --> 00:23:16.070
The attribute query parameter allows
you to target your search term to

00:23:16.070 --> 00:23:18.990
a particular field of the content.

00:23:19.010 --> 00:23:22.590
So rather than searching for everything,
you can search specifically for an

00:23:22.980 --> 00:23:27.710
album title or a TV episode title.

00:23:29.110 --> 00:23:34.620
The limit parameter, again, as an RSS,
allows you to change the default

00:23:35.000 --> 00:23:36.580
number of results that come back.

00:23:38.450 --> 00:23:43.200
And finally, to support that JSONP for
cross-site script calls,

00:23:43.200 --> 00:23:44.720
we have a callback.

00:23:44.980 --> 00:23:49.750
So a callback specifies a function that
is called in your JavaScript library.

00:23:50.660 --> 00:23:53.110
All these results come back
as JSON dictionaries and

00:23:53.120 --> 00:23:54.620
they're sorted by relevancy.

00:23:54.790 --> 00:24:00.450
So we try and come back with the best
results appropriate for your search.

00:24:01.360 --> 00:24:05.620
The Lookup API, as I said before,
it takes basically an iTunes ID.

00:24:05.830 --> 00:24:07.690
That's the most common case.

00:24:07.800 --> 00:24:10.220
So if you know the
ID of the store content,

00:24:10.220 --> 00:24:12.900
put that in,
you'll get back the most recent

00:24:12.900 --> 00:24:14.890
up-to-date metadata for it.

00:24:15.330 --> 00:24:19.700
You can also use other
identifiers such as UPC or EAN.

00:24:19.810 --> 00:24:21.740
That's European Article Number.

00:24:21.740 --> 00:24:25.470
They're very similar values.

00:24:25.560 --> 00:24:28.440
If you have an ISBN for a book,
you can use that or a bundle

00:24:28.440 --> 00:24:33.980
ID for an app either on the
Mac App Store or iOS App Store.

00:24:35.420 --> 00:24:38.360
Now the query parameters for
Lookup are very similar to the

00:24:38.360 --> 00:24:41.360
ones for the search requests,
but there's two important difference.

00:24:41.390 --> 00:24:43.400
One important difference.

00:24:43.490 --> 00:24:46.610
Entity allows you to kind of
navigate the content tree.

00:24:46.710 --> 00:24:53.160
So if you have a TV show store ID and
you want to know the particular

00:24:53.160 --> 00:24:58.200
episodes within that season,
you can pass in entity equals episode

00:24:58.200 --> 00:25:00.740
and get back results for that.

00:25:01.600 --> 00:25:05.460
Sort, in this case,
can change the default

00:25:05.470 --> 00:25:07.600
order of the results.

00:25:07.600 --> 00:25:10.020
By default,
content is sorted by popularity,

00:25:10.190 --> 00:25:13.000
but you can also change it so
that it's sorted by recentness.

00:25:13.310 --> 00:25:18.300
So if you want the most recent episodes,
you can use a sort equals recent there.

00:25:19.860 --> 00:25:23.110
To take us through some of how
this works with some examples and

00:25:23.120 --> 00:25:26.560
update our blog a little bit more,
we'll go back to Ted.

00:25:26.560 --> 00:25:27.140
Thanks.

00:25:27.250 --> 00:25:29.140
Thank you, Mark.

00:25:29.120 --> 00:25:32.220
First off,
I'm just going to go through some of the

00:25:32.220 --> 00:25:35.540
information that you'll get back from
using our search and our lookup APIs.

00:25:35.540 --> 00:25:39.420
Right here, I'm doing a lookup in Safari.

00:25:39.420 --> 00:25:43.440
We'll use Safari just so you can see what
the data is that's presented back to you.

00:25:43.810 --> 00:25:47.680
Obviously, you'll want to bake
this into your system.

00:25:49.100 --> 00:25:52.150
But real quick,
I'm just going to do a lookup,

00:25:52.280 --> 00:25:58.080
and I'm going to use the bundle ID just
to get a sense of what we've got here.

00:25:58.080 --> 00:26:03.460
So I'm going to look up
bundleid.com.apple.pages,

00:26:03.500 --> 00:26:07.600
and this will pull up
information relating to the

00:26:07.600 --> 00:26:10.360
Pages app that Apple's built.

00:26:10.500 --> 00:26:14.610
As I scroll through some of this stuff,
you'll see that the artist here is Apple.

00:26:14.620 --> 00:26:20.200
You can also see that the...
The genres are included.

00:26:20.200 --> 00:26:23.180
The screenshots for iPad are included.

00:26:23.180 --> 00:26:26.320
The languages that are
available for the app.

00:26:26.820 --> 00:26:28.880
Importantly, the price is there.

00:26:28.880 --> 00:26:31.660
Other screenshots that we have.

00:26:31.790 --> 00:26:33.490
And then all the supported devices.

00:26:33.570 --> 00:26:37.700
So this is all information that might be
relevant to what you're looking for when

00:26:37.700 --> 00:26:39.980
you look up a specific piece of content.

00:26:39.980 --> 00:26:44.510
I'm going to switch it up a
little bit because my website is

00:26:44.510 --> 00:26:47.250
about music and not about apps.

00:26:47.260 --> 00:26:53.730
I'm going to say... I'm looking for...
I'm going to make a search or a lookup

00:26:53.790 --> 00:26:57.350
that takes a broad amount of information.

00:26:57.380 --> 00:26:58.240
We're going to narrow it down.

00:26:58.240 --> 00:27:05.620
Right now, I know that the ID for
Madonna happens to be 20,044.

00:27:05.770 --> 00:27:10.590
And what we get back here
is just the meta information

00:27:10.590 --> 00:27:13.290
about Madonna the artist.

00:27:13.300 --> 00:27:17.700
So Madonna is a pop artist.

00:27:17.720 --> 00:27:19.060
But I want to know more.

00:27:19.060 --> 00:27:23.460
I want to know more information
about Madonna and the songs.

00:27:23.460 --> 00:27:27.400
Specifically, maybe the albums that
she has on our store.

00:27:27.400 --> 00:27:29.640
I'm going to add some parameters.

00:27:29.640 --> 00:27:32.540
Entity equals album.

00:27:34.340 --> 00:27:37.200
And now we'll see we've got 45 results.

00:27:37.300 --> 00:27:40.950
Again, the metadata for Madonna,
the artist, is right there at the top.

00:27:41.120 --> 00:27:48.720
And then the rest of the information
is specific to Madonna's albums.

00:27:49.010 --> 00:27:51.920
45 is a bit much.

00:27:52.470 --> 00:27:56.850
I only want five albums,
so I can put in that limit

00:27:56.920 --> 00:28:04.130
that Mark had talked about,
limit equals five.

00:28:04.170 --> 00:28:06.660
The list right here is
sorted by popularity,

00:28:06.660 --> 00:28:09.880
and maybe I'm not looking
for the most popular albums.

00:28:09.900 --> 00:28:13.380
She had some very popular
albums in the '90s,

00:28:13.380 --> 00:28:18.100
and I want the most recent albums,
so I'm going to sort all of this.

00:28:18.100 --> 00:28:20.090
So sort equals recent.

00:28:21.150 --> 00:28:25.320
And what this will give
us is just six results.

00:28:25.570 --> 00:28:30.960
And what you'll see is there are, again,
just the Madonna metadata at

00:28:30.960 --> 00:28:34.280
the top and then five albums,
the most recent albums

00:28:34.380 --> 00:28:36.360
on the store for Madonna.

00:28:36.360 --> 00:28:38.540
So that's the lookup API.

00:28:38.540 --> 00:28:40.570
If you know something about
what you're looking for,

00:28:40.570 --> 00:28:46.120
you can get to the meta information about
that pretty quickly with the lookup API.

00:28:48.000 --> 00:28:50.290
In my case,
I've got a website and I want my

00:28:50.290 --> 00:28:53.220
users to search for something,
and so I don't know what

00:28:53.220 --> 00:28:56.320
exactly they're looking for,
so I'm going to use the search API.

00:28:56.320 --> 00:29:02.880
Search, and I'm going to have a term that
the users are going to put in there.

00:29:02.880 --> 00:29:06.640
So let's say in this case they
search for the term Madonna.

00:29:09.560 --> 00:29:11.580
I'm going to get back 50 results.

00:29:11.640 --> 00:29:13.030
That's the default.

00:29:13.270 --> 00:29:16.240
And all of the results
here are mixed and matched.

00:29:16.260 --> 00:29:20.860
You can see right here I've got
an audio book about Madonna.

00:29:20.860 --> 00:29:24.890
That's not necessarily what
I'm looking for in my website.

00:29:24.900 --> 00:29:26.440
It's about music, not about books.

00:29:26.480 --> 00:29:30.860
She is an author,
and she's also a movie star.

00:29:30.860 --> 00:29:33.450
So let's narrow this
down a little bit more.

00:29:33.620 --> 00:29:37.850
I want entity equals album again.

00:29:41.430 --> 00:29:45.340
And now we're going to narrow it
down to just albums by Madonna.

00:29:45.350 --> 00:29:48.400
You can see that the wrapper
type here is a collection,

00:29:48.400 --> 00:29:50.250
so that is an album.

00:29:50.490 --> 00:29:51.940
Actually,
we have collection type as album.

00:29:51.940 --> 00:29:55.670
All the information
about that album is here.

00:29:57.100 --> 00:30:05.900
[Transcript missing]

00:30:09.820 --> 00:30:14.190
And now we've got just five results,
and these are five Madonna albums.

00:30:14.220 --> 00:30:18.590
Madonna happens to be a popular term,
and we're seeing a lot

00:30:18.590 --> 00:30:22.300
of results from Madonna,
but it's not necessarily the

00:30:22.410 --> 00:30:26.380
case in the search that you
will get Madonna the artist.

00:30:26.380 --> 00:30:31.990
And I might actually be looking
for song terms that have

00:30:32.570 --> 00:30:38.270
Madonna in the title of the song,
and I don't necessarily want

00:30:38.380 --> 00:30:41.300
artists that are named Madonna.

00:30:41.300 --> 00:30:44.170
So let's narrow it down so
that I can say Attribute.

00:30:46.620 --> 00:30:50.210
Attribute equals a song term.

00:30:50.230 --> 00:30:55.340
And now what we'll get
is we'll get back... Oh,

00:30:55.360 --> 00:30:56.460
I'm sorry.

00:30:56.460 --> 00:30:59.160
I got to take out the entity
equals album because we're not

00:30:59.240 --> 00:31:01.040
looking for albums necessarily.

00:31:03.750 --> 00:31:11.510
So now you'll see we are -- the track
name here is "The Power of Madonna."

00:31:12.030 --> 00:31:13.980
It's from -- it's a TV episode.

00:31:14.180 --> 00:31:18.240
It was from the Glee soundtrack
or from the Glee -- actually,

00:31:18.240 --> 00:31:19.360
the Glee TV show.

00:31:19.490 --> 00:31:24.610
So now we can narrow down what
our users are searching for to

00:31:24.610 --> 00:31:29.810
a specific piece of metadata,
and in this case, it was a song term.

00:31:29.850 --> 00:31:32.030
So that's not what I'm
going to do in my website.

00:31:32.170 --> 00:31:35.740
I do want the albums,
all that search stuff.

00:31:35.870 --> 00:31:41.730
So let's go back to our code and see what
I've written for this specific example.

00:31:41.990 --> 00:31:46.130
I'm going to build out a
search feature on my website.

00:31:46.140 --> 00:31:50.340
I want just a text input
box and a submit button.

00:31:50.570 --> 00:31:54.900
Here you can see I've got just that,
the text input, submit button,

00:31:55.030 --> 00:32:01.040
and I've also, in the JavaScript,
I've included my affiliate credentials

00:32:01.040 --> 00:32:06.890
so that I can get affiliate commission
for referencing users to this.

00:32:06.900 --> 00:32:11.630
Let's look at the
JavaScript that's written for this.

00:32:11.630 --> 00:32:16.850
I've got this already
embedded in my website.

00:32:17.760 --> 00:32:20.050
If you look at the...

00:32:20.760 --> 00:32:26.030
The very top up here, the very beginning,
I've got my search parameters

00:32:26.030 --> 00:32:28.230
that I want to use.

00:32:28.450 --> 00:32:33.040
And then the rest of this is just
going to return results and format

00:32:33.040 --> 00:32:37.000
and make things pretty for my website.

00:32:37.330 --> 00:32:40.980
So let's go ahead and go into

00:32:41.480 --> 00:32:43.210
My blog posting.

00:32:43.450 --> 00:32:47.600
I want to put right at the top,
I want to put this.

00:32:48.010 --> 00:32:54.630
So I'm going to save this
and we'll go back to my blog.

00:32:54.900 --> 00:32:56.240
Let me refresh.

00:32:56.630 --> 00:33:01.020
You'll see now there is an input
box and I can search for Madonna.

00:33:01.020 --> 00:33:08.020
And now you'll see I've built out
search functionality on my website

00:33:08.040 --> 00:33:10.120
that uses the store results.

00:33:10.750 --> 00:33:12.240
You've got the album art here.

00:33:12.320 --> 00:33:16.740
You've got the name of the
artist and the album names.

00:33:16.740 --> 00:33:20.100
And when you click on them,
they will take you right into the

00:33:20.100 --> 00:33:25.070
store just as our widgets do and
just as the RSS did on our website.

00:33:25.160 --> 00:33:30.280
So that's the Search and Lookup API that
we have for the affiliate program.

00:33:33.410 --> 00:33:33.900
Great.

00:33:33.900 --> 00:33:36.840
Thank you, Ted.

00:33:36.980 --> 00:33:39.540
So, yeah, there's a lot you can
do with the Search API.

00:33:39.560 --> 00:33:44.550
And that also will work from an app,
so if you need to pull in data that way,

00:33:44.630 --> 00:33:46.260
go ahead and do it.

00:33:47.340 --> 00:33:51.400
So up to now we've been
talking about the Web API,

00:33:51.430 --> 00:33:55.060
the live, constantly updating feeds.

00:33:55.060 --> 00:34:00.490
There's also an offline feed that
you can pull down and import into a

00:34:00.490 --> 00:34:03.910
database for offline or batch processing.

00:34:03.920 --> 00:34:05.380
And we call these feeds EPF.

00:34:05.380 --> 00:34:07.700
They're bulk data feeds.

00:34:07.700 --> 00:34:10.010
EPF comes in two flavors.

00:34:10.370 --> 00:34:13.000
There's EPF relational,
which is kind of intended

00:34:13.150 --> 00:34:14.860
for relational databases.

00:34:14.860 --> 00:34:20.000
And there's EPF flats for sort
of more of the NoSQL crowd.

00:34:21.900 --> 00:34:26.600
So for EPF Relational,
this is a feed that has very

00:34:26.810 --> 00:34:31.260
rich metadata about virtually
all the content on the store.

00:34:31.280 --> 00:34:36.010
It's intended for a relational database,
and it's organized by files

00:34:36.010 --> 00:34:39.070
representing database tables.

00:34:40.470 --> 00:34:45.570
And this is aimed at orgs that have some
pretty serious data processing needs.

00:34:45.720 --> 00:34:48.580
Perhaps they have a content
library that they want to

00:34:48.580 --> 00:34:53.340
cross-reference with the iTunes store,
or they have a music or app

00:34:53.510 --> 00:34:58.920
recommendation system that needs to
know about everything that's available.

00:34:58.970 --> 00:35:01.770
That's where EPF Relational comes in.

00:35:03.010 --> 00:35:06.430
So the data that's available is,
as I said, very broad.

00:35:06.440 --> 00:35:11.040
There's apps, there's podcasts, music,
audiobooks.

00:35:11.040 --> 00:35:13.890
It's pretty broad coverage.

00:35:13.890 --> 00:35:20.900
And it works by generating a
bulk export in two main modes.

00:35:20.900 --> 00:35:23.700
There's a full export
that's generated every week.

00:35:23.700 --> 00:35:25.740
And when I said this
was a bulk data feed,

00:35:25.740 --> 00:35:29.060
this is 30,
40 gigabytes uncompressed metadata.

00:35:29.060 --> 00:35:35.320
So it's no small matter to
bring this into a database.

00:35:35.400 --> 00:35:37.870
Fortunately,
we also have a daily incremental export,

00:35:37.870 --> 00:35:42.840
which is all the content that's been
updated since the last full export.

00:35:42.840 --> 00:35:45.670
And so if you pull down each
of the weekly full feeds,

00:35:45.670 --> 00:35:49.090
you don't have to import all 30,
40 gigs every day.

00:35:49.220 --> 00:35:51.700
You just use the incrementals.

00:35:51.700 --> 00:35:54.340
And this data you pull
down from a website,

00:35:54.340 --> 00:35:58.330
you need to sign up with the program to
get an account for that website first.

00:35:58.330 --> 00:36:00.300
And you pull it down with HTTP.

00:36:02.210 --> 00:36:07.710
So EPF relational is organized
into purpose-specific archives.

00:36:07.720 --> 00:36:13.060
There's iTunes, which is kind of the
basic metadata package.

00:36:13.060 --> 00:36:19.480
There's a matching archive for UPC, ISBN,
Grid, all those other ID systems

00:36:19.480 --> 00:36:22.200
is in the matching archive.

00:36:22.200 --> 00:36:25.410
There's a pricing archive,
which is supposed to cover

00:36:25.420 --> 00:36:28.620
all of the countries that
the content is available in,

00:36:28.640 --> 00:36:31.040
and there's quite a few at this point.

00:36:31.680 --> 00:36:37.030
And finally, the popularity archive gives
you the top thousand pieces of

00:36:37.030 --> 00:36:39.120
content by rank in each genre.

00:36:41.760 --> 00:36:45.900
Within each archive are those files
that represent database tables.

00:36:45.900 --> 00:36:48.140
So for an example,
if you're interested in artists,

00:36:48.140 --> 00:36:54.660
either music artists or movie
directors or actors and actresses

00:36:55.070 --> 00:36:58.040
or even application developers,
that information is going

00:36:58.040 --> 00:36:58.040
to be in the artist table.

00:36:58.450 --> 00:37:02.160
And if you're interested, for example,
in application metadata,

00:37:02.160 --> 00:37:03.900
that will be in the application table.

00:37:04.040 --> 00:37:06.490
And these are, again,
both database tables

00:37:06.820 --> 00:37:09.230
represented in files.

00:37:09.620 --> 00:37:12.030
But if you want to know
who did a particular app,

00:37:12.140 --> 00:37:18.440
who wrote what, essentially,
it's pretty much as you'd expect

00:37:18.440 --> 00:37:20.490
from relational schema 101.

00:37:20.490 --> 00:37:24.220
There's a join table between the
artist and the application files,

00:37:24.220 --> 00:37:27.220
and those are how you can
cross-reference the two.

00:37:28.450 --> 00:37:30.570
So that's EPF relational.

00:37:30.610 --> 00:37:33.960
EPF flat is a simpler
way of doing things.

00:37:33.960 --> 00:37:37.700
And instead of archives
full of multiple files,

00:37:37.820 --> 00:37:41.190
each archive is pretty
much a single file.

00:37:41.250 --> 00:37:47.190
And each file is for a specific country
and is intended for a given media type.

00:37:47.190 --> 00:37:51.650
So if you want apps in the UK,
there's one file for that.

00:37:51.760 --> 00:37:58.320
You don't need to cross-reference
anything with a join table or anything.

00:37:58.400 --> 00:37:59.500
Thank you.

00:38:00.430 --> 00:38:04.610
and the format is actually compatible
with a spreadsheet application.

00:38:04.810 --> 00:38:09.200
This is, again, a large data feed,
so it's unlikely that your spreadsheet

00:38:09.200 --> 00:38:13.300
is going to be able to handle all,
you know, several million rows.

00:38:13.520 --> 00:38:18.790
But if you chop it up,
you can actually edit

00:38:18.790 --> 00:38:18.790
it with a spreadsheet.

00:38:19.340 --> 00:38:23.240
There's no schema,
no relational tables or anything.

00:38:23.240 --> 00:38:29.240
All the information for a given piece
of content is available in a single row.

00:38:29.640 --> 00:38:34.370
And because of that,
it's really easy to stuff this into

00:38:34.490 --> 00:38:37.500
one of those NoSQL content stores.

00:38:37.500 --> 00:38:41.540
So if you're using Lucene or SimpleDB,
Voldemort, Memcached,

00:38:41.770 --> 00:38:48.250
anything with kind of a key value system,
EPF Flat is a great way to do that.

00:38:49.720 --> 00:38:50.600
So that's EPF.

00:38:50.600 --> 00:38:55.460
It's a lot of data,
a lot of possibilities.

00:38:55.770 --> 00:38:59.660
To make it easier on you to pull
this data into your database,

00:38:59.660 --> 00:39:02.210
we do have the EPF importer script.

00:39:02.280 --> 00:39:07.480
It's a cross-platform Python app,
and it pulls down the EPF data

00:39:07.480 --> 00:39:09.200
into a MySQL database.

00:39:10.200 --> 00:39:14.050
It handles both the relational
and the EPF flat data,

00:39:14.050 --> 00:39:18.270
and it's really easy to set up and get
going because it's self-configuring.

00:39:18.270 --> 00:39:23.480
It will actually read the comment
headers from the export files and

00:39:23.480 --> 00:39:26.840
use that to generate column names,
database type information.

00:39:26.840 --> 00:39:31.800
That allows us to distinguish
a VARCAR from a number,

00:39:31.800 --> 00:39:36.990
and it will even pull in the
suggested primary keys based

00:39:36.990 --> 00:39:40.120
on the comments in the export.

00:39:40.200 --> 00:39:41.190
Thank you.

00:39:42.350 --> 00:39:46.240
You can restrict the imports
with a whitelist and a blacklist.

00:39:46.240 --> 00:39:50.340
So if you're interested in just a subset
of the information that's available,

00:39:50.340 --> 00:39:53.090
you can either blacklist the
other stuff or whitelist the

00:39:53.090 --> 00:39:54.710
things you're interested in.

00:39:55.210 --> 00:39:59.060
Since it's such a large amount of data,
it actually supports resume.

00:39:59.090 --> 00:40:02.840
So if it's interrupted for any reason,
you don't have to start

00:40:02.890 --> 00:40:04.500
over from the beginning.

00:40:05.200 --> 00:40:08.910
And it's released a sample code,
so if you don't deploy MySQL in

00:40:08.910 --> 00:40:12.380
your production environment
and you want to use it with

00:40:12.380 --> 00:40:15.670
one of these other data stores,
totally easy to do.

00:40:15.730 --> 00:40:19.780
You just edit the code and
you're off to the races.

00:40:19.840 --> 00:40:25.340
So now that we've got our live,
updated over the web services and

00:40:25.340 --> 00:40:30.300
we've got our bulk processing,
let's see what we can do with it.

00:40:30.360 --> 00:40:34.020
One of the cool things that you
can do once you have a notion of

00:40:34.030 --> 00:40:38.500
what content is available on the
store is to create a web mix.

00:40:39.360 --> 00:40:44.530
These are dynamically generated
playlists that you can create on

00:40:44.530 --> 00:40:48.060
the fly just by defining a URL.

00:40:48.110 --> 00:40:51.470
There's no upload required beforehand.

00:40:51.580 --> 00:40:56.100
So if you -- if a user on your
site has expressed interest

00:40:56.100 --> 00:41:01.090
in a particular set of data,
you can use Web iMiX to generate

00:41:01.110 --> 00:41:05.150
a playlist of content that
they would be interested in,

00:41:05.150 --> 00:41:05.150
and they can buy it with a single click.

00:41:05.950 --> 00:41:09.700
Now this works, it's worked for a few
years on the desktop,

00:41:09.700 --> 00:41:13.040
but it recently came onto
the iPad and iPhone as well.

00:41:13.180 --> 00:41:14.140
So it's got this great UI.

00:41:15.600 --> 00:41:19.730
So to get started with a Web Mix,
you do need to register an account

00:41:20.050 --> 00:41:22.960
with the affiliate program first.

00:41:23.190 --> 00:41:27.170
And that's so that you can digitally
sign each URL so that we know that

00:41:27.170 --> 00:41:29.570
a particular Web Mix came from you.

00:41:29.820 --> 00:41:31.930
There's a script provided
to get you going.

00:41:32.030 --> 00:41:35.640
And just take a look at this output.

00:41:35.640 --> 00:41:38.230
You can define the
title for your Web Mix,

00:41:38.230 --> 00:41:40.700
and that's going to show up in the UI.

00:41:40.800 --> 00:41:44.950
You can also specify the description,
and that will be there too.

00:41:45.070 --> 00:41:48.990
There's an IDs field for
specifying the content that you

00:41:49.320 --> 00:41:53.220
actually want within the playlist,
and you can specify

00:41:53.220 --> 00:41:55.060
both songs and albums.

00:41:55.060 --> 00:41:56.570
So if you want to
include an entire album,

00:41:56.570 --> 00:41:56.570
that's doable.

00:41:57.680 --> 00:42:01.460
And finally, there's the WDID,
which identifies you as the

00:42:01.770 --> 00:42:05.150
source of this Web Mix URL,
and a key which represents the hash

00:42:05.150 --> 00:42:06.800
of the URL that's been applied.

00:42:06.800 --> 00:42:10.080
So that's just we know that
this came from a trusted source.

00:42:12.730 --> 00:42:16.530
That's WebMix and the affiliate program.

00:42:16.630 --> 00:42:22.600
All of this information is available
on this great resources website.

00:42:22.600 --> 00:42:25.600
It's available at
apple.com/itunesaffiliates.

00:42:25.600 --> 00:42:29.600
There's a lot of information
there about documentation.

00:42:29.600 --> 00:42:35.590
Some of these-- a lot of the
keys and permitted values,

00:42:35.600 --> 00:42:39.600
there's a long list of pretty much
everything you can do with it.

00:42:39.600 --> 00:42:43.460
There's a blog and some tips
and tricks that we encounter.

00:42:43.700 --> 00:42:47.020
So if you go there,
we actually have an RSS feed that

00:42:47.020 --> 00:42:52.600
you can sign up for and stay up
to date with all the goings on.

00:42:52.640 --> 00:42:54.580
So I mentioned the
affiliate website already.

00:42:54.610 --> 00:42:56.730
If you have any questions,
you can mail us at

00:42:56.730 --> 00:42:58.600
itunesaffiliates@apple.com.

00:42:58.600 --> 00:43:01.600
Our technology evangelist
today was Vicki Murley.

00:43:01.630 --> 00:43:04.340
And if you have any more questions,
you can always go to

00:43:04.380 --> 00:43:08.600
the devforums.apple.com
website and ask them there.

00:43:08.600 --> 00:43:10.600
We'll be doing an
affiliate lab after lunch,

00:43:10.600 --> 00:43:15.590
2:00 p.m., in the Safari and
web demo-- lab area.

00:43:16.940 --> 00:43:19.330
And just to summarize,
the affiliate program is a great

00:43:19.330 --> 00:43:23.280
way to earn commissions and to
promote your apps and other content.

00:43:23.580 --> 00:43:29.590
This can be really powerful and
also an important source of revenue.

00:43:29.730 --> 00:43:34.340
If you're just getting started,
check out LinkMaker and the widgets.

00:43:34.340 --> 00:43:37.690
Pretty much no coding
necessary to use that.

00:43:38.720 --> 00:43:40.600
You can use RSS for keeping
track of what's new,

00:43:40.600 --> 00:43:43.810
what's hot on the store.

00:43:43.810 --> 00:43:50.310
And you can do the Search API for
on-the-fly queries and lookup to get

00:43:50.310 --> 00:43:50.310
the latest prices and other metadata.

00:43:50.700 --> 00:43:58.660
EPF is available as a bulk
data feed which can help you

00:43:58.660 --> 00:43:58.660
do some offline processing.

00:43:59.540 --> 00:44:03.320
and Web Mix allows you to define
custom playlists for users on the

00:44:03.320 --> 00:44:04.870
fly right when they're needed.

00:44:07.130 --> 00:44:10.200
I really do urge you to check
out the Affiliaite's website.

00:44:10.200 --> 00:44:13.380
It's a great way to stay in
touch and stay abreast of what's

00:44:13.380 --> 00:44:15.100
going on with the program.

00:44:16.300 --> 00:44:18.510
and most importantly,
if you're interested,

00:44:18.510 --> 00:44:22.370
go reach out to one or more
of the affiliate networks,

00:44:22.490 --> 00:44:25.080
create an account,
and get started because there's no

00:44:25.490 --> 00:44:27.540
other way to get started faster.

00:44:27.540 --> 00:44:30.090
All right, thanks.