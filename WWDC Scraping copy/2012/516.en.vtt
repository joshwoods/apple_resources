WEBVTT

00:00:15.080 --> 00:00:16.450
Good afternoon, everybody.

00:00:16.540 --> 00:00:17.690
My name is Dan Kurtz.

00:00:17.770 --> 00:00:20.860
I'm an iOS engineer on the
Game Center team here at Apple,

00:00:20.860 --> 00:00:25.280
and I'm here to talk to you about
integrating your game with Game Center.

00:00:25.390 --> 00:00:26.860
So let's get right down to it.

00:00:26.940 --> 00:00:28.600
What is Game Center?

00:00:28.670 --> 00:00:31.280
Well,
Game Center is a gaming platform that

00:00:31.280 --> 00:00:35.160
allows players to track their progress
in your games as they're playing them,

00:00:35.170 --> 00:00:39.760
as well as connect with their other
Game Center friends through your games.

00:00:39.840 --> 00:00:43.920
Game Center is built upon
three fundamental pillars

00:00:43.940 --> 00:00:46.100
that make up the platform:
players,

00:00:46.340 --> 00:00:49.640
Scores and achievements.

00:00:49.660 --> 00:00:53.430
Now, some of you might be new to the
Game Center platform and that's

00:00:53.560 --> 00:00:56.790
maybe why you're here today,
but I bet you that these are all

00:00:56.790 --> 00:00:58.840
familiar concepts for you already.

00:00:59.030 --> 00:01:03.790
I mean,
these are terms that have been within our

00:01:03.790 --> 00:01:03.790
gaming lexicon for a very long time now.

00:01:04.200 --> 00:01:06.940
And I suppose that there might
be some of you out there today

00:01:06.940 --> 00:01:10.470
that when you think about players,
scores, and achievements and how it

00:01:10.470 --> 00:01:13.840
relates to your game's development,
you might have a dev cycle

00:01:13.840 --> 00:01:15.510
that looks something like this.

00:01:15.650 --> 00:01:19.000
That is, you make your game first,
and that's from your

00:01:19.000 --> 00:01:21.050
game design document,
pen to paper,

00:01:21.150 --> 00:01:25.520
to arguing with your level designers and
making your engine and all those things.

00:01:25.740 --> 00:01:28.940
And then your second step,
which might be your last step,

00:01:29.120 --> 00:01:32.810
is to sort of shellack on this code
that's for player authentication

00:01:32.810 --> 00:01:37.140
for whatever service and submitting
scores and maybe trying to drum

00:01:37.140 --> 00:01:40.750
up ideas of what might be a
good achievement for your game.

00:01:40.900 --> 00:01:45.280
Well, again, that may be what some of you
think and feel when it comes to

00:01:45.310 --> 00:01:47.210
player scores and achievements.

00:01:47.350 --> 00:01:48.800
But I play a lot of games.

00:01:48.930 --> 00:01:51.480
More than I want to admit in
front of my boss here today.

00:01:51.480 --> 00:01:55.050
But for the really good games
out there on the App Store,

00:01:55.230 --> 00:01:58.500
the ones that use Game Center and
player scores and achievements to

00:01:58.510 --> 00:02:02.430
make a really special experience,
I think I've got it figured out.

00:02:02.500 --> 00:02:06.070
I believe I know the reason that
makes these games so successful.

00:02:06.700 --> 00:02:09.050
You guys flip the script.

00:02:09.170 --> 00:02:11.970
You don't end with players'
scores and achievements.

00:02:12.090 --> 00:02:13.030
You begin with them.

00:02:13.040 --> 00:02:14.990
Now, let me give you an example.

00:02:15.080 --> 00:02:18.430
If I am running through the
ruins of a lost civilization,

00:02:18.430 --> 00:02:22.200
right, and I am passing way farther
than I've ever run before,

00:02:22.200 --> 00:02:25.200
and I'm pretty sure I'm better
than my friends as well,

00:02:25.200 --> 00:02:28.950
it would be okay at the end of the
game to just show a leaderboard showing

00:02:28.950 --> 00:02:30.820
how I compare against my friends.

00:02:30.820 --> 00:02:32.560
But you know what's really cool?

00:02:32.560 --> 00:02:35.890
What's really awesome is when I am
passing the names of my friends as

00:02:35.920 --> 00:02:37.520
I am running through this level.

00:02:37.520 --> 00:02:40.480
It gives me this visceral,
interconnected experience.

00:02:40.550 --> 00:02:43.660
Even though it's a single-player game,
it's almost as if I'm playing

00:02:43.790 --> 00:02:45.540
against my friends right there.

00:02:45.540 --> 00:02:49.640
That's just one example of the many
of how flipping the script starting

00:02:49.640 --> 00:02:53.430
with players' scores and achievements
could really make your game great.

00:02:54.790 --> 00:02:56.500
So how are we going to
get from here to there?

00:02:56.500 --> 00:02:59.870
How is everybody here going to
get on the train of starting

00:02:59.870 --> 00:03:02.370
your game design at this step?

00:03:03.050 --> 00:03:05.910
Well, today I'm going to talk to you
more in depth about these three

00:03:06.130 --> 00:03:11.120
fundamental pillars of Game Center:
players, scores, and achievements.

00:03:11.140 --> 00:03:14.020
I'm also going to talk about some
new features that they introduced

00:03:14.020 --> 00:03:18.460
yesterday as well as at the keynote,
that being challenges and game groups.

00:03:18.630 --> 00:03:20.810
And along the way,
I'll be giving you ideas for

00:03:20.810 --> 00:03:24.100
new possibilities that you can
take and turn your game into

00:03:24.220 --> 00:03:27.660
an even brand new experience,
really make your game sing,

00:03:27.780 --> 00:03:31.330
both with pre-existing features
of Game Center and these new

00:03:31.330 --> 00:03:34.580
features that I'm really excited
to talk to you about today.

00:03:34.670 --> 00:03:35.940
So we've got a lot of stuff to cover.

00:03:36.110 --> 00:03:37.550
Let's dive right into it.

00:03:37.680 --> 00:03:41.090
Let's get on with the very
first pillar of Game Center:

00:03:41.230 --> 00:03:42.890
players.

00:03:43.980 --> 00:03:45.880
Let's not talk about just
players in the abstract,

00:03:45.880 --> 00:03:46.680
though, right?

00:03:46.800 --> 00:03:49.020
Let's talk about an
actual Game Center player.

00:03:49.250 --> 00:03:52.130
Let's talk about Eunice.

00:03:52.260 --> 00:03:54.400
Eunice, like I said,
is a Game Center player.

00:03:54.400 --> 00:03:58.270
She created a Game Center account
within the iOS app or soon

00:03:58.540 --> 00:04:00.540
to be the Mountain Lion app.

00:04:00.680 --> 00:04:04.620
And along with her account,
she has uploaded a player photo as

00:04:04.630 --> 00:04:07.230
well as designated a player Elias.

00:04:07.340 --> 00:04:08.360
This is gone doe.

00:04:08.360 --> 00:04:09.330
It's Leet speak.

00:04:09.420 --> 00:04:11.290
I'm terrible at reading it.

00:04:11.440 --> 00:04:14.270
But when she logs into your game,
she's going to expect to

00:04:14.300 --> 00:04:17.260
be able to submit scores,
earn achievements.

00:04:17.400 --> 00:04:20.760
But don't forget,
Eunice has also got friends.

00:04:20.870 --> 00:04:23.140
And whether your game's
single player or multiplayer,

00:04:23.300 --> 00:04:26.350
she's looking to connect with those
friends in new and interesting

00:04:26.350 --> 00:04:29.460
ways to really make your game fun.

00:04:29.920 --> 00:04:33.340
So in the Game Kit platform, that is,
or I mean the Game Kit framework,

00:04:33.510 --> 00:04:36.220
that is the framework you use
in order to communicate with

00:04:36.220 --> 00:04:40.510
the Game Center platform,
we call Eunice, the current player who's

00:04:40.510 --> 00:04:44.510
playing your game on her device,
the GK local player.

00:04:44.700 --> 00:04:46.130
But there's a problem here.

00:04:46.290 --> 00:04:49.390
When your game starts up,
before you do anything else,

00:04:49.540 --> 00:04:51.480
you have no idea who she is.

00:04:51.600 --> 00:04:53.940
You don't know what her photo looks like,
you don't have her alias,

00:04:53.940 --> 00:04:57.790
you can't even inspect her friend graph,
let alone submit scores and achievements.

00:04:57.930 --> 00:05:02.620
And it's because she's not authenticated
for Game Center for your game yet.

00:05:02.720 --> 00:05:06.720
And authentication is the very first
step you need to take in order to

00:05:06.720 --> 00:05:09.120
unlock these Game Center features.

00:05:09.230 --> 00:05:11.700
So let's take a look at
how authentication works.

00:05:11.830 --> 00:05:14.720
It's a very simple two-step process.

00:05:14.830 --> 00:05:19.810
Step one, you just make an authenticate
call to the Game Center platform.

00:05:20.090 --> 00:05:23.440
Then Game Center is going to
do some work in the background.

00:05:23.520 --> 00:05:26.430
And asynchronously,
we're going to call you back with

00:05:26.430 --> 00:05:28.740
the result of that authenticate call.

00:05:28.820 --> 00:05:31.380
And 95% of the time or so,
that just results in,

00:05:31.380 --> 00:05:34.260
on your game screen,
a little welcome back banner ticking

00:05:34.560 --> 00:05:37.510
down at the top of the screen
that says Game Center is ready.

00:05:37.750 --> 00:05:38.920
You can start submitting
scores and achievements.

00:05:38.920 --> 00:05:40.220
And that's going to be the first
step you need to take in order to

00:05:40.220 --> 00:05:41.120
unlock these Game Center features.

00:05:41.220 --> 00:05:44.410
But for the rare case,
you lucky few out there who have a

00:05:44.480 --> 00:05:48.200
player who isn't currently logged
into their Game Center account,

00:05:48.280 --> 00:05:51.730
we present a view controller
that asks the player to log into

00:05:51.800 --> 00:05:55.830
Game Center to use all these great
features that we provide to you.

00:05:56.320 --> 00:05:58.600
Now this callback,
it doesn't just get called

00:05:58.600 --> 00:06:00.200
when you call authenticate.

00:06:00.300 --> 00:06:03.450
We automatically make a callback
to you in other cases as well.

00:06:03.700 --> 00:06:06.860
You don't have to worry about it,
but I just want to bring it up front.

00:06:06.970 --> 00:06:10.470
So let's take a look at all the cases
that we are making this callback to you,

00:06:10.720 --> 00:06:14.090
telling you whether the current
player is authenticated or not.

00:06:14.620 --> 00:06:16.680
First, just like I mentioned,
upon authenticate,

00:06:16.780 --> 00:06:20.110
when you call this to Game Center,
we will call you back then.

00:06:20.250 --> 00:06:23.360
But in the case of multitasking,
when your game has been

00:06:23.490 --> 00:06:26.590
brought back to the foreground,
automatically we're going to

00:06:26.690 --> 00:06:28.320
call you back then as well.

00:06:28.500 --> 00:06:31.150
As well as,
if the current player isn't signed in

00:06:31.150 --> 00:06:35.420
and you prevent a login view controller
to them and they press that sign in

00:06:35.480 --> 00:06:40.490
button or any button on that screen,
we'll call you back then as well.

00:06:40.900 --> 00:06:43.680
So this login view controller,
for veterans out in the crowd

00:06:43.770 --> 00:06:48.040
who have used Game Center before,
you probably know what I'm talking about.

00:06:48.040 --> 00:06:52.610
But I want you to actually listen up here
because this is a new feature for iOS 6

00:06:52.700 --> 00:06:55.310
that's really important for your players.

00:06:55.730 --> 00:06:58.570
Before iOS 6,
we sort of took the timing of

00:06:58.570 --> 00:07:03.200
presenting this log-in view controller,
if it needed to be shown, upon ourselves.

00:07:03.310 --> 00:07:06.600
We did not give you, the developer,
full control as to when would be a good

00:07:06.600 --> 00:07:08.600
time to present this view controller.

00:07:08.600 --> 00:07:10.860
And I bet you,
as fantastic game designers,

00:07:10.950 --> 00:07:13.590
could probably tell where
this runs into problems.

00:07:13.590 --> 00:07:18.050
If you've got a ditch jumper game, right,
and the player has to press a jump

00:07:18.150 --> 00:07:21.870
button to jump over every ditch,
and we just happen to present that view

00:07:21.870 --> 00:07:25.590
controller right before a big ditch,
what happens?

00:07:25.600 --> 00:07:27.600
The player falls in a ditch, right?

00:07:27.600 --> 00:07:29.600
And nobody wants to fall in a ditch.

00:07:29.600 --> 00:07:33.150
So now with iOS 6,
we let you present this view

00:07:33.210 --> 00:07:35.590
controller when you see fit.

00:07:35.610 --> 00:07:37.600
We give you control so that
you can pause your game,

00:07:37.600 --> 00:07:40.600
manage your game state,
and present the view controller,

00:07:40.730 --> 00:07:43.840
get the player logged in,
let them start playing your game again

00:07:43.840 --> 00:07:46.280
safely so they don't fall in that ditch.

00:07:47.600 --> 00:07:51.560
So let's take a look at some code
as to actually do authentication.

00:07:51.560 --> 00:07:53.760
Making the call,
being the very first step,

00:07:53.760 --> 00:07:55.180
this is how you do it.

00:07:55.180 --> 00:07:57.730
You notice here that we're
doing an application did

00:07:57.810 --> 00:07:59.600
finish launching with options.

00:07:59.600 --> 00:08:03.120
Now, this is the very first bit of code
that is going to be executed within

00:08:03.120 --> 00:08:05.640
your game when it starts up anew.

00:08:05.730 --> 00:08:10.250
So since authentication is the very
first step you need to take in order

00:08:10.390 --> 00:08:13.710
to unlock Game Center features,
we really recommend that this is the

00:08:13.830 --> 00:08:16.300
place that you run the authenticate call.

00:08:16.300 --> 00:08:17.210
Now, it's very simple.

00:08:17.310 --> 00:08:21.820
All you need to do is get a shared
instance of the GK local player object.

00:08:22.140 --> 00:08:24.620
You set up the authentication handler.

00:08:24.800 --> 00:08:25.540
That's step two.

00:08:25.540 --> 00:08:28.130
We'll get on to what
that means in a moment.

00:08:28.320 --> 00:08:30.540
Then you call Authenticate
on that local player.

00:08:30.720 --> 00:08:31.700
That's it.

00:08:31.870 --> 00:08:34.330
You've now just made
a call to Game Center,

00:08:34.330 --> 00:08:38.200
and we're going to get back to you
through this authentication handler.

00:08:38.200 --> 00:08:42.790
So let's take a look at step two:
handling that callback.

00:08:42.900 --> 00:10:15.600
[Transcript missing]

00:10:15.750 --> 00:10:18.360
All else fails, authentication failed.

00:10:18.360 --> 00:10:20.120
The current player is not
logged into Game Center,

00:10:20.260 --> 00:10:23.260
so you need to present
a graceful fallback.

00:10:23.260 --> 00:10:25.020
Just disable Game Center features.

00:10:25.230 --> 00:10:26.880
Don't try inspecting the friend graph.

00:10:27.010 --> 00:10:29.860
Don't try submitting scores and
achievements on the player's behalf.

00:10:29.910 --> 00:10:31.600
Let the players play your game.

00:10:31.660 --> 00:10:33.550
Let them have some fun.

00:10:34.770 --> 00:10:36.500
So that's fantastic.

00:10:36.500 --> 00:10:38.610
You know,
we've gone through the three steps,

00:10:38.700 --> 00:10:41.690
but what happens if authentication
fails and you don't know why?

00:10:41.690 --> 00:10:44.290
Well, that's what this
NSError object is all about.

00:10:44.360 --> 00:10:46.440
It tells you why authentication
happened to fail.

00:10:46.490 --> 00:10:53.700
And there are two common points
where authentication can fail,

00:10:53.700 --> 00:10:53.700
amongst others, but these are the ones
I want to focus on right now.

00:10:53.940 --> 00:10:55.800
The first is GKErrorCancelled.

00:10:55.800 --> 00:10:59.420
All this means is that if you presented
a login view controller and the

00:10:59.480 --> 00:11:02.790
player pressed that cancel button,
that's the result that you get.

00:11:03.120 --> 00:11:07.440
Or, if the player has opted out of using
the Game Center platform altogether,

00:11:07.510 --> 00:11:10.570
outside of your game or within your game,
then you're going to get

00:11:10.590 --> 00:11:11.660
that same error as well.

00:11:11.760 --> 00:11:13.570
They mean the same thing.

00:11:13.830 --> 00:11:16.160
The second error is a
bit mysteriously named,

00:11:16.160 --> 00:11:20.090
and I hear a lot of questions about
this from new Game Center developers.

00:11:20.230 --> 00:11:23.730
It's this GK error,
game unrecognized error.

00:11:23.860 --> 00:11:27.440
All this is is an iTunes
Connect configuration issue.

00:11:27.570 --> 00:11:31.800
It means that you haven't clicked
this button in iTunes Connect that

00:11:31.800 --> 00:11:35.630
says "Enable Game Center features."
If you click this button,

00:11:35.690 --> 00:11:37.350
this error will go away.

00:11:37.510 --> 00:11:40.700
But if you've got a game that's
set up for Game Center already

00:11:40.850 --> 00:11:43.700
and you create a new version
of that game in iTunes Connect,

00:11:43.780 --> 00:11:48.020
you need to make sure that you're
clicking this button as well in

00:11:48.020 --> 00:11:50.880
order to avoid any unforeseen errors.

00:11:51.860 --> 00:11:52.660
So that's fantastic.

00:11:52.760 --> 00:11:53.900
We have logged the player in.

00:11:53.900 --> 00:11:57.270
That's the first step we need to
take in order to use all these

00:11:57.270 --> 00:11:59.040
great Game Center features.

00:11:59.100 --> 00:12:02.820
But since authentication is the very
first thing that you need to do,

00:12:02.900 --> 00:12:05.980
it's really an issue of
importance to make a good first

00:12:06.130 --> 00:12:07.880
impression on your players.

00:12:07.940 --> 00:12:11.000
You want to be able to get your
players logged in and authenticated

00:12:11.040 --> 00:12:13.780
with Game Center right away
so they can start having fun,

00:12:13.780 --> 00:12:14.370
right?

00:12:14.640 --> 00:12:17.570
Well, like I said, I play a lot of games,
and once in a while,

00:12:17.570 --> 00:12:20.990
when I download a new game that
I'm really excited about playing,

00:12:21.170 --> 00:12:23.400
sometimes I see an alert that
looks something like this.

00:12:23.400 --> 00:12:25.100
This "Use Game Center.

00:12:25.100 --> 00:12:27.040
Do you want to use
Game Center for this game or not?

00:12:27.110 --> 00:12:31.310
OK and cancel, or maybe OK and disable."
And I am telling you today,

00:12:31.310 --> 00:12:33.920
if you've got code
like this in your game,

00:12:34.100 --> 00:12:35.600
you need to take it out.

00:12:35.600 --> 00:12:37.600
The reason is twofold.

00:12:37.600 --> 00:12:40.600
For one, from a usability perspective,
it's confusing to the user.

00:12:40.600 --> 00:12:42.490
Now, what do I mean by that?

00:12:42.600 --> 00:12:46.010
Consider Eunice, who has just created
a Game Center account,

00:12:46.010 --> 00:12:46.600
right?

00:12:46.600 --> 00:12:49.600
And she's logged into
Game Center on her device.

00:12:49.730 --> 00:12:52.700
So she's logged into Game Center,
she opens up your game,

00:12:52.700 --> 00:12:55.320
and you present this dialogue asking her,
"Do you want to use Game Center or

00:12:55.320 --> 00:12:58.390
not?" She presses "No." Does that
mean that you've disabled

00:12:58.580 --> 00:13:00.210
Game Center across your device?

00:13:00.210 --> 00:13:01.520
Is it just for the game?

00:13:01.650 --> 00:13:02.600
Are there gameplay consequences?

00:13:02.600 --> 00:13:05.600
Who is she to know?

00:13:05.600 --> 00:13:09.390
And if she presses "OK," well,
all that means is that you've made her

00:13:09.390 --> 00:13:10.600
press a button again that she already
pressed before she got to the game.

00:13:10.600 --> 00:13:15.260
So you're really just getting in her way.

00:13:17.050 --> 00:13:19.370
The second reason, though,
is that with this alert,

00:13:19.480 --> 00:13:22.560
you were writing checks
that you cannot cache.

00:13:22.620 --> 00:13:26.060
Functionally,
this alert cannot work in all cases.

00:13:26.280 --> 00:13:28.800
Consider the case where
Eunice has already opted out

00:13:28.800 --> 00:13:30.820
of Game Center altogether.

00:13:30.880 --> 00:13:33.120
Outside of your game,
she's canceled using Game Center,

00:13:33.120 --> 00:13:35.040
and she has turned it off on her device.

00:13:35.110 --> 00:13:38.440
And you ask her,
do you want to use Game Center or not?

00:13:38.490 --> 00:13:41.960
Well, if she clicks OK,
what's going to happen?

00:13:41.990 --> 00:13:42.900
Nothing.

00:13:42.950 --> 00:13:46.320
There is no possible way that you
can re-enable Game Center features

00:13:46.650 --> 00:13:49.680
for the current local player
if they've opted out of using

00:13:49.680 --> 00:13:51.780
Game Center outside of your game.

00:13:51.810 --> 00:13:54.660
So again, if you've got a menu like this,
or if you're thinking of

00:13:54.760 --> 00:13:56.590
putting something like that in,
take it out.

00:13:56.660 --> 00:13:58.290
Your game's not like menu commando.

00:13:58.340 --> 00:13:59.920
It's about having fun.

00:13:59.930 --> 00:14:04.350
You just want your players to log
into your game and start playing.

00:14:04.400 --> 00:14:08.260
See that little welcome back banner,
and get on with having fun.

00:14:08.910 --> 00:14:11.230
So again,
authentication is the very first step you

00:14:11.290 --> 00:14:13.240
need to take to use Game Center features.

00:14:13.300 --> 00:14:15.290
It's an asynchronous process.

00:14:15.390 --> 00:14:17.350
Now,
I'm just singling this out here because

00:14:17.380 --> 00:14:22.440
asynchronicity is a common trait
amongst the GameKit framework API.

00:14:22.440 --> 00:14:26.260
And if authentication happens to fail,
provide a graceful fallback and

00:14:26.260 --> 00:14:29.350
let players start playing your
game as soon as possible with

00:14:29.440 --> 00:14:31.360
Game Center features disabled.

00:14:32.360 --> 00:14:35.100
But along that same line,
you want to let your players play

00:14:35.160 --> 00:14:37.090
your game as soon as possible,
right?

00:14:37.310 --> 00:14:40.460
So avoid these extra dialogues
that don't really do what you

00:14:40.460 --> 00:14:42.370
may be conveying to the player.

00:14:42.370 --> 00:14:46.620
Just take them out, let players log in,
and let them start playing.

00:14:46.910 --> 00:14:49.040
So we've got players
logged into your game.

00:14:49.040 --> 00:14:51.020
You are now able to use these features.

00:14:51.050 --> 00:14:54.340
So let's get on to the second
and third fundamental pillars of

00:14:54.340 --> 00:14:56.190
Game Center — scores and achievements.

00:14:56.200 --> 00:14:59.740
Now, in GameKit,
scores and achievements are

00:14:59.800 --> 00:15:04.790
represented by the GK score class
and the GK achievement class.

00:15:04.800 --> 00:15:08.720
So let's take a look at some of the
fundamental properties that define

00:15:08.720 --> 00:15:11.010
GK score and GK achievement objects.

00:15:11.770 --> 00:15:13.110
First up is GK score.

00:15:13.350 --> 00:15:17.230
Now, GK score has three fundamental
properties that define it.

00:15:17.280 --> 00:15:20.040
The first is an NSString category.

00:15:20.040 --> 00:15:23.680
This just means which
leaderboard this score is for.

00:15:23.680 --> 00:15:26.020
And you've defined this
string up on iTunes Connect.

00:15:26.020 --> 00:15:29.750
The second is an int64 value.

00:15:29.750 --> 00:15:33.870
Now, whether your game has a
leaderboard for points,

00:15:33.980 --> 00:15:36.620
gems,
minutes and seconds or what have you,

00:15:36.620 --> 00:15:38.640
under the hood,
it's all the same to GameKit.

00:15:38.780 --> 00:15:39.780
It's an int64 type.

00:15:39.890 --> 00:15:41.290
It's just really the score.

00:15:41.360 --> 00:15:45.140
And thirdly,
very important but often overlooked,

00:15:45.410 --> 00:15:49.320
is this 64-bit unsigned
property for context.

00:15:49.320 --> 00:15:53.230
This is your personal scratch space
that you could do anything you want.

00:15:53.320 --> 00:15:56.110
We suggest that when
you're submitting scores,

00:15:56.110 --> 00:16:00.300
you stuff into the context
gameplay relevant data.

00:16:00.320 --> 00:16:03.100
So if it happened to matter
that the current ship was

00:16:03.160 --> 00:16:07.320
blue when this score was made,
set blue into that context.

00:16:07.320 --> 00:16:11.190
And it will be there when you
receive the score on a querying end.

00:16:11.360 --> 00:16:14.340
So for GK achievement,
it has two fundamental

00:16:14.340 --> 00:16:16.280
properties that make it up.

00:16:16.320 --> 00:16:19.320
The first,
similar to a category for score,

00:16:19.320 --> 00:16:21.320
is the NSString identifier property.

00:16:21.320 --> 00:16:25.760
This just links the achievement
for a certain achievement you've

00:16:25.900 --> 00:16:27.980
defined on iTunes Connect.

00:16:28.720 --> 00:16:30.900
Second is a double percent complete.

00:16:31.000 --> 00:16:33.000
So achievements aren't a binary thing.

00:16:33.000 --> 00:16:35.840
It's not I earned this
or I didn't earn this.

00:16:35.910 --> 00:16:38.490
You can let your players gradually
earn achievements as well.

00:16:38.490 --> 00:16:42.410
So if your game has four hidden
gems and you want to make that an

00:16:42.410 --> 00:16:47.990
achievement to find all four hidden gems,
you could submit 25%, 50%, 75%,

00:16:48.490 --> 00:16:50.610
100% for completion states.

00:16:51.780 --> 00:16:54.500
So let's take a look at actually
writing code to submit achievements

00:16:54.540 --> 00:16:56.700
for the current player.

00:16:56.760 --> 00:16:58.380
For achievements,
all you need to do is create

00:16:58.440 --> 00:17:00.500
your GKEachievement object.

00:17:00.530 --> 00:17:02.540
You init it with the appropriate
identifier that you've

00:17:02.580 --> 00:17:04.830
defined on iTunes Connect.

00:17:05.000 --> 00:17:06.050
You set the percent complete.

00:17:06.160 --> 00:17:09.500
In this case,
the achievement is totally earned.

00:17:09.560 --> 00:17:12.700
And then you call report
achievement with completion handler.

00:17:12.760 --> 00:17:15.680
Barring any error,
when this callback is made,

00:17:15.870 --> 00:17:18.160
that means the achievement
has been successfully posted

00:17:18.280 --> 00:17:20.690
to Game Center for the user.

00:17:21.220 --> 00:17:23.440
Now, for scores, it's very similar.

00:17:23.580 --> 00:17:27.240
You just create a GK score object and
knit it with the appropriate category

00:17:27.350 --> 00:17:29.900
that you've defined on iTunes Connect.

00:17:29.990 --> 00:17:31.200
You set your value.

00:17:31.290 --> 00:17:35.050
In this case, it's 300 points, seconds,
whatever it may be.

00:17:35.730 --> 00:17:38.910
And you set any appropriate
gameplay context.

00:17:39.110 --> 00:17:41.480
Then you report the score
with a completion handler.

00:17:41.700 --> 00:17:45.180
Just like an achievement,
when this callback is made,

00:17:45.390 --> 00:17:48.530
barring any errors,
that score is now successfully posted to

00:17:48.530 --> 00:17:50.760
the leaderboard that that score is for.

00:17:50.790 --> 00:17:52.290
So this context, right?

00:17:52.290 --> 00:17:54.930
I mentioned it a little bit before,
but again,

00:17:54.930 --> 00:17:59.320
this is whatever matters about that
score and how it was earned in your game.

00:17:59.620 --> 00:18:03.940
So again, if it's a racing game, right,
like some space battle racing game,

00:18:03.940 --> 00:18:06.730
and the current ship was blue,
and that matters as to

00:18:06.730 --> 00:18:10.390
how this score was earned,
well, stuff the color in there.

00:18:10.420 --> 00:18:14.490
Or let's say the reason why she got
around the track in 300 seconds was

00:18:14.490 --> 00:18:18.520
because her engine was so fast that
normal players can't really get.

00:18:18.540 --> 00:18:20.430
Well, stuff the engine in there.

00:18:20.480 --> 00:18:24.120
Or maybe it's the weapon system that let
her get 300 points blasting away enemies

00:18:24.190 --> 00:18:25.680
as she was racing around the track.

00:18:25.680 --> 00:18:27.080
It's really whatever you want.

00:18:27.200 --> 00:18:31.960
And since it's 64 bits... Well,
this is a huge number space, right?

00:18:31.960 --> 00:18:36.780
So you could use that to encode
URLs that are pointing to entire

00:18:36.840 --> 00:18:40.540
replay data showing how the
player just earned that score.

00:18:40.560 --> 00:18:43.290
We're going to be touching on
this a little bit later as well,

00:18:43.290 --> 00:18:45.550
and I think you saw it
in Jeff's talk yesterday,

00:18:45.670 --> 00:18:48.230
as well as with the half
brick guys on Jetpack Joyride.

00:18:48.230 --> 00:18:50.380
This is something that
we're really excited about.

00:18:50.420 --> 00:18:53.170
So I urge you to think up with
some great ideas of how you

00:18:53.170 --> 00:18:54.850
can use context with scores.

00:18:56.610 --> 00:18:58.340
So the elephant in the room, right?

00:18:58.340 --> 00:18:59.240
This NSError.

00:18:59.300 --> 00:19:01.930
Barring any errors,
your scores and achievements

00:19:01.930 --> 00:19:03.700
will be successfully completed.

00:19:03.810 --> 00:19:09.280
Well, provided your players successfully
authenticated into Game Center and

00:19:09.810 --> 00:19:13.650
the category or identifier
you're using matches up with

00:19:13.650 --> 00:19:16.400
what is defined in iTunes Connect,

00:19:16.610 --> 00:19:19.640
You will not receive any errors from us.

00:19:19.770 --> 00:19:24.250
Now, prior to iOS 5,
we also tended to give you back errors in

00:19:24.250 --> 00:19:27.630
the case of network connectivity issues.

00:19:27.730 --> 00:19:30.560
So if the current device
happened to fall offline,

00:19:30.870 --> 00:19:34.330
we would give you a network error,
and we would ask you to cache

00:19:34.330 --> 00:19:38.190
your scores and achievements and
resubmit them at a later date.

00:19:38.440 --> 00:19:41.460
Now with iOS 5,
because this is sort of a troublesome

00:19:41.460 --> 00:19:44.690
process for you guys to take,
it became unnecessary because

00:19:44.690 --> 00:19:47.860
we introduced a small feature
called Store and Forward,

00:19:47.860 --> 00:19:51.500
which took care of any network
connectivity issues transparently.

00:19:51.620 --> 00:19:55.230
And if the device happened to be offline,
we would store those scores and

00:19:55.230 --> 00:19:59.100
achievements and submit them once
connectivity was reached again,

00:19:59.240 --> 00:20:03.650
which really made any of this old
code for iOS 4 devices of caching

00:20:03.650 --> 00:20:06.690
and resubmitting totally unnecessary.

00:20:06.860 --> 00:20:10.930
Now with iOS 6, I am telling you that if
you have this caching and

00:20:10.930 --> 00:20:15.090
resubmitting code in your game,
to take it out,

00:20:15.370 --> 00:20:19.500
because it's fundamentally incompatible
with Game Center for iOS 6.

00:20:19.620 --> 00:20:23.900
More specifically, it's fundamentally
incompatible with challenges.

00:20:23.900 --> 00:20:27.000
So if you happen to have some sort of
resubmission code that looks like this

00:20:27.000 --> 00:20:30.700
— maybe it's that your application did
finish launching after an authenticate,

00:20:30.700 --> 00:20:33.950
something like that — the Sync
Game Center scores and achievements or

00:20:33.950 --> 00:20:37.660
Force Resync Game Center achievements,
take it out.

00:20:37.900 --> 00:20:39.860
You don't need to worry about it.

00:20:40.090 --> 00:20:43.360
You don't need to sweat the
small stuff because we've got

00:20:43.610 --> 00:20:47.220
it covered for you anyway with
Store and Forward as of iOS 5.

00:20:47.990 --> 00:20:49.040
So that's fantastic.

00:20:49.130 --> 00:20:51.200
We've now been getting
a player logged in.

00:20:51.200 --> 00:20:53.500
They're submitting their scores,
they're earning achievements,

00:20:53.640 --> 00:20:56.020
and they could open up the
Game Center app right now and see

00:20:56.040 --> 00:20:57.900
how they're doing within your game.

00:20:57.950 --> 00:21:01.230
But you probably want to let players
see how they're doing and compare

00:21:01.230 --> 00:21:04.160
their scores and achievements
with friends within your game

00:21:04.160 --> 00:21:05.900
so they can keep playing it,
right?

00:21:05.900 --> 00:21:09.050
Well,
we provide you that ability within iOS 6

00:21:09.050 --> 00:21:11.890
and what we call the unified experience.

00:21:12.050 --> 00:21:15.900
With just a few lines of code,
you can let players see their scores,

00:21:15.900 --> 00:21:17.540
see their achievements,
even see the challenges

00:21:17.650 --> 00:21:18.810
they've received from friends.

00:21:19.300 --> 00:21:21.290
Very little work.

00:21:21.610 --> 00:21:24.000
So the unified experience
is provided by this class,

00:21:24.000 --> 00:21:26.100
GK Game Center View Controller.

00:21:26.100 --> 00:21:28.670
And as I mentioned,
it provides a unified view of everything

00:21:28.670 --> 00:21:30.500
Game Center related to your game.

00:21:30.500 --> 00:21:33.070
So you see here in our game Crush,
we have a leaderboards

00:21:33.070 --> 00:21:34.440
and achievements button.

00:21:34.490 --> 00:21:37.870
If I were to happen to tap
that leaderboards button here,

00:21:37.970 --> 00:21:40.490
up pops the
GK Game Center View Controller.

00:21:40.530 --> 00:21:43.800
You'll see at the top of the screen,
players can rate your game right in

00:21:43.800 --> 00:21:47.340
the app store or like it on Facebook,
as well as they can look at whatever

00:21:47.340 --> 00:21:51.370
scores they've earned in your
game or achievements or challenges

00:21:51.420 --> 00:21:53.500
they've received from friends.

00:21:53.500 --> 00:21:56.500
And what this also means is
that you are future-proofed.

00:21:56.500 --> 00:22:00.430
If we add more features in the
future and we drop it into the

00:22:00.510 --> 00:22:02.950
GK Game Center View Controller,
you don't need to do anything

00:22:03.140 --> 00:22:06.480
extra in order to have those
features right within your game.

00:22:07.240 --> 00:22:11.660
So what's the code that's necessary
in order to display this in-game UI?

00:22:11.700 --> 00:22:13.660
Well, in this case,
we've got a view controller

00:22:13.660 --> 00:22:16.880
that has some target action
set up for a show UI button,

00:22:16.930 --> 00:22:17.600
right?

00:22:17.770 --> 00:22:20.780
And all we need to do is
grab a shared instance of the

00:22:20.780 --> 00:22:23.010
GK Game Center view controller.

00:22:23.190 --> 00:22:24.760
We set the Game Center delegate to self.

00:22:24.760 --> 00:22:27.620
Now, this delegate's just going
to be called back when the

00:22:27.620 --> 00:22:30.650
unified experience is dismissed.

00:22:31.010 --> 00:22:32.980
We set the appropriate
initial view state,

00:22:32.980 --> 00:22:37.380
and then we present the view controller
just like we would any other.

00:22:37.560 --> 00:22:40.970
Now this view state actually allows
you to have some customizability

00:22:40.970 --> 00:22:44.980
about what context this
unified experience starts with.

00:22:45.120 --> 00:22:47.240
So let me be a little bit more specific.

00:22:47.300 --> 00:22:49.710
If you wanted to start by showing
the player all the achievements

00:22:49.770 --> 00:22:52.680
they've earned in your game because
you've got an achievement button,

00:22:52.680 --> 00:22:56.260
you can do that by setting the view state
to the view state for achievements or

00:22:56.260 --> 00:22:58.650
for the challenges that they've received.

00:22:58.880 --> 00:23:01.180
Even for leaderboards,
but with leaderboards,

00:23:01.180 --> 00:23:04.430
we give you even more fine-grained
control over which leaderboard

00:23:04.780 --> 00:23:06.820
for what time you want to display.

00:23:06.890 --> 00:23:09.810
And that's with only
two extra lines of code.

00:23:10.320 --> 00:23:12.440
In this case,
we're going to show a leaderboard

00:23:12.680 --> 00:23:16.600
that has all the scores earned
for today for level one.

00:23:16.600 --> 00:23:19.400
So we set the view state to
the view state for leaderboard.

00:23:19.560 --> 00:23:23.630
We set the leaderboard time scope
to the time scope for today.

00:23:23.710 --> 00:23:26.600
We also set the leaderboard
category to the leaderboard

00:23:26.600 --> 00:23:28.060
that we want to start off with.

00:23:28.060 --> 00:23:29.250
In this case, it's level one.

00:23:29.430 --> 00:23:32.530
The string matches up with what
you've got on iTunes Connect.

00:23:32.530 --> 00:23:33.180
And away you go.

00:23:33.330 --> 00:23:37.270
Now, when they tap that leaderboard
button for level one,

00:23:37.270 --> 00:23:40.870
up pops all the top scores
for today for level one.

00:23:42.640 --> 00:23:45.800
Now, the unified experience has
one feature that we're very

00:23:45.800 --> 00:23:48.480
excited about called sharing.

00:23:48.510 --> 00:23:52.380
And we allow you through the
unified experience or allow your

00:23:52.380 --> 00:23:55.550
players to share their scores and
achievements with friends over any

00:23:55.550 --> 00:23:57.030
social network that we support.

00:23:57.160 --> 00:24:01.060
So that's Twitter, Facebook,
even messages or mail,

00:24:01.060 --> 00:24:04.740
and even copying it to the
clipboard if so need be.

00:24:05.070 --> 00:24:06.220
But that's great.

00:24:06.300 --> 00:24:09.940
The unified experience allows
players to do that for free to you.

00:24:09.940 --> 00:24:13.520
But what if you wanted to actually let
them share their scores and achievements

00:24:13.590 --> 00:24:14.850
immediately within your game?

00:24:14.900 --> 00:24:18.060
I mean, you know your game best,
so you probably know what screen

00:24:18.060 --> 00:24:20.850
would be a great screen to let
players tweet it to the world,

00:24:20.930 --> 00:24:21.650
right?

00:24:21.660 --> 00:24:23.780
So let's say a player
just beat level one,

00:24:23.810 --> 00:24:28.050
and they've got a score of 500 points,
and they just earned an achievement,

00:24:28.050 --> 00:24:30.100
and they want to tweet to the world.

00:24:30.890 --> 00:24:35.020
So we provide you the ability
to bring up what's called the

00:24:35.020 --> 00:24:38.940
UI Activity View Controller to let
the player share their score through

00:24:38.940 --> 00:24:41.350
any of these services and more.

00:24:41.860 --> 00:24:46.260
Now, this again is done through the
UI Activity View Controller,

00:24:46.260 --> 00:24:49.760
and this class, this object,
handles transport across any

00:24:49.760 --> 00:24:51.390
different social service.

00:24:51.450 --> 00:24:54.410
You don't need to write code
to allow submission of your

00:24:54.410 --> 00:24:57.800
scores and achievements to
Facebook and Twitter and all that.

00:24:57.870 --> 00:24:59.890
We cover that for you with this object.

00:24:59.960 --> 00:25:03.530
And Game Center with iOS 6
provides direct drop-in support

00:25:03.780 --> 00:25:06.150
for score and achievement sharing.

00:25:06.200 --> 00:25:10.670
So if the player were to
tap the Twitter button here,

00:25:10.730 --> 00:25:14.270
up would pop a tweet sheet
that has preformatted,

00:25:14.540 --> 00:25:17.140
localized text for the
current player saying,

00:25:17.140 --> 00:25:19.850
check out my score on the score
leaderboard with a URL that's

00:25:19.850 --> 00:25:21.590
attached to that Twitter message.

00:25:21.620 --> 00:25:25.140
So when they press send,
this score tweet is sent to the world,

00:25:25.140 --> 00:25:28.340
letting players,
other possible players of your game,

00:25:28.340 --> 00:25:29.660
discover your game.

00:25:31.630 --> 00:25:34.400
So to do this in code,
it's very straightforward.

00:25:34.450 --> 00:25:37.450
In the case of sharing a score,
you just need to get a reference to a

00:25:37.450 --> 00:25:40.400
GK score object that you wish to share.

00:25:40.460 --> 00:25:42.980
You set up the UI Activity
View Controller,

00:25:43.040 --> 00:25:47.880
and you pass in the score
object through the init method.

00:25:48.490 --> 00:25:50.710
You set up your completion
handler for this view controller.

00:25:50.800 --> 00:25:52.820
Now,
the completion handler is called when

00:25:52.820 --> 00:25:56.460
the sharing action has been completed,
so all you need to do is dismiss

00:25:56.560 --> 00:25:58.640
the view controller at that time.

00:25:58.690 --> 00:26:00.870
And finally,
you just present the view controller,

00:26:01.030 --> 00:26:04.330
just like you would any
other view controller.

00:26:04.360 --> 00:26:07.660
And for achievements,
it is nearly exactly the same thing.

00:26:07.950 --> 00:26:10.670
The only thing that's different is
instead of creating a score object

00:26:10.670 --> 00:26:13.760
and passing into the init method,
it's the achievement object

00:26:13.850 --> 00:26:15.000
that you're passing in.

00:26:15.060 --> 00:26:18.690
Everything else is dead simple,
exactly the same.

00:26:19.930 --> 00:26:22.730
So for some things for you to keep
in mind with score and achievement

00:26:22.820 --> 00:26:25.900
submissions as well as viewing,
when it comes to submitting scores,

00:26:26.020 --> 00:26:27.140
think about context.

00:26:27.140 --> 00:26:30.110
You've seen some examples already,
and we'll touch on some examples

00:26:30.170 --> 00:26:33.560
later about how context can
really make your game special.

00:26:33.560 --> 00:26:37.500
I mean, this is your way of adding
your signature to every score.

00:26:37.500 --> 00:26:40.830
It's whatever is special about
your game can be imprinted on

00:26:40.840 --> 00:26:43.130
every score your game's submitting.

00:26:43.460 --> 00:26:46.470
As well as if you're submitting
scores and achievements and you've

00:26:46.470 --> 00:26:51.400
got this legacy code from iOS 4 and
before of archiving and resubmitting

00:26:51.400 --> 00:26:54.270
these scores and achievements,
make sure you take it out.

00:26:54.350 --> 00:26:57.510
We've got it covered for you so
you don't need to worry about it,

00:26:57.600 --> 00:27:01.200
and it will make your game 100%
compatible with challenges on

00:27:01.200 --> 00:27:02.940
day one of iOS 6's release.

00:27:03.620 --> 00:27:06.470
And if you want to let your
players view your leaderboards

00:27:06.470 --> 00:27:09.500
as well as your achievements
and challenges for your game,

00:27:09.500 --> 00:27:13.380
you can do that with just a few lines
of code through the unified experience.

00:27:15.570 --> 00:27:18.940
So we've got players logged in,
they're submitting scores,

00:27:19.040 --> 00:27:21.350
they're submitting achievements,
they're tweeting it to their

00:27:21.350 --> 00:27:22.310
friends and their moms.

00:27:22.560 --> 00:27:25.500
They are having a blast with your game.

00:27:25.700 --> 00:27:27.050
But recall this slide.

00:27:27.050 --> 00:27:28.490
It doesn't end here.

00:27:28.620 --> 00:27:30.000
This is not the ending.

00:27:30.000 --> 00:27:31.480
This really is the beginning.

00:27:31.480 --> 00:27:35.460
How can we use players' scores
and achievements to make your game

00:27:35.560 --> 00:27:37.690
truly special and really sing?

00:27:37.880 --> 00:27:39.330
Let's take a look at an example.

00:27:39.440 --> 00:27:41.920
Let's all remember Eunice right here.

00:27:42.130 --> 00:27:45.640
And Eunice is earning scores now because
of the great code you just wrote,

00:27:45.640 --> 00:27:48.140
as well as earning
achievements in your game.

00:27:48.280 --> 00:27:51.360
But recall Eunice has friends.

00:27:51.650 --> 00:27:56.500
She has a lot of friends,
and Eunice is a pretty hardcore gamer.

00:27:56.500 --> 00:27:58.740
And she's playing this new game
that she's all excited about,

00:27:58.740 --> 00:28:00.220
and she gets 500 points.

00:28:00.220 --> 00:28:02.760
She knows Jessica here is
also playing that game,

00:28:02.760 --> 00:28:06.660
but she hasn't really seen Jessica post
a score that's nearly as high as this,

00:28:06.660 --> 00:28:07.280
right?

00:28:07.360 --> 00:28:09.640
So normally,
players are excited about a game

00:28:09.640 --> 00:28:12.760
and they know that they just
did better than their friends.

00:28:12.760 --> 00:28:13.610
What happens?

00:28:13.870 --> 00:28:15.900
Maybe they call each other
on the phone and say,

00:28:15.900 --> 00:28:17.540
hey, I just, you know,
did better than you.

00:28:17.540 --> 00:28:18.520
I bet you can't beat that.

00:28:19.380 --> 00:28:23.140
Wouldn't it be great if we could take
advantage of this within your game's

00:28:23.300 --> 00:28:27.530
gameplay and turn it into an entirely
new mode of game development and game,

00:28:27.710 --> 00:28:30.080
you know, a way of having a fun
time within your game?

00:28:32.010 --> 00:28:36.060
With iOS 6 and Game Center,
you can do that with challenges.

00:28:36.150 --> 00:28:38.180
So you've heard about
challenges a lot already.

00:28:38.480 --> 00:28:45.010
I want to explain exactly how they
work and how players will use them

00:28:45.010 --> 00:28:45.010
to play your game in new ways.

00:28:45.410 --> 00:28:47.730
So recall Eunice is
playing this game Crush,

00:28:47.840 --> 00:28:48.160
right?

00:28:48.320 --> 00:28:52.980
And she just beats level
one with a score of 500.

00:28:52.980 --> 00:28:56.230
And she knows that Jessica might not
be doing as well as she is in Crush,

00:28:56.360 --> 00:29:00.820
so she chooses to challenge Jessica to
beat her score of 500 points.

00:29:00.820 --> 00:29:03.280
So she sends a challenge over to Jessica.

00:29:03.300 --> 00:29:07.320
And right then, Jessica's device gets a
drop-in notification banner,

00:29:07.320 --> 00:29:12.580
both on the home screen of her iPod
Touch as well as within your game,

00:29:12.580 --> 00:29:15.730
saying Eunice has just challenged
you to beat her score of 500.

00:29:15.780 --> 00:29:19.500
So let's say Jessica is on the
home screen like she is right now,

00:29:19.500 --> 00:29:22.080
and she taps that notification banner.

00:29:22.080 --> 00:29:23.960
That's going to start up Crush.

00:29:23.960 --> 00:29:27.560
And Jessica's actually a little bit
better than Eunice had expected.

00:29:27.560 --> 00:29:30.560
She beats level one,
getting a score of 600.

00:29:30.820 --> 00:29:33.900
Well, 600 is greater than or
equal to 500 points,

00:29:33.910 --> 00:29:36.640
which means that Jessica has
just beaten the challenge.

00:29:36.820 --> 00:29:39.840
So right then,
both Eunice and Jessica get

00:29:39.840 --> 00:29:44.810
a push notification saying,
"Jessica just beat this challenge."

00:29:44.820 --> 00:29:49.560
And since this is a score challenge,
Jessica has automatically sent a

00:29:49.620 --> 00:29:54.590
new challenge to Eunice telling her
to beat her score of 600 points.

00:29:54.920 --> 00:29:57.780
Now, I've been talking about scores and
score challenges and auto-submission

00:29:57.780 --> 00:29:58.820
and all that sort of stuff.

00:29:58.960 --> 00:30:00.820
But it's not just scores
that challenge Eunice.

00:30:00.820 --> 00:30:02.820
It's what the challenges are for.

00:30:02.820 --> 00:30:06.820
We support both score challenges
and achievement challenges.

00:30:06.820 --> 00:30:10.620
And what's more is if your
game supports leaderboards and

00:30:10.620 --> 00:30:14.800
achievements for Game Center,
on day one of iOS 6's release,

00:30:14.810 --> 00:30:18.820
it will automatically, out of the box,
support challenge play.

00:30:18.860 --> 00:30:22.300
Players will be able to send
challenges to each other through the

00:30:22.340 --> 00:30:26.810
Game Center app to compete with beating
scores and earning new achievements.

00:30:26.820 --> 00:30:29.260
But before I get into all the who's,
why's, what's, how's, and how's,

00:30:29.260 --> 00:30:30.680
I want to talk about a couple of things.

00:30:30.820 --> 00:30:32.820
So, first of all,
I want to talk about how this all works.

00:30:32.820 --> 00:30:36.860
Megan's here to actually show you
a game that we made called Crush,

00:30:36.860 --> 00:30:37.820
which you've seen in
the screenshots already,

00:30:37.980 --> 00:30:43.080
that takes advantage of both automatic
challenge play and extra API that

00:30:43.080 --> 00:30:46.820
we provide to you in order to
customize the challenge experience.

00:30:46.880 --> 00:30:48.770
So, Megan, take it away.

00:30:50.600 --> 00:30:52.260
Thanks, Dan.

00:30:52.260 --> 00:30:54.740
So Dan has explained to
you what challenges are,

00:30:54.740 --> 00:30:57.460
and I'm going to help
you experience them.

00:30:57.460 --> 00:31:00.740
So I'm also friends with Eunice,
and we have been playing

00:31:00.740 --> 00:31:02.860
this great new game,
Crush.

00:31:03.060 --> 00:31:07.590
And oh, look, it looks like Eunice has
actually just challenged me to

00:31:07.660 --> 00:31:10.420
beat her score of 700 points.

00:31:10.420 --> 00:31:12.380
And as you saw, it's just a notification.

00:31:12.380 --> 00:31:14.910
So if we just go into
Notification Center,

00:31:15.040 --> 00:31:19.870
you can just tap on that notification,
and we'll launch directly into Crush.

00:31:19.880 --> 00:31:22.680
Because I've already downloaded
Crush because I've been playing

00:31:22.680 --> 00:31:24.620
around with it a little bit.

00:31:24.710 --> 00:31:26.320
And Crush has this great challenge mode.

00:31:26.380 --> 00:31:29.730
And since we're doing a challenge,
why don't we tap on that?

00:31:29.830 --> 00:31:33.840
And Crush has actually been
written to use the challenge API to

00:31:33.840 --> 00:31:38.800
remind us who has challenged us,
Eunice, as well as she's actually

00:31:38.820 --> 00:31:41.230
sent us a message,
and it is also reminding us

00:31:41.250 --> 00:31:45.230
the score that we need to
beat to beat her challenge.

00:31:45.360 --> 00:31:47.390
So why don't we play this game?

00:31:47.580 --> 00:31:51.200
So this is just a pretty
simple top-down space shooter,

00:31:51.200 --> 00:31:53.240
and I'm a pretty good gamer,
so I'm pretty sure that I'm

00:31:53.240 --> 00:31:55.820
actually going to be able to
beat 700 points pretty quick.

00:31:55.870 --> 00:31:59.010
And there we go, already over 700 points.

00:31:59.190 --> 00:32:00.270
That's awesome.

00:32:00.550 --> 00:32:03.880
But I was actually checking out the
achievements for this game earlier,

00:32:03.880 --> 00:32:07.000
and there's actually an
achievement for beating level 1,

00:32:07.000 --> 00:32:10.200
which I actually haven't
gotten around to doing yet.

00:32:10.320 --> 00:32:15.100
So I'm just going to take a few more
seconds here and see if I can actually

00:32:15.110 --> 00:32:17.640
just go ahead and beat level 1.

00:32:17.690 --> 00:32:19.040
And there we go.

00:32:19.320 --> 00:32:22.860
We were able to beat level 1,
so we unlocked that achievement.

00:32:23.140 --> 00:32:25.790
We got a score of 4,600 points.

00:32:25.830 --> 00:32:29.090
Which is well over the 700 points
that we needed to get in order

00:32:29.340 --> 00:32:30.940
to beat Eunice's challenge.

00:32:31.070 --> 00:32:33.210
So we got a challenge complete.

00:32:33.280 --> 00:32:36.960
And as soon as I completed
this challenge,

00:32:37.000 --> 00:32:42.760
Eunice actually got a challenge for
me to beat my score of 4,600 points.

00:32:42.780 --> 00:32:44.480
And, you know, that's great and all.

00:32:44.480 --> 00:32:45.680
She's got a challenge for me.

00:32:45.680 --> 00:32:48.780
But I actually,
since I just completed this achievement,

00:32:48.780 --> 00:32:52.800
I'd actually like to challenge her
to complete that achievement as well.

00:32:52.800 --> 00:32:55.710
So if we just tap on this challenge,
friends.

00:32:55.860 --> 00:32:56.520
Button.

00:32:56.580 --> 00:33:01.510
We can actually send Eunice a challenge
directly from within the game.

00:33:01.520 --> 00:33:05.040
So why don't we send that off to her and
see if she can not only beat our score,

00:33:05.040 --> 00:33:06.600
but also beat our challenge.

00:33:06.740 --> 00:33:10.800
So that is challenges for
scores as well as achievements.

00:33:10.860 --> 00:33:14.380
And those are just some of the
few things that you can do to

00:33:14.560 --> 00:33:19.220
add to the interactivity of
your game between your players,

00:33:19.360 --> 00:33:20.910
even in single player games.

00:33:20.980 --> 00:33:24.140
And I'm sure that you guys are
going to come up with some great

00:33:24.230 --> 00:33:25.720
new ways to extend gameplay.

00:33:25.720 --> 00:33:28.260
And some really cool stuff that
we haven't even thought of yet.

00:33:28.260 --> 00:33:30.440
And I can't wait to see what you guys do.

00:33:30.580 --> 00:33:31.100
Thanks.

00:33:31.270 --> 00:33:33.680
Back to Dan.

00:33:33.710 --> 00:33:35.680
Thanks a lot, Megan.

00:33:37.410 --> 00:33:40.900
Right when the score is submitted,
having beaten that challenge,

00:33:40.900 --> 00:33:44.510
Megan would have received
a push notification saying,

00:33:44.580 --> 00:33:47.870
"You've just beaten Eunice's
challenge." And at that point,

00:33:48.040 --> 00:33:50.140
there was custom UI that
would be displayed saying,

00:33:50.140 --> 00:33:52.640
"Congratulations,
you just beat the challenge." And she

00:33:52.640 --> 00:33:55.970
could have even sent an achievement
challenge right back to Eunice,

00:33:55.970 --> 00:33:57.400
kind of piling it on a bit.

00:33:57.530 --> 00:34:00.590
But you guys saw, hopefully,
at yesterday's games kickoff,

00:34:00.670 --> 00:34:03.330
the Jetpack Joyride demo
that used challenges as well,

00:34:03.640 --> 00:34:07.780
which also shows another way that you
could make custom challenge play within

00:34:07.780 --> 00:34:11.700
your game to turn any single-player
or multiplayer game into a new,

00:34:11.700 --> 00:34:15.180
interconnected, friend-based experience.

00:34:15.410 --> 00:34:17.900
So, Rekall,
I talked about how challenges are free,

00:34:17.900 --> 00:34:21.910
out of the box,
on day one of iOS 6's release,

00:34:22.070 --> 00:34:25.200
provided your game supports
leaderboards and achievements.

00:34:25.290 --> 00:34:27.200
Well, how does that work?

00:34:27.200 --> 00:34:29.790
Well, Rekall,
your game is now going to be

00:34:29.790 --> 00:34:33.470
reporting scores as well as reporting
achievements to the Game Center,

00:34:33.510 --> 00:34:34.000
right?

00:34:34.090 --> 00:34:38.380
So let's say Jessica has a challenge from
Eunice to beat a score of 500 points.

00:34:38.680 --> 00:34:42.770
Jessica makes it — well,
you make for Jessica a report score

00:34:42.770 --> 00:34:47.290
call to Game Center for 600 points,
which means that Game Center now sees

00:34:47.290 --> 00:34:52.360
that that challenge for 500 is now
completed because Jessica just got 600.

00:34:52.510 --> 00:34:56.880
So automatically, Game Center will push
back to Jessica's device,

00:34:56.920 --> 00:35:00.480
telling her,
"You just beat Eunice Park's challenge."

00:35:00.910 --> 00:35:03.910
Now that's fantastic,
but what if you wanted to actually

00:35:03.980 --> 00:35:06.140
have in-game control of challenges?

00:35:06.320 --> 00:35:10.040
Like, let's say you want to allow
players to programmatically,

00:35:10.050 --> 00:35:13.580
automatically challenge their
friends within your game.

00:35:13.780 --> 00:35:16.290
Again, I bet you all have a screen
that looks like this,

00:35:16.360 --> 00:35:18.780
some sort of level complete screen,
and you're showing a score and

00:35:18.780 --> 00:35:20.180
you're showing an achievement.

00:35:20.290 --> 00:35:22.760
And before we discussed about how
we could allow players to share

00:35:22.760 --> 00:35:25.270
their scores and achievements,
but what if you provided

00:35:25.380 --> 00:35:27.750
control for players to also,
right then and there,

00:35:27.950 --> 00:35:30.260
send a challenge to their
friends to beat that score,

00:35:30.260 --> 00:35:32.920
to earn that achievement as well.

00:35:33.170 --> 00:35:36.800
Well, to do that, it's very simple,
straightforward code.

00:35:36.840 --> 00:35:40.900
For sending an achievement challenge,
you just need to first have the

00:35:41.120 --> 00:35:43.890
friends of the current local
player that this challenge is for,

00:35:44.000 --> 00:35:46.730
as well as a message,
both of which should be determined

00:35:46.800 --> 00:35:48.580
by the current local player.

00:35:48.750 --> 00:35:51.580
Then for an achievement challenge,
you just create an achievement object

00:35:51.700 --> 00:35:54.770
like you would any other and knit
it with the appropriate identifier.

00:35:54.850 --> 00:35:57.590
Set the percent complete to 100.

00:35:58.120 --> 00:36:01.500
Call issue challenge to
players with a message.

00:36:01.500 --> 00:36:04.240
Passing those players and the
message for that challenge.

00:36:04.450 --> 00:36:07.260
Now with achievement challenges,
recall I said percent

00:36:07.390 --> 00:36:08.880
complete equals 100.

00:36:08.880 --> 00:36:12.430
While achievements can
be gradually earned,

00:36:12.460 --> 00:36:15.040
as far as challenges go,
you can only challenge someone

00:36:15.040 --> 00:36:17.380
to fully earn an achievement,
not gradually.

00:36:17.380 --> 00:36:19.900
So when you're sending
an achievement challenge,

00:36:19.900 --> 00:36:24.140
you want to make sure that this percent
complete property is set to 100.

00:36:24.150 --> 00:36:26.820
For scores, it's very similar.

00:36:26.820 --> 00:36:29.630
You set up the friends who
are going to receive this

00:36:29.630 --> 00:36:31.520
challenge as well as any message.

00:36:31.520 --> 00:36:35.470
And then you create your GK score
object like you would any other.

00:36:35.850 --> 00:36:36.960
You init it with a category.

00:36:36.960 --> 00:36:40.320
You set the point value it's for
as well as any gameplay appropriate

00:36:40.320 --> 00:36:43.590
context so you can get reference
to that context when you receive

00:36:43.610 --> 00:36:44.960
the challenge on the other side.

00:36:44.960 --> 00:36:50.630
Then you call issue challenge to
players message on that GK score object.

00:36:50.900 --> 00:36:54.060
And right then and there,
it will be automatically sending a

00:36:54.130 --> 00:36:57.940
push notification to the receiver's
device informing them that the current

00:36:57.940 --> 00:37:00.390
player has just called them out.

00:37:01.540 --> 00:37:02.710
So that's great.

00:37:02.780 --> 00:37:06.800
We can now programmatically issue
challenges to players within your game.

00:37:06.800 --> 00:37:08.690
But what about the receiving end?

00:37:08.840 --> 00:37:12.620
You recall that we displayed a
notification banner on the home screen

00:37:12.620 --> 00:37:16.240
during the demo telling Megan that
she just got a challenge from Unus.

00:37:16.390 --> 00:37:18.890
And when she tapped it,
it launched the game with a special

00:37:19.140 --> 00:37:22.020
challenge mode for the challenge
that the player just selected,

00:37:22.020 --> 00:37:22.600
right?

00:37:23.530 --> 00:37:26.120
Well,
if your game is even currently running,

00:37:26.250 --> 00:37:30.020
automatically we display a similar
drop-down banner telling the player

00:37:30.150 --> 00:37:31.560
that they just received a challenge.

00:37:31.570 --> 00:37:34.520
And if they select that banner,
if they tap on it at

00:37:34.520 --> 00:37:37.880
the top of the screen,
that will allow you to hook

00:37:37.880 --> 00:37:42.220
into an event to display
custom UI to the player saying,

00:37:42.220 --> 00:37:44.280
hey,
this is the challenge you just tapped.

00:37:44.380 --> 00:37:47.840
Unus Park is telling you, let's play,
and here's the score information or

00:37:47.840 --> 00:37:49.740
the achievement that you got to earn.

00:37:49.760 --> 00:37:53.220
And maybe even after that,
you could put in a new gameplay mode.

00:37:53.240 --> 00:37:54.610
Based around the challenge.

00:37:54.670 --> 00:37:56.780
Really anything you wanted to do.

00:37:56.790 --> 00:38:00.630
So to hook into this selection event,
this tapping of that banner,

00:38:00.630 --> 00:38:04.780
you can do that through what's called
the GK Challenge Event Handler.

00:38:04.820 --> 00:38:08.570
Now, the GK Challenge Event Handler
is just the call center for all

00:38:08.570 --> 00:38:11.250
challenge-related events on Game Center.

00:38:11.290 --> 00:38:14.280
It's a singleton,
and it has a delegate that you assign.

00:38:14.280 --> 00:38:16.700
It's very similar to a lot
of other patterns within

00:38:16.700 --> 00:38:18.280
both Game Center and UIKit.

00:38:18.280 --> 00:38:21.490
And it handles events for
reception of challenges,

00:38:21.630 --> 00:38:23.200
selecting challenges.

00:38:23.200 --> 00:38:24.530
Completing challenges.

00:38:24.530 --> 00:38:27.580
You can even customize whether
those banners will be appearing

00:38:27.580 --> 00:38:31.200
in your game when challenges are
received or when they're completed.

00:38:33.000 --> 00:38:36.120
So to handle the case of the
current player tapping that

00:38:36.120 --> 00:38:39.260
challenge received banner,
thus they're interested in

00:38:39.260 --> 00:38:42.480
playing against that challenge,
the steps you need to take are such.

00:38:42.480 --> 00:38:46.520
You set up the delegate and you
override the appropriate event.

00:38:46.560 --> 00:38:49.690
So in this case,
it's a challenge banner was just

00:38:49.690 --> 00:38:53.020
displayed and the user tapped on it,
and you want to display some

00:38:53.090 --> 00:38:55.870
sort of custom UI and maybe even
start your game in a new mode.

00:38:56.280 --> 00:38:59.100
So to display this player's
photo and maybe their name,

00:38:59.100 --> 00:39:02.260
you've got to retrieve the
issuing player's name and photo.

00:39:02.260 --> 00:39:04.630
As well as,
if you're going to start your game

00:39:04.690 --> 00:39:08.230
up in a new challenge-centric mode,
you load any appropriate data

00:39:08.230 --> 00:39:11.530
for the score or achievement that
has to do with that challenge.

00:39:11.540 --> 00:39:15.130
And then you present your custom
UI and away the player goes.

00:39:15.180 --> 00:39:18.850
So let's take a look at the code that's
required for implementing this custom

00:39:18.850 --> 00:39:21.010
UI and hooking into the challenge event.

00:39:21.040 --> 00:39:26.260
First, for setting up the delegate,
you'll see here that the application is

00:39:26.260 --> 00:39:26.260
going to be a little bit more complex.

00:39:26.270 --> 00:39:28.570
The application delegate is
implementing the GK challenge

00:39:28.570 --> 00:39:30.080
event handler delegate protocol.

00:39:30.080 --> 00:39:32.760
Now, this could be any object that
implements this protocol.

00:39:32.760 --> 00:39:37.060
We're just using it here because it's a
pretty straightforward use of an example.

00:39:37.060 --> 00:39:40.770
And you'll notice application did
finish launching with options.

00:39:40.820 --> 00:39:43.520
As soon as possible,
we're setting up the delegate

00:39:43.590 --> 00:39:47.370
for that shared instance of the
GK challenge event handler object.

00:39:47.480 --> 00:39:50.490
Set up the delegate, and right then,
you are hooked into the

00:39:50.600 --> 00:39:53.480
challenge event stream,
and you will get told any time the

00:39:53.480 --> 00:39:55.480
local player got a challenge received.

00:39:56.240 --> 00:39:59.740
or they completed a challenge,
or tapped a banner.

00:40:00.110 --> 00:40:02.560
Now,
in order to implement the code for the

00:40:02.560 --> 00:40:07.150
player selecting a challenge banner,
we provide a method for the

00:40:07.150 --> 00:40:11.160
delegate to implement called
LocalPlayerDidSelectChallenge.

00:40:11.230 --> 00:40:15.150
Now, to display that player's name,
the issuing player's name in their photo,

00:40:15.150 --> 00:40:16.790
it's very straightforward.

00:40:16.870 --> 00:40:22.680
A challenge holds a reference or to
the player ID for the issuing player.

00:40:22.750 --> 00:40:24.740
Now,
this player ID is just a unique handle

00:40:25.070 --> 00:40:26.870
that refers to a Game Center player.

00:40:27.010 --> 00:40:31.100
And you can load the
GKPlayer object with that ID,

00:40:31.110 --> 00:40:32.980
calling LoadPlayersForIdentifiers.

00:40:33.080 --> 00:40:35.800
And when this completion
handler is called,

00:40:35.880 --> 00:40:40.660
you get a reference to the GKPlayer
object that player ID represents.

00:40:40.910 --> 00:40:42.330
Now, we want to load a photo, right?

00:40:42.490 --> 00:40:46.980
So you call on that GKPlayer object,
load photo for size.

00:40:47.100 --> 00:40:48.320
You pass in the appropriate size.

00:40:48.390 --> 00:40:50.350
In this case,
Eunice's photo is pretty big,

00:40:50.350 --> 00:40:53.870
so we're passing in GK photo size normal.

00:40:53.970 --> 00:40:56.390
And when that completion
handler is called back,

00:40:56.510 --> 00:41:00.080
you just present the challenge
UI that you wish to present.

00:41:00.150 --> 00:41:03.240
And you load any additional data
that you wish to have as well

00:41:03.240 --> 00:41:06.140
in order to put your game into a
new sort of challenge-based mode.

00:41:06.230 --> 00:41:09.390
So I keep talking about
challenge-based modes and loading data.

00:41:09.400 --> 00:41:13.720
Let's take a look at what we
could do here with this challenge.

00:41:15.400 --> 00:41:16.260
Load data for challenge.

00:41:16.280 --> 00:41:20.260
Let's say the challenge that was
received was a score challenge.

00:41:20.390 --> 00:41:23.660
Well, something we could do with a score
challenge is score challenges

00:41:23.690 --> 00:41:27.690
contain a reference to a GK score
object that was used to create it.

00:41:27.780 --> 00:41:30.160
And recall that scores have context,
right?

00:41:30.540 --> 00:41:34.770
So let's say you encoded a URL holding
gameplay like ghost replay data

00:41:34.770 --> 00:41:39.510
of how Eunice scored those 500
points when she challenged Jessica.

00:41:39.560 --> 00:41:42.460
Well, right here,
you could load up that ghost data when

00:41:42.460 --> 00:41:46.190
Jessica selects the challenge banner
so that when Jessica is playing your

00:41:46.190 --> 00:41:49.080
game and racing through the stars,
Eunice's ship is right

00:41:49.150 --> 00:41:50.440
alongside with her.

00:41:50.500 --> 00:41:54.290
Now, this isn't real-time multiplayer,
but it's a very similar experience.

00:41:54.370 --> 00:41:56.860
Jessica sees Eunice calling
her out the entire way,

00:41:56.860 --> 00:41:59.670
and you're just raising the
bar of competition there.

00:42:00.490 --> 00:42:04.040
This is just one of many examples
of what you could do with context as

00:42:04.120 --> 00:42:08.200
well as challenges and achievements
in order to make your game really

00:42:08.290 --> 00:42:12.030
special and truly stand out amongst
all the other games on the App Store.

00:42:13.930 --> 00:42:17.020
So we've got issuing challenges
as well as receiving and

00:42:17.020 --> 00:42:18.600
selecting those challenges.

00:42:18.600 --> 00:42:21.200
What about when a challenge is completed?

00:42:21.280 --> 00:42:23.840
Well,
when a player completes a challenge,

00:42:23.890 --> 00:42:26.760
by default,
we present that little banner saying

00:42:26.760 --> 00:42:28.470
you just beat so-and-so's challenge.

00:42:28.610 --> 00:42:30.050
But maybe you want to jazz it up a bit.

00:42:30.140 --> 00:42:32.480
Maybe you really want to
give them a pat on the back.

00:42:32.540 --> 00:42:34.400
And you want to show
some custom UI that says,

00:42:34.440 --> 00:42:35.040
"Hey, way to go.

00:42:35.040 --> 00:42:36.080
You did a really great job.

00:42:36.080 --> 00:42:39.120
This challenge is beaten." Maybe you
want to show an icon of the

00:42:39.120 --> 00:42:43.800
achievement or the score leaderboard
that that challenge was for.

00:42:43.950 --> 00:42:47.050
Well, you can do this very similar
to the previous example of a

00:42:47.050 --> 00:42:49.040
player selecting a challenge.

00:42:49.090 --> 00:42:52.410
You just need to implement local
player did complete challenge in

00:42:52.410 --> 00:42:54.880
your challenge handler delegate.

00:42:54.960 --> 00:43:00.040
And in the case of displaying a
UI image that is based off of the

00:43:00.040 --> 00:43:05.720
score or the achievement icon,
to do that, if it's a score challenge,

00:43:05.720 --> 00:43:09.020
recall, scores, score challenges have a
reference to their scores.

00:43:09.140 --> 00:43:13.680
So you can look up the
leaderboard icon for that score.

00:43:13.750 --> 00:43:15.720
And just the same,
achievement challenges have

00:43:15.750 --> 00:43:19.190
references to the achievements that
were used to send that challenge.

00:43:19.310 --> 00:43:22.680
So you can look up in a lookup
table somewhere in your game to

00:43:22.680 --> 00:43:24.880
get the icon for the achievement.

00:43:24.910 --> 00:43:27.630
And finally, you just show your
completed challenge UI.

00:43:27.630 --> 00:43:29.760
You blast some particle effects,
sound the trumpets,

00:43:29.790 --> 00:43:33.290
whatever you got to do in order
to give your players that sense

00:43:33.290 --> 00:43:36.790
of they've done something special,
and they've beaten their

00:43:36.830 --> 00:43:38.270
friends in your game.

00:43:39.360 --> 00:43:43.100
So we've gone over two particular
events that you can hook into here.

00:43:43.100 --> 00:43:46.350
When a player selects a challenge
banner or when they complete a challenge

00:43:46.780 --> 00:43:48.410
on their device that they received.

00:43:48.440 --> 00:43:51.320
But we provide you other events
that you can hook into here

00:43:51.320 --> 00:43:53.750
that I'm not going to get into,
but I suggest you take a

00:43:53.750 --> 00:43:54.840
look at the documentation.

00:43:54.840 --> 00:43:56.540
So local player received challenge.

00:43:56.540 --> 00:43:59.490
That's when the local player
received the challenge in any case.

00:43:59.500 --> 00:44:02.630
Not just tapping the banner to
launch your game or within the game,

00:44:02.630 --> 00:44:05.990
but anytime they receive a challenge
so you can present your own UI.

00:44:06.720 --> 00:44:09.260
As well as when the remote
player completed a challenge.

00:44:09.330 --> 00:44:12.630
So if I sent a challenge
to you and you beat it,

00:44:12.650 --> 00:44:15.910
this is when I get a push
notification telling me that

00:44:15.910 --> 00:44:17.350
you just beat my challenge.

00:44:17.380 --> 00:44:19.700
So you could put in some
interesting stuff there as well.

00:44:19.780 --> 00:44:23.590
As well as we give you control of
overriding the banner behavior.

00:44:23.630 --> 00:44:25.680
If you want to hide those
Game Center banners are

00:44:25.680 --> 00:44:28.550
displayed within your game,
you can turn those off at

00:44:28.700 --> 00:44:31.030
your own at your own control.

00:44:33.420 --> 00:44:36.520
So a couple things I want you to keep
in mind when it comes to challenges.

00:44:36.520 --> 00:44:40.150
We recall this slide of issuing
a challenge programmatically,

00:44:40.150 --> 00:44:45.120
and we're filtering out players for
the current challenge as well as

00:44:45.150 --> 00:44:47.110
having the player enter in a message.

00:44:47.160 --> 00:44:50.430
You want to make sure that the
players who are receiving a

00:44:50.460 --> 00:44:54.330
challenge are ultimately decided
by your current local player,

00:44:54.330 --> 00:44:58.380
as well as that message that's
being attached to the challenge.

00:44:58.380 --> 00:45:00.960
You want the local player
to enter that message.

00:45:02.180 --> 00:45:03.260
Challenges are from the heart.

00:45:03.310 --> 00:45:05.310
I mean,
it's a friend calling out their friend,

00:45:05.460 --> 00:45:07.420
saying,
"I bet you can't do better than me."

00:45:07.420 --> 00:45:11.560
So you want to make sure that your
players know which friends they're

00:45:11.560 --> 00:45:15.630
sending this challenge to and what
words they're using and message they're

00:45:15.690 --> 00:45:18.390
sending when this challenge is issued.

00:45:18.590 --> 00:45:20.280
That doesn't mean, though,
that you can't, you know,

00:45:20.420 --> 00:45:21.530
push them in a direction, right?

00:45:21.770 --> 00:45:26.570
Like, let's say you've got Jessica,
who just got a score of 500 points.

00:45:26.640 --> 00:45:29.780
Maybe it wouldn't make too much
sense for her to challenge Ed,

00:45:29.790 --> 00:45:31.900
who got 4 billion points in your game.

00:45:31.900 --> 00:45:35.080
But for somebody like Eunice,
who only got 300 points,

00:45:35.080 --> 00:45:37.860
maybe you want to present
to her the option of saying,

00:45:37.860 --> 00:45:39.400
hey, here are all your friends.

00:45:39.400 --> 00:45:42.860
Eunice scored less than you,
so maybe you want to challenge her.

00:45:42.860 --> 00:45:44.450
But you can challenge
other people as well.

00:45:45.340 --> 00:45:51.010
So how do we do that?

00:45:51.010 --> 00:45:51.010
How do we suggest players
that the current player

00:45:51.010 --> 00:45:51.010
could issue a challenge to?

00:45:51.350 --> 00:45:54.410
We provide in the GameKit framework
a GK leaderboard object.

00:45:54.410 --> 00:45:58.510
And this class allows you to query
scores that were posted to any

00:45:58.510 --> 00:46:00.540
leaderboard you've set up in your game.

00:46:00.670 --> 00:46:03.400
So let's say it's a score
for level one that we want to

00:46:03.400 --> 00:46:05.140
filter all lesser scores for.

00:46:05.380 --> 00:46:07.870
In this case,
we just create the GK leaderboard object.

00:46:08.090 --> 00:46:13.250
You set its category to the leaderboard
string you've defined in iTunes Connect.

00:46:13.670 --> 00:46:17.140
Then you set up the player
scope to be friends only.

00:46:17.250 --> 00:46:21.200
That's because challenges can only be
issued to friends of the current player.

00:46:21.310 --> 00:46:24.300
And in this case,
we're getting the top 100 scores

00:46:24.300 --> 00:46:26.240
from all friends for level one.

00:46:26.320 --> 00:46:29.390
Now, when you call load scores with
completion handler and that

00:46:29.390 --> 00:46:33.150
completion handler is called back,
you will receive an array of all scores

00:46:33.580 --> 00:46:35.760
that are for level one for friends.

00:46:35.850 --> 00:46:40.300
And here you can filter that
array for any score that is less

00:46:40.300 --> 00:46:45.200
than the score that was just
earned in that recent playthrough.

00:46:45.290 --> 00:46:47.240
And finally, you present a friend picker.

00:46:47.440 --> 00:46:51.000
Let the player decide, "OK, well,
it seems like Eunice scored less than me,

00:46:51.000 --> 00:46:53.000
so maybe I want to challenge her.

00:46:53.000 --> 00:46:56.380
But, you know, Ed's there as well,
and he's not selected by

00:46:56.380 --> 00:47:00.100
default because he already got
4 billion points in this game,

00:47:00.200 --> 00:47:02.980
but maybe I don't think he
could do it again." So let

00:47:03.060 --> 00:47:05.180
them have that final control.

00:47:05.740 --> 00:47:08.200
One other thing I want you to
keep in mind with challenges

00:47:08.330 --> 00:47:11.720
specific to achievement
challenges is that by default,

00:47:12.160 --> 00:47:14.930
once a player has earned an
achievement in your game,

00:47:15.110 --> 00:47:19.760
they're no longer eligible to complete
a challenge for that achievement.

00:47:19.900 --> 00:47:22.040
Now, the reason is a gameplay reason.

00:47:22.150 --> 00:47:26.340
There may be achievements that you've
defined within your game that don't

00:47:26.340 --> 00:47:27.900
make sense to be earned more than once.

00:47:28.040 --> 00:47:30.620
So let's say you've got an
achievement for starting up

00:47:30.620 --> 00:47:32.180
the game for the first time.

00:47:32.340 --> 00:47:34.960
You can't start up a game for
the first time a second time,

00:47:34.960 --> 00:47:38.790
so because of that sort of case,
we've defaulted the behavior of

00:47:38.860 --> 00:47:41.120
you can't re-challenge people.

00:47:41.290 --> 00:47:44.250
But we do provide you the
ability in iTunes Connect to

00:47:44.250 --> 00:47:48.010
re-enable specific achievements,
to be re-challengeable.

00:47:48.280 --> 00:47:50.990
Even if the current player has
already earned that achievement,

00:47:51.130 --> 00:47:53.390
if this is set to "yes"
in iTunes Connect,

00:47:53.540 --> 00:47:57.240
this "achievable more than once" option,
then players will be able to

00:47:57.260 --> 00:48:01.340
challenge their friends over and
over again to earn this achievement.

00:48:01.730 --> 00:48:03.980
And on the note of achievements,
I want to highlight that

00:48:04.080 --> 00:48:07.340
achievements are your in to make
challenges as custom as you want.

00:48:07.350 --> 00:48:09.280
I mean, we have scores, right?

00:48:09.280 --> 00:48:10.070
And those are great.

00:48:10.070 --> 00:48:13.410
But if you want to make it so that the
player has to backflip backwards through

00:48:13.410 --> 00:48:16.780
a platforming level and never dying
and never pressing the turbo button,

00:48:16.930 --> 00:48:18.790
and you want players to
challenge each other based on

00:48:18.790 --> 00:48:21.270
those ridiculous guidelines,
be our guest.

00:48:21.470 --> 00:48:24.220
Make an achievement that
has that sort of standard.

00:48:24.220 --> 00:48:27.760
And when that achievement is earned,
well, a challenge could be completed.

00:48:28.320 --> 00:48:30.840
But recall, though,
that your game has limited

00:48:30.840 --> 00:48:32.500
achievements allotted to it.

00:48:32.500 --> 00:48:34.110
You can only define so many.

00:48:34.150 --> 00:48:36.540
And with the advent of game groups,
you know,

00:48:36.570 --> 00:48:38.840
this is going to be a very crowded space.

00:48:38.840 --> 00:48:42.350
So if you've got achievements that
maybe aren't fun or even sound

00:48:42.350 --> 00:48:48.020
something like killed 100 aliens,
killed 200 aliens, killed 300, 400,

00:48:48.030 --> 00:48:51.310
however many aliens,
that sounds like a leaderboard.

00:48:51.310 --> 00:48:53.250
And you probably,
when you're thinking up of

00:48:53.390 --> 00:48:56.110
these sorts of achievements,
if you've got a pattern like that,

00:48:56.110 --> 00:48:58.160
maybe you should set it as a leaderboard.

00:48:58.160 --> 00:48:58.300
And if you've got a pattern like that,
maybe you should set it as a leaderboard.

00:48:58.300 --> 00:48:58.300
And if you've got a pattern like that,
maybe you should set it as a leaderboard.

00:48:58.300 --> 00:48:58.300
And if you've got a pattern like that,
maybe you should set it as a leaderboard.

00:48:58.390 --> 00:49:00.410
So that you have more
space for even more fun,

00:49:00.640 --> 00:49:02.580
replayable challenges within your game.

00:49:04.560 --> 00:49:08.360
So challenges, again,
are built in day one on iOS 6.

00:49:08.490 --> 00:49:11.880
Your game will support it if you've
got leaderboards and achievements.

00:49:11.950 --> 00:49:16.390
But we provide you API to extend
your game to provide custom

00:49:16.390 --> 00:49:18.780
challenge-based gameplay modes.

00:49:18.880 --> 00:49:21.480
And GK Score Context
for score challenges,

00:49:21.540 --> 00:49:25.550
this is an awesome way to make any
score challenge seem like a visceral,

00:49:25.550 --> 00:49:29.070
the player is right there,
in-your-face experience.

00:49:29.240 --> 00:49:32.490
So I consider that you give
context a second look here.

00:49:32.700 --> 00:49:34.750
And recall that challenges
are a personal message,

00:49:34.840 --> 00:49:39.220
so give the issuing player of those
challenges final control and say over

00:49:39.220 --> 00:49:43.950
who's going to receive the challenge and
what's going to be said along with it.

00:49:44.450 --> 00:49:49.670
And as many times as possible,
if you have an achievement that would be,

00:49:49.870 --> 00:49:52.060
you know,
would make sense for it to be replayable,

00:49:52.060 --> 00:49:55.840
to be challenged over and over again,
then tick that box from no

00:49:55.840 --> 00:49:57.370
to yes on iTunes Connect.

00:49:57.810 --> 00:49:59.560
The more replayable
achievements you have,

00:49:59.560 --> 00:50:01.340
the more fun everybody's going to have.

00:50:01.340 --> 00:50:07.330
I bet you earned that achievement once,
but I don't think you could do it again.

00:50:07.330 --> 00:50:07.330
It's that sort of gameplay, right?

00:50:07.670 --> 00:50:09.760
So that's challenges.

00:50:10.010 --> 00:50:13.740
And one more thing that I want
to talk about today is something

00:50:13.740 --> 00:50:15.010
that you've heard about already.

00:50:15.170 --> 00:50:18.020
I bet a lot of you out there have
different versions of your games.

00:50:18.320 --> 00:50:19.420
You might have a light version.

00:50:19.420 --> 00:50:21.040
You might have an HD version.

00:50:21.160 --> 00:50:24.230
And now with Mountain Lion,
you're going to have some sort

00:50:24.230 --> 00:50:25.850
of desktop version of your game,
right?

00:50:26.400 --> 00:50:30.790
And wouldn't it be awesome if when I'm
playing the light version of your game,

00:50:31.300 --> 00:50:37.120
And I score 500 points automatically on
the HD version and the desktop version.

00:50:37.120 --> 00:50:41.830
Those 500 points are tracked right
out of the box so that when I upgrade

00:50:41.830 --> 00:50:45.520
to the full version or when I go and
buy the desktop version of your game,

00:50:45.710 --> 00:50:49.370
all my statistics are already there,
providing a consistent experience.

00:50:49.380 --> 00:50:51.050
And similar for achievements.

00:50:51.110 --> 00:50:53.450
If I earn an achievement in
one version of your game,

00:50:53.450 --> 00:50:55.890
all other linked games
get that same achievement.

00:50:55.900 --> 00:50:58.770
Well, we allow you to do this
as a mountain lion,

00:50:58.770 --> 00:51:00.640
and it's called game groups.

00:51:01.200 --> 00:51:04.940
Now, game groups, I'm happy to tell you,
requires no specific coding.

00:51:04.950 --> 00:51:06.460
You don't have to code anything.

00:51:06.460 --> 00:51:08.770
It's an iTunes
Connect configuration step.

00:51:08.790 --> 00:51:11.360
And through game groups,
you can group leaderboards of

00:51:11.360 --> 00:51:14.380
different versions of your game,
as well as achievements.

00:51:14.380 --> 00:51:18.430
You can then, having linked leaderboards
and achievements,

00:51:18.480 --> 00:51:22.060
allow your players to beat
challenges on any linked game

00:51:22.060 --> 00:51:27.240
within that group ecosystem,
as well as cross-version multiplayer.

00:51:27.240 --> 00:51:29.710
So that,
as you saw at the keynote a few days ago,

00:51:29.710 --> 00:51:31.020
I could be playing a game.

00:51:31.330 --> 00:51:33.390
And I could be playing a game on
the iPad against a friend who's

00:51:33.390 --> 00:51:34.540
playing it on Mountain Lion.

00:51:34.620 --> 00:51:37.410
A really cool,
powerful cross-platform experience

00:51:37.410 --> 00:51:40.330
that lets your game be more
discoverable by everybody brings

00:51:40.650 --> 00:51:41.860
all your players together.

00:51:41.880 --> 00:51:43.710
So how do we do this?

00:51:43.880 --> 00:51:48.100
How do we go about linking your games and
putting them into the same game group?

00:51:48.200 --> 00:51:50.860
Well, I'm going to go through a
quick blow-by-blow here,

00:51:50.860 --> 00:51:54.840
but I do suggest that you check out
the iTunes Connect session tomorrow.

00:51:54.840 --> 00:51:55.980
I'll give you the time in a minute.

00:51:55.980 --> 00:51:58.980
But let me just give you the points
that you need to keep in mind

00:51:59.130 --> 00:52:00.890
when you're setting up your game.

00:52:01.200 --> 00:52:04.290
And I'll give you the points that
you need to keep in mind when you're

00:52:04.350 --> 00:52:08.200
setting up different versions of your
game to take advantage of game groups.

00:52:08.200 --> 00:52:10.200
To group these games,
all you need to do is, in iTunes Connect,

00:52:10.200 --> 00:52:12.200
is select one of the games that
you wish to add to a group.

00:52:12.390 --> 00:52:16.230
From there, in iTunes Connect,
you'll see an option to move

00:52:16.360 --> 00:52:18.200
this game to a new group.

00:52:18.200 --> 00:52:21.630
So let's say all these three games
are different versions of Crush,

00:52:21.780 --> 00:52:22.200
right?

00:52:22.200 --> 00:52:24.200
So we define a Crush group.

00:52:24.280 --> 00:52:27.200
Now we go through every
leaderboard within the game.

00:52:27.200 --> 00:52:30.200
And we define a new group
identifier for those leaderboards.

00:52:30.200 --> 00:52:31.200
So level one, level two, level three.

00:52:31.200 --> 00:52:33.130
Level one gets group.level1.

00:52:33.580 --> 00:52:35.120
Similar for achievements.

00:52:35.200 --> 00:52:39.560
For every achievement in that game,
we define new group identifiers

00:52:39.660 --> 00:52:42.150
for the achievements as well.

00:52:42.200 --> 00:52:44.200
So for achievement one,
it's group.achievement1.

00:52:44.200 --> 00:52:48.180
And now, when we want to actually add
other games to this group,

00:52:48.200 --> 00:52:49.200
we select that game.

00:52:49.200 --> 00:52:52.200
We move it to the Crush group.

00:52:52.200 --> 00:52:55.080
And we go through any leaderboards
that we want to merge into that group.

00:52:55.220 --> 00:52:57.200
So, hey,
we've got this level one leaderboard.

00:52:57.200 --> 00:53:00.200
We want to link it with
that other game's level one.

00:53:00.200 --> 00:53:03.200
We just give it the same group category.

00:53:03.200 --> 00:53:07.200
And now, these two games are
linked for a leaderboard.

00:53:07.330 --> 00:53:09.200
Now, if you want to link a
game for an achievement,

00:53:09.200 --> 00:53:13.190
per se, let's say it's a new game that
you want to add to the group,

00:53:13.200 --> 00:53:15.160
you move it to that Crush group.

00:53:15.910 --> 00:53:18.040
You take the achievement
that you want to link it for.

00:53:18.040 --> 00:53:20.310
Hey, it's achievement one,
so I want to link it with that

00:53:20.310 --> 00:53:21.680
original game's achievement one.

00:53:21.680 --> 00:53:23.700
Just give it the same group identifier.

00:53:23.700 --> 00:53:26.390
And now those games are
linked for the achievement.

00:53:26.400 --> 00:53:29.190
And from here on out,
after you've merged your leaderboards

00:53:29.190 --> 00:53:32.050
and merged your achievements,
you can define new leaderboards

00:53:32.150 --> 00:53:35.140
and specify which games are
eligible for that leaderboard.

00:53:35.140 --> 00:53:36.590
Similar for achievements.

00:53:36.600 --> 00:53:38.820
Maybe you want all games to be
eligible for this achievement

00:53:38.820 --> 00:53:39.790
that you're defining.

00:53:39.790 --> 00:53:41.080
That's how it works.

00:53:42.060 --> 00:53:46.590
Now, for cross-version multiplayer,
to let your iPod Touch users play

00:53:46.590 --> 00:53:50.910
against your players on Mountain Lion,
it's very simple as well.

00:53:50.910 --> 00:53:53.840
You select one of your games
that you put into this group.

00:53:53.890 --> 00:53:57.840
And you go to View Details,
Multiplayer Compatibility.

00:53:57.840 --> 00:53:59.310
I hope you're all writing this down.

00:53:59.340 --> 00:54:01.080
There's a test at the end of the session.

00:54:01.080 --> 00:54:03.120
So, no, it's, again, iTunes Connect.

00:54:03.120 --> 00:54:04.430
Take a look at it tomorrow.

00:54:04.430 --> 00:54:05.310
It'll be great.

00:54:05.450 --> 00:54:07.080
Go to Multiplayer Compatibility.

00:54:07.080 --> 00:54:10.320
You've got a lot of different versions,
all the different versions of

00:54:10.320 --> 00:54:11.980
your games that are in the group.

00:54:12.140 --> 00:54:15.420
And from here,
you can specify that Crush Lite 1.1

00:54:15.420 --> 00:54:19.380
is cross-compatible with all
versions of Crush HD for multiplayer,

00:54:19.460 --> 00:54:24.150
which is also compatible with
1.01 and 2.0 of Super Crush.

00:54:24.150 --> 00:54:26.830
And it's just like that,
provided you've got your network

00:54:26.830 --> 00:54:29.540
code in the background or
you're using the term-based API,

00:54:29.540 --> 00:54:33.670
all these games are now compatible with
each other for cross-version multiplayer.

00:54:35.400 --> 00:54:36.820
So again, blow by blow, right?

00:54:36.990 --> 00:54:39.380
Just keep these things
in mind tomorrow morning.

00:54:39.390 --> 00:54:41.300
You need to define a group ID.

00:54:41.360 --> 00:54:43.430
And from there,
you can convert your leaderboards

00:54:43.430 --> 00:54:47.280
and achievements for any game into
grouped leaderboards and achievements.

00:54:47.280 --> 00:54:49.720
And anytime you add a
new game to that group,

00:54:49.720 --> 00:54:53.880
you just have to merge those
leaderboards and achievements together.

00:54:53.880 --> 00:54:56.470
And finally,
if your game is multiplayer — oh,

00:54:56.620 --> 00:54:57.340
I'm sorry.

00:54:57.340 --> 00:55:00.720
And also, when you're defining new
leaderboards and new achievements

00:55:00.720 --> 00:55:03.160
for all games in this group,
you can do that just like

00:55:03.160 --> 00:55:04.550
you would any other time.

00:55:05.300 --> 00:55:09.160
And then if your game is multiplayer and
you want to specify which versions of

00:55:09.160 --> 00:55:14.270
your game are compatible with each other,
just do it right then.

00:55:14.960 --> 00:55:17.480
So we've learned a ton today.

00:55:17.480 --> 00:55:21.440
We've got players authenticating,
and they are talking to their friends

00:55:21.440 --> 00:55:25.720
by sending them challenges of scores
and tweeting achievements to the world.

00:55:25.890 --> 00:55:28.310
And again, with challenges,
there's this custom

00:55:28.310 --> 00:55:31.800
API that you can use that,
while challenges are built in on day one,

00:55:31.800 --> 00:55:34.500
you can make your game really,
really sing if you take

00:55:34.580 --> 00:55:36.800
advantage of this extensible API.

00:55:36.800 --> 00:55:40.090
As well as game groups to allow
players of any different version

00:55:40.090 --> 00:55:43.320
of your game to play together,
to track their progress

00:55:43.320 --> 00:55:46.460
across all versions,
to provide a solid upgrade

00:55:46.460 --> 00:55:47.800
path to your players.

00:55:47.800 --> 00:55:51.790
A really powerful option that
requires no code on your behalf.

00:55:51.800 --> 00:55:54.680
But this was a ton of information, right?

00:55:54.770 --> 00:55:57.770
So if you need information,
if you haven't been taking

00:55:57.770 --> 00:56:00.800
notes and you're going to
flunk this test afterwards,

00:56:00.800 --> 00:56:01.790
talk to Alan Schafer.

00:56:01.800 --> 00:56:03.760
He's our graphics and game
technologies evangelist.

00:56:03.800 --> 00:56:04.790
He's a great guy.

00:56:04.900 --> 00:56:06.790
He'll answer all your questions.

00:56:06.800 --> 00:56:09.060
We've got game center
documentation online,

00:56:09.060 --> 00:56:10.800
as well as the Apple dev forums.

00:56:10.800 --> 00:56:15.450
Now, for related sessions,
before you leave, what's new in iTunes

00:56:15.590 --> 00:56:16.690
Connect for app developers?

00:56:16.800 --> 00:56:17.790
I singled out already.

00:56:17.800 --> 00:56:21.230
But if you've got a multiplayer game,
tomorrow at 10:15,

00:56:21.230 --> 00:56:23.810
Christy is going to give a
great talk about using the

00:56:23.810 --> 00:56:25.800
multiplayer stack in game center.

00:56:25.970 --> 00:56:28.590
And Gabe is going to be giving
a talk right after that at

00:56:28.590 --> 00:56:32.960
11:30 about building games for
OS X Mountain Lion and showing how easy,

00:56:32.960 --> 00:56:35.800
how identical this framework
is across platforms.

00:56:35.800 --> 00:56:36.800
What's new?

00:56:36.800 --> 00:56:38.800
Really looking forward
to seeing you guys.

00:56:38.800 --> 00:56:39.800
Thank you so much for coming out today.

00:56:39.800 --> 00:56:41.780
I can't wait to see your games.

00:56:41.860 --> 00:56:42.800
Thanks.