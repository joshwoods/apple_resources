WEBVTT

00:00:11.030 --> 00:00:13.280
Well, thank you, and good morning.

00:00:13.480 --> 00:00:17.290
Welcome to session 301,
Introducing Passbook, Part 1.

00:00:17.510 --> 00:00:18.500
My name's Glen.

00:00:18.500 --> 00:00:21.310
I'm an iOS engineer,
and I'll be joined on the stage in a

00:00:21.310 --> 00:00:23.250
couple of minutes by my colleague Ken.

00:00:23.310 --> 00:00:25.120
Ken and I got to work
together on Passbook,

00:00:25.160 --> 00:00:28.650
and we're just really excited
to introduce it to you today and

00:00:28.650 --> 00:00:31.540
tell you a little bit about it.

00:00:32.230 --> 00:00:36.240
So Passbook is a new
application in iOS 6.

00:00:36.240 --> 00:00:39.240
It's available for iPhone and iPod Touch.

00:00:39.260 --> 00:00:43.650
And it's all about the extra stuff
that you might have in your pocket.

00:00:44.130 --> 00:00:47.630
Now,
a lot of third-party applications have

00:00:47.680 --> 00:00:50.820
been taking advantage of barcodes,
and they've been doing

00:00:50.820 --> 00:00:52.610
this in a variety of ways.

00:00:52.620 --> 00:00:56.770
But the most common use seems to
be to allow the user to take some

00:00:56.800 --> 00:00:59.250
sort of action in the real world.

00:00:59.260 --> 00:01:01.750
So maybe that's checking
in for your flight.

00:01:01.810 --> 00:01:04.420
Maybe it's buying your
morning cup of coffee,

00:01:04.420 --> 00:01:08.280
checking in for your movie
at the movie theater.

00:01:08.280 --> 00:01:10.540
And this is great.

00:01:10.540 --> 00:01:12.660
So customers love this.

00:01:13.010 --> 00:01:13.800
Developers love it.

00:01:14.000 --> 00:01:15.430
Merchants really like it.

00:01:15.570 --> 00:01:16.980
And we think it's really cool.

00:01:16.980 --> 00:01:21.620
But there hasn't really been any support
on iOS for this kind of thing so far.

00:01:21.620 --> 00:01:23.860
It's just kind of happened very,
very naturally.

00:01:23.860 --> 00:01:28.410
So that changes with iOS 6 and
the introduction of Passbook.

00:01:30.290 --> 00:01:36.140
Passbook is a single location on
your device where these passes can be

00:01:36.140 --> 00:01:41.600
gathered and accessed very easily in a
fun and useful and easy way by the user.

00:01:41.600 --> 00:01:45.320
And this is what the app looks
like when it's full of passes.

00:01:45.320 --> 00:01:46.300
It's really cool.

00:01:46.300 --> 00:01:48.440
It's got this nice, clean UI.

00:01:48.440 --> 00:01:51.960
And you tap on one of these,
and all the passes kind

00:01:51.960 --> 00:01:54.900
of flop out of the way,
and the one that you're interested

00:01:54.900 --> 00:01:56.350
in is the one that's shown on screen.

00:01:57.260 --> 00:01:59.330
Now,
we've taken care of a lot of the gotchas

00:01:59.330 --> 00:02:01.460
that come along with using these passes.

00:02:01.460 --> 00:02:05.300
So, I'm sure you've maybe been ready
to use one of these before,

00:02:05.300 --> 00:02:08.080
and you sort of gesture
down to the scanner,

00:02:08.080 --> 00:02:11.120
and it's in a Safari web page,
and the device rotates,

00:02:11.120 --> 00:02:13.630
and things get crazy,
and it doesn't work.

00:02:13.700 --> 00:02:14.860
And that's kind of frustrating.

00:02:14.860 --> 00:02:19.440
So, we've taken care of that issue,
and we also make sure that the backlight

00:02:19.440 --> 00:02:23.930
is at a certain brightness level,
so that increases the likelihood that

00:02:23.930 --> 00:02:26.600
there's going to be a successful scan.

00:02:27.240 --> 00:02:32.120
And we also made sure that when you,
you know, the backlight doesn't turn off

00:02:32.160 --> 00:02:36.780
right at the moment when you want to
scan and causing the scan to fail.

00:02:36.780 --> 00:02:38.470
So, this is really it.

00:02:38.470 --> 00:02:39.650
This is the app.

00:02:39.740 --> 00:02:43.270
But we've gone beyond this,
and we've tried to integrate

00:02:43.410 --> 00:02:45.780
Passbook deeply into the system.

00:02:45.780 --> 00:02:49.530
And one of the ways we've done that
is by using lock screen integration.

00:02:49.630 --> 00:02:52.190
And this is something that
we can provide that a regular

00:02:52.220 --> 00:02:54.950
third-party application can't,
and we think it's where

00:02:54.970 --> 00:02:56.440
Passbook really shines.

00:02:57.350 --> 00:03:01.960
So, and the beauty of this is that you
as a developer or a merchant can put

00:03:01.960 --> 00:03:07.310
your Pass on the lock screen in front
of the user at a time or a location

00:03:07.310 --> 00:03:08.820
that's really meaningful for them.

00:03:08.820 --> 00:03:10.810
And that's, we think, super powerful.

00:03:10.940 --> 00:03:16.100
So, that's another great feature of
Passbook that we think sets it apart.

00:03:17.860 --> 00:03:20.600
Now when that happens,
you get this little notification

00:03:20.600 --> 00:03:21.260
that's on the screen.

00:03:21.260 --> 00:03:23.640
You slide across it,
and the pass slides up,

00:03:23.720 --> 00:03:25.080
and it's there ready for you to use.

00:03:25.080 --> 00:03:28.290
And you don't even necessarily have
to enter your passcode to access it.

00:03:28.390 --> 00:03:31.170
So it's super convenient for the user.

00:03:31.860 --> 00:03:35.130
So that's what Passbook
does in a nutshell.

00:03:35.390 --> 00:03:39.250
And if you've had the opportunity
to install the latest,

00:03:39.300 --> 00:03:42.500
the seed that we've handed
out at the conference,

00:03:42.500 --> 00:03:45.100
then hopefully you've got
a chance to look at it.

00:03:45.140 --> 00:03:49.130
And what you've probably found is, hey,
there's not a whole lot in here, right?

00:03:50.490 --> 00:03:54.060
And that's why you're here today,
so that we can teach you how to put some

00:03:54.060 --> 00:03:56.320
content in it and how to make it useful.

00:03:56.320 --> 00:03:58.190
So that's what you're going to learn.

00:03:58.190 --> 00:04:00.550
We're going to show you
how to create passes,

00:04:00.550 --> 00:04:03.660
how to get a pass into Passbook,
and then we're going to give

00:04:03.660 --> 00:04:06.480
you some design tips as well
for making great passes,

00:04:06.480 --> 00:04:07.020
too.

00:04:08.410 --> 00:04:12.380
Now, as I mentioned,
this is Part 1 of a two-part series,

00:04:12.380 --> 00:04:13.210
riveting.

00:04:13.370 --> 00:04:16.040
And so I want to invite
you to come back to Part 2,

00:04:16.040 --> 00:04:18.670
which is going to be
tomorrow in Marina at 4:30.

00:04:18.890 --> 00:04:22.780
And Ken and Eliza are going to come back,
and they're going to show you how

00:04:22.780 --> 00:04:26.200
to update your passes dynamically
using push notifications.

00:04:26.200 --> 00:04:31.100
So another huge feature of Passbook
is that these individual passes can

00:04:31.100 --> 00:04:36.260
be targeted by push notifications,
much like your application can.

00:04:36.260 --> 00:04:39.410
So we're going to give you
the how-to on getting that to

00:04:39.410 --> 00:04:41.300
work and making that happen.

00:04:41.360 --> 00:04:44.580
And then we're also going to talk
about PassKit and how you can access

00:04:44.580 --> 00:04:49.570
model-level information about your
passes using our Objective-C API.

00:04:50.720 --> 00:04:53.290
Okay, so let's get into some of
the nuts and bolts of how you

00:04:53.290 --> 00:04:54.910
actually go ahead and make a pass.

00:04:54.980 --> 00:04:58.180
And to talk about how to make a pass,
we've been looking a lot at

00:04:58.180 --> 00:05:01.320
what's on the front of the pass,
but we haven't really talked

00:05:01.320 --> 00:05:02.430
about what's inside of it.

00:05:02.550 --> 00:05:04.260
So if you were to crack
open one of these things,

00:05:04.260 --> 00:05:05.420
what are you going to find?

00:05:05.420 --> 00:05:09.480
Well, what you'll find is that it's
basically a file package.

00:05:09.480 --> 00:05:12.330
And it looks a whole lot
like an application bundle

00:05:12.600 --> 00:05:17.010
with one distinct difference,
and that is that there's no executable

00:05:17.010 --> 00:05:19.800
code inside of this application bundle.

00:05:19.800 --> 00:05:23.130
Really,
the meat of it is this pass.json file.

00:05:23.130 --> 00:05:25.390
You may look at this and go,
wait a minute, JSON?

00:05:25.390 --> 00:05:26.270
Isn't this Apple?

00:05:26.280 --> 00:05:28.000
This is a little strange, right?

00:05:28.000 --> 00:05:29.950
I mean,
this seems like a perfect application

00:05:29.950 --> 00:05:31.160
to throw a plist in there.

00:05:31.160 --> 00:05:33.420
I mean, that's what you would usually
expect to see in a bundle.

00:05:33.420 --> 00:05:36.440
But what you'll find as we go
through some of these sessions is

00:05:36.440 --> 00:05:39.550
you begin to realize that these
passes are usually delivered,

00:05:39.740 --> 00:05:42.180
they're usually created
on a server somewhere.

00:05:42.180 --> 00:05:45.530
And so we wanted to choose a
technology that would be friendly

00:05:45.680 --> 00:05:48.900
to a variety of platforms,
and so we felt that, you know,

00:05:48.900 --> 00:05:49.000
this is a good opportunity to do that.

00:05:49.070 --> 00:05:50.330
So we decided to use JSON.

00:05:50.440 --> 00:05:52.440
And so this is a good opportunity
to choose JSON because a lot of

00:05:52.440 --> 00:05:54.760
server people and people who are
used to working on other platforms,

00:05:54.760 --> 00:05:56.440
this is a format that's
very familiar to them.

00:05:56.440 --> 00:06:02.120
So that's why we chose to use JSON.

00:06:02.320 --> 00:06:04.320
So that's the meat of it
is this pass.json file.

00:06:04.320 --> 00:06:10.280
And then along with that are icons,
images, and localized strings.

00:06:10.400 --> 00:06:14.840
So passes can also be completely
localized in any of the languages

00:06:14.840 --> 00:06:17.310
that we support on the platform.

00:06:17.310 --> 00:06:17.310
Obviously, it's up to you to bring
your translations,

00:06:17.310 --> 00:06:17.310
but we certainly support that.

00:06:18.530 --> 00:06:22.560
So once you have all these elements
gathered together in your file package,

00:06:22.560 --> 00:06:25.400
then we take that and we
sign it cryptographically,

00:06:25.400 --> 00:06:28.590
we zip it up,
and the binary that pops out of

00:06:28.620 --> 00:06:32.370
there is what ends up getting
delivered to the users on their

00:06:32.370 --> 00:06:34.390
iPhone or their iPod Touch.

00:06:35.840 --> 00:06:38.850
Okay, so we talked about,
at a high level,

00:06:38.960 --> 00:06:40.110
what makes up this thing.

00:06:40.320 --> 00:06:41.770
So how do you go about
building one of these?

00:06:41.900 --> 00:06:44.300
So let's take a look at
the steps involved there.

00:06:44.300 --> 00:06:47.890
And you can really break it down into
pretty much five simple steps to getting

00:06:47.890 --> 00:06:49.800
your content together in your pass.

00:06:49.800 --> 00:06:53.300
And the first is to enter
these pass identifiers.

00:06:53.300 --> 00:06:57.580
So obviously, passes need to be
distinguishable from one another.

00:06:57.640 --> 00:07:00.480
And so we do that with
a couple of identifiers.

00:07:00.480 --> 00:07:03.740
And I'll go into what each
one of those are and where you

00:07:03.740 --> 00:07:04.210
get them and what they mean.

00:07:04.920 --> 00:07:06.630
And then you can choose
a pass style as well.

00:07:06.750 --> 00:07:11.380
So we support five different styles,
and we'll take a look at each of those.

00:07:11.430 --> 00:07:13.940
Once you've done that,
you can fill out the information

00:07:13.940 --> 00:07:18.040
that's visible to the user on the
front and the back of the pass.

00:07:18.180 --> 00:07:20.570
And then you can add colors, logos,
and images.

00:07:20.730 --> 00:07:23.810
And once you've done that,
that's when you get to add the relevant

00:07:23.970 --> 00:07:28.940
times and locations where this pass
will show up in the lock screen.

00:07:29.060 --> 00:07:30.780
Very simple.

00:07:31.890 --> 00:07:34.860
All right, well, let's talk about what
these pass identifiers are.

00:07:35.050 --> 00:07:36.650
And the first one is
this team identifier.

00:07:36.650 --> 00:07:41.780
So the team identifier is something
that's issued to you when you

00:07:41.780 --> 00:07:45.260
sign up with a developer account
on the provisioning portal.

00:07:45.260 --> 00:07:47.480
It's a 10-character
string found on there.

00:07:47.480 --> 00:07:49.830
And if you're an iOS developer,
you're probably pretty

00:07:50.010 --> 00:07:50.980
familiar with this.

00:07:50.980 --> 00:07:54.540
And the reason that we need it is
because we use it to figure out

00:07:54.580 --> 00:07:59.100
which passes in the pass library your
application is entitled to access.

00:07:59.100 --> 00:08:01.780
So it's not just open season
for everybody to access.

00:08:01.800 --> 00:08:03.480
It's not just open season for everybody
to get to everyone else's passes.

00:08:03.480 --> 00:08:06.850
There's an entitlement
structure around that.

00:08:06.850 --> 00:08:10.190
And this is one of the ways
that we narrow that down.

00:08:10.730 --> 00:08:12.780
It looks like this.

00:08:13.040 --> 00:08:15.940
The key is just team identifier,
and then you just pop in the

00:08:15.940 --> 00:08:18.570
value right in your pass.json.

00:08:19.190 --> 00:08:21.600
The next one is a pass type identifier.

00:08:21.600 --> 00:08:27.600
So a pass type identifier defines
a category or a class of passes.

00:08:27.600 --> 00:08:31.140
And again, you register for one of these
on the developer portal.

00:08:31.140 --> 00:08:34.830
And it's one of the things that we
use to figure out how to group passes,

00:08:34.830 --> 00:08:35.320
too.

00:08:35.320 --> 00:08:37.010
So if you remember from
the demo on Monday,

00:08:37.020 --> 00:08:39.980
you saw one of the passes or two of
the passes were grouped together.

00:08:39.980 --> 00:08:42.560
And this is one of the mechanisms
that we use to figure out how

00:08:42.700 --> 00:08:45.790
passes are alike and whether we
should group them together or not.

00:08:47.020 --> 00:08:51.410
And it's just a quick example of
how you would enter one of these.

00:08:52.040 --> 00:08:53.400
The next one is a serial number.

00:08:53.400 --> 00:08:58.390
Now, the serial number is a unique number
for every pass that you issue.

00:08:58.390 --> 00:08:59.600
And it's chosen by you.

00:08:59.600 --> 00:09:01.900
It's completely -- it's
pretty much opaque to us.

00:09:01.900 --> 00:09:04.540
The only thing we care
about is that it's a string.

00:09:04.710 --> 00:09:07.820
And when you take the serial
number and you combine that

00:09:07.820 --> 00:09:12.880
with the pass type identifier,
that's how a single instance of a

00:09:12.880 --> 00:09:16.920
pass is globally and uniquely defined.

00:09:18.200 --> 00:09:21.920
So let me just dig into that a little
bit more and try and make a little bit

00:09:21.920 --> 00:09:26.040
more concrete difference between a pass
type identifier and a serial number.

00:09:26.040 --> 00:09:29.460
So let's say that I'm traveling with
my family and we're taking a flight

00:09:29.460 --> 00:09:31.220
and there's three of us traveling.

00:09:31.220 --> 00:09:34.050
Each of us has our own boarding pass.

00:09:34.070 --> 00:09:39.520
But we're all flying on Skyport Airways,
so they've issued us our boarding pass.

00:09:39.520 --> 00:09:42.820
And the likelihood here is that each
one of our boarding passes is going

00:09:42.820 --> 00:09:46.820
to have the same pass type identifier
because it's the same class of boarding

00:09:46.820 --> 00:09:50.350
pass comes from Skyport Airways.

00:09:50.820 --> 00:09:52.220
Now,
each one of these passes is different,

00:09:52.220 --> 00:09:52.620
though.

00:09:52.620 --> 00:09:54.980
I mean, they're issued to an individual.

00:09:54.980 --> 00:09:57.730
They have a different name on them,
maybe some different

00:09:57.730 --> 00:09:59.500
information in the barcode.

00:09:59.500 --> 00:10:02.440
And Skyport needs to be able to
identify each of these individually.

00:10:02.440 --> 00:10:05.900
So they issue each pass
a distinct serial number,

00:10:05.950 --> 00:10:08.280
which I've just made
trivially short here.

00:10:08.560 --> 00:10:11.150
The likelihood is that it would
be something more complex,

00:10:11.150 --> 00:10:13.730
like a UUIDU, something like that.

00:10:14.200 --> 00:10:18.900
Now, Skyport might also have a loyalty
program or a membership program.

00:10:19.010 --> 00:10:22.000
And maybe that's operated by a
completely different part of the company.

00:10:22.000 --> 00:10:24.900
And they need their own signing cert.

00:10:25.000 --> 00:10:27.670
And it's kind of a different
pass from their boarding passes,

00:10:27.670 --> 00:10:28.200
right?

00:10:28.420 --> 00:10:33.060
So in that case,
they're probably going to have

00:10:33.140 --> 00:10:38.350
a different pass-type identifier
that distinguishes that boarding

00:10:38.350 --> 00:10:38.350
pass that has its own certificate.

00:10:38.750 --> 00:10:40.440
Okay, so that's pass identifiers.

00:10:40.440 --> 00:10:43.850
Let's talk next about the different
pass styles that you have.

00:10:43.910 --> 00:10:49.060
And so we've got five different ones that
we're currently planning on shipping.

00:10:49.060 --> 00:10:51.800
The first is a coupon,
and the coupon has this kind

00:10:51.800 --> 00:10:53.600
of perforated edge at the top.

00:10:53.660 --> 00:10:58.860
The next one is the store card,
boarding passes, event tickets,

00:10:58.860 --> 00:11:03.700
and a generic style as well that
you can use for maybe something

00:11:03.700 --> 00:11:08.680
like membership or anything that
we perhaps haven't thought of yet.

00:11:08.700 --> 00:11:10.180
of yet.

00:11:10.430 --> 00:11:13.060
Now, I want you to notice that
each of these passes has kind

00:11:13.070 --> 00:11:15.240
of a distinct edge on them,
right?

00:11:15.270 --> 00:11:19.680
They're all recognizable by
the edge that goes around them.

00:11:19.870 --> 00:11:23.020
And that's one of the reasons
why it's really important that

00:11:23.020 --> 00:11:29.460
when you're making your pass,
you choose the right pass style,

00:11:29.780 --> 00:11:33.590
because this is one of the UI elements
that we're using to make passes

00:11:33.590 --> 00:11:33.590
recognizable to users in Passbook.

00:11:34.160 --> 00:11:35.700
So how do you choose a style?

00:11:35.700 --> 00:11:40.410
Well, it's just a matter of choosing or
putting in a top-level key that

00:11:40.690 --> 00:11:42.930
points to a dictionary of items.

00:11:42.930 --> 00:11:46.460
And in this case,
we want to define a coupon.

00:11:46.460 --> 00:11:48.960
So our top-level key is just coupon.

00:11:48.960 --> 00:11:50.700
It could have been boarding
pass or store card.

00:11:50.700 --> 00:11:53.510
And that points to an array of fields.

00:11:53.900 --> 00:12:12.750
All right, so let's take a moment and
talk about what a field is.

00:12:12.750 --> 00:12:12.750
So a field, which I've highlighted here,
is the smallest and kind of most

00:12:12.750 --> 00:12:12.750
basic element of information that's
visible on the pass that you,

00:12:12.750 --> 00:12:12.750
as the pass provider, get to define.

00:12:13.250 --> 00:12:17.900
Each Passbook has a key
that uniquely identifies it,

00:12:17.900 --> 00:12:20.600
as well as a label.

00:12:20.600 --> 00:12:24.420
In this case, the label is San Francisco,
and then a value,

00:12:24.450 --> 00:12:26.790
which in this case is SFO.

00:12:27.160 --> 00:12:30.950
Every field has a default text alignment,
depending on the pass

00:12:30.950 --> 00:12:32.490
style that's chosen.

00:12:32.500 --> 00:12:35.680
But you can choose to
override this if you want to.

00:12:35.680 --> 00:12:40.050
You can set a different text alignment
if it makes sense for you to,

00:12:40.060 --> 00:12:42.580
say,
center justify the label and the value.

00:12:42.580 --> 00:12:46.320
And you can also provide dates as well.

00:12:46.320 --> 00:12:50.260
And if you do that,
then you can set a date and

00:12:50.260 --> 00:12:52.900
a time style on that value.

00:12:53.080 --> 00:12:58.260
And we will then format the date
correctly for the locale that

00:12:58.260 --> 00:12:59.780
the user is viewing the pass in.

00:13:02.020 --> 00:13:06.280
Now, every field is part of a
larger group of fields.

00:13:06.380 --> 00:13:11.460
So in this case,
we've got this field which signifies

00:13:11.460 --> 00:13:13.040
the gate on the top of the pass.

00:13:13.040 --> 00:13:16.460
And that gate field is part
of the header field section.

00:13:16.460 --> 00:13:19.010
And there's usually only one of these,
and it appears at the top.

00:13:19.060 --> 00:13:22.630
And it's also the only one that's
visible when the pass is in the stack.

00:13:23.500 --> 00:13:27.120
Then we have the set of primary fields,
and the location and

00:13:27.250 --> 00:13:30.210
size of these fields,
these groups of fields,

00:13:30.210 --> 00:13:32.280
varies on a per-style basis.

00:13:32.280 --> 00:13:34.660
So in the boarding pass,
this is where the primary fields go.

00:13:34.660 --> 00:13:40.500
And the primary fields usually signify
the most visible or the largest pieces of

00:13:40.500 --> 00:13:45.610
text that are on the front of the pass,
the most prominent fields.

00:13:47.190 --> 00:13:51.240
The next is the secondary fields,
so those of secondary importance.

00:13:51.360 --> 00:13:54.980
And then passes have a different
number of optional auxiliary

00:13:54.980 --> 00:13:56.480
fields as well that you can define.

00:13:56.530 --> 00:13:58.920
And those are always a little bit small,
and you can fit a few more

00:13:58.920 --> 00:14:01.370
of them on in the pass.

00:14:02.230 --> 00:14:05.420
So here's an example of how
we might define these fields.

00:14:05.520 --> 00:14:08.630
So in this case,
we want to set up a boarding pass.

00:14:08.790 --> 00:14:13.260
We set a top-level key of
boarding pass that has a set

00:14:13.260 --> 00:14:14.600
of information inside of it.

00:14:14.810 --> 00:14:19.320
And we'd like to set up this gate
field on the top of our pass.

00:14:19.350 --> 00:14:23.850
So it's just a header field array.

00:14:23.920 --> 00:14:27.880
And we define the key, the label,
and the value.

00:14:28.050 --> 00:14:30.540
And then we also define
this change message as well,

00:14:30.540 --> 00:14:33.770
which was up on the slide earlier,
but I didn't talk about it.

00:14:33.960 --> 00:14:40.560
So the change message is useful in
the context when the pass is updated.

00:14:40.590 --> 00:14:43.700
Now, if your pass is updated
through a push notification or

00:14:43.700 --> 00:14:48.560
through our Objective-C API,
then you can signal us to notify

00:14:48.560 --> 00:14:53.470
the user that a field changed by
including a change message in the field.

00:14:53.610 --> 00:14:56.000
So what we do is we
check the previous pass,

00:14:56.160 --> 00:14:59.250
and we check the new pass,
and we take a look at what's changed.

00:14:59.450 --> 00:15:02.380
And if anything's different--
if the field has changed and

00:15:02.380 --> 00:15:06.700
it has a change message to it,
we will show a banner notification

00:15:06.700 --> 00:15:10.630
with your message inside of it saying,
hey, your gate changed.

00:15:10.760 --> 00:15:12.970
And so that's just a text
string with a placeholder,

00:15:13.060 --> 00:15:17.040
and the placeholder is replaced
by the value of the new field.

00:15:18.570 --> 00:15:21.530
All right, so I'm also going to put
in an auxiliary field here.

00:15:21.750 --> 00:15:23.650
And the reason I wanted to
show you this was just to show

00:15:23.650 --> 00:15:25.040
you how you can define a date.

00:15:25.080 --> 00:15:27.980
So here again,
we're defining the departure field.

00:15:27.980 --> 00:15:32.520
And we set the value to
a W3C formatted date.

00:15:32.690 --> 00:15:36.400
So JSON doesn't really define
a structured date format.

00:15:36.470 --> 00:15:39.580
And so we've chosen
to use the W3C format.

00:15:40.620 --> 00:15:44.580
And you can tell us how to format
this by using the date and time style.

00:15:44.810 --> 00:15:48.420
So in this case, we want this field to
just show a short time.

00:15:48.420 --> 00:15:51.740
So we set the date style to
PK date style none and the time

00:15:51.740 --> 00:15:53.860
style to PK date style short.

00:15:53.880 --> 00:15:58.270
And that will allow us to format
the time in the most brief format

00:15:58.270 --> 00:16:00.990
available for the current locale.

00:16:02.550 --> 00:16:06.260
Okay, there's one other key that
I wanted to talk to you about,

00:16:06.310 --> 00:16:09.340
and it's specific to boarding passes,
and it's the transit-type key.

00:16:09.340 --> 00:16:11.930
You may have remembered on
the previous slide there was

00:16:11.930 --> 00:16:14.940
a picture of this airplane,
but obviously boarding passes

00:16:14.940 --> 00:16:17.820
are useful for more modes of
transportation than just flying,

00:16:17.820 --> 00:16:18.190
right?

00:16:18.290 --> 00:16:21.500
So you can specify a
couple of different kinds,

00:16:21.500 --> 00:16:26.370
and we can draw a train there or a
boat there or whatever you specify.

00:16:26.700 --> 00:16:28.270
Okay, so that's fields.

00:16:28.400 --> 00:16:32.700
Let's take a moment and talk about what
color options are available to you.

00:16:32.800 --> 00:16:36.700
So there are a couple of handles that you
have to control the color on the pass.

00:16:36.700 --> 00:16:40.110
And the first and obviously the most
obvious is the background color,

00:16:40.110 --> 00:16:40.700
right?

00:16:40.700 --> 00:16:42.700
So in this case, we've chosen brown.

00:16:42.700 --> 00:16:45.870
We'll take the background color that
you specify and we'll apply a mild

00:16:45.870 --> 00:16:47.700
gradient to it and a little shine.

00:16:47.700 --> 00:16:53.190
And that's what we then use as
the background color of the pass.

00:16:53.870 --> 00:16:55.860
You can also specify
the foreground color.

00:16:55.860 --> 00:16:57.880
The default for this
is usually just white,

00:16:58.070 --> 00:17:01.840
but you can set it to whatever
works well for the background

00:17:01.840 --> 00:17:03.800
color that you've chosen.

00:17:03.840 --> 00:17:09.200
And then we'll also take the
background color and try and figure

00:17:09.200 --> 00:17:13.050
out a good color for your labels,
too, a color that we think works

00:17:13.130 --> 00:17:15.160
well with your background color.

00:17:15.200 --> 00:17:17.680
But if you find that you don't
really like the option that's

00:17:17.750 --> 00:17:20.860
been chosen for you by default,
you can also override this

00:17:20.940 --> 00:17:22.910
by specifying a label color.

00:17:24.940 --> 00:17:27.620
Okay, so what other things can
you specify in your pass?

00:17:27.760 --> 00:17:29.840
Well, of course,
there's logos and images, too.

00:17:29.840 --> 00:17:34.280
So the first is the
logo and the logo text.

00:17:34.430 --> 00:17:38.630
Now, mostly in terms of images,
it's just a matter of dropping

00:17:39.090 --> 00:17:42.640
an image that's named correctly
into your pass package,

00:17:42.650 --> 00:17:47.180
and we will use it accordingly,
depending on how it's named.

00:17:47.180 --> 00:17:50.480
So this one is logo.ping,
or logo at 2x.ping,

00:17:50.530 --> 00:17:54.690
and it's the coffee cup that's
shown in the top left-hand corner.

00:17:54.690 --> 00:17:57.960
In this case, it's just a small,
iconic logo.

00:17:57.960 --> 00:18:01.050
And so because of that,
because it doesn't contain

00:18:01.050 --> 00:18:04.260
any branding inside of it,
we can also use logo text,

00:18:04.260 --> 00:18:07.040
which is specified in
your pass.json file,

00:18:07.050 --> 00:18:10.760
and we'll draw some nice text at the top,
depending on what you

00:18:10.760 --> 00:18:12.640
tell us to draw up there.

00:18:12.640 --> 00:18:15.200
And this is actually the way
that we recommend doing it.

00:18:15.200 --> 00:18:16.880
We recommend using an iconic logo.

00:18:17.300 --> 00:18:19.280
And then adding --
using the logo text to,

00:18:19.340 --> 00:18:21.540
you know,
put the name of the pass or your

00:18:21.540 --> 00:18:23.800
company name or what have you.

00:18:24.860 --> 00:18:26.980
The next is the background image.

00:18:26.980 --> 00:18:30.280
And the background image is kind of
an interesting one because it can be

00:18:30.280 --> 00:18:31.630
used in a couple of different ways.

00:18:31.640 --> 00:18:37.440
So in this case, on the store card,
we're using it as this strip image that

00:18:37.490 --> 00:18:42.200
gets put up on the top half of the pass,
which has kind of a nice effect.

00:18:42.290 --> 00:18:45.500
But if this were to be an event ticket,
then it would be treated

00:18:45.500 --> 00:18:47.140
a little bit differently.

00:18:48.160 --> 00:18:53.010
We would then apply a blur to it and set
it as the background to the whole pass,

00:18:53.120 --> 00:18:55.970
which gives us a really cool
event ticket look to it.

00:18:56.060 --> 00:18:58.830
And it's pretty neat.

00:18:58.840 --> 00:19:03.410
So you can also specify a thumbnail
image as well that we'll use that has

00:19:03.450 --> 00:19:06.320
meaning on certain pass styles as well.

00:19:06.320 --> 00:19:08.700
In this case,
we've just chosen the clear version

00:19:08.700 --> 00:19:10.320
of the same background image.

00:19:14.020 --> 00:19:16.960
Okay, so we've talked a lot about
what's on the front of passes.

00:19:16.960 --> 00:19:17.810
How about the back?

00:19:17.920 --> 00:19:19.080
What's the back all about?

00:19:19.080 --> 00:19:22.890
So, on the back of the pass,
at the top of your pass is

00:19:23.250 --> 00:19:26.990
usually a settings section,
and you don't have any control over this.

00:19:27.380 --> 00:19:31.520
These are settings that we put into
the pass to allow the user to control

00:19:31.520 --> 00:19:35.560
the notification settings and whether
your pass is shown on the lock screen.

00:19:35.560 --> 00:19:42.000
But below that is a set of pass fields
or back fields that you can provide,

00:19:42.090 --> 00:19:42.740
too.

00:19:43.510 --> 00:19:47.400
So, right alongside your header
fields and your primary fields,

00:19:47.450 --> 00:19:48.660
you can specify back fields.

00:19:48.660 --> 00:19:52.570
And this is really useful because
we allow an arbitrary number of back

00:19:52.570 --> 00:19:54.550
fields on the back of your pass.

00:19:54.560 --> 00:19:58.400
And what will happen is, as you add more,
we'll just add a scroll view so

00:19:58.420 --> 00:20:00.450
that you can scroll through them.

00:20:01.850 --> 00:20:06.150
This is helpful if you have fields that
are important enough to be on your pass,

00:20:06.470 --> 00:20:10.520
but don't necessarily need that
prime placement on the front of it.

00:20:10.520 --> 00:20:13.760
Things like terms and conditions,
which may be kind of long.

00:20:13.760 --> 00:20:17.350
And so it's a really
useful thing to have.

00:20:17.880 --> 00:20:21.590
There's one other thing that I want
to tell you about that you can

00:20:21.660 --> 00:20:26.750
insert onto the back of your pass,
and it has to do with your applications.

00:20:27.500 --> 00:20:31.270
So it's important to remember
that passes can exist completely

00:20:31.400 --> 00:20:35.290
independently of third-party,
of App Store applications,

00:20:35.290 --> 00:20:37.500
which we think is an awesome feature.

00:20:37.500 --> 00:20:39.730
It means that these can
be distributed around,

00:20:39.790 --> 00:20:42.930
they can be given to users,
and they don't necessarily have

00:20:42.930 --> 00:20:46.900
to have a third-party application
associated with them to be useful.

00:20:47.930 --> 00:20:51.240
However, I mean,
we recognize that this is a great place,

00:20:51.260 --> 00:20:55.540
it's a great vector for you to
direct your user at your application,

00:20:55.580 --> 00:20:59.750
which may have a bunch of utility
and uses that aren't covered by

00:20:59.840 --> 00:21:02.320
Passbook that you could be providing.

00:21:02.320 --> 00:21:07.520
So we wanted to give a nice spot to allow
you to send users to your application,

00:21:07.520 --> 00:21:12.010
and they'll be able to open your app
directly from the back of their pass

00:21:12.480 --> 00:21:17.640
and even download it directly there,
which is super cool.

00:21:17.660 --> 00:21:18.040
It's super useful.

00:21:18.040 --> 00:21:21.970
And the way that this works is that
you give us an array of numbers,

00:21:21.970 --> 00:21:25.310
and this is your Atom ID,
you may be familiar with that,

00:21:25.320 --> 00:21:27.120
or your iTunes Store ID.

00:21:27.120 --> 00:21:32.190
And we'll take the first one that
matches for the device that you're on,

00:21:32.190 --> 00:21:35.930
and we'll show that in a
view on the top of the pass.

00:21:36.020 --> 00:21:39.330
Now, you notice I'm not showing it here,
it's because it's not

00:21:39.330 --> 00:21:42.820
available yet in Seed 1,
but it will be, this feature will pop up

00:21:42.820 --> 00:21:44.400
in a forthcoming Seed.

00:21:47.080 --> 00:21:48.990
Okay, so that's Passbacks.

00:21:48.990 --> 00:21:51.540
Now let's talk a little
bit about barcodes,

00:21:51.540 --> 00:21:54.870
which is basically what we're
trying to dress up here,

00:21:54.900 --> 00:21:55.230
right?

00:21:55.240 --> 00:22:00.760
So we support three types
of barcodes in Passbook.

00:22:00.790 --> 00:22:04.980
We support PDF417, Aztec, and QR.

00:22:04.980 --> 00:22:08.870
Now, if you know anything about barcodes,
you probably understand that

00:22:08.870 --> 00:22:10.530
these are all 2D formats.

00:22:11.470 --> 00:22:14.800
So we don't support 1D
formats in Passbook.

00:22:14.950 --> 00:22:17.750
And let me just back up a little
bit and kind of explain to you

00:22:17.760 --> 00:22:21.400
what's the difference between a 1D
format and a 2D formatted barcode.

00:22:21.400 --> 00:22:23.450
I certainly didn't know before
I started working on this.

00:22:23.480 --> 00:22:28.180
So a 1D formatted barcode is the kind
of barcode that you're used to seeing,

00:22:28.180 --> 00:22:33.340
like, on your grocery store items or,
you know, on merchandise that you buy.

00:22:33.340 --> 00:22:37.640
It's the vertical black stripes,
kind of the zebra stripes, right?

00:22:37.640 --> 00:22:42.550
Now, an interesting thing about 1D
barcodes is that... They're usually,

00:22:42.550 --> 00:22:45.530
not always,
but usually scanned by technology

00:22:45.530 --> 00:22:47.470
involving laser scanners.

00:22:47.480 --> 00:22:50.670
It turns out that laser
scanners really don't work too

00:22:50.670 --> 00:22:52.600
well on a backlit LCD screen.

00:22:52.600 --> 00:22:56.780
So if you use a 2D barcode,
that requires a different kind of

00:22:56.780 --> 00:22:59.220
technology to read the barcode.

00:22:59.220 --> 00:23:01.680
And what it needs is a
digital imaging device,

00:23:01.680 --> 00:23:04.180
which works a little
bit more like a camera.

00:23:04.180 --> 00:23:07.540
And it turns out that digital
imaging devices work really

00:23:07.540 --> 00:23:09.590
well for scanning LCD screens.

00:23:09.600 --> 00:23:14.280
And so we... We wanted to make
sure that we would ensure success

00:23:14.280 --> 00:23:17.350
for our users when they go out
there and scan their devices.

00:23:17.420 --> 00:23:24.050
And so we only support 2D barcodes
because if you put a 1D barcode on

00:23:24.050 --> 00:23:27.260
your pass and then the user goes and
tries to scan it with a laser scanner,

00:23:27.260 --> 00:23:28.750
it's not going to work too well.

00:23:28.780 --> 00:23:30.820
So 2D barcodes are supported.

00:23:30.820 --> 00:23:33.380
PDF 417, Aztec, and QR.

00:23:33.380 --> 00:23:37.420
And we think that that covers basically
all the bases for the different 2D

00:23:37.420 --> 00:23:39.600
barcode readers that are out there.

00:23:39.600 --> 00:23:41.910
To be honest,
most of the ones that... We've looked

00:23:41.970 --> 00:23:43.720
at support all of these formats.

00:23:43.780 --> 00:23:47.680
But we figure these three formats are
enough to cover pretty much anyone.

00:23:50.100 --> 00:23:53.460
So the way it works is that you provide
us the message in the form of a string

00:23:53.560 --> 00:23:56.740
that you'd like us to put in the barcode,
and you tell us how you'd

00:23:56.740 --> 00:23:59.320
like us to encode it,
and then we draw the barcode.

00:23:59.320 --> 00:24:04.020
Now, one interesting little thing is that
you can also provide optional alt

00:24:04.020 --> 00:24:07.840
text that goes under the barcode,
and that's shown here.

00:24:08.040 --> 00:24:11.920
So some merchants have the requirement
that if they're at the point of

00:24:11.940 --> 00:24:15.940
sale and the register goes down,
or the scanning device goes down,

00:24:15.940 --> 00:24:18.820
or the scan isn't being successful,
that they have the opportunity to

00:24:18.920 --> 00:24:20.740
just punch in the number manually.

00:24:20.740 --> 00:24:22.660
And so this is useful for that.

00:24:22.660 --> 00:24:25.590
You can use alt text to put in
a message below the barcode,

00:24:25.590 --> 00:24:28.540
which may be useful in the
case that it doesn't scan.

00:24:28.540 --> 00:24:32.520
And it doesn't have to be the
same as the message that's

00:24:32.600 --> 00:24:35.100
encoded in the barcode itself.

00:24:35.140 --> 00:24:38.000
All right, so let's take a quick look.

00:24:38.040 --> 00:24:40.400
Let's look at an example of how
you create one of these barcodes.

00:24:40.420 --> 00:24:44.070
The first thing you do is set
up the top-level barcode key,

00:24:44.070 --> 00:24:47.410
and that's got a dictionary
of items inside of it.

00:24:47.440 --> 00:24:49.080
You set message encoding.

00:24:49.080 --> 00:24:54.380
So in this case, we're using ISO 8859-1,
which is otherwise known as a Latin one.

00:24:54.380 --> 00:24:57.830
It turns out that this is a very
common encoding for barcodes,

00:24:57.910 --> 00:25:00.830
so chances are you're
probably going to use this.

00:25:00.960 --> 00:25:03.530
But obviously,
it's up to you to know what your scanning

00:25:03.530 --> 00:25:07.320
infrastructure is like and what kind
of encodings your scanners support.

00:25:07.320 --> 00:25:08.020
So let's go ahead and do that.

00:25:08.040 --> 00:25:10.790
So you can provide us with a
number of different encodings.

00:25:10.800 --> 00:25:14.740
And then you set the message that
you'd like to show in the barcode.

00:25:14.740 --> 00:25:18.070
You can provide optional alt text,
and then you tell us the format of

00:25:18.280 --> 00:25:23.160
the code that you'd like us to draw,
and we'll draw either PDF 417, ASTEC, QR.

00:25:23.160 --> 00:25:26.060
In this case, we're drawing a PDF 417.

00:25:28.230 --> 00:25:30.360
OK.

00:25:30.500 --> 00:25:34.840
So now I want to take just a quick
moment again to talk about relevancy,

00:25:34.900 --> 00:25:38.760
which is, again, what we think is really
interesting about Passbook.

00:25:38.880 --> 00:25:42.770
And relevancy allows you to put
your passes on the user's lock

00:25:42.840 --> 00:25:48.100
screen at a time or a location
that's meaningful to them.

00:25:48.150 --> 00:25:49.240
So how does this work?

00:25:49.370 --> 00:25:51.750
Well, as I said,
you can do it via location.

00:25:51.830 --> 00:25:57.500
And the way this works is that when
the user wakes up their device,

00:25:57.500 --> 00:26:02.560
we do a really inexpensive location
lookup right there and then if

00:26:02.560 --> 00:26:07.330
they have passes in their library
that have location information.

00:26:07.340 --> 00:26:10.770
And we take a look at the different
passes in their library and look at

00:26:10.770 --> 00:26:13.220
whether they have location information.

00:26:13.280 --> 00:26:17.020
And we do a matching to try and figure
out if we're within a certain radius

00:26:17.230 --> 00:26:20.900
of the locations provided on the pass.

00:26:20.900 --> 00:26:25.890
You can provide up to ten coordinates
of interest in your pass.json.

00:26:25.890 --> 00:26:29.570
Now, this is a number that we've chosen.

00:26:29.870 --> 00:26:33.720
We're really interested in feedback
about what numbers are good for you

00:26:33.770 --> 00:26:35.760
and how many we need to support.

00:26:35.760 --> 00:26:38.080
But obviously,
we've got a lot of considerations

00:26:38.080 --> 00:26:40.910
to balance in terms of power
and performance issues,

00:26:40.910 --> 00:26:41.500
right?

00:26:41.600 --> 00:26:43.550
So talk to us in the labs about this.

00:26:43.550 --> 00:26:45.950
We're really interested in your feedback.

00:26:46.100 --> 00:28:12.200
[Transcript missing]

00:28:13.180 --> 00:28:17.740
The other way you can make your pass
relevant is by setting a relevant date.

00:28:17.740 --> 00:28:21.200
And obviously really good for
time-sensitive applications,

00:28:21.200 --> 00:28:24.060
like boarding passes and event tickets.

00:28:24.060 --> 00:28:27.500
So you provide a single date
of relevancy in your pass.json.

00:28:27.500 --> 00:28:31.800
And once again here,
the window around that time is tied

00:28:31.800 --> 00:28:35.620
to the style of pass that you use.

00:28:36.270 --> 00:28:39.120
So here's an example of how you
might set a relevant location

00:28:39.140 --> 00:28:41.160
and a relevant date on your pass.

00:28:41.160 --> 00:28:48.020
In this case, locations key points to
an array of coordinates,

00:28:48.020 --> 00:28:53.990
and then a relevant date, which again,
that familiar W3C formatted date.

00:28:55.660 --> 00:28:58.840
Okay, so that's how you make your passes
relevant on the user's lock screen.

00:28:58.840 --> 00:29:00.460
Again, a really cool feature.

00:29:00.460 --> 00:29:02.860
Puts your pass in front of
the user when they need it.

00:29:02.930 --> 00:29:05.280
Locations and dates are limited.

00:29:05.280 --> 00:29:09.890
They will be limited in some way in terms
of the numbers that you can provide,

00:29:09.890 --> 00:29:13.770
but it's really important to
understand that you can update them.

00:29:14.260 --> 00:29:19.060
So, come back to session two,
and we'll tell you how to update

00:29:19.060 --> 00:29:24.690
your passes with push notifications
and through our PassKit API so that

00:29:24.800 --> 00:29:28.470
you can start to really think about
interesting things that you might be

00:29:28.470 --> 00:29:31.490
able to do in your app's UI to give
the user some control over that,

00:29:31.530 --> 00:29:36.080
or maybe even set those parameters for
them based on intelligence that you

00:29:36.190 --> 00:29:40.770
might have about what they're doing
and how they're using their passes,

00:29:40.770 --> 00:29:41.500
right?

00:29:44.790 --> 00:29:48.320
Okay, so one little word about
localization as well.

00:29:48.320 --> 00:29:51.380
Obviously,
passes can be fully localized in any of

00:29:51.410 --> 00:29:55.450
the languages that the platform supports,
and this works a whole lot

00:29:55.450 --> 00:29:57.200
like app localization works.

00:29:57.740 --> 00:30:01.750
So in your pass.json, for example,
you've got a field defined,

00:30:01.750 --> 00:30:04.280
and the value is, you know, ohmystars.

00:30:04.280 --> 00:30:06.820
You want that translated into French.

00:30:06.930 --> 00:30:10.870
You set up a French.lproj
folder inside your file package,

00:30:10.870 --> 00:30:15.270
create a pass.strings file,
set that value from your pass.json

00:30:15.370 --> 00:30:19.930
as the key in your pass.strings file,
and then your translation for that is

00:30:19.930 --> 00:30:22.300
then the value in your pass.strings file.

00:30:22.300 --> 00:30:25.390
And we take care of substituting
the right one in to your pass when

00:30:25.390 --> 00:30:27.220
it's shown in a particular locale.

00:30:27.620 --> 00:30:28.620
Thank you.

00:30:29.720 --> 00:30:33.540
All right, so that's the nuts and bolts
of how you create a pass.

00:30:33.540 --> 00:30:36.300
It's pretty easy,
but I want to invite Ken up to

00:30:36.300 --> 00:30:38.350
come and give you a demo of how
to do it from front to back.

00:30:38.510 --> 00:30:40.770
Please welcome him.

00:30:44.510 --> 00:30:46.890
Thank you.

00:30:46.920 --> 00:30:51.410
So let us suppose,
for the purpose of this demo,

00:30:51.540 --> 00:30:55.240
that we all work for Oceanic Airlines.

00:30:55.240 --> 00:30:58.340
They somehow got past the five
person limit for the conference.

00:30:58.450 --> 00:31:02.410
And we just went to the keynote,
and we're like, this is amazing.

00:31:02.420 --> 00:31:04.800
We really need to start doing this,
because what we're doing

00:31:04.800 --> 00:31:09.530
right now is terrible,
and we need to fix it.

00:31:09.750 --> 00:31:12.380
So if we're in that situation,
and we're super excited,

00:31:12.380 --> 00:31:13.560
but what do we start to do?

00:31:13.560 --> 00:31:16.660
How do we actually go about
making a pass just from scratch?

00:31:16.680 --> 00:31:18.440
Or where do we start?

00:31:18.530 --> 00:31:21.340
And the answer for that is
that you should start by

00:31:21.340 --> 00:31:24.280
downloading the sample materials,
because you can basically copy

00:31:24.280 --> 00:31:25.620
it and change a bunch of stuff.

00:31:25.630 --> 00:31:28.080
And that's what we're going to show here.

00:31:28.200 --> 00:31:32.850
So if you go and search on
developer.apple.com for the materials

00:31:32.850 --> 00:31:35.710
associated with this session,
you'll find the stuff that I'm

00:31:35.710 --> 00:31:37.100
going to be working with here.

00:31:37.130 --> 00:31:40.510
Or if you're watching the video later,
just go search the

00:31:40.590 --> 00:31:43.560
sample code for passbook,
and you should be able to find it.

00:31:43.700 --> 00:31:48.040
But so one of the things you're going
to see is you're going to see a pass--

00:31:48.060 --> 00:31:50.060
these sample passes we give you.

00:31:50.070 --> 00:31:52.730
And if you click in there,
what you're going to see is

00:31:52.730 --> 00:31:55.350
basically what we were just
showing you a minute ago,

00:31:55.360 --> 00:32:00.150
a bunch of different directories,
which are the blown out contents

00:32:00.150 --> 00:32:03.660
of these pass packages that we
were just looking on the board.

00:32:03.700 --> 00:32:09.310
And then also, we give the fully zipped
up signed version of that,

00:32:09.390 --> 00:32:12.490
which is directly
something that you can--

00:32:12.950 --> 00:32:14.160
Put into Passbook a pass.

00:32:14.360 --> 00:32:14.860
That is a pass.

00:32:14.960 --> 00:32:15.940
The PK Pass is the pass.

00:32:15.940 --> 00:32:19.300
So if we're in this situation,
what's the first thing we're going to do?

00:32:19.300 --> 00:32:21.000
We need to figure out
which one to start from,

00:32:21.000 --> 00:32:22.880
which one to copy and start tweaking.

00:32:22.880 --> 00:32:25.900
And let's suppose that we're
not really very bright.

00:32:25.900 --> 00:32:28.600
So we don't really know if,
even though we're an airline,

00:32:28.600 --> 00:32:30.490
we're not sure if we want a
coupon or a boarding pass.

00:32:30.560 --> 00:32:33.370
So we decide to go and
look at them on the phone.

00:32:33.380 --> 00:32:36.850
And to do that, what we're going to do is
just grab all these guys,

00:32:36.920 --> 00:32:39.560
the PK Passes,
and email them to yourself.

00:32:39.820 --> 00:32:42.640
So let's suppose we do that.

00:32:42.800 --> 00:32:43.800
Thank you.

00:32:46.000 --> 00:32:49.690
So we have this email that now
has showed up on our device,

00:32:49.690 --> 00:32:52.440
and it has these five
different passes on it.

00:32:52.440 --> 00:32:54.900
And we give you one sample in
each of the different styles.

00:32:55.000 --> 00:33:00.390
So, you know, they look pretty much like
Glen was just showing you.

00:33:00.520 --> 00:33:02.780
And obviously in our case,
the one that we're really going

00:33:02.780 --> 00:33:03.640
to want is the boarding pass.

00:33:03.640 --> 00:33:07.630
So we go back.

00:33:07.820 --> 00:33:11.650
and we say, all right,
I'm going to take that-- did I get it?

00:33:11.710 --> 00:33:12.200
Yep.

00:33:12.200 --> 00:33:14.420
I'm going to take that
boarding pass directory.

00:33:14.520 --> 00:33:17.420
I'm going to copy it and duplicate it.

00:33:17.570 --> 00:33:18.600
So now we have that.

00:33:18.620 --> 00:33:20.000
And it has the pass.json.

00:33:20.000 --> 00:33:23.500
Then it has a bunch of art.

00:33:23.900 --> 00:33:26.860
And then I have to go and I have
to plead with my designer to draw

00:33:26.860 --> 00:33:31.000
me some artwork for this pass,
which I have-- which I get.

00:33:31.160 --> 00:33:33.660
Or if--whatever.

00:33:33.750 --> 00:33:36.300
But then I do notice one
thing that my designer did,

00:33:36.410 --> 00:33:40.250
which is that my designer drew a
version of the logo that contains

00:33:40.290 --> 00:33:43.700
all of the name of our-- you know,
all of Oceanic Airlines,

00:33:43.810 --> 00:33:46.960
whereas the boarding pass that
was here didn't have that.

00:33:46.960 --> 00:33:50.500
The logo just had just this
fin from the plane on it.

00:33:50.580 --> 00:33:52.570
So we're going to have to sort
of account for that difference

00:33:52.700 --> 00:33:57.000
when we are doing our pass.

00:33:57.000 --> 00:33:59.100
Let's just go ahead and rename
it so we don't get confused.

00:33:59.120 --> 00:34:02.400
And also 'cause I have a script
that's looking for that name.

00:34:02.580 --> 00:34:05.500
First,
let's go ahead and change out that art.

00:34:05.700 --> 00:34:08.210
So we drop in the art.

00:34:09.100 --> 00:34:10.880
Okay, looking better already.

00:34:10.880 --> 00:34:14.950
And then we go to change this pass.json
file that we were just talking about.

00:34:15.070 --> 00:34:16.110
It looks like this.

00:34:16.110 --> 00:34:17.280
Just a big JSON file.

00:34:17.280 --> 00:34:19.130
And we need to make this into ours.

00:34:19.250 --> 00:34:22.560
So we're just going to do sort of
the least amount that we can here.

00:34:22.560 --> 00:34:25.020
I'm going to change the
pass type identifier.

00:34:25.020 --> 00:34:27.770
We'll be talking a little
bit more about these later,

00:34:27.880 --> 00:34:30.050
but again,
this is sort of like the class.

00:34:30.050 --> 00:34:33.070
All boarding passes that Oceanic
puts out are going to have

00:34:33.070 --> 00:34:34.660
the same pass type identifier.

00:34:35.040 --> 00:34:37.140
They'll all have
different serial numbers,

00:34:37.160 --> 00:34:39.080
but we'll leave that out.

00:34:39.100 --> 00:34:40.920
So we'll leave that for now.

00:34:41.160 --> 00:34:41.760
Let's see.

00:34:41.760 --> 00:34:43.170
We are not Oceanic Airways.

00:34:43.260 --> 00:34:45.100
Sorry, we are Oceanic Airways.

00:34:45.120 --> 00:34:46.170
So let's change that.

00:34:46.220 --> 00:34:49.740
And the reason I'm fiddling with
this is because this is where the

00:34:49.740 --> 00:34:51.820
text came from that we see in mail.

00:34:51.820 --> 00:34:52.660
I'll show you again.

00:34:52.660 --> 00:34:54.200
So that would be wrong
if I didn't change it.

00:34:54.290 --> 00:34:58.100
This logo text is the additional
text that goes next to the logo,

00:34:58.180 --> 00:35:02.230
and we don't want any because our
logo is already built into the art.

00:35:02.240 --> 00:35:03.610
So we remove that.

00:35:03.790 --> 00:35:06.680
We have different colors
from our designer.

00:35:06.680 --> 00:35:08.820
He wanted white foreground.

00:35:09.100 --> 00:35:09.160
So we're going to go ahead and do that.

00:35:09.160 --> 00:35:09.230
And we're going to go ahead and do that.

00:35:09.230 --> 00:35:09.340
We have different colors
from our designer.

00:35:09.340 --> 00:35:09.560
He wanted white foreground.

00:35:09.560 --> 00:35:09.560
So we're going to go ahead and do that.

00:35:09.560 --> 00:35:09.560
We have different colors
from our designer.

00:35:09.560 --> 00:35:09.590
He wanted white foreground.

00:35:09.690 --> 00:35:11.160
And we need some kind
of background color.

00:35:11.210 --> 00:35:13.180
So we went with 42, 4, 8, 15, and 4.

00:35:13.180 --> 00:35:13.770
Let's do that.

00:35:13.770 --> 00:35:14.610
And that's pretty good.

00:35:14.710 --> 00:35:16.730
But just to give an example
of something else changing,

00:35:16.730 --> 00:35:18.010
let's say we wanted to add a field.

00:35:18.010 --> 00:35:20.380
So in our secondary fields right now,
we just have a passenger.

00:35:20.380 --> 00:35:21.220
So let's just copy that.

00:35:21.440 --> 00:35:22.520
And we'll make a boarding group.

00:35:22.550 --> 00:35:24.920
Change the key because
these have to be unique.

00:35:25.040 --> 00:35:31.730
So we went with 42, 4, 8, 15, and 4.

00:35:31.730 --> 00:35:34.620
Let's just copy that.

00:35:34.620 --> 00:35:38.930
And we'll make a boarding group.

00:35:39.410 --> 00:35:44.200
Change the key because
these have to be unique.

00:35:45.250 --> 00:35:47.500
and we'll say that our
boarding group is Premier.

00:35:47.560 --> 00:35:49.230
I don't actually know if that
makes sense as a boarding group,

00:35:49.350 --> 00:35:51.510
but we'll just go with it.

00:35:51.600 --> 00:35:53.940
And let's just say that
to make it look nice,

00:35:53.940 --> 00:35:56.090
we looked at it on the
device and we found,

00:35:56.090 --> 00:35:56.700
actually, you know what?

00:35:56.700 --> 00:36:01.130
We really want the text
to be right-aligned here.

00:36:02.160 --> 00:36:04.580
Which we do like that.

00:36:04.580 --> 00:36:05.000
OK.

00:36:05.550 --> 00:36:09.320
So now we are pretty much done,
at least if we're willing to make

00:36:09.320 --> 00:36:11.130
very small changes like this.

00:36:11.280 --> 00:36:15.220
So we need to sign it and zip
it up before we can actually

00:36:15.220 --> 00:36:17.120
look at it on the device.

00:36:17.290 --> 00:36:19.410
But that seems a little bit boring.

00:36:19.520 --> 00:36:23.520
So instead I'm going to
hit this do magic command.

00:36:23.520 --> 00:36:25.540
And now we have done magic.

00:36:25.660 --> 00:36:28.540
So now we have a fully
zipped and signed pass.

00:36:28.610 --> 00:36:32.010
And I promise to you that before the
end of this talk we'll explain what

00:36:32.270 --> 00:36:34.280
that command is and we'll go look at it.

00:36:34.280 --> 00:36:37.040
But this is now--

00:36:37.150 --> 00:36:47.590
In fact, if I just copy this and change
its extension to .zip so that the

00:36:47.590 --> 00:36:47.590
finder thinks it's a zip file,

00:36:48.770 --> 00:36:53.230
We can see if we blow that out,
it is indeed what we just made

00:36:53.540 --> 00:36:57.600
with a couple extra files,
which we'll be talking about.

00:36:57.670 --> 00:37:01.670
Okay, so get rid of that again,
and we grab this and email it to

00:37:01.690 --> 00:37:04.500
ourselves without noise this time.

00:37:04.550 --> 00:37:09.260
And we go back to our inbox,
and it looks like that.

00:37:09.370 --> 00:37:11.990
So we seem to have succeeded.

00:37:11.990 --> 00:37:11.990
Yay.

00:37:19.370 --> 00:37:21.530
So now there's one more thing
I want to talk about before

00:37:21.610 --> 00:37:23.750
I turn it over to Glen for now,
though I'll be coming back later,

00:37:23.750 --> 00:37:24.890
and that's a little bit of debugging.

00:37:24.900 --> 00:37:26.830
So let's say that we
screwed something up,

00:37:26.830 --> 00:37:27.260
okay?

00:37:27.260 --> 00:37:31.720
We're just editing this JSON file,
and it just seems the possibilities for

00:37:31.720 --> 00:37:34.220
messing something up seem quite large.

00:37:34.320 --> 00:37:36.560
So let's say we screwed
up something pretty dumb,

00:37:36.560 --> 00:37:41.410
which is that we typed serial number
instead of the proper spelling.

00:37:41.440 --> 00:37:42.800
Damn you homophones.

00:37:42.800 --> 00:37:47.120
So then we did this again.

00:37:47.120 --> 00:37:49.160
We zipped it back up and got the file.

00:37:49.300 --> 00:37:50.730
And emailed it to ourselves.

00:37:50.770 --> 00:37:52.230
And what is going to happen?

00:37:52.240 --> 00:37:54.800
So, uh...

00:37:56.770 --> 00:38:00.220
What we're going to see is that
when we try to look at that,

00:38:00.220 --> 00:38:02.530
it's just going to look like
a generic attachment in mail

00:38:02.870 --> 00:38:04.760
instead of looking correct.

00:38:04.820 --> 00:38:07.230
And then when we go back
to Xcode to debug this,

00:38:07.320 --> 00:38:08.470
how do we figure out what was wrong?

00:38:08.650 --> 00:38:11.280
Well,
if we look at the organizer and we look

00:38:11.410 --> 00:38:15.440
at the console for the device-- Oh.

00:38:15.450 --> 00:38:17.460
That's good, but it's in there somewhere.

00:38:17.460 --> 00:38:18.900
Just a second.

00:38:30.360 --> 00:38:30.780
There we go.

00:38:30.900 --> 00:38:31.140
Okay.

00:38:31.140 --> 00:38:34.480
Then we get this error message
which says that we are missing a

00:38:34.480 --> 00:38:38.690
required key from that dictionary,
which is the serial number.

00:38:38.830 --> 00:38:39.060
Okay?

00:38:39.060 --> 00:38:41.520
It's not going to complain about
the fact that there was some

00:38:41.680 --> 00:38:44.730
key it didn't recognize in there
because for future compatibility,

00:38:44.730 --> 00:38:46.220
maybe we will be adding keys.

00:38:46.220 --> 00:38:48.670
But it says there was a required
thing that wasn't in there.

00:38:48.670 --> 00:38:50.180
So this is your tip-off.

00:38:50.340 --> 00:38:52.350
So basically,
while you're trying to do this,

00:38:52.350 --> 00:38:55.910
you should go look at the Xcode organizer
and look at the console whenever things

00:38:55.910 --> 00:38:59.530
don't seem to be working right because
we log a lot of useful information.

00:39:00.610 --> 00:39:03.310
Maybe the last thing to note,
since it's along that line,

00:39:03.450 --> 00:39:04.470
is about testing.

00:39:04.490 --> 00:39:06.100
How should you test?

00:39:06.340 --> 00:39:09.360
You should, at least before you ship,
you always have to test on the device.

00:39:09.360 --> 00:39:10.340
Put it on the device.

00:39:10.410 --> 00:39:10.880
Show it.

00:39:11.160 --> 00:39:13.060
Generally, if you're making a pass,
you are also in charge

00:39:13.060 --> 00:39:14.600
of the other end of it,
the scanning.

00:39:14.600 --> 00:39:19.090
Go get a real scanner of yours and make
sure it works because different scanners,

00:39:19.090 --> 00:39:22.040
it should be fine,
but it's like not doing this is like

00:39:22.040 --> 00:39:26.300
trying to write a web page and never
actually looking at it in a browser.

00:39:26.300 --> 00:39:28.610
It's just not well advised.

00:39:29.220 --> 00:39:31.110
So, so that's it.

00:39:31.280 --> 00:39:33.140
So with that,
I will turn it back over to Glenn to

00:39:33.140 --> 00:39:35.820
talk about some of the stuff we skipped.

00:39:42.700 --> 00:39:46.140
All right, thanks, Ken.

00:39:46.140 --> 00:39:50.020
So we talked about how
to create your passes.

00:39:50.020 --> 00:39:52.740
Ken showed you how to do that.

00:39:52.960 --> 00:39:56.660
But he also talked about some
magic stuff that was happening,

00:39:56.700 --> 00:39:57.300
right?

00:39:57.340 --> 00:40:04.710
And so let's -- we've talked
about the contents of your passes.

00:40:05.750 --> 00:40:10.750
talked about pass.json, localizations,
icons, images.

00:40:11.290 --> 00:40:14.630
But we've kind of glossed
over this manifest.json and

00:40:14.630 --> 00:40:16.190
signature stuff at the bottom,
right?

00:40:16.200 --> 00:40:20.240
And this is really how we
cryptographically sign your pass.

00:40:20.300 --> 00:40:23.600
And so we're going to go into that
just a little bit in this session.

00:40:23.840 --> 00:40:26.260
So how do you deploy your passes?

00:40:26.270 --> 00:40:30.390
Well, you deploy your passes
by visiting the portal,

00:40:30.640 --> 00:40:34.440
and the first thing you need to do
is set up a new pass type identifier.

00:40:34.440 --> 00:40:38.700
And once you've done that,
that'll enable you to get the certificate

00:40:38.770 --> 00:40:43.040
that you need to actually create
your pass and sign it correctly.

00:40:43.040 --> 00:40:47.530
You sign and zip it up,
your pass package, to create the pass,

00:40:47.560 --> 00:40:51.080
and then what pops out of
that is the binary that you

00:40:51.080 --> 00:40:53.310
then deploy to your users.

00:40:53.900 --> 00:40:57.420
So if you've been poking around the
developer portal in the last couple days,

00:40:57.430 --> 00:40:59.920
you've probably noticed
this new section here.

00:41:00.140 --> 00:41:01.830
It's the Pass Type ID section.

00:41:01.840 --> 00:41:07.460
And this is where you go to visit to
set up your new pass type identifier.

00:41:07.580 --> 00:41:09.980
So you provide us with a
description and an identifier.

00:41:10.110 --> 00:41:14.420
And the only constraint is that
it has to begin with pass dot.

00:41:14.460 --> 00:41:16.390
The rest of the identifier
is kind of up to you,

00:41:16.400 --> 00:41:19.420
but obviously it has
to be globally unique.

00:41:19.600 --> 00:41:23.370
So we recommend using reverse DNS just
because that reduces the chances that

00:41:23.370 --> 00:41:26.180
you're going to have a name collision.

00:41:27.510 --> 00:41:31.120
Once you've got that,
then it's time to sign your pass.

00:41:31.250 --> 00:41:34.640
So there's a recipe to doing this,
and Eliza's going to talk about

00:41:34.640 --> 00:41:36.540
it a little bit in Part 2.

00:41:36.860 --> 00:41:40.530
But what we decided to do, as Ken said,
is give you some sample code

00:41:40.550 --> 00:41:42.700
in the session notes to allow
you to do this really quickly,

00:41:42.700 --> 00:41:46.040
because today's session is all
about how you create passes,

00:41:46.110 --> 00:41:46.540
right?

00:41:46.710 --> 00:41:48.730
And so we don't want you to have
to worry about this too much.

00:41:48.780 --> 00:41:52.700
So use the Sign Pass tool in
the included session resources.

00:41:52.760 --> 00:41:55.710
But again, understand that when
you deploy these things,

00:41:55.780 --> 00:41:58.930
the chances are, because they're signed,
they're going to be generated

00:41:58.930 --> 00:42:00.690
on a server somewhere usually.

00:42:00.840 --> 00:42:04.520
And so you're probably going to need
to roll your own implementation of

00:42:04.520 --> 00:42:06.940
this signing and zipping recipe.

00:42:07.210 --> 00:42:10.310
But not to worry,
we've provided you in source form

00:42:10.310 --> 00:42:12.490
the source of the Sign Pass tool.

00:42:12.500 --> 00:42:14.780
But in addition,
we've also given you a reference

00:42:14.780 --> 00:42:18.910
implementation that's in
Ruby that does it as well.

00:42:20.520 --> 00:42:25.150
So once you've created and signed
and you've got your PK Pass file,

00:42:25.160 --> 00:42:27.100
well, how do you get it to your users?

00:42:27.300 --> 00:42:28.970
There's three ways that you do this.

00:42:29.220 --> 00:42:31.380
The first is one that
you've seen already.

00:42:31.400 --> 00:42:33.760
You can send it as a mail attachment.

00:42:33.880 --> 00:42:38.400
So if you send it as a mail attachment,
if you're on iOS 6 and you're in mail,

00:42:38.460 --> 00:42:40.800
it'll recognize that
this is a PK Pass file,

00:42:40.800 --> 00:42:44.350
and it'll show you that UI that you
saw earlier and give you that ingestion

00:42:44.350 --> 00:42:49.900
experience where you can tap on it and
elect to add it to your pass library.

00:42:50.520 --> 00:42:54.930
The other way that you can do
it is by sending your users a

00:42:54.930 --> 00:42:59.900
URL or having them navigate in
your web page to a particular URL.

00:42:59.940 --> 00:43:05.420
And the way that this works is that as
long as you respond to the URL request

00:43:05.820 --> 00:43:09.560
with this particular MIME type,
then Safari will recognize that and

00:43:09.560 --> 00:43:15.260
again present that same pass-adding UI.

00:43:16.150 --> 00:43:19.440
Lastly,
you can use PassKit to do this using

00:43:19.440 --> 00:43:22.660
our Objective-C API in your application.

00:43:22.860 --> 00:43:25.360
And again,
it's a really simple -- it's just a

00:43:25.370 --> 00:43:28.870
matter of presenting a view controller,
and it will, again,

00:43:28.870 --> 00:43:34.140
present this opportunity for the user to
add your pass to their PassKit library.

00:43:34.590 --> 00:43:37.160
All right,
so I'm going to bring Ken back up one

00:43:37.160 --> 00:43:41.930
more time to just show you a few more
of the details of the magic stuff.

00:43:42.530 --> 00:43:44.290
Thank you, Glen.

00:43:47.110 --> 00:43:49.640
Okay, so now we're going to go into
what was going on when we

00:43:49.640 --> 00:43:51.220
were trying to sign this pass.

00:43:51.290 --> 00:43:54.840
As Glen was saying,
another item that's in the materials

00:43:54.840 --> 00:43:59.220
that we're giving in the sample
is this project called SignPass.

00:43:59.330 --> 00:44:01.960
and it serves two purposes.

00:44:01.980 --> 00:44:05.540
One is as a reference when you're trying
to go implement the algorithm yourself,

00:44:05.550 --> 00:44:08.910
because you might have to do that because
you're not in an Objective-C environment,

00:44:08.910 --> 00:44:10.880
like a server.

00:44:10.900 --> 00:44:13.700
Or when you're in the kind of situation
that we're pretending we are now,

00:44:13.700 --> 00:44:18.140
we just want to see a pass,
you can also just use it and just run it.

00:44:18.150 --> 00:44:20.560
And in fact, you can just run it yourself
on your server if you happen

00:44:20.560 --> 00:44:22.620
to have a Mac OS X server.

00:44:22.760 --> 00:44:25.920
It's just not super likely.

00:44:26.210 --> 00:44:29.380
So if I just hit Command-R,
so that's just running

00:44:29.380 --> 00:44:33.780
it with no arguments,
which produces this usage message.

00:44:33.810 --> 00:44:37.000
And it says signpass-p
is a path to the pass,

00:44:37.000 --> 00:44:39.460
and then some other stuff that
we're going to ignore for now.

00:44:39.480 --> 00:44:41.160
Though you can look
through the source code,

00:44:41.160 --> 00:44:42.500
of course, if you want to see what it is.

00:44:42.520 --> 00:44:46.640
OK, so having built that,
now I'm in a position to be able to

00:44:46.640 --> 00:44:48.760
show you what this do magic command was.

00:44:48.810 --> 00:44:50.640
It was not much.

00:44:50.670 --> 00:44:56.120
All it did was invoke signpass-p,
and then the path to--

00:44:56.120 --> 00:45:01.520
to the unsigned package,
to the contents of the package.

00:45:01.610 --> 00:45:03.800
OK,
now why wasn't there even a cert there?

00:45:03.940 --> 00:45:06.450
Well, there's a cert because
it's in my keychain.

00:45:06.720 --> 00:45:10.500
So let me show you how that works.

00:45:10.500 --> 00:45:11.680
We're going to go get a cert.

00:45:11.780 --> 00:45:16.620
So this is all documented,
and it's described both in documentation

00:45:16.620 --> 00:45:17.900
and in the text on the portal.

00:45:18.010 --> 00:45:21.020
But because it kind of bounces
around between different places,

00:45:21.020 --> 00:45:24.660
we thought it would be nice to just sort
of walk you through getting a profile.

00:45:24.660 --> 00:45:27.950
So-- take note of what time it
is if you want to be able to go

00:45:27.960 --> 00:45:30.000
back and look at this part later.

00:45:30.000 --> 00:45:31.820
So we will go into the portal.

00:45:31.860 --> 00:45:34.710
We go into the iOS provisioning portal.

00:45:34.720 --> 00:45:38.780
We grab pass type identifiers,
pass type IDs.

00:45:38.780 --> 00:45:40.320
And then from here,
we say we want to make

00:45:40.320 --> 00:45:42.320
a new pass type ID.

00:45:42.320 --> 00:45:44.100
OK, we'll call it boarding pass.

00:45:44.230 --> 00:45:45.200
This is not important.

00:45:45.200 --> 00:45:47.400
It's just a description in the UI.

00:45:47.420 --> 00:45:52.890
And we're making
pass.com.oceanic.boardingpass.

00:45:53.740 --> 00:45:54.960
OK.

00:45:55.000 --> 00:45:56.960
And we go ahead and do that.

00:45:56.970 --> 00:45:57.920
Now we're to this stage.

00:45:57.920 --> 00:46:00.700
We've now created the pass type ID,
but there aren't any certs

00:46:00.780 --> 00:46:02.140
associated with it yet.

00:46:02.220 --> 00:46:04.600
So tap Configure.

00:46:05.220 --> 00:46:06.860
Configure again.

00:46:06.910 --> 00:46:11.560
Now it's saying to launch Keychain,
so I'm just going to do that.

00:46:11.650 --> 00:46:13.990
I'm going to select certificates first.

00:46:15.500 --> 00:46:20.240
Request a certificate from
a certificate authority.

00:46:20.420 --> 00:46:22.100
Save to disk.

00:46:22.100 --> 00:46:22.370
Now it's a desktop.

00:46:22.400 --> 00:46:29.180
So at that point,
we have now saved that out to disk,

00:46:29.260 --> 00:46:32.540
and this is what this text is
telling us to do in the portal.

00:46:32.580 --> 00:46:34.840
Hit continue.

00:46:34.840 --> 00:46:38.310
Choose the file that you just created.

00:46:39.120 --> 00:46:40.800
Generate.

00:46:40.800 --> 00:46:40.800
And

00:46:41.520 --> 00:46:43.240
Now it's actually making the cert.

00:46:43.300 --> 00:46:46.230
And the reason why it's bouncing
back and forth like this is to avoid

00:46:46.230 --> 00:46:52.240
exposing the private key to Apple,
which makes it a little bit funny,

00:46:52.240 --> 00:46:54.440
of course,
when you have to go between applications.

00:46:54.510 --> 00:46:58.420
Anyway,
so we eventually download that guy.

00:46:59.300 --> 00:47:04.800
And we just double click it,
and that will add it to Keychain.

00:47:06.750 --> 00:47:12.730
The way this sign pass tool
works is that it looks at your

00:47:12.730 --> 00:47:14.700
pass that you're trying to sign.

00:47:14.700 --> 00:47:18.220
It grabs that dictionary and gets
the pass type identifier out of it.

00:47:18.280 --> 00:47:20.110
And then it has this
integration with Keychain.

00:47:20.170 --> 00:47:22.750
It runs through the
certificates in Keychain,

00:47:22.750 --> 00:47:26.320
looking for one that has a name that
matches that pass type identifier.

00:47:26.400 --> 00:47:27.810
And that's all it does.

00:47:27.960 --> 00:47:30.420
And then it uses that to sign it.

00:47:30.810 --> 00:47:34.900
So when we click that Do Magic--
let me get rid of this and we can

00:47:34.960 --> 00:47:37.750
just look at it-- it just sort of
spits out the information about what

00:47:37.950 --> 00:47:41.500
files it stuck into the signature,
basically.

00:47:41.550 --> 00:47:43.630
Stuck into the manifest, really.

00:47:43.640 --> 00:47:45.400
But that's what it was dealing with.

00:47:45.530 --> 00:47:47.780
And so that's pretty much it.

00:47:47.840 --> 00:47:49.400
Oh, there was one more
thing I did want to say,

00:47:49.450 --> 00:47:51.740
which is that because of the
way the sign pass tool works

00:47:51.890 --> 00:47:55.480
using your pass type identifier,
if you go to just directly sign

00:47:55.930 --> 00:47:59.320
these passes that we gave to you,
they won't succeed in signing,

00:47:59.320 --> 00:48:02.260
because you don't have a cert
for this pass type identifier.

00:48:02.290 --> 00:48:05.500
You know, this pass type identifier
is skyport.boardingpass.

00:48:05.520 --> 00:48:06.940
And you're not going
to be able to get that.

00:48:07.050 --> 00:48:09.640
So in order to be able
to use the sample passes,

00:48:09.670 --> 00:48:12.300
you always have to change this
to your actual identifier that

00:48:12.300 --> 00:48:16.720
you registered on the portal.

00:48:16.730 --> 00:48:18.960
Anyway, with that said,
that is all I wanted to go through.

00:48:19.110 --> 00:48:22.340
So I will give it back
to Glenn to finish up.

00:48:26.700 --> 00:48:29.390
All right, thanks again, Ken.

00:48:29.650 --> 00:48:32.200
Okay,
so we've given you the tools that you

00:48:32.200 --> 00:48:34.200
need to create passes from front to back.

00:48:34.320 --> 00:48:36.380
We've talked about what's
inside of all of these things.

00:48:36.380 --> 00:48:41.440
But now we want to give you some
design tips for creating great passes.

00:48:41.940 --> 00:48:47.240
Now, you know, Passbook is a super simple
application in terms of,

00:48:47.240 --> 00:48:50.620
you know, the UI that's presented to you.

00:48:50.620 --> 00:48:53.250
It's filled with your content.

00:48:53.350 --> 00:48:57.010
So it has a very clean and
simple design aesthetic,

00:48:57.070 --> 00:48:59.900
but it does have a design aesthetic.

00:48:59.900 --> 00:49:04.040
So we want to give you some tips for
how to fit into that and be successful

00:49:04.040 --> 00:49:08.820
in creating passes that look great,
make Passbook look great, and, you know,

00:49:08.820 --> 00:49:10.870
delight your users, right?

00:49:11.680 --> 00:49:11.900
So, you know,
Passbook is a super simple application.

00:49:12.040 --> 00:49:14.550
So the first thing I want to
let you know is that we've

00:49:14.630 --> 00:49:16.380
done a lot of experimentation.

00:49:16.380 --> 00:49:17.950
We designed a lot of passes.

00:49:17.950 --> 00:49:19.140
We did a lot of stuff.

00:49:19.140 --> 00:49:23.000
And what we found is that vibrant,
solid colors really work best.

00:49:23.020 --> 00:49:24.460
So use those.

00:49:24.460 --> 00:49:31.650
And, you know, this just really makes the
cards pop and look really nice.

00:49:31.660 --> 00:49:35.650
The other thing is that, again,
I want to encourage you to make sure

00:49:35.650 --> 00:49:37.960
you're using the correct pass style.

00:49:37.960 --> 00:49:40.760
So, you know,
one of the few sort of UI elements

00:49:40.760 --> 00:49:45.780
that's... So part of Passbook is
this...the edges that the passes have.

00:49:45.860 --> 00:49:49.220
And so that's a recognizable
way for users to understand what

00:49:49.360 --> 00:49:51.240
they're looking at very quickly.

00:49:51.240 --> 00:49:55.620
So make sure that you're using the
right pass style for your application.

00:49:58.050 --> 00:50:00.810
Next, in terms of logos,
if you're taking our advice

00:50:00.820 --> 00:50:03.780
and you're using these nice,
vibrant, solid colors,

00:50:03.780 --> 00:50:07.870
then chances are that a solid white
logo is going to look pretty good.

00:50:07.920 --> 00:50:11.080
And, in fact, those tend to work best,
right?

00:50:11.080 --> 00:50:17.480
So if your company or your brand has
a monochromatic version of your logo,

00:50:17.480 --> 00:50:21.340
which a lot of brands do for
newspapers or what have you,

00:50:21.960 --> 00:50:25.720
then we encourage you to use
that monochromatic version

00:50:25.720 --> 00:50:28.880
in white against a nice,
solid background.

00:50:28.880 --> 00:50:30.180
It just looks good.

00:50:30.180 --> 00:50:33.290
Now, obviously,
there are always exceptions to the rules,

00:50:33.390 --> 00:50:35.790
but these are just tips that
we've discovered along the way.

00:50:37.400 --> 00:51:35.300
[Transcript missing]

00:51:38.450 --> 00:51:43.160
Okay, so, and in terms of layout,
you know, again, it's a very simple,

00:51:43.160 --> 00:51:46.680
clean aesthetic,
and we just want to encourage you to

00:51:46.680 --> 00:51:51.090
avoid the temptation to just cram as much
information in these passes as you can.

00:51:51.100 --> 00:51:54.780
Be very selective about the
kinds of information and the

00:51:54.780 --> 00:51:57.630
pieces of information that you're
putting in the front of your pass.

00:51:57.640 --> 00:52:00.460
Only select the most important
things and only the things

00:52:00.680 --> 00:52:02.240
that really need to go there.

00:52:02.380 --> 00:52:06.080
And remember that you have the
backfields array as a tool as well to

00:52:06.080 --> 00:52:10.350
put information in your pass that maybe
doesn't need that prime placement,

00:52:10.390 --> 00:52:10.900
right?

00:52:10.900 --> 00:52:13.080
Remember that users are
using this on the go,

00:52:13.080 --> 00:52:15.240
and they're glancing down,
and so you want to

00:52:15.240 --> 00:52:18.670
communicate to them quickly,
you know, what the most important

00:52:18.730 --> 00:52:20.240
pieces of information are.

00:52:22.300 --> 00:52:24.960
The next thing I just want to
mention is that you really need

00:52:24.960 --> 00:52:26.800
to keep your passes accessible.

00:52:26.800 --> 00:52:30.930
And I almost hesitate
to even talk about this,

00:52:31.180 --> 00:52:34.550
but I'm going to anyway.

00:52:34.780 --> 00:52:41.220
Don't bake semantic information into
your background images or your passes.

00:52:41.350 --> 00:52:45.220
One of the things that we could have done
was just give you a big old canvas that

00:52:45.220 --> 00:52:48.070
we animate around on and you paint on.

00:52:48.130 --> 00:52:51.540
But it's not useful in a lot of ways.

00:52:51.540 --> 00:52:54.710
We can't do interesting things with
your data if we don't have it as data,

00:52:54.710 --> 00:52:56.820
if all we have is pixels.

00:52:56.890 --> 00:52:59.550
And one of the very useful things
that we can't do is we can't

00:52:59.550 --> 00:53:01.720
make your cards very accessible.

00:53:01.740 --> 00:53:03.510
So that's why we've defined this format.

00:53:03.610 --> 00:53:04.700
That's why we've done it this way.

00:53:04.820 --> 00:53:07.550
That's why we've sort of created
these rails for you to be on.

00:53:07.700 --> 00:53:11.420
And so, you know,
avoid the temptation to just, like,

00:53:11.450 --> 00:53:17.280
bake super important information right
into the artwork that's on your pass.

00:53:17.280 --> 00:53:20.480
The next thing is to use
header fields sparingly.

00:53:20.480 --> 00:53:23.220
I mean, you'll notice in our sample deck,
like,

00:53:23.220 --> 00:53:25.100
we don't even really use it that much.

00:53:25.190 --> 00:53:28.970
You only want to use this if you have
a super important piece of information

00:53:29.020 --> 00:53:33.300
that you need to communicate to the user
that needs to show up in the Passbook.

00:53:33.540 --> 00:53:35.940
And the stack view, right?

00:53:35.940 --> 00:53:40.670
So, like, you know, the gate is, like,
that's pretty important, right?

00:53:40.830 --> 00:53:42.880
But you don't want to just
use it because it's there.

00:53:42.880 --> 00:53:45.890
Only use it if you really have a
purpose for putting something up there.

00:53:47.480 --> 00:53:51.800
Next is that different businesses
have different requirements,

00:53:51.800 --> 00:53:55.680
and a lot of people are
already in this barcode game,

00:53:55.680 --> 00:53:59.060
and they've settled on a format,
and that's great, that's fine.

00:53:59.060 --> 00:54:01.610
We've selected a variety
of formats to support,

00:54:01.630 --> 00:54:05.240
but we just want to tip you off that
if you're starting from scratch and

00:54:05.240 --> 00:54:08.870
it doesn't make a difference to you,
one thing to note is that if you

00:54:08.870 --> 00:54:11.920
use a square-oriented barcode,
it's going to eat into your

00:54:11.920 --> 00:54:13.570
vertical space quite a bit.

00:54:13.670 --> 00:54:16.800
So what we have to do is we have
to scrunch down those fields

00:54:16.960 --> 00:54:20.760
that are on the top of the pass,
and it makes them a little bit smaller.

00:54:20.760 --> 00:54:25.350
So if it makes no difference to you,
you might want to consider trying

00:54:25.450 --> 00:54:28.380
a landscape-oriented barcode,
because it'll give you a

00:54:28.380 --> 00:54:30.210
little bit more vertical room,
give you a little bit

00:54:30.210 --> 00:54:32.190
more space on the page,
and let things kind of

00:54:32.270 --> 00:54:33.740
breathe a little bit more.

00:54:36.410 --> 00:54:37.880
Okay,
so if there's one thing that you can

00:54:37.950 --> 00:54:41.400
take away from this section of the talk,
it's keep it simple.

00:54:41.400 --> 00:54:42.580
Really keep it simple.

00:54:42.580 --> 00:54:45.860
Don't avoid the temptation to
overload your users with information

00:54:45.940 --> 00:54:47.440
on the front of your passes.

00:54:47.440 --> 00:54:50.360
And one other thing that
I just want to mention is that,

00:54:50.600 --> 00:54:52.800
you know,
a lot of these passes already have

00:54:52.800 --> 00:54:55.680
analogs in the physical world already,
right?

00:54:56.340 --> 00:54:58.720
There are boarding passes out there,
there are event tickets,

00:54:58.720 --> 00:55:00.860
they're usually printed
on a white piece of paper.

00:55:00.860 --> 00:55:06.400
And avoid the temptation to, you know,
take your physical thing that

00:55:06.400 --> 00:55:09.820
already exists and just do a
one-to-one copy and be like,

00:55:09.930 --> 00:55:11.500
okay, you know,
I'm going to take this and

00:55:11.620 --> 00:55:13.740
just put it into Passbook and
that's going to be my pass,

00:55:13.740 --> 00:55:14.240
right?

00:55:14.240 --> 00:55:15.470
It's kind of boring.

00:55:15.470 --> 00:55:19.030
We want Passbook to be fun, usable,
and we want it to, you know,

00:55:19.030 --> 00:55:23.580
the user to be excited about going there,
and it's got all these fun animations.

00:55:23.670 --> 00:55:26.200
So, you know,
take the opportunity to design.

00:55:26.230 --> 00:55:30.060
Design something to communicate your
brand by designing instead of just

00:55:30.160 --> 00:55:33.060
copying something that's already there,
right?

00:55:33.060 --> 00:55:36.700
And essentially making a Passbook
full of boring white passes.

00:55:36.700 --> 00:55:40.230
So keep it simple, be creative,
and if you do that,

00:55:40.230 --> 00:55:44.190
if you do those things,
you'll get fantastic results.

00:55:44.260 --> 00:55:47.080
And, you know,
just here are some examples of

00:55:47.080 --> 00:55:51.000
really simple passes that look
awesome but are super simple.

00:55:51.000 --> 00:55:54.800
And if you follow these principles,
then you'll get results like this,

00:55:54.890 --> 00:55:56.180
and you'll make Passbook.

00:55:56.220 --> 00:55:59.880
fun to use for people,
which is really important to us.

00:56:01.300 --> 00:56:02.980
Okay,
so that's all I have to say about design.

00:56:02.980 --> 00:56:05.260
For more information, contact Paul.

00:56:05.260 --> 00:56:07.360
He's our application services evangelist.

00:56:07.420 --> 00:56:08.250
Check out the docs.

00:56:08.250 --> 00:56:09.980
Check out the developer forums.

00:56:09.980 --> 00:56:11.900
And thanks for coming.

00:56:11.900 --> 00:56:13.140
I really appreciate your attention.

00:56:13.200 --> 00:56:14.110
Go out there.

00:56:14.110 --> 00:56:16.350
Make awesome passes for Passbook.

00:56:16.350 --> 00:56:17.700
Thanks.