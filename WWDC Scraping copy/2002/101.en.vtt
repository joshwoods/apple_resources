WEBVTT

00:00:08.980 --> 00:00:09.900
Hi, everybody.

00:00:09.920 --> 00:00:10.900
Thank you.

00:00:10.900 --> 00:00:17.790
Okay, this is session 101,
FireWire Overview.

00:00:24.000 --> 00:00:27.490
And that's me.

00:00:27.930 --> 00:00:34.800
What we're going to talk about in this
session is FireWire's big picture.

00:00:34.860 --> 00:00:40.260
We're going to look at what's happened
over the past year in the industry,

00:00:40.290 --> 00:00:42.380
in Mac OS X.

00:00:42.420 --> 00:00:45.270
We're going to take a
look at where we are now,

00:00:45.270 --> 00:00:49.410
and then we'll discuss some of
the directions that we're going in

00:00:49.410 --> 00:00:52.220
the future that we'd like you as
developers to help us to get there.

00:00:52.440 --> 00:00:55.560
With the particular
focus in this session on,

00:00:55.560 --> 00:00:59.040
for you as a developer,
what opportunities do you have

00:00:59.050 --> 00:01:01.420
for developing FireWire products?

00:01:03.890 --> 00:01:08.180
We're going to address six
specific sections today.

00:01:08.330 --> 00:01:13.720
First is to review changes to the
big picture since WWDC last year.

00:01:13.810 --> 00:01:17.040
We'll be looking at the
industry and products.

00:01:17.680 --> 00:01:21.680
Second section is to talk about what
new services we've added to Mac OS X.

00:01:21.700 --> 00:01:25.810
We've been working really hard
and exclusively on Mac OS X to

00:01:25.900 --> 00:01:30.010
provide services to facilitate
developing for FireWire.

00:01:30.500 --> 00:01:32.800
Then we'll talk about
future work in Mac OS X,

00:01:32.800 --> 00:01:36.840
things that we're working on right now
that we're planning to add that we hope

00:01:36.840 --> 00:01:42.300
will enable you to take FireWire further,
make new applications, new devices.

00:01:43.280 --> 00:01:46.220
As we do every year,
we'll have a section on do's

00:01:46.220 --> 00:01:48.060
and don'ts for FireWire.

00:01:48.160 --> 00:01:49.900
This is not a marketing session.

00:01:49.900 --> 00:01:53.200
It's things that we've learned by working
with developers over the past year,

00:01:53.450 --> 00:01:59.190
what worked, what didn't,
things that might help you

00:01:59.190 --> 00:01:59.190
to get faster to the product
that you're trying to make.

00:01:59.380 --> 00:02:02.770
Then we'll have a special
presentation on IEEE 1394b,

00:02:02.900 --> 00:02:06.950
the future of FireWire,
including a very interesting demo.

00:02:07.100 --> 00:02:09.790
And we will conclude by
reviewing developer resources,

00:02:09.870 --> 00:02:14.160
things that Apple does for you
specifically related to FireWire

00:02:14.170 --> 00:02:18.570
that you need to be aware of to
help you develop your products.

00:02:18.640 --> 00:02:21.370
And, of course,
we'll then have questions.

00:02:22.880 --> 00:02:27.700
So the first section is what's
happened to FireWire since we

00:02:27.700 --> 00:02:30.670
got together last year at WWDC.

00:02:32.360 --> 00:02:38.000
Apple today has FireWire ports in
100% of our Macintosh products.

00:02:38.060 --> 00:02:40.450
This was actually true
last year at WWDC as well,

00:02:40.610 --> 00:02:43.530
but every single product
has been changed since then,

00:02:43.540 --> 00:02:45.150
so it's worth repeating.

00:02:45.220 --> 00:02:48.060
It's also very important because,
as developers,

00:02:48.060 --> 00:02:53.080
this really simplifies your position
to your customers regarding FireWire.

00:02:53.190 --> 00:02:54.370
It's in all of our products.

00:02:54.500 --> 00:02:56.100
You don't have to list a
bunch of products that you're

00:02:56.100 --> 00:02:59.810
compatible with as long as you're
shipping from modern systems.

00:03:00.540 --> 00:03:03.590
All of our desktop products,
that's the G4 tower and

00:03:03.600 --> 00:03:06.640
the various kinds of iMac,
all have two FireWire ports.

00:03:06.640 --> 00:03:12.000
And all of our portable products,
the PowerBook G4 and the iBook,

00:03:12.000 --> 00:03:14.300
both have a single FireWire port.

00:03:14.360 --> 00:03:16.680
Aside from that difference,
they're pretty much all the same.

00:03:16.920 --> 00:03:20.520
Every single one provides cable
power so that you can do things

00:03:20.520 --> 00:03:23.660
like charge an iPod or run a hub.

00:03:23.750 --> 00:03:25.830
And they all support
the six-pin connector,

00:03:25.830 --> 00:03:30.150
which is the standard connector
called out in the 1394 spec.

00:03:30.210 --> 00:03:32.570
And they all support
all of the cable speeds,

00:03:32.570 --> 00:03:35.530
100, 200, and 400 megabits.

00:03:35.550 --> 00:03:38.840
So you can talk to your iPod,
which is a 400 megabit device,

00:03:38.870 --> 00:03:41.960
your DV camera,
which is a 100 megabit device,

00:03:42.010 --> 00:03:44.730
or if you can find the
odd 200 megabit device,

00:03:44.730 --> 00:03:46.600
we can talk to that, too.

00:03:46.670 --> 00:03:50.260
So the point here is that from
your customer's point of view,

00:03:50.260 --> 00:03:51.500
it's all the same.

00:03:51.640 --> 00:03:52.940
All the products have FireWire.

00:03:52.940 --> 00:03:54.760
They all have the same capabilities.

00:03:54.810 --> 00:03:57.580
You shouldn't need to design
in a product-specific way.

00:03:57.860 --> 00:03:59.820
You can just design for
Macintosh in general.

00:03:59.820 --> 00:04:01.100
Thank you.

00:04:04.560 --> 00:04:07.080
Since we were here last year,
Apple shipped the iPod.

00:04:07.280 --> 00:04:08.490
This is a big step for us.

00:04:08.490 --> 00:04:12.500
It's Apple's first ever
FireWire peripheral device.

00:04:12.540 --> 00:04:16.940
And the iPod is really a showcase
of all the things that you can

00:04:17.010 --> 00:04:19.500
do with a product using FireWire.

00:04:19.500 --> 00:04:21.500
The iPod runs on cable power.

00:04:21.500 --> 00:04:25.700
The FireWire port provides
electrical power on the cable in

00:04:25.700 --> 00:04:28.360
addition to the lines for data.

00:04:28.560 --> 00:04:33.490
This power is sufficient
to not just run the iPod,

00:04:33.490 --> 00:04:36.500
but to recharge the
batteries at the same time.

00:04:37.650 --> 00:04:41.890
The iPod also demonstrates really
good integration of plug and play.

00:04:41.900 --> 00:04:44.900
You plug the iPod into your Macintosh,
iTunes will launch,

00:04:44.940 --> 00:04:48.090
iTunes will automatically
synchronize all of your music with

00:04:48.100 --> 00:04:51.910
whatever you've lately downloaded
or new playlists you've created.

00:04:51.920 --> 00:04:53.660
It's completely automatic.

00:04:53.690 --> 00:04:55.820
It could not be easier.

00:04:55.920 --> 00:05:01.550
Of course, you can turn that off if you
want to manage things manually,

00:05:01.620 --> 00:05:03.610
but it really demonstrates the
capability to make things easy to use.

00:05:03.970 --> 00:05:04.470
speed.

00:05:04.510 --> 00:05:07.590
There's lots and lots of
MP3 players out there.

00:05:07.780 --> 00:05:10.000
None have FireWire except the iPod.

00:05:10.000 --> 00:05:13.960
The iPod really demonstrates
the speed of FireWire.

00:05:13.960 --> 00:05:19.840
The iPod can copy data ten times faster
than any USB MP3 player on the market.

00:05:19.840 --> 00:05:24.280
Now,
FireWire is 30 times faster than USB 1.1,

00:05:24.280 --> 00:05:28.480
but the very small hard drive
in the iPod isn't the world's

00:05:28.480 --> 00:05:31.980
highest performance hard drive,
so you actually get about a

00:05:32.010 --> 00:05:33.600
ten times speed improvement.

00:05:33.600 --> 00:05:35.070
And finally, size.

00:05:35.070 --> 00:05:38.680
This picture may not suggest it,
but you know the iPod is

00:05:38.690 --> 00:05:42.550
really a tiny product,
and having the small six-pin FireWire

00:05:42.740 --> 00:05:45.250
port on there helps make that possible.

00:05:45.260 --> 00:05:49.330
If you remember when we had
SCSI connectors on some of our products,

00:05:49.330 --> 00:05:52.080
the SCSI connector is
actually wider than the iPod,

00:05:52.160 --> 00:05:54.860
so that just would not
have worked on this device.

00:06:00.080 --> 00:06:03.160
Also since last year, we have iPhoto.

00:06:03.270 --> 00:06:07.130
You've probably seen demonstrations of
iPhoto hooked up to USB still cameras.

00:06:07.220 --> 00:06:09.940
Well, it turns out iPhoto
is not limited to USB.

00:06:10.020 --> 00:06:12.660
It is a general-purpose
camera application.

00:06:12.720 --> 00:06:17.500
And in fact, in Mac OS X today,
iPhoto supports the Nikon D1 series

00:06:17.710 --> 00:06:20.660
of cameras with FireWire interfaces.

00:06:20.770 --> 00:06:25.070
We're also adding support for
additional cameras already on

00:06:25.070 --> 00:06:27.830
the market that have FireWire
support for still image transfer.

00:06:32.140 --> 00:06:34.560
Let's talk briefly about that.

00:06:34.640 --> 00:06:38.200
Why would someone have put
FireWire on that Nikon camera,

00:06:38.200 --> 00:06:39.240
for example?

00:06:39.350 --> 00:06:41.000
You've all heard of USB 2.0.

00:06:41.000 --> 00:06:43.480
It's kind of reaching the market.

00:06:43.640 --> 00:06:49.590
A USB 2.0 camera could be about
as fast as a FireWire camera.

00:06:49.590 --> 00:06:49.590
There's no question about that.

00:06:50.050 --> 00:06:52.410
But there's this big
installed base of USB.

00:06:52.590 --> 00:06:54.740
It's all USB 1.1.

00:06:54.850 --> 00:06:57.680
Tens of millions of systems out there.

00:06:57.730 --> 00:07:01.960
They could work with USB 2 devices,
but they'll be slow.

00:07:02.690 --> 00:07:04.770
Think about this as a developer.

00:07:04.840 --> 00:07:08.980
If you were selling this camera
and it had a USB 2 interface,

00:07:08.980 --> 00:07:11.980
your customers, your first customers,
your most important,

00:07:12.040 --> 00:07:14.770
would buy this camera, take it home,
and most of them would plug

00:07:14.770 --> 00:07:16.640
it into a USB 1.1 system.

00:07:16.740 --> 00:07:19.130
It would work correctly,
but they would be incredibly

00:07:19.230 --> 00:07:21.080
disappointed with the performance.

00:07:21.130 --> 00:07:24.090
They'd be calling your tech support,
they'd be returning the

00:07:24.090 --> 00:07:26.790
cameras to the stores,
you'd probably get bad press.

00:07:26.860 --> 00:07:29.370
Ask yourself as a developer,
do you really want to put

00:07:29.370 --> 00:07:32.480
yourself and your customers
through something like that?

00:07:32.700 --> 00:07:35.430
You could choose to design
with FireWire ports instead.

00:07:35.530 --> 00:07:38.250
Virtually every computer out
there with a FireWire interface

00:07:38.560 --> 00:07:41.480
supports the fast S400 speed.

00:07:41.480 --> 00:07:45.320
So your customers can have a good
experience right out of the box,

00:07:45.320 --> 00:07:47.980
get very high performance
by using FireWire.

00:07:47.980 --> 00:07:51.320
Additionally,
there's much more power available

00:07:51.320 --> 00:07:53.100
on FireWire than on USB.

00:07:53.100 --> 00:07:56.520
Even USB 2.0 does not add any more power.

00:07:57.320 --> 00:08:01.770
So the still cameras that are out there
now are able to run and charge the

00:08:01.770 --> 00:08:04.000
batteries from FireWire cable power.

00:08:04.000 --> 00:08:09.410
That's something that really wasn't
practical or would be much slower on USB.

00:08:09.520 --> 00:08:13.790
So there really are reasons to consider
using FireWire for this kind of device,

00:08:13.860 --> 00:08:17.700
even though USB 2.0 might enable
you to reach about the same speed.

00:08:21.030 --> 00:08:23.920
Also, since last year,
Apple made a very important acquisition.

00:08:23.920 --> 00:08:29.020
We have acquired a company called
Zionte that was exclusively staffed

00:08:29.020 --> 00:08:31.390
with experts in 1394 technology.

00:08:31.400 --> 00:08:35.700
I'd particularly like to welcome
Michael Thiener back to Apple Computer,

00:08:35.700 --> 00:08:38.880
and Prashant Khan here,
and many other talented people.

00:08:38.880 --> 00:08:40.740
We are delighted to have them.

00:08:40.740 --> 00:08:44.490
It's going to be a big boost to
Apple in our ability to incorporate

00:08:44.490 --> 00:08:47.390
FireWire in our products,
and we want to make it a big

00:08:47.390 --> 00:08:50.850
boost for developers as well by
increasing the number of services

00:08:50.850 --> 00:08:55.680
that we can provide and the
breadth that we can cover on 1394.

00:08:55.680 --> 00:08:59.220
We're going to have Mike up
here later talking about 1394B.

00:09:03.070 --> 00:09:06.570
Finally, since last year,
FireWire won an Emmy.

00:09:06.620 --> 00:09:08.740
That was kind of unexpected.

00:09:08.780 --> 00:09:12.000
This Emmy was presented
simply to FireWire,

00:09:12.010 --> 00:09:16.820
not to any particular product,
just to the technology.

00:09:16.820 --> 00:09:19.630
Apple's product, Final Cut Pro,
is used extensively in the

00:09:19.630 --> 00:09:21.270
broadcast television industry.

00:09:21.380 --> 00:09:24.760
It has really revolutionized
some of the work they do,

00:09:24.920 --> 00:09:29.360
and they chose to recognize this
by presenting an Emmy to FireWire.

00:09:32.080 --> 00:09:35.710
Okay, now we'll go into a little
more depth about what we've

00:09:35.720 --> 00:09:39.990
added in Mac OS X for FireWire.

00:09:41.680 --> 00:09:44.520
probably the number one question
that we get on our mailing

00:09:44.520 --> 00:09:48.690
list is answered by this,
the SCSI-TASK user client.

00:09:48.690 --> 00:09:52.810
This was announced last year but has
only become available since then and

00:09:53.000 --> 00:09:55.370
now is ready for developers to use.

00:09:55.460 --> 00:09:59.830
There's a lot of devices out there,
like printers, scanners,

00:09:59.830 --> 00:10:03.650
certain kinds of still camera,
certain kinds of storage or

00:10:03.680 --> 00:10:07.730
mass storage related device,
that have a SCSI architecture

00:10:07.730 --> 00:10:09.380
model in their design.

00:10:09.380 --> 00:10:13.430
They may have an ATA interface or
they may have a FireWire interface,

00:10:13.460 --> 00:10:16.030
but at heart they use
this architectural model.

00:10:17.970 --> 00:10:22.140
Previously, developers had to use
the raw SPP2 services,

00:10:22.140 --> 00:10:26.220
perhaps even in the kernel,
in order to talk to this kind of device.

00:10:26.220 --> 00:10:31.210
And it was possible to do that,
but you ended up doing a lot of 1394

00:10:31.210 --> 00:10:35.700
and SPP2-specific work rather than
focusing on what your device did.

00:10:35.700 --> 00:10:41.060
So the SCSI task user client for most
kinds of these devices will make it much,

00:10:41.130 --> 00:10:45.540
much easier to access your device
and do so from application space,

00:10:45.740 --> 00:10:49.700
which is vastly preferable
to working in the kernel.

00:10:53.900 --> 00:10:57.270
Also since last year,
we've added an AVC user client.

00:10:57.300 --> 00:11:01.900
AVC is the command set that's used
to control consumer electronic

00:11:01.900 --> 00:11:06.020
audio/video types of devices,
such as the camera and

00:11:06.020 --> 00:11:08.240
television shown here.

00:11:08.330 --> 00:11:13.040
The protocol that transports
AVC is a function control protocol,

00:11:13.110 --> 00:11:18.140
and the command sets for AVC are
defined by the 1394 Trade Association.

00:11:18.240 --> 00:11:24.430
There are command sets for televisions,
tuners, satellite receivers, camcorders,

00:11:24.550 --> 00:11:27.880
any kind of audio or video
equipment that you can imagine.

00:11:27.990 --> 00:11:30.920
So there's a wide variety
of command sets available,

00:11:31.040 --> 00:11:33.890
and the devices that use
them are starting to appear.

00:11:33.990 --> 00:11:37.670
You can put the two together with
the AVC user client and create

00:11:37.670 --> 00:11:42.500
innovative software applications
for controlling these devices.

00:11:46.060 --> 00:11:49.050
Something else we did since last
year is that we've made the source

00:11:49.170 --> 00:11:51.420
code available to the DV driver.

00:11:51.520 --> 00:11:55.760
We know for years folks working with
Mac OS 9 have sent us questions about

00:11:55.870 --> 00:11:58.500
how does this thing really work,
how can I hook into it,

00:11:58.590 --> 00:12:02.570
how can I communicate with DV cameras.

00:12:03.150 --> 00:12:04.210
For years it was secret.

00:12:04.250 --> 00:12:05.430
We finally fixed that.

00:12:05.590 --> 00:12:06.800
We've put it in Darwin.

00:12:06.800 --> 00:12:07.920
It's open source.

00:12:07.960 --> 00:12:10.500
You can get at it and
see exactly how it works.

00:12:10.620 --> 00:12:13.600
The project is IO FireWire DV.

00:12:13.690 --> 00:12:17.650
Now, the way it hooks in is changing
slightly because of the ABC user client,

00:12:17.650 --> 00:12:20.940
but it should be an excellent
reference for people who are

00:12:20.940 --> 00:12:24.640
working with isochronous devices,
which is real-time.

00:12:24.640 --> 00:12:28.430
Anyone who's trying to write
drivers to send or receive real-time

00:12:28.430 --> 00:12:32.050
video or who'd like to understand
how the DV driver hooks in to

00:12:32.050 --> 00:12:35.380
higher layers such as QuickTime,
iMovie, and so on.

00:12:38.650 --> 00:12:41.100
That was the old number one question
on our mailing list before our

00:12:41.150 --> 00:12:42.600
SCSI task user client came along.

00:12:44.560 --> 00:12:46.670
Other new things that we've
added in the past year,

00:12:46.670 --> 00:12:50.560
we've greatly expanded the
HeaderDoc in FireWire for Mac OS X.

00:12:50.560 --> 00:12:55.400
Almost 100 methods, classes,
and so on are now documented.

00:12:55.500 --> 00:12:57.880
We have an all-new document
for writing user clients

00:12:57.890 --> 00:13:01.390
called "Working with FireWire
Device Interfaces." It's available

00:13:01.390 --> 00:13:03.880
on the web on developer.apple.com.

00:13:03.930 --> 00:13:05.390
You can get that today.

00:13:05.500 --> 00:13:08.800
It has a wealth of information
about how to access your devices

00:13:08.910 --> 00:13:13.190
from applications rather than
trying to write kernel drivers.

00:13:13.580 --> 00:13:17.300
We continue to publish software
development kits for Mac OS X.

00:13:17.350 --> 00:13:24.380
We have distributed 12 of those to date,
including five new ones since last year.

00:13:24.470 --> 00:13:27.320
Additionally,
Apple provides CPU developer

00:13:27.450 --> 00:13:32.270
technical notes on the web that show
architectural details of the FireWire

00:13:32.270 --> 00:13:34.920
implementation in our various products.

00:13:34.990 --> 00:13:40.090
For example, for the G4, for the iMac,
for the iBook, you can see what the

00:13:40.110 --> 00:13:43.550
controller is hooked up to,
what the internal architecture

00:13:43.590 --> 00:13:44.530
of the system is like.

00:13:44.600 --> 00:13:48.730
It also has information about the pinout,
the amount of power provided, and so on.

00:13:48.740 --> 00:13:52.250
Those are all available in
public on the developer website.

00:13:57.260 --> 00:13:58.860
Okay, moving on.

00:13:59.050 --> 00:14:02.340
Future FireWire work in Mac OS X.

00:14:02.430 --> 00:14:05.040
We have a very strong
set of services today.

00:14:05.100 --> 00:14:08.090
You can write applications,
you can write drivers, printers,

00:14:08.090 --> 00:14:13.930
scanners, DV, hard drives,
other mass storage,

00:14:13.930 --> 00:14:13.930
but there's still more to do.

00:14:16.150 --> 00:14:19.240
Starting in Jaguar,
we are going to provide a standard

00:14:19.240 --> 00:14:22.960
driver for IIDC-type cameras.

00:14:22.960 --> 00:14:26.440
These are commonly known as DCAM cameras.

00:14:26.440 --> 00:14:29.970
I've pictured two commercial ones here,
the iBot and the ADS camera

00:14:29.970 --> 00:14:31.440
that you may recognize.

00:14:31.440 --> 00:14:33.990
In Jaguar,
QuickTime will provide a standard

00:14:34.000 --> 00:14:38.810
driver for these cameras that's
capable of very high frame rate,

00:14:38.840 --> 00:14:40.360
high resolution input.

00:14:40.840 --> 00:14:45.010
This is a big jump from the
sample code that we've provided

00:14:45.010 --> 00:14:49.910
previously in the SDK that only
ran at very small image sizes.

00:14:49.920 --> 00:14:52.470
In fact, we have a demonstration of this.

00:14:52.480 --> 00:15:03.000
We have the demonstration video.

00:15:03.000 --> 00:15:03.480
Thank you.

00:15:13.830 --> 00:15:16.220
This is one of those IIDC-type cameras.

00:15:16.220 --> 00:15:17.220
This one's made by Sony.

00:15:17.220 --> 00:15:20.560
It's a somewhat professional model,
a little more rugged.

00:15:20.560 --> 00:15:24.060
And you can see,
if you were here last year,

00:15:24.060 --> 00:15:26.980
this demo would have been a little
postage stamp up in the corner.

00:15:26.980 --> 00:15:31.050
You can see here, well,
some of you are sitting in the dark,

00:15:31.100 --> 00:15:36.520
that we have very high frame rate,
high quality, very fast input.

00:15:36.520 --> 00:15:42.180
So we hope developers will make use
of this to create new applications

00:15:42.180 --> 00:15:46.620
for this kind of camera or even
new products like this camera.

00:15:46.620 --> 00:15:52.730
Okay, let's go back to the slides.

00:16:01.800 --> 00:16:07.570
I mentioned already that we had
added a user client for AVC.

00:16:07.590 --> 00:16:12.480
We're doing further work in
Jaguar to extend its capabilities.

00:16:12.760 --> 00:16:15.540
Specifically,
we're adding a service layer

00:16:15.540 --> 00:16:18.000
called asynchronous connections.

00:16:18.000 --> 00:16:21.530
This is a protocol,
one of those that I mentioned that you

00:16:21.540 --> 00:16:27.030
can get from the 1394 Trade Association,
for moving data serially

00:16:27.030 --> 00:16:33.300
between two devices through
the ABC and FCP protocols.

00:16:33.310 --> 00:16:35.700
It's not the world's fastest protocol.

00:16:35.700 --> 00:16:38.290
If you're looking to
create an all-new device,

00:16:38.290 --> 00:16:40.940
it might not be your best first choice.

00:16:40.980 --> 00:16:44.620
But if your device already
speaks ABC and you need to add

00:16:44.730 --> 00:16:47.000
still image transfer to it,
for example,

00:16:47.120 --> 00:16:48.880
it might be a reasonable choice.

00:16:48.920 --> 00:16:52.900
And in fact,
there are DV cameras on the market today

00:16:52.900 --> 00:16:58.060
from Canon that implement this protocol,
and they use it to move still

00:16:58.060 --> 00:16:59.670
images out of the camera.

00:17:01.930 --> 00:17:08.770
Additionally,
we are adding a subunit enumeration

00:17:08.770 --> 00:17:08.770
capability to the AVC user client.

00:17:08.990 --> 00:17:15.120
The AVC spec defines subunits within
a device that represent its functions.

00:17:15.230 --> 00:17:18.500
For example,
there's a camera storage subunit,

00:17:18.510 --> 00:17:20.700
using the example I just gave.

00:17:20.780 --> 00:17:22.750
There's a DV camera subunit.

00:17:22.930 --> 00:17:26.050
There's a tape transport subunit.

00:17:26.050 --> 00:17:28.990
There can be a TV tuner subunit.

00:17:29.720 --> 00:17:33.740
We now, in Jaguar,
we discover these for you by querying

00:17:33.740 --> 00:17:37.620
each AVC device when it's connected,
and we publish appropriate

00:17:37.620 --> 00:17:39.830
information in the I/O registry.

00:17:39.890 --> 00:17:43.170
So you can now make sure
that your software finds,

00:17:43.170 --> 00:17:47.960
loads, and talks with devices that
have the particular functions

00:17:47.960 --> 00:17:52.680
that you actually need,
such as the still camera--sorry,

00:17:52.780 --> 00:17:56.030
the camera storage subunit
that's in that Canon camera.

00:17:56.540 --> 00:17:59.680
Another feature that we've
added in the AVC User Client

00:17:59.790 --> 00:18:04.500
is support for AVC targets.

00:18:04.510 --> 00:18:08.500
A target means that the Macintosh
would be the recipient of

00:18:08.500 --> 00:18:12.060
commands from another AVC device.

00:18:12.160 --> 00:18:15.840
In the past, we've always taken a
controller's point of view.

00:18:15.840 --> 00:18:19.940
We can control the devices out there,
but now they can talk to us.

00:18:19.960 --> 00:18:23.260
So if you'd like to write a truly
peer-to-peer application using

00:18:23.260 --> 00:18:25.820
one of the AVC command sets,
you can now do this.

00:18:28.070 --> 00:18:32.050
Finally, and perhaps the biggest change,
the DV driver itself has

00:18:32.050 --> 00:18:35.590
been moved to user space,
together with the changes

00:18:35.590 --> 00:18:36.850
to the AVC user client.

00:18:36.860 --> 00:18:40.350
This is pretty big work
because the DV driver is a

00:18:40.350 --> 00:18:43.270
real-time resource that's used,
for example,

00:18:43.280 --> 00:18:47.680
by iMovie and Final Cut Pro when
capturing video or when exporting

00:18:47.860 --> 00:18:49.180
video back to the camera.

00:18:49.180 --> 00:18:53.300
That video has to be transferred
in a frame-accurate way.

00:18:53.300 --> 00:18:54.910
We can't lose any data.

00:18:55.580 --> 00:18:58.530
So, initially,
the service was put in the kernel

00:18:58.570 --> 00:19:00.890
because we knew it would work there.

00:19:01.260 --> 00:19:04.630
Since AVC services became
available in the user client,

00:19:04.630 --> 00:19:07.940
we have moved the DV driver
itself out into user space,

00:19:07.940 --> 00:19:11.120
and it continues to deliver
frame-accurate video

00:19:11.200 --> 00:19:12.920
for import and export.

00:19:12.920 --> 00:19:16.110
So if you were not convinced
previously that user space was

00:19:16.220 --> 00:19:18.990
a reasonable place to work,
this should help change

00:19:19.160 --> 00:19:20.420
your mind about that.

00:19:20.420 --> 00:19:25.660
The user space APIs allow for data
movement without data copying,

00:19:25.660 --> 00:19:30.290
but your driver can all be in user
space where it's much easier to debug,

00:19:30.300 --> 00:19:36.230
has much greater ability to coexist
with other things on the system.

00:19:40.820 --> 00:19:44.300
Another major area that we are
working on is the support of

00:19:44.300 --> 00:19:47.400
the TCP/IP protocol on 1394.

00:19:47.490 --> 00:19:52.700
Now, this is a feature for after Jaguar,
but we are working on it now.

00:19:52.780 --> 00:19:57.470
The Internet Protocol, IP,
is a great protocol because it's been

00:19:57.470 --> 00:20:02.700
deployed in lots and lots of different
devices and services and so on.

00:20:02.810 --> 00:20:07.500
But you have to keep in mind that
IP was designed to connect the world.

00:20:07.590 --> 00:20:08.490
It does that well.

00:20:08.490 --> 00:20:10.900
It can connect devices
all over the world.

00:20:11.010 --> 00:20:14.400
They can interoperate even though
they have different operating systems.

00:20:14.490 --> 00:20:19.100
It was not designed for a small
local area bus like FireWire.

00:20:19.230 --> 00:20:23.600
IP can run on FireWire,
but it doesn't take advantage of all

00:20:23.600 --> 00:20:29.200
of the characteristics that FireWire
has due to being a smaller bus.

00:20:29.300 --> 00:20:37.300
So, consider using IP if you want to
interoperate with a wider area device,

00:20:37.300 --> 00:20:39.300
application or service.

00:20:39.490 --> 00:20:43.300
Consider IP for leveraging
existing software,

00:20:43.300 --> 00:20:44.800
existing services.

00:20:44.800 --> 00:20:49.000
Or consider it for managing a device,
doing something that doesn't require

00:20:49.000 --> 00:20:51.290
the highest possible bandwidth.

00:20:51.300 --> 00:20:56.450
Don't consider it for, say,
a video camera like you just saw

00:20:56.560 --> 00:20:59.300
or a high performance disk drive.

00:21:00.790 --> 00:21:03.470
IP may, however,
be more convenient because

00:21:03.470 --> 00:21:05.400
of its peer-to-peer nature.

00:21:05.420 --> 00:21:09.600
If you think about target disk mode,
that's the ability in our products

00:21:09.600 --> 00:21:13.210
today to make the Macintosh
emulate a FireWire hard drive.

00:21:13.240 --> 00:21:14.670
It works great.

00:21:14.690 --> 00:21:17.740
It's very fast,
but it requires rebooting the Macintosh.

00:21:17.740 --> 00:21:19.550
That's slightly inconvenient.

00:21:20.430 --> 00:21:23.390
Using IP 1394,
it may be possible to connect two Macs

00:21:23.390 --> 00:21:27.490
together with the same FireWire cable,
use the IP protocol to do file

00:21:27.500 --> 00:21:31.660
sharing or FTP or whatever your
favorite transfer protocol is,

00:21:31.660 --> 00:21:35.340
to move files in the same way as
you would do with target disk mode,

00:21:35.340 --> 00:21:36.840
but more conveniently.

00:21:36.900 --> 00:21:41.170
Now, we don't have a schedule to
announce for IP 1394 because

00:21:41.270 --> 00:21:43.030
this is where you come in.

00:21:43.030 --> 00:21:47.240
We need developer input about how
you're going to adopt this in order

00:21:47.250 --> 00:21:49.550
to help us set the right schedule.

00:21:50.020 --> 00:21:53.960
We would like to produce this software
when you're ready to use it and

00:21:53.960 --> 00:21:58.190
do our qualification when you have
prototypes or initial applications

00:21:58.190 --> 00:22:02.000
ready so that we can make sure we've
given you what you actually need.

00:22:02.040 --> 00:22:05.870
If we went and did it next month and we
overlooked something that you needed,

00:22:05.880 --> 00:22:08.050
we'd have to go do it again,
re-qualify it,

00:22:08.100 --> 00:22:10.080
ship it to customers a second time.

00:22:10.080 --> 00:22:11.280
That would be silly.

00:22:11.280 --> 00:22:15.630
So, don't stand up right now,
but we would like to hear from you what

00:22:15.850 --> 00:22:18.900
you want to do with IP 1394 and when.

00:22:19.800 --> 00:22:23.750
You can come to our feedback forum on
Friday or you can send us information

00:22:23.750 --> 00:22:27.210
on our mailing list or in private
using the contact information

00:22:27.210 --> 00:22:29.290
that's at the end of these slides.

00:22:29.320 --> 00:22:31.080
So, we're ready to do it.

00:22:31.190 --> 00:22:33.470
We think it's a good thing,
but we need your help.

00:22:37.030 --> 00:22:40.290
Another area that we're
working on is SBP3.

00:22:40.620 --> 00:22:42.680
That's Serial Bus Protocol.

00:22:42.830 --> 00:22:47.320
It's the transport that's used
by FireWire hard disk drives,

00:22:47.320 --> 00:22:52.260
as well as other items like the printers,
scanners, and cameras I talked about that

00:22:52.300 --> 00:22:54.360
use the SCSI-TASC user client.

00:22:54.390 --> 00:22:58.510
SBP2 is the one that's shipping today.

00:22:58.540 --> 00:23:05.530
SBP3 is backwards-compatible enhancements
to add new services and new performance.

00:23:06.560 --> 00:23:09.600
There's three main
categories of things in SPP3.

00:23:09.850 --> 00:23:14.850
Fast start is a speed-up that
allows us to make a device

00:23:15.210 --> 00:23:17.190
start doing something faster.

00:23:17.200 --> 00:23:21.700
Basically, fast start takes all of the
information that the device will need,

00:23:21.700 --> 00:23:26.060
bundles it into a single packet,
and sends it to the device all at once.

00:23:26.200 --> 00:23:28.500
This is faster than
the way it works today,

00:23:28.500 --> 00:23:31.620
where the device has to collect
various bits of information from

00:23:31.620 --> 00:23:33.690
the host before it can get started.

00:23:33.700 --> 00:23:39.200
We have done performance tests that show
improvements of 30% or more for certain

00:23:39.200 --> 00:23:41.540
kinds of I/O when using fast start.

00:23:41.700 --> 00:23:48.690
Some of the major vendors of silicon for
1394 on SPP have shown interest in this.

00:23:48.700 --> 00:23:52.200
One worked with us to give us
prototypes for that measurement.

00:23:52.200 --> 00:23:57.200
We expect a big boost in performance
for devices when this is deployed.

00:23:57.200 --> 00:24:00.700
The standard for SPP3
is still being written,

00:24:00.790 --> 00:24:05.630
but the fast start portion has
been declared stable by ANSI,

00:24:05.630 --> 00:24:07.500
which is the parent organization.

00:24:07.510 --> 00:24:10.000
This means that it's not
anticipated to change.

00:24:10.000 --> 00:24:13.120
It would take a large vote of
a large number of people to

00:24:13.230 --> 00:24:15.000
make any changes at this point.

00:24:15.000 --> 00:24:17.490
If you'd like to start
working with fast start,

00:24:17.510 --> 00:24:19.000
please do so now.

00:24:19.000 --> 00:24:21.590
You can be pretty sure
that it won't change,

00:24:21.590 --> 00:24:26.500
and we will have software support for it
by the time you're ready with products.

00:24:27.370 --> 00:24:31.320
The next area in SPP3 is 1394.1.

00:24:31.490 --> 00:24:33.390
This is a fairly complex area.

00:24:33.450 --> 00:24:34.870
It's bus bridges.

00:24:34.920 --> 00:24:39.560
The ability to connect two 1394
buses together and have them

00:24:39.560 --> 00:24:43.680
continue to operate even though
they are not the same bus.

00:24:44.280 --> 00:24:48.140
SBP, as defined,
doesn't have all of the structure needed

00:24:48.520 --> 00:24:53.700
to work in a .1 bridge environment,
so SBP3 is adding that.

00:24:53.700 --> 00:24:56.490
And it has a beneficial side effect.

00:24:56.550 --> 00:25:02.810
Bus resets do not cross a 1394.1 bridge,
so life has to go on

00:25:02.960 --> 00:25:05.180
without knowing about them.

00:25:05.200 --> 00:25:10.000
Consequently,
SBP3 is defining ways for bridge-aware

00:25:10.020 --> 00:25:14.960
devices to continue operation
across a bus reset without having

00:25:14.960 --> 00:25:19.190
to stop like they do today and get
reconnected and restart their orbs.

00:25:19.200 --> 00:25:23.760
This means that even if you
don't have a 1394.1 bridged

00:25:23.760 --> 00:25:27.960
environment with multiple buses,
your device may get a significant

00:25:27.960 --> 00:25:34.200
performance and robustness improvement
just from using the .1 awareness in SBP3.

00:25:34.200 --> 00:25:35.200
So, that's the first step.

00:25:35.200 --> 00:25:40.200
We're looking forward to that as another
big improvement to that kind of device.

00:25:40.200 --> 00:25:45.190
Finally, SBP3 is working to define
isochronous services.

00:25:45.200 --> 00:25:48.200
This is by far the most
complex part of the work.

00:25:48.200 --> 00:25:54.520
Today, if you run, for example, iMovie,
and you connect a FireWire hard

00:25:54.710 --> 00:25:58.640
drive and a FireWire DV camera,
and you capture video from

00:25:58.640 --> 00:26:02.180
the camera to the hard drive,
the video actually moves

00:26:02.180 --> 00:26:06.270
into the Macintosh first,
and then cross FireWire a

00:26:06.270 --> 00:26:09.200
second time onto the hard drive.

00:26:09.200 --> 00:26:11.200
That works, but it's inefficient.

00:26:11.200 --> 00:26:14.200
It uses the bus twice for every packet.

00:26:14.200 --> 00:26:19.200
A hard drive built with SBP3,
capable of isochronous transfer,

00:26:19.200 --> 00:26:23.190
may be able to directly exchange
video with the camcorder,

00:26:23.240 --> 00:26:27.000
yielding higher performance,
greatly reduced CPU and

00:26:27.000 --> 00:26:30.650
memory demands on the host,
and greatly increased

00:26:30.650 --> 00:26:33.200
efficiency of the 1394 bus.

00:26:33.330 --> 00:26:36.200
This work is the most
complicated part of SBP3,

00:26:36.200 --> 00:26:39.910
and it's still being hashed out,
but it has great potential.

00:26:46.380 --> 00:26:47.980
Okay,
the next part of the presentation is

00:26:48.080 --> 00:26:50.280
FireWire Do's and Don'ts for 2002.

00:26:50.340 --> 00:26:53.700
These are things that we've
learned working with developers

00:26:53.700 --> 00:26:56.320
making our own products,
things that are helpful,

00:26:56.380 --> 00:26:58.300
and things you want to avoid.

00:26:58.320 --> 00:27:00.570
So we'll start with the Do's.

00:27:00.730 --> 00:27:02.030
Innovate.

00:27:02.130 --> 00:27:04.280
The FireWire standard is really rich.

00:27:04.280 --> 00:27:10.100
It provides a lot of performance,
capability, service, flexibility.

00:27:10.210 --> 00:27:12.570
There are some great products
out there that you can make.

00:27:12.620 --> 00:27:14.990
Look at the iPod, for example.

00:27:15.790 --> 00:27:19.300
Developers should find
new ways to use FireWire.

00:27:19.340 --> 00:27:23.040
We're doing pretty well on
hard drives and DV cameras.

00:27:23.040 --> 00:27:26.130
There's a lot more clever
things that you can do.

00:27:26.530 --> 00:27:30.450
Use FireWire to make products
faster than they were before.

00:27:30.450 --> 00:27:32.440
Or use it to make products work together.

00:27:32.440 --> 00:27:34.500
iMovie was a good example of that.

00:27:34.500 --> 00:27:37.090
A FireWire hard drive,
a FireWire TV camera,

00:27:37.440 --> 00:27:42.590
together they can do more than
either one can do by themselves.

00:27:42.600 --> 00:27:46.580
Because FireWire is a peer-to-peer bus,
and because FireWire is suitable for

00:27:46.580 --> 00:27:50.120
so many different kinds of devices,
there's a great deal of potential

00:27:50.120 --> 00:27:52.610
out there to find two devices,
figure out a new way for

00:27:52.620 --> 00:27:55.530
them to work together,
and make a new product around that.

00:27:57.440 --> 00:28:00.430
But while you're out there innovating,
try to stay focused.

00:28:00.690 --> 00:28:05.400
We don't want you to innovate on ways of
deviating from the official standards.

00:28:05.430 --> 00:28:06.860
As I said, it's a peer-to-peer bus.

00:28:06.930 --> 00:28:10.010
This means everybody on that bus
has to play according to the rules

00:28:10.100 --> 00:28:12.100
or things break down pretty quick.

00:28:12.180 --> 00:28:15.880
So if you find that you want
to do something that the

00:28:15.880 --> 00:28:19.500
spec just doesn't cover,
participate in the standards process.

00:28:19.500 --> 00:28:23.140
It's an open community
of very talented people.

00:28:23.200 --> 00:28:24.350
What you need can be added.

00:28:24.560 --> 00:28:26.940
Or even more likely,
what you need is probably

00:28:26.940 --> 00:28:30.200
already there and you just can't
tell it from reading the spec.

00:28:30.300 --> 00:28:32.870
So please, before you think about
trying to do something that

00:28:32.880 --> 00:28:35.300
doesn't comply with the spec,
talk with us.

00:28:35.300 --> 00:28:37.600
Come to 1394 events.

00:28:37.600 --> 00:28:39.000
You can probably do it in the spec.

00:28:39.000 --> 00:28:42.000
And everyone will be a
lot happier if you do.

00:28:44.490 --> 00:28:48.000
This has been a very important
topic for the last year:

00:28:48.090 --> 00:28:50.860
test your products with bus resets.

00:28:50.950 --> 00:28:54.410
The concept of a bus reset
is widely misunderstood.

00:28:54.530 --> 00:28:58.360
On FireWire,
a bus reset is an ordinary event that

00:28:58.460 --> 00:29:00.350
indicates a perfectly healthy bus.

00:29:00.460 --> 00:29:03.020
It's like a packet collision in Ethernet.

00:29:03.040 --> 00:29:05.960
It happens routinely,
causes no harm as long as everyone

00:29:05.960 --> 00:29:07.500
complies with the standard.

00:29:07.570 --> 00:29:09.040
It's not an error.

00:29:09.140 --> 00:29:13.280
It's not an excuse to tell
the user something went wrong.

00:29:13.280 --> 00:29:16.490
A bus reset could happen because
a new device was connected.

00:29:16.590 --> 00:29:18.770
FireWire is hot-pluggable,
so the user is allowed

00:29:18.770 --> 00:29:20.190
to do that at any time.

00:29:20.270 --> 00:29:23.430
A device could be removed
for the same reason.

00:29:23.650 --> 00:29:25.840
Even if a device remains
connected to the bus,

00:29:25.920 --> 00:29:28.610
it might be turned on or turned off,
and either of those

00:29:28.610 --> 00:29:30.060
could cause a bus reset.

00:29:30.060 --> 00:29:32.780
The device might even change state.

00:29:32.800 --> 00:29:36.960
For example, some of the video cameras,
if you change it from

00:29:36.960 --> 00:29:40.960
camera mode to VCR mode,
it's never losing power,

00:29:40.960 --> 00:29:45.310
but its operational state has changed,
and a bus reset may result in order

00:29:45.610 --> 00:29:49.550
to alert devices on the bus that
its capabilities have changed.

00:29:50.060 --> 00:29:53.960
So the point is, your customers may have
bus resets on their bus,

00:29:53.960 --> 00:29:57.650
even though they're using the
bus in completely legal ways.

00:29:57.660 --> 00:30:01.280
So your devices and your software
need to react accordingly.

00:30:01.320 --> 00:30:04.450
If you follow the standards,
it's not a problem.

00:30:04.460 --> 00:30:07.850
For example,
SBP2 defines exactly how to continue

00:30:07.940 --> 00:30:10.280
your operation across a bus reset.

00:30:10.280 --> 00:30:12.860
But you do need to pay attention to that.

00:30:12.860 --> 00:30:13.640
It's not automatic.

00:30:15.590 --> 00:30:17.990
And equally important,
test your devices and your

00:30:17.990 --> 00:30:19.460
software with bus resets.

00:30:19.540 --> 00:30:24.220
We are going to be providing a tool
in one of the upcoming SDKs that will

00:30:24.220 --> 00:30:27.650
generate bus resets automatically,
so this should make it much easier

00:30:27.650 --> 00:30:29.290
to run this kind of testing.

00:30:29.380 --> 00:30:33.740
Very important, if you do these things,
you'll have a much more reliable,

00:30:33.970 --> 00:30:34.990
robust device.

00:30:35.020 --> 00:30:39.560
You'll get better reviews,
fewer phone calls, everyone wins.

00:30:40.940 --> 00:30:43.020
Next, operate on cable power.

00:30:43.060 --> 00:30:45.240
This is one of FireWire's
strongest areas.

00:30:45.450 --> 00:30:49.890
There's no other bus technology out
there in common computers that provides

00:30:49.890 --> 00:30:51.890
anywhere near this kind of power.

00:30:51.950 --> 00:30:53.500
I talked before about the iPod.

00:30:53.500 --> 00:30:55.900
It shows how to really
take advantage of that.

00:30:55.900 --> 00:31:00.890
Apple products, especially our desktops,
provide lots of power on FireWire.

00:31:00.890 --> 00:31:02.860
So take advantage of it.

00:31:02.900 --> 00:31:05.400
If your device is going to
be connected by FireWire,

00:31:05.400 --> 00:31:07.890
maybe you don't need a
separate power adapter.

00:31:07.890 --> 00:31:10.900
On the iPod,
FireWire is the only power input.

00:31:10.900 --> 00:31:12.900
There is no DC power jack.

00:31:12.900 --> 00:31:14.900
You have to use FireWire to charge it.

00:31:17.410 --> 00:31:23.280
Keep in mind that USB does provide power,
but it's limited to, at most, 2.5 watts,

00:31:23.280 --> 00:31:25.730
and in many cases, just 0.5 watts.

00:31:25.730 --> 00:31:28.120
For example,
the USB ports on our keyboards

00:31:28.130 --> 00:31:30.000
provide only 0.5 watts.

00:31:30.000 --> 00:31:34.380
That's not a good place to connect
some device that needs a lot of power.

00:31:35.040 --> 00:31:39.370
The FireWire ports on our products
provide anywhere from 6 to 15 watts.

00:31:39.610 --> 00:31:41.790
Generally,
the battery-powered portable ones

00:31:41.790 --> 00:31:43.400
are at the low end of that range.

00:31:43.570 --> 00:31:47.120
The desktops, the iMacs,
are at the high end of that range.

00:31:51.050 --> 00:31:55.620
attend 1394 Trade Association PlugFests.

00:31:55.720 --> 00:31:58.600
This is a group we haven't
stressed quite as much before,

00:31:58.600 --> 00:32:00.700
but they made a big change this year.

00:32:00.700 --> 00:32:04.200
They opened up their PlugFests
to non-member companies.

00:32:04.250 --> 00:32:12.370
The Trade Association is a group
of approximately 150 companies,

00:32:12.370 --> 00:32:12.370
all promoting 1394 in their
products and in the industry.

00:32:13.870 --> 00:32:17.700
They hold plug fests about four times
a year where you can test a device

00:32:17.740 --> 00:32:22.580
against a broad collection of devices
from other participating companies.

00:32:22.640 --> 00:32:25.140
But in the past,
it was limited to member companies,

00:32:25.140 --> 00:32:28.240
and membership costs
$4,000 to $8,000 a year.

00:32:28.330 --> 00:32:31.780
So for an independent developer,
that might have been prohibitive.

00:32:31.860 --> 00:32:33.180
These are now open to everybody.

00:32:33.250 --> 00:32:35.620
You can sign up as a guest.

00:32:35.810 --> 00:32:37.800
You can learn a lot at
one of these events.

00:32:37.910 --> 00:32:41.860
You can meet engineers, software,
hardware, and testing engineers from

00:32:41.860 --> 00:32:43.580
other 1394 developers.

00:32:43.670 --> 00:32:47.620
You can test against prototype devices,
or you can test against devices that

00:32:47.620 --> 00:32:50.410
you might not otherwise encounter.

00:32:51.160 --> 00:32:53.880
The Trade Association is
deploying standard test suites,

00:32:53.880 --> 00:32:57.690
for example, a base test that will test
whether you have a PHY,

00:32:57.690 --> 00:33:01.000
a configuration ROM,
all the basic 1394 aspects.

00:33:01.120 --> 00:33:06.800
Then they will deploy more sophisticated
suites for things like AFI or SBP.

00:33:07.150 --> 00:33:09.390
Since this is now open,
it's a really good resource.

00:33:09.430 --> 00:33:10.540
Apple goes to all of these.

00:33:10.540 --> 00:33:12.330
We learn a lot every time we go.

00:33:12.340 --> 00:33:14.020
We'd definitely like to
encourage you to attend these,

00:33:14.030 --> 00:33:14.300
too.

00:33:14.300 --> 00:33:19.390
Of course,
we learn a lot about other people's bugs,

00:33:19.400 --> 00:33:21.300
not our own.

00:33:25.900 --> 00:33:28.270
As a developer,
one of the most valuable things you can

00:33:28.280 --> 00:33:32.100
do is attend the 1394 Trade Association's
Developers Conference.

00:33:32.270 --> 00:33:33.520
This is coming up in June.

00:33:33.630 --> 00:33:36.770
It's being hosted at
Microsoft up in Redmond.

00:33:36.870 --> 00:33:38.690
We did this last year
together with Microsoft.

00:33:38.750 --> 00:33:39.900
We had a really good turnout.

00:33:39.900 --> 00:33:43.010
We had excellent technical presentations.

00:33:43.310 --> 00:33:46.270
The value of this is that it's a
completely different focus than

00:33:46.320 --> 00:33:49.040
what you'd get here at WWDC.

00:33:49.110 --> 00:33:51.500
This is mostly a
hardware-oriented conference.

00:33:51.610 --> 00:33:55.180
There's presentations on
protocols and software as well,

00:33:55.240 --> 00:33:59.940
but you can get access to
information about board design,

00:33:59.960 --> 00:34:03.870
silicon selection, things that we just
don't offer here at WWDC.

00:34:03.940 --> 00:34:06.960
You also get a very different
perspective because it's extensively

00:34:07.050 --> 00:34:11.940
participated in by PC vendors and people
from the general Wintel community.

00:34:12.010 --> 00:34:15.030
FireWire, as you know,
is an open industry standard.

00:34:15.130 --> 00:34:18.460
It's completely cross-platform
between Mac and PC.

00:34:18.590 --> 00:34:23.140
So you can design devices
for Mac and sell them to

00:34:23.140 --> 00:34:26.390
customers who buy PCs as well.

00:34:26.480 --> 00:34:31.380
Perhaps the most interesting session at
DEVCON was the Ask the Experts panel.

00:34:31.440 --> 00:34:33.860
We had a free open Q&A with both
the experts and the developers.

00:34:33.860 --> 00:34:36.310
Both Apple and
Microsoft answered questions,

00:34:36.340 --> 00:34:38.330
sometimes agreeing, sometimes not.

00:34:38.400 --> 00:34:40.480
It was very interesting.

00:34:40.480 --> 00:34:43.150
We learned a lot about what
people are trying to do with

00:34:43.250 --> 00:34:45.310
FireWire from their questions.

00:34:45.460 --> 00:34:49.420
So I would recommend anyone interested
in making FireWire devices seriously

00:34:49.530 --> 00:34:51.480
consider attending this event.

00:34:52.760 --> 00:34:54.220
Okay, now let's move into the don'ts.

00:34:54.220 --> 00:34:56.260
This one's not actually new this year.

00:34:56.260 --> 00:34:57.180
We knew this all along.

00:34:57.180 --> 00:34:59.320
Don't use this four-pin connector.

00:34:59.320 --> 00:35:01.660
This is what you find on DV cameras.

00:35:01.660 --> 00:35:03.760
It was not in the 1394 standard.

00:35:03.760 --> 00:35:07.840
It was added under some protest
subsequent to the standard.

00:35:07.840 --> 00:35:10.280
It provides no power,
so right off the bat,

00:35:10.280 --> 00:35:11.660
it's pretty useless.

00:35:11.660 --> 00:35:13.200
It's awkward.

00:35:13.200 --> 00:35:15.430
If you've tried plugging
one of these things in,

00:35:15.430 --> 00:35:18.740
it's so small, it's so hard to line up,
it's really not easy to use.

00:35:19.000 --> 00:35:20.600
And finally, it's fragile.

00:35:20.860 --> 00:35:24.020
This is a pretty subtle point, but...

00:35:24.320 --> 00:35:27.720
This connector puts the parts that break,
the spring-loaded parts

00:35:27.720 --> 00:35:29.920
that have to move,
they're in the socket,

00:35:29.920 --> 00:35:33.900
which means if you jam the connector in
the wrong way and you break something,

00:35:33.940 --> 00:35:35.660
you've broken the socket.

00:35:35.660 --> 00:35:37.090
Your cable will be fine.

00:35:37.100 --> 00:35:39.480
Your camera may have
to go in for repairs.

00:35:39.480 --> 00:35:43.580
The six-pin connector that we use in
all of our products is the opposite.

00:35:43.580 --> 00:35:46.020
The spring-loaded parts are in the cable.

00:35:46.020 --> 00:35:50.070
The socket on our product has all of
the fixed parts that don't break off.

00:35:50.150 --> 00:35:53.810
So by and large, if you plug something
in wrong and break it,

00:35:53.880 --> 00:35:54.170
it's going to break off.

00:35:54.260 --> 00:35:55.340
You'll have damaged the cable.

00:35:55.390 --> 00:35:58.290
You can throw the cable away
and keep using your Mac or your

00:35:58.370 --> 00:36:00.460
iPod with some other cable.

00:36:00.560 --> 00:36:03.520
So there's really a lot of problems
with the four-pin connector.

00:36:03.580 --> 00:36:05.700
You don't want to use it.

00:36:05.740 --> 00:36:08.670
Even if you don't use cable
power in your product,

00:36:08.670 --> 00:36:10.520
use the six-pin connector.

00:36:10.610 --> 00:36:12.170
Power is always optional.

00:36:12.260 --> 00:36:16.100
You can use the six-pin connector
even if your device ignores the power.

00:36:19.100 --> 00:36:22.250
If you're a hardware vendor,
please don't design your products

00:36:22.390 --> 00:36:24.800
just using silicon vendor data sheets.

00:36:24.920 --> 00:36:30.440
1394 is a fairly rich, it's a very rich,
fairly complex standard.

00:36:30.540 --> 00:36:36.840
The vendor's data sheet for
their PHY silicon or their

00:36:36.840 --> 00:36:38.190
LINQ silicon is not going to tell
you everything that you need to

00:36:38.190 --> 00:36:38.190
know to make a successful product.

00:36:38.270 --> 00:36:39.080
Read the standard.

00:36:39.200 --> 00:36:40.760
Pay attention to the standard.

00:36:40.830 --> 00:36:43.440
Make sure you understand
what you're doing.

00:36:46.190 --> 00:36:50.820
please don't ask us to work around
somebody else's mistakes you guys are

00:36:50.820 --> 00:36:55.120
great about this compared with other
bus technologies that i won't name

00:36:55.190 --> 00:36:59.680
fire by products are really very good
compliance with the spec is very high

00:36:59.760 --> 00:37:04.050
we want to keep it that way okay it's
important it's a peer-to-peer bus

00:37:04.050 --> 00:37:07.480
all these devices are doing different
things they have to play by the rules

00:37:07.770 --> 00:37:12.260
or it's not going to work if something
is broken maybe a software workaround

00:37:12.370 --> 00:37:16.450
would be possible for that device but
it may have impact on everyone else on

00:37:16.450 --> 00:37:20.860
the bus so occasionally uh... somebody
does ask us to fix something that they

00:37:20.920 --> 00:37:25.900
broke or they made a bad choice we have
very simple answer for that which is no

00:37:26.350 --> 00:37:27.600
There's great products out there.

00:37:27.600 --> 00:37:28.990
You've all been doing a really good job.

00:37:29.000 --> 00:37:30.040
Let's keep it that way.

00:37:30.040 --> 00:37:35.980
And to encourage you to keep it that way,
we are not fixing mistakes like that.

00:37:37.820 --> 00:37:41.640
Finally, don't think of USB 2.0 as
being equal to FireWire.

00:37:41.640 --> 00:37:44.180
There's definitely some similarities.

00:37:44.310 --> 00:37:47.410
USB 2.0's high speed delivers
about the same performance as

00:37:47.410 --> 00:37:49.480
today's S400 FireWire ports.

00:37:49.480 --> 00:37:51.920
But that's where the similarities end.

00:37:51.920 --> 00:37:55.820
Operating system support for
USB 2.0 is extremely limited.

00:37:55.820 --> 00:38:00.180
Power on USB 2.0 is extremely
limited compared with FireWire.

00:38:00.180 --> 00:38:04.430
The installed base of USB can be viewed
as a liability rather than an asset,

00:38:04.430 --> 00:38:07.520
as I described before
talking about the cameras.

00:38:07.520 --> 00:38:11.600
That installed base is all slow
host controllers that's going to

00:38:11.600 --> 00:38:16.350
provide low performance even if you
plug in a high-speed capable device.

00:38:16.480 --> 00:38:19.380
So as developers,
you may want to consider avoiding that.

00:38:19.380 --> 00:38:22.720
You may want to consider whether
FireWire is really a better choice for

00:38:22.720 --> 00:38:24.770
your product and for your customers.

00:38:26.900 --> 00:38:29.660
Okay, now I'd like to welcome
Michael Teener back to

00:38:29.780 --> 00:38:31.670
Apple Computer after about five years.

00:38:31.700 --> 00:38:33.740
He's going to talk to us about 1394b.

00:38:33.740 --> 00:38:34.620
Michael?

00:38:34.620 --> 00:38:36.460
Thanks, Eric.

00:38:40.820 --> 00:38:42.760
It's good to be back.

00:38:42.790 --> 00:38:43.890
You people laugh at the jokes.

00:38:44.040 --> 00:38:46.360
When in heck they don't
laugh at the jokes.

00:38:46.410 --> 00:38:46.920
uh...

00:38:48.300 --> 00:40:44.200
[Transcript missing]

00:40:44.770 --> 00:40:47.740
So what we're going to do
is do a little demo here.

00:40:47.740 --> 00:40:51.310
And over here, what the gang is doing is
they're going to show you that

00:40:51.340 --> 00:40:53.180
little demo we did earlier.

00:40:53.200 --> 00:40:57.060
That was running over
glass optical fiber.

00:40:57.130 --> 00:41:00.160
So what we're going to do is turn
it on and now we're going to start

00:41:00.160 --> 00:41:02.580
showing you what this really means.

00:41:02.600 --> 00:41:05.090
What we've got here is
a glass optical fiber.

00:41:05.090 --> 00:41:10.570
Remember glass optical fiber when running
full speed can go 3.2 gigabit a second,

00:41:10.660 --> 00:41:13.740
but we don't have a 3.2
gigabit a second here,

00:41:13.760 --> 00:41:15.820
so this is only running at S400.

00:41:15.820 --> 00:41:20.700
But as the guys unwind it here, it,
remember it's 100 meters.

00:41:20.700 --> 00:41:22.300
It can go 100 meters.

00:41:22.300 --> 00:41:24.700
The back of this room is about 20 meters.

00:41:24.740 --> 00:41:27.740
So they could probably go out to
the lunch room and we can do a,

00:41:27.740 --> 00:41:29.920
we're going to do a
David Letterman thing here for you.

00:41:29.920 --> 00:41:33.200
And that's one hop.

00:41:33.200 --> 00:41:36.350
Remember, one hop,
you can put a hub out there and keep

00:41:36.350 --> 00:41:38.200
on going as far as you want to go.

00:41:38.200 --> 00:41:40.020
It's pretty extensive.

00:41:40.020 --> 00:41:42.370
That could be, as I said,
it could be glass optical fiber,

00:41:42.460 --> 00:41:45.400
it could be a category five
unshielded twisted pair.

00:41:45.520 --> 00:41:49.460
Same stuff that we use on ethernet.

00:41:49.460 --> 00:41:53.120
As a matter of fact, we use two pairs,
ethernet,

00:41:53.130 --> 00:41:59.510
100 megabit ethernet uses two pairs,
so you could run them on the same

00:42:00.510 --> 00:42:02.640
It looks like we're going
to come back right now.

00:42:02.780 --> 00:42:05.340
But we don't have time
here to go all the way.

00:42:05.520 --> 00:42:08.860
So if we get back to
the presentation here,

00:42:08.950 --> 00:42:12.870
I think we're done with David Letterman.

00:42:18.720 --> 00:42:21.220
So, what do we see there?

00:42:21.280 --> 00:42:25.760
Well, we start out with a Mac, as normal,
and we went from the Mac.

00:42:25.860 --> 00:42:30.010
This Mac, by the way, is a, you know,
off-the-shelf, standard,

00:42:30.020 --> 00:42:32.380
last-year model iBook.

00:42:32.400 --> 00:42:34.220
Nothing fancy.

00:42:34.220 --> 00:42:37.220
Thank you, Shana.

00:42:37.250 --> 00:42:40.080
We have a hub.

00:42:40.110 --> 00:42:46.300
This is a little hub device
that can carry plastic.

00:42:46.430 --> 00:42:50.210
This one's a glass optical fiber
with with two A ports on it.

00:42:50.470 --> 00:42:55.850
goes out on glass fiber
out to another hub,

00:42:55.850 --> 00:42:58.740
which is hidden in Eric's hand there.

00:42:59.010 --> 00:43:01.460
Notice the clever packaging we use.

00:43:01.570 --> 00:43:04.860
And out to the camera
with the standard one.

00:43:04.950 --> 00:43:12.460
But we had this reel of cable in there,
showing a little bit more distance.

00:43:12.570 --> 00:43:16.180
Well, it is glass optical fiber,
so we couldn't carry the power.

00:43:16.370 --> 00:43:19.890
They wouldn't allow us to launch enough
optical power down there to do it.

00:43:20.160 --> 00:43:23.100
So we have a battery hidden in there.

00:43:23.240 --> 00:43:27.570
So are you going to hold up the battery?

00:43:28.200 --> 00:43:29.950
I'm going to break the demo
here by holding up the battery.

00:43:29.960 --> 00:43:32.520
Notice the clever wiring
system that the guys did.

00:43:35.110 --> 00:43:37.360
Now, what did we do?

00:43:37.430 --> 00:43:40.270
What has 1394b got to
it that's kind of cool,

00:43:40.270 --> 00:43:41.760
besides the fact that it's fast?

00:43:42.170 --> 00:43:44.970
One of the key things to get
it to go this fast is we used

00:43:44.970 --> 00:43:47.800
something called BOSS arbitration.

00:43:47.800 --> 00:43:51.950
And it's much more efficient
than 1394a and the Legacy.

00:43:52.220 --> 00:43:53.990
Well, a little sidebar here.

00:43:53.990 --> 00:43:54.600
I'm going to go over here.

00:43:54.610 --> 00:43:55.080
This sidebar.

00:43:55.080 --> 00:43:56.000
Okay.

00:43:56.040 --> 00:43:56.390
Sidebar.

00:43:56.400 --> 00:43:57.820
BOSS.

00:43:57.820 --> 00:44:00.720
That stands for
Bus Owner Supervisor Selector.

00:44:00.720 --> 00:44:03.340
And indeed, as you suspected,
we came up with that acronym

00:44:03.340 --> 00:44:04.970
after we invented the word BOSS.

00:44:05.000 --> 00:44:08.630
boss, I'll go way over here.

00:44:09.190 --> 00:44:10.800
Okay, I'm in the blue part of the screen.

00:44:10.800 --> 00:44:15.240
BOSS was an acronym picked by
the engineers at Intel that

00:44:15.240 --> 00:44:18.610
were working with us on this,
and it's very radical by Intel standards

00:44:18.610 --> 00:44:20.910
because it is a four-letter acronym.

00:44:20.920 --> 00:44:22.190
Very important.

00:44:22.230 --> 00:44:23.820
This is a radical bunch
of Intel engineers.

00:44:23.840 --> 00:44:26.680
Okay, back into the center.

00:44:26.680 --> 00:44:30.760
The key thing about what
this BOSS arbitration did,

00:44:30.760 --> 00:44:34.450
which I had a minor part in inventing,
mostly it was invented

00:44:34.450 --> 00:44:39.230
by people from Intel,
is we came up with something that

00:44:40.610 --> 00:44:43.580
pipelines the arbitration,
which means that instead

00:44:43.710 --> 00:44:46.140
of sending a packet,
arbitrating for the bus,

00:44:46.170 --> 00:44:48.260
finding out who owns it,
send another packet,

00:44:48.330 --> 00:44:50.430
is we figured out a way to send a packet.

00:44:50.500 --> 00:44:52.420
While that packet's being sent,
we're arbitrating for the

00:44:52.420 --> 00:44:54.140
bus for the next packet.

00:44:54.250 --> 00:44:57.270
So as soon as we finish sending a packet,
we know who's the next guy

00:44:57.270 --> 00:45:00.020
to send and they can send,
which means there's very

00:45:00.020 --> 00:45:01.650
few gaps between packets.

00:45:01.770 --> 00:45:08.140
The result is we get about 97%, a
bit better than 97%, of the bandwidth

00:45:08.660 --> 00:45:13.400
at S800 is available for data,
using big packets, of course,

00:45:13.480 --> 00:45:16.140
4k byte writes.

00:45:16.220 --> 00:45:17.770
That's very efficient.

00:45:17.770 --> 00:45:21.840
1394a is not bad,
but it's closer to 90% efficient.

00:45:23.560 --> 00:45:25.500
Well, 1394b also has a new connector.

00:45:25.500 --> 00:45:27.130
Sorry about that, guys.

00:45:27.130 --> 00:45:29.000
I know you love connectors.

00:45:29.050 --> 00:45:35.380
Today's existing 1394 cables cannot
run at 800 megabits a second.

00:45:35.420 --> 00:45:38.340
They were designed to run
400 megabits a second.

00:45:38.410 --> 00:45:40.500
Furthermore,
the existing connector has a great

00:45:40.500 --> 00:45:43.940
deal of difficulty running faster
than about 400 megabits a second.

00:45:44.030 --> 00:45:46.000
So we figured if we're going
to make the speed change,

00:45:46.000 --> 00:45:47.370
we're really going to go for it.

00:45:47.460 --> 00:45:49.800
So we designed new media
and a new connector.

00:45:50.100 --> 00:45:52.820
This connector and media
is capable of running,

00:45:52.820 --> 00:45:56.700
and in fact has been tested,
at 3.2 gigabit a second.

00:45:56.840 --> 00:46:00.370
So, one more cable,
but at least you're going to get

00:46:00.500 --> 00:46:02.090
some more lifetime out of it.

00:46:02.460 --> 00:46:06.300
So,
in order to support this new connector,

00:46:06.300 --> 00:46:07.720
we have three new cables.

00:46:07.720 --> 00:46:10.800
We have one that uses the
9- to the 4-pin connector.

00:46:10.880 --> 00:46:12.340
I don't recommend this
for all the right reasons,

00:46:12.340 --> 00:46:14.860
but you've got to connect to
those old camcorders somehow.

00:46:14.860 --> 00:46:17.840
The 9- to 6-pin connector,
which carries power,

00:46:17.900 --> 00:46:21.700
the 9-pin connector does have power,
same kind, and a 9-to-9,

00:46:21.700 --> 00:46:26.460
which is what you need to do to go to the
full high-speed capability of the system.

00:46:27.720 --> 00:46:32.150
Well, I said there's three new cables,
but actually a typical customer,

00:46:32.150 --> 00:46:35.380
consumer only needs one new cable,
and I'll show you what I mean.

00:46:35.380 --> 00:46:37.210
This is the way things work right now.

00:46:37.220 --> 00:46:40.180
You've got a computer, a disk, a scanner,
a camera, for example.

00:46:40.180 --> 00:46:44.570
And what you do is use a 6-to-6 cable
going between the computer and the disk,

00:46:44.570 --> 00:46:47.260
and a 6-to-6 between
the disk and the camera,

00:46:47.390 --> 00:46:50.620
or a scanner, and, well, darn,
there's that 6-to-4 connector

00:46:50.700 --> 00:46:52.060
to go out to your camcorder.

00:46:53.760 --> 00:46:58.240
Well, in the hypothetical future,
the computer could be replaced

00:46:58.240 --> 00:47:00.460
by one that supports 1394b.

00:47:00.490 --> 00:47:04.600
It has a 9-pin connector in it,
but everything else stays the same.

00:47:04.670 --> 00:47:05.930
So you can use the existing cables.

00:47:06.030 --> 00:47:09.660
The one place for your
new one is to go here.

00:47:09.710 --> 00:47:11.860
There's a 9-6 pin connector.

00:47:12.020 --> 00:47:15.100
Of course, if the customer goes out and
buys new stuff everywhere,

00:47:15.110 --> 00:47:18.160
it can have a new cable coming with it,
and that could be a 9-9 if it

00:47:18.160 --> 00:47:23.130
was a hypothetical 800 megabit
or 1.6 gigabit disk drive.

00:47:23.630 --> 00:47:27.740
So, where can 1394b be used in products?

00:47:27.750 --> 00:47:31.140
It's key to think of 1394b as a package.

00:47:31.150 --> 00:47:35.400
The electronics and the
connector are tied together.

00:47:35.760 --> 00:47:36.960
You can't separate them.

00:47:36.980 --> 00:47:39.080
The new connector,
the nine-pin connector,

00:47:39.110 --> 00:47:43.460
means that there's a new PHY, the new,
what's called, beta-capable PHY in it.

00:47:43.480 --> 00:47:47.070
A new PHY, one of those new things,
has to be used with a new connector.

00:47:47.120 --> 00:47:48.740
Don't mix the two.

00:47:48.750 --> 00:47:49.920
It won't work.

00:47:49.930 --> 00:47:53.720
There's all kinds of scenarios I can
show that will lead to everything from

00:47:53.750 --> 00:47:58.960
inconvenience to smoking computers,
so don't do that.

00:47:59.010 --> 00:48:03.700
1394b is an official standard as of now.

00:48:03.710 --> 00:48:04.980
It passed its final ballot.

00:48:04.980 --> 00:48:08.160
The technical work was all
finished on January of this year.

00:48:08.180 --> 00:48:11.860
Final draft revision is 1.33.

00:48:11.860 --> 00:48:14.340
It was approved by the
IEEE for actual publication,

00:48:14.340 --> 00:48:15.540
which means it's done.

00:48:15.740 --> 00:48:19.720
It's actually called IEEE 1394b-2002.

00:48:19.750 --> 00:48:23.400
And they're right in the middle of
actually getting it so you'll be

00:48:23.400 --> 00:48:25.990
able to order it on their website.

00:48:26.520 --> 00:48:29.860
What kind of product opportunities
are there in the short term?

00:48:29.970 --> 00:48:33.610
Well, certainly you can do PCI cards
for all those older Macs.

00:48:33.740 --> 00:48:37.290
It can be 800 or, you know,
basically my suggestion

00:48:37.290 --> 00:48:41.160
is get the fastest one you
can when you ship the card.

00:48:41.270 --> 00:48:45.920
Another one which is really
interesting are these hubs.

00:48:46.050 --> 00:48:51.440
Those hubs, for either unshielded twisted
pair or one of the optical fibers,

00:48:51.560 --> 00:48:56.480
are useful even for legacy products,
which means that if you could

00:48:56.480 --> 00:49:00.230
buy the parts right now,
you could instantly have a

00:49:00.570 --> 00:49:05.290
network of Macs in the peripherals
going out 100 meters or more.

00:49:05.870 --> 00:49:10.040
So those hubs are useful for
legacy products right now.

00:49:10.070 --> 00:49:11.940
They're really useful for
something in the future,

00:49:12.050 --> 00:49:13.880
but they're really needed right now.

00:49:13.960 --> 00:49:19.440
Cables, the 9-4, 9-6, and 9-9,
and the long-haul cables.

00:49:19.650 --> 00:49:23.860
The good news is the
long-haul cables are standard.

00:49:23.900 --> 00:49:26.180
That glass optical fiber
connector in there,

00:49:26.230 --> 00:49:30.320
it's the same one used for gigabit
ethernet when it's running optical fiber.

00:49:30.360 --> 00:49:33.670
That plastic optical fiber,
well it's new because nobody

00:49:33.680 --> 00:49:39.180
does plastic optical fiber,
but the UTP5 is a standard RJ45.

00:49:39.190 --> 00:49:41.280
So not much new that
you have to do there.

00:49:41.310 --> 00:49:46.790
Storage,
it turns out ATA drives already are

00:49:46.950 --> 00:49:51.360
fast enough that a 400 megabit a
second connection is not good enough.

00:49:51.410 --> 00:49:54.390
You can saturate on one drive.

00:49:54.700 --> 00:49:57.220
Now, that's a peak rate,
but really it's one drive.

00:49:57.270 --> 00:50:01.060
So you really want to go to
800 megabits on your hard disk

00:50:01.060 --> 00:50:02.970
things as soon as possible.

00:50:02.980 --> 00:50:06.550
In fact, my buddies in the business say,
in about a year and a half

00:50:06.640 --> 00:50:08.490
they're going to need that 1.6,
so please get the

00:50:08.500 --> 00:50:10.160
silicon ready forthwith.

00:50:10.170 --> 00:50:12.000
But you need 800 as soon as possible.

00:50:13.400 --> 00:50:16.020
Another big product,
and indeed where people are actually

00:50:16.020 --> 00:50:20.040
shipping things that aren't quite 1394b,
but they needed to ship them

00:50:20.040 --> 00:50:23.240
anyway because they needed it,
was professional networks.

00:50:23.330 --> 00:50:27.500
Some of my friends at a company
called Amion Video Networks have

00:50:27.550 --> 00:50:31.280
a 800 megabit glass optical fiber
network that's used for HD studios,

00:50:31.340 --> 00:50:32.510
HD production equipment.

00:50:32.620 --> 00:50:35.140
Wimbledon, for instance,
was produced using that

00:50:35.230 --> 00:50:36.440
equipment this year.

00:50:36.540 --> 00:50:42.580
Yamaha is demonstrating various pro-level
things that would be highly enabled if

00:50:42.580 --> 00:50:46.330
they could get B-level products and hubs,
because that way they

00:50:46.330 --> 00:50:48.420
could build big studios,
they could build it for

00:50:48.560 --> 00:50:52.330
performance equipment,
digital projection, things like that.

00:50:52.510 --> 00:50:54.860
Finally, innovate.

00:50:55.160 --> 00:50:57.470
There are a lot of things
that I couldn't think of,

00:50:57.700 --> 00:50:59.940
that anybody at Apple probably
couldn't think of,

00:51:00.010 --> 00:51:00.630
that you can do.

00:51:00.900 --> 00:51:03.360
But remember, innovate but don't deviate.

00:51:03.410 --> 00:51:07.400
We don't believe in deviates
around here too much.

00:51:07.550 --> 00:51:11.940
So, I think that's it.

00:51:11.940 --> 00:51:15.880
I'll be around a little bit for people
that want to talk to me about this.

00:51:16.920 --> 00:51:19.020
But if there's anything
more on the B stuff,

00:51:19.090 --> 00:51:21.100
I'll be glad to answer that at that time.

00:51:21.100 --> 00:51:26.200
Okay, thank you, Michael.

00:51:32.130 --> 00:51:34.740
Not just Mike,
but we've got a bunch of really talented,

00:51:34.740 --> 00:51:36.300
smart people from Zyante.

00:51:36.300 --> 00:51:38.040
It's going to be a
really big boost for us.

00:51:38.060 --> 00:51:41.460
On the demo that we showed,
I'd like to thank Nunex for providing

00:51:41.560 --> 00:51:43.880
the fiber optic transceiver and cable.

00:51:43.910 --> 00:51:46.320
They are here at the show,
and you can visit them

00:51:46.650 --> 00:51:47.810
in the vendor area.

00:51:47.860 --> 00:51:49.750
So please go take a look
at what they've got.

00:51:51.570 --> 00:51:53.770
Okay,
we're getting close to time for Q&A,

00:51:53.920 --> 00:51:55.460
which is always my favorite part.

00:51:55.570 --> 00:52:00.470
But let's quickly recap the developer
resources that we make available to you.

00:52:00.530 --> 00:52:02.430
Apple has a big developer program.

00:52:02.430 --> 00:52:05.950
Go to developer.apple.com if you're
not already familiar with it.

00:52:05.960 --> 00:52:07.940
There's a lot there.

00:52:08.190 --> 00:52:11.270
First of all, Thursday this week we
are having a plug fest.

00:52:11.420 --> 00:52:13.900
That's where we get all the
FireWire devices together,

00:52:13.960 --> 00:52:15.940
we plug them in,
we see that they work just

00:52:15.940 --> 00:52:19.200
fine and don't have any bugs,
and then we just go eat and drink.

00:52:19.220 --> 00:52:20.360
That's Thursday.

00:52:20.420 --> 00:52:23.830
It is during the Apple Bash, which,
if the weather holds up,

00:52:23.830 --> 00:52:26.430
I believe is supposed to
be held back at Apple,

00:52:26.430 --> 00:52:28.200
just like we did last year.

00:52:28.200 --> 00:52:29.870
Last year this worked out great.

00:52:29.880 --> 00:52:32.850
If it is at Apple,
it's in a room called Garage,

00:52:33.050 --> 00:52:35.040
which is nicer than it sounds.

00:52:35.670 --> 00:52:37.160
It's above the cafeteria.

00:52:37.160 --> 00:52:38.220
It's a big conference room.

00:52:39.750 --> 00:52:41.420
Bring your FireWire devices.

00:52:41.460 --> 00:52:43.420
The whole FireWire engineering
team will be there.

00:52:43.420 --> 00:52:45.320
You can ask us questions.

00:52:45.370 --> 00:52:47.060
You can meet other FireWire developers.

00:52:50.020 --> 00:52:52.470
The 1394 Trade Association also
has PlugFests.

00:52:52.540 --> 00:52:54.560
I mentioned this before.

00:52:54.650 --> 00:52:56.130
These are much bigger events.

00:52:56.260 --> 00:52:58.990
Our PlugFest this week
will be a few hours.

00:52:59.100 --> 00:53:02.430
At the 1394 TA PlugFests, well,
they don't serve beer and food,

00:53:02.440 --> 00:53:05.370
but it runs for three days,
and you can test with a

00:53:05.420 --> 00:53:06.900
whole bunch of other devices.

00:53:06.900 --> 00:53:09.240
You do one-on-one testing
and a sort of melee,

00:53:09.270 --> 00:53:11.900
which is like the one
we'll be doing on Thursday,

00:53:11.900 --> 00:53:14.200
where everybody plugs in at once.

00:53:14.290 --> 00:53:16.910
There's one coming up soon
in August in Bellevue,

00:53:16.910 --> 00:53:17.790
Washington.

00:53:17.900 --> 00:53:20.600
There's one scheduled
for October in Taiwan.

00:53:20.700 --> 00:53:23.180
Another one next year somewhere
here on the West Coast.

00:53:23.290 --> 00:53:26.290
And then in April every year,
there's one in Tokyo.

00:53:26.350 --> 00:53:29.260
The Tokyo and the Taiwan ones
are especially big,

00:53:29.260 --> 00:53:32.620
representing a huge number
of developers over there.

00:53:32.790 --> 00:53:37.380
Apple attends all of these,
so we welcome you to do that, too.

00:53:39.340 --> 00:53:43.090
Just a few days ago,
the 1394 Trade Association agreed

00:53:43.090 --> 00:53:48.520
to accept an offer from Apple to
use our firewire logo with

00:53:48.520 --> 00:53:49.910
their compliance program.

00:53:49.910 --> 00:53:52.900
This is the compliance logo
that Apple has provided.

00:53:52.980 --> 00:53:54.430
I'm sure you'll recognize it.

00:53:54.430 --> 00:53:56.520
We've just added 1394 compliant.

00:53:56.580 --> 00:54:00.600
And the Trade Association is rolling
out a big compliance effort to award

00:54:00.600 --> 00:54:05.220
compliance logos to products that
pass testing at these plug fests.

00:54:05.220 --> 00:54:10.350
So this is a way to show your potential
customers that your product has actually

00:54:10.670 --> 00:54:12.980
been tested and is likely to work.

00:54:12.990 --> 00:54:14.340
This can't be obtained from Apple.

00:54:14.410 --> 00:54:17.300
This can only be obtained from
the 1394 Trade Association.

00:54:19.320 --> 00:54:23.040
If the Plugfest schedule that I showed
you is not convenient for you,

00:54:23.140 --> 00:54:25.820
you're ready sooner,
or you'd like to test with

00:54:25.820 --> 00:54:29.120
a little more privacy,
you may want to contact a company

00:54:29.120 --> 00:54:31.200
called Quantum Parametrics.

00:54:31.200 --> 00:54:34.600
It's the vendor that is being
used by the Trade Association to

00:54:34.620 --> 00:54:37.290
develop the tests in this program.

00:54:37.410 --> 00:54:42.880
And my expectation is that
Quantum Parametrics will also

00:54:43.000 --> 00:54:46.010
be able to run those tests on
your product and issue the logo.

00:54:48.490 --> 00:54:50.140
Kitchens.

00:54:50.180 --> 00:54:53.300
A FireWire kitchen is three
or four days where we meet

00:54:53.500 --> 00:54:56.150
one-on-one with key developers

00:54:56.410 --> 00:54:59.200
We give tutorials on the
latest developments in FireWire

00:54:59.200 --> 00:55:03.140
in much more detail than
we're able to do here at WWDC.

00:55:03.270 --> 00:55:05.750
We have hands-on
development and debugging.

00:55:05.860 --> 00:55:09.100
Every developer gets a Mac with
our latest stuff pre-installed

00:55:09.100 --> 00:55:10.920
right in front of them.

00:55:11.020 --> 00:55:12.950
And we sometimes have
related presentations.

00:55:12.960 --> 00:55:15.150
For example,
at the last kitchen in Tokyo,

00:55:15.150 --> 00:55:18.390
we gave a presentation on
how to use FireWire for

00:55:18.390 --> 00:55:21.300
Pima-type still-image cameras.

00:55:21.390 --> 00:55:23.860
We hold these in Cupertino and in Tokyo.

00:55:23.860 --> 00:55:26.420
We do it two or three times a year.

00:55:26.420 --> 00:55:30.240
Typically,
we get 20 or so of the most interested

00:55:30.240 --> 00:55:32.580
developers together with our engineers.

00:55:32.670 --> 00:55:35.650
It's a really intense,
really good way to get

00:55:35.650 --> 00:55:37.230
up to speed quickly.

00:55:37.290 --> 00:55:40.430
At our last kitchen in Tokyo,
we had several developers who

00:55:40.440 --> 00:55:44.480
left with working drivers,
not shipping, but working drivers for

00:55:44.480 --> 00:55:46.530
devices that they had brought.

00:55:48.410 --> 00:55:51.000
I mentioned before that we
provide software development kits.

00:55:51.170 --> 00:55:55.440
We've done 12 so far for
Mac OS X as of last month.

00:55:55.570 --> 00:55:58.700
These kits are posted for free
public download on the web.

00:55:58.790 --> 00:56:02.310
Each one has our very latest drivers,
including things that we may

00:56:02.310 --> 00:56:05.260
be planning to ship in a future
version of Mac OS X so that you can

00:56:05.350 --> 00:56:07.500
start testing with them right away.

00:56:07.610 --> 00:56:11.430
Each one includes all of the
source code for convenient access.

00:56:11.520 --> 00:56:16.940
Each one includes sample code for, like,
we have an SPP2 demo application.

00:56:16.940 --> 00:56:19.840
We have sample code for that camera.

00:56:19.950 --> 00:56:22.640
Each one includes all of the
documentation that we have.

00:56:22.760 --> 00:56:25.680
And there's usually some
tools included as well,

00:56:25.800 --> 00:56:28.900
things just that you'll need
when developing for FireWire.

00:56:29.020 --> 00:56:30.980
They're available for free
public download on the web,

00:56:30.980 --> 00:56:34.990
so if you haven't already,
please pick one up and give it a try.

00:56:36.870 --> 00:56:40.530
Okay, here's the roadmap to other
sessions here at WWDC this week.

00:56:40.550 --> 00:56:43.220
I talked about
SCSI-TASK User-Client earlier.

00:56:43.220 --> 00:56:45.020
If you want to learn more
about how it actually works,

00:56:45.100 --> 00:56:49.120
it will be covered in Session 111,
which is on Wednesday in

00:56:49.120 --> 00:56:50.990
the Civic Auditorium.

00:56:51.000 --> 00:56:54.060
That's the big theater across the
street from the Convention Center.

00:56:54.060 --> 00:56:57.080
It's actually a really interesting place,
so you should check it out.

00:56:57.100 --> 00:57:00.060
If you don't go for this one,
come see us on Thursday.

00:57:00.060 --> 00:57:00.840
That's where we'll be.

00:57:00.840 --> 00:57:04.140
And that's what's next,
115 Firewire In-Depth.

00:57:04.590 --> 00:57:08.320
We will talk in much more detail
about the new services in Mac OS X,

00:57:08.320 --> 00:57:13.980
things like IP 1394,
software impact of 1394B.

00:57:13.980 --> 00:57:17.580
We'll cover the entire architecture
for Firewire in Mac OS X,

00:57:17.580 --> 00:57:21.870
and we'll have a how-to
session for I've got a device,

00:57:21.880 --> 00:57:24.060
what do I do to write software for it?

00:57:26.480 --> 00:57:27.310
We have our Plugfest.

00:57:27.360 --> 00:57:29.840
That's on Thursday starting at 7.

00:57:29.840 --> 00:57:33.560
It is scheduled to be at the Apple campus
at the Bash in that garage room.

00:57:33.560 --> 00:57:36.540
And then Friday, 9 a.m.

00:57:36.540 --> 00:57:38.400
Don't stay too late at the Plugfest.

00:57:38.400 --> 00:57:42.000
We have our FireWire
and USB feedback forum.

00:57:42.000 --> 00:57:43.660
It's a smaller session.

00:57:43.660 --> 00:57:45.540
There's no presentation.

00:57:45.540 --> 00:57:49.000
It's one hour where you can
come and give us feedback.

00:57:49.000 --> 00:57:50.130
What are we doing right?

00:57:50.130 --> 00:57:51.260
What are we doing wrong?

00:57:51.260 --> 00:57:53.620
What are we doing that
you just don't understand?

00:57:54.720 --> 00:57:55.920
What should we put in our SDK?

00:57:55.950 --> 00:57:57.360
What should we put in our APIs?

00:57:57.360 --> 00:58:01.540
It's your chance to influence the work
that we do for the next year so that we

00:58:01.540 --> 00:58:04.300
can come back next year and talk about
all the great stuff that we've added.

00:58:04.300 --> 00:58:07.930
You can also ask general questions,
but the primary focus for

00:58:07.930 --> 00:58:09.700
that is to tell us what to do.

00:58:12.540 --> 00:58:13.740
A couple more roadmap sessions.

00:58:13.740 --> 00:58:16.560
In Steve's keynote,
he talked about rendezvous and

00:58:16.560 --> 00:58:17.920
zero-configuration networking.

00:58:17.920 --> 00:58:21.290
We're adding TCPIP for FireWire,
so those are two things that

00:58:21.340 --> 00:58:22.540
will definitely play together.

00:58:22.540 --> 00:58:26.180
That session, which was not shown on the
agenda until very recently,

00:58:26.180 --> 00:58:29.520
is session 811,
and that's on Thursday at 2,

00:58:29.520 --> 00:58:30.620
just before our session.

00:58:30.620 --> 00:58:32.660
That's in room J,
down at the other end of

00:58:32.660 --> 00:58:34.020
the convention center.

00:58:34.020 --> 00:58:38.780
Finally, there's a session 008,
the APIs for disk recording.

00:58:39.520 --> 00:58:43.340
If you've been using SPP2,
maybe moving to SCSI Task User Client,

00:58:43.400 --> 00:58:47.440
because your device is a CD-ROM burner,
DVD-R, or something,

00:58:47.440 --> 00:58:51.810
you may find that we have APIs that
you can just do exactly what you

00:58:51.910 --> 00:58:55.560
want to do without any of the messy,
low-lying details.

00:58:55.560 --> 00:59:00.720
That's in hall 2 on Thursday, also at 2,
so pick networking or disk burning.

00:59:03.400 --> 00:59:05.110
Here's contact information.

00:59:05.240 --> 00:59:06.380
You'll meet him in a second.

00:59:06.380 --> 00:59:09.900
Guillermo Ortiz is with
Apple's Developer Relations.

00:59:10.000 --> 00:59:12.960
He handles technology
management for FireWire.

00:59:13.030 --> 00:59:18.330
If you've been sending
questions to FireWire@apple.com,

00:59:18.330 --> 00:59:18.330
Guillermo is the one
who's been receiving them.

00:59:20.580 --> 00:59:23.310
We have a public mailing
list for FireWire developers.

00:59:23.490 --> 00:59:26.170
You don't need to be a member
of Apple's developer program.

00:59:26.250 --> 00:59:29.730
It has a pretty wide audience,
including a lot of people just lurking,

00:59:29.740 --> 00:59:32.450
like Mike until recently.

00:59:32.540 --> 00:59:35.820
You can reach a wide audience of
Apple people and other developers.

00:59:35.830 --> 00:59:37.840
It's a great place to ask questions.

00:59:37.910 --> 00:59:41.700
It's even better when developers
answer questions for each other,

00:59:41.700 --> 00:59:43.060
which happens more and more.

00:59:43.060 --> 00:59:45.100
We love that.

00:59:45.100 --> 00:59:48.780
You can subscribe by
visiting the URL shown there.

00:59:49.010 --> 00:59:52.440
There's also a public mailing
list for mass storage development,

00:59:52.440 --> 00:59:56.310
and about half the questions that we
get on the FireWire list relate in some

00:59:56.340 --> 01:00:00.330
way or another to mass storage devices,
so sometimes we point people

01:00:00.330 --> 01:00:01.900
over to this other list.

01:00:02.080 --> 01:00:08.410
The subscription mechanism
is a little different,

01:00:08.410 --> 01:00:08.410
but it's also public,
and you can subscribe as shown here.

01:00:11.630 --> 01:00:15.200
For further information about FireWire,
here's the URL where you can download

01:00:15.200 --> 01:00:18.100
the latest FireWire SDK from ECOS 10.

01:00:18.230 --> 01:00:21.590
This page actually has pointers off
to several things that you might need,

01:00:21.600 --> 01:00:24.460
one of which is the SDKs.

01:00:24.720 --> 01:00:28.160
The new document I described earlier,
working with FireWire device interfaces,

01:00:28.160 --> 01:00:30.980
is available on the web
at developer.apple.com,

01:00:30.980 --> 01:00:32.540
as shown there.

01:00:32.640 --> 01:00:35.350
And you may want to visit
the 1394 Trade Association to

01:00:35.420 --> 01:00:38.090
learn more about the PlugFests,
the Developers Conference,

01:00:38.140 --> 01:00:40.980
other events that they do,
or to pick up some of

01:00:40.980 --> 01:00:42.600
those AVC standards.

01:00:42.600 --> 01:00:43.540
There's the URL.