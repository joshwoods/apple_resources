WEBVTT

00:00:01.450 --> 00:00:04.620
Ladies and gentlemen,
please welcome Technology Manager for

00:00:04.660 --> 00:00:08.590
Development Tools,
Godfrey DeDorji.

00:00:11.860 --> 00:00:12.790
Good afternoon.

00:00:12.840 --> 00:00:16.340
Welcome to the Exploring
Project Builder IDE session.

00:00:16.370 --> 00:00:17.740
I hope you've been having a great show.

00:00:17.930 --> 00:00:22.400
You've probably seen Project Builder in
various other sessions along the way.

00:00:22.450 --> 00:00:24.590
In this session,
we're going to talk to you about

00:00:24.590 --> 00:00:27.580
all the things that we've been
doing over the past year with it.

00:00:27.620 --> 00:00:33.360
And to do that,
I'd like to introduce Mike Ferris,

00:00:33.360 --> 00:00:33.360
the manager of the Project Builder team.

00:00:41.990 --> 00:00:44.110
So I'm going to just
get things started here,

00:00:44.240 --> 00:00:48.380
and then I'm going to pass off to
one of the other guys in my group

00:00:48.410 --> 00:00:50.660
to run us through some demos.

00:00:50.660 --> 00:00:54.490
But before we do that, well,
first of all, let's see what we're

00:00:54.490 --> 00:00:55.140
going to cover today.

00:00:55.140 --> 00:00:59.690
So we've just released a beta
release of Project Builder,

00:00:59.790 --> 00:01:02.600
the developer tools in general.

00:01:02.600 --> 00:01:08.970
We shipped out a CD earlier this month,
and there's the one that you

00:01:09.060 --> 00:01:10.760
got with your Jaguar stuff,
too.

00:01:10.760 --> 00:01:13.000
I'll talk about that a little.

00:01:13.000 --> 00:01:16.670
But we want to really concentrate on
some of the new features here while also

00:01:16.670 --> 00:01:19.220
giving you an overview of everything.

00:01:19.260 --> 00:01:24.210
And just so that those of you who've
actually used Project Builder quite

00:01:24.210 --> 00:01:30.020
a bit have something to not bore you,
we're going to try to also point out

00:01:30.020 --> 00:01:33.800
some things that are lesser-known
features that not everybody knows about,

00:01:33.860 --> 00:01:37.570
just to make sure everybody kind
of has an idea of some of the more

00:01:37.570 --> 00:01:39.620
advanced stuff that you can do.

00:01:39.620 --> 00:01:43.720
So here's the itinerary.

00:01:44.680 --> 00:01:48.280
I want to cover a little bit
about the CDs that you have,

00:01:48.600 --> 00:01:51.570
talk a little bit about
what will be after that.

00:01:52.490 --> 00:01:55.950
Then I want to go through some
underlying project concepts

00:01:56.030 --> 00:01:57.900
that Project Builder uses.

00:01:58.000 --> 00:02:01.900
Then we'll have a tour
of the IDE's feature.

00:02:02.010 --> 00:02:03.930
And then at the end,
I'll come back and talk a little

00:02:03.930 --> 00:02:06.860
bit about future directions for PB.

00:02:07.270 --> 00:02:12.080
So let's start with talking a little
bit about what we've been doing,

00:02:12.080 --> 00:02:16.040
the CDs that you've gotten
here at the conference.

00:02:16.120 --> 00:02:20.380
So first of all,
there's the April 2002 Developer CD.

00:02:20.650 --> 00:02:26.350
This is an update, our normal sort of
periodic updates of the CD.

00:02:26.800 --> 00:02:31.240
This CD contains a beta
release of Project Builder,

00:02:31.240 --> 00:02:33.600
a beta release of the GC3 compiler.

00:02:33.820 --> 00:02:38.600
You also have the Jaguar Seed CD,
which is similar content.

00:02:38.640 --> 00:02:41.050
It actually has a slightly
newer Project Builder than

00:02:41.050 --> 00:02:42.360
the one on the April CD.

00:02:42.360 --> 00:02:47.600
And then we'll talk just a little
bit about what's coming after Jaguar.

00:02:47.600 --> 00:02:51.350
So, first of all, the April CD.

00:02:51.350 --> 00:02:55.100
Again, this is a beta release
of Project Builder 2.0,

00:02:55.100 --> 00:02:59.300
which has some major new features that
we want to get some input on you before,

00:02:59.300 --> 00:03:01.590
from you, before we finalize them.

00:03:01.600 --> 00:03:05.760
We feel that the Project Builder
2.0 beta is quite solid,

00:03:05.760 --> 00:03:08.900
but like I said,
we'd like your feedback on how we

00:03:08.900 --> 00:03:11.600
can improve some of the new features.

00:03:12.100 --> 00:03:12.100
We feel that the Project Builder
2.0 beta is quite solid,

00:03:12.100 --> 00:03:12.100
but like I said,
we'd like your feedback on how we

00:03:12.100 --> 00:03:12.120
can improve some of the new features.

00:03:12.400 --> 00:03:15.480
before we call it finally released.

00:03:15.700 --> 00:03:19.060
We also have the GC3.1 prerelease.

00:03:19.210 --> 00:03:22.760
So, you know,
use the 2.0 IDE if it's working for you.

00:03:22.760 --> 00:03:25.660
If you like it, you know,
build your projects and ship them.

00:03:25.660 --> 00:03:27.020
That's great.

00:03:27.030 --> 00:03:29.160
But don't, please,
ship code that you've built

00:03:29.160 --> 00:03:32.790
with GC3.1 in this release.

00:03:33.020 --> 00:03:36.360
The Jaguar final release will
have a GCC3 that we will,

00:03:36.360 --> 00:03:40.470
you know, be endorsing as what you should
be using to build your code,

00:03:40.500 --> 00:03:43.550
but we're not quite ready
for you to do that yet.

00:03:45.640 --> 00:03:52.310
So once we get to the
final release of Jaguar,

00:03:52.630 --> 00:03:54.740
That's when the beta will go away here.

00:03:54.740 --> 00:03:58.540
So we'll be shipping the final
version of Project Builder 2.0.

00:03:58.540 --> 00:04:01.960
We'll actually probably
call it 2.0.1 or something.

00:04:02.130 --> 00:04:07.160
And it will be concurrent with
the OS release for Jaguar.

00:04:07.310 --> 00:04:10.040
And then after that,
we'll be doing our ongoing

00:04:10.040 --> 00:04:12.590
periodic releases as we usually do.

00:04:14.370 --> 00:04:18.160
So, okay, that's a little bit about
the product roadmap.

00:04:18.190 --> 00:04:20.470
Now let me talk about some
of the underlying concepts

00:04:20.470 --> 00:04:21.840
that Project Builder uses.

00:04:21.900 --> 00:04:28.090
And I know a lot of you are coming from
other IDEs or other environments which,

00:04:28.210 --> 00:04:30.940
you know,
have slightly different concepts.

00:04:31.010 --> 00:04:35.180
And I think that if you, you know,
take some time to learn about

00:04:35.180 --> 00:04:39.610
the Project Builder concepts,
you'll have a lot easier time sort

00:04:39.610 --> 00:04:42.580
of coming up to speed on how to
use Project Builder effectively.

00:04:43.580 --> 00:04:47.090
So these are the main concepts
that I want to cover today.

00:04:47.180 --> 00:04:51.810
And these are the main building blocks
for projects in Project Builder.

00:04:52.510 --> 00:04:55.590
We'll just dive into them one at a time.

00:04:55.710 --> 00:05:00.410
In the, uh, the main thing, you know,
that you have in Project Builder

00:05:00.420 --> 00:05:03.400
is a big list of files that are
going to be processed in some way.

00:05:03.490 --> 00:05:06.800
The files are organized
as references and groups.

00:05:06.870 --> 00:05:10.630
References represent files
that your project uses.

00:05:10.800 --> 00:05:18.630
Actually, they can represent files that
your project doesn't use too if

00:05:18.630 --> 00:05:18.630
you just want to have access to
them from within Project Builder.

00:05:19.180 --> 00:05:22.990
You can organize files,
you can organize these references

00:05:23.430 --> 00:05:25.150
in user-defined groups.

00:05:25.250 --> 00:05:29.740
These groups can match the structure
of the file system folders or not.

00:05:29.740 --> 00:05:33.100
You can organize them
basically however you want.

00:05:34.110 --> 00:05:40.830
References use paths to refer to
the files that they represent.

00:05:40.940 --> 00:05:44.100
There are basically two kinds of
paths that a reference can use.

00:05:44.100 --> 00:05:48.100
It can either use an absolute path
or it can use a relative path.

00:05:48.230 --> 00:05:51.170
And if it's using a relative path,
it can be relative to

00:05:51.230 --> 00:05:53.290
a number of locations.

00:05:53.390 --> 00:05:57.140
It can be relative to the
project directory as a whole.

00:05:57.250 --> 00:06:01.110
It can be relative to the
folder associated with the group

00:06:01.110 --> 00:06:03.180
that contains the reference.

00:06:03.410 --> 00:06:06.140
or it can be relative
to your build results.

00:06:06.250 --> 00:06:09.170
So for instance,
the reference to the app that your

00:06:09.170 --> 00:06:13.150
target builds is going to be a
build product relative reference,

00:06:13.280 --> 00:06:15.790
which means wherever you
choose to do your builds,

00:06:15.960 --> 00:06:19.290
that's where it expects
to find that application.

00:06:21.690 --> 00:06:26.500
The next major concept in
Project Builder is targets.

00:06:26.500 --> 00:06:32.440
And targets are made up of build
phases as well as build settings.

00:06:32.510 --> 00:06:36.510
A target defines how to build a project.

00:06:37.240 --> 00:06:39.540
actually how to build
a particular product.

00:06:39.560 --> 00:06:41.860
A project can contain
multiple targets if,

00:06:41.860 --> 00:06:44.430
for instance,
you have a project that you want to

00:06:44.430 --> 00:06:49.010
build a framework and an application
that uses that framework and then several

00:06:49.010 --> 00:06:51.750
plug-ins that the application might load.

00:06:51.850 --> 00:06:55.750
Each of those individual products
will be represented by a target.

00:06:57.300 --> 00:07:02.720
Build Phases is one of the concepts that
is somewhat unique to Project Builder,

00:07:02.720 --> 00:07:08.060
at least possibly not familiar to
people coming from other environments.

00:07:08.180 --> 00:07:11.840
Phases represent the steps
that the target will take in

00:07:11.910 --> 00:07:15.150
order to build your project,
and typically phases represent

00:07:15.350 --> 00:07:19.090
specific activities like
compiling a set of source files,

00:07:19.200 --> 00:07:23.760
linking the resulting O files together,
copying a bunch of stuff into your

00:07:23.760 --> 00:07:25.970
framework resources directory.

00:07:26.200 --> 00:07:29.540
We also have some build phases
that allow you to get more custom.

00:07:29.680 --> 00:07:32.930
For instance, at any point in the
target's build phase list,

00:07:33.100 --> 00:07:37.900
you can insert a shell script build
phase that will call out and execute a

00:07:38.000 --> 00:07:41.070
shell script at that point in your build.

00:07:42.980 --> 00:07:46.310
The other main thing that a
target has besides the build

00:07:46.410 --> 00:07:48.420
phases is build settings.

00:07:48.530 --> 00:07:52.830
What build settings allow you to
do is basically control options

00:07:53.290 --> 00:07:55.390
for lots of different things.

00:07:55.500 --> 00:08:00.060
Various compilers have build settings
that they pay attention to that

00:08:00.070 --> 00:08:03.890
affect the options for the compiler,
what flags are being passed.

00:08:04.030 --> 00:08:05.200
Same with the linker.

00:08:05.260 --> 00:08:10.090
There are other build settings that
control the overall build process.

00:08:13.260 --> 00:08:17.510
The build settings,
you often have custom UI that

00:08:17.510 --> 00:08:21.660
tells you a little bit about what
these build settings are to set

00:08:21.660 --> 00:08:23.120
some of the more common ones.

00:08:23.270 --> 00:08:26.280
But there's also a bunch of
other settings that we will be

00:08:26.280 --> 00:08:30.240
exposing with better UI over time,
but for now are often available only

00:08:30.240 --> 00:08:32.740
through an expert settings table.

00:08:32.790 --> 00:08:35.240
And there's a release note on
the system that's linked to from

00:08:35.350 --> 00:08:39.530
the Project Builder release notes
that describes in some detail all

00:08:39.530 --> 00:08:42.860
of the different build settings
that are available for you to use,

00:08:42.860 --> 00:08:46.130
even if they're not represented
by a specific UI in the

00:08:46.130 --> 00:08:47.950
target editor currently.

00:08:50.540 --> 00:08:56.910
Here's another thing that is potentially
a new concept to folks coming from other

00:08:56.910 --> 00:09:00.070
IDEs or from make file-based systems.

00:09:00.240 --> 00:09:04.150
I'm told actually that
Visual Studio has a similar feature.

00:09:04.230 --> 00:09:09.890
Build styles allow you to customize
the settings in the target.

00:09:11.030 --> 00:09:15.710
So instead of, say,
duplicating your target and

00:09:15.760 --> 00:09:18.540
having two copies of your target
that builds your application,

00:09:18.540 --> 00:09:21.340
one that builds it with debug
symbols and one that builds it,

00:09:21.340 --> 00:09:24.200
you know, without debug symbols,
for when you're ready to ship,

00:09:24.420 --> 00:09:26.900
you can set up one target that
knows how to build your application,

00:09:26.930 --> 00:09:29.100
because after all, you're building the
same thing both times,

00:09:29.100 --> 00:09:31.740
you're just changing a little
bit the way that it's built.

00:09:31.900 --> 00:09:36.280
And then you can define build
styles that will actually override

00:09:36.280 --> 00:09:40.030
the settings and allow you to,
you know, say, "Okay, well,

00:09:40.030 --> 00:09:43.320
when I'm building for development,
"I'd like for there to be debug symbols,

00:09:43.320 --> 00:09:45.220
"but if I'm building to
ship to my customers,

00:09:45.220 --> 00:09:47.690
"I don't want the debug symbols."

00:09:48.700 --> 00:09:53.900
You can use build styles to
override or add to any settings

00:09:53.900 --> 00:09:55.460
that the target might have.

00:09:55.620 --> 00:09:56.610
Build settings.

00:09:56.800 --> 00:10:00.240
You can't use build styles to alter, say,
the list of files that

00:10:00.300 --> 00:10:03.050
are built by the target,
but you can use it to deal

00:10:03.050 --> 00:10:04.500
with any of the build settings.

00:10:04.650 --> 00:10:07.530
And the override is dynamic,
so as you change what the

00:10:07.530 --> 00:10:10.210
active build style is,
the overrides are applied on

00:10:10.210 --> 00:10:13.160
top of whatever settings the
targets that you're building have,

00:10:13.270 --> 00:10:17.590
and if you change it to another one,
that's recomputed.

00:10:19.840 --> 00:10:21.460
This is used for a number
of different things.

00:10:21.460 --> 00:10:24.800
So I mentioned, you know,
development versus deployment.

00:10:24.940 --> 00:10:27.800
You can also use it for
special compiler options.

00:10:27.800 --> 00:10:33.490
You know,
let's say that you want to try out GCC3.

00:10:34.240 --> 00:10:37.620
But because we've told you not
to ship your code that way,

00:10:37.620 --> 00:10:41.810
you don't want to actually make
the project use GCC3 all the time.

00:10:41.980 --> 00:10:44.960
You'd like to be able to sort of
enable that for testing purposes.

00:10:45.060 --> 00:10:50.340
Well, you can set up a build style that
switches the compiler to GCC3.

00:10:50.410 --> 00:10:52.340
And then, you know,
when you normally build,

00:10:52.390 --> 00:10:54.150
you'll use the old compiler.

00:10:54.260 --> 00:10:56.500
You'll be fine to ship your app.

00:10:56.580 --> 00:10:58.860
But for testing,
you can choose the GCC3 build

00:10:58.860 --> 00:11:01.270
style and do it that way.

00:11:03.060 --> 00:11:08.240
So the final concept that I want
to cover here is executables.

00:11:08.300 --> 00:11:13.400
Executables represent things in the
project that the debugger can run.

00:11:13.500 --> 00:11:16.140
So actually you can run them
directly or you can run them

00:11:16.160 --> 00:11:18.100
under the control of the debugger.

00:11:18.680 --> 00:11:22.360
An executable is automatically
created for any target that builds

00:11:22.360 --> 00:11:25.000
something that is directly executable.

00:11:25.120 --> 00:11:29.300
So if you create an application target
or you create a Unix tool target,

00:11:29.440 --> 00:11:32.920
then you'll automatically get an
executable that represents the

00:11:32.920 --> 00:11:34.790
thing that that target builds.

00:11:35.610 --> 00:11:38.740
But what if you're building a plugin?

00:11:38.840 --> 00:11:41.570
Let's say that you're
building a Photoshop plugin.

00:11:42.610 --> 00:11:47.250
Now that you can build Photoshop plugins
using Cocoa and Mako and so forth,

00:11:47.400 --> 00:11:49.810
with all the great integration
that the Carbon and the

00:11:49.810 --> 00:11:51.300
Cocoa guys have been doing.

00:11:51.930 --> 00:11:54.060
You build your Photoshop plug-in,
but you can't just launch

00:11:54.060 --> 00:11:55.340
a Photoshop plug-in,
right?

00:11:55.340 --> 00:11:58.800
You have to launch Photoshop and
then load your plug-in.

00:11:58.890 --> 00:12:01.590
So you can create a custom
executable inside Project Builder

00:12:01.800 --> 00:12:04.800
that points at the Photoshop that's
installed on your system,

00:12:04.940 --> 00:12:08.070
and then when you say debug,
it's actually going to run

00:12:08.070 --> 00:12:09.710
Photoshop in the debugger.

00:12:09.830 --> 00:12:15.600
When it comes up, you load your plug-in,
and you can debug.

00:12:16.920 --> 00:12:19.840
Executables,
in addition to just pointing at the

00:12:19.840 --> 00:12:23.620
thing that they're going to execute,
give you some control over

00:12:23.620 --> 00:12:25.560
the execution environment.

00:12:25.610 --> 00:12:28.610
So, for instance,
you can specify command line arguments,

00:12:28.610 --> 00:12:32.820
or environment variables,
and various other runtime options

00:12:33.280 --> 00:12:37.760
within an executable that will then
take effect when you run or debug that.

00:12:38.640 --> 00:12:43.190
And starting in Project Builder 2.0,
executables are no longer

00:12:43.190 --> 00:12:45.740
associated with a specific target.

00:12:45.830 --> 00:12:48.150
So once again, you know,
if I have an application target,

00:12:48.150 --> 00:12:51.000
an executable for that app
is automatically created,

00:12:51.050 --> 00:12:55.860
but it's not part of that target,
so the active executable and the

00:12:55.860 --> 00:12:59.360
active target are now separable things.

00:12:59.560 --> 00:13:02.740
If I switch to make an
application target active,

00:13:02.790 --> 00:13:05.160
it'll also make its executable active.

00:13:05.230 --> 00:13:10.080
But if I have 50 plug-ins
and I switch between them,

00:13:10.460 --> 00:13:12.980
I don't have to define
50 custom executables,

00:13:12.980 --> 00:13:15.200
all of which run, you know, Photoshop.

00:13:15.320 --> 00:13:17.150
You can just have one of them,
and it can remain the active

00:13:17.150 --> 00:13:20.510
executable as you switch
between the different plug-ins.

00:13:21.450 --> 00:13:26.680
So these are some of the main
concepts that Project Builder uses.

00:13:27.030 --> 00:13:29.960
And I really encourage you
to look at the documentation.

00:13:29.990 --> 00:13:32.420
We're adding more and more
conceptual documentation to

00:13:32.420 --> 00:13:38.140
explain sort of what the underlying
concepts are behind Project Builder.

00:13:38.510 --> 00:13:41.640
And if you take the time to
become familiar with them,

00:13:41.650 --> 00:13:44.800
I think you'll be a lot
more productive with PB.

00:13:44.800 --> 00:13:47.790
So enough of this boring stuff.

00:13:48.380 --> 00:13:50.440
Let's actually see a tour.

00:13:50.520 --> 00:13:53.580
And to do that,
I'm going to bring up Lance Saleme,

00:13:53.580 --> 00:13:55.700
who is an engineer on
the Project Builder team.

00:13:55.790 --> 00:14:01.010
He joined us around WWC last year and is
responsible for a lot of the multi-window

00:14:01.010 --> 00:14:03.340
UI you see in Project Builder 2.0.

00:14:03.430 --> 00:14:06.640
I also am going to
introduce Scott Tooker,

00:14:06.750 --> 00:14:11.190
who is our QA engineer
and part-time coder.

00:14:11.370 --> 00:14:15.040
He has been doing a lot of
sort of polished bug fixing

00:14:15.040 --> 00:14:18.300
for us and is responsible for
a lot of the new context menus.

00:14:18.300 --> 00:14:19.760
So take it away, Lance.

00:14:19.800 --> 00:14:22.150
Okay, thank you, Mike.

00:14:26.910 --> 00:14:30.020
So I'm going to give you a whirlwind
tour of a cross-section through all

00:14:30.060 --> 00:14:31.930
of the features in Project Builder.

00:14:32.020 --> 00:14:34.300
A lot of you are experts,
but please stick with us because

00:14:34.400 --> 00:14:37.040
we're going to point out some of
the new features as we're going.

00:14:37.040 --> 00:14:41.800
We're going to talk about the interface
concepts and the multi-window UI.

00:14:41.800 --> 00:14:45.210
It has spent some time on
accessing documentation,

00:14:45.210 --> 00:14:48.400
move on to navigating
and searching projects,

00:14:48.450 --> 00:14:50.730
navigating editing code,
using source control,

00:14:50.780 --> 00:14:54.540
and then talk about some of the build
system features and new features,

00:14:54.580 --> 00:14:57.320
and then the debug and
new debug features.

00:14:57.520 --> 00:15:01.460
So let's move straight into
the interface concepts,

00:15:01.460 --> 00:15:05.710
which is some of the biggest changes
you'll see in Project Builder 2.0.

00:15:05.720 --> 00:15:11.030
The first thing you'll do as a new
user or getting started with your

00:15:11.030 --> 00:15:13.730
project is to create a new one.

00:15:13.740 --> 00:15:17.740
You'll find a lot of options under that,
and we'll see some of those in the demo.

00:15:17.740 --> 00:15:22.960
But you'll then move into using
the project workspace window.

00:15:22.960 --> 00:15:25.400
And for a long time,
Project Builder has been

00:15:25.400 --> 00:15:29.420
a one-window interface,
so you'll see all of your content

00:15:29.510 --> 00:15:34.110
and all of your tools combined
together in this single interface

00:15:34.110 --> 00:15:38.920
with a simple animation to move
between the pieces that you focus on,

00:15:38.920 --> 00:15:40.560
the pieces of the work that you're doing.

00:15:40.560 --> 00:15:43.520
They're broken down
into the content tabs,

00:15:43.520 --> 00:15:46.500
which are along the
left edge of the screen,

00:15:46.500 --> 00:15:49.390
and the tool tabs,
which usually are across the top,

00:15:49.390 --> 00:15:51.590
and then the built-in editor itself.

00:15:51.620 --> 00:15:52.940
Okay.

00:15:52.960 --> 00:15:56.090
Something new in 2.0 is the
work we've been doing for the

00:15:56.090 --> 00:15:57.900
multi-window user interface.

00:15:57.900 --> 00:16:01.160
You've probably seen some of
this already during the sessions,

00:16:01.160 --> 00:16:03.180
especially with AppleScript Studio.

00:16:03.180 --> 00:16:04.660
It was right before this.

00:16:04.660 --> 00:16:08.680
They heavily used the multi-window
user interface to organize and work

00:16:08.860 --> 00:16:11.120
within the project for their demos.

00:16:11.120 --> 00:16:16.580
To understand how we decided to break
out the windows for the multi-window UI,

00:16:16.580 --> 00:16:19.930
you have to have an understanding
of the development tasks.

00:16:20.020 --> 00:16:22.020
And these are kind of
arbitrary decisions.

00:16:22.960 --> 00:16:25.920
And we've made some decisions
on our part to break out all the

00:16:25.920 --> 00:16:28.650
various activities that you do,
to build your application,

00:16:28.740 --> 00:16:30.680
to work with it, debug it, et cetera.

00:16:30.680 --> 00:16:33.900
So you'll see tasks
related to the project,

00:16:34.150 --> 00:16:39.790
source editing, classes, targets, help,
and then the fine building, debugging,

00:16:39.790 --> 00:16:41.580
and running pieces as well.

00:16:41.580 --> 00:16:44.020
Now, we can't second-guess.

00:16:44.130 --> 00:16:47.370
We don't know everything that you may
want to do with the environment and

00:16:47.590 --> 00:16:49.360
exactly how you want to set it up.

00:16:49.410 --> 00:16:50.180
We tried.

00:16:50.180 --> 00:16:51.880
Everybody gave us a different answer.

00:16:51.880 --> 00:16:52.920
It became impossible.

00:16:52.920 --> 00:16:55.190
It became impossible to try and
make every possible window work and

00:16:55.190 --> 00:16:57.480
have preferences for every window.

00:16:57.480 --> 00:17:00.570
So you'll see that we
have window templates.

00:17:00.640 --> 00:17:04.730
And these allow you to decide how you
want to organize the tools and tabs in

00:17:04.730 --> 00:17:07.260
your windows for the development tasks.

00:17:09.450 --> 00:17:12.840
So we'll go straight into a demo,
and I'll speak more

00:17:12.840 --> 00:17:14.730
about it as we're going.

00:17:17.100 --> 00:17:18.620
cheat sheets here.

00:17:18.620 --> 00:17:23.950
So the first step would, of course,
would be to open a new project.

00:17:24.030 --> 00:17:28.930
And you'll see that we have a lot of
support for building Cocoa applications,

00:17:28.930 --> 00:17:33.880
Java, standalone UNIX tools and,
and AppleScript Studio if

00:17:33.880 --> 00:17:35.700
you're using that.

00:17:35.700 --> 00:17:39.070
But for our demo purposes,
we're going to start with

00:17:39.070 --> 00:17:40.350
an existing application.

00:17:40.350 --> 00:17:44.210
And Scott's going to bring up the window,
and he'll show you the traditional

00:17:44.300 --> 00:17:45.910
view onto Project Builder.

00:17:46.010 --> 00:17:50.400
So as you see,
we have the content tabs for files,

00:17:50.470 --> 00:17:57.410
classes, bookmarks, targets,
and the breakpoints.

00:17:57.570 --> 00:18:04.790
And then across the top,
you have batch find within

00:18:04.790 --> 00:18:04.790
the project building,

00:18:10.120 --> 00:18:17.300
So, let's get started.

00:18:17.300 --> 00:18:17.300
So, I'm going to start off
by talking about the

00:18:17.580 --> 00:18:21.790
So let's take a look at some of the
preferences that are new to 2.0,

00:18:22.220 --> 00:18:24.290
specifically in task templates.

00:18:24.310 --> 00:18:27.820
You're going to find that a
lot of you are very happy with

00:18:27.820 --> 00:18:31.190
the user interface as it is,
and we want to acknowledge that and

00:18:31.210 --> 00:18:34.160
keep a single window interface for you,
so you're, you know,

00:18:34.190 --> 00:18:36.990
just go ahead and use it
as you've always used it.

00:18:37.080 --> 00:18:40.130
Some of you maybe want to keep
more information about your

00:18:40.130 --> 00:18:46.370
build pieces as you're going,
your run results, your batch finds,

00:18:46.430 --> 00:18:47.480
so we have a some windows option.

00:18:47.500 --> 00:18:51.400
which breaks those out
into separate windows.

00:18:51.480 --> 00:18:54.440
But for the case of the majority
of people and for this demo,

00:18:54.440 --> 00:18:58.390
we're going to focus on
the many windows version.

00:18:58.900 --> 00:20:19.700
[Transcript missing]

00:20:22.500 --> 00:20:26.310
And then we'll go in and
edit that new template.

00:20:26.410 --> 00:20:29.500
And let's say you want to always
have your breakpoints visible.

00:20:29.510 --> 00:20:32.660
Open up the breakpoints tab,
size the column the way you want it.

00:20:32.700 --> 00:20:34.840
Resize the window the way you want it.

00:20:34.900 --> 00:20:39.560
You can hide and show other tabs if
you find that you don't need them.

00:20:39.630 --> 00:20:40.860
At the bottom there you'll see that.

00:20:40.860 --> 00:20:47.070
So once he's got the window
in the configuration that

00:20:47.070 --> 00:20:47.070
he's most comfortable with,

00:20:47.210 --> 00:20:49.900
He can then save the changes.

00:20:50.050 --> 00:20:53.780
And then any time a new window
for debugging is brought up,

00:20:53.890 --> 00:20:56.630
it's brought up from that configuration.

00:20:58.670 --> 00:21:02.760
Okay, so I think we're ready to
go back to... I'm sorry,

00:21:02.760 --> 00:21:06.580
I should say, now that we've created,
let's go back and actually reassign it.

00:21:06.670 --> 00:21:10.240
So you'll see that now his template
is assigned to the debug task.

00:21:10.240 --> 00:21:16.320
Okay, I guess we're ready to
go back to the slides.

00:21:25.910 --> 00:21:29.340
So, one of the other common aspects
of doing your development is

00:21:29.340 --> 00:21:31.200
to get to your documentation.

00:21:31.250 --> 00:21:34.740
Accessing documentation is quite
well integrated into Project Builder.

00:21:34.740 --> 00:21:37.330
You'll find a number
of access paths for it.

00:21:37.540 --> 00:21:40.450
You have the Help menu for
accessing Help Developer Center,

00:21:40.450 --> 00:21:41.960
the Developer Help Center.

00:21:42.030 --> 00:21:45.430
Then you have Project Builder Help,
Developer Tools,

00:21:45.550 --> 00:21:49.630
and Project Builder Tutorials,
as well as Framework References,

00:21:49.630 --> 00:21:53.300
Release Notes,
and Integrated Documentation features,

00:21:53.300 --> 00:21:54.210
which we'll talk about in the demo.

00:21:55.370 --> 00:21:57.570
At this point,
I'd like to give you a heads

00:21:57.570 --> 00:22:01.310
up on a new capability or a new
feature that we're offering,

00:22:01.310 --> 00:22:05.690
which is a print-on-demand book called
Developing with Project Builder.

00:22:05.760 --> 00:22:08.960
And this contains the Project Builder
help and tutorials for those people

00:22:08.960 --> 00:22:13.050
who really want to have a printed-out
version of the help available next to

00:22:13.100 --> 00:22:15.200
them while they're doing their job.

00:22:15.240 --> 00:22:16.240
Yeah.

00:22:16.270 --> 00:22:21.190
This is in conjunction with Vervante,
and it will be available

00:22:21.200 --> 00:22:23.330
the summer of this year.

00:22:23.970 --> 00:22:29.300
See your URL down there at the bottom if
you want to get some information on it.

00:22:30.620 --> 00:22:34.980
So another major natural part
of doing your development is

00:22:34.990 --> 00:22:37.430
navigating in the projects.

00:22:37.500 --> 00:22:42.230
Since we have multi-window UI now,
there's a new impetus to have shortcuts

00:22:42.230 --> 00:22:47.030
and simple ways of moving between the
windows to not stopgap you or to not slow

00:22:47.030 --> 00:22:49.960
you down and keep your progress moving.

00:22:50.080 --> 00:22:56.610
So we have some new menus and
toolbar items to move between the

00:22:56.610 --> 00:22:57.120
various task windows directly.

00:22:57.850 --> 00:23:01.630
In the case of the Class Browser,
we have some more of the integrated

00:23:01.630 --> 00:23:06.800
documentation features where you can
get directly to API documentation,

00:23:06.840 --> 00:23:10.730
and then if that Class Browser isn't
set up exactly the way you want,

00:23:10.730 --> 00:23:14.700
you can create advanced options
which isolate and filter out which

00:23:14.800 --> 00:23:18.640
pieces of the class hierarchy
you're interested in seeing.

00:23:18.700 --> 00:23:21.070
As Mike mentioned,
we have the Group Tree,

00:23:21.070 --> 00:23:24.820
which is your logical organization
of files and frameworks.

00:23:24.920 --> 00:23:28.880
So it's obvious that sometimes you'll
want to be able to jump directly back

00:23:28.880 --> 00:23:31.280
to a file that you're working on,
see exactly where it is

00:23:31.290 --> 00:23:32.360
in the entire project.

00:23:32.360 --> 00:23:34.940
So we have a shortcut which
is Reveal in Group Tree.

00:23:34.940 --> 00:23:36.640
We'll show that in the demo.

00:23:36.670 --> 00:23:42.380
And then finally, it's not really new,
there's some new features for bookmarks,

00:23:42.380 --> 00:23:42.760
though.

00:23:42.760 --> 00:23:45.140
There's the context menus
pretty much everywhere that

00:23:45.140 --> 00:23:48.390
you're working with the file,
so you can create a bookmark and have

00:23:48.390 --> 00:23:53.280
it available later on when you're
moving between the other tasks.

00:23:55.870 --> 00:23:57.640
Next we'll move into searching projects.

00:23:57.640 --> 00:23:59.400
This is a common feature of IDEs.

00:23:59.400 --> 00:24:00.770
You have the batch finder.

00:24:00.770 --> 00:24:03.400
Of course you have textual
search and replace,

00:24:03.460 --> 00:24:06.560
but we have a very nice
regular expressions search

00:24:06.560 --> 00:24:08.300
and replace we'll demo.

00:24:08.400 --> 00:24:14.720
And then we have definition searches,
which help you get directly to the

00:24:14.720 --> 00:24:19.790
definitions of a particular symbol,
and then jump from there to the

00:24:19.790 --> 00:24:19.790
API documentation for that symbol.

00:24:20.260 --> 00:24:27.300
Something new in 2.0 is
Documentation Search,

00:24:27.300 --> 00:24:35.790
and this is a natural language
interface to all of the documentation

00:24:36.020 --> 00:24:36.130
available on the system for quick
and easy access to look up something

00:24:36.130 --> 00:24:36.130
like hierarchical views on the fly.

00:24:36.530 --> 00:24:40.390
And if the defaults that we provided
for you in the search process aren't

00:24:40.390 --> 00:24:44.130
exactly what you normally work with,
you have the ability to bring

00:24:44.130 --> 00:24:47.390
up a dialog for find options
to set up your controlling,

00:24:47.390 --> 00:24:53.960
to control your match criteria and
also to limit what gets searched.

00:24:54.100 --> 00:24:56.620
So, back to another demo.

00:25:07.510 --> 00:25:10.200
As you can see,
we have the Help menu where the

00:25:10.460 --> 00:25:13.640
Project Builder Help Center is
a natural part of it.

00:25:13.740 --> 00:25:17.220
And then you have the Frameworks.

00:25:17.660 --> 00:25:22.170
Scott Tooker, and Scott Tooker,
who is the executive director

00:25:22.280 --> 00:25:27.000
of the Project Builder IDE team,
will be joining us shortly.

00:25:30.200 --> 00:25:39.100
[Transcript missing]

00:25:39.400 --> 00:25:41.570
And since it's a task,
it can have its own window

00:25:41.570 --> 00:25:44.450
instantiated directly from the menu.

00:25:45.110 --> 00:25:49.130
In here you'll see the overall
hierarchy of your classes and methods,

00:25:49.130 --> 00:25:53.530
and your classes will show up in blue
to give you some differentiation.

00:25:53.680 --> 00:25:57.010
But as you click on the various methods,
you go directly to the source

00:25:57.010 --> 00:25:58.660
code in the attached editor.

00:25:58.760 --> 00:26:05.220
As for example,
if you want to look at NSObject,

00:26:05.220 --> 00:26:05.220
you'll find that

00:26:05.700 --> 00:26:08.640
You have the ability to go
directly to some documentation

00:26:09.390 --> 00:26:11.500
when it's normally available.

00:26:11.500 --> 00:26:12.440
Yes.

00:26:12.560 --> 00:26:16.280
Which actually points out something
interesting to point out about

00:26:16.290 --> 00:26:19.100
2.0 since I've made the snafu.

00:26:20.320 --> 00:26:25.000
Unfortunately,
you have to run the PB Help Indexer.

00:26:25.000 --> 00:26:26.010
This is only for the beta.

00:26:26.060 --> 00:26:28.550
This will be fixed for Jaguar Final.

00:26:28.710 --> 00:26:31.840
I'm not going to do it right now
because it takes a little bit of time,

00:26:31.840 --> 00:26:33.740
and I don't want to
waste time in the demo.

00:26:33.740 --> 00:26:36.620
But I just want to point people out,
if they don't see the help books,

00:26:36.690 --> 00:26:37.910
just go ahead.

00:26:38.070 --> 00:26:39.990
It's in the release notes.

00:26:40.040 --> 00:26:42.500
You just have to run
this one tool using sudo,

00:26:42.500 --> 00:26:45.720
and then you'll get all the help books,
and you'll get your index.

00:26:45.830 --> 00:26:48.450
Okay, so we'll move on.

00:26:49.990 --> 00:26:54.050
If you want to find out where
the file is that we're looking

00:26:54.070 --> 00:26:57.630
at is in the group tree,
just click on the file and

00:26:57.630 --> 00:26:59.810
do a reveal in group tree.

00:27:00.310 --> 00:27:02.520
There's another context
manual shortcut for that.

00:27:02.570 --> 00:27:06.870
And that'll drill down into the hierarchy
and get you directly to the file so

00:27:06.870 --> 00:27:09.250
you don't have to hunt and peck for it.

00:27:09.910 --> 00:27:12.700
And let's say you want to come
back to this file regularly.

00:27:12.790 --> 00:27:18.340
Again, another shortcut for getting
back to a particular method

00:27:18.340 --> 00:27:20.670
is to set a breakpoint on it.

00:27:24.110 --> 00:27:26.570
Once this breakpoint is set,
it will be available in the project

00:27:26.640 --> 00:27:28.330
window under the breakpoint tab.

00:27:28.330 --> 00:27:32.540
And you can jump straight back to
where you were without losing a beat.

00:27:35.370 --> 00:27:39.960
Okay, so let's move on and
bring up the Find window.

00:27:39.960 --> 00:27:42.500
As I said, we have the common
standard textual search.

00:27:42.500 --> 00:27:45.360
We can bring up and look
for Release Bracket,

00:27:45.450 --> 00:27:46.300
let's say.

00:27:46.570 --> 00:27:50.970
And this will give us all the places in
the code where we're releasing objects.

00:27:54.020 --> 00:27:57.130
Single-clicking on the result will
give you a built-in editor view,

00:27:57.130 --> 00:28:00.630
and double-clicking on it will
open it into a separate editor

00:28:00.630 --> 00:28:02.400
if you want a larger context.

00:28:04.420 --> 00:28:07.410
So, for people who want to go a bit
further and have a lot more control

00:28:07.410 --> 00:28:12.040
over how their searches are done,
we have the regular expression searches.

00:28:12.040 --> 00:28:15.620
Scott's going to do a demo here
where we do a search across the

00:28:15.620 --> 00:28:19.300
entire project for all the places
where the copyright notice is.

00:28:19.390 --> 00:28:23.140
So, something that is done commonly
every year when you have to update

00:28:23.140 --> 00:28:24.980
your source code copyrights.

00:28:26.200 --> 00:28:29.310
And then once we've found them,
we can actually go ahead and change those

00:28:29.380 --> 00:28:31.940
copyright notices to the current year.

00:28:31.990 --> 00:28:37.360
Let's do that on just one of the files.

00:28:37.490 --> 00:28:40.430
So as you see, now we're up to 2002.

00:28:43.650 --> 00:28:46.270
So, I'm not sure how much further
we can go with the definition

00:28:46.270 --> 00:28:48.890
searches without the help,
but let's go ahead and try.

00:28:48.900 --> 00:28:49.690
I guess we can do that.

00:28:49.820 --> 00:28:50.800
We can do that.

00:28:50.800 --> 00:28:54.500
Alright, so let's do a definition
search for init with frame.

00:28:54.500 --> 00:28:59.140
And that'll give us all the places that
Project Builder believes that there's

00:28:59.140 --> 00:29:01.900
information about init with frame.

00:29:02.800 --> 00:29:07.350
: And in those cases where we did have,
where there's supposed to

00:29:07.350 --> 00:29:10.000
be a book or where we have a
reference in the documentation,

00:29:10.000 --> 00:29:11.910
you'll see a little book over here
you can click on and bring up,

00:29:11.990 --> 00:29:15.850
just like we had in the previous
release of Project Builder.

00:29:16.500 --> 00:29:25.100
[Transcript missing]

00:29:25.140 --> 00:29:29.820
: For full documentation search,
which is one of the new features in 2.0,

00:29:29.820 --> 00:29:31.100
you can type in natural language.

00:29:31.100 --> 00:29:34.110
Tell me everything you know
about view hierarchies.

00:29:34.140 --> 00:29:38.020
If I can type, I will do it.

00:29:41.120 --> 00:29:44.320
And that'll cut across all the
available documentation and give you

00:29:44.320 --> 00:29:48.710
a weighted result of the places that
it's found for view hierarchies.

00:29:52.300 --> 00:30:01.900
[Transcript missing]

00:30:02.530 --> 00:30:04.530
Okay, so there we go.

00:30:04.610 --> 00:30:08.450
And you can go directly to
view hierarchy information.

00:30:08.450 --> 00:30:08.450
So...

00:30:10.640 --> 00:30:14.760
If the find results or the find
criteria that we're using isn't

00:30:14.760 --> 00:30:19.000
exactly what you do normally,
we do have the options dialog for

00:30:19.000 --> 00:30:23.210
you to be able to set up custom
settings that you'll use regularly,

00:30:23.210 --> 00:30:27.100
and that will pop back into the pop-up
later for you to be able to choose.

00:30:27.100 --> 00:30:31.970
Okay,
so we'll come back to the slides again.

00:30:37.590 --> 00:30:39.970
One of the common things
you'll need to do is be able to

00:30:40.020 --> 00:30:41.840
navigate your code efficiently.

00:30:41.860 --> 00:30:45.190
Well, Project Builder tries to provide
as many shortcuts as possible.

00:30:45.190 --> 00:30:49.100
We have a symbols popup that will be
populated with all the information for

00:30:49.100 --> 00:30:52.720
the particular file you're editing,
and there's some preferences

00:30:52.720 --> 00:30:53.960
for that we'll look at.

00:30:54.310 --> 00:31:01.220
And then you have the counterpart toggle,
which gets you directly to the

00:31:01.220 --> 00:31:02.390
related file source if it's a header,
header if it's a source.

00:31:02.590 --> 00:31:23.420
And then you have the loaded
files pop-up in history.

00:31:23.420 --> 00:31:23.420
Now this is a little different
in 2.0 since we heavily use

00:31:23.420 --> 00:31:23.420
the multi-window aspect,
and that means that every editor

00:31:23.420 --> 00:31:23.420
is only going to show you the
history for that particular editor.

00:31:23.420 --> 00:31:23.420
So if you have a file per editor,
the history is pretty thin.

00:31:23.420 --> 00:31:23.420
But we can show you some
other ways to use that.

00:31:23.570 --> 00:31:26.600
Next,
there's the included headers pop-up.

00:31:26.690 --> 00:31:30.780
And this is a nice way to find out
where your code is being included

00:31:30.780 --> 00:31:35.740
and what your code is including in
the case of headers and source files.

00:31:35.780 --> 00:31:39.740
In this case, it will show you the
headers for this file.

00:31:39.810 --> 00:31:44.040
Then you have some shortcuts for getting
directly to the definition of a symbol.

00:31:44.080 --> 00:31:48.100
The command double-click shortcut on a
symbol also for going to documentation,

00:31:48.100 --> 00:31:50.120
option double-click.

00:31:51.080 --> 00:31:53.790
Next,
we move into standard editing of code.

00:31:53.870 --> 00:31:56.930
We have some control over
tab and indent widths,

00:31:56.930 --> 00:32:01.240
and we have since the December release
syntax-ware indenting.

00:32:01.290 --> 00:32:05.000
And this is pretty useful if you're
in a hurry and you want to actually

00:32:05.000 --> 00:32:08.820
have the editor help you finish code,
put in the finishing bracket,

00:32:08.830 --> 00:32:11.280
format the file for you as you're going.

00:32:11.700 --> 00:32:15.790
But in 2.0,
one of the new features is the ability

00:32:15.790 --> 00:32:18.470
to assign an editor by file type.

00:32:18.620 --> 00:32:24.750
So for the people who had the issue of
trying to have their HTML rendered versus

00:32:24.790 --> 00:32:30.320
having their HTML displayed as source,
you now have some control over exactly

00:32:30.530 --> 00:32:33.130
how that will work for your files.

00:32:34.080 --> 00:32:36.770
Of course,
we have standard arrow key navigation

00:32:36.770 --> 00:32:40.520
and some of the standard Emax
bindings for those familiar with Emax.

00:32:40.780 --> 00:32:43.170
If those aren't enough,
you have the ability to set

00:32:43.170 --> 00:32:45.050
your own custom key bindings.

00:32:45.150 --> 00:32:50.170
And I know a lot of people on our
team have a wide variety of sets,

00:32:50.170 --> 00:32:55.500
and it's interesting to see them
navigate in a different way.

00:32:56.080 --> 00:32:58.860
Lastly, we have the file encodings
and line headings.

00:32:58.860 --> 00:33:03.350
That's also per file if you want to
have some internationalized files.

00:33:04.850 --> 00:33:06.750
And then we have the source code control.

00:33:07.000 --> 00:33:10.530
So in Project Builder we're
heavily integrated with CVS.

00:33:10.660 --> 00:33:14.560
That means you have a CVS menu
always available to you if you have

00:33:14.560 --> 00:33:16.960
a CVS repository for your project.

00:33:17.030 --> 00:33:20.250
It has the basic operations
for status on the files,

00:33:20.250 --> 00:33:23.510
updating, reverting,
committing your changes,

00:33:23.580 --> 00:33:27.540
adding and removing files,
and then the ability to do compares

00:33:27.640 --> 00:33:32.230
against the base of the head revision and
against any two revisions arbitrarily.

00:33:32.270 --> 00:33:34.760
We'll do a demo of that.

00:33:34.860 --> 00:33:39.100
So we'll switch back to the demo.

00:33:47.430 --> 00:33:50.470
So we'll bring up an editor window,
and we'll take a look

00:33:50.470 --> 00:33:51.930
at the symbols pop-up.

00:33:51.930 --> 00:33:55.740
As you see here,
there's a lot of direct symbol

00:33:55.740 --> 00:33:59.000
information that you can jump to.

00:33:59.090 --> 00:34:06.350
But if this isn't everything
that you want to have available

00:34:06.350 --> 00:34:07.490
in the symbols pop-up,
there are some preferences for it.

00:34:07.490 --> 00:34:07.490
So you can have marks and

00:34:09.300 --> 00:34:15.370
www.microsoft.com/mechanics

00:34:16.280 --> 00:34:18.000
In the editor you also have
the Counterparts widget,

00:34:18.000 --> 00:34:18.770
which I mentioned.

00:34:18.780 --> 00:34:23.060
This will take us to the header
from the source and vice versa.

00:34:23.190 --> 00:34:26.560
That gives us two files
to look at in the history.

00:34:28.050 --> 00:34:31.600
and the ability to move
backward and forward.

00:34:31.680 --> 00:34:36.600
Something that's not in Scott's script,
but I wanted to show is if you want

00:34:36.600 --> 00:34:41.620
to keep this one window open and just
keep editing in it without necessarily

00:34:41.620 --> 00:34:48.400
obeying all of the multi-window features,
you can drag in a file from the

00:34:48.400 --> 00:34:50.970
file list into the editor and
it will load in that editor.

00:34:51.390 --> 00:34:56.040
and that'll give you the other
pop-up entry for that new file.

00:34:56.050 --> 00:35:00.320
I think you pulled the same file in.

00:35:00.320 --> 00:35:00.320
Anyway.

00:35:02.350 --> 00:35:05.490
If you click and hold on
the Counterparts button,

00:35:05.540 --> 00:35:09.790
this is where you'll get that list
of all of the included headers and

00:35:09.790 --> 00:35:12.290
files that include you as a header.

00:35:12.290 --> 00:35:17.010
It's very useful for finding out
how your code is tied together.

00:35:19.800 --> 00:35:23.800
I think, I don't know,
did you get the documentation reset?

00:35:23.800 --> 00:35:25.800
No, actually.

00:35:25.800 --> 00:35:28.870
Okay, so for going to the definition,
we have that ability with

00:35:28.880 --> 00:35:31.020
a command double click,
jump straight to the

00:35:31.020 --> 00:35:35.340
particular line of interest,
and then hopefully we can option double

00:35:35.340 --> 00:35:37.700
click and go to some documentation.

00:35:37.800 --> 00:35:41.940
There's the one I want.

00:35:47.100 --> 00:35:59.800
[Transcript missing]

00:36:00.900 --> 00:36:01.280
So, I'm going to show people one thing.

00:36:01.290 --> 00:36:01.560
Just the books.

00:36:01.560 --> 00:36:03.470
If you've never seen the books before,
this is what they look like.

00:36:03.530 --> 00:36:08.250
And so, if I can double-click on a book,
obviously it's going to come up.

00:36:08.420 --> 00:36:12.160
So, wherever you see that book,
single-clicking on it will

00:36:12.200 --> 00:36:13.900
put it in the same frame.

00:36:13.900 --> 00:36:15.900
Double-clicking will bring
it up in its own window.

00:36:15.900 --> 00:36:19.900
You'll find that's a general rule
across most of the multi-window UI.

00:36:19.900 --> 00:36:24.900
We've moved towards supplying some of
the features of keyboard navigation,

00:36:24.900 --> 00:36:26.840
so you'll see some differences
in how the lists operate.

00:36:27.340 --> 00:36:30.030
Sometimes the list will
keep its focus in there,

00:36:30.030 --> 00:36:33.010
which is unusual for
people who are used to it,

00:36:33.010 --> 00:36:35.900
switching focus to the built-in editor.

00:36:35.900 --> 00:36:37.900
But that's a different topic.

00:36:37.900 --> 00:36:41.300
We can go into that in
the Q&A if you wish.

00:36:42.040 --> 00:36:45.240
So, if you look at some of the
preferences for editing,

00:36:45.270 --> 00:36:50.040
you see that you have the control over
your tab widths and your line endings.

00:36:50.310 --> 00:36:53.480
And then for file encodings,

00:36:59.050 --> 00:37:06.990
and the syntax were indenting.

00:37:06.990 --> 00:37:06.990
You don't have to turn
this on if it bothers you.

00:37:06.990 --> 00:37:06.990
If it gets in your way, turn it off.

00:37:06.990 --> 00:37:06.990
If you like it, leave it on.

00:37:06.990 --> 00:37:06.990
It's very useful.

00:37:07.300 --> 00:37:10.640
Next we have the per-file editor.

00:37:10.640 --> 00:37:14.180
And you can drill down and show
you exactly where we've assigned

00:37:14.340 --> 00:37:17.110
editors to the HTML file.

00:37:19.690 --> 00:37:24.960
So I guess the next step is to go back
and look at some of the CVS integration.

00:37:24.960 --> 00:37:28.350
We have the CVS menu, as I said.

00:37:28.400 --> 00:37:33.380
The files in the project list,
in the files and groups list

00:37:33.380 --> 00:37:37.400
will give you some hint of what's
going on in the status for CVS.

00:37:37.400 --> 00:37:42.600
It has the modified flag updated,
added and removed.

00:37:42.600 --> 00:37:48.130
All of the operations you want
to do with CVS are usually

00:37:48.730 --> 00:37:51.530
available under the CVS menu.

00:37:51.530 --> 00:37:51.530
Let's take a look at the

00:37:52.090 --> 00:37:53.540
The history for the file.

00:37:53.540 --> 00:37:56.980
So bring up the info panel
on that particular file.

00:37:57.030 --> 00:37:59.630
You'll see the history of all
the CVS check-ins that have

00:37:59.630 --> 00:38:01.500
happened or commits for this file.

00:38:01.540 --> 00:38:08.630
And this is where you can actually make
an arbitrary choice of two versions.

00:38:08.630 --> 00:38:08.630
And, uh,

00:38:08.910 --> 00:38:11.920
Then go directly to comparing
those and get a graphical

00:38:11.920 --> 00:38:17.560
UI view of all the changes on a
per-change basis using File Merge.

00:38:24.100 --> 00:38:26.600
Okay, so I think we'll go back
to the slides again.

00:38:26.600 --> 00:38:29.340
We're on the home stretch.

00:38:29.340 --> 00:38:31.100
Stop orbiting.

00:38:31.100 --> 00:38:33.340
Okay.

00:38:33.340 --> 00:38:34.290
So we move on to building.

00:38:34.290 --> 00:38:37.570
This is where you spend a lot of your
time during your development processes,

00:38:37.890 --> 00:38:39.170
building and debugging.

00:38:39.170 --> 00:38:41.870
So you can define
targets and build styles.

00:38:41.880 --> 00:38:44.610
Mike spoke quite a bit
about that earlier.

00:38:44.750 --> 00:38:48.270
Your target editor gives you
a view onto that set of rules

00:38:48.270 --> 00:38:50.030
or recipes for your project.

00:38:50.180 --> 00:38:53.450
And then you have the build style
editor for doing the dynamic

00:38:53.730 --> 00:38:57.730
overrides of some of your target
settings for debug versus deployment,

00:38:57.730 --> 00:38:59.380
as an example.

00:38:59.510 --> 00:39:02.260
Some of the other shortcuts we've
added into the toolbar but have

00:39:02.280 --> 00:39:06.540
been available in the menu is the
ability to go directly to your active

00:39:06.540 --> 00:39:09.020
target or build style or executable.

00:39:09.020 --> 00:39:11.470
And then some build preferences
that we'll see in the demo

00:39:11.580 --> 00:39:12.850
and I'll talk more about.

00:39:12.890 --> 00:39:15.750
And then we'll do the actual
build and talk about some of

00:39:15.750 --> 00:39:19.710
the warnings and errors that we
see as we're going through that.

00:39:20.580 --> 00:39:23.750
So some of the new features,
this is the things that a lot of people

00:39:23.750 --> 00:39:26.260
have been waiting to hear about for 2.0.

00:39:26.260 --> 00:39:28.540
We have the GCC 3.1 support.

00:39:28.540 --> 00:39:30.100
I'm sure you've heard
that enough times already.

00:39:30.100 --> 00:39:32.160
I don't need to go into much detail.

00:39:32.210 --> 00:39:34.420
But to help you shorten
your compile times,

00:39:34.420 --> 00:39:36.800
which is a major issue
for Project Builder,

00:39:36.850 --> 00:39:39.790
you have the persistent
front-end support now,

00:39:39.830 --> 00:39:42.970
which is pre-compiled headers, basically.

00:39:43.230 --> 00:39:45.770
But beyond that,
we're going to try and bring

00:39:45.860 --> 00:39:49.580
this up to new features and new
functionality to get even better

00:39:49.580 --> 00:39:51.920
turnaround time on your compiles.

00:39:52.760 --> 00:39:57.120
Another little shortcut that we've added
is the ability to duplicate your targets.

00:39:57.160 --> 00:40:00.830
If your project has two different
versions that are different enough

00:40:00.830 --> 00:40:05.180
that build styles isn't enough,
you can duplicate the entire contents of

00:40:05.190 --> 00:40:07.800
the target and then go back and edit it.

00:40:07.970 --> 00:40:09.850
Then we have framework variants.

00:40:09.960 --> 00:40:15.840
Now, an important point of this is
that you get one framework entity,

00:40:15.840 --> 00:40:17.600
but you can have multiple
binaries in there.

00:40:17.600 --> 00:40:20.900
You can have a debug version,
a performance version,

00:40:20.900 --> 00:40:26.600
and then your shipping version,
and this is the resultant framework.

00:40:26.670 --> 00:40:30.680
Some of you who are Java people
wanted some better UI feedback

00:40:30.680 --> 00:40:34.280
or better UI support for
setting up your Java settings.

00:40:34.400 --> 00:40:36.200
That's in 2.0.

00:40:36.230 --> 00:40:38.600
And finally,
there's the script phases that

00:40:38.600 --> 00:40:42.010
can actually operate on your
project after it's been built.

00:40:42.090 --> 00:40:45.330
So once you've installed or
gotten to the point where you

00:40:45.330 --> 00:40:48.330
need to do some post-processing,
you have the ability to

00:40:48.330 --> 00:40:49.590
execute a script phase.

00:40:49.650 --> 00:40:53.080
So that's good for cleaning
up and doing other things.

00:40:54.580 --> 00:40:58.490
So once you've got the project to build,
you want to get your errors out,

00:40:58.490 --> 00:41:00.090
you move into debugging.

00:41:00.100 --> 00:41:02.960
We have the standard set of features
you're expecting in a debugger:

00:41:03.030 --> 00:41:06.000
breakpoints, stack backtrace threads,
popup,

00:41:06.000 --> 00:41:09.810
something that's pretty useful in 10
since your multi-threaded applications

00:41:09.830 --> 00:41:13.660
are starting to become very,
very important.

00:41:13.840 --> 00:41:17.890
Variable lists with some new
features I'll talk about in a second.

00:41:17.960 --> 00:41:20.330
And then execution control
as you'd expect for step,

00:41:20.330 --> 00:41:21.450
step, and two, et cetera.

00:41:21.620 --> 00:41:25.470
And then if what we're providing
in the user interface isn't

00:41:25.470 --> 00:41:29.190
enough for you in the GDB world,
you have a GDB console that

00:41:29.190 --> 00:41:31.970
you can go and type in commands
directly without changing your

00:41:31.970 --> 00:41:34.370
context out of Project Builder.

00:41:35.770 --> 00:41:37.850
So, the new features.

00:41:37.850 --> 00:41:42.520
Getting down to seeing what
your actual data looks like.

00:41:42.640 --> 00:41:46.200
This is a very important feature
for anybody who tries to debug and

00:41:46.200 --> 00:41:50.280
they need to be able to get past
just the hex address of something.

00:41:50.350 --> 00:41:55.510
You'll see that the tip of the
iceberg that we've provided,

00:41:55.710 --> 00:42:00.230
which is a step towards the full set,
is now the ability to see NSString values

00:42:00.230 --> 00:42:00.230
directly in your variable list.

00:42:01.670 --> 00:42:04.420
There'll be more coming,
I promise you that.

00:42:04.550 --> 00:42:07.830
And now we have a new type column,
which allows you to see on a

00:42:07.830 --> 00:42:11.870
one-to-one basis what each one of
the types of your variables are in

00:42:11.910 --> 00:42:14.200
the context of the variable list.

00:42:14.350 --> 00:42:19.510
And then the ability for Java programmers
to print descriptions directly to

00:42:19.520 --> 00:42:22.290
the console within the debug window.

00:42:22.470 --> 00:42:25.760
And finally,
if you want to set breakpoint, I'm sorry,

00:42:25.760 --> 00:42:29.770
set watchpoints on your variables,
we're taking advantage of that

00:42:29.770 --> 00:42:33.390
through the page protection
watchpoint support in GDB.

00:42:33.390 --> 00:42:38.100
This is a very quick and very
useful way of tracking exactly

00:42:38.100 --> 00:42:41.000
specific changes to variables.

00:42:41.000 --> 00:42:43.190
So let's do the last demo.

00:42:48.920 --> 00:42:50.690
take a look at the target editor.

00:42:50.690 --> 00:42:54.120
Well, for the observant,
you'll find right away that this is

00:42:54.120 --> 00:42:55.890
not exactly what you're used to seeing.

00:42:55.890 --> 00:42:58.660
This is some of the new features
that are going into the real

00:42:58.660 --> 00:43:00.340
Jaguar version when we're done.

00:43:00.400 --> 00:43:01.820
It's a hierarchical view.

00:43:01.830 --> 00:43:03.850
There aren't tabs anymore.

00:43:03.910 --> 00:43:09.130
And whenever you select a particular
area of settings to operate on,

00:43:09.130 --> 00:43:13.100
that is what's compiled -- I'm sorry,
that's what's assembled together

00:43:13.100 --> 00:43:14.660
in the editor panel to the right.

00:43:14.670 --> 00:43:19.930
So you have the ability to drill down
to specific areas of the settings.

00:43:25.150 --> 00:43:29.620
We also have the ability to go to
the shortcuts for active targets,

00:43:29.680 --> 00:43:32.340
active build style,
and active executable.

00:43:32.340 --> 00:43:35.340
You'll see those in the upper
left corner of the toolbar.

00:43:35.440 --> 00:43:40.260
It's a nice way to
navigate around quickly.

00:43:40.260 --> 00:43:43.210
So let's take a look at some
of the build preferences.

00:43:47.910 --> 00:43:53.070
This is where you'd have the ability to
set exactly where your target application

00:43:53.080 --> 00:43:57.910
will build and still keep your symbols
and intermediate files separate.

00:43:57.940 --> 00:43:59.790
This is a global setting
for Project Builder.

00:43:59.790 --> 00:44:02.760
If you don't override it
on a per-project basis,

00:44:02.830 --> 00:44:05.110
this is where the pieces will go.

00:44:07.950 --> 00:44:11.050
So we'll take a look at... If you
check... If you bring up the info

00:44:11.180 --> 00:44:14.600
window on the project itself,
this is where you have the ability,

00:44:14.600 --> 00:44:17.900
as I said,
to override that location information.

00:44:17.900 --> 00:44:21.910
And this project will build in a
different location if you tell it to.

00:44:24.220 --> 00:44:26.200
Okay, so let's do a build.

00:44:26.200 --> 00:44:30.290
You see that there is a
separate build window now,

00:44:30.290 --> 00:44:32.240
and the log information is available.

00:44:32.240 --> 00:44:34.200
You can collapse the panel if you want.

00:44:34.200 --> 00:44:36.710
You can edit the window to
be exactly the size and form

00:44:36.710 --> 00:44:38.300
factor you're interested in.

00:44:38.400 --> 00:44:41.440
Now, we found an error,
so when you click on the error,

00:44:41.510 --> 00:44:43.880
you go directly to that
line in the source code.

00:44:44.070 --> 00:44:46.000
But if you double-click,
you get your editor,

00:44:46.010 --> 00:44:49.740
so you have a larger context.

00:44:49.770 --> 00:44:52.990
So let's fix the bug and move on.

00:45:02.590 --> 00:45:04.640
So now we're going to go
into the debugging phase.

00:45:04.690 --> 00:45:07.030
As you see,
this is the template that we defined.

00:45:07.040 --> 00:45:10.370
This is the new view onto debugging.

00:45:12.920 --> 00:45:16.720
So when we get to a breakpoint,
you see how the information is organized.

00:45:16.720 --> 00:45:19.570
You have your stack frame,
your variable list,

00:45:19.570 --> 00:45:23.320
you have your breakpoint tab open
with the breakpoints that you

00:45:23.320 --> 00:45:27.900
currently have set in the application,
and you have your threads pop up.

00:45:27.900 --> 00:45:31.710
Of course, you have your navigation
controls for step,

00:45:31.710 --> 00:45:33.990
step into, step over, etc.

00:45:34.040 --> 00:45:37.100
And then there's a different one
than most people are used to seeing,

00:45:37.100 --> 00:45:40.870
which is a restart,
which allows you to quit and restart

00:45:40.940 --> 00:45:42.500
without ending your GDB session.

00:45:46.470 --> 00:45:48.840
Now, some of the things you're going
to see that I mentioned that are

00:45:48.840 --> 00:45:50.390
new are the view onto the string.

00:45:50.410 --> 00:45:55.400
You have your NSString content directly
available in the variable list itself.

00:45:55.410 --> 00:45:58.210
It's very nice to actually
see below the curtain,

00:45:58.210 --> 00:46:00.400
or below the sheets in this case.

00:46:00.530 --> 00:46:03.130
And it's going to turn
on the type list column,

00:46:03.130 --> 00:46:07.140
so you can see where your actual
variables relate to their types.

00:46:07.140 --> 00:46:14.810
And as we go back to the slides,

00:46:18.090 --> 00:46:19.180
That's actually it for me.

00:46:19.180 --> 00:46:23.690
I'm going to bring Mike Ferris back to
give you some of the future directions.

00:46:23.690 --> 00:46:23.690
Thanks.

00:46:29.710 --> 00:46:31.500
and good demos.

00:46:31.600 --> 00:46:36.730
Let me take this opportunity to mention,
yeah, definitely read the release

00:46:36.830 --> 00:46:39.600
notes that came with,
especially the Jaguar seed.

00:46:39.660 --> 00:46:44.410
As we saw there is the one
glitch with having the index,

00:46:44.500 --> 00:46:47.740
the help so that PB can
show the book icons.

00:46:47.740 --> 00:46:50.460
You'll need to do that
manually in the Jaguar seed.

00:46:50.460 --> 00:46:53.100
It should happen
automatically in the April CD,

00:46:53.100 --> 00:46:57.060
and it will certainly happen
automatically by the time we ship Jaguar.

00:46:57.060 --> 00:47:02.920
So I want to talk a little bit about
where we're going with Project Builder.

00:47:03.240 --> 00:47:06.170
And I figured that really, I mean,

00:47:06.700 --> 00:47:10.640
All you really need to know would
be our group's mission statement.

00:47:10.700 --> 00:47:13.700
And if you knew that,
you'd know exactly where we're going.

00:47:13.700 --> 00:47:18.470
So here it is.

00:47:20.800 --> 00:47:23.800
I hope that that answers
all of your questions.

00:47:23.950 --> 00:47:26.220
All right.

00:47:26.340 --> 00:47:32.890
But, you know, let's dive down a little
bit in some detail here.

00:47:33.930 --> 00:47:35.410
We get a lot of bug reports.

00:47:35.500 --> 00:47:37.720
We get a lot of ideas and
suggestions from all of you

00:47:37.720 --> 00:47:39.500
who've been using Project Builder.

00:47:39.560 --> 00:47:43.940
And that helps us to figure
out where we're going.

00:47:43.940 --> 00:47:47.160
We also have a lot of our own
cool ideas and things that we'd

00:47:47.160 --> 00:47:49.250
like to do and provide for you.

00:47:51.460 --> 00:47:55.250
Like every other team in Apple,
we keep track of all of the

00:47:55.350 --> 00:47:59.780
bug reports that come in using
our radar bug tracking system.

00:47:59.840 --> 00:48:05.260
Your interface to that is through
the bug reporter site at the ADC.

00:48:05.260 --> 00:48:09.050
We encourage you to submit
bugs when you find them,

00:48:09.050 --> 00:48:12.590
submit enhancement requests
if you think you have a good

00:48:12.640 --> 00:48:14.540
idea as to what we can do.

00:48:14.600 --> 00:48:17.340
You also may hear us talk from time
to time if you subscribe to the

00:48:17.430 --> 00:48:21.910
Project Builder users mailing list about
this list of features that we have.

00:48:21.940 --> 00:48:23.660
And you'll say gee,
wouldn't it be great if

00:48:23.780 --> 00:48:24.930
Project Builder could do this?

00:48:24.930 --> 00:48:26.440
And we say yeah, yeah,
that's on the list.

00:48:26.440 --> 00:48:29.990
Well, there is a list.

00:48:31.250 --> 00:48:33.640
Just so you don't think
we're making it up.

00:48:33.700 --> 00:48:36.640
This is part of the list.

00:48:36.840 --> 00:48:43.230
So, you know,
I'll leave that up there for a moment,

00:48:43.230 --> 00:48:49.140
so if any of you, you know,
see that your feature isn't on there,

00:48:49.140 --> 00:48:49.140
you can just shout it out.

00:48:49.140 --> 00:48:49.140
There's only two items
on here that aren't real.

00:48:51.350 --> 00:48:55.640
So, you know, as you can see,
the point of this slide is that,

00:48:55.640 --> 00:48:57.750
you know,
we have a lot of stuff that we really

00:48:57.750 --> 00:48:59.730
want to do and we really want to provide.

00:48:59.910 --> 00:49:02.550
And obviously we can't do it all at once.

00:49:02.690 --> 00:49:05.400
The Project Builder team is not huge,
all right?

00:49:05.440 --> 00:49:08.920
And so we need to
prioritize these things.

00:49:11.220 --> 00:49:12.560
There are some major areas.

00:49:12.560 --> 00:49:14.260
Let me talk in a little
bit of detail here.

00:49:14.380 --> 00:49:16.700
So that list was all fine and good.

00:49:16.700 --> 00:49:21.520
But we really want to support some
plugin APIs in the near future so

00:49:21.520 --> 00:49:26.170
that you guys can actually help us
to implement some of the things.

00:49:26.600 --> 00:49:30.000
We want to expose plugin APIs for many
different areas of Project Builder.

00:49:30.000 --> 00:49:33.100
Some of the key ones that will probably
be coming first would be things like

00:49:33.580 --> 00:49:36.840
plugin build tool support if you
have languages that we don't support

00:49:36.840 --> 00:49:40.500
and you have a compiler and you want
to integrate it in Project Builder.

00:49:40.500 --> 00:49:43.720
We'd like to support
plugin editors so that,

00:49:43.720 --> 00:49:47.990
you know, you can do like the technical
publications group that Apple did

00:49:48.280 --> 00:49:51.920
and provide a Project Builder plugin
that reads HTML documentation or that

00:49:52.280 --> 00:49:55.430
reads whatever file type you want,
that it can happen right

00:49:55.430 --> 00:49:57.090
inside Project Builder.

00:49:57.600 --> 00:50:00.990
The other way around on that one,
we'd like to support an API that

00:50:00.990 --> 00:50:02.540
lets us use other editors.

00:50:02.540 --> 00:50:05.270
So if you really,
really like some other editor

00:50:05.270 --> 00:50:09.140
instead of our code editor,
we'd like to let you use it.

00:50:10.520 --> 00:50:17.840
We also would like to provide APIs for
new indexing engines for other languages,

00:50:17.920 --> 00:50:24.350
debugger plugins, SCM plugins,
new preferences panes, new assistants,

00:50:24.450 --> 00:50:26.500
project templates, all this stuff.

00:50:26.520 --> 00:50:28.540
We want to do all of
this stuff eventually.

00:50:28.690 --> 00:50:29.920
We're not going to do it all at once.

00:50:30.000 --> 00:50:32.000
And you'll see,
hopefully in the near future,

00:50:32.000 --> 00:50:36.490
some rolling out of various plugin
APIs that will let you guys get started

00:50:36.500 --> 00:50:39.290
with various areas of this stuff.

00:50:40.200 --> 00:50:44.860
We have a lot of ideas for
the editor and the indexer.

00:50:44.920 --> 00:50:46.760
A lot of those are related.

00:50:46.850 --> 00:50:49.400
We'd like to provide code completion.

00:50:49.500 --> 00:50:52.280
We'd like to provide
some refactoring support.

00:50:52.420 --> 00:50:57.240
We'd like to provide you with the ability
to edit your code from the class browser.

00:50:57.240 --> 00:51:00.580
You know, I want to be able to select an
inherited method in my class and say,

00:51:00.580 --> 00:51:01.300
"You know what?

00:51:01.360 --> 00:51:04.040
Override this." I want to be
able to select a class and say,

00:51:04.040 --> 00:51:06.700
"Make me a category on this
class," or "Make me a subclass of

00:51:06.740 --> 00:51:10.300
this class." All of this stuff,
we'd really like to be

00:51:10.300 --> 00:51:12.290
able to do this stuff.

00:51:13.860 --> 00:51:16.410
Lots of stuff in the build
system that we'd like to do.

00:51:16.510 --> 00:51:20.210
We showed you the new target editor,
but that's still showing you a sort

00:51:20.210 --> 00:51:22.460
of a process-oriented view of things.

00:51:22.500 --> 00:51:26.790
You have to tell us the
steps to build your target.

00:51:27.210 --> 00:51:29.230
Ultimately,
we'd like to provide another view.

00:51:29.350 --> 00:51:31.700
We'll probably have both,
so you can switch between them.

00:51:31.810 --> 00:51:34.500
We'd like to provide you
another view that allows you to,

00:51:34.610 --> 00:51:37.280
instead of so much telling
us how to build your thing,

00:51:37.450 --> 00:51:39.440
tell us what your thing looks like.

00:51:39.820 --> 00:51:42.840
And then we'll figure out what
the steps are to build it.

00:51:44.400 --> 00:51:47.940
We'd like to provide more feedback
if you have a target and you're

00:51:47.940 --> 00:51:50.560
looking at the build settings and
one of those settings would be

00:51:50.560 --> 00:51:53.540
overridden by the current build style,
you should be able to tell that

00:51:53.540 --> 00:51:54.900
by looking in the target editor.

00:51:54.980 --> 00:51:58.290
You should be able to tell what the value
of a particular build setting would be

00:51:58.290 --> 00:52:00.260
if you hit the build button right now.

00:52:00.360 --> 00:52:04.600
You should be able to tell what files
need to be rebuilt before you build.

00:52:04.740 --> 00:52:09.010
You should be able to, you know,
have some way of looking at

00:52:09.010 --> 00:52:12.260
a build setting and not only
say what its current value is,

00:52:12.260 --> 00:52:13.860
but how it got that value.

00:52:13.860 --> 00:52:16.160
You know, it started out with this
in the target and then the

00:52:16.160 --> 00:52:18.460
build style added this thing,
and, you know,

00:52:18.460 --> 00:52:21.080
the product type that you have
selected added these other flags.

00:52:21.100 --> 00:52:24.810
That kind of stuff,
we'd love to expose that.

00:52:26.220 --> 00:52:27.940
Lots of areas for
improvement in the bugger.

00:52:27.940 --> 00:52:30.340
We'd like to add, you know,
a lot more of this

00:52:30.340 --> 00:52:35.200
opaque data type viewing,
which the NSString value, you know,

00:52:35.200 --> 00:52:38.190
in the variable list is
just the beginning of.

00:52:39.340 --> 00:52:42.700
We'd like to add support for, you know,
watch expressions.

00:52:42.700 --> 00:52:45.070
Actually,
we've got some support for that that'll

00:52:45.080 --> 00:52:46.850
be shown in the debugger session.

00:52:47.100 --> 00:52:52.610
We'd like to add memory inspection
windows and register windows,

00:52:52.610 --> 00:52:56.910
and there's lots of stuff in
the debugger we'd like to add.

00:52:57.060 --> 00:52:59.100
There's lots of stuff all over
Project Builder we'd like to add.

00:52:59.100 --> 00:53:01.460
We're really proud of what
we've done with Project Builder,

00:53:01.580 --> 00:53:04.800
but we know that there's a lot
more stuff that we could do.

00:53:04.850 --> 00:53:07.920
And I think that, you know, we're,
as a team, very enthusiastic about

00:53:07.930 --> 00:53:09.380
doing all this stuff.

00:53:09.450 --> 00:53:12.200
So the point of this is not to say,
"Yeah, all these things I'm talking about

00:53:12.200 --> 00:53:14.830
are coming tomorrow." In fact,
it's more the opposite.

00:53:14.900 --> 00:53:17.820
What I'm saying is,
there's so much stuff that we want to do,

00:53:17.880 --> 00:53:20.000
it's not all coming tomorrow.

00:53:20.050 --> 00:53:22.350
And, you know,
we can't really say when specific

00:53:22.620 --> 00:53:27.000
things are coming because we don't
often know too far in advance.

00:53:27.000 --> 00:53:29.000
what the most important
things are gonna be.

00:53:29.010 --> 00:53:31.490
But you can help us decide.

00:53:33.860 --> 00:53:37.500
We do, you know,
listen to external feedback.

00:53:37.550 --> 00:53:38.900
We listen to internal feedback.

00:53:39.000 --> 00:53:41.260
A lot of people at Apple use this stuff.

00:53:41.330 --> 00:53:44.340
Often the needs for internal and
external developers are the same,

00:53:44.340 --> 00:53:47.740
but sometimes there's some very
specific need for internal developers.

00:53:47.780 --> 00:53:49.380
We have to factor all that in.

00:53:49.720 --> 00:53:54.040
We also occasionally have stuff that's
going on with Mac OS X as a whole

00:53:54.240 --> 00:53:59.000
that's some new thing that's going
to need Project Builder support.

00:53:59.000 --> 00:54:03.620
And so those platform initiatives
also feed into how we prioritize.

00:54:05.220 --> 00:54:07.420
From your point of view, though,
the very important thing to keep in

00:54:07.420 --> 00:54:12.540
mind is that if we don't know about
something that you'd like to have done,

00:54:12.650 --> 00:54:14.500
we can't prioritize it.

00:54:14.580 --> 00:54:17.100
So be sure you report
bugs when you find them.

00:54:17.100 --> 00:54:21.090
Be sure that you file
enhancement requests.

00:54:21.470 --> 00:54:25.710
Use Bug Reporter if you also want to use
the Project Builder users list or the

00:54:25.710 --> 00:54:30.740
Mac OS X tools feedback list to sort of,
you know, get some community reaction to,

00:54:30.740 --> 00:54:33.320
you know,
whether your suggestion is a good one.

00:54:33.460 --> 00:54:36.780
That's all fine,
but definitely use Bug Reporter.

00:54:37.190 --> 00:54:41.480
So I hope we showed you some
good improvements today.

00:54:41.480 --> 00:54:44.700
And I hope that, you know,
we'll be continuing to prove this

00:54:45.090 --> 00:54:46.650
stuff for you as we go along here.

00:54:46.780 --> 00:54:49.440
And that's the end of our
prepared program here.

00:54:49.470 --> 00:54:54.230
And now I'm going to ask Godfrey
to come back up to run us through

00:54:54.230 --> 00:54:58.090
the road maps and so forth,
and then do the Q&A.

00:54:58.150 --> 00:54:59.100
Thanks.

00:54:59.100 --> 00:55:04.040
Thank you very much, Mike.

00:55:04.040 --> 00:55:05.100
What do you think, everyone?

00:55:05.100 --> 00:55:07.620
- Hey everyone,
do you think they've done a great job?

00:55:10.830 --> 00:55:13.790
Okay, the slide on the screen is
showing you more information

00:55:13.790 --> 00:55:17.770
sources about Project Builder,
about our tools in general,

00:55:17.870 --> 00:55:20.660
including the address for
the bug reporting page,

00:55:20.660 --> 00:55:23.670
something that if you have a concern,
if you have an issue,

00:55:23.820 --> 00:55:26.670
you should definitely go to the
bug reporter and send it to us.

00:55:26.720 --> 00:55:31.470
We need to know this in
order to prioritize and

00:55:31.470 --> 00:55:31.470
build our new feature list.

00:55:31.860 --> 00:55:35.330
A roadmap to sessions to come
in the Tools track tomorrow

00:55:35.330 --> 00:55:37.460
afternoon using Interface Builder.

00:55:37.460 --> 00:55:39.900
For those of you who are just
beginning to get involved with

00:55:40.040 --> 00:55:42.310
Interface Builder with nib files,
this will be a very,

00:55:42.360 --> 00:55:46.250
very good session to introduce you to
the concepts and the means of working it.

00:55:46.390 --> 00:55:47.340
Apple Performance Tool.

00:55:47.340 --> 00:55:50.660
In addition to Project Builder
and Interface Builder,

00:55:50.780 --> 00:55:54.800
we also supply on our CD in our
Tools package a suite of performance

00:55:54.800 --> 00:56:00.800
tools so that you can optimize and make
your applications perform at their best.

00:56:00.920 --> 00:56:04.530
On Friday, we go into great depth in
Project Builder to talk about how

00:56:04.600 --> 00:56:07.440
you actually deliver applications,
how you can get the most

00:56:07.450 --> 00:56:08.680
out of the build system.

00:56:08.680 --> 00:56:10.930
A very, very good session.

00:56:10.930 --> 00:56:13.400
I highly recommend that
you come to that one.

00:56:13.540 --> 00:56:16.680
And of course, Friday after that session,
we have our development

00:56:16.680 --> 00:56:17.820
tools feedback forum.

00:56:18.080 --> 00:56:19.350
We'd love to hear your feedback.

00:56:19.520 --> 00:56:24.910
I believe most of the team will be there
at the session looking to listen to you.

00:56:26.060 --> 00:56:29.920
For contacts, I in technology management
remain a single point of contact

00:56:29.920 --> 00:56:32.100
if you have specific needs.

00:56:32.100 --> 00:56:34.000
If you're looking to
move to Project Builder,

00:56:34.000 --> 00:56:36.860
if you're looking to integrate
something into Project Builder,

00:56:36.870 --> 00:56:37.770
I'd like to hear about it.

00:56:37.840 --> 00:56:41.210
I can help work a relationship
with the team as necessary.

00:56:41.460 --> 00:56:43.390
We have a set of mailing lists.

00:56:43.490 --> 00:56:47.530
The master address here
includes Project Builder users,

00:56:47.800 --> 00:56:51.270
which allows all of you to collaborate
with each other as well as with us.

00:56:51.530 --> 00:56:53.440
We get a lot of input from this.

00:56:53.440 --> 00:56:55.160
We try to put a lot of input back.

00:56:55.470 --> 00:57:00.200
And sometimes you can actually help
each other get your problem solved.

00:57:00.270 --> 00:57:03.900
And we also have the development
tools engineering feedback address.

00:57:03.970 --> 00:57:07.230
This is if you have an issue or a
feature request that you'd like the

00:57:07.370 --> 00:57:11.200
entire engineering team in our tools
development organization to know about,

00:57:11.250 --> 00:57:15.790
this sends your message to us internally
without broadcasting it to the world.

00:57:15.840 --> 00:57:19.380
So this is often a way for you to
get in touch with the right people.

00:57:19.750 --> 00:57:23.760
We all monitor this on a daily basis
and try to give feedback and try to

00:57:23.760 --> 00:57:24.800
give responses on a very timely basis.

00:57:24.800 --> 00:57:25.800
very timely basis.