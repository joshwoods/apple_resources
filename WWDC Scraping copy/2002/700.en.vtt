WEBVTT

00:00:02.470 --> 00:00:03.290
Good morning.

00:00:03.290 --> 00:00:07.130
I'd like to welcome you all to the
WebObjects State of the Union session.

00:00:07.140 --> 00:00:12.060
We have a full week of sessions for you,
and this is the kickoff for the

00:00:12.060 --> 00:00:14.540
suite of WebObjects sessions.

00:00:14.540 --> 00:00:16.520
Before getting started,
I wanted to thank all of you for

00:00:16.520 --> 00:00:18.050
getting up so early and joining us.

00:00:18.160 --> 00:00:20.980
I apologize for the start time
of these conference sessions.

00:00:20.980 --> 00:00:27.060
But we have so much to fit into the week
that we have to get a pretty early start.

00:00:27.150 --> 00:00:29.630
So I'd like to introduce Bob Fraser.

00:00:29.690 --> 00:00:33.850
He is the WebObjects
Product Marketing Manager.

00:00:33.850 --> 00:00:33.850
Bob?

00:00:41.910 --> 00:00:44.050
Morning everybody.

00:00:44.050 --> 00:00:47.780
I just gave Tony my hat that I tend
to wear around here at the conference,

00:00:47.800 --> 00:00:50.040
making me a little bit
of an easier target.

00:00:50.060 --> 00:00:53.500
I really like interacting with
customers and that will make

00:00:53.500 --> 00:00:56.020
me a little bit easier to find.

00:00:56.020 --> 00:01:00.180
So WWDC is kind of a special
time for me because I joined

00:01:00.260 --> 00:01:03.170
Apple just before last year's WWDC.

00:01:03.260 --> 00:01:07.060
I'm having a ball at
Apple and I love WebObjects.

00:01:07.060 --> 00:01:08.130
So I was never at Next.

00:01:08.130 --> 00:01:09.690
I was an old list machine hacker.

00:01:09.720 --> 00:01:12.240
And these were machines that
were built from the ground

00:01:12.340 --> 00:01:13.790
up to run Lisp on hardware.

00:01:13.790 --> 00:01:16.230
They had an object-oriented
layer on there.

00:01:16.230 --> 00:01:18.310
They had development environment.

00:01:18.310 --> 00:01:21.630
And what I remember about it is
I remember the incredible power

00:01:21.630 --> 00:01:24.840
of that development environment
and how it allowed me to do more.

00:01:24.950 --> 00:01:30.440
I remember basically how I could--I was
amazed at what I could do by writing

00:01:30.440 --> 00:01:32.860
just a few well-placed lines of code.

00:01:32.860 --> 00:01:37.960
And those are exactly the same things
that I love about WebObjects today.

00:01:38.070 --> 00:01:39.250
That same kind of power,
that same kind of elegance

00:01:39.250 --> 00:01:41.500
of object-oriented code,
that same of object-oriented

00:01:41.500 --> 00:01:44.410
design and what you can really do.

00:01:44.890 --> 00:01:47.710
So welcome to WebObjects:
State of the Union.

00:01:47.800 --> 00:01:52.000
This is, I guess,
the intro session for a whole track.

00:01:52.070 --> 00:01:57.390
And let me grab the clicker here.

00:02:01.710 --> 00:02:07.210
So over the course of this,
we've had a very full year.

00:02:07.310 --> 00:02:12.880
Last year at WWDC was the
introduction of WebObjects in Java.

00:02:12.990 --> 00:02:16.910
Since then,
we've released WebObjects 5.1,

00:02:17.010 --> 00:02:19.830
and we have other great
things in the works.

00:02:20.380 --> 00:02:23.540
So over the course of this presentation,
you'll get to meet some of the people

00:02:23.660 --> 00:02:25.580
who are the developers of WebObjects.

00:02:25.690 --> 00:02:27.220
You'll get to meet some of
the people behind the scenes

00:02:27.220 --> 00:02:29.470
who are supporting WebObjects.

00:02:29.550 --> 00:02:34.230
And we'll talk about WebObjects past,
present.

00:02:34.330 --> 00:02:37.320
And one of the great things about
this year's WWDC is that the

00:02:37.320 --> 00:02:39.420
cone of silence has been lifted.

00:02:39.520 --> 00:02:42.270
And we'll actually be able to
talk about future directions.

00:02:42.450 --> 00:02:45.220
And in quite a number of the
sessions that are here at WWDC,

00:02:45.220 --> 00:02:48.270
you'll be able to see technology
demonstrations of the feature

00:02:48.270 --> 00:02:51.380
sets that we're working on.

00:02:51.540 --> 00:02:54.150
We will also have a presentation--

00:02:56.200 --> 00:02:58.100
Thank you.

00:02:58.100 --> 00:03:00.200
Over this year,
our documentation team has

00:03:00.200 --> 00:03:01.240
been working very hard as well.

00:03:01.240 --> 00:03:03.800
They've written hundreds of
pages of new documentation.

00:03:03.910 --> 00:03:06.270
So we'll get a presentation from them.

00:03:06.290 --> 00:03:11.750
And we'll also hear from our professional
services and our training folks.

00:03:11.850 --> 00:03:14.960
At the end,
because WebObjects is so comprehensive,

00:03:15.070 --> 00:03:19.250
we'll kind of go over different
tracks you may want to follow

00:03:19.250 --> 00:03:22.600
of the WebObjects sessions,
depending on your

00:03:22.700 --> 00:03:25.110
familiarity with WebObjects.

00:03:25.170 --> 00:03:26.090
So let's get started.

00:03:28.130 --> 00:03:34.550
WebObjects is a powerful set of tools,
frameworks, and runtimes for developing

00:03:34.700 --> 00:03:38.550
and delivering Java and
web-based applications.

00:03:39.620 --> 00:03:45.000
It's an Apple software product,
and in it you get everything you need.

00:03:45.060 --> 00:03:48.140
You get an integrated
development environment.

00:03:48.200 --> 00:03:50.930
We take care of database
mapping and getting the data

00:03:50.940 --> 00:03:52.800
out of a database for you.

00:03:52.850 --> 00:03:55.540
We take care of the presentation
layer and delivering that data

00:03:55.540 --> 00:03:57.800
to the end user experience.

00:03:57.850 --> 00:04:01.000
There's graphical design tools
for designing user interfaces.

00:04:01.040 --> 00:04:04.290
There's a visual development
environment tools that let you

00:04:04.290 --> 00:04:06.360
do drag and drop programming.

00:04:06.410 --> 00:04:09.100
And we even throw in
an application server.

00:04:11.720 --> 00:04:15.870
The key advantages of WebObjects
are faster development,

00:04:15.980 --> 00:04:20.870
better results at the end of the day,
and lower overall costs.

00:04:22.190 --> 00:04:27.560
and the way we accomplish this: First,
we've got great tools.

00:04:27.660 --> 00:04:30.860
And these tools allow you
to get to market quicker.

00:04:31.830 --> 00:04:36.300
They work in conjunction with frameworks
that have been developed over years

00:04:36.300 --> 00:04:42.000
and have best practices programming
and that do a lot of the heavy lifting

00:04:42.000 --> 00:04:46.340
for you and handle a lot of detail
things and perform a lot of really

00:04:46.340 --> 00:04:48.780
hard tasks so that you don't have to.

00:04:48.950 --> 00:04:53.760
and it's all object oriented
and the frameworks foster reuse.

00:04:53.760 --> 00:04:56.480
So this makes incremental
development easy.

00:04:56.550 --> 00:04:59.750
And incremental development is
good because your user requirements

00:04:59.750 --> 00:05:00.920
are constantly changing.

00:05:01.010 --> 00:05:03.720
And so what you can do is you
can do evolutionary programming.

00:05:03.720 --> 00:05:05.140
You can do rapid turnaround.

00:05:05.200 --> 00:05:06.520
You can do things like that.

00:05:06.520 --> 00:05:09.190
And so that gets things out
quicker and makes it easier

00:05:09.190 --> 00:05:11.080
to design and deliver better.

00:05:11.240 --> 00:05:15.420
And also, because of these frameworks,
the more we do and maintain,

00:05:15.420 --> 00:05:18.460
the less code that you have to
write and the less code you have to

00:05:18.460 --> 00:05:21.090
the less code you have to maintain.

00:05:22.800 --> 00:05:26.940
So, the key features that
WebObjects is known for:

00:05:26.980 --> 00:05:31.600
automated database access,
page generation.

00:05:31.650 --> 00:05:36.580
You can also deliver very compelling
desktop applications as well.

00:05:36.850 --> 00:05:41.780
A complete set of integrated tools
and your choice of deployment.

00:05:43.960 --> 00:05:49.360
Let's look at an application
server architecture.

00:05:49.490 --> 00:05:54.230
The goal here, the name of the game,
is to try and get content delivered

00:05:54.670 --> 00:05:57.820
on the right-hand side of the
screen in either a web application

00:05:58.030 --> 00:06:01.260
or other application interface.

00:06:01.350 --> 00:06:06.110
And the simplest form of that
would be a static HTML page being

00:06:06.490 --> 00:06:08.920
delivered from a web server.

00:06:09.690 --> 00:06:13.540
That's okay, and that definitely serves
a good purpose out there,

00:06:13.540 --> 00:06:15.280
but you know,
things are evolving on the web.

00:06:15.280 --> 00:06:18.760
And so what you really want for
a compelling experience is to be

00:06:18.760 --> 00:06:22.230
able to take user interaction that
comes in and have dynamic content.

00:06:22.230 --> 00:06:25.560
Dynamic content would tend to be
delivered from data sources represented

00:06:25.560 --> 00:06:28.060
on the left-hand side of the screen here.

00:06:28.060 --> 00:06:31.940
And so the way that's often done in an
application server is the application

00:06:31.940 --> 00:06:35.440
server is kind of a middleman,
and it would use templates

00:06:35.590 --> 00:06:38.670
and business logic,
or application logic.

00:06:38.830 --> 00:06:41.010
And you mix in the user
requirements with the data,

00:06:41.010 --> 00:06:43.960
and you muddle it around a little bit,
and then you figure out how

00:06:43.960 --> 00:06:45.430
you're going to present it.

00:06:45.650 --> 00:06:48.340
And WebObjects does all that.

00:06:48.340 --> 00:06:51.330
And we have what would be considered
a classic three-tiered architecture.

00:06:51.330 --> 00:06:55.260
You have the presentation layer,
in this case showing HTML.

00:06:55.390 --> 00:06:58.590
You've got an application server
that would model your business logic.

00:06:58.680 --> 00:07:01.940
And you have your data
sources or your data layer.

00:07:02.050 --> 00:07:07.530
Now what makes WebObjects unique
is wrapped around all of this,

00:07:07.580 --> 00:07:09.810
we have a very powerful object model.

00:07:11.490 --> 00:07:13.780
So we have a very powerful object model.

00:07:13.780 --> 00:07:16.120
We also have very clean
separation of these layers.

00:07:16.170 --> 00:07:18.100
We also have frameworks for each layer.

00:07:18.150 --> 00:07:19.680
We also have tools that
work with each layer.

00:07:23.360 --> 00:07:28.840
In addition, we're not limited to
just delivering HTML.

00:07:28.930 --> 00:07:31.900
We can also deliver full
desktop applications and

00:07:31.900 --> 00:07:33.550
Java swing-based applications.

00:07:36.040 --> 00:07:37.900
Let's look at the data layer.

00:07:38.020 --> 00:07:42.540
So here we want to get data out of
a database or data source and get

00:07:42.540 --> 00:07:45.110
that represented as Java objects.

00:07:45.720 --> 00:07:49.430
So we have a tool called
ELModeler and frameworks called

00:07:49.440 --> 00:07:51.440
Enterprise Objects Frameworks.

00:07:51.550 --> 00:07:55.060
What they'll do is they'll
do object relational mapping.

00:07:55.160 --> 00:07:57.850
We can even go so far as to go in
and reverse engineer your database,

00:07:57.970 --> 00:08:01.060
figure out what's inside,
understand the schema,

00:08:01.180 --> 00:08:03.460
figure out all of the
tables that are in there.

00:08:03.570 --> 00:08:06.110
And then for the entities you select,
we'll figure out all the

00:08:06.110 --> 00:08:08.740
attributes that are in the columns,
and we'll model that all up,

00:08:08.830 --> 00:08:12.340
pick the fields that you want us to,
put those into Java objects,

00:08:12.450 --> 00:08:15.550
and we do that without you
having to write any SQL.

00:08:16.020 --> 00:08:19.630
We also provide a nice high-level
interface to it so that you have an

00:08:19.630 --> 00:08:23.220
abstraction layer that eliminates
having to know the intricacies

00:08:23.290 --> 00:08:25.760
of the particular databases.

00:08:25.910 --> 00:08:29.910
This makes it easy to use
alternative databases and you can

00:08:29.910 --> 00:08:32.860
switch databases without having
to change your application.

00:08:32.990 --> 00:08:36.570
And another very powerful feature
is the ability to do a unified

00:08:36.570 --> 00:08:38.810
query across multiple databases.

00:08:39.760 --> 00:08:43.250
We also handle all of
the persistence for you.

00:08:43.250 --> 00:08:47.090
So we'll take care of the reads,
the updates, the deleting of the objects

00:08:47.220 --> 00:08:48.780
and map all of that for you.

00:08:48.870 --> 00:08:51.470
So you get a very nice
high-level interface.

00:08:51.570 --> 00:08:53.700
We take care of all the database details.

00:08:53.880 --> 00:08:56.260
And we're not limited to JDBC databases.

00:08:56.270 --> 00:09:01.900
We can also work with JNDI data
sources such as an LDAP directory.

00:09:05.500 --> 00:09:08.200
So now we have our data out of the
database into our business logic,

00:09:08.200 --> 00:09:13.700
so we figure out what we want to do with
the data and how we want to present it.

00:09:13.700 --> 00:09:17.990
So this is page generation
or the presentation layer.

00:09:18.680 --> 00:09:23.230
WebObjects has a very classical
design pattern approach,

00:09:23.340 --> 00:09:27.080
model view controller,
very nice clean separation

00:09:27.490 --> 00:09:29.620
for generating HTML.

00:09:29.750 --> 00:09:31.230
But we're not limited to just HTML.

00:09:31.240 --> 00:09:32.460
We can generate HTML.

00:09:32.460 --> 00:09:33.900
We can generate XML streams.

00:09:33.900 --> 00:09:37.160
We can generate SMIL,
which is a multimedia

00:09:37.160 --> 00:09:38.560
interaction language.

00:09:38.670 --> 00:09:42.660
And we can also interact with JSPs.

00:09:42.900 --> 00:09:45.020
There's even a Taglib interface
because there's a lot of

00:09:45.020 --> 00:09:46.340
JSP programmers out there.

00:09:46.420 --> 00:09:49.340
You can actually take the
generation streams called "bo"

00:09:49.380 --> 00:09:52.440
components and you can actually
embed those in Java server pages.

00:09:52.590 --> 00:09:55.840
So you have choices in all of this.

00:09:55.840 --> 00:09:59.580
And WebObjects is also really great
at handling multi-language websites.

00:09:59.580 --> 00:10:02.240
We'll see an example of that a bit later.

00:10:05.070 --> 00:10:07.820
So you can do all of
the different streams,

00:10:07.880 --> 00:10:10.330
HTML, XML, and such.

00:10:10.460 --> 00:10:13.920
You can also build full
desktop applications,

00:10:13.920 --> 00:10:16.620
distributed desktop
applications in there.

00:10:16.620 --> 00:10:19.290
We have different flavors of these,
some that require actually writing,

00:10:19.290 --> 00:10:21.160
that don't require
writing any code at all,

00:10:21.160 --> 00:10:23.190
that are generated automatically.

00:10:23.310 --> 00:10:26.740
And then they're all extensible,
and we have GUI tools for doing

00:10:26.820 --> 00:10:29.540
UI layout and things like that.

00:10:29.540 --> 00:10:34.320
And this is really,
really powerful because there's a lot

00:10:34.320 --> 00:10:35.200
of things that we can do with this.

00:10:35.240 --> 00:10:39.240
Occasionally,
HTML interfaces are great because they're

00:10:39.440 --> 00:10:42.000
immediate access anywhere you are.

00:10:42.270 --> 00:10:44.780
All you need is a web browser.

00:10:44.830 --> 00:10:46.150
They're very universal.

00:10:46.160 --> 00:10:49.570
But occasionally,
it can be a royal pain to have to

00:10:49.680 --> 00:10:53.400
click through like 18 web pages to try
and get to the thing that you want.

00:10:53.490 --> 00:10:56.180
And that's where a really nice,
interactive,

00:10:56.250 --> 00:11:00.850
like tabbed user interface like we have
here is a very powerful thing to have.

00:11:01.000 --> 00:11:02.990
There are other advantages in
that because it is a distributed

00:11:03.110 --> 00:11:05.560
client/server architecture,
you can actually decide where

00:11:05.560 --> 00:11:07.840
you want the objects to live.

00:11:08.010 --> 00:11:12.870
So you can do processing on the
client-side computer as well.

00:11:12.970 --> 00:11:15.810
You still can maintain security
because you get the choice of

00:11:15.900 --> 00:11:17.330
where your business logic lives.

00:11:17.390 --> 00:11:19.650
You can keep sensitive
things on the server side.

00:11:21.240 --> 00:11:23.900
So we have, I think,
unique in the industry,

00:11:23.900 --> 00:11:26.730
I think some of our tools are
the capabilities that we have,

00:11:26.730 --> 00:11:30.050
I don't see matched in anything else.

00:11:30.420 --> 00:11:35.410
So all of this is supported
by a suite of tools.

00:11:35.890 --> 00:11:38.100
Project Builder on 10.

00:11:38.100 --> 00:11:40.580
There's the Project Builder
and there's sessions that will

00:11:40.580 --> 00:11:41.930
familiarize you with that.

00:11:42.040 --> 00:11:44.840
There's also Project Builder on Windows.

00:11:44.950 --> 00:11:49.390
There's Enterprise Object Modeler,
which handles the mapping,

00:11:49.400 --> 00:11:52.930
the object relational mapping,
going from your database

00:11:52.980 --> 00:11:54.500
to your Java objects.

00:11:54.580 --> 00:12:00.630
There's a combination HTML editor and
binding editor called WebObjects Builder.

00:12:01.080 --> 00:12:06.720
Then those are used to get your model,
get your layout, get your application up.

00:12:06.720 --> 00:12:09.920
And then WebObjects Builder would be
used for the HTML type of generation

00:12:09.920 --> 00:12:12.240
or stream type of generation.

00:12:12.240 --> 00:12:17.040
And then if you're doing our
powerful rule-based paradigm,

00:12:17.310 --> 00:12:22.100
our direct-to-web, our direct-to-Java,
and the other one I haven't

00:12:22.100 --> 00:12:25.600
told you about yet,
we have the rule editor and we have

00:12:25.600 --> 00:12:29.520
interface builder which can let you
build for Java client applications,

00:12:29.520 --> 00:12:33.190
can and let you build user interfaces.

00:12:36.060 --> 00:12:40.220
All of this, and it even comes with its
own application server.

00:12:40.330 --> 00:12:43.240
But you don't have to use that
application server if you don't want to.

00:12:43.360 --> 00:12:44.390
You get your choice of deployment.

00:12:44.620 --> 00:12:49.210
So we provide, with this,
a full J2SE application server

00:12:50.400 --> 00:12:54.740
that is standalone that you can
run anywhere you've got JRE.

00:12:54.880 --> 00:12:57.700
And it also supports
Enterprise Java beans.

00:12:57.860 --> 00:13:00.340
But with WebObjects 5.1,

00:13:01.040 --> 00:13:03.590
You can actually deploy to
other application servers.

00:13:03.640 --> 00:13:05.900
All you need is a servlet container.

00:13:05.960 --> 00:13:09.440
And this is all very scalable.

00:13:09.660 --> 00:13:13.720
and the licensing on this is very
flexible and very inexpensive.

00:13:16.560 --> 00:13:21.080
So here we have a diagram showing the two
different alternatives for deployment.

00:13:21.180 --> 00:13:25.820
On the right, you would see using a
WebObjects application server

00:13:25.940 --> 00:13:29.560
with Enterprise Java beans
being hosted in there.

00:13:29.560 --> 00:13:33.920
And in the left-hand diagram,
you'd see using a J2SE application

00:13:33.960 --> 00:13:38.920
server and running a WebObjects
application as a servlet.

00:13:40.490 --> 00:13:43.460
All of this for the low price of $6.99.

00:13:43.480 --> 00:13:47.530
We have educational pricing available
as well and there are also discounts

00:13:47.970 --> 00:13:51.300
for Select and Premier ADC members.

00:13:51.320 --> 00:13:57.240
This is available as an Apple retail
product through all of our channels.

00:13:57.250 --> 00:13:59.300
And for more information
there's a URL right there.

00:14:02.030 --> 00:14:06.970
So that's a brief overview of WebObjects.

00:14:06.970 --> 00:14:12.770
I'd like to mention some of the
features that went into WebObjects 5.1.

00:14:15.670 --> 00:14:19.480
With 5.1, the more recent features
that we've added,

00:14:19.480 --> 00:14:24.300
first and foremost is Java Server Pages
and Serverlet Integration.

00:14:24.890 --> 00:14:30.070
This feature was heavily influenced
by this conference last year,

00:14:30.070 --> 00:14:34.860
by conversations that I had with
you developers and colleagues had.

00:14:35.040 --> 00:14:39.490
So I just wanted to thank you for
engaging us and giving this feedback.

00:14:39.490 --> 00:14:43.140
This is really important in terms
of the direction of the product.

00:14:43.230 --> 00:14:48.900
And the things that you tell us really do
influence the direction of the product.

00:14:49.010 --> 00:14:52.510
We've also added
Enterprise Java Bean support.

00:14:52.820 --> 00:14:57.260
We've added the LDAP,
or GNDi adapter that gives you

00:14:57.340 --> 00:14:59.750
LDAP access and other GNDi sources.

00:14:59.870 --> 00:15:02.930
We've made some enhancements to
the Java client technologies.

00:15:03.040 --> 00:15:05.960
We've qualified a few
additional databases.

00:15:06.080 --> 00:15:10.440
And there's been a lot of stuff that's
been going on in the documentation area.

00:15:10.510 --> 00:15:13.300
We'll get a presentation
about that later.

00:15:14.900 --> 00:16:52.500
[Transcript missing]

00:16:54.590 --> 00:16:58.200
We've also added
Enterprise Java Bean support.

00:16:58.330 --> 00:17:01.500
So this technology is based on OpenEJB.

00:17:01.610 --> 00:17:06.350
OpenEJB is an open source project,
and Apple has contributed back

00:17:06.540 --> 00:17:07.960
to that open source project.

00:17:08.060 --> 00:17:09.810
It's an ongoing thing.

00:17:09.910 --> 00:17:13.060
And not only do we
have the EJB container,

00:17:13.140 --> 00:17:16.470
but we also have the other
giblets and gravy you need.

00:17:16.550 --> 00:17:18.520
You also have the other
supporting elements you need,

00:17:18.520 --> 00:17:20.700
like a transaction manager.

00:17:20.780 --> 00:17:23.870
And we also have an orb, OpenOrb.

00:17:24.060 --> 00:17:29.560
There are also tools and assistance
that let you author new beans and

00:17:29.560 --> 00:17:34.140
we also have the ability to take
third party beans and put them

00:17:34.140 --> 00:17:39.000
into a container and deploy them.

00:17:39.000 --> 00:17:39.960
So I'd like to ask a question.

00:17:40.060 --> 00:17:44.920
Is anybody using WebObjects for
the development of Java beans?

00:17:45.990 --> 00:17:51.910
Okay, has anybody deployed third-party
Java beans in a WebObjects application?

00:17:52.420 --> 00:17:54.160
Okay, got one over there.

00:17:54.220 --> 00:17:55.690
How about servlets?

00:17:55.820 --> 00:17:59.790
Has anybody deployed a WebObjects
application in a servlet container?

00:17:59.890 --> 00:18:02.800
Got one over there.

00:18:02.930 --> 00:18:05.060
Okay, thank you.

00:18:07.700 --> 00:18:13.100
[Transcript missing]

00:18:13.290 --> 00:18:17.630
If you look at EOModeler,
you'll find a new option that in

00:18:17.640 --> 00:18:21.320
addition to a JDBC data source,
allows you to make a model

00:18:21.320 --> 00:18:22.920
with a JNDI data source.

00:18:23.030 --> 00:18:25.860
So it behaves very similarly in
terms of the user experience.

00:18:25.890 --> 00:18:29.840
You take EOModeler, you create a model,
or you can reverse engineer

00:18:29.840 --> 00:18:32.120
something like an LDAP directory.

00:18:32.220 --> 00:18:34.100
And then it'll make a model,
and then that'll go through EOF,

00:18:34.210 --> 00:18:37.410
and EOF will take care of getting all
the data in and out of the LDAP database.

00:18:37.420 --> 00:18:41.640
So we can insert, we can update,
we can delete entries,

00:18:41.640 --> 00:18:44.700
but there's no schema synchronization.

00:18:44.770 --> 00:18:47.760
And there's a few other minor little
caveats because an LDAP database

00:18:47.780 --> 00:18:50.570
is not a full relational database.

00:18:53.850 --> 00:18:56.290
We also made some enhancements
to the Java Client technology.

00:18:56.290 --> 00:19:00.130
Don't want to steal any
thunder from documentation,

00:19:00.250 --> 00:19:05.010
but they wrote a great book,
WebObjects Desktop Applications,

00:19:05.120 --> 00:19:10.350
which has an excellent tutorial on using
Direct-to-Java Client and Java Client.

00:19:10.440 --> 00:19:14.620
We've also made some enhancements
to the class loader that's used in

00:19:14.620 --> 00:19:17.560
Java Client desktop applications.

00:19:17.560 --> 00:19:20.890
Basically,
what you can do is on a class basis,

00:19:20.920 --> 00:19:26.010
you can decide which pieces would
get downloaded on a per-application

00:19:26.010 --> 00:19:30.000
basis and which pieces would be
loaded on the machine one time.

00:19:30.120 --> 00:19:33.690
So you could take all the common
classes that would be there for

00:19:33.890 --> 00:19:37.700
any Java Client application and
pre-install those on the target machine,

00:19:37.700 --> 00:19:38.800
on the client side.

00:19:38.950 --> 00:19:42.190
And then any time you'd invoke
a new WebObjects application,

00:19:42.190 --> 00:19:45.100
Java Client WebObjects application,
only the classes that were

00:19:45.100 --> 00:19:47.120
different would need to be loaded.

00:19:47.250 --> 00:19:49.550
There's also for the
rapid development mode,

00:19:49.830 --> 00:19:53.210
where you are doing compile and testing,
there's a new switch,

00:19:53.210 --> 00:19:59.200
WoW AutoOpen Client Application,
which is fairly self-explanatorily named.

00:19:59.380 --> 00:20:03.870
And there's also a new little
utility called Java Client Launcher,

00:20:03.870 --> 00:20:07.050
which assists in launching
Java client applications.

00:20:07.160 --> 00:20:09.910
On Mac OS X, it's a double-clickable app.

00:20:10.150 --> 00:20:12.620
You give it a URL,
it will talk to the WebObjects

00:20:12.790 --> 00:20:16.370
server and take care of downloading
all the class files and launching

00:20:16.420 --> 00:20:17.980
the application for you.

00:20:18.090 --> 00:20:23.330
And then there's a command file
version of that on Windows.

00:20:27.160 --> 00:20:32.710
We've also qualified two new
databases for WebObjects 5.1.

00:20:32.710 --> 00:20:36.530
That is Microsoft SQL Server and MySQL.

00:20:38.910 --> 00:20:41.450
So if you'd like to try this,
for those of you who

00:20:41.450 --> 00:20:43.970
actually are 5.1 customers,
thank you.

00:20:44.170 --> 00:20:46.190
We really appreciate your support.

00:20:46.190 --> 00:20:48.880
And the response to WebObjects
5.1 has been very good,

00:20:48.900 --> 00:20:51.690
and it's been a very popular release.

00:20:51.870 --> 00:20:53.940
For those of you who
haven't tried it yet,

00:20:54.000 --> 00:20:55.800
there's a trial download available.

00:20:55.900 --> 00:20:59.400
If you go to Apple Developer Connection,
you need to register,

00:20:59.400 --> 00:21:01.070
but registration is free.

00:21:01.160 --> 00:21:05.470
You can go to the Download section,
and you go find Download Software,

00:21:05.740 --> 00:21:11.380
and in the section under WebObjects,
you'll find WebObjects for Mac OS X.

00:21:11.450 --> 00:21:14.440
And you can download that,
and the key for that is included as well,

00:21:14.540 --> 00:21:17.690
and that'll be good
until the end of June.

00:21:17.800 --> 00:21:22.870
For those of you who need
to trial a Windows version,

00:21:23.390 --> 00:21:28.620
I have a few CDs with me,
and I'll be off sort of on

00:21:28.620 --> 00:21:32.490
that side after the Q&A,
and I'm the guy with the hat.

00:21:35.800 --> 00:21:38.030
So, some of the sessions you
might be interested in.

00:21:38.320 --> 00:21:41.430
If you'd like to see more
about these features,

00:21:41.560 --> 00:21:43.940
our session numbers are listed here.

00:21:45.360 --> 00:21:47.940
We have them for EJB, servlet deployment.

00:21:47.940 --> 00:21:53.330
The JDI stuff will be covered in the
modeling and connectivity session 7.11.

00:21:53.330 --> 00:21:57.250
And we have two Java client sessions,
7.06 and 7.07.

00:22:02.490 --> 00:22:06.360
So I'd like to make a
couple of announcements.

00:22:06.420 --> 00:22:09.180
Our sustaining engineering team

00:22:09.840 --> 00:22:14.660
works very hard and they're
kind of unsung heroes.

00:22:14.710 --> 00:22:21.440
They have put out over the past year
four updates to WebObjects 4.5.1

00:22:21.780 --> 00:22:24.890
Three updates to WebObjects 5.

00:22:25.120 --> 00:22:28.400
A software update for WebObjects 5.1.

00:22:28.400 --> 00:22:31.960
And I'm pleased to announce
the availability of software

00:22:32.070 --> 00:22:35.530
update WebObjects 5.1.2.

00:22:35.670 --> 00:22:37.890
So, there are fixes.

00:22:42.660 --> 00:22:47.830
There are fixes in three main categories:
NS-Timestamp-related classes, EOF,

00:22:47.830 --> 00:22:50.640
and EOModeler and FileMerge integration.

00:22:50.740 --> 00:22:55.330
If you want to write down 75204,
there's a KBase article.

00:22:55.590 --> 00:23:01.880
and that KBase article will have release
notes indicating the different changes,

00:23:02.300 --> 00:23:03.900
the fixes that are in there.

00:23:03.990 --> 00:23:08.740
And for Mac OS X, this is available
through software update.

00:23:08.800 --> 00:23:11.520
And for the Windows and Solaris version,
when you find the KBase article,

00:23:11.520 --> 00:23:14.940
it will have instructions
on how to download.

00:23:15.060 --> 00:23:18.470
So, great job to the team there.

00:23:19.240 --> 00:23:23.680
I'd also like to mention a little
bit about Enterprise Objects,

00:23:23.680 --> 00:23:24.400
EOF.

00:23:24.570 --> 00:23:30.200
So, these slides I borrowed from our VP.

00:23:30.870 --> 00:23:34.100
I'd like to talk a little
bit about WebObjects past,

00:23:34.100 --> 00:23:35.640
present, and future.

00:23:35.720 --> 00:23:40.710
Because we occasionally get questions
about alternate languages and EOF.

00:23:41.780 --> 00:23:47.650
So in the past, for people who were
programming in Objective-C,

00:23:47.990 --> 00:23:50.660
WebObjects was in Objective-C and
EOF was in Objective-C,

00:23:50.660 --> 00:23:54.540
so you had really clean
integration with Cocoa,

00:23:54.540 --> 00:23:57.990
with Interface Builder,
and it all played nice.

00:23:58.120 --> 00:24:03.590
The downside to this was it was not easy
to get new databases or data sources.

00:24:03.610 --> 00:24:05.850
Somebody had to write an adapter.

00:24:05.990 --> 00:24:09.920
And the other drawback now is
that this is specifically limited

00:24:09.990 --> 00:24:13.290
to older versions of WebObjects.

00:24:16.200 --> 00:24:20.440
The current situation with
WebObjects is now in Java,

00:24:20.470 --> 00:24:22.490
and there's some real
advantages to being in Java.

00:24:22.660 --> 00:24:24.840
Because it's in Java,
we get to play with the

00:24:24.840 --> 00:24:25.980
rest of the Java community.

00:24:26.230 --> 00:24:28.570
So we get access to JDBC data sources.

00:24:28.600 --> 00:24:30.840
We get access to JNDI data sources.

00:24:30.940 --> 00:24:35.390
So getting access to additional
databases is very easy.

00:24:36.060 --> 00:24:40.140
and we're pleased to announce
that for those who are

00:24:40.140 --> 00:24:45.370
doing Cocoa EOF programming,
there is an evaluation distribution

00:24:45.400 --> 00:24:48.500
license available for Cocoa Java EOF.

00:24:48.610 --> 00:24:50.900
And the details of that license
should be posted this week.

00:24:50.900 --> 00:24:55.070
So this does require--.

00:24:55.610 --> 00:24:58.410
Thank you.

00:25:00.030 --> 00:25:03.580
This does require that you have to do
a little bit of Java programming at

00:25:03.610 --> 00:25:05.290
the back end in your business logic.

00:25:05.410 --> 00:25:07.620
Your application logic
can still be Objective-C.

00:25:07.870 --> 00:25:11.340
You have access to Cocoa and
all those utilities.

00:25:11.340 --> 00:25:14.240
So it's sort of Cocoa on the top
end and Java on the bottom end.

00:25:14.240 --> 00:25:16.810
And I wanted to brand it Mocha,
but they told me that

00:25:16.810 --> 00:25:18.690
probably isn't a good idea.

00:25:18.870 --> 00:25:23.000
So moving forward in the future,

00:25:23.340 --> 00:25:26.380
This is sort of an interim situation.

00:25:26.490 --> 00:25:32.540
Moving forward, the goals are to improve
the runtime efficiency,

00:25:32.630 --> 00:25:34.280
to offer a choice of
programming language,

00:25:34.320 --> 00:25:36.630
including the business logic,

00:25:37.120 --> 00:25:42.460
Native Objective-C types
Better integration of EOF and Interface

00:25:42.630 --> 00:25:46.370
Builder and Palettes Over the future

00:25:46.570 --> 00:25:54.340
EOF and various pieces of EOF are
going to influence Objective-C and the

00:25:54.340 --> 00:25:56.100
classes that are associated with it.

00:25:56.130 --> 00:25:58.460
And that's about all that I'm
at liberty to say at this time.

00:26:05.310 --> 00:26:10.510
What I can talk about are
the directions of WebObjects.

00:26:13.220 --> 00:26:17.180
so first illegal disclaimer this is the
part the auto commercial with a guy talks

00:26:17.200 --> 00:26:22.820
really fast uh... basically this being
apple i can't make any specific promises

00:26:22.820 --> 00:26:30.420
for any specific feature in any specific
release having said all that we are on

00:26:30.480 --> 00:26:36.170
tell you are our future directions but
things that were working on and sessions

00:26:36.170 --> 00:26:39.520
that shows you'll get the numbers for
here we're actually showing technology

00:26:39.520 --> 00:26:44.130
demonstrations of things that we actually
have working and we can demonstrate.

00:26:44.330 --> 00:26:50.100
So, Web Services are a big buzz in the
industry and we're working on what

00:26:50.110 --> 00:26:54.480
we think are some really exciting
offerings in the Web Services space.

00:26:54.560 --> 00:26:57.890
And I think this is going to
be really key for WebObjects

00:26:58.040 --> 00:26:59.760
and also WebObjects at Apple.

00:26:59.850 --> 00:27:03.100
Because you're going to see
WebObjects being pervasive in a lot

00:27:03.100 --> 00:27:04.990
of the technologies here at Apple.

00:27:06.440 --> 00:27:10.500
We're going to offer web
services utilizing our powerful

00:27:10.500 --> 00:27:14.290
rule-based programming model and
offer direct-to-web services.

00:27:15.040 --> 00:27:17.660
We've worked a lot on
the XML serialization and

00:27:17.660 --> 00:27:20.720
deserialization of objects as well,
so there's some

00:27:20.730 --> 00:27:22.900
XML serialization classes.

00:27:23.010 --> 00:27:27.860
We're integrating Java Web Start with
Java Client technology.

00:27:27.980 --> 00:27:31.520
This will be an upgrade installation,
and there's a new tool called

00:27:31.680 --> 00:27:36.590
EO Bean Builder used for
developing enterprise Java beans.

00:27:36.930 --> 00:27:39.340
So, a little background on web services.

00:27:39.450 --> 00:27:42.440
There's a session,
I'll get the session number later,

00:27:42.480 --> 00:27:44.480
I think it's the Java one,
where they actually go into quite a

00:27:44.480 --> 00:27:48.180
bit of detail on what the web services
are and how they're implemented.

00:27:48.260 --> 00:27:52.140
Basically, web services are sort of a
glorified remote procedure call.

00:27:52.140 --> 00:27:55.060
I mean, yeah, there's some subtleties,
but at the end of the day,

00:27:55.060 --> 00:27:57.470
that's kind of what the whole intent was.

00:27:57.580 --> 00:27:59.630
So why would anybody really care?

00:27:59.680 --> 00:28:01.850
It really is about
application interaction,

00:28:01.860 --> 00:28:04.480
and at least it's
standards-based this time.

00:28:04.760 --> 00:28:07.830
The other thing that's going on
in the industry is that the hype

00:28:07.960 --> 00:28:11.350
is actually starting to give way
to real implementations out there.

00:28:11.460 --> 00:28:14.200
There are tool sets that are coming up
and there are people who are actually

00:28:14.350 --> 00:28:17.010
doing stuff with web services now.

00:28:17.440 --> 00:28:20.760
There are some issues that
have been kind of glossed over

00:28:21.170 --> 00:28:23.640
that haven't been resolved yet.

00:28:23.770 --> 00:28:25.800
What's the security model?

00:28:25.920 --> 00:28:30.610
How do you manage a fabric or
grid or nodes of web services?

00:28:30.890 --> 00:28:32.830
What happens if they go away?

00:28:32.880 --> 00:28:35.460
So I think a lot of what
goes on in the media,

00:28:35.460 --> 00:28:40.190
they're talking about, I don't know,
hailstorms and passports

00:28:40.290 --> 00:28:44.060
and going all over the place
with all this big B2B stuff.

00:28:44.060 --> 00:28:47.690
And someday I do believe
that will come about.

00:28:47.900 --> 00:28:53.830
But that is sort of, I think,
a little more distant.

00:28:53.960 --> 00:28:57.010
But what is actually real, and sort of,
if you could put your

00:28:57.120 --> 00:29:00.050
finger on it right now,
and what people are really doing

00:29:00.720 --> 00:29:05.370
is application-to-application
integration and utilizing existing data

00:29:05.480 --> 00:29:08.330
sources that they have in new ways.

00:29:08.420 --> 00:29:13.130
And we're offering very compelling
technologies that make this really,

00:29:13.130 --> 00:29:14.520
really easy to do.

00:29:15.640 --> 00:29:17.880
These will probably be
inside the firewall.

00:29:18.000 --> 00:29:21.440
They'll probably be like IT departments
or people who control their own domain.

00:29:21.440 --> 00:29:26.740
You'll probably have the ability to do
things that go across departments maybe,

00:29:26.740 --> 00:29:29.140
but they may still be
in the same company.

00:29:29.260 --> 00:29:32.180
And we're seeing this shift,
we're seeing this trend

00:29:32.440 --> 00:29:34.500
starting to happen right now.

00:29:35.840 --> 00:29:37.700
So the offerings.

00:29:37.830 --> 00:29:41.520
WebObjects will be a
web service producer.

00:29:41.540 --> 00:29:44.410
So we'll be like a
server of web services.

00:29:44.410 --> 00:29:48.290
And we'll be able to deliver
RPC-based web services as well

00:29:48.620 --> 00:29:51.700
as messaging-based services.

00:29:51.830 --> 00:29:55.320
We'll even take care of generating
the WSDL configuration files,

00:29:55.320 --> 00:29:58.700
or description files, for web services.

00:29:58.970 --> 00:30:06.160
WebObjects applications will also be
able to act as a web service consumer.

00:30:06.680 --> 00:30:11.810
And so as a web service consumer,
what we'll do is take the WSDL file,

00:30:12.000 --> 00:30:18.050
generate proxy classes,
and call the web service on your behalf.

00:30:18.210 --> 00:30:21.760
and they get convenient to
package and get at the attributes.

00:30:21.820 --> 00:30:23.380
So you could use this
for data aggregation.

00:30:23.410 --> 00:30:25.140
You could take a little
bit of a web service,

00:30:25.140 --> 00:30:28.070
something out of a database,
maybe something from an LDAP source,

00:30:28.180 --> 00:30:31.070
mix it all together and then
present the results that you want,

00:30:31.070 --> 00:30:33.180
do the aggregation that
you want for a user.

00:30:41.110 --> 00:30:47.660
To get you really jump started,
we'll have direct-to-web services.

00:30:47.750 --> 00:30:54.500
This will use our powerful rule-based
paradigm and the power of EOModeler.

00:30:55.490 --> 00:31:02.310
Basically what you can do is you
take a WebObjects application and

00:31:02.700 --> 00:31:05.390
From your data source,
from your database or

00:31:05.390 --> 00:31:08.290
LDAP directory or whatever,

00:31:08.550 --> 00:31:13.800
We can take those EOs and then you
have management and configuration

00:31:13.800 --> 00:31:17.720
tools that allow you to automatically
turn those into web services.

00:31:17.770 --> 00:31:21.670
There's a powerful assistant that
lets you decide what pieces of the

00:31:21.670 --> 00:31:26.890
data source are going to get vended,
what the XML is going to look like,

00:31:27.150 --> 00:31:30.510
and what things you're not going
to vend out into the public world.

00:31:30.600 --> 00:31:33.300
And this is code free,
but it's extensible.

00:31:33.320 --> 00:31:35.410
You can extend it with the rule system.

00:31:35.410 --> 00:31:38.660
You can even freeze pages and actually
do code generation and then you

00:31:38.660 --> 00:31:41.310
can take the Java code and go ahead
and continue to modify that and

00:31:41.400 --> 00:31:43.800
drop that in another application.

00:31:43.920 --> 00:31:48.570
Some of this technology was
previewed in Ted's presentation and

00:31:48.570 --> 00:31:50.820
we have a session on this as well.

00:31:50.890 --> 00:31:54.260
So I think this is going to be really,
really, really powerful.

00:31:54.300 --> 00:31:59.010
So code free, database persistence vended
through web services.

00:32:01.830 --> 00:32:07.500
We're also working on some
new XML serialization classes.

00:32:07.570 --> 00:32:12.210
These would parallel the
Java binary serialization classes.

00:32:12.250 --> 00:32:15.180
So if something is serializable
and meets some other criteria,

00:32:15.180 --> 00:32:16.800
you can make it XML serializable.

00:32:18.800 --> 00:32:24.840
and you can use these to serialize and
deserialize objects into XML streams.

00:32:24.950 --> 00:32:29.790
We also intend to include Xealin so that
you can actually add an XSLT transform

00:32:30.610 --> 00:32:33.700
downstream from that if you want as well.

00:32:33.820 --> 00:32:40.320
And there's also some somewhat little
bit more specialized cases of that

00:32:40.740 --> 00:32:44.660
where you can actually turn these
into SOAP XML messages as well.

00:32:46.600 --> 00:32:51.270
Now this is really handy for taking
objects that you may have been

00:32:51.270 --> 00:32:55.740
binary serializing and then instead
archiving them in an XML format,

00:32:55.870 --> 00:32:57.130
which would foster data interchange.

00:32:57.140 --> 00:32:59.190
So if you need to take this
data and move it around or

00:32:59.190 --> 00:33:01.160
give it to another application.

00:33:01.270 --> 00:33:04.300
And then it also makes it easy to
turn this into your own protocol,

00:33:04.300 --> 00:33:07.100
if you need a wire
protocol for something.

00:33:10.030 --> 00:33:14.000
Java Web Start is becoming the
preferred way of deploying and

00:33:14.000 --> 00:33:17.020
managing distributed Java applications.

00:33:17.130 --> 00:33:22.310
So we're taking that technology
and we are incorporating that in

00:33:22.310 --> 00:33:26.000
with the Java client technologies.

00:33:26.110 --> 00:33:29.870
So we'll take care of generating the
necessary support files so that you

00:33:29.870 --> 00:33:33.700
can use either our class loader or
you could use Java Web Start when

00:33:33.700 --> 00:33:39.080
you want to go ahead and deploy a
distributed Java client application.

00:33:40.050 --> 00:33:44.380
So Java Web Start ships
with every copy of Mac OS X.

00:33:44.380 --> 00:33:47.440
So there's no integration or
download that needs to happen there.

00:33:47.560 --> 00:33:52.120
And it's easily available from
Sun for the Windows platform.

00:33:54.190 --> 00:33:58.430
Some additional features:
We intend for future

00:33:58.430 --> 00:34:01.370
releases to be available,
or at least the next release,

00:34:01.370 --> 00:34:05.120
we intend to have it as an upgrade
installation so that you don't have

00:34:05.290 --> 00:34:09.580
to uninstall the old version of
WebObjects or burn down your partition.

00:34:09.640 --> 00:34:13.520
And a new tool: EO Bean Builder.

00:34:13.520 --> 00:34:18.160
This also, again, leverages the power of
EOF Frameworks and EO Modeler.

00:34:18.340 --> 00:34:22.580
You basically can take an EO model,
your picture of the database,

00:34:22.580 --> 00:34:27.560
and from that, what you can do is you can
generate home and remote interfaces

00:34:27.560 --> 00:34:29.930
and implementations of a bean.

00:34:33.800 --> 00:34:39.040
So, if you would like to be,
participate in our beta program,

00:34:39.040 --> 00:34:42.010
if you'd like to be
considered as a candidate,

00:34:42.210 --> 00:34:45.680
Go to applec.apple.com/webobjects.

00:34:45.730 --> 00:34:47.510
It's a WebObjects application.

00:34:47.640 --> 00:34:49.580
And sign up.

00:34:52.100 --> 00:34:55.320
These are some of the session
numbers if you'd like to see some

00:34:55.320 --> 00:35:00.120
of the technology demonstrations
we have for upcoming technologies.

00:35:01.930 --> 00:35:05.680
There's also, I put one session on there,
8.04.

00:35:05.720 --> 00:35:12.030
This is not a WebObjects session,
but it immediately follows this session.

00:35:12.030 --> 00:35:15.330
And it is about the client
web services frameworks that

00:35:15.330 --> 00:35:17.700
are going in in the OS level.

00:35:17.790 --> 00:35:23.120
And so those of you who are very new to
WebObjects might want to stay in this

00:35:23.150 --> 00:35:25.180
room for the introduction to WebObjects.

00:35:25.180 --> 00:35:26.340
I think it's a technical overview.

00:35:26.340 --> 00:35:28.720
I think it's a technical
overview session.

00:35:28.820 --> 00:35:31.240
Those of you who are already
familiar with WebObjects but

00:35:31.240 --> 00:35:35.460
are keen on web services may
want to check out session 804.

00:35:35.550 --> 00:35:40.760
And then we have the other session,
704 for serialization, 707 WebStart,

00:35:40.770 --> 00:35:45.850
and Enterprise Java Beans
and the Bean Builder in 708.

00:35:49.260 --> 00:35:53.000
So I'd like to shift gears a
little and talk about WebObjects

00:35:53.060 --> 00:35:58.120
and Apple and sort of the strategy
and how they play together.

00:35:59.930 --> 00:36:03.340
So, Apple is a business.

00:36:03.420 --> 00:36:05.490
Apple wants to make money.

00:36:05.680 --> 00:36:09.460
and how does WebObjects help
Apple with its business?

00:36:09.580 --> 00:36:12.600
I look at three key areas.

00:36:12.710 --> 00:36:16.220
How does WebObjects help
Apple in Apple markets?

00:36:16.900 --> 00:36:22.170
How does Apple use WebObjects
internally to drive our own business?

00:36:22.340 --> 00:36:28.100
and at the end of the day Apple's a
hardware company but at the end of the

00:36:28.100 --> 00:36:30.340
day Apple's not just a hardware company.

00:36:30.370 --> 00:36:35.410
Apple offers hardware that
has an incredible wealth of

00:36:35.580 --> 00:36:39.570
Software, user experience,
and stuff that comes around

00:36:39.740 --> 00:36:41.530
what you buy from Apple.

00:36:41.800 --> 00:36:45.980
And how does WebObjects play in
terms of integration or offering

00:36:45.980 --> 00:36:47.970
more compelling solutions?

00:36:50.960 --> 00:36:56.050
Key markets for Apple are education,
media, and an emerging market that

00:36:56.310 --> 00:36:59.800
is coming on strong is the
scientific and technical community.

00:36:59.900 --> 00:37:02.800
So in education, WebObjects is used in
student information systems,

00:37:02.800 --> 00:37:05.930
it's been used in portals,
it's been used in the back end of

00:37:05.930 --> 00:37:12.800
the enterprise doing billing and
paperless authorization systems.

00:37:12.800 --> 00:37:15.470
In media companies,
WebObjects has been used for

00:37:15.630 --> 00:37:17.760
asset management and for workflow.

00:37:17.790 --> 00:37:23.350
And with the web services architecture
coming together and being able to

00:37:23.350 --> 00:37:27.410
integrate with things like AppleScript,
I think this is going to be a very,

00:37:27.410 --> 00:37:30.790
very booming area for WebObjects as well.

00:37:30.960 --> 00:37:37.700
and the whole draw from the scientific
community for Mac OS X with its Unix

00:37:37.750 --> 00:37:42.860
underpinnings and Java on every platform,
on every offering.

00:37:42.860 --> 00:37:48.310
The scientific community is really coming
on over to Mac OS X and when they do,

00:37:48.360 --> 00:37:51.050
they're also drawn to WebObjects as well.

00:37:54.020 --> 00:37:55.260
How does Apple use WebObjects?

00:37:55.400 --> 00:37:57.260
Well, internally,
we use it all over the place.

00:37:57.340 --> 00:37:59.030
We can go look up our paycheck.

00:37:59.030 --> 00:38:04.140
There's any registration pages for
signing up for technical training.

00:38:04.140 --> 00:38:10.880
We've got lots of applications where we
use WebObjects to run our own business.

00:38:12.750 --> 00:38:16.840
Another example is the Apple Store.

00:38:16.910 --> 00:38:19.600
Y vamos a ver que esto no es en ingles,
es en espanol.

00:38:19.600 --> 00:38:23.590
And my apologies to any
translators out there.

00:38:23.690 --> 00:38:26.600
This is actually the
store page from Spain.

00:38:26.600 --> 00:38:29.600
And I put this up here on purpose.

00:38:29.610 --> 00:38:34.720
The Apple Store, the online store,
is really important to Apple.

00:38:34.720 --> 00:38:40.560
We get a large part of our
revenue through the online stores.

00:38:41.210 --> 00:38:46.600
There are dozens of online
presences around the world.

00:38:46.600 --> 00:38:49.180
You can actually go and travel
the world from the Apple Store.

00:38:49.280 --> 00:38:51.600
If you just go to the bottom of the page,
not shown on the screen here,

00:38:51.600 --> 00:38:56.590
there's a little pull down that will take
you to two dozen different Apple Stores.

00:38:56.590 --> 00:39:01.110
And you can just switch languages
by just hitting the pull down.

00:39:01.460 --> 00:39:06.740
Managing this and delivering this,
50 different online presence would not be

00:39:06.740 --> 00:39:10.100
possible without a tool like WebObjects.

00:39:10.570 --> 00:39:13.140
and all of these elements on there,
know what language they're in,

00:39:13.140 --> 00:39:15.320
know where to go get the image,
know where to get the

00:39:15.420 --> 00:39:18.020
text that's appropriate,
and it all flows through.

00:39:18.110 --> 00:39:20.480
And you think about how often we
have to turn the store and how often

00:39:20.480 --> 00:39:24.320
we have to add new products and
how often we have to update this.

00:39:24.420 --> 00:39:27.710
It would not be possible without
something like WebObjects.

00:39:28.910 --> 00:39:30.850
ITools.

00:39:30.850 --> 00:39:33.270
WebObjects drives ITools.

00:39:33.270 --> 00:39:36.670
It's in all of the applications there.

00:39:36.670 --> 00:39:36.670
And,

00:39:36.940 --> 00:39:45.790
Since recently, there's a new iTool,
Mac.com Webmail, and this is a WebObjects

00:39:45.890 --> 00:39:48.640
5.1-based application.

00:39:48.770 --> 00:39:51.070
So I invite you to check that out.

00:39:54.450 --> 00:39:56.860
Now, putting together solutions.

00:39:57.020 --> 00:40:00.420
WebObjects is also very
powerful in that area as well.

00:40:00.440 --> 00:40:05.940
And a couple of solution offerings
I'll talk about are PowerSchool and

00:40:06.430 --> 00:40:08.950
Electronic Board Meeting Solution.

00:40:13.650 --> 00:40:18.680
PowerSchool is a fairly
recent division of Apple.

00:40:18.700 --> 00:40:24.000
It is award-winning student
information system software.

00:40:24.030 --> 00:40:27.670
Its primary market is K-12.

00:40:29.640 --> 00:40:35.480
What this allows Apple to do is increase
our offerings in the education market.

00:40:35.480 --> 00:40:39.100
Instead of just putting
Macs in classrooms,

00:40:39.200 --> 00:40:43.800
we actually can get into the enterprise,
get into the business of a school.

00:40:43.940 --> 00:40:45.250
How does it get funded?

00:40:45.350 --> 00:40:49.600
Attendance, managing records,
all those kinds of things.

00:40:49.730 --> 00:40:54.820
And PowerSchool is a very powerful
application that helps foster

00:40:54.900 --> 00:40:58.740
communication with the parents,
with the teachers,

00:40:58.880 --> 00:41:00.500
with the administration.

00:41:00.500 --> 00:41:04.640
It's driven by back-end data,
and it's all updated in real time.

00:41:04.970 --> 00:41:07.650
Everything in here is
completely real-time based.

00:41:07.700 --> 00:41:09.440
It's all WebObjects driven.

00:41:09.560 --> 00:41:12.500
We have a solutions session that
will be later on in the week,

00:41:12.620 --> 00:41:16.730
and the PowerSchool folks will actually
be giving a little presentation.

00:41:19.250 --> 00:41:23.460
Apple's also announced another solution,
which is an electronic

00:41:23.470 --> 00:41:25.200
board meeting solution.

00:41:25.330 --> 00:41:27.880
So many boards,
like school boards and such,

00:41:27.970 --> 00:41:32.000
have a legal requirement that they
make their agenda available to people,

00:41:32.110 --> 00:41:35.360
and that people have access
to the information and can add

00:41:35.470 --> 00:41:38.250
their things to the agenda,
stuff like that.

00:41:38.400 --> 00:41:43.380
And the old way of doing that is a
photocopier and a lot of people running

00:41:43.380 --> 00:41:46.200
around and making copies and having
to deliver them and stuff like that.

00:41:46.330 --> 00:41:49.020
And the cost of that
is actually quite high.

00:41:49.180 --> 00:41:53.300
And this is a real return on investment
because you can go paperless.

00:41:53.380 --> 00:41:58.330
And when you go paperless with this,
it's like a collaboration system.

00:41:58.420 --> 00:42:04.830
You basically, they can post the agenda,
they can have presentations,

00:42:04.830 --> 00:42:09.590
and people can download these things
anywhere that they have a web access.

00:42:10.490 --> 00:42:13.200
So that's us.

00:42:13.260 --> 00:42:17.060
Now how can you guys deliver
applications and integration?

00:42:17.060 --> 00:42:18.180
What are the opportunities?

00:42:18.180 --> 00:42:20.860
What are some of the things that
would be really neat to do here?

00:42:20.920 --> 00:42:26.780
Well, one thing I look at is, again,
this whole web services thing.

00:42:26.830 --> 00:42:30.990
This is going to be pervasive
across Apple technologies.

00:42:31.120 --> 00:42:35.030
There are Java toolkits that
can access web services.

00:42:35.340 --> 00:42:38.390
AppleScript can access web services.

00:42:38.390 --> 00:42:44.000
There are frameworks going into--there
are classes going into the frameworks

00:42:44.560 --> 00:42:49.340
that can give you access to
web services from Objective-C,

00:42:49.510 --> 00:42:50.480
from C++.

00:42:50.480 --> 00:42:55.960
And these are all technologies
that are coming together near term.

00:42:56.960 --> 00:42:58.990
So this gives you an opportunity to,
like for instance,

00:42:59.060 --> 00:43:06.710
one of the things that I demoed at
Java 1 was an InDesign application

00:43:07.270 --> 00:43:12.340
that was generating a real estate
brochure that could go to print.

00:43:12.390 --> 00:43:17.130
And it was talking to
a WebObjects backend.

00:43:17.220 --> 00:43:19.660
And we passed the data
using web services.

00:43:19.760 --> 00:43:22.990
So AppleScript was driving InDesign
and it was getting the data from a

00:43:23.000 --> 00:43:25.290
WebObjects database on the backend.

00:43:25.410 --> 00:43:28.720
So there's an example of going
after like a media opportunity

00:43:29.380 --> 00:43:32.350
in workflow or asset management.

00:43:32.930 --> 00:43:37.440
Mac OS X Server is
another great opportunity.

00:43:37.600 --> 00:43:44.710
WebObjects deployment is bundled
with every copy of Mac OS X Server.

00:43:44.710 --> 00:43:49.590
And that is all of the hardware,
including a picture

00:43:50.150 --> 00:43:53.930
that was shown earlier,
as well as the retail

00:43:54.030 --> 00:43:56.220
box for OS X Server.

00:43:57.080 --> 00:44:04.410
And it is our intent to
further integrate WebObjects

00:44:04.420 --> 00:44:07.490
deployment with Mac OS X Server.

00:44:08.970 --> 00:44:14.850
and one of the first areas that might
be interesting is open directory.

00:44:16.030 --> 00:44:22.290
Now, Open Directory is a standards-based
directory service based on LDAP.

00:44:22.870 --> 00:44:28.250
You have access layers,
you have a directory server,

00:44:28.300 --> 00:44:30.640
and the directory server
will be part of OS X Server,

00:44:30.760 --> 00:44:33.000
and there's directory tools.

00:44:34.030 --> 00:44:37.090
So, kind of the net-net is a lot
of the same stuff that you

00:44:37.200 --> 00:44:42.320
would get at through NetInfo,
groups and users and stuff like that,

00:44:42.320 --> 00:44:46.440
as well as things you'd want
to put in an LDAP database,

00:44:46.490 --> 00:44:49.980
like people's email addresses and
phone numbers or contact information.

00:44:50.020 --> 00:44:53.350
They're going to be unified and
you'll have your choice of accessing

00:44:53.480 --> 00:44:57.290
them either through NetInfo
interfaces or through LDAP interfaces.

00:44:59.740 --> 00:45:01.860
That'll be part of the
server architecture.

00:45:01.860 --> 00:45:06.800
So any LDAP client can get access to
anything that OS X server knows about.

00:45:06.900 --> 00:45:09.300
And that would include WebObjects.

00:45:09.440 --> 00:45:12.460
So you could take WebObjects,

00:45:12.840 --> 00:45:18.740
Open up your modeler, go reverse engineer
the OS X server schema,

00:45:18.890 --> 00:45:23.580
take that model, drop it into Java,
direct to Java client,

00:45:23.580 --> 00:45:28.500
and in about 10 or 15 minutes,
you could build an administrative

00:45:28.500 --> 00:45:32.070
tool without writing a line of code
that would go in there and have

00:45:32.070 --> 00:45:36.460
access to like the user contact
information that was on 10 server.

00:45:36.590 --> 00:45:39.640
All of WebObjects without
having to write any code at all.

00:45:44.130 --> 00:45:48.700
So,
you get a lot of stuff with WebObjects.

00:45:48.770 --> 00:45:53.850
It has a lot of things in there,
and we're adding more.

00:45:54.210 --> 00:45:57.080
and I think that's enough of me rambling.

00:45:57.080 --> 00:46:02.900
I'd like to turn this over to
Katherine Wenc to give a State of

00:46:02.900 --> 00:46:05.930
the Union on our documentation.

00:46:12.200 --> 00:46:13.400
Hi, I'm Katherine Wenc.

00:46:13.400 --> 00:46:16.940
I'm Technical Publications
Manager for WebObjects,

00:46:16.970 --> 00:46:22.200
and I'm happy to say that the state of
WebObjects documentation is fairly good.

00:46:22.320 --> 00:46:26.200
Over the past year,
we've allocated more resources,

00:46:26.380 --> 00:46:29.700
worked closely with engineering,
product marketing,

00:46:29.840 --> 00:46:32.530
technical publications,
and other organizations

00:46:33.070 --> 00:46:37.190
to create more content,
update our existing documentation set,

00:46:37.190 --> 00:46:40.420
and maintain it on the website.

00:46:44.300 --> 00:46:48.060
Over the next five minutes,
I'm going to talk about three things:

00:46:48.070 --> 00:46:52.940
what we achieved for WebObjects 5.1,
what our future goals are,

00:46:52.960 --> 00:46:55.750
and how to access the documentation.

00:46:59.480 --> 00:47:01.360
We revised the site.

00:47:01.520 --> 00:47:07.580
We made changes so that you can find
information more easily and efficiently.

00:47:07.870 --> 00:47:15.480
It now has nine areas and it has
a search engine powered by Google.

00:47:15.950 --> 00:47:23.180
Have any of you folks used the
ADC search engine powered by Google?

00:47:23.180 --> 00:47:23.180
It works really well,
especially if you click on

00:47:23.180 --> 00:47:23.180
the WebObjects button to limit
your search to WebObjects.

00:47:23.380 --> 00:47:27.030
It works really well,
but I advise you to walk through the

00:47:27.180 --> 00:47:30.960
site and understand what it contains,
because even though the Google search

00:47:30.960 --> 00:47:33.520
engine works really well,
you can't find legacy

00:47:33.620 --> 00:47:36.480
documentation with it.

00:47:36.480 --> 00:47:36.480
But!

00:47:36.660 --> 00:47:39.290
If you know to go to the
Legacy area on the website,

00:47:39.380 --> 00:47:41.100
you can find the Legacy documentation.

00:47:46.270 --> 00:47:49.760
We produced a lot of new
books for WebObjects 5.1.

00:47:49.830 --> 00:47:52.760
With these new additions,
we've created over 500 new

00:47:52.760 --> 00:47:57.420
pages of content for the
WebObjects 5.1 documentation set.

00:47:57.550 --> 00:48:01.360
How many of you folks have
read some of the books?

00:48:03.330 --> 00:48:05.600
At this time,
I'd like to thank everyone for

00:48:05.690 --> 00:48:09.510
all the feedback on both the
WebObjects 5.1 documentation

00:48:09.850 --> 00:48:11.490
and on documentation in general.

00:48:11.640 --> 00:48:13.580
This feedback is critical.

00:48:13.870 --> 00:48:19.500
It helps me provide direction to my
staff and helps me with my planning.

00:48:19.620 --> 00:48:22.500
In addition to all the new books,
we updated several.

00:48:22.610 --> 00:48:28.160
We are deploying WebObjects applications,
WebObjects overview, dynamic elements,

00:48:28.160 --> 00:48:30.930
the release notes,
and the installation guides.

00:48:31.050 --> 00:48:37.820
And we also, as you know,
have the API reference in Javadoc format.

00:48:41.120 --> 00:48:43.790
For future releases,
we plan on making some changes

00:48:44.280 --> 00:48:47.010
and adding some new documentation.

00:48:47.270 --> 00:48:51.100
I'm going to steal back the
thunder that Bob stole from me.

00:48:51.190 --> 00:48:56.800
WebObjects desktop applications is
now Java client desktop applications.

00:48:56.950 --> 00:49:00.140
This new book,
which is available today on the website,

00:49:00.170 --> 00:49:03.100
and you can also get
print-on-demand copies of it,

00:49:03.100 --> 00:49:08.840
has enhanced tutorials, more sample code,
more information about the

00:49:08.840 --> 00:49:12.700
benefits of using direct-to-Java
client versus Java client,

00:49:12.710 --> 00:49:15.990
and it has information
on the rule system.

00:49:16.600 --> 00:49:19.260
We're also adding new documents
to cover new features.

00:49:19.320 --> 00:49:23.540
That would be web services
and XML serialization.

00:49:23.670 --> 00:49:26.890
We're creating a new designing
Enterprise Objects book.

00:49:27.010 --> 00:49:33.980
This will be similar to the
Enterprise Objects Framework

00:49:34.170 --> 00:49:35.180
Developer's Guide that was last
released with WebObjects 4.5.

00:49:35.380 --> 00:49:38.570
We're combining the information
in the installation guide and the

00:49:38.740 --> 00:49:43.550
post-installation guide into one
comprehensive installation guide.

00:49:43.780 --> 00:49:45.610
We're updating the programming topics.

00:49:45.690 --> 00:49:49.230
I've received feedback that a lot of
you folks miss the programming topics,

00:49:49.230 --> 00:49:54.190
but we're working hard to make
them more complete and accurate.

00:49:54.820 --> 00:49:58.540
And we're also working to make
the API reference searchable

00:49:58.570 --> 00:50:00.200
in Developer Help Center.

00:50:00.210 --> 00:50:05.890
We want to make it so that you can
search the WebObjects API in the

00:50:05.970 --> 00:50:13.060
same way you can now search the
Cocoa and Carbon API reference.

00:50:13.880 --> 00:50:17.570
and if you're interested in this,
there's a session at 9:03 that

00:50:17.570 --> 00:50:19.910
I believe is 5 to 6:30 p.m.

00:50:19.920 --> 00:50:24.960
on Wednesday that there will be a
demo of the new full text search,

00:50:24.960 --> 00:50:26.930
doc searching capability in Jaguar.

00:50:26.930 --> 00:50:28.800
So if you'd like to go see that,
I advise you do.

00:50:33.740 --> 00:50:36.580
You can access the documentation
in a variety of ways.

00:50:36.740 --> 00:50:39.100
For the most up-to-date,
go to the website.

00:50:39.160 --> 00:50:44.410
That's where we keep the latest
PDF and HTML copies of the books.

00:50:45.410 --> 00:50:47.990
On the website,
if you go to Related Resources and

00:50:48.130 --> 00:50:51.340
click on revante.com,
you can get print-on-demand

00:50:51.680 --> 00:50:53.980
copies of some of our books.

00:50:54.100 --> 00:50:57.370
On the product CD,
you can find the documentation in both

00:50:57.760 --> 00:51:03.120
the high-level documentation folder and
when you install the developer package.

00:51:03.240 --> 00:51:06.180
In the box,
we ship printed versions of printed

00:51:06.340 --> 00:51:08.850
localized versions of some of our books.

00:51:09.240 --> 00:51:11.080
Right now,
we ship the installation guide,

00:51:11.230 --> 00:51:13.520
the What's New,
and the WebObjects overview.

00:51:13.650 --> 00:51:16.630
For future releases,
we'd also like to ship Java client

00:51:16.710 --> 00:51:22.120
desktop applications and
discovering WebObjects for HTML.

00:51:22.230 --> 00:51:25.970
And last but not least,
check the Apple Developer Connection

00:51:25.970 --> 00:51:26.560
newsletter.

00:51:26.670 --> 00:51:29.810
That's the email that you
get each Friday for all the

00:51:29.900 --> 00:51:32.010
updates on our documentation.

00:51:32.830 --> 00:51:34.700
This concludes my presentation.

00:51:34.710 --> 00:51:37.920
Again, I'd like to say how much
I appreciate all the feedback

00:51:38.020 --> 00:51:39.630
and comments that you folks give.

00:51:39.780 --> 00:51:40.340
Keep it coming.

00:51:48.260 --> 00:51:55.300
and now I'd like to introduce,
well let me switch the slide here,

00:51:55.420 --> 00:51:58.500
Joe Keenan of
Apple Professional Services.

00:52:11.200 --> 00:52:15.380
I'm the manager of
Apple Professional Services Technical

00:52:15.950 --> 00:52:16.740
Support.

00:52:16.740 --> 00:52:19.740
Apple Professional Services is
comprised of technical support,

00:52:19.760 --> 00:52:24.100
consulting engineering,
and integration services.

00:52:24.100 --> 00:52:31.060
We work closely with the engineering
departments and also with Apple Training,

00:52:31.060 --> 00:52:34.750
which is the next presenter up.

00:52:37.620 --> 00:52:42.340
WebObjects is kind of an unusual
product in the Apple catalog,

00:52:42.340 --> 00:52:46.450
if you will, because it's a commercial
developer product.

00:52:46.680 --> 00:52:52.500
You're all aware most developer tools
and products from Apple are no charge.

00:52:52.500 --> 00:52:55.040
You get it as part of the
Apple Developer Connection

00:52:55.140 --> 00:52:57.270
membership or something like that.

00:52:57.750 --> 00:53:02.090
WebObjects is a little unusual in
that it is a commercial product

00:53:02.090 --> 00:53:04.490
with its own pricing and so on.

00:53:04.590 --> 00:53:08.840
So there's a number of different
groups within Apple that are

00:53:08.840 --> 00:53:12.980
involved in supporting WebObjects,
and that's mainly what I want to talk

00:53:12.980 --> 00:53:14.500
about in a couple of minutes here.

00:53:14.500 --> 00:53:17.800
On the sort of at the low end,
if you will,

00:53:17.800 --> 00:53:23.980
installation and configuration,
the AppleCare phone centers handle

00:53:23.980 --> 00:53:29.070
calls about installing WebObjects,
issues with if the licensing

00:53:29.070 --> 00:53:31.870
didn't work or something like that,
or you have to do a reinstall or it

00:53:31.870 --> 00:53:33.500
came with your Mac OS X server box.

00:53:33.500 --> 00:53:36.500
So that's where that is handled.

00:53:36.500 --> 00:53:37.480
That's that part of Apple.

00:53:37.550 --> 00:53:43.610
For the developers in the world,
Apple Developer Connection

00:53:43.610 --> 00:53:47.450
Technical Support,
DTS, provides code level support

00:53:47.570 --> 00:53:49.500
for WebObjects developers.

00:53:49.550 --> 00:53:53.000
And I mean, if you talk to a lot--there's
a number of DTS people that are

00:53:53.000 --> 00:53:54.460
running this whole thing today.

00:53:54.570 --> 00:53:59.490
They have a couple of specialists
in WebObjects in their organization.

00:53:59.500 --> 00:54:02.430
But WebObjects is not
just a development tool.

00:54:02.540 --> 00:54:07.030
WebObjects is, as Bob pointed out,
a complete deployment environment

00:54:07.090 --> 00:54:09.500
of its own or integrates with
other deployment environments.

00:54:09.510 --> 00:54:11.500
And it's somewhat unique at Apple.

00:54:11.500 --> 00:54:14.490
There's very few products at
Apple that are cross-platform.

00:54:14.600 --> 00:54:19.500
WebObjects runs not only on Mac hardware,
Mac OS X, but Windows, Solaris,

00:54:19.500 --> 00:54:21.500
and a number of other places.

00:54:21.500 --> 00:54:26.420
So the deployment piece of it
is and can be quite complex.

00:54:26.500 --> 00:54:30.310
And that's where my organization,
Apple Professional Services Technical

00:54:30.470 --> 00:54:31.500
Support,
comes in.

00:54:31.580 --> 00:54:35.590
Because we provide services all
across the development environment,

00:54:35.620 --> 00:54:39.500
all the way out through the
large-scale deployment world.

00:54:39.750 --> 00:54:46.250
So when you're looking at your
needs for supporting WebObjects,

00:54:46.550 --> 00:54:49.380
you've got to figure out
where in the spectrum you are.

00:54:49.740 --> 00:54:53.470
For small-scale development,
code-level only issues,

00:54:53.500 --> 00:54:55.230
DTS is your right channel.

00:54:55.720 --> 00:54:59.500
But if you're developing
enterprise websites,

00:54:59.570 --> 00:55:03.440
big commercial e-commerce,
or customer care, or banking,

00:55:03.440 --> 00:55:06.490
or whatever, you need to be looking
at a commercial-grade,

00:55:06.560 --> 00:55:09.500
enterprise-level technical
support organization.

00:55:09.570 --> 00:55:11.830
And that's what
Professional Services Technical Support

00:55:11.830 --> 00:55:12.400
is all about.

00:55:13.090 --> 00:55:16.500
Professional Services, as I said,
also does consulting.

00:55:16.500 --> 00:55:21.500
So you can obtain assistance, actually,
either on sort of a mentoring role.

00:55:21.520 --> 00:55:23.920
Consultants come in from
Professional Services to

00:55:23.990 --> 00:55:25.500
help your development team.

00:55:25.610 --> 00:55:27.350
They'll do outsourced development.

00:55:27.500 --> 00:55:29.500
If you want a site completely
built by Professional Services,

00:55:29.500 --> 00:55:31.500
that's what they're there for.

00:55:31.500 --> 00:55:33.500
Or somewhere in between.

00:55:33.500 --> 00:55:34.500
So that's what they're there for.

00:55:36.250 --> 00:55:37.690
training used to be part of that.

00:55:37.780 --> 00:55:40.230
Dirk is going to talk about
the training part of it.

00:55:40.250 --> 00:55:43.240
But that's where the technical,
the whole professional services

00:55:43.240 --> 00:55:46.410
spectrum lies for WebObjects and
I don't want to take up a lot of your

00:55:46.410 --> 00:55:48.860
time because I'm not going to talk
about any of the technical details.

00:55:48.860 --> 00:55:53.700
But I will be here for the Q&A afterwards
if anybody has any questions about

00:55:53.700 --> 00:55:57.160
who the right people to go to and
where you can get the assistance

00:55:57.190 --> 00:55:59.040
you need for your WebObjects work.

00:55:59.040 --> 00:56:00.800
Just come see me then.

00:56:00.810 --> 00:56:03.260
And now I'm going to introduce

00:56:04.030 --> 00:56:10.770
Contact information:
www.apple.com/services is the

00:56:10.770 --> 00:56:12.340
professional services website.

00:56:12.340 --> 00:56:14.900
There are subsections
underneath that for consulting,

00:56:14.900 --> 00:56:18.900
integration, and technical support with
descriptions of the support programs.

00:56:18.900 --> 00:56:24.140
Email services.apple.com and
phone for more information about

00:56:24.140 --> 00:56:28.900
professional services products
and opportunities and so on.

00:56:28.900 --> 00:56:34.740
WebObjects training, Dirk Johnson.

00:56:39.550 --> 00:56:41.140
How are you doing today?

00:56:41.190 --> 00:56:42.800
My name is Dirk Johnson.

00:56:42.920 --> 00:56:47.490
I am a curriculum manager with
technical training and certification.

00:56:47.570 --> 00:56:50.740
I don't know about you,
but I am very excited about the things

00:56:50.740 --> 00:56:52.500
that I've heard today about WebObjects.

00:56:52.500 --> 00:56:54.740
And of course,
that's why I'm in training,

00:56:54.740 --> 00:56:56.580
because I'm so excited about it.

00:56:56.920 --> 00:57:00.960
We offer three courses
regarding WebObjects.

00:57:01.080 --> 00:57:03.810
First of all,
these courses are instructor-led,

00:57:03.950 --> 00:57:07.340
hands-on training with labs and lecture.

00:57:07.470 --> 00:57:12.800
We have very qualified trainers that go
pretty much everywhere to do training.

00:57:12.950 --> 00:57:17.460
The first is WebObjects Development 1,
and this provides you the basic

00:57:17.590 --> 00:57:22.090
foundational skill sets that you
need to do a WebObjects application.

00:57:22.330 --> 00:57:26.720
We take you through the HTTP request,
HTTP response, how to pull data from,

00:57:26.880 --> 00:57:29.270
put data back on the response.

00:57:29.670 --> 00:57:32.320
We talk about control points,
customizing WebObjects.

00:57:32.320 --> 00:57:34.600
We take you through building
an entire WebObjects

00:57:34.610 --> 00:57:36.170
application from the ground up.

00:57:36.350 --> 00:57:38.910
That's a five-day course.

00:57:40.330 --> 00:57:44.060
The second is WebObjects Development 2.

00:57:44.070 --> 00:57:46.060
So if you thought the
first one was intense,

00:57:46.060 --> 00:57:50.300
and it will be intense, brain-hurting,
heart-pounding type of course,

00:57:50.300 --> 00:57:52.160
WebObjects Development 2 is the same.

00:57:52.320 --> 00:57:54.300
Your head's going to hurt at the end.

00:57:54.300 --> 00:57:57.680
We take you through a lot of
advanced application designs,

00:57:57.680 --> 00:58:02.070
such as handling what I call the bane
of WebObject or Web dynamic development,

00:58:02.500 --> 00:58:06.380
handling the back button, localization,
getting down into the

00:58:06.470 --> 00:58:08.650
deeper depths of EOF,
including the access

00:58:08.650 --> 00:58:11.240
control and control layers,
things like that.

00:58:11.330 --> 00:58:13.450
So very intense.

00:58:13.780 --> 00:58:21.640
WebObjects is an entire platform,
and we do handle multiple

00:58:21.640 --> 00:58:27.260
platforms in the course:
Solaris, Windows, and Mac OS X.

00:58:29.910 --> 00:58:31.300
So how do you sign up?

00:58:31.320 --> 00:58:33.930
Well, you can go to our website,
train.apple.com,

00:58:33.930 --> 00:58:36.090
or you can actually call a
telephone number and sign

00:58:36.090 --> 00:58:37.950
up for the latest courses.

00:58:38.070 --> 00:58:41.540
Train.apple.com, by the way,
is also a WebObjects application.

00:58:41.710 --> 00:58:45.950
Deployments, the three-day course,
the other two are five-day courses.

00:58:46.170 --> 00:58:49.910
And again,
it's both lab and hands-on training.

00:58:50.110 --> 00:58:51.500
And we do offer on-site training.

00:58:51.500 --> 00:58:54.170
If you have enough engineers
where it would be cost-effective

00:58:54.200 --> 00:58:57.570
for us to come out to your site,
we're happy to do that.

00:58:58.600 --> 00:59:01.090
All right, I think I'll turn the
time back over to Bob.

00:59:01.910 --> 00:59:04.060
Thank you.

00:59:13.590 --> 00:59:18.210
So I'd like to review some of the
various tracks that we have here,

00:59:18.210 --> 00:59:21.440
or sub-tracks of the
whole WebObjects track.

00:59:21.530 --> 00:59:24.240
For those of you who are
fairly new to WebObjects,

00:59:24.350 --> 00:59:27.840
these are some of the sessions that would
be good to get an introductory overview.

00:59:27.840 --> 00:59:32.340
They cover the tools,
they cover the frameworks.

00:59:32.410 --> 00:59:37.430
There's also a solutions session on
Friday where you can see what some of the

00:59:37.490 --> 00:59:41.460
customers have been doing and what their
experience has been with WebObjects.

00:59:42.690 --> 00:59:50.060
and David Walsh will be here
to talk about the WebObjects

00:59:50.160 --> 00:59:53.790
and Enterprise Objects.

00:59:55.170 --> 00:59:59.090
We also cover the Java Server pages
and the servlet deployment.

00:59:59.090 --> 01:00:02.040
And there is also a project
builder session on Friday that

01:00:02.070 --> 01:00:04.250
might be of interest as well.

01:00:05.930 --> 01:00:11.850
and then our more advanced tracks:
Data Modeling and Connectivity,

01:00:12.370 --> 01:00:18.930
and some more depth on EOF and optimizing
WebObjects applications and security

01:00:19.370 --> 01:00:20.960
are also very popular sessions as well.

01:00:24.350 --> 01:00:27.680
And then I just kind of wanted
to close with what might be the

01:00:27.680 --> 01:00:30.900
interesting sessions for web services.

01:00:30.900 --> 01:00:33.360
The session following this
will cover client-side web

01:00:33.360 --> 01:00:35.580
services in the OS frameworks.

01:00:35.710 --> 01:00:39.020
There's a Java session that
goes over like what XMLRPC is

01:00:39.120 --> 01:00:40.800
and Jaxby in an acronym soup.

01:00:40.840 --> 01:00:43.990
That'll be kind of where you
can find out accessing things

01:00:44.010 --> 01:00:45.540
from the Java client side.

01:00:45.590 --> 01:00:49.180
And then you definitely have
to check out session 705,

01:00:49.180 --> 01:00:51.110
WebObjects and Web Services.

01:00:51.560 --> 01:00:55.430
and with that,
I'd like to have some of our

01:00:55.550 --> 01:00:57.570
team back up on the stage.

01:00:57.570 --> 01:01:02.120
So you've met myself and
Joe and Dirk and Katherine.

01:01:02.290 --> 01:01:07.630
I'd also like to take this time to invite
some members of the WebObjects team.

01:01:07.780 --> 01:01:12.630
We have Tony Trujillo-Villan,
who is our director.

01:01:14.710 --> 01:01:19.920
Todd Fernandez,
our Quality Manager Andreas Wenker,

01:01:19.920 --> 01:01:25.850
Rapid Development Manager Jeff Glasson,
Framework Manager Francois Jouault,

01:01:25.980 --> 01:01:30.250
Deployment Manager and Stan German,
Tools Manager.

01:01:34.850 --> 01:01:38.780
We have a lab that is
downstairs in room L.

01:01:38.880 --> 01:01:40.700
These are the hours.

01:01:40.700 --> 01:01:44.500
And we are doing a conversion
workshop today from 2 to 6.

01:01:44.500 --> 01:01:49.070
And you can sign up, first come,
first serve at the lab downstairs.

01:01:50.100 --> 01:01:54.930
and we have some URLs and
these will be in the URL farm.

01:01:55.040 --> 01:01:59.650
You can get myself or
Tony at WebObjects@apple.com.