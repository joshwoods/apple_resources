WEBVTT

00:00:02.990 --> 00:00:05.200
So we're about ready to
start our second session,

00:00:05.200 --> 00:00:07.500
the WebObjects Technical Overview.

00:00:07.620 --> 00:00:10.970
And I'd like to introduce Steve Hayman,
who's our speaker and

00:00:11.060 --> 00:00:12.820
presenter for this session.

00:00:12.890 --> 00:00:14.860
Steve, where are you?

00:00:17.160 --> 00:00:21.780
Tony,
you know how we got that memo that we

00:00:21.780 --> 00:00:23.140
were supposed to wear the speaker shirts?

00:00:23.200 --> 00:00:24.320
Yeah.

00:00:24.320 --> 00:00:27.030
And when I got here this morning,
they didn't have any.

00:00:37.600 --> 00:00:37.620
They were out.

00:00:37.620 --> 00:00:37.620
When did you fly in, Steve?

00:00:37.620 --> 00:00:37.620
I'm going to do the best I can,
all right?

00:00:37.620 --> 00:00:37.620
All right.

00:00:37.620 --> 00:00:37.620
Steve Hayman: All right, okay.

00:00:37.620 --> 00:00:37.620
I'd like to introduce Steve.

00:00:43.300 --> 00:00:44.960
I got here on Sunday and
they didn't have any shirts.

00:00:45.010 --> 00:00:48.580
There we go.

00:00:48.580 --> 00:00:51.890
Oh, wait a minute.

00:00:52.020 --> 00:00:53.180
It's cold up here.

00:00:53.180 --> 00:00:53.820
Just a second.

00:01:07.000 --> 00:01:08.350
I'd like to introduce Steve Hayman.

00:01:08.430 --> 00:01:09.000
Thank you.

00:01:09.000 --> 00:01:10.240
Please be seated.

00:01:10.240 --> 00:01:10.730
Please be seated.

00:01:10.810 --> 00:01:11.370
Thank you.

00:01:11.370 --> 00:01:13.070
But no, please sit down.

00:01:13.180 --> 00:01:13.760
Please, please.

00:01:13.760 --> 00:01:15.430
Oh, you're too kind.

00:01:16.610 --> 00:01:18.600
How many people were here last year?

00:01:19.170 --> 00:01:19.330
Yeah?

00:01:19.330 --> 00:01:25.600
Do you remember James Dempsey did
a song at the end of his session?

00:01:25.600 --> 00:01:27.600
Is James here today?

00:01:28.590 --> 00:01:30.250
I hope we have time.

00:01:30.260 --> 00:01:35.370
James wrote this song about EOF and he
brought out his guitar and he announced

00:01:35.470 --> 00:01:38.940
that this was the first time he'd ever
actually played the guitar in public.

00:01:38.940 --> 00:01:41.200
He wrote this fantastic
song about EOF that I think

00:01:41.200 --> 00:01:42.660
a lot of people remember.

00:01:42.660 --> 00:01:47.640
So I was thinking,
and I sure hope we have time,

00:01:47.640 --> 00:01:50.830
that we can have a
conversation about EOF.

00:01:52.000 --> 00:02:00.800
[Transcript missing]

00:02:02.100 --> 00:02:15.700
[Transcript missing]

00:02:16.330 --> 00:02:16.670
I'm Steve.

00:02:16.670 --> 00:02:17.300
I'm from Toronto.

00:02:17.300 --> 00:02:18.160
Any other Canadians here?

00:02:18.160 --> 00:02:21.860
Were you all disappointed to hear
James Gosling say Java yesterday?

00:02:21.860 --> 00:02:22.720
Oh, it killed me.

00:02:22.720 --> 00:02:23.980
The correct pronunciation is Java.

00:02:24.020 --> 00:02:26.440
I really wanted to get
clarification on that from him,

00:02:26.500 --> 00:02:27.740
but I was unable to do so.

00:02:27.740 --> 00:02:29.900
But I want to talk to you
today about WebObjects.

00:02:29.900 --> 00:02:32.880
Bob covered a lot of what's
new and some of the advanced

00:02:32.950 --> 00:02:35.080
features in the previous session.

00:02:35.080 --> 00:02:37.080
I want to talk more about the basics.

00:02:37.080 --> 00:02:38.640
Are there people here that
are WebObjects beginners?

00:02:38.640 --> 00:02:41.440
Are there people here that are tired
of people asking to put up your

00:02:41.440 --> 00:02:43.080
hands at the beginning of a session?

00:02:43.080 --> 00:02:44.460
Are there people like that?

00:02:44.520 --> 00:02:44.680
Yeah.

00:02:45.520 --> 00:02:46.850
So we won't try not to
do any more of that.

00:02:46.930 --> 00:02:48.110
But I want to talk about this.

00:02:48.170 --> 00:02:50.170
And more importantly,
I want to actually build

00:02:50.280 --> 00:02:52.290
something in a little bit of time.

00:02:52.330 --> 00:02:55.780
So WebObjects, as Bob mentioned,
is an application server,

00:02:55.780 --> 00:02:57.490
which is not my favorite term.

00:02:57.540 --> 00:03:01.540
But the best part is really these
frameworks that come with WebObjects and

00:03:01.540 --> 00:03:04.220
enable you to build applications quickly.

00:03:04.220 --> 00:03:05.830
We give you a lot of code.

00:03:06.070 --> 00:03:10.690
We give you a lot of tools that know
how to generate HTML and that know how

00:03:10.690 --> 00:03:14.740
to manage sessions and that know how
to talk to databases at the back end.

00:03:14.740 --> 00:03:17.880
And by leveraging those frameworks,
those collections of

00:03:17.880 --> 00:03:21.450
objects and those tools,
you can hopefully build a pretty

00:03:21.530 --> 00:03:23.620
good application pretty fast.

00:03:24.700 --> 00:03:26.670
You're deploying something
in the middle here,

00:03:26.740 --> 00:03:28.710
and it's integrating data from
all these different places and

00:03:28.710 --> 00:03:30.800
sending it out through the web
servers in a variety of ways,

00:03:30.850 --> 00:03:32.100
as you probably know.

00:03:32.120 --> 00:03:35.290
This is really a tool, however,
for developers.

00:03:35.320 --> 00:03:38.690
Some of us have worked pretty
hard to make it look pretty easy,

00:03:38.690 --> 00:03:41.760
but just I want you to keep
in mind that this really is

00:03:41.860 --> 00:03:43.020
a tool for Java programmers.

00:03:43.020 --> 00:03:45.780
You have to be a serious
Java programmer to get a

00:03:45.890 --> 00:03:48.210
sophisticated WebObjects app done.

00:03:48.300 --> 00:03:51.570
There is a steep learning curve
associated with WebObjects,

00:03:51.710 --> 00:03:55.690
but that's okay because you're going to
learn a lot in a short period of time.

00:03:57.900 --> 00:03:58.940
All right, I'm retiring that joke.

00:03:58.990 --> 00:04:00.140
I've been doing that
joke for three years.

00:04:00.140 --> 00:04:01.860
I think that's probably
enough for that one.

00:04:01.940 --> 00:04:03.920
Does that joke work in Japanese?

00:04:03.960 --> 00:04:05.800
I like to say "Kanichiwa"
to the translators.

00:04:05.800 --> 00:04:08.370
Everyone say "Kanichiwa." Translators?

00:04:08.400 --> 00:04:09.440
Hi.

00:04:09.630 --> 00:04:09.990
Kanichiwa.

00:04:10.100 --> 00:04:10.640
Oh, they're waving.

00:04:10.640 --> 00:04:11.370
Good, good, good.

00:04:11.370 --> 00:04:13.930
I wasn't sure if my mic was on.

00:04:14.020 --> 00:04:15.760
We cannot understand the Canadian man.

00:04:15.760 --> 00:04:18.400
We do not know what he is saying.

00:04:20.000 --> 00:04:22.140
It's not funny even in English,
so we're not going to

00:04:22.140 --> 00:04:23.060
bother translating it.

00:04:23.060 --> 00:04:28.180
So we have a tool here
that works with Java,

00:04:28.460 --> 00:04:33.800
with a variety of databases,
now with JNDI servers in WebObjects 5.1.

00:04:33.800 --> 00:04:36.080
A bunch of different
UIs you can pump out,

00:04:36.140 --> 00:04:38.960
usually HTML,
but often other technologies.

00:04:39.040 --> 00:04:41.120
We work with a variety of web servers.

00:04:41.120 --> 00:04:43.160
We work with things that
used to be competitors.

00:04:43.160 --> 00:04:46.640
Now that we have this servlet deployment,
you can theoretically take

00:04:46.700 --> 00:04:49.780
your WebObjects app and
bundle it up for servlets,

00:04:49.860 --> 00:04:51.470
and deploy it on somebody
else's servlet engine.

00:04:51.500 --> 00:04:55.590
Lots of third-party objects, and open,
open, open, open, open, open, open.

00:04:55.620 --> 00:04:58.210
I'll wait for the
translators to catch up.

00:04:58.300 --> 00:04:59.980
Okay?

00:04:59.980 --> 00:05:00.520
Okay, good.

00:05:02.790 --> 00:05:04.820
You can develop on Mac OS X,
you can develop on Windows,

00:05:04.820 --> 00:05:08.810
you can deploy on Mac OS X Server,
Windows 2000 or Solaris,

00:05:08.890 --> 00:05:12.180
and theoretically other places that
have a Java environment as well.

00:05:12.180 --> 00:05:14.940
And now with Servlets,
you have a choice of runtime environments

00:05:14.940 --> 00:05:16.380
you can use in which to deploy.

00:05:16.380 --> 00:05:18.870
And you can start small and grow bigger.

00:05:18.900 --> 00:05:22.390
People often build a little application
that's just running on one machine,

00:05:22.390 --> 00:05:25.440
and after they get it working,
and without any real need to

00:05:25.900 --> 00:05:28.760
redesign or anything like that,
you can scale an application to a big,

00:05:28.760 --> 00:05:30.900
scary,
complicated diagram here where we've got

00:05:30.940 --> 00:05:33.900
multiple firewalls inside and outside,
multiple adapters,

00:05:33.900 --> 00:05:35.940
and multiple copies of the application.

00:05:35.990 --> 00:05:37.190
We call those instances.

00:05:37.200 --> 00:05:39.730
You write up the application,
and you have several of them

00:05:39.730 --> 00:05:41.440
going in several different places.

00:05:41.510 --> 00:05:45.660
So you can really move from this to
this without any big architectural

00:05:45.660 --> 00:05:47.740
redesign of your application.

00:05:47.830 --> 00:05:49.170
A lot of that stuff is built in.

00:05:49.180 --> 00:05:51.210
I just noticed my boss is
sitting in the second row,

00:05:51.210 --> 00:05:53.780
and I think this is the first
time he's ever seen me do a demo.

00:05:53.780 --> 00:05:54.900
Right, Alan?

00:05:54.900 --> 00:05:56.980
Did we have my performance review?

00:05:57.120 --> 00:05:57.660
Are you ready for this year?

00:05:57.660 --> 00:05:58.330
I don't know.

00:05:58.340 --> 00:06:00.020
I'm very nervous now.

00:06:00.020 --> 00:06:02.700
You didn't see me come out, did you?

00:06:02.700 --> 00:06:04.800
You came in after I put my shirt on,
I hope?

00:06:04.840 --> 00:06:05.550
Okay, good.

00:06:07.240 --> 00:06:10.830
But the key ideas surrounding WebObjects,
we have components at the front

00:06:10.830 --> 00:06:13.670
end and a tool that builds those,
and they're the things that create

00:06:13.670 --> 00:06:15.080
HTML and send it to the world.

00:06:15.130 --> 00:06:17.970
At the back end,
we have enterprise objects,

00:06:17.970 --> 00:06:20.740
which are the things that
talk to databases and that

00:06:21.390 --> 00:06:24.820
collect data from data,
data, data, data, Java, Jaguar.

00:06:29.350 --> 00:06:31.960
So many pronunciation options
available to you at WWDC,

00:06:32.020 --> 00:06:36.060
but all these different pieces
are bound together at runtime.

00:06:36.060 --> 00:06:40.760
We have a sophisticated technology that's
sophisticated and lazy at the same time.

00:06:40.760 --> 00:06:42.920
If that's possible,
I like to think that I'm that way myself,

00:06:43.020 --> 00:06:44.420
which is why I enjoy WebObjects.

00:06:44.470 --> 00:06:46.090
I'm sophisticated and lazy.

00:06:46.240 --> 00:06:49.150
And these objects are
tied together dynamically.

00:06:49.160 --> 00:06:52.580
As the application runs,
decisions are being made about who's

00:06:52.580 --> 00:06:55.750
connecting to who and who's sending
what message where and where is the

00:06:55.780 --> 00:06:57.580
data actually going to come from.

00:06:57.850 --> 00:07:00.950
You build these components at the front
end that have this little WebObject

00:07:00.950 --> 00:07:03.860
tag in them that indicate in the HTML,
here's where something

00:07:03.860 --> 00:07:04.820
is going to happen.

00:07:04.970 --> 00:07:08.460
Some message is going to get sent to
something here and the result is going to

00:07:08.570 --> 00:07:10.880
be inserted into the HTML at this place.

00:07:10.930 --> 00:07:13.000
We call another thing,
we call them bindings.

00:07:13.110 --> 00:07:18.590
Bindings are the definition of what
happens when we see this WebObject tag.

00:07:19.360 --> 00:07:21.900
So I can talk more about this later,
but this is really what, in raw form,

00:07:21.900 --> 00:07:23.250
WebObjects components look like.

00:07:23.350 --> 00:07:25.200
They're pieces of HTML.

00:07:25.200 --> 00:07:27.810
They're these things called a
WAD file in the upper right.

00:07:27.820 --> 00:07:30.390
That's a definition of
the meaning of the tag.

00:07:30.400 --> 00:07:32.890
So you see string one on the
left is actually a WO string,

00:07:33.000 --> 00:07:35.710
and it's going to give its value
by sending a certain message

00:07:35.710 --> 00:07:37.080
to a certain other object.

00:07:37.860 --> 00:07:40.970
WebObjects evaluates all
this stuff at runtime,

00:07:41.140 --> 00:07:42.630
sends the message,
and comes up with plain

00:07:42.640 --> 00:07:43.830
HTML going out to the end user.

00:07:43.830 --> 00:07:47.640
Components usually have a Java class
associated with them as well,

00:07:47.640 --> 00:07:50.190
in which you can
actually define behavior.

00:07:52.160 --> 00:07:53.100
Now what comes out of these components?

00:07:53.100 --> 00:07:56.620
It's just text, just bytes,
all sorts of stuff to be

00:07:56.620 --> 00:07:58.870
interpreted by the client,
and WebObjects marks it

00:07:58.980 --> 00:08:02.080
up back in the server and
transforms it and sends it out.

00:08:02.280 --> 00:08:04.900
At the back end is the
Enterprise Objects Framework,

00:08:04.920 --> 00:08:07.150
or we call it EOF,
Enterprise Objects Framework.

00:08:07.210 --> 00:08:10.280
EOF is not maybe the best name.

00:08:10.280 --> 00:08:11.980
I was not in the meeting when
they picked the name EOF.

00:08:12.090 --> 00:08:13.360
That kind of meant something already.

00:08:13.360 --> 00:08:14.070
Did you know that?

00:08:14.120 --> 00:08:16.220
That was a term we used
in computing already?

00:08:16.220 --> 00:08:17.390
EOF.

00:08:17.470 --> 00:08:19.230
But EOF is a good thing in this case.

00:08:20.060 --> 00:08:23.900
Enterprise Objects is the back end
database connection technology that

00:08:23.900 --> 00:08:26.200
underlies most WebObjects applications.

00:08:26.200 --> 00:08:29.710
It's driven by a model,
which is a file that you can create that

00:08:30.250 --> 00:08:34.000
describes what database you want to use,
what tables and rows and

00:08:34.000 --> 00:08:39.040
columns you're interested in,
what kind of objects you want to

00:08:39.040 --> 00:08:41.680
make coming out the front end.

00:08:42.240 --> 00:08:44.710
Together with that,
you can create Java objects that

00:08:44.800 --> 00:08:50.880
contain the data from this database,
customers, packages, vehicles, whatever.

00:08:50.990 --> 00:08:53.720
But you can also enhance
them with business rules,

00:08:53.720 --> 00:08:56.610
and WebObjects will take care
of creating sort of blank,

00:08:56.610 --> 00:08:59.750
empty Java objects of your choice
and filling them in with data

00:08:59.750 --> 00:09:01.610
that it's found in the database.

00:09:01.660 --> 00:09:04.510
So your object just springs to life,
containing this data which has come

00:09:04.510 --> 00:09:08.080
ultimately through some sort of a
JDBC data source in a process that's

00:09:08.080 --> 00:09:10.410
kind of unknown to the object itself.

00:09:10.530 --> 00:09:14.520
You write these sort of naive,
middle-tier business objects that

00:09:14.520 --> 00:09:19.530
just spring to life with data that the
EOF has brought in from the back end.

00:09:19.740 --> 00:09:21.300
All driven through these models.

00:09:21.350 --> 00:09:24.240
These models are really files
that tie object specifications

00:09:24.240 --> 00:09:25.620
to specific data sources.

00:09:25.660 --> 00:09:27.360
I'm going to show you all this later.

00:09:27.460 --> 00:09:29.210
I'm going to try to build something.

00:09:29.210 --> 00:09:32.400
And hopefully it'll be obvious
how this all actually works.

00:09:32.400 --> 00:09:35.250
Ultimately,
you're setting up definitions that say

00:09:35.250 --> 00:09:39.760
certain kinds of objects are associated
bidirectionally with certain databases,

00:09:39.760 --> 00:09:40.780
certain tables.

00:09:40.780 --> 00:09:44.170
Every row in this cust table,
I want to make a customer object.

00:09:44.170 --> 00:09:48.320
Every row in this other database table,
I want to make a vehicle object.

00:09:50.750 --> 00:09:54.900
And the relationships between objects
are handled automatically as well.

00:09:54.900 --> 00:09:57.300
A customer might have a
list of vehicles and so on.

00:09:57.300 --> 00:10:00.170
I think this is one of the great
things about WebObjects is the way

00:10:00.170 --> 00:10:01.960
that it manages relationships for you.

00:10:01.960 --> 00:10:03.520
Anybody here in a relationship?

00:10:03.520 --> 00:10:05.100
Anybody in a relationship?

00:10:05.100 --> 00:10:07.640
Managing a relationship is hard, right?

00:10:07.710 --> 00:10:09.990
I know I'm in a one-to-one
relationship right now.

00:10:10.060 --> 00:10:13.270
For a while I was worried it was going
to be a one-to-zero relationship,

00:10:13.270 --> 00:10:14.600
but I think we're okay.

00:10:14.600 --> 00:10:17.240
I guess there are people in one-to-many
and many-to-many relationships,

00:10:17.240 --> 00:10:18.430
and that's all complicated.

00:10:18.460 --> 00:10:23.290
But WebObjects and EnterpriseObjects can
support the automatic adding of things

00:10:23.290 --> 00:10:26.240
to and from these other relationships
and handle all that for you.

00:10:27.980 --> 00:10:28.640
It's the real gem.

00:10:28.660 --> 00:10:30.500
It's the best part of WebObjects.

00:10:30.500 --> 00:10:32.750
It's also,
superficially it might seem simple,

00:10:32.780 --> 00:10:36.280
but there's a lot of depth to this
thing and a lot of places where you

00:10:36.280 --> 00:10:40.530
can write code and leap in there and
override the way it works if you want,

00:10:40.620 --> 00:10:45.020
but enhance it and take advantage of
all this power that this persistence

00:10:45.850 --> 00:10:47.800
framework is bringing to the table.

00:10:48.400 --> 00:10:50.790
All this stuff,
the backend enterprise objects and

00:10:50.790 --> 00:10:54.350
the frontend components are all tied
together at runtime by WebObjects.

00:10:54.460 --> 00:10:58.060
It finds those WebObjects tags,
maybe fetches some objects,

00:10:58.220 --> 00:11:02.460
sends some messages hither and yon,
and produces a stream of HTML that

00:11:02.460 --> 00:11:04.290
goes out to the end user.

00:11:05.360 --> 00:11:08.480
together with session management.

00:11:08.480 --> 00:11:11.610
Every WebObjects user has a
session object created for them.

00:11:11.620 --> 00:11:13.470
By default,
it doesn't really do anything,

00:11:13.620 --> 00:11:15.740
but it's a placeholder
where you can go and say,

00:11:15.740 --> 00:11:18.100
"I want to add a shopping
cart to this session.

00:11:18.100 --> 00:11:22.230
I want to keep track of which products
somebody has purchased." And WebObjects

00:11:22.230 --> 00:11:26.360
will take care of handling that session
object and making sure it sticks

00:11:26.460 --> 00:11:30.360
around for the entire lifetime of one
user's interaction with your database.

00:11:30.430 --> 00:11:32.810
You have complete control over
how these sessions are stored.

00:11:32.810 --> 00:11:33.730
Are they in the database?

00:11:33.730 --> 00:11:34.920
Are they kept in a cookie?

00:11:35.090 --> 00:11:38.060
Are they kept, you know,
hidden fields in a form or something?

00:11:38.150 --> 00:11:42.420
But it's a common place to extend and add
behavior that's going to be unique to a

00:11:42.500 --> 00:11:45.550
particular user in the session object.

00:11:46.070 --> 00:11:47.740
along with these runtime
monitoring tools.

00:11:47.740 --> 00:11:50.640
We have Monitor and WoTaskD,
which is our standard way

00:11:50.640 --> 00:11:53.920
of deploying applications,
but now in 5.1 we have this

00:11:53.920 --> 00:11:56.600
ServLib deployment option as well,
where you can let somebody else

00:11:56.700 --> 00:12:00.000
worry about how the application
is actually going to run.

00:12:00.000 --> 00:12:05.770
I suppose there would be a different
phone number you could call

00:12:06.180 --> 00:12:07.720
and complain about the way your
application wasn't running because

00:12:07.720 --> 00:12:07.720
you're using somebody else's engine.

00:12:08.220 --> 00:12:10.690
So what is it you're actually creating?

00:12:10.800 --> 00:12:11.070
Pardon me.

00:12:11.100 --> 00:12:12.190
I'm so funny.

00:12:15.490 --> 00:12:16.400
What is it you're actually creating?

00:12:16.400 --> 00:12:17.130
What is this water?

00:12:17.160 --> 00:12:18.700
Holy smokes,
I thought this was just water.

00:12:18.700 --> 00:12:21.400
It's got... Vodka.

00:12:21.410 --> 00:12:25.510
Oh, vodka, yes, that is good.

00:12:26.320 --> 00:12:26.970
What is it you're creating?

00:12:26.980 --> 00:12:29.190
You're building something that,
don't get hung up on this,

00:12:29.260 --> 00:12:31.200
but you're building this
complicated structure here.

00:12:31.200 --> 00:12:34.350
You're taking a bunch of WebObjects
components and your own Java code

00:12:34.350 --> 00:12:37.790
and maybe some images and some
references to frameworks that

00:12:37.930 --> 00:12:40.410
other people have created,
and it's all creating

00:12:40.410 --> 00:12:42.300
this big .woa folder.

00:12:42.300 --> 00:12:45.360
That's sort of what the result
of building an application

00:12:45.360 --> 00:12:46.990
with WebObjects Builder is.

00:12:47.040 --> 00:12:49.900
It's a folder like this,
it's got a variety of resources in it,

00:12:49.970 --> 00:12:54.240
and hidden in there, for instance,
is a shell script that's going to

00:12:54.440 --> 00:12:57.740
take all of your Java code that's
been compiled into this jar file and

00:12:57.740 --> 00:12:59.900
run it and set it up in such a way,
normally,

00:12:59.900 --> 00:13:04.720
that it finds images and so on in a
folder that belongs to this application.

00:13:04.800 --> 00:13:06.630
So you build this thing,
and you don't need to

00:13:06.630 --> 00:13:08.330
worry about these details,
but this is what's

00:13:08.400 --> 00:13:09.190
actually happening here.

00:13:09.200 --> 00:13:12.030
And then when it comes time to
actually run the application,

00:13:12.080 --> 00:13:13.090
you'll see me do it this way.

00:13:13.100 --> 00:13:16.420
You might launch your
application from Project Builder,

00:13:16.420 --> 00:13:18.560
and Project Builder is going
to start your application,

00:13:18.560 --> 00:13:22.160
which is going to create some class
path like you would not believe,

00:13:22.160 --> 00:13:25.470
that picks out the Java classes,
spread over all these frameworks,

00:13:25.500 --> 00:13:28.870
and ultimately it's going to start
the application object associated

00:13:29.050 --> 00:13:30.860
with your WebObjects application.

00:13:30.880 --> 00:13:33.450
Part of that, normally,
when you're launching

00:13:33.450 --> 00:13:36.010
from Project Builder,
your application thinks for a moment,

00:13:36.020 --> 00:13:40.850
comes up with a random port number,
and asks your web browser to connect

00:13:40.850 --> 00:13:43.720
to this particular port number,
and the web browser just starts.

00:13:43.780 --> 00:13:47.430
When you're testing with WebObjects,
this is usually how people start.

00:13:47.520 --> 00:13:48.600
You do what we call direct connect.

00:13:48.600 --> 00:13:50.970
You just hit the run
button in Project Builder,

00:13:50.980 --> 00:13:54.530
your application starts,
your web browser is sent

00:13:54.610 --> 00:13:56.140
this particular URL,
and it opens,

00:13:56.140 --> 00:13:58.030
and then you talk back and forth,
and you try it out.

00:13:58.330 --> 00:14:00.870
That's maybe not the best way to deploy,
however.

00:14:00.890 --> 00:14:04.020
We'd rather have you, well, sorry, yeah,
in this direct connect mode,

00:14:04.020 --> 00:14:06.600
everything's happening to
the application itself.

00:14:06.600 --> 00:14:09.540
Requests for images,
requests for dynamic HTML,

00:14:09.540 --> 00:14:12.390
it's all coming into this one
application and its resources.

00:14:14.310 --> 00:14:17.590
Later on, when you're ready to deploy,
you've probably got one or more app

00:14:17.590 --> 00:14:19.860
servers and one more web servers,
and there's kind of a

00:14:19.860 --> 00:14:22.010
naive way to deploy,
which is just to copy everything

00:14:22.260 --> 00:14:26.710
to the app server and let the web
server just route all the requests

00:14:26.710 --> 00:14:30.460
for the images and everything else
over to the application server.

00:14:30.460 --> 00:14:35.540
And that's not really taking advantage
of what web servers can do for you.

00:14:35.540 --> 00:14:38.900
Web servers are pretty good at
caching images and QuickTime movies

00:14:38.900 --> 00:14:42.440
and JavaScript and things like that
that aren't going to change during

00:14:42.440 --> 00:14:44.050
the life of your applications.

00:14:44.200 --> 00:14:47.220
So we offer another approach.

00:14:48.000 --> 00:14:50.600
called the split install,
where you put most of the stuff on the

00:14:50.670 --> 00:14:55.960
application server and you put images and
other static resources on the web server.

00:14:56.140 --> 00:14:59.050
And then at runtime,
the requests are sorted out so that

00:14:59.170 --> 00:15:03.060
certain things go only as far as the web
server where they're cached by Apache or

00:15:03.150 --> 00:15:05.130
IIS or whatever your web server is.

00:15:05.480 --> 00:15:07.590
And other requests for dynamic
stuff are getting routed

00:15:07.590 --> 00:15:10.000
through to your app server,
which might be somewhere else.

00:15:10.110 --> 00:15:11.450
This is called a split install.

00:15:11.450 --> 00:15:13.980
These are terms that you might
come across when it comes time

00:15:13.980 --> 00:15:15.050
to deploy your application.

00:15:15.090 --> 00:15:19.250
But we like the idea of splitting the
static and the dynamic parts so that

00:15:19.250 --> 00:15:21.120
you can scale them each independently.

00:15:21.220 --> 00:15:23.550
You could have,
if you didn't have a lot of images,

00:15:23.550 --> 00:15:27.400
you might have one web server and several
application servers at the same time.

00:15:27.530 --> 00:15:29.960
So there's a lot of flexibility
in how you actually deploy.

00:15:29.960 --> 00:15:33.080
One good thing about that
approach is that the actual

00:15:33.080 --> 00:15:35.710
code is on the app server,
which is usually protected by a

00:15:35.820 --> 00:15:38.410
firewall in some way and there's
no way for people to get at it.

00:15:38.410 --> 00:15:40.310
And then the images,
which you don't care about,

00:15:40.370 --> 00:15:42.240
can sit on the web server
where people can download them

00:15:42.240 --> 00:15:43.500
and copy them all they want.

00:15:43.660 --> 00:15:47.800
So typically in Mac OS X,
the images would wind up over here.

00:15:49.730 --> 00:15:51.550
New in 5.1, servlet deployment.

00:15:51.560 --> 00:15:52.580
The same as before.

00:15:52.580 --> 00:15:54.880
You build your application
the same way as before.

00:15:54.880 --> 00:15:59.340
You add this magic
Java WOJSP servlet dot framework,

00:15:59.340 --> 00:16:03.230
and through some process that
I don't completely understand,

00:16:03.230 --> 00:16:07.790
it winds up creating a dot war file
in addition to this big dot WOA file.

00:16:07.800 --> 00:16:10.630
You're welcome to try to
understand the build process.

00:16:10.630 --> 00:16:16.680
Mark over here has tried to
understand the build process,

00:16:16.680 --> 00:16:17.580
and that's why he's laughing.

00:16:18.080 --> 00:16:19.800
But it all happens magically for you.

00:16:19.800 --> 00:16:22.820
And in addition to your application,
one single file called

00:16:22.820 --> 00:16:24.580
a war file is created.

00:16:24.580 --> 00:16:26.540
And then if you want to
do servlet deployment,

00:16:26.540 --> 00:16:31.210
it's more or less as simple as
copying that war file to wherever your

00:16:31.610 --> 00:16:33.980
servlet engine expects to find it.

00:16:34.040 --> 00:16:37.160
You know, we support Tomcat,
and Tomcat wants to find

00:16:37.300 --> 00:16:40.910
servlets in library,
Tomcat, web apps, my app dot war.

00:16:40.920 --> 00:16:44.750
So deployment in a servlet scenario
is as simple as moving this one

00:16:45.050 --> 00:16:48.020
file over to this other place,
and then looking up the documents.

00:16:48.110 --> 00:16:50.160
You're going to have to do a lot
of documentation on your servlet

00:16:50.170 --> 00:16:52.310
container and deciding how to
tell it about the application.

00:16:52.310 --> 00:16:53.360
Sometimes it's automatic.

00:16:53.440 --> 00:16:57.130
Now I should tell you that at the moment
you do need to have the rest of web

00:16:57.130 --> 00:16:59.480
objects installed on the servlet engine.

00:16:59.480 --> 00:17:03.590
This war file that you're copying is
only your application and its code.

00:17:03.680 --> 00:17:06.450
Are we thinking about
doing anything about that?

00:17:06.450 --> 00:17:09.640
People often ask if,
couldn't we make it so that the war file

00:17:09.700 --> 00:17:13.420
was even more humongous and contained
all of web objects so that it was

00:17:13.420 --> 00:17:15.650
just one thing to plop in the server?

00:17:16.460 --> 00:17:18.450
That would be a great question at Q&A.

00:17:18.470 --> 00:17:20.490
Someone should ask that at Q&A,
but not to me.

00:17:20.680 --> 00:17:22.760
It's one of these people over here.

00:17:27.280 --> 00:17:29.390
So what's going on when one of
these applications actually runs?

00:17:29.420 --> 00:17:31.530
You've got the Internet,
it's got three or four

00:17:31.640 --> 00:17:32.900
computers on it out there.

00:17:32.900 --> 00:17:35.290
You've got a web server and
an application server and

00:17:35.290 --> 00:17:36.120
some kind of a database.

00:17:36.120 --> 00:17:38.650
We don't care at all
what the web server is.

00:17:38.820 --> 00:17:43.690
We put a little adapter thing on it that
allows it to find the application server.

00:17:43.710 --> 00:17:46.470
But it can be anybody's
web server at all.

00:17:46.590 --> 00:17:48.810
We care a little bit more about
what the application server is.

00:17:48.890 --> 00:17:51.080
There are certain platforms
that are officially supported,

00:17:51.130 --> 00:17:53.430
and then there are other platforms
like Linux that might work,

00:17:53.430 --> 00:17:55.220
but they're not officially supported.

00:17:55.220 --> 00:17:59.810
And there are database adapters at the
back end that speak to certain databases.

00:17:59.910 --> 00:18:02.260
We have, oh, I should have put,
I'm sorry,

00:18:02.260 --> 00:18:03.140
I should have put MySQL on here.

00:18:03.140 --> 00:18:06.830
We have a variety of supported databases,
and then there are others

00:18:06.830 --> 00:18:08.650
that work through SQL as well.

00:18:08.660 --> 00:18:10.820
You know, if you wanted to get
FrontBase or something,

00:18:10.820 --> 00:18:12.180
that's a fine database as well.

00:18:12.180 --> 00:18:14.850
You can use your choice of databases,
not just the ones that we

00:18:14.850 --> 00:18:16.250
officially sanction here.

00:18:16.260 --> 00:18:18.840
So what's going on when you have
a really simple application?

00:18:18.880 --> 00:18:21.430
This was sort of my first
WebObjects application,

00:18:21.510 --> 00:18:24.440
trying to do something
incredibly sophisticated here,

00:18:24.440 --> 00:18:25.180
where I would type my user name.

00:18:25.220 --> 00:18:30.720
And it would look up me in the database
and welcome me back by my first name.

00:18:30.720 --> 00:18:33.180
So there's really three
steps that are going on.

00:18:33.680 --> 00:18:37.400
When the form is submitted
from the web browser,

00:18:37.670 --> 00:18:39.600
is the head of the WebObjects
application development team.

00:18:39.600 --> 00:18:44.520
He is the head of the WebObjects
application development team.

00:19:07.600 --> 00:19:08.060
Steve Hayman is the head of the
WebObjects application development team.

00:19:08.060 --> 00:19:08.600
He is the head of the WebObjects
application development team.

00:19:08.600 --> 00:19:14.600
He is the head of the WebObjects
application development team.

00:19:21.490 --> 00:19:23.960
So users are submitting requests
like this and they come flying

00:19:23.960 --> 00:19:26.030
in from their iMac or their eMac.

00:19:26.110 --> 00:19:28.890
I have to say, as an old Unix guy,
it's interesting to me

00:19:28.900 --> 00:19:30.330
that we now make eMacs.

00:19:30.380 --> 00:19:31.220
I think that's kind of fun.

00:19:31.220 --> 00:19:35.170
Although, I have to say,
I'm really hoping we're also going

00:19:35.170 --> 00:19:38.140
to come up with a VI Mac because
that personally would be my choice.

00:19:41.410 --> 00:19:43.000
Anyway,
the request comes in from the Emacs

00:19:43.100 --> 00:19:46.500
and the Vimacs to the web server,
and it gets sent to one

00:19:46.500 --> 00:19:49.020
copy of your application,
which is running somewhere

00:19:49.470 --> 00:19:51.300
on this application server.

00:19:51.300 --> 00:19:52.540
The first time, it picks one at random.

00:19:52.540 --> 00:19:54.620
The second time,
it usually sends you back to

00:19:54.630 --> 00:19:56.780
the same one as the first time.

00:19:57.160 --> 00:19:59.940
And the session has to go and
find the component that caused

00:19:59.940 --> 00:20:03.000
the original page to be created.

00:20:03.000 --> 00:20:04.890
We have to go and find that
so we can decide what to do

00:20:05.010 --> 00:20:06.190
with the string S Hayman.

00:20:06.200 --> 00:20:08.790
And by studying that component,
we can see that it should be

00:20:09.190 --> 00:20:10.620
associated with value username.

00:20:10.660 --> 00:20:13.770
We should find some variable
called username and take the

00:20:13.770 --> 00:20:18.440
form value that was typed here
and stuff it in to that variable.

00:20:18.450 --> 00:20:22.380
So it finds those form values
and then it invokes the action.

00:20:22.380 --> 00:20:24.160
You click on the submit button and
this particular component says,

00:20:24.160 --> 00:20:26.550
oh, when it hits submit,
you should send the handle

00:20:27.070 --> 00:20:28.670
login message back to the page.

00:20:28.770 --> 00:20:31.210
And that would fire up a little
bit of Java code that would maybe

00:20:31.210 --> 00:20:34.000
look up another page or you could
insert some code here to tell

00:20:34.120 --> 00:20:36.930
the session to do something or
you might want to log something.

00:20:36.930 --> 00:20:40.910
But when that button is associated
with a particular message being

00:20:40.910 --> 00:20:43.030
sent to one of these classes.

00:20:43.290 --> 00:20:45.500
So in this case,
it's going to look up another page,

00:20:45.500 --> 00:20:46.690
a page called welcome.

00:20:46.870 --> 00:20:50.080
and it's going to find the welcome.w
o page which has its own little bit

00:20:50.100 --> 00:20:54.910
of HTML and its own wide file its
own WebObject declaration file and

00:20:54.910 --> 00:20:56.980
then we're going to decide how to
process this thing and all this is

00:20:56.980 --> 00:20:58.390
happening in the response phase.

00:20:58.400 --> 00:21:03.260
We're going to find the any WebObject
tags that might be inside that HTML.

00:21:03.360 --> 00:21:05.150
We're going to find the associated value.

00:21:05.150 --> 00:21:08.990
Whenever there's a W0 string you
have to send a message to decide what

00:21:09.110 --> 00:21:10.980
to put at that place in the HTML.

00:21:11.030 --> 00:21:13.520
Let's generate a string, put it in there.

00:21:13.540 --> 00:21:17.240
So we look up that message and then
some messages might be sent to objects

00:21:17.370 --> 00:21:20.400
that are coming from the database
in this hypothetical scenario.

00:21:20.450 --> 00:21:23.950
And a WebObjects developer doesn't
really worry about SQL too much.

00:21:23.960 --> 00:21:27.630
You've built one of those object
model files and it has all the

00:21:27.640 --> 00:21:29.300
database information inside it.

00:21:29.360 --> 00:21:32.690
And from that point on you just
start thinking about objects and

00:21:32.690 --> 00:21:35.180
relationships and their properties.

00:21:35.180 --> 00:21:35.180
So

00:21:35.390 --> 00:21:37.690
In this case,
maybe the object model says that,

00:21:37.710 --> 00:21:40.270
you know, customers are coming from this
Oracle table and products are

00:21:40.270 --> 00:21:41.720
coming from this Oracle table.

00:21:41.720 --> 00:21:44.940
I understand Oracle is
very popular in California.

00:21:44.940 --> 00:21:46.340
Like, everybody has a copy.

00:21:46.340 --> 00:21:48.180
Is that what I read in
that paper the other day?

00:21:48.200 --> 00:21:51.600
That the state bought a copy
of Oracle for everybody?

00:21:51.600 --> 00:21:55.100
That's pretty... I'd have to
suggest that when I get back home.

00:21:55.100 --> 00:21:55.550
That'd be great.

00:21:55.560 --> 00:21:56.510
I'd love to have my own copy of Oracle.

00:21:56.560 --> 00:22:01.640
And SQL, to fetch, in this case,
a customer object,

00:22:01.700 --> 00:22:03.560
is going to be generated automatically.

00:22:03.700 --> 00:22:06.660
By studying this model,
the application knows that you

00:22:06.730 --> 00:22:09.420
want to create a customer object,
but the model says,

00:22:09.420 --> 00:22:12.460
customers get their data from this
table and these columns over here.

00:22:12.460 --> 00:22:15.630
So automatically,
EOF puts together an SQL statement,

00:22:15.770 --> 00:22:18.680
sends it to the database,
fetches some rows.

00:22:18.680 --> 00:22:20.240
The rows come riding back like this.

00:22:20.280 --> 00:22:24.250
And an object is created, in this case,
a customer object with my name in it.

00:22:24.370 --> 00:22:26.320
And then we send the message
that we wanted to send.

00:22:26.320 --> 00:22:28.630
Well, give me the first name
of that customer object,

00:22:28.630 --> 00:22:30.570
and that comes back with a string, Steve.

00:22:32.150 --> 00:22:34.800
And we find that tag that said,
here's where the WebObject was,

00:22:34.800 --> 00:22:37.720
and we replace that with this string,
Steve.

00:22:37.950 --> 00:22:40.280
And then the plain ordinary
HTML goes back out to the,

00:22:40.280 --> 00:22:42.970
the VIMAC at the, at the back end.

00:22:43.420 --> 00:22:47.060
This in a nutshell is the
request-response loop.

00:22:47.140 --> 00:22:49.310
A request comes in.

00:22:49.360 --> 00:22:51.800
Various objects are given
the opportunity to handle it.

00:22:51.800 --> 00:22:54.940
Do you care about the data in this form?

00:22:55.340 --> 00:22:58.060
Various objects are asked,
are you the action responsible for

00:22:58.130 --> 00:23:00.060
the submit button that was clicked?

00:23:00.150 --> 00:23:01.770
And then another
component will be loaded,

00:23:01.780 --> 00:23:08.370
and it's given the opportunity
to append HTML to the response.

00:23:08.610 --> 00:23:10.000
You can subvert all this if you want.

00:23:10.000 --> 00:23:13.370
There's plenty of opportunity to
insert your own code if you want.

00:23:13.460 --> 00:23:15.140
You usually don't have to,
but if you want,

00:23:15.260 --> 00:23:18.200
into this process and do all kinds
of crazy things like extracting

00:23:18.200 --> 00:23:22.570
things from header fields or
logging stuff somewhere and so on.

00:23:22.920 --> 00:23:26.440
But notice that the SQL and the
HTML are kept pretty far apart.

00:23:26.440 --> 00:23:27.990
They're in entirely different files.

00:23:28.000 --> 00:23:30.590
Your HTML is in one of
these WebObject components,

00:23:30.640 --> 00:23:34.140
and the SQL doesn't even exist
really until the application runs.

00:23:34.140 --> 00:23:36.060
At runtime,
the application figures out the

00:23:36.060 --> 00:23:37.550
SQL and sends it off to the database.

00:23:37.550 --> 00:23:41.930
So you do not need to write
any of this unless you want to.

00:23:43.540 --> 00:23:44.130
Thank you.

00:23:44.130 --> 00:23:45.380
I guess they want to.

00:23:45.390 --> 00:23:47.180
So let me talk about the tools.

00:23:47.180 --> 00:23:49.180
Bob had like six tools on his slide.

00:23:49.300 --> 00:23:52.670
I'm only going to show you three
because I'm going to do a fairly

00:23:52.670 --> 00:23:54.620
simple demo in a moment here.

00:23:54.640 --> 00:23:58.800
But WebObjects Builder is the prime
tool for creating these components,

00:23:58.800 --> 00:24:02.250
for managing the HTML and the
associated declaration file and

00:24:02.340 --> 00:24:05.940
maybe WebObjects Builder doesn't
really manage the Java file,

00:24:05.940 --> 00:24:08.850
but it can manage
associations between them.

00:24:09.000 --> 00:24:11.250
You could edit all this stuff
by hand if you wanted to,

00:24:11.250 --> 00:24:13.500
but one interesting
thing is that now in 5.1,

00:24:13.500 --> 00:24:16.900
we have spent, you know,
I started at Next a long time ago,

00:24:16.900 --> 00:24:20.360
and we spent a lot of time telling
people what a good idea it was

00:24:20.360 --> 00:24:25.030
to keep the HTML and the business
logic and the SQL and everything

00:24:25.030 --> 00:24:26.680
as far apart as possible.

00:24:26.680 --> 00:24:31.530
We spent a lot of time trying to hammer
that point home that separation was good,

00:24:31.530 --> 00:24:35.010
but now in 5.1, if you want,
you can just put it all

00:24:35.230 --> 00:24:36.880
back in one file with JSP.

00:24:38.500 --> 00:24:38.940
Be my guest.

00:24:39.070 --> 00:24:40.560
You can develop this way.

00:24:40.560 --> 00:24:43.100
And in fact, if there are programmers in
your organization who are more

00:24:43.100 --> 00:24:48.900
familiar with the JSP model,
this might seem more accessible to them.

00:24:48.900 --> 00:24:51.100
But, you know,
typically in the old style of WebObjects

00:24:51.100 --> 00:24:52.490
is to keep everything separate.

00:24:52.490 --> 00:24:54.800
And of course,
I would encourage you to do it that way.

00:24:54.800 --> 00:24:56.900
It's really a much
cleaner result than this.

00:24:56.990 --> 00:25:01.150
But if you have a need to go JSP and you
want to squeeze everything into one file,

00:25:01.150 --> 00:25:02.910
that's now an option for you.

00:25:04.270 --> 00:25:07.600
So you're going to create
a lot of these things.

00:25:07.680 --> 00:25:09.790
Usually at least one for
every different kind of page,

00:25:09.790 --> 00:25:13.280
but often sub-components, the title bar,
the menu down the side,

00:25:13.280 --> 00:25:15.500
some kind of a footer.

00:25:15.620 --> 00:25:18.550
And we provide you with some
reusable components for most of the

00:25:18.550 --> 00:25:20.760
HTML UI things that you might want.

00:25:20.760 --> 00:25:22.060
And you can make your own.

00:25:22.160 --> 00:25:23.160
You can create your own components.

00:25:23.160 --> 00:25:25.970
And if I have time,
I'm going to try to actually build--well,

00:25:25.970 --> 00:25:26.610
you'll see.

00:25:26.610 --> 00:25:28.280
If we have time, you'll see.

00:25:28.480 --> 00:25:32.550
But you typically assemble a lot of
these things into one application.

00:25:32.550 --> 00:25:32.550
And

00:25:33.300 --> 00:25:35.100
They're all files.

00:25:35.190 --> 00:25:37.410
You can use whatever text editor
you like for these things.

00:25:37.510 --> 00:25:39.840
I have used stickies in the past
as my development environment.

00:25:39.840 --> 00:25:41.820
That is possible.

00:25:41.910 --> 00:25:44.700
Cat, if you're a real, you know,
studly Unix programmer.

00:25:44.700 --> 00:25:45.460
I suppose DD.

00:25:45.460 --> 00:25:49.900
I suppose the real Unix programmers
would DD it directly onto a disk

00:25:50.170 --> 00:25:53.290
sector or something like that.

00:25:53.350 --> 00:25:55.170
I'd rather work at a
slightly higher level.

00:25:55.240 --> 00:25:57.500
I'd rather use some kind
of a WYSIWYG editor.

00:25:57.500 --> 00:26:00.240
You can use Dreamweaver or Go Live or
anything that understands HTML.

00:26:00.240 --> 00:26:04.560
They usually don't understand
this associated WAD file.

00:26:04.970 --> 00:26:06.730
You can also work with
WebObjects Builder,

00:26:06.740 --> 00:26:10.220
which is a graphical way of
managing the HTML and the

00:26:10.310 --> 00:26:12.900
declaration file simultaneously.

00:26:13.030 --> 00:26:17.290
So here in an example is a screenshot
of me assembling some sort of a page,

00:26:17.290 --> 00:26:20.720
and I just added a hyperlink
that says click here to order.

00:26:20.900 --> 00:26:24.900
And I want to arrange that when a user
sees that hyperlink and clicks on it,

00:26:24.900 --> 00:26:28.900
it sends this message, place order,
back to my application.

00:26:28.900 --> 00:26:30.900
And it's really in WebObjects
Builder a matter of drawing a line.

00:26:30.900 --> 00:26:34.900
You draw a line from the
bottom half of the screen,

00:26:34.900 --> 00:26:36.270
which is where sort of
your object browser,

00:26:36.290 --> 00:26:37.880
your view of objects in the application.

00:26:37.900 --> 00:26:41.760
And you associate it, or you bind it,
to something in the user

00:26:41.860 --> 00:26:43.420
interface at the top.

00:26:43.590 --> 00:26:46.260
and as you do that you you you
can choose hyperlinks here.

00:26:46.260 --> 00:26:47.980
I'm seeing a menu of all the
different properties I can

00:26:47.980 --> 00:26:49.400
associate with a hyperlink.

00:26:49.400 --> 00:26:53.030
Do I want them to to trigger a specific
java action or do I want them to just

00:26:53.070 --> 00:26:56.840
go to a specific page name or I guess
there's other fragment identifier.

00:26:56.840 --> 00:26:58.170
I guess I've never used that in my life.

00:26:58.260 --> 00:27:02.910
I suppose that's that's handy but there's
a variety of properties for any one

00:27:02.910 --> 00:27:04.600
of these objects that you can bind to.

00:27:04.660 --> 00:27:06.590
And you pick the one you want and
up at the top in the inspector

00:27:06.680 --> 00:27:11.000
you can see it now says the
hyperlinks action is place order.

00:27:11.050 --> 00:27:13.230
When anyone sees this page right
now there may be three thousand

00:27:13.230 --> 00:27:15.010
of you all hitting my application.

00:27:15.030 --> 00:27:16.820
You're all going to click on that
hyperlink and it's going to send the

00:27:16.820 --> 00:27:21.780
message place order back to the class
associated with this application.

00:27:21.820 --> 00:27:24.770
I've apparently offended
Tony in some way.

00:27:30.780 --> 00:27:30.780
Maybe she's looking for my shirt.

00:27:30.780 --> 00:27:30.780
That would be nice.

00:27:31.580 --> 00:27:34.160
You can also use WebObjects
Builder in what we call raw mode,

00:27:34.160 --> 00:27:37.270
which is just a view that
lets you edit the HTML in the

00:27:37.270 --> 00:27:38.780
WAD file directly down here.

00:27:38.780 --> 00:27:42.040
That's sometimes necessary, but,
you know, you're on your own if you leave

00:27:42.040 --> 00:27:43.260
out a semicolon in the WAD file.

00:27:43.260 --> 00:27:45.740
Don't come blaming me that
I said it was all right.

00:27:45.760 --> 00:27:47.700
But it's nice to be
able to do it both ways.

00:27:47.700 --> 00:27:51.910
We're giving you a
choice with WebObjects,

00:27:51.910 --> 00:27:51.910
choice of a lot of different things here.

00:27:52.300 --> 00:27:56.710
And you can use palettes to
organize frequently accessed

00:27:56.910 --> 00:27:58.700
components in a nice reusable way.

00:27:58.700 --> 00:28:00.360
I'm a bit of a palette junkie.

00:28:00.410 --> 00:28:02.540
I don't know if any of you
WoeBuilder guys have -- like,

00:28:02.540 --> 00:28:05.640
I have like 14 WebObject
palettes loaded right now.

00:28:05.750 --> 00:28:09.270
And any time you get a good idea and you
think you might want to use it again,

00:28:09.370 --> 00:28:12.160
well, take the extra 5 percent of the
time and make it an object on

00:28:12.160 --> 00:28:14.620
a palette that you can drag and
drop or give to someone else.

00:28:14.620 --> 00:28:16.960
It will pay off in the long run.

00:28:17.650 --> 00:28:19.880
EO Modeler you can hear all about
in plenty of other sessions,

00:28:19.880 --> 00:28:23.250
but it's the tool that
edits these .eomodeld files.

00:28:23.320 --> 00:28:24.690
They're really folders.

00:28:24.710 --> 00:28:25.640
They're folders of files.

00:28:25.680 --> 00:28:29.050
And EO Modeler is a tool
that lets you state what kind

00:28:29.150 --> 00:28:31.450
of connection information,
what database are you going to hit,

00:28:31.730 --> 00:28:35.360
and what tables in the database
do you want to make objects for.

00:28:35.360 --> 00:28:37.460
In this case,
we want to make vehicles out of

00:28:37.460 --> 00:28:39.160
the MDL table in this database.

00:28:39.160 --> 00:28:42.660
Information about entities
and their specific properties,

00:28:42.660 --> 00:28:44.640
and information about relationships too.

00:28:44.640 --> 00:28:47.730
A vehicle has a base price,
which corresponds to a certain

00:28:47.730 --> 00:28:49.360
column in the database.

00:28:49.380 --> 00:28:52.920
But a vehicle also has a
relationship to an automaker,

00:28:52.920 --> 00:28:55.900
which corresponds to an
object from another table.

00:28:55.900 --> 00:28:59.090
The Enterprise Objects Framework
manages these relationships and

00:28:59.090 --> 00:29:02.410
does the joins for you automatically
to fetch the related objects.

00:29:02.520 --> 00:29:05.560
So your model specifies a
lot of information about how

00:29:05.560 --> 00:29:07.510
to do all the database work.

00:29:09.280 --> 00:29:11.540
And it can manage some fairly
complicated relationships here,

00:29:11.540 --> 00:29:11.700
too.

00:29:11.700 --> 00:29:16.850
And you're going to see
the usage of this A.B.C.

00:29:17.320 --> 00:29:18.680
business quite a bit
in WebObjects Builder.

00:29:18.720 --> 00:29:23.480
That's a sequence of messages,
a sequence of tokens that describe

00:29:23.480 --> 00:29:25.200
a series of messages to be sent.

00:29:25.200 --> 00:29:27.840
So you see the first one,
vehicle.maker.name.

00:29:27.840 --> 00:29:30.050
Send the message maker to the
current vehicle and then send

00:29:30.050 --> 00:29:32.590
the message name to that thing,
and that would give you Chevrolet,

00:29:32.680 --> 00:29:34.080
let's say, something like that.

00:29:35.120 --> 00:29:36.710
So if I mention a car,
do I get like a free car?

00:29:36.840 --> 00:29:40.040
Are there like endorsement opportunities
in one of these sessions if I mention it?

00:29:40.130 --> 00:29:44.770
So maybe you have a Corvette vehicle
and you send it to the message maker

00:29:44.830 --> 00:29:45.970
and it returns the Chevrolet object.

00:29:45.980 --> 00:29:47.130
So this A.B.

00:29:47.130 --> 00:29:50.110
business is what we
call key value coding,

00:29:50.110 --> 00:29:54.320
which is the fantastic, no,
I don't have time right now.

00:29:54.600 --> 00:29:58.020
Key value coding is this terrific
piece of technology that's

00:29:58.030 --> 00:30:01.700
pervasive in WebObjects that
lets you specify in a very simple

00:30:01.700 --> 00:30:04.140
manner complex series of messages.

00:30:04.140 --> 00:30:05.100
And you'll see these at some point.

00:30:05.120 --> 00:30:06.450
that show up every once in a while.

00:30:06.500 --> 00:30:09.330
That's an extensible way that
you can tell it to do something

00:30:09.330 --> 00:30:11.050
tricky with a list of objects.

00:30:11.100 --> 00:30:14.050
You know, compute the average base
price of all these vehicles.

00:30:14.110 --> 00:30:16.360
Find one with the max, count them,
and so on.

00:30:16.360 --> 00:30:18.490
So you'll see me do a little
bit of that when I get the

00:30:18.490 --> 00:30:19.960
WebObjects builder in a moment.

00:30:20.520 --> 00:30:22.390
Project builder--you can hear
all about project builder in

00:30:22.390 --> 00:30:23.870
hundreds of other sessions.

00:30:23.910 --> 00:30:27.700
Project builder, project builder,
pro-- project builder?

00:30:28.080 --> 00:30:29.900
Project builder?

00:30:32.230 --> 00:30:33.140
I'm going to say Project Builder.

00:30:33.140 --> 00:30:33.980
I don't care what you think.

00:30:34.200 --> 00:30:36.690
So you can hear all about
Project Builder somewhere else,

00:30:36.790 --> 00:30:39.700
but let me actually try and
build something here to show you

00:30:39.700 --> 00:30:41.360
how these tools fit together.

00:30:41.360 --> 00:30:43.960
We could have demo one up on the screen,
please.

00:30:43.960 --> 00:30:47.940
Enjoy a refreshing beverage.

00:30:49.630 --> 00:30:52.600
How many people here are going to
like all the WebObjects sessions?

00:30:52.640 --> 00:30:53.100
Yeah?

00:30:53.190 --> 00:30:53.260
Good.

00:30:53.260 --> 00:30:56.180
You'll see more elaborate versions of
virtually everything I'm doing here.

00:30:56.180 --> 00:30:59.440
Bob, Bob Fraser is going to all
the WebObjects sessions,

00:30:59.440 --> 00:31:00.500
the product marketing manager.

00:31:05.050 --> 00:31:06.000
We do have a marketing plan.

00:31:06.000 --> 00:31:10.110
We're sending Bob to all
the WebObjects sessions.

00:31:10.730 --> 00:31:11.610
I think we have to edit that out.

00:31:11.690 --> 00:31:12.510
Edit that out of the DVD.

00:31:12.520 --> 00:31:14.700
Okay, we're going to edit that
part out of the DVD.

00:31:17.220 --> 00:31:20.130
Last year,
Toni told me that she had to edit

00:31:20.180 --> 00:31:22.530
some parts of my presentation.

00:31:24.320 --> 00:31:27.120
Well, I remember last year you said
that I said bite me by mistake in

00:31:27.120 --> 00:31:28.620
the middle of the presentation.

00:31:28.620 --> 00:31:36.260
And you had to cut that part out.

00:31:38.790 --> 00:31:41.040
So if I get in trouble,
I know what to say, like if something

00:31:41.140 --> 00:31:42.190
derails in the demo here.

00:31:42.200 --> 00:31:45.540
All right, the tools I'm going to use
right now are Project Builder,

00:31:45.540 --> 00:31:47.200
WebObjects Builder, and EOModeler.

00:31:47.220 --> 00:31:50.950
I don't want that, I don't want this,
I used to use this all the time,

00:31:50.950 --> 00:31:51.800
but not now.

00:31:55.580 --> 00:31:59.000
The first step is usually to
build one of these object models.

00:31:59.040 --> 00:32:01.220
I have a database running on here,
and I'm wearing this shirt for a reason,

00:32:01.260 --> 00:32:06.980
because I have a database of...
There was a recent major sporting event

00:32:06.980 --> 00:32:09.800
in the United States in Salt Lake City,
right?

00:32:09.880 --> 00:32:12.690
But I don't want to get
in copyright trouble,

00:32:12.740 --> 00:32:16.930
so let's pretend it was in
Pepper Lake City or something like that,

00:32:16.940 --> 00:32:20.390
and it was some kind of
winter sporting festival.

00:32:20.390 --> 00:32:20.390
And...

00:32:21.250 --> 00:32:25.470
I've got a database here, an open base,
of tables of athletes and

00:32:25.470 --> 00:32:28.200
teams and countries and medals.

00:32:28.200 --> 00:32:31.540
I was kind of fascinated by this
because every time I try to think

00:32:31.540 --> 00:32:36.880
about what demo to do for WWDC,
it becomes apparent to me that

00:32:36.880 --> 00:32:39.200
there's always something going on
in the United States that involves

00:32:39.300 --> 00:32:40.640
some kind of scoring controversy.

00:32:45.270 --> 00:32:48.040
Last year I did this demo
based on the 2000 election.

00:32:48.040 --> 00:32:49.650
You know,
there was some kind of confusion

00:32:50.300 --> 00:32:50.950
about who the winner was.

00:32:51.050 --> 00:32:53.480
This year you might have read
that there was some dispute

00:32:53.480 --> 00:32:55.000
about the pairs figure skating.

00:32:55.040 --> 00:32:57.280
So I put this database
together and I want to build

00:32:57.280 --> 00:32:58.600
a model that talks to that.

00:32:58.600 --> 00:33:00.130
That's sort of the first step.

00:33:00.280 --> 00:33:01.240
So here we are in EOModeler.

00:33:03.500 --> 00:33:04.400
and you want to build a new model.

00:33:04.400 --> 00:33:10.500
Now new in WebObjects 5.1 we have
increased by 50% your choice of adapters.

00:33:13.870 --> 00:33:17.770
I hope to live long enough to
see this device actually scroll.

00:33:17.790 --> 00:33:19.470
This is a scrolling thing here.

00:33:22.120 --> 00:33:40.360
: We're getting there.

00:33:40.360 --> 00:33:40.360
So I want to make a
JDBC-based object model.

00:33:40.360 --> 00:33:40.360
I happen to have -- I've
got OpenBase on here,

00:33:40.360 --> 00:33:40.360
but, you know, it could be any decent
relational database.

00:33:40.360 --> 00:33:40.360
And you get this terrific panel
here where you have to type

00:33:40.360 --> 00:33:40.360
some string of cryptic gibberish
that tells it how to connect,

00:33:40.360 --> 00:33:40.360
and it's different for
every -- I don't know,

00:33:40.600 --> 00:33:44.240
I'm going to hit the Wolympics
database on this particular machine.

00:33:44.240 --> 00:33:48.770
You specify a URL in JDBC that says,
how do you want to connect?

00:33:48.840 --> 00:33:51.520
What machine is it on
and what database is it?

00:33:51.540 --> 00:33:53.820
And the syntax of this is all over
the map for different databases.

00:33:53.920 --> 00:33:57.620
I did memorize how to do it for OpenBase,
so that's what we're going to do.

00:33:58.630 --> 00:34:00.870
Now, the model wizard is going to
connect to the database and ask

00:34:00.980 --> 00:34:02.140
you a whole bunch of questions.

00:34:02.140 --> 00:34:03.060
Do you want primary keys?

00:34:03.060 --> 00:34:03.580
Well, yeah.

00:34:03.580 --> 00:34:05.190
Do you care about relationships?

00:34:05.240 --> 00:34:05.600
I don't know.

00:34:05.600 --> 00:34:06.700
Storage procedures?

00:34:06.700 --> 00:34:07.000
No.

00:34:07.070 --> 00:34:08.010
We'll do this later.

00:34:08.190 --> 00:34:11.100
And it asks you,
here are all the tables in the database.

00:34:11.210 --> 00:34:14.140
There's an athlete table and an
event table and a flag table and

00:34:14.140 --> 00:34:15.560
metal and image and everything.

00:34:15.620 --> 00:34:16.870
Which ones do you want?

00:34:16.970 --> 00:34:19.160
Well, use all of them.

00:34:19.220 --> 00:34:21.040
And now here come all these -- you know,
I never really understand

00:34:21.040 --> 00:34:21.760
what this is all about.

00:34:21.760 --> 00:34:24.190
This is just asking me some --

00:34:24.200 --> 00:34:35.590
Thank you for your question
about relationships.

00:34:35.590 --> 00:34:35.590
I have to read one of
those WebObjects books,

00:34:35.590 --> 00:34:35.590
apparently.

00:34:35.590 --> 00:34:35.590
I suppose it would tell me.

00:34:35.590 --> 00:34:35.590
I should just blow right past that.

00:34:35.590 --> 00:34:35.590
Is that important?

00:34:36.720 --> 00:34:37.360
I always hit next.

00:34:37.440 --> 00:34:37.990
I always hit next.

00:34:38.100 --> 00:34:39.890
And that's something to do
with referential integrity.

00:34:39.900 --> 00:34:41.090
You know, you delete Team Canada.

00:34:41.100 --> 00:34:43.100
Do you want to delete all the
athletes from Team Canada as well?

00:34:43.100 --> 00:34:43.640
Well, no.

00:34:43.640 --> 00:34:48.150
So here is a starting object model.

00:34:48.250 --> 00:34:50.320
This is a file that I'm editing here.

00:34:50.320 --> 00:34:52.420
And you can see it's got all this
information in here that athlete

00:34:52.420 --> 00:34:54.200
objects come from the athlete table.

00:34:54.200 --> 00:34:56.510
And flag objects come
from the flag table.

00:34:56.520 --> 00:34:57.660
And medals come from here.

00:34:57.660 --> 00:35:00.230
And we have all these different
kinds of objects we can make.

00:35:00.290 --> 00:35:04.740
And I could get in here and, you know,
change the names around.

00:35:04.820 --> 00:35:07.270
Maybe we want to have song out of
these instead of anthem out of these.

00:35:07.390 --> 00:35:10.680
I was really kind of, eh, maybe not.

00:35:10.680 --> 00:35:12.670
You know,
I was really hoping that today would

00:35:12.670 --> 00:35:15.110
be the national day of somewhere
so we could all stand and sing

00:35:15.110 --> 00:35:16.460
the national anthem of something.

00:35:16.460 --> 00:35:17.380
But it's not.

00:35:17.380 --> 00:35:18.000
I looked on the Internet.

00:35:18.000 --> 00:35:19.620
Last year I did my demo on Victoria Day.

00:35:19.640 --> 00:35:21.220
We all sang God Save the Queen.

00:35:21.220 --> 00:35:25.830
Yesterday was Independence Day or
Liberation Day in Norway.

00:35:25.840 --> 00:35:27.960
That was the closest thing
I could find to today.

00:35:27.960 --> 00:35:29.540
Are there any Norwegians here?

00:35:29.540 --> 00:35:31.360
Anyone want to bring a flag
up on the stage and we could

00:35:31.360 --> 00:35:32.300
all sing the Norwegian anthem?

00:35:32.380 --> 00:35:33.640
No?

00:35:33.640 --> 00:35:34.320
Oh, shoot.

00:35:34.820 --> 00:35:35.190
Sorry.

00:35:35.220 --> 00:35:38.870
But here is really a file that's
describing what kind of objects

00:35:38.910 --> 00:35:39.920
you want to make out of where.

00:35:39.950 --> 00:35:43.000
And you can look into this and see
it on what we call the diagram view.

00:35:43.000 --> 00:35:44.040
You can see that it's picked up.

00:35:44.170 --> 00:35:45.120
Whoa, complicated.

00:35:45.120 --> 00:35:48.190
You can see that it's picked up
all these relationships that are

00:35:48.480 --> 00:35:50.060
specified in the database as well.

00:35:50.060 --> 00:35:51.810
So a team has a list of athletes.

00:35:51.910 --> 00:35:53.080
And, you know, there's one-to-one joins.

00:35:53.080 --> 00:35:54.060
There's one-to-many joins.

00:35:54.060 --> 00:35:58.120
And it's all constructed according
to the various relationship

00:35:58.120 --> 00:36:00.670
information that's in the database.

00:36:00.680 --> 00:36:02.280
Or I could add additional
relationships here.

00:36:02.280 --> 00:36:03.320
And I could delete things.

00:36:03.320 --> 00:36:04.480
And I could manipulate properties.

00:36:04.820 --> 00:36:06.060
Get rid of the ones I don't want.

00:36:06.220 --> 00:36:10.040
But rather than mess around
with that for a while,

00:36:10.040 --> 00:36:12.380
I did a little bit of this last night.

00:36:12.380 --> 00:36:13.590
I got my iPod here.

00:36:13.600 --> 00:36:16.570
I understand that the marketing
guy in England markets web

00:36:16.750 --> 00:36:18.170
objects and also the iPod.

00:36:18.190 --> 00:36:18.980
Well, he would like this.

00:36:19.020 --> 00:36:21.510
Here, right off of my iPod,
I've got the object

00:36:21.510 --> 00:36:22.960
model that I want to use.

00:36:27.620 --> 00:36:31.390
I understand you can actually
put music on an iPod.

00:36:31.400 --> 00:36:32.080
Is that true?

00:36:32.080 --> 00:36:35.270
I haven't tried that.

00:36:35.470 --> 00:36:35.940
Actually, what am I doing?

00:36:35.940 --> 00:36:36.340
I'm going to put that there.

00:36:36.340 --> 00:36:37.980
All right, here's my object model
that I want to use.

00:36:38.080 --> 00:36:39.580
Close, close, close.

00:36:39.580 --> 00:36:40.190
I'm getting rattled.

00:36:40.200 --> 00:36:41.660
I might have to say the word here.

00:36:41.660 --> 00:36:42.140
Just a minute.

00:36:42.140 --> 00:36:42.820
No, I don't want to say it.

00:36:42.820 --> 00:36:43.160
All right, anyway.

00:36:43.260 --> 00:36:45.180
This one's just slightly tidied up.

00:36:45.250 --> 00:36:48.740
I added a few relationships,
and I flattened a few things, and so on.

00:36:48.750 --> 00:36:51.720
And I'm going to use this to build
out a simple WebObjects application.

00:36:51.800 --> 00:36:55.340
So let's just make this a little
smaller and put it off to the side.

00:36:55.340 --> 00:36:58.920
And start up your friend and mine,
Project Builder.

00:36:58.960 --> 00:37:02.950
And Project Builder lets you build all
sorts of different exciting things,

00:37:03.000 --> 00:37:05.620
much as I would love to build a
Carbon bundle right at the moment,

00:37:05.620 --> 00:37:06.520
or an IOCit driver.

00:37:06.520 --> 00:37:09.020
It might be fun to try
that in a WebObjects demo.

00:37:09.020 --> 00:37:12.170
I think I'll build a
WebObjects application.

00:37:12.200 --> 00:37:15.400
And at this point,
you get to give your application a name.

00:37:15.400 --> 00:37:16.890
And I've got this word stuck in my head.

00:37:16.910 --> 00:37:18.560
I've been hearing this word all week,
Jagwire.

00:37:18.560 --> 00:37:23.190
I'm going to call my
application... Um... Uh...

00:37:25.700 --> 00:37:27.940
It rhymes with fire war, I think.

00:37:27.940 --> 00:37:29.760
I'm not sure.

00:37:30.240 --> 00:37:31.510
But that's going to be the
name of my application.

00:37:31.590 --> 00:37:32.700
That will be part of the URL.

00:37:32.700 --> 00:37:33.400
And here's this panel.

00:37:33.400 --> 00:37:36.440
Do you want to deploy this servlets
and do you want to do this and that?

00:37:36.500 --> 00:37:38.060
And you know,
I want to go to one of the sessions

00:37:38.060 --> 00:37:40.890
and learn what these check boxes are,
so I'm going to turn them off for now.

00:37:40.980 --> 00:37:41.700
And this is a good one.

00:37:41.700 --> 00:37:42.980
Something to do with web services.

00:37:42.980 --> 00:37:45.100
Bob mentioned web services.

00:37:45.100 --> 00:37:46.670
This panel is new to me.

00:37:46.880 --> 00:37:51.340
I don't know what this is at all,
but it looks great, doesn't it?

00:37:51.340 --> 00:37:51.490
Add the Java Access Framework.

00:37:51.490 --> 00:37:51.490
Do I want to do that, Bob?

00:37:52.220 --> 00:37:52.420
No?

00:37:52.420 --> 00:37:52.720
Okay.

00:37:52.720 --> 00:37:56.940
Please refer to the WebObjects
web services documentation

00:37:57.020 --> 00:37:57.570
for more information.

00:37:57.660 --> 00:37:58.030
All right, I will.

00:37:58.050 --> 00:37:58.640
I'm sure that's great.

00:37:58.640 --> 00:38:01.750
And here I get to add some frameworks.

00:38:01.760 --> 00:38:03.480
Just in the interest of
saving a bit of time,

00:38:03.480 --> 00:38:04.770
I have pre-written a few objects.

00:38:04.830 --> 00:38:07.000
And in fact,
they're just objects that I like so much

00:38:07.090 --> 00:38:08.550
that I carry them around on my iPod.

00:38:08.550 --> 00:38:12.320
So I'm going to add a few
frameworks off of my iPod here.

00:38:12.320 --> 00:38:13.680
Here's my iPod.

00:38:13.680 --> 00:38:14.870
Frameworks.

00:38:14.870 --> 00:38:16.770
Yeah, these are all good.

00:38:16.770 --> 00:38:21.160
I'll talk about what these are later,
but they're compiled Java things that

00:38:21.160 --> 00:38:23.580
I'm going to use later in the demo.

00:38:23.960 --> 00:38:26.830
And we're done, and so here is a blank
WebObjects application.

00:38:26.900 --> 00:38:28.700
So far it doesn't have any
connection to a database.

00:38:28.700 --> 00:38:33.330
All it really has is one web
component called main that's

00:38:33.470 --> 00:38:37.040
got an HTML file in it,
which is really not very exciting.

00:38:37.040 --> 00:38:40.200
And it's got an even less exciting
WAD file in it because there are no

00:38:40.250 --> 00:38:42.140
objects defined in the first file.

00:38:43.250 --> 00:38:46.370
I could edit this all here if I want,
or I could double click on

00:38:46.370 --> 00:38:50.300
this to actually edit this
component in WebObjects Builder.

00:39:20.100 --> 00:39:20.100
So here's WoeBuilder.

00:39:20.100 --> 00:39:20.100
Here's the area up here where you can
type the HTML for your fabulous page,

00:39:20.100 --> 00:39:20.100
the games of 2002.

00:39:20.100 --> 00:39:20.100
And I really love these horizontal rules
and this is enough of an HTML editor.

00:39:20.100 --> 00:39:20.100
You can make things bigger and you can
put them in color and really you should

00:39:20.100 --> 00:39:20.100
probably go and get Dreamweaver or GoLive
or something like that that's a better

00:39:20.100 --> 00:39:20.100
HTML editor and do that part if you want.

00:39:20.100 --> 00:39:20.100
But you're completely free to use
WebObjects Builder if you like as well.

00:39:20.100 --> 00:39:20.100
I think WoeBuilder is
fine for getting started.

00:39:20.100 --> 00:39:20.100
So here we go.

00:39:20.100 --> 00:39:21.060
The games of 2002.

00:39:21.120 --> 00:39:25.880
I'm going to put in a form because I want
to search for who are you looking for.

00:39:26.090 --> 00:39:29.300
We're going to look up athletes.

00:39:29.300 --> 00:39:29.300
Okay.

00:39:29.500 --> 00:39:33.310
and I want to be able to look them up by
their first name and have a text field.

00:39:33.310 --> 00:39:35.990
Maybe their last name.

00:39:36.230 --> 00:39:38.840
and have another text
field and a submit button.

00:39:38.840 --> 00:39:42.790
And I'm just designing my UI here.

00:39:44.270 --> 00:39:46.260
We really want to find athlete objects.

00:39:46.440 --> 00:39:48.460
The idea is going to
be when I hit submit,

00:39:48.580 --> 00:39:52.430
I want to cause something to fetch a list
of athlete objects and then display them.

00:39:52.430 --> 00:39:55.740
And I want it to fetch the
athlete objects based on what

00:39:55.740 --> 00:39:57.760
I typed in those two text fields.

00:39:58.140 --> 00:40:02.370
Well, this model file knows how
to create athlete objects.

00:40:02.570 --> 00:40:04.760
It's got all the information in
it about databases and tables.

00:40:04.770 --> 00:40:10.150
And so I can drag this athlete thing
out of EOModeler and drop it over here

00:40:10.150 --> 00:40:14.490
and add what we call a display group.

00:40:14.550 --> 00:40:16.080
Pardon me, what was that?

00:40:16.120 --> 00:40:17.190
Okay.

00:40:21.040 --> 00:40:24.000
I think it's offended that
I'm calling this Jagwire.

00:40:24.010 --> 00:40:25.000
The source file is unparsable.

00:40:25.000 --> 00:40:26.760
What are you talking about?

00:40:26.760 --> 00:40:26.990
Just hang on.

00:40:27.120 --> 00:40:31.750
Bite me, bite me, bite me, bite me,
bite me.

00:40:37.450 --> 00:40:38.140
could not open source file.

00:40:38.140 --> 00:40:39.070
Okay, are you smart guys?

00:40:39.130 --> 00:40:47.000
How come I can't open my source file?

00:40:47.080 --> 00:40:52.710
I'm working off the beta here of ERTE,
so we'll just, give me one sec here.

00:41:01.160 --> 00:41:01.890
There we go.

00:41:02.160 --> 00:41:02.440
Ah, phew.

00:41:02.440 --> 00:41:05.290
For some reason it was not
connected to the project builder,

00:41:05.800 --> 00:41:06.900
but now we're fine.

00:41:07.030 --> 00:41:10.500
Stop biting me.

00:41:10.500 --> 00:41:10.500
So here we go.

00:41:10.870 --> 00:41:12.000
We want to add this.

00:41:12.030 --> 00:41:13.180
Yes?

00:41:13.280 --> 00:41:14.120
There.

00:41:14.120 --> 00:41:14.860
Oh, man, thank you.

00:41:18.280 --> 00:41:21.720
I've added now to this page
something called a display group,

00:41:21.840 --> 00:41:24.130
which is an object that knows how
to go and fetch certain kinds of

00:41:24.190 --> 00:41:25.450
other objects from the database.

00:41:27.420 --> 00:41:30.270
You know, it's going to fetch them out
of this object model here,

00:41:30.400 --> 00:41:31.670
which I don't really need now.

00:41:31.670 --> 00:41:33.130
And you can hook a few things up.

00:41:33.130 --> 00:41:36.020
You can say that the submit button,
here's all the messages you're

00:41:36.070 --> 00:41:38.560
allowed to send to a display group,
and up above it are the

00:41:38.580 --> 00:41:40.090
various properties you can set.

00:41:40.090 --> 00:41:42.590
So I want to send the message
qualified data source whenever

00:41:42.650 --> 00:41:44.460
someone clicks on that submit button.

00:41:44.460 --> 00:41:46.800
So the submit button in my
inspector is now going to send

00:41:46.830 --> 00:41:50.250
that message to cause this object
modeling thing to go and fetch.

00:41:50.300 --> 00:41:52.420
And you can set up a few
other bindings here to say,

00:41:52.420 --> 00:41:54.470
well, let's match,
see it knows the properties

00:41:54.570 --> 00:41:56.780
of athlete objects,
let's match their last name.

00:41:56.800 --> 00:42:01.800
name here when we're forming our
search and their first name here

00:42:02.500 --> 00:42:05.540
Now this is a complete
application that would actually

00:42:05.550 --> 00:42:07.610
go and fetch all those things,
and it's not actually

00:42:07.610 --> 00:42:09.660
displaying anything yet,
and I think I would probably get

00:42:10.160 --> 00:42:13.630
bonus marks if I were to display the
athletes that it found in the database.

00:42:13.640 --> 00:42:14.740
So I'm going to add a little table.

00:42:14.760 --> 00:42:18.040
And this is an HTML table
with a special difference.

00:42:18.040 --> 00:42:19.760
There's a blue line
around the second row,

00:42:19.760 --> 00:42:23.810
meaning that this second row is
encased in a WebObjects repetition,

00:42:23.900 --> 00:42:25.460
a WO repetition object.

00:42:25.500 --> 00:42:28.350
This object is going to repeat
over and over again once for

00:42:28.590 --> 00:42:30.270
every object on some other list.

00:42:30.640 --> 00:42:33.490
So if I fetched 37 athletes,
I'll have 37 rows plus

00:42:33.500 --> 00:42:34.940
the title row in my table.

00:42:35.090 --> 00:42:38.580
So I'm going to display
the athletes' name.

00:42:41.500 --> 00:43:10.000
[Transcript missing]

00:43:10.200 --> 00:43:24.100
[Transcript missing]

00:43:26.560 --> 00:43:28.160
and running it.

00:43:28.160 --> 00:43:31.200
Project Builders Compiling is making
the huge--look at the class path.

00:43:31.200 --> 00:43:32.070
Holy mackerel.

00:43:32.250 --> 00:43:34.620
And starting my application here,
and it's going to ask

00:43:34.980 --> 00:43:38.680
Internet Explorer to come back and
rendezvous on this particular URL.

00:43:38.890 --> 00:43:40.900
So here's IE.

00:43:40.900 --> 00:43:43.000
It's made up my first page here.

00:43:43.060 --> 00:43:46.270
I'm looking for people named,
I don't know, Steve.

00:43:46.930 --> 00:43:48.860
And oh, here's a bunch of
Olympic athletes named Steve.

00:43:49.190 --> 00:43:50.300
Team Steve, yeah, that's great.

00:43:50.550 --> 00:43:52.960
Find people named Bob.

00:43:53.000 --> 00:43:53.230
Is there any?

00:43:53.490 --> 00:43:55.300
There's only one guy
named Bob in the game.

00:43:55.300 --> 00:43:56.690
This is actually my favorite.

00:43:57.330 --> 00:43:58.300
Yang Yang.

00:43:58.300 --> 00:44:02.990
Oh, don't leave me alone.

00:44:05.190 --> 00:44:08.760
There are actually two athletes in
the Winter Olympics named Yang Yang.

00:44:08.890 --> 00:44:12.710
This is why primary keys are
important in your database.

00:44:17.900 --> 00:44:19.060
You know,
this doesn't uniquely identify anybody,

00:44:19.060 --> 00:44:23.400
but you might want to go back and say,
"Well, what team are they on?" Well,

00:44:23.400 --> 00:44:27.340
I put another string in here,
because each athlete has a

00:44:27.340 --> 00:44:30.220
relationship to a team object.

00:44:30.360 --> 00:44:30.950
What team were they on?

00:44:31.110 --> 00:44:33.600
Let's display the name of the
team that Yang Yang was on.

00:44:33.700 --> 00:44:36.020
And, oops, sorry,
I dragged it to the wrong place.

00:44:36.200 --> 00:44:37.140
Right to that string right there.

00:44:37.140 --> 00:44:38.340
Thank you.

00:44:38.900 --> 00:44:41.050
And if you say that,
the thing I like is that you can keep

00:44:41.050 --> 00:44:44.220
going here without even restarting,
and it helpfully tells you

00:44:44.220 --> 00:44:45.340
that they're both from China.

00:44:46.340 --> 00:44:50.450
Well,
I still can't quite tell them apart.

00:44:50.530 --> 00:44:52.860
Maybe if I knew what sport they played.

00:44:54.620 --> 00:44:58.800
I'm going to put another thing in here.

00:44:58.980 --> 00:45:03.410
We'll go over to the discipline object.

00:45:03.410 --> 00:45:06.090
What discipline would they end with?

00:45:06.090 --> 00:45:06.090
Are they skiers?

00:45:06.090 --> 00:45:06.090
Is one a skier and one is a skater?

00:45:06.090 --> 00:45:06.090
Maybe that will help me out.

00:45:06.090 --> 00:45:06.090
Oh, great.

00:45:06.090 --> 00:45:06.090
They're both short track speed skating.

00:45:26.600 --> 00:45:26.600
There's got to be some
way to tell them apart.

00:45:26.600 --> 00:45:26.600
How about an image?

00:45:26.600 --> 00:45:26.600
Those are just strings.

00:45:26.600 --> 00:45:26.600
I'm going to put in an image object here.

00:45:26.600 --> 00:45:26.600
And athletes in this case in my
database are related to an image

00:45:26.600 --> 00:45:26.600
and images have some binary data.

00:45:26.600 --> 00:45:26.600
Here I'm hooking it
up to an image object.

00:45:26.600 --> 00:45:26.600
And a mime type,
is it GIF or JPEG or what is it?

00:45:26.600 --> 00:45:26.600
Let's see there.

00:45:26.600 --> 00:45:26.600
How are we doing now?

00:45:26.770 --> 00:45:27.160
Oh, okay.

00:45:27.250 --> 00:45:28.740
Oh, it is two different people.

00:45:28.740 --> 00:45:32.110
Okay, one has a yellow sleeve on her suit
and the other one has a... But,

00:45:32.110 --> 00:45:34.320
you know, without me having to
write any SQL so far,

00:45:34.410 --> 00:45:37.210
I can actually fetch objects from
a couple of different tables.

00:45:37.210 --> 00:45:38.990
There's all this
fetching going on for me,

00:45:39.110 --> 00:45:42.010
and I'm kind of blissfully
unaware of it at this point.

00:45:42.040 --> 00:45:46.400
WebObjects does have a way that
you can turn on SQL debugging.

00:45:46.400 --> 00:45:50.920
You can send some crazy message to say,
I want to turn on logging of

00:45:50.920 --> 00:45:54.840
SQL so I can see the SQL that's
being generated for me.

00:45:55.490 --> 00:46:01.380
And I used to go to the documentation
and look that up every single time,

00:46:01.380 --> 00:46:05.060
but I got tired of that,
so I decided to use this palette feature.

00:46:05.060 --> 00:46:08.150
These palettes are places that you can
put objects that you've written once

00:46:08.150 --> 00:46:09.980
that you might want to reuse again.

00:46:11.370 --> 00:46:14.610
And I've got this palette over
here that just contains a checkbox

00:46:14.710 --> 00:46:17.310
that turns SQL logging on and off.

00:46:17.420 --> 00:46:19.140
We'll add that to my page here.

00:46:19.220 --> 00:46:22.840
You're going to see the SQL will
go whipping by over here,

00:46:22.840 --> 00:46:23.520
okay?

00:46:23.520 --> 00:46:23.520
So, uh...

00:46:23.700 --> 00:46:34.000
[Transcript missing]

00:46:34.300 --> 00:47:20.100
[Transcript missing]

00:47:21.830 --> 00:47:24.750
Some of these are, you know,
my children and some of

00:47:24.750 --> 00:47:27.690
these are other things I just
happen to have sitting around.

00:47:27.690 --> 00:47:29.860
So, you know,
you can probably try to decide which

00:47:29.860 --> 00:47:32.450
of these are real Olympic athletes
and which ones are not.

00:47:32.560 --> 00:47:36.060
But the whole Enterprise Objects
framework layer makes it fairly easy

00:47:36.140 --> 00:47:40.060
to do this sophisticated fetching
across four or five different tables.

00:47:40.140 --> 00:47:42.320
Well, I'd like to make this even
a little more elaborate,

00:47:42.360 --> 00:47:43.350
if that's possible.

00:47:43.350 --> 00:47:47.040
And maybe we can tell our Yangs
apart if we have a list of the

00:47:47.040 --> 00:47:49.380
actual events that they were in.

00:47:49.950 --> 00:47:51.350
So here in this second cell,
I'd like to add what

00:47:51.350 --> 00:47:52.260
we call a repetition.

00:47:52.260 --> 00:47:54.620
This is just something that
explicitly goes through a list.

00:47:54.720 --> 00:47:58.810
And I'd like to loop through each of
the events associated with each athlete.

00:47:58.810 --> 00:48:00.750
And let me create a variable
like I did the other time,

00:48:00.750 --> 00:48:01.170
event.

00:48:03.440 --> 00:48:06.070
This here, this means event object
from the event database,

00:48:06.070 --> 00:48:08.640
not some other kind of event.

00:48:08.640 --> 00:48:11.870
You could really mess people up by
having a database with tables that

00:48:11.870 --> 00:48:14.520
were named like adapter and property.

00:48:14.770 --> 00:48:16.140
And, you know,
you'd never be able to describe

00:48:16.140 --> 00:48:17.610
what you were doing in WebObjects.

00:48:17.630 --> 00:48:20.040
So let's see here.

00:48:20.040 --> 00:48:22.100
Here we're going to loop
through all of the events,

00:48:22.100 --> 00:48:27.400
and I want to display each event
somebody was in on a string.

00:48:27.510 --> 00:48:30.340
Event name, like that.

00:48:30.750 --> 00:48:36.010
Now here I do need to recompile because
in that move of adding the event object,

00:48:37.160 --> 00:48:37.220
it actually

00:48:37.470 --> 00:48:39.040
created one more line of Java.

00:48:39.050 --> 00:48:41.140
It added this thing to
my main object saying,

00:48:41.140 --> 00:48:44.480
"Oh, we now have an object called events,
so I do need to pause

00:48:44.480 --> 00:48:45.930
and recompile here."

00:48:51.840 --> 00:48:53.640
I like it better when you
don't need to recompile.

00:48:53.760 --> 00:48:54.040
Here we go.

00:48:54.040 --> 00:48:57.680
So show me all the Steves again.

00:49:01.200 --> 00:49:02.360
Here they are and they're both,
that guy was in short track, pardon me,

00:49:02.360 --> 00:49:04.160
that guy was in short
track speed skating and oh,

00:49:04.160 --> 00:49:06.790
that handsome fellow was in
speed skating and the bunny was

00:49:06.800 --> 00:49:08.440
in the men's aerials and so on.

00:49:08.630 --> 00:49:12.360
So we're looping through a
bunch of different tables.

00:49:12.360 --> 00:49:14.100
And so far I've done this
all with one component.

00:49:14.100 --> 00:49:17.100
This is one big component
that just displays stuff.

00:49:17.100 --> 00:49:18.600
And I want to really
have a detail component.

00:49:18.600 --> 00:49:21.360
I'd love to be able to click on
short track speed skating men's

00:49:21.470 --> 00:49:23.410
1500 meters and see the results.

00:49:23.540 --> 00:49:26.140
You know, load another one of these
components to display the results.

00:49:26.250 --> 00:49:27.760
There's a lot of things I'd like to do.

00:49:27.880 --> 00:49:30.620
And actually, oh,
I really wanted to show this object

00:49:30.620 --> 00:49:33.360
to Mark Ritchie who's sitting up here.

00:49:33.800 --> 00:49:36.490
Me being a bit of a palette junkie,
I've got all these things on palettes

00:49:36.600 --> 00:49:38.620
that I've collected over the years.

00:49:38.750 --> 00:49:41.420
And I figured this one out the other day.

00:49:41.540 --> 00:49:44.060
Drag and drop that in here and save it.

00:49:44.060 --> 00:49:48.510
And that gives me alternating
row colors in my table.

00:49:49.260 --> 00:49:49.530
Thank you.

00:49:49.700 --> 00:49:49.970
Thank you.

00:49:50.150 --> 00:49:50.710
Somebody said cool.

00:49:50.710 --> 00:49:51.120
Thank you.

00:49:51.120 --> 00:49:51.510
Thank you.

00:49:57.620 --> 00:49:59.460
Let's make a second component
that's going to display

00:49:59.460 --> 00:50:00.740
details of a particular event.

00:50:00.740 --> 00:50:04.590
My goal is to have it so that this
is a hyperlink that takes me to

00:50:04.590 --> 00:50:06.520
the details of men's ice hockey.

00:50:06.930 --> 00:50:08.910
Well,
I'd like to have a second page here.

00:50:08.950 --> 00:50:11.860
I'll just save it right away
and I'll call it Event Details.

00:50:12.110 --> 00:50:14.170
And yes, I want to add to the project.

00:50:14.170 --> 00:50:16.390
And this is going to be
something that just displays

00:50:16.880 --> 00:50:19.140
one particular event object.

00:50:19.200 --> 00:50:22.210
And I want to-- hang on.

00:50:22.960 --> 00:50:24.930
Can we turn your head
aside for a moment here?

00:50:24.960 --> 00:50:26.500
We'll do that again.

00:50:26.620 --> 00:50:28.400
I missed one checkbox.

00:50:28.400 --> 00:50:30.470
I want to add an event object

00:50:31.930 --> 00:50:32.690
Here's what I meant.

00:50:32.720 --> 00:50:35.520
I want to have a way to set the
event object associated with

00:50:35.520 --> 00:50:36.530
this page from somewhere else.

00:50:36.660 --> 00:50:39.010
When we load this page,
I want to be able to tell it, "Here,

00:50:39.310 --> 00:50:40.480
1500 meter speed skating.

00:50:40.560 --> 00:50:43.630
Please display that
particular event object."

00:50:45.400 --> 00:50:45.900
And I just want to save a
little bit of time here.

00:50:45.900 --> 00:50:48.090
And you can have just
HTML fragments on palettes,

00:50:48.180 --> 00:50:48.540
too.

00:50:48.540 --> 00:50:51.300
So here's a little table that
just goes through the event and

00:50:51.330 --> 00:50:53.640
displays all the medal winners.

00:50:53.640 --> 00:50:56.230
It asks the result for the medal
and the medal for the name,

00:50:56.240 --> 00:50:57.840
and it asks the result
for the winning team,

00:50:57.840 --> 00:51:00.240
and it asks that for the
flag and puts it up here.

00:51:00.240 --> 00:51:01.380
And it loops over all the athletes.

00:51:01.480 --> 00:51:04.240
And I wanted to avoid the four or
five minutes of fumbling around

00:51:04.370 --> 00:51:06.890
to actually construct this table,
so there it is.

00:51:07.020 --> 00:51:08.430
But I do need to add
another couple of objects.

00:51:08.500 --> 00:51:09.900
This is just exactly what we did before.

00:51:09.900 --> 00:51:17.230
We want to have a result object,
and we want to have a athlete object,

00:51:17.230 --> 00:51:17.230
just like before.

00:51:19.090 --> 00:51:21.800
So there's my component that's
going to display all the

00:51:21.800 --> 00:51:24.000
results of a particular event.

00:51:24.250 --> 00:51:26.990
And if we go back to the first page,

00:51:27.500 --> 00:51:27.780
Remember that?

00:51:27.850 --> 00:51:29.840
That's the string that's
displaying the name of the event.

00:51:29.840 --> 00:51:31.880
Well, I want to click on this that
turns it into a hyperlink.

00:51:31.950 --> 00:51:33.470
It wraps it inside a hyperlink object.

00:51:33.470 --> 00:51:36.000
And in particular,
it puts it in a hyperlink object

00:51:36.320 --> 00:51:38.060
that can send a message somewhere.

00:51:38.140 --> 00:51:40.510
And I get to decide what
message I want to send.

00:51:40.520 --> 00:51:43.380
I want to send a message that says,
let's find the event details

00:51:43.530 --> 00:51:46.400
page and let's give it this
particular event and tell it to go.

00:51:46.400 --> 00:51:49.350
So in WebObjects Builder,
you get to add what we call an action.

00:51:49.350 --> 00:51:51.010
I'm not declaring a variable here.

00:51:51.010 --> 00:51:54.820
I'm creating a little stub of a procedure
that's going to load up another page.

00:51:54.820 --> 00:51:57.030
Show me this here event.

00:51:58.500 --> 00:52:09.700
[Transcript missing]

00:52:09.800 --> 00:52:12.730
This is the action method
associated with that hyperlink.

00:52:12.850 --> 00:52:14.530
Even though there may be 20 of
those hyperlinks on the page,

00:52:14.620 --> 00:52:17.440
they're all sending the same
message back to my application.

00:52:17.440 --> 00:52:18.330
Show me this here event.

00:52:20.090 --> 00:52:23.160
And I now get to demonstrate my
incredible command of Java and

00:52:23.160 --> 00:52:24.180
write a line of code here.

00:52:24.180 --> 00:52:26.380
Here is, this is the main Java file.

00:52:26.380 --> 00:52:30.280
This is all the code associated with the,
with the main page.

00:52:30.340 --> 00:52:31.470
Not really very much of it.

00:52:31.470 --> 00:52:33.020
A couple of object declarations.

00:52:33.020 --> 00:52:34.190
And then this thing here.

00:52:34.300 --> 00:52:36.040
It wrote out this little stub for me.

00:52:36.040 --> 00:52:38.240
It said, all right,
I'm going to look up the page called

00:52:38.240 --> 00:52:41.040
Event Details for you and give it
to you as a certain kind of object.

00:52:41.060 --> 00:52:43.340
And you can add any
little initializations or

00:52:43.340 --> 00:52:44.730
anything you want here.

00:52:44.740 --> 00:52:47.930
And then I'm going to return that page,
which will cause it to be generated.

00:52:48.680 --> 00:52:49.290
Well, I've got to do one thing.

00:52:49.300 --> 00:52:52.810
I've got to say, next page,
set the event that you are going to

00:52:52.810 --> 00:52:57.260
display to be the same one as I'm
currently displaying on my list.

00:52:57.420 --> 00:52:59.580
Remember this page, the first page,
had an event object as it went

00:52:59.650 --> 00:53:00.760
through the list of events?

00:53:00.760 --> 00:53:04.240
And this is just kind of mind-boggling
to people in WebObjects that

00:53:04.240 --> 00:53:06.160
it figures this out sometimes.

00:53:06.160 --> 00:53:08.600
And it just knows when
the request comes back in,

00:53:08.740 --> 00:53:12.660
which one of those 40 hyperlinks,
which specific event object caused

00:53:12.710 --> 00:53:14.530
that hyperlink to be created.

00:53:14.540 --> 00:53:18.330
And hopefully this transition
is fairly smooth here.

00:53:18.360 --> 00:53:18.780
Let's try it here.

00:53:18.860 --> 00:53:20.470
Now we're going to compile it.

00:53:20.480 --> 00:53:24.260
It's going to add the other .wo
component to the application.

00:53:24.260 --> 00:53:25.980
ClassPath is probably even bigger now.

00:53:25.980 --> 00:53:26.690
I don't know where it goes.

00:53:26.720 --> 00:53:28.600
And we'll launch this now.

00:53:28.600 --> 00:53:30.060
Now we have a two-page application.

00:53:34.050 --> 00:53:35.140
Here we go.

00:53:35.310 --> 00:53:38.470
Show me all the Steves again.

00:53:38.570 --> 00:53:39.600
Now these are hyperlinks, right?

00:53:39.600 --> 00:53:42.780
And there are, you know,
15 hyperlinks in this page.

00:53:42.870 --> 00:53:45.660
Each one of these is sending that
same message back to the application.

00:53:45.660 --> 00:53:47.530
Show me this here event.

00:53:47.640 --> 00:53:51.690
But WebObjects can sort out which
event object was used to create this

00:53:51.690 --> 00:53:55.270
piece of the loop and then pass that
automatically to the other page.

00:53:55.390 --> 00:53:56.710
Tell me about the man's 500 meters.

00:53:56.850 --> 00:53:57.940
Hey, that was a good one.

00:53:58.030 --> 00:53:59.660
Gold for Canada and silver for Canada.

00:53:59.660 --> 00:54:00.900
Holy smokes.

00:54:01.460 --> 00:54:03.440
So now we're fetching,
we're going through the database and

00:54:03.440 --> 00:54:06.400
we're picking up the winning team and the
members of the team because there can be,

00:54:06.400 --> 00:54:08.560
in this particular database,
there can be more than one

00:54:08.560 --> 00:54:09.900
person on a winning team.

00:54:09.900 --> 00:54:11.900
You know,
if you get down to hockey or something,

00:54:12.120 --> 00:54:14.860
there's like a whole bunch
of winners on a hockey team.

00:54:14.940 --> 00:54:15.890
Oh, Canada wins again.

00:54:15.890 --> 00:54:15.900
Oh, isn't that nice?

00:54:17.900 --> 00:54:21.170
And so,
chance of two randomly selected events

00:54:21.170 --> 00:54:23.890
I might just happen to click on here.

00:54:23.890 --> 00:54:27.290
So this is some, you know,
if you wanted to code

00:54:27.290 --> 00:54:28.900
this in SQL and HTML,
you know, by hand,

00:54:28.900 --> 00:54:28.900
it might get kind of ugly with
all the stuff that's in there.

00:54:28.900 --> 00:54:28.900
So, you know, if you wanted to code
this in SQL and HTML,

00:54:28.900 --> 00:54:28.900
you know, by hand,
it might get kind of ugly with

00:54:28.900 --> 00:54:28.900
all the stuff that's in there.

00:54:30.900 --> 00:54:31.120
So this is some, you know,
if you wanted to code

00:54:31.120 --> 00:54:31.310
this in SQL and HTML,
you know, by hand,

00:54:31.310 --> 00:54:31.560
it might get kind of ugly
with all the joins you'd have

00:54:31.570 --> 00:54:33.160
to be doing at this point,
but I'm just exploiting

00:54:33.210 --> 00:54:35.900
relationships that are found.

00:54:36.580 --> 00:54:36.900
Hi.

00:54:36.900 --> 00:54:37.260
Did you get that?

00:54:37.270 --> 00:54:37.900
You want to take another one?

00:54:37.900 --> 00:54:38.900
Take another one.

00:54:38.900 --> 00:54:39.620
Oh, come on.

00:54:39.620 --> 00:54:40.570
Take another one.

00:54:40.570 --> 00:54:40.900
Hi.

00:54:42.200 --> 00:54:45.950
So we're just working through
various relationships that are

00:54:45.950 --> 00:54:47.700
found in the database here.

00:54:47.810 --> 00:54:51.800
Now, I look at this and I think
this is not nearly as stirring

00:54:51.800 --> 00:54:55.800
and emotionally evocative,
this page, as it could be.

00:54:55.920 --> 00:54:58.700
And people come to my session
really wanting to hear national

00:54:58.700 --> 00:55:00.100
anthems for some reason.

00:55:02.790 --> 00:55:06.360
So we go to the event details page here,
and I want to add something.

00:55:06.360 --> 00:55:09.340
I'm going to add right here.

00:55:09.340 --> 00:55:12.420
See, there's the medal named gold,
the country name Canada, and the flag.

00:55:12.420 --> 00:55:17.350
I want to add another thing here
called a WO Embedded Object.

00:55:17.350 --> 00:55:20.470
This is a little thing that comes
with WebObjects that dumps binary

00:55:20.700 --> 00:55:23.840
data to the browser and lets it
figure it out with an embed tag,

00:55:23.840 --> 00:55:26.590
so QuickTime movies or
Flash or something like that.

00:55:27.320 --> 00:55:29.900
And I don't want it to be too big,
so I'm going to go in here and just, oh,

00:55:29.900 --> 00:55:30.620
just a second.

00:55:30.630 --> 00:55:33.150
I'm going to go up to the
inspector of this embedded object

00:55:33.150 --> 00:55:34.520
and add a couple of bindings.

00:55:34.520 --> 00:55:38.240
I want its width to be, I don't know,
150 pixels, and I want its height to be,

00:55:38.240 --> 00:55:39.940
these aren't dynamic at all.

00:55:39.940 --> 00:55:42.120
These are just going to get
dumped straight through to the,

00:55:42.250 --> 00:55:44.190
how many pixels high does a
QuickTime player have to be?

00:55:44.190 --> 00:55:44.840
16 pixels?

00:55:44.840 --> 00:55:46.640
Does anyone remember that magic number?

00:55:46.640 --> 00:55:47.140
No?

00:55:47.140 --> 00:55:48.490
Okay, well.

00:55:48.500 --> 00:55:52.050
But more importantly,
what data do I want this thing

00:55:52.200 --> 00:55:54.080
to dump out to the browser?

00:55:54.140 --> 00:55:58.690
Well, conveniently, Uh...

00:55:59.280 --> 00:56:02.600
Each result is associated with a team,
and each team is associated

00:56:02.600 --> 00:56:03.680
with an Anthem object.

00:56:12.500 --> 00:56:14.560
And some of these Anthems, I'll tell you,
are MIDI files.

00:56:14.560 --> 00:56:17.790
Some of them are MP3s in the database,
so they have different MIME types,

00:56:17.900 --> 00:56:19.840
but I can just bind it here and let
the thing figure it out on the fly.

00:56:19.840 --> 00:56:21.940
Hope the sound's working
on this computer.

00:56:34.410 --> 00:56:34.410
Sound?

00:56:34.410 --> 00:56:34.410
Going to be okay?

00:56:34.410 --> 00:56:34.410
Yeah?

00:56:34.410 --> 00:56:34.410
All right.

00:56:34.410 --> 00:56:34.410
Great crew in the back.

00:56:34.410 --> 00:56:34.410
Look how alive they are.

00:56:34.410 --> 00:56:34.410
Fantastic.

00:56:34.410 --> 00:56:34.410
So, let's try this again here.

00:56:34.410 --> 00:56:34.410
Here we go.

00:56:34.410 --> 00:56:34.410
Here comes some national anthems.

00:56:34.410 --> 00:56:34.410
Oh!

00:56:36.600 --> 00:56:37.540
Oh, they're all playing at once.

00:56:37.540 --> 00:56:38.180
Well, that's nice.

00:56:38.180 --> 00:56:41.640
Um... Um... Hmm.

00:56:44.900 --> 00:56:45.900
That's a lovely effect.

00:56:45.900 --> 00:56:51.080
I guess there's a couple
of ways I could fix that.

00:56:51.080 --> 00:56:52.310
I could find...

00:56:53.770 --> 00:56:56.870
Find that component and you can
add whatever bindings you want.

00:56:56.870 --> 00:56:58.850
You know,
I happen to know that you can add

00:56:58.980 --> 00:57:00.650
an autoplay false to these things.

00:57:00.650 --> 00:57:04.010
And that just embeds autoplay equals
false in the HTML that goes out.

00:57:04.100 --> 00:57:06.900
So now hopefully they
don't all play this time.

00:57:08.990 --> 00:57:09.530
Phew, that's better.

00:57:09.540 --> 00:57:11.410
But even better, you know,
you wouldn't really play this

00:57:11.410 --> 00:57:14.940
anthem if your country had
lost to Canada in the Olympics.

00:57:14.940 --> 00:57:16.590
We wouldn't hear that.

00:57:22.260 --> 00:57:24.420
And I only mention that because
it's an excuse to introduce another

00:57:24.420 --> 00:57:26.440
object from the collection here.

00:57:26.440 --> 00:57:27.760
We'll, we'll...

00:57:28.340 --> 00:57:29.810
I want to add,
this is one of my favorites,

00:57:29.810 --> 00:57:31.350
how many of you like the good old W.O.

00:57:31.350 --> 00:57:32.430
Key Value Conditional?

00:57:32.440 --> 00:57:35.300
How many WebObjects
programmers have ever... oh,

00:57:35.300 --> 00:57:36.790
thank you, thank you, thank you.

00:57:36.930 --> 00:57:38.030
Key Value Conditional,
thank you very much.

00:57:38.140 --> 00:57:40.060
I had nothing to do with it.

00:57:40.350 --> 00:57:45.240
But the idea of a Key Value Conditional
is it exploits this key value

00:57:45.240 --> 00:57:47.520
business that people love so much.

00:57:47.520 --> 00:57:48.920
No, no, later.

00:57:48.920 --> 00:57:51.310
It exploits key value coding
and you give it a key,

00:57:51.310 --> 00:57:53.290
a message you want it to send,
and a value,

00:57:53.410 --> 00:57:56.340
which is maybe another object,
and say compare these things,

00:57:56.450 --> 00:58:00.260
and if they're equal,
display everything inside me.

00:58:00.290 --> 00:58:02.400
It's conditionally displaying something.

00:58:02.400 --> 00:58:04.600
Well,
the key I happen to want in this case is,

00:58:04.600 --> 00:58:08.270
let me think here,
I want result.metal.name.

00:58:08.310 --> 00:58:11.960
It's going to go through the graph and
figure out the name of the current metal,

00:58:11.960 --> 00:58:14.690
and I want to compare that to gold.

00:58:16.410 --> 00:58:18.370
That could be an object,
it could be a string, it could be,

00:58:18.480 --> 00:58:19.460
you know, any other object and thing.

00:58:19.460 --> 00:58:21.140
It's just going to
compare the two things.

00:58:21.260 --> 00:58:23.570
And hopefully this time we have
only the winning countries anthem.

00:58:23.700 --> 00:58:24.740
Oh, that's better.

00:58:24.910 --> 00:58:28.890
So in this case we've used an object
that dynamically sends some messages and

00:58:28.890 --> 00:58:33.300
makes a decision on the fly about what
else it wants to include in the database.

00:58:33.300 --> 00:58:37.030
So we've now got only
one anthem player here.

00:58:37.670 --> 00:58:41.280
I went to the same public
school as this guy here,

00:58:41.280 --> 00:58:42.480
Eric Lindros.

00:58:42.600 --> 00:58:45.080
Anybody from Philadelphia or
New York here?

00:58:45.080 --> 00:58:48.040
Yeah, all right.

00:58:48.040 --> 00:58:51.990
I'm happy for you.

00:58:52.920 --> 00:58:54.470
Thank you for joining us.

00:58:54.480 --> 00:58:55.720
I'm Steve Hayman.

00:58:55.720 --> 00:58:58.430
I'm going to go ahead
and start off by saying

00:58:58.730 --> 00:59:00.330
This might have seemed
like a lot of work.

00:59:00.410 --> 00:59:03.910
I think that's actually quite a bit
to get done in just a few minutes,

00:59:03.970 --> 00:59:05.060
you know, starting really from nothing.

00:59:05.060 --> 00:59:06.810
I admit I did drag a couple
of things off pallets,

00:59:06.810 --> 00:59:08.480
but they were genuinely reusable objects.

00:59:08.540 --> 00:59:13.130
But I want to take a moment or two
to show you one of the many direct-to

00:59:13.140 --> 00:59:18.510
family of fine products we have here
with WebObjects growing every year.

00:59:18.520 --> 00:59:20.900
I want to show you the first one,
Direct-to-Web.

00:59:20.900 --> 00:59:26.110
Direct-to-Web is a technology that
uses one of these rules-based engines

00:59:26.110 --> 00:59:28.660
to decide on the fly by studying.

00:59:28.680 --> 00:59:31.450
You give it one of these object models,
and you tell it, you know,

00:59:31.460 --> 00:59:33.850
go and study this object model
and learn what kind of objects

00:59:33.890 --> 00:59:35.600
are embedded in the object model.

00:59:35.600 --> 00:59:39.580
And please make me up an application
that lets me fetch things and change them

00:59:39.610 --> 00:59:41.740
and search for them and add new ones.

00:59:41.780 --> 00:59:44.150
And Direct-to-Web,
by looking at the model,

00:59:44.150 --> 00:59:45.800
can generate a UI on the fly.

00:59:45.800 --> 00:59:48.480
Direct-to-Java Client is the same
general idea with a different system.

00:59:48.580 --> 00:59:49.380
It's a sort of UI.

00:59:49.380 --> 00:59:51.810
So I want to just quickly make
a second application here where

00:59:51.850 --> 00:59:53.180
we can modify Olympic results.

00:59:53.440 --> 00:59:56.200
Because sometimes after an event is over,
you change who the winner is.

00:59:56.300 --> 00:59:58.460
Which is, this is a new thing.

00:59:58.540 --> 00:59:59.610
Just like the U.S.

00:59:59.650 --> 01:00:00.280
election.

01:00:00.280 --> 01:00:01.950
Well, you didn't change it,
but you thought about it really hard.

01:00:01.960 --> 01:00:05.120
So I want to make a
Direct-to-Web application here.

01:00:05.120 --> 01:00:08.200
Or Jagwire Direct,
we'll call this one here.

01:00:10.940 --> 01:00:14.720
More exciting checkboxes that I need
to learn more about and frameworks.

01:00:14.720 --> 01:00:19.210
But here I want to tell it specifically
what object model do I want to use.

01:00:19.280 --> 01:00:20.300
Well, I kept that one on my desktop.

01:00:20.300 --> 01:00:20.680
There it is.

01:00:20.680 --> 01:00:24.570
That's the object model I want
to use with the information about

01:00:24.570 --> 01:00:27.020
fetching athlete objects and teams.

01:00:27.020 --> 01:00:29.070
You can choose a variety
of different styles here.

01:00:29.080 --> 01:00:30.060
And that's it.

01:00:30.060 --> 01:00:31.420
We're done.

01:00:31.420 --> 01:00:34.790
We now have a complete application that
can actually fetch anything from the

01:00:34.990 --> 01:00:38.320
database that will let me update any
property of anything in the database.

01:00:38.320 --> 01:00:40.450
Let me make new objects and
delete things and so on.

01:00:41.020 --> 01:00:44.070
Plus, as a bonus, I get to refine the
UI from within my browser.

01:00:44.070 --> 01:00:47.740
Here inside my browser, I get to tell it,
no, I want to have a pop-up list for

01:00:47.740 --> 01:00:49.590
that thing instead of a browser.

01:00:49.590 --> 01:00:50.600
And you know what?

01:00:50.600 --> 01:00:54.140
I don't want to display this,
and this thing should be uneditable.

01:00:54.190 --> 01:00:56.720
I get to tell it all that
right here in my browser,

01:00:56.720 --> 01:00:58.870
and that writes rules
back at the back end,

01:00:58.920 --> 01:01:01.950
which interact with this rules
engine and modify the UI the

01:01:01.950 --> 01:01:03.660
next time it's generated.

01:01:03.660 --> 01:01:05.000
So let's log in here.

01:01:05.000 --> 01:01:07.320
This is the completed application.

01:01:07.320 --> 01:01:10.780
My password,
which is a 6789 of those dots.

01:01:10.800 --> 01:01:11.650
Yeah, that's good.

01:01:11.740 --> 01:01:13.660
You should make your
password dots like that,

01:01:13.660 --> 01:01:14.790
because then you can cut and paste them.

01:01:14.800 --> 01:01:16.600
It's very handy.

01:01:16.600 --> 01:01:18.900
And I would like to be
able to change the UI,

01:01:18.900 --> 01:01:21.510
so I'm going to click
on that checkbox there.

01:01:22.120 --> 01:01:26.510
So here is Direct2Web's first stab
at a user interface for fetching and

01:01:26.510 --> 01:01:28.390
updating anything from this object model.

01:01:28.400 --> 01:01:33.090
It's found the list of objects
and knows all the properties

01:01:33.100 --> 01:01:34.480
of all the different objects.

01:01:34.490 --> 01:01:35.280
And you can fetch anything.

01:01:35.370 --> 01:01:37.760
Fetch all the athletes whose
last name begins with H.

01:01:37.890 --> 01:01:41.460
And it will make up a page for me
here with every property of every

01:01:41.690 --> 01:01:44.070
athlete whose last name begins with H.

01:01:44.190 --> 01:01:47.760
Now this is not the world's best UI,
but it's not bad for a start.

01:01:47.900 --> 01:01:49.430
And I can tweak it here.

01:01:49.590 --> 01:01:51.370
I can hit this customize button.

01:01:51.880 --> 01:01:58.340
and a little Java Oplet is going to
pop up here that lets me modify the

01:01:58.340 --> 01:02:00.720
display of these various properties.

01:02:00.720 --> 01:02:01.380
See this thing here?

01:02:01.380 --> 01:02:04.920
This is a list of all the properties that
are currently being shown in this window.

01:02:04.920 --> 01:02:06.300
So we're showing them
in alphabetical order.

01:02:06.300 --> 01:02:09.060
Date of birth, first name, full name,
gender, highlights, yadda, yadda, yadda.

01:02:09.060 --> 01:02:11.100
Well, I can change it all around here.

01:02:11.100 --> 01:02:14.980
I'd really like full name to be first,
and there's no need to display

01:02:14.980 --> 01:02:16.540
first name or last name at all.

01:02:16.540 --> 01:02:19.030
And let's have date of birth.

01:02:19.110 --> 01:02:20.580
Well, that's a couple of simple changes.

01:02:22.220 --> 01:02:24.670
And you hit save and that writes
some new rules at the back end

01:02:24.670 --> 01:02:28.570
that rewrites this UI on the fly
by studying the rules engine.

01:02:28.640 --> 01:02:30.970
You want this rule applied
when this object is generated.

01:02:30.980 --> 01:02:32.500
We can get even fancier here.

01:02:32.500 --> 01:02:34.790
You can say I want the page to
be a different style of page.

01:02:34.960 --> 01:02:35.990
This is my favorite here.

01:02:36.000 --> 01:02:39.330
And then that writes these things
out as a different kind of page here.

01:02:39.380 --> 01:02:42.300
And there's a bunch of rules at
the back end that govern how every

01:02:42.300 --> 01:02:43.880
possible thing is going here.

01:02:43.880 --> 01:02:45.980
There are rules that state
what the layout of one of

01:02:45.980 --> 01:02:48.220
these editing pages looks like,
for instance.

01:02:48.310 --> 01:02:52.120
And you can dive in here with
this wizard and refine the rules.

01:02:52.120 --> 01:02:55.750
It's usually a pretty good start,
but you can refine them on the fly here.

01:02:55.760 --> 01:02:59.790
Well, I want to get to, let's see here,
I want to fetch...

01:03:00.200 --> 01:03:00.940
Figure skating events.

01:03:00.970 --> 01:03:01.860
What do we got?

01:03:01.910 --> 01:03:02.470
Figure skating events.

01:03:02.560 --> 01:03:04.680
We've got four different figure
skating disciplines in WebObjects.

01:03:04.740 --> 01:03:05.340
Oh, this was a good one.

01:03:05.400 --> 01:03:05.700
Pairs.

01:03:05.700 --> 01:03:06.380
Anyone remember that?

01:03:06.430 --> 01:03:07.440
Was there something
about that in the paper?

01:03:07.440 --> 01:03:09.160
We had two golds and a bronze.

01:03:09.160 --> 01:03:10.540
Two golds and a bronze?

01:03:10.550 --> 01:03:11.280
Oh, yeah.

01:03:11.280 --> 01:03:12.670
Two golds and a bronze.

01:03:12.670 --> 01:03:13.730
I'm almost done.

01:03:13.730 --> 01:03:14.200
What?

01:03:14.200 --> 01:03:16.190
Is my zipper undone or something?

01:03:16.190 --> 01:03:16.820
What?

01:03:19.700 --> 01:03:22.460
Thank you for your time.

01:03:22.460 --> 01:03:24.690
Steve Hayman: I am?

01:03:24.690 --> 01:03:25.570
Yeah.

01:03:25.570 --> 01:03:29.820
Steve Hayman: Let me just finish this.

01:03:29.820 --> 01:03:30.000
I'll be one minute and then
I'll take some questions,

01:03:30.000 --> 01:03:30.000
okay?

01:03:30.000 --> 01:03:30.000
I thought I had until this was done.

01:03:30.000 --> 01:03:30.000
That's when the Q&A is done.

01:03:30.000 --> 01:03:30.000
Steve Hayman: Oh, the Q&A is done then.

01:03:30.000 --> 01:03:30.000
Oh, pardon.

01:03:31.630 --> 01:03:36.080
To customize this, I want properties,
I want, actually I want to display

01:03:36.330 --> 01:03:42.180
results on a table like this.

01:03:42.800 --> 01:04:04.400
[Transcript missing]

01:04:09.210 --> 01:04:10.650
That's as far as I wanted to go.

01:04:10.670 --> 01:04:14.000
I'm done, I guess.