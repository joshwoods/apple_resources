WEBVTT

00:00:01.140 --> 00:00:03.960
Ladies and gentlemen,
please welcome Vice President of

00:00:03.960 --> 00:00:06.850
Interactive Media Group and
all the rest of the fun stuff,

00:00:07.260 --> 00:00:09.350
Tim Schaaff.

00:00:17.100 --> 00:00:21.660
Welcome.

00:00:21.660 --> 00:00:25.280
So all the other fun stuff
that Bill was referring to is,

00:00:25.440 --> 00:00:29.500
in addition to QuickTime,
I'm responsible for Core Graphics,

00:00:29.500 --> 00:00:33.300
Quartz Extreme, that kind of stuff,
QuickDraw, the printing technologies,

00:00:33.300 --> 00:00:35.650
all the audio and music stuff.

00:00:35.770 --> 00:00:39.360
So if you have comments or feedback
you'd like to give me during the week,

00:00:39.360 --> 00:00:41.390
feel free to stop me and
let me know what you think,

00:00:41.610 --> 00:00:44.070
and I'll do my best to attend
all the other feedback sessions

00:00:44.710 --> 00:00:47.730
related to those things so you can
let me know what's on your mind.

00:00:47.760 --> 00:00:49.680
Today we're going to
talk about QuickTime.

00:00:52.170 --> 00:00:54.100
So let's start with QuickTime 5.

00:00:54.100 --> 00:00:57.940
QuickTime 5 has been in the
market for just over a year,

00:00:57.940 --> 00:00:59.140
and it's been a really exciting year.

00:00:59.140 --> 00:01:02.220
We've had a lot of success
with QuickTime so far.

00:01:02.220 --> 00:01:06.310
In our first year,
we've downloaded over 100

00:01:06.310 --> 00:01:08.800
million copies of QuickTime 5.

00:01:08.850 --> 00:01:10.970
This is really remarkable.

00:01:12.460 --> 00:01:15.830
QuickTime has been in the marketplace
for a long time now and over those years

00:01:16.000 --> 00:01:20.630
we have been able to develop a very
large body of applications and tools

00:01:20.690 --> 00:01:23.160
and so on to support the technology.

00:01:23.260 --> 00:01:25.840
We've got thousands of
applications in the market.

00:01:25.990 --> 00:01:29.990
We've got tens of
thousands of CD-ROM titles.

00:01:30.470 --> 00:01:35.850
Thousands of enhanced music CDs,
and there are more than 160 digital

00:01:36.190 --> 00:01:39.660
cameras in the market today that
ship with QuickTime installed.

00:01:39.660 --> 00:01:44.350
What's interesting about this is that
virtually every major manufacturer of

00:01:44.490 --> 00:01:47.200
digital cameras ships with QuickTime now.

00:01:47.200 --> 00:01:51.690
And over half of those are shipping
cameras that actually create

00:01:51.690 --> 00:01:54.620
QuickTime right in the camera itself.

00:01:54.620 --> 00:01:56.220
So this is pretty neat.

00:01:56.490 --> 00:01:59.130
QuickTime is making its way
far and wide in the world.

00:02:01.120 --> 00:02:04.860
We look at our statistics for Apple.com,
the QuickTime web pages.

00:02:04.860 --> 00:02:10.700
We're seeing over 1,300,000
QuickTime page views each and every day.

00:02:10.700 --> 00:02:14.800
People are going there to find
content and check out the download

00:02:14.870 --> 00:02:16.780
pages and so on and so forth.

00:02:17.010 --> 00:02:23.910
We're getting more than 300,000 new
installs of QuickTime each and every day.

00:02:25.310 --> 00:02:26.780
This is a very interesting statistic.

00:02:26.780 --> 00:02:31.370
So we went back and we analyzed
the data about where customers who

00:02:31.430 --> 00:02:35.550
have come to get QuickTime from
the download pages had come from.

00:02:35.560 --> 00:02:39.240
Presumably, the idea here is that if
you're coming to get QuickTime,

00:02:39.240 --> 00:02:42.480
you're probably on a site
that's got QuickTime content.

00:02:42.480 --> 00:02:45.200
Otherwise, why would you need to
be at the download page?

00:02:45.300 --> 00:02:49.820
When we did the analysis and traced
back to see where people had come from,

00:02:49.820 --> 00:02:55.080
we found that on every single day,
we're averaging over 28,000 different

00:02:55.290 --> 00:03:00.400
websites that are directing people to
the Apple download page for QuickTime.

00:03:00.400 --> 00:03:01.780
It's really incredible.

00:03:04.630 --> 00:03:07.000
Now, we've been talking about what's
going on with the client,

00:03:07.000 --> 00:03:11.010
but we're also very involved
in developing the other

00:03:11.050 --> 00:03:12.100
end of the food chain.

00:03:12.100 --> 00:03:13.690
It's the server side of the product.

00:03:13.700 --> 00:03:17.440
And since we introduced this
product into the marketplace,

00:03:17.440 --> 00:03:23.180
we've had over 400,000 people download
the QuickTime streaming server.

00:03:23.180 --> 00:03:28.760
The server is being deployed and used
by all of the biggest companies who

00:03:28.760 --> 00:03:32.450
really are providing the backbone and
the infrastructure and all the equipment

00:03:32.450 --> 00:03:34.380
that the Internet runs on today.

00:03:34.500 --> 00:03:36.840
So we're very, very happy about this.

00:03:36.940 --> 00:03:41.360
And a large part of what makes this
project a successful undertaking is

00:03:41.370 --> 00:03:45.670
the fact that Apple decided from the
beginning to make the QuickTime streaming

00:03:45.810 --> 00:03:49.740
server an open source project so
that you and lots of other companies

00:03:49.740 --> 00:03:52.900
could go and get the technology
and help us evolve it and move it

00:03:52.990 --> 00:03:56.980
forward and deploy it in ways that we
wouldn't have been able to think about.

00:03:58.570 --> 00:04:02.700
So we can say today that
truly QuickTime is everywhere.

00:04:02.880 --> 00:04:04.100
It's great.

00:04:04.210 --> 00:04:07.640
So that's a quick update on QuickTime 5.

00:04:07.740 --> 00:04:11.100
As you know,
QuickTime 6 is available in your Jaguar

00:04:11.100 --> 00:04:15.440
seat and we'll be talking about that a
little bit more later in the show today.

00:04:15.510 --> 00:04:18.460
So let's go back and talk a little
bit about the beginnings of QuickTime.

00:04:18.460 --> 00:04:21.950
This is an important thing to understand.

00:04:22.090 --> 00:04:25.540
QuickTime was introduced in 1991,
as most of you know,

00:04:25.620 --> 00:04:29.740
and it started with a very simple idea.

00:04:30.150 --> 00:04:34.840
We were thinking that it would be a
lot of fun if you could take video and

00:04:34.840 --> 00:04:38.180
work with it on your personal computer,
and you didn't have to have any

00:04:38.180 --> 00:04:41.060
special purpose hardware to be
able to manipulate the media,

00:04:41.060 --> 00:04:45.750
but that you could write software
and use the PC processor to be able

00:04:45.750 --> 00:04:48.490
to deal with the video right there.

00:04:50.160 --> 00:04:50.650
Add?

00:04:50.800 --> 00:04:51.980
Sure.

00:04:51.980 --> 00:04:55.400
We'll do this once every
five or ten minutes today.

00:04:55.400 --> 00:04:57.940
Cool.

00:04:57.940 --> 00:05:00.340
Now we have a worldwide broadcast.

00:05:05.770 --> 00:05:06.310
Sorry about that.

00:05:06.340 --> 00:05:08.130
That sounds better already.

00:05:13.090 --> 00:05:15.140
As I said,
we started with a very simple idea:

00:05:15.140 --> 00:05:20.230
use the personal computer to be able to
play and manipulate the video without

00:05:20.230 --> 00:05:23.880
requiring any special purpose hardware.

00:05:23.980 --> 00:05:29.960
This was a very modest beginning.

00:05:30.080 --> 00:05:32.320
Can we have the audio on that?

00:05:37.700 --> 00:05:44.540
All the pain of an ailment
commonly known as stage fright.

00:05:47.020 --> 00:05:49.760
So this is the classic
postage stamp video,

00:05:49.800 --> 00:05:52.080
a very modest beginning.

00:05:53.680 --> 00:05:57.620
As we thought about the idea of playing
video and combining that with audio,

00:05:57.720 --> 00:06:01.320
we very quickly moved on and made
connections with lots of other kinds of

00:06:01.330 --> 00:06:05.330
media and lots of other ideas for what
to do that all make sense as you start

00:06:05.370 --> 00:06:12.410
to develop a complete system for building
and manipulating media on your computer.

00:06:14.090 --> 00:06:17.690
Rather than just building a big
application that would be able

00:06:17.720 --> 00:06:22.950
to perform all these functions,
the team had a couple of really profound

00:06:23.100 --> 00:06:26.670
ideas that they brought to the table
that have influenced where QuickTime has

00:06:26.770 --> 00:06:33.000
gone over the years and really talked
to why it's been so successful today.

00:06:33.120 --> 00:06:37.990
The first idea was rather than building
an application that would be able to do

00:06:37.990 --> 00:06:42.660
a lot of stuff but would really only be
accessible to the application developers,

00:06:42.660 --> 00:06:47.200
provide an architecture that would
be able to be used for anyone to

00:06:47.200 --> 00:06:50.700
integrate media into their applications,
provide an architecture that had a

00:06:50.760 --> 00:06:55.550
component-based architecture that would
be able to grow and evolve and scale

00:06:55.550 --> 00:07:00.690
over time as the ideas about what was
important changed and as the processing

00:07:00.790 --> 00:07:03.080
power of the systems around it changed.

00:07:03.100 --> 00:07:11.490
The second big idea was to
be able to build the system

00:07:11.880 --> 00:07:17.510
Being prepared to manipulate media and
perform functions that might not be

00:07:17.510 --> 00:07:21.110
possible in real time on the processors,
the hardware systems that were

00:07:21.110 --> 00:07:24.520
available at the time that
the software was invented.

00:07:24.520 --> 00:07:28.110
So the notion of being able to
support non-real-time processing

00:07:28.360 --> 00:07:32.430
and being able to encompass and
describe media presentations that

00:07:32.520 --> 00:07:36.510
were too big for the existing
hardware was a very fundamental idea,

00:07:36.510 --> 00:07:39.120
and we'll see how that
paid off in a minute.

00:07:39.830 --> 00:07:43.150
If we just look at where the
systems have evolved from

00:07:43.210 --> 00:07:48.880
over the last ten or so years,
we see some pretty dramatic changes.

00:07:48.940 --> 00:07:52.680
This first system on the
left here is the MacLC.

00:07:53.040 --> 00:07:55.210
This was sort of the basic
system that Apple shipped when

00:07:55.210 --> 00:07:58.060
QuickTime was introduced back in 1991.

00:07:58.100 --> 00:08:02.610
16 megahertz, 68020 processor,
two megabytes of RAM.

00:08:02.900 --> 00:08:03.780
That was for everything.

00:08:03.780 --> 00:08:05.520
Kind of remarkable.

00:08:05.580 --> 00:08:06.480
Had a hard drive.

00:08:06.480 --> 00:08:08.540
This was a huge hard drive at the time.

00:08:08.560 --> 00:08:12.080
The system cost $2,500 and the
video that I just played for you,

00:08:12.080 --> 00:08:17.550
which was circa 1991 kind of video,
90 kilobytes per second.

00:08:19.000 --> 00:08:23.430
Today we've got the G4 tower
running dual gigahertz processors,

00:08:23.430 --> 00:08:27.300
tons of memory,
more than 2,000 times the disk capacity.

00:08:27.300 --> 00:08:30.670
It looks a little bit more expensive,
although if you adjust

00:08:30.670 --> 00:08:34.300
this for the inflation,
it turns out that the LC system

00:08:34.300 --> 00:08:37.460
was actually a little bit more
expensive than the tower is today.

00:08:37.460 --> 00:08:43.080
And you're capable of doing video on the
scale of about 20 megabytes a second.

00:08:43.300 --> 00:08:46.890
I'd like to invite Tom Dowdy
to come up and give me a hand,

00:08:46.890 --> 00:08:49.260
and we'll show you a little demo.

00:08:58.310 --> 00:08:58.670
Great.

00:08:58.990 --> 00:09:02.170
So as Tim said,
we're going to be showing a demonstration

00:09:02.180 --> 00:09:04.870
right now of 20 megabytes a second video.

00:09:05.030 --> 00:09:07.880
I don't know if you can
see here on the info panel.

00:09:07.880 --> 00:09:09.610
20 megabytes a second.

00:09:09.610 --> 00:09:12.390
This is what's called
uncompressed SD video in the

00:09:12.550 --> 00:09:14.450
broadcast television market.

00:09:14.450 --> 00:09:18.700
This is a standard definition signal,
digital signal that you would use

00:09:18.700 --> 00:09:22.580
for normal television broadcasts
like you receive in your home.

00:09:22.580 --> 00:09:25.880
It's uncompressed,
which means there's no compression

00:09:25.900 --> 00:09:28.280
artifacts or anything like that.

00:09:28.300 --> 00:09:30.580
This is the type, well,
I'll go ahead and play the

00:09:30.580 --> 00:09:34.130
demo first and we'll have a
little more discussion about it.

00:09:51.700 --> 00:09:58.700
So the interesting thing about this is
this is running on a stock computer.

00:09:58.700 --> 00:10:01.310
We brought a FireWire drive
down here to the show,

00:10:01.310 --> 00:10:04.870
took this video, transferred it to the
internal hard drive,

00:10:04.900 --> 00:10:08.200
plugged it in, opened it up,
and played it.

00:10:08.340 --> 00:10:10.810
A couple of years ago,
this same type of demo,

00:10:10.970 --> 00:10:13.300
we would have had to
have a special computer.

00:10:13.300 --> 00:10:17.350
It was set aside just for this purpose,
loaded up with tons of RAM,

00:10:17.610 --> 00:10:21.050
special RAID array drive,
special SCSI 2 card plugged in,

00:10:21.160 --> 00:10:25.780
stripped down the OS, turn off VM,
turn off networking, turn off AppleTalk,

00:10:25.780 --> 00:10:28.060
turn off, hmm, printing,
because the other thing

00:10:28.430 --> 00:10:30.160
you always had to turn off.

00:10:30.160 --> 00:10:34.340
And then it would usually play.

00:10:34.370 --> 00:10:36.680
And it would only play
if you're in full screen.

00:10:36.700 --> 00:10:39.140
You'd never think of trying to do
compositing like dropping down a

00:10:39.150 --> 00:10:40.620
menu on top of the playing video.

00:10:40.900 --> 00:10:42.680
That was just completely unheard of.

00:10:42.800 --> 00:10:44.090
So that's where we've come.

00:10:44.280 --> 00:10:48.420
And now you can do SD video on a
normal system right out of the box.

00:10:48.640 --> 00:10:51.670
This just shows off the power
of Mac OS X and Quartz Extreme.

00:10:51.670 --> 00:10:53.060
Thanks, Tom.

00:10:53.060 --> 00:10:54.200
Very cool.

00:10:59.640 --> 00:11:02.300
I think it's safe to say that printing
is now turned on on that machine.

00:11:02.300 --> 00:11:02.890
Oh, yeah.

00:11:02.900 --> 00:11:03.720
Cool.

00:11:03.720 --> 00:11:05.020
Okay.

00:11:05.020 --> 00:11:06.610
Can we go back to slides?

00:11:08.560 --> 00:11:13.560
Okay, so let's talk about
QuickTime in Mac OS X.

00:11:13.560 --> 00:11:17.110
We introduced on Monday the
three pieces of QuickTime,

00:11:17.110 --> 00:11:19.590
QuickTime 6,
QuickTime Streaming Server 4,

00:11:19.590 --> 00:11:21.360
and the QuickTime Broadcaster.

00:11:21.360 --> 00:11:24.260
Each of these technologies
is built into the OS.

00:11:24.260 --> 00:11:25.580
It's built into Jaguar.

00:11:25.580 --> 00:11:28.900
The seed that you received on
Monday contains all the components,

00:11:28.900 --> 00:11:32.040
and we'll spend the rest of
the day talking about this.

00:11:32.110 --> 00:11:34.720
Now, this really is built into
the operating system.

00:11:34.720 --> 00:11:37.510
If we were to remove
QuickTime 6 from the OS,

00:11:37.510 --> 00:11:39.710
the OS simply won't boot.

00:11:39.860 --> 00:11:43.670
It's built in at a very low level,
and we've provided a number of different

00:11:43.670 --> 00:11:47.940
ways for you to be able to access this
technology from your applications.

00:11:48.050 --> 00:11:50.150
Of course,
there are Carbon API interfaces

00:11:50.150 --> 00:11:51.260
to QuickTime.

00:11:52.000 --> 00:11:55.330
There are Cocoa interfaces so that
you can access QuickTime functionality

00:11:55.330 --> 00:11:56.830
from within your Cocoa apps.

00:11:56.830 --> 00:12:00.250
We've got a very rich set of
functionality that you can access

00:12:00.360 --> 00:12:02.340
if you're a Java developer.

00:12:02.340 --> 00:12:05.220
And we've even got the system
built so that you can access the

00:12:05.230 --> 00:12:06.250
QuickTime app from within the
command line tools within Terminal.

00:12:06.350 --> 00:12:14.890
And now I'd like to ask Tom to
give you a little bit more detail

00:12:14.890 --> 00:12:20.110
about that integration in a little
demo we call Terminal Extreme.

00:12:20.630 --> 00:12:21.500
Thanks, Tim.

00:12:21.600 --> 00:12:23.420
We've got demo two up.

00:12:23.510 --> 00:12:26.700
So on the QuickTime team,
we were wondering what would happen

00:12:26.700 --> 00:12:31.220
if you took the user friendliness
of a 1960s command line interface

00:12:31.600 --> 00:12:35.580
and you coupled it with the
gratuitous multimedia of QuickTime.

00:12:35.660 --> 00:12:39.820
And so the first thing that we had to do,
just prove this is terminal.

00:12:39.820 --> 00:12:42.570
I've got to, like, type some commands in.

00:12:44.670 --> 00:12:46.720
So the first thing, of course,
we had to do is when making a

00:12:46.720 --> 00:12:49.600
QuickTime player for the terminal,
you have to remove all

00:12:49.600 --> 00:12:50.690
the vowels from it.

00:12:50.690 --> 00:12:52.710
So it's Q-T-P-L-Y-R.

00:12:52.710 --> 00:12:54.520
Okay, ready to go now.

00:12:54.520 --> 00:12:58.610
So we'll use the command line tool
and we'll feed it a movie here.

00:12:58.610 --> 00:13:01.720
And we'll do some
processing with that movie.

00:13:18.700 --> 00:13:21.480
There's a couple interesting things
to point out about this video.

00:13:21.480 --> 00:13:22.790
I'll just let it go here as we talk.

00:13:22.860 --> 00:13:26.780
A couple interesting things about here.

00:13:26.780 --> 00:13:30.830
The resolution of this is actually
larger than the postage stamp

00:13:30.890 --> 00:13:33.300
video that Tim showed earlier
that shipped with QuickTime 1.0,

00:13:33.640 --> 00:13:35.880
although the color fidelity
of the character set there

00:13:35.980 --> 00:13:37.440
is probably somewhat less.

00:13:37.540 --> 00:13:41.990
This seems like a really silly demo,
but the interesting thing

00:13:41.990 --> 00:13:46.640
to point out is this is real
QuickTime playing back a real video,

00:13:46.900 --> 00:13:50.360
and we're performing the playback and
then doing image processing on the

00:13:50.360 --> 00:13:53.520
movie and translating the luminance
values for each of the pixels into

00:13:53.530 --> 00:13:56.440
a set of characters that we display,
and then we output the

00:13:56.440 --> 00:13:58.220
VT100 escape sequences.

00:13:58.220 --> 00:14:00.880
If you told me that in 2002,
I'd still be coding

00:14:00.920 --> 00:14:02.760
VT100 escape sequences.

00:14:02.760 --> 00:14:05.230
But that's what it does,
and it calls put char and

00:14:05.230 --> 00:14:08.390
outputs into the terminal window,
and then they come up.

00:14:08.570 --> 00:14:11.840
So this just shows that this
stuff is accessible anywhere.

00:14:11.840 --> 00:14:16.140
You can write CGI scripts, Perl scripts,
command line tools to do processing,

00:14:16.140 --> 00:14:16.790
image processing.

00:14:16.910 --> 00:14:17.890
That sort of thing.

00:14:17.900 --> 00:14:20.620
And it's all just built
right into the system.

00:14:20.620 --> 00:14:23.130
We actually talk a little bit
more about this type of image

00:14:23.250 --> 00:14:26.800
processing and processing using
QuickTime later today in the 602

00:14:26.800 --> 00:14:28.620
video intensive application session.

00:14:28.620 --> 00:14:30.620
Back to Tim.

00:14:30.620 --> 00:14:32.620
Great, thanks Tom.

00:14:32.620 --> 00:14:34.410
Can we go back to slides?

00:14:40.000 --> 00:14:44.840
On Monday we introduced this new
technology we call Quartz Extreme.

00:14:44.840 --> 00:14:47.350
And if you have anything
to do with graphics,

00:14:47.350 --> 00:14:52.090
2D or 3D graphics, or video,
Quartz Extreme is going

00:14:52.100 --> 00:14:54.920
to impact the work you do.

00:14:54.970 --> 00:14:58.240
QuickTime is also affected by this,
and we've got some great things

00:14:58.350 --> 00:15:01.160
going on that are going to make a
big difference in the performance

00:15:01.160 --> 00:15:02.440
of QuickTime going forward.

00:15:02.440 --> 00:15:05.770
And I want to talk a little bit
about a feature that we released with

00:15:05.860 --> 00:15:10.540
QuickTime 5 and talk about how Quartz
Extreme impacts that feature today.

00:15:10.540 --> 00:15:14.300
And then Tom's going to show you
a little bit about how it might be

00:15:14.300 --> 00:15:16.720
affecting QuickTime down the road.

00:15:16.720 --> 00:15:20.670
So in QuickTime 5 we introduced
this feature called Media Skins.

00:15:20.670 --> 00:15:24.010
Media Skins are a very simple
way to be able to take a piece of

00:15:24.010 --> 00:15:28.240
video and wrap a unique kind of
customized user interface around it.

00:15:28.240 --> 00:15:30.460
You can attach buttons to it.

00:15:30.460 --> 00:15:36.640
You can create these beautiful
non-rectangular shaped video clips.

00:15:36.660 --> 00:15:40.480
And kind of simulate
that sort of device feel.

00:15:40.530 --> 00:15:43.580
And people are using them
all over the web now.

00:15:43.640 --> 00:15:48.260
And I'm going to show you a couple
of them that we like and talk about

00:15:48.260 --> 00:15:50.820
how Quartz Extreme affects those.

00:15:51.100 --> 00:15:52.120
Okay.

00:15:52.120 --> 00:15:56.400
So we're just going to bring up
a real basic simple skin here.

00:15:56.400 --> 00:15:59.280
Go ahead and activate it.

00:15:59.280 --> 00:16:00.620
This is a QuickTime movie.

00:16:00.620 --> 00:16:01.600
This is a QuickTime movie.

00:16:01.610 --> 00:16:03.300
You can see that it's
running in QuickTime Player.

00:16:03.380 --> 00:16:04.680
Thank you.

00:16:04.720 --> 00:16:06.280
You can see that it has
a custom window shape.

00:16:06.520 --> 00:16:10.160
And it has quite a bit of
animation graphics running

00:16:10.160 --> 00:16:12.170
down the back side of it.

00:16:12.190 --> 00:16:15.420
And what's implementing is a calculator.

00:16:17.540 --> 00:16:22.620
If you thought Scott Forstall's demo
of the metal gradient being able

00:16:22.620 --> 00:16:24.260
to be in the calculator was cool.

00:16:24.260 --> 00:16:24.960
Well, there you go.

00:16:25.360 --> 00:16:28.880
More calculator than you
probably ever wanted.

00:16:28.940 --> 00:16:34.400
But the interesting thing to
note about this is it is a --

00:16:34.400 --> 00:16:36.300
I'm trying to find the drag area.

00:16:36.300 --> 00:16:36.700
There we go.

00:16:36.700 --> 00:16:37.900
It is actually a movie.

00:16:37.900 --> 00:16:39.960
You can see that there's this
drop shadow being placed in

00:16:40.050 --> 00:16:41.150
there with Quartz Extreme.

00:16:41.200 --> 00:16:44.080
And this is important when you
talk about these windows that

00:16:44.170 --> 00:16:45.780
have very complicated shapes.

00:16:45.800 --> 00:16:49.090
You need some assistance of a
sophisticated graphic system down

00:16:49.090 --> 00:16:51.450
the lower levels of the OS to
make this really perform well.

00:16:51.600 --> 00:16:53.910
And today,
you have -- people tend to produce

00:16:54.340 --> 00:16:58.130
simpler skins with less complicated
edges to deal with this fact.

00:16:58.430 --> 00:17:02.290
When you talk about a more advanced
system like Quartz Extreme,

00:17:02.560 --> 00:17:06.230
then you can take advantage of this
and do these more sophisticated things.

00:17:07.390 --> 00:17:12.470
So what are we going to get in the
future with this Quartz Extreme stuff?

00:17:12.670 --> 00:17:17.060
Well, here's a quick demo we put
together of sort of where skins are

00:17:17.060 --> 00:17:19.330
going to be going in the future.

00:17:21.320 --> 00:17:25.810
So here's a movie playing back in
sort of a custom window you see here.

00:17:26.000 --> 00:17:27.430
Drag it around.

00:17:27.570 --> 00:17:32.820
But it would be kind of interesting if
we could take advantage of more advanced

00:17:32.820 --> 00:17:38.920
features of the OS and integrate those
in with the skin and with the movie.

00:17:38.920 --> 00:17:38.920
So...

00:17:40.360 --> 00:17:46.690
Back off, fade out, and turn around.

00:17:46.810 --> 00:17:48.330
This is actually a live movie.

00:17:48.470 --> 00:17:49.400
Yeah, this is a live movie.

00:17:49.400 --> 00:17:51.160
I don't know if I can
get the camera here.

00:18:02.400 --> 00:20:10.900
[Transcript missing]

00:20:11.310 --> 00:20:13.920
As you know,
MPEG-4 is a very rich standard.

00:20:13.920 --> 00:20:17.680
It encompasses a wide
range of technologies,

00:20:17.750 --> 00:20:20.280
and in many ways,
the technologies in MPEG-4

00:20:20.280 --> 00:20:23.430
parallel the kinds of things that
have been in QuickTime itself.

00:20:23.440 --> 00:20:28.800
You've heard Frank Casanova talk a
lot about this DNA-level relationship.

00:20:28.800 --> 00:20:33.200
We're not entirely sure what that means,
but I think he must be referring

00:20:33.280 --> 00:20:37.700
to the fact that QuickTime is the
basis for the file format for MPEG-4.

00:20:37.700 --> 00:20:39.450
We're really happy about that.

00:20:39.450 --> 00:20:42.630
It's a very powerful file format,
and we think it's going to be

00:20:42.670 --> 00:20:44.730
able to serve MPEG-4 very well.

00:20:44.740 --> 00:20:49.400
Now, apart from the fact that the
technologies that are built into

00:20:49.400 --> 00:20:54.230
MPEG-4 are in themselves exciting
and powerful technologies,

00:20:54.230 --> 00:20:57.560
the other fundamental thing
about MPEG-4 that makes it such

00:20:57.560 --> 00:21:01.140
an interesting platform is the
fact that it's an open standard.

00:21:01.140 --> 00:21:04.000
This means that there are companies.

00:21:04.040 --> 00:21:07.680
Companies anywhere in the world
can get involved with MPEG-4.

00:21:07.700 --> 00:21:11.150
They can get involved with MPEG-4 and
create products and focus on the parts

00:21:11.150 --> 00:21:14.470
of the product that are most interesting
to them and know that there will be a

00:21:14.880 --> 00:21:17.790
community of developers and products
who are helping to fill out that kind

00:21:17.800 --> 00:21:21.040
of end-to-end chain of technologies
and products that customers need to

00:21:21.040 --> 00:21:23.140
be able to do the work they want to do.

00:21:23.160 --> 00:21:26.480
About a year and a half ago,
Apple got together with Philips and

00:21:26.480 --> 00:21:30.440
Cisco and Sun and IBM and Casena,
and we created this industry group called

00:21:30.440 --> 00:21:32.780
the Internet Streaming Media Alliance.

00:21:32.860 --> 00:21:36.220
And the idea there was,
given this cool open standard called

00:21:36.290 --> 00:21:42.000
MPEG-4... Let's try and take some
actions to try and accelerate the

00:21:42.000 --> 00:21:47.030
adoption of this technology and others
to forward streaming on the Internet.

00:21:47.060 --> 00:21:50.360
And over the last year and a half,
we've been able to pick up a

00:21:50.420 --> 00:21:52.300
whole bunch of new members,
and we're doing a lot

00:21:52.300 --> 00:21:53.440
of really cool stuff.

00:21:53.520 --> 00:21:59.300
The very first work that we undertook
was to help standardize how you stream

00:21:59.300 --> 00:22:02.390
MPEG-4 content over an IP network.

00:22:02.460 --> 00:22:05.320
And that's been... That's rolled
out now and people are implementing.

00:22:05.320 --> 00:22:07.380
We've got a lot of
interoperability work going on.

00:22:07.850 --> 00:22:10.790
And if you're interested in this or
other things related to deployment

00:22:10.790 --> 00:22:14.810
of streaming media on the Internet,
I would invite all of you to come and

00:22:14.840 --> 00:22:18.720
look at the ISMA organization and see
if maybe there's a place for you there.

00:22:20.750 --> 00:22:24.640
Now, ISMA is one organization
that's focused on MPEG-4,

00:22:24.640 --> 00:22:31.700
but it doesn't just involve industry
fora like ISMA and MPEG-4 industry forum.

00:22:31.700 --> 00:22:35.420
There are also other standards
bodies that are taking a very

00:22:35.420 --> 00:22:39.460
close look at MPEG-4 in order to be
able to drive the next generation

00:22:39.460 --> 00:22:41.510
of their technology focus areas.

00:22:41.520 --> 00:22:43.960
Highlight a couple of these.

00:22:43.980 --> 00:22:46.510
3GPP,
this is the emerging standard for next

00:22:46.510 --> 00:22:48.800
generation wireless communications.

00:22:49.210 --> 00:22:50.500
It's going to be a really big deal.

00:22:50.500 --> 00:22:54.270
There's a lot of development going on
in Europe right now related to 3GPP.

00:22:54.370 --> 00:22:56.820
There's a lot of development
taking place in Japan and Asia.

00:22:56.820 --> 00:22:59.770
Pretty soon there will probably
be stuff happening in the U.S.

00:22:59.920 --> 00:23:02.470
We're generally behind on
these things in the U.S., but

00:23:02.580 --> 00:23:04.090
it's starting to move ahead.

00:23:04.100 --> 00:23:06.640
And it's all based on MPEG-4.

00:23:06.750 --> 00:23:08.780
It's very, very cool.

00:23:08.780 --> 00:23:12.640
Motion JPEG-2000,
also based on the MPEG-4 file format,

00:23:12.640 --> 00:23:15.860
which is in turn based upon
the QuickTime file format.

00:23:15.860 --> 00:23:18.260
The next generation of digital radio.

00:23:18.600 --> 00:23:20.100
All going to be MPEG-4 based.

00:23:20.100 --> 00:23:21.640
Very, very cool.

00:23:21.640 --> 00:23:24.550
And you can already see,
even at this early date,

00:23:24.570 --> 00:23:28.530
the way that the open
standard is driving,

00:23:28.530 --> 00:23:31.890
catalyzing growth in
whole new market areas.

00:23:31.960 --> 00:23:36.260
So let's talk a little bit about
Apple's implementation of MPEG-4.

00:23:37.760 --> 00:23:42.150
We have focused on three basic
aspects of the overall spec.

00:23:42.240 --> 00:23:45.380
We've sort of kind of gone
for the sweet spot in MPEG-4.

00:23:45.380 --> 00:23:48.070
Over time, I'm sure we'll add
additional functionalities.

00:23:48.090 --> 00:23:50.500
But in this first release,
we wanted to focus on the

00:23:50.530 --> 00:23:53.480
basics of audio and video,
compression, decompression,

00:23:53.580 --> 00:23:56.160
and the integration with
the rest of QuickTime.

00:23:56.520 --> 00:24:00.260
We've put a lot of effort into our
own MPEG-4 video codec technology,

00:24:00.260 --> 00:24:04.400
and we've integrated into QuickTime so
it's truly a first-class citizen.

00:24:04.400 --> 00:24:07.880
We've been working in a variety
of interoperability trials,

00:24:08.010 --> 00:24:10.840
both with the MPEG-4
Industry Forum as well as with

00:24:10.840 --> 00:24:13.990
the ISMA and other organizations,
and we've got a great

00:24:13.990 --> 00:24:15.540
story to tell there.

00:24:15.540 --> 00:24:19.370
And we've also been able to integrate
a lot of advanced functionality into

00:24:19.370 --> 00:24:23.580
the encoder that you would normally
associate with a professional encoder.

00:24:23.580 --> 00:24:26.400
But because we can
control the technology,

00:24:26.520 --> 00:24:31.330
we've been able to offer these things
even in the free download of QuickTime.

00:24:31.330 --> 00:24:32.990
So that's pretty cool.

00:24:32.990 --> 00:24:36.720
On the AAC side, again,
an equivalent focus on quality.

00:24:36.720 --> 00:24:39.690
We looked around and we said,
who's got the best

00:24:39.720 --> 00:24:41.490
AAC encoding technology?

00:24:41.490 --> 00:24:43.340
And it turns out it's Dolby.

00:24:43.340 --> 00:24:44.510
No big surprise.

00:24:44.540 --> 00:24:49.520
They've been focused on hi-fi audio
compression and delivery for a long time.

00:24:49.650 --> 00:24:53.580
And they have truly awesome
technology for AAC encoding.

00:24:53.580 --> 00:24:56.500
And we've integrated that technology
into the heart of QuickTime.

00:24:56.520 --> 00:25:00.550
We've optimized the technology
so that it will run really fast,

00:25:00.590 --> 00:25:03.830
so you can do all kinds of cool
things with it in your applications.

00:25:04.170 --> 00:25:09.980
And it implements a true variable bitrate
encoding for the first time in QuickTime.

00:25:10.370 --> 00:25:12.000
Last of all,
we wanted to integrate this into

00:25:12.000 --> 00:25:15.650
QuickTime in a way that would ensure
that your applications will just work.

00:25:15.690 --> 00:25:18.890
One of the things we're very proud of
in QuickTime is that over the years,

00:25:18.920 --> 00:25:21.740
as we've added new functionality,
new capabilities,

00:25:21.740 --> 00:25:25.310
we've worked very hard to
preserve API-level compatibility

00:25:25.310 --> 00:25:27.300
with all of your applications.

00:25:27.300 --> 00:25:30.630
And this remains true today
with the MPEG-4 integration.

00:25:30.630 --> 00:25:34.140
So if you've got applications that know
how to process video and audio already,

00:25:34.140 --> 00:25:37.030
you're going to be able to open up
these MPEG-4 files and work with

00:25:37.030 --> 00:25:38.820
them without any additional work.

00:25:38.860 --> 00:25:41.930
And this is because we've built
the importers and the exporters

00:25:42.710 --> 00:25:46.700
leveraging the standard APIs that
you're already accustomed to.

00:25:46.700 --> 00:25:47.800
Very cool.

00:25:47.800 --> 00:25:50.960
So I'd like to ask Tom,
you've seen lots of playback demos.

00:25:50.960 --> 00:25:54.820
I wanted to ask Tom to show a little demo
of how the encoding side of this works.

00:25:54.820 --> 00:25:57.840
It's pretty similar to
what you've already seen,

00:25:57.840 --> 00:25:58.390
but have a go.

00:25:58.680 --> 00:25:59.600
All right.

00:25:59.600 --> 00:26:03.470
So here we have a clip that
we got off of a DVD full of

00:26:03.470 --> 00:26:07.000
public domain clip art movies.

00:26:07.000 --> 00:26:09.200
So therefore we could use it here
without any copyright issues.

00:26:09.390 --> 00:26:14.270
It's a DV stream of a panda.

00:26:14.690 --> 00:26:19.040
So what do you do if you want to make an
MPEG-4 out of some video that you have,

00:26:19.040 --> 00:26:21.420
a movie that you have,
within your application?

00:26:21.460 --> 00:26:24.770
Well, it's the standard
QuickTime export dialog.

00:26:25.290 --> 00:26:29.610
And when you're on a system
that's got QuickTime 6 in it,

00:26:29.620 --> 00:26:32.490
there's a new option, moving to MPEG-4.

00:26:33.730 --> 00:26:36.790
QuickTime has built into it the
ability to use export and provides

00:26:36.800 --> 00:26:40.700
user interface to let the user
configure all the options they want

00:26:40.990 --> 00:26:43.830
with respect to the MPEG-4 encoding.

00:26:44.010 --> 00:26:50.730
I'm going to do a high data rate,
non-ISMA compliant MPEG-4 here.

00:26:50.780 --> 00:26:52.860
Guides the user through the steps
of all the settings for MPEG-4.

00:26:52.860 --> 00:26:55.700
Your application doesn't
have to be concerned with it.

00:26:55.700 --> 00:26:58.910
Save it away here.

00:27:01.830 --> 00:27:06.680
I don't need that backup.

00:27:06.720 --> 00:27:08.800
So now QuickTime is going through
its normal export process,

00:27:08.800 --> 00:27:12.560
doing the video encode,
doing the audio encode, saving it out,

00:27:12.560 --> 00:27:16.890
and also converting the data
from the native format that we've

00:27:16.890 --> 00:27:21.640
got right now into the special
MPEG-4 compliant version for ISMA.

00:27:21.640 --> 00:27:25.120
So in Tom's demo, he's showing you how
to make an MPEG-4 file.

00:27:25.130 --> 00:27:30.240
Of course, you can integrate MPEG-4
video or AAC audio right into

00:27:30.240 --> 00:27:32.490
standard QuickTime movies.

00:27:32.550 --> 00:27:34.890
It doesn't have to be an MPEG-4 file.

00:27:35.030 --> 00:27:37.770
That's sort of what you
get for free in QuickTime.

00:27:38.040 --> 00:27:38.690
That's right.

00:27:38.730 --> 00:27:41.760
But this is actually a valid MPEG-4 file,
as they say.

00:27:41.780 --> 00:27:44.890
Now I've got to go find my
thing after I created it.

00:27:44.890 --> 00:27:46.540
PandaEats.mpeg4.

00:27:46.540 --> 00:27:49.540
You can see it's an MPEG-4 file.

00:27:49.540 --> 00:27:52.300
Just open it back up.

00:27:52.350 --> 00:27:54.210
And there it is.

00:27:55.810 --> 00:27:58.200
The Panda doesn't say a whole lot,
unfortunately.

00:27:58.200 --> 00:28:01.510
He kind of just grumbles down there.

00:28:01.510 --> 00:28:03.210
So there you go.

00:28:03.210 --> 00:28:05.180
MPEG-4 encoding built into QuickTime.

00:28:11.000 --> 00:28:14.860
So, can we go back to slides?

00:28:14.860 --> 00:28:18.670
So if you've paid any attention at all
to what's been going on with MPEG-4,

00:28:18.830 --> 00:28:22.400
you're probably aware of a little
bit of controversy revolving

00:28:22.400 --> 00:28:25.140
around the MPEG-4 licensing.

00:28:25.200 --> 00:28:29.770
Spent a few minutes talking about that.

00:28:30.300 --> 00:30:11.800
[Transcript missing]

00:30:11.900 --> 00:30:16.190
So this discussion is going to carry
forward and we'll see how it goes.

00:30:16.200 --> 00:30:19.780
But the QuickTime engineering team
always has something to say about

00:30:19.780 --> 00:30:21.150
these kinds of controversies.

00:30:21.360 --> 00:30:25.240
And so we put together a little
video for your enjoyment this year.

00:30:25.240 --> 00:30:28.400
We call it "Two Pennies
for Your Thoughts." If we

00:30:28.400 --> 00:30:29.440
could run that video.

00:30:29.440 --> 00:30:30.560
We need the demo machine, please.

00:30:30.560 --> 00:30:32.600
So get demo two back up again.

00:30:32.640 --> 00:30:35.190
I don't know if this is an example
of compelling content or not,

00:30:35.190 --> 00:30:35.880
but we'll see.

00:30:35.880 --> 00:30:38.560
This is in the classic
tradition of the stupid movie.

00:30:38.560 --> 00:30:43.550
At Cinepeg 4 theaters,
change your change is good.

00:30:43.550 --> 00:30:47.520
Yes,
we're making changes to better serve you.

00:30:47.530 --> 00:30:51.480
Changes that allow us to
present more blockbusters.

00:30:51.480 --> 00:30:54.240
Changes the press is noticing.

00:30:54.240 --> 00:30:56.720
Changes that you'll notice too.

00:30:56.720 --> 00:31:00.690
So we invite you down to
the local San Jose Cinepeg

00:31:00.690 --> 00:31:03.720
multiplex to take in a show.

00:31:03.720 --> 00:31:06.910
Arriving at the theater,
you'll meet our courteous and efficient

00:31:06.910 --> 00:31:11.320
staff that will explain a few of the
improvements we're making for you.

00:31:11.320 --> 00:31:12.320
Good.

00:31:12.350 --> 00:31:16.690
You gotta sign the license agreement.

00:31:17.130 --> 00:31:20.880
After signing the license agreement,
simply proceed into the theater.

00:31:20.880 --> 00:31:24.140
For faster seating,
please be sure to sign the agreement

00:31:24.140 --> 00:31:25.540
on the back of your ticket.

00:31:25.540 --> 00:31:27.890
If you forget to sign, don't worry.

00:31:28.010 --> 00:31:30.940
Our staff is on hand to
make sure you comply.

00:31:30.940 --> 00:31:33.340
Dude,
you gotta sign the license agreement.

00:31:36.800 --> 00:31:41.000
So take your seats and enjoy the
show along with other moviegoers who

00:31:41.000 --> 00:31:45.260
understand that at Cinepeg Theatres,
we'll take care of you.

00:31:47.550 --> 00:31:50.280
As you focus on enjoying
the presentation,

00:31:50.280 --> 00:31:54.980
our management team will keep
track of all those pesky details.

00:31:56.420 --> 00:31:59.930
You'll love our innovative
Cinepeg PayBreaks.

00:31:59.930 --> 00:32:03.470
Unlike other theaters,
you'll find customer-friendly,

00:32:03.480 --> 00:32:06.400
per-seat coin slots within easy reach.

00:32:06.400 --> 00:32:10.400
You're part of the action.

00:32:11.500 --> 00:32:15.450
If you're new to Cinepeg Feeders,
our helpful staff will point out

00:32:15.450 --> 00:32:19.790
the procedures we've instituted
to guarantee the most enjoyable

00:32:19.880 --> 00:32:23.970
and compliant viewing experience.

00:32:27.420 --> 00:32:31.390
For those on a tighter budget,
enjoy our audio-only program

00:32:31.400 --> 00:32:33.480
at no additional cost to you.

00:32:35.900 --> 00:32:41.330
To help avoid unwanted expense,
our team is eager to assist.

00:32:44.200 --> 00:32:48.600
At Cinepeg 4 Theaters,
we're committed to customer satisfaction.

00:32:48.600 --> 00:32:51.200
You can terminate the
agreement at any time.

00:32:51.200 --> 00:32:52.220
No questions asked.

00:32:57.500 --> 00:33:03.570
Remember, at Cinepick 4 Theaters,
we're making changes for you.

00:33:13.920 --> 00:33:16.200
from Wyoming, Alaska, Hawaii,
or continental United States.

00:33:16.200 --> 00:33:17.060
Void were prohibited.

00:33:17.060 --> 00:33:19.250
Animals were not harmed
during the testing of Cinepec

00:33:19.260 --> 00:33:20.490
pay break technologies.

00:33:34.110 --> 00:33:36.040
So that was two pennies
for your thoughts.

00:33:36.040 --> 00:33:40.990
So things have been moving
forward on the licensing front,

00:33:40.990 --> 00:33:43.060
and I'd say we are cautiously optimistic.

00:33:43.170 --> 00:33:47.000
We've included all the
technologies in the seat of Jaguar.

00:33:47.000 --> 00:33:50.480
We hope you'll take a look at that,
and we fully expect we'll be in

00:33:50.480 --> 00:33:54.080
the marketplace with a GM product
before too much longer here.

00:33:54.080 --> 00:33:56.750
So that's the MPEG-4 licensing situation.

00:33:57.730 --> 00:33:58.180
Great.

00:33:58.180 --> 00:34:01.860
Let's take a look at another
new item in QuickTime 6.

00:34:01.970 --> 00:34:03.900
This is called JPEG 2000.

00:34:03.900 --> 00:34:08.770
JPEG 2000 is sort of the next
generation still image format

00:34:09.080 --> 00:34:11.920
follow-up to the JPEG standard
that everybody knows and loves.

00:34:11.920 --> 00:34:14.710
And it has some unique characteristics.

00:34:14.710 --> 00:34:20.900
First of all, it is 30% more efficient
than JPEG on average.

00:34:21.020 --> 00:34:23.940
Supports both lossy
and lossy compression,

00:34:23.970 --> 00:34:24.910
just like JPEG does.

00:34:24.910 --> 00:34:28.290
Instead of being DCT-based
compression like JPEG,

00:34:28.360 --> 00:34:30.340
it's now a wavelet-based compression.

00:34:30.340 --> 00:34:34.540
This will provide sort of a reduction in
the blockiness that you associate with

00:34:34.540 --> 00:34:36.750
JPEG when you've not got enough bits.

00:34:37.500 --> 00:34:40.110
It's got the potential to
support very deep color,

00:34:40.110 --> 00:34:42.580
sort of greater than 8
bits per pixel channel.

00:34:42.580 --> 00:34:43.620
It's very cool.

00:34:43.620 --> 00:34:49.570
It's got all kinds of features for
making more elaborate encodings to deal

00:34:49.570 --> 00:34:53.110
with more sophisticated kinds of files.

00:34:53.120 --> 00:34:57.030
In this new world of MPEG-4
licensing sensitivities,

00:34:57.030 --> 00:35:02.520
we are aware that they are working
towards a royalty-free licensing model.

00:35:02.520 --> 00:35:05.110
We fully expect this is going
to be a very important standard

00:35:05.110 --> 00:35:07.480
for not only for still images,
but also for JPEG.

00:35:07.480 --> 00:35:09.330
We're also looking at the possibility
of using the new generation of

00:35:09.330 --> 00:35:11.640
JPEG-based compression to create a more
sophisticated version of the MPEG-4.

00:35:11.740 --> 00:35:13.160
We're also looking at the possibility
of using the new generation of

00:35:13.170 --> 00:35:14.980
JPEG-based compression to create a more
sophisticated version of the MPEG-4.

00:35:15.060 --> 00:35:17.670
So now Tom's going to show us a
little bit about how that works.

00:35:17.780 --> 00:35:20.830
Before he starts,
so this is a new codec technology that's

00:35:20.830 --> 00:35:24.990
going to be built into QuickTime 6,
so you should be able to try this out.

00:35:25.000 --> 00:35:27.130
It's not actually in the
Jaguar seed that you've got,

00:35:27.130 --> 00:35:30.010
but we will provide an update at some
point here before too much longer,

00:35:30.010 --> 00:35:32.240
and you'll be able to
play with this yourself.

00:35:32.240 --> 00:35:33.890
Go ahead, Tom.

00:35:34.050 --> 00:35:34.280
Okay.

00:35:34.280 --> 00:35:37.480
So this very scary image was taken.

00:35:37.480 --> 00:35:39.230
It was taken by one of
the QuickTime engineers

00:35:39.230 --> 00:35:40.260
on the QuickTime team.

00:35:40.260 --> 00:35:43.980
And this is the raw
Photoshop file uncompressed.

00:35:44.410 --> 00:35:47.240
It's around 35 megabytes, I believe.

00:35:47.450 --> 00:35:49.560
Pretty big.

00:35:50.890 --> 00:35:57.740
Producing a JPEG 2000 picture from
QuickTime is as simple as exporting

00:35:58.990 --> 00:36:03.770
and selecting the JPEG 2000 codec,
dialing in the quality

00:36:03.770 --> 00:36:06.560
level that you want,
saying okay, and you're good to go.

00:36:06.650 --> 00:36:09.430
So once again,
applications that support the standard

00:36:09.430 --> 00:36:12.750
QuickTime export can just export
to JPEG 2000 as a brand new feature

00:36:12.810 --> 00:36:16.590
and you can charge more money for
your application in the next update.

00:36:17.580 --> 00:36:22.000
Similarly,
importing or opening JPEG 2000 pictures,

00:36:22.040 --> 00:36:22.440
same deal.

00:36:22.440 --> 00:36:24.180
If you support the standard
graphics importers,

00:36:24.310 --> 00:36:27.860
you get the ability to open
those JPEG 2000 images.

00:36:28.000 --> 00:36:31.540
So let's do some comparisons here.

00:36:31.690 --> 00:36:33.600
Let's go with the medium quality first.

00:36:33.750 --> 00:36:37.680
So classic JPEG here,
compressing that same image,

00:36:37.680 --> 00:36:42.590
we've compressed it with a medium
level of quality down to 168K.

00:36:42.700 --> 00:36:46.060
The JPEG 2000 file,
compressed with approximately

00:36:46.060 --> 00:36:50.420
the same quality settings,
is smaller at 92K.

00:36:50.420 --> 00:36:53.800
So let's open those two files.

00:36:56.410 --> 00:36:59.420
So there's the JPEG,
and here's the JPEG 2000.

00:36:59.460 --> 00:37:02.300
And I'm going to switch back and
forth between the two of them.

00:37:02.360 --> 00:37:05.260
So this is JPEG 2000, that's JPEG.

00:37:05.260 --> 00:37:10.370
That's JPEG 2000, and that's JPEG.

00:37:11.510 --> 00:37:12.380
That's APIC 2000?

00:37:12.490 --> 00:37:14.480
I feel like an optician here.

00:37:14.490 --> 00:37:18.430
So, smaller files, same quality.

00:37:21.520 --> 00:37:25.500
But if you want to crank the quality down
even further to make the file smaller,

00:37:25.500 --> 00:37:30.080
here's JPEG with the least quality
compression that you can set with

00:37:30.080 --> 00:37:31.700
JPEG as it's shipping in QuickTime.

00:37:31.700 --> 00:37:33.620
It produces a 68K file.

00:37:33.620 --> 00:37:36.260
JPEG 2000 produces a 56K file.

00:37:36.260 --> 00:37:38.780
JPEG 2000 can actually,
it scales a little bit better,

00:37:38.780 --> 00:37:41.360
so you can actually crank the
quality down even further.

00:37:41.360 --> 00:37:45.000
But this quality setting,
while it produces a smaller file,

00:37:45.000 --> 00:37:47.680
gives about the same
quality as JPEG does.

00:37:47.680 --> 00:37:50.040
So here's the JPEG file.

00:37:51.520 --> 00:37:54.290
And then the JPEG 2000 file.

00:37:55.670 --> 00:37:57.860
So this is JPEG 2000,
and that's the JPEG now.

00:37:57.860 --> 00:38:01.610
It's going to be a little hard to see,
but if you look at this red area of

00:38:01.620 --> 00:38:06.580
the fish right here above the eye,
you can see, well, I can see,

00:38:06.580 --> 00:38:10.270
some blocky-type artifacts that
are caused by the fact that

00:38:10.310 --> 00:38:12.440
JPEG is a DCT-based transform.

00:38:12.440 --> 00:38:15.470
JPEG 2000,
those artifacts go away because

00:38:15.470 --> 00:38:17.380
it's a wavelet-based encode.

00:38:17.380 --> 00:38:20.610
So, smaller file, better quality.

00:38:20.610 --> 00:38:23.000
And that's JPEG 2000.

00:38:23.000 --> 00:38:23.420
Great.

00:38:23.560 --> 00:38:24.780
Back to slides.

00:38:28.410 --> 00:38:32.500
So that'll be in the
upcoming QuickTime 6 release.

00:38:32.670 --> 00:38:35.300
So that's what we're going to
cover for QuickTime 6 today.

00:38:35.300 --> 00:38:37.940
I want to move on to some of
the other technologies that

00:38:37.990 --> 00:38:39.290
we're putting into Jaguar.

00:38:39.290 --> 00:38:42.840
QuickTime Streaming Server 4.

00:38:44.820 --> 00:38:47.680
So I think I want to start
with this following quote here,

00:38:47.680 --> 00:38:51.130
and I'll read this to you just
because it's a little bit hard to see.

00:38:51.150 --> 00:38:54.100
After we spent weeks in arduous
testing and watching our

00:38:54.100 --> 00:38:57.310
favorite movie over and over,
our numbers showed that Apple's

00:38:57.410 --> 00:39:01.430
Darwin streaming server and QuickTime 5
player package deserves top honors.

00:39:01.440 --> 00:39:05.410
Apple proved it could deliver a robust
server and client that performed well.

00:39:05.420 --> 00:39:08.910
Its images beat the competition
over a range of bandwidths.

00:39:09.180 --> 00:39:10.900
Best of all,
the software is free regardless of

00:39:11.060 --> 00:39:12.780
which operating system you're running.

00:39:13.220 --> 00:39:15.660
This was published in
Network Computing Review last month,

00:39:15.740 --> 00:39:18.680
and they were comparing the
QuickTime streaming server to

00:39:18.680 --> 00:39:22.640
the Windows Media server and to
Real Network's Real Systems server.

00:39:22.640 --> 00:39:24.910
So that's quite an accomplishment.

00:39:24.920 --> 00:39:27.800
We're really quite proud of this.

00:39:27.940 --> 00:39:32.800
This is a testament not only to the
hard work that's gone on at Apple,

00:39:32.800 --> 00:39:34.860
but of course,
since this is an open source project,

00:39:34.860 --> 00:39:38.180
this is a testament to the hard
work of the community of developers

00:39:38.180 --> 00:39:41.000
who have gotten involved with
QuickTime streaming server,

00:39:41.000 --> 00:39:42.580
the Darwin streaming server, if you will.

00:39:43.160 --> 00:39:45.370
And we're really proud of the fact
that we have a lot of people who

00:39:45.370 --> 00:39:47.660
have helped move this forward,
have helped ensure that the server

00:39:47.660 --> 00:39:51.710
would be available on virtually every
major operating system out there,

00:39:51.720 --> 00:39:54.380
and we're pretty psyched about this.

00:39:54.520 --> 00:39:58.250
QuickTime streaming server 4 introduces
a whole bunch of new features,

00:39:58.360 --> 00:40:00.360
and I'd like to talk
about those a little bit.

00:40:00.360 --> 00:40:03.620
Of course,
it starts with native MPEG-4 streaming,

00:40:03.730 --> 00:40:06.840
so you would expect we're going
to support MPEG-4 in the client.

00:40:06.860 --> 00:40:08.840
We're going to certainly
support it in the server.

00:40:08.950 --> 00:40:10.840
It also supports MP3 audio streaming.

00:40:10.840 --> 00:40:12.940
There's a new set of features that
we're going to be using in the future,

00:40:13.010 --> 00:40:16.940
a new set of interfaces to allow
you to administer the servers.

00:40:16.940 --> 00:40:18.800
We've made some improvements
to skip protection.

00:40:18.940 --> 00:40:22.940
We've incorporated support
for instant-on streaming.

00:40:22.960 --> 00:40:26.920
This is actually a feature that is
a coordinated development effort

00:40:27.080 --> 00:40:28.940
between the client software and
the streaming server software.

00:40:28.940 --> 00:40:30.940
We'll talk a little bit
more about that in a minute.

00:40:30.940 --> 00:40:34.940
And then there have been a number
of performance enhancements.

00:40:35.000 --> 00:40:39.230
With the QuickTime streaming server,
you can now drive around 4,000 modem

00:40:39.240 --> 00:40:42.700
rate streams off of a single box.

00:40:42.740 --> 00:40:45.810
And you're confident that you'll
be able to swamp pretty much any

00:40:45.810 --> 00:40:46.720
network interface you can find.

00:40:49.200 --> 00:40:52.600
So, I'll show you a little screenshot
here of the administration interface.

00:40:52.600 --> 00:40:53.860
This is a really big deal.

00:40:53.860 --> 00:40:58.060
If you're a company that's setting up
a large number of streaming servers,

00:40:58.060 --> 00:41:01.920
you're going to have an administration
hassle if you have to go to every single

00:41:01.960 --> 00:41:04.060
machine to figure out what's going on.

00:41:04.060 --> 00:41:08.100
We've built into the streaming server
the ability to remotely administer

00:41:08.260 --> 00:41:11.240
all the servers from a web browser,
and that's new for

00:41:11.240 --> 00:41:13.440
QuickTime Streaming Server 4.

00:41:13.800 --> 00:41:15.250
Let's talk about Instant On.

00:41:15.250 --> 00:41:17.090
We demoed this as a client-side feature.

00:41:17.240 --> 00:41:20.700
Tom's going to show you a little bit
more about how that works and talk about

00:41:20.700 --> 00:41:24.660
the underlying technology there so you
can understand what's really going on.

00:41:24.660 --> 00:41:25.560
Tom?

00:41:25.560 --> 00:41:26.600
Okay.

00:41:26.600 --> 00:41:27.100
Have at it.

00:41:29.840 --> 00:41:32.560
Those of you who were at the keynote
saw this demonstration of Instant On,

00:41:32.560 --> 00:41:34.740
but we're going to go over
it in a little more detail,

00:41:34.740 --> 00:41:36.710
talk about what's actually going on here.

00:41:36.720 --> 00:41:41.000
So first, we're going to open up a
classic streaming file.

00:41:41.000 --> 00:41:44.360
And you can see that we come up,
we have the standard queue buffering.

00:41:44.360 --> 00:41:46.830
There's a two-second
buffering that takes place,

00:41:47.000 --> 00:41:48.840
and then the video starts to play.

00:41:48.840 --> 00:41:52.410
Now, the reason the buffering goes on is
to deal with the fact that networks

00:41:52.460 --> 00:41:54.480
don't have a continuous bandwidth.

00:41:55.450 --> 00:41:57.940
As the movie is coming across,
there's going to be

00:41:57.940 --> 00:42:01.180
hiccups in the network,
glitches, and the data's going to need

00:42:01.330 --> 00:42:04.740
to get either retransmitted or
recollected from the network.

00:42:04.760 --> 00:42:07.740
And that buffer gives the computer,
the client,

00:42:07.750 --> 00:42:10.900
enough time to deal with those glitches,
smooth them out,

00:42:10.900 --> 00:42:12.020
and give you a decent playback.

00:42:12.020 --> 00:42:16.230
Now, the downside to that is that when
you move someplace else in the movie,

00:42:16.230 --> 00:42:19.090
you get another two-second delay,
because once again,

00:42:19.090 --> 00:42:21.790
this buffer has to be built up
before the playback can begin.

00:42:21.800 --> 00:42:25.290
So this is sort of classic
QuickTime streaming with buffering.

00:42:25.420 --> 00:42:26.880
offering.

00:42:27.720 --> 00:42:33.040
So now, with the instant-on technology,
you get a different user experience.

00:42:33.080 --> 00:42:35.850
Open up the movie, and it's playing.

00:42:36.400 --> 00:42:40.060
Right away, no buffering.

00:42:40.060 --> 00:42:42.300
You decide you want to go
someplace else in the movie,

00:42:42.300 --> 00:42:45.600
so you click, and you're there.

00:42:45.710 --> 00:42:48.300
Once again, no buffering whatsoever.

00:42:48.320 --> 00:42:49.300
This is pretty neat.

00:42:49.300 --> 00:42:51.300
You can sort of click around some more.

00:42:51.300 --> 00:42:55.940
Just want to be mean to the server and
make it seek all over the hard drive.

00:42:59.600 --> 00:43:02.350
The really cool thing is this.

00:43:02.420 --> 00:43:06.600
You grab ahold of the thumb,
you scrub to any place in the

00:43:06.970 --> 00:43:08.050
Just drag it around back and forth.

00:43:08.210 --> 00:43:09.190
This is a streaming movie.

00:43:09.240 --> 00:43:13.000
This stuff's all being
streamed dynamically as we go.

00:43:13.470 --> 00:43:14.510
It's a very different experience.

00:43:14.590 --> 00:43:18.410
In fact, it's so different that the
first time I saw this demo,

00:43:18.410 --> 00:43:20.670
I thought the person who was
demonstrating to me was lying.

00:43:20.880 --> 00:43:23.440
It must have been a local movie,
because there's just no way you

00:43:23.440 --> 00:43:25.040
could be doing this over the network,
right?

00:43:25.200 --> 00:43:25.980
There's no way that can work.

00:43:25.980 --> 00:43:29.790
Well, it can work,
and the reason is the technology that was

00:43:29.790 --> 00:43:34.780
built into QuickTime Streaming Server 4
that does the skip protection feature

00:43:34.780 --> 00:43:37.500
can over-buffer the data on the client.

00:43:37.790 --> 00:43:40.080
That is,
download data at times of network lulls

00:43:40.080 --> 00:43:42.440
at a faster rate than the movie requires.

00:43:42.440 --> 00:43:45.260
The Instant On technology
takes advantage of that.

00:43:45.400 --> 00:43:49.520
It aggressively uses the fact that the
data is coming down faster during these

00:43:49.520 --> 00:43:54.080
cases of over-buffering and provides you
with instant playback without waiting

00:43:54.160 --> 00:43:56.190
for the buffer to fill up all the way.

00:43:56.230 --> 00:43:58.730
It's able to play back
right away with no delay.

00:43:58.730 --> 00:44:00.860
So that's how Instant On works,
and it's a built-in

00:44:00.940 --> 00:44:02.040
feature of QuickTime 6.

00:44:03.040 --> 00:44:03.420
Great.

00:44:03.500 --> 00:44:04.180
Thanks, Tom.

00:44:09.100 --> 00:44:12.650
So that's a really quick view
of what's going on with the

00:44:12.710 --> 00:44:15.490
QuickTime streaming server 4.

00:44:16.180 --> 00:44:18.590
So let's talk about live broadcasting.

00:44:18.660 --> 00:44:22.780
When we built the streaming server,
one of the main reasons we wanted to

00:44:22.890 --> 00:44:27.310
have a server was because we wanted
to be able to host live broadcasts.

00:44:27.340 --> 00:44:32.050
And so you need to have a server in
conjunction with a live broadcast because

00:44:32.210 --> 00:44:35.180
you've got to have some technology
that will allow you to replicate

00:44:35.580 --> 00:44:37.260
the streams out to a large audience.

00:44:37.260 --> 00:44:40.990
And as if you've ever watched
Steve Jobs over the Internet,

00:44:40.990 --> 00:44:46.620
you may be aware that we are occasionally
known to do some fairly large webcasts.

00:44:46.620 --> 00:44:50.540
In fact, from the data we have,
we're pretty sure that we're doing

00:44:50.600 --> 00:44:54.580
the largest webcasts that anybody
is doing on the Internet today.

00:44:54.580 --> 00:44:59.350
We get reports back from the folks
who host the streaming servers

00:44:59.370 --> 00:45:03.940
during these keynote events,
and they tell us that their peering

00:45:03.940 --> 00:45:06.610
partners are complaining to them
because all the broadcasts are

00:45:06.610 --> 00:45:07.200
being broadcast on the Internet.

00:45:07.270 --> 00:45:10.080
And all the bandwidth that we're
driving through networks like

00:45:10.080 --> 00:45:13.600
Akamai and Digital Island and so on,
those networks are driving so

00:45:13.600 --> 00:45:16.620
much bandwidth that we're having
an impact on the performance

00:45:16.620 --> 00:45:17.960
of the Internet as a whole.

00:45:17.960 --> 00:45:19.080
It's really quite remarkable.

00:45:21.400 --> 00:51:20.100
[Transcript missing]

00:51:23.760 --> 00:51:27.200
I'll bring up the standard
sequence grabbing dialog.

00:51:27.240 --> 00:51:30.550
And first we're going to
select-- I'm actually not

00:51:30.550 --> 00:51:31.840
sure which of these two it is.

00:51:31.840 --> 00:51:32.440
Which one do we have?

00:51:32.460 --> 00:51:32.670
OK.

00:51:32.820 --> 00:51:36.460
First we're going to select the iBot,
which is-- Tim said you

00:51:36.580 --> 00:51:38.930
can get it for about $77.

00:51:39.790 --> 00:51:42.670
Pick that as one of our inputs.

00:51:42.770 --> 00:51:44.910
And then if you have a
little bit more money,

00:51:44.910 --> 00:51:47.150
you can get this really
cool Sony camera here.

00:51:47.210 --> 00:51:48.440
That's about $1,000.

00:51:48.540 --> 00:51:53.140
The neat thing about it is
it's got a 12x optical zoom,

00:51:53.230 --> 00:51:55.550
which is software controllable,
although I'm controlling

00:51:55.550 --> 00:51:56.260
it with the button.

00:51:56.260 --> 00:51:58.220
You know this is going to be a good demo.

00:51:58.220 --> 00:51:59.880
Okay, now, stay real still, Tim.

00:52:02.600 --> 00:52:03.600
All right.

00:52:03.600 --> 00:52:05.980
Show me the love, Colin.

00:52:06.020 --> 00:52:07.970
There's the love.

00:52:09.140 --> 00:52:12.810
But the really cool thing about this,
okay, so now you can, like, move around,

00:52:12.810 --> 00:52:13.130
Tim.

00:52:13.950 --> 00:52:15.730
The really cool thing about this
is because this is uncompressed

00:52:15.840 --> 00:52:18.760
video coming in a YV format,
we don't have to do much processing

00:52:18.760 --> 00:52:20.320
to display it on the screen.

00:52:20.320 --> 00:52:23.460
We've got gobs of processing power
left over to do full motion on both

00:52:23.460 --> 00:52:26.620
of the images and on the effect
that's cross-fading between the two,

00:52:26.620 --> 00:52:29.580
or in this case,
heart-fading between the two, I guess.

00:52:29.580 --> 00:52:32.460
So that's IADC built into QuickTime 6.

00:52:32.460 --> 00:52:33.110
Thanks, Tom.

00:52:33.110 --> 00:52:34.340
Okay, go back to slides.

00:52:37.400 --> 00:52:39.790
So as I said,
IIDC is going to be built into Jaguar,

00:52:39.790 --> 00:52:41.190
built into QuickTime 6.

00:52:41.260 --> 00:52:43.090
I think it's going to be
really cool technology.

00:52:43.100 --> 00:52:46.570
So let's talk about the second
problem that we wanted to solve,

00:52:46.620 --> 00:52:49.280
and that's the application,
the tool side of the equation.

00:52:49.280 --> 00:52:52.140
We created this application
called the QuickTime Broadcaster.

00:52:52.140 --> 00:52:56.420
It's built into the Jaguar
C that you've got on Monday.

00:52:56.420 --> 00:52:59.480
We're going to make this
available to customers once the

00:52:59.480 --> 00:53:01.340
product is finished for free.

00:53:01.340 --> 00:53:03.310
You'll be able to go to the
website and download it.

00:53:03.400 --> 00:53:06.560
So we think that's kind of a
breakthrough pricing model.

00:53:07.400 --> 00:53:11.910
Let's talk a little bit about
the broadcast topologies,

00:53:12.140 --> 00:53:13.340
if you will.

00:53:13.340 --> 00:53:17.720
So there's basically three kinds of
broadcasts that we wanted to support.

00:53:17.720 --> 00:53:20.240
The first one is sort of
the local area broadcast.

00:53:20.240 --> 00:53:24.170
You want to have a video that
you can share with friends

00:53:24.170 --> 00:53:28.020
in your work group area,
say a classroom or an office environment,

00:53:28.020 --> 00:53:29.160
something like that.

00:53:29.220 --> 00:53:32.380
This basically,
in this configuration you're talking

00:53:32.380 --> 00:53:36.260
about the camera comes in to the
broadcaster application running on

00:53:36.260 --> 00:53:40.250
the same computer that a server is
running that's able to replicate this

00:53:40.250 --> 00:53:42.360
stuff out to a handful of machines.

00:53:42.440 --> 00:53:46.860
If your network supports multicast,
of course you can multicast out

00:53:46.860 --> 00:53:50.510
to a larger number of machines,
but most network environments aren't

00:53:50.510 --> 00:53:52.260
really up to that level these days.

00:53:52.360 --> 00:53:55.990
The second topology that's
important to support is sort of

00:53:55.990 --> 00:53:58.300
what we call the enterprise model.

00:53:58.380 --> 00:54:00.700
So this is sort of in a larger
kind of company context.

00:54:00.820 --> 00:54:01.650
You've got a good network.

00:54:01.760 --> 00:54:04.660
You want to do a real high quality video.

00:54:04.660 --> 00:54:07.080
You're going to have one machine
that's dedicated to the video and game.

00:54:07.080 --> 00:54:09.080
You're going to have one machine that's
dedicated to the video and coding.

00:54:09.080 --> 00:54:10.820
And you're going to have another
machine that's running a dedicated

00:54:10.830 --> 00:54:13.990
server that's able to replicate
out to thousands of clients.

00:54:14.080 --> 00:54:20.260
The third topology is the topology
that has no limits as to how much money

00:54:20.260 --> 00:54:22.080
you can burn on the content delivery.

00:54:22.080 --> 00:54:25.830
The basic idea is here you'll
have one machine that provides

00:54:26.290 --> 00:54:29.080
the encoding services through
the QuickTime Broadcaster.

00:54:29.110 --> 00:54:32.790
And then you basically inject that
stream into any of a number of

00:54:32.790 --> 00:54:35.080
different content delivery networks.

00:54:35.080 --> 00:54:36.920
At Apple we tend to use Akamai.

00:54:36.920 --> 00:54:38.910
But there are others
that you can work with.

00:54:39.030 --> 00:54:40.920
Deploying servers all over the world.

00:54:40.920 --> 00:54:42.920
Looking at all the load balancing
kinds of considerations.

00:54:42.920 --> 00:54:47.840
And with that kind of a model you
can literally reach tens of thousands

00:54:47.920 --> 00:54:49.920
of simultaneous viewers at a time.

00:54:49.920 --> 00:54:53.920
Probably more if you're willing
to cut down on the bandwidth.

00:54:53.920 --> 00:54:55.920
The limits there are
basically your budget.

00:54:55.920 --> 00:54:59.130
You could spend a million dollars
in the blink of an eye if you're not

00:54:59.130 --> 00:55:00.920
careful and you have a popular stream.

00:55:00.920 --> 00:55:05.320
And the ability to deploy enough
servers around the world to be able to

00:55:05.320 --> 00:55:06.760
scale for that kind of an application.

00:55:06.760 --> 00:55:10.760
So the Broadcaster itself
has a ton of features.

00:55:10.780 --> 00:55:12.760
I'm not going to go through
all the details here.

00:55:12.760 --> 00:55:15.600
But let me highlight
just a couple of things.

00:55:15.760 --> 00:55:19.760
Of course the Broadcaster has been
optimized and tuned to support MPEG-4.

00:55:19.760 --> 00:55:22.650
But it supports all the other
QuickTime codecs as well.

00:55:22.790 --> 00:55:27.910
So if you've got an application that
demands some other kind of video,

00:55:27.920 --> 00:55:29.550
that's perfectly fine.

00:55:29.940 --> 00:55:34.760
It uses industry standard
protocols for streaming the video.

00:55:34.800 --> 00:55:36.600
We're leveraging the
capabilities of the Broadcaster.

00:55:36.660 --> 00:55:39.250
We're using the capabilities
of QuickTime 6 to provide

00:55:39.250 --> 00:55:40.600
a reliable transport.

00:55:40.600 --> 00:55:43.690
That means that you can
transport your broadcast,

00:55:43.690 --> 00:55:47.600
you can transport media from the
Broadcaster to the replication servers

00:55:47.600 --> 00:55:49.600
over a reliable transport mechanism.

00:55:49.600 --> 00:55:55.840
Even though the replication service
itself may be sent out over UDP where

00:55:55.840 --> 00:55:57.580
you're going to experience packet loss.

00:55:57.600 --> 00:56:00.530
I mean the last thing you want to have
is packet loss on the link from the

00:56:00.650 --> 00:56:02.510
Broadcaster to the replication servers.

00:56:02.600 --> 00:56:05.250
So we've provided capabilities
in QuickTime 6 and in the

00:56:05.290 --> 00:56:09.290
QuickTime Broadcaster to be able
to form a reliable connection

00:56:09.290 --> 00:56:11.430
between those two machines.

00:56:11.440 --> 00:56:14.440
Another feature that's in here
that I think is real important

00:56:14.440 --> 00:56:18.620
and my personal favorite feature
is this thing we call Instant VOD,

00:56:18.620 --> 00:56:20.440
Instant Video On Demand.

00:56:20.440 --> 00:56:24.550
With Instant VOD, what you get is during
the live broadcast,

00:56:24.710 --> 00:56:29.550
you can actually have that stream
being recorded to the hard drive so

00:56:29.550 --> 00:56:33.470
that as soon as the broadcast is over,
you've got a hinted movie that

00:56:33.810 --> 00:56:37.490
you can post to the streaming
server for folks who weren't

00:56:37.490 --> 00:56:39.280
able to join the live broadcast.

00:56:39.400 --> 00:56:44.270
You don't have to have that
multi-hour delay or whatever it may be

00:56:44.430 --> 00:56:47.280
encoding the content after the fact.

00:56:47.280 --> 00:56:50.280
You'll be ready to go as soon
as the broadcast is done.

00:56:50.280 --> 00:56:53.010
It's very cool and
nobody else is doing it.

00:56:53.280 --> 00:56:58.790
So let's go and take a quick look at
the software and do a brief demo there.

00:56:58.990 --> 00:56:59.200
Tom.

00:56:59.200 --> 00:57:01.180
Yeah, so we have demo one up.

00:57:01.210 --> 00:57:05.200
So this QuickTime Broadcaster,
which is on the CDs that you got,

00:57:05.200 --> 00:57:06.170
the Jaguar CDs you got.

00:57:06.200 --> 00:57:09.240
As Tim said,
one of the nice things about this

00:57:09.340 --> 00:57:13.190
is we've really tried to make it
easy to get going with broadcasting.

00:57:13.210 --> 00:57:17.180
So the QuickTime Broadcaster
has a number of presets already

00:57:17.560 --> 00:57:20.250
in place for standard types of
encoding that you might want to do,

00:57:20.290 --> 00:57:21.200
and you can also create your own.

00:57:21.200 --> 00:57:25.200
You can also do custom settings
if you have some specific needs.

00:57:25.200 --> 00:57:28.870
And all you need to do,
bring up the broadcaster and

00:57:28.870 --> 00:57:31.190
click the broadcast button.

00:57:31.190 --> 00:57:34.200
And there you go, you're broadcasting.

00:57:34.200 --> 00:57:34.200
So...

00:57:35.000 --> 00:57:36.760
This camera over here.

00:57:36.760 --> 00:57:39.240
Now we do an incremental preview here.

00:57:39.240 --> 00:57:42.000
We don't preview live because we
figure there's not a lot of point

00:57:42.120 --> 00:57:45.040
in taking up all the horsepower
of the computer on a preview,

00:57:45.040 --> 00:57:46.990
especially if the broadcaster
is off somewhere in a closet and

00:57:46.990 --> 00:57:48.200
you're not looking at it anyway.

00:57:48.200 --> 00:57:51.510
You can also turn that off if
you don't even need to see it.

00:57:51.600 --> 00:57:55.620
And information is provided here about
what's going on with the broadcast,

00:57:55.730 --> 00:57:58.250
how much CPU load is being
used with the ENCODE,

00:57:58.300 --> 00:57:59.840
how many people are
tuned into the broadcast,

00:57:59.840 --> 00:58:03.660
the data rate that you're using,
how long the broadcast has been going on,

00:58:03.660 --> 00:58:04.240
and so forth.

00:58:04.300 --> 00:58:05.390
Okay.

00:58:05.680 --> 00:58:08.970
If you need to do additional settings,
show the details,

00:58:08.970 --> 00:58:13.260
and you have full ability to configure
all the inputs of the video and

00:58:13.260 --> 00:58:15.190
the audio and the network settings.

00:58:15.220 --> 00:58:18.720
If you're the kind of person who
likes to tweak which broadcast ports

00:58:18.720 --> 00:58:22.500
are being used for your multicast,
you can set those things yourself.

00:58:22.540 --> 00:58:26.400
So there's lots of ability to
customize this and do the things

00:58:26.400 --> 00:58:28.660
that are important to you.

00:58:28.680 --> 00:58:30.710
One of the really
interesting uses of this,

00:58:30.710 --> 00:58:34.040
Tim said that you can use any codec
you want to use to do the broadcast.

00:58:35.600 --> 00:58:39.920
One interesting way to use the
broadcaster is to do relatively

00:58:39.920 --> 00:58:45.850
low frame rate broadcasts of
less lossy types of compression,

00:58:45.850 --> 00:58:49.080
such as JPEG or JPEG 2000,
where you might be doing slides

00:58:49.080 --> 00:58:52.250
or things on a whiteboard,
where it's not important that

00:58:52.250 --> 00:58:55.060
you have a high frame rate,
but that you want the fidelity

00:58:55.060 --> 00:58:56.210
of the images to go across.

00:58:56.220 --> 00:58:58.320
So you can customize this
at a very low frame rate,

00:58:58.320 --> 00:59:00.880
set JPEG as your compressor,
and you're ready to go there.

00:59:00.920 --> 00:59:02.810
And so that's the QuickTime broadcaster.

00:59:02.820 --> 00:59:04.060
Show the other end.

00:59:05.440 --> 00:59:05.890
Show the other end.

00:59:05.900 --> 00:59:08.580
Are you going to show the
reception end of it or not?

00:59:08.580 --> 00:59:10.640
Oh, do you want to see us receiving it?

00:59:10.640 --> 00:59:12.660
Nah, we saw that before in the GL demo.

00:59:12.660 --> 00:59:12.900
You've seen it.

00:59:13.040 --> 00:59:13.560
They all look the same.

00:59:13.580 --> 00:59:15.840
So can we go back to slides?

00:59:15.840 --> 00:59:18.090
So that's the QuickTime broadcaster.

00:59:18.160 --> 00:59:20.150
So we've reviewed QuickTime 6,
we've reviewed

00:59:20.150 --> 00:59:23.080
QuickTime Streaming Server 4,
and the QuickTime broadcaster.

00:59:23.160 --> 00:59:24.420
These are all built into Jaguar.

00:59:24.420 --> 00:59:26.460
They're on your disk,
so we invite you to go

00:59:26.460 --> 00:59:27.770
and take a look at those.

00:59:27.840 --> 00:59:30.360
In the coming months,
we're going to be refining it,

00:59:30.360 --> 00:59:31.300
fixing the bugs.

00:59:31.400 --> 00:59:33.620
We'd like to hear about any bugs
you think you've encountered.

00:59:35.360 --> 00:59:36.590
It's going to be great.

00:59:36.800 --> 00:59:39.120
Now,
I've only been talking about Mac OS X.

00:59:39.120 --> 00:59:41.400
In fact, I've really only been
talking about Jaguar today.

00:59:41.400 --> 00:59:44.850
QuickTime 6, of course,
is widely distributed

00:59:44.850 --> 00:59:46.520
for Windows clients.

00:59:46.620 --> 00:59:50.510
In fact,
approximately 90% of the downloads we

00:59:50.520 --> 00:59:53.660
provide are going to Windows clients.

00:59:53.660 --> 00:59:55.680
We're not abandoning the Windows clients.

00:59:55.680 --> 00:59:58.200
We're not abandoning
Mac OS 9 clients either.

00:59:58.200 --> 01:00:00.220
These are going to be a part
of the QuickTime 6 thing.

01:00:00.220 --> 01:00:02.830
But this is kind of a Jaguar show,
so we wanted to focus on

01:00:02.830 --> 01:00:04.720
those aspects of things today.

01:00:05.280 --> 01:00:08.250
But fear not, it'll be there for the
other platforms as well.

01:00:08.260 --> 01:00:11.520
There's one last thing
I wanted to talk about,

01:00:11.520 --> 01:00:16.500
and that's a request that we
receive from many of you when

01:00:17.030 --> 01:00:20.770
you come and talk to us about how
things are going with QuickTime.

01:00:20.780 --> 01:00:26.500
By far, what we hear, by far,
the greatest challenge for many of

01:00:26.620 --> 01:00:30.820
you is going back to your companies
and evangelizing QuickTime within an

01:00:30.820 --> 01:00:35.200
organization that may be dominated
by Windows people or people who...

01:00:35.200 --> 01:00:39.550
are focused on doing whatever
Microsoft says is the right thing to

01:00:39.550 --> 01:00:40.980
do or have heard a lot about Real.

01:00:40.980 --> 01:00:43.980
And your number one
request to us has been,

01:00:43.980 --> 01:00:47.200
can you help us with the
internal marketing of

01:00:47.480 --> 01:00:49.460
QuickTime within our organizations?

01:00:49.560 --> 01:00:52.430
We've been listening to that,
and the marketing team has invested

01:00:52.530 --> 01:00:55.860
a tremendous amount of energy
and time to put together a new

01:00:55.860 --> 01:00:57.750
website just for this purpose.

01:00:57.820 --> 01:01:02.810
You go to www.apple.com.com.

01:01:03.100 --> 01:02:49.500
[Transcript missing]