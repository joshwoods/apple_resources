WEBVTT

00:00:10.400 --> 00:00:11.040
Good morning, everyone.

00:00:11.040 --> 00:00:14.500
Welcome to Session 510,
which is printing and Mac OS X.

00:00:14.500 --> 00:00:18.900
Hopefully you caught the big news that
one of the things we're doing in Jaguar

00:00:18.900 --> 00:00:21.460
is actually replacing a significant
part of the printing architecture.

00:00:21.580 --> 00:00:25.500
A little bit of that was talked
about very briefly in the keynote,

00:00:25.500 --> 00:00:28.980
and we went into great detail at
yesterday's Darwin printing session

00:00:28.980 --> 00:00:31.680
where we really went into detail
on the Common Unix printing system,

00:00:31.680 --> 00:00:34.080
which is going to be the
new sort of underpinnings of

00:00:34.090 --> 00:00:35.400
Mac OS X's printing architecture.

00:00:36.360 --> 00:00:40.620
What we wanted to do in today's
session is really look at framing

00:00:40.620 --> 00:00:43.590
how this large architectural change
is going to impact developers.

00:00:43.600 --> 00:00:45.630
In many ways, it's positive.

00:00:45.640 --> 00:00:47.440
You're not going to have
to do much renovation of

00:00:47.450 --> 00:00:50.730
your existing printing code,
if at all, or your driver code.

00:00:50.800 --> 00:00:51.540
They should just work.

00:00:51.620 --> 00:00:55.390
And you'll hear that reinforced several
times during today's presentation.

00:00:55.440 --> 00:00:59.310
Additionally,
we want to expose you to the new

00:00:59.310 --> 00:01:02.940
possibilities that are capable with CUPS,
and we'll end Mac OS X,

00:01:02.940 --> 00:01:04.310
so we'll do that today.

00:01:04.320 --> 00:01:07.330
But one thing I want to make clear is,
one of the reasons why we did this,

00:01:07.380 --> 00:01:09.930
it's a pretty drastic change
in an operating system that's

00:01:09.930 --> 00:01:11.310
a little over a year old.

00:01:11.340 --> 00:01:14.900
And one of the reasons it was done
was because we got an incredible

00:01:14.900 --> 00:01:18.260
amount of feedback on the printing
architecture last year after

00:01:18.320 --> 00:01:20.910
the WWDC printing session.

00:01:20.920 --> 00:01:24.870
And that feedback was clear that
developers wanted to get access to

00:01:24.870 --> 00:01:26.500
the internals of the printing system.

00:01:26.500 --> 00:01:28.600
We had applications able to print.

00:01:28.600 --> 00:01:30.280
We had a defined driver architecture.

00:01:30.400 --> 00:01:35.900
So for common printing tasks in Mac OS X,
it was basically a complete picture.

00:01:36.120 --> 00:01:39.390
But what we were really surprised to find
is the number of developers who wanted

00:01:39.440 --> 00:01:40.970
to add value into the printing system.

00:01:40.980 --> 00:01:44.870
And we feel we've accomplished that by
moving to a completely open architecture.

00:01:44.940 --> 00:01:47.620
So what I'd like to do is
welcome Rich Blanchard,

00:01:47.620 --> 00:01:50.290
the engineering manager for printing,
on stage to take you

00:01:50.290 --> 00:01:51.060
through the presentation.

00:01:51.060 --> 00:01:52.630
Thank you.

00:01:56.450 --> 00:01:58.560
Thank you, Travis.

00:01:58.640 --> 00:02:01.390
I appreciate it.

00:02:01.480 --> 00:02:05.480
I wanted to start today by thanking
all of you developers for I think

00:02:05.480 --> 00:02:09.390
what Travis called feedback over the
last year and a half about printing.

00:02:09.390 --> 00:02:12.210
Your feedback comes to us
in many different ways.

00:02:12.470 --> 00:02:14.280
A lot of times it's radar.

00:02:14.400 --> 00:02:16.070
Sometimes it's through DTS.

00:02:16.210 --> 00:02:19.190
But all of that comes to us,
and we do read it all.

00:02:19.320 --> 00:02:22.130
In fact, every month,
I go over all the bugs

00:02:22.210 --> 00:02:24.190
we have open outstanding,
and I make sure they have

00:02:24.190 --> 00:02:27.130
the right classification,
they're nailed in the right release.

00:02:27.130 --> 00:02:29.420
And as I do that,
since I've been doing that for so long,

00:02:29.440 --> 00:02:30.320
I come up with a system.

00:02:30.320 --> 00:02:33.130
And part of that system is
as I skim through the bugs,

00:02:33.150 --> 00:02:35.190
I have this big questions list.

00:02:35.510 --> 00:02:38.690
And a bug can make it in the big
questions list by meeting two criteria.

00:02:38.690 --> 00:02:42.840
One, that bug, in order to address it,
must require significant infrastructure

00:02:42.890 --> 00:02:44.140
or architectural changes.

00:02:44.160 --> 00:02:49.300
Two, all the big questions
have to be independent.

00:02:49.300 --> 00:02:50.370
So I built up this list.

00:02:50.430 --> 00:02:51.420
It's about 20 right now.

00:02:51.520 --> 00:02:53.800
And I wanted to give you some
examples of those big questions.

00:02:53.800 --> 00:02:56.060
I'm also going to thank you
because you're all so very polite

00:02:56.060 --> 00:02:57.900
when you give us this feedback.

00:02:57.920 --> 00:02:59.570
Although sometimes it's
phrased somewhat pointedly,

00:02:59.580 --> 00:03:01.090
and I wanted to give you
an example of some of that.

00:03:03.210 --> 00:03:06.380
For example,
OS 9 has USB printer sharing.

00:03:06.400 --> 00:03:08.960
OS X, the most advanced operating
system in the world,

00:03:08.990 --> 00:03:10.100
does not.

00:03:10.220 --> 00:03:11.440
What are you guys doing?

00:03:11.510 --> 00:03:13.260
So it's pretty pointed.

00:03:13.320 --> 00:03:18.680
Two, Apple is marketing OS X as a
UNIX well integrated with a

00:03:18.680 --> 00:03:21.590
professional user interface.

00:03:21.700 --> 00:03:22.660
Except when you print.

00:03:22.700 --> 00:03:24.490
If you go to the command
line and you try and print,

00:03:24.500 --> 00:03:26.470
you can't print to the same printer
as you can print to from your

00:03:26.480 --> 00:03:28.060
Cocoa and Carbon applications.

00:03:28.140 --> 00:03:30.300
So again, fairly pointed feedback.

00:03:30.360 --> 00:03:32.630
Some other feedback comes from
people who are trying to move

00:03:32.710 --> 00:03:34.720
applications over to OS X.

00:03:34.860 --> 00:03:36.380
We've had a lot of feedback
from accounting people.

00:03:36.380 --> 00:03:38.470
They say, "Okay,
can you just point us to the place

00:03:38.520 --> 00:03:41.240
where you log all the files you
print?" And my first answer is,

00:03:41.240 --> 00:03:45.070
"Yeah, that's dev null." But we
actually don't log that stuff.

00:03:45.190 --> 00:03:46.530
And so I don't have a good answer there.

00:03:46.610 --> 00:03:48.490
So, you know,
you nod your head and you go, "Yeah,

00:03:48.490 --> 00:03:50.860
you're right." And I put it
in that big questions pile.

00:03:50.900 --> 00:03:52.070
And a lot of PostScript interpreters.

00:03:52.140 --> 00:03:53.760
"Hey,
where do I put my PostScript interpreter

00:03:53.760 --> 00:03:56.590
in the system so that it's part of
the printing path?" We actually have

00:03:56.640 --> 00:03:58.380
some hand wave answers for this.

00:03:58.410 --> 00:03:59.660
Well,
you kind of read this printer module

00:03:59.660 --> 00:04:00.740
and maybe an IO module over here.

00:04:00.820 --> 00:04:02.390
I don't know anybody who
succeeded in doing it,

00:04:02.390 --> 00:04:03.250
and that's our fault.

00:04:03.260 --> 00:04:05.750
We haven't really given
you a good answer.

00:04:07.080 --> 00:04:10.860
So I look at this list of big questions,
and once I can lift my head back

00:04:10.860 --> 00:04:13.540
up and not be too depressed,
I decide, okay,

00:04:13.550 --> 00:04:15.520
we'll go back to the beginning.

00:04:15.520 --> 00:04:17.290
What are the goals for our print system?

00:04:17.300 --> 00:04:18.800
What do we really want out of it?

00:04:18.810 --> 00:04:20.900
And one of the goals is we
want our printing APIs and our

00:04:20.900 --> 00:04:22.060
printing system to survive.

00:04:22.240 --> 00:04:26.160
Okay, that's kind of a low bar, I know,
but I think some of you with not

00:04:26.160 --> 00:04:30.040
really even great memories can probably
remember a couple of Apple print

00:04:30.040 --> 00:04:32.110
systems that maybe haven't survived.

00:04:32.160 --> 00:04:33.040
You can even look at Java.

00:04:33.040 --> 00:04:35.400
Java is on the second
generation of their print APIs.

00:04:35.410 --> 00:04:38.060
So not all printing APIs do survive.

00:04:38.060 --> 00:04:40.340
And when they don't survive,
when they fail, they take a bunch of

00:04:40.380 --> 00:04:42.930
applications with them,
and it's incredibly painful.

00:04:42.930 --> 00:04:45.100
So lowest bar, hey, we need to survive.

00:04:45.100 --> 00:04:46.880
But, of course,
we want to do more than that, right?

00:04:46.880 --> 00:04:47.840
We want to thrive.

00:04:47.840 --> 00:04:50.170
We want to have an application -- or,
I'm sorry,

00:04:50.180 --> 00:04:53.520
a print system that your applications can
get all the features they need in order

00:04:53.550 --> 00:04:55.020
to make both of our customers happy.

00:04:55.030 --> 00:04:56.120
Not both of our customers.

00:04:56.280 --> 00:04:58.300
The customers that
both of us share happy.

00:04:58.300 --> 00:05:00.500
Will the two customers
please raise your hands?

00:05:00.500 --> 00:05:02.920
But we want to thrive.

00:05:03.000 --> 00:05:05.900
We also want an architecture
that's -- clear enough that you can

00:05:06.260 --> 00:05:08.680
write middleware pieces and figure
out where they fit in and how

00:05:08.680 --> 00:05:09.900
you can expand our print system.

00:05:09.900 --> 00:05:10.640
That's important.

00:05:10.720 --> 00:05:13.180
And one that's attractive enough
so printer manufacturers will want

00:05:13.180 --> 00:05:15.420
to write printer drivers for OS X.

00:05:15.490 --> 00:05:16.500
So those are the goals.

00:05:16.550 --> 00:05:18.130
So we have this big
list of big questions.

00:05:18.240 --> 00:05:19.000
God, how are we going to solve that?

00:05:19.070 --> 00:05:20.450
And we have these really basic goals.

00:05:20.510 --> 00:05:24.340
And it became pretty clear that the only
way we were going to answer those big

00:05:24.340 --> 00:05:28.810
questions and stay true to those goals
was by making very drastic changes.

00:05:28.980 --> 00:05:30.130
Scary changes.

00:05:30.160 --> 00:05:30.720
Okay?

00:05:30.800 --> 00:05:31.780
Big changes.

00:05:31.780 --> 00:05:34.380
And that's what the rest
of my talk is about today.

00:05:34.380 --> 00:05:36.040
These big changes.

00:05:36.110 --> 00:05:38.660
We're putting a new print
spooler in the system.

00:05:38.660 --> 00:05:40.240
Really simple, clear statement.

00:05:40.240 --> 00:05:41.360
Not really that scary.

00:05:41.360 --> 00:05:43.240
Until you realize that's
the back half of printing.

00:05:43.240 --> 00:05:46.000
So I'm telling you we're
replacing half of printing.

00:05:46.180 --> 00:05:48.510
We're making dramatic changes
to the user interface.

00:05:48.630 --> 00:05:50.850
I think the user interface is
the front quarter of printing.

00:05:50.870 --> 00:05:54.630
So we're dramatically changing the front
quarter and replacing the back half,

00:05:54.630 --> 00:05:55.820
but everything else.

00:05:56.060 --> 00:05:58.360
But that everything else,
we like a lot of things.

00:05:58.360 --> 00:06:00.130
The current print system,
there are things in there we like a lot

00:06:00.210 --> 00:06:01.740
and there are things in there we're very,
very proud of.

00:06:01.810 --> 00:06:03.310
And those things are not changing.

00:06:03.490 --> 00:06:06.950
And so while this is a dramatic change,
it's important to hold on to that fact

00:06:06.950 --> 00:06:09.600
that there's a lot there we really like.

00:06:09.670 --> 00:06:12.070
And the pieces we really like the
most out of the current printing

00:06:12.130 --> 00:06:13.410
system actually come from you.

00:06:13.600 --> 00:06:16.240
They're your applications and
they're your printer modules

00:06:16.240 --> 00:06:17.640
to sort your printer drivers.

00:06:17.710 --> 00:06:19.710
So even though we're
making these changes,

00:06:19.860 --> 00:06:20.950
compatibility is key.

00:06:20.950 --> 00:06:24.740
We didn't want to break your
applications and your printer modules.

00:06:24.890 --> 00:06:28.430
I know you guys love learning APIs,
but... So we're extending our APIs.

00:06:28.610 --> 00:06:30.040
We're not replacing them.

00:06:30.120 --> 00:06:33.920
Print dialog extensions,
your printer modules continue to work.

00:06:33.980 --> 00:06:36.440
And to show you how much we
care about those existing APIs,

00:06:36.440 --> 00:06:39.560
we've expended a lot of engineering
time working with a really great

00:06:39.770 --> 00:06:43.730
technical publications team to correct,
clarify, and extend the existing

00:06:43.760 --> 00:06:45.070
printing documentation.

00:06:45.130 --> 00:06:48.350
And thanks to DTS, you can go to
developer.apple.com/printing.

00:06:48.660 --> 00:06:49.550
It's easy to remember now.

00:06:49.730 --> 00:06:51.480
And you'll see all these links
to all the new documentation.

00:06:51.570 --> 00:06:53.370
And we have more coming.

00:06:53.460 --> 00:06:54.390
So we're making big changes.

00:06:54.610 --> 00:06:55.680
Your APIs will keep working.

00:06:55.680 --> 00:06:56.870
Your applications will keep working.

00:06:57.020 --> 00:07:00.760
And we've even invested
further in those APIs for you.

00:07:01.510 --> 00:07:04.840
So I wanted to go into depth a little bit
more on exactly what those changes are.

00:07:04.840 --> 00:07:07.340
So the new print spooler you
probably found out is the

00:07:07.450 --> 00:07:11.270
Common UNIX Printing System,
CUPS, Easy Software Products,

00:07:11.270 --> 00:07:11.800
is the creator.

00:07:11.800 --> 00:07:12.700
So why CUPS?

00:07:12.950 --> 00:07:14.680
Why a new print spooler?

00:07:14.740 --> 00:07:17.400
Well, it gives us those big
answers that we needed.

00:07:17.450 --> 00:07:18.790
Printer sharing comes with CUPS.

00:07:18.910 --> 00:07:21.340
So once we put CUPS in the system,
as it is on the CDs that

00:07:21.390 --> 00:07:23.830
you have now with Jaguar,
you can share between two

00:07:23.980 --> 00:07:25.030
OS X machines printers.

00:07:25.230 --> 00:07:26.320
This guy can print to this guy's printer.

00:07:26.320 --> 00:07:29.700
We had a great wireless demo on Tuesday,
I believe.

00:07:29.830 --> 00:07:32.210
Command line integration is
another one of the big answers.

00:07:32.310 --> 00:07:34.740
With CUPS in the system,
you can go to the command line

00:07:34.820 --> 00:07:37.850
and you can LPR to the exact same
printers you can see from your

00:07:37.850 --> 00:07:39.800
Cocoa and Carbon applications.

00:07:39.880 --> 00:07:41.780
They're equal, which is very nice.

00:07:41.870 --> 00:07:42.940
Accounting is there.

00:07:42.960 --> 00:07:45.890
You can actually go read a real
file instead of a device and get

00:07:45.890 --> 00:07:50.040
the pages that have been printed,
who printed them, when, how long it took.

00:07:50.120 --> 00:07:50.850
And RIP support.

00:07:50.850 --> 00:07:52.880
We have a very,
very specific answer for where a

00:07:52.910 --> 00:07:54.600
PostScript RIP sits in our system.

00:07:54.680 --> 00:07:58.040
In fact, we remove a PostScript RIP in
order to deliver OS X.

00:07:58.040 --> 00:08:00.930
So there's this hole that you don't
have to be that creative to figure out,

00:08:00.930 --> 00:08:03.090
hey, maybe that's where the
PostScript RIP goes.

00:08:03.870 --> 00:08:05.580
We had some other goals.

00:08:05.580 --> 00:08:06.980
We wanted to be a better team player.

00:08:07.160 --> 00:08:10.100
We understand that Macs are going
to be living in environments

00:08:10.140 --> 00:08:12.250
that are not just Mac only.

00:08:12.400 --> 00:08:14.290
So we wanted to work
better in educational labs,

00:08:14.410 --> 00:08:16.560
better in corporations,
better in publishing houses,

00:08:16.620 --> 00:08:18.390
and we wanted to be more transparent.

00:08:18.450 --> 00:08:20.260
As much as I like
talking to you each year,

00:08:20.360 --> 00:08:23.000
you need to get information
more than once a year.

00:08:23.150 --> 00:08:25.970
And so we want to be transparent
so you can see what we're doing

00:08:25.970 --> 00:08:29.400
throughout that year and not have
to wait until this incredible day.

00:08:29.510 --> 00:08:30.790
So we support standards.

00:08:30.920 --> 00:08:32.990
That's the number one way
we're going to fit in better.

00:08:32.990 --> 00:08:35.490
CUPS supports out of the box
the Internet Printing Protocol,

00:08:35.540 --> 00:08:35.890
IPP.

00:08:35.890 --> 00:08:39.850
It's an open standard from the
printer working group of the IEEE.

00:08:39.990 --> 00:08:43.740
It's an IETF standard as well.

00:08:43.820 --> 00:08:45.340
So you can go there,
you can get that standard,

00:08:45.360 --> 00:08:47.750
you can download it, and you go, "Okay,
this is what Apple's trying to

00:08:47.840 --> 00:08:49.830
put on the wire when they're
communicating between their two

00:08:49.830 --> 00:08:52.750
boxes." So when doing printer sharing,
we're trying to use IPP.

00:08:52.750 --> 00:08:53.900
There's the standard.

00:08:53.900 --> 00:08:54.790
Hey, look, they're not doing it.

00:08:54.900 --> 00:08:58.500
You can nail us on it because there's
a well-defined documentation for it.

00:08:58.580 --> 00:09:00.800
We continue to use
PostScript printer description files.

00:09:00.900 --> 00:09:03.630
It's an Adobe standard for
describing printer capabilities.

00:09:03.740 --> 00:09:04.920
It's a big part of CUPS.

00:09:05.010 --> 00:09:07.260
It's used for PostScript printers
and non-PostScript printers in CUPS.

00:09:07.350 --> 00:09:08.590
We use that again.

00:09:08.660 --> 00:09:11.680
You can go to someplace outside of Apple,
read some documentation, go, "Okay,

00:09:11.740 --> 00:09:13.490
that's what they're trying to do."

00:09:14.850 --> 00:09:16.040
Well,
how are we going to be well understood?

00:09:16.040 --> 00:09:17.770
How can we be transparent?

00:09:17.940 --> 00:09:19.590
Well, CUPS is open source.

00:09:19.670 --> 00:09:21.410
It's released under the
GNU General Public License.

00:09:21.440 --> 00:09:24.220
You can get it from
Easy Software from CUPS.org.

00:09:24.220 --> 00:09:26.520
You can get it from
our Darwin repository.

00:09:26.580 --> 00:09:28.260
And the great thing about
the Darwin repository is

00:09:28.260 --> 00:09:29.160
that's our repository.

00:09:29.270 --> 00:09:32.460
As we make changes for Jaguar,
when we check in a change

00:09:32.460 --> 00:09:35.080
as we work day to day,
it goes right into that repository.

00:09:35.080 --> 00:09:37.960
You can see every day what we're
doing with our print spooler.

00:09:38.090 --> 00:09:39.610
So there shouldn't be too many surprises.

00:09:39.730 --> 00:09:41.200
Maybe you can even tell us, "Hey,
you know that stuff you

00:09:41.200 --> 00:09:42.600
checked in yesterday?

00:09:42.600 --> 00:09:46.580
You may want to check it
out." So that's important.

00:09:46.760 --> 00:09:48.730
We're also widely used on Linux systems.

00:09:48.860 --> 00:09:50.600
CUPS is widely used on Linux systems.

00:09:50.750 --> 00:09:53.560
It's also buildable
and usable on Solaris,

00:09:53.560 --> 00:09:56.080
AIX, FreeBSD, a lot of different UNIXs.

00:09:56.310 --> 00:09:58.050
An important part there is you
can actually go to somebody

00:09:58.050 --> 00:09:59.410
other than Apple and say,
"Hey, you know,

00:09:59.410 --> 00:10:02.020
how does this CUPS thing work?"
Because there are people out there

00:10:02.020 --> 00:10:03.360
who are experts who are not us.

00:10:03.410 --> 00:10:05.790
And we're happy to answer the questions,
but if you post to a news group,

00:10:05.860 --> 00:10:07.180
maybe we're not going to get to it.

00:10:07.270 --> 00:10:08.800
Or maybe you need to hire a consultant.

00:10:08.860 --> 00:10:09.300
They're out there.

00:10:09.300 --> 00:10:13.600
There are people out there who understand
our print system that is not us.

00:10:14.380 --> 00:10:16.160
So to help you understand
our print system,

00:10:16.160 --> 00:10:19.770
I wanted to show you where we're
coming from and where we are today.

00:10:19.820 --> 00:10:21.810
This is a slide we've been
showing substantially unchanged

00:10:21.810 --> 00:10:22.720
for several years now.

00:10:22.720 --> 00:10:24.440
This is the 10.1 printing system.

00:10:24.440 --> 00:10:26.640
It was also the 10.0 printing system.

00:10:26.710 --> 00:10:28.940
You can see your application
on the left side of it.

00:10:29.180 --> 00:10:30.060
Print server's in the middle.

00:10:30.060 --> 00:10:31.200
It's sort of where the bull's-eye is.

00:10:31.200 --> 00:10:32.250
We're going to get to that.

00:10:32.260 --> 00:10:34.010
It's going to be disappearing
here in a minute.

00:10:34.010 --> 00:10:36.490
And then the print job manager,
which hosts your printer

00:10:36.490 --> 00:10:38.130
modules and your IO modules.

00:10:38.300 --> 00:10:40.200
So bang, print server's gone.

00:10:40.210 --> 00:10:42.680
We have CUPS there in
the middle of the system,

00:10:42.680 --> 00:10:44.100
back end of the system.

00:10:44.100 --> 00:10:47.760
There's one other subtle change as we
went from that slide to this slide.

00:10:47.760 --> 00:10:50.810
In the previous 10.1 system,
what you used to submit normally

00:10:50.810 --> 00:10:52.440
was a PDF file to the print server.

00:10:52.440 --> 00:10:54.500
And along with that came
an Apple job ticket.

00:10:54.530 --> 00:10:55.710
That's different with CUPS now.

00:10:55.710 --> 00:10:57.710
You get the PDF file and
you get a set of IPP,

00:10:57.820 --> 00:10:59.220
Internet Printing Protocol attributes.

00:10:59.220 --> 00:11:00.460
So there's a subtle change there.

00:11:00.480 --> 00:11:02.600
Brand new print spooler.

00:11:02.600 --> 00:11:05.520
So to break that down a little further,
this was Michael Sweet,

00:11:05.520 --> 00:11:07.460
the author of CUPS,
went over this pretty well yesterday

00:11:07.540 --> 00:11:09.270
in the Darwin printing session.

00:11:09.320 --> 00:11:13.730
But when you print with the CUPS daemon,
CUPS server, it generates a print server.

00:11:13.980 --> 00:11:14.890
And it's a printer that's going to print.

00:11:14.910 --> 00:11:16.140
And it's going to print a print
chain of processes in order to print.

00:11:16.140 --> 00:11:18.410
And that print chain is generally
talked about as a triplet.

00:11:18.610 --> 00:11:22.120
There's a filter to do file conversions
from the file type that came in,

00:11:22.120 --> 00:11:24.640
in our case, PDF,
to the file type you want to have go out.

00:11:25.010 --> 00:11:26.040
There's a CUPS driver.

00:11:26.040 --> 00:11:27.890
That's the last stage of the filtering.

00:11:27.900 --> 00:11:29.400
It kind of gets the data
ready for the printer.

00:11:29.400 --> 00:11:31.680
And then there's a back end,
which actually does the communication.

00:11:33.780 --> 00:11:35.490
But of course we are also
supporting your printer module

00:11:35.490 --> 00:11:36.820
so these pieces still stay.

00:11:36.820 --> 00:11:39.210
PrintJobManager still exists
for those of you who have had to

00:11:39.270 --> 00:11:41.700
write print modules and know how
that works in your I/O modules.

00:11:41.700 --> 00:11:46.370
It's still housed by PrintJobManager.

00:11:46.580 --> 00:11:48.660
So I wanted to give you a quick
walk through of what happens from

00:11:48.660 --> 00:11:52.320
your application down to your
printer modules when you print.

00:11:52.320 --> 00:11:55.020
We'll assume your application is Carbon.

00:11:55.170 --> 00:11:57.940
And for this example,
we're going to assume that your printer

00:11:58.020 --> 00:11:59.860
is a PostScript AppleTalk printer.

00:11:59.860 --> 00:12:02.700
So your Carbon application probably
is going to draw with Quick Draw.

00:12:02.720 --> 00:12:05.600
When it does, we convert that into
Quartz drawing commands,

00:12:05.830 --> 00:12:07.100
and that gets spooled as PDF.

00:12:07.100 --> 00:12:09.360
So even though you're drawing Quick Draw,
our spool files,

00:12:09.390 --> 00:12:12.180
unless you do something special,
our spool files are all PDF,

00:12:12.200 --> 00:12:13.200
which is important.

00:12:13.200 --> 00:12:15.990
We take all the settings that
come out of the print dialog,

00:12:15.990 --> 00:12:18.730
convert them into IPP attributes,
and then we take those two

00:12:18.820 --> 00:12:22.590
pieces of information and
we hand them to the server.

00:12:23.270 --> 00:12:26.180
Server, CUPS, looks at this and goes,
"Hey, wow, I've got PDF.

00:12:26.270 --> 00:12:27.880
The printer you're
targeting is PostScript.

00:12:27.880 --> 00:12:29.750
I've got to get from PDF to PostScript.

00:12:29.750 --> 00:12:32.700
So what am I going to do?"
And it looks through the system,

00:12:32.700 --> 00:12:35.500
and on OS X it finds a piece
of quartz technology that can

00:12:35.500 --> 00:12:36.820
convert PDF to PostScript.

00:12:37.030 --> 00:12:39.400
So it runs that and it
hands it the file and says,

00:12:39.400 --> 00:12:42.010
"Hey, I need you to convert this to
PostScript." It starts running

00:12:42.020 --> 00:12:44.120
and it writes to its standard
out a PostScript stream.

00:12:44.120 --> 00:12:45.810
It's not a device-ready
PostScript stream,

00:12:45.810 --> 00:12:48.260
but it's a PostScript stream
with all the drawing commands.

00:12:48.260 --> 00:12:50.600
CUPS also said, "Hey, well,
I need somebody who can make it

00:12:50.660 --> 00:12:53.430
device-ready." So attached to the
standard out of that converter,

00:12:53.430 --> 00:12:56.580
I'm going to put another process that
knows how to take that PostScript stream

00:12:56.690 --> 00:12:58.740
and make it device-ready,
insert the feature

00:12:58.740 --> 00:13:02.130
code to ask for duplex,
copies, and all those sort of things.

00:13:02.230 --> 00:13:04.820
And then the last step, "Hey,
I need to talk to an AppleTalk printer.

00:13:04.940 --> 00:13:07.330
So I need some piece that
knows how to talk Pap." So I'm

00:13:07.330 --> 00:13:08.670
going to run a third process.

00:13:08.770 --> 00:13:11.150
It's reading his standard in,
which is the device-ready PostScript,

00:13:11.160 --> 00:13:12.440
and is writing to the printer.

00:13:12.440 --> 00:13:13.680
So this is the print chain.

00:13:13.700 --> 00:13:17.040
That's how you get from your
Quick Draw all the way down to

00:13:17.140 --> 00:13:19.510
PostScript going to a Pap printer.

00:13:24.720 --> 00:13:28.490
So, you all caught those three slides?

00:13:28.560 --> 00:13:30.580
This is the compatibility story.

00:13:30.610 --> 00:13:32.460
The compatibility story when
you print will go from a

00:13:32.460 --> 00:13:33.760
Cocoa application this time.

00:13:33.760 --> 00:13:36.100
Now you're using NS drawing commands.

00:13:36.120 --> 00:13:39.640
Again, that gets captured as Quartz
drawing commands and spooled as PDF.

00:13:39.710 --> 00:13:40.930
The PDF goes to disk.

00:13:40.940 --> 00:13:43.030
We take the print settings that
come out of the print dialer.

00:13:43.030 --> 00:13:44.190
We turn them into IPP attributes.

00:13:44.230 --> 00:13:45.150
We hand them to the print spooler.

00:13:45.230 --> 00:13:49.000
Same story, a very similar story to
the Carbon Printing System.

00:13:49.030 --> 00:13:50.530
But now CUPS is going
to look at it and go,

00:13:50.530 --> 00:13:54.000
"Oh, well, now you want to talk to a
printer that's hosted by a

00:13:54.060 --> 00:13:58.930
printer module that was written,
say, for 10.1 or 10.0." So what

00:13:58.930 --> 00:13:59.360
does it have to do?

00:13:59.360 --> 00:14:01.670
Well, it has to run a filter
just like it does before.

00:14:01.680 --> 00:14:04.340
And we've made PrintJobManager
look like a filter for CUPS.

00:14:04.380 --> 00:14:06.740
So the PDF file gets handed
to PrintJobManager and he

00:14:06.880 --> 00:14:10.230
does what he's always done,
run the printer module, run a converter,

00:14:10.230 --> 00:14:11.290
run an I/O module.

00:14:11.290 --> 00:14:14.310
So that's why everything
continues to work for printer

00:14:16.830 --> 00:14:19.940
The abilities of CUPS are
pretty incredible.

00:14:19.940 --> 00:14:20.980
It does a lot of things.

00:14:21.150 --> 00:14:22.780
And it's important that you
understand we're not going to

00:14:22.780 --> 00:14:24.600
bring out all those things,
certainly not in Jaguar,

00:14:24.600 --> 00:14:26.660
and my suspicion is not ever.

00:14:26.710 --> 00:14:27.960
We're going to target our customers.

00:14:28.110 --> 00:14:30.860
What is the feature set that makes
the most sense for our customers?

00:14:30.860 --> 00:14:33.680
But it's important that you understand
what features we're not bringing

00:14:33.760 --> 00:14:35.600
out now and may not ever bring out.

00:14:35.640 --> 00:14:38.610
But CUPS has authentication,
it has encryption, it supports quotas,

00:14:38.610 --> 00:14:40.960
it supports printer classes,
which are groups of printers

00:14:41.130 --> 00:14:44.480
which look like one printer
to everybody else on the net.

00:14:44.540 --> 00:14:47.000
And it has a web administration.

00:14:47.220 --> 00:14:50.150
The first set of those things we're just
not going to support right now in Jaguar.

00:14:50.160 --> 00:14:53.190
If you change CUPS underneath
us to enable those things,

00:14:53.370 --> 00:14:55.060
our UI and everything still works.

00:14:55.170 --> 00:14:58.290
So we're compatible with them,
but we're not going to put

00:14:58.290 --> 00:14:59.760
in UI to enable any of this.

00:14:59.850 --> 00:15:00.960
Web administration is a little different.

00:15:01.020 --> 00:15:04.010
We're also not putting in UI to say,
"Okay, here's how you get to the web

00:15:04.670 --> 00:15:05.850
administration," but it's there.

00:15:05.940 --> 00:15:07.940
If you're on a system,
you can fire up Explorer,

00:15:08.010 --> 00:15:10.680
you can connect to the IPP port,
and you can get a web page that

00:15:10.730 --> 00:15:13.860
shows you all the printers,
their current status, and that is there.

00:15:13.950 --> 00:15:16.600
It's great for remote administration,
that kind of thing.

00:15:17.610 --> 00:15:21.130
So the best way to understand CUPS,
understand what's in there,

00:15:21.130 --> 00:15:23.590
what we're using and
what we're not using is,

00:15:23.590 --> 00:15:26.640
and I sold this too hard yesterday so I'm
going to sell it a little softly today.

00:15:26.640 --> 00:15:28.480
You must buy this book
if you want to understand

00:15:28.480 --> 00:15:30.000
Darwin printing or OS X printing.

00:15:30.000 --> 00:15:31.710
That was a little softer than yesterday.

00:15:31.830 --> 00:15:32.620
This is a great book.

00:15:32.620 --> 00:15:33.920
It's written by Michael Sweet.

00:15:33.920 --> 00:15:35.180
He's the architect of CUPS.

00:15:35.250 --> 00:15:37.810
It explains the internet
printing protocol better than

00:15:37.870 --> 00:15:39.500
anywhere else I've ever found.

00:15:39.690 --> 00:15:41.900
Better than anywhere
else I've looked a lot.

00:15:41.960 --> 00:15:43.290
You should watch the Darwin session.

00:15:43.340 --> 00:15:45.040
Michael Sweet,
again the architect of CUPS,

00:15:45.040 --> 00:15:47.680
gave the Darwin printing session
yesterday tons of information.

00:15:47.740 --> 00:15:49.790
I told him his job was to overload
the people in the audience.

00:15:49.840 --> 00:15:50.400
I think he did.

00:15:50.540 --> 00:15:52.220
Just tons of information.

00:15:52.280 --> 00:15:54.120
There's online documentation.

00:15:54.120 --> 00:15:55.340
It's at CUPS.org.

00:15:55.340 --> 00:15:57.140
It's also on your Jaguar CDs.

00:15:57.210 --> 00:15:58.000
And read the code.

00:15:58.090 --> 00:15:59.020
Again, we're open source.

00:15:59.020 --> 00:16:01.530
And it's a hard thing to get your mind
around this whole open source concept.

00:16:01.650 --> 00:16:05.010
The concept that you can see exactly
what we do every day with our spooler.

00:16:05.100 --> 00:16:07.120
The concept that you can actually
go fix bugs and instead of

00:16:07.120 --> 00:16:09.050
just giving us the bug report,
go here's the bug report

00:16:09.210 --> 00:16:10.020
and here's the fix.

00:16:10.100 --> 00:16:11.530
So we want you to get
your head around that.

00:16:11.540 --> 00:16:12.270
It's taken me a while.

00:16:13.680 --> 00:16:14.950
But some people just get it.

00:16:15.060 --> 00:16:17.790
And I wanted to give a quick
example of somebody who got it.

00:16:17.910 --> 00:16:18.900
This is Global Graphics.

00:16:18.900 --> 00:16:22.670
They saw the announcement from
Easy Software back in March and said,

00:16:22.670 --> 00:16:23.890
hey, Apple has licensed our stuff.

00:16:23.960 --> 00:16:27.520
Now, Apple, we didn't want to announce
this until the WWDC,

00:16:27.520 --> 00:16:28.890
so there's this hole
between March and now.

00:16:28.990 --> 00:16:32.400
But these guys guessed that maybe we were
going to announce something sometime,

00:16:32.400 --> 00:16:33.870
so they went and they downloaded CUPS.

00:16:33.960 --> 00:16:35.850
And we had been working
with the CUPS folks,

00:16:35.960 --> 00:16:37.400
so it built on OS X already.

00:16:37.400 --> 00:16:39.020
So back in March,
you could build it on OS X.

00:16:39.020 --> 00:16:40.000
So they downloaded it, built it.

00:16:40.080 --> 00:16:42.400
Said, hey,
we've got these PostScript pieces.

00:16:42.480 --> 00:16:46.400
We have pieces that convert PostScript to
PDF and PostScript to raster.

00:16:46.400 --> 00:16:48.260
So maybe we can move that to OS X.

00:16:48.260 --> 00:16:49.200
So they moved it to OS X.

00:16:49.200 --> 00:16:50.880
And they said, well,
maybe we can plug it into CUPS.

00:16:51.000 --> 00:16:52.220
And they plugged it into CUPS,
and all of a sudden,

00:16:52.220 --> 00:16:54.660
they had a PostScript rip in
a CUPS system running on OS X.

00:16:54.660 --> 00:16:57.200
There was no UI for it, right,
because they didn't have our pieces.

00:16:57.200 --> 00:16:58.760
They did this completely independently.

00:16:58.780 --> 00:17:00.560
But they completely understood
the open source thing,

00:17:00.560 --> 00:17:01.500
got it, and built everything.

00:17:01.500 --> 00:17:05.400
And, you know, OS X is built upon Unix.

00:17:05.500 --> 00:17:07.620
So if you have some Unix software,
it's easy to port.

00:17:07.620 --> 00:17:10.200
CUPS has great documentation,
and it's easy to understand.

00:17:10.200 --> 00:17:13.770
And, you know, with those two messages,
maybe you might think it would take

00:17:13.860 --> 00:17:16.360
them less than two days in order to
get a PostScript rip onto our system.

00:17:16.360 --> 00:17:17.430
But two days is what it took them.

00:17:17.440 --> 00:17:18.740
Fairly impressive.

00:17:18.740 --> 00:17:21.830
And the result is you can actually
print to a raster printer a

00:17:21.830 --> 00:17:23.660
PostScript file from Global Graphics.

00:17:23.770 --> 00:17:26.570
So I wanted to really applaud
these guys because they got it,

00:17:26.600 --> 00:17:27.610
and they did it quickly.

00:17:29.600 --> 00:17:31.690
So how do you get it,
and how do you do it quickly?

00:17:31.830 --> 00:17:34.960
So, if you go look in the code,
there is a configuration file,

00:17:34.970 --> 00:17:38.040
cubsd.conf,
that has a lot of comments and all

00:17:38.160 --> 00:17:40.100
the switches for the print spooler.

00:17:40.100 --> 00:17:42.800
And you can go in there and read
it and immediately understand

00:17:42.800 --> 00:17:44.700
all the different things you can
and cannot do with the spooler.

00:17:44.700 --> 00:17:46.400
So it's a great place to start.

00:17:46.470 --> 00:17:47.980
Filters,
you can go look at the documentation

00:17:48.020 --> 00:17:51.000
for filters and figure out how to
plug in some technology you have.

00:17:51.000 --> 00:17:52.100
It might not be a PostScript RIP.

00:17:52.210 --> 00:17:54.500
It might be a Microsoft Word converter.

00:17:54.610 --> 00:17:57.150
It might be some strange
graphics format converter.

00:17:57.370 --> 00:17:58.730
Whatever you like,
it's an easy way to get

00:17:58.730 --> 00:18:00.500
things into the print system.

00:18:00.600 --> 00:18:01.800
CUPS has a lot of different logs.

00:18:01.810 --> 00:18:03.600
If you want to present that
kind of information to the user,

00:18:03.600 --> 00:18:06.770
there's accounting logs,
there's error logs, access logs.

00:18:06.910 --> 00:18:08.500
The access log is kind of
interesting because it's

00:18:08.500 --> 00:18:09.760
actually in common log format.

00:18:09.860 --> 00:18:11.700
So if you have analog or
any of those other tools,

00:18:11.700 --> 00:18:16.210
you can actually read it and generate
HTML reports right out the back door.

00:18:16.530 --> 00:18:17.470
The last piece is GIMP print.

00:18:17.590 --> 00:18:19.280
It's actually not in
the CUPS source code,

00:18:19.360 --> 00:18:21.520
but it's a sister project, if you will.

00:18:21.620 --> 00:18:23.400
It's a set of open
source printer drivers.

00:18:23.400 --> 00:18:25.840
You go out there,
they split up 300 printers.

00:18:25.920 --> 00:18:27.000
We've worked with them as well.

00:18:27.000 --> 00:18:29.800
If you download that project,
it will build now on OS X,

00:18:29.840 --> 00:18:31.300
and it will work with CUPS.

00:18:31.380 --> 00:18:32.780
So it's a pretty good story.

00:18:32.830 --> 00:18:38.350
And if you have drivers that
you're developing that you'd

00:18:38.350 --> 00:18:38.350
like to be open source,
it's a great project to be involved in.

00:18:38.770 --> 00:18:40.970
Places outside of the code to look at,
because I think there are a couple of

00:18:40.970 --> 00:18:42.690
you who might want to go there instead.

00:18:42.790 --> 00:18:45.470
CUPS.org PWG.org is the
printer working group.

00:18:45.580 --> 00:18:47.360
This is the printer
working group of the IEEE.

00:18:47.540 --> 00:18:50.040
This is where you'll find
the IPP specifications.

00:18:50.110 --> 00:18:52.740
It's a pretty good site.

00:18:52.790 --> 00:18:58.020
There's a lot of interesting
information there and you can see

00:18:58.020 --> 00:18:58.020
some of the projects that are ongoing.

00:18:58.020 --> 00:18:58.020
And of course the
GIMP print SourceForge site.

00:18:59.350 --> 00:19:04.120
So for user interface,
we had to make some changes in

00:19:04.120 --> 00:19:07.540
order to support all this new power
that was coming into the system.

00:19:07.580 --> 00:19:11.320
And what do you do when
you get a lot of power?

00:19:11.730 --> 00:19:15.120
Well, the initial reaction was
to do something like this,

00:19:15.310 --> 00:19:18.110
which take essentially that
CUPS configuration file and

00:19:18.110 --> 00:19:19.740
blast it all out to the user.

00:19:19.810 --> 00:19:21.890
But we knew we didn't want to do that.

00:19:22.230 --> 00:19:24.100
Please don't do this.

00:19:24.100 --> 00:19:25.440
It's not fair to our users.

00:19:25.520 --> 00:19:28.430
But it does give you some
idea of what CUPS can do.

00:19:28.880 --> 00:19:29.660
But what did we do?

00:19:29.800 --> 00:19:30.760
So we revamped Print Center.

00:19:30.760 --> 00:19:31.650
In fact, we rewrote it.

00:19:32.010 --> 00:19:33.270
We put in new printer browsers.

00:19:33.480 --> 00:19:34.340
They're more asynchronous.

00:19:34.340 --> 00:19:35.040
They behave better.

00:19:35.040 --> 00:19:36.400
They look better.

00:19:36.460 --> 00:19:38.560
And earlier in the year,
you probably saw, along with iPhoto,

00:19:38.560 --> 00:19:41.110
we rolled out a new simple
print dialog for users,

00:19:41.260 --> 00:19:45.150
consumer type users,
and the concept of printer presets

00:19:45.860 --> 00:19:50.900
where a manufacturer device can wrap
all of his complicated settings.

00:19:50.960 --> 00:19:52.600
If I'm printing a photo,
I want this paper,

00:19:52.600 --> 00:19:55.630
and it should have this gamma setting,
and I should be enhancing this part.

00:19:55.720 --> 00:19:58.970
You can wrap that all up into one
single element that the user can select.

00:19:59.130 --> 00:20:01.560
So that was the idea behind presets.

00:20:02.210 --> 00:20:05.100
So the PrintCenter rewrite
took place in Cocoa,

00:20:05.210 --> 00:20:07.040
and I also want to take
a moment to applaud them.

00:20:07.040 --> 00:20:09.330
So by rewriting it,
we were able to shrink the

00:20:09.480 --> 00:20:12.040
code size by a factor of five,
the number of lines of source code,

00:20:12.040 --> 00:20:14.890
which is pretty incredible,
especially when it's more powerful,

00:20:14.890 --> 00:20:16.960
it does more, and we pick up a lot
of the Cocoa features.

00:20:17.110 --> 00:20:19.410
For instance,
you can go in there and now customize,

00:20:19.410 --> 00:20:21.670
as a user,
what you want to see in PrintCenter.

00:20:21.770 --> 00:20:22.940
So big hand for Cocoa.

00:20:22.940 --> 00:20:25.500
They were--it was a
terrific thing to work with.

00:20:25.630 --> 00:20:29.690
And I wanted to show you quickly
what PrintCenter looks like,

00:20:29.750 --> 00:20:31.870
and there are a couple
other demos that may work.

00:20:31.980 --> 00:20:33.300
We'll see.

00:20:33.420 --> 00:20:36.400
But give you an idea of what
can be customized and what our

00:20:36.460 --> 00:20:39.020
goals were there in PrintCenter.

00:20:40.920 --> 00:20:41.750
Here's Print Center.

00:20:41.750 --> 00:20:47.050
It defaults to a look that's very similar
today with the exception of the toolbar.

00:20:47.210 --> 00:20:50.090
But the idea was a lot of
our users are home users.

00:20:50.270 --> 00:20:52.060
They have maybe one printer.

00:20:52.100 --> 00:20:53.690
Unlikely they have more than that.

00:20:53.830 --> 00:20:55.890
And they don't want to be bothered with
a lot of the different parts of it.

00:20:55.960 --> 00:20:59.780
So what we show them is the name
of the printer and the status.

00:20:59.990 --> 00:21:01.740
Simple, nothing going on.

00:21:01.810 --> 00:21:06.240
But a lot of you, in particular,
might want more information.

00:21:06.240 --> 00:21:06.240
So,

00:21:06.950 --> 00:21:08.840
Just like you'd expect from
a good Cocoa application,

00:21:08.840 --> 00:21:10.030
you can customize the toolbar.

00:21:10.030 --> 00:21:15.660
You can add all sorts of stuff up there
and get the tools that you want close

00:21:17.620 --> 00:21:24.500
This was probably one of the major
sources of feedback from you was,

00:21:24.540 --> 00:21:27.740
"Hey, can you put this button right
at the front of PrintCenter?

00:21:27.740 --> 00:21:30.280
I want to be able to configure
right from PrintCenter,

00:21:30.280 --> 00:21:34.940
right from the start."
So with this configuration,

00:21:34.940 --> 00:21:36.710
you can do it.

00:21:36.710 --> 00:21:42.520
We also have a lot more information
available from PrintCenter.

00:21:42.520 --> 00:21:42.520
Get some of this up here.

00:21:46.700 --> 00:21:52.650
You can see who's hosting a computer
because we now have printer sharing.

00:21:52.730 --> 00:21:54.290
We can tell you where it is.

00:21:54.390 --> 00:21:55.590
We can tell you what type it is.

00:21:55.700 --> 00:22:00.840
And if you look here,
there are a couple interesting elements.

00:22:00.990 --> 00:22:02.620
We have a local printer.

00:22:02.640 --> 00:22:05.280
This is Epson connected right here.

00:22:08.860 --> 00:22:10.840
We have a printer that's right
next to it that's being shared

00:22:10.840 --> 00:22:13.490
by the machine right here.

00:22:13.490 --> 00:22:17.840
And we have another machine that's
over at this address 206.14.52.56.

00:22:17.860 --> 00:22:20.130
That machine's about
100 miles north of here.

00:22:20.240 --> 00:22:21.850
When I set up this PowerBook,
I actually went into the

00:22:21.850 --> 00:22:22.900
CUPS configuration file.

00:22:22.900 --> 00:22:24.020
We don't have UI for this.

00:22:24.190 --> 00:22:26.170
But I told it, "Hey,
I want you not only to

00:22:26.170 --> 00:22:29.100
look on your local subnet,
but I want you to go talk to this

00:22:29.120 --> 00:22:33.040
Mac OS X machine that's sitting up here
in Sonoma and get all its printers."

00:22:33.040 --> 00:22:35.260
And it happens to be sharing one printer.

00:22:35.260 --> 00:22:36.700
So we have two local machines
and one that's a long way away.

00:22:38.450 --> 00:22:39.700
That was the idea behind PrintCenter.

00:22:39.700 --> 00:22:42.440
I'm going to leave PrintCenter
behind very quickly.

00:22:42.440 --> 00:22:46.050
I want to talk a little bit about
the remote printing aspect of it.

00:22:46.100 --> 00:22:49.560
Cubs, by default, will pull, as I said,
the local subnet.

00:22:49.580 --> 00:22:51.570
And that's pretty powerful,
and that's what we're going

00:22:51.570 --> 00:22:52.340
to bring out in Jaguar.

00:22:52.340 --> 00:22:55.900
But there is this ability to go
out and talk to remote printers.

00:22:55.900 --> 00:23:01.380
And I work with my brother, actually,
and he's the man who is sitting

00:23:01.410 --> 00:23:03.650
at a desk right now with that
desk jet sitting next to him.

00:23:03.660 --> 00:23:05.980
And, you know, I love my younger brother.

00:23:07.320 --> 00:23:09.470
But every once in a while,
I need to send him a little

00:23:09.900 --> 00:23:11.550
message to kind of keep him honest.

00:23:14.890 --> 00:23:17.040
So this is the Epson C80,
which comes up selected.

00:23:17.040 --> 00:23:20.890
If I go to the print dialog,
select the DeskJet 930,

00:23:20.890 --> 00:23:22.310
there'll be a small delay here.

00:23:22.410 --> 00:23:24.780
What's happening right now is we're
talking to that machine and we're saying,

00:23:24.780 --> 00:23:26.560
"Hey,
can you tell me about yourself?" And,

00:23:26.560 --> 00:23:30.280
of course, this delay in a real demo is a
little longer than you might like.

00:23:35.300 --> 00:23:36.290
There you go.

00:23:36.300 --> 00:23:38.300
How about that?

00:23:38.300 --> 00:23:38.980
Okay.

00:23:38.980 --> 00:23:42.250
So it's talking to the machine,
thank God, and it pulls down a PPD that

00:23:42.250 --> 00:23:43.510
describes that machine.

00:23:43.610 --> 00:23:48.280
And so what we can do once that
information comes back down,

00:23:48.280 --> 00:23:52.720
we now cache it so we now have it,
is we can actually build

00:23:52.720 --> 00:23:55.000
the real UI for this driver.

00:23:55.080 --> 00:24:00.060
So even though this is a remote printer,
we can present the custom HP UI.

00:24:00.060 --> 00:24:00.060
I think that's pretty impressive.

00:24:00.060 --> 00:24:00.060
I like that.

00:24:03.010 --> 00:24:05.030
I know I had to beg for it,
but I appreciate it.

00:24:05.030 --> 00:24:06.940
So we'll just print that,
and that's now actually heading north,

00:24:06.980 --> 00:24:10.000
and it'll wake my brother up,
and maybe he will get back to work.

00:24:12.030 --> 00:24:15.420
So I've got one more demo for you here,
and this one needs a

00:24:15.460 --> 00:24:17.140
little bit of background.

00:24:17.310 --> 00:24:19.440
Printing is in the
graphics and imaging group.

00:24:19.440 --> 00:24:21.400
That's the group that we work in,
the printing team.

00:24:21.450 --> 00:24:24.580
And the other parts of the graphics
and imaging group are teams like

00:24:24.710 --> 00:24:28.820
OpenGL and the Quartz Compositor,
the Quartz Xtreme group.

00:24:29.190 --> 00:24:30.490
And you've probably seen
a lot of their demos.

00:24:30.490 --> 00:24:32.210
It's kind of tough being in
that group because they have

00:24:32.310 --> 00:24:35.140
great demos and printing,
we have to work a little harder.

00:24:35.300 --> 00:24:39.360
So you kind of get a little small
inferiority complex working with them.

00:24:39.460 --> 00:24:42.170
So what we did for the graphics and
imaging overview the other day is

00:24:42.230 --> 00:24:43.670
we did this wireless printing demo.

00:24:43.730 --> 00:24:45.560
So there was all this
great compositing demos,

00:24:45.560 --> 00:24:47.020
and then we came along with
the wireless printing demo,

00:24:47.020 --> 00:24:47.930
and I was pretty happy with that.

00:24:48.110 --> 00:24:50.420
It sort of felt like we held our own.

00:24:50.590 --> 00:24:53.350
But then later, there was the compositing
session where they had held

00:24:53.350 --> 00:24:56.150
their really great demos for,
and now I really have

00:24:56.150 --> 00:24:57.210
an inferiority complex.

00:24:57.290 --> 00:25:01.670
So there is an old circus saying,
which is, if the other high wire

00:25:01.850 --> 00:25:04.580
act has better tricks,
you need to raise the

00:25:04.580 --> 00:25:06.240
wire and remove the net.

00:25:06.330 --> 00:25:07.000
And that's what we're going to do.

00:25:07.000 --> 00:25:11.180
I've got a demo for you that
nobody inside of Apple or

00:25:11.490 --> 00:25:13.300
outside of Apple has seen.

00:25:13.390 --> 00:25:14.530
I'm the only person who's ever seen this.

00:25:14.710 --> 00:25:16.540
I've seen it work once.

00:25:16.540 --> 00:25:17.700
Okay?

00:25:17.790 --> 00:25:19.740
And we're going to try this.

00:25:22.400 --> 00:25:23.560
do is open up this Epson here.

00:25:23.560 --> 00:25:24.440
It's an Epson printer.

00:25:24.530 --> 00:25:25.500
It's a Raster printer.

00:25:25.500 --> 00:25:27.600
Start with that.

00:25:27.750 --> 00:25:29.960
The idea at first was
essentially I wrote this during,

00:25:30.070 --> 00:25:31.860
in between print sessions
the last couple days.

00:25:31.880 --> 00:25:33.920
We've had this request a little bit,
which was, hey, you know,

00:25:33.920 --> 00:25:37.470
why can't I drag, say,
a PDF file into a queue so it can print?

00:25:37.580 --> 00:25:40.170
So this is the old desktop
printer type behavior.

00:25:40.260 --> 00:25:42.370
So we can do that and that would
work and you can trust me and

00:25:42.560 --> 00:25:43.940
people have actually seen that.

00:25:44.100 --> 00:25:47.120
But that wasn't enough because of
all the great compositing demos.

00:25:47.170 --> 00:25:49.990
So I took the Global Graphics
code that they had sent over our

00:25:49.990 --> 00:25:52.680
way and what they had in there,
one piece they had,

00:25:52.680 --> 00:25:54.580
could convert PostScript to PDF.

00:25:54.580 --> 00:25:57.790
So I put that in underneath
CUPS and told CUPS about it.

00:25:58.100 --> 00:26:01.170
So now CUPS knows, okay,
if I got a PDF file, a PostScript file,

00:26:01.170 --> 00:26:01.810
I can get to PDF.

00:26:01.950 --> 00:26:06.200
Well, Quartz has a piece already in there
that can go from PDF to raster,

00:26:06.200 --> 00:26:09.140
and then the printer module for the
Epson can go the rest of the way.

00:26:09.220 --> 00:26:11.700
So, conceptually,
if we drag a PostScript file

00:26:11.820 --> 00:26:14.930
into this print queue,
it would accept the drop,

00:26:15.090 --> 00:26:18.520
hand it to CUPS, CUPS would go, "Oh, wow,
PostScript." Okay, well,

00:26:18.520 --> 00:26:20.870
I can get that to PDF and go, "Well,
I can use Quartz to go PDF to

00:26:20.950 --> 00:26:23.300
Epson," and then it will hand it in,
and we will print.

00:26:23.420 --> 00:26:26.990
So, not this one, it is that one.

00:26:27.910 --> 00:26:29.840
The status is going to
be a little shaky here.

00:26:29.840 --> 00:26:31.240
I'm not sure I got the status working.

00:26:31.240 --> 00:26:33.140
Oh, man.

00:26:33.320 --> 00:26:37.200
Okay, well, like I said,
I've seen this work once.

00:26:38.210 --> 00:26:41.620
And what I'm going to do is
just dance here for a moment.

00:26:41.620 --> 00:26:44.490
Hope the printing comes out.

00:26:49.070 --> 00:26:51.640
So was that all very clear,
what's actually trying to have happen?

00:26:51.640 --> 00:26:56.670
Hey, wait a minute.

00:26:56.670 --> 00:26:56.670
How about that?

00:26:56.670 --> 00:26:56.670
Okay, here we go.

00:26:58.550 --> 00:27:00.420
So this is about a 20-page
PostScript document.

00:27:00.460 --> 00:27:03.080
It's cranking out.

00:27:03.120 --> 00:27:05.500
It's going very quickly
because it's a great printer.

00:27:05.500 --> 00:27:10.600
And PostScript to Raster,
which we've never been

00:27:10.600 --> 00:27:11.870
able to do on the system.

00:27:14.800 --> 00:27:20.500
[Transcript missing]

00:27:28.610 --> 00:27:30.560
So,
just wanted to give you a quick summary

00:27:30.560 --> 00:27:32.640
so far before I hand off the microphone.

00:27:32.790 --> 00:27:35.300
We're making big changes
in OS X printing.

00:27:35.560 --> 00:27:36.100
It's very important.

00:27:36.100 --> 00:27:38.680
It's the principle or
it's the user interface.

00:27:38.850 --> 00:27:43.340
Please,
please do not leave this room without

00:27:43.430 --> 00:27:46.990
the message that we are maintaining
compatibility for your applications,

00:27:46.990 --> 00:27:46.990
for your printer modules,
and for your printer dialog extensions.

00:27:47.190 --> 00:27:50.930
We are trying to make this as easy a
change for you as possible given the

00:27:50.930 --> 00:27:53.170
extent of the changes we're making.

00:27:54.040 --> 00:27:57.960
And so I tried to not really scare you,
but sort of give you a good grasp of

00:27:57.960 --> 00:27:59.240
the number of changes that are coming.

00:27:59.400 --> 00:28:01.870
Paul Danbold is now going to
come up here and calm you down,

00:28:01.910 --> 00:28:04.870
show you the new APIs,
show you that they're very

00:28:04.870 --> 00:28:08.230
similar to the old APIs and
that the old APIs still work.

00:28:08.230 --> 00:28:08.230
So, Paul?

00:28:13.200 --> 00:28:32.070
Thank you very much.

00:28:32.070 --> 00:28:32.070
Okay, thanks Rich.

00:28:32.070 --> 00:28:32.070
Good morning.

00:28:32.070 --> 00:28:32.070
And if I can figure out how to change
the -- which button do I press?

00:28:32.070 --> 00:28:32.070
Ah,
I have to turn it around the right way.

00:28:36.110 --> 00:28:38.200
Okay.

00:28:38.200 --> 00:28:40.240
Which button were you pressing?

00:28:40.240 --> 00:28:41.120
There we go.

00:28:41.150 --> 00:28:44.310
Got it.

00:28:44.310 --> 00:28:44.310
Come on.

00:28:44.680 --> 00:28:47.400
All right, as Rich said,
I'm going to talk about new APIs,

00:28:47.570 --> 00:28:50.640
talk a little bit about new sample code,
new documentation.

00:28:50.680 --> 00:28:52.820
Along the way,
a few guidelines and words of advice

00:28:52.960 --> 00:28:57.600
for anybody in the business of
producing or consuming print jobs.

00:28:57.610 --> 00:28:58.760
So we'll start with the new APIs.

00:28:58.810 --> 00:29:00.530
These are all application APIs.

00:29:00.650 --> 00:29:05.570
These are all things relevant for
Carbon application developers.

00:29:05.610 --> 00:29:07.650
In particular,
some of the things we're talking

00:29:07.650 --> 00:29:10.050
about here I think are going
to be useful for people who are

00:29:10.050 --> 00:29:13.600
printing without a print dialog,
for people writing printer utilities.

00:29:13.600 --> 00:29:15.850
And when we come to
talk about preset APIs,

00:29:15.850 --> 00:29:19.600
it's for people who want to take
advantage of presets like iPhoto.

00:29:19.600 --> 00:29:22.930
So we'll start with the no dialog APIs.

00:29:23.550 --> 00:29:25.360
If I can get this gadget working.

00:29:25.360 --> 00:29:26.100
Okay.

00:29:26.100 --> 00:29:31.360
On 10.1 today,
we've got accessor functions for the

00:29:31.360 --> 00:29:34.330
page format and print settings objects,
so you can set up a print job

00:29:34.380 --> 00:29:37.380
and print it through a print loop
without using any print dialogs.

00:29:37.380 --> 00:29:40.720
There's no way to suppress
our spooling dialog when we're

00:29:40.720 --> 00:29:42.050
generating the spool file.

00:29:42.060 --> 00:29:47.060
So it's obviously something
we were remiss in addressing.

00:29:47.060 --> 00:29:51.540
So we've added four new APIs,
so-called no-dialog APIs.

00:29:52.040 --> 00:29:55.140
You can use these instead of
the existing print loop APIs.

00:29:55.140 --> 00:29:56.220
They take the same arguments.

00:29:56.220 --> 00:30:00.300
Basically, if you call these,
you're just telling the printing system,

00:30:00.300 --> 00:30:03.220
I don't want to see your progress
dialog while the job's being generated.

00:30:06.170 --> 00:30:11.530
So I'd say use these if your application
doesn't use our print dialogs.

00:30:11.580 --> 00:30:15.130
Also use these if, for example,
you want to use a print loop to support a

00:30:15.130 --> 00:30:18.000
saver's PDF function in your application.

00:30:18.110 --> 00:30:21.190
You could also use these if you
want to generate and display

00:30:21.300 --> 00:30:23.000
your own progress dialog.

00:30:23.000 --> 00:30:27.150
But I'd ask you not to do that unless
you've got a really good reason,

00:30:27.200 --> 00:30:32.000
because we'd rather most applications,
when they're printing,

00:30:32.000 --> 00:30:35.000
the user sees the same spooling dialog.

00:30:36.000 --> 00:30:37.000
Looks like that printer's very busy, sir.

00:30:37.000 --> 00:30:40.000
Okay, so those are very easy.

00:30:40.000 --> 00:30:44.740
The next set of functions we
call the PM Printer functions.

00:30:44.740 --> 00:30:48.000
In 10.1 today,
you can call a function called

00:30:48.000 --> 00:30:50.000
PM Session Create Printer List.

00:30:50.000 --> 00:30:50.990
It'll hand you back a
list of printer names.

00:30:51.000 --> 00:30:54.230
That's the same set of names
that you see in Print Center and

00:30:54.230 --> 00:30:58.000
in the print dialog when you're
looking at available printers.

00:30:58.150 --> 00:31:03.990
And you can also call a function
called PM Session Get Current Printer,

00:31:04.000 --> 00:31:04.000
which will hand you back
a PM Printer object.

00:31:04.070 --> 00:31:09.130
From which you can find out, for example,
resolution settings for the printer,

00:31:09.130 --> 00:31:13.000
and if it's a PostScript printer,
the URL to the PPD file.

00:31:13.140 --> 00:31:16.130
But it's pretty limited,
so we're making the PM Printer function

00:31:16.160 --> 00:31:17.980
a first-class citizen in Jaguar.

00:31:18.040 --> 00:31:21.000
And there's a new way of
getting PM Printer objects,

00:31:21.000 --> 00:31:23.990
and then there's a long
list of accessor functions.

00:31:24.000 --> 00:31:27.000
PM Server Create Printer List.

00:31:27.000 --> 00:31:29.960
You should use this instead of
PM Session Create Printer List,

00:31:30.130 --> 00:31:33.000
not just because you don't have
to create a session to call it,

00:31:33.000 --> 00:31:33.000
but because it'll hand you back
in a row of different ways.

00:31:33.000 --> 00:31:33.660
PM Printer List.

00:31:33.660 --> 00:31:35.410
You should use this instead
of PM Printer objects,

00:31:35.450 --> 00:31:37.560
and once you've got those objects,
you can then hand them to a

00:31:37.560 --> 00:31:39.990
bunch of new APIs to get some
hopefully useful information.

00:31:40.040 --> 00:31:40.320
PM Printer List.

00:31:40.320 --> 00:31:41.190
You should use this instead
of PM Printer objects,

00:31:41.200 --> 00:31:42.230
and once you've got those objects,
you can then hand them to a

00:31:42.230 --> 00:31:43.500
bunch of new APIs to get some
hopefully useful information.

00:31:43.500 --> 00:31:46.700
The Get Name function just hands
you back the name of the printer

00:31:46.700 --> 00:31:48.490
that you'd see in Print Center.

00:31:48.680 --> 00:31:51.830
Get ID will hand you back
the unique internal name we

00:31:51.830 --> 00:31:54.000
use for every printer queue.

00:31:54.160 --> 00:31:59.590
Something that you may have seen
if you've been running Jaguar.

00:31:59.650 --> 00:32:04.480
The new Print Center allows you
to enter a text string describing

00:32:04.480 --> 00:32:05.750
the location of a printer.

00:32:05.890 --> 00:32:08.960
This is very useful if you're sharing a
printer and you want to tell everybody

00:32:08.960 --> 00:32:11.280
that's in the hallway or in your office,
whatever.

00:32:11.280 --> 00:32:15.590
So the Get Location API will return
to you the string that the user typed

00:32:15.700 --> 00:32:18.040
in when he or she created the queue.

00:32:18.040 --> 00:32:21.700
Most of the other functions are, I think,
helpfully named,

00:32:21.790 --> 00:32:24.120
so it's pretty obvious what they do.

00:32:24.120 --> 00:32:26.080
There's a few more here.

00:32:26.080 --> 00:32:27.890
A couple of words about the second one.

00:32:28.100 --> 00:32:31.920
PM Printer is PostScript capable.

00:32:31.920 --> 00:32:33.990
I guess the use of it is obvious.

00:32:34.090 --> 00:32:39.950
You should use this instead of the old
API called PM Is PostScript Driver.

00:32:40.200 --> 00:32:45.660
Use this to find out if the target
printer is PostScript capable.

00:32:45.750 --> 00:32:48.670
And for example,
if you had an application that had a

00:32:48.700 --> 00:32:53.600
print dialog extension that had some
features for non-PostScript printers and

00:32:53.600 --> 00:32:56.080
a different set for PostScript printers,
you'd call this function.

00:32:56.080 --> 00:32:59.520
And then change your UI accordingly.

00:32:59.530 --> 00:33:01.230
Get State.

00:33:01.400 --> 00:33:04.610
That function will tell you
whether the PM printer that

00:33:04.610 --> 00:33:09.720
you're passing into the function,
whether its associated printer is idle

00:33:09.720 --> 00:33:12.200
or busy or maybe the queue stopped.

00:33:12.350 --> 00:33:14.370
So there's a few more.

00:33:14.450 --> 00:33:17.520
So basically,
this is a useful set of functions.

00:33:17.570 --> 00:33:19.550
I think some applications
make care to use them.

00:33:19.600 --> 00:33:21.650
Certainly if you're
writing a printer utility,

00:33:21.650 --> 00:33:23.310
you'll probably find these useful.

00:33:25.250 --> 00:33:29.630
Preset Functions So, as Rich mentioned,
when iPhoto came out, we introduced the

00:33:29.630 --> 00:33:31.220
simplified print dialog.

00:33:31.220 --> 00:33:34.030
We also introduced
this notion of presets.

00:33:34.150 --> 00:33:38.200
Presets are basically just collections
of printer module settings,

00:33:38.210 --> 00:33:41.250
and by picking a preset,
it's basically a one-click shortcut

00:33:41.650 --> 00:33:45.330
to going into the print dialog panels
and picking paper type and print

00:33:45.330 --> 00:33:47.120
quality mode and things like that.

00:33:47.120 --> 00:33:50.520
So, very useful,
especially for iPhoto users.

00:33:50.520 --> 00:33:52.980
And our thinking is that
other applications will want

00:33:52.980 --> 00:33:54.540
to take advantage of presets.

00:33:54.540 --> 00:33:59.180
So, we're adding a few APIs to do that.

00:33:59.240 --> 00:34:02.900
And the one at the top here is probably
the one that most of you want to call,

00:34:02.960 --> 00:34:04.630
the Enable Printer Presets API.

00:34:04.700 --> 00:34:06.810
Just call that before you
bring up the print dialog,

00:34:06.860 --> 00:34:09.530
and then the presets pop-up
menu will be populated with the

00:34:09.530 --> 00:34:13.740
presets for the current printer,
assuming the printer driver has presets,

00:34:13.740 --> 00:34:15.920
and hopefully most will.

00:34:15.920 --> 00:34:21.560
So, totally straightforward to offer
presets in your print dialog.

00:34:21.560 --> 00:34:23.880
Now,
that's not exactly the same as having

00:34:23.880 --> 00:34:28.650
a print dialog where the applications
dialog shows some application

00:34:28.650 --> 00:34:33.500
controls and just the presets pop-up,
and then there's an advanced settings,

00:34:33.500 --> 00:34:37.310
advanced options button that allows
you to toggle between the simplified

00:34:37.310 --> 00:34:40.360
dialog and one that displays
all the print dialog panels.

00:34:40.370 --> 00:34:42.860
We're working on some
sample code for that,

00:34:42.860 --> 00:34:44.050
and we'll post that as soon as we can.

00:34:46.190 --> 00:34:49.880
If you need to delve deeper into presets,
and maybe printer utilities

00:34:49.880 --> 00:34:53.140
may want to do this,
there's some more functions.

00:34:53.140 --> 00:34:57.500
Copy presets will simply hand
you back the presets associated

00:34:57.500 --> 00:35:00.900
with the PM printer that
you pass into the function.

00:35:01.050 --> 00:35:05.190
Having got those presets,
you can call the Get Attributes API.

00:35:05.290 --> 00:35:08.740
That will hand you back the detailed
information about what's in the preset,

00:35:08.740 --> 00:35:13.200
which is basically an ID, a name,
and a dictionary containing all

00:35:13.200 --> 00:35:14.900
the printer module settings.

00:35:15.030 --> 00:35:17.770
Copy Name will hand you back the
localized name of the preset.

00:35:17.900 --> 00:35:21.010
And then,
once you pick the one you want to use,

00:35:21.010 --> 00:35:23.890
maybe you don't have a print
dialog and you want to do this,

00:35:24.060 --> 00:35:28.310
call the Create Print Settings function,
and it'll create print settings

00:35:28.310 --> 00:35:30.900
embodying the preset options.

00:35:30.900 --> 00:35:36.020
So, this is particularly useful,
for example, if you want to generate,

00:35:36.020 --> 00:35:39.120
say,
a test print on a particular paper type,

00:35:39.250 --> 00:35:43.700
a particular quality mode,
you don't want to use a print dialog,

00:35:43.700 --> 00:35:43.700
but you want to do this
within your application.

00:35:43.700 --> 00:35:47.460
So, call these functions,
and you'd have some

00:35:47.500 --> 00:35:51.780
control over the printers,
over features like paper

00:35:51.780 --> 00:35:53.990
type and print quality.

00:35:56.580 --> 00:35:58.950
Okay, so those are the new APIs.

00:35:59.010 --> 00:36:00.260
There's a few more going into Jaguar.

00:36:00.260 --> 00:36:04.460
You'll see them,
some of them in the seed that you

00:36:04.480 --> 00:36:08.650
got this week and a few more that
I may mention later in future seeds.

00:36:08.790 --> 00:36:11.700
We'll talk about some new sample code.

00:36:11.700 --> 00:36:14.330
Some of this isn't so new,
but it certainly appeared

00:36:14.540 --> 00:36:16.700
since we were here last year.

00:36:16.700 --> 00:36:19.630
The first three, App Using Sheets,
Carbon Quartz Drawing,

00:36:19.630 --> 00:36:22.200
and the Draw Picture,
are already available on

00:36:22.210 --> 00:36:23.610
DTS's sample code site.

00:36:23.740 --> 00:36:26.700
You can get them on the Toolbox CD.

00:36:26.740 --> 00:36:30.720
They're all Carbon apps,
and we'll be talking a little

00:36:30.720 --> 00:36:32.610
bit about what they do.

00:36:32.700 --> 00:36:35.690
PDE Print is not available yet.

00:36:35.760 --> 00:36:40.700
It's some sample code that will accompany
the print dialog extension documentation

00:36:40.700 --> 00:36:43.820
that's going to be published,
the final version published,

00:36:43.820 --> 00:36:44.700
in a few weeks from now.

00:36:44.700 --> 00:36:48.420
App Using Sheets simply tells
you how to support document modal

00:36:48.420 --> 00:36:52.670
printing and bring your print and
page setup dialogs down to Sheets.

00:36:52.700 --> 00:36:53.580
It's so easy.

00:36:53.630 --> 00:36:56.500
It's just one function,
PM session use Sheets,

00:36:56.500 --> 00:36:58.290
and a couple of callbacks.

00:36:58.530 --> 00:37:04.200
Carbon Quartz Drawing shows you how
easy it is to mix Quick Draw and

00:37:04.200 --> 00:37:08.980
Quartz 2D graphics on the same
screen and in your print job.

00:37:09.030 --> 00:37:11.500
Also how to generate a
PDF file from that content.

00:37:11.500 --> 00:37:14.340
Very useful piece of sample code.

00:37:14.370 --> 00:37:16.910
And if you go to the
graphics sample code page,

00:37:16.910 --> 00:37:19.700
you'll find CG Draw Picture,
which is a little different.

00:37:19.800 --> 00:37:23.280
That shows you how to render
a Quick Draw pic inside

00:37:23.340 --> 00:37:25.380
a Core Graphics context.

00:37:25.440 --> 00:37:31.610
Those two projects basically show you
how to move from maybe the old world that

00:37:31.610 --> 00:37:35.260
you were working with on Mac OS X and
9 when you were supplementing what

00:37:35.270 --> 00:37:39.540
you couldn't do in Quick Draw with
your own Post-Crit drawing on X.

00:37:39.590 --> 00:37:43.200
The better way to do that
is to start using Quartz 2D.

00:37:43.250 --> 00:37:47.610
And as I mentioned, PDE Print,
that's the sample code to show you

00:37:47.630 --> 00:37:52.300
how easy it is to add print dialog
extensions to the print panel.

00:37:52.390 --> 00:37:56.710
So about a week ago,
instead of showing you the

00:37:56.720 --> 00:38:00.440
code inside these projects,
we just put together a simple test app,

00:38:00.550 --> 00:38:02.370
which I'll show you.

00:38:03.690 --> 00:38:09.480
"So we can switch over
to the demo machine.

00:38:17.400 --> 00:38:18.380
I'm sure you can read that.

00:38:18.380 --> 00:38:19.280
It's big enough.

00:38:19.280 --> 00:38:22.780
So we've just got a sample project here.

00:38:22.780 --> 00:38:26.700
Two components, an application and a
print dialog extension.

00:38:26.700 --> 00:38:29.520
And I'm just going to point out
a few snippets of code out of it,

00:38:29.550 --> 00:38:31.320
and then we'll put the
application through its paces.

00:38:31.320 --> 00:38:34.790
So the first thing is that
the application supports

00:38:34.900 --> 00:38:37.470
document modal printing,
brings down the dialogs as sheets,

00:38:37.520 --> 00:38:39.730
and here's the function.

00:38:39.740 --> 00:38:42.080
It's just called,
and a few lines below in the code,

00:38:42.080 --> 00:38:46.300
you'll see the call to PM session,
print dialog, and hey, presto,

00:38:46.330 --> 00:38:48.460
your dialog's going to
come down as a sheet.

00:38:48.460 --> 00:38:51.280
Elsewhere in the project,
there's a similar call to bring down

00:38:51.280 --> 00:38:52.630
the page setup dialog as a sheet.

00:38:56.500 --> 00:38:58.500
Let's see.

00:38:58.500 --> 00:39:01.810
I've got to get my crib Notes out,
so I go to the right.

00:39:06.100 --> 00:39:12.270
Okay, the next thing to point out is
this test app supports spooling

00:39:12.290 --> 00:39:14.270
multiple jobs in parallel.

00:39:14.270 --> 00:39:15.600
So it's multi-threaded.

00:39:15.600 --> 00:39:18.850
And the code we got to do that came from,
as you can see from the comment there,

00:39:18.860 --> 00:39:22.150
the Carbon Event code
listing in inside Mac.

00:39:22.220 --> 00:39:25.000
So it's cooperatively multi-threaded.

00:39:25.040 --> 00:39:28.500
This enables us to spool a
print job from one window,

00:39:28.570 --> 00:39:33.210
one document, in parallel with spooling
a print job from another.

00:39:33.250 --> 00:39:34.250
And we'll see that in a moment.

00:39:35.680 --> 00:39:38.930
Let's see what else.

00:39:41.030 --> 00:39:44.890
The other thing our test app
does is it mixes QuickDraw and

00:39:44.890 --> 00:39:47.660
Quartz2D when it's printing.

00:39:47.720 --> 00:39:50.420
The example we've got here
will print a watermark using

00:39:50.450 --> 00:39:55.200
Quartz2D on top of a document whose
contents are drawn with QuickDraw.

00:39:55.260 --> 00:39:58.620
And if we look up here,

00:39:58.910 --> 00:40:01.800
This is our function
that draws our pages.

00:40:01.880 --> 00:40:04.960
It starts off by doing
some quick draw stuff.

00:40:05.090 --> 00:40:07.320
Comes down this function.

00:40:07.320 --> 00:40:10.560
We'll draw some text on screen
using text font and draw string,

00:40:10.560 --> 00:40:11.800
etc.

00:40:11.880 --> 00:40:15.630
And then when the time comes
we want to draw the watermark,

00:40:15.630 --> 00:40:19.270
we call, because we're going to
use called graphics,

00:40:19.330 --> 00:40:23.500
we call beginCGContext.

00:40:25.760 --> 00:40:28.120
We need to translate between
the Quick Draw and the

00:40:28.210 --> 00:40:29.700
Core Graphics coordinate spaces.

00:40:29.700 --> 00:40:36.700
So this QDY to CGY is the macro
that just flips the Y axis.

00:40:36.750 --> 00:40:41.640
And then inside this code,
which I won't show you for time reasons,

00:40:41.640 --> 00:40:45.230
it starts off,
it changes the Core Graphics

00:40:45.230 --> 00:40:48.660
CTMs so that we can draw a
text at an angle on the page.

00:40:48.660 --> 00:40:53.240
And then it makes a few @ZUI
calls to draw the watermark text,

00:40:53.330 --> 00:40:55.660
50% opacity on the page.

00:40:56.260 --> 00:41:01.200
And then, when we're done with
drawing in Quartz 2D,

00:41:01.200 --> 00:41:04.440
we call the end context function.

00:41:04.440 --> 00:41:07.610
I guess the thing to point out
here is you don't see any code to

00:41:07.610 --> 00:41:09.440
save and restore the graphic state.

00:41:09.570 --> 00:41:14.200
You don't need to because the begin and
end functions take care of that for you.

00:41:14.210 --> 00:41:19.490
So the G state's preserved as you switch
between Quick Draw and Core Graphics.

00:41:22.310 --> 00:41:25.040
What else do we have?

00:41:25.080 --> 00:41:28.530
The other thing here,
just a simple line of code.

00:41:28.540 --> 00:41:32.290
You can see below it,
we bring up the print dialog.

00:41:32.370 --> 00:41:35.210
The PM session enable printer presets
just tells the printing system

00:41:35.270 --> 00:41:38.300
that you want to see the presets
when you bring up the print dialog.

00:41:38.320 --> 00:41:40.410
That's just one line of code.

00:41:48.320 --> 00:41:53.600
Here's a function that registers the
application's print dialog extension.

00:41:53.600 --> 00:41:54.250
Pretty simple.

00:41:54.430 --> 00:42:01.120
It goes and finds its bundle,
assumes the plug-ins inside the bundle,

00:42:01.120 --> 00:42:01.120
and...

00:42:01.300 --> 00:42:13.000
[Transcript missing]

00:42:15.300 --> 00:42:20.860
Let's move over for a moment to
the Print Dialog Extension code.

00:42:20.860 --> 00:42:23.570
The thing to point out here
is that it's Nib-based.

00:42:23.670 --> 00:42:26.780
In other words,
we use Interface Builder to lay out the

00:42:26.780 --> 00:42:28.290
controls in our Print Dialog Extension.

00:42:28.300 --> 00:42:32.000
A whole lot easier than writing
a lot of Control Manager code.

00:42:32.000 --> 00:42:37.520
The Nib-based code is a very
straightforward and easy to use.

00:42:37.520 --> 00:42:41.450
You can see a call up
here to find the Nib file.

00:42:41.560 --> 00:42:47.650
Then we call createWindow from Nib
in the initialization function to

00:42:47.650 --> 00:42:50.880
build the UI for the Print Panel.

00:42:51.790 --> 00:42:56.520
Last of all,
this function here will put whatever

00:42:56.520 --> 00:43:02.580
the user selected in the print dialog
into the print settings ticket.

00:43:02.580 --> 00:43:05.260
So if the user has picked
a watermark feature,

00:43:05.350 --> 00:43:09.850
that setting will go into the
print settings ticket and then

00:43:09.850 --> 00:43:11.980
back in the application code.

00:43:13.800 --> 00:43:15.800
If I can find it.

00:43:15.800 --> 00:43:17.300
Okay.

00:43:17.330 --> 00:43:20.400
So here in the application code,
we're going to pull that setting

00:43:20.670 --> 00:43:23.700
out of the print settings ticket,
and that will tell the application

00:43:23.700 --> 00:43:25.180
how to draw its pages at print time.

00:43:25.180 --> 00:43:28.800
In other words,
whether to image the watermark.

00:43:28.800 --> 00:43:32.590
So that's just a quick look at the code.

00:43:32.690 --> 00:43:34.850
Let's see if this thing runs.

00:43:37.620 --> 00:43:38.980
Very simple app.

00:43:39.000 --> 00:43:40.740
It's got one window here.

00:43:40.740 --> 00:43:42.940
We can create multiple windows.

00:43:42.940 --> 00:43:47.890
If we go to the print dialog,
we'll see it pops down as a sheet.

00:43:47.900 --> 00:43:48.700
That's good.

00:43:48.710 --> 00:43:53.510
If we go to presets,
we'll see this particular printer,

00:43:53.570 --> 00:43:56.310
this S900's presets.

00:43:56.700 --> 00:44:04.240
If we pull down the PD panel,
we can get to our application's PD,

00:44:04.240 --> 00:44:05.140
which is pretty simple.

00:44:05.140 --> 00:44:09.690
It just offers the choice
of printing watermarks.

00:44:09.830 --> 00:44:12.890
We've got tooltips built in here,
which is nice.

00:44:12.890 --> 00:44:19.370
One thing I didn't show you in the
code is if we click on the help button,

00:44:19.370 --> 00:44:22.690
the PD actually has an event
handler to catch the help command.

00:44:22.740 --> 00:44:29.280
It's registered its own help book,
so now we've got information via help

00:44:29.280 --> 00:44:29.280
view on telling the user what the

00:44:29.600 --> 00:44:33.130
What those PDE functions did.

00:44:33.130 --> 00:44:35.670
So, that's useful.

00:44:35.900 --> 00:44:37.620
So, it's pretty straightforward.

00:44:37.760 --> 00:44:43.410
What I'm going to do is just print a
couple of pages here to the printer.

00:44:44.800 --> 00:44:47.040
For demo purposes,
I'm going to come back and I'm going

00:44:47.080 --> 00:44:48.640
to print a few pages to preview.

00:44:48.640 --> 00:44:57.150
So we'll pick Watermark Under and
print all of the 500 pages.

00:45:02.300 --> 00:45:09.600
[Transcript missing]

00:45:21.070 --> 00:45:30.060
Let me just see if I can stop this job.

00:45:30.070 --> 00:45:36.600
I guess this is where I tell you a joke,
but I can't think of one right now.

00:45:36.600 --> 00:45:40.580
My printer seems to be taking
control of the system here.

00:45:43.250 --> 00:45:45.290
Hopefully,
when we've printed those three pages,

00:45:45.290 --> 00:45:50.100
I can use the system again.

00:45:50.100 --> 00:45:54.040
Maybe not.

00:46:01.860 --> 00:46:04.480
I'm going to give up in one second.

00:46:04.480 --> 00:46:12.550
I don't seem to be
able to kill it either.

00:46:15.960 --> 00:46:19.100
Well, I'm going to move along right now.

00:46:19.150 --> 00:46:23.630
Had that demo worked,
I would have shown you two print

00:46:23.820 --> 00:46:28.900
jobs falling in parallel and
showing you the results in preview.

00:46:28.900 --> 00:46:33.900
We can switch back to the slides quickly.

00:46:33.900 --> 00:46:35.790
Come up, Seija, later.

00:46:35.800 --> 00:46:37.910
I'll show you it working.

00:46:40.620 --> 00:46:43.200
All right.

00:46:43.320 --> 00:46:50.180
So, just going to run through a few,
I think, well-known reminders for

00:46:50.180 --> 00:46:52.750
all application developers.

00:46:52.810 --> 00:46:56.470
Basically,
just telling you what we want you to do.

00:46:57.200 --> 00:46:59.420
when you're writing your printing code.

00:46:59.530 --> 00:47:02.140
The first one is a repeat
from what I said last year,

00:47:02.140 --> 00:47:04.260
and probably the year before.

00:47:04.260 --> 00:47:07.650
Use the so-called session APIs.

00:47:07.660 --> 00:47:11.360
Early adopters of Carbon printing may
have started using the non-session ones.

00:47:11.530 --> 00:47:13.740
We really need you to
use the session ones.

00:47:13.740 --> 00:47:16.200
For the reason that the
non-session ones are deprecated,

00:47:16.200 --> 00:47:19.160
we don't cover them anymore in
our documentation or sample code.

00:47:19.330 --> 00:47:22.580
Any new functionality
that we bring up will,

00:47:22.580 --> 00:47:24.660
where appropriate,
always be session-based.

00:47:24.660 --> 00:47:27.460
And go to our print loop sample code,
which has been posted

00:47:27.460 --> 00:47:28.220
for a long time now.

00:47:28.220 --> 00:47:32.450
And you'll see basically how
to bring up the print dialogs,

00:47:32.550 --> 00:47:34.630
how to execute a print loop.

00:47:35.900 --> 00:47:40.900
The other thing I really want
to push fairly hard on now is

00:47:41.020 --> 00:47:45.670
support document modal printing
and look at the sample code,

00:47:45.930 --> 00:47:47.890
bring up all your page setup
and print dialogs as sheets.

00:47:47.900 --> 00:47:49.740
Very easy to do.

00:47:49.900 --> 00:47:53.900
If you're a Carbon application,
the sample code that we just showed

00:47:53.900 --> 00:47:55.770
you is where you want to start.

00:47:55.900 --> 00:47:58.520
If you're a Cocoa developer,
you ought to make sure that

00:47:58.520 --> 00:48:02.220
you use the begin sheet with
print info method in your NSPage

00:48:02.220 --> 00:48:04.900
layout and NSPrintPanel objects.

00:48:04.900 --> 00:48:10.900
All Carbon, all Cocoa applications should
bring down their dialogs as sheets.

00:48:12.370 --> 00:48:15.850
The other thing that I sort of
demoed for you is how easy it is

00:48:15.870 --> 00:48:18.130
to write print dialog extensions.

00:48:18.220 --> 00:48:23.990
And if you came from the
Mac OS 9 or older world,

00:48:24.020 --> 00:48:27.690
probably familiar with using the
so-called append-dittle mechanism

00:48:27.770 --> 00:48:30.300
to add controls to the print dialog.

00:48:30.440 --> 00:48:33.160
Well, using print dialog extensions
is a whole lot better,

00:48:33.250 --> 00:48:35.900
more powerful,
you have more control over the UI.

00:48:35.950 --> 00:48:37.900
Coding it is pretty straightforward.

00:48:37.900 --> 00:48:43.160
And we encourage you to look out
for the final print dialog extension

00:48:43.160 --> 00:48:46.850
documentation and the sample code
when it comes out in a few weeks.

00:48:48.500 --> 00:48:51.940
This next topic really deserves a
lot more time than we have today,

00:48:51.940 --> 00:48:57.160
but basically we want everybody
moving from the old world,

00:48:57.160 --> 00:49:01.560
the legacy way of printing with
mixing Quick Draw with PostScript,

00:49:01.630 --> 00:49:04.310
to the new world,
which is to use the PDF print path and

00:49:04.310 --> 00:49:06.640
to take advantage of the Quartz 2D.

00:49:06.640 --> 00:49:10.750
So just to let you know, the old way,
the so-called Laser Iterate

00:49:10.780 --> 00:49:14.540
Compatibility path,
is still in the printing system.

00:49:14.540 --> 00:49:15.420
It's in 10.1.

00:49:15.430 --> 00:49:16.280
It'll be in Jaguar.

00:49:18.190 --> 00:49:21.940
The Get and Set Document Format
Generation APIs are shown in

00:49:21.940 --> 00:49:25.110
the PrintLoop sample code,
show you how to tell the printing

00:49:25.110 --> 00:49:27.660
system that you want to generate
a PICT with PostScript spool

00:49:27.670 --> 00:49:29.050
file instead of a PDF path.

00:49:29.060 --> 00:49:32.750
So that works and will continue to work,
but there are much

00:49:33.230 --> 00:49:34.590
better things you can do.

00:49:34.600 --> 00:49:38.640
And the sample code that
we mentioned a moment ago,

00:49:38.740 --> 00:49:43.480
using calls like QD Begin CG Contacts,
QD End CG Contacts,

00:49:43.480 --> 00:49:47.620
mixing Quartz 2D with Quick Draw,
that's really what you should be using.

00:49:47.620 --> 00:49:49.620
So that's something we should be
looking at now and taking advantage of.

00:49:49.620 --> 00:49:55.460
So that, as you've seen,
shows you how to mix Quick Draw and

00:49:55.460 --> 00:49:59.020
Quartz on screen and when you print.

00:49:59.950 --> 00:50:02.270
I think it's very possible
that a lot of you may be using

00:50:02.270 --> 00:50:05.140
the Pick With PostScript path
because your application

00:50:05.200 --> 00:50:06.900
wants to support EPS graphics.

00:50:06.900 --> 00:50:09.870
When somebody drops an
EPS graphic onto your document,

00:50:09.910 --> 00:50:13.900
you want to print it right
to a PostScript printer.

00:50:13.900 --> 00:50:17.550
And so you felt that you had to
use the Pick With PostScript path

00:50:17.550 --> 00:50:18.880
for that purpose.

00:50:18.960 --> 00:50:23.990
Well, in Jaguar, new in the header,
not today, but in a future seed,

00:50:23.990 --> 00:50:27.900
there's this PMCG image create
with EPS data provider function.

00:50:27.900 --> 00:50:32.660
I'd like to see a
George Bush say that one.

00:50:33.160 --> 00:50:37.020
And that basically just tells the
printing system you want to embed

00:50:37.120 --> 00:50:39.360
EPS graphics in the PDF spool file.

00:50:39.620 --> 00:50:43.700
You get both the postscript
representation of the graphic.

00:50:43.700 --> 00:50:45.760
You also get the preview image.

00:50:45.760 --> 00:50:49.430
So it will print correctly to both
postscript and non-postscript printers.

00:50:49.460 --> 00:50:53.380
So look out for that in a
future version of Jaguar.

00:50:55.020 --> 00:50:58.460
Okay, so that's enough for the
application checklist.

00:50:58.460 --> 00:51:01.860
Now to talk a few minutes about
driver things that we want people

00:51:01.870 --> 00:51:05.200
to do if you're in the business
of writing a printer module.

00:51:05.390 --> 00:51:10.300
The first thing, as mentioned earlier,
is iPhoto uses presets.

00:51:10.300 --> 00:51:14.150
We want or expect other applications
to be interested in using presets.

00:51:14.150 --> 00:51:17.830
And so, obviously,
users will like all their printer

00:51:17.860 --> 00:51:19.640
modules to support presets.

00:51:19.710 --> 00:51:23.260
The documentation on presets,
explaining the internals of

00:51:23.260 --> 00:51:26.350
presets and how to create them,
was posted shortly

00:51:26.410 --> 00:51:27.940
after iPhoto went live.

00:51:28.050 --> 00:51:32.390
And very straightforward.

00:51:46.890 --> 00:51:46.890
I'm sure DTS is standing by to
help you if you have any questions.

00:51:46.890 --> 00:51:46.890
But add presets to your
printer module bundles,

00:51:46.890 --> 00:51:46.890
and then all the applications iPhoto
and other applications calling the

00:51:46.890 --> 00:51:46.890
Enable Presets API will be able to take
advantage of your printer's presets.

00:51:48.580 --> 00:51:51.250
Printing and color,
again another topic that

00:51:51.290 --> 00:51:53.160
could take a whole session.

00:51:53.200 --> 00:51:57.260
Just limit this to a couple of comments.

00:51:57.260 --> 00:51:57.260
One is

00:51:57.460 --> 00:52:00.600
Well known that Mac users have
the highest expectations for

00:52:00.600 --> 00:52:04.050
things like print quality,
fidelity, color matching when they print.

00:52:04.050 --> 00:52:07.050
So they expect every printer
driver to come with a great set

00:52:07.070 --> 00:52:09.900
of ColorSync profiles when they're
taking advantage of ColorSync.

00:52:09.910 --> 00:52:14.020
So our message to you is really try
your best to produce great ColorSync

00:52:14.040 --> 00:52:17.100
profiles that support all the
media types your printers support,

00:52:17.100 --> 00:52:19.230
all the print quality modes you support.

00:52:19.230 --> 00:52:24.630
And again, we're very open to talking to
you and helping you achieve that.

00:52:26.160 --> 00:52:27.310
And then the other thing, of course,
you need to do when you've

00:52:27.310 --> 00:52:29.830
created these profiles is make
sure you register them all.

00:52:30.280 --> 00:52:33.840
Registering them is very straightforward.

00:52:33.840 --> 00:52:37.220
You just provide a list of them when
you're creating the printer info ticket,

00:52:37.240 --> 00:52:40.020
which is something that happens
when the queue is created.

00:52:40.020 --> 00:52:42.730
We register your profiles
actually on your behalf.

00:52:42.740 --> 00:52:46.430
And the thing to check is that
when you run the ColorSync utility,

00:52:46.450 --> 00:52:50.420
that if you go to the printer section,
you can see all your profiles.

00:52:50.420 --> 00:52:54.920
That means that an advanced user may
be able to override your profiles.

00:52:54.920 --> 00:52:56.260
Richard Blaencarad,
Paul Danbold And so that's one of

00:52:56.270 --> 00:52:56.950
the things that we're trying to do.

00:52:56.950 --> 00:52:57.320
We're trying to make sure that we're
getting the right printer profiles

00:52:57.320 --> 00:52:57.570
with one that he or she's generated.

00:52:57.630 --> 00:53:01.830
It also means that high-end
applications like Photoshop can see

00:53:01.840 --> 00:53:04.640
what printer profiles are available.

00:53:04.640 --> 00:53:07.720
And it's also useful for
color-proofing applications.

00:53:07.720 --> 00:53:12.700
So a lot of good stuff to be
done if you support ColorSync.

00:53:12.720 --> 00:53:13.870
Richard Blaencarad, Paul Danbold

00:53:15.470 --> 00:53:19.800
Another one on the list,
in the 10.1 version of PrintCenter,

00:53:19.800 --> 00:53:23.390
if you pulled down the printers menu,
there was a configure printer item,

00:53:23.390 --> 00:53:27.030
which was occasionally enabled
when PrintCenter knew the

00:53:27.030 --> 00:53:29.470
location of the printer's utility.

00:53:29.780 --> 00:53:33.610
In the new version of PrintCenter,
which Rich showed you a few minutes ago,

00:53:33.610 --> 00:53:36.480
we've actually made it even more
obvious to the user how to get to

00:53:36.490 --> 00:53:39.580
the utility in both the printer
list and the printer queue windows.

00:53:39.630 --> 00:53:45.780
There's a big button that when
Jaguar ships will be a lot prettier.

00:53:45.790 --> 00:53:48.730
It will provide the user with
a simple way of getting from

00:53:48.730 --> 00:53:52.810
PrintCenter to launching your utility
and doing whatever your utility does,

00:53:52.920 --> 00:53:55.500
like align heads and print test pages,
etc.

00:53:56.500 --> 00:54:00.880
It's very simple to tell PrintCenter
where your utility is located.

00:54:00.950 --> 00:54:03.870
You just put a key in
your Info.plist file,

00:54:03.870 --> 00:54:08.530
PM utility URL,
and the value of that key is the path

00:54:08.530 --> 00:54:11.170
to wherever you installed your utility.

00:54:12.920 --> 00:54:18.450
Having mentioned install your utility,
I want to tell you that we really

00:54:18.450 --> 00:54:23.490
don't want utilities and other printer
software scattered over the hard disk.

00:54:23.550 --> 00:54:29.000
We'd much prefer you to install all
your printer components in library,

00:54:29.000 --> 00:54:31.890
printers, and the directory you create
there for your printer modules

00:54:31.930 --> 00:54:33.760
and associated software.

00:54:33.810 --> 00:54:39.620
If you feel obliged to put links
to your printer utility elsewhere,

00:54:39.620 --> 00:54:41.940
then yes,
it's okay to put an alias inside

00:54:41.970 --> 00:54:46.860
the utilities directory that
will link to the real utility

00:54:46.860 --> 00:54:49.210
that's inside library printers.

00:54:50.500 --> 00:54:54.300
Another thing relative to
installers is to make sure you

00:54:54.520 --> 00:54:56.840
know about the Make Queues tool.

00:54:56.840 --> 00:54:59.560
Make Queues does a lot of what
Print Center does without a UI.

00:54:59.630 --> 00:55:02.640
When you boot your Mac or
when you hot plug a printer,

00:55:02.660 --> 00:55:10.400
Make Queues executes some code which will
automatically create a USB printer queue.

00:55:10.400 --> 00:55:16.630
Your installer can also use Make Queues
to refresh the USB printer queue.

00:55:16.640 --> 00:55:21.320
Execute Make Queues with the -r
switch and we'll go through and

00:55:21.320 --> 00:55:31.610
recreate all the USB printer queues.

00:55:34.090 --> 00:55:38.390
Another thing, you know,
our direction is to make setting

00:55:38.390 --> 00:55:43.800
up queues as painless and as free
from user action as possible.

00:55:43.800 --> 00:55:47.010
And I'm sure everybody knows
that we can automatically create

00:55:47.040 --> 00:55:50.700
queues for USB printers without
the user going into PrintCenter.

00:55:50.700 --> 00:55:55.930
And we want to continue in that direction
and make it as simple as possible

00:55:55.940 --> 00:56:00.240
to create queues for the novice user
without having to know anything about

00:56:00.350 --> 00:56:04.180
how the printer's connected or even,
you know, the name of the printer module.

00:56:04.180 --> 00:56:07.260
Nothing like that should get in the
way of the user being able to print.

00:56:09.100 --> 00:56:18.960
So, we are publishing all the source code
for our various printing I/O modules.

00:56:18.960 --> 00:56:22.600
The USB and the LPR source code
is available on request from DTS.

00:56:22.720 --> 00:56:25.560
But I want to make sure you understand
the reason why we make that source

00:56:25.560 --> 00:56:30.930
code available is so that you can point
out bugs or deficiencies in our code,

00:56:30.930 --> 00:56:35.800
not so that you can create custom
versions of our USB modules,

00:56:35.800 --> 00:56:37.600
our LPR modules, etc.

00:56:37.690 --> 00:56:40.810
So,
treat that source code as an opportunity

00:56:40.810 --> 00:56:46.880
to tell us what enhancements need
to be made to support your devices.

00:56:47.900 --> 00:56:50.670
And last and definitely not least,
you're obviously very interested

00:56:50.670 --> 00:56:52.460
in all the CUPS stuff.

00:56:52.460 --> 00:56:55.520
The message for today is,
if you're working on printer

00:56:55.520 --> 00:56:58.490
module projects for new printers,
continue to do that.

00:56:58.510 --> 00:57:00.900
Don't abandon anything
you're working on already.

00:57:00.900 --> 00:57:05.390
As Jaguar gets ready to ship,
then come talk to us and certainly

00:57:05.540 --> 00:57:09.580
by the time Jaguar is released,
we will have a lot more detailed

00:57:09.580 --> 00:57:12.900
information to tell you about
the pros and cons of CUPS-style

00:57:12.900 --> 00:57:16.900
drivers and backends versus the
existing printer modules and IOMs.

00:57:20.160 --> 00:57:23.100
A few seconds to talk
about USB and printing.

00:57:23.100 --> 00:57:27.520
There's quite a lot of details here
and I'll skip them and tell you to

00:57:27.530 --> 00:57:30.340
come and talk to us later about this.

00:57:30.340 --> 00:57:34.140
We are introducing a printing
class driver in Jaguar.

00:57:34.140 --> 00:57:39.350
It will enable you to better support,
for example, multifunction devices,

00:57:39.420 --> 00:57:43.340
printers that can scan, copy,
and sometimes fax as well as print.

00:57:43.340 --> 00:57:48.670
Maybe your printer has some special, say,
non-compliant USB characteristics.

00:57:48.790 --> 00:57:52.380
The printing class driver will make
support for your device a lot easier.

00:57:52.400 --> 00:57:56.020
And although it's not in the
seed that was released this week,

00:57:56.020 --> 00:57:59.650
hopefully the next seed of Jaguar
will have the printing class

00:57:59.670 --> 00:58:01.380
driver code and readme file.

00:58:01.610 --> 00:58:05.560
We encourage you to take a look at
it if you are a printer vendor or

00:58:05.670 --> 00:58:08.520
driver developer and give us feedback.

00:58:08.620 --> 00:58:09.900
We want to make sure this works.

00:58:09.900 --> 00:58:12.720
This is a useful piece of
code to enable support,

00:58:12.740 --> 00:58:13.300
for example, multifunction devices.

00:58:13.300 --> 00:58:16.290
multifunction devices when Jaguar ships.

00:58:16.850 --> 00:58:20.080
Another thing you may be interested
to know is that our USB code now

00:58:20.080 --> 00:58:22.430
supports more device ID keys.

00:58:22.510 --> 00:58:26.780
We use device ID keys to match the
physical printer we find on the bus with

00:58:26.810 --> 00:58:29.540
a printer module that's on the hard disk.

00:58:29.690 --> 00:58:33.260
So, Jaguar will be supporting
the compatibility ID.

00:58:33.370 --> 00:58:38.680
We also support the serial number
ID as well as the product ID.

00:58:38.680 --> 00:58:41.460
And where needed,
the hub's location ID so that we can,

00:58:41.460 --> 00:58:44.060
for example, support multiple printers
of the same type,

00:58:44.130 --> 00:58:46.240
identical printers on the bus.

00:58:46.340 --> 00:58:50.640
And last on this list,
there are devices out there that

00:58:50.640 --> 00:58:57.410
present multiple USB interfaces,
maybe unidirectional, bidirectional,

00:58:57.410 --> 00:59:00.230
and some perhaps proprietary interface.

00:59:00.340 --> 00:59:04.080
We've added an attribute now so
that the printer module can tell

00:59:04.090 --> 00:59:08.410
the I/O module which USB interface
to use in talking to the printer.

00:59:10.360 --> 00:59:12.850
Last but definitely not
least in these slides,

00:59:12.860 --> 00:59:15.260
a few words about the new documentation.

00:59:15.260 --> 00:59:19.270
And, as Rich said, the tech pubs group at
Apple did a great job this year.

00:59:19.350 --> 00:59:23.640
We got a lot more documentation
than we ever had a year ago.

00:59:23.740 --> 00:59:27.560
Three of the items on this in
the next slide are actually

00:59:27.560 --> 00:59:29.480
available in book form.

00:59:29.480 --> 00:59:32.930
None of these include
the CUPS information.

00:59:32.930 --> 00:59:34.860
So, we'll keep tech pubs busy,
and we'll obviously have to

00:59:34.860 --> 00:59:38.810
update some of these books,
but... Actually, I mentioned books.

00:59:38.990 --> 00:59:40.310
Some of these are available in book form.

00:59:40.310 --> 00:59:43.390
All of them are available downloaded
from the tech pub's website,

00:59:43.390 --> 00:59:46.140
and they're also on the
reference library CD.

00:59:46.140 --> 00:59:50.350
So, about the Mac OS X printing system,
basically just introduces you to

00:59:50.370 --> 00:59:52.050
the architecture and the user model.

00:59:52.240 --> 00:59:55.100
Cocoa printing documentation has
been updated since last year.

00:59:55.100 --> 00:59:59.780
The PostScript printer description
file documentation tells you

00:59:59.790 --> 01:00:02.750
how we find PPDs on the disk
and how we bind them to printer

01:00:02.760 --> 01:00:07.320
queues and how we expose PPD-based
features in the print dialogues.

01:00:07.580 --> 01:00:11.260
The Extending Print Dialog Documentation
just has one more engineering

01:00:11.260 --> 01:00:12.740
review and then we'll post it.

01:00:12.740 --> 01:00:17.400
It'll be the definitive document on
how to create print dialog extensions

01:00:17.420 --> 01:00:19.780
for your applications or print modules.

01:00:22.450 --> 01:00:25.240
Supporting printing in your
Carbon application is another

01:00:25.240 --> 01:00:27.100
of the books that you can order.

01:00:27.100 --> 01:00:33.010
It tells you how the print dialogs work,
how the page format and print

01:00:33.010 --> 01:00:36.270
settings objects can be used,
about page recs and paper recs,

01:00:36.330 --> 01:00:37.240
things like that.

01:00:37.240 --> 01:00:39.530
It's a good read.

01:00:39.550 --> 01:00:43.700
The big book of printing,
it's not that big, but I got a copy here,

01:00:43.700 --> 01:00:46.800
is a Carbon Printing Manager reference.

01:00:46.840 --> 01:00:49.830
I think it's 180 pages.

01:00:49.870 --> 01:00:56.480
So it tells you all about the little
over 100 Carbon Printing Manager APIs,

01:00:56.480 --> 01:01:00.240
all their associated data
structures and constants.

01:01:00.240 --> 01:01:01.600
Rich was plugging in the CUPS book.

01:01:01.600 --> 01:01:05.590
When you finish reading the CUPS book,
buy this, put it by your bedside.

01:01:05.620 --> 01:01:07.670
It's great late night reading.

01:01:08.740 --> 01:01:13.340
And last, definitely not least,
is the iPhoto documentation.

01:01:13.350 --> 01:01:15.900
If your printer vendor tells
you about the internals of

01:01:15.970 --> 01:01:18.300
presets and how to create them,
and again,

01:01:18.300 --> 01:01:21.560
we're hoping that you add those
to your printer module bundles.

01:01:23.600 --> 01:01:28.490
We also have some new detailed
API reference documentation.

01:01:28.500 --> 01:01:34.060
The plugin interfaces,
that you'll probably want to read when

01:01:34.130 --> 01:01:37.500
you're writing your printer module,
your print dialog extensions.

01:01:37.630 --> 01:01:40.580
And there's new documentation
explaining how all our job

01:01:40.590 --> 01:01:42.500
ticket and template APIs work.

01:01:42.510 --> 01:01:44.500
I'll mention a new tech note as well.

01:01:44.500 --> 01:01:48.940
It's not really a 10 thing,
but we've got a new tech note,

01:01:49.000 --> 01:01:54.500
I think it's 2049,
tells you how you should create

01:01:54.500 --> 01:01:59.460
what we call a PDAT resource for
your Mac OS 9 or 8 print driver.

01:01:59.500 --> 01:02:04.760
We rely upon these PDAT resources
to tell the Carbon printing manager,

01:02:04.760 --> 01:02:08.500
when it's running in
Carbon on Mac OS 8 and 9,

01:02:08.740 --> 01:02:12.500
how to find various settings
in your print record.

01:02:12.520 --> 01:02:16.910
The settings like page orientation
and copies and color mode,

01:02:16.910 --> 01:02:17.480
etc.

01:02:17.540 --> 01:02:20.630
It's very important for
Carbon applications running on

01:02:20.710 --> 01:02:24.440
8 and 9 to work with drivers
that have these PDAT resources.

01:02:24.560 --> 01:02:27.410
Apple provided a few in
the Carbon lib resource,

01:02:27.410 --> 01:02:29.500
but we're no longer doing that.

01:02:29.500 --> 01:02:32.500
Now we're looking to developers
of print drivers to do that.

01:02:32.500 --> 01:02:39.720
So, tech note 2049 is sort of a must read
for Mac OS 8 and 9 driver developers.

01:02:40.460 --> 01:02:42.080
That's it from me.

01:02:42.170 --> 01:02:47.090
I've got a summary slide just to show you
or remind you what we've covered today.

01:02:47.170 --> 01:02:51.070
Rich took you through the big changes,
the cup stuff,

01:02:51.070 --> 01:02:53.960
all the functionality that enables.

01:02:54.320 --> 01:02:56.330
Cocoa Print Center and changes to the UI.

01:02:56.350 --> 01:02:59.310
I think you'll find that when
you're running Jaguar at home,

01:02:59.310 --> 01:03:01.680
you'll see a lot of stuff that
we haven't been able to demo

01:03:01.810 --> 01:03:03.610
today and it's all pretty good.

01:03:03.610 --> 01:03:08.680
We just talked about some of the new
APIs going into Jaguar for applications.

01:03:08.750 --> 01:03:14.900
We looked at some sample
code and new documentation.

01:03:14.900 --> 01:03:14.900
Rich had some, some

01:03:15.500 --> 01:03:29.600
[Transcript missing]

01:03:33.600 --> 01:03:37.140
Before I take you through the roadmap,
I just want to offer some

01:03:37.140 --> 01:03:38.840
comments on today's session.

01:03:38.840 --> 01:03:41.280
We're really excited about the
opportunity that the new printing

01:03:41.280 --> 01:03:44.410
architecture offers developers
because what we've done is

01:03:44.410 --> 01:03:48.420
essentially put a new architecture
which is incredibly extensible,

01:03:48.940 --> 01:03:50.970
incredibly flexible,
it's very approachable

01:03:50.970 --> 01:03:54.210
because it's open source,
and so that's really

01:03:54.280 --> 01:03:56.310
going to empower the,
you know, the new printing architecture.

01:03:56.580 --> 01:03:59.100
Software developers want to get at
the middle of the printing system.

01:03:59.100 --> 01:04:02.670
But there's also another great story that
you really don't have to change anything

01:04:02.680 --> 01:04:05.270
if you're an application developer,
if you're a print driver manufacturer.

01:04:05.360 --> 01:04:07.380
So all in all, it's a really great story.

01:04:07.380 --> 01:04:10.020
And the possibilities are endless.

01:04:10.020 --> 01:04:12.410
Like, for example,
we saw the technology demonstration with

01:04:12.530 --> 01:04:16.600
global graphics post-script interpreter
being used in line with our print system.

01:04:16.600 --> 01:04:18.180
And it was essentially
a little bit of coding,

01:04:18.180 --> 01:04:19.990
drop it in, and it just works.

01:04:20.100 --> 01:04:22.520
So it's an exciting opportunity,
particularly if you're a

01:04:22.530 --> 01:04:25.000
core technology vendor,
because you can approach the platform

01:04:25.000 --> 01:04:29.140
in a very defined direction that
enables you to just plug yourself in.

01:04:29.160 --> 01:04:30.590
So we're really proud of that.

01:04:30.780 --> 01:04:33.620
So what I want to do now is
quickly go over the roadmap.

01:04:33.620 --> 01:04:36.680
And what I'll do is skip ahead,
because we want to get a

01:04:36.680 --> 01:04:38.040
time for a good Q&A session.

01:04:38.040 --> 01:04:44.800
And we will start with the sessions
that are left today in WWDC.

01:04:44.800 --> 01:04:47.600
Obviously, we're at 5.10,
which is printing in Mac OS X.

01:04:47.600 --> 01:04:51.040
Sessions that are left are 5.13,
OpenGL Advanced 3D.

01:04:51.040 --> 01:04:53.600
Obviously, OpenGL is a big threat
at this year's WWDC.

01:04:53.600 --> 01:04:55.400
It doesn't necessarily
relate to printing,

01:04:55.400 --> 01:04:58.060
but a lot of things we're
doing with Quartz Extreme are

01:04:58.100 --> 01:04:59.540
based on top of OpenGL.

01:04:59.540 --> 01:05:00.990
And if you want to find
out more about OpenGL,

01:05:01.000 --> 01:05:02.100
go to 5.13.

01:05:02.100 --> 01:05:06.790
Also, same for OpenGL performance
and optimization.

01:05:06.800 --> 01:05:10.160
That's a good session to learn a lot
of the fast paths that exist now in

01:05:10.170 --> 01:05:11.960
the OpenGL implementation of Mac OS X.

01:05:11.960 --> 01:05:15.770
Another sort of companion technology
that we have in graphics and

01:05:15.770 --> 01:05:17.680
imaging is image capture framework.

01:05:17.700 --> 01:05:22.030
And that's often going to provide
the input data that what the

01:05:22.030 --> 01:05:23.100
user is later going to print.

01:05:23.120 --> 01:05:24.800
And so we have a session on it.

01:05:24.800 --> 01:05:25.650
We're going to be doing
that on image capture.

01:05:25.730 --> 01:05:28.310
And one of the nice announcements
that we've made relative to image

01:05:28.450 --> 01:05:31.130
capture is we've expanded it from
just supporting digital cameras

01:05:31.210 --> 01:05:32.550
to supporting scanners as well.

01:05:32.560 --> 01:05:34.170
So that's going to be on Friday.

01:05:36.030 --> 01:05:39.090
Lastly,
one of the remaining sessions is 5.16,

01:05:39.100 --> 01:05:41.030
Graphics and Imaging Performance Tuning.

01:05:41.160 --> 01:05:46.120
You know, over the past year,
a big source of information that's

01:05:46.120 --> 01:05:48.850
been required for developers,
or at least asked by developers,

01:05:48.920 --> 01:05:51.600
is how do I make my application
go faster under Mac OS X?

01:05:51.700 --> 01:05:53.680
Because the graphics
implementation is different.

01:05:53.760 --> 01:05:55.300
The visual pipeline's different.

01:05:55.300 --> 01:05:57.310
And that's where we're gonna
cover a lot of those details.

01:05:57.340 --> 01:05:59.380
So a lot of your questions,
if you have performance

01:05:59.480 --> 01:06:02.350
issues on Mac OS X,
are gonna be answered there.

01:06:02.620 --> 01:06:05.550
And then, finally,
I wanted to make it clear

01:06:05.710 --> 01:06:09.320
that the feedback forum,
which is Friday afternoon,

01:06:09.320 --> 01:06:11.400
also includes printing.

01:06:11.400 --> 01:06:13.570
So if you have any comments
to make on any of the things

01:06:13.580 --> 01:06:16.780
we've talked about today,
or concerns or questions,

01:06:16.960 --> 01:06:18.660
you can bring those
to the feedback forum,

01:06:18.660 --> 01:06:22.270
and there'll be the engineering
managers for each area of graphics

01:06:22.400 --> 01:06:24.790
and imaging will be there,
and we'll be able to

01:06:24.800 --> 01:06:26.100
respond to those questions.

01:06:26.100 --> 01:06:29.300
So now what I'd like to do-- well,
before I do that,

01:06:29.300 --> 01:06:31.050
let me actually just give
you my contact information.

01:06:31.140 --> 01:06:35.220
If you need to contact me relative to
anything we've discussed in this session,

01:06:35.220 --> 01:06:36.980
this is my email address.

01:06:36.980 --> 01:06:38.470
I handle printing as well.

01:06:38.480 --> 01:06:41.220
You've seen me in a lot of
other contexts at this WWDC,

01:06:41.220 --> 01:06:44.980
but, like I said, CUPS, how it's gonna be
integrated into Mac OS X,

01:06:45.110 --> 01:06:47.460
other developer-related questions
relating to graphics and imaging,

01:06:47.460 --> 01:06:49.460
please feel free to send me an email.