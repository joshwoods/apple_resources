WEBVTT

00:00:12.980 --> 00:00:17.420
>> You know, it's been eight years since Apple
introduced the first version of Mac OS X server.

00:00:17.420 --> 00:00:23.230
And throughout that time, we've tried to keep the
same philosophy as to how we've designed the product.

00:00:23.230 --> 00:00:27.579
Built on Mac OS X, we've taken a
scalable, industrial strength foundation

00:00:27.579 --> 00:00:30.969
of Unix, Open Source, and Open Standards.

00:00:30.969 --> 00:00:33.549
We've integrated that with easy to use server tools,

00:00:33.549 --> 00:00:38.429
and on top of that we've layered
innovative services and applications.

00:00:38.429 --> 00:00:46.030
So today we're going to dive in to what's new with
Snow Leopard server, and it is our best release yet.

00:00:46.030 --> 00:00:47.009
>> [ Audience member: ] Whew!

00:00:47.009 --> 00:00:51.609
[ Laughter ]

00:00:51.609 --> 00:00:56.899
>> So first we've started off by improving a lot
of the administration tools in Mac OS X server,

00:00:56.899 --> 00:00:59.009
really making it easier to manage and deploy.

00:00:59.009 --> 00:01:03.250
And I'm just going to give you a sample of
a few of the refinements we've made here.

00:01:03.250 --> 00:01:05.790
We've made installation and set up a lot more streamlined.

00:01:05.790 --> 00:01:11.010
You no longer have to declare ahead of time the
size and purpose of your server installation.

00:01:11.010 --> 00:01:14.560
[ Applause ]

00:01:14.560 --> 00:01:20.790
We've improved server migration, so now the server can
migrate data from existing hardware onto a new server.

00:01:20.790 --> 00:01:27.620
We've improved the Airport configuration, so Snow Leopard
server can manage your Airport base station including things

00:01:27.620 --> 00:01:32.010
like port mapping, DHP configuration,
and DNS for both the server and Airport;

00:01:32.010 --> 00:01:35.010
so all of your services are accessible
from anywhere on the internet.

00:01:35.010 --> 00:01:38.040
[ Applause ]

00:01:38.040 --> 00:01:40.800
We've added certificate management into server preferences,

00:01:40.799 --> 00:01:45.479
so now integrated SSL server management is
available throughout the whole server product.

00:01:45.480 --> 00:01:50.719
And we have improved server administration
for large sites too.

00:01:50.719 --> 00:01:56.859
Server admin can now manage groups of servers based on
any organization you'd like, and we have the ability

00:01:56.859 --> 00:02:03.019
to manage dynamic groups of servers for
things updating criteria like server load.

00:02:03.019 --> 00:02:07.909
So these are just a few examples of some of
the refinements we've made to server admin

00:02:07.909 --> 00:02:10.009
to make the server easier to manage and deploy.

00:02:10.009 --> 00:02:16.859
As you've heard today, there are a lot of great new
technologies in Snow Leopard, and we've taken advantage

00:02:16.860 --> 00:02:23.560
of these in Snow Leopard server to deliver a fully 64-bit
server with much greater performance than its predecessor.

00:02:23.560 --> 00:02:29.629
And so to tell you more details about this, I'd like
to invite to the stage Senior Engineering Manager

00:02:29.629 --> 00:02:33.189
from the Mac OS X server group, [inaudible name].

00:02:33.189 --> 00:02:37.609
>> So we have some great performance numbers to share
with you today, but first let's talk about 64-bit

00:02:37.610 --> 00:02:42.510
and multicross capability, and at the end
we're going to look at specific numbers.

00:02:43.650 --> 00:02:44.590
Start with 64-bit...

00:02:44.590 --> 00:02:50.950
as you saw in earlier sessions, we
now have this great 64-bit foundation,

00:02:50.949 --> 00:02:57.439
and what we did on the server side is we made all of our
services 64-bit also, so they can take full advantage

00:02:57.439 --> 00:03:00.859
of that 64-bit OS and the latest hardware underneath.

00:03:00.860 --> 00:03:02.860
So let's take a look at what that means.

00:03:02.860 --> 00:03:07.470
From the server performance prospective
there are four things we care about 64-bit.

00:03:07.469 --> 00:03:13.830
The first one is address space - the large address
space that services keep more stuff in the memory,

00:03:13.830 --> 00:03:18.120
so that you don't have to access expensive disk I/O.

00:03:18.120 --> 00:03:26.569
For example, they submitted a contour is now 64-bit, and
you can now cache many, many more items in the memory

00:03:26.569 --> 00:03:30.719
and that really improves the overall
performance of the file system,

00:03:30.719 --> 00:03:33.680
especially when lots of files are
being accessed simultaneously.

00:03:33.680 --> 00:03:38.599
And the same benefit goes for the
database as well, with large address space.

00:03:38.599 --> 00:03:44.629
Next, Simon mentioned in a previous session the
system calls are efficient on 64-bit systems.d

00:03:44.629 --> 00:03:50.659
So services such as a web server that makes a
lot of calls, gets some boost from that as well.

00:03:50.659 --> 00:03:53.909
Third computation - 32-bit software gets accessed

00:03:53.909 --> 00:03:59.909
through 4 general purpose registers,
while 64-bit gets 16, 4 times as many.

00:03:59.909 --> 00:04:05.889
And that means any computationally intensive
software such as HPC applications running on Xgrid,

00:04:05.889 --> 00:04:12.189
or encryption algorithms gets huge
performance by moving to 64-bit.

00:04:12.189 --> 00:04:21.269
And lastly, 64-bit kernel enables us to increase the OS
resource indication significantly, and here's an example.

00:04:21.269 --> 00:04:24.759
So this is the maximum number of
processes that you can have on the system.

00:04:24.759 --> 00:04:30.019
With the 32-bit kernel the maximum was
2,500, and this was the scalability bottleneck

00:04:30.019 --> 00:04:33.839
for the webserver, the FAT server that we have.

00:04:33.839 --> 00:04:39.909
With 64-bit kernel, that number the limit is
dynamic, so as you have more memory that increases

00:04:39.910 --> 00:04:43.140
and that made the scalability of
our web server significantly better.

00:04:43.139 --> 00:04:49.800
So those are key benefits of 64-bit for the server
platform, and now let's talk about multicore.

00:04:49.800 --> 00:04:56.689
A couple of years ago we started to work with core OS engineers
to make sure every subcomponent of the OS is optimized

00:04:56.689 --> 00:04:59.209
for multicore, and here are some of the changes...

00:04:59.209 --> 00:05:01.879
that went into Snow Leopard.

00:05:01.879 --> 00:05:05.969
Lots of fundamental enhancements at the really low level.

00:05:05.970 --> 00:05:10.740
So we did things like including Scheduler, and
make sure it can take advantage of multiple cores,

00:05:10.740 --> 00:05:14.870
then that worked great, but then the
memory subsystem couldn't keep up with it,

00:05:14.870 --> 00:05:17.740
so we had to include the virtual memory, done, good job.

00:05:17.740 --> 00:05:22.629
And now the networking was a bottleneck,
so we have to multithread IP route lock,

00:05:22.629 --> 00:05:25.939
improve send file command, and so on and on and on.

00:05:25.939 --> 00:05:31.610
It was a lot of work, but at the end it all came
together and effort really, really paid off.

00:05:31.610 --> 00:05:36.220
And here to showcase some data...

00:05:36.220 --> 00:05:42.760
this is a benchmark and actually taking the CPU
Ultilization data while the test is running.

00:05:42.759 --> 00:05:47.659
Leopard server saturated three cores,
but couldn't take the rest of the cores,

00:05:47.660 --> 00:05:51.920
so 62 % of the CPU was idle, being wasted.

00:05:51.920 --> 00:05:56.310
With a smaller process server running on the same
hardware, it took advantage of every single core

00:05:56.310 --> 00:06:02.519
and also all the subsystem of the OS, was just humming
along, and of course as a result the performance data was

00:06:02.519 --> 00:06:06.490
over twice as high compared to Leopard Server.

00:06:06.490 --> 00:06:13.269
So with this new OS we have this great
ability to really take advantage of the latest

00:06:13.269 --> 00:06:16.000
and fastest hardware that's fully loaded.

00:06:16.000 --> 00:06:21.689
This is an example configuration, this is what we use
when we measure for our file services performance.

00:06:21.689 --> 00:06:23.410
So this is really great news for the server product.

00:06:23.410 --> 00:06:30.370
And one last thing I want to mention is
that we achieved this high end scalability

00:06:30.370 --> 00:06:33.209
without sacrificing the low end performance.

00:06:33.209 --> 00:06:39.979
Mac Mini with 2 gigabytes of memory, is an excellent
small business server and Snow Leopard server runs great

00:06:39.980 --> 00:06:45.230
on those mini configurations, but the same
OS simply scales up and takes full advantage

00:06:45.230 --> 00:06:49.819
of the extra hardware capabilities
when it's running on Xserve.

00:06:49.819 --> 00:06:55.719
So that I think is a great accomplishment,
and we are really happy and proud of that.

00:06:55.720 --> 00:07:03.110
So with the 64-bit server, and multicore optimized
OS, let's look at the performance numbers.

00:07:03.110 --> 00:07:07.750
Our web server performance increased
by 80 %, 1.8X of Leopard server.

00:07:07.750 --> 00:07:15.740
Not bad. And the NFS number doubled, and this is
using the industry standard spec as a sfs benchmark.

00:07:15.740 --> 00:07:20.259
And lastly this is even better, 2.3 times Leopard server.

00:07:20.259 --> 00:07:24.939
So the performance is looking pretty good, it's
just like getting 1 Xserve for free when you upgrade

00:07:24.939 --> 00:07:28.449
to Snow Leopard, so we're really happy about that.

00:07:29.930 --> 00:07:35.870
Alright, so that's performance and next
let's talk about communication services.

00:07:35.870 --> 00:07:42.610
Snow Leopard server includes a set of robust, open
standards based services including mail, chat, calendar,

00:07:42.610 --> 00:07:49.810
and now contacts - the Address Book server, and we're
going to talk about each one of these starting with mail.

00:07:49.810 --> 00:07:54.129
In Snow Leopard server we have not just a
mail server, but the complete mail solution.

00:07:54.129 --> 00:07:59.579
We of course have POP, iMAP, and SMTP, but we
also have virus and spam filtering services, mailing

00:07:59.579 --> 00:08:05.379
list server, remote access, web access,
and [Inaudible] solution all built into the product.

00:08:05.379 --> 00:08:10.420
And in the Snow Leopard server we
have a brand new mail server engine.

00:08:10.420 --> 00:08:15.009
We picked up this excellent open
source project called DOVEcot.

00:08:15.009 --> 00:08:18.639
[ Applause ]

00:08:18.639 --> 00:08:24.019
And DOVEcot was already very high performance and
also highly reliable and also very secure,

00:08:24.019 --> 00:08:28.219
but we made additional improvements
on top of it to make it even better.

00:08:28.220 --> 00:08:32.730
For example, we optimized the heck out of it, to make
sure we can take full advantage of that 64-bit OS.stdylh

00:08:32.730 --> 00:08:37.620
We also added some core to it that
better integrates Apple technologies as well.

00:08:37.620 --> 00:08:41.019
So let's take a look at the performance.

00:08:41.019 --> 00:08:41.850
So this is Sun's

00:08:41.850 --> 00:08:49.720
messaging server, running on a SPARC Enterprise box,
using industry standard spec mail, this scored 17,000.

00:08:49.720 --> 00:08:55.009
Snow Leopard Server on Xserve scored 28,000 almost 29.

00:08:55.009 --> 00:08:57.009
So we are quite happy about this.

00:08:57.009 --> 00:09:00.549
[ Applause ]

00:09:00.549 --> 00:09:05.299
And by the way the Snow Leopard server is
over 10 times improvement from Leopard server.

00:09:06.899 --> 00:09:09.529
Okay, on the reliability front...

00:09:10.690 --> 00:09:17.080
the new mail server has a self healing capability where
it automatically detects corruptions and repair it.

00:09:17.080 --> 00:09:22.950
So for example, if the power goes out and when the mail
server starts back up, one of the indices are corrupted,

00:09:22.950 --> 00:09:25.950
mail server automatically finds
it, fixes it, and just moves along.

00:09:25.950 --> 00:09:28.780
So you no longer have to do any
manual maintenance with the database.

00:09:28.779 --> 00:09:31.559
And if you're looking for...

00:09:31.559 --> 00:09:39.889
that single point of failure, the active crosslink is
built right into the design of the new mail server as well.

00:09:39.889 --> 00:09:42.179
You can start with two nodes and you can grow to end.

00:09:42.179 --> 00:09:47.620
And here's some of the examples of upper integration.

00:09:47.620 --> 00:09:52.929
We of course have ease of set up and management,
we even configure the client software for you

00:09:52.929 --> 00:09:56.439
so it will automatically point to the mail
server or the parameters are set right.

00:09:56.440 --> 00:10:03.810
And the mail cluster sits on top of Xsan and we've
made some changes to the Xsan set up assistant,

00:10:03.809 --> 00:10:08.439
so all you have to do is simply select mail crosslink
from the popup menu, and the set up assistant

00:10:08.440 --> 00:10:14.570
for Xsan automatically configures all the file
system Panthers optimized for mail clustering.

00:10:14.570 --> 00:10:19.770
Of course the server is also integrated into Mac OS X
security and authenticaion infrastructure,

00:10:19.769 --> 00:10:24.939
Open Directory, Kerberos, service access control and so on.

00:10:24.940 --> 00:10:27.520
The mail server's also communicating with big servers,

00:10:27.519 --> 00:10:32.399
so we the mailing list archive is always
synchronized between the two services.

00:10:32.399 --> 00:10:36.879
We also modified a mail server speed, seamlessly
integrated with the new mobile access server,

00:10:36.879 --> 00:10:41.570
so the mobile clients can have easy
access to the mail and we're going to talk

00:10:41.570 --> 00:10:44.370
about this functionality a little bit more later.

00:10:44.370 --> 00:10:47.509
And lastly we added support for server side mail rules,

00:10:47.509 --> 00:10:52.460
which means you can filter mail messages before
they get to your client's mail application.

00:10:52.460 --> 00:10:58.930
So for example, you can filter all the mail in this traffic
carefully monitoring, so only the important business

00:10:58.929 --> 00:11:03.899
and personal message get to your
iPhone, which has limited screen.

00:11:03.899 --> 00:11:05.110
So that's the mail server.

00:11:05.110 --> 00:11:11.240
We have a brand new engine, high performance, high
reliability, and also great Apple integration.

00:11:11.240 --> 00:11:12.850
Next iChat.

00:11:12.850 --> 00:11:18.740
Didn't make too many changes this time around,
but there are a few I want to highlight.

00:11:18.740 --> 00:11:23.730
First we analyzed and addressed,
all the, scalability bottlenecks.

00:11:23.730 --> 00:11:26.649
So while we don't have any detailed data just yet,

00:11:26.649 --> 00:11:31.509
looks like we more than doubled the scalability
of iChat server and Snow Leopard server.

00:11:31.509 --> 00:11:37.539
On the functional feature front, we also added support
for all the buddy lists as Craig mentioned earlier,

00:11:37.539 --> 00:11:43.339
and that function now can be turned on or off on
a per group basis to give you more flexibility.

00:11:43.340 --> 00:11:49.120
And on the security front, we also added support for
active directories native digest authentication,

00:11:49.120 --> 00:11:53.610
as well as support for kerberos multirealm, which
means iChat server now works much better

00:11:53.610 --> 00:11:57.710
in the active directory, open directory combo environment.

00:11:57.710 --> 00:12:05.360
And lastly, our server as always is open standards based,
which means it's fully compatible with all the XMPP

00:12:05.360 --> 00:12:11.870
and Jabber compliant servers out there, such as
Google Talk, and you can easily fit in with them.

00:12:11.870 --> 00:12:18.250
And that's Chat Server, and what I'm going to do now
is invite Christopher [ Inaudible ]  to the stage so he can talk

00:12:18.250 --> 00:12:22.539
about the rest of the communication
services and also collaboration services.

00:12:22.539 --> 00:12:28.149
>> So as you know, Snow Leopard has been all about refining
and operating the foundations of the operating system,

00:12:28.149 --> 00:12:33.059
and we did our fair share of that with the
X server as you saw in Kazu's presentation.

00:12:33.059 --> 00:12:35.759
We also decided to add a few new features and services,

00:12:35.759 --> 00:12:39.509
and I'm going to go through some of
those some starting with iCal server.

00:12:39.509 --> 00:12:44.319
So for those of you unfamiliar with iCall server, it's
a fully featured calendaring system that allows you

00:12:44.320 --> 00:12:51.930
to schedule meetings with people in your organization, deal
with availability, manage availability, things like that.

00:12:51.929 --> 00:12:56.779
It also has support for delegation, so you can have
people who are delegated to manually manage a room

00:12:56.779 --> 00:13:00.789
or maybe have an administrative
assistant manage the calendars for others.

00:13:00.789 --> 00:13:06.189
And like all services in Mac OS X server,
it's designed for high performance and lastly

00:13:06.190 --> 00:13:11.920
but certainly not leastly important, is
it's completely standards based unlike many

00:13:11.919 --> 00:13:16.379
of the calendaring systems we've all been using
for the last few years, and learning to love some.

00:13:16.379 --> 00:13:22.879
The standard we are using is called
CalDAV, and it's now an IETF RFC.

00:13:22.879 --> 00:13:26.840
The standard that we're actually heavily
involved in, and we're helping to...

00:13:26.840 --> 00:13:33.220
have one of the vendors to ship the first commercial
CalDAV implementation, we find things and we actually try

00:13:33.220 --> 00:13:36.519
to push changes back up into the standard
that will help everybody, benefit everybody.

00:13:36.519 --> 00:13:41.509
There have been a few attempts to come up
with a calendaring standard in the past.

00:13:41.509 --> 00:13:45.330
None of them have really gotten any traction,
and with CalDAV we're finally starting

00:13:45.330 --> 00:13:49.300
to see a traction, some traction, lots of traction in fact.

00:13:49.299 --> 00:13:54.549
So these are companies that have already deployed,
or are in the middle of deploying calendar servers,

00:13:54.549 --> 00:13:57.839
clients or other calendaring related applications.

00:13:57.840 --> 00:14:02.870
So I think it's really clear that,
as IMAP, POP, and SMTP are to email,

00:14:02.870 --> 00:14:04.830
CalDAV is definitely going to be the calendaring.

00:14:04.830 --> 00:14:09.650
So CalDAV is the standard for calendaring,
it's great to have a standard finally.

00:14:09.649 --> 00:14:14.000
So that's kind of an overview of iCal server,
let me get into some of the things that are new.

00:14:14.000 --> 00:14:18.809
Starting with just some protocol
enhancements, so the first one is something

00:14:18.809 --> 00:14:20.779
that we noticed as we were developing our server.

00:14:20.779 --> 00:14:22.959
It's called Implicit Scheduling.

00:14:22.960 --> 00:14:29.780
The spec originally called for clients to understand
most of the logic when it came to managing, scheduling,

00:14:29.779 --> 00:14:32.089
and shuffling events around between people.

00:14:32.090 --> 00:14:36.649
And it turns out that that actually can be
very fragile, so we helped to implement,

00:14:36.649 --> 00:14:40.679
helped to define a new standard called implicit
scheduling where all that logic really just moves

00:14:40.679 --> 00:14:42.839
into the server, and the server manages all of that.

00:14:42.840 --> 00:14:44.340
And there are two major benefits to that.

00:14:44.340 --> 00:14:49.920
First, is that it's much easier to write clients, which
is a good thing for anybody who wants to write a client.

00:14:49.919 --> 00:14:54.959
And number 2 of course is that because the server's managing
all of the data and you don't have to worry about a client

00:14:54.960 --> 00:14:59.170
that had a problem, the data integrity is greatly increased.

00:14:59.169 --> 00:15:03.459
We've also added push notification,
so clients are immediately updated

00:15:03.460 --> 00:15:06.300
or notified when there's an update to an event

00:15:06.299 --> 00:15:12.620
And we've added attendee look ups for CalDAV, and what
I mean by that is in Leopard look ups, the attendees,

00:15:12.620 --> 00:15:17.379
were done through open directory or LDAP, and that
turned out to be a problem when you wanted to do things

00:15:17.379 --> 00:15:21.610
like provide remote access, because then you
had to poke a hole in your firewall for LDAP.

00:15:21.610 --> 00:15:26.889
You really don't want to do that, so now everything
runs through CalDAV, there's no need for...

00:15:26.889 --> 00:15:31.860
no need for poking holes in your firewall,
and it's much easier to write clients as well

00:15:31.860 --> 00:15:33.720
because clients only need to know about CalDAV.

00:15:33.720 --> 00:15:35.100
So this is a good new feature.

00:15:35.100 --> 00:15:40.570
And lastly we've added the ability for
attendees in an event to reply to an event

00:15:40.570 --> 00:15:44.460
with the textual message to the organizer in the event.

00:15:46.649 --> 00:15:55.840
So moving onto more end user facing features, Snow Leopard
now contains a full blown web based calendar client

00:15:55.840 --> 00:16:01.840
The web client is basically a complete CalDAV client,
it's a very rich web application like you'd expect,

00:16:01.840 --> 00:16:04.080
you can drag and drop events, have multiple calendars.

00:16:04.080 --> 00:16:06.780
You can invite people, view they're free/busy,

00:16:06.779 --> 00:16:09.740
all the things you would expect to
be able to do in something like iCal.

00:16:09.740 --> 00:16:14.310
So what this means is that now everybody in your
organization, regardless of whether or not they have iCal

00:16:14.309 --> 00:16:17.519
or some other CalDAV client, has
access to their calendaring system.

00:16:17.519 --> 00:16:20.179
So this is going to be great for cross platform.

00:16:21.399 --> 00:16:27.579
Next we put a lot of work into enhancing our
interoperability with non CalDAV systems.

00:16:27.580 --> 00:16:33.980
So most clients, most calendar clients
support a protocol called iMIP.

00:16:33.980 --> 00:16:41.129
And iMIP is basically a way for invitations
to be sent and responded to over email.

00:16:41.129 --> 00:16:45.470
In general fixed on by the clients, so it can be kind
of a problem if you're just going client to client.

00:16:45.470 --> 00:16:49.330
So what we did is we embedded iMIP
directly into the CalDAV server.

00:16:49.330 --> 00:16:55.129
So what that means is I can invite people from my
organization using CalDAV, or anybody else outside

00:16:55.129 --> 00:17:00.169
of my organization, just using their email address,
and the server manages sending those invitations out,

00:17:00.169 --> 00:17:04.619
accepting the responses, collating the data,
and making sure everything's all up to date.

00:17:04.619 --> 00:17:07.989
So this works great with things
like Google Calendars, Outlook,

00:17:07.990 --> 00:17:13.539
and Yahoo Calendar; any other calendar for that matter.

00:17:13.539 --> 00:17:20.200
And lastly, I'm going to talk a little bit
about performance, so the team spent a lot

00:17:20.200 --> 00:17:23.279
of time improving performance for Snow Leopard.

00:17:23.279 --> 00:17:28.849
They did a lot of analysis, they wrote
benchmarks, they ran simulation after simulation...

00:17:28.849 --> 00:17:33.899
and they are able to get the performance of
the server up dramatically - 7 to 10 times.

00:17:33.900 --> 00:17:38.740
I guess that means 7 to 10 free Xserves for you people.

00:17:40.380 --> 00:17:44.540
And so that's great, so simulations are
great but it's really important for us to...

00:17:44.539 --> 00:17:49.480
it's really important for us to find a way to really
verify that this would actually work in the real world.

00:17:49.480 --> 00:17:57.380
So we went and found a really large company that has
probably more meetings than most companies in this world,

00:17:57.380 --> 00:18:02.950
and I'm happy to say that they've completely
deployed iCal server, and iCal as their sole...

00:18:02.950 --> 00:18:06.009
calendaring system.

00:18:06.009 --> 00:18:11.170
[ Applause ]

00:18:11.170 --> 00:18:16.070
So that lets you know that iCal server
is ready for big companies like Apple.

00:18:16.069 --> 00:18:20.559
So enough talking about features, I'm going to ask
Wilfredo Sanchez to come up and give you a demo of some

00:18:20.559 --> 00:18:24.009
of the features that we've added for Snow Leopard.

00:18:24.009 --> 00:18:29.619
[ Applause ]

00:18:29.619 --> 00:18:30.589
>> Good afternoon.

00:18:30.589 --> 00:18:33.899
I'm Wilfredo and I manage the iCal
server engineering team at Apple.

00:18:33.900 --> 00:18:38.860
I'm just going to show you a couple of the
highlighted features that you'll see in Snow Leopard

00:18:38.859 --> 00:18:41.259
and Snow Leopard server related to calendaring.

00:18:41.259 --> 00:18:44.450
Just go over to the demo machine, OK.

00:18:44.450 --> 00:18:50.980
So now let's, for the sake of example, let's say that
a university called Moeller University has decided

00:18:50.980 --> 00:18:56.390
to deploy iCal server on their campus for use
by their faculty, staff, and their students.

00:18:56.390 --> 00:19:01.009
And say, I'll start out here as a student...

00:19:01.009 --> 00:19:06.539
and iCal here should look familiar
to those of you using Leopard.

00:19:06.539 --> 00:19:13.009
By deploying iCal server, the university is basically
provided a standards based CalDAV service to all

00:19:13.009 --> 00:19:19.869
of their users, and here I can store all of my meetings
rather than just on my machine on the CalDAV server,

00:19:19.869 --> 00:19:23.909
which means that I can access it from any
machine that has access to net server.

00:19:23.910 --> 00:19:28.680
And so you see here in blue I've got all my
course work, I've got some Phys Ed stuff,

00:19:28.680 --> 00:19:33.870
sports that I'm doing in the morning, and then
some social things I'm doing in the afternoon.

00:19:33.869 --> 00:19:39.909
Now that in and of itself is somewhat interesting,
but really where CalDAV comes into play is

00:19:39.910 --> 00:19:43.330
when you can do some scheduling things
in it, interact with other people.

00:19:43.329 --> 00:19:46.480
So I'm going to go ahead and create a
meeting here on my projects calendar,

00:19:46.480 --> 00:19:48.579
because I want to meet with the professor about a project.

00:19:48.579 --> 00:19:55.839
And let's just call that project "meeting".

00:19:55.839 --> 00:20:01.250
And one thing is I need to find a room to book that in, so
I'm just going to go ahead and start typing building number,

00:20:01.250 --> 00:20:05.609
and all the rooms in that building show up in a
list here, and they're all marked as available.

00:20:05.609 --> 00:20:09.529
So you can see right here in this
view what's available to access,

00:20:09.529 --> 00:20:11.670
so I'm just going to go ahead and
book something in this room.

00:20:11.670 --> 00:20:17.910
And then I'm going to start inviting some folks, so
the professor that I want to meet with is named Arthur.

00:20:17.910 --> 00:20:24.640
So I start to type his name and now
iCal is doing a query via HTTP protocol,

00:20:24.640 --> 00:20:27.740
to the CalDAV server to find out what users are available.

00:20:27.740 --> 00:20:31.529
Now in Leopard, this was actually done
via an open directory based lookup.

00:20:31.529 --> 00:20:37.009
At this point the client no longer needs to bind
to open directory in order for this to work.

00:20:37.009 --> 00:20:42.849
[ Applause ]

00:20:42.849 --> 00:20:45.250
This lookup is happening directly to the calendar server,

00:20:45.250 --> 00:20:50.049
and that means that there's no issues
between synchronizing data or...

00:20:50.049 --> 00:20:54.099
basically this data's authoritative
from the calendar server.

00:20:54.099 --> 00:20:58.819
And so I'm going to go ahead and invite
a couple other folks - Iris and Morgan...

00:20:58.819 --> 00:21:06.099
and aside from doing lookups just on the directory
service, iCal also checks your address book.

00:21:06.099 --> 00:21:11.329
So here I'm going to invite somebody names
Alyssa, and Alyssa does not have an account

00:21:11.329 --> 00:21:14.799
on the calendaring system here,
because she's not a student at Moeller.

00:21:14.799 --> 00:21:21.509
So I'm going to just enter her email address from
my address book in here, which iCal will do for me.

00:21:21.509 --> 00:21:23.430
And so in Leopard you can really do this,

00:21:23.430 --> 00:21:27.160
but what will happen now is the calendar
server will get this email address

00:21:27.160 --> 00:21:32.850
and actually behind the scenes send an IMAP
message out to Alyssa that she can then process.

00:21:32.849 --> 00:21:36.459
So I'm going to go ahead and send that out, that looks good.

00:21:36.460 --> 00:21:40.390
I'm going to hide this, and switch over to Alyssa's case.

00:21:40.390 --> 00:21:46.710
Now Alyssa uses Gmail to read her email, and as you
can see here she just got an email message inviting her

00:21:46.710 --> 00:21:48.519
to a project meeting.

00:21:48.519 --> 00:21:53.139
And you see there's an HTML formatted
message in here with the date of the event

00:21:53.140 --> 00:22:00.840
and all the information that's relevant to it - in Google
and there are many other applications that do this sort

00:22:00.839 --> 00:22:04.869
of thing, actually give you some affordance for
accepting the meeting right, and the email clients,

00:22:04.869 --> 00:22:06.799
so I'm just going to go ahead and accept that.

00:22:06.799 --> 00:22:14.750
And if I go over to my calendar you can
see that, in fact this meeting got in here.

00:22:14.750 --> 00:22:16.099
Oh, wrong week.

00:22:16.099 --> 00:22:18.589
That's so confusing.

00:22:20.539 --> 00:22:23.769
Next again, alright there it is.

00:22:23.769 --> 00:22:25.740
I guess I'd advanced too much in iCal.

00:22:25.740 --> 00:22:26.910
OK, thanks.

00:22:26.910 --> 00:22:34.060
And you can see that here, you know, there's the meeting
and you can see like all the relevant information about it.

00:22:34.059 --> 00:22:36.579
So we'll go ahead and exit that.

00:22:36.579 --> 00:22:41.679
Now let's say now I'm the professor that got
this email message, and I'm kind of out on the go

00:22:41.680 --> 00:22:44.120
so I don't have a machine with iCal right in front of me.

00:22:44.119 --> 00:22:47.049
So I'm going to just borrow somebody else's computer

00:22:47.049 --> 00:22:51.460
and use a standard web browser on
their machine, happens to be Safari.

00:22:51.460 --> 00:22:54.670
Let me actually get this link here...

00:22:54.670 --> 00:22:59.650
and Moeller University has actually
put the calendar on their homepage,

00:22:59.650 --> 00:23:01.830
so there's a couple of interesting things to note here.

00:23:01.829 --> 00:23:07.079
One is that if you use Leopard, you know
that we had a web based calendar for groups

00:23:07.079 --> 00:23:10.029
and now this is actually available to individual users.

00:23:10.029 --> 00:23:16.359
Another thing is that this is no embeddable,
so you can take any website and actually,

00:23:16.359 --> 00:23:23.149
like you could embed a You Tube video onto a website, you
can now embed the user web calendar which we inherited

00:23:23.150 --> 00:23:29.940
from the wiki product, and embed that into
your homepage which is kind of spiffy.

00:23:29.940 --> 00:23:37.059
And finally, kind of cool is that all of this is actually
a rich calendaring UI, so it's not just a read only view.

00:23:37.059 --> 00:23:41.829
As you can see here, I've been invited to a couple
of things, I've got to test that, what I was doing.

00:23:41.829 --> 00:23:46.470
And here's that project meeting that I was
invited to, and I can go ahead and accept

00:23:46.470 --> 00:23:49.110
that here, and there it is on my calendar.

00:23:49.109 --> 00:23:56.409
Similarly I can do things like create a new
meeting, just call that whatever, and I can,

00:23:56.410 --> 00:23:59.340
just like I could in iCal actually
add some attendees in here.

00:23:59.339 --> 00:24:02.339
So I'm going to go ahead and add Cyrus like I did before,

00:24:02.339 --> 00:24:05.869
there he is doing attendee look
up just like he could on iCal.

00:24:05.869 --> 00:24:07.989
And kind of cooler is you can actually see

00:24:07.990 --> 00:24:12.049
that the free/busy information is displayed
up on here, just like you would on iCal.

00:24:12.049 --> 00:24:16.680
So it' s full on, rich web calendar experience here.

00:24:16.680 --> 00:24:18.640
And that's all I have to show for you.

00:24:18.640 --> 00:24:24.009
If you have any more you want to see,
come by our talk tomorrow, and thanks.

00:24:24.009 --> 00:24:30.019
[ Applause ]

00:24:30.019 --> 00:24:32.389
>> Thanks Alfredo.

00:24:32.390 --> 00:24:34.370
Alright, so that's iCal server.

00:24:34.369 --> 00:24:39.699
Some protocol enhancements, we've greatly
improved the performance, a great web client.

00:24:39.700 --> 00:24:43.090
I encourage all of you who are considering
calendaring systems to take a look at this.

00:24:43.089 --> 00:24:47.599
It's ready for large organizations, and I think
it's going to work out great for all of you.

00:24:47.599 --> 00:24:49.639
It's working out great for us at Apple even.

00:24:49.640 --> 00:24:55.500
So next, I'm going to talk about a new
service called Address Book server.

00:24:55.500 --> 00:25:00.349
So Address Book Server is a service, based
service, that allows people to take their contacts,

00:25:00.349 --> 00:25:05.250
which they normally would have had in a local address
book, and store them up on a server and manage them just

00:25:05.250 --> 00:25:09.019
as they would if they were local contacts.

00:25:09.019 --> 00:25:13.930
The benefit here is that they can get to these contacts
from any various computers that they may be using.

00:25:13.930 --> 00:25:20.009
So sticking to our theme of standards and
Mac OS X server, Address Book Server is based

00:25:20.009 --> 00:25:26.319
on a new standard called CardDAV, and some of you
may have noted that CardDAV sounds an awful lot

00:25:26.319 --> 00:25:28.919
like CalDAV, and there's a good reason for that.

00:25:28.920 --> 00:25:36.200
The people who designed CalDAV or defined that standard,
also are the people who are defining the CardDAV standard.

00:25:36.200 --> 00:25:42.610
And what they've done is actually taken kind of the
base levels of CalDAV, taken the calendar part out,

00:25:42.609 --> 00:25:47.369
and put contacts in instead - in
this case using vCard as a format.

00:25:47.369 --> 00:25:51.349
The benefits here are that the standard will
end up getting pushed through more quickly

00:25:51.349 --> 00:25:53.279
because the base layers were already taken care of.

00:25:53.279 --> 00:26:00.720
And it also makes it easy to write products that use both
CalDAV and CardDAV because the protocols are so similar.

00:26:00.720 --> 00:26:05.920
And people and events go together very well,
so there are a lot of opportunities there.

00:26:05.920 --> 00:26:10.180
So servers are only half the story,
need clients so I'm happy to say

00:26:10.180 --> 00:26:14.549
that Snow Leopard Address Book has full support for CardDAV.

00:26:14.549 --> 00:26:18.799
One thing you'll notice looking at this is that it
looks just the way Address Book has always looked,

00:26:18.799 --> 00:26:24.809
which means that when somebody starts using CardDAV rather
than local contacts, there's nothing new for them to learn.

00:26:24.809 --> 00:26:29.899
It operates exactly the same way as
Address Book has always operated.

00:26:29.900 --> 00:26:30.790
Another...

00:26:30.789 --> 00:26:35.859
since the contacts are stored on the server, you're probably
wondering well what happens if I can't get to the server?

00:26:35.859 --> 00:26:42.839
Well Address Book has full offline support for contacts, so
if somebody can't get to their server or they're traveling,

00:26:42.839 --> 00:26:45.970
they still have all of their contacts
listed, cached locally.

00:26:45.970 --> 00:26:51.269
They're able to edit, delete, add new contacts,
treat them just the way they normally would.

00:26:51.269 --> 00:26:54.980
When they get back on the network and connect to the
server, just automatically syncs up to the server

00:26:54.980 --> 00:27:00.900
and the server's got the final
versions with no user interaction.

00:27:00.900 --> 00:27:07.490
Additionally, because this is embedded inside
of Address Book, Address Book also has API's.

00:27:07.490 --> 00:27:13.130
So applications like mail app,
iCal, and a lot of applications

00:27:13.130 --> 00:27:16.240
that developers developed, take advantage of these APIs.

00:27:16.240 --> 00:27:21.190
And if you take advantage of those APIs you
automatically get access to these CardDAV contacts

00:27:21.190 --> 00:27:25.850
You don't have to do anything else.

00:27:25.849 --> 00:27:32.179
Another feature we've added into Address Book
Server is support for a global Address Book.

00:27:32.180 --> 00:27:37.610
So what that means is that CardDAV allows
people to manage their personal contacts,

00:27:37.609 --> 00:27:42.359
once they configure the CardDAV account they also
get the ability to search over your corporate,

00:27:42.359 --> 00:27:47.209
or your organizational LDAP or open directory contact store.

00:27:47.210 --> 00:27:52.039
So gives them access to all of the people
in your organization at the same time.

00:27:53.269 --> 00:27:58.569
So Address Book Server, brand new service in
Mac OS X server, we're very excited about it.

00:27:58.569 --> 00:28:03.549
We're excited that there's a standard
that we could build this on top of,

00:28:03.549 --> 00:28:07.779
and hopefully people will find it very useful.

00:28:07.779 --> 00:28:15.369
So that's all I've got for our communications
section, so mail got a brand new engine, great engine.

00:28:15.369 --> 00:28:22.489
Lots of new enhancements in iChat server, iCal servers
and performance enhancements, great web clients,

00:28:22.490 --> 00:28:30.160
minimal operability enhancements, and
our new service Address Book Server.

00:28:30.160 --> 00:28:34.470
So from here, I want to move onto collaboration.

00:28:34.470 --> 00:28:44.549
So in Leopard we shipped a suite of web collaboration tools,
included things like wiki, group blogs, group mailing lists,

00:28:44.549 --> 00:28:49.430
calendars, it contained a really great
WYSIWYG editing engine, and it made it very,

00:28:49.430 --> 00:28:52.210
very easier for people to collaborate
with documents on the web.

00:28:52.210 --> 00:28:56.150
And before I get into...

00:28:56.150 --> 00:28:58.940
I want to talk a little bit about what happened at Apple.

00:28:58.940 --> 00:29:07.680
So we obviously use our own software, and so as soon
as we had a product ready, the Leopard product ready,

00:29:07.680 --> 00:29:12.549
we deployed a server for our own use inside the server
engineering organization, and it became the prime location

00:29:12.549 --> 00:29:17.940
for all of our documents, our specifications,
our prototype documents,

00:29:17.940 --> 00:29:22.059
our user interaction documents, and we used it very heavily.

00:29:22.059 --> 00:29:27.169
Other people at Apple, other groups, started to
hear about this crazy wiki thing that we were using,

00:29:27.170 --> 00:29:31.180
and asked if they could get their
projects put up under our server.

00:29:31.180 --> 00:29:36.759
And so of course we said yes, the more people
the merrier, and I just checked the other day

00:29:36.759 --> 00:29:41.180
and we have almost 500 projects
living on this server at Apple now.

00:29:41.180 --> 00:29:46.070
So anyway, the point is that 500 different
groups are using this product at Apple.

00:29:46.069 --> 00:29:49.490
It's become a critical part of the way they get
their work done, the way they document things,

00:29:49.490 --> 00:29:54.500
the way they track things, and so we
were really excited to see that happen.

00:29:54.500 --> 00:29:59.430
I anticipate that when we actually advertise to
people, it will be 5,000 wiki's within a year.

00:29:59.430 --> 00:30:02.190
So anyway, moving on, new features.

00:30:02.190 --> 00:30:05.160
So in Leopard server we made it pretty easy to create wikis.

00:30:05.160 --> 00:30:08.400
In Snow Leopard server we're making it incredibly easy.

00:30:08.400 --> 00:30:14.390
We've got a new web based assistant for setting
up a wiki, and it takes basically 3 clicks.

00:30:14.390 --> 00:30:20.660
Give your wiki a name, choose a theme, decide
who you want to have access to it, you're done.

00:30:20.660 --> 00:30:23.050
It literally takes 30 seconds.

00:30:24.490 --> 00:30:28.950
Next, a feature called My Page, and
My Page does a few different things.

00:30:28.950 --> 00:30:34.350
One of the most important things is it
provides what we call an updates page,

00:30:34.349 --> 00:30:37.750
which gives you a way to manage the vast
amount of information that you have.

00:30:37.750 --> 00:30:40.069
In an organization like Apple where we have 500 wikis,

00:30:40.069 --> 00:30:43.439
it's very difficult to find information
and to monitor information.

00:30:43.440 --> 00:30:49.820
And so the updates page gives you a way to decide which
people you'd like to follow, and once you've done that,

00:30:49.819 --> 00:30:53.299
you basically get an event stream that shows you
all of the things that have happened across all

00:30:53.299 --> 00:30:57.680
of the projects you care about - new pages that
have been added, pages that have been edited,

00:30:57.680 --> 00:31:02.490
comments on pages, and things such as that.

00:31:02.490 --> 00:31:06.690
In addition to that, that's still a lot of data and
so we came up with some ways to make it really easy

00:31:06.690 --> 00:31:11.410
to triage data, there are ways to mark pages
as favorites, you can come back to them later,

00:31:11.410 --> 00:31:17.750
quick ways to scroll through and mark things as read,
the ability to create smart filters so that you can track

00:31:17.750 --> 00:31:20.200
in more minute detail things you really care about.

00:31:20.200 --> 00:31:24.069
It's become actually pretty useful
to us as we built Snow Leopard,

00:31:24.069 --> 00:31:28.149
because we were living on this before we
actually shipped as part of testing Snow Leopard.

00:31:28.150 --> 00:31:33.009
So a couple of other features in My Page - it provides
some jumping off points to things like your web calendar,

00:31:33.009 --> 00:31:38.769
your personal web calendar, your personal web mail, and
a long standing feature is that it also allows users

00:31:38.769 --> 00:31:42.009
to change their open directory passwords through the web.

00:31:42.009 --> 00:31:47.720
[ Applause ]

00:31:47.720 --> 00:31:52.700
My Page, and again 500 wikis, it's a lot of data.

00:31:52.700 --> 00:31:57.090
With Leopard we didn't have a way
to search cross multiple wikis

00:31:57.089 --> 00:32:00.169
and that makes it very difficult to
find the information you're after.

00:32:00.170 --> 00:32:04.640
With Snow Leopard, it's super simple, one query
goes across all the wikis you have access to,

00:32:04.640 --> 00:32:11.200
and it makes it incredible easy to find that needle in
that haystack of data that you've got in your organization.

00:32:12.539 --> 00:32:15.809
Next is Quick Look, which I think is my favorite feature.

00:32:17.099 --> 00:32:24.549
Leopard server made it incredibly easy for people to upload
documents of any type into a wiki page, and that was great.

00:32:24.549 --> 00:32:29.649
The problem was that if somebody wanted to view that
page, that document, they then had to download it

00:32:29.650 --> 00:32:32.759
to their desktop system and then view it in the desktop.

00:32:32.759 --> 00:32:37.039
That could be a problem because you may not have
the application required to view that document.

00:32:37.039 --> 00:32:43.710
You may even be on a platform that doesn't even support
that application, so what we did is we took a look at...

00:32:43.710 --> 00:32:51.100
took advantage of the same Quick Look technology that's
in Mac OS X Desktop, and moved it over to the server.

00:32:51.099 --> 00:32:58.359
So what happens now is that if somebody uploads a document
of any type to the wiki, the next person who wants to come

00:32:58.359 --> 00:33:03.179
and look at that document simply clicks on the Quick
Look icon, and they get a beautifully rendered version

00:33:03.180 --> 00:33:04.930
of that document directly in the web browser.

00:33:04.930 --> 00:33:07.820
And you're going to see a demo of
this, it's actually pretty amazing.

00:33:10.539 --> 00:33:12.569
And a little more on the development side.

00:33:12.569 --> 00:33:19.509
So after we shipped the Leopard server version of our
collaboration suite, the first thing that happened is a lot

00:33:19.509 --> 00:33:22.789
of system administrators, developers
came, started writing into the forums

00:33:22.789 --> 00:33:25.480
and asking are there ways that we can customize this?

00:33:25.480 --> 00:33:28.829
And we're like sure, you can like customize the
look and feel, and they were happy with that.

00:33:28.829 --> 00:33:33.189
But the next question was, how can we make it
do things that are relevant to what we do...

00:33:33.190 --> 00:33:36.170
in our organization, are unique
to what we do in our organization?

00:33:36.170 --> 00:33:40.850
So happy to say that we've added some new
customization hooks to allow you to do...

00:33:40.849 --> 00:33:43.379
actually add new functionality into the wiki.

00:33:43.380 --> 00:33:48.550
So an example might be that you could add a new
button to the toolbar, which would allow users

00:33:48.549 --> 00:33:52.240
when they're editing pages, to click the button
and add a widget that you guys have developed,

00:33:52.240 --> 00:33:57.099
that's very specific to what you do, and have
that embedded directly into the wiki page.

00:33:57.099 --> 00:34:02.549
Or another example is you could write a plug in that
scanned the content of wiki pages as they were saved,

00:34:02.549 --> 00:34:07.569
maybe noticed certain text phrases,
and did something special with that,

00:34:07.569 --> 00:34:10.750
and you'll see an example of that in a minute.

00:34:10.750 --> 00:34:18.960
So lastly on the collaboration front, we've completely
optimized the wiki for iPhone, put a lot of work into this

00:34:18.960 --> 00:34:22.710
and basically made the iPhone a
first class citizen when it comes

00:34:22.710 --> 00:34:25.860
to browsing the content in our web collaboration suite.

00:34:25.860 --> 00:34:31.460
So it's got full My Page implementation,
the ability to search across the wikis,

00:34:31.460 --> 00:34:36.579
the ability to tag wikis, to add comments onto wikis.

00:34:36.579 --> 00:34:41.389
We made sure that anything that gets rendered,
renders really beautifully on the iPhone.

00:34:41.389 --> 00:34:46.009
And so this is a great feature for people who happen
to be away from their computer and really want

00:34:46.010 --> 00:34:48.070
to get back to that data from the organization.

00:34:48.070 --> 00:34:54.090
So I'm going to stop talking for a minute and let John
Anderson come up on stage and show you a demo of some

00:34:54.090 --> 00:34:55.289
of these features I've just talked about.

00:34:55.289 --> 00:34:56.009
Thanks.

00:34:56.010 --> 00:35:00.930
[ Applause ]

00:35:00.929 --> 00:35:02.460
>> Thanks Chris.

00:35:02.460 --> 00:35:04.849
So as he mentioned, I'm John Anderson.

00:35:04.849 --> 00:35:11.509
I'm the manager of the wiki Server team, and today I'm
going to be showing you 3 features in the wiki server.

00:35:11.510 --> 00:35:18.470
The first is that it's really easy to create wikis via
the web, and then I'm also going to show you how to search

00:35:18.469 --> 00:35:23.089
across multiple wikis simultaneously to
find the information you're looking for.

00:35:23.090 --> 00:35:29.600
I'm also going to show you how to preview documents
using Quick Look, without having to download them.

00:35:29.599 --> 00:35:35.549
And I'm also going to be going over an example of what
you can do with some of our new theme developer features.

00:35:35.550 --> 00:35:37.560
But first...

00:35:37.559 --> 00:35:39.969
turn on my demo here...

00:35:39.969 --> 00:35:43.250
First I'm going to start at the server homepage.

00:35:43.250 --> 00:35:50.070
So we redesigned the server homepage for Snow Leopard,
and we think it serves as a great jumping off point

00:35:50.070 --> 00:35:54.480
to all the services you have enabled on your server.

00:35:55.630 --> 00:35:59.630
But for right now, I'm going to go
ahead and click on the wiki link.

00:35:59.630 --> 00:36:05.630
So here we can see I've set up a wiki server for Moeller
University, and there's two schools that have wikis

00:36:05.630 --> 00:36:09.289
on here - the School of Biology,
and the School of Computer Science.

00:36:09.289 --> 00:36:12.429
I'm going to go ahead and add a new
wiki for the School of Medicine.

00:36:12.429 --> 00:36:14.759
You can see how easy this is.

00:36:14.760 --> 00:36:21.560
So I click on "create a new wiki," and
I'll make this the School of Medicine.

00:36:23.539 --> 00:36:27.599
And here you can see the next step is
it's choosing a theme for your wiki.

00:36:27.599 --> 00:36:31.489
We had a lot of great themes in Leopard,
and we've added even more for Snow Leopard.

00:36:31.489 --> 00:36:35.449
I'm going to be boring and just pick
the Apple theme, and click "next."

00:36:35.449 --> 00:36:40.679
And here, now this is really cool, you can
actually go in and if it's a private wiki,

00:36:40.679 --> 00:36:45.619
instead of assigning a single group to it, you can
assign any combination of users and groups to this

00:36:45.619 --> 00:36:48.420
with any different reading and writing privileges.

00:36:48.420 --> 00:36:51.619
And I'm not going to be showing it to
you today, but you can actually set

00:36:51.619 --> 00:36:54.589
up multiple admins as well, which is really nice.

00:36:54.590 --> 00:36:57.010
For the sake of this...

00:36:57.010 --> 00:36:59.580
[ Applause ]

00:36:59.579 --> 00:37:04.500
... for the sake of this demo I'm going to make the wiki
public, and just require users to log in to read it.

00:37:04.500 --> 00:37:07.500
And when I click "create" that's it, I've got a wiki.

00:37:07.500 --> 00:37:09.369
So really, really simple.

00:37:09.369 --> 00:37:12.859
I can click the "go to wiki" link and there's my new wiki.

00:37:12.860 --> 00:37:17.160
So the thing that you'll probably find is
that when it's this easy to create wikis,

00:37:17.159 --> 00:37:22.920
you're going to start having a lot of wikis propagate
in your wiki server, and everybody's going to want one.

00:37:22.920 --> 00:37:28.289
And so we created a cross wiki search
mechanism now that makes it really easy

00:37:28.289 --> 00:37:31.980
to find content across all the wikis on your server.

00:37:31.980 --> 00:37:37.559
And I'm going to demonstrate this here by
searching inside this wiki for the word "class".

00:37:37.559 --> 00:37:40.070
It's a school, so I should be able to find that.

00:37:40.070 --> 00:37:45.630
But since I'm only searching in this wiki, and it's a
brand new one I just created, I'm not seeing any results.

00:37:45.630 --> 00:37:53.000
However if I click the "search all wikis and blog
links", you can see search results across multiple wikis.

00:37:53.000 --> 00:37:59.659
And in this search page I can actually specify sort
order, I can filter by type, I can filter by tag.

00:37:59.659 --> 00:38:05.250
Anybody who's familiar with Leopard we could do all this
stuff here, but one thing that we added here is the concept

00:38:05.250 --> 00:38:08.340
of smart filters, and I'll show you how that works.

00:38:08.340 --> 00:38:13.640
I can click "save as a smart filter"
and I'll just call this classes.

00:38:13.639 --> 00:38:18.730
Click "save" and now I have a link that I can
click on at any point to replay this search,

00:38:18.730 --> 00:38:21.530
and any parameters I've entered into it, with one click.

00:38:21.530 --> 00:38:23.690
So really, really cool.

00:38:23.690 --> 00:38:26.849
The other thing that I can do is I can star pages.

00:38:26.849 --> 00:38:30.049
This means that I can search for starred pages later.

00:38:30.050 --> 00:38:32.460
When you do search results you
can see which pages are starred,

00:38:32.460 --> 00:38:36.559
so it's a easy way to remember
which pages you're interested in.

00:38:36.559 --> 00:38:43.619
So that's cross script search, but what if you want
to just keep track of updates to the wiki server?

00:38:43.619 --> 00:38:48.329
That's why we created the updates page,
and if I click the "updates" link...

00:38:48.329 --> 00:38:55.289
so here you can see all of the changes that have happened on
this server since I last read it, since I last looked at it.

00:38:55.289 --> 00:38:58.960
And this provides you an easy way
to triage through your documents.

00:38:58.960 --> 00:39:05.440
So I can go through page by page, I think I have about three
pages here, and click "mark these as read" and you can see

00:39:05.440 --> 00:39:09.970
that the pages disappear, and this
page is actually live updating.

00:39:09.969 --> 00:39:16.549
So I don't actually have to refresh the page for
changes to show up, and I have somebody offstage

00:39:16.550 --> 00:39:20.550
that just made a few changes, and you
can see that they disappeared onscreen.

00:39:20.550 --> 00:39:23.010
So that's pretty cool.

00:39:23.010 --> 00:39:29.020
[ Applause ]

00:39:29.019 --> 00:39:35.360
So that's cross wiki searching, and the updates
page, but the next thing I want to show you...

00:39:35.360 --> 00:39:39.099
we worked really hard on this and
it's really impressive, is Quick Look.

00:39:39.099 --> 00:39:45.159
And so to demonstrate that I'm going to click
on this recently changed science project page,

00:39:45.159 --> 00:39:48.649
and you can see one of our great new Snow Leopard themes.

00:39:48.650 --> 00:39:52.250
But this page actually has a numbers
document attached to it.

00:39:52.250 --> 00:39:59.670
Now this demo machine probably doesn't
have numbers on it, and so I think that...

00:39:59.670 --> 00:40:04.889
or it may be a thing where it's a huge document,
a gigantic keynote presentation for example,

00:40:04.889 --> 00:40:07.710
and you don't want to have to download it to look at it.

00:40:07.710 --> 00:40:09.639
And that's where Quick Look comes in.

00:40:09.639 --> 00:40:13.599
And so if I click on this icon here,
I can see Quick Look right here

00:40:13.599 --> 00:40:16.009
in my browser window, and I can look at the document.

00:40:16.010 --> 00:40:21.810
[ Applause ]

00:40:21.809 --> 00:40:28.210
If I want to see it in more detail, I can
even click on it and zoom in and pan around.

00:40:28.210 --> 00:40:32.730
So yeah, we worked really hard on this and
I think it's a really impressive feature.

00:40:32.730 --> 00:40:36.010
I think you're really going to
like it, and that's Quick Look.

00:40:36.010 --> 00:40:41.540
[ Applause ]

00:40:41.539 --> 00:40:46.079
So lastly I want to talk a little bit about themes.

00:40:46.079 --> 00:40:51.329
Now in Leopard, developers could use themes
to customize the look and feel of their site,

00:40:51.329 --> 00:40:54.210
and they could add JavaScript to
add their own functionality.

00:40:54.210 --> 00:40:58.409
One of the things we did for Snow
Leopard was add developer hooks

00:40:58.409 --> 00:41:01.539
that you can use to watch for content changes on pages.

00:41:01.539 --> 00:41:08.739
This means that in your themes you can more
easily develop widgets that insert into your page,

00:41:08.739 --> 00:41:16.079
you can pull data from your own web services, or you can
even write data detectors like the one we're going to use

00:41:16.079 --> 00:41:23.549
as an example here, that will search
through content and automatically enrich it.

00:41:23.550 --> 00:41:28.380
So what I'm going to do to demonstrate
this, we've actually built a custom theme

00:41:28.380 --> 00:41:33.200
which adds course info popups to
content whenever it's pasted in.

00:41:33.199 --> 00:41:36.889
So I'm going to start with some text...

00:41:36.889 --> 00:41:40.250
nobody wants to sit here and watch me type.

00:41:40.250 --> 00:41:48.989
So I'll just copy out of Text Edit, and I'm going to do
a cross wiki search for the undergraduate courses page.

00:41:48.989 --> 00:41:54.099
And here you can see I'd already started the
page, and I can see it in the Quick Search.

00:41:54.099 --> 00:42:01.440
So this particular school has my custom theme already
selected, so I'm going to click on the "edit" button.

00:42:01.440 --> 00:42:05.960
Now if anybody who's not familiar with the wiki,
we have a really world class editing environment,

00:42:05.960 --> 00:42:10.139
it's all WYSIWYG and it's very non intimidating to users.

00:42:10.139 --> 00:42:14.619
I'm going to go ahead and paste in my text, so there it is.

00:42:14.619 --> 00:42:22.539
Now before I hit "save" I'm going to explain a
little bit about what this example theme does.

00:42:22.539 --> 00:42:29.279
It registers for notifications when the content
is changing, and when that happens it's going

00:42:29.280 --> 00:42:32.640
to look for match strings for course numbers.

00:42:32.639 --> 00:42:35.750
It's getting those out of a database in a web service.

00:42:35.750 --> 00:42:38.030
So if I click save...

00:42:38.030 --> 00:42:43.570
you can see it's automatically linked up, these
two course numbers it found in the content,

00:42:43.570 --> 00:42:47.309
and if I click on it you can see
information about the course.

00:42:47.309 --> 00:42:52.750
We made this in a couple of days' time for the
sake of the demo, and I'm really looking forward

00:42:52.750 --> 00:42:55.719
to seeing what you guys can do with these new theme hooks.

00:42:55.719 --> 00:42:58.009
And so...

00:42:58.010 --> 00:43:03.540
[ Applause ]

00:43:03.539 --> 00:43:07.130
So that in a nutshell is the wiki server.

00:43:07.130 --> 00:43:13.110
You've seen how you can create wikis in just a few
clicks, you could search across all the wikis at one time,

00:43:13.110 --> 00:43:17.710
you can Quick Look documents rather than having
to download them and open them in an application,

00:43:17.710 --> 00:43:23.610
and our theme tools are actually
much more powerful than ever before.

00:43:23.610 --> 00:43:26.320
So and with that, I'm going to bring Chris back up on stage.

00:43:26.320 --> 00:43:27.010
Thanks.

00:43:27.010 --> 00:43:34.900
[ Applause ]

00:43:34.900 --> 00:43:37.460
>> Thanks John.

00:43:37.460 --> 00:43:45.280
So there are web collaboration tools, we've got some great
new features that I think anybody who deploys this will find

00:43:45.280 --> 00:43:49.210
that their users are going to love, because it's
really easy to use, really powerful, and it's really,

00:43:49.210 --> 00:43:54.289
really advancing the state of user authored content.

00:43:54.289 --> 00:43:59.259
So one last thing before I move into
another service, is standards and APIs.

00:43:59.260 --> 00:44:04.800
So I just want to make the point that we have hundreds
of standards that are supported in Mac OS X server,

00:44:04.800 --> 00:44:12.200
everything from the mail server to even the wiki,
which supports XML, RPCs, and things like that.

00:44:12.199 --> 00:44:16.909
So I just want to encourage everybody that
when it comes time to write applications,

00:44:16.909 --> 00:44:19.250
to think about using standards whenever possible.

00:44:19.250 --> 00:44:22.239
A lot of them are old, a couple of them are new.

00:44:22.239 --> 00:44:26.029
CalDAV and CardDAV, I think that's a really
important space to be paying attention to.

00:44:26.030 --> 00:44:31.070
It's not all about scheduling meetings or about managing
personal contacts, but when you take contacts and events

00:44:31.070 --> 00:44:35.260
and put them together, there are a lot of unique things
you can do, and if you use standards it's going to work

00:44:35.260 --> 00:44:38.400
with our stuff, and that's an important thing for us.

00:44:38.400 --> 00:44:45.450
OK, so moving on to one last new service on the Mac
OS X server, which we've called Mobile Access Server.

00:44:45.449 --> 00:44:50.179
So Mobile Access Server, as its name implies, provides a way

00:44:50.179 --> 00:44:56.159
to let you give mobile access to
data or services on your intranet.

00:44:56.159 --> 00:45:01.059
So we all know that VPN does that,
but this is a little bit different.

00:45:01.059 --> 00:45:02.009
We are not...

00:45:02.010 --> 00:45:05.210
it's not intended to provide access
to your network necessarily;

00:45:05.210 --> 00:45:08.320
it's intended to provide access
to specific types of content.

00:45:08.320 --> 00:45:15.710
So in our case, your calendar server, your mail
server, your contact server, or a specific website.

00:45:15.710 --> 00:45:24.019
Now like VPN it's very secure, it's got strong encryption,
it's got support for throttling back failed authentications,

00:45:24.019 --> 00:45:30.300
it's got full access control and support, control
lists support, and it's very, very secure.

00:45:30.300 --> 00:45:35.640
But unlike VPN, it doesn't require any special software
on the client, and that's the unique thing about this.

00:45:35.639 --> 00:45:40.909
It really makes it easy to give access
to certain things on your intranet.

00:45:40.909 --> 00:45:43.739
And because it doesn't' require any special client software,

00:45:43.739 --> 00:45:46.769
it also means it works on any platform
whether that's a mobile device,

00:45:46.769 --> 00:45:49.940
Mac OS X server, or any other platform for that matter.

00:45:49.940 --> 00:45:56.119
So X Mobile Access Server, we think it's going to be great
for small businesses that don't really want to have to deal

00:45:56.119 --> 00:45:59.199
with VPN and getting clients configured
properly to work with VPN.

00:45:59.199 --> 00:46:05.750
So that's what I've got for communications
and collaboration, and I'm going to ask Kazu

00:46:05.750 --> 00:46:12.010
to come back onstage and he's got some very exciting things
to talk to you about related to the podcasting world.

00:46:12.010 --> 00:46:18.870
[ Applause ]

00:46:18.869 --> 00:46:20.799
>> OK, Podcast Producer.

00:46:20.800 --> 00:46:24.910
So how many of you know what Podcast Producer is?

00:46:24.909 --> 00:46:29.569
Good. How many of you are using it
or planning on deploying it soon?

00:46:29.570 --> 00:46:34.430
Good. And hopefully after this
presentation there will be more.

00:46:34.429 --> 00:46:40.089
So then those of you who are not familiar with Podcast
Producer, here's a quick one minute overview of what it is.

00:46:40.090 --> 00:46:42.829
It's a complete end-to-end solution that let's you easily

00:46:42.829 --> 00:46:47.369
and automatically create podcasts and
also deliver them to the end users.

00:46:47.369 --> 00:46:49.949
It's a collection of services that's tightly integrated.

00:46:49.949 --> 00:46:55.980
On the client side we have this application called
Podcast Capture, which lets end user capture audio

00:46:55.980 --> 00:47:01.579
and video information by enabling the user
to start and stop remote or local cameras,

00:47:01.579 --> 00:47:07.389
it could even record your local computer screen, or take
an existing file that was created by other applications.

00:47:07.389 --> 00:47:12.319
And what the Podcast Capture application does is
automatically send that information to the server,

00:47:12.320 --> 00:47:19.769
or the workflow engine, which in turn does a
processing like appending watermarks, transitions,

00:47:19.769 --> 00:47:26.539
adding introduction movie, encoding into different file
formats, maybe one for iPhone and Apple TV and so on.

00:47:26.539 --> 00:47:29.349
And this workflow engine could be just a single machine,

00:47:29.349 --> 00:47:34.940
we all know that the single machine can do a
lot of stuff, or it could be a set of servers.

00:47:34.940 --> 00:47:39.590
And Podcast Producer has a built in clustering
capability, so that it uses Xgrid

00:47:39.590 --> 00:47:43.289
to automatically distribute the computation
to all the available resources.

00:47:43.289 --> 00:47:47.909
And when that podcast is created, we also
have a facility to automatically publish

00:47:47.909 --> 00:47:50.819
and deliver that content to the end users.

00:47:50.820 --> 00:47:55.990
So it's a complete a end-to-end solution that
lets you capture, process, and deliver.

00:47:55.989 --> 00:48:00.209
And this is what it looks like
on the client side, very simple.

00:48:00.210 --> 00:48:05.090
So what's under the hood is very powerful and sophisticated,
but to the end user all it takes is just a few clicks,

00:48:05.090 --> 00:48:08.370
and you can produce a really nice looking podcast.

00:48:08.369 --> 00:48:14.159
And technology was adopted very
well, received very well by our customers.

00:48:14.159 --> 00:48:17.059
It's been used in a variety of ways in the market.

00:48:17.059 --> 00:48:24.219
For example there are dailies using it to produce or
automate the content processing for their publications.

00:48:24.219 --> 00:48:29.109
And there are also companies making employee
training videos using Podcast Producer.

00:48:29.110 --> 00:48:33.570
But it's been especially received well by
higher education, since it's a natural fit

00:48:33.570 --> 00:48:37.010
for capturing lectures and producing podcasts.

00:48:37.010 --> 00:48:42.870
So what I'm going to do now is invite a guest speaker who
can tell us their experience deploying Podcast Producer.

00:48:42.869 --> 00:48:48.009
Please welcome Dr. Elise Eisenberg from
New York University College of Dentistry.

00:48:48.010 --> 00:48:52.800
[ Applause ]

00:48:52.800 --> 00:48:53.350
>> Good afternoon.

00:48:53.349 --> 00:49:00.529
New York University College of Dentistry is the third
oldest and the largest dental school in the country.

00:49:00.530 --> 00:49:03.330
We graduate more than 8 percent of
all dentists in the United States,

00:49:03.329 --> 00:49:05.679
and we've a very global, significant outreach.

00:49:05.679 --> 00:49:11.539
The Office of Informatics provides multimedia and
technical support to all of our faculty and our students.

00:49:11.539 --> 00:49:13.900
We do web and programming development.

00:49:13.900 --> 00:49:22.180
We're responsible for all classroom and clinical AV
support, and we run the podcasting and iTunes initiatives.

00:49:22.179 --> 00:49:28.769
Beginning in 2008 we were looking at lecture recording
and we wanted to address a variety of different issues.

00:49:28.769 --> 00:49:35.880
We wanted to find a location to be able to archive all of
our recordings, we wanted to have faculty have access to all

00:49:35.880 --> 00:49:38.970
of the recordings, not just the ones for their class.

00:49:38.969 --> 00:49:44.709
We wanted the ability for students who were going
to outreach and to rotations outside of the school,

00:49:44.710 --> 00:49:49.440
to be able to hear all of the recordings,
not miss anything when they weren't there.

00:49:49.440 --> 00:49:53.280
We wanted to have a more interactive
learning experience for our students.

00:49:53.280 --> 00:49:59.100
We were looking for the best solution at the lowest
cost, and that unquestionably Podcast Producer.

00:49:59.099 --> 00:50:03.889
We deployed Podcast Producer in September of 2008.

00:50:03.889 --> 00:50:06.239
This is our network set up.

00:50:06.239 --> 00:50:13.009
We have 10 headless Mac Minis installed
in our lecture rooms and seminar rooms.

00:50:13.010 --> 00:50:15.740
They connect to a MacPro Server.

00:50:15.739 --> 00:50:21.339
We're a small IT department, we didn't have
access to a data room or a data center,

00:50:21.340 --> 00:50:26.870
and we were going to be doing this ourselves,
and MacPro Server was the best solution for us.

00:50:26.869 --> 00:50:33.139
The recordings are processed on the server, they're sent
out to iTunes U, and the students access the recordings

00:50:33.139 --> 00:50:37.079
by using a learning manifest system
many of you know as Sakai.

00:50:37.079 --> 00:50:41.130
At NYU it's called Alex.

00:50:41.130 --> 00:50:46.750
When we first deployed this in August
of 2008, we started to deploy it into...

00:50:46.750 --> 00:50:49.670
set it up, we discovered a couple of issues.

00:50:49.670 --> 00:50:54.000
One was we went to make sure the Mac Minis were secure.

00:50:54.000 --> 00:50:56.949
We had some initial camera binding
issues, and we also had to figure

00:50:56.949 --> 00:51:01.349
out exactly how we were going to
start and stop the recordings.

00:51:01.349 --> 00:51:06.789
We looked at putting a keyboard next to the Mac
Minis, we looked at iPod Touch and VNC connection

00:51:06.789 --> 00:51:10.619
into the Mac Minis, and we also explored Web interfaces.

00:51:10.619 --> 00:51:15.480
What we decided to do was create
a student podcasting service.

00:51:15.480 --> 00:51:18.510
The students are the ones that
most care about the recordings,

00:51:18.510 --> 00:51:21.620
it's in their best interests, they
are there in the classroom.

00:51:21.619 --> 00:51:24.929
It made the most sense to have
them start and stop the recordings,

00:51:24.929 --> 00:51:28.669
and we created a web interface to help them do it.

00:51:28.670 --> 00:51:34.789
This is the web interface, it sits on the Mac Pro Server.

00:51:34.789 --> 00:51:41.789
It's just a website on the Mac Pro Server, and it
contains all the classrooms where recordings can be done.

00:51:41.789 --> 00:51:44.940
Student in the podcast service clicks on one of the rooms,

00:51:44.940 --> 00:51:51.400
when they click on one of the rooms they get another
website, but this one is on the Mac Mini in that room.

00:51:51.400 --> 00:51:56.630
They select the course that they're
going to be recording for...

00:51:56.630 --> 00:52:01.300
they fill in the title of the lecture, any description
that they might want, and they start the recording.

00:52:01.300 --> 00:52:04.200
And when the lecture is done, they stop the recording.

00:52:04.199 --> 00:52:08.689
They also have the ability to cancel
the recording if there's a problem.

00:52:08.690 --> 00:52:10.059
This is the workflow.

00:52:10.059 --> 00:52:15.909
For faculty it's transparent, they connect
to the AV rack and begin the lecture.

00:52:15.909 --> 00:52:22.210
For the students they start the recording, when they
start the recording the Mac Mini is capturing the audio

00:52:22.210 --> 00:52:23.800
from the AV rack.

00:52:23.800 --> 00:52:29.470
We also have a device from a company called
Epiphan that's able to capture the video portion,

00:52:29.469 --> 00:52:33.179
or the material that's going through the LCD projector.

00:52:33.179 --> 00:52:38.539
It can be presentations, it can be
movies, but they can capture all of that.

00:52:38.539 --> 00:52:46.570
The Mac Mini captures both the audio as well as
the video, sends it over to the Mac Pro Server,

00:52:46.570 --> 00:52:51.430
and it's processed and sent out to iTunes U.

00:52:51.429 --> 00:52:58.279
So again, in September 2008 we fully
deployed Podcast Producer for audio,

00:52:58.280 --> 00:53:00.750
and in March 2009 we added the video component.

00:53:00.750 --> 00:53:05.170
One of the most important things to keep in mind
is that it didn't change the workflow in terms

00:53:05.170 --> 00:53:08.849
of the time it took to send something to iTunes U.

00:53:08.849 --> 00:53:15.670
The audio files are sent within 30 to 60 minutes after
recordings are complete, and the video takes about an hour

00:53:15.670 --> 00:53:21.460
to two, it can vary based on the time of the
lecture, but it's generally in that time frame.

00:53:21.460 --> 00:53:29.179
At this point we have 4,000 files uploaded, and
more than 160,000 files that have been downloaded.

00:53:29.179 --> 00:53:38.599
So lessons learned: our local Apple educational team
helped us with a two day Podcast Producer seminar

00:53:38.599 --> 00:53:42.000
that helped tremendously in understanding
how to use Podcast Producer.

00:53:42.000 --> 00:53:47.860
We did it ourselves and one of the nice things about Podcast
Producer is its extensibility, and its configurability.

00:53:47.860 --> 00:53:51.890
It allowed us to set up the system
just the way we needed it to be.

00:53:51.889 --> 00:53:55.159
We love Apple Remote Desktop.

00:53:55.159 --> 00:54:02.549
Many of you use it, it's a wonderful tool, it really
helps us in our environment, we just use it all the time.

00:54:02.550 --> 00:54:07.950
For us, having a great relationship
between IT and AV was really important.

00:54:07.949 --> 00:54:13.019
It helps in terms of being able to make sure
that anything going on in the classroom,

00:54:13.019 --> 00:54:16.559
any issues can be taken care of,
and that was really important to us.

00:54:16.559 --> 00:54:19.929
In discussions I've had with other
schools, it's important as well to them.

00:54:19.929 --> 00:54:25.159
The other piece was buy in from faculty and administration.

00:54:25.159 --> 00:54:29.029
Very important to make sure that there is
complete buy in, that training that we did

00:54:29.030 --> 00:54:33.280
with faculty, with students really helped as well.

00:54:33.280 --> 00:54:36.950
I'd like to show you a little snippet
of one of our recordings,

00:54:36.949 --> 00:54:40.960
and when you see it there's a couple
of things: 1 is the transition.

00:54:40.960 --> 00:54:47.179
The Podcast Producer takes care of the transition
from the introduction to the actual recording itself.

00:54:47.179 --> 00:54:51.639
In front of all of our recordings we have
a copyright notice which you'll hear.

00:54:51.639 --> 00:54:56.389
The other thing to look at is the
faculty who's doing the presentation,

00:54:56.389 --> 00:54:59.549
is actually using the mouse pointer
and is annotating the slide.

00:54:59.550 --> 00:55:00.910
It's very cool.

00:55:00.909 --> 00:55:03.309
[ Silence ]

00:55:03.309 --> 00:55:05.619
>> This area...

00:55:05.619 --> 00:55:10.679
this area, those are your taste buds.

00:55:10.679 --> 00:55:18.369
And again, look at the high concentration
of cells in the lamina propria.

00:55:18.369 --> 00:55:26.619
And if you look at the bottom, here's a duct, which
is attached somewhere along the line to that gland.

00:55:26.619 --> 00:55:27.949
>> Thank you.

00:55:29.099 --> 00:55:34.099
>> OK, now let's talk about what's
new in Snow Leopard Server.

00:55:34.099 --> 00:55:36.449
Podcast Producer 2 has a lot of new features,

00:55:36.449 --> 00:55:40.799
but since we only have limited time today,
we're going to talk about three of them.

00:55:40.800 --> 00:55:45.680
However this year we have four sessions dedicated to
Podcast Producer, so if you're interested you have plenty

00:55:45.679 --> 00:55:49.179
of opportunity to learn all about it throughout the week.

00:55:49.179 --> 00:55:52.599
Feature number 1 is the Dual Source Video.

00:55:52.599 --> 00:55:56.589
Podcast Producer 2 now can record
two video sources simultaneously,

00:55:56.590 --> 00:55:59.600
which is ideal for lectures and presentations like this one.

00:55:59.599 --> 00:56:04.009
But typically the one of the sources is
a camera that's recording the presenter,

00:56:04.010 --> 00:56:09.170
and another one is recording the computer
screen, the presentation software content.

00:56:09.170 --> 00:56:15.940
And what Podcast Producer 2 does is take those two
sources, and create picture in picture podcast for you.

00:56:15.940 --> 00:56:19.409
And here is a screenshot, looks pretty nice.

00:56:19.409 --> 00:56:20.909
We also...

00:56:20.909 --> 00:56:25.269
ship a few different Apple design
layouts with different options,

00:56:25.269 --> 00:56:29.039
so you can pick and choose the look and feel you like.

00:56:29.039 --> 00:56:34.429
Lastly it has this automatic transition feature
that you're going to see the demo in a few minutes.

00:56:34.429 --> 00:56:36.379
So that's feature number 1.

00:56:36.380 --> 00:56:44.920
Feature number 2 is Podcast Composer, which is our new
visual workflow editor that lets you create your own workflows.

00:56:44.920 --> 00:56:48.909
With this you have control over pretty
much every aspect of creating podcasts.

00:56:48.909 --> 00:56:54.399
And of course again, adds your own custom
artwork such as company logos for watermarking,

00:56:54.400 --> 00:56:57.769
or copyright notice for introduction on videos.

00:56:57.769 --> 00:57:02.110
And all you have to do is simply drag just
those two files into application's window,

00:57:02.110 --> 00:57:04.880
Podcast Composer takes care of the rest for you.

00:57:04.880 --> 00:57:09.760
And it also uploads the file directly to
the server, or have an option to do so,

00:57:09.760 --> 00:57:14.250
so the newly created workflow is
available immediately to the end users.

00:57:14.250 --> 00:57:18.030
And what I want to do now is to
invite Kjell Bronder to the stage.

00:57:18.030 --> 00:57:22.610
He's one of the engineers from Podcast Producer team,
so he can give us a demo of those two new features.

00:57:22.610 --> 00:57:27.510
>> So I'm really excited to show you one of
my favorite features of Podcast Producer 2.

00:57:27.510 --> 00:57:29.660
And what I'm going to show you is the dual source.

00:57:29.659 --> 00:57:33.500
I'm going to show you how easy we've made
it to create real good looking picture

00:57:33.500 --> 00:57:37.059
in picture podcasts, and how easy it is.

00:57:37.059 --> 00:57:41.559
So what I'm going to do here is I'm going to open
a keynote presentation that I've prepped here,

00:57:41.559 --> 00:57:44.929
and I'm just going to open Podcast Capture here.

00:57:44.929 --> 00:57:49.379
And what I'm going to do is I'm going to
select the dual source capture here..

00:57:49.380 --> 00:57:54.349
and we're going to start recording.

00:57:54.349 --> 00:57:58.799
So start the recording, and start Keynote.

00:57:58.800 --> 00:58:02.190
So welcome to this year's episode
of The Essence of the Monument.

00:58:02.190 --> 00:58:08.360
Today we're going to be talking about one of the most
famous cathedrals in the world, Notre Dame de Paris.

00:58:09.949 --> 00:58:15.669
It took over 200 years to build this cathedral.

00:58:15.670 --> 00:58:20.800
With its flying buttresses, Gargoyles, rose
windows, it's one of the finest examples

00:58:20.800 --> 00:58:22.750
of French Gothic architecture in the world.

00:58:22.750 --> 00:58:29.010
I hope you enjoyed this podcast,
and I'll see you all next time.

00:58:29.010 --> 00:58:35.130
[ Applause ]

00:58:35.130 --> 00:58:39.920
So I've paused the podcast using the, pausing
the recording, sorry, using a hot key.

00:58:39.920 --> 00:58:45.269
So now I'm just going to quit out of Keynote,
and all I have to do now is publish my recording.

00:58:45.269 --> 00:58:49.409
This is a little information I've entered here, I'm
just going to choose the podcast I want to go to.

00:58:49.409 --> 00:58:51.719
This is the Essence of the Monument...

00:58:51.719 --> 00:58:57.719
going to call this Notre Dame de Paris...

00:58:57.719 --> 00:59:02.739
give it a little description, then I copy here...

00:59:02.739 --> 00:59:06.409
and we're going to submit.

00:59:06.409 --> 00:59:11.710
So now Podcast Capture is uploading the content, both
video sources, to the Podcast Producer server that's right

00:59:11.710 --> 00:59:17.500
under here, and the Podcast Producer server is
now going to process the content and publish it.

00:59:17.500 --> 00:59:20.690
So you might be wondering, how does this
server know what to do with this content?

00:59:20.690 --> 00:59:24.309
Well that's where the Podcast Producer
workflow comes into play.

00:59:24.309 --> 00:59:27.049
Podcast Producer workflow is really the podcasting recipe.

00:59:27.050 --> 00:59:31.050
It tells the server what to do with
the content, and as Kazu mentioned,

00:59:31.050 --> 00:59:34.820
we have great new application in
Snow Leopard called Podcast Composer.

00:59:34.820 --> 00:59:37.650
So that's what I'm going to show you now.

00:59:37.650 --> 00:59:42.920
I have a copy here of the workflow that we just submitted
to, and I'm going to open this with Podcast Composer.

00:59:42.920 --> 00:59:48.250
And as you can see, we've broken the
workflow down into seven different stages.

00:59:48.250 --> 00:59:50.469
And I'm just going to walk you through them now.

00:59:50.469 --> 00:59:56.000
The first is just some general information about this
workflow, so you can see we specified the workflow name

00:59:56.000 --> 01:00:01.920
for example, and this is the workflow name that was
provided to me, that I chose in Podcast Capture.

01:00:01.920 --> 01:00:06.110
The second stage is the import stage, this is the funnel.

01:00:06.110 --> 01:00:11.450
This is where you tell Podcast Producer what
type of content this workflow is going to accept.

01:00:11.449 --> 01:00:15.939
We have single source, which is like in Leopard where
you could have a screen recording or a video recording;

01:00:15.940 --> 01:00:20.960
can do dual source, which is what we just
did to do a picture in picture podcast.

01:00:20.960 --> 01:00:26.789
And finally this other cool feature called montage,
which allows you to submit a full array of documents

01:00:26.789 --> 01:00:31.980
that will then render into a slideshow
leveraging Quick Look technology.

01:00:33.539 --> 01:00:36.550
Then once you've specified that,
we can move to the editing stage.

01:00:36.550 --> 01:00:38.910
This is where all the branding occurs.

01:00:38.909 --> 01:00:43.849
You can set your intro video, you can set your watermark,
you can choose the way you want to do your titling,

01:00:43.849 --> 01:00:49.739
you can set your transitions, and really there's a lot
of things you can do here and we're really going to go

01:00:49.739 --> 01:00:54.289
into detail, on this stage in particular, on our
Wednesday session in "Podcast Composer In Depth."

01:00:54.289 --> 01:00:58.639
So I'd encourage you to come to that one.

01:00:58.639 --> 01:01:03.089
Once you define the kind of editing you
want to do, you have to decide what kind

01:01:03.090 --> 01:01:05.600
of versions you want to encode your content to.

01:01:05.599 --> 01:01:09.509
So you can see in this workflow we're
exporting to a iPod and iPhone version,

01:01:09.510 --> 01:01:14.340
and Apple TV version, and an audio only version.

01:01:14.340 --> 01:01:20.289
But I might want to go to some other versions, and you can
see here that Podcast Composer has automatically detected

01:01:20.289 --> 01:01:22.969
that I've Compressor installed on this machine,

01:01:22.969 --> 01:01:29.119
and I can now leverage the compressor encoding
settings straight in my Podcast Producer workflow.

01:01:29.119 --> 01:01:31.579
[ Pop ]

01:01:31.579 --> 01:01:34.710
We'll get to the iChat.

01:01:34.710 --> 01:01:40.539
So once you've created all your different
versions, you can see that you need to publish it.

01:01:40.539 --> 01:01:45.429
So we also have this awesome new feature called
Podcast Library, which makes it really easy

01:01:45.429 --> 01:01:52.419
to publish all your content, and it's also a central
repository for all of your content and archives.

01:01:52.420 --> 01:01:56.840
You can also see that we have all the other publishing
destinations that I'm sure you all have come to know

01:01:56.840 --> 01:02:01.240
and love, like the Apple wiki, and we even
have this new feature that allows you to submit

01:02:01.239 --> 01:02:05.019
to another workflow, and thus chain workflows together.

01:02:07.099 --> 01:02:12.000
And, as you just heard with a nice little
sound, we have the notification step.

01:02:12.000 --> 01:02:15.809
And here this workflow sends out an
iChat to notify the submitting user

01:02:15.809 --> 01:02:20.599
when their content has been successfully processed.

01:02:20.599 --> 01:02:25.019
We can also send out emails, but we
can also notify particular services.

01:02:25.019 --> 01:02:30.610
For example, we can notify the iTunes store Podcast
Directory that there's new content in our feed,

01:02:30.610 --> 01:02:34.289
and that it needs to update its directory.

01:02:34.289 --> 01:02:37.230
Finally the last stage here is just a general summary,

01:02:37.230 --> 01:02:40.510
and gives you a quick overview what your
Podcast Producer workflow is going to do.

01:02:40.510 --> 01:02:45.810
So you can see here we're doing a dual source
import, we're encoding to three different formats,

01:02:45.809 --> 01:02:51.009
we're publishing the contents to library,
and we're sending out an iChat notification.

01:02:51.010 --> 01:02:56.190
Podcast Composer then let's me either save it locally,
so I can come back and work on my work for later,

01:02:56.190 --> 01:02:59.659
or deploy it straight to the server,
straight from the application.

01:02:59.659 --> 01:03:06.190
So let's hide Podcast Composer for the moment,
and go take a look at this iChat notification.

01:03:06.190 --> 01:03:11.159
So you can see here in my iChat
notification I have some links already...

01:03:11.159 --> 01:03:12.980
to the content.

01:03:12.980 --> 01:03:18.039
So I'm just going to follow this link here
to iTunes, and refresh my podcast here.

01:03:18.039 --> 01:03:22.000
You can see it's downloaded my content,
and I'm going to play this back.

01:03:22.000 --> 01:03:25.530
[ Music ]

01:03:25.530 --> 01:03:28.680
While this is playing back, I'm just going
to show you everything that we've been doing.

01:03:28.679 --> 01:03:30.230
So that's the intro video.

01:03:30.230 --> 01:03:35.380
We've got some dynamic titling that's rendered using
Quartz Composer, using the information that I entered.

01:03:35.380 --> 01:03:41.180
And here you can see we have the slides, and
automatically the talking head is going to appear.

01:03:41.179 --> 01:03:42.179
So what's happening here?

01:03:42.179 --> 01:03:47.649
Well we're doing image analysis, and we're detecting
when the slides been static for a certain amount of time,

01:03:47.650 --> 01:03:53.599
and once the client's had enough time to read the slides,
we can then push them back and bring in the talking head.

01:03:53.599 --> 01:03:56.750
What's going to happen in a few seconds, right here?

01:03:56.750 --> 01:04:00.059
And then once this slide changes
again, we can then bring them

01:04:00.059 --> 01:04:03.000
into the main screen so you can concentrate on the slides.

01:04:03.000 --> 01:04:12.340
[ Applause ]

01:04:12.340 --> 01:04:16.470
So that's Podcast Composer, and also how easy
it is to make really great looking picture

01:04:16.469 --> 01:04:19.179
in picture podcasts with Podcast Producer 2.

01:04:19.179 --> 01:04:21.000
Thank you.

01:04:21.000 --> 01:04:26.420
[ Applause ]

01:04:26.420 --> 01:04:27.280
>> Thanks, Kjell.

01:04:27.280 --> 01:04:29.320
He's our demo god.

01:04:31.130 --> 01:04:38.750
Alright, feature number 3 is Podcast Library that Kjell
just mentioned, and it's our repository and delivery engine.

01:04:38.750 --> 01:04:44.510
And using Podcast Library you can actually host
your own iTunes new content at your own site,

01:04:44.510 --> 01:04:50.220
and we work real closely with iTunes engineers so that
setting it up and managing iTunes U is really easy.

01:04:50.219 --> 01:04:52.039
So people like that.

01:04:52.039 --> 01:04:58.869
The Podcast Producer also archives everything in the
Library by default, so the raw media file that was captured

01:04:58.869 --> 01:05:03.589
by end user and sent to the server, as well as the
resulting podcast, all different flavors of it,

01:05:03.590 --> 01:05:07.760
all of it automatically gets archived
for long-term storage and organization.

01:05:07.760 --> 01:05:15.360
And of course it has a built in ATOM RSS feed engine
as well for the publishing and delivery of the content.

01:05:15.360 --> 01:05:23.090
So those are 3 features in Podcast Producer 2, but we have
a lot of other new features including web based capture GUI,

01:05:23.090 --> 01:05:27.530
fail over support, and montage that Kjell just mentioned.

01:05:27.530 --> 01:05:33.910
So if you're interested, we have a session dedicated to
talking about every single one of these in detail tomorrow,

01:05:33.909 --> 01:05:36.119
called "What's New for Podcast Producer 2?"

01:05:36.119 --> 01:05:39.259
So hopefully you're going to be able to attend that.

01:05:39.260 --> 01:05:43.260
Next, let's take a quick look at
architecture of Podcast Producer.

01:05:43.260 --> 01:05:49.820
As you can see here, it's very open and modular,
which means any developer can expand or customize

01:05:49.820 --> 01:05:54.930
or integrate Podcast Producer with their own
software or networking infrastructure,

01:05:54.929 --> 01:05:59.869
much like how New York University
did with their own web GUI.

01:05:59.869 --> 01:06:00.739
It's very flexible.

01:06:00.739 --> 01:06:07.599
And the last thing I want to talk about
is technologies on the Podcast Producer.

01:06:07.599 --> 01:06:12.789
As you saw in the last 10 to 15 minutes, it's a
very visually appealing and attractive product,

01:06:12.789 --> 01:06:17.050
and we achieved that by taking advantage
of rich media features that built

01:06:17.050 --> 01:06:20.720
into Snow Leopard, and I want to highlight a few of them.

01:06:20.719 --> 01:06:22.399
The first one is QuickTime.

01:06:22.400 --> 01:06:27.869
We use QuickTime 10's new capture API for
recording from camera, or capturing computer screen.

01:06:27.869 --> 01:06:34.609
And on the processing side, we also use
QuickTime for encoding into different formats.

01:06:34.610 --> 01:06:36.550
Next Quartz Composer.

01:06:36.550 --> 01:06:40.019
So with the fancy transitions that you
saw, or the flying text in the title,

01:06:40.019 --> 01:06:42.909
watermarking, was all done by Quartz Composer.

01:06:42.909 --> 01:06:48.159
And the third are the client side
applications - the Composer and Capture -

01:06:48.159 --> 01:06:55.239
use Core Animation to enhance this experience, so the sliding
window content that you saw was all done using Core Animation.

01:06:55.239 --> 01:07:00.759
And there are many other technologies that
we depend on, some of them are media related,

01:07:00.760 --> 01:07:05.360
such as Xgrid for scalability, and iChat
Messaging Framework for notification.

01:07:05.360 --> 01:07:12.740
And the key point here is that Snow Leopard is feature rich
OS release, and all this technology's available not just

01:07:12.739 --> 01:07:16.469
to Apple engineers like us, but
to any developers such as yourselves.

01:07:16.469 --> 01:07:22.019
So if you're interested, we have a session on Friday
to talk about how Podcast Producer takes advantage

01:07:22.019 --> 01:07:24.840
of all different features built into Mac OS X.

01:07:24.840 --> 01:07:26.780
Hope you're going to be able to make that.

01:07:26.780 --> 01:07:31.290
And that's all I have today, so now I'd like
to give the stage back to Greg for wrap up.

01:07:31.289 --> 01:07:31.779
Thank you.

01:07:31.780 --> 01:07:37.280
>> Alright, thank you Kazu.

01:07:37.280 --> 01:07:39.480
So that's Snow Leopard server.

01:07:39.480 --> 01:07:45.719
We have a fully 64-bit server with up to 2
times the performance of its predecessor.

01:07:45.719 --> 01:07:49.309
We have some great new features in the
communication suite in the Apple Wiki server,

01:07:49.309 --> 01:07:53.039
and as you saw, great new features in Podcast Producer.

01:07:53.039 --> 01:07:58.500
Snow Leopard server is going to be available,
along with the desktop in September.

01:07:58.500 --> 01:08:04.000
And it's available at a great new price
of $499 for an unlimited client license.

01:08:04.000 --> 01:08:10.530
[ Applause ]

01:08:10.530 --> 01:08:13.440
No client access fees.

01:08:13.440 --> 01:08:14.950
And so that's it.

01:08:14.949 --> 01:08:16.489
We have sessions throughout the week.

01:08:16.489 --> 01:08:21.239
As Kazu mentioned there's a great session going in
depth on what's new in Podcast Producer tomorrow.

01:08:21.239 --> 01:08:27.420
We also have 2 full sessions on calendaring and
contacts for Mac, iPhone, and Mac OS X server;

01:08:27.420 --> 01:08:30.190
and labs in the information technologies
lab throughout the week.

01:08:30.189 --> 01:08:31.169
So I hope to see you there!

01:08:31.170 --> 01:08:31.869
Thank you very much.