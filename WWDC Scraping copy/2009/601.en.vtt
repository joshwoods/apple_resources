WEBVTT

00:00:12.890 --> 00:00:14.089
>> Hello, everyone.

00:00:14.089 --> 00:00:15.419
My name is John Wright.

00:00:15.419 --> 00:00:18.199
I'm from Core OS Software Engineering.

00:00:18.199 --> 00:00:25.660
My team is responsible for a lot of the base functionality
on the iPhone OS, including networking and data security.

00:00:25.660 --> 00:00:29.390
As such, we've been kind of integral
in a lot of the features

00:00:29.390 --> 00:00:33.689
that are targeted toward the enterprise on the iPhone.

00:00:33.689 --> 00:00:36.609
Today, I wanna go over some of those
features and then talk to you a little bit

00:00:36.609 --> 00:00:40.509
about how you can use the iPhone
in your enterprise environment.

00:00:43.929 --> 00:00:47.950
So the iPhone is gaining a lot of traction in enterprise.

00:00:47.950 --> 00:00:58.469
From hospitals to media companies, to law firms, people
are using the iPhone as a new mobile business platform.

00:00:58.469 --> 00:01:07.590
In fact, in November of this past year, J.D. Power
and Associates in their survey of top smartphone,

00:01:07.590 --> 00:01:12.850
business smartphone devices got the top honor.

00:01:13.989 --> 00:01:17.569
So, I'm going to break this session
up into three different sections.

00:01:17.569 --> 00:01:21.659
First, I'm going to talk about integrating
into your existing corporate infrastructure.

00:01:21.659 --> 00:01:25.950
We're going to talk a little bit about deploying the iPhone
to your users and then we're going to talk a little bit

00:01:25.950 --> 00:01:29.609
about developing unique applications for the iPhone.

00:01:29.609 --> 00:01:33.319
So let's start with integration.

00:01:33.319 --> 00:01:42.250
Now, the iPhone integrates in very well with the
corporate services that you have in your enterprise.

00:01:42.250 --> 00:01:46.969
This includes email, calendar, and
contacts and networking services such as VPN

00:01:46.969 --> 00:01:54.359
and secure Wi-Fi, and of course Microsoft Exchange.

00:01:54.359 --> 00:01:58.030
We continue to update our support for Microsoft Exchange.

00:01:58.030 --> 00:02:01.260
We support Exchange Server 2003 and 2007.

00:02:01.260 --> 00:02:10.219
And since iPhone OS 2.0, we've been supporting push
email, calendar and contacts and access to the GAL.

00:02:10.219 --> 00:02:16.870
Of course, Exchange isn't just about those services,
they're also about administration on the device.

00:02:16.870 --> 00:02:25.110
And so, we also support passcode policies and auto-discovery
of the servers on your infrastructure by just putting

00:02:25.110 --> 00:02:29.600
in the user's user name and account information.

00:02:29.599 --> 00:02:34.659
And Exchange also has a feature for remote wipe.

00:02:34.659 --> 00:02:42.560
And this is great because your users can come to you if
their iPhone is lost or stolen and using one of the number

00:02:42.560 --> 00:02:49.140
of interfaces into Exchange, you can have that
data securely wiped off that device remotely.

00:02:50.689 --> 00:02:56.430
Now, what's new for Exchange and iPhone OS 3.0?

00:02:56.430 --> 00:03:01.569
First, we're supporting certificates
as a means of authentication.

00:03:01.569 --> 00:03:08.060
Now we'll talk about certificates later in the
program, but one of the key benefits of certificates is

00:03:08.060 --> 00:03:10.280
that they can be tied to the device and not the user,

00:03:10.280 --> 00:03:16.099
and that gives the IT department a little
bit more control over these devices.

00:03:16.099 --> 00:03:23.840
We've also enhanced our policy support, including
passcode policies and IT administration policies.

00:03:23.840 --> 00:03:29.979
And we're supporting additional Exchange features
such as searching for messages on the server,

00:03:29.979 --> 00:03:37.379
creating and responding to calendar invites,
and push email directly to subfolders.

00:03:37.379 --> 00:03:44.280
Now, this is a typical Microsoft Exchange deployment.

00:03:44.280 --> 00:03:48.500
You have your Microsoft Exchange
frontend that's hooked up to one

00:03:48.500 --> 00:03:51.699
or several backends depending on how big your deployment is.

00:03:51.699 --> 00:03:56.619
And you have your directory services,
usually Microsoft Active Directory.

00:03:56.620 --> 00:04:08.210
Now, what most customers do is they deploy a Microsoft ISA
Server into their DMZ or some other kind of proxy server

00:04:08.210 --> 00:04:13.110
and put a hole through their firewall,
that's a secure SSL tunnel

00:04:13.110 --> 00:04:18.060
so that users can access all these
services from outside the firewall.

00:04:18.060 --> 00:04:22.089
And this works just like any other Exchange deployment.

00:04:22.089 --> 00:04:27.959
So if you've already done this for your users,
the iPhone will just work on this infrastructure.

00:04:27.959 --> 00:04:37.549
And new for iPhone 3.0 is you can also integrate
in your certificate server for authentication.

00:04:39.779 --> 00:04:47.869
Now, not everyone uses Microsoft Exchange and so we try
to integrate in with all the different open standards.

00:04:47.870 --> 00:04:51.060
So for mail we use IMAP and POP.

00:04:51.060 --> 00:04:56.240
And new for 3.0, we have CalDAV
as a calendaring server protocol.

00:04:56.240 --> 00:04:58.730
And now you can deploy any of the number

00:04:58.730 --> 00:05:03.020
of CalDAV calendaring servers including
iCal server and Oracle Beehive.

00:05:03.019 --> 00:05:08.549
Also for 3.0, we support LDAP.

00:05:08.550 --> 00:05:19.240
Now this supports lookups of address
information directly in mail, contacts, and SMS.

00:05:19.240 --> 00:05:23.250
Now, we also integrate into your
corporate network infrastructure.

00:05:23.250 --> 00:05:35.129
The iPhone supports Cisco IPSec, L2TP and PTPP for VPN
access, and this access is built right into the iPhone.

00:05:35.129 --> 00:05:37.949
There's no need for extra software.

00:05:37.949 --> 00:05:45.899
And for authentication, we can use digital certificates,
we can use hardware tokens, since there's a CRYPTOCard

00:05:45.899 --> 00:05:50.599
or secure ID, and of course we can use login and password.

00:05:50.600 --> 00:05:57.210
And new for 3.0, we have a new feature called VPN
on demand which makes VPN seamless to your users.

00:05:57.209 --> 00:06:05.259
And also a highly requested feature is proxy support for
VPN, and that can be configured right in your settings.

00:06:07.209 --> 00:06:12.349
So VPN on demand, VPN on demand
is all about the user experience.

00:06:12.350 --> 00:06:19.820
We try to create a user experience where the user
doesn't even have to know anything about VPN.

00:06:19.819 --> 00:06:23.529
Now, we did this by using certificate based authentication.

00:06:23.529 --> 00:06:30.099
And the reason this is beneficial is because if
there's a certificate provisioned on the device,

00:06:30.100 --> 00:06:38.800
that device can run all the VPN things it needs in the
background to access services like mail and calendar.

00:06:38.800 --> 00:06:45.639
Now it's based on the address domains
of your corporate network.

00:06:45.639 --> 00:06:51.169
So the network stack actually detects
whether you're going to the corporate network

00:06:51.170 --> 00:06:53.689
and automatically starts up the VPN tunnel.

00:06:53.689 --> 00:07:00.759
And the big benefits of this is that it not
only works just for mail and calendaring,

00:07:00.759 --> 00:07:06.740
but it works for any network-based application
including those from the iTunes store.

00:07:06.740 --> 00:07:18.139
Now, the iPhone is all about wireless access and in most
enterprises that means some kind of secure Wi-Fi access,

00:07:18.139 --> 00:07:24.509
and we support all the common protocols
including WPA2 Enterprise.

00:07:24.509 --> 00:07:33.159
We also support 8O211, 802.1x authentication
including all the EAP, LEAP and PEAP standards.

00:07:33.160 --> 00:07:38.240
And new for 3.0, we have support for captive networks.

00:07:38.240 --> 00:07:43.759
And what this does is it detects whether you're on
a network that can't actually access the internet,

00:07:43.759 --> 00:07:49.719
and it brings up a web sheet so that your users
can see the information about that hotspot.

00:07:49.720 --> 00:07:55.720
And this works in hotels, in coffee
shops all around the world.

00:07:55.720 --> 00:08:00.070
So, when your users travel, they
can get on the network more easily.

00:08:00.069 --> 00:08:08.969
So, to talk a little bit about integrating
into large deployments of iPhone,

00:08:08.970 --> 00:08:12.930
I'd like to invite Duncan Keefe of Apple's IS&T Department.

00:08:12.930 --> 00:08:21.269
>> I've been at Apple 8 years and it has been an
interesting ride when you consider that 8 years ago was just

00:08:21.269 --> 00:08:29.279
after we started seeing Mac OS X on the front
lines at Apple, and we had a little bit of--

00:08:29.279 --> 00:08:36.120
a lot of people just prior to when I started had just
switched over from many, many years of classic Mac OS

00:08:36.120 --> 00:08:41.029
and we're sitting here, we had-- apparently we
had a little resistance to some of this, you know.

00:08:41.029 --> 00:08:46.589
Some of these people were, "You're going to
take my Mac OS 7 out of my cold dead hands."

00:08:46.590 --> 00:08:52.399
But Mac OS X has had two profound
effects on Apple internally.

00:08:52.399 --> 00:09:00.949
One is that it has actually made our support operations
a lot easier, and so we have transitioned a lot

00:09:00.950 --> 00:09:08.310
of our support operations from a much more kind of
hands-on approach to a much more self-service approach.

00:09:08.309 --> 00:09:15.269
So our end-users are sitting here getting a lot of, getting
a lot of information off of our intranet and not so much

00:09:15.269 --> 00:09:17.559
out of calling the helpdesk all the time.

00:09:17.559 --> 00:09:19.889
And so I could give you a lot of examples, but probably one

00:09:19.889 --> 00:09:25.259
of the best examples was actually
when we had to hand out iPhones.

00:09:25.259 --> 00:09:29.990
So, let me take you back to when we actually
originally announced the original iPhone.

00:09:29.990 --> 00:09:36.919
So, Steve Jobs announces the original iPhone and this is
obviously very, had a little bit of effect in the press.

00:09:36.919 --> 00:09:44.069
And then a few days later, he calls a company meeting
and says this is why we're getting into the business,

00:09:44.070 --> 00:09:52.470
this is what it means to us and, oh, by the way everybody is
getting a free top of the line iPhone, pandemonium ensues.

00:09:52.470 --> 00:09:58.110
About 30 seconds later, my own personal
pandemonium subsided because I thought of myself,

00:09:58.110 --> 00:10:01.590
"Who's going to hand out all those phones?

00:10:01.590 --> 00:10:02.550
Oh right, me."

00:10:02.549 --> 00:10:06.469
So bear in mind also, no one had seen one of these before.

00:10:06.470 --> 00:10:10.840
Most of these-- most people had
not seen one even within Apple.

00:10:10.840 --> 00:10:14.970
Yes, we do keep this stuff confidential
even inside the company.

00:10:14.970 --> 00:10:20.639
>> And so it was a new interface paradigm to everybody.

00:10:20.639 --> 00:10:25.199
So, the other thing I remember is that
not everybody at Apple is an engineer.

00:10:25.200 --> 00:10:31.830
We have people in HR and Legal and Marketing and what have
you, that may not be as quite as technical as all that.

00:10:31.830 --> 00:10:36.520
So we had to teach everybody the new interface paradigms
because they didn't know how to get on to mail,

00:10:36.519 --> 00:10:43.799
they didn't know how to get on VPN and also all of
these beautiful self-service provisioning profiles

00:10:43.799 --> 00:10:49.219
and all this other stuff that's come out since didn't exist
at the time, so it was, we're going to have to tell you how

00:10:49.220 --> 00:10:54.360
to do this and you're going to have to do it yourself
because I'm not going to do this for 14,000 phones.

00:10:54.360 --> 00:10:59.019
Just personally speaking I don't have the staff.

00:10:59.019 --> 00:11:04.129
So we got an email from Steve a couple of days
later and he says I don't care how you do it,

00:11:04.129 --> 00:11:11.220
but I don't want to see any lines and
it all needs to happen in one day.

00:11:11.220 --> 00:11:11.279
[ Laughter ]

00:11:11.279 --> 00:11:15.339
>> Yeah, 14,000 phones in one day, got it.

00:11:15.340 --> 00:11:24.129
So, we kicked it around and got all the legal and financial,
you know, 'cause it's a gift, you have to do tax offsets

00:11:24.129 --> 00:11:26.450
and all that fun stuff, all that stuff worked out.

00:11:26.450 --> 00:11:32.890
And so what we decided to do was first we did a thing
where we got these little USB devices that plug in

00:11:32.889 --> 00:11:35.730
and will read your badge and compare it to a database.

00:11:35.730 --> 00:11:40.659
So we, actually use those at all of our
sites for printing out guest badges.

00:11:40.659 --> 00:11:44.360
That way, somebody can't just walk over and print out
a guest badge, you have to have an employee come in

00:11:44.360 --> 00:11:47.259
and swipe their badge to activate the printer.

00:11:47.259 --> 00:11:52.049
So we borrowed those from Security and that solved the
problem of getting people through the lines quickly,

00:11:52.049 --> 00:11:57.179
but the other thing was we told the people who were handing
out the phones, you are not going to answer any questions.

00:11:57.179 --> 00:12:02.259
You're simply going to hand them the phone
and hand them a piece of paper and the piece

00:12:02.259 --> 00:12:05.210
of paper had the obligatory legal boilerplate.

00:12:05.210 --> 00:12:11.200
Legal has to prove that they have, they
had some effect on every process, I think.

00:12:11.200 --> 00:12:16.290
And I say this with love because
I've got lawyers in the family.

00:12:16.289 --> 00:12:22.689
And a big fat URL that said IS&T web which
is our IT department's intranet/iPhone.

00:12:22.690 --> 00:12:27.350
And that was it, they were told no questions,
just hand them the phone and hand the piece

00:12:27.350 --> 00:12:29.560
of paper that says all your answers are there.

00:12:29.559 --> 00:12:34.879
So the helpdesk of course was sitting here going, "Oh my
god 14,000 phones in one day, what are we going to do,

00:12:34.879 --> 00:12:39.519
we're going to die, we're going to be-- " So we worked--
they cancelled vacations, they got in contractors,

00:12:39.519 --> 00:12:41.600
they just, you know, everyone was on deck.

00:12:41.600 --> 00:12:43.480
They thought they were going to get crushed.

00:12:43.480 --> 00:12:51.159
Well, what happened was, you know, it starts out a little
quietly and everything's fine and then people start showing

00:12:51.159 --> 00:12:55.759
up and, you know, they're happy, they get their phones.

00:12:55.759 --> 00:12:58.950
And this is across the company and everybody got one.

00:12:58.950 --> 00:13:02.570
And as you can see here, one of the
guys in the lower middle of the shot,

00:13:02.570 --> 00:13:05.620
here is one of the guys from the cafeteria staff.

00:13:05.620 --> 00:13:12.460
So, most cafeteria staff are not noted for their
technical depth, so obviously they had to do, you know,

00:13:12.460 --> 00:13:15.700
use the same services that everybody
else did on our intranet.

00:13:15.700 --> 00:13:21.129
So, the helpdesk it turned out they had a spike
alright, but they didn't get crushed at all

00:13:21.129 --> 00:13:24.659
because people were getting the
answers they needed off the intranet.

00:13:24.659 --> 00:13:28.389
Another thing, if you're an IT person, you're
probably accustomed to not getting too much

00:13:28.389 --> 00:13:30.289
in the way of gratitude from your end-users.

00:13:30.289 --> 00:13:38.860
You know their attitude is, yeah, I got on the
network today and the sun came up too, so what.

00:13:38.860 --> 00:13:44.870
We got a ton of email from people saying, "I expected
this to be a pain, I didn't know what I was doing,

00:13:44.870 --> 00:13:47.750
you guys walked me through it, this is fantastic."

00:13:47.750 --> 00:13:51.950
You know, and that's the thing, you know, this
is not special to Apple or anything like that.

00:13:51.950 --> 00:13:55.960
People actually took the time to tell
us something nice, which is great.

00:13:55.960 --> 00:14:02.879
So, this is obviously a testament to the ease of use
of the iPhone, I mean you know shallow learning curve,

00:14:02.879 --> 00:14:10.120
but it also you know you can do that sort of
self-service approach and it can be very successful

00:14:10.120 --> 00:14:16.399
and obviously we've done that for quite some
time because we did it from day one until now.

00:14:16.399 --> 00:14:20.269
So, this is a screenshot of the site at the time.

00:14:20.269 --> 00:14:23.809
We had to walk people also through things
like changing their accounts and so on,

00:14:23.809 --> 00:14:27.879
and what you can't see is what's below the
fold which is things about mail and so on.

00:14:27.879 --> 00:14:30.899
But, this is how we do support.

00:14:30.899 --> 00:14:32.049
This is the primary vehicle.

00:14:32.049 --> 00:14:36.909
We tell people from the day they start
as part of our onboarding process,

00:14:36.909 --> 00:14:41.139
go here because your questions are all answered here,
it will save you some time from going to the helpdesk.

00:14:41.139 --> 00:14:43.129
And of course technical people, they
don't want to call the helpdesk.

00:14:43.129 --> 00:14:46.950
They are, in some cases they know more than the helpdesk
guy, so what they want to do is they just want to say,

00:14:46.950 --> 00:14:51.990
"What do I plug into these fields to make
it work and I'll figure it out from there?"

00:14:51.990 --> 00:14:57.210
So, that gives you a shot of how we deploy stuff.

00:14:57.210 --> 00:15:00.740
So, what I'm going to talk about now
is how we integrated some of this stuff

00:15:00.740 --> 00:15:04.039
into our corporate services and
how we're continuing to do that.

00:15:04.039 --> 00:15:08.719
So the primary ones are mail, calendaring and VPN,

00:15:08.720 --> 00:15:15.620
may come to you as no surprise that
we don't run Exchange within Apple.

00:15:15.620 --> 00:15:20.500
It's not a slam on Microsoft, it's just that you know
long ago we decided open standards is the way to go.

00:15:20.500 --> 00:15:27.409
And Apple, Apple was one of the first-- if you
look up the history of domain name registrations,

00:15:27.409 --> 00:15:34.049
actually Apple is something like number 34 domain
name ever registered or something like that.

00:15:34.049 --> 00:15:36.199
So, you sort of get the sense.

00:15:36.200 --> 00:15:41.790
We've been on the internet and as an IT organization we've
been kind of embracing open standards for a long time.

00:15:41.789 --> 00:15:49.169
So, we just recently actually completed a switch over
to iCal for all of our calendar users in the company,

00:15:49.169 --> 00:15:52.319
and so we wanted to actually bridge that.

00:15:52.320 --> 00:15:53.450
I heard somebody applaud.

00:15:53.450 --> 00:15:55.240
[ Applause ]

00:15:55.240 --> 00:15:58.590
>> Whoever you are, I love you.

00:15:58.590 --> 00:16:00.580
And there's nothing like getting a lot of--

00:16:00.580 --> 00:16:04.889
because we actually just moved all the
data from our old calendaring system.

00:16:04.889 --> 00:16:06.679
So, just give you an idea.

00:16:06.679 --> 00:16:11.709
I'm gonna talk generically because
this is, I wanted to relate this

00:16:11.710 --> 00:16:14.139
to things that you can do in your own environment.

00:16:14.139 --> 00:16:16.460
So, it was very simple.

00:16:16.460 --> 00:16:21.430
We've had the mail, you know, since day one as I said
when we started handing out the original iPhones.

00:16:21.429 --> 00:16:28.529
So you have a proxy server, and this could be a proxy server
from any one of a variety of solutions you could have.

00:16:28.529 --> 00:16:30.399
You know Citrix has one, Barracuda has one.

00:16:30.399 --> 00:16:34.579
There are some more well-known names and there
are less well-known names like Imperva and so on.

00:16:34.580 --> 00:16:36.360
So you want a web application firewall.

00:16:36.360 --> 00:16:39.909
In most cases, that's another way of going about it.

00:16:39.909 --> 00:16:46.059
And you just punch, you know, the standard holes
that you would expect into your firewall, use SSL.

00:16:46.059 --> 00:16:50.359
This is obviously a well known and well regarded method.

00:16:50.360 --> 00:16:55.320
And it will talk to your IMAP server and so on.

00:16:55.320 --> 00:17:01.650
For VPN, and as I said we've been doing this for a
long time, so obviously we're pretty happy about it

00:17:01.649 --> 00:17:04.950
and obviously security is kind of a big deal here.

00:17:04.950 --> 00:17:09.500
We've got a lot of people who are sort of rattling the
virtual doorknobs, if you will, of our network perimeter

00:17:09.500 --> 00:17:14.250
and so we've always got to keep that bolted down.

00:17:14.250 --> 00:17:19.349
Mr. Jobs would be quite upset with us if anybody got in.

00:17:19.349 --> 00:17:26.349
So VPN, obviously again, pretty much
the same things you would expect.

00:17:26.349 --> 00:17:34.219
You have a VPN server that handles, you know, the initial
connection, then it checks with the authentication server

00:17:34.220 --> 00:17:38.039
and goes on and, you know, it grants access.

00:17:38.039 --> 00:17:47.409
What is new obviously is the certificate based VPN, so you
add in a certificate server and that completes that picture.

00:17:47.410 --> 00:17:58.730
And you can-- well, you can use the hardware token, the two
factor token, but we are to our end-user's infinite delight,

00:17:58.730 --> 00:18:03.970
phasing all of that out, we've recently phased
it out on our Macs and now we are getting,

00:18:03.970 --> 00:18:08.819
we are going to be able to get rid of it for the phone.

00:18:08.819 --> 00:18:12.450
So, everybody just gets that and
obviously VPN on demand will.

00:18:12.450 --> 00:18:15.590
Something we're very interested in.

00:18:15.589 --> 00:18:21.859
So integration gets you started because that gets
you access to the sort of fundamental core services

00:18:21.859 --> 00:18:24.509
that everybody wants, mail, calendaring and so on.

00:18:24.509 --> 00:18:30.980
But then we've gone on from there and added various,
started with simple web apps like Directory.

00:18:30.980 --> 00:18:38.029
Directory was an interesting story because we had to--
we were developing-- deploying this because we thought,

00:18:38.029 --> 00:18:45.319
you know, people would want it before you know, technically
before you know this was something that was ready to go.

00:18:45.319 --> 00:18:51.649
And somebody showed it to Steve Jobs and he said,
"Oh hey, I'd like to, I'd like to demo this."

00:18:51.650 --> 00:18:54.080
This was awhile back.

00:18:54.079 --> 00:19:03.439
And we had 6 weeks left to do this and the demo that
he was going to use was two and a half weeks out.

00:19:03.440 --> 00:19:09.080
So, we went into frantic development
mode and created all the, you know,

00:19:09.079 --> 00:19:11.039
created a whole bunch of fake entries and so forth.

00:19:11.039 --> 00:19:13.480
And so I'm sitting here 'cause I'm not a developer.

00:19:13.480 --> 00:19:22.039
I, you know, let the developers do their thing, so I said,
"Well I'll make up all the names and go grab some faces

00:19:22.039 --> 00:19:25.759
from the graphics people and so on, for the directory."

00:19:25.759 --> 00:19:27.730
I'm not good at making up names it turns out.

00:19:27.730 --> 00:19:34.210
So I'm sitting here finally I'm making up names and I'm
finally like, okay, people used to work with, oh yeah.

00:19:34.210 --> 00:19:37.850
So, right after Steve demos it, I got 3 emails
and 2 phone calls from people I used to work with.

00:19:37.849 --> 00:19:40.559
"Was that my name on the screen behind Steve?"

00:19:40.559 --> 00:19:41.389
[Laughter] "Yeah."

00:19:41.390 --> 00:19:44.710
"You owe me a beer."

00:19:44.710 --> 00:19:49.360
[Laughter] So, I started with Directory and
Directory lets you do all the obvious stuff.

00:19:49.359 --> 00:19:53.209
And bear in mind, none of the tools
that you have now existed then.

00:19:53.210 --> 00:19:58.250
We were measuring pixels to make it look like a
native app, because we didn't have anything else.

00:19:58.250 --> 00:20:02.390
I mean seriously, I'm watching people,
you know, in Photoshop counting pixels.

00:20:02.390 --> 00:20:04.800
But you tap on the phone number, it dials the number.

00:20:04.799 --> 00:20:07.930
You tap on the email, it creates a new email message.

00:20:07.930 --> 00:20:11.529
And you tap on the location for the building and it call--

00:20:11.529 --> 00:20:15.700
it switches views and calls up a map
and so on and so forth, the usual stuff.

00:20:15.700 --> 00:20:19.450
>> Then we get into things like
business approvals for purchase requests,

00:20:19.450 --> 00:20:22.569
vacation requests, you know, things like that.

00:20:22.569 --> 00:20:31.359
And then we get into sort of more business intelligence for
executives, various, you know, dashboards, things like that.

00:20:31.359 --> 00:20:37.299
And now we're getting into native apps
actually for the first time in places--

00:20:37.299 --> 00:20:44.930
For example the first one we did was for retail,
for handling a lot of the customer appointments.

00:20:44.930 --> 00:20:54.539
So, we deploy this all over the company, in all variety of
ways and up to this point, it's actually all been web stuff.

00:20:54.539 --> 00:21:00.909
And so, you can see this is obviously very
transformative because we're able to deploy a lot

00:21:00.910 --> 00:21:05.259
of information that's previously
required people to log in with the laptop

00:21:05.259 --> 00:21:07.809
and haul a laptop around if they wanted to get at it.

00:21:07.809 --> 00:21:11.929
Needless to say, executives love this
because they have it at their fingertips.

00:21:11.930 --> 00:21:16.390
But, it isn't-shouldn't just be
executives will benefit from it.

00:21:16.390 --> 00:21:18.410
So, some best practices.

00:21:18.410 --> 00:21:23.610
Employee self-service is not only something you can
get away with, it's something you should embrace

00:21:23.609 --> 00:21:26.519
because it will make, it will improve your leverage.

00:21:26.519 --> 00:21:32.579
And by setting some basic rules and investing
in the content, this isn't just, you know,

00:21:32.579 --> 00:21:35.139
point somebody to a web page on apple.com.

00:21:35.140 --> 00:21:42.520
This is, think about how much information is specific to
how you do business and make sure you communicate that,

00:21:42.519 --> 00:21:47.970
drive it home with a few emails or some kind,
whatever communication you have with your users

00:21:47.970 --> 00:21:53.150
that they can get the answers there and make sure that
you don't deliver the message that, "Oh, I'm giving--

00:21:53.150 --> 00:21:58.210
I'm pushing this off on to you," it's
more, "Here's how you can help yourself."

00:21:58.210 --> 00:22:00.779
So the quality of the documentation is key.

00:22:00.779 --> 00:22:02.000
Editorial voice is key.

00:22:02.000 --> 00:22:09.220
Do not write your sort of-- one of the things I've always
struggled with is a lot of IT people want to think that,

00:22:09.220 --> 00:22:16.880
you know, they want to communicate, you know their interest
in the technology and most users, they don't get it.

00:22:16.880 --> 00:22:21.910
You know some of them, you know as far as they're
concerned, when they hit send on that email,

00:22:21.910 --> 00:22:26.790
there's a carrier pigeon running around with
a printout of the email clamped in its beak.

00:22:26.789 --> 00:22:33.099
So, you know, they don't-- they don't know, they don't want
to know so just focus on what's going to get them productive

00:22:33.099 --> 00:22:36.049
and what do they need to know in
terms of their business needs.

00:22:36.049 --> 00:22:42.589
So, you don't need elaborate network services in
most case, so authenticated SSL will take care of it.

00:22:42.589 --> 00:22:47.849
Certificate VPN, again, will take care of it and, you
know, that way you can avoid the need for hardware token

00:22:47.849 --> 00:22:53.619
if your security needs don't require
it for some regulatory or other need.

00:22:53.619 --> 00:22:59.149
And then as I said, don't stop with just
integrating with your core services.

00:22:59.150 --> 00:23:02.580
Look at all the other services
you can provide and you'll find

00:23:02.579 --> 00:23:08.199
that the development tools will really
help you turn these things around quickly.

00:23:08.200 --> 00:23:13.000
So that's it for me, and so I will hand it back to John.

00:23:13.000 --> 00:23:18.289
[ Applause ]

00:23:18.289 --> 00:23:19.099
>> Thanks, Duncan.

00:23:19.099 --> 00:23:28.669
So as you can see, the iPhone implements all the
standards that allow you to integrate directly

00:23:28.670 --> 00:23:31.630
into your enterprise infrastructure as it exists today.

00:23:31.630 --> 00:23:36.940
No need for special services or
servers external to your network.

00:23:36.940 --> 00:23:45.990
So let's-- Oh, so here are some sessions around
deploying contact management and calendaring solutions,

00:23:45.990 --> 00:23:53.160
and there's also a deep dive on
802.1x that I invite you to check out.

00:23:53.160 --> 00:23:54.759
So let's turn to deployment.

00:23:54.759 --> 00:24:02.920
Now, there are few things you have to consider when
you think about deployment of iPhone's new enterprise.

00:24:02.920 --> 00:24:09.420
First, how are these phones going to
be activated for cellular service?

00:24:09.420 --> 00:24:15.779
Which corporate services are they going to need access?

00:24:15.779 --> 00:24:19.730
And what kind of device policies and
restrictions do you want to place

00:24:19.730 --> 00:24:25.230
on those iPhones before they access your corporate network?

00:24:25.230 --> 00:24:29.269
And lastly, how do you want to
deal with device configuration?

00:24:29.269 --> 00:24:37.400
Now, there's a-- actually to answer these questions,
there's a couple of paths you can take around deployment.

00:24:37.400 --> 00:24:44.800
As Duncan talked about, the iPhone is
really easy to use, from a user perspective.

00:24:44.799 --> 00:24:50.980
And it's easy to configure, you know,
accounts and preferences right on the phone.

00:24:50.980 --> 00:25:00.910
So one direction you can take is to give your iPhones
out to your users and let them administer their devices.

00:25:00.910 --> 00:25:08.490
Just with a few tips, a lot of them do very, very well
and I think it's actually a very low overhead solution.

00:25:08.490 --> 00:25:17.680
Now, if you have a lot of user accounts or you have a
lot of policies that you want to implement on the phones,

00:25:17.680 --> 00:25:20.549
you need to check out configuration profiles.

00:25:20.549 --> 00:25:24.740
Now we have tools to help you with both of these solutions.

00:25:24.740 --> 00:25:31.220
So let's take a look at those.

00:25:31.220 --> 00:25:34.799
So the first one I want to look at is iTunes.

00:25:34.799 --> 00:25:40.289
Now, iTunes is a really easy to use UI, and
for your users it's very well recognized.

00:25:40.289 --> 00:25:44.539
They use it at home for all their
media and syncing to their iPods.

00:25:44.539 --> 00:25:49.700
So, they'll be very familiar with this if they
have to use this with their corporate phone.

00:25:49.700 --> 00:25:55.340
Now, there are a few key functions that require iTunes.

00:25:55.339 --> 00:26:00.169
First is device activation, and also software updates

00:26:00.170 --> 00:26:07.230
or any in-house app installations
are required to go through iTunes.

00:26:07.230 --> 00:26:14.759
Now, a lot of the data that they have on their phones is
going to be synced with Exchange, but it's really beneficial

00:26:14.759 --> 00:26:22.319
if they can actually back up their phones to a host
computer in case they have to restore later from backup.

00:26:22.319 --> 00:26:27.299
And new for iPhone 3.0 is the ability to
encrypt those backups on the host computer.

00:26:27.299 --> 00:26:38.190
And that's a great benefit because it really helps
prevent data loss off of those host computers.

00:26:38.190 --> 00:26:46.900
Now, iTunes and Enterprise, now iTunes uses all
the standard installers for both Mac and Windows,

00:26:46.900 --> 00:26:52.480
and what this really means is it integrates
in with desktop management solutions.

00:26:52.480 --> 00:27:00.240
And we have step by step information on the
Enterprise deployment guide online at Apple.

00:27:00.240 --> 00:27:03.880
You can also configure iTunes into activation-only mode.

00:27:03.880 --> 00:27:10.960
Now this is very useful if you want to set up a kiosk in
your office to just activate a large number of iPhones.

00:27:10.960 --> 00:27:13.680
And Enterprise controls.

00:27:13.680 --> 00:27:19.090
Now, Enterprise controls, really what we usually
call those in iTunes is Parental controls,

00:27:19.089 --> 00:27:21.669
but they really amount to the same thing.

00:27:21.670 --> 00:27:27.759
And a few examples here that are important to
enterprises are the ability to disable network services,

00:27:27.759 --> 00:27:32.599
such as the iTunes Store or sharing your
media libraries over the corporate internet.

00:27:32.599 --> 00:27:39.769
You can also disable software updates and
being able to check for the iTunes version

00:27:39.769 --> 00:27:44.000
to be downloaded, or for the iPhone OS version.

00:27:44.000 --> 00:27:50.880
[ Pause ]

00:27:50.880 --> 00:27:55.410
>> So, iPhone Configuration Utility or IPCU.

00:27:55.410 --> 00:28:01.029
Now IPCU is an easy use GUI for
making configuration profiles.

00:28:01.029 --> 00:28:09.609
And it's really set up for IT administrators to be able to
configure these profiles and it will provision them directly

00:28:09.609 --> 00:28:15.319
to a device that's hooked up to that host computer, or
you can take those profiles and put them up on the web

00:28:15.319 --> 00:28:20.240
so your users can download them, or you can
send them in email directly to your users.

00:28:21.569 --> 00:28:26.980
Now, what's new in the new version of IPCU?

00:28:26.980 --> 00:28:34.420
First of all we have additional settings, and a lot
of these settings reflect all the new account types

00:28:34.420 --> 00:28:37.990
and new support that we have in iPhone 3.0.

00:28:37.990 --> 00:28:43.710
We've also implemented some device-side restrictions that
you can configure through the configuration profiles.

00:28:43.710 --> 00:28:56.960
And if you manage tightly the use of your devices, you
can also prevent the deletion of profiles off the device.

00:28:56.960 --> 00:29:05.620
Now, we deployed a Windows version of IPCU in February of
this year, and so now we ship both Mac and Windows versions

00:29:05.619 --> 00:29:10.139
and they're in complete parity with each other.

00:29:10.140 --> 00:29:12.820
Also new is the ability to sign and encrypt those profiles,

00:29:12.819 --> 00:29:18.649
and the important part of that is it ties
your account information to your policies,

00:29:18.650 --> 00:29:21.980
so you can be ensured that those
policies are enforced on your devices.

00:29:21.980 --> 00:29:30.539
[Applause] So, I want to talk a little
bit about configuration profiles.

00:29:30.539 --> 00:29:36.859
Now, configuration profiles themselves are just XML files,
and the great thing about this is they can be edited

00:29:36.859 --> 00:29:42.569
with a standard XML editor, or integrated
into a custom, you know, management solution.

00:29:42.569 --> 00:29:47.939
And there's a great developer opportunity
here to be able to integrate these

00:29:47.940 --> 00:29:57.640
in to standard device management solutions out there.

00:29:57.640 --> 00:30:06.480
Now like I said, they contain all the normal settings for
all the normal standards that we support on the phone,

00:30:06.480 --> 00:30:12.789
so Exchange mail accounts, network accounts.

00:30:12.789 --> 00:30:18.509
>> And new for iPhone 3.0, CalDAV
accounts and LDAP accounts.

00:30:18.509 --> 00:30:23.299
Also a new feature is the ability to install
web clips directly to your user's device,

00:30:23.299 --> 00:30:30.039
and these web clips can go off to either a corporate
web service or could just point to user documentation

00:30:30.039 --> 00:30:35.000
so they can do the self-help how-to guides.

00:30:35.000 --> 00:30:40.029
And also we'd implemented a lot,
a set of device-side restrictions.

00:30:42.019 --> 00:30:46.839
Now, device-side restrictions, if you
take a look at our Parental controls

00:30:46.839 --> 00:30:49.109
on the device side, they'll look very familiar.

00:30:49.109 --> 00:30:54.109
But I want to point out one of them explicitly.

00:30:54.109 --> 00:30:56.829
The last one there is the use of the camera.

00:30:56.829 --> 00:31:01.769
Now we, we took this request for some
of our sensitive corporate environments

00:31:01.769 --> 00:31:03.920
about disabling the use of the camera.

00:31:03.920 --> 00:31:07.560
So you can now do that right in the configuration profile.

00:31:11.240 --> 00:31:18.160
So also we've enhanced our passcode policies and the
credentials that can be used in configuration profiles.

00:31:18.160 --> 00:31:26.370
So, we implement a flexible set of passcode
policies, and there's a lot here and I invite you

00:31:26.369 --> 00:31:29.309
to take a look at them in the documentation.

00:31:29.309 --> 00:31:32.200
But I want to talk about one in particular.

00:31:32.200 --> 00:31:39.309
Now, since we shipped iPhone, we've always
had a backup policy around passcodes.

00:31:39.309 --> 00:31:46.730
And what this is as you enter a wrong passcode, it takes
longer and longer to be able to enter the next passcode.

00:31:46.730 --> 00:31:51.870
In fact, I think it's at 7 attempts it starts to
go to 15 minutes and it goes even beyond that.

00:31:51.869 --> 00:31:59.919
And this, we implemented this to make it hard
for a thief to try to guess your passcode.

00:31:59.920 --> 00:32:03.450
Well, now we also can set the maximum
number of failed attempts.

00:32:03.450 --> 00:32:07.880
So you can set that maximum number, and
when that maximum number is reached,

00:32:07.880 --> 00:32:11.830
it will actually do a wipe on the
device and erase all the data.

00:32:11.829 --> 00:32:22.379
So this really helps prevent the
loss of data on your users' devices.

00:32:22.380 --> 00:32:29.570
Now certificates, now certificates are basically a
public key and a private key, some information about you

00:32:29.569 --> 00:32:33.980
and some information about the certificate
authority that sign the certificate.

00:32:33.980 --> 00:32:40.509
Now what they do is they enable secure
authentication and communication.

00:32:40.509 --> 00:32:45.849
So, many enterprises already have certificates
used in their enterprise and sometimes they--

00:32:45.849 --> 00:32:51.969
what they're using them for is authentication
to Exchange or VPN or some other web service.

00:32:51.970 --> 00:32:59.740
And you can use these certificates to set up secure SSL
communications which is fast becoming the standard way

00:32:59.740 --> 00:33:05.630
to poke a hole through your firewall for
secure communication to outside your internet.

00:33:05.630 --> 00:33:09.620
So, how do you deploy them?

00:33:09.619 --> 00:33:12.809
I've already said that, you know, you
deploy them in a configuration profile,

00:33:12.809 --> 00:33:18.049
and just like any configuration profile, you can, you can
set them up in that configuration profile and email them

00:33:18.049 --> 00:33:22.269
out to your users or you can set up a
web server and have them downloaded.

00:33:22.269 --> 00:33:34.109
And new for iPhone 3.0, we implement a new certificate
delivery mechanism called SCEP, and we have a special guest

00:33:34.109 --> 00:33:39.009
from Cisco to talk a little bit about this new protocol.

00:33:39.009 --> 00:33:48.609
So Cheryl Madson is the technical leader for Cisco IOS VPN
development and has worked on IPSec protocol since 1994.

00:33:48.609 --> 00:33:52.569
She was involved in the early formation
of the SCEP protocol,

00:33:52.569 --> 00:33:55.000
and we're happy to have her here to tell you about it.

00:33:55.000 --> 00:33:56.859
Welcome, Cheryl.

00:33:56.859 --> 00:34:01.869
>> Thank you, John.

00:34:01.869 --> 00:34:09.319
So, what I'd like to do today is to introduce SCEP as a
protocol, give a little background on it, how it came about

00:34:09.320 --> 00:34:15.150
and how the protocol can be used
in different environments today.

00:34:15.150 --> 00:34:17.170
This is really a conceptual talk.

00:34:17.170 --> 00:34:21.670
It's-- there are various vendors that
support SCEP, but this is not intended

00:34:21.670 --> 00:34:26.920
to be a detailed representation of
any vendor's specific implementation.

00:34:26.920 --> 00:34:32.190
In fact if you want to learn more about the
iPhone integration with SCEP, you should go--

00:34:32.190 --> 00:34:38.849
There will be a session covering that later this week.

00:34:38.849 --> 00:34:45.880
So, the Simple Certificate Enrollment Protocol
is a protocol to use for certificate enrollment.

00:34:45.880 --> 00:34:50.269
It was-- design goal was a lightweight
mechanism for deploying certificates.

00:34:50.269 --> 00:34:55.300
It was never intended to be a full-blown
PKI management solution.

00:34:55.300 --> 00:35:02.870
The protocol was originally developed by Verisign
for Cisco, and this was about 11 or 12 years ago now.

00:35:02.869 --> 00:35:09.900
And at that time, the IETF standards effort had
two major competing proposals, one from Microsoft

00:35:09.900 --> 00:35:13.059
and one from Entrust, and we had a real problem.

00:35:13.059 --> 00:35:16.809
We wanted it to be able to ship routers,
running IPSec and using certificates.

00:35:16.809 --> 00:35:20.630
Certificates are scaleable so we
wanted to be able to use that

00:35:20.630 --> 00:35:25.050
And we couldn't really wait for
consensus to happen in the working group,

00:35:25.050 --> 00:35:30.280
so this protocol was developed
to more or less bridge that gap.

00:35:30.280 --> 00:35:34.570
And after all this time, there still is no real consensus.

00:35:34.570 --> 00:35:38.930
Both protocols have -- both proposals have
advanced on to become proposed standard

00:35:38.929 --> 00:35:42.440
within the IETF and may go on to Draft standard.

00:35:42.440 --> 00:35:49.860
In the meantime, SCEP has been maintained
by Cisco as an IETF Internet Draft.

00:35:49.860 --> 00:35:58.329
So the original problem that SCEP was intending to solve
was to supply certificates to routers running IPSec.

00:35:58.329 --> 00:36:04.710
And if you think back, routers didn't
ship with any certificates at that time.

00:36:04.710 --> 00:36:06.849
There was no concept of manufacturing certificates.

00:36:06.849 --> 00:36:11.929
There was-- they didn't come with
pre-installed trust points of any kind.

00:36:11.929 --> 00:36:18.009
And a router isn't a host that where you
can more or less download Safari or Firefox

00:36:18.010 --> 00:36:21.480
and magically get sort of trust points that way.

00:36:21.480 --> 00:36:24.000
So you have a bit of a bootstrap issue.

00:36:24.000 --> 00:36:29.670
Basically, how do you obtain device certificates when you
don't have any kind of pre-established trust relationship?

00:36:29.670 --> 00:36:37.579
And so if you look at the specification, it does talk
about a couple ways of approaching it, you know passing,

00:36:37.579 --> 00:36:41.539
more or less passing like public keys and
doing fingerprint verification et cetera.

00:36:41.539 --> 00:36:47.949
There are various ways to approach a problem
which I'm not going to really talk about here.

00:36:47.949 --> 00:36:52.899
So, if you looked at the SCEP specification,
it's defined to run on top of HTTP mainly

00:36:52.900 --> 00:36:57.099
because of the bootstrap issue we
talked about in the previous slide.

00:36:57.099 --> 00:37:05.440
Now in the case of the iPhone, it's going to run SCEP over
HTTPS because it doesn't have that same bootstrap problem.

00:37:05.440 --> 00:37:13.679
What's needed is the-- certificates that are issued by
a trust point that is already installed on the iPhone.

00:37:13.679 --> 00:37:20.190
And so the certificates are used to secure the HTTPS
session between the iPhone and the SCEP server,

00:37:20.190 --> 00:37:26.409
and then you run your SCEP protocol messages through
this pipe, basically your certificate request

00:37:26.409 --> 00:37:29.719
and your-- and you know, your certificate reply.

00:37:29.719 --> 00:37:32.599
And obviously this is not the same.

00:37:32.599 --> 00:37:36.909
This third party CA is not the same as the
enterprise CA 'cause what you're trying to do

00:37:36.909 --> 00:37:43.909
with this is obtain certificates that can be used
to grant you access into an enterprise network.

00:37:43.909 --> 00:37:50.289
So SCEP is a protocol.

00:37:50.289 --> 00:37:56.329
As I said earlier, it doesn't recall-- doesn't require
secure transport and that's because it's using PK--

00:37:56.329 --> 00:37:59.319
the messages themselves are secured using PKCS#7.

00:37:59.320 --> 00:38:02.210
There are a couple layers of wrapping.

00:38:02.210 --> 00:38:09.150
There's one layer that basically takes and wraps the
message in PKCS#7, which is encrypted to the recipient.

00:38:09.150 --> 00:38:16.329
Then there's another wrapping which takes-- another
PKCS#7 wrapping which takes and wraps the message

00:38:16.329 --> 00:38:19.960
and that's-- that is signed by the sender.

00:38:19.960 --> 00:38:25.510
Now the payload itself of the message is
there's a variety of messages if you look SCEP,

00:38:25.510 --> 00:38:36.510
but the important ones here are PKCS#10 certificate request,
and x.509 certificate response or an SCEP control message,

00:38:36.510 --> 00:38:42.840
you know, indication of success or failure or hang
on, I'm in the process of working on your request,

00:38:42.840 --> 00:38:50.559
so wait a little bit and ask me again later.

00:38:50.559 --> 00:38:54.049
So SCEP, as a protocol, operates
under two infrastructure models,

00:38:54.050 --> 00:38:57.490
and this really has to do with
how this server is structured.

00:38:57.489 --> 00:39:04.409
So the first model is-- on the SCEP
server is the certificate authority,

00:39:04.409 --> 00:39:07.829
and the CA takes on all of the functionality that's needed.

00:39:07.829 --> 00:39:11.509
This is involved, and it gets involved
in authorizing the clients,

00:39:11.510 --> 00:39:18.110
it validates the enrollment requests
and issues the certificates.

00:39:18.110 --> 00:39:24.170
While on the second model, the tasks are
split up where the CA is still responsible

00:39:24.170 --> 00:39:26.900
for issuing certs, that's its main job in life.

00:39:26.900 --> 00:39:33.400
And then there's this other party called the
registration authority, and in this particular model,

00:39:33.400 --> 00:39:38.990
the registration authority is the
intermediary between the client and the CA

00:39:38.989 --> 00:39:43.229
and so the communication goes from the client to the RA.

00:39:43.230 --> 00:39:50.510
The RA is involved in the authorization
and validating of the enrollment request.

00:39:50.510 --> 00:39:57.230
With this model, it's possible to place an RA then in the
DMZ and then have a secured connection from the RA to the CA

00:39:57.230 --> 00:40:00.210
which will live in the corporate network.

00:40:03.039 --> 00:40:10.000
And just as an aside, the CISCO IOS CA Server
supports both models of C only, CA only model

00:40:10.000 --> 00:40:14.960
and the CA/RA model where the Microsoft CA server--

00:40:14.960 --> 00:40:28.889
>> Actually their server does support SCEP as well as
extensions, but their model is really only an RA/CA model.

00:40:28.889 --> 00:40:37.569
So, the purpose of all this is to
basically come up with some credentials

00:40:37.570 --> 00:40:41.430
for our client, you know, either a device or user.

00:40:41.429 --> 00:40:47.139
And so it becomes really important for SCEP to
integrate with existing authorization services.

00:40:47.139 --> 00:40:49.889
Because in effect, you're trying to
come up with certificate credentials

00:40:49.889 --> 00:40:53.150
that will replace another set of
credentials as this user ID/password.

00:40:53.150 --> 00:41:00.610
And so what you're wanting is after all is said and
done, you know, using either the user ID/password

00:41:00.610 --> 00:41:04.430
or using the certificate that you come
up with the same authorization result,

00:41:04.429 --> 00:41:07.399
so that integration becomes very important.

00:41:07.400 --> 00:41:12.369
And so there are a variety of authorization
models out there.

00:41:12.369 --> 00:41:19.049
We're going to focus on two of them that are
likely going to be supported with the iPhone.

00:41:19.050 --> 00:41:22.730
The first one is one time password,
and the other one is username password.

00:41:22.730 --> 00:41:27.079
Now this is, this is involved in getting
the certificate in the first place.

00:41:27.079 --> 00:41:39.309
And introduce a concept here of a profile
web service, and it has two major tasks.

00:41:39.309 --> 00:41:46.920
The first task is involved in the authentication of the
iPhone client initially, and the other part it's responsible

00:41:46.920 --> 00:41:51.710
for is there is something which we'll call an SCEP profile.

00:41:51.710 --> 00:41:56.720
Its job is to construct that profile
and send that profile to the client.

00:41:56.719 --> 00:42:08.089
And that profile, the client then takes that profile and
constructs a certificate enrollment request to the CA.

00:42:08.090 --> 00:42:08.670
[ Coughs. ]

00:42:08.670 --> 00:42:10.889
Excuse me.

00:42:10.889 --> 00:42:13.799
So, we talk about the one-time password model.

00:42:13.800 --> 00:42:20.150
I'll start out by saying that the certificate
services icon here, you can view it as a CA

00:42:20.150 --> 00:42:22.650
or a CA/RA, it doesn't make any difference.

00:42:22.650 --> 00:42:25.880
I'll say CA for simplicity here.

00:42:25.880 --> 00:42:33.059
So anyhow, the client gets a-- has to
authenticate with the profile web service.

00:42:33.059 --> 00:42:38.139
Profile web service may interact with the
Directory Service to perform some validation.

00:42:38.139 --> 00:42:46.230
If the validation is successful, it is responsible
for obtaining a one-time password from the CA.

00:42:46.230 --> 00:42:53.750
You could view this one-time password sort of as an
authorization token, a short-lived authorization token.

00:42:53.750 --> 00:42:59.929
And so profile web service constructs the
SCEP profile, puts the one-time password

00:42:59.929 --> 00:43:03.279
in that profile and sends it back to the client.

00:43:03.280 --> 00:43:09.370
The client then takes this profile, turns around
and constructs the certificate enrollment request,

00:43:09.369 --> 00:43:11.839
includes that one-time password and sends it to the CA.

00:43:11.840 --> 00:43:22.390
The CA can perform the necessary validations, if it's
happy, it issues a certificate, sends it to the client.

00:43:23.940 --> 00:43:27.670
The username password case is somewhat different.

00:43:27.670 --> 00:43:30.190
There are a couple of points here.

00:43:30.190 --> 00:43:37.480
One of the points is that with this particular
scenario, you can construct a certificate

00:43:37.480 --> 00:43:44.780
and the certificate will contain the username
which may become meaningful in certain scenarios.

00:43:44.780 --> 00:43:47.460
So this is one way to go about it.

00:43:47.460 --> 00:43:54.860
And so, similar to the previous one, the
client authenticates the profile web service.

00:43:54.860 --> 00:44:03.640
Now, the profile web service validates with the directory
services and if it's happy, it constructs information

00:44:03.639 --> 00:44:06.949
in the SCEP profile and part of
the information is an encoding

00:44:06.949 --> 00:44:17.409
of user name 'cause SCEP itself expects the username to be
either part of the SubjectName or SubjectAltName fields.

00:44:17.409 --> 00:44:22.480
And so it basically encodes things
appropriately so the profile--

00:44:22.480 --> 00:44:24.250
you know, so the client doesn't have to know what to do,

00:44:24.250 --> 00:44:29.349
so that information is then passed
in the profile back to the client.

00:44:29.349 --> 00:44:35.170
Now in this particular case, there is
a user name but there's not a password.

00:44:35.170 --> 00:44:43.130
And so what happens is that the user, the
iPhone user is prompted for a password.

00:44:43.130 --> 00:44:49.559
Now this is really an enrollment password conceptually
similar to the one-time password that is sent in, you know,

00:44:49.559 --> 00:44:58.559
in the previous exchange where its job in life
is to be an authorization token for enrollment.

00:44:58.559 --> 00:45:05.230
So, once that password has been entered,
the client will take the information,

00:45:05.230 --> 00:45:07.090
construct a certificate enrollment request,

00:45:07.090 --> 00:45:13.700
take the information including the username,
takes the password, sends it to the CA.

00:45:13.699 --> 00:45:18.710
CA takes the username and password,
validates with Directory Services.

00:45:18.710 --> 00:45:23.059
And if that validation goes okay, it issues
the cert, sends it back to the client.

00:45:23.059 --> 00:45:30.119
As you notice in this particular scenario, there's a
lot more interaction with the Directory Services as part

00:45:30.119 --> 00:45:34.859
of authorization or authentication and
authorization than there is in the previous scenario.

00:45:34.860 --> 00:45:44.450
So, I'm going to touch a little
bit on the pilot for Cisco IT.

00:45:44.449 --> 00:45:50.989
There is a whole bunch of people that want to be able
to use iPhone to connect into the Cisco VPN network.

00:45:50.989 --> 00:45:56.750
This is really conceptual, you know, kind
of the 500,000-foot view of the world.

00:45:56.750 --> 00:45:59.820
There's a lot of details that aren't on the slide.

00:45:59.820 --> 00:46:06.240
But the main thing to remem-- the main
point out of this particular slide is

00:46:06.239 --> 00:46:11.759
that this is actually a combination
of the previous two scenarios.

00:46:11.760 --> 00:46:18.760
There will be a certificate issued with username and so
the, you know, taking the piece of the username stuff

00:46:18.760 --> 00:46:24.700
from the previous slide, but there's still the
one-time password similar to that first scenario.

00:46:24.699 --> 00:46:31.789
So both of those are munged together in the
exchange and so there is no specific prompt

00:46:31.789 --> 00:46:34.480
that the user has to enter in a passcode.

00:46:34.480 --> 00:46:44.210
So this is all, you know-- Once the initial
authentication is done, this all just runs on its own.

00:46:44.210 --> 00:46:54.179
And so the purpose of this is to issue certificates
that can be used for Cisco IPSec VPN connections.

00:46:54.179 --> 00:47:00.679
And so once the client has a certificate, it can then
present that certificate when it tries to connect,

00:47:00.679 --> 00:47:02.929
you know, as part of the [inaudible] exchange.

00:47:02.929 --> 00:47:06.710
It could present a certificate to the VPN server.

00:47:06.710 --> 00:47:10.449
Cisco VPN Server can validate it.

00:47:10.449 --> 00:47:16.579
If the validation succeeds, it will take that username
and validate the user within the Directory Services,

00:47:16.579 --> 00:47:21.349
and if that succeeds it'll allow the connection to happen.

00:47:21.349 --> 00:47:26.360
As an aside here, this is besides being
conceptual, this is still in fairly early phases.

00:47:26.360 --> 00:47:29.890
We're still doing some design, some planning, some testing.

00:47:29.889 --> 00:47:31.989
We've just received some iPhones for testing.

00:47:31.989 --> 00:47:40.229
So, this is more or less the way we think this is going
to play out but, you know, like I said this is still

00:47:40.230 --> 00:47:47.530
in early stages, so some of the
details may change over time.

00:47:47.530 --> 00:47:52.269
So for more details about the SCEP protocol,

00:47:52.269 --> 00:47:57.130
as I said earlier it's been maintained
as an internet draft in the IETF.

00:47:57.130 --> 00:47:58.590
So there's a current draft out there.

00:47:58.590 --> 00:48:03.000
If you go to the internet draft
database and enter SCEP, you'll find it.

00:48:03.000 --> 00:48:07.000
There will be a new version of the draft available soon.

00:48:07.000 --> 00:48:11.059
You know, this spec is an individual submission.

00:48:11.059 --> 00:48:12.329
It's not a standards track.

00:48:12.329 --> 00:48:19.250
It's not a working group submission, and that's
because it was submitted to the [inaudible] group

00:48:19.250 --> 00:48:23.780
and was rejected mainly because there
were already these two other proposals

00:48:23.780 --> 00:48:27.370
that the working group is working
on and they were focusing on that.

00:48:27.369 --> 00:48:32.259
And so, we've been treating this as an
individual submission, excuse me, all this time.

00:48:32.260 --> 00:48:37.600
So the goal is to publish this as an
RFC, hopefully an informational RFC,

00:48:37.599 --> 00:48:42.670
but it won't be a standards track document.

00:48:42.670 --> 00:48:45.000
However, even though it's not a standards track document,

00:48:45.000 --> 00:48:50.530
the document has undergone recent review
from the IETF Security Area Directorate.

00:48:50.530 --> 00:48:58.630
So, you know, in order to clean things up and clarify
things, and so we're hoping with that that we'll be able

00:48:58.630 --> 00:49:03.440
to soon look at actually publishing this as an RFC.

00:49:03.440 --> 00:49:09.190
So I'd like to end this by saying that at Cisco, there
are a lot of us that are really excited about the iPhone

00:49:09.190 --> 00:49:15.240
and excited that we're going to be able to use
the iPhone to connect into the corporate network,

00:49:15.239 --> 00:49:19.699
and we're happy that we're able to contribute
some technology to allow that to happen.

00:49:19.699 --> 00:49:21.009
So, thank you.

00:49:21.010 --> 00:49:21.790
>> Thanks Cheryl.

00:49:21.789 --> 00:49:29.619
So at Apple we're really excited about providing
support for SCEP, but I want to put it in context

00:49:29.619 --> 00:49:33.400
of what we're trying to do here for the iPhone.

00:49:33.400 --> 00:49:41.860
So, we have the user authentication and this ensures that
your user is authorized to get the certificate enrollment.

00:49:41.860 --> 00:49:51.180
We have the certificate enrollment itself
and this is using the SCEP protocol,

00:49:51.179 --> 00:49:54.589
you can get a standard certificate
signing request and you get--

00:49:54.590 --> 00:49:58.090
you can receive an identity for that particular iPhone.

00:49:58.090 --> 00:50:05.610
But this all leads up to one particular feature
which is over the air device configuration.

00:50:05.610 --> 00:50:10.990
And this is a service that you have to
build yourself in your infrastructure,

00:50:10.989 --> 00:50:17.729
but the idea here is that you can deliver seamlessly
an encrypted configuration profile with the settings

00:50:17.730 --> 00:50:22.000
for all your enterprise environment directly to an iPhone.

00:50:22.000 --> 00:50:26.679
[ Pause ]

00:50:26.679 --> 00:50:32.929
>> Now, what the user experience here is, is
that the user goes in, logs in with a name

00:50:32.929 --> 00:50:38.079
and password and all this happens in the background.

00:50:38.079 --> 00:50:44.389
You get a certificate through the enrollment process
provisioned down to the device, and then you can go back

00:50:44.389 --> 00:50:52.170
to a profile web service, and that can give you a generated
configuration profile, securely down to the device as well.

00:50:52.170 --> 00:50:58.070
And then the user hits one button to install that
configuration profile, and they're off and running.

00:50:58.070 --> 00:51:10.260
Now, there are some pieces to this infrastructure that you
have to build yourself, and I just want to point them out.

00:51:10.260 --> 00:51:14.260
So Directory Services, that's when
a-- authenticate your users.

00:51:14.260 --> 00:51:22.020
Now, you have to hook this up to some kind of
web service, and I'll get to that in a second.

00:51:22.019 --> 00:51:29.780
Your certificate service, now this could be an internal
public key infrastructure or an external hosted one.

00:51:29.780 --> 00:51:33.790
It needs to support SCEP, so you need to
check with your vendor whether they do that.

00:51:33.789 --> 00:51:43.779
And if you haven't deployed one, I think checking
out Cisco IOS is probably a good place to start.

00:51:43.780 --> 00:51:45.300
And then the profile web service.

00:51:45.300 --> 00:51:48.440
Now this is the glue that binds the whole workflow together.

00:51:48.440 --> 00:51:56.690
It hosts the HTTPS session, it generates the configuration
profiles, it signs and encrypts those profiles.

00:51:56.690 --> 00:52:04.170
And then often, what you also wanted to do is provide
a proxy back into the corporate infrastructure

00:52:04.170 --> 00:52:09.349
to where your certificate service actually lies,
so that it's protected behind the firewall.

00:52:09.349 --> 00:52:17.789
So there's a detailed session that goes over creation
of configuration profiles and creation of these types

00:52:17.789 --> 00:52:21.880
of services, and there's a lab to go along with it.

00:52:21.880 --> 00:52:23.329
Those are on Thursday.

00:52:23.329 --> 00:52:28.250
There are also a couple sessions up
here around good practices of security

00:52:28.250 --> 00:52:33.510
with the iPhone that I want to point you to.

00:52:33.510 --> 00:52:39.820
So with that, I want to get into
a little bit about development.

00:52:39.820 --> 00:52:45.309
Now, the applications for the iPhone have been fantastic.

00:52:46.849 --> 00:52:51.239
We now have over 50,000 applications on the iTunes Store,

00:52:51.239 --> 00:52:56.669
and many of those applications
are dedicated to enterprise use.

00:52:56.670 --> 00:53:06.829
Now we couldn't do this without having created
a secure ecosystem to host these applications.

00:53:06.829 --> 00:53:13.880
And we did that by leveraging a
bunch of technologies from Mac OS X.

00:53:13.880 --> 00:53:17.690
Now, all applications on the device are signed.

00:53:17.690 --> 00:53:20.670
The ones from the store are signed by Apple and the ones

00:53:20.670 --> 00:53:26.030
from in-house deployments are signed
by the enterprises themselves.

00:53:26.030 --> 00:53:35.310
Now, that ensures that the user knows that
that application hasn't been tampered with.

00:53:35.309 --> 00:53:41.929
Additionally, we sandbox each application so it
cannot-- it restricts itself so it can only see its data

00:53:41.929 --> 00:53:46.199
and not another application's data, and
it can't muck with the system data either.

00:53:46.199 --> 00:53:51.210
And this ensures that you can deploy
secure applications without having to worry

00:53:51.210 --> 00:53:57.820
about all the other applications on
the device mucking with that data.

00:53:57.820 --> 00:54:06.269
And of course in the iPhone OS, we've implemented
all the security framework that you need.

00:54:06.269 --> 00:54:10.130
We've-- for all the standards for
certificate key and encryption

00:54:10.130 --> 00:54:16.860
and we also have our secure keychain
services so you can safely store credentials.

00:54:16.860 --> 00:54:25.700
And as a neat new feature for iPhone 3G
S, we also support hardware encryption.

00:54:25.699 --> 00:54:27.699
[ Applause ]

00:54:27.699 --> 00:54:27.960
>> Thank you.

00:54:27.960 --> 00:54:28.429
[ Applause ]

00:54:28.429 --> 00:54:37.259
>> Now this happens in the hardware to the data on
the fly, and it's completely transparent to the user.

00:54:37.260 --> 00:54:45.080
And one of the great side benefits of this is
that remote wipe becomes almost instantaneous.

00:54:45.079 --> 00:54:47.940
Because you don't actually have to erase any of the data,

00:54:47.940 --> 00:54:55.470
it's all encrypted by key and you
can just throw that key away.

00:54:55.469 --> 00:55:00.139
Now, your business is unique and some
of your users have specialized needs

00:55:00.139 --> 00:55:02.829
or just really appreciate a custom workflow.

00:55:02.829 --> 00:55:07.029
And this is especially true in the mobile workforce.

00:55:07.030 --> 00:55:14.750
And so, putting together in-house apps
can really enable these mobile workers.

00:55:14.750 --> 00:55:22.610
The idea here is that you give the data to
the user exactly when he needs to use it.

00:55:22.610 --> 00:55:29.620
And what I encourage you to do is design these
things so that you have the minimal amount of input

00:55:29.619 --> 00:55:35.059
and the exact output in data right
in front of the users that they need.

00:55:35.059 --> 00:55:40.449
It's really important for these
applications to be designed for mobile use.

00:55:40.449 --> 00:55:46.889
They need to run fast and they need to be
streamlined for the workflow of their users.

00:55:48.530 --> 00:55:51.720
Now, you should follow good UI practices.

00:55:51.719 --> 00:55:55.739
And if you want to follow the UI practices
that are already implemented on the iPhone,

00:55:55.739 --> 00:56:00.059
that's probably best because it
really shortens the learning curve.

00:56:00.059 --> 00:56:07.079
And integrate these applications in with the data in
your corporate infrastructure and also integrate them

00:56:07.079 --> 00:56:13.719
in with applications like Safari so they can reach
out into the network and get that data for your users.

00:56:14.869 --> 00:56:23.089
So our customers have put these iPhones in some really
incredible environments and I want to invite Dean Moore,

00:56:23.090 --> 00:56:27.990
Sunbelt Rentals, up to share some
of his experiences with iPhone.

00:56:27.989 --> 00:56:32.669
[ Applause ]

00:56:32.670 --> 00:56:33.159
>> Hi everyone.

00:56:33.159 --> 00:56:39.699
I'll spend a little bit of time today telling you about
our experience with application development with the iPhone

00:56:39.699 --> 00:56:44.460
and the SDK and doing some nice in-house applications.

00:56:44.460 --> 00:56:49.119
Before I do that, I'd like to give you a little history
or tell you a little bit about who Sunbelt Rentals is,

00:56:49.119 --> 00:56:54.250
as well as explain to you why we
decided to develop our own application.

00:56:54.250 --> 00:57:01.320
Sunbelt Rentals is a wholly owned subsidiary of Ashtead
Group plc, and we are traded on the UK Stock Exchange.

00:57:01.320 --> 00:57:06.670
We're the third largest equipment rental company in
the country, and when you combine the entire group

00:57:06.670 --> 00:57:09.860
with our European counterpart,
we're the second in the world.

00:57:09.860 --> 00:57:19.690
We have over 400 locations in 34 states and th4e District
of Columbia, and 5500 employees and a sales force of 800.

00:57:19.690 --> 00:57:22.260
We also have two iPhone developers.

00:57:25.130 --> 00:57:27.990
Now, where we were.

00:57:27.989 --> 00:57:34.009
I'm sure some of you when you look at these, you might be
able to relate to one or two of them but unfortunately,

00:57:34.010 --> 00:57:36.100
we really had the perfect storm at Sunbelt.

00:57:36.099 --> 00:57:38.989
We fit into all these categories.

00:57:38.989 --> 00:57:44.589
We had a primary communication device for our sales
force which was a Sprint/Nextel two-way radio.

00:57:44.590 --> 00:57:47.700
They used it for everything, communication
with their customers.

00:57:47.699 --> 00:57:55.319
They used it to-- two-way radio back to a
branch to look up equipment availability rates.

00:57:55.320 --> 00:57:57.840
We had very poor communication out to our field.

00:57:57.840 --> 00:58:02.079
As procedures changed, we used to have
to have quarterly conference calls,

00:58:02.079 --> 00:58:05.539
that information was usually late in getting to them.

00:58:05.539 --> 00:58:08.699
Customer data, this is an interesting thing.

00:58:08.699 --> 00:58:12.369
We actually printed the customer data
quarterly and bound it into a book.

00:58:12.369 --> 00:58:16.529
Fortunately, by the time that stuff
hit the printer, it was already old

00:58:16.530 --> 00:58:20.230
and it also cost us a lot of money to distribute that data.

00:58:20.230 --> 00:58:27.110
We had very, very limited access to our
operational data while on the sales calls

00:58:27.110 --> 00:58:32.019
and really tough time getting leads
and information out to our field.

00:58:32.019 --> 00:58:36.400
Again, we printed that quarterly and by
the time they got it, it was too old.

00:58:36.400 --> 00:58:39.320
About the only technology you see
there is that calculator that we put

00:58:39.320 --> 00:58:43.100
into their notebook which didn't help them too much.

00:58:43.099 --> 00:58:47.139
So when we took a look at where we
were, we decided we need to change,

00:58:47.139 --> 00:58:50.699
we need to really make some changes
with how we do our business.

00:58:50.699 --> 00:58:54.210
We needed to improve communication within the company.

00:58:54.210 --> 00:59:00.490
We needed to move our sales force from a manual
procedure to something that was technology based.

00:59:00.489 --> 00:59:04.769
I wanted to provide that sales force with live
pertinent information at the point of sale.

00:59:04.769 --> 00:59:09.269
And you know point of sale for our reps
isn't sitting in an office somewhere.

00:59:09.269 --> 00:59:16.199
These guys are on the job site in the job trailers or
in the dirt, they're right there with the contractors.

00:59:16.199 --> 00:59:24.309
We also had a lot of different systems that we had
to, you know, we had to integrate in to get that data

00:59:24.309 --> 00:59:28.440
to the sales reps, so we always want
to provide better customer service.

00:59:28.440 --> 00:59:32.829
Now, there are other rental companies out there
and we all pretty much rent the same equipment.

00:59:32.829 --> 00:59:39.809
But what really sets us apart at Sunbelt is our
customer service and we really pride ourselves on that.

00:59:39.809 --> 00:59:42.610
So, how did we get there?

00:59:42.610 --> 00:59:44.110
The iPhone.

00:59:44.110 --> 00:59:50.630
We were able to leverage our current Microsoft Exchange
infrastructure to give us push mail, calendar, contacts,

00:59:50.630 --> 00:59:53.650
and the address lookups, so this is real key.

00:59:53.650 --> 00:59:57.869
This is information that we just couldn't
get out to a timely manner to our users.

00:59:57.869 --> 01:00:02.420
They were, you know, stopping at one of the
branches on the way to work or possibly, you know,

01:00:02.420 --> 01:00:05.269
after the day they were going and checking their email.

01:00:05.269 --> 01:00:06.989
Now they have it all day long.

01:00:06.989 --> 01:00:10.599
We're able to instantly communicate with them.

01:00:10.599 --> 01:00:15.599
We then took the device, put a nice hardened case
around it, give it that nice construction look

01:00:15.599 --> 01:00:22.089
and ruggedized it a little bit, and we wrote
our own custom application Mobile SalesPro.

01:00:22.090 --> 01:00:27.090
>> Now Mobile SalesPro, it is truly
a complete mobile workflow.

01:00:27.090 --> 01:00:32.990
Our sales reps are able to plan their week by having
a daily task planner right at their fingertips.

01:00:32.989 --> 01:00:38.269
They can add new tasks, they can edit tasks,
they're able to look at new sales leads,

01:00:38.269 --> 01:00:41.000
as well as share those leads with other reps.

01:00:41.000 --> 01:00:45.449
And the key to it, it's all integrated
with our Microsoft CRM solution.

01:00:45.449 --> 01:00:50.449
So all the data they're entering into their
iPhone is going right into our backend system.

01:00:50.449 --> 01:00:57.489
So before, when they were using handwritten notes
and keeping track of their customers on paper,

01:00:57.489 --> 01:01:00.329
we now have that data in our backend system.

01:01:00.329 --> 01:01:06.750
So if a sales rep is to move on to another position or leave
the company, the next person that comes in can pick up right

01:01:06.750 --> 01:01:10.820
where they left off and our customer
doesn't have to sacrifice.

01:01:10.820 --> 01:01:16.760
We're able to prepare for that sales meeting
as they're pulling up to the job site

01:01:16.760 --> 01:01:19.130
and getting ready to get out of their truck.

01:01:19.130 --> 01:01:21.880
They can review their customer account detail.

01:01:21.880 --> 01:01:23.579
They look at their current AR status.

01:01:23.579 --> 01:01:26.369
Is this customer paying their invoices on time?

01:01:26.369 --> 01:01:31.130
Could look at rental history as well and see
what current equipment they have on rent,

01:01:31.130 --> 01:01:35.840
so that they can change really the way that--
the way they're going to speak to that customer,

01:01:35.840 --> 01:01:40.670
possibly what they're going to try
and help that customer accomplish.

01:01:40.670 --> 01:01:49.170
They're able to fulfill the customer request right there on
the job site by having real-time access to our inventory.

01:01:49.170 --> 01:01:56.119
They're able to see where our equipment is, whether it be
at the local branch district level, their territory region,

01:01:56.119 --> 01:02:00.210
with all the way up to the company and it's all real time.

01:02:01.610 --> 01:02:09.630
They give a better level of service by having at their
fingertip access to email credit applications as well

01:02:09.630 --> 01:02:16.500
as to review open invoices and contracts with the
customer, as well as email right from the device

01:02:16.500 --> 01:02:21.159
and they can request equipment to be picked up.

01:02:21.159 --> 01:02:26.039
So Mobile SalesPro, it truly is an end to end solution.

01:02:26.039 --> 01:02:31.210
Whether our sales reps are planning or preparing
for their sales call, fulfilling requests

01:02:31.210 --> 01:02:38.630
or adding to their customer service, they're able to do
everything anywhere with Mobile SalesPro and the iPhone.

01:02:38.630 --> 01:02:42.599
Let me just talk a little bit about our development process.

01:02:42.599 --> 01:02:45.829
Since there are only two of us, it is kind of simplified.

01:02:45.829 --> 01:02:52.349
We kind of shrunk the project lifecycle, but we
did define some goals up front, some milestones.

01:02:52.349 --> 01:02:58.219
We wanted to makes sure we got the key features included
and we had to put some milestones on that because, you know,

01:02:58.219 --> 01:03:02.449
you have to keep, we have to keep
ourselves moving towards something.

01:03:02.449 --> 01:03:07.559
Created some rough screen layout so we
got a feel for how the app should flow,

01:03:07.559 --> 01:03:11.090
and we had direct communication
from developer to sales force.

01:03:11.090 --> 01:03:12.630
So this is real key.

01:03:12.630 --> 01:03:18.700
This is what kept us developing what our users needed
rather than us developing what we thought they needed.

01:03:18.699 --> 01:03:21.349
We were able to have instant communication with them.

01:03:21.349 --> 01:03:23.110
In fact, we even went out on sales calls.

01:03:23.110 --> 01:03:27.599
We put on our steel tips and our hardhats
and we drove out and went on sales calls,

01:03:27.599 --> 01:03:33.099
so we could see exactly what they needed
and how they were going to use the app.

01:03:33.099 --> 01:03:36.750
Just to go over the timeline a little bit.

01:03:36.750 --> 01:03:39.590
As you can see, we have some milestones set up there.

01:03:39.590 --> 01:03:45.430
We started the application kind of as a sideline
project shortly after the SDK was released.

01:03:45.429 --> 01:03:50.119
And in November timeframe, we added our first 10 users.

01:03:50.119 --> 01:03:52.799
These ended up being really our base.

01:03:52.800 --> 01:03:54.400
We got a lot of feedback from them.

01:03:54.400 --> 01:03:57.599
As you can see, we progressively added more users.

01:03:57.599 --> 01:04:02.719
We got more feedback, we developed more features
and then we just kept on repeating that process.

01:04:02.719 --> 01:04:06.009
We just had a really large milestone about a week here.

01:04:06.010 --> 01:04:16.470
We added an additional 1100 iPhones so we now have total of
1300 iPhones deployed, and the feedback has been phenomenal.

01:04:16.469 --> 01:04:18.739
So, how do we get this data?

01:04:18.739 --> 01:04:21.379
We have a lot of different systems.

01:04:21.380 --> 01:04:26.119
At the base of it, we have an AS/400
which is really our backend system.

01:04:26.119 --> 01:04:32.440
It handles AR, AP, GL, our complete inventory,
our rental counter, our point of sale.

01:04:32.440 --> 01:04:36.210
It really is the heart of our business.

01:04:36.210 --> 01:04:41.650
We have some Microsoft SQL Servers,
HRIS system, data warehouse.

01:04:41.650 --> 01:04:43.670
We have a Microsoft CRM Server.

01:04:43.670 --> 01:04:48.329
What we do is we have a .Net Server kind of in the middle

01:04:48.329 --> 01:04:53.179
and it handles all the communication
between the back office and our iPhones.

01:04:53.179 --> 01:04:55.899
Everything is requested through that .Net Server.

01:04:55.900 --> 01:04:58.630
We handle it via web services.

01:04:58.630 --> 01:05:03.519
Now, if we have to get data from SQL Server
it's handled through stored procedures.

01:05:03.519 --> 01:05:06.360
If we have to get it from CRM, we'll use their approved API.

01:05:06.360 --> 01:05:13.829
And for the 400, it's a little bit of stored
procedures as well as some RPG programs.

01:05:13.829 --> 01:05:23.500
The data is then transmitted from the .Net Server to
the iPhone via XML over HTTPS, so it's all encrypted.

01:05:23.500 --> 01:05:31.000
Now to get that data, we make an
HTTPS GET request to the web service.

01:05:31.000 --> 01:05:34.219
That data is then transmitted down as I said as XML.

01:05:34.219 --> 01:05:41.609
We wrote a custom wrapper for XML parsing that
basically goes through the XML, creates objects,

01:05:41.610 --> 01:05:45.510
uses key value coding, fills those
models in that we displayed in the UI.

01:05:45.510 --> 01:05:50.860
We do just the reverse when we have to post data.

01:05:50.860 --> 01:05:52.910
We have a SOAP class.

01:05:52.909 --> 01:05:57.719
We go ahead and we get a list of
all the properties for our objects.

01:05:57.719 --> 01:06:00.250
We serialize those out to XML.

01:06:00.250 --> 01:06:02.389
We then put some SOAP patterns on it.

01:06:02.389 --> 01:06:04.449
We do an HTTPS post.

01:06:04.449 --> 01:06:09.000
So we can do that both for single
objects as well as array of objects.

01:06:09.000 --> 01:06:12.800
And again, the data is all encrypted.

01:06:12.800 --> 01:06:17.570
Now to do all this, we needed to have a security model.

01:06:17.570 --> 01:06:22.900
So the way we architected it is
the device asks for an employee ID,

01:06:22.900 --> 01:06:26.970
everybody knows their employee
ID, and it asks for a password.

01:06:26.969 --> 01:06:34.099
We then pass that through our system, we hit our HRIS
system, we validate there that they're a current employee.

01:06:34.099 --> 01:06:37.529
If they are, we basically use a token or a GUID.

01:06:37.530 --> 01:06:39.730
We store that in the database.

01:06:39.730 --> 01:06:47.559
We shoot it down to the iPhone and we cache
it on the iPhone for a period of 24 hours.

01:06:47.559 --> 01:06:54.659
Any data quest that-- data request that
happens from that iPhone must have that token

01:06:54.659 --> 01:07:02.019
and that token must be valid, otherwise
we don't give it any data.

01:07:02.019 --> 01:07:05.230
So here are some best practices.

01:07:05.230 --> 01:07:10.340
Involve your users early in the
development process, listen to them.

01:07:10.340 --> 01:07:16.870
They generally know what they want, and by involving
them, you make them part of the process, you empower them.

01:07:16.869 --> 01:07:19.980
When they're empowered, they will
make sure you are successful.

01:07:19.980 --> 01:07:25.760
Have a well defined and agreed upon
feature set, but be ready for change.

01:07:25.760 --> 01:07:29.130
This is a new mobile platform.

01:07:29.130 --> 01:07:33.900
You're going to make changes throughout
the process because it's new.

01:07:33.900 --> 01:07:41.860
Develop and deploy in phases, and that will help you keep
on track with making sure you're meeting that feature set.

01:07:41.860 --> 01:07:44.370
Follow the UI guidelines.

01:07:44.369 --> 01:07:48.679
Can't stress this enough, if you make
your app, work like the built-an apps,

01:07:48.679 --> 01:07:52.730
there will be no training for your users, whatsoever.

01:07:54.039 --> 01:07:58.079
Architect once, leverage often.

01:07:58.079 --> 01:08:00.239
This is kind of an interesting story.

01:08:00.239 --> 01:08:05.269
As we were getting ready to deploy an additional
1100 phones, up until that point it was kind

01:08:05.269 --> 01:08:09.869
of onesie-twosie, maybe 20 at a time, very manual.

01:08:09.869 --> 01:08:12.319
We started to say, "Well you know,
we got to get Exchange on there.

01:08:12.320 --> 01:08:15.360
How are we going to get that config file down to the users?"

01:08:15.360 --> 01:08:21.239
Well, best practices says that
you go ahead and put a website up.

01:08:21.239 --> 01:08:26.939
Have a, you know, login and then you can download the
provision file to the device and set your email up.

01:08:26.939 --> 01:08:32.309
And the light went off and we said, "You know,
we did that already, we built it into the app."

01:08:32.310 --> 01:08:37.580
So what we do is when you're setting up, put your user
ID in, your password in, then would give you a GUID.

01:08:37.579 --> 01:08:40.689
You know, you verified your user.

01:08:40.689 --> 01:08:47.799
We then open up another row in the table that's to set
up email, and we simply just launch an HTTPS request

01:08:47.800 --> 01:08:52.820
with our GUID to our backend server and request
for the mobile config file to come down.

01:08:52.819 --> 01:08:56.170
It can't be simpler than that and
it's completely integrated.

01:08:56.170 --> 01:09:01.930
They don't have to type a web address in, they don't
have to do anything but set up the application.

01:09:03.270 --> 01:09:07.850
So, what's next for Sunbelt Rentals?

01:09:07.850 --> 01:09:09.079
Literally the sky is the limit.

01:09:09.079 --> 01:09:11.890
This is a new mobile platform for us.

01:09:11.890 --> 01:09:19.940
We've added a feedback feature right into our application
so that our users can easily give us feedback as far

01:09:19.939 --> 01:09:23.319
as enhancement requests, possible
bugs, it's all entered right

01:09:23.319 --> 01:09:27.449
into our CRM system, and the feedback has been phenomenal.

01:09:27.449 --> 01:09:29.909
We're getting requests probably faster than we can code them

01:09:29.909 --> 01:09:34.779
which is obviously a good thing
because it helps us keep going.

01:09:34.779 --> 01:09:39.210
We're also finding that we're getting people from other
business units that are coming to us and saying, "Wow,

01:09:39.210 --> 01:09:43.109
you see what you did for the sales
force, what about service?"

01:09:43.109 --> 01:09:46.710
So, it's just going to continue to grow.

01:09:46.710 --> 01:09:53.430
Mobile SalesPro as well as the iPhone is definitely
changing the way we do business at Sunbelt Rentals.

01:09:53.430 --> 01:09:54.990
Thank you everyone for your time.

01:09:54.989 --> 01:10:00.949
[ Applause ]

01:10:00.949 --> 01:10:05.569
>> So when we created the iPhone,
we knew we had something special.

01:10:05.569 --> 01:10:10.679
But as we put these devices in our customers' hands
and giving them an SDK, I'm just really blown away

01:10:10.680 --> 01:10:12.950
with what they've been able to do with it.

01:10:12.949 --> 01:10:15.579
That's a great story Dean, thank you.

01:10:15.579 --> 01:10:24.809
So we covered integration of the iPhone into
your existing enterprise infrastructure.

01:10:24.810 --> 01:10:27.600
We covered deploying the iPhone out to your end-users

01:10:27.600 --> 01:10:34.150
and we've covered developing in-house
applications for your specific business needs.

01:10:34.149 --> 01:10:38.349
I'd like to thank all of you for attending the session
and I'd really like to thank our guest presenters,

01:10:38.350 --> 01:10:39.490
and can you give them a round of applause.

01:10:39.489 --> 01:10:39.550
[ Applause ]

01:10:39.550 --> 01:10:48.250
>> Duncan Keefe from Apple, Cheryl Madson from
Cisco, and Dean Moore from Sunbelt Rentals,

01:10:48.250 --> 01:10:49.630
thank you and enjoy the rest of the week.

01:10:49.630 --> 01:10:51.630
[ Applause ]