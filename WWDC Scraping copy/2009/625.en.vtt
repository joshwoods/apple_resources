WEBVTT

00:00:12.839 --> 00:00:16.259
>> Welcome to iPhone Security Best Practices.

00:00:16.260 --> 00:00:18.920
My name is Dallas De Atley.

00:00:18.920 --> 00:00:20.330
I'm an Engineer with Core OS.

00:00:20.329 --> 00:00:25.469
And today we're going to talk about integrating the
iPhone and the iPod Touch into the corporate environments.

00:00:25.469 --> 00:00:35.939
We're going to review some of the basic challenges that
IT departments face with mobile devices in general.

00:00:35.939 --> 00:00:43.109
And we want to expose you to the best practices
for integrating the iPhone into your organization.

00:00:43.109 --> 00:00:48.119
In doing so, we want to talk about the
iPhone system integrity and how we work

00:00:48.119 --> 00:00:54.579
at protecting not only the user's data but also the
services that the user might access with their iPhone.

00:00:54.579 --> 00:01:00.799
We're also going to talk about some of the security
enhancements we've introduced in iPhone OS 3.0.

00:01:00.799 --> 00:01:02.390
So what you're going to learn today?

00:01:02.390 --> 00:01:08.019
We're going to talk about the built-in security
features to the iPhone and how we use them

00:01:08.019 --> 00:01:10.629
and how you can take advantage of them as well.

00:01:10.629 --> 00:01:16.489
We're going to talk about what it means to
maintain the system integrity of the iPhone.

00:01:16.489 --> 00:01:22.719
And we're going to talk about the tools and methods and
you can use for enforcing your organization's policies

00:01:22.719 --> 00:01:27.640
about how the users can protect
their data and access your services.

00:01:29.219 --> 00:01:33.700
And with that I'd like to introduce Shawn Geddis,
who's going to talk to you about the challenges

00:01:33.700 --> 00:01:39.700
of using mobile devices in an IT environment.

00:01:39.700 --> 00:01:40.760
>> Thanks, Dallas.

00:01:40.760 --> 00:01:40.820
[ Inaudible Remark ]

00:01:40.819 --> 00:01:42.699
>> OK, welcome.

00:01:42.700 --> 00:01:48.329
Let's talk a little bit about the challenges, maybe you're
already facing with mobile devices and how this is going

00:01:48.329 --> 00:01:52.170
to fit well with getting the iPhone
and iPod Touches in there as well.

00:01:52.170 --> 00:01:57.019
So, first of all, Dallas mentioned we're
going to talk about system integrity.

00:01:57.019 --> 00:01:59.810
And we always like to be sure everyone is on the same page.

00:01:59.810 --> 00:02:05.390
So when talking about system integrity, we're really
talking about kind of protecting the whole envelope, right.

00:02:05.390 --> 00:02:13.159
All aspects of this is, the unauthorized access itself,
the disclosure, modification, that kind of stuff, right.

00:02:13.159 --> 00:02:14.469
So we want to maintain that.

00:02:14.469 --> 00:02:21.039
When you think of integrity, you want to be sure that
it stays the same unless you specifically modify things.

00:02:21.039 --> 00:02:26.819
So when we're going to be looking at system integrity, today
we want to look specifically at these four aspects, right.

00:02:26.819 --> 00:02:28.949
We're going to start out with physical integrity.

00:02:28.949 --> 00:02:34.509
We're going to be looking at application integrity,
going to data integrity, and then finishing up with user.

00:02:34.509 --> 00:02:37.859
OK, so that's kind of the quadrant
we're going to be walking through here.

00:02:37.860 --> 00:02:42.560
Now, all of you know, when it comes to
security, the biggest thing that you deal

00:02:42.560 --> 00:02:45.759
with on a daily basis is risk management, right.

00:02:45.759 --> 00:02:47.870
Security is a constant battle.

00:02:47.870 --> 00:02:50.490
There's no perfect silver bullet.

00:02:50.490 --> 00:02:55.520
There's no perfect time and space where you
can say, I can relax, I'm secure, right.

00:02:55.520 --> 00:02:57.500
It's a constant daily battle.

00:02:57.500 --> 00:03:01.419
And the biggest concern that we all
have, when you think about that quadrant,

00:03:01.419 --> 00:03:04.309
is the things we don't know we don't know, right.

00:03:04.310 --> 00:03:06.689
We're always trying to close that in.

00:03:06.689 --> 00:03:12.109
So the key about risk management here is the fact
that we need to identify what those risks are.

00:03:12.110 --> 00:03:16.890
We need to prioritize that and then figure out how
we're going to deal with that, in your own environment.

00:03:16.889 --> 00:03:21.729
So today, we're not telling you exactly
you better do this, this, and this.

00:03:21.729 --> 00:03:26.759
We're helping you understand how you need
to apply this in your environment, OK.

00:03:26.759 --> 00:03:34.669
So when it comes to mobile devices in your
environment, one of the biggest issues with any kind

00:03:34.669 --> 00:03:39.250
of mobile device is concern for loss or theft, right.

00:03:39.250 --> 00:03:44.819
What happens when I no longer physically
have control of that device in my hands?

00:03:44.819 --> 00:03:47.459
Anything can happen at that point, right.

00:03:47.460 --> 00:03:55.430
The access of data, whether it's data maybe across the
wire, whether it's data physically stored somewhere,

00:03:55.430 --> 00:03:59.890
it's access to confidential, maybe sensitive information.

00:03:59.889 --> 00:04:02.559
And then finally, your running application is on there.

00:04:02.560 --> 00:04:04.530
As we all know, we are at a developers' conference.

00:04:04.530 --> 00:04:07.409
We're constantly trying to improve
our own applications, right.

00:04:07.409 --> 00:04:09.319
You're developing and enhancing your apps.

00:04:09.319 --> 00:04:11.039
We keep identifying issues.

00:04:11.039 --> 00:04:12.019
We fix that.

00:04:12.020 --> 00:04:12.600
You go on.

00:04:12.599 --> 00:04:15.739
So you're always worried about application integrity itself.

00:04:15.740 --> 00:04:18.389
You're worried about maybe the weaknesses on that side.

00:04:18.389 --> 00:04:20.199
So those are the risks you take.

00:04:20.199 --> 00:04:23.389
What are the steps you take to
kind of mitigate those problems?

00:04:23.389 --> 00:04:28.539
Well, some of you in this room might fit that first
one, that is-- or your organization might fit that way,

00:04:28.540 --> 00:04:30.550
and that is we just deny the device, right.

00:04:30.550 --> 00:04:35.759
You may have had all kinds of PDAs
or Smartphones over the many years.

00:04:35.759 --> 00:04:42.420
Lots of organizations start out with we're just not going to
allow it, right, kind of a draconian, you cannot have this.

00:04:42.420 --> 00:04:46.759
The other folks you might say, here's the
device and then you kind of go and you hope

00:04:46.759 --> 00:04:50.050
that they know what they're doing, right.

00:04:50.050 --> 00:04:51.300
Those are two extremes.

00:04:51.300 --> 00:04:58.150
And today what we really want to talk about is helping you
understand how you need to apply these potential policies

00:04:58.149 --> 00:05:02.379
and controls to help the iPhone
fit into your specific environment.

00:05:02.379 --> 00:05:05.879
So we're about the policies on iPhone.

00:05:05.879 --> 00:05:13.860
So the enforcement, we want to ensure that this
helps meet your requirements in your agencies.

00:05:13.860 --> 00:05:16.370
But, first of all, you need to know what those policies are.

00:05:16.370 --> 00:05:20.889
There are a lot of folks whether
they're developers or even in the IT,

00:05:20.889 --> 00:05:24.560
they want to kind of railroad a
new device in their organization.

00:05:24.560 --> 00:05:27.439
They're not familiar with the IT policies.

00:05:27.439 --> 00:05:28.850
First and foremost, get a hold of that.

00:05:28.850 --> 00:05:31.020
If you don't, know it inside now, right.

00:05:31.019 --> 00:05:35.310
You need to know what you're against, what you need to meet.

00:05:35.310 --> 00:05:40.110
Then you need to-- lots of you start to learn more about
some of the security features built-in to the device

00:05:40.110 --> 00:05:41.129
and we're going to talk about that today.

00:05:41.129 --> 00:05:43.589
That is, what are those features in this new device?

00:05:43.589 --> 00:05:48.909
What is it that you can leverage
immediately to help meet those policies?

00:05:48.910 --> 00:05:52.540
First and foremost, what we want to help
you understand is how to take this iPhone

00:05:52.540 --> 00:05:54.689
from factory fresh to corporate compliant?

00:05:54.689 --> 00:05:56.319
How do you get it that way, OK?

00:05:56.319 --> 00:06:01.860
So again we're going to make our way around these quadrants.

00:06:01.860 --> 00:06:04.180
We're going to start with physical integrity.

00:06:04.180 --> 00:06:09.530
And before I do that, I kind of wanted to
bring up this quick notice to most of you.

00:06:09.529 --> 00:06:12.919
By now, since it's the end of the
week, you should be aware of this.

00:06:12.920 --> 00:06:19.129
But with iPhone Configuration Utility 2.0, all new
stuff here, not only are you getting much more kind

00:06:19.129 --> 00:06:25.980
of granular policies that you can apply here,
is that for many of you one key aspect has been

00:06:25.980 --> 00:06:29.430
that you can now prevent the removal of that.

00:06:29.430 --> 00:06:34.329
Once it's applied to the phone, prevent the
removal of that unless you wipe the device, right.

00:06:34.329 --> 00:06:41.399
In many environments, before you could get the configuration
profile applied but then the user would remove it.

00:06:41.399 --> 00:06:45.909
In your environment where it's very strict,
you needed to be sure that it wasn't removed.

00:06:45.910 --> 00:06:48.500
With 2.0 that's an important part.

00:06:48.500 --> 00:06:52.949
So we're going to be referencing different
pieces of this throughout the session.

00:06:52.949 --> 00:06:55.180
So physical integrity, right, what are we talking about?

00:06:55.180 --> 00:07:00.389
We're talking about accessing this machine,
protecting from unauthorized access to the phone.

00:07:00.389 --> 00:07:01.930
What does that entail?

00:07:01.930 --> 00:07:05.240
Think about, first of all, the pass code protection, right.

00:07:05.240 --> 00:07:10.439
Right on the screen you get out fresh out of
the box, things that are available to you.

00:07:10.439 --> 00:07:13.300
You do the enforcement of the passcode, you got the length.

00:07:13.300 --> 00:07:14.620
You do things as a simple PIN.

00:07:14.620 --> 00:07:21.730
You got history there and automatic lock, you
know, you kind of automatically lock the screen.

00:07:21.730 --> 00:07:27.050
And then the ten failed attempts where if it
fails, then it automatically wipes the data, right.

00:07:27.050 --> 00:07:30.150
That's kind of an out of the box experience there.

00:07:30.149 --> 00:07:35.469
So you're seeing a lot of slides there.

00:07:35.470 --> 00:07:42.330
OK. Now, with 2.0 we've given you that
ability to now do that by policy, right.

00:07:42.329 --> 00:07:46.759
You're extending this and the bracketed areas
towards the bottom here are really kind of the ranges

00:07:46.759 --> 00:07:51.610
that you have available to you in
the iPhone Configuration Utility.

00:07:51.610 --> 00:07:57.240
Of course, depending on where you are in that kind of
security sensitivity range is where you're going to fit

00:07:57.240 --> 00:08:02.030
within the range for each one of
these, for instance, the complexity.

00:08:02.029 --> 00:08:05.439
If you're in a highly sensitive
environment, you may make that four.

00:08:05.439 --> 00:08:11.129
If you're not so highly sensitive or this is kind of in
your work group area, you might stay in the lower end.

00:08:11.129 --> 00:08:14.000
Again, this is kind of talking about
things you need to think about.

00:08:14.000 --> 00:08:21.220
The failed attempts, again that gets back
to if your device is out of your hands.

00:08:21.220 --> 00:08:23.310
Somebody attempts to try to do that.

00:08:23.310 --> 00:08:28.490
What's the range that you feel comfortable
with before that device gets wiped?

00:08:28.490 --> 00:08:32.330
Again, all in 2.0.

00:08:32.330 --> 00:08:39.070
Those of you that leverage Exchange ActiveSync, add that
additional capabilities with the passcode enforcement

00:08:39.070 --> 00:08:46.980
from that side adding a lot to what we have, in
addition to what we just talk about with local

00:08:46.980 --> 00:08:51.200
in our password-- or iPhone Configuration Utility, OK.

00:08:51.200 --> 00:08:54.680
You get all the additional capabilities
with passcode enforcement.

00:08:54.679 --> 00:08:56.589
Now, again, think of local.

00:08:56.590 --> 00:08:59.600
We're thinking of physical integrity here.

00:08:59.600 --> 00:09:03.450
The local restrictions or we just
think of restrictions on the phone.

00:09:03.450 --> 00:09:08.420
So for 2.2 that you had, you've been able to lock things
down, prevent it from going to the App Store if you're

00:09:08.419 --> 00:09:11.610
in an environment where you don't
want additional apps installed,

00:09:11.610 --> 00:09:14.330
even the hardware, right, the disablement of the camera.

00:09:14.330 --> 00:09:17.370
There's many environment where when you're in a facility,

00:09:17.370 --> 00:09:21.810
you can't have the camera or a
device that has a camera in it.

00:09:21.809 --> 00:09:22.459
Nice thing, right.

00:09:22.460 --> 00:09:24.129
Now, you can lock that down.

00:09:24.129 --> 00:09:28.529
So you-- restrictions here is up
on the third, the 3.0 version.

00:09:28.529 --> 00:09:32.159
We even added location, gave you
in the in-app purchase control.

00:09:32.159 --> 00:09:36.799
Now you get more functionality in the phone and
you've got more ability to lock all these things

00:09:36.799 --> 00:09:41.219
down if it's appropriate in your environment.

00:09:41.220 --> 00:09:49.509
So with the iPhone Configuration Utility here as well with
the 3.0 side, now you have the ability of these restrictions

00:09:49.509 --> 00:09:52.659
on the policy side before you had it directly on the phone.

00:09:52.659 --> 00:09:56.620
OK, nice again being able to force by
policy the camera in many environments.

00:09:56.620 --> 00:10:04.889
I think if any of you have come to WWDC year after year,
we've done a lot of kind of security best practices for OS X

00:10:04.889 --> 00:10:09.519
in that environment and any devices
in all of the organizations.

00:10:09.519 --> 00:10:15.149
Frequently, one of the biggest
challenges is dealing with all kinds

00:10:15.149 --> 00:10:17.529
of environments where your devices are used, right.

00:10:17.529 --> 00:10:18.740
>> A lot of us go to hot spots.

00:10:18.740 --> 00:10:23.649
A lot of us go to other network environments
where we don't control the network,

00:10:23.649 --> 00:10:26.720
where that be Wi-Fi, Bluetooth, that kind of stuff.

00:10:26.720 --> 00:10:32.180
So this is typical security best practice you you'll
from anywhere and that is if you're not using a service,

00:10:32.179 --> 00:10:37.769
it's always best to disable things, always best
to just turn it off if you're leveraging it.

00:10:37.769 --> 00:10:40.720
OK? Again, it gets to that lower quadrant of the unknown.

00:10:40.720 --> 00:10:42.300
What you don't know, you don't know.

00:10:42.299 --> 00:10:47.000
And of course, a lot folks kind of nicely
leverage our built-in Airplane Mode,

00:10:47.000 --> 00:10:51.000
do that and instantly you've disable the radios as well.

00:10:51.000 --> 00:10:55.690
[ Pause ]

00:10:55.690 --> 00:10:58.110
>> So, think about the SIM as well.

00:10:58.110 --> 00:11:01.830
You've got a SIM chip in the phone, so
we're talking about iPhone and iPod Touch.

00:11:01.830 --> 00:11:04.150
So in the phone you got the SIM.

00:11:04.149 --> 00:11:07.970
Also consider the fact of adding
the PIN on the SIM itself, right,

00:11:07.970 --> 00:11:12.050
kind of a second level protection
at least on the server side.

00:11:12.049 --> 00:11:21.539
And the fact that there is, all kinds of data
physically that you're accessing another services.

00:11:21.539 --> 00:11:25.120
Other environments, you've got stuff on a SIM right?

00:11:25.120 --> 00:11:28.590
We even give you the ability if
you had SIM and all, just sends in.

00:11:28.590 --> 00:11:32.379
I'm not personally familiar with a lot of folks
that have gotten some of the context stuff

00:11:32.379 --> 00:11:36.049
on the SIMs but you've be able to import that.

00:11:36.049 --> 00:11:40.099
I've seen a fair amount of folks put
lots of sensitive information or content.

00:11:40.100 --> 00:11:43.560
So think about displays on the front of your phone.

00:11:43.559 --> 00:11:52.449
Have you ever been in a meeting or been somewhere and
somebody sends you a message and it displays on your screen

00:11:52.450 --> 00:11:55.780
and it may not be appropriate at the
time, OK, that's kind of the personal side

00:11:55.779 --> 00:11:58.220
but what about confidential information as well, right?

00:11:58.220 --> 00:12:05.110
This is-- if that's a probability of an issue in your
environment, go ahead and just turn off the SMS display off.

00:12:05.110 --> 00:12:11.870
Again, it's being able to control the unexpected
that you don't have kind of the timing control.

00:12:11.870 --> 00:12:17.799
And when it comes in-- and this is really
more so for extremely sensitive environments

00:12:17.799 --> 00:12:19.629
in largely government and things like that.

00:12:19.629 --> 00:12:25.259
There are a lot of folks in that place that have to
deal with knowing whether a device records as well.

00:12:25.259 --> 00:12:30.629
So be aware of the fact that you can go ahead and
do some recording on this device as well, right?

00:12:30.629 --> 00:12:32.429
It's just something to be aware about.

00:12:32.429 --> 00:12:35.459
I've been in several meetings, even in
the last couple of weeks where you had

00:12:35.460 --> 00:12:39.090
to leave devices outside the room
just because they could record.

00:12:39.090 --> 00:12:42.090
So again, that's just something to be aware of.

00:12:42.090 --> 00:12:47.600
So as we talk about this maintaining integrity
around, let me turn things over to Michael Brouwer

00:12:47.600 --> 00:12:50.960
and we're going to look at application integrity.

00:12:50.960 --> 00:12:56.389
What Apple is providing in the phone to
help protect on the applications side.

00:12:56.389 --> 00:12:56.899
Mike.

00:12:56.899 --> 00:13:02.549
>> Thank you Shawn.

00:13:02.549 --> 00:13:04.609
So application integrity.

00:13:04.610 --> 00:13:12.060
What we're doing on the phone is we're trying
to protect applications from modification.

00:13:12.059 --> 00:13:25.729
And doing so, through couple of different technologies
and first of all we're doing code signing which ensures

00:13:25.730 --> 00:13:32.180
that application is actually the same application that the
developer built on his machine when the application running

00:13:32.179 --> 00:13:36.339
on the device is the same application to develop
or built on a machine and hasn't been changed

00:13:36.340 --> 00:13:39.250
since the developer for-- developer compiled.

00:13:39.250 --> 00:13:47.539
Other technology we're going to talk about is sandboxing
which ensures that one application can't get at the data

00:13:47.539 --> 00:13:52.740
of another application and that application can't
modify sensitive system information as well.

00:13:52.740 --> 00:13:56.060
In thirdly, I'm going to talk about distribution.

00:13:56.059 --> 00:14:01.449
Obviously, we have distribution to the App
Store but there's also distribution for--

00:14:01.450 --> 00:14:07.360
which is probably more interesting for the people here
which is distribution of the custom IT applications to users

00:14:07.360 --> 00:14:11.009
that aren't getting distributed through the store.

00:14:11.009 --> 00:14:15.100
So code signing.

00:14:15.100 --> 00:14:18.050
Why do we do code signing?

00:14:18.049 --> 00:14:21.969
Well it's-- to ensure that the
application hasn't been changed.

00:14:21.970 --> 00:14:24.910
It prevents the application from being
changed after it's been installed.

00:14:24.909 --> 00:14:30.610
So at install time, we verify the entire
application but every time you launch an application,

00:14:30.610 --> 00:14:34.350
every time a code page of an application
is loaded into the memory,

00:14:34.350 --> 00:14:37.240
we check that that code page hasn't been tampered with.

00:14:37.240 --> 00:14:47.980
And doing so ensures that no virus or other
modifications to the device could cause that application

00:14:47.980 --> 00:14:54.170
to behave unexpectedly or at least behave
differently than the developer wanted it to.

00:14:54.169 --> 00:15:01.779
So what it won't do is it won't prevent the application from
doing something wrong if the developer compiled it with,

00:15:01.779 --> 00:15:06.039
you know, malicious code in there
already or if there were just bugs in it.

00:15:06.039 --> 00:15:10.730
It also-- code signing also doesn't
protect the data part of the application.

00:15:10.730 --> 00:15:12.210
We're only signing code pages.

00:15:12.210 --> 00:15:16.970
So we're not signing any resources your
application might load or NIBs or tips that,

00:15:16.970 --> 00:15:19.629
you know, graphics that it might load, et cetera.

00:15:19.629 --> 00:15:24.990
And it also doesn't protect network traffic.

00:15:24.990 --> 00:15:28.870
That's up to the application to use
the appropriate APIs to do that.

00:15:28.870 --> 00:15:33.750
And if your application is accessing data on
the network, it's up to you as the developer

00:15:33.750 --> 00:15:37.080
to make sure you do appropriate authentication first.

00:15:38.460 --> 00:15:46.860
So in addition to signing, to the code
signing part, we have to determine whether

00:15:46.860 --> 00:15:52.180
or not to trust a particular application
and whether or not to allow it to run.

00:15:52.179 --> 00:15:57.599
And there are two ways that an application
can be allowed to run on the phone.

00:15:57.600 --> 00:16:02.990
One is if it's developed by a third party and
signed by Apple which is applications loaded

00:16:02.990 --> 00:16:06.240
to the App Store are that, are signed that way.

00:16:06.240 --> 00:16:11.779
So developer builds the application, you sign it
with your code signature, send it to the App Store.

00:16:11.779 --> 00:16:17.909
The Store goes through its bidding process
and assuming the application is accepted,

00:16:17.909 --> 00:16:21.649
Apple re-signs the application and puts it up on the store.

00:16:21.649 --> 00:16:27.829
So when someone downloads it, it's signed by Apple,
and therefore it's trusted to run on any device.

00:16:29.009 --> 00:16:34.370
Second way is when someone develops custom applications--

00:16:34.370 --> 00:16:39.560
custom in-house applications and those are
signed with regular developer identity.

00:16:39.559 --> 00:16:41.459
And the application doesn't get re-signed.

00:16:41.460 --> 00:16:48.759
Instead, you need to install a provisioning profile
onto your phone to allow that application to run.

00:16:48.759 --> 00:16:57.309
Now, that provisioning profile allows you to trust
additional applications in addition to the ones

00:16:57.309 --> 00:17:02.939
that are just on the store and it does
so by allowing the identity that was--

00:17:02.940 --> 00:17:08.210
that signed those applications to be trusted
to run applications on a particular device.

00:17:08.210 --> 00:17:15.150
In addition, provisioning profile can contain a
white list of devices on which that profile is valid.

00:17:15.150 --> 00:17:21.890
So that means that you can control on which
subset of devices your applications will run.

00:17:21.890 --> 00:17:27.620
So if you have a sensitive IT application, even though
that application leaked out that people outside--

00:17:27.619 --> 00:17:31.369
people outside of that white list
can't run that application.

00:17:31.369 --> 00:17:37.669
The profile itself is signed by Apple and
you obtained it through the developer portal.

00:17:37.670 --> 00:17:41.029
And application, like I said, is
signed by your in-house IT department.

00:17:41.029 --> 00:17:44.859
So once you have the provisioning profile, you
can develop new applications and new versions

00:17:44.859 --> 00:17:47.619
of your applications and deploy them at your own pace.

00:17:47.619 --> 00:17:55.109
You're not, you know, we're not a
middle man anymore at that point.

00:17:55.109 --> 00:18:02.240
So what are some of the benefits of doing the
code signing because-- so one of the thing--

00:18:02.240 --> 00:18:09.029
one of the main reasons we started off doing this when we
went from the, you know, 1.0 iPhone OS to the 2.0 iPhone OS,

00:18:09.029 --> 00:18:16.059
when we opened it up for applications is we wanted to limit
the amount of ways that rogue code could enter your device

00:18:16.059 --> 00:18:18.859
and essentially make your phone unusable.

00:18:18.859 --> 00:18:23.609
I mean everyone knows about, you know, all
the problems of different deskstop OS's today.

00:18:23.609 --> 00:18:29.039
And by having code signing, it significantly
raises the bar for code injection exploits

00:18:29.039 --> 00:18:34.589
in that the way the iPhone OS is
architected, in order for a code page

00:18:34.589 --> 00:18:39.029
to be marked executable, it has to be backed by a signature.

00:18:39.029 --> 00:18:41.190
So there is no way the kernel will allow you

00:18:41.190 --> 00:18:45.700
to make something executable unless
it's part of the assigned applications.

00:18:45.700 --> 00:18:51.500
So that raises the bar for, you know, viruses
and other types of attacks significantly.

00:18:51.500 --> 00:18:56.839
Of course, it doesn't protect against social
attacks, or like I said before, you know,

00:18:56.839 --> 00:18:59.419
correctness of the third party app code itself.

00:18:59.420 --> 00:19:02.080
It can't protect against bugs that were already there.

00:19:02.079 --> 00:19:08.139
And since code signing doesn't cover data,
it also doesn't cover data driven attacks.

00:19:08.140 --> 00:19:12.420
So modifications to the data could
still potentially be exploited.

00:19:15.420 --> 00:19:21.810
So talking about the data side, we have
a second technology called "sandboxing."

00:19:21.809 --> 00:19:30.159
Now, sandboxing is-- one of the technologies we
use for sandboxing is Mac OS X seatbelt technology

00:19:30.160 --> 00:19:33.830
and what we do is we try and give
each application the least amount

00:19:33.829 --> 00:19:37.669
of privileges it needs to be able to do what it needs to do.

00:19:37.670 --> 00:19:47.060
So the standard seatbelt profile for third party apps allows
your application access to its own files but not access

00:19:47.059 --> 00:19:56.369
to any other third party apps files and it allows
access to a limited set of shared system files.

00:19:56.369 --> 00:20:06.019
So what that buys us is it constrains access so that
you can only access authorized data and it prevents you

00:20:06.019 --> 00:20:11.529
from accessing or prevents an application from
accessing resources that shouldn't be changed.

00:20:11.529 --> 00:20:16.210
>> So application can't directly get to
some of the, you know, config settings

00:20:16.210 --> 00:20:23.309
or how to talk the GSM network for example.

00:20:23.309 --> 00:20:29.269
So, I talked earlier about distributing your
applications and the different ways you can do that,

00:20:29.269 --> 00:20:35.420
and this is for applications you've
built not through the App Store.

00:20:35.420 --> 00:20:40.550
So, you need a provisioning profile and an
application to be installed on the device.

00:20:40.549 --> 00:20:47.190
You can either use iTunes to do this or you
can use the iPhone Configuration Utility.

00:20:47.190 --> 00:20:54.019
iTunes were automatically push both the config profile
and the app to your phone or sync them to your phone.

00:20:54.019 --> 00:21:00.129
So that's what we've recommend for most users
since most users wouldn't be using iPCU.

00:21:01.349 --> 00:21:08.609
So, the way we distribute this with iTunes,
and this is assuming you're pushing the profile

00:21:08.609 --> 00:21:12.240
in a managed type environment,
if you have a managed machine,

00:21:12.240 --> 00:21:16.440
if you don't have a managed environment you can
just tell your users to download the profile,

00:21:16.440 --> 00:21:19.430
drag it on to iTunes and it gets installed.

00:21:19.430 --> 00:21:25.670
If you're in a managed type of system, you could
actually install those profiles with a script

00:21:25.670 --> 00:21:29.269
or with whatever management system you
use in one of the following directories.

00:21:29.269 --> 00:21:34.750
So, the user's home directory, there's a
provisioning profiles directory where iTunes looks

00:21:34.750 --> 00:21:38.410
and there's a system-wide provisioning
profiles directory as well.

00:21:38.410 --> 00:21:47.940
And you can override the place that iTunes looks for
those profiles by changing, what is it, preferences key.

00:21:47.940 --> 00:21:54.580
For the applications themselves, as the user drags them on
to iTunes it gets added to their library and it will sync.

00:21:55.700 --> 00:22:01.140
Now here is actually the same paths and example
for Windows, on Windows it's the same thing.

00:22:01.140 --> 00:22:06.780
For the apps, you just drag them on the profiles,
again, can either be dragged on or we can--

00:22:06.779 --> 00:22:10.269
you can programmatically install them
in one of the following locations.

00:22:10.269 --> 00:22:16.799
So, I'd like to show this in action.

00:22:19.690 --> 00:22:27.000
Alright, so you see the provisioning profiles
are not here in iTunes, we'll re-sync the device.

00:22:27.000 --> 00:22:39.079
[ Pause ]

00:22:39.079 --> 00:22:51.159
[ Noise ]

00:22:51.160 --> 00:22:57.910
>> Alright now we have, the app is on the
device but the profile's not there anymore,

00:22:57.910 --> 00:23:00.350
and as you see the app no longer launches.

00:23:00.349 --> 00:23:14.539
So if we go back and install the profile, and we can do
that either by dragging into iTunes and just for the sake

00:23:14.539 --> 00:23:20.700
of this demo I wanted to drag it into the
directory pretending we're a managed system,

00:23:20.700 --> 00:23:23.009
installing that profile there.

00:23:23.009 --> 00:23:32.000
If I re-sync the phone, and see,
the application launches again.

00:23:32.000 --> 00:23:37.089
[ Pause ]

00:23:37.089 --> 00:23:38.589
>> And here we go.

00:23:41.839 --> 00:23:46.509
So, sorry about the little hiccup [applause] [laughs].

00:23:46.509 --> 00:23:54.849
So, what you saw there was that in order
for the application to run on the phone,

00:23:54.849 --> 00:23:58.699
it needs to have both the provisioning
profile and the application there.

00:23:58.700 --> 00:24:03.690
Because the provisioning profiles
actually authorizes that app to run.

00:24:03.690 --> 00:24:10.250
And so, the provisioning profiles and the
apps can be both be distributed in, you know,

00:24:10.250 --> 00:24:15.289
whatever way you feel like as long as your users
have a way to get to them and it's actually easy

00:24:15.289 --> 00:24:20.940
if you have a managed setup to already pre-install those
profiles on your users' machines so they don't have

00:24:20.940 --> 00:24:25.029
to worry about the profile part of things.

00:24:25.029 --> 00:24:30.869
And with that, I would like to bring us on to the
next section, and just talk about Data Integrity.

00:24:30.869 --> 00:24:33.679
And for that I'll bring Shawn back up.

00:24:33.680 --> 00:24:35.410
>> Thank you Michael.

00:24:35.410 --> 00:24:35.660
>> OK.

00:24:35.660 --> 00:24:37.000
>> Thanks a lot.

00:24:37.000 --> 00:24:39.759
[ Applause ]

00:24:39.759 --> 00:24:42.519
[ Pause ]

00:24:42.519 --> 00:24:43.329
>> Side here.

00:24:43.329 --> 00:24:47.379
Now we're thinking of the physical data that
you're dealing with on a daily basis, right?

00:24:47.380 --> 00:24:50.780
When it comes down to it, that's
the most sensitive part, right?

00:24:50.779 --> 00:24:54.740
Apps, we've all got but we all have our own
data whether it's personal or corporate.

00:24:54.740 --> 00:24:59.370
So we're looking at what do we do to protect
modification or disclosure of that data.

00:24:59.369 --> 00:25:03.719
So we're going to look a little
bit about certificate-based trust.

00:25:03.720 --> 00:25:08.980
We're going to talk a little bit about
the encrypted backups now and the data

00:25:08.980 --> 00:25:11.370
that rests physically in the phone
and on your computer side.

00:25:11.369 --> 00:25:16.259
And again, heading-- relating this
to the application piece itself.

00:25:16.259 --> 00:25:25.410
So first of all, many folks are sometimes curious to
which certificates are automatically trusted on the phone.

00:25:25.410 --> 00:25:28.430
Keep in mind that we keep that in sync with Mac OS X.

00:25:28.430 --> 00:25:30.590
The best way-- or there are two ways to look.

00:25:30.589 --> 00:25:33.809
If you-- just a visual person,
you want to quickly look at list.

00:25:33.809 --> 00:25:37.379
If you look at the system roots
on Mac OS X, that's the list.

00:25:37.380 --> 00:25:43.040
If you truly want to see a separate very
voluminous document, go up to the K-based article

00:25:43.039 --> 00:25:47.329
and you'll see every single certificate contents listed out.

00:25:47.329 --> 00:25:54.919
And then of course, many of you are going to need to
push out and put your own corporate anchors because most

00:25:54.920 --> 00:26:01.240
of you have kind of your own server certificate,
you're going to need push out your own anchors

00:26:01.240 --> 00:26:05.390
to your machine, to your-- ultimately to your phones.

00:26:05.390 --> 00:26:08.300
So the configuration profile here of
course is the appropriate way to do this,

00:26:08.299 --> 00:26:11.690
right through the credential's panel
through the mobile config file.

00:26:11.690 --> 00:26:14.309
Do these as email attachments.

00:26:14.309 --> 00:26:19.529
Many folks were doing that early on, sending out
the certificates within their corporate environment.

00:26:19.529 --> 00:26:24.279
Users are either on Wi-Fi within the
organization, they get their e-mail.

00:26:24.279 --> 00:26:29.509
They install the certificates that way and
of course downloading it from a website, so.

00:26:29.509 --> 00:26:37.039
When you're thinking of the phone, say some of this is
education, some of this is just thinking of normal practice.

00:26:37.039 --> 00:26:41.159
If I'm on a phone and I go to a site and I see the fact

00:26:41.160 --> 00:26:44.269
that I can't establish a connection
to the server for various reasons.

00:26:44.269 --> 00:26:48.920
Why they can't-- it either can't validate the cert
or it just can't establish a connection, right?

00:26:48.920 --> 00:26:55.630
If this is within your organization, first and foremost that
should have been step one within your configuration profile

00:26:55.630 --> 00:26:58.290
to be adding your corporate certificates, right.

00:26:58.289 --> 00:27:01.230
That way the user's not dealing with that.

00:27:01.230 --> 00:27:08.110
Now, you always get to the point of-- if we didn't have
any users then we wouldn't have any problems, right.

00:27:08.109 --> 00:27:10.089
So the other part is training.

00:27:10.089 --> 00:27:17.059
If your users are outside of your control and they're
going to websites, first and foremost, if they do that,

00:27:17.059 --> 00:27:20.730
if they go to a site, kind of some external
site and they see that kind of thing,

00:27:20.730 --> 00:27:25.799
first reaction is you probably shouldn't connect, right.

00:27:25.799 --> 00:27:27.669
But connect with caution, right.

00:27:27.670 --> 00:27:33.529
If you're sure that that truly is the site,
you can proceed but proceed with caution.

00:27:33.529 --> 00:27:41.099
So again, largely that's typical user training if it's
outside your control, but if it's inside, it's your server,

00:27:41.099 --> 00:27:44.009
if the certificate is related to
you, truly you should be putting

00:27:44.009 --> 00:27:48.299
that inside your configuration
profile and handling it upfront.

00:27:48.299 --> 00:27:50.849
Next, think about data at rest on a computer, right.

00:27:50.849 --> 00:27:56.319
Now you've got your mobile device but you've
also got backups of that on your computer.

00:27:56.319 --> 00:28:03.189
And so now with iTunes, you've got the option of doing
the encrypted backup of what's on the phone, right.

00:28:03.190 --> 00:28:06.960
So what is physically on your phone
that does the backup as Michael is going

00:28:06.960 --> 00:28:09.779
through here, you saw iTunes doing the backups.

00:28:09.779 --> 00:28:16.809
Physically now, that's storing it, encrypted
data on the-- on your computer, right.

00:28:16.809 --> 00:28:23.039
Of course, you can do the standard entering of the
password and store that in the-- your Keychain as well.

00:28:23.039 --> 00:28:29.559
For those of you that like to tinker or need to know
where all this is, this is physically where it's located.

00:28:29.559 --> 00:28:38.679
So within the user's library directory, and note that that's
really the device ID in there, within there you're going

00:28:38.680 --> 00:28:47.610
to see blobs and lots of files related to the data
itself, and the corresponding manifest and all for that.

00:28:47.609 --> 00:28:49.069
So that's where it's located.

00:28:49.069 --> 00:28:55.939
If you really want to tinker around
and say, "Yes, Apple did encrypt it."

00:28:58.210 --> 00:28:59.039
So you check.

00:28:59.039 --> 00:29:02.599
OK. So now, some other approaches to think about.

00:29:02.599 --> 00:29:08.619
Think when the phone first came out, a lot
of people were doing just web services.

00:29:08.619 --> 00:29:16.289
Some of the best environments still, any concern with
data is, keep the sensitive data on a server, right.

00:29:16.289 --> 00:29:20.269
Not all applications require that
you put all the data on the phone.

00:29:20.269 --> 00:29:25.889
Many folks have some incredible applications on the
phone where all the data is always on the back end.

00:29:25.890 --> 00:29:29.820
They're doing real-time access,
partly, because the data changes.

00:29:29.819 --> 00:29:35.230
So, maintaining a secure connection to that
web service and accessing data in real-time,

00:29:35.230 --> 00:29:40.220
from kind of your back end servers, that's a great
way of ensuring that you only keep sensitive data

00:29:40.220 --> 00:29:43.150
on the servers and nonsensitive data on the phone.

00:29:43.150 --> 00:29:44.769
OK, that's one way.

00:29:44.769 --> 00:29:52.500
Another way is all the applications that you're
developing or that you're moving onto your phones,

00:29:52.500 --> 00:29:56.559
you've got the ability of doing the encryption
of that data within that app as well, right.

00:29:56.559 --> 00:30:06.119
That's always been very much available to you and other
developers to apply that to each individual application

00:30:06.119 --> 00:30:08.579
for storing a password in the Keychain app.

00:30:08.579 --> 00:30:13.500
So now, with the new phones, with
3G S, we're providing to you

00:30:13.500 --> 00:30:17.029
and all the end users the ability
with the hardware encryption, right.

00:30:17.029 --> 00:30:21.430
>> This is a great new way to help take this further.

00:30:21.430 --> 00:30:22.890
Couple of things to keep in mind with that.

00:30:22.890 --> 00:30:25.350
First of all, it's always on.

00:30:25.349 --> 00:30:29.589
That's a great thing for those of you
that have to meet compliance regulations.

00:30:29.589 --> 00:30:36.949
What I mean by that is, some of the best or-sorry, some of
the most difficult things within kind of IT management is

00:30:36.950 --> 00:30:39.890
to prove that your policies are enforced, right.

00:30:39.890 --> 00:30:42.960
To prove that all your devices are meeting the compliance.

00:30:42.960 --> 00:30:45.870
Well, if it's always on, there's
nothing for you to do, right.

00:30:45.869 --> 00:30:47.119
There's nothing for you to configure.

00:30:47.119 --> 00:30:49.699
There's nothing for you to have to worry about.

00:30:49.700 --> 00:30:51.370
It's on all the time.

00:30:51.369 --> 00:30:54.269
And so if you think about the performance
numbers and battery life and all,

00:30:54.269 --> 00:30:58.289
that is taking consideration that, again, it's always on.

00:30:58.289 --> 00:31:00.180
It's all the users' data, right.

00:31:00.180 --> 00:31:01.120
That's the important part.

00:31:01.119 --> 00:31:02.629
We talked about the applications.

00:31:02.630 --> 00:31:05.120
Michael went through about maintaining
the application integrity.

00:31:05.119 --> 00:31:06.419
It's the data there.

00:31:06.420 --> 00:31:08.390
That's what we're fully protecting.

00:31:08.390 --> 00:31:12.740
And of course, it's strong encryption,
it's this 256-bit AES.

00:31:12.740 --> 00:31:17.960
Coming in the 3G S, love to have
it in my hands now, coming soon.

00:31:17.960 --> 00:31:27.120
OK, many of you redeploy lots of your devices and I've seen
quite frequently the redeployment of laptops, desktops,

00:31:27.119 --> 00:31:32.929
and even mobile devices where lots of
sensitive data just went to somebody else, OK.

00:31:32.930 --> 00:31:39.150
So when you are redeploying, this becomes almost more
sensitive than when you've got a device fresh, right,

00:31:39.150 --> 00:31:41.769
because now there's potential for all kinds of stuff on it.

00:31:41.769 --> 00:31:44.190
So first of all, think about the local wipe.

00:31:44.190 --> 00:31:49.400
OK, that is you've got the ability of doing
a local wipe where they do the failed login

00:31:49.400 --> 00:31:54.440
or failed authentication side or
just the initiating of local wipe.

00:31:54.440 --> 00:32:00.759
So on the previous phones, takes about an
hour for every 8 gigs to do that erase.

00:32:00.759 --> 00:32:04.519
So if things die, you know, it's good to
always have things plugged in if it dies.

00:32:04.519 --> 00:32:07.650
It's going to keep going when it gets powered back up.

00:32:07.650 --> 00:32:09.930
And the 3G S is instantaneous wipe.

00:32:09.930 --> 00:32:16.600
So again, when you're meeting compliancy,
you know that you initiated that remote wipe.

00:32:17.609 --> 00:32:20.750
So when you're thinking again of
this redeploy, you can do this.

00:32:20.750 --> 00:32:25.990
I just mentioned about the remote wipe from
the exchange site, much like the passcode,

00:32:25.990 --> 00:32:32.630
additional passcode policy enforcement, you could initiate
that remote wipe from the exchange site as well, so, 2007,

00:32:32.630 --> 00:32:37.320
2003 way is here, then the new ways with MobileMe, right.

00:32:37.319 --> 00:32:45.119
So this gives you the ability of initiating that assurance
that you tell the device to go ahead and do that wipe.

00:32:45.119 --> 00:32:52.349
Now, we want to go take this further to our kind of our
last quadrant on this and that's on the user integrity side.

00:32:52.349 --> 00:32:54.250
And for that I'll bring up Mitch Adler.

00:32:54.250 --> 00:32:57.990
[Applause] Thank you, Mitch.

00:32:57.990 --> 00:33:00.839
[ Applause ]

00:33:00.839 --> 00:33:03.689
[ Pause ]

00:33:03.690 --> 00:33:07.460
>> So I'm going to talk to you a
little bit about user integrity.

00:33:07.460 --> 00:33:12.269
We consider user integrity ensuring users
get exactly the access they should have.

00:33:12.269 --> 00:33:18.519
This typically applies to the device wanting to communicate
back to your home servers, your services that you want

00:33:18.519 --> 00:33:24.940
to give your users, and how you prove that
this device belongs to a particular user.

00:33:24.940 --> 00:33:29.070
We have two sets of problems we're trying to address.

00:33:29.069 --> 00:33:31.559
The first is establishing users' credentials.

00:33:31.559 --> 00:33:34.990
You know, is this person really who
they say they are, authoritatively.

00:33:34.990 --> 00:33:39.079
And protector his credentials while
they're sitting on the device.

00:33:39.079 --> 00:33:43.379
Some of these credentials don't actually reside on
the device in an attempt to protect them even further

00:33:43.380 --> 00:33:49.780
but often those end up being passwords that users simplify
to the point where we don't even consider them secure.

00:33:49.779 --> 00:33:54.379
The other half of the problems we're trying to address
are problems that you and enterprise IT space have

00:33:54.380 --> 00:33:58.690
which is protecting your services from
unauthorized access and giving you a solid basis

00:33:58.690 --> 00:34:01.180
to have credentials established from our phone.

00:34:01.180 --> 00:34:05.110
At the same time, we're trying to support
industry standard verification methods

00:34:05.109 --> 00:34:09.769
to enhance our ability to fit into
your existing environment.

00:34:09.769 --> 00:34:13.989
Some of the forms of credentials we
support on the phone are simple passwords,

00:34:13.989 --> 00:34:18.199
mail and calendars support simple
passwords, the sense of being a shared secret

00:34:18.199 --> 00:34:21.809
that usually user knows and can be given away.

00:34:21.809 --> 00:34:25.159
So it has some shortcomings, but
many of our systems support it.

00:34:25.159 --> 00:34:30.049
You can make the user experience better by allowing
the user to save the password on the phone.

00:34:30.050 --> 00:34:37.440
We have one-time passwords used mainly on
the VPN, 802.1x configurations on our phone.

00:34:37.440 --> 00:34:42.130
This requires the user to enter the password every
time they want to use their service which means

00:34:42.130 --> 00:34:46.980
with our communication devices that keep bouncing on and
off networks that really hassles the user to say you want

00:34:46.980 --> 00:34:51.300
to get back to that service you were using 10 minutes
ago, now that you've picked your phone up again.

00:34:51.300 --> 00:34:55.320
So we don't typically like to recommend this
even thought it's a viable technique in there.

00:34:55.320 --> 00:34:59.860
And if your security needs call for it, you
absolutely should consider using one-time passwords.

00:34:59.860 --> 00:35:03.700
We prefer X.509 digital identities.

00:35:03.699 --> 00:35:06.480
These are useful in VPN, 802.1x.

00:35:06.480 --> 00:35:10.610
Safari can handle it using the
client-side auth in the 3.0 version.

00:35:10.610 --> 00:35:17.010
3.0 has also added the ability for
our Microsoft exchange services

00:35:17.010 --> 00:35:21.530
to use X.509 digital identities
for their user authorization.

00:35:21.530 --> 00:35:27.720
To go a little bit deeper into what an X.509
identity is, many of you probably already know this,

00:35:27.719 --> 00:35:31.189
but an X.509 identity is actually two parts.

00:35:31.190 --> 00:35:38.809
It's a certification of somebody's identity that takes a
public bit of information and identifies who the holder

00:35:38.809 --> 00:35:42.829
of this key is and what the permitted usage of that key is.

00:35:42.829 --> 00:35:49.029
And the private part, which is the secret that is used
to prove that I'm actually the holder of the secret key.

00:35:49.030 --> 00:35:51.700
So when I present my certificate to
somebody else, they can challenge me

00:35:51.699 --> 00:35:54.049
and say are you really you, and I can prove that I'm me.

00:35:54.050 --> 00:36:00.380
You can see examples of the pairs
on our desktop Keychain access.

00:36:00.380 --> 00:36:05.340
If you go in and look under identities, you'll find
often public certs and potentially the private keys

00:36:05.340 --> 00:36:09.340
if you have possession of them on your system.

00:36:09.340 --> 00:36:13.140
So in order to use these identities, I
actually have to make it to your device.

00:36:13.139 --> 00:36:17.259
In 2.0, we have three methods by which you
could deploy your identities to your device,

00:36:17.260 --> 00:36:22.770
all of which are based upon wrapping
identity in a PKCS 12 file and securing it.

00:36:22.769 --> 00:36:27.789
And all three of these mechanisms could take
those so you could web host a PKCS 12 file

00:36:27.789 --> 00:36:29.610
and you can import it on to the user's Keychain.

00:36:29.610 --> 00:36:34.140
You can send it to him via mail attachment
and you could also send it to them

00:36:34.139 --> 00:36:39.359
in our configuration profile via
iPhone Configuration Utility.

00:36:39.360 --> 00:36:44.510
In 3.0, we've added a new mechanism
to be able to deploy identities.

00:36:44.510 --> 00:36:46.730
It's direct enrollment from the iPhone.

00:36:46.730 --> 00:36:49.719
It uses the Simple Certificate Enrollment Protocol, SCEP.

00:36:49.719 --> 00:36:56.079
There was a session yesterday that went to rather great
detail on iPhone configuration creation and deployment.

00:36:56.079 --> 00:37:03.480
And if you're interested in more detail on how to implement
this and the IT side infrastructure you need in order

00:37:03.480 --> 00:37:09.309
to be able to do an SCEP server, I suggest
you go and check out that session online.

00:37:09.309 --> 00:37:11.869
It has great detail on it.

00:37:11.869 --> 00:37:19.929
One of the examples of us using the identities, and in this
case, using SCEP drive data identities is VPN on-demand.

00:37:19.929 --> 00:37:25.440
We at Apple are already using VPN on-demand and
enrollment of identities for our VPN access for many

00:37:25.440 --> 00:37:28.909
of our early adopters of the 3.0 software.

00:37:28.909 --> 00:37:34.009
Basically, we deploy an identity
through the configuration profiles

00:37:34.010 --> 00:37:36.880
to actually request to get an identity from our servers.

00:37:36.880 --> 00:37:43.500
When you install the configuration profile that goes off
to our servers, enrolls your public key in our VPN system

00:37:43.500 --> 00:37:47.920
and stores that on the device and then configures
our device to use the new feature of VPN on-demand.

00:37:47.920 --> 00:37:54.110
So when I pick up my device to get my mail, it automatically
invokes my VPN, proves it has my private key connects

00:37:54.110 --> 00:37:58.800
to our network, and gets my mail, which
is pretty damn cool in my opinion.

00:37:58.800 --> 00:38:01.230
There's one more opportunity I wanted to talk about.

00:38:01.230 --> 00:38:07.869
If you're building an application that's custom for your
environment and you want to explore some higher security

00:38:07.869 --> 00:38:12.259
or different authentication techniques, there is
an opportunity for you to take advantage of some

00:38:12.260 --> 00:38:15.030
of the new features that we've just put in 3.0.

00:38:15.030 --> 00:38:20.990
We have the new extensible IP technology where you can
have your own custom protocol and you can do this both

00:38:20.989 --> 00:38:26.779
over Bluetooth and over wired connections
over serial connections on a 30-pin.

00:38:26.780 --> 00:38:32.730
And if you have a need to have an app that has strong
two-factor authentication on external device that can--

00:38:32.730 --> 00:38:38.920
that actually controls the keys for this particular
application, using the open-ended protocol,

00:38:38.920 --> 00:38:43.159
the custom protocols you can put in as a good
opportunity for somebody to build an application

00:38:43.159 --> 00:38:48.889
that does this third party-- this
external two-factor authentication.

00:38:48.889 --> 00:38:56.129
And with that, we'll go back to Shawn and let
him sum up about our four quadrants of integrity.

00:38:56.130 --> 00:38:57.220
>> Thank you.

00:38:57.219 --> 00:39:00.199
[ Applause ]

00:39:00.199 --> 00:39:01.679
>> So thank you guys.

00:39:01.679 --> 00:39:04.690
So we've kind of gone around the
horn, got a couple last minute things.

00:39:04.690 --> 00:39:12.610
But hopefully, this has given you a really strong foundation
to take back, of knowledge to take back to your organization

00:39:12.610 --> 00:39:21.460
to know how to get the iPhone to fit in to your
corporate regulations, fit in to your infrastructure.

00:39:21.460 --> 00:39:29.400
Now, this was kind of a quick intro and it really
was leading in to some of really what the session was

00:39:29.400 --> 00:39:34.170
on the configuration, creation and deployment
session which was yesterday that Mitch had mentioned.

00:39:34.170 --> 00:39:41.119
So really refer to that, but keep in mind that when
you're doing the whole profile, configuration profile,

00:39:41.119 --> 00:39:45.420
and moving that to machines, and moving that to the phones,

00:39:45.420 --> 00:39:49.559
it ultimately comes down to the old
kind of carrot and stick thing, right.

00:39:49.559 --> 00:39:55.210
You want to be able to give someone access, but if
they get access, they play by your rules, right.

00:39:55.210 --> 00:39:59.920
You kind of do that management to
what's appropriate in your environment.

00:39:59.920 --> 00:40:05.289
But one typical thing that folks will do
in a single configuration profile is all

00:40:05.289 --> 00:40:07.670
of your credentials, much like we've been saying.

00:40:07.670 --> 00:40:14.500
That could be a single one and you might lump together
everything else into one large profile, enforcing passcodes,

00:40:14.500 --> 00:40:18.769
enforcing some of the other policies that you need to meet.

00:40:18.769 --> 00:40:22.719
>> So many of you would have seen
this as well in that same session.

00:40:22.719 --> 00:40:25.699
So, again, it's a great asset to you now to be able to do

00:40:25.699 --> 00:40:30.609
that over-the-air enrollment using
a SCEP with the new systems.

00:40:30.610 --> 00:40:36.150
So what we've taken in through here, first
of all is, anytime with security, right,

00:40:36.150 --> 00:40:42.769
you've got to balance your needs with risks, then
that's where you try to determine what policies,

00:40:42.769 --> 00:40:47.909
what a different configurations you need
to make, what adjustments to make it fit.

00:40:47.909 --> 00:40:49.909
But, hopefully, we've exposed you even further.

00:40:49.909 --> 00:40:52.399
This is the end of the week here at WWDC.

00:40:52.400 --> 00:40:58.950
But hopefully, we've exposed you further to some of
the additional security components being both hardware

00:40:58.949 --> 00:41:04.819
and software built-in to the current
and coming iPhones and iPod Touches,

00:41:04.820 --> 00:41:09.820
and then how to do that secure distribution
and managing in with the policies.

00:41:09.820 --> 00:41:16.950
But most of all, hopefully, we've given you adequate kind
of tools to your tool belt, so to speak, of going back

00:41:16.949 --> 00:41:23.219
and now taking the iPhones and
deploying them within your environment.

00:41:23.219 --> 00:41:27.079
Again, hopefully, regardless of what policies you have.

00:41:27.079 --> 00:41:31.079
We always like to end these sections
with where to go for more guidance.

00:41:31.079 --> 00:41:34.500
Much like I said in the beginning,
security is a constant battle.

00:41:34.500 --> 00:41:37.300
There is no way that we can say
that when you walk out this door,

00:41:37.300 --> 00:41:39.900
you're now secure because there are more challenges, right.

00:41:39.900 --> 00:41:42.519
You constantly maintain the stuff.

00:41:42.519 --> 00:41:50.230
So, first of all, many of you should have seen iPhone
in enterprise, kind of the landing page for all this.

00:41:50.230 --> 00:41:53.900
We have lots of folks that are
already deploying iPhones that are--

00:41:53.900 --> 00:41:57.680
have looked, you know, scrutinizing the
iPhone and how it fits their environment.

00:41:57.679 --> 00:41:59.250
They all have different risk environments.

00:41:59.250 --> 00:42:06.610
They all have different challenges that they face, a
great place to be starting with kind of your own pursuit

00:42:06.610 --> 00:42:08.950
of background information what you need to deal with.

00:42:08.949 --> 00:42:11.679
And there's going to be more profiles out of there as well.

00:42:11.679 --> 00:42:16.069
Of course, there's always our enterprise
landing page as well for the iPhone.

00:42:16.070 --> 00:42:18.490
And, of course, if you're on the developer's side,

00:42:18.489 --> 00:42:23.619
staying up with all the iPhone development
is key-- a key resource going forward.

00:42:23.619 --> 00:42:28.230
Again, with all of our security guidance
along the way, and this is really--

00:42:28.230 --> 00:42:34.070
I guess, I mainly somewhat talking
to the higher security focused folks,

00:42:34.070 --> 00:42:36.920
more so in government, some other environments.

00:42:36.920 --> 00:42:40.300
We've been collaborating but very closely with several

00:42:40.300 --> 00:42:44.910
of the government agencies specifically
on providing security best practices.

00:42:44.909 --> 00:42:47.670
So this is not just simply Apple saying what it is.

00:42:47.670 --> 00:42:51.630
It's a collaboration, actually,
all the people involved in there--

00:42:51.630 --> 00:42:57.349
or agencies or Apple, we deal with national
security agency, with NIST and with DISA.

00:42:57.349 --> 00:43:03.569
So all of us jointly work on collaboration
with giving you additional guidance, you know,

00:43:03.570 --> 00:43:05.850
kind of the full written guidance on there.

00:43:05.849 --> 00:43:14.199
And within the federal space, there's ongoing work that
will come out to help with guidance in the phone as well.

00:43:14.199 --> 00:43:19.969
Work going like I just mentioned here and then it's even
with FDCC for those people that are familiar with that,

00:43:19.969 --> 00:43:24.959
the Federal Desktop Core Configuration that
carries over to handhelds, to mobile devices.

00:43:24.960 --> 00:43:30.900
Again, that's largely geared towards
even typically US government folks.

00:43:30.900 --> 00:43:33.240
OK, lots of resources.

00:43:33.239 --> 00:43:41.629
It's ongoing, so we hope that this has really given you
some good background, kind of added the tools to your belt.