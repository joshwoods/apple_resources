WEBVTT

00:00:13.800 --> 00:01:46.200
[Transcript missing]

00:01:47.000 --> 00:01:51.020
Well, other than being nervous,
here we go.

00:01:51.570 --> 00:01:55.220
Daylight is actually that slide's
not supposed to show up like that.

00:01:55.220 --> 00:01:58.000
But Daylight is a contact
and sales management solution

00:01:58.000 --> 00:02:04.890
specifically catered to small
businesses and sales professionals.

00:02:04.990 --> 00:02:07.000
So 1 to 25 kind of users.

00:02:07.000 --> 00:02:08.790
So it's an end user kind of solution.

00:02:08.800 --> 00:02:12.360
We fit in right into the
day-to-day applications for

00:02:12.360 --> 00:02:17.300
that target market such as Word,
Excel, Mail, that kind of thing.

00:02:17.300 --> 00:02:21.490
It's an application that
has to be up all the time.

00:02:22.080 --> 00:02:23.090
So this is what it looks like.

00:02:23.160 --> 00:02:26.630
It's very graphical, a lot of graphs,
a lot of nice little calendar

00:02:26.630 --> 00:02:30.890
bubbles and so on and so forth.

00:02:31.060 --> 00:02:33.150
I'll get into the Daylight specifics.

00:02:33.230 --> 00:02:38.350
First of all, it's 100% an
Objective-C Cocoa application.

00:02:38.480 --> 00:02:41.000
It connects through the OpenBase APIs.

00:02:41.000 --> 00:02:42.360
They're Cocoa APIs, actually.

00:02:42.360 --> 00:02:44.400
They have a whole bunch of APIs.

00:02:44.480 --> 00:02:50.680
It's built with Xcode, Interface Builder,
EOModeler, EOGenerator, CVS,

00:02:50.680 --> 00:02:51.700
Bash scripts.

00:02:51.710 --> 00:02:55.290
Is anybody familiar
with EOF or Core Data,

00:02:55.320 --> 00:02:57.160
that type of thing?

00:02:57.240 --> 00:02:58.040
So, a few of you.

00:02:58.040 --> 00:03:00.620
So, we've used some of those techniques.

00:03:00.640 --> 00:03:03.810
While we haven't used their technology,
we've used some of those techniques

00:03:03.950 --> 00:03:05.680
to build our application.

00:03:05.740 --> 00:03:09.770
And also, the whole development
process was very iterative.

00:03:09.780 --> 00:03:11.900
And I'll get back to this.

00:03:11.900 --> 00:03:13.590
I mentioned this for a reason.

00:03:13.660 --> 00:03:16.080
So, next thing was, you know,
how do I add some value to this

00:03:16.150 --> 00:03:18.880
presentation other than showing
you actually a product demo,

00:03:18.880 --> 00:03:21.190
which you can download
and see for yourselves?

00:03:21.270 --> 00:03:25.600
So, I figured we'll show you a little bit
about how we built this application.

00:03:25.760 --> 00:03:28.030
First of all,
it's a hybrid object relational system.

00:03:28.040 --> 00:03:32.590
It's totally key value coding compliant,
KVC compliant.

00:03:32.640 --> 00:03:35.650
And first of all, we -- oh,
wrong order here.

00:03:35.900 --> 00:03:38.630
First of all,
we start off with foundation.

00:03:38.640 --> 00:03:40.860
So, as everybody knows,
any Cocoa application,

00:03:40.940 --> 00:03:42.450
you've got to have foundation.

00:03:42.540 --> 00:03:45.840
The next thing is the OpenBase APIs.

00:03:45.840 --> 00:03:50.240
And those are also based on foundation,
but as far as we're concerned,

00:03:50.240 --> 00:03:52.530
that's the bottom layer because
that talks to the database.

00:03:52.620 --> 00:03:55.130
On top of that,
we have our persistence layer

00:03:55.130 --> 00:03:56.940
that we've built ourselves.

00:03:57.020 --> 00:03:57.680
And that adds a little bit
of a layer to the database.

00:03:57.680 --> 00:03:59.980
And that abstracts the database for us.

00:03:59.980 --> 00:04:03.590
And actually, this is where our EO model,
you know,

00:04:03.590 --> 00:04:08.280
you load in the EO model files and
the whole schema is kind of built.

00:04:08.280 --> 00:04:10.280
On top of that,
we have the Daylight substrate.

00:04:10.280 --> 00:04:11.480
And this is all objects.

00:04:11.480 --> 00:04:13.370
You know, we don't talk rows here.

00:04:13.380 --> 00:04:14.330
We don't talk tables here.

00:04:14.380 --> 00:04:19.680
We talk entities and properties,
so on and so forth.

00:04:19.680 --> 00:04:23.940
And that layer is where all the
Daylight business logic resides.

00:04:23.940 --> 00:04:27.250
It's totally UI independent
at this particular point.

00:04:27.320 --> 00:04:30.660
The next layer is, of course, the AppKit.

00:04:30.870 --> 00:04:37.920
Within the AppKit,
we use the document pattern, so to speak.

00:04:37.920 --> 00:04:41.410
And some of you who have seen the
core data sessions know about how

00:04:41.410 --> 00:04:47.520
a document works and how a document
is basically your portal to data.

00:04:47.520 --> 00:04:50.470
So Daylight can actually
connect to multiple databases

00:04:50.510 --> 00:04:51.780
at the exact same time.

00:04:51.920 --> 00:04:55.210
On top of that,
we have window controllers.

00:04:55.220 --> 00:04:56.960
And it's very much the same
thing as the other ones.

00:04:56.960 --> 00:04:58.560
It's the same thing
as NSWindowController,

00:04:58.560 --> 00:05:01.320
just subclasses that
abstract a few things for us.

00:05:01.390 --> 00:05:03.260
On top of that,
we have object controllers,

00:05:03.260 --> 00:05:08.440
also very similar to Cocoa Bindings,
except it's kind of our own stuff.

00:05:08.640 --> 00:05:12.550
And we have a plugin architecture
above and beyond that one.

00:05:12.620 --> 00:05:14.000
So that's our architecture.

00:05:14.150 --> 00:05:17.100
As you can see,
the bottom layer is just rows

00:05:17.100 --> 00:05:21.190
and tables below the -- halfway
underneath the persistence layer.

00:05:21.330 --> 00:05:22.500
And above that, it's objects.

00:05:22.500 --> 00:05:25.040
And that's what makes it
totally KVC compliant.

00:05:25.140 --> 00:05:26.590
We also do object faulting and so on.

00:05:26.600 --> 00:05:28.090
And so forth in there.

00:05:28.100 --> 00:05:30.260
So if you're a plugin,
you can just -- you know,

00:05:30.260 --> 00:05:32.070
you're just talking objects.

00:05:32.110 --> 00:05:34.610
You don't have to worry about
fetching this or fetching that.

00:05:34.800 --> 00:05:36.910
It's just done for you.

00:05:37.110 --> 00:05:39.100
So our competitive advantage,
as you can see,

00:05:39.100 --> 00:05:41.340
we've abstracted the database.

00:05:41.340 --> 00:05:43.400
We could go really with any database.

00:05:43.400 --> 00:05:46.890
So we chose OpenBase, number one,
for its data integrity.

00:05:46.900 --> 00:05:48.330
In all the years that
we've worked with it,

00:05:48.330 --> 00:05:51.100
we haven't had a single
case of data corruption.

00:05:51.100 --> 00:05:53.210
We've had issues where
we've introduced a bug,

00:05:53.300 --> 00:05:54.710
but that's a different story.

00:05:54.840 --> 00:05:56.770
But no issues of data corruption per se.

00:05:56.900 --> 00:06:01.620
And we have thousands of customers
in all kinds of weird situations.

00:06:01.710 --> 00:06:05.460
Multi-user client server,
unlike core data or anything like that,

00:06:05.460 --> 00:06:08.990
is all over the internet,
connect over the internet locally,

00:06:08.990 --> 00:06:11.620
on the networks, so on and so forth.

00:06:11.820 --> 00:06:14.130
Slow maintenance and
ease of administration,

00:06:14.130 --> 00:06:17.800
very important for us because our
target user is a technical neophyte.

00:06:17.800 --> 00:06:21.190
It's a sales manager, it's a salesperson.

00:06:21.200 --> 00:06:22.100
They don't want to know anything.

00:06:22.100 --> 00:06:25.200
They just want to download, click,
and go.

00:06:25.200 --> 00:06:29.400
So we have automatic database
cleanup on a periodic basis.

00:06:29.400 --> 00:06:32.500
Also, when you create a backup,
it automatically cleans up.

00:06:32.500 --> 00:06:33.600
Easy schema updates.

00:06:33.600 --> 00:06:40.480
Now, I said a few slides ago that we
talked about iterative development.

00:06:40.630 --> 00:06:40.900
Guess what?

00:06:40.900 --> 00:06:45.000
A lot of times we would forget the
odd column or whatnot in a release.

00:06:45.000 --> 00:06:48.700
And for our users, it's just, you know,
you launch the application,

00:06:48.700 --> 00:06:51.100
connect to the database,
we detect a schema change,

00:06:51.100 --> 00:06:53.000
and we just tell you, hey,
there's a change.

00:06:53.000 --> 00:06:53.700
You want to update?

00:06:53.700 --> 00:06:55.800
Hit the update button, and off we go.

00:06:55.800 --> 00:06:57.700
We don't have to worry
about dropping tables,

00:06:57.700 --> 00:06:59.700
exporting tables, you know,
adding the column,

00:06:59.700 --> 00:07:00.100
all that kind of stuff.

00:07:00.100 --> 00:07:04.200
It's all very easy to actually
administer and manage.

00:07:04.310 --> 00:07:07.900
Small, compact, portable data files.

00:07:07.900 --> 00:07:11.400
Some of our customers actually
deploy the database on Linux,

00:07:11.610 --> 00:07:15.800
on Solaris, on, God forbid, Windows.

00:07:15.810 --> 00:07:19.200
But our target is really Mac OS X,
and it's actually feasible.

00:07:19.200 --> 00:07:21.990
We do have customers doing those things.

00:07:22.260 --> 00:07:26.680
Of course, an application like ours,
we need some performance and query

00:07:26.680 --> 00:07:31.350
optimization and we do use some of those,
but out of the box OpenBaS is

00:07:31.350 --> 00:07:32.700
already pretty performant.

00:07:32.730 --> 00:07:34.700
And so we don't have
to do too many tweaks.

00:07:34.800 --> 00:07:40.700
And in our stack there we don't
have to make special calls.

00:07:40.700 --> 00:07:46.080
We do have the odd one,
but out of the box it's pretty good.

00:07:46.290 --> 00:07:49.340
Powerful features: we have automatic
synchronization out of the box.

00:07:49.410 --> 00:07:51.830
I guess the other one is
change in notification.

00:07:51.940 --> 00:07:54.360
In the demo I'll show you that.

00:07:54.460 --> 00:07:55.700
And of course our history.

00:07:55.700 --> 00:07:59.430
We've been working with the
OpenBaS guys since 1991.

00:07:59.510 --> 00:08:03.760
They're a great bunch of guys,
good support, so on and so forth.

00:08:03.770 --> 00:08:07.480
So that was also part of
the decision making process.

00:08:07.570 --> 00:08:10.050
So I don't know how many
minutes I have left.

00:08:10.060 --> 00:08:11.670
This clock is not going.

00:08:11.840 --> 00:08:12.800
How am I doing?

00:08:12.800 --> 00:08:14.650
Okay, I'll talk some more.

00:08:14.700 --> 00:08:16.030
Okay,
so we'll go to the demo and what I'm

00:08:16.040 --> 00:08:19.800
going to show you is synchronization
as well as change notification.

00:08:19.800 --> 00:08:21.800
So we'll go to this first machine.

00:08:21.800 --> 00:08:23.800
This is,
is this the one that's showing up here?

00:08:23.800 --> 00:08:24.800
Yeah, there we go.

00:08:24.800 --> 00:08:28.910
So what I have here is I installed
on these two computers two

00:08:29.250 --> 00:08:31.900
copies of Daylight that you can
just download from our website,

00:08:31.980 --> 00:08:32.800
nothing special.

00:08:32.800 --> 00:08:35.800
On both machines I installed
the default database,

00:08:35.800 --> 00:08:38.950
but what I'm doing here is I'm
connecting from this machine to

00:08:38.950 --> 00:08:41.720
that machine in this particular
instance that what we're seeing here.

00:08:41.800 --> 00:08:44.730
Another thing that we do is we have,
we use record locking.

00:08:44.740 --> 00:08:47.800
Pessimistic record locking actually.

00:08:47.920 --> 00:08:52.780
And one of the problems with, with,
with that kind of strategy is that if,

00:08:52.780 --> 00:08:56.930
if a database or, sorry,
if a client just dies

00:08:56.930 --> 00:08:59.800
for whatever reason,
they jump off the network or whatnot,

00:08:59.800 --> 00:09:03.940
and the lock is still in the database,
you have to typically go in

00:09:03.960 --> 00:09:04.800
there and delete the lock.

00:09:04.800 --> 00:09:07.640
But with open base, the cool thing is,
is that if you disconnect

00:09:08.030 --> 00:09:10.130
from the network,
either, you know,

00:09:10.350 --> 00:09:13.800
something bad happened or you just,
you know, shut off your power book,

00:09:13.800 --> 00:09:16.690
it automatically releases
the lock because you're not,

00:09:16.790 --> 00:09:19.800
you're not using it,
which is a neat feature.

00:09:19.800 --> 00:09:22.800
So what I have here is I'm going
to make a little change here.

00:09:22.800 --> 00:09:26.100
What's happening is.

00:09:26.980 --> 00:09:29.050
We're going to make a change,
it's going to go in the database

00:09:29.110 --> 00:09:32.670
and automatically without me
touching that computer the change

00:09:32.670 --> 00:09:35.090
will be reflected on that computer.

00:09:35.300 --> 00:09:40.960
So I'm just going to change
George to whatever and hit return.

00:09:41.010 --> 00:09:44.450
And if you could just switch
over to this computer here.

00:09:47.540 --> 00:09:49.770
If you could switch to this computer,
there we go.

00:09:49.870 --> 00:09:51.580
You'll notice that it's
first of all it's locked,

00:09:51.650 --> 00:09:54.400
it's non-editable,
and secondly you'll see that the

00:09:54.400 --> 00:09:55.790
first name field has changed.

00:09:55.820 --> 00:10:01.140
So this is automatic change
notification out of the box in OpenBaSe.

00:10:01.210 --> 00:10:03.580
We can switch back over
here to this computer.

00:10:03.580 --> 00:10:07.210
Now what I'm going to do is I'm
going to pretend I'm a laptop user

00:10:07.210 --> 00:10:14.430
and I've connected to the server at
the office and I'm going to go out

00:10:14.430 --> 00:10:16.620
on the road as a salesman should.

00:10:17.260 --> 00:10:21.990
So what I'm going to do is I'm
going to create an offline database.

00:10:22.760 --> 00:10:25.570
So here we detect right away that we
don't even have an offline copy of

00:10:25.570 --> 00:10:29.700
the database on this local computer,
so we're going to go ahead and do that.

00:10:29.700 --> 00:10:34.700
And Murphy's Law hopefully won't come
into play here and mess up my demo.

00:10:34.810 --> 00:10:37.780
What we're doing here is we're creating
the database on a local machine,

00:10:37.780 --> 00:10:42.140
we're updating the schema if need be,
we're setting up the

00:10:42.140 --> 00:10:44.720
synchronization rules,
and we're actually doing

00:10:44.720 --> 00:10:45.700
the synchronization.

00:10:45.700 --> 00:10:47.700
And there we are.

00:10:47.700 --> 00:10:51.830
What we've done now is we've migrated
the connection from the server to

00:10:51.880 --> 00:10:54.110
a database on the local machine.

00:10:54.700 --> 00:10:55.670
The user doesn't even know.

00:10:55.820 --> 00:11:00.110
The only way they know is if they
go to get database info here,

00:11:00.130 --> 00:11:02.700
it tells us that we're offline.

00:11:02.950 --> 00:11:06.790
Now to go back,
they come back into the office,

00:11:06.790 --> 00:11:11.340
they want to either synchronize,
they can either choose to

00:11:11.340 --> 00:11:14.700
synchronize with the online
database and stay offline,

00:11:14.700 --> 00:11:16.640
or just go back online.

00:11:16.780 --> 00:11:20.700
So it just synchronizes back online,
all the data moves back and forth.

00:11:20.710 --> 00:11:24.700
If you have changes on the master,
if you have changes on the slave,

00:11:24.700 --> 00:11:30.690
they all get reconciled,
and you're back on the server.

00:11:30.700 --> 00:11:33.700
In case of a conflict,
master always wins.

00:11:33.700 --> 00:11:37.580
So that's my demo,
and I'm not doing too bad for time.

00:11:37.920 --> 00:11:38.690
There you go.

00:11:38.690 --> 00:11:40.200
Thank you very much.

00:11:48.920 --> 00:11:51.460
Keep forgetting I have
to use the podium mic.

00:11:51.460 --> 00:11:55.500
Next I'd like to bring up Chuck Sholdt
from a company called Weather Central.

00:11:55.530 --> 00:12:00.400
Chuck is going to demonstrate an
editorial based workflow solution

00:12:00.470 --> 00:12:03.170
built around 4th Dimension.

00:12:04.920 --> 00:12:05.900
Thank you, sir.

00:12:05.900 --> 00:12:06.440
This one?

00:12:06.440 --> 00:12:07.700
Okay.

00:12:07.790 --> 00:12:08.900
Morning.

00:12:09.020 --> 00:12:13.090
How are you all doing?

00:12:13.870 --> 00:12:18.710
Here I am, fat, bald, over 50,
in a college dropout,

00:12:18.710 --> 00:12:23.220
and I'm talking at one of the premier
technical conferences in the world.

00:12:23.280 --> 00:12:26.590
Is this a great country or what?

00:12:26.590 --> 00:12:26.590
I love this.

00:12:27.410 --> 00:12:34.600
Before I get started I want to thank
Brendan Coveney at 4D and the folks

00:12:34.600 --> 00:12:36.900
at Apple for having me do this.

00:12:36.900 --> 00:12:39.490
I hope I don't disappoint them.

00:12:39.780 --> 00:12:43.040
This is the weather page for the
San Francisco Chronicle and that's

00:12:43.090 --> 00:12:45.980
what we do among other things
is produce weather pages for

00:12:45.980 --> 00:12:47.700
newspapers all around the country.

00:12:47.760 --> 00:12:52.700
And as you can see this is a very dense,
complex page.

00:12:52.700 --> 00:12:58.540
I've got very sophisticated
graphics to deal with,

00:12:58.600 --> 00:13:01.700
agate which would be all the city
listings that you see up there.

00:13:01.700 --> 00:13:07.110
The air quality chart right here changes
color based on what the air quality

00:13:07.110 --> 00:13:09.700
readings or forecast is for the day.

00:13:09.700 --> 00:13:15.830
So we have an immense amount of
data that we have to deal with.

00:13:15.910 --> 00:13:17.700
By the way, pardon me,
like I said I'm over 50.

00:13:17.700 --> 00:13:21.520
I'm actually closer to 60 so my
memory isn't what it should be.

00:13:21.750 --> 00:13:25.390
So I'm going to use these crib sheets.

00:13:25.740 --> 00:13:32.120
Anytime you deal with a newspaper,
it is deadline dependent

00:13:32.610 --> 00:13:34.040
and time is our enemy.

00:13:34.040 --> 00:13:36.860
And this is what I'm going to be
talking about is how we've taken

00:13:37.200 --> 00:13:43.070
time and compressed it through
the use of AppleScript and 4D.

00:13:45.710 --> 00:13:49.030
What you're seeing here is a
rough approximation of what

00:13:49.030 --> 00:13:50.600
our workflow looks like.

00:13:50.600 --> 00:13:55.310
Ten years ago, a group of us bought
Weather Central from its original

00:13:55.310 --> 00:13:59.600
owners and we did an analysis
of each of the business segments.

00:13:59.600 --> 00:14:06.610
And on the newspaper side,
it took nine people to put together

00:14:06.610 --> 00:14:10.570
13 weather pages every day.

00:14:10.600 --> 00:14:15.750
We calculated that for
every five clients we added,

00:14:15.750 --> 00:14:18.600
we'd have to add one
additional staff member.

00:14:18.600 --> 00:14:23.600
Now, to be honest with you,
meteorologists don't earn a lot of money.

00:14:23.600 --> 00:14:26.120
I'm sure some of you would say
that's fine with you when you

00:14:26.120 --> 00:14:27.600
get rained out of your golf game.

00:14:27.600 --> 00:14:31.590
But you can see that there's
an economic problem here.

00:14:31.600 --> 00:14:34.600
We just had to find some way
to make it more efficient.

00:14:34.600 --> 00:14:38.600
Today,
including the San Francisco Chronicle,

00:14:38.650 --> 00:14:43.600
we have over 200 newspaper
customers and we have seven people

00:14:43.600 --> 00:14:46.530
producing those same 200 pages.

00:14:46.630 --> 00:14:48.600
So that's a dramatic improvement.

00:14:48.710 --> 00:14:50.600
But we have to get even better.

00:14:54.030 --> 00:14:58.040
Now this is what you see highlighted
here is the data acquisition side.

00:14:58.200 --> 00:15:02.580
We get 275,000 files
streaming in from the

00:15:02.580 --> 00:15:05.340
National Weather Service every 24 hours.

00:15:05.490 --> 00:15:08.240
Seven days a week, 365 days a year.

00:15:08.240 --> 00:15:11.420
We have to sort through all
of that information and pick

00:15:11.420 --> 00:15:13.360
out the files that we need.

00:15:13.520 --> 00:15:18.790
The data needs to be sliced, diced,
parsed, and processed.

00:15:19.380 --> 00:15:26.580
In addition to the 275,000 files,
we have to get all sorts of different

00:15:26.580 --> 00:15:28.040
information into that database.

00:15:28.070 --> 00:15:34.480
And it comes from a variety of sources:
email, websites, faxes, telephone calls,

00:15:34.480 --> 00:15:40.470
and includes pollen information,
air quality, sun, moon, rice set tables,

00:15:40.580 --> 00:15:45.390
tide tables, salooner data,
weather trivia.

00:15:45.550 --> 00:15:50.020
We even have one customer
who wants bat data.

00:15:50.130 --> 00:15:53.500
You know, the Austin American Statesman
apparently bats,

00:15:53.580 --> 00:15:55.690
or anybody here from Austin?

00:15:55.780 --> 00:15:56.420
Gentleman over here.

00:15:56.420 --> 00:16:00.570
So that's a big deal and we have to
get that information into the database.

00:16:02.980 --> 00:16:05.740
So once all of the
information is in there,

00:16:05.740 --> 00:16:09.170
now we have to process it.

00:16:12.950 --> 00:16:17.600
And if you see where it says
database up there on the top,

00:16:17.760 --> 00:16:19.140
that's the 4D database.

00:16:19.230 --> 00:16:23.200
And you notice that everything
either flows into it or from it.

00:16:23.530 --> 00:16:26.640
And this is where we're seeing the
greatest increase in efficiency

00:16:26.640 --> 00:16:28.090
is because of the use of 4D.

00:16:28.200 --> 00:16:32.200
Here's a close...

00:16:38.200 --> 00:16:45.400
[Transcript missing]

00:16:48.000 --> 00:16:49.160
Let me back up again.

00:16:49.190 --> 00:16:50.000
Alright.

00:16:50.000 --> 00:16:54.000
I want to just briefly tell
you what we've got here.

00:16:54.000 --> 00:16:56.140
Where you see where it
says meteorologists,

00:16:56.290 --> 00:17:02.740
those are our older G4 Macs that have
been recycled out of the production

00:17:02.740 --> 00:17:05.000
process where we need the most speed.

00:17:05.000 --> 00:17:12.000
And on the production side we're running
dual processor 1 gigabit OS X machines.

00:17:12.000 --> 00:17:17.920
Where you see the internal server,
that's actually two X-SERVs running.

00:17:18.030 --> 00:17:21.330
They're mirrored and we have
kind of a primitive IP failover

00:17:21.330 --> 00:17:27.670
situation so if the primary server
switches we can very quickly and

00:17:27.740 --> 00:17:31.000
efficiently change over to the backup.

00:17:31.200 --> 00:17:37.100
[Transcript missing]

00:17:37.280 --> 00:17:43.180
Just an old OS X machine,
a one gigabyte server.

00:17:43.180 --> 00:17:49.100
And then we have a dedicated
machine for the 4D server.

00:17:50.630 --> 00:17:54.630
When all of this information
is brought in and stored the

00:17:54.630 --> 00:17:59.410
meteorologists can call it up,
they can look at it at what the

00:17:59.410 --> 00:18:03.680
National Weather Service has provided,
and then based on their experience

00:18:03.680 --> 00:18:08.190
they create their own forecast and they
can go in and modify the information.

00:18:09.060 --> 00:18:10.000
Narrative pieces.

00:18:10.000 --> 00:18:13.600
Computers are very good at repetitive,
tedious sorts of tasks,

00:18:13.600 --> 00:18:17.540
but they're not quite as good
at what we would call news

00:18:17.550 --> 00:18:21.100
judgment and writing narratives,
so the narrative is

00:18:21.160 --> 00:18:23.010
always entered by hand.

00:18:26.270 --> 00:18:33.560
This is the production phase and what
these folks do is enter in any additional

00:18:33.560 --> 00:18:37.200
deadline dependent information.

00:18:37.320 --> 00:18:41.850
And then they issue reports and
you can see in the middle these

00:18:41.850 --> 00:18:47.270
would be a series of InDesign tagged
files needed for the Denver Post.

00:18:47.490 --> 00:18:51.980
And then you can see that
all of the information,

00:18:52.090 --> 00:18:57.170
the style sheets,
and any typesetting coded information

00:18:57.170 --> 00:19:02.300
is used or is embedded in those
files that InDesign can then read.

00:19:02.830 --> 00:19:10.290
And it does the typesetting on the page.

00:19:13.350 --> 00:19:17.540
What we found, or what I found,
I have what I call my hover time.

00:19:17.590 --> 00:19:21.740
When we're in the middle of
production I go down and I watch,

00:19:21.760 --> 00:19:25.390
watch the people work,
and I put a stopwatch to one

00:19:25.470 --> 00:19:27.220
of my better technicians.

00:19:27.240 --> 00:19:30.780
And I found what was happening
was that she would sit there

00:19:30.910 --> 00:19:35.450
and wait 10 to 20 seconds,
watching the little beach ball spin

00:19:35.530 --> 00:19:37.730
for the page to complete production.

00:19:37.920 --> 00:19:40.610
Doesn't seem a lot,
multiply that times 200 and a

00:19:40.710 --> 00:19:42.860
lot of other scripts that run.

00:19:42.890 --> 00:19:45.690
And all of a sudden you're up
to a significant amount of time.

00:19:45.710 --> 00:19:49.770
In fact, for her,
it amounted to an hour a day.

00:19:49.950 --> 00:19:55.040
Now I don't expect in times
four systems that's four hours

00:19:55.040 --> 00:19:57.030
a day that's being wasted.

00:19:57.050 --> 00:20:00.210
I'm not such a terrible boss that
I expect them to have their nose to the

00:20:00.210 --> 00:20:02.420
grindstone every second of every minute.

00:20:02.430 --> 00:20:05.320
But you can see that there's
some possibilities for

00:20:05.320 --> 00:20:07.160
increasing the efficiency.

00:20:07.190 --> 00:20:08.830
Excuse me.

00:20:08.920 --> 00:20:12.420
So, I'm going to show you folks.

00:20:12.420 --> 00:20:15.260
What we've done with 4D.

00:20:15.260 --> 00:20:21.010
You have to kind of.

00:20:25.140 --> 00:20:26.100
I love technology.

00:20:26.100 --> 00:20:26.650
Isn't this cool?

00:20:26.730 --> 00:20:29.740
It's a little Bluetooth mouse.

00:20:29.790 --> 00:20:30.980
Wireless.

00:20:31.080 --> 00:20:33.180
Okay,
use your imagination here a little bit.

00:20:33.420 --> 00:20:37.570
In the background this
would be the server running.

00:20:37.720 --> 00:20:41.060
This guy over here is a remote machine.

00:20:41.060 --> 00:20:45.510
Now if you picture that schematic
I showed and you're adding two or three

00:20:45.630 --> 00:20:49.800
of these remote machines that do nothing
but sit there and assemble pages.

00:20:49.930 --> 00:20:52.800
There's nobody sitting at them,
it's all done remotely.

00:20:52.810 --> 00:20:57.780
So this is running a 4D client over
here and then this is where the

00:20:57.780 --> 00:21:00.700
production technician would be sitting.

00:21:00.820 --> 00:21:06.170
And there's a,
it's very well designed console metaphor

00:21:06.170 --> 00:21:10.000
that shows what clients need to be run.

00:21:10.140 --> 00:21:16.700
We can sort by shift and you
can see we do it geographically,

00:21:16.700 --> 00:21:19.570
east, west,
and then there's a third shift called

00:21:19.570 --> 00:21:21.800
nap maps where I can show them all.

00:21:21.800 --> 00:21:25.710
It tells what the deadline time is,
gives a status,

00:21:25.710 --> 00:21:31.240
in this case data is needed,
and then any notes or error

00:21:31.240 --> 00:21:33.160
messages are displayed here.

00:21:33.220 --> 00:21:37.310
So you double click and you can
go in and look at those notes.

00:21:43.470 --> 00:21:46.520
What I'm going to do here,
and I need to describe this

00:21:46.730 --> 00:21:48.380
to you before it happens.

00:21:48.380 --> 00:21:52.850
I used to be able to walk through
these things and as they occurred

00:21:52.980 --> 00:21:57.400
but it happened so fast that
I wouldn't be able to do it.

00:21:57.400 --> 00:22:01.240
I'm going to click on
this mark data okay.

00:22:01.500 --> 00:22:03.400
It means all the data files that come in.

00:22:03.400 --> 00:22:08.420
So what's going to happen is the console
here is going to talk to the database,

00:22:08.420 --> 00:22:12.400
the server, and set a Boolean flag.

00:22:12.400 --> 00:22:17.360
This guy over here is continuously
checking with the database to see if any

00:22:17.360 --> 00:22:20.400
of those Boolean flags have been checked.

00:22:20.400 --> 00:22:23.400
What will happen is it will say, "Ah,
data is ready.

00:22:23.400 --> 00:22:28.800
I need to report the files and then
I need to get an Apple script that's

00:22:28.800 --> 00:22:32.400
stored as text." Think about this.

00:22:32.400 --> 00:22:36.330
I'm going to get the Apple script
that's stored as text and then I'm

00:22:36.490 --> 00:22:41.670
going to take it and I'm going to
send it to the operating system on

00:22:41.670 --> 00:22:49.400
my machine and tell the operating
system to compile it and run it.

00:22:49.400 --> 00:22:49.890
Okay?

00:22:50.200 --> 00:22:55.300
[Transcript missing]

00:22:55.300 --> 00:23:00.290
The server throws a confirmation
dialogue and lists any problems

00:23:00.410 --> 00:23:04.040
that it knows need to be solved
before you can actually do it.

00:23:04.040 --> 00:23:07.300
It's a way of making
certain everything's cool.

00:23:07.330 --> 00:23:09.300
Click on yes.

00:23:09.300 --> 00:23:10.800
Now it's sitting out there watching.

00:23:10.800 --> 00:23:11.750
It'll take a second here.

00:23:11.850 --> 00:23:12.300
There it goes.

00:23:12.300 --> 00:23:15.300
The files have been reported.

00:23:15.300 --> 00:23:19.550
Now it's going to launch QuarkXPress.

00:23:26.450 --> 00:23:31.520
And now it's going to launch QuarkXPress.

00:23:31.540 --> 00:23:33.320
Come on.

00:23:33.320 --> 00:23:39.710
Oh, see, I've got an error.

00:23:44.700 --> 00:23:47.900
Well, wouldn't you know this
was going to happen to me.

00:23:47.900 --> 00:23:51.500
I told Avi it was going to happen to him.

00:23:51.590 --> 00:23:54.190
What's the error?

00:23:54.370 --> 00:23:58.370
Page problem encounter by a designer.

00:23:58.410 --> 00:24:02.930
Let me clear these errors and
we'll try it one more time.

00:24:05.250 --> 00:24:07.200
Anybody here from Quark?

00:24:07.200 --> 00:24:09.800
Good.

00:24:09.800 --> 00:24:13.200
I knew I should have done this
in InDesign instead of Quark.

00:24:13.340 --> 00:24:20.800
Okay.

00:24:20.800 --> 00:24:24.970
Let me try something real quick here.

00:24:46.310 --> 00:24:47.860
Bear with me.

00:24:48.230 --> 00:24:49.800
It works, it really does.

00:24:49.830 --> 00:24:53.240
And it's not 4D's fault,
I can tell you that right now.

00:24:53.650 --> 00:24:56.740
Okay, we're going to mark data okay,
clear the error message.

00:24:56.910 --> 00:24:59.440
It will re-report the files.

00:24:59.440 --> 00:25:05.590
Reports the files.

00:25:12.300 --> 00:25:14.300
I'm bummed.

00:25:14.300 --> 00:25:17.680
Let me do this real quick.

00:25:17.840 --> 00:25:20.300
See if we can't get this to work.

00:25:20.300 --> 00:25:24.300
It worked, okay?

00:25:24.300 --> 00:25:30.920
Now, so the page has been assembled.

00:25:32.980 --> 00:25:38.130
The production technician would come
in and they need to proofread the page.

00:25:38.250 --> 00:25:44.480
So they would open up the page,
make any changes that needed to be made,

00:25:44.760 --> 00:25:46.910
save it,

00:25:47.340 --> 00:25:52.410
Close it, come back,
and mark the pages proofed.

00:25:55.420 --> 00:25:57.390
Well, I apologize folks.

00:25:57.410 --> 00:25:58.900
I don't know what happened.

00:25:59.100 --> 00:26:01.560
Anyhow,
that's my story and I'm sticking to it.

00:26:01.650 --> 00:26:05.400
It is very fast, it's very efficient,
and it does work.

00:26:05.400 --> 00:26:06.400
Thank you very much.

00:26:18.210 --> 00:26:22.090
It's probably our fault for asking folks
to take client-server processes and cram

00:26:22.090 --> 00:26:25.720
them all onto a single PowerBook and
without a whole lot of notice can come

00:26:25.800 --> 00:26:27.310
up here and try and deliver those.

00:26:27.310 --> 00:26:29.100
So it did work in rehearsal.

00:26:29.100 --> 00:26:31.920
I can vouch for Chuck.

00:26:32.150 --> 00:26:36.000
The next solution we'd like to focus
on is a patient management solution

00:26:36.000 --> 00:26:40.400
built by folks at InfoMatrix using
FileMaker Pro and a complementary

00:26:40.470 --> 00:26:42.500
product known as SyncDeck.

00:26:42.630 --> 00:26:48.440
And so we'll call up Eric Jungemann
to present the InfoMatrix story.

00:26:48.500 --> 00:26:49.660
Damn!

00:26:49.660 --> 00:26:50.560
I did a good job.

00:26:50.560 --> 00:26:52.410
Oh, thanks.

00:26:55.500 --> 00:27:01.060
How many folks in here
have used FileMaker before?

00:27:01.500 --> 00:27:04.220
Wow, that's great.

00:27:04.370 --> 00:27:06.290
That's fantastic.

00:27:06.470 --> 00:27:09.900
So today I'm going to talk
about a couple of things.

00:27:09.920 --> 00:27:12.890
One is a concept called the Nimble App.

00:27:13.010 --> 00:27:18.810
In fact, the other two presenters are
really demonstrating a lot of the

00:27:18.810 --> 00:27:20.440
characteristics of a Nimble App.

00:27:20.450 --> 00:27:22.920
And I'll get into that in a moment.

00:27:22.920 --> 00:27:28.730
But really it's focusing on how do you
deal with things called edge departments.

00:27:28.770 --> 00:27:32.580
These are in the enterprise the
departments that are around the edge

00:27:32.580 --> 00:27:39.380
that you just never can seem to get to
with the core enterprise capabilities,

00:27:39.390 --> 00:27:40.920
CRM, ERP, etc.

00:27:40.970 --> 00:27:42.320
And techniques to use that.

00:27:42.440 --> 00:27:46.580
And frequently it's done with FileMaker.

00:27:48.750 --> 00:27:51.600
InfoMatrix, which is my company,
is a consulting company

00:27:51.600 --> 00:27:52.810
based here in California.

00:27:52.940 --> 00:27:56.980
And we have five general partners and
we've all worked together for 20 years.

00:27:57.080 --> 00:28:00.510
The only reason I mention that
is as we go along here you'll see

00:28:00.620 --> 00:28:03.280
that when you have five people that
have worked together for 20 years

00:28:03.280 --> 00:28:08.490
it's kind of an ongoing soap opera,
slugfest, etc.

00:28:08.590 --> 00:28:11.860
And from that and from our enterprise
perspective we've come up with

00:28:11.860 --> 00:28:13.700
this concept called the Nimble App.

00:28:13.760 --> 00:28:16.390
Nothing that we invented,
just ideas that we pulled

00:28:16.430 --> 00:28:18.740
together through our experience.

00:28:18.750 --> 00:28:24.480
All of us are developers
who as we got older,

00:28:24.480 --> 00:28:29.300
as we got more experienced,
rose up through the ranks to become CIOs,

00:28:29.300 --> 00:28:35.020
CTOs, general managers,
and senior development executives.

00:28:35.310 --> 00:28:39.320
And of course, for any of you,
how many people here manage developers?

00:28:39.350 --> 00:28:40.680
So there's a fair number of hands.

00:28:40.780 --> 00:28:44.390
You know that when that occurs
and the higher up you get,

00:28:44.530 --> 00:28:46.600
the less time you actually
spend on the technologies.

00:28:46.600 --> 00:28:49.040
In fact,
you're trotted out for dog and pony

00:28:49.090 --> 00:28:52.440
shows like this instead of actually
getting to work with the technologies.

00:28:52.540 --> 00:28:53.640
And it's a problem.

00:28:53.710 --> 00:28:57.130
And it became a real problem for us so
we eventually got tired of it and said

00:28:57.140 --> 00:29:00.910
we're getting no development bandwidth,
we really like to develop,

00:29:00.910 --> 00:29:03.170
and so we formed our own company.

00:29:03.900 --> 00:29:07.220
So we like to do
consulting and development.

00:29:07.220 --> 00:29:09.960
And I think those two
things go hand in hand.

00:29:09.960 --> 00:29:13.410
Usually when we're consulting we
see problems that we can't resist

00:29:13.410 --> 00:29:15.800
getting our hands into the middle of.

00:29:15.800 --> 00:29:20.350
And also because we've been
successful in business and we have

00:29:20.560 --> 00:29:25.800
access to capital we've helped
found several successful companies.

00:29:25.800 --> 00:29:27.690
So that gives us another perspective.

00:29:27.810 --> 00:29:29.090
Now the Nimble app.

00:29:29.110 --> 00:29:33.510
I've got a white paper which at the
end of these slides there's some links

00:29:33.510 --> 00:29:39.800
or if you give me your business card
I'll make sure to get a copy to you.

00:29:39.800 --> 00:29:44.800
And it's a white paper that
talks about these concepts.

00:29:44.800 --> 00:29:45.760
These edge departments.

00:29:45.800 --> 00:29:50.040
And these edge departments are things
like this and I'm sure all of you get,

00:29:50.100 --> 00:29:53.800
encounter these kind of departments.

00:29:53.800 --> 00:29:57.800
There are departments that
you can't get to the top of.

00:29:57.800 --> 00:29:59.800
So that's the big backbone systems.

00:29:59.800 --> 00:30:00.580
Number one.

00:30:00.690 --> 00:30:07.950
Number two they might be a department
that's doing something entirely

00:30:07.950 --> 00:30:09.330
different than the essential

00:30:09.360 --> 00:30:10.510
central thrust to the company.

00:30:10.510 --> 00:30:14.040
So, they're just foreign to the
company and they don't get

00:30:14.040 --> 00:30:16.220
the support that they need,
or it's something that the

00:30:16.220 --> 00:30:19.910
company intentionally launched,
a new venture that also

00:30:20.410 --> 00:30:23.500
doesn't link into the systems.

00:30:23.500 --> 00:30:26.950
And these tend to be
rapidly evolving situations.

00:30:26.950 --> 00:30:29.640
Can all of you relate to
what I'm talking about here?

00:30:29.650 --> 00:30:33.830
I mean, this is a common problem and
they generally get short shrift.

00:30:33.830 --> 00:30:37.090
And it's not, by the way,
because the IT department

00:30:37.090 --> 00:30:41.000
doesn't want to service them,
that's not the issue at all.

00:30:41.000 --> 00:30:43.320
This is not,
we're not knocking anything here,

00:30:43.320 --> 00:30:45.560
we're just saying this is a fact of life.

00:30:45.560 --> 00:30:50.700
And so, because they're rapidly evolving
and because they're at the edge,

00:30:50.720 --> 00:30:53.380
because they probably can't
muster a lot of budget,

00:30:53.380 --> 00:30:55.290
you need to take different approaches.

00:30:55.300 --> 00:30:59.670
And so, from our IT perspective and
our enterprise perspective,

00:30:59.670 --> 00:31:04.590
we came up with this series
of concepts to address them.

00:31:04.850 --> 00:31:08.950
And you can apply these techniques
to a number of technologies.

00:31:09.010 --> 00:31:11.940
However,
the two technologies that I'm going to

00:31:11.940 --> 00:31:15.940
talk about are the two technologies we
use to address these and we think that

00:31:15.940 --> 00:31:19.760
they're enormously effective to do it
and we'll give you some reasons why.

00:31:19.820 --> 00:31:23.640
And that is FileMaker and SyncDeck and
I'm going to talk about each of them.

00:31:23.700 --> 00:31:29.690
But the analogy that I'd like to use
was one that in talking to Tyler about

00:31:29.990 --> 00:31:33.850
doing a presentation here came to me
because it happened to me right in,

00:31:34.020 --> 00:31:36.880
I was developing one day and
it happened on TV in front

00:31:36.880 --> 00:31:38.980
of me which is Spaceship One,
right?

00:31:39.090 --> 00:31:44.680
The Burt Rutan, go into space,
you know the whole X Prize, three people,

00:31:44.810 --> 00:31:48.780
not into orbit,
just into space and then come back down.

00:31:48.870 --> 00:31:50.450
You know, wait list for three
minutes kind of thing.

00:31:50.630 --> 00:31:52.300
So you got that model, right?

00:31:52.410 --> 00:31:56.040
And then the space shuttle model which
is I want to get a couple of tons,

00:31:56.040 --> 00:31:59.930
I don't know how many tons,
I want to get that into orbit, alright?

00:32:00.250 --> 00:32:05.530
One of them you can fly every two weeks
and one of them isn't flying right now,

00:32:05.660 --> 00:32:08.540
flies, you know,
best case every three months I think,

00:32:08.600 --> 00:32:12.340
I don't want to, you know,
overly characterize it but,

00:32:12.430 --> 00:32:15.360
and it's a major thing,
major multi-year kind of project.

00:32:15.450 --> 00:32:21.180
I think Rutan started maybe
three years ago on his project.

00:32:21.320 --> 00:32:23.650
You can see that they're two
entirely different models to

00:32:23.720 --> 00:32:27.100
accomplish sort of the same thing.

00:32:29.650 --> 00:32:32.330
So what are the goals of the Nimble app?

00:32:32.420 --> 00:32:36.600
Well, the one I want to focus on
today is common code base.

00:32:36.600 --> 00:32:40.600
Okay, a common code base to address what?

00:32:40.600 --> 00:32:42.600
Well,
with one code base we want to address

00:32:42.600 --> 00:32:44.600
server users in edge departments.

00:32:44.670 --> 00:32:47.600
That's people that work
in the office all day.

00:32:47.850 --> 00:32:50.710
Mobile users, that is people that are
untethered from the office,

00:32:50.710 --> 00:32:53.600
they're out in cars and airplanes
and they're all over the place.

00:32:53.730 --> 00:32:56.820
Individual users in
collaborative communities,

00:32:56.820 --> 00:32:59.730
they may be,
because this edge department may

00:32:59.730 --> 00:33:03.590
really not even have a server,
it may have ten people

00:33:03.590 --> 00:33:04.600
that collaborate together.

00:33:04.620 --> 00:33:07.750
They may be ten lawyers
working on a case,

00:33:07.750 --> 00:33:09.570
you know, who knows?

00:33:09.600 --> 00:33:16.590
Web users and a high degree of
integration with the enterprise,

00:33:16.700 --> 00:33:20.360
bidirectional,
that is data that they collect in

00:33:20.360 --> 00:33:22.630
this edge department being able
to be used by the enterprise and

00:33:22.710 --> 00:33:23.600
then being used by the enterprise.

00:33:23.600 --> 00:33:24.600
And vice versa.

00:33:24.910 --> 00:33:28.000
Certain kinds of builds that
occur within the enterprise,

00:33:28.000 --> 00:33:30.070
data builds that flow outwards.

00:33:31.660 --> 00:33:34.790
And to me,
because this is not a big budget item,

00:33:34.790 --> 00:33:35.960
you need to have one codebase.

00:33:36.140 --> 00:33:39.150
You need the efficiency of one codebase.

00:33:41.100 --> 00:33:42.860
So let's talk about FileMaker 7.

00:33:42.860 --> 00:33:44.320
FileMaker had a booth here.

00:33:44.520 --> 00:33:48.370
Since a lot of you are FileMaker people,
I hope all of you had a chance

00:33:48.510 --> 00:33:50.330
to at least look at FileMaker 7.

00:33:50.340 --> 00:33:53.340
We're hip deep in FileMaker
7 and we really like it.

00:33:53.340 --> 00:33:58.120
And I was going to go down a
laundry list and in reviewing

00:33:58.120 --> 00:34:01.140
the slides with Tyler he said,
"You know, why don't you tell people what

00:34:01.140 --> 00:34:02.940
you like about it?" And so I said,
"Okay, great.

00:34:02.940 --> 00:34:05.220
Here's what we like about it." 1.

00:34:05.220 --> 00:34:09.140
The ability to do dual
platform transparently.

00:34:09.170 --> 00:34:13.480
I'm a Mac fanatic living
seamlessly in a PC world.

00:34:14.110 --> 00:34:17.260
I write applications and I don't
even think about whether they're

00:34:17.290 --> 00:34:20.640
going to run on a Mac or a PC.

00:34:20.640 --> 00:34:23.320
I almost don't give much
thought on whether they're

00:34:23.330 --> 00:34:25.130
going to run on the web either.

00:34:26.110 --> 00:34:30.420
Closely coupled GUI and database,
that is, you know,

00:34:30.520 --> 00:34:33.900
in development everybody talks
about different layers of things

00:34:33.900 --> 00:34:37.520
and we're cool about that,
but in these edge departments

00:34:37.700 --> 00:34:40.100
we're going to turn a lot of this
stuff over to that edge department.

00:34:40.100 --> 00:34:44.250
We want them to be able to write reports,
you know, we don't want them to have to

00:34:44.250 --> 00:34:48.860
get in a queue in IT to do stuff,
so closely coupled GUI and

00:34:48.860 --> 00:34:51.330
database is a very big thing.

00:34:51.400 --> 00:34:53.300
Low QA time is very important.

00:34:53.300 --> 00:34:56.950
When you write it,
it almost has to work just

00:34:57.000 --> 00:34:59.450
after developer unit testing.

00:34:59.620 --> 00:35:00.980
It has to work.

00:35:01.020 --> 00:35:03.540
It can't go in through, you know,
three rounds of QA.

00:35:03.600 --> 00:35:05.560
There's not the budget,
there's not the time,

00:35:05.560 --> 00:35:07.060
it's evolving too rapidly.

00:35:07.170 --> 00:35:15.100
So these first three things are
huge and FileMakeR 7 delivers them.

00:35:15.170 --> 00:35:19.990
And importantly,
and vastly expanded from FileMakeR 6,

00:35:19.990 --> 00:35:21.280
a common code base for webpublishing.

00:35:21.280 --> 00:35:27.320
Instant web publishing or IWP is
tremendous in FileMakeR 7.

00:35:27.320 --> 00:35:30.020
We take some very complex
GUIs and I'm going to show you

00:35:30.020 --> 00:35:31.540
a couple of them in slides.

00:35:31.540 --> 00:35:35.620
I'm not brave like Chuck was and
I'm not going to try to do a demo,

00:35:35.620 --> 00:35:38.790
just some slides,
but very complex GUIs with the

00:35:38.790 --> 00:35:43.210
same code base over the web,
you don't need to think about it.

00:35:43.660 --> 00:35:46.340
Quantum Leap from FileMaker
6 but still familiar.

00:35:46.380 --> 00:35:47.600
That's a huge thing.

00:35:47.600 --> 00:35:51.600
So if you've worked in FileMaker a lot,
the biggie at the top of the list is

00:35:51.600 --> 00:35:53.580
in a file you can have multiple tables.

00:35:53.600 --> 00:35:57.830
So in the application I'm going to
show you which is used in FileMaker

00:35:57.880 --> 00:36:02.590
6 was a 30 file system is now a
one file system with 30 tables.

00:36:02.600 --> 00:36:05.430
Makes it a lot easier
to deploy and manage.

00:36:05.470 --> 00:36:07.600
It's just a lot more fun to work.

00:36:07.600 --> 00:36:12.310
Secondly,
along with that a new what looks like

00:36:12.310 --> 00:36:21.590
an entity relationship diagram which is
really kind of a cool table occurrence

00:36:21.610 --> 00:36:27.820
diagram that more accurately presents
views the way they occur in the database.

00:36:28.360 --> 00:36:33.140
Script parameters, custom functions,
there's a whole long list.

00:36:33.180 --> 00:36:35.300
I'll let the FileMaker
folks talk about that.

00:36:35.300 --> 00:36:38.810
Another thing that we really like
about it is once we deploy it's very

00:36:38.860 --> 00:36:42.300
stable and easy to administer compared
with other database technologies.

00:36:42.300 --> 00:36:44.300
It just works.

00:36:44.300 --> 00:36:46.300
That's what we expect in the Mac world.

00:36:46.300 --> 00:36:47.300
Well, that's what we get.

00:36:47.300 --> 00:36:52.300
And we have databases deployed in places
where there's no IT people around.

00:36:52.300 --> 00:36:55.300
And they just work.

00:36:55.340 --> 00:36:56.300
They can turn them on,
they can turn them off,

00:36:56.300 --> 00:36:59.850
they can read the errors, etc.

00:37:00.110 --> 00:37:03.780
The other thing we like about
FileMaker is it's of sufficient size.

00:37:03.840 --> 00:37:07.630
I think that they have about
9 million licenses out there.

00:37:07.630 --> 00:37:11.250
So it has a big user base and
a great developer community

00:37:11.350 --> 00:37:14.230
and lots of plug-ins so that we
don't need to reinvent the wheel.

00:37:14.240 --> 00:37:15.600
Oh, you need barcoding?

00:37:15.740 --> 00:37:16.140
Got it.

00:37:16.230 --> 00:37:19.500
You need synchronization technology?

00:37:19.500 --> 00:37:20.280
Got it.

00:37:20.620 --> 00:37:22.450
Which gets us to SyncDeck 5.

00:37:22.450 --> 00:37:26.340
We had a need as FileMakeR developers
to deploy a synchronized

00:37:26.690 --> 00:37:29.580
solution for remote workers,
mobile users.

00:37:29.740 --> 00:37:33.370
In this case I'm going to show you today,
it's medical case managers that are

00:37:33.370 --> 00:37:37.460
driving around visiting hospitals
and skilled nursing facilities.

00:37:37.590 --> 00:37:40.400
And so we went looking for a plug-in.

00:37:40.630 --> 00:37:44.480
And our research, my research,
led us to SyncDeck in Berkeley,

00:37:44.480 --> 00:37:45.420
California.

00:37:45.420 --> 00:37:47.510
And you know, it's fun when you first
approach a product,

00:37:47.510 --> 00:37:47.860
right?

00:37:47.860 --> 00:37:50.020
You kind of get some expectations.

00:37:50.020 --> 00:37:52.480
So my expectation was, hmm, Berkeley,
California,

00:37:52.480 --> 00:37:53.980
got to be really smart people.

00:37:54.000 --> 00:37:56.200
One of my other partners
sort of muttered,

00:37:56.200 --> 00:37:57.280
might be too smart.

00:37:57.370 --> 00:38:01.410
You know, this is the sort of Socratic
dialogues that we have back and forth.

00:38:01.550 --> 00:38:02.740
Yeah, but what about BSD?

00:38:02.740 --> 00:38:04.000
You know, kind of back and forth.

00:38:04.000 --> 00:38:05.880
Yeah,
but might be getting ahead of themselves,

00:38:05.880 --> 00:38:06.690
that whole thing.

00:38:06.700 --> 00:38:08.560
But it turned out that I was right.

00:38:08.810 --> 00:38:11.810
Really smart people with
really pragmatic technology.

00:38:11.930 --> 00:38:16.600
Now, what I go to look at is
who's using the technology.

00:38:16.600 --> 00:38:20.700
And in the case of SyncDeck,
I got attracted to it immediately

00:38:20.700 --> 00:38:22.400
because it had a blend of customers.

00:38:22.400 --> 00:38:24.400
I'm going to mention NASA and Lockheed.

00:38:24.400 --> 00:38:28.590
The International Space Station
engineering drawings are

00:38:28.590 --> 00:38:30.910
coordinated in Europe,
Japan,

00:38:30.910 --> 00:38:36.200
and the United States using servers,
FileMaker servers, to coordinate those.

00:38:36.200 --> 00:38:38.380
And those servers
communicate with SyncDeck.

00:38:38.390 --> 00:38:39.970
So I thought, okay, that's pretty cool.

00:38:40.050 --> 00:38:41.640
They probably rung the thing out.

00:38:41.750 --> 00:38:45.370
And then I found out that it's used
by most of the major touring bands

00:38:45.370 --> 00:38:47.380
in the world to manage the tours.

00:38:47.460 --> 00:38:48.110
What is a tour?

00:38:48.180 --> 00:38:49.700
Got to happen every night, right?

00:38:49.700 --> 00:38:50.560
On schedule.

00:38:50.750 --> 00:38:56.400
People running around like crazy, limos,
catering, flights, just you name it.

00:38:56.400 --> 00:38:57.190
You can imagine.

00:38:57.190 --> 00:39:02.540
And it's all coordinated by FileMaker
using SyncDeck technology by a

00:39:02.540 --> 00:39:05.700
really cool company called PC Guild.

00:39:05.700 --> 00:39:07.090
So I really like that.

00:39:07.230 --> 00:39:14.700
And then the sports organizations were
using it for their scouts in the field.

00:39:14.700 --> 00:39:17.190
So they'd go to games and get
statistics and feed those back.

00:39:17.250 --> 00:39:18.870
So very cool customer base.

00:39:19.290 --> 00:39:21.200
That immediately attracted me.

00:39:21.200 --> 00:39:23.120
Secondly, it was developed on Mac.

00:39:23.190 --> 00:39:25.010
I thought, that's cool.

00:39:25.200 --> 00:39:28.700
Third,
transparent in use between Mac and PC.

00:39:28.700 --> 00:39:31.390
Now, this is what we expect
in the FileMaker world,

00:39:31.520 --> 00:39:35.050
but synchronization can be a
little bit differently transparent.

00:39:35.200 --> 00:39:42.270
The current product, SyncDeck 5,
is essentially a plug-in communicating

00:39:42.270 --> 00:39:46.200
to a set of Java and XML-based services.

00:39:46.360 --> 00:39:48.170
So I think that's very cool.

00:39:48.200 --> 00:39:52.750
And leveraging very strong
FileMaker 7 XML support,

00:39:52.890 --> 00:39:57.200
which is a big thing in
talking to the enterprise.

00:39:57.200 --> 00:40:04.200
I love the fact that FileMaker has JDBC,
ODBC, XML, and all these capabilities.

00:40:04.200 --> 00:40:06.800
to talk to something we can.

00:40:10.630 --> 00:40:12.970
Okay, SyncDeck 5, what does it do?

00:40:13.050 --> 00:40:15.550
Simply,
it synchronizes FileMakeR databases.

00:40:15.550 --> 00:40:16.480
Now what can these be?

00:40:16.640 --> 00:40:18.400
First of all,
they can be collaborative communities.

00:40:18.400 --> 00:40:21.530
If four of us had the same
database and we were in four

00:40:21.530 --> 00:40:24.340
different parts of the planet,
we could synchronize

00:40:24.340 --> 00:40:26.830
our databases together,
which is very cool.

00:40:27.060 --> 00:40:30.370
If you try to think about
how you might do that,

00:40:30.580 --> 00:40:34.580
without a VPN kind of technology,
getting involved with, you know,

00:40:34.580 --> 00:40:39.300
IT networks and things like that,
it's hard to do.

00:40:39.300 --> 00:40:43.140
Secondly, mobile workers
synchronizing with a server.

00:40:43.140 --> 00:40:45.940
And that's the problem
that we had to solve.

00:40:45.980 --> 00:40:48.960
But I really like that we could solve
any of these other problems as well.

00:40:48.960 --> 00:40:50.160
Server to server.

00:40:50.160 --> 00:40:54.780
You got a web server over here running
from FileMaker that's really busy.

00:40:54.780 --> 00:40:59.360
And you've got another server
over here that the users are on.

00:41:00.500 --> 00:41:03.620
You know, it's too big for one server,
although that's getting

00:41:03.780 --> 00:41:06.680
increasingly hard in FileMaker 7,
because the capacities for

00:41:06.680 --> 00:41:07.840
everything have gone up.

00:41:07.960 --> 00:41:10.690
But nonetheless,
you can synchronize the two servers.

00:41:10.700 --> 00:41:11.840
So you got server to server.

00:41:11.840 --> 00:41:18.520
And a mix and match of any of those
four or three capabilities there.

00:41:18.520 --> 00:41:23.410
Jason Erickson, who's here somewhere,
right there, Jason Erickson,

00:41:23.410 --> 00:41:26.500
who's the president of WorldSync,
calls it database synchronization

00:41:26.500 --> 00:41:27.450
for the rest of us.

00:41:27.460 --> 00:41:28.540
And indeed it is.

00:41:28.540 --> 00:41:30.460
And we like it because it's
both practical and interactive.

00:41:30.500 --> 00:41:30.980
And it's inexpensive.

00:41:30.980 --> 00:41:34.280
There's not a lot of plumbing
that you have to do once you

00:41:34.510 --> 00:41:36.780
install the resources in SyncDeck.

00:41:36.840 --> 00:41:39.620
You just develop,
and it will synchronize.

00:41:41.310 --> 00:41:42.170
How it works.

00:41:42.200 --> 00:41:44.750
Well, this is the part that
really almost started,

00:41:44.760 --> 00:41:47.520
we started laughing when we
got in the middle of this.

00:41:47.520 --> 00:41:52.400
One is,
the synchronization is asynchronous.

00:41:52.400 --> 00:41:54.770
That is,
you decide when you want to synchronize.

00:41:54.850 --> 00:42:01.120
Press a button, kind of go from there,
or run a script or whatever.

00:42:01.200 --> 00:42:04.440
It uses email,
one email account per node,

00:42:04.440 --> 00:42:08.200
transmits compressed
and encrypted shuttles,

00:42:08.200 --> 00:42:12.360
that is the data and only the
changed data is sent over email,

00:42:13.090 --> 00:42:16.200
compressed and encrypted,
with field level tracking

00:42:16.200 --> 00:42:19.670
and conflict detection,
and uses a FileMaker plugin

00:42:20.120 --> 00:42:22.190
with some script and field
resources to accomplish that.

00:42:22.210 --> 00:42:23.200
So it's pretty cool.

00:42:23.200 --> 00:42:24.180
It's simple.

00:42:24.250 --> 00:42:27.200
No complicated server,
no additional stuff.

00:42:27.200 --> 00:42:29.200
You just need email.

00:42:29.200 --> 00:42:30.200
So you don't run that server.

00:42:30.200 --> 00:42:31.560
server.

00:42:31.830 --> 00:42:34.600
Transparent Macro PC and
it's a patented approach.

00:42:34.600 --> 00:42:38.280
The Syncdeck guys have been working
on this for about five years.

00:42:38.400 --> 00:42:41.020
The other things that we like,
two big things that we like,

00:42:41.030 --> 00:42:43.200
first of all is VUM,
Version Update Manager.

00:42:43.200 --> 00:42:45.100
This is big in the FileMaker world.

00:42:45.100 --> 00:42:50.980
We can make a change and then project
that change to any of the servers or

00:42:51.050 --> 00:42:53.880
clients on those servers using Syncdeck.

00:42:54.000 --> 00:42:55.100
That's very cool.

00:42:55.200 --> 00:42:58.000
You make a mistake,
you want to add a button,

00:42:58.000 --> 00:42:59.900
you want to add a layout,
you want to add a file,

00:42:59.900 --> 00:43:01.680
you want to add a table,
you can do all of that.

00:43:01.800 --> 00:43:02.830
Okay.

00:43:03.320 --> 00:43:06.640
And then we can monitor what's going
on because we can be a node on those

00:43:06.640 --> 00:43:12.790
systems and see the data changes and make
sure that everything's going along okay.

00:43:12.960 --> 00:43:15.450
The medical world application
that I'm going to show you

00:43:15.590 --> 00:43:19.440
briefly is a critical care,
managing critical care

00:43:19.440 --> 00:43:20.500
people on ventilators.

00:43:20.670 --> 00:43:24.870
These are the most ill people in
our society and the expenses in

00:43:24.960 --> 00:43:26.680
this environment are really high.

00:43:26.680 --> 00:43:32.230
And the people that developed the
approach that we developed the software

00:43:32.530 --> 00:43:37.870
for really had some great ideas on how
to drop costs and get the care higher.

00:43:38.060 --> 00:43:41.930
They have an office staff, case managers,
they have a feed to

00:43:41.930 --> 00:43:43.920
National Institute of Health.

00:43:43.990 --> 00:43:48.070
They don't have any internal IT staff,
pretty talented office

00:43:48.070 --> 00:43:51.600
workers but no IT staff,
and very complex data

00:43:51.600 --> 00:43:53.540
needs with high security.

00:43:53.610 --> 00:43:56.090
So we use the nimble app approach.

00:43:58.360 --> 00:44:00.610
And I'm just going to show
you a couple of slides.

00:44:00.620 --> 00:44:05.700
If you just look at that, that is,
if I'm a case manager in the field,

00:44:05.890 --> 00:44:06.890
that's the screen that I get.

00:44:06.910 --> 00:44:08.700
If I'm in the office,
that's the screen that I get.

00:44:08.700 --> 00:44:11.300
If I'm on the web,
that's the screen that I get.

00:44:11.360 --> 00:44:13.270
Same codebase.

00:44:15.970 --> 00:44:19.450
This is an evaluation screen,
lots of medical data,

00:44:19.450 --> 00:44:21.490
don't need to go into it, but

00:44:22.140 --> 00:44:27.320
Same whether I'm in the office,
I'm mobile, or I'm on the web.

00:44:27.550 --> 00:44:29.390
Notes.

00:44:30.100 --> 00:44:33.840
By the way, the other thing I want to
mention is that they switched.

00:44:33.840 --> 00:44:36.040
We started out,
they were an all Mac shop, we showed up,

00:44:36.120 --> 00:44:38.100
we're doing Mac development,
and guess what happened?

00:44:38.100 --> 00:44:43.950
They finally showed up one day,
one of the guys had had a broken Compaq,

00:44:43.950 --> 00:44:48.460
and we loaned them an iBook,
and it started this cascade.

00:44:48.460 --> 00:44:48.460
And so,

00:44:49.120 --> 00:44:50.700
In a couple of months they'll be all Mac.

00:44:50.700 --> 00:44:53.360
They're gradually all
iBooks in the field,

00:44:53.360 --> 00:44:54.780
servers gonna change, etc.

00:44:54.780 --> 00:45:00.580
So, very cool and very,
very easy to do from a

00:45:00.600 --> 00:45:02.100
development standpoint.

00:45:02.630 --> 00:45:04.450
Thank you very much.

00:45:10.400 --> 00:45:13.940
All such exciting solutions,
you could just talk about them for days.

00:45:13.940 --> 00:45:15.920
But here's our final one.

00:45:16.000 --> 00:45:20.610
Avi Drissman from Harrison Baseview
is going to show a number of

00:45:20.610 --> 00:45:25.400
editorial solutions after he
finishes blessing his demo machine.

00:45:25.400 --> 00:45:28.400
A number of editorial
solutions based on FrontBase.

00:45:28.400 --> 00:45:31.400
Good power book, good power book.

00:45:31.470 --> 00:45:32.390
Thank you, Tyler.

00:45:32.390 --> 00:45:34.500
Actually, a brief apology.

00:45:34.640 --> 00:45:38.830
I learned very late that if you leave
a voicemail in an Apple employee's

00:45:38.830 --> 00:45:42.100
voicemail box and you start it with,
"Hey, this is Avi.

00:45:42.100 --> 00:45:45.850
We need to talk," it
kind of freaks them out.

00:45:51.310 --> 00:45:54.480
Anyway, hi, I'm Avi Drissman,
I'm from Harrison Baseview and

00:45:54.480 --> 00:45:56.480
I'm here on behalf of FrontBase.

00:45:56.480 --> 00:45:58.210
Well, who is Harrison Baseview?

00:45:58.330 --> 00:46:02.410
Well, as you can see it's two different
companies but not really.

00:46:02.500 --> 00:46:05.120
It's Harris Publishing in Melbourne,
Florida and Baseview

00:46:05.180 --> 00:46:06.570
Products up in Ann Arbor.

00:46:06.570 --> 00:46:10.300
And we work together to build all
kinds of publishing solutions,

00:46:10.320 --> 00:46:12.300
primarily for the newspaper industry.

00:46:12.300 --> 00:46:15.270
We're a division of MediaSpan which
owns a couple of other companies

00:46:15.280 --> 00:46:18.300
who do very similar things but
for different media industries.

00:46:18.300 --> 00:46:23.330
And Harris and Baseview together
have more than 2,800 customers

00:46:23.330 --> 00:46:26.830
worldwide which makes us,
I believe, the number one vendor of

00:46:26.830 --> 00:46:28.120
products in our field.

00:46:28.520 --> 00:46:30.210
And they actually like us too.

00:46:30.300 --> 00:46:35.300
I mean, we're number one but we have
very high satisfaction ratings.

00:46:35.300 --> 00:46:37.300
We do all kinds of stuff.

00:46:37.300 --> 00:46:40.740
I'm not going to go very,
very in-depth in all of those

00:46:40.740 --> 00:46:42.910
fields but in general if
you pick up a new newspaper,

00:46:42.910 --> 00:46:45.300
I mean,
first thing you see are the articles.

00:46:45.320 --> 00:46:47.880
So we have an editorial solution
where you've got people out in

00:46:47.890 --> 00:46:50.510
the field and they file articles
and they get laid out on the page.

00:46:50.510 --> 00:46:52.030
You've got to keep everybody in sync.

00:46:52.300 --> 00:46:56.390
Advertising, that's more like classified
advertising where you've got pages

00:46:56.430 --> 00:46:58.500
and pages and pages of classified ads.

00:46:58.500 --> 00:47:00.300
Those aren't laid out by hand.

00:47:00.300 --> 00:47:01.300
Goodness.

00:47:01.380 --> 00:47:03.920
So we've got stuff that will
automatically crank those out,

00:47:03.920 --> 00:47:05.290
bill people, whatever.

00:47:05.300 --> 00:47:09.290
Circulation,
people are paying you for the newspapers.

00:47:09.310 --> 00:47:11.300
So you have to keep track of
who's paid you and you have

00:47:11.300 --> 00:47:11.300
to give them the information.

00:47:11.300 --> 00:47:11.300
So you have to keep track of
who's paid you and you have

00:47:11.300 --> 00:47:11.300
to give them the information.

00:47:11.330 --> 00:47:15.180
So you have to organize
who carries the newspapers,

00:47:15.370 --> 00:47:18.300
the carrier routes and all that stuff.

00:47:18.300 --> 00:47:23.740
Production is for almost everything
else like display ads and so on.

00:47:24.200 --> 00:47:27.510
Most customers aren't going to come
to you with camera-ready copy and say,

00:47:27.510 --> 00:47:28.300
hey, put this in.

00:47:28.300 --> 00:47:30.040
Well, if they do, it's nice.

00:47:30.040 --> 00:47:32.560
But in most cases,
they're just going to say,

00:47:32.560 --> 00:47:36.360
I'm going to need an ad and it's going
to have to say such and such and such

00:47:36.360 --> 00:47:38.140
and such and you get to build it.

00:47:38.280 --> 00:47:40.300
So you've got to keep track
of whose ads are coming in and

00:47:40.300 --> 00:47:40.300
whose ads are not coming in.

00:47:40.300 --> 00:47:43.110
in and whose heads are going and
are the ads ready for today's

00:47:43.170 --> 00:47:48.740
paper because you can't hold the
presses if someone's screwing up.

00:47:48.740 --> 00:47:51.930
Internet is listed
there as the last point,

00:47:52.400 --> 00:48:08.700
[Transcript missing]

00:48:09.830 --> 00:48:11.340
So who's using FrontBase?

00:48:11.610 --> 00:48:13.330
Well, we've got four products.

00:48:13.400 --> 00:48:15.180
Well, three right now.

00:48:15.310 --> 00:48:19.680
Circulation Pro is our circulation
program that goes and keeps track

00:48:19.920 --> 00:48:21.620
of who's getting your paper.

00:48:21.630 --> 00:48:25.210
They're currently a WebObjects
app and they're using FrontBase

00:48:25.210 --> 00:48:28.780
via their JDBC driver and
their WebObjects integration.

00:48:28.780 --> 00:48:32.680
Ad Manager Pro is a classified ad
solution and since classified ads

00:48:32.740 --> 00:48:37.770
require you to see what you're doing,
that's more of a desktop app solution.

00:48:37.770 --> 00:48:39.800
So we actually used Real Basic for that.

00:48:39.820 --> 00:48:43.240
And once again,
FrontBase with Real Basic plugins

00:48:43.240 --> 00:48:44.960
makes that not a problem.

00:48:45.160 --> 00:48:47.800
Production Manager Pro,
within the next year we are hoping

00:48:47.850 --> 00:48:53.040
to do some major work on it and soon
enough they'll be using FrontBase.

00:48:53.080 --> 00:48:56.480
But I'm here on behalf of the
editorial team and we just

00:48:56.480 --> 00:48:58.560
finished up NewsEdit Pro IQ.

00:48:58.560 --> 00:49:03.640
We just announced it at the
Nexpo conference last week.

00:49:03.790 --> 00:49:06.460
That's our icon up there.

00:49:06.490 --> 00:49:11.920
That's an editorial solution and
we're building it piece by piece.

00:49:12.030 --> 00:49:15.640
Server, this is more of a traditional
server kind of approach.

00:49:15.660 --> 00:49:20.640
We're doing it as a J2EE application
using an application server called JBoss.

00:49:20.710 --> 00:49:23.470
If you want to check that out, well,
you missed session 610,

00:49:23.470 --> 00:49:25.640
but go check it up on the DVD.

00:49:25.650 --> 00:49:31.090
But the idea is it's a J2EE application
server that's free but also very,

00:49:31.130 --> 00:49:34.060
very powerful and we love it.

00:49:34.060 --> 00:49:37.600
It allows us to go access
things using EJB entity beans

00:49:37.600 --> 00:49:39.600
we need to get to our data.

00:49:39.600 --> 00:49:42.440
Sometimes EJBQL is just not
good enough and we have to

00:49:42.440 --> 00:49:43.500
go straight to the database.

00:49:43.500 --> 00:49:48.300
We use the JDBC driver and we can go
format whatever ridiculous queries

00:49:48.300 --> 00:49:51.040
we need to do to support the user.

00:49:51.370 --> 00:49:55.680
Functionality-wise,
EGB session beans and Singleton

00:49:55.680 --> 00:49:59.570
M-Beans because J2E spec
doesn't let you do Singleton,

00:49:59.580 --> 00:50:02.120
so it's some technical stuff.

00:50:02.120 --> 00:50:04.830
As for clients, well,
most of the end-user clients

00:50:04.830 --> 00:50:09.110
are actually Carbon apps that we
brought over some cross-platform

00:50:09.150 --> 00:50:12.140
stuff with some incredible magic.

00:50:12.140 --> 00:50:15.140
We have some Java applications for
the administration of the server,

00:50:15.250 --> 00:50:18.980
but those aren't what the
users see at this point.

00:50:18.980 --> 00:50:25.000
They connected this server
using a proprietary protocol.

00:50:25.000 --> 00:50:26.200
And tools.

00:50:26.200 --> 00:50:30.260
Pretty much FrontBaSe is very standard,
so whatever tools we want.

00:50:30.260 --> 00:50:36.080
We're also very, very laid back,
so pretty much we build using Ant.

00:50:36.080 --> 00:50:38.460
If you want to use a different editor,
go ahead.

00:50:38.500 --> 00:50:41.780
We've got people using Eclipse, IntelliJ,
JBuilder.

00:50:41.780 --> 00:50:44.580
But as long as you build with Ant and
you don't check in anything into

00:50:44.580 --> 00:50:47.480
this server that breaks the build,
we don't care.

00:50:47.480 --> 00:50:48.430
Oh, and implementation.

00:50:48.480 --> 00:50:50.860
You can implement the
features you need to,

00:50:50.860 --> 00:50:52.720
but that's a different matter.

00:50:52.730 --> 00:50:53.720
So why FrontBaSe?

00:50:53.720 --> 00:50:56.740
I mean,
we took a look at a whole bunch of

00:50:56.740 --> 00:51:01.410
different front database servers,
and we decided on FrontBaSe for

00:51:01.430 --> 00:51:02.360
a couple of reasons.

00:51:02.360 --> 00:51:05.620
I mean, the first batch of reasons
here is simplicity.

00:51:05.620 --> 00:51:06.620
It's easy to install.

00:51:06.620 --> 00:51:09.460
Now, I mean,
I'm not going to say I'm a stupid guy,

00:51:09.460 --> 00:51:12.930
and I could probably make anything
install if I tried hard enough,

00:51:12.950 --> 00:51:13.780
but why bother?

00:51:13.840 --> 00:51:16.450
When you take a look at a
database solution and you say,

00:51:16.450 --> 00:51:17.500
"Click, click.

00:51:17.500 --> 00:51:20.900
It's on there." And it works,
and you don't have to

00:51:20.900 --> 00:51:23.080
worry about installing it.

00:51:23.080 --> 00:51:26.290
That saves a lot of time for me
because then I can go and write

00:51:26.290 --> 00:51:29.850
code and do all the other stuff
that I'm paid to do instead of going

00:51:29.850 --> 00:51:32.040
and fiddling around with an install.

00:51:32.040 --> 00:51:36.820
And it's also very important because
we go on site to these newspapers and

00:51:37.000 --> 00:51:39.080
we install our solutions for them.

00:51:39.080 --> 00:51:42.600
And, well, I don't go,
but we have installers and trainers,

00:51:42.800 --> 00:51:46.320
and they don't necessarily
have all the skills to do that.

00:51:46.320 --> 00:51:47.480
So just being able to say, "Click, click.

00:51:47.480 --> 00:51:49.480
It's on there." And then, "Click, click.

00:51:49.480 --> 00:51:51.630
It's installed." Go on to the rest
of this stuff that needs installing

00:51:51.650 --> 00:51:56.560
instead of having to worry about it
is a very good asset that we've got.

00:51:56.560 --> 00:51:59.640
Less configuration means
more time to do real work.

00:51:59.640 --> 00:52:00.640
And low maintenance.

00:52:00.640 --> 00:52:03.040
These are newspapers,
and they've got IT staffs who are

00:52:03.040 --> 00:52:07.680
busy running around supporting
wall quark and other layout stuff.

00:52:07.680 --> 00:52:11.560
So they don't necessarily have the time
to fiddle around with DBAs and stuff.

00:52:11.560 --> 00:52:14.660
So we want to make sure
that they don't need it.

00:52:14.660 --> 00:52:16.600
And fortunately, they don't.

00:52:16.600 --> 00:52:17.770
But it's not a toy.

00:52:17.800 --> 00:52:20.080
This is not some cheap
little database that,

00:52:20.140 --> 00:52:23.400
if you're lucky,
kind of works and supports stuff.

00:52:23.400 --> 00:52:25.000
It's SQL 92 compliant.

00:52:25.020 --> 00:52:29.240
So there are three
points I wanted to make.

00:52:29.240 --> 00:52:31.140
The third one I just came
up with the other day.

00:52:31.140 --> 00:52:32.680
So it's not on here.

00:52:32.680 --> 00:52:33.600
Feature number one.

00:52:33.680 --> 00:52:35.450
The thing is, is that it's got all the
features that you want.

00:52:35.460 --> 00:52:38.440
For example, subselects.

00:52:38.440 --> 00:52:39.380
We use them all the time.

00:52:39.470 --> 00:52:42.920
And you don't have to worry about, well,
is this feature in the database?

00:52:42.920 --> 00:52:43.910
Did they just add it?

00:52:43.920 --> 00:52:44.910
Is it in the next release?

00:52:44.920 --> 00:52:45.920
No.

00:52:45.920 --> 00:52:46.990
It's there if it's in the standard.

00:52:47.120 --> 00:52:51.300
And the second thing is you
don't have to worry about syntax.

00:52:51.300 --> 00:52:54.610
For a standard, SQL is varied.

00:52:54.620 --> 00:52:56.720
And everybody implements
it in just a different way.

00:52:56.740 --> 00:52:58.960
So then the question is, well,
how did they do it?

00:52:58.960 --> 00:52:59.950
Do we have to phrase it this way?

00:52:59.990 --> 00:53:01.120
Do we have to phrase it that way?

00:53:01.380 --> 00:53:02.120
No.

00:53:02.120 --> 00:53:04.330
You just open up your
SQL 92 standards book.

00:53:04.340 --> 00:53:07.960
And whatever they say, that works.

00:53:07.960 --> 00:53:10.990
Another interesting thing about SQL 92
compliance is they're very strict.

00:53:11.000 --> 00:53:15.970
So they don't mess around
with any data integrity.

00:53:16.300 --> 00:53:20.280
The database engine does not like you.

00:53:20.280 --> 00:53:25.870
But by the time you get it
working very well on FrontBase,

00:53:25.870 --> 00:53:29.260
you have not made any mistakes.

00:53:29.260 --> 00:53:31.380
Another feature that
it's got is clustering.

00:53:31.380 --> 00:53:34.300
We took a look at what we could
find for that feature in other

00:53:34.300 --> 00:53:37.950
databases and either it's not
available at all or it's at a price

00:53:37.950 --> 00:53:40.450
point that we just couldn't afford.

00:53:40.450 --> 00:53:45.180
So clustering at the price point and at
the availability of the OS X is a great

00:53:45.180 --> 00:53:47.170
way to get the best out of your OS X.

00:53:47.200 --> 00:53:48.540
Control via JDBC.

00:53:48.540 --> 00:53:50.340
We can do all kinds of
stuff via the driver.

00:53:50.340 --> 00:53:53.340
I mean, creating and destroying tables,
sure,

00:53:53.370 --> 00:53:57.920
but creating and destroying databases,
back them up, start and stop them,

00:53:57.920 --> 00:54:01.100
not everybody's JDBC driver can do that.

00:54:01.100 --> 00:54:02.980
And in general,
we've got other issues that

00:54:02.980 --> 00:54:04.220
we needed to contend with.

00:54:04.260 --> 00:54:04.890
Platforms.

00:54:05.010 --> 00:54:07.800
We needed to make sure that
even though it was available on

00:54:07.800 --> 00:54:10.640
other platforms like Windows and
Unix and other stuff like that,

00:54:10.640 --> 00:54:13.800
we wanted to make sure
that it had OS X support.

00:54:13.800 --> 00:54:18.200
And it's not always easy to find that.

00:54:18.200 --> 00:54:22.600
Price-wise, for the features that we got,
the pricing is very aggressive

00:54:22.600 --> 00:54:27.240
and very cool and support has
been absolutely incredible.

00:54:27.240 --> 00:54:30.980
So I'm going to actually attempt a demo.

00:54:31.260 --> 00:54:32.990
And so if we could switch to Mr.

00:54:32.990 --> 00:54:34.040
PowerBook here.

00:54:34.180 --> 00:54:35.140
Oh, cool.

00:54:35.140 --> 00:54:36.840
Thank you very much.

00:54:36.840 --> 00:54:38.700
This is our administration tool.

00:54:38.700 --> 00:54:41.700
Very briefly, I don't want to go into
too much depth on him,

00:54:41.700 --> 00:54:44.960
but he'll just show you the
kind of things that we've got.

00:54:44.960 --> 00:54:47.680
So here are our media products, i.e.

00:54:47.680 --> 00:54:48.310
newspapers.

00:54:48.320 --> 00:54:50.720
So we've got the BaseView Bugle.

00:54:50.700 --> 00:54:53.980
I don't know,
my favorite newspaper of choice.

00:54:54.020 --> 00:54:57.900
Priorities here, users and so on.

00:54:57.920 --> 00:55:03.180
But this one actually is a swing
app and it works pretty well.

00:55:03.190 --> 00:55:04.700
There's our control app.

00:55:04.720 --> 00:55:06.700
But pretty much everything
works in NewsEdit Pro.

00:55:06.700 --> 00:55:13.290
This is our end user
app for most end users.

00:55:13.290 --> 00:55:13.290
And so let's go...

00:55:13.400 --> 00:55:18.900
[Transcript missing]

00:55:19.270 --> 00:55:21.780
So you open up a new document.

00:55:21.780 --> 00:55:26.960
I'm going to use our styled macro key to
just drop my title and position in there.

00:55:27.080 --> 00:55:28.450
And so I'm going to go write a story.

00:55:28.450 --> 00:55:31.540
Unfortunately,
I'm not really a fast typer,

00:55:31.540 --> 00:55:36.880
so I'm going to go do another styled
macro and just drop one in really quick.

00:55:36.990 --> 00:55:41.740
So if we go command-quote,
because this is Geneva and this

00:55:41.810 --> 00:55:44.080
font is just up there so you
can quickly see what you've got.

00:55:44.080 --> 00:55:45.840
This is not what the
newspaper is printing in,

00:55:45.840 --> 00:55:46.640
goodness knows.

00:55:46.640 --> 00:55:50.320
So you can go hop to preview and oh,
looks pretty cool.

00:55:50.390 --> 00:55:52.800
Hop back from preview.

00:55:52.860 --> 00:55:56.910
And so let's go to,
let's turn off preview.

00:55:56.920 --> 00:55:58.090
I thought I hit that.

00:55:58.310 --> 00:56:00.410
Make a new headline.

00:56:00.610 --> 00:56:11.420
Say, okay, it's like 30 inch display
or 30 inch screen WWDC and

00:56:11.420 --> 00:56:14.190
so that's going to overflow.

00:56:15.180 --> 00:56:19.400
So we can highlight that and go
make the font a little bit bigger.

00:56:19.400 --> 00:56:24.950
We can go into the headline and drop
the box down to fit the headline.

00:56:25.090 --> 00:56:25.580
Preview that.

00:56:25.660 --> 00:56:27.620
Ooh, wonderful.

00:56:27.620 --> 00:56:29.750
So we go save that.

00:56:29.800 --> 00:56:33.460
We can also deal with images too.

00:56:33.460 --> 00:56:36.820
So, if we go in and do a saved
search for our images,

00:56:36.830 --> 00:56:38.370
let's see what we can find.

00:56:38.530 --> 00:56:43.210
We've got, "la la la la la,
I think I saw the other day

00:56:43.260 --> 00:56:48.760
while preparing for this,
ooh Sandra." So you double click

00:56:48.850 --> 00:56:51.450
her and up it comes in Photoshop.

00:56:51.980 --> 00:56:54.970
So we go and if Photoshop didn't work,
I wrote the plugin for that

00:56:54.970 --> 00:56:57.840
so I know who to blame.

00:56:57.910 --> 00:57:00.150
So let's go in and...

00:57:00.490 --> 00:57:04.110
Zoom in, crop in, save.

00:57:04.170 --> 00:57:05.300
Yeah, yeah, yeah.

00:57:05.420 --> 00:57:08.560
And as soon as we close,
our plugin kicks in,

00:57:08.560 --> 00:57:11.700
updates the database so when we
do an update of our image search,

00:57:11.910 --> 00:57:14.160
there she is, cropped in.

00:57:14.320 --> 00:57:16.780
And then finally, since you want to get
things out on paper,

00:57:16.830 --> 00:57:18.410
you're going to need to do layout.

00:57:18.620 --> 00:57:22.160
So let's pull up our template search,
it's a minimized search,

00:57:22.160 --> 00:57:24.320
and we've got Quark and InDesign support.

00:57:24.420 --> 00:57:27.210
I'm going to choose InDesign today.

00:57:31.180 --> 00:57:36.800
Actually, more for familiarity,
I wrote the plugin again, so once again,

00:57:37.020 --> 00:57:40.290
I get to berate myself if
it just doesn't work right.

00:57:40.340 --> 00:57:41.980
Zoom out a little bit.

00:57:42.120 --> 00:57:45.140
Hop back to NewsEdit, My Stories.

00:57:45.190 --> 00:57:47.730
Now since I just filed that story,
that search searches

00:57:47.730 --> 00:57:48.750
for anything I created.

00:57:48.960 --> 00:57:49.970
It's right there.

00:57:50.090 --> 00:57:53.350
So you just take the file
and you just drag and drop it

00:57:53.370 --> 00:57:56.760
right onto the page and thunk.

00:57:57.250 --> 00:57:58.130
There we go.

00:57:58.240 --> 00:58:01.140
Now it actually does match
the margins if you do that.

00:58:01.140 --> 00:58:04.130
So you zoom in and zoom
in and the text is there.

00:58:04.130 --> 00:58:06.890
And you can see the style sheets
match up and the character

00:58:06.890 --> 00:58:08.140
styles and all that stuff.

00:58:08.470 --> 00:58:09.820
And it looks pretty cool.

00:58:09.860 --> 00:58:14.040
If we go back to NewsEdit,
back to the image search,

00:58:14.040 --> 00:58:18.310
you can grab an image and
just drop that on the page.

00:58:18.460 --> 00:58:23.820
And if you notice that it automatically
keeps the caption as well.

00:58:23.820 --> 00:58:25.290
Should probably not drop that on top.

00:58:25.950 --> 00:58:27.720
There is a caption in here.

00:58:27.720 --> 00:58:31.900
I didn't demo with this exact image,
so there should be a caption there,

00:58:31.950 --> 00:58:32.720
honest.

00:58:32.720 --> 00:58:36.710
So I could probably go and...

00:58:37.540 --> 00:58:42.540
Come on, I've got to go make a cool demo.

00:58:42.540 --> 00:58:43.180
Drop it on there.

00:58:43.300 --> 00:58:46.900
And we have a caption on that photo.

00:58:47.600 --> 00:58:48.350
There we go.

00:58:48.550 --> 00:58:49.500
So that image has a caption.

00:58:49.500 --> 00:58:53.530
And so you go and you print and out
comes this huge piece of paper and

00:58:53.530 --> 00:58:59.180
the presses that run 20,000 copies
an hour and you make everybody happy.

00:58:59.320 --> 00:59:02.320
And so this is pretty much our system
but pretty much everything you see

00:59:02.330 --> 00:59:06.670
here from the articles to the pictures
down to the style sheets themselves,

00:59:06.670 --> 00:59:09.900
everything is running in a
database called FrontBaSe.

00:59:10.040 --> 00:59:11.560
Thank you.

00:59:20.170 --> 00:59:23.650
The ground rules for this session
was all the different database

00:59:23.650 --> 00:59:26.030
representatives would play nice.

00:59:26.030 --> 00:59:28.890
Unfortunately,
I didn't broaden that out to don't

00:59:28.890 --> 00:59:31.610
pick on any page layout applications.

00:59:34.580 --> 00:59:40.610
For more information,
here's contact information for the

00:59:40.680 --> 00:59:44.670
different presenters you've seen.

00:59:44.670 --> 00:59:44.670
If you're interested in any of the
solutions that they showed you today,

00:59:44.670 --> 00:59:44.670
as well as my contact info on there.

00:59:46.710 --> 00:59:50.710
and reference in case you've never
heard of Google or any other search

00:59:50.750 --> 00:59:54.950
engine these are the URLs for
the different database providers.