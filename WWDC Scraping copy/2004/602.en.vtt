WEBVTT

00:00:13.450 --> 00:00:14.690
Morning.

00:00:14.880 --> 00:00:17.640
Before we start this session,
I want to talk a bit about the session

00:00:17.640 --> 00:00:20.330
that's going to be coming after this.

00:00:21.180 --> 00:00:23.430
Because Xsan is a brand-new
technology and we have tons of

00:00:23.540 --> 00:00:27.330
things we wanted to talk about,
we split the content into two sessions.

00:00:27.450 --> 00:00:29.590
The first one is this one,
introducing Xsan.

00:00:29.590 --> 00:00:32.340
And the second one is
the one right after this,

00:00:32.420 --> 00:00:35.340
10:30 in this room, Xsan in-depth.

00:00:35.340 --> 00:00:38.450
So if you're here to learn about
what Xsan offers and what it

00:00:38.500 --> 00:00:41.940
takes to deploy and manage it,
or to learn how to program for it,

00:00:42.030 --> 00:00:44.530
we highly recommend that
you attend both sessions.

00:00:44.710 --> 00:00:47.660
And here, I just wanted to quickly
review what we're going to talk

00:00:47.750 --> 00:00:49.380
about in these two sessions.

00:00:49.710 --> 00:00:52.240
So in this session,
we're going to start off by talking

00:00:52.240 --> 00:00:56.700
about why you may need a Xsan
file system for other benefits.

00:00:57.860 --> 00:01:00.050
And we're going to spend a pretty
good chunk of time talking about

00:01:00.130 --> 00:01:02.800
all the key features of Xsan,
everything from the basic

00:01:02.800 --> 00:01:05.470
file system to the management,
to performance,

00:01:05.570 --> 00:01:07.270
to cross-platform support.

00:01:08.610 --> 00:01:11.230
And we're going to cover
what it takes to deploy Xsan.

00:01:11.280 --> 00:01:13.630
Basically,
we're going to go over the basic hardware

00:01:13.630 --> 00:01:17.070
configuration with a few examples.

00:01:18.200 --> 00:01:20.590
And then to conclude the session,
we're going to talk about different

00:01:20.620 --> 00:01:24.630
software and hardware product
Apple offers to build Xsan and also

00:01:24.630 --> 00:01:27.310
build different solutions on top of it.

00:01:27.690 --> 00:01:30.600
So that should keep us busy for
next hour to hour and a half.

00:01:30.600 --> 00:01:32.910
And then at 10:30,

00:01:34.900 --> 00:01:38.290
We're going to talk about how Xsan
works from an engineering perspective.

00:01:38.300 --> 00:01:40.140
So, for example,
we're going to talk about things

00:01:40.140 --> 00:01:44.590
like what gets passed on wire
when you make a file system call.

00:01:46.410 --> 00:01:50.530
And we're going to spend lots of time
talking about the administration of Xsan.

00:01:50.620 --> 00:01:53.770
In fact, we're going to have a demo
of Xsan admin software,

00:01:53.770 --> 00:01:57.240
using it to set up SAN from scratch,
or almost from scratch.

00:01:57.320 --> 00:01:59.600
So that should be pretty fun.

00:02:01.000 --> 00:02:04.250
Right, and we're going to talk about
different aspects of administration,

00:02:04.350 --> 00:02:06.550
such as command line tools.

00:02:06.620 --> 00:02:14.250
Then we're going to talk about
a few tips for developers,

00:02:14.250 --> 00:02:18.170
things they should watch out
for when accessing Xsan volumes,

00:02:18.170 --> 00:02:18.170
things such as scalability
and locking and other issues.

00:02:18.740 --> 00:02:21.650
And lastly, we're going to talk
about Xsan Developer API.

00:02:21.800 --> 00:02:24.640
We're going to have a demo for a couple
sample applications using that API,

00:02:24.640 --> 00:02:28.100
and it's pretty visual,
so it should be pretty entertaining.

00:02:30.050 --> 00:02:32.530
So with that,
I would like to introduce the

00:02:32.530 --> 00:02:35.970
speaker of the first session,
Tom Gaugen, Director of Server and

00:02:35.970 --> 00:02:38.990
Storage Software from
Worldwide Product Marketing.

00:02:39.000 --> 00:02:42.280
Tom Gaugen: Thanks, Kazu.

00:02:44.500 --> 00:06:25.600
[Transcript missing]

00:06:25.850 --> 00:06:30.640
Now, what came out and came into vogue
a few years ago were NAS devices,

00:06:30.840 --> 00:06:32.860
network-attached storage.

00:06:32.900 --> 00:06:36.520
The reason these are very interesting is
that these are purpose-built appliances

00:06:36.760 --> 00:06:40.160
for sharing storage over the network.

00:06:40.240 --> 00:06:44.400
So, in a sense, it's just like a
direct-attached storage device,

00:06:44.540 --> 00:06:47.420
except that it's storage
with an embedded file server.

00:06:47.420 --> 00:06:48.990
It's a good way to think about it.

00:06:49.340 --> 00:06:54.740
So, it has some really great advantages,
one of which is typically NAS devices

00:06:54.800 --> 00:06:59.730
are extremely easy to deploy,
very quick to get them up and running.

00:06:59.730 --> 00:07:02.780
And that's because they
are single-purpose devices.

00:07:02.780 --> 00:07:05.450
Their whole point is to
share storage on the network.

00:07:05.460 --> 00:07:08.470
At the same time,
they do suffer from some of the

00:07:08.590 --> 00:07:13.730
same performance and scalability
limitations as direct-attached storage.

00:07:13.780 --> 00:07:17.850
Now, there's a whole range of
very sophisticated things

00:07:17.880 --> 00:07:19.050
that some companies offer.

00:07:19.450 --> 00:07:22.710
In terms of storage
virtualization services,

00:07:22.890 --> 00:07:27.150
where they can actually make
multiple NAS devices appear like,

00:07:27.150 --> 00:07:30.280
and on the network appear
like a single device,

00:07:30.280 --> 00:07:32.640
or they can eliminate some of
these single points of failure.

00:07:32.640 --> 00:07:36.380
But it is fairly complex to
deploy the storage virtualization

00:07:36.500 --> 00:07:38.460
software to accomplish this.

00:07:40.250 --> 00:07:44.810
Now, in a storage area network,
this is where multiple storage devices

00:07:44.950 --> 00:07:47.280
are attached to a fiber channel network.

00:07:47.310 --> 00:07:50.140
That's really what a storage
area network is all about.

00:07:50.220 --> 00:07:53.200
Now, fiber channel today,
as well as iSCSI.

00:07:53.200 --> 00:07:56.160
You could use a different
type of network called iSCSI.

00:07:56.160 --> 00:07:59.080
This is SCSI protocol over IP,
over Ethernet.

00:07:59.100 --> 00:08:02.430
But for all intents and purposes today,
when I talk about a Xsan,

00:08:02.430 --> 00:08:05.700
I'm going to be talking about
a Xsan based on fiber channel.

00:08:05.700 --> 00:08:11.910
So we have multiple storage devices
connected to a fiber channel switch,

00:08:12.130 --> 00:08:18.040
and then we have multiple servers that
are able to access those storage devices.

00:08:18.040 --> 00:08:22.040
Now, a key thing is that they essentially
access the storage devices,

00:08:22.040 --> 00:08:24.900
and in a sense,
they share the storage devices,

00:08:25.000 --> 00:08:29.200
but they don't share the
data on the storage devices.

00:08:29.200 --> 00:08:31.990
And I'll get into a little bit
of detail on that right now.

00:08:32.250 --> 00:08:35.620
So, why a Xsan file system?

00:08:35.800 --> 00:08:38.390
Well, as I said,
at Xsan you have multiple computers

00:08:38.480 --> 00:08:40.270
accessing the same storage device.

00:08:40.310 --> 00:08:43.180
In the example here,
we've got an XServe RAID connected

00:08:43.290 --> 00:08:44.800
to a fiber channel switch.

00:08:44.860 --> 00:08:47.360
The XServe RAID presents
two RAID controllers,

00:08:47.410 --> 00:08:50.600
hence the two fiber channel
lines coming down from the top,

00:08:50.690 --> 00:08:55.060
and the fiber channel switch to the
three XServes that are shown here.

00:08:55.230 --> 00:08:58.240
These three XServes are
connected via fiber channel

00:08:58.240 --> 00:08:59.900
to the fiber channel switch.

00:08:59.980 --> 00:09:01.960
And they can see the XServe RAID.

00:09:02.060 --> 00:09:03.730
Each one of them can.

00:09:03.790 --> 00:09:07.340
In fact, they could take that storage
from the XServe RAID,

00:09:07.400 --> 00:09:14.610
and they can reshare it using network
protocols such as AFP-SMB or NFS across

00:09:14.690 --> 00:09:17.700
the network to these clients.

00:09:17.770 --> 00:09:21.220
So they can do the exact same
thing that a NAS device or

00:09:21.220 --> 00:09:23.690
direct-attached storage can do.

00:09:24.350 --> 00:09:29.770
However, the challenge with this,
before you have a Xsan file system,

00:09:29.780 --> 00:09:33.340
is that each RAID set
is effectively a volume,

00:09:33.480 --> 00:09:38.920
and the volumes are connected
separately to each one of the servers.

00:09:38.920 --> 00:09:43.360
So you have A, B, and C up in there,
denoted by the colors, and A, B,

00:09:43.480 --> 00:09:46.270
and C are mounted by
each of those servers.

00:09:46.320 --> 00:09:51.230
Only one server can
mount one file system.

00:09:52.320 --> 00:09:54.620
So a server could mount
multiple file systems,

00:09:54.700 --> 00:09:57.100
but the file system, or the A, or the B,
or the C,

00:09:57.100 --> 00:09:58.980
can only be mounted by one server.

00:09:58.980 --> 00:10:01.820
It can't be mounted by two
servers at the same time.

00:10:03.240 --> 00:10:05.780
So, each RAID set is mapped to a server.

00:10:05.780 --> 00:10:09.560
That's a process called
provisioning in the Xsan world.

00:10:09.560 --> 00:10:11.950
And that's what that's all about.

00:10:12.120 --> 00:10:14.750
The reason a Xsan file
system is interesting is you

00:10:14.750 --> 00:10:16.470
eliminate these data silos.

00:10:16.560 --> 00:10:21.240
Keep in mind that Server A over
here only sees the data in Volume A.

00:10:21.270 --> 00:10:24.180
Server B only sees the data in Volume B.

00:10:24.240 --> 00:10:27.400
Server C only sees the data in Volume C.

00:10:27.600 --> 00:10:29.200
That's before a Xsan file system.

00:10:29.200 --> 00:10:34.510
After a Xsan file system,
you can actually have data A, B, and C,

00:10:34.540 --> 00:10:37.420
as denoted up above, in a single volume.

00:10:37.420 --> 00:10:43.000
So this would be a single 3,
3.5 terabyte volume on the XServe RAID.

00:10:43.200 --> 00:10:48.200
And that volume can be seen
by each of these servers.

00:10:48.200 --> 00:10:51.880
So this is kind of a
subtle difference between

00:10:52.420 --> 00:10:57.790
network-attached storage and SANs,
in that the file system used for a

00:10:57.790 --> 00:10:58.200
SAN can actually be used for a server.

00:10:58.200 --> 00:10:58.200
And that's what we're
going to talk about today.

00:10:59.200 --> 00:11:00.790
So, basically,
the volumes created by that file

00:11:00.920 --> 00:11:06.730
system can actually be mounted
directly with direct block-level

00:11:06.730 --> 00:11:12.200
access by each of the servers or
desktops that's attached to the SAN.

00:11:12.300 --> 00:11:16.260
So, multiple computers,
all three of these computers,

00:11:16.260 --> 00:11:20.200
can read and write to the
same volume at the same time.

00:11:20.330 --> 00:11:22.200
And this is block-level access.

00:11:22.400 --> 00:11:28.200
Very, very different from, in a sense,
from when you have a network file system.

00:11:28.200 --> 00:11:32.060
So, it's sharing a file system
to multiple computers,

00:11:32.420 --> 00:11:35.650
but final arbitration,
block-level access to the

00:11:35.650 --> 00:11:42.050
volume that it's sharing,
is arbitrated by the file server itself,

00:11:42.060 --> 00:11:43.200
by that single file server.

00:11:43.200 --> 00:11:45.190
This is very different.

00:11:45.420 --> 00:11:48.000
And, of course,
it could re-share that volume

00:11:48.070 --> 00:11:50.200
to all of these clients as well.

00:11:50.200 --> 00:11:55.100
So now we have three servers
able to share the data that's on

00:11:55.100 --> 00:11:57.910
that volume out to the network.

00:11:58.810 --> 00:12:02.070
Now, the nice thing about a Xsan
file system is it's very,

00:12:02.160 --> 00:12:04.160
very easy to scale.

00:12:04.200 --> 00:12:06.360
So you want to add more storage.

00:12:06.460 --> 00:12:10.240
You've gone past 3 and 1/2 terabytes,
and you want to go to 5

00:12:10.240 --> 00:12:12.050
or 6 terabytes of storage.

00:12:12.170 --> 00:12:14.130
You literally add the storage in.

00:12:14.380 --> 00:12:16.410
You can grow the file system.

00:12:16.640 --> 00:12:20.960
And all of the systems that are
attached directly to the file

00:12:21.040 --> 00:12:26.100
system simply see a larger volume
with more space for more data.

00:12:26.110 --> 00:12:28.800
Now, again,
the other thing you can do is you

00:12:28.800 --> 00:12:35.310
can add more servers to the Xsan
as well and share the data in the

00:12:35.310 --> 00:12:38.120
volume through more file servers.

00:12:38.150 --> 00:12:41.980
So you can literally get more
network performance out of the

00:12:41.980 --> 00:12:45.840
Xsan than you would get with having
a single server sharing a volume.

00:12:45.990 --> 00:12:49.670
Because now you have 3, 4, 5, or 6,
as we show here,

00:12:49.670 --> 00:12:54.480
servers able to share the data
that's on the same volume.

00:12:54.600 --> 00:12:55.980
So that's why a Xsan file
system is so important.

00:12:56.030 --> 00:12:59.360
A file system is very interesting.

00:12:59.550 --> 00:13:02.120
A little overview of Xsan.

00:13:03.060 --> 00:13:06.080
Xsan is for high-performance
storage networking.

00:13:06.080 --> 00:13:08.180
So it's very, very fast.

00:13:08.180 --> 00:13:11.840
In fact, when you set up an Xsan
system properly configured,

00:13:11.840 --> 00:13:13.930
it'll be,
I don't say this to a lot of you,

00:13:13.940 --> 00:13:16.190
it'll be much,
much faster than the internal

00:13:16.270 --> 00:13:17.820
disk drive on your system.

00:13:17.820 --> 00:13:23.270
In fact, you will get whatever the
storage architecture that

00:13:23.270 --> 00:13:25.640
you deploy can give you.

00:13:25.640 --> 00:13:29.200
Xsan is very,
very lightweight in terms of its

00:13:29.200 --> 00:13:32.670
overhead on the storage infrastructure.

00:13:33.000 --> 00:13:35.290
It has a high availability architecture.

00:13:35.290 --> 00:13:38.430
So you can imagine a system like
this is going to be deployed in

00:13:38.430 --> 00:13:40.500
mission-critical environments.

00:13:40.500 --> 00:13:45.460
We've done a lot of things to make
sure that when you deploy it that way,

00:13:45.460 --> 00:13:49.400
if any single failure happens
somewhere on the system,

00:13:49.400 --> 00:13:51.300
we've got you covered.

00:13:51.300 --> 00:13:53.420
And I'm going to take you
through some of that as well.

00:13:53.420 --> 00:13:56.980
Xsan provides some really,
really interesting

00:13:56.980 --> 00:13:59.100
volume management tools.

00:13:59.100 --> 00:14:02.270
And that's where we get into some
of the nomenclature I mentioned.

00:14:02.280 --> 00:14:02.980
And I'm going to walk
you through some of that.

00:14:03.000 --> 00:14:06.390
I'm going to walk you through a little
bit of the volume management tools and

00:14:06.390 --> 00:14:08.240
show you what we're talking about there.

00:14:08.240 --> 00:14:12.260
And then later on,
I know the guys are going to show you

00:14:12.260 --> 00:14:15.510
how to actually set up a Xsan volume.

00:14:15.600 --> 00:17:33.600
[Transcript missing]

00:17:35.070 --> 00:17:40.110
So from an HA perspective,
we do a couple of things.

00:17:40.250 --> 00:17:42.800
There's a thing called
a metadata controller,

00:17:42.800 --> 00:17:45.000
and I'm going to show you a
little bit more about what that's

00:17:45.150 --> 00:17:46.490
all about in subsequent slides.

00:17:46.540 --> 00:17:50.340
But the metadata controller is
like the traffic cop for the Xsan.

00:17:50.340 --> 00:17:54.610
What the metadata controller does
is that any time a computer on

00:17:54.610 --> 00:17:58.740
the Xsan wants to open a file,
read a file, write to a file,

00:17:58.740 --> 00:18:01.380
it first talks to the
metadata controller.

00:18:02.090 --> 00:18:03.840
And it says, you know,
can I open that file?

00:18:03.840 --> 00:18:06.590
I'd like a read/write
access to this file XYZ.

00:18:06.640 --> 00:18:10.580
And the metadata
controller checks and says,

00:18:10.900 --> 00:18:13.550
okay, no one else has got
read/write access right now,

00:18:13.580 --> 00:18:16.000
so here you go,
you can have read/write access.

00:18:16.000 --> 00:18:18.710
And, you know,
here's where the file is located.

00:18:18.760 --> 00:18:22.250
But note the difference
from a network file system.

00:18:22.250 --> 00:18:24.320
It doesn't say here's the file.

00:18:24.360 --> 00:18:26.960
It says here's where the file is located.

00:18:26.980 --> 00:18:32.060
And then the computer that requested
the file goes in over Fibre Channel,

00:18:32.060 --> 00:18:35.650
and then it goes directly to the
storage at the block level and

00:18:35.650 --> 00:18:37.490
reads or writes to that file.

00:18:37.600 --> 00:18:41.600
So that's what metadata
controller failover is all about,

00:18:41.600 --> 00:18:44.980
is providing a secondary
metadata controller.

00:18:44.980 --> 00:18:47.870
You can imagine if the
metadata controller fails,

00:18:47.870 --> 00:18:50.540
then you've got a real
problem on your network,

00:18:50.540 --> 00:18:53.300
on your SAN,
because nobody knows if they're

00:18:53.310 --> 00:18:57.900
allowed to have access to a file,
where the file's located, and so forth.

00:18:57.980 --> 00:19:01.680
Xsan comes out of the box with
support for metadata controllers.

00:19:01.680 --> 00:19:03.680
So what does a metadata
controller failover?

00:19:03.680 --> 00:19:07.870
If any metadata controller
on your SAN fails,

00:19:07.870 --> 00:19:11.790
the Xsan computers,
the computers running Xsan,

00:19:11.790 --> 00:19:14.530
will get together,
and they will nominate another one

00:19:14.680 --> 00:19:19.670
of these computers to take over the
duties of the metadata controller.

00:19:19.700 --> 00:19:23.180
They will do that automatically,
and that will happen within

00:19:23.180 --> 00:19:26.680
seconds of a detected failure
in the metadata controller.

00:19:26.680 --> 00:19:30.680
So that's what metadata
controller failover is all about.

00:19:30.920 --> 00:19:34.750
One other added note about it:
Because we ship Xsan with the

00:19:34.770 --> 00:19:39.680
metadata controller software built in,
unlike a lot of other SAN vendors,

00:19:39.680 --> 00:19:46.650
any Xsan system connected to the
SAN can be the metadata controller.

00:19:46.680 --> 00:19:49.680
So we support something
called cascading failover.

00:19:49.680 --> 00:19:52.780
This means if the second
metadata controller,

00:19:52.780 --> 00:19:55.680
if that person who stumbled into the
machine and kicked the power cord out,

00:19:55.680 --> 00:19:59.680
stumbles into the next metadata
controller and kicks the power cord out,

00:19:59.810 --> 00:20:03.680
then the next system on
the SAN will take over.

00:20:03.680 --> 00:20:09.680
And so as long as any one system,
any one Xsan system is up and running,

00:20:09.800 --> 00:20:12.670
you have access to your data.

00:20:12.680 --> 00:20:15.670
We think that's extremely
important with these systems.

00:20:15.680 --> 00:20:18.660
Of course the file system is journaled.

00:20:18.750 --> 00:20:20.680
You'd expect that.

00:20:20.680 --> 00:20:23.830
And that's why we can actually
recover the file system

00:20:23.830 --> 00:20:25.680
within seconds of a failure.

00:20:25.680 --> 00:20:30.060
The other metadata controller takes over,
and the other access is the

00:20:30.060 --> 00:20:33.680
file system runs the journals,
and you're up and running within seconds.

00:20:33.700 --> 00:20:37.680
We support something called
fiber channel multipathing.

00:20:37.680 --> 00:20:40.680
So some of you may have
purchased an XServe,

00:20:40.680 --> 00:20:43.660
and you may have gotten the fiber
channel card that goes along with it.

00:20:43.790 --> 00:20:48.730
We have a fiber channel host bus adapter,
or HBA, that goes into the machine so

00:20:48.740 --> 00:20:51.680
that you can connect a fiber
channel cable into the XServe,

00:20:51.690 --> 00:20:54.130
or into a Power Mac G5.

00:20:54.390 --> 00:20:59.160
The thing is that that card
actually supports two connectors.

00:20:59.160 --> 00:21:03.890
And you could actually run both
those connectors to the fiber channel

00:21:03.890 --> 00:21:06.770
switch where they can see the storage.

00:21:06.800 --> 00:25:53.300
[Transcript missing]

00:25:54.100 --> 00:25:56.950
From a volume management perspective,
we support a range of things,

00:25:56.950 --> 00:26:00.180
and I'm going to walk you through a
little bit with this with some pictures.

00:26:00.180 --> 00:26:04.580
Storage pooling, so we group multiple
storage devices together,

00:26:04.580 --> 00:26:08.590
really multiple RAID devices typically,
and you'll hear me,

00:26:08.590 --> 00:26:12.540
you'll hear others refer to them as LUNs,
logical unit numbers.

00:26:12.540 --> 00:26:17.260
A LUN is simply a logical grouping
of storage that's hidden behind some

00:26:17.260 --> 00:26:19.920
form of RAID controller typically.

00:26:21.080 --> 00:26:24.960
And so, for example, with the XSERV RAID,
as many of you know,

00:26:24.960 --> 00:26:28.720
it has two RAID controllers in it,
seven drives on either side attached

00:26:28.720 --> 00:26:30.560
to each of the RAID controllers.

00:26:30.560 --> 00:26:32.940
If you took the seven
over here and just did,

00:26:32.940 --> 00:26:36.100
say, RAID 5 across the mall
to that RAID controller,

00:26:36.100 --> 00:26:39.720
the seven over here,
RAID 5 across them to that controller,

00:26:39.720 --> 00:26:43.440
when you looked at it across
the fiber channel network with

00:26:43.760 --> 00:26:49.290
Xsan's or with Xsan's admin tools,
you would see two LUNs.

00:26:49.510 --> 00:26:53.280
And these two LUNs can then be
grouped together in something

00:26:53.280 --> 00:26:54.910
we call the storage pool.

00:26:55.050 --> 00:26:58.920
In fact, you can group multiple LUNs
across multiple devices

00:26:59.370 --> 00:27:02.160
into multiple storage pools,
in fact.

00:27:02.290 --> 00:27:06.380
So I'll show you how we can do that
sort of thing and what that's all about.

00:27:06.460 --> 00:27:10.370
We can dynamically scale volumes,
as I mentioned earlier.

00:27:10.370 --> 00:27:12.500
So you can grow these volumes.

00:27:12.650 --> 00:27:17.840
We support things like volume
mapping and affinities.

00:27:17.840 --> 00:27:19.910
I'm going to go into a
little bit of detail on this.

00:27:19.910 --> 00:27:25.970
You can decide with the Xsan admin
tools which systems connected to the

00:27:25.990 --> 00:27:30.940
SAN are able to mount which volumes,
and you can have that mount occur.

00:27:30.940 --> 00:27:35.100
You can force that mount or force that
mount right from your admin console.

00:27:35.400 --> 00:27:38.040
As I mentioned,
the admin console works remotely,

00:27:38.040 --> 00:27:42.060
so you can actually run that on a
PowerBook or an iBook and connect

00:27:42.170 --> 00:27:46.900
into your Xsan remotely and take
care of that type of management.

00:27:46.900 --> 00:27:48.630
Affinities I'll go through.

00:27:48.630 --> 00:27:52.140
It's better to do a diagram for
that because it becomes really,

00:27:52.150 --> 00:27:55.820
really clear what affinities
are all about with the diagram.

00:27:55.900 --> 00:27:59.400
We do have offline defragmentation tools.

00:27:59.400 --> 00:28:02.980
Now, the file system is designed,
and by design,

00:28:03.340 --> 00:28:07.390
designed to minimize if not
eliminate fragmentation.

00:28:07.400 --> 00:28:11.400
But there are, of course,
certain operations that can happen

00:28:11.400 --> 00:28:15.710
on a file system that are sort
of out at the fringes that can

00:28:15.710 --> 00:28:17.400
cause some amount of fragmentation.

00:28:17.400 --> 00:28:21.200
And so we include the defragmentation
tools along with the product

00:28:21.360 --> 00:28:25.400
so that you can run those if
necessary on the file system.

00:28:25.400 --> 00:28:29.270
So let's talk about
how we create a volume.

00:28:29.740 --> 00:28:31.630
I mentioned the XServe RAID.

00:28:31.670 --> 00:28:36.290
I build a RAID set, as I mentioned, from,
say, those seven drives.

00:28:36.470 --> 00:28:40.270
Format it or initialize it,
I should say RAID 5,

00:28:40.270 --> 00:28:43.400
and I do that with the RAID admin tools.

00:28:43.400 --> 00:28:47.000
We have to be very clear about what
tools we use with Xsan because you will

00:28:47.000 --> 00:28:48.950
not be using disk utility with Xsan.

00:28:48.960 --> 00:28:57.990
Disk utility is for creating HFS Plus or
UFS volumes and doing software RAID.

00:28:57.990 --> 00:29:03.900
Xsan has its own volume format,
and so when you create an Xsan volume,

00:29:03.900 --> 00:29:06.380
you'll be using the Xsan admin tools.

00:29:06.490 --> 00:29:08.330
to do this.

00:29:08.500 --> 00:29:10.910
So we create a RAID 5 LUN.

00:29:11.130 --> 00:29:13.220
We haven't got a volume yet,
but we've got a LUN.

00:29:13.220 --> 00:29:15.820
It shows up on Fibre Channel.

00:29:16.320 --> 00:29:19.240
We can take multiple LUNs,
as I mentioned,

00:29:19.270 --> 00:29:22.440
and put them into a storage pool.

00:29:22.440 --> 00:29:25.240
And the storage pool allows
you to group multiple LUNs

00:29:25.240 --> 00:29:27.170
that are similar to each other.

00:29:27.290 --> 00:29:30.030
So take multiple RAID 5 LUNs.

00:29:30.120 --> 00:29:33.420
Each LUN, say,
is one and a quarter terabytes in size,

00:29:33.510 --> 00:29:35.400
and you group them together.

00:29:35.400 --> 00:29:40.700
What Xsan does is automatically
stripes data across the storage pool.

00:29:40.700 --> 00:29:44.520
So now you have this
logical grouping of storage,

00:29:44.520 --> 00:29:47.450
this logical pool of Raid 5 lawns.

00:29:49.210 --> 00:29:55.060
You can actually create multiple pools
and put them into a single volume.

00:29:55.060 --> 00:30:04.380
Now, in the example I'm showing here,
we have a RAID 5 storage pool made up

00:30:04.420 --> 00:30:12.770
of one or more RAID 5 LUNs and a RAID 1
or a mirrored set storage pool made up

00:30:12.770 --> 00:30:12.770
of one or more RAID 1 or mirrored sets.

00:30:13.050 --> 00:30:15.310
Okay,
and we've pooled the two things together.

00:30:15.330 --> 00:30:17.210
We haven't pooled them together,
we've grouped them together

00:30:17.590 --> 00:30:20.080
in a single volume.

00:30:20.110 --> 00:30:23.960
Now some of you out there are saying,
"Well, that's kind of cool,

00:30:23.960 --> 00:30:29.510
but where does my data go?" I mean,
does it go on the RAID 5 hardware,

00:30:29.510 --> 00:30:33.660
does it go on the RAID 1 hardware,
just exactly where does it go?

00:30:33.700 --> 00:30:36.870
And that's what's kind of
interesting about affinities.

00:30:36.930 --> 00:30:41.230
So we all know the RAID 5,
in theory at least, would be a little bit

00:30:41.240 --> 00:30:42.750
faster than the RAID 1.

00:30:42.800 --> 00:30:47.980
Xsan is the most protected
type of storage that you have.

00:30:47.980 --> 00:30:49.970
It's a mirrored set.

00:30:49.980 --> 00:30:53.670
So you have fastest and most protected.

00:30:53.710 --> 00:30:59.420
Now, what you can do is you can actually,
through affinities,

00:30:59.420 --> 00:31:05.250
associate those storage pools
with directories or folders in the

00:31:05.380 --> 00:31:08.650
finder or folders in that volume.

00:31:08.680 --> 00:31:12.370
So if you had a couple
of desktops hooked up,

00:31:12.400 --> 00:31:13.900
as I've shown here,

00:31:14.110 --> 00:31:17.480
You can literally provide
the user with two folders.

00:31:17.480 --> 00:31:21.020
In this case, I've called them fastest
and most protected.

00:31:21.150 --> 00:31:25.310
You could call them work
in progress and final work,

00:31:25.310 --> 00:31:26.600
for example.

00:31:26.600 --> 00:31:30.290
And the work in progress
could go to the RAID 5,

00:31:30.290 --> 00:31:33.670
and the final work
could go to the RAID 1.

00:31:34.360 --> 00:31:39.560
So, in a sense, in reality,
affinities will really help you set

00:31:39.890 --> 00:31:45.960
up interesting workflows across the
SAN and move data around the SAN into

00:31:45.960 --> 00:31:51.820
the type or category or class of
storage that is relevant or most useful,

00:31:51.940 --> 00:31:56.940
most appropriate for the type of
data that you want to store in it.

00:31:57.040 --> 00:32:01.210
So, this is a really
interesting feature of Xsan,

00:32:01.210 --> 00:32:04.230
and I invite you to check that out.

00:32:04.360 --> 00:32:06.090
as well.

00:32:07.070 --> 00:32:12.360
From a remote administration perspective,
as I mentioned, fairly easy to configure.

00:32:12.380 --> 00:32:14.590
We do real-time monitoring.

00:32:14.610 --> 00:32:15.950
We'll do event notifications.

00:32:15.960 --> 00:32:20.390
We'll do things like email you
or page you in the event of a

00:32:20.390 --> 00:32:27.480
metadata controller failover,
a fiber channel problem, a quota problem.

00:32:27.480 --> 00:32:29.070
We support usage quotas.

00:32:29.080 --> 00:32:31.470
We have both soft and hard quotas.

00:32:31.470 --> 00:32:34.580
And we do have integration into LDAP.

00:32:34.580 --> 00:32:38.460
And this is where I'll take
a little digression here,

00:32:38.460 --> 00:32:39.280
if you'll allow me this.

00:32:42.520 --> 00:32:49.250
From a Xsan perspective,
the file system sits underneath

00:32:49.610 --> 00:32:54.430
the standard sort of API set,
file system API set in

00:32:54.600 --> 00:32:57.290
Mac OS X and Mac OS X Server.

00:32:57.300 --> 00:33:01.430
So for all intents and purposes,
it just looks like

00:33:01.530 --> 00:33:06.000
another locally attached,
internal, if you will,

00:33:06.000 --> 00:33:09.560
volume on your system
or drive on your system.

00:33:09.560 --> 00:33:12.440
And this is really,
really interesting for

00:33:12.440 --> 00:33:14.000
a couple of reasons.

00:33:14.000 --> 00:33:16.160
Now, with a couple of caveats, too.

00:33:16.160 --> 00:33:20.550
That internal drive looks
and behaves mostly like UFS,

00:33:20.550 --> 00:33:28.510
follows POSIX locking semantics,
and is case-sensitive.

00:33:28.600 --> 00:33:32.260
So all Xsan systems
will be case-sensitive.

00:33:32.260 --> 00:33:37.290
And we are relying on all of you
to do the proper thing from a

00:33:37.290 --> 00:33:39.540
locking standpoint in your system.

00:33:39.560 --> 00:33:44.840
So when you open a file for
a user for read-write access,

00:33:44.840 --> 00:33:45.870
open it.

00:33:45.930 --> 00:33:49.480
And typically in Carbon,
this takes care of itself automatically.

00:33:49.580 --> 00:33:53.420
But if you're doing a Cocoa app
or a Unix application,

00:33:53.430 --> 00:33:57.510
open it and assert the
POSIX lock for that operation.

00:33:57.520 --> 00:34:02.420
And we will adhere to that and use that
in Xsan to make sure that your data

00:34:02.420 --> 00:34:05.580
doesn't get trampled by some other user.

00:34:05.580 --> 00:34:09.460
Now, so that's where Xsan sits.

00:34:09.560 --> 00:34:13.940
And the reason that's interesting
is that on our systems,

00:34:13.940 --> 00:34:17.390
that means that you can
control access to Xsan,

00:34:17.490 --> 00:34:23.080
to the folders and the files in Xsan,
using a directory server.

00:34:23.080 --> 00:34:28.380
So when the person logs into the machine,
or when they remotely attach

00:34:28.520 --> 00:34:32.200
to a server and go in using,
say, a file service,

00:34:32.200 --> 00:34:37.680
they have an identity, a UID,
that has been given to them by

00:34:37.680 --> 00:34:39.540
the directory server at local.

00:34:39.560 --> 00:34:41.560
And that UID is the one that's
going to be used to log in time.

00:34:41.560 --> 00:34:43.560
And all of the machines connected
to the directory server,

00:34:43.560 --> 00:34:45.090
in other words,
all the machines on the Xsan

00:34:45.210 --> 00:34:47.550
connected to the directory server,
recognize that UID.

00:34:47.560 --> 00:34:54.040
And we'll use that UID to determine
whether or not that person has access

00:34:54.040 --> 00:34:57.110
to a folder or file on the Xsan.

00:34:57.490 --> 00:35:00.440
And because Xsan is
coming out in the fall,

00:35:00.440 --> 00:35:04.630
jump ahead a little bit,
but Xsan is coming out in the fall,

00:35:04.670 --> 00:35:08.110
right now we're adhering
to POSIX permissions,

00:35:08.110 --> 00:35:09.950
but not ACLs on Xsan.

00:35:09.960 --> 00:35:13.640
So we use the permissions model
that's built into Panther for that.

00:35:13.640 --> 00:35:19.540
But that gives you some control over
who has access over data in Xsan,

00:35:19.540 --> 00:35:22.800
gives you full integration
with an LDAP directory server,

00:35:22.800 --> 00:35:27.280
and for that matter,
Kerberos infrastructure as well,

00:35:27.360 --> 00:35:30.690
because we're sitting, as I said,
below the file system layer

00:35:30.740 --> 00:35:34.300
in the operating system.

00:35:36.410 --> 00:35:40.180
So, I mentioned a complete SAN solution
and mentioned that you need

00:35:40.180 --> 00:35:42.210
partners to really pull this off.

00:35:42.210 --> 00:35:46.140
So, from a hardware perspective,
we offer XServe RAID.

00:35:46.300 --> 00:35:48.670
It will be qualified on XServe RAID.

00:35:48.990 --> 00:35:53.390
It will be qualified with
the XServe G4 and G5.

00:35:53.490 --> 00:36:01.810
It will also be qualified with the
Power Mac G5 and with Power Mac G4s

00:36:01.810 --> 00:36:02.790
back to dual 800s or better.

00:36:03.290 --> 00:36:06.430
We have our own Fibre
Channel PCI card that we're

00:36:06.430 --> 00:36:08.600
qualifying the system with as well.

00:36:08.620 --> 00:36:12.160
It's going to be qualified
with our professional software,

00:36:12.170 --> 00:36:15.200
including Mac OS X, Mac OS X Server,
and many of our

00:36:15.200 --> 00:36:16.580
professional applications.

00:36:16.580 --> 00:36:20.110
We have worked with the
Fibre Channel switch vendors,

00:36:20.180 --> 00:36:22.980
and we're testing with these switches.

00:36:22.980 --> 00:36:27.240
There's a list of switches on our website
that we're testing with from Brocade,

00:36:27.370 --> 00:36:28.660
QLogic, and Emulex.

00:36:28.760 --> 00:36:30.960
So check those out.

00:36:32.080 --> 00:36:35.920
And from a data management and
interoperability standpoint,

00:36:35.920 --> 00:36:41.540
we have worked with ADIC to
ensure that you can add Windows,

00:36:41.570 --> 00:36:45.760
Linux, and other Unix systems to the SAN.

00:36:45.760 --> 00:36:52.760
And ADIC is supporting Xsan with
their StoreNext file system.

00:36:52.850 --> 00:36:56.350
Well, the compatibility is with
their StoreNext file system,

00:36:56.350 --> 00:37:00.560
and they're also supporting Xsan with
their StoreNext management suite.

00:37:00.840 --> 00:37:08.520
Now, what that means is that you can
use their data management tools as

00:37:08.520 --> 00:37:14.580
a foundation for something called
information lifecycle management.

00:37:14.580 --> 00:37:19.460
And this is policy-based
storage management.

00:37:19.460 --> 00:37:22.870
And they have some really,
really great products to do this,

00:37:23.170 --> 00:37:29.660
and you'll be able to use those
with Xsan to do things like,

00:37:29.660 --> 00:37:29.660
I mean,
I think of it as backup on steroids,

00:37:29.660 --> 00:37:29.660
but basically to be able to
migrate your data to the system.

00:37:29.670 --> 00:37:34.540
So you'll be able to migrate your
data from Tier 1 to Tier 2 storage and

00:37:34.540 --> 00:37:39.640
migrate it all the way back to tape,
and to automate a lot of that process.

00:37:40.420 --> 00:37:44.300
So just a little view
of how this can happen.

00:37:44.360 --> 00:37:48.850
You can literally put XSAN on, say,
a Power Mac G5, an XServe G5,

00:37:48.850 --> 00:37:50.600
have that connected in.

00:37:50.600 --> 00:37:52.120
It sees the SAN volume.

00:37:52.120 --> 00:37:54.980
There's a metadata controller,
so XSAN's up there running

00:37:54.980 --> 00:37:58.360
on another XServe G5 as well.

00:37:58.460 --> 00:38:01.620
But you could literally take a
couple of servers running Windows or

00:38:01.630 --> 00:38:06.490
Linux and have those servers
connected into the SAN as well.

00:38:06.550 --> 00:38:11.600
Now those machines would be running
the StoreNext file system from ADIC.

00:38:11.640 --> 00:38:14.210
And you can purchase it from them.

00:38:14.270 --> 00:38:19.400
It will install and run and allow
you to see the XSAN volumes.

00:38:19.460 --> 00:38:23.480
And as well,
you could use the StoreNext storage

00:38:23.550 --> 00:38:27.480
management software to back
up and maintain all of the

00:38:27.480 --> 00:38:29.910
data in your SAN as well.

00:38:29.990 --> 00:38:36.490
So this is a full and complete
solution that we're offering here.

00:38:36.770 --> 00:38:39.400
Take a drink of water here,
but I want to take you through

00:38:39.400 --> 00:38:42.610
quickly some example deployments.

00:38:45.190 --> 00:38:48.960
And in the kind of walkthrough
of some example deployments,

00:38:48.960 --> 00:38:53.480
I also want to show you how you,
specifically, how you set up some of the

00:38:53.560 --> 00:38:55.510
infrastructure for Xsan.

00:38:55.560 --> 00:39:01.560
Now, in the later session,
they're going to get right under the

00:39:01.560 --> 00:39:06.020
covers and show you more of this,
but I want to give all of you kind of

00:39:06.020 --> 00:39:06.020
an overview of how all of this works.

00:39:06.510 --> 00:39:09.960
So when you're setting up an Xsan,
you need a storage device,

00:39:10.010 --> 00:39:11.920
which is an XServe RAID.

00:39:11.940 --> 00:39:14.260
You need a fiber channel switch.

00:39:14.270 --> 00:39:17.760
You need, obviously, the Xsan systems,
the systems that are going

00:39:17.760 --> 00:39:19.730
to access the storage.

00:39:19.840 --> 00:39:23.510
And this will be servers or desktops.

00:39:23.530 --> 00:39:25.360
And you run Xsan on each of these.

00:39:25.360 --> 00:39:31.010
And they all connect in over fiber
channel to the storage area network.

00:39:31.860 --> 00:39:35.390
One of these systems you're going
to denote or decide is going

00:39:35.390 --> 00:39:36.860
to be your metadata controller.

00:39:36.860 --> 00:39:41.080
Remember that traffic cop for the Xsan.

00:39:41.530 --> 00:39:44.700
So, fiber channel network,
you get high speed,

00:39:44.830 --> 00:39:48.160
you'll get on each fiber roughly,
well roughly,

00:39:48.160 --> 00:39:53.300
you'll get the scope for 2 gigabits
or 200 megabits per second.

00:39:53.350 --> 00:39:56.930
And we have numbers up on the
website on what the XServe rate

00:39:56.930 --> 00:40:01.280
can actually give you sustained,
but it's on the order of 180,

00:40:01.280 --> 00:40:05.070
190 megabytes per second
sustained throughput.

00:40:05.070 --> 00:40:05.070
So,

00:40:05.510 --> 00:40:07.500
Correct me, guys,
if I'm wrong on that one,

00:40:07.500 --> 00:40:09.850
but that's my understanding
of those numbers.

00:40:09.960 --> 00:40:14.750
So you get that out of the XServe RAID,
and you can, of course,

00:40:14.890 --> 00:40:18.400
provide that to each of those machines.

00:40:18.410 --> 00:40:23.010
Now, each of these systems,
I want to be very clear about this,

00:40:23.010 --> 00:40:26.390
needs to have a copy of
Xsan running on them.

00:40:26.530 --> 00:40:29.930
So you buy four copies of Xsan,
you put it on the four systems,

00:40:29.940 --> 00:40:33.340
install it, get it configured using
the Xsan admin tools,

00:40:33.360 --> 00:40:36.030
select one machine as
the metadata controller,

00:40:36.100 --> 00:40:40.680
decide and wait which of the
other machines should actually

00:40:40.800 --> 00:40:44.600
be the backup or standby metadata
controller if the metadata controller

00:40:44.940 --> 00:40:46.820
fails and you're on your way.

00:40:46.870 --> 00:40:48.960
Well, sort of.

00:40:49.320 --> 00:40:53.920
There's a back-channel network that
needs to be deployed with Xsan.

00:40:53.920 --> 00:40:57.440
We refer to it as the metadata network.

00:40:57.510 --> 00:41:01.320
Now, I don't want to confuse you with
the metadata that's associated

00:41:01.360 --> 00:41:03.320
with the spotlight technology.

00:41:03.320 --> 00:41:08.320
The metadata we're talking about
here is file system metadata.

00:41:08.860 --> 00:41:13.200
File system locks and locations
and all of that sort of stuff.

00:41:13.200 --> 00:41:20.900
So, the file system metadata is moved
around on a separate metadata network.

00:41:21.030 --> 00:41:26.860
Now, this is just a TCP/IP Ethernet
network that you set up

00:41:26.860 --> 00:41:30.220
between all of these systems.

00:41:31.210 --> 00:41:35.400
What it provides is really
out-of-band communications.

00:41:35.440 --> 00:41:39.600
And the reason this is important,
and the reason it's architected this way,

00:41:39.720 --> 00:41:44.100
is that what you're sending back and
forth with metadata is small packets.

00:41:44.100 --> 00:41:45.600
So small requests.

00:41:45.600 --> 00:41:47.490
I need to open up this file.

00:41:47.600 --> 00:41:50.100
Okay, you can open up this file.

00:41:50.100 --> 00:41:55.090
FibroChannel is really optimized
for large chunks of data.

00:41:55.340 --> 00:41:57.530
And so,
if we were to take all the metadata

00:41:57.530 --> 00:42:02.190
operations that would happen on a large
SAN and run them across Fibre Channel,

00:42:02.200 --> 00:42:04.580
we'd be bogging down your
Fibre Channel network,

00:42:04.770 --> 00:42:09.340
where all your storage performance is,
with metadata communications.

00:42:09.340 --> 00:42:12.360
So, to optimize around this,
we put the data,

00:42:12.370 --> 00:42:16.020
the big chunks of information,
on the storage network,

00:42:16.040 --> 00:42:19.430
on the Fibre Channel network,
and we put the metadata

00:42:19.430 --> 00:42:21.200
on a separate network.

00:42:21.850 --> 00:42:25.310
Now, the actual metadata
actually lives on the SAN,

00:42:25.310 --> 00:42:29.870
but it's accessed and cached
by the metadata controller,

00:42:29.870 --> 00:42:32.190
and then it's controlled,
and access to it is controlled

00:42:32.330 --> 00:42:33.660
by the metadata controller.

00:42:33.660 --> 00:42:36.620
So, this separate, out-of-band network.

00:42:36.620 --> 00:42:39.600
Now, I'll have a lot of people
have come up to me and said,

00:42:39.600 --> 00:42:44.690
so do I have to use a separate
network for the metadata network?

00:42:46.320 --> 00:42:51.700
And the answer is, while it's IP,
you don't have to use one.

00:42:51.780 --> 00:42:55.510
But if you use your local area network,
for example,

00:42:55.710 --> 00:43:00.310
and someone initiates a large
FTP transfer across that network,

00:43:00.310 --> 00:43:03.930
for whatever reason,
that may inhibit some of the

00:43:03.930 --> 00:43:09.730
metadata traffic on that network,
and that may slow down your file system.

00:43:09.800 --> 00:43:13.520
And I almost guarantee it'll
slow down your file system,

00:43:13.780 --> 00:43:17.830
because that will delay those packets
being sent to the metadata controller.

00:43:18.970 --> 00:43:22.740
So, we recommend,
very strongly recommend,

00:43:22.740 --> 00:43:28.300
is that you use a separate network
for this metadata controller network.

00:43:29.230 --> 00:43:32.990
Now,
the good news is that you can do that,

00:43:33.100 --> 00:43:36.970
and you can still share the data
over Ethernet when you're using,

00:43:36.970 --> 00:43:40.310
for example, an XRF G5,
because we do have two gigabit Ethernet

00:43:40.310 --> 00:43:44.100
connectors on the back of the XRF G5.

00:43:44.100 --> 00:43:47.710
So use one of them for the metadata
network and use the second one

00:43:47.710 --> 00:43:50.100
for your local area network.

00:43:50.100 --> 00:43:53.830
And, as I mentioned,
you can then share the data using common

00:43:53.830 --> 00:44:00.100
networking protocols to as many clients
as you want over your local network.

00:44:00.100 --> 00:44:03.100
Now, these machines, to be clear,
the bottom ones,

00:44:03.100 --> 00:44:07.100
the desktops that are shown here,
do not have to be running XAN.

00:44:07.100 --> 00:44:11.100
You do not need an XAN license for them.

00:44:11.580 --> 00:44:14.820
Of course, with Mac OS X Server,
you get an unlimited client license.

00:44:14.820 --> 00:44:17.840
You can connect up as many clients
to do file sharing with the unlimited

00:44:17.930 --> 00:44:19.360
client licensing as you want.

00:44:19.410 --> 00:44:21.760
And we don't care whether
that data comes from.

00:44:21.760 --> 00:44:24.490
If it comes from the SAN, that's great.

00:44:25.400 --> 00:44:27.440
So, as I mentioned,
dual gigabit ethernet in the

00:44:27.440 --> 00:44:29.540
XServe G5 to support this.

00:44:29.540 --> 00:44:35.910
Now you could also, in another sense,
use this as the storage pool

00:44:36.000 --> 00:44:40.990
for a web service as well,
whether that's a website,

00:44:41.040 --> 00:44:43.600
QuickTime streaming server
or something like that,

00:44:43.600 --> 00:44:48.140
and have internet clients
connected into them.

00:44:48.140 --> 00:44:50.650
But in any case, there's two networks.

00:44:50.680 --> 00:44:53.690
There's the main network where
the data transfer happens,

00:44:53.700 --> 00:44:57.900
and there's the metadata network,
which is where the file system

00:44:57.910 --> 00:45:01.140
does all of its operations,
with the exception of doing the

00:45:01.140 --> 00:45:04.910
actual block level access to storage,
which happens over the

00:45:04.910 --> 00:45:06.700
fiber channel network.

00:45:06.700 --> 00:45:08.300
So.

00:45:10.330 --> 00:45:13.640
When we deploy XSAN in kind of
a post-production environment,

00:45:13.640 --> 00:45:17.330
we deploy XSAN to desktops.

00:45:17.340 --> 00:45:21.720
And I'm sure those of you in the
audience who do a lot of work in video.

00:45:21.720 --> 00:45:27.190
So you create a SAN volume
using multiple XSERV RAIDs,

00:45:27.480 --> 00:45:29.460
fiber channel switch,
metadata controller,

00:45:29.460 --> 00:45:33.700
server makes a nice metadata controller,
and then you set up the

00:45:33.940 --> 00:45:36.860
desktops with access to the SAN.

00:45:37.600 --> 00:45:40.680
You can also, on the same network,
put a server there,

00:45:40.680 --> 00:45:45.250
have it reshare some of that information
using the QuickTime streaming server.

00:45:45.260 --> 00:45:49.120
So you can imagine a workflow
where you're doing video editing,

00:45:49.120 --> 00:45:52.900
and when, for example,
at the end of the day or at the end

00:45:52.900 --> 00:45:58.220
of their time working on this project,
an editor makes a QuickTime movie

00:45:58.220 --> 00:46:01.660
and posts it into a special folder
where the QuickTime streaming

00:46:01.660 --> 00:46:05.910
server can share it out to,
say, a producer or a director who wants

00:46:05.930 --> 00:46:07.500
to just check in over the network.

00:46:07.520 --> 00:46:10.730
Without having to come
down to the editing bay.

00:46:10.740 --> 00:46:13.880
And, of course,
you could put appropriate security

00:46:13.880 --> 00:46:15.770
and access control around all of that.

00:46:15.820 --> 00:46:20.240
So this is an example of using
XSAN in post-production workflow.

00:46:20.240 --> 00:46:23.300
Now, the thing I'm not showing here
that you do have to set up again

00:46:23.300 --> 00:46:28.280
is that private Ethernet network
that connects all of these systems

00:46:28.280 --> 00:46:29.810
and the metadata controller.

00:46:29.820 --> 00:46:32.390
So there'll be a private
Ethernet network.

00:46:32.400 --> 00:46:37.460
You can multi-home these systems,
so you could use a second Ethernet,

00:46:37.500 --> 00:46:39.460
you could use a second
Ethernet connection.

00:46:39.460 --> 00:46:44.400
You can put another, an external, well,
a gigabit card into the XSERV G5,

00:46:44.530 --> 00:46:47.150
for example,
or you could even use the airport

00:46:47.150 --> 00:46:50.650
connection on the XSERV G5 to
connect it to the Internet or

00:46:50.790 --> 00:46:53.620
connect it to your local network.

00:46:53.770 --> 00:46:59.840
You want to reserve one Ethernet
port for the metadata network.

00:47:00.200 --> 00:47:03.880
Computational clusters are another
area that we're looking at with XSAN.

00:47:03.880 --> 00:47:09.540
And in this case,
we're showing a very large cluster.

00:47:09.540 --> 00:47:14.600
For small clusters, as I said,
up to 64 systems can connect to the SAN.

00:47:14.600 --> 00:47:18.880
So if you had a small cluster of 4, 16,
32 systems,

00:47:18.880 --> 00:47:23.040
you could actually have them all
connected directly to the SAN over

00:47:23.200 --> 00:47:27.140
fiber channel with block-level
access to a single storage pool,

00:47:28.320 --> 00:47:31.380
which means they all can be
using the exact same data,

00:47:31.380 --> 00:47:36.350
writing back to the exact same
location at the same time.

00:47:36.360 --> 00:47:41.100
Now, if you have a very large deployment,
and, of course,

00:47:41.100 --> 00:47:43.740
we use the Virginia Tech one
all the time,

00:47:43.740 --> 00:47:45.260
1100 G5s.

00:47:45.320 --> 00:47:47.780
Now, they, of course,
XSAN isn't available,

00:47:47.780 --> 00:47:49.550
so they weren't able to do this.

00:47:49.560 --> 00:47:53.250
But if they had chosen to do so,
they could have actually created

00:47:53.260 --> 00:47:59.220
an environment where of those 1100,
say 20 of them, 25 of them,

00:47:59.220 --> 00:48:01.130
you could pick 55 of them.

00:48:01.190 --> 00:48:05.300
Say 55 of them were connected
into the SAN directly.

00:48:05.340 --> 00:48:12.350
And those 55 were the head nodes for
another 20 machines in the cluster.

00:48:12.700 --> 00:48:18.480
So the head node connected block level
fiber channel directly into the SAN.

00:48:18.480 --> 00:48:23.100
And then what it does is
uses NFS to share the data,

00:48:23.100 --> 00:48:28.610
or AFP, to share the data to the
other Xsers in the cluster,

00:48:28.610 --> 00:48:33.040
the other 20 for which it's responsible.

00:48:33.040 --> 00:48:37.110
And you create a network between
those 20 in the head node and

00:48:37.110 --> 00:48:37.110
another 20 in the head node.

00:48:37.320 --> 00:48:40.580
And now you've covered 1,100 machines.

00:48:40.590 --> 00:48:44.620
And for 55 of them, they're feeding data,
or they're getting data directly

00:48:44.620 --> 00:48:46.640
from the SAN at very high speed.

00:48:46.640 --> 00:48:51.200
And they're able to reshare that over,
say, gigabit ethernet to another 20.

00:48:51.210 --> 00:48:54.830
Now, I can tell you that BEAT's trying
to reshare that data over gigabit

00:48:54.830 --> 00:48:57.280
ethernet to another 1,100.

00:48:57.350 --> 00:49:01.820
So this is a way of more easily or
more quickly distributing the data

00:49:01.820 --> 00:49:04.650
around a computational cluster.

00:49:06.440 --> 00:49:11.930
So I'm going to go through a few of
our products here and run through

00:49:11.930 --> 00:49:14.810
some of that as soon as I get a...

00:49:15.990 --> 00:49:17.700
Another drink of water here.

00:49:17.700 --> 00:49:21.930
I'll run through some of this and give
you an idea of the kind of products

00:49:21.930 --> 00:49:23.300
that we're offering in this space.

00:49:23.300 --> 00:49:27.130
And then I want to give you an
idea of why we think we can be very

00:49:27.130 --> 00:49:31.900
successful in this space in both video,
regular storage consolidation

00:49:31.900 --> 00:49:36.560
projects that I've shown you,
and also in computational clustering,

00:49:36.560 --> 00:49:40.200
where price performance
is really what counts.

00:49:41.000 --> 00:49:49.220
So, Mac OS X Server, qualified with Xsan,
delivers all sorts of great services.

00:49:49.220 --> 00:49:52.690
I'm sure most of you caught the
earlier sessions on what the next

00:49:52.800 --> 00:49:54.940
version of the server is all about.

00:49:54.940 --> 00:49:58.440
We'll be qualifying
Tiger Server with Xsan as well,

00:49:58.460 --> 00:50:01.700
when Tiger Server is
closer to availability.

00:50:01.700 --> 00:50:05.550
Xserve G5, phenomenal performance
on a one-use server,

00:50:05.550 --> 00:50:08.420
an amazing box,
and I'm sure you've seen some

00:50:08.420 --> 00:50:10.700
of the sessions on that as well.

00:50:11.000 --> 00:50:12.340
Wow.

00:50:12.610 --> 00:50:16.260
We do offer a fiber channel PCI card.

00:50:16.290 --> 00:50:18.250
Many of you may not have realized that.

00:50:18.290 --> 00:50:24.290
This is a PCI card that goes
into an XServe or into a

00:50:24.290 --> 00:50:32.100
Power Mac and delivers dual port,
2 gigabits per second on each channel.

00:50:32.100 --> 00:50:34.470
So, it's a really, really nice card.

00:50:34.470 --> 00:50:37.490
It says 64 bits, 66 megahertz PCI card.

00:50:37.490 --> 00:50:40.230
Neat thing is we actually
include the cables.

00:50:40.340 --> 00:50:44.280
And these cables on the street
would be something like $150,

00:50:44.280 --> 00:50:47.430
$200 a piece,
but we include the cables as part

00:50:47.430 --> 00:50:49.580
of the package for the PCI card.

00:50:49.580 --> 00:50:51.930
We have the XServe RAID.

00:50:51.940 --> 00:50:57.510
This is a 3.5 terabyte
solution in a 3U enclosure.

00:50:57.510 --> 00:51:00.820
Again, very, very high speed.

00:51:00.820 --> 00:51:03.650
If you stripe across the channels,
as it says,

00:51:03.650 --> 00:51:08.560
over 336 megabytes per second,
striping across the two controllers.

00:51:08.560 --> 00:51:10.750
Very easy to set up.

00:51:10.940 --> 00:51:13.570
This is RAID setup in three easy steps.

00:51:13.570 --> 00:51:15.660
Very, very nice solution.

00:51:15.680 --> 00:51:18.280
This one's actually qualified
not only for Mac OS X,

00:51:18.280 --> 00:51:19.520
Windows, and Linux.

00:51:19.520 --> 00:51:23.060
And as we said,
it'll be qualified for Xsan.

00:51:23.060 --> 00:51:26.820
And nice solution, $3 per gigabyte.

00:51:26.820 --> 00:51:29.540
I have this joke I have with,
just as a digression with the guys,

00:51:29.540 --> 00:51:29.540
I have this joke I have with,
just as a digression with the guys,

00:51:29.550 --> 00:51:30.970
I have this joke I have with,
just as a digression with the guys,

00:51:30.980 --> 00:51:32.740
who runs our server and storage hardware.

00:51:32.740 --> 00:51:36.470
I said he should only have
three slides on XServe RAID.

00:51:36.550 --> 00:51:38.730
The first one should say $3 per gigabyte.

00:51:38.860 --> 00:51:40.880
The second one should
say $3 per gigabyte.

00:51:40.880 --> 00:51:44.210
And the third one should say,
did I mention $3 per gigabyte.

00:51:44.220 --> 00:51:46.440
It's a beautiful, beautiful box.

00:51:46.510 --> 00:51:51.200
And Xsan, and as I mentioned, Xsan,
concurrent access, shared volumes,

00:51:51.200 --> 00:51:53.440
up to 64 computers.

00:51:53.510 --> 00:51:58.260
A lot of great features in there from
a high availability or HA standpoint.

00:51:58.310 --> 00:52:02.900
Gives you direct block level,
high speed access over a

00:52:02.920 --> 00:52:05.260
fiber channel to the storage.

00:52:05.370 --> 00:52:09.880
Provides some really, really cool volume
management capabilities.

00:52:10.020 --> 00:52:13.140
Comes with some great
remote administration tools.

00:52:13.280 --> 00:52:16.780
And of course,
we have great cross platform support

00:52:16.780 --> 00:52:21.940
with full interoperability with
the StoreNex file system from ADIC.

00:52:21.940 --> 00:52:25.290
So really,
really complete solution there.

00:52:26.020 --> 00:52:28.830
And we have some great server
and store support options,

00:52:28.830 --> 00:52:31.230
and we got a lot of
questions on this yesterday,

00:52:31.300 --> 00:52:33.890
and I just invite you to
check out the latest offerings

00:52:34.010 --> 00:52:35.700
that we offer in that space.

00:52:35.700 --> 00:52:37.300
I do want to run you through the prices.

00:52:37.300 --> 00:52:39.980
The thing that's key here,
and the reason I'm running through

00:52:39.980 --> 00:52:44.110
some of the marketing slides right now,
is that a lot of people have said to us,

00:52:44.190 --> 00:52:46.980
look, we look at iSCSI,
we look at Fiber Channel,

00:52:46.980 --> 00:52:50.400
we're not sure what's going to happen,
but it sure looks like

00:52:50.400 --> 00:52:52.280
iSCSI is going to take over.

00:52:52.880 --> 00:52:55.020
And when we look at it, we say, well,
first of all,

00:52:55.020 --> 00:52:58.480
you'll never be doing video over iSCSI,
or not in the foreseeable future.

00:52:58.480 --> 00:53:01.210
And in fact, it's very,
very difficult to get any kind

00:53:01.300 --> 00:53:03.200
of high performance out of iSCSI.

00:53:03.200 --> 00:53:06.620
And when you do,
you get into using really interesting

00:53:06.700 --> 00:53:11.220
proprietary hardware to do that,
and that drives the expense way up.

00:53:11.320 --> 00:53:15.420
Most people want iSCSI because
it's cheaper than Fiber Channel.

00:53:15.420 --> 00:53:18.450
That's the clear reason why
they want that sort of thing.

00:53:18.460 --> 00:53:19.750
So we took a look at it.

00:53:19.870 --> 00:53:22.120
We feel that Fiber
Channel is actually ripe.

00:53:23.040 --> 00:53:25.100
For price reduction.

00:53:25.100 --> 00:53:27.980
And so we're going to
change this market entirely.

00:53:27.980 --> 00:53:32.380
And so we're offering these products
at an incredibly low price compared

00:53:32.540 --> 00:53:34.620
to anything else on the market.

00:53:34.640 --> 00:53:36.000
Yes, I know.

00:53:36.000 --> 00:53:40.920
So $999 for 10 server,
unlimited client license, XSERV G5,

00:53:40.960 --> 00:53:44.980
$3,000, 10 server is included with that.

00:53:45.240 --> 00:53:48.780
The PCI card is $500
with the cables included.

00:53:48.780 --> 00:53:52.470
The XSERV RAID, that $11,000 price.

00:53:52.820 --> 00:53:54.650
With everything you can put in it.

00:53:54.890 --> 00:54:00.140
3.5 terabytes of storage,
128 megs of cash, etc., etc.

00:54:00.320 --> 00:54:04.320
And then, XSAN, under $1,000 per node.

00:54:04.320 --> 00:54:06.820
And unlimited capacity.

00:54:06.920 --> 00:54:09.320
So.

00:54:11.380 --> 00:54:16.310
So as some of you know, that's easily,
from a software standpoint,

00:54:16.590 --> 00:54:21.260
that's a fifth to a tenth of the price of
comparable solutions on the market today.

00:54:21.260 --> 00:54:23.550
And that's no exaggeration.

00:54:23.560 --> 00:54:25.060
You can check it out with other vendors.

00:54:25.060 --> 00:54:27.800
It's a fifth to a tenth the
price of comparable solutions.

00:54:27.800 --> 00:54:31.160
And many solutions actually charge
you on the basis of the amount

00:54:31.180 --> 00:54:33.060
of storage that you put in place.

00:54:33.060 --> 00:54:37.090
Many solutions charge you extra for
the metadata controller software.

00:54:37.090 --> 00:54:39.880
All of that stuff is built into Xsan.

00:54:40.440 --> 00:54:43.760
So as I said, we're driving down the cost
of this infrastructure.

00:54:43.760 --> 00:54:48.920
Xsan will be available
in the fall of 2004.

00:54:48.920 --> 00:54:52.960
So we're going to have it out
to you in the fall of 2004.

00:54:52.960 --> 00:54:55.700
Xsan is in beta today.

00:54:55.700 --> 00:54:59.580
We made our first beta available at NAB.

00:54:59.630 --> 00:55:03.800
There is a program up on the site,
apple.com slash xsan,

00:55:03.800 --> 00:55:09.580
and there's a little link hidden over in
the corner referring to the beta program.

00:55:09.580 --> 00:55:28.890
So you can go to apple.com slash
xsan slash beta if you want to

00:55:28.900 --> 00:55:38.660
sign up for the beta program.

00:55:38.720 --> 00:55:38.720
Now the great thing about this,
in a sense,

00:55:38.720 --> 00:55:38.720
is we've had several hundred people
already sign up for the program

00:55:38.720 --> 00:55:38.720
in the couple of months that
we've been making it available.

00:55:38.720 --> 00:55:38.720
And I will tell you,
if you want to be part of the program,

00:55:38.720 --> 00:55:38.720
this is why I'm fascinated that
there's been that many people sign up,

00:55:38.720 --> 00:55:38.720
you have to have an XServe RAID,
you have to have a qualified

00:55:38.720 --> 00:55:38.720
fiber channel switch,
and you have to have two of those.

00:55:38.760 --> 00:55:42.320
So you have to have two or
more of either XServe G5s,

00:55:42.320 --> 00:55:46.240
XServe G4s, or PowerMac G5s,
and you have to have our

00:55:46.240 --> 00:55:48.240
fiber channel PCI cards.

00:55:48.240 --> 00:55:55.080
So in reality, that's, you know, $30,000,
$40,000 worth of gear that you have to

00:55:55.220 --> 00:55:58.070
take offline and use it for Xsan testing.

00:55:58.080 --> 00:55:59.490
Yeah, I really appreciate it.

00:55:59.490 --> 00:56:01.850
I know there's a lot of you
out there in the audience today

00:56:01.850 --> 00:56:04.830
who are doing that with us,
and we really, really appreciate it.

00:56:04.870 --> 00:56:08.690
If you are interested in doing that,
go sign up at the website.

00:56:08.700 --> 00:56:10.230
And we'll get you the bits.

00:56:10.230 --> 00:56:12.800
We are backlogged today
in terms of requests.

00:56:12.800 --> 00:56:16.920
We've just been overwhelmed with them,
but we really appreciate that.