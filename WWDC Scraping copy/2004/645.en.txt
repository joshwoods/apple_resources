---
Title:  Mac OS X Server Update
Year:   2004
Web:    https://nonstrict.eu/wwdcindex/wwdc2004/645/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Ladies and gentlemen, please welcome now to the stage, Eric Zelenkka. Good afternoon. Thank you for coming to our presentation today. We're going to be talking a little bit about Mac OS X Server, specifically the Tiger Server release, and some of the new great features and capabilities that we are introducing in this version. You've heard some of the capabilities talked about in some of the earlier presentations, but there's plenty of other wonderful, great features that we're going to go into today.

So, as you know, with Mac OS X Server, we've been rapidly innovating upon this operating system for some time. Several years ago, back in 2001, was the first new release of Mac OS X Server. That was the 10.0 version. We introduced that at the 2001 Developers Conference. Later that year, we came out with the 10.1 version, had a number of improvements and upgrades there. At the same time, we, you know, later that year, we came out with the XServe. We announced the XServe, the XServe platform. It was a platform that a lot of people were asking for.

They wanted a purpose server, a purpose-driven server. They wanted something that they could mount in a rack, that they could run this wonderful, new, great server operating system that we were building. In 2002, we finally shipped the XServe, and we've been innovating and continuing to deliver upon the XServe.

Also in that same year, we delivered Jaguar Server. So Jaguar Server was a wonderful release for us. We introduced a number of new capabilities, not only with Open Directory and Netboot and Network Install, but a number of great features for education markets and also higher education, which was at that time kind of a new area for Apple that was going into the enterprise more and more. Then just in 2003, we had some upgrades to the XServe. We introduced the XServe Cluster Node, which again was a purpose-built machine just for high-performance computing applications. We also introduced the XServe RAID, massive amounts of storage.

Panther Server was, if you were here last year, we were talking about Panther Server at that time. This year we're talking about Tiger Server, but Panther Server continues to be the server operating system that we're shipping today. In this presentation today, we'll be talking about a lot of the capabilities that are in Panther Server, and then the new improvements that we continue to make on top of that. Other innovation that we've done earlier in this year, we shipped the XServe G5 back at Macworld, and then also introduced the new XServe RAID with 3.5 terabytes of storage.

Two new wonderful products that we're also introducing is Apple Remote Desktop 2. Everyone here should have a copy of Apple Remote Desktop. I encourage you to take apart your kits when you get back to your hotels tonight, install it on your systems, and play with it. This is a full release of Apple Remote Desktop 2. It's a wonderful new upgrade, and in the sessions later this week, you'll hear a lot more about it. Also, XAN, which is our storage area network file system for Mac OS X and Mac OS X Server. Again, there'll be a number of sessions about it later in this week.

and now Tiger Server. So let's get into Tiger Server and talk more about what we're doing with the operating system. But first, how are people using this operating system that we've been building? Well, let's look at some of the customer adoptions that are out there. Initially, we had a lot of deployments in education. This picture here is of a high school district, K-12 high school district.

They are doing a lot of servers. I think in this specific situation, it's a lot of network home directories. This is a screenshot or a picture of University of Tokyo. This, although there's no servers in that picture, there are 1,600 systems here, all iMacs, and they're net booted, disklessly, off of our servers. 1,600 systems, disklessly net booted off of X Servers or any Mac OS X Server.

Here's another deployment in the United Arab Emirates. Again, I think this is a video one. Virginia Tech using a lot of the desktop management tools and utilities that we've introduced in the operating system. Core feature animation. This is a Shake render farm. They're doing videos, animations, all again using Shake with Mac OS X Server. is a laboratory in Singapore, high-performance computing, computational clustering deployment. Another one in Princeton.

This is an interesting one. This is a space observatory in Germany. Again, taking a lot of data coming in off of satellites, taking in data from their telescope systems that they have, analyzing that data using the computational power that we have with the X Serves and the easy-to-use, easy-to-manage operating system that we've delivered with Mac OS X Server.

Even in Apple's data center, we're using this server operating system. If you've ever connected to .Mac and using some of the applications and services that are up there, whether it's your iDisk or those types of things, you are connecting to our servers, our server operating system. It's kind of that drink your own champagne type of thinking.

And we've even got customers who are doing really crazy things with these servers. I'm not sure what these guys are doing, but they are having fun, so that's the good news. So we see our servers deployed in lots of areas, and we're trying to deliver a server operating system that's flexible, that can be used for lots of different types of deployments.

As we go into enterprise spaces, there are specific types of applications for specific purposes, and you'll hear a lot about those as we go on. You've probably seen this slide a number of times. This really is our strategy. We're building upon standards, open source, and we're innovating upon that.

But if you look at our goals, what are we really trying to do with this product? Well, we're trying to make our servers easy to use. We want to make them very easy to set up and deploy, especially if you've got a couple of them or hundreds or thousands of X Servers.

We want to provide a really good server for Macintosh and Windows environments. There's a lot of departments, a lot of workgroups out there that can benefit from the services that we provide in this operating system. We want to make it easy for our systems to integrate with existing networks, and we want to take some of this open source movement that's going on, innovate upon it, integrate it, test it, and make open source very easy to use. And so, again, you'll see that throughout the product and as we talk about some of the new features that we're introducing today.

So let's take a look at Tiger Server, what we're delivering in Tiger Server. First of all, before we go into the new services within Tiger Server, let's talk about the fundamentals of the operating system. When we look at the server operating system, there's really two sections. There's the core operating system, the Core OS. That's mostly the Darwin or the BSD, the low-level components. And then on top of that, there are a number of services that we have built and we are designing and delivering. So I'm going to talk a little bit about the core server operating system.

There are six major areas of the server operating system. We have the kernel and the networking components, our directory services and network authentication layer, which we've taken normally as a standalone service, and we've dropped that down into the core of the operating system. The libraries, the utilities, security infrastructures, which normally would be like just a service that's a standalone service right on the OS, we build down deep into the core of the OS, and even high availability services. So if you look at the kernel, we continue to innovate on top of the kernel and the Darwin architecture that we have. It's combinations of various versions of BSD.

One of the new features that we're talking about here a lot is support for 64-bit applications. So within Tiger Server, we now have the capability of running 64-bit applications. And this is especially useful for our server customers who are doing lots and lots of number crunching. They've got some very large numerics that they're dealing with. They need to hold lots of data in memory at one time. So now we can actually allocate up to 64 bits of memory, and your application can take advantage of all of that.

On the networking side of the operating system, we've got, as Bertrand mentioned in his presentation earlier today, this is a BSD-based networking architecture. For server use, we have capabilities like IP multi-homing, so you can have multiple interfaces, assign IP addresses to each of those various interfaces. Jumbo frame supports for dealing with very, very large packets. Innovative things like IP over FireWire, so we can have high bandwidth, low latency interconnects. One of the new features we're introducing for the networking... Thank you.

in Tiger Server is support for Ethernet link aggregation. This is compliant with the 802.3ad standard. What this allows you to do is take multiple Ethernet links and aggregate them together so you have increased overall throughput to the server. It also gives us network interface failover. So if one of those connections, those physical connections were to get disconnected or break or something happened to it, the link can automatically failover to another cable or another link aggregate.

So this can be used with one Ethernet switch. It could be used with two Ethernet switches. This is an excellent feature for X Server G5. If you look in an X Server G5, we have two onboard gigabit Ethernet ports. Now, with the right type of switch, you'll be able to aggregate those ports together and get better overall throughput to your server.

I mentioned this directory services architecture that we call Open Directory that we've taken and integrated in to the core of the operating system. This is a way of basically bottlenecking all user account and authentication lookup requests, bottlenecking them down deep into the OS, so that if you're using one of the applications that Apple delivered or a service that we delivered, or you're building an application or you're hosting your own application, you can be using the same sets of user account names, the same sets of passwords that the rest of the operating system is using. So we build this down deep into Tiger Server.

Also, the other layer we look at is the Unix commands and libraries. There's lots of updates to these. We continue to try and keep the server operating system up to date as much as possible with the rest of the goings-on in the BSD world, make sure that we have the latest open source components here.

Bud Tribble mentioned earlier our focus on security and making sure that the core of the operating system is very secure. And again, there's a number of different features and capabilities that we have for security, and some of them are listed up here. What's kind of different in the server operating system is some of the high availability components that we build in. If you have a server, you want your server to be reliable.

You want it to be up and running seven days a week, 24 hours a day. You don't want it to have any problems. And if there are problems, you want your server to do whatever it can to try and fix those problems and not have those problems to begin with.

So there's some features that we deliver within the product for this. As you know, on the server operating system, we introduced file system journaling a long time ago. We have support for software RAID capabilities. Tiger Server, we now have even RAID 10. We have auto-restart capabilities. So your service, if your service dies, we can restart your service. If there's a problem with the entire server operating system, the hardware can actually automatically restart. One of the features we delivered a while ago was IP failover. And we're introducing a kind of a next generation of IP failover today, and we call it high availability clustering.

What this allows you to do is take two X Servers that are connected to the same shared storage and have an active/passive failover. You can create what we call a cluster pair. And you can create these pairs and have them do the same thing. What we're automating in Tiger Server is support for network file services. So your AFP, your SIFs, your NFS file services, we're going to automate the creation of these clustered pairs.

So you can have two servers. If one of those servers were to fail or was to go down, the other server will automatically take over the responsibilities for that server in handling its network file services. So this is a great solution. As you'll hear in a presentation tomorrow morning, there's a really flexible network file system. There's a really flexible architecture here. And you can build your own custom solutions using this high availability clustering architecture that we've built.

So those are the six main components that make up the core of the server operating system. And now I'm going to invite up Greg Burns, who's the senior director of the server and storage engineering team. And Greg's going to take you through a walkthrough of all the different services that we're introducing in Tiger Server. Greg? Thanks, Eric.

So layered on top of the Core OS in Mac OS X Server is a services layer, and that implements the services and the management that provides the server features of the product. The services layer includes server administration to make management of all the services in Mac OS X Server easy. We have directory services to provide naming and authentication to all the servers and clients on the network. Cross-platform workgroup and collaboration services. Client management to make management and deployment of Macintosh clients on the network very simple. Internet networking services. And new Integra server, we have high-performance computing clustering services.

So first let's talk about server administration. The server administration facilities in Mac OS X Server integrate all of the many open source products that we put into the server and make it easy to manage. We have two main server management applications in Mac OS X Server. Server Admin, which lets you configure, set up, configure, and monitor all of the services in Mac OS X Server. It also lets you manage multiple servers from the same console.

Workgroup Manager is our directory management application. It lets you manage all of the user and group accounts in the directory. It's designed to work with Open Directory, but it does work with any LDAP directory. It also lets you manage all of the services that are configured out of the directory, such as preference management for client management. We're introducing a couple new management features in Tiger Server, the first of which is access control lists.

We have several types of access control lists in Tiger Server for the file system, for services, and for the directory. Now, those of you that are familiar with Panther Server know that it uses Unix permissions, and Unix permissions, while they work well in simple cases, have problems being mapped to real-world workflow.

If you have shared files on the network and you need to be able to set up groups of users who can write to those files and other groups of users who can only read them, it's not really possible to specify that with Unix permissions. So we have full support for access control lists in the file system to provide fine-grained control over those objects.

We also support other common features that you would expect from access control lists, like groups within groups and full lists of users and groups that can be assigned to the file system objects. You can specify inheritance for the ACLs. And you can specify the access control list for the file system objects. You can also have control over the default permissions of objects that are created in the file system.

Now another area that can be difficult in working with file systems and different permissions models is being able to work compatibly across multiple different types of file systems. But because we support all of the features such as inheritance, default permissions, fine-grain permission settings, and allow and deny rules, Mac OS X Server and Mac OS X can be made to work in a compatible manner with Windows Server and with Windows XP. So it simplifies working in a cross-platform environment.

We have other access control in Mac OS X server, another area of service. In Mac OS X server today, if you have a server bound to a directory that has thousands or even tens of thousands of users and you set up a file server, for instance, every user account in that directory can log onto the server. Now, you can control permissions, file system's permissions to ensure that only the correct users get access to your data, but in many cases you want to restrict that only to a core set of users.

And with Tiger Server, we're introducing service ACLs so that every user-based service in the server can control the set of users and groups that can access the server. You can have the same list for all services on your server or energy server independently. So that's service ACLs. And finally, we have directory ACLs which are global ACLs that allow you to control who can access and update the contents of open directory. And something that open directory does different from other LDAP servers is it stores these directory ACLs in the directory itself to allow them to be propagated to the replicas by taking advantage of open directory's replication. So that's access control lists in Tiger Server.

Another new feature we have for management in Tiger Server is certificate management. Now certificate management in X3 involved going into the command line and it was different for each service and although it could be done, it was sometimes somewhat cumbersome. So we've simplified this greatly in Tiger Server.

We've added certificate management in the administration tools and you can use this with certificates that are signed by certificate authorities. And you can also use Tiger's new certificate assistant for self-signing your own certificates in your organization. You can display all the certificates you have available and assign them to services or websites as necessary. So that's certificate management in Tiger Server.

Next up, we'll talk about Open Directory. Open Directory is Apple's directory and naming service. It's standards-based, and it implements LDAP naming services, and it implements Kerberos for authentication. We use OpenLDAP and MIT Kerberos. Kerberos is used to implement single sign-on, which lets you log in once with one password. It's never sent over the network. And you get an authentication ticket, which is good for all services in Mac OS X.

We also have a support for what we call the password server, which supports password replication to all of the open directory replicas on the network. And this includes replicating all of the Kerberos support as well, so that you can have replicated Kerberos authentication across your entire network. We integrate Samba. With Open Directory as well to provide MT domain services for your Windows clients to allow them to authenticate as well with the same account information. And of course, we mentioned all the replication that's built into Open Directory.

We have a couple enhancements that we're putting into Open Directory in Tiger Server. The first is managed network browsing. Now, what is this? In 10.3 today, if you have a large organization and you go to network, it can get somewhat confusing and unwieldy and difficult to navigate, and we fixed that in Tiger and Tiger Server by allowing you to control the contents of the network directory, and you can see you can greatly simplify it and make it easy to navigate.

We provide virtual network views, which can be controlled by the network administrator. The view is defined in the Mac OS X Server, and it's stored in the directory, so any client that binds to Open Directory will see the view. You can combine both dynamic service discovery protocols for Mac and Windows, as well as static entries that are stored in the directory, and you can even have pointers to other entries that are outside of your local network that show up in the network folder.

And we make it easy to manage. It's managed through WorkRoot Manager. Our directory management tool, where you can create these views and preview them. So this greatly simplifies and makes it easier to set up the network folder in your clients in Mac OS X Server and in Tiger. We've also made some enhancements to Open Directory.

Some of which include, as we mentioned, storage of the access controls in the directory. Another thing that we're storing in the directory itself is the LDAP schema. So the schema will now be propagated to replicas as well as the access control information. So again, this greatly simplifies managing multiple open directory servers and simplifies the replication process.

We're adding organizational unit support so you can have multiple independent LDAP data sets hosted out of your open directory server. We're improving the scalability. We've tested up to 200,000 servers, 200,000 records per server. And we've added some tools that really help simplify the process of managing large open directory services.

We've improved search and apply so you can do batch editing of large number of records in the server as well as improving the import tools. And additionally, since you need to back up all this data, we've built in hot backup command line utilities that allow you to back up your naming and authentication database on the fly.

And we've made some enhancements to security. We have authenticated directory binding in the server and the client so that administrators can control who accesses the directory and you have mutual authentication between the client and server. And we have the NTLMv2 authentication for Windows clients to provide more security for Windows client authentication.

Another area of services in Mac OS X Server is workgroup and collaboration. Workgroup and collaboration services provide for sharing in workgroups, and the most common of these, obviously, are file and print. And like we do today, we support file and print sharing for Mac, Windows, and Linux clients. This works for folders on the file server as well as home directories between Mac and Windows, and sharing your network printers as well, so all of your local workgroup resources.

These are fully integrated in Mac OS X Server. All of the protocols can share the same SharePoint, the same shared folders. They use the same access privileges, the same account information, so you set it up once and the files are accessible from all clients. The Windows domain services are integrated as well, so the Windows clients have full access to all of the resources on the server. We support Windows roaming profile for home directory logins, and we have native print services for both Mac and Windows clients.

We made some enhancements to work of services as well. Couple of these are unified file locks. Now we have file locking today in Mac OS X Server, but we've enhanced this to make sure that the file locking is consistent between all the protocols so that no matter what client you're logging in from, no matter what platform, if you're accessing the same data you get consistent locking.

We've added -- We've added backup domain controller support, which exists today in Samba, but we've added configuration for this and then management tools to make it easy to set up to provide read-only failover for the Windows domain services for greater reliability. And we've integrated the print services more directly with CUPS so that when you manage print services in Server Admin now, you are managing the CUPS queues, you're managing the CUPS printing. We've eliminated some of the middle layers there and really had tighter integration in print services with CUPS. And we've also added print authentication so you can control access to print queues.

We've added a few new services for work group and collaboration as well. The first is the iChat server. The Tiger iChat server provides encrypted messaging for your intranet and a secure namespace. It's based on Jabber using the XMPP protocol. And it provides cross-platform support, obviously with Jabber clients as well as Tiger's iChat client. And because it's integrated with Open Directory, it provides a secure namespace for chat within your local intranet.

We also have a weblog server that we're introducing in TigerServer as well. A weblog is a way of easily publishing and syndicating information on the internet. And what the weblog server does is allow you to publish information and syndicate it using standard protocols like RSS or Atom. This morning you heard about Safari SSS. Our weblog server is completely compatible with Safari SSS as well as any other popular RSS reader.

We have a number of features that we support around style sheets and calendar-based navigation that people who manage weblogs can control for their individual log. The logs themselves are automatically created as needed for user accounts in Open Directory. And you can post to them directly from the web or from clients that support standard protocols like XMLRPC or Atom. And another feature we have in Mac OS X Server and TigerServer is the ability to have group weblogs.

Eric Zelenk, Greg Burns We have a number of features that we support around style sheets and calendar-based navigation that people who manage weblogs can control for their individual log. The logs themselves are automatically created as needed for user accounts in Open Directory. as well so that people that are doing shared project weblogs can use a group account in Open Directory to have multiple folks have right access to a weblog. So now I'd like to have Eric come up again and do a quick demo of Weblog Services and Tiger Server.

Thank you, Greg. So the Weblog server that we've built into Tiger Server is going to be a wonderful tool. It's going to allow people to better syndicate or publish their content out to others, but also allow a new way for groups to communicate information. I think one of the benefits of RSS and syndication of information is it makes it really easy to communicate with the rest of the world.

Part of the problem with it is how do I get that information out to the rest of the world? How can I publish this information? I'm not an XML expert, so how can I create this data and push it out to the rest of the world? So let me show you how easy that is going to be in Tiger Server.

First of all, I'm going to launch the server admin application. Server admin application here. I'm going to go to Tiger Server. I'm going to go in and enter for the web server. It's very, very simple. I can go to the site that I'm hosting, and with a simple checkbox, I can enable the Weblog server. Next, let's go down to Safari.

And I'll open up Safari here. Okay, let me log back in. So I've connected off to the weblog server which is running on this Tiger server box here. You'll notice a couple things. First of all, I have calendar-based views. So with most blogs, you need to be able to go back. It's time-based information.

I can go to any date here on the calendar and it will show me the entries that were created for that day. I have the ability to search within the various blogs, search and return that content to me. You'll also know categories that are available down here. So as I click different products, I can get the information that was posted into that category.

So first thing I'm going to do is in this view right here would just be like the basic end user view. They're just going up there. They're just looking at the data within the browser. Notice that Safari up here displays the RSS. So this is actually an RSS feed. It notices that there's RSS information that's available here. The links that are available at the bottom, by clicking one of those, I will actually see the RSS information that is there.

And by clicking this in Safari RSS, it actually gets displayed. I can also take this information and download it to the desktop or copy that RSS URL information or XML information and put it into some other type of client. So first thing I'm going to do here is I'm going to log in. Now, the log in information here, this is actually bound to a directory.

So I could be bound to, if the server's just running locally, I could just use the accounts that are on that local machine. As Greg mentioned, the server's typically going to be... integrated with an existing directory system. So we can take advantage of the user accounts and namespace that's already created for you within the network. So I'm going to log in here.

Hopefully I remember the right name and password. I did. I have the ability now, as the owner of this area of this web blog, of creating a new category. So here's a new category here. So I'm going to create a new category. And I'm going to name this after iChat. Because I'm going to go and I'm going to create an iChat entry. The next thing I'm going to do is I'm going to go and I'm going to make an iChat entry. So I'm going to pick the appropriate category here.

and I'm going to go grab some text. So Steve made me famous this morning for doing a video conference at 35,000 feet. Unfortunately, I'm not famous for my product, but that's okay. So I'm going to take this information here, you know, a little bit of text here. Let me copy some of this.

and just paste the simple text in and hit save. And then automatically I get an update. You'll notice that the weblog server gives us feedback to the user that says that the weblog entry was created. As users read this, they can post comments to each of the individual entries. And as an administrator, I also have the ability to go back, edit this information, and delete it at any time that I see fit. So this is the new weblog server in Tiger Server.

Thank you, Eric. So that's Workgroup and Collaboration Services. Now let's move on to Client Management. Client Management Services in Mac OS X Server let you easily deploy and manage large numbers of Macintosh computers. We have Client Management Services that let you control preferences and capabilities on the client. This is called Directory-Based Management, or Preference Management. This is deployed via Open Directory, and it's configured from the Workgroup Manager application in Mac OS X Server. We also have System Imaging Services that make it easy to set up and deploy software on systems throughout your network.

NetBoot lets you configure a single image or a small group of image and boot network systems from the server. You can also use NetInstall to install those same images to systems that are on the network as well. We've made a few improvements to system imaging in Tiger Server, the first of which is when you create these images, we now configure the open directory configuration for your network in the images to make it easier to deploy the images without having to tweak open directory settings afterwards. We also are supporting block copy for software installs and NetInstalls to greatly speed the net install process.

And lastly, we're allowing you to create bootable DVD images from your NetInstall images. So you can install those images on systems that are offline, off the network. We have a few other services that we're adding to client management in Tiger Server, the first of which is mobile home directories. Mobile home directories lets you take user files, accounts, and other information that pertains to your home directory and sync it between a portable and a network home directory.

This synchronization occurs when the portable is connected to the network. It occurs in the background with trickle sync. And when your portable is offline and these files are updated, the files in your home directory and your document folder, your preferences, and they're updated, when you connect back to the network to the home directory, they'll be synced back up to the server. So this allows you to maintain consistent information between your portable and your network home directory server, and it also allows you to have a backup of the contents of the portable on the network in case it ever becomes lost.

And because the account information is synchronized as well between the portable computer and the network, the single sign-on on the network is also brought down to the portable when it's offline because all of the account information and the authentication information is synchronized as well. So that's mobile home directories in Tiger Server.

And Software Update Server, we heard in the earlier session, allows you to Deal with an issue that we have today where we have a lot of software updates that make it very easy to maintain the latest software on your Mac OS X systems. It makes it very convenient. But when we have a new update like a Mac OS X 10.10.3.4 and you have everyone in your organization downloading that update the day it comes out, it can create a real strain on your network bandwidth.

So software update allows you to use Mac OS X's software updates, but by providing a proxy cache server for software updates also conserves network bandwidth and makes it easier for you to get those updates into your organization. It's totally transparent and automatic. When software updates become available, they're downloaded to the server and made available to the clients. But you have control as well. Some sites like to test the updates to make sure it works with their internal software.

Before they're downloaded, they're going to have to go through a lot of testing. How do they make them available for deployment? And so you can either choose to make the software updates automatically available to clients as soon as they're posted, or you can make that step manual and test the updates yourself and then release them once you're satisfied that they work with your internal applications. Software update server.

Internet and networking services in Mac OS X Server allow you to manage your network and host applications such as web services, mail, and Java application services. For networking support in Mac OS X Server, we support DNS for domain address name management, DHCP for IP address assignments, NAT for connecting to the Internet and for sharing IP addresses among systems. We support firewall for securing your connection to the Internet, and we support VPN to allow remote clients, whether they be Mac or Windows, to access the services on your network securely from a remote location.

We've made a few enhancements to networking services in Tiger Server. The first is site-to-site VPN. If you have multiple sites and you want to have a secure LAN, virtual LAN between them, we now allow you to set up site-to-site VPN between these sites. We do this over the internet securely with IPSec.

We've improved server management with DHCP by allowing you to manage systems that have multiple network interfaces and handled address assignment for those systems, as well as handling static IP address assignment in server admin as well. And we've improved the workflow for DNS management. We've greatly simplified that over the 10.3 release.

Another area of networking services that can be somewhat difficult is setting up internet gateway services. This is fairly complex. There are a number of services that all have to be configured consistently with each other. And we've simplified this in Tiger Server through the Gateway Setup Assistant. This sets up everything you need for an internet gateway. So it configures your DHCP and your VPN address ranges, NAT port routing, the firewall VPN. And it does it in just a few simple steps.

And so this is ideal for small sites, small businesses that have a connection to the internet, for remote sites that share one DSL connection to the internet. It makes it very easy to set up the server as an internet gateway. So I'm going to ask Eric to come up again and demo this and show you how simple it is.

So one of the things that we wanted to make easy in Tiger Server was to make it much easier to set up complex networking services. A lot of people are trying to use servers for port routing or they want to have one port on their server for a connection out to the WAN, another port for a connection onto the LAN. But they've got all these different services that they need to configure.

You've got your DNS, your DHCP, you've got your firewall, you might be running VPN, you've got to set up port mapping, NAT. There's a lot of different services. So in Tiger Server, one of the things we're making it much easier to do is set up, easier to set up all these disparate different services. So within the server admin application, you can now select the gateway setup tool. What this will do is it's an assistant. There we go. Let me try that again.

There we go. So the Gateway Setup Assistant tool allows you to configure your server for use as a gateway. It's a very simple assistant. It kind of walks the user through what needs to be done to the server. So the first thing you're going to do is select which port you're going to use as your port for the WAN.

This might be a cable modem, broadband connection using DSL, or those sorts of things. Next, you're going to configure which LAN port. So if you have an XServe and you have another built-in gigabit Ethernet port, that might be something you select here. Obviously, I'm on a desktop system here, so I don't have multiple built-in Ethernet ports.

Then what the Internet Gateway Setup Assistant is going to do is it's going to give me a summary of the configuration changes it's going to make. So it tells me, here's what I'm going to do. I'm going to set up this port. I'm going to turn on port mapping. I'm going to configure your DHCP server. I'm going to set up NAT. I'm going to turn DNS on for caching. And if I hit Apply here, it's actually going to reconfigure this machine, so I will lose some networking capability here. And now it's done.

So now what I can do is I can go back into the server admin application. And within this application, a number of services have been turned on for me. So I can go into the firewall. I can go into its settings. And I can see that the firewall settings have been automatically configured for me.

Within DNS, I can see that here. NAT is stopped there. Now it's running. But what it does is it automatically configures up each of these services for you. So again, another really innovative feature that we're delivering in Tiger Server, make it very easy for people to use. these complex network services.

Internet services in Mac OS X Server. We had a broad range of internet services in 10.3, and of course we've carried these forward. Apache for web services, the most broadly deployed web server in the world. We have integrated mail services that are based on a number of open source projects, Postfix for mail delivery, Cyrus for IMAP, and Mailman for list management. We've integrated these all together. They're all integrated through Open Directory for account management and through server admin for management and configuration.

We have QuickTime streaming services that allow you to host streaming media or video on demand, as well as live media that's streamed as well. You can use QuickTime Broadcaster to encode the live media and reflect it through the QuickTime streaming server. And we have QTSS Publisher, which lets you manage your content on the QuickTime streaming server. If you're building enterprise Java applications, we support J2E through JBoss and Apache Tomcat. And if you need to host a back-end database and link it into your web server, we have QTSS Publisher.

link it into your website, so we include MySQL as well. We've carried these services forward and we've provided some enhancements to Tiger Server as well. The first is in the area of mail services where we've integrated junk mail filtering and virus filtering into the mail server with Spam Assassin, an open source project that we've integrated.

We've integrated this in with our mail services and we've also integrated all of the management into server admin, so it's very easy to configure and set up. We support virtual domains now for the mail server, where we allow you to set up multiple virtual mail domains. So if you have, for instance, Company 1 and Company 2 on your server, you can have the same mail name, sales@company1 or sales@company2, go to multiple independent mailboxes on the server.

We've enhanced the support for mail quotas, so you can have soft quotas with customizable messages as well as hard quotas that will actually stop delivery of mail to mailboxes that are full. We've also delivered some enhancements to QuickTime streaming. We've enhanced the QTS publisher for improved workflow and added AppleScript support. And we've enhanced the scalability of QuickTime streaming to support bit rates that can now deliver HD quality on local intranets with our latest codecs.

That's internet services in Tiger Server. And lastly, another area that you've heard in the previous sessions a bit about today is high performance computing with grid clusters. And we have previously released a technology preview of a technology we call X Grid. And we're improving that and productizing that in Tiger Server.

X Grid will provide software that you need to provide clustering in Mac OS X and Mac OS X Server. You can do that through a dedicated set of XServe clustering nodes. Or you can also use X Grid to harvest spare CPU cycles from desktops that you have in your network when they're not being used for ad hoc clustering.

X Grid will have an SDK that allows you to embed awareness and use of the grid into your applications. It also works with command line applications so that you can distribute command line jobs that have no inherent awareness of the grid or the cluster. We provide management tools that let you set up the grid through server admin and manage your systems. And you can manage jobs and job submission and node status from any client on the network. And like all of the other services in Tiger Server, it's integrated with Open Directory for security.

So those are the services layer in Tegra Server in Mac OS X Server. Server administration, directory services, workgroup, client management, internet, and high performance computing. We've talked about a few of the major features that we're introducing here today, 64-bit applications, access control lists, mobile home directories. There are a lot more. We don't have time to go through them all. We've actually added about 200 new features in the server.

And in Mac OS X Server, we have about 100 open source solutions that we've integrated. We've integrated all of these by integrating them with open directories so they share the same account information, the same authentication information, and we've integrated them through server admins so they have the same management interface and they're easy to set up and configure. So Tiger Server.

So next, I'd like to point you to a few sessions related to the server. There are actually quite a few in the IT track this week, so we're not going to list them all, but here are a few that you shouldn't miss that I'll call out and you can check your schedules for the rest.

Tomorrow morning is Inside Mac OS X Server. Tomorrow afternoon, if you want to find out more about file settings, you can go to the system access controls. There's a session there. On Wednesday, we have a session on developing 64-bit applications. We have sessions on desktop management technologies and Apple Remote Desktop for our client management as well. We have two sessions on Wednesday for XAN, some sessions on directory services on Thursday and network authentication.

For J2E and Java programming on the server, we have a session on JBoss on Friday. And we have a session on distributed computing with Xgrid, the clustering service. We have two sessions on Mac OS X Server on Wednesday afternoon. If you have feedback, we have a feedback forum for the server tomorrow afternoon.

And it may have been moved, so check your calendar. And we have an enterprise feedback forum as well. So if you need more information, there is the release notes and documentation will be posted for Tiger Server as it becomes available on the Apple Developer Connect site. And you can get the current documentation. documentation for the server product there as well.
