---
Title:  Enterprise IT State of the Union
Year:   2004
Web:    https://nonstrict.eu/wwdcindex/wwdc2004/600/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Okay, hello everyone and welcome to Enterprise IT State of the Union at WWDC for 2004. I'm Bud Tribble. I'm Vice President of Software Technology for Apple. And about one year ago, I stood up here and I talked about Apple's approach to the enterprise market. And we've had a very exciting year.

Lots of products introduced, lots of new partners, lots of solutions. And I'd like to start out by sharing that with some of you. Now, Apple's approach to the enterprise is actually very simple. We start with an open standards approach. We leverage open source software. But Apple integrates it to make it easy to use. The result is the power of Unix, but the simplicity of a Mac.

Now, a perfect example of that is Mac OS X Server. This is the Panther server I'm talking about right now. It's open source made easy. It epitomizes our approach. Again, industry standards like BSD and open source implementation like Darwin, which is an open source implementation of BSD plus Mach, additional open source integrated in by Apple. What that does is it lets Apple focus all of our efforts and our innovation on integration to make Mac OS X server easy to use, easy to deploy, easy to manage, and easy to develop for.

Now, we don't just integrate a few open source projects. We integrate in Panther over 80 open source projects, things like Apache, Tomcat, MySQL, JBoss, et cetera, et cetera. Now, these are things that on other systems you would spend a lot of time downloading packages, getting the packages installed. We integrate it together to the point where to get a mail service running, it's a single click of a checkbox. That's Apple's added value. So, ease of use, ease of deployment, ease of management. Now, just simple example of this, let's take a look at our mail server.

On the server side, we integrate PostVix, which is an open source SMTP server, Cyrus, which is an IMAP server, and a Berkeley DB backend for the mail indexes. We don't stop there. We also integrate ScrollMail, which is a web mail interface that's based on PHP, so we integrate PHP as well. We integrate Mailman for a list server, which is built on Python, so we integrate Python as well.

And we don't stop there. For security, we provide OpenSSL so that you can have SSL authentication for IMAP. We integrate OpenLDAP so you can have LDAP authorization for your mail. All of this is packaged in such a way that for the sysadmin, again, a single check of a checkbox turns all this on and it runs right out of the box.

Now, I want to take a moment to just focus on that last issue, security, because in our role as integrating all of this open source functionality, we pay a lot of attention to security. At the Core OS level, we're doing a lot of things. We're taking our complete package and we're doing what's called Common Criteria Certification at EAL Level 3.

This is a government program sponsored by NIST to make sure that kind of all your T's are crossed and your I's are dotted in terms of security, and is actually a requirement for selling into many government accounts these days. For data security, we provide full 128-bit AES encryption. We also implement secure delete, including the secure delete that supposedly the NSA can't recover your bits off the disk.

I think we write it 21 times or something like that. Network transport security layer, mail services available through SSL version 3, single sign-on with Kerberos, a whole variety of security features. But equally important, what we do over time is, as the open source community uncovers issues, their security issues, we put those patches together, package them up as updates, and get them out to you.

And we hope a timely manner. We think we're actually getting reasonably good at this. And one of the beauties of open source is that the moment someone reports a security issue, they also tend to show up with the patch. So there's not a huge lag there for us to get those out to people.

And of course, we have client security as well that plugs right into the services that are provided by the servers. So virtual private networks, VPNs, FileVault, which I like, you can actually encrypt your home directory, provide physical security in case you lose your laptop, authentication with Kerberos again, and secure remote administration via SSL.

Now, I'd like to just take a few minutes and go over the last year or so in review. Take a look at what's been happening in the enterprise space, and a lot's been happening. We've really had a blazing pace of innovation with enterprise products. And start out with, in February of 2003, a little over a year ago, we introduced XServeRay. Now, as you may have heard about, this was a breakthrough product in terms of price per gigabyte, about $3 a gigabyte.

Which, compared to other storage solutions out there, pretty much blows them away. Greatly appreciated by our multimedia customers who are generating huge amounts of data. But IT in general, as I'll get into further on in the talk, storage is a very important part of any solution. XServeRay is an excellent part of that. October, we introduced Panther Server, Mac OS X Panther Server, automatic setup, server admin, open directory 2. Mac OS X Server 2 was introduced, Samba 3. We included Postfix Mail with that release, as well as JBoss. A lot of features, a lot of open source integration.

January 2005, XSERV G5, so dual gigabit G5s, or two gigahertz G5s, dual gigabit Ethernet, three serial ATA hot plug drives, really a dynamite one-use server, which has been really snapped up by many of our customers in the IT space, as well as I'll talk about a little bit in the scientific computing and cluster space. space.

Now, April 2004, we introduced XSAN. And it's our storage area network solution for Mac OS X. Very important to us. It's a full 64-bit storage area solution. You can store terabytes of data online. Hooks right into XSERV, so you get good cost per gigabyte. Very high performance. Multiple clients sharing a single volume.

Gives you shared fiber channel storage to the clients. Failover, multi-pathing, automatic. Volume management built in, so that you don't have to, you know, move lots of data around to manage your volumes. And interoperability with ADEX products, so that you can interoperate with storage on Mac, Windows, Linux, and Unix. A great product. Excellent for anybody who has to move around large amounts of data. That includes multimedia and multimedia pros, but also IT in general.

Then finally, June, just recently, introducing Apple Remote Desktop 2. And that's desktop management made easy. Anybody who has a lot of clients or even a few clients to manage needs Apple Remote Desktop. Apple Remote Desktop gives you remote software distribution, so remotely installed packages, the ability to do remote asset management.

So there's seven predefined reports that will give you reports with over 200 attributes of what is configured in each client. Remote administration with the ability to run remote Unix scripts on the client. And finally, remote assistance based on VNC so that you can actually give remote assistance to someone running by moving the mouse and essentially taking over control of their system.

A great help desk application. So again, anybody managing any number of Mac clients. It all really needs remote desktop. Best of all, these last two products, which have been announced but aren't shipping yet, Apple Remote Desktop 2 and XSAN are included in your developer pack. So you get preview releases of this.

And I encourage you to play around with them, take a look at their features, see how they might interact with your own products. So past year or so, blazing pace of innovation in the enterprise space. I think that's reflected in the interest we're seeing in this room. I see we have an overflow crowd here, lots of people standing in the back.

I sort of apologize, but hopefully we'll make it worth your while. Just a moment I'd like to take to talk about one thing that we don't often talk about. And that is, when you go to actually price our products and look at the performance and the features, you find out that we're a lot more price competitive and often beat out the competitors.

That's not something people normally associate with Apple, but in the enterprise space, believe me, it's true. So for example, Mac OS X Server, $999. And that's an unlimited client license, so there's no per client tax. That's a big deal. XServe G5, $2999. That's a breakthrough price for a one-use server with that kind of performance.

Fibre Channel PCI, $499. Remember when just the cables were $499? This is a great product at a great price. XServe RAID, $10,999. That works out to about $3 per gigabyte, as I mentioned. Great price. And then finally, XSAN, and you're not going to beat this anywhere, has full storage area network for $999 per node with no cap on storage size. So go price that out with other vendors. You're going to be very surprised about that. So not something we talk about a lot, but in the enterprise space, we're often the price leader. And that's really worth thinking about.

Now I'd like to just take a few minutes to talk about, in addition to our products, a couple of emerging trends that we're seeing in the enterprise space and in the industry in general. The first one will be no surprise, and that's enterprise storage. So the needs for enterprise storage are literally going through the roof.

Here's a graph just looking at the needs in kind of thousands of petabytes or petabytes, the needs for storage based on regulatory compliance. And I don't know if you think regulatory compliance is good or bad, but it's here to stay, and it's driving storage needs. Whether you're an enterprise, a school, a hospital, a medical establishment, your needs are going through the roof. 64% compound annual growth.

Another aspect of the storage needs is the need for storage. And one of the reasons for the storage explosion is, of course, digital content, multimedia. And here's an example of some of the data rates that need to be supported, and that leads directly to data size for things like 1080i interlaced full HD, 165 megabytes per second.

And for those of you who are doing the math, that's about -- so you're using -- if you're storing that to an XServe rate, you're using about five cents of storage. And you're using about five cents of storage per second, or about $180 per hour. So you'll fill up your XSERV rate pretty quickly, and it means that enterprises are buying storage by the boatload. And we don't see this trend slowing down at all.

Once you get to or below $3 per gigabyte, it sort of changes the equation in terms of backup strategies. And the trend we're seeing emerge is disk-to-disk-to-tape backup strategy. In other words, live storage on disk, you take an online backup to a second set of disk drives, and then for archival storage, you finally start a tape at some rate.

And that leads to a strategy like this. Again, backup clients on the network, the systems that are being backed up, backup server managing the whole process, backing up to an XServe RAID, which is online storage backup, and then finally over fiber channel to a tape library where you finally do your archival storage.

And Apple solutions in this space work very well and work very well with existing industry solutions out there like Legato or Veritas. And just an example of this, Citel. Citel is a leading provider of seismic data to the petroleum industry. They have over one petabyte of data. It's one of the largest databases of this type in North America. And what they've done is they've converted from tape storage for their backup to XServe RAID for their backup so they can have all of their backup data online.

So far, they've installed 10 XServe RAIDs in 2003. They're adding another 60 terabytes of storage this year. And Chris Hansen from Citel says this. "Compared to the storage systems we used before, XServe RAID costs about 10 times less per terabyte. XServe RAID makes having seismic data online and ready to copy substantially more cost effective." Another thing he says is that, hey, a lot of people don't consider Apple for their storage needs. He says, absolutely, no matter what systems you're running as servers, you need to have a backup. XServe RAID is a breakthrough product.

Second trend we're seeing out there, other than storage explosion, is cluster computing. And I'm going to take a few moments to talk about this. Now, this is an emerging trend, but here's what I think is going on. Starting in the '60s, we had the mainframe takeoff through the '60s and '70s. Client server computing came in in the '80s and '90s. And sort of, you know, mainframes haven't gone away completely, but a lot of the computing that was done by mainframes is now done by SMP systems with client server computing.

The trend we think is emerging is the move to cluster computing in IT shops. And you're not going to see it everywhere at once, and in fact the very first place you're seeing it is actually the first place you saw client-server computing which is that academic computing at MIT or at CMU and then it gradually moved into the enterprise. We're now seeing very large clusters being deployed.

A case study, Virginia Tech, I'm sure if you're alive you've probably heard of it, 1100 G5 systems, dual G5 systems deployed, teraflops of computing. They came out when they introduced as number three supercomputer in the world on the top 500.org list. The total time it took them to deploy this was four months, about 5.2 million to deploy which is a fraction of what number one and number two supercomputer took. Fraction meaning, you know, 1/20th or 1/50th the cost. So this is a breakthrough technology.

We're seeing it first in scientific computing, but we expect and we're actually seeing clusters making inroads into IT. And the enterprise market is driven by the very same reasons that scientific computing is adopting it. It's a better price performance solution. You have lots of interchangeable one-use systems racked together, very easy to manage. If one of them goes bad, you just yank it out and put in a new one from a set of spares versus a large expensive support agreement for an SMP system.

And we have applications showing up like Oracle 10G for clustered computing or grid computing. So the pieces are coming together and we expect to see a trend here in the industry. Apple has great solutions in this space. We sell these things all the time to the scientific and academic computer market. We have great partners like Miracom, Mathematica, Lustra.

BioTeam and Gridiron. Case study, Colsa just announced that they're going to deploy, they're in the process of deploying 1,566 dual processor XR of G5s. Their target performance is 25 teraflops. They ran their own custom benchmark to do this. They're going to do this at a cost of 5.8 million. Incredibly cost effective for large performance needs. A quote from Dr. Anthony. D'Arienzo at Colsa. We did a best value competition and Apple won that competition. It was based on performance, the power requirements, floor space, et cetera, and cost. And an assessment of vendor stability.

We solicited it to six companies and Apple won. It's a big deal. It's a trend. It's going to show up in IT. Again, here are just a few of the places currently in government, nonprofit, academic that are deploying Mac clusters. in the process of deploying Mac clusters today.

Okay, let's switch gears a bit here to enterprise solutions. And over the past year, we've had a number of partners announce great solutions in the enterprise space, IBM, Sun, PeopleSoft, Novell, Borland, Sybase, Oracle. I want to focus in on a few things that we're announcing new this week, or that our partners are announcing this week. IBM Lotus software, so expanded support for Mac OS X clients.

And the big deal here is that they're supporting the IBM Lotus workspace architecture or framework on the Mac client. So this lets them start to move their brands over based on that strategy, starting with Lotus. But I expect we'll see other things following as well. This is a big deal for us and for IBM and for our customers.

PeopleSoft, announcing Safari certification. This is also a big deal. What it represents is that Safari, the browser we all know and love, has matured to the point where it has really become, based on certification by PeopleSoft and similar efforts in the case of Oracle and SAP and others, has become the browser of choice for the Mac and the enterprise.

So we've done this by concentrating on the web, and it's going to have RSS and all sorts of new things in the future. But we've done this by concentrating on building Safari to implement web standards, number one, and number two, working with our partners like PeopleSoft to get actual certification for the product.

Novell Group-Wise, full support for Mac OS clients. Another great partner for us. And now it's my pleasure to introduce Tim Hoechs, who's Senior Vice President of Technology for Oracle Corporation, and he's going to tell us about some great things that Oracle is doing with respect to the Mac OS platform. So, Tim, come on up. Thanks.

Thanks, Bud. So first, nobody panic. Despite the fact that I'm sure I am wearing the only tie in this building, I am a Macintosh user. Since my first 128K Mac freshman year in college, I have used nothing but, including 16 years at Oracle. Although then I think it was used mostly for Lode Runner, now it is more productively put to use, I hope. I'm going to spend a few minutes talking about Oracle strategy, just to familiarize everyone with who we are and what we're focused on, and then put that into the OS X context. And so with that, I'm going to start with a few minutes of Q&A.

First, I've had a lot of folks ask me, so Apple and Oracle, I don't picture y'all on the same slide together. And historically, that's been true. But We've always been very friendly companies. And we've always been focused very much in being innovative siblings, really, in new technology. And Apple, we all are well aware of their innovations. And on the server side, on the enterprise information side, we've been very proud at Oracle of pioneering and innovating new technology as well.

And so because of the relationship we've had as friendly companies, we have over the years tried many times to work together. As a matter of fact, one of my first speaking opportunities was just down the hall here at the Macworld Expo probably about 12 years ago, 12, 14 years ago, when we first introduced Oracle for Macintosh.

And it was a version 5 database with a cool hypercard interface. And ever since then, we've been looking for opportunities to work together. But once Oracle decided not to release its database, we've been looking for opportunities to work together. for desktop platforms with version 7. It just became too big to do that.

Then we didn't have a release for the Mac anymore. We focused on it as a client. So we have many customers, particularly in our education customers, in our government customers, that's embraced the Mac as an enterprise client. And so we focused on making sure that our tools, and probably as importantly, our enterprise applications, our e-business suite for doing ERP and so on, support the Mac as a client. And so we've spent some time there. But not until now have we started readdressing the server operating system as a platform for our database technology. And the reason was simply that the database technology had become so large that it needed to be re-adjusted.

It needed a Unix-based server operating system to exploit. And with OS X, that's what we have. And so what we're talking about this week is the release of our premier database product. We call it Oracle 10G. I'll tell you what the G stands for in just a second. And on Mac OS X.

Let me take a quick step back and then I'll tell you a little bit more about what I mean by Oracle 10G for OS X. So first, Bud mentioned a little bit about this evolution from server-centric computing through desktop-centric computing into network-centric computing. It was on this left side that Oracle was first born, and we focused on providing database management technology for large organizations and pioneering the relational database management as a platform for that.

And then, as client-server grew, this is really where we grew up, and we focused on not only broadening our database technology, but building tools for building applications that ran on clients, and these two would communicate over the network. What was important about this model, though, is that the sophistication of the information system, which was really locked inside the application, was on the desktop. It was a desktop-centric view.

And as much as we like our desktops, that's great, but it's not a cost. It's a cost-effective way to build and deploy enterprise information systems, and we've been learning that over the last several years about client-server. What we needed, really, was a network-centric model, where we took the complexity of our information system off of the desktop, where it's really impossible to manage, and put it in the network, where it can be managed centrally, and where it can be secured centrally, and where it can be scaled centrally, and so on.

And this model is one we entered into in the late 90s, in the 1996-97 timeframe, with a release of our product. That was the first time we had a product that we had a system that could be managed centrally, and we had a system that could be secured centrally, and we had a system that could be scaled centrally, and so on. And this was a model that we called Oracle 8i.

And it was focused on making sure that the database could do all the work required to serve up not just data, but all the application functionality required to really exploit this network-centric model, which costs less, and is easier to secure, and easier to scale, and so on. And so as this evolution occurred, we also saw a change in the hardware architectures to support it.

In the server-centric approach, the way I solved the problem was by making the computer bigger. In the desktop-centric approach, the way I solved it was making our desktops bigger, which is really where the complexity resided. But in the network-centric approach, we've seen a whole new opportunity for new architectures, the most significant of which is this scalability problem. We need to often make our systems bigger. Well, how are we going to do that?

Well, like I said, we could build a bigger piece of iron, and this is really what went on with a couple paths, one on mainframes, but also in the SMP world, making bigger and bigger boxes. This is very expensive, and it does let us scale up, but only to a point.

And the problem is, it doesn't really effectively let us scale down, because sometimes we want to make our systems smaller as well, based on different loads at different seasons, all sorts of reasons. And so what we started to investigate was grid computing as a paradigm that not only lets us scale up and scale down, but more importantly, lets us scale out.

Instead of getting bigger equipment, we're adding equipment to a system to allow it to get bigger gradually. What's important about this is we can start small and add capability as we go to grow to any size we want. And we aren't constrained by the physical proportions of the box, really. And so we love large hardware, but more importantly now, we're focused on this low-cost way of scaling out information. So that we can have lots of inexpensive servers cooperating to perform a single task.

Now, Bud started to reference grid computing mostly in the scientific world. And the idea here is, actually, I have a quick college story. I had a classmate in college named Robert Morris. Maybe some of you have heard of him. He was the one that wrote The Worm that got loose from Cornell when he was a graduate student. And we were taking a computer graphics class together, and we were writing a ray-transferred computer graphics class. And we were writing a ray-transferred computer graphics class.

And we were writing a ray-transferred computer graphics class. And we were writing a ray-transferred computer graphics class. I actually, to my Mac credits, I think wrote the first ray-tracer for the Mac. It was on a Mac 2, which was not up to the job. At least, that's what I told my professor.

But he had this ray-tracer, and I was amazed at how rapidly he was able to get these sophisticated images. Mine would chug all night, and they'd be the size of a postage stamp. His would go all night, and they'd be beautiful. And I asked him how he did it, and he said, well, I'm chunking up the problem. And I'm taking this part of the screen.

And I have accounts on computers all over the university. I'm taking this part, and I'm sending it off to that computer to compute. And I'm taking this part, and I'm sending it off to that computer. You see where he got the idea for his errant worm. And he was spreading the work of his job across machines. But those machines are separate. They're not cooperating. We chunked up the problem and distributed it to lots of machines. And many of the scientific grid computing problems are this way. That's not the kind of grid computing.

We're talking about. What we're talking about is really using multiple computers to attack a single problem. And for us, the data management problem is not chunkable. We can't let all of us have little separate databases. We're talking about all of us cooperating to manipulate the exact same data. And how do we make sure we don't step on each other when we do it? How do I make sure your change is reflected in your report and so on? And so for Oracle, when we mean grid computing, we mean these different layers.

First, storage grids. And Bud already talked a lot about how technology is advancing in this way. To make sure that we can add storage without scaling up, but scaling out. As we need storage, we feed it more disks. And it can make the collective storage subsystem larger. More importantly for us is in this database world. And for us, that means clusters of computers cooperating to be a single database. Also true in the application server world, where we have now multiple servers. multiple nodes in a cluster running an application server task.

So let me tell you a little bit about 10G and how it does this grid computing. When we talk about 10G, we like to refer to the ilities. The first ility is availability. This is the idea that in this grid model, if any of these inexpensive machines fails, big deal. The collective system is still running. And in our case, the database can run even when the computer or one or some number of the computers running it fail.

The things that are in 10G that are particularly cool for this is something we call real application clusters. This is our technology that allow these nodes in a cluster to cooperate. And DataGuard, which gives us a higher level of availability by going to another site. The secondality is scalability. I talked about this a little bit already. My problems start small. I need to make it bigger.

Rather than doing a forklift upgrade by moving this computer out and putting a bigger one in, we just add nodes to our cluster and it grows. This is great for developers because you can start with a small one computer system and then grow it as the need requires.

Our next ability is secureability. It's important that we can, at the server, manage the security of information. Bud talked about the all-important common criteria and other certifications that enforce not just how software works, but the whole development process used to build it. And ensuring that that is used consistently across the applications you build in a database means that we have to secure the information at the source. And so for us, that means inside the server. We secure the data with the data. Usability is important, of course. And for those of you who have used Oracle in the past, you know it is a sophisticated piece of software.

It is. And as a result, we tend often to focus on those prior ilities. It's going to be secure. It's going to be high performance. It's going to be scalable. And this one we've often left for last. Okay? And so you needed to be a highly qualified professional to maximize the capability of the Oracle environment. Well, in 10G, we're focused a lot on accessing the power of the 10G database to everybody. And so one of the things we've added is a development environment built right into the database. We call it HTMLDB. Sorry for the name.

I'm not the proudest of the name. But the technology is extraordinary. It's a web-based development environment where all development happens through the web as well as deployment. Okay? So the actual definition of the application is that it's a web-based environment. It's just data inside an Oracle database that's rendered on the fly inside an HTML-based web browser. It's quite extraordinary. And then finally, and perhaps most importantly as it relates to 10G, is manageability.

If indeed we're going to have lots of servers all over this grid cooperating, some of them today are being database servers and tomorrow we're retooling them over to be app servers and then one fails. When we have all this complexity, manageability becomes a priority. And for us, that means making sure that you can not only manage the data, but you can also manage the data. So I think that's a really important thing.

And the other thing that we've done is we've done a lot of research and we've done a lot of research and we've done a lot of research on how we can actually control what servers are doing what at any given time and how it's secured, but that you can do it through a rich user interface, do it in a way that certainly in the Mac world you are accustomed to interacting with your systems.

So we have focused a lot in 10G on enhancing the manageability across the board. So what's important when we think about these ilities, we love to define our technology around these sort of enterprise terms. Well, there's another technology that we think of, and that's OS X. And just as Bud said, it has grown into an enterprise-capable operating system married with the XServe platform to give it this level of enterprise stability and scalability.

And what's great about it is the grid architecture that we're focused on across all of our hardware partners is super consistent with this idea that Apple has with XServes to make sure that all of these servers, can cooperate, share the same infrastructure, share the same disk, and so on. And so we've discovered that our technologies are very synergistic. And so as a result, we have ported Oracle 10G to OS X.

What we've also done is moved our flagship development environment to OS X as well. We call this JDeveloper. It's an integrated development environment for Java development, PL/SQL development, debugging, UML modeling. It's a complete professional development environment that has also been moved to OS X. The development environment is

[Transcript missing]

So what's important about this is that the 10G database, which we like to think is the most robust way of managing and storing your information inside an enterprise, is now available on this important platform from Apple, which has the same goals that we had, lowering the cost of enterprise computing, while at the same time, we increase performance, scalability, secureability, ease of use, and security. So I'm here to tell you that Oracle 10G on OS X will be available this fall, and today you can go download it from this URL. Play with it.

Because we run on a lot of platforms, its production availability is dependent on a larger release cycle, which is scheduled now to end this summer, the next release cycle. And this will be available in early fall in production, but the code is available for you to download today. Also here, you can download JDeveloper. And JDeveloper, the development environment, is available for you in developer preview release, and it is scheduled to go production in the beginning of September.

Okay? So we're super excited about being here. We very much enjoy our relationship with Apple. We like to think of ourselves as innovators in the enterprise around information management, and we're really excited about OS X and the XServe as a platform to showcase what we mean when we say grid computing. So to Apple, I say thank you, and to all of you, I appreciate your attention. Thanks.

Tim. Well, thanks, Tim. And as he just mentioned, Oracle 10G and JDeveloper, download them, play with them. Now, speaking of JDeveloper, I want to talk a bit about enterprise development tools. And this has been a huge story for us. JDeveloper is the latest, but you're going to hear a lot more in this space.

When I think of Mac OS X, I think of development tools. And I think of not just a toolbox of development tools, but I think of, if you've ever been in the hardware store and you've seen those huge tool carriers that have like three tiers and 50 drawers, that's what I think of, because not only are all the open source tools there, but great tools like JDeveloper, IDEs, starting with, of course, XDeveloper.

And then there's Xcode, which is bundled in the box. And, you know, Xcode continues to improve, especially getting great this last year in the area of performance with zero link. So you can get around the compile, link, debug loop with zero linking time. Fix and continue, which actually makes it even faster.

And distributed building, which changes the paradigm so you can distribute your builds sort of like worms over the network. Great set of development tools. And then there's the open source development tools. And then, as I mentioned, from third-party developers. So some announcements that are happening this week. Borland, optimize it suite for Java. So a complete performance solution for Java development. Shortens their development and testing cycles. Improves your reliability.

Enhances developer productivity. Eclipse, which Eclipse.org just announced last week the availability of Eclipse. Their support for Eclipse on Mac OS X is going to be great. And then there's the open source development tools. And then, as I mentioned, from third-party developers. So some announcements that are happening this week. Borland, optimize it suite for Java. So a complete performance solution for Java development shortens their development and testing cycles.

Improves your reliability. Enhances developer productivity. Eclipse, which Eclipse.org just announced last week the availability of Eclipse. And then, as I mentioned, from third-party developers. So some announcements that are happening this week. Eclipse on Mac OS X, which is big news. And I believe it's now available for download this week from Eclipse.org.

So an open source IDE for Java. And last but not least, I want to introduce the father of Java, James Gosling, vice president for Sun Corporation, who's going to come up and tell us some of the great things that are coming out of Sun for the Mac OS X development community. So, James. James Gosling.

Hello. I don't actually need this. That's right. I'm actually going to drive my own computer here. So as you may have noticed, there's another conference going on here. And it's sort of entertaining. I mean, I'm a happy Mac user. This machine is not loaned by Apple. I actually had to pay money for this one. And it has got many, many miles on it. I drag it around and I love it dearly. So I'm going to talk to you a little bit about what's going on in the Java world. Try to do sort of a quick summary.

And I'm going A lot of what we do in the Java universe is sort of about this, this kind of picture of sort of ubiquitous computing. There's been this sort of evolution from desktops to servers to lots of little devices on the edges connected to things in the middle to databases and various things that transduce this or that. Fairly wide-ranging sets of things. So, for example, this is my, you know, Sun ID card. If you didn't notice, there's a little metallic pad there.

This is a smart card. This has got a CPU on it. This is a Java smart card. There are about six and a half, 650 million Java smart cards out there in the world today. They're used all over the place. And you can actually run real live Java code on here.

It does, the new generation ones do, like, you know, all kinds of fancy encryption and networking. And, you know, it's just amazing what you can do with these things. You know, the other really common network node in our universe is one of these. This is a Nokia cell phone. This one has, this one is actually a Java multiprocessor.

Because if, all GSM phones have what are called SIM cards in them. SIM cards are smart cards. And all the GSM SIM cards are Java cards. Plus which the main processor does Java. This is actually a fairly modern one that uses a standard called MidP2.0. And so it's, the software for these things is kind of dominated by games. As one would expect, I suppose. It's like 95% games. But there's, but the market for games on cell phones last year was about $4 billion. You know, which is, you know, not exactly chump change.

And, you know, it's a part of the sort of incredible diversity of the Java world. One of the demos this morning was the latest stuff in the automotive world. The upcoming sort of BMWs have complete other -- their complete navigation and entertainment systems are all sort of wall-to-wall Java code. There's a -- if you go to the pavilion, you'll see a couple of BMWs that have, you know, pretty large-scale Java multiprocessors inside them. And they do a really, really, really nice job.

And, of course, some of it's -- some of it's not just the Java. Some of it's goofy. If any of you were at the Java keynote this morning, which you could have seen and still made it back here for Steve's, there was the Java-controlled liquid nitrogen cannon -- We're running this contest. We do t-shirts tossed into the audience.

I had sort of run out of ideas for ways to toss t-shirts into the audience. Last year, I did a trebuchet going medieval, and this year we ran it as a contest to get people to come up with interesting ways to hurl t-shirts into the audience and maybe use a little Java code on the way.

The three finalists are today, tomorrow, and Thursday. Today's was a truly impressive cannon. If they actually let them crank it up all the way, it actually does take chunks of concrete out of the back wall. But we actually managed to not injure anyone, which in the practices last night was a big concern.

So anyway, Java's role in this sort of infrastructure that people have been building that goes from these huge enterprise servers to these desktops to cell phones to all the smart cards is it's kind of a conceptual framework. I mean, Java is a language. Languages are ways that people think and express their thoughts, and in particular, how you express what you want the damn piece of iron to do.

And the lovely thing about Java is that it actually spans all of this stuff so that developers can view this reality of stuff out there that is extremely heterogeneous as something that is a lot more homogeneous. You can really think about programming for your Mac desktop as being the same thing as programming for your Windows desktop.

And it's sort of a different twist on the sort of marketing side. It's a whole different kind of marketing line that various people have been using, the whole "write once, run anywhere," which I like, which is sort of "learn once, work anywhere." And that lets you sort of build communities that span a lot of different technologies.

You see a lot of IT shops that have You know, they don't have like mainframe developers and point-of-sale terminal developers and, you know, VMS developers and DOS PowerVS developers, they've just got developers and they happen to work wherever they're needed because all the machines kind of speak the same thing. And it gives you this sort of freedom and flexibility that is just a wonderful thing to do.

And it really has made Java be everywhere. There are somewheres around 4 million professional developers that do Java as their day job. If you count people who have learned Java, like university students, you get completely stupid numbers. But it's impossible to measure at this point. And it really is not a marketing slogan. I mean, the number of these machines out there that speak Java is huge.

Currently, we're like 350 million Java-enabled cell phones. The vast majority of GSM cell phones are Java cell phones. And you see it in all kinds of embedded stuff, for instance. The Canon this morning was controlled by a little embedded server. It's a little board about this big, made by a Dallas semiconductor.

I think they call it the tiny stick. And it's a general sort of Industrial Automation Controller, you download Java code to it and it controls relays and servo motors and whatever it is you wire it up to. And there's a big community of folks doing that out there.

One of the things that does make Java work so well is that Java really isn't a product from a company. Java really is a community. There are a lot of companies that work together. Apple works with us. Oracle works with us. IBM works with us. Not Microsoft, but just about everybody else.

[Transcript missing]

That's actually pretty horrible. But outside of the U.S., you see a lot of Linux. You go to China, Brazil, France, you see a lot of Linux on the desktop. And developers have really been starting to care about that. And of course, the reason that I'm here today is that people actually care about Macs as a desktop. They're nowhere near where Windows is, but they're enough to get developers interested.

They're really getting, you know, pretty fascinating. And these days, we've got modern JVMs pretty much everywhere. As near as we can tell, there are about 650 million desktops out there in the world that are, that have sort of modern JVMs on them. And by that, I mean sort of anything but Microsoft.

And so when people write Java apps, they actually run pretty much anywhere. And there are a number of really nice ways to launch them these days. There's Java Web Start and Applets. Web Start is a fairly nice one that is a sort of combination of sort of web-friendly navigation and easy deployment.

of what are really sort of full-up desktop apps. And most systems that implement Web Start, and Apple is one of them, if you Web Start the same app a couple of times, they'll sort of ask you, well, do you want me to turn this into a real live application? And then they do that. And then it's a real loaded desktop app. It's installed and it runs. And your users have never had to run an installer. They just click the link on a web page and it just sort of did the right thing.

And the performance has been pretty nice. If you've watched my slides, I'm not using Keynote. I'm actually using a slide program that I wrote. And it's a slide program that I kind of use as sort of an experimental testbed for being goofy. And a month or so ago, I decided that I didn't know the 3D APIs very well, so I shoehorned 3D into my slideshow, right? So you can sort of do all kinds of really stupid things when you're doing a 3D project.

[Transcript missing]

Sun has a number of tools. Our base tool is something called NetBeans. It's an open source project, sort of like Eclipse, except that it's been an open source project for at least a year longer, and it's been available on the Mac for quite a while. And actually, where Oh, there we go. So this is NetBeans 4.0. I've got most of the windows sort of closed away.

One of the things about NetBeans as an open source project is you can get all the latest bits. So if you go to netbeans.org, you'll find the current FCS release, which is the 3.6 release. You'll find the upcoming release, which is the 4.0 release. And actually, you'll find two releases of the 4.0 release. There's something called the Daily Build, which only the truly brave would download. And then there's something called the Q Build, which is the daily build.

Which is every day the dailies are run through some QA. And if by some random chance one kind of passes QA, then that gets called the Q Build. So this is a Q Build of NetBeans 4. I'm not going to really show you anything about it other than it's there. It's a real Mac app. It does all the Mac buttons and things. Although, I won't bother showing that. But the really interesting tool for us these days has been this thing called Creator.

Creator is a very sort of... So it's really targeted at visual basic developers, at people who--

[Transcript missing]

A real Mac app. Here it is. It's actually on the toolbar. And I'll actually launch it just so you can actually believe me. And this is actually, this is a Mac.

And the release of Creator that you can get today runs on the Mac. It also runs on Linux and on Solaris and on Windows. and the rest of the team will be joined by Tim Hoechsst, James Gosling, and the rest of the team will be joined by Tim Hoechsst, James Gosling.

Data flow, the business process logic of your application, and each sort of node, each sort of place where you stop is a web page. The web page construction is all this sort of drag and drop kind of construction.

[Transcript missing]

You can edit them, stretch them. You can see properties off on the side. You can put all kinds of, you know,

[Transcript missing]

You can use the property sheet. You can change it. If you look closely, you can see that's actually a Mac button that it's constructing. It's a full-blown Mac app.

It does all the really nice stuff. The way that you add components here is it's got this notion of services that you can tie in. You can drag and drop both web services, and here's some built-in web services. Here's some data sources. You can drag and drop fields out of databases and construct tables. I unfortunately can't show you that because my database isn't connected. No discard. Go away. So it's a lot of fun.

There are a lot of other fun things going on in the Java world. There's a project called Mackinac, which is a real-time system, a large-scale real-time system. So if you happen to be in need of running a large power plant and reading tens of thousands of sensors a second with about four microseconds jitter, Mackinac's for you.

If you're next door and you see anybody who's Brazilian, ask them about what's happening in Brazil with Java. It's completely crazy. Things like 96% of all of their tax returns are filed electronically. Their whole IRS equivalent is a big bag of Java code. And the front end is a Java app. Their equivalent of the IRS built the tax preparation.

And it runs on Macs, it runs on Linux boxes, it runs on PCs, it runs all over the place. There's Joggle, the Java OpenGL thing, which is what is driving this. My little slideshow guy. If you want to have some real geek fun, go look at a website called slu.com. It's got a Java applet and a Java backend that lets you drive a giant telescope on the top of a mountain on the Canary Islands.

If you want to do an open source project or look in the Java developer community, there's this website, dev.java.net, which is sort of like SourceForge, but it's a big community of Java developers. And of course, the fun thing for me this year is the t-shirt hurling contest. The picture here is the trebuchet that I built last year.

And I invite you all to come and join us. All of you are WWDC attendees. You get Java 1 pavilion passes. All you have to do is walk across the street to the north lobby registration area with your badge and go to the registration counter. And you complete the online form and where it says enter a priority code, just type in "Apple" and you've got a badge.

You can go down and visit the pavilion. My favorite place is always the jewel cases full of cell phones. And there's lots of people there that will show you all kinds of high-end enterprise software, small embedded stuff, developer tools. It's like all over the map. And the vast majority of it runs on Mac. Thank you.

Thanks, James. Thank you, James. So, as of today, Sun has announced that Sun Java Studio Creator is available on Mac OS X, and we're extremely pleased about that. And I'm extremely pleased because having been, you know, somewhat involved a number of years ago in the original interface builder in the next step days, I'm a strong believer in visual building of applications. So, Creator is a great tool. I recommend you, you know, get a copy of it, try it out, play with it. We're very pleased. Thanks.

So it's been a banner year for developers. We have over 450,000 registered developers for Mac OS X on our developer site. We have, as you've seen, a great set of enterprise tools for the Mac, over 12,000 application shipping on the Mac, so a great year, and we think we're going to have a great year going forward as well. And speaking of that, so today I'm pleased to be able to introduce Tiger Server.

I want to take you through a few of the features of Tiger Server, some of the top features. There's over 250 new features in Mac OS Tiger Server, over 100 open source projects included. If you remember, there were 80 in Panther. We've upped that to over 100 open source projects.

uh first feature which is kind of near and dear to me is 64-bit applications now in panther of course you've had 64-bit math all along what we're introducing in tiger is 64-bit pointers so you can have 64-bit address spaces for their for your applications this is a big deal for anyone who has to handle uh large amounts of data at once and uh what this what might this be i was looking the other day noah's database for example of the surface of the world with 100 meter resolution in terms of how many feet above sea level or meters above sea level that database when you unpack it which i actually did on my mac last week is about four gigabytes in size so you add that and a few other things to your database and you need a lot of stuff in memory at once well 64-bit apps in tiger is going to give you that we support 64-bit processes we have 64-bit system library we're taking a a stepped approach here what we did first is convert system library so all the non-gui libraries are going to be converted or are converted in tiger to support 64 bits gcc uh support 64 bits so for the non-gui portion of your application you can run right alongside 32-bit apps run a 64-bit address space and then if your app is constructed client server so the gui runs in a client and they communicate you can actually have a full solution that that takes advantage of very large memory sets on xserv 64-bit tools we use lp64 so longs and pointers are 64 bits integers are 32 bits this is important because that is the standard for unix all the other vendors have settled out on that being the standard so for porting applications between linux or unix and Mac OS X that becomes quite easy you don't have to have different versions of your source code so this is a big deal we expect to see great applications showing up over the next year in this space nt migration tool for anybody who is still running nt in their server shops and if you're running pdc's primary domain controllers we can now take over that job with Mac OS X server with tiger so we have a migration tool that actually sucks out all your data from your domain controller puts it into your tiger server user and group accounts and you can upgrade your nt server to a Mac OS X server and and run it as a primary domain controller put your users accounts your users home directories so support windows as a client from Mac OS X server and have a very robust high reliability modern technology server great number of customers are in this space they're still running domain controllers they've not moved to open directory which is a large shift if they want to move their OS and their server rooms to a better OS we have a great solution there software update server this has been a big request thank you So what is this? This is a proxy cache server for Apple software updates. This lets you, inside your firewall, run a proxy cache server for Apple software updates that lets you control when your customer or when your users see the updates.

So you have complete control over that. It only displays those updates to users when you approve them. And it saves network bandwidth because you're only downloading once from Apple and everything else is inside the firewall. So, huge request. We think this is going to be a big hit.

Weblog Server, a blog server based on Blogsum. Calendar-based navigation, customizable themes, syndication using RDF, RSS, RSS2, and ATOM, so we support all the acronyms for the ways that you do this. And as I mentioned, based on Blogsum, a great blog server built right into Mac OS X Tiger. And finally, another highly requested feature.

iChat server for inside your firewall. And this is great. Run the iChat server inside your firewall. Your communication doesn't have to leave your enterprise. It's your namespace. You manage the namespace. All traffic can be encrypted with SSL or TSL, so it's highly secure. It supports iChat and Jabber clients.

So you can interoperate between Windows and Mac or Linux. So this is going to be, I think, a huge hit in the enterprise. This is a highly requested feature. Other features that are included in Tiger, XGrid 1.0 is supported. So for turnkey grid computing, for applications that are amenable to it, you can spread it around your network on servers or clients.

I think that's going to find a wide amount of use in the enterprise, as I mentioned. It's already being widely used in the scientific and academic community. Small office, home office setup, so easy out-of-the-box setup for a small office or home office. Ackles support. Access Control List, and mobile home directories so that you can, from a PowerBook, sync your home directory with the directory on a disk. Take your PowerBook, come back.

And as I mentioned, over 250 other features, over 100 open source projects. So again, we're continuing to leverage open source into the product, focusing our innovation on making it easy to use, easy to manage, easy to deploy, and easy to develop for. Going to be available in the first half of 2005. and you all get a copy of Mac OS X Server Preview Release, Developer Preview Release for coming to the conference.

So thank you very much. I just want to mention before you go, we have a lot of great things that you should be attending. Other sessions you should be attending. Some of them are listed up here. Apple and Scientific Computing, Mac OS X Server Update. I especially want to mention on Wednesday, there's an Oracle session with Tom Kite. Those of you who know Ask Tom and are familiar with Oracle, you've got to go see Tom give a talk about Oracle on Mac OS X. X-Serve Raid, Apple Design Awards, et cetera. So thank you very much. Thank you.
