WEBVTT

00:00:12.300 --> 00:00:14.180
- Okay, good morning.

00:00:14.180 --> 00:00:17.420
Welcome to the 2004 edition
of the printing session.

00:00:17.540 --> 00:00:22.060
My name is Paul Zambold,
technology manager,

00:00:22.060 --> 00:00:23.880
evangelist for printing.

00:00:23.880 --> 00:00:26.920
As always, we've got a lot of good stuff,
so let's get started.

00:00:27.100 --> 00:00:33.170
We're gonna begin by looking at how
far we've come and where we're going

00:00:33.170 --> 00:00:35.020
in Tiger with the printing system.

00:00:35.090 --> 00:00:38.580
See how we're doing in
making things easy for you,

00:00:38.580 --> 00:00:40.380
making things easy for the customer.

00:00:41.580 --> 00:00:46.440
We'll start with kind of the report card
on where we stand with compatibility,

00:00:46.440 --> 00:00:51.120
mainly with printers,
how many you can connect to the Mac,

00:00:51.120 --> 00:00:55.260
ease of use, functionality,
and not just functionality for the user,

00:00:55.260 --> 00:00:57.260
all the bells and whistles
in the print dialog,

00:00:57.260 --> 00:01:01.000
but the APIs that you use to
interact with the printing system.

00:01:02.530 --> 00:01:04.380
Compatibility.

00:01:04.380 --> 00:01:06.680
I want to start with a little
bit of audience participation.

00:01:06.680 --> 00:01:09.600
Who's used one of these printers?

00:01:10.710 --> 00:01:15.760
Okay, so I know how many people are
at least 30 years old or older.

00:01:15.760 --> 00:01:18.700
If you don't know,
that's an image writer printer.

00:01:18.700 --> 00:01:20.910
That's actually an image writer 2.

00:01:20.950 --> 00:01:23.860
Image writer shipped first
just over 20 years ago.

00:01:23.860 --> 00:01:27.770
And this is the image writer
that I've got in my office.

00:01:27.770 --> 00:01:31.220
I don't know how old it is, but it works.

00:01:31.220 --> 00:01:34.270
I went to Linux.org,
downloaded the Fumatic driver,

00:01:34.270 --> 00:01:36.080
and I can print to it from 10.

00:01:36.080 --> 00:01:38.050
So, pretty good.

00:01:38.060 --> 00:01:40.880
And anybody here who played a
part in writing that driver,

00:01:40.880 --> 00:01:42.040
thank you very much.

00:01:42.100 --> 00:01:44.100
I don't use it a lot.

00:01:44.100 --> 00:01:45.460
It's not very fast.

00:01:45.460 --> 00:01:52.100
It's 144 DPI in best mode,
so it's not great, but it works.

00:01:52.220 --> 00:01:59.400
Panther shipped with a little over
120 PPDEs for PostScript printers

00:01:59.400 --> 00:02:03.910
from the well-known vendors,
close on 300 old-style

00:02:04.110 --> 00:02:10.140
so-called Tioga drivers from HP,
Epson, Canon, Lexmark,

00:02:10.140 --> 00:02:14.920
and we got the GIMP print package in
Panther that supports over 250 printers.

00:02:14.920 --> 00:02:16.940
So we're doing pretty well.

00:02:16.940 --> 00:02:18.900
We're planning on building
on that list for Tiger,

00:02:18.980 --> 00:02:23.550
so you can expect that out of box,
Tiger will ship with even more drivers,

00:02:23.660 --> 00:02:26.390
and we're working closely
with the printer vendors

00:02:26.390 --> 00:02:27.590
to make sure that happens.

00:02:27.680 --> 00:02:30.120
So we think we're doing pretty
well there on making sure that

00:02:30.190 --> 00:02:33.580
any user of Mac OS X can print
to pretty much any printer,

00:02:33.600 --> 00:02:35.560
Direct Connect, network, et cetera.

00:02:38.140 --> 00:02:42.820
On the ease of use topic,
making things easy for the everyday user,

00:02:42.820 --> 00:02:47.200
professional user,
I thought we'd look at four things that

00:02:47.300 --> 00:02:49.920
most people do from one time or another.

00:02:49.920 --> 00:02:52.970
Discovering printers, setting up cues,
sharing those printers,

00:02:52.970 --> 00:02:56.930
and interacting with the printers
through the print dialog and getting

00:02:56.930 --> 00:02:59.430
access to all the printer's features.

00:02:59.910 --> 00:03:03.900
If you remember that old image rightly,
remember that users used to

00:03:03.900 --> 00:03:06.620
have to think about the driver
before they went to print.

00:03:06.620 --> 00:03:08.900
They'd have to pick the
driver and then the printer.

00:03:08.900 --> 00:03:13.850
And then in Mac OS X,
when we came out with Print Center,

00:03:13.900 --> 00:03:17.040
we decided that it was better for
the user to think about the way the

00:03:17.040 --> 00:03:18.780
printer was connected to the Mac.

00:03:18.880 --> 00:03:22.980
So they picked the connection type, USB,
rendezvous, et cetera,

00:03:22.980 --> 00:03:24.910
and then picked the printer.

00:03:26.060 --> 00:03:29.120
And we had these browsers that
were loaded by Print Center,

00:03:29.270 --> 00:03:32.590
Printer Setup Utility,
that would provide support for

00:03:32.930 --> 00:03:34.810
those various connection types.

00:03:34.900 --> 00:03:37.420
Well,
the only problem with that is it took

00:03:37.420 --> 00:03:41.130
a little while to find those browsers,
load them, call them,

00:03:41.130 --> 00:03:43.100
and get the list of printers.

00:03:43.100 --> 00:03:46.840
And just a little movie I caught
on my PowerBook back in my office,

00:03:46.900 --> 00:03:49.850
you can see that it would take about,
on a good day,

00:03:49.850 --> 00:03:53.730
maybe about 10 or more seconds
to load all those browsers.

00:03:53.740 --> 00:03:55.980
So we weren't too thrilled with it.

00:03:56.060 --> 00:03:57.460
that.

00:03:57.750 --> 00:04:04.360
Now, coming up next is what
we've done on Tiger.

00:04:04.760 --> 00:04:08.580
And we don't have a network
of printers in Moscone,

00:04:08.580 --> 00:04:14.040
so I'm going to show you another movie
that I caught back again in my office.

00:04:14.040 --> 00:04:18.500
As you can see, if you watch this,
what we've done in Tiger is we've

00:04:18.500 --> 00:04:23.570
combined -- we've created a combo browser
for all the standard connection types.

00:04:23.610 --> 00:04:26.930
And as you can see here,
you can sort by name,

00:04:27.120 --> 00:04:33.530
you can sort by connection type,
you can filter, as you see there.

00:04:33.530 --> 00:04:33.530
And you

00:04:33.850 --> 00:04:35.410
So, it's a lot faster.

00:04:35.560 --> 00:04:37.600
Basically,
there's no latency between clicking the

00:04:37.600 --> 00:04:39.170
add button and seeing a list of printers.

00:04:39.170 --> 00:04:42.670
Having done that,
you can go and set up cues very easily.

00:04:42.680 --> 00:04:47.450
There's a separate, there's an icon,
so you can go and set up your IP printer,

00:04:47.450 --> 00:04:49.720
because of course you can't
browse for those so easily.

00:04:49.720 --> 00:04:53.790
And there's still access to the
third party custom browsers.

00:04:53.790 --> 00:04:58.710
So, we've tried to cover all the bases,
and overall we think that the user

00:04:58.730 --> 00:05:02.200
experience is going to be a lot
better for the folks who have to

00:05:02.330 --> 00:05:03.780
go out on the network for testing.

00:05:03.870 --> 00:05:05.780
For example, to set up a printer cue.

00:05:05.780 --> 00:05:11.040
That said, of course you know that even
as far back as Puma 10.1,

00:05:11.070 --> 00:05:14.160
we had auto cue curation
for some connection types.

00:05:14.270 --> 00:05:17.140
So, we're still expecting the
user not to even have to worry

00:05:17.190 --> 00:05:20.640
about printer setup utility for
things like USB and Rendezvous.

00:05:21.400 --> 00:05:25.160
Next thing that people do a lot
is they share their printers,

00:05:25.160 --> 00:05:29.640
or they share their printer queues,
and we introduced that when

00:05:29.650 --> 00:05:34.720
we integrated CUPS into the
printing system back in 10.2.

00:05:34.720 --> 00:05:37.930
The UI for it though
gave you just one choice,

00:05:37.950 --> 00:05:42.290
share all your printers or none of them,
and that was okay if you just

00:05:42.290 --> 00:05:45.120
had one printer queue for say
a Direct Connect USB printer.

00:05:45.120 --> 00:05:47.990
It wasn't so good if you had a lot
of printer queues set up on your Mac,

00:05:48.010 --> 00:05:50.340
especially for network printers.

00:05:50.390 --> 00:05:56.350
So in Tiger,
you'll see this when you install Tiger,

00:05:56.350 --> 00:06:01.720
we now have via the print and
fax system preference the ability

00:06:01.830 --> 00:06:04.820
to list the printers you've got,
the Direct Connect printers you've got,

00:06:04.930 --> 00:06:06.680
and selectively share them.

00:06:06.680 --> 00:06:09.040
However, if you spot the little
bit of red text on that,

00:06:09.040 --> 00:06:11.720
you'll see that we haven't
quite hooked the UI up to

00:06:11.750 --> 00:06:15.220
the underlying functionality,
so a future Tiger SEED will

00:06:15.230 --> 00:06:16.520
have that working.

00:06:16.520 --> 00:06:19.460
So I think users will appreciate that,
the ability just to share.

00:06:19.460 --> 00:06:22.220
You know,
the printer that you are happy to share,

00:06:22.220 --> 00:06:24.910
and that expensive printer that
you like to use all the time with

00:06:24.910 --> 00:06:27.440
the expensive inks and papers,
you can keep that to yourself.

00:06:30.430 --> 00:06:33.960
Another thing that people do,
especially in the world where people

00:06:34.030 --> 00:06:37.800
work with network laser printers,
typically PostScript printers,

00:06:37.800 --> 00:06:40.380
when they discover the
printer on the network,

00:06:40.380 --> 00:06:41.850
they have to configure it.

00:06:42.040 --> 00:06:44.710
They basically have to tell
the host computer about

00:06:44.710 --> 00:06:46.450
the printer's capabilities.

00:06:46.450 --> 00:06:49.910
Now, it doesn't usually apply if
you've got an AppleTalk printer

00:06:49.990 --> 00:06:53.580
because we can query the printer
and get back its configuration.

00:06:53.580 --> 00:06:56.350
But for an IP printer,
you have to do it manually.

00:06:56.350 --> 00:07:00.280
And this little movie again
shows the steps involved in that.

00:07:00.300 --> 00:07:05.030
Typing in the address of the printer,
setting up the queue,

00:07:05.040 --> 00:07:09.160
and then having done that,
you have to go to the installable

00:07:09.160 --> 00:07:12.450
options panel and tell the host
computer that you've got that

00:07:12.630 --> 00:07:16.710
extra paper tray installed or
you've got the duplexer installed,

00:07:16.730 --> 00:07:17.620
et cetera.

00:07:17.620 --> 00:07:21.250
So we're expecting a little more of
the user than should be required.

00:07:21.250 --> 00:07:25.970
Just let that movie complete.

00:07:28.940 --> 00:07:33.160
So this is what we're
planning to do in Tigra.

00:07:33.230 --> 00:07:37.680
You won't see this when you
install the seed that you have.

00:07:37.810 --> 00:07:41.810
But we are planning-- and we've already
got some code in place-- to support

00:07:41.810 --> 00:07:43.920
SNMP as part of the printing system.

00:07:43.920 --> 00:07:47.570
And with SNMP queries
embedded in a PPD file,

00:07:47.660 --> 00:07:52.410
we should be able to-- for an IP printer,
we should be able to find out

00:07:52.410 --> 00:07:55.290
how it's configured and do
that automatic setup that we do

00:07:55.290 --> 00:07:57.020
already for Apple Talk printers.

00:07:57.100 --> 00:08:00.220
So again, that'll make life a little
easier for the user.

00:08:03.100 --> 00:08:07.020
We'll also be using SNMP to
monitor printer status during

00:08:07.020 --> 00:08:08.580
the execution of a print job.

00:08:08.580 --> 00:08:11.730
So for your LPR printers,
you'll be able to see more about

00:08:11.730 --> 00:08:15.700
what's going on by querying
the MIB during the print job.

00:08:18.850 --> 00:08:22.290
Okay,
one more thing in terms of ease of use

00:08:22.390 --> 00:08:26.150
is the functionality we provide all the
bells and whistles in the print dialog.

00:08:26.150 --> 00:08:30.520
And what we did in Panther,
as you probably all know,

00:08:30.520 --> 00:08:33.160
we added a bunch more panels,
a lot of new features,

00:08:33.200 --> 00:08:37.250
things like printing cover pages,
being able to schedule when you print,

00:08:37.250 --> 00:08:39.940
doing reverse order
printing and printing odd,

00:08:40.010 --> 00:08:41.650
even sheets, et cetera.

00:08:41.650 --> 00:08:44.740
That was all well and good,
but it resulted in a lot of

00:08:44.740 --> 00:08:47.060
panels in the print dialog.

00:08:47.060 --> 00:08:52.310
So we've decided to do a little bit
of cleanup and add -- and still add

00:08:52.310 --> 00:08:55.100
some functionality to the print dialog.

00:08:55.100 --> 00:08:58.900
And to show you that,
we have our fearless demo guy here,

00:08:58.900 --> 00:09:01.600
Alan Beck,
who's just going to come up and live

00:09:01.890 --> 00:09:03.790
show you the Tiger print dialog.

00:09:07.720 --> 00:09:11.050
We could have demo one on the screen.

00:09:11.130 --> 00:09:17.350
So I'm just going to go ahead and bring
up one of my favorite test documents,

00:09:17.350 --> 00:09:18.650
King Tut.

00:09:18.680 --> 00:09:21.580
Just bring up the print dialog.

00:09:25.510 --> 00:09:31.190
And here you'll see that we have somewhat
rearranged these buttons on here.

00:09:31.210 --> 00:09:37.300
We've added a PDF button,
a pop down command.

00:09:37.500 --> 00:09:41.700
The Mac OS X printing system is a simple,
easy-to-use,

00:09:41.700 --> 00:09:46.190
and easy-to-use software that
combines the Save As PDF and

00:09:46.230 --> 00:09:48.400
the Save As PostScript.

00:09:48.400 --> 00:10:01.050
We have gotten rid of
the output options PDE.

00:10:02.460 --> 00:10:07.500
Revamped the summary PDE to make
it more useful so you can see the

00:10:07.500 --> 00:10:10.640
information that you want and hide the
information you really don't care about.

00:10:10.640 --> 00:10:12.680
Like,
I really don't care about copies pages,

00:10:12.890 --> 00:10:15.720
but I always really want
to know what my layout is.

00:10:15.970 --> 00:10:22.520
So one nice thing about this
is it will remember what

00:10:22.630 --> 00:10:26.180
What PDE summaries you have
opened on a per user basis.

00:10:26.250 --> 00:10:29.910
So next time I bring up the print
dialog and show the summary,

00:10:29.990 --> 00:10:33.110
it will still come up
in this configuration.

00:10:33.260 --> 00:10:37.020
So if we just go back to,
let's go back to layout.

00:10:37.070 --> 00:10:40.930
Let's change it to end up with
a double thin line border.

00:10:40.960 --> 00:10:42.550
And let's go to the summary pane.

00:10:42.550 --> 00:10:46.660
It shows that, okay, I'm now...

00:10:47.220 --> 00:10:53.470
The other thing that we
have done is we have added

00:10:55.010 --> 00:10:57.820
Look at the paper handling PDE.

00:10:57.820 --> 00:11:02.160
We've added selecting the
destination paper size.

00:11:03.020 --> 00:11:06.090
Basically,
it allows us to scale to fit to a

00:11:06.090 --> 00:11:09.140
certain paper size that you know
that is currently in the printer.

00:11:09.140 --> 00:11:12.880
So if we do this, we know it's US letter,
but we know, let's say,

00:11:12.880 --> 00:11:14.850
we only have envelopes in the printer.

00:11:14.860 --> 00:11:20.240
So what it'll do is it'll scale to fit.

00:11:22.640 --> 00:11:26.380
This is our envelope with
the Kingtat scale to fit.

00:11:26.620 --> 00:11:28.990
So we don't get the clipping,
we don't lose.

00:11:29.030 --> 00:11:33.000
It's kind of a quick way of
getting a printout if you don't

00:11:33.000 --> 00:11:37.190
have the correct paper size.

00:11:38.060 --> 00:11:43.120
So that's basically all that has
changed in the print dialogue.

00:11:43.120 --> 00:11:45.500
I think everything else is
basically the same right now.

00:11:45.690 --> 00:11:48.760
I'm not saying it won't change
further by the time Tiger ships,

00:11:48.800 --> 00:11:51.000
but this is what was currently planned.

00:11:51.000 --> 00:11:53.670
So let's move on to PrintCenter.

00:11:54.000 --> 00:11:58.000
Here I have one printer here.

00:11:58.000 --> 00:12:02.280
We actually do have a Rendezvous printer,
so if I could just click the add button,

00:12:02.280 --> 00:12:04.790
and we actually is one
Rendezvous printer,

00:12:04.790 --> 00:12:06.280
LaserJet 4300.

00:12:06.300 --> 00:12:06.950
I will select it.

00:12:07.130 --> 00:12:12.360
You'll see that it's gathering
information from the printer.

00:12:12.360 --> 00:12:12.360
Once it finds it,

00:12:13.440 --> 00:12:15.700
And it's using, then when it selects
that PPD automatically,

00:12:15.710 --> 00:12:17.340
we just go ahead and
add it if we wanted to.

00:12:17.400 --> 00:12:22.730
And that's the change
to printer-type utility.

00:12:22.800 --> 00:12:27.500
Now if you just go to the printer proxy,
one thing we have added is we have added

00:12:27.650 --> 00:12:30.410
another tab to show your completed jobs.

00:12:30.600 --> 00:12:36.220
It'll tell you the, you know,
the name of the job, how it finished,

00:12:36.310 --> 00:12:40.200
whether it be finished normally,
canceled, or an error.

00:12:40.710 --> 00:12:42.490
And it'll tell you when it completed.

00:12:42.500 --> 00:12:45.720
As you can so tell,
I was doing this final

00:12:45.960 --> 00:12:48.740
preparation of this demo a
little bit early this morning.

00:12:50.500 --> 00:12:58.900
Another thing that we have heard from
you and other users is they want to,

00:12:58.900 --> 00:13:02.240
a held job,
you want to resume on a certain page.

00:13:02.370 --> 00:13:03.470
So we've added that.

00:13:03.480 --> 00:13:07.410
If you go to the jobs menu,
you can go to resume on page,

00:13:07.420 --> 00:13:11.070
and you can enter any
page number that you want.

00:13:11.440 --> 00:13:14.720
The printer isn't really here,
so I'm just going to go

00:13:14.720 --> 00:13:15.480
ahead and stop the job.

00:13:16.310 --> 00:13:19.430
The other thing you can
do with that is you can,

00:13:19.430 --> 00:13:23.220
we've actually added another
toolbar widget for it.

00:13:23.220 --> 00:13:31.210
Resume on page.

00:13:31.230 --> 00:13:31.300
So there.

00:13:34.200 --> 00:13:42.300
[Transcript missing]

00:13:48.470 --> 00:13:52.520
Thanks Alan.

00:13:52.520 --> 00:13:54.990
So just a quick summary.

00:13:55.060 --> 00:13:59.020
Things that we've done so far in Tiger,
we've provided that integrated

00:13:59.060 --> 00:14:03.550
printer browser as you saw,
we've got or will have soon the fine

00:14:03.550 --> 00:14:08.110
control over which printers you share,
SNMP supports going in,

00:14:08.110 --> 00:14:11.290
scale to fit in the print dialogue,
improved functionality

00:14:11.290 --> 00:14:16.320
in the desktop printers,
and we're obviously working on more.

00:14:16.320 --> 00:14:20.020
The point I want to make here
is please test this stuff.

00:14:20.020 --> 00:14:22.310
You know, you've got the first --
your first build of Tiger,

00:14:22.320 --> 00:14:25.610
you'll be getting more, of course,
and whether you're writing

00:14:25.610 --> 00:14:29.560
applications or writing printer
drivers or printer utilities,

00:14:29.560 --> 00:14:33.460
whatever, I mean,
please start testing as soon as you can.

00:14:33.460 --> 00:14:37.210
Obviously the overall
quality of Tiger will depend

00:14:37.220 --> 00:14:39.530
a lot on your contributions.

00:14:40.590 --> 00:14:43.230
And I'm sure everybody
knows how to file bugs,

00:14:43.250 --> 00:14:45.030
so please feel welcome.

00:14:46.350 --> 00:14:48.000
I'll change gears a little bit now.

00:14:48.000 --> 00:14:50.270
We're going to talk about APIs.

00:14:50.270 --> 00:14:54.240
And for anybody writing applications,
this stuff is going to

00:14:54.240 --> 00:14:55.700
be relevant for you.

00:14:55.700 --> 00:14:58.400
One thing that you might have
noticed over the last few years,

00:14:58.400 --> 00:15:00.930
we've had some API creep
in the printing system.

00:15:01.000 --> 00:15:05.440
We've got these two header files,
PMApplication and PMCore to provide

00:15:05.590 --> 00:15:08.180
most of the low-level APIs for printing.

00:15:08.180 --> 00:15:13.540
Most of those APIs are used internally
by the various CocoaPrint methods.

00:15:13.790 --> 00:15:19.390
And as you can see,
we're up over 200 APIs by

00:15:19.390 --> 00:15:23.650
obviously incrementally
improving the printing system.

00:15:23.650 --> 00:15:28.640
We added things like PMPrinter APIs,
the PMWorkflow APIs, et cetera,

00:15:28.640 --> 00:15:31.180
over the last few releases.

00:15:31.180 --> 00:15:34.460
We thought that we were a
little too heavy on APIs,

00:15:34.470 --> 00:15:39.000
so what we've done for Tygo is
we've deprecated 80 of them.

00:15:39.010 --> 00:15:42.020
So if you are using any of the old ones,
you can use the old ones.

00:15:42.020 --> 00:15:42.120
If you're using the old ones,
you can use the old ones.

00:15:42.120 --> 00:15:48.290
If you're using the old non-session APIs,
the legacy laser iterate printing APIs,

00:15:48.310 --> 00:15:52.810
any of the APIs that we're
trying to write things out to

00:15:52.920 --> 00:15:57.930
do with the old print record,
you will get, when you try to compile

00:15:58.280 --> 00:16:01.860
your code on Tygo,
you'll get a very polite warning

00:16:01.860 --> 00:16:03.710
that you're using a deprecated API.

00:16:03.840 --> 00:16:06.100
So that's your signal to
go into the header file.

00:16:06.100 --> 00:16:08.700
And as you can see
from a comment up here,

00:16:08.700 --> 00:16:12.990
we'll tell you for every single
one of those 80 which one or

00:16:12.990 --> 00:16:15.510
ones you should be using instead.

00:16:15.710 --> 00:16:18.140
Deprecated doesn't mean
your code will crash.

00:16:18.200 --> 00:16:21.000
It just means that you'll get
a warning at compile time and a

00:16:21.000 --> 00:16:26.100
strong encouragement from Apple to
move on to the recommended APIs.

00:16:26.100 --> 00:16:31.000
So please stop updating your
application printing code as soon as

00:16:31.000 --> 00:16:33.080
you can and follow those guidelines.

00:16:36.260 --> 00:16:41.840
And then I want to take a few minutes
to talk about the APIs that I hope most

00:16:41.940 --> 00:16:47.200
of you are using directly or indirectly,
indirectly if you're using Cocoa,

00:16:47.200 --> 00:16:48.960
to print.

00:16:48.960 --> 00:16:52.930
And we're going to start by
looking at a bunch of APIs that are

00:16:53.650 --> 00:16:57.780
usually worth calling before you
actually invoke the print dialog.

00:16:57.940 --> 00:17:03.650
So after the print menu is being clicked,
these are some of the APIs you should

00:17:03.650 --> 00:17:06.200
be using and we'll explain why.

00:17:07.160 --> 00:17:12.140
One of the things we recommend is that
every time you hit the Print menu,

00:17:12.220 --> 00:17:15.750
you start a new print session,
and you should create new print

00:17:15.750 --> 00:17:17.700
settings and default them.

00:17:17.700 --> 00:17:21.800
And the reason for that is that the user,
every time you go to print a document,

00:17:21.800 --> 00:17:26.380
starts off with the default sensible set
of values for the various print settings.

00:17:26.380 --> 00:17:29.730
And shown here is,
if you call default print settings,

00:17:29.810 --> 00:17:34.300
obviously you reset copies back to one,
the page range, et cetera.

00:17:34.880 --> 00:17:38.920
And better that than reusing
the print settings object and

00:17:38.930 --> 00:17:43.990
inheriting your last settings from
the last print job to the next one.

00:17:44.000 --> 00:17:46.420
Users can get confused or
annoyed when that happens.

00:17:46.420 --> 00:17:48.920
So try to use that call.

00:17:48.920 --> 00:17:52.950
Another one to call, if you're printing
multiple page documents,

00:17:53.060 --> 00:17:54.630
is to set the page range.

00:17:54.640 --> 00:17:58.620
That explicitly tells our
copies and pages print panel

00:17:58.620 --> 00:18:00.870
what the valid page range is.

00:18:00.940 --> 00:18:04.280
It stops the user typing in, you know,
print to page 99.

00:18:04.280 --> 00:18:05.860
If you've only got a 10-page document.

00:18:05.860 --> 00:18:08.440
So pretty obvious why
you should use that.

00:18:10.810 --> 00:18:12.900
Enable printer presets.

00:18:12.900 --> 00:18:16.280
Not for everybody,
but if your application prints images,

00:18:16.310 --> 00:18:23.140
it's a good idea to enable the driver
installed presets for the printer.

00:18:23.350 --> 00:18:27.240
Presets, if you're not familiar with the
ones that are bundled with drivers,

00:18:27.240 --> 00:18:32.270
are recommended combinations of things
like paper types and resolution settings.

00:18:32.390 --> 00:18:38.260
And users will be better off using
the ones defined by the printer

00:18:38.260 --> 00:18:41.290
manufacturer than going into the
various panels and selecting ones

00:18:41.290 --> 00:18:42.700
that they think are appropriate.

00:18:42.710 --> 00:18:47.540
This is a convenient way of picking ones
that will yield good results on paper.

00:18:47.640 --> 00:18:52.640
So you can do this by calling,
if you're a Carbon app,

00:18:52.640 --> 00:18:54.300
enable printer presets.

00:18:54.370 --> 00:18:57.300
There's an API to disable
them if you need to.

00:18:57.430 --> 00:18:58.840
Cocoa apps can do this.

00:18:58.840 --> 00:19:02.800
There's a step job style hint
that you can apply to the

00:19:02.800 --> 00:19:04.860
NS Print Panel to do the same thing.

00:19:05.040 --> 00:19:09.770
So if you're printing images,
enable driver presets.

00:19:10.100 --> 00:19:14.000
Setting the job name is
another good thing to do.

00:19:14.000 --> 00:19:16.190
And a sprint operation does
this for you automatically,

00:19:16.190 --> 00:19:18.760
so you don't have to worry
about it if you're a Cocoa app.

00:19:18.760 --> 00:19:22.850
Well, of course, you need to have a
meaningful window title.

00:19:23.280 --> 00:19:25.640
CarbonApp should call this API.

00:19:25.640 --> 00:19:29.830
This is actually a new API in Tiger,
but there's an equivalent

00:19:29.980 --> 00:19:32.540
API for Panther and Jaguar.

00:19:32.540 --> 00:19:37.320
It's PM Print Session
Set Job Name CFString.

00:19:37.350 --> 00:19:39.300
So there's an API to do that.

00:19:39.300 --> 00:19:41.390
Basically,
anything's better than seeing "untitled"

00:19:41.390 --> 00:19:44.970
in that list of printers that you see
either in the desktop printer list

00:19:44.970 --> 00:19:51.110
or on the CUPS web page or in -- or,
for example, when you print a disk,

00:19:51.110 --> 00:19:56.220
you want to be primed with
a reasonable file name.

00:19:56.220 --> 00:19:59.250
And the other thing is this
screenshot here shows if you're

00:19:59.360 --> 00:20:02.520
looking at a print server,
it's useful to see what's being printed.

00:20:02.520 --> 00:20:06.630
And So try to call that API.

00:20:07.060 --> 00:20:09.580
Another one that we've been
talking about for years,

00:20:09.590 --> 00:20:11.990
if you're a Carbon app,
you need to be doing this,

00:20:11.990 --> 00:20:15.100
or you should be doing this if
you can display multiple windows.

00:20:15.160 --> 00:20:18.240
Use the display your
print dialogs as a sheet.

00:20:18.530 --> 00:20:23.890
Everybody knows then which
window they're actually printing.

00:20:25.540 --> 00:20:26.450
This is the easy one.

00:20:26.530 --> 00:20:28.210
I don't really have to
say anything about this.

00:20:28.400 --> 00:20:30.560
Bring up the print dialogue,
having done all that preparation work.

00:20:33.300 --> 00:20:34.840
After the print dialog
is being dismissed,

00:20:34.950 --> 00:20:38.000
there's a few APIs you
might want to be calling.

00:20:38.000 --> 00:20:40.800
If your application has a panel
or panels to the print dialog,

00:20:40.800 --> 00:20:45.430
you probably want to get the settings
that the user selected in order to

00:20:45.550 --> 00:20:50.000
control the way you draw the content
when you get into the print loop.

00:20:50.130 --> 00:20:52.270
So this is the API you can use for that.

00:20:52.390 --> 00:20:54.010
And there's sample code explaining that.

00:20:54.060 --> 00:20:58.050
But we've added a new API in Tiger.

00:20:58.480 --> 00:21:02.160
This is the one
PM Print Settings get value.

00:21:02.230 --> 00:21:05.450
This enables you as an application
to get any print settings value.

00:21:05.460 --> 00:21:11.110
So don't abuse this,
but you can see what the driver's

00:21:11.110 --> 00:21:12.620
PDEs have added to the print settings.

00:21:12.620 --> 00:21:15.640
You probably don't want to be
altering the way you draw your

00:21:15.640 --> 00:21:18.570
document according to that,
but you can get any setting out

00:21:18.570 --> 00:21:21.640
of the print settings object after
the print dialog's been dismissed.

00:21:21.660 --> 00:21:21.660
After the print dialog
is being dismissed,

00:21:21.660 --> 00:21:21.660
there's a few APIs you
might want to be calling.

00:21:21.660 --> 00:21:21.660
If your application has a panel
or panels to the print loop,

00:21:21.660 --> 00:21:21.660
you probably want to get the settings
that the user selected in order to

00:21:21.660 --> 00:21:21.660
control the way you draw the content
when you get into the print loop.

00:21:21.660 --> 00:21:21.660
So this is the API you
might want to be calling.

00:21:21.660 --> 00:21:21.660
If your application has a panel
or panels to the print loop,

00:21:21.660 --> 00:21:21.660
you probably want to get any setting
out of the print settings object after

00:21:21.660 --> 00:21:21.660
the print dialog's been dismissed.

00:21:23.900 --> 00:21:27.510
After the print dialog's been dismissed,
there's a few APIs you

00:21:27.610 --> 00:21:29.170
might want to be calling.

00:21:29.270 --> 00:21:32.800
If your application has a panel
or panels to the print loop,

00:21:32.800 --> 00:21:37.070
you probably want to get the settings
that the user selected in order to

00:21:37.070 --> 00:21:41.610
control the way you draw the content
when you get into the print loop.

00:21:41.610 --> 00:21:41.610
So this is the API you
might want to be calling.

00:21:41.610 --> 00:21:41.610
If your application has a panel
or panels to the print loop,

00:21:41.610 --> 00:21:41.610
you probably want to get the settings
that the user selected in order to

00:21:41.610 --> 00:21:41.610
control the way you draw the content
when you get into the print loop.

00:21:44.940 --> 00:21:48.060
So now to the print loop.

00:21:48.120 --> 00:21:51.820
I'm sure everybody heard this week
that Quickdraw is being deprecated.

00:21:51.890 --> 00:21:55.950
And I think there's a session
tomorrow on moving to Quartz 2D.

00:21:56.060 --> 00:22:00.190
So if you haven't already heard
all the good stuff about Quartz 2D,

00:22:00.350 --> 00:22:02.200
please go to that session.

00:22:02.200 --> 00:22:02.200
I think it's --

00:22:02.540 --> 00:22:03.420
Somebody will have to remind me.

00:22:03.510 --> 00:22:04.500
Tomorrow afternoon.

00:22:04.500 --> 00:22:05.760
Two o'clock.

00:22:05.930 --> 00:22:08.010
Thank you.

00:22:08.600 --> 00:22:12.510
So this is the old print loop,
drawing everything with Quick Draw.

00:22:12.630 --> 00:22:17.560
That will still work,
but obviously we want you to move on.

00:22:17.560 --> 00:22:20.250
Maybe by now you've already started
to take advantage of Quartz 2D,

00:22:20.330 --> 00:22:24.350
and for a while now we've had these
APIs enabling you to draw some content

00:22:24.360 --> 00:22:29.010
on your pages in a core graphics context,
and the Begin and CG Context

00:22:29.010 --> 00:22:31.830
APIs enable you to do that,
effectively to mix

00:22:31.900 --> 00:22:35.430
Quick Draw and Core Graphics,
and remember the coordinate

00:22:35.450 --> 00:22:37.340
spaces are different.

00:22:37.450 --> 00:22:40.770
So that was something that
hopefully you've been doing.

00:22:40.770 --> 00:22:45.010
But there's an even better way
in Tiger to explicitly tell the

00:22:45.010 --> 00:22:49.810
printing system you're going to
exclusively use Core Graphics calls

00:22:49.810 --> 00:22:52.720
to draw everything on the page.

00:22:52.720 --> 00:22:59.710
And this API begins CG, document,
tells the printing system, you know,

00:22:59.830 --> 00:23:00.120
you've got to do this.

00:23:00.120 --> 00:23:03.160
And you've moved to Quartz 2D.

00:23:03.230 --> 00:23:07.000
You can do the same thing
on Panther or Jaguar,

00:23:07.000 --> 00:23:09.050
but not with this API because
it wasn't available then,

00:23:09.100 --> 00:23:12.290
but you can still set up a Core Graphics
Context and draw everything in.

00:23:12.290 --> 00:23:14.550
But with Tiger,
there's just a more convenient

00:23:14.550 --> 00:23:17.570
way to do that with this new API.

00:23:19.050 --> 00:23:22.380
And talking about that,
I have to plug our

00:23:22.380 --> 00:23:24.860
unified PDF imaging model.

00:23:24.930 --> 00:23:27.080
This is a slide lifted from last year.

00:23:27.110 --> 00:23:28.450
I'm not going to go
into a lot of details,

00:23:28.520 --> 00:23:30.860
but I'm sure everybody knows
by now that if you use the

00:23:30.860 --> 00:23:33.850
recommended PDF print path,
you get a lot of benefits.

00:23:33.910 --> 00:23:37.750
Print preview, you get to take advantage
of the PDF workflow,

00:23:37.810 --> 00:23:40.560
and all the other things mentioned here.

00:23:40.560 --> 00:23:44.300
If, for whatever reasons,
you are obliged to

00:23:44.300 --> 00:23:48.900
generate PostScript code,
then our recommendation,

00:23:48.920 --> 00:23:51.370
this is the same recommendation
we had last year,

00:23:51.460 --> 00:23:53.280
is to use the job submission APIs.

00:23:53.280 --> 00:23:57.290
So don't use the printing system
to generate a PostScript print job.

00:23:57.290 --> 00:23:59.960
Generate the PostScript print
job yourself,

00:24:00.060 --> 00:24:03.280
and then use the job submission
APIs to send that PostScript job

00:24:03.550 --> 00:24:04.840
directly to the print queue.

00:24:04.840 --> 00:24:10.430
I'm mentioning here on the bottom
bullet item two new APIs that may remove

00:24:10.780 --> 00:24:15.700
one of the excuses you had for using
the legacy laser iterate print path.

00:24:15.700 --> 00:24:19.240
You can now use these APIs to generate
your PostScript font data and put them

00:24:19.440 --> 00:24:23.660
into your PostScript file that you will
submit with the job submission APIs.

00:24:27.200 --> 00:24:31.790
I should mention that not all
applications choose to use the

00:24:31.940 --> 00:24:33.760
print dialog when you go to print.

00:24:33.800 --> 00:24:35.920
Some applications have their own UI.

00:24:35.920 --> 00:24:39.540
Some applications or
tools don't need a UI,

00:24:39.540 --> 00:24:42.480
and they certainly don't want to
see the spooling dialog displayed.

00:24:42.480 --> 00:24:47.520
So there's the so-called no-dialog
variance of the PrintLoop APIs.

00:24:47.520 --> 00:24:49.720
And you can see them here.

00:24:49.720 --> 00:24:50.770
That's the old way.

00:24:52.200 --> 00:24:54.800
Of course,
now that you're moving to Course2D,

00:24:54.800 --> 00:24:59.210
there's a corresponding
API to the beginCG document.

00:24:59.220 --> 00:25:03.580
There's a CG document no-dialog,
which will tell the printing system,

00:25:03.580 --> 00:25:05.770
I'm going through the PrintLoop,
but I don't want to see

00:25:05.770 --> 00:25:06.870
the spooling dialog.

00:25:06.880 --> 00:25:12.700
But, and this is no different
from last year with Panther,

00:25:12.700 --> 00:25:14.780
there's a better way of
doing that kind of thing,

00:25:14.780 --> 00:25:16.200
and that's the job submission API.

00:25:16.200 --> 00:25:18.360
It's very simple to do.

00:25:18.360 --> 00:25:20.300
Our desktop printer code does it.

00:25:20.390 --> 00:25:22.180
If you drop a file
onto a desktop printer,

00:25:22.200 --> 00:25:23.610
We...

00:25:23.610 --> 00:25:25.660
We check the printing system.

00:25:25.670 --> 00:25:31.890
We ask it, does the printer queue accept
a file of this MIME type?

00:25:32.090 --> 00:25:37.060
If we get back an answer that
says this MIME type supported,

00:25:37.210 --> 00:25:38.780
we submit the job.

00:25:38.840 --> 00:25:45.280
And to show you how good that is,
I ran a few tests on just my

00:25:45.280 --> 00:25:50.300
humble old PowerBook back in my
office with a variety of documents.

00:25:50.440 --> 00:25:54.130
And as you can see, any document I print,
if the file's already on disk,

00:25:54.130 --> 00:25:57.740
I can print it in a couple of
seconds with the job submission API.

00:25:57.860 --> 00:26:00.940
So you should be thinking about
using this if your application has

00:26:00.950 --> 00:26:06.350
the ability to generate its own
printer-compatible file format,

00:26:06.360 --> 00:26:10.650
PDF, PostScript, TIFF, GIF, et cetera.

00:26:10.680 --> 00:26:13.250
So strongly encourage
you to explore that.

00:26:13.260 --> 00:26:16.050
And as you can see here,
you can get huge performance

00:26:16.060 --> 00:26:18.740
benefits if you take that approach.

00:26:21.050 --> 00:26:25.120
So at this point,
I'm going to hand over to-- oh, no.

00:26:25.120 --> 00:26:26.540
I'm going to summarize these slides.

00:26:26.650 --> 00:26:30.120
And then I'm going to hand over to Alan.

00:26:30.120 --> 00:26:31.520
Deprecated.

00:26:31.520 --> 00:26:33.900
We've deprecated about 80 APIs.

00:26:33.900 --> 00:26:36.980
Watch for those when
you compile your code.

00:26:36.980 --> 00:26:39.690
Use those recommended APIs before
you bring out the print dialog

00:26:39.700 --> 00:26:43.720
so that everything works
smoothly in the print dialog.

00:26:43.720 --> 00:26:45.560
Move away from Quick Draw.

00:26:45.560 --> 00:26:47.560
We've got APIs to help you do that.

00:26:47.560 --> 00:26:50.860
And last but not least,
the job submission APIs.

00:26:50.860 --> 00:26:54.080
great way of speeding up
printing from your application.

00:26:55.070 --> 00:26:58.710
And now for something new:
Cocoa Print Panels.

00:26:58.710 --> 00:27:00.330
And here's Alan.

00:27:06.970 --> 00:27:12.150
At Panthership last year,
we were sitting around saying, "Okay,

00:27:12.470 --> 00:27:16.460
what part of the printing system has been
rewritten in the past two and a half,

00:27:16.610 --> 00:27:17.450
three years?"

00:27:17.900 --> 00:27:21.280
And, oh, the print dialog code
hasn't been rewritten yet.

00:27:21.740 --> 00:27:26.850
So basically what we've been working
on is rewriting the print dialog

00:27:26.850 --> 00:27:36.450
code and page setup dialog code to
enable the inclusion of Cocoa PDEs.

00:27:36.970 --> 00:27:41.360
So what I'm going to do is I'm
going to build a simple PDE,

00:27:41.380 --> 00:27:45.280
Cocoa PDE, that

00:27:45.420 --> 00:27:52.590
Basically, this is the old code that's on
your developer examples printing.

00:27:53.130 --> 00:27:56.600
Now basically, if we go through here,
we kind of see what we're doing.

00:27:56.600 --> 00:27:59.400
A lot of comments.

00:27:59.400 --> 00:28:04.590
And then we get to here, we have, oh,
we have to define how big we are.

00:28:04.630 --> 00:28:08.620
Define is the,
let's see what else we have.

00:28:08.620 --> 00:28:12.900
Oh, we have this whole IOWN known stuff,
IOWN known instance.

00:28:13.030 --> 00:28:16.700
And really, that's kind of hard to
figure out sometimes.

00:28:16.700 --> 00:28:18.620
We have this contact stuff.

00:28:18.620 --> 00:28:20.550
We have, we have our prologue.

00:28:20.550 --> 00:28:24.400
This is, and we get into actually
coding some of this stuff.

00:28:24.410 --> 00:28:25.610
IOWN known, ADREF.

00:28:25.610 --> 00:28:32.860
Not much having to do with printing
when you're writing a Tioga-based PDE.

00:28:32.860 --> 00:28:38.360
So what we have done is we have allowed
you to greatly simplify writing a PDE.

00:28:38.620 --> 00:28:43.620
So what I'm going to do is I'm
just going to take that old PDF.

00:28:44.440 --> 00:28:47.660
I'm going to show you how
to use App SDK sample code.

00:28:47.690 --> 00:28:51.640
And I am going to-- first thing
I'm going to do is add in a target.

00:28:52.260 --> 00:28:54.830
And I am going to--

00:28:56.170 --> 00:28:59.260
Add a Cocoa loadable bundle.

00:28:59.260 --> 00:29:07.290
I'm going to name it "sampleapppde"
and add it to this project.

00:29:09.660 --> 00:29:12.990
Okay, first thing I want to do
is set the properties.

00:29:13.060 --> 00:29:17.720
And being as we are a Cocoa class,
I'm going to name it to be an NS...

00:29:18.060 --> 00:29:35.590
Principal Class.

00:29:35.590 --> 00:29:35.590
And what else do I need to do?

00:29:35.590 --> 00:29:35.590
Go to the build and we need to add our,
this is my kind of cheat file right here,

00:29:35.590 --> 00:29:35.590
add our framework search paths.

00:29:36.410 --> 00:29:41.710
Print framework and our... I'm
just going to add that into here.

00:29:44.200 --> 00:29:50.900
[Transcript missing]

00:29:51.050 --> 00:29:52.920
Now this is the fun part.

00:29:53.060 --> 00:29:55.300
I'm going to go to Interface Builder.

00:29:55.610 --> 00:29:59.700
I'm going to select an empty Cocoa nib.

00:30:01.390 --> 00:30:05.640
Let's see, what's next?

00:30:05.640 --> 00:30:09.170
Let's go ahead and save this as...

00:30:13.110 --> 00:30:16.180
Sample app PDE.

00:30:16.180 --> 00:30:22.490
I'm going to add it to
the sample app PDE target.

00:30:22.490 --> 00:30:23.400
Okay.

00:30:25.150 --> 00:30:28.980
Now I'm going to, let's do this,
get the subclass right.

00:30:29.090 --> 00:30:31.500
Let's take an NSObject.

00:30:31.530 --> 00:30:32.700
Where did NSObject go?

00:30:32.700 --> 00:30:34.090
Okay, there it is.

00:30:34.140 --> 00:30:42.760
And we're going to subclass
this into BA sample app PDE.

00:30:43.420 --> 00:30:50.100
And then go back to here, files owner,
and custom class, go down here,

00:30:50.100 --> 00:30:51.840
sample app PDE.

00:30:51.840 --> 00:30:53.110
Okay.

00:30:53.350 --> 00:30:54.280
Now's the fun part.

00:30:54.280 --> 00:30:57.560
Let's go up here,
let's just grab the view there,

00:30:57.650 --> 00:31:00.920
just a NS view.

00:31:00.920 --> 00:31:04.770
Let's make it a little bit bigger.

00:31:04.790 --> 00:31:08.290
Let's add a checkbox.

00:31:16.300 --> 00:31:17.280
Text only.

00:31:17.280 --> 00:31:20.300
There we go.

00:31:20.300 --> 00:31:21.800
Okay.

00:31:21.800 --> 00:31:24.700
Now let's go back over here, I guess.

00:31:24.700 --> 00:31:28.450
Now we need to add,
let's get our connections in there.

00:31:30.610 --> 00:31:31.580
Some glass.

00:31:31.610 --> 00:31:34.360
Let's go to connections.

00:31:34.360 --> 00:31:37.310
Let's add some outlets.

00:31:54.800 --> 00:32:04.900
[Transcript missing]

00:32:07.000 --> 00:32:17.500
[Transcript missing]

00:32:19.550 --> 00:32:22.260
Let's add another one,
which would be our button.

00:32:22.260 --> 00:32:34.500
Print selection button,
which is a button.

00:32:34.670 --> 00:32:43.490
Okay, now let's just go ahead
and connect these up.

00:32:43.490 --> 00:32:43.490
That's the app.

00:32:46.110 --> 00:32:47.380
The button.

00:32:47.610 --> 00:32:49.010
Okay, so everything's connected up.

00:32:49.100 --> 00:32:51.990
Everything's basically, the nib's done.

00:32:52.000 --> 00:32:58.000
Let's go ahead and select this and...

00:32:58.370 --> 00:32:59.240
Danblot PDE.

00:32:59.240 --> 00:33:01.150
Let's generate the classes.

00:33:01.150 --> 00:33:03.130
Let's create the files for it.

00:33:03.130 --> 00:33:05.490
That's right in the basic print loop.

00:33:05.490 --> 00:33:07.890
Okay, let's go ahead and create those.

00:33:10.200 --> 00:33:12.260
Okay, so they should be created
and they now should be,

00:33:12.340 --> 00:33:18.360
should have appeared over
here in our project builder.

00:33:18.480 --> 00:33:23.040
So now, where did they go?

00:33:23.200 --> 00:33:31.630
Save.

00:33:51.300 --> 00:33:56.480
I don't know where they actually went,
but either any way...

00:33:56.900 --> 00:34:02.010
Basic Print Loop.

00:34:02.010 --> 00:34:02.010
Here they are.

00:34:04.960 --> 00:34:10.280
Basically, this is... Here's our .h file.

00:34:10.280 --> 00:34:13.060
So basically,
what we want to do is... Let's go

00:34:13.060 --> 00:34:14.120
to my little cheat sheet over here.

00:34:14.120 --> 00:34:15.940
First thing I want to do
is you want an import.

00:34:15.940 --> 00:34:22.000
One thing we have provided you is a
callback object that the PDE can call

00:34:22.130 --> 00:34:25.620
back into to get information that
it needs about the printing system,

00:34:25.620 --> 00:34:28.690
like, say, your print session,
your print settings, your page format,

00:34:28.690 --> 00:34:30.180
your current printer.

00:34:30.180 --> 00:34:34.210
There are a number of things that
you can get back from the printing

00:34:34.210 --> 00:34:37.260
system while you're in your PDE,
so you don't have to remember it.

00:34:37.500 --> 00:34:39.960
You can just call it whenever
you need the information.

00:34:39.960 --> 00:34:42.470
The other thing we want to do is...

00:34:44.750 --> 00:34:48.600
The Cocoa PDEs are
implemented as a protocol.

00:34:48.840 --> 00:34:52.020
So basically what we want to do is,

00:34:52.400 --> 00:35:05.000
[Transcript missing]

00:35:06.580 --> 00:35:09.560
Okay,
now let's just go over to the .m file.

00:35:09.570 --> 00:35:12.110
And I will just,
basically I'm just going to copy stuff

00:35:12.110 --> 00:35:13.910
over that we need as we go through.

00:35:14.040 --> 00:35:16.160
So we're going to include our

00:35:22.060 --> 00:35:27.680
Basically, we're going to include our
interface for dialog extensions,

00:35:27.680 --> 00:35:30.190
get some of the keys
we need out of there.

00:35:30.530 --> 00:35:34.150
Okay, first thing we're going to do
is we have three static methods.

00:35:34.220 --> 00:35:36.260
One of them is initialized
class and terminate class.

00:35:36.530 --> 00:35:39.670
These are called when,

00:35:42.360 --> 00:35:45.300
When this bundle is going to
be loaded for the first time,

00:35:45.300 --> 00:35:48.800
you can return yes or no from
the initialized class if you

00:35:48.800 --> 00:35:50.080
fail on your initialized.

00:35:50.180 --> 00:35:52.200
We pass you the bundle just
for your reference so you

00:35:52.240 --> 00:35:53.370
can get it any other ways.

00:35:53.370 --> 00:35:56.570
In this case,
Terminate class is called once when the

00:35:56.570 --> 00:35:58.980
plugin is not going to be used anymore.

00:35:58.980 --> 00:35:59.620
We don't do anything.

00:35:59.620 --> 00:36:05.420
Next part is the
Get PDEs for Plugin Type.

00:36:05.420 --> 00:36:14.290
What this does is basically this is
where you instantiate your PDE classes.

00:36:16.290 --> 00:36:18.390
Basically,
we do a get plug-in for PDE type.

00:36:18.480 --> 00:36:22.140
We pass you the PDE type,
whether it be app for the

00:36:22.270 --> 00:36:23.400
print dialog or page setup.

00:36:23.400 --> 00:36:28.200
We also pass you in the current printer
that is selected in the print dialog.

00:36:28.200 --> 00:36:30.580
So basically, we allocate an array.

00:36:30.810 --> 00:36:33.350
We do an alloc init
on our sample app PDE,

00:36:33.350 --> 00:36:37.340
add it to the array, and basically,
if we got anything back,

00:36:37.350 --> 00:36:40.190
we return that array or we return nil.

00:36:40.880 --> 00:36:45.350
Next thing we do is we
initialize our class.

00:36:45.480 --> 00:36:49.940
And here, this is where we pass you
the callback mechanism,

00:36:49.990 --> 00:36:50.670
the callback object.

00:36:50.820 --> 00:36:53.550
We pass it in, you just retain it,
and you can use it

00:36:53.550 --> 00:36:55.130
throughout your other things.

00:36:55.140 --> 00:36:58.070
And then terminate is the same thing.

00:36:58.730 --> 00:37:01.090
We just, when we're done,
we're going to terminate the PDE.

00:37:01.090 --> 00:37:04.270
We're just going to basically
release your reference to that.

00:37:04.300 --> 00:37:10.810
One thing new about the Cocoa PDEs,
we only ask for your view when

00:37:10.810 --> 00:37:11.730
we're going to show your view.

00:37:11.740 --> 00:37:17.660
So there is no need to create your view,
you know, during initialize or open.

00:37:17.660 --> 00:37:20.980
We will tell you when,
we'll ask you for the view

00:37:20.980 --> 00:37:22.290
when we're ready for it.

00:37:22.380 --> 00:37:26.700
So basically here we are just,
we haven't initialized it yet,

00:37:26.850 --> 00:37:28.680
we just do a, we load our nib.

00:37:29.380 --> 00:37:32.360
Then we return the top view.

00:37:32.580 --> 00:37:38.120
Next thing is PDE name, PDE type,
and PDE kind.

00:37:38.120 --> 00:37:42.440
These are fairly similar to what
we had before in the Tioga stuff,

00:37:42.620 --> 00:37:45.940
but here it's like we
call you when we need it.

00:37:45.940 --> 00:37:49.900
You have to know it up front.

00:37:50.170 --> 00:37:52.880
And we just call it whenever you need it.

00:37:52.880 --> 00:37:55.930
And another change that we did was sync.

00:37:56.130 --> 00:37:58.440
Sync,
you had to remember where you're going,

00:37:58.440 --> 00:38:02.200
where you're reading from the ticket,
writing to the ticket, where am I at?

00:38:02.410 --> 00:38:04.080
So we actually separated
out these two calls,

00:38:04.080 --> 00:38:07.320
and now we have write values to ticket,
and read values to ticket.

00:38:07.320 --> 00:38:08.490
I'll do write values first.

00:38:08.710 --> 00:38:11.160
Basically here we just go
to write values to ticket,

00:38:11.190 --> 00:38:17.610
we get our button, we say it's state,
create an NSData for that,

00:38:17.660 --> 00:38:21.290
and here we are using our callback
methods to get the print settings.

00:38:21.470 --> 00:38:25.200
So we use the callback object,
get the print settings, we get it back,

00:38:25.210 --> 00:38:28.900
and we're using the API that
Paul just showed us,

00:38:28.900 --> 00:38:31.600
the PM Printing,
CM Print Settings Set Value,

00:38:31.600 --> 00:38:35.430
which basically sets the
app using your app key.

00:38:35.640 --> 00:38:41.580
And then read values from ticket is
basically just the opposite of that.

00:38:42.420 --> 00:38:44.210
The Mac OS X printing system
is the integration point

00:38:44.210 --> 00:38:45.230
for many key technologies.

00:38:45.230 --> 00:38:47.570
View this session to get the most
out of the Mac OS X printing system.

00:38:47.570 --> 00:39:12.510
Paul Danbold, Alan Beck,
Richard Blanchard The Mac OS X printing

00:39:12.510 --> 00:39:12.870
system is the integration point
for many key technologies.

00:39:12.870 --> 00:39:13.380
View this session to get the most
out of the Mac OS X printing system.

00:39:13.440 --> 00:39:22.910
Paul Danbold, Alan Beck,
Richard Blanchard

00:39:23.500 --> 00:39:24.680
Yeah.

00:39:24.730 --> 00:39:26.450
Basically print selection only, yes, no.

00:39:26.650 --> 00:39:30.340
We get to create the dict
with a summary and info.

00:39:30.520 --> 00:39:33.580
This is only one item,
so we're adding an array and

00:39:33.580 --> 00:39:38.210
we're adding the item to the
dict and returning that array.

00:39:38.370 --> 00:39:40.690
Show, hide,
is basically what it was before.

00:39:40.700 --> 00:39:43.890
We call this right before we're
going to show your PDE and hide,

00:39:43.900 --> 00:39:47.170
go hide right before we hide the PDE.

00:39:48.010 --> 00:39:53.680
Another thing we're doing,
so that's those two.

00:39:54.890 --> 00:39:57.480
And finally,
we have Git-supported PPD option keys,

00:39:57.650 --> 00:40:01.340
which is basically for the
PM printer module vendors.

00:40:01.390 --> 00:40:06.680
This is in a way of dynamically
telling us what PPD options

00:40:06.890 --> 00:40:10.080
you are supporting in your PDE,
so they won't show up

00:40:10.080 --> 00:40:14.830
in the other settings,
the advanced settings of PDE pane.

00:40:15.230 --> 00:40:19.630
Rather than a static in your static
in your info dict info p list,

00:40:19.650 --> 00:40:22.400
we can return the array right here.

00:40:22.970 --> 00:40:25.980
And the other one here,
the last one is PPD value change,

00:40:25.980 --> 00:40:30.060
something we're working on
that's not quite implemented yet,

00:40:30.060 --> 00:40:33.980
dealing with PPD value constraint,
constraint resolution.

00:40:34.220 --> 00:40:37.430
So basically,
we're not really quite ready to talk

00:40:37.430 --> 00:40:41.140
about this yet because we're still in
the process of figuring out exactly what,

00:40:41.140 --> 00:40:42.800
how we're going to deal with this.

00:40:42.800 --> 00:40:44.340
So let's go ahead and save this.

00:40:44.750 --> 00:40:51.450
Hopefully, I can build this.

00:40:53.400 --> 00:41:03.800
[Transcript missing]

00:41:18.250 --> 00:41:21.670
Okay, so basically,
I will go to the summary

00:41:21.760 --> 00:41:25.480
slide while that reboots,
and I will show you when that reboots,

00:41:25.590 --> 00:41:26.580
hopefully.

00:41:26.580 --> 00:41:29.520
Let's get the slides back on.

00:41:29.980 --> 00:41:33.750
This is a little summary of
what we need for Cocoa PDEs.

00:41:34.060 --> 00:41:36.260
Basically,
they're implemented as loadable bundles,

00:41:36.280 --> 00:41:41.520
so we don't have any of the
CFBundle stuff with the I unknown,

00:41:41.520 --> 00:41:44.340
all that other stuff.

00:41:44.380 --> 00:41:48.640
The other thing is your class must
conform to the PDE dialog protocol,

00:41:48.710 --> 00:41:50.630
plug-in protocol.

00:41:51.130 --> 00:41:55.160
We've added the PDE callback object,
which allows you to get information

00:41:55.160 --> 00:41:57.360
from the printing system,
such as your print session,

00:41:57.360 --> 00:42:00.000
your print settings, your page format,
your current printer.

00:42:00.340 --> 00:42:05.000
Also, in there at the end,
it lets you tell us to do certain things.

00:42:05.090 --> 00:42:09.500
The two current methods
are to resize the panel.

00:42:09.500 --> 00:42:12.380
You want to tell us how
high you want it to resize,

00:42:12.380 --> 00:42:15.470
you know,
what size you want the new panel to be.

00:42:15.650 --> 00:42:19.190
So you can do a disclosure widget,
and that way, we will,

00:42:19.220 --> 00:42:22.160
you can resize your view,
then we'll resize the print

00:42:22.160 --> 00:42:24.500
dialog to reflect that view.

00:42:24.500 --> 00:42:26.960
What I want to say is,
you can use the full

00:42:26.960 --> 00:42:30.850
Cocoa functionality inside your PDE,
such as the bindings.

00:42:31.000 --> 00:42:35.030
You can bind to a dictionary,
and then in your right

00:42:35.830 --> 00:42:38.820
settings to ticket,
you can basically use

00:42:38.820 --> 00:42:41.000
the bindings that way.

00:42:41.000 --> 00:42:44.000
And the other thing is,
this sample code that I just did,

00:42:44.000 --> 00:42:47.500
plus showing the resize,
is going to be available

00:42:47.500 --> 00:42:50.500
on the ADC Seeds Server.

00:42:50.850 --> 00:42:53.500
Are we back up yet?

00:42:53.720 --> 00:42:54.680
No, we are...

00:42:56.090 --> 00:43:02.710
Okay, I'll be back up in a little
bit using for Richard.

00:43:02.770 --> 00:43:04.660
and maybe I'll have time,
maybe we'll be back up by

00:43:04.660 --> 00:43:05.940
then so I can show it to him.

00:43:05.950 --> 00:43:06.970
So here's Richard.

00:43:07.040 --> 00:43:08.980
Richard Blaenchard: Thank you, Alan.

00:43:08.980 --> 00:43:11.360
Not just for the demo,
which Colonel Panic,

00:43:11.360 --> 00:43:14.200
that's pretty rare actually in printing,
but actually for all that work.

00:43:14.200 --> 00:43:17.220
And if anybody's written plug-ins
before for the print dialog,

00:43:17.350 --> 00:43:20.770
one of the first things you have to
fight your way through is the CF plug-in,

00:43:20.770 --> 00:43:22.990
I unknown stuff,
which I've done a couple times

00:43:23.000 --> 00:43:25.740
and it was well worth all the
effort Alan did on this just so

00:43:25.740 --> 00:43:27.280
I didn't have to do that again.

00:43:27.280 --> 00:43:29.570
So thank you very much, Alan.

00:43:32.000 --> 00:43:33.620
It probably helps you too, but we'll see.

00:43:33.620 --> 00:43:37.370
Last year, we spent an hour,
I spent an hour with you talking

00:43:37.370 --> 00:43:39.840
about the two different printing
paths we have in printing.

00:43:39.870 --> 00:43:42.520
We have our PDF printing path,
our preferred printing path,

00:43:42.530 --> 00:43:44.840
and we have our LaserEyedR8
legacy printing path.

00:43:44.900 --> 00:43:48.380
We spent that hour really talking about
all the benefits of the PDF printing

00:43:48.380 --> 00:43:50.610
path and doing a lot of begging,
asking you,

00:43:50.610 --> 00:43:54.540
"Please don't use the legacy printing
path." I'm here to beg a little bit more,

00:43:54.540 --> 00:43:57.030
no offense,
but in the last year we've come up

00:43:57.150 --> 00:44:01.340
with another reason why we really
want you to use the PDF printing path,

00:44:01.340 --> 00:44:04.540
and that's Automator, and it's Automator
tied into PDF Workflow.

00:44:04.540 --> 00:44:07.130
So we're going to do a couple demos,
and we're going to remind you, well,

00:44:07.210 --> 00:44:09.620
I think we're going to do a couple demos,
and we're going to remind

00:44:09.640 --> 00:44:11.960
you what was in PDF Workflow.

00:44:11.960 --> 00:44:14.330
So PDF Workflow is a
feature we added in 10.2.4.

00:44:14.450 --> 00:44:16.710
It's been around for a long time,
but it's always been hidden.

00:44:16.710 --> 00:44:19.730
You had to enable a special folder and
put these PDF Workflow items in that

00:44:19.730 --> 00:44:24.620
folder before the print dialog changed
to show you this new functionality.

00:44:24.620 --> 00:44:27.700
The important parts about PDF Workflow,
well, PDF Workflow were two.

00:44:27.880 --> 00:44:31.640
One, it allowed you to hook the
print system on the user side.

00:44:31.650 --> 00:44:34.310
Normally when you print,
we take the PDF spool file,

00:44:34.350 --> 00:44:37.090
we submit it via an IP connection
to the print server,

00:44:37.230 --> 00:44:40.110
and then the print job takes place
potentially on a different machine,

00:44:40.110 --> 00:44:43.900
but most certainly in a different
context and running as a different user.

00:44:43.900 --> 00:44:46.060
And so if you want to put --
make a back end or a filter

00:44:46.060 --> 00:44:48.680
that's going to present UI,
you have a lot of difficulties.

00:44:48.710 --> 00:44:52.030
You may be on a completely different
machine than the user submitted a job,

00:44:52.030 --> 00:44:54.070
bad,
or you just may be in a different context

00:44:54.070 --> 00:44:56.440
and not be running as the same user,
so you can't write to

00:44:56.550 --> 00:44:57.840
that user's folders.

00:44:57.880 --> 00:44:59.940
Or access their files.

00:44:59.940 --> 00:45:02.640
So PDF Workflow avoids those
problems by letting you do that

00:45:02.640 --> 00:45:06.440
all up front in the user's context,
running as the user's ID.

00:45:06.450 --> 00:45:07.840
So that was one about PDF Workflow.

00:45:07.840 --> 00:45:11.640
The other important part about
PDF Workflow is that we have

00:45:11.640 --> 00:45:13.860
this digital master concept.

00:45:13.860 --> 00:45:16.800
We ask all our applications
when they print to please

00:45:16.930 --> 00:45:18.680
render in the full fidelity.

00:45:18.680 --> 00:45:20.490
Give us your high resolution bitmaps.

00:45:20.650 --> 00:45:22.260
Give us as many vectors as you can.

00:45:22.350 --> 00:45:24.620
Don't give us rasterized
images of your vectors.

00:45:24.620 --> 00:45:25.950
Give us the best fidelity you can.

00:45:25.950 --> 00:45:27.150
Give us the highest fidelity.

00:45:27.150 --> 00:45:29.940
And that's what we call digital master,
digital master PDF.

00:45:29.940 --> 00:45:32.310
We dutifully capture all of your drawing.

00:45:32.410 --> 00:45:34.930
With Workflow,
you can then write a tool to

00:45:34.940 --> 00:45:38.600
manipulate the full fidelity
digital master from the application.

00:45:38.690 --> 00:45:41.330
So that's the idea behind digital
-- or behind PDF Workflow.

00:45:41.470 --> 00:45:42.400
It's been there for a while.

00:45:42.480 --> 00:45:43.250
We have it documented.

00:45:43.250 --> 00:45:45.180
You should go look at it if
you've never looked at it.

00:45:45.180 --> 00:45:46.750
It's pretty exciting.

00:45:46.760 --> 00:45:49.420
It's enabled always now in Tiger,
and this is a big deal.

00:45:49.420 --> 00:45:52.410
It's always been a great feature,
but you had to know the secret.

00:45:52.420 --> 00:45:53.860
So now it's always there.

00:45:53.860 --> 00:45:56.830
And as Alan showed previously,
it comes defaulting this way on your CD.

00:45:56.840 --> 00:45:56.840
So you can see that it's always there.

00:45:56.840 --> 00:46:00.290
And then you can see it on your CDs with
Save As PDF and Save As PostScript.

00:46:00.370 --> 00:46:03.690
But as you add your own Workflow items,
this pop-up menu will grow.

00:46:03.690 --> 00:46:06.870
And if you're somebody like me
who's written a few of these,

00:46:06.870 --> 00:46:08.240
it can grow quite a bit.

00:46:08.290 --> 00:46:11.120
And you just start making
things that are useful.

00:46:11.120 --> 00:46:14.760
You'll see applications drawn in there,
so I can send my PDF documents

00:46:14.840 --> 00:46:17.550
over into things like Illustrator,
which is great at handling PDFs,

00:46:17.580 --> 00:46:19.580
obviously,
sending it to Acrobat or sending

00:46:19.650 --> 00:46:22.540
it to tools that'll break down PDF,
rasterize the PDFs,

00:46:22.640 --> 00:46:25.880
anything you really imagine
you can do with Workflow.

00:46:27.070 --> 00:46:28.540
So what kind of things
can you put in workflow?

00:46:28.540 --> 00:46:31.190
And again,
this is the type of list that we've

00:46:31.200 --> 00:46:33.320
supported since really 10.2.4.

00:46:33.350 --> 00:46:36.460
You can put a folder into
the PDF services folder,

00:46:36.480 --> 00:46:37.480
into the workflow folder.

00:46:37.520 --> 00:46:41.310
If you put a folder in there,
that creates a hierarchical menu

00:46:41.310 --> 00:46:42.910
in your PDF workflow pop-up.

00:46:42.910 --> 00:46:45.360
So this allows you to
organize your workflow items.

00:46:45.650 --> 00:46:47.030
You can put a folder alias in there.

00:46:47.030 --> 00:46:50.330
A folder alias, when selected from that
printer pop-up menu,

00:46:50.520 --> 00:46:53.480
will take the PDF spool file
and just move it into the

00:46:53.480 --> 00:46:55.600
resolved alias of this folder.

00:46:55.600 --> 00:46:57.480
So I use this a lot for web receipts.

00:46:57.650 --> 00:46:59.700
This is an example I just happen to like.

00:46:59.760 --> 00:47:03.300
I make an alias of a web receipts
folder I make in my documents folder.

00:47:03.300 --> 00:47:04.710
I put it in PDF services.

00:47:04.830 --> 00:47:07.760
And now whenever I buy anything online,
I go to my workflow menu

00:47:07.950 --> 00:47:09.100
and I say web receipts.

00:47:09.230 --> 00:47:11.440
And it just makes a copy of my receipt,
stores it there.

00:47:11.440 --> 00:47:13.240
And now with Spotlight,
it's easy to search.

00:47:13.300 --> 00:47:15.030
So the whole thing works
pretty well together.

00:47:15.160 --> 00:47:18.600
Also, hot folders for applications
like Distiller are good this way.

00:47:18.600 --> 00:47:21.510
You can make aliases of applications,
put them in there.

00:47:21.610 --> 00:47:23.410
When that's selected,
we send an open event to the

00:47:23.410 --> 00:47:25.090
application with the PDF spool file.

00:47:25.090 --> 00:47:29.020
So you can use Mail or
Photoshop's one I use a lot.

00:47:29.030 --> 00:47:29.960
You can use Apple scripts.

00:47:29.960 --> 00:47:31.320
And you can write your own tools.

00:47:31.330 --> 00:47:33.800
And the tools can be written in
either C or Objective C or Perl

00:47:33.840 --> 00:47:35.270
or Python or anything you want.

00:47:37.500 --> 00:47:40.320
But what's new now in Tiger is Automator.

00:47:40.580 --> 00:47:43.500
So we allow you to create
an Automator pipeline,

00:47:43.500 --> 00:47:45.460
an Automator set of actions,
an Automator script.

00:47:45.570 --> 00:47:47.100
The terminology is varying.

00:47:47.100 --> 00:47:50.040
Put that in your PDF service folder.

00:47:50.040 --> 00:47:51.700
Now users can make their own workflow.

00:47:51.700 --> 00:47:54.360
And this is incredibly powerful,
and it's very exciting.

00:47:54.360 --> 00:47:55.720
I've been doing a lot of work on this.

00:47:55.720 --> 00:47:59.120
For example, one of the ones you see a
lot with PDF workflow is,

00:47:59.120 --> 00:48:02.250
hey, I want to take this PDF out of
whatever application is printing,

00:48:02.250 --> 00:48:04.000
grab the PDF, and mail it to somebody.

00:48:04.000 --> 00:48:06.440
And there are a lot of
different ways to do this.

00:48:06.560 --> 00:48:08.580
You can take an alias, a mail,
and drop it in there.

00:48:08.580 --> 00:48:11.840
And then what you get when you select
that is a new document comes up in mail,

00:48:11.840 --> 00:48:12.740
a new mail message.

00:48:12.760 --> 00:48:15.740
But it's not, it doesn't have a person
you're sending to.

00:48:15.920 --> 00:48:17.630
It doesn't have a destination.

00:48:17.650 --> 00:48:23.060
So here's an example of an Automator
script where you can set it up and say,

00:48:23.060 --> 00:48:24.910
hey, whenever this gets selected,
I always want to send it

00:48:24.970 --> 00:48:25.920
to this particular person.

00:48:25.920 --> 00:48:28.860
Here's the text I want, and add the PDF.

00:48:28.860 --> 00:48:32.550
And assuming that we're back up,
we're going to go to demo one here.

00:48:32.560 --> 00:48:34.000
And I'm just going to
show you that quick.

00:48:34.000 --> 00:48:37.960
Automator workflow example,
because it is nice how easy it is to do.

00:48:37.960 --> 00:48:41.390
So if we go over into Automator.

00:48:44.330 --> 00:48:45.170
Oh, I'm sorry.

00:48:45.330 --> 00:48:46.290
Back to the previous demo.

00:48:46.300 --> 00:48:48.610
Back to my previous mishap.

00:48:48.760 --> 00:48:50.650
So this is a Cocoa PDE.

00:48:50.740 --> 00:48:52.180
It is a print-selected-text-only.

00:48:52.180 --> 00:48:53.170
It does work.

00:48:53.300 --> 00:48:58.580
And here's showing the callback
mechanism that allows the PDE to resize

00:48:59.490 --> 00:49:01.890
itself and do progressive disclosure.

00:49:02.200 --> 00:49:04.570
So it does work.

00:49:04.680 --> 00:49:07.060
OK, now back to Automator.

00:49:07.160 --> 00:49:09.260
So basically,
what we're going to do is we

00:49:09.260 --> 00:49:11.920
are going to-- let's go to Mail.

00:49:11.950 --> 00:49:14.180
Let's get the new email.

00:49:14.910 --> 00:49:21.170
Richard Blaenchard, Alan Beck,
Richard Blaenchard,

00:49:23.300 --> 00:49:26.090
Let's say, stuff.

00:49:26.100 --> 00:49:30.300
Please, let's review.

00:49:30.300 --> 00:49:35.010
Okay,
now I'm going to go ahead and save this.

00:49:36.260 --> 00:49:42.200
I'm going to put it in my PDF services
and I'm going to say email and we're

00:49:42.200 --> 00:49:44.200
going to save it as an application.

00:49:44.200 --> 00:49:47.650
So let's go ahead and save that.

00:49:49.550 --> 00:49:51.500
Now, okay.

00:49:51.500 --> 00:49:53.290
So now it is now in our PDF services.

00:49:53.400 --> 00:49:54.700
So let's go over here.

00:49:54.700 --> 00:49:59.540
Let's go to my documents
and let's go to...

00:50:01.430 --> 00:50:06.190
The various little league schedule
that Rich wanted to know about.

00:50:06.340 --> 00:50:06.980
So we're going to go to here.

00:50:06.980 --> 00:50:08.750
We're going to go ahead
and try to print it.

00:50:08.750 --> 00:50:14.090
And lo and behold, there's our email.

00:50:21.100 --> 00:50:24.570
And here is Winter Rich,
and here is our PDF document

00:50:24.600 --> 00:50:25.600
that is attached to it.

00:50:26.110 --> 00:50:26.600
All right.

00:50:27.060 --> 00:50:27.600
Very simple.

00:50:28.600 --> 00:50:28.600
All right.

00:50:29.290 --> 00:50:29.600
Thank you.

00:50:34.200 --> 00:50:36.960
So we'll come back on over to the slides,
please.

00:50:36.990 --> 00:50:39.540
And again, the idea is that's very
easy for a user to do,

00:50:39.540 --> 00:50:39.960
right?

00:50:40.050 --> 00:50:42.580
They've just made their
own workflow item.

00:50:44.550 --> 00:50:47.630
Because we're so PDF-centric,
we really want to provide

00:50:47.700 --> 00:50:52.640
a set of automator actions
that will manipulate PDFs.

00:50:52.770 --> 00:50:56.930
We want users and new developers
to be able to make powerful

00:50:57.630 --> 00:51:02.190
PDF manipulation automator tools,
provide them via workflow,

00:51:02.190 --> 00:51:05.220
so that workflow menu
becomes very powerful.

00:51:05.220 --> 00:51:08.650
So what we're doing,
or what we've done actually,

00:51:08.800 --> 00:51:12.730
is we've written PDF action
items to extract pages from PDFs,

00:51:12.740 --> 00:51:15.800
to join them, to watermark them,
and we'll be doing a bunch more.

00:51:15.800 --> 00:51:20.560
I expect we'll have probably a dozen or
two of these actions by default in the

00:51:20.560 --> 00:51:23.180
system in Tiger by the time we ship.

00:51:23.800 --> 00:51:25.860
I wanted to show next,
we'll go back to the demo machine,

00:51:25.860 --> 00:51:29.110
we'll see how these work together
inside of another automator.

00:51:29.290 --> 00:51:33.440
Basically, let's go ahead and see if
we can find our PDF items.

00:51:33.670 --> 00:51:34.400
Okay, here they are.

00:51:34.400 --> 00:51:36.000
We have three of them.

00:51:36.150 --> 00:51:39.790
So let's just go ahead
and first one will be to,

00:51:39.830 --> 00:51:42.200
let's get our Audit and Even pages.

00:51:42.200 --> 00:51:45.200
Let's go ahead and put
them in separate files.

00:51:45.260 --> 00:51:48.500
And then we're going to,
let's try to watermark them.

00:51:49.630 --> 00:51:53.340
So basically we're going to add,
what should we add?

00:51:53.340 --> 00:51:56.700
Let's add a blue and a green apple.

00:51:56.900 --> 00:52:02.570
Basically, so the goal here is to put a
blue apple on the odd pages and

00:52:02.570 --> 00:52:05.340
a green apple on the even pages.

00:52:05.340 --> 00:52:08.140
So let's go ahead and make
the apple a little bit bigger.

00:52:08.140 --> 00:52:11.260
Let's make it show it's underneath.

00:52:11.440 --> 00:52:17.210
And let's just turn it just a bit and
let's turn down the opacity of it.

00:52:18.200 --> 00:52:48.000
[Transcript missing]

00:52:51.100 --> 00:52:52.970
We want to go to the PDF services.

00:52:52.970 --> 00:52:57.170
Let's name this one, let's say,
Watermark.

00:52:58.700 --> 00:53:01.160
We want to save it as an application.

00:53:01.160 --> 00:53:04.070
Save.

00:53:04.960 --> 00:53:08.020
Okay, now let's go open,
let's look at all the schedules.

00:53:08.220 --> 00:53:10.660
So it has 39 pages in it.

00:53:10.660 --> 00:53:11.900
Let's go ahead and print this.

00:53:11.900 --> 00:53:17.890
Go to here, here's our watermark.

00:53:24.300 --> 00:53:25.300
Launching the pipeline.

00:53:25.300 --> 00:53:32.410
Okay, here's the first page
with the blue apple,

00:53:32.550 --> 00:53:39.210
green apple, blue apple, green apple,
all the way through to the end.

00:53:39.220 --> 00:53:42.090
Thank you, Alan.

00:53:47.360 --> 00:53:50.960
So what I like about that demo is
it's a non-trivial example of what you

00:53:50.960 --> 00:53:52.540
can do with Automator and Workflow.

00:53:52.540 --> 00:53:55.660
If somebody asked you to do that,
I want you to watermark this

00:53:55.660 --> 00:53:59.070
document and have different
watermarks on the odd and even pages.

00:53:59.320 --> 00:54:01.820
I know how you can maybe do it manually,
but if they wanted you to run

00:54:01.820 --> 00:54:05.340
through a set of documents,
I wouldn't know where to start.

00:54:05.340 --> 00:54:05.940
I guess I would.

00:54:05.940 --> 00:54:09.130
I'd probably go to Python scripting
and start writing some Python code,

00:54:09.130 --> 00:54:10.540
but maybe a user wouldn't.

00:54:10.540 --> 00:54:12.990
So if we can go back to the slides.

00:54:16.130 --> 00:54:17.840
All right,
so that's the power of Automator.

00:54:17.840 --> 00:54:20.110
That's the power of
PDF workflow put together.

00:54:20.210 --> 00:54:22.490
So the question is, well,
how can your applications take

00:54:22.490 --> 00:54:23.920
advantage of this integration?

00:54:24.080 --> 00:54:24.740
And it is simple.

00:54:24.870 --> 00:54:26.260
It's what we've always told you.

00:54:26.260 --> 00:54:29.680
Please use the PDF workflow
path or the PDF printing path.

00:54:29.680 --> 00:54:33.440
You can do that by drawing with Quartz.

00:54:33.440 --> 00:54:34.830
That's the way we preferred you to do it.

00:54:34.830 --> 00:54:37.750
You can do it drawing with Quick Draw,
even though that's deprecated.

00:54:37.800 --> 00:54:40.140
If you go through the normal
Quick Draw printing path,

00:54:40.140 --> 00:54:41.820
you'll generate a PDF spool file.

00:54:41.940 --> 00:54:46.610
What will not work is if you use the
LaserWriter 8 legacy printing path.

00:54:46.710 --> 00:54:48.390
That path is not being expanded.

00:54:48.420 --> 00:54:50.470
It's not being supported anymore.

00:54:50.540 --> 00:54:51.700
It still exists.

00:54:51.700 --> 00:54:53.900
And I have a tough time with people here.

00:54:54.010 --> 00:54:56.200
We actually have a little
time so I can do this analogy.

00:54:56.250 --> 00:55:00.120
Last year when I said, "Hey,
we're deprecating this," I had five, six,

00:55:00.120 --> 00:55:02.770
seven application writers coming
up to me and very worried.

00:55:02.770 --> 00:55:05.160
"That means you're taking out
the LaserWriter 8 legacy printing

00:55:05.160 --> 00:55:06.750
path for Panther?" And they said,
"No, we're not.

00:55:06.830 --> 00:55:07.500
We're not taking out.

00:55:07.690 --> 00:55:10.080
It's just deprecated." I said, "Well,
then it'll be taken out for

00:55:10.080 --> 00:55:11.170
the next version." They said,
"No,

00:55:11.170 --> 00:55:12.270
we're not taking it out there." I said,
"No,

00:55:12.270 --> 00:55:16.090
we're not taking it out there either."
And you quickly lose any fear that

00:55:16.120 --> 00:55:17.200
you can put in anybody when you say,
"Hey,

00:55:17.240 --> 00:55:18.410
it's deprecated," when you tell them,
"Yeah,

00:55:18.450 --> 00:55:23.380
but it's not going away." So the idea
is we have to balance two things.

00:55:23.380 --> 00:55:25.550
We really don't want
you to use this feature,

00:55:25.610 --> 00:55:28.040
but we have to maintain
binary compatibility.

00:55:28.070 --> 00:55:30.560
And so I use this historical
analogy of baseball.

00:55:30.650 --> 00:55:33.460
In 1920,
Major League Baseball decided they

00:55:33.460 --> 00:55:37.140
didn't want spitballs around anymore,
so they deprecated them.

00:55:37.210 --> 00:55:40.960
But they had this binary compatibility
problem that they had pitchers who

00:55:41.040 --> 00:55:41.940
were still working and still working.

00:55:42.120 --> 00:55:43.980
They were still in the
field using spitballs.

00:55:44.010 --> 00:55:47.100
So what they decided to do was
let those pitchers keep working.

00:55:47.130 --> 00:55:48.470
They supported them.

00:55:48.470 --> 00:55:51.020
But new pitchers could
not use the spitball,

00:55:51.020 --> 00:55:53.490
could not use the deprecated spitball.

00:55:53.530 --> 00:55:56.460
So the point is,
if you have a spitball application

00:55:56.780 --> 00:56:01.850
using the LaserWriter8 legacy path,
we definitely will keep you running.

00:56:01.870 --> 00:56:02.450
We will.

00:56:02.450 --> 00:56:04.930
But if you're working
on a new application,

00:56:04.930 --> 00:56:05.890
please don't use it.

00:56:05.890 --> 00:56:07.920
Or if you're even
revving your application,

00:56:07.920 --> 00:56:09.970
please sit down seriously and
consider ways that you can get off

00:56:10.070 --> 00:56:11.900
the LaserWriter8 legacy printing path.

00:56:11.900 --> 00:56:12.870
And we'll help you.

00:56:12.870 --> 00:56:16.940
We've done new APIs like the submission
dial or the print submissions APIs.

00:56:16.940 --> 00:56:19.640
We'll help you in any way we can.

00:56:19.640 --> 00:56:22.980
We did the font creation APIs for you.

00:56:22.980 --> 00:56:24.960
So let us know what you need,
and we'll get you off that.

00:56:25.030 --> 00:56:26.900
And you can stop
throwing those spitballs.

00:56:28.410 --> 00:56:30.980
Just quickly going back
to the PDF workflow,

00:56:30.980 --> 00:56:33.950
there are a couple APIs that are
interesting if you really like

00:56:33.950 --> 00:56:37.610
the workflow and you want to maybe
write an application that will

00:56:37.620 --> 00:56:40.140
master workflow in a different
way than the print dialog does.

00:56:40.140 --> 00:56:42.020
So if you want to do what
our print dialog does,

00:56:42.030 --> 00:56:42.970
here are the two APIs.

00:56:42.980 --> 00:56:46.850
PM workflow copy items will go
look in the directories where the

00:56:46.850 --> 00:56:50.300
user can install the workflow items
and will come back with a list.

00:56:50.300 --> 00:56:53.630
It's essentially an array of
CFURLs that is all the workflow

00:56:53.760 --> 00:56:55.610
items this user has set up.

00:56:55.660 --> 00:56:58.010
And if you need to run one,
you just call PM workflow

00:56:58.010 --> 00:57:01.460
submit PDF with options,
give the workflow item you want to run,

00:57:01.460 --> 00:57:03.610
the title of the document,
a bunch of options,

00:57:03.610 --> 00:57:06.300
and the PDF file you want to process.

00:57:06.300 --> 00:57:07.740
And this is all our print dialog does.

00:57:07.740 --> 00:57:11.420
And so if you wanted to write something
that was not Distiller but somewhat

00:57:11.710 --> 00:57:15.060
akin to Distiller and that you had
a batch processing application that

00:57:15.060 --> 00:57:19.230
you were running workflows through,
these two calls will let you do it.