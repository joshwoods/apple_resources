WEBVTT

00:00:12.390 --> 00:00:18.340
All right, welcome to Apple Solutions for
Science at WWDC for 2004.

00:00:18.450 --> 00:00:20.360
Thank you.

00:00:21.400 --> 00:05:28.300
[Transcript missing]

00:05:29.010 --> 00:05:30.890
Clustering.

00:05:31.020 --> 00:05:33.120
And, you know,
clustering is just exploding

00:05:33.120 --> 00:05:34.780
in the scientific community.

00:05:34.780 --> 00:05:39.780
There's a move from supercomputer
custom architectures to clusters,

00:05:39.960 --> 00:05:42.200
fairly inexpensive one-use systems.

00:05:42.300 --> 00:05:46.580
Xserve – we actually offer a
special configuration of Xserve

00:05:46.580 --> 00:05:49.500
specifically for building clusters.

00:05:49.630 --> 00:05:53.500
So it's sort of a stripped-down version,
a little bit less expensive,

00:05:53.500 --> 00:05:57.700
and the licensing is sort of
tuned for building clusters.

00:05:57.790 --> 00:06:02.240
I forget exactly what we call it,
but it's on the web page.

00:06:02.430 --> 00:06:10.050
Combine that with inexpensive
storage with Xserve RAID.

00:06:10.050 --> 00:06:10.050
We have a product.

00:06:10.500 --> 00:15:11.300
[Transcript missing]

00:15:11.540 --> 00:15:15.560
Example of the power of
taking Unix with you,

00:15:15.570 --> 00:15:16.190
Dr.

00:15:16.390 --> 00:15:20.900
Jamie Cate at Berkeley does
crystallography.

00:15:20.900 --> 00:15:24.570
And he had a large set of
applications for crystallography

00:15:24.570 --> 00:15:26.750
that ran on Unix workstations.

00:15:26.760 --> 00:15:29.300
And when he left the lab,
he had to basically leave

00:15:29.300 --> 00:15:30.620
his research behind.

00:15:30.620 --> 00:15:32.780
That's no longer true.

00:15:32.780 --> 00:15:38.060
So what he says is Apple's PowerBook G4
and Mac OS X have allowed me to use

00:15:38.060 --> 00:15:42.080
the same tools on an airplane on
my way to a conference that I could

00:15:42.080 --> 00:15:44.310
only use before my lab workstation.

00:15:44.340 --> 00:15:48.280
So for those of you who have not
had the pleasure of a PowerBook and

00:15:48.280 --> 00:15:51.320
taking it on a plane and using it,
I'd highly recommend that.

00:15:52.760 --> 00:15:56.760
I'm going to spend a little bit of
time talking about 64-bit computing.

00:15:56.760 --> 00:16:01.700
So 64-bit computing is not
necessarily for everyone,

00:16:01.720 --> 00:16:06.280
but if you have massive data
sets that you need to iterate

00:16:06.280 --> 00:16:09.660
over as part of a problem,
you're going to find yourself in

00:16:09.660 --> 00:16:11.890
need of a 64-bit address space.

00:16:12.070 --> 00:16:19.380
And today, with Panther,
you can put 8 gigabytes

00:16:19.380 --> 00:16:25.830
onto an Mac OS X G5 system,
but an individual process can only

00:16:25.830 --> 00:16:28.300
use up to 32 bits of address space.

00:16:28.300 --> 00:16:30.890
And in fact,
you can probably get up to about

00:16:30.890 --> 00:16:35.690
2 gigabytes of address before
things start to bump into limits.

00:16:35.900 --> 00:16:39.590
With Tiger,
you will be able to compile and build

00:16:39.600 --> 00:16:41.900
a 64-bit address space application.

00:16:41.950 --> 00:16:48.670
So we have a 64-bit version of
GCC that will compile 64-bit code.

00:16:48.990 --> 00:16:51.890
We have a 64-bit version of LibSystem.

00:16:52.030 --> 00:16:55.780
We're taking a staged approach here.

00:16:55.780 --> 00:16:57.850
So we did LibSystem first.

00:16:57.970 --> 00:17:01.780
So that's LibC and
LibM and other libraries.

00:17:02.190 --> 00:17:06.900
Those are converted to be 64-bit
versions of the libraries.

00:17:06.900 --> 00:17:09.900
You're compiling against those
libraries when you compile 64-bit.

00:17:09.900 --> 00:17:11.900
What you don't have are the
GUIs that you have in the Mac OS X.

00:17:11.900 --> 00:17:12.870
You have the library libraries.

00:17:12.920 --> 00:17:15.900
So for example, Cocoa has not been,
or Carbon has not been

00:17:15.900 --> 00:17:18.900
converted to 64-bit.

00:17:18.940 --> 00:17:23.460
So what you will do to leverage
64-bit with Tiger is build a

00:17:23.460 --> 00:17:26.570
computational section of your
application as a single process

00:17:26.960 --> 00:17:29.900
running in up to 8 gigabytes of memory.

00:17:30.080 --> 00:17:35.820
And that process will communicate with a
front end of your application if you have

00:17:35.820 --> 00:17:38.900
a need for a graphical user interface.

00:17:38.900 --> 00:17:43.530
And certainly on a cluster system,
the code running on the cluster nodes

00:17:43.530 --> 00:17:46.900
typically does not have a GUI anyway.

00:17:46.900 --> 00:17:48.900
And so that's a great fit.

00:17:48.900 --> 00:17:51.530
Eventually in the future,
we'll expand the number

00:17:51.530 --> 00:17:53.900
of 64-bit libraries.

00:17:53.900 --> 00:17:57.900
But for Tiger, it's confined to LibSystem
and the non-GUI libraries.

00:17:57.900 --> 00:18:02.310
And specifically targeted at
scientific computation like very

00:18:02.400 --> 00:18:04.900
large modeling and simulation.

00:18:04.900 --> 00:18:06.780
Things that really need to have
a full 64-bit address space.

00:18:06.900 --> 00:18:09.900
We're using what's called LP64.

00:18:09.900 --> 00:18:14.900
That means that longs and pointers
are promoted to be 64-bits.

00:18:14.900 --> 00:18:18.880
Integers, int, will stay at 32-bits.

00:18:18.960 --> 00:18:21.900
This is the standard for Unix systems.

00:18:21.900 --> 00:18:25.890
So if you have 64-bit code running
on other Unix systems or Linux,

00:18:25.910 --> 00:18:28.900
it should be easily portable to Mac OS X.

00:18:28.900 --> 00:18:34.900
The compiler has been built
to support the 64-bit code.

00:18:34.900 --> 00:18:38.070
The compiler has been
outfitted so that it will,

00:18:38.070 --> 00:18:41.400
if you turn on warnings,
it will give you a complete set of

00:18:41.400 --> 00:18:44.830
warnings if your app is not 64-bit clean.

00:18:44.920 --> 00:18:49.480
For example, if you're depending on,
specifically on size of int

00:18:49.500 --> 00:18:55.890
or the size of a pointer,
it will flag that for you.

00:18:56.070 --> 00:18:59.900
So I highly recommend that
if you have large data sets,

00:18:59.900 --> 00:19:02.900
you take a look at the
Tiger preview release.

00:19:02.900 --> 00:19:03.900
Try out the compiler.

00:19:03.900 --> 00:19:08.900
One caveat to note is that the
binary format for 64-bit apps,

00:19:08.900 --> 00:19:12.320
64-bit executables,
will be changing with the

00:19:12.320 --> 00:19:13.830
final release of Tiger.

00:19:13.900 --> 00:19:16.340
So if you've compiled something
for the preview release,

00:19:16.350 --> 00:19:18.900
you will have to recompile
once the final Tiger comes out.

00:19:18.900 --> 00:19:26.720
64-bit apps run right
alongside 32-bit apps.

00:19:26.900 --> 00:19:30.350
So it's flagged in the executable
whether this is a 64-bit

00:19:30.360 --> 00:19:32.900
executable or a 32-bit executable.

00:19:32.900 --> 00:19:35.540
In fact,
you can build your apps FAT if you

00:19:35.540 --> 00:19:42.760
want so that you can launch either
as a 64-bit app or as a 32-bit app.

00:19:42.900 --> 00:19:45.810
Example where this might be useful.

00:19:45.910 --> 00:19:50.070
So Vertex Pharmaceuticals,
they use Power Mac G5 to

00:19:50.070 --> 00:19:53.900
accelerate their drug development,
which targets viral diseases,

00:19:53.900 --> 00:19:55.900
inflammatory diseases, and cancer.

00:19:55.900 --> 00:19:59.700
And Tiger is going to allow them
to transition their critical

00:19:59.700 --> 00:20:01.900
molecular modeling application.

00:20:01.900 --> 00:20:06.900
Which really has 64-bit
addressing requirements.

00:20:06.920 --> 00:20:08.870
Transition that to a G5.

00:20:09.130 --> 00:20:12.900
And a quote from Joshua Boger,
who's the chairman and CEO.

00:20:12.900 --> 00:20:18.180
Mac OS X 64-bit memory management will
allow Vertex to rapidly interact with

00:20:18.180 --> 00:20:23.900
huge libraries of chemical structures
and advance our drug discovery process.

00:20:25.200 --> 00:20:31.280
Leveraging open source – I can't
stress this enough – we have over 100

00:20:31.280 --> 00:20:35.490
open source technologies or projects
that are incorporated into Tiger.

00:20:35.720 --> 00:20:42.620
Everything from Apache to Perl to
Python to OpenLDAP to Berkeley DB,

00:20:42.620 --> 00:20:46.980
MySQL, JBoss, you name it,
we pretty much have it.

00:20:47.200 --> 00:20:51.690
And those packages are included
in the release so that the

00:20:52.030 --> 00:20:56.190
code runs out of the box and,
more importantly, when updates come out

00:20:56.190 --> 00:20:58.470
from those products,
we incorporate them into

00:20:58.470 --> 00:21:00.080
a system update for Mac.

00:21:00.140 --> 00:21:03.340
So you get the most recent versions
or the security patches kept

00:21:03.340 --> 00:21:05.080
up to date for these projects.

00:21:05.460 --> 00:21:08.100
Makes it incredibly easy to use these.

00:21:08.100 --> 00:21:12.100
Beyond the ones we package, of course,
there's a huge number – thousands,

00:21:12.120 --> 00:21:17.060
really – of open source packages
available from SourceForge or from Fink.

00:21:17.110 --> 00:21:21.530
And those applications are basically
– the doubling rate is about doubling

00:21:21.530 --> 00:21:26.100
every year in terms of number of open
source projects available on the Mac.

00:21:26.100 --> 00:21:29.310
So that's an incredible resource
for you so that you don't

00:21:29.310 --> 00:21:31.100
have to reinvent the wheel.

00:21:31.100 --> 00:21:34.490
If you need to get something done,
the first thing you should

00:21:34.620 --> 00:21:37.620
do with Mac OS X is go look,
see if we've got an open source

00:21:37.620 --> 00:21:42.020
package that accomplishes the task
you want to accomplish so you don't

00:21:42.090 --> 00:21:44.900
have to write code from scratch.

00:21:45.230 --> 00:21:47.100
Kinds of applications.

00:21:47.100 --> 00:21:52.410
So the ones available include
things like NCBI Toolkit,

00:21:52.410 --> 00:21:57.990
Emboss, PyMol I mentioned earlier,
Globus, WU Blast.

00:21:58.100 --> 00:22:04.630
We also have a version of Blast that has
been optimized by Apple and Genentech,

00:22:04.630 --> 00:22:09.100
AG Blast, highly optimized for the G5,
Amber.

00:22:09.100 --> 00:22:15.300
So a huge number of tools available
out there for scientific computation.

00:22:15.940 --> 00:22:21.210
So to summarize the trends we're seeing:
Number one,

00:22:21.260 --> 00:22:23.370
huge growth in scientific data.

00:22:23.410 --> 00:22:27.360
So you can expect Apple to
continue to focus with products

00:22:27.580 --> 00:22:31.210
like XSAN and XSERVE RAID,
continue to focus on providing

00:22:31.210 --> 00:22:35.670
cost-effective storage,
very high bandwidth to storage,

00:22:35.670 --> 00:22:38.640
clustering for
cost-effective performance,

00:22:38.640 --> 00:22:40.200
and that is our strategy.

00:22:40.200 --> 00:22:42.000
We have one-use servers.

00:22:42.000 --> 00:22:44.140
We don't make huge big iron.

00:22:44.140 --> 00:22:46.760
We don't make 64-way SMP.

00:22:46.760 --> 00:22:51.870
We are all about optimizing 1U
form factor for building clusters,

00:22:52.040 --> 00:22:56.980
making sure that we can give that to
people as inexpensively as possible.

00:22:57.100 --> 00:23:01.860
XGrid for building ad hoc clusters.

00:23:01.860 --> 00:23:03.640
Strong focus on application optimization.

00:23:03.640 --> 00:23:05.780
I mentioned the Shark Tools and Chud.

00:23:06.110 --> 00:23:09.170
You can expect to see
additional performance-related

00:23:09.180 --> 00:23:11.420
tools coming from Apple.

00:23:11.420 --> 00:23:15.340
This is the way to squeeze the
most performance out of your G5.

00:23:15.400 --> 00:23:20.380
Make sure you're getting the absolute
most you can get for your application.

00:23:20.380 --> 00:23:22.940
Ease of deployment administration.

00:23:22.940 --> 00:23:25.720
Out of the box,
turn it on with workgroup bioinformatics

00:23:25.780 --> 00:23:31.630
cluster and you've got a cluster under
the desk in your office if you want.

00:23:31.830 --> 00:23:38.400
Portable UNIX – I can't stress enough
the productivity gain that you get

00:23:38.570 --> 00:23:44.700
from being able to take your entire
lab software with you wherever you go.

00:23:44.700 --> 00:23:50.830
64-bit address space – and this is
something that has been requested

00:23:51.020 --> 00:23:57.000
from us and we are very pleased
to be able to offer the non-GUI

00:23:57.000 --> 00:24:00.700
64-bit app address space with Tiger.

00:24:00.700 --> 00:24:05.650
This is an area where please,
if you try it out on a preview release,

00:24:05.750 --> 00:24:08.570
please give us your feedback
on what you're finding.

00:24:08.860 --> 00:24:12.440
You're the guys that have the 64-bit
apps and we're committed to make

00:24:12.440 --> 00:24:14.690
this the best 64-bit system we can.

00:24:14.700 --> 00:24:17.630
And then finally,
open standards-based tools development.

00:24:17.700 --> 00:24:22.730
There basically is not an open
source tool out there that has not,

00:24:22.730 --> 00:24:25.700
at this point, been ported to Mac OS X.

00:24:26.030 --> 00:24:29.700
And that's a huge leverage point
for you to not have to read.

00:24:29.700 --> 00:24:32.620
you to not have to reinvent the wheel.

00:24:33.750 --> 00:24:37.630
So, Apple really, in my mind,
is the best platform for

00:24:37.630 --> 00:24:40.040
scientific computing today.

00:24:40.110 --> 00:24:44.110
If you look at all the
tools oriented around it,

00:24:44.150 --> 00:24:47.930
available on it, the things that we're
doing to enable clustering,

00:24:47.970 --> 00:24:51.120
the things that our partners
are doing to enable scientific

00:24:51.170 --> 00:24:56.830
computing in a variety of areas,
I really can't point to a system today

00:24:56.830 --> 00:25:00.790
that makes a better scientific computer.

00:25:00.790 --> 00:25:00.790
So,

00:25:00.910 --> 00:25:02.800
Thanks a lot.

00:25:02.800 --> 00:25:05.870
I'm going to turn it
over at this point to Dr.

00:25:06.410 --> 00:25:10.800
Liz Kerr, and she's the Director of
Scientific Marketing.

00:25:10.800 --> 00:25:16.790
She's going to talk about
Apple in the SciTech market.

00:25:16.790 --> 00:25:16.790
So, thank you, Liz.

00:25:20.790 --> 00:25:21.700
Thanks, Bud.

00:25:21.700 --> 00:25:24.740
It's really my pleasure to be
here and it's great to see so

00:25:24.740 --> 00:25:26.740
many faces out here this morning.

00:25:26.870 --> 00:25:31.200
What I'm going to talk to you about for
the next 20 minutes is how both my team,

00:25:31.200 --> 00:25:34.420
the SciTech Marketing team,
and many other groups at Apple are

00:25:34.420 --> 00:25:39.240
working towards providing solutions
and awareness out to the market to

00:25:39.310 --> 00:25:43.460
help really drive adoption of the
Apple platform for scientific computing.

00:25:43.460 --> 00:25:48.220
We really think this is a perfect
solution and we want to help

00:25:48.220 --> 00:25:48.730
get that message out there.

00:25:49.530 --> 00:25:54.960
One of the most important
aspects of that – oh,

00:25:54.960 --> 00:25:54.960
sorry, wrong way.

00:25:56.690 --> 00:25:57.590
There we go.

00:25:57.590 --> 00:26:00.430
One of the most important aspects of
that is really driving the awareness

00:26:00.480 --> 00:26:04.440
and communicating both to our customers
and hearing from our customers.

00:26:04.600 --> 00:26:07.380
I'll go through some of the
ways that we're doing that.

00:26:07.710 --> 00:26:10.600
One of the most simple ways
is through trade shows.

00:26:10.680 --> 00:26:13.600
We've done a number of these
and plan to do more this year.

00:26:13.600 --> 00:26:17.210
Bio IT World is one,
and that's what this image is from,

00:26:17.210 --> 00:26:18.240
our booth there.

00:26:18.600 --> 00:26:23.600
Also ISMB, which is coming up in Glasgow,
Scotland, a big bioinformatics show.

00:26:23.680 --> 00:26:26.890
And Drug Discovery Technology,
which is a show that focuses more on

00:26:26.890 --> 00:26:29.860
the commercial aspects of science,
biological sciences,

00:26:29.860 --> 00:26:31.550
pharmaceutical and biotech.

00:26:31.600 --> 00:26:35.350
These shows are really important to
us because they allow us not just the

00:26:35.350 --> 00:26:39.720
ability to talk to our current customers,
but to let other people know that

00:26:39.720 --> 00:26:42.380
this is an area we're interested in,
and to hear from people who

00:26:42.380 --> 00:26:44.600
maybe we don't normally talk to.

00:26:45.650 --> 00:26:48.880
Another type of event that we're
doing are focused customer events,

00:26:48.980 --> 00:26:52.180
where we actually go to a customer
site and give them hands-on experience

00:26:52.180 --> 00:26:53.580
with some of our newer tools.

00:26:53.610 --> 00:26:58.270
These events shown in the images were
to promote the Power Mac G5 and the

00:26:58.360 --> 00:27:03.610
performance of those computers for
applications in scientific computing.

00:27:05.210 --> 00:27:08.420
Another thing we're doing is
focusing on advertising that goes

00:27:08.420 --> 00:27:10.700
specifically to our scientists.

00:27:10.700 --> 00:27:12.100
This is a little tongue-in-cheek.

00:27:12.100 --> 00:27:14.480
Obviously, this isn't an iPod,
and the point isn't that

00:27:14.770 --> 00:27:18.200
we're focused away from that,
but just that in many cases,

00:27:18.200 --> 00:27:23.220
our consumer advertising
overtakes what our scientists see,

00:27:23.220 --> 00:27:25.550
and they don't think of us
as a company that maybe makes

00:27:25.630 --> 00:27:28.700
computers that are really specific
for the scientific market.

00:27:28.850 --> 00:27:32.540
So, this is an example of an
advertisement that's currently

00:27:32.540 --> 00:27:36.520
running in both peer-reviewed trade
journals like Science and Nature,

00:27:36.540 --> 00:27:40.270
as well as magazines like
The Scientist and Genome Technology.

00:27:40.530 --> 00:27:44.420
And it really is a great ad because
it focuses specifically on the

00:27:44.420 --> 00:27:49.250
Power Mac G5 and customers talking
about why it's great for their use.

00:27:49.860 --> 00:27:52.000
We're also doing some online advertising.

00:27:52.020 --> 00:27:56.280
This is another great way to reach people
who maybe don't normally think of Apple,

00:27:56.280 --> 00:27:59.070
and this is an online ad for
the workgroup cluster for

00:27:59.070 --> 00:28:00.790
bioinformatics that Bud alluded to.

00:28:00.800 --> 00:28:04.390
We'll talk a little bit more
about this solution later.

00:28:05.730 --> 00:28:08.530
Another thing that we're really
please about is launching a science

00:28:08.530 --> 00:28:11.600
website on apple.com/science.

00:28:11.720 --> 00:28:13.580
This is the homepage.

00:28:13.610 --> 00:28:16.100
This is really geared towards
up-leveling all that information

00:28:16.100 --> 00:28:19.490
that's more technical and more geared
towards both our scientific developers

00:28:19.790 --> 00:28:23.370
and our scientific customers so that
they can find sort of a home for that

00:28:23.370 --> 00:28:25.500
information and find it more easily.

00:28:25.600 --> 00:28:29.820
We have lots of downloads and
focus on both Apple solutions as

00:28:29.820 --> 00:28:32.600
well as our third-party solutions.

00:28:32.600 --> 00:28:35.750
We also have success stories that
focus on how customers are using

00:28:35.770 --> 00:28:39.920
Apple products as examples and to
serve as an example for people who are

00:28:39.920 --> 00:28:43.600
interested in how they might use our
technology to help solve their problems.

00:28:44.580 --> 00:28:46.660
This is just a blow-up because
what I'm going to do is focus in

00:28:46.730 --> 00:28:50.030
on a couple of these areas and dig
down a little bit just to show you

00:28:50.030 --> 00:28:51.740
what type of information is there.

00:28:51.740 --> 00:28:54.930
So in the upper right-hand corner,
we're going to look at the

00:28:54.930 --> 00:28:56.490
applications for research.

00:28:56.550 --> 00:28:59.790
I wanted to point this one out because
this is where most of the information

00:28:59.790 --> 00:29:04.490
from third-party developers and open
source developers live on the website.

00:29:04.530 --> 00:29:08.260
So we've got featured applications
on this part of the web to raise

00:29:08.540 --> 00:29:12.500
awareness for particular applications,
and this rotates on a regular basis,

00:29:12.500 --> 00:29:14.390
so we don't play favorites or anything.

00:29:14.510 --> 00:29:18.000
We try to give everybody a chance
to focus on their applications.

00:29:18.320 --> 00:29:20.540
There's also the
Macintosh Products Guide,

00:29:20.560 --> 00:29:24.110
which is the comprehensive list
of all the applications that are

00:29:24.360 --> 00:29:27.990
available that run on Mac OS X,
both scientific and otherwise.

00:29:28.030 --> 00:29:30.660
There's also a download section,
so if you find an application

00:29:30.750 --> 00:29:34.000
you're interested in or somebody
wants to download your application,

00:29:34.000 --> 00:29:37.080
for example, they can go to either the
math and science part or the

00:29:37.080 --> 00:29:39.820
open source and Unix part,
and all these have

00:29:39.910 --> 00:29:42.290
specific download sections.

00:29:42.500 --> 00:29:44.400
So another part of this
that's interesting,

00:29:44.400 --> 00:29:46.900
I think, is the resource section.

00:29:46.960 --> 00:29:50.110
And here we have it broken
down into different categories.

00:29:50.220 --> 00:29:52.930
So if you are looking for a
particular type of information,

00:29:53.020 --> 00:29:57.230
for example, high performance computing
or software development,

00:29:57.370 --> 00:30:00.780
there's a part for Darwin resources,
third party products.

00:30:00.830 --> 00:30:02.660
There are mailing lists and community.

00:30:02.660 --> 00:30:06.870
So if you're interested in joining a
mailing list or a community to discuss

00:30:06.870 --> 00:30:10.860
your challenges or throw something
out there and get a response back,

00:30:10.980 --> 00:30:12.460
that's right there.

00:30:12.490 --> 00:30:15.040
And there's also a lot of
links to technical information.

00:30:15.060 --> 00:30:17.780
You can see-- maybe you can't
see-- on the right hand side,

00:30:17.780 --> 00:30:22.200
where you can download PDFs
about the Apple technology.

00:30:22.860 --> 00:30:27.930
We also have been doing what we call
SciTech initiatives and solutions and

00:30:27.930 --> 00:30:31.720
also I want to talk a little bit about
how we're judging the momentum that

00:30:31.730 --> 00:30:34.730
we're getting in the scientific market.

00:30:35.330 --> 00:30:38.770
So one of the cornerstones of
this is the Apple Workgroup

00:30:38.770 --> 00:30:40.920
Cluster for Bioinformatics.

00:30:40.920 --> 00:30:44.240
We're really,
really pleased with this because

00:30:44.280 --> 00:30:48.520
it really ties together the highly
technical aspects of what we're

00:30:48.520 --> 00:30:51.650
providing to the scientific marketplace,
plus the ease of use

00:30:51.820 --> 00:30:53.360
that Apple's known for.

00:30:53.570 --> 00:30:56.240
And the idea is,
I think as Bud alluded to,

00:30:56.240 --> 00:30:59.680
is to take the setting up the computer
cluster out of the hands of the

00:30:59.760 --> 00:31:01.700
scientists and make it just really easy.

00:31:01.700 --> 00:31:04.670
Make it so that they can have
the compute power without having

00:31:04.740 --> 00:31:08.020
to know how to manage a cluster,
how to code in Linux,

00:31:08.020 --> 00:31:09.660
how to do any of that.

00:31:09.660 --> 00:31:12.090
This is geared to be something
they can take out of the box,

00:31:12.270 --> 00:31:16.520
set up themselves,
and have it running in no time.

00:31:16.520 --> 00:31:20.580
We announced this at Macworld in January,
and we were really pleased that

00:31:20.680 --> 00:31:26.240
it won the Best in Show award at
BioIT World for IT Infrastructure.

00:31:26.240 --> 00:31:29.420
We're just really proud of that,
and I think it really speaks to how the

00:31:29.420 --> 00:31:31.900
scientific community is viewing this.

00:31:31.980 --> 00:31:34.590
It's really being adopted for many uses.

00:31:34.640 --> 00:31:37.670
I mean,
it's a bioinformatics workgroup cluster,

00:31:37.690 --> 00:31:40.020
but people are using it
for biological research.

00:31:40.020 --> 00:31:42.490
They're also using it for
application development.

00:31:42.500 --> 00:31:44.780
And interestingly,
they're using it to develop

00:31:44.780 --> 00:31:49.630
curriculum and teaching programs for
bioinformatics at the university level.

00:31:51.260 --> 00:31:52.950
Just a couple examples.

00:31:53.030 --> 00:31:55.100
This one's from the
Naval Medical Research Lab.

00:31:55.200 --> 00:31:55.500
Dr.

00:31:55.500 --> 00:32:00.640
Michael Schutt is using his workgroup
cluster for bioterrorism research.

00:32:00.640 --> 00:32:03.120
And he installed and
maintained this himself.

00:32:03.120 --> 00:32:05.940
He has no computer science
background whatsoever.

00:32:05.960 --> 00:32:07.990
His favorite thing is to say
all he needed was a screwdriver,

00:32:07.990 --> 00:32:10.430
and he was able to set the
whole thing up himself.

00:32:10.440 --> 00:32:13.520
He had it up and running in 30 minutes.

00:32:13.520 --> 00:32:16.740
They really like the security
aspect of this cluster because,

00:32:16.810 --> 00:32:20.780
of course,
they're working on something that's very

00:32:21.110 --> 00:32:25.860
critical to the security of the country.

00:32:25.860 --> 00:32:29.930
They also liked having the applications
which come with the workgroup

00:32:29.940 --> 00:32:33.110
cluster with the web-based interface.

00:32:33.110 --> 00:32:38.020
They liked having the accessibility
of that without having to know

00:32:38.290 --> 00:32:42.400
command line because a lot of bench
scientists don't know how to do that.

00:32:42.400 --> 00:32:45.160
And it's much easier for them to
have a familiar GUI interface.

00:32:45.330 --> 00:32:47.770
The other thing about the workgroup
cluster which a lot of our customers

00:32:47.800 --> 00:32:52.680
like and which is one of the things
that was a deciding factor for the

00:32:52.770 --> 00:32:56.330
Naval Medical Research Center is
the scalability of the cluster.

00:32:56.550 --> 00:32:57.710
You can always add to this.

00:32:57.750 --> 00:33:00.130
If you find that your
eight nodes isn't enough,

00:33:00.210 --> 00:33:03.580
you can double that or add two
more nodes or whatever you need.

00:33:04.210 --> 00:33:06.620
Another example is from
Idaho State University.

00:33:06.620 --> 00:33:07.250
Dr.

00:33:07.330 --> 00:33:11.230
Mike Thomas set out to
design a bioinformatics

00:33:11.310 --> 00:33:13.000
curriculum for the university.

00:33:13.000 --> 00:33:15.340
They bought a five-no-workgroup cluster.

00:33:15.340 --> 00:33:19.960
What happened was they set it up so much
faster than they had planned that they

00:33:19.960 --> 00:33:24.190
were able to offer their bioinformatics
course an entire semester early.

00:33:24.220 --> 00:33:26.980
The other thing that he had done,
he had hired a person,

00:33:26.980 --> 00:33:28.900
a headcount to manage the cluster.

00:33:28.900 --> 00:33:31.500
But once it was set
up and it was running,

00:33:31.500 --> 00:33:33.320
the guy had nothing to do.

00:33:33.510 --> 00:33:35.640
Because it was just
going and it was working.

00:33:35.640 --> 00:33:39.080
So they reassigned this person 75%
of his time to do something else.

00:33:40.710 --> 00:33:43.770
So they're using this to teach the
very first course in bioinformatics

00:33:44.040 --> 00:33:45.960
at Idaho State University.

00:33:46.050 --> 00:33:49.260
A quote from him which talks a little
bit about how this bleeds over into

00:33:49.260 --> 00:33:53.360
other areas of the university is,
"I think the cluster is going to have a

00:33:53.360 --> 00:33:57.060
huge effect in our research environment,
and I think it will help scientists here

00:33:57.060 --> 00:34:01.760
generate additional funding." So he sees
this as a way of other scientists at the

00:34:02.090 --> 00:34:07.420
university referring to this resource
and being able to hopefully boost up

00:34:07.420 --> 00:34:08.950
the value of their grant applications.

00:34:09.910 --> 00:34:13.120
So, one of the things we did to raise
the awareness of this solution,

00:34:13.120 --> 00:34:17.160
the Workgroup Cluster for Bioinformatics,
out to the marketplace is,

00:34:17.160 --> 00:34:19.630
with my team and the
Higher Education Marketing team,

00:34:19.710 --> 00:34:22.570
put together a Workgroup
Cluster Awards program to

00:34:22.620 --> 00:34:24.700
recognize innovation in research.

00:34:24.700 --> 00:34:28.260
The goal was to give away five
fully-provisioned clusters with

00:34:28.450 --> 00:34:33.400
four dual-processor XSERVE G5s
with 2 gigs of RAM in each.

00:34:33.400 --> 00:34:36.660
Comes with the software included,
the BioTeam inquiry package with

00:34:36.780 --> 00:34:39.560
over 200 informatics applications.

00:34:39.560 --> 00:34:42.760
All the hardware infrastructure,
the power supply, the cables, etc.

00:34:42.760 --> 00:34:44.660
and AppleCare support for three years.

00:34:44.660 --> 00:34:47.460
This is a great thing to win.

00:34:47.460 --> 00:34:49.760
The applicants were tremendous.

00:34:49.760 --> 00:34:53.830
We had hundreds of applications
come in from all over the US and

00:34:53.830 --> 00:34:58.020
we were just blown away by the
quality and the time and effort

00:34:58.020 --> 00:35:01.160
people took to put these together.

00:35:01.160 --> 00:35:04.470
And from all aspects of research,
from higher ed, government, non-profit,

00:35:04.570 --> 00:35:07.650
as well as commercial customers.

00:35:08.550 --> 00:35:12.500
I hope it's not pink on the
screen because it's pink there.

00:35:12.500 --> 00:35:14.100
Okay, we'll go with pink.

00:35:14.100 --> 00:35:19.150
So first I'd like to say,
of the hundreds, we picked five winners,

00:35:19.150 --> 00:35:22.350
but we also picked five
honorable mentions because,

00:35:22.370 --> 00:35:25.840
again, the quality of these was so
incredible that we felt we wanted

00:35:25.920 --> 00:35:29.600
to extend the acknowledgement to
at least ten of the applicants.

00:35:29.600 --> 00:35:33.060
So just very quickly,
these are the five honorable mentions.

00:35:33.060 --> 00:35:35.450
The first from University of
Washington where they're

00:35:35.450 --> 00:35:37.200
doing HIV evolution research.

00:35:37.320 --> 00:35:38.730
At Yale University, Dr.

00:35:38.740 --> 00:35:42.400
Kevin White doing genomic
research on model organisms.

00:35:42.400 --> 00:35:43.560
Caltech, Dr.

00:35:43.560 --> 00:35:47.220
Barbara Wald doing gene
regulatory networks.

00:35:47.220 --> 00:35:49.110
At University of Pennsylvania, Dr.

00:35:49.110 --> 00:35:54.900
David Ruse and colleagues are studying
parasites and genomics of parasites.

00:35:54.920 --> 00:35:57.380
And at the Institute for
Genomic Research,

00:35:57.380 --> 00:35:58.290
or TIGER, Dr.

00:35:58.290 --> 00:36:01.040
John Quackenbush is doing
all kinds of things,

00:36:01.040 --> 00:36:04.670
but also software development and
a lot of genomic database work.

00:36:05.000 --> 00:36:10.910
So now to the very pink winners
for the Work Loop Cruster Awards.

00:36:10.940 --> 00:36:13.120
The first one on the list,
and these are not in the order of first,

00:36:13.120 --> 00:36:14.300
second, third, fourth, or fifth.

00:36:14.410 --> 00:36:16.220
They're all winners.

00:36:16.330 --> 00:36:17.430
UCLA, Dr.

00:36:17.430 --> 00:36:21.560
Christopher Lee for doing
work in comparative genomics,

00:36:21.570 --> 00:36:24.720
an incredible application,
incredible project.

00:36:24.720 --> 00:36:26.430
At Duke University, Dr.

00:36:26.450 --> 00:36:30.760
Simon Lin who is representing a group
of scientists doing oncology research,

00:36:30.760 --> 00:36:33.840
an enormously extensible
project that he's looking at.

00:36:33.840 --> 00:36:36.120
And, and a project that he's looking
at doing with lots of software

00:36:36.360 --> 00:36:41.900
development that would be used by the
entire oncology research community.

00:36:42.030 --> 00:36:43.370
At MIT, we have to have Dr.

00:36:43.490 --> 00:36:47.150
Edward DeLong for environmental
microbial genomics,

00:36:47.150 --> 00:36:50.570
a really interesting topic, very unique.

00:36:50.570 --> 00:36:50.570
And then,

00:36:53.220 --> 00:36:55.790
and at University of Wisconsin,
Mike Newton, Dr.

00:36:55.790 --> 00:36:58.400
Mike Newton,
he's developing statistical techniques

00:36:58.470 --> 00:37:05.480
for genomic research to really – it's
like a light show – genomic research to

00:37:05.480 --> 00:37:12.080
really expand the types of algorithms
and such that people can use for that.

00:37:12.200 --> 00:37:15.320
And then finally,
at Children's Hospital in Oakland,

00:37:15.410 --> 00:37:17.380
the research institute there, Dr.

00:37:17.720 --> 00:37:21.100
Deborah Dean is doing really,
really state-of-the-art

00:37:21.140 --> 00:37:25.200
chlamydia genomics research,
much more in the healthcare area.

00:37:25.260 --> 00:37:28.530
So those are our five winners of
the Apple Workgroup Cluster Awards,

00:37:28.530 --> 00:37:31.290
and I'd like to just stop here
and give a round of applause to

00:37:31.320 --> 00:37:33.260
all the applicants and winners.

00:37:39.770 --> 00:37:40.740
Okay, moving right along.

00:37:40.840 --> 00:37:43.460
And just talking again about
the momentum and awareness,

00:37:43.460 --> 00:37:46.500
we have gotten an enormous
amount of press coverage,

00:37:46.510 --> 00:37:50.150
both from this awards program,
but really primarily starting when

00:37:50.150 --> 00:37:53.560
we launched the workgroup cluster for
bioinformatics and started showing

00:37:53.640 --> 00:37:54.940
up at things like BioIT World.

00:37:54.940 --> 00:37:57.790
And it's been really
nice to see the press,

00:37:57.940 --> 00:38:02.560
both the Mac trade press as well as
more general press and scientific press,

00:38:02.810 --> 00:38:05.430
really want to hear what Apple's
doing in this space and paying

00:38:05.440 --> 00:38:08.230
attention to the efforts we're
making to provide really great

00:38:08.230 --> 00:38:09.940
solutions to our scientific customers.

00:38:09.940 --> 00:38:13.910
I want to turn a little bit to talk
about the developers and some of the

00:38:13.910 --> 00:38:15.620
work that you all have been doing.

00:38:15.620 --> 00:38:20.170
I think the amount of the number
of new applications that have come

00:38:20.230 --> 00:38:23.310
on to Mac OS X and continue to come
on to Mac OS X is overwhelming.

00:38:23.320 --> 00:38:24.980
The list just keeps growing.

00:38:24.980 --> 00:38:29.460
These are four that are relatively new,
either updated or new to the platform.

00:38:29.460 --> 00:38:32.410
From the chemical computing group,
we have the molecular

00:38:32.410 --> 00:38:35.480
operating environment,
or as we like to call it, Mo.

00:38:35.480 --> 00:38:37.100
MATLAB 7.

00:38:37.120 --> 00:38:40.380
An enormously popular program for
our physical science customers.

00:38:40.380 --> 00:38:44.100
GeoSPEZA is a company that does
the Finch Sequencing Center,

00:38:44.100 --> 00:38:46.630
a great tool for
managing sequencing labs.

00:38:46.680 --> 00:38:51.120
And GeneCodes with Sequencer,
another really popular program

00:38:51.120 --> 00:38:54.120
for managing DNA sequence data.

00:38:54.120 --> 00:39:00.120
What really drives that, I think,
is the amount of developer support

00:39:00.120 --> 00:39:03.610
that our worldwide developer
group provides to our scientific

00:39:03.660 --> 00:39:04.920
developers as well as others.

00:39:04.920 --> 00:39:06.920
And I just wanted to highlight a few
things that are really important to me.

00:39:06.920 --> 00:39:07.140
I think the first thing that I want
to talk about is the number of

00:39:07.140 --> 00:39:10.480
software development tools that we
have on offer for our developers.

00:39:10.480 --> 00:39:13.760
There are,
at the Apple Developer Connection,

00:39:13.760 --> 00:39:17.130
software development tools,
hardware support,

00:39:17.130 --> 00:39:20.500
technical support and services,
as well as business services,

00:39:20.500 --> 00:39:22.660
and that kind of moves back
into my area a little bit,

00:39:22.790 --> 00:39:25.780
but co-marketing programs
and program discounts.

00:39:27.810 --> 00:39:28.580
This is a blow-up.

00:39:28.710 --> 00:39:33.160
I'm not sure how well you can see that,
but this is what, especially now,

00:39:33.160 --> 00:39:37.310
this is what you would see for a
particular application on our website,

00:39:37.310 --> 00:39:40.450
and it just is a nice highlight with
a description of the program and

00:39:40.740 --> 00:39:44.390
information about where they get it,
who the company is that makes it,

00:39:44.390 --> 00:39:45.740
or the individual.

00:39:45.740 --> 00:39:49.900
These all live on
apple.com slash science.

00:39:49.920 --> 00:39:52.240
They also are all in the
Macintosh Products Guide.

00:39:52.240 --> 00:39:56.340
We do press release support for
developers that are doing a big release.

00:39:56.450 --> 00:39:58.110
We'll help with promoting that.

00:39:58.160 --> 00:40:01.280
This year,
at all of our scientific conferences,

00:40:01.280 --> 00:40:04.040
we're inviting partners,
specific partners,

00:40:04.040 --> 00:40:09.410
to join us in our booth to help show
the solution of Apple hardware and

00:40:09.580 --> 00:40:13.200
Mac OS X with some of the key scientific
applications for that particular

00:40:13.290 --> 00:40:14.570
audience that we're addressing.

00:40:14.580 --> 00:40:16.320
And then success stories.

00:40:16.320 --> 00:40:17.780
Excuse me.

00:40:17.780 --> 00:40:19.680
We're not just doing success
stories of our customers,

00:40:19.680 --> 00:40:22.750
but we really want to focus on
how our developers are using

00:40:22.750 --> 00:40:26.550
Mac OS X for examples for other
scientific developers to look at and

00:40:26.550 --> 00:40:30.610
use as examples for their own work.

00:40:31.910 --> 00:40:34.570
So I'll finish here,
and this is a quote that came off the ad,

00:40:34.570 --> 00:40:37.080
which I'm sure you couldn't see
because the type was so small,

00:40:37.080 --> 00:40:37.670
from Dr.

00:40:37.670 --> 00:40:40.350
Sean Morrison at University of Michigan.

00:40:40.520 --> 00:40:44.130
He said, "The Power Mac G5 is the fastest
computer I have ever used.

00:40:44.180 --> 00:40:46.510
I can have eight different
memory-intensive applications

00:40:46.570 --> 00:40:51.200
open on my desktop at the same
time with no problems whatsoever.

00:40:51.280 --> 00:40:54.570
In my personal opinion,
the system is so reliable, user-friendly,

00:40:54.600 --> 00:41:02.190
and powerful that I don't understand
why people endure PCs." Now,

00:41:02.190 --> 00:41:02.190
yes.

00:41:03.850 --> 00:41:09.600
I think I'd like to just close by saying
what's not really covered there is really

00:41:09.600 --> 00:41:13.340
the key of matching the really powerful
hardware and operating system that

00:41:13.340 --> 00:41:17.350
Apple makes with the really incredible
applications that our developers provide.

00:41:17.430 --> 00:41:20.260
Because those things have to
go hand in hand to provide the

00:41:20.260 --> 00:41:22.000
right solution to our scientists.

00:41:22.080 --> 00:41:24.720
And I feel like it's just so
tremendous to see the people here

00:41:24.720 --> 00:41:28.430
really focused on developing and
working towards scientific apps,

00:41:28.560 --> 00:41:31.560
maybe just for personal use,
but also for commercial use.

00:41:31.690 --> 00:41:33.970
Because I really believe that those
two things together really make

00:41:33.970 --> 00:41:37.170
the solution that help address the
needs of our scientific community.

00:41:37.330 --> 00:41:41.800
So with that, I would like to introduce
our next speaker.

00:41:41.800 --> 00:41:47.320
Chen Peng is from the Temasek
Life Science Institute Laboratory in

00:41:47.320 --> 00:41:48.540
Singapore.

00:41:48.770 --> 00:41:51.500
They have a 75-node XServe cluster.

00:41:51.500 --> 00:41:55.360
It's the largest cluster
currently in Asia,

00:41:55.360 --> 00:41:56.820
Apple cluster in Asia.

00:41:56.930 --> 00:41:59.900
And he both installed it and managed it.

00:41:59.900 --> 00:42:01.560
And he's going to tell you
all about his work there.

00:42:01.560 --> 00:42:03.830
Please welcome him.

00:42:08.640 --> 00:42:10.600
Thank you, Elizabeth.

00:42:10.600 --> 00:42:11.940
Good morning, everyone.

00:42:11.980 --> 00:42:15.710
It's my pleasure to be here to
share with you our experience of

00:42:16.220 --> 00:42:20.590
building and using the XServe cluster
for bioinformatics in Termasac

00:42:20.590 --> 00:42:24.210
Life Science Laboratory in Singapore.

00:42:25.000 --> 00:42:30.060
So our group is involved in creating
a computational biology division

00:42:30.060 --> 00:42:35.340
that will focus on comparing
DNA between different species.

00:42:35.340 --> 00:42:39.410
Our current research project is the
genome annotation of a C-squared

00:42:39.850 --> 00:42:45.500
species and the study of non-coding
regions across co-ordinated genomes.

00:42:45.500 --> 00:42:49.980
In parallel to the annotation project,
we are furthering the development

00:42:50.340 --> 00:42:54.810
of a workflow management software,
BioPipe, to suit our large-scale,

00:42:54.810 --> 00:42:58.750
cluster-based computational
needs and smaller workflows

00:42:59.100 --> 00:43:01.900
suited for other projects in TLL.

00:43:01.900 --> 00:43:05.450
Inside TLL,
we work actively with other scientists

00:43:05.720 --> 00:43:08.980
to provide computational biology support.

00:43:08.980 --> 00:43:11.680
For instance,
we work with a lab of reproductive

00:43:11.680 --> 00:43:18.310
genomes on the automation of filtering,
clustering, and annotation of in-house

00:43:18.310 --> 00:43:21.000
generated sequence data.

00:43:21.000 --> 00:43:24.480
its integration with public databases.

00:43:25.930 --> 00:43:32.100
The foremost large-scale project we are
doing is sooner-savvy genome annotation.

00:43:32.100 --> 00:43:35.830
The genome size of the C-squared
encrusted gene has been estimated

00:43:35.960 --> 00:43:44.000
to 360 million bases with
approximately 15,000 genes.

00:43:44.000 --> 00:43:50.060
The 400 million bases of raw data
delivered from SequenceLab is

00:43:50.060 --> 00:43:54.840
organized into 66,000 continuous reads.

00:43:54.840 --> 00:44:01.150
We typically run a series of programs,
including some well-known algorithms like

00:44:01.160 --> 00:44:09.160
BLAST and in-house-developed solutions to
analyze each of the 66 sequence pieces.

00:44:09.380 --> 00:44:13.790
Each analysis program generally
takes somewhere between five

00:44:14.040 --> 00:44:16.460
minutes to two hours to complete.

00:44:16.840 --> 00:44:22.700
As large amounts of data has to be
passed from hard disk to memory,

00:44:22.810 --> 00:44:28.150
the data I/O speed is
extremely important for us.

00:44:29.070 --> 00:44:33.500
So for the annotation project,
we need to set up a cluster that can meet

00:44:33.650 --> 00:44:36.410
our requirements as listed in the slides.

00:44:36.450 --> 00:44:43.840
So the cluster must be able to
deliver tremendous computational power

00:44:45.470 --> 00:44:49.580
It should be easy to install and
ready to extend for the future.

00:44:49.580 --> 00:44:55.200
And we require high-quality hardware
and robust operating systems that

00:44:55.200 --> 00:44:59.260
allow most of the bioinformatics
tools to run without any problem.

00:44:59.270 --> 00:45:04.940
In addition, these applications should be
optimized to achieve the best

00:45:04.940 --> 00:45:08.020
performance on that platform.

00:45:08.020 --> 00:45:12.800
We also require sophisticated software
to manage distributed resources and

00:45:12.970 --> 00:45:16.170
thousands of computational jobs.

00:45:16.170 --> 00:45:21.550
And finally, the hardware and software
solution must be cost-effective.

00:45:22.670 --> 00:45:27.000
This is the Xserve
cluster we built in 2003.

00:45:27.000 --> 00:45:31.820
It has 75 Xserve units
running Mac OS X server.

00:45:32.120 --> 00:45:38.770
Each Xserve unit has dual G4 processors,
2 GB memory, fast disk storage,

00:45:38.840 --> 00:45:41.120
and Gigabit Ethernet.

00:45:41.190 --> 00:45:45.840
Our cluster hosts more
than 20 TB disk storage,

00:45:45.840 --> 00:45:52.610
and the cluster nodes are
managed by platform LSF.

00:45:53.720 --> 00:45:59.830
So, with the help from BioTeam and Apple,
we figured out a way to conduct

00:45:59.860 --> 00:46:02.580
a mass rapid installation.

00:46:02.580 --> 00:46:07.610
We put up an Xserve unit from
an external hard disk which

00:46:08.060 --> 00:46:10.690
contained a pre-built disk image.

00:46:11.230 --> 00:46:15.410
During the boot-up period,
a script automatically restored

00:46:15.410 --> 00:46:20.120
the image and built the operating
system on the local storage.

00:46:20.120 --> 00:46:24.190
We paralleled the installation with
four external hard disks and set up the

00:46:24.190 --> 00:46:27.090
64 cluster nodes within three hours.

00:46:30.070 --> 00:46:34.790
So Mac OS X is a BSD-based
operating system,

00:46:34.920 --> 00:46:40.780
and we feel it is very friendly to
the bioinformatics tools originally

00:46:41.400 --> 00:46:43.330
designed for Linux or UNIX.

00:46:43.410 --> 00:46:48.960
This slide shows the bioinformatics
tools available in our cluster.

00:46:49.020 --> 00:46:54.510
Most of the tools are compiled
directly from source code by ourselves.

00:46:54.630 --> 00:47:00.670
Although some of them need to be
modified a little to cope with the

00:47:00.770 --> 00:47:05.340
difference between BSD and the Linux,
it is not difficult if you have

00:47:05.560 --> 00:47:09.190
some experience with C programming.

00:47:10.920 --> 00:47:15.150
After the basic system is up,
we spend a lot of time to

00:47:15.150 --> 00:47:17.390
optimize the performance.

00:47:17.920 --> 00:47:25.300
So, as explained in the previous slides,
we focus on improving data I/O speed.

00:47:25.300 --> 00:47:29.270
For each Xserve node,
we strive the two local hard

00:47:29.270 --> 00:47:39.170
disks to build a RAID 0 set,
so that it provides 240 GB local

00:47:39.170 --> 00:47:41.090
storage at an average speed of 66 MB/s.

00:47:42.100 --> 00:47:47.020
We store most of the blast database
locally on each node to reduce

00:47:47.020 --> 00:47:53.390
NFS traffic and connect all the
XServe units in gigabit Ethernet.

00:47:54.380 --> 00:47:59.360
On software level,
we engage to find the MPI-enabled

00:47:59.360 --> 00:48:03.600
version to replace the normal version.

00:48:03.600 --> 00:48:08.300
If the application itself
supports multi-CPU execution,

00:48:08.300 --> 00:48:11.860
we instruct the users to
run with prop options.

00:48:11.860 --> 00:48:15.860
For example,
to specify -A for NCBI blast so

00:48:15.860 --> 00:48:19.890
that it runs in multi-threaded mode.

00:48:21.090 --> 00:48:29.060
In addition to these efforts,
we also optimize at the compiler level.

00:48:29.080 --> 00:48:34.600
With proper GCC options,
a lot of bioinformatics tools can speed

00:48:34.670 --> 00:48:42.240
up by about 40% if they were originally
made with the default configuration.

00:48:44.420 --> 00:48:47.760
Different from other
simple biology analyses,

00:48:47.850 --> 00:48:53.410
our C-squared genome annotation
involves running a series of programs

00:48:53.410 --> 00:48:57.580
for each of the 66 sequence pieces.

00:48:57.580 --> 00:49:02.020
Each step of the analysis must
be automated so that the entire

00:49:02.020 --> 00:49:05.100
process won't stop in the middle.

00:49:05.100 --> 00:49:10.060
BioPipe is an open-source workflow
management software maintained

00:49:10.060 --> 00:49:11.940
by the OpenBio community.

00:49:12.430 --> 00:49:15.270
It was designed to address
some of the complex issues in

00:49:15.350 --> 00:49:17.250
large-scale biology analysis.

00:49:17.450 --> 00:49:21.970
Our group contributed to that
project and used BioPipe to manage

00:49:22.100 --> 00:49:24.390
our genome annotation project.

00:49:24.800 --> 00:49:32.300
BioPipe is entirely written in Perl,
and Mac OS X Developer Tools CD provides

00:49:32.300 --> 00:49:36.210
all the necessary tools
we needed for development.

00:49:37.360 --> 00:49:44.240
This screenshot shows the job
status in our cluster in April 2004.

00:49:44.370 --> 00:49:49.740
There are more than 40,000 jobs in
the queue and over 100 are running.

00:49:49.790 --> 00:49:54.000
This is the situation we need
to deal with almost every day.

00:49:54.590 --> 00:50:00.950
We use platform LSF to manage
the thousands of jobs generated

00:50:00.950 --> 00:50:03.580
by BioPipe effectively.

00:50:03.980 --> 00:50:08.040
LSF is the most robust
distributed resource management

00:50:08.120 --> 00:50:10.340
software we have ever used.

00:50:10.340 --> 00:50:14.800
With Mac OS X server and LSF,
we are able to perform

00:50:14.800 --> 00:50:21.940
large-scale biogenesis without
worrying about system stability.

00:50:23.550 --> 00:50:26.740
Setting up the cluster
is a one-time task,

00:50:26.740 --> 00:50:29.640
and maintenance is the
administrator's everyday work.

00:50:29.810 --> 00:50:32.820
Luckily,
we have a few effective tools that help

00:50:32.820 --> 00:50:35.620
us a lot in daily system administration.

00:50:35.740 --> 00:50:38.820
One tool I would like to
mention is Server Monitor.

00:50:38.960 --> 00:50:44.900
It took us only two hours to set up the
Server Monitor so that it provides an

00:50:45.150 --> 00:50:49.290
overview for all the 75 XServe units.

00:50:49.630 --> 00:50:53.400
We only need to configure the
monitoring server with the

00:50:53.400 --> 00:50:56.920
IP address of each cluster node.

00:50:58.610 --> 00:51:06.640
The server monitor retrieves
all the important hardware

00:51:06.640 --> 00:51:09.580
information for us in a few seconds.

00:51:09.580 --> 00:51:16.660
If we were using other UNIX systems,
the administrator would have to manually

00:51:16.660 --> 00:51:22.460
log into each node for configuration,
which would take much longer to complete.

00:51:22.620 --> 00:51:27.180
The server monitor also features a
hard disk profaner walling that is

00:51:27.400 --> 00:51:31.800
very useful for us to quickly identify
the disk with potential problems.

00:51:31.850 --> 00:51:35.450
We also use the server monitor
to collect per-node information,

00:51:35.460 --> 00:51:40.670
such as serial number or MAC address
for each network adapter.

00:51:41.940 --> 00:51:47.810
Another important GUI tool is
Apple Remote Desktop that enables

00:51:47.840 --> 00:51:53.110
the administrator to operate a
remote machine as if it is local.

00:51:53.440 --> 00:51:58.820
This tool is neat for headless Xserve,
especially the new Xserve G5,

00:51:58.820 --> 00:52:00.800
without a VGA card.

00:52:00.940 --> 00:52:04.320
The most charming feature of
Apple Remote Desktop is the

00:52:04.420 --> 00:52:08.120
ability to install software
packages by drag-and-drop

00:52:08.120 --> 00:52:10.790
simultaneously on multiple nodes.

00:52:10.800 --> 00:52:15.040
We find this feature extremely
useful for us when doing

00:52:15.040 --> 00:52:17.640
cluster-wide system upgrades.

00:52:17.740 --> 00:52:26.590
We are able to update the 64-cluster node
to a newer version within 30 minutes.

00:52:27.100 --> 00:52:32.220
Our previous experience of managing
a similar-sized alpha system involves

00:52:32.320 --> 00:52:36.550
doing updates from command line,
and it took us at least a

00:52:36.550 --> 00:52:38.900
half day for the same task.

00:52:40.530 --> 00:52:44.650
There are other command line
tools we use frequently to

00:52:44.650 --> 00:52:47.500
facilitate cluster management.

00:52:48.290 --> 00:52:53.700
We are glad to find that Panther has
great support for command line tools.

00:52:53.700 --> 00:53:01.080
Almost every GUI application has its
command line interface accordingly.

00:53:01.150 --> 00:53:05.510
Just to mention a few of my favorites:
SSH is used to log into

00:53:05.520 --> 00:53:07.920
the remote node every day.

00:53:07.920 --> 00:53:11.240
Bash has been set as default in Panther.

00:53:11.240 --> 00:53:15.020
R-Sync is the core utility
for data synchronization,

00:53:15.020 --> 00:53:19.680
we use DSH for distributed share.

00:53:20.680 --> 00:53:26.120
So to summarize our experience
with XSERV Cluster in TRL.

00:53:26.230 --> 00:53:31.220
Basically the XSERV unit provides
superior computational power we expected.

00:53:31.220 --> 00:53:39.370
The cluster was quickly set up,
and we are able to run and optimize

00:53:39.380 --> 00:53:41.720
most of the bioinformatic tools.

00:53:41.750 --> 00:53:45.580
The entire cluster is robust for
our genome annotation project,

00:53:45.700 --> 00:53:51.190
and the daily administrative work
is made easy with sophisticated

00:53:51.190 --> 00:53:57.280
Mac OS X monitoring tools and
open source command line tools.

00:53:57.300 --> 00:53:58.800
Thank you.

00:54:03.800 --> 00:54:08.200
Thank you.

00:54:08.200 --> 00:54:09.160
Well, thank you very much.

00:54:09.270 --> 00:54:12.240
And I'm just going to point out
a few places you can get more

00:54:12.240 --> 00:54:16.520
information while we're bringing some
of the Apple people up here for Q&A.

00:54:16.550 --> 00:54:21.380
And in terms of questions,
if you could please use the microphones

00:54:21.380 --> 00:54:24.910
if you've got any questions.

00:54:25.090 --> 00:54:30.580
And in terms of contacts, Liz,
Robert Kerr,

00:54:30.580 --> 00:54:37.410
our Science Partnership Manager,
and Elias Stupka,

00:54:37.410 --> 00:54:42.350
for TLL Bioinformatics Program Manager,
or Chen Peng, Senior System Engineer.

00:54:42.570 --> 00:54:46.770
Other resources,
Liz mentioned the website.

00:54:46.980 --> 00:54:49.550
There's the Apple Science websites.

00:54:49.730 --> 00:54:53.380
And other related sessions
you may be interested in,

00:54:53.420 --> 00:54:56.880
I just want to mention specifically
the Science Lounge on the fourth floor.

00:54:56.890 --> 00:54:58.030
You should check that out.

00:54:58.480 --> 00:55:02.290
There's going to be roundtable
discussions ongoing throughout

00:55:02.380 --> 00:55:03.260
the conference there.

00:55:03.400 --> 00:55:04.730
All right.

00:55:04.850 --> 00:55:10.000
So let's take the first
question over here.