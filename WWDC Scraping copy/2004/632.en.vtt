WEBVTT

00:00:12.450 --> 00:00:13.300
Good morning.

00:00:13.390 --> 00:00:16.450
So I'm standing between you and lunch,
I believe,

00:00:16.450 --> 00:00:21.380
so we'll try and make this either
an opportunity for you to get those

00:00:21.500 --> 00:00:26.710
juices going to look forward to
lunch or certainly try and make

00:00:26.710 --> 00:00:30.490
this an interesting session for you.

00:00:31.920 --> 00:00:35.230
As mentioned,
I'm the Director of Engineering for

00:00:35.230 --> 00:00:38.430
Pro Video Applications
that includes Final Cut,

00:00:38.520 --> 00:00:41.950
Final Cut Express, Final Cut Pro,
Pro Video Codex,

00:00:41.970 --> 00:00:46.460
and some other projects within
our Pro Applications division.

00:00:46.460 --> 00:00:51.380
I'm going to be talking today
about the Xsan product and how

00:00:51.380 --> 00:00:54.400
it fits into the video workflow.

00:00:54.400 --> 00:01:00.560
And although I will be talking from
the perspective of Final Cut Pro,

00:01:00.560 --> 00:01:01.880
it actually is very applicable.

00:01:01.960 --> 00:01:06.340
It's applicable to anyone in the
applications domain who's dealing

00:01:06.340 --> 00:01:08.840
with media in an Xsan environment.

00:01:08.840 --> 00:01:12.470
It's also, I think,
you'll find it appropriate for anyone

00:01:12.550 --> 00:01:17.200
who's dealing with the creative
professional marketplace in general.

00:01:17.200 --> 00:01:21.020
There's a number of different
tools that fall into this category,

00:01:21.140 --> 00:01:23.840
and Xsan is an excellent
tool in this space.

00:01:23.840 --> 00:01:27.330
But it provides some interesting
challenges as you're dealing with media,

00:01:27.340 --> 00:01:29.240
and we'll talk a lot about that today.

00:01:29.240 --> 00:01:31.890
Certainly,
folks who are interested in Xsan,

00:01:31.900 --> 00:01:31.900
I think, are going to be talking
about the Xsan product.

00:01:31.940 --> 00:01:34.060
And folks who are dealing
with site administration,

00:01:34.080 --> 00:01:36.000
I think,
will find this interesting as well,

00:01:36.000 --> 00:01:40.410
because setting up this environment
is actually the biggest challenge

00:01:40.560 --> 00:01:42.490
that we'll be talking about.

00:01:42.500 --> 00:01:45.550
So as we get into the talk,
first I want to talk a little bit about,

00:01:45.550 --> 00:01:49.180
kind of set the context
around how video editing,

00:01:49.180 --> 00:01:53.140
you know, kind of the view of video
editing from the editor's view,

00:01:53.140 --> 00:01:55.200
from the kind of creative
professional's view,

00:01:55.200 --> 00:01:56.860
and what their expectations are.

00:01:56.860 --> 00:02:01.240
And then we're going to get into how
this applies to Xsan environment.

00:02:01.920 --> 00:02:05.860
And how shared storage and work
group computing kind of changes

00:02:05.860 --> 00:02:08.720
that model and impacts that model
in a pretty significant way.

00:02:08.720 --> 00:02:11.020
And then we'll finish up
with a little bit of thinking

00:02:11.100 --> 00:02:12.540
about where we go from there.

00:02:14.270 --> 00:02:19.190
So first to get into video editing today,
I think one thing to understand in

00:02:19.190 --> 00:02:23.940
the marketplace right now is that the
focus is around as much performance

00:02:23.970 --> 00:02:27.080
and real-time capability as you can
possibly get out of the hardware.

00:02:27.080 --> 00:02:30.460
That's certainly what drives
the market in a big way.

00:02:30.460 --> 00:02:32.560
They're looking for the
fastest hardware they can get,

00:02:32.560 --> 00:02:33.990
the fastest storage they can get.

00:02:34.020 --> 00:02:36.460
They're looking for as
many streams of video,

00:02:36.460 --> 00:02:39.330
as many effects,
as much real-time capability as they

00:02:39.330 --> 00:02:41.450
can possibly get out of the system.

00:02:42.960 --> 00:02:47.340
And that's driven around a number
of different kind of workflows,

00:02:47.340 --> 00:02:51.600
both from the kind of media that
people are dealing with and the kind of

00:02:51.600 --> 00:02:54.000
people that are working with the media.

00:02:54.000 --> 00:02:58.930
So that's everything from the
individual independent production house,

00:02:58.930 --> 00:03:03.770
people who are event videographers
who are producing corporate videos,

00:03:03.770 --> 00:03:07.900
to the independent filmmakers,
to small work groups of people

00:03:07.900 --> 00:03:11.430
who may be working on short-form
commercials or movie trailers.

00:03:11.440 --> 00:03:18.060
trailers or doing music videos,
all the way up to broadcast television,

00:03:18.180 --> 00:03:25.640
how-to shows on HDTV and movies that you
go to see at your local movie theater.

00:03:25.640 --> 00:03:31.030
All of that is expected out of
today's existing tools and hardware.

00:03:31.140 --> 00:03:36.180
It's a huge range of expectations,
and it drives a large number

00:03:36.240 --> 00:03:39.710
of different kinds of media
that people have to work from.

00:03:39.760 --> 00:03:43.690
If you're dealing with film,
you're obviously not working with

00:03:43.710 --> 00:03:47.220
film directly in the computer,
but taking it into some

00:03:47.220 --> 00:03:48.900
type of offline format.

00:03:48.900 --> 00:03:51.670
But many of,
for news gathering and for other things,

00:03:51.670 --> 00:03:55.970
they're dealing with DV25,
your standard camcorders, if you will,

00:03:56.010 --> 00:04:00.000
all the way up to your news production,
high definition,

00:04:00.000 --> 00:04:05.130
uncompressed standard definition for TV,
uncompressed high definition,

00:04:05.210 --> 00:04:09.520
as well as other types of
media like audio and stills.

00:04:09.870 --> 00:04:12.390
One thing that's really interesting
to consider as you're looking

00:04:12.390 --> 00:04:16.170
at the performance issues around
dealing with this media is the

00:04:16.170 --> 00:04:21.440
kind of data rates that you're
dealing with for this kind of stuff.

00:04:23.190 --> 00:04:28.210
For your conventional DV25 or
your standard mini DV camcorders,

00:04:28.210 --> 00:04:35.320
it's in the range of 2.8 to 3.6
megabits per second of information.

00:04:35.320 --> 00:04:39.380
And as you go up through the
different types of media from

00:04:39.380 --> 00:04:43.730
DVC Pro 50 and DVC Pro HD,
the data rates, of course,

00:04:43.730 --> 00:04:45.380
go up appreciably.

00:04:45.380 --> 00:04:48.270
When you get to uncompressed,
things get really complicated

00:04:48.320 --> 00:04:51.860
because you're dealing with just
monstrous amounts of information.

00:04:52.340 --> 00:04:56.050
The good news as compared to
things like the various DV formats

00:04:56.050 --> 00:04:57.950
is these are uncompressed.

00:04:57.970 --> 00:05:01.460
So the tradeoff there is
computational complexity,

00:05:01.460 --> 00:05:05.760
if you will,
having to decompress and recompress that

00:05:05.760 --> 00:05:08.860
information as you're dealing with it,
as opposed to moving just

00:05:08.860 --> 00:05:10.100
large quantities of bits.

00:05:10.100 --> 00:05:13.980
For all this data,
I want to remind you again that people

00:05:13.980 --> 00:05:18.590
today are looking to get as many
streams of video and effects as they

00:05:18.590 --> 00:05:21.360
possibly can through the pipeline.

00:05:21.470 --> 00:05:24.770
And today, with Final Cut Pro,
for example,

00:05:24.840 --> 00:05:28.030
we deal with a number of streams
of video of various types at a

00:05:28.030 --> 00:05:32.370
real-time level without any additional
hardware on a dual processor G5.

00:05:32.400 --> 00:05:35.980
So people expect that if they're
going through the creative process

00:05:35.980 --> 00:05:39.420
that they're going to be dealing
with lots of streams of video and

00:05:39.480 --> 00:05:43.910
they're going to be doing lots of
things and expect real-time behavior.

00:05:45.410 --> 00:05:47.860
All of the video, of course,
I think it's worth mentioning,

00:05:47.860 --> 00:05:51.210
kind of in contrast,
that there's also a lot of

00:05:51.210 --> 00:05:53.190
streams of audio to be dealt with.

00:05:53.430 --> 00:05:58.830
But it's really interesting as you
look at the upwards of 100 megabytes

00:05:58.850 --> 00:06:04.820
per second for uncompressed HD,
you're only talking 192

00:06:04.900 --> 00:06:08.720
kilobytes per second for audio.

00:06:08.720 --> 00:06:12.080
But usually people are dealing with many,
many streams of audio at a time.

00:06:12.080 --> 00:06:16.300
But there's a very large range of
expected data rates for the kind

00:06:16.400 --> 00:06:18.320
of media that you're dealing with.

00:06:20.420 --> 00:06:23.330
In a typical project,
and this is a project in Final Cut,

00:06:23.340 --> 00:06:28.440
that I think it again is worth
noting that typically there's

00:06:28.440 --> 00:06:31.680
a number of streams of video
that people are dealing with.

00:06:31.710 --> 00:06:34.600
If you look at something
like a commercial today,

00:06:34.670 --> 00:06:38.740
a commercial actually has lots of
streams of video going on at once.

00:06:38.740 --> 00:06:41.800
There's usually various
motion graphics pieces.

00:06:41.800 --> 00:06:45.690
There's multiple camera attacks
that are coming in and they're cross

00:06:45.690 --> 00:06:47.940
fading or moving across the screen.

00:06:47.940 --> 00:06:49.760
There's a lot of stuff people are doing.

00:06:49.760 --> 00:06:54.240
And you may not typically think of,
in the normal process,

00:06:54.240 --> 00:06:57.280
how many streams of media
that people are dealing with,

00:06:57.280 --> 00:06:58.130
but it's quite a lot.

00:06:58.150 --> 00:07:01.310
One thing that's very,
very common in the case of audio is

00:07:01.310 --> 00:07:05.520
that people are dealing with usually
upwards of 24 tracks of audio.

00:07:05.520 --> 00:07:09.370
Certainly when it all gets done,
it all comes down to one stream of

00:07:09.370 --> 00:07:11.780
video and maybe a stereo pair of sound.

00:07:11.780 --> 00:07:14.110
But when they're going
through the creative process,

00:07:14.110 --> 00:07:17.030
there's usually lots of different
layers of the stuff that is getting

00:07:17.090 --> 00:07:18.990
composited together at various levels.

00:07:19.220 --> 00:07:23.680
And as they're working with it,
they expect to see it,

00:07:23.840 --> 00:07:26.090
listen to it in real time.

00:07:27.010 --> 00:07:33.650
So it all comes down to really the
way today's model of creating video

00:07:33.660 --> 00:07:37.760
is it's very much a single system
workflow that people have really

00:07:37.760 --> 00:07:43.060
optimized their process around very high
performance single system solutions.

00:07:43.960 --> 00:07:47.320
And while they may be in an environment
with many different machines,

00:07:47.320 --> 00:07:50.130
you know, today most of the media
tends to be moved around,

00:07:50.130 --> 00:07:53.590
you know, via the network or, you know,
by taking that little firewire

00:07:53.590 --> 00:07:57.000
drive and going from one system
and doing the sneaker net thing.

00:07:57.770 --> 00:08:01.690
And the downside to that model
is that you end up getting a huge

00:08:01.690 --> 00:08:06.040
amount of media that's duplicated
all around the enterprise.

00:08:06.040 --> 00:08:09.320
It's not very efficiently used and
it's not very effectively used.

00:08:09.860 --> 00:08:13.320
The upside is you've got a huge amount
of power that you get out of it.

00:08:13.820 --> 00:08:16.050
And you can't have that single
system because you can make a lot

00:08:16.050 --> 00:08:18.590
of assumptions about being able to
use every bit of that bandwidth.

00:08:19.690 --> 00:08:23.410
The other downside to having
all that media duplicated around

00:08:23.470 --> 00:08:27.590
the environment is that you,
you know, dealing with backups because

00:08:27.650 --> 00:08:32.250
it's all distributed around your
enterprise or infrastructure

00:08:32.370 --> 00:08:36.230
and dealing with media security,
which tends to be a really big issue is,

00:08:36.340 --> 00:08:38.730
you know, for example,
in for the folks who are

00:08:38.760 --> 00:08:41.380
doing maybe trailers or,
you know, trying to do, you know,

00:08:41.380 --> 00:08:42.380
unreleased movies.

00:08:42.830 --> 00:08:43.380
They're trying to keep.

00:08:43.550 --> 00:08:47.020
You know, pretty tight control over
that media before it gets out,

00:08:47.030 --> 00:08:49.650
you know, gets leaked out and put
on the on the Internet.

00:08:50.370 --> 00:08:53.520
So doing that when all that media
is being sneaker netted around

00:08:53.520 --> 00:08:57.130
anyway in a firewire drives makes
it even easier to have that sneaker

00:08:57.130 --> 00:08:59.270
netted right outside the front door.

00:09:00.350 --> 00:09:04.270
And there's certainly a number of other
challenges that a single system workflow,

00:09:04.270 --> 00:09:05.140
you know, has.

00:09:05.580 --> 00:09:07.910
It just really makes the processes
you're working as a group very,

00:09:07.910 --> 00:09:08.660
very difficult.

00:09:09.320 --> 00:09:10.660
And that's where XAN comes in.

00:09:11.640 --> 00:09:12.680
XAN really provides an opportunity for
you to be able to do a lot of things.

00:09:13.400 --> 00:09:17.890
XAN really provides an opportunity
for multiple clients to work together

00:09:17.890 --> 00:09:22.080
to share data over what's the really
most important part of this thing

00:09:22.090 --> 00:09:25.230
is a very high speed interconnect.

00:09:27.530 --> 00:09:32.160
The difference today when you're dealing
with a network file system solution

00:09:32.160 --> 00:09:35.050
in video is it just isn't workable.

00:09:35.060 --> 00:09:40.140
We talked about the number of streams of
video that people expect to work with.

00:09:40.140 --> 00:09:43.840
Over a network infrastructure,
typically you just can't

00:09:43.860 --> 00:09:45.440
get that type of flow.

00:09:45.440 --> 00:09:50.180
The Xsan environment really provides
an architecture and a design that makes

00:09:50.290 --> 00:09:57.060
it possible for media-rich environments
to be able to share information because

00:09:57.220 --> 00:10:02.920
you get pretty much the benefit of local
speed interconnect because of the fiber

00:10:02.920 --> 00:10:08.520
and the way that the file system in Xsan
is designed relative to how something

00:10:08.520 --> 00:10:11.640
like a network file system is designed.

00:10:14.040 --> 00:10:17.510
Certainly,
as we talked about the negatives,

00:10:17.560 --> 00:10:20.880
there's a lot of single
system environment.

00:10:20.880 --> 00:10:24.510
As we move to shared storage,
there's a lot of benefit here.

00:10:24.510 --> 00:10:28.410
Being able to get to the point where
you can actually share media assets

00:10:28.420 --> 00:10:30.700
within an organization is a big deal.

00:10:30.700 --> 00:10:33.050
If you're dealing in broadcast,
for example,

00:10:33.110 --> 00:10:36.670
you may have a lot of stock material
that you deal with that gets brought

00:10:36.770 --> 00:10:40.100
in that you really want to be
able to use over and over again.

00:10:40.100 --> 00:10:43.700
If you have to copy literally
terabytes of data around to each

00:10:43.700 --> 00:10:47.870
one of your workstations in order to
be able to make that stuff useful,

00:10:47.870 --> 00:10:51.880
it makes it very ineffective and
a horrid use of your storage.

00:10:51.880 --> 00:10:56.830
The other advantage of Xsan's
shared storage environment is the

00:10:56.830 --> 00:11:00.080
ability to consolidate that storage.

00:11:00.080 --> 00:11:00.680
Typically, it's a very good idea to have
a shared storage environment.

00:11:00.680 --> 00:11:04.580
You have a lot of material that you're
sharing amongst groups of people,

00:11:04.640 --> 00:11:07.100
not just what you're
working on right now,

00:11:07.100 --> 00:11:11.660
but a large amount of stock material
or material that's potentially

00:11:11.660 --> 00:11:14.000
coming in from various sources.

00:11:14.000 --> 00:11:18.450
Again, avoiding having to have the large
capacity storage on each of those

00:11:18.450 --> 00:11:20.740
workstations is a really big plus.

00:11:20.740 --> 00:11:22.240
It saves a considerable amount of money.

00:11:24.010 --> 00:11:31.540
The other big benefit is as you look at
the economics of video environment that

00:11:31.670 --> 00:11:36.370
one of the biggest and most expensive
pieces these days is getting to be

00:11:36.370 --> 00:11:38.480
the acquisition devices themselves,
the decks.

00:11:38.480 --> 00:11:44.200
Particularly as you start talking
about high definition or film.

00:11:45.060 --> 00:11:48.380
Those pieces of equipment are
somewhere on the order of 50 to

00:11:48.380 --> 00:11:52.870
100,000 to potentially up to a
million dollars in order to be able to

00:11:52.870 --> 00:11:55.140
acquire that media into digital form.

00:11:55.140 --> 00:11:57.940
It's not the kind of thing you're
going to stick on every one of the

00:11:57.990 --> 00:11:59.980
workstations within your environment.

00:11:59.980 --> 00:12:04.670
So being able to get to the point
where you get shared storage,

00:12:04.670 --> 00:12:10.000
you get also the benefit of being
able to reduce the number of equipment

00:12:10.000 --> 00:12:12.900
costs that you have for acquisition.

00:12:12.900 --> 00:12:14.350
Because you can centralize that.

00:12:14.420 --> 00:12:14.980
Get the materials.

00:12:15.060 --> 00:12:17.060
Reel into a place where
people can share it.

00:12:17.060 --> 00:12:21.560
And avoid having to have lots
of redundancy as far as that

00:12:21.560 --> 00:12:24.260
kind of equipment is concerned.

00:12:24.460 --> 00:12:29.280
Obviously the benefits of being able to
now have that information there means

00:12:29.280 --> 00:12:33.270
that you can actually start putting
together workflows within the workgroup.

00:12:33.380 --> 00:12:36.240
It means you can get material that
can go from editor to editor or

00:12:36.310 --> 00:12:39.860
to creative professional for the
different parts of the creative process.

00:12:40.020 --> 00:12:43.820
Because they have the ability now to
be able to all get to the same media.

00:12:43.940 --> 00:12:44.150
And then the other big benefit
is that you can get the same

00:12:44.150 --> 00:12:44.360
information from the same media.

00:12:44.440 --> 00:12:44.940
And that's the benefit of
having the same information.

00:12:44.940 --> 00:12:49.340
As I talked about a little bit earlier,
the issues of single system workflows is

00:12:49.360 --> 00:12:52.040
that the security is a real challenge.

00:12:52.080 --> 00:12:57.580
That sneaker net approach of moving media
around is a big problem in areas that

00:12:57.580 --> 00:13:03.260
are dealing with potentially unreleased
material movies or other things.

00:13:03.260 --> 00:13:06.460
And being able to get to the point
where because you now have central

00:13:06.460 --> 00:13:10.290
control of your media and being
able to start applying the kinds of

00:13:10.290 --> 00:13:14.820
permission capabilities that a Unix
system and a shared system can have.

00:13:14.820 --> 00:13:18.950
storage system enable means that
you also can start to control

00:13:19.080 --> 00:13:20.960
the security of your information.

00:13:20.960 --> 00:13:23.210
Being able to make sure that
you can say who it is that

00:13:23.210 --> 00:13:27.180
can actually see the material,
who is it that's allowed to change it,

00:13:27.180 --> 00:13:30.750
and basically get to the point
where you have a lot more

00:13:30.750 --> 00:13:33.240
manageability of your assets.

00:13:33.240 --> 00:13:35.220
And of course,
probably the most important part of

00:13:35.220 --> 00:13:37.580
this whole thing is finally being
able to get to the point where,

00:13:37.660 --> 00:13:39.940
because all your materials together,
that it becomes actually

00:13:39.940 --> 00:13:42.390
feasible to back it all up.

00:13:43.350 --> 00:13:46.540
However, with all those good things,
there's a number of things to

00:13:46.540 --> 00:13:49.300
consider when you're dealing with
putting together a Xsan environment.

00:13:49.370 --> 00:13:51.220
One is performance.

00:13:51.320 --> 00:13:55.480
Remember, we talked about single system
performance or what people expect

00:13:55.480 --> 00:13:57.300
today in the creative process.

00:13:57.300 --> 00:13:59.790
They're getting every single
ounce of power that they

00:13:59.790 --> 00:14:01.290
possibly can get out of that.

00:14:01.300 --> 00:14:03.300
As soon as you try and
distribute that now,

00:14:03.300 --> 00:14:07.390
one of the challenges is trying to
rein in and control the ability to

00:14:07.400 --> 00:14:09.290
continue to get that kind of performance.

00:14:09.300 --> 00:14:12.300
The other issue is
dealing with redundancy.

00:14:12.300 --> 00:14:14.430
Shared storage is great
because you can all share it,

00:14:14.430 --> 00:14:17.300
but you now have the opportunity
for single point of failure.

00:14:17.300 --> 00:14:20.550
In that situation,
you need to be thinking about what do

00:14:20.640 --> 00:14:25.020
you do to make sure that you don't put
your enterprise at risk because you

00:14:25.020 --> 00:14:27.300
now have a single point of failure.

00:14:27.300 --> 00:14:29.300
Those individual workstations are great.

00:14:29.300 --> 00:14:31.580
If one went down,
you still have the other five of

00:14:31.580 --> 00:14:33.300
them that you had up and running.

00:14:33.300 --> 00:14:37.460
But again, this is one of these,
how do you manage the tradeoffs of

00:14:37.460 --> 00:14:39.300
being able to get the shared storage?

00:14:39.300 --> 00:14:43.230
Being able to get that sharing and
make sure that you don't put yourself,

00:14:43.230 --> 00:14:45.300
enterprise at risk in the process.

00:14:47.250 --> 00:15:06.520
Security, while it's a really important
thing to get in there,

00:15:06.520 --> 00:15:06.520
it's a really hard problem to solve.

00:15:06.520 --> 00:15:06.520
And we're going to talk a little bit
about what some of the issues are there.

00:15:06.520 --> 00:15:06.520
But I want to prepare you that
getting and putting together

00:15:06.520 --> 00:15:06.520
the security infrastructure that
you need in terms of managing

00:15:06.520 --> 00:15:06.520
multiple users is very difficult.

00:15:06.860 --> 00:15:11.680
There are a lot of challenges today in
terms of dealing with collaboration.

00:15:11.730 --> 00:15:14.280
It's a real plus,
but you've got to think it through

00:15:14.400 --> 00:15:18.030
ahead of time to understand what it is
you want to try and accomplish here.

00:15:18.040 --> 00:15:22.030
Let's start with performance first.

00:15:25.010 --> 00:15:29.410
The goal in a Xsan environment
really is to get back,

00:15:29.610 --> 00:15:32.820
trying to make sure that you can get
to that single system performance.

00:15:32.890 --> 00:15:34.900
That's what your editors
are going to expect,

00:15:34.900 --> 00:15:37.370
that's what your creative
professionals and your enterprise

00:15:37.370 --> 00:15:40.320
is going to expect because you want
to be able to take advantage of the

00:15:40.320 --> 00:15:45.200
creativity that being able to do all
these things in real time enable.

00:15:45.660 --> 00:15:50.080
The challenge is you've got to be
thinking about now that you are spreading

00:15:50.080 --> 00:15:54.460
potentially the performance load or
the expectations with a large number

00:15:54.690 --> 00:15:57.140
of clients within your environment.

00:15:57.140 --> 00:16:02.040
Let's say you're putting together
a five system Xsan and you're all

00:16:02.040 --> 00:16:05.100
going to some set of central storage.

00:16:05.100 --> 00:16:10.040
You map that against five individual
systems that had their own local storage.

00:16:10.040 --> 00:16:12.300
Remember,
there's one common element in that,

00:16:12.300 --> 00:16:14.470
which is the storage,
which is now getting hit

00:16:14.490 --> 00:16:15.640
by five times as many.

00:16:15.640 --> 00:16:19.890
People as it would be if you had
them all completely isolated.

00:16:19.900 --> 00:16:22.560
And so you need to make sure
you understand what each

00:16:22.560 --> 00:16:25.890
of the clients within that
environment are actually doing.

00:16:26.120 --> 00:16:28.730
What kind of media are
they actually working with?

00:16:28.830 --> 00:16:33.820
And how many streams of video or
media are they typically dealing with

00:16:33.830 --> 00:16:36.170
in the projects that they're doing?

00:16:36.180 --> 00:16:40.320
Like I said, if you're talking about
something like commercials,

00:16:40.320 --> 00:16:44.520
commercials tend to be a good example
where lots of streams of video.

00:16:44.520 --> 00:16:48.660
As you see these things on TV,
it's all about transitioning

00:16:48.660 --> 00:16:51.200
between lots of different shots.

00:16:51.260 --> 00:16:53.210
There's a lot of motion going,
a lot of activity.

00:16:53.220 --> 00:16:57.610
If you look at something like
more of a conventional film,

00:16:57.610 --> 00:17:02.800
you tend not to get quite the large
number of streams that you deal

00:17:02.800 --> 00:17:05.100
with because you're dealing with
a lot more long form material.

00:17:05.100 --> 00:17:08.960
But you have to look at the kinds
of things that you're doing and

00:17:08.960 --> 00:17:11.040
factor that into the process.

00:17:11.040 --> 00:17:15.340
You need to kind of go back to that
graph that I showed earlier in the slides

00:17:15.410 --> 00:17:20.030
and map the kinds of things that you're
doing against the size of the streams

00:17:20.030 --> 00:17:25.490
and the number of streams to understand,
what exactly you're doing

00:17:25.490 --> 00:17:28.070
in terms of the data flow.

00:17:29.350 --> 00:17:33.400
One of the things that you should also
consider as you're dealing with single,

00:17:33.510 --> 00:17:37.200
trying to get to single system
performance is that in your fiber

00:17:37.200 --> 00:17:42.370
infrastructure for something like a Xsan,
your switch is going to be your friend.

00:17:42.380 --> 00:17:44.020
It needs to be your friend.

00:17:44.020 --> 00:17:49.280
It's really one of the most important
components in the infrastructure.

00:17:49.280 --> 00:17:52.570
And the reason is,
its job is to help isolate traffic

00:17:52.570 --> 00:17:56.820
from each of those individual systems
in the Xsan and the individual

00:17:56.820 --> 00:17:58.920
components of your storage.

00:17:59.500 --> 00:18:02.750
And the more parallelism and
the more isolation that you

00:18:02.750 --> 00:18:06.910
get between those components,
the more throughput you'll end up being

00:18:06.910 --> 00:18:09.780
able to get through the whole network.

00:18:09.800 --> 00:18:13.410
Basically, the more things bottleneck,
the more things end up

00:18:13.490 --> 00:18:17.320
going through one pipe,
the less total throughput

00:18:17.320 --> 00:18:22.470
and total capability that
you get in your environment.

00:18:22.820 --> 00:18:25.950
The ability for your switch
to isolate is really,

00:18:25.950 --> 00:18:26.780
really important.

00:18:26.780 --> 00:18:31.050
So as you're looking at that
part of your expenditure,

00:18:31.200 --> 00:18:35.370
one, you'll find out, quite shockingly,
that the switch is probably going

00:18:35.450 --> 00:18:38.400
to be one of the most expensive
pieces of equipment you buy.

00:18:38.400 --> 00:18:40.490
It's going to be probably more
expensive than your storage.

00:18:40.530 --> 00:18:42.800
It's going to be more expensive
than any one of your computers.

00:18:42.800 --> 00:18:45.380
It's certainly going to be more
expensive than the software.

00:18:46.700 --> 00:18:50.770
It is going to be something that
you should be prepared that is

00:18:50.830 --> 00:18:52.820
going to be a very costly piece.

00:18:52.820 --> 00:18:55.960
And you need to think ahead
about how many clients am I going

00:18:55.970 --> 00:18:57.700
to have in the environment?

00:18:57.700 --> 00:19:03.060
How am I going to put my storage together
and how many different strands of fiber

00:19:03.060 --> 00:19:07.850
am I going to be running ultimately
in order to be able to get the maximum

00:19:07.850 --> 00:19:10.580
amount of data through the system?

00:19:10.580 --> 00:19:12.490
You've got to do the math.

00:19:12.560 --> 00:19:15.350
Meaning,
as I talked about just a moment ago,

00:19:15.350 --> 00:19:16.580
you've got to look back.

00:19:16.700 --> 00:19:19.700
What are the clients in
your environment doing?

00:19:19.700 --> 00:19:22.680
What kind of media are they working with?

00:19:22.770 --> 00:19:25.230
And how many streams of
media are they dealing with?

00:19:25.250 --> 00:19:26.180
You've got to count audio.

00:19:26.180 --> 00:19:27.700
You've got to count the video.

00:19:27.700 --> 00:19:30.120
And you've got to kind of
do all that calculation.

00:19:30.120 --> 00:19:33.420
And unfortunately,
it's one of those things you've

00:19:33.490 --> 00:19:35.230
got to do really up front.

00:19:35.230 --> 00:19:38.650
Figure out,
multiply out total data flow within your

00:19:38.650 --> 00:19:43.520
organization and figure out how much
data is going to be driven through those

00:19:43.520 --> 00:19:46.240
strands of fiber back to the storage.

00:19:46.240 --> 00:19:48.240
And where are the
bottlenecks going to be?

00:19:48.240 --> 00:19:52.640
Always remember that,
and this is one of the typical

00:19:52.640 --> 00:19:55.560
things that gets forgotten,
is that the editors are always going

00:19:55.560 --> 00:19:57.680
to be dealing with multiple streams.

00:19:57.680 --> 00:20:00.590
And don't assume one workstation,
one stream of data.

00:20:00.680 --> 00:20:04.720
The reality is that they're dealing
with many streams because that's

00:20:04.720 --> 00:20:06.630
part of the creative process.

00:20:10.700 --> 00:20:17.400
[Transcript missing]

00:20:18.060 --> 00:20:21.480
So, typically in video,
you're dealing with pretty large files.

00:20:21.480 --> 00:20:24.790
You know, they're, you know,
certainly many, many megabytes,

00:20:24.860 --> 00:20:28.390
if not gigabytes in size, you know,
typically, depending on the media

00:20:28.390 --> 00:20:29.430
that you're dealing with.

00:20:29.510 --> 00:20:35.780
And from a perspective of impact,
you're dealing with a reasonably

00:20:35.780 --> 00:20:39.770
small number of files,
but a large amount of data.

00:20:39.780 --> 00:20:42.850
So, data is kind of coming in, you know,
if you can think of a fire hose,

00:20:42.850 --> 00:20:45.560
you know, just a huge amount of
information is coming in.

00:20:46.500 --> 00:20:50.320
But you're not dealing with
a large number of files.

00:20:50.320 --> 00:20:52.890
You're just dealing with
a large amount of data.

00:20:52.940 --> 00:20:56.050
What you have to be careful of
in environments like this is that

00:20:56.060 --> 00:21:02.690
typical computer usage workflow,
let's say email or web files or,

00:21:02.720 --> 00:21:08.640
you know, Microsoft Word documents,
these are very small files.

00:21:08.640 --> 00:21:11.880
And usually,
if you look on your hard drive,

00:21:11.880 --> 00:21:13.020
there's lots of them.

00:21:13.020 --> 00:21:16.400
And the impact between those
two different usage models

00:21:16.400 --> 00:21:17.620
is pretty significant.

00:21:17.620 --> 00:21:20.980
That, you know,
the SAN is actually extremely

00:21:21.060 --> 00:21:25.110
well tuned to be able to
deal with large file access,

00:21:25.170 --> 00:21:29.520
lots of data coming over the fiber,
but not lots of little bits

00:21:29.520 --> 00:21:31.460
of data coming over the fiber.

00:21:31.460 --> 00:21:34.940
That's not a very effective use
of that particular resource.

00:21:34.940 --> 00:21:38.040
And it gets worse when you
start mixing that data.

00:21:38.040 --> 00:21:40.420
And so when you factor in
your planning and you're

00:21:40.420 --> 00:21:43.610
looking at your infrastructure,
you know, one of the things you might,

00:21:43.610 --> 00:21:44.180
you know, think of doing is you
put in a SAN environment,

00:21:44.180 --> 00:21:48.120
as, ooh, cool, I'll share everything.

00:21:48.120 --> 00:21:51.450
Well, that may not be the wisest thing
for you to do because as you start

00:21:51.450 --> 00:21:55.360
looking at all those little file things
that are going on with your network,

00:21:55.360 --> 00:22:00.080
you could end up actually completely
taking all the performance out of

00:22:00.080 --> 00:22:02.360
your infrastructure and doing that.

00:22:02.360 --> 00:22:04.380
And if it's appropriate
for you to do that,

00:22:04.380 --> 00:22:07.510
or let's say the small files
you're dealing with are photos,

00:22:07.510 --> 00:22:10.680
because those are certainly
reasonably small files and you

00:22:10.720 --> 00:22:11.880
can have certainly a lot of those,
what you may start thinking about

00:22:11.880 --> 00:22:12.300
doing is you could have a lot of those.

00:22:12.310 --> 00:22:13.260
And if you're dealing
with a lot of those,

00:22:13.260 --> 00:22:13.690
what you may start thinking about
doing is you could have a lot of those.

00:22:13.690 --> 00:22:14.180
And if you're dealing
with a lot of those,

00:22:14.180 --> 00:22:17.720
is trying to isolate that kind of
material so that those large files

00:22:17.720 --> 00:22:21.150
and small files are actually kept
in separate places so you can get,

00:22:21.150 --> 00:22:24.740
again,
more parallelism through the process.

00:22:27.820 --> 00:22:33.440
As you move on to the next step of first
understanding just basic capacities,

00:22:33.460 --> 00:22:38.290
you want to start thinking about what
things you can do to enhance your

00:22:38.340 --> 00:22:40.370
storage capability within the Xsan.

00:22:40.380 --> 00:22:45.680
Certainly one opportunity is
being able to add more storage.

00:22:45.680 --> 00:22:50.580
More storage does not
necessarily mean more disk space,

00:22:50.580 --> 00:22:54.510
though that's certainly one of the
things you can get out of more storage.

00:22:54.940 --> 00:22:59.000
But it's really adding more storage
in terms of getting more parallel

00:22:59.000 --> 00:23:00.880
ways to be able to get to data.

00:23:00.880 --> 00:23:04.810
So it's basically more heads
or more rotating platters,

00:23:04.810 --> 00:23:08.560
if you will,
that can all be accessed in parallel.

00:23:08.560 --> 00:23:12.300
So in the case of what I'm referring
to here in terms of adding storage,

00:23:12.300 --> 00:23:16.320
the goal here around adding
storage is adding more parallelism,

00:23:16.320 --> 00:23:19.850
more ways to be able to get to
that data simultaneously rather

00:23:19.910 --> 00:23:23.660
than adding more bytes that you
can possibly put on the disk.

00:23:23.810 --> 00:23:24.920
That happens to be.

00:23:24.920 --> 00:23:26.680
So that's one of the things that
you can do to get more parallel.

00:23:26.680 --> 00:23:31.170
One of the other aspects of that is
how you actually orient your storage.

00:23:31.180 --> 00:23:35.880
One of the opportunities is looking
at spreading the load across multiple,

00:23:36.150 --> 00:23:40.030
basically multiple rotating
surfaces by striping your data.

00:23:40.060 --> 00:23:42.750
So this is standard RAID behavior.

00:23:42.810 --> 00:23:46.900
But you want to think about, again,
if you take all the capacity

00:23:46.900 --> 00:23:50.260
that you're looking for,
how can you possibly get as

00:23:50.260 --> 00:23:54.720
much of it in parallel across
multiple devices simultaneously?

00:23:54.940 --> 00:24:01.480
And you should look at striping the
information across these multiple devices

00:24:01.480 --> 00:24:03.010
as one way of being able to get there.

00:24:03.020 --> 00:24:05.920
Another way of approaching
that is actually looking

00:24:05.920 --> 00:24:07.550
at segregating your data.

00:24:07.560 --> 00:24:10.680
So if you have lots of different
media within your environment

00:24:10.680 --> 00:24:14.290
that you're dealing with,
there's a couple of capabilities

00:24:14.460 --> 00:24:19.010
that exist within XAN to really help
you there in terms of being able to

00:24:19.010 --> 00:24:21.900
isolate that media in different ways.

00:24:21.900 --> 00:24:23.620
One is the use of affinities.

00:24:24.680 --> 00:24:29.420
Affinities are a technique for
being able to effectively take a

00:24:29.530 --> 00:24:33.980
portion of the file system and tell
it to put it on specific storage.

00:24:35.480 --> 00:24:40.370
or look at the opportunity of actually
using multiple volumes as a way,

00:24:40.430 --> 00:24:45.090
kind of a more coarse-grained way
of being able to force material

00:24:45.090 --> 00:24:47.090
into different storage pools.

00:24:47.100 --> 00:24:50.480
And the kinds of things you
want to be thinking about

00:24:50.500 --> 00:24:54.400
in terms of segregation is,
again, keeping kind of the big stuff

00:24:54.400 --> 00:24:56.100
separate from the little stuff.

00:24:56.100 --> 00:24:59.650
It's kind of an easy way to
look at it because if you can

00:24:59.920 --> 00:25:02.930
take something like video,
which is, again,

00:25:03.240 --> 00:25:07.200
usually a less number of files,
but usually a large amount of

00:25:07.200 --> 00:25:11.270
data that gets streamed over time,
and separate that from potentially

00:25:11.270 --> 00:25:15.100
smaller files that are going
to be accessed more frequently,

00:25:15.100 --> 00:25:18.100
one example of that is
certainly audio and video.

00:25:18.100 --> 00:25:20.540
They have different,
substantially different data rates,

00:25:20.620 --> 00:25:23.050
much smaller,
much lower data rates as compared to

00:25:23.050 --> 00:25:26.100
the much larger and much bigger files.

00:25:26.100 --> 00:25:28.350
So, you can take a lot of
different amounts of data.

00:25:28.350 --> 00:25:30.100
Certainly stills is another example.

00:25:30.100 --> 00:25:32.250
If you're doing an environment
where you're creating,

00:25:32.350 --> 00:25:34.310
you know,
video that has a lot of still material,

00:25:34.310 --> 00:25:37.090
look at keeping the still
material separate from your video.

00:25:37.100 --> 00:25:39.100
That can help quite a lot.

00:25:39.100 --> 00:25:43.010
Another thing to consider is
not only the kinds of material,

00:25:43.010 --> 00:25:45.100
but how the material is used.

00:25:45.100 --> 00:25:47.930
So,
if you have material that is like your,

00:25:47.930 --> 00:25:50.680
you know,
stock photos or stock video that

00:25:50.680 --> 00:25:55.080
you want to have on hand that people
can use for creative purposes,

00:25:55.150 --> 00:25:56.100
but they're not used very frequently.

00:25:56.100 --> 00:26:00.100
Particularly,
you may have a huge amount of it,

00:26:00.100 --> 00:26:02.010
and people tend to use just
little bits of it at a time.

00:26:02.110 --> 00:26:05.180
Look at keeping your stock
material isolated away from

00:26:05.210 --> 00:26:07.040
your current active projects.

00:26:07.140 --> 00:26:10.220
Current active projects
tend to get a lot of change,

00:26:10.220 --> 00:26:14.190
a lot of activity, you know,
against them, versus potentially

00:26:14.270 --> 00:26:16.310
stock material that may,
you know,

00:26:16.310 --> 00:26:18.100
have a much lower rate of change.

00:26:18.100 --> 00:26:21.090
And being able to isolate that
particular and slower media,

00:26:21.110 --> 00:26:23.560
or better yet,
away from the material that's

00:26:23.580 --> 00:26:28.480
getting accessed at high rate,
at high rate can have a big impact.

00:26:32.140 --> 00:26:36.460
Another thing to look at is actually
separating your projects themselves,

00:26:36.460 --> 00:26:40.910
the actual different projects
that are going on within your

00:26:40.910 --> 00:26:42.760
enterprise from each other.

00:26:43.000 --> 00:26:48.960
You may have potentially five or six
major projects that go on at a time,

00:26:48.970 --> 00:26:53.270
and one of the things you may want to
consider is organizing your storage

00:26:53.520 --> 00:26:57.340
and organizing your infrastructure
so that each of those projects

00:26:57.340 --> 00:26:59.370
are isolated from each other.

00:26:59.480 --> 00:27:03.220
Not so much from a security perspective,
but again from where it sits on the

00:27:03.220 --> 00:27:05.490
storage so you can get more parallelism.

00:27:05.580 --> 00:27:09.020
You can keep it all on one volume
and use affinities as a way to

00:27:09.020 --> 00:27:10.950
be able to do this kind of thing.

00:27:11.100 --> 00:27:14.770
Basically allowing people to be
able to share material and be able

00:27:14.770 --> 00:27:19.420
to see the material as appropriate,
but being able to use the infrastructure

00:27:19.440 --> 00:27:22.900
of the Xsan to be able to tell
it to where to put the material

00:27:23.070 --> 00:27:25.600
actually on your physical storage.

00:27:25.800 --> 00:32:34.400
[Transcript missing]

00:32:36.900 --> 00:34:43.200
[Transcript missing]

00:34:44.540 --> 00:34:48.020
I want to take a little commercial
break here and talk about redundancy.

00:34:48.140 --> 00:34:52.530
It's one of those things you want
to think about here when you're

00:34:52.530 --> 00:34:57.700
dealing with Xsan that you've now
gone from lots and lots of individual

00:34:57.700 --> 00:35:02.340
seats that are fully isolated to the
ability now to share lots of material.

00:35:02.340 --> 00:35:05.920
It also means you have an opportunity
for single points of failure.

00:35:06.160 --> 00:35:09.800
So you should be thinking
about that from the get-go.

00:35:09.800 --> 00:35:12.490
You probably don't want to take
the chance of taking down your

00:35:12.490 --> 00:35:15.860
whole infrastructure because a
component fails or something happens.

00:35:15.870 --> 00:35:17.870
And there's some ways to
protect yourselves from that.

00:35:17.960 --> 00:35:22.090
Certainly part of RAID configuration
and doing mirroring is one of the

00:35:22.090 --> 00:35:24.150
things that you should look at.

00:35:24.180 --> 00:35:28.550
There's looking at failover metadata
controllers within the Xsan environment.

00:35:28.580 --> 00:35:31.450
You can even use,
particularly in small work groups,

00:35:31.500 --> 00:35:34.470
it might make sense to actually
use even one of the clients

00:35:34.470 --> 00:35:36.130
as a potential failover.

00:35:36.140 --> 00:35:37.990
In that case,
it's one of those things that

00:35:37.990 --> 00:35:39.280
you hope will never happen.

00:35:39.280 --> 00:35:41.180
But if it does,
at least the system will fail

00:35:41.180 --> 00:35:44.250
gracefully and you won't take
your whole infrastructure down.

00:35:44.260 --> 00:35:46.860
Another thing to look at is multipathing.

00:35:46.860 --> 00:35:51.500
Multipathing is basically using those
two strands of fiber that are coming out

00:35:51.500 --> 00:35:55.800
the back of the computer as potentially
multiple paths to be able to get to

00:35:55.800 --> 00:35:58.210
your data in case one of them fails.

00:35:58.240 --> 00:36:02.610
And I believe one of the other sessions
talked a little bit about how you

00:36:02.610 --> 00:36:05.120
can use multipathing within the Xsan.

00:36:06.160 --> 00:36:07.420
And I think that's a really good
example of how you can use multipathing

00:36:07.420 --> 00:36:07.960
within the Xsan environment.

00:36:08.220 --> 00:36:12.860
Certainly one of the most important
things in any situation is backup.

00:36:12.970 --> 00:36:16.160
And so backup is something you
should factor in when you're

00:36:16.160 --> 00:36:17.740
doing your site planning.

00:36:17.860 --> 00:36:21.860
And the other to consider, of course,
is power protection.

00:36:21.870 --> 00:36:25.860
This is a great place to be putting
battery backups or other things.

00:36:25.860 --> 00:36:28.080
So again,
one of the things you want to think

00:36:28.150 --> 00:36:31.860
about as you're going through the
process of setting up the environment,

00:36:31.860 --> 00:36:35.860
that you consider now that you
have another opportunity for

00:36:35.860 --> 00:36:35.860
your data to be able to be used.

00:36:36.160 --> 00:36:40.450
single point of failure and look at all
the places that you can protect yourself.

00:36:42.180 --> 00:36:46.240
Moving on to security and collaboration.

00:36:46.240 --> 00:36:50.730
Dealing with multiple users in a
media environment is a real plus,

00:36:50.750 --> 00:36:52.730
but there's some real challenges here.

00:36:52.730 --> 00:36:58.420
It is a lot, lot,
lot harder than dealing with a

00:36:58.420 --> 00:36:59.830
basic file system server setup.

00:36:59.930 --> 00:37:04.210
I think from the get-go you should
understand that as you're starting

00:37:04.210 --> 00:37:06.790
to think about how it works here,
you've got to think things

00:37:06.920 --> 00:37:08.320
through a little bit more.

00:37:08.320 --> 00:37:13.810
And the reason it's more difficult is
because in a typical file server setup,

00:37:13.810 --> 00:37:17.770
you're talking about someone
being able to log in to a file

00:37:17.880 --> 00:37:22.770
server to get to their files and
to save and retrieve their files.

00:37:22.780 --> 00:37:25.760
As you start dealing in a
multi-user media environment,

00:37:25.760 --> 00:37:29.310
you're actually having to think
about the collaboration aspects of

00:37:29.320 --> 00:37:33.240
that and how you actually can share
material across multiple people.

00:37:33.240 --> 00:37:37.480
If you're dealing with that in a
networked file system environment,

00:37:37.480 --> 00:37:40.280
then you're... You're probably
dealing with many of the same issues,

00:37:40.280 --> 00:37:44.130
but you typically don't tend to deal
with that in that environment as much

00:37:44.130 --> 00:37:46.740
as you will when you're starting to
deal with a shared media environment.

00:37:46.740 --> 00:37:51.010
Certainly, with Tiger being...
So the supporting ACLs,

00:37:51.010 --> 00:37:54.480
access control lists,
and actually... That will

00:37:54.480 --> 00:37:56.760
be an incredible benefit.

00:37:56.760 --> 00:37:59.680
Unfortunately,
we don't have that right this moment.

00:37:59.680 --> 00:38:02.030
So until then,
one of the real things that

00:38:02.030 --> 00:38:05.720
you have to kind of factor into
the whole process is planning.

00:38:05.720 --> 00:38:10.800
Make sure before you even... Put the
first piece of fiber to a computer that

00:38:10.810 --> 00:38:15.320
you've thought this out because it's one
of those things that six months into it,

00:38:15.320 --> 00:38:17.400
you're going to go, oh, my gosh.

00:38:17.400 --> 00:38:19.900
I completely forgot or
I didn't think about this.

00:38:19.900 --> 00:38:23.600
And what you almost are stuck
doing is tearing it all apart

00:38:23.600 --> 00:38:25.430
and starting over again.

00:38:25.440 --> 00:38:28.500
So it's really important to
actually take the time up front

00:38:28.500 --> 00:38:30.240
to actually do the planning.

00:38:30.240 --> 00:38:34.650
There's a lot of parts to deal with here
when you're dealing with shared media,

00:38:34.660 --> 00:38:37.740
and we'll talk about what
some of those things are.

00:38:38.320 --> 00:38:41.100
And we've talked a bit about performance.

00:38:41.100 --> 00:38:45.380
Well, one of the big challenges is
that security and performance

00:38:45.380 --> 00:38:47.430
don't always mix real well.

00:38:47.440 --> 00:38:51.100
And as you'll see, we'll get into this,
they tend to collide in a couple

00:38:51.100 --> 00:38:54.160
of important ways that you
can plan for and work around,

00:38:54.160 --> 00:38:57.080
but that's because you do
it up front with planning.

00:39:00.950 --> 00:39:03.080
And the other thing to think
about is when you're dealing with

00:39:03.080 --> 00:39:06.020
multiple user projects where you're
going to be sharing material,

00:39:06.040 --> 00:39:09.600
that again, you need to think it out a
little bit ahead of time.

00:39:09.930 --> 00:39:15.490
So as you're planning for multiple users,
one of the things that I consider

00:39:15.510 --> 00:39:19.300
to be an absolute must is
you need to use a centralized

00:39:19.300 --> 00:39:21.120
directory server of some type.

00:39:21.120 --> 00:39:23.750
I'm not going to say which
one you've got to use,

00:39:23.760 --> 00:39:27.110
but the fact is you need to make
sure that you centrally manage

00:39:27.110 --> 00:39:29.180
your users in this environment.

00:39:29.180 --> 00:39:33.100
Because as you're now
dealing with ultimately Unix

00:39:33.100 --> 00:39:37.130
permissions in this system,
files are going to have

00:39:37.130 --> 00:39:39.370
user IDs applied to them.

00:39:39.370 --> 00:39:43.070
And if you don't think about what
the things are that are going to be

00:39:43.070 --> 00:39:47.200
assigned to those different files,
what user IDs and what group IDs,

00:39:47.200 --> 00:39:50.070
then as soon as you start to
deal with sharing those files,

00:39:50.070 --> 00:39:52.840
six months down the road
after you've finally realized,

00:39:52.950 --> 00:39:55.890
gee, maybe I need to worry about this,
you could find yourself

00:39:55.890 --> 00:39:57.120
in a lot of trouble.

00:39:57.140 --> 00:39:59.160
Because that wasn't something
that you thought you could do.

00:39:59.240 --> 00:40:01.900
And that you don't have a
centralized way of managing.

00:40:01.900 --> 00:40:05.070
So it's really critical that
you manage the users within an

00:40:05.070 --> 00:40:07.320
environment in some centralized way.

00:40:07.320 --> 00:40:10.880
And you need to just get over the
fact that you are going to become

00:40:10.880 --> 00:40:12.920
an expert at Unix permissions.

00:40:12.920 --> 00:40:19.050
This is one of those things that,
you know, in this particular situation,

00:40:19.180 --> 00:40:21.920
it's something you can't avoid.

00:40:21.920 --> 00:40:25.980
It's going to be very critical in terms,
again, how you lay out your file system,

00:40:26.080 --> 00:40:28.240
how you deal with the multiple users.

00:40:28.240 --> 00:40:29.100
And you're going to have to
be very careful about that.

00:40:29.180 --> 00:40:29.240
And it's going to be a little bit more
complicated than you might expect.

00:40:29.240 --> 00:40:29.440
And it's going to be a little bit more
complicated than you might expect.

00:40:29.440 --> 00:40:31.960
So you need to really understand,
you know, ahead of time how you want to,

00:40:31.960 --> 00:40:33.180
you know, put things together.

00:40:33.180 --> 00:40:35.310
You might want to look
at putting together,

00:40:35.310 --> 00:40:37.470
you know,
a site plan and kind of checklist,

00:40:37.490 --> 00:40:38.360
if you will.

00:40:38.360 --> 00:40:42.840
And look at each of the workstations
within your environment.

00:40:42.840 --> 00:40:45.970
And look at, for example, whether your,
you know,

00:40:45.990 --> 00:40:50.560
how your media workstations are going
to be configured in the environment.

00:40:50.560 --> 00:40:53.200
How your normal office workstations
are going to be configured.

00:40:53.200 --> 00:40:56.690
So in the kind of normal
office workstation environment,

00:40:56.710 --> 00:40:59.160
I wouldn't expect any big surprises.

00:40:59.180 --> 00:41:02.780
This should work as it normally does
using home directories or whatever

00:41:02.780 --> 00:41:07.060
on your network attached storage
or whatever solution you have.

00:41:07.100 --> 00:41:10.900
Those particular things will probably
work pretty much as you're used to.

00:41:10.900 --> 00:41:13.460
For media workstations,
on the other hand,

00:41:13.460 --> 00:41:18.440
deciding whether or not there's going
to be a dedicated workstation per user

00:41:18.440 --> 00:41:21.450
or whether you're going to allow them
to move around within the environment

00:41:21.450 --> 00:41:23.200
is something you've got to think about.

00:41:23.670 --> 00:41:27.390
Because in a media environment,
there's a lot more than just

00:41:27.390 --> 00:41:31.350
a few preferences that go from
place to place in these setups,

00:41:31.440 --> 00:41:32.360
particularly today.

00:41:32.360 --> 00:41:35.640
And I certainly think over time,
this will get easier.

00:41:35.640 --> 00:41:39.640
But at the moment, anyway,
this is a really complicated problem.

00:41:39.640 --> 00:41:43.090
Because as you move,
if you're going to move users

00:41:43.090 --> 00:41:46.880
from workstation to workstation,
usually the project,

00:41:46.980 --> 00:41:50.540
its performance characteristics,
its expectations in terms

00:41:50.540 --> 00:41:54.550
of that real-time behavior,
what kind of devices, graphics,

00:41:54.550 --> 00:41:58.640
et cetera, you know,
can be very much tied to the workstation.

00:41:58.680 --> 00:42:00.680
And so you're going to have to
think about what kind of workstation

00:42:00.680 --> 00:42:01.300
that that project is being done on.

00:42:01.300 --> 00:42:03.680
And if you move around,
you may find yourself

00:42:03.680 --> 00:42:05.280
having to redo an awful lot.

00:42:05.320 --> 00:42:08.350
The other thing is there's
a lot of other material that

00:42:08.350 --> 00:42:11.710
tends to go with the projects,
scratch files and render

00:42:11.710 --> 00:42:13.480
files and things like that.

00:42:13.590 --> 00:42:16.880
And as you move around
from station to station,

00:42:16.880 --> 00:42:20.690
you'll find you will end up
having to effectively recreate

00:42:20.690 --> 00:42:22.680
that through the process.

00:42:22.680 --> 00:42:28.010
And that can effectively slow down
the usage model that people may have.

00:42:28.690 --> 00:42:30.150
Um...

00:42:30.440 --> 00:42:35.420
You want to think about where the
home directory is going to be for

00:42:35.570 --> 00:42:37.420
a given user in that environment.

00:42:37.420 --> 00:42:41.520
Because the home directory in a media
environment is going to get hit a lot.

00:42:41.580 --> 00:42:44.060
That's where those scratch
files tend to be put.

00:42:44.120 --> 00:42:49.330
That's usually where a lot
of other cached information

00:42:49.330 --> 00:42:51.600
is kept within the system.

00:42:51.600 --> 00:42:54.770
Unless you manually go and
override and set that up for

00:42:54.770 --> 00:42:59.070
each workstation and user,
they're going to end up having to, one,

00:42:59.180 --> 00:43:05.300
it's going to end up putting a lot
of load back on your infrastructure.

00:43:05.300 --> 00:43:08.800
And two, you're going to end up finding
out that your performance is just

00:43:08.800 --> 00:43:10.370
not what you expect it to be.

00:43:10.370 --> 00:43:12.800
Things are not working
the way you expect.

00:43:12.880 --> 00:43:17.420
One other thing to think about, too,
at least right at the moment,

00:43:17.490 --> 00:43:22.260
is that the home directories
tend to be... When you're dealing

00:43:22.260 --> 00:43:27.050
with an environment where you've
set up a centralized file server

00:43:27.050 --> 00:43:31.300
for dealing with multiple users,
the home directories are actually

00:43:31.400 --> 00:43:32.980
connected over the network.

00:43:33.060 --> 00:43:35.080
They're not connected over the fiber.

00:43:35.080 --> 00:43:37.940
And this can be very confusing.

00:43:37.940 --> 00:43:42.740
And again, I think this is one of these
things that over time will change.

00:43:42.740 --> 00:43:46.490
But you'll get performance
characteristics of home directory

00:43:46.570 --> 00:43:50.160
access that's network-based
as opposed to fiber-based.

00:43:50.160 --> 00:43:51.270
Yes.

00:43:51.900 --> 00:44:03.700
[Transcript missing]

00:44:04.800 --> 00:44:09.410
You also want to be thinking about
how media plays into this environment.

00:44:09.440 --> 00:44:12.670
If you have globally
shared stock material,

00:44:12.680 --> 00:44:18.020
permissions set up in that particular
situation is reasonably straightforward.

00:44:18.020 --> 00:44:22.860
Usually you can keep all that stuff
together and usually stock material

00:44:22.860 --> 00:44:27.940
is something that can be shared by
all the users within an environment.

00:44:27.940 --> 00:44:33.880
But when you get to per project media,
this is where your permissions

00:44:33.880 --> 00:44:36.180
issues tend to get more challenging.

00:44:36.180 --> 00:44:38.880
And you want to think about
when you're setting up projects

00:44:38.880 --> 00:44:42.510
within your Xsan environment,
how you set up your directory tree,

00:44:42.540 --> 00:44:46.300
how you set up the permissions
within that directory tree.

00:44:46.300 --> 00:44:49.270
Usually when you create a new project,
for example,

00:44:49.320 --> 00:44:52.980
you want to make sure you create a
Unix group for that project so that

00:44:53.060 --> 00:44:57.680
you have the ability of being able to
manage which users actually have access.

00:44:57.940 --> 00:44:59.640
to the material within that project.

00:44:59.640 --> 00:45:02.170
And you need to do that from the get-go.

00:45:04.730 --> 00:45:09.190
You also want to make sure that the
directory tree within the project is set

00:45:09.190 --> 00:45:12.890
up appropriately with the permissions,
not only for whoever the owner

00:45:12.890 --> 00:45:16.490
of that particular project is,
but that the group permissions

00:45:16.490 --> 00:45:18.320
are correctly and properly set.

00:45:18.360 --> 00:45:22.760
And that the media within that project,
within that directory tree,

00:45:22.810 --> 00:45:26.520
is mapped as appropriate based
on the performance affinities

00:45:26.660 --> 00:45:28.790
that we talked about earlier.

00:45:29.080 --> 00:45:32.720
And this is where it gets really
complicated because you basically

00:45:32.720 --> 00:45:35.840
have this one tree of information
that you're dealing with in terms

00:45:35.840 --> 00:45:39.410
of how your project's organized
and a totally different structure

00:45:39.410 --> 00:45:43.060
that represents how your media is
actually stored across your storage.

00:45:43.060 --> 00:45:47.160
And these are multiple dimensions
that you have to factor in at once.

00:45:48.900 --> 00:45:53.430
Because it's so complicated,
he really encouraged you to actually

00:45:53.430 --> 00:45:57.310
draw a map of the projects and how
they're organized over your storage.

00:45:57.390 --> 00:45:59.430
Again,
not only in terms of their organized,

00:45:59.440 --> 00:46:02.120
how the user sees it,
but more importantly,

00:46:02.380 --> 00:46:05.770
how they're organized in terms of
the storage so that you get the

00:46:05.770 --> 00:46:08.480
performance expectations that you have.

00:46:09.790 --> 00:46:13.690
When you get to this level,
this is again where it

00:46:13.690 --> 00:46:14.970
tends to get kind of hard.

00:46:15.010 --> 00:46:19.520
Merging the needs of sharing material
and the needs of being able to get

00:46:19.550 --> 00:46:23.190
performance can be rather complicated.

00:46:23.200 --> 00:46:26.800
Again, you're dealing with multiple
dimensions of hierarchy here

00:46:26.800 --> 00:46:28.450
that need to be factored in.

00:46:29.420 --> 00:46:32.400
And it's one of the things that
can really help you over time is

00:46:32.400 --> 00:46:36.000
making sure that from the get-go as
you're planning that you can think

00:46:36.100 --> 00:46:39.960
about putting together a consistent
structure for all your projects.

00:46:39.960 --> 00:46:44.100
And I'll show you in a moment a
very simplified example of this.

00:46:44.100 --> 00:46:48.910
But you really want to look at organizing
your projects by performance types,

00:46:49.000 --> 00:46:53.010
by the kind of material you have,
so that you have the ability later to

00:46:53.010 --> 00:46:56.430
go back in and apply the affinities
that you may want to apply so you

00:46:56.430 --> 00:46:58.620
can make performance adjustments.

00:46:59.070 --> 00:47:01.160
You may find I'm getting
more and more users,

00:47:01.230 --> 00:47:03.630
the performance is going down,
I need to add storage.

00:47:03.640 --> 00:47:06.510
But if you didn't organize the
material well to begin with,

00:47:06.510 --> 00:47:08.930
you're going to find you
have to back it all off,

00:47:08.970 --> 00:47:10.770
put it back on and restructure it.

00:47:10.910 --> 00:47:13.450
And that will take you down
potentially for a few days.

00:47:15.400 --> 00:48:07.600
[Transcript missing]

00:48:08.100 --> 00:48:12.560
The advantage of that is that you'll find
again the requirements for audio and the

00:48:12.560 --> 00:48:15.920
requirements for video in terms of speed,
in terms of the amount of data

00:48:15.920 --> 00:48:17.440
that's moving are pretty different.

00:48:17.540 --> 00:48:21.110
And you may be able to organize your
storage appropriately to be able to

00:48:21.120 --> 00:48:23.070
give you much better performance.

00:48:23.220 --> 00:48:27.190
The good news is that if you
look at organizing your projects

00:48:27.260 --> 00:48:31.220
this way from the get-go,
you can reorganize your storage

00:48:31.400 --> 00:48:34.660
separately from this because
the users don't need to know

00:48:34.660 --> 00:48:36.730
how your storage is organized.

00:48:36.950 --> 00:48:41.190
They just care that if I go down and
look in these particular folders,

00:48:41.230 --> 00:48:42.780
I'm going to find the
stuff that I need to find.

00:48:42.830 --> 00:48:47.530
So think about it in advance so
that it gives you the flexibility

00:48:47.530 --> 00:48:51.320
of being able to get your storage
organized in an effective way.

00:48:52.420 --> 00:48:55.870
I've been talking a lot about scratch
data through a number of these things.

00:48:55.870 --> 00:48:57.810
And this is an example from Final Cut.

00:48:58.000 --> 00:49:03.210
Final Cut allows you, for example,
to segregate a bunch of the

00:49:03.280 --> 00:49:07.100
ancillary files that tend
to be involved in a project.

00:49:07.260 --> 00:49:10.140
You may typically think, oh,
I'm doing a video project.

00:49:10.140 --> 00:49:12.390
I've got certainly my
Final Cut Pro document,

00:49:12.390 --> 00:49:15.320
and then I've got a bunch of
video and a bunch of audio.

00:49:15.320 --> 00:49:19.770
Well, the reality is there's usually,
and this is not just for Final Cut,

00:49:19.770 --> 00:49:23.190
but I think for many
sophisticated media applications,

00:49:23.190 --> 00:49:27.510
a lot of other stuff that is generated
as part of the process in order to get

00:49:27.510 --> 00:49:32.720
performance and in order to get the kind
of visual expectations that people have.

00:49:32.780 --> 00:49:35.480
For Final Cut,
you have the ability of segregating,

00:49:35.480 --> 00:49:38.940
for example, where you're... you know,
your audio from your video

00:49:38.940 --> 00:49:40.000
and where it's placed.

00:49:40.040 --> 00:49:43.420
As we talked about from, you know,
a project organization standpoint,

00:49:43.420 --> 00:49:44.920
that can be helpful for affinities.

00:49:44.920 --> 00:49:47.450
You can, in this case,
also manage where some

00:49:47.450 --> 00:49:50.690
of the render files,
the files that are used to, you know,

00:49:50.690 --> 00:49:55.460
maybe, you know, render out, you know,
complicated transitions or effects.

00:49:55.460 --> 00:50:01.040
Those are scratch files that are not
necessarily critically important,

00:50:01.040 --> 00:50:05.420
you know, in terms of day-to-day,
but it's important more from, you know,

00:50:05.430 --> 00:50:06.760
getting the kind of performance.

00:50:07.350 --> 00:50:11.380
And there's places where it
puts those things on the system.

00:50:11.380 --> 00:50:13.600
And Final Cut allows you to kind of,
again,

00:50:13.600 --> 00:50:15.780
even segregate where that stuff is kept.

00:50:15.890 --> 00:50:17.430
You may want to keep that stuff locally.

00:50:17.550 --> 00:50:19.320
You may want to put it
on a separate volume,

00:50:19.320 --> 00:50:20.510
you know, within the SAN.

00:50:20.620 --> 00:50:23.460
And there's other caches that,
in the case of Final Cut,

00:50:23.460 --> 00:50:26.520
are used where various, you know,
thumbnails for pictures

00:50:26.520 --> 00:50:29.520
and other things are used,
little things that are used just

00:50:29.520 --> 00:50:33.140
to make the UI and other things,
you know, perform a little better.

00:50:33.140 --> 00:50:35.420
Many times,
most of this stuff can be kind

00:50:35.440 --> 00:50:37.090
of kept on the local system.

00:50:37.260 --> 00:50:39.880
You, you know,
don't lose anything by losing

00:50:39.880 --> 00:50:43.000
this material other than
kind of the UI responsiveness

00:50:43.000 --> 00:50:45.040
typically in a given session.

00:50:45.040 --> 00:50:48.410
It's the kind of thing you probably don't
want to put on the SAN because it just

00:50:48.410 --> 00:50:50.460
generates a lot of unnecessary traffic.

00:50:56.760 --> 00:50:59.570
As you're thinking about
multiple person projects,

00:50:59.570 --> 00:51:02.820
independently of the security issues
and other things we've talked about,

00:51:02.820 --> 00:51:06.000
you want to look at other things
to consider as well to make

00:51:06.000 --> 00:51:07.490
it possible for collaboration.

00:51:07.500 --> 00:51:14.420
Given that I think in the case of media,
this is a pretty new world in terms

00:51:14.420 --> 00:51:21.450
of being able to get the kind of,
if you will, completely seamless flow of

00:51:21.450 --> 00:51:25.760
collaboration between multiple users.

00:51:25.760 --> 00:51:29.060
There actually needs to be a little
thought right now from the standpoint of

00:51:29.060 --> 00:51:34.840
how you lay out your projects and work in
order to make it work more effectively.

00:51:34.980 --> 00:51:36.750
As far as, you know, for Final Cut,
for example,

00:51:36.770 --> 00:51:39.500
you may want to look if you've got a
really big project that you're dealing

00:51:39.500 --> 00:51:42.740
with multiple people that you actually
find ways to break it into sub-projects.

00:51:42.870 --> 00:51:45.190
In the film industry,
they usually do 20-minute reels,

00:51:45.190 --> 00:51:45.890
for example.

00:51:45.890 --> 00:51:48.300
You know, you don't do the whole,
you know, two-hour movie.

00:51:48.300 --> 00:51:50.110
It's actually done in
20 minutes at a time,

00:51:50.110 --> 00:51:51.420
you know, little segments.

00:51:51.470 --> 00:51:54.080
You can actually break up your
project into this and it makes

00:51:54.080 --> 00:51:55.390
it a lot easier to work with.

00:51:55.530 --> 00:51:58.350
And in the case of Final Cut,
it's actually pretty easy to

00:51:58.350 --> 00:52:01.680
create a master project that
brings all the pieces together.

00:52:32.620 --> 00:52:32.620
You want to think about and make,
you know, watch out for that, you know,

00:52:32.620 --> 00:52:32.620
multiple users shouldn't
be modifying the actual,

00:52:32.620 --> 00:52:32.620
you know, same files.

00:52:32.620 --> 00:52:32.620
From a developer perspective,
this is something that, you know,

00:52:32.620 --> 00:52:32.620
certainly we're used to in terms of,
you know, CVS and, you know,

00:52:32.620 --> 00:52:32.620
other kinds of tools and facilities.

00:52:32.620 --> 00:52:32.620
There's not a lot of that kind of,
you know,

00:52:32.620 --> 00:52:32.620
facilities right now in the media space.

00:52:32.620 --> 00:52:32.620
There are some media management
tools that are out there,

00:52:32.620 --> 00:52:32.620
but most tools that exist today,
you know,

00:52:32.620 --> 00:52:32.620
don't handle concurrent modification.

00:52:32.620 --> 00:52:36.540
So, you know, there's a lot of things
that you might expect from,

00:52:36.540 --> 00:52:40.790
you know, source code or, you know,
software development, you know,

00:52:40.920 --> 00:52:42.630
multiple person projects.

00:52:42.630 --> 00:52:46.200
The multiple person project model
has been very hard to get to

00:52:46.200 --> 00:52:50.540
without something like a SAN where,
you know, this large media actually

00:52:50.540 --> 00:52:52.450
can be shared in a real way.

00:52:52.460 --> 00:52:54.570
So,
this is an area where there's weakness,

00:52:54.570 --> 00:52:56.730
you know,
in this particular area where I think

00:52:56.800 --> 00:52:58.480
there's also a lot of opportunity.

00:52:58.480 --> 00:53:01.470
But you want to think about, you know,
how does this work?

00:53:01.480 --> 00:53:04.000
You know,
how to structure and organize things

00:53:04.000 --> 00:53:06.030
to avoid these kinds of collisions.

00:53:06.140 --> 00:53:10.200
Usually for media files,
this isn't a problem.

00:53:10.300 --> 00:53:15.190
Something like Final Cut Pro or Logic or,
you know, the various, you know,

00:53:15.290 --> 00:53:18.440
DAWs and other, you know,
digital audio workstations, other things.

00:53:18.530 --> 00:53:21.310
Most of them are, you know,
non-destructive editors.

00:53:21.350 --> 00:53:24.570
The media itself tends
to get modified rarely,

00:53:24.570 --> 00:53:25.110
if ever.

00:53:25.390 --> 00:53:29.120
It's usually what gets modified
is the project files and the,

00:53:29.330 --> 00:53:30.340
you know, corresponding render files
and things that are done.

00:53:30.340 --> 00:53:35.750
So, the good news is you probably don't
have to worry too much about people

00:53:35.750 --> 00:53:39.100
modifying the same media files usually.

00:53:39.100 --> 00:53:43.060
But you need to think about it.

00:53:43.500 --> 00:53:47.170
I mentioned early on that it's really
important to consider making sure that

00:53:47.170 --> 00:53:51.060
you use a central directory service in
terms of dealing with multiple users.

00:53:51.060 --> 00:53:52.300
I want to reiterate that again.

00:53:52.300 --> 00:53:55.110
It's one of those things that if
you don't think about that up front,

00:53:55.250 --> 00:53:55.990
it will bite you.

00:53:56.020 --> 00:53:59.710
You'll come back later and you'll go,
oops, yep, you were right.

00:53:59.710 --> 00:54:01.880
You need to think about that.

00:54:02.520 --> 00:54:07.440
The other is making sure that you can
do that organization up front to enable

00:54:07.440 --> 00:54:10.260
the storage tuning later down the road.

00:54:10.260 --> 00:54:14.710
Two really important things
that require some forethought.

00:54:16.300 --> 00:57:31.400
[Transcript missing]