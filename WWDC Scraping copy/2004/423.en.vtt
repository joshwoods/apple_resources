WEBVTT

00:00:13.120 --> 00:00:17.480
Ladies and gentlemen,
please welcome Manager Spoken

00:00:17.480 --> 00:00:20.710
Interface Engineering,
Eric Seymour.

00:00:24.400 --> 00:04:22.700
[Transcript missing]

00:04:23.300 --> 00:09:09.700
[Transcript missing]

00:09:10.120 --> 00:09:12.120
how important the keyboard is.

00:09:12.120 --> 00:09:14.160
I guess that's an understatement.

00:09:14.160 --> 00:09:16.720
And so it deserves a
little bit of discussion.

00:09:16.830 --> 00:09:19.560
When you're using VoiceOver,
you're going to spend a lot

00:09:19.560 --> 00:09:21.120
of time using the keyboard.

00:09:21.120 --> 00:09:24.600
And you're going to spend a lot of
time using the control and option keys,

00:09:24.600 --> 00:09:26.140
which are used for activation.

00:09:26.140 --> 00:09:28.570
In other words,
if you want to issue a command on your

00:09:28.570 --> 00:09:32.030
computer that VoiceOver will interpret,
you'd hold the control and option

00:09:32.030 --> 00:09:34.440
key down and then do something.

00:09:34.440 --> 00:09:37.220
And then there are keys
designated for orientation,

00:09:37.220 --> 00:09:39.700
tell me where I am in my environment,
what's on the screen,

00:09:39.700 --> 00:09:40.950
how many apps are running, right?

00:09:40.950 --> 00:09:42.730
And then there's also navigation.

00:09:42.730 --> 00:09:45.970
I want to move around using,
getting to every possible thing

00:09:46.080 --> 00:09:47.430
that might be on the screen.

00:09:47.430 --> 00:09:49.510
Now, a couple of things about this.

00:09:49.790 --> 00:09:51.900
Number one is, well, several things.

00:09:52.030 --> 00:09:55.000
So the first is there are lots of
keyboard combinations to produce

00:09:55.040 --> 00:09:56.660
commands in a screen reader.

00:09:56.660 --> 00:09:58.200
This one is no exception.

00:09:58.200 --> 00:10:02.370
To help improve the learning experience
for somebody who's coming to grips

00:10:02.530 --> 00:10:06.180
with this product to get to know it,
we provide two main features.

00:10:06.860 --> 00:10:09.520
The first is the smart menu,
which is audible.

00:10:09.520 --> 00:10:13.060
You basically, using spoken interface,
you're moving around and you go,

00:10:13.060 --> 00:10:14.630
"I have no idea what to do at this point.

00:10:14.630 --> 00:10:17.630
What do I do?" So you hit one
memorable key combination,

00:10:17.750 --> 00:10:21.160
control option F5,
and you're presented with an audible

00:10:21.160 --> 00:10:22.870
menu and it will be context sensitive.

00:10:22.880 --> 00:10:26.230
It will have only the things in it that
you could do at that given point in time.

00:10:26.330 --> 00:10:28.970
So if you're in a text field,
there are lots of things you can do in a

00:10:29.160 --> 00:10:31.600
text field because you can select text,
you know,

00:10:31.600 --> 00:10:33.480
you can--it's a more complicated element.

00:10:33.480 --> 00:10:35.140
But if you're on top of a button,
there might be only one

00:10:35.140 --> 00:10:36.080
or two things you can do.

00:10:36.080 --> 00:10:37.880
You can press it,
you might be able to read its title,

00:10:37.880 --> 00:10:39.220
things like that.

00:10:39.220 --> 00:10:40.810
So the smart menu helps out a lot.

00:10:40.880 --> 00:10:42.490
And then, of course, there's help.

00:10:42.680 --> 00:10:44.640
Always the same consistent
way to get help.

00:10:44.640 --> 00:10:49.420
You also might notice that we're rooting
our modifier keys off the same keys.

00:10:49.470 --> 00:10:53.180
Other screen reader products,
because of perhaps lower integration

00:10:53.180 --> 00:10:56.930
into the operating system itself,
root themselves off the several

00:10:56.930 --> 00:10:58.520
keys around the keyboard.

00:10:58.520 --> 00:11:00.170
So a couple more things to mention.

00:11:00.170 --> 00:11:03.010
First is we realize that
the keyboard is overloaded.

00:11:03.010 --> 00:11:07.110
If you design an app that has lots
of keyboard combinations defined,

00:11:07.290 --> 00:11:10.810
you know that already even before
spoken interface comes along,

00:11:10.920 --> 00:11:14.170
there are occasions where keyboard
combinations which Apple chooses

00:11:14.260 --> 00:11:17.570
sometimes conflict with ones
that ship in your application.

00:11:17.600 --> 00:11:20.520
Spoken interface again adds to that.

00:11:20.520 --> 00:11:25.070
So we're designing some
techniques to allow the user to

00:11:25.260 --> 00:11:27.820
work around that effectively.

00:11:27.820 --> 00:11:30.470
To specify when am I going
to issue a voiceover command,

00:11:30.580 --> 00:11:32.940
when am I going to issue a
command that might want to go

00:11:32.970 --> 00:11:34.340
directly to your application.

00:11:34.440 --> 00:11:36.000
So we're solving that problem.

00:11:36.090 --> 00:11:39.770
And the other big piece of feedback
that we've gotten is screen reader

00:11:39.770 --> 00:11:45.040
software is not terribly well designed
typically for notebook keyboards.

00:11:45.040 --> 00:11:47.540
Because of the amount of
keys that you want to use,

00:11:47.880 --> 00:11:51.500
sometimes they take advantage of the
number pad or some of the keys that are

00:11:51.510 --> 00:11:54.350
hard to reach on a notebook keyboard.

00:11:54.460 --> 00:11:58.220
And so we're also designing
this for a notebook keyboard.

00:11:58.240 --> 00:11:59.450
We're using this as the least
common denominator so that we

00:11:59.460 --> 00:12:00.430
don't come up with an environment
that's too complex for us to use.

00:12:00.430 --> 00:12:00.850
So we're using this as the least
common denominator so that we

00:12:00.850 --> 00:12:01.560
don't come up with an environment
that's too complex for us to use.

00:12:01.560 --> 00:12:02.310
So we're using this as the least common
denominator so that we don't come up

00:12:02.310 --> 00:12:05.900
with an environment that once you go
mobile is really difficult to use.

00:12:05.900 --> 00:12:06.640
Okay.

00:12:06.640 --> 00:12:08.860
So that's the keyboard.

00:12:08.880 --> 00:12:12.580
Now, to talk about a screen reader,
we also have to talk about navigation

00:12:12.780 --> 00:12:16.910
because we need to provide a way to get
around the environment that even the

00:12:16.910 --> 00:12:19.040
mouse and the keyboard can't get to.

00:12:19.280 --> 00:12:23.180
So when we navigate,
especially sighted users

00:12:23.320 --> 00:12:26.140
when they navigate,
all of us take advantage

00:12:26.170 --> 00:12:30.520
of two main things,
the keyboard cursor and the mouse cursor.

00:12:30.550 --> 00:12:33.390
And-- So, they're both very tangible.

00:12:33.470 --> 00:12:35.720
If we're sighted, we can see them.

00:12:35.740 --> 00:12:39.130
If we're not relying on our sight,
spoken interface,

00:12:39.390 --> 00:12:44.190
voiceover provides audible feedback as
to where those things are if we want it.

00:12:44.410 --> 00:12:47.650
But there's more than that
because as sighted users,

00:12:47.650 --> 00:12:50.340
we take advantage of our eyes, right?

00:12:50.340 --> 00:12:54.370
We have the ability to glance,
look around our screen.

00:12:54.570 --> 00:12:58.970
And if your only feedback is sound
and all you're listening to is where's

00:12:58.970 --> 00:13:02.360
the mouse or where's the cursor,
you don't have the ability to look

00:13:02.360 --> 00:13:05.110
at the time or to read an iChat
that just came in while you happen

00:13:05.110 --> 00:13:06.640
to be typing an email message.

00:13:06.690 --> 00:13:08.520
And we want to solve that problem.

00:13:08.780 --> 00:13:13.110
So, as part of voiceover,
we're introducing a new cursor

00:13:13.210 --> 00:13:15.290
which is the voiceover cursor.

00:13:15.290 --> 00:13:18.520
And the voiceover cursor is separate
and distinct from the other two.

00:13:18.960 --> 00:13:22.240
And its job is to allow you to
get to everything in the screen.

00:13:22.490 --> 00:13:25.790
So here,
I've got a picture of voiceover cursor

00:13:26.060 --> 00:13:30.560
moving over a user interface and
it's moving from button to button.

00:13:30.560 --> 00:13:34.350
Now, the voiceover cursor, of course,
isn't just visual or it

00:13:34.350 --> 00:13:37.340
wouldn't be of much use.

00:13:37.340 --> 00:13:40.350
Could you turn on sound for
the presentation machine,

00:13:40.350 --> 00:13:41.030
please?

00:13:44.510 --> 00:13:45.350
Let's try it again.

00:13:45.540 --> 00:13:46.400
Okay.

00:13:46.400 --> 00:13:49.080
So when the voiceover
cursor moves over things,

00:13:49.080 --> 00:13:51.500
it also tells you where it is.

00:13:52.250 --> 00:13:55.620
Colors button.

00:13:55.690 --> 00:13:56.870
Colors button.

00:13:56.890 --> 00:13:58.340
Save as draft button.

00:14:01.940 --> 00:14:02.900
Text.

00:14:04.020 --> 00:14:06.740
Now, here's a case where the voiceover
cursor moved to an item which you

00:14:06.740 --> 00:14:11.870
can't get to with any other means
using keyboard navigation or mouse

00:14:11.870 --> 00:14:14.730
because it's just static text,
just a blob of pixels sitting

00:14:14.850 --> 00:14:15.960
on the screen somewhere.

00:14:15.960 --> 00:14:17.580
So, they're unattainable.

00:14:17.580 --> 00:14:20.740
So the voiceover cursor's
goal is to get to everything.

00:14:20.740 --> 00:14:23.210
So in this case,
it got to what appears to me,

00:14:23.210 --> 00:14:26.980
based on my audible feedback,
it appears to be a prompt in mail that

00:14:26.980 --> 00:14:28.720
tells me what might be coming next.

00:14:28.840 --> 00:14:30.840
To text field.

00:14:31.510 --> 00:14:33.280
And now I'm on top of a text field.

00:14:33.280 --> 00:14:36.140
So before it told me it was text,
kind of told me it was a static thing,

00:14:36.140 --> 00:14:37.830
I couldn't edit it, but it's text.

00:14:37.830 --> 00:14:41.220
And then it told me it was a text field,
which means it's editable.

00:14:41.220 --> 00:14:44.680
Now, what this does is it lets me build
a mental picture in my mind of

00:14:44.680 --> 00:14:48.360
my user interface and navigate
to every aspect of my interface,

00:14:48.360 --> 00:14:52.360
not just the things that full
keyboard navigation can get me to.

00:14:52.360 --> 00:14:54.220
So it helps me learn and discover.

00:14:54.220 --> 00:14:57.420
So this concept gets a little heady,
so the best way to talk about this is

00:14:57.420 --> 00:15:00.630
to introduce Rick Fabrick on stage to
give you a little Fabric on stage to

00:15:00.630 --> 00:15:02.780
give you a demonstration of voiceover.

00:15:02.830 --> 00:15:04.290
So Rick?

00:15:06.480 --> 00:15:07.400
Thank you, Eric.

00:15:07.640 --> 00:15:08.940
Good morning, everybody.

00:15:08.990 --> 00:15:10.780
As Eric mentioned,
my name is Rick Fabrick,

00:15:10.810 --> 00:15:13.160
and I'm an engineer on
the spoken interface team,

00:15:13.160 --> 00:15:14.320
the VoiceOver team.

00:15:14.400 --> 00:15:18.460
And for the next 10 or 15 minutes,
I will be going over the general usage

00:15:18.460 --> 00:15:22.540
of the spoken interface so that you
can use it as a tool to test the level

00:15:22.540 --> 00:15:25.270
of accessibility in your applications.

00:15:25.350 --> 00:15:26.940
Now, before I start,
there's two things that

00:15:26.980 --> 00:15:27.770
I want you to know.

00:15:27.860 --> 00:15:32.660
The first is that throughout the demo,
I will not be using the mouse.

00:15:32.720 --> 00:15:34.100
In fact, I'm going to unplug it.

00:15:34.100 --> 00:15:35.260
Here's the mouse.

00:15:35.340 --> 00:15:38.710
Everything I'm going to be doing
will be through the keyboard only.

00:15:38.970 --> 00:15:43.540
The second thing is that I am going to
be using a lot of voiceover commands.

00:15:43.540 --> 00:15:45.310
So to save time,
I'm not going to be telling you

00:15:45.380 --> 00:15:48.400
what the actual keystrokes are,
but Eric went over a couple of them,

00:15:48.400 --> 00:15:51.840
and you can find out what the rest
of them are through documentation.

00:15:51.880 --> 00:15:54.300
Alright, so orientation.

00:15:54.340 --> 00:15:57.990
One of the features Eric mentioned
that screen readers need to provide is

00:15:57.990 --> 00:16:01.240
an easy way for users to get oriented
with the state of their system,

00:16:01.420 --> 00:16:04.110
and I'm going to go over
some of that right now.

00:16:04.360 --> 00:16:07.340
Now, you may be able to see the screen
and notice that it's blank,

00:16:07.650 --> 00:16:09.410
and that's intentional.

00:16:09.700 --> 00:16:12.940
A great percentage of the Spoken
Interface users are going to be blind,

00:16:12.940 --> 00:16:16.220
so I want to give you a better sense
of how they're going to be using your

00:16:16.230 --> 00:16:19.120
applications with the Spoken Interface.

00:16:19.120 --> 00:16:22.540
What I'm using here is a test tool
that we call the Screen Curtain.

00:16:22.620 --> 00:16:25.720
And all it does is it dims the
screen so that you won't get any more

00:16:25.720 --> 00:16:27.600
information than your users will.

00:16:27.670 --> 00:16:31.100
That gives you a better chance of
finding holes in your accessibility.

00:16:31.150 --> 00:16:31.400
All right.

00:16:31.430 --> 00:16:32.530
So let's try this.

00:16:32.530 --> 00:16:35.340
As an example,
let's say a user who's blind just

00:16:35.340 --> 00:16:37.390
sits down in front of their computer.

00:16:37.390 --> 00:16:39.260
They can't see the screen,
and they need to find

00:16:39.260 --> 00:16:41.830
out what's going on,
where they are on the system.

00:16:41.830 --> 00:16:46.340
So with a few voiceover commands,
they can get some useful information.

00:16:46.340 --> 00:16:47.840
So let's try that.

00:16:47.860 --> 00:16:50.310
With one command, we get this.

00:16:50.310 --> 00:16:51.970
Text edit is active.

00:16:52.010 --> 00:16:54.150
Five running applications.

00:16:54.150 --> 00:16:58.140
So text edit is active,
and there are five running applications.

00:16:58.380 --> 00:17:00.050
With another command.

00:17:00.520 --> 00:17:01.450
Active window.

00:17:01.460 --> 00:17:02.460
Accessibility development.

00:17:02.460 --> 00:17:06.700
The active window is
accessibility development.

00:17:06.730 --> 00:17:08.450
And with another command, we get this.

00:17:08.460 --> 00:17:10.460
Text editor has keyboard focus.

00:17:10.460 --> 00:17:13.260
A text editor has keyboard focus.

00:17:13.260 --> 00:17:16.240
So with three commands,
I found out that I'm editing

00:17:16.240 --> 00:17:20.450
a text edit document called
accessibility development.

00:17:21.860 --> 00:17:27.580
Alright, so I've gotten to the point
where it's really difficult to

00:17:27.670 --> 00:17:31.300
follow along if you're sighted.

00:17:31.300 --> 00:17:33.270
So what I'm going to do is I'm going
to bring up the screen curtain.

00:17:33.360 --> 00:17:35.850
So if you can see the screen,
you can tell it'll be easier

00:17:35.850 --> 00:17:37.200
for you to follow along.

00:17:37.200 --> 00:17:39.200
Disable screen curtain.

00:17:39.200 --> 00:17:40.890
Alright.

00:17:40.970 --> 00:17:45.200
Now, as Eric mentioned before,
we have the voiceover cursor,

00:17:45.200 --> 00:17:49.070
so I'm going to bring that up and make
it easier for you to find out where I am.

00:17:49.200 --> 00:17:53.150
Show viewfinder.

00:17:54.690 --> 00:17:57.560
Alright, so if you can see the screen,
you can tell that I am focused on

00:17:57.580 --> 00:17:59.400
the first word in this document.

00:17:59.500 --> 00:18:03.880
Now I can move the voiceover cursor
either character by character,

00:18:03.930 --> 00:18:06.930
line by line, word by word,
sentence by sentence,

00:18:07.180 --> 00:18:08.600
paragraph by paragraph.

00:18:08.730 --> 00:18:12.130
So what I'm going to show you
here is moving word by word.

00:18:13.160 --> 00:18:19.100
Accessibility defines the
techniques that— Okay.

00:18:19.160 --> 00:18:22.900
That space— Now character by character.

00:18:23.020 --> 00:18:27.500
—space, T-H-A-T.

00:18:27.560 --> 00:18:30.610
Now what I want you to notice is
when I move over to the letter M,

00:18:30.610 --> 00:18:32.400
the pitch of the voice will increase.

00:18:32.490 --> 00:18:35.400
And what that does is it lets you
know that that letter is capitalized.

00:18:35.410 --> 00:18:38.100
So you don't need to be able
to see the character to know

00:18:38.100 --> 00:18:39.660
that you have a capital letter.

00:18:39.870 --> 00:18:41.080
Control Option Locked.

00:18:41.080 --> 00:18:42.800
Control Option Lock Enabled.

00:18:42.820 --> 00:18:43.800
Ignore that.

00:18:43.830 --> 00:18:46.290
Control Option Lock Disabled.

00:18:46.370 --> 00:18:49.800
Space, M-A-C.

00:18:49.800 --> 00:18:50.300
Okay.

00:18:50.300 --> 00:18:51.300
Let me do a couple more letters.

00:18:51.300 --> 00:18:53.800
Space, O-S.

00:18:54.100 --> 00:18:55.300
Okay.

00:18:55.430 --> 00:18:57.300
Accessibility.

00:18:57.320 --> 00:19:00.070
A feature that you may find useful
as you're going along and you're

00:19:00.070 --> 00:19:04.750
getting used to the voices is to be
able to speed up the rate of speech.

00:19:04.870 --> 00:19:08.000
Once you get used to it,
they start to feel like they're too slow.

00:19:08.000 --> 00:19:11.300
So let me—with another command,
you can speed up the rate of speech.

00:19:11.360 --> 00:19:12.490
Faster.

00:19:12.490 --> 00:19:12.500
Faster.

00:19:12.620 --> 00:19:13.500
Faster.

00:19:13.500 --> 00:19:13.990
Faster.

00:19:13.990 --> 00:19:14.500
Faster.

00:19:14.500 --> 00:19:14.500
Faster.

00:19:14.650 --> 00:19:17.500
And let me give you an example
of what that would sound like.

00:19:17.540 --> 00:19:19.750
Accessibility defines the techniques
that Mac OS X applications use to

00:19:19.750 --> 00:19:21.690
make their user interpret— Okay.

00:19:22.150 --> 00:19:22.720
Yeah.

00:19:23.060 --> 00:19:25.000
So that may be
unintelligible to most of us,

00:19:25.000 --> 00:19:29.000
but for users who are
used to screen readers,

00:19:29.130 --> 00:19:33.000
they typically do have the
rate of speech that high.

00:19:33.130 --> 00:19:36.410
Now one of the features that
I was showing you here is to be

00:19:36.480 --> 00:19:37.960
able to read the entire document.

00:19:38.060 --> 00:19:41.610
So with one command, you can just have it
start reading everything.

00:19:43.400 --> 00:19:46.550
Alright, so that is,
let's say the user now wants to add

00:19:46.610 --> 00:19:48.520
some information to this document.

00:19:48.520 --> 00:19:51.560
So what I'm going to do is move
the insertion point to the bottom.

00:19:51.560 --> 00:19:53.640
And I'm going to use
the standard arrow keys.

00:19:53.640 --> 00:19:56.200
Now there's two things I want you
to know here when I'm doing this.

00:19:56.300 --> 00:19:59.220
As the insertion point is
moving from line to line,

00:19:59.220 --> 00:20:02.310
VoiceOver will be speaking
out the text on that line.

00:20:02.320 --> 00:20:04.730
Now I'm not going to be
waiting for it to finish.

00:20:04.800 --> 00:20:07.140
The second I know that I'm
not where I want to be,

00:20:07.140 --> 00:20:08.820
I want to be able to just continue on.

00:20:08.820 --> 00:20:12.110
So I'm going to be interrupting
VoiceOver through this and in a couple

00:20:12.210 --> 00:20:13.410
of places in the rest of the demo.

00:20:13.420 --> 00:20:17.660
The second thing is that the
VoiceOver cursor is going to still

00:20:17.830 --> 00:20:18.900
be at the top of the document.

00:20:18.900 --> 00:20:22.640
So it's important to make the
distinction that that is separate

00:20:22.640 --> 00:20:25.480
from the insertion point,
as Eric mentioned before.

00:20:25.480 --> 00:20:26.560
So let me move down.

00:20:26.560 --> 00:20:28.800
Applications used to make
their user interface.

00:20:28.800 --> 00:20:30.460
No or no.

00:20:30.460 --> 00:20:32.770
I think maybe I'll decrease the
rate of speech so that we can

00:20:32.770 --> 00:20:34.200
understand what it's saying.

00:20:34.200 --> 00:20:38.740
Available to an external assistive
app to allow apps to new protocol.

00:20:38.740 --> 00:20:39.640
Okay.

00:20:39.640 --> 00:20:40.710
New line.

00:20:41.490 --> 00:20:43.120
So now I'm just going
to start entering text.

00:20:43.260 --> 00:20:46.800
A-P-P-L-E space.

00:20:46.800 --> 00:20:50.400
Now as you notice,
as I'm typing each key,

00:20:50.400 --> 00:20:52.940
VoiceOver will tell you what
the letter is being displayed.

00:20:52.940 --> 00:20:55.740
Now that can be useful,
but if you're just typing along,

00:20:55.740 --> 00:20:58.200
that can get too much information.

00:20:58.240 --> 00:21:02.100
So what I'm going to do is turn on
a feature that we call Word Echo.

00:21:02.100 --> 00:21:05.010
And instead of hearing each key,
each letter, you hear each word.

00:21:06.730 --> 00:21:08.700
Enabling Word Echo Mode.

00:21:08.780 --> 00:21:11.790
And let me put some more
information in here.

00:21:11.880 --> 00:21:15.780
Computer is at send.

00:21:15.890 --> 00:21:17.800
Francisco period.

00:21:18.300 --> 00:21:18.800
All right.

00:21:18.800 --> 00:21:20.670
So now let's say the user
really wants that name,

00:21:20.760 --> 00:21:22.300
San Francisco, to stand out.

00:21:22.300 --> 00:21:25.650
So I'm going to—let's say
I'm going to make it bold.

00:21:25.750 --> 00:21:27.480
To do that,
I'm going to go up to the menu bar,

00:21:27.560 --> 00:21:31.120
and I'm going to use the standard
full keyboard navigation key command,

00:21:31.120 --> 00:21:32.150
Control-F2.

00:21:32.300 --> 00:21:36.110
Menu bar onto Apple with submenu.

00:21:36.830 --> 00:21:39.300
What's new here is that you
get the audible feedback.

00:21:39.510 --> 00:21:41.800
Now I can arrow around the menus.

00:21:41.900 --> 00:21:44.630
Text edit with file with submenu.

00:21:45.950 --> 00:21:50.290
And what's new in Tiger,
if I know that there is a menu,

00:21:50.300 --> 00:21:51.610
In this case, let's say format.

00:21:51.680 --> 00:21:55.800
I can just start typing format and it
will jump me directly to that menu.

00:21:56.140 --> 00:21:58.700
Format with submenu.

00:21:58.750 --> 00:22:00.000
Okay, so let me go into the menu.

00:22:00.110 --> 00:22:02.100
Format menu.

00:22:02.240 --> 00:22:03.680
Font with submenu.

00:22:03.870 --> 00:22:05.840
I know this is a submenu,
so I'm going to go into it.

00:22:06.080 --> 00:22:07.260
Font menu.

00:22:07.480 --> 00:22:09.340
Bold, Command B.

00:22:09.410 --> 00:22:10.430
Bold, Command B.

00:22:10.620 --> 00:22:11.820
So I'm going to select that.

00:22:12.070 --> 00:22:13.140
Bold.

00:22:13.170 --> 00:22:15.660
I should have selected text first,
so let me do that.

00:22:15.730 --> 00:22:16.660
Friends send.

00:22:16.690 --> 00:22:17.160
There we go.

00:22:17.160 --> 00:22:18.780
Highlighted.

00:22:19.330 --> 00:22:20.300
Bold.

00:22:21.300 --> 00:22:24.060
And apparently that isn't
standing out quite enough,

00:22:24.060 --> 00:22:26.240
so I'm going to need to add some
color to make it more lively.

00:22:26.260 --> 00:22:30.250
So I'm going to bring up this color
panel with a standard key combination,

00:22:30.250 --> 00:22:31.300
command shift C.

00:22:31.310 --> 00:22:34.270
Show colors.

00:22:34.540 --> 00:22:38.220
I can move keyboard focus to
that panel with the standard

00:22:38.220 --> 00:22:40.640
key combination Ctrl+F6.

00:22:40.850 --> 00:22:45.920
VoiceOver will announce the
window that you move to and

00:22:45.920 --> 00:22:48.160
the item that you move on to.

00:22:48.160 --> 00:22:52.510
And now I'm going to move
the VoiceOver cursor to

00:22:52.510 --> 00:22:52.510
the crayon color picker.

00:22:53.500 --> 00:22:58.800
Color wheel, color sliders,
color palettes, image palettes, crayons,

00:22:58.800 --> 00:22:59.340
button.

00:22:59.400 --> 00:23:00.800
And select it.

00:23:00.880 --> 00:23:03.140
Press crayons, button.

00:23:03.190 --> 00:23:05.630
All right, and up opens a box of crayons.

00:23:05.670 --> 00:23:07.980
Now, well,
the color panel is actually in my way.

00:23:07.980 --> 00:23:10.410
I can't see my text
that I want to change,

00:23:10.560 --> 00:23:13.070
so I can ask VoiceOver to
move the window.

00:23:13.220 --> 00:23:16.310
Now,
keep in mind this is without the mouse.

00:23:16.370 --> 00:23:17.940
Moving window.

00:23:18.040 --> 00:23:19.270
Step right.

00:23:19.270 --> 00:23:20.590
Step right.

00:23:20.590 --> 00:23:21.910
Step right.

00:23:21.910 --> 00:23:23.300
Step right.

00:23:23.300 --> 00:23:24.270
Okay.

00:23:24.390 --> 00:23:31.140
And now I can move down and select the
color that I want to change the text to.

00:23:32.170 --> 00:23:36.600
Stop moving window Maroon
Strawberry Carnation

00:23:36.790 --> 00:23:39.990
Strawberry Press strawberry Okay,
I like strawberry.

00:23:39.990 --> 00:23:42.140
All right, so there we go.

00:23:42.520 --> 00:23:46.280
That is reading text and editing text.

00:23:46.280 --> 00:23:48.740
So now let's say the user
needs to check their email.

00:23:48.930 --> 00:23:51.800
So what I'm going to do is
move to the mail application,

00:23:51.800 --> 00:23:53.400
and I'm going to use the dock to do that.

00:23:53.400 --> 00:23:55.970
I'm going to use the
standard key combination,

00:23:55.970 --> 00:23:57.150
Control-F3.

00:23:57.520 --> 00:23:59.400
Finder, running application.

00:23:59.400 --> 00:24:01.400
Again,
what's new here is the audible feedback.

00:24:01.400 --> 00:24:04.400
I'm going to arrow around to mail.

00:24:04.400 --> 00:24:10.400
System preferences, Safari, terminal,
text edit, mail, running application.

00:24:10.400 --> 00:24:12.400
And select it with the space bar.

00:24:12.910 --> 00:24:18.390
Mail application, window, drafts,
three drafts.

00:24:18.480 --> 00:24:20.400
All right,
so VoiceOver announces the application

00:24:20.400 --> 00:24:22.910
and the name of the window.

00:24:23.210 --> 00:24:25.480
So I can navigate around
here among the controls,

00:24:25.480 --> 00:24:27.100
whether they're disabled or not.

00:24:27.100 --> 00:24:29.430
Reply, Disable button.

00:24:29.430 --> 00:24:31.100
Delete, Disable button.

00:24:31.100 --> 00:24:33.490
And that's important because
even though I can't interact

00:24:33.490 --> 00:24:36.590
with that button right now,
I need to know where it is so that

00:24:36.600 --> 00:24:39.100
when I do need to interact with it,
I can go to it.

00:24:39.100 --> 00:24:42.100
I can move down to static
text like Eric showed.

00:24:42.100 --> 00:24:44.100
In, Three, Button.

00:24:44.100 --> 00:24:46.520
Three messages, Text.

00:24:47.200 --> 00:24:49.500
So now the user needs
to check their email.

00:24:49.500 --> 00:24:53.380
So what I'm going to do is
I need to go into this table,

00:24:53.470 --> 00:24:58.700
select an email, move out, down,
and into the body of the mail.

00:24:58.730 --> 00:25:02.000
Now keep in mind, for those who can see,
all that requires is I move the mouse,

00:25:02.250 --> 00:25:04.590
click on the list, glance down,
and start reading.

00:25:04.610 --> 00:25:06.230
I want to read the next email.

00:25:06.420 --> 00:25:09.000
I move the mouse a little, click,
glance down, and read.

00:25:09.030 --> 00:25:14.900
This is what the default voiceover
behavior would require the user to do.

00:25:14.980 --> 00:25:18.110
Control Option Lock Enabled.

00:25:18.110 --> 00:25:20.690
Control Option Lock Disabled.

00:25:21.100 --> 00:25:22.380
Table.

00:25:22.380 --> 00:25:25.780
Into table on row one column status call.

00:25:25.780 --> 00:25:26.670
Select.

00:25:26.710 --> 00:25:29.620
Selected focusing keyboard on table.

00:25:29.870 --> 00:25:31.280
Out of table.

00:25:31.420 --> 00:25:32.970
Splitter.

00:25:32.970 --> 00:25:35.000
Scroll area.

00:25:35.000 --> 00:25:36.530
Into scroll area.

00:25:36.530 --> 00:25:38.330
Onto text entry area.

00:25:38.370 --> 00:25:39.830
Text entry area.

00:25:39.840 --> 00:25:43.240
And now I can ask spoken
interface to read that email.

00:25:43.240 --> 00:25:46.490
Eric, I'm going to need three months off.

00:25:46.500 --> 00:25:47.500
Okay.

00:25:47.500 --> 00:25:49.190
Rick.

00:25:50.190 --> 00:25:53.570
So this is a good example of
where making your applications

00:25:53.640 --> 00:25:57.240
accessible is a lot more than
just providing strings for the UI.

00:25:57.240 --> 00:26:02.040
You're going to need to identify areas
in your application where it's much

00:26:02.440 --> 00:26:06.110
more difficult for somebody using
a spoken interface to do something

00:26:06.150 --> 00:26:08.190
very simple like check your email.

00:26:08.260 --> 00:26:11.370
And Eric's going to be asking you
and telling you somewhat how to

00:26:11.370 --> 00:26:13.260
do this when he comes back on.

00:26:13.280 --> 00:26:16.420
And basically, in this case,
mail has a situation where they

00:26:16.650 --> 00:26:21.200
have two UI elements that are linked
together in some way and by some

00:26:21.200 --> 00:26:24.120
meaning that your application defines.

00:26:24.140 --> 00:26:27.820
But you can't get to it
directly through voiceover.

00:26:28.090 --> 00:26:34.280
So voiceover and accessibility
APIs provide you a way to just stipulate,

00:26:34.280 --> 00:26:36.640
link these two elements together.

00:26:36.640 --> 00:26:38.910
All right.

00:26:38.950 --> 00:26:43.280
And the last thing that
I want to show you is--

00:26:44.100 --> 00:26:48.950
We provide a list of elements
so that you can easily go to one

00:26:48.950 --> 00:26:51.100
place or another on the screen.

00:26:51.250 --> 00:26:54.400
So let's say, for instance,
you know that you have

00:26:54.420 --> 00:26:59.710
an item on the screen,
in this case, "Get Mail," and you want

00:27:00.670 --> 00:27:00.890
to go directly to it.

00:27:00.890 --> 00:27:00.890
You can bring up a list

00:27:01.500 --> 00:27:03.530
With a voiceover command.

00:27:03.620 --> 00:27:04.720
Building item list.

00:27:04.720 --> 00:27:05.800
Item list menu.

00:27:06.030 --> 00:27:07.500
46 items.

00:27:07.610 --> 00:27:10.610
So there are 46 items on this window,
and all I need to do is start

00:27:10.610 --> 00:27:13.110
typing some portion of that.

00:27:13.100 --> 00:27:24.900
[Transcript missing]

00:27:26.120 --> 00:27:28.100
and the VoiceOver cursor moves
directly to it and then I can

00:27:28.200 --> 00:27:29.500
start interacting with it.

00:27:29.620 --> 00:27:31.290
Okay,
that's pretty much all of the features

00:27:31.300 --> 00:27:34.020
that I wanted to show you today,
but there are many more, so I urge you,

00:27:34.170 --> 00:27:36.380
please,
use VoiceOver to test the level of

00:27:36.380 --> 00:27:40.140
accessibility in your applications so
that it's as easy to use for everybody

00:27:40.140 --> 00:27:41.900
and not just those who can see.

00:27:42.010 --> 00:27:43.530
And with that,
I'd like to ask Eric Seymour

00:27:43.530 --> 00:27:44.180
to come back on.

00:27:44.450 --> 00:27:46.090
Thank you very much.

00:27:51.560 --> 00:27:55.740
OK,
so of all the things that Rick showed,

00:27:55.750 --> 00:28:00.880
the most important thing that he showed
for many of you is the screen curtain.

00:28:01.110 --> 00:28:04.340
And that is turn that screen
curtain on and try to figure out

00:28:04.340 --> 00:28:05.760
if you can use your application.

00:28:05.800 --> 00:28:08.260
That's probably the most
effective testing tool you can do.

00:28:08.370 --> 00:28:10.100
Because if you can't
use your application,

00:28:10.100 --> 00:28:14.330
and you know it, you're coded it,
then a user who's not relying on the

00:28:14.330 --> 00:28:16.070
visual display won't be able to use it.

00:28:16.160 --> 00:28:18.020
So screen curtain, very important.

00:28:18.050 --> 00:28:21.280
VoiceOver itself is a testing tool,
effectively.

00:28:21.360 --> 00:28:22.690
So let's keep going.

00:28:22.930 --> 00:28:25.400
So we've given you an
overview of VoiceOver,

00:28:25.400 --> 00:28:27.220
Apple's new spoken interface.

00:28:27.230 --> 00:28:30.880
Now I'm going to talk about
accessibility API basics.

00:28:30.990 --> 00:28:33.120
So to do that,
I'm going to frame this within

00:28:33.220 --> 00:28:34.890
the context of VoiceOver.

00:28:35.010 --> 00:28:37.800
So applications are out
there running on the system.

00:28:37.910 --> 00:28:40.220
Some of those applications
are built by Apple.

00:28:40.270 --> 00:28:43.000
Many of them, hopefully more of them,
are built by you guys.

00:28:43.030 --> 00:28:46.470
And those applications--

00:28:46.600 --> 00:28:51.040
VoiceOver is this process that's
also sitting out there on the system,

00:28:51.040 --> 00:28:55.000
and its job is to listen to your
applications and sometimes request

00:28:55.130 --> 00:28:58.600
things of your application and
produce feedback for a user.

00:28:58.900 --> 00:29:04.600
VoiceOver does this by sitting on
top of a set of spoken widgets.

00:29:04.600 --> 00:29:08.340
Just like Carbon and Cocoa have
widgets that are very graphically

00:29:08.340 --> 00:29:11.600
based and very mouse-based,
perhaps, sometimes keyboard-based,

00:29:11.600 --> 00:29:16.590
these widgets' foundation are based
on spoken feedback and keyboard input.

00:29:16.590 --> 00:29:21.000
And these widgets are based on
top of the Accessibility API,

00:29:21.030 --> 00:29:24.180
notably attributes of
things in your interface,

00:29:24.300 --> 00:29:27.580
actions, and notifications.

00:29:27.710 --> 00:29:32.710
Now, what this means is it's really
important that your applications give

00:29:33.130 --> 00:29:37.970
accessibility clients like VoiceOver the
information they need to make the end

00:29:37.970 --> 00:29:40.590
user successful using your application.

00:29:40.600 --> 00:29:43.600
So, that's what we're going
to talk about here.

00:29:43.600 --> 00:29:45.580
And then there's a whole other
session tomorrow which goes

00:29:45.580 --> 00:29:47.600
into much greater detail,
Session 424.

00:29:47.600 --> 00:29:50.450
I'll plug it several times today,
don't worry.

00:29:50.600 --> 00:29:53.370
So, one of the questions that
comes up immediately is,

00:29:53.420 --> 00:29:57.600
"Well, we write our application in Cocoa,
or we write it in Carbon,

00:29:57.600 --> 00:30:00.530
and how do you know the difference,
and how do you make heads or tails

00:30:00.600 --> 00:30:02.760
of our view hierarchy?" You know,
they're two completely

00:30:02.760 --> 00:30:04.510
different programming models,
for the most part.

00:30:04.620 --> 00:30:07.510
And the beauty of this
is the Accessibility

00:30:07.510 --> 00:30:11.030
APIs abstract that away for us,
they provide you a way to speak

00:30:11.180 --> 00:30:14.480
to us or any other accessibility
client in a common language.

00:30:14.770 --> 00:30:18.600
So, everything in your
application is a UI element.

00:30:18.860 --> 00:30:23.160
And literally, when I say everything,
I mean everything.

00:30:23.160 --> 00:30:25.540
So, Windows are UI elements.

00:30:26.410 --> 00:30:31.710
Things inside Windows are UI elements:
buttons, text fields, pop-ups,

00:30:31.720 --> 00:30:33.100
what have you.

00:30:33.100 --> 00:30:37.350
Things within things in
your window are UI elements.

00:30:37.540 --> 00:30:39.800
So you could have a scroll
area which has children,

00:30:39.800 --> 00:30:42.100
and its children might have children.

00:30:42.100 --> 00:30:45.920
And so there is ancestry—there's a
concept of ancestry to your UI elements.

00:30:46.040 --> 00:30:49.490
In fact,
your application is a UI element.

00:30:49.500 --> 00:30:52.230
And so what does this really mean for us?

00:30:52.370 --> 00:30:58.680
Well, let's take a closer look at the
three main pieces of accessibility:

00:30:58.680 --> 00:31:01.750
attributes, actions, and notifications.

00:31:01.800 --> 00:33:26.000
[Transcript missing]

00:33:29.080 --> 00:33:31.000
Finally, there are notifications.

00:33:31.000 --> 00:33:37.000
Notifications are where—this is really
important to an accessibility client.

00:33:37.000 --> 00:33:40.900
It's also probably something that
you're going to deal with the least,

00:33:41.120 --> 00:33:42.310
but it's really, really critical.

00:33:42.410 --> 00:33:46.580
So when I say deal with it the least,
notifications are, again,

00:33:46.580 --> 00:33:52.420
knitted into the frameworks and critical
for operation of an accessibility client.

00:33:52.710 --> 00:33:54.260
You're going to get some
of this behavior for free.

00:33:54.260 --> 00:33:57.600
A lot of the notifications that we
defend on are application-provided,

00:33:57.600 --> 00:34:01.280
which means even if you're
a fairly custom application,

00:34:01.280 --> 00:34:03.070
at the application level,
we're going to get all the

00:34:03.070 --> 00:34:04.140
notifications that we need.

00:34:04.140 --> 00:34:06.210
This is a more advanced topic.

00:34:06.210 --> 00:34:09.390
This is one where I really,
really want you to go to

00:34:09.430 --> 00:34:14.410
session 424 tomorrow at 1045,
I think, in the same room.

00:34:14.480 --> 00:34:15.830
That's notifications.

00:34:16.460 --> 00:34:21.350
So the basics of accessibility:
attributes, actions, notifications,

00:34:21.350 --> 00:34:24.540
standard behavior out of the box,
typically with Carbon and Cocoa.

00:34:24.710 --> 00:34:29.040
So now we come to how do you make your
application a really great application?

00:34:29.300 --> 00:34:31.600
And of course, I'll add some flash to it.

00:34:31.600 --> 00:34:33.650
How do you make the
five-star application,

00:34:33.740 --> 00:34:38.200
an application that to a user who's not
relying on the graphical user interface,

00:34:38.200 --> 00:34:41.830
how do you make that something that that
user can appreciate and really enjoy and

00:34:41.900 --> 00:34:45.310
make that user want to use a Macintosh
and want to purchase your application?

00:34:45.320 --> 00:34:48.480
So number one is all
the basics need to work.

00:34:48.560 --> 00:34:50.070
So all the things that
I just talked about.

00:34:50.170 --> 00:34:52.800
And so if you were to
build a basic application,

00:34:52.800 --> 00:34:56.240
again, using some of our standard tools,
the basics are going to

00:34:56.240 --> 00:34:57.510
work nine times out of ten.

00:34:57.810 --> 00:34:59.810
There might be a few details
that you might want to do,

00:34:59.810 --> 00:35:02.550
depending on the way that you've
designed your application.

00:35:02.560 --> 00:35:05.210
But at a bare minimum,
you want to be able to get to

00:35:05.210 --> 00:35:06.950
everything using VoiceOver.

00:35:07.080 --> 00:35:10.370
So the VoiceOver cursor needs to move
all the things that are controllable

00:35:10.480 --> 00:35:13.610
things in your application or
readable things in your application.

00:35:13.690 --> 00:35:14.180
And it needs to support
the basic application.

00:35:14.180 --> 00:35:14.640
So that's the first thing.

00:35:14.690 --> 00:35:14.920
So the second thing is,
you want to be able to get to

00:35:14.920 --> 00:35:15.100
everything using VoiceOver.

00:35:15.180 --> 00:35:17.910
accessibility API attributes.

00:35:18.390 --> 00:35:23.490
Then, this is where only you can
help provide the user with

00:35:23.860 --> 00:35:27.740
information about your application.

00:35:27.740 --> 00:35:31.620
There is a concept of descriptions.

00:35:31.620 --> 00:35:35.640
The best way to show this is
really to go right to an example.

00:35:35.640 --> 00:35:38.960
The basics of descriptions
are documented.

00:35:38.960 --> 00:35:42.860
A K-A-X description attribute is
a new attribute that's defined

00:35:42.860 --> 00:35:44.760
in the accessibility frameworks.

00:35:44.760 --> 00:35:46.660
There are some rules associated with it.

00:35:46.660 --> 00:35:48.960
No punctuation, lowercase.

00:35:49.020 --> 00:35:54.410
I'll save that for your future perusal,
but the example is really where

00:35:54.410 --> 00:35:55.560
the rubber meets the road.

00:35:55.560 --> 00:35:59.610
So,
if I'm in Finder and I've got a toolbar,

00:35:59.810 --> 00:36:03.830
there might be an item on that
toolbar that has no label,

00:36:03.830 --> 00:36:04.760
no title.

00:36:04.760 --> 00:36:07.360
So, if I have vision,
I can look at that and discern

00:36:07.360 --> 00:36:10.560
that that symbolic left
arrow probably means go back,

00:36:10.560 --> 00:36:14.460
go to the previous thing,
common metaphor on a computer.

00:36:14.460 --> 00:36:18.430
But this is all that can be gleaned by
an accessibility client like VoiceOver.

00:36:18.440 --> 00:36:19.440
Button.

00:36:19.450 --> 00:36:19.690
Button.

00:36:19.690 --> 00:36:20.340
Let me do that one more time.

00:36:21.310 --> 00:36:21.440
Button.

00:36:21.480 --> 00:36:21.750
Okay.

00:36:22.090 --> 00:36:23.140
Not very useful.

00:36:23.140 --> 00:36:24.790
Close your eyes and listen to that.

00:36:24.790 --> 00:36:25.930
You're like, okay, which one?

00:36:25.930 --> 00:36:27.130
I don't know which one.

00:36:27.130 --> 00:36:28.310
I don't know what to do.

00:36:28.310 --> 00:36:29.360
What do I do next?

00:36:29.360 --> 00:36:30.150
Right?

00:36:30.150 --> 00:36:33.580
So, what you really need to do --
Back to previous container.

00:36:33.580 --> 00:36:34.230
Button.

00:36:34.250 --> 00:36:35.460
-- is add a little context.

00:36:35.460 --> 00:36:36.870
And only you know that context.

00:36:36.870 --> 00:36:40.200
The accessibility APIs can't
make that up on the fly.

00:36:40.200 --> 00:36:43.480
And so,
we ask that you add in certain places,

00:36:43.620 --> 00:36:45.420
especially items in your user interface.

00:36:45.420 --> 00:36:46.500
So,
if you have a user interface which don't

00:36:46.630 --> 00:36:51.080
have title representation or which have
some sort of symbolic representation,

00:36:51.160 --> 00:36:53.980
we ask that you provide a
little bit more context so that

00:36:54.010 --> 00:36:56.380
VoiceOver can echo that information.

00:36:56.490 --> 00:36:57.300
Here's another example.

00:36:57.300 --> 00:36:58.300
List.

00:36:58.320 --> 00:36:58.730
Okay.

00:36:58.730 --> 00:37:02.900
We know that this is a list,
but that doesn't tell us very much.

00:37:02.930 --> 00:37:05.580
As a user, what we really want to
hear is -- Sidebar list.

00:37:05.770 --> 00:37:06.080
Okay.

00:37:06.080 --> 00:37:06.790
Sidebar.

00:37:06.790 --> 00:37:09.430
Well,
that's meaningful to me because I'm a

00:37:09.430 --> 00:37:13.600
Finder user and I know the Finder is a
sidebar and that's where I put my stuff.

00:37:13.640 --> 00:37:14.070
Okay.

00:37:14.070 --> 00:37:15.180
That's how I get the things.

00:37:15.180 --> 00:37:18.610
It has context.

00:37:18.920 --> 00:37:21.710
Just to note,
there is a way to create good

00:37:21.710 --> 00:37:26.000
and bad descriptions when you're
labeling some of your user interface.

00:37:26.050 --> 00:37:29.620
A way to create a bad
description is to go overboard,

00:37:29.740 --> 00:37:31.360
to add too much information.

00:37:31.480 --> 00:37:34.270
So, it turns out that the
Accessibility APIs know about

00:37:34.360 --> 00:37:37.430
every widget in the interface,
generally speaking, especially if you're

00:37:37.430 --> 00:37:38.480
using standard widgets.

00:37:38.580 --> 00:37:41.540
And those have attributes that
are role descriptions which can

00:37:41.540 --> 00:37:45.370
tell spoken interface the word
"button" or the word "list" or the

00:37:45.370 --> 00:37:47.280
word "menu item" or what have you.

00:37:47.280 --> 00:37:49.220
We already know that information.

00:37:49.290 --> 00:37:51.920
And so don't add that
information to your description.

00:37:52.020 --> 00:37:52.860
It'll be redundant.

00:37:53.040 --> 00:37:58.240
Only add the piece that identifies
or differentiates the actual

00:37:58.390 --> 00:38:00.880
functionality of that particular widget.

00:38:00.880 --> 00:38:04.000
So, here's an example of adding
too much information.

00:38:04.100 --> 00:38:05.310
Back to previous container.

00:38:05.440 --> 00:38:06.160
Button, button.

00:38:06.160 --> 00:38:08.880
If you add the word "button" to the end,
we're going to echo it twice

00:38:08.880 --> 00:38:12.750
because we don't know— we have
to assume that your intention for

00:38:12.890 --> 00:38:14.790
that description was clean and...

00:38:14.930 --> 00:38:17.200
"Contained only when it needed
to." Here's another bad example.

00:38:17.200 --> 00:38:21.280
"Sidebar list list." Okay,
so not too much in the descriptions.

00:38:21.370 --> 00:38:22.170
So that's descriptions.

00:38:22.260 --> 00:38:27.850
That's for labeling an element
that has a symbolic representation

00:38:27.850 --> 00:38:31.340
and doesn't have a visual title.

00:38:31.340 --> 00:38:31.340
Now,

00:38:31.470 --> 00:38:34.210
There's another type of element
which is sort of similar to this,

00:38:34.310 --> 00:38:36.710
another type of attribute,
and that's sometimes

00:38:36.710 --> 00:38:40.780
in your user interface,
there are things that have labels.

00:38:40.780 --> 00:38:41.400
You label them.

00:38:41.400 --> 00:38:44.770
You drag them out of Interface Builder,
you set up your little

00:38:44.770 --> 00:38:46.280
static text to be a prompt.

00:38:46.490 --> 00:38:48.760
But the problem is,
sometimes that prompt is above,

00:38:48.760 --> 00:38:51.190
sometimes it's below,
sometimes it's to the left,

00:38:51.210 --> 00:38:52.510
sometimes it's to the right.

00:38:52.860 --> 00:38:54.280
Sometimes it itself is a symbol.

00:38:54.280 --> 00:38:59.000
Now, as a sighted person,
I could look at that and figure out

00:38:59.180 --> 00:39:03.350
through the context and layout and
all the visual cues what that means,

00:39:03.350 --> 00:39:09.260
but if I don't have that information,
I don't know what it's representing.

00:39:09.340 --> 00:39:12.680
And so there's a way to associate
two elements so that one element

00:39:12.680 --> 00:39:14.640
can serve as the title of another.

00:39:14.640 --> 00:39:17.660
And this is done through the
title UI element attribute,

00:39:17.720 --> 00:39:20.260
and we'll show you a
way to do this later.

00:39:20.260 --> 00:39:21.650
So this is really, really important.

00:39:21.660 --> 00:39:23.280
So if you've got things
that serve as prompts,

00:39:23.880 --> 00:39:30.380
it's a nice, more than nice,
it's somewhat of a required feature from

00:39:30.380 --> 00:39:37.150
a user of a voiceover to want to know,
when I land on that text field,

00:39:37.160 --> 00:39:40.110
look at that prompt to tell me
what that text field's name is.

00:39:40.200 --> 00:39:41.650
All right.

00:39:42.020 --> 00:39:43.960
And then finally we get
to link UI elements.

00:39:43.960 --> 00:39:46.480
So in the demo that Rick gave,
he showed mail.

00:39:46.590 --> 00:39:52.780
And mail, if you're users of mail,
of Apple's mail client,

00:39:53.480 --> 00:39:55.380
there's a table and there
are a bunch of messages,

00:39:55.390 --> 00:39:57.230
and lots of times if you're like me,
you've got 3,000 or

00:39:57.300 --> 00:40:00.880
4,000 messages in there,
and then you've got your text.

00:40:00.880 --> 00:40:03.880
And what do we do every
day when we read mail?

00:40:03.910 --> 00:40:05.980
We glance up and down, right?

00:40:06.010 --> 00:40:09.420
We glance at this selection,
we select it, we glance down, we read,

00:40:09.420 --> 00:40:10.480
we glance up.

00:40:10.510 --> 00:40:14.250
And so those two things
are really tightly coupled,

00:40:14.470 --> 00:40:18.420
but from a UI element perspective,
there's no way for us to know

00:40:18.420 --> 00:40:19.630
that they're tightly coupled.

00:40:19.710 --> 00:40:23.080
There's no way for voiceover
to figure that out on its own.

00:40:23.080 --> 00:40:25.080
You've got to give us that little hint.

00:40:25.250 --> 00:40:28.080
And so there's this concept of
a link UI element attribute,

00:40:28.080 --> 00:40:30.780
the ability for you to just,
in your interface, say,

00:40:30.780 --> 00:40:34.350
"I want this thing to link to this
thing." And then voiceover can make that

00:40:34.350 --> 00:40:36.560
a one keystroke thing for an end user.

00:40:36.580 --> 00:40:42.580
The user can then move the voiceover
cursor from their mail item,

00:40:42.580 --> 00:40:45.060
or from the subject line,
down to their mail message, read it,

00:40:45.070 --> 00:40:49.050
link back, select another,
and they can just move back and forth,

00:40:49.050 --> 00:40:52.680
effectively glancing back and
forth using the voiceover cursor.

00:40:53.740 --> 00:40:57.120
This perhaps is one of the most
important things you could do to

00:40:57.130 --> 00:40:59.060
your application to make it usable.

00:40:59.420 --> 00:41:03.210
So anytime you think you notice
yourself—if you're sighted and you

00:41:03.320 --> 00:41:07.140
notice yourself glancing between
two major pieces of functionality

00:41:07.150 --> 00:41:10.370
and it's more than just going
from one button to another,

00:41:10.370 --> 00:41:12.890
think you might need a link UI element.

00:41:13.370 --> 00:41:15.910
The fifth thing really has nothing
to do with the accessibility APIs,

00:41:16.060 --> 00:41:19.140
but it's unbelievably important,
and that's full keyboard navigation.

00:41:19.230 --> 00:41:22.720
So like Rick did for his demonstration,
unplug your mouse and see if

00:41:22.720 --> 00:41:24.860
you can drive your application.

00:41:24.910 --> 00:41:26.900
And if you can, then you're successful.

00:41:26.980 --> 00:41:29.490
But if you can't,
that makes it that much harder for

00:41:29.490 --> 00:41:34.380
a user who has limited or no use
of a mouse to use your application.

00:41:34.420 --> 00:41:39.380
And it requires using the voiceover
cursor to get to some of those elements.

00:41:39.380 --> 00:41:43.630
Just the best possible environment
is if every aspect of your

00:41:43.670 --> 00:41:48.120
application can be accomplished
with full keyboard navigation.

00:41:48.130 --> 00:41:51.260
Now,
one question that always comes up is,

00:41:51.260 --> 00:41:54.650
well, I have this drag gesture,
and that's how I do things.

00:41:54.660 --> 00:41:56.720
It's a drag gesture.

00:41:56.780 --> 00:41:58.370
What do I do about that?

00:41:58.500 --> 00:42:01.720
So the best example that I like
to talk about with that is Finder.

00:42:01.920 --> 00:42:04.550
So in Finder,
we typically copy files by dragging

00:42:04.560 --> 00:42:06.140
them from one place to another.

00:42:06.170 --> 00:42:09.250
But in Finder,
you can also cut and paste files

00:42:09.360 --> 00:42:12.140
effectively using the menu commands,
and that serves the same purpose.

00:42:12.140 --> 00:42:15.600
It will select a file,
copy from the menu,

00:42:15.610 --> 00:42:18.600
move to a new location, paste,
accomplishes the same task.

00:42:18.680 --> 00:42:22.980
So that's a perfectly acceptable
alternative to accomplish the same goal,

00:42:22.980 --> 00:42:25.520
and it's totally doable by the keyboard.

00:42:25.760 --> 00:42:29.080
So I would encourage you to do that
to parts of your application that

00:42:29.080 --> 00:42:34.060
only have keyboard gestures-- or,
excuse me, drag gestures.

00:42:35.130 --> 00:42:37.790
So we get to the end of this list,
we do the basics,

00:42:37.790 --> 00:42:41.280
and then we provide a few
things to add context,

00:42:41.280 --> 00:42:44.400
and then we make sure that we've
got full keyboard navigation.

00:42:44.400 --> 00:42:45.480
And so we have success.

00:42:45.630 --> 00:42:50.020
So one of the questions that I get,
I get internally and the few times that

00:42:50.020 --> 00:42:55.190
I've had exposure externally to folks who
are accessorizing their applications is,

00:42:55.190 --> 00:42:57.740
"How hard is this going to be for
us to do?" And it looks really

00:42:57.740 --> 00:43:00.490
easy when you present it like this,
but how hard is this in reality?

00:43:00.500 --> 00:43:04.190
And so the best way to answer
that is a real simple answer:

00:43:04.190 --> 00:43:04.890
it depends.

00:43:05.000 --> 00:43:06.500
It depends on what your application is.

00:43:06.500 --> 00:43:12.500
And the real answer is going to come
when you go to session 424 tomorrow,

00:43:12.500 --> 00:43:18.030
but my answer is always,
if you have a fairly modernly

00:43:18.270 --> 00:43:23.300
written Cocoa application or an
HIV-based Carbon application,

00:43:23.300 --> 00:43:25.500
you're going to be in pretty good shape.

00:43:25.500 --> 00:43:29.500
The frameworks have had
several releases of iteration,

00:43:29.500 --> 00:43:30.500
and they're going to be
in pretty good shape.

00:43:30.500 --> 00:43:31.500
Things are going to happen
automatically for you.

00:43:31.500 --> 00:43:36.550
But if you have a lot of
custom views in Cocoa,

00:43:36.550 --> 00:43:42.500
or you even have your own type of view,
you've done some very, very custom thing,

00:43:42.500 --> 00:43:45.500
or you've got some legacy code,
either Carbon or Cocoa,

00:43:45.500 --> 00:43:48.740
and you haven't taken the
opportunity yet to bring it up

00:43:48.740 --> 00:43:51.480
to date to current techniques
for accomplishing the same thing,

00:43:51.500 --> 00:43:51.500
now might be the time to do that,
because that's going to

00:43:51.500 --> 00:43:51.500
be a bigger challenge.

00:43:51.610 --> 00:43:56.880
So perhaps adding accessibility to your
applications and getting into the new

00:43:57.120 --> 00:43:59.500
technology that's coming out of it,
that's going to be a bigger challenge.

00:43:59.500 --> 00:44:04.420
And getting into a new market of users
might be a catalyst for perhaps bringing

00:44:04.960 --> 00:44:11.500
some of your older code into some of
the new approaches that are used today.

00:44:13.000 --> 00:46:23.900
[Transcript missing]

00:46:26.390 --> 00:46:29.490
And then finally, like I've already said,
the most important tool is

00:46:29.490 --> 00:46:31.680
VoiceOver and the screen curtain.

00:46:31.680 --> 00:46:32.940
Use this to test your application.

00:46:32.940 --> 00:46:34.500
This is where the rubber meets the road.

00:46:34.570 --> 00:46:37.120
If you don't do it first, somebody will.

00:46:37.230 --> 00:46:40.940
A school teacher will, an employer will,
a government agency will.

00:46:41.160 --> 00:46:43.730
It's really,
really important that this new

00:46:43.770 --> 00:46:46.340
interface that's part of Aqua,
if you will,

00:46:46.340 --> 00:46:50.560
is something that somebody's going
to look at your application with.

00:46:50.830 --> 00:46:54.050
And you want to make sure that
your application behaves and

00:46:54.050 --> 00:46:55.800
works well using this interface.

00:46:56.500 --> 00:46:58.360
So with that,
I'd like to invite Aaron Haney on

00:46:58.480 --> 00:47:01.770
stage to give you a demonstration
of some of these tools.

00:47:04.350 --> 00:47:04.950
Thanks, Eric.

00:47:04.960 --> 00:47:09.840
So what I'm going to go over
here is just a quick example.

00:47:09.840 --> 00:47:13.400
What I have is a small
Hello World style app,

00:47:13.400 --> 00:47:17.080
and I'm going to take a look at it
with the accessibility tools just to

00:47:17.300 --> 00:47:20.680
show you the procedure for checking
out your application and seeing where

00:47:20.680 --> 00:47:22.610
it stands in terms of accessibility.

00:47:22.670 --> 00:47:25.240
So just to start off with,
let's just build and run the app.

00:47:25.240 --> 00:47:27.640
And you actually saw this in the
screenshot when Eric was going

00:47:27.640 --> 00:47:29.060
through the slides a moment ago.

00:47:29.070 --> 00:47:31.890
All it is is a little
Hello World application with a

00:47:31.970 --> 00:47:37.000
place for the user to enter their
name and a nice OK button to click.

00:47:37.850 --> 00:47:42.040
So, the first thing you want to do is
take a look at this application

00:47:42.040 --> 00:47:43.550
using Accessibility Verifier.

00:47:43.550 --> 00:47:45.960
And as Eric mentioned,
there's a new folder inside

00:47:45.960 --> 00:47:49.220
Developer Applications Utilities
called Accessibility Tools.

00:47:49.310 --> 00:47:51.700
And that's where you'll
find Accessibility Verifier.

00:47:51.700 --> 00:47:54.520
And when you launch it,
you get a blank window like

00:47:54.520 --> 00:47:56.700
this with an application pop-up.

00:47:56.730 --> 00:47:59.610
And from that application pop-up,
you want to select—I apologize for

00:47:59.610 --> 00:48:03.650
the small font—you want to select
your application as it's running.

00:48:03.810 --> 00:48:05.700
This is runtime checking.

00:48:05.700 --> 00:48:10.210
And the first thing it
does is give you a tree

00:48:10.600 --> 00:48:25.400
[Transcript missing]

00:48:27.140 --> 00:48:28.460
There are several tests you can run.

00:48:28.500 --> 00:48:30.540
Click the Choose Test button.

00:48:30.540 --> 00:48:33.500
Each one has an explanation.

00:48:33.500 --> 00:48:34.110
Turn them on and off.

00:48:34.120 --> 00:48:35.000
They're all on by default.

00:48:35.000 --> 00:48:36.600
We recommend that you run them all.

00:48:36.650 --> 00:48:39.900
When you click Verify,
it performs the test.

00:48:39.900 --> 00:48:43.890
Now that it's done,
you get a list of warnings.

00:48:44.680 --> 00:48:46.810
It's very comprehensive,
so you may get a lot of warnings.

00:48:46.890 --> 00:48:52.400
So what we have here is a filter
to look at just the critical ones.

00:48:53.200 --> 00:48:55.550
And you'll notice that some of
these are highlighted like links.

00:48:55.620 --> 00:48:57.850
So when you click on it,
it actually jumps to the point in

00:48:57.850 --> 00:48:59.850
your hierarchy where the error exists.

00:48:59.910 --> 00:49:01.860
I'm going to focus on
this one where it says,

00:49:01.860 --> 00:49:06.110
"Missing AX title with no AX description
attribute." And what that refers to is,

00:49:06.110 --> 00:49:08.800
when I click on it,
a button inside the window

00:49:08.800 --> 00:49:13.510
"Accessibility Demo." It says
there's no description and no title.

00:49:13.850 --> 00:49:16.510
Well, now that I know where it is,
I'd like to go take a

00:49:16.510 --> 00:49:19.230
look at it in more detail,
so I'm going to launch

00:49:19.230 --> 00:49:20.700
Accessibility Inspector.

00:49:20.700 --> 00:49:26.690
And let's bump up the font just a
little bit so that people can see it.

00:49:28.620 --> 00:49:31.110
This is a lot like Pixie,
it just follows wherever

00:49:31.110 --> 00:49:32.250
you got the mouse.

00:49:32.250 --> 00:49:34.000
So let's see,
there's only one button in my window,

00:49:34.000 --> 00:49:36.250
so I know which one it is,
but you can use this

00:49:36.250 --> 00:49:37.260
quickly to look at it.

00:49:37.260 --> 00:49:40.970
And you can see in the list of
attributes down there that there's

00:49:40.970 --> 00:49:42.830
no description and no title.

00:49:43.280 --> 00:49:46.460
This means that an accessibility
application is going to not know

00:49:46.460 --> 00:49:50.100
what to say or how to describe this
UI element when it comes to it.

00:49:50.100 --> 00:49:54.230
Now, just to quickly demo a few other
features of Accessibility Inspector,

00:49:54.920 --> 00:49:59.100
there is a hotkey to lock the view,
just like in Pixie.

00:49:59.200 --> 00:50:01.650
When it turns red like that,
now I can move the mouse around

00:50:01.680 --> 00:50:03.090
and it's not following it.

00:50:03.350 --> 00:50:06.050
Unfortunately, there's a hotkey conflict,
but if you just click somewhere,

00:50:06.090 --> 00:50:07.100
it goes away.

00:50:07.140 --> 00:50:12.100
And it also adds this extra palette
when you've got it in locked view.

00:50:12.220 --> 00:50:15.090
You can take a look in more
detail at any of the elements.

00:50:15.100 --> 00:50:21.010
There's also a small menu that lets
you go to the window container.

00:50:21.010 --> 00:50:24.690
And let me turn on the highlight.

00:50:24.690 --> 00:50:24.690
So now you can see...

00:50:25.100 --> 00:50:28.660
What's currently focused
in Accessibility Inspector?

00:50:28.660 --> 00:50:31.300
It's highlighted in red.

00:50:31.990 --> 00:50:36.090
And I can navigate down
to one of the buttons.

00:50:36.090 --> 00:50:39.580
Let me just turn off the lock real
quick and go back to that button.

00:50:39.790 --> 00:50:41.880
Now you can see it highlighted.

00:50:42.780 --> 00:50:46.050
If there are any actions
or any settable attributes,

00:50:46.080 --> 00:50:49.200
you can actually control them
here inside UI Element Inspector,

00:50:49.200 --> 00:50:52.370
or as it's now called,
Accessibility Inspector.

00:50:52.440 --> 00:50:55.750
This gives you a lot of power
when it comes to debugging.

00:50:56.680 --> 00:50:59.770
So now I want to fix some of
these errors that I found.

00:50:59.920 --> 00:51:04.200
So let's go back to Xcode and
open the Nib in Interface Builder.

00:51:04.240 --> 00:51:06.580
And now I'll show you the
accessibility features that have

00:51:06.580 --> 00:51:08.560
been added to Interface Builder.

00:51:10.020 --> 00:51:13.300
So if you just go to the Get Info panel,
you'll see that there's a

00:51:13.300 --> 00:51:16.290
new item here in the pop-up:
Accessibility.

00:51:17.230 --> 00:51:20.570
And now, as Eric mentioned,
you can link two elements

00:51:20.570 --> 00:51:24.430
together so that,
let's say, the first name field,

00:51:24.660 --> 00:51:27.100
obviously,
it's going to have a title first name.

00:51:27.210 --> 00:51:29.360
Now, you don't want to enter that same
text in two different places.

00:51:29.490 --> 00:51:32.580
What you want to do
is link them together.

00:51:32.930 --> 00:51:37.190
So that the Edit field gets its
name from this Static Text field.

00:51:37.290 --> 00:51:39.830
So you Control-click and drag.

00:51:40.750 --> 00:51:45.050
Then select Tile
UI Element and click Connect.

00:51:45.150 --> 00:51:47.660
And now from then on,
Accessibility will know that

00:51:47.830 --> 00:51:52.830
this edit field is getting its
name from the static text right

00:51:52.830 --> 00:51:54.250
next to it that I've linked up.

00:51:54.350 --> 00:51:56.340
Let's link the other one up.

00:51:56.780 --> 00:52:03.040
and David If you also wanted
to have a link UI element,

00:52:03.060 --> 00:52:07.230
such as the example in Mail where
you have items in a list view

00:52:07.310 --> 00:52:11.860
linking to items in the window below,
you can also hook that up here.

00:52:12.400 --> 00:52:15.450
And lastly, for this button,
which is a fairly common occurrence

00:52:15.450 --> 00:52:18.880
where you have an image button,
it's got no description and no title,

00:52:18.900 --> 00:52:20.690
let's type in a description for it.

00:52:20.790 --> 00:52:22.420
And as Eric mentioned,
we don't want to include the

00:52:22.420 --> 00:52:23.740
word "button" in the description.

00:52:23.740 --> 00:52:29.570
It's just "OK." We don't want
to say "OK button," because then

00:52:29.570 --> 00:52:29.570
we'll get "OK button button."

00:52:30.210 --> 00:52:32.860
Now I have to mention that this
support in Interface Builder,

00:52:33.360 --> 00:52:35.860
unfortunately we found some
last minute problems with it.

00:52:35.940 --> 00:52:38.450
So the version that's on the DVD,
we do not recommend that you use it.

00:52:38.480 --> 00:52:41.340
This is just to show you the
direction that we're moving in.

00:52:41.460 --> 00:52:44.610
We're hoping to have those
problems fixed as soon as possible,

00:52:44.610 --> 00:52:46.100
so we apologize for that.

00:52:46.240 --> 00:52:52.750
So to test it, I'm just going to use run
interface to the test interface

00:52:52.750 --> 00:52:52.750
feature in Interface Builder.

00:52:53.900 --> 00:52:57.730
So, for the last part of this,
I'm going to turn on spoken

00:52:57.730 --> 00:52:59.900
user interface or voice
over as it's called now.

00:52:59.900 --> 00:53:01.810
Spoken interface is inactive.

00:53:01.940 --> 00:53:06.560
Press Interface Builder, Application,
Window, Accessibility Demo,

00:53:06.560 --> 00:53:09.900
onto First Name, Edit Text Field.

00:53:09.900 --> 00:53:12.890
And now you can see it's picking
up the name of the text edit field.

00:53:12.890 --> 00:53:14.900
Let me just go down to the
next one so you can hear it.

00:53:14.900 --> 00:53:17.900
Last Name, Edit Text Field.

00:53:17.900 --> 00:53:20.060
And from now on,
if I go into Interface Builder

00:53:20.060 --> 00:53:22.780
and change the string in the
static text field next to it,

00:53:22.900 --> 00:53:25.450
it'll automatically get picked up.

00:53:26.300 --> 00:53:28.440
Okay, built in.

00:53:28.550 --> 00:53:32.200
And now the description that I've
added has also been hooked up.

00:53:32.350 --> 00:53:33.160
And that's it.

00:53:33.160 --> 00:53:33.690
It's that easy.

00:53:33.690 --> 00:53:36.600
I've accessorized my app.

00:53:36.740 --> 00:53:39.510
And so now I'm going to
turn it back over to Eric.

00:53:46.900 --> 00:53:55.600
[Transcript missing]

00:53:55.780 --> 00:53:58.500
All the things I wanted to cover.

00:53:58.560 --> 00:54:04.510
Hopefully you have a good grasp of
what VoiceOver is all about and some

00:54:04.900 --> 00:54:10.700
basics of accessibility and how you
can provide context in your application

00:54:10.700 --> 00:54:12.580
and we've shown you some tools.

00:54:12.680 --> 00:54:15.700
Now, there's a place you can
get more information.

00:54:15.700 --> 00:54:19.100
There's documentation online,
also on our website.

00:54:19.100 --> 00:54:22.150
If you're curious,
a good place to go is actually dive

00:54:22.160 --> 00:54:26.050
down into where the header files exist
for accessibility because if you're

00:54:26.200 --> 00:54:29.790
going to accessorize your applications,
these are things that—this

00:54:29.800 --> 00:54:30.580
is the real deal.

00:54:30.580 --> 00:54:34.090
That's where the information is.

00:54:34.560 --> 00:54:37.600
A little bit more information:
Human Interface Guidelines,

00:54:37.710 --> 00:54:39.460
Software Design Guidelines.

00:54:39.460 --> 00:54:43.680
And then, I can't stress enough,
down here at the bottom, tomorrow, 10:45,

00:54:43.680 --> 00:54:46.270
in this room,
Developing Accessible Applications.

00:54:46.320 --> 00:54:51.770
It's going to go in-depth into how
to develop accessible applications.

00:54:52.560 --> 00:54:54.600
So, a few people to contact.

00:54:54.650 --> 00:54:57.560
I'm going to invite
Travis Brown on stage.

00:54:57.660 --> 00:55:00.160
Travis is a technology
evangelist for Apple,

00:55:00.160 --> 00:55:01.650
has a lot to do with accessibility.

00:55:01.810 --> 00:55:04.540
Some of you may already know
as well Mary Beth Jaynes,

00:55:04.680 --> 00:55:08.290
Assistive Technology Partnership Manager,
and Mike Schbanek,

00:55:08.410 --> 00:55:14.400
who is Product Marketing Manager and,
among other things, voiceover.

00:55:14.400 --> 00:55:19.480
So, with that, I'd like to ask Travis to
come up on stage.

00:55:19.480 --> 00:55:22.400
I'm going to have
Travis moderate some questions.