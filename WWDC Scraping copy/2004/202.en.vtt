WEBVTT

00:00:12.330 --> 00:00:13.350
Good afternoon, everyone.

00:00:13.470 --> 00:00:14.300
I'm Travis Brown.

00:00:14.300 --> 00:00:16.300
I'm the graphics and imaging
evangelist for Apple.

00:00:16.300 --> 00:00:19.110
And I'm one of the people who
put together essentially all

00:00:19.110 --> 00:00:22.300
the content you're seeing in the
graphics and media track this year.

00:00:22.410 --> 00:00:24.720
And if you look at at least
what we've talked about in the

00:00:24.720 --> 00:00:28.300
sessions that we've had thus far,
it's been a lot of new technology that's,

00:00:28.300 --> 00:00:28.300
you know, flashy.

00:00:28.470 --> 00:00:31.720
Things like Core Image,
really powerful new trends,

00:00:31.880 --> 00:00:35.190
harnessing the GPU,
which are all very exciting.

00:00:35.310 --> 00:00:39.400
But one of the other things we want to
bring to the table this year in Tiger is

00:00:39.550 --> 00:00:42.300
essentially looking at the technologies
that we've already embraced in Mac.

00:00:42.300 --> 00:00:46.300
And figuring out ways to help developers
better leverage those technologies.

00:00:46.300 --> 00:00:49.400
And one of the significant
technologies that we do use in

00:00:49.400 --> 00:00:51.300
the 2D space in Mac OS X is PDF.

00:00:51.300 --> 00:00:56.480
PDF is a fantastic, you know,
graphic file format, which is the way we

00:00:56.480 --> 00:00:58.300
primarily use it to date.

00:00:58.300 --> 00:01:01.850
Where we use it as sort of a
system-wide meta file that is not only,

00:01:01.850 --> 00:01:04.860
you know, high fidelity,
but also gives us ability to interchange

00:01:04.860 --> 00:01:06.280
our content with other platforms.

00:01:06.300 --> 00:01:08.270
But really PDF is much more than that.

00:01:08.370 --> 00:01:11.020
You know,
Adobe's been very innovative with

00:01:11.050 --> 00:01:12.300
PDF and continues to move forward.

00:01:12.300 --> 00:01:16.290
And has really created sort of
a standard for rich documents.

00:01:16.300 --> 00:01:20.300
And this is one area where
the existing Quartz 2D API,

00:01:20.300 --> 00:01:24.140
which is primarily about drawing PDF,
was, you know,

00:01:24.330 --> 00:01:29.300
not sufficient for a lot of what needs
that PDF could empower or at least solve.

00:01:29.300 --> 00:01:33.170
So for Tiger we've created
something called PDF Kit,

00:01:33.290 --> 00:01:37.240
which is essentially a technology
that's designed to help developers

00:01:37.300 --> 00:01:40.300
leverage PDF in their applications.

00:01:40.300 --> 00:01:42.300
By handling a lot of
the work we're making.

00:01:42.300 --> 00:01:44.300
Relating to managing a PDF document.

00:01:44.300 --> 00:01:48.300
This is navigation, searching,
various other features like printing.

00:01:48.300 --> 00:01:52.530
And we want to make it as easy as
possible for all applications to

00:01:52.580 --> 00:01:55.300
participate in the PDF experience.

00:01:55.300 --> 00:01:58.210
Because we think that's a very
important feature of Mac OS X.

00:01:58.310 --> 00:02:01.290
And it's also very beneficial
to our mutual users.

00:02:01.310 --> 00:02:04.630
So I'd like to bring John Calhoun
up on stage to actually take

00:02:04.630 --> 00:02:06.300
you through the session.

00:02:06.350 --> 00:02:07.750
Thank you.

00:02:14.990 --> 00:02:16.780
Let's see.

00:02:16.780 --> 00:02:20.840
Okay, well,
I'm going to talk real quickly about

00:02:21.050 --> 00:02:24.680
PDFKit just to tell you what it is,
and then I'm going to go quickly to a

00:02:24.760 --> 00:02:26.240
demo to kind of show you what it is.

00:02:26.570 --> 00:02:30.700
Here's sort of a diagram shows you more
or less where your application fits.

00:02:30.700 --> 00:02:34.140
In PDFKit,
it's basically a suite of Cocoa classes,

00:02:34.170 --> 00:02:39.080
so, you know, to make a parallel to
WebKit isn't a big stretch.

00:02:39.080 --> 00:02:42.080
In fact,
there was a lot of inspiration that

00:02:42.440 --> 00:02:45.340
we had from the WebKit demo last year.

00:02:45.360 --> 00:02:49.120
And this year, when we were working
on preview for Tiger,

00:02:49.120 --> 00:02:53.730
what we decided to do was to create like
a PDFKit that was a lot like WebKit,

00:02:53.930 --> 00:02:58.580
and you'll see that the preview
application that's in Tiger is using,

00:02:58.580 --> 00:03:03.370
at least for the PDF portion,
of preview is using PDFKit.

00:03:03.370 --> 00:03:09.820
So, I guess I'll go ahead and show you,
yeah, the new preview.

00:03:09.820 --> 00:03:12.300
So, I'll start the demo.

00:03:14.700 --> 00:03:16.100
And this is Tiger.

00:03:16.100 --> 00:03:18.830
This is on your developer disk.

00:03:18.860 --> 00:03:23.140
And here's the preview.

00:03:23.810 --> 00:03:26.640
Probably at this point,
this being sort of early in Tiger,

00:03:26.640 --> 00:03:30.880
there's not going to be a lot
different from what you've seen,

00:03:30.930 --> 00:03:32.070
say, in Panther.

00:03:32.240 --> 00:03:34.770
But I'll show you a couple of new things.

00:03:34.780 --> 00:03:38.720
And keep in mind that unlike Panther,
this version of Preview

00:03:38.720 --> 00:03:40.720
is strictly using PDFKit.

00:03:40.720 --> 00:03:42.400
So I've opened up a PDF.

00:03:42.410 --> 00:03:44.050
You can select text.

00:03:44.140 --> 00:03:47.560
We can scroll through
the text as per usual.

00:03:47.560 --> 00:03:50.570
But also PDFKit is going to handle links.

00:03:50.570 --> 00:03:54.900
And you'll see the hand turning
into a pointer and -- or

00:03:54.900 --> 00:03:56.080
turning into a pointing hand.

00:03:56.180 --> 00:03:59.120
The cursor, you click on it,
it takes you to that page,

00:03:59.120 --> 00:04:00.760
that sort of thing.

00:04:00.760 --> 00:04:05.000
One of the new features we added
to Preview by way of PDFKit is

00:04:05.000 --> 00:04:10.520
you can now view facing pages,
for example.

00:04:10.530 --> 00:04:13.370
And so here's two up.

00:04:13.370 --> 00:04:17.740
And if you want the cover sheet
to be -- or the front cover

00:04:17.740 --> 00:04:17.800
sheet to be -- you can do that.

00:04:17.840 --> 00:04:20.050
And if I want the first
page to be separated itself,

00:04:20.090 --> 00:04:21.880
I can turn on what we call book mode.

00:04:22.250 --> 00:04:25.060
And so now the first
page stands by itself.

00:04:25.060 --> 00:04:30.860
And then it starts with the even
number of pages from then on.

00:04:31.190 --> 00:04:36.210
Another nice thing that we're able to do,
for example, in 2UP,

00:04:36.300 --> 00:04:38.890
is you can select text
across multiple pages.

00:04:38.890 --> 00:04:44.170
If I zoom out,
I can grab text across four, six, eight,

00:04:44.260 --> 00:04:46.140
however many pages you can see.

00:04:46.140 --> 00:04:52.210
And all this, again, is using PDFKit.

00:04:53.560 --> 00:04:56.750
I'll show you another document
that's kind of interesting.

00:04:56.750 --> 00:05:00.380
I clicked on this widget up here and
it didn't work because this document

00:05:00.570 --> 00:05:03.920
doesn't have a crop box that's
any different from its media box.

00:05:03.960 --> 00:05:07.540
I do want to point that out because
one of the reasons for showing these

00:05:07.610 --> 00:05:11.150
demos in advance is I'll show you
something graphically and then when

00:05:11.180 --> 00:05:14.550
I get talking more about PDFKit,
you'll see, you know, what,

00:05:14.550 --> 00:05:17.050
you'll know what concepts
I'm talking about.

00:05:17.050 --> 00:05:18.610
So I've got a document here.

00:05:18.610 --> 00:05:19.290
It's a PDF.

00:05:19.290 --> 00:05:21.660
And when you default
open it up on the screen,

00:05:21.660 --> 00:05:23.470
you see that it's a PDF.

00:05:23.500 --> 00:05:30.320
You see the part of the PDF page
that's defined by the PDF's crop box.

00:05:30.320 --> 00:05:34.230
But if I flip this little widget,
you can see the whole PDF and you can

00:05:34.250 --> 00:05:38.520
see that there are some registration
marks and some other things.

00:05:38.520 --> 00:05:42.960
This is actually the way the
PDF would go off to the printer.

00:05:42.970 --> 00:05:47.230
But one of the things they try to do,
not only just for the crop boxes,

00:05:47.330 --> 00:05:50.370
or sorry,
for the registration marks and such,

00:05:50.380 --> 00:05:53.480
is sometimes the way a PDF gets printed,
you'll have a lot of different things.

00:05:53.500 --> 00:05:54.990
You'll have a lot of white
space around the margin.

00:05:55.000 --> 00:05:59.550
So oftentimes a PDF will define
a crop box so that when you're

00:05:59.550 --> 00:06:02.290
viewing it on a computer screen,
you're not wasting screen

00:06:02.290 --> 00:06:04.960
real estate with all this,
you know, extra margin.

00:06:04.960 --> 00:06:09.190
So this is the way you might,
you might want to,

00:06:09.190 --> 00:06:12.210
you might view it on a computer.

00:06:12.620 --> 00:06:18.440
And the last thing I'll show you on this
sort of introduction to preview demo

00:06:18.470 --> 00:06:21.840
is something we just added for Tiger.

00:06:21.840 --> 00:06:23.200
Here's a 1040EZ.

00:06:23.200 --> 00:06:30.090
And if I click somewhere here,
I can then...

00:06:33.640 --> 00:06:38.570
Tab does hit testing, that sort of thing,
and I think this check box should check

00:06:38.650 --> 00:06:40.660
and uncheck and that sort of thing.

00:06:40.660 --> 00:06:44.690
So we're starting to add
more annotation support,

00:06:44.780 --> 00:06:49.000
and the Panther version
of Preview just had links.

00:06:49.000 --> 00:06:50.180
Those were the only
annotations we supported,

00:06:50.180 --> 00:06:54.200
and as you'll see when I show
you the rest of these slides,

00:06:54.200 --> 00:06:58.130
we've got a lot more annotation
support in the new version of Preview.

00:06:58.130 --> 00:07:02.660
But the point I'm trying to make is
that we got this by way of PDFKit,

00:07:02.660 --> 00:07:06.020
so in the same sense that if
your application uses PDFKit,

00:07:06.130 --> 00:07:09.200
you're going to get these
same features yourself.

00:07:09.200 --> 00:07:16.180
So I'll switch back to slides.

00:07:16.180 --> 00:07:16.180
And where did I leave that clicker?

00:07:18.900 --> 00:07:21.780
Okay, well,
I'm going to backtrack just briefly

00:07:21.920 --> 00:07:24.280
and talk about the PDF file format.

00:07:24.280 --> 00:07:29.820
I'm not going to talk a lot about it,
but if you know the PDF is a file format,

00:07:29.820 --> 00:07:32.170
and inside that PDF file
you have dictionaries,

00:07:32.280 --> 00:07:36.160
you have objects like page objects,
font objects, that sort of thing.

00:07:36.160 --> 00:07:38.520
There's streams for drawing.

00:07:38.520 --> 00:07:41.120
A PDF can be encrypted,
in which case you need a

00:07:41.120 --> 00:07:42.650
password to decrypt it.

00:07:42.760 --> 00:07:43.880
They're very rich.

00:07:43.880 --> 00:07:45.660
It's a very rich file format.

00:07:45.660 --> 00:07:50.870
And as I showed with the forms
in 1040EZ and with links,

00:07:51.190 --> 00:07:54.200
there can be annotations inside a PDF.

00:07:54.200 --> 00:07:58.800
And I pointed out the display boxes,
the media box, crop box.

00:07:58.830 --> 00:08:06.310
So PDFs have all this kind
of rich features in them.

00:08:06.340 --> 00:08:08.800
I'll briefly mention
the coordinate system,

00:08:08.800 --> 00:08:11.120
too,
because it turns out it comes into play

00:08:11.120 --> 00:08:15.280
quite a bit when I talk about some of
the kind of lower levels of the PDFKit.

00:08:15.660 --> 00:08:19.120
PDFs are Cartesian coordinate system.

00:08:19.180 --> 00:08:20.210
It's quadrant one.

00:08:20.250 --> 00:08:23.230
So the lower left corner
of the page is the origin,

00:08:23.230 --> 00:08:23.900
00.

00:08:24.030 --> 00:08:26.890
And as you move to the right,
the numbers increase.

00:08:26.890 --> 00:08:28.190
As you move up, they increase.

00:08:28.510 --> 00:08:33.110
And the units that are used
inside a PDF are in points.

00:08:33.120 --> 00:08:35.890
So 72 points to an inch.

00:08:37.920 --> 00:08:42.570
Well, so Core Graphics has a rich
API for dealing with PDFs,

00:08:42.570 --> 00:08:44.520
and that's been in there for a long,
long time.

00:08:44.520 --> 00:08:50.500
But they're C functions,
and they sit on top of Core Foundation,

00:08:50.500 --> 00:08:52.990
so they have
Core Foundation type objects.

00:08:52.990 --> 00:08:58.610
You have things like CGPDF document ref,
CGPDF page ref, and that sort of thing.

00:08:58.620 --> 00:09:05.020
But it's relatively low level in that
it sits fairly close to the file.

00:09:05.020 --> 00:09:08.370
It kind of mirrors more or
less the file format itself.

00:09:08.370 --> 00:09:12.290
So what we tried to do in...

00:09:12.510 --> 00:09:15.380
PDFKit is to create a
suite of Cocoa classes.

00:09:15.570 --> 00:09:19.990
And in some ways,
we mirrored Core Graphics in, you know,

00:09:20.250 --> 00:09:23.560
our decision to make a document
object and a page object.

00:09:23.670 --> 00:09:27.310
And I'll get more -- I'll
talk more about that later.

00:09:27.360 --> 00:09:29.000
But, you know,
it's probably interesting to know that

00:09:29.000 --> 00:09:32.530
internally we're calling Core Graphics
and we're calling Core Foundation and

00:09:32.530 --> 00:09:34.310
we're doing some of these things.

00:09:34.310 --> 00:09:39.070
But what we present to the developers is,
you know, the Objective C,

00:09:39.230 --> 00:09:42.350
the methods and objects
and that sort of thing.

00:09:43.570 --> 00:09:46.640
And as I mentioned,
you'll see that there's like

00:09:46.640 --> 00:09:48.180
PDF documents and pages.

00:09:48.180 --> 00:09:53.480
So in that way,
we kind of borrowed from Core Graphics.

00:09:56.170 --> 00:09:58.580
Here's a class hierarchy.

00:09:58.600 --> 00:10:01.580
I'll go into a lot more detail,
so I'm just putting this up for now.

00:10:01.580 --> 00:10:04.270
You see that I haven't
shown all the classes here,

00:10:04.450 --> 00:10:09.040
but you see there are a number of classes
in blue that are subclass of NSObject,

00:10:09.040 --> 00:10:11.560
and then the PDF view,
the one orange one,

00:10:11.560 --> 00:10:14.980
is I guess we'd call more or
less the higher level class.

00:10:14.980 --> 00:10:19.110
That's probably a good way to
start talking about PDFKit is

00:10:19.110 --> 00:10:23.400
that there's kind of,
I guess, two levels of classes.

00:10:23.400 --> 00:10:26.170
There's the high level PDF view,
and that's nice because you

00:10:26.170 --> 00:10:27.670
can just drop it into your app.

00:10:27.740 --> 00:10:30.760
It does most of the kinds of
things you see in preview.

00:10:30.760 --> 00:10:31.980
It'll display PDFs.

00:10:31.980 --> 00:10:36.480
It'll allow you to select text, copy,
traverse links, that sort of thing.

00:10:36.480 --> 00:10:40.140
So it makes it very simple if
you want to get PDF display

00:10:40.140 --> 00:10:42.300
up in your app very quickly.

00:10:42.300 --> 00:10:46.220
But if you want to do more powerful
things and have more flexibility,

00:10:46.220 --> 00:10:49.240
there's a whole suite of
these utility classes.

00:10:49.240 --> 00:10:51.740
And in fact,
the PDF view itself is built on

00:10:51.840 --> 00:10:55.400
top of those utility classes,
and those are the ones in blue,

00:10:55.400 --> 00:10:58.970
like the PDF border, destination,
that sort of thing.

00:11:00.790 --> 00:11:03.930
So I'll show you another demo.

00:11:03.980 --> 00:11:05.940
I'm kind of doing this in reverse order.

00:11:05.940 --> 00:11:09.100
I'm showing you the demo first and
then talking about what you saw.

00:11:09.100 --> 00:11:14.370
I'm going to do the,
I guess this is a kind

00:11:14.370 --> 00:11:17.910
of a famous no code demo.

00:11:18.420 --> 00:11:20.520
WebKit did it,
so we're going to do it too.

00:11:20.520 --> 00:11:22.580
So I'm going to fire
up Interface Builder.

00:11:22.580 --> 00:11:27.590
And one thing that I did before
I came up here is I went to

00:11:27.590 --> 00:11:32.300
Interface Builder and I went ahead
and added the PDFKit palette,

00:11:32.300 --> 00:11:36.200
which you'll find in
developer extras palettes.

00:11:36.200 --> 00:11:39.930
And so since I've added
the PDFKit palette,

00:11:39.930 --> 00:11:44.000
I just created a new
Cocoa application here.

00:11:44.000 --> 00:11:48.280
You'll see that there's
this new PDF icon.

00:11:48.300 --> 00:11:52.720
And so this object here is a PDF view.

00:11:54.220 --> 00:11:59.330
I'll just drag it in and
into this window here.

00:11:59.330 --> 00:12:00.880
And let's see.

00:12:00.920 --> 00:12:03.200
I think I'll just add
a couple of buttons.

00:12:03.400 --> 00:12:07.720
Let's see.

00:12:08.520 --> 00:12:08.660
I'll put a back button in.

00:12:08.660 --> 00:12:08.660
And I'll just drag it in.

00:12:09.050 --> 00:12:10.910
I'll do a zoom button.

00:12:10.910 --> 00:12:16.670
I'll do some of the worst
UI you've ever seen.

00:12:19.090 --> 00:12:24.270
Okay, so let's zoom in, zoom out.

00:12:24.500 --> 00:12:28.500
And let me set the sizes on all these.

00:12:28.500 --> 00:12:36.180
Make that stretch, and this guy do this,
and this guy do that.

00:12:36.700 --> 00:12:40.710
And that, and I guess the last thing
I need to do is wire them up.

00:12:42.500 --> 00:12:44.300
So I'll just make that do.

00:12:44.310 --> 00:12:50.110
And here's some of the outlets
or some of the methods that

00:12:50.120 --> 00:12:52.490
are exported from the PDF view.

00:12:52.570 --> 00:12:53.490
Go back.

00:12:53.500 --> 00:12:56.380
That's pretty nice when
Interface Builder guesses that.

00:12:56.440 --> 00:12:58.960
Oh, couldn't guess that one.

00:12:59.110 --> 00:13:00.540
Let's zoom out.

00:13:00.880 --> 00:13:02.840
And we'll make this one zoom in.

00:13:02.950 --> 00:13:05.450
So what I'll do is,
so you may wonder how you're

00:13:05.510 --> 00:13:07.260
going to actually display PDF.

00:13:07.260 --> 00:13:09.270
I'll test the interface here.

00:13:09.270 --> 00:13:11.200
And there we go.

00:13:11.290 --> 00:13:14.300
PDF view supports drag and drop.

00:13:14.370 --> 00:13:16.190
So let me just take a PDF here.

00:13:16.440 --> 00:13:18.660
Here's a Nikon documentation.

00:13:18.660 --> 00:13:19.970
And there you go.

00:13:19.970 --> 00:13:21.360
So I haven't written any code.

00:13:21.360 --> 00:13:24.920
It looks like I messed up my bounds
on the PDF view when I dropped it in.

00:13:24.920 --> 00:13:28.220
But I can, let's see,
there were some links up front here.

00:13:28.220 --> 00:13:33.780
Let's see, we can jump down to page, 12,
back, good.

00:13:33.780 --> 00:13:38.430
We can zoom out, zoom back in.

00:13:38.430 --> 00:13:38.430
No?

00:13:38.550 --> 00:13:41.100
Okay, let me try one other thing.

00:13:41.100 --> 00:13:42.990
The PDF view also has a contextual menu.

00:13:42.990 --> 00:13:45.500
Oh, there we go.

00:13:45.500 --> 00:13:48.600
I don't know what my failing
is there with those buttons.

00:13:48.600 --> 00:13:53.440
But so there, there's a PDF view,
all done in Interface Builder.

00:13:59.900 --> 00:14:06.000
[Transcript missing]

00:14:07.700 --> 00:14:11.840
talk about the PDF view itself.

00:14:11.960 --> 00:14:13.260
So you saw the PDF view.

00:14:13.260 --> 00:14:15.790
I put it in Interface Builder.

00:14:15.950 --> 00:14:17.180
It's subclass of NSView.

00:14:17.180 --> 00:14:19.740
So, good, they fixed that slide.

00:14:19.740 --> 00:14:23.100
So it inherits everything
that NSView inherits.

00:14:23.100 --> 00:14:26.120
It's a responder, so it has mouse down,
mouse up, type methods,

00:14:26.120 --> 00:14:27.480
that sort of thing.

00:14:27.480 --> 00:14:30.850
And as I mentioned earlier,
it uses all of the utility classes.

00:14:30.860 --> 00:14:35.010
So it uses a PDF document object,
PDF page object, that sort of thing.

00:14:35.020 --> 00:14:40.180
In fact, in as much as it's just sitting
on top of those utility classes,

00:14:40.200 --> 00:14:42.240
there's nothing to keep
you developers from,

00:14:42.270 --> 00:14:45.030
you know,
if you don't like what PDFView does,

00:14:45.060 --> 00:14:48.710
maybe one up and two up isn't enough,
you want to do three up,

00:14:48.780 --> 00:14:52.300
you can write your own PDFView.

00:14:52.300 --> 00:14:55.520
You can just call the utility classes
yourself and do all the sorts of

00:14:55.520 --> 00:14:58.900
things that PDFView does for displaying
the pages and that sort of thing.

00:14:58.900 --> 00:15:02.080
And it's, I was going to say
it's not a lot of work,

00:15:02.160 --> 00:15:06.990
but obviously it's a lot easier
to use the PDFView itself.

00:15:07.060 --> 00:15:09.200
And one of the things,
but one of the things we tried to do is,

00:15:09.200 --> 00:15:13.610
so that you didn't have to go and
write your own PDFView we tried where

00:15:13.610 --> 00:15:17.500
we could to make the PDFView itself
sort of flexible for subclassers.

00:15:17.500 --> 00:15:22.160
So that you could come in and
subclass and override the events,

00:15:22.160 --> 00:15:25.440
the mouse down, mouse up, mouse drag,
and do your own thing.

00:15:25.440 --> 00:15:28.580
And I'll show you at the
end of the session here,

00:15:28.580 --> 00:15:30.360
I'll show you kind of
a demo where I do that.

00:15:31.740 --> 00:15:34.960
There's also,
every time the PDF view draws,

00:15:35.090 --> 00:15:36.510
there's a draw method that gets called.

00:15:36.520 --> 00:15:40.540
If you want to subclass or override that,
then you can handle the

00:15:40.610 --> 00:15:42.120
page drawing yourself.

00:15:45.320 --> 00:15:48.460
So some general features of PDFView.

00:15:48.480 --> 00:15:51.080
As you saw,
you can display PDF in several modes,

00:15:51.080 --> 00:15:54.880
one up, two up, continuous,
not continuous, that sort of thing.

00:15:54.880 --> 00:15:56.060
It also works with screen readers.

00:15:56.130 --> 00:15:58.420
So this is kind of interesting.

00:15:58.420 --> 00:16:03.610
If you're someone in accessibility,
like someone who's not sighted

00:16:03.610 --> 00:16:06.950
and comes across a PDF,
if your app is using PDFView,

00:16:07.040 --> 00:16:10.680
they'll be able to, using screen reader,
be able to get the text

00:16:10.780 --> 00:16:12.220
of the PDF for free.

00:16:12.240 --> 00:16:16.000
So you don't have to write
any code to enable that.

00:16:16.160 --> 00:16:20.020
Copy, select text,
those kinds of preview type things,

00:16:20.020 --> 00:16:24.300
you get for free in PDFView,
as well as printing.

00:16:24.500 --> 00:16:27.420
I'm going to get into more
specific features then.

00:16:27.510 --> 00:16:31.500
A PDF view needs a document.

00:16:31.500 --> 00:16:35.180
You tell PDF view, here's a PDF document,
and once a document's been

00:16:35.280 --> 00:16:39.410
associated with the view,
then it'll display that document

00:16:39.500 --> 00:16:44.720
and allow the user to navigate
the pages and that sort of thing.

00:16:45.160 --> 00:16:49.570
The way you create a document is you
create one of the PDF document objects,

00:16:49.570 --> 00:16:53.140
and I'll talk about that a
little later in the session.

00:16:53.140 --> 00:16:56.230
But you create these
objects with either a URL,

00:16:56.230 --> 00:17:00.270
which maybe you have a file on disk,
so you create a URL for that,

00:17:00.510 --> 00:17:03.460
create this PDF document,
pass it to the view,

00:17:03.460 --> 00:17:06.100
and now you're looking at that PDF.

00:17:06.100 --> 00:17:10.040
Or sometimes you might be
a plug-in for a browser,

00:17:10.070 --> 00:17:15.050
and you don't get a PDF file per se,
you get a chunk of NSData.

00:17:15.160 --> 00:17:20.150
So NSData is another way to
initialize to create a PDF document,

00:17:20.150 --> 00:17:25.980
and then the view is therefore
displaying the contents of that NSData.

00:17:25.980 --> 00:17:29.270
As I showed you in the
interface builder demo,

00:17:29.340 --> 00:17:32.190
the view also supports drag and drop.

00:17:32.200 --> 00:17:35.270
So there's some pretty
complicated display modes,

00:17:35.270 --> 00:17:39.040
and we tried to make it flexible
enough initially for preview,

00:17:39.040 --> 00:17:41.980
but then we're trying to think
sort of beyond preview and

00:17:41.980 --> 00:17:43.710
what other people might want.

00:17:43.810 --> 00:17:46.380
So you can... You can choose
whether you want one up,

00:17:46.590 --> 00:17:50.530
two up, continuous, non-continuous,
but you can also specify whether you

00:17:50.620 --> 00:17:53.290
want the crop box or the media box,
what display box you want.

00:17:53.640 --> 00:17:57.260
There's scaling, you saw me zoom in,
zoom out, you can control that.

00:17:57.720 --> 00:18:01.760
Text greeking,
you can specify at what pixel size

00:18:01.760 --> 00:18:05.840
you want the text to be greeked,
which is to say once it

00:18:05.840 --> 00:18:09.150
falls below a certain size,
like say three pixels,

00:18:09.170 --> 00:18:12.940
it gets to be kind of a waste
performance-wise to draw each

00:18:12.940 --> 00:18:12.940
little curve of the text.

00:18:12.940 --> 00:18:12.940
So you can choose
whether you want one up,

00:18:12.940 --> 00:18:12.940
two up, continuous, non-continuous,
but you can also specify whether you

00:18:12.940 --> 00:18:12.940
want the crop box or the media box,
what display box you want.

00:18:12.940 --> 00:18:12.940
There's scaling, you saw me zoom in,
zoom out, you can control that.

00:18:12.940 --> 00:18:12.960
Text greeking,
you can specify at what pixel size

00:18:12.960 --> 00:18:12.970
you want the text to be greeked,
which is to say once it

00:18:12.980 --> 00:18:13.020
falls below a certain size,
like say three pixels,

00:18:13.020 --> 00:18:13.050
it gets to be kind of a waste
performance-wise to draw each

00:18:13.050 --> 00:18:13.440
little curve of the text.

00:18:13.440 --> 00:18:13.440
So you can choose
whether you want one up,

00:18:13.440 --> 00:18:13.440
two up, continuous, non-continuous,
but you can also specify at what pixel

00:18:13.440 --> 00:18:13.440
size you want the text to be greeked,
which is to say once it

00:18:13.440 --> 00:18:13.440
falls below a certain size,
like say three pixels,

00:18:13.440 --> 00:18:13.440
it gets to be kind of a waste
performance-wise to draw each

00:18:13.440 --> 00:18:13.440
little curve of the text.

00:18:13.440 --> 00:18:13.440
So you turn greeking on,
set it to say three pixels,

00:18:13.440 --> 00:18:13.440
and the text will just be drawn
very quickly as gray boxes.

00:18:13.440 --> 00:18:13.940
And I showed you the book mode.

00:18:13.940 --> 00:18:14.440
That's another mode.

00:18:14.480 --> 00:18:24.890
And there's other kinds of ways you can
control the display of the PDF view,

00:18:24.890 --> 00:18:32.430
turning on and off page breaks,
that sort of thing.

00:18:32.710 --> 00:18:35.950
And then there's a really
rich navigation API.

00:18:36.110 --> 00:18:40.470
So you can say go to the next page,
previous page, first page, last page,

00:18:40.470 --> 00:18:41.440
or go to page in.

00:18:41.440 --> 00:18:45.960
Also, apart from just sort of that
sort of page level navigation,

00:18:45.960 --> 00:18:50.240
PDF view is maintaining
a history for you.

00:18:50.250 --> 00:18:54.190
So as you tell it go to page in,
it's keeping a stack of where the

00:18:54.190 --> 00:18:57.590
user has been so that go back,
go forward, you know,

00:18:57.590 --> 00:18:59.850
is another way of navigating.

00:18:59.860 --> 00:19:02.580
And you just tell the PDF view go back,
and it's going to go

00:19:02.580 --> 00:19:02.580
back to where it was.

00:19:02.670 --> 00:19:06.490
And it'll jump back to the last place
the user was at before you said,

00:19:06.490 --> 00:19:08.100
you know, go to page in.

00:19:08.100 --> 00:19:12.360
And finally,
there's other ways of navigating the PDF.

00:19:12.360 --> 00:19:15.780
You can say go to a specific destination,
and I'll talk more about

00:19:15.790 --> 00:19:17.120
destinations later.

00:19:17.120 --> 00:19:19.590
Or you can say, you know,
scroll to make the

00:19:19.590 --> 00:19:22.700
current selection visible,
that sort of thing.

00:19:25.630 --> 00:19:28.830
And then there are other kinds that
I just called additional functionality,

00:19:28.840 --> 00:19:30.780
other things that don't
really fit into a nice bucket.

00:19:30.780 --> 00:19:37.030
If the PDF is encrypted, you can pass in,
there's a method to pass in a string

00:19:37.030 --> 00:19:39.780
to try as a password to decrypt it.

00:19:39.820 --> 00:19:43.000
You can select all,
you can specify selection,

00:19:43.000 --> 00:19:47.420
you can clear a selection,
and you can of course select text, copy,

00:19:47.600 --> 00:19:50.640
and it puts it up on
the pasteboard for you.

00:19:50.640 --> 00:19:53.480
And it also allows you to print.

00:19:53.480 --> 00:19:55.480
You just tell the PDF view
to print and it prints it.

00:19:55.500 --> 00:19:57.810
the current document.

00:19:57.930 --> 00:20:01.760
Okay, so I guess this time around I'm
going to show preview again.

00:20:01.760 --> 00:20:05.060
And what was I going to do this time?

00:20:05.060 --> 00:20:10.670
I guess I was going to show,
I guess what I might call slightly

00:20:10.670 --> 00:20:14.150
more advanced preview functions.

00:20:14.430 --> 00:20:19.250
I think they're going to make
sense when I start talking

00:20:19.260 --> 00:20:20.950
about the utility classes.

00:20:20.960 --> 00:20:23.680
Let's see.

00:20:25.970 --> 00:20:29.960
I guess I'll open up a PDF that
has a kind of a rich outline,

00:20:29.980 --> 00:20:31.750
because we'll talk about outlines.

00:20:31.750 --> 00:20:33.870
Look at that Quartz 2D ref.

00:20:34.070 --> 00:20:39.900
Okay, on the right-hand side,
you'll see the outline,

00:20:39.900 --> 00:20:42.890
and this is just the way
Panther displayed it as well.

00:20:42.900 --> 00:20:48.900
And I can twist down some of these
little outline objects have children,

00:20:48.900 --> 00:20:51.540
and you can twist down the disclosure
triangle and see some of the

00:20:51.540 --> 00:20:53.530
children of these outline objects.

00:20:53.540 --> 00:20:58.410
And when I click on one of these things,
PDFView just scrolls down to the

00:20:58.410 --> 00:21:01.500
destination that this outline points to.

00:21:01.590 --> 00:21:06.470
Another thing that I'll just show you,
it's pretty obvious stuff,

00:21:06.660 --> 00:21:08.480
but let's do a search.

00:21:08.620 --> 00:21:13.830
I'll search for PDF.

00:21:13.830 --> 00:21:13.830
Okay, so.

00:21:13.970 --> 00:21:19.560
Here's a list of all the
instances of PDF that are found.

00:21:19.560 --> 00:21:22.510
And again,
as I go and scroll through this

00:21:22.510 --> 00:21:28.020
list of the search results,
PDF view is jumping around and

00:21:28.090 --> 00:21:32.610
showing you and selecting and
highlighting the selection.

00:21:35.200 --> 00:21:38.890
So I want to show you one other thing
before I switch back to the slides.

00:21:38.900 --> 00:21:44.210
I'll show you -- here's an
annotations PDF I made up.

00:21:44.220 --> 00:21:50.100
So here's kind of a nutty file I made up
that has all kinds of annotations on it.

00:21:50.100 --> 00:21:54.120
And you see -- well,
the first one up there,

00:21:54.160 --> 00:21:59.220
it's actually a text annotation.

00:21:59.220 --> 00:21:59.220
And it's a little bit more
complex than the other ones.

00:21:59.220 --> 00:21:59.220
So I

00:22:00.430 --> 00:22:04.390
You see squares and circles
and ink and that sort of thing.

00:22:04.490 --> 00:22:08.900
If I drag across here to select,
you'll see that you'll be able to see

00:22:08.900 --> 00:22:12.400
kind of what part of the PDF is the
text and what part is the annotation.

00:22:12.400 --> 00:22:14.260
All the stuff that's getting
selected there is text,

00:22:14.310 --> 00:22:14.840
obviously.

00:22:14.880 --> 00:22:17.050
But, you know,
I can't select the ink and I can't,

00:22:17.050 --> 00:22:19.500
you know, select the squares and
that sort of thing.

00:22:19.500 --> 00:22:22.670
So I guess with that,
I'll go back to the slides

00:22:22.710 --> 00:22:26.890
and I'll tell you more about
some of the utility classes.

00:22:27.840 --> 00:22:31.100
And we'll talk about
annotations a little more.

00:22:31.100 --> 00:22:36.720
So here's actually the full
list of utility classes.

00:22:36.720 --> 00:22:40.670
And what I'd left off on the previous
sample when I showed this was I left

00:22:40.670 --> 00:22:42.950
off all the annotation subclasses.

00:22:43.040 --> 00:22:45.000
We'll get to those in a second.

00:22:46.770 --> 00:22:49.790
I have to start with PDF document.

00:22:49.790 --> 00:22:53.940
PDF document is sort of, well,
it represents the file or

00:22:53.940 --> 00:22:55.910
the data that you have,
the actual PDF file.

00:22:55.910 --> 00:22:57.740
And so it's the most important object.

00:22:57.740 --> 00:22:59.200
You have to have a PDF document.

00:22:59.200 --> 00:23:01.830
Even a PDF view needs a PDF document.

00:23:01.830 --> 00:23:04.780
And it's kind of the wellspring.

00:23:04.780 --> 00:23:06.320
I mean, that's where pages are
going to come from.

00:23:06.320 --> 00:23:08.960
That's where, you know,
eventually the outline is going to

00:23:08.960 --> 00:23:10.580
come from and that sort of thing.

00:23:10.580 --> 00:23:13.630
And as I already told you,
you can give it a URL or

00:23:13.630 --> 00:23:15.200
you can give it data.

00:23:15.200 --> 00:23:16.660
And that's how you
initialize the PDF document.

00:23:16.720 --> 00:23:20.910
Once you have this PDF document object,
there's all kinds of methods to give

00:23:20.910 --> 00:23:22.680
you the attributes of the document.

00:23:22.680 --> 00:23:24.610
What PDF version is it?

00:23:24.610 --> 00:23:26.070
Is it encrypted?

00:23:26.070 --> 00:23:32.290
Who is the author, the creator,
the title, keywords, that sort of thing.

00:23:32.300 --> 00:23:36.090
And if it's encrypted,
there's methods on the document

00:23:36.090 --> 00:23:38.580
that allow you to try to decrypt it.

00:23:38.650 --> 00:23:42.590
And if it's a kind of document where
they have both sort of like owner

00:23:42.590 --> 00:23:45.760
privileges and user privileges,
you can find out what

00:23:45.760 --> 00:23:46.680
privileges you have.

00:23:46.700 --> 00:23:49.040
Like, do you have the ability to print?

00:23:49.060 --> 00:23:49.780
Can you copy?

00:23:49.780 --> 00:23:50.820
That sort of thing.

00:23:50.820 --> 00:23:53.910
And in fact,
PDF view respects the privileges.

00:23:53.910 --> 00:23:58.550
So if you open a PDF using PDF view
and the user doesn't have owner

00:23:58.810 --> 00:24:04.600
privileges and isn't able to print,
then the print method will just fail.

00:24:04.600 --> 00:24:07.840
I mean, you can call down to the document
and find out that there's no

00:24:07.840 --> 00:24:10.860
print permissions if you want to
disable the print menu or put up

00:24:10.860 --> 00:24:12.600
a dialog or something like that.

00:24:12.700 --> 00:24:16.600
PDF document also has a writing method.

00:24:16.700 --> 00:24:19.420
Now,
if you got the PDF from a file and you

00:24:19.420 --> 00:24:22.580
want to write the PDF document out,
since you already have it as a file,

00:24:22.580 --> 00:24:24.180
you might as well just copy the file.

00:24:24.180 --> 00:24:27.140
But when you call the
PDF document's write methods,

00:24:27.210 --> 00:24:30.380
what it does is it sort of
encapsulates any changes you may

00:24:30.380 --> 00:24:32.460
have made to the PDF document.

00:24:32.480 --> 00:24:36.540
So if you've removed a page or
rotated a page or removed an

00:24:36.540 --> 00:24:40.920
annotation or something like that,
then when the PDF document

00:24:40.960 --> 00:24:43.900
is written out to disk,
it will reflect all these

00:24:43.900 --> 00:24:45.430
changes you've made.

00:24:45.440 --> 00:24:46.670
And I'm going to show you how to do that.

00:24:46.680 --> 00:24:49.080
And I showed you a
quick find and preview.

00:24:49.080 --> 00:24:51.540
PDF document is the
level that you do that.

00:24:51.580 --> 00:24:55.700
So you call find methods
on the PDF document.

00:24:55.700 --> 00:24:59.280
What that allows you to do is,
since it's at the document level,

00:24:59.280 --> 00:25:02.190
is first of all,
it can start going through in sort of

00:25:02.190 --> 00:25:06.430
an asynchronous way and walk through
page by page by page for you and just

00:25:06.430 --> 00:25:10.740
send notifications each time it finds
the search term that you're looking for.

00:25:10.740 --> 00:25:14.660
Also,
there's the capability to find a phrase,

00:25:14.660 --> 00:25:16.640
say, that's broken.

00:25:16.690 --> 00:25:21.070
So if you were looking for a phrase and
part of it was on one page and the second

00:25:21.070 --> 00:25:24.630
part was following on the next page,
at the document level,

00:25:24.630 --> 00:25:27.240
you'd be able to find that sort of thing.

00:25:27.240 --> 00:25:29.650
And finally,
and I'll have to get into more

00:25:29.650 --> 00:25:33.560
detail a little later about this,
a PDF document is one area where you

00:25:33.560 --> 00:25:35.870
can ask for a PDF selection object.

00:25:35.880 --> 00:25:39.720
Probably a trivial example at
the PDF document level is if

00:25:39.720 --> 00:25:43.560
you wanted to do a select all,
then that's where you would

00:25:43.560 --> 00:25:45.670
do it at the document level.

00:25:45.680 --> 00:25:46.640
And the document would
allow you to do that.

00:25:46.640 --> 00:25:51.340
It would give you back a PDF selection
object that represents all the text

00:25:51.390 --> 00:25:53.950
in the PDF and the entire document.

00:25:55.200 --> 00:25:57.170
And finally,
and this is probably the most

00:25:57.410 --> 00:26:02.040
important part of the PDF document,
that's where you get the pages.

00:26:02.040 --> 00:26:03.740
That's where you get the page objects.

00:26:03.740 --> 00:26:06.530
So I'll talk about pages next.

00:26:06.660 --> 00:26:11.070
Oh, I guess obviously there's method
on the document where you can

00:26:11.080 --> 00:26:14.020
ask for the number of pages,
say 43.

00:26:14.150 --> 00:26:17.440
So on the document you would say, okay,
43 pages.

00:26:17.520 --> 00:26:19.320
Give me page number 41.

00:26:19.320 --> 00:26:23.480
And what you'll get returned
is a PDF page object.

00:26:23.520 --> 00:26:25.000
Now this one has a graphic.

00:26:25.200 --> 00:26:28.460
This slide has a graphic,
and that's because pages are the

00:26:28.460 --> 00:26:32.050
first class that I'm going to
talk about that have draw method.

00:26:32.050 --> 00:26:35.620
So I've got a screenshot, a preview here,
and I've circled a few

00:26:35.620 --> 00:26:37.220
things so that you can see.

00:26:37.220 --> 00:26:40.770
This gives you an idea of some of
the methods that a PDF page has.

00:26:40.820 --> 00:26:43.480
You've got, of course,
bounds and rotation,

00:26:43.480 --> 00:26:46.290
so that'll tell you how
many points wide and tall,

00:26:46.290 --> 00:26:48.610
that sort of thing, the page is.

00:26:48.610 --> 00:26:50.490
A page can return to you a label.

00:26:50.490 --> 00:26:52.970
Now I've circled that
in the lower corner.

00:26:52.970 --> 00:26:54.850
I think it's page 41 there.

00:26:54.850 --> 00:26:55.180
So if you're going to draw a page,
you're going to want to make

00:26:55.180 --> 00:26:55.180
sure that you're drawing a page.

00:26:55.180 --> 00:26:57.860
So if you ask for this page's label,
you'd get back the string 41.

00:26:57.860 --> 00:27:04.090
But there are some PDFs where they'll
describe the page label as I or II if

00:27:04.090 --> 00:27:08.170
it's a preface or something like that.

00:27:08.250 --> 00:27:13.780
So the page label gives you a string
that represents what to label that page.

00:27:13.780 --> 00:27:17.430
Of course, you can get text from a PDF,
and I've shown an orange

00:27:17.430 --> 00:27:18.870
box around the bottom.

00:27:18.870 --> 00:27:22.140
That's at the page levels
where you can extract text.

00:27:22.170 --> 00:27:25.160
Annotations,
and I've circled a link in there.

00:27:25.160 --> 00:27:55.100
So you can get text from a PDF,
and I've circled a link in there.

00:27:55.170 --> 00:27:56.590
It's laying out its views.

00:27:56.700 --> 00:27:59.190
When a user scrolls and
it wants to show page 3,

00:27:59.190 --> 00:28:02.370
it gets page 3 from the document,
tells that page to draw,

00:28:02.370 --> 00:28:03.690
that sort of thing.

00:28:05.690 --> 00:28:07.150
Annotations.

00:28:07.220 --> 00:28:11.260
So PDF annotation itself,
the class PDF annotation,

00:28:11.260 --> 00:28:13.050
is an abstract class.

00:28:13.130 --> 00:28:15.790
So it's an error if you
call the initializer on it.

00:28:15.790 --> 00:28:17.180
It doesn't mean anything.

00:28:17.180 --> 00:28:21.580
The two things that an annotation
absolutely is required to

00:28:21.760 --> 00:28:23.840
have is a type and a bounds.

00:28:23.840 --> 00:28:28.830
So what we've done is you actually
call the subclass initializer.

00:28:28.830 --> 00:28:33.220
So if you wanted a PDF annotation circle,
for example,

00:28:33.220 --> 00:28:38.180
you'd call PDF annotation circle, alloc,
and then the method is init with bounds.

00:28:38.180 --> 00:28:41.240
So once you've done that,
the annotation is legal.

00:28:41.240 --> 00:28:43.720
It has a type, circle,
and it has a bounds.

00:28:43.720 --> 00:28:49.390
Now, a lot of the annotations share a lot
of things besides the bounds and type,

00:28:49.560 --> 00:28:52.530
things like color is one that's common.

00:28:52.540 --> 00:28:55.300
So you'll find inside
the PDF annotation class,

00:28:55.300 --> 00:29:00.080
you'll find methods like color, kind,
bounds, that sort of thing, contents.

00:29:00.080 --> 00:29:03.580
These are things that are just
generally used by annotations.

00:29:03.580 --> 00:29:07.600
But for some of the annotations,
subclasses like circle and ink,

00:29:07.600 --> 00:29:10.670
annotation line,
there are going to be some

00:29:10.670 --> 00:29:13.490
attributes specific to that subclass.

00:29:13.500 --> 00:29:15.530
I think line is a good example.

00:29:15.530 --> 00:29:18.470
You see there's a
starting and ending type.

00:29:18.570 --> 00:29:22.310
So it can either have a square
on the end or triangle or be

00:29:22.310 --> 00:29:24.540
dashed and that sort of thing.

00:29:24.540 --> 00:29:28.250
So it's only going to make
sense to call get line ending

00:29:28.250 --> 00:29:30.580
style on a PDF annotation line.

00:29:30.580 --> 00:29:34.900
So that's kind of the way the
annotations are organized.

00:29:34.960 --> 00:29:37.600
They also have a draw method.

00:29:37.600 --> 00:29:41.950
And you can draw them
individually if you want,

00:29:41.960 --> 00:29:45.920
but if a bit is set on the page,
when you tell the page to draw,

00:29:45.920 --> 00:29:48.720
the page will go and draw
all of its annotations.

00:29:48.720 --> 00:29:54.450
And I probably should have mentioned
there's a way on PDF page that you can

00:29:54.500 --> 00:29:59.190
add and remove annotations and turn on
and off this bit to say whether or not to

00:29:59.190 --> 00:30:02.710
display or not display its annotations.

00:30:03.370 --> 00:30:05.370
Okay, I'll get to, okay, outline.

00:30:05.480 --> 00:30:09.070
So I guess we're going to step
back again to the document.

00:30:09.140 --> 00:30:13.600
PDF outline,
I showed you that in the preview example.

00:30:13.600 --> 00:30:16.580
You asked the document,
not all PDFs have an outline.

00:30:16.580 --> 00:30:18.600
In other words,
the author that created the

00:30:18.600 --> 00:30:22.620
PDF may not have taken the time to,
you know,

00:30:22.800 --> 00:30:26.870
Add a list of chapters and subchapters
and subheadings and that sort of thing.

00:30:27.010 --> 00:30:29.600
But if they did,
then you ask the PDF document

00:30:29.600 --> 00:30:30.740
for the root outline.

00:30:30.740 --> 00:30:35.110
And what you get back is one
of these PDF outline objects.

00:30:35.720 --> 00:30:40.280
And I guess I can probably best
describe them by referring to the

00:30:40.280 --> 00:30:42.200
example that's on the screen there.

00:30:42.200 --> 00:30:45.320
So the first thing that
PDF outline objects will have are,

00:30:45.470 --> 00:30:48.470
I probably should describe
these in a different order,

00:30:48.540 --> 00:30:49.880
can have children.

00:30:49.880 --> 00:30:52.020
And the root outline always has children.

00:30:52.020 --> 00:30:55.060
It's kind of the one outline
object that doesn't have a label.

00:30:55.060 --> 00:30:56.460
It just has children.

00:30:56.460 --> 00:30:59.380
And in this example,
the children are all the

00:30:59.380 --> 00:31:03.450
outline objects that you see,
I guess the first level, I say,

00:31:03.450 --> 00:31:05.060
of the objects you see.

00:31:05.060 --> 00:31:08.540
So the first child being
one that's called contents,

00:31:08.590 --> 00:31:12.140
the next one figures,
and the next one about this book,

00:31:12.190 --> 00:31:17.360
you see the disclosure triangle,
that PDF outline will have children.

00:31:17.360 --> 00:31:20.860
So if you turn down the triangle,
you'll see the children of

00:31:20.860 --> 00:31:22.500
that PDF outline object.

00:31:22.500 --> 00:31:24.420
All of these outline
objects have a label,

00:31:24.420 --> 00:31:26.220
and that's what's actually important.

00:31:26.480 --> 00:31:27.000
So if you turn down the triangle,
you'll see the children of that

00:31:27.030 --> 00:31:27.460
PDF outline object being displayed there.

00:31:27.460 --> 00:31:32.460
So contents is the label for
the first child PDF outline.

00:31:32.730 --> 00:31:37.140
And the other important thing,
and I showed this in preview,

00:31:37.140 --> 00:31:40.460
is that PDF outlines have a destination.

00:31:40.460 --> 00:31:44.240
So that specifies when the
user clicks on this outline,

00:31:44.240 --> 00:31:45.460
where do we go?

00:31:45.620 --> 00:31:48.660
Most of the time,
the destination will refer to some

00:31:48.660 --> 00:31:53.180
place within the PDF document,
you know, maybe page 27, you know,

00:31:53.180 --> 00:31:55.280
at a certain point on that page.

00:31:55.460 --> 00:31:56.450
But they can just be a
little bit different.

00:31:56.460 --> 00:31:59.460
They can just as well
describe a URL or something.

00:31:59.460 --> 00:32:03.420
They can actually point to
another PDF document itself or

00:32:03.420 --> 00:32:05.710
point to some place on the web.

00:32:06.860 --> 00:32:12.120
And that's a good sort of
segue into PDF destination.

00:32:12.260 --> 00:32:19.450
So PDF destination is kind of
an abstraction of this idea of

00:32:19.500 --> 00:32:22.060
where you're going to go when you
click on a thing or something.

00:32:22.220 --> 00:32:24.780
PDF outlines, as I mentioned,
have destinations.

00:32:24.940 --> 00:32:28.110
But also,
a PDF annotation link has a destination.

00:32:28.160 --> 00:32:31.240
When a user clicks on this link,
is it going to open your browser

00:32:31.240 --> 00:32:32.980
and take you to a web page?

00:32:32.980 --> 00:32:36.720
Or is it going to go down to page
13 or whatever of the document?

00:32:36.850 --> 00:32:41.290
So it can be -- a destination
can be a point on a page

00:32:41.290 --> 00:32:44.060
and a page for the document.

00:32:44.060 --> 00:32:46.480
Or it can be a URL.

00:32:46.480 --> 00:32:50.390
And I made a comment here about
the back and forward history.

00:32:50.500 --> 00:32:53.810
PDF view internally is using
PDF destinations to keep

00:32:53.890 --> 00:32:55.740
the back forward history.

00:32:55.740 --> 00:32:59.820
So when the user says --
when you say go to page,

00:33:00.010 --> 00:33:04.750
you know, say 10,
PDF view will make a destination

00:33:04.750 --> 00:33:06.760
for the current location.

00:33:06.760 --> 00:33:08.530
So the user's at page one.

00:33:08.690 --> 00:33:09.920
And push that onto a stack.

00:33:09.920 --> 00:33:12.310
So that then when you
later say to the PDF view,

00:33:12.310 --> 00:33:14.810
go back,
it just pulls that destination off

00:33:14.880 --> 00:33:21.800
the stack and says to the view,
says to itself, go to this destination.

00:33:22.400 --> 00:33:24.900
And this is PDF selection.

00:33:24.900 --> 00:33:28.080
So this is another one that's
kind of an abstraction.

00:33:28.080 --> 00:33:29.940
You see an example there.

00:33:29.940 --> 00:33:31.340
There's some text that's selected.

00:33:31.340 --> 00:33:33.800
I mean, that's a pretty obvious,
you know,

00:33:33.800 --> 00:33:36.240
that's what a PDF selection is visually.

00:33:36.240 --> 00:33:39.840
But internally what it is,
is it's always associated

00:33:39.860 --> 00:33:42.100
with a specific PDF document.

00:33:42.100 --> 00:33:45.350
It doesn't make sense to have, you know,
a selection on one document and

00:33:45.350 --> 00:33:48.580
then you ask another document to
make this the current selection.

00:33:50.450 --> 00:33:53.420
And so, you know, PDF selections are,
you know, document specific.

00:33:53.960 --> 00:33:56.340
You can span multiple pages.

00:33:56.350 --> 00:33:57.320
So it's not just a range.

00:33:57.320 --> 00:33:59.340
It's not just, you know,
from character five on this

00:33:59.340 --> 00:34:00.430
page to character nine.

00:34:00.430 --> 00:34:03.400
You can span multiple pages
and it can be discontinuous.

00:34:03.430 --> 00:34:05.340
It doesn't have to be continuous.

00:34:05.340 --> 00:34:09.330
It can be the whole document.

00:34:09.930 --> 00:34:17.450
I mentioned that the PDF document class
itself has methods where you can say,

00:34:17.490 --> 00:34:21.240
give me a selection representing,
I gave the example, the entire document,

00:34:21.280 --> 00:34:22.890
if you did select all.

00:34:22.900 --> 00:34:26.120
And within a page level,
there are selection methods

00:34:26.120 --> 00:34:28.360
so that you can say,
within a page,

00:34:28.360 --> 00:34:32.000
give me a selection that represents
text that's inside this rectangle,

00:34:32.000 --> 00:34:34.380
or from this character to that character.

00:34:34.380 --> 00:34:38.240
So that's how you create
these PDF selections.

00:34:39.570 --> 00:34:42.460
Another way you get these
PDF selections is that's actually,

00:34:42.460 --> 00:34:48.230
a PDF selection object is actually
sort of the coin that the search uses.

00:34:48.240 --> 00:34:53.540
So that when you ask to search
for a word like PDF in a document,

00:34:53.540 --> 00:34:57.730
every time it finds the instance of PDF,
what it does is creates a PDF selection

00:34:57.730 --> 00:34:59.890
object for that and returns that to you.

00:34:59.900 --> 00:35:04.180
And so there are methods that
you can call on the selection.

00:35:04.180 --> 00:35:07.580
You can find out the bounds of the
selection for a given page space,

00:35:07.640 --> 00:35:09.120
or you can find out what page it's in.

00:35:09.120 --> 00:35:10.080
And that sort of thing.

00:35:10.190 --> 00:35:14.030
And as you can also see,
a PDF selection has a

00:35:14.340 --> 00:35:16.120
draw method as well.

00:35:16.120 --> 00:35:18.940
In this case,
it takes whatever the current user's

00:35:18.940 --> 00:35:24.110
highlight color is and it draws in like
a multiply mode to sort of overlay.

00:35:24.120 --> 00:35:32.280
And PDF page, or PDF view itself will
draw the selection for you.

00:35:32.280 --> 00:35:36.040
So that's the kind of thing that if
you're using a higher level PDF view,

00:35:36.040 --> 00:35:38.100
you don't have to really worry about.

00:35:39.620 --> 00:35:40.760
Oh, I skipped this.

00:35:40.770 --> 00:35:41.730
I might as well mention.

00:35:41.890 --> 00:35:44.190
You can add PDF selections.

00:35:44.190 --> 00:35:45.860
They're kind of bullying in that way.

00:35:45.860 --> 00:35:47.780
If you have a selection
here and a selection here,

00:35:47.780 --> 00:35:49.710
you can tell this
selection to add that one.

00:35:49.710 --> 00:35:52.080
Like I said,
they don't have to be contiguous.

00:35:52.080 --> 00:35:56.710
If they overlap,
and you add the two selections,

00:35:56.710 --> 00:35:59.850
the parts that are
overlapped get removed.

00:35:59.860 --> 00:36:02.560
So when you ask for the
string for a selection,

00:36:02.830 --> 00:36:05.310
like in this example here,
if you ask for the string,

00:36:05.310 --> 00:36:09.210
you'd get update the in.

00:36:09.310 --> 00:36:12.020
If there was overlap and you
had two selections added,

00:36:12.020 --> 00:36:16.190
you might get multiple characters,
but we get rid of all

00:36:16.190 --> 00:36:18.400
those overlaps for you.

00:36:18.550 --> 00:36:19.730
Okay.

00:36:19.730 --> 00:36:23.400
This is the fun demo.

00:36:23.400 --> 00:36:23.400
The more fun demo.

00:36:24.510 --> 00:36:25.960
Let's see.

00:36:25.960 --> 00:36:30.080
Okay, so I wrote this little app,
and I'd like to say

00:36:30.080 --> 00:36:34.890
I wrote it in an hour,
but it took a little longer than that.

00:36:34.890 --> 00:36:37.410
And I called it PDFKit Linker.

00:36:37.410 --> 00:36:38.790
And what I found was that
it was a little bit more

00:36:40.150 --> 00:36:41.840
It's using PDFView.

00:36:41.940 --> 00:36:44.010
I'm just going to open
this document here.

00:36:44.010 --> 00:36:47.810
But one of the nice things
about it is since I'm using --

00:36:47.810 --> 00:36:52.870
if I just use PDFView straight,
I get all these kinds of things for free,

00:36:52.870 --> 00:36:55.930
like I can -- you see
the tool tip comes up.

00:36:56.180 --> 00:36:58.440
This link is going to take me to page 12.

00:36:58.610 --> 00:37:01.290
You see the cursor change
into the hand for free.

00:37:01.360 --> 00:37:03.770
If I click on it,
it handles the mouse down.

00:37:03.770 --> 00:37:06.040
It jumps me down to page 12.

00:37:06.100 --> 00:37:10.940
If I say go back, I've got that, go back,
it jumps back to the beginning.

00:37:11.030 --> 00:37:13.140
So it's kind of recorded all that.

00:37:13.140 --> 00:37:16.940
But what I've done here is
I've added this little widget

00:37:17.690 --> 00:37:21.440
and if you click on this,
I call it my edit mode.

00:37:21.440 --> 00:37:24.620
This is where the subclass
of PDFView really kicks in.

00:37:24.710 --> 00:37:27.460
When you're not in edit mode,
when you're what I call view mode,

00:37:27.460 --> 00:37:30.740
I'm just letting
PDFView handle everything.

00:37:30.740 --> 00:37:34.020
So I'm still subclassing and I'm
still overriding the mouse down,

00:37:34.020 --> 00:37:36.010
mouse up, but I'm just calling super.

00:37:36.150 --> 00:37:37.800
I call super and then
let PDFView deal with,

00:37:37.800 --> 00:37:43.230
you know, the -- The link traversal,
that sort of thing.

00:37:43.240 --> 00:37:47.140
But if you're in edit mode, I thought,
well, this is where I'll have fun.

00:37:47.230 --> 00:37:50.480
I'll take over the mouse down,
the mouse drag, that sort of thing.

00:37:50.480 --> 00:37:54.510
I'll even -- since I've subclassed
and overridden the draw method,

00:37:54.510 --> 00:37:57.660
I'll call super just so
PDFView can draw the page,

00:37:57.660 --> 00:38:01.740
but then I'm going to come along after
and I'm going to draw a gray rectangle

00:38:01.740 --> 00:38:04.000
around any annotation that I find.

00:38:04.000 --> 00:38:07.580
So I can ask the view -- since the
draw method gets called -- I can say,

00:38:07.580 --> 00:38:07.580
"Hey, I'm going to draw a gray
rectangle around any annotation

00:38:07.580 --> 00:38:10.290
that I find." And I can say,
"Okay, give me all the annotations

00:38:10.310 --> 00:38:12.710
for that page." I can walk
through the annotations,

00:38:12.710 --> 00:38:14.070
figure out which ones are links.

00:38:14.090 --> 00:38:16.580
I can get the bounds of
those link annotations and

00:38:16.580 --> 00:38:18.460
I can draw a gray rectangle.

00:38:18.460 --> 00:38:20.710
And so that's what I'm doing here.

00:38:20.730 --> 00:38:24.190
And since I can handle hit testing,
I can jump in and say, "Oh,

00:38:24.190 --> 00:38:28.540
you've clicked on one of these
link annotations." So I'm going to

00:38:28.540 --> 00:38:32.900
remember that one and I'll draw it
red and then I'll make this little

00:38:33.000 --> 00:38:35.580
get info button up here enabled.

00:38:35.580 --> 00:38:38.940
And then when you click on it,
I'll ask that, "Link annotation,

00:38:38.990 --> 00:38:42.710
what page do you link to?"
And it tells me page 12.

00:38:42.710 --> 00:38:45.720
So I say, "Okay,
well I want to change that."

00:38:45.720 --> 00:38:47.480
I see there's one to 77.

00:38:47.480 --> 00:38:49.210
Here's some 77 pages.

00:38:49.210 --> 00:38:51.880
I'll just type in -- I'll type in 77.

00:38:53.490 --> 00:38:56.900
Okay, I'll go back into view mode.

00:38:56.950 --> 00:39:00.400
Now when I move the mouse over,
you can see that I've actually

00:39:00.400 --> 00:39:03.000
modified that annotation.

00:39:03.000 --> 00:39:05.830
I've changed its destination
to point to page 77,

00:39:05.840 --> 00:39:09.960
and when I click on it, sure enough,
I'm down here at page 77.

00:39:11.280 --> 00:39:16.020
And as just kind of more fun,
if I go back into edit mode,

00:39:16.100 --> 00:39:22.300
click on new link, I've just now created
basically a new annotation.

00:39:22.300 --> 00:39:25.240
And I've told the page to add this.

00:39:25.240 --> 00:39:27.090
And I've specified the bounds.

00:39:27.180 --> 00:39:30.430
I'm doing hit testing here myself,
so I'm allowing the user

00:39:30.430 --> 00:39:31.880
to resize the bounds.

00:39:31.880 --> 00:39:34.730
And if I get info,
I've just put some sort

00:39:34.790 --> 00:39:37.040
of default values in,
page one.

00:39:37.160 --> 00:39:39.830
Well, here's that URL aspect.

00:39:39.830 --> 00:39:43.320
I can, a destination can also have a URL.

00:39:43.320 --> 00:39:51.000
So I'll type in Nikon's
web page and hit done.

00:39:51.600 --> 00:39:55.930
So what I've done now is I've told that,
I've created this annotation link.

00:39:55.940 --> 00:39:58.440
I've set its destination to be this URL.

00:39:58.440 --> 00:40:00.730
I've added it to the page.

00:40:00.880 --> 00:40:01.860
So now when I switch back to the page,
I've added it to the page.

00:40:02.600 --> 00:40:08.280
So now when I switch back to view mode,
you can see I'm kind of dragging on

00:40:08.280 --> 00:40:12.050
and off that PDF view recognizes,
oh, there's an annotation here.

00:40:12.070 --> 00:40:15.600
And if I click on it, sure enough,
it grabs the URL.

00:40:15.600 --> 00:40:20.220
It calls Safari, launches,
and takes you to the Nikon website.

00:40:25.340 --> 00:40:26.690
I don't know, there's a lot of UI here.

00:40:26.780 --> 00:40:30.670
It probably took a day or two,
probably two days to write this.

00:40:30.880 --> 00:40:35.170
So I'll switch back to slides
and I'll kind of go into a little

00:40:35.170 --> 00:40:36.820
more detail on the subclassing.

00:40:36.820 --> 00:40:39.740
And you'll kind of know what
I'm talking about because you

00:40:39.790 --> 00:40:40.900
just saw an example of it there.

00:40:40.900 --> 00:40:45.300
So PDF view, as I mentioned earlier,
it's a subclass of NSView,

00:40:45.300 --> 00:40:47.020
subclass of NSResponder.

00:40:47.020 --> 00:40:50.210
So it has mouse down, mouse up,
mouse drag.

00:40:50.220 --> 00:40:53.040
So you can override all these yourself.

00:40:53.040 --> 00:40:56.600
And that's what I was doing
when I was in edit mode.

00:40:56.620 --> 00:40:58.500
I handled the mouse down.

00:40:58.500 --> 00:41:00.740
But when you want to
be lazy and you're in,

00:41:00.740 --> 00:41:03.990
like, I had view mode,
you can always just call super and let

00:41:04.130 --> 00:41:06.460
PDF view handle the mouse down itself.

00:41:07.800 --> 00:42:47.800
[Transcript missing]

00:42:48.550 --> 00:42:51.880
One thing that you have to
do a lot if you subclass,

00:42:51.890 --> 00:42:54.740
and of course PDFView has to
do a lot of this internally,

00:42:54.740 --> 00:43:00.740
is kind of converting from view space,
is what I'll call it, to page space.

00:43:00.740 --> 00:43:04.980
So if the user has a mouse down,
you know by way of PDFView,

00:43:04.980 --> 00:43:08.070
you have it sort of in view coordinates.

00:43:08.180 --> 00:43:09.860
You know that they
clicked here in the view.

00:43:09.860 --> 00:43:12.860
So what you need to figure out is first,
what page did they click on?

00:43:12.860 --> 00:43:15.500
If you're trying to figure out if
they clicked on a link annotation,

00:43:15.500 --> 00:43:18.520
you need to first figure out
if they clicked on a page.

00:43:18.520 --> 00:43:22.720
So we have this page for point method,
and you pass in a point,

00:43:22.720 --> 00:43:25.750
and it returns you the page,
a page object representing the

00:43:25.750 --> 00:43:27.520
point that the user clicked on.

00:43:27.540 --> 00:43:31.310
You know,
since there's border sometimes around

00:43:31.310 --> 00:43:35.430
the page if the user has zoomed out,
sometimes they can click

00:43:35.430 --> 00:43:36.740
and it's not on a page.

00:43:36.740 --> 00:43:42.080
But if you pass in true for nearest,
then it will return the nearest page.

00:43:42.240 --> 00:43:45.110
In case the user didn't actually
click physically on a page.

00:43:45.180 --> 00:43:48.390
So once you have the page,
you want to figure out, okay,

00:43:48.500 --> 00:43:51.750
to figure out what annotation I may have,
the user may have clicked on,

00:43:51.760 --> 00:43:54.180
I need to get that point
into that page's space.

00:43:54.180 --> 00:43:58.170
So there's the methods convert
point and convert rect to page,

00:43:58.180 --> 00:44:01.160
and convert point or
convert rect from page.

00:44:01.180 --> 00:44:03.450
Well,
to page means from the view's coordinate

00:44:03.450 --> 00:44:05.110
system to the page that I pass in.

00:44:05.230 --> 00:44:08.820
So, you know, if I found out from page
for point that I was on,

00:44:08.820 --> 00:44:12.170
you know, a PDF page object that
represented page two,

00:44:12.180 --> 00:44:15.330
and then I say convert
this point to page,

00:44:15.330 --> 00:44:18.180
you know,
page object that represents page two,

00:44:18.280 --> 00:44:22.120
then this function will return that point
back in that page's coordinates and say,

00:44:22.250 --> 00:44:23.130
okay, it's this point.

00:44:23.230 --> 00:44:25.180
This is the coordinate in that space.

00:44:25.180 --> 00:44:30.180
So then I can ask the PDF page, page two,
for example, give me your annotations,

00:44:30.180 --> 00:44:33.500
and I can do a real simple
hit test on the bounds of that

00:44:33.610 --> 00:44:37.180
point now in page space to all
the bounds of the annotations.

00:44:37.520 --> 00:44:41.100
Because all these methods on like
the PDF annotation and on the page,

00:44:41.180 --> 00:44:43.920
all the coordinates,
all the points and all the bounds

00:44:43.920 --> 00:44:46.100
and rectangles are all in page space.

00:44:46.180 --> 00:44:49.590
They don't really care if the
user has zoomed in or is in

00:44:49.590 --> 00:44:52.010
two-up mode or anything like that.

00:44:52.140 --> 00:44:54.700
So that's what these methods
do is they kind of bridge

00:44:54.700 --> 00:44:59.790
the gap from the PDF view to,
you know, the page's space.

00:44:59.900 --> 00:45:02.870
And the last thing is the draw method.

00:45:02.870 --> 00:45:07.760
So every time the PDF view is resized or
the user scrolls or jumps to a new page,

00:45:07.780 --> 00:45:10.740
any time a page needs to be drawn,
there's this draw page

00:45:10.740 --> 00:45:11.980
method that gets called.

00:45:11.980 --> 00:45:17.180
And the only thing passed to it is the
PDF page object that needs to be drawn.

00:45:18.180 --> 00:45:20.260
Now, what I was doing,
and I kind of described

00:45:20.280 --> 00:45:24.560
it briefly in my demo app,
is I've subclassed PDF view

00:45:24.560 --> 00:45:28.260
and I've overridden draw page,
but I'm lazy and I want to let

00:45:28.260 --> 00:45:32.350
PDF view sort of draw the PDF,
the selection, the annotations,

00:45:32.370 --> 00:45:35.080
so I just call super, super draw page.

00:45:35.380 --> 00:45:38.810
But when that returns,
then I can go through and draw, you know,

00:45:38.830 --> 00:45:41.730
the little gray rectangles
or that sort of thing.

00:45:41.730 --> 00:45:47.040
Each time, if you're in two up,
for example, it'll get called 24.

00:45:48.200 --> 00:45:50.180
If the user's looking at two pages,
it'll get called twice.

00:45:50.180 --> 00:45:53.070
So it's not really, you know,
like a draw or act method.

00:45:53.160 --> 00:45:56.210
I mean, it's not called for the view,
it's called for each page in the view.

00:45:56.990 --> 00:46:00.780
Or if the user has scrolled down and you
can see bits and pieces of three pages,

00:46:00.780 --> 00:46:04.180
then the PDF, the draw page method will
get called three times,

00:46:04.180 --> 00:46:07.220
once for each page.

00:46:07.460 --> 00:46:08.980
And I think that's it.

00:46:08.980 --> 00:46:12.590
Travis is going to come up
and describe this stuff.

00:46:12.660 --> 00:46:17.680
I can tell you right off that the
PDFKit palette is in Extras developer,

00:46:17.680 --> 00:46:23.830
developer Extras palettes,
and there's already sample code

00:46:24.260 --> 00:46:28.400
in developer examples PDFKit.

00:46:28.400 --> 00:46:32.880
And that app that I just showed,
PDFLinker, we'll make that available,

00:46:32.990 --> 00:46:38.220
but I started in writing that app,
I started with the sample

00:46:38.230 --> 00:46:40.940
code that's on your Tiger DVD.

00:46:40.940 --> 00:46:43.940
Does Travis or somebody
from the--there he is.

00:46:43.940 --> 00:46:45.990
All right, everyone.

00:46:46.090 --> 00:46:52.000
So we have some--thank you.

00:46:52.090 --> 00:46:53.990
Travis Scott: Thank you.

00:46:57.520 --> 00:47:01.150
So we have some documentation and
other information that will probably

00:47:01.150 --> 00:47:02.540
be available to you later tonight.

00:47:02.540 --> 00:47:05.930
What we're doing with our sessions this
year is when we complete a session,

00:47:05.930 --> 00:47:10.840
we have supplementary information
that we have basically created after

00:47:10.840 --> 00:47:13.820
everything was set and frozen to
go on the DVDs that you received,

00:47:13.830 --> 00:47:14.730
the Tiger DVDs.

00:47:14.740 --> 00:47:18.810
We have these disk images you can
download off connect.apple.com.

00:47:18.820 --> 00:47:21.240
And generally most sessions
are going to have them,

00:47:21.240 --> 00:47:23.200
so you just basically go there and look.

00:47:23.760 --> 00:47:26.750
It's sometimes going to be sample code,
sometimes it's going to be sample code

00:47:26.750 --> 00:47:28.460
and preliminary documentation or both.

00:47:28.480 --> 00:47:32.550
So we evidently have some
available for you for PDFKit.

00:47:32.560 --> 00:47:36.200
And then also we've included a
handy URL up there for anyone who

00:47:36.200 --> 00:47:40.020
needs to really take a close look
at the Adobe PDF specification.

00:47:40.020 --> 00:47:44.250
Because it is a specification
that continues to grow and

00:47:44.250 --> 00:47:46.900
changes and gets more powerful.

00:47:46.900 --> 00:47:48.770
And it's handy to have the
PDF reference on hand if

00:47:48.780 --> 00:47:50.200
you're doing anything with PDF.