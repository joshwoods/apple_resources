WEBVTT

00:00:17.730 --> 00:00:19.300
Well, welcome to the session.

00:00:19.300 --> 00:00:20.530
My name's Ian Riitchie.

00:00:20.540 --> 00:00:25.080
I've had the opportunity of managing
part of the QuickTime engineering

00:00:25.080 --> 00:00:29.820
team this last year,
actually for a number of years.

00:00:31.540 --> 00:00:35.330
We decided to... In fact,
some of you were here last year and we

00:00:35.330 --> 00:00:39.940
mentioned that we're working on a new
set of Cocoa classes for QuickTime.

00:00:42.790 --> 00:00:44.050
We listened to your concerns.

00:00:44.180 --> 00:00:49.870
We heard NSMovie and NSMovieView had some
issues you wanted us to take care of.

00:00:49.870 --> 00:00:52.090
We said, well,
how are we going to do this?

00:00:52.340 --> 00:00:53.320
Because we're QuickTime engineers.

00:00:53.320 --> 00:00:54.600
We know QuickTime inside and out.

00:00:54.600 --> 00:00:55.900
We didn't know a lot about Cocoa.

00:00:56.600 --> 00:00:59.950
So we actually,
the whole team took Cocoa classes and

00:00:59.950 --> 00:01:04.540
we met with the Cocoa development team,
Olly Ozer and Andrew Platzer and others.

00:01:04.540 --> 00:01:08.640
And a lot of direction from
even executive management on

00:01:08.640 --> 00:01:11.010
how to work on these classes.

00:01:11.020 --> 00:01:13.720
And we'll explain today
what we've come up with.

00:01:13.790 --> 00:01:17.880
You're going to learn about
the new APIs that we offer.

00:01:19.800 --> 00:01:22.190
Tim Monroe will come up
and talk about the classes.

00:01:22.210 --> 00:01:24.580
We'll show you some sample
code that we worked on.

00:01:24.580 --> 00:01:28.900
Like what could you get working on today,
you know, just after a few minutes

00:01:28.900 --> 00:01:30.500
you have it on your DVD.

00:01:30.630 --> 00:01:33.390
And then we'll go into what if you
had a few days to work with this.

00:01:33.570 --> 00:01:38.310
Some things we came up with these
last few days after we finished

00:01:38.310 --> 00:01:40.490
working on the seed for your

00:01:40.600 --> 00:01:46.900
[Transcript missing]

00:01:47.450 --> 00:01:51.480
The old classes, NSMovie, NSMovieView.

00:01:51.510 --> 00:01:54.040
When we tried to use these,
just like real fast,

00:01:54.040 --> 00:01:55.440
you ran right into Carbon.

00:01:55.460 --> 00:01:57.570
You go, "Oh no, I've got to idle a movie?

00:01:57.620 --> 00:01:58.640
Well, I don't know about that.

00:01:58.640 --> 00:02:04.560
And what's a handle?" You know,
since MacÂ OS 9,

00:02:04.580 --> 00:02:08.960
most people don't know these,
or aren't used to using these

00:02:08.960 --> 00:02:10.480
structures and data types.

00:02:10.660 --> 00:02:15.300
So, you ran into limitations
that we decided to address.

00:02:16.150 --> 00:02:22.320
And of course there were an occasional
bug or two in the old classes.

00:02:22.490 --> 00:02:29.160
So you've probably heard Apple explain,
"We're committed to Cocoa.

00:02:29.220 --> 00:02:30.100
We want you to use Cocoa.

00:02:30.100 --> 00:02:32.900
If you're going to develop
an application on OS X,

00:02:32.900 --> 00:02:35.100
use Cocoa." And they mean it.

00:02:35.100 --> 00:02:38.570
We develop an application
on both OS X and Windows,

00:02:38.570 --> 00:02:42.860
the QuickTime player,
and we are committed to developing the

00:02:42.860 --> 00:02:45.470
QuickTime player for OS X in Cocoa.

00:02:45.620 --> 00:02:46.900
I'll explain in a minute how we did that.

00:02:46.900 --> 00:02:48.600
We developed the QuickTime broadcaster.

00:02:48.600 --> 00:02:53.820
A lot of the iApps that you see, iPhoto,
iMovie, other apps we have at Apple,

00:02:53.820 --> 00:02:55.600
are using Cocoa.

00:02:55.600 --> 00:02:58.690
So we encourage you all to
embrace this technology,

00:02:58.690 --> 00:03:03.600
and Apple is committed to
providing access to other parts

00:03:03.600 --> 00:03:08.600
of the OS in Cocoa classes.

00:03:10.140 --> 00:03:12.900
We looked at it as a
Cocoa programmer would.

00:03:13.090 --> 00:03:15.200
We removed all the carbonisms.

00:03:15.200 --> 00:03:18.900
So you can get up and get running in
no time with your Cocoa background.

00:03:22.010 --> 00:03:25.510
This next, well, where possible,
we adopted the Cocoa model.

00:03:25.620 --> 00:03:29.380
There's a few places that we'll tell
you about that we made exceptions.

00:03:29.450 --> 00:03:32.390
And we also provided a new palette to

00:03:32.960 --> 00:03:35.300
Tim Monroe will go through in
a little bit that will show

00:03:35.300 --> 00:03:36.560
you the new functionality.

00:03:36.560 --> 00:03:44.610
So on the abstraction, we have to deliver
QuickTime virtually everywhere.

00:03:44.610 --> 00:03:44.610
We have

00:03:45.550 --> 00:03:48.420
90, 95% of our users are on Windows.

00:03:48.740 --> 00:03:53.500
So when you're developing an application,
we said, well, where do we put the code?

00:03:53.550 --> 00:03:54.870
Where do we put most of it?

00:03:54.880 --> 00:03:57.340
We push it down into
QuickTime as much as possible.

00:03:57.580 --> 00:04:01.300
And then above this, we have--

00:04:02.120 --> 00:04:02.680
Two layers.

00:04:02.870 --> 00:04:04.690
We have an ActiveX layer
and we have a Cocoa layer.

00:04:04.690 --> 00:04:08.020
And one of the layers here
today that we're going to

00:04:08.020 --> 00:04:09.370
talk about is the Cocoa layer.

00:04:09.370 --> 00:04:11.840
That's what we built the player up on,
both for Windows and Mac.

00:04:11.890 --> 00:04:15.160
So your application should be
relatively QuickTime agnostic and

00:04:15.160 --> 00:04:18.500
just use the classes and be able
to get up and running in no time.

00:04:19.200 --> 00:04:23.100
I'd like to introduce now,
I even wrote some of these things down,

00:04:23.100 --> 00:04:28.780
one of the Apple premier's
multimedia engineers.

00:04:28.790 --> 00:04:29.610
This is all in print.

00:04:29.610 --> 00:04:30.980
You can look it up on the internet.

00:04:30.980 --> 00:04:34.850
He is the resonant
QuickTime guru in many circles,

00:04:34.850 --> 00:04:37.180
an author extraordinaire.

00:04:37.180 --> 00:04:40.310
You've seen many of his articles
in Mac Tech and he's also

00:04:40.310 --> 00:04:43.460
written the QuickTime Toolkit,
Volume 1 and 2.

00:04:43.460 --> 00:04:45.000
I encourage you to run
out and get this book.

00:04:45.050 --> 00:04:46.980
Let's bring him up now here.

00:04:46.980 --> 00:04:49.180
Tim Monroe, he's also the tech lead
of the QuickTime tool kit.

00:04:49.200 --> 00:04:50.780
of the QuickTime Cocoa Kit.

00:04:50.800 --> 00:04:52.400
Come on up, Tim.

00:04:55.740 --> 00:04:56.260
Thank you, Ian.

00:04:56.260 --> 00:05:00.060
What I want to talk about here
is briefly go through the kit,

00:05:00.060 --> 00:05:02.330
give you an overview of
what classes are in it,

00:05:02.350 --> 00:05:05.430
and then I want to do a real quick
demo that shows how to use the kit,

00:05:05.430 --> 00:05:07.770
and then I want to get out
of the way so that the really

00:05:07.770 --> 00:05:09.240
fun demos can come forward.

00:05:09.240 --> 00:05:12.350
So there are five classes in
the QuickTime for Cocoa kit,

00:05:12.410 --> 00:05:14.550
and there are two data structures.

00:05:14.550 --> 00:05:16.990
So let me start down toward the
bottom with the data structures,

00:05:16.990 --> 00:05:19.130
because we'll need those
when we get to the classes.

00:05:20.020 --> 00:05:23.660
We are providing a data structure
called QT time that is going to be our

00:05:23.670 --> 00:05:27.890
preferred method for indicating a time
or a duration in a QuickTime movie.

00:05:27.900 --> 00:05:30.480
And you can see there's
three fields here,

00:05:30.580 --> 00:05:33.400
a time value,
and the time value is interpreted

00:05:33.400 --> 00:05:36.420
relative to the time scale,
which is the number of

00:05:36.470 --> 00:05:38.110
time units per second.

00:05:38.120 --> 00:05:40.570
And finally,
we've added a flags field here,

00:05:40.570 --> 00:05:43.660
and this allows us to do some
interesting things like indicate

00:05:43.820 --> 00:05:47.280
that a time that we're passing back
to you is not really a valid time

00:05:47.280 --> 00:05:49.430
or is perhaps an indefinite time.

00:05:49.960 --> 00:05:52.240
This might happen, for instance,
if you ask for the duration

00:05:52.240 --> 00:05:53.260
of a streaming movie.

00:05:53.260 --> 00:05:57.110
It doesn't really have a duration,
so we might pass you back the

00:05:57.350 --> 00:06:00.550
flag that it's indefinite,
and you can see the QT time

00:06:00.650 --> 00:06:01.860
is indefinite flag there.

00:06:01.860 --> 00:06:03.110
So let's go ahead and start.

00:06:04.810 --> 00:06:09.250
So we have a bunch of utilities
for creating QT time structures,

00:06:09.400 --> 00:06:11.700
for adding them together,
for comparing them.

00:06:11.700 --> 00:06:14.260
We've tried to do everything as much
as possible in the Cocoa flavor.

00:06:14.260 --> 00:06:19.540
And there are two predefined QT time
structures that you will be working with,

00:06:19.610 --> 00:06:23.020
namely QT zero time,
which is a zero time or duration

00:06:23.020 --> 00:06:27.440
with a non-zero time scale,
and then the QT indefinite time,

00:06:27.440 --> 00:06:30.910
which has that flag,
that bit set in the flag.

00:06:30.960 --> 00:06:32.210
Thank you.

00:06:32.910 --> 00:06:37.900
If you take two QT time structures,
try that fast, and put them together,

00:06:37.900 --> 00:06:39.420
you have a QT time range.

00:06:39.420 --> 00:06:43.820
And that indicates a start time of the
range and the duration of the range.

00:06:43.820 --> 00:06:46.340
And once again,
we have a number of utility

00:06:46.340 --> 00:06:49.680
functions that you can use
to operate on time ranges.

00:06:49.680 --> 00:06:54.010
For instance, QT time in time range will
give you back a Boolean value.

00:06:54.020 --> 00:07:00.090
And finally, we have added categories on
the NSCoder class that allow

00:07:00.090 --> 00:07:05.360
you to encode or decode QT time
ranges and QT time structs.

00:07:05.490 --> 00:07:10.330
So when you archive or unarchive objects,
you can add these items in.

00:07:10.930 --> 00:07:12.630
So let's get to the classes now.

00:07:12.710 --> 00:07:15.520
The main class you'll want
to work with is QtMovie.

00:07:15.520 --> 00:07:18.440
This represents a QtMovie
and movie controller.

00:07:18.440 --> 00:07:22.120
We don't see any use in separating
those two items into separate classes.

00:07:22.160 --> 00:07:25.870
There are quite a number of ways
to create a QtMovie instance.

00:07:25.870 --> 00:07:28.020
I've got some of them listed here.

00:07:28.020 --> 00:07:30.670
If you have a movie in a file,
you can give us the file name.

00:07:30.670 --> 00:07:33.020
If you have a URL, we'll take that.

00:07:33.970 --> 00:07:37.450
If you have a QtData reference,
which I'll talk about in a second,

00:07:37.530 --> 00:07:40.120
we can initialize a
QtMovie object from that.

00:07:40.120 --> 00:07:41.920
NSData.

00:07:41.920 --> 00:07:45.760
Or finally, if you want to put a
QuickTime movie in your nib,

00:07:45.760 --> 00:07:50.520
we also have this method, MovieNamed,
which you may recognize as similar

00:07:50.520 --> 00:07:55.090
to the ImageNamed method for reading
the movie out of your nib file.

00:07:57.400 --> 00:08:03.120
So once you've got a Qt Movie object,
we have a large number of...

00:08:03.670 --> 00:08:07.140
methods that you can use to
navigate within the movie

00:08:07.600 --> 00:08:09.280
or to get movie attributes.

00:08:09.280 --> 00:08:11.600
Let me just talk about the
attributes for a second.

00:08:11.740 --> 00:08:15.590
There's a few methods that will give
you a specific attribute directly.

00:08:15.590 --> 00:08:18.810
For instance,
the current time method will give

00:08:18.900 --> 00:08:23.500
you back a QT time structure,
which represents the current time.

00:08:23.600 --> 00:08:27.070
Now we could have defined methods
for all the very many attributes

00:08:27.140 --> 00:08:30.100
that you might want to get,
but we haven't done that.

00:08:30.170 --> 00:08:34.650
What we will give you is an
NSDictionary that contains key

00:08:34.650 --> 00:08:40.620
value pairs of a large number of
keys and the associated values.

00:08:40.950 --> 00:08:43.740
If you just want one
particular attribute,

00:08:43.780 --> 00:08:47.300
then there is a method,
movieAttributeForKey,

00:08:47.300 --> 00:08:52.730
so you can pass a specific key and we'll
give you back the associated value.

00:08:54.190 --> 00:08:57.330
So if you have a movie,
you can also get an array

00:08:57.330 --> 00:08:58.960
of tracks in that movie.

00:08:59.310 --> 00:09:03.280
And finally,
if you need to go underneath the kit,

00:09:03.280 --> 00:09:05.220
if there's something
the Qt kit doesn't do,

00:09:05.290 --> 00:09:07.680
and you really like working
with those Carbon APIs,

00:09:07.680 --> 00:09:11.400
you can get the movie or the
movie controller identifier

00:09:11.440 --> 00:09:13.300
and use that in your code.

00:09:18.570 --> 00:09:21.500
The next class we're
talking about is QT Track.

00:09:21.740 --> 00:09:24.440
As you know,
a QuickTime movie is composed of tracks,

00:09:24.560 --> 00:09:27.450
so we will give you back, if you wanted,
a list of tracks of

00:09:27.460 --> 00:09:29.180
QT Track objects in the movie.

00:09:29.200 --> 00:09:33.600
Now, there's only one way for you to
create a QT Track object yourself,

00:09:33.600 --> 00:09:36.360
and that's if you already
have a QuickTime track.

00:09:36.450 --> 00:09:43.390
You can initialize a QT Track object
from that existing QuickTime track.

00:09:43.790 --> 00:09:48.860
The way that you get and set track
attributes is exactly parallel with the

00:09:48.860 --> 00:09:50.410
way that you do it with movie attributes.

00:09:50.410 --> 00:09:55.780
Finally, you can get the media object
that's associated with the track.

00:09:55.860 --> 00:09:59.310
And also, in the case that you need to
go underneath the kit and work

00:09:59.310 --> 00:10:03.320
directly with the QuickTime track,
you can get that track identifier.

00:10:06.540 --> 00:10:07.820
Not much to say about media.

00:10:08.030 --> 00:10:10.520
Each QT track has one
media associated with it.

00:10:10.590 --> 00:10:14.210
Again, if you want to create a media,
there's only one way to do that,

00:10:14.570 --> 00:10:17.660
which is to start with an existing
QuickTime media and call it the

00:10:17.780 --> 00:10:20.560
"init with QuickTime media" method.

00:10:20.780 --> 00:10:24.400
Media attributes work just the same
way as movie and track attributes.

00:10:24.520 --> 00:10:26.730
You can get the track
associated with the media.

00:10:26.840 --> 00:10:29.760
And finally,
if you need to go underneath the kit,

00:10:29.760 --> 00:10:31.930
you can get the media identifier.

00:10:33.320 --> 00:10:36.660
There's a Qt data reference class,
which I don't want to say much about

00:10:36.660 --> 00:10:39.370
because we'll talk about it a bit later.

00:10:39.440 --> 00:10:43.580
But the standard way of talking about,
of referring to data in a

00:10:43.580 --> 00:10:46.640
movie is with a data reference.

00:10:46.640 --> 00:10:48.000
So we'll talk more about this later.

00:10:48.000 --> 00:10:50.780
And finally,
the view object that we'll be

00:10:50.780 --> 00:10:52.840
working with is QtMovieView.

00:10:52.840 --> 00:10:56.060
It's a subclass of NSView that
is associated with a

00:10:56.060 --> 00:10:58.220
particular Qt movie object.

00:11:00.050 --> 00:11:03.000
I've listed some of the attributes
that you can get and set.

00:11:03.000 --> 00:11:06.000
We'll look at this more in a second
when we get to Interface Builder.

00:11:06.050 --> 00:11:08.780
And finally,
there's a large number of IB actions

00:11:08.780 --> 00:11:12.670
that you can wire up to menus
or buttons in your interface.

00:11:13.140 --> 00:11:15.860
So that's really the kit.

00:11:15.860 --> 00:11:19.410
They have asked us to mention a few
issues that you will run into if

00:11:19.490 --> 00:11:23.270
you start working with the version
of the kit that's on your DVD.

00:11:23.610 --> 00:11:25.160
And I've listed three of them here.

00:11:25.210 --> 00:11:28.000
There are some cosmetic drawing
issues that you'll run into that

00:11:28.000 --> 00:11:31.440
you won't see here today because
we have a fixed version of it.

00:11:31.620 --> 00:11:36.310
Currently, you cannot usefully subclass a
Qt movie view and get the event

00:11:36.310 --> 00:11:38.310
handling to work just right.

00:11:38.420 --> 00:11:41.110
And finally,
I would not recommend trying to

00:11:41.120 --> 00:11:43.600
rotate a Qt movie view right now.

00:11:43.650 --> 00:11:46.890
So let's go to a demo with this.

00:11:47.870 --> 00:11:51.210
And I'm going to show you with six
lines of code just how easy it is to

00:11:51.210 --> 00:11:56.800
write a multi-document QuickTime display
and editing application.

00:11:58.770 --> 00:12:06.380
So let me launch Xcode here,
and I'm going to ask for a new project,

00:12:06.570 --> 00:12:11.270
and I want a new project that is a
Cocoa document-based application.

00:12:11.320 --> 00:12:15.210
Let's call this Demo.

00:12:22.810 --> 00:12:23.860
Tell me you're crashing.

00:12:23.860 --> 00:12:24.460
There we go.

00:12:24.460 --> 00:12:27.360
I'm a pessimist.

00:12:27.830 --> 00:12:30.310
Let me open the .h file,
and I'm gonna need one

00:12:30.450 --> 00:12:31.800
instance variable here.

00:12:31.820 --> 00:12:34.000
Actually, first I need to do this.

00:12:34.030 --> 00:12:37.260
When I'm using the kit, I need to,
of course,

00:12:43.430 --> 00:12:45.300
include QtKit.h.

00:12:45.300 --> 00:12:49.300
And then I'm gonna wanna have
one instance variable here.

00:12:49.300 --> 00:12:51.590
I want a QtKit.h.

00:12:54.700 --> 00:13:04.600
[Transcript missing]

00:13:12.180 --> 00:13:12.940
This will work.

00:13:12.940 --> 00:13:15.780
So let's save that.

00:13:15.780 --> 00:13:17.980
That's all I need to add to my .h file.

00:13:18.050 --> 00:13:20.990
Let's go into the .m file and save that.

00:13:21.410 --> 00:13:24.740
And so I'm going to be loading
Windows from nib files.

00:13:24.820 --> 00:13:29.290
So I want to come down to the
window controller did load nib

00:13:29.540 --> 00:13:31.440
method and add a few lines of code.

00:13:31.490 --> 00:13:38.420
So in the instance that I'm
loading a movie from a file,

00:13:38.420 --> 00:13:39.090
so if...

00:13:39.900 --> 00:13:46.300
[Transcript missing]

00:13:47.470 --> 00:13:50.710
I want to do something,
and that is to create a Qt movie.

00:13:50.800 --> 00:13:55.140
And let's call that movie.

00:13:55.430 --> 00:13:56.480
And how am I going to create that?

00:13:56.480 --> 00:13:59.540
I'm going to call the
class method QtMovie,

00:13:59.560 --> 00:14:02.860
movie from file.

00:14:02.880 --> 00:14:04.260
And what file?

00:14:04.290 --> 00:14:07.940
Self file name.

00:14:10.380 --> 00:14:13.940
And if I get a movie,
I'm just being careful here,

00:14:14.060 --> 00:14:18.220
I want to assign that movie to the
movie view which is going to be loaded.

00:14:18.300 --> 00:14:27.890
So I will say movie
view set movie to movie.

00:14:29.460 --> 00:14:33.890
and I believe I'm done with my code,
so let's save that.

00:14:35.150 --> 00:14:39.440
Now I need to set a few
things in my target here.

00:14:39.500 --> 00:14:46.000
First thing I want to
do is when I'm building,

00:14:46.000 --> 00:14:46.000
oh goodness.

00:14:51.500 --> 00:14:54.140
I don't want to do the precompile,
the prefix header,

00:14:54.140 --> 00:14:56.100
because that'll take too long.

00:14:56.130 --> 00:15:00.070
And finally,
I want to set my document type so that

00:15:00.250 --> 00:15:04.810
when the open file dialog comes up,
I can open MOV files.

00:15:06.440 --> 00:15:08.280
And that's all I need there.

00:15:08.400 --> 00:15:12.010
I could add in other document types here,
but I'll refrain from that.

00:15:12.060 --> 00:15:15.990
So let's see if I can build this.

00:15:17.760 --> 00:15:19.460
Bill Succeeded, most excellent.

00:15:19.510 --> 00:15:21.550
But I'm not quite done yet,
'cause I need to set

00:15:21.550 --> 00:15:22.620
up my user interface.

00:15:22.910 --> 00:15:24.720
So let me open the document nib.

00:15:24.880 --> 00:15:26.800
I'm gonna get rid of that text thing.

00:15:26.860 --> 00:15:31.070
And the first thing I wanna
do is resize my window.

00:15:31.690 --> 00:15:37.780
You'll notice that I didn't put
any code into my source file that

00:15:37.780 --> 00:15:40.440
resizes the window to fit the movie.

00:15:40.440 --> 00:15:43.370
So I'm going to set this.

00:15:44.420 --> 00:15:50.350
I'm going to set the size of the window
to a known size that will fit my movies.

00:15:53.960 --> 00:16:02.920
Okay, and now I want to drag a movie
view object into my window.

00:16:04.200 --> 00:16:05.360
Set it down here.

00:16:05.360 --> 00:16:11.960
I want to set its size to resize to
fit the movie window when I resize it.

00:16:11.980 --> 00:16:14.440
And I'll list a few
attributes on the movie view.

00:16:14.440 --> 00:16:16.580
You can see I can show
or hide the controller.

00:16:16.580 --> 00:16:17.640
I'll show it.

00:16:17.650 --> 00:16:20.130
And I want to make this editable.

00:16:20.260 --> 00:16:21.700
And I need to do one last thing.

00:16:21.700 --> 00:16:24.740
I need to set up an
outlet for the file owner.

00:16:24.790 --> 00:16:33.190
So I'll come in here and add an outlet
and we need to call that movie view.

00:16:36.380 --> 00:16:38.140
Now let's come over here and wire it up.

00:16:38.180 --> 00:16:42.760
I will control click,
make the connection.

00:16:43.050 --> 00:16:44.460
Save that.

00:16:44.460 --> 00:16:47.740
And if the demo gods are smiling on me,
I can go ahead and run this.

00:16:47.740 --> 00:16:52.560
And demo is running and there is an...

00:16:56.270 --> 00:17:02.790
So let's now go over here to the
open file and open a movie file.

00:17:12.390 --> 00:17:13.410
Very good, thank you.

00:17:13.420 --> 00:17:21.320
One thing you cannot forget to do is
add the QtKit framework to your project.

00:17:22.090 --> 00:17:27.750
or it won't run,
so we're going to go to system library.

00:17:29.530 --> 00:17:31.040
Frameworks.

00:17:31.040 --> 00:17:35.100
Look down here for the Qt Kit framework.

00:17:35.150 --> 00:17:37.170
Add that to our project.

00:17:37.390 --> 00:17:41.300
Yes, now let's build and run.

00:17:41.310 --> 00:17:42.720
And now things are working fine.

00:17:42.720 --> 00:17:47.280
So I can open, let's open that one that
I tried to open before.

00:17:48.990 --> 00:18:04.190
Movie from File.

00:18:04.190 --> 00:18:04.190
Ah, thank you.

00:18:04.190 --> 00:18:04.190
It's not Movie from File.

00:18:04.190 --> 00:18:04.190
You'd think I'd know this stuff now.

00:18:04.190 --> 00:18:04.190
It's Movie with File.

00:18:04.190 --> 00:18:04.190
Okay.

00:18:04.190 --> 00:18:04.190
Now that we've got that,
let's go ahead and start the session.

00:18:06.790 --> 00:18:09.260
Let's try running this.

00:18:09.290 --> 00:18:12.040
Oh, I'm still running it there.

00:18:15.510 --> 00:18:16.340
There we go.

00:18:16.340 --> 00:18:16.760
Now this should work.

00:18:16.770 --> 00:18:18.660
Let's cross our fingers.

00:18:18.680 --> 00:18:19.740
Open that.

00:18:19.760 --> 00:18:20.710
Bingo, we've got it.

00:18:20.710 --> 00:18:22.500
This is actually a Flash file.

00:18:22.500 --> 00:18:25.100
One thing let me show you real quickly.

00:18:25.100 --> 00:18:27.990
In the keynote on Monday,
I showed you that there's a

00:18:27.990 --> 00:18:29.800
contextual menu for movies.

00:18:29.800 --> 00:18:32.830
And if I control click in this,
this is a Flash movie,

00:18:32.830 --> 00:18:35.920
I actually get items here
that are relevant to Flash.

00:18:35.990 --> 00:18:38.590
So I can zoom in, zoom out, and so forth.

00:18:40.150 --> 00:18:43.670
All right, let me very briefly
show you one more thing.

00:18:43.680 --> 00:18:47.950
And this is to show you that
the kit provides you a large

00:18:47.950 --> 00:18:50.750
number of behaviors for free.

00:18:54.450 --> 00:18:56.160
Okay, so I've opened three movies here.

00:18:56.160 --> 00:18:58.160
I have two VR panoramas.

00:18:58.270 --> 00:18:59.580
And let me line this up just right.

00:18:59.650 --> 00:19:03.200
So this is Donner Lake in the winter
and Donner Lake in the summer.

00:19:03.200 --> 00:19:07.850
And that's exciting.

00:19:07.850 --> 00:19:11.930
So let me try opening that again.

00:19:20.200 --> 00:19:21.180
So something is missing here.

00:19:21.180 --> 00:19:25.230
What I had was a wired sprite
movie that sent messages to the

00:19:25.230 --> 00:19:27.130
two panoramas to tell them to pan.

00:19:27.130 --> 00:19:29.900
So I can't do that here because
the movie isn't opening correctly.

00:19:29.900 --> 00:19:33.060
But that illustrated one thing
that you get for free with the kit,

00:19:33.060 --> 00:19:35.660
which is automatic
intermovie communication.

00:19:35.660 --> 00:19:39.360
So with that, bumbling through,
let me bring up Tom Maremaa,

00:19:39.420 --> 00:19:43.290
and he will discuss what you can do,
hopefully with more success,

00:19:43.290 --> 00:19:46.240
if you've got an afternoon
to play with the kit.

00:19:46.240 --> 00:19:48.380
All right, Tim.

00:19:50.200 --> 00:19:53.620
Where is the clicker?

00:19:53.660 --> 00:19:55.140
Is this it?

00:19:59.800 --> 00:20:05.900
Tom Maremaa, I write technical
documentation for Apple.

00:20:05.900 --> 00:20:08.170
I've been working with the
QuickTime team for the last seven

00:20:08.450 --> 00:20:10.690
years and this is just awesome stuff.

00:20:10.690 --> 00:20:14.310
I decided to see what I could
cook up with the framework

00:20:14.960 --> 00:20:16.630
basically in an afternoon.

00:20:16.840 --> 00:20:18.290
Whoops, that was too fast.

00:20:18.290 --> 00:20:19.690
How about going back here?

00:20:19.790 --> 00:20:24.750
And I wanted to basically build a little
QuickTime kit media player app in Tiger,

00:20:24.830 --> 00:20:27.190
something that was tasty,
easy to cook up and

00:20:27.190 --> 00:20:28.790
wouldn't burn my fingers.

00:20:28.890 --> 00:20:32.390
I basically wanted to do
an app that could play,

00:20:32.520 --> 00:20:37.560
display QuickTime movies, import/export,
and also do some editing

00:20:37.570 --> 00:20:39.690
beyond simple copy and paste.

00:20:39.930 --> 00:20:42.800
And this would involve maybe a
couple hundred lines of code.

00:20:42.860 --> 00:20:44.790
So what did I need?

00:20:44.790 --> 00:20:46.770
Well, first of all, Tiger cookbooks.

00:20:46.850 --> 00:20:53.720
Yes, we have some Tiger cookbooks to
work with a QuickTime kit framework.

00:20:53.790 --> 00:20:56.570
Second thing is sample code,
which you can download,

00:20:56.570 --> 00:21:00.530
which is a piece of cake,
and some basic Cocoa programming.

00:21:00.690 --> 00:21:03.220
Third thing, ingredients.

00:21:03.580 --> 00:21:05.160
Start with Xcode, obviously.

00:21:05.350 --> 00:21:08.110
Make sure Panther or Tiger is installed.

00:21:08.110 --> 00:21:10.800
And the key is add QuickTime 6.6.

00:21:10.960 --> 00:21:14.180
And then we're going to bake
it up with the new classes.

00:21:14.270 --> 00:21:16.930
When completed,
invite friends over to watch and

00:21:16.930 --> 00:21:19.020
enjoy my player app doing its thing.

00:21:20.470 --> 00:21:24.640
Finally, all the documentation,
the reference,

00:21:24.660 --> 00:21:28.860
and the programming guide is available,
plus the sample code that

00:21:29.000 --> 00:21:31.660
I used to build this app.

00:21:31.660 --> 00:21:31.660
Notice that

00:21:32.060 --> 00:21:38.200
We have not included the 3,300 pages
that are part of the procedural C API.

00:21:38.350 --> 00:21:39.300
You won't need that.

00:21:39.300 --> 00:21:42.770
Nor will you need the thousands
of other pages that we've written

00:21:42.770 --> 00:21:46.920
over the last 10 years documenting
this awesome QuickTime technology.

00:21:46.920 --> 00:22:02.540
So, can I go to the demo please?

00:22:03.610 --> 00:22:03.610
Whoops, that's going.

00:22:03.610 --> 00:22:03.610
Okay.

00:22:03.610 --> 00:22:03.610
I'm going to just close.

00:22:03.610 --> 00:22:03.610
I think this is Tim's stuff.

00:22:18.200 --> 00:22:27.090
This is my QtKit player
app and as you can see,

00:22:27.300 --> 00:22:32.200
I have added my QtKit framework,
which is what Tim was showing.

00:22:32.340 --> 00:22:37.200
This is basically an app that was
cooked up in a couple of days.

00:22:37.350 --> 00:22:47.550
And what I want to show you is just
a few features that are unique to it.

00:22:47.550 --> 00:22:47.550
I also use the QtKit

00:22:48.300 --> 00:22:59.200
[Transcript missing]

00:22:59.850 --> 00:23:11.060
I'm going to do is show you what you can
do as far as adding some of the actions.

00:23:11.360 --> 00:23:14.660
As you can see,
I have specified my fill color as blue.

00:23:14.740 --> 00:23:20.900
I'm showing my controller and I'm not
going to be showing the editing part yet.

00:23:21.020 --> 00:23:28.570
Let me just go back to this and I want
to show you what I've wired up here.

00:23:33.410 --> 00:23:36.480
Hey, this is the cool stuff
that comes with the kit.

00:23:36.480 --> 00:23:41.980
As you can see, I can add,
add scale in addition to the cut,

00:23:42.070 --> 00:23:43.040
copy and delete.

00:23:43.180 --> 00:23:45.860
I can specify my actions
to go to the beginning,

00:23:45.860 --> 00:23:46.850
to the end.

00:23:46.860 --> 00:23:50.040
I can replace, I can start backward,
et cetera.

00:23:50.090 --> 00:23:53.690
Then from here,
let me just pop open real quickly.

00:23:53.770 --> 00:23:56.140
Thank you.

00:23:56.920 --> 00:23:58.900
and the rest of the team.

00:23:58.900 --> 00:24:04.900
So, I'm going to show you how
to use the main menu nib.

00:24:04.900 --> 00:24:06.780
I don't know if you guys can see this
is getting a little bit crowded here.

00:24:06.960 --> 00:24:14.630
I should probably -- and here I've added
importing plus an export view object.

00:24:14.650 --> 00:24:22.300
I've added some of my other menu items
in my edit menu and also in my movie.

00:24:23.410 --> 00:24:26.990
Let me just close this down a little bit.

00:24:27.050 --> 00:24:29.220
I don't want to save anything.

00:24:34.300 --> 00:24:36.800
Let's see if I can save anything.

00:24:36.840 --> 00:24:40.740
Now, here's the good stuff.

00:24:40.740 --> 00:24:44.290
In my declarations,
they're all very straightforward.

00:24:44.290 --> 00:24:46.350
I think this is standard Cocoa stuff.

00:24:46.440 --> 00:24:49.110
You can see what we're doing
as far as the class methods,

00:24:49.110 --> 00:24:50.750
the inits, some of the setters.

00:24:50.860 --> 00:24:56.440
This is probably the most
commonly used of our methods.

00:24:56.920 --> 00:25:04.600
In the QT kit and down here,
here are all of our IB actions.

00:25:06.060 --> 00:25:09.920
Things get a little bit more
complicated in the implementation file.

00:25:10.000 --> 00:25:13.110
This puppy is somewhat longer.

00:25:13.470 --> 00:25:17.600
As you can see here,
I have a pound defined that specifies

00:25:17.600 --> 00:25:20.360
the width of my movie at 320.

00:25:20.360 --> 00:25:23.280
This is primarily to
open up audio movies.

00:25:23.290 --> 00:25:28.460
And this sample code is all
available for download and it's

00:25:28.550 --> 00:25:31.540
all documented block by block.

00:25:31.640 --> 00:25:34.810
The interesting parts, I think,
have to do with,

00:25:34.940 --> 00:25:38.690
and I think Kevin Calhoum will
talk a little bit more about some

00:25:38.690 --> 00:25:40.980
of the issues involving sizing.

00:25:40.980 --> 00:25:46.740
And here we're opening up our document
with the contents of the file.

00:25:46.740 --> 00:25:50.650
And this is partly where we're going
to be doing some of our importing.

00:25:52.380 --> 00:26:00.740
The beauty of working with the Qt kit,
I think, is that it doesn't take a lot of

00:26:00.780 --> 00:26:05.470
code and it really dances for you.

00:26:05.610 --> 00:26:09.380
So I'm going to just quickly
build and run this puppy.

00:26:10.910 --> 00:26:13.230
And there's my QtKit player app.

00:26:13.310 --> 00:26:16.110
As you can see, this is the default.

00:26:16.410 --> 00:26:19.090
Now, here's where it gets a
little bit interesting.

00:26:19.160 --> 00:26:26.730
I can basically import
and I have control.

00:26:32.400 --> 00:26:34.400
I wonder if we get some sound.

00:26:34.400 --> 00:26:35.720
Do we have sound?

00:26:35.720 --> 00:26:39.750
We don't have sound on this machine?

00:26:47.980 --> 00:26:54.720
Okay, the next item that I want to import
for you guys is my MPEG-4 file.

00:26:54.720 --> 00:26:58.200
Now here we've got...

00:27:02.670 --> 00:27:05.360
We've got some control
over movie playback.

00:27:05.360 --> 00:27:08.550
Hopefully you don't have to
cook with cockroaches like that.

00:27:18.910 --> 00:27:20.300
And guess what we've added?

00:27:20.520 --> 00:27:23.350
We have the capability,
which I don't have time to demo now,

00:27:23.440 --> 00:27:25.960
of additional editing functions.

00:27:25.980 --> 00:27:28.800
Add, add scale, replace and trim.

00:27:28.930 --> 00:27:31.850
We can toggle the controller.

00:27:32.390 --> 00:27:38.470
And if we want we can even clone it.

00:27:38.470 --> 00:27:38.500
There we are.

00:27:40.200 --> 00:27:43.690
Okay, things get pretty hot.

00:27:43.770 --> 00:27:49.280
We can even import JPEGs, still images.

00:27:50.510 --> 00:27:55.200
And my favorite import item,
being a guy who does documentation,

00:27:55.200 --> 00:27:59.300
I decided to actually import
a PDF of the documentation,

00:27:59.300 --> 00:28:01.690
which for you guys,
it has a scroller down here,

00:28:01.700 --> 00:28:04.390
for if you guys can read
it 30 frames a second,

00:28:04.390 --> 00:28:06.830
there you are.

00:28:06.880 --> 00:28:07.800
Okay.

00:28:07.800 --> 00:28:09.020
Happy cooking.

00:28:18.980 --> 00:28:22.050
So the document is available
that you just saw now.

00:28:22.140 --> 00:28:24.130
Since you read it so quickly,
you don't need to pick

00:28:24.210 --> 00:28:25.460
it up off of your seat.

00:28:25.530 --> 00:28:27.900
But for others at the conference,
you might point out to them

00:28:27.940 --> 00:28:30.670
that the QuickTime Kit Reference
for Objective-C and the

00:28:30.730 --> 00:28:33.550
QuickTime Kit Programming
Guide are available.

00:28:36.100 --> 00:28:37.050
Hi, I'm Kevin Calhoun.

00:28:37.120 --> 00:28:40.940
I'm still a software
engineer at Apple Computer.

00:28:40.940 --> 00:28:44.040
And I'm going to talk to you about some
more advanced scenarios once you get

00:28:44.040 --> 00:28:47.100
involved programming with the QT kit.

00:28:47.100 --> 00:28:49.610
You are going to have needs that
go beyond the things that you can

00:28:49.610 --> 00:28:50.840
do in a morning or an afternoon.

00:28:51.230 --> 00:28:53.100
You might have to work into the evening.

00:28:53.440 --> 00:28:56.100
These are the nighttime topics.

00:28:56.100 --> 00:29:00.160
Let me go through them
one at a time for you.

00:29:02.170 --> 00:29:04.980
As Tom mentioned,
there will be some code that's

00:29:04.980 --> 00:29:08.980
necessary if you want when
your Windows nib is loaded,

00:29:09.290 --> 00:29:12.680
if you want to size a view or
size the entire window to fit

00:29:12.820 --> 00:29:14.540
the natural size of a movie.

00:29:14.630 --> 00:29:16.720
But we've made this easy for you.

00:29:16.720 --> 00:29:20.690
It's possible by means of one of the
methods that Tim mentioned earlier,

00:29:20.760 --> 00:29:24.570
the QtMovie attribute method,
to find out what the natural

00:29:24.570 --> 00:29:25.970
size of the movie is.

00:29:26.170 --> 00:29:29.140
Then you can use that size
to set the size of your view

00:29:29.140 --> 00:29:30.520
or your window accordingly.

00:29:30.700 --> 00:29:33.520
You can check whether the
movie is displaying the movie

00:29:33.520 --> 00:29:36.570
controller and add in the size
of the movie controller if it is.

00:29:38.510 --> 00:29:41.190
and that code, in fact code that looks
exactly like this,

00:29:41.190 --> 00:29:45.200
is in Tom's sample application
which we have distributed to you.

00:29:45.270 --> 00:29:47.160
So you can see it in action.

00:29:48.350 --> 00:29:52.100
Tom's application,
you call that the QtKit player,

00:29:52.130 --> 00:29:55.200
is capable of opening any
of the media formats that

00:29:55.280 --> 00:29:56.750
QuickTime is capable of opening.

00:29:56.750 --> 00:30:01.170
And it does this merely by
calling the method QtMovie,

00:30:01.170 --> 00:30:02.420
movie with file.

00:30:02.420 --> 00:30:03.890
That's all you have to do.

00:30:03.890 --> 00:30:06.700
And you can open MPEG-4,
all the still image formats

00:30:06.700 --> 00:30:09.800
that QuickTime supports,
AVI, a whole range of formats,

00:30:09.800 --> 00:30:11.520
even QuickTime movie files.

00:30:13.160 --> 00:30:17.620
But you might want to tell NSPanel or
NSOpenPanel when you bring it up that

00:30:17.700 --> 00:30:22.540
you want it actually to make all of
those different file types selectable.

00:30:22.540 --> 00:30:24.120
There are two ways to do that.

00:30:24.120 --> 00:30:25.880
This is one of them here.

00:30:25.880 --> 00:30:30.120
You can use the class method on Qt movie,
canInitWithFile,

00:30:30.270 --> 00:30:35.620
in order to determine whether a file
should be selectable in NSOpenPanel.

00:30:35.620 --> 00:30:37.100
You do it just like this.

00:30:37.110 --> 00:30:40.140
You set yourself as a delegate
for the panel and you handle

00:30:40.140 --> 00:30:44.160
the method "panel should show
file name" and you can respond,

00:30:44.160 --> 00:30:49.040
"Should I show this file?"
by calling canInitWithFile.

00:30:49.040 --> 00:30:52.700
The other thing that you can do is
you can actually get from Qt movie,

00:30:52.720 --> 00:30:56.310
there's a class method that will
return an array of all of the

00:30:56.310 --> 00:31:00.020
file types that QuickTime can open
if that's what you need to do.

00:31:00.060 --> 00:31:01.130
It's really a tradeoff.

00:31:01.140 --> 00:31:04.110
If you have a small number of files,
you might want to pass them

00:31:04.110 --> 00:31:05.460
for a filter like this.

00:31:05.460 --> 00:31:08.280
If you have a wide range of file types,
it might be more efficient for you

00:31:08.390 --> 00:31:10.980
actually to get that whole array.

00:31:13.130 --> 00:31:14.650
Okay, other topics.

00:31:14.810 --> 00:31:18.500
We showed you opening movies from files.

00:31:18.560 --> 00:31:20.900
We mentioned that you can
open movies from URLs.

00:31:20.900 --> 00:31:25.690
Well, what happens if you have media data
stored in an instance of NSData?

00:31:25.690 --> 00:31:30.280
I've got NSData sitting around and I've
got AVI in it or I've got MPEG-4 in it.

00:31:30.420 --> 00:31:32.360
I want to make a Qt movie out of that.

00:31:32.420 --> 00:31:34.100
Well, that's very, very easy.

00:31:34.100 --> 00:31:37.090
There's a class method on Qt movie,
movie with data,

00:31:37.240 --> 00:31:40.210
but I wanted to show you just
a little under the hood what

00:31:40.270 --> 00:31:42.200
that method actually does.

00:31:42.700 --> 00:31:47.430
It initializes, well,
it creates an instance of Qt data

00:31:47.430 --> 00:31:51.940
reference that essentially refers
to your NSData as the source of

00:31:51.980 --> 00:31:55.120
the media that the movie will
be able to play and manipulate.

00:31:55.120 --> 00:31:58.360
When you do this,
it's very handy if you give

00:31:58.360 --> 00:32:04.020
QuickTime a clue about the format of
the data in your instance of NSData.

00:32:04.020 --> 00:32:07.560
There are two forms of clue
that we're able to read.

00:32:07.560 --> 00:32:10.370
One is a file name with a path extension.

00:32:10.370 --> 00:32:14.630
If it ends in .mov or .mov,
that's a good clue about the format

00:32:14.770 --> 00:32:16.800
of the data that's in the NSData.

00:32:16.800 --> 00:32:20.100
Or you can give us a MIME type,
and that will help us determine how

00:32:20.100 --> 00:32:21.960
to import that data in your NSData.

00:32:22.390 --> 00:32:26.600
Then you can manipulate media data
in instances of NSData using the

00:32:26.680 --> 00:32:30.630
very same methods that you saw
demonstrated in use with files.

00:32:30.690 --> 00:32:33.600
Okay,
that's media data coming into the kit.

00:32:33.700 --> 00:32:35.720
What about going out?

00:32:35.850 --> 00:32:40.560
You have a lot of options for storing
your movies in files and for re-encoding

00:32:40.560 --> 00:32:43.600
your movies into other forms of media.

00:32:43.720 --> 00:32:46.800
Option one,
you can simply write your movie

00:32:47.020 --> 00:32:49.470
out to a QuickTime movie file.

00:32:49.850 --> 00:32:53.450
A file which only stores a
reference to the media data

00:32:53.450 --> 00:32:55.580
which is stored externally.

00:32:55.810 --> 00:32:58.980
That's easily accomplished via
the Qt Movie instance method,

00:32:59.640 --> 00:33:02.980
write to file with attributes.

00:33:04.190 --> 00:33:07.670
The second option is perhaps you want to
save your movie after you've performed

00:33:07.670 --> 00:33:12.420
all the manipulations on it that you want
to perform out to a QuickTime movie file,

00:33:12.460 --> 00:33:16.820
but you want to store a complete copy of
all the media that that movie requires.

00:33:17.000 --> 00:33:21.450
That's easily accomplished by
means of the Qt movie method

00:33:21.450 --> 00:33:24.130
write to file with attributes.

00:33:25.000 --> 00:33:26.260
I've achieved a theme for my talk.

00:33:26.260 --> 00:33:26.840
I'm satisfied.

00:33:26.840 --> 00:33:27.320
I can move on.

00:33:27.390 --> 00:33:31.880
But in this case,
you have to put in that NSDictionary that

00:33:31.880 --> 00:33:35.710
you pass for with attributes some
information that tells the Qt

00:33:35.800 --> 00:33:37.070
kit that you want to flatten.

00:33:37.120 --> 00:33:39.870
You want to copy all the media
data to the output movie file.

00:33:39.890 --> 00:33:43.040
So that's what this code accomplishes.

00:33:44.170 --> 00:33:47.260
Of course,
if what you want to do is to store

00:33:47.500 --> 00:33:51.910
your model by means of NS Archiver,
you can use that with Qt

00:33:51.910 --> 00:33:53.990
Movie instances as well.

00:33:54.110 --> 00:34:00.480
You can archive the movie as part
of your whole object hierarchy.

00:34:00.710 --> 00:34:04.070
Finally,
the last option is you can just get in

00:34:04.180 --> 00:34:08.420
an instance of NSData the serialized,
freeze-dried form of a

00:34:08.520 --> 00:34:12.270
QuickTime movie using the method
movie format representation.

00:34:12.690 --> 00:34:15.180
Once you have that,
you can store it anywhere you like.

00:34:15.350 --> 00:34:17.610
In instance of NSData,
which you can write to a file or

00:34:17.710 --> 00:34:20.110
do whatever you need to do with it.

00:34:22.000 --> 00:35:37.100
[Transcript missing]

00:35:39.590 --> 00:35:42.670
We have a left-handed demo machine today.

00:35:42.790 --> 00:35:47.500
And I wrote a very simple application
that really does one thing only.

00:35:47.600 --> 00:35:51.010
It manages a list of export settings.

00:35:52.720 --> 00:35:56.030
and it saves them to a P-list of
exactly the form that I mentioned

00:35:56.030 --> 00:35:57.800
in that code snippet here.

00:35:57.880 --> 00:35:59.600
This is a very simple Cocoa app.

00:35:59.700 --> 00:36:03.250
All that it does is show you an
array of export settings such as

00:36:03.500 --> 00:36:05.300
high quality or digital video.

00:36:05.360 --> 00:36:08.600
And for each of these presets that
I want to use in my application,

00:36:08.640 --> 00:36:10.940
I can edit those export presets.

00:36:11.030 --> 00:36:16.040
Let's see, I want high quality to
use the video compressor.

00:36:16.270 --> 00:36:18.100
Oh, let's see, what do I want to use?

00:36:18.210 --> 00:36:21.440
What do you want to use, Michael?

00:36:21.630 --> 00:36:23.060
Pixlet.

00:36:24.630 --> 00:36:27.460
And I want that to be high quality.

00:36:27.520 --> 00:36:30.650
And I like 30 frames per second.

00:36:30.810 --> 00:36:34.800
And I want my sound to be stored as

00:36:35.910 --> 00:36:41.150
Apple Lossless at 48 kilohertz,
because I know that's the audio format

00:36:41.240 --> 00:36:43.430
that I'm going to be working with.

00:36:43.430 --> 00:36:46.420
And I'm not interested in preparing
for internet streaming because I'm just

00:36:46.420 --> 00:36:50.700
using this in my production pipeline.

00:36:50.760 --> 00:36:53.570
But if I'm delivering to CD-ROM,
perhaps I want a

00:36:53.570 --> 00:36:55.350
different set of settings.

00:36:56.220 --> 00:37:03.040
I may want to encode my video
to MPEG-4 with medium quality,

00:37:03.040 --> 00:37:09.280
and I want my audio in this
particular case to go to MPEG-4 audio.

00:37:09.890 --> 00:37:11.560
AAC.

00:37:11.660 --> 00:37:13.400
Looks good.

00:37:13.500 --> 00:37:17.520
And so all I'm doing in this application
is editing and saving these presets.

00:37:17.640 --> 00:37:21.360
I set my high quality to be Apple Pixlet
video and Apple lossless audio,

00:37:21.360 --> 00:37:26.670
and I set my CD-ROM preset to be
MPEG-4 video and MPEG-4 audio.

00:37:27.420 --> 00:37:30.020
Now I can save

00:37:30.780 --> 00:37:32.930
This collection of presets to a document.

00:37:33.100 --> 00:37:38.110
I'm going to say these are my
export settings and I'm going to

00:37:38.110 --> 00:37:39.850
store them out on the desktop.

00:37:40.560 --> 00:37:46.220
And what I actually save in
this application is a plist.

00:37:46.410 --> 00:37:50.050
And inside of that plist,
which has the file type,

00:37:50.120 --> 00:37:52.690
if only you could see the file type,

00:37:54.730 --> 00:37:56.370
.export settings.

00:37:56.530 --> 00:38:00.520
It's a simple plist that contains
those export settings that I can

00:38:00.520 --> 00:38:04.700
load in my application later on
and apply to an export operation.

00:38:04.700 --> 00:38:07.120
This is sample code that
we'll distribute to you.

00:38:07.250 --> 00:38:09.560
If you want to implement
something for example like iMovie.

00:38:09.560 --> 00:38:11.750
If I can come back over to slides please.

00:38:11.750 --> 00:38:15.950
If you have something like iMovie that
has a panel that says export to Web,

00:38:15.950 --> 00:38:19.420
export to CD-ROM,
this is exactly how you can implement

00:38:19.420 --> 00:38:21.740
that in your own applications.

00:38:21.740 --> 00:38:24.700
Finally, my last scenario of interest.

00:38:24.700 --> 00:38:28.190
When you're dealing with media,
the interesting thing about media is

00:38:28.300 --> 00:38:32.800
that it can come from any places and
have a variety of characteristics.

00:38:32.800 --> 00:38:35.560
One characteristic is
that it can be slow.

00:38:35.560 --> 00:38:39.930
It can be coming from remotely over
a network or it can be a media format

00:38:40.110 --> 00:38:44.290
that QuickTime supports that might
take us a while to scan in order to

00:38:44.310 --> 00:38:46.860
apply all these great features for it.

00:38:46.920 --> 00:38:47.910
For example, if it's primarily a
streaming application,

00:38:47.910 --> 00:38:48.330
it can be a very slow-paced application.

00:38:48.440 --> 00:38:49.100
If it's a streaming application,
it can be a very slow-paced application.

00:38:49.150 --> 00:38:51.400
If it's a streaming format but
you want to do editing on it,

00:38:51.400 --> 00:38:56.320
QuickTime might have to do a little
bit of work to prepare it for that.

00:38:56.370 --> 00:38:59.550
What you need to do in your
applications is to check the load

00:38:59.550 --> 00:39:03.900
state of Qt movies to determine
whether or not they're ready for the

00:39:03.900 --> 00:39:05.920
operation that you want to perform.

00:39:05.920 --> 00:39:09.080
Check to see if the load state
is complete before you perform

00:39:09.180 --> 00:39:11.200
editing or saving operations.

00:39:11.200 --> 00:39:14.840
We're making this easy for you by
giving you the movie attribute,

00:39:15.020 --> 00:39:18.280
the Qt movie load state
that you can check for this.

00:39:18.280 --> 00:39:19.380
Our own operations, for example,
are going to be a little

00:39:19.380 --> 00:39:20.160
bit more complicated.

00:39:20.160 --> 00:39:22.740
For example, if you call write to file
with attributes to do export,

00:39:22.740 --> 00:39:26.750
we'll do the checking for you,
but it's something to be aware of.

00:39:27.090 --> 00:39:29.840
Those are my higher-level
scenarios of interests.

00:39:29.920 --> 00:39:33.020
I'm going to turn the stage over to
Adrian Baerlacher who's going to show you

00:39:33.020 --> 00:39:34.570
some of the cool things that he built.

00:39:34.610 --> 00:39:36.570
I'm not sure if he did it in
the middle of the night or when,

00:39:36.620 --> 00:39:37.330
but he'll tell you.

00:39:43.710 --> 00:39:46.240
So can we switch to the demo machine,
please?

00:39:46.250 --> 00:39:52.430
I'm going to show a couple of very
simple demos using QtKit in Tiger.

00:39:58.150 --> 00:40:03.790
So the first demo I have
is a movie screensaver.

00:40:06.850 --> 00:40:13.010
So Tiger OS X has a screensaver framework
for writing your own screensavers.

00:40:13.010 --> 00:40:15.980
And you basically just
return a screensaver view.

00:40:15.980 --> 00:40:18.670
So in this case,
we want to use a Qt movie view.

00:40:18.670 --> 00:40:22.760
So programmatically,
we can create a Qt movie view and add

00:40:23.050 --> 00:40:25.980
it as a subview to our screensaver view.

00:40:27.580 --> 00:40:30.820
And in this case,
we set some attributes of the view, too,

00:40:30.820 --> 00:40:34.000
to hide the controller and
preserve the aspect ratio.

00:40:34.000 --> 00:40:38.500
So this is only about
200 lines of code or so.

00:40:38.500 --> 00:40:43.540
Most of this actually involves setting
up a configuration sheet in this case.

00:40:43.540 --> 00:40:46.780
The only other thing I wanted
to show here was the,

00:40:46.780 --> 00:40:50.100
oh yeah, so we also,
we observe a notification.

00:40:50.100 --> 00:40:54.400
There's about 16 different
notifications on Qt movie.

00:40:54.400 --> 00:40:56.310
And in this case,
we observed the Qt movie

00:40:56.310 --> 00:40:57.540
did end notification.

00:40:57.540 --> 00:41:02.860
So that we can know when the movie
finishes and go on to the next one.

00:41:04.590 --> 00:41:08.280
So most of these notifications
are useful if you want to

00:41:08.280 --> 00:41:11.530
customize your user interface.

00:41:12.000 --> 00:41:14.360
So as you see here,
we have a little preview

00:41:14.360 --> 00:41:15.430
like other screensavers.

00:41:15.430 --> 00:41:19.040
And this is just picking up
movies from the movies folder.

00:41:19.040 --> 00:41:23.060
And we can select which ones we want to
put in here and loop them or mute them.

00:41:23.060 --> 00:41:26.260
And we can, of course, test.

00:41:34.100 --> 00:41:38.940
This would go on to the next
movie once this one would finish.

00:41:38.940 --> 00:41:42.200
So it's a really simple example.

00:41:42.200 --> 00:41:47.410
The other example I have
here is of a movie plug-in.

00:41:49.730 --> 00:41:59.000
New in Safari, sorry, in Tiger,
WebKit has exposed the Cocoa plugin API.

00:41:59.260 --> 00:42:03.600
And it's actually very easy to
write your own plugins for WebKit.

00:42:03.640 --> 00:42:08.640
And so there's a method you provide,
a class method plugin

00:42:08.640 --> 00:42:09.900
view with arguments.

00:42:09.900 --> 00:42:11.300
And we get a dictionary.

00:42:11.300 --> 00:42:14.020
This is just a dictionary
of the attributes you get

00:42:14.100 --> 00:42:15.760
from the embed tag in HTML.

00:42:15.760 --> 00:42:22.100
And so I use those to initialize our Qt
movie view subclass plugin movie view.

00:42:22.100 --> 00:42:25.280
And also create the movie
and set that on the view.

00:42:25.280 --> 00:42:30.200
And so our subclass in this case,

00:42:31.810 --> 00:42:36.880
Also, so this is the plugin.

00:42:38.150 --> 00:42:43.400
So in this case, we return self,
the plugin movie view itself for

00:42:43.730 --> 00:42:46.340
the object for the WebScript object.

00:42:46.340 --> 00:42:48.890
So it's also very easy to
add JavaScript support.

00:42:48.920 --> 00:42:51.440
And you just need to
implement these two methods,

00:42:51.440 --> 00:42:55.200
isSelectorExcluded from WebScript and
WebScriptNameForSelector.

00:42:56.000 --> 00:42:58.810
And this is just mapping
the Cocoa selectors to the

00:42:58.810 --> 00:43:01.320
JavaScript function names themselves.

00:43:01.330 --> 00:43:06.380
And you can see I have like play, stop,
stepping, and go to end, and full screen.

00:43:06.380 --> 00:43:09.130
And most of these just
map to Qt movie view,

00:43:09.140 --> 00:43:13.240
so I can just call super for these,
except for full screen.

00:43:13.240 --> 00:43:17.260
But it's actually very easy
to do full screen in Cocoa.

00:43:17.260 --> 00:43:20.550
I mean, we can just create a window,
set the level to around

00:43:20.550 --> 00:43:23.270
screensaver level,
set the background color,

00:43:23.270 --> 00:43:25.650
and add our Qt movie view to the screen.

00:43:26.060 --> 00:43:29.790
And we can also do a little
bit of a window content view.

00:43:29.790 --> 00:43:31.600
So let's just run this.

00:43:32.410 --> 00:43:35.440
So, not the greatest UI,
but all of these buttons,

00:43:35.440 --> 00:43:38.300
these are all JavaScript on the plugin.

00:43:38.300 --> 00:43:40.550
They're coming for me.

00:43:42.200 --> 00:43:53.200
and we can step and I'm sure
you can think of much more

00:43:53.200 --> 00:43:54.260
interesting things to do.

00:43:54.260 --> 00:43:59.800
So these are just a couple of very simple
examples of what you can do using QtKit.

00:43:59.860 --> 00:44:05.740
I'm sure you guys can come up
with much more interesting things.

00:44:05.740 --> 00:44:06.180
Thanks.

00:44:13.810 --> 00:44:16.370
We're here.

00:44:16.750 --> 00:44:20.410
Well, you've seen a few of the things
we've done recently with the

00:44:20.800 --> 00:44:22.080
Cocoa classes and QuickTime.

00:44:22.080 --> 00:44:24.670
You've been to some of the
other QuickTime sessions,

00:44:24.710 --> 00:44:28.160
I hope, and if not,
a lot of new exciting technology is

00:44:28.160 --> 00:44:30.660
in this next version of QuickTime.

00:44:30.660 --> 00:44:34.830
And the Cocoa developers
that embrace the kit,

00:44:34.840 --> 00:44:38.600
the QuickTime kit,
will get a lot of these

00:44:38.600 --> 00:44:39.660
technologies for free.

00:44:39.660 --> 00:44:43.340
We're going to continue to
develop the classes going forward,

00:44:43.790 --> 00:44:46.440
and there's a lot of functionality
now that's in the kit today.

00:44:46.440 --> 00:44:49.660
So adopt them, put them in your app,
and we'll do the hard work

00:44:49.660 --> 00:44:51.440
and the heavy lifting for you.

00:44:51.440 --> 00:44:53.520
You have the rest of the
QuickTime team behind you.

00:44:53.520 --> 00:44:55.860
Okay, thanks for coming.

00:44:55.860 --> 00:44:56.760
That's our show.

00:44:56.760 --> 00:44:58.820
Oh, wait.

00:44:58.820 --> 00:45:00.640
One more thing.

00:45:00.640 --> 00:45:08.550
There is one man that is more responsible
for what we've accomplished here.

00:45:08.640 --> 00:45:12.620
The instigator, I guess.

00:45:12.620 --> 00:45:14.620
The man behind the throne.

00:45:14.620 --> 00:45:19.030
And also our number one QA person,
because from early days,

00:45:19.030 --> 00:45:24.620
he was encouraging the QuickTime team
and Apple to get behind the Cocoa effort

00:45:24.860 --> 00:45:30.620
and has adopted the kit from early on
and helped with the design and guideline.

00:45:30.630 --> 00:45:34.000
So we're very proud to have him here,
and you're in for a treat.

00:45:34.000 --> 00:45:34.510
It's Dr.

00:45:34.540 --> 00:45:36.020
Michael Johnson of Pixar.

00:45:36.070 --> 00:45:37.380
Let's bring him up.

00:45:47.720 --> 00:45:48.200
Thank you, Ian.

00:45:48.200 --> 00:45:49.900
That was way too nice.

00:45:49.900 --> 00:45:52.100
Now I owe him money again.

00:45:55.640 --> 00:46:00.720
Well, yeah, so just to start off,
I'm in a group called MPG.

00:46:00.720 --> 00:46:02.620
Every year I come,
I'm in a different group,

00:46:02.770 --> 00:46:04.890
so eventually they're
going to get rid of me,

00:46:04.890 --> 00:46:06.150
but they haven't yet.

00:46:06.250 --> 00:46:07.710
So people were asking me what MPG was.

00:46:07.710 --> 00:46:10.940
It's actually the Moving Pictures group,
but, you know, the various jokes are

00:46:10.940 --> 00:46:12.200
your mileage may vary.

00:46:12.200 --> 00:46:14.360
We move the pictures
so you don't have to.

00:46:15.220 --> 00:46:18.960
There's no experts here,
or the expert is silent.

00:46:18.960 --> 00:46:23.930
And other people at Pixar think
of us as the media pipeline group,

00:46:23.930 --> 00:46:28.610
and really we're the people who
are responsible for a chunk of,

00:46:28.610 --> 00:46:33.710
in the Studio Tools group, the apps,
technology, and workflow for kind of what

00:46:33.710 --> 00:46:35.940
I think of as film development.

00:46:35.940 --> 00:46:38.150
And that's really...

00:46:38.450 --> 00:46:41.400
We're a big kind of development at sort
of trying to come up with the movie,

00:46:41.400 --> 00:46:43.020
the story department,
the editorial department,

00:46:43.110 --> 00:46:44.360
the layout departments.

00:46:44.360 --> 00:46:51.080
And these are the groups that really deal
with the film as a large-scale entity.

00:46:51.080 --> 00:46:55.900
And a lot of the other groups at
Pixar and the production pipeline

00:46:56.260 --> 00:46:59.150
are dealing with a shot or a model.

00:46:59.150 --> 00:47:04.560
And so we actually deal
with sort of larger chunks.

00:47:04.560 --> 00:47:08.810
And so one app that some of you may have
seen that we wrote back about three years

00:47:08.810 --> 00:47:13.960
ago is this thing called Pitch Doctor,
which we use in the story department.

00:47:13.960 --> 00:47:16.850
And another one,
which some of you have also seen,

00:47:16.850 --> 00:47:20.920
is this thing we call Review Sketch,
which lets our directors actually

00:47:20.920 --> 00:47:25.510
draw on top of any of the footage that
they're seeing in the screening rooms.

00:47:25.560 --> 00:47:27.910
And for the last year or so,
we've been working on this

00:47:27.910 --> 00:47:30.100
thing we were calling the,
or still are calling,

00:47:30.100 --> 00:47:31.260
the Film Online Kit.

00:47:31.840 --> 00:47:36.940
And it's a... It really would
not have been possible without

00:47:36.940 --> 00:47:41.690
this effort by all these amazing
engineers in the QuickTime group.

00:47:41.800 --> 00:47:46.340
And it was something that I wanted
to do because a couple years ago,

00:47:46.340 --> 00:47:51.660
my view of QuickTime was QuickTime,
it's too big, it's hard, it's crufty,

00:47:51.780 --> 00:47:55.510
and it's fragile in the sense
that I had to know to call this

00:47:55.640 --> 00:48:00.570
and then that and then have this
thing initialized or whatever.

00:48:00.580 --> 00:48:05.910
And, you know,
QuickTime's APIs... They make me tired.

00:48:05.920 --> 00:48:09.310
And if you're a Cocoa programmer,
and actually that's... So let's

00:48:09.430 --> 00:48:10.800
take a little survey here.

00:48:10.800 --> 00:48:13.980
How many of you would consider yourself
Cocoa programmers who want to learn

00:48:13.980 --> 00:48:15.650
something about QuickTime today?

00:48:17.360 --> 00:48:18.300
Interesting.

00:48:18.300 --> 00:48:20.500
How many of you would
consider yourselves,

00:48:20.550 --> 00:48:22.450
you know,
kind of QuickTime people or sort of old

00:48:22.450 --> 00:48:26.510
school Carbon people and you're trying
to learn more about Cocoa this time?

00:48:27.320 --> 00:48:28.200
Okay.

00:48:28.300 --> 00:48:29.530
Yeah, it's about the mix I figured.

00:48:29.530 --> 00:48:33.470
So, but see, that's the thing.

00:48:33.480 --> 00:48:36.840
It's like for those of you, you know,
the second group there, I really, really,

00:48:36.860 --> 00:48:39.100
really,
really want what QuickTime can do for me.

00:48:39.210 --> 00:48:43.690
Like, you know,
I don't want to do this stuff myself.

00:48:43.690 --> 00:48:47.580
And, you know, because my group at Pixar,
you know, we're a pretty small group,

00:48:47.670 --> 00:48:50.420
relatively speaking,
and we're all about leverage.

00:48:50.420 --> 00:48:54.020
And QuickTime is all about leverage.

00:48:54.020 --> 00:48:57.090
And so, I had an idea.

00:48:57.200 --> 00:48:58.550
*sigh*

00:48:59.200 --> 00:55:08.000
[Transcript missing]

00:55:08.750 --> 00:55:10.320
Some other things to think about,
and I'm going to give you

00:55:10.320 --> 00:55:12.410
a bunch of demos here,
but I want to kind of put a bunch

00:55:12.410 --> 00:55:14.890
of ideas in your head when you
get your hands on this stuff.

00:55:15.190 --> 00:55:19.580
One of the cool ones is we worked with
the Final Cut folks to come up with,

00:55:19.580 --> 00:55:22.460
I mean, they did all the heavy lifting.

00:55:22.460 --> 00:55:26.340
We gave them one good
idea on this XMAML format.

00:55:26.340 --> 00:55:27.500
I've got the URL here.

00:55:27.590 --> 00:55:31.980
I went and checked that last night to
make sure that was the live link there.

00:55:33.180 --> 00:55:34.770
And it's a great file format.

00:55:34.770 --> 00:55:37.840
And what's cool about this is,
especially if you're like me

00:55:37.840 --> 00:55:40.710
and you're building things
on top of the QuickTime kit,

00:55:40.710 --> 00:55:43.660
and QuickTime is a great file format,
don't get me wrong,

00:55:43.720 --> 00:55:47.020
but there's a lot of times you're
going to want stuff to basically

00:55:47.020 --> 00:55:50.220
be editable somewhere else,
especially if you're like me and

00:55:50.220 --> 00:55:53.630
you own a teeny part of a very large
production pipeline and you need

00:55:53.680 --> 00:55:55.990
to have things flow around there.

00:55:56.000 --> 00:55:58.170
This XMAML format is
really great for that.

00:55:58.320 --> 00:56:01.250
And in our kit, we actually support,
we can read and write it.

00:56:01.340 --> 00:56:03.160
And so that means you can sort
of put these things together.

00:56:03.190 --> 00:56:05.070
And then you can save them
out and just double click,

00:56:05.070 --> 00:56:06.840
open them up in Final Cut,
and it just works.

00:56:06.840 --> 00:56:10.380
Another thing that I've been sort
of thinking about as I've been here,

00:56:10.380 --> 00:56:13.380
I mean, the command line apps is
a big thing also for us.

00:56:13.380 --> 00:56:17.070
And what's cool about the kit is,
so again, I've been trying to learn

00:56:17.070 --> 00:56:18.570
QuickTime for years,
okay,

00:56:18.750 --> 00:56:22.550
failing miserably for the most part,
until this stuff came along.

00:56:22.660 --> 00:56:25.130
And one of the things that sort
of always comes up is people

00:56:25.210 --> 00:56:27.360
wanting to make reference movies,
right?

00:56:27.360 --> 00:56:30.620
You've got like these five movies
and you'd like to make a movie.

00:56:30.620 --> 00:56:32.750
Here's my movies with movies theme again.

00:56:33.080 --> 00:56:35.480
But, you know,
and I guess there's this guy,

00:56:35.600 --> 00:56:38.220
Peter Hottie, and he wrote this thing
a million years ago.

00:56:38.220 --> 00:56:39.810
And people all go and get this.

00:56:39.850 --> 00:56:40.550
And, oh, it's over here.

00:56:40.570 --> 00:56:41.390
Oh, it runs in Classic.

00:56:41.400 --> 00:56:44.270
And, you know, there's some little thing
for doing this stuff.

00:56:44.360 --> 00:56:45.900
And I'm sure all the
QuickTime gurus are going,

00:56:45.900 --> 00:56:47.360
well, no, Michael, you just do this.

00:56:47.360 --> 00:56:49.170
But as far as I could ever tell,
you know,

00:56:49.240 --> 00:56:50.770
it was just sort of black magic.

00:56:50.780 --> 00:56:53.860
And you can write this in like
three lines now with the kit.

00:56:53.900 --> 00:56:55.530
That's just so killer.

00:56:55.540 --> 00:56:58.400
You know,
you can basically open up a movie, do,

00:56:58.400 --> 00:57:02.940
you know, insert movie of movie into that
movie as you iterate over your movie.

00:57:02.940 --> 00:57:04.530
And then save the thing out again.

00:57:04.600 --> 00:57:06.600
And now, you know,
you can even transcode it to

00:57:06.600 --> 00:57:08.050
a different codec if you want.

00:57:08.540 --> 00:57:09.160
Amazing.

00:57:09.160 --> 00:57:12.310
And then also I was just thinking
when I went to that Automator talk

00:57:12.310 --> 00:57:15.510
the other day about the fact that,
you know, if you think about these things

00:57:15.510 --> 00:57:17.330
as little command line apps,
you can imagine doing all sorts of

00:57:17.330 --> 00:57:18.720
really neat things with QuickTime movies.

00:57:18.720 --> 00:57:21.480
So anyway,
the other thing that you may want to do

00:57:21.600 --> 00:57:25.780
is you may want to put whatever stuff
you do on the kit on an IB palette.

00:57:25.780 --> 00:57:27.650
And that's what we did.

00:57:27.830 --> 00:57:31.790
So we have this idea of what
we call a sequence provider.

00:57:32.900 --> 00:57:36.950
And a sequence provider is basically
a model object that is holding on to,

00:57:36.950 --> 00:57:40.060
it's basically fronting
for one of these sequences.

00:57:40.060 --> 00:57:44.340
It's basically providing that thing for
you through a model controller layer.

00:57:44.340 --> 00:57:49.980
And we have a set of formal protocols
that these sequence providers conform to.

00:57:49.980 --> 00:57:54.860
So there is the notion of
an FOL sequence providing.

00:57:54.860 --> 00:57:57.760
There's an FOL mutable
sequence providing.

00:57:57.760 --> 00:58:01.120
An FOL mutable movie sequence providing.

00:58:01.120 --> 00:58:02.720
We're way too.

00:58:02.720 --> 00:58:02.770
We're way too.

00:58:02.800 --> 00:58:04.040
We're way too protocol-y.

00:58:04.040 --> 00:58:06.330
And so we've actually
implemented this for two things.

00:58:06.400 --> 00:58:08.810
One of them is actually
a very lightweight thing.

00:58:08.820 --> 00:58:11.420
You know, think of like iTunes,
except think of it for movies.

00:58:11.420 --> 00:58:14.790
And so you'd like to basically
have huge lists of movies,

00:58:14.790 --> 00:58:16.410
big cut lists of movies.

00:58:16.420 --> 00:58:18.160
But you really don't need to play them.

00:58:18.280 --> 00:58:19.940
You know, you're really just kind
of organizing them.

00:58:19.940 --> 00:58:22.420
It would be like bringing up iTunes
where you're getting ready for a

00:58:22.420 --> 00:58:23.860
party and you know all this music.

00:58:23.860 --> 00:58:25.050
You don't need to actually play it.

00:58:25.090 --> 00:58:27.860
You just kind of want to rearrange
it and put it in a particular order.

00:58:27.860 --> 00:58:31.300
The next one is an
actual hardcore editable,

00:58:31.300 --> 00:58:32.360
playable.

00:58:32.880 --> 00:58:33.560
Movie sequence.

00:58:33.560 --> 00:58:36.680
Something where you can hit space bar
and it's just going to play for you.

00:58:36.680 --> 00:58:42.140
And so we implemented these two things
as sort of objects on the palette there.

00:58:42.140 --> 00:58:47.460
So with that, let me go to bring up IB.

00:58:52.300 --> 00:58:55.740
Everybody has to arrange their
little IB world differently.

00:58:55.870 --> 00:58:59.400
Myself included.

00:58:59.610 --> 00:59:01.500
Hey, yeah, see?

00:59:01.500 --> 00:59:02.110
You're on right, aren't I?

00:59:02.130 --> 00:59:07.800
So,
let's just start off with a simple thing.

00:59:07.980 --> 00:59:09.900
Oh, document opening error occurred.

00:59:09.900 --> 00:59:10.700
Oh, that's good.

00:59:10.960 --> 00:59:12.660
We should have rebooted this machine.

00:59:12.660 --> 00:59:15.810
All right, we'll make a new one.

00:59:18.600 --> 00:59:22.130
See, I tried all my stuff on Panther and
then they put me on a tiger machine.

00:59:22.140 --> 00:59:26.980
So the basic idea here is,
here's our little palette here.

00:59:26.980 --> 00:59:28.160
We have a whole bunch
of different objects,

00:59:28.160 --> 00:59:29.970
a bunch of which you're not
going to get to see today.

00:59:30.500 --> 00:59:32.700
Sorry.

00:59:32.700 --> 00:59:37.030
So the first thing you want to do is you
want to actually drag out this little

00:59:37.210 --> 00:59:39.530
object that has a bunch of movies in it.

00:59:39.950 --> 00:59:45.670
And because we are very firm
believers in the sort of iterate

00:59:45.670 --> 00:59:50.900
really quick kind of thing,
we actually have,

00:59:50.900 --> 00:59:53.260
I can go and I can add and
delete movies to this thing here,

00:59:53.260 --> 00:59:54.180
which I will later on this.

00:59:54.180 --> 00:59:57.080
But it comes up and it starts up
having just a bunch of movies,

00:59:57.080 --> 01:00:00.570
a bunch of little test movies sort
of built in there to provide out.

01:00:00.580 --> 01:00:03.730
So the first thing you want to
do is pretty much what everybody

01:00:04.070 --> 01:00:06.640
else has been doing here,
which is you drag out

01:00:06.640 --> 01:00:08.140
a little movie view.

01:00:08.780 --> 01:00:12.270
And in my case, I actually wire it up
to a sequence provider.

01:00:12.280 --> 01:00:17.180
So now if I go into test interface mode,
I actually go and build up a little

01:00:17.250 --> 01:00:19.760
sequence of those movies there.

01:00:19.760 --> 01:00:23.380
And so I just have this simple
little movie that's there.

01:00:23.380 --> 01:00:25.720
Now, that's not super interesting.

01:00:25.720 --> 01:00:27.280
It's sort of what the
other guys were doing.

01:00:27.280 --> 01:00:31.690
And I'm supposed to be the sexy demo,
so I have to do something

01:00:31.690 --> 01:00:33.280
better than that.

01:00:33.380 --> 01:00:38.040
So one of the things that is really,
really neat about this.

01:00:38.120 --> 01:00:43.170
And the thing that they got really
right is the fact that this is very,

01:00:43.170 --> 01:00:46.830
and again,
happy that most of you raise your hands

01:00:46.830 --> 01:00:49.650
on the Cocoa side of the fence there.

01:00:49.860 --> 01:00:54.720
Is that this is, you know,
the QuickTime kit makes it very,

01:00:54.720 --> 01:00:58.480
very easy to make very
MVC kinds of things.

01:00:58.480 --> 01:01:01.100
And so, you know,
here we have a little table,

01:01:01.100 --> 01:01:03.160
which is representing the movie.

01:01:03.160 --> 01:01:05.060
And as we're playing this thing here,
you know,

01:01:05.100 --> 01:01:06.930
it's sort of showing up that stuff there.

01:01:06.940 --> 01:01:07.680
And we can do all this.

01:01:07.680 --> 01:01:07.740
And we can do all this.

01:01:07.740 --> 01:01:09.280
I can do all the sorts of
things you would expect.

01:01:09.360 --> 01:01:10.860
I can drag and drop these things around.

01:01:10.860 --> 01:01:12.560
Now, what's going on here?

01:01:12.560 --> 01:01:14.340
I'm editing a movie.

01:01:14.340 --> 01:01:15.360
Okay?

01:01:15.360 --> 01:01:17.210
I'm editing a movie of movies here.

01:01:17.220 --> 01:01:19.740
And it starts to get really
interesting of where it's

01:01:19.740 --> 01:01:21.630
actually just updating this stuff.

01:01:21.670 --> 01:01:22.760
So we'll put some more.

01:01:25.900 --> 01:01:32.740
and David I don't know why
those guys don't want to open.

01:01:32.740 --> 01:01:32.740
That's weird.

01:01:32.740 --> 01:01:32.740
Anyway,

01:01:33.000 --> 01:01:37.900
will go and instead of
having just a table view,

01:01:37.900 --> 01:01:41.730
we can use an outline view.

01:01:42.390 --> 01:01:48.730
And so you can notice now that when
we get with some of these things,

01:01:48.730 --> 01:01:52.900
there were little disclosure
triangles on them.

01:01:52.900 --> 01:01:56.500
And that's because these themselves
are movies of movies of movies.

01:01:56.570 --> 01:01:59.430
So in our little test
thing that we've got there,

01:01:59.430 --> 01:02:02.160
we actually have it set up so
that it's not only just sort

01:02:02.160 --> 01:02:03.680
of one level of hierarchy,
but it's two.

01:02:03.700 --> 01:02:06.990
And all the sort of stuff that you
would expect to have work works,

01:02:06.990 --> 01:02:10.420
you know, you can sort of drag between
them and stuff like that.

01:02:10.570 --> 01:02:13.320
And we're doing, you know,
we're doing some heavy lifting there,

01:02:13.320 --> 01:02:18.240
but the fundamental QuickTime activity
that's going on there is that

01:02:18.400 --> 01:02:20.800
little function that I put up there,
which is basically all I'm doing

01:02:20.800 --> 01:02:22.060
is I'm inserting an element.

01:02:22.060 --> 01:02:24.900
I've got sort of a companion one of that,
which is basically delete

01:02:24.900 --> 01:02:26.080
element from segment.

01:02:26.080 --> 01:02:28.750
And these guys really did it right.

01:02:28.750 --> 01:02:31.890
It really sort of works the way
you would expect it to work.

01:02:31.900 --> 01:02:36.200
And again, we've got with the kit
that we've been working on,

01:02:36.200 --> 01:02:39.810
we have a whole sort of
raft of these UI elements.

01:02:39.980 --> 01:02:45.780
So let's just go and let's see if we go
and we say let's put that in a tab view.

01:02:48.240 --> 01:02:50.710
What did I put in a tab view?

01:02:50.990 --> 01:02:52.700
Something's been put in a tab view.

01:02:52.850 --> 01:02:56.830
So let's put this guy in a tab view there
and then we can actually go and we have

01:02:56.850 --> 01:03:00.540
another view which is a tableau view.

01:03:00.580 --> 01:03:08.630
And so if we wire that guy up to, sorry,
I'm dragging the scroll view.

01:03:08.900 --> 01:03:12.920
And this guy will go and let's
actually also drag out a little slider.

01:03:13.080 --> 01:03:17.700
So we'll do this sort
of iPhoto kind of thing.

01:03:19.780 --> 01:03:26.480
So we can see our movie that
we have here as both looking

01:03:26.900 --> 01:03:29.570
at it that way or this way.

01:03:29.580 --> 01:03:31.500
And again,
sort of all the same kinds of things.

01:03:31.500 --> 01:03:37.490
We can go and move these things
around and we can go and...

01:03:38.110 --> 01:03:40.260
I should have made it continuous.

01:03:40.300 --> 01:03:43.420
That's why you want to use IB.

01:03:43.420 --> 01:03:47.180
So now when you go in there
you can try that sort of stuff.

01:03:47.850 --> 01:03:50.130
I really want to sort of
take this moment here,

01:03:50.130 --> 01:03:56.130
since you're Cocoa folks here,
to evangelize a few things.

01:03:57.030 --> 01:03:59.390
I came from the old Next Step world.

01:03:59.400 --> 01:04:00.980
That's sort of how I got to Cocoa.

01:04:01.000 --> 01:04:06.940
And one thing that used to happen a
lot more in the Next Step world than it

01:04:06.980 --> 01:04:12.280
seems to be happening in the Cocoa world
is people would put things on palettes.

01:04:13.160 --> 01:04:16.190
And it makes me sad that
I don't see more IB palettes.

01:04:16.260 --> 01:04:20.190
And I pushed really hard on the
QuickTime kit guys to get sort of

01:04:20.230 --> 01:04:22.500
all their ducks in a row on there.

01:04:22.500 --> 01:04:25.190
So in terms of, you know,
all the encoding methods and

01:04:25.300 --> 01:04:28.110
things like that are in there
so that you can actually go and

01:04:28.290 --> 01:04:30.590
put all this stuff in there,
put it in a nib.

01:04:30.600 --> 01:04:35.850
And there's a certain rigor that happens
when you actually go to the trouble

01:04:35.850 --> 01:04:38.560
of putting things on an IB palette.

01:04:38.560 --> 01:04:40.830
And there's a certain cost up
front in terms of actually making

01:04:40.830 --> 01:04:43.140
it so that all your objects know
how to sort of work with it.

01:04:43.160 --> 01:04:47.660
And that they're using key coding,
you know, correctly.

01:04:47.660 --> 01:04:51.110
And there's some work
you have to do there.

01:04:51.110 --> 01:04:55.140
But it's really worth it
because there's nothing like,

01:04:55.140 --> 01:05:00.810
you know, taking down another app to know
when you've got bugs in your code.

01:05:00.820 --> 01:05:03.800
And the cool thing about IB is, you know,
I'm, you know,

01:05:03.850 --> 01:05:05.950
in and out of test interface mode there.

01:05:05.960 --> 01:05:09.010
If I'm not releasing everything
correctly or I'm doing some

01:05:09.120 --> 01:05:13.100
bad trouncing on things there,
I'm going to pay for it really quickly.

01:05:13.160 --> 01:05:16.900
And I much prefer to sort of take
the pain of that kind of stuff

01:05:16.900 --> 01:05:19.080
not quite completely up front.

01:05:19.260 --> 01:05:20.980
But, you know,
people don't sort of go and

01:05:20.980 --> 01:05:22.940
finish things out well enough,
I think.

01:05:23.000 --> 01:05:24.480
And it kind of makes me sad.

01:05:24.540 --> 01:05:29.040
So I'm hoping people will see, you know,
this thing as a kind of a non-trivial

01:05:29.050 --> 01:05:32.740
example that was basically done by,
there's like, you know,

01:05:32.750 --> 01:05:36.590
four people that contributed
to the code on this thing here.

01:05:36.630 --> 01:05:39.340
So it's not a huge, it wasn't a huge,
huge effort.

01:05:39.340 --> 01:05:42.850
But it is something that you want.

01:05:42.870 --> 01:05:45.980
Now, take out, again,
sort of there's the obvious

01:05:46.370 --> 01:05:49.550
thing then that if you're going
to really start trying to do

01:05:49.560 --> 01:05:53.970
production apps with this stuff,
the one thing that I think, you know,

01:05:53.970 --> 01:05:56.590
we all know that we need is a timeline.

01:05:56.600 --> 01:06:01.590
And so we have a little timeline
view that we can drag out here.

01:06:01.600 --> 01:06:06.510
And eventually...

01:06:08.500 --> 01:06:09.840
Start up there.

01:06:09.840 --> 01:06:11.300
So here we have a little timeline.

01:06:11.320 --> 01:06:12.820
And same sort of stuff happens.

01:06:12.820 --> 01:06:13.880
You know, you've got selection.

01:06:13.880 --> 01:06:15.620
You can see it happening
between them there.

01:06:15.620 --> 01:06:17.340
We've got interactive.

01:06:17.340 --> 01:06:19.810
We can sort of change the in
and out points on there and

01:06:19.810 --> 01:06:21.340
then indicate those things.

01:06:21.340 --> 01:06:25.510
And here's sort of a neat thing.

01:06:25.520 --> 01:06:28.680
So remember, this is a movie of
movies inside our movie,

01:06:28.680 --> 01:06:29.260
right?

01:06:29.260 --> 01:06:33.490
So and remember that
that little movie had,

01:06:33.500 --> 01:06:38.230
if we look, it had,
it was made up of three and four.

01:06:38.720 --> 01:06:41.320
But it's a movie and it
has in and out points.

01:06:41.320 --> 01:06:45.000
So theoretically,
we could actually change the in points

01:06:45.000 --> 01:06:49.810
of that thing and move it in far enough
that it's sort of representative first

01:06:49.810 --> 01:06:52.270
frame is no longer three but four.

01:06:52.270 --> 01:06:56.500
And so that's sort of just
proving that I sort of have no,

01:06:56.500 --> 01:06:58.940
you know, I'm not lying here.

01:06:59.340 --> 01:07:04.760
Another thing that you could do
on this kind of stuff is you can

01:07:05.150 --> 01:07:07.890
use sort of non-trivial movies.

01:07:07.900 --> 01:07:08.480
So let's actually get into that.

01:07:08.480 --> 01:07:12.340
I'm going to get rid of my trivial movies
and show you some non-trivial ones.

01:07:21.290 --> 01:07:24.270
So now unfortunately,
when I grabbed these movies,

01:07:24.380 --> 01:07:26.790
I grabbed them off the disc farm
and we made them from there.

01:07:26.840 --> 01:07:31.800
And so these movies have no sound,
but they are real movies nonetheless.

01:07:31.800 --> 01:07:36.660
And so this is some stuff from
a little movie we're working on

01:07:36.670 --> 01:07:39.850
this year called The Incredibles.

01:07:39.850 --> 01:07:43.700
And so this was from the trailer.

01:07:43.700 --> 01:07:54.410
And so this is pretty interesting
because these are the real... Are we...

01:07:57.100 --> 01:08:00.300
We're in a bad place right now.

01:08:00.300 --> 01:08:02.730
Let me just check this again, sorry.

01:08:04.770 --> 01:08:09.670
I'll be for a second here and do
this again because things say they're

01:08:09.730 --> 01:08:10.820
being freed in the middle there.

01:08:10.820 --> 01:08:13.210
You probably want to start again.

01:08:15.520 --> 01:08:19.750
Okay,
so if we drag out a little movie view

01:08:20.150 --> 01:08:27.780
here and we drag out a timeline and
then we pull out a sequence provider.

01:08:28.320 --> 01:08:32.200
And then we'll go and we'll
edit that sequence provider.

01:08:32.200 --> 01:08:40.100
And then we'll go add
those movies in again.

01:08:48.220 --> 01:08:53.740
And so the, you know,
what I'm hoping that you're getting

01:08:53.740 --> 01:09:00.700
from this is the fact that you can
use this kit to do real things.

01:09:00.700 --> 01:09:04.050
You know, these guys have done, you know,
there's still, I think,

01:09:04.050 --> 01:09:08.900
I think there's still lots of,
there's lots of QuickTime left that's

01:09:08.900 --> 01:09:13.010
not really exposed in the kit right now.

01:09:13.660 --> 01:09:18.530
But I think there is an enormous amount
of work that these folks have done.

01:09:18.540 --> 01:09:20.320
So here's our little sequence here.

01:09:20.320 --> 01:09:22.990
And what's fun with this is that,
you know,

01:09:22.990 --> 01:09:27.480
you can even actually edit this thing,
you know, while it's playing.

01:09:27.500 --> 01:09:29.140
This is what I mean by it's magic.

01:09:29.140 --> 01:09:30.860
I didn't do anything to get that.

01:09:30.960 --> 01:09:31.340
You know what I mean?

01:09:31.340 --> 01:09:34.570
Like, I'm just, like,
editing the movies of movies there,

01:09:34.570 --> 01:09:37.650
and these QuickTime folks are
just making that all work.

01:09:37.760 --> 01:09:42.540
And I don't really know, you know,
sort of what they're doing.

01:09:43.670 --> 01:09:45.230
And I don't have to know.

01:09:45.280 --> 01:09:47.250
That's the point of
doing stuff with Cocoa,

01:09:47.330 --> 01:09:47.700
right?

01:09:47.840 --> 01:09:48.630
Leverage.

01:09:48.660 --> 01:09:51.200
It's all about leverage
and trying to get,

01:09:51.260 --> 01:09:56.210
and trying to,
and to leverage what these folks are

01:09:56.210 --> 01:10:00.660
doing so you can get back and do sort
of the real work that you want to do.

01:10:00.780 --> 01:10:06.080
Is that the time for talk or do we
need to leave time for questions?

01:10:07.020 --> 01:10:12.310
for talk.

01:10:12.310 --> 01:10:13.100
Okay, good.

01:10:13.100 --> 01:10:13.100
Okay, I'll wrap this up here.

01:10:13.980 --> 01:10:15.580
So that's, oh,
it's kind of dark up there.

01:10:15.580 --> 01:10:16.010
That's too bad.

01:10:16.210 --> 01:10:20.390
This is actually a full film
res pixelate playing back there.

01:10:20.400 --> 01:10:24.080
And we can also,
there's other things in the kit

01:10:24.200 --> 01:10:26.640
that I sort of haven't talked about,
but I can do things,

01:10:26.640 --> 01:10:29.320
like we have this notion of
markers that you can drop down

01:10:29.320 --> 01:10:33.740
and you can drop markers on
things and snap them to things.

01:10:33.740 --> 01:10:36.770
Or we can put a,
I can put like a marker here and

01:10:36.870 --> 01:10:39.250
then I can extend that thing out.

01:10:39.520 --> 01:10:42.880
And then I can do things like
drawing on top of it there.

01:10:43.340 --> 01:10:46.400
And then I can actually go and just play.

01:10:46.400 --> 01:10:50.850
And like the drawing there is
actually using a child window.

01:10:50.890 --> 01:10:54.820
So there's actually, this is again,
sort of the magic of Cocoa, right?

01:10:54.820 --> 01:10:56.500
Is that I've got the child
window stuff over here.

01:10:56.500 --> 01:11:00.570
So I did that drawing in a separate
window that's coming in there.

01:11:00.580 --> 01:11:03.240
The Qt movie view has no
knowledge of that stuff at all.

01:11:03.280 --> 01:11:04.860
The GPU is doing the compositing there.

01:11:04.880 --> 01:11:08.560
So I didn't have to like, you know,
draw some sketch track inside of

01:11:08.680 --> 01:11:10.900
QuickTime and then hope that QuickTime,
you know,

01:11:10.900 --> 01:11:14.170
it was a fast path in QuickTime to
sort of composite that stuff together.

01:11:14.300 --> 01:11:16.520
You know, I can sort of have that
little drawing up there.

01:11:16.540 --> 01:11:19.930
And this is the kind of stuff that
we do all the time and have it not

01:11:19.930 --> 01:11:21.670
cost me anything from QuickTime.

01:11:21.680 --> 01:11:25.950
And what's so great about this from,
again, from a Cocoa person's perspective

01:11:26.410 --> 01:11:31.630
is that QuickTime's finally sort of,
you know, arrived in, you know,

01:11:31.710 --> 01:11:32.360
to my party.

01:11:32.520 --> 01:11:34.760
Where, you know,
they were having a great party

01:11:34.770 --> 01:11:36.220
over there by themselves.

01:11:36.220 --> 01:11:38.640
But now like I get to use them
and I get to make them plug

01:11:38.730 --> 01:11:40.650
and play with all the things,
you know,

01:11:40.650 --> 01:11:44.790
interface builder and child Windows stuff
and just being able to build a

01:11:44.910 --> 01:11:49.220
framework and to be able to sort
of move things around really easily.

01:11:49.330 --> 01:11:51.430
And that's just enormous
and sort of what,

01:11:51.440 --> 01:11:53.800
you know,
these folks have actually accomplished,

01:11:53.920 --> 01:11:57.290
you know, sitting on the shoulders of the
giants of all the QuickTime efforts

01:11:57.300 --> 01:11:58.420
for the last ten years.

01:11:58.520 --> 01:12:02.780
You know, I just, you know,
I'm the klempt.

01:12:02.890 --> 01:12:04.640
It's just really huge.

01:12:04.720 --> 01:12:08.510
And so that's all I've got.

01:12:08.650 --> 01:12:10.250
Thanks.