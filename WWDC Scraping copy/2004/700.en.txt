---
Title:  QuickTime and Digital Media State of the Union
Year:   2004
Web:    https://nonstrict.eu/wwdcindex/wwdc2004/700/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Ladies and gentlemen, please welcome Senior Director of Product Marketing, Interactive Media Group, Frank Casanova. Good morning guys, thanks for coming to our session. This year, you know typically Tim Schaaf, my engineering counterpart and I kind of join, we do a session together. But there's so much new stuff this year. There's so much that Tim needed to talk about, about the architecture of what was going on in our space.

Because it's grown considerably bigger than QuickTime. And there's so much new stuff that we've been doing on our side around 3G and a bunch of other technologies that we separated into two sessions. And Tim's was yesterday and mine is now. We wanted to go through today a whole bunch of different things that we're doing in a space around content creation, content development. You know, what's important to us and what's coming. And so I'll have a whole bunch of folks join me on stage, other presenters and demoers to kind of get this message across.

This is the second time that we've come to the Developers Conference kind of as a QuickTime community. As you guys may remember, for about three years or so, we had a QuickTime live conference that we held down in LA, which was pretty much all things QuickTime. And last year, we moved the conference kind of up into this Developers Conference because this Developers Conference has taken on a whole new kind of profile. It's not just about API development anymore. It used to be back in the day a pretty engineering-centric conference, but it's grown. It's evolved.

It's changed a lot, and we saw an opportunity to leverage the incredible infrastructure of WWDC to include our conference, and we benefited in a lot of ways. There's 41 different sessions, a bunch of different labs, a very diverse audience. Everybody in this audience comes across from a wide variety of backgrounds.

And one thing we definitely heard from last year that people wanted to see improve or change was improve the community. You know, the QuickTime live community was a very vibrant and very definite community. And so, We've done a lot of changes when I think the room build outs are finished. We have, instead of smaller rooms where people are packed in and standing room only, we've increased the size of the rooms.

There's a couple of them that are pretty large. And our Quicktime lounge is no longer a back alleyway with a bumpy couch and a fake plant that used to be back there. We actually have a lounge, so if you're part of this community you can go over and hang out and meet other people that are in this space. There's beverages and various things. So we've changed a lot of things to make this conference better. And we really look forward to the feedback session later this week for you guys to give us more feedback on what you want to see next year.

So what's changed in QuickTime? In its simplest form, our logo changed. We got a new logo. I think this is what maybe our, Rhonda, our fifth one? Yeah, fifth one. A good question for Stump the Experts later tonight. How many logos have the QuickTime guys had? Well, we were surprised with the rest of the company when all of a sudden this new one showed up. And as we stared at it for a long time, trying to figure out what was different.

Certainly, the light source. They changed the angle of attack for the light that defines our logo. What else? The thingy in the middle got wider. I'm not sure what that thing really is, but it got wider. And then, of course, they removed the hole out of the center of our logo.

And so, and I think it's a little bit more jelly, too. I think they jellified it a little bit more. You know, but it's pretty cool. I mean, it looks modern, I guess. As long as we stay in the dock, that's all that matters, right? The never-ending battle of who's in the dock.

So what we really want to talk about is covering a lot of ground in this presentation about what we've done at Apple, what our partners have done, what technologies we've been working on to kind of improve this sense. And then, of course, we want to talk about what we've done at Apple, what our partners have done to kind of improve this sense of, you know, what we've done to make a media platform, standards-based media platform.

This slide is expanding on a regular basis. This set of technologies and the way our OS is architected is being updated seemingly every release. And certainly the two guys in the middle, Core Image and Core Video, which we'll spend some time talking about, have added a lot. And to help me talk about what's going on and to help explain, I'd like to introduce Aimee Nugent. Aimee's on my team, recently promoted to product line manager. She is responsible for all the various core technologies within the OS from a product marketing standpoint. I'd like to introduce Aimee and have her step through this and do some cool demos for you guys. Great. Aimee?

Welcome, good morning. Thanks for coming out, everybody. What I'd like to do is just explain a little bit of what is built into our OS and try to explain why you as content professionals really care and why you benefit from this. One of our key proof points has been Core Audio is built into Mac OS X. When we transitioned from Mac OS to OS X, we had a great and rare opportunity to build something from scratch for modern hardware.

And from that, we were able to make Core Audio. And we really have ended up with an industry-leading platform for audio. In fact, over 80% of professional audio market is on the Mac. And why? Well, we've built an ultra-low latency platform, one of the lowest figures on any OS. We have support for 24-bit 192 audio and beyond.

In fact, when 192 has started to emerge as an industry standard, we didn't need to make any changes in Core Audio. It just automatically scaled. We also don't have any software restrictions as far as the number of channels that you can work with for playback or capture. And it'll scale just with your hardware. And with the G5, we're seeing some massive scalability.

We also have plug-and-play for audio devices. So your FireWire and USB, connect them up, they just work. And we've really built a robust developer community around audio units. We have the plugins into Core Audio that allow you to do effects with DSP and virtual instruments. We have dozens and dozens of developers who are both hosting and creating.

[Transcript missing]

- Ready to have some fun? I am. Rock and roll guitar at nine o'clock in the morning. 
- Let's do it. 
- Frank, you owe me. We get some audio here? Are we happening, guys?

Are we live in the house? Yeah. Is that coming through the mains? Yeah. Okay. So, we're live in the house. Yeah. Okay. Anyway, I'll talk about it while they work on the problem. As a musician and a person who spends an awful lot of time creating music and working on audio for a lot of different professional people, I'm always looking for applications that really, really help really helped me, in terms of sound, in terms of my ability to get through to other systems.

And one of the things that I found using devices and applications that are designed for core audio is the sound quality has just been dramatically improved. As Amy said, about 80% of the professional audience out there uses the Mac as their platform. Well, you know, the entire market is really quite huge.

We found through some research There's about 54% of US households have somebody playing a musical instrument. And what's remarkable about that is that about 32 million of them are guitar players. And so, and that's US figures only. It's about 72 million worldwide. So this is like a great big market for the developers to create and really spend some time going after these applications. We have sound, we have...

[Transcript missing]

Excuse us one second. One, two, three, two.

[Transcript missing]

One of the engineers is sitting right there. You owe me this. Yeah. Okay, switch that back. - Okay. Well, don't know what the problem is. Well, sorry about that. Hopefully you guys got to see Guitar Rig in the Steve keynote. If you didn't, the webcast is online that you can check it out at apple.com/quicktime.

What fun! All right, so if you could take a look at Guitar Rig, this whole section through here, this is just like a virtual rack of instruments, of amplifiers, and what can come with this thing is really pretty amazing. In terms of amplification, we have like a Mesa Boogie, a Fender Twin, a Marshall Plexi, a Vox AC30. In terms of distortion pedals, we have some of the classics. The Tube Screamer, I love that name. Distortion, treble booster.

Under the mod section for modulation, there's tremolo and phasers, blah, blah, blah. Under the filter section, there's wah-wahs, there's talk-wahs, all kinds of EQ, volume pedals, and even things that are a little silly like this psychedelic delay here. And all you have to do to make use of these is just click them and drag them where you want them. And then they... Turn on. And we're still having problems here, guys.

Okay, so one of the cool things this application does, it has its own little tape delay. So, you know, sometimes I'll get files from friends of mine. Let's say Frank Casa Nova sent me this one. One, two, three, two, two, three. Okay, this is just playing. This is just an MPEG-4 file. It's a QuickTime file. And I can choose a sound to work with.

[Transcript missing]

I kind of like that, but I need it a little bit more modern. You mind if I goof with this a little bit? Okay. So I'm going to launch GarageBand. and in GarageBand, I've taken the concept of that tune, and I'm going to launch Native Instruments' guitar rig as an audio unit. And all I have to do is click.

[Transcript missing]

and if you're interested in finding out more about audio at Apple in the OS as well as in our products, there is a hands-on lab tomorrow from 12:00 to 6:00. Some of our audio engineers will be there, and they can help you even from a content creation standpoint. So I suggest you check that out on the second floor tomorrow.

So Frank introduced at the beginning the idea of we have some new members of our media architecture in Mac OS X. You might have seen mention of them in some of the other sessions prior to now. And what I'd like to explain is why do you care? Why is this important for content professionals?

[Transcript missing]

From a matching perspective, we're taking a look at Core Video. Core Video is really providing a new, modern architecture to video. It really enables the pipeline between QuickTime and OpenGL. What does that mean? It's really a hardware-accelerated pipeline that we can use for some amazing effects using GL, or you can pipe it right through to Core Image for real-time effects.

So why do you care about this? What does it mean for you? So let me show you one of my demos here and kind of walk you through it. I mean, all these things are built right into the OS. And what I have here is a little demo app called Funhouse that we just have for internal testing. And it really helps us test what the filters are in the OS. And we have a huge list of things built into the system.

And they're all, what's great about Core Image is that we can take these chains of effects and stack them together in a non-destructive way. So your original content is untouched. It's there to do whatever it is you want to do with it later, as long as you remember these effects. And they're all responding in real time. And again, this is all built in the OS. And it works with video as well.

All in real time, all leverage on the GPU. And you can, the performance of this is just amazing. What we're working on top of is a 720p 264 clip, and I can in real time distort this. We're doing a bump distortion. We can do things like...

[Transcript missing]

My dad thanks Aimee for pronouncing my last name correctly.

This is the Motion interface. Motion is a brand new application. It's not released yet. And it will show you some things that you can do when you build a brand new application from the ground up that takes advantage of the Mac OS X and the Mac hardware, including the technology that Core Video is based on.

So over here, you have a file browser. And the file browser kind of mimics the Finder. You have drives, mounted servers, anything that you have in your Finder level, you have up the top here. And down below are all the files that you would find in any folder.

So if you want to take one, you just import it by dragging and dropping it from the file browser into the canvas. And you just hit Play. So once you have it start playing, you can do a bunch of things. You can scale it down as it plays. You can grab the little handle and rotate it.

You can come in and choose to have a kind of a perspective distortion. And you can see it's very interactive. You can just drag this stuff around and move it around really quickly. And this is the kind of interactivity that you can get. By using what Amy was showing and just inside of Motion.

Besides the onscreen controls, over here in the file browser, it's a tabbed window. So you can go to the inspector just by clicking on a tab. And you have all the sliders and dials that you would want to do this by numbers if you wanted to. Or you could just reset it all.

Besides that, you have a library, and in the library, that's where all the goodies are found, that's where all the fun stuff to play with are. You have things like filters, a lot of the filters, you can see they're all accelerated again. So we can come in and we can choose some like distortions, and we can choose like black hole here.

[Transcript missing]

But you have a bunch of these filters. Some are very stylized filters, like you can come in and say, "Stylize." This is kind of one of my favorites. It just kind of makes this Doctor Who kind of tunnel-y slit kind of thing effect. So you have a lot of these filters that you can just play with as the clip plays back, and you can layer up multiple clips. But you can also create animations, and you can create animations through different ways.

We created this animation. You can see the little preview up the top here in the file browser. It's just a keyframed animation that we saved off, and you can bring it back in. So you can just drag layers from your projects into the file browser to save them, and you can just drag them back into another project and lay them down, and then you get the same animation playback. So what you can do, you can actually choose this little clip here, and you have a full keyframe editor that you can open up and keyframe things as well.

Besides that, you have text tools. Up the top, you have a tool palette, a tool bar. You have hand panning, and you can zoom in on clips, and the clip still plays, and you can zoom in very quickly. So it's very interactive. You can choose your text tool. This might be like a broadcast promo, so we'll do KPL8.

And now that you have the text on screen, you can do different things. You can change the size very interactively, the tracking, all the things you might want to do with text. You can change the color, get a nice yellow there. You can change the font. It's very interactive on the font as it dynamically changes as you scroll through the list.

So that's kind of fun. And the whole goal was to make this very interactive and very fun to play with as a working tool. Over here, this little dashboard is a floating transparent little widget that gives you all the most common controls you would have for anything you select on screen. So I have text selected, so it gives me all the text controls.

If I have something else selected, you'll notice then it will give me different controls. For instance, to animate this text right now, instead of keyframing it, we can go back into the library and we can choose something called behaviors. Behaviors are kind of a different way of animating things rather than using keyframes. They don't set keyframes. They apply these kind of natural forces to objects.

So I can choose something like a basic motion behavior. And I can come in and choose-- let's see, we'll come down. That's not released yet. Did I say that? Now I'm going to bring out my guitar. Let me just get back into this, and I'll show you some behaviors. So we'll just load our clip back in. and our animation, and we'll start playing. And we'll choose our text tool.

and go back into our library and our basic behaviors and put on a throw behavior. Now, the throw behavior just lets me choose which direction using this dashboard I want to throw it in. So the more I pull it out, the faster it throws, and the less I push it in, the more I push it in, the slower it throws. We can just get it very quickly going along a line here, just very smooth. If I want to make a copy, I can just option drag this out, and I have a copy of it.

Same animation in everything. I can go back to the copy now in the animation and just change direction if I wanted to go in a different direction. So very quickly, I have this animation of text, and I can pull this one over as it animates. Maybe make it go a little bit slower. And I can just double click it and select evening.

News. Something like this. As it goes off screen, it's actually really, it's great for the demo, but it's not practical in daily use where you can actually, because the text is going all over the place. Okay, anyway, but we have this animation here, and you can do other animations with behaviors like different types of behaviors understand specifically about text. For instance, if I want a nice little highlight on this, I can come in and just throw on a highlight here, and as the text animates across the screen, you'll see it gives it a little sequence of highlight.

Across the screen. You can also animate the position. I can come in, and I can choose a different behavior, maybe a zoom behavior that just zooms in the KPL text. So now the text will kind of zoom on screen, and the highlight goes across evening news. Besides all these behaviors, you have a full particle engine that you can choose. You have things like smoke, and we can come in here and see a little preview. You can drag it around. You have things like sparkles.

Anything you would normally find in a full-blown particle engine would come with over 140 little presets that you can play around with, or you can create your own. We created this one earlier, and we can just drag and drop it on. It gives it a little nice little glowy line, and you can see everything is still very interactive. I can come to the background still and move it around as things play on top. Okay.

The last little bit I wanted to show you was you can import any QuickTime file format as well as export, including MPEG-1, MPEG-2, MPEG-4. And you can bring in Photoshop documents, and when you bring in Photoshop documents, if they have layers, it will show you the layers here. You can import all the layers. These are our anchors for our newscast, maybe.

And we can shrink them down. Now, behaviors don't necessarily just operate on one layer. They can operate on multiple layers. You have sophisticated kind of simulation behaviors that simulate gravity and things like that. And we can just come into our behaviors in the library again, and we can choose simulations.

We can try one like, um, attractor. We'll direct the attractor on the center anchor, and when we do that, the other two are attracted. Right? So this is great because they're not keyframes, and what that means is I can actually come in and move her around, and they'll follow her.

You can do these things very quickly. We all have people that we work with. We might want to put a rappel version on there. We can do rappels. You can come in and you can go full screen and you can work on this at full screen. This is an idea of motion and what you can do when you actually build an application that takes advantage of everything the Mac has to offer. As well, if you're interested in more, tomorrow at 10.30 there's a full session on this. That's motion. Thank you.

[Transcript missing]

One of the cool things about this core architecture that we've built in, it allows us to provide a predictable and reliable set of services that let developers, in this case, you know, Apple and our applications group, kind of like play with the notion of user interface and user experience.

We can kind of rewrite the rules about how UI is done when you can count on a set of services and capabilities to be built in at a very predictable level. And we're really looking forward to seeing what happens over the coming months with some of these core technologies.

So, what I'm going to do is because of some of the technical demo errors, problems we had there, I'm going to blast through some of my slides. I'm sure you guys are going to be really sad about that. But, so I'm going to power through this area because I want to save time for some of the cool demos that we have coming up. And what I wanted to do is, in this section, just kind of do an update on standards and where things are because it's so important to what's been going on in QuickTime and driving the incredible growth and distribution of what's been going on.

We've always supported standards in QuickTime. You guys know that. You can't have a serious architecture or media architecture in the world if you don't support and respect these standards. And to us, lately, it's been standards from this part of the world that's really been driving a lot of what's been going on in our space and a lot of the adoption of QuickTime. A lot of people ask us, you know, how is MPEG-4 doing? We do a lot of press interviews, a lot of analyst interviews. And I'm going to move closer to the clicker thing.

There it is. And you know, if you do a search on the web, you can find just hundreds of companies with thousands of products, various bits of hardware devices that are all just capturing and coding in MPEG-4. It's really taken off in a huge way. Our own iTunes Music Store, AAC, our friends up in Washington State switched over using AAC in their music store. I mean, that was sweet.

I mean, the thing that's kind of interesting is, you know, at Apple and the QuickTime team, you know, we have a cap that's got two logos on it. In the front, there's a blue Q, and then we're very proud and we're very, you know, we're very dedicated to making sure that QuickTime does well.

But we have to flip that cap around, and it kind of says, you know, the ISO logo on the other side. And that means we want to be, you know, we're card-carrying members of the ISO-compliant universe, and we want to make sure that we invite as many people to play as is possible.

So while we do compete head-on with Real Networks and with Windows Media from Microsoft every day in a variety of areas, we also, when we flip our cap around, invite them, very much so, to do what we've been doing with standards. Because the more people that play in this space, the better off it is for everybody.

These guys have been just driving MPEG-4 adoption in huge ways. Docomo, KDDI, certainly these are some of the earlier guys who have massive distribution of multimedia-enabled phones and people using them. We go to Japan a lot, and when we work with these guys in Docomo and KDDI, the stuff that they're doing and a lot of the content is created using QuickTime, actually all of the content that Docomo creates and all of the content that KDDI creates starts off as a QuickTime movie, saved off as a 3G file, and distributed over their networks to these phones.

They're massive users, and it's not just those guys. We took this on a street corner. This is a storefront. These are all media-enabled phones. It's absolutely amazing what's happening overseas. The good news is it's coming here too. Part of what you're going to hear about in just a little bit is how it is in fact coming here and why it's going to really matter for us.

A lot of what we've been doing to date, though, has been creation of QuickTime files, and, you know, they're on a G5 using Final Cut Pro or on a PC using a PC app, and that file then moved off to a server somewhere of someone's design. And as we've been traveling the world and talking with telcos a lot lately in the past, you know, past couple of years, and certainly in the last year, we've been asked routinely for an N10 solution. We've been asked constantly, what, can we buy this whole thing from you guys? You have servers, right?

And we're like, yeah. And you have a streaming server for the internet. And we're like, yeah, I guess if we plug them all together and change it a little bit, we could do the same thing on the wireless internet that we're doing on a wired internet. And so what we've started doing, and very, very recently, but incredibly successfully, it's unbelievable how quick the uptake for our solution has gone in parts of the world. We're selling racks of XSERVs right now into telcos and selcos around the world, providing solutions for streaming to this whole new 3G space.

So I'm going to step through this very quickly. The part that we're most familiar with is this, content creation. You're going to see a demonstration in a little bit about Final Cut Pro HD, you know, editing content in high def and then saving it out as a 3G file. And so we're very familiar with this part of the world.

And we all know that it's not just our own tools, but any tool that uses QuickTime, the suite of APIs that are there, as we update the version of QuickTime underneath, the application above it gets all of the new capabilities, all the new features, and all the new features.

And more importantly, access to all the new codecs. So as we add 3GPP and then 3GPP2 and then later, you know, H.264, all of these applications will automatically expose those capabilities, which is really, really cool for content creators. You don't have to buy new hardware or buy new software. And after the content is created, our delivery solution has been updated, has been modified to include our XSERV G5.

This monster device can reflect over 10,000 simultaneous streams to handsets, over 10,000 simultaneous, just from one of these devices. And if you've got stored files, on-demand files, around 4,000 or so 3G files simultaneously streamed. And what's kind of interesting is certainly if you have a lot more files, we have a lot more storage available.

But, you know, we have a flexible solution. What's interesting is the software, like OS X Server, and the streaming server, like QuickTime streaming server, ship on this hardware when you buy this for free. And this has presented a pretty interesting proposition for us, a value proposition for the folks that we're talking to.

When we compare our solution with some of the folks who are also in this industry, most notably real networks, who have had the early mover advantage, they got out there very early, have done a very interesting job, we compare our solution. We can take our XSERV G5 and slide it into a rack, and with it comes all the software that, you know, we're talking about, you know, the hardware that you need. And the server costs, I don't know, $4,500 or so.

And that's it. The same thing done on the real network side. You buy a piece of hardware from HP or Dell for, you know, $4,500 or so, and you slide it in a rack. And then you get to pay real networks about $45,000 for the right to use their software. And so as we've started going to the different telcos around the world, and one noticeably, we're in the Pacific Rim, some country, talking to some telco, and we lay this thing out.

The senior vice president, you know, he's the one who's going to be talking to us. And he's going to be talking to us. And the senior vice president of the company is like, okay, so you're telling me that I paid $4,500 or whatever unit of denomination for this device, and there's no software charge. There's no licensing fee. I can just use it?

And the answer was yes. And it was a no-brainer, and they ordered a rack of XSERVs. It was just such a beautiful thing to see QuickTime and the solutions that we've built helping create a whole new market for Apple. We're selling XSERVs into telcos because of QuickTime. And that's it.

With that often goes a G5, a cinema display, and, you know, Final Cut Pro or some other software for people to do the creation and the management of these servers. It's really working out well for us. And now that we have active communications, trials and tests with over 25 telcos around the world, and it's just growing, growing fast, really fast.

So that's working out pretty well. Now, we've always been doing content creation. Of course, we could always do content playback. Our client supports 3GPP. And 3GPP2 without a problem. We have got the best built-in support for that anywhere. And so the folks like Docomo and KDDI have always recommended to their subscribers download and install QuickTime because people with their phones are grabbing movies and they email them to people and they want QuickTime to play it back.

And now companies like Docomo, KDDI, Sprint here in the U.S., they're showing up in our download list. We look at our numbers every single day. They're showing up in our download list repeatedly every day in our top 20 or 25 referrers for QuickTime downloads. That many of their subscribers and their subscribers' friends are getting QuickTime to play back these movies. It's really starting to pick up.

So, what I'd like to do now is introduce Joseph Linaschke, who works in our professional group, professional marketing applications group, to do a quick demo of Final Cut Pro HD. And what we're going to do is check this cool application out, and then we're going to use the output of the work that he's done, and we're going to push it up to a server and stream it back to a phone. So, Joseph. Thank you, Frank. All yours, man. The Final Cut Pro HD -- Thank you.

Final Cut Pro HD is the newest version of Final Cut Pro, which was announced and released earlier this year at the NAB conference in Las Vegas. Now the most important new feature of Final Cut Pro HD is a direct result of our close working relationship with Panasonic, the manufacturer of the very popular high definition VeriCam camera.

What we can do with Final Cut Pro HD is actually capture the native DVC Pro HD content shot on those VeriCam cameras over FireWire, that's standard original FireWire, not even FireWire B, into your G5 or even onto your laptop G4 computer. Not only capture it over FireWire, but also edit that high definition content in real time.

Now you might be wondering why are we up here talking about high definition non-linear editing in the middle of a QuickTime delivery session. Well, regardless of your final output, your content needs to be created, and if that content is video, then the obvious choice is Final Cut Pro HD. But why high definition? That's an awfully big scale to go from HD all the way down to the phone.

Well think of HD or high definition as a universal master format for you. If you shoot and edit in HD, your choices are unlimited. You can deliver to high def TV, HDTV. You can print to film. You can deliver an HD projection in an HD theater. Or in the future, you'll be able to create high definition DVDs. Now from there, you can scale that down to standard definition for standard def broadcast or standard def DVD. Of course, you can bring it down farther to MPEG-4 for the web.

Or today, you can finally export that content onto a 3G phone. And that's what we're going to look at today. So let's take a look at Final Cut Pro. This is Final Cut Pro 4 HD, and I have a project that's partially finished here, and we're just going to finish it up and then deliver it to the cell phone. So here's what I have so far.

We have a project that's been started here, but it needs a little bit of work. So I'm going to do three things to it. The first will be very simple. I want to add a transition between these two shots here. So to do that, I'll go to my Effects tab, and as you can see in here, I have a Video Transitions category. If I open that up, I have several categories to choose from: Dissolves, Wipes, Irises, Maps, and so on.

And I have in here a QuickTime category. So let's go ahead and take a QuickTime push and drag and drop that directly onto the timeline like so. Now I can change the duration of that transition by simply dragging it directly on the timeline and then play that back.

Just like that. Now you can see that happened in real time. There was no rendering required. In fact, if I want to make a change to that transition, I can open it up into the viewer, change that from a top push to a right push, play it again, once again without rendering. So off to a good start here. Now the next change I'm going to make is to this pool shot. You'll notice that the break happens right on the beat.

But then the shot continues, not a whole lot else happens, but the beat repeats. So what I want to do is have a little bit of fun with this clip and work with the time remapping tool to take that pool cue break and have it happen twice, both times on the beat.

So let's see what we're going to do. First thing I'll do is just go ahead and zoom into this clip a little bit and open up my my tool set here, my little mini timeline, and grab the time remapping tool from here. Now once again, if I play through this, you'll see there's the first beat.

And there's the second beat right there. Now the first break is already lined up to the beat, so I'm going to go ahead and add a keyframe to lock that in. And I'll also turn on my time remap graph so that I can see what's happening, I can see the changes to my timeline. I'm going to go ahead and let that play normally, just for a little bit. We'll go ahead and add a keyframe there, so it's going to lock into that position. And then if I go forward to where that last beat is, which is right about here.

There's that beat. I'm going to go ahead and grab that keyframe and adjust the frame of video that we're actually looking at, dragging it back in time until I get to the break again. So there's the break. So now I have the break happening twice. So far so good, but what I really want is to have that cue ball go back a little bit farther back to the pool cue so he shoots it twice. So let's go ahead about halfway in between here, add another key frame, and I'll just drag that back right about there.

All happening in real time in high definition. One more thing I want to add on to here is a title. Let's go ahead back to the beginning of the project. This is a small bumper for San Francisco, so I want to add a little title that says San Francisco right here.

There's some built-in titling tools inside of Final Cut Pro, but it also ships with a program called LiveType. LiveType is an awesome tool for doing very quick, very easy animated titles. Let's go ahead and have a look at that. I've already exported this single clip here, so let's go ahead and switch over to LiveType. You'll notice I can even check my mail in the background here while working with Final Cut Pro HD. Let's go ahead into LiveType here and place a background movie. There's that Golden Gate Bridge shot, drop it onto the timeline.

Now I need to add some text, so I'll just go in here and type in San Francisco. Did I spell that right? San Fran-cisco. You know, you can type 120 words per minute until you get up on stage. Did you know that? That's the way it works. Alright, there we go. San Francisco on there. I can change the size of that text if I want to.

I can of course change the font. Let's go ahead over to my fonts category, choose any font that I want in here. I'm going to grab this Bauhaus font, apply that. I'll bring the type size up just a little bit. I can even go in here and individually manipulate these characters. So for example, bring the F over here.

I can drag this over a little bit to tighten that up. Now if I want to animate this, much like in motion where we have behaviors, here I have something called effects. And these effects are pre-done animations that I can simply drag and drop onto the timeline. You'll see we have various fade effects in here.

[Transcript missing]

and David Cronenberg. For more information about the QuickTime and Digital Media project, visit www.quicktime.com. This is Frank Casanova, and I'll see you next time. . and choose Open in Editor, which will launch that project back into LiveType. I can now go to my Style Tab, Outline, turn that on, and let's just give it a nice heavy, beefy black outline on there. I'll simply hit Command+S to save, tab back to Final Cut Pro HD. It's immediately updated, and there's the piece back on the timeline. Let's go ahead and see what this would look like in the final piece, and we'll look at this in full-screen here.

[Transcript missing]

and that's all there is to it. So from here I'm ready to export this out for 3G. So simply choose File, Export using QuickTime conversion, and directly from within Final Cut Pro I can choose to export a 3G file and of course have access to all the options that I would need for a 3G output. That file has already been saved on the desktop and I'd like to bring Frank back up here to go ahead and show you how we output that or stream that to the cell phone. Thanks a lot guys.

OK. So we'll stay on this demo machine. Because what I want to do now is now that we've looked at how this edits in HD, and Joseph showed you our export panel, what's interesting is Final Cut Pro, like any other QuickTime app, can access these export controls. They look exactly the same whether you're using QuickTime Pro, Final Cut Pro, or any application on the Mac or the PC.

And it's very straightforward and very easy. And what I want to do now is now that we have this file, Can we have this guy go back up, please? Thanks. What I want to do now is get this file off my computer and get it out onto a server, for example, in a telco somewhere. And we have a product.

called QTSS Publisher that we ship with our server. We can connect to the server, which we have set up. And the file that Joseph-- we kind of pre-baked this, so we didn't make you sit through the actual transcode. This is the file. And all I need to do-- I mean, it really is a pretty straightforward drag and drop operation. I grab this 3GP file, drag it into this window. It moves over to the server. I can click on this.

Click on this published media file, and you get a lot of interesting information. You know, I can make sure that I do the right thing. You get poster frame with this. You get HTML automatically written. You can copy this HTML right out of this screen, put it on your web page. It has all the links, all the right information on how to actually access this file.

And then if I wanted to see how it worked, because when we pushed it up there, it was automatically made streaming ready. It automatically hinted it. What QuickTime uses are hint tracks in a movie file. MPEG-4 employed that because, of course, they're using QuickTime as their file format. I can hit play here, and there's that file that Joseph created.

So that's streaming back to our desktop here. But now that it's streaming back to our desktop, we know that it works. If we can go back to slides, please. What do we want to do with this? Well, we probably want to take it somewhere more interesting than a desktop.

We're talking about workflow, we're talking about how files are created, how files are hinted, how files are moved. Now, how can they be played back in the larger scheme of things? What I'd like to introduce is David Vernicki from AT&T Wireless to join me on stage and talk a little bit about the way that our companies are benefiting from the development and the use of standards to actually just work together very seamlessly because we both read from the same recipe book. David, welcome.

Thanks for having me, and my dad thanks you for pronouncing my last name correctly, too. About three years ago, I made my first trip over to Asia to view one of the first live demonstrations of streaming video on a wireless network. And naturally, we all came back pretty excited from that journey. And I was asked, you know, what does it take for this to become reality in North America? And my response was convergence, and a convergence of networks, devices, and standards, I think, are key.

So we started to see some of that convergence, and I really think 2004 is the year of convergence because now we finally have devices with the capabilities, both with displays, with memory, and battery capabilities to actually render this content. We have networks that have evolved, whether they be GSM or CDMA-based networks that can now deliver the bandwidth required for this content to be enabled to the phone. And we now have standards convergence, where previously we were operating in a telco center, or a desktop internet-centric world.

We've seen the convergence arrive. And really, the epitome of that convergence, I think, is demonstrated in what Apple's done with their QuickTime tools and content authoring and creation capabilities that they've developed, all based on standards and the diligent work that Frank and his team have done in working to make sure that all of the products allow the content to be created, delivered, whether it's by you as a developer, one of our content partners.

So, as I said, we're working to create a system that allows users to have access to all of the content, whether it's a mobile, a carrier, or even a consumer, to take their own personal content and publish it and make it available to other users on the desktop or on the mobile phone.

So what I've done is I've browsed out to the website that Frank has posted that content on, and I'm going to actually stream the content directly off of the server here. Can we have this, the back-load device on the screen? And of course, the demo gods will cooperate here with me. We'll get this to work here. Hey guys, can we get this camera rig?

So I've browsed out to the site. There's a link up there to the content. And as I've connected, we actually get to see the real thing. And of course it's cybers. So it was that easy for Frank to take the content and publish it, and for me to browse it on the phone.

Just to be clear, certainly we could have done this as a, you know, played it from the phone or, you know, like stored it on the phone and played it back, but this was real-time streaming. I mean, this is pretty cool because the only place you could normally see this up until now is if you got on a plane and flew for 14 hours, you know, somewhere where they serve Asian food.

But now we can hear, we're starting to actually get a network that has evolved enough where we can push content to servers and the bandwidth, the wireless bandwidth is enough to actually do this stuff in real time. This is getting really exciting to be able to do this right now. Right here in San Francisco. So... Yeah, and this is actually available nationwide on our network and our friendly competitors' networks.

Sure. This device is an upcoming Nokia Edge-enabled phone. You've probably seen the European counterpart to this, the 6600. This is the 6620. This device has the ability to stream up to 130 kilobits per second. So, convergence has happened, and in 2004, it's here. Cool. Thanks a lot. Appreciate you joining us here.

So, one example from one of the folks that we're working with, and certainly as we just kind of rally around standards, you know, it works out incredibly well. You don't have to cut deals because the standard is the deal. The standard is what makes things work. And that was all just done because we both kind of, you know, do the right thing at the right time.

So, we showed one example that was kind of like, you know, a make-believe from a professional content creator doing HD, exporting out the 3G to the AT&T phone. But we also have an opportunity... Where's that clicker thing? Here it is. If we could go back to slides real quick.

To take a look at another example, and David We've worked closely with the AT&T guys and with Verizon Wireless guys, they're both kind of friends of the family and of course, card-carrying members of the standards community. And what I'd like to do is introduce Doug Busk to join me on stage. Doug's been a friend of the family as has Dave for a long time. Welcome. Doug Busk: Thanks, Frank.

And so, you know, like the other one started from kind of Final Cut Pro, professional content creation, we'll take a more kind of like consumer-oriented content creation play on this one. Doug Busk: Excellent. Well, thanks, Frank. Well, first of all, let me say we're very excited to be here. The timing is perfect because we launched our video messaging product, which is a part of our GetFlix line of products on Friday. The timing couldn't be any more impeccable.

Our video messaging product allows recording of full video and sound up to 15 seconds or about 200 kilobytes to be sent peer-to-peer, online and down to mail, which we're going to demonstrate in a moment. So when we looked around in the playback universe, there really wasn't much of a question. We chose 3GPP2 as our standard, and so we went with QuickTime as our preferred playback mechanism on the desktop on PC and Mac.

There really was no issue there. QuickTime was excellent to work with. And I think as you'll see, the QuickTime really gives the product a wonderfully holistic approach. So you're able to send from device to desktop and back with ease with QuickTime and QuickTime Pro. So do you want to go and show off a little bit of the demo? Let's give it a go, man.

Doug Busk: Okay. So talk about the demo gods blessing us here. I'm going to go ahead and take a short video of Frank. Go ahead and stop Frank. Are you recording? Doug Busk: Yep, I'm recording. Hey, everybody. Mark, you should have played a little heavier music, man. Doug Busk: So I'm going to stop that, and I'm going to send that over to both Frank's email and his phone at the same time. So let me go ahead and add those out of my contacts list. We're going to move right over here to the computer. Okay. Give me just a moment here.

Again, this is a set of activities that you would normally have to go pretty far away from here to actually see happen. Right. So right now I'm connecting up to our 1X RTT network. It's branded as National Access. So it's currently sending the message. This National Access runs around dial-up speeds, 50 kbps, which shouldn't be confused with our EVDO network, which is broadband access, which we have launching in several cities currently available in San Diego and D.C., which is more like 500 kbps downstream. There's no lacking of acronyms in this industry. Yeah. Okay, so the message has been sent. I'm also going to upload this to our PixPlace website at the same time. So I'm going to go ahead and do that while we're waiting for this to come into mail.

Okay, we're looking for it. Just thinking. Okay, so it's coming to the phone and it came in the mail. We got it at the exact same time. How about that? That's never happened before. Can you hear me now? That's what my network guys are going to say. They're here, I have to say that. Okay, so where do you want to look at it first, on the computer?

Yeah, let's take a look at it in Mail Playback to give you an idea of the power of QuickTime delivery. This is a video we just took, uploaded via our video messaging service, and it's right there in message and preview thanks to QuickTime integration into the Mail app. So should I just go ahead and play? Yeah, go ahead and play.

So we realize that not everybody is going to have a video messaging capable phone, but we hope that people run out and buy our LG VX7000, which will be available here on Friday. So Frank's going to take a look at the, I'm going to put the 7000 up on the demo stand, and let's see if we can connect up and download the video. So my phone said that I had a message. Yep.

And... Where did it go? Yipes. Did the right beeping thing. Right there under message. On the inbox. It said message. These newfangled devices. So I will... Go ahead and pop that right in there. Go pop this... Oh, can we switch over, guys? Thank you. Switch over, guys. Thank you. There we go. I will push the little play button.

and that was delivered simultaneously to the desktop to mail to anybody who has QuickTime 6.5 and above. Now what I'm doing is logging into our PIX Place website, which is vzwpix.com. - Anybody who's gonna go ahead and ask me for a free phone, this number is gonna be defunct about 10 minutes after the show, so you'll have to come and approach me separately. - Damn.

So we'll just walk into the inbox here, and again, you'll notice we've got the QuickTime integrated right into the website. It pulls up the player embedded in Safari, and we also have the mention on the side here for anybody who doesn't happen to have QuickTime, although we don't believe that number to be many.

So I can go ahead and copy and move and organize all of my video messages. But what's really exciting about what we're doing with QuickTime is the ability to create and deliver content downstream to VZW video messaging customers. So Frank's going to pull up a QuickTime edit here. Okay, so what we have is personal video.

One of the cameras that I showed earlier from Sanyo is this really cool MPEG-4 camera. You may have seen it. It shoots stills and video, solid state on SD cards. And the video that it captures is a .mp4 file, and that's what this is. We capture some content, and I'll just play this back for you guys.

You just can't go wrong with kids, can you? Yeah, it's a total sucker punch for a demo. It really is. You just gotta do it. Alright. So what we want to do is, Joseph started doing this earlier, but we're going to actually finish it. We're going to export this, move it to 3G.

Now, hopefully all the settings are set so I don't have to go through it, but what you can see is we support, of course, 3GPP for the GSM guys, 3GPP2 for the CDMA 2000 guys, like Verizon. And, of course, when I did that, it reset everything, didn't it? So I'll go up to 82 and audio. We want, Alisa, what data rate? Okay.

We want to use the other speech codec at this data rate. Does that work? Okay. Good. So let's just say okay, and we'll save it as gobyslide.3g2 on the desktop. And that was what, about seven seconds long, so we're exporting it right now. and there it is, and there it is on the desktop. So now though, let's send this to his phone. So people in their homes can very easily, using these incredibly simple tools, they're powerful at the same time, create content and send it out.

So we're finished with this, and now what I'm going to do is launch our email client again, and this time, create a message and send it to Doug called Fun--oops, Joseph's right, Fun in the Park.

[Transcript missing]

I haven't had a manicure lately. And just go ahead and press pause.

So from digital video to mobile in three steps. We're very proud of this and we're looking forward to this extended out to your world, your pre-existing content that you have. I think you can see now this is excellent for a home user, but there's a world not too far from now where you'll be taking your news, sports, weather, travel, corporate, marketing content, whatever you have, and bringing it down with the power of QuickTime to VZW video messaging customers. So we're excited to be here and we look forward to a great future with you. your help. Thanks everybody. Thanks Doug. Thanks Frank.

[Transcript missing]

So, with that said, what's up? What's next? What are we going to try to do? Well, you saw it yesterday in Steve's keynote, if you were there, you saw me demonstrate H.264 AVC. It's a remarkable video codec. It's one of those things where you don't get to see a video codec like this very often. You don't get an opportunity to introduce a technology like this, you know, but maybe every number of years.

The benefits: incredible quality. I mean, this codec has generated quality that we thought was really kept in the upper echelons of HD and other really big, big formats. Not a codec that's scalable and available to use across an entire spectrum of bit rates. The efficiency of this, I demonstrated yesterday, I'll show you guys again today, is incredible. You hold a data rate stable, you hold a data rate constant, and the frame size and resolution goes up by like a factor of four.

From, say, today's standard MPEG-4 codec, which is absolutely incredible. That's like free. That's free resolution. You just re-encode and you're off with a much higher resolution image. And a bunch of other capabilities that I want to just power through because we're running out of time. But I wanted to talk about this. Get this question a lot, as you might guess, as we're talking to press and analysts. What's up with Windows Media 9? Where is it vis-a-vis H.264?

What about VC9? How does that relate to Windows Media 9 and therefore H.264? Well, lots been going on in the world of standards. Certainly the HD-DVD forum has made some decisions about the codecs that they're going to support. MPEG-2, H.264, and VC9 have been ratified into the HD-DVD spec, which is kind of interesting. So certainly H.264 and people using QuickTime tools will be able to author content for that next generation set. The DVD audio guys have selected AAC, H.E.AAC, as the audio format of choice for the next generation second session DVD audio. playback format. But Windows Media 9.

I think it's an incredible technology, I'll be honest with you. I think it's absolutely remarkable, but it has two issues. It's closed, and it's proprietary. Therefore, limiting its distribution and use in some of the professional mediums, for example, broadcast cable, you know, the telcos and celcos. When we first visited Docomo, they were actually using Windows Media, and they switched over to MPEG-4. They felt that was a better and safer choice for them because it's a standard, where Windows Media 9 was not. And if you wanted to license Windows Media, you could get a technology license, no problem.

But patent licenses, big problem. You couldn't get that from them. So that was limiting some of their adoption. So they made a very interesting and I think a really smart choice. They went to the SMPTE standards committee, very big and powerful standards organization, and proposed Windows Media 9 as an open standard called VC9. So Windows Media 9 pretty much equals VC9. VC9 is now a SMPTE standard. But then an interesting thing happened.

Certainly, they've been marketing VC9 very aggressively as an open standard, and they could all go talk to the people that normally wouldn't talk to them. But what hasn't happened with VC9 yet is the patent stuff, the stuff that we're very used to in the MPEG-4 side. So you know, there's this group of lawyers, MPEG-LA, stands for Licensing Authority, not Los Angeles. We have other acronyms back in campus.

But insert your own LA acronym. And these guys are the storefront, if you will, for MPEG-4. These are the folks that work with all of the patent holders in the patent pool and allow you to walk up and talk to just one person and get a patent license that covers you completely. So enter VC9, you know, an open standard.

Is it possible that Microsoft owns every single bit of intellectual property that's in Windows Media? Is it possible they've invented every technique and every technology and every algorithm and every approach to encoding and decoding that's in Windows Media 9? We don't know. Well, we're going to get a look because MPEG-LA has done a call for patents on VC9, which means France Telecom. They've been around for a while.

Sony, they've got a lot of IP. All these guys get to go over and kind of like sit around a round table and pare down and say, "I recognize that." You know, I've seen that before. And what's going to happen is VC9 is going to have a patent pool. MPEG-LA is going to manage it. So while Windows Media 9 licensing is really attractive, you can get it at a really, really good price without patent coverage. VC9 will have costs associated with it. We don't know how much the patent pool hasn't even really started forming yet.

H.264 is off and running. It's already been deployed in a number of places. The Japanese broadcast community have already selected H.264 as their technology they're going to use. We've been ratified into a bunch of different places. I'm really eager to see what's going to happen with VC9. I mean, the jury's still out. We'll see, but it's important to understand that Windows Media 9 and VC9 are these very similar today codecs. How that's going to evolve with Windows Media 10 just being introduced and what direction that's going to go versus VC9.

And the patent questions around VC9 will be just interesting things to think about. So just keep your ears open when that happens. In the last couple of minutes, what I'd like to do is just show you guys what we've been doing, though, for a while with this H.264 AVC technology. If you're wondering about the name in a nutshell, the ITU, International Telecommunication Union, these are the folks that have been famous for H.261, H.263, and now H.264. They've done a bunch of incredible codec work.

And the folks in ISO MPEG that did MPEG-1, MPEG-2, MPEG-4, they brought together the best and brightest of their respective organizations and created a joint video team, or JVT. This codec, as it's evolved, has had a number of names, H.26L, JVT, AVC, H.264. We think, like today's MPEG codec, which is called MPEG-4 Part 2, this codec may end up as MPEG-4 Part 10. I don't know what happened to 3 through 9. Probably the same thing that happened to MPEG-3. I don't know.

It's just missing. But, you know, the name of that will likely come out as Part 10. So let me show a couple of examples of what this codec can do. And you saw me do something like this in yesterday's keynote. This codec in the bottom here, and what data rate are these, Amy?

One. Okay, this is a one megabit encoded file. Both of these are one megabit. Same piece of content, same data rate, one megabit. The bottom right window is today's MPEG-4 Part 2 codec. The upper left is H.264, same piece of content. So I'm going to play them both at the same time, and you're going to see what they look like.

♪ ♪

[Transcript missing]

Sugar? Ah. Oh, you thought I was calling you sugar. Hey, you're not that rich. So, it's a great trailer and a really good comparison of what the two codecs do and what you get from an efficiency standpoint with 264. So let me go back one, and we talked about scalability from 3G to HD and beyond. So I've got like four seconds left. This is my last demo. I'll be out of here in no time to the folks in the house.

Let me play one trailer for you. We got this trailer just last night. Actually, you guys might be the first crowd it's been shown to outside of a movie theater where it's been displayed. This is the new movie, Phantom of the Opera. And so let me just play this, and we'll be off. This is encoded at about, what, what? Five megabits. The longest lead-in I've ever seen.

and David Koehn, and the team of Mark and Dion. We have a codec team in engineering that's just absolutely outstanding, and they're doing an incredible job taking the recipe of what's specified as 264 and implementing it. It will ship in the next version of QuickTime, and I'll tell you, we just can't wait.

So, I want to thank you very much for coming to our session. There is a 264 session at 2 o'clock today. This was one of the kind of secret sessions that we couldn't talk about, so if you want to learn more about this codec, at 2 o'clock today we have a session dedicated to H.264. Thanks for attending. We'll be around all week. Take care, guys.
