WEBVTT

00:00:17.820 --> 00:00:20.310
Good afternoon.

00:00:20.360 --> 00:00:25.220
So today you have two sessions on
increasing your productivity with Xcode.

00:00:25.760 --> 00:00:30.510
And many speakers on stage today are
going to be telling you how you can

00:00:30.610 --> 00:00:38.350
increase your workflow in the edit,
build, debug cycle with workspaces,

00:00:38.360 --> 00:00:40.960
documentation, scripting, et cetera.

00:00:41.010 --> 00:00:44.670
Each of them are going to refer
time and again to a certain core

00:00:44.790 --> 00:00:47.140
set of elements within Xcode.

00:00:47.220 --> 00:00:51.490
So I thought it would be a good
idea to review those elements now,

00:00:51.620 --> 00:00:54.140
tell you what they're all about,
what their purpose is,

00:00:54.210 --> 00:00:59.820
and talk about a few tips and tricks that
you can use to make better use of them.

00:00:59.850 --> 00:01:02.670
Now, of course,
Xcode wouldn't be a very good developer

00:01:02.770 --> 00:01:04.100
tool if it didn't have an editor.

00:01:04.410 --> 00:01:05.680
Xcode has a great editor.

00:01:05.680 --> 00:01:08.600
It's faster now than
it's ever been before.

00:01:08.920 --> 00:01:13.000
And you can take better advantage of it
by turning on various visual elements.

00:01:13.080 --> 00:01:16.000
For example, I like to turn on the gutter
and the split control.

00:01:16.050 --> 00:01:18.880
You can turn on the gutter via the
View menu and turn on the split

00:01:18.960 --> 00:01:20.770
control via General Preferences.

00:01:20.870 --> 00:01:24.010
And the split control will allow you
to split the editor any number of

00:01:24.150 --> 00:01:25.960
times and close different splits,
et cetera,

00:01:25.960 --> 00:01:28.920
if you like to view different parts
of your file at the same time.

00:01:28.940 --> 00:01:33.210
And the gutter will show various
line-level attributes-- of course,

00:01:33.210 --> 00:01:37.410
the line number that it's for--
as well as errors and warnings,

00:01:37.410 --> 00:01:40.300
breakpoints, all that kind of good stuff.

00:01:40.320 --> 00:01:45.250
Now, the separate editor window in Xcode
in the upper right-hand corner,

00:01:45.250 --> 00:01:48.410
by default, has a toolbar item
called the editing mode.

00:01:48.530 --> 00:01:52.580
Now, I know a lot of you out there like
to use a separate editor window

00:01:52.680 --> 00:01:53.780
for every single file you open up.

00:01:53.800 --> 00:01:57.720
That's a CodeWare style,
and I can appreciate that, too.

00:01:57.720 --> 00:01:59.720
I like that mode a lot also.

00:01:59.720 --> 00:02:01.720
But sometimes that becomes too much.

00:02:01.720 --> 00:02:06.720
You hit periods where you want all
the files to just be in fewer windows.

00:02:07.000 --> 00:02:10.720
And so you can toggle the
editing mode button on.

00:02:10.720 --> 00:02:13.930
And when you do that,
all files that you double-click on are

00:02:13.930 --> 00:02:17.540
going to open in that same editor window,
and you'll use the nav bar in the

00:02:17.540 --> 00:02:19.720
editor to navigate between them.

00:02:19.860 --> 00:02:21.820
And of course,
you can just toggle that off again,

00:02:21.820 --> 00:02:23.600
and everything goes
back to the way it was,

00:02:23.600 --> 00:02:27.280
and everything opens up in
a separate editor window.

00:02:27.280 --> 00:02:30.440
Xcode's separate editor window,
like all of Xcode's windows,

00:02:30.480 --> 00:02:32.380
has a status bar.

00:02:32.410 --> 00:02:38.450
And the status bar and the seeds
that you have for 1.5 and 2.0 today

00:02:38.660 --> 00:02:40.960
focus mainly on build information.

00:02:40.970 --> 00:02:43.900
And you'll find out a little
bit later where other types

00:02:43.900 --> 00:02:45.580
of status information go.

00:02:45.580 --> 00:02:47.780
We have a really good
solution for that as well.

00:02:47.780 --> 00:02:50.650
Now, when you build,
you're going to see a lot of

00:02:50.650 --> 00:02:53.970
different places that will tell
you what's happened in your build.

00:02:54.270 --> 00:03:00.040
In the right-hand side of status bars is
a dedicated area with build buttons that

00:03:00.040 --> 00:03:04.430
will tell you whether a build succeeded,
failed, or was canceled by you,

00:03:04.450 --> 00:03:08.520
as well as possibly buttons for any
errors or warnings that have been

00:03:08.520 --> 00:03:10.720
encountered when the build was performed.

00:03:10.730 --> 00:03:13.320
Now, you can click on those,
and it will take you to the build pane,

00:03:13.320 --> 00:03:15.680
and we'll see that in a minute too.

00:03:15.900 --> 00:03:19.120
Now, if you have any errors or warnings
in the file that you're editing,

00:03:19.140 --> 00:03:21.520
you're going to see some other
things that are really handy.

00:03:21.540 --> 00:03:23.240
In the gutter,
you're going to see little items.

00:03:23.240 --> 00:03:28.470
You're going to see little icons
on the lines that refer to errors

00:03:28.540 --> 00:03:31.180
and warnings for that particular
line in your source file.

00:03:31.200 --> 00:03:33.060
And they'll have a badge
for an error or a warning.

00:03:33.060 --> 00:03:36.270
If you click on those,
the status bar will show you the

00:03:36.410 --> 00:03:38.000
actual build message for that.

00:03:38.030 --> 00:03:40.720
And if you hover over
them with your mouse,

00:03:40.720 --> 00:03:42.300
you'll get a tooltip.

00:03:42.320 --> 00:03:44.810
I use the hover mode a lot
when a build is ongoing,

00:03:44.810 --> 00:03:48.800
and you're getting a lot of
compilation messages going through,

00:03:48.800 --> 00:03:51.930
and maybe it hasn't stopped because
it's just hit some warnings,

00:03:52.100 --> 00:03:54.440
but you see that pop up so you
can hover your mouse over and say,

00:03:54.440 --> 00:03:57.120
oh, I see this warning is about that.

00:03:57.120 --> 00:04:01.500
Now, you'll also see in the latest
release of Xcode little hash

00:04:01.560 --> 00:04:03.920
marks in your vertical scroll bar.

00:04:03.920 --> 00:04:07.190
And we've actually had radars
reported that there's a drawing

00:04:07.190 --> 00:04:09.350
glitch in the scroll bar,
but what that actually is is

00:04:09.480 --> 00:04:13.180
it's indicating lines that
have errors or warnings.

00:04:13.180 --> 00:04:16.340
This is like the file merge
app that we have on our system,

00:04:16.410 --> 00:04:19.580
so that you can just scroll the thumb
down to those hash marks and get

00:04:19.620 --> 00:04:22.360
immediately to your errors and warnings,
and if you're porting

00:04:22.360 --> 00:04:25.620
any code or anything,
you have a header macro defined

00:04:25.620 --> 00:04:28.520
incorrectly in a header,
you'll know that right away because

00:04:28.520 --> 00:04:30.480
all of a sudden you'll just see
red throughout your scroll bar,

00:04:30.480 --> 00:04:34.280
and you know something
is really amuck there.

00:04:34.300 --> 00:04:39.000
Now, another very important element of
Xcode is the groups and files view.

00:04:39.020 --> 00:04:41.960
Now, all developer tools seem
to have a view like this.

00:04:41.960 --> 00:04:46.160
It's a hierarchical view with your
files and your folders and your groups,

00:04:46.170 --> 00:04:48.000
and Xcode has that as well.

00:04:48.030 --> 00:04:51.890
But last year, we took a step further,
and you've heard a lot about

00:04:52.010 --> 00:04:52.700
smart groups this week.

00:04:52.700 --> 00:04:57.870
And last year, we built smart groups into
Xcode's groups and files view.

00:04:58.020 --> 00:05:04.520
Smart groups for Xcode are auto-generated
content based on particular topics.

00:05:04.520 --> 00:05:07.520
So, for example, we have an errors and
warnings smart group,

00:05:07.520 --> 00:05:11.720
and this smart group is populated with
all the files that Xcode is aware of that

00:05:11.720 --> 00:05:13.690
have errors and warnings against them.

00:05:13.700 --> 00:05:17.650
We also have a couple of
other important smart groups.

00:05:17.700 --> 00:05:21.180
For example, we have a target smart group
that contains all your targets

00:05:21.320 --> 00:05:22.520
and one for executables that
contains all your targets.

00:05:22.590 --> 00:05:24.140
It contains all your executables.

00:05:24.210 --> 00:05:26.810
Those will be important for you
to find which targets you want to

00:05:26.810 --> 00:05:29.140
inspect and change settings on,
etc.

00:05:29.140 --> 00:05:33.620
Now,
new in the seed is the ability to decide

00:05:33.620 --> 00:05:37.290
which smart groups you want to show.

00:05:37.640 --> 00:05:40.840
And you'll see later on
that in the newest seeds,

00:05:40.990 --> 00:05:45.020
the groups and files view is
present in many different windows.

00:05:45.190 --> 00:05:48.510
And they'll have different subsets
of all the smart groups available.

00:05:48.620 --> 00:05:51.030
So, if you bring up a context
menu on the project structure

00:05:51.150 --> 00:05:54.090
in the groups and files view,
you'll be able to select which

00:05:54.090 --> 00:05:57.960
smart groups you want to show
in the groups and files view.

00:05:58.190 --> 00:06:00.410
And of course,
I should mention that there's

00:06:00.480 --> 00:06:02.840
another type of smart group,
which is a custom one

00:06:02.840 --> 00:06:03.830
that you can create.

00:06:03.960 --> 00:06:06.850
It's just based on regular
expressions right now,

00:06:06.990 --> 00:06:09.800
filtering on the file name
of the files in your project.

00:06:09.960 --> 00:06:13.960
But it's very handy if you want to have a
folder that contains all your resources,

00:06:13.960 --> 00:06:17.240
all your nibs, all your images,
your source files, your header files.

00:06:17.360 --> 00:06:19.340
It's easy for you to create those.

00:06:19.480 --> 00:06:22.160
And again, the groups and files view
is a very useful tool.

00:06:22.160 --> 00:06:24.220
The groups and files view
supports type select,

00:06:24.220 --> 00:06:26.160
so you can navigate through
the groups and files.

00:06:26.160 --> 00:06:31.030
Now, another view that we introduced with
Xcode last year is the detail view.

00:06:31.160 --> 00:06:34.240
It works hand in hand with
the groups and files view,

00:06:34.270 --> 00:06:36.700
and as its name suggests,
it provides more detail about

00:06:36.700 --> 00:06:39.160
the files you have selected
in your groups and files view.

00:06:39.160 --> 00:06:44.160
Now, each smart group has a
different type of detail view.

00:06:44.240 --> 00:06:47.770
One of the really important detail
views -- I get this question a lot

00:06:47.770 --> 00:06:53.980
-- is it has to do with setting your
headers to be public or private.

00:06:54.030 --> 00:06:57.980
You do that by clicking on a target
in your groups and files view.

00:06:57.980 --> 00:07:02.540
The target detail view will appear,
and you'll see a column

00:07:02.540 --> 00:07:03.980
that's called roles.

00:07:03.980 --> 00:07:07.930
And if you select a header file in
that and then select that roles pop-up,

00:07:08.120 --> 00:07:11.760
it will allow you to choose
whether you want the header to

00:07:11.760 --> 00:07:13.980
be exported as public or private.

00:07:13.980 --> 00:07:17.980
The detail view also supports filtering.

00:07:17.980 --> 00:07:21.800
So there's a search field
in the Windows toolbar,

00:07:21.800 --> 00:07:21.800
and you can filter on the detail view.

00:07:21.800 --> 00:07:25.790
You can bring up a context menu
on the header of the detail view

00:07:25.860 --> 00:07:27.750
and display different columns.

00:07:27.830 --> 00:07:29.800
Of course, you can sort the columns.

00:07:29.800 --> 00:07:33.290
And new in the seeds,
the detail view supports all

00:07:33.290 --> 00:07:35.800
the file operations that the
groups and files view does.

00:07:35.820 --> 00:07:37.670
It also supports type select.

00:07:37.890 --> 00:07:40.800
So you can sort a column,
then you can filter it down,

00:07:40.800 --> 00:07:42.800
and then you can type select to the end.

00:07:42.800 --> 00:07:45.800
When you get to where you want to be,
you can hit the return key,

00:07:45.800 --> 00:07:49.120
and that would, for example,
in the default layout,

00:07:49.120 --> 00:07:51.620
it would load the file
in the embedded editor.

00:07:51.620 --> 00:07:55.440
Option return will load
it in a separate window.

00:07:55.720 --> 00:07:59.620
That's just how the groups
and files view works as well.

00:08:00.810 --> 00:08:04.320
Now, eventually in a software
development tool like Xcode,

00:08:04.410 --> 00:08:05.520
you hope to build.

00:08:05.670 --> 00:08:07.630
So we have the build results pane.

00:08:07.630 --> 00:08:11.660
Now, normally, if you're like me,
after you're familiar with all the

00:08:11.820 --> 00:08:16.170
steps that your product uses to build,
you probably don't need to see them

00:08:16.170 --> 00:08:18.320
all laid out as you're building.

00:08:18.320 --> 00:08:22.460
All you need to do is know that an
error warning has happened or the

00:08:22.460 --> 00:08:24.850
build failed for some of the reason.

00:08:24.960 --> 00:08:28.290
And the elements that I spoke
of earlier will give you

00:08:28.290 --> 00:08:30.680
enough information to find out.

00:08:30.700 --> 00:08:35.600
But if you do want to know the
build steps that were taken and

00:08:35.600 --> 00:08:39.360
the order in which they happened,
the order in which errors

00:08:39.360 --> 00:08:42.340
or warnings were admitted,
go to the build results pane.

00:08:42.340 --> 00:08:46.890
And it has controls to filter that
information to collapse away the build

00:08:46.890 --> 00:08:49.250
steps or hide or show the warnings.

00:08:49.260 --> 00:08:54.610
And finally, if you're wondering, well,
you know, I set this build flag,

00:08:54.860 --> 00:08:58.420
and I'm not getting results
that reflect that flag.

00:08:58.420 --> 00:09:00.680
Let me check the raw build
log and the build results.

00:09:00.700 --> 00:09:01.810
So let's say you're
looking at the build pane,

00:09:01.870 --> 00:09:02.680
which is the middle pane.

00:09:02.680 --> 00:09:05.490
You have your outline view on the top,
raw build log,

00:09:05.490 --> 00:09:07.200
and then an attached editor.

00:09:07.200 --> 00:09:10.520
Let me check the raw build log to see
the exact flags that were passed to

00:09:10.520 --> 00:09:12.700
the compiler to compile a certain file.

00:09:12.700 --> 00:09:13.980
So that's really handy.

00:09:13.980 --> 00:09:16.800
And of course, as I mentioned,
in the latest seeds,

00:09:16.800 --> 00:09:20.320
wherever you find a build pane,
you will find an attached editor so

00:09:20.320 --> 00:09:24.320
that you can go through your errors
and warnings in line and fix them.

00:09:27.000 --> 00:09:32.660
Now, if you need to search across a
project or across frameworks,

00:09:32.660 --> 00:09:35.910
across a subset of files,
you can use the batch

00:09:36.080 --> 00:09:37.780
find mechanism in Xcode.

00:09:38.040 --> 00:09:41.710
And there are powerful options that
you can use to adjust your query

00:09:42.020 --> 00:09:44.840
and adjust your search and replace.

00:09:44.910 --> 00:09:46.830
And you can bring that up,
and you can do things

00:09:46.830 --> 00:09:48.150
like specify find sets.

00:09:48.290 --> 00:09:51.910
Let's say you work on a large project,
but what you're responsible

00:09:51.910 --> 00:09:53.080
for is really a smaller set.

00:09:53.250 --> 00:09:56.700
Or maybe sometimes you want to find
tags that are only in XML files.

00:09:56.720 --> 00:09:58.500
And other times, in other types of files.

00:09:58.550 --> 00:10:00.860
You can create different find
sets and use those at your

00:10:01.000 --> 00:10:03.120
discretion when you're searching.

00:10:03.750 --> 00:10:08.800
Now, possibly one of the most important
views in Xcode is the inspector,

00:10:08.800 --> 00:10:12.280
and that's becoming
more and more important.

00:10:12.280 --> 00:10:19.400
You go to the inspector to view or edit
any fine-grained project-level settings.

00:10:19.480 --> 00:10:22.590
For example,
if I wanted to change code set settings,

00:10:22.640 --> 00:10:25.650
I would inspect the project,
which is at the very top node

00:10:25.760 --> 00:10:26.980
in the Groups and Files view.

00:10:26.980 --> 00:10:31.610
If I wanted to add an argument to
the executable when it's launched,

00:10:31.610 --> 00:10:33.160
I would inspect an executable.

00:10:33.600 --> 00:10:37.000
Now, new in the SEEDS is the ability
to do multiple selection,

00:10:37.090 --> 00:10:39.100
and this is a great time-saver.

00:10:39.420 --> 00:10:42.740
Because let's say you wanted 10
different files to be compiled

00:10:42.740 --> 00:10:44.490
with a particular build flag.

00:10:44.600 --> 00:10:48.830
You just select those 10 files in the
Groups and Files view or the Detail view,

00:10:48.830 --> 00:10:52.600
and you bring up an inspector,
and you go to the build setting,

00:10:52.600 --> 00:10:54.590
and you apply it there,
and it's applied for them

00:10:54.590 --> 00:10:55.600
all across the board.

00:10:55.600 --> 00:10:56.800
And that's just really great.

00:10:56.940 --> 00:10:57.530
Big time-saver.

00:10:57.600 --> 00:11:01.470
In addition, an inspector has a search
field at the bottom.

00:11:01.600 --> 00:11:01.910
If you have all of the files
that you want to compile,

00:11:01.910 --> 00:11:02.600
you can do that by selecting the files
in the group and the files in the group.

00:11:02.600 --> 00:11:02.600
And that's really great.

00:11:02.600 --> 00:11:02.600
Now, possibly one of the most
important views in Xcode is the

00:11:02.600 --> 00:11:02.600
ability to do multiple selection.

00:11:02.600 --> 00:11:05.820
So if you have all of the options
showing in an inspector for

00:11:05.820 --> 00:11:08.480
build settings or something,
it can be quite a few.

00:11:08.600 --> 00:11:10.600
So you can whittle that down.

00:11:10.600 --> 00:11:12.560
You don't really even need
to know all the settings.

00:11:12.640 --> 00:11:15.650
You can take some guesses and
explore the options and just

00:11:15.860 --> 00:11:18.600
type in the search field,
and it will narrow down.

00:11:18.730 --> 00:11:22.000
If you know what you're looking for,
you can actually now click in

00:11:22.100 --> 00:11:25.450
the table of the inspector and,
again, use Type Select just like you

00:11:25.450 --> 00:11:28.560
can in the Detail view and
the Groups and Files view.

00:11:28.600 --> 00:11:31.080
And it will bring you
down right to that option.

00:11:32.350 --> 00:11:37.380
Now,
you initiate many activities in Xcode.

00:11:37.680 --> 00:11:43.490
You ask it to build, you ask it to debug,
run an executable, do a batch find,

00:11:43.490 --> 00:11:44.520
et cetera.

00:11:44.750 --> 00:11:46.800
When you do that,
you're going to see something

00:11:46.800 --> 00:11:49.660
called the Tasks button get enabled.

00:11:49.720 --> 00:11:52.560
And in the lower right-hand corner,
it's going to be badged with

00:11:52.610 --> 00:11:54.230
the type of task it's doing.

00:11:54.320 --> 00:11:56.760
It might have a build
hammer if you're building,

00:11:56.760 --> 00:11:58.840
a little spyglass if
you're doing a batch find,

00:11:58.840 --> 00:12:00.450
et cetera.

00:12:00.880 --> 00:12:05.930
And if you just want to stop the last
task that you initiated for that project,

00:12:06.080 --> 00:12:08.100
you can just click that button
like it was a regular toolbar

00:12:08.100 --> 00:12:09.230
item and the task will stop.

00:12:09.280 --> 00:12:13.090
If you're running more than one
task and you want to pick and

00:12:13.180 --> 00:12:17.040
choose which one you want to stop,
then click and hold on the task button,

00:12:17.040 --> 00:12:20.490
the task list will pop down,
and you can choose which

00:12:20.490 --> 00:12:21.510
task you want to stop.

00:12:22.360 --> 00:12:26.480
Now, as I said earlier,
we have a step ahead now in

00:12:26.590 --> 00:12:29.170
Xcode as far as status goes.

00:12:29.170 --> 00:12:33.180
And that's because we have an
activity viewer now that spans

00:12:33.300 --> 00:12:34.760
all projects that you have open.

00:12:34.780 --> 00:12:36.580
It shows all tasks that are running.

00:12:36.580 --> 00:12:40.670
That includes also tasks that
Xcode is performing on your behalf,

00:12:40.670 --> 00:12:44.150
but that perhaps you didn't
directly initiate yourselves.

00:12:44.200 --> 00:12:47.290
For example,
the project may be re-indexing or it

00:12:47.290 --> 00:12:49.720
may be performing an SCM operation.

00:12:49.740 --> 00:12:51.530
You'll see all of those in line.

00:12:51.540 --> 00:12:52.040
You'll see the Xcode and the Xcode.

00:12:52.040 --> 00:12:53.040
You'll see their progress.

00:12:53.130 --> 00:12:54.940
And you'll also see
different status messages.

00:12:54.940 --> 00:12:56.880
If it's building,
you'll see which file it's building

00:12:56.940 --> 00:12:58.270
or which target it's building.

00:12:58.350 --> 00:13:02.040
If it's doing a batch find,
you'll see how many batch find, you know,

00:13:02.180 --> 00:13:05.240
hits it's actually received so far,
et cetera.

00:13:05.340 --> 00:13:08.690
And you can stop tasks directly
from this activity viewer.

00:13:08.840 --> 00:13:11.290
And when you close a project,
you'll just see that project

00:13:11.290 --> 00:13:13.040
disappear from the activity viewer.

00:13:13.040 --> 00:13:14.460
You reopen it, it reappears.

00:13:14.810 --> 00:13:18.890
Again, that's project wide if you want to
see all your tasks for all projects.

00:13:18.940 --> 00:13:21.540
Now, Xcode has a lot of preferences.

00:13:21.580 --> 00:13:23.820
And I want-- I don't dare try
to go into all of them here.

00:13:24.090 --> 00:13:27.040
I'm sure I don't even know
a quarter of them myself.

00:13:27.310 --> 00:13:33.540
But there's a small set that's very
powerful as far as your workflow goes.

00:13:33.700 --> 00:13:36.540
So let's look at these now.

00:13:36.550 --> 00:13:39.540
One of them is ability to save
and restore your window states.

00:13:39.540 --> 00:13:43.460
You're working a project, you know,
it's time to go home for dinner.

00:13:43.580 --> 00:13:44.540
You close it.

00:13:44.540 --> 00:13:45.450
You go home.

00:13:45.780 --> 00:13:48.540
After dinner, you know,
you reopen your project.

00:13:48.540 --> 00:13:51.530
And you want all the windows to
be right where you left them.

00:13:51.650 --> 00:13:54.040
Everything in the right order, et cetera.

00:13:54.040 --> 00:13:56.530
If you select these general
save and restore state

00:13:56.540 --> 00:13:59.540
settings for your workspace,
that's going to happen for you.

00:13:59.580 --> 00:14:04.880
And new in the seats that you have
from 1.5 and 2.0 is the ability

00:14:04.880 --> 00:14:08.540
to save and restore separate
editor window state as well.

00:14:08.540 --> 00:14:10.540
So that's a big time saver.

00:14:10.580 --> 00:14:14.720
Now, another thing that you can do
if you use the embedded editor

00:14:15.060 --> 00:14:19.380
a lot-- I use that a lot-- you
can select the auto open option.

00:14:19.820 --> 00:14:21.640
And if you do that,
then if there's-- if there's an

00:14:21.640 --> 00:14:24.540
embedded editor in the window that
you're selecting something else in,

00:14:24.570 --> 00:14:26.410
it's going to automatically
pop open for you.

00:14:26.560 --> 00:14:29.450
You don't have to drag it open
or double click it open yourself.

00:14:29.540 --> 00:14:32.540
So I like to set that setting.

00:14:32.690 --> 00:14:36.040
In addition,
we saw in the talk about the editor,

00:14:36.040 --> 00:14:38.030
the split controls that you can turn on.

00:14:38.040 --> 00:14:41.540
Now, you can turn these on globally
for all open projects,

00:14:41.540 --> 00:14:45.540
for your groups and files view,
as well as your separate editor window.

00:14:46.360 --> 00:14:52.140
and New in the Seeds is the ability to
split these items more than one time and

00:14:52.140 --> 00:14:55.060
to close whichever one you want to close.

00:14:55.060 --> 00:14:59.940
And finally, we've added a couple
more workspaces to Xcode,

00:14:59.940 --> 00:15:02.330
and there's a control to
select that workspace,

00:15:02.390 --> 00:15:05.370
and we'll go over that
in just a few minutes.

00:15:06.760 --> 00:15:12.680
Now, also new in the seeds that
you have in 1.5 and 2.0 is

00:15:12.680 --> 00:15:14.640
the ability to set defaults.

00:15:14.820 --> 00:15:17.800
Now, out of the box,
we have certain sets of window

00:15:17.800 --> 00:15:21.840
positioning and sizing for all
the different windows in Xcode.

00:15:21.910 --> 00:15:24.730
But we're all different here,
and we all like it a different way.

00:15:24.840 --> 00:15:28.090
So you can position your
windows the way you want them,

00:15:28.090 --> 00:15:31.760
and then go up to the Window menu,
pick the defaults menu item,

00:15:31.780 --> 00:15:35.840
and say to Xcode, all of my windows,
I want you to use this for

00:15:35.840 --> 00:15:38.600
any other projects I open new.

00:15:38.600 --> 00:15:42.460
In addition, once you've done that once,
you'll see another button on that dialog

00:15:42.460 --> 00:15:44.300
that says restore to user defaults.

00:15:44.490 --> 00:15:46.260
That's the setting you just set.

00:15:46.260 --> 00:15:50.060
So you can go back to previously opened
projects and restore to that setting.

00:15:50.120 --> 00:15:51.850
Let's say you move things around,
and you're like, OK,

00:15:51.850 --> 00:15:53.260
I want to get back to my best setting.

00:15:53.260 --> 00:15:54.190
You can do that.

00:15:54.280 --> 00:15:56.670
You can also restore to factory settings.

00:15:57.010 --> 00:16:01.670
Also, for your separate editor windows,
you can choose what size,

00:16:01.670 --> 00:16:05.320
status bar visibility, et cetera,
for the separate editor windows

00:16:05.330 --> 00:16:06.280
by doing the same thing.

00:16:06.280 --> 00:16:12.920
You have a separate editor window open,
and you just go up to Window, Defaults,

00:16:12.980 --> 00:16:18.530
and make that your default for
the separate editor windows.

00:16:19.790 --> 00:16:24.050
Now, as I mentioned,
we have two new workspaces in Xcode 2.0.

00:16:24.420 --> 00:16:30.350
We still have the default workspace that
we came up with and introduced in 1.0,

00:16:30.350 --> 00:16:35.230
plus many workflow refinements
and a few pixel refinements,

00:16:35.260 --> 00:16:38.970
but pretty much the same thing in 1.5.

00:16:38.980 --> 00:16:41.670
But in 2.0, we have two additional ones.

00:16:42.270 --> 00:16:46.560
Now, we all work differently,
and we also work in different situations.

00:16:46.700 --> 00:16:51.180
We may prefer to work one way,
but because we find ourselves having

00:16:51.180 --> 00:16:54.680
to deal with 10 projects at some point,
or a very small screen,

00:16:54.680 --> 00:16:56.610
or we're lucky enough to
have a 30-inch screen,

00:16:56.680 --> 00:17:00.680
you may want to use Xcode differently.

00:17:00.800 --> 00:17:04.680
You now have these three workspaces
in Xcode 2.0 to choose from.

00:17:04.680 --> 00:17:08.590
In addition,

00:17:08.780 --> 00:17:11.130
All of these have exactly
the same functionality.

00:17:11.230 --> 00:17:13.340
If you learn, for example,
the keystrokes in one,

00:17:13.340 --> 00:17:16.420
you could close your eyes,
switch workspaces, close your eyes,

00:17:16.470 --> 00:17:17.380
and do the same keystrokes.

00:17:17.410 --> 00:17:18.900
The same exact thing would happen.

00:17:18.900 --> 00:17:21.940
It would just happen appropriately
for whichever workspace you have.

00:17:22.000 --> 00:17:28.540
So, as I said,
Xcode 1.2++ is the default workspace.

00:17:28.540 --> 00:17:32.300
And this was always focused on
providing a separate window for

00:17:32.300 --> 00:17:34.400
each task you were performing.

00:17:34.950 --> 00:17:37.060
You were building,
you were looking at the run log,

00:17:37.180 --> 00:17:40.700
you were editing, you were debugging,
you were editing the project,

00:17:40.840 --> 00:17:42.520
the targets, executables, etc.

00:17:42.580 --> 00:17:44.640
And in its project window,
it had a groups of

00:17:44.750 --> 00:17:47.140
files view on the left,
a detail view on the right,

00:17:47.140 --> 00:17:48.570
and an embedded editor.

00:17:48.790 --> 00:17:52.460
Now, one of the new workspaces
is the all-in-one workspace.

00:17:52.470 --> 00:17:54.880
And this is designed to
reduce window clutter.

00:17:54.880 --> 00:17:57.660
Again, if you're in that situation
where you have 10 projects open,

00:17:57.660 --> 00:18:02.960
if you were using the default workspace,
you would have quite a few windows open.

00:18:02.960 --> 00:18:04.520
That would be very difficult to manage.

00:18:04.540 --> 00:18:09.940
You also may simply prefer to
have the all-in-one form factor.

00:18:10.030 --> 00:18:12.040
Most tools out there have all-in-one.

00:18:12.040 --> 00:18:13.750
Project Builder had all-in-one.

00:18:13.860 --> 00:18:16.150
So definitely there's
an audience for that,

00:18:16.580 --> 00:18:19.880
and you have that option now.

00:18:19.880 --> 00:18:24.320
Now, the all-in-one workspace
separates groups of core views,

00:18:24.320 --> 00:18:28.260
those core elements we went over earlier,
into pages.

00:18:28.290 --> 00:18:30.180
Pages are based on tasks.

00:18:30.190 --> 00:18:32.530
So you have a project editing page.

00:18:32.700 --> 00:18:36.900
You have a building and running page,
and you have a debugging page.

00:18:36.940 --> 00:18:40.100
There's a page control in the
upper left-hand corner of the

00:18:40.100 --> 00:18:42.000
toolbar to navigate between them.

00:18:42.000 --> 00:18:44.570
But if I'm on, say,
the project editing page,

00:18:44.570 --> 00:18:47.840
and I want to see the build pane,
I do the same thing I always did.

00:18:47.840 --> 00:18:50.080
Shift-Command-B,
and the build pane will come forward,

00:18:50.100 --> 00:18:55.000
just like the build pane will come
forward in the default workspace.

00:18:55.720 --> 00:19:02.060
And lastly, each page in the all-in-one
workspace has a custom toolbar,

00:19:02.060 --> 00:19:03.460
and you can refine it further.

00:19:03.460 --> 00:19:05.770
So the debug page has
all the debug buttons,

00:19:05.950 --> 00:19:08.280
obviously, as you'd expect, for example.

00:19:08.280 --> 00:19:12.030
And lastly,
we have the condensed workspace,

00:19:12.030 --> 00:19:15.940
and this really caters to
those coming from Codeware,

00:19:15.940 --> 00:19:16.540
for example.

00:19:16.540 --> 00:19:20.100
It's basically the same
as the default workspace,

00:19:20.100 --> 00:19:23.710
but the project window is
broken into two pieces.

00:19:24.570 --> 00:19:27.540
You have the main project
window with three tabs:

00:19:27.770 --> 00:19:30.440
your files tab,
your targets and executables tabs,

00:19:30.620 --> 00:19:32.180
and a tab with other smart groups.

00:19:32.240 --> 00:19:35.150
And then you have a detail
window with your detail view and

00:19:35.150 --> 00:19:36.880
another groups and files view.

00:19:36.940 --> 00:19:40.180
And earlier,
when I mentioned that you could

00:19:40.180 --> 00:19:44.860
hide and show different smart groups
in your groups and files view,

00:19:44.860 --> 00:19:46.530
that's really handy in
the condensed workspace,

00:19:46.640 --> 00:19:49.510
because you have those three tabs,
so you can arrange things

00:19:49.510 --> 00:19:51.020
the way you'd like them.

00:19:52.230 --> 00:19:57.260
And now I just want to take you on a
little drive around the three workspaces,

00:19:57.260 --> 00:20:00.940
show you a few things,
and then I'll sum up and I'll

00:20:00.940 --> 00:20:03.290
hand it over to the next speaker.

00:20:06.770 --> 00:20:10.300
So when you open a project,
it's going to look basically like this

00:20:10.410 --> 00:20:14.260
when you first get Xcode 1.5 or 2.0.

00:20:14.280 --> 00:20:17.890
In the lower right,
I have the activity window

00:20:17.900 --> 00:20:19.460
that I was speaking of earlier.

00:20:19.470 --> 00:20:23.340
And if I would do something like build,
it would show build status, et cetera.

00:20:23.340 --> 00:20:26.230
Now, I have my groups of
files view on the left,

00:20:26.230 --> 00:20:29.480
the detail view on the right,
and an embedded editor in

00:20:29.700 --> 00:20:31.770
the lower right-hand corner.

00:20:31.780 --> 00:20:33.860
I can view different files there.

00:20:34.420 --> 00:20:38.080
We have a classic splitter now,
and you can double-click on those

00:20:38.100 --> 00:20:44.770
like you can in Mail to collapse
them to the left or downward.

00:20:45.020 --> 00:20:47.080
and you can re-expand them.

00:20:47.080 --> 00:20:49.780
And we've changed a bit,
for those who are

00:20:49.780 --> 00:20:52.410
already used to this UI,
the behavior of the

00:20:52.580 --> 00:20:54.800
editing toolbar button.

00:20:54.800 --> 00:20:58.200
Because previously it behaved
like our splitters behave now.

00:20:58.230 --> 00:21:00.940
And we found that most of the
people who were using that,

00:21:00.940 --> 00:21:04.440
they were thinking to themselves,
I want to focus on the editor.

00:21:04.650 --> 00:21:09.460
So now when you click on
the editor toolbar item,

00:21:09.460 --> 00:21:13.660
it will fully expand the editor or
bring it back to its previous state.

00:21:13.660 --> 00:21:16.600
Very subtle difference,
but for those who use it,

00:21:16.600 --> 00:21:20.940
I'm sure you'll find it's a
worthy addition to the UI.

00:21:20.940 --> 00:21:25.740
Now let's say, for example,
that you did have it fully expanded

00:21:25.740 --> 00:21:30.080
and you wanted to use a new feature,
a new keystroke,

00:21:30.080 --> 00:21:35.780
and workflow behavior that's a
favorite of mine in 1.5 and 2.0.

00:21:35.780 --> 00:21:38.460
You wanted to go directly to the
detail view and start searching.

00:21:38.460 --> 00:21:40.970
Instead of dragging the splitter down,
then clicking the search

00:21:41.150 --> 00:21:44.580
field and all those things,
now you can-- by default,

00:21:44.640 --> 00:21:46.980
you just do Command-Option-F.

00:21:47.040 --> 00:21:50.020
It will expose the detail view,
however it was hidden,

00:21:50.080 --> 00:21:56.360
put your cursor in the search field,
and you're ready to go.

00:21:56.490 --> 00:21:59.750
So that is a bit about
the default workspace.

00:21:59.830 --> 00:22:03.270
And now I want to go and take
a look at some of the others.

00:22:03.650 --> 00:22:05.600
Let me close this workspace.

00:22:05.690 --> 00:22:09.840
To switch workspaces,
you need to close any open projects.

00:22:09.900 --> 00:22:14.030
And I'll go to Preferences,
and I'll select the All-in-One workspace.

00:22:14.110 --> 00:22:16.910
And then I'll just reopen my project.

00:22:17.160 --> 00:22:18.400
And this is the all-in-one workspace.

00:22:18.400 --> 00:22:21.730
It looks very similar,
especially at a distance.

00:22:21.790 --> 00:22:24.270
But you'll notice a couple
of different things.

00:22:24.520 --> 00:22:27.660
First of all, there's the page control in
the upper left-hand corner.

00:22:27.720 --> 00:22:30.960
And the detail view is being replaced
with a tab that has the detail view,

00:22:31.050 --> 00:22:33.960
project find, and as well, an SEM pane.

00:22:34.260 --> 00:22:36.870
Then you have the embedded editor,
of course.

00:22:37.080 --> 00:22:44.740
Now, all of the tab views in 1.5 and
2.0 now for the project window--

00:22:45.020 --> 00:22:46.930
are drag and drop aware.

00:22:47.070 --> 00:22:52.550
So if I wanted to drag an
item from one page to another,

00:22:52.870 --> 00:22:58.940
I can just drag it over those
pages and it will automatically

00:22:59.930 --> 00:23:03.360
switch to wherever I'm dragging.

00:23:03.880 --> 00:23:09.040
You'll see how that's used even more
benefit in the condensed workspace.

00:23:09.190 --> 00:23:12.260
So let's take a quick look at that now.

00:23:12.260 --> 00:23:14.070
Let's close our project again.

00:23:14.300 --> 00:23:18.640
Go right to the condensed
project workspace.

00:23:19.290 --> 00:23:21.130
Select that.

00:23:21.180 --> 00:23:24.220
Open our project back up.

00:23:24.310 --> 00:23:28.540
Here we see it by default
opens in the far right corner.

00:23:28.540 --> 00:23:30.580
It has the three tab views.

00:23:30.620 --> 00:23:34.580
And as I said, it's basically the same
as the default workspace.

00:23:34.610 --> 00:23:38.760
But let's say, for example,
that I wanted to add a file in

00:23:38.760 --> 00:23:44.490
my project tree to a particular
build phase of a particular target.

00:23:44.640 --> 00:23:48.880
I'm in the Files tab right now,
so I can select a file.

00:23:48.890 --> 00:23:51.340
And I would go over the Targets tab.

00:23:51.350 --> 00:23:55.040
Then I would go under Targets
and go under a particular

00:23:55.130 --> 00:23:56.540
target that I had opened.

00:23:56.640 --> 00:23:59.210
And then I would go under
Build Phase and I would just

00:23:59.210 --> 00:24:01.540
drop it into that build phase.

00:24:01.610 --> 00:24:03.500
So it's very, very easy to use.

00:24:03.520 --> 00:24:06.470
And of course, as I said before,
let's say, for example,

00:24:06.560 --> 00:24:12.930
that under Files I also wanted to
have a different smart group showing.

00:24:13.020 --> 00:24:13.540
I don't know.

00:24:13.540 --> 00:24:15.860
Let's say I wanted to
have my bookmark showing.

00:24:15.960 --> 00:24:18.560
So I could show that smart group as well.

00:24:18.560 --> 00:24:22.110
you can do that anywhere you
find a Groups and Files view.

00:24:23.470 --> 00:24:29.920
And let me just open up
one more project here.

00:24:30.710 --> 00:24:34.600
As you can see,
this is a freshly opened project,

00:24:34.780 --> 00:24:38.350
so it's indexing,
and I'm building and running.

00:24:38.470 --> 00:24:41.780
So you see the status of
the two different projects,

00:24:41.860 --> 00:24:44.600
and you can collapse them, etc.

00:24:44.600 --> 00:24:50.560
So with that,
let me go back to the slides.

00:24:54.370 --> 00:24:57.920
And if you could,
I'd like you to remember three things.

00:24:57.920 --> 00:25:00.320
Actually, a fourth thing that
I thought of earlier today,

00:25:00.420 --> 00:25:01.620
and it's not on the slide.

00:25:01.620 --> 00:25:04.120
But the first three
things are when you get,

00:25:04.670 --> 00:25:11.170
especially Xcode 2.0 on your Tiger CD,
take a look at the different workspaces.

00:25:11.190 --> 00:25:14.760
Because each one fits our
personalities a little differently,

00:25:14.760 --> 00:25:18.640
and it can really boost your
productivity if you pick the right one.

00:25:19.420 --> 00:25:22.940
And next, don't forget those workflow
preferences that we talked about.

00:25:22.940 --> 00:25:26.320
They're on the General Preferences pane,
and they'll really add to your workflow.

00:25:26.320 --> 00:25:30.210
And third, you might want to define your
own window defaults that fit

00:25:30.330 --> 00:25:32.050
your needs a little better.

00:25:32.060 --> 00:25:34.790
And then fourth,
that fourth thing that's not on here,

00:25:34.870 --> 00:25:37.120
it's again the question
I get asked the most,

00:25:37.260 --> 00:25:39.980
which is how do I export my
headers public or private?

00:25:39.980 --> 00:25:43.940
Remember, you click on a target,
you see the target detail view,

00:25:44.030 --> 00:25:47.600
and you use the role column in the
target detail view to change your

00:25:47.970 --> 00:25:49.400
headers to be public or private.

00:25:49.400 --> 00:25:53.000
So with that,
I'm going to turn it over to Dave Ewing,

00:25:53.000 --> 00:25:57.420
who's going to talk about
CodeSense and source code managing.

00:25:57.420 --> 00:25:58.280
Thanks, Dave.

00:25:58.280 --> 00:25:59.320
Thanks, Steve.

00:26:05.440 --> 00:26:09.140
Well, Steve's been talking to you a
lot about getting around Xcode.

00:26:09.140 --> 00:26:14.130
I'm going to talk about how you
get around in your code in Xcode.

00:26:15.690 --> 00:26:18.320
So Xcode has a number
of technologies in it,

00:26:18.330 --> 00:26:22.190
and together we like to
call that code sense.

00:26:22.800 --> 00:26:27.140
So it's basically symbolic
assistance for your project.

00:26:27.200 --> 00:26:30.650
We parse and index your source code,
and then with that information,

00:26:30.750 --> 00:26:33.730
we can help you move around and
give you assistance in your project.

00:26:33.740 --> 00:26:38.590
So we have a number of
features within Xcode for this.

00:26:38.710 --> 00:26:40.140
We have a project symbol smart group.

00:26:40.210 --> 00:26:41.580
You saw smart groups a little bit.

00:26:41.660 --> 00:26:43.740
I'll show you a little bit
more of that in a few minutes.

00:26:43.820 --> 00:26:45.930
We have a standard class browser.

00:26:45.930 --> 00:26:50.600
There's a number of navigation techniques
you can use inside of an editor.

00:26:51.800 --> 00:26:55.590
And finally,
we'll talk some about code completion.

00:26:57.390 --> 00:27:00.400
So first,
the project symbols smart group.

00:27:00.550 --> 00:27:02.760
As I said, it's a smart group.

00:27:02.900 --> 00:27:08.080
It's sitting in the bottom of the
Groups and Files tree over there.

00:27:08.080 --> 00:27:10.210
When you click on that,
you show all the items that

00:27:10.210 --> 00:27:14.540
are defined in your project,
all the symbols in your project.

00:27:14.540 --> 00:27:17.270
And like any other smart group,
you can filter the details.

00:27:17.520 --> 00:27:19.650
So you can filter by
the name of the symbol,

00:27:19.760 --> 00:27:22.600
the type of the symbol,
or the source file in which

00:27:22.680 --> 00:27:24.170
the symbol is defined.

00:27:27.730 --> 00:27:30.360
And of course, we have a class browser.

00:27:30.360 --> 00:27:33.760
On the left-hand side is
showing a hierarchy of classes,

00:27:33.760 --> 00:27:38.500
and above the editor pane,
there's a list of the methods and

00:27:38.660 --> 00:27:40.410
fields for the selected class.

00:27:41.020 --> 00:27:45.840
In the class list,
you can either show that hierarchically

00:27:45.840 --> 00:27:49.690
or just show a straight flat list
of all the classes in the project.

00:27:49.830 --> 00:27:52.530
And of course,
you can show just the project

00:27:52.530 --> 00:27:57.090
classes or the project classes
in any framework classes that

00:27:57.240 --> 00:27:59.720
you've imported in your project.

00:28:00.190 --> 00:28:04.470
And for classes that are
defined like in Cocoa,

00:28:04.780 --> 00:28:07.100
where we have documentation
on the system,

00:28:07.100 --> 00:28:11.490
you have quick access to that
documentation right in the class browser.

00:28:16.710 --> 00:28:21.550
Okay, in the text editor of Xcode,
there's a navigation bar at the top

00:28:21.550 --> 00:28:27.840
of every editor pane that gives you
access to functions within that file.

00:28:27.840 --> 00:28:31.380
You can actually switch back and
forth between files if you're editing

00:28:31.380 --> 00:28:33.500
multiple files in the same pane,
too.

00:28:33.500 --> 00:28:37.040
There's a counterparts button that
takes you between a source file and

00:28:37.050 --> 00:28:41.550
a header file that match by name,
of course.

00:28:42.280 --> 00:28:45.880
There's also a pop-up list of
imported files or included files.

00:28:45.960 --> 00:28:51.690
And there's two other pop-up lists
for breakpoints in the current file or

00:28:51.780 --> 00:28:53.780
bookmarks that are in the current file.

00:28:53.780 --> 00:28:56.850
And then two of the best ways
to get around in your code

00:28:56.850 --> 00:29:01.050
are command double-click,
which when you command double-click

00:29:01.050 --> 00:29:05.460
on a word in your file,
will do a lookup in our index

00:29:05.670 --> 00:29:09.510
and take you directly to the
definition of what you clicked on.

00:29:09.540 --> 00:29:13.550
Or, if there's multiple definitions,
it will give you a pop-up

00:29:13.720 --> 00:29:17.590
list and allow you to choose
which one you want to go to.

00:29:18.340 --> 00:29:20.110
And finally,
there's also Option Double Click,

00:29:20.220 --> 00:29:24.410
which will do a documentation
search for that symbol.

00:29:28.740 --> 00:29:30.400
So code completion.

00:29:30.470 --> 00:29:32.710
We have all this information
about your project,

00:29:32.790 --> 00:29:38.030
and when you're editing your code,
sometimes it would be really nice

00:29:38.030 --> 00:29:41.770
if we just helped you enter the
text that you're trying to type.

00:29:41.970 --> 00:29:43.860
Well,
that's what code completion does for you.

00:29:43.980 --> 00:29:47.200
It's context sensitive,
so it knows what method you're in.

00:29:47.200 --> 00:29:49.680
It knows what's available
to you at that point.

00:29:50.340 --> 00:29:53.180
You can set a number of
preferences for how it works.

00:29:53.180 --> 00:29:56.590
You can have it set up to
automatically suggest what it

00:29:56.600 --> 00:30:01.290
thinks you want to type in,
or you can have it brought up only

00:30:01.360 --> 00:30:04.500
on demand by hitting a command key.

00:30:04.500 --> 00:30:08.070
Actually, option escape is the
default key for that.

00:30:08.100 --> 00:30:12.610
When it inserts text,
if it's a method or function call,

00:30:12.610 --> 00:30:18.460
it can insert argument placeholders
for the arguments to that method.

00:30:20.140 --> 00:30:23.780
And when you bring up a list,
you can actually have the list

00:30:23.780 --> 00:30:27.570
narrowed down to only those items
that match what you've typed so far.

00:30:27.650 --> 00:30:29.810
I find that very convenient myself.

00:30:29.940 --> 00:30:33.060
A number of implementations of
code completion on other systems

00:30:33.180 --> 00:30:35.580
actually always give you this big,
huge list.

00:30:35.760 --> 00:30:38.620
While it takes you to the
one that matches closest,

00:30:38.750 --> 00:30:40.540
there's still a huge
number of things there,

00:30:40.540 --> 00:30:42.260
and it's sometimes hard
to find your way around.

00:30:42.260 --> 00:30:47.920
So in the seeds that you guys have,
the 1.5 and 2.0 seeds,

00:30:47.970 --> 00:30:49.980
you'll find that code
completion's a bit faster.

00:30:50.030 --> 00:30:51.970
It's a bit smarter.

00:30:51.990 --> 00:30:55.210
It has a better idea of where
it really is and gives you a

00:30:55.220 --> 00:30:57.980
better list of suggestions.

00:30:57.980 --> 00:31:01.680
And of course,
we now have some support for Java.

00:31:01.980 --> 00:31:08.750
With that, I'm going to give you a
demo of CodeSense here.

00:31:12.000 --> 00:31:13.950
Let's go ahead and
switch over to my user.

00:31:14.000 --> 00:31:21.540
And again, we have a parent sample.

00:31:21.540 --> 00:31:26.130
The first thing I want to show you
is the Project Symbol Smart Group.

00:31:26.140 --> 00:31:28.310
And that's down at the bottom.

00:31:30.910 --> 00:31:33.450
So we click on that and we
can see that we have quite a

00:31:33.460 --> 00:31:36.130
few symbols in this project.

00:31:36.260 --> 00:31:39.430
Clicking on them takes
you directly to the code.

00:31:40.610 --> 00:31:42.600
And you can search.

00:31:42.740 --> 00:31:47.500
Let's search by the symbol
name and just type about.

00:31:47.500 --> 00:31:51.500
So let's see.

00:31:56.310 --> 00:31:58.750
So one thing you'll notice
for you C++ developers that

00:31:58.790 --> 00:32:02.490
have used Xcode in the past,
it's actually showing the constructors

00:32:02.490 --> 00:32:09.310
and destructors for the C++ code,
which is a nice change for you.

00:32:11.620 --> 00:32:16.680
Okay, next I'd like to bring up the class
browser here under the project menu.

00:32:18.530 --> 00:32:21.580
I'm going to go ahead and option click
on these to show the full hierarchy.

00:32:21.580 --> 00:32:27.940
This is also another nice thing
that's changed in this version.

00:32:27.940 --> 00:32:31.320
Of course, C++ support,
we didn't always get it right here.

00:32:31.490 --> 00:32:34.650
Here you'll see the actual full
hierarchy of the classes in this example.

00:32:34.800 --> 00:32:37.570
So that's a nice change for you all.

00:32:37.710 --> 00:32:42.200
So we can click around and it takes you
right to the declarations of the symbols.

00:32:42.200 --> 00:32:47.500
If we click on methods up here,
it takes you to those declarations.

00:32:47.500 --> 00:32:52.110
One thing that's important to know is
if you option click on these items,

00:32:52.210 --> 00:32:55.420
it takes you to the
definition of those symbols.

00:32:55.420 --> 00:32:57.490
So that's something that's
kind of hidden and people have

00:32:57.490 --> 00:32:59.800
a hard time finding it first.

00:33:01.700 --> 00:33:06.780
Finally, I mentioned before that you can

00:33:07.500 --> 00:33:28.200
[Transcript missing]

00:33:30.650 --> 00:33:33.420
All right,
so I also wanna show you how to

00:33:33.570 --> 00:33:34.980
configure some of the options here.

00:33:34.980 --> 00:33:36.320
There's quite a few options.

00:33:36.480 --> 00:33:41.090
So I'll bring that panel up.

00:33:42.560 --> 00:33:49.030
So the options here in this list
are just four different option

00:33:49.240 --> 00:33:51.080
sets that we provide for you.

00:33:51.080 --> 00:33:53.990
You can add new option sets,
and you can actually change

00:33:53.990 --> 00:33:55.560
the option sets that are here.

00:33:55.560 --> 00:33:59.610
So one thing that might confuse you,
so don't do this,

00:33:59.740 --> 00:34:06.120
is click on the flat list here,
and it's still named hierarchy all lists.

00:34:06.310 --> 00:34:08.650
Now that'll confuse you because
it won't do what you expect.

00:34:08.870 --> 00:34:12.280
If you want to show a
new group of options,

00:34:12.280 --> 00:34:15.120
let's go ahead and add a new one.

00:34:15.120 --> 00:34:20.370
And we'll just call it My New Option Set.

00:34:23.760 --> 00:34:27.690
And let's go ahead and turn on
showing of inherited members,

00:34:27.690 --> 00:34:30.260
and I'm also going to
show method and data,

00:34:30.260 --> 00:34:33.980
so the methods and fields for this class.

00:34:34.080 --> 00:34:38.230
Up here in the top methods list,
you'll see that some of these,

00:34:38.230 --> 00:34:41.580
I'm not sure how well that shows up,
but that's shown in gray there.

00:34:41.580 --> 00:34:45.270
That means those members are
inherited from a superclass.

00:34:45.360 --> 00:34:49.340
And down at the bottom of the list,
you'll see that fields show up,

00:34:49.340 --> 00:34:53.340
and in fact, the fields for superclasses
also show up there.

00:34:56.790 --> 00:34:59.100
Okay,
well let's go ahead and look just at

00:34:59.100 --> 00:35:03.730
a editor window and show some of the
features in the editor window itself.

00:35:05.170 --> 00:35:08.050
So at the top of the window here,
this is called the navigation

00:35:08.050 --> 00:35:09.530
bar across the top of the editor.

00:35:09.670 --> 00:35:13.920
This is available in any editor
wherever you are inside Xcode.

00:35:13.920 --> 00:35:17.390
The first two buttons on the
left here are the left and

00:35:17.400 --> 00:35:18.750
right buttons for your history.

00:35:18.800 --> 00:35:21.370
If you've edited more than
one file in the same view,

00:35:21.540 --> 00:35:24.490
you can click those buttons
to move back and forth.

00:35:24.560 --> 00:35:28.560
The next button is a pop-up
that shows you all the files

00:35:28.630 --> 00:35:30.740
that you've edited in that view.

00:35:30.740 --> 00:35:34.980
Here when you're in a separate editor,
you'll normally only have one file there.

00:35:35.710 --> 00:35:38.230
The next thing is what we
call the function pop-up,

00:35:38.270 --> 00:35:40.420
and it lists all the functions, methods.

00:35:41.230 --> 00:35:43.560
Actually,
it can show all sorts of things:

00:35:43.910 --> 00:35:51.300
macro definitions, declarations,
pragma marks, warnings, you know,

00:35:51.400 --> 00:35:56.010
pound warnings, those sorts of things.

00:35:56.620 --> 00:36:00.640
Next over here on the right,
there's a bookmarks menu.

00:36:00.720 --> 00:36:01.640
So you can set a bookmark.

00:36:01.640 --> 00:36:04.510
Let's see.

00:36:05.470 --> 00:36:08.460
Find, add to bookmarks.

00:36:08.470 --> 00:36:10.440
And it just goes ahead and adds it there.

00:36:10.490 --> 00:36:14.260
So you now have a quick bookmarks list.

00:36:14.260 --> 00:36:16.490
It can also have a breakpoint.

00:36:16.590 --> 00:36:18.300
So if we go and set some
breakpoints in here,

00:36:18.300 --> 00:36:21.580
we now have a pop-up that
shows the breakpoints.

00:36:23.530 --> 00:36:26.500
This next button is called
the Counterparts button.

00:36:26.530 --> 00:36:29.000
Now the Counterparts button
normally switches you between your

00:36:29.060 --> 00:36:30.500
header file and your source file.

00:36:30.500 --> 00:36:31.370
I'll go ahead and do that.

00:36:31.880 --> 00:36:36.490
And it takes you right
to the header file.

00:36:37.020 --> 00:36:38.200
So that's pretty nice.

00:36:38.230 --> 00:36:39.780
That's convenient.

00:36:39.840 --> 00:36:43.300
But you know, sometimes you want to focus
in on something in particular.

00:36:43.300 --> 00:36:47.100
So I'm here in the header file,
and if I put my cursor on the

00:36:47.170 --> 00:36:52.700
declaration for the run modal method,
if I option click on this button,

00:36:52.730 --> 00:36:55.260
it'll go right to that
definition for that.

00:36:55.300 --> 00:37:01.020
And the same goes the other direction,
of course.

00:37:01.190 --> 00:37:04.000
If we option click, we'll go right back.

00:37:04.000 --> 00:37:06.560
Oh, actually that one we
didn't go right back to.

00:37:06.560 --> 00:37:09.940
Well, anyhow,
we also have an imports pop-up menu,

00:37:09.950 --> 00:37:13.180
and you can go to any of the
imported files for a file.

00:37:13.180 --> 00:37:18.140
When you're inside of a header file,
it not only shows you your current

00:37:18.210 --> 00:37:21.980
file and the files it imports,
it also shows all the

00:37:21.980 --> 00:37:25.290
files that import it,
which looks like pretty much

00:37:25.360 --> 00:37:27.070
every file in this project.

00:37:27.160 --> 00:37:29.520
Since that's the prefix file,
that makes a lot of sense.

00:37:33.190 --> 00:37:35.030
Okay,
the last thing I want to show you here

00:37:35.030 --> 00:37:38.300
is something that's somewhat hidden.

00:37:38.300 --> 00:37:41.220
If you look into your key
bindings preferences in Xcode,

00:37:41.380 --> 00:37:42.600
you may have run into this.

00:37:42.720 --> 00:37:47.160
But it turns out that you can get
access to all the menus in the file

00:37:47.200 --> 00:37:50.120
navigator right from the keyboard.

00:37:50.120 --> 00:37:52.710
And by default,
we bind Control-2 to go to

00:37:52.710 --> 00:37:55.920
the function pop-up menu,
and then you can just use the

00:37:56.020 --> 00:37:57.630
keys to move around there.

00:37:57.640 --> 00:38:01.470
So you don't ever have to use the
mouse to move between methods there.

00:38:02.540 --> 00:38:07.720
Control-3, I think, is bound to the...

00:38:08.140 --> 00:38:10.000
imports pop-up.

00:38:10.140 --> 00:38:14.910
And four and five are bound to the
bookmarks and breakpoints pop-ups too.

00:38:17.090 --> 00:38:19.560
Okay, last but not least here,
I want to give you a quick

00:38:20.000 --> 00:38:23.100
show of code completion here.

00:38:23.120 --> 00:38:26.980
If we go ahead and
enter in some new text.

00:38:30.100 --> 00:38:31.560
Let's see.

00:38:31.630 --> 00:38:36.480
So, here I've typed in quit A,
and it's underlined what's there.

00:38:36.480 --> 00:38:39.720
The underline indicates that
it knows that there's more,

00:38:39.720 --> 00:38:42.510
that there's an ambiguous completion,
so there's more than one

00:38:42.510 --> 00:38:44.020
item that it can complete to.

00:38:44.070 --> 00:38:49.540
The two letters app show that it
knows that everything that starts

00:38:49.540 --> 00:38:52.480
with quit A also has quit app in it.

00:38:52.480 --> 00:38:57.480
You can hit option
escape to complete that.

00:38:57.480 --> 00:39:00.600
At this point,
you can also hit it again bring up the

00:39:00.650 --> 00:39:03.180
list of all the possible completions.

00:39:04.120 --> 00:39:09.880
So let's go ahead and select the lower
item there and hit tab to continue it.

00:39:09.970 --> 00:39:12.960
So we inserted an
argument placeholder here.

00:39:12.980 --> 00:39:16.000
This shows you that this
method takes one argument,

00:39:16.000 --> 00:39:17.470
which is a window ref type.

00:39:17.710 --> 00:39:21.220
No surprise since it's
on the line above too.

00:39:21.240 --> 00:39:26.590
Now there's a couple of ways
you can go to the arguments.

00:39:26.900 --> 00:39:31.240
The common way is control slash
will actually take you to the

00:39:31.240 --> 00:39:32.400
next argument placeholder.

00:39:32.500 --> 00:39:37.600
So if you've inserted a method
with multiple arguments,

00:39:37.630 --> 00:39:40.240
type something in,
then just hit control slash.

00:39:40.240 --> 00:39:44.630
It'll go to the next argument and let
you type that one to fill that in.

00:39:45.060 --> 00:39:48.340
Another thing you can do,
you can also double click on

00:39:48.810 --> 00:39:51.650
the angle brackets and it'll
select all that text for you.

00:39:51.940 --> 00:39:56.190
So let's go ahead and
insert the rest of it.

00:39:56.790 --> 00:39:58.400
Get Window Ref.

00:39:58.660 --> 00:40:01.700
And this has a number of items here.

00:40:01.700 --> 00:40:03.700
Well, let's keep typing.

00:40:04.490 --> 00:40:06.810
And insert it.

00:40:09.130 --> 00:40:11.820
So there you go, code completion.

00:40:12.000 --> 00:40:14.240
I want to show you a little bit
about the code completion prefs.

00:40:14.360 --> 00:40:17.080
There's a number of options you
can configure for code completion.

00:40:17.110 --> 00:40:21.340
You can set them in the preferences
for all of your projects,

00:40:21.430 --> 00:40:25.480
or you can set them on a per
project basis by selecting the first

00:40:25.580 --> 00:40:29.990
item in the groups and file list,
the top item, the project icon,

00:40:30.080 --> 00:40:32.000
and doing get info on that.

00:40:32.060 --> 00:40:34.940
Or you can double click on that icon
actually to bring up the same panel.

00:40:34.940 --> 00:40:38.970
But here I have it set to
automatically suggest a matching item.

00:40:39.000 --> 00:40:42.260
So that's the part that
does the underline.

00:40:42.260 --> 00:40:46.980
If you have this next option set,
it'll always bring up a list.

00:40:46.980 --> 00:40:50.220
Rather than doing the underline,
it'll bring up a list there.

00:40:50.220 --> 00:40:52.680
This is similar to how it
works in Visual Studio,

00:40:52.680 --> 00:40:56.740
a number of other applications you may
have experienced code completion in.

00:40:56.970 --> 00:41:00.400
And finally, at the bottom,
you can either insert just the simple

00:41:00.850 --> 00:41:03.730
name of what you've been typing,
or for methods,

00:41:03.730 --> 00:41:06.600
it'll actually insert the placeholders.

00:41:06.600 --> 00:41:08.980
Over here on the right,
you can see the code completion prefs.

00:41:08.980 --> 00:41:11.490
Over here on the right is some
configuration of the function pop-up.

00:41:11.610 --> 00:41:13.740
So I actually like to
hide most of the stuff.

00:41:13.770 --> 00:41:16.430
This isn't how my machine
would normally be set up.

00:41:16.710 --> 00:41:21.230
But often when you're in a header file,
you end up having these huge, huge lists,

00:41:21.230 --> 00:41:23.920
and I just don't find
that quite so useful.

00:41:23.920 --> 00:41:29.360
Okay, last thing I'm going to show you,
I'm going to mention here.

00:41:29.360 --> 00:41:31.610
We've sped up indexing quite a bit.

00:41:31.610 --> 00:41:34.950
I mean, in the Java case,
indexing the system JDK class

00:41:35.060 --> 00:41:38.760
files is about ten times
faster than it used to be.

00:41:38.960 --> 00:41:42.660
But sometimes that's
just not fast enough.

00:41:42.720 --> 00:41:46.860
And it does seem silly that we
always index the system header

00:41:46.980 --> 00:41:49.620
files every time you open a project,
a new project, that is.

00:41:49.740 --> 00:41:53.640
So there's something
called index templates,

00:41:53.650 --> 00:41:55.680
and I'm going to just bring
up a finder window here.

00:41:56.260 --> 00:41:58.630
Inside,

00:41:59.030 --> 00:42:03.660
The developer extras Xcode
index templates directory.

00:42:03.660 --> 00:42:04.900
You'll find a readme file.

00:42:04.900 --> 00:42:09.380
Now, this readme file basically just
tells you what they are and tells

00:42:09.450 --> 00:42:12.980
you how to run the one command
that it takes to set them up.

00:42:13.060 --> 00:42:17.090
So index templates make it so
that there's files sitting on the

00:42:17.090 --> 00:42:21.010
machine with precooked indexes
of all the system header files,

00:42:21.010 --> 00:42:23.570
so you don't ever have
to index those again.

00:42:23.580 --> 00:42:26.560
If you rebuild your index,
those are still there.

00:42:27.620 --> 00:42:33.710
Okay, with that,
I want to pass it off to...

00:42:35.150 --> 00:42:36.510
Oh, good point.

00:42:36.690 --> 00:42:39.630
Hey, I'm getting too anxious.

00:42:39.960 --> 00:42:41.020
I do want to go back to the slides.

00:42:41.020 --> 00:42:46.210
I have a little bit more to talk about.

00:42:46.270 --> 00:42:47.490
Just having too much fun.

00:42:47.650 --> 00:42:48.540
Source code management.

00:42:48.600 --> 00:42:51.490
Okay, so we've talked about
moving around in Xcode.

00:42:51.600 --> 00:42:54.830
We've talked about moving
around in your code in Xcode.

00:42:55.140 --> 00:42:58.150
Well, there's also a lot of
history to your code.

00:42:58.160 --> 00:43:02.580
Hopefully, you're using a source
code management system.

00:43:02.580 --> 00:43:04.660
And we provide...

00:43:05.540 --> 00:43:09.940
Full integration of source
code management within Xcode.

00:43:10.030 --> 00:43:14.290
So all the capabilities that you
need on your daily basis are here.

00:43:14.500 --> 00:43:19.400
We have columns in the files,
or the groups and files list.

00:43:19.400 --> 00:43:25.420
We have a smart group that shows you
all of the status for any files that

00:43:25.520 --> 00:43:28.220
are different from the repository.

00:43:29.630 --> 00:43:34.000
We have another window,
a source code management window,

00:43:34.020 --> 00:43:36.190
that shows you that same information,
but if you want to have

00:43:36.190 --> 00:43:38.970
it in a separate window,
you can put it there.

00:43:41.460 --> 00:43:44.010
And we have inspectors,
so when you inspect individual

00:43:44.010 --> 00:43:46.920
files in your project,
you can look at all the revision

00:43:46.920 --> 00:43:49.270
history from within that window.

00:43:49.370 --> 00:43:53.120
It's also easy to do
comparisons between revisions,

00:43:53.140 --> 00:43:54.300
do a quick diff.

00:43:54.570 --> 00:43:59.430
At Apple, we like to put diffs in our
bug reports when we fix a bug,

00:43:59.430 --> 00:44:02.610
so that's a convenient way to do that.

00:44:06.870 --> 00:44:11.600
So as I said, we support your daily
workflow within Xcode.

00:44:11.670 --> 00:44:15.210
You can add and remove
files from the repository.

00:44:15.900 --> 00:44:20.860
You can update to the last version that's
in the repository if somebody's made a

00:44:20.860 --> 00:44:25.200
change and you want to get that version,
or you can commit your revisions.

00:44:25.560 --> 00:44:28.300
We can compare and diff versions.

00:44:28.350 --> 00:44:29.880
And we can also view annotations.

00:44:29.960 --> 00:44:33.540
So an annotation is a view of
the source file with every line

00:44:33.540 --> 00:44:37.230
containing the revision number and
the user who made those changes.

00:44:37.330 --> 00:44:44.530
A lot of times people call that viewing
the blame version of the source code.

00:44:46.160 --> 00:44:50.300
And right now we support the
three most requested SEM systems,

00:44:50.300 --> 00:44:53.800
CVS, which is something we use
extensively throughout Apple,

00:44:53.800 --> 00:44:57.110
Perforce, which was requested highly
from all of you folks,

00:44:57.190 --> 00:45:00.580
and Subversion,
which is a new open source revision

00:45:00.580 --> 00:45:04.320
control system that's really
gaining a lot of popularity.

00:45:04.320 --> 00:45:11.530
Okay, now I've got one more
little demo for you.

00:45:26.630 --> 00:45:29.300
So the first thing I want to do,
we have a project here.

00:45:29.300 --> 00:45:30.640
This is just a parent sample.

00:45:30.640 --> 00:45:36.000
And the first thing I want to do is bring
up the project info for this project.

00:45:36.000 --> 00:45:39.100
Let's go ahead and switch over
to the general preference pane.

00:45:39.100 --> 00:45:42.620
At the bottom, you'll notice that there's
an enable SCM checkbox.

00:45:42.740 --> 00:45:47.230
You can turn that on to enable
source code management for that file,

00:45:47.230 --> 00:45:48.640
for that project.

00:45:48.880 --> 00:45:51.820
And you can switch between
the different versions.

00:45:51.820 --> 00:45:53.820
Make sure you pick the right version,
of course.

00:45:54.610 --> 00:45:56.820
And the last thing,
especially if you're set

00:45:56.990 --> 00:45:59.770
up to use Subversion,
Subversion can actually be installed

00:45:59.770 --> 00:46:01.480
in a number of places on your system.

00:46:01.480 --> 00:46:04.540
So I used Fink to install it,
and Fink likes to put

00:46:04.540 --> 00:46:06.420
everything inside of slash SW.

00:46:06.420 --> 00:46:10.820
So my version of Subversion
is living in SW bin SVN.

00:46:14.660 --> 00:46:18.650
So, right now you don't see
any source code management,

00:46:18.650 --> 00:46:22.030
but I want to see some,
so I'm going to control click

00:46:22.030 --> 00:46:25.330
on the title of that view,
and you'll see that we have,

00:46:25.350 --> 00:46:29.140
we've modified the project since
last time it was checked out.

00:46:29.140 --> 00:46:31.540
That's no surprise, I've been doing stuff
up here on the screen.

00:46:32.100 --> 00:46:33.690
We have about windows.

00:46:33.690 --> 00:46:35.900
You can see the icon there is gray.

00:46:35.900 --> 00:46:37.880
That means that it's changed.

00:46:37.880 --> 00:46:40.730
If I go ahead and save that,
you'll see that the

00:46:40.730 --> 00:46:42.760
status updates right away.

00:46:42.760 --> 00:46:45.970
So, the M means that it's modified
relative to the repository,

00:46:46.030 --> 00:46:47.960
so there's some local change here.

00:46:47.960 --> 00:46:50.390
If you have a file that's
not checked in yet,

00:46:50.490 --> 00:46:53.940
and you've said that you want to add it,
it'll show an A there.

00:46:53.940 --> 00:46:57.800
If you've made local changes and
there's changes in the repository,

00:46:57.800 --> 00:46:59.620
it'll show C for conflict.

00:47:02.100 --> 00:47:06.870
And it'll show a U if
you need to update it,

00:47:06.870 --> 00:47:08.480
I believe.

00:47:10.550 --> 00:47:12.910
Okay, so we also have an SEM smart group.

00:47:12.920 --> 00:47:15.080
Let's go ahead down there and
take a quick look at that.

00:47:15.140 --> 00:47:18.280
You can see that it shows
those files in there.

00:47:18.280 --> 00:47:20.500
I never did check in my PBX user file.

00:47:20.500 --> 00:47:22.580
Sometimes, we generally do that at Apple.

00:47:22.590 --> 00:47:23.510
We like to do that.

00:47:23.510 --> 00:47:24.580
I didn't do it here.

00:47:24.580 --> 00:47:28.400
So the PBX user file,
for those of you who don't know,

00:47:28.400 --> 00:47:29.530
is a file that's in the

00:47:29.770 --> 00:47:32.760
contains your user-specific
settings for a project.

00:47:32.760 --> 00:47:35.640
It sits inside the project bundle.

00:47:39.650 --> 00:47:42.780
So we can also bring up the SEM window.

00:47:42.780 --> 00:47:48.480
Now this looks a lot like the same view,
same stuff that's in the SEM smart group.

00:47:48.500 --> 00:47:52.470
But one thing that it has here
is it actually has all of the

00:47:52.560 --> 00:47:59.080
commands that have been run when
you're using the SEM system.

00:47:59.510 --> 00:48:01.740
So you can look there to
see what's actually going on

00:48:01.740 --> 00:48:04.170
underneath the hood if you need to.

00:48:09.670 --> 00:48:14.000
Okay, so I have this local version,
of course, on here.

00:48:14.020 --> 00:48:16.280
I don't really want to have that.

00:48:16.290 --> 00:48:17.320
I've got this extra code.

00:48:17.320 --> 00:48:21.120
So I'm going to go ahead and just
delete that or discard my changes.

00:48:21.120 --> 00:48:22.510
So we'll go ahead and do that.

00:48:22.640 --> 00:48:24.430
It'll ask me if I really want to do that.

00:48:24.670 --> 00:48:25.920
And of course, I'll say yes.

00:48:28.270 --> 00:48:34.080
And it's now, if we go up here,
you can see, oh.

00:48:38.900 --> 00:48:41.050
Let's go to the SEM group, SEM window.

00:48:41.060 --> 00:48:45.400
And actually, it's not up to date.

00:48:45.400 --> 00:48:47.180
So subversion.

00:48:47.180 --> 00:48:49.420
Our support is preliminary.

00:48:49.420 --> 00:48:51.260
So this is a preview release.

00:48:51.380 --> 00:48:56.240
The subversion support is not at
the same level as the CVS version.

00:48:56.240 --> 00:48:58.420
But it's coming along very nicely.

00:48:58.540 --> 00:49:00.180
People are starting to use it, actually.

00:49:00.180 --> 00:49:05.850
So it's going to be very nice
when we're done with 1.5 and 2.0.

00:49:06.120 --> 00:49:07.520
So with that...

00:49:09.240 --> 00:49:10.060
will bring up Matt.

00:49:10.060 --> 00:49:15.010
This is Matt Morse from
our Tech Pubs group.

00:49:15.080 --> 00:49:16.090
Thanks.

00:49:16.190 --> 00:49:20.100
Thanks, Dave.

00:49:22.840 --> 00:49:23.660
Hello, everybody.

00:49:23.770 --> 00:49:28.240
I'd like to talk to you a bit about
documentation access in Xcode.

00:49:28.240 --> 00:49:30.360
And first I'd like to
see a show of hands.

00:49:30.380 --> 00:49:34.100
How many people have used the
documentation window in Xcode?

00:49:34.100 --> 00:49:35.090
Oh, great.

00:49:35.170 --> 00:49:37.140
I mean, most people have.

00:49:37.160 --> 00:49:41.160
And I'm sure most others have
at least seen it demonstrated.

00:49:41.290 --> 00:49:45.790
So I'm not going to go through a
point-by-point analysis of the features.

00:49:45.790 --> 00:49:48.740
What I'd like to do is really twofold.

00:49:48.770 --> 00:49:53.160
I want to show you -- tell you
first a little bit about our plans

00:49:53.160 --> 00:49:57.190
for documentation integration.

00:49:57.350 --> 00:50:02.510
And second,
what I'd like to do is show you some of

00:50:02.510 --> 00:50:06.620
the techniques I think are most effective
in getting answers fast to those

00:50:06.770 --> 00:50:09.470
questions you have when you're coding.

00:50:09.790 --> 00:50:13.750
So where are we with documentation
access and where do we hope

00:50:13.840 --> 00:50:16.290
to be in the Tiger timeframe?

00:50:17.120 --> 00:50:21.670
Since Xcode 1.0 came out,
it's had a documentation window,

00:50:21.780 --> 00:50:29.750
and that's allowed browsing, searching,
API searching, and full text searching

00:50:29.750 --> 00:50:31.970
of the local content.

00:50:32.360 --> 00:50:35.040
It, however,
wasn't giving you access to an

00:50:35.040 --> 00:50:39.620
even larger pool of documentation,
which is the documentation that

00:50:39.620 --> 00:50:45.290
lives at developer.apple.com,
the ADC reference library.

00:50:45.300 --> 00:50:50.570
So where we're headed now is to make
sure that whenever you're using Xcode,

00:50:50.610 --> 00:50:55.020
you'll have access not only to
the resources you're used to,

00:50:55.020 --> 00:50:59.600
but the more expanded resources
of the ADC reference library.

00:50:59.600 --> 00:51:05.080
And those include technical notes,
technical QAs that are

00:51:05.080 --> 00:51:11.720
written by the ADC staff,
sample code, and other documents as well.

00:51:12.250 --> 00:51:15.820
So we want to make sure that
when you're using Xcode,

00:51:15.850 --> 00:51:18.820
you always have access to
those additional features.

00:51:18.820 --> 00:51:22.460
Another thing that we want to
make sure you have access to

00:51:22.460 --> 00:51:24.700
is the latest documentation.

00:51:24.700 --> 00:51:29.640
Thanks to developments in our
production techniques at Apple,

00:51:29.640 --> 00:51:34.340
we're able to update the
documentation on a much more frequent

00:51:34.640 --> 00:51:36.580
basis than we have in the past.

00:51:36.600 --> 00:51:40.360
This is on the order of
days or weeks at most.

00:51:41.300 --> 00:51:45.000
So the latest documentation
is also on the web,

00:51:45.020 --> 00:51:48.380
and we want to make sure you're looking
at the latest when you're in Xcode.

00:51:48.380 --> 00:51:50.940
So that's the direction we're headed.

00:51:50.940 --> 00:51:56.130
What I'd like to do now is show
you through a series of scenarios

00:51:56.130 --> 00:52:01.640
what I think are some of the best
features of documentation access,

00:52:01.640 --> 00:52:05.620
those features that will get
you your answers most quickly.

00:52:05.620 --> 00:52:10.880
And just to set the stage a little bit,
why is it important?

00:52:11.100 --> 00:52:12.690
Well,
I think that we have good strategies

00:52:13.310 --> 00:52:14.920
for getting to your answers.

00:52:14.920 --> 00:52:19.920
Given the amount of documentation
that we put on the local disk,

00:52:19.920 --> 00:52:22.030
it's very important.

00:52:22.040 --> 00:52:25.930
The normal installation
has over 500 documents,

00:52:25.930 --> 00:52:29.770
from single pages all the
way up to publishable books.

00:52:29.820 --> 00:52:33.170
And in addition to that,
it has reference for over

00:52:33.210 --> 00:52:38.880
40,000 individual APIs,
not counting the Sun documentation that,

00:52:38.880 --> 00:52:42.690
if you install a Java doc,
you'll have another perhaps

00:52:42.690 --> 00:52:46.820
40,000 APIs documented as well.

00:52:46.840 --> 00:52:50.640
So the terrain is vast,
and it's really important to know

00:52:50.640 --> 00:52:53.030
how to get to those answers fast.

00:52:53.080 --> 00:52:58.080
So I'd like to show you a few scenarios.

00:53:02.210 --> 00:53:04.120
OK.

00:53:04.120 --> 00:53:06.080
The first scenario is very simple.

00:53:06.080 --> 00:53:09.330
You're new to Xcode, you started up,
what do you do now?

00:53:09.490 --> 00:53:13.460
Some programmers will dive
ahead and just see how far

00:53:13.460 --> 00:53:16.060
they get with their intuition.

00:53:16.070 --> 00:53:19.020
Others will perhaps want some help.

00:53:19.130 --> 00:53:22.040
And the Help menu is the way to do that.

00:53:22.130 --> 00:53:27.480
Xcode help brings up the
documentation window and focuses

00:53:27.480 --> 00:53:30.280
on the Help documentation.

00:53:30.280 --> 00:53:32.800
Now,
first a note about the window itself.

00:53:32.800 --> 00:53:35.990
As you notice,
it's laid out a lot like the project

00:53:35.990 --> 00:53:40.300
window with a groups column that
shows the documentation groups,

00:53:40.300 --> 00:53:43.220
a search field at the top, and a search

00:53:43.250 --> 00:53:48.700
And an area for the results,
the detail view, and below that,

00:53:48.700 --> 00:53:50.560
the content view.

00:53:50.630 --> 00:53:54.010
And the content now shows Xcode help.

00:53:54.580 --> 00:53:59.550
So you might start there and read
through some of the help documentation.

00:53:59.990 --> 00:54:04.130
But what if you want
instead to look at demo,

00:54:04.130 --> 00:54:07.260
I mean tutorial information?

00:54:07.310 --> 00:54:12.370
Way to do that would be to run a search.

00:54:16.480 --> 00:54:19.720
So we're going to search
for Xcode tutorial.

00:54:19.790 --> 00:54:23.680
Here's the first take
home point for this demo.

00:54:23.720 --> 00:54:28.720
The searches are scoped by the
selected documentation set.

00:54:28.860 --> 00:54:33.630
So right now we're all set to run
an Xcode tutorial search of the

00:54:33.630 --> 00:54:36.500
Xcode code help documentation.

00:54:36.900 --> 00:54:41.390
That may be a little too specific,
so you might want to choose a

00:54:41.390 --> 00:54:46.240
more general area like tools,
but I really suggest that if you

00:54:46.240 --> 00:54:50.180
have no idea how the documentation
is laid out or organized,

00:54:50.180 --> 00:54:53.290
just select the top item, the library.

00:54:53.290 --> 00:54:56.750
That's all your installed documentation.

00:54:56.750 --> 00:54:58.950
And execute your search.

00:55:02.350 --> 00:55:04.610
It goes out,
searches all the documentation or

00:55:04.610 --> 00:55:08.470
the index of all the documentation,
and it comes back here

00:55:08.470 --> 00:55:14.200
with a quick tour of Xcode,
which looks like a good place to start

00:55:14.340 --> 00:55:17.910
if you want a quick introduction.

00:55:18.580 --> 00:55:22.070
Now one thing I'd like to point out,
it may be hard to read back there,

00:55:22.170 --> 00:55:25.800
but up here we have what's
known as a breadcrumb path.

00:55:25.860 --> 00:55:30.310
And this is the path in the
hierarchy of documents leading to

00:55:30.430 --> 00:55:31.890
the document you're looking at.

00:55:31.890 --> 00:55:35.050
So if you find a search
takes you in too deep,

00:55:35.050 --> 00:55:37.530
you may want to click up a level.

00:55:37.530 --> 00:55:44.820
Here's everything about tools in Xcode,
and more generally, tools, and so on.

00:55:44.850 --> 00:55:48.410
So you can go up to a more
general level quite easily.

00:55:48.500 --> 00:55:53.330
And, of course, like in the code editor,
you can use the back forward buttons

00:55:53.410 --> 00:55:57.580
to get to back to previous pages.

00:56:00.230 --> 00:56:03.940
Okay, let's say instead of being
absolutely new to Xcode,

00:56:03.940 --> 00:56:08.900
you're new to this version, 1.5 or 2.0,
and you haven't yet looked

00:56:08.900 --> 00:56:10.740
into its new features.

00:56:10.740 --> 00:56:13.880
What you should do is take
a look at the release notes,

00:56:13.880 --> 00:56:17.100
and you can always get to
them through the help menu.

00:56:17.100 --> 00:56:23.520
But I'd like to suggest
a new place to look,

00:56:23.520 --> 00:56:23.520
and that's over here, Bookmarks.

00:56:23.680 --> 00:56:27.820
This is new in the seeds that you have,
a bookmarks folder,

00:56:27.960 --> 00:56:32.370
and by default it's populated
with a number of useful sites,

00:56:32.420 --> 00:56:35.690
including the release notes.

00:56:35.880 --> 00:56:42.000
So here we have the release notes,
and you might get to them that way.

00:56:42.940 --> 00:56:45.160
One thing I wanted to say,
I skipped something

00:56:45.160 --> 00:56:46.440
I wanted to point out.

00:56:46.510 --> 00:56:50.290
The current documentation on
your disk is much more web aware

00:56:50.290 --> 00:56:52.250
than it has been in the past.

00:56:52.250 --> 00:56:55.100
And we're moving more and
more in that direction.

00:56:55.100 --> 00:56:58.880
You'll find as you browse through
these pages that many of the links

00:56:58.880 --> 00:57:02.380
will take you directly to the website,
so you will be able to get

00:57:02.490 --> 00:57:04.220
to the tech notes and Q&As.

00:57:04.220 --> 00:57:06.920
They don't live on your disk,
they live on the website,

00:57:06.920 --> 00:57:08.910
but the content will take you there.

00:57:10.110 --> 00:57:13.700
Another change that we made
is we're making use of the

00:57:13.700 --> 00:57:16.060
website for the PDF content.

00:57:16.680 --> 00:57:21.150
Rather than install over a third
of a gigabyte of documentation

00:57:21.150 --> 00:57:25.610
in PDF format on your local disk,
which we've done in the past,

00:57:25.610 --> 00:57:29.280
we're now relying on the
website for that content.

00:57:29.280 --> 00:57:33.080
So the links in your pages
here will take you to the

00:57:33.080 --> 00:57:35.970
website for those PDF documents.

00:57:36.680 --> 00:57:37.710
Now don't worry.

00:57:37.710 --> 00:57:39.530
Okay, that's good.

00:57:39.550 --> 00:57:43.140
For some of you that's good,
for some of you it may not be so good.

00:57:43.140 --> 00:57:45.680
You like the PDF and
you want them locally.

00:57:45.680 --> 00:57:49.530
So we're making those
available to you as a package,

00:57:49.530 --> 00:57:53.200
and you can get that at
the developer website.

00:57:53.200 --> 00:57:55.620
So you can still have
them locally if you want.

00:57:57.700 --> 00:57:59.600
Okay,
so let's look at a different scenario,

00:57:59.600 --> 00:58:04.370
and that is you're using Xcode,
you've built a project,

00:58:04.440 --> 00:58:10.910
and you're in the code,
and you need some help.

00:58:11.720 --> 00:58:16.320
Dave mentioned this in the
previous part of this talk,

00:58:16.340 --> 00:58:22.650
that option double click is the quickest
way to get from a system API in your

00:58:22.650 --> 00:58:26.760
code to the related documentation.

00:58:28.110 --> 00:58:30.600
So option double click is
another take home point.

00:58:30.600 --> 00:58:34.120
If you're not using that now,
please remember, option double click,

00:58:34.120 --> 00:58:36.060
quick way to get to the documentation.

00:58:38.130 --> 00:58:40.860
A couple of things about
our reference documentation.

00:58:40.870 --> 00:58:46.400
As you can see, it's heavily interlinked,
hyperlinked, so you can get to the

00:58:46.400 --> 00:58:50.980
types that a method takes,
and you can easily motor around

00:58:51.070 --> 00:58:53.550
through the documentation.

00:58:53.730 --> 00:58:56.000
A couple of other navigation notes.

00:58:56.010 --> 00:58:59.990
Up here, where you have a function
pop-up in your code editor,

00:58:59.990 --> 00:59:02.500
here we have a similar use.

00:59:02.500 --> 00:59:08.300
This shows you all the API that's
documented on that page.

00:59:08.300 --> 00:59:13.540
It also shows you some of the high-level
headings in the page to help orient you.

00:59:13.540 --> 00:59:16.510
And you can not only get a
summary of the page this way,

00:59:16.610 --> 00:59:24.490
but of course navigate
to the individual APIs.

00:59:24.490 --> 00:59:24.490
Okay.

00:59:28.240 --> 00:59:29.520
All right.

00:59:29.550 --> 00:59:32.820
Now, one thing I wanted to mention,
when we did that option double

00:59:32.990 --> 00:59:35.830
click jump to this page,
what really happened is we

00:59:35.880 --> 00:59:39.420
went up here automatically,
Xcode, took your selection,

00:59:39.480 --> 00:59:45.120
stuck it up in the search field,
made sure it's on the API search mode,

00:59:45.120 --> 00:59:46.750
and did the search.

00:59:46.750 --> 00:59:52.070
And of course, you can use this manually.

00:59:52.070 --> 00:59:52.070
Oops, I don't mean to do that.

00:59:54.730 --> 00:59:59.780
You can type in whatever string you want,
and it'll give you all the

00:59:59.780 --> 01:00:01.620
completions in the API.

01:00:01.620 --> 01:00:04.940
And that is, again,
scoped by the group in

01:00:04.940 --> 01:00:07.640
the upper left here,
library.

01:00:07.640 --> 01:00:13.650
So we see we're getting Java,
Objective-C, and any other C and C++

01:00:13.650 --> 01:00:16.480
APIs that we happen to have.

01:00:17.730 --> 01:00:22.250
By selecting a different group,
let's say Java, you'll filter that down

01:00:22.280 --> 01:00:24.340
to just the Java APIs.

01:00:24.340 --> 01:00:30.110
Or for Carbon, you'd have,
I guess we have no window wills,

01:00:30.120 --> 01:00:34.700
but we definitely have
window prefix APIs.

01:00:39.480 --> 01:00:42.900
If you forget, I hope you don't,
but if you forget option double click,

01:00:42.970 --> 01:00:47.330
you can still use the context menu to...

01:00:47.520 --> 01:00:52.110
We have find selected
text in API reference,

01:00:52.300 --> 01:00:57.210
that's equivalent to option double click,
and of course you can do a full

01:00:57.210 --> 01:01:00.260
text search by using that menu.

01:01:02.410 --> 01:01:05.060
Okay, if you're doing
object-oriented programming,

01:01:05.060 --> 01:01:09.520
as Dave pointed out earlier,
you can use the class browser

01:01:09.520 --> 01:01:12.790
to get around your classes and

01:01:13.770 --> 01:01:17.920
These classes are all system classes,
so they have associated documentation.

01:01:17.920 --> 01:01:22.330
Just click the blue book and you
can get to the documentation or to

01:01:22.330 --> 01:01:25.270
any individual method in that page.

01:01:28.130 --> 01:01:30.540
The other thing you can do
if you're writing a tool,

01:01:30.540 --> 01:01:34.460
let's say using Unix commands,
make sure you know about

01:01:34.460 --> 01:01:37.040
the open man page panel.

01:01:37.040 --> 01:01:41.750
You can both get to a man
page by name or do a search.

01:01:41.730 --> 01:01:44.350
For example, grep,
let's do a search for all

01:01:44.390 --> 01:01:46.070
man pages that have that.

01:01:46.260 --> 01:01:52.140
Actually, it's doing an apropos search,
and here are some of the results.

01:01:52.180 --> 01:01:56.090
Your man page is a--thank you.

01:01:57.060 --> 01:02:01.570
Your man pages appear in HTML,
and they're all hyperlinked

01:02:01.630 --> 01:02:04.160
so you can get back and forth.

01:02:05.400 --> 01:02:11.120
All right, one last scenario,
not about the code, about the IDE.

01:02:11.350 --> 01:02:14.600
Okay, you're working in the
IDE and you have a question.

01:02:14.740 --> 01:02:17.950
Let's say you're using
one of these inspectors.

01:02:17.950 --> 01:02:22.830
Take a note that we have help buttons
in the bottom right corner now.

01:02:22.830 --> 01:02:25.810
And by clicking those,
it takes you directly to the

01:02:25.870 --> 01:02:27.800
appropriate documentation.

01:02:27.800 --> 01:02:32.130
This is fairly new, so we don't have them
everywhere we want them to be,

01:02:32.130 --> 01:02:34.480
but we're working in that direction.

01:02:34.600 --> 01:02:38.060
So take a look for these
links to the documentation.

01:02:40.930 --> 01:02:42.940
Okay, you're working in the
IDE and you have a question.

01:02:45.920 --> 01:02:49.280
Okay, you're working in the
IDE and you have a question.

01:02:49.450 --> 01:02:52.600
Let's say you're using
one of these inspectors.

01:02:52.600 --> 01:02:54.310
Take a note that we have help buttons
in the bottom right corner now.

01:02:54.310 --> 01:02:54.310
And by clicking those,
it takes you directly to the

01:02:54.310 --> 01:02:54.310
appropriate documentation.

01:02:54.310 --> 01:02:54.310
This is fairly new, so we don't have them
everywhere we want them to be,

01:02:54.310 --> 01:02:54.310
but we're working in that direction.

01:02:54.310 --> 01:02:54.310
So take a look for these
links to the documentation.

01:02:55.010 --> 01:03:01.740
Xcode is accessible to--made accessible
to scripts in a number of ways.

01:03:02.810 --> 01:03:08.180
You can use Apple scripts to
automate operations in Xcode.

01:03:08.570 --> 01:03:11.520
You can use build scripts,
build phase scripts,

01:03:11.520 --> 01:03:15.530
to intercede in the build phases,
worksheets, and user scripts.

01:03:15.560 --> 01:03:18.630
And I'll talk about those in more detail.

01:03:21.340 --> 01:03:25.600
Okay, AppleScript,
of course you're aware that

01:03:25.670 --> 01:03:28.210
with AppleScript you can,

01:03:28.310 --> 01:03:30.970
We run an application by remote control.

01:03:31.050 --> 01:03:34.510
And with applications,
you can do as much as their

01:03:34.510 --> 01:03:37.540
AppleScript dictionaries allow you to do.

01:03:37.600 --> 01:03:40.980
Xcode's dictionary is not
complete by any means,

01:03:40.980 --> 01:03:46.080
but it has a lot of important
functionality that you can use right now.

01:03:46.540 --> 01:03:50.780
For example, in the seeds that you have,
there's the import command.

01:03:50.780 --> 01:03:55.120
So you can batch import
Code Warrior projects into Xcode.

01:03:55.120 --> 01:03:59.670
Or if you want to set build
settings on a number of projects,

01:03:59.670 --> 01:04:01.280
you can do that as well.

01:04:01.280 --> 01:04:04.180
And that's what the code
up there is showing.

01:04:04.180 --> 01:04:09.150
And of course,
you can automate the build process.

01:04:18.400 --> 01:04:20.240
Build phase scripts,
I won't go into this,

01:04:20.390 --> 01:04:24.420
because the next session that's
in this room at 3:30 goes into

01:04:24.420 --> 01:04:26.140
the build system in detail.

01:04:26.510 --> 01:04:30.930
But build phase scripts let you
interpose your own set of operations

01:04:30.930 --> 01:04:36.170
in the standard set of build
operations like compiling and linking.

01:04:36.280 --> 01:04:43.270
And you can have scripts that would do
any of these kinds of operations such

01:04:43.270 --> 01:04:46.780
as logging the progress of the build.

01:04:47.060 --> 01:04:51.580
And you can write build phase
scripts in any of the supported

01:04:51.580 --> 01:04:55.090
languages like shell or parole.

01:04:56.000 --> 01:05:49.500
[Transcript missing]

01:05:51.290 --> 01:05:56.440
Okay, so let me show you a little
bit about scripting in Xcode.

01:05:56.440 --> 01:06:00.600
First, I'd like to show you worksheets.

01:06:03.800 --> 01:06:05.950
It's a very simple idea.

01:06:06.160 --> 01:06:09.820
You have a command in your code editor,
like this one,

01:06:09.820 --> 01:06:12.740
simply listing the root directory.

01:06:12.970 --> 01:06:18.140
Hit Control-R,
and the command is executed,

01:06:18.140 --> 01:06:22.510
and the results come back
into the code editor.

01:06:23.410 --> 01:06:26.060
Now,
why would you need that functionality?

01:06:26.060 --> 01:06:28.690
What kinds of uses can you put it to?

01:06:28.730 --> 01:06:33.930
I'll tell you one that I've used
is when I was debugging a bundle

01:06:33.940 --> 01:06:37.870
that my application was using,
I would have different versions of

01:06:37.890 --> 01:06:42.610
the bundle and I would load one or the
other depending on a default setting.

01:06:42.710 --> 01:06:46.790
And rather than type in the
default command each time,

01:06:46.790 --> 01:06:50.330
I could just execute it here,
restart my app,

01:06:50.330 --> 01:06:52.540
and it would load the other bundle.

01:06:53.100 --> 01:06:58.200
There are a lot of different suggestions
here for things you might do.

01:06:58.390 --> 01:07:01.830
Some of them are written
in Unix utility commands,

01:07:01.970 --> 01:07:05.230
some of them like sample or default.

01:07:05.310 --> 01:07:09.520
Some of them are written in Perl.

01:07:09.720 --> 01:07:16.120
So you can get this sample worksheet
at the developer website this evening.

01:07:16.120 --> 01:07:20.640
I believe the disk image of
this session will include it.

01:07:20.850 --> 01:07:22.380
Here's one I'd like to run for you.

01:07:22.430 --> 01:07:26.780
I think anyone in San Francisco,
any programmer should know where

01:07:27.230 --> 01:07:29.110
all the local earthquakes are.

01:07:29.110 --> 01:07:33.080
This one has just gone out and
told us where the ones that

01:07:33.600 --> 01:07:36.060
occurred in the last two days are.

01:07:36.060 --> 01:07:39.830
It looks like we're pretty safe,
so let's go on.

01:07:41.790 --> 01:07:48.030
What I'd like to show you now is the
user scripts menu that's up here.

01:07:48.030 --> 01:07:53.030
And by default,
it has a lot of useful commands.

01:07:53.080 --> 01:07:55.390
Let's take a look at some of them.

01:07:58.100 --> 01:08:04.590
One that I use all the time is
the comment-uncomment command.

01:08:07.260 --> 01:08:10.520
And if you haven't used it,
I suggest give it a try.

01:08:10.520 --> 01:08:13.300
It's bound to the command slash

01:08:14.330 --> 01:08:20.400
And you can easily take a section
of code out of service that way.

01:08:20.730 --> 01:08:26.080
Another one that I think is quite useful,
especially for Objective-C programmers,

01:08:26.080 --> 01:08:30.570
is if you have an instance variable and
you want to set up some accessor methods,

01:08:30.580 --> 01:08:34.800
just select the instance variable,
go to the code,

01:08:34.840 --> 01:08:39.240
place accessor declarations
on clipboard command,

01:08:39.240 --> 01:08:41.790
and paste in the accessors.

01:08:41.790 --> 01:08:45.990
And there's an equivalent
one for the definition.

01:08:48.800 --> 01:08:50.600
Thank you.

01:08:50.600 --> 01:08:53.880
There's another suite of commands
I think you should know about,

01:08:53.880 --> 01:08:55.400
and that's the HeaderDoc suite.

01:08:55.400 --> 01:08:58.270
And I'd like to show those quickly.

01:08:58.570 --> 01:09:00.720
This HeaderDoc is like Java doc.

01:09:00.720 --> 01:09:04.350
It allows you to put structured
comments in your headers and

01:09:04.360 --> 01:09:09.500
then run them through the utility
and generate HTML documentation.

01:09:09.650 --> 01:09:11.750
So let's do that quickly here.

01:09:12.040 --> 01:09:15.530
Here's our class declaration.

01:09:15.680 --> 01:09:18.590
Let's put in a class template.

01:09:19.400 --> 01:09:22.820
So it's parsed the class and superclass.

01:09:22.840 --> 01:09:25.370
We just put in this method.

01:09:26.360 --> 01:09:30.000
Let's add the method template for that.

01:09:30.000 --> 01:09:33.750
And again, it parsed out the parameter.

01:09:34.090 --> 01:09:40.750
Save the file because HeaderDoc works
with save files on disk.

01:09:40.770 --> 01:09:44.300
And then view the
HeaderDoc for this header.

01:09:44.730 --> 01:09:49.320
What will happen is it went out,
ran HeaderDoc on that header.

01:09:49.550 --> 01:09:53.420
Here's our class,
and here are the methods,

01:09:53.440 --> 01:09:58.590
the ones that I had already marked up
and the new one that we just put in.

01:09:58.590 --> 01:10:05.390
So it's a very quick way to get some good
looking documentation for your classes.

01:10:06.630 --> 01:10:11.500
What will happen is it went out,
ran HeaderDoc on that header.

01:10:11.500 --> 01:10:15.320
Here's our class,
and here are the methods,

01:10:15.410 --> 01:10:17.540
the ones that I had already marked up
and the new one that we just put in.

01:10:17.540 --> 01:10:17.540
So it's a very quick way to get some good
looking documentation for your classes.

01:10:18.600 --> 01:10:23.400
What will happen is it went out,
ran HeaderDoc on that header.

01:10:23.400 --> 01:10:27.320
Here's our class,
and here are the methods,

01:10:27.320 --> 01:10:27.970
the ones that I had already marked up
and the new one that we just put in.

01:10:27.970 --> 01:10:27.970
So it's a very quick way to get some good
looking documentation for your classes.

01:10:28.600 --> 01:10:33.710
The installed documentation, Xcode help,
and especially the quick

01:10:33.770 --> 01:10:36.930
tour that we saw earlier,
I think would help you,

01:10:36.930 --> 01:10:40.310
remind you of some of the
techniques we talked about today.

01:10:41.780 --> 01:10:45.300
And with that, I'd like to bring up,
I don't think Matthew Formica,

01:10:45.350 --> 01:10:49.020
but virtual Matthew Wiley Hodges.

01:10:49.020 --> 01:10:50.940
Thank you.