WEBVTT

00:00:12.160 --> 00:00:16.260
Okay, good morning and welcome to 7:27
QuickTime in the Enterprise.

00:00:16.270 --> 00:00:21.210
This is going to be a really good session
because we have two great speakers,

00:00:21.250 --> 00:00:23.700
one from the
American Electric Power Company and

00:00:24.000 --> 00:00:25.960
another gentleman from
the University of Wisconsin who

00:00:25.960 --> 00:00:30.190
are really using QuickTime in
a very large-scale deployment.

00:00:30.410 --> 00:00:34.280
The guys from American Electric Power are
doing a lot of webcasting and have

00:00:34.380 --> 00:00:38.430
built a lot of custom applications
to deploy QuickTime streaming services

00:00:38.570 --> 00:00:39.860
in their corporate environment.

00:00:39.950 --> 00:00:44.410
And the University of Wisconsin has
actually converted their cable TV system

00:00:44.410 --> 00:00:46.740
to XServe and QuickTime streaming.

00:00:46.740 --> 00:00:49.740
So you guys are going to get
a very good idea as to how you

00:00:49.740 --> 00:00:52.810
can deploy QuickTime in a more
enterprise-like environment.

00:00:52.820 --> 00:00:54.930
So without further ado,
I'd like to introduce Nate Caplin

00:00:55.010 --> 00:00:57.670
from American Electric Power who's
going to kick things off for us.

00:00:57.700 --> 00:00:59.440
Nate Caplin, Thank you, Stephen.

00:00:59.530 --> 00:01:00.100
Hello, everyone.

00:01:00.100 --> 00:01:02.310
I'm Nate Caplin,
streaming media manager at

00:01:02.310 --> 00:01:04.740
American Electric Power in Columbus,
Ohio.

00:01:04.740 --> 00:01:08.620
The focus of my presentation will
be on how we've used QuickTime for

00:01:08.730 --> 00:01:11.860
corporate communications,
both internally and externally.

00:01:11.860 --> 00:01:15.780
I'll cover some background about
how streaming media evolved at AEP,

00:01:16.030 --> 00:01:19.040
followed by some case
studies and opinions.

00:01:25.900 --> 00:01:29.910
Some of the issues around using
QuickTime in the Enterprise include

00:01:30.270 --> 00:01:34.880
corporate IT departments' common
distrust of non-Microsoft solutions,

00:01:34.920 --> 00:01:39.040
deploying QuickTime Player to
thousands of PCs,

00:01:39.040 --> 00:01:43.500
video asset management,
how to leverage live webcasting,

00:01:43.520 --> 00:01:45.140
and optimizing production workflow.

00:01:45.140 --> 00:01:48.730
There are also many opportunities
for Apple and its developers,

00:01:48.820 --> 00:01:51.800
I think, to improve QuickTime to
make it more attractive to

00:01:51.920 --> 00:01:55.320
Enterprise customers like ourselves,
and I'll address several of those.

00:01:57.450 --> 00:02:00.700
I hope you'll take away from this
presentation a lot of useful info,

00:02:00.850 --> 00:02:04.140
including some benefits of using
QuickTime versus Windows Media that

00:02:04.140 --> 00:02:07.430
you can use if you're trying to
convince a corporate IT department

00:02:07.530 --> 00:02:10.230
or university to do so,
strategies for distributing

00:02:10.350 --> 00:02:13.790
QuickTime Player as painlessly
as possible in the Enterprise,

00:02:13.920 --> 00:02:17.760
ideas for building a repository
of QuickTime content,

00:02:17.910 --> 00:02:23.770
best practices for a webcasting studio,
how live webcasts can be an

00:02:23.800 --> 00:02:27.380
effective communication medium
for employees or students,

00:02:27.400 --> 00:02:31.040
and what opportunities exist for
developers to make products that would

00:02:31.080 --> 00:02:34.070
sell better to Enterprise customers.

00:02:34.660 --> 00:02:36.880
Here are some of the products
that I plan to cover.

00:02:36.940 --> 00:02:39.150
In addition,
I'll be touching on third-party live

00:02:39.150 --> 00:02:43.620
webcasting apps like Live Channel,
Wirecast, and Cleaner Live.

00:02:43.780 --> 00:02:46.320
I'll also focus a good
deal of time on AEPTV,

00:02:46.320 --> 00:02:51.870
which is a custom video portal we
designed to manage our QuickTime content.

00:02:53.190 --> 00:02:55.260
So before I dive into the
details on how we use QuickTime,

00:02:55.300 --> 00:02:58.300
let me tell you a little
bit about who we are.

00:02:58.390 --> 00:03:01.940
American Electric Power is
a utility based in Columbus,

00:03:01.940 --> 00:03:02.490
Ohio.

00:03:02.600 --> 00:03:04.570
We are the largest power
generator in the U.S.

00:03:04.770 --> 00:03:08.390
with 5 million customers and
11 state service territory.

00:03:08.490 --> 00:03:14.100
We have over 20,000 employees working
in almost 500 different work locations,

00:03:14.190 --> 00:03:18.690
which begins to explain why internal
communications is a big challenge for us.

00:03:20.250 --> 00:03:23.070
We've had a corporate video
department for almost 20 years,

00:03:23.090 --> 00:03:26.000
and we've been using streaming
media for over five years.

00:03:26.030 --> 00:03:29.060
I'd like to show you a quick video now
to demonstrate some of the work we do

00:03:29.090 --> 00:03:31.090
and to tell you a little more about AEP.

00:03:31.270 --> 00:03:33.700
It's just a little under two minutes.

00:03:38.810 --> 00:03:42.960
AEP has been through some very
dramatic changes in the past few years.

00:03:43.040 --> 00:03:46.960
Industry restructuring, competition,
the California energy crisis,

00:03:46.960 --> 00:03:51.100
and the new wholesale energy markets have
changed the face of the energy business.

00:03:51.120 --> 00:03:54.580
AEP is not the same company
we were only a few years ago.

00:03:54.630 --> 00:03:57.540
We're still one of the largest,
lowest cost,

00:03:57.540 --> 00:04:00.550
and most reliable electricity providers.

00:04:00.550 --> 00:04:04.100
But we've also become a leading
wholesale energy company.

00:04:05.180 --> 00:04:10.380
AEP operates more than 80 power plants
with a capacity of 38,000 megawatts,

00:04:10.380 --> 00:04:13.190
making us America's
largest power generator.

00:04:13.190 --> 00:04:18.300
This power is generated from coal, gas,
nuclear, hydro, and wind,

00:04:18.330 --> 00:04:21.520
assuring a balanced mix of fuel sources.

00:04:21.520 --> 00:04:25.280
AEP also operates one of the
largest power systems in the world,

00:04:25.280 --> 00:04:28.690
with a world-class transmission
and distribution system

00:04:28.690 --> 00:04:30.980
stretching through 11 states.

00:04:31.560 --> 00:04:34.850
This system serves more
than 4.5 million customers,

00:04:34.870 --> 00:04:38.560
providing reliable energy at a
cost below the national average.

00:04:38.560 --> 00:04:41.440
A few years ago,
who could have predicted AEP would

00:04:41.440 --> 00:04:45.320
become one of the top wholesale
energy companies in the country?

00:04:45.320 --> 00:04:49.530
Right now, we're number two,
and on our way to becoming number one.

00:04:49.540 --> 00:04:54.210
And with our combination of strong
regulated and unregulated businesses,

00:04:54.210 --> 00:04:57.120
AEP is clearly poised
for long-term growth.

00:04:57.140 --> 00:05:00.040
This isn't... I'm going to
get out of this right now.

00:05:00.040 --> 00:05:01.420
I think you've seen enough.

00:05:02.050 --> 00:05:03.560
That's our CEO.

00:05:03.560 --> 00:05:06.130
If we can go back to slides, please.

00:05:14.240 --> 00:05:17.580
The interactive media group that
I work in has about 16 people,

00:05:17.640 --> 00:05:19.720
and we're responsible for
the company's websites,

00:05:19.760 --> 00:05:23.010
both internal and external,
all of its print materials,

00:05:23.090 --> 00:05:26.340
as well as over 200
video projects per year.

00:05:26.510 --> 00:05:29.410
From training and safety videos,
to ethics, legal,

00:05:29.410 --> 00:05:33.100
and environmental compliance,
to live town hall webcasts.

00:05:33.250 --> 00:05:35.920
Which brings me to why we use QuickTime.

00:05:37.350 --> 00:05:39.890
First and foremost,
QuickTime is the glue that ties

00:05:39.930 --> 00:05:45.380
together our entire production workflow,
from acquisition to editing to delivery.

00:05:45.770 --> 00:05:47.790
Aside from the obvious
use of QuickTime in our

00:05:47.790 --> 00:05:51.500
video production workflow,
other Apple technologies have influenced

00:05:51.620 --> 00:05:55.340
our decision to use QuickTime,
especially the server platform.

00:05:55.390 --> 00:05:58.130
We found XServe and XServe
RAID to be superior in

00:05:58.130 --> 00:06:03.240
functionality to our PC servers,
both as departmental file server or as

00:06:03.240 --> 00:06:05.690
an enterprise streaming media server.

00:06:05.690 --> 00:06:09.790
They cost less,
especially when you consider the cost of

00:06:09.870 --> 00:06:12.520
Windows 2003 enterprise server licenses.

00:06:12.520 --> 00:06:15.680
They're easier to set up and manage,
and aren't as expensive as the

00:06:15.680 --> 00:06:15.680
Windows 2003 enterprise server licenses.

00:06:15.700 --> 00:06:18.070
They're also less susceptible to
virus and security intrusions,

00:06:18.310 --> 00:06:20.970
which are all good selling points
for our corporate IT folks.

00:06:20.970 --> 00:06:25.260
QuickTime Player is a simple,
elegant player with advanced

00:06:25.310 --> 00:06:28.580
features like instant on streaming
that Windows Media lacks,

00:06:28.580 --> 00:06:31.890
at least Windows Media players
that work on our large installed

00:06:31.890 --> 00:06:33.780
base of Windows NT computers.

00:06:33.780 --> 00:06:36.000
That last point is really important.

00:06:36.000 --> 00:06:40.020
We've used Windows Media also for years,
and one of its worst problems is

00:06:40.020 --> 00:06:43.780
the tangle of different versions
of Windows Media players required

00:06:43.780 --> 00:06:45.680
for different versions of Windows.

00:06:45.700 --> 00:06:49.490
That fact has held us back from
using most of the newer features

00:06:49.490 --> 00:06:54.170
of Windows Media Player 9,
because it requires Windows 2000.

00:06:54.170 --> 00:06:57.360
It won't work on Windows 98, for example.

00:06:57.360 --> 00:07:01.900
It also requires Windows 2003 server,
which our corporate IT department has not

00:07:01.930 --> 00:07:04.140
yet qualified for use in our enterprise.

00:07:06.560 --> 00:07:10.440
So now that you understand who we are
and why we decided to use QuickTime,

00:07:10.530 --> 00:07:14.900
I'm going to start by explaining some of
what we had to do to deploy QuickTime.

00:07:14.980 --> 00:07:18.380
The first step is obviously
distributing the QuickTime player.

00:07:18.380 --> 00:07:20.380
That may sound simple,
but there are several challenges

00:07:20.450 --> 00:07:23.000
unique in a corporate IT environment.

00:07:23.060 --> 00:07:26.590
First, we had to obtain a site license,
which allows us to distribute

00:07:26.710 --> 00:07:29.950
QuickTime player to our own users,
because our IT security

00:07:29.950 --> 00:07:32.650
department doesn't want users
downloading and installing

00:07:32.720 --> 00:07:34.700
software on their own machines.

00:07:34.720 --> 00:07:38.560
Many of them don't even have
access to the public internet.

00:07:39.120 --> 00:07:43.030
Next, our IT lab installed and tested
QuickTime Player on all of our

00:07:43.030 --> 00:07:46.500
existing Windows platforms,
which took several weeks.

00:07:46.590 --> 00:07:48.680
In the process,
they determined the default

00:07:48.810 --> 00:07:51.250
settings they wanted,
including turning off features like

00:07:51.250 --> 00:07:53.000
auto-update and the Hot Pics movie.

00:07:53.000 --> 00:07:57.340
The next step normally would be to
update disk images for new PC installs,

00:07:57.340 --> 00:08:00.990
but unfortunately we haven't
gotten that far yet at AEP.

00:08:01.030 --> 00:08:03.340
Doing so is a very costly
and political process that

00:08:03.340 --> 00:08:05.000
involves Dell Computer as well.

00:08:05.000 --> 00:08:08.780
So instead, we've built a custom
installer using LANDESK,

00:08:08.780 --> 00:08:12.000
a management tool that
our help desk people use.

00:08:12.000 --> 00:08:17.000
It allows us to push QuickTime out to a
user's PC without having them go through

00:08:17.000 --> 00:08:19.920
all the prompts that are part of the
normal QuickTime installation process,

00:08:20.020 --> 00:08:22.000
and it sets the preferences that we want.

00:08:22.000 --> 00:08:26.110
Then, as part of our video portal site,
which I'll talk about in a minute,

00:08:26.130 --> 00:08:28.750
we use BrowserHawk,
a server-side utility for

00:08:28.800 --> 00:08:31.000
detecting users' configurations,
to detect whether a user has the

00:08:31.000 --> 00:08:31.000
right version of QuickTime installed.

00:08:31.000 --> 00:08:31.000
The next step is to use
the QuickTime installer to

00:08:31.000 --> 00:08:31.000
install QuickTime on your PC.

00:08:31.000 --> 00:08:31.000
This is a very simple
and practical process.

00:08:31.000 --> 00:08:31.000
The user can use the QuickTime installer
to install QuickTime on their PC,

00:08:31.000 --> 00:08:31.000
and then use the QuickTime installer
to install QuickTime on their PC.

00:08:31.040 --> 00:08:37.730
And if they don't,
prompt them to install it.

00:08:38.020 --> 00:08:40.880
Finally,
we've begun to promote QuickTime by

00:08:40.880 --> 00:08:44.490
making certain content available
in enhanced versions in

00:08:44.560 --> 00:08:47.000
QuickTime only or QuickTime first.

00:08:47.120 --> 00:08:49.900
As I'll talk about later,
over the next several months,

00:08:49.900 --> 00:08:53.210
we'll be deploying the next
version of our AEP TV interface,

00:08:53.620 --> 00:08:56.980
which, among other things,
goes to a single launch button

00:08:57.040 --> 00:09:00.590
that allows us to determine
what format to give people.

00:09:01.750 --> 00:09:05.340
That brings me to AEP TV,
our video portal for employees.

00:09:05.360 --> 00:09:09.950
A subset of our AEP Now intranet,
AEP TV is a combination web-based

00:09:10.030 --> 00:09:14.080
video library and live webcasting
portal where employees can browse a

00:09:14.090 --> 00:09:19.270
continuously updated library of over 200
videos by category or search by keyword.

00:09:19.420 --> 00:09:21.980
That brings us to the demo.

00:09:31.500 --> 00:09:34.160
I'll be doing this
over the corporate VPN,

00:09:34.180 --> 00:09:38.280
so let's pray to the demo
gods that this all works.

00:09:38.550 --> 00:09:41.490
I'm going to start in
our corporate intranet,

00:09:41.490 --> 00:09:42.000
AEPnow.

00:09:42.320 --> 00:09:45.930
This is basically a central portal,
the default home page

00:09:45.930 --> 00:09:47.170
of all AEP employees.

00:09:47.170 --> 00:09:52.080
It's basically a news site updated
with company news as well as links

00:09:52.080 --> 00:09:56.120
to other common tasks like time
reporting and expense reporting

00:09:56.120 --> 00:09:58.140
and HR and all of that good stuff.

00:09:59.890 --> 00:10:04.390
AEPTV is integrated into the
AEPnow portal in a few ways.

00:10:04.560 --> 00:10:08.860
There are promotions here to
current content that we're doing

00:10:08.860 --> 00:10:13.430
as well as a link under the tools
and resources or useful sites.

00:10:13.580 --> 00:10:14.840
I forget where they put it.

00:10:14.870 --> 00:10:17.660
But also any news story
that has a related video

00:10:17.720 --> 00:10:19.810
has a video icon next to it.

00:10:19.840 --> 00:10:23.890
When you go to that news story,
there's a sidebar for AEPTV that

00:10:24.030 --> 00:10:27.800
highlights any related videos
and it can do one or more.

00:10:27.940 --> 00:10:30.950
So for example, if I click this link,
it's going to pop up the

00:10:30.990 --> 00:10:35.830
AEPTV interface and take you right
to the chooser page for that video.

00:10:35.970 --> 00:10:38.840
The chooser page contains a
full description of the video,

00:10:38.840 --> 00:10:44.730
title, duration,
as well as a choice of formats and sizes.

00:10:45.080 --> 00:10:48.130
We started out with this
site almost two years ago,

00:10:48.220 --> 00:10:51.680
and Windows Media is the kind
of top-level default choice,

00:10:51.710 --> 00:10:55.420
but we've added QuickTime to it
and plan to switch exclusively to

00:10:55.480 --> 00:10:58.590
QuickTime over the rest of this year.

00:10:58.680 --> 00:11:02.190
If you click small QuickTime,
for example,

00:11:02.290 --> 00:11:08.100
it pops up a small playback window,
and demo God's willing, it should play.

00:11:11.800 --> 00:11:12.800
Looks like they're not.

00:11:12.800 --> 00:11:17.040
Let's try the other one.

00:11:23.200 --> 00:11:24.100
that's too bad.

00:11:24.100 --> 00:11:25.300
It's not going to play.

00:11:25.360 --> 00:11:28.140
But I'll take you through
the rest of the interface.

00:11:28.180 --> 00:11:33.470
If you go to the home page,
there's areas for three features, first,

00:11:33.470 --> 00:11:37.680
secondary and third feature
where we promote current content

00:11:37.770 --> 00:11:39.750
as well as upcoming webcasts.

00:11:39.750 --> 00:11:43.840
There's pull down menus at the
top for the video library which

00:11:43.840 --> 00:11:45.840
are broken out by category.

00:11:46.080 --> 00:11:49.930
And so for example,
we can go into new commercials,

00:11:49.930 --> 00:11:55.550
into the safety ads and see if by
any chance another video might play.

00:11:57.230 --> 00:11:59.100
It is.

00:11:59.100 --> 00:12:01.100
My dad's so smart.

00:12:01.100 --> 00:12:03.100
He can fix anything.

00:12:03.100 --> 00:12:08.450
He can fix leasing, my bike, anything.

00:12:08.500 --> 00:12:10.920
He's the best.

00:12:11.000 --> 00:12:14.430
My dad knows how to be
safe around electricity,

00:12:14.430 --> 00:12:15.000
too.

00:12:15.010 --> 00:12:18.430
So, you get the idea there.

00:12:18.630 --> 00:12:21.230
There's also an A to Z index,
which lists all the videos

00:12:21.230 --> 00:12:23.000
currently visible on the site.

00:12:23.000 --> 00:12:25.000
And there's a search function.

00:12:25.000 --> 00:12:31.000
So, for example, if I type in, oh,
how about chainsaw?

00:12:31.000 --> 00:12:35.000
Chainsaw safety.

00:12:35.000 --> 00:12:38.320
Chainsaw safety video.

00:12:47.450 --> 00:12:52.080
There's also a feature to sign up where
users can give us their email address

00:12:52.080 --> 00:12:55.200
and we'll notify them about new videos.

00:12:55.290 --> 00:12:57.690
There is a help section, of course.

00:12:57.830 --> 00:13:00.400
Feedback allows people to
give us their opinion about

00:13:00.480 --> 00:13:02.520
what they've seen on the site.

00:13:02.570 --> 00:13:06.360
This would be for general feedback, but,
for example,

00:13:06.360 --> 00:13:08.510
if you are on a particular video,

00:13:09.320 --> 00:13:11.880
And you click the feedback button.

00:13:11.880 --> 00:13:15.840
The feedback is specific to that video,
and it comes to us by email,

00:13:15.930 --> 00:13:18.150
and it gets logged in a database.

00:13:18.650 --> 00:13:22.020
Live webcasts are kept in here,
so you can see a list of

00:13:22.040 --> 00:13:23.780
upcoming live webcasts.

00:13:24.170 --> 00:13:27.840
If you go to a live webcast page,
since this webcast is not scheduled

00:13:27.840 --> 00:13:31.760
to actually start until July 21st,
of course you can't click on the

00:13:31.890 --> 00:13:36.600
formats to launch up the videos yet,
but you can submit a question right now.

00:13:36.600 --> 00:13:41.250
And these questions get submitted to
a web-based administration form that

00:13:41.290 --> 00:13:46.900
our folks can monitor while they're
actually doing the live webcast.

00:13:46.900 --> 00:13:51.980
So quickly I want to show
you the back end of this.

00:13:51.980 --> 00:13:55.450
We have a website called AAPTVadmin.com.

00:13:57.670 --> 00:14:03.000
Which has as part of it,
the main section is the clip archive.

00:14:03.000 --> 00:14:06.670
And this is where we can see all
of the videos that are actually

00:14:06.810 --> 00:14:09.000
entered into the site at the moment.

00:14:09.120 --> 00:14:11.680
It takes a moment to load
because there are so many now.

00:14:12.760 --> 00:14:13.230
There we go.

00:14:13.320 --> 00:14:17.380
As you can see, there's something like
300-some-odd videos in here,

00:14:17.380 --> 00:14:19.960
and we have little boxes that explain,
you know,

00:14:20.010 --> 00:14:23.480
which formats they're available in,
and the red and the green means

00:14:23.860 --> 00:14:27.670
whether they're actually visible
in the menuing interface right now.

00:14:27.680 --> 00:14:31.360
So we can post a video to the site,
which isn't yet visible

00:14:31.360 --> 00:14:32.700
to every employee.

00:14:32.840 --> 00:14:36.200
As an example,
it can be a for-approval version.

00:14:36.200 --> 00:14:39.820
Then we can send a simple URL link
that will call it up in the interface.

00:14:40.570 --> 00:14:43.150
It's also a way to post a video
that's only supposed to be seen

00:14:43.220 --> 00:14:46.660
by a small group of employees
who will get a link via email.

00:14:46.780 --> 00:14:50.690
All right.

00:14:50.780 --> 00:14:53.810
If we can go back to slides, please.

00:15:00.140 --> 00:15:03.250
All right,
so that's AAP TV as it is today.

00:15:03.640 --> 00:15:06.300
We've begun working on version 2.0.

00:15:06.300 --> 00:15:09.930
Some of the new features
include a single launch button,

00:15:10.080 --> 00:15:14.400
that there, instead of the chooser
page that you saw before.

00:15:14.570 --> 00:15:18.240
Using BrowserHawk will determine what
connection speed the user can sustain and

00:15:18.290 --> 00:15:20.220
feed them the largest version possible.

00:15:20.220 --> 00:15:23.790
This will allow us to decide if
and when to push QuickTime Player,

00:15:23.790 --> 00:15:29.980
which could be by way of posting
a popular video in the future.

00:15:30.000 --> 00:15:33.420
In QuickTime format only,
because that would force this to

00:15:33.420 --> 00:15:37.090
default to QuickTime and force people
to install it to watch the video.

00:15:38.510 --> 00:15:41.460
Other new features include the
ability for users to download

00:15:41.460 --> 00:15:43.000
the video file to their PC.

00:15:43.000 --> 00:15:45.960
If you look at these links on the bottom,
there's a download video button

00:15:45.960 --> 00:15:49.390
that would actually download the
QuickTime file to their desktop.

00:15:49.520 --> 00:15:52.660
We've had a lot of requests for
this lately because people want to

00:15:52.800 --> 00:15:56.400
present a larger version of the video
than their connection speed would

00:15:56.400 --> 00:15:59.580
prevent them to watch in real time,
and they want to do it maybe when

00:15:59.580 --> 00:16:02.160
they're not connected to the network
in front of a group of people,

00:16:02.160 --> 00:16:03.610
like a presentation like this.

00:16:04.100 --> 00:16:08.000
The other option is to email a video,
which we're going to be adding.

00:16:08.000 --> 00:16:11.540
It'll actually just email a link with
their comments to friends or coworkers.

00:16:13.920 --> 00:16:15.290
So that's AAP TV.

00:16:15.410 --> 00:16:18.070
What about our QuickTime workflow?

00:16:18.270 --> 00:16:20.830
Quite simply,
QuickTime and increasingly other

00:16:20.970 --> 00:16:23.760
Apple products touch every part of it.

00:16:23.760 --> 00:16:26.220
Our four producer editors
shoot everything on Sony DVCam.

00:16:26.330 --> 00:16:29.140
Each one of them has a
PowerBook and a dedicated video

00:16:29.140 --> 00:16:31.250
edit suite with a PowerMac G5.

00:16:31.250 --> 00:16:37.380
Video capture is always by FireWire into
either Final Cut Pro or Avid Express Pro.

00:16:37.410 --> 00:16:39.930
While all of them can use Final Cut,
two of them are still more

00:16:39.930 --> 00:16:44.080
comfortable with the Avid interface,
and so that's what they use.

00:16:44.080 --> 00:16:47.000
Recently, all of them have begun using
SoundTrack and LiveType,

00:16:47.040 --> 00:16:50.640
even the Avid guys, in addition to
After Effects and Pro Tools.

00:16:50.690 --> 00:16:52.900
And they're all very
excited about motion,

00:16:52.900 --> 00:16:55.090
so we're looking forward to that, guys.

00:16:55.210 --> 00:16:58.550
Once videos are edited,
a QuickTime DV master file is

00:16:58.550 --> 00:17:01.200
exported and saved on our XServe RAID.

00:17:01.200 --> 00:17:03.620
We also make and store a
DV tape in our library,

00:17:03.810 --> 00:17:06.820
but having the master files
always online makes encoding

00:17:07.380 --> 00:17:10.160
and reuse much easier later on.

00:17:10.160 --> 00:17:13.780
I then encode the video files
using Cleaner into versions that

00:17:13.780 --> 00:17:16.710
are more appropriate for the web.

00:17:17.030 --> 00:17:20.690
The encoded files are then copied up
to our two QuickTime streaming servers,

00:17:20.790 --> 00:17:23.610
and AAPTV admin is
updated to add the clip.

00:17:23.910 --> 00:17:27.340
People watch the video,
and when they request DVD copies,

00:17:27.350 --> 00:17:30.430
we use DVD Studio Pro to make
a master disc and a duplicator

00:17:30.430 --> 00:17:31.980
to burn and print copies.

00:17:32.210 --> 00:17:34.790
And we fill those requests every Monday.

00:17:35.320 --> 00:17:37.200
All right, webcasting studio.

00:17:37.310 --> 00:17:41.920
Since we produce over 200 videos a year,
having a studio is a no-brainer.

00:17:42.290 --> 00:17:45.720
What makes a video studio a webcasting
studio is the addition of some gear

00:17:45.970 --> 00:17:49.830
and some attention paid to audience
interaction and visuals that don't

00:17:49.830 --> 00:17:53.090
break up badly when they're reduced
in size and compressed for streaming.

00:17:53.090 --> 00:17:57.360
You don't necessarily need a big space,
but it needs to be quite well lit,

00:17:57.380 --> 00:17:58.880
and it needs to be quiet.

00:17:58.880 --> 00:18:04.000
At AEP, we have a broadcast-grade
studio with four cameras,

00:18:04.000 --> 00:18:08.920
an isolated control room, audio board,
video switcher, and a TV.

00:18:09.350 --> 00:18:11.750
DecoTitler, The Works.

00:18:11.750 --> 00:18:15.960
We added the streaming media station
to the control room for live webcasts.

00:18:15.960 --> 00:18:19.860
It receives the program video
and audio feeds and converts

00:18:19.970 --> 00:18:22.750
those to DV over FireWire,
distributing it to

00:18:22.900 --> 00:18:24.300
multiple video encoders.

00:18:24.530 --> 00:18:27.680
From there, I can monitor the encoders as
well as remotely monitor the

00:18:27.680 --> 00:18:29.580
servers up on the 19th floor.

00:18:30.180 --> 00:18:33.180
We also have another booth
connected to the control room for

00:18:33.180 --> 00:18:35.030
an audience interaction manager.

00:18:35.080 --> 00:18:38.380
This person screens calls to our
on-air phone system and enters

00:18:38.380 --> 00:18:42.230
information into that system's
software that the on-air moderator

00:18:42.230 --> 00:18:44.420
sees on a laptop that's on the set.

00:18:44.470 --> 00:18:49.390
The audience interaction manager also
screens the questions submitted online

00:18:49.490 --> 00:18:54.280
from AEPTV using a web-based tool
that links to the questions database.

00:18:54.280 --> 00:18:57.020
The on-air moderator
sees that on his laptop,

00:18:57.160 --> 00:18:57.520
too.

00:18:57.520 --> 00:19:01.560
While we use a Sony broadcast
video switcher in our studio,

00:19:01.560 --> 00:19:06.830
a portable switcher like the excellent
DataVideo SE800 is great for doing

00:19:06.830 --> 00:19:08.540
a live webcast from the field.

00:19:08.540 --> 00:19:13.140
It lets us use up to four
DV camcorders connected to it with

00:19:13.260 --> 00:19:16.080
165-foot-long FireWire cables.

00:19:16.080 --> 00:19:21.160
And it outputs a mixed program in DV over
FireWire directly to our field encoder,

00:19:21.180 --> 00:19:23.680
which is just a laptop running
live encoding software.

00:19:23.680 --> 00:19:27.940
For QuickTime live encoding software,
there are a few choices now.

00:19:27.940 --> 00:19:32.360
From Apple's free QuickTime 6 Broadcast
to Live Channel Pro and Wirecast,

00:19:32.440 --> 00:19:34.330
which both cost under $1,000.

00:19:34.350 --> 00:19:37.680
I'll go more into depth into encoding
software in just a little while.

00:19:40.000 --> 00:21:39.300
[Transcript missing]

00:21:39.580 --> 00:21:43.430
It also saves him and his top lieutenants
considerable time traveling around

00:21:43.830 --> 00:21:48.130
to give the same speech over and over
again and answer the same questions.

00:21:49.020 --> 00:21:51.770
But, although QuickTime has
served us pretty well so far,

00:21:51.850 --> 00:21:56.570
it could do a lot more to appeal to
the needs of Enterprise customers.

00:21:56.720 --> 00:22:01.560
For example, QTSS Publisher is a
very neat 1.0 product.

00:22:01.560 --> 00:22:04.110
When I first saw it,
I was excited at the prospect of

00:22:04.110 --> 00:22:07.260
easily managing our growing library,
but it really needs a better

00:22:07.260 --> 00:22:10.710
user interface that doesn't break
down when throwing dozens or

00:22:10.710 --> 00:22:12.640
hundreds of files at it at once.

00:22:12.700 --> 00:22:15.580
It also needs to be more
flexible in where it allows

00:22:15.660 --> 00:22:18.670
media to be stored on the system,
and it could benefit from

00:22:18.680 --> 00:22:20.590
reporting capabilities.

00:22:20.720 --> 00:22:24.840
For example, wouldn't it be nice if you
could access QTSS logs to show

00:22:24.840 --> 00:22:28.360
and chart viewer statistics?

00:22:28.360 --> 00:22:33.360
Also, we run two QuickTime streaming
servers in tandem for load balancing,

00:22:33.410 --> 00:22:36.440
and we can't find any way to
easily duplicate a QTSS Publisher

00:22:36.440 --> 00:22:39.410
library from one server to another.

00:22:39.740 --> 00:22:42.750
QuickTime Streaming Server is
much better in Panther Server,

00:22:42.750 --> 00:22:46.240
and I applaud Apple for building
a better management tool.

00:22:46.270 --> 00:22:49.030
We could really use a true
multi-bitrate solution,

00:22:49.030 --> 00:22:53.070
though, that detects users' bandwidth
and switches streams on the fly.

00:22:53.360 --> 00:22:56.670
Our BrowserHawk solution is an
imperfect workaround that took

00:22:56.670 --> 00:22:58.740
considerable effort to develop.

00:22:58.780 --> 00:23:02.210
We would also like to see built-in
support for clustering and failover

00:23:02.210 --> 00:23:05.740
with two servers sharing the load,
but with either able to take over

00:23:05.740 --> 00:23:09.200
for the other in case of failure,
even during a live webcast.

00:23:09.620 --> 00:23:12.230
We love QuickTime Player,
but it was a long,

00:23:12.330 --> 00:23:16.430
tough process to get all of our
ducks in a row to distribute it.

00:23:16.430 --> 00:23:19.050
Of all the things,
the NAG movie caused a lot of

00:23:19.050 --> 00:23:21.970
arguments with our IT folks,
who were afraid that users

00:23:22.010 --> 00:23:24.450
would be confused and go out
and purchase QuickTime Pro,

00:23:24.450 --> 00:23:26.940
or at least flood the help
desk with questions about

00:23:26.940 --> 00:23:28.500
what that pop-up box means.

00:23:28.500 --> 00:23:32.250
Also, while we were able to
convince our IT department to

00:23:32.320 --> 00:23:35.430
develop a custom installer,
it almost didn't happen.

00:23:36.120 --> 00:23:39.850
Apple should have a free, customizable
Enterprise QuickTime installer,

00:23:39.850 --> 00:23:43.090
just like Real and Windows Media do.

00:23:43.530 --> 00:23:46.400
Compressor is a great new product,
but we still aren't using

00:23:46.400 --> 00:23:48.770
it for anything but DVDs,
because it can't do Sorenson

00:23:48.770 --> 00:23:50.420
2-pass variable bitrate encoding.

00:23:50.420 --> 00:23:54.950
Perhaps this point will
become moot when H.264 ships.

00:23:55.440 --> 00:23:58.500
Finally, QuickTime Broadcaster could
really use an update to add

00:23:58.600 --> 00:24:03.040
support for multiple streams,
higher quality encoding at larger sizes

00:24:03.040 --> 00:24:07.710
that universities and enterprises can
support on their high-speed networks.

00:24:07.970 --> 00:24:12.100
A real preview and integration
with Keynote for broadcasting slide

00:24:12.100 --> 00:24:16.310
presentations in separate web browser
window or frame next to a live webcast.

00:24:16.460 --> 00:24:19.800
It would seem only natural
that Apple could do this.

00:24:21.550 --> 00:24:23.850
Lately at least,
Apple has gotten most of the really

00:24:23.850 --> 00:24:25.990
important stuff right for the Enterprise.

00:24:26.050 --> 00:24:28.590
XServe and XServe RAID are
just beautiful products.

00:24:28.820 --> 00:24:29.490
We love them.

00:24:29.590 --> 00:24:32.410
They make our IT guys jealous,
which I love.

00:24:32.520 --> 00:24:34.970
All I can say is keep up the good work.

00:24:34.980 --> 00:24:38.550
Panther Server was a welcome improvement
and has been rock solid for us.

00:24:38.550 --> 00:24:42.140
I'm anxious to learn more about what
Tiger Server brings to the table.

00:24:43.100 --> 00:24:43.810
XSAN.

00:24:43.810 --> 00:24:44.190
Wow.

00:24:44.510 --> 00:24:46.150
I've been waiting for this for years.

00:24:46.160 --> 00:24:51.070
We've had a fiber channel SAN among
our video edit suites before,

00:24:51.070 --> 00:24:54.450
based on ADDO Excelware,
but it never really worked reliably and

00:24:54.450 --> 00:24:55.800
we finally had to just throw it out.

00:24:55.880 --> 00:24:58.110
I suspect XSAN will sell very well.

00:24:58.180 --> 00:25:01.540
I, for one, plan to put in an order
for one next year.

00:25:03.060 --> 00:25:07.490
XGrid seems like a great opportunity
for distributed batch video encoding.

00:25:07.630 --> 00:25:10.100
I hope Apple, Sorenson,
and Discrete consider

00:25:10.130 --> 00:25:13.500
updating Compressor,
Squeeze, and Cleaner to exploit that.

00:25:13.540 --> 00:25:15.790
With about 30 modern
Macs in our workgroup,

00:25:15.790 --> 00:25:19.360
including three XSERVs and about
half a dozen Power Mac G5s,

00:25:19.360 --> 00:25:21.640
maybe my batches can finally
complete in less than a day.

00:25:21.640 --> 00:25:26.190
On the topic of H.264,
this is really going to improve

00:25:26.250 --> 00:25:29.630
the quality of the experience
we can give to our users,

00:25:29.630 --> 00:25:33.580
but it won't matter unless it plays
back on a free Windows version

00:25:33.580 --> 00:25:34.540
of the QuickTime player.

00:25:34.540 --> 00:25:38.390
I hope Apple does not make the
mistake Microsoft did by trying to

00:25:38.410 --> 00:25:42.220
make new features in Windows media
tied to the operating system

00:25:42.270 --> 00:25:44.170
in an effort to sell that OS.

00:25:44.170 --> 00:25:47.640
If it does, we might have to abandon
QuickTime someday because all

00:25:47.640 --> 00:25:49.370
of our viewers are on Windows.

00:25:49.380 --> 00:25:51.380
Finally,
I'm really excited to announce that the

00:25:51.380 --> 00:25:51.380
new Windows OS is coming to the market.

00:25:51.380 --> 00:25:51.560
I'm really excited to announce that the
new Windows OS is coming to the market.

00:25:51.670 --> 00:25:54.190
I'm really excited about
the Squeeze 4 from Sorenson,

00:25:54.220 --> 00:25:56.210
which is officially in
beta as of this week.

00:25:56.240 --> 00:25:59.830
It's the first all-new third-party
QuickTime encoding solution

00:25:59.930 --> 00:26:02.960
for Mac in several years,
and it's exactly what Discrete could

00:26:02.960 --> 00:26:06.420
have done with Cleaner if they'd only
listened to users about the interface.

00:26:09.590 --> 00:26:12.990
Live encoding is still one Achilles'
heel for QuickTime right now.

00:26:13.250 --> 00:26:16.040
We really need a pro
webcasting application.

00:26:16.260 --> 00:26:19.850
There are only a few players out
there with any QuickTime live—there

00:26:19.850 --> 00:26:24.340
are only a few players out there in
the QuickTime live webcasting market.

00:26:24.390 --> 00:26:26.590
I've already talked about
QuickTime Broadcaster.

00:26:26.870 --> 00:26:30.670
Then there's Live Channel,
which tries too hard to be a studio

00:26:30.670 --> 00:26:34.680
in the box with a busy interface
chock full of stuff I don't need,

00:26:34.680 --> 00:26:37.070
because we already have a studio.

00:26:37.170 --> 00:26:40.490
And the main problem, though,
is it doesn't do multiple streams.

00:26:40.620 --> 00:26:43.360
Wirecast is a new product
from Vera Software that

00:26:43.360 --> 00:26:44.700
looks really promising.

00:26:44.960 --> 00:26:48.100
It does do multiple live streams,
which is great.

00:26:48.240 --> 00:26:51.460
But like QT Broadcaster,
its UI is very basic and it lacks

00:26:51.460 --> 00:26:53.860
PowerPoint or Keynote integration.

00:26:54.000 --> 00:26:57.140
And although it does do multiple streams,
they're completely independent.

00:26:57.400 --> 00:27:01.310
So if you use any of its
video switching features,

00:27:01.330 --> 00:27:03.970
you can't synchronize those actions
among the different streams.

00:27:04.230 --> 00:27:06.560
CastStream isn't really
an encoder at all,

00:27:06.560 --> 00:27:09.420
just a presentation
system for live webcasts.

00:27:09.420 --> 00:27:12.070
Regardless, though,
it's not practical for us since it

00:27:12.070 --> 00:27:16.510
requires a proprietary player and server
and has expensive licensing fees for

00:27:16.510 --> 00:27:19.060
as many simultaneous users as we need.

00:27:19.060 --> 00:27:22.870
Other products and services from Verage
and Yahoo Broadcast that try to appeal

00:27:22.870 --> 00:27:26.960
to enterprise clients like us are too
ambitious and aggressive in scope and

00:27:26.960 --> 00:27:29.660
cost hundreds of thousands of dollars.

00:27:29.660 --> 00:27:33.400
Plus, they require extensive
customization once you buy them.

00:27:33.400 --> 00:27:36.110
They assume we want to just write
a big check and have someone

00:27:36.110 --> 00:27:38.140
else handle the whole production.

00:27:38.140 --> 00:27:41.670
That brings us to what we've been
using these last couple years:

00:27:41.670 --> 00:27:43.110
Discrete Cleaner Live.

00:27:43.110 --> 00:27:46.070
In most respects,
it's the perfect live webcasting app,

00:27:46.070 --> 00:27:49.940
but it has a couple of major problems
that limit its future usability for us.

00:27:49.980 --> 00:27:55.290
It only does Windows Media and Reel,
and Discrete has discontinued it.

00:27:57.270 --> 00:27:59.110
Regardless, though,
it still serves us well.

00:27:59.300 --> 00:28:01.660
I'd like to show you a few
screenshots in hopes that if any of

00:28:01.660 --> 00:28:04.530
you watching are developers working
on a QuickTime webcasting app,

00:28:04.700 --> 00:28:07.100
you take note of why it's so appealing.

00:28:07.230 --> 00:28:09.100
Just look at this UI.

00:28:09.100 --> 00:28:11.920
At a glance,
you can see that the status and flow of

00:28:11.920 --> 00:28:14.560
video and audio data into encoded output.

00:28:14.680 --> 00:28:18.210
It's almost pretty enough to
have been designed by Apple.

00:28:18.620 --> 00:28:21.700
There are audio level
controls and view meters,

00:28:21.700 --> 00:28:26.870
and there are video level
adjustments that can be made in

00:28:26.870 --> 00:28:31.290
real time during a live webcast,
which are right there.

00:28:32.850 --> 00:28:36.680
It shows an accurate preview in
a floating window of any of the

00:28:36.680 --> 00:28:40.860
encoded outputs or the original
signal before and after preprocessing,

00:28:40.890 --> 00:28:44.320
and you can switch that
view during a live webcast.

00:28:44.450 --> 00:28:48.200
Broadcasting and recording can be
turned on and off independently,

00:28:48.250 --> 00:28:53.740
and it can even record to disk the
DV stream that comes in over FireWire

00:28:53.740 --> 00:28:56.920
in addition to the encoded outputs.

00:28:57.560 --> 00:29:01.440
It can simultaneously encode multiple
separate Windows Media streams at

00:29:01.580 --> 00:29:07.870
anything from 240x180 dial-up to 1Mbps,
480x360 full frame rate

00:29:07.870 --> 00:29:10.100
versions for streaming over LAN.

00:29:10.380 --> 00:29:14.800
It does this entirely in software
with video input over FireWire,

00:29:14.800 --> 00:29:16.180
even on a laptop.

00:29:17.710 --> 00:29:19.600
It also has PowerPoint integration.

00:29:19.600 --> 00:29:23.980
It can load a PowerPoint presentation,
then generate PNG files of each slide,

00:29:24.070 --> 00:29:28.020
FTP those up to a web server,
and build a web template for presenting

00:29:28.020 --> 00:29:30.060
the video and slides side by side.

00:29:30.170 --> 00:29:34.460
Then during the live webcast,
it monitors what slide a user is viewing

00:29:34.460 --> 00:29:38.450
in a PowerPoint session on a remote PC,
and sends script-track commands

00:29:38.650 --> 00:29:42.760
in the live stream to flip the
slides on viewers' screens.

00:29:42.890 --> 00:29:44.900
Ironically,
it even works for viewers on Macs

00:29:44.900 --> 00:29:47.670
using Windows Media Player for Mac.

00:29:48.920 --> 00:29:51.580
Even its settings window
is a work of simplicity for

00:29:51.580 --> 00:29:53.520
managing multiple live outputs.

00:29:53.670 --> 00:29:56.420
It would seem to me that if Discrete,
with its limited resources

00:29:56.420 --> 00:29:59.040
dedicated to this project,
could put this product

00:29:59.040 --> 00:30:02.570
together almost two years ago,
Apple or one of its third-party

00:30:02.580 --> 00:30:05.890
developers should be able to
leverage QuickTime and a G5

00:30:05.920 --> 00:30:07.570
to do even better on the Mac.

00:30:07.810 --> 00:30:11.890
For us, at least, this is really the last
piece of the puzzle.

00:30:15.010 --> 00:30:17.160
As I understand,
we're supposed to wait until the

00:30:17.160 --> 00:30:20.830
end for questions and answers,
so I'll turn it over now

00:30:20.830 --> 00:30:22.190
to the next presenter.

00:30:22.970 --> 00:30:25.200
Here we go.

00:30:25.200 --> 00:30:25.200
Dave?

00:30:33.630 --> 00:30:34.940
Well, thanks for coming out, everyone.

00:30:34.940 --> 00:30:35.960
My name is Dave Schroeder.

00:30:36.010 --> 00:30:40.300
I'm a Mac geek at the
University of Wisconsin.

00:30:40.530 --> 00:30:41.460
That's a really fun job.

00:30:41.490 --> 00:30:48.470
And what I'm going to talk
about today is—let's see here.

00:30:51.590 --> 00:30:58.900
I'm going to talk about an IP video
delivery solution that we have recently

00:30:58.900 --> 00:31:00.340
put together at the university.

00:31:00.340 --> 00:31:02.500
We're currently in a pilot phase.

00:31:02.550 --> 00:31:08.460
What we wanted to do was replace an
existing actual cable TV physical

00:31:08.470 --> 00:31:13.650
plant infrastructure that we operated
for many years with something that

00:31:13.980 --> 00:31:16.500
would deliver this over the network.

00:31:16.550 --> 00:31:20.570
When we started off on this path,
we looked at a bunch of solutions

00:31:20.570 --> 00:31:25.490
from many different vendors,
and we ended up settling on a solution

00:31:25.490 --> 00:31:30.530
based on QuickTime technologies
and Apple hardware products.

00:31:31.040 --> 00:31:38.290
So I'm going to talk a little bit
about the decisions that went into us

00:31:38.300 --> 00:31:48.130
actually getting to this point and how
we actually put the system together.

00:31:48.180 --> 00:31:49.800
And right now, like I say,
we're just in pilot.

00:31:49.800 --> 00:31:54.860
We would like to expand what we talk
about here today and the exact hardware,

00:31:54.860 --> 00:31:58.880
software, and techniques that we use
to put this thing together.

00:32:00.900 --> 00:32:02.380
Um...

00:32:03.010 --> 00:32:05.600
What we call our system
that we've built is the

00:32:05.730 --> 00:32:11.660
Digital Academic Television Network,
or Dayton for short.

00:32:12.020 --> 00:32:17.770
We are deploying this alongside a
new network that we're deploying on

00:32:17.770 --> 00:32:20.110
the campus over the next few years.

00:32:20.110 --> 00:32:24.480
And since these things go hand in hand,
it's interesting to look at a little

00:32:24.480 --> 00:32:29.330
bit of the history of where we have
come over the past couple of decades,

00:32:29.420 --> 00:32:31.800
what brought us to this point.

00:32:32.260 --> 00:32:39.490
So the roots of Dayton are in our old
TV network that we operated called

00:32:39.570 --> 00:32:44.220
the Academic Television Network,
or ATN.

00:32:44.340 --> 00:32:48.800
And where this came from was
actually from an earlier predecessor

00:32:48.800 --> 00:32:50.570
that was a computer network.

00:32:50.650 --> 00:32:55.680
So in 1980, when I guess I was like
six or seven years old,

00:32:55.830 --> 00:32:59.130
our organization's predecessor,
the Madison Academic Computing Center,

00:32:59.140 --> 00:33:05.540
was operating a UNIVAC,
and people were starting to want remote

00:33:05.540 --> 00:33:07.200
terminal access to this computer.

00:33:07.200 --> 00:33:11.790
And when the university started
looking at ways to get remote

00:33:11.790 --> 00:33:16.200
terminal access to people,
we realized that using copper

00:33:16.200 --> 00:33:20.660
cables would actually fill up all
the conduit space available in

00:33:20.670 --> 00:33:25.420
the building by many times over,
and we knew we had to

00:33:25.960 --> 00:33:28.190
look at other solutions.

00:33:28.200 --> 00:33:34.830
So we put together a broadband data
transmission system that is similar

00:33:35.010 --> 00:33:37.200
to what is used for computer networks.

00:33:37.200 --> 00:33:42.280
And we have a new technology for cable
television today called SciTech LocalNet.

00:33:43.450 --> 00:33:48.520
And because it was so similar to,
you know, physically to what was required

00:33:48.520 --> 00:33:52.980
to do video distribution,
it didn't take long for departments

00:33:53.030 --> 00:33:58.370
on campus to start asking to be able
to deliver video over this system.

00:33:58.610 --> 00:34:00.480
And we did just that.

00:34:00.980 --> 00:34:05.200
And a couple years later,
we switched to Ethernet over this

00:34:05.340 --> 00:34:10.550
broadband network using cable modems,
which are ancestors to the

00:34:10.550 --> 00:34:14.500
modern cable modems that people
use today in their homes.

00:34:14.520 --> 00:34:16.320
And then we jump ahead about a decade.

00:34:16.480 --> 00:34:23.080
On the video side of things,
we knew that we needed to deploy

00:34:23.080 --> 00:34:28.870
cable TV into our dormitories to
be able to have that be one of the

00:34:28.920 --> 00:34:33.410
things that attracts students to live
in the university-operated housing.

00:34:33.630 --> 00:34:39.530
So we actually embarked on a project
where we wired all of our dorms with

00:34:39.530 --> 00:34:44.500
normal coaxial cable and called it
the Residential Television Network.

00:34:44.500 --> 00:34:48.380
The original network that we operated
was the Academic Television Network.

00:34:48.560 --> 00:34:53.060
And this was available to all the dorms,
and we contracted with the local cable

00:34:53.120 --> 00:34:58.500
operator to provide all these channels,
all of the local cable channels,

00:34:58.500 --> 00:35:00.500
non-premium channels to the dorms.

00:35:00.500 --> 00:35:05.330
Now I should mention about the
Academic Television Network.

00:35:05.700 --> 00:35:10.500
It is something that was used
for instructional content.

00:35:10.500 --> 00:35:14.400
Departments were allowed to
put whatever they wanted on it.

00:35:14.540 --> 00:35:17.240
So we gave channels to people
like the College of Engineering,

00:35:17.350 --> 00:35:20.600
our School of Nursing,
and they'd maybe have a,

00:35:20.910 --> 00:35:26.500
there was some experimentation with
doing courses over this network.

00:35:26.500 --> 00:35:31.230
So people could go to remote locations
and actually attend a lecture or

00:35:31.630 --> 00:35:36.670
watch pre-existing instructional
content that some departments would put

00:35:36.780 --> 00:35:40.480
together and then loop on particular
channels or play at predefined times.

00:35:40.510 --> 00:35:41.740
So really a lot of people had their
own channels that they could do

00:35:41.740 --> 00:35:42.420
whatever they wanted to do with.

00:35:42.500 --> 00:35:42.500
So we gave channels to people
like the College of Engineering,

00:35:42.500 --> 00:35:42.500
our School of Nursing,
and they'd maybe have a,

00:35:42.500 --> 00:35:42.500
there was some experimentation with
doing courses over this network.

00:35:42.500 --> 00:35:42.760
So people could go to remote locations
and actually attend a lecture or

00:35:42.770 --> 00:35:43.050
watch pre-existing instructional
content that some departments would put

00:35:43.050 --> 00:35:43.450
together and then loop on particular
channels or play at predefined times.

00:35:43.510 --> 00:35:45.890
whatever they wanted to do with.

00:35:46.390 --> 00:35:52.220
When we did the RTN,
we asked our local cable operator,

00:35:52.220 --> 00:36:00.250
which in our area is
Charter Communications,

00:36:00.250 --> 00:36:00.250
formerly Bresnan, formerly TCI,
and now we're at Charter.

00:36:00.300 --> 00:36:05.180
To allow us to put some selected channels
on the academic television network.

00:36:05.260 --> 00:36:08.940
So we took channels like CNN,
Headline News, C-Span,

00:36:09.080 --> 00:36:12.800
The Weather Channel,
and some foreign language channels

00:36:12.860 --> 00:36:17.800
and things of that nature and put them
on the academic television network.

00:36:18.030 --> 00:36:22.480
And this is important because this
represents the basis of what we're

00:36:23.000 --> 00:36:27.390
able to do with Dayton today that
you'll hear about in a minute.

00:36:27.820 --> 00:36:32.850
So a couple of years ago,
we started having trouble

00:36:32.960 --> 00:36:35.500
maintaining the ATN.

00:36:35.500 --> 00:36:39.830
It was tough to find replacements
for some of the equipment.

00:36:40.120 --> 00:36:44.040
A lot of the equipment was becoming
obsolete or had been obsolete for years.

00:36:44.040 --> 00:36:47.850
It was hard to find people
with actual cable TV and video

00:36:47.900 --> 00:36:51.610
expertise to maintain the system,
and it was hard to find people

00:36:51.610 --> 00:36:54.570
like that who wanted to crawl
around in steam tunnels to

00:36:54.580 --> 00:36:56.100
repair the equipment as it broke.

00:36:56.180 --> 00:37:01.660
So the next item there is
that the ATN was shut down.

00:37:01.660 --> 00:37:04.000
That's not strictly true.

00:37:04.000 --> 00:37:08.080
It was kind of shut down in phases
as things failed and until it

00:37:08.080 --> 00:37:10.560
just stopped working completely.

00:37:10.590 --> 00:37:18.320
And we knew we wanted to replace the
functionality of ATN with something else.

00:37:18.500 --> 00:38:42.300
[Transcript missing]

00:38:42.530 --> 00:38:46.610
So the reason why we started down
this path to build a new network

00:38:47.060 --> 00:38:52.840
was because we realized that we
had exponential traffic growth,

00:38:53.090 --> 00:38:56.400
but not exponential funding growth.

00:38:56.400 --> 00:39:00.360
If we let the traffic grow—and
the University of Wisconsin has

00:39:00.360 --> 00:39:02.940
always had a philosophy of we're
not going to limit traffic,

00:39:02.940 --> 00:39:05.530
we're not going to limit what
people do with the network.

00:39:05.600 --> 00:39:11.420
And so as things grew,
we had to find ways to pay for it,

00:39:11.420 --> 00:39:16.000
and that was becoming
increasingly difficult.

00:39:16.000 --> 00:39:19.450
And also another aspect
is that the University of

00:39:20.030 --> 00:39:21.950
Wisconsin is a large campus.

00:39:22.010 --> 00:39:23.200
This is the Madison campus.

00:39:23.200 --> 00:39:26.800
We have almost 50,000 students.

00:39:26.800 --> 00:39:33.550
We have tens of thousands of employees,
30 major departments and units,

00:39:33.750 --> 00:39:37.550
and a lot of little departments,
and a whole bunch of different lands that

00:39:37.550 --> 00:39:43.700
all have their own needs and desires and
ways that they want to run their network,

00:39:43.830 --> 00:39:46.270
that sometimes don't cooperate
with how we want to centrally

00:39:46.270 --> 00:39:47.500
administer the network.

00:39:47.670 --> 00:39:56.480
So the solutions that we came to are
really eliminating a lot of the multiple

00:39:56.480 --> 00:39:59.420
transports that we used to maintain,
like AppleTalk, IPX,

00:39:59.540 --> 00:40:02.270
and everything—converging
everything to IP.

00:40:02.500 --> 00:43:16.600
[Transcript missing]

00:43:16.830 --> 00:43:23.770
We wanted to be able to show the campus
killer applications for why they would

00:43:23.770 --> 00:43:25.560
want to move over to this network.

00:43:25.640 --> 00:43:29.550
And we think that Dayton video delivery
over the network is one of them.

00:43:29.680 --> 00:43:37.560
So when we decided to
start building Dayton,

00:43:37.560 --> 00:43:37.560
we

00:43:38.100 --> 00:44:50.100
[Transcript missing]

00:44:50.290 --> 00:44:52.660
That kind of plays into the next
thing—flexible content delivery.

00:44:52.660 --> 00:44:56.690
We want to be able to reach the
widest variety of clients possible.

00:44:56.840 --> 00:45:01.380
We don't want to be tied into
clients or platforms that have just,

00:45:01.380 --> 00:45:05.200
you know, whatever the particular player
that's required available.

00:45:05.200 --> 00:45:07.270
We want to be able to
play to other things,

00:45:07.270 --> 00:45:10.890
not just computers, too, possibly,
you know, set-top boxes and other

00:45:10.890 --> 00:45:12.420
devices on the client end.

00:45:12.460 --> 00:45:14.740
And cost was a concern for us.

00:45:17.610 --> 00:45:21.330
Initially,
we have a relatively small pilot,

00:45:21.330 --> 00:45:25.470
but we wanted to obviously
keep the cost down,

00:45:25.480 --> 00:45:31.780
and the XServe that we use to do the
broadcasting is a lot less expensive

00:45:32.210 --> 00:45:33.710
than some competitive products.

00:45:33.720 --> 00:45:36.500
And one other thing
that we can do easily,

00:45:36.500 --> 00:45:40.680
albeit with a little modification,
is multiple streams with a

00:45:40.710 --> 00:45:44.280
single server—multiple different
streams with a single server

00:45:44.280 --> 00:45:44.280
that isn't as easy as it is,
or sometimes even more difficult.

00:45:44.340 --> 00:45:54.200
And then the software—well,
this was a no-brainer.

00:45:54.770 --> 00:45:57.980
QuickTime Player,
free for Mac OS and Windows.

00:45:58.350 --> 00:45:59.820
QuickTime Broadcaster, free.

00:45:59.920 --> 00:46:02.310
QuickTime Streaming Server,
essentially free,

00:46:02.310 --> 00:46:04.280
because we do all of our
streaming with XServes,

00:46:04.330 --> 00:46:08.470
comes with OS X Server, which comes with
QuickTime Streaming Server.

00:46:09.000 --> 00:49:39.000
[Transcript missing]

00:49:39.980 --> 00:49:43.270
And then on the software side of things,
of course, OS X server, Broadcaster,

00:49:43.270 --> 00:49:46.960
QuickTime streaming server,
and on the client end, of course,

00:49:46.960 --> 00:49:49.120
QuickTime Player,
available on Mac OS and Windows,

00:49:49.120 --> 00:49:52.400
but then open source players like VLC,
which people can use

00:49:52.400 --> 00:49:54.710
on Mac OS and Windows,
but also other platforms.

00:49:54.720 --> 00:49:59.050
Linux, BOS, Solaris,
pretty much anything you can think of,

00:49:59.070 --> 00:50:02.600
or any MPEG-4 compliant device,
like MPEG-4,

00:50:02.920 --> 00:50:08.400
like set-top boxes that might have the
capability to play back MPEG-4 content.

00:50:08.400 --> 00:50:11.850
So someone might be able to have
this paired up with a television

00:50:11.850 --> 00:50:16.310
set or a projector and doesn't
necessarily have to have strictly a

00:50:16.370 --> 00:50:18.610
computer to view these broadcasts.

00:50:20.080 --> 00:50:23.820
So here's a typical node for Dayton.

00:50:23.820 --> 00:50:27.560
The head node is just kind of by itself,
and you can see it's a

00:50:27.560 --> 00:50:28.900
picture of an XServe G5 there.

00:50:29.130 --> 00:50:30.500
It will be a G5 soon.

00:50:30.500 --> 00:50:31.790
It's currently a G4.

00:50:31.850 --> 00:50:32.760
And then our streaming nodes.

00:50:32.760 --> 00:50:40.700
We've got the cluster node itself,
and the tuner is connected

00:50:40.700 --> 00:50:46.620
to video and audio to our
little AV firewire converter,

00:50:46.620 --> 00:50:50.430
and then that's just connected by a
single firewire cable to the XServe.

00:50:50.430 --> 00:50:55.120
And then we have this closed captioning
decoder that is connected by another

00:50:55.120 --> 00:50:59.470
composite video cable to the Canopus,
and then via a serial

00:50:59.470 --> 00:51:01.280
cable to the XServe.

00:51:01.280 --> 00:51:04.900
So we actually use the serial port on
the XServe instead of for management.

00:51:04.960 --> 00:51:06.920
We actually just use it
as a normal serial port.

00:51:06.920 --> 00:51:12.400
We've disabled the console capability
in one of the configuration files

00:51:12.400 --> 00:51:15.920
on OS X server and just let it
act as a straight serial port.

00:51:15.920 --> 00:51:20.670
And then in some of the servers,
we've started experimenting also

00:51:20.670 --> 00:51:23.840
with the Alchemy TV card from Miglia.

00:51:23.840 --> 00:51:31.360
So without the Alchemy TV card,
we can do one channel with closed

00:51:31.540 --> 00:51:34.580
captioning in 2U of rack space.

00:51:34.580 --> 00:51:40.620
If we don't talk about closed captioning,
we've actually found that we can

00:51:40.620 --> 00:51:45.140
do three simultaneous broadcasts
from one server in 1U of rack

00:51:45.140 --> 00:51:46.760
space using these tuner cards.

00:51:46.760 --> 00:51:49.940
Now in the XServe G5,
there's only two PCI slots,

00:51:49.940 --> 00:51:50.930
and we're already doing that now.

00:51:51.110 --> 00:51:54.980
So we're back down to two unless we
want to do something with firewire.

00:51:54.980 --> 00:51:57.360
And we think that two is
probably a good number anyway.

00:51:57.360 --> 00:52:01.170
So we're figuring on being able to
do two channels in 1U of rack space,

00:52:01.170 --> 00:52:03.100
and we're already doing that now.

00:52:06.210 --> 00:52:11.340
So, what does Dayton actually look like?

00:52:11.390 --> 00:52:15.800
And so here's our pilot system right now.

00:52:15.800 --> 00:52:18.620
You can see that we've got a
bunch of XSERV cluster nodes

00:52:18.680 --> 00:52:22.450
and interspersed in between each
XSERV cluster node is our tuner.

00:52:22.570 --> 00:52:25.710
And the reason why we've done that is
the tuners are really not that deep.

00:52:25.710 --> 00:52:29.480
They're only a couple inches deep and
the XSERVs are however deep they are

00:52:29.480 --> 00:52:35.660
and so that kind of leaves this little
shelf of space in between each XSERV that

00:52:35.660 --> 00:52:37.760
we can stick the other equipment in.

00:52:37.760 --> 00:52:42.180
So it ends up being a really nice
clean installation and really easy

00:52:42.180 --> 00:52:45.720
to set up just with the management
capabilities of OS X Server and doing

00:52:45.760 --> 00:52:51.900
things like cloning drives that are just,
you know, really straightforward on OS X.

00:52:51.900 --> 00:52:57.240
All we really did was set up the system
on one cluster node of how we wanted

00:52:57.400 --> 00:53:00.720
everything to be configured and then
we just kind of blasted that out to the

00:53:00.720 --> 00:53:05.220
rest of the machines and we actually even
had all the servers running for a while.

00:53:05.230 --> 00:53:07.880
It was net booted from the head node.

00:53:07.890 --> 00:53:10.920
I didn't really see any advantage
of keeping doing just the net

00:53:11.020 --> 00:53:13.750
booting since it was so easy,
since it was like just minutes to clone

00:53:13.980 --> 00:53:17.500
a drive and pop it into a new machine
so then we could eliminate one other

00:53:17.500 --> 00:53:21.810
kind of point of failure and this is it.

00:53:22.700 --> 00:53:26.700
This is what our web
front end looks like.

00:53:26.700 --> 00:53:32.190
We wanted people running whatever OS they
were running to be able to hit this site.

00:53:32.360 --> 00:53:37.570
So this is actually our channels page,
and we just have all of our channel

00:53:37.570 --> 00:53:39.590
logos of what we're carrying right now.

00:53:39.830 --> 00:53:42.600
And now might be a good time to
stop here and talk for a second.

00:53:42.600 --> 00:53:48.230
I've had a couple people ask me,
why are you doing TV channels?

00:53:48.240 --> 00:53:51.670
Who cares if someone can
watch CBS on their desktop?

00:53:51.680 --> 00:53:55.330
Especially if you're already
delivering cable TV to your dorms

00:53:55.480 --> 00:53:58.630
and to university buildings using
just ordinary cable network.

00:53:58.680 --> 00:54:02.430
Well,
this isn't just—we don't envision this

00:54:02.430 --> 00:54:05.720
just being for doing cable TV channels.

00:54:05.720 --> 00:54:09.000
We did cable TV channels first
because they were the easiest.

00:54:09.000 --> 00:54:11.440
We already had an agreement
with our cable operator.

00:54:11.530 --> 00:54:12.960
It was easy to get the content.

00:54:12.960 --> 00:54:14.030
It's just content.

00:54:14.030 --> 00:54:16.560
And it's something that
people can identify with.

00:54:17.420 --> 00:54:21.660
People know TV,
and when they see it come up,

00:54:21.660 --> 00:54:21.660
they're like, oh, yeah,
I know what it is.

00:54:21.660 --> 00:54:24.280
And so we put them up in a
little window on their computer,

00:54:24.280 --> 00:54:27.590
and when we explained to them that
these types of things that you're doing

00:54:27.630 --> 00:54:31.400
now that seem relatively simple just
weren't possible on our network before.

00:54:31.400 --> 00:54:35.650
We're a very large campus,
and we don't think that it would

00:54:35.650 --> 00:54:40.190
have been practical or possible
to deploy something like this

00:54:40.190 --> 00:54:44.620
to this number of people without
some of the new technologies

00:54:44.620 --> 00:54:47.120
that the new network gives us.

00:54:47.120 --> 00:54:49.150
Not only the higher
bandwidth that we get,

00:54:49.280 --> 00:54:51.640
but doing everything
with the same technology.

00:54:51.640 --> 00:54:54.740
So, as the previous presenter
was referring to,

00:54:54.890 --> 00:54:57.540
this multicast capability is really key.

00:54:57.550 --> 00:55:02.630
For those of you in here who might not be
familiar with what this multicast means,

00:55:02.630 --> 00:55:06.690
what it essentially means is
when everyone—let's say someone

00:55:06.690 --> 00:55:10.570
decides they want to view CNN,
and they click on the CNN logo,

00:55:10.570 --> 00:55:13.000
and it comes up on their screen.

00:55:13.000 --> 00:55:17.500
On a unicast network,
which is really just what

00:55:17.500 --> 00:55:20.670
most networks ordinarily are,
they're going to be able to view CNN.

00:55:20.780 --> 00:55:23.650
Every single person who clicks on CNN,
that's another stream

00:55:23.650 --> 00:55:24.720
going out from the server.

00:55:24.900 --> 00:55:27.390
It's more load on the server,
and it's more load on the

00:55:27.460 --> 00:55:29.040
pipe leading to the server.

00:55:29.040 --> 00:55:31.830
Every single additional
connection takes more bandwidth

00:55:31.830 --> 00:55:33.500
and has more load on the server.

00:55:33.500 --> 00:55:37.340
With multicast, there is one stream
coming out of the server.

00:55:37.340 --> 00:55:41.810
And that signal has the capacity
to get anywhere on the network

00:55:42.050 --> 00:55:44.360
that multicast is enabled.

00:55:45.040 --> 00:55:48.290
Other computers out on the network,
out on network segments that

00:55:48.480 --> 00:55:51.960
aren't viewing any broadcasts,
don't have to see the traffic.

00:55:52.030 --> 00:55:55.780
But if you get one, two,
ten people viewing it in

00:55:55.840 --> 00:55:59.810
a particular building,
it's all still just the one

00:55:59.900 --> 00:56:02.050
signal that's going out.

00:56:02.130 --> 00:56:06.030
So that's really critical because
it means that we can have limited

00:56:06.140 --> 00:56:09.940
hardware on our end for delivery
and limited impact on the network

00:56:10.040 --> 00:56:12.430
when people use a service like this.

00:56:12.460 --> 00:56:16.310
So we want to add in
instructional content.

00:56:16.340 --> 00:56:22.170
We want to put encoders at some of the
broadcast studios that we have on campus.

00:56:22.170 --> 00:56:24.270
For example,
Wisconsin Public Television exists

00:56:24.270 --> 00:56:24.970
on our campus.

00:56:24.980 --> 00:56:29.240
Our School of Journalism and
Mass Communication would like

00:56:29.240 --> 00:56:31.390
to put content on Dayton.

00:56:31.400 --> 00:56:34.300
So really,
anyone who wants to become a part of

00:56:34.430 --> 00:56:38.880
Dayton after we're out of the pilot
phase can get an encoder and can get

00:56:39.030 --> 00:56:44.080
some kind of placement or representation
within Dayton and can then start

00:56:44.840 --> 00:56:51.620
referring their customer base to
one central location for video content.

00:56:51.850 --> 00:56:54.220
Here's our player.

00:56:54.590 --> 00:56:59.090
A guy by the name of George Cook from
Apple helped us set this player up.

00:56:59.420 --> 00:57:03.220
So this is a QuickTime skin that just has

00:57:03.510 --> 00:57:07.160
All of the channels that we carry
right now over on the left-hand side,

00:57:07.160 --> 00:57:08.800
you can click on them
and change the channel.

00:57:09.050 --> 00:57:12.310
We have a special area up
here that could potentially

00:57:12.410 --> 00:57:15.870
display customized information,
weather information, announcements,

00:57:16.000 --> 00:57:16.570
what have you.

00:57:16.570 --> 00:57:18.730
Then, of course, the video itself,
ways to turn on and

00:57:18.730 --> 00:57:21.580
off closed captioning,
and our actual closed captioning content.

00:57:21.580 --> 00:57:28.920
The way that the closed captioning
works is we have a script that

00:57:28.930 --> 00:57:34.990
runs on each individual streaming
machine that captures each line of

00:57:35.140 --> 00:57:38.200
closed captioning text as it comes
in from that text grabber box,

00:57:38.200 --> 00:57:41.200
and then places it in an
XML file on the server.

00:57:41.200 --> 00:57:47.150
The web server is turned on—Apache's
turned on—on each cluster node,

00:57:47.150 --> 00:57:51.200
and this text track here knows
to query a particular text.

00:57:51.310 --> 00:57:55.670
particular URL and check and see
if there's a new line of text.

00:57:55.830 --> 00:57:57.320
If there is, display it.

00:57:57.350 --> 00:58:00.920
If there's not, do nothing,
or if there's no text,

00:58:01.190 --> 00:58:02.220
just have it black.

00:58:02.510 --> 00:58:05.370
And people can--people have
the option to turn that off.

00:58:05.720 --> 00:58:08.010
People have the option to go
full screen and eliminate all

00:58:08.010 --> 00:58:09.750
this other stuff around it.

00:58:09.830 --> 00:58:13.330
People have the option to even
view the closed captioning

00:58:13.340 --> 00:58:16.270
content completely by itself.

00:58:16.280 --> 00:58:19.910
And this is probably a good--a good time
to just briefly touch on what I mean

00:58:19.910 --> 00:58:22.110
by the granularity is useful to us.

00:58:22.390 --> 00:58:24.480
If this was some kind
of a turnkey solution,

00:58:24.480 --> 00:58:28.130
we wouldn't be able to do something
that the school of journalism

00:58:28.130 --> 00:58:31.570
came to us and asked which is,
"Hey, you're capturing--you have all

00:58:31.580 --> 00:58:35.380
this closed caption content
associated with these channels.

00:58:35.380 --> 00:58:38.670
What if we took all of
the closed captioning,

00:58:38.820 --> 00:58:43.640
put it in a database, made it searchable,
and collected it for

00:58:43.640 --> 00:58:48.530
weeks or months or years,
and took little thumbnail snapshots of

00:58:48.610 --> 00:58:48.900
what it looks like and what it looks
like in the real world and then we could

00:58:48.900 --> 00:58:51.810
use it to do whatever the video was
along with the closed captioning text,

00:58:52.010 --> 00:58:54.620
say every 30 seconds or a minute,
just for reference,

00:58:54.620 --> 00:58:57.910
and made this a searchable database
for our faculty and our students

00:58:57.940 --> 00:59:01.860
so that people could do things like
maybe search all of the news channels

00:59:01.860 --> 00:59:05.530
for particular terms that occurred,
how many times did this

00:59:05.620 --> 00:59:07.350
occur in a particular period.

00:59:07.420 --> 00:59:10.000
And it can become a very
valuable research tool and a

00:59:10.000 --> 00:59:12.400
very valuable historical tool.

00:59:12.400 --> 00:59:17.100
And I don't think that a turnkey solution
that might have provided us with this

00:59:17.610 --> 00:59:18.640
would not have enabled us to do that.

00:59:18.670 --> 00:59:28.600
So, we're going to try to do a demo and
if we could switch to--let's see,

00:59:28.600 --> 00:59:28.600
let's see if

00:59:29.330 --> 00:59:30.810
The demo machine, thank you.

00:59:30.810 --> 00:59:33.400
And so here's what customers
see when they come in to

00:59:33.400 --> 00:59:34.830
the Dayton site right now.

00:59:34.840 --> 00:59:37.410
We give people a URL and
just tell them—you know,

00:59:37.450 --> 00:59:40.960
we don't really tell them what they
need or anything like that first.

00:59:40.960 --> 00:59:45.680
If someone's asking about Dayton,
we just say, okay, visit dayton.wisc.edu.

00:59:45.680 --> 00:59:50.080
And you guys can visit this site, too,
because we have some other information

00:59:50.140 --> 00:59:53.810
up here that talks about Dayton,
our history, the things we use,

00:59:53.810 --> 00:59:56.940
and kind of just some of the
things that I've talked about

00:59:56.940 --> 00:59:59.180
here and some pictures of Dayton.

00:59:59.200 --> 01:00:03.680
So the first page, we just give people
some basic information,

01:00:03.770 --> 01:00:08.320
review your system requirements,
verify that you're connected

01:00:08.410 --> 01:00:10.320
to a multicast network.

01:00:10.410 --> 01:00:13.750
And since we're tying this
with the 21st Century Network,

01:00:13.750 --> 01:00:17.690
which is the thing that's actually
enabling multicast for most people,

01:00:17.690 --> 01:00:19.990
we've gotten a lot of
requests lately for,

01:00:20.170 --> 01:00:23.820
when are we going to get cut
over to the 21st Century Network?

01:00:23.820 --> 01:00:26.660
Make sure that the
people have quick time,

01:00:26.660 --> 01:00:31.630
and then we send people
either to— the channels page,

01:00:31.630 --> 01:00:32.330
or

01:00:33.100 --> 01:02:37.300
[Transcript missing]

01:02:37.760 --> 01:02:39.690
So let's see if C-SPAN works.

01:02:40.010 --> 01:02:49.660
What I've done here is we have a
unicast version of this one broadcast.

01:02:51.940 --> 01:02:52.800
So there we go.

01:02:52.830 --> 01:02:56.990
And obviously there's audio
along with it as well.

01:02:57.130 --> 01:03:01.340
But this is what people see.

01:03:01.340 --> 01:03:04.940
Now,
when you look at what our qualifications

01:03:04.940 --> 01:03:09.180
were for this service is we wanted it
to be able to handle high speed motion,

01:03:09.270 --> 01:03:10.550
so we do 30 frames per second.

01:03:10.650 --> 01:03:13.780
It actually works for sporting
events and things like that.

01:03:13.780 --> 01:03:18.750
And we wanted it to be able to
do—we wanted text to be visible.

01:03:18.990 --> 01:03:22.900
But we wanted to do it at still
a reasonable enough quality where

01:03:22.920 --> 01:03:25.770
relatively low end clients would
be able to connect to this thing.

01:03:25.770 --> 01:03:30.170
We didn't want to blast everyone out of
the water and require some high end P4s

01:03:30.270 --> 01:03:32.940
or G4s to be able to connect to this.

01:03:32.940 --> 01:03:37.170
What's that?

01:03:42.700 --> 01:03:47.700
Oh, yes.

01:03:47.700 --> 01:03:51.690
So the video stream right
now is about 1.3 megabits,

01:03:51.700 --> 01:03:53.550
and you'll see it spike
every once in a while,

01:03:53.550 --> 01:03:56.940
but we've got it set at 1.3,
and then the audio is separate from that.

01:03:57.060 --> 01:04:00.270
We can actually get higher qualities
if we go higher bandwidths,

01:04:00.270 --> 01:04:04.060
and we think we're going to be able to
get really higher quality with H.264,

01:04:04.170 --> 01:04:08.040
so we're really looking forward
to using the H.264 codec.

01:04:08.040 --> 01:04:13.010
We can even get higher quality if we
use the third-party MPEG-4 codec from

01:04:13.010 --> 01:04:16.970
a place called Thrivix at 3ivx.com.

01:04:16.980 --> 01:04:20.830
Right now,
we're just using the Apple MPEG-4 codec.

01:04:21.000 --> 01:04:24.970
So if we go full screen,
you'll be able to see that

01:04:25.250 --> 01:04:28.610
it is a little bit grainy,
but like I said,

01:04:28.610 --> 01:04:33.400
the priority was to be able to reach
the widest possible variety of clients

01:04:33.540 --> 01:04:36.380
with the technology for encoding that
we had available to us right now.

01:04:36.680 --> 01:04:39.270
Now, hopefully, there's closed captioning
along with this,

01:04:39.430 --> 01:04:41.320
and you'll be able to see that, too.

01:04:43.650 --> 01:04:46.680
Well, this is one of the times
where unfortunately the

01:04:46.680 --> 01:04:47.870
demo guards aren't with me.

01:04:47.940 --> 01:04:50.090
It doesn't look like there's closed
captioning along with it right now.

01:04:50.090 --> 01:04:53.080
If there was,
you'd see the text scrolling

01:04:53.080 --> 01:04:54.800
along on the bottom of the screen.

01:04:54.980 --> 01:04:58.760
In fact, what I can do is—

01:04:59.090 --> 01:05:02.760
Just see if I can bring up the closed
captioning from another channel.

01:05:02.760 --> 01:05:03.670
So here's how it works.

01:05:03.920 --> 01:05:06.520
Now, you're not going to be able
to—the video's not going to

01:05:06.520 --> 01:05:10.710
load for this because this is
just a multicast-only channel.

01:05:10.790 --> 01:05:11.070
There it is.

01:05:11.180 --> 01:05:12.610
That's how the closed captioning works.

01:05:12.790 --> 01:05:17.710
And on the info page for each channel,
we let people even load the closed

01:05:17.710 --> 01:05:20.610
captioning by itself if they want to.

01:05:21.870 --> 01:05:25.550
So people can pretty much take this and
do whatever they want to do with it.

01:05:25.620 --> 01:05:30.240
They can even access the XML files
that has the raw text in it themselves.

01:05:32.340 --> 01:05:44.310
So that is Dayton.

01:05:45.350 --> 01:05:45.380
And if we go back to the slides,
I don't think there's

01:05:45.380 --> 01:05:45.380
actually any slides left.

01:05:45.380 --> 01:05:45.380
For more information,
you can visit our website

01:05:45.380 --> 01:05:45.380
at dayton.wisc.edu.

01:05:46.440 --> 01:05:52.540
And here's how to get in touch
with Nate and Dave Devereaux-Weber

01:05:52.540 --> 01:05:55.040
is actually the manager of
this project at the university.

01:05:55.160 --> 01:05:59.900
He couldn't make it with us today,
but that's my presentation.

01:06:00.010 --> 01:06:02.100
Thank you.