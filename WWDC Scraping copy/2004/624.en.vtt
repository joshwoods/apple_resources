WEBVTT

00:00:12.290 --> 00:00:14.280
Welcome to the session
Safari in the Enterprise.

00:00:14.280 --> 00:00:20.600
We're, put up a little slide, that's me,
here at last.

00:00:20.600 --> 00:00:23.300
I wanted to wait outside a little
bit and make sure that people had

00:00:23.300 --> 00:00:26.000
enough time to come in since the
last session went a little long,

00:00:26.000 --> 00:00:27.360
so pardon the delay on this.

00:00:27.480 --> 00:00:28.980
Here's what we're going to cover today.

00:00:29.000 --> 00:00:31.440
A little Safari history
and coming of age,

00:00:31.540 --> 00:00:35.660
building applications that just
work from an IT perspective.

00:00:35.660 --> 00:00:38.710
I want to give you some development
recommendations as well as

00:00:38.720 --> 00:00:41.540
some debugging techniques,
common things that folks run into

00:00:41.540 --> 00:00:45.060
when they're trying to get their
enterprise application up and running.

00:00:45.060 --> 00:00:48.180
And then we've got some special
guests here to come up and

00:00:48.210 --> 00:00:51.660
talk about them dealing with
Safari in their organization,

00:00:51.660 --> 00:00:54.550
what they look at as far as
their IT requirements for

00:00:54.550 --> 00:00:56.760
browsers and their experiences.

00:00:56.780 --> 00:01:01.190
Supporting Safari as well as
PeopleSoft here to talk about their

00:01:01.190 --> 00:01:04.160
experience certifying Safari as well.

00:01:04.160 --> 00:01:06.720
And then wrap it up with
how to partner with Apple,

00:01:06.850 --> 00:01:10.160
how you can make sure that your
enterprise applications work.

00:01:10.160 --> 00:01:13.310
The ones that you author and
the ones that you buy as well.

00:01:13.310 --> 00:01:15.430
So let's get going.

00:01:15.650 --> 00:01:17.220
First of all, I want to start off
with a little road map.

00:01:17.260 --> 00:01:20.100
We need to set some context for Safari.

00:01:20.130 --> 00:01:23.980
And just to outline,

00:01:24.310 --> 00:01:25.860
First of all, I want to start off
with a little road map.

00:01:25.860 --> 00:01:28.700
We need to set some context for Safari.

00:01:28.700 --> 00:01:57.080
And just to outline,
we want to make sure that we have

00:01:57.080 --> 00:01:59.840
something on our platform that
is the best that's out there.

00:01:59.840 --> 00:02:04.940
Of course, not all IEs are created equal,
as you've probably found out.

00:02:04.940 --> 00:02:07.820
A lot of IT shops would
go and standardize on IE.

00:02:07.820 --> 00:02:09.600
We'd support IE on Windows.

00:02:09.640 --> 00:02:11.170
We'd support IE on the Mac.

00:02:11.180 --> 00:02:14.200
And yet, there were still plenty of
differences there as well.

00:02:14.230 --> 00:02:17.890
So what we wanted to do is create
a good target on our platform

00:02:17.900 --> 00:02:21.970
for IT application developers
as well as internal developers.

00:02:22.000 --> 00:02:27.890
And of course, to support our developers,
we need to have something out there that

00:02:28.670 --> 00:02:29.980
you can leverage in your application.

00:02:29.980 --> 00:02:32.710
If you're building your own
app that needs these sort

00:02:32.740 --> 00:02:35.170
of web application services,
go ahead.

00:02:35.180 --> 00:02:39.020
You can use our WebKit APIs,
build an application that takes

00:02:39.020 --> 00:02:42.090
advantage of the same sort of
architecture that Safari uses for

00:02:42.420 --> 00:02:45.280
its rendering and its JavaScript.

00:02:45.940 --> 00:02:48.300
And to, of course,
add the innovative features that

00:02:48.360 --> 00:02:49.990
you expect out of Apple computer.

00:02:50.000 --> 00:02:53.800
A clean browser, a nice browser with
features that you expect.

00:02:53.800 --> 00:02:58.530
Something a little more innovative
than just putting up HTML in a window.

00:02:59.970 --> 00:03:01.300
So here's what we delivered.

00:03:01.410 --> 00:03:02.450
Open source core.

00:03:02.450 --> 00:03:04.260
Nifty drop in here.

00:03:04.260 --> 00:03:10.280
JavaScript core, web core,
those are open source libraries created

00:03:10.280 --> 00:03:15.830
as wrappers around KHTML and KJS,
which we sourced from the KDE group.

00:03:16.070 --> 00:03:19.030
And those of you out there, KDE is,
if you aren't familiar,

00:03:19.060 --> 00:03:21.220
is the windowing environment for Linux.

00:03:21.220 --> 00:03:25.880
And they use these same core
libraries in their browser,

00:03:25.880 --> 00:03:28.410
their window viewer,
and their file viewer, all sorts,

00:03:28.410 --> 00:03:29.680
all over the place actually.

00:03:29.680 --> 00:03:35.180
It's sort of their main interface
for viewing content in their OS.

00:03:35.180 --> 00:03:38.640
On top of it, we wrapped WebKit,
which is a higher level.

00:03:38.690 --> 00:03:40.300
Cocoa API, also a C API.

00:03:40.300 --> 00:03:42.750
And on top of that,
we just built this thin

00:03:42.750 --> 00:03:44.320
veneer that's Safari.

00:03:44.320 --> 00:03:47.400
If you look at the stack here,
it's pretty true to how

00:03:47.400 --> 00:03:48.920
much is really Safari.

00:03:48.920 --> 00:03:51.130
It's about 20% is actual Safari code.

00:03:51.240 --> 00:03:54.720
And then the rest is WebKit and
the web core and JavaScript core.

00:03:54.720 --> 00:03:58.350
Any changes we make at that
low-level JavaScript core,

00:03:58.350 --> 00:04:01.300
WebKit core,
we push back out to open source.

00:04:01.580 --> 00:04:05.040
So you're free to go to the
website and pick up that.

00:04:05.320 --> 00:04:08.160
Other companies have actually built
browsers on Mac OS X around that.

00:04:08.240 --> 00:04:11.600
And you're welcome to contribute
bug fixes or features or

00:04:11.600 --> 00:04:13.240
all those things as well.

00:04:14.850 --> 00:04:17.360
We also delivered impressive performance.

00:04:17.360 --> 00:04:22.070
Our latest iBench scores on the website
at dabble.com indicate that we're by

00:04:22.070 --> 00:04:24.940
far the fastest browser on the platform.

00:04:24.940 --> 00:04:27.660
With Tiger coming out,
we're of course going to rerun

00:04:27.660 --> 00:04:30.990
those benchmarks and ensure
that we keep that place.

00:04:31.520 --> 00:04:33.160
Standards compliant.

00:04:33.160 --> 00:04:35.160
Number one,
we wanted to make sure that we

00:04:35.160 --> 00:04:38.940
gave IT folks a target to shoot
for that wasn't a browser name.

00:04:38.940 --> 00:04:42.940
And so we adopted the W3
standards as what we build to.

00:04:42.940 --> 00:04:48.140
And the W3C is the standards
body for CSS and DOM.

00:04:48.140 --> 00:04:52.930
And we support DOM 2, CSS 1, CSS 2.1,
as well as the latest version

00:04:52.930 --> 00:04:57.000
of Safari that you can download,
whether it's the Panther version

00:04:57.000 --> 00:04:58.660
or the Tiger version.

00:04:58.660 --> 00:05:02.900
Some nifty CSS 3 things that still
haven't quite been vetted out.

00:05:02.900 --> 00:05:04.990
And of course,
we have to match the reality of the web.

00:05:05.090 --> 00:05:07.740
The web is a big place and
it's not full of standard code.

00:05:07.740 --> 00:05:10.950
There's plenty of extensions that
we've had to add just to make sure

00:05:10.950 --> 00:05:14.140
that the browser worked with commercial
sites that you use every day.

00:05:14.140 --> 00:05:18.450
We still got some distance to go on that,
but we've added some compatibility

00:05:18.450 --> 00:05:22.100
extensions that are found in all
other browsers that aren't part

00:05:22.140 --> 00:05:25.890
of this standard just to ensure
that we would work properly.

00:05:26.500 --> 00:05:29.290
And finally,
we created an extensible browser as well.

00:05:29.290 --> 00:05:30.630
You can create plug-ins.

00:05:30.640 --> 00:05:33.160
Obviously, the Netscape,
we support the Netscape plug-in model.

00:05:33.160 --> 00:05:35.400
Java applets we support.

00:05:35.400 --> 00:05:39.450
We added Live Connect with
Safari 1.2 and Java 1.4.2,

00:05:39.570 --> 00:05:40.650
which was great.

00:05:40.690 --> 00:05:44.850
And we just announced this week a
new Cocoa plug-in model as well.

00:05:45.160 --> 00:05:49.400
We've also extended the Netscape
API while working with our partners,

00:05:49.640 --> 00:05:53.180
other browser vendors that
are building plug-ins as well,

00:05:53.180 --> 00:05:57.180
or using plug-ins to make sure that
the Netscape API is still alive

00:05:57.310 --> 00:05:59.840
and supported on multiple browsers.

00:05:59.840 --> 00:06:03.830
So here's a timeline
that's pretty interesting.

00:06:04.200 --> 00:06:39.200
[Transcript missing]

00:06:41.040 --> 00:06:43.170
So going forward, what can you expect?

00:06:43.350 --> 00:06:45.610
We're going to focus on consumer
sites like we've always done

00:06:45.660 --> 00:06:47.970
and enterprise applications.

00:06:48.330 --> 00:06:52.020
It's clear from our requirements
that the browser has to

00:06:52.040 --> 00:06:55.510
work in an IT organization,
that it has to perform

00:06:56.370 --> 00:07:00.480
relative to other browsers,
other browsers on other platforms.

00:07:00.620 --> 00:07:03.020
It needs to support the same
applications and we're going to

00:07:03.020 --> 00:07:06.620
make sure that it's the best,
that the Windows users are going to be

00:07:06.620 --> 00:07:08.920
drooling over the Safari implementation.

00:07:08.920 --> 00:07:10.770
That's definitely a focus.

00:07:10.860 --> 00:07:12.200
Increase performance all along.

00:07:12.220 --> 00:07:14.500
We always want to make it faster.

00:07:14.510 --> 00:07:15.320
And compatibility.

00:07:15.320 --> 00:07:18.790
Obviously we're going to step outside
the standards every once in a while

00:07:18.790 --> 00:07:22.690
and adopt something that we have
to and then push for it to become a

00:07:22.690 --> 00:07:25.470
standard because we're part of the W3.

00:07:26.680 --> 00:07:29.030
and a lot of the features that
you've probably heard about here,

00:07:29.030 --> 00:07:30.690
if you've gone to any
of the WebKit features,

00:07:30.690 --> 00:07:35.500
you'll find out are available
in Safari 1.3 on Panther,

00:07:35.540 --> 00:07:41.250
which is great news,
as well as Safari 2.0 in Tiger.

00:07:42.950 --> 00:07:44.690
So let me invite Mark Cianca.

00:07:44.700 --> 00:07:47.550
He's Director of
Academic Information Systems at

00:07:47.560 --> 00:07:50.240
University of Santa Cruz up
and he's going to share some

00:07:50.240 --> 00:07:55.820
of his experiences with Safari,
with IT, with all that good stuff.

00:07:55.820 --> 00:07:55.820
Mark.

00:07:59.550 --> 00:08:02.040
First of all, I want to welcome a
rather august crowd here.

00:08:02.040 --> 00:08:05.490
I know it's an afternoon session
and I'm pleased to see so many

00:08:05.550 --> 00:08:06.760
people awake at this hour.

00:08:06.760 --> 00:08:08.080
That's always a challenge for a speaker.

00:08:08.080 --> 00:08:10.470
I'm here not as a technical expert.

00:08:10.470 --> 00:08:14.340
I want to make it very clear
I manage technical experts.

00:08:14.340 --> 00:08:17.860
So my promise to you today is that I'm
not going to use any management speak,

00:08:17.860 --> 00:08:20.640
but you should know I'm also not
going to teach you how to code

00:08:20.700 --> 00:08:23.820
a Gronkulator because that's
not really what I'm about here.

00:08:24.360 --> 00:08:26.570
What I am going to talk to
you about today is really the

00:08:26.570 --> 00:08:31.250
customer's perspective in talking
about use of Safari and support

00:08:31.250 --> 00:08:33.870
for Safari within the Enterprise.

00:08:33.880 --> 00:08:38.330
UC Santa Cruz is a campus that's
undergone significant growth

00:08:38.380 --> 00:08:42.670
in the last 10 to 15 years,
and we have some internal business

00:08:42.670 --> 00:08:46.450
initiatives that have to be met
in a way that the institution

00:08:46.520 --> 00:08:48.740
deems to be very cost effective.

00:08:48.740 --> 00:08:52.240
And web-based deployments help us
meet some of those initiatives.

00:08:52.240 --> 00:08:54.160
We have some external
business constraints.

00:08:54.260 --> 00:08:57.740
We have to meet as well whenever we're
talking about enterprise applications.

00:08:57.870 --> 00:09:02.330
I'll also talk to you a bit about
why we chose to engage vendors

00:09:02.400 --> 00:09:06.900
directly and how we chose to do that,
the process, the outcomes,

00:09:06.900 --> 00:09:10.490
and take you forward into
where I think we are today.

00:09:10.540 --> 00:09:13.040
And based on some of the news
I've heard here this week,

00:09:13.040 --> 00:09:17.050
especially about enhancements to WebKit,
what I see is a very bright future

00:09:17.050 --> 00:09:18.990
for Safari in the Enterprise.

00:09:19.070 --> 00:09:21.000
I want to talk to you a
bit about UC Santa Cruz,

00:09:21.000 --> 00:09:24.240
first of all, because all university
administrators have a chronic

00:09:24.240 --> 00:09:25.660
inflammation of the marketing gland.

00:09:25.660 --> 00:09:27.390
So whenever we get up
in front of a crowd,

00:09:27.390 --> 00:09:30.060
we actually talk about summary
facts of our institution.

00:09:30.060 --> 00:09:32.260
We're about 15,000 students now.

00:09:32.260 --> 00:09:34.000
We're a Tier 1 research institution.

00:09:34.000 --> 00:09:37.560
We are poised on the edge
of joining AAU next year,

00:09:37.560 --> 00:09:42.500
which makes us among the elite
universities in the United States.

00:09:42.500 --> 00:09:46.520
We are ranked first in the
nation in space sciences.

00:09:46.520 --> 00:09:49.940
So those of you who wonder how the
heck they figured out how to make the

00:09:49.940 --> 00:09:52.700
blur in the Hubble telescope work,
that was our team at

00:09:52.700 --> 00:09:54.210
UC Santa Cruz who did that.

00:09:54.220 --> 00:09:55.840
We did adaptive optics.

00:09:55.840 --> 00:09:58.460
We're second in the world in
physical sciences as well.

00:09:58.460 --> 00:09:59.800
We're heavily into research.

00:09:59.800 --> 00:10:01.100
We're heavily into science.

00:10:01.100 --> 00:10:05.520
And we're heavily into supporting
faculty who like to live their

00:10:05.520 --> 00:10:07.900
life at the edge of technology.

00:10:07.900 --> 00:10:12.100
So that's the kind of environment
that we support at UC Santa Cruz.

00:10:12.700 --> 00:10:16.840
I'm on the stage today because
we are currently most of the way

00:10:16.840 --> 00:10:20.600
through a very major enterprise
application implementation.

00:10:20.600 --> 00:10:25.600
We are currently in an enterprise-wide
deployment of PeopleSoft's ERP suite

00:10:25.600 --> 00:10:28.810
and specifically their enterprise
portal and their application

00:10:28.810 --> 00:10:31.170
called Student Administration,
plus the Cognos

00:10:31.240 --> 00:10:32.600
Business Intelligence suite.

00:10:32.600 --> 00:10:35.600
Those are the big elements
of this implementation.

00:10:35.600 --> 00:10:39.240
We're moving from an environment in
which every user of the system had

00:10:39.240 --> 00:10:45.600
a nice telnet session into a 3270
environment onto the IBM mainframe,

00:10:45.650 --> 00:10:50.830
which is a remarkably fast environment,
but a remarkably uninviting

00:10:51.270 --> 00:10:53.520
graphic environment for users.

00:10:53.660 --> 00:10:57.380
The critical success factors
for our project were defined

00:10:57.380 --> 00:10:59.600
pretty early on in the project.

00:10:59.600 --> 00:11:02.850
Whatever solution we found for
our end-user environment had

00:11:02.850 --> 00:11:04.590
to be platform independent.

00:11:04.600 --> 00:11:08.600
That is to say,
we couldn't favor PCs over Macintosh,

00:11:08.600 --> 00:11:11.480
over Linux, over anything.

00:11:11.610 --> 00:11:13.700
We had to support a
heterogeneous environment,

00:11:13.700 --> 00:11:16.550
and that was defined as a very
critical factor for our success.

00:11:16.600 --> 00:11:19.590
Perceived speed was going
to be very important for us

00:11:19.590 --> 00:11:23.820
because moving from 3270,
we had users who were accustomed

00:11:23.830 --> 00:11:27.600
to lightning-fast speed,
but who had very little tolerance

00:11:27.600 --> 00:11:29.600
for anything other than environment.

00:11:29.670 --> 00:11:31.600
And I had this other little
kicker I had to take care of,

00:11:31.600 --> 00:11:34.600
which was minimal to no deployment costs.

00:11:34.600 --> 00:11:37.600
While I love them dearly,
I have computing coordinators on campus

00:11:37.600 --> 00:11:42.910
who get quite edgy when new systems come
online and they're required to support

00:11:42.910 --> 00:11:44.560
end-users in a major deployment process.

00:11:44.630 --> 00:11:47.420
We want to minimize that
or completely eliminate it.

00:11:47.720 --> 00:11:52.160
Some of the deployment challenges that
we had is that we've been in a rolling

00:11:52.160 --> 00:11:54.600
phase deployment for quite some time now.

00:11:54.600 --> 00:11:58.030
We started a project,
maybe I shouldn't bring this

00:11:58.040 --> 00:12:01.000
up with PeopleSoft in the room,
but the first, we actually started

00:12:01.010 --> 00:12:01.600
with a different vendor.

00:12:01.600 --> 00:12:04.600
The product that we bought was
actually acquired by another company,

00:12:04.640 --> 00:12:06.600
and that product was killed.

00:12:06.600 --> 00:12:09.970
So then we turned to PeopleSoft,
and we're hopeful that the Department of

00:12:10.050 --> 00:12:15.530
Justice sees its way to win a
particular lawsuit for us shortly here.

00:12:15.600 --> 00:12:20.600
As we move forward with PeopleSoft,
the other challenge that we've faced

00:12:20.600 --> 00:12:24.590
is that their core technology stack in
the applications that we've licensed

00:12:24.780 --> 00:12:26.580
actually run on two different versions.

00:12:26.670 --> 00:12:29.600
So that's another consideration
that we've had to look at.

00:12:29.600 --> 00:12:33.600
Student administration
stack is on PeopleTools 8.1,

00:12:33.600 --> 00:12:35.600
and then our enterprise portal is on 8.4.

00:12:35.600 --> 00:12:38.600
It may not mean a lot
unless you use PeopleSoft,

00:12:38.600 --> 00:12:40.930
but it is something of a
challenge in the way that the

00:12:40.930 --> 00:12:42.600
browser reacts to the software.

00:12:42.780 --> 00:12:50.600
And our business intelligence suite
was actually licensed fairly recently,

00:12:50.600 --> 00:12:54.600
and we demoed that product
on OS 9 at the time,

00:12:54.600 --> 00:12:58.600
and using Netscape 476 because
that's all they certified for.

00:12:58.600 --> 00:13:00.600
This is the environment
we're moving from.

00:13:00.600 --> 00:13:02.600
Any of you who've used a 3270 screen
before know what this looks like.

00:13:02.610 --> 00:13:07.160
This is a typical student screen
that we look at day after day

00:13:07.160 --> 00:13:08.530
after day in the old environment.

00:13:08.600 --> 00:13:12.480
But what we're moving toward
is this broader portal-based

00:13:12.480 --> 00:13:16.490
environment where staff,
faculty, and students will be able

00:13:16.490 --> 00:13:19.600
to access self-service,
administrative services,

00:13:19.600 --> 00:13:22.750
and functionality through
a portal environment that

00:13:22.750 --> 00:13:24.600
we're pushing to them today.

00:13:24.600 --> 00:13:26.600
So that's at UC Santa Cruz.

00:13:26.600 --> 00:13:31.500
How we prioritized our deployments
was pretty interesting.

00:13:31.600 --> 00:13:35.600
Many of our users assume that if
an application is browser-based,

00:13:35.600 --> 00:13:37.600
then there's no real deployment issues.

00:13:37.600 --> 00:13:40.600
And we've found, of course,
that that's not quite the case.

00:13:40.600 --> 00:13:42.600
In fact, it's quite the opposite.

00:13:42.600 --> 00:13:46.670
We know that there's not
parity between browsers,

00:13:46.670 --> 00:13:49.600
even on the same platform,
let alone between platforms.

00:13:49.600 --> 00:13:52.920
And I think sometimes that's a good
thing because it pushes browser

00:13:52.920 --> 00:13:56.990
development continually if you've
got feature sets that are available

00:13:56.990 --> 00:13:58.490
for some but not for others.

00:13:58.620 --> 00:14:02.050
But the other thing that happened,
and that really kind of engendered

00:14:02.050 --> 00:14:06.000
this relationship with the vendors,
was that we began a consolidation

00:14:06.000 --> 00:14:09.600
of our IT environment at
UC Santa Cruz about a year ago.

00:14:09.600 --> 00:14:13.600
We were charged with consolidating
a very confederated environment

00:14:13.600 --> 00:14:15.560
and bringing it central.

00:14:15.670 --> 00:14:17.590
To do that,
we undertook a very large data

00:14:17.590 --> 00:14:22.420
collection effort just to find out what
was out there and who was doing what.

00:14:22.730 --> 00:14:28.280
Another issue that we looked at
was that if we encountered platform

00:14:28.290 --> 00:14:31.480
differences that were too great,
we had options that no

00:14:31.480 --> 00:14:33.560
one wanted to look at.

00:14:33.610 --> 00:14:38.650
One of those would be to use Citrix,
for example, to ensure common experiences

00:14:38.650 --> 00:14:40.600
for both Mac and PC users.

00:14:40.600 --> 00:14:42.550
So those are some of the
things that we looked at.

00:14:42.600 --> 00:14:46.600
When I think about vendor relationships,
I actually have two working tenets.

00:14:46.600 --> 00:14:50.600
First of all, from my perspective,
the sales cycle is always open.

00:14:50.600 --> 00:14:54.810
This means that I always have the
opportunity to negotiate with all

00:14:54.810 --> 00:14:59.110
of my vendors at any point in a
license relationship and to build a

00:14:59.110 --> 00:15:02.670
relationship that we have with them,
because at some point in the future,

00:15:02.670 --> 00:15:04.600
we're likely going to be
buying more software licenses.

00:15:04.600 --> 00:15:06.600
So for me,
the sales cycle is always open.

00:15:06.620 --> 00:15:10.530
The other tenet I always assume is
that sales staff always over-promise

00:15:10.600 --> 00:15:12.600
and typically under-deliver.

00:15:13.340 --> 00:15:16.680
So we've all been through a cycle
where we hear from sales staff,

00:15:16.750 --> 00:15:17.420
yeah, we can do that.

00:15:17.500 --> 00:15:20.420
But what they fail to mention
is behind that answer is,

00:15:20.420 --> 00:15:22.730
and it'll cost you $2 million
of customization to get

00:15:22.730 --> 00:15:23.880
that code to work for you.

00:15:23.900 --> 00:15:27.030
Or you're going to have to buy an
infrastructure that will cost you

00:15:27.030 --> 00:15:30.800
25 full-time employees just to keep
that environment up and running.

00:15:30.800 --> 00:15:36.090
The other thing that we have long known
is that sales staff almost never use

00:15:36.090 --> 00:15:38.980
Macintoshes to demo their products.

00:15:39.820 --> 00:15:42.500
So one of the things that
UC Santa Cruz has instituted is a

00:15:42.500 --> 00:15:47.720
requirement that any vendor who now
comes in and demos an enterprise

00:15:47.720 --> 00:15:50.880
application has to demo on a Macintosh.

00:15:57.270 --> 00:15:59.410
You see a lot of scared sales
guys coming in to do demos,

00:15:59.410 --> 00:16:03.640
but if it doesn't work for a sales guy,
it's certainly not going to work for us.

00:16:03.640 --> 00:16:07.570
So we need to ensure that the products
we're looking at from the get-go can

00:16:07.570 --> 00:16:09.570
be used by a Macintosh population.

00:16:09.650 --> 00:16:11.620
Well, why is that important?

00:16:11.640 --> 00:16:14.520
And just this is another little
bullet point that I want to point out.

00:16:14.580 --> 00:16:17.880
When we first looked at Cognos,
it was marginally acceptable,

00:16:17.900 --> 00:16:20.530
but there was a Mac solution,
and it meant we didn't

00:16:20.530 --> 00:16:23.350
have to use Citrix,
and that was another big plus for us.

00:16:24.540 --> 00:16:28.720
So a challenge in getting vendors
to understand why we were asking

00:16:28.760 --> 00:16:32.170
them to demo on Macs was to be able
to show them the value of having a

00:16:32.170 --> 00:16:34.660
product that worked out of the box,
so to speak.

00:16:34.660 --> 00:16:37.920
So like I said earlier,
we had this consolidation going on,

00:16:37.920 --> 00:16:41.150
and we, as a part of that,
actually a colleague here in the

00:16:41.150 --> 00:16:44.230
audience was part of an effort
to undertake a large part of

00:16:44.280 --> 00:16:46.480
data collection about the campus.

00:16:46.480 --> 00:16:48.720
And what we learned was
some very interesting stuff.

00:16:48.720 --> 00:16:50.670
If you can see that graphic very well.

00:16:50.680 --> 00:16:54.520
This is just a simple
bar chart that shows you.

00:16:54.540 --> 00:16:59.340
All hardware, non-academic use hardware
on the UC Santa Cruz campus,

00:16:59.340 --> 00:17:03.900
there's just over 7,500,
7,600 machines that

00:17:03.900 --> 00:17:05.760
are accounted for here.

00:17:05.760 --> 00:17:11.860
And in this environment, 41% are Mac,
43% are Wintel, 13,

00:17:11.860 --> 00:17:16.320
almost 14% are Linux or
other flavors of Unix.

00:17:16.320 --> 00:17:21.350
And the rest are, you know,
the odd K-Pro that's still running

00:17:21.400 --> 00:17:24.360
or B-Box or Nextcube or whatever.

00:17:24.470 --> 00:17:27.260
So there's a lot of stuff that's out
there that's still running from 1982.

00:17:27.280 --> 00:17:30.170
So that's the entire distribution.

00:17:30.180 --> 00:17:35.520
When we narrow it down a bit and we look
simply at laptops and desktops in use,

00:17:35.520 --> 00:17:38.950
you begin to see that Mac becomes
the dominant platform.

00:17:38.960 --> 00:17:46.130
So we've got just over 45% Mac users,
43% Windows, and 10% Unix, Linux,

00:17:46.130 --> 00:17:50.190
whatever on, again, desktops and laptops.

00:17:50.320 --> 00:17:54.380
But where this becomes significant
for us is in the distribution of data.

00:17:54.380 --> 00:17:56.100
And that's the administrative
users' hardware.

00:17:56.100 --> 00:17:59.280
These are the people who are
banging on machines all day long as

00:17:59.290 --> 00:18:03.560
administrative support staff in the
business function of the institution.

00:18:04.990 --> 00:18:08.680
So when I get to this point,
57% of my users are Mac users.

00:18:08.980 --> 00:18:11.400
That means the predominant
population that I have to be

00:18:11.480 --> 00:18:14.890
able to support is Mac OS based.

00:18:15.360 --> 00:18:16.900
41% is Wintel.

00:18:16.900 --> 00:18:19.900
We've got 35 machines
that are something else,

00:18:19.900 --> 00:18:21.900
Linux probably.

00:18:21.900 --> 00:18:25.810
And then just a smattering of machines
that are unidentified in this survey.

00:18:25.920 --> 00:18:27.890
This becomes really, really important.

00:18:27.900 --> 00:18:32.230
If you look at the blue column,
these are users who are accustomed

00:18:32.230 --> 00:18:33.890
to calling the help desk.

00:18:34.530 --> 00:18:37.460
If you look at the purple column,
these are people who are

00:18:37.460 --> 00:18:38.940
pretty self-sufficient.

00:18:38.960 --> 00:18:43.570
So whatever I introduce has to
continue to provide them with the

00:18:43.570 --> 00:18:47.320
ease of use and the look and feel
that they're accustomed to in using

00:18:47.320 --> 00:18:49.000
their machines day in and day out.

00:18:49.000 --> 00:18:53.370
So when we landed on PeopleSoft,
that had the promise of providing

00:18:53.410 --> 00:18:55.950
them with that kind of experience.

00:18:55.990 --> 00:19:00.020
But this is the kind of number that
I now show to vendors when I say,

00:19:00.020 --> 00:19:01.370
listen, you've got to support Mac.

00:19:01.390 --> 00:19:03.230
That's my primary population.

00:19:03.240 --> 00:19:07.140
And because it just so happens that
my office also supports Help Desk,

00:19:07.210 --> 00:19:10.620
this becomes really important
to me in terms of workload.

00:19:10.620 --> 00:19:13.660
So we all had early Safari experiences.

00:19:13.660 --> 00:19:15.900
Mark showed you a timeline.

00:19:15.900 --> 00:19:18.190
Well,
here's what we learned with PeopleSoft.

00:19:18.190 --> 00:19:20.840
It worked, but it's slow, baby.

00:19:20.840 --> 00:19:22.760
It was really, really slow.

00:19:22.760 --> 00:19:24.820
1.0, 1.1.

00:19:24.820 --> 00:19:28.030
PeopleSoft performance
was marginal at best.

00:19:28.080 --> 00:19:29.480
We had some display issues.

00:19:29.480 --> 00:19:32.210
Intense table structures
didn't work very well at all.

00:19:32.790 --> 00:19:35.680
And the sad thing was
Cognos didn't work at all.

00:19:35.690 --> 00:19:39.880
In fact,
looking forward to the updates to WebKit,

00:19:39.900 --> 00:19:44.830
that's really when we'll begin to use
Cognos on Safari with some confidence.

00:19:44.840 --> 00:19:47.690
Right now, we've got people using
alternate browsers.

00:19:47.880 --> 00:19:48.880
Navigation was crippled.

00:19:48.880 --> 00:19:52.390
I couldn't do slicing
and dicing on data cubes.

00:19:52.440 --> 00:19:54.440
And it was frustrating.

00:19:54.440 --> 00:19:56.510
So we asked for some help.

00:19:56.700 --> 00:23:17.900
[Transcript missing]

00:23:23.800 --> 00:23:25.010
Put you back to sleep here.

00:23:25.010 --> 00:23:28.250
This is a developers conference,
so I wanted to make sure that I had

00:23:28.290 --> 00:23:30.840
some recommendations for folks that
are out there building new sites,

00:23:30.840 --> 00:23:34.540
sort of what to shoot for when you're
going to support Safari when it's part

00:23:34.580 --> 00:23:38.020
of the stack that you support out there,
and give you some guidelines.

00:23:38.020 --> 00:23:40.720
Because I don't think there's a
really straightforward example

00:23:40.720 --> 00:23:43.740
out there of how to go and build
something that's supported by Safari.

00:23:43.740 --> 00:23:46.920
And it's really, it's quite simple,
so let's just start in.

00:23:47.120 --> 00:23:48.880
It's designed to standards.

00:23:48.880 --> 00:23:53.760
Like I said in the introduction,
the W3 defines the standards

00:23:53.760 --> 00:23:55.740
for HTML and the DOM.

00:23:55.740 --> 00:23:57.560
Hopefully those aren't new words to you.

00:23:57.560 --> 00:24:00.340
If they are,
it's the structure of a particular page.

00:24:00.340 --> 00:24:02.840
The DOM addresses the
particular functions,

00:24:02.900 --> 00:24:06.200
JavaScript functions that
access the pieces on that page.

00:24:06.200 --> 00:24:09.620
The W3C also defines
the standard for CSS,

00:24:09.620 --> 00:24:11.700
cascading style sheets.

00:24:11.700 --> 00:24:14.720
That's the layout and the
presentation portion of it.

00:24:14.840 --> 00:24:19.820
So designing the standards vis-a-vis the
W3 is the best way to build for Safari.

00:24:19.820 --> 00:24:23.190
And the specifications are
available at the W3C website.

00:24:23.320 --> 00:24:26.260
Really quite straightforward
to go and read what they have.

00:24:26.320 --> 00:24:30.610
There's also slews of self-help
and documentation associated with

00:24:30.610 --> 00:24:32.980
supporting standards out there.

00:24:32.980 --> 00:24:36.630
And the benefit is that it's
supported by modern browsers as well.

00:24:36.640 --> 00:24:38.970
My typical message is not, hey,
Safari's great,

00:24:39.090 --> 00:24:40.620
make sure that you support it.

00:24:40.620 --> 00:24:43.410
It's really,
Safari does great with the standards.

00:24:43.420 --> 00:24:44.760
Make sure that you support it.

00:24:44.780 --> 00:24:45.700
Make sure that you support the standards.

00:24:45.780 --> 00:24:48.150
Put the power back into your hands.

00:24:48.240 --> 00:24:49.210
Support the standards.

00:24:49.300 --> 00:24:51.200
The browser vendors will
have to do the same.

00:24:51.360 --> 00:24:52.560
And they actually do.

00:24:52.670 --> 00:24:57.380
IE, the one that you all know and love,
and Netscape, Mozilla, and even iCab,

00:24:57.380 --> 00:25:00.940
or anybody familiar with iCab out there,
does well with the standards.

00:25:00.940 --> 00:25:05.490
So build to the standards,
support all the modern browsers.

00:25:06.780 --> 00:25:09.060
Make pages that are
well-formed and valid.

00:25:09.060 --> 00:25:10.740
Another very important point to make.

00:25:10.760 --> 00:25:15.840
Ensure that your HTML is well-formed,
meaning if you've got a begin tag,

00:25:15.840 --> 00:25:17.900
make sure that if the
specification requires,

00:25:17.900 --> 00:25:18.980
you've got an end tag.

00:25:19.000 --> 00:25:20.960
It's faster.

00:25:20.960 --> 00:25:23.430
It lets the browser,
it keeps the browser actually

00:25:23.430 --> 00:25:26.200
from having to second guess
what you've got on your page,

00:25:26.200 --> 00:25:27.000
what you're trying to do.

00:25:27.000 --> 00:25:29.940
Instead of having to put the end
tags around and tidy up your code

00:25:30.010 --> 00:25:32.900
before it draws it to the screen,
it's already there.

00:25:32.900 --> 00:25:33.800
It has to work less.

00:25:33.800 --> 00:25:36.000
So it's faster,
it's a little less fragile

00:25:36.000 --> 00:25:38.910
because when we start
interpreting what you want to do,

00:25:39.070 --> 00:25:39.890
sometimes we get it wrong.

00:25:39.930 --> 00:25:41.800
Sometimes we crash.

00:25:41.800 --> 00:25:44.800
Ensure that your pages
include a valid doc type.

00:25:44.800 --> 00:25:45.800
This is critical.

00:25:45.800 --> 00:25:51.030
A doc type is your way of communicating
to the browser what's the standard

00:25:51.030 --> 00:25:52.800
that this particular page supports.

00:25:52.800 --> 00:25:56.800
What's that DTD that should be
fulfilled by the content on the page?

00:25:56.800 --> 00:25:58.800
A doc type is very important.

00:25:58.800 --> 00:26:00.800
If you don't have a
doc type in your page,

00:26:00.800 --> 00:26:02.800
Safari will degrade to a standards minus,
minus, minus.

00:26:02.800 --> 00:26:02.800
So it's faster.

00:26:02.800 --> 00:26:02.800
It's a little less fragile.

00:26:02.800 --> 00:26:02.800
Because when we start
interpreting what you want to do,

00:26:02.800 --> 00:26:02.800
sometimes we get it wrong.

00:26:02.800 --> 00:26:02.800
Sometimes we crash.

00:26:02.800 --> 00:26:03.000
Ensure that your pages
include a valid doc type.

00:26:03.000 --> 00:26:03.090
This is critical.

00:26:03.090 --> 00:26:03.320
A doc type is your way of
communicating to the browser.

00:26:03.320 --> 00:26:03.800
What's the standard that this
particular page supports?

00:26:03.800 --> 00:26:07.560
this type implementation,
sometimes called quirk or quirks or

00:26:07.560 --> 00:26:11.780
compatibility mode where we do a lot
of second guessing and you'll find

00:26:11.780 --> 00:26:16.260
out that we might make things look a
little different than they look in IE.

00:26:17.060 --> 00:26:18.370
Ensure that your pages are valid.

00:26:18.510 --> 00:26:19.700
There's a standard out there.

00:26:20.690 --> 00:26:24.700
Ensuring that it's valid against that
standard is another way of ensuring

00:26:24.820 --> 00:26:27.600
that you've given us a doc type,
you've told us how it should be,

00:26:27.600 --> 00:26:29.800
make sure that you've checked
it to ensure that it is.

00:26:29.800 --> 00:26:33.620
There's a validator for HTML at the W3,
which is great.

00:26:33.700 --> 00:26:36.900
It's a website you can go
and you can upload a file or

00:26:36.900 --> 00:26:38.860
you can point it to a URL.

00:26:38.860 --> 00:26:40.170
You can also download this.

00:26:40.170 --> 00:26:42.440
It's all Perl and run it
on a machine internally.

00:26:43.000 --> 00:26:46.290
And we'll have a recipe on the
developer site up shortly on that.

00:26:46.360 --> 00:26:50.160
And you can also validate
your CSS at the same website.

00:26:50.280 --> 00:26:52.200
And it's really quite nice.

00:26:52.200 --> 00:26:57.400
It'll give you a page that shows you
exactly what's wrong in your code.

00:26:57.400 --> 00:27:00.770
And then you have tools probably built
into many of the editors that you use

00:27:00.770 --> 00:27:02.600
for doing validation and checking.

00:27:02.600 --> 00:27:05.370
So make sure you explore
those and find out what they

00:27:05.370 --> 00:27:07.200
support as far as validation.

00:27:07.200 --> 00:27:09.990
Validation is extremely important.

00:27:11.980 --> 00:27:14.050
Be browser agnostic.

00:27:14.050 --> 00:27:17.580
How many times have you seen a page where
it's actually looking for a particular

00:27:18.210 --> 00:27:20.020
version of a particular web browser?

00:27:20.020 --> 00:27:22.870
The best thing to do is to
avoid all that user agent,

00:27:22.870 --> 00:27:26.660
sometimes called browser sniffing logic,
if at all possible.

00:27:26.660 --> 00:27:29.220
And there's ways to get around
it using object detection.

00:27:29.220 --> 00:27:32.650
If you've got a page that has some
complexity in it that you're afraid

00:27:32.650 --> 00:27:36.230
that certain browsers can't support,
it's pretty straightforward to go

00:27:36.230 --> 00:27:39.520
and see if it's supported without
looking at the version of the browser.

00:27:40.310 --> 00:27:42.580
If you're browser sniffing,
then you find that you'll have to

00:27:42.680 --> 00:27:45.470
constantly update your sniffing
code to make sure it goes and

00:27:45.470 --> 00:27:50.620
supports the particular functionality
that you think is on the margins.

00:27:50.620 --> 00:27:53.800
Object detection,
basically it's just checking a particular

00:27:53.860 --> 00:27:55.600
function before you go and call it.

00:27:55.680 --> 00:27:59.920
And if it returns undefined,
then you know it doesn't exist and

00:27:59.920 --> 00:28:03.520
you can branch around it and have
some other code that will function

00:28:03.540 --> 00:28:05.260
appropriately or degrade nicely.

00:28:05.260 --> 00:28:08.910
Once that particular function
is supported in the browser,

00:28:09.780 --> 00:28:12.020
it'll just work, should just work,
you should test it,

00:28:12.080 --> 00:28:14.840
but it should just work and you won't
have to go and update your sniffing code.

00:28:16.600 --> 00:28:21.800
Number one, use the W3 standard way of
accessing page objects on a page.

00:28:21.990 --> 00:28:24.740
This is probably the number one issue
I run into when I'm working with

00:28:24.740 --> 00:28:28.920
developers trying to figure out why
their particular site isn't working.

00:28:29.040 --> 00:28:33.560
Get element by ID for folks trying to
access an element on a page in dynamic

00:28:33.560 --> 00:28:38.670
HTML is the way to do it via standards,
and all the modern browsers support this.

00:28:38.800 --> 00:28:44.210
I'll show an example coming up a little
bit later about how to actually do that.

00:28:45.230 --> 00:28:46.700
and get involved.

00:28:46.700 --> 00:28:48.900
Help us keep the standards relevant.

00:28:48.920 --> 00:28:55.090
You can do that by pushing the vendors,
joining the W3C,

00:28:55.090 --> 00:28:56.720
just really staying on top of it.

00:28:56.830 --> 00:28:59.330
There's many good
sources for vendor type,

00:28:59.330 --> 00:29:02.040
sorry,
for standards-based information and

00:29:02.120 --> 00:29:04.120
here's some I'm putting up here.

00:29:04.120 --> 00:29:07.520
Dave Hyatt, the last one,
is an Apple employee, great source.

00:29:08.880 --> 00:29:12.020
They've got all sorts of recommendations,
example code,

00:29:12.110 --> 00:29:16.600
stories about why standards are important
and why they feel there's a real business

00:29:16.610 --> 00:29:20.050
case for supporting the standards,
independent of the sort of the

00:29:20.050 --> 00:29:22.530
WYSIWYG things that you can do.

00:29:23.040 --> 00:29:25.830
And last but not least,
buy standards-based products.

00:29:25.900 --> 00:29:28.530
Push the vendors to make sure
that they're supporting it.

00:29:28.590 --> 00:29:30.840
They'll come back to us and say,
"There's a bug in your browser.

00:29:30.910 --> 00:29:32.630
You say you support the standard.

00:29:32.820 --> 00:29:33.690
Here's a standard call.

00:29:33.690 --> 00:29:34.450
It's not working.

00:29:34.570 --> 00:29:36.720
Please fix it." And we're happy to do it.

00:29:36.890 --> 00:29:41.070
We want to be the best standards-based
browser on the platform.

00:29:41.790 --> 00:29:44.760
Great, so I just want to run through
one more set of things,

00:29:44.760 --> 00:29:46.100
just some debugging
techniques real quick.

00:29:46.110 --> 00:29:49.210
If you've got a page that doesn't work,
a site that doesn't work,

00:29:49.360 --> 00:29:51.490
run through some of these.

00:29:52.930 --> 00:29:56.130
Turn-on exception logging is probably
the first step that you want to

00:29:56.150 --> 00:29:58.780
do any time you're going through
a debugging process with an existing

00:29:58.810 --> 00:30:00.900
site or a site that you're creating.

00:30:00.900 --> 00:30:05.570
And what it does is it displays the
JavaScript and parsing exceptions

00:30:05.570 --> 00:30:07.900
into the console on the Macintosh.

00:30:07.900 --> 00:30:09.900
And it's getting better, I promise.

00:30:09.900 --> 00:30:12.400
If any of you out there -- how
many have seen the debugging

00:30:12.660 --> 00:30:13.900
menu and tried to debug?

00:30:13.900 --> 00:30:15.840
Okay, so it's getting a lot better.

00:30:15.970 --> 00:30:19.260
And actually,
Kevin here in the front row is working

00:30:19.340 --> 00:30:21.880
to make sure that that's a lot better.

00:30:21.910 --> 00:30:25.920
So if you load your 1.3
preview or the 2.0 version of

00:30:25.920 --> 00:30:29.470
Safari that you see in Tiger,
you'll see that we've got a pop-up

00:30:29.470 --> 00:30:33.480
window that provides that same sort
of functionality that you used to

00:30:33.480 --> 00:30:34.730
see in the console but only better.

00:30:34.920 --> 00:30:37.900
It's not quite Venkman,
but we're working on it.

00:30:37.940 --> 00:30:40.900
To turn it on, you use the terminal.

00:30:40.900 --> 00:30:41.900
Type in a bit of code.

00:30:41.900 --> 00:30:44.900
This is also available on the website,
how to turn it on.

00:30:44.900 --> 00:30:46.840
Basically, turn on our debug menu.

00:30:46.920 --> 00:30:49.590
Once you get the debug menu turned on,
then you can select log

00:30:49.780 --> 00:30:50.900
JavaScript exceptions.

00:30:50.900 --> 00:30:55.900
And they'll show up in
the console application.

00:30:55.900 --> 00:30:58.880
Another good thing to check
for on websites that aren't

00:30:58.880 --> 00:31:00.900
working is for browser sniffing.

00:31:00.900 --> 00:31:03.740
I talked about this before,
and we have a workaround

00:31:03.740 --> 00:31:04.900
for taking a look.

00:31:04.900 --> 00:31:09.900
You can pretend to be another browser
once you've got the debug menu turned on.

00:31:09.900 --> 00:31:13.760
A good practice is to go
to the site with Safari,

00:31:13.760 --> 00:31:15.900
see what it looks like.

00:31:15.900 --> 00:31:19.850
Go to the site with a Windows machine,
see what it looks like.

00:31:19.940 --> 00:31:24.900
Go to the site with Safari,
choose the Windows MSI E setting

00:31:24.900 --> 00:31:29.900
from the spoofing debug menu,
and then hit the site again.

00:31:29.900 --> 00:31:32.790
And if the site just works,
then you know it's the server that's

00:31:32.790 --> 00:31:36.650
looking at the browser and saying,
"I don't support you," or "I've never

00:31:36.650 --> 00:31:39.900
heard of you before," and then rejecting,
sending you back the wrong code,

00:31:39.900 --> 00:31:41.900
branching you in the wrong direction.

00:31:41.900 --> 00:31:44.930
This is another great way to find
out if something just works and

00:31:44.930 --> 00:31:46.560
you have to change the server.

00:31:47.830 --> 00:31:49.090
Look for the two browser trap.

00:31:49.200 --> 00:31:54.810
This was another extremely common issue
that we've had with websites out there,

00:31:55.040 --> 00:31:57.510
especially legacy sites,
sites that were built to

00:31:57.550 --> 00:31:59.040
support Netscape or IE.

00:31:59.040 --> 00:32:02.100
And it was accessing elements
on a page with document.all,

00:32:02.100 --> 00:32:05.160
the IE-specific way of doing it,
or document.layers,

00:32:05.160 --> 00:32:09.220
the Netscape 4.7 way of
accessing elements on a page.

00:32:09.220 --> 00:32:10.570
Here's a sample code.

00:32:10.570 --> 00:32:13.160
Here's what it traditionally looks like.

00:32:13.210 --> 00:32:16.730
Somebody checks to see if it's IE,
and if not, assume that it's Netscape.

00:32:17.410 --> 00:32:20.840
We don't support either of these methods,
document.all or document.layers.

00:32:20.840 --> 00:32:24.340
And that's actually something we
thought about doing at one point,

00:32:24.360 --> 00:32:28.080
but we kept getting so much Windows code
as a result of supporting some of

00:32:28.330 --> 00:32:32.480
these compatibility features that
it made sites actually work a lot worse.

00:32:32.480 --> 00:32:34.760
So supporting the
standard was a good thing.

00:32:34.760 --> 00:32:37.130
Basically,
you need to ensure that there's

00:32:37.130 --> 00:32:40.250
a get element by ID case,
basically a W3-supported case

00:32:40.250 --> 00:32:42.240
of accessing elements on a page.

00:32:42.240 --> 00:32:44.690
And here's an example right here.

00:32:44.700 --> 00:32:45.890
Put it at the very top.

00:32:46.960 --> 00:32:48.300
W3, get element by ID.

00:32:48.300 --> 00:32:51.870
All the modern browsers will fall
into that case and get handled.

00:32:51.880 --> 00:32:54.670
And then there's if-then-else
code that degrades nicely for

00:32:54.670 --> 00:32:56.340
older versions of the browser.

00:32:59.420 --> 00:33:05.100
Here's a quick fix that I came up with
to fix a site recently that had thousands

00:33:05.100 --> 00:33:06.800
of pages with document.all on it.

00:33:06.820 --> 00:33:08.690
It's kind of a useful hack.

00:33:08.740 --> 00:33:10.750
You can just go and define document.all.

00:33:10.760 --> 00:33:12.700
If it's not defined,
go ahead and define it.

00:33:12.700 --> 00:33:16.020
You can create functions sitting
off the document on your own.

00:33:16.020 --> 00:33:20.340
And this just calls getElementsByTagName,
throws all the elements in there,

00:33:20.340 --> 00:33:22.960
and then this document.all
function is defined for all

00:33:22.960 --> 00:33:24.560
the subsequent code on a page.

00:33:24.560 --> 00:33:26.730
It's a really nice hack
just to bring the site up,

00:33:26.810 --> 00:33:28.720
see if it actually works with this hack.

00:33:29.240 --> 00:33:33.980
then you can go and do the right
thing as on the previous code example.

00:33:34.620 --> 00:33:38.740
Another good thing to try if a site's not
working for you is to validate the page.

00:33:38.740 --> 00:33:43.700
I told you before the W3C has
validators for CSS and HTML.

00:33:43.700 --> 00:33:47.160
So you can go to them,
take the source off a particular

00:33:47.170 --> 00:33:50.060
page that's not validating,
and upload it.

00:33:50.380 --> 00:33:51.520
See what it says.

00:33:51.520 --> 00:33:53.420
It'll point out all sorts
of things that are wrong.

00:33:53.420 --> 00:33:58.500
And here's an example here,
saying that it's not 4.0 transitional.

00:33:58.500 --> 00:34:01.910
So this page evidently had 4.0
transitional in its doc type.

00:34:02.400 --> 00:34:03.860
And here's all the errors that it gave.

00:34:03.860 --> 00:34:05.770
And it was quite extensive
actually for this site.

00:34:05.780 --> 00:34:07.180
I don't remember which one it was.

00:34:10.140 --> 00:34:13.040
Respect the cross-domain
frame security rules.

00:34:13.040 --> 00:34:17.090
It's a mouthful, but it's pretty common
in portaled environments,

00:34:17.120 --> 00:34:20.220
universities and such,
where you've got pieces that

00:34:20.320 --> 00:34:22.960
you're pulling from all sorts
of different organizations,

00:34:22.960 --> 00:34:26.030
little portlets that you've built
to support a student system and

00:34:26.030 --> 00:34:29.520
then some other system over here and
you want to combine them on a page.

00:34:29.520 --> 00:34:33.940
Well, there's a rule for frames and
it's pretty much the same sandbox

00:34:33.970 --> 00:34:36.400
rules that are out there for Java.

00:34:36.400 --> 00:34:39.260
It's that in one frame,
you can't access the code

00:34:39.400 --> 00:34:43.690
elements on another frame if they
don't come from the same domain.

00:34:43.700 --> 00:34:47.210
And so we found out that a lot of
folks were running into this sort

00:34:47.250 --> 00:34:50.930
of issue and merely serving up
that portlet from the same domain,

00:34:50.930 --> 00:34:53.040
they were able to work just fine.

00:34:53.040 --> 00:34:56.960
The other functionality that
they were expecting just worked.

00:34:57.060 --> 00:34:59.150
So yeah, here's the line saying that.

00:34:59.520 --> 00:35:01.710
And here's a typical error
that you'll see in the console.

00:35:01.710 --> 00:35:04.050
If you've turned on the
debugging to the console,

00:35:04.100 --> 00:35:07.800
you'll see this in there and it's pretty
clear that this is what's happening.

00:35:07.800 --> 00:35:10.130
I've run into this quite a bit.

00:35:10.700 --> 00:35:12.460
Check the default cookie policy.

00:35:12.460 --> 00:35:15.890
There's some defaults in Safari that
catch people by surprise because

00:35:15.890 --> 00:35:19.600
they're not what they're expecting
necessarily based on a Windows browser

00:35:19.600 --> 00:35:21.620
perhaps or Netscape's preferences.

00:35:21.650 --> 00:35:24.390
Sometimes it's just the
defaults that are gotchas.

00:35:24.420 --> 00:35:28.490
And the default cookie issue is generally
found on the same sort of sites,

00:35:28.510 --> 00:35:31.670
ones that are using portals
where they're trying to write

00:35:31.670 --> 00:35:35.340
a cookie from one particular
domain and one from another one.

00:35:35.860 --> 00:35:38.830
And these things are important,
the fact that we can block these

00:35:38.830 --> 00:35:40.740
cookies from a privacy perspective.

00:35:40.740 --> 00:35:43.140
Our users really enjoy this
particular feature and it's

00:35:43.230 --> 00:35:44.900
probably bitten quite a few people.

00:35:44.900 --> 00:35:47.370
And the default is
extremely conservative.

00:35:47.380 --> 00:35:49.010
Here's a picture of it.

00:35:49.020 --> 00:35:52.700
What it basically says is only accept
cookies from sites that you navigate to.

00:35:52.700 --> 00:35:57.710
So if you have a page that has
a couple frames on it and you're

00:35:57.710 --> 00:36:02.870
trying to write out a cookie in
one frame and that URL isn't the

00:36:02.980 --> 00:36:05.840
same URL that's in the top banner.

00:36:05.840 --> 00:36:07.940
That the user went to,
then it's not going to

00:36:07.940 --> 00:36:09.240
write out that cookie.

00:36:09.240 --> 00:36:12.000
And subsequently you'll go to another
page and things just aren't working

00:36:12.000 --> 00:36:13.430
because you were depending on that.

00:36:13.480 --> 00:36:14.730
So this is another great thing.

00:36:14.740 --> 00:36:18.700
All you need to do is turn on
except always in the preferences.

00:36:18.700 --> 00:36:20.700
And if it just starts working,
then you know that that's

00:36:20.800 --> 00:36:21.780
the particular gotcha.

00:36:25.180 --> 00:36:26.260
Check for pop-up blocking.

00:36:26.260 --> 00:36:27.620
This bit a lot of people.

00:36:27.620 --> 00:36:31.180
It's an extremely popular
feature of Safari.

00:36:31.180 --> 00:36:34.290
Everybody runs with it on
and traditionally a lot of

00:36:34.300 --> 00:36:39.700
portal type applications,
homegrown application sites that you

00:36:39.760 --> 00:36:44.240
build in IT will have pop-up windows
on page load or on page unload.

00:36:44.240 --> 00:36:48.150
It applies to the window.open
function and it blocks those

00:36:48.230 --> 00:36:52.520
irritating pop-ups that you get
when you go to commercial sites.

00:36:52.520 --> 00:36:53.790
Keeps those commercials from coming out.

00:36:53.800 --> 00:36:55.300
Well, our customers love it.

00:36:55.300 --> 00:36:57.640
A lot of them turn it on
and then they end up saying,

00:36:57.710 --> 00:37:00.380
well, your particular
application's not working.

00:37:00.380 --> 00:37:02.520
So this is a great thing to check.

00:37:02.520 --> 00:37:07.450
And it's basically associated with
window.open and it prevents any user,

00:37:07.450 --> 00:37:11.690
it prevents any opening of windows
or calls of that function that's

00:37:11.690 --> 00:37:13.840
not elicited by a user action.

00:37:13.880 --> 00:37:14.220
Clicking on a window.

00:37:14.240 --> 00:37:14.890
Clicking on a button.

00:37:14.900 --> 00:37:16.840
Doing some sort of action.

00:37:16.880 --> 00:37:20.680
Window.opens aren't allowed in
unload handlers or onload handlers

00:37:20.680 --> 00:37:24.710
and that's traditionally where these
pop-up advertisements come in and

00:37:24.790 --> 00:37:26.480
sometimes you'll see this in your code.

00:37:26.480 --> 00:37:28.620
And once again, it's a default.

00:37:28.740 --> 00:37:31.160
You can turn it on, you can turn it off.

00:37:31.270 --> 00:37:33.650
In the preferences,
there's the checkbox for it.

00:37:33.700 --> 00:37:38.570
There's also a setting underneath
the Safari menu as well.

00:37:40.520 --> 00:37:43.990
And last but not least,
turn on the keyboard link navigation.

00:37:44.000 --> 00:37:48.780
A lot of folks are used to using IE and
tabbing around elements on a page and

00:37:48.780 --> 00:37:51.460
they go to Safari and they see that
that doesn't work and they complain.

00:37:51.460 --> 00:37:53.740
They say your website's not
working or Safari's not working.

00:37:53.740 --> 00:37:57.310
Well, it's really there,
but it's off by default.

00:37:57.390 --> 00:37:59.610
Our preference is option tab.

00:37:59.610 --> 00:38:02.280
And we can talk about whether
we should have done that or not,

00:38:02.290 --> 00:38:04.740
but the preference is to
use the option key instead.

00:38:04.740 --> 00:38:06.470
And this is something that
you can change as well.

00:38:06.720 --> 00:38:10.110
So through the preferences again,
choose the radio button

00:38:10.110 --> 00:38:11.810
that says tab between links.

00:38:11.900 --> 00:38:15.030
And once again,
you've got the same sort of functionality

00:38:15.030 --> 00:38:16.940
that folks were used to having in IE.

00:38:18.050 --> 00:38:21.440
Great, so that's sort of the
debugging techniques.

00:38:21.440 --> 00:38:24.180
I want to have Jesper Andersen
come up and talk a little bit

00:38:24.180 --> 00:38:27.130
about his debugging techniques.

00:38:27.170 --> 00:38:30.080
Suffering through
Safari at early versions,

00:38:30.100 --> 00:38:33.420
but working wholeheartedly with
us to make sure that we got their

00:38:33.460 --> 00:38:35.140
applications running smoothly.

00:38:35.140 --> 00:38:35.140
Jesper.

00:38:35.350 --> 00:38:37.260
Thank you, Mark.

00:38:42.400 --> 00:38:46.240
I am responsible for all the tools
and technology at PeopleSoft,

00:38:46.300 --> 00:38:49.570
so I appreciate the opportunity
to speak to all of you here today.

00:38:49.580 --> 00:38:54.260
I thought it would be a good idea to kind
of give you an overview of PeopleSoft.

00:38:54.410 --> 00:38:57.740
Thanks to Larry and his evil empire,
we've got great brand

00:38:57.880 --> 00:38:59.590
recognition these days.

00:38:59.600 --> 00:39:02.380
Over the past year,
it's really grown from

00:39:02.380 --> 00:39:04.000
a brand perspective.

00:39:04.000 --> 00:39:07.140
But in case you didn't know,
PeopleSoft is now,

00:39:07.300 --> 00:39:11.110
since our acquisition of JD Edwards,
which was about a year ago,

00:39:11.110 --> 00:39:14.200
just over a year ago,
now the second largest provider

00:39:14.200 --> 00:39:17.180
of enterprise application
software in the world.

00:39:17.180 --> 00:39:21.020
We have about 11,000 customers,
actually closer to 12,000

00:39:21.020 --> 00:39:22.220
customers nowadays.

00:39:22.220 --> 00:39:25.060
The kind of software we
run for these customers,

00:39:25.060 --> 00:39:29.360
the customers vary between small
customers and very large customers.

00:39:29.360 --> 00:39:34.130
But just to give you a perspective,
we have the largest companies

00:39:34.130 --> 00:39:36.560
in the world run our software.

00:39:36.560 --> 00:39:39.260
And the software is
truly mission critical.

00:39:39.620 --> 00:39:43.480
The kind of software we build and
sell to our customers and support

00:39:43.480 --> 00:39:47.000
and help our customers with are
used for things like payroll.

00:39:47.000 --> 00:39:50.690
So if our software doesn't work,
people don't get paid.

00:39:50.740 --> 00:39:51.800
It's that simple.

00:39:51.800 --> 00:39:53.750
And that's never popular in businesses.

00:39:53.760 --> 00:39:56.150
I'm sure you can appreciate that.

00:39:56.190 --> 00:39:58.580
As an example,
I know in the Apple community,

00:39:58.580 --> 00:40:00.280
there are many contractors.

00:40:00.280 --> 00:40:03.740
We have a lot of staffing
companies that use our software.

00:40:03.740 --> 00:40:07.720
And obviously, they use our payroll
types of applications.

00:40:07.720 --> 00:40:09.390
And they're certainly very critical.

00:40:09.620 --> 00:40:10.360
And they're certainly critical in nature.

00:40:10.360 --> 00:40:12.820
The kind of applications we have,
obviously,

00:40:12.820 --> 00:40:17.360
we're dominating the space of human
resources or human capital management,

00:40:17.360 --> 00:40:18.110
as we call it.

00:40:18.740 --> 00:40:22.020
Financial management is a
very strong area for us.

00:40:22.020 --> 00:40:25.800
So general ledger, accounts payable,
accounts receivable,

00:40:26.000 --> 00:40:27.830
traditional ERP applications.

00:40:27.840 --> 00:40:31.960
We are doing well in CRM,
customer relationship management.

00:40:31.960 --> 00:40:34.960
We're doing well in supplier
relationship management.

00:40:34.960 --> 00:40:36.600
With the acquisition of J.D.

00:40:36.660 --> 00:40:39.460
Edwards, we acquired one of the
leading manufacturers.

00:40:39.620 --> 00:40:42.480
We have the largest manufacturing
application vendors in the world.

00:40:42.480 --> 00:40:45.730
Most people associate
manufacturing with SAP,

00:40:45.730 --> 00:40:48.070
our big competitor from Europe.

00:40:48.080 --> 00:40:50.460
It's not a well-known fact that J.D.

00:40:50.460 --> 00:40:53.860
Edwards, from a manufacturing
software perspective,

00:40:53.860 --> 00:40:57.260
actually have more installations
in North America than SAP.

00:40:57.260 --> 00:40:58.740
So by acquiring J.D.

00:40:58.740 --> 00:41:01.560
Edwards,
we acquired a large install base.

00:41:01.560 --> 00:41:05.180
And I think everybody would agree that's
mission-critical software as well.

00:41:05.180 --> 00:41:09.450
We have customers in 150 countries.

00:41:09.630 --> 00:41:11.620
We have customers across the world.

00:41:11.620 --> 00:41:13.610
That means globalization
is very important to us.

00:41:13.620 --> 00:41:20.120
That means working in many languages,
having the ability to essentially

00:41:20.470 --> 00:41:26.210
support different types of applications
with local legislative types of

00:41:26.210 --> 00:41:29.620
flavors of our applications is
very critical for our customers.

00:41:29.620 --> 00:41:35.590
Also, PeopleSoft's always been known
for our cross-platform support.

00:41:35.670 --> 00:41:37.620
It's been a true north for PeopleSoft
ever since the day we started.

00:41:39.630 --> 00:41:44.900
We are by far the enterprise application
vendor that supports the largest

00:41:44.900 --> 00:41:48.770
multitude of operating systems,
databases, browsers,

00:41:48.770 --> 00:41:51.620
as we'll talk about today,
application servers.

00:41:51.620 --> 00:41:53.620
Just to give you an idea,
an operating system,

00:41:53.620 --> 00:41:57.660
a very large portion of our revenue
comes from very large companies

00:41:57.660 --> 00:41:59.570
that are running mainframe.

00:41:59.960 --> 00:42:05.620
IBM, ZOS,
the operating system is important to us.

00:42:05.620 --> 00:42:08.610
Also, the MVS, slightly older operating
system on mainframe.

00:42:08.620 --> 00:42:09.620
Any flagship.

00:42:09.620 --> 00:42:11.620
Any type of driver of Unix you want.

00:42:11.620 --> 00:42:13.620
Linux, very important to us today.

00:42:13.620 --> 00:42:19.620
We primarily are running with
Java infrastructure at a mid-tier.

00:42:19.620 --> 00:42:23.610
And that means we ship our applications
with WebSphere and with WebLogic,

00:42:23.620 --> 00:42:27.620
the two leading Java-centric
application servers.

00:42:27.620 --> 00:42:31.270
And obviously,
we have a pure Internet architecture,

00:42:31.270 --> 00:42:33.620
which we're pretty proud about.

00:42:33.620 --> 00:42:37.190
We were the first company to
truly run all of our applications

00:42:37.190 --> 00:42:38.620
in nothing but a browser.

00:42:38.670 --> 00:42:43.610
Where most of our competitors still had
flavors of their product that were heavy,

00:42:43.630 --> 00:42:44.620
if you like, in nature.

00:42:44.620 --> 00:42:49.580
Either thick Windows clients or at
least Java applet types of clients.

00:42:49.630 --> 00:42:51.620
Many of them still do.

00:42:51.620 --> 00:42:57.620
Whereas we already, ever since 2000,
ran in a pure Internet architecture.

00:42:57.620 --> 00:43:00.740
And that obviously means,
given the critical nature

00:43:00.790 --> 00:43:04.460
of our applications and the
different types of applications,

00:43:04.670 --> 00:43:07.620
that if you're having a
pure Internet architecture,

00:43:07.620 --> 00:43:10.820
you're going to be able to
de-stress browsers and have been

00:43:10.820 --> 00:43:13.620
stressing browsers ever since 2000.

00:43:13.630 --> 00:43:16.780
And so, that's obviously key,
according to the subject

00:43:16.860 --> 00:43:18.490
we're talking about today.

00:43:18.870 --> 00:43:21.440
So where are the Macs in our world?

00:43:21.480 --> 00:43:24.370
Macs are very important to PeopleSoft.

00:43:24.370 --> 00:43:28.470
Higher education, and Mark was one of the
representatives from one of our

00:43:28.550 --> 00:43:31.860
customers in higher education,
is an absolute key area,

00:43:31.960 --> 00:43:35.060
key industry for PeopleSoft,
and I think it's fair to say

00:43:35.190 --> 00:43:37.080
we dominate that industry.

00:43:37.130 --> 00:43:43.570
Higher education means payrolls,
it means student administration systems,

00:43:43.570 --> 00:43:48.650
and Mark showed you one of the kind of
screenshots of one of those applications,

00:43:48.790 --> 00:43:53.080
but there's an awful lot of functionality
that's going into those areas.

00:43:53.170 --> 00:43:55.800
It's not just managing the students,
it's also managing all the

00:43:55.800 --> 00:43:59.280
employees at the university,
their payroll, their benefits,

00:43:59.330 --> 00:44:02.360
their training programs,
all of those kind of things.

00:44:02.360 --> 00:44:06.400
So that's an important area for us,
University of Santa Cruz being one

00:44:06.410 --> 00:44:11.130
of our good customers in that area,
but it spans the world, Ivy League,

00:44:11.130 --> 00:44:15.170
universities, all the big universities
in North America are pretty

00:44:15.170 --> 00:44:16.560
much PeopleSoft customers.

00:44:16.570 --> 00:44:20.660
Healthcare and pharmaceutical is an
important area for us and for Apple.

00:44:20.660 --> 00:44:25.700
Companies like Genentech has an
awful lot of Apple computers in their

00:44:25.700 --> 00:44:27.880
labs and use PeopleSoft as well.

00:44:27.990 --> 00:44:32.640
So another key area where Macs
are important for us as an

00:44:32.640 --> 00:44:34.100
enterprise software company.

00:44:34.210 --> 00:44:38.480
Government key, I can't mention all the
different government agencies

00:44:38.520 --> 00:44:41.680
that use our software,
but I can let you imagine who they are,

00:44:41.770 --> 00:44:44.840
and there's an awful lot
of Macs in that area.

00:44:44.840 --> 00:44:47.710
I think also it's a great
opportunity to be able to use the

00:44:47.760 --> 00:44:49.390
software that's available to us.

00:44:49.410 --> 00:44:53.620
So if you think about higher education,
one of the things that's key there is,

00:44:53.620 --> 00:44:56.510
and I'll talk more about that,
whether you're a power

00:44:56.570 --> 00:44:59.160
user or a transient user,
whether you use one type of our

00:44:59.160 --> 00:45:01.260
application or the other application.

00:45:01.260 --> 00:45:04.940
Financial services and in
general the service industries

00:45:04.940 --> 00:45:08.560
is an area where PeopleSoft
traditionally have been strong,

00:45:08.640 --> 00:45:13.150
whereas maybe SAP has dominated more
the asset intensive industries and

00:45:13.290 --> 00:45:16.130
the manufacturing types of industries.

00:45:16.200 --> 00:45:17.490
But those are some of the areas
where people are very interested

00:45:17.510 --> 00:45:20.050
in and they're very interested in
and they're very interested in.

00:45:20.050 --> 00:45:23.050
So it is very important and has
always been very important for us

00:45:23.050 --> 00:45:25.970
to support Macs in the right kind
of way as a first class citizen

00:45:25.970 --> 00:45:27.900
of the PeopleSoft infrastructure.

00:45:29.970 --> 00:45:33.560
So given that, why is Safari important?

00:45:33.560 --> 00:45:37.780
Customer demand should be obvious
based on what I just talked about here,

00:45:37.780 --> 00:45:41.750
but also if you think about the
user experience and both of the

00:45:41.760 --> 00:45:44.020
marks talked about that before.

00:45:44.020 --> 00:45:48.180
You know, prior to Safari coming out,
we were forced to work with

00:45:48.180 --> 00:45:49.840
Netscape and work with IE.

00:45:49.950 --> 00:45:54.080
And it was frustrating for our
users for the same reasons that the

00:45:54.080 --> 00:45:58.260
two previous speakers talked about,
but it was actually equally frustrating

00:45:58.260 --> 00:46:02.110
to us as a development organization
because when Microsoft came

00:46:02.110 --> 00:46:05.660
out with newer versions of IE,
they do develop, you know,

00:46:05.660 --> 00:46:09.520
smart new utilities,
great features that we can take advantage

00:46:09.520 --> 00:46:12.550
of in our development and in our,
you know,

00:46:12.550 --> 00:46:15.680
hunt for better and better applications.

00:46:15.680 --> 00:46:20.280
But it's no good when those same features
are not available on the Mac because

00:46:20.290 --> 00:46:22.840
IE on the Mac was always lagging behind.

00:46:23.060 --> 00:46:25.910
And that forced us to
code to a kind of common,

00:46:25.910 --> 00:46:27.900
lowest common denominator.

00:46:27.900 --> 00:46:31.770
And so we were always forced
to compromise and were always,

00:46:31.770 --> 00:46:35.940
or weren't always,
but were falling behind in certain areas,

00:46:35.940 --> 00:46:40.600
you know, to some of our competitors who
just coded for that one platform.

00:46:40.650 --> 00:46:42.840
And that was a real challenge for us.

00:46:42.840 --> 00:46:47.280
So when we, when we first saw, you know,
Safari 1.0, we just,

00:46:47.280 --> 00:46:49.290
that was like a sigh of relief.

00:46:49.290 --> 00:46:53.670
That was, thank God,
that Apple is going into this area.

00:46:53.670 --> 00:46:59.820
And actually, even more important for us,
that Apple was so committed to standards

00:46:59.820 --> 00:47:03.760
like Mark was just talking about W3C.

00:47:03.870 --> 00:47:06.960
Absolute key for us because we
use things like DOM and cascading

00:47:07.060 --> 00:47:11.800
style sheets heavily in the way
that we code our application.

00:47:11.800 --> 00:47:16.100
There's just no way to make browser
experience interactive if you don't.

00:47:16.110 --> 00:47:18.580
And so the fact that,
that Apple made it very clear from the

00:47:18.580 --> 00:47:23.810
get-go that they were going to code very
clearly to the standards was huge for us.

00:47:23.830 --> 00:47:28.180
If Apple had not done that and
we needed that strong support,

00:47:28.180 --> 00:47:31.320
we would have had to either
fork our code everywhere or

00:47:31.400 --> 00:47:34.830
code some kind of an abstraction
layer over these kind of things.

00:47:34.890 --> 00:47:37.810
And that would have caused performance
problems and that would have just,

00:47:37.830 --> 00:47:39.450
just absolutely been a nightmare.

00:47:41.800 --> 00:49:40.000
[Transcript missing]

00:49:40.140 --> 00:49:45.400
It's probably also worth pointing out,
and I alluded a little bit to it earlier,

00:49:45.400 --> 00:49:48.590
the difference in users and
what their expectations are

00:49:48.590 --> 00:49:50.420
of a PeopleSoft application.

00:49:50.420 --> 00:49:53.650
So in the case of Mark and
the University of Santa Cruz,

00:49:53.650 --> 00:49:58.100
it's important for him that we have an
application that is really primarily

00:49:58.100 --> 00:50:00.750
used sometimes by self-service users.

00:50:01.120 --> 00:50:05.690
That's students that are sitting at home
or in the dorm or wherever they might be.

00:50:05.700 --> 00:50:09.540
They have a normal browser and
they access the University of

00:50:09.540 --> 00:50:13.730
Santa Cruz website to see what
kind of courses they're taking,

00:50:13.730 --> 00:50:18.700
just like they're accessing Amazon.com
or eBay.com or wherever they're going.

00:50:18.700 --> 00:50:21.720
It is normal self-service application.

00:50:21.720 --> 00:50:23.870
And that's one type of user.

00:50:23.880 --> 00:50:26.130
It's kind of the infrequent user.

00:50:26.150 --> 00:50:27.560
They don't access it very much.

00:50:27.580 --> 00:50:29.100
It happens once in a while.

00:50:29.280 --> 00:50:35.080
And they use their Macs in their
home for that kind of thing.

00:50:35.080 --> 00:50:36.980
But we also have power users.

00:50:36.980 --> 00:50:43.050
Imagine you are a data
entry or order entry clerk.

00:50:43.160 --> 00:50:47.300
Or imagine you are one of these
types of users that sit in front

00:50:47.390 --> 00:50:49.460
of your screen all day long.

00:50:49.520 --> 00:50:52.870
You do not want an Amazon.com
experience with that.

00:50:52.890 --> 00:50:56.300
You do not want to have your hand
on your browser or on the mouse

00:50:56.300 --> 00:50:58.340
all the time and point and click.

00:50:58.450 --> 00:50:59.260
And you certainly don't.

00:50:59.260 --> 00:51:01.810
You don't want the screens
to refresh every time there's

00:51:01.850 --> 00:51:03.310
something you want to pick.

00:51:03.450 --> 00:51:07.000
These people come from
mainframe environments.

00:51:07.000 --> 00:51:10.000
And the screen Mark showed you
earlier may not look pretty,

00:51:10.040 --> 00:51:11.480
but it's very functional.

00:51:11.480 --> 00:51:15.580
It's tap, tap, tap, look ahead,
click down, Bing, select.

00:51:15.600 --> 00:51:18.310
They've been used to data
entry in that kind of world.

00:51:18.320 --> 00:51:19.200
And it's fast.

00:51:19.270 --> 00:51:20.040
It's efficient.

00:51:20.040 --> 00:51:23.100
And so our applications
have to mirror that.

00:51:23.120 --> 00:51:27.090
If our applications don't match that,
our customers aren't happy.

00:51:27.100 --> 00:51:28.580
That's a power user.

00:51:28.580 --> 00:51:28.660
That's a power user.

00:51:29.280 --> 00:51:30.830
Some of those users never use the mouse.

00:51:30.960 --> 00:51:34.900
They just want to be able to look ahead,
tap ahead, all of those kind of things.

00:51:34.900 --> 00:51:39.080
And so we must support that same kind
of interactivity in our application.

00:51:39.080 --> 00:51:42.830
That's a very different user
model than the self-service type

00:51:42.930 --> 00:51:44.970
of user we talked about before.

00:51:44.980 --> 00:51:49.000
Accessibility is key for us, right?

00:51:49.000 --> 00:51:53.260
Especially in the government kind of
area I talked about at universities.

00:51:53.260 --> 00:51:56.240
It's important everywhere,
but it's a requirement,

00:51:56.260 --> 00:51:58.750
a legal requirement when you're
dealing with the government.

00:51:58.760 --> 00:51:58.880
Right?

00:51:59.280 --> 00:52:04.280
Data section 508 compliance
requirement is very important.

00:52:04.280 --> 00:52:09.840
The readers that need to be able to
apply to the screen to magnify must

00:52:09.840 --> 00:52:12.120
work within these kind of applications.

00:52:12.210 --> 00:52:16.410
And obviously ease of use is key and
was one of the things that really

00:52:16.470 --> 00:52:20.680
attracted us to the Safari browser
as well because of the visual appeal

00:52:20.680 --> 00:52:25.660
in the normal kind of tradition of
Apple that people have come to expect.

00:52:26.800 --> 00:54:30.600
[Transcript missing]

00:54:31.100 --> 01:00:12.100
[Transcript missing]

01:00:13.710 --> 01:00:18.870
Lastly, just kind of want to say that,
you know, this was a team effort.

01:00:18.920 --> 01:00:21.200
As you can see here,
this was the team I had

01:00:21.200 --> 01:00:22.330
on it at PeopleSoft.

01:00:22.420 --> 01:00:23.740
Not a large team.

01:00:23.740 --> 01:00:25.500
This was not that tough.

01:00:25.590 --> 01:00:28.630
I would tell all of you if
most of you are Mac people,

01:00:28.630 --> 01:00:31.450
so you're already probably supporting it.

01:00:31.570 --> 01:00:33.720
But if you don't,
and if you have a large website

01:00:33.800 --> 01:00:37.020
and all applications and you are,
you know, worried about how much

01:00:37.060 --> 01:00:39.710
effort is this going to take,
it is not that hard.

01:00:39.740 --> 01:00:43.290
The reason why I had to have, you know,
even a team of this side was just

01:00:43.290 --> 01:00:46.410
because of the critical nature
of the applications that we have

01:00:46.410 --> 01:00:47.880
that I talked about earlier.

01:00:47.880 --> 01:00:51.520
We had great support from Apple directly
from the development team,

01:00:51.520 --> 01:00:53.370
a couple of technical contacts.

01:00:53.430 --> 01:00:56.770
I'm sure they were working other
things all the time as well,

01:00:56.770 --> 01:00:59.280
but they were available to us 24-7.

01:00:59.300 --> 01:01:03.390
So we got all the support we needed,
super response, and it was a great,

01:01:03.390 --> 01:01:06.850
believe me, from all the fires I'm
fighting on a daily basis,

01:01:06.900 --> 01:01:09.560
this one was not even really on my radar.

01:01:09.720 --> 01:01:13.620
And I think I had one call with
my Apple counterpart during the

01:01:13.620 --> 01:01:15.860
whole kind of cycle that we had.

01:01:17.700 --> 01:01:20.980
So I think it was a
very successful outcome.

01:01:20.980 --> 01:01:24.210
We've just today actually with
this conference announced a

01:01:24.210 --> 01:01:28.730
couple of press releases in,
you know, not only the availability

01:01:28.730 --> 01:01:30.380
but also the intent we have.

01:01:30.400 --> 01:01:33.140
We are now available on
PeopleSoft Enterprise,

01:01:33.190 --> 01:01:35.980
which is the product line
that was the traditional

01:01:35.980 --> 01:01:38.050
PeopleSoft that I talked about.

01:01:38.080 --> 01:01:42.200
But we're also busy certifying
our Enterprise One product line,

01:01:42.200 --> 01:01:43.970
which is our former J.D.

01:01:43.980 --> 01:01:47.400
Edwards One World product
line on Safari as well.

01:01:47.760 --> 01:01:50.270
That will get us more into
the manufacturing and the

01:01:50.270 --> 01:01:51.720
mid-market space as well.

01:01:51.720 --> 01:01:56.110
And again, we're doing so because we're
encouraged by the ease with

01:01:56.110 --> 01:01:58.240
which we were able to do this.

01:01:58.240 --> 01:02:02.620
So I would say as a conclusion, you know,
this was important for us.

01:02:02.920 --> 01:02:06.370
This just completely
underlines our mantra,

01:02:06.370 --> 01:02:10.330
which is, you know,
we need access anywhere to our

01:02:10.330 --> 01:02:13.260
applications for our customers.

01:02:13.260 --> 01:02:17.640
And with this, we have ensured between
Apple and PeopleSoft.

01:02:17.710 --> 01:02:20.860
That Mac users get the best
in class user experience of

01:02:20.860 --> 01:02:23.070
using PeopleSoft applications.

01:02:23.090 --> 01:02:29.160
So I appreciate your time and
we'll be available for Q&A as well.

01:02:29.160 --> 01:02:30.330
Thank you.

01:02:36.100 --> 01:02:40.710
All right, so I just want to wrap it
up with a quick overview of,

01:02:40.760 --> 01:02:43.200
you know, what are you going to
do on your side with,

01:02:43.200 --> 01:02:45.650
if you have the same sort of
issues that Mark Cianca had,

01:02:45.650 --> 01:02:48.350
or if you have an enterprise
product and you want to work with

01:02:48.380 --> 01:02:52.220
Apple to ensure that it's supported,
whether you're writing it yourself

01:02:52.220 --> 01:02:54.960
or it's something that you need
to support your organization.

01:02:56.000 --> 01:02:59.790
Just sort of number one is to make sure
you've joined the developer connection.

01:02:59.800 --> 01:03:02.380
Obviously, you're all here,
so you've all been part of it.

01:03:02.510 --> 01:03:06.070
But make sure that QA folks,
make sure that other folks that

01:03:06.070 --> 01:03:10.030
are using the Safari browser in
their day-to-day lives are part of

01:03:10.050 --> 01:03:15.070
this so that they can feed us bugs,
give us feedback, help us get this right.

01:03:15.100 --> 01:03:17.730
You know what the site looks like.

01:03:17.730 --> 01:03:18.960
Log in.

01:03:18.960 --> 01:03:25.450
Just a quick add for the folks that
have access to the Safari site,

01:03:25.590 --> 01:03:25.980
to the API.

01:03:25.980 --> 01:03:31.400
The ADC have pre-release views of Safari,
pre-release views of Mac OS X,

01:03:31.630 --> 01:03:33.540
which includes Safari.

01:03:33.540 --> 01:03:36.190
So if you've got a site that
you're trying to get up and

01:03:36.190 --> 01:03:39.520
running and you want to find out
how things are going vis-a-vis the

01:03:39.520 --> 01:03:42.550
fixes that you've submitted to us,
being part of the ADC is a

01:03:42.550 --> 01:03:46.080
way to download and test those
early versions of the browser.

01:03:46.080 --> 01:03:46.750
See how we're doing.

01:03:46.850 --> 01:03:48.720
Let us know if we broke
something along the way.

01:03:48.720 --> 01:03:51.530
Sort of join in the co-development
effort to make sure that we've

01:03:51.540 --> 01:03:53.140
got the best browser out there.

01:03:53.140 --> 01:03:55.950
And so when we GM,
we don't release something that--

01:03:56.030 --> 01:03:58.330
that's not going to work for you.

01:03:59.760 --> 01:04:01.660
File bugs against Safari.

01:04:01.660 --> 01:04:02.040
Here's the screen.

01:04:02.040 --> 01:04:04.120
Bugreporter.apple.com.

01:04:04.230 --> 01:04:05.470
Don't use the bug button.

01:04:05.470 --> 01:04:07.600
Go and create a real bug for us.

01:04:07.600 --> 01:04:09.660
That's the quickest way to
get something addressed.

01:04:09.660 --> 01:04:14.610
Your submissions drive our priorities,
and the more concrete they are,

01:04:14.680 --> 01:04:15.770
the better off.

01:04:15.910 --> 01:04:19.400
Don't assume that somebody else has
submitted the same bug you're submitting.

01:04:19.400 --> 01:04:21.900
If you see something,
please go to our website,

01:04:21.900 --> 01:04:24.020
make sure you log in,
give us a bug report,

01:04:24.140 --> 01:04:25.560
log it against Safari.

01:04:25.560 --> 01:04:27.130
We want to knock these down.

01:04:27.130 --> 01:04:29.550
We want to make sure that we're
the best browser on the platform.

01:04:29.600 --> 01:04:34.600
Here's the URL to go and do it if
you're not aware of where to go.

01:04:35.500 --> 01:06:51.300
[Transcript missing]