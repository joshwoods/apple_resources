---
Title:  The Encoding Process in Depth
Year:   2004
Web:    https://nonstrict.eu/wwdcindex/wwdc2004/703/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Today we're going to talk about encoding, everything from A to Z, what you need to know from the pre-production side all the way to the finished target. Let me see if this is working here. Skip that. I already self-introduced myself. Encoding means a lot of different things to a lot of different people. I imagine we have a gamut of people here, a lot of beginners and also maybe some expert encoders.

But, you know, the workflow is always going to be the same. Sometimes some people come in halfway into the workflow. They already have it captured. Other times, you know, you want to start from the camera perspective all the way to capturing, encoding, delivering, and then archiving for later repurposing.

Most of the things you need to know about encoding is to really figure out what your target is going to be. You want to focus your attention on who you're going to be delivering it to, so you can pick the appropriate format, and also so you don't waste any resources.

If you're just going to be doing web content only and never repurpose it, and you know you're never going to repurpose it, there's no point in shooting on an HD cam. Obviously, if you're going to repurpose it, you want to shoot on an HD cam, so one day you can put it on an HD DVD, you want to put it on an HD broadcast, stuff like that. You've got to know what to do for your target with your budget, etc. Here are some of the common encoding targets we have. Nowadays, they want to make DVDs, they want to make CD-ROMs.

They want to put stuff on the web, or with the new whole mobile device craze that might be hitting the wave in the US this year, you might see a lot of 3GPP or PP2 stuff like you see in Europe and Japan. You want to take advantage of all these targets. The target is going to define your format.

If you go on a DVD or DVD-ROM, you're going to encode in a proper format for that target, MPEG-2, MPEG-1, depending on what you're looking to do, how much material you want to fit on a DVD, etc. If you're offlining video for later on use, you want to always offline in the highest possible format for what your purposes are.

Be that HD uncompressed, DVCAM, DVC Pro, etc. Always one offline in the highest possible video. Then you have a variety of formats you can use for CD-ROMs or the Internet. You guys know what all those are on the Internet. You'll see anything from Windows Media to QuickTime to Reel to MPEG Layer 3 for audio and a variety of others.

Flash video. If you want to call that video. And CD, you know, all kinds of other stuff. So, we'll talk about, you know, most of the stuff here. I don't know if most of you guys are looking here as far as encoding to manufacture DVDs or author DVDs or if everybody's really focused more on the Web.

Who's really here interested more in like Web and mobile device delivery? That kind of gives me a clue to like, I don't want to focus on DVDs when people are like, don't care. But, you know, basically, if you're interested in, like, mobile device delivery, you're going to want to focus on that. So, basically, if you're doing DVD, I think the holy grail is really the editor.

You know, the beauty about QuickTime and Apple is that you have one of the best editing platforms, you know, in the world. You have Final Cut HD. You want to edit your piece. You want to just finish it and then just create, you know, different versions to multiple targets. So, in order to do that, you define your targets and you want to do that in one quick, easy step.

Well, the question is, can you do that? And what tools? What tools to use to get to your target? So, if you're doing a DVD, it's pretty easy nowadays. I mean, you have Compressor. It comes with Final Cut HD. You just create your settings, stuff like that. You create a droplet and I'll show you later in, you know, through the process how to create a droplet, how to create a droplet. You can attach it to a watch folder with an Apple script. So, you can just drag it into a folder that's on a server. It'll encode itself. You come in later after you're doing other stuff. You can just drink a coffee and it's all done for you.

Compressor's hands down the most effective tool right now and the cheapest tool if you want to, you know, do stuff. Unless you're running a DVD encoding house where you need to encode three times faster in real time, then, you know, there are other tools, but you can talk to me about that later.

Then, if you're trying to do MPEG-4 type of format encoding because you want to maybe do stuff for CD-ROMs or DVD-ROMs, or the web, you know, it kind of covers that gamut. And hopefully, once the H.264 codec comes out, you'll be able to just cover a variety of targets with that container as far as MPEG-4 is concerned. Then, you want, you have other tools.

And, you know, it kind of, and the tool is going to kind of be decided upon based on the codec you decide on using. So, you'll see that for MPEG-4, you know, compressor, squeeze, cleaner, I also didn't mention here, but there's a product called, you know, the MPEG-4. But there's a product by Totally Hip called the HipFlix.

And there's a couple other products out there, I'm sure, you know, that I don't know about. But the main ones are like QuickTime Pro for one-offs. If you want to do batch jobs, cleaner, squeeze and compressor will do them. If you're using Sorensen, you really want to use cleaner because it's the only one that lets you do two-pass VBR.

And I'll be talking about reverse telecine in a little bit, so I'll tell you other reasons to use cleaner. However, compressing to a QuickTime movie, Compressor, and you're doing it from Final Cut here. A lot of assumptions here are that we're using Final Cut. Why? Because it's the best editing platform out there.

If you're using iMovie, you can just do the same thing. Also, you just create your QuickTime ref movie, and I'll go through, hopefully, with Final Cut in my demo on how to create your ref movie, drag it in, and use it. How many in the crowd use Final Cut?

[Transcript missing]

Flash video, if you look at some people, they're the big craze for flash video lately. I personally don't think the flash video quality is that great right now. It's great for tucking heads and compatibility-wise, flash is just all over the place. If you're doing corporate stuff with tucking heads, I say use it. It's fantastic. You don't have to worry about plug-ins, etc. But if you're doing a lot of high-motion stuff, it's really not at par versus other videos as far as color saturation and motion. compensation type of stuff, so.

That's just my opinion on that. Windows Media, want it or not, you're going to have to encode to Windows Media. You're going to have clients that want to encode to Windows Media. And how do you do that on the Mac when Microsoft doesn't really have a Windows Media SDK to let Mac users author Windows Media content? And there's not much you can really do about it. You really have to use a PC if you want to achieve that.

So, you know, I have techniques. So you can export to an AVI file, obviously as a one-off from any, you know, QuickTime Player Pro or from Final Cut. Or if you don't, you know, depending on what your source footage, you know, what your end-use footage is, you can also just use Compressor and do it into MPEG-1 and a Windows Media Encoder will also take that. And you can have a script, maybe share a Windows Drive and have it just dump in there and automatically encode.

Now, obviously, you know that if you encode to MPEG-1 as your source for your Windows Media files, you're going to start losing some of those chroma values and stuff because it's not, you know, 422. And you might introduce other artifacts. But, like I said, if your footage is coming off of a DV camera, doing something like that is not really going to take away too much of the source for it. So it all depends. You know, if I was making a DVD, I wouldn't do, you know, I wouldn't do that. But this is all for Windows Media. So, you know, I'm going to have to do that. So it doesn't matter. Real.

Now, you can, from what I understand, and I don't know if any of you guys have seen it, but I heard there was going to be an export plugin for Final Cut coming out that's in beta right now that will let you, from Final Cut Project, just export to real. I don't know.

It's a rumor. There's a lot of rumors going on. But you could have a real encoder, real producer for Linux running or something on a separate box. I usually run encoders on a separate box. I can just copy my, you know, files over. And you could do the same thing that I do for the AVI files and stuff like that.

Unfortunately, you know, a PC or Linux box is your best bet for real right now. And hopefully once the export component comes out, it'll make it so you don't have to export, you know, a large file. You can just do it from a ref movie from Final Cut. And if you guys know of any of that, just come and talk to me. Somebody's out there asking me?

So Compression Master, I really don't have much to say about them because I was trying to get a hold of the guys and they never sent me any info. But I have, you know, it's, from what I've heard, it's, you know, they do a lot of stuff that you can do with Cleaner, but it's like two, three times harder to use.

So I don't know personal experience, but it's another app that you could use to encode anything in QuickTime and MP4 files and stuff like that. It's called Compression Master by Popwire. Unfortunately, I wasn't able to get my hands on a true release one before this. So, since most of us here are coming from Final Cut and we really are interested in delivering for the web or, you know, some sort of broadband, you know, modem, whatever, phones, etc.

Or a non-DVD, I'm going to say. There's always the debate of streaming versus download. So a lot of people say QuickTime and they always just don't know, well, is it streaming or is it download? They don't know what the difference is, right? So the difference between streaming and a download movie is two things.

One, You know, there's a difference in protocols. Usually streaming is actually, and I should have switched this, streaming is, true streaming is over RTSP, transport, and the download or progressive download QuickTime movies, which is like, I like to call them to differentiate them, are usually over a web server, HTTP.

So a download movie is all the QuickTime movie trailers you see out there, extremely high-quality. What's the difference? Well, a download movie guarantees you every single frame gets to your end user. So for somebody delivering a trailer, for somebody delivering a daily or something like that, it could be, you know, it's the proper way of doing it because you don't miss a frame. However, you know, in a progressive download situation, the way it works with the QuickTime player is it starts playing as soon as it knows that it will finish playing, you know, but it'll finish downloading before it finishes playing.

So, you know, the longer the movie is, and depending on the data rate, it'll still be playing. The bigger the file is going to be for you to download, and the longer the latency to start playing is. So you've really got to kind of do some testing as to, well, if I want to have a 300K movie, you know, for download, and my movies are going to be on the average of 30 minutes, and my users have a connection speed of, you know, 400K, well, that means that my latency on, you know, by the time they start watching it is going to be, I don't know, two minutes or something. And I'm just putting numbers out there. I'm not showing you the numbers.

But I can, if you have questions about that later, I can tell you how to calculate that. So really, HTTP download movies are not recommended for, in my opinion, anything over 10 minutes is really pushing it. I usually say about seven minutes. That's why trailers are the best thing in the world. Another thing is because when you have a 30-minute program and somebody wants to watch the last five minutes, they can't start watching that until that portion's been downloaded. Whereas streaming, on the other hand, is made just for that.

You know, for a two-hour show, for a three-hour show, you can get to any point in time, and you'll get that, you know, just the part of the video you want to see. However, you know, the con on that is that you don't guarantee the delivery of those packets. If you're doing RTSP, you can force your player, and if you're in a situation where you want to force your player to HTTP protocol, you can do that.

So if you're in a situation where you want to do quick time streaming over HTTP, then you would be guaranteeing a higher rate of packets to the player. And therefore, you know, if you're in a situation where you have a corporate environment, you want to make sure they get every single frame, you might want to force that. But usually, streaming is for something over 10 minutes, and download is for something under 10 minutes if you want to guarantee the quality and stuff like that. That's what I recommend.

So now let's look at some production techniques. You guys are familiar with Final Cut. So, you know, I don't really have to tell you that if you've been editing for a while that, you know, garbage in, garbage out. Everybody who edits knows that, hopefully, by now. So, you know, you're not going to take crappy video and suddenly make it like HD quality just by putting it in a computer.

You know, there's only so much massaging you can do in the post and stuff like that. So, the key is to have a good camera, you know, the higher-quality camera you can get, three CCDs if you're doing DV, HD cameras, beta cams, digi-beta cams, you know, better lenses. All that stuff is going to just give you that much more. And you have to balance that with your budget, obviously.

and then so how do you when you edit I'm really talking about compression here but when you edit obviously you want to keep everything in the original source format if possible. So where possible if you can edit in HD and you capture it and you shot in HD that's the best way to go.

If for some reason you can't do that and you have to go to a lesser format, well you know I don't recommend that but you know you got to do what you got to do for your budget and really if you're shooting on HD and you're going to cut it for a CD-ROM or something well maybe it's not that big of a deal if you're just going down to DV stuff like that. So you know when we think of compression what compression does is obviously it reduces the amount of data of your original source.

You know back in the day when if you have some type of storage constraint or something like that obviously you might want to capture it in a more compressed format so you can do all your editing you know and once you have that in Final Cut I don't know if you're familiar with the feature but you can trim your project so that then you can go ahead and recapture it at a higher data rate and then just take advantage of the space you have on your drive stuff like that.

Compression is a container of the movie. Codecs are compressor-decompressors. They usually define just how much you're going to compress video or audio, and they have many different properties. If you went through that session, you probably would have learned something on what codec to pick for what type of target.

Now I'm going to proceed to hopefully my demo. This isn't really going to be a big demo. Like I said before, if you're thinking of doing...one of the big things that people do is... Is it working? Yeah, they're all working, all three. Okay. So one of the big things is that people don't understand that a lot of footage is shot on film.

And obviously all the movie trailers, that's all shot on film. So that footage is all 24 frames per second, and when you compress it and you're taking footage that's 29.97, you're automatically compressing it. So you're automatically taking almost six extra frames and putting those through your compressor and increasing the amount of data and therefore your end target. And so you're still encoding all these phantom frames. So what you want to do is you want to reverse telecine it, bring it back to a 24-frame source so that when you encode it, you get the purest encode because it's just using the necessary data.

Cinema Tools lets you do this, however, there's a big "if." The big "if" is that you actually have to know and understand what the process of inserting Phantom Frames is and all that good stuff. I've been working in the video field for a long time. and it's still kind of tricky to me. So if you did have your footage, and you know, maybe you're a post-house or something like that, and you know the sequence, and I'll show you what I mean by sequence. Let's open up a clip.

I'm going to get Britney Spears or R. Kelly. I'll open that. So let's just open up a clip, and we want to do what's called a reverse telecine. We want to remove all the phantom frames. This is originally a film clip, and we want to take out those six frames per second out. So we can go ahead and click on Reverse Telecine, and it's going to ask us what the options of the pulldown is. So you have four options here.

The problem here is usually that people don't know which option to use. Also, when you do a reverse telecine, you have to start, well, as far as Cinema Tools is concerned, because it just assumes that the first frame is always an A-frame. And I'm not going to explain to you what that is, but, you know, basically, like I said, you have source 24 fips per second. When you change it over to 2997, you're basically just introducing a duplicate frame every so often.

So, you know, you say, okay, at third frame, introduce, you know, the same one, so the eye doesn't see it because they're two of the same in a row. You don't notice it. You want to strip those out. So if you don't know what an A-frame is, or you already captured this, and you didn't capture an A-frame, you won't be able to use this at all.

But if you are in a pinch, what you can do is you can take, like, 10 seconds of footage, pick one of these, and then go ahead and say, okay, I'm going to pick, you know, this one. And if you see here, this is the sequence that we're going for.

So if you don't know, you would have to go through, create the iterations, pick them, and then go ahead and reverse-tele-synch it. This is going to go on for a little bit. So you can see how painful this process is. Well, that's because Cinema Tools is really made for the post house that gives you the 2997 with the burnt-in sequence. So you can just-- oh, well, the sequence is AABB_B. Then I pick that, and boom, it does it.

And usually, you would do this before importing your source into Final Cut. Therefore, for encoding, this isn't always really helpful unless, one, you know what you're doing. Two, you do some testing. So that now-- I'll show you what-- just so you know what would end up being here. What I didn't see is where it put my file. I think in here.

Okay, so just so you can see what something that was telecine-ed and possibly wrong. When you see it play back, Actually, I picked the right one. You want to look for frames that are like stuttering, any part where it stutters. So, unfortunately, I picked the right setting and actually did that on purpose because I'd used that one before. But you would have to go through each frame, and when you see a duplicate frame where it's stutter, that means you picked the wrong pull-down method.

So, if you want to use this, you can, but you have to test it a lot. Now, if you look at the size of the file that I just telecineated versus the original Brittany Club, You can see that this is the one we telecine. It's 143 megs. The original clip is 180 almost. So, you know, you're saving almost 40 megs, and that's 40 megs less of data you're encoding, and it can drastically increase the quality of your video.

This is only an 11-second file. That's why using any type of tool that's going to do a reverse telecine is going to be very, very valuable. Like I said, I don't recommend using cinema tools unless you know what you're doing, and even then, it's tricky. You have to do some tests.

But if you use Cleaner, and you're using Source that you know comes from film, but it's now 2997, use the telecine feature. And what it does is it actually goes through, reads a bunch of frames, and then it calculates. It's a lot of work to figure out what sequence is the right one. Now, some people make the mistake of just telecining everything, because they figure, you know, but if your content is not all coming from film, you should never do that. Otherwise, you will end up with stuttering or frames where you have bad interlacing and stuff like that.

So this is just to show you about the reverse telecine in...

[Transcript missing]

So, we're talking, you know, a lot of people say, well, on the Internet, what am I going to do? What's, you know, what's our targets nowadays? I mean, it's always changing. What's 200 KB? What's 300 KB? Or why is it that the Apple trailers look so good, those large ones, you know, but how do they do it?

You know, well, they do it, you know, they're usually like 25 megs, and that's why they look so good. And on a broadband connection, well, you'll start seeing it, and because, like I said, it's only five minutes, you know, people think, oh, it's great, but, you know, when you try to do that to a 30-minute clip, it's not as great. So, if you're doing encoding for streaming, you're You really gotta pick your targets accordingly.

People are still dealing with modems. I mean, the US is really the only country that has their modems. Everybody gets like a 56K connection, gets like 38K or higher, but even then. But outside the US, a lot of people are still getting 20K connections or 30K connections. So when you think of a 28K modem, you really want to encode for 20 kilobits. Now, why is this?

Because people don't understand that on modems, you have header packets that are in the modem packets. So you're losing already information. So you can't get any closer than 20K, and that's for your combined video and audio. So if you're aiming at a 56K modem, well, nobody ever gets 56K. It's physically impossible, you know, unless you're like in a lab at Rockwell. 53K over a POTS line is probably as good as it will ever get, and rarely do people get that. So I think the average right now in the US is right around 40.

That's pretty high. It's gone up. But outside of the US, rarely do people get 40KB. So you want to, you know, you have to kind of pick that target accordingly. If I was only encoding content for modem users in the US, I could probably do 38K, 40K. If I was doing it global, I would probably do 32K with QuickTime, you know. Now, you can also use multiple bitrate targets. With QuickTime, so you could encode, you know, you encode your 20K, your 38K, and then you, you know, you create a ref movie, stuff like that.

But so we'll go on ISDN. I don't even know people that have ISDN anymore, but people still want kind of that middle of the road, 100K, 80K. It's a good target for corporate small business for a lot of people. If you do a lot of corporate work, anywhere from 100 to 150K, it might not be bad, unless they have a lot of bandwidth. For their users, then you can go up to 300K. But obviously, if people are watching, you know, if there's 50 users watching 300K in a company and they only got a T1, well, it's going to look pretty bad.

So broadband users, you know, I've seen people right now go anywhere from 300 to 500K. It all depends what your target is, again. But with broadband, because it's a single pipe, you can get away with going 500, even 700 on a lot of cable stuff. So it all depends. And then we're going to talk about how the data rate really lets you choose what your window size is going to be. So, based on the data rate and your content, you're going to have to choose a codec, right?

If you're going to be encoding in a standards-based format, such as MP4 or something like that, you're going to want to use probably the MPEG-4 codec, or hopefully the 264 codec, when it comes out. If you're going to be doing a QuickTime movie, you might want to either choose the MPEG-4 codec for a lot of compatibility, for a lot more standards-based stuff, so you have that choice, or the Sorenson Pro Video codec. If you use the Sorenson codec, always use the Pro version.

Never use the regular one, unless you really, really, really have to, because the quality is not going to be there, and it takes even longer to encode. Now, the drawback with Sorenson Pro is that it takes two to three times longer to encode than an MP4 codec video.

However, Sorenson Pro has better color saturation, and I think it deals better with motion than MP4. But if you know what you're doing with MP4, and you do a couple tests, you can take an MP4 encoded clip and adjust a little bit color correction in Cleaner, using some of those things, and you could actually match Sorenson saturation. You're going to have to tweak that.

People that automatically off the bat say, well, MP4 just doesn't match the quality of Sorenson Pro, have never done that tweaking. At first glance, you'd say right away Sorenson wins. But for the compressionists out there, doing a little color correction tweaking, a little gamma, a little brightness contrast adjustment, 99% of people will never be able to tell which one's better. So then, audio.

So then you have audio codecs like, you know, AAC, QDesign Pro, Qualcomm PureVoice, which I don't even know if people use it that much anymore. But it all depends. If you're doing stuff for modems, corporate stuff, headshots, you want to use PureVoice, because it's super low, low bandwidth.

If bandwidth is not an object, then you want to use AAC, you know, because it's just hands down the best codec there is for, you know, for music and voice or a combination of both when bandwidth is not an object. Some people want to use MP3s because it's more of a standard, stuff like that. It's not a bad deal, but MP3, MP layer 3 tends to not have as high quality and I think also use a little bit. Sometimes you see more sync issues when you're using video with an MP3 type of.

So I talked about Sorenson Pro Video, just to go over this a little bit. It lets you deliver probably the highest quality video without any tweaking, but also you have to use most of your encoding time compared to other videos. If you're using VBR encoding, 2Pass VBR, you will only be able to use Cleaner to do this. and it has excellent, excellent scaling capabilities. However, it's also pretty CPU intensive if you're aiming at like G3s or stuff like that by any, you know.

Standard codecs. If you were here for the codecs session, there's just a gazillion codecs that QuickTime handles. Some people have probably never heard of some of them, and they have all a variety of uses. So I'm not going to rehash on that, but mostly for Internet delivery, you're going to use the ones that I was mentioning. For instance, you could possibly use MPEG-1 if you're doing IPTV stuff, any of the H.263, H.264 codecs, and obviously MP4 or any of the 3GPP or GPP2 codecs. If you're offlining stuff, you might use a JPEG for offlining stuff to get lossless, or DV or MPEG-2.

Like I said before, always use the pro versions of the codecs if you're using QDesign or Sorensen Pro. You know, a faster... I don't agree with that. So, let's talk about some web video production techniques. I don't know how many of you folks out there do any of the actual production for shooting, but if you are doing any production, you want to remember a lot of basic things are going to go a long, long way when it comes to encoding, especially when you're encoding for CD-ROM or lower target. These are techniques that people just don't think of, but they actually, you know, they just make a really big difference.

I said before, use the highest quality camera you can get your hands on. When it comes to audio, use the best quality mic you can get your hands on. Use a lav mic if you can, use a boom, or if you're using a camera mic, just make sure you have the camera well in there, make sure you're monitoring the audio, stuff like that.

Make sure you are, if you're shooting something for a talking head, for example, and there's a piece of the backdrop that's moving because of the wind, don't shoot it there. Make sure you can shoot it with a static background. The more movement there is, the more the codec is going to have to work on the whole scene, instead of just working on the little pieces that are changing.

The less movement you have in a frame, that means the higher quality video you'll be able to get at a lower data rate, with any codec. You always want to look for solid color, stuff like that. Poor shading is going to bring in artifacts if you have a background that's not well lit, stuff like that.

Also, if this is going to be only for encoding at CD-ROM or lower rates and stuff like that, and you're looking at something corporate, something not too fancy, do all cuts. Don't do crazy long fades, because when you're going through a fade, every frame in that fade is a pixel that's changing in a dissolve, for example. Well, that's going to encode a lot worse than if it was just a straight cut.

Now, you know, you've got to take production value versus the value of your encode and weigh it out and see what you really want. But if you're going for broadband, chances are nowadays you won't need to do that. Another thing is, anytime you have a handheld camera versus a locked-down stationary camera, you're going to be 10 million times better, because what we don't notice sometimes is where the frame is moving.

Even if it just moves one pixel, that is going to change. It's not going to be that much harder to encode. So always make sure you have locked-down and well-lit cameras. So now we're going to talk about more of the interesting stuff, not the Cinema Tools demo, which I wish I had cleaner also so I could show you what I was talking about in Telecine.

Oh, it is right here. Well, we might talk about it later if we have time. This is more important, Compressor. There's some cool stuff in Compressor. I mean, I really think Compressor is kind of at its baby stage right now because it's only a 1.2 or 1.0.2 version, but with a little bit of help, it can really blow up into something that... Compressor is a simple, easy, and fast way to create a time-saving workflow that works for you. You can also use it to create a time-saving code that works for you.

What I have in my workflow is I have a server that does all the encoding. And I set up Compressor there, and I set up a shared drive. And on that shared drive, I have in an area just different folders. And in those folders, I'll have a little droplet that I created with Compressor.

"What you really want to make sure is you want to make sure you go to Compressor and you want to make sure you've got 1.2. If you don't have 1.2, you might not see everything you see here. So make sure you update your copy to 1.2. You can create a destination, and we'll go ahead and create some custom destination here. Say local. Spin it around. Okay, I'm just gonna do it. In my Raul folder.

So you create a destination, you can name it here. Okay. You can make it a default if you want, but we're not. So, in Compressor here, you have Presets, Destinations, I showed you how to make a destination.

[Transcript missing]

Let's open up. So, what you usually want to have is... Let's take one of our sample movies here.

Kelly. It's a little bit too big. So, we can go ahead and now when you hit Preview, so you can like adjust any settings you might have. This is especially good for adjusting filters. You want to keep this window open. Pick a good frame that has like a lot of changes or a lot of... Oh, this is not good.

Maybe this one because there's a lot more. There's not a lot of color in this whole video clip. So, but here you got the skin tones. You want to make sure the skin tones of both people come out fine.

[Transcript missing]

So let's say we were going to create an MPEG-4 clip. Let's say actually, because we were going to use our 24 frame-per-second footage that we reversed telecine in here.

I'm going to use this one. This one I'm going to remove. Go ahead and create a preset for that. I'm just actually going to use one of these presets already here. Seems like there's a bow. So, a bunch here. We're going to use it, we're going to make it for broadband. So I want large progressive because it's a small clip. I can look at all the specs here, down here. Shows you what specs of that setting is. I can see, you know, if I want to adjust.

One of the things I was talking about earlier is that, you know, unfortunately what you don't have here is an AVI export. If you did, you could get to your, you know, have it export to AVI and put it on some type of Windows box or Linux box with Real Producer or Windows Media Encoder, and then you could get to those clients that need that type. If you don't have to worry about Windows Media or Real, then, you know, your job is done here. Yes?

No, not MPEG Layer 3 audio, MPEG-1 Layer 3 audio. You're talking about audio? Well, here, this is just, this is the container format. So, for example, if you, you know, wanted the actual... So no, not if you want to do-- yeah, you're right. It only lets you do their standard audio. Eric Wright. But here you should be able to set MPEG audio.

[Transcript missing]

I really, if I was making an MPEG, if I was making a .mov file, I would never use MP3 audio. I mean, there's really no point, especially when you have AAC and stuff like that for MP4 files. I don't see the advantage of using it. MPEG-1 Layer 3 audio is really only good for, in my opinion, for audio because of such the, you know, acceptance over the amount of players out there.

It has that advantage, but when it comes to video and audio, I don't see the advantage of putting them both together at all. So, let's go back to just making a standard, you know, MP4 file, which is what we're looking to do here. A lot of things, you know, like I said before, you have to pick.

You know, what your data rate is. Now, what is constant versus VBR? Well, when you're doing a constant bitrate movie, you're looking for consistency. Constant bitrate movies are great for, if you're, for some reason, if you were encoding MP4 files for hardware. Hardware specs usually are a lot less lenient than specs for software. So, people don't realize a good example is when you make DVDs. Some people, you know, they're making a DVD for a client. It's a 20 minute video. They figure they got 4.7 gigs on the DVD. You know what?

I'm going to pick this one thing that says, "Give me 60 minutes highest quality." Well, they don't notice they're making like this DVD MPEG-2 file that's running at like 9 megabits. Well, most of your players out there, when the person puts the DVD in there, they're just going to barf and they're going to call you up and they're going to say, "What's it? Well, I made it the highest quality. Look at it.

It's not bad." "High quality? Look around my computer." Well, yeah, but, you know, hardware, if you ever looked at a real DVD, you know, high quality production DVDs, you pick up a Spider-Man DVD or some, it's one of the latest really hot ones. And you change your display on your, on your VCR at home until you hit like most Pioneer, Sony's they'll have. They'll have a data rate tracking. And just watch that.

The sweet spot for encoding DVDs is really anywhere between 5.5 and 6 megabits per second. Sometimes you'll see stuff go up there, but you don't realize that anytime you go above 6 megabits per second, you're shortening the compatibility window. And so that's where you're going to run into issues. So you've got to be aware of what your targets are. And when it comes to DVDs, you deal a lot with hardware.

Now that we have MPEG-4, there's a lot of people that are dealing with MPEG-4 hardware, so you've got to be aware of that if you are dealing with any of those. If you're just dealing for the Internet, chances are you've just got to know what your end-user's broadband is. So we're going to say, well, 300K. And actually, I want it to be medium VBR, just so it less... I can't select it there, so...

[Transcript missing]

Well, we're going to keep stereo.

64 KB is pretty good for audio, for music. And I'm not going to stream it. This is progressive download, so I don't need any streaming hints at all. Hinting is strictly for streaming, so it has all the packetizer information so that the streaming server can chop it up into little bits and pieces. You don't need that.

Don't select it. And then the beauty about Compressor, it's got all the filters for QuickTime stuff. So if you wanted to, for example, deinterlace something, do gamma correction, which comes in really handy because, well, what am I going to gamma correct? Well, I've got to see what I'm doing here.

Now, some things people don't realize is that, you know, we encode a lot on Macs and stuff, but a lot of your users are going to be on a PC, and the PC graphic cards have a totally different gamma. And a lot of times you'll encode this and you'll say, like, well, you know, this looks pretty good. It looks well lit here. And then you see on a PC monitor it's all dark.

So you have to adjust for that, and depending on the tool you're using, you know, usually what you want to do is you want to, if you're encoding on a Mac, You want to go under 1.0 and make it a little bit lighter. Sometimes it's depending on the content, but in this case I'm going to go at 0.8. I'm actually going to go 0.9 not only.

Just a tad lighter in the gamma correction is going to make the content on the PC be that much better. If I was encoding on a PC, I'd do it the opposite direction. I would make the content just a little bit darker so that I would get the best quality overall.

There's a lot of filters you can use here. There's noise removal. There's all kinds of stuff. You know, the reason of shooting the footage in the best possible way is so you can avoid using any of these. But the ones you might use would be deinterlacing, if you wanted to deinterlace your files so you can have a progressive frame so it compresses better. Also, you know, if you wanted to letterbox stuff just to make it look cool.

or just to give it that feel for what your website is all about. You can also do cropping here, all that stuff. We're just going to leave it default, stuff like that, just for the purpose of showing how to use this. So in summary, you can look at this once again, see what your preset's all about, and then you can save it as a droplet by clicking on here, on the save selection as droplet. It's going to say, okay, where do you want to save this droplet? What do you want to name it? Well, I'm going to call it WWDC. Thank you. And put it in my... I don't want the source folder.

[Transcript missing]

Now, where does this become automation? Well, if you only have one machine and you're not really, like I said, doing this in a server environment, you're done there. Now, if for some reason, let's say you had something in here, and we'll just call this folder. Here, we'll call this My Server. Let's say that was a folder on My Server. Then what I would do is-- and I don't know if you guys want to write some of my stuff down here. This is the wrong one.

So what we do is, you see this little script here is really for a watch folder script. And if you guys want the script, just leave me a card or something. I'll send you guys an email with the script and all that good stuff, put it on our website or something. And basically the way to use it is what you're going to want to do.

This is not what you're wanting to do. Can't find my cheat sheet. Okay, so what you're going to want to do is you're going to want to take the script, put it into your scripts under Library, Apple. I don't have it in here. "I'm not actually going to go over it then.

But what you want to do is I'll send you the exact stuff you need to do. You basically take the script that I'm going to give you. You can change a couple things. At least I like to change the name in the script. In the script, you see the droplet needs to be named CompressorDroplet. So my droplet was named CompressorDroplet. My Droplet was named WWDC Drop. You would change this name here to WWDC Drop.

and then you would go ahead and put it in your scripts folder. Once it's in the scripts folder, whatever you decide to use as your standard, you can just create this whatever you want. And then what you do is you create a folder for every different preset, and I would create a folder in my server that says, "Okay, this is going to be just for MPEG-4 24p content." You know, that's going to cable targets.

And then what you do is when you're done, You can just go ahead and create, you know, take your stuff, your files, drag them into the folder, and boom, and then the watch script will just go ahead, force that droplet onto that folder when new content comes in, move it into a done folder when it's done, and leave the encoded content there already. Because I'm not here in a server environment, I can't really show you guys how to do that.

Yeah, the droplet. So the script would really only be so that your machine, in a case, like, if you wanted to offload the CPU usage so that another machine is just cranking all the, you know, doing all the encoding while you're doing stuff here, you can go ahead, copy that to a folder that's going to do that. If you only have one machine, then you just use the droplet like it is right there, and then we would just take, you know, this file here, drag it onto the droplet, and we're done. You see? Yeah, you never make it roll.

You can have a droplet for each one and drag your ref movie there. You can have a destination for each . You can have-- or the same destination, so that all your files get done in one. Yeah. The script is only good so that this-- if I had another server, I would have the scripts-- oh. What you need to do in order to make the droplet work is tell it not to show that and then save it. So let's quit the droplet.

Let me just get this running. I'll answer your question. So when you're in an automated environment, you're going to be doing maybe 10, 20 clips at a time and stuff like that. You don't want this, you know, you don't want... Why is it not submitting my file? This is strange. You don't want everything hogging this machine. So you create it on a server so that that server can do all the compression.

Now, the droplet would go in the folder on the server, right? And then the script would go on the folder on the server also. The only thing that's on your machine is the ref movie you create, and you drag it on to that folder. That's if, like I said before, if you're using a server automated workflow environment.

If you don't want to offload any CPU encoding to your server, you basically just, you know, you would be done here and you would just drag it on. There's no script involved. There's no nothing. Now why this droplet is not working is, I'm trying to figure out. One thing I find using this sometimes is that...

[Transcript missing]

It also comes with DVD Studio. So it comes with both. And you can't get it separate right now.

Yeah, go ahead. It also works, but the thing is, if you had, this is really set up like, basically what you would do is you'd set up your server to do that, and then when people are editing, all they've got to do is drag it. So let's say you had like three capture stations, you'd want to set it up this way. That way you don't have somebody have to set up all the queue and stuff like that. Yeah.

And that's what you would use here in that environment. Because then, I mean, you could still show them if you wanted, I mean, if you have a class environment, you could show them how to use the batcher, you know, and maybe just, but the problem is that then, you know, they've got to know how to set up a preset and all that stuff. Yeah.

If they could import the presets, you could just say, "Okay, here are all the presets. They're going to come from you," and you just give it to them. They drop it in their folder, and then they could just use the batcher like he's saying. Oh, they're not video editors or anything like that. They're journalists. Yeah, in that case, you might want to just set it up in a server environment. Stuff like that.

So, there's just a couple things to do. One is you have to create the droplets. And obviously, with a little bit more Apple scripting, you could probably create a little bit better interface, something where somebody can pick a droplet out of maybe, you could have the Apple script, like look through a main, folder that has all your droplets, and then the journalist just needs to say, oh, well, this is for modem, or this is for this.

No, you wouldn't see the droplets. There would just be folders. So what happens is the droplets in the folder. You know, that's besides the point. And then the journalist, your student, would just drag it to the folder. And what you would do is you would put the Apple script on the server and just attach it to that folder. So they just got to know, oh, for cable here, for-- so they drag it once, drag it for this one, drag it for that one. And then they leave. And then it's just doing its thing. So then the server is doing all the encoding.

This script would be reading the data from the Ref Movie, and the Ref Movie would be pointing it to all the sources and stuff like that, and then encoding. And, you know, depending, well, what kind of network do you have? Because then, if you have 300 students, then you run into other problems.

Well, I have a... You could also have a script that would basically, when something appears in the done file, check for status, and once you see that it hasn't been written to in a certain amount of seconds, it could send them, or if that was already your web server, your QuickTime server, it would already send them the URL for the ref movie. You could do something like that. I've seen that done. I mean... Which one? I used to work for Media 100. The watch folder. Yeah, the watch folder is tricky.

Well, you know, if you guys have questions, please come up to the mic. We're pretty much This was my last demo to end with. If we can switch it to the slides.

[Transcript missing]

Email and please send me an email saying, give me that script, and I'll put detailed instructions. I'll walk you through it, I promise.

A little flowchart or something. Because, yeah, it's easier when you're doing it than me explaining it. You really kind of have to have the stuff on your end and do it and all that. And once you see it work, you're like, oh, okay, I understand now how it works.
