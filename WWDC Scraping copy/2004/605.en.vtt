WEBVTT

00:00:12.900 --> 00:00:17.010
and welcome.

00:00:17.010 --> 00:00:18.420
Thank you for joining us today.

00:00:18.810 --> 00:00:22.170
I think you're going to find this a
very useful session especially in your

00:00:22.360 --> 00:00:24.780
market where you need to do backups.

00:00:24.780 --> 00:00:25.620
My name is Chris Bledsoe.

00:00:25.620 --> 00:00:27.670
I'm the
Senior Enterprise Alliance Manager and

00:00:27.670 --> 00:00:30.440
I manage all of our backup
vendors here for Apple Computer.

00:00:30.590 --> 00:00:32.410
So let's get going.

00:00:32.880 --> 00:00:34.330
Have you ever had this happen to you?

00:00:34.410 --> 00:00:37.030
Back in 1996,
I worked for Oracle and we had this

00:00:37.240 --> 00:00:39.360
product that was called Oracle Card.

00:00:39.400 --> 00:00:41.260
Does anyone remember Oracle Card?

00:00:41.300 --> 00:00:44.780
Alright, well anyway,
I was building this presentation

00:00:44.780 --> 00:00:47.760
on this Mac so I could go
do a show similar to this.

00:00:47.860 --> 00:00:51.370
And as I went to the show, late night,
you know, you're doing your coding work,

00:00:51.370 --> 00:00:54.870
you're getting your demo set up,

00:00:55.120 --> 00:00:57.120
Boom, my hard drive crashed.

00:00:57.140 --> 00:01:00.150
Like 3 in the morning, you know,
on a Thursday night, you're like, great.

00:01:00.200 --> 00:01:03.370
So, literally for the next 8 hours,
I had to recreate all

00:01:03.530 --> 00:01:04.930
the material that I had.

00:01:04.960 --> 00:01:06.780
And sure enough, I didn't have a backup.

00:01:06.800 --> 00:01:10.180
So, for me, as an individual for
doing a presentation,

00:01:10.280 --> 00:01:12.430
8 hours was difficult enough.

00:01:12.480 --> 00:01:14.960
But in enterprise,
it's absolutely critical.

00:01:14.960 --> 00:01:19.470
That kind of time for an enterprise
can easily represent millions

00:01:19.510 --> 00:01:22.510
of dollars of cost to you and
your enterprise and your business.

00:01:23.040 --> 00:01:26.610
That's why it's absolutely
critical that you have backup.

00:01:26.670 --> 00:01:28.690
So, some of the things we're
going to talk about today,

00:01:28.690 --> 00:01:31.500
some of the backup trends that we're
seeing occurring in the market today.

00:01:31.500 --> 00:01:34.570
Everything from regulation
compliance to the types of

00:01:34.570 --> 00:01:36.580
backup windows that we run into.

00:01:36.580 --> 00:01:40.070
Also, what I'd like to talk about
is our backup market segments.

00:01:40.160 --> 00:01:42.740
What we did is we kind of looked
at the whole market and said,

00:01:42.740 --> 00:01:47.370
okay, what type of backup needs do our
customers for Apple really need?

00:01:47.440 --> 00:01:50.920
And I'll talk in more detail about
whether it's an individual system,

00:01:50.920 --> 00:01:55.040
a laptop, a Power Mac, a Power Book,
all the way scaling up to

00:01:55.040 --> 00:01:58.550
large SAN type deployments
like with our XN product line.

00:01:58.560 --> 00:02:01.720
So, the goal of this session is
so that when you get done,

00:02:01.780 --> 00:02:05.600
you'll have an idea of, okay,
what kind of backup solution can I use?

00:02:05.680 --> 00:02:08.780
Because there's a number of vendors
out there available for you,

00:02:08.780 --> 00:02:11.900
as well as find out what solutions
work on the platform today.

00:02:14.190 --> 00:02:16.520
So before I dig into all
of the backup material,

00:02:16.520 --> 00:02:18.940
I'd like to cover a few terms first.

00:02:19.000 --> 00:02:20.590
The first one is Fibre Channel.

00:02:20.600 --> 00:02:24.390
Fibre Channel is a technology
for transmitting data from your

00:02:24.480 --> 00:02:27.100
computer service across your network.

00:02:27.100 --> 00:02:29.100
So it's a communication capability.

00:02:29.100 --> 00:02:32.960
It's really great for Fibre Channel when
you have like storage devices

00:02:33.000 --> 00:02:35.100
that are hooked up to the network.

00:02:35.260 --> 00:02:37.100
Which kind of leads me to the
next idea which is called RAID.

00:02:37.100 --> 00:02:40.280
Redundant Array of Inexpensive Disks.

00:02:40.280 --> 00:02:44.100
Or sometimes they're called independent
disks as it says on the screen.

00:02:44.100 --> 00:02:48.100
The idea with the RAID is that
instead of having a single disk,

00:02:48.260 --> 00:02:50.100
which has all of your
data and it could fail,

00:02:50.100 --> 00:02:53.070
you set up an array or
a number of those disks.

00:02:53.210 --> 00:02:56.030
And typically you want to do
that for a couple reasons.

00:02:56.080 --> 00:02:59.010
First of all, you want to do it so
you can get performance.

00:02:59.190 --> 00:03:02.200
So instead of reading from a single disk,
you can read across a set of

00:03:02.200 --> 00:03:05.090
disks and be able to access
that information very quickly.

00:03:05.100 --> 00:03:07.100
Also you want to do it
for fault tolerance.

00:03:07.100 --> 00:03:10.500
So in case a disk goes down,
you either have replications

00:03:10.500 --> 00:03:13.890
of that data on the other disk
so you can get access to it.

00:03:14.100 --> 00:03:17.140
We're not going to really
drill down into the RAID today,

00:03:17.140 --> 00:03:19.100
like the different RAID levels.

00:03:19.100 --> 00:03:22.380
We have a great session on
XSERV deployment and for RAID,

00:03:22.380 --> 00:03:26.130
XSERV RAID deployment that you
should definitely be checking out

00:03:26.180 --> 00:03:28.460
and we talk a great deal about that.

00:03:28.820 --> 00:03:32.560
Also, there's this concept of
network attached storage.

00:03:32.580 --> 00:03:35.680
Right, so what you do here is instead
of taking your hard drive storage

00:03:35.710 --> 00:03:39.680
like a RAID server and attaching
it to your departmental server,

00:03:39.680 --> 00:03:43.680
what you do is you break it away and give
it its own independent network address.

00:03:43.710 --> 00:03:46.770
The advantage then is that your
applications that are running on

00:03:46.770 --> 00:03:51.020
the server don't have to compete on
the processor with your disk access.

00:03:51.120 --> 00:03:54.660
So by separating and putting
your data on the network,

00:03:54.660 --> 00:03:58.630
it makes it much more efficient for your
server to get access to the information

00:03:58.700 --> 00:04:03.190
and still have access to this data
in a very fast and efficient way.

00:04:03.420 --> 00:04:06.000
Which leads on to- so you've
got this network attached

00:04:06.000 --> 00:04:07.760
to storage area networks.

00:04:07.890 --> 00:04:10.500
This is a network that oftentimes
is based on fiber channel,

00:04:10.500 --> 00:04:12.440
but it can be based
on other technologies,

00:04:12.560 --> 00:04:15.890
where you have multiple disks that
are on your network talking to

00:04:15.890 --> 00:04:21.360
multiple servers that are also on this
high-speed interconnect technology.

00:04:21.480 --> 00:04:23.180
Which- so that's what a SAN is.

00:04:23.270 --> 00:04:27.300
Now, that leads to what's called HSM,
Hierarchical Storage Management.

00:04:27.430 --> 00:04:31.700
What that does is it says, "Okay,
now I've got these disks on my network,

00:04:31.820 --> 00:04:36.290
how do I manage the migration of that
data from one disk set to the other?"

00:04:36.410 --> 00:04:39.580
And that's what HSM tries to address is,
"Okay, how do I manage it?"

00:04:39.700 --> 00:04:43.800
Which leads to the last term,
ILM, Information Lifecycle Management.

00:04:43.910 --> 00:04:47.440
And that's managing the whole
stack from birth of the data when

00:04:47.440 --> 00:04:51.090
it's created to its obsolescence,
when you no longer need it and you can

00:04:51.090 --> 00:04:53.000
actually safely delete it and move on.

00:04:53.070 --> 00:04:54.670
So those- just want to make
sure you understand some of

00:04:54.670 --> 00:04:58.780
the terminology that we'll be
covering today in our presentation.

00:04:59.960 --> 00:05:01.780
Storage requirements.

00:05:01.880 --> 00:05:06.100
Did anyone here have stock in a WorldCom?

00:05:06.300 --> 00:07:01.300
[Transcript missing]

00:07:01.620 --> 00:07:03.380
It takes a long time
to backup a terabyte.

00:07:03.630 --> 00:07:05.870
So even if you're doing
like disk to disk,

00:07:05.870 --> 00:07:09.320
and I pulled some of my
good backup vendors here,

00:07:09.320 --> 00:07:11.370
you're typically looking
anywhere from two to four hours,

00:07:11.480 --> 00:07:13.500
depending on what kind of throughput
you can actually push through

00:07:13.600 --> 00:07:14.540
your fiber channel network.

00:07:14.600 --> 00:07:16.440
So that's just to backup a terabyte.

00:07:16.570 --> 00:07:20.740
So you can imagine as you're working
in high video demand type environments,

00:07:20.740 --> 00:07:23.870
the need to be able to shrink
that backup window and be able

00:07:23.870 --> 00:07:27.110
to address it effectively so you
can still get access to the data

00:07:27.320 --> 00:07:29.820
you need and safely archive it.

00:07:30.500 --> 00:08:53.900
[Transcript missing]

00:08:54.320 --> 00:08:55.910
And the other thing that
you've seen to happen,

00:08:55.910 --> 00:08:59.290
especially in large enterprises,
is that each administrator for that

00:08:59.290 --> 00:09:01.200
server becomes their backup person.

00:09:01.200 --> 00:09:03.960
So you end up having a lot
of administrators backing

00:09:04.040 --> 00:09:05.200
up their own servers.

00:09:05.280 --> 00:09:08.200
So if those administrators
are heterogeneous in nature,

00:09:08.200 --> 00:09:10.130
you know, Apple, Linux, etc.

00:09:10.420 --> 00:09:12.790
Then what they end up doing
is they have to be specialized

00:09:12.790 --> 00:09:14.200
on their own specific server.

00:09:14.200 --> 00:09:17.310
Which kind of led up to
this idea of backup clients.

00:09:17.310 --> 00:09:19.200
And this is probably the most
popular and most well-known.

00:09:19.200 --> 00:09:21.870
So the idea here is that you
take your backup client and

00:09:21.900 --> 00:09:23.200
you have a backup server.

00:09:23.200 --> 00:09:27.200
The server talks to the client and says,
"Okay, today is Wednesday at noon.

00:09:27.200 --> 00:09:31.180
It's time to take all your data and put
it on the tape library." So it's a nice,

00:09:31.180 --> 00:09:34.700
very easy,
disk-to-tape type of backup scenario.

00:09:35.440 --> 00:09:38.610
This is great if you have a
ton of different operating

00:09:38.720 --> 00:09:40.440
systems in your network.

00:09:40.440 --> 00:09:44.250
All of my vendors here have client
for not only on our platform but also

00:09:44.250 --> 00:09:46.800
across all the different permutations.

00:09:46.800 --> 00:09:50.120
I've talked to some that have up to
60 different operating systems where

00:09:50.120 --> 00:09:53.430
they have client backups so that
they can actually get access to their

00:09:53.480 --> 00:09:55.400
clients and back it up to the server.

00:09:55.530 --> 00:09:58.240
So, generally you have good performance,
right?

00:09:58.400 --> 00:09:59.030
Depends.

00:09:59.120 --> 00:10:02.560
It depends on how fast your actual
network is that your backup server

00:10:02.770 --> 00:10:04.920
is connected to your backup client.

00:10:05.090 --> 00:10:06.870
That really defines it.

00:10:07.100 --> 00:10:09.000
And it's very easy to add new platforms,
right?

00:10:09.000 --> 00:10:11.000
Because all you've got to do
is you call up your vendor,

00:10:11.000 --> 00:10:12.800
you go, "Hey, I added XYZ box.

00:10:12.800 --> 00:10:16.220
I need to get a client for that."
They put it on there and it works

00:10:16.220 --> 00:10:18.000
within your existing infrastructure.

00:10:18.160 --> 00:10:20.000
That's why it's so popular.

00:10:20.000 --> 00:10:23.000
But there's some problems, right?

00:10:23.000 --> 00:10:25.360
For example,
if you have a large backup and

00:10:25.360 --> 00:10:28.910
restore or a large backup window
like we saw on that earlier slide

00:10:29.010 --> 00:10:32.710
for backing up just a terabyte,
it's a little hard to

00:10:32.750 --> 00:10:34.540
get it timed up right.

00:10:34.610 --> 00:10:36.770
Typically what you want to do is
this thing called multiplexing where

00:10:36.770 --> 00:10:39.870
you're writing to multiple tape
libraries at the same time because

00:10:39.990 --> 00:10:45.030
you're trying to backup many people
in a similar timeframe like overnight.

00:10:45.180 --> 00:10:47.830
and it really doesn't solve the
problem of these large backup windows.

00:10:47.840 --> 00:10:51.580
If you're backing up with
say five terabytes a night,

00:10:51.580 --> 00:10:55.530
it's kind of hard to do
that with just tape backup.

00:10:56.710 --> 00:11:00.440
Which led to the evolution of
what's called disk-to-disk-to-tape,

00:11:00.460 --> 00:11:01.880
which probably a lot of
you have heard about.

00:11:01.960 --> 00:11:03.780
Very straightforward concept.

00:11:03.950 --> 00:11:07.320
So what you do is you take your backup
client and you back it directly to disk.

00:11:07.320 --> 00:11:11.420
Very quick, very efficient,
using the maximum bandwidth there.

00:11:11.420 --> 00:11:13.960
And usually you do that
on a more periodic basis.

00:11:13.960 --> 00:11:18.870
And then as your data gets old,
you know like an ILM type technology,

00:11:18.870 --> 00:11:20.760
you're going, "Okay,
I no longer need to keep this

00:11:20.760 --> 00:11:23.400
on my disk because I've had
it backed up for a month.

00:11:23.400 --> 00:11:25.650
I'm probably not going
to look at that data.

00:11:25.650 --> 00:11:28.330
Why don't I just go ahead and
archive it?" And archiving

00:11:28.420 --> 00:11:30.280
is definitely very important.

00:11:30.440 --> 00:11:32.850
Because when you archive it,
that's when you usually take it off-site,

00:11:32.900 --> 00:11:33.320
right?

00:11:33.320 --> 00:11:36.370
So that way if there's a fire or
there's some other kind of physical

00:11:36.370 --> 00:11:39.640
danger thing that happens to your data,
you've got off-site storage

00:11:39.640 --> 00:11:40.650
and you can get access to it.

00:11:40.770 --> 00:11:43.180
So that's typically what you do.

00:11:43.180 --> 00:11:45.360
This disk-to-disk-to-tape.

00:11:45.900 --> 00:11:48.530
What's really,
really good about this is you get

00:11:48.610 --> 00:11:50.240
this centralized administration.

00:11:50.240 --> 00:11:51.210
Right?

00:11:51.290 --> 00:11:53.720
You don't have the problem where you
have a bunch of different administrators

00:11:53.800 --> 00:11:55.240
managing a bunch of different servers.

00:11:55.240 --> 00:11:58.680
You generally can reduce the
number of administrators you

00:11:58.680 --> 00:12:01.240
have focus exclusively on backup.

00:12:01.240 --> 00:12:04.070
It also gives you easy
access to this critical data.

00:12:04.280 --> 00:12:06.640
So for example,
if you're doing a backup every day

00:12:06.640 --> 00:12:08.610
or every hour or every half a day,
right,

00:12:08.760 --> 00:12:10.740
you can get access to the data that,
you know,

00:12:10.740 --> 00:12:13.450
you actually need to go on a file,
I need to go get that information,

00:12:13.450 --> 00:12:14.240
I gotta put it back on.

00:12:14.240 --> 00:12:17.240
You know,
you're able to do that pretty easily.

00:12:17.340 --> 00:12:21.220
It also takes advantage of the great
throughput you can get to your disk.

00:12:21.380 --> 00:12:22.240
Right?

00:12:22.240 --> 00:12:24.240
So now you're getting disk to disk,
you're taking advantage of it.

00:12:24.260 --> 00:12:27.970
You're not being slowed down
by doing your archival backup.

00:12:28.170 --> 00:12:30.760
and then you migrate the data, right,
as it gets less expensive media.

00:12:30.760 --> 00:12:33.820
So instead of sending it on your drive,
you can actually put

00:12:33.820 --> 00:12:35.100
it up onto your tape.

00:12:35.110 --> 00:12:36.720
There's some challenges
obviously with that,

00:12:36.720 --> 00:12:37.100
right?

00:12:37.100 --> 00:12:40.180
So the more moving parts you have,
the more complex it becomes,

00:12:40.180 --> 00:12:42.100
which makes it a little bit
more of an expensive solution.

00:12:42.100 --> 00:12:44.620
And because of all those things,
it tends to create a

00:12:44.630 --> 00:12:47.100
little bit more overhead,
although you have fewer administrators,

00:12:47.100 --> 00:12:50.100
you have a little bit more
overhead in managing that.

00:12:50.100 --> 00:12:52.390
So that kind of led to the
next thing that we see a lot

00:12:52.500 --> 00:12:54.100
of is what's called land free.

00:12:54.100 --> 00:12:56.100
And this is important.

00:12:56.100 --> 00:13:00.040
The problem you'll see with disk to
disk to tape is that you're doing this

00:13:00.060 --> 00:13:02.100
transfer of data over your network.

00:13:02.100 --> 00:13:04.090
Well, you can create these conflicts,
right?

00:13:04.220 --> 00:13:08.220
So if it's the same network,
you're doing normal network activity,

00:13:08.360 --> 00:13:11.180
then you're also throwing all
your data across it for backup,

00:13:11.280 --> 00:13:13.100
you kind of create these problems.

00:13:13.200 --> 00:13:15.100
That's why you see things like land free.

00:13:15.220 --> 00:13:18.330
So in this example,
using something like an XSAN solution,

00:13:18.360 --> 00:13:24.100
you see that we map the drive
on your XSERV RAID to an XSERV.

00:13:24.100 --> 00:13:25.100
All right,
so it's now mapped as a regular drive.

00:13:25.100 --> 00:13:26.100
Your clients hit the XSAN.

00:13:26.100 --> 00:13:29.100
You let that server access it
just like they normally would.

00:13:29.100 --> 00:13:32.100
Then when it does a backup,
it goes through the network.

00:13:32.100 --> 00:13:34.100
So you never touch--that's
why it's called land free.

00:13:34.100 --> 00:13:36.050
You never push the data through the LAN.

00:13:36.170 --> 00:13:39.830
You're always pushing it
directly from the server within

00:13:39.920 --> 00:13:41.950
your fiber channel fabric.

00:13:42.190 --> 00:13:42.740
Great.

00:13:42.890 --> 00:13:45.440
Very, very fast and the most efficient.

00:13:45.510 --> 00:13:45.620
Right?

00:13:45.670 --> 00:13:47.730
Because you're able to take
advantage of this really nice,

00:13:47.740 --> 00:13:51.240
dedicated,
high bandwidth communication to get

00:13:51.250 --> 00:13:53.100
your data to the appropriate area.

00:13:53.100 --> 00:13:56.130
You get the advantages of central
administration and it's a great

00:13:56.130 --> 00:13:58.100
use of your backup resources,
right?

00:13:58.100 --> 00:14:02.100
So now you're using your fastest network
for your data and the most efficient.

00:14:02.100 --> 00:14:04.340
Very similar to the other one,
it's a little bit more complex,

00:14:04.340 --> 00:14:07.100
a little bit more expensive and more
overhead in your administration.

00:14:07.140 --> 00:14:08.100
But it's a trade-off, right?

00:14:08.100 --> 00:14:11.470
Because you get that better
performance for your data.

00:14:12.060 --> 00:14:16.240
So as you see here,
we have a whole slew of backup vendors.

00:14:16.250 --> 00:14:19.030
And some of the obviously
recognizable ones like Legato,

00:14:19.040 --> 00:14:23.070
Veritas,
but even great people like BakBonne, CA,

00:14:23.210 --> 00:14:29.020
Quintex, Tollis Group, Danz, Atempo,
Archerware, Avail,

00:14:29.030 --> 00:14:31.280
all the different vendors
that we've worked with.

00:14:31.360 --> 00:14:34.690
So what I do here in this next slide is
kind of give you an idea of the different

00:14:34.740 --> 00:14:36.670
types of solutions that are available.

00:14:36.810 --> 00:14:40.640
So for example, everybody's got clients,
right?

00:14:40.650 --> 00:14:44.300
And we have a lot of vendors
who are now- they see the light.

00:14:44.640 --> 00:14:45.070
They get it.

00:14:45.150 --> 00:14:46.540
They go, "Okay, great.

00:14:46.570 --> 00:14:48.000
Apple has a lot of storage.

00:14:48.090 --> 00:14:51.620
We need to have more server
solutions available on the market."

00:14:51.690 --> 00:14:54.810
So that's why you see a whole
slew of guys over here doing betas.

00:14:54.950 --> 00:14:57.560
But today, if you needed to buy,
we basically have three vendors that have

00:14:57.560 --> 00:14:59.900
a production solution available today.

00:14:59.920 --> 00:15:02.150
Danz, Tollis, and SGO.

00:15:02.300 --> 00:15:04.400
So I wanted to kind of give
you an overview of here's the

00:15:04.570 --> 00:15:06.090
different types of architectures.

00:15:06.270 --> 00:15:10.170
Here's why we got to be able to back
up our data and why it's critical.

00:15:11.060 --> 00:15:15.180
So now what I'd like to do is introduce a
few of the guest speakers that I brought.

00:15:16.060 --> 00:15:18.190
When we looked at the market,
we kind of broke it down

00:15:18.370 --> 00:15:19.900
into three basic groups.

00:15:19.930 --> 00:15:22.400
We got one end where your
cost is the lowest and your

00:15:22.480 --> 00:15:24.200
complexity is the easiest.

00:15:24.200 --> 00:15:25.460
It's an individual workstation, right?

00:15:25.530 --> 00:15:28.320
This is your laptop,
this is your desktop.

00:15:28.330 --> 00:15:30.760
You know, the need to backup your
own individual one.

00:15:30.830 --> 00:15:33.940
And then as it becomes a little bit
more expensive and more complexity,

00:15:33.950 --> 00:15:35.320
you access the small work group.

00:15:35.320 --> 00:15:38.760
These are typically departmental
level or small group levels.

00:15:38.760 --> 00:15:41.860
It's like what we do
in my own organization.

00:15:41.860 --> 00:15:42.930
I have my own little server.

00:15:42.940 --> 00:15:44.740
It backs up about five or six of us.

00:15:44.740 --> 00:15:46.960
And, you know,
it's that work group server solution.

00:15:47.020 --> 00:15:49.840
But then you need this capability at
the really high end for corporate.

00:15:49.940 --> 00:15:53.540
If you're backing up terabytes of data
and you've got much information across

00:15:53.540 --> 00:15:56.730
different areas all over the network,
that's when you need it.

00:15:56.840 --> 00:16:01.260
Which leads me to my first person
I'd like to bring up from Dantz.

00:16:01.480 --> 00:16:01.970
Retrospect.

00:16:02.160 --> 00:16:04.370
And I'd like to introduce...

00:16:04.930 --> 00:16:05.800
Pat Lee.

00:16:05.800 --> 00:16:06.450
Hi Pat, welcome.

00:16:06.640 --> 00:16:06.880
Thanks.

00:16:06.970 --> 00:16:07.670
Thanks very much, Chris.

00:16:07.690 --> 00:16:08.150
Appreciate it.

00:16:08.150 --> 00:16:11.190
Thank you.

00:16:12.000 --> 00:16:13.740
So Dantz was founded in 1984.

00:16:13.740 --> 00:16:16.020
We started out in the Macintosh
and we shipped our first

00:16:16.050 --> 00:16:18.900
Macintosh backup product in 1985.

00:16:18.990 --> 00:16:21.370
It was actually for an iOmega
product called the Bernoulli Box,

00:16:21.400 --> 00:16:24.660
if anybody can remember back that far.

00:16:24.740 --> 00:16:26.980
We've been in the backup and
restore industry for 20 years.

00:16:27.000 --> 00:16:30.640
We have two key US patented technologies,
one of which I will talk

00:16:30.640 --> 00:16:32.660
about later and more in depth.

00:16:32.780 --> 00:16:35.200
And we've been working closely
with Apple for many years.

00:16:35.310 --> 00:16:38.640
We've initiated a number of
server backup programs with them

00:16:38.640 --> 00:16:40.250
and a number of Apple Firsts.

00:16:40.370 --> 00:16:44.200
Over 3 million computers worldwide
have purchased licenses of Retrospect

00:16:44.200 --> 00:16:46.630
protecting their data today.

00:16:47.040 --> 00:16:49.020
and we partner with many
leading hardware vendors.

00:16:49.020 --> 00:16:52.000
For example,
I mentioned iOmega earlier back in 1985.

00:16:52.000 --> 00:16:54.840
We're now partnering with them today
as they announced their RebDrive,

00:16:54.850 --> 00:16:56.390
their new low-end tape replacement.

00:16:56.390 --> 00:16:58.100
One of our products is bundled with it.

00:16:58.190 --> 00:17:00.830
And we are also bundled, for example,
with the new Exabyte

00:17:00.830 --> 00:17:03.600
VXA2 FireWire library,
which if you haven't seen yet,

00:17:03.710 --> 00:17:06.290
you've wanted an easy connect solution,
go take a look at it.

00:17:06.440 --> 00:17:10.600
FireWire Interconnect,
perfect solution for your XServe today.

00:17:10.750 --> 00:17:13.380
And we have a product line that
ranges from small home offices of

00:17:13.380 --> 00:17:17.490
a couple users to large departments
of a couple hundred users.

00:17:18.770 --> 00:17:22.000
The one thing we focused on is making
sure this is an easy to use product.

00:17:22.100 --> 00:17:25.040
Most people aren't backup administrators
that are dealing with this.

00:17:25.180 --> 00:17:29.100
They want something they can install and
get up and running within a few minutes.

00:17:29.240 --> 00:17:31.890
Most customers can install Retrospect,
start their first backup,

00:17:31.920 --> 00:17:34.640
and start protecting their data
within five minutes of install.

00:17:34.760 --> 00:17:37.510
We think that's very
important in this market.

00:17:37.830 --> 00:17:40.380
But on top of being easy to use,
it's also flexible.

00:17:40.380 --> 00:17:42.640
We support a wide variety
of backup mediums.

00:17:42.640 --> 00:17:45.430
We support tape, which has been the most
popular backup media to date

00:17:45.630 --> 00:17:47.400
for small and medium business.

00:17:47.550 --> 00:17:50.480
And we support it whether
it's connected via Firewire,

00:17:50.560 --> 00:17:52.700
SCSI, Fiber Channel, you name it.

00:17:52.700 --> 00:17:55.470
We also support hard disk backup,
which is very key for either

00:17:55.470 --> 00:17:57.290
low-end or even high-end customers.

00:17:57.380 --> 00:17:59.500
And for customers who need
off-site backup needs,

00:17:59.500 --> 00:18:00.670
we also offer FTP backup.

00:18:00.700 --> 00:18:03.090
We have backup clients
that support Macintoshes,

00:18:03.200 --> 00:18:06.690
whether they start in System 7 Max,
running PowerPCs still all the way up

00:18:06.690 --> 00:18:12.380
through the latest Panther clients,
Linux clients, or Windows clients.

00:18:12.780 --> 00:18:15.560
One of the things that we
focus on is intelligence.

00:18:15.560 --> 00:18:16.840
We understand storage.

00:18:16.930 --> 00:18:19.700
You shouldn't have to understand
all the complications.

00:18:19.840 --> 00:18:21.700
We should handle this for you.

00:18:21.840 --> 00:18:24.680
One of the things we have is called
progressive incremental backup.

00:18:24.680 --> 00:18:26.700
And what that does is
it allows you to say,

00:18:26.700 --> 00:18:30.450
"I just want you to backup this set
of computers." And I'm going to say,

00:18:30.450 --> 00:18:33.550
"Do this progressive backup."
The first time Retrospect backs up,

00:18:33.620 --> 00:18:35.700
it automatically backs up everything.

00:18:35.700 --> 00:18:38.690
The next time it only backs
up the new or changed files,

00:18:38.770 --> 00:18:41.700
sends the last backup to
a particular set of media.

00:18:41.700 --> 00:18:44.800
And the reason a particular set of
media is important is that you want to

00:18:44.800 --> 00:18:46.700
have more than one set of backup media.

00:18:46.700 --> 00:18:50.040
If you're relying on one set of backup
media to protect your business and it's

00:18:50.040 --> 00:18:52.670
in the building and something happens,
you don't have a backup.

00:18:52.700 --> 00:18:54.550
If it goes away with
your building going away,

00:18:54.550 --> 00:18:55.700
you don't have a choice.

00:18:55.700 --> 00:18:58.610
So you need to have off-site
and on-site backup sets.

00:18:58.700 --> 00:19:02.690
By actually keeping track of your
on-site and off-site backups differently,

00:19:02.730 --> 00:19:07.700
we can give you complete protection for
both sets that's up-to-date and current,

00:19:07.780 --> 00:19:11.570
so you can restore from either set
without having to worry about it.

00:19:11.910 --> 00:19:14.050
The other thing that's intelligent
about the approach of progressive

00:19:14.050 --> 00:19:17.800
incremental backup is that we
have single-instance storage.

00:19:18.270 --> 00:19:19.800
Everybody in this room,
I look around here,

00:19:19.800 --> 00:19:22.060
I see a lot of bright Apple logos
facing me in the eye from

00:19:22.060 --> 00:19:23.710
your Powerbooks and iBooks.

00:19:23.850 --> 00:19:26.790
That means there's a lot of people out
there whose data is not on a server.

00:19:26.830 --> 00:19:28.800
They need to protect it.

00:19:28.850 --> 00:19:31.750
And the important thing about that is
there are a lot of common files in use.

00:19:31.840 --> 00:19:34.800
What happens if we all have
Microsoft Office installed?

00:19:34.800 --> 00:19:37.770
Do I want to backup ten copies of
Microsoft Office across the network?

00:19:37.800 --> 00:19:41.250
No, I want to backup one copy and
the other nine I should keep

00:19:41.360 --> 00:19:42.790
track of so I can restore them.

00:19:42.800 --> 00:19:43.730
Retrospect does that.

00:19:43.850 --> 00:19:47.800
We only need to backup one copy of every
unique file in a particular backup set.

00:19:47.800 --> 00:19:52.800
It saves you space and time and it makes
it more effective for your backup media.

00:19:54.060 --> 00:19:55.000
Security.

00:19:55.000 --> 00:19:56.920
Again, multiple baseline backups are key.

00:19:57.040 --> 00:19:58.620
If you don't have
multiple baseline backups,

00:19:58.620 --> 00:20:01.630
that means if you're doing
incrementals against one full backup

00:20:01.660 --> 00:20:05.010
and you lose that full backup,
your incrementals are useless

00:20:05.010 --> 00:20:06.370
against doing a complete restore.

00:20:06.380 --> 00:20:09.450
Multiple baselines are key in
protecting your entire network.

00:20:09.500 --> 00:20:12.500
And complete verification by default.

00:20:12.500 --> 00:20:16.320
We do byte-for-byte verification of
your data because if there's something

00:20:16.320 --> 00:20:21.210
wrong between writing the data to disk,
tape, optical, and we go back and don't

00:20:21.210 --> 00:20:22.880
read it byte-for-byte,
there's no guarantee it

00:20:22.880 --> 00:20:23.980
was written 100% correctly.

00:20:24.000 --> 00:20:27.660
Personally, I was backing up to disk
recently and I had a bad firewall

00:20:27.660 --> 00:20:29.360
cable on my personal backups.

00:20:29.360 --> 00:20:32.480
The verification pass caught the
problem with the bad cable and showed

00:20:32.480 --> 00:20:34.000
me the files that were corrupt.

00:20:34.120 --> 00:20:37.450
Verification is key to
your backup strategies.

00:20:38.000 --> 00:22:30.600
[Transcript missing]

00:22:31.230 --> 00:22:33.830
While we're talking about backup today,
it doesn't matter about backup.

00:22:33.980 --> 00:22:35.230
Chris's story told you a lot.

00:22:35.330 --> 00:22:37.240
You need to be able to restore the data.

00:22:37.350 --> 00:22:40.310
And Retrospect was designed
to restore your data.

00:22:40.890 --> 00:22:43.990
The most common restore we see
from years of doing this is that

00:22:44.140 --> 00:22:45.710
people need to restore a few files.

00:22:45.710 --> 00:22:46.790
Because that's the common case.

00:22:46.900 --> 00:22:48.030
Oops, I made a mistake.

00:22:48.030 --> 00:22:49.640
I overwrote my budget Excel file.

00:22:49.640 --> 00:22:50.790
I've committed the save.

00:22:50.790 --> 00:22:52.050
How do I get this data back?

00:22:52.100 --> 00:22:52.970
It's not a problem.

00:22:53.100 --> 00:22:56.100
Retrospect allows you to search
for a wide variety of criteria.

00:22:56.100 --> 00:23:00.320
I can find all Excel files created
by Chris in the last two weeks,

00:23:00.320 --> 00:23:02.990
and it will go and just find
those in all my available backup

00:23:02.990 --> 00:23:04.070
media easily in one place.

00:23:04.100 --> 00:23:08.070
It's very key to help you narrow down
your search for your important files.

00:23:08.070 --> 00:23:11.080
But it's when disaster strikes that
you care the most about restore.

00:23:11.080 --> 00:23:14.090
Nobody ever wants to think about it,
but it happens.

00:23:14.100 --> 00:23:18.360
Retrospect has what we create snapshots,
which are basically an image

00:23:18.420 --> 00:23:22.100
of what the computer is like
every time it's backed up.

00:23:22.100 --> 00:23:25.530
So every day, assuming with Retrospect's
progressive incremental backups,

00:23:25.530 --> 00:23:28.520
the first day you do a full backup,
and then we do incremental

00:23:28.520 --> 00:23:30.100
backups every day since then,
we still keep track of all the

00:23:30.100 --> 00:23:30.100
files that have been moved,
renamed, deleted,

00:23:30.100 --> 00:23:30.100
and then we do a backup every day.

00:23:30.100 --> 00:23:30.100
We still keep track of all the
files that have been moved,

00:23:30.100 --> 00:23:30.100
renamed, deleted, and then we do a backup
every day since then.

00:23:30.100 --> 00:23:31.890
We still keep track of all the
files that have been moved,

00:23:31.890 --> 00:23:34.100
renamed, deleted, and then we do a backup
every day since then.

00:23:34.100 --> 00:23:37.000
it on the computer at every backup stage.

00:23:37.000 --> 00:23:39.820
So if I need to restore my
computer after multiple incremental

00:23:39.820 --> 00:23:43.080
backups to three days ago because
I either deleted some system,

00:23:43.080 --> 00:23:45.210
I got a virus,
or I had an issue like that,

00:23:45.210 --> 00:23:48.750
you tell Retrospect restore to
that point in time three days ago,

00:23:48.750 --> 00:23:51.930
and it will restore that computer
to exactly that point in time

00:23:52.200 --> 00:23:53.430
at the time of the backup.

00:23:53.550 --> 00:23:56.130
So if I moved, renamed, or deleted files,
they're not going to

00:23:56.130 --> 00:23:57.390
come back in my restore.

00:23:57.390 --> 00:24:00.470
If you've been doing restores
from other traditional products,

00:24:00.480 --> 00:24:03.730
which do fulls and incrementals that
don't track the state of your computer,

00:24:03.750 --> 00:24:05.550
when you do the restore
to that point in time,

00:24:05.550 --> 00:24:08.040
you're going to get back files you moved,
renamed, or deleted.

00:24:08.190 --> 00:24:08.880
You don't want that.

00:24:08.960 --> 00:24:13.200
You want your computer to be back
to the exact point in time it was.

00:24:13.200 --> 00:24:15.890
And to help you aid in
that worst-case scenario,

00:24:15.930 --> 00:24:20.140
Retrospect includes a bootable disaster
recovery CD that you can boot off the CD,

00:24:20.140 --> 00:24:23.210
do the restore,
and make your life easier without

00:24:23.210 --> 00:24:25.310
having to first reinstall the system.

00:24:25.340 --> 00:24:27.210
So thank you very much for your time.

00:24:27.240 --> 00:24:29.520
Tomorrow we'll be in the Enterprise Lab,
IT Lab.

00:24:29.520 --> 00:24:31.380
If you have any questions from 9 to 2,
if I remember correctly.

00:24:31.380 --> 00:24:32.070
Is that correct, Chris?

00:24:32.120 --> 00:24:33.240
Yep, in the morning.

00:24:33.240 --> 00:24:35.440
And thank you very much.

00:24:40.810 --> 00:24:42.160
Thanks Pat.

00:24:42.200 --> 00:24:50.480
So now what I'd like to do is introduce
our next featured speaker who from

00:24:50.480 --> 00:24:54.800
our- the TOLUS group that they
target their solutions called BRU.

00:24:54.800 --> 00:24:56.860
It stands for Backup Restore Utility.

00:24:56.860 --> 00:25:00.040
I thought that was a very makes
sense kind of name for your product.

00:25:00.040 --> 00:25:02.660
And you can see that they're
targeted pretty much in the middle.

00:25:02.660 --> 00:25:05.500
Although almost all of my
vendors here can scale from

00:25:05.500 --> 00:25:06.970
the simple to the high end.

00:25:07.030 --> 00:25:10.780
I was trying to get them to look at okay
what's their- what they're known for.

00:25:10.800 --> 00:25:13.870
And so without further ado, Tim Jones.

00:25:13.980 --> 00:25:14.730
Hi Tim, welcome.

00:25:14.800 --> 00:25:16.510
Thank you Chris.

00:25:24.870 --> 00:25:26.060
Did I break it?

00:25:26.070 --> 00:25:27.710
Okay.

00:25:28.090 --> 00:25:31.400
Brew is- Yeah, we've got a good backup,
so.

00:25:31.530 --> 00:25:34.610
Brew has been around for going
on close to 19 years now.

00:25:34.620 --> 00:25:39.300
We have been a strong contender and a
strong player in the Unix market space

00:25:39.410 --> 00:25:40.920
because that's where we came from.

00:25:41.080 --> 00:25:44.490
We grew out of
Motorola technology in the middle,

00:25:44.490 --> 00:25:48.030
early 80s,
and we've worked our way onto just about

00:25:48.100 --> 00:25:49.960
every Unix platform that you can imagine.

00:25:49.960 --> 00:25:52.160
And if any of you guys have got
a Unix platform that I don't

00:25:52.200 --> 00:25:54.200
currently have a copy for,
if you'll give me an

00:25:54.200 --> 00:25:56.660
SSH login in 30 minutes,
we're there.

00:25:56.660 --> 00:26:04.310
We picked up OSX and started supporting
it in 2001 based on some requirements

00:26:04.310 --> 00:26:06.840
of our existing customer base.

00:26:06.870 --> 00:26:11.040
We have Solaris users and
AIX users and HPUX users and

00:26:11.100 --> 00:26:15.430
Cray users that were bringing
OSX boxes into their environments.

00:26:15.670 --> 00:26:18.380
And they said, "Hey,
why can't we use Brew to back

00:26:18.540 --> 00:26:23.160
those up too?" So we got the calls
and we started taking care of it.

00:26:23.210 --> 00:26:24.820
Our team does one thing.

00:26:24.850 --> 00:26:25.940
We do backup and restore.

00:26:25.940 --> 00:26:29.300
We don't do database reporting.

00:26:29.300 --> 00:26:30.370
We don't do games.

00:26:30.440 --> 00:26:32.620
We don't do word processors.

00:26:32.660 --> 00:26:36.680
We partner with every major tape and
library vendor running out there.

00:26:36.680 --> 00:26:37.740
Some of them you know.

00:26:37.740 --> 00:26:40.420
Some of them you don't know.

00:26:40.620 --> 00:26:43.460
There are just literally
millions of existing licenses.

00:26:43.500 --> 00:26:47.220
How many people have
ever used an SGI box?

00:26:47.240 --> 00:26:49.630
Well, if you've done a system backup,
you've used Brew.

00:26:49.640 --> 00:26:52.090
How many people have ever used
Motorola's back in the old days

00:26:52.210 --> 00:26:52.560
when they were using the 8800?

00:26:52.560 --> 00:26:55.490
Well, you were using Brew.

00:26:55.500 --> 00:26:59.530
Some of the older Linux installs
from folks like Red Hat and

00:26:59.530 --> 00:27:05.330
those guys included Brew in
the actual operating system.

00:27:05.460 --> 00:27:09.310
And again, like I said,
all we do is backup.

00:27:10.380 --> 00:27:13.280
One of the most important
elements that Chris hit on is

00:27:13.280 --> 00:27:15.610
reducing that backup window.

00:27:15.970 --> 00:27:20.090
How many of you have four
days to perform one backup?

00:27:21.520 --> 00:27:24.640
We got one hand back there.

00:27:24.640 --> 00:27:27.740
I didn't think I was going to see many
hands there simply because we don't.

00:27:27.820 --> 00:27:31.170
We need to get the data into its
backup environment as rapidly as

00:27:31.300 --> 00:27:36.220
possible and be that staged on disk
as Chris mentioned or onto tape,

00:27:36.260 --> 00:27:39.500
whether it be a standalone
or a library environment.

00:27:39.690 --> 00:27:45.170
We need to reduce the amount of
time that that operation requires.

00:27:45.880 --> 00:27:50.270
The thing that Brew brings to the table
here is we provide very high throughput

00:27:50.320 --> 00:27:52.380
rates and very low CPU overhead.

00:27:52.380 --> 00:27:56.890
Primarily, a good example,
we have users that are constantly using

00:27:56.890 --> 00:27:59.960
Brew in multi-drive scenarios where
they're backing up to and streaming

00:27:59.960 --> 00:28:01.860
data to multiple drives simultaneously.

00:28:02.300 --> 00:28:06.910
And on a 1.33 GHz XSERV,
our numbers look like load factors

00:28:06.950 --> 00:28:12.600
of about 0.4 with CPU utilization
of about 22%. What this means is

00:28:12.660 --> 00:28:17.130
that while that backup is going on,
you're actually able to

00:28:17.130 --> 00:28:19.270
continue doing useful work.

00:28:21.100 --> 00:28:25.250
We do our verification quite
differently from most others.

00:28:25.450 --> 00:28:28.780
Every 2K of data that we
pull off of your file system,

00:28:28.780 --> 00:28:31.100
we apply a 32-bit checksum to.

00:28:31.310 --> 00:28:34.250
The result is,
when it comes time to do a verification

00:28:34.250 --> 00:28:38.310
of the data that's on the tape,
we only need brew and the tape.

00:28:38.380 --> 00:28:40.600
We no longer need your file system.

00:28:40.740 --> 00:28:44.710
So for those of you that are doing
live backup with live verification,

00:28:44.830 --> 00:28:47.330
we just sliced your
backup window in half.

00:28:48.180 --> 00:28:51.140
We incorporated disk-to-disk
capabilities directly into our

00:28:51.140 --> 00:28:52.720
current Bruce Server product.

00:28:52.770 --> 00:28:54.940
Some of you have come by,
I see some faces out there that

00:28:54.940 --> 00:28:57.100
I recognize when I cover the light.

00:28:57.220 --> 00:29:00.510
And one of the things that we've
done is we've added this technology

00:29:00.550 --> 00:29:02.390
right into the product native.

00:29:02.420 --> 00:29:04.500
You don't have to buy it as an add-on.

00:29:04.580 --> 00:29:08.220
Because we realize, again,
we've got to reduce that backup

00:29:08.220 --> 00:29:12.410
window to help you be successful
in your administration tasks.

00:29:12.940 --> 00:29:15.190
By writing to disk, two things happen.

00:29:15.280 --> 00:29:17.540
First of all, as Chris said,
you're getting disk-to-disk speed.

00:29:17.540 --> 00:29:19.900
Your only limiting factor is
your network infrastructure.

00:29:19.900 --> 00:29:24.900
But, in addition,
if you've got lots of clients out there,

00:29:24.900 --> 00:29:26.900
if you're backing those
clients up to tape,

00:29:27.070 --> 00:29:28.870
those clients are having to take turns.

00:29:28.900 --> 00:29:30.900
You're backing up one client,
it's finishing.

00:29:30.900 --> 00:29:33.900
You're backing up the next client,
it finishes, and so on.

00:29:33.900 --> 00:29:36.930
With a disk stage environment,
all of your clients can

00:29:36.930 --> 00:29:40.890
backup asynchronously,
limited only by your network bandwidth.

00:29:40.900 --> 00:29:45.610
If you're dealing with systems
where you've got 100 or 200 megs of

00:29:45.620 --> 00:29:49.400
data that changes on a daily basis,
an average incremental backup can

00:29:49.540 --> 00:29:50.900
take as little as 10 or 15 seconds.

00:29:50.900 --> 00:29:53.900
So when you- when dealing with staging.

00:29:53.900 --> 00:29:54.900
So when you look at it
from that perspective,

00:29:54.900 --> 00:29:59.900
all of a sudden,
now this work group stage backup window

00:29:59.900 --> 00:30:03.840
has just reduced itself dramatically.

00:30:04.120 --> 00:30:08.240
Finally, as Chris mentioned,
the next thing to do with staged

00:30:08.380 --> 00:30:12.790
data is to put it onto media that can
then be stored either safely on-site

00:30:12.890 --> 00:30:15.020
or off-site as Pat was mentioning.

00:30:15.020 --> 00:30:18.460
The key there is, again,
how do I do this without interfering

00:30:18.460 --> 00:30:20.280
with my daily work schedule?

00:30:20.280 --> 00:30:24.040
Well, because bruise upstaging occurs
between simply the server on

00:30:24.040 --> 00:30:27.650
which the server application is
running and your tape library,

00:30:27.650 --> 00:30:33.450
again, the rest of your network backup
environment is not involved at all.

00:30:34.110 --> 00:30:37.590
So you're not- you can
do this at your will.

00:30:37.600 --> 00:30:38.520
It doesn't matter.

00:30:38.520 --> 00:30:41.350
And again,
because of bruise low fingerprint

00:30:41.350 --> 00:30:45.750
and- or footprint and low overhead,
even the server that we're running

00:30:45.750 --> 00:30:49.600
on does not recognize a serious
impact with that operation.

00:30:49.600 --> 00:30:53.530
Finally, on the upstage,
when we upstage that data from

00:30:53.800 --> 00:30:58.510
your stage disk to the tape drive,
we actually replicate the data

00:30:58.510 --> 00:31:03.070
into a tape backup as if you
wrote it originally to the tape.

00:31:03.950 --> 00:31:06.350
So, in other words, when it's time to
restore a client's data,

00:31:06.350 --> 00:31:07.310
it's a one-step restore.

00:31:07.570 --> 00:31:10.220
You're taking the data from the
tape and returning it to the client.

00:31:10.360 --> 00:31:14.400
There's no need to restore the
upstage environment to the stage

00:31:14.420 --> 00:31:16.990
disk and then restore to the client.

00:31:18.640 --> 00:31:21.590
We are about 92% POSIX.

00:31:21.600 --> 00:31:27.490
Our core engine is just
a whopping 290K on OSX.

00:31:28.890 --> 00:31:35.450
The 8% that's there that's not
POSIX applies to supporting OSX Tape I/O,

00:31:35.450 --> 00:31:38.360
OSX Disk Record Utility,
which will be coming

00:31:38.360 --> 00:31:39.800
in an upcoming release.

00:31:39.800 --> 00:31:45.750
The utilization of special features
for some of the special OS's such as

00:31:45.750 --> 00:31:49.260
PTX and IRIX and these things where
you have to take into account the way

00:31:49.300 --> 00:31:51.800
you allocate memory for certain things.

00:31:51.800 --> 00:31:55.310
These are the little pieces that
are specific to the various OS's,

00:31:55.360 --> 00:31:57.800
but that makes up a
little 8% of what we do.

00:31:57.800 --> 00:31:59.300
This means,
this is why I was not joking when I said

00:31:59.370 --> 00:32:04.760
if you can give me a login in 30 minutes,
if I'm not on your platform, we will be.

00:32:06.200 --> 00:32:08.480
We provide unique mechanisms
to proof the backup.

00:32:08.560 --> 00:32:10.750
As I said,
every 2K of data that comes off of

00:32:10.750 --> 00:32:13.340
that file system is checksummed when
it leaves the file system because

00:32:13.340 --> 00:32:16.240
between the time that it leaves the
file system and the time that it hits

00:32:16.410 --> 00:32:19.430
the input buffers on your tape drive,
there are a number of places

00:32:19.470 --> 00:32:21.070
where corruption can occur.

00:32:21.450 --> 00:32:25.580
Because we check summit that early,
we can tell you very rapidly whether

00:32:25.580 --> 00:32:28.060
or not you've got a good backup.

00:32:28.060 --> 00:32:32.500
And we can tell you down to 2K
within an existing file on tape

00:32:32.500 --> 00:32:34.990
whether that data is any good.

00:32:35.690 --> 00:32:38.560
The key here is,
in the event that we run into a problem,

00:32:38.560 --> 00:32:39.980
tape media flakes.

00:32:39.980 --> 00:32:43.270
How many of you have
never had a tape problem?

00:32:43.690 --> 00:32:44.990
and many others.

00:32:45.250 --> 00:32:47.280
Thanks for joining us.

00:32:47.290 --> 00:32:49.480
We'll see you next time.

00:32:49.500 --> 00:32:50.600
Bye-bye.

00:33:13.600 --> 00:33:16.700
If you run into a situation,
if any of you have ever used TAR to do a

00:33:16.700 --> 00:33:19.700
backup and tried to do a store and been
greeted with something that said TAR,

00:33:19.700 --> 00:33:23.600
Tape I/O Read Error, well,
you're not going to see that with Brew.

00:33:23.600 --> 00:33:26.600
Well,
unless the tape really is absolutely

00:33:26.810 --> 00:33:28.910
bad and it can't be accessed.

00:33:29.850 --> 00:33:32.470
Finally, cross-platform,
I mentioned all the

00:33:32.480 --> 00:33:34.000
platforms that we're on.

00:33:34.000 --> 00:33:38.520
The one other thing that's important
about that is because we utilize the same

00:33:38.660 --> 00:33:43.670
tape I/O layer for all of the platforms,
you can take tapes that

00:33:43.800 --> 00:33:47.200
you backed up on SGI,
you can restore them on OSX,

00:33:47.310 --> 00:33:49.510
or you can send them to
somebody with a SCO box,

00:33:49.640 --> 00:33:52.320
or you can send them over to
a Linux platform or a Solaris

00:33:52.320 --> 00:33:55.240
platform or any other platform,
and we will allow you to

00:33:55.240 --> 00:33:56.790
restore that data intact.

00:33:56.800 --> 00:33:59.690
We take account things
like Big Indian versus

00:33:59.690 --> 00:34:01.800
Little Indian byte swapping.

00:34:01.800 --> 00:34:04.320
If you've ever used CPIO because
you needed to move data

00:34:04.320 --> 00:34:06.800
from a Big Indian system
to a Little Indian system,

00:34:06.800 --> 00:34:08.710
you know you have to add special flags.

00:34:08.800 --> 00:34:11.930
Brew recognizes those changes and
takes care of all that for you,

00:34:12.010 --> 00:34:14.800
so when you get into that area,
we've taken care of it.

00:34:14.800 --> 00:34:20.780
We are highly extensible- hey,
that should have been highly, Chris.

00:34:20.920 --> 00:34:24.760
We are highly extensible via scripts
and compiled- or compiled wrappers.

00:34:24.800 --> 00:34:26.800
Brew, as I said, is a very,
very good tool.

00:34:26.800 --> 00:34:28.690
It's 290K.

00:34:28.800 --> 00:34:32.790
You're able to take that and combine it
with whatever language you want to use:

00:34:32.790 --> 00:34:39.800
Cocoa, Carbon, Java, TCL, TK,
Python with TK inner, real basic.

00:34:39.800 --> 00:34:41.800
It's your choice.

00:34:41.850 --> 00:34:44.220
You can put your own wrapper
around Brew and make it do

00:34:44.300 --> 00:34:48.660
things that you want it to do,
but you don't have to worry about how

00:34:48.840 --> 00:34:53.800
we get the data to the tape or back from
the tape or to the stage environment.

00:34:53.950 --> 00:34:55.800
As developers, if you're interested,
we can talk about that.

00:34:55.800 --> 00:35:00.790
We actually provide that 290K
kernel as an OEM product,

00:35:00.800 --> 00:35:05.800
and we can help you build
back up into your application.

00:35:07.150 --> 00:35:11.440
Brew understands and supports
all Unix and Mac OS X elements.

00:35:11.440 --> 00:35:13.950
Now,
how many of you saw the Tiger keynote?

00:35:13.950 --> 00:35:17.000
How many of you know what an ACL is?

00:35:17.000 --> 00:35:18.290
Well, guess what?

00:35:18.650 --> 00:35:23.020
Brew 17.0, which is the core of our
current application platform,

00:35:23.020 --> 00:35:24.990
does not support Tiger's ACLs.

00:35:25.360 --> 00:35:27.800
However, in about two weeks, it will.

00:35:29.990 --> 00:35:32.840
We are- Thank you.

00:35:32.840 --> 00:35:38.600
We are compatible with OS X-
OS X 1.5 through the latest stuff.

00:35:39.100 --> 00:35:44.300
Now, I did a naughty and I installed
Tiger on my laptop and we'll see,

00:35:44.450 --> 00:35:47.640
but I have very good feeling
that we are not going to be

00:35:47.640 --> 00:35:49.610
facing any problems there.

00:35:49.780 --> 00:35:53.660
We leverage the Unix layer of OSX to
provide that small footprint and

00:35:53.660 --> 00:35:56.540
high performance with low overhead.

00:35:57.190 --> 00:36:02.370
We utilize the SCSI standards,
the standards for tape, SSC,

00:36:02.450 --> 00:36:06.360
and for changers, SMC,
to ensure that whether you're using

00:36:06.400 --> 00:36:10.820
the smallest firewire device or the
largest fiber channel or SCSI library,

00:36:10.820 --> 00:36:12.380
we've got you covered.

00:36:12.380 --> 00:36:15.670
We don't also charge extra
for those types of pieces,

00:36:15.780 --> 00:36:19.150
so if you've got four libraries,
you're going to pay us

00:36:19.150 --> 00:36:20.860
one price for a product.

00:36:21.860 --> 00:36:25.880
And like I said, we support all SCSI,
all fiber channel,

00:36:25.880 --> 00:36:30.370
all firewire and USB devices natively,
no additional drivers.

00:36:30.920 --> 00:36:33.870
So, and I also forgot, of course,
one question that comes up.

00:36:33.960 --> 00:36:37.800
Yes, we cover your resource forks
and all of your finder info.

00:36:37.800 --> 00:36:40.470
So if it was positioned here on
your desktop when you backed it up,

00:36:40.620 --> 00:36:43.800
when you restore it,
it's positioned here on your desktop.

00:36:43.800 --> 00:36:44.800
So that's it.

00:36:44.800 --> 00:36:45.800
Thanks very much.

00:36:49.100 --> 00:36:53.880
and unfortunately I'm not going to
be available tomorrow at the lab,

00:36:53.910 --> 00:36:56.440
but you guys can visit us and
Chris has got information on the

00:36:56.440 --> 00:36:58.740
web for how to get in touch with
us here at the end of the show.

00:36:58.860 --> 00:36:59.490
Alright, great.

00:36:59.500 --> 00:37:00.480
Thanks Chris.

00:37:00.480 --> 00:37:02.080
Thank you Tim.

00:37:02.090 --> 00:37:02.090
Sure.

00:37:03.760 --> 00:37:08.060
All right, so now you've seen some great
solutions from Danz and Tolos Group.

00:37:08.240 --> 00:37:10.480
So now what we're going to do is look
a little bit more at what we call

00:37:10.480 --> 00:37:12.220
the high-end corporate and market.

00:37:12.220 --> 00:37:16.630
And to do that, we have BakBone,
even though I spelled the name wrong.

00:37:16.630 --> 00:37:17.860
Sorry about that.

00:37:17.860 --> 00:37:18.880
It's B-A-K.

00:37:18.880 --> 00:37:22.380
But anyway, I'd like to introduce
today Andrew Bowles,

00:37:22.380 --> 00:37:26.170
the Senior Director for
Strategic Alliances at BakBone.

00:37:26.410 --> 00:37:26.870
Thank you, Chris.

00:37:27.080 --> 00:37:27.360
Welcome.

00:37:27.430 --> 00:37:27.960
There you go.

00:37:28.000 --> 00:37:28.530
Cheers.

00:37:28.590 --> 00:37:29.870
Thank you.

00:37:31.600 --> 00:40:33.500
[Transcript missing]

00:40:36.310 --> 00:40:40.440
You know, again, when we built NetVault,
we built it back in the early

00:40:40.440 --> 00:40:42.220
90s like a lot of products.

00:40:42.360 --> 00:40:46.740
However,
we took a hit and in the mid-90s, 96, 97,

00:40:46.760 --> 00:40:49.160
we rewrote it from the ground
up to take advantage of

00:40:49.160 --> 00:40:50.860
network storage environments.

00:40:50.860 --> 00:40:54.920
A, it's got a very easy-to-install
GUI-driven product,

00:40:55.040 --> 00:41:00.130
but also it has a modular architecture,
an architecture that allows us to

00:41:00.180 --> 00:41:02.840
design and develop very quickly.

00:41:02.840 --> 00:41:08.280
So, in the case of Oracle 10G for OS X,
we're talking about weeks of development,

00:41:08.280 --> 00:41:11.530
not months like some of
our standard competitors,

00:41:11.530 --> 00:41:14.310
Veritas and Legato and the
incumbents that have a much

00:41:14.360 --> 00:41:16.100
longer rolling development cycle.

00:41:16.100 --> 00:41:18.890
Disk-to-Disk,
you've heard about it a lot.

00:41:18.920 --> 00:41:21.640
I'd be surprised if most of
you aren't experimenting.

00:41:21.640 --> 00:41:25.170
The next step is taking a look
at a virtual tape library,

00:41:25.230 --> 00:41:28.630
a virtual disk library,
and it allows your disk device

00:41:28.660 --> 00:41:30.660
to look like a tape target.

00:41:31.000 --> 00:41:34.860
When Chris talked a little bit
about the growing compliance needs,

00:41:34.860 --> 00:41:37.890
this is a way to begin
setting yourself up for that,

00:41:37.970 --> 00:41:41.650
a way to migrate off to tape
and do it effectively and also,

00:41:41.770 --> 00:41:43.700
naturally, as you heard, recover quickly.

00:41:43.700 --> 00:41:46.720
So, again, I think, you know,
if I was asking you to take

00:41:46.810 --> 00:41:50.450
a few things away from this,
robust disk-to-disk capability and also

00:41:50.450 --> 00:41:52.870
broad choice in the application side.

00:41:52.880 --> 00:41:55.290
You know, again,
we don't see that there should

00:41:55.370 --> 00:41:57.020
be a trade-off moving to OS X.

00:41:57.020 --> 00:41:59.950
We want to give you the
ability to run Oracle,

00:41:59.950 --> 00:42:00.880
run MySQL.

00:42:01.000 --> 00:42:04.510
SQL and do it on your time.

00:42:05.940 --> 00:42:10.930
I want to put a sample graphic up here,
just what a standard,

00:42:11.030 --> 00:42:12.940
we call it Acme Engineering,
might look for.

00:42:12.940 --> 00:42:16.440
Again, hot backup,
that would be your Oracle, MySQL.

00:42:16.440 --> 00:42:20.240
We've been doing this for a long
time and I also want to point out

00:42:20.240 --> 00:42:22.740
we've supported FreeBSD in the past.

00:42:22.740 --> 00:42:24.430
So for us it was a pretty clean port.

00:42:24.540 --> 00:42:27.360
I'd point to a customer that
I spent a lot of time with down

00:42:27.360 --> 00:42:28.950
in the peninsula and that's Yahoo.

00:42:29.000 --> 00:42:31.820
They chose, they're a large FreeBSD shop.

00:42:31.900 --> 00:42:35.050
They run a lot of MySQL,
so for those of you that aren't

00:42:35.050 --> 00:42:38.600
sure whether MySQL is ready for the,
an enterprise environment,

00:42:38.600 --> 00:42:39.800
I'd urge you to think again.

00:42:39.900 --> 00:42:43.270
I think many of you would be surprised,
it's coming a long way, coming fast.

00:42:43.400 --> 00:42:48.640
That's 18 data centers across
multiple continents and again,

00:42:48.640 --> 00:42:50.400
they're running on FreeBSD.

00:42:50.440 --> 00:42:54.590
So I think that Apple in moving
forward with OS X has picked a winning,

00:42:54.590 --> 00:42:58.310
winning platform and, you know,
is staying with their mantra which

00:42:58.310 --> 00:42:59.900
is all about reducing complexity.

00:42:59.900 --> 00:43:01.900
From a backbone in Apple,
it's a lot of data.

00:43:01.900 --> 00:43:04.890
From a general standpoint,
we share that as a common vision,

00:43:04.910 --> 00:43:07.500
taking more and more complex
environments and making them,

00:43:07.500 --> 00:43:11.300
you know, easier and easier to implement.

00:43:14.260 --> 00:43:18.200
One thing I want to come- you know,
for you to come away with is A,

00:43:18.300 --> 00:43:20.580
we're a company that's
easy to do business with.

00:43:20.700 --> 00:43:23.030
We have a sales model
that's entirely indirect.

00:43:23.330 --> 00:43:25.860
So, you know,
whether you want to pick up a

00:43:25.860 --> 00:43:30.290
partner in the form of Apple and
purchase NetVault through the iStore,

00:43:30.450 --> 00:43:33.830
or if you have a common VAR that you're
already used to doing business with,

00:43:33.830 --> 00:43:37.210
someone that takes care of your needs,
we're there to enable them.

00:43:38.370 --> 00:43:40.750
Backbon as a company
is entirely indirect.

00:43:40.750 --> 00:43:43.960
We work with our channel partners,
we work with OEMs such as Apple,

00:43:43.960 --> 00:43:49.380
and key ISVs such as Oracle, MySQL,
Sybase, and others.

00:43:49.420 --> 00:43:52.980
So, again, I'm looking forward to the
Q&A portion of this session.

00:43:52.980 --> 00:43:56.350
I encourage you to throw
some questions our way.

00:43:56.350 --> 00:43:59.540
And again, I want to thank Apple and
Chris for having us here.

00:43:59.540 --> 00:44:00.380
Thanks a lot.

00:44:04.250 --> 00:44:06.200
Good job, thank you.

00:44:06.200 --> 00:44:12.200
Alrighty,
batting up our designated hitter,

00:44:12.200 --> 00:44:13.200
I guess you could call him.

00:44:13.200 --> 00:44:17.200
Actually, we've also invited another
one of our vendors,

00:44:17.200 --> 00:44:20.410
Atempo,
who also has a solution targeted up here

00:44:20.410 --> 00:44:22.200
with their product called Time Navigator.

00:44:22.200 --> 00:44:25.200
So I'd like to welcome Randy Batterson,
Director of Strategic Alliances.

00:44:25.200 --> 00:44:27.620
Come on up.

00:44:29.700 --> 00:44:30.700
Chris?

00:44:30.700 --> 00:44:33.060
All right, thank you.

00:44:33.090 --> 00:44:35.380
Well, I'd like to kind of kick everything
off and just give everybody an idea

00:44:35.380 --> 00:44:38.130
about who a tempo is and what we do.

00:44:38.270 --> 00:44:41.300
Basically, the company- Let's see if
we can get this right here.

00:44:41.430 --> 00:44:45.250
I knew I was going to do that.

00:44:47.560 --> 00:44:48.280
First time for everything.

00:44:48.280 --> 00:44:51.490
But basically,
Tempo's been around for 12 years.

00:44:51.500 --> 00:44:53.300
The company was founded in 1992.

00:44:53.300 --> 00:44:55.580
We're actually dually located.

00:44:55.580 --> 00:44:57.700
We've got a facility in Paris, France.

00:44:57.700 --> 00:45:01.200
We also have a facility in Palo Alto,
California, right here in the Bay Area.

00:45:01.200 --> 00:45:05.810
We actually consider our product a
best-of-breed for high-performance

00:45:05.810 --> 00:45:07.420
enterprise environments.

00:45:07.420 --> 00:45:10.540
The product has been
engineered from the ground up.

00:45:10.600 --> 00:45:13.150
It's very, very high-performing.

00:45:13.620 --> 00:45:16.710
If you look at our customer base,
it's actually a global

00:45:16.710 --> 00:45:18.690
1,000 customer base.

00:45:18.790 --> 00:45:23.760
We have clients like France Telecom,
huge telecom company.

00:45:23.760 --> 00:45:28.980
Been with them for almost seven years,
and they've got about 13 different

00:45:29.070 --> 00:45:31.100
sites around the country itself.

00:45:31.100 --> 00:45:34.960
And what's really interesting is
that we actually support almost

00:45:35.110 --> 00:45:38.940
3,000 clients from a central
location on that particular facility.

00:45:38.940 --> 00:45:42.320
So, again, it kind of goes back to that
enterprise functionality.

00:45:42.320 --> 00:45:43.440
It's a very, very robust.

00:45:43.620 --> 00:45:44.260
It's a very robust product.

00:45:44.260 --> 00:45:47.900
We've got almost 2,000
customers worldwide.

00:45:47.900 --> 00:45:51.610
And out of those customers,
we've got roughly 3,000 sites.

00:45:51.700 --> 00:45:55.260
And I would say a good chunk of those
are all very high-end performance

00:45:55.260 --> 00:45:57.460
or high-enterprise-type companies.

00:45:57.460 --> 00:46:01.790
And if you really look at it,
some of these customers have a

00:46:01.900 --> 00:46:04.680
very high computing requirement.

00:46:04.680 --> 00:46:06.630
And that's, again,
a reason that they go to this product,

00:46:06.650 --> 00:46:09.630
because we have a strong suite
of business continuity and

00:46:09.640 --> 00:46:11.720
compliance solutions to offer them.

00:46:13.190 --> 00:46:16.100
The company itself has about
170 employees right now.

00:46:16.100 --> 00:46:17.200
We're growing very rapidly.

00:46:17.200 --> 00:46:22.020
We've got about 44 technology
people focused just on R&D.

00:46:22.020 --> 00:46:24.590
So this really kind of shows
us the commitment that we have

00:46:24.590 --> 00:46:27.780
towards developing new products,
just like supporting Mac OS X.

00:46:27.780 --> 00:46:30.190
And we've put a lot of
emphasis on development,

00:46:30.190 --> 00:46:34.160
and I think this kind of shows that most
companies don't have that type of a ratio

00:46:34.160 --> 00:46:36.590
of engineers focused just on development.

00:46:37.900 --> 00:46:41.150
Some of the industries that
we support include telecom,

00:46:41.150 --> 00:46:45.390
finance, manufacturing, education,
government,

00:46:45.390 --> 00:46:48.500
a lot of the key industries that are also
touched upon with the Mac environment.

00:46:48.500 --> 00:46:52.200
So again, this is a nice marriage
between what we're doing,

00:46:52.200 --> 00:46:54.240
supporting Mac OS X,
and the industries that

00:46:54.240 --> 00:46:54.940
we currently support.

00:46:54.940 --> 00:46:59.290
So we think that we're going to have a
really good addition to the Mac family.

00:47:01.350 --> 00:47:04.070
Okay, I'm just going to dive in a little
bit here about what the product is.

00:47:04.420 --> 00:47:06.940
Time Navigator.

00:47:06.940 --> 00:47:08.960
One of the things that we like
to say is that really it's got

00:47:08.980 --> 00:47:10.330
the fastest restore period.

00:47:10.340 --> 00:47:13.160
And that's- if I can leave
you with one thing today,

00:47:13.160 --> 00:47:15.980
just remember that restore
is what we do best.

00:47:15.980 --> 00:47:17.860
And we do it really well.

00:47:17.860 --> 00:47:21.000
There's some really key
features that help support this.

00:47:21.000 --> 00:47:23.600
Kind of going back to
the name Time Navigator,

00:47:23.600 --> 00:47:25.870
we do something which is
called time navigation.

00:47:25.950 --> 00:47:29.050
And the way we do this,
it's actually the ability to

00:47:29.050 --> 00:47:31.980
go back in a point in time,
any given point in time,

00:47:32.080 --> 00:47:37.620
we could actually go and retrieve a file
or directory at any instant in the past.

00:47:37.860 --> 00:47:39.590
So it's a lot like going
back into the past.

00:47:39.650 --> 00:47:42.110
You can actually pick
on a particular date,

00:47:42.350 --> 00:47:44.720
time, and bring that file back.

00:47:44.720 --> 00:47:47.000
And we do this in a unique way.

00:47:47.000 --> 00:47:49.650
We use an object-oriented database.

00:47:49.770 --> 00:47:54.100
And why this is unique is if you
look at the way many other solutions

00:47:54.100 --> 00:47:57.850
actually perform this function,
they actually do it with

00:47:57.850 --> 00:47:59.790
a flat file database.

00:47:59.860 --> 00:48:03.040
And what that causes is when you go
and actually do a metadata search,

00:48:03.100 --> 00:48:05.480
you're actually going
in a sequential form.

00:48:05.480 --> 00:48:09.380
So you actually have to go and, you know,
go down the line and actually find

00:48:09.380 --> 00:48:10.990
the information you're looking for,
just like if you were

00:48:10.990 --> 00:48:12.480
searching on a tape.

00:48:12.480 --> 00:48:15.770
By using an object-oriented database
or a relational type database,

00:48:15.870 --> 00:48:17.160
it's instantaneous.

00:48:17.230 --> 00:48:20.020
So that search takes a matter of seconds,
nanoseconds.

00:48:20.020 --> 00:48:22.420
I mean, you find it, boom, you're there.

00:48:22.460 --> 00:48:25.620
What's really nice about time navigation,
too, is the way we actually

00:48:25.650 --> 00:48:27.330
display that information.

00:48:27.330 --> 00:48:30.350
And what we do is we put it in a
kind of a directory tree structure.

00:48:30.420 --> 00:48:33.460
So it's very user-friendly.

00:48:33.460 --> 00:48:36.850
It looks just like what you're looking
at in any type of a directory tree.

00:48:37.040 --> 00:48:38.740
So if you're looking
for a particular file,

00:48:38.750 --> 00:48:42.180
you put the date down that
you're looking for this file.

00:48:42.180 --> 00:48:45.660
And what happens is when you click on it,
it does that search instantaneously.

00:48:45.660 --> 00:48:48.690
It'll bring back that tree,
and it'll show you exactly the way

00:48:48.690 --> 00:48:51.380
your data looked at that point in time.

00:48:51.390 --> 00:48:53.830
And what's really nice is it'll
actually show you with little

00:48:53.870 --> 00:48:57.340
crosshairs on a particular file if
that file was deleted or there was

00:48:57.360 --> 00:48:59.040
a change to that at a point in time.

00:48:59.040 --> 00:49:03.350
Now, where we get a little more deep
in this whole search in time,

00:49:03.350 --> 00:49:08.110
if you will, is we give you the ability
to do a depth of search.

00:49:08.110 --> 00:49:11.500
So you can actually click
on that hatched file,

00:49:11.540 --> 00:49:13.530
click on it,
and it'll show you every change

00:49:13.530 --> 00:49:15.360
that has ever happened to that file.

00:49:15.360 --> 00:49:17.880
And then what you can do at that
point is actually click on any one

00:49:17.880 --> 00:49:21.470
of those changes and bring back
that image or the data the way it

00:49:21.630 --> 00:49:24.020
looked on that particular time.

00:49:24.020 --> 00:49:25.010
So it's very quick.

00:49:25.100 --> 00:49:26.780
It's very unique in that sense.

00:49:26.780 --> 00:49:29.860
You're getting a, you know,
a point-in-time visual, if you will,

00:49:29.960 --> 00:49:33.020
of the way your data looked,
and then you can restore it.

00:49:33.170 --> 00:49:35.830
So it's very quick.

00:49:35.910 --> 00:49:36.730
Synthetic full backups.

00:49:36.730 --> 00:49:37.700
This is another thing that we do.

00:49:37.890 --> 00:49:42.320
It's kind of like what -- I guess
what we like to say is that

00:49:42.320 --> 00:49:44.010
it's an incremental forever.

00:49:44.090 --> 00:49:46.400
What -- if you can imagine when
you go in to do your first backup,

00:49:46.620 --> 00:49:49.040
you're going to have to do a full backup,
okay?

00:49:49.040 --> 00:49:50.940
After a point in time,
what you're going to

00:49:50.940 --> 00:49:53.870
start doing every -- say,
every day if you set up your policies,

00:49:53.870 --> 00:49:56.150
what you're going to do is
an incremental after that,

00:49:56.150 --> 00:49:58.280
and then another incremental, another.

00:49:58.280 --> 00:50:02.080
If you were to do, say, a one-week setup,
and at the end of the week,

00:50:02.080 --> 00:50:07.000
say you started your backup on Sunday,
you finished on Saturday,

00:50:07.110 --> 00:50:11.160
what's going to happen is offline,
Time Navigator will take

00:50:11.160 --> 00:50:13.850
those incrementals and
it will build a new full.

00:50:13.970 --> 00:50:16.520
It's a full out of all
those incrementals.

00:50:16.520 --> 00:50:19.250
This can go on forever,
and that's why we kind of call it

00:50:19.270 --> 00:50:21.120
a forever incremental paradigm.

00:50:21.160 --> 00:50:22.430
It keeps doing this forever.

00:50:22.440 --> 00:50:24.740
You never have to do a full again.

00:50:24.740 --> 00:50:27.190
And you can add points, you know,
delete what happened before so you don't

00:50:27.210 --> 00:50:31.340
keep accumulating all that baggage.

00:50:31.340 --> 00:50:32.900
Where this is really
unique for the restore,

00:50:32.900 --> 00:50:36.250
why it makes it fast,
is going back to that database,

00:50:36.250 --> 00:50:39.770
what you're able to do is if
you -- let's go back to the

00:50:39.770 --> 00:50:44.460
scenario where you did your full,
and let's say after that first

00:50:44.460 --> 00:50:48.570
week you want to go back --
excuse me -- and you want to

00:50:48.570 --> 00:50:50.900
actually find a file on Wednesday.

00:50:50.910 --> 00:50:53.840
What happens is Time Navigator,
because of the database and

00:50:53.840 --> 00:50:56.130
being a relational type database,
will go exactly back to that full.

00:50:56.160 --> 00:50:58.200
So you can go back to that full and
you can actually find it back to

00:50:58.200 --> 00:51:01.920
that particular file on Wednesday.

00:51:01.920 --> 00:51:04.360
So what you don't have to do,
which happens with many

00:51:04.360 --> 00:51:06.400
other applications,
is you actually have to

00:51:06.400 --> 00:51:09.940
go and load the full,
then go back through, you know,

00:51:09.940 --> 00:51:12.690
the Sunday full,
then the incremental Monday,

00:51:12.710 --> 00:51:16.400
then the incremental Tuesday,
just to get back to that Wednesday file.

00:51:16.400 --> 00:51:17.400
So it makes it very fast.

00:51:17.400 --> 00:51:21.580
You're not having to go through that
whole cycle of going through tapes.

00:51:23.300 --> 00:51:25.700
Another thing that we do
is macro multiplexing.

00:51:25.700 --> 00:51:30.940
Macro multiplexing is really nice in
the sense that if you're familiar with

00:51:31.110 --> 00:51:32.660
multiplexing the way it happens today.

00:51:32.660 --> 00:51:34.960
Basically,
you're going to get multiple tape

00:51:34.960 --> 00:51:37.940
streams coming back to a backup server.

00:51:37.940 --> 00:51:43.140
And what happens on the backup cycle
is the data is actually laid down onto

00:51:43.140 --> 00:51:44.900
the tape in little bits and pieces.

00:51:44.920 --> 00:51:50.200
When you go to do a restore,
you're actually having to go back

00:51:50.200 --> 00:51:54.880
and pick out little points of that
file information and feed it through.

00:51:54.880 --> 00:51:57.320
And what happens is the
tape drive actually starts

00:51:57.320 --> 00:51:58.560
doing a shoe-shining effect.

00:51:58.600 --> 00:52:01.280
And this actually slows
down your restore.

00:52:01.280 --> 00:52:05.920
What Time Navigator does is
we actually create a buffer.

00:52:07.520 --> 00:52:11.100
and when the backup job kicks off,
the data is put into

00:52:11.100 --> 00:52:13.160
256 megabyte buckets.

00:52:13.200 --> 00:52:17.400
Okay, and these buckets then,
once the backup starts, you know,

00:52:17.500 --> 00:52:20.150
feeding into this buffer,
it'll go up to like a watermark

00:52:20.240 --> 00:52:24.900
and when that watermark is hit,
the backup job will kick off and the

00:52:24.900 --> 00:52:28.340
data will actually start getting laid
down onto the tape and what happens,

00:52:28.350 --> 00:52:31.660
it gets laid down on
these 256 megabyte chunks.

00:52:31.730 --> 00:52:34.240
Well, when you get to the restore,
instead of having to go

00:52:34.240 --> 00:52:37.190
back and look for each,
you know, each little piece of data

00:52:37.190 --> 00:52:41.440
like you would with regular
multiplexing or interleaving,

00:52:41.550 --> 00:52:44.760
you actually backup using these
big chunks and they come right

00:52:44.840 --> 00:52:51.230
back to the server very fast,
basically hitting the theoretical

00:52:51.230 --> 00:52:54.630
throughput of the tape drive.

00:52:58.770 --> 00:53:01.070
I'm not getting a lot of support there.

00:53:01.290 --> 00:53:04.240
Another thing that we do is actually,
this is quite unique.

00:53:04.240 --> 00:53:07.180
I think we got a pointer here.

00:53:07.200 --> 00:53:09.000
Can you guys see that?

00:53:09.450 --> 00:53:09.670
Kind of.

00:53:09.760 --> 00:53:10.640
I think I'll just point.

00:53:10.680 --> 00:53:14.810
One of the cool things that we do,
actually, on a security standpoint is

00:53:14.920 --> 00:53:18.830
we're able to back up through
a firewall using just one port.

00:53:18.830 --> 00:53:23.140
Many applications today actually
require opening up multiple ports,

00:53:23.140 --> 00:53:25.710
as you can see over here
on the left-hand side.

00:53:25.920 --> 00:53:28.130
What happens, thanks.

00:53:28.490 --> 00:53:32.900
Actually, what happens is in these
other applications,

00:53:33.070 --> 00:53:36.750
you have to open up multiple ports,
many for to initiate the

00:53:36.750 --> 00:53:39.620
backup and then many for,
you know, bringing the data through

00:53:39.620 --> 00:53:40.230
on the other side.

00:53:40.230 --> 00:53:43.620
So you have anywhere from, you know,
10 to 25 ports opened up.

00:53:43.630 --> 00:53:46.550
What happens is a lot of
these ports remain idle,

00:53:46.760 --> 00:53:50.370
and that opens you up to the threat
of any kind of security attack.

00:53:50.620 --> 00:53:53.640
With Time Navigator,
we actually only open up one port.

00:53:53.640 --> 00:53:56.710
That's an outbound port opened
up by the administrator.

00:53:56.710 --> 00:54:00.530
So everything from the metadata to the
actual data flow to the TCP actually

00:54:00.670 --> 00:54:02.740
goes through that particular port.

00:54:02.910 --> 00:54:07.150
And again, that's an outbound port,
so it's not open from the outside.

00:54:07.150 --> 00:54:10.420
It's open from the inside,
inside the firewall,

00:54:10.450 --> 00:54:14.000
so nobody can actually
penetrate from the outside.

00:54:14.000 --> 00:54:16.310
This is really cool, too,
because there's a couple

00:54:16.310 --> 00:54:17.800
very large deals that we got.

00:54:17.800 --> 00:54:20.690
Just to give you an idea, Capgemini,
Ernst & Young, you know, auditors,

00:54:20.690 --> 00:54:23.950
I mean, these guys really worry
about protecting their data,

00:54:23.950 --> 00:54:24.520
right?

00:54:24.520 --> 00:54:28.540
One of the things that they picked us
over or picked us over the competition,

00:54:28.620 --> 00:54:32.160
if you will,
was because we had the security feature,

00:54:32.160 --> 00:54:35.670
and it was very key for them
to pick us because of that.

00:54:38.390 --> 00:54:41.320
Okay, Time Navigator,
just a few more innovations that we have.

00:54:41.500 --> 00:54:42.720
End-user simplicity.

00:54:42.720 --> 00:54:47.320
You know, a really cool thing that we do
is a data center services model.

00:54:47.320 --> 00:54:52.260
The data center services model
actually is something that we have that

00:54:52.260 --> 00:54:55.480
allows a user to kind of rent to own,
if you will.

00:54:55.480 --> 00:54:56.660
It's kind of like leasing a car.

00:54:56.660 --> 00:55:00.460
Instead of actually having to go out and
purchase the product in its entirety,

00:55:00.640 --> 00:55:02.750
all up front,
put up a big capital expenditure,

00:55:02.760 --> 00:55:05.720
we're allowing customers to
actually kind of pay as you go.

00:55:05.720 --> 00:55:08.420
We'll go in, we do an assessment of
the customer's site,

00:55:08.420 --> 00:55:10.820
understand what their
data requirements are,

00:55:10.820 --> 00:55:14.840
set up kind of a billing cycle,
if you will, for them based on what we

00:55:15.160 --> 00:55:18.310
think their usage will be,
and then they're actually able to,

00:55:18.430 --> 00:55:21.150
you know, match against that, say,
every quarter and see kind

00:55:21.150 --> 00:55:23.600
of where they're at and
just pay on a monthly basis.

00:55:23.600 --> 00:55:27.120
At the end of a period of time,
like a year or two years, if they want,

00:55:27.200 --> 00:55:28.980
they can actually purchase
the entire thing or,

00:55:28.980 --> 00:55:31.260
you know,
just keep using it on a monthly basis.

00:55:31.300 --> 00:55:34.340
So it's a real nice way to actually
get into backup and restore,

00:55:34.340 --> 00:55:35.690
especially in enterprise environments.

00:55:35.770 --> 00:55:37.420
environment,
instead of laying out a lot of cash,

00:55:37.420 --> 00:55:40.110
they can do it very cheaply.

00:55:41.000 --> 00:55:43.240
Multiple backup streams, up to four.

00:55:43.420 --> 00:55:45.600
This is really a very unique
feature that we have also.

00:55:45.600 --> 00:55:49.170
So if you can imagine,
if you're backing up to, say, an X-ray,

00:55:49.170 --> 00:55:53.920
and you want to kind of
invoke some DR features,

00:55:53.920 --> 00:55:55.340
and it's something a
lot of people are doing.

00:55:55.340 --> 00:55:56.810
I know we've been talking
about DDD to tape.

00:55:56.840 --> 00:56:00.150
This actually gives you the
ability to back up to four

00:56:00.270 --> 00:56:02.620
different devices at the same time.

00:56:02.660 --> 00:56:07.170
So the same data stream can be backed up
asynchronously to four different devices,

00:56:07.170 --> 00:56:08.360
and it can be any mix of devices.

00:56:08.360 --> 00:56:12.540
It could be tape, disk, MO,
and it could be any number.

00:56:12.540 --> 00:56:15.800
So you could have two disks, one tape,
one MO.

00:56:15.800 --> 00:56:19.480
And where this comes into play is,
for example, if you're going to have

00:56:19.480 --> 00:56:21.060
some kind of a DR scenario.

00:56:21.060 --> 00:56:24.550
So you're backing up to the X-ray,
and you want to back up to a disk

00:56:24.600 --> 00:56:27.110
locally just to have something near line.

00:56:27.160 --> 00:56:30.840
At the same time,
you want to have something offline,

00:56:30.840 --> 00:56:34.090
and that would be, say,
an off-site DR site.

00:56:34.100 --> 00:56:35.510
You can do those asynchronously.

00:56:35.510 --> 00:56:37.970
So if one breaks,
the other one's going to go regardless.

00:56:38.360 --> 00:56:40.360
And we can do it up to four.

00:56:40.360 --> 00:56:42.110
So if you want to have
four different sites,

00:56:42.200 --> 00:56:42.720
we can do it.

00:56:44.500 --> 00:57:22.300
[Transcript missing]

00:57:22.840 --> 00:57:24.980
and Flexible API and CLI.

00:57:24.980 --> 00:57:28.840
Basically, API set,
we touch on every feature in the product.

00:57:28.900 --> 00:57:30.900
This is really key too.

00:57:30.900 --> 00:57:36.050
I mean, if you've got different products
within your environment and you're not

00:57:36.050 --> 00:57:40.700
sure if they're supported or maybe we
don't support them through our APIs,

00:57:40.730 --> 00:57:43.460
it's very easy to write and
support the product set.

00:57:43.460 --> 00:57:46.660
CLI, you know, command line interface,
same thing.

00:57:46.660 --> 00:57:49.610
If there's some scripting that needs
to be done to support a product,

00:57:49.650 --> 00:57:51.290
we can do it very easily.

00:57:51.290 --> 00:57:52.430
So that's about it.

00:57:52.500 --> 00:57:56.240
But one thing if I can leave with
you today is that Time Navigator

00:57:56.240 --> 00:57:58.250
basically is the fastest restore period.

00:57:58.310 --> 00:58:02.170
And that's something that will, you know,
challenge anybody on.

00:58:02.170 --> 00:58:05.760
We've got some really good features
and we think they're great.

00:58:05.760 --> 00:58:06.580
So thank you very much.

00:58:10.300 --> 00:58:11.140
Thank you Randy.

00:58:11.140 --> 00:58:14.050
So you see some really excellent
solutions from a number of vendors

00:58:14.150 --> 00:58:16.300
that support the Mac OS X platform.

00:58:16.300 --> 00:58:20.300
So just kind of tie it all up again to
kind of repeat what we talked about.

00:58:20.300 --> 00:58:22.330
So we looked at initially some
of the storage trends that's

00:58:22.330 --> 00:58:23.300
driving the market today.

00:58:23.300 --> 00:58:27.310
Everything from compliance to the
need to reduce your backup window,

00:58:27.390 --> 00:58:31.300
and that's driving your strategy for
how you need to backup your systems.

00:58:31.300 --> 00:58:33.300
We looked at a number of
different backup architectures.

00:58:33.300 --> 00:58:37.810
Obviously just regular backup,
accessing your man- doing

00:58:37.960 --> 00:58:41.160
disk- to-disk-to-tape,
to land free.

00:58:41.420 --> 00:58:44.460
And then as you see we have a
wealth of backup choices available,

00:58:44.460 --> 00:58:48.300
meaning any need you would have
in your particular environment.

00:58:48.300 --> 00:58:50.720
And last but not least,
I'd like to invite you tomorrow

00:58:50.720 --> 00:58:52.510
morning in the Enterprise IT Lab.

00:58:52.620 --> 00:58:54.300
I will have everybody here.

00:58:54.300 --> 00:58:57.200
We have some demos showing
some of their equipment.

00:58:57.410 --> 00:59:00.260
Any question you have on backup,
I'm sure we'd be able to answer it

00:59:00.340 --> 00:59:02.300
there tomorrow at the Enterprise IT Lab.

00:59:02.300 --> 00:59:05.620
So if you have an opportunity, please,
please just stop by and see us

00:59:05.620 --> 00:59:07.300
and we'll be glad to have you.

00:59:07.320 --> 00:59:08.300
All right.

00:59:08.300 --> 00:59:08.300
Contact information.

00:59:08.300 --> 00:59:13.000
For myself, Pat, Tim, Andrew, and Randy.

00:59:13.520 --> 00:59:17.300
And I'd like to ask my four colleagues
to come on up and join us here.