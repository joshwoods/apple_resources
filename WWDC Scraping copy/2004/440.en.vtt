WEBVTT

00:00:12.210 --> 00:00:13.860
Thank you all for coming today.

00:00:13.860 --> 00:00:16.360
I'm sure you're here to
hear Andy and me speak,

00:00:16.390 --> 00:00:19.100
and there's nothing going on
here about a PowerBook demo,

00:00:19.100 --> 00:00:21.630
a PowerBook giveaway or anything.

00:00:21.730 --> 00:00:25.530
OK, so this is Dashboard
Development In-Deepth.

00:00:25.590 --> 00:00:28.760
What we're going to do today is
show you a little bit about the

00:00:28.760 --> 00:00:30.560
architecture of the Dashboard,
how it works,

00:00:30.560 --> 00:00:33.780
and then we're basically going to
get right into creating a gadget.

00:00:33.850 --> 00:00:35.630
We had a little mix up here,
and we're not quick

00:00:35.630 --> 00:00:38.950
time in digital media,
but they have a pretty slide.

00:00:39.010 --> 00:00:40.480
OK.

00:00:40.530 --> 00:00:42.220
So there we go.

00:00:42.270 --> 00:00:44.290
See, it's beautiful.

00:00:45.410 --> 00:00:48.000
Okay, so I'm John Louch,
and this is Andy Grignon.

00:00:48.000 --> 00:00:49.060
Hello.

00:00:49.150 --> 00:00:51.420
And basically,
Andy and I are the engineers

00:00:51.420 --> 00:00:52.860
responsible for the Dashboard project.

00:00:56.390 --> 00:00:57.750
Okay, so what is the Dashboard for you?

00:00:57.760 --> 00:00:58.600
What is the Dashboard?

00:00:58.600 --> 00:01:00.420
It is expose for your information.

00:01:00.420 --> 00:01:02.340
So Andy, what does that mean?

00:01:02.340 --> 00:01:04.520
I have absolutely no idea.

00:01:04.520 --> 00:01:05.810
That's a marketing line.

00:01:05.820 --> 00:01:06.290
Yeah.

00:01:06.320 --> 00:01:08.920
Okay, so expose for your information.

00:01:08.920 --> 00:01:12.130
Basically, it's an accessory layer
that comes and goes quickly,

00:01:12.130 --> 00:01:13.900
not interfering with your workflow.

00:01:13.900 --> 00:01:15.780
Very similar to what expose did.

00:01:15.780 --> 00:01:17.660
It's kind of a modal interface.

00:01:17.660 --> 00:01:18.970
You can interact with it.

00:01:18.980 --> 00:01:21.180
You can go back to whatever you
were using before and nothing,

00:01:21.180 --> 00:01:22.750
you know,
everything is exactly the same way.

00:01:23.510 --> 00:01:26.010
Okay, let's talk about the
pieces of the Dashboard.

00:01:26.040 --> 00:01:27.560
There's basically four things.

00:01:27.560 --> 00:01:28.710
There's a Dashboard server.

00:01:28.710 --> 00:01:30.550
There's clients.

00:01:30.560 --> 00:01:33.310
There's basically one
client for every gadget.

00:01:33.320 --> 00:01:35.930
Okay, and in this client,
there is a gadget,

00:01:35.930 --> 00:01:39.020
and the gadget can also
contain a native code plug-in,

00:01:39.020 --> 00:01:41.610
and we'll get to that a little bit later.

00:01:44.390 --> 00:01:45.540
Okay, so the Dashboard server.

00:01:45.540 --> 00:01:50.040
It's a very lightweight process
that manages the Dashboard clients.

00:01:50.040 --> 00:01:54.940
Really, all it's doing is launching and
relaunching the Dashboard clients.

00:01:54.940 --> 00:01:58.060
What that means is if the gadget,
for some reason, crashes,

00:01:58.060 --> 00:02:00.460
we instantly relaunch it,
and you almost won't

00:02:00.460 --> 00:02:02.740
be able to tell this,
or the user almost won't

00:02:02.740 --> 00:02:04.020
be able to tell this.

00:02:04.020 --> 00:02:05.660
There might be some data
loss if there's a crash,

00:02:05.660 --> 00:02:06.150
of course.

00:02:06.150 --> 00:02:10.220
We prevent crash loops and only do
this three times in some period.

00:02:10.220 --> 00:02:11.580
I forget the exact amount of time.

00:02:12.310 --> 00:02:16.030
It's also responsible for delivering
or marshalling events from the

00:02:16.030 --> 00:02:18.230
system to the clients back and forth.

00:02:18.290 --> 00:02:19.800
This allows us to do a
lot of powerful things,

00:02:19.800 --> 00:02:21.930
which you saw in the demo,
server-side dragging

00:02:21.930 --> 00:02:23.110
and that type of thing.

00:02:23.120 --> 00:02:26.100
The other main thing it
does is it does all the

00:02:26.100 --> 00:02:28.960
Dashboard-specific user interface.

00:02:28.960 --> 00:02:31.320
You guys have seen the closed boxes,
you've seen the ripples,

00:02:31.320 --> 00:02:33.000
you've seen the configuration spins.

00:02:33.310 --> 00:02:36.260
Anything that's not in the gadget that
is UI-related is in the Dashboard server.

00:02:36.260 --> 00:02:37.960
That's what's doing the work for you.

00:02:40.500 --> 00:02:41.550
Okay, so the Dashboard Client.

00:02:41.550 --> 00:02:45.760
This is a very small AppKit process,
and really, it's just a WebView.

00:02:45.760 --> 00:02:48.360
There'll be lots of sessions about
WebView and WebKit technologies

00:02:48.360 --> 00:02:49.260
throughout today.

00:02:49.260 --> 00:02:53.660
The other things it does is it
provides a bridge between the

00:02:53.720 --> 00:02:56.120
Dashboard Server and the Client.

00:02:56.140 --> 00:02:58.460
So, you know, this is how you get data
back and forth between them.

00:02:58.460 --> 00:03:00.230
This is all hidden from you,
but that's what one of

00:03:00.240 --> 00:03:01.370
its responsibilities are.

00:03:01.380 --> 00:03:03.720
The other thing it does,
and the main thing that's

00:03:03.720 --> 00:03:07.720
important for you writing a gadget,
is it provides this Gadget Object.

00:03:07.720 --> 00:03:11.090
This is a JavaScript object,
Eject to See object that is bridged

00:03:11.140 --> 00:03:15.110
into the JavaScript runtime that
allows you to do the things like flips

00:03:15.110 --> 00:03:16.610
and other things we'll mention soon.

00:03:19.040 --> 00:03:19.890
Okay, so a gadget.

00:03:19.890 --> 00:03:21.460
It's just a web page.

00:03:21.460 --> 00:03:22.200
It's that easy.

00:03:22.200 --> 00:03:24.160
It really is just an HTML web page.

00:03:24.160 --> 00:03:27.560
The few things it requires
is a gadget extension.

00:03:27.560 --> 00:03:28.100
It's a bundle.

00:03:28.100 --> 00:03:29.220
Sorry, it's a bundle.

00:03:29.220 --> 00:03:32.440
You're all familiar with
bundles on our system.

00:03:32.440 --> 00:03:35.330
Same structure that
you're all familiar with.

00:03:35.360 --> 00:03:37.290
We actually use a flat bundle,
which you may or may

00:03:37.290 --> 00:03:38.260
not be familiar with.

00:03:38.260 --> 00:03:40.540
This is just everything
kind of at the top level.

00:03:40.540 --> 00:03:41.520
It's a valid bundle format.

00:03:41.520 --> 00:03:42.960
Any bundle format will actually work.

00:03:42.980 --> 00:03:44.760
It requires a gadget extension.

00:03:44.760 --> 00:03:47.220
Something to note here, too,
you're probably hearing the words

00:03:47.280 --> 00:03:49.540
widget and gadget interchangeably.

00:03:49.540 --> 00:03:54.220
The name is in transition, I think,
and basically everything on your

00:03:54.260 --> 00:03:55.840
DVD has a .gadget extension.

00:03:55.840 --> 00:03:58.580
So if you're developing these,
you have to use the .gadget stuff.

00:03:58.640 --> 00:04:01.870
And that's also what you'll see
in the interface on the DVDs.

00:04:01.880 --> 00:04:04.880
So inside of the bundle,
you have an Info.plist.

00:04:04.900 --> 00:04:06.540
You have a default image.

00:04:06.620 --> 00:04:08.820
The default image has to be a PNG file.

00:04:08.820 --> 00:04:11.980
This is just a requirement for WWDC.

00:04:11.980 --> 00:04:14.690
And then you have an HTML file.

00:04:15.040 --> 00:04:18.160
When we say HTML file,
it doesn't necessarily mean one file.

00:04:18.180 --> 00:04:19.540
There just has to be a starting place.

00:04:19.540 --> 00:04:21.610
And an HTML file, of course,
can reference all other

00:04:21.610 --> 00:04:22.570
kinds of web content.

00:04:22.580 --> 00:04:25.920
Other CSS style pages, JavaScript,
what have you.

00:04:25.920 --> 00:04:27.080
Any even network resources.

00:04:27.080 --> 00:04:31.010
And then you can have a
native code plug-in as well.

00:04:33.000 --> 00:04:34.220
Okay, so writing a gadget.

00:04:34.220 --> 00:04:38.940
What Andy and I found was the best
way to start is go find a gadget,

00:04:38.940 --> 00:04:39.540
copy it.

00:04:39.630 --> 00:04:41.320
That's just, you know,
it's the easiest thing to do.

00:04:41.320 --> 00:04:43.430
We have, I think,
seven gadgets on the disk for you,

00:04:43.430 --> 00:04:44.360
plus some in the SDK.

00:04:44.450 --> 00:04:46.750
You just copy those,
you can go look in there,

00:04:46.810 --> 00:04:49.050
there's all the codes
already there for you,

00:04:49.060 --> 00:04:51.070
and that's the best place to start.

00:04:51.080 --> 00:04:54.420
So you copy the gadget,
you go into the bundle,

00:04:54.420 --> 00:04:58.180
and you go to the Info.plist,
and you start massaging the Info.plist to

00:04:58.210 --> 00:05:02.060
match what your gadget needs,
you know, change the keys and whatnot.

00:05:02.060 --> 00:05:03.310
And then launch Safari.

00:05:03.310 --> 00:05:06.060
Safari is the debugger's
choice for this environment,

00:05:06.060 --> 00:05:09.060
and you can use any text
editor to do your editing.

00:05:09.060 --> 00:05:12.310
I think Andy and I use BBEdit,
but you can use anything, TextEdit,

00:05:12.310 --> 00:05:15.050
BBEdit, you could use Microsoft Word,
right?

00:05:15.200 --> 00:05:17.060
Okay.

00:05:17.060 --> 00:05:20.050
So let's get coding.

00:05:20.700 --> 00:05:21.930
And Andy here.

00:05:21.990 --> 00:05:24.060
I appeared to-- Yes, all right.

00:05:24.120 --> 00:05:25.550
So we are on demo machine.

00:05:25.560 --> 00:05:26.090
All right.

00:05:26.210 --> 00:05:27.130
So I thought-- I have killed this slide.

00:05:27.160 --> 00:05:28.300
It's only one second, Andy.

00:05:28.330 --> 00:05:30.070
Oh, sorry.

00:05:30.130 --> 00:05:31.540
We're new at this.

00:05:31.540 --> 00:05:35.340
So we thought we'd start today
by writing a sample gadget.

00:05:35.340 --> 00:05:38.190
Now, I already wrote this yesterday,
but we're going to go through the

00:05:38.190 --> 00:05:40.040
exercise of putting one together.

00:05:40.040 --> 00:05:42.560
The thing we're going to
write today is a validator.

00:05:42.600 --> 00:05:45.860
Now, there's a million things that you've
probably found that can go wrong when

00:05:45.990 --> 00:05:47.410
you try to put together a gadget.

00:05:47.560 --> 00:05:49.500
You know, some key is wrong.

00:05:49.500 --> 00:05:50.760
You're missing something.

00:05:50.820 --> 00:05:53.750
So we thought it'd be kind of cool
to put together a gadget whose

00:05:53.750 --> 00:05:56.880
sole purpose is to validate a
gadget that you've already written.

00:05:56.880 --> 00:05:59.640
So all it does is you bring up dashboard.

00:05:59.640 --> 00:06:02.770
Actually, what you do is you start
a drag of your gadget.

00:06:02.840 --> 00:06:05.390
You bring up dashboard,
and you drop your gadget onto

00:06:05.390 --> 00:06:06.730
what we're going to write today.

00:06:06.870 --> 00:06:10.040
And what it's going to do is it's going
to generate a report for you using HTML.

00:06:10.180 --> 00:06:12.910
And it's going to launch Safari,
and it's going to tell you what's wrong.

00:06:13.000 --> 00:06:15.630
Hey, Andy, do we have a little
omission to make here?

00:06:15.640 --> 00:06:17.400
We do have a little omission to make,
since I'm such a-- Does it?

00:06:17.400 --> 00:06:18.440
--loser coder.

00:06:18.460 --> 00:06:20.520
Actually,
the thing that you guys have available

00:06:20.580 --> 00:06:22.510
to you doesn't actually validate.

00:06:22.520 --> 00:06:23.020
Yeah.

00:06:23.220 --> 00:06:23.520
Small.

00:06:23.520 --> 00:06:26.450
It's more of an info P-list walker.

00:06:26.800 --> 00:06:28.880
But I fixed it this morning very early.

00:06:28.880 --> 00:06:30.770
And so actually, this guy will validate.

00:06:30.790 --> 00:06:33.820
It's kind of interesting,
because it's really-- it's

00:06:33.820 --> 00:06:36.690
really easy to make mistakes,
but it's really easy to fix them in this

00:06:36.700 --> 00:06:38.470
environment because it's interpreted.

00:06:38.510 --> 00:06:44.760
In fact, we shipped some gadgets to you
with a few minor issues with

00:06:44.760 --> 00:06:47.280
them on your developer DVD.

00:06:47.280 --> 00:06:50.660
And so maybe what we could do is
just fix one of them for them.

00:06:50.660 --> 00:06:52.690
Let's start by fixing a bug, actually.

00:06:52.770 --> 00:06:55.530
You guys can follow along if you want.

00:06:55.660 --> 00:06:58.200
I think the one we're going
to attack is Calculator,

00:06:58.210 --> 00:07:02.180
aside from just being ridiculously
wrong in some of its math.

00:07:02.650 --> 00:07:06.120
Andy and I, we don't do math.

00:07:06.120 --> 00:07:07.650
As I'm sure you found, yeah.

00:07:07.660 --> 00:07:09.040
I'm not really good like that.

00:07:09.130 --> 00:07:12.940
So all the gadgets are stored
inside of /librarygadgets.

00:07:13.230 --> 00:07:14.450
We'll go ahead and go there.

00:07:14.460 --> 00:07:16.320
You guys can do this, too.

00:07:16.320 --> 00:07:17.160
You'll see CalculatorGadgets.com.

00:07:17.160 --> 00:07:18.340
Calculator.gadget.

00:07:18.350 --> 00:07:22.920
Now, all of our code is plain as
day inside of this stuff.

00:07:22.920 --> 00:07:24.540
Let me mention one thing here, too.

00:07:24.540 --> 00:07:26.920
What you notice is Andy's
going to show package contents.

00:07:26.920 --> 00:07:30.080
That's because the gadget extensions
claim that what's called a package.

00:07:30.080 --> 00:07:32.300
It means in the Finder and
other Open Safe panels,

00:07:32.300 --> 00:07:35.260
you can't actually go inside of it
without going through a custom interface.

00:07:35.310 --> 00:07:36.460
It's a better experience
for the end user,

00:07:36.460 --> 00:07:37.520
because they can drag
these things around,

00:07:37.520 --> 00:07:38.800
and they don't actually go into them.

00:07:38.900 --> 00:07:40.260
But it makes it a little
harder to develop.

00:07:40.340 --> 00:07:40.540
OK.

00:07:40.560 --> 00:07:41.440
So let's fix the bug.

00:07:41.440 --> 00:07:44.350
The bug that we're going
to fix is-- we're going to

00:07:44.470 --> 00:07:45.830
go ahead and launch Safari.

00:07:45.930 --> 00:07:50.240
If you drop Calculator-- onto Safari,
you'll see that it has this font.

00:07:50.320 --> 00:07:52.820
It's actually Helvetica,
but you'll notice on Steve's machine

00:07:53.050 --> 00:07:56.220
he had a segmented LCD display.

00:07:56.220 --> 00:07:57.890
And you guys have it, too.

00:07:57.900 --> 00:08:00.100
It's just-- I'm a moron.

00:08:00.140 --> 00:08:04.310
So what you have to do is open
up your Calculator HTML file.

00:08:04.730 --> 00:08:07.610
And the actual bug is
this guy right here.

00:08:07.620 --> 00:08:09.020
You see where we set the font.

00:08:09.130 --> 00:08:10.760
This is CSS.

00:08:10.780 --> 00:08:11.760
So you see where we set the font.

00:08:11.760 --> 00:08:13.060
This is just dblcd temp.

00:08:13.220 --> 00:08:14.270
That's the name of our font.

00:08:14.310 --> 00:08:16.450
So we're just going to-- that's the bug.

00:08:16.500 --> 00:08:18.860
So-- This is real.

00:08:18.860 --> 00:08:19.480
I mean, it's on your machine.

00:08:19.480 --> 00:08:21.090
This is actually real, yeah.

00:08:21.100 --> 00:08:22.980
Now you'll see that-- There's your font.

00:08:23.030 --> 00:08:23.760
There's your font.

00:08:23.760 --> 00:08:26.140
So you guys can actually fix our bugs.

00:08:26.560 --> 00:08:26.870
Yeah.

00:08:26.920 --> 00:08:27.320
Please.

00:08:27.760 --> 00:08:28.380
Please, right.

00:08:28.380 --> 00:08:30.880
OK.

00:08:30.890 --> 00:08:32.220
So that's the first thing.

00:08:32.220 --> 00:08:33.640
We just wanted to get
that out of the way.

00:08:33.680 --> 00:08:34.950
So you guys can actually do this too.

00:08:34.960 --> 00:08:37.110
And if there's some technique
that you saw on any of the

00:08:37.140 --> 00:08:39.030
gadgets that you've played with,
feel free.

00:08:39.040 --> 00:08:40.240
Copy the technique.

00:08:40.240 --> 00:08:42.040
We have some animation stuff in there.

00:08:42.130 --> 00:08:43.420
That's actually kind of interesting.

00:08:43.420 --> 00:08:47.040
We have some workarounds to some
bugs that we've come across.

00:08:47.040 --> 00:08:50.400
And those are scattered throughout there.

00:08:50.400 --> 00:08:51.500
Obviously, we're engineers.

00:08:51.500 --> 00:08:53.400
We don't put comments in anything.

00:08:53.450 --> 00:08:57.800
So it's best if you just learn
by seeing what we've done.

00:08:57.930 --> 00:09:01.500
So let's go ahead and
get something working.

00:09:01.500 --> 00:09:03.660
What we have here is-- Hello World.

00:09:03.660 --> 00:09:04.640
So this is the build gadget.

00:09:04.680 --> 00:09:07.170
It's on the SDK that you guys all have.

00:09:07.350 --> 00:09:10.160
So I'm going to start by copying that.

00:09:10.160 --> 00:09:11.750
Now you'll see validator gadget.

00:09:11.880 --> 00:09:14.600
Well, this is actually-- I'm going
to call it validator gadget.

00:09:14.600 --> 00:09:17.150
So I'm going to call it validator temp.

00:09:17.170 --> 00:09:19.380
And then I'm going to call this guy.

00:09:20.000 --> 00:09:21.000
There we go.

00:09:21.000 --> 00:09:25.500
The validator.

00:09:25.500 --> 00:09:27.080
It's really not that cool.

00:09:27.080 --> 00:09:28.340
Show package contents.

00:09:28.540 --> 00:09:28.870
Okay.

00:09:29.150 --> 00:09:30.880
Now, you'll see we have a few
things in this folder.

00:09:30.880 --> 00:09:33.940
We've got a default ping,
the hello world, and the Info.plist.

00:09:34.030 --> 00:09:38.880
If you haven't seen it already,
all it does is just show hello world.

00:09:38.880 --> 00:09:40.810
Not that exciting.

00:09:40.810 --> 00:09:44.440
So what we're going to do is we're
going to modify the Info.plist.

00:09:44.440 --> 00:09:44.440
Go ahead and double-click it.

00:09:45.070 --> 00:09:46.830
A few things inside of here.

00:09:46.900 --> 00:09:48.040
Allow multiple instances.

00:09:48.080 --> 00:09:50.540
That's just if you want to
have something like stickies,

00:09:50.540 --> 00:09:52.710
where you can keep
dragging your gadget off.

00:09:52.760 --> 00:09:57.780
By default, if that's set to no,
you're going to get a grayed out

00:09:57.780 --> 00:09:59.820
title in the configuration bar.

00:09:59.820 --> 00:10:03.500
The thing you absolutely have to
change is the CFBundle identifier.

00:10:03.500 --> 00:10:07.330
These have to be unique across
all the gadgets on the system.

00:10:07.380 --> 00:10:11.110
So we're going to call this
just plain old validator.

00:10:11.460 --> 00:10:12.860
The next thing is the CFBundle name.

00:10:12.860 --> 00:10:15.240
So this is the display name that's
going to show up in the config bar.

00:10:15.240 --> 00:10:19.990
So you can make this pretty looking,
so we'll just call it the validator.

00:10:20.000 --> 00:10:22.860
We call the config bar
the plus at the top.

00:10:22.860 --> 00:10:24.210
We drag everything to and from.

00:10:24.220 --> 00:10:24.690
Okay.

00:10:24.700 --> 00:10:28.480
The next thing, you know,
these versions don't really matter.

00:10:28.480 --> 00:10:31.660
The default image,
what that should be is a ping file

00:10:31.790 --> 00:10:33.870
at the top level of your gadget.

00:10:33.880 --> 00:10:36.770
You don't put the .ping extension on.

00:10:36.780 --> 00:10:37.980
I think that's a bug.

00:10:37.980 --> 00:10:38.220
Yeah.

00:10:38.840 --> 00:10:41.480
So that should just be, you know,
your name.

00:10:41.480 --> 00:10:43.840
So if you have, you know, foobar.ping,
just call it foobar.

00:10:43.840 --> 00:10:46.420
The next thing you're going to
see is the height and width.

00:10:46.420 --> 00:10:50.170
These are the numbers that we
use to specify the width and

00:10:50.180 --> 00:10:52.580
height of your image for the drag.

00:10:52.620 --> 00:10:56.480
Now, if you put a big number in there,
I think what we're going to do is

00:10:56.480 --> 00:10:58.870
stretch the image to fill that number.

00:10:58.920 --> 00:11:01.190
If the image does not match
the size you put there,

00:11:01.190 --> 00:11:03.120
the default image will be stretched.

00:11:03.120 --> 00:11:03.680
It's going to look bad.

00:11:03.680 --> 00:11:06.090
So what we're going to do is, in my temp,
we're going to go ahead

00:11:06.090 --> 00:11:07.340
and show package contents.

00:11:07.340 --> 00:11:10.080
Here's my... Amen.

00:11:10.300 --> 00:11:11.300
What the hell did I just do?

00:11:11.300 --> 00:11:12.710
Oh, is this?

00:11:12.720 --> 00:11:14.290
Cut the mic.

00:11:14.340 --> 00:11:15.720
I'm sorry.

00:11:15.730 --> 00:11:17.770
He's out.

00:11:17.780 --> 00:11:19.480
Sorry.

00:11:19.480 --> 00:11:21.920
Yeah, okay.

00:11:21.920 --> 00:11:23.460
So what we're going to
do is go ahead and move.

00:11:23.460 --> 00:11:26.050
I think there's a bug in Finder
where that doesn't actually work.

00:11:26.100 --> 00:11:28.840
So if you go ahead and
move default ping in there,

00:11:28.840 --> 00:11:29.580
that's our new picture.

00:11:29.580 --> 00:11:30.980
Can you show that to us, Andy?

00:11:30.980 --> 00:11:33.650
Yeah,
we're going to see this in icon view.

00:11:33.660 --> 00:11:35.510
So Andy and I are actually
artists on the side.

00:11:35.520 --> 00:11:36.730
You'll be picking this up.

00:11:36.740 --> 00:11:37.660
So this is our picture.

00:11:37.660 --> 00:11:39.180
It looks pretty lame.

00:11:39.980 --> 00:11:43.340
And, God, give a guy a break.

00:11:43.380 --> 00:11:47.300
Okay, so you'll see in Safari that it
tells us how big this picture is.

00:11:47.330 --> 00:11:49.000
So it's 150 by 150 pixels.

00:11:49.000 --> 00:11:51.160
So we're going to go
ahead and go in here,

00:11:51.160 --> 00:11:53.970
change that to 150, 150.

00:11:54.090 --> 00:11:57.320
Now, the last thing we have
is the main HTML file,

00:11:57.320 --> 00:12:01.180
and we're going to want that
to be the validator HTML file.

00:12:01.180 --> 00:12:04.480
So there is our validator HTML.

00:12:04.480 --> 00:12:05.760
Here's our hello world.

00:12:05.780 --> 00:12:06.960
We're going to just toss that guy.

00:12:06.960 --> 00:12:09.360
We're going to go ahead
and move the validator in.

00:12:10.800 --> 00:12:11.800
bug.

00:12:11.800 --> 00:12:12.800
Nice.

00:12:12.800 --> 00:12:15.690
Okay, so we now have the basic structure.

00:12:15.740 --> 00:12:19.050
Now we're going to get into
this in just a little bit,

00:12:19.060 --> 00:12:22.760
but this gadget requires a native
code plug-in to do something

00:12:22.760 --> 00:12:24.420
we'll tell you in about a bit.

00:12:24.420 --> 00:12:26.900
So what I'm going to do is I'm going
to go ahead and put my plug-in.

00:12:26.970 --> 00:12:29.370
And since we'll get to
this again in a little bit,

00:12:29.370 --> 00:12:31.790
that these plug-ins need
to be owned by root,

00:12:31.850 --> 00:12:34.540
and we'll tell you why in just a second.

00:12:34.540 --> 00:12:41.280
So we'll call this val.togadget.

00:12:41.280 --> 00:12:47.400
And now we're going to do a
pseudo-traveling root validator.

00:12:50.320 --> 00:12:53.360
Okay, so now we have a gadget.

00:12:53.360 --> 00:12:54.310
Let's go ahead and try it out.

00:12:54.380 --> 00:12:56.470
So, a couple ways you can
get these into Dashboard,

00:12:56.470 --> 00:12:56.790
right?

00:12:56.850 --> 00:12:58.760
So if we go ahead and bring up Dashboard,
we just have this.

00:12:58.760 --> 00:13:04.360
You can either double-click it,
or you can start a drag,

00:13:04.380 --> 00:13:08.750
and I'm going to show you
this because this is how we're

00:13:08.750 --> 00:13:08.750
going to use the mechanisms.

00:13:08.750 --> 00:13:08.750
Go ahead and start a drag.

00:13:08.750 --> 00:13:08.750
Go ahead and bring up Dashboard,
and let go.

00:13:09.560 --> 00:13:12.320
That looks bad, doesn't it?

00:13:12.370 --> 00:13:15.640
And actually, there's probably something
wrong in our validator.

00:13:15.740 --> 00:13:18.950
So this is what the
validator is supposed to fix.

00:13:19.040 --> 00:13:20.430
So OK, we have our Info.plist.

00:13:20.590 --> 00:13:25.810
We go through everything.

00:13:25.810 --> 00:13:25.810
Oh, you know what the big problem is?

00:13:25.810 --> 00:13:25.810
I didn't change this guy.

00:13:26.510 --> 00:13:29.250
So these are little
dodges that can get you.

00:13:29.310 --> 00:13:29.940
We know it's a pain.

00:13:29.940 --> 00:13:32.140
We're going to try and make this better.

00:13:32.190 --> 00:13:34.450
This is just like a bundle
in the same bundle format.

00:13:34.460 --> 00:13:35.720
You set your resources.

00:13:35.720 --> 00:13:36.640
The names have to match.

00:13:36.640 --> 00:13:38.710
You have to point to the right resources.

00:13:38.760 --> 00:13:39.250
OK.

00:13:39.420 --> 00:13:40.460
We've done that.

00:13:40.480 --> 00:13:42.330
Let's go ahead and try it again.

00:13:43.000 --> 00:13:43.500
There we go.

00:13:43.500 --> 00:13:44.040
It looks better.

00:13:44.040 --> 00:13:45.950
And it's going to actually stick around.

00:13:45.980 --> 00:13:47.500
That means it's there.

00:13:47.510 --> 00:13:50.960
Now, let's try it out.

00:13:50.960 --> 00:13:53.160
Let's bring up Hello World.

00:13:53.160 --> 00:13:56.650
This guy takes a drop target,
and it's actually going to go

00:13:56.650 --> 00:13:58.140
ahead and do the Safari thing.

00:13:58.140 --> 00:14:01.870
Now, I think because I screwed that up,
I'm going to, again,

00:14:01.870 --> 00:14:03.330
ignore all this stuff.

00:14:03.430 --> 00:14:06.240
You can actually-- if
Dashboard-- actually,

00:14:06.240 --> 00:14:06.700
don't ignore this.

00:14:06.760 --> 00:14:08.840
No, don't ignore this.

00:14:08.840 --> 00:14:12.540
Dashboard can sometimes get
into kind of a funky state.

00:14:12.550 --> 00:14:13.940
This is a developer DVD.

00:14:13.940 --> 00:14:15.310
This is a developer DVD.

00:14:15.320 --> 00:14:15.790
OK.

00:14:16.040 --> 00:14:20.040
What you may have to do
sometimes is kill the Dashboard.

00:14:20.040 --> 00:14:21.920
It's going to restart itself.

00:14:21.980 --> 00:14:24.110
All you got to do is bring it up,
just like that.

00:14:24.300 --> 00:14:27.250
It's also-- you should note that
the Dashboard server is-- all these

00:14:27.380 --> 00:14:30.020
things are so lightweight that they
do really start up almost instantly.

00:14:30.230 --> 00:14:31.030
Right, right.

00:14:31.080 --> 00:14:33.700
It might feel like it's not restarted,
but it has.

00:14:33.770 --> 00:14:37.900
So the next thing is-- so now we have--
you'll notice it still didn't work.

00:14:37.900 --> 00:14:42.080
And that's because inside of this code,
we have a plug-in.

00:14:42.080 --> 00:14:44.500
And one more key that we're
going to show you in just a bit,

00:14:44.500 --> 00:14:47.100
I promise,
is that we need to specify that.

00:14:47.310 --> 00:14:49.440
So I'm going to go ahead
and add a new child.

00:14:49.580 --> 00:14:54.180
I'm going to call it plug-in,
P-L-U-G-I-N.

00:14:54.180 --> 00:14:54.500
OK.

00:14:54.500 --> 00:14:59.060
And we're going to call it
the valid data-- you know,

00:14:59.250 --> 00:15:00.700
I spell things out as I type.

00:15:00.700 --> 00:15:01.580
I don't know why.

00:15:01.580 --> 00:15:06.960
Plug-in dot gadget plug-in.

00:15:07.400 --> 00:15:09.760
Let's see if that works.

00:15:09.760 --> 00:15:12.580
And just to be paranoid,
I'm going to go ahead and do that.

00:15:12.860 --> 00:15:14.880
Just sprinkle those around
when things don't work.

00:15:14.880 --> 00:15:16.730
I mean, really.

00:15:16.780 --> 00:15:18.880
OK, now let's give it another whirl.

00:15:18.920 --> 00:15:20.600
Go ahead and drop this guy.

00:15:20.820 --> 00:15:21.720
Finally, it worked.

00:15:21.720 --> 00:15:27.120
OK, so what it did is generated
this little bit of HTML,

00:15:27.150 --> 00:15:29.670
and it tells us that it succeeded.

00:15:29.690 --> 00:15:32.560
Now I've actually mocked up
a bad demo-- or I'm sorry,

00:15:32.560 --> 00:15:33.360
a bad demo, yeah.

00:15:33.510 --> 00:15:33.980
Telling.

00:15:33.980 --> 00:15:37.110
A bad gadget.

00:15:37.540 --> 00:15:40.130
Now this is going to tell us
that this gadget failed because

00:15:40.130 --> 00:15:41.550
we're missing the width key.

00:15:41.600 --> 00:15:44.110
And so you guys can
come get this from us,

00:15:44.120 --> 00:15:47.010
the fixed version of all this,
in the lab.

00:15:47.020 --> 00:15:48.120
We'll go through that.

00:15:48.170 --> 00:15:51.400
So if we look in the p list,
you'll see that, lo and behold,

00:15:51.400 --> 00:15:53.320
we have a height but no width.

00:15:53.350 --> 00:15:57.740
And if we add a width,
and then one-- I don't

00:15:57.740 --> 00:15:59.510
even know what it was.

00:15:59.570 --> 00:16:01.690
And then it should--

00:16:02.000 --> 00:16:15.800
[Transcript missing]

00:16:20.400 --> 00:16:24.310
OK,
so we just wrote a gadget and had a demo.

00:16:24.320 --> 00:16:26.730
All right.

00:16:27.000 --> 00:16:28.500
That was a very simple gadget.

00:16:28.500 --> 00:16:32.820
One of the things you saw Andy do
was he caused a Dashboard layer to

00:16:32.830 --> 00:16:34.740
disappear and has Safari to launch.

00:16:34.740 --> 00:16:37.800
This is done through the gadget
extension I was telling you about before,

00:16:37.840 --> 00:16:39.500
a JavaScript object that we
push into the environment

00:16:39.500 --> 00:16:40.620
that lets you do a few things.

00:16:40.620 --> 00:16:44.170
There's a couple...

00:16:44.510 --> 00:16:47.390
There's a couple of methods that
you should know about the gadget op.

00:16:47.460 --> 00:16:49.860
This is all documented in the SDK,
so you can read what all

00:16:49.860 --> 00:16:51.040
the methods do and whatnot.

00:16:51.040 --> 00:16:52.530
There's a couple we should call out.

00:16:52.530 --> 00:16:55.060
I'm going to start actually
here at the bottom about

00:16:55.060 --> 00:16:56.860
resizing your gadget or widget.

00:16:56.860 --> 00:16:58.640
Your gadget exists inside of a window.

00:16:58.730 --> 00:17:01.020
The window has to be the
exact size of your gadget,

00:17:01.020 --> 00:17:02.820
or a lot of the animations don't work.

00:17:02.820 --> 00:17:04.980
The ripple effects, the close box,
whatnot.

00:17:05.110 --> 00:17:08.500
They all look at the window size to
then try to determine what to do.

00:17:09.050 --> 00:17:11.020
So what we have here is a
gadget resize to method.

00:17:11.020 --> 00:17:13.560
There's actually two methods,
resize to and resize by.

00:17:13.560 --> 00:17:15.460
They're pretty self-evident.

00:17:15.460 --> 00:17:18.490
It takes a width and a height or
a delta width and a delta height.

00:17:18.560 --> 00:17:22.630
This is very close also if you're
familiar with client-side JavaScript.

00:17:22.630 --> 00:17:24.620
It's very similar to the window.

00:17:24.620 --> 00:17:27.220
The window resize to, resize by methods.

00:17:27.220 --> 00:17:30.830
They're a little bit different in
that these don't have limitations

00:17:30.840 --> 00:17:32.860
on size where the window one does.

00:17:32.860 --> 00:17:34.740
So that's resizing your widget.

00:17:34.740 --> 00:17:36.870
We also have the configuration flip.

00:17:36.880 --> 00:17:38.340
I'm assuming all of
you have seen the demo,

00:17:38.340 --> 00:17:38.940
but you can click.

00:17:38.940 --> 00:17:42.420
You need some place in the
dashboard to store preferences.

00:17:42.460 --> 00:17:44.900
So what we came up with this
idea is that you flip everything

00:17:44.900 --> 00:17:46.280
around and put that on the back.

00:17:46.280 --> 00:17:49.030
So it doesn't interfere with your work,
but it's easy to get to.

00:17:49.060 --> 00:17:52.050
We have a real simple way to do
this inside of this gadget object.

00:17:52.120 --> 00:17:54.570
There's basically three methods,
and that's it.

00:17:54.570 --> 00:17:57.830
There's a start edit, a finish edit,
and a run edit transition.

00:17:57.860 --> 00:17:59.980
Let me tell you how this works.

00:18:00.040 --> 00:18:01.760
So all you do is you say start edit.

00:18:01.880 --> 00:18:04.450
It basically takes a screen
capture of your gadget,

00:18:04.510 --> 00:18:06.520
whatever's on the screen at that time.

00:18:06.520 --> 00:18:08.910
Then it's freezing all
updates to the screen.

00:18:08.950 --> 00:18:11.560
It's freezing all the
updates to the monitor.

00:18:11.750 --> 00:18:13.660
Then all you do is call
run edit transition.

00:18:13.660 --> 00:18:14.250
Sorry.

00:18:14.270 --> 00:18:17.040
Then what you do is you change your
HTML in a variety of different ways.

00:18:17.160 --> 00:18:20.100
You know, you can add elements,
remove stuff, do whatever you need to do,

00:18:20.100 --> 00:18:22.770
and none of this will go to the
screen because the screen is frozen.

00:18:22.990 --> 00:18:24.460
Then you say run edit transition.

00:18:24.460 --> 00:18:28.070
Then what we do behind your
guys' back is we take those two

00:18:28.070 --> 00:18:30.310
sides and we do the OpenGL flip.

00:18:30.540 --> 00:18:32.800
and then we also have
the backwards version,

00:18:32.800 --> 00:18:33.840
which is finish edit.

00:18:33.840 --> 00:18:37.150
That's the same thing as start edit,
but it flips in the opposite direction,

00:18:37.160 --> 00:18:39.620
going back from your edit
side to your actual gadget.

00:18:39.620 --> 00:18:43.940
Really important thing to realize here
is you must call run edit transition.

00:18:43.940 --> 00:18:46.600
If you do not call run edit transition,
all screen updates,

00:18:46.600 --> 00:18:48.860
not just for this gadget,
all screen updates are stopped.

00:18:48.970 --> 00:18:50.060
This is a limitation of the DVD.

00:18:50.080 --> 00:18:52.600
Not necessarily a limitation
of being in Tiger.

00:18:52.600 --> 00:18:55.350
If you don't do it,
we actually do have a timer,

00:18:55.350 --> 00:18:57.730
because we don't want to
stop the whole system,

00:18:57.730 --> 00:18:58.630
and we'll call it for you.

00:18:58.640 --> 00:19:00.740
I'm not actually familiar with
the granularity of the timer.

00:19:00.740 --> 00:19:02.990
I think it's like three or five seconds,
something like that.

00:19:03.020 --> 00:19:05.900
Okay, so that's how we do
the configuration flip.

00:19:05.920 --> 00:19:09.570
Another thing I was talking about is
how we do the server-side dragging.

00:19:09.580 --> 00:19:11.960
You're familiar with this
in AppKit and Carbon Apps,

00:19:11.960 --> 00:19:14.770
where if an application is hung,
you can still move the window around.

00:19:14.780 --> 00:19:15.630
This is really nice.

00:19:15.640 --> 00:19:19.080
We wanted to take that same behavior
into the gadget or the dashboard layer.

00:19:19.080 --> 00:19:20.880
So no matter what's
wrong with the gadget,

00:19:20.880 --> 00:19:24.200
you can take it, you can move it around,
you can even close it, get rid of it.

00:19:24.240 --> 00:19:26.960
So if you have a bad gadget,
you can spank it.

00:19:30.170 --> 00:19:32.090
Sorry.

00:19:32.090 --> 00:19:33.240
Excuse me.

00:19:33.240 --> 00:19:34.630
Where did we get you, man?

00:19:34.640 --> 00:19:37.560
I think we need more practicing here,
Andy.

00:19:37.560 --> 00:19:37.840
Okay.

00:19:37.840 --> 00:19:41.040
So in any case,
the server-side dragging is really great,

00:19:41.060 --> 00:19:42.880
but there's times when
you don't want that.

00:19:42.920 --> 00:19:44.410
I mean, you have, say, a slider.

00:19:44.440 --> 00:19:45.720
You have any type of tracking control.

00:19:45.720 --> 00:19:47.700
You want to resize something, whatever,
right?

00:19:47.720 --> 00:19:49.910
When you have that,
so we have some methods for

00:19:49.910 --> 00:19:50.700
you to help you out here.

00:19:50.700 --> 00:19:51.730
These are only just a few of them.

00:19:51.740 --> 00:19:53.590
Basically,
we have what are called control

00:19:53.590 --> 00:19:56.260
regions or control areas,
and what that comes down

00:19:56.300 --> 00:19:57.960
to is circles and racks.

00:19:58.220 --> 00:20:00.460
What's important is there's
always an open and a close.

00:20:00.460 --> 00:20:04.010
When you open some control racks,
you set them, and then you close them.

00:20:04.020 --> 00:20:05.780
When you close them,
they go to the server.

00:20:05.780 --> 00:20:08.460
If you don't close them,
nothing's going to happen, all right?

00:20:08.460 --> 00:20:11.580
Hey, same thing is also you need to open
and close when you clear your racks.

00:20:11.580 --> 00:20:12.460
Yeah, true.

00:20:12.460 --> 00:20:13.970
That's a common mistake we always make.

00:20:14.040 --> 00:20:15.560
Yeah,
you can't just call clear all control

00:20:15.640 --> 00:20:16.670
racks or clear a control rack.

00:20:16.720 --> 00:20:18.960
Everything is between an
open and a close closure.

00:20:20.800 --> 00:20:23.030
Okay, let's move along.

00:20:23.320 --> 00:20:29.240
Okay, so you saw Andy having to do some
nasty things in the terminal.

00:20:29.740 --> 00:20:33.120
We really want you guys to try to stay
inside of HTML as much as possible,

00:20:33.120 --> 00:20:34.200
just HTML and JavaScript.

00:20:34.200 --> 00:20:37.460
And the reason why is because it's a
cleaner environment for the end user.

00:20:37.460 --> 00:20:40.470
It's a sandbox environment where
there's not much they can do and

00:20:40.470 --> 00:20:42.080
they can't hurt your machine.

00:20:42.080 --> 00:20:44.070
But eventually,
you're going to run against a wall

00:20:44.080 --> 00:20:45.660
for something you're going to create.

00:20:45.660 --> 00:20:47.980
And that's why we have the
ability to write Objective-C code

00:20:47.980 --> 00:20:49.540
that then links into the gadget.

00:20:49.540 --> 00:20:52.060
We call these gadget plug-ins.

00:20:52.060 --> 00:20:53.880
All these are is a Cocoa bundle.

00:20:53.880 --> 00:20:56.850
To create a Cocoa bundle,
you launch Xcode.

00:20:56.850 --> 00:20:59.580
I believe there's a template for that.

00:20:59.580 --> 00:21:01.490
It's called Cocoa bundle.

00:21:01.520 --> 00:21:02.900
So you create one of these things.

00:21:02.970 --> 00:21:06.520
And they live either in system
library gadget plug-ins or they

00:21:06.520 --> 00:21:08.500
can live also inside the bundle.

00:21:08.580 --> 00:21:10.940
The important thing is they
have to be owned by root.

00:21:10.980 --> 00:21:15.530
And the reason why we did that is so
that if a user gets one of these gadgets,

00:21:15.700 --> 00:21:18.590
they have to put in their
administrative password to actually

00:21:18.590 --> 00:21:22.050
install it so they can't install
malicious code on their system.

00:21:22.900 --> 00:21:25.700
The important thing to note there is that
just because it's owned by root doesn't

00:21:25.730 --> 00:21:27.340
mean you're actually running as root.

00:21:27.340 --> 00:21:27.460
Right.

00:21:27.460 --> 00:21:28.690
None of this is running by root.

00:21:28.690 --> 00:21:29.820
This is all running by the user.

00:21:29.820 --> 00:21:33.040
So this is just a file permission issue.

00:21:33.040 --> 00:21:35.760
Okay,
so you use the gadget plug-in extension,

00:21:35.760 --> 00:21:38.090
and you have to have a principal class.

00:21:38.120 --> 00:21:39.760
Creating plug-ins is simple.

00:21:39.760 --> 00:21:41.400
There's basically two APIs.

00:21:41.400 --> 00:21:43.910
You have this principal class,
and there's two methods that you have

00:21:43.910 --> 00:21:45.480
to implement on that principal class.

00:21:45.500 --> 00:21:47.230
InitWithWebView is the first one.

00:21:47.240 --> 00:21:51.810
InitWithWebView,
we find we almost never use it, right,

00:21:51.810 --> 00:21:52.540
Andy?

00:21:52.740 --> 00:21:52.860
No.

00:21:52.860 --> 00:21:57.150
What we do is, if you need,
InitWithWebView allows you access

00:21:57.380 --> 00:21:59.100
to the web view as it's loading.

00:21:59.100 --> 00:22:00.780
It also allows you to set
up any initialization you

00:22:00.780 --> 00:22:01.840
might want to do or whatnot.

00:22:01.840 --> 00:22:04.820
The major method is
Windows Script Object Available.

00:22:04.820 --> 00:22:12.460
This method gets called before any
JavaScript is executed in your web page.

00:22:12.530 --> 00:22:15.560
This allows you to do what we
did with the gadget extension.

00:22:15.620 --> 00:22:19.830
So you can stick any Objective-C object
and push it through the

00:22:19.830 --> 00:22:23.790
binding system of WebKit,
and it gives a JavaScript runtime

00:22:23.790 --> 00:22:26.460
allowing you to do anything,
literally anything, right?

00:22:26.460 --> 00:22:28.870
So that's the
Windows Script Object Available.

00:22:30.380 --> 00:22:32.140
OK, why don't we do a demo,
just to explain a little more

00:22:32.140 --> 00:22:34.570
about how you write a code plug-in.

00:22:34.570 --> 00:22:34.940
Right.

00:22:35.020 --> 00:22:37.780
So back to demo two.

00:22:37.780 --> 00:22:39.920
Here we go.

00:22:39.980 --> 00:22:47.510
I've got the source code for the
validator plug-in right here.

00:22:47.510 --> 00:22:47.510
It's an Xcode project.

00:22:47.510 --> 00:22:47.510
I'm going to take you through just
a couple things in the project.

00:22:47.750 --> 00:22:50.690
So when you create a new plug-in,
a new Cocoa bundle,

00:22:50.690 --> 00:22:52.840
you're going to get an empty project.

00:22:52.890 --> 00:22:57.030
Inside of, what is it, targets,
you're going to have a default target.

00:22:57.120 --> 00:23:01.130
If we get info on that target,
you're going to see a properties panel.

00:23:01.130 --> 00:23:03.460
Now, you can set your identifier here.

00:23:03.500 --> 00:23:05.100
It doesn't really matter.

00:23:05.100 --> 00:23:09.000
The interesting thing to us is you
have to set your principal class.

00:23:09.000 --> 00:23:12.880
So when you go ahead and create a
new Objective-C object using Xcode,

00:23:12.980 --> 00:23:15.890
just set its principal class right here.

00:23:16.280 --> 00:23:20.610
The other thing you're going to
want to do is go to the Build tab,

00:23:20.610 --> 00:23:23.980
and there's a little thing down
here called Wrapper Extension.

00:23:23.980 --> 00:23:27.080
By default, on a Cocoa bundle,
it's going to say Bundle.

00:23:27.080 --> 00:23:30.140
You're going to want to
change that to Gadget Plugin.

00:23:30.140 --> 00:23:33.790
Now, technically, this is not enforced,
but it might be enforced in the future.

00:23:33.790 --> 00:23:35.890
So it would be good to
use the extension now.

00:23:35.970 --> 00:23:36.320
Yeah.

00:23:36.320 --> 00:23:39.080
Okay, so let's take a quick
look through the code.

00:23:39.080 --> 00:23:40.750
Here we see the init with VEBU.

00:23:40.770 --> 00:23:43.350
Can you guys see this,
or is that too small?

00:23:44.640 --> 00:23:45.600
Too small?

00:23:45.600 --> 00:23:46.080
All right.

00:23:46.080 --> 00:23:50.800
I'm going to make it bigger.

00:23:50.800 --> 00:23:50.800
Font, bigger.

00:23:51.680 --> 00:23:52.440
Rock solid.

00:23:52.560 --> 00:23:54.000
Oh, preferences.

00:23:54.000 --> 00:23:55.840
Any Xcode experts?

00:23:55.840 --> 00:23:57.530
We just do HTML now.

00:23:57.540 --> 00:23:58.570
Oh, syntax.

00:23:58.840 --> 00:24:00.430
This guy?

00:24:06.010 --> 00:24:08.590
Yeah, I use this a lot.

00:24:08.820 --> 00:24:12.290
We really are engineers, by the way.

00:24:13.250 --> 00:24:14.630
Okay, so, is that better?

00:24:14.630 --> 00:24:17.550
Okay, so, let's take a look.

00:24:17.560 --> 00:24:19.540
Here we have our knit with WebView.

00:24:19.540 --> 00:24:20.440
It does nothing.

00:24:20.440 --> 00:24:24.190
I was going to have some big grand plans,
but it doesn't do anything

00:24:24.330 --> 00:24:25.550
in there right now.

00:24:25.580 --> 00:24:26.400
We have a dialic.

00:24:26.400 --> 00:24:29.620
Here's the interesting part,
the Windows script object available.

00:24:29.620 --> 00:24:32.890
So, you're passed a WebScript object.

00:24:32.920 --> 00:24:35.050
This comes from WebKit.

00:24:35.970 --> 00:24:39.100
And you're going to call a method,
or you're actually just going to

00:24:39.100 --> 00:24:41.880
do a set value for key on that
object that you're passed in.

00:24:41.940 --> 00:24:44.970
And what you set for that value,
we're going to set ourself.

00:24:44.970 --> 00:24:48.610
And that means tell the
JavaScript binding system to look

00:24:48.610 --> 00:24:52.940
at ourself for any methods that we
want to export into the JS runtime.

00:24:52.940 --> 00:24:55.100
By the way,
this is all documented in another

00:24:55.100 --> 00:24:57.130
session coming later today,
I think.

00:24:57.130 --> 00:24:58.440
We have it on our slides.

00:24:58.440 --> 00:25:00.280
It explains this process more in detail.

00:25:00.280 --> 00:25:02.640
The whole binding mechanism
will be touched on tomorrow.

00:25:02.640 --> 00:25:05.890
The key is, in this case, validated.

00:25:05.920 --> 00:25:09.820
So, that's how you're going to access
this object inside of the JS runtime.

00:25:09.820 --> 00:25:13.280
So, it's going to be a global object
called validator dot whatever.

00:25:13.280 --> 00:25:15.550
Now, let's go to the rest of this.

00:25:15.560 --> 00:25:16.900
Do you want to show
them that in the HTML?

00:25:16.900 --> 00:25:18.710
Yeah, I'll show them in a sec.

00:25:18.740 --> 00:25:22.980
So,
here we have WebScript name for selector.

00:25:22.980 --> 00:25:24.820
This is also called by the WebKit.

00:25:24.820 --> 00:25:27.880
And what this allows you to
do is set a pretty name for

00:25:27.880 --> 00:25:29.700
the names of your methods.

00:25:29.700 --> 00:25:34.600
So, this maps an Objective-C selector
to a JavaScript name.

00:25:34.600 --> 00:25:35.840
By default, these guys are called WebKit.

00:25:35.920 --> 00:25:37.920
So, these guys come up with
a pretty ugly name.

00:25:37.920 --> 00:25:41.900
I think it's underscore, underscore,
you know, whatever your method name is.

00:25:41.920 --> 00:25:44.630
That can get kind of tedious,
but that's done so that there aren't

00:25:44.630 --> 00:25:45.920
any collisions in the namespace.

00:25:45.920 --> 00:25:49.920
So, we just remap everything to
check plugin permissions.

00:25:49.980 --> 00:25:51.920
And in this case, you know,
save results to temp.

00:25:52.030 --> 00:25:55.170
The other thing we can do
is you can exclude things

00:25:55.190 --> 00:25:56.920
from the JS binding system.

00:25:57.060 --> 00:26:02.790
So, by default,
the bindings use object introspection.

00:26:03.600 --> 00:26:37.000
[Transcript missing]

00:26:37.160 --> 00:26:39.400
Now it turns out we actually
don't have any other variables,

00:26:39.420 --> 00:26:43.100
but you guys can use that.

00:26:43.650 --> 00:26:45.640
We have two methods here,
check plug-in permissions.

00:26:45.640 --> 00:26:48.590
All this guy does in this
validator gadget is just check.

00:26:48.700 --> 00:26:51.590
It returns a bool,
and it says if the plug-in,

00:26:51.590 --> 00:26:53.250
the path that you pass in,
is owned by root.

00:26:53.260 --> 00:26:54.680
So this is what we were
talking about before.

00:26:54.680 --> 00:26:56.100
We were forcing this root thing.

00:26:56.100 --> 00:26:58.350
Now the validator will actually
check that and make sure your

00:26:58.360 --> 00:26:59.480
plug-in is set correctly.

00:26:59.480 --> 00:27:00.120
And this is real.

00:27:00.120 --> 00:27:02.040
I mean, all we do, you know,
you do whatever you want.

00:27:02.040 --> 00:27:04.270
But in this case, we just call lstat and
we just do something.

00:27:04.280 --> 00:27:07.410
You'll notice what's interesting
here is that we don't actually do

00:27:07.410 --> 00:27:11.000
any marshalling of arguments between
the JS and the Objective-C world.

00:27:11.000 --> 00:27:13.370
That's all handled for
us by the binding system.

00:27:13.540 --> 00:27:16.400
So any object...
I believe any scalar type.

00:27:16.420 --> 00:27:17.520
Any scalar type, correct.

00:27:17.520 --> 00:27:20.510
Any scalar type or any object
can be passed back and forth.

00:27:20.560 --> 00:27:21.410
You don't deal with it.

00:27:21.410 --> 00:27:22.450
It just happens for free.

00:27:22.480 --> 00:27:23.000
Right.

00:27:23.000 --> 00:27:23.960
And same thing.

00:27:23.960 --> 00:27:25.500
So we just use NSStrings.

00:27:25.500 --> 00:27:27.000
Everything just works.

00:27:27.000 --> 00:27:28.910
And that's how you build a native code.

00:27:28.940 --> 00:27:31.700
Oh, let's show you what it looks
like inside of the code.

00:27:31.700 --> 00:27:34.890
So I'm going to go back to this guy,
validator gadget.

00:27:34.920 --> 00:27:38.540
So you'll see in our HTML file,
it's going to be real simple.

00:27:38.540 --> 00:27:40.750
There's just going to be a...

00:27:42.200 --> 00:28:21.800
[Transcript missing]

00:28:27.110 --> 00:28:28.470
Thank you, Andy.

00:28:28.680 --> 00:28:28.980
OK.

00:28:28.980 --> 00:28:31.320
So there's a couple tips
we'd like to get across.

00:28:31.320 --> 00:28:34.280
This is the type of stuff-- well, first,
let me tell you something.

00:28:34.450 --> 00:28:37.630
Andy and I, when we came to this project,
knew absolutely, what,

00:28:37.630 --> 00:28:39.230
less than zero HTML.

00:28:39.380 --> 00:28:42.740
We knew basically something with a
.html extension went to a web browser.

00:28:42.740 --> 00:28:44.790
So we had no experience in HTML.

00:28:44.820 --> 00:28:47.580
I think we had both had maybe a
little experience in JavaScript.

00:28:47.680 --> 00:28:50.290
So we're basically doing the
same type of learning that

00:28:50.310 --> 00:28:51.920
you may or may not be doing.

00:28:51.920 --> 00:28:55.370
So we came across a couple of
tips that really helped us out.

00:28:55.440 --> 00:28:58.240
One way we debug mostly is
with alerts and exceptions.

00:28:58.340 --> 00:29:01.690
Both alerts and exceptions in the
dashboard layer go to the console.

00:29:01.710 --> 00:29:04.870
So you can always go and look at your
console and find errors and whatnot.

00:29:04.880 --> 00:29:08.120
The exceptions only go to your
console for the WWDC build.

00:29:08.120 --> 00:29:10.070
In the future,
they would not go there because

00:29:10.150 --> 00:29:11.390
that would flood the end user.

00:29:11.490 --> 00:29:14.200
But it's helpful if you have a runway,
especially if you have something like

00:29:14.200 --> 00:29:16.880
an event handler that keeps throwing
an exception that keeps happening.

00:29:16.900 --> 00:29:19.340
You can find it really quickly
in something like this.

00:29:19.430 --> 00:29:22.340
One of the other things we added,
primarily for development,

00:29:22.340 --> 00:29:25.250
is the ability to reload your gadget
inside of the dashboard layer.

00:29:25.380 --> 00:29:27.510
All you have to do is
bring up the dashboard,

00:29:27.640 --> 00:29:30.350
select it, hit Command-R,
and all the HTML will reload.

00:29:30.380 --> 00:29:34.060
This makes it really easy just to
go into your HTML if you need to.

00:29:34.080 --> 00:29:37.520
Change some CSS, change some HTML,
change some JavaScript, whatever,

00:29:37.520 --> 00:29:39.080
hit Reload, and bam, it's right there.

00:29:39.080 --> 00:29:39.700
It's instantaneous.

00:29:39.770 --> 00:29:40.780
It's great.

00:29:40.830 --> 00:29:42.800
So it's a quick way to test changes.

00:29:42.800 --> 00:29:48.630
OK, so now we've shown writing a plug-in,
Andy writing a plug-in over here.

00:29:48.670 --> 00:29:51.220
And so if you're like Andy,
you might have some

00:29:51.220 --> 00:29:52.860
issues with your code.

00:29:52.920 --> 00:29:55.340
It might crash or something else,
or you might need to debug something.

00:29:55.340 --> 00:29:56.000
Just relentless.

00:29:56.050 --> 00:29:58.530
All right.

00:29:58.660 --> 00:30:01.580
So unfortunately,
it's a little hard to debug these things.

00:30:01.580 --> 00:30:05.190
It's unfortunate for you,
unfortunate for the end user.

00:30:05.340 --> 00:30:07.510
What happens is the server is
launching the client process.

00:30:07.530 --> 00:30:10.200
You don't have access to the
server or the client process.

00:30:10.230 --> 00:30:14.020
You're only writing these gadgets,
which are in HTML,

00:30:14.020 --> 00:30:17.370
or these plug-ins being loaded
in by the client process.

00:30:17.430 --> 00:30:20.060
So you need to find the
PID to get to those processes

00:30:20.130 --> 00:30:21.600
to attach to them via GDB.

00:30:21.660 --> 00:30:23.430
I'm not going to go too deep
into attachments with GDB,

00:30:23.500 --> 00:30:25.320
but we can show you that later.

00:30:25.320 --> 00:30:27.470
So you need to find it.

00:30:27.490 --> 00:30:30.530
Unfortunately,
that doesn't show up in Top or

00:30:30.540 --> 00:30:31.950
any of the normal Unix tools.

00:30:32.030 --> 00:30:34.760
It does show up in some
higher level tools we have.

00:30:34.770 --> 00:30:37.890
We have a great utility in application
utilities called Activity Monitor.

00:30:38.000 --> 00:30:40.610
If you double click on that,
you'll find that the name of

00:30:40.610 --> 00:30:43.730
your gadget is something like
dashboard-- it's something,

00:30:43.740 --> 00:30:45.020
name a gadget dashboard client.

00:30:45.080 --> 00:30:46.500
You will see that in this PID.

00:30:46.570 --> 00:30:49.340
So you can go there, look at it,
get the PID, and then attach.

00:30:49.590 --> 00:30:51.890
The other thing that you're going
to maybe have trouble with in this

00:30:51.890 --> 00:30:55.300
environment is that the dashboard
layer takes over your whole screen.

00:30:55.300 --> 00:30:57.210
So it's very hard to
GDB it at the same time.

00:30:57.220 --> 00:30:59.360
In fact, almost impossible.

00:30:59.370 --> 00:31:02.480
So dual machine debugging is the
best way to go at that point.

00:31:02.480 --> 00:31:05.560
Until one of you writes us a GDB gadget.

00:31:05.710 --> 00:31:07.670
.

00:31:08.310 --> 00:31:09.190
and Andrew Kahn.

00:31:09.460 --> 00:31:10.200
Yeah, that would be really cool.

00:31:10.200 --> 00:31:11.200
Eric Schmidt: All right.

00:31:11.200 --> 00:31:15.200
I quote PowerBook,
"We really want that gadget." Okay.

00:31:15.200 --> 00:31:16.200
Okay.

00:31:16.200 --> 00:31:20.440
So, another thing,
this is just a shortcoming in

00:31:20.440 --> 00:31:23.160
the system we have right now.

00:31:23.160 --> 00:31:26.040
We load automatically things
until the library gadgets and

00:31:26.040 --> 00:31:28.600
library gadgets/library gadgets,
we do not do this once

00:31:28.610 --> 00:31:29.680
the Dashboard is loading.

00:31:29.700 --> 00:31:30.990
So that's only when it starts up.

00:31:31.000 --> 00:31:33.490
So if you dump something there,
it's not going to

00:31:33.490 --> 00:31:35.160
automatically load for you.

00:31:35.160 --> 00:31:36.620
What you can do is what
Andy kind of showed before,

00:31:36.620 --> 00:31:38.880
you can either double-click on them,
brings up the Dashboard layer,

00:31:38.880 --> 00:31:39.720
or you can drag them.

00:31:39.720 --> 00:31:41.210
Then they're added,
then both the Config bar,

00:31:41.210 --> 00:31:43.880
the Dashboard server,
everybody knows about them.

00:31:44.010 --> 00:31:45.000
Okay.

00:31:45.000 --> 00:31:46.720
Let's go to the next slide.

00:31:47.100 --> 00:31:47.990
Oh, another thing.

00:31:48.070 --> 00:31:50.530
Part of this,
you're all familiar with Crash Reporter,

00:31:50.530 --> 00:31:51.960
probably, or maybe not.

00:31:51.960 --> 00:31:54.750
Crash Reporter gives you this great
way to get backtraces on code plug-ins

00:31:54.870 --> 00:31:56.680
or anything else that are crashing.

00:31:56.680 --> 00:32:00.940
Unfortunately, for a developer,
no background applications,

00:32:00.940 --> 00:32:02.730
Crash Reporters are actually shown.

00:32:02.730 --> 00:32:03.840
They're all hidden.

00:32:04.100 --> 00:32:06.490
So what you need to do is
go to another utility called

00:32:06.530 --> 00:32:09.980
Crash Reporter Press inside of
developer application utilities.

00:32:09.980 --> 00:32:12.920
And there's, I think,
a radio button that says developer.

00:32:13.020 --> 00:32:15.450
As soon as you hit that,
any background application

00:32:15.450 --> 00:32:18.570
will then show Crash Reports,
and that will help you debug.

00:32:20.360 --> 00:32:22.070
There's a great thing
that the AppDate team,

00:32:22.080 --> 00:32:24.740
I'm sorry, there's a great thing that
the WebKit team added,

00:32:24.810 --> 00:32:26.010
too many kit teams at Apple.

00:32:26.020 --> 00:32:28.470
It's called a debug menu,
and you see here the

00:32:28.500 --> 00:32:30.000
command to turn that on.

00:32:30.000 --> 00:32:33.990
It's, I think, defaults right,
com.apple.safariinclude debug menu.

00:32:34.000 --> 00:32:35.700
This is a great tool.

00:32:35.700 --> 00:32:41.280
In fact, the Safari team added, I think,
a new menu called JavaScript Console.

00:32:41.280 --> 00:32:44.430
The JavaScript Console will be really
helpful for tracking down exceptions and

00:32:44.430 --> 00:32:46.170
whatnot inside of your JavaScript code.

00:32:46.180 --> 00:32:48.680
It also has snippet editors and whatnot.

00:32:48.680 --> 00:32:50.080
That will be talked
about in other sessions.

00:32:50.410 --> 00:32:54.440
The other thing they added, by the way,
is the ability to make the Safari window.

00:32:54.440 --> 00:32:56.890
I know this is kind of flaky,
but it allows you to make the

00:32:56.890 --> 00:32:58.840
Safari window look like the dashboard.

00:32:58.840 --> 00:33:02.460
So it turns off background drawing,
makes the window transparent,

00:33:02.460 --> 00:33:04.880
so you can basically
see a web page floating.

00:33:04.880 --> 00:33:07.380
So you can get an idea of
what your gadget looks like.

00:33:07.380 --> 00:33:07.830
It's really great.

00:33:07.840 --> 00:33:09.860
It just takes away, makes it look like a,
it's really kind of funny.

00:33:09.860 --> 00:33:10.650
Actually, maybe we could show that.

00:33:10.680 --> 00:33:14.400
For those of you not familiar
with Unix programming,

00:33:14.400 --> 00:33:16.600
and you need to make your
plug-in root like we're talking

00:33:16.600 --> 00:33:18.910
about for security reasons,
here's the command to do it if you

00:33:18.910 --> 00:33:20.230
need to do it from the command line.

00:33:20.300 --> 00:33:21.160
Or you can build this root.

00:33:21.190 --> 00:33:22.670
There's a lot of alternatives there.

00:33:22.680 --> 00:33:23.780
All right.

00:33:23.780 --> 00:33:25.380
So there are tips.

00:33:25.400 --> 00:33:28.970
We have a lot of sessions coming up
that will help you write gadgets.

00:33:28.980 --> 00:33:31.360
Most of them are the
WebKit-related sessions.

00:33:31.360 --> 00:33:32.100
You kind of see them here.

00:33:32.100 --> 00:33:33.240
I'm not going to go into them.

00:33:33.260 --> 00:33:35.960
I think the Building Visually
Complect Webpages especially

00:33:35.960 --> 00:33:37.410
will be interesting for you.

00:33:39.750 --> 00:33:41.290
All right.

00:33:41.420 --> 00:33:43.100
We also have a reference library.

00:33:43.100 --> 00:33:47.100
I think we have lots of
examples on disk in the SDK.

00:33:47.100 --> 00:33:48.260
We have documentation.

00:33:48.260 --> 00:33:49.220
There's tutorials.

00:33:49.280 --> 00:33:55.360
There's an interesting
picture gadget in there.

00:33:55.380 --> 00:33:55.870
That's what's done.

00:33:55.880 --> 00:33:58.860
It's actually done by one of our
documentation people who picked

00:33:58.860 --> 00:34:01.800
this up and did it in two days,
to give you an idea.

00:34:01.800 --> 00:34:04.530
I think you guys can do the
same thing for the contest.

00:34:05.990 --> 00:34:07.820
And there's two books.

00:34:07.890 --> 00:34:10.490
There's two books that Andy and I think
we sleep with these books at this point,

00:34:10.490 --> 00:34:10.900
right?

00:34:10.900 --> 00:34:12.950
I sleep with these books.

00:34:12.960 --> 00:34:15.570
These books are great.

00:34:15.570 --> 00:34:17.320
These books really help us
out if you're starting out.

00:34:17.320 --> 00:34:19.600
The Definitive Guide by David Plannigan,
JavaScript,

00:34:19.600 --> 00:34:21.120
and the Cascading Style Sheets.

00:34:21.120 --> 00:34:23.160
These will really help you out
learning how to write HTML,

00:34:23.160 --> 00:34:25.370
learning how to use CSS,
incorporating all that.

00:34:28.140 --> 00:34:29.200
All right.

00:34:29.310 --> 00:34:30.440
We also have a lab.

00:34:30.540 --> 00:34:32.260
We kind of went through
this really kind of quickly,

00:34:32.260 --> 00:34:34.160
and it's kind of hard
to kind of take it in.

00:34:34.230 --> 00:34:36.620
So what we're going to have is
a lab today from 12:00 to 5:00,

00:34:36.670 --> 00:34:39.410
where Andy and myself
and the WebKit team,

00:34:39.800 --> 00:34:41.860
Richard Williamson, David Hyatt,
and maybe a few others will

00:34:41.860 --> 00:34:43.980
be around to help you out,
answer any questions,

00:34:44.000 --> 00:34:45.100
step you through stuff.

00:34:45.210 --> 00:34:47.600
We're your bitch for
the day until 5 o'clock.

00:34:47.710 --> 00:34:48.070
5:00?

00:34:48.100 --> 00:34:48.860
5 o'clock.

00:34:49.040 --> 00:34:49.470
Right.

00:34:49.480 --> 00:34:52.460
So we're going to be there till 3:00.

00:34:52.460 --> 00:34:53.800
We'll be drinking heavily after 3:00.

00:34:53.800 --> 00:34:54.280
Yeah, yeah.

00:34:54.300 --> 00:34:56.380
Something like 4:00, right.