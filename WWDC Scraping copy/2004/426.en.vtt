WEBVTT

00:00:13.840 --> 00:00:21.340
Welcome to session 426,
HTML editing with Web Kit.

00:00:21.600 --> 00:00:25.380
I am Ken Kocienda and I work
on the Safari team working

00:00:25.490 --> 00:00:26.980
on HTML editing this year.

00:00:28.790 --> 00:00:32.400
And so the first question you
may have when thinking about

00:00:32.400 --> 00:00:34.660
editing and looking at it is,
well, how did we do it?

00:00:34.970 --> 00:00:37.630
How did we add editing to Web Kit?

00:00:37.630 --> 00:00:41.510
Well, we extended the Web Kit APIs that
we introduced here at the

00:00:41.510 --> 00:00:43.780
developer conference last year.

00:00:43.780 --> 00:00:46.080
Very, very simple, very,
very straightforward.

00:00:46.080 --> 00:00:48.670
We just took those
APIs and extended them,

00:00:48.670 --> 00:00:50.100
adding and editing.

00:00:50.560 --> 00:00:53.400
So then the next question
is maybe you're asking is,

00:00:53.590 --> 00:00:54.880
well, why did we do this?

00:00:54.970 --> 00:00:57.390
Why, you know,
of all the things that we could

00:00:57.390 --> 00:01:01.340
possibly do with web technology,
you know, why did we choose editing as

00:01:01.340 --> 00:01:03.090
the thing to focus on next?

00:01:03.230 --> 00:01:05.040
Well, the answer is very simple.

00:01:05.090 --> 00:01:08.270
We want Mail.app to use HTML as
its format for rich text.

00:01:10.090 --> 00:01:15.910
Steve Jobs mentioned--
Glad you like that.

00:01:16.140 --> 00:01:19.220
And as Steve Jobs mentioned
in the keynote on Monday,

00:01:19.220 --> 00:01:22.470
this is a feature to really,
really help us interoperate out there

00:01:22.560 --> 00:01:26.860
on the internet with folks using
mailers on a variety of platforms.

00:01:26.900 --> 00:01:28.230
And so thanks.

00:01:28.370 --> 00:01:30.730
That's all I have today.

00:01:33.430 --> 00:01:36.190
I figure it's Friday, you know,
you've seen a lot of slides,

00:01:36.250 --> 00:01:39.360
lots of transitions and things, you know,
probably sick to take a look at that.

00:01:39.480 --> 00:01:42.100
Well, you know, really, you know,
nice WWDC slide.

00:01:42.160 --> 00:01:43.760
Well, anyway.

00:01:43.900 --> 00:01:46.400
It is a developer conference,
so I figure, well,

00:01:46.400 --> 00:01:47.560
what about the developers?

00:01:47.560 --> 00:01:48.060
Right?

00:01:48.060 --> 00:01:49.940
Well, this whole thing, editing,
whatever.

00:01:49.980 --> 00:01:52.690
So I figured we could do a little Q&A.

00:01:55.900 --> 00:02:03.120
Well, OK, so now the real content here,
HTML editing.

00:02:03.410 --> 00:02:07.990
And an important thing I want to
say before I get into the real guts

00:02:07.990 --> 00:02:14.250
of it is that HTML editing will be
available on Tiger with Safari 2.0,

00:02:14.250 --> 00:02:18.740
and it will be available
in Safari 1.3 on Panther.

00:02:22.200 --> 00:02:25.500
So everything that I'm talking
about here today will be

00:02:25.500 --> 00:02:27.450
available on the two releases.

00:02:27.770 --> 00:02:32.000
There's other Safari 1.3 is already
available for you to download.

00:02:32.000 --> 00:02:34.810
There's a developer preview,
I think is what we're calling it on,

00:02:34.850 --> 00:02:37.390
you know, through your developer account.

00:02:37.430 --> 00:02:39.100
Okay, so that's really, really important.

00:02:39.210 --> 00:02:44.100
Everything that you see here today
will be available on Tiger and Panther.

00:02:44.110 --> 00:02:48.790
Now, really starting to get into it here,
when we thought about HTML editing,

00:02:48.790 --> 00:02:50.610
we figured we have really two audiences.

00:02:50.710 --> 00:02:54.860
There are application developers,
people who want to take, you know,

00:02:55.030 --> 00:02:57.790
take a view,
slap it in their application,

00:02:57.800 --> 00:03:01.420
and do editing in that
application and have the result

00:03:01.420 --> 00:03:03.600
be HTML when you're all done.

00:03:03.610 --> 00:03:07.000
And then there's also web page developers
taking an application like Safari,

00:03:07.000 --> 00:03:10.120
it already exists,
and then developing content that

00:03:10.120 --> 00:03:14.000
can be viewed in Safari and then
including editing in that content.

00:03:14.070 --> 00:03:16.940
So there's really two audiences,
and as you see as we go,

00:03:17.000 --> 00:03:20.380
as I'll go through the presentation,
there will be something for you to do.

00:03:20.440 --> 00:03:22.970
There's something for each of you,
you know,

00:03:23.060 --> 00:03:24.200
depending on which audience you are.

00:03:24.200 --> 00:03:28.200
Many of you may be both, so in that case,
there's no falling asleep then.

00:03:28.200 --> 00:03:32.850
Okay, so now for application developers,
we want you to be able to use a web

00:03:32.850 --> 00:03:35.500
view just like in an S-text view,
okay?

00:03:35.500 --> 00:03:40.000
And then you will go forward and
program with that with Objective-C.

00:03:40.000 --> 00:03:43.170
Now, for web developers,
use an application, as I said,

00:03:43.170 --> 00:03:48.040
like Safari, and your focus will really
be much more in JavaScript,

00:03:48.040 --> 00:03:50.280
you know,
what can you do with JavaScript and

00:03:50.280 --> 00:03:53.220
how can you kind of get in there
and start doing neat editing

00:03:53.540 --> 00:03:56.580
things and without really having,
again,

00:03:56.580 --> 00:03:59.700
direct access to the host application.

00:03:59.700 --> 00:04:01.600
So there's something in
there for both of you.

00:04:01.600 --> 00:04:06.300
Now, as that last slide shows, the real,
the core of this is Safari,

00:04:06.310 --> 00:04:07.900
the Safari technology.

00:04:07.900 --> 00:04:10.200
You've probably seen this
slide a whole bunch of times.

00:04:10.200 --> 00:04:15.600
WebKit is really the engine inside
of Safari that makes everything go,

00:04:15.600 --> 00:04:22.000
but what you probably haven't
seen is that Behind this--

00:04:28.620 --> 00:04:30.340
Oh, I hate that guy.

00:04:30.340 --> 00:04:31.650
Oh, that's me, right?

00:04:31.740 --> 00:04:34.200
Anyway, so yeah.

00:04:34.200 --> 00:04:36.520
I'm going to leave that up
there a little bit so we get a

00:04:36.530 --> 00:04:37.730
little more footage on that one.

00:04:37.800 --> 00:04:38.040
Okay.

00:04:38.040 --> 00:04:40.460
Okay.

00:04:40.650 --> 00:04:40.650
So now...

00:04:41.790 --> 00:04:44.140
So now there's a bunch of cool stuff.

00:04:44.140 --> 00:04:47.070
All seriousness,
there's a bunch of cool stuff

00:04:47.180 --> 00:04:50.580
that we're doing in HTML editing.

00:04:50.580 --> 00:04:53.290
And really a good way to think about
it is that there's three different

00:04:53.290 --> 00:04:56.700
areas where there is this cool stuff,
where that cool stuff lives.

00:04:56.770 --> 00:04:59.570
There's WebView in Web Kit,
there's JavaScript,

00:04:59.790 --> 00:05:03.080
and then there's Document Object Model,
the DOM.

00:05:03.090 --> 00:05:06.880
So now in WebView, just at a very,
very high level,

00:05:06.880 --> 00:05:10.710
you may have sort of gotten
a hold of this idea by now,

00:05:10.720 --> 00:05:12.330
WebView can now edit.

00:05:12.330 --> 00:05:15.870
And there's lots of new API in
WebView that allows you to

00:05:15.980 --> 00:05:17.500
control that editing process.

00:05:17.500 --> 00:05:20.770
And then something which you as,
of course, developers are going to

00:05:20.770 --> 00:05:23.760
be using this in your app,
I hope, will be really interested in is

00:05:23.760 --> 00:05:27.610
that there's a Web Kit editing
delegate so that you can get control

00:05:27.610 --> 00:05:33.560
of the editing process and make it
do what you want for your program.

00:05:33.630 --> 00:05:36.380
There's also a lot of interesting
new stuff in JavaScript.

00:05:36.380 --> 00:05:37.610
There's a new selection object.

00:05:37.670 --> 00:05:40.570
I know that's already been asked
for -- by folks coming up and

00:05:40.570 --> 00:05:42.920
asking questions in other sessions.

00:05:43.000 --> 00:05:45.700
There are other editing
extensions which we'll go into,

00:05:45.700 --> 00:05:49.510
and there's also improved --
the DOM underneath when you

00:05:49.520 --> 00:05:53.860
call into it with lots of bug
fixes and new things in the DOM.

00:05:53.860 --> 00:05:57.680
Speaking of the DOM,
there is full DOM Level 2

00:05:58.150 --> 00:06:00.410
support now available to you.

00:06:00.700 --> 00:06:03.770
I know that's something that a
lot of you asked about last year

00:06:03.770 --> 00:06:05.100
at the developer conference.

00:06:05.100 --> 00:06:06.400
I want access to the DOM.

00:06:06.400 --> 00:06:07.530
Well, now you have it.

00:06:07.880 --> 00:06:10.500
And you have it through
an Objective-C binding.

00:06:10.500 --> 00:06:14.400
And we've also included support for many,
many popular extensions.

00:06:14.470 --> 00:06:18.540
I'll go into this in more detail
and tell you really what's

00:06:18.540 --> 00:06:20.630
in there later in the talk.

00:06:20.870 --> 00:06:21.130
Okay.

00:06:21.230 --> 00:06:23.690
So now with that as a
sort of an introduction,

00:06:23.690 --> 00:06:26.650
for the rest of the talk,
really what I'd like to do

00:06:26.660 --> 00:06:30.430
is step through a number
of HTML editing scenarios,

00:06:30.430 --> 00:06:35.020
things that you may want to do as
developers of apps and as web pages and

00:06:35.020 --> 00:06:37.550
getting all that stuff working together.

00:06:37.960 --> 00:06:40.390
And so, again,
you're going to step through a

00:06:40.390 --> 00:06:44.240
bunch of these scenarios throughout
the rest of the talk and really

00:06:44.350 --> 00:06:46.460
spend a lot of time looking at code.

00:06:46.580 --> 00:06:51.390
So now the first one I'd like to
talk about is editing with WebView.

00:06:51.390 --> 00:06:54.780
Now, there's a new method on
WebView that if you're--an

00:06:54.780 --> 00:06:55.430
application--if you're using WebView,
you're going to have

00:06:55.430 --> 00:06:55.640
to do a lot of things.

00:06:55.640 --> 00:06:55.640
And so, again,
I'll go into that in just a moment.

00:06:55.640 --> 00:06:55.640
And I'll talk about that later.

00:06:55.640 --> 00:06:55.640
So, again, I'll talk about that later.

00:06:55.640 --> 00:06:55.680
And so, again,
I'll talk about that later.

00:06:55.740 --> 00:06:56.150
And so, again,
I'll talk about that later.

00:06:56.150 --> 00:06:56.590
And so, again,
I'll talk about that later.

00:06:56.590 --> 00:06:57.480
And then,
if you're an application developer, okay,

00:06:57.480 --> 00:06:59.150
one of those two audiences
is really now speaking to you

00:06:59.150 --> 00:07:00.890
as application developers.

00:07:01.130 --> 00:07:03.470
There's a new method on WebView,
setEditable.

00:07:03.850 --> 00:07:07.480
You pass in yes and every page
that then will be loaded in

00:07:07.480 --> 00:07:09.840
that WebView will be editable.

00:07:09.960 --> 00:07:11.170
This is very, very simple.

00:07:11.170 --> 00:07:13.040
It's just like one big switch, ka-chunk.

00:07:13.200 --> 00:07:15.030
Every page will then be editable.

00:07:15.100 --> 00:07:17.230
So let's take a quick look at that.

00:07:17.230 --> 00:07:19.350
Let's look at the demo machine.

00:07:21.430 --> 00:07:22.390
Okay.

00:07:22.390 --> 00:07:32.030
So I have a little program here that
I'll be using a bunch to demo editing.

00:07:32.330 --> 00:07:34.510
And I tell you what,
why don't we even just start that up

00:07:34.510 --> 00:07:37.750
and let you see what this is going
to do before we get into the code.

00:07:37.840 --> 00:07:40.520
So now here's a very,
very simple application.

00:07:40.590 --> 00:07:42.190
And all this has in it is a web view.

00:07:42.190 --> 00:07:42.730
That's it.

00:07:42.740 --> 00:07:45.660
It's the simplest little nib
file you could have basically.

00:07:45.790 --> 00:07:46.830
And let's see here.

00:07:46.880 --> 00:07:50.310
As you'll see what I'm going to
try to type -- I cannot type.

00:07:50.390 --> 00:07:51.920
I'm a very bad typist.

00:07:51.960 --> 00:07:56.340
So it starts to -- the behavior
of the application is very,

00:07:56.340 --> 00:07:59.060
very much like a text editor.

00:07:59.060 --> 00:08:03.740
I can come back here and undo,
bring up the font panel,

00:08:03.960 --> 00:08:07.750
bring up the color panel,
and my selection there.

00:08:07.910 --> 00:08:09.860
I cannot -- yes, it's true.

00:08:10.070 --> 00:08:14.430
I really cannot -- let's make
that a little bit bigger.

00:08:14.570 --> 00:08:15.780
I cannot type.

00:08:15.780 --> 00:08:18.620
So you see, very, very simple.

00:08:18.620 --> 00:08:22.470
So now let's, you know,
sort of like even do a little undoing

00:08:22.470 --> 00:08:29.200
there and even just save this out
just to show that this is actually,

00:08:29.920 --> 00:08:31.690
actually truly HTML.

00:08:32.830 --> 00:08:35.880
So it's just putting in HTML,
putting in some spans.

00:08:35.890 --> 00:08:38.930
You see the style there, making it red,
and so forth.

00:08:39.140 --> 00:08:41.040
Very, very simple, very,
very straightforward.

00:08:41.040 --> 00:08:43.420
And the output, of course, is HTML.

00:08:43.420 --> 00:08:49.270
Now, as I said in that slide before
I transitioned over to the demo,

00:08:49.270 --> 00:08:54.480
here's this, for this app,
the call-out for the document

00:08:54.480 --> 00:08:59.210
framework in App Kit will
call out to this code here.

00:08:59.220 --> 00:09:02.760
Window controller did load nib,
and all I'm doing right there is, boom,

00:09:02.760 --> 00:09:03.220
right?

00:09:03.250 --> 00:09:04.980
Web view, set editable, yes.

00:09:04.980 --> 00:09:09.920
Every page that then is loaded into
that application will be editable.

00:09:09.920 --> 00:09:13.780
And as an example of that, it's not just,
you know, creating a... a new

00:09:13.780 --> 00:09:15.720
document and typing in it.

00:09:16.100 --> 00:09:19.920
I can also just come over here and,
you know,

00:09:19.920 --> 00:09:23.510
load a page off the... off the web.

00:09:23.980 --> 00:09:28.180
And as you can see,
I could just start coming in

00:09:28.180 --> 00:09:34.650
here and start editing Yahoo,
which I think is pretty neat.

00:09:38.210 --> 00:09:40.300
So now I'm going to take
a walk in the wild side.

00:09:40.300 --> 00:09:42.580
I don't actually know that
this is 100% going to work.

00:09:42.690 --> 00:09:46.620
But just to show you that this really is,
this is not just a parlor trick, folks.

00:09:46.750 --> 00:09:49.570
I'm going to select all
and change the font.

00:09:49.650 --> 00:09:54.190
So this isn't as fully optimized
as we would like it yet.

00:09:54.200 --> 00:09:58.500
So I've still got a little
job security going here.

00:09:58.720 --> 00:10:00.960
But as you can see,
just select all on Yahoo,

00:10:01.060 --> 00:10:04.110
change the font,
and every font on the page changes.

00:10:04.110 --> 00:10:06.990
I can just go back and undo it,
and there you go.

00:10:07.240 --> 00:10:08.890
Okay, so this is real, real stuff here.

00:10:08.990 --> 00:10:10.150
Real, real editing.

00:10:10.180 --> 00:10:12.720
Okay, so now...

00:10:14.150 --> 00:10:17.930
This is the point here, however,
that it just very, very simply,

00:10:17.930 --> 00:10:20.400
one line of code,
every page that's loaded

00:10:20.400 --> 00:10:21.790
then becomes editable.

00:10:21.800 --> 00:10:24.970
Okay, so let's go back to the slides,
if you will.

00:10:25.690 --> 00:10:27.600
So it's really,
really simple to get up and running

00:10:27.600 --> 00:10:31.270
with this and go and try it out,
see what the features are.

00:10:31.280 --> 00:10:35.820
Now, sort of the next step is that now
you've got that WebView in your

00:10:35.900 --> 00:10:38.790
app and it can load content and
you can start editing with it.

00:10:38.880 --> 00:10:42.220
Well, what are some of the things that
you can do with it as a developer to

00:10:42.220 --> 00:10:44.190
start changing that content around?

00:10:44.200 --> 00:10:48.130
And I'd like to start
talking about all of those,

00:10:48.130 --> 00:10:52.450
and I'd like to call those
WebView editing methods,

00:10:52.520 --> 00:10:52.700
right?

00:10:52.770 --> 00:10:56.460
These high-level editing
methods available on WebView.

00:10:56.460 --> 00:10:59.650
And these methods operate
on the current selection,

00:10:59.650 --> 00:11:01.180
and they're undoable.

00:11:01.180 --> 00:11:06.320
There's some work that we did to hook
in these methods into the undo system,

00:11:06.320 --> 00:11:09.000
and I think in a way that
I think you'll find very,

00:11:09.000 --> 00:11:11.400
very convenient to use as a programmer.

00:11:11.400 --> 00:11:13.630
So now, here's an example of one.

00:11:13.640 --> 00:11:16.520
WebView,
replace selection with markup string,

00:11:16.520 --> 00:11:20.050
and you could just pass a little
hunk of HTML in that string.

00:11:20.060 --> 00:11:22.650
And the WebView will go
and hand that string off.

00:11:22.780 --> 00:11:25.640
And you can go back to the parser and
put that content right into the document

00:11:25.750 --> 00:11:27.340
in the place where you have a selection.

00:11:27.440 --> 00:11:29.790
Now,
beneath there are sort of the steps that,

00:11:29.830 --> 00:11:32.030
again,
are really pretty high level of what

00:11:32.180 --> 00:11:34.000
is actually going on on your behalf.

00:11:34.100 --> 00:11:37.730
When you make a call like that,
selection is saved off.

00:11:37.820 --> 00:11:38.750
The selection is removed.

00:11:39.050 --> 00:11:39.860
Markup is parsed.

00:11:39.940 --> 00:11:40.780
Insert new content.

00:11:40.780 --> 00:11:43.620
And you could just then very,
very quickly undo that,

00:11:43.620 --> 00:11:46.010
and all of that will
get undone and put back.

00:11:46.170 --> 00:11:51.500
Now, here is some of those
high-level editing methods.

00:11:51.540 --> 00:11:52.740
That really looks.

00:11:52.740 --> 00:11:55.640
Like all of them that are
available to you on WebView.

00:11:55.640 --> 00:11:58.090
And so how many people
are paying attention,

00:11:58.090 --> 00:11:58.630
right?

00:11:58.750 --> 00:12:03.160
You are having fun now.

00:12:04.610 --> 00:12:05.000
No.

00:12:05.000 --> 00:12:05.220
OK.

00:12:05.510 --> 00:12:08.180
Well, anyway,
so now let's take a little bit

00:12:08.180 --> 00:12:10.960
of look at how these guys work.

00:12:19.210 --> 00:12:20.100
Okay.

00:12:20.280 --> 00:12:23.000
So now,
what I'm going to do is just close

00:12:23.000 --> 00:12:26.300
that down and create a new document,
show you how this works before we

00:12:26.400 --> 00:12:27.860
go in and take a look at the code.

00:12:27.860 --> 00:12:30.830
So I've got this little demo menu
here that I've put in the app,

00:12:30.830 --> 00:12:32.670
and I'm just going to start jabbering.

00:12:32.690 --> 00:12:35.670
And I've got a keyboard command there,
so I can just start jabbering,

00:12:35.670 --> 00:12:38.920
and all it's going to do is just put
nonsense content into the document.

00:12:38.920 --> 00:12:43.130
And then I've got another one here,
it's a jabber in style,

00:12:43.340 --> 00:12:47.670
and so I can do that a couple
times and get some stuff in there.

00:12:47.680 --> 00:12:51.970
And, you know, just undo,
I'm just going to undo that, I can redo,

00:12:52.270 --> 00:12:55.130
so I'm at number five there now,
I had a bunch more than that,

00:12:55.130 --> 00:12:57.400
so now I'm at 13 and undoing,
you see I go back to five,

00:12:57.400 --> 00:12:58.890
so the whole undo thing works.

00:12:58.890 --> 00:13:01.840
Just very, very simple, very,
very straightforward thing to do.

00:13:01.840 --> 00:13:05.490
So now let's take a look at
how that works in the code.

00:13:07.360 --> 00:13:10.100
So that menu command is just
hooked up to this one liner there.

00:13:10.150 --> 00:13:13.760
I just have this function
here to just go and pick out,

00:13:13.820 --> 00:13:16.460
you know,
make this little random jabber string out

00:13:16.460 --> 00:13:18.930
of a dictionary that I put into the app.

00:13:19.010 --> 00:13:20.540
And it's just very, very simple.

00:13:20.540 --> 00:13:21.420
There's one little call.

00:13:21.420 --> 00:13:22.770
You'll see the one beneath it.

00:13:22.770 --> 00:13:25.020
I just make a little markup
string just right there.

00:13:25.020 --> 00:13:27.420
It's just hard-coded, color red,
font style italic.

00:13:27.420 --> 00:13:30.270
Just get that jabber string in there,
and then I make that other call

00:13:30.280 --> 00:13:32.200
replace selection with markup string.

00:13:32.540 --> 00:13:36.080
So, again, it's just really,
really simple to now, you know,

00:13:36.150 --> 00:13:38.610
put make the WebView editable
as a first step,

00:13:38.640 --> 00:13:41.530
and then as a second step,
start getting in there and start

00:13:41.930 --> 00:13:43.860
modifying the content around.

00:13:43.860 --> 00:13:45.140
It's very, very simple.

00:13:45.140 --> 00:13:48.730
You'll see that there's no code in here
to actually make those things undoable.

00:13:48.730 --> 00:13:50.440
That's just done for you.

00:13:50.560 --> 00:13:54.480
So, again, you know, go back to this app,
you know, go and jabber and undo.

00:13:54.480 --> 00:13:56.960
You didn't need to do
anything to make that work.

00:13:57.030 --> 00:14:00.260
It's just a nice convenience for
you if your needs are simple.

00:14:00.260 --> 00:14:03.180
And, of course, as I said,
that operates on the current selection.

00:14:03.180 --> 00:14:04.780
So I have select all.

00:14:04.780 --> 00:14:07.110
You know, I can just come in here,
and it just operates on the...

00:14:07.120 --> 00:14:09.090
Each one of these operate
on the current selection.

00:14:10.510 --> 00:14:13.990
So again, just a very, very simple,
straightforward way to start

00:14:13.990 --> 00:14:20.190
getting into the code and start
making things happening in editing.

00:14:23.200 --> 00:14:28.900
Let's go back to the slides, please.

00:14:29.060 --> 00:14:31.730
Okay, so now,

00:14:32.300 --> 00:16:25.800
[Transcript missing]

00:16:28.200 --> 00:16:28.920
Can you see all that?

00:16:29.180 --> 00:16:33.520
Now, these are all of the
classes that we've added.

00:16:33.520 --> 00:16:37.200
It's really all of those classes
from all of those DOM modules.

00:16:37.280 --> 00:16:40.660
So it's over 100 new classes that
you can use from Objective-C.

00:16:40.660 --> 00:16:45.380
There's a lot of stuff you can get
into and start manipulating documents.

00:16:45.380 --> 00:16:48.560
Now, not only that,
now all of that stuff on that

00:16:48.560 --> 00:16:52.280
last slide was all of the
stuff from the standard IDL.

00:16:53.360 --> 00:16:56.870
And as the W3C put it out, but of course,
you know, if you've done any, you know,

00:16:56.880 --> 00:16:59.300
programming on the web at all,
you know that there are

00:16:59.360 --> 00:17:02.730
non-standard extensions,
sort of DOM level zero stuff and things

00:17:02.780 --> 00:17:04.880
that have come in even after that.

00:17:05.090 --> 00:17:07.030
And we're supporting
some of those as well,

00:17:07.110 --> 00:17:09.460
and there's a listing
of those on the screen.

00:17:09.460 --> 00:17:11.880
So there's lots and lots of
good DOM stuff to get into.

00:17:13.820 --> 00:17:17.650
This is just a very,
very small look at what we're doing.

00:17:17.700 --> 00:17:21.660
Taking the source of a document,
going over and making

00:17:21.660 --> 00:17:23.160
the DOM tree out of it.

00:17:23.200 --> 00:17:26.460
And that's really all the DOM is,
is a tree made up of nodes.

00:17:26.540 --> 00:17:29.400
And I just want to introduce a
little bit of terminology that I'll

00:17:29.440 --> 00:17:32.620
be using again for those of you who
might not be so familiar with it.

00:17:32.700 --> 00:17:37.350
DOM is a tree of nodes,
and some of those nodes are elements.

00:17:37.680 --> 00:17:39.440
Okay, now, what is an element?

00:17:39.440 --> 00:17:41.500
Well, an element is a node
that can have attributes,

00:17:41.500 --> 00:17:46.240
and attributes customize the elements,
just like the image tag has a source

00:17:46.820 --> 00:17:49.530
attribute and an alt attribute,
and of course,

00:17:49.530 --> 00:17:51.440
many others are available to you.

00:17:51.780 --> 00:17:53.650
Again,
so to just introduce some terminology

00:17:53.670 --> 00:17:55.450
there that I'll be using quite a lot.

00:17:55.680 --> 00:17:58.750
And then also,
sort of this first object that, you know,

00:17:58.770 --> 00:18:02.310
if you want to get into the DOM,
you start using it from Web Kit,

00:18:02.310 --> 00:18:06.680
this is the object that you really,
really need to get a handle on first.

00:18:06.800 --> 00:18:10.390
The DOM document, because it's the bridge
into the rest of the DOM.

00:18:10.390 --> 00:18:14.620
You know, the DOM being a tree,
of course, the document is going to be

00:18:14.690 --> 00:18:17.920
at the root of that tree,
and it's just going to be your way to get

00:18:17.920 --> 00:18:20.350
in and start interacting with the DOM.

00:18:20.360 --> 00:18:22.490
And of course,
that line of code underneath

00:18:22.490 --> 00:18:24.230
there is the way that you do that.

00:18:24.290 --> 00:18:27.260
WebViews mainframe,
get the DOM document off of that.

00:18:29.180 --> 00:18:30.100
Okay.

00:18:30.100 --> 00:18:32.700
So now here's just a little code
snippet and we'll be looking at

00:18:32.700 --> 00:18:35.460
a real world version of this,
but just to give you a little bit

00:18:35.460 --> 00:18:38.860
of an idea of what you can do,
get the DOM document there,

00:18:39.070 --> 00:18:43.310
create a node iterator,
just a way to just iterate over all

00:18:43.310 --> 00:18:47.500
of the nodes in the DOM and then
sort of do something with each node.

00:18:47.500 --> 00:18:50.310
So really, really simple,
just a few lines of code,

00:18:50.310 --> 00:18:52.780
you can start doing
some pretty neat things.

00:18:52.780 --> 00:18:55.010
So let's take a look at a demo of that.

00:18:57.740 --> 00:18:58.590
Okay.

00:18:58.590 --> 00:18:59.720
Quitting.

00:18:59.880 --> 00:19:02.910
I don't need that.

00:19:03.920 --> 00:19:06.270
Okay, so let's take a look
at an example of this.

00:19:06.290 --> 00:19:11.730
I'm just going to go back and...
I've got a good example here,

00:19:11.730 --> 00:19:11.730
I think.

00:19:13.150 --> 00:19:16.030
Go look at Pixar's website.

00:19:16.040 --> 00:19:17.850
I can't really wait for
this movie to come out.

00:19:17.980 --> 00:19:18.600
Okay.

00:19:18.640 --> 00:19:23.140
So now, all right, let me get rid of the
font and color stuff.

00:19:23.360 --> 00:19:25.100
All right.

00:19:25.260 --> 00:19:27.020
So now, back in my demo menu.

00:19:29.000 --> 00:19:31.830
What I've got here is a
little link inspector.

00:19:31.830 --> 00:19:34.940
And what this thing does,
it just iterates over

00:19:34.940 --> 00:19:37.830
the DOM and it goes,
you'll actually see

00:19:37.830 --> 00:19:40.780
that some of the text,
as I selected here in the inspector,

00:19:40.900 --> 00:19:41.880
is highlighting.

00:19:41.880 --> 00:19:43.860
It'll actually even highlight
the images in the document.

00:19:43.860 --> 00:19:46.810
I didn't really put the
images in the link menu there.

00:19:46.810 --> 00:19:49.180
I'm sorry,
I just didn't get around to it.

00:19:49.360 --> 00:19:52.250
But you see there, though,
that the content is

00:19:52.250 --> 00:19:54.300
selecting as you go in there.

00:19:54.300 --> 00:19:56.560
And let's take a look at how that's done.

00:19:58.900 --> 00:20:01.280
So now using the DOM,

00:20:04.920 --> 00:20:06.400
Okay.

00:20:06.540 --> 00:20:09.700
So now,
if we go and look at that code example

00:20:09.700 --> 00:20:13.580
that I had up there on the screen before,
this chunk of code here is really very,

00:20:13.580 --> 00:20:14.900
very much like it.

00:20:14.900 --> 00:20:16.820
It's very, very similar to what was
on the screen before.

00:20:16.820 --> 00:20:20.900
Very, very simple to go in and get
a hold of the DOM document,

00:20:20.900 --> 00:20:23.150
create a node iterator with it.

00:20:23.260 --> 00:20:24.800
You see that I've got
a couple of parameters.

00:20:24.800 --> 00:20:28.070
I only want to see elements,
only elements with attributes

00:20:28.070 --> 00:20:31.950
because obviously a DOM node,
if it's a link, it's got to have an href,

00:20:31.950 --> 00:20:34.880
so it's an element,
an href being an attribute.

00:20:34.910 --> 00:20:36.720
And now I have this little thing here.

00:20:36.720 --> 00:20:40.580
It's a DOM node filter, a very,
very simple little part of the

00:20:40.580 --> 00:20:41.960
code that we're making available.

00:20:41.960 --> 00:20:45.890
This filter will be consulted for
each DOM node that the iterator

00:20:45.890 --> 00:20:49.570
returns to see whether or not
the node is accepted or not.

00:20:49.780 --> 00:20:53.260
And you see here that all I'm doing is
asking whether or not the node name,

00:20:53.260 --> 00:20:55.720
again,
part of the API we're making available,

00:20:55.720 --> 00:20:56.430
is an A tag.

00:20:56.450 --> 00:20:58.160
And if it is, I accept it.

00:20:58.280 --> 00:21:00.030
If not, well, then not.

00:21:01.340 --> 00:21:04.130
I probably should have even
checked to see that the A had an

00:21:04.130 --> 00:21:08.720
href to make it really correct as
a link instead of just an anchor.

00:21:09.600 --> 00:21:11.740
You see,
that's really pretty simple to get going.

00:21:11.740 --> 00:21:13.300
And then, of course,
it just reloads the table.

00:21:13.300 --> 00:21:19.930
Now, to do the business of

00:21:20.630 --> 00:21:29.010
is the director of the Department of
Web Design at the University of Michigan.

00:21:29.010 --> 00:21:29.010
He's the director

00:21:29.560 --> 00:21:32.540
I wrote the code,
but I don't even remember where I put it.

00:21:32.540 --> 00:21:35.960
I think I put that in this one here.

00:21:39.390 --> 00:21:41.150
Yeah, there it is.

00:21:41.300 --> 00:21:42.700
Okay.

00:21:42.810 --> 00:21:46.140
Every time I click in the table, again,
just a little hunk of DOM,

00:21:46.190 --> 00:21:49.950
go in there and create a DOM range.

00:21:49.950 --> 00:21:55.980
And again, one of the objects
we're making available,

00:21:55.980 --> 00:21:58.300
select that node and now call one
of the WebView methods that...

00:21:58.570 --> 00:22:02.060
Sort of again, sort of bridges the world
of Web Kit and the DOM.

00:22:02.100 --> 00:22:06.490
Just go in and say pass off that
range and select that DOM range.

00:22:06.620 --> 00:22:22.660
is very, very simple sort of stuff.

00:22:22.660 --> 00:22:22.660
It just takes a few lines of
code to make these things happen.

00:22:22.660 --> 00:22:22.660
And again,
kind of the interesting ways that,

00:22:22.660 --> 00:22:22.660
you know,
the DOM starts getting glued together

00:22:22.660 --> 00:22:22.660
to the world of Objective-C and,
you know,

00:22:24.280 --> 00:22:25.200
and Web Kit.

00:22:25.230 --> 00:22:30.160
There's one other thing that I would like
to point out to you before we move on,

00:22:31.110 --> 00:22:31.300
and that's

00:22:32.130 --> 00:22:35.940
You'll notice here in this call
to create the DOM node iterator

00:22:36.320 --> 00:22:39.960
that we have these bare colons.

00:22:39.960 --> 00:22:43.410
And this was the strategy
that we took for mapping the

00:22:43.430 --> 00:22:47.660
W3C IDL interfaces into Web Kit.

00:22:47.660 --> 00:22:52.480
Of course, now naturally,
the IDL is really sort of more of a,

00:22:52.770 --> 00:22:55.220
you know,
it would probably map pretty well

00:22:55.320 --> 00:22:58.930
into a language like C++ or Java or
something like that just because of the,

00:22:58.930 --> 00:23:00.950
you know, the way the arguments are
listed in Objective-C,

00:23:00.980 --> 00:23:02.790
you know,
has sort of another way of doing

00:23:02.790 --> 00:23:04.740
that with the labels and the colons.

00:23:04.870 --> 00:23:07.860
And so we just decided to leave that off.

00:23:07.870 --> 00:23:10.270
So that's just one thing that
you should kind of be aware of

00:23:10.410 --> 00:23:12.710
when you're looking at the API,
when you're starting to go and

00:23:12.780 --> 00:23:15.770
look at all of the headers that,
well, just be aware of that.

00:23:15.770 --> 00:23:18.450
It's not really very complicated
but just something worthy of note.

00:23:18.460 --> 00:23:19.610
Okay.

00:23:19.610 --> 00:23:20.760
Good.

00:23:20.760 --> 00:23:25.430
Can we have the slides back now?

00:23:28.170 --> 00:23:31.480
Okay,
so we looked at a little bit of DOM,

00:23:31.480 --> 00:23:37.550
and now let's look at a little
bit at using the DOM and using all

00:23:37.550 --> 00:23:40.210
this code to start styling text.

00:23:41.920 --> 00:23:48.710
Now, all of the styles in editing in
Web Kit are all based on CSS.

00:23:49.470 --> 00:23:54.680
Okay.

00:23:54.890 --> 00:23:54.890
And here's the--here's

00:24:01.400 --> 00:25:37.200
[Transcript missing]

00:25:37.520 --> 00:25:40.650
Two different little
snippets of CSS there.

00:25:40.830 --> 00:25:43.590
And so, just very, very simply put,
the computed style is the

00:25:43.590 --> 00:25:45.590
style you see on the screen.

00:25:45.670 --> 00:25:47.410
Okay,
so we're going to provide you access to

00:25:47.410 --> 00:25:51.550
get into that as well with this method.

00:25:52.430 --> 00:25:55.210
So you can get a
DOMCSS style declaration,

00:25:55.250 --> 00:25:57.260
computed style for element,
and it will return it to you.

00:25:57.260 --> 00:26:01.480
And then you can query that style
and find out exactly what the

00:26:01.510 --> 00:26:04.770
text looks like on the screen.

00:26:09.160 --> 00:26:10.100
Okay.

00:26:10.100 --> 00:26:14.840
And then here's another example of one
of those high-level editing methods.

00:26:14.840 --> 00:26:17.230
Very, very simple to work
with the style system.

00:26:17.230 --> 00:26:19.040
You want to make some text blue.

00:26:19.300 --> 00:26:22.200
Well, you just build up that
little CSS style snippet,

00:26:22.230 --> 00:26:25.220
style declaration with text,
little method to create

00:26:25.220 --> 00:26:28.140
a style declaration,
and then just go and apply that style,

00:26:28.140 --> 00:26:31.370
and it'll operate on the selection,
as I said.

00:26:32.590 --> 00:26:33.500
Okay.

00:26:33.500 --> 00:26:38.420
You could also, as an alternative,
use the DOM to access style attributes.

00:26:38.550 --> 00:26:40.700
So again,
this is just now going in and using

00:26:40.700 --> 00:26:45.610
the straight-up DOM element get
attribute style and set attribute.

00:26:46.830 --> 00:26:49.140
The style attributes,
you're setting it directly.

00:26:49.140 --> 00:26:51.500
So you have a bunch of
options for working with that.

00:26:51.500 --> 00:27:02.740
And now let's do a demo of this.

00:27:11.650 --> 00:27:16.160
Okay, so I have a,
just a very simple document here

00:27:16.160 --> 00:27:19.640
and I have in my demo window,
I have a little style inspector.

00:27:19.640 --> 00:27:23.600
So you can see that the idea is very,
very similar to what we had before.

00:27:23.690 --> 00:27:27.500
It's just going to go through
all of the elements in the

00:27:27.500 --> 00:27:30.990
document and start telling me
some style information about it.

00:27:31.060 --> 00:27:35.090
So now if you see that as
I go and I select this span,

00:27:35.090 --> 00:27:37.320
of course you can't see
the span in the document,

00:27:37.320 --> 00:27:42.160
but there is actually a span just around
that little bit of text in the document.

00:27:42.160 --> 00:27:45.030
And so if now, if I just go and type in
here a little bit of CSS,

00:27:45.090 --> 00:27:47.560
this is all hooked up to
just go and make that,

00:27:47.680 --> 00:27:49.290
go and make that red.

00:27:49.400 --> 00:27:54.980
I can take this span here and
say font family times and that

00:27:55.040 --> 00:27:57.900
will update and become times.

00:27:57.910 --> 00:27:59.860
So just very, very simple.

00:27:59.860 --> 00:28:04.360
Again, CSS is the,
is the way that we're going

00:28:04.360 --> 00:28:07.060
to be styling things in,
in the document.

00:28:07.060 --> 00:28:08.910
So now you can also see
that if I click on this,

00:28:09.050 --> 00:28:11.080
if I come over here and
make something bold,

00:28:11.200 --> 00:28:13.930
well, I get a new bold element in the,
in the style inspector.

00:28:13.940 --> 00:28:16.000
So again, there's,
it's kind of this interesting

00:28:16.000 --> 00:28:18.450
combination in a way of,
of using CSS,

00:28:18.450 --> 00:28:23.520
but there is then some other things,
and this is something that really

00:28:23.520 --> 00:28:25.960
we would like some feedback on.

00:28:25.960 --> 00:28:28.730
It's just that, you know,
in order to be fully compatible,

00:28:28.730 --> 00:28:33.450
you know, we want to be able to,
you know, use this in mail and write up a

00:28:33.490 --> 00:28:37.400
mail message and send this mail
message off and have other HTML and

00:28:37.400 --> 00:28:42.340
HTML files that are HTML renderers,
other HTML engines work with it.

00:28:42.340 --> 00:28:44.850
So instead of saying
font-weight-bold there,

00:28:44.850 --> 00:28:48.420
we're thinking that for some things we
want to use sort of the more traditional,

00:28:48.630 --> 00:28:54.610
sort of old style way of styling things.

00:28:54.630 --> 00:28:57.450
And so we, you know,
starting to make some choices on this,

00:28:57.530 --> 00:28:59.090
but of course as you'll
see in a little bit,

00:28:59.090 --> 00:29:01.700
a little bit later that
with our delegates code,

00:29:01.850 --> 00:29:05.000
you can exercise some control over this.

00:29:05.400 --> 00:29:09.490
So let's just take a little bit of a look
at how this is done in the code itself.

00:29:17.650 --> 00:29:20.930
Okay, really pretty simple.

00:29:21.050 --> 00:29:22.000
It's just going in.

00:29:22.070 --> 00:29:25.650
When I typed into the table itself,
I was using just the straight-up

00:29:25.650 --> 00:29:31.000
DOM to set the style attribute,
as you can see.

00:29:31.360 --> 00:29:41.310
and, ah, there's one more thing
I can show you here.

00:29:41.310 --> 00:29:41.310
So now if I come down here,
you'll see that

00:29:41.950 --> 00:29:49.040
This sort of little text area on the
bottom here is starting to show-- you

00:29:49.040 --> 00:29:50.700
can see that the color is changing.

00:29:50.760 --> 00:29:53.290
And that's all about computed style.

00:29:55.460 --> 00:29:59.510
So as you can see now,
this is the hunk of

00:29:59.740 --> 00:30:01.500
code that is doing that.

00:30:01.500 --> 00:30:02.950
You see computed style for element.

00:30:02.950 --> 00:30:08.360
And now I am just going and getting
the property value from the style

00:30:08.360 --> 00:30:09.880
and then just building up a string.

00:30:09.880 --> 00:30:13.280
Not particularly elegant programming,
but you can see that it is just

00:30:13.490 --> 00:30:16.330
pretty simple to get in there and
start working with the computed

00:30:16.430 --> 00:30:20.000
style for an element based on
something like is selected in a table.

00:30:20.000 --> 00:30:23.030
Pretty simple to get in there
and start working with that.

00:30:26.230 --> 00:30:27.260
Okay.

00:30:27.260 --> 00:30:28.920
Okay, good.

00:30:29.080 --> 00:30:31.040
Can we have the slides back, please?

00:30:37.510 --> 00:30:42.000
So now, as I just mentioned,
we're going to be making some

00:30:42.030 --> 00:30:46.480
choices about how to apply markup
based on some things that you ask,

00:30:46.480 --> 00:30:53.400
particularly when you use one of
these high-level editing functions.

00:30:53.400 --> 00:30:56.240
So now,
this is going to be some information

00:30:56.240 --> 00:31:00.120
about how you can get in there and
start modifying what it is that we

00:31:00.120 --> 00:31:05.110
choose to do so that it can really
work for you in the way that you want.

00:31:05.250 --> 00:31:08.420
And there's two kinds of
editing delegate methods,

00:31:08.460 --> 00:31:11.710
ones that are going to ask you,
"Should I do this?"

00:31:11.710 --> 00:31:13.310
And then you can answer.

00:31:13.310 --> 00:31:16.120
And those that are just going to
tell you about things that happen,

00:31:16.120 --> 00:31:17.900
like for instance,
when the selection changes.

00:31:19.890 --> 00:31:22.320
So now, ask methods, again,
are all about pending changes.

00:31:22.320 --> 00:31:25.630
We'll call out to you and put you
in control of whether or not the

00:31:25.680 --> 00:31:27.520
change will actually take place.

00:31:27.520 --> 00:31:29.040
And here's just a little diagram.

00:31:29.040 --> 00:31:32.630
The WebView will come over and ask you,
as the editing delegate, now, of course,

00:31:32.850 --> 00:31:36.080
you have the option to do nothing
and not implement anything.

00:31:36.080 --> 00:31:38.600
And then we'll just, again,
go forward and do a default behavior.

00:31:38.600 --> 00:31:42.500
So the editing delegate is, you know,
you can just implement as much

00:31:42.500 --> 00:31:46.040
or as little as you want in
sort of standard Cocoa fashion.

00:31:46.540 --> 00:31:48.940
Now, if you do choose to implement
an editing delegate method,

00:31:49.000 --> 00:31:50.260
you can do one of three things.

00:31:50.260 --> 00:31:53.340
You can say, well, yes, go ahead,
I approve that change,

00:31:53.380 --> 00:31:54.440
go ahead and make it.

00:31:54.700 --> 00:31:57.480
You can say no,
it's just basically a straight up veto,

00:31:57.610 --> 00:31:58.510
don't do that.

00:31:58.640 --> 00:32:01.860
Or you can do,
take an alternative action and return no.

00:32:01.860 --> 00:32:05.430
So we'll present to you a kind
of a change that we want to make,

00:32:05.500 --> 00:32:09.140
and you can actually go and make
a sort of a different change,

00:32:09.320 --> 00:32:12.200
rejecting the change
that we proposed to you.

00:32:12.380 --> 00:32:14.850
So now, here are the,
is a listing of things

00:32:14.910 --> 00:32:16.500
that we're going to do.

00:32:16.520 --> 00:32:20.740
So we're going to be asking you
whether editing should begin and end,

00:32:20.820 --> 00:32:25.380
so forth, changing the typing style,
whether the selection should change

00:32:25.380 --> 00:32:29.400
off of a particular DOM range,
whether we should insert a node or should

00:32:29.400 --> 00:32:32.870
insert a markup string and so forth,
whether certain content

00:32:32.870 --> 00:32:34.220
should be deleted.

00:32:34.220 --> 00:32:35.660
So there's quite a number of things.

00:32:35.660 --> 00:32:38.090
You can get a lot of work
done with that stuff,

00:32:38.100 --> 00:32:40.800
and let's take a little
bit of a look at that now.

00:32:54.210 --> 00:33:04.370
Okay.

00:33:04.370 --> 00:33:05.520
Okay, so actually I need to -- oops,
return, yes, return, no.

00:33:05.520 --> 00:33:05.520
Okay, so now -- I

00:33:08.720 --> 00:33:13.070
You'll see here now that what I've
done is there's a delegate call

00:33:13.190 --> 00:33:14.900
for whether you should insert text.

00:33:15.030 --> 00:33:18.000
And all this is called,
this is called when you type.

00:33:18.010 --> 00:33:19.700
You can see I'm such a good typist.

00:33:19.960 --> 00:33:23.400
And very, very simple.

00:33:23.400 --> 00:33:31.700
If you would like to make,
change the app to be a read-only,

00:33:33.910 --> 00:33:34.560
Very, very simple.

00:33:34.560 --> 00:33:36.580
No typing now.

00:33:36.600 --> 00:33:40.360
So now,
it's actually kind of better for me.

00:33:40.360 --> 00:33:40.720
No bugs.

00:33:40.780 --> 00:33:41.750
No bugs this way.

00:33:43.990 --> 00:33:45.660
100% perfect.

00:33:45.700 --> 00:33:48.420
OK, so now,
that's pretty simple and straightforward.

00:33:48.420 --> 00:33:52.740
Now, let's take an alternative action.

00:33:52.840 --> 00:33:56.750
So now you'll see that what I'm going
to do is return this alternative action.

00:33:56.900 --> 00:33:58.230
And all I'm going to do
is do something very,

00:33:58.230 --> 00:33:58.780
very simple.

00:33:58.780 --> 00:34:01.860
I'm going to look at the
text that's passed in,

00:34:01.920 --> 00:34:06.980
see if it's either the number 1, 2, or 3,
and just replace that with

00:34:07.110 --> 00:34:09.170
text instead and return no.

00:34:09.600 --> 00:34:10.390
So we'll see that.

00:34:10.490 --> 00:34:14.860
Let's compile that up and see that work.

00:34:15.990 --> 00:34:20.600
So you see, you know,
typing goes on as usual,

00:34:20.600 --> 00:34:24.400
but if I type a number one, it does one,
two, or three.

00:34:24.400 --> 00:34:25.770
I'm not that fast of a typist.

00:34:25.800 --> 00:34:27.060
Just look, one finger.

00:34:27.060 --> 00:34:31.060
And so that's just very, very simple.

00:34:32.720 --> 00:34:35.030
So is that for the
code or for the typing?

00:34:35.040 --> 00:34:37.570
I don't know.

00:34:38.380 --> 00:34:41.520
And again, just really,
really important to, you know,

00:34:41.520 --> 00:34:44.890
we feel to give you the kind of
control that you need to actually

00:34:44.890 --> 00:34:48.670
make this so that if you think we're
dumb in the kind of choices we make,

00:34:48.730 --> 00:34:50.130
you can kind of fix it.

00:34:50.140 --> 00:34:55.980
So lots and lots of
delegate methods available.

00:34:56.010 --> 00:34:57.260
Can we go back to the slides, please?

00:35:00.120 --> 00:35:02.900
So again, you know,
lots and lots of control for you,

00:35:03.050 --> 00:35:06.000
selection changes,
whether style should be applied.

00:35:06.000 --> 00:35:09.790
You could apply an alternative
style if you don't want any B tags,

00:35:09.800 --> 00:35:14.010
if you want to make a document that is
only using the latest web standards,

00:35:14.110 --> 00:35:16.820
that would be your opportunity
to get in there and say,

00:35:16.880 --> 00:35:19.860
"I don't like the way Apple is
applying styles by default.

00:35:20.030 --> 00:35:23.580
Here's how I want you to
apply the style instead."

00:35:24.590 --> 00:35:24.830
Okay.

00:35:24.830 --> 00:35:26.010
So lots of good stuff there.

00:35:26.010 --> 00:35:26.240
Okay.

00:35:26.390 --> 00:35:27.110
Not another demo.

00:35:27.150 --> 00:35:30.160
We're going to go on to the--a
little bit more information

00:35:30.160 --> 00:35:31.460
about the editing delegate.

00:35:31.460 --> 00:35:35.340
So you may be asking,
"When do these ask methods get called?"

00:35:35.590 --> 00:35:41.810
And we've made a design decision to call
them only when the user initiates action.

00:35:41.960 --> 00:35:46.020
So it's--when you as a developer
are using the Web Kit API to say,

00:35:46.020 --> 00:35:48.280
"Replace node," we're not
going to call the delegate.

00:35:48.280 --> 00:35:51.220
That's the presumption being, "Well,
you just made this call.

00:35:51.220 --> 00:35:54.630
Why are we going to call you to ask
you whether or not it's okay to do this

00:35:54.640 --> 00:35:59.120
thing you just asked to do?" However,
when you're just responding to events,

00:35:59.140 --> 00:36:01.310
keyboard events and, you know,
menu events, you know,

00:36:01.310 --> 00:36:03.800
user interface gestures,
things like that, well,

00:36:03.860 --> 00:36:07.930
you will not have had an opportunity
to look at what might be done yet.

00:36:08.110 --> 00:36:10.960
So we're going to, you know,
respond to those events and sort of

00:36:11.050 --> 00:36:15.180
generate some stuff to do and then
give you an opportunity to look at it.

00:36:17.070 --> 00:36:19.160
Okay, so that's when those
ask methods get called.

00:36:19.210 --> 00:36:21.800
Now, those tell methods,
they are always sent.

00:36:21.800 --> 00:36:24.800
And we use the NS Notification
System to do that.

00:36:25.060 --> 00:36:27.830
And again,
in sort of standard Cocoa fashion,

00:36:27.890 --> 00:36:31.900
if you set a delegate on the WebView,
you get auto-registered for

00:36:31.900 --> 00:36:34.250
the notifications that we send.

00:36:34.260 --> 00:36:36.290
And here's what we have for that.

00:36:36.360 --> 00:36:40.080
So begin editing, end editing,
changing typing, changing the selection,

00:36:40.140 --> 00:36:40.980
and so forth.

00:36:41.920 --> 00:36:44.080
Okay,
and so let's do a little demo of that.

00:36:44.080 --> 00:36:48.370
It's actually, to be honest,
really already did a little demo of that.

00:36:49.940 --> 00:36:59.300
Back when I was looking at the
computed style for an element,

00:36:59.300 --> 00:36:59.300
the--

00:37:00.000 --> 00:37:15.800
[Transcript missing]

00:37:20.210 --> 00:37:24.910
Ah, yes, this is--excuse me,
so now when you arrow through

00:37:24.910 --> 00:37:29.600
the--through the document,
you'll see that I'm not in bold text.

00:37:29.720 --> 00:37:34.710
So what I've done here is I've made a
little--a little window for text style,

00:37:34.720 --> 00:37:38.990
sort of mimicking the basic sort of bold,
italic thing that you'd

00:37:39.030 --> 00:37:40.530
see in just a text editor.

00:37:40.540 --> 00:37:44.200
So you'll see as I--as I arrow
through the document that the--that

00:37:44.270 --> 00:37:45.770
the little bold button updates.

00:37:45.770 --> 00:37:48.740
So now if I kind of select some
of this and make that italic,

00:37:48.740 --> 00:37:53.100
you see that, you know,
that the buttons are updating

00:37:53.100 --> 00:37:57.280
just as I'm going through and
through the--through the document.

00:37:57.290 --> 00:38:00.290
And again, all this is happening is as
the selection is changing,

00:38:00.300 --> 00:38:02.760
it's throwing off a notification,
that little text window is

00:38:02.760 --> 00:38:05.610
listening to that notification,
looking at the computed style

00:38:05.610 --> 00:38:08.080
of the content and updating
the button accordingly.

00:38:08.150 --> 00:38:11.150
So it's--in many ways,
it's stuff that we've already looked

00:38:11.150 --> 00:38:14.920
at in code before and it just is,
you know, another little way to show you

00:38:15.030 --> 00:38:17.140
how to hook in and start getting
the kind of basic--the basic--the

00:38:17.160 --> 00:38:17.910
basic information that you need
to be able to get the content.

00:38:17.950 --> 00:38:18.840
So, you know, I'm going to go ahead and
show you how to do that.

00:38:18.920 --> 00:38:19.880
So, I'm going to go ahead and
show you how to do that.

00:38:19.920 --> 00:38:19.920
So, I'm going to go ahead and
show you how to do that.

00:38:19.920 --> 00:38:20.920
So, I'm going to go ahead and
show you how to do that.

00:38:20.920 --> 00:38:21.160
So, I'm going to go ahead and
show you how to do that.

00:38:21.160 --> 00:38:21.870
So, I'm going to go ahead and
show you how to do that.

00:38:21.920 --> 00:38:22.330
So, I'm going to go ahead and
show you how to do that.

00:38:22.330 --> 00:38:22.920
So,
I'm going to go ahead and show you how to

00:38:27.360 --> 00:38:28.800
Okay.

00:38:28.810 --> 00:38:30.400
Can I have the slides back, please?

00:38:30.510 --> 00:38:36.380
Okey-doke.

00:38:37.600 --> 00:38:42.770
So now, you've seen in the beginning of
the talk where I talked about

00:38:42.770 --> 00:38:46.940
the high-level editing operations
about how it just really took

00:38:47.080 --> 00:38:49.980
care of setting up undo for you.

00:38:50.160 --> 00:38:53.260
So now,
I think a pretty-- one of the interesting

00:38:53.260 --> 00:38:57.200
things that we thought of along the line
is that it should be possible for you

00:38:57.580 --> 00:39:03.540
to put together a bunch of DOM calls
and make them easily undoable as well.

00:39:03.660 --> 00:39:05.910
So that's what this section is about.

00:39:06.040 --> 00:39:11.380
and kind of just going over
again what I've already said.

00:39:11.430 --> 00:39:14.990
These methods use the DOM and their
compound operations more than one

00:39:14.990 --> 00:39:16.760
DOM call and that they're undoable.

00:39:16.760 --> 00:39:19.800
Again, just very,
very simple code example

00:39:19.800 --> 00:39:20.850
of how you could do it.

00:39:20.920 --> 00:39:23.500
You could call WebView delete
selection and then just call

00:39:23.500 --> 00:39:25.120
undo manager and tell it to undo.

00:39:26.590 --> 00:39:31.250
So now, when you want to start making
your own undoable DOM operations,

00:39:31.250 --> 00:39:33.850
it's really,
really important--this is really,

00:39:33.850 --> 00:39:38.190
really important for you to
know is that you have to put the

00:39:38.190 --> 00:39:41.020
DOM back exactly as it was before.

00:39:41.710 --> 00:39:45.840
Making the DOM equivalent
is just not good enough.

00:39:45.950 --> 00:39:47.750
And again,
this is just part of the reason,

00:39:47.760 --> 00:39:53.220
you know, the DOM is a tree and lots of
links between elements in the DOM.

00:39:53.610 --> 00:39:57.090
If you want to make undo work right,
you have to put things

00:39:57.180 --> 00:39:58.360
back exactly as they were.

00:39:58.360 --> 00:40:00.800
You can't just save off the text,
for instance,

00:40:00.800 --> 00:40:03.900
of a selection that you deleted,
create a new DOM node for that later,

00:40:03.900 --> 00:40:06.400
and reinsert that when you undo.

00:40:06.500 --> 00:40:09.310
You have to put back that same DOM node.

00:40:09.730 --> 00:40:11.160
So let's have a demo of this.

00:40:11.350 --> 00:40:14.760
Sounds like it might be sort of
complicated and odious to do,

00:40:14.760 --> 00:40:21.240
but in practice, it's really not so bad,
as I hope you will see.

00:40:23.560 --> 00:40:26.420
All righty.

00:40:26.590 --> 00:40:30.280
So let's look at an example of this.

00:40:38.040 --> 00:40:40.040
I'll give somebody a dollar
if they can name the song.

00:40:40.120 --> 00:40:46.510
But so now you'll see
that I have a little,

00:40:47.270 --> 00:40:49.100
menu command there that
just deletes a node.

00:40:49.100 --> 00:40:50.600
So I can just go and delete a node.

00:40:50.600 --> 00:40:55.090
And all this does, it's just a very,
very simple operation.

00:40:55.100 --> 00:41:00.720
All it's going to do is go and look
for a particular element in the DOM and

00:41:00.720 --> 00:41:02.440
just delete the last node from it.

00:41:02.440 --> 00:41:04.350
Just very, very simple stuff.

00:41:04.470 --> 00:41:07.900
But you see that the undo is
working and this is done just

00:41:07.900 --> 00:41:09.930
using straight up DOM calls.

00:41:13.140 --> 00:41:17.760
So let's take a look at the
code to make that happen.

00:41:18.120 --> 00:41:20.390
So I've got this--

00:41:22.170 --> 00:41:26.480
A little class here that's called
Undoable Delete Node Operation.

00:41:26.530 --> 00:41:27.490
Where did I get the name for that from?

00:41:27.540 --> 00:41:28.100
Okay.

00:41:28.140 --> 00:41:31.980
And so you see this class,
all that it does is hangs on to the web

00:41:32.410 --> 00:41:38.610
view and it's going to hang on to the
node that it actually went and deleted.

00:41:39.550 --> 00:41:42.480
And when I call the menu command,
it just creates one of

00:41:42.480 --> 00:41:45.830
these things and says,
do your action.

00:41:47.140 --> 00:41:50.340
And the action just goes
and gets the container.

00:41:50.600 --> 00:41:52.120
Again, this is kind of a canned example.

00:41:52.120 --> 00:41:57.040
It just goes and gets an element by
ID in that document that says container.

00:41:58.560 --> 00:42:02.260
and it's going to look
and get the last node,

00:42:02.280 --> 00:42:05.220
last child of that
container and retain it.

00:42:05.270 --> 00:42:08.150
This is again,
and so that I can put it back

00:42:08.290 --> 00:42:09.640
just the way that it was before.

00:42:11.230 --> 00:42:13.900
Now I remove it,
I retain it because the document is

00:42:13.900 --> 00:42:15.270
probably the only thing hanging onto it.

00:42:15.280 --> 00:42:19.440
It's probably the only thing
that has refed that node.

00:42:19.590 --> 00:42:21.400
So I retain it.

00:42:23.880 --> 00:42:28.420
and then make it undoable by just saying,
OK, we'll just go and register and

00:42:28.450 --> 00:42:32.440
undo with the target in just a
sort of standard Cocoa fashion.

00:42:32.460 --> 00:42:34.230
Undo action.

00:42:34.290 --> 00:42:36.950
So that when I go and undo,
I just go in and put that thing back.

00:42:37.180 --> 00:42:38.600
Just append node.

00:42:38.610 --> 00:42:42.160
Again, just using the Objective-C DOM.

00:42:42.170 --> 00:42:44.370
And register for redo.

00:42:44.570 --> 00:42:46.960
The redo itself,
it just takes the node out again.

00:42:46.960 --> 00:42:50.950
It's already got a reference to it,
so it's just even simpler

00:42:50.960 --> 00:42:52.240
than the action itself.

00:42:52.300 --> 00:42:54.060
Go and do that.

00:42:54.350 --> 00:43:00.390
The neat thing is you can delete
and you can go and do other things,

00:43:00.400 --> 00:43:05.400
and it all just works with the
undo system as you would expect.

00:43:05.400 --> 00:43:09.330
Just very, very simple and very,
very straightforward to start now

00:43:09.330 --> 00:43:13.960
wrapping your own custom DOM operations
and getting them to work with undo.

00:43:18.850 --> 00:43:20.440
Look, I even deleted it when I was done.

00:43:20.440 --> 00:43:21.480
Wow.

00:43:21.570 --> 00:43:23.550
That's careful programming, huh?

00:43:23.700 --> 00:43:27.010
Even--that's just, you know,
it's just--we do it because we care.

00:43:27.080 --> 00:43:28.160
Okay.

00:43:28.160 --> 00:43:32.840
Okay, great.

00:43:32.840 --> 00:43:34.350
That's what I have for that.

00:43:34.350 --> 00:43:36.270
Let's go back to the slides.

00:43:39.080 --> 00:43:40.800
Okay.

00:43:40.920 --> 00:43:46.360
So now there's a bunch of scenarios
we've gone through that are all about

00:43:46.440 --> 00:43:50.300
you as an application developer,
getting you interested,

00:43:50.390 --> 00:43:52.980
giving you some of the, you know,
a little bit of a taste

00:43:52.980 --> 00:43:54.610
of what's available.

00:43:55.150 --> 00:43:59.080
for taking this new technology and
putting it into your application.

00:43:59.190 --> 00:44:02.730
So now I'm going to switch gears a
little bit and start talking about

00:44:02.730 --> 00:44:06.180
what you can do as a web developer to
start working with this technology.

00:44:07.660 --> 00:44:09.840
It's all about making web pages editable.

00:44:09.930 --> 00:44:11.640
So, okay,
so now just stepping back a little

00:44:11.640 --> 00:44:15.430
bit to do a little DOM terminology,
HTML and DOM terminology.

00:44:15.510 --> 00:44:20.170
So that little HTML snippet there,
we have a block.

00:44:20.320 --> 00:44:21.270
That div is a block.

00:44:21.340 --> 00:44:22.630
Of course, P tags are blocks.

00:44:22.840 --> 00:44:23.610
Body is a block.

00:44:23.970 --> 00:44:26.140
And then we have an inline.

00:44:26.140 --> 00:44:29.420
That little B tag, that's a block.

00:44:29.630 --> 00:44:32.850
making that text bold, that's an inline,
right?

00:44:33.170 --> 00:44:37.040
So now, as we looked at before,
attributes, customize elements.

00:44:37.140 --> 00:44:40.560
Okay, so now,
content editable is an editing

00:44:40.560 --> 00:44:46.200
attribute that you can apply to a
block to make that block editable.

00:44:46.300 --> 00:44:47.150
Okay.

00:44:47.240 --> 00:44:49.130
It doesn't apply to inline,
so you can't put it on spans,

00:44:49.130 --> 00:44:52.000
you can't put it on B tags or image tags.

00:44:52.060 --> 00:44:53.920
You kind of need to maybe
make the image editable,

00:44:53.920 --> 00:44:55.970
but we're not doing that,
not this time around.

00:44:56.250 --> 00:45:00.320
And so content editable is
the little HTML attribute that

00:45:00.320 --> 00:45:05.020
you need to put on an element,
a block, block level element,

00:45:05.020 --> 00:45:07.620
like the body in this example.

00:45:07.620 --> 00:45:09.050
This whole document is editable.

00:45:09.050 --> 00:45:10.460
Content editable equals true.

00:45:10.460 --> 00:45:12.060
So here's just another example.

00:45:12.060 --> 00:45:16.000
The first line of text in
the body is not editable.

00:45:16.200 --> 00:45:20.140
Of course, that text inside that
content editable div is.

00:45:20.140 --> 00:45:20.730
Okay.

00:45:20.730 --> 00:45:22.860
So let's take a look at that.

00:45:33.940 --> 00:45:38.140
Okay, so in order to do this,
I have to use my favorite web browser,

00:45:38.170 --> 00:45:41.770
which is Safari.

00:45:41.770 --> 00:45:41.770
You may have...

00:45:42.600 --> 00:45:52.400
[Transcript missing]

00:45:53.300 --> 00:45:59.720
is the founder of WebKit.

00:45:59.720 --> 00:45:59.720
He's the founder of WebKit.

00:45:59.720 --> 00:45:59.720
He's the founder of WebKit.

00:45:59.720 --> 00:45:59.720
He's

00:45:59.970 --> 00:46:03.240
is editable and the bar is not.

00:46:03.410 --> 00:46:04.800
Poor bar.

00:46:04.860 --> 00:46:07.280
Okay,
so now I come up here and I can start

00:46:07.360 --> 00:46:10.930
typing in the wonderful way that I do.

00:46:11.300 --> 00:46:16.310
And of course the bar is not editable.

00:46:21.940 --> 00:46:24.570
Okay, so now if I were to just grab
that content editable out and

00:46:24.650 --> 00:46:27.540
put it on the body instead,
then lo and behold, of course,

00:46:27.550 --> 00:46:32.260
everything is editable,
including the bar text.

00:46:33.760 --> 00:46:34.610
Where's the build button?

00:46:34.620 --> 00:46:36.180
Maybe I can build that software.

00:46:36.180 --> 00:46:37.590
Yeah, let's type that in.

00:46:38.830 --> 00:46:44.010
Okay, so again,
just a really pretty simple example.

00:46:44.010 --> 00:46:44.010
So now,

00:46:48.730 --> 00:46:51.470
Let's see, let's,
let me save that example.

00:46:51.500 --> 00:46:56.900
Yeah,
let me save that example for a second.

00:46:56.940 --> 00:46:59.130
Can we go back to the
slides for a second?

00:47:04.010 --> 00:47:08.240
So now, you may be asking about
Content Editable and Set Editable.

00:47:08.300 --> 00:47:11.320
Well, as a developer,
which one--which one do you want to use?

00:47:11.630 --> 00:47:15.040
Which--what's,
you know--and the kind of a very

00:47:15.040 --> 00:47:20.020
simple way of thinking about it is
that Set Editable is for you if you're

00:47:20.020 --> 00:47:25.430
an app developer and Content Editable
is for you if you're a web developer.

00:47:25.430 --> 00:47:29.490
It's just sort of your hooks,
your sort of one-line hooks

00:47:29.490 --> 00:47:29.690
to get into the features
that editing makes available.

00:47:30.290 --> 00:47:32.290
Okay, so if you're an app developer,
you're probably not going to be

00:47:32.290 --> 00:47:34.790
interested in content editable because
you're going to be doing things

00:47:34.830 --> 00:47:37.550
in IB and writing Objective-C code.

00:47:38.530 --> 00:47:40.310
But as a web developer,
Content Editable is really

00:47:40.410 --> 00:47:41.300
sort of important for you.

00:47:41.300 --> 00:47:44.000
Now,
one interesting note about Set Editable,

00:47:44.000 --> 00:47:46.270
or actually three interesting
notes about Set Editable,

00:47:46.270 --> 00:47:48.980
is that the setting lasts
for the life of the web view.

00:47:48.980 --> 00:47:51.350
You throw that switch once,
and it's all done.

00:47:51.360 --> 00:47:52.730
You don't have to do anything else.

00:47:53.140 --> 00:47:56.170
An interesting thing about it, too,
is it doesn't alter the DOM.

00:47:56.170 --> 00:48:00.620
You might think that it's sort of a
naive sort of first cut at Set Editable.

00:48:00.620 --> 00:48:03.720
It just goes in and sticks
Content Editable in on the

00:48:03.720 --> 00:48:06.870
body tag of the document,
but it doesn't do that.

00:48:07.070 --> 00:48:10.560
It sort of does things sort of
underneath the covers in Web Kit.

00:48:10.750 --> 00:48:14.240
So the idea behind that is
that we want you to be able to

00:48:14.320 --> 00:48:19.410
load documents from the net,
for instance, into an editable web view,

00:48:19.410 --> 00:48:22.280
and then save it out,
and then not have it be

00:48:22.280 --> 00:48:23.120
editable by every single time.

00:48:23.120 --> 00:48:26.110
So we can do that with everybody who
might load that in some other app,

00:48:26.110 --> 00:48:28.380
which maybe is not an editor,
but just a viewer.

00:48:28.930 --> 00:48:33.300
One last thing is that setEditable
overrides any document attribute

00:48:33.300 --> 00:48:36.640
that may set contentEditable,
for instance, to false.

00:48:39.810 --> 00:48:40.080
Okay?

00:48:40.410 --> 00:48:42.300
So, Settable is, again, is a big switch.

00:48:42.300 --> 00:48:48.060
And, again, is used primarily for use
for you as app developers.

00:48:50.780 --> 00:48:52.400
Okay.

00:48:52.530 --> 00:48:56.390
So let's talk a little bit
about editing with JavaScript.

00:48:58.040 --> 00:49:02.800
So now we do have a new selection
object available in JavaScript.

00:49:02.800 --> 00:49:08.040
And we support these editing commands,
these JavaScript editing commands,

00:49:08.040 --> 00:49:10.120
which you may have seen before.

00:49:10.120 --> 00:49:13.520
These were made available first,
I believe, by Microsoft.

00:49:13.520 --> 00:49:17.140
The documentation that we used to figure
out what we're going to do with this

00:49:17.510 --> 00:49:21.040
feature is the Microsoft documentation
on editing commands for JavaScript.

00:49:21.090 --> 00:49:23.480
Now, the first one there,
that exec command,

00:49:23.530 --> 00:49:26.840
is one that we're going to look at
a little bit further in the demo.

00:49:26.840 --> 00:49:30.560
And here's an example of one,
one use of it.

00:49:30.570 --> 00:49:34.670
So now in JavaScript, of course,
you just get an element

00:49:34.670 --> 00:49:36.210
by ID using the DOM.

00:49:36.210 --> 00:49:37.470
You get a selection.

00:49:37.470 --> 00:49:38.490
You set the position.

00:49:38.490 --> 00:49:40.400
And now you just say
document exec command,

00:49:40.400 --> 00:49:42.410
insert text, and there you go.

00:49:42.700 --> 00:49:44.760
Now, the interesting thing--one of
the interesting things about

00:49:44.760 --> 00:49:49.010
this is that this works just like
the high-level editing commands

00:49:49.010 --> 00:49:50.900
that we looked at in Web Kit.

00:49:51.000 --> 00:49:53.860
It just operates on
the current selection.

00:49:54.600 --> 00:49:57.730
Okay, so that selection object
is really essential in many

00:49:57.730 --> 00:50:00.450
ways to making this work.

00:50:01.780 --> 00:50:02.700
Okay?

00:50:02.900 --> 00:50:07.840
And so these are the command
identifiers that we support.

00:50:07.900 --> 00:50:10.610
By command identifier,
insert text in this exec command

00:50:10.610 --> 00:50:12.410
example is a command identifier.

00:50:14.490 --> 00:50:18.020
So these are the command
identifiers that we support.

00:50:18.080 --> 00:50:21.320
You will note, if you were to go and do a
comparison with the command

00:50:21.320 --> 00:50:25.280
identifiers that Microsoft makes
available on their website,

00:50:25.330 --> 00:50:28.060
that this is only a selection of them.

00:50:29.650 --> 00:50:32.850
But these are the ones that
we found for right now,

00:50:32.860 --> 00:50:36.180
the ones that are going to be most
useful to us in sort of getting to

00:50:36.180 --> 00:50:37.590
where we want to go for this release.

00:50:40.640 --> 00:50:42.800
Okay, there's a bunch of neat
things that you can do there,

00:50:42.800 --> 00:50:44.120
and let's have a little demo of this.

00:50:44.120 --> 00:50:46.000
No, I don't want to close.

00:50:46.000 --> 00:50:47.760
Or maybe you do,
maybe you just kind of want to leave.

00:50:47.760 --> 00:50:49.120
We can just go to the closing now.

00:50:49.120 --> 00:50:51.440
Okay, so,

00:50:57.180 --> 00:50:59.430
Okay.

00:50:59.540 --> 00:51:02.880
So let's take a look at this.

00:51:03.010 --> 00:51:04.870
Wow, that's really exciting, isn't it?

00:51:04.940 --> 00:51:06.370
Wow.

00:51:06.460 --> 00:51:09.180
But what this is doing is
this actually starts as a

00:51:09.180 --> 00:51:11.340
much sort of simpler document.

00:51:11.540 --> 00:51:12.540
Let's take a look at this.

00:51:12.690 --> 00:51:19.790
And I've set this up so that I can
make each one of the JavaScript editing

00:51:19.790 --> 00:51:23.080
commands that I issue wait a little
bit before issuing the next one.

00:51:25.030 --> 00:51:28.840
And so that document, as you can see,
is completely built up using

00:51:28.840 --> 00:51:30.320
the JavaScript editing commands.

00:51:30.480 --> 00:51:33.940
As you see here down on the bottom--
I can make this even a little bit bigger.

00:51:33.940 --> 00:51:34.430
Yeah, I can.

00:51:34.440 --> 00:51:35.970
Let me make it bigger.

00:51:37.070 --> 00:51:37.500
Good?

00:51:37.560 --> 00:51:39.600
Good size?

00:51:39.670 --> 00:51:40.500
All right.

00:51:40.620 --> 00:51:43.660
So you can see the document
starts with just an empty div.

00:51:44.030 --> 00:51:46.000
There's nothing in it at all.

00:51:46.060 --> 00:51:48.780
And the onLoad handler in the
document just goes and says,

00:51:48.780 --> 00:51:50.500
you know, "Run editing demo."

00:51:52.180 --> 00:51:54.840
And all that it does is, you know,
starts going and, you know,

00:51:54.840 --> 00:51:57.300
I've got these character, you know,
type character command.

00:51:57.300 --> 00:52:02.120
It's really, you know,
it's a little bit...

00:52:03.990 --> 00:52:10.740
takes a little bit of looking to see
here let me just take off the wrap to see

00:52:11.120 --> 00:52:13.250
How that all works,
there's some stuff in there to

00:52:13.250 --> 00:52:15.160
make the delay work correctly,
but as you can see,

00:52:15.160 --> 00:52:18.600
it's just Document Exec Command,
Insert Text, and then I've got a

00:52:18.620 --> 00:52:20.790
CAN string that I'm inserting.

00:52:21.180 --> 00:52:22.140
So that's all it does there.

00:52:22.140 --> 00:52:23.800
You see the bold command.

00:52:23.930 --> 00:52:27.810
I've got it selecting all
and making everything bold.

00:52:29.070 --> 00:52:31.800
and blue document get it open by ID.

00:52:31.800 --> 00:52:37.570
You can see that not only can you
use the new JavaScript editing

00:52:37.830 --> 00:52:41.620
commands that we're making available,
the exec command and family,

00:52:41.620 --> 00:52:47.380
but you can also use just the
straight up sort of JavaScript DOM.

00:52:47.380 --> 00:52:51.750
Here's now some JavaScript CSS support
to just go in and just set the

00:52:51.750 --> 00:52:54.900
style on an element just by
using the JavaScript support

00:52:55.410 --> 00:52:56.980
that we have available.

00:52:57.240 --> 00:52:59.480
Setting something blue and that's it.

00:52:59.520 --> 00:53:02.850
So you see that I just go
in here and type a command,

00:53:02.850 --> 00:53:05.170
make it bold and then make it blue.

00:53:05.170 --> 00:53:07.100
That's all that it does.

00:53:09.430 --> 00:53:12.490
But I think you can see that
with the support for going in

00:53:12.620 --> 00:53:15.900
and making selections bold,
it'd be pretty simple to go in

00:53:15.900 --> 00:53:20.920
and make that sort of that little,
you know, bar, you know, bold, italic,

00:53:21.000 --> 00:53:24.280
underline,
maybe some font information up in there,

00:53:24.300 --> 00:53:29.210
and pretty simple to make
an editor in a web browser.

00:53:30.760 --> 00:53:33.630
That can support rich text editing.

00:53:33.750 --> 00:53:37.100
So now, going back to that other
demo that I skipped before,

00:53:37.100 --> 00:53:41.020
you know, something that, you know,
may be interesting to you is to say,

00:53:41.100 --> 00:53:44.730
well, okay, so now I've got an editable
widget in my document.

00:53:44.730 --> 00:53:46.850
Now, how do I get that content out?

00:53:46.850 --> 00:53:50.840
Let's say you want to make a little
blog poster or something and you want

00:53:50.840 --> 00:53:53.180
to have rich text post for your blog.

00:53:53.190 --> 00:53:55.210
So now you've got a content editable div.

00:53:55.280 --> 00:53:57.840
I mean, this is just the simplest
example that you can imagine.

00:53:57.840 --> 00:53:59.970
So now I type foo, foo in there.

00:54:00.730 --> 00:54:06.040
And now I just hit a button and
now I've got that content out.

00:54:06.040 --> 00:54:10.460
So just really, really simple to do that.

00:54:11.050 --> 00:54:16.450
Let's just go and take a look at that.

00:54:18.920 --> 00:54:21.640
No, not that one.

00:54:21.760 --> 00:54:27.430
Simple as can be,
you see that little submit

00:54:27.530 --> 00:54:30.840
button is not even a-- well,
it's a button on click submit.

00:54:31.030 --> 00:54:35.800
And so submit, all that it really does is
it gets the document by ID,

00:54:35.810 --> 00:54:39.910
the widget, and then the result,
and then just sets the inner

00:54:39.910 --> 00:54:41.600
HTML from one to another.

00:54:41.720 --> 00:54:46.240
So again, this new inner HTML support

00:54:46.620 --> 00:54:49.600
Just allows you to just go
and get the HTML that's inside

00:54:49.600 --> 00:54:50.740
one of your editing elements.

00:54:50.740 --> 00:54:53.520
And you could, of course,
I didn't do so here,

00:54:53.520 --> 00:54:56.480
but really just go forth and
then do a post and submit that

00:54:56.480 --> 00:54:59.270
up to a web server somewhere.

00:55:01.200 --> 00:55:03.740
really,
really just simple and easy to do.

00:55:03.790 --> 00:55:06.930
And of course,
that's the inner HTML of whatever

00:55:06.930 --> 00:55:10.730
is in that content editable widget.

00:55:10.790 --> 00:55:13.890
As you can see, right,
that widget was content editable.

00:55:17.160 --> 00:55:17.360
Okay.

00:55:17.360 --> 00:55:20.060
Good.

00:55:20.060 --> 00:55:21.010
Can we have the slides back?

00:55:21.030 --> 00:55:24.180
Okay.

00:55:24.180 --> 00:55:24.940
Closing.

00:55:28.700 --> 00:55:33.000
I think we've got a lot of interesting
stuff available in WebView,

00:55:33.010 --> 00:55:34.980
JavaScript, and in the DOM.

00:55:34.980 --> 00:55:38.140
Lots and lots of new interesting
stuff for you to start using.

00:55:38.140 --> 00:55:41.730
Again,
I want to say to you that all of the

00:55:41.750 --> 00:55:46.440
things that you've seen demoed today,
available Safari 2.0 and Tiger,

00:55:46.440 --> 00:55:48.500
Safari 1.3 on Panther.

00:55:48.500 --> 00:55:53.670
That Safari 1.3 release is already
available to you as a developer

00:55:53.670 --> 00:55:56.200
preview from the ADC site.

00:55:58.120 --> 00:56:02.610
And in the end, I think, well,
I think HTML editing is good.

00:56:09.700 --> 00:56:11.590
So now for more information
about all of this.

00:56:12.140 --> 00:56:17.720
See, how fast can you type?

00:56:18.260 --> 00:56:19.200
Is that fast enough?

00:56:19.280 --> 00:56:22.790
Well, really, to just step through
this here a little bit,

00:56:22.800 --> 00:56:26.400
there's lots of good information
available on editing.

00:56:26.400 --> 00:56:32.410
You'll see that last note there
is using Web Kit with scripting,

00:56:32.410 --> 00:56:36.040
some interesting stuff going
on in talks earlier this week.

00:56:36.040 --> 00:56:39.540
There's using the
document object model API.

00:56:39.540 --> 00:56:42.750
There's just a ton of new
API available there for you.

00:56:42.870 --> 00:56:45.660
If you've not used the DOM before and
you want to start getting into this,

00:56:45.660 --> 00:56:47.270
boy, there's a lot of neat stuff.

00:56:47.520 --> 00:56:49.310
And then there's simple code.

00:56:49.440 --> 00:56:51.510
The examples that I've
used up here on stage,

00:56:51.510 --> 00:56:56.250
I'll be working with some of our friends
to make this available to you so that you

00:56:56.250 --> 00:57:01.300
can download it and see what a bad coder
I am so that you can berate me next year.

00:57:04.830 --> 00:57:08.360
That's my manager's manager's
clapping for the bad coding.

00:57:08.360 --> 00:57:12.090
So this is my grand manager, right?

00:57:12.120 --> 00:57:19.270
So now, if you have questions,
here's a point of contact for you.

00:57:19.270 --> 00:57:21.850
If you have apps that you
want to start using this,

00:57:21.920 --> 00:57:25.930
you want to start getting into there,
you want to really, really get involved

00:57:25.930 --> 00:57:29.570
with what we're doing,
here's a good point of contact for you.

00:57:30.720 --> 00:57:34.940
And maybe we can hear some
of your valuable feedback.