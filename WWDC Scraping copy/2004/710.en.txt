---
Title:  Content Production: Ask the Experts
Year:   2004
Web:    https://nonstrict.eu/wwdcindex/wwdc2004/710/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Hi everybody, thank you very much for coming. This is an experiment for us. This is a full Q&A session and we've seen it work really, really well at other conferences. Before I sort of describe a little bit about the session itself, I'm going to describe what it isn't. So this is not the QuickTime feedback forum.

The QuickTime feedback forum is on Friday at 5 and that's where you can ask all the questions and sort of, "We'd love the product to do this." This session is more intended for, "Okay, we understand that the product doesn't do this. What's a good way around that?" Or, "As a content provider, we're trying to get this accomplished.

What are the potholes along that path? What are the best strategies?" And we are so lucky to have all of these folks both on the panel and in the audience. There's clearly dozens and dozens of experts. I see many people that we know quite well as experts in the field. My hope is that the way that this works is you'll come up and definitely want to use the microphone so that it's recorded accurately.

And ask the question and then we'll sort of take a second to figure out who can probably best answer the question. There may be times when it's somebody in the audience. And we've seen these sessions go completely haywire where then the audience is answering the audience's questions and the panelists just sort of disappear.

I'm kidding. But we'll start it off by having, I'll pass the mic down so that each of these folks can introduce themselves and their general area of expertise so that then the questions can be sort of formulated based on who's here. We don't have people from the pro applications product group, so in-depth questions on Final Cut Pro may be a little bit difficult.

But within this sort of spectrum and the people that we do have in the audience, hopefully we can answer a lot of your questions and get a good dialogue going on. And if there aren't a lot of questions, then it'll end quickly and that's that. So my email address should come up here. Never mind.

So if you've got feedback on how this might work better, give it to me and we'll sort of see if this session is worth doing over and over again. We've got a lot of these folks typically in the labs, but to have them all available at a fixed time here is something that we're really happy to try out. So with that, I'll hand it over to Ryan Lynch.

[Transcript missing]

I'm Eric Blampied. I spent a long time working at Apple on QuickTime's interactive stuff. Now I'm on my own doing a variety of things. Interactivity and mixing media, I'm really into taking lots of different kinds of media and putting them in the same movie. And it's also pretty fun to do things that require a lot of resources out of the server, a lot of getting data in and out, and that's all fun stuff. So that's me.

I'm John Healy with Akamai Technologies. Akamai is the content delivery partner for Apple. We deliver a lot of Apple streaming content as well as a broad variety of HTTP content as well. We work closely with Ryan, Glenn, and Dennis and their organizations in terms of getting Apple's content out on the web more effectively. Hi, I'm Alec Hendry from MTV Networks, UK and Ireland. My speciality is a lot of interactivity stuff. Now with QuickTime, mainly focusing on 2.5 and 3G video mobile content.

I'm Steve Gooley. I'm a writer for Apple and my specialty is HTML, stupid web tricks, and using the QuickTime player as a kind of Swiss army knife for QuickTime content. Ben Wagoner I am Ben Wagoner and I'm a compression nerd. Hi, I'm Mark Revis from Bluish. We design and develop a lot of interactive QuickTime, particularly with live stage, media players, that sort of thing.

Hi, I'm Michael Schaff. I do interactivity with Livestage. A lot of front-end and back-end stuff and loud, bright shoes. Hi, I'm Guillaume Yacineau and I'm the bridge between the developers and the programmers of Livestage. So I have to speak with those guys, try to translate in French, then to the developers to make the bridge.

All right, so let's have our first question. Excellent, go ahead. Adam Wilt, Omnion Video Networks. We're moving our file system over to that we can be compatible with Europe and Asia and everyone else. And our question is about encoding media paths in alias atoms and QuickTime files. Is there a recommended practice for encoding Unicode strings in alias atoms? UTF-8, UTF-16, double byte?

or if this is confusing to you guys as it is to us Any takers? Who's the taker? Can you speak a little bit more closely to the microphone so that we can hear the question again? I can. Yes, we're writing our own QuickTime files. The alias atoms that point to media files within the QuickTime wrapper are normally encoded in a file system dependent fashion. We're moving our entire file system over to Unicode, and I'm curious what the best way is to put Unicode strings into alias atom media paths.

What's the best way to do that? It will be UTF-8, but it's not supported yet, I don't believe. We have just introduced in Tiger UTF support for user data atoms, and we're moving towards that throughout the system. But right now, you really can't do it. What you need to do is contact Apple Engineering and get it on the seed list for the next rev of the file format, because we're heading in the same direction you are, but we're not there yet.

We have to release it in August as part of our release for our media server software. So if UTF-8 is the way to go, that's the way we'll proceed. That's the way to go, and one of the big things is instead of using the Mac language coding, you'll use the three character ISO encoding, but you'll only use the least significant five bits, because you're going to pack them all into a 32-bit field or something.

Okay, and if we want more information on this, the best way is to get on the Tiger seed list? Or who should we contact? Yeah, contact me and I'll get you in touch with the right people. Okay, I'm sorry, your name again? Steve Gouley, gouley@apple.com. Thank you. Thanks. Hello. This question might be for Ryan.

Is there a workaround or trick to launching multiple instances of QuickTime Broadcaster on a single machine? I heard somebody mention in one of the sessions that they were doing that, so that you can encode multiple streams on a single machine with QuickTime 6 Broadcaster using the same DV source for both instances. So actually, launching multiple streams, I'm not live yet. So launching multiple streams or multiple instances of broadcaster is not a supported activity. So it's not something that, you know, from our... Well, I was asking for the workaround. Exactly, exactly. So who has experience doing that?

Nobody has experience doing that. There are some alternative apps. That we haven't tested fully but that are capable of doing multiple streams. Steven, you want to comment? What's that app that Wirecast? Right, I've experimented with that a little bit. But the gentleman from University of Wisconsin who presented earlier this morning mentioned that on their XServe cluster they were doing that somehow.

I should probably ask him. I didn't have time to ask him. I thought somebody else here might know. Also, does that-- Do you want to know how to try it? Yeah. You figured that out? So you just move it and then reinstall? Is that how you do it? Yeah. You just copy it and name it something else?

Can they both access the same DV source? So they both can't access the same DV source, but they can do many, many audio streams. Okay, we'd need them to access the same DV source. Unfortunately for DV that doesn't work, but for analog or any other mechanism getting it in. That's a VDIG thing with QuickTime that we need to resolve. So they must be using it just to, because they have these tuner cards, those are different sources. So if you put in multiple of those Miglia tuner cards in there, it'll work.

I see, yeah. And then does anyone have any recommendations for products that, for live webcasting that tightly integrate with PowerPoint or Keynote that are out there today that could put slides up on viewer screens next to the live stream and when a user in the studio, say, clicks on a different slide in Keynote or PowerPoint, it sends that command down to flip the slide? So there's a gentleman from the University of Sydney that wrote an app that looks to be tremendous for doing that.

Doesn't that involve exporting the stuff out of PowerPoint? It's not using it in PowerPoint, I don't think. Well, everything I've seen that does anything with PowerPoint integration tends to require exporting the slide deck into some other format and posting it on a web server, either into like PNG or JPEGs or something, or GIF images, and then it sends URL flip commands.

But what I was really hoping for though was something that would, besides just converting it and then sending those script commands, if it could actually monitor a person running the PowerPoint deck or Keynote deck and see what slide they're on, so that the person running the encoder doesn't have to follow along and know what slide URL flip to send. . Glenn Bullich Breeze does that? It monitors PowerPoint?

But isn't it, it's also flash spark video only too, isn't it? Doesn't it only do flash spark video? It doesn't do QuickTime encoding, right? Something that would work for QuickTime. I know of some solutions for Windows Media that do it, but I'm looking for something with QuickTime. There's the product that the 21st Century Media guys had that Tarantella bought. Castream. Castream? That's ruled out because it requires a proprietary player to be downloaded and installed on all viewers' machines, a proprietary server, and licensing fees for simultaneous viewers. It's too expensive and impractical to deploy to thousands of users in an enterprise.

One possible solution would be to use something like ChannelStorm where you've got one video feed on the speaker, one video feed on the PowerPoint presentation so the guy who's queuing things up knows which graphic to bring up and he's got his own graphics queue. So I think you could do it that way with ChannelStorm.

Do you mean where you take the PowerPoint as one of the video sources? Right. You aim a camera at the PowerPoint screen and you're the guy who's in charge of sending out the images, looks and sees what's there, looks through his queue of images and queues up the one you want. Which sounds like what you want to do. There's no script. There's an actual human being involved.

Well, we have an alternative, if I may answer that. We have an alternative for that. We export PowerPoint in JPEGs, many JPEGs. We ask for the person that will hold the presentation to give us the PowerPoint to export in JPEGs and import as JPEGs. And then we have a list of JPEGs and the films, and then we play with that. It gives us a certain kind of freedom. But if you have a very long presentation, it can be tricky. So it's a workaround.

What's it called? It's still China Store. Oh, you're talking about live channel. Yeah, China Store. Okay, great. Maybe I'll check with you after. Thank you. And if you pop me an email, I'll try and get you that University of Sydney app when it shows up and we can all look at it a little bit more closely. I heard about it two hours ago, so I don't know much about it yet.

Next question. Yes. I have been working in a workflow system where I have a server centralized encoder, and I use Cleaner for that. And with help of AppleScript, I get my workflow to work. And I have 300 students that post their videos. And you know Cleaner is getting shaky and have many problems and bugs. I have two questions. One is what's happening? You know the bug about the time watch folder. There is a watch folder feature, and there is a time problem in Cleaner at encoding time. Encoding time is shorter than the film itself.

Many times I can't encode it finished. Maybe you have that experience. The second question is, do you have an alternative? I'm looking for something not too expensive, but something that works with QuickTime and Mac platform. Yeah. Cleaner has no apparent engineering going on anymore. I heard there are a couple of engineers assigned to Cleaner as a product, but there's not been much evidence out of discreet of any actual work progress for over a year now on the Mac product. The two compression tools right now that we're seeing progress on on the Mac are obviously Compressor. We also have Source and Squeeze 4 has been announced.

And I'm not sure if the status of AppleScripting is in there, but I believe they've entered beta and I'm sure you can contact them. They probably, you know, they're very responsive about that kind of stuff. I can give you some ideas on that. And there's also Compression Master from, you know, the company that's been working on it for a while now. And I'm not sure if they've been working on it for a while now. I'm not sure if they've been working on it for a while now. I'm not sure if they've been working on it for a while now.

Popwire. Popwire. Out of Sweden. And I don't know if they do automation either, but they both support watch folders and compression and all the kind of stuff. So they're kind of both working to fill that Cleaner niche. And both are a lot more stable today. Thank you. Good answer.

And if when you ask a question, if you could give your name and company, that'd be also helpful. I'm Norman Holstall, I work for a Dutch public broadcaster. Do you need the name? No. Good, good, you wouldn't understand it anyway. I don't, trust me. We're using Final Cut Pro to do editing and we're using ingest machines to do the digitizing to Final Cut Pro ingest machines. It's a little crazy we use this big sophisticated application, we think, with people who don't understand what they're doing and they tend to change things, screw things up.

We need a very simple QuickTime application just to digitize, photo JPEG, 75% whatever, preferably then to transcode it to 35%. Can't find anything out there that will just do a simple job, everything will grab it, but we can't get any time code in. Nothing will give us time code as well and we need it with time code of course. Anybody, any ideas? : Does Pipeline Digital still have their product from back in the video vision days?

They had a pretty good stand-alone QuickTime capture tool that worked with Timecode with the Telecast, hereby I reveal my age. And I think those guys are still around in some fashion selling some kind of tool. I'm not sure if they still have a Mac OS X version though, but you might check out Pipeline Digital.

We've looked at the Popwire people and stuff like that, Compression or Ingest Master or something, but nothing will do Photo JPEG. Yeah, but the Compression Master, they've integrated their own codec support, so they don't actually support arbitrary QuickTime codecs. That said, I thought that Motion JPEG they support internally. Motion, but not Photo JPEG.

We use Declink cards, Declink cards always use Photo JPEG, and it's brilliant, it's much better than Motion JPEG. For fielded content you want to use Motion JPEG instead, it's 4:2:2 and gives you support for fields. So for really like 95% of all applications if you're trying to capture video, you're better off with Motion JPEG.

We did that, and it was for the small bit rates that we need, it was rubbish. So we used Photo JPEG at 1 megabyte. Well, just put it on single field mode. At worst, Motion JPEG should only have about another 10% higher data rate for the same quality of Photo JPEG. You put it in single field mode. So you're probably making Motion JPEG work for you. for you with a little bit of tweaking. OK, thanks.

Hey, I was going to say, doesn't Squeeze ingest DV? Yeah. And does it do timecode? Squeeze can do live capture off DV. And the new version of Squeeze 4 might be able to do timecode. I haven't tried that yet. But that would be an obvious feature. Is your source always DV, or do you have other formats? Digibeta. Yeah, it definitely does not support Digibeta. It's a DV-only solution, Squeeze. Do you need to capture it in higher resolution than DV?

[Transcript missing]

Transcoding Digibeta to DV is morally reprehensible though.

That's it on the questions? Okay, I've got a question. Sorry. This is a real quick one. This is an easy one, right? I've got some instructional content that I'd like to have the end user let's say it's a drill and practice thing and there's a score keeper on the screen and they close out the QuickTime movie and I'd like to have it so that when they come back that score is still there and they can continue on.

This is an easy one, right? This is an easy one. I don't want to use any server side stuff. That's way too complicated. Come on, we've got to keep this simple. Now there's just one answer. So we developed a component to be able to save cookies, to be able to save some XML file into the user for desktop.

We made that available to our developers, and we are currently in a discussion with Apple to be able to upload that onto their server. So soon, hopefully, we'll be able to do it. I mean, you do have the 4.5. Oh, absolutely. So you can do it from within. We provide you the installer, so you can do some . You can deploy right now. You can deploy just mode.

The only thing that you cannot do is have the-- I mean, you can send your user to a web page to download the installer and install the component. How about a related question? When are we going to see that component on the QuickTime component page? It's under discussion.

It's going to be in the future. In the future. future. On a related thing, there is a piece of shareware that allows you to do live streams with slides synchronized together called SlidesNow. So if you go to slidesnow.com, you can check it out. It's like 25 bucks. Super simple. Excellent. Good answer.

And I know you said you didn't want to use the server, but with XML file exchange you really can send it or a JavaScript that will submit a form. So, you know, this is a problem that has been solved that you can apply the traditional way. You can't, right now there's no way to make a QuickTime movie, write something to the user's disk and there are reasons for that. But you can send a JavaScript submit or mail to or an XML list exchange with the server, which is the way you can do it now. As long as the stuff is being put in a web page, the cookie question can be handled by the browser, right?

Question on the right. Hi, Rich Carton, Penn State University. I've got somebody who wants to undertake a project that wants to put multiple live streams in layers in a movie and the streams would come to the front triggered by flash buttons also embedded in a layer in the movie and we're sort of trying to get an idea of how many streams we can ask QuickTime to handle within how many layers can QuickTime handle for streams. I guess that's about it. Mark, do you want to take that? Not particularly.

So while you have no limitation of number of streaming tracks that you can have inside the QuickTime Movie, like the number of flash tracks, text tracks and so on, you have no limitation at all. You have a limitation in terms of the bandwidth. If you try to send five streams at one megabit, it's going to be too big. So it will depend on your data weight and bandwidth on the client side. What you can do, you can create a flash interface with several streaming tracks and stop one, start the next one, stop one, start the next one and switch them.

You will have a little delay between the switch. These are live streams? You can do that with live streams. Assume gigabit bandwidth. Yeah, it has been done years ago with live stage. And it was with like QuickTime 5, I believe. So it's possible, yes. I like the idea of gigabit bandwidth. Where do you live?

Yeah, and the university, of course, that's the right answer. Next question. I have basically two questions. One question is, does Flash support streaming, QuickTime streaming format? Not at all. Can one explain why that? What is the reason? They are playing the same play like Microsoft. They want to build their own streaming servers or things like that?

That question probably is good, better at Flash forward than at show. Okay. We'll go to the next one. I'm having a hard time compressing MPEG-4 under 256 because in Denmark, where I come from, MPEG-4 is 256 is our ADSL lowest denominator. And MPEG-4 is doing a great job between 280 up to 512. But what's the problem there? What should I be aware? Are you going for real-time streaming or progressive download? Progressive download. Real-time streaming, also, both.

Okay. Check out Compression Master. Compression Master is a good two-pass MPEG-2 CBR mode, which QuickTime itself lacks. So you can typically get substantially better compression efficiency out of that, especially for low bitrate streaming applications. Because QuickTime's encoder is a single pass only. And both Squeeze and Compression Master support two-pass VBR encoding for progressive download.

And both can offer, because it's two-pass, substantially better quality than the QuickTime encoder itself can. Right. I mean, you can kind of do the QuickTime MPEG-4 encoder. It's the free one you get to start with. But if you're doing, like, really high-end encode stuff, you definitely can use Squeeze or Compression Master in the back.

Thank you. The other thing might be to also look at the content itself and if there's a way to crop to the area of interest. And maximize the compression on the area of the image that's important. You know, there's some savings there as well. Yes, but here it's an environment, automatized environment, where I have no experts working at the same time. So I have to respect their journalists. They do all kinds of things.

Understood. Understood. And of course, as H.264 comes onto the market, you'll see a substantial improvement in either the amount of data that you're saving for the same image or increasing the size of the image that you're compressing. Hi, Josh Blazer. I'm with the Art Institutes. We have a large number of campuses across the country, not only Art Institutes but also other college brands, 67 total locations.

We're building an infrastructure to do streaming media across all the campuses, which is typical, I think, of a lot of companies trying to get information from the top down and bottom up. We've found some solutions on the Windows side, but we're also a big Mac shop as well. So I'm wondering if there's any solutions you guys know of in content management of QuickTime content where at the local level, you're able to quickly browse through content.

I know that if you guys are familiar with VBRIC or some of the other solutions out there that allow this type of functionality, basically you have a local streaming server at each location within the organization. And then it's basically a web type interface, but they're pre-built type solutions, extensible for the content management piece. So I'm wondering if you guys know of any out there.

If you like VBRIC, VBRIC will work with QuickTime encoded MPEG4 files. So if you already have a VBRIC network deployed, just export your MPEG from Final Cut and drop it on there and you're good to go. Do you already have VBRIC stuff? We don't yet. We're in the process of kind of researching and building the project together.

We're also looking at it from a digital signage point of view too for our galleries and different student areas as well to broadcast content. That would be more full screen type stuff. VBRIC scales great from standard F down to QCF. They don't have a high-desolation in place, but as long as your signage is only going to be standard F, it's quite consistent. You can get great signage quality at 6 to 8 megabits for MPEG2 and it'll scale down to 32 kilobit MPEG4 if you need it.

They have MPEG1, MPEG2, MPEG4 solutions and if you go to their website, all the live streams that they're doing right now, are completely ISO compliant, playback fine in QuickTime Player or any of the other ISO players. They're doing live events right now from Dr. Ballard's expedition in the Black Sea or something like that. I wasn't aware of the support for QuickTime, so that's great. Absolutely. Thank you.

Hello, Dave Bergevin from Soma Media. I have a question about QuickTime chapter tracks. We use them exclusively in our applications. We actually use TribeWorks iShell. And if you use chapter tracks inside of QuickTime, you can actually have a lot of chapter tracks and you can have scrolling capability in QuickTime. But if you embed it into a web page, I think, and definitely in TribeWorks, you have the, you're limited, you can't scroll.

So whatever the resolution of your screen is, that's how many chapter tracks you can display. Is there a way to actually have that feature inside of an embedded environment like TribeWorks or on the web? Eric, you've been voted in. No, do you want to comment on that? That's probably because I'm somewhat affiliated with TribeWorks lately, but I don't work on iShell.

I can only think about workarounds, ways to get the chapter data out yourself and then build lists there. Yeah, we've done that, but a lot of times it's more efficient just to use the chapter tracks way QuickTime, QuickTime implements it. Oh, absolutely. I agree. It's really, really easy and it's a great feature, the scrolling capability that's in QuickTime, but I'm wondering if TribeWorks, if there's a way to control it within, from, like if TribeWorks can do something or if there, to actually, if the feature is actually there.

Have you talked with TribeWorks engineering about this? Yes, but it's kind of on the back burner and they don't even know if it's possible, so that's why I'm asking you if it's even possible. Okay, well, we'll pass it down there, but I'd be happy to help talk to you with them about it. Okay.

I don't know about TribeWorks, but with respect to the QuickTime plugin, I would file it as a bug with our bug reporter and see if we can't get it fixed in the next rev. Last answer on that. I have built something similar. It doesn't have quite the same question that you have, but basically processes over a chapter track. And then I have a small piece that is a flash track that I can just drop into any QuickTime movie.

And then what the flash track is doing is auto generating movie clips so I can scroll that space. So for me it's better functionality than what is done in QuickTime because I can have it look the way that I want. I can have the color scheme, yada, yada, yada that I want to have. That's not a very difficult flash task nor a difficult QuickTime task. It can be done once and then applied to many projects. Okay. Thank you very much.

I'm Hal Meeks from North Carolina State University. I was talking to this gentleman over here earlier. He was having a question about broadcasting live events where the speaker wants to do PowerPoint. You want to do the classic talking head with PowerPoint and some stuff at the bottom of the screen.

There's a company called InVivio. They're a member of the IMSA consortium, as is Apple, and they do have a hardware product that will do exactly that. It is about $15,000. It's called Forecaster Lite. You literally take your PC, plug it into the back of this device. It takes VGA and encodes a VGA stream, an analog video stream, and an audio stream. It also indexes the content in real time. What it generates out is an H.264 stream. Of course, I haven't had a chance to actually test this with the pre-release of Apple's product, but I would imagine that it would work quite well.

Glenn Bullich If it's InVivio-based, it probably uses the best of the best. Glenn Bullich If it's InVivio-based, it probably uses the best of the best. binary format for Synths, which I believe has not been announced for QuickTime. It's not supported today. That's one of the things I wanted to clarify here.

Is that is that going to be something that you will eventually be able to support? Well the VIVIO has a plugin for QuickTime Player on Windows today and they've shown, I actually demoed at Macworld 2003, an alpha of their Mac version. Have they shipped that yet? Yes, I've got it running.

Okay so yes if you have that which can do biffs, that's a plug-in, but unless somehow someone convinced Apple to start including that as part of the component download program. I'll be at the feedback forum on Friday. Yeah okay. I'll be mentioning this but yeah I'm already aware of the issues and there is of course a licensing issue involved with this as well. Yeah. With their product but it is a, it does exactly what they tell it, say that it will do. It's pretty amazing.

Hi, I'm Amy. I work at Apple. I just wanted to address your question about H264 in the Tiger Seed. Yes. I know it's not a complete... I'm not... No, no, no. Right. You guys have heard me say that a million times so far. But I just wanted to let you know that the way that it's in there is not like all the other QuickTime codecs at this point in time. Yes, I know. I found out. Yes. Okay. So I just want to make sure that was clear because it probably won't work with another app. It's not safe for internal consumption. You shouldn't use it while you're showering. Yeah.

I just mean that it won't... If you put another app on top of QuickTime, it won't show up. No. I know. I know. Never mind. I was trying to get to my desktop machines so I could actually try it out. But never mind. But anyway, it is a very cool product. It does seem to work. Great suggestion.

Hello, Mike Carr, Coconino Community College in Flagstaff, Arizona. I got a couple questions for you. The first one you may or may not have an answer to, and I was wondering what the hardware requirements or the projected hardware requirements of H.264 playback are going to be. I mean, so clearly that's, it's dependent on the data rate of the stream that's to be decoded, right? So we've shown on the dual G5, 8 megabit, 1980, 1080, 1920, 1080 at 24 FIPS, and then in Steve's demo you saw a variety of data rates. So, you know, there's no set requirement.

Yesterday we showed, so the short answer is we don't have that data yet because we're not done yet, so we'll have to get back to you with the final answer with that. But yesterday in our session about it, we showed on an iBook, and it was a 1 GHz G4 iBook that you could play back, I think it was 960 by 5 something because it was sort of letterbox. And that data rate was 5 megabits, no it wasn't 5 megabits, it was 1.5 I think. So anyway, that's just an idea of what we have now, and we're still working on it. So we don't have the final answer, but we'll get back to you.

And just another comment on that, there are about 60 companies that have either pre-announced or announced that they're developing encoders, decoders, all sorts of tools based on 264. And you know, some of the decode hardware requirements are down to the, you know, sort of sub-100 milliwatt chips for, you know, mobile device decode. So the codec, given its scalability, can also scale on its processor, on the processor requirements for decode. Minimum playback requirements for H264 are a cellphone or better?

My next question is, I want to capture H263 content into a QuickTime file. I want to know if that's doable. Yeah, the 263 codecs have been in QuickTime for years now, since like QuickTime 4, I think. Yeah, so just pick us a codec when you're doing it with QuickTime Broadcaster and you're good to go.

Are you trying to make a .mov file with 263 content? Pretty much. Anything. Yeah. It works. Before Source 3 and MPEG-4 came out, that was the dominant streaming codec in QuickTime. Broadcast live encoding stuff was almost all 263 until a few years ago. It's been in there and it's been working fine for a long time.

You mentioned that you tried it and it didn't work, so that might be a little piece of information that would help us. What do you mean by that? Coming out of a Tanberg 6000 system, this is a default stream that's viewable in QuickTime. Can you, let me give you, sorry.

One of the interesting things is that Tamberg themselves, although they've developed the QuickTime streaming component, actually didn't know how to make it work. When they did their testing, all they ever did was did it from a web page that was actually logged on to the Tamberg 6000 itself.

And that works fine. I've actually just, I mean literally last week, managed to get it streaming from a codec to a QuickTime streaming server. And I'm actually going to Oslo in a few weeks time to talk to them about the 264 component. Because if you've got an E-series Tamberg 6000. Have you been able to actually capture those streams yet or just display them?

Just display them. We can't actually, I mean what you can do is you can capture it by just taking it out of the cache. Once it's streamed to a machine you can take it out of the cache. But we've not managed to actually. Save it as an ongoing stream.

But I'm actually, as I say, I'm going to Oslo in a few, end of July. To actually talk to their engineers. I mean I'll, if you want I'll talk to you afterwards. But the main reason I'm going is because on their new E-series 6000s, they've already got 264 embedded. And you can go from 6000 to 6000 with these 264. So I'm going to talk to them about saying, well hey why don't you stream the 264 as well. So. I'm going to, okay. I'll find you. Thank you Gary Shaneberg from BT.

Steve Egbert, Brigham Young University. Let's say that I've got some movies on the web, progressive movies, and I want to prevent the smart guys from downloading and ripping off my content. So that means that you wouldn't be able to pull it into VLC and bypass all the wired sprite stuff. Do you think you guys can think of a solution to prevent people from ripping off my content?

Lots of takers here. Who's first? You want to take a stab at it first, Steve? Look in the back of the book, QuickTime for the Web. There's a couple cheapo tools. Well, they're free. One of them will basically, you're going to make a reference movie, copy, protect it, and compress the header, and then take the header out of your source movie so that it's a box of rocks. It's no longer a playable movie. And you've got a reference movie that points to your web and some data on your web that if they copy it to their disk doesn't do anything because your movie points to the web.

Extending on the same question, if I want to protect content on an intranet, Would you do the same stuff? Live streaming or downloadable content? Well, live streaming is inherently copy protected unless somebody is really, really smart because we don't keep a copy of it on the disk. Okay, not copy protected. Preventing access, unauthorized access.

Well, let's just do the last stage way. You could create an interactive QuickTime movie with Wired Sprite and create some kind of password that will send that to a database that will check the-- No, you want to do something else? As good an idea as that would be, that actually won't be secure because right now QuickTime only supports HTTP GET, in which case everything is visible on the stack, which means that the password would be actually visible, and that would be a bad thing.

Yes, this is another plug for the totally hip component. That actually allows you to encrypt what would go on the line and so you could still see it but you wouldn't be able to tell what the data is. The other possibility is to still using wired sprites but get clever and build your own encryption scheme and then upload that.

In which case you need a flip side on the server side to actually decrypt it. Then there's probably a lot more details there. But ultimately you have to look at what your audience is expecting because it really does get down to an end user question. What kind of environment are you delivering content to and what kind of user experience are they willing to go through?

Well, there is this nifty little feature of QuickTime streaming server that gives you QT access files so you can require a name and password. Although there is the same problem, it is a get and it is clear text over your network. That's another possibility. Also, I'm sure there is this neat little thing with Akamai you can do and they have, if you have an account with them, they will allow you to tokenize your references to the movies so that you have to have a validated username and password that isn't done through clear text. You can do and generate a link dynamically. So that might be something you'd want to talk to this guy about.

So that one there. The last solution will be if you embed your QuickTime movie inside an HTML, you can have an SSL page before that that will request for the password and then you have the whole schema to be able to protect your content. Because they will not see the QuickTime movie on that page before you can do your security check.

When we did our annual results, which have to go to a closed audience in the US, we did exactly that. We just created an HTML environment, linked it to a database, made people register with their username and password, and then took them to an SSL page. an SSL protected HTML page and ultimately yes, if someone, once they logged in once, they could obviously find the path to the movie but you wouldn't get that unless you'd logged in in the first place.

Hi there, Brian Friedrich from the Certified General Accountants Association up in British Columbia, Canada. Part of this has been hit already, but just to kind of round up the solution. We are going to be in a situation where we've got lecturers and speakers that are presenting and we kind of want the most efficient, read cheap but still workable solution of being able to switch between a video feed of the speaker and also their slide presentation. So I guess kind of like what was being done last year with the WWDC material, the DVDs.

If you want really cheap and easy, you get a scan converter, you get a camera, you put it through a video switch, you put that to a live encoder. So if you really want cheap and easy, that's trivial to do, and that actually gives you pretty good quality. If you can live with having the video signal be analog, come out of the scan converter. Any reason, would that be good enough? What about digital options? Uh, well... I thought you wanted cheap and easy. Actually, cheap and easier is the S-video out of a PowerBook.

yeah the red yeah that are even easier than using a scan converter we we do that all the time where we have a PowerPoint presentation we just want to take it full screen as a video source in a live webcast and we used to use a scan converter but we found that the s video out of the power book produces cleaner looking results than our scan converter and doesn't have the same problems with putting artificial black margins around the image that scan converters often do so I mean that that works pretty well if you use any standard video switcher to switch between live cameras and and that fee it's not the s video out was any better than a lot of the lower end scan converters I sort of imagine like a VGA to SDI thing that's probably more than you want to pay surprisingly so I mean even slides like this with text as small as like that blue type translate quite well down to like sizes of 240 by 180 which would be appropriate for like a you know 35 to 40 kilobit per second stream for dial-up it actually works no that sounds perfect next yeah the obvious solution is like a keynote you know like a video source and then you can just go ahead and put it in a version like to which do all that stuff which I could specifically about because I have absolutely no idea if anyone's you know thought about it but yeah I got it wouldn't I chat AV and keynote it seemed like there's a to these two crazy kids gotta get together and some kind of Joni Chachi kind of arrangement but can definitely second that I have a question Does anyone know of any QuickTime live encoding solution that works at sizes larger than 320x240?

There are a number of products that could do a live impact forestry and they'll be QuickTime compatible at higher frame sizes than that. : Are they software or are they like appliances? : Yeah, Dekas and VIVIO both have them. There's also the freeware : I'm a big fan of the MPEG-4 IP product.

It has a live encoder built into it, which I believe can go up to 640x480. : And they're live? And do they de-interlace as well? : On the pre-processing side, I'm pretty sure the NVIDIA product does, and I believe the DECIS does as well. I'm not sure about MPEG-4 IP. Because for whatever reason, you can't compile it on a Mac.

I'm not smart enough to do that. It's all open source there. It gets like 80% of the way through and never doesn't link or something like that. But both of you can move the DECIS products and handle a de-interlacing, I believe. There's also some hardware and MPEG-4 stuff out there too, which might do the job as well. I'm interested ideally in the software solutions so I can run it on a... There will be a billion 264 solutions for this. Yeah, I want to run it on a PowerBook for remote live webcasts.

I've also had some experience at Richcart from Penn State. I did a... One second. There's a little bit more to that answer. In QuickTime Broadcaster, that free little app does go up to 640, 480 as well. It goes up to 720. 720, whatever you want. That's what I was saying. I've done an Internet 2 event streaming it out. Best I could do with the top of the line G5 was about 7 megabits per second. But that was full screen, high quality audio. I still got some blockiness.

it just wouldn't encode all the way up. No, to kind of respond to what you were saying, QuickTime Broadcaster lets you set an output of 640x480 if you want, but if you look at the results, it looks like a 320x240 that's been doubled in size, and there are no interlacing artifacts present in it.

Okay? And I know it's not deinterlacing in real time. What it's actually doing is asking, you know, at the source level in the background, it's throwing out the fields. It's almost certainly using the fast mode DV codec, which gives you a quarter screen, a single field. Right, so it's starting with a quarter resolution original that, you know, size larger than 320x240. It doesn't really look any better.

And the perfect solution for that would be when QuickTime's got the functionality inside, you want to turn the high quality and single field flags on decode, which you can do in QuickTime Player, but you can't do it with the encoder. If we just had access to those check boxes. And so what I've noticed is that live channel and wire, cast both seem bound by that same limitation.

they both seem to produce the same results as QuickTime 6 Broadcaster would when you set them large in 320 x 240. It's probably you have to find a product that uses a different DV decoder for real time or at least has the ability to override what the default setting for real time is. I mean cause I mean on a computer the DV codec and even a Power Book should be 6x real time. Sure.

On a G4 and I don't know how insanely X real time on a G5, so there's the power there to do the decode. When we see everything that Final Cut Pro can do in real time on you know even a nice G4 you gotta think that it should be able to do it.

What would happen if you compressing two times the bitrate? No, I've tried that. And you get less and less compression artifacts in the result, but there's no higher resolution to be seen. Yeah, the decoder itself is only handing off a quarter screen resolution bitmap to the encoder, or to the processing engine.

[Transcript missing]

I've been playing with Wirecast and it does look quite good actually because you can switch between multiple sources. It does quite nice 3D DVE effects as well where it moves the presenter down into a little screen in the corner, a bit much like the keynote speeches here. You can bring in your slides. I've been playing around trying to export out of Keynote as a QuickTime and then bringing that in. You can step through the slides from your Keynote as a QuickTime in one window while you or your video source appears in the other.

It does seem to be working quite well. It does seem to have the same limitations on the video size of the sources you're coming from. It is quite nice that you can just plug in a whole load of EyeSight cameras and switch between them quite easily. It's cool.

On the bitrate front, calculator.apps, pretty much all you need to really do the details of it is how many megabits of pipe you have available, what the bitrate of your stream is going to be, multiply it together and get your theoretical value and then you chop maybe 25% off that for overhead and just general, to placate the gods, I guess. So that's pretty straightforward, mathematically.

One problem though is if you're an expert from QuickTime, QuickTime likes to measure things in kilobytes per second and I think say kilobytes, 1024 bytes, while pretty much everything else in the world measures things in kilobits where k equals 1000 instead of 1024. So you kind of, sometimes have to like kind of shuffle some numbers around in the background.

There are a lot of tools out there like Compression Master and Squeeze which make QuickTime files but present it in terms of actual true kilobit values. That can make it a little bit easier when you're authoring stuff for, you know, streaming views. The impact for component will show it to you also in kilobits as well.

But unfortunately if you open the file up inside QuickTime player, it will give it to you in k and a lot of people have gotten confused thinking that k value is actually k bytes. I mean k bits was really k bytes. Good point. Well I think that looks like the last question.
