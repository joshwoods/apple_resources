WEBVTT

00:00:10.940 --> 00:00:12.100
Good morning.

00:00:12.100 --> 00:00:13.800
My name is Henri Lamiraux.

00:00:13.850 --> 00:00:16.800
I'm the engineering manager
for Interface Builder.

00:00:16.870 --> 00:00:19.360
In the long tradition
of Interface Builder,

00:00:19.360 --> 00:00:23.800
I have a French accent,
so hopefully it will be okay.

00:00:23.890 --> 00:00:26.280
This is the plan today,
or what we're going to

00:00:26.280 --> 00:00:27.800
be talking today about.

00:00:27.800 --> 00:00:30.570
I'm going to be introducing
what is Interface Builder.

00:00:30.800 --> 00:00:34.950
We're going to go through
what's new in Interface Builder,

00:00:34.950 --> 00:00:38.800
and also our short-term goal,
which is what we are working on today.

00:00:38.800 --> 00:00:40.800
You're going to see very soon.

00:00:40.800 --> 00:00:44.030
And our longer-term goals,
which is what we're thinking

00:00:44.030 --> 00:00:47.800
about doing for the future
release of Interface Builder.

00:00:48.190 --> 00:00:51.410
First of all,
I'd like to know how many people here

00:00:51.480 --> 00:00:54.800
have never been using Interface Builder.

00:00:54.880 --> 00:00:56.940
I hope next year.

00:00:57.130 --> 00:01:01.670
There will be no hands because
Interface Builder is Apple's

00:01:01.770 --> 00:01:03.440
Interface Builder tool.

00:01:03.470 --> 00:01:06.440
We have only one tool at Apple to
be able to create user interfaces

00:01:06.980 --> 00:01:11.060
for both Cocoa and Carbon,
and this is Interface Builder.

00:01:11.100 --> 00:01:14.610
The big push also for Interface
Builder is to be able to create

00:01:15.180 --> 00:01:18.040
a compliant Aqua user interface.

00:01:18.650 --> 00:01:21.440
Here you can see we have one tool.

00:01:21.530 --> 00:01:23.100
Our tool creates what we call Nib file.

00:01:23.100 --> 00:01:25.560
I will talk about that later.

00:01:25.610 --> 00:01:28.980
And we can target Cocoa application,
which was a traditional

00:01:28.980 --> 00:01:30.840
target for Interface Builder.

00:01:30.870 --> 00:01:33.420
We can now target Carbon application.

00:01:33.450 --> 00:01:36.460
The WebObject people are also
using Interface Builder to

00:01:36.980 --> 00:01:39.520
create Java client application.

00:01:39.550 --> 00:01:45.190
And as you can see at the bottom, we put,
our big work this year was to create

00:01:45.190 --> 00:01:49.860
the infrastructure in Interface Builder
to be able to support other platforms.

00:01:49.900 --> 00:01:53.220
The fact that we put Carbon support means
that now we have this infrastructure

00:01:53.220 --> 00:01:56.380
in place to support other platforms.

00:01:56.420 --> 00:01:58.640
And you will see that in the future.

00:02:00.450 --> 00:02:03.760
So a question,
should you use Interface Builder?

00:02:03.770 --> 00:02:05.780
If you're a Cocoa developer, yes.

00:02:05.790 --> 00:02:08.200
You have to use Interface Builder.

00:02:08.220 --> 00:02:10.540
It is a big part of
the development cycle.

00:02:10.550 --> 00:02:14.200
It makes it easy to use,
outlet and action concept.

00:02:14.450 --> 00:02:18.890
You cannot develop in Cocoa without
using Interface Builder.

00:02:19.870 --> 00:02:24.330
Now, if you are a Carbon developer,
it's yes if you're

00:02:24.330 --> 00:02:26.440
directly using the toolbox.

00:02:26.460 --> 00:02:32.760
If you are a hardcore MacÂ OS developer
and you are using the toolbox,

00:02:32.840 --> 00:02:37.060
and you've been using a resource
editing tool like Resedit,

00:02:37.060 --> 00:02:40.050
for example, to edit your UI.

00:02:40.150 --> 00:02:43.860
So if you are one of those developers,
Interface Builder is for you.

00:02:44.970 --> 00:02:50.580
If you are a framework application
developer using a Power Plant or Mac App,

00:02:50.580 --> 00:02:53.270
I say maybe, but in fact,
you may not want to

00:02:53.270 --> 00:02:54.570
use Interface Builder.

00:02:54.810 --> 00:02:58.240
Power Plant has its own GUI builder,
Mac App has Adlib.

00:02:58.730 --> 00:03:01.560
We don't support those frameworks
with Interface Builder.

00:03:01.630 --> 00:03:05.700
If you have a mix of toolbox in
your Power Plant application,

00:03:05.700 --> 00:03:11.390
yes, you could use Interface Builder
for the toolbox part of your app.

00:03:12.170 --> 00:03:16.290
So I'm not talking about the advantages
of Interface Builder for Cocoa,

00:03:16.290 --> 00:03:18.010
because they are obvious
to Cocoa developers.

00:03:18.060 --> 00:03:20.920
But for Carbon developers,
they have really good reason

00:03:21.010 --> 00:03:22.560
to use Interface Builder.

00:03:22.640 --> 00:03:25.260
First of all,
it creates Aqua-compliant UI,

00:03:25.330 --> 00:03:26.700
which is important.

00:03:26.700 --> 00:03:29.500
In fact,
it's the same thing for Cocoa developers.

00:03:29.750 --> 00:03:32.600
It supports all UI elements.

00:03:32.600 --> 00:03:35.710
In the past,
we haven't been able to really support

00:03:35.790 --> 00:03:37.470
all the new stuff we put in the toolbox.

00:03:37.600 --> 00:03:43.600
IB will be supporting all UI elements
that you're going to find in the toolbox.

00:03:43.600 --> 00:03:45.600
Data browser, everything is there.

00:03:45.600 --> 00:03:49.600
It's also the easiest way to
support the new Carbon event model.

00:03:49.640 --> 00:03:52.740
In Interface Builder,
you can set your command,

00:03:52.840 --> 00:03:55.600
you can do everything you have
to do to be able to support

00:03:55.600 --> 00:03:56.570
the new Carbon event model.

00:03:56.910 --> 00:03:58.600
This is a big plus.

00:03:58.720 --> 00:04:02.740
It's also Unicode compliant because
we're using XML for our file format,

00:04:02.890 --> 00:04:05.600
which means that you can easily
localize your application.

00:04:05.600 --> 00:04:09.600
And it's integrated with
the Apple Project Builder.

00:04:09.600 --> 00:04:11.580
This is also important.

00:04:11.650 --> 00:04:14.550
You're going to be able to
work with them to facilitate

00:04:14.610 --> 00:04:16.600
development of your application.

00:04:16.600 --> 00:04:21.160
But for Carbon developers,
we are not tied to Project Builder.

00:04:21.160 --> 00:04:24.600
You could use Code Warrior if
you want with IB.

00:04:24.600 --> 00:04:26.600
The second topic today is what's
new in the Carbon event model.

00:04:26.600 --> 00:04:28.600
interface builder.

00:04:29.670 --> 00:04:32.720
So I want to cover three big parts.

00:04:32.780 --> 00:04:34.360
The general improvement,
which has nothing to do

00:04:34.360 --> 00:04:35.940
with Carbon and Cocoa.

00:04:36.000 --> 00:04:39.940
The things specific to Cocoa we've
been putting in this release.

00:04:40.010 --> 00:04:42.160
And the new stuff for Carbon.

00:04:42.240 --> 00:04:44.200
So let's start with the
general improvement.

00:04:44.250 --> 00:04:47.510
The biggest thing we have to do
this year is to support Aqua,

00:04:47.690 --> 00:04:52.000
not as a new developer,
but for the user interface

00:04:52.100 --> 00:04:54.230
of Interface Builder.

00:04:54.420 --> 00:04:57.200
Make IB look good with Aqua.

00:04:57.500 --> 00:04:59.080
After all, you're going to be using that.

00:04:59.130 --> 00:05:02.960
This tool to develop your UI,
we better be compliant with Aqua.

00:05:03.120 --> 00:05:09.080
We want to give you a good example of
how to use Aqua in your application.

00:05:09.340 --> 00:05:12.940
We've been also adding
some other little features.

00:05:13.510 --> 00:05:16.750
When we're going to show you the demo,
you're going to see those features.

00:05:16.960 --> 00:05:20.880
We've added a starting point to
easily be able to choose which

00:05:20.880 --> 00:05:23.300
template you want to start with.

00:05:23.400 --> 00:05:24.840
We have a better selection model.

00:05:24.970 --> 00:05:28.270
For example, people who have been
using Interface Builder,

00:05:28.270 --> 00:05:31.480
I'm sure,
didn't like the fact that when you

00:05:31.480 --> 00:05:33.650
want to edit inside a group box,
you have to double-click.

00:05:33.960 --> 00:05:36.740
Now you can just click once and
you're going to go through directly,

00:05:36.840 --> 00:05:39.400
so you don't have to do all
those double-click things.

00:05:39.490 --> 00:05:42.370
We have put some new features
in the size inspector where

00:05:42.370 --> 00:05:46.340
you can change the origin,
so you can easily measure the distance

00:05:46.550 --> 00:05:51.750
from an object to the right side,
to the bottom side of this container.

00:05:52.470 --> 00:05:56.000
We have a new alignment panel,
where you have all the

00:05:56.000 --> 00:05:57.640
alignment in one panel now.

00:05:57.640 --> 00:06:02.360
You can do align to left, align to right,
center in container.

00:06:02.390 --> 00:06:05.400
All those things are in one panel.

00:06:05.400 --> 00:06:09.270
We have live resize of objects,
so you don't have anymore this outline.

00:06:09.270 --> 00:06:12.240
You can resize objects live,
seeing the full resize.

00:06:12.400 --> 00:06:15.400
We have enhanced the palette setup.

00:06:15.400 --> 00:06:19.370
We have a new palette setup where you can
load your palette and stuff like that.

00:06:19.420 --> 00:06:21.220
And you have a lot more features.

00:06:21.220 --> 00:06:23.400
I'm not going to go through that today.

00:06:23.400 --> 00:06:26.950
So let's talk about Cocoa now.

00:06:28.200 --> 00:06:31.600
In Cocoa, we've changed the palette.

00:06:31.660 --> 00:06:35.460
We've added a new Cocoa palette,
and we've added a bunch of

00:06:35.460 --> 00:06:38.100
objects to existing palettes.

00:06:38.170 --> 00:06:40.100
So let me go through the palettes.

00:06:40.100 --> 00:06:42.120
This is the menu palette.

00:06:42.230 --> 00:06:46.100
The biggest change here is that
there is no more the Apple menu.

00:06:46.100 --> 00:06:52.100
There is an application menu,
which is the far left menu in your app.

00:06:52.100 --> 00:06:54.080
This is the new View palette.

00:06:54.090 --> 00:06:59.080
We've added a separator below the box.

00:06:59.110 --> 00:07:02.100
You can see a line,
which is the separator.

00:07:02.100 --> 00:07:06.190
We've added the non-rounded
button directly on the palette,

00:07:06.190 --> 00:07:08.060
to be easily accessible.

00:07:08.190 --> 00:07:12.450
We have a more View palette,
where we have new sliders,

00:07:12.450 --> 00:07:15.130
we have the progress indicator.

00:07:16.390 --> 00:07:19.910
This is a new window palette.

00:07:20.060 --> 00:07:22.060
Basically,
we already added two objects here.

00:07:22.060 --> 00:07:23.610
We have the drawer.

00:07:23.910 --> 00:07:27.370
The first one at the top is--

00:07:27.560 --> 00:07:29.970
A window plus its drawer
plus a drawer object.

00:07:30.080 --> 00:07:34.250
So it's like one object you can
drag on your document and have

00:07:34.250 --> 00:07:36.090
the full drawer ready to use.

00:07:36.210 --> 00:07:39.370
The second object in the NSDrawer
is just if you want to add a

00:07:39.450 --> 00:07:42.090
drawer to an existing window.

00:07:44.920 --> 00:07:49.640
The data view hasn't changed much,
same thing.

00:07:49.660 --> 00:07:52.690
We have also here the tabulation view.

00:07:52.980 --> 00:07:56.290
We have added the tab view.

00:07:56.400 --> 00:07:59.080
Also, we have a new tab view
editor for the tab view.

00:07:59.110 --> 00:08:02.880
We've also added the
outline view on the palette.

00:08:05.160 --> 00:08:09.360
We've also added a new graphic view,
which right now has the OpenGL view,

00:08:09.610 --> 00:08:12.100
so you can directly drag the
OpenGL view from the palette.

00:08:12.100 --> 00:08:15.600
And we have also a Quick Draw view,
if you want to draw a quick

00:08:15.600 --> 00:08:16.890
draw in your Cocoa app.

00:08:17.100 --> 00:08:24.040
We will be adding an Smovie view as
soon as the app kit is done with that.

00:08:24.300 --> 00:08:29.090
So the QuickTime view will be
on the graphic view palette.

00:08:30.330 --> 00:08:35.140
We've also added some
features on the inspectors.

00:08:35.150 --> 00:08:39.260
Now you can set the autosave frame
name on the window inspector.

00:08:39.290 --> 00:08:41.140
You don't have to do that in code.

00:08:41.170 --> 00:08:43.990
You can also set the max window size.

00:08:44.120 --> 00:08:49.840
You can also, on the matrix inspector,
you can set the number of row and column.

00:08:49.870 --> 00:08:53.160
And as I said before,
we also enhanced the size inspector,

00:08:53.300 --> 00:08:58.800
so you can change the origin and how
you want to see the size of a view.

00:09:00.300 --> 00:09:07.000
[Transcript missing]

00:09:07.660 --> 00:09:10.570
The Aqua user interface
has now those shadows.

00:09:10.690 --> 00:09:13.450
If you are a Carbon developer,
you don't have to worry about those

00:09:13.500 --> 00:09:18.480
shadows because the shadows are drawn
outside of your bounds of your control.

00:09:18.580 --> 00:09:21.920
On Carbon, there is no clipping around
the button or whatever,

00:09:21.930 --> 00:09:23.490
so they can draw outside.

00:09:23.600 --> 00:09:27.490
On Cocoa,
you cannot draw outside of your frame.

00:09:27.660 --> 00:09:30.500
So the shadow is in
fact inside your frame.

00:09:30.500 --> 00:09:36.500
So if you just leave the frame size as
it was with the previous look and feel,

00:09:36.500 --> 00:09:37.850
your buttons are going to be too small.

00:09:38.660 --> 00:09:40.500
And they have to be a little bit bigger.

00:09:40.520 --> 00:09:44.500
But it's not very practical to work this
way because all the UI specifications

00:09:44.500 --> 00:09:49.500
are given without the shadow.

00:09:49.500 --> 00:09:52.510
So in Interface Builder,
just for Cocoa developers,

00:09:52.510 --> 00:09:55.500
not for Carbon, for Cocoa developers,
we have introduced this

00:09:55.500 --> 00:09:58.530
notion of a layout rect,
which is the size your

00:09:58.580 --> 00:10:00.500
control should have.

00:10:00.620 --> 00:10:03.800
uh... according to the u_s_ specification

00:10:05.000 --> 00:10:08.900
So to facilitate going between
frame rate and layout rate,

00:10:08.900 --> 00:10:11.410
we've added a pop-up
in the size inspector,

00:10:11.440 --> 00:10:12.870
where you can toggle
between the frame rate,

00:10:12.960 --> 00:10:15.100
which is what you have
to create your view,

00:10:15.360 --> 00:10:19.580
and the layout rate,
which is the real size of your control.

00:10:19.670 --> 00:10:23.230
So you can see here, for example,
the layout rate is 20 pixels high,

00:10:23.230 --> 00:10:28.510
which is what the UI guideline says,
but the frame is 33.

00:10:28.800 --> 00:10:31.820
This is only for control
with a big shadow,

00:10:31.820 --> 00:10:34.700
like the push button, especially.

00:10:34.900 --> 00:10:37.700
What's nice with IB is that you
don't have to worry about that.

00:10:37.700 --> 00:10:42.820
If you leave the pop-up to layout-rect,
you just type the size and it's going

00:10:42.820 --> 00:10:45.700
to set the frame to the right size.

00:10:45.700 --> 00:10:51.700
There were also changes for Cocoa that
were driven by the adoption of Aqua.

00:10:51.700 --> 00:10:58.790
We've added, I'm sure you saw that in the
Cocoa demo yesterday by Ali,

00:10:58.790 --> 00:11:02.470
we've added the apply layout guidelines,
which allows you, if you have a nib with

00:11:02.470 --> 00:11:06.100
the old look and feel,
to convert it to the new size,

00:11:06.250 --> 00:11:07.550
to the new matrix.

00:11:07.700 --> 00:11:09.530
So we have it in a menu.

00:11:09.740 --> 00:11:12.650
You can load your old nibs,
apply UI guidelines,

00:11:12.710 --> 00:11:16.700
and we're going to resize everything
to match the Aqua guidelines.

00:11:16.700 --> 00:11:19.530
We also updated all the templates in IB.

00:11:19.700 --> 00:11:21.700
So all the new templates.

00:11:21.750 --> 00:11:25.720
We've added the new templates,
respect the Aqua specification

00:11:25.720 --> 00:11:27.700
as far as size,
menu layout.

00:11:27.700 --> 00:11:31.660
We've added separator types,
so you can have line separators,

00:11:31.660 --> 00:11:33.700
horizontal or vertical lines.

00:11:33.810 --> 00:11:35.460
We've added split view.

00:11:35.840 --> 00:11:38.700
Aqua has two types of split view.

00:11:38.700 --> 00:11:40.700
So you have that on the inspector.

00:11:40.700 --> 00:11:42.700
You can set the different
split view type.

00:11:42.700 --> 00:11:46.540
And we've also added tint for buttons,
so you can have the blue

00:11:46.540 --> 00:11:47.700
button or the clear button.

00:11:47.700 --> 00:11:51.000
That's on the inspector.

00:11:51.340 --> 00:11:54.970
So actually bringing Scott Herz,
who's going to show you a

00:11:55.000 --> 00:11:58.590
demo of improvement in Cocoa.

00:12:03.010 --> 00:12:06.450
Okay,
I'm going to show you some Cocoa stuff.

00:12:06.710 --> 00:12:10.570
Specifically, I want to talk a little bit
about our support for drawers,

00:12:10.570 --> 00:12:13.560
our support for tabs,
which I hear is something

00:12:13.560 --> 00:12:14.180
a lot of people wanted.

00:12:14.200 --> 00:12:17.990
And just the overall,
I want to give people a good

00:12:17.990 --> 00:12:22.620
impression of how just easy it is with,
especially with Cocoa and

00:12:22.620 --> 00:12:24.580
Interface Builder,
to hook all this stuff up.

00:12:24.600 --> 00:12:30.600
So, this is the starting point
window that Henri talked about.

00:12:30.600 --> 00:12:33.840
Just so when you first pop up IB,
it's going to give you a... So,

00:12:33.850 --> 00:12:34.950
let's make a drawer.

00:12:35.190 --> 00:12:38.830
So, we're going to bring
up an empty nib here.

00:12:40.230 --> 00:12:45.090
And go over to our Windows palette.

00:12:45.160 --> 00:12:47.380
Like Henri said,
there's two ways to do drawers.

00:12:47.600 --> 00:12:50.280
You can either use a-- if you
have Windows already set up,

00:12:50.320 --> 00:12:52.820
you can use this drawer
object and connect them up.

00:12:52.950 --> 00:12:57.320
But we have this nice ready-made
drawer composite here.

00:12:57.320 --> 00:12:59.780
So we're going to pop that on.

00:13:00.350 --> 00:13:01.830
And so it's going to
bring up two windows.

00:13:01.860 --> 00:13:05.860
This one over here represents
the content view of the drawer.

00:13:05.870 --> 00:13:08.800
And this window here represents
the larger parent window.

00:13:08.830 --> 00:13:11.710
So editing stuff in Interface
Builder is real simple.

00:13:11.720 --> 00:13:13.880
I'm going to make a little close button.

00:13:13.880 --> 00:13:15.500
We can do all sorts of other
interesting things with it.

00:13:15.520 --> 00:13:17.520
Like Henri said,
we have support for tint.

00:13:17.530 --> 00:13:20.790
Just come up here,
bring up the inspector.

00:13:20.870 --> 00:13:23.390
You can choose between
the default control tint,

00:13:23.400 --> 00:13:25.760
which is you're going to use
if it's something that you

00:13:26.010 --> 00:13:27.560
really want the user to see.

00:13:27.560 --> 00:13:29.160
Make it blue.

00:13:30.670 --> 00:13:36.560
What I want to do now is I want to link
this button to the method in NSDRAWR that

00:13:36.580 --> 00:13:38.640
is going to close the drawer.

00:13:38.640 --> 00:13:39.530
It's incredibly simple.

00:13:39.660 --> 00:13:45.100
You hold down the Control key,
and you just draw a line down to NSDRAWR.

00:13:45.160 --> 00:13:49.010
And the inspector over here changes,
and you're given a list of

00:13:49.010 --> 00:13:52.240
all of the methods that that
NSDRAWR object supports.

00:13:52.270 --> 00:13:54.260
And, whoop, it closes right there.

00:13:54.570 --> 00:13:57.990
So I'll connect that, and we're done.

00:13:58.200 --> 00:14:01.080
That simple.

00:14:01.190 --> 00:14:03.000
Go ahead and close that.

00:14:03.100 --> 00:14:08.780
Next I want to show you
our tab view editor.

00:14:09.470 --> 00:14:13.630
Over here, right on the palette,
bring that up.

00:14:13.680 --> 00:14:17.100
Here's some of our nice live resizing,
which is very helpful

00:14:17.100 --> 00:14:18.050
when you have shadows.

00:14:18.060 --> 00:14:20.900
It's very nice to be able
to kind of nudge stuff up,

00:14:20.920 --> 00:14:24.150
to be able to see how things line up.

00:14:24.190 --> 00:14:25.910
So.

00:14:26.760 --> 00:14:31.580
Make a new tab here,
like another closed tab.

00:14:31.580 --> 00:14:34.690
We can put another button on it.

00:14:35.670 --> 00:14:39.730
I like how stuff kind of highlights
and kind of shows that this is

00:14:40.000 --> 00:14:42.380
something that is a container,
so we draw this little ring

00:14:42.380 --> 00:14:45.320
around it so that you know that
you can drag stuff into it.

00:14:45.320 --> 00:14:47.350
I think that's a little
easier than just knowing that,

00:14:47.350 --> 00:14:50.510
oh, the little nubbies got a little
mark knocked out of them.

00:14:50.510 --> 00:14:54.990
That's what it did before,
which was kind of lame.

00:14:55.330 --> 00:14:56.950
So we'll call this Close.

00:14:57.160 --> 00:14:59.520
And here again,
everybody knows what to do now.

00:14:59.520 --> 00:15:02.810
I'm just going to draw
a line down to NSDRAW.

00:15:03.240 --> 00:15:04.590
Select Close.

00:15:04.630 --> 00:15:05.090
That simple.

00:15:05.100 --> 00:15:10.520
We'll make an open one here so that
we can actually pop it back open.

00:15:15.600 --> 00:15:18.820
And just to show you how this drawer--
I'm going to click on this drawer here.

00:15:18.820 --> 00:15:21.660
And you can see here that it is already--
since we drug it off the palette,

00:15:21.660 --> 00:15:24.130
it's already linked up the content
view and the parent window to

00:15:24.270 --> 00:15:25.730
link up to the associated windows.

00:15:25.810 --> 00:15:29.410
If you were going to do this
with the actual NS drawer object,

00:15:29.490 --> 00:15:33.010
you just hook those up to the
windows that you already have.

00:15:33.010 --> 00:15:33.330
OK.

00:15:33.500 --> 00:15:35.830
So we're done laying out our interface.

00:15:35.830 --> 00:15:39.910
And one of the very cool things about
Interface Builder is we have this

00:15:39.930 --> 00:15:43.490
great thing called Test Interface Mode,
which allows us to

00:15:43.490 --> 00:15:44.930
actually unarchive the nib

00:15:45.730 --> 00:15:48.900
and this is just as it
would in your real app.

00:15:49.030 --> 00:15:53.610
So if I hit open, doors open,
and click the tabs, close the door,

00:15:53.630 --> 00:15:57.530
open it back up, close it there,
just works.

00:15:57.910 --> 00:16:01.150
Very cool.

00:16:03.300 --> 00:16:05.440
And just as easily as
it works for this demo,

00:16:05.440 --> 00:16:07.630
it works for everything else in the kit.

00:16:07.740 --> 00:16:10.140
It's just-- How do you add a third tab?

00:16:10.280 --> 00:16:10.470
Huh?

00:16:10.640 --> 00:16:11.440
How do you add a third tab?

00:16:11.520 --> 00:16:14.370
Okay, it's not in my script,
but I'll show you.

00:16:15.750 --> 00:16:17.820
You can copy and paste them.

00:16:17.880 --> 00:16:18.920
You can click on here.

00:16:18.920 --> 00:16:21.220
I'll change this to foo.

00:16:21.280 --> 00:16:23.920
You can move them around
with the arrow keys,

00:16:23.940 --> 00:16:26.960
just to show you that it's different.

00:16:27.020 --> 00:16:27.750
Very good.

00:16:27.840 --> 00:16:29.100
Works very well.

00:16:29.220 --> 00:16:31.760
So that's my demo.

00:16:36.980 --> 00:16:39.800
So now let's talk about Carbon.

00:16:39.960 --> 00:16:45.900
We spent a lot of time this year adding
support for Carbon in Interface Builder.

00:16:46.190 --> 00:16:51.040
Which, by the way, for Cocoa developers,
this is good to have Carbon support,

00:16:51.040 --> 00:16:56.900
because IB, as I said earlier,
is an Apple Interface Builder tool.

00:16:56.900 --> 00:17:01.520
And we'll be covering those two platforms
in parallel and adding features to one

00:17:01.520 --> 00:17:03.900
or the other frameworks at the same time.

00:17:03.900 --> 00:17:08.900
So Cocoa developers don't say, "Oh gee,
I don't care about Carbon support."

00:17:08.900 --> 00:17:11.140
This is important for you too,
because we're working very

00:17:11.140 --> 00:17:13.850
hard to be sure that both
platforms are fully covered.

00:17:13.900 --> 00:17:17.720
So let me talk about
Interface Builder for Carbon.

00:17:18.120 --> 00:17:19.760
There are two distinctive pieces.

00:17:19.900 --> 00:17:23.140
There is the Interface
Builder application,

00:17:23.140 --> 00:17:26.790
the tool,
and there is also the IB Carbon runtime.

00:17:27.160 --> 00:17:29.370
Those are two different pieces.

00:17:29.830 --> 00:17:32.320
So let me talk about the application.

00:17:32.320 --> 00:17:33.950
IB only works on MacÂ OSÂ X.

00:17:34.030 --> 00:17:38.120
This is a Cocoa application,
and it only runs on MacÂ OSÂ X.

00:17:38.280 --> 00:17:40.870
It allows you to layout
your user interface to what

00:17:40.950 --> 00:17:42.900
you've been seeing here.

00:17:42.900 --> 00:17:47.260
It generates a Nib file,
which is a replacement for all the DLOG,

00:17:47.340 --> 00:17:50.810
DITL,
MBAR resources that you used to use.

00:17:51.200 --> 00:17:54.100
Those are now replaced by a Nib file.

00:17:54.100 --> 00:17:58.140
It's XML-based,
so we generate an XML file.

00:17:58.150 --> 00:17:58.810
It's plain text.

00:17:59.010 --> 00:18:02.340
You can open it into a text
editor and go ahead and change it.

00:18:02.340 --> 00:18:06.300
We don't want you to do that
because there is some syntax here.

00:18:06.320 --> 00:18:07.420
Don't mess with it.

00:18:07.450 --> 00:18:11.780
But you can go and change your
label with any text editor.

00:18:11.890 --> 00:18:16.840
What's very interesting with the
XML format is that it provides both

00:18:17.170 --> 00:18:19.100
forward and backward compatibility.

00:18:19.160 --> 00:18:23.160
The way it's done is that
we could potentially open

00:18:23.160 --> 00:18:28.690
old Nib file with a new IB,
or open new Nib file with an old IB.

00:18:28.700 --> 00:18:31.200
It works in both ways.

00:18:31.250 --> 00:18:36.900
It's a Unicode compliant,
because we use XML by default, UTF-8.

00:18:37.030 --> 00:18:39.660
So we can have
Japanese inside the XML file.

00:18:39.660 --> 00:18:41.350
It works great.

00:18:42.770 --> 00:18:45.500
So the second part now,
the iBCarbon runtime.

00:18:45.530 --> 00:18:49.800
It is a piece that allows you to reload,
to load a Nib file from your application

00:18:50.200 --> 00:18:52.540
and recreate your user interface.

00:18:52.590 --> 00:18:55.420
It's available today on MacÂ OSÂ X.

00:18:55.470 --> 00:18:57.220
It's part of Carbon.

00:18:57.290 --> 00:18:59.490
It's completely part of Carbon.

00:18:59.720 --> 00:19:01.170
It's not something on the side that you,
"Oh yeah, I may use it a lot." It's

00:19:01.220 --> 00:19:03.460
really part of Carbon.

00:19:03.460 --> 00:19:03.460
It's real.

00:19:03.510 --> 00:19:09.300
And it will be available on MacÂ OS 8.6
and up as part of Carbon Nib 1.1.

00:19:09.370 --> 00:19:15.120
So you'll be able to design your
interface once and maybe a little tweak,

00:19:15.120 --> 00:19:19.690
use the same Nib file
on MacÂ OS 8.6 and up.

00:19:20.870 --> 00:19:24.110
So this is a diagram of how it works.

00:19:24.120 --> 00:19:26.800
With Interface Builder,
you generate a nib file.

00:19:26.820 --> 00:19:30.560
And using the application,
using the iBCarbon runtime,

00:19:30.620 --> 00:19:32.700
can recreate the application.

00:19:32.770 --> 00:19:37.640
Something I forgot to say earlier is
that a Cocoa nib and a Carbon nib,

00:19:37.640 --> 00:19:39.840
you can't mix them.

00:19:39.840 --> 00:19:43.580
You can't have a Cocoa nib and say, oh,
I'm going to use it in Carbon.

00:19:43.850 --> 00:19:47.850
Although they are the same format,
the content is not the same.

00:19:47.950 --> 00:19:53.010
Carbon controls have different
properties than the Cocoa controls.

00:19:53.130 --> 00:19:55.380
So they are not interchangeable.

00:19:55.430 --> 00:19:58.960
So a lot of Mac developers ask me, OK,
it's great.

00:19:58.960 --> 00:19:59.960
I have this nib file.

00:19:59.960 --> 00:20:01.420
But what do I do with it?

00:20:01.470 --> 00:20:06.340
They are used to resource fork and put
their DLOG and DITL into a resource fork.

00:20:06.400 --> 00:20:07.590
So I have this nice text file.

00:20:07.600 --> 00:20:09.370
But what do I do with it?

00:20:09.610 --> 00:20:13.480
The new application packaging
provides the contentment facility.

00:20:13.480 --> 00:20:16.660
I'm sure you've heard about
this new thing on MacÂ OSÂ X.

00:20:16.740 --> 00:20:19.890
So this is an application which
will show you the structure of the

00:20:19.900 --> 00:20:21.600
folder inside this application.

00:20:21.600 --> 00:20:25.580
And the nib file goes into the
English Lproj like it was doing on Cocoa.

00:20:25.680 --> 00:20:27.490
This is the same thing.

00:20:27.560 --> 00:20:31.410
If you have a French version,
you're going to have a French.lproj

00:20:31.440 --> 00:20:35.450
and a French nib inside this folder.

00:20:35.720 --> 00:20:37.600
So this is where you're
going to put your nib.

00:20:37.600 --> 00:20:40.980
If you use Project Builder,
just add your nib into your project.

00:20:40.980 --> 00:20:42.130
And you're going to
go at the right place.

00:20:42.250 --> 00:20:43.880
You don't have to worry about anything.

00:20:43.890 --> 00:20:45.780
We're going to find it for you.

00:20:45.780 --> 00:20:47.900
This is really smooth.

00:20:49.830 --> 00:20:54.410
There is one header for the
IBCarbon runtime and six APIs.

00:20:54.720 --> 00:20:56.720
What we decided right
now is the API is very,

00:20:56.720 --> 00:20:59.180
very simple,
and it's really the bare minimum.

00:20:59.210 --> 00:21:01.880
I'm sure you're going to say, oh,
I can't do this, I can't do that.

00:21:01.960 --> 00:21:05.920
We don't want to put too much API now,
having to support them later, and say,

00:21:05.920 --> 00:21:07.940
oh gee, we shouldn't have done that.

00:21:08.040 --> 00:21:15.380
So this is really the minimum
API to be able to start using IB.

00:21:15.640 --> 00:21:20.580
We will be adding new APIs as we need.

00:21:22.050 --> 00:21:25.280
So let me go through those six APIs.

00:21:25.290 --> 00:21:31.280
We have first two APIs to create a nib
reference and dispose of a nib reference.

00:21:31.330 --> 00:21:35.220
So you just pass the name of
your nib to create nib reference.

00:21:35.230 --> 00:21:39.120
In this case, for example, main,
or my nib.

00:21:39.140 --> 00:21:42.260
And it returns a reference to this nib,
which you're going to use

00:21:42.410 --> 00:21:45.580
to pass to other functions.

00:21:45.600 --> 00:21:49.680
Once you're done with this nib,
call disposeNibReference,

00:21:49.690 --> 00:21:51.770
which you should try to
do as soon as possible.

00:21:51.780 --> 00:21:55.470
don't keep those nibs open for nothing.

00:21:56.880 --> 00:22:01.210
So once you have a Nib reference,
you can ask, give me a window.

00:22:01.210 --> 00:22:03.250
So pass the Nib, pass the name.

00:22:03.400 --> 00:22:07.390
In Interface Builder,
we're going to show you that later,

00:22:07.450 --> 00:22:09.210
every object has a name.

00:22:09.210 --> 00:22:12.280
So you can say, my main window,
for example,

00:22:12.370 --> 00:22:16.370
and you're just going to pass
my main window as a name.

00:22:16.370 --> 00:22:19.100
And it's going to
return you a window ref,

00:22:19.500 --> 00:22:23.820
with all the control inside being
set up as you design them in IB.

00:22:24.680 --> 00:22:26.950
If you want to have access
to one of those controls,

00:22:27.000 --> 00:22:30.560
for example, you want to have access to
a button inside this window,

00:22:30.560 --> 00:22:33.240
just set a control
ID to your button in IB,

00:22:33.240 --> 00:22:35.490
and just say, get control ID,
and you're going to get

00:22:35.490 --> 00:22:36.660
a pointer to your button.

00:22:36.660 --> 00:22:38.910
We have also three APIs for menus.

00:22:38.910 --> 00:22:41.950
You can create a menu,
a single menu from a Nib.

00:22:41.950 --> 00:22:46.580
Same thing, pass the Nib reference,
pass the name of the object in a Nib,

00:22:46.580 --> 00:22:48.740
and it returns you a menu ref.

00:22:48.820 --> 00:22:53.200
You can also create the full menu bar,
which is what we're going to do usually.

00:22:54.520 --> 00:22:57.460
You pass the Nib reference,
give the name of the menu bar,

00:22:57.460 --> 00:22:58.750
and you're going to
return the whole menu bar.

00:22:58.760 --> 00:23:00.520
And you can set the menu bar if you want.

00:23:00.530 --> 00:23:02.650
We have a shortcut for that,
because usually you just want

00:23:02.730 --> 00:23:04.780
to set the menu bar directly.

00:23:04.890 --> 00:23:08.240
So we have a set menu bar from Nib,
where we just set the

00:23:08.240 --> 00:23:10.260
menu bar directly for you.

00:23:10.270 --> 00:23:11.340
This is a little program.

00:23:11.500 --> 00:23:15.710
This is a simple Carbon app
that's going to put its menu bar

00:23:15.880 --> 00:23:18.080
on the menu bar and the window.

00:23:18.100 --> 00:23:19.280
And believe me, this works.

00:23:19.280 --> 00:23:23.220
You can take this code, compile it,
and you really create a Carbon app

00:23:23.220 --> 00:23:26.340
where you can drag the window,
all the menu are functional.

00:23:26.370 --> 00:23:27.260
This really works.

00:23:27.390 --> 00:23:28.260
This is not fake.

00:23:28.270 --> 00:23:31.160
Only thing missing here is
the testing of the status.

00:23:31.160 --> 00:23:34.590
You see, OK,
do I really have this menu bar

00:23:34.590 --> 00:23:35.940
in my Nib and stuff like that?

00:23:35.940 --> 00:23:39.710
But those, what,
10 lines of code really make

00:23:39.920 --> 00:23:42.340
a real Carbon application.

00:23:42.400 --> 00:23:46.460
So as I said, first line,
you create your Nib reference,

00:23:46.490 --> 00:23:48.460
pass the name of the Nib.

00:23:48.480 --> 00:23:51.220
Without the extension .Nib,
you just pass the name,

00:23:51.250 --> 00:23:55.720
and you get a Nib reference,
set the menu bar, passing the Nib,

00:23:55.940 --> 00:23:57.510
passing main menu.

00:23:57.570 --> 00:23:59.550
Create a window from Nib.

00:23:59.780 --> 00:24:01.900
When I'm done here,
so I dispose of the new reference,

00:24:02.030 --> 00:24:04.910
I show the window,
and I call run application event loop,

00:24:05.390 --> 00:24:09.590
which is a new Carbon event way
of doing your main event loop

00:24:09.790 --> 00:24:11.510
to replace what's next event.

00:24:11.520 --> 00:24:15.160
And once the quit is going to be there,
so if you press, you select the quit,

00:24:15.160 --> 00:24:18.680
it's going to quit your application,
you have nothing else to do.

00:24:18.940 --> 00:24:19.710
This really works.

00:24:19.820 --> 00:24:26.140
I was a Macintosh developer before Cocoa,
and that's relatively amazing to be able

00:24:26.190 --> 00:24:29.230
to do a Carbon app with so little lines.

00:24:31.840 --> 00:24:37.930
So, I'm going to show you now what you
have on the palette for Carbon.

00:24:37.930 --> 00:24:40.290
The Carbon palette and the
Cocoa palette are different,

00:24:40.300 --> 00:24:42.700
depending on which template you choose.

00:24:42.730 --> 00:24:45.390
I say I want to do a
Carbon palette or a Cocoa palette,

00:24:45.390 --> 00:24:47.690
you're going to get different palettes.

00:24:47.800 --> 00:24:50.680
So I'm going to go through all
the different Carbon palettes now.

00:24:50.700 --> 00:24:53.890
So basically you have an application,
which is the Apple menu where

00:24:53.890 --> 00:24:55.580
you're going to put your about box.

00:24:55.700 --> 00:25:00.090
You have a file menu, an edit menu,
which are fully populated and all the

00:25:00.140 --> 00:25:02.420
commands have been set on those menus.

00:25:02.700 --> 00:25:05.950
You have a sub-menu,
which you can use as a sub-menu,

00:25:05.950 --> 00:25:10.690
just an item, the window,
and a separator.

00:25:10.700 --> 00:25:12.620
All those menus are fully there.

00:25:12.710 --> 00:25:15.400
If you drag the file menu to a menu bar,
you're going to get the

00:25:15.400 --> 00:25:19.700
wolf file menu with all the
commands for those menus set.

00:25:19.700 --> 00:25:21.770
So the open command, etc.

00:25:21.770 --> 00:25:23.280
is going to be set.

00:25:24.400 --> 00:25:29.530
We have the first control palette:
Push button, Edit text, Checkbox,

00:25:29.550 --> 00:25:36.270
Radio button, Radio 1, Radio 2,
Radio group, Image well, Scroll bars,

00:25:36.460 --> 00:25:41.380
Pop-up menu, Progress bar, Static text,
different types of Bevel buttons.

00:25:42.800 --> 00:25:45.420
We have the second one,
which we may really get out later on.

00:25:45.420 --> 00:25:46.700
It's a bit messy right now.

00:25:46.890 --> 00:25:51.700
We have scrollers, we have icon view,
box separators.

00:25:51.740 --> 00:25:53.700
We have custom view,
which doesn't work in DP4.

00:25:53.700 --> 00:25:56.700
It's there, but it doesn't work yet.

00:25:56.700 --> 00:25:59.700
You'll be able to drag a
custom view from your palette,

00:25:59.830 --> 00:26:03.900
assigning a name,
and be able to automatically get your

00:26:03.900 --> 00:26:05.700
custom control into your application.

00:26:05.700 --> 00:26:08.700
We have a user pane, we have tab view.

00:26:08.710 --> 00:26:12.630
We have the two versions of the--which
I don't look very good here.

00:26:12.700 --> 00:26:12.700
I need to do a better job here.

00:26:12.700 --> 00:26:14.880
We have the two versions
of the data browser,

00:26:14.880 --> 00:26:16.700
the list view and the column view.

00:26:16.700 --> 00:26:18.480
We have the clock, etc.

00:26:18.700 --> 00:26:20.700
So everything is there.

00:26:20.700 --> 00:26:23.700
We're covering 100% of Carbon UI.

00:26:23.700 --> 00:26:28.900
We have two types of windows,
a document window and a dialog window.

00:26:30.290 --> 00:26:33.920
And now I want to bring back Scott,
who's going to show you

00:26:34.270 --> 00:26:37.200
how to build a Carbon app.

00:26:37.340 --> 00:26:42.290
What we've got going here is
a Project Builder project.

00:26:42.470 --> 00:26:44.790
You can make your own
at home if you want.

00:26:44.880 --> 00:26:47.410
Just go up to the File menu, New Project.

00:26:47.580 --> 00:26:50.350
We're down here with
this Carbon application,

00:26:50.350 --> 00:26:51.210
Nib-based.

00:26:51.350 --> 00:26:55.060
It's going to do the same kind
of thing that I'm doing here.

00:26:55.060 --> 00:26:58.690
I want to show you a few of
the files that we've got going.

00:26:58.690 --> 00:27:00.500
This is the main .c file.

00:27:00.500 --> 00:27:04.210
It's not much more than what
Henri covered in his slides.

00:27:04.210 --> 00:27:08.880
We just have the, you know,
if it's an error, we exit gracefully.

00:27:10.620 --> 00:27:12.870
But the same,
we're using the new Carbon event loop,

00:27:12.870 --> 00:27:13.650
which is great.

00:27:13.680 --> 00:27:17.400
It significantly cuts down on
the amount of code that you

00:27:17.400 --> 00:27:18.730
have to write to do this stuff.

00:27:18.800 --> 00:27:22.530
Next, we've got the main .nib,
which we'll get to in a second.

00:27:22.530 --> 00:27:24.510
This contains the interface.

00:27:24.510 --> 00:27:26.950
And as you can see,
the only thing we're linking

00:27:26.950 --> 00:27:30.220
against here is Carbon.framework,
the Carbon framework.

00:27:30.220 --> 00:27:33.140
If you look up here, the only thing we're
including is Carbon.h.

00:27:33.220 --> 00:27:36.360
There's no Objective-C runtimes or
any other strange little things.

00:27:36.360 --> 00:27:37.700
It's very lightweight.

00:27:38.940 --> 00:27:42.930
So, what I want to do now is I want
to show you how we're going to,

00:27:42.980 --> 00:27:46.550
we can edit this.

00:27:46.550 --> 00:27:46.550
We can double-click on this.

00:27:47.100 --> 00:27:49.150
So this brings up our window.

00:27:49.290 --> 00:27:50.790
There's two objects in this nib.

00:27:50.800 --> 00:27:53.130
There's a main menu and a main window.

00:27:53.260 --> 00:27:57.300
And if you look,
these are the names that we'll be

00:27:57.300 --> 00:27:58.910
calling out for down here in the code.

00:27:58.920 --> 00:28:01.140
You can kind of see it
right there and right there.

00:28:01.240 --> 00:28:03.020
So keep track of that.

00:28:03.100 --> 00:28:07.030
Other than that, it's very simple.

00:28:07.180 --> 00:28:11.160
I'm going to build just a
simple little dialogue here.

00:28:11.250 --> 00:28:13.430
We can drag a box out.

00:28:13.720 --> 00:28:15.600
Make it bigger.

00:28:15.600 --> 00:28:20.700
Let's see, we can put-- let's put a
radio group in it here.

00:28:21.650 --> 00:28:25.490
One thing I want to show
is we have embedding,

00:28:25.490 --> 00:28:28.960
which is, for Carbon, pretty cool.

00:28:29.020 --> 00:28:31.060
When we actually save this
out and you read it back in,

00:28:31.060 --> 00:28:34.930
if you apply a signature to this box,
you'll actually be able to,

00:28:34.960 --> 00:28:38.300
if you want to hide the whole box,
you can hide the box and everything

00:28:38.300 --> 00:28:41.150
inside it also gets hidden,
which is nice.

00:28:41.160 --> 00:28:44.700
I want to add a few more
radio buttons to this.

00:28:44.790 --> 00:28:47.360
We come down to the Attributes Inspector.

00:28:47.380 --> 00:28:51.190
We can say we want to put four there,
just for fun.

00:28:51.400 --> 00:28:52.710
What else is good?

00:28:52.810 --> 00:28:56.060
We've got level buttons.

00:28:56.120 --> 00:29:00.070
One thing that's kind of cool,
we have this Images tab down here,

00:29:00.070 --> 00:29:02.360
which for right now is just
populated with a few simple

00:29:02.360 --> 00:29:03.310
icon refs from the system.

00:29:03.420 --> 00:29:06.050
But eventually,
one of the things we'll be

00:29:06.140 --> 00:29:09.530
integrating with PB is we'd
like to be able to pull out any

00:29:09.530 --> 00:29:12.530
interesting resources that you have,
that you're managing in that project,

00:29:12.530 --> 00:29:15.390
and then we'll fill them
in in this tab down here.

00:29:15.400 --> 00:29:18.410
So if I want to drag a stop icon up here,
or any other,

00:29:18.500 --> 00:29:23.370
if you've got pictures or other different
icons and any other structures in here,

00:29:23.460 --> 00:29:26.980
you'll be able to drag those
on and use them in your nib.

00:29:29.130 --> 00:29:30.340
Got buttons here.

00:29:30.360 --> 00:29:35.750
I don't know-- how many people here
went to the Carbon event talks?

00:29:35.920 --> 00:29:36.460
Good number of people?

00:29:36.590 --> 00:29:36.960
Cool.

00:29:37.290 --> 00:29:39.200
So when they say,
"How does Interface Builder

00:29:39.200 --> 00:29:42.390
use the new Carbon event
model?" This is how we do it.

00:29:42.580 --> 00:29:45.520
You come over here, all

00:29:46.090 --> 00:29:50.680
All controls have a signature and an ID,
and that's how you pick them

00:29:50.680 --> 00:29:53.800
out using the control manager.

00:29:54.060 --> 00:29:57.830
They also can have an HI command,
and we've listed the ones

00:29:57.960 --> 00:30:00.160
that the system knows,
and you can choose them here,

00:30:00.160 --> 00:30:05.090
but if you want to set an event handler
on a button or any other widget,

00:30:05.090 --> 00:30:08.420
you would type it in here,
and then you attach the event

00:30:08.420 --> 00:30:13.980
handler to the signature looking
for these specific commands,

00:30:14.100 --> 00:30:15.700
or any commands that you type in there.

00:30:15.720 --> 00:30:17.850
So we put quit in here,
so what's going to happen

00:30:17.910 --> 00:30:20.260
is when we hit quit,
we haven't installed any other

00:30:20.260 --> 00:30:22.820
handlers on the buttons or anything,
so it's going to fall

00:30:22.820 --> 00:30:26.390
through to the system ones,
and it'll cause the app to quit.

00:30:26.600 --> 00:30:28.760
So when it quits,
it's because I hit quit,

00:30:28.810 --> 00:30:30.470
it's not because it crashed.

00:30:32.270 --> 00:30:34.310
We'll drag a progress bar.

00:30:34.320 --> 00:30:35.370
These always demo very well.

00:30:35.520 --> 00:30:40.830
So make it one of those.

00:30:41.130 --> 00:30:43.170
So I'm done here.

00:30:43.220 --> 00:30:46.660
And I'm going to come down here,
and I'm going to build it.

00:30:47.260 --> 00:30:50.190
And PB has politely told me
that I forgot to save it,

00:30:50.190 --> 00:30:53.240
so I'm going to save it before I build.

00:30:53.680 --> 00:30:57.770
So we build it,
copied our Nib into the package in the

00:30:57.970 --> 00:30:59.340
location that Henri told you about.

00:30:59.360 --> 00:31:01.400
So now I'm just going to run it.

00:31:03.930 --> 00:31:05.090
And here we go.

00:31:05.210 --> 00:31:08.840
So we have radio buttons that
know that they're radio buttons,

00:31:08.900 --> 00:31:09.760
which is cool.

00:31:09.920 --> 00:31:11.610
Got buttons that click, progress bars.

00:31:11.920 --> 00:31:15.630
Here's the menus that we had before.

00:31:15.620 --> 00:31:16.580
down there in the editor.

00:31:16.610 --> 00:31:19.200
And when I hit quit, it quits.

00:31:19.270 --> 00:31:21.990
So there we go.

00:31:25.720 --> 00:31:27.240
Just so you know,
I really want to encourage

00:31:27.240 --> 00:31:28.370
people to check this out.

00:31:28.430 --> 00:31:31.250
This is where it is inside the new PB.

00:31:31.300 --> 00:31:32.900
So have fun with that.

00:31:32.940 --> 00:31:35.280
And back to Henri.

00:31:36.090 --> 00:31:38.900
So, let's talk about what
we are doing right now,

00:31:38.910 --> 00:31:42.000
what's going to be in the next
release of Interface Builder,

00:31:42.030 --> 00:31:44.060
our short-term goals.

00:31:45.780 --> 00:31:51.850
One of the biggest things we have to
do is integrate with Project Builder.

00:31:52.000 --> 00:31:54.460
We used to have a very good
integration with what we

00:31:54.460 --> 00:31:56.680
call now Project Builder Woo.

00:31:56.780 --> 00:31:59.710
And we want to bring back this
integration with Project Builder.

00:31:59.850 --> 00:32:04.320
Today we have a very minimal
integration between IB and PB.

00:32:04.380 --> 00:32:08.010
The main thing we have is that
if you haven't saved your nib,

00:32:08.010 --> 00:32:12.960
PB is going to call IB and say, "Hey,
please save your nib before continuing."

00:32:13.200 --> 00:32:15.100
So we have a minimal integration now.

00:32:15.150 --> 00:32:21.100
We want to bring that back to the states
where we were with Project Builder Woo.

00:32:21.220 --> 00:32:25.350
So if you add an image to your project,
IB will know that and show

00:32:25.350 --> 00:32:27.480
you into the image tab.

00:32:27.520 --> 00:32:30.120
If you add an image inside IB,
we will be adding it

00:32:30.250 --> 00:32:32.270
to the Project Builder.

00:32:32.380 --> 00:32:36.140
Same thing to generate .h and .m,
so you're able to add those

00:32:36.300 --> 00:32:38.000
files directly to your project.

00:32:38.080 --> 00:32:41.370
So all the stuff that
Cocoa Developer knew about

00:32:41.590 --> 00:32:44.750
the integration with PB,
IB, we want to bring it

00:32:44.830 --> 00:32:47.100
back to the same point.

00:32:47.150 --> 00:32:49.380
The other thing is for Carbon.

00:32:49.380 --> 00:32:51.980
What you have to do is we want
to finish completely Carbon.

00:32:51.980 --> 00:32:54.320
There are some little holes
here and there in Carbon.

00:32:54.390 --> 00:32:57.820
For example, you can't set a pop-up
menu on the Bevel button,

00:32:57.850 --> 00:32:59.800
little thing like that.

00:32:59.940 --> 00:33:03.680
It's mainly 90%, 95% I would say there.

00:33:03.720 --> 00:33:06.900
But we have to finish
that a little bit better.

00:33:06.930 --> 00:33:09.990
We're also adding cool
features for Carbon developers.

00:33:10.050 --> 00:33:13.500
One of them is being able
to import resources from the

00:33:13.500 --> 00:33:15.090
Resource Manager resources.

00:33:15.110 --> 00:33:18.100
So if you have your
application using DLOG,

00:33:18.100 --> 00:33:22.080
DITL, and you want to take advantage
of the new Carbon event model

00:33:22.110 --> 00:33:24.580
and of the interface builder,
we will be allowing you to

00:33:24.730 --> 00:33:30.280
import those resources in
IB and convert them to Nib file.

00:33:30.280 --> 00:33:34.280
We want also to use--implement
the applied layout guidelines,

00:33:34.280 --> 00:33:38.210
which right now works for
Cocoa but doesn't work for Carbon.

00:33:38.280 --> 00:33:41.280
So we want to bring that also for Carbon.

00:33:41.470 --> 00:33:47.580
We want to bring back also,
we have a test mode for Cocoa,

00:33:47.690 --> 00:33:52.430
but for Carbon it's not there yet,
and it will be in the next release.

00:33:52.480 --> 00:33:55.630
That's very important to be
able to see your interface

00:33:55.630 --> 00:33:57.420
immediately as you build it.

00:33:57.540 --> 00:34:04.700
So, I'm going to bring back Scott again,
or test Gode.

00:34:04.700 --> 00:34:11.750
I didn't sign up to test any Godes,
so I don't know how

00:34:11.750 --> 00:34:13.070
this is going to work.

00:34:15.960 --> 00:34:17.990
Oops, coming soon for Carbon.

00:34:18.030 --> 00:34:21.950
What he's going to show you
is not in the DP4 release,

00:34:21.950 --> 00:34:26.220
but hopefully we'll be able to make
that available before-- it will be nice.

00:34:26.330 --> 00:34:26.680
Somehow.

00:34:26.860 --> 00:34:28.080
Yes, somehow.

00:34:28.410 --> 00:34:31.900
One of the things we've
heard a lot is-- oh,

00:34:31.900 --> 00:34:36.890
can we see the menu
bars would be cool too.

00:34:37.200 --> 00:34:45.300
[Transcript missing]

00:34:45.650 --> 00:34:48.310
We wanted to be able to--
you have all these resources

00:34:48.630 --> 00:34:49.440
that you've used for Carbon.

00:34:49.440 --> 00:34:52.080
We want to make sure that
we can move those forward,

00:34:52.090 --> 00:34:55.180
because it's a real pain to have
to drop all these buttons down.

00:34:55.240 --> 00:34:58.550
So we have this great thing
called-- we can-- whoop.

00:34:59.040 --> 00:35:03.070
We can import the-- you can
import your resource file now.

00:35:03.680 --> 00:35:09.340
And so I'm going to apply this on
an actual classic copy of this copy,

00:35:09.410 --> 00:35:11.980
because it had some
interesting dialogues in it.

00:35:12.190 --> 00:35:14.220
And what we do is we go through
and we look for the resources

00:35:14.380 --> 00:35:17.330
that apply towards interfaces.

00:35:17.340 --> 00:35:19.280
Now we're not ResEdit, okay?

00:35:19.280 --> 00:35:24.490
We're not bringing in all sorts of,
you know, all assortment of resources.

00:35:24.550 --> 00:35:29.380
We look for D-logs, Dittles, menu bars,
menus.

00:35:29.420 --> 00:35:32.300
If you have a control,
we'll map that back to the PROC ID and

00:35:32.300 --> 00:35:35.750
we'll actually convert it to an
actual appearance control here.

00:35:35.900 --> 00:35:37.550
So, and Windows.

00:35:37.720 --> 00:35:41.260
So these are, this is everything that
it found in disk copy.

00:35:41.290 --> 00:35:42.100
You can look through them.

00:35:42.100 --> 00:35:44.340
I'm just gonna check off the win,
'cause it's just gonna bring up a window.

00:35:44.340 --> 00:35:45.740
It's not that interesting.

00:35:45.830 --> 00:35:52.130
Here's its menu bar and here's
its associated mess of D-logs.

00:35:52.230 --> 00:35:55.530
The one that's kinda cool is 250,
'cause it has some neat

00:35:55.610 --> 00:35:57.980
appearance controls and I'm
gonna bring those forward.

00:35:58.070 --> 00:35:59.970
So we hit import.

00:36:00.710 --> 00:36:05.350
and went through,
it got all of the menus.

00:36:05.400 --> 00:36:09.040
We've got the D-log here,
so I can open that up.

00:36:09.120 --> 00:36:11.850
And if anybody's ever opened up
the preference panel on this copy,

00:36:11.900 --> 00:36:16.140
which isn't maybe many of you,
but it might look a little bit familiar.

00:36:16.240 --> 00:36:19.390
And so it's gone through,
it's brought in all of the very

00:36:19.390 --> 00:36:22.280
simple dialog items like check
boxes and buttons and things.

00:36:22.360 --> 00:36:26.660
But it's also gone through
and it's mapped the control,

00:36:26.760 --> 00:36:30.570
the custom control to the
control and then using the proc

00:36:30.810 --> 00:36:34.880
ID mapped it and actually brought
up an actual pop-up button.

00:36:35.000 --> 00:36:39.340
And so we're going to do that for all
of the controls that are like that,

00:36:39.480 --> 00:36:41.490
so you'll be able to
bring all that stuff in.

00:36:41.550 --> 00:36:43.840
One thing that we don't do,
like these right here

00:36:43.840 --> 00:36:44.660
are kind of misleading.

00:36:44.660 --> 00:36:48.040
They look like separators,
but they're actually user items,

00:36:48.080 --> 00:36:51.290
which are just erect,
and so we map those to user panes

00:36:51.570 --> 00:36:55.100
in using the appearance manager,
which is sort of the lightest

00:36:55.180 --> 00:36:56.140
weight thing we can get.

00:36:56.220 --> 00:37:01.130
So I'm going to delete that and I'll
pop over here and we'll actually grab

00:37:01.130 --> 00:37:03.760
an actual separator just so that,

00:37:04.630 --> 00:37:06.000
Because in a minute those are
going to show up blank and

00:37:06.000 --> 00:37:07.740
I don't want anybody asking.

00:37:07.780 --> 00:37:09.480
Why do they show up blank?

00:37:09.530 --> 00:37:13.200
The other thing to notice-- What's that?

00:37:13.820 --> 00:37:17.600
Well, there's that, too.

00:37:17.660 --> 00:37:19.880
You'll notice that the
buttons are a little tiny,

00:37:19.900 --> 00:37:21.800
and things are a little squished.

00:37:21.840 --> 00:37:24.880
So I can go up to Layout,
and I can apply the layout

00:37:24.940 --> 00:37:26.500
guidelines to the window.

00:37:26.510 --> 00:37:30.130
And you'll see that everything
kind of enlarges just a little bit.

00:37:30.160 --> 00:37:31.680
Buttons go.

00:37:31.680 --> 00:37:33.060
Good.

00:37:35.980 --> 00:37:40.050
One other thing I want to show you,
just to reinforce that we do

00:37:40.050 --> 00:37:41.330
use H-I commands for everything.

00:37:41.370 --> 00:37:46.970
If you want to come in here and you
want to type in your command tag here,

00:37:46.970 --> 00:37:46.970
you can type it.

00:37:47.320 --> 00:37:49.360
like that and it'll fire.

00:37:49.360 --> 00:37:51.100
I don't have any handlers set up.

00:37:51.200 --> 00:37:52.690
Obviously I haven't poured
disk copy or anything so that's

00:37:52.700 --> 00:37:54.100
not going to do anything here.

00:37:54.210 --> 00:37:59.210
So the other thing that Henri said
that we were going to do is this test

00:37:59.270 --> 00:38:01.320
mode for Carbon which is very cool.

00:38:01.430 --> 00:38:04.810
We're actually,
we write out the nib and we actually

00:38:04.810 --> 00:38:08.380
have a little application that runs in
the background and reads it back in.

00:38:08.490 --> 00:38:11.750
So we go to test interface
just like you did in Cocoa.

00:38:11.810 --> 00:38:15.720
It pops up this slick little
external editor and there you go.

00:38:15.720 --> 00:38:19.950
We've got check boxes and
pop up button or yeah,

00:38:20.050 --> 00:38:20.960
pop up button.

00:38:21.060 --> 00:38:25.490
If you in your real app went to
execute descriptor it would actually

00:38:25.490 --> 00:38:29.400
fire that exact tag and you would
look for it with the handler.

00:38:29.400 --> 00:38:32.510
So there again it's just a,
it's a little bit

00:38:33.110 --> 00:38:35.000
Just works, which is what we like.

00:38:35.020 --> 00:38:37.120
So come over here,
we can quit the simulator,

00:38:37.190 --> 00:38:39.830
jump back into here.

00:38:39.940 --> 00:38:40.830
Done with that.

00:38:40.940 --> 00:38:42.790
Bring back Henri.

00:38:44.700 --> 00:41:11.200
[Transcript missing]

00:41:11.690 --> 00:41:15.900
As I said also, we want to have a better
integration with Project Builder.

00:41:15.960 --> 00:41:20.530
Last year, we showed you some code
synchronization where in I/B,

00:41:20.630 --> 00:41:23.450
if you add an outlet,
automatically it will add

00:41:23.540 --> 00:41:25.600
this outlet into your .h.

00:41:25.710 --> 00:41:28.460
Because of the change of Project Builder,
this doesn't work anymore.

00:41:28.600 --> 00:41:32.800
But we want to bring that back,
which will be even better with the

00:41:32.800 --> 00:41:35.600
new Project Builder because they
have the right support for us.

00:41:35.600 --> 00:41:39.530
So we want to bring you back full code
synchronization between I/B and PB,

00:41:39.600 --> 00:41:42.890
so you don't have to go back and
forth between your code and the

00:41:42.890 --> 00:41:46.570
user interface to be able to be
sure that everything is in sync.

00:41:46.600 --> 00:41:51.400
That will become also
very important for us.

00:41:52.100 --> 00:41:53.920
Also,
we want to improve the experience for

00:41:53.920 --> 00:41:58.000
developers who have an extending IB,
especially the Cocoa developers.

00:41:58.000 --> 00:42:01.130
We have this mechanism
with IB with the palettes,

00:42:01.340 --> 00:42:06.000
where you can create your own palette
and add them to the Cocoa palette.

00:42:06.220 --> 00:42:07.950
That's always been very, very fragile.

00:42:08.060 --> 00:42:12.000
It broke every time IB or
AppKit was changing.

00:42:12.060 --> 00:42:14.000
So we want to revisit that.

00:42:14.000 --> 00:42:18.630
Something also that has been impossible
to do is having your own editor,

00:42:18.630 --> 00:42:19.860
in-place editor.

00:42:20.050 --> 00:42:23.160
For someone trying to do the tab
view editor outside of Apple,

00:42:23.160 --> 00:42:25.000
it would be a very big challenge.

00:42:25.180 --> 00:42:29.140
So we want to try to bring
APIs for you to be able to do your

00:42:29.140 --> 00:42:31.000
own editor for your own object.

00:42:31.390 --> 00:42:34.750
This is a big task.

00:42:37.460 --> 00:42:42.200
Cocoa will also be moving to
XML Nib file at one point,

00:42:42.340 --> 00:42:46.740
so we will both have
XML for Carbon and Cocoa.

00:42:46.740 --> 00:42:50.030
It works great for Carbon,
so I'm sure it's going to

00:42:50.030 --> 00:42:51.890
work great also for Cocoa.