WEBVTT

00:00:05.940 --> 00:00:10.440
Ladies and gentlemen, please welcome
User Experience Technology Manager,

00:00:10.440 --> 00:00:12.360
John Galenzi.

00:00:19.410 --> 00:00:20.090
Well, good afternoon.

00:00:20.090 --> 00:00:22.370
Welcome to session 142.

00:00:22.500 --> 00:00:26.820
This is one of many of the sessions
here at the conference on the

00:00:26.920 --> 00:00:29.400
Aqua user experience in Mac OS X.

00:00:29.440 --> 00:00:32.640
And this session really is,
as I said on Monday in

00:00:32.640 --> 00:00:37.160
the Aqua overview session,
is really the mirror session of that one.

00:00:37.220 --> 00:00:40.950
And this one presents the material
from the Aqua overview session

00:00:41.530 --> 00:00:44.440
really from an API point of view,
so from the programmer's point of view.

00:00:44.500 --> 00:00:46.970
Speaking through all of the
material that was presented

00:00:47.080 --> 00:00:49.560
in the Aqua overview session,
item by item,

00:00:49.560 --> 00:00:54.130
and telling you how to implement these
things within your apps as a developer.

00:00:54.200 --> 00:00:58.440
So to walk you through this content,
I'd like to bring on stage Guy Fullerton,

00:00:58.440 --> 00:01:02.080
a member of the high-level
toolbox engineering team at Apple.

00:01:03.470 --> 00:01:08.000
So Aqua is the next generation
user experience for Mac OS.

00:01:08.010 --> 00:01:10.640
But it's more than just a whole bunch
of pretty pictures on the screen.

00:01:10.680 --> 00:01:13.590
It's behaviors, it's functionality,
and it's your entire

00:01:13.590 --> 00:01:15.900
experience when using Mac OS X.

00:01:15.930 --> 00:01:22.200
And the key for you as developers is
that Aqua is not complete until your

00:01:22.200 --> 00:01:25.470
applications take advantage of it,
until we have lots of applications on

00:01:25.470 --> 00:01:25.470
the system that take advantage of it.

00:01:27.200 --> 00:01:29.280
So I'm going to show you the
steps that are required for

00:01:29.350 --> 00:01:30.540
your application to aquify.

00:01:30.620 --> 00:01:32.680
And it's really not a
very difficult process.

00:01:32.740 --> 00:01:36.300
A lot of the functionality, the toolbox,
and lower-level system services

00:01:36.380 --> 00:01:38.100
will do for you automatically.

00:01:38.100 --> 00:01:42.530
I'll also show you how to avoid certain
problem areas when you're doing your

00:01:42.570 --> 00:01:45.080
code and aquifying your application.

00:01:45.100 --> 00:01:48.570
And lastly,
I hope to give you some kind of

00:01:48.590 --> 00:01:53.180
level of insight into exactly
why Aqua is the way it is,

00:01:53.240 --> 00:01:56.620
so that when your application
needs to do some sort of

00:01:56.620 --> 00:01:59.960
custom user interface element,
you can better match the

00:01:59.960 --> 00:02:02.420
rest of the Aqua experience.

00:02:03.640 --> 00:02:05.910
So the most striking thing
about Aqua when you first see

00:02:05.910 --> 00:02:07.260
it is probably the windows.

00:02:07.260 --> 00:02:10.980
They're obviously drastically
different from Mac OS 9 in appearance.

00:02:10.980 --> 00:02:14.020
And there's several cool technology
features that we've built

00:02:14.020 --> 00:02:17.670
into Mac OS X that make using
Windows much more of a pleasure.

00:02:18.940 --> 00:02:21.880
One thing about Windows that may not
necessarily be obvious the first time

00:02:21.940 --> 00:02:26.800
you start using Mac OS X is the fact
that we have a brand new layering model.

00:02:26.830 --> 00:02:30.800
On Mac OS 9,
when you select an application,

00:02:30.800 --> 00:02:33.990
either by clicking on one of its
windows or choosing it from the

00:02:33.990 --> 00:02:37.560
application menu or something like that,
all of that application's

00:02:37.570 --> 00:02:39.500
windows come to the foreground.

00:02:39.620 --> 00:02:41.680
On Mac OS X, we don't have that behavior.

00:02:42.100 --> 00:02:45.350
When you click on an
application's window,

00:02:45.460 --> 00:02:47.990
just that one window
comes to the foreground.

00:02:48.100 --> 00:02:49.570
This is beneficial for a couple reasons.

00:02:49.660 --> 00:02:53.520
The main reason it's beneficial in
any case is that users have a very

00:02:53.550 --> 00:02:58.090
document-centric way of working,
and this facilitates it very easily.

00:02:58.870 --> 00:03:01.550
So there's a couple things as application
developers you need to be aware of

00:03:01.620 --> 00:03:04.940
with respect to this functionality.

00:03:05.050 --> 00:03:10.110
The first is that because just one of
your windows can come to the front most,

00:03:10.310 --> 00:03:12.650
And that does bring your
application to the foreground,

00:03:12.650 --> 00:03:14.980
but just because your
application is at the foreground,

00:03:15.070 --> 00:03:17.200
you can't assume that all
your windows are visible.

00:03:17.200 --> 00:03:20.150
If you have some sort of status window,
you might want to bring that

00:03:20.280 --> 00:03:23.180
forward in addition to just the
one window the user clicked on.

00:03:23.290 --> 00:03:28.530
Similarly,
the Toolbox will automatically bring

00:03:28.580 --> 00:03:31.700
all of your application's floating
windows to the foreground when any one

00:03:31.700 --> 00:03:31.700
of your windows comes to the front.

00:03:32.940 --> 00:03:35.770
And to make it easier on your lives,
your window list has not

00:03:35.840 --> 00:03:37.300
changed at all in this model.

00:03:37.530 --> 00:03:40.760
You will only see your windows in the
window list and you won't have to watch

00:03:40.760 --> 00:03:42.800
out for any other applications' windows.

00:03:42.800 --> 00:03:45.920
And if your user does want to bring all
of your app's windows to the foreground,

00:03:45.930 --> 00:03:47.770
there's a couple mechanisms to do that.

00:03:47.820 --> 00:03:49.790
I'll talk about one a
little bit later on,

00:03:49.790 --> 00:03:53.140
but they can always click on your
applications icon on the Doc to

00:03:53.140 --> 00:03:55.190
bring everything forward at once.

00:03:57.120 --> 00:04:01.300
So Mac OS X automatically double
buffers your window content for you.

00:04:01.300 --> 00:04:02.840
This has several cool advantages.

00:04:02.920 --> 00:04:05.530
The first is a user advantage,
and that is that drawing

00:04:05.530 --> 00:04:06.740
appears very snappy.

00:04:06.740 --> 00:04:09.280
If you create a Mac OS 9 window,
just a normal Mac OS 9 window,

00:04:09.280 --> 00:04:11.890
and you don't go through any
effort of double buffering it,

00:04:11.910 --> 00:04:14.730
and you make individual quick
draw calls or appearance primitive

00:04:14.880 --> 00:04:17.430
calls or other calls that draw,
you'll see each individual draw

00:04:17.430 --> 00:04:20.960
operation take place one after the other,
and it looks kind of clunky.

00:04:20.980 --> 00:04:23.920
Well, on Mac OS X we automatically
redirect the drawing into the

00:04:23.920 --> 00:04:26.410
off-screen buffer for that window,
or what you can think of

00:04:26.470 --> 00:04:28.770
as an off-screen buffer,
and then later that gets blit to

00:04:28.850 --> 00:04:30.280
the screen all in one fell swoop.

00:04:30.280 --> 00:04:33.380
It has a very crisp,
snappy appearance to it.

00:04:34.220 --> 00:04:36.540
Additionally,
the fact that we buffer windows

00:04:36.540 --> 00:04:39.860
lets us take advantage of Quartz
in really cool ways to do shadow

00:04:39.950 --> 00:04:43.180
compositing or translucency
effects and things like that.

00:04:46.070 --> 00:04:48.120
So, like I mentioned,
when you're drawing with

00:04:48.200 --> 00:04:50.580
Quick Draw on Mac OS 9,
individual graphics operations

00:04:50.670 --> 00:04:51.780
take place one at a time.

00:04:51.900 --> 00:04:53.590
And on 10,
they still take place one at a time,

00:04:53.600 --> 00:04:55.000
but they write to some off-screen buffer.

00:04:55.000 --> 00:04:58.350
Typically,
your application does not need to

00:04:58.360 --> 00:05:03.930
manage that buffer and the timing that's
used to transfer it to the screen.

00:05:03.930 --> 00:05:07.980
The Toolbox does that for you
in probably 99% of the cases.

00:05:08.000 --> 00:05:11.650
When you do some drawing and
then you re-enter the event loop,

00:05:11.670 --> 00:05:16.000
we will automatically flush all the
windows that need to be flushed.

00:05:16.000 --> 00:05:18.690
If you do have some cases in
your application where sort of

00:05:18.980 --> 00:05:22.160
intermediate frames of the drawing
might make sense to display or if

00:05:22.160 --> 00:05:25.000
you're doing some kind of animation
without calling into the event loop,

00:05:25.180 --> 00:05:29.830
you can always manually flush by
using the QD Flush Port Buffer API.

00:05:32.950 --> 00:05:38.140
So on Mac OS X, we automatically turn
on buffering for you.

00:05:38.250 --> 00:05:42.720
And in this case,
we've got an API called QDIsPortBuffered,

00:05:42.800 --> 00:05:47.710
and this tells you when
a given port is buffered.

00:05:49.120 --> 00:05:52.880
I'll get to something else in a second.

00:05:52.880 --> 00:05:55.130
So essentially what this means
is now that we're automatically

00:05:55.130 --> 00:05:59.400
doing an off-screen buffer for you,
if your application on Mac OS 9 was

00:05:59.400 --> 00:06:02.680
doing its own off-screening or own
double buffering through GWorlds,

00:06:02.790 --> 00:06:05.070
you don't need to execute
that code on Mac OS X.

00:06:05.210 --> 00:06:11.810
So you want to use the QDsportBuffered
API when it returns true to

00:06:11.810 --> 00:06:13.220
conditionally turn off your
own GWorld support for your Windows.

00:06:13.740 --> 00:06:18.800
Additionally, each buffer for a window
has its own device depth,

00:06:18.900 --> 00:06:22.450
and the Windows Server in Quartz
will automatically do the dithering

00:06:22.510 --> 00:06:25.600
if it happens to be rendered to
a device that has a lower bit

00:06:25.780 --> 00:06:27.540
depth than the Quartz buffer.

00:06:27.650 --> 00:06:30.200
So you don't even need to
bother doing device loop when

00:06:30.200 --> 00:06:31.680
you're running on Mac OS X.

00:06:33.070 --> 00:06:36.060
On Mac OS 9, of course,
we don't do any automatic buffering.

00:06:36.160 --> 00:06:40.600
So it might behoove you to leave
your GWorld drawing code in there

00:06:40.600 --> 00:06:44.960
and conditionalize it just to run on
Mac OS 9 using the QD isPortBuffered API.

00:06:45.130 --> 00:06:47.830
You'll also want a device loop on
Mac OS 9 just like you always have.

00:06:47.990 --> 00:06:51.380
It'll make sure you draw
properly across all devices.

00:06:51.420 --> 00:06:56.480
I should make another note that
the QD flush port buffer API,

00:06:56.480 --> 00:07:00.000
even though it does nothing on Mac OS 9,
is still perfectly safe to call.

00:07:02.600 --> 00:07:06.010
So one of the ways we take advantage
of Quartz is through window shadowing.

00:07:06.020 --> 00:07:09.100
Window shadowing is important
for a number of reasons,

00:07:09.100 --> 00:07:13.300
one of which is the fact that
unlike Mac OS 9 Platinum windows,

00:07:13.300 --> 00:07:17.160
an Aqua window does not have a
thick border around the edge,

00:07:17.160 --> 00:07:19.670
and the window shadow is one of
the ways you can help differentiate

00:07:19.710 --> 00:07:20.870
the edges of your windows.

00:07:20.880 --> 00:07:23.480
This also lets us do
cool usability features,

00:07:23.480 --> 00:07:26.360
like the fact that the frontmost
window actually has a darker,

00:07:26.360 --> 00:07:28.850
deeper shadow than the rest of the
windows in your application to make

00:07:28.850 --> 00:07:30.100
it stand out a little bit better.

00:07:30.820 --> 00:07:33.830
But not all windows
necessarily need shadows.

00:07:33.840 --> 00:07:37.440
You might have a case in your application
where you're displaying a window.

00:07:37.440 --> 00:07:40.070
For instance,
if you've got a scroll bar and you pop

00:07:40.070 --> 00:07:44.090
up a little window that displays the page
number that the user will have scrolled

00:07:44.090 --> 00:07:46.420
to when they log into the scroll bar,
it may not make sense to

00:07:46.430 --> 00:07:48.200
display a shadow on that window.

00:07:48.200 --> 00:07:50.300
So you can turn off
the shadow in two ways.

00:07:50.320 --> 00:07:53.880
The first way is by calling create
new window to build that window.

00:07:53.880 --> 00:07:57.120
If you pass in the no shadow attribute,
of course we're going to create a

00:07:57.120 --> 00:07:58.320
window that doesn't have a shadow.

00:07:59.260 --> 00:08:02.970
The second way does not work yet on DP4,
but by the time we ship the

00:08:02.970 --> 00:08:04.770
final version of Mac OS X,
it will work.

00:08:04.820 --> 00:08:08.780
We have a change window attributes
API that's been around since I think

00:08:08.850 --> 00:08:12.880
Mac OS 8.5 that allows you to dynamically
turn on and off certain window features,

00:08:12.880 --> 00:08:15.360
and the shadowing will
be one such feature.

00:08:18.520 --> 00:08:21.060
Now the fact that we have your
Windows buffer means we can do other cool

00:08:21.060 --> 00:08:24.200
things like drag the window around live.

00:08:24.290 --> 00:08:27.190
Of course,
this will only work if you call the

00:08:27.260 --> 00:08:29.470
standard Toolbox Drag Window API.

00:08:29.650 --> 00:08:32.480
A lot of you have custom
dragging code for your windows,

00:08:32.480 --> 00:08:35.680
typically implemented with drag
ray region or direct drawing to

00:08:35.740 --> 00:08:39.110
the screen and doing your own
pattern XORing and stuff like that.

00:08:39.120 --> 00:08:40.560
That won't work on X.

00:08:40.560 --> 00:08:42.410
First off,
because drag ray region will not

00:08:42.410 --> 00:08:43.830
have the behavior you expect.

00:08:43.930 --> 00:08:47.040
We'll go into a little bit more detail on
that on the Carbon enhancement sessions.

00:08:47.040 --> 00:08:50.100
Drawing to the screen just
really doesn't work on Mac OS X.

00:08:50.100 --> 00:08:52.800
In DP4,
there are ways to get it to kind of work,

00:08:52.990 --> 00:08:55.530
but it's not going to draw to the buffer,
so it's just not going to work out,

00:08:55.540 --> 00:08:56.230
and I'd say avoid it.

00:08:56.280 --> 00:08:58.920
If you do need some
custom dragging behavior,

00:08:59.330 --> 00:09:01.460
you can always take advantage
of Carbon events and hook into

00:09:01.540 --> 00:09:04.060
the drag window functionality
to do certain custom dragging.

00:09:06.640 --> 00:09:10.030
So of course another real cool
feature of Mac OS X is the Dock.

00:09:10.110 --> 00:09:13.360
And as you've seen,
Windows can minimize down to the Dock.

00:09:13.360 --> 00:09:16.280
The Toolbox tries to do as much
of this work for you as possible.

00:09:16.310 --> 00:09:18.590
In fact,
it's basically free for your application.

00:09:18.590 --> 00:09:21.980
Any document window,
which is one that has

00:09:21.980 --> 00:09:24.930
the collapsible bit,
the collapsible attribute

00:09:24.930 --> 00:09:27.670
turned on for it,
will automatically minimize down to the

00:09:27.670 --> 00:09:29.600
Dock when you click the Collapse box.

00:09:29.600 --> 00:09:33.280
Now in Mac OS 8, I believe,
we introduced the Collapse

00:09:33.280 --> 00:09:36.390
Window suite of APIs,
which worked with Mac OS 8's

00:09:36.390 --> 00:09:37.550
window shading behavior.

00:09:37.600 --> 00:09:41.090
The Collapse Window API allowed you to
window shade and unwindow shade windows.

00:09:41.090 --> 00:09:43.660
So in Mac OS X,
we're reusing these APIs to

00:09:43.720 --> 00:09:45.590
do the minimization process.

00:09:46.210 --> 00:09:48.180
Additionally,
calling Select Window on a window

00:09:48.180 --> 00:09:51.760
that happens to be minimized will
un-minimize it from the Dock and bring

00:09:51.800 --> 00:09:53.700
it to the front in one operation.

00:09:55.570 --> 00:09:57.800
So when a window is minimized,
there's a couple of things

00:09:57.800 --> 00:09:58.650
you need to be aware of.

00:09:58.660 --> 00:10:00.640
The first is that the
window is still visible.

00:10:00.640 --> 00:10:02.360
This has several key advantages.

00:10:02.360 --> 00:10:05.480
If a window is minimized in the dock,
say a progress window,

00:10:05.480 --> 00:10:07.440
you can continually update
the progress window.

00:10:07.440 --> 00:10:09.780
And if the user clicks on the
dock to unminimize the window,

00:10:09.780 --> 00:10:12.470
it'll unminimize immediately
in its currently drawn state,

00:10:12.500 --> 00:10:13.320
which is good.

00:10:13.320 --> 00:10:17.030
Also, it's still in your window list,
so you need to be aware of that.

00:10:17.160 --> 00:10:19.430
We have an isWindowCollapsed API,
which has, again,

00:10:19.440 --> 00:10:20.830
been around since Mac OS 8.

00:10:20.960 --> 00:10:23.090
If it's true,
your window is in a minimized state.

00:10:23.580 --> 00:10:27.140
There might be certain functionality
in your application that you'll want to

00:10:27.140 --> 00:10:29.200
turn off for certain minimized windows.

00:10:29.200 --> 00:10:33.760
For instance, if you have a Windows menu
with an arrange or tiling item,

00:10:33.760 --> 00:10:36.440
you probably don't want to arrange
or tile your minimized windows.

00:10:36.440 --> 00:10:38.360
It'll look kind of odd to
the user if there's a hole in

00:10:38.360 --> 00:10:39.590
the arranging that you did.

00:10:42.410 --> 00:10:44.930
The Dock doesn't just show
minimized windows in it.

00:10:45.010 --> 00:10:48.440
It also shows application icons or
possibly documents you've added to it.

00:10:48.460 --> 00:10:51.550
And of course you're going to want
a good icon for your application to

00:10:51.550 --> 00:10:53.300
show in the Dock when it's running.

00:10:53.320 --> 00:10:56.480
Now the Dock uses
128-bit by 128-bit icons,

00:10:56.490 --> 00:11:00.300
which are obviously much
bigger than the 32 by 32 icons.

00:11:00.310 --> 00:11:04.660
If you don't provide a 128 by 128 icon,
we'll take your 32 by

00:11:04.760 --> 00:11:06.290
32 icon and scale it up.

00:11:06.300 --> 00:11:10.200
And as you've seen in some of the demos,
it can look kind of clunky and it really

00:11:10.200 --> 00:11:12.300
doesn't give your app a good feel to it.

00:11:12.300 --> 00:11:16.290
So we're going to talk more about
this in two different sessions.

00:11:16.390 --> 00:11:20.300
There's an application packaging
session and an icon services session.

00:11:20.300 --> 00:11:24.640
The icon services session will tell
you how to build up the icon ref,

00:11:24.740 --> 00:11:27.300
the 128 by 128 icon ref.

00:11:27.300 --> 00:11:30.720
And the application packaging session
will show you how to stick that

00:11:30.800 --> 00:11:32.730
into your application's bundle.

00:11:36.100 --> 00:11:40.820
So, obviously the menus in Aqua went
through a visual transformation,

00:11:40.820 --> 00:11:43.730
but there's a more subtle
transformation that we did that really

00:11:43.760 --> 00:11:47.950
increases the usability of Aqua,
and that is a little bit

00:11:48.010 --> 00:11:51.420
of menu bar reorganization.

00:11:51.420 --> 00:11:51.420
Under Mac OS 9,

00:11:51.750 --> 00:11:53.560
Mac OS 9 obviously has
a very long history,

00:11:53.560 --> 00:11:56.060
and so commands kept getting
added to it and added to it.

00:11:56.140 --> 00:11:59.210
And after time, it became kind of clunky,
and things aren't necessarily

00:11:59.210 --> 00:12:00.680
arranged in the best possible way.

00:12:00.780 --> 00:12:02.900
So in Aqua, we tried to rectify that.

00:12:02.940 --> 00:12:08.430
The leftmost menu in the menu
bar is the application menu.

00:12:08.480 --> 00:12:11.200
This is the menu in which you
put all of the commands that

00:12:11.200 --> 00:12:13.270
only pertain to your application.

00:12:13.400 --> 00:12:17.310
As you can see, Quit and About,
things like preferences and

00:12:17.310 --> 00:12:18.910
the Hide and Show items.

00:12:20.850 --> 00:12:24.520
Building an application menu is something
you'll all recognize as familiar.

00:12:24.520 --> 00:12:27.290
From a resource standpoint,
it's essentially just an Apple menu.

00:12:27.500 --> 00:12:30.950
Create a normal Apple menu which has
the Apple character as its title.

00:12:31.040 --> 00:12:32.870
Put your About item in it
just like you always have.

00:12:33.060 --> 00:12:34.800
Put a separator in it
just like you always have.

00:12:34.800 --> 00:12:37.980
On Mac OS 9,
when you're running on CarbonLib,

00:12:38.010 --> 00:12:39.770
we detect the Apple menu.

00:12:39.770 --> 00:12:42.600
We automatically populate
it with Apple menu items,

00:12:42.600 --> 00:12:44.800
and we even handle all
the selections for you.

00:12:44.980 --> 00:12:47.800
When you run on Mac OS X,
we do a couple different things.

00:12:47.800 --> 00:12:50.800
First off, we populate it with all the
standard application menu items:

00:12:50.810 --> 00:12:52.800
Quit, Hide, Show, Preferences,
and all those.

00:12:52.800 --> 00:12:56.360
Secondly,
we change the name of the application

00:12:56.360 --> 00:12:59.190
menu to be that of your application.

00:13:01.640 --> 00:13:04.400
Now, a lot of today's applications
have very long names.

00:13:04.400 --> 00:13:06.710
You know, you've got a company name,
the actual app name,

00:13:06.710 --> 00:13:08.500
typically a version number on it.

00:13:08.500 --> 00:13:13.500
That whole string is not appropriate
to throw into the application menu.

00:13:13.640 --> 00:13:16.500
But by default, the toolbox will.

00:13:16.500 --> 00:13:20.080
So,
we've come up with a scenario so that you

00:13:20.200 --> 00:13:25.330
can actually create a short version of
your application's name specifically for

00:13:25.330 --> 00:13:27.500
stuffing into the application menu title.

00:13:27.500 --> 00:13:32.500
And this is by one item in your
application bundle's info P list.

00:13:32.500 --> 00:13:35.450
We'll talk more about that at the
application packaging session as well.

00:13:35.500 --> 00:13:37.780
Now, if you don't provide one
of these short names,

00:13:37.790 --> 00:13:40.500
we'll take your application's
long name and truncate it,

00:13:40.500 --> 00:13:42.500
probably some place in the middle where
it doesn't necessarily make sense.

00:13:42.500 --> 00:13:46.810
So, you really need to provide a short
application name if your application

00:13:46.810 --> 00:13:48.600
name is at all non-trivial.

00:13:50.990 --> 00:13:53.660
So, like I mentioned on CarbonLib,
we handle most application menu

00:13:53.660 --> 00:13:55.680
selections for you automatically.

00:13:55.750 --> 00:13:58.690
But when your app needs
to do a few other things,

00:13:58.770 --> 00:14:00.820
you need to handle your About item
the way you always have,

00:14:00.820 --> 00:14:02.500
but then again,
you already have code to do that,

00:14:02.500 --> 00:14:05.340
so that's no change.

00:14:05.340 --> 00:14:07.170
We added a Quit and
Preferences item to it,

00:14:07.340 --> 00:14:09.740
but it's your responsibility
to handle those items.

00:14:09.810 --> 00:14:12.420
When a user chooses the Quit item
from the application menu,

00:14:12.420 --> 00:14:14.770
we'll send you a standard
Quit application Apple event.

00:14:14.770 --> 00:14:17.830
Handle that the way you always would,
you know, bring up your Save/Don't

00:14:17.830 --> 00:14:20.500
Save dialogs and shut down your
application as appropriate.

00:14:20.600 --> 00:14:23.010
When they choose the Preferences item,
we send you a brand new Apple event

00:14:23.010 --> 00:14:24.210
called Show Preferences.

00:14:24.210 --> 00:14:26.640
When you receive this Apple event,
you'll want to obviously

00:14:26.640 --> 00:14:27.820
display your preferences.

00:14:29.260 --> 00:14:32.700
Everything else in the application menu
is handled automatically right now.

00:14:32.700 --> 00:14:34.890
We deal with the hide and
show items automatically.

00:14:35.000 --> 00:14:39.780
The services isn't quite wired up yet,
and we'll have more

00:14:39.780 --> 00:14:39.780
details on that later.

00:14:42.020 --> 00:14:45.640
Now a lot of applications have
either complex preferences,

00:14:45.710 --> 00:14:48.510
or they have plugins
which need preferences,

00:14:48.510 --> 00:14:53.610
or they might even have just multiple
preferences items for historical sake.

00:14:54.130 --> 00:14:57.260
We made the Preferences menu
customizable so that you could

00:14:57.290 --> 00:15:01.000
add multiple Preferences items
or even delete it if you need to.

00:15:01.000 --> 00:15:03.950
The Preferences item in
the Application menu has a

00:15:03.950 --> 00:15:06.000
command ID associated with it.

00:15:06.000 --> 00:15:11.530
It's all lowercase, p-r-e-f,
just like you would expect.

00:15:11.770 --> 00:15:14.640
and you can find the position of
that item in the Preferences menu

00:15:14.640 --> 00:15:16.490
by using a new Menu Manager API.

00:15:16.560 --> 00:15:20.220
In fact, we have a whole suite of new
Menu Manager APIs that are designed

00:15:20.300 --> 00:15:24.520
to let you deal with menu commands,
menu items, sorry, on a command basis.

00:15:24.520 --> 00:15:28.120
You can find them, hide them, show them,
things of that nature.

00:15:28.120 --> 00:15:29.540
So once you've found
the Preferences item,

00:15:29.560 --> 00:15:31.400
you might want to change its name,
you might want to hide it,

00:15:31.400 --> 00:15:33.960
you might want to add other items,
but you can customize

00:15:33.960 --> 00:15:35.370
it however you need to.

00:15:37.210 --> 00:15:40.100
The next menu over in the
menu bar is the File menu.

00:15:40.240 --> 00:15:42.690
This hasn't changed a whole lot,
but it's important to

00:15:42.730 --> 00:15:44.080
understand what it's for now.

00:15:44.120 --> 00:15:46.890
It's the place that you put all of
your document-specific commands.

00:15:46.890 --> 00:15:49.620
There should be nothing that pertains
only to the application here,

00:15:49.620 --> 00:15:51.560
or stuff that contains
the document content.

00:15:51.930 --> 00:15:55.850
So as you can see,
the File menu no longer

00:15:55.850 --> 00:15:55.850
has a "quit" command.

00:15:58.820 --> 00:16:01.700
Now the last menu we'd like
everyone to adopt is a window menu.

00:16:01.700 --> 00:16:04.810
This window menu becomes
particularly important now that we

00:16:04.810 --> 00:16:06.580
have a different layering model.

00:16:06.650 --> 00:16:10.100
If your windows are intermingled
with another application's windows,

00:16:10.400 --> 00:16:15.720
it's important to offer an easy
way to the user to get at the

00:16:15.720 --> 00:16:15.720
other windows in your application.

00:16:16.430 --> 00:16:18.690
And of course if you add this,
it'll show up in your

00:16:18.790 --> 00:16:21.690
CarbonLib versions as well,
and I'm sure your users will

00:16:21.890 --> 00:16:24.260
find it useful there as well.

00:16:25.120 --> 00:16:27.990
Unfortunately, we don't have an automatic
window menu support,

00:16:28.080 --> 00:16:30.000
but we're looking at what
it'll take to do that.

00:16:30.030 --> 00:16:32.280
So for the time being,
if your application does not

00:16:32.280 --> 00:16:35.240
already have a window menu,
you just need to add a few standard

00:16:35.250 --> 00:16:38.940
commands to it and then add one item
for every window in your application.

00:16:39.000 --> 00:16:42.000
If the user chooses one of the items
that pertains to one of your windows,

00:16:42.000 --> 00:16:44.000
just call Select Window to
bring it forward.

00:16:44.000 --> 00:16:49.000
One of the standard commands
is Minimize Command,

00:16:49.100 --> 00:16:53.000
and when the user chooses Minimize,
you should collapse the frontmost window.

00:16:53.000 --> 00:16:54.900
The other standard command
is Bring All to Front.

00:16:55.030 --> 00:16:57.050
If they choose that,
you want to bring all of your

00:16:57.050 --> 00:17:00.060
application windows to front,
obviously, and you do that by calling

00:17:00.060 --> 00:17:03.000
Set Front Process on your
application's process serial number.

00:17:03.000 --> 00:17:06.200
This is also a really good place to put
any tiling or arranging functionality

00:17:06.210 --> 00:17:08.000
if you offer that in your application.

00:17:11.530 --> 00:17:14.500
So, all right,
you've just laid out your menus for Aqua.

00:17:14.500 --> 00:17:17.030
Well, what should they look like when
they're running on Mac OS 9?

00:17:17.160 --> 00:17:20.650
Well, the answer is they should
look like Mac OS 9 menus.

00:17:21.050 --> 00:17:24.070
The file menu should still contain
the quick command and your preferences

00:17:24.070 --> 00:17:27.400
item should be wherever you normally
put it in your Mac OS 9 product.

00:17:27.460 --> 00:17:29.860
To facilitate this,
we've added a bit to the

00:17:29.860 --> 00:17:31.390
menu manager's gestalt.

00:17:31.390 --> 00:17:32.960
That's the Aqua layout bit.

00:17:33.040 --> 00:17:35.260
If you see this bit turned on,
you want to change the way

00:17:35.260 --> 00:17:36.440
your menus are laid out.

00:17:36.440 --> 00:17:38.600
Of course, there's a number of different
ways you can do that.

00:17:38.700 --> 00:17:43.070
You might have a set of different
mbar and menu resources in your app

00:17:43.180 --> 00:17:46.790
and change which one you load based
on whether or not the bit is set.

00:17:46.880 --> 00:17:49.390
Alternatively,
you can go ahead and leave the quick

00:17:49.390 --> 00:17:53.800
command in your file menu and remove
it when you're running under Aqua,

00:17:53.800 --> 00:17:56.800
or maybe dynamically add it
if you're running on Mac OS 9,

00:17:56.800 --> 00:17:58.000
or do whatever you need to do.

00:17:58.000 --> 00:18:02.000
You also conditionally want to
move your preferences item around.

00:18:03.630 --> 00:18:06.230
So before I go any further,
I want to give you a demo that's

00:18:06.230 --> 00:18:10.160
not exactly related to Aqua,
but I've got some ulterior motives,

00:18:10.160 --> 00:18:11.430
so bear with me.

00:18:11.450 --> 00:18:13.770
So if I can get the demo machine.

00:18:16.700 --> 00:18:18.460
I've just got a very
simple application here,

00:18:18.460 --> 00:18:21.100
and I don't know if it's shown up
very well in some of the other demos,

00:18:21.210 --> 00:18:24.030
but Aqua menus are transparent.

00:18:24.070 --> 00:18:25.510
You might have seen that before.

00:18:25.560 --> 00:18:27.980
But we've been working on the
menu manager a little bit.

00:18:28.020 --> 00:18:32.370
Besides just adding some APIs to
deal with the command IDs,

00:18:32.430 --> 00:18:34.350
we've also added dynamic menu support.

00:18:34.470 --> 00:18:37.430
So while I've got this menu pulled down,
I can change the modifier

00:18:37.540 --> 00:18:40.040
keys that I hold down,
and it changes the items

00:18:40.040 --> 00:18:41.400
that are displayed.

00:18:44.500 --> 00:18:46.970
I'd like to go back to slides.

00:18:47.080 --> 00:18:54.130
So between those two facts
and the fact that in Mac OS 8

00:18:54.230 --> 00:18:57.290
with the Appearance Manager,
we also introduced a whole bunch of new

00:18:57.290 --> 00:19:02.710
menu item glyphs and the full keyboard
command suite-- you can assign control,

00:19:02.740 --> 00:19:06.510
option, shift, and those things to your
menu command modifiers.

00:19:06.570 --> 00:19:09.330
Between all those features,
there's basically no reason

00:19:09.340 --> 00:19:12.860
not to adopt the system menu
def for your text-based menus.

00:19:12.920 --> 00:19:16.460
That, in fact, is the only way to get
translucency for your menus.

00:19:16.490 --> 00:19:19.490
Right now, translucency is not
supported in custom MDEFs.

00:19:19.500 --> 00:19:21.660
And of course,
when you adopt the standard MDEF,

00:19:21.660 --> 00:19:24.880
you're going to have maximum
future compatibility as well.

00:19:28.860 --> 00:19:31.620
So in my opinion,
the absolute best feature

00:19:31.620 --> 00:19:32.860
of Aqua is Sheets.

00:19:32.880 --> 00:19:35.960
This is the way modality
always should have been.

00:19:36.800 --> 00:19:41.070
Sheets are a way to associate an
individual dialog or alert directly

00:19:41.070 --> 00:19:43.770
to the document which it applies.

00:19:44.710 --> 00:19:48.810
And this is probably the individual
hardest thing to implement for Aqua,

00:19:48.900 --> 00:19:51.570
but even as such, it's not very hard.

00:19:53.490 --> 00:19:56.740
The Toolbox tries to take care of as
much work for you as it possibly can.

00:19:57.090 --> 00:19:59.900
We run the Genie effect,
we deal with the document modality,

00:19:59.900 --> 00:20:01.600
and we also deal with
the window grouping.

00:20:01.750 --> 00:20:07.730
When a sheet's pulled down on a window,
you can actually click the

00:20:07.730 --> 00:20:07.730
document window and move both
the window and the sheet around.

00:20:09.600 --> 00:20:12.850
So the work you have to do, like I said,
is very simple and it's four basic steps.

00:20:12.910 --> 00:20:15.750
The steps you're pretty much
used to for all your normal

00:20:15.760 --> 00:20:17.490
Windows with a slight twist.

00:20:18.050 --> 00:20:20.570
To create a sheet,
use the Create New Window API,

00:20:20.570 --> 00:20:23.350
and just tell it, "Hey,
it's a sheet class window." All right,

00:20:23.350 --> 00:20:24.690
that gives you the sheet.

00:20:24.790 --> 00:20:28.140
But before you can actually display it,
there's one thing you need to do.

00:20:28.140 --> 00:20:30.730
In the Carbon event session,
we mentioned how a lot of our new

00:20:30.730 --> 00:20:34.230
functionality was only going to
be accessible via Carbon events,

00:20:34.230 --> 00:20:37.380
and this is one of those
pieces of new functionality.

00:20:37.380 --> 00:20:40.850
When a Genie Effect is about to run,
we need to show the window and have the

00:20:40.880 --> 00:20:45.900
windows image ready immediately so we can
run the Genie Effect with the real bits.

00:20:45.900 --> 00:20:49.170
In order to do that,
we need your application to

00:20:49.170 --> 00:20:53.200
respond to the K event window
draw contents apple event.

00:20:53.200 --> 00:20:55.180
Sorry, Carbon event.

00:20:56.290 --> 00:20:58.660
You simply do this by
installing the event handler.

00:20:58.660 --> 00:21:03.300
And when you receive the event,
do your normal window drawing.

00:21:03.440 --> 00:21:07.460
You can call draw controls or draw
whatever custom content you need to.

00:21:07.810 --> 00:21:11.090
and so we'll send you this event,
we'll have your bits already ready,

00:21:11.090 --> 00:21:14.220
and we will run the Genie
effect and spin your window out.

00:21:16.970 --> 00:21:19.480
So to actually run the Genie
effect and show the window,

00:21:19.630 --> 00:21:21.160
you call Show Sheet Window.

00:21:21.290 --> 00:21:23.200
This window is just like
Show Window except it

00:21:23.200 --> 00:21:26.410
takes an extra parameter,
and that parameter is the document

00:21:26.410 --> 00:21:28.090
window to which it applies.

00:21:28.180 --> 00:21:30.100
This API does a couple things.

00:21:30.220 --> 00:21:32.580
First, it associates the sheet
with its document.

00:21:32.650 --> 00:21:35.500
It'll run the Genie effect,
and then it sets up the system to

00:21:35.500 --> 00:21:38.900
deal with the proper modality of
that sheet to just its document.

00:21:38.970 --> 00:21:42.090
The other important thing to note
is this API returns immediately,

00:21:42.090 --> 00:21:43.170
just like Show Window.

00:21:43.400 --> 00:21:46.050
It doesn't put you into some sort of
funky modal state and we only exit

00:21:46.050 --> 00:21:47.700
after the user's done with the Genie.

00:21:47.700 --> 00:21:48.700
That doesn't happen.

00:21:48.700 --> 00:21:51.730
Show Window returns immediately,
and your application must continue

00:21:51.730 --> 00:21:53.400
with its normal event processing.

00:21:53.480 --> 00:21:56.700
And it's just that:
normal event processing.

00:21:57.520 --> 00:22:00.170
You'll receive events for the sheet just
like you would for any other window,

00:22:00.170 --> 00:22:01.970
and you can handle them just
like for any other window.

00:22:01.990 --> 00:22:04.790
And if you want to take advantage
of Carbon events to make your

00:22:04.790 --> 00:22:07.060
life a little bit easier,
you can do that too.

00:22:09.350 --> 00:22:11.560
So the user interacts with your sheet
for a while and ultimately they're

00:22:11.560 --> 00:22:15.300
going to click a button or do something
in the sheet that means dismiss it.

00:22:15.300 --> 00:22:17.780
And to get rid of the sheet and
thereby animate the Genie effect,

00:22:17.800 --> 00:22:19.900
you call Hide Sheet Window.

00:22:19.900 --> 00:22:23.280
This also unbinds the
sheet from its document.

00:22:23.280 --> 00:22:25.050
And like any other window,
you just dispose it when

00:22:25.050 --> 00:22:25.960
you're finished with it.

00:22:25.980 --> 00:22:28.450
Alternatively,
you could keep it around for a later

00:22:28.450 --> 00:22:30.350
use of Show Sheet Window if you want.

00:22:32.330 --> 00:22:37.300
So the vast majority of Sheet
use is usually very simple.

00:22:37.300 --> 00:22:40.720
You'll typically want to do save dialogs,
print dialogs, or custom alerts and

00:22:40.770 --> 00:22:41.890
things of that nature.

00:22:41.990 --> 00:22:45.070
And we've offered a standard
alert API for a little while now,

00:22:45.070 --> 00:22:47.710
and we made an equivalent
of that using Sheets,

00:22:47.810 --> 00:22:50.210
and it's called Create Standard Sheet.

00:22:50.390 --> 00:22:53.340
So Create Standard Sheet has mostly
the same parameters as Standard Alert.

00:22:53.340 --> 00:22:56.260
You can customize the message text,
the explanation text,

00:22:56.300 --> 00:22:59.510
you can customize the
buttons a little bit.

00:22:59.780 --> 00:23:01.780
The one difference is
that Create Standard Sheet

00:23:01.790 --> 00:23:03.060
takes an Event Target Ref.

00:23:03.060 --> 00:23:05.880
An Event Target Ref is one
of the Carbon Event objects

00:23:05.980 --> 00:23:07.640
to which events can be sent.

00:23:07.700 --> 00:23:10.160
This target is particularly
important because when the

00:23:10.250 --> 00:23:13.690
sheet is ultimately dismissed,
we are going to send the event

00:23:14.100 --> 00:23:18.640
telling you what the user clicked
directly to that event target.

00:23:19.230 --> 00:23:22.490
So you create your Sheet window,
you call Show Sheet window,

00:23:22.510 --> 00:23:25.340
and from that point on,
it's handled automatically.

00:23:25.430 --> 00:23:30.620
Create Standard Sheet will automatically
install enough Carbon Event Handlers

00:23:30.680 --> 00:23:34.390
onto the Sheet window such that
all of the event processing for

00:23:34.390 --> 00:23:35.950
that Sheet is handled for you.

00:23:36.240 --> 00:23:40.120
You won't receive any events for
that Sheet via Waitnext Event.

00:23:41.960 --> 00:23:45.430
So when the user manipulates the sheet
and finally clicks one of the buttons,

00:23:45.430 --> 00:23:49.470
the Create Standard Sheet API set
up some stuff so that we will call

00:23:49.500 --> 00:23:51.700
Hide Sheet Window for you automatically.

00:23:51.810 --> 00:23:54.060
And then we send a particular
Carbon event to the event

00:23:54.060 --> 00:23:55.180
target you provided.

00:23:55.210 --> 00:23:58.130
It'll be OK, Cancel, or Other,
depending on whatever

00:23:58.130 --> 00:23:59.690
button the user clicked.

00:24:01.570 --> 00:24:04.250
So the navigation services and
printing teams have come up with a

00:24:04.250 --> 00:24:07.660
new suite of APIs to let you take
advantage of their dialog services

00:24:07.660 --> 00:24:09.200
in such a way that they use Sheets.

00:24:09.200 --> 00:24:11.860
You should definitely check out the
sessions that they discuss this at

00:24:11.860 --> 00:24:13.120
to find out all the details there.

00:24:13.300 --> 00:24:15.630
But in general,
they try to make your lives as

00:24:15.660 --> 00:24:19.410
easy as possible and do as much
of the work for you as possible.

00:24:22.900 --> 00:24:26.430
So one of the other major changes
with Aqua is the system font.

00:24:26.520 --> 00:24:28.110
We're now drawing with Lucida.

00:24:28.110 --> 00:24:29.840
And in fact,
it's even a little bit bigger

00:24:29.910 --> 00:24:31.260
than you might be expecting.

00:24:31.310 --> 00:24:33.620
On Mac OS 9,
the system font was charcoal.

00:24:33.670 --> 00:24:35.150
Before that, it was Chicago.

00:24:35.280 --> 00:24:37.450
But in both cases, it was 12-point.

00:24:37.600 --> 00:24:40.100
The system font in Lucida is 13-point.

00:24:40.200 --> 00:24:42.240
The small system font is 11-point.

00:24:42.280 --> 00:24:44.260
And additionally,
there's a few cases where we

00:24:44.260 --> 00:24:48.660
render the font with special
effects in certain cases.

00:24:48.800 --> 00:24:51.230
The push button, for example,
has a slight shadow,

00:24:51.380 --> 00:24:52.490
as does the window title.

00:24:52.720 --> 00:24:54.790
And in fact,
the window title is rendered in 14-point.

00:24:54.940 --> 00:24:57.670
So there's a few nuances there.

00:24:58.940 --> 00:25:02.800
So despite the fact that
Lucida has a larger point size,

00:25:02.800 --> 00:25:07.800
it still has the overall same
metrics as Charcoal or Chicago.

00:25:07.800 --> 00:25:11.640
I think Charcoal and Chicago have
a 16-point overall line height.

00:25:11.840 --> 00:25:15.800
Lucida is roughly equivalent,
definitely does not go over 16.

00:25:15.800 --> 00:25:20.140
Similarly, the small system font has an
overall line height of 13 points.

00:25:20.150 --> 00:25:23.020
One important fact to
note is that Lucida is,

00:25:23.020 --> 00:25:27.140
on average, a little bit larger,
a little bit longer than

00:25:27.140 --> 00:25:31.110
Charcoal or Chicago,
so you might need to take care there.

00:25:32.910 --> 00:25:34.770
Of course,
your applications are going to want

00:25:34.770 --> 00:25:36.250
to use AquaText wherever they can.

00:25:36.310 --> 00:25:39.260
If you use the standard system controls,
windows, and menus,

00:25:39.270 --> 00:25:41.540
we're going to take care of
all that for you automatically.

00:25:41.560 --> 00:25:43.860
But I know your applications
do a lot of custom drawing.

00:25:43.900 --> 00:25:47.270
We've implemented a suite of
Appearance Manager Aqua-savvy

00:25:47.270 --> 00:25:48.810
Theme Text Drawing APIs.

00:25:48.910 --> 00:25:52.440
They actually build upon some
earlier Appearance Manager technology

00:25:52.440 --> 00:25:53.900
using the Theme Font IDs.

00:25:53.900 --> 00:25:55.840
This was a set of meta
fonts you could request,

00:25:55.840 --> 00:25:58.950
like "Just let me use the system font,"
or "Just let me use the small system

00:25:58.950 --> 00:26:03.850
font," or "The small bold system font."
So this suite of APIs lets you draw

00:26:03.850 --> 00:26:10.780
or measure or truncate any number of
these meta fonts in an Aqua-savvy way.

00:26:11.170 --> 00:26:15.550
And in order to make your lives easier,
we've tried to make these APIs relatively

00:26:15.550 --> 00:26:19.300
equal to the Quick Draw Text APIs that
you've grown to know and love.

00:26:19.310 --> 00:26:21.680
We have an equivalent
to the TE Text Box API,

00:26:21.700 --> 00:26:25.660
we have an equivalent to String Width,
we have an equivalent to Trunk String,

00:26:25.660 --> 00:26:26.710
and those things.

00:26:28.890 --> 00:26:33.720
So Aqua obviously changed all
the widgets and all the controls,

00:26:33.760 --> 00:26:35.610
so they have a brand new look.

00:26:35.730 --> 00:26:37.970
In addition,
we've added a few new controls and added

00:26:38.010 --> 00:26:40.890
some features to some of the older ones.

00:26:40.990 --> 00:26:43.340
So I know you saw slide
changes on the previous slide,

00:26:43.340 --> 00:26:45.430
and I should go into
some background here.

00:26:45.600 --> 00:26:50.040
So in DP3, when everybody first saw Aqua,
the controls were much bigger

00:26:50.040 --> 00:26:51.090
than they were in Platinum.

00:26:51.100 --> 00:26:53.500
I think push buttons were
around 26 pixels tall,

00:26:53.500 --> 00:26:55.800
pop-ups were maybe 24.

00:26:56.080 --> 00:26:57.470
Everything in general was larger.

00:26:57.490 --> 00:26:59.500
And we heard a lot of
feedback about that.

00:26:59.500 --> 00:27:02.390
You told us that it was going to be very
difficult to relay out all your dialogs.

00:27:02.480 --> 00:27:04.500
And we took that feedback to heart.

00:27:04.600 --> 00:27:07.860
And so now in DP4, all of the controls
are basically the same,

00:27:07.950 --> 00:27:11.490
use basically the same metrics
as their Platinum equivalents.

00:27:11.490 --> 00:27:14.990
The heights for the controls
are mostly maintained.

00:27:15.100 --> 00:27:18.920
There are a few cases where we
won't shrink below a certain size.

00:27:19.000 --> 00:27:21.500
For instance, you can't create a push
button that's six pixels tall.

00:27:21.500 --> 00:27:23.500
That kind of defeats the purpose.

00:27:23.500 --> 00:27:26.260
And a few controls' widths
do increase slightly.

00:27:26.260 --> 00:27:28.500
There's a number of reasons for this.

00:27:28.500 --> 00:27:32.210
Like I mentioned before,
Lucida as a system font is slightly

00:27:32.210 --> 00:27:34.320
wider than Charcoal and Chicago.

00:27:34.500 --> 00:27:38.190
So if you're using static text items
or if you have certain controls

00:27:38.190 --> 00:27:41.520
that have a lot of text in them,
you might find that you need to widen

00:27:41.520 --> 00:27:44.500
it a little bit to show it on the
same number of lines you used to be.

00:27:44.900 --> 00:27:47.210
Additionally, a few of the controls,
like push buttons,

00:27:47.450 --> 00:27:49.000
have a more rounded appearance.

00:27:49.000 --> 00:27:51.620
The end caps on Platinum push
buttons were practically square,

00:27:51.620 --> 00:27:54.000
so you could cram a lot more
text onto the button image.

00:27:54.000 --> 00:27:56.530
But an Aqua one is more rounded,
and if you start cramming the text on,

00:27:56.550 --> 00:27:58.000
the text might write off the edge.

00:27:58.000 --> 00:28:01.900
So you'll probably need to widen your
dialogs or widen the items out in your

00:28:01.900 --> 00:28:04.000
dialogs and controls a little bit.

00:28:04.130 --> 00:28:07.030
But to help...

00:28:08.930 --> 00:28:12.990
So we didn't want to wreck your
investment in your dialog layout,

00:28:13.020 --> 00:28:16.370
so we tried to make it such that
your layout effort was about

00:28:16.370 --> 00:28:19.990
equal to a localization effort,
but not more than that.

00:28:20.080 --> 00:28:23.490
And the other benefit is that if you
take a dialog that you've implemented

00:28:23.490 --> 00:28:27.100
to look really good in Platinum,
and you relay it all out for Aqua,

00:28:27.150 --> 00:28:29.470
and you take that same dialog and
run it back on Platinum again,

00:28:29.650 --> 00:28:30.900
it's still going to look good.

00:28:30.990 --> 00:28:34.660
So you should be able to get away
with just having one set of dialog and

00:28:34.660 --> 00:28:37.180
control resources for your application.

00:28:39.730 --> 00:28:41.770
So I mentioned before that we've
got a number of new controls,

00:28:41.800 --> 00:28:45.900
and I'd like to take you
through them one by one.

00:28:45.900 --> 00:28:47.500
So the first one's the round button.

00:28:47.500 --> 00:28:51.540
You've probably seen this either in
the Finder or in the Help Viewer.

00:28:51.620 --> 00:28:53.400
It's generally used as
a navigation button,

00:28:53.400 --> 00:28:56.600
you know, forward, backwards, home,
things of that nature.

00:28:56.600 --> 00:28:59.260
And you can customize its
content through an icon ref.

00:28:59.260 --> 00:29:01.490
Of course, we have a new creation
API for this one as well.

00:29:01.500 --> 00:29:05.240
We're adding a whole slew of new
creation APIs for all the controls.

00:29:05.240 --> 00:29:07.800
We'll go into details on that in
the Carbon enhancement session.

00:29:07.800 --> 00:29:10.860
But we've got one for the round
button to make your life easier.

00:29:12.370 --> 00:29:15.100
You may not have seen the
disclosure button before.

00:29:15.200 --> 00:29:19.050
This right now is only showing
up in the open and save panels.

00:29:19.170 --> 00:29:23.200
It's used to, for lack of better words,
expand and contract the dialog.

00:29:23.200 --> 00:29:25.450
If you click it when the
dialog is in its small state,

00:29:25.450 --> 00:29:28.270
it expands to the large state,
giving you more information.

00:29:28.340 --> 00:29:30.730
Got a creation API for that one.

00:29:33.900 --> 00:29:38.140
So when we introduced Mac OS 8,
we introduced a progress bar control.

00:29:38.140 --> 00:29:39.330
And that was really cool.

00:29:39.400 --> 00:29:41.040
People used it for progress.

00:29:41.050 --> 00:29:42.940
But other people started using
it for relevance ranking,

00:29:42.940 --> 00:29:44.100
including our own products.

00:29:44.100 --> 00:29:47.280
Sherlock used it for its relevance
ranking indicator in searches.

00:29:47.480 --> 00:29:49.780
But we redesigned the
progress bar for Aqua,

00:29:49.860 --> 00:29:53.900
and its appearance really isn't
suitable anymore as a relevance ranker.

00:29:53.980 --> 00:29:56.400
So we've introduced a new
control called a relevance bar,

00:29:56.400 --> 00:29:58.400
and it's perfectly suited
for relevance ranking.

00:29:58.520 --> 00:30:00.370
We use it in Sherlock, obviously.

00:30:00.450 --> 00:30:04.010
While I've got this slide up,
the bottom half of that Sherlock window

00:30:04.110 --> 00:30:05.850
is another new control we're adding.

00:30:05.960 --> 00:30:09.400
It's not just an Aqua control,
but it's also available on Mac OS 9.

00:30:09.400 --> 00:30:12.400
It's called the Data Browser,
and we have a complete session on that.

00:30:12.400 --> 00:30:15.900
It is a super list manager replacement,
or you can think of it that way.

00:30:15.900 --> 00:30:19.380
It's a totally modern control that's
both Aqua-savvy and Platinum-savvy.

00:30:19.490 --> 00:30:21.900
It does all the list management
and UI that you would ever want,

00:30:22.070 --> 00:30:24.380
draws those header buttons,
deals with the shadowing effect

00:30:24.380 --> 00:30:27.140
underneath the header buttons,
and all that wonderful stuff.

00:30:28.980 --> 00:30:30.600
So like I mentioned,
we've had the Progress Bar for

00:30:30.700 --> 00:30:33.280
quite some time now,
but I've seen some apps that

00:30:33.610 --> 00:30:35.860
still didn't realize that.

00:30:35.860 --> 00:30:39.780
It's been available since Mac OS 8,
but there are still applications

00:30:39.780 --> 00:30:42.570
out there that use the old
fill-rec technique to do progress.

00:30:42.590 --> 00:30:44.280
It's going to look
really crummy under Aqua,

00:30:44.410 --> 00:30:47.110
so please, please, please start using the
Progress Bar control.

00:30:47.130 --> 00:30:48.840
If you can't use the
Progress Bar control,

00:30:48.840 --> 00:30:51.270
we have an appearance primitive
to make your life easier.

00:30:51.270 --> 00:30:54.430
Keep in mind that right now there
is no way to get the appearance

00:30:54.430 --> 00:30:57.230
primitive to animate the way
the Progress Bar does on Aqua.

00:30:57.360 --> 00:30:59.780
The actual, sorry,
the actual Progress Bar control

00:30:59.780 --> 00:31:02.930
is the only way to get animation
of the Progress Bar on Aqua.

00:31:06.750 --> 00:31:08.280
So a few of the controls
you've grown to know and love

00:31:08.360 --> 00:31:10.550
have been enhanced slightly.

00:31:10.630 --> 00:31:13.700
Sliders and scroll bars support a new
feature which is called Scroll to Here.

00:31:13.700 --> 00:31:17.280
Scroll to Here works such that
if you click in the page up or

00:31:17.280 --> 00:31:20.640
page down area of the scroll bar,
the thumb jumps automatically

00:31:20.730 --> 00:31:21.780
to that location.

00:31:21.780 --> 00:31:23.700
You can start tracking the
thumb from that location.

00:31:23.880 --> 00:31:25.950
Likewise, for sliders,
you can click in the middle of

00:31:25.950 --> 00:31:28.700
the slider track and the thumb
will jump automatically there.

00:31:28.700 --> 00:31:31.360
Of course,
if you don't like that behavior,

00:31:31.360 --> 00:31:34.600
you can always option click in the
track and you'll get the same behavior

00:31:34.730 --> 00:31:36.370
you're used to on normal Mac OS.

00:31:36.880 --> 00:31:40.910
And I believe there's a preference in
the preferences application that allows

00:31:40.910 --> 00:31:42.980
you to toggle the default setting.

00:31:43.260 --> 00:31:47.030
Now, Scroll to Hear is only available for
live tracking variants of the controls.

00:31:47.100 --> 00:31:48.380
There's a couple
technical reasons for it,

00:31:48.470 --> 00:31:52.060
but in general, just start using the live
tracking variants of the controls.

00:31:52.060 --> 00:31:53.560
This is good for a couple reasons.

00:31:53.650 --> 00:31:55.690
Not only do you get the
Scroll to Hear behavior,

00:31:55.700 --> 00:31:57.950
but also you're going to fit
in a little bit better with

00:31:57.950 --> 00:32:00.780
the overall Aqua experience,
which is about providing immediate

00:32:00.780 --> 00:32:02.080
live feedback to the user.

00:32:02.130 --> 00:32:06.870
It's much more satisfying if you can
click on a scroll bar and start scrolling

00:32:06.870 --> 00:32:09.560
it and see the content move immediately.

00:32:09.560 --> 00:32:11.130
So please, please,
please use the live variants.

00:32:12.890 --> 00:32:16.460
If you had a chance to play
with any dialogs under Aqua,

00:32:16.460 --> 00:32:19.060
you've seen that our default button
no longer has a ring around it.

00:32:19.140 --> 00:32:21.400
Instead, it pulses.

00:32:21.500 --> 00:32:25.170
This happens automatically when
you use the push button control,

00:32:25.310 --> 00:32:28.900
so long as that push button control
has been tagged as the default button.

00:32:29.020 --> 00:32:30.640
There's a couple ways to do that.

00:32:30.720 --> 00:32:33.830
The setDialogDefaultItem API is one way,
and that API has been

00:32:33.830 --> 00:32:34.880
around for a long time.

00:32:34.960 --> 00:32:37.390
If you have a dialog,
the simplest way is to just

00:32:37.390 --> 00:32:38.900
use setDialogDefaultItem.

00:32:38.990 --> 00:32:41.790
If you don't have a dialog,
there's actually two options.

00:32:41.800 --> 00:32:45.300
The first and most high-level option
is to call setWindowDefaultButton.

00:32:45.310 --> 00:32:47.050
You can call that on
any button in a window.

00:32:47.100 --> 00:32:50.800
You should obviously only call it on the
one button you intend to be the default.

00:32:50.930 --> 00:32:53.190
Alternatively,
you can call setControlData with a

00:32:53.190 --> 00:32:56.400
special tag and some special data on
an individual control to do it as well.

00:32:56.400 --> 00:32:59.480
But in general,
it's easier to just stick to the dialog

00:32:59.480 --> 00:33:01.750
and the window versions of the APIs.

00:33:02.570 --> 00:33:05.850
So one important note I should make
about default buttons is that a lot

00:33:05.910 --> 00:33:10.750
of your application code tends to
depend on the old behavior of the

00:33:10.750 --> 00:33:15.740
toolbox in Mac OS 8 and Mac OS 9 where
we patch quick draw to determine if

00:33:15.760 --> 00:33:17.500
you're calling frame around rect.

00:33:17.500 --> 00:33:20.640
And when we see that around a control,
we go and we tag it as a default button

00:33:20.640 --> 00:33:22.710
automatically behind your back for you.

00:33:23.050 --> 00:33:26.440
And that was intended to allow
you to transition to the platinum

00:33:26.440 --> 00:33:28.500
appearance a little bit easier.

00:33:28.500 --> 00:33:31.590
But you know on Mac OS X,
you can't patch and we're in

00:33:31.590 --> 00:33:33.180
the same boat as you guys.

00:33:33.180 --> 00:33:34.510
So we can't patch quick draw anymore.

00:33:34.680 --> 00:33:36.560
And if you're calling frame around
rect around your default button,

00:33:36.570 --> 00:33:38.740
you're going to get around rect
around your default button.

00:33:38.740 --> 00:33:40.570
It's going to look kind of bad.

00:33:41.840 --> 00:33:44.600
As I mentioned before,
the progress bar now animates.

00:33:44.750 --> 00:33:48.350
This is good because it gives the user
a better indication that your machine

00:33:48.350 --> 00:33:51.790
is actually live and still running,
even if your progress bar isn't updating.

00:33:51.820 --> 00:33:58.180
Maybe it's hit a snag in the internet
connection if you're downloading

00:33:58.180 --> 00:33:58.180
a file or something like that.

00:33:58.180 --> 00:33:58.180
It still gives the user some feedback.

00:34:01.550 --> 00:34:05.390
So the appearance manager under Aqua,
to a certain extent, had to be gutted and

00:34:05.540 --> 00:34:07.200
rewritten from scratch.

00:34:07.330 --> 00:34:10.840
We did this so that we could take
advantage of the cool drawing

00:34:10.840 --> 00:34:12.890
services that Quartz provides.

00:34:14.210 --> 00:34:16.490
And additionally,
we obviously needed to offer some

00:34:16.490 --> 00:34:19.720
new APIs to your applications so
that you could render your widgets

00:34:19.720 --> 00:34:22.120
manually using--in an Aqua-savvy way.

00:34:22.450 --> 00:34:25.530
And I give you one example of that
before and that was the Theme Text APIs.

00:34:25.630 --> 00:34:27.980
We've got a few others as well.

00:34:29.960 --> 00:34:32.710
So the new controls that we're
offering are obviously backed

00:34:32.970 --> 00:34:34.690
by new appearance primitives.

00:34:34.770 --> 00:34:38.500
And if there isn't a primitive that
directly applies to that control,

00:34:38.520 --> 00:34:41.150
we've probably enhanced
Draw Theme Button to take care

00:34:41.160 --> 00:34:42.780
of that particular widget.

00:34:42.790 --> 00:34:45.850
There are a number of new theme
button kinds that are used

00:34:45.850 --> 00:34:48.230
with the Draw Theme Button API.

00:34:48.270 --> 00:34:54.450
One particularly interesting constant
is the KThemeListHeaderButton.

00:34:54.500 --> 00:34:57.300
Right now,
that's the only way to draw a list header

00:34:57.300 --> 00:35:01.570
button the way you see in Data Browser,
in the Finder, in Sherlock.

00:35:02.360 --> 00:35:04.790
We don't offer a control to do that yet.

00:35:04.890 --> 00:35:06.460
Hopefully,
Data Browser will serve your needs,

00:35:06.470 --> 00:35:10.000
but if you do find some needs,
if you do find it necessary to

00:35:10.070 --> 00:35:12.010
draw those buttons on your own,
we can probably do some

00:35:12.010 --> 00:35:12.900
kind of control for you.

00:35:12.900 --> 00:35:14.000
Just let me know.

00:35:14.030 --> 00:35:20.770
Of course, we have theme button constants
for all the standard controls,

00:35:20.770 --> 00:35:22.200
all the new standard
controls I just showed you,

00:35:22.200 --> 00:35:22.200
like the round button and the disclosure
button and things of that nature.

00:35:25.310 --> 00:35:31.160
So on Mac OS 8.5,
we threatened to start doing

00:35:31.520 --> 00:35:33.320
themes with patterns in them.

00:35:33.320 --> 00:35:35.300
But we didn't really
follow through with that.

00:35:35.300 --> 00:35:37.620
Well,
now we followed through with it in Aqua.

00:35:37.630 --> 00:35:42.730
We actually have theme brushes that
don't just represent RGB colors.

00:35:42.800 --> 00:35:44.750
They represent patterns.

00:35:44.810 --> 00:35:48.040
And if you want to draw backgrounds
of either dialogues or windows

00:35:48.040 --> 00:35:51.270
or certain controls like tabs and
placards in a theme savvy way,

00:35:51.270 --> 00:35:53.460
you'll need to use these theme brushes.

00:35:53.460 --> 00:35:55.580
Additionally,
if you're trying to save and restore the

00:35:55.580 --> 00:35:58.780
graphics environment around a call to,
say, draw theme button,

00:35:59.000 --> 00:36:04.960
you'll need to use some APIs we added in
Mac OS 8.5 dealing with drawing states.

00:36:04.960 --> 00:36:10.090
These drawing state APIs are a
encapsulated way to save and restore

00:36:10.090 --> 00:36:14.720
and normalize the drawing state in a
way that's completely pattern savvy.

00:36:14.720 --> 00:36:17.440
So I suggest you start
adopting these immediately.

00:36:17.440 --> 00:36:21.570
If you find that your application
comes up and patterns aren't

00:36:21.770 --> 00:36:26.320
quite aligned right or don't
look quite the right color,

00:36:26.320 --> 00:36:31.340
it may actually be the necessity for your
code to adopt these drawing state APIs.

00:36:34.200 --> 00:36:34.710
So this is it.

00:36:34.800 --> 00:36:35.680
This is your chance.

00:36:35.680 --> 00:36:39.780
Your application could be the
first one of its class to go out

00:36:39.820 --> 00:36:40.960
and adopt the Aqua interface.

00:36:40.960 --> 00:36:43.920
And that would mean that that's the
one customers are clamoring for,

00:36:43.980 --> 00:36:46.800
because everybody wants to use
the cool new stuff on Mac OS X.

00:36:46.840 --> 00:36:50.140
And we've tried to make that as
easy as possible for you to adopt.

00:36:50.140 --> 00:36:52.440
Of course,
if you use the standard system menus,

00:36:52.540 --> 00:36:54.520
controls, and dialogs,
you're going to get most

00:36:54.520 --> 00:36:55.490
of this stuff for free.

00:36:55.500 --> 00:36:56.870
If you're already that far, great.

00:36:56.880 --> 00:36:58.890
You only have a couple of the
steps you'll need to take.

00:36:59.040 --> 00:37:03.280
The obvious choices are taking advantage
of Sheets in any way you possibly can.

00:37:03.280 --> 00:37:06.800
You'll want to use Nav Services and
Printing and their Sheet support.

00:37:06.800 --> 00:37:09.600
If you have custom Sheet support,
you can use the Sheet APIs we're

00:37:09.600 --> 00:37:11.540
introducing directly in the toolbox.

00:37:11.540 --> 00:37:14.410
And then you want to relay out for
Aqua to make your stuff look good.

00:37:14.650 --> 00:37:16.700
Most importantly is probably
the menu bar layout,

00:37:16.700 --> 00:37:19.190
so that you can give the user an
overall good experience and an

00:37:19.190 --> 00:37:22.210
intuitive sense of where to find
the right items in the menu bar.

00:37:22.240 --> 00:37:25.260
And then you want to relay
out your dialogs to look good

00:37:25.260 --> 00:37:27.020
with the new Aqua metrics.

00:37:27.560 --> 00:37:30.860
So with that,
I'd like to bring up John Glunze to lead

00:37:30.860 --> 00:37:33.250
us through the roadmap and some Q&A.

00:37:40.170 --> 00:37:40.540
Thanks, Guy.

00:37:40.540 --> 00:37:46.950
So there's quite a few sessions
that kind of relate to this stuff,

00:37:47.130 --> 00:37:51.260
not specifically to these APIs,
but that relate to other Aqua APIs or

00:37:51.350 --> 00:37:55.000
other Mac OS X APIs that affect
sort of the user experience.

00:37:55.000 --> 00:37:59.000
One is already passed,
which is the Aqua Overview 140.

00:37:59.000 --> 00:38:04.070
Using Interface Builder is...
Interface Builder is a great tool for

00:38:04.070 --> 00:38:07.440
prototyping your applications on 10
and getting the right look under Aqua.

00:38:08.360 --> 00:38:12.700
Guy referred to Data Browser for
this list manager on steroids,

00:38:12.770 --> 00:38:13.290
so to speak.

00:38:13.300 --> 00:38:18.280
Control that you can build into your
applications and get finder-like

00:38:18.280 --> 00:38:21.400
lists and that type of behavior,
that's in the Data Browser session.

00:38:21.400 --> 00:38:25.460
Icon Services in Aqua 147 on Thursday.

00:38:25.460 --> 00:38:28.960
That's a session you need to go to
to learn how to create great icons,

00:38:28.960 --> 00:38:32.990
take advantage of Icon Services APIs to
show those icons at different sizes,

00:38:32.990 --> 00:38:33.600
et cetera.

00:38:33.600 --> 00:38:40.380
Navigation Services is... Talks about
the open and save dialogs and new APIs in

00:38:40.460 --> 00:38:44.840
that regard and finding out how to do
the proper open and save dialogs under

00:38:44.840 --> 00:38:48.240
9 and 10 with the new APIs that are there
and getting the right look and feel,

00:38:48.240 --> 00:38:52.280
sheets, et cetera,
for opening and opening of files.

00:38:52.280 --> 00:38:55.340
Apple Help, again,
like I said in other sessions,

00:38:55.340 --> 00:38:59.920
HTML Help is the way to
go with help on Mac OS X.

00:38:59.920 --> 00:39:03.220
So that's the session you need to go to,
and we're going to talk about help APIs,

00:39:03.220 --> 00:39:06.480
but also how to author the
HTML Help in the right way.

00:39:07.800 --> 00:39:12.360
Application Packaging
and Document Typing,

00:39:12.360 --> 00:39:13.910
Session 144.

00:39:13.910 --> 00:39:18.000
It's not so much about the
visual user experience of Aqua,

00:39:18.000 --> 00:39:18.000
but it relates to the

00:39:18.380 --> 00:39:24.060
Packaging Model on Mac OS X is
a user experience related issue.

00:39:24.060 --> 00:39:27.230
You also need to know about the
new document typing and file naming

00:39:27.230 --> 00:39:30.270
conventions that are on X and how
that affects you and your users

00:39:30.270 --> 00:39:32.300
and your application development.

00:39:32.300 --> 00:39:35.630
This session will cover
Carbon Enhancements 1 and

00:39:35.630 --> 00:39:39.410
Carbon Enhancements 2,
which will go into more depth

00:39:39.410 --> 00:39:43.700
on some of the APIs that Guy has
talked about and other APIs in

00:39:43.700 --> 00:39:47.230
Mac OS X that affect the user
experience that you're going to deliver.

00:39:47.300 --> 00:39:49.770
And then of course the
Aqua Feedback Forum,

00:39:49.830 --> 00:39:54.300
which we're really looking forward to
and we're going to invite you to attend.

00:39:54.300 --> 00:39:58.820
As well as the High-Level Toolbox
Feedback Forum for giving Guy and his

00:39:58.820 --> 00:40:02.300
team and the High-Level Toolbox team
feedback on the High-Level Toolbox.

00:40:02.300 --> 00:40:07.390
Those are the sessions that you
should think about attending and

00:40:07.390 --> 00:40:10.010
we would encourage you to attend.

00:40:10.550 --> 00:40:14.300
Who do you contact for more
assistance as a developer?

00:40:14.300 --> 00:40:18.890
First of all, myself,
if you need assistance in understanding

00:40:18.890 --> 00:40:23.070
Aqua or understanding how to do an
application that really is going

00:40:23.070 --> 00:40:28.440
to take advantage of the rich,
elegant user experience of Aqua,

00:40:28.480 --> 00:40:30.300
please get in touch with me.

00:40:30.300 --> 00:40:32.300
Specific to APIs,
I would say that you should contact Guy.

00:40:32.300 --> 00:40:34.930
If you have API issues,
if you have requests for new

00:40:34.930 --> 00:40:38.100
APIs under Carbon or changes to
APIs or those sorts of things,

00:40:38.490 --> 00:40:40.300
the other contact is David Wright.

00:40:40.300 --> 00:40:42.430
Both of us are in the Worldwide
Developer Relations Organization and

00:40:42.450 --> 00:40:46.300
we'd encourage you to contact
us with developer related

00:40:46.300 --> 00:40:48.300
issues around this topic.

00:40:48.300 --> 00:40:53.300
So I'd like to invite the High-Level
Toolbox team up on stage for the Q&A.