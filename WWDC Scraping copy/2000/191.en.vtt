WEBVTT

00:00:20.610 --> 00:00:22.100
My name is Dave Payne.

00:00:22.100 --> 00:00:25.420
It's been my privilege over the
past couple of years to have

00:00:25.420 --> 00:00:28.500
the opportunity to build and
lead the developer applications

00:00:28.500 --> 00:00:30.440
engineering team for Mac OS X.

00:00:30.440 --> 00:00:34.760
I stood on this stage a year
ago and described how Apple was

00:00:34.760 --> 00:00:39.140
committed to the creation of great
development tools for Mac OS X.

00:00:39.140 --> 00:00:42.080
I'm very proud to be back
this year to show how we're

00:00:42.080 --> 00:00:44.140
delivering on that commitment.

00:00:44.140 --> 00:00:46.610
So what we're going to cover
in this introductory session

00:00:46.610 --> 00:00:50.140
this morning is an overview of
Apple's development tool strategy,

00:00:50.140 --> 00:00:55.140
a look at all of Apple's
development tools for Mac OS X,

00:00:55.140 --> 00:00:58.710
a quick run through with that,
and then start focusing in

00:00:58.950 --> 00:01:01.130
on the new Project Builder.

00:01:01.140 --> 00:01:04.230
You've probably heard references
to that in a few sessions by now.

00:01:04.240 --> 00:01:08.540
I'll be showing you what we
have in Developer Preview 4,

00:01:08.540 --> 00:01:12.740
what's coming soon,
and what's on the drawing board,

00:01:12.740 --> 00:01:14.870
some things that we're working
on that are a little further out.

00:01:14.880 --> 00:01:19.780
And we'll also be touching on some of
the new features of Interface Builder,

00:01:19.840 --> 00:01:22.740
and the new Project Builder in DP4.

00:01:22.840 --> 00:01:26.180
Then I'll get to some of the
specifics of delivery and deployments

00:01:26.180 --> 00:01:27.880
of the new Project Builder.

00:01:27.960 --> 00:01:30.280
And because this is an
introductory session,

00:01:30.280 --> 00:01:31.470
we have a lot to cover.

00:01:31.730 --> 00:01:35.520
I have pointers to numerous other
sessions where you can find more details

00:01:35.570 --> 00:01:38.250
about what I'll be talking about here.

00:01:38.560 --> 00:01:43.200
So to give the senior management
perspective on Apple's overall

00:01:43.200 --> 00:01:48.490
development tool strategy,
I'd like to bring on stage my manager,

00:01:48.670 --> 00:01:51.900
Steve Naroff, the Senior Director of
Java and Core Tools.

00:01:51.900 --> 00:01:51.900
Steve?

00:01:54.060 --> 00:01:55.430
Hi there.

00:01:55.920 --> 00:01:58.400
This is an outline of the strategy.

00:01:58.400 --> 00:02:02.720
Basically,
we feel strongly that Apple has

00:02:02.720 --> 00:02:08.200
to own its own destiny and develop
great tools for our platform.

00:02:09.130 --> 00:02:11.760
Aside from developing great IDE,
we need to support the

00:02:11.760 --> 00:02:13.100
platform initiatives.

00:02:13.100 --> 00:02:17.070
For instance, when we go to new hardware,
the compilers need to support that

00:02:17.480 --> 00:02:19.060
hardware in a first-class way.

00:02:19.060 --> 00:02:23.190
When we develop new frameworks,
like Cocoa, the IDE has to support

00:02:23.190 --> 00:02:25.240
them in a first-class way.

00:02:25.240 --> 00:02:31.120
So we have a strong background that,
just as Microsoft uses their tools

00:02:31.160 --> 00:02:38.470
to push their platform initiatives,
at Next we have the same background,

00:02:38.470 --> 00:02:41.420
and at Apple we want to carry
through that legacy to make

00:02:41.420 --> 00:02:44.970
sure when we do do new things,
the IDE is presenting

00:02:44.970 --> 00:02:47.100
them in a first-class way.

00:02:48.200 --> 00:02:51.400
Another part of our strategy
is to make sure everyone at

00:02:51.400 --> 00:02:53.740
Apple is living on these tools.

00:02:53.740 --> 00:02:59.320
I've seen a lot of Apple development
efforts over the past decade,

00:02:59.320 --> 00:03:00.740
mainly from the outside.

00:03:00.740 --> 00:03:04.240
And at least the last one,
which was centered around Dylan,

00:03:04.240 --> 00:03:08.920
one of its major flaws was no one
at Apple was actually using Dylan.

00:03:08.920 --> 00:03:15.000
Dylan was some really great work
that unfortunately died on the vine

00:03:15.000 --> 00:03:18.420
because no one at Apple actually
cared enough to use this stuff.

00:03:18.460 --> 00:03:23.650
And in fact, if years ago more folks at
Apple were using this stuff,

00:03:23.830 --> 00:03:26.250
Dylan could have been what Java is today.

00:03:26.260 --> 00:03:29.480
But unfortunately, that didn't happen.

00:03:29.480 --> 00:03:34.050
So what we're hoping is the next time
there's an opportunity like that,

00:03:34.240 --> 00:03:37.500
we will make sure we're on top of
it because Apple engineers will in

00:03:37.600 --> 00:03:39.390
fact use the stuff we're developing.

00:03:39.480 --> 00:03:44.040
And we have support
from the very highest,

00:03:44.220 --> 00:03:47.240
part of the company, Steve,
who feels strongly that

00:03:47.260 --> 00:03:48.200
we need to do this.

00:03:50.620 --> 00:03:53.700
Ten years ago, actually,
I'll show my age here,

00:03:53.700 --> 00:03:58.500
more than ten years ago, back in '88,
I was one of the early adopters at

00:03:58.500 --> 00:04:00.740
Next of the GNU compiler project.

00:04:00.740 --> 00:04:07.340
And it was in its infancy at the time,
but as you know today,

00:04:07.340 --> 00:04:10.840
it's the underpinnings
of the Linux movement.

00:04:10.860 --> 00:04:14.500
And in fact,
open software is now socially acceptable,

00:04:14.500 --> 00:04:17.740
whereas it wasn't 12 years ago.

00:04:17.740 --> 00:04:21.580
And we feel strongly that
we need to drive this.

00:04:21.580 --> 00:04:25.180
We need to be a major player
in the open source community.

00:04:25.180 --> 00:04:27.340
Next was a fairly small company.

00:04:27.340 --> 00:04:29.580
Apple's a much larger
company with more resources.

00:04:29.660 --> 00:04:33.960
We're putting our resources behind the
open source initiative with Darwin,

00:04:34.160 --> 00:04:37.780
and I'm putting my resources
in the tools area behind the

00:04:37.780 --> 00:04:39.100
open source movement as well.

00:04:39.100 --> 00:04:41.300
We've benefited in many ways already.

00:04:41.300 --> 00:04:45.540
Much of the AlteVec support we have
in our GNU compiler was actually

00:04:45.540 --> 00:04:46.980
originally done at Motorola.

00:04:46.980 --> 00:04:49.430
Because Motorola invests
in the GNU tools.

00:04:49.750 --> 00:04:51.530
IBM invests in the GNU tools.

00:04:51.920 --> 00:04:55.900
There are countless number of
companies that invest in the GNU tools,

00:04:55.950 --> 00:05:00.180
and we want to benefit from
that research and development.

00:05:00.780 --> 00:05:06.600
Another thing to mention about the
GNU tools is I think they compile,

00:05:06.600 --> 00:05:10.400
the compiler in particular,
compiles more lines of code, I think,

00:05:10.460 --> 00:05:12.690
than any other compiler on the planet.

00:05:12.700 --> 00:05:15.930
It compiles all of Mac OS X,
it compiles all of Linux,

00:05:15.930 --> 00:05:19.690
it's compiled all of Maya,
it's compiled a lot of stuff.

00:05:19.830 --> 00:05:23.700
And as a result, it's extremely robust.

00:05:23.700 --> 00:05:24.700
It's not a toy.

00:05:24.700 --> 00:05:29.700
So, here are other open source projects
you could read that we leverage.

00:05:29.700 --> 00:05:32.690
In the Java space,
we're also shipping the Jyx compiler,

00:05:32.810 --> 00:05:36.650
which is an open source
Java compiler by IBM.

00:05:36.700 --> 00:05:40.780
And even though we want to have a
great fit and finish to our tools,

00:05:40.910 --> 00:05:46.700
as you'll see, Project Builder's totally
built with Cocoa and Aqua,

00:05:46.740 --> 00:05:49.700
we want to work with third parties.

00:05:49.700 --> 00:05:53.680
By no means do we want to close
anyone out of the tools market.

00:05:53.840 --> 00:05:56.620
We want to work actively,
and we are working actively

00:05:56.940 --> 00:06:00.910
with MetroWorks/Motorola,
Enprize, Pacific Sierra, Absoft,

00:06:00.910 --> 00:06:02.590
and lots of others.

00:06:02.700 --> 00:06:07.630
We, again,
want to collaborate with these vendors.

00:06:08.000 --> 00:06:09.920
Sometimes that may mean
the tools are available or

00:06:09.970 --> 00:06:11.690
integrate with Project Builder.

00:06:11.700 --> 00:06:15.700
Sometimes that may mean we may take
our tools and integrate with them.

00:06:15.700 --> 00:06:19.700
So, it's sometimes unclear
what collaboration means,

00:06:19.700 --> 00:06:22.700
but nevertheless, it is a design point.

00:06:22.700 --> 00:06:26.340
We do not have any motivation
in owning or being the

00:06:26.900 --> 00:06:27.700
exclusive tool on the project.

00:06:27.700 --> 00:06:31.700
We are the exclusive tool on the planet,
at least on the Mac platform.

00:06:31.700 --> 00:06:34.010
So, here's the thing.

00:06:34.380 --> 00:06:39.200
I guess the take-home point
there is competition is good,

00:06:39.200 --> 00:06:42.340
and we want to compete,
and we think what we've done that we're

00:06:42.340 --> 00:06:44.100
going to show you today is competitive.

00:06:44.100 --> 00:06:47.720
A couple notes before
I turn it back to Dave.

00:06:47.720 --> 00:06:52.090
One is, even though Mac OS X is in DP4,
this is the first release

00:06:52.230 --> 00:06:53.800
of Project Builder.

00:06:53.820 --> 00:06:57.970
So it's our, I won't say DP1,
because we've released it internally

00:06:57.970 --> 00:07:02.730
for months and have been using it,
but it's our DP2-ish release.

00:07:03.380 --> 00:07:05.720
So bear that in mind
when you use the tools.

00:07:05.720 --> 00:07:08.740
There's still, we still have a ways to go
before we finish this thing.

00:07:08.740 --> 00:07:10.500
There are going to be some bugs,
there are going to be

00:07:10.500 --> 00:07:13.040
some missing features,
so I wanted to set that

00:07:13.040 --> 00:07:14.720
expectation appropriately.

00:07:14.720 --> 00:07:16.620
And...

00:07:18.370 --> 00:07:21.540
Well, I guess the last thing is,
what's thrilled me is we've

00:07:21.650 --> 00:07:26.300
built a great team over the past
year to deliver this product.

00:07:26.300 --> 00:07:30.140
And even though it's not everything we
want it to be at this moment in time,

00:07:30.390 --> 00:07:35.300
I'm absolutely confident 100% that
this product will be everything we

00:07:35.300 --> 00:07:38.280
want it to be and you want it to be,
because we have a great team in place.

00:07:38.290 --> 00:07:41.300
And you'll meet many members of the
team over the course of the talk.

00:07:41.430 --> 00:07:44.240
So with that in mind,
I'll hand it back to Dave.

00:07:44.300 --> 00:07:45.560
Thank you.

00:07:50.530 --> 00:07:51.400
Thanks, Dave.

00:07:51.400 --> 00:07:57.280
All right, so diving right in,
let's start looking at the

00:07:57.280 --> 00:07:58.500
new Project Builder in TP4.

00:07:58.500 --> 00:08:01.030
So first off, what is it?

00:08:01.780 --> 00:08:06.620
Project Builder is the new integrated
development environment for Mac OS X.

00:08:06.620 --> 00:08:10.530
It's been a long time since Apple's had
an integrated development environment,

00:08:10.560 --> 00:08:11.480
perhaps never.

00:08:13.120 --> 00:08:17.160
Now, so Project Builder is the
centerpiece of what we're trying to

00:08:17.160 --> 00:08:19.360
do with development tools at Apple.

00:08:19.360 --> 00:08:24.210
We want to tie many things
that we're doing into this IDE.

00:08:24.210 --> 00:08:26.450
There's a number of other components.

00:08:26.470 --> 00:08:31.420
We work with the Interface Builder,
User Interface Layout Tool.

00:08:31.420 --> 00:08:36.420
We work with the WebObjects tools,
so WebObjects Builder and EOModeler.

00:08:36.420 --> 00:08:39.760
We work with a number
of different compilers,

00:08:39.760 --> 00:08:42.220
so GCC, as Steve talked about.

00:08:43.120 --> 00:08:46.900
We work with the REST for your
Mac Resource Manager resources,

00:08:46.990 --> 00:08:49.240
Java compilers like Jyx and Java C.

00:08:49.240 --> 00:08:53.540
We work with a variety of debuggers,
like the GDB debugger for

00:08:53.560 --> 00:08:57.230
all our C-based languages,
Java debuggers tying into

00:08:57.390 --> 00:08:59.680
the virtual machine there.

00:08:59.680 --> 00:09:02.510
And we're working with the
AppleScript team on some of these things,

00:09:02.510 --> 00:09:02.880
too.

00:09:02.880 --> 00:09:06.510
So what all do we need
Project Builder to do for us?

00:09:06.520 --> 00:09:09.350
Again, as Steve mentioned,
we want to be able to live on

00:09:09.350 --> 00:09:11.120
this tool internally at Apple.

00:09:11.120 --> 00:09:13.100
That gives us lots of
great feedback from people.

00:09:13.100 --> 00:09:15.200
We have a lot of new customers who are,
it's wonderful,

00:09:15.200 --> 00:09:16.450
they're in my face every day.

00:09:16.460 --> 00:09:21.290
So, and we also want it to
be a great tool for you.

00:09:21.360 --> 00:09:25.120
So, among the requirements,
we need to be able to build

00:09:25.210 --> 00:09:27.010
the Core OS itself with it.

00:09:27.250 --> 00:09:31.030
And how that translates to you,
if you're developing device

00:09:31.070 --> 00:09:35.800
drivers or kernel extensions,
I/O Kit modules, you'll be using the new

00:09:35.800 --> 00:09:40.640
Project Builder to do so once we've
got the KDK all put together there.

00:09:40.800 --> 00:09:42.800
We build our full-time project.

00:09:43.140 --> 00:09:44.090
We build our framework with them.

00:09:44.210 --> 00:09:49.220
So, the Carbon framework,
the Cocoa frameworks, Java,

00:09:49.370 --> 00:09:52.360
a variety of frameworks there.

00:09:52.360 --> 00:09:55.490
And of a special importance to you,
there's a variety of different

00:09:55.520 --> 00:09:58.720
types of applications,
as well as plug-in modules, frameworks,

00:09:58.720 --> 00:10:03.640
shared libraries that you can build
with the new Project Builder for Carbon,

00:10:03.640 --> 00:10:07.800
for Cocoa, for Java, and for WebObjects.

00:10:08.430 --> 00:10:12.450
So we did actually have a previous
product that we called Project Builder.

00:10:12.450 --> 00:10:15.180
Some of you may have used it.

00:10:15.310 --> 00:10:16.730
This was derived from Next.

00:10:16.730 --> 00:10:20.720
But when we looked at all the different
requirements that we needed it to solve,

00:10:20.720 --> 00:10:23.570
that we need Project Builder
in general to deal with,

00:10:23.630 --> 00:10:27.580
we realized that the existing
Project Builder was not really

00:10:28.010 --> 00:10:29.980
going to be able to handle it.

00:10:30.090 --> 00:10:34.300
So we have completely rewritten
it from scratch for DP4,

00:10:34.300 --> 00:10:38.140
but we do need to be able
to import projects from it.

00:10:38.140 --> 00:10:41.680
We also would like to be able to
import projects from Code Warrior.

00:10:41.680 --> 00:10:44.750
And in fact, in the next session
immediately after this,

00:10:44.750 --> 00:10:46.180
we'll be showing that.

00:10:49.600 --> 00:10:54.160
And then finally, in order to be a full
Carbon development environment,

00:10:54.230 --> 00:10:58.060
the definition of a Carbon application
is it should be packaged in an

00:10:58.060 --> 00:11:02.500
application package that's double
clickable on both Mac OS 9 and Mac OS X.

00:11:02.920 --> 00:11:07.130
Currently,
Project Builder is building Maco binaries

00:11:07.130 --> 00:11:10.500
that are double clickable on Mac OS X.

00:11:10.500 --> 00:11:13.660
We are starting to work on
generation of PEF binaries so

00:11:13.660 --> 00:11:18.500
that we can get double clickable
Carbon applications for 9 as well.

00:11:18.500 --> 00:11:21.500
So, being a full
Carbon development environment.

00:11:21.500 --> 00:11:23.500
So,
in order to meet all these requirements,

00:11:23.500 --> 00:11:27.500
again, we decided we need to start over.

00:11:27.500 --> 00:11:33.850
So, we did that January of 1999,
so not a tremendously long time ago,

00:11:33.850 --> 00:11:35.500
about a year and a half.

00:11:35.500 --> 00:11:38.500
I started building the
team at that point,

00:11:38.520 --> 00:11:42.500
had approval from senior
management to add more folks.

00:11:42.600 --> 00:11:47.010
Some of you may have remembered
last year at WWDC when we showed

00:11:47.010 --> 00:11:49.500
a demo of a prototype called PBX.

00:11:49.500 --> 00:11:53.540
So, if you hear of anybody else
on stage referring to PBX,

00:11:53.650 --> 00:11:57.500
that's because I referred
to it internally as PBX.

00:11:57.500 --> 00:12:00.500
The product was called that
up until about a month ago.

00:12:00.500 --> 00:12:04.500
But the official name of the
product is now Project Builder

00:12:04.500 --> 00:12:06.750
and every time they say PBX,
charge them a dollar and

00:12:06.750 --> 00:12:08.450
I'll split it with you.

00:12:08.500 --> 00:12:13.710
So, but that was a little scary because
by that point I'd only had two

00:12:13.710 --> 00:12:16.500
guys writing code for three months.

00:12:16.500 --> 00:12:21.130
So, I beefed up the team considerably
more after that and we got

00:12:21.240 --> 00:12:24.500
to an Apple internal rollout
in February of this year.

00:12:24.500 --> 00:12:28.100
Now, my team had been developing
Project Builder with Project Builder

00:12:28.100 --> 00:12:29.500
for a long time before that.

00:12:29.500 --> 00:12:32.500
This was about the time of DP3.

00:12:32.500 --> 00:12:35.740
We did not go out on DP3 because
we hadn't had enough internal

00:12:35.740 --> 00:12:38.500
feedback yet to tell us all the
ways in which we were brain dead.

00:12:38.500 --> 00:12:43.500
So, we've let the internal
developers tell us that.

00:12:43.500 --> 00:12:45.500
It's been used widely across Mac OS X.

00:12:45.500 --> 00:12:48.500
And now it's your turn to
tell us how we're brain dead.

00:12:48.660 --> 00:12:53.500
So, we have our first external release
on the developer preview for CD.

00:12:53.500 --> 00:12:58.770
And from here it's onward and
upward for us and the OS onto GM.

00:12:59.000 --> 00:15:28.100
[Transcript missing]

00:15:28.400 --> 00:15:31.420
The concepts of frameworks is
very important with Mac OS X.

00:15:31.600 --> 00:15:34.800
Framework is our shared
library packaging mechanism.

00:15:35.070 --> 00:15:40.220
It includes all the, for example,
headers, public headers, documentation,

00:15:40.320 --> 00:15:41.290
resources.

00:15:41.810 --> 00:15:45.180
Project Builder directly supports
making use of frameworks.

00:15:45.310 --> 00:15:49.170
We also let you create bundles.

00:15:49.170 --> 00:15:52.300
It's very important to understand
the concept of bundles on Mac OS X.

00:15:52.300 --> 00:15:55.300
An application package is a bundle.

00:15:55.310 --> 00:15:56.300
Plugins are bundles.

00:15:56.300 --> 00:15:58.290
Frameworks themselves are bundles.

00:15:58.300 --> 00:16:02.240
Bundles have information property
lists that we know how to edit,

00:16:02.240 --> 00:16:05.390
and this is how you would
do your localization through

00:16:05.390 --> 00:16:07.300
editing of bundles as well.

00:16:07.300 --> 00:16:11.010
So with project layout and editing,
there's a variety of types of

00:16:11.140 --> 00:16:13.300
ways to create project templates.

00:16:13.300 --> 00:16:15.300
We have a whole bunch of
standard project templates.

00:16:15.300 --> 00:16:17.090
You can define your own.

00:16:17.570 --> 00:16:20.910
Again, we can import existing projects
from the old Project Builder

00:16:20.910 --> 00:16:22.050
and from Code Warrior.

00:16:22.300 --> 00:16:26.200
We now have user-definable
groupings of files.

00:16:26.300 --> 00:16:29.290
So this is independent of
physical layout on disk,

00:16:29.290 --> 00:16:32.260
which was not the case with
the old Project Builder.

00:16:32.540 --> 00:16:37.930
It's also independent of
how the build system works.

00:16:38.230 --> 00:16:42.260
So we now also support a target model.

00:16:42.260 --> 00:16:45.470
You can have multiple build
targets per project and select

00:16:45.570 --> 00:16:46.940
which one you want when.

00:16:46.950 --> 00:16:51.280
And projects can
reference other projects,

00:16:51.330 --> 00:16:53.600
so you can have dependencies on that.

00:16:53.600 --> 00:16:57.660
That feature, I guess,
is a little bit yet to come,

00:16:57.680 --> 00:16:59.160
but we're working on that one.

00:16:59.160 --> 00:17:03.800
On the build system, last year,
when I talked about the build system,

00:17:03.800 --> 00:17:08.320
I described the build tool Jam,
that we leverage Jam as

00:17:08.320 --> 00:17:11.040
just another make,
a freely available piece of

00:17:11.180 --> 00:17:12.680
software that we get off the net.

00:17:13.070 --> 00:17:17.820
But what we've done in the meantime
is abstracted things away so you

00:17:17.820 --> 00:17:21.330
don't need to have nearly as good an
understanding of the Jam tool itself.

00:17:21.780 --> 00:17:27.680
So that's what we use to call
down to all our compilers,

00:17:27.890 --> 00:17:30.490
so GCC, Res, Java C, et cetera.

00:17:30.720 --> 00:17:37.170
But in the IDE, we take advantage of what
we call build phases.

00:17:37.420 --> 00:17:39.480
So there's a variety of
standard build phases for

00:17:39.480 --> 00:17:42.930
copying your framework headers,
copying your resource files,

00:17:43.010 --> 00:17:46.120
compiling your source code, linking,
et cetera.

00:17:46.120 --> 00:17:49.470
And the Jam build tool we are
leveraging at this point to get

00:17:49.470 --> 00:17:51.720
automated dependency analysis.

00:17:51.790 --> 00:17:52.880
Of course, that's obvious, right?

00:17:53.050 --> 00:17:56.000
But well, actually,
our old product didn't do that right.

00:17:56.080 --> 00:18:01.240
But there is no need to
go in and edit make files.

00:18:01.510 --> 00:18:04.500
So we're handling all this
within the context of the IDE,

00:18:04.500 --> 00:18:08.500
and you can customize your build
by adding additional scripts,

00:18:08.500 --> 00:18:12.300
custom build phases as necessary.

00:18:12.920 --> 00:18:15.760
So as Steve mentioned,
we are taking advantage

00:18:15.870 --> 00:18:17.380
of the GCC compiler.

00:18:17.460 --> 00:18:20.140
For those of you who knew
the term EGCS or EGGS,

00:18:20.270 --> 00:18:24.040
this is that version of the compiler,
GCC 295.

00:18:24.040 --> 00:18:24.620
It's the latest.

00:18:24.640 --> 00:18:29.640
This is a significant change in the
compiler from what we had before.

00:18:29.640 --> 00:18:34.000
This provides full C++ support now,
including an up-to-date standard

00:18:34.000 --> 00:18:35.240
template library support.

00:18:35.240 --> 00:18:42.310
One thing to note about this is that it
is stricter with ANSI C++ compliance.

00:18:42.360 --> 00:18:45.080
So some of the users have told us that,
"Wow,

00:18:45.080 --> 00:18:48.000
I found bugs in my code that I didn't
know existed with the previous

00:18:48.000 --> 00:18:52.930
compiler." With this compiler,
we have support for the Velocity Engine,

00:18:53.080 --> 00:18:57.130
and Steve mentioned the company
Pacific Sierra Research.

00:18:57.210 --> 00:19:02.160
That company is working to do an
automatic vectorization support

00:19:02.330 --> 00:19:04.720
for Mac OS 9 and for Mac OS X,
because they're working on a

00:19:04.750 --> 00:19:04.970
new version of the compiler.

00:19:05.000 --> 00:19:09.290
So unless you're familiar with it,
vectorization is a little bit difficult.

00:19:09.440 --> 00:19:14.520
So we're working with that company to
try to take full advantage of that.

00:19:14.820 --> 00:19:17.250
And again,
it's very important to note that

00:19:17.250 --> 00:19:21.270
GCC does build all of Mac OS X,
all the Core OS code,

00:19:21.280 --> 00:19:24.830
C-based code for Carbon frameworks
and core foundation.

00:19:25.090 --> 00:19:28.860
C++ applications like Finder or Sherlock.

00:19:29.070 --> 00:19:32.000
Yes, we do use Power Plant for
some things internally,

00:19:32.050 --> 00:19:34.760
so we build that,
our own version of that.

00:19:34.780 --> 00:19:41.130
Mac App is now building in
Project Builder and with GCC.

00:19:41.650 --> 00:19:45.100
And we also support
Objective-C still as a primary

00:19:45.270 --> 00:19:47.900
development language for Mac OS X.

00:19:47.990 --> 00:19:52.660
So the Cocoa framework is
written with Objective-C.

00:19:52.740 --> 00:19:56.460
The mail application,
Project Builder itself is a

00:19:56.460 --> 00:19:59.220
Cocoa and Objective-C application.

00:19:59.300 --> 00:20:01.870
And just to note,
you can still write your

00:20:01.870 --> 00:20:04.520
Cocoa applications with Java as well.

00:20:04.520 --> 00:20:07.030
So Cocoa Java apps.

00:20:07.310 --> 00:20:10.480
One final thing is that we actually
do feel that it's very important to be

00:20:10.480 --> 00:20:12.160
able to build from the command line.

00:20:12.160 --> 00:20:14.200
There's a lot of things you
can leverage in that way.

00:20:14.200 --> 00:20:18.610
At Apple, our build and integration
mechanism builds all of

00:20:18.610 --> 00:20:22.670
Mac OS X from the command line,
as opposed to firing

00:20:22.670 --> 00:20:24.200
up the IDE in any way.

00:20:24.200 --> 00:20:29.190
But what we're doing here,
rather than calling Jam directly,

00:20:29.200 --> 00:20:32.420
we've put a new command
in place called pbxbuild,

00:20:32.420 --> 00:20:35.200
which, of course,
since pbx is a denigrated term,

00:20:35.200 --> 00:20:41.500
this stands for Project Builder
External Build Command.

00:20:43.140 --> 00:20:46.850
So, with this command,
what we actually do is a very small

00:20:47.000 --> 00:20:50.050
application that actually links
with the same framework as the

00:20:50.060 --> 00:20:55.090
Project Builder application itself
and actually opens up your project

00:20:55.090 --> 00:21:00.090
model and invokes Jam once per target
of the project you're trying to build.

00:21:00.100 --> 00:21:02.850
So, you can automate builds
with a shell script,

00:21:02.910 --> 00:21:09.080
a nightly build process, for example,
or log in over Telnet and run a build.

00:21:09.470 --> 00:21:13.460
I automate my performance testing
and quality testing of the build

00:21:13.460 --> 00:21:15.660
system through this mechanism.

00:21:15.660 --> 00:21:20.170
So, now, what I'd like to do is bring one
of the engineers up on stage,

00:21:20.170 --> 00:21:25.220
Manuel Da Silva, to help me go through a
demo of Project Builder.

00:21:25.220 --> 00:21:26.960
The first page is here.

00:21:26.960 --> 00:21:28.430
Thank you.

00:21:32.700 --> 00:21:36.830
So what we're going to do here
is take a look at an example

00:21:36.830 --> 00:21:38.900
project from the system.

00:21:38.900 --> 00:21:42.760
So the GLUT Examples is a
project that you would find out

00:21:42.760 --> 00:21:46.040
in System Developer Examples,
GLUT Examples.

00:21:46.040 --> 00:21:52.630
This is the OpenGL Utility
Toolkit Examples project.

00:21:52.740 --> 00:21:55.000
It's got some graphically
cool stuff in it.

00:21:55.000 --> 00:22:00.840
We've stripped down this project a bit so
that it's only got a few targets in it.

00:22:00.910 --> 00:22:04.610
Let's take a look at what happens
when you first launch the project.

00:22:04.850 --> 00:22:10.260
We've tried to, as we're doing with the
finder and with mail,

00:22:10.260 --> 00:22:15.560
we're optimizing for use
with a single window here.

00:22:16.790 --> 00:22:18.600
As we're showing,
we have a variety of new

00:22:18.600 --> 00:22:20.140
projects that you can create.

00:22:20.140 --> 00:22:23.180
You can create Carbon applications
or Cocoa applications,

00:22:23.180 --> 00:22:25.700
CFPlugin bundles, frameworks.

00:22:25.700 --> 00:22:27.700
But we're not going to do that.

00:22:27.700 --> 00:22:29.700
We're going to work with
this OpenGL example.

00:22:29.930 --> 00:22:33.580
What Manuel has opened here is the
groups and files outline on the left.

00:22:33.720 --> 00:22:36.700
On the left, we have tabs that show
structure of your project.

00:22:36.700 --> 00:22:40.690
Across the top, we have tabs that are
for tool operations,

00:22:40.690 --> 00:22:42.670
so find, build, debug.

00:22:42.820 --> 00:22:46.510
So, with the structure here,
we have three of the examples here:

00:22:46.580 --> 00:22:49.700
GeoFace, RollerCoaster,
and Use a Sphere Map.

00:22:49.740 --> 00:22:53.700
We can open one of those groups,
take a look at the files in that.

00:22:53.700 --> 00:22:57.170
We see little circles in the
left-hand column that shows that these

00:22:57.290 --> 00:23:00.700
files are built for the particular
target that's our active target.

00:23:00.850 --> 00:23:03.760
We can see that up above,
GeoFace is the currently

00:23:03.880 --> 00:23:05.690
selected active target.

00:23:05.800 --> 00:23:08.300
And down below,
we also see that we're linking

00:23:08.300 --> 00:23:10.840
with the GLUT framework,
and you can navigate down

00:23:10.840 --> 00:23:11.670
into the headers of that.

00:23:11.730 --> 00:23:12.700
So, that's a great way to get started.

00:23:12.700 --> 00:23:16.700
We do very directly tie into the
framework mechanisms of Mac OS X.

00:23:16.700 --> 00:23:18.590
This is what you do with
the Carbon frameworks,

00:23:18.590 --> 00:23:19.690
or Cocoa, or whatever.

00:23:19.700 --> 00:23:23.380
So, let's take a look at
how we can do grouping,

00:23:23.380 --> 00:23:24.700
for example.

00:23:24.700 --> 00:23:26.170
So,
we can select... Let's say that we wanted

00:23:26.170 --> 00:23:30.700
to have the source files in a group
and just call them the sources group.

00:23:30.700 --> 00:23:35.610
So, we can select them,
create a new group, call that...

00:23:38.780 --> 00:23:42.460
Looks like we can move code in there.

00:23:42.700 --> 00:23:46.760
We'll show you moving.

00:23:47.810 --> 00:23:50.360
Okay, so that's all under sources now.

00:23:50.360 --> 00:23:54.700
So again,
no physical tie to the layout on disk.

00:23:54.710 --> 00:23:57.220
Now let's take a look at how
you would look at some of

00:23:57.220 --> 00:23:58.700
these files in the editor.

00:23:58.700 --> 00:24:02.700
We'll click around on a couple of files,
main.m, display.c.

00:24:02.820 --> 00:24:04.620
So these all show in the same window.

00:24:04.780 --> 00:24:08.040
There's a pop-up here if you want
to go back and forth between files

00:24:08.040 --> 00:24:09.700
that you've recently been to.

00:24:09.700 --> 00:24:14.700
And you can also use a browser-like
back and forth navigation buttons.

00:24:14.700 --> 00:24:17.090
But let's say that you did
want to have a file of source

00:24:17.090 --> 00:24:18.700
code off in a separate window.

00:24:18.700 --> 00:24:21.910
Just go over to the files
line and double-click to bring

00:24:21.910 --> 00:24:23.700
it up in a separate window.

00:24:23.700 --> 00:24:24.700
That's got all the features.

00:24:24.700 --> 00:24:28.830
You can split the window,
split the panes in the window,

00:24:28.830 --> 00:24:31.700
actually bring up even other files in it,
etc.

00:24:31.700 --> 00:24:33.700
So a lot of flexibility there.

00:24:33.700 --> 00:24:35.550
You can have as many
separate windows as you want.

00:24:35.700 --> 00:24:39.700
Now let's take a look
at the file inspector.

00:24:39.700 --> 00:24:43.630
So up under the project menu,
show the inspector.

00:24:43.880 --> 00:24:46.240
This is where you would set things
like what's the reference style to

00:24:46.370 --> 00:24:47.600
how to get to the source code here.

00:24:47.720 --> 00:24:51.700
So group relative, project relative,
absolute.

00:24:51.710 --> 00:24:54.670
This is also where you would do,
for example, localization.

00:24:54.700 --> 00:24:57.700
So if you had an interface builder nib
file and you wanted to localize that,

00:24:57.700 --> 00:25:00.700
you would do that from here.

00:25:00.860 --> 00:25:03.690
Okay, so let's take a look at building.

00:25:03.740 --> 00:25:07.690
So we'll go ahead and just build
the entire GeoFace project here.

00:25:07.720 --> 00:25:10.700
GeoFace target,
since this is our active target.

00:25:10.850 --> 00:25:12.700
So now this is one of those areas where
we know we need to make some adjustments.

00:25:12.700 --> 00:25:15.700
We know we need to make some additional
user interface improvements here.

00:25:15.700 --> 00:25:19.700
What's popped down is the
expert mode build panel.

00:25:20.020 --> 00:25:24.200
What I was trying to do at Apple was
get this product out usable as

00:25:24.380 --> 00:25:27.450
quickly as I could so that I could
stop maintaining the old project

00:25:27.450 --> 00:25:29.680
builder that many people were using.

00:25:29.810 --> 00:25:33.240
So there are areas of the product
where you'll find sort of expert modes

00:25:33.240 --> 00:25:37.060
built in because we haven't quite
had the opportunity to build in all

00:25:37.060 --> 00:25:40.700
the nice user interface that would
show which files need to be rebuilt

00:25:40.700 --> 00:25:41.700
and which files are building now.

00:25:41.700 --> 00:25:43.680
But this has built.

00:25:43.700 --> 00:25:46.700
So now let's say that we had
a syntax error in a file.

00:25:46.700 --> 00:25:48.640
How would we deal with that?

00:25:48.750 --> 00:25:53.960
So let's go ahead and introduce a
syntax file in the head.h file and

00:25:53.980 --> 00:25:56.700
save that and then rebuild again.

00:25:56.700 --> 00:25:59.380
In this case,
we see up in the build summary that

00:25:59.380 --> 00:26:01.690
the number of error messages pop up.

00:26:01.700 --> 00:26:02.680
We can select on one of those.

00:26:02.760 --> 00:26:04.700
That takes us to the line of code.

00:26:04.870 --> 00:26:10.700
Fix the syntax error
there by doing an undo.

00:26:10.700 --> 00:26:12.700
And we can undo past the last save.

00:26:12.700 --> 00:26:15.700
It's a multi-level undo,
multi-level redo.

00:26:15.890 --> 00:26:18.700
And now from here we can rebuild.

00:26:18.700 --> 00:26:22.200
And it just goes out and builds
exactly those files that were

00:26:22.200 --> 00:26:24.700
dependent on the head.h header file.

00:26:24.710 --> 00:26:27.700
And we're successfully built.

00:26:27.700 --> 00:26:29.700
And we can go ahead and
launch at this point.

00:26:29.730 --> 00:26:30.610
Okay.

00:26:30.760 --> 00:26:32.700
So we've launched the target executable.

00:26:32.700 --> 00:26:34.700
We can make it do a little dance here.

00:26:34.700 --> 00:26:39.430
Also, one thing to note,
Manuel is pressing the A key.

00:26:39.820 --> 00:26:40.700
Make him smirk there.

00:26:40.700 --> 00:26:43.700
You noticed his lip went up a little bit.

00:26:43.700 --> 00:26:46.960
And you're seeing build log
-- or log messages from the

00:26:46.960 --> 00:26:50.700
application in the standard
input/output window behind there.

00:26:50.700 --> 00:26:52.910
So if you had log messages
you wanted to print out,

00:26:53.060 --> 00:26:53.580
for example.

00:26:54.190 --> 00:26:54.700
Okay.

00:26:54.700 --> 00:26:56.700
So let's quit out of that.

00:26:56.950 --> 00:26:59.700
Now let's take a look at target editing.

00:26:59.710 --> 00:27:01.700
So if we select the targets
tab over here on the left,

00:27:01.700 --> 00:27:03.690
you can see that we've got a
number of different targets.

00:27:03.780 --> 00:27:05.700
We'll select the geophase target.

00:27:05.700 --> 00:27:08.560
And that brings up a different type
of editor into the main window.

00:27:08.910 --> 00:27:13.690
So this editor now shows us
the files and build phases.

00:27:13.700 --> 00:27:16.530
This is basically how your build
is going to work for this project

00:27:16.530 --> 00:27:19.640
-- what headers we'll deal with,
what bundle resources we'll copy,

00:27:19.750 --> 00:27:22.590
what source files we'll build,
and how we'll link.

00:27:22.700 --> 00:27:26.860
Build settings -- this is where you
would set the -- if you can go over

00:27:26.860 --> 00:27:30.220
to the build settings tab -- this
is where you would set the product

00:27:30.330 --> 00:27:31.700
name that's going to be built.

00:27:31.700 --> 00:27:35.520
If you were doing an install,
where it would install to.

00:27:35.730 --> 00:27:37.700
And down below, you see the editor.

00:27:37.700 --> 00:27:40.570
And down below,
you see the expert mode build settings.

00:27:40.720 --> 00:27:42.940
So this, again,
is another case of where we need

00:27:42.940 --> 00:27:44.630
to provide better user interface.

00:27:44.700 --> 00:27:48.190
But with this expert mode,
at least we can get a way of

00:27:48.190 --> 00:27:52.700
supplying all the options we need
to today into the build system.

00:27:52.700 --> 00:27:56.840
So application settings -- this is
where you would set the information

00:27:56.910 --> 00:27:58.700
property list for your bundles.

00:27:58.700 --> 00:28:00.700
This is a very important
thing to know about.

00:28:00.700 --> 00:28:04.690
Actually, if we can go back to
the simple screen there.

00:28:04.780 --> 00:28:06.700
This interface is --
actually has been cleaned up.

00:28:06.700 --> 00:28:08.700
But my team moves very quickly.

00:28:08.700 --> 00:28:10.690
This is post-DP4 feature here.

00:28:10.700 --> 00:28:12.700
You don't have it quite yet.

00:28:12.700 --> 00:28:15.700
So what you do have is the
expert mode build settings,

00:28:15.700 --> 00:28:18.540
which is a property list editor.

00:28:18.730 --> 00:28:21.870
With Cocoa,
we can just leverage an object that we

00:28:21.870 --> 00:28:24.700
already had to do property list editing.

00:28:24.700 --> 00:28:28.690
And then the final tab for
executables -- for example,

00:28:28.720 --> 00:28:32.250
if you were building a bundle that
needed to be debugged within the

00:28:32.250 --> 00:28:35.680
context of a given application,
you could say this is the

00:28:35.700 --> 00:28:35.700
application that you would launch.

00:28:35.760 --> 00:28:41.440
To run that bundle and the
arguments that you would pass to it.

00:28:41.700 --> 00:28:46.640
So we can select a
different target up here.

00:28:46.740 --> 00:28:48.590
Let's say that we go
to the install target.

00:28:48.700 --> 00:28:51.700
And with the install target,
we see some different tabs.

00:28:51.700 --> 00:28:54.510
This actually is a legacy target here.

00:28:54.700 --> 00:28:58.800
It's an example of how to have a
target that builds something different

00:28:59.230 --> 00:29:01.610
than what we have in our build system.

00:29:01.700 --> 00:29:04.700
So this is just running
a shell script here.

00:29:04.700 --> 00:29:09.690
And then we can copy the example source
code where we needed it on the system.

00:29:09.840 --> 00:29:13.690
And then one final target -- let's
take a look at the all examples.

00:29:13.700 --> 00:29:18.700
This is an example of an aggregate target
that itself has no build mechanism,

00:29:18.700 --> 00:29:21.580
but it does ask other
targets to be rebuilt.

00:29:21.720 --> 00:29:24.700
So we have full dependencies
between targets.

00:29:24.700 --> 00:29:28.700
And if we build all
examples then at this point,

00:29:28.820 --> 00:29:31.810
then it shouldn't need to
rebuild geophase because

00:29:31.810 --> 00:29:33.700
that's already been built.

00:29:33.700 --> 00:29:37.690
And then it builds the
other two targets as well.

00:29:37.730 --> 00:29:40.420
So roller coaster and uses sphere.

00:29:40.900 --> 00:29:43.700
Now we see down in the lower left,
build succeeded.

00:29:43.700 --> 00:29:46.060
But you see up the top in
the toolbar that the run and

00:29:46.060 --> 00:29:47.690
debug buttons are not enabled.

00:29:47.700 --> 00:29:49.700
Well,
that's because with an aggregate target,

00:29:49.700 --> 00:29:53.700
there is no single executable
to run here at this point.

00:29:53.700 --> 00:29:56.640
But by selecting one of the
sub-targets -- so for example,

00:29:56.640 --> 00:30:00.730
making roller coaster the active target
-- now we can launch it and watch

00:30:00.820 --> 00:30:02.700
the roller coaster come up and spin.

00:30:02.700 --> 00:30:04.530
and spin.

00:30:05.030 --> 00:30:09.660
So these OpenGL examples are
kind of fun to play with.

00:30:09.920 --> 00:30:10.940
All right.

00:30:10.990 --> 00:30:12.170
Very good.

00:30:12.280 --> 00:30:14.480
So now let's talk about debugging.

00:30:14.510 --> 00:30:18.300
With our debugging system,
we have an extensible architecture

00:30:18.300 --> 00:30:20.380
that can accept various plugins.

00:30:20.400 --> 00:30:25.780
We do communicate with GDB for
debugging of all C-based languages.

00:30:25.780 --> 00:30:31.970
GDB is a very well-known Unix,
usually command line, debugger.

00:30:32.260 --> 00:30:35.200
We also are working
heavily on Java debugging.

00:30:35.200 --> 00:30:37.230
It's not fully functional yet,
but if you've been in

00:30:37.230 --> 00:30:39.580
some of the Java sessions,
you've seen some of that.

00:30:39.580 --> 00:30:44.070
We're working with the AppleScript team
for debugging of AppleScript.

00:30:44.230 --> 00:30:48.040
We've gone to a much more graphical
debugging model than we had before.

00:30:48.070 --> 00:30:52.520
So we show threads, stack traces,
variables within a particular

00:30:52.520 --> 00:30:54.960
stack frame with breakpoints.

00:30:54.960 --> 00:30:56.840
Now,
one thing to know about Project Builder

00:30:56.840 --> 00:31:01.510
is that we are designing it to
deal with multiple person projects.

00:31:01.640 --> 00:31:08.360
So each person gets their own
preferences per project settings

00:31:08.360 --> 00:31:10.860
saved off with the project itself.

00:31:10.860 --> 00:31:14.750
It's actually inside the
project document wrapper.

00:31:14.920 --> 00:31:18.000
So you could actually check those
into a source code control system,

00:31:18.000 --> 00:31:18.900
for example.

00:31:18.910 --> 00:31:22.350
And breakpoints is an example of some
of the settings that we store in there.

00:31:22.490 --> 00:31:25.990
So you can have them persistent,
not just between runs of the debugger,

00:31:25.990 --> 00:31:28.400
but between runs of the IDE as well.

00:31:28.430 --> 00:31:30.830
And I can have my breakpoints,
Manuel can have his,

00:31:30.840 --> 00:31:33.840
and you can have yours,
all within the same project.

00:31:33.840 --> 00:31:36.180
One person told me that
whenever they write code,

00:31:36.180 --> 00:31:37.920
they put a breakpoint on it.

00:31:37.920 --> 00:31:40.020
And I thought that was a great idea.

00:31:40.020 --> 00:31:43.020
Later on, two weeks later,
you go to execute the code and hit

00:31:43.020 --> 00:31:46.070
the breakpoint and step through
it the first time you've run it.

00:31:46.080 --> 00:31:48.160
Now we can support that.

00:31:48.160 --> 00:31:51.500
We can invoke functions to get
the values of opaque data types,

00:31:51.630 --> 00:31:54.700
which is very important for
Carbon development today,

00:31:54.710 --> 00:32:00.030
and also for core foundation
with functions like CFShow.

00:32:00.190 --> 00:32:03.480
From the debugger,
we control the dynamic loader,

00:32:03.480 --> 00:32:05.440
what's called DYLD on our system.

00:32:05.540 --> 00:32:08.200
So we can control where frameworks
are being loaded in from if

00:32:08.200 --> 00:32:11.240
you're doing framework debugging.

00:32:11.290 --> 00:32:13.550
So also cross-project debugging.

00:32:13.710 --> 00:32:16.490
Part of the reason we've got the one
window there is we expect that you'll

00:32:16.490 --> 00:32:20.580
be working with frameworks and perhaps
having frameworks in different projects.

00:32:20.630 --> 00:32:24.580
So multiple windows open on
each in its own project window.

00:32:24.580 --> 00:32:28.220
And from an application,
you can step right down into the code

00:32:28.380 --> 00:32:30.100
of a framework and do cross-project.

00:32:30.240 --> 00:32:32.140
So we are taking advantage of GDB.

00:32:32.280 --> 00:32:35.160
And I've gone through
many of the features here.

00:32:35.160 --> 00:32:38.160
We do have additional
things that GDB provides,

00:32:38.360 --> 00:32:42.090
like the ability to set conditions
and commands on breakpoints.

00:32:42.190 --> 00:32:44.150
We don't yet have user
interface for that,

00:32:44.230 --> 00:32:48.160
but we will have the opportunity to
do so in the future to put that in.

00:32:48.160 --> 00:32:51.780
But we do have access to the
GDB command line for any super

00:32:52.360 --> 00:32:57.060
power features that those of you
real GDB addicts don't know about.

00:32:57.160 --> 00:32:59.020
So we're going to be using that.

00:32:59.230 --> 00:32:59.480
Thanks.

00:32:59.480 --> 00:33:02.110
So we're going to be using the
GDB command line for any super power

00:33:02.110 --> 00:33:04.480
features that GDB addicts want to get to.

00:33:04.480 --> 00:33:08.630
There's a number of powerful macro
capabilities that the Carbon team

00:33:08.630 --> 00:33:12.480
and the Core OS team are taking
advantage of in a variety of ways.

00:33:12.480 --> 00:33:17.090
And we have done some things so
there's faster startup and more

00:33:17.140 --> 00:33:20.480
robustness in our DP4 version of GDB.

00:33:20.480 --> 00:33:25.480
So now let's take a look
at an example of debugging.

00:33:25.480 --> 00:33:28.020
If I could go back to
demo one on both screens,

00:33:28.160 --> 00:33:28.800
please.

00:33:28.800 --> 00:33:32.800
So this is a given example of
debugging the geophase target again.

00:33:32.800 --> 00:33:37.800
So what we want to do is set a
breakpoint on a particular function

00:33:37.800 --> 00:33:39.800
that we happen to remember the name of,
so make menus.

00:33:39.800 --> 00:33:46.800
So let's bring down the find panel and
show make menus and do a find for that.

00:33:46.800 --> 00:33:49.800
So we'll find -- do a
text we'll find right now.

00:33:49.800 --> 00:33:50.800
There we go.

00:33:50.800 --> 00:33:52.800
And we select on that.

00:33:52.800 --> 00:33:54.800
And that takes us to the
line of source code there.

00:33:54.800 --> 00:33:56.640
We can put a breakpoint on that.

00:33:56.800 --> 00:33:57.800
Now if we want to see
what breakpoints we have,

00:33:57.800 --> 00:34:00.870
in our project,
again this is project data,

00:34:01.080 --> 00:34:03.800
project structure,
we have another tab to show that.

00:34:03.800 --> 00:34:06.800
So we had just put a
breakpoint in main.m,

00:34:06.800 --> 00:34:09.800
which is .m is the
suffix for Objective-C.

00:34:09.800 --> 00:34:14.710
But it's showing that we already
have a breakpoint on makeface.c.

00:34:14.960 --> 00:34:17.800
So this is actually an example
of a persistent breakpoint

00:34:17.800 --> 00:34:19.640
that was already out there.

00:34:19.800 --> 00:34:24.800
So by double clicking on that,
we can show the specific lines

00:34:24.800 --> 00:34:26.800
that the breakpoints are on.

00:34:26.800 --> 00:34:29.800
Again,
this is an example of an area where

00:34:29.800 --> 00:34:33.800
the user interface has been cleaned
up slightly since DP4 actually.

00:34:34.870 --> 00:34:39.060
So let's go ahead and launch the
application under the debugger.

00:34:39.200 --> 00:34:44.450
We hit the debug button and the
debug tab pops down and it starts

00:34:44.450 --> 00:34:48.450
loading the application into GDB.

00:34:50.540 --> 00:34:52.780
and we're off and running.

00:34:52.780 --> 00:34:54.220
So now we've hit our first break point.

00:34:54.220 --> 00:34:56.300
Let's take a look at some
of the user interface here.

00:34:56.300 --> 00:35:00.500
So we have a pop-up menu that shows the
different threads within our application.

00:35:00.500 --> 00:35:03.500
We'll leave it on the
Make Face thread for now.

00:35:03.680 --> 00:35:08.780
We can walk up and down the stack
trees so we see the variables

00:35:08.950 --> 00:35:11.380
changing for each of the stack frames.

00:35:11.500 --> 00:35:15.360
Within the variables of
the Make Face function,

00:35:15.590 --> 00:35:19.800
we can expand on, for example,
the face argument and see

00:35:19.800 --> 00:35:22.500
that that's actually a fairly
complex structure in there.

00:35:22.500 --> 00:35:25.330
We're getting all this
information back from GDB.

00:35:25.500 --> 00:35:28.960
Now we can close that back
up and do a little bit of

00:35:28.960 --> 00:35:31.500
single stepping through here.

00:35:31.500 --> 00:35:35.500
We see actually that there's
two loop variables here,

00:35:35.670 --> 00:35:37.500
the I and II variables.

00:35:37.500 --> 00:35:40.500
And I didn't write this code.

00:35:40.500 --> 00:35:41.500
Yeah.

00:35:41.500 --> 00:35:48.290
But every time we change a value,
it's showing the changed variable in red,

00:35:48.300 --> 00:35:51.070
so kind of what you would expect.

00:35:51.500 --> 00:35:54.860
And so if we continue from there,
then we actually march along,

00:35:54.930 --> 00:35:57.500
hit the other break point
that we just put in.

00:35:57.500 --> 00:36:02.050
Let's single step a little bit
there and then continue again.

00:36:04.130 --> 00:36:08.500
and we see the application fire
up under the debugger here.

00:36:08.610 --> 00:36:12.570
So debugging fairly nicely tied in,
and again, we're going to do the same

00:36:12.570 --> 00:36:14.160
thing with Java debugging.

00:36:14.170 --> 00:36:15.910
And I think that's it on that.

00:36:15.930 --> 00:36:18.490
All right, we can go back to slides.

00:36:18.740 --> 00:36:20.350
Thank you.

00:36:25.110 --> 00:36:28.300
So continuing our discussion of
what's in Developer Preview 4,

00:36:28.300 --> 00:36:30.100
let's switch to Interface
Builder for a moment.

00:36:30.100 --> 00:36:32.440
So what is Interface Builder?

00:36:32.440 --> 00:36:34.090
For those of you who
aren't familiar with it,

00:36:34.100 --> 00:36:36.820
this is Apple's user
interface layout tool.

00:36:36.820 --> 00:36:41.630
The big deal at this point is that
you can create Aqua-compliant user

00:36:41.630 --> 00:36:45.960
interfaces for both Carbon and
Cocoa applications with this.

00:36:46.030 --> 00:36:49.810
You get all the metrics correct,
etc., the standard menus you want.

00:36:50.880 --> 00:36:53.430
For those who've done
Cocoa development in the past,

00:36:53.430 --> 00:36:56.680
you're familiar with Interface
Builder in that it's a big part

00:36:56.680 --> 00:36:58.160
of the Cocoa development cycle.

00:36:58.160 --> 00:37:03.120
It lets you put in actions and outlets
that tie back into the source code.

00:37:03.120 --> 00:37:07.040
But you can also, at this point,
use it for your Carbon development.

00:37:07.040 --> 00:37:11.220
So when you run Interface Builder,
it generates what's called a nib file,

00:37:11.220 --> 00:37:14.210
which is the description
of your user interface.

00:37:14.220 --> 00:37:17.420
Again,
we can do that for Cocoa applications,

00:37:17.500 --> 00:37:20.600
Carbon, and also for Java clients.

00:37:20.760 --> 00:37:21.760
And we can do that for Web objects.

00:37:21.910 --> 00:37:24.840
The Interface Builder team has
done a great job of adding in

00:37:24.840 --> 00:37:28.700
support for additional platforms,
so if they're down the road become more,

00:37:28.700 --> 00:37:31.580
become important,
we'll be able to add that

00:37:31.580 --> 00:37:32.730
into Interface Builder.

00:37:32.850 --> 00:37:37.700
So how would you take advantage
of this in a Carbon context?

00:37:37.780 --> 00:37:44.650
Well, within the Carbon runtime on
Mac OS X and in CarbonLib 1.1 soon,

00:37:44.650 --> 00:37:48.600
you have what's called the Interface
Builder Carbon Runtime that takes

00:37:48.600 --> 00:37:53.390
the nib file under direction
from your code and loads it in,

00:37:53.390 --> 00:37:58.490
and then it builds your
user interface from that.

00:37:58.680 --> 00:38:02.940
So this is sort of an alternative
to using the diddles and D-logs and

00:38:03.170 --> 00:38:06.730
window definitions and other things
you may be familiar with in the past.

00:38:07.760 --> 00:38:10.720
Um, so...

00:38:10.810 --> 00:38:13.200
Why might you want to do that?

00:38:13.200 --> 00:38:16.380
One advantage is that, again,
it does let you create an

00:38:16.380 --> 00:38:18.020
Aqua-compliant user interface.

00:38:18.020 --> 00:38:22.010
This does support all the
Carbon user interface elements.

00:38:22.020 --> 00:38:24.260
And for those of you who
have been learning about

00:38:24.260 --> 00:38:27.590
the new Carbon event model,
where it makes it easier to tie

00:38:27.590 --> 00:38:30.720
commands back into your code,
this is a great way,

00:38:30.790 --> 00:38:33.340
actually the best way,
of taking advantage of the

00:38:33.340 --> 00:38:34.840
new Carbon event model.

00:38:36.060 --> 00:38:40.820
This lets you create
Unicode-compliant user interfaces,

00:38:40.820 --> 00:38:43.640
and it is tied in with
the new Project Builder,

00:38:43.640 --> 00:38:46.680
and we'll continue to tie
it in more tightly as we go.

00:38:46.680 --> 00:38:50.740
So I'm not going to demo Interface
Builder in this session this morning,

00:38:50.740 --> 00:38:51.660
but 9 a.m.

00:38:51.660 --> 00:38:55.300
tomorrow, I believe in this room,
you can come learn much more

00:38:55.300 --> 00:38:58.980
about Interface Builder,
both Cocoa and for Carbon development.

00:39:01.490 --> 00:39:04.960
Okay, again,
further elaborating on how we're

00:39:05.030 --> 00:39:06.990
delivering on our commitment.

00:39:07.130 --> 00:39:09.280
Let's show you some of the
things that aren't in this

00:39:09.280 --> 00:39:11.140
release but will be coming soon.

00:39:11.400 --> 00:39:15.400
I've talked quite a bit about
both Java and AppleScript.

00:39:15.400 --> 00:39:18.400
We're trying to broaden the scope
of Project Builder to handle

00:39:18.400 --> 00:39:21.400
development of everything that
you'd need to do with Mac OS X.

00:39:21.400 --> 00:39:25.530
So, I've got an engineer on my team at
this point who's working heavily

00:39:25.530 --> 00:39:29.300
with the Java teams to make sure
that we can build all Java projects

00:39:29.420 --> 00:39:31.400
and that we can debug them.

00:39:31.400 --> 00:39:33.400
Some of that's been shown
in the Java sessions.

00:39:33.400 --> 00:39:37.140
We're working with the Mac Runtime
for Java team to bring some of

00:39:37.140 --> 00:39:43.240
the features of their SDK from
Mac OS 9 into the IDE for Mac OS X.

00:39:43.400 --> 00:39:46.230
With the AppleScript team,
we're working with Chris Espinoza's

00:39:46.230 --> 00:39:49.340
team there to provide an environment
for developing AppleScript.

00:39:49.420 --> 00:39:50.400
And then within the IDE,
we're working with the Mac OS X.

00:39:50.400 --> 00:39:50.400
So, we're working with the Mac OS X to
develop a new version of the Mac OS X.

00:39:50.400 --> 00:39:50.400
So, I've got an engineer on my team at
this point who's working heavily

00:39:50.400 --> 00:39:50.400
with the Java teams to make sure
that we can build all Java projects

00:39:50.400 --> 00:39:50.400
and that we can debug them.

00:39:50.400 --> 00:39:50.400
Some of that's been shown
in the Java sessions.

00:39:50.470 --> 00:39:54.110
And then within the IDE itself,
we're working heavily on

00:39:54.110 --> 00:39:57.460
better source code navigation,
a number of graphical user

00:39:57.460 --> 00:40:00.340
interface improvements,
so some of these you've already seen,

00:40:00.340 --> 00:40:02.720
like this information
property list editing,

00:40:02.720 --> 00:40:07.400
sorry, couldn't help it,
I already gave a sneak preview of that.

00:40:07.400 --> 00:40:10.180
Build tool option settings,
it's very important to us that

00:40:10.180 --> 00:40:13.340
we be able to have a much better
graphical user interface for

00:40:13.470 --> 00:40:17.830
setting of do I want optimized
code or what level of optimization,

00:40:18.150 --> 00:40:19.060
etc.

00:40:19.060 --> 00:40:23.540
We'd like to continue refining
our user interface for debugging.

00:40:23.560 --> 00:40:26.830
And source code management is a
feature that ever since I first

00:40:27.020 --> 00:40:31.080
took the management job here,
the WebObjects team, for example,

00:40:31.080 --> 00:40:34.940
has been demanding source
code management features.

00:40:34.940 --> 00:40:37.200
So let's talk about...

00:40:37.600 --> 00:43:42.100
[Transcript missing]

00:43:42.570 --> 00:43:46.880
And another thing that we have built in,
you can see also we have full syntax

00:43:46.880 --> 00:43:50.360
coloring here and you can set the
options on how you'd like that to be set.

00:43:50.500 --> 00:43:56.500
So one other thing is if
we go to the Find panel,

00:43:56.500 --> 00:44:00.500
we can also do a Find Definition
and we'll be working to optimize

00:44:00.500 --> 00:44:04.500
user interface on this to make
it more accessible from the code.

00:44:04.670 --> 00:44:08.830
But let's say type in "cosang"
which we happen to notice there

00:44:08.900 --> 00:44:11.480
and that shows Find Definition.

00:44:11.620 --> 00:44:13.500
We can click to go to that.

00:44:13.540 --> 00:44:18.210
You see a bookmarker there
so that if it's a framework,

00:44:18.210 --> 00:44:22.350
we could go off to the
documentation for that.

00:44:22.500 --> 00:44:26.500
Okay, so now let's take a look at
some of the SCM features.

00:44:26.500 --> 00:44:28.500
If we take a look at the
Groups and Files view again,

00:44:28.500 --> 00:44:31.290
we see that there's a
new column over here,

00:44:31.460 --> 00:44:32.500
the SCM column.

00:44:32.500 --> 00:44:34.460
And what this shows
us is the SCM section.

00:44:34.630 --> 00:44:37.500
So this is the status of
the files in your project.

00:44:37.500 --> 00:44:40.740
We see a number of Ms here which
indicate that some of the files

00:44:40.740 --> 00:44:42.490
have already been modified.

00:44:42.600 --> 00:44:47.490
So let's take a look at one of
those like head.h for example.

00:44:47.610 --> 00:44:50.850
Actually Manuel, I don't remember what
we changed in head.h,

00:44:50.900 --> 00:44:51.470
do you?

00:44:51.580 --> 00:44:54.500
Well, let's find out.

00:44:54.500 --> 00:44:59.500
So let's go over and take
a look at the SCM menu.

00:44:59.500 --> 00:45:02.420
We could update to the latest revision.

00:45:02.510 --> 00:45:03.500
We could compare.

00:45:03.500 --> 00:45:04.500
We could commit.

00:45:04.500 --> 00:45:07.340
Let's do a compare and
see what's changed.

00:45:07.500 --> 00:45:11.470
So we send a message off to the
File Merge graphical diffing tool.

00:45:11.840 --> 00:45:17.530
And in that, up we come and we can see
graphically what things have

00:45:17.670 --> 00:45:20.490
been changed in this file.

00:45:20.500 --> 00:45:23.290
So very cool.

00:45:30.260 --> 00:45:34.910
Okay, and so if we quit out of that,
then we can now go ahead and commit

00:45:34.990 --> 00:45:37.100
these changes if we like them.

00:45:37.140 --> 00:45:41.230
So we can type in a
commit log message here.

00:45:43.500 --> 00:50:18.000
[Transcript missing]

00:50:18.400 --> 00:50:20.960
So again,
you see the same kind of build output,

00:50:20.960 --> 00:50:23.700
the same output lines, CC.

00:50:23.700 --> 00:50:26.830
There is a way in the preferences of
Project Builder to get the full build

00:50:26.830 --> 00:50:29.200
command of exactly what it's running.

00:50:29.360 --> 00:50:31.660
What we've done here,
if we go into the build settings,

00:50:31.660 --> 00:50:34.440
we've kind of modified this
project a little bit in

00:50:34.440 --> 00:50:36.240
ways that you won't have to.

00:50:36.390 --> 00:50:38.300
You can see some of the flexibility.

00:50:38.300 --> 00:50:43.300
So with the -b argument,
we can tell GCC that we actually want

00:50:43.300 --> 00:50:47.300
to use a somewhat different version of
GCC that generates different output.

00:50:47.340 --> 00:50:51.300
And we want to use a
different linker here as well.

00:50:51.300 --> 00:50:56.630
So we've also changed the
- in the executables tab,

00:50:56.930 --> 00:51:01.290
We've changed now,
we're going to use the launch CFM binary

00:51:01.410 --> 00:51:03.900
as what we launch for this application.

00:51:03.900 --> 00:51:09.500
But we are passing an argument
which is the full path to

00:51:09.500 --> 00:51:12.360
this particular application.

00:51:12.490 --> 00:51:14.850
So let's go ahead,
it's been successfully built,

00:51:14.910 --> 00:51:17.670
let's hide Project Builder
and we should see the binary

00:51:17.670 --> 00:51:19.360
here in our Mac OS X system.

00:51:19.440 --> 00:51:23.260
Let's go ahead and copy that
across to the Mac OS 9 system.

00:51:26.540 --> 00:51:30.570
Okay,
so I sit here on my Mac OS 9 system.

00:51:30.570 --> 00:51:34.120
Let's go back into Project Builder
and we can hit the launch button

00:51:34.120 --> 00:51:40.760
from here and actually see the half
binary launched under Project Builder.

00:51:40.970 --> 00:51:46.540
And by double clicking here on Mac OS 9,
I see the same binary launched on 9.

00:51:46.540 --> 00:51:51.840
So again, this is showing demo of
Carbon scrolling here.

00:51:52.140 --> 00:51:56.910
So when we do this for real,
what you'll get by default for

00:51:57.080 --> 00:52:01.410
Mac OS X binaries is a Mac O binary
that will let you take advantage

00:52:01.410 --> 00:52:02.940
of the full Mac OS X system.

00:52:02.940 --> 00:52:07.160
But for demo purposes today,
we're showing PEPF on both sides.

00:52:07.160 --> 00:52:09.230
All right, so that's it for our demos.

00:52:09.230 --> 00:52:10.860
Thanks very much, Manuel.

00:52:10.860 --> 00:52:12.590
And if we can go back to...

00:52:16.770 --> 00:52:19.400
Now let's talk about
delivery and deployment.

00:52:19.500 --> 00:52:22.640
Now I've mentioned that we have had a
previous version of Project Builder.

00:52:23.100 --> 00:52:25.840
Those of you who have been
doing WebObjects development or

00:52:25.840 --> 00:52:27.700
Cocoa development are familiar with that.

00:52:27.700 --> 00:52:31.500
We're playing a little
shell game here in DP4.

00:52:32.090 --> 00:52:36.440
When you look in
System Developer Applications,

00:52:36.440 --> 00:52:39.700
Project Builder is the new one.

00:52:39.700 --> 00:52:42.420
And we have Project Builder WOA,
which stands for

00:52:42.420 --> 00:52:43.700
Project Builder WebObjects.

00:52:43.730 --> 00:52:49.230
That is the old one that today would
still be used for WebObjects development,

00:52:49.230 --> 00:52:51.700
but that will be changing soon.

00:52:51.700 --> 00:52:57.400
So if you are coming new into this,
I would not recommend that you run

00:52:57.400 --> 00:53:00.600
the old Project Builder WOA at all.

00:53:00.930 --> 00:53:04.800
So for those of you who are
using the old Project Builder,

00:53:04.800 --> 00:53:08.730
we will not be shipping that
again unless somebody gives me a

00:53:08.730 --> 00:53:10.540
very good reason why I need to.

00:53:10.630 --> 00:53:14.950
I have no intent to put any effort
into maintaining that product,

00:53:14.950 --> 00:53:19.240
although we will make sure that
the WebObjects customers and

00:53:19.240 --> 00:53:20.800
developers are fully taken care of.

00:53:20.800 --> 00:53:23.020
But again,
we're working with that team to make

00:53:23.020 --> 00:53:26.800
sure that the right things happen,
integrate with the new Project Builder,

00:53:26.800 --> 00:53:29.800
and you all want to shift over
if you are using the old one.

00:53:29.800 --> 00:53:35.030
In the next session,
they'll show how easy that is to do.

00:53:35.470 --> 00:53:40.640
So for delivery,
the decision at this point is that this

00:53:40.640 --> 00:53:42.620
is one of Apple's core development tools.

00:53:42.640 --> 00:53:48.170
It will be shipped on the quarterly
tool CDs to Apple Developer Connection

00:53:48.170 --> 00:53:49.640
program members.

00:53:49.640 --> 00:53:53.640
So you get this for free as
part of your monthly mailings.

00:53:53.680 --> 00:53:56.650
We haven't done this yet,
so I'm sure there will be some

00:53:56.650 --> 00:54:00.000
logistics to work through on this,
but that is the plan.

00:54:00.000 --> 00:54:02.520
And we'll also have
web updates available.

00:54:03.280 --> 00:54:05.750
Again,
we haven't put one of those out yet,

00:54:05.930 --> 00:54:09.260
so I'm sure we'll have a few
logistics to work through there.

00:54:09.260 --> 00:54:14.760
For support resources,
we've put a public email list in place,

00:54:14.910 --> 00:54:18.960
projectbuilder-users at
public.lists.apple.com.

00:54:18.960 --> 00:54:21.720
This is one of the fairly
standard places where these go.

00:54:21.720 --> 00:54:25.480
We do have an email list in
place at this point that we've

00:54:25.480 --> 00:54:27.580
been getting feedback on.

00:54:27.580 --> 00:54:31.200
We have delivered this to a few,
a very small number of

00:54:31.200 --> 00:54:34.800
third parties at this point,
who came down for one of our kitchens.

00:54:34.800 --> 00:54:36.690
We sent them back with it.

00:54:36.750 --> 00:54:38.660
In the kitchen,
they shifted their development

00:54:38.660 --> 00:54:42.820
over to the new project builder,
and they're elated with it so far.

00:54:42.820 --> 00:54:44.520
Thanks, guys.

00:54:44.520 --> 00:54:48.300
There they go.

00:54:48.450 --> 00:54:52.370
And then the DTS support mailing list.

00:54:52.460 --> 00:54:56.630
So in summary,
you can see that we are delivering on our

00:54:56.630 --> 00:55:00.040
commitment to great development tools.

00:55:00.040 --> 00:55:01.920
I'm very proud of the team.

00:55:01.920 --> 00:55:03.120
We've accomplished.

00:55:03.120 --> 00:55:04.910
We've accomplished what
I consider to be a heck of a

00:55:04.910 --> 00:55:06.620
lot in the last year and a half.

00:55:06.620 --> 00:55:08.720
And in fact,
if I could ask team members to just stand

00:55:08.880 --> 00:55:12.610
up and take some acknowledgments here.