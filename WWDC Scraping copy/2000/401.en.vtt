WEBVTT

00:00:05.190 --> 00:00:07.990
It's traditional to survey
the audience at the beginning

00:00:07.990 --> 00:00:10.070
of one of these sessions,
as you saw at the last one.

00:00:10.160 --> 00:00:11.100
So I want people to raise your hands.

00:00:11.100 --> 00:00:13.600
How many people here are Canadians?

00:00:13.950 --> 00:00:15.000
Yeah?

00:00:15.870 --> 00:00:19.880
How do you pronounce J-A-V-A?

00:00:20.120 --> 00:00:20.620
"Java!

00:00:21.000 --> 00:00:21.910
Java!

00:00:21.910 --> 00:00:22.950
Right?

00:00:22.950 --> 00:00:25.580
Java!" James Gosling,
the inventor of Java,

00:00:25.620 --> 00:00:27.760
who I tried to get him here today.

00:00:27.760 --> 00:00:30.800
He's from Calgary,
so I think if I pronounce Java,

00:00:30.800 --> 00:00:34.000
it's out of homage to the inventor
of this wonderful language.

00:00:34.000 --> 00:00:39.000
By the way, it's also pronounced "Aqua."
I seem to be losing on that one.

00:00:39.000 --> 00:00:41.830
And if I say process and project,
I hope you'll forgive me.

00:00:42.050 --> 00:00:43.660
This is a, oh yes,
one other announcement.

00:00:43.660 --> 00:00:46.010
I'd like to, because this is a standing
room only audience here,

00:00:46.010 --> 00:00:47.880
it's not quite as standing
room as the last one.

00:00:48.000 --> 00:00:50.210
Seriously,
I would like the Apple employees to

00:00:50.210 --> 00:00:54.000
please vacate their seats so that the
paying developers can come and sit down.

00:00:54.000 --> 00:00:55.890
So if any of you guys
are Apple developers,

00:00:55.890 --> 00:00:58.060
you've heard me talk about
this a million times,

00:00:58.060 --> 00:01:00.000
you Apple employees, get out of here.

00:01:00.000 --> 00:01:00.980
I don't need you.

00:01:01.040 --> 00:01:03.960
You're just going to ask me hard,
embarrassing questions at the end anyway.

00:01:04.430 --> 00:01:05.390
I still see a few seats here.

00:01:05.400 --> 00:01:07.580
Put your hand up if
there's a seat beside you.

00:01:07.610 --> 00:01:09.040
There's some people standing out there.

00:01:09.040 --> 00:01:09.710
Yeah, there's a few seats.

00:01:09.780 --> 00:01:11.200
There's a bunch over here.

00:01:11.260 --> 00:01:12.240
It's a good place to stand over there.

00:01:12.380 --> 00:01:14.860
Seriously, Apple people, out.

00:01:16.050 --> 00:01:18.000
Out and about, Apple people.

00:01:18.360 --> 00:01:21.600
Pardon me.

00:01:21.600 --> 00:01:24.450
Well, I want to give you a technical
overview of WebObjects,

00:01:24.590 --> 00:01:28.350
and I want to position this product for
those of you who presumably don't know

00:01:28.350 --> 00:01:30.870
too much about WebObjects development.

00:01:31.000 --> 00:01:33.920
I have the great advantage in
this seminar of not having to give

00:01:33.960 --> 00:01:36.820
an in-depth answer to virtually
any question you might ask,

00:01:37.000 --> 00:01:40.000
because there's 16 more
seminars coming after this one,

00:01:40.000 --> 00:01:43.000
and so the best answer I can give to
just about any question you might ask is,

00:01:43.000 --> 00:01:46.190
"Go to session 417 on
Direct or whatever," and

00:01:46.250 --> 00:01:48.000
they'll take care of it there.

00:01:48.000 --> 00:01:52.000
But I would like you to understand
how a WebObjects application works,

00:01:52.000 --> 00:01:54.700
what the different pieces are,
what the different objects are that you

00:01:54.700 --> 00:01:57.880
write versus the ones that we write,
how you choose ours,

00:01:57.880 --> 00:01:59.820
how you choose yours,
what's at the front end,

00:01:59.820 --> 00:02:02.000
what's at the back end,
and what do the tools do.

00:02:02.000 --> 00:02:04.670
If I can get most of that across,
I'll be pretty happy.

00:02:04.670 --> 00:02:04.960
So...

00:02:09.350 --> 00:02:09.760
That's our goal.

00:02:09.760 --> 00:02:10.640
We're going to look at the frameworks.

00:02:10.730 --> 00:02:12.440
If all goes well,
and I have had some trouble

00:02:12.440 --> 00:02:13.910
with my database server here.

00:02:13.940 --> 00:02:16.540
My database server, by the way,
is running Windows 2000,

00:02:16.540 --> 00:02:18.740
so that if it crashes, it's not my fault.

00:02:18.850 --> 00:02:23.150
But I do hope to build a little
application at the end if all goes well.

00:02:23.310 --> 00:02:26.450
And I'd like you to understand at
least the titles of the other sessions.

00:02:26.520 --> 00:02:28.340
What the heck is direct-to-Java client,
anyway?

00:02:28.340 --> 00:02:29.700
Let's find out about that.

00:02:29.700 --> 00:02:32.550
I'm going to have these little
logos in my presentation when it's

00:02:32.550 --> 00:02:35.240
a good spot for you to go off and
think about a different session

00:02:35.350 --> 00:02:37.070
that might answer more about this.

00:02:37.160 --> 00:02:39.100
So what does WebObjects do?

00:02:39.120 --> 00:02:40.930
It's an application server.

00:02:40.940 --> 00:02:43.130
I hate that term, okay,
because it sounds like all it's

00:02:43.130 --> 00:02:44.670
doing is coughing up applications.

00:02:44.730 --> 00:02:46.670
But this is the slot the
industry has put us in,

00:02:46.670 --> 00:02:48.300
and I think it's much more than that.

00:02:48.360 --> 00:02:51.840
It's developer tools, it's frameworks,
and a runtime environment

00:02:51.840 --> 00:02:54.650
and a monitoring environment,
but most importantly,

00:02:54.650 --> 00:02:57.800
frameworks that do most of the
hard part of development for you.

00:02:59.580 --> 00:03:02.470
For instance, the WebObjects application,
you might write some objects,

00:03:02.600 --> 00:03:04.470
you might choose some of ours,
and deploy them on

00:03:04.470 --> 00:03:06.440
this box in the middle,
this big square here,

00:03:06.610 --> 00:03:10.510
and those objects might talk to a
variety of data services at the back end,

00:03:10.510 --> 00:03:14.580
and might deliver either a Java client or
a web-based interface out the front end.

00:03:14.650 --> 00:03:16.900
In fact, the same objects can do
both kinds of interface,

00:03:16.900 --> 00:03:19.500
and there are other objects
that can even do WAP interfaces.

00:03:19.500 --> 00:03:21.050
How many people here have
WAP on their telephone,

00:03:21.050 --> 00:03:21.880
right here in the room?

00:03:21.900 --> 00:03:24.230
Darn,
I was going to write a WAP application

00:03:24.230 --> 00:03:27.100
and have you log in and send
me something during the demo.

00:03:27.100 --> 00:03:28.620
I knew that probably wouldn't work out.

00:03:28.650 --> 00:03:30.530
Now, who is this for?

00:03:30.580 --> 00:03:31.980
This is a developer product.

00:03:31.980 --> 00:03:36.550
Those of us who are Apple iServices
employees can make this thing look much

00:03:36.550 --> 00:03:40.690
easier to use than it maybe actually is,
but that's all right.

00:03:40.760 --> 00:03:43.470
This is a powerful product with
a huge amount of functionality

00:03:43.590 --> 00:03:46.330
and a corresponding learning
curve associated with it.

00:03:46.400 --> 00:03:51.090
But a steep learning curve is good
because it means you're going to

00:03:51.250 --> 00:03:54.790
learn a lot in a short period of time,
right?

00:03:57.800 --> 00:04:15.010
WebObjects works with a whole
variety of technologies.

00:04:15.010 --> 00:04:15.010
I'm going to talk for the most
part about WebObjects 4.5,

00:04:15.010 --> 00:04:15.010
but I'll touch a little bit on
what's coming in the future.

00:04:15.010 --> 00:04:15.010
We work with a variety of programs.

00:04:17.720 --> 00:04:22.210
Well, okay, today with 4.5,
you can use Objective-C and WebScript,

00:04:22.280 --> 00:04:24.600
although I would encourage you,
if you're going to get started

00:04:24.640 --> 00:04:26.580
and you want to move ahead
to the new all-Java version,

00:04:26.580 --> 00:04:28.830
probably best to start
working in Java today.

00:04:28.840 --> 00:04:31.650
We work with a variety of databases,
a variety of adapters

00:04:31.650 --> 00:04:34.400
that you can see there,
and this is an open process.

00:04:34.400 --> 00:04:37.570
There are more adapters
coming from third parties.

00:04:37.580 --> 00:04:39.910
We have a variety of mainframe
connectivity solutions.

00:04:39.910 --> 00:04:41.680
You can build different user interfaces.

00:04:41.770 --> 00:04:43.740
You can work with a bunch of web servers.

00:04:43.880 --> 00:04:46.300
The most important thing, open, open,
open, open, open, open, open.

00:04:46.330 --> 00:04:49.380
This is a very open product
that people have made integrate

00:04:49.380 --> 00:04:51.910
with a whole variety of oddball
things that we've never heard of.

00:04:51.970 --> 00:04:54.350
We had a customer in
New York that apparently wanted

00:04:54.350 --> 00:04:55.800
to use PIC as their database.

00:04:55.980 --> 00:04:59.180
When I heard this, I thought, "PIC,
my God, didn't that database die in about

00:04:59.250 --> 00:05:02.370
1975 or something like that?"
But we have an open enough product

00:05:02.370 --> 00:05:05.320
where we can make it integrate with
anything that has a reasonable API.

00:05:05.510 --> 00:05:07.360
You can develop on
those various platforms.

00:05:07.360 --> 00:05:08.880
You can deploy on those others.

00:05:08.880 --> 00:05:12.420
Note that Linux and Mac OS X are
sort of future release platforms

00:05:12.480 --> 00:05:13.860
on this particular slide.

00:05:13.860 --> 00:05:16.870
You can mix and match those as
needed and grow from a small

00:05:16.870 --> 00:05:21.020
deployment to a vast one without,
hopefully, a huge amount of effort.

00:05:21.160 --> 00:05:23.730
You might start with something like
this where your application is all

00:05:23.730 --> 00:05:25.090
deployed on one little box there.

00:05:25.390 --> 00:05:28.900
Don't be frightened by this next slide,
but you might grow from that to

00:05:28.900 --> 00:05:32.830
something like this where you've got
multiple firewalls and multiple web

00:05:32.830 --> 00:05:35.330
servers and multiple web object servers.

00:05:35.410 --> 00:05:38.670
In fact, these purple things over here,
these are actual identical copies of

00:05:38.700 --> 00:05:41.800
your web object's application running
on a bunch of different machines.

00:05:42.020 --> 00:05:43.690
A little thing we call the adapter.

00:05:43.940 --> 00:05:46.140
It runs on the web server
and sorts everything out,

00:05:46.220 --> 00:05:47.520
keeps everybody straight.

00:05:47.520 --> 00:05:51.310
You can move fairly seamlessly from that
to this with our runtime environment.

00:05:51.320 --> 00:05:54.310
If you want to know more, go to the
Building Large Scale Applications

00:05:54.310 --> 00:05:54.910
session.

00:05:55.510 --> 00:05:56.500
A couple of key ideas.

00:05:56.500 --> 00:05:58.630
There's objects at the front end,
objects at the back end.

00:05:58.790 --> 00:06:01.500
The ones at the front end
we call Web Components,

00:06:01.630 --> 00:06:03.370
and you use WebObjects
Builder to develop those.

00:06:03.490 --> 00:06:05.830
The ones at the back end
are Enterprise Objects,

00:06:05.840 --> 00:06:08.500
and you use Enterprise Objects
Modeler to do that.

00:06:08.580 --> 00:06:12.900
I think they took me for this
talk because I talk faster

00:06:12.900 --> 00:06:12.900
than anybody else at Apple,
but...

00:06:13.940 --> 00:06:17.400
But these objects are
kept completely separate.

00:06:17.440 --> 00:06:20.990
The objects that generate the HTML user
interface have no idea what the heck is

00:06:20.990 --> 00:06:23.870
going on back at the database back end,
because they're all talking to a

00:06:23.870 --> 00:06:28.420
common middle tier of business objects
that provide functionality on request

00:06:28.710 --> 00:06:32.340
to the front end HTML components,
and these middle objects are created

00:06:32.370 --> 00:06:36.900
on demand by the enterprise objects
framework objects at the back end.

00:06:36.980 --> 00:06:39.390
And all the decisions about how
any of this works are actually

00:06:39.650 --> 00:06:40.720
made pretty much at runtime.

00:06:40.870 --> 00:06:44.800
So at the front end,
a web component consists of

00:06:44.800 --> 00:06:47.400
some HTML that you might type up
yourself or get from somewhere,

00:06:47.400 --> 00:06:48.880
along with this one special tag.

00:06:49.030 --> 00:06:51.900
This is all we put in the HTML is
this tag that says WebObject.

00:06:51.900 --> 00:06:55.750
It's a tag that says, "Here,
something cool is going to happen."

00:06:56.090 --> 00:06:56.960
Really, that's all it is.

00:06:57.010 --> 00:06:59.320
A WebObject name equals picture.

00:06:59.320 --> 00:07:02.000
And then there's another file that says,
you know what?

00:07:02.120 --> 00:07:04.100
When you see that WebObject tag,
name equals picture,

00:07:04.100 --> 00:07:07.710
that means send this certain message
to this object at the middle tier

00:07:07.710 --> 00:07:11.000
and take the result and put it
where that WebObject tag was.

00:07:11.000 --> 00:07:18.140
And repeat this process over and over
again to build a dynamic page on the fly.

00:07:19.500 --> 00:07:21.630
These components at the front end
that are producing these things

00:07:21.630 --> 00:07:22.730
can produce all sorts of stuff.

00:07:22.800 --> 00:07:25.640
They can produce plain text,
they can produce more HTML,

00:07:25.640 --> 00:07:29.180
they can produce fancy,
clever JavaScript effects, images, WAP,

00:07:29.180 --> 00:07:30.390
AppleScript, whatever you like.

00:07:30.400 --> 00:07:33.400
It's an open framework
at the front end there.

00:07:33.400 --> 00:07:35.400
And you can have a variety
of non-HTML components.

00:07:35.400 --> 00:07:39.510
We have a partner, ReportMill,
that has a really interesting PDF-based

00:07:39.510 --> 00:07:44.350
reporting kit that takes your middle-tier
objects and builds a dynamic PDF document

00:07:44.350 --> 00:07:46.350
that you can vend to the end user.

00:07:46.440 --> 00:07:48.750
We have a partner in
Europe called WAPObjects that's

00:07:48.970 --> 00:07:50.400
building WAP-enabled things.

00:07:50.400 --> 00:07:52.920
I just think that's so much fun to say,
"WAPObjects!" It's like

00:07:52.920 --> 00:07:54.400
a cartoon sound effect.

00:07:54.400 --> 00:07:58.530
We also have APIs in the product that can
generate XML in a fairly straightforward

00:07:58.530 --> 00:08:01.400
way that hopefully I can... I don't
think I'm going to show you that one.

00:08:01.400 --> 00:08:03.400
There's a session on XML coming later.

00:08:03.400 --> 00:08:05.370
At the back end... Oh,
I can see this down here now.

00:08:05.370 --> 00:08:05.910
This is great.

00:08:05.910 --> 00:08:06.370
Thank you.

00:08:06.470 --> 00:08:10.140
I would like to say "Konbanwa"
to the Japanese translators.

00:08:10.560 --> 00:08:11.400
Konbanwa!

00:08:11.400 --> 00:08:12.400
Konbanwa!

00:08:12.400 --> 00:08:13.400
Oh, they're waving.

00:08:13.400 --> 00:08:13.680
Thank you.

00:08:13.750 --> 00:08:14.390
Thank you very much.

00:08:14.400 --> 00:08:18.400
Also, whenever I do a presentation,
I like to try to fake out the camera man.

00:08:18.400 --> 00:08:20.420
So I like to go this way...

00:08:24.700 --> 00:08:27.330
For the backend,
we've got these enterprise objects.

00:08:27.410 --> 00:08:29.640
We call them enterprise objects,
and they are objects like

00:08:29.750 --> 00:08:31.900
anything else in the computer
science sense of the term.

00:08:31.940 --> 00:08:32.480
They've got data.

00:08:32.640 --> 00:08:35.760
They've got procedures
that operate on this data.

00:08:35.810 --> 00:08:38.830
But what makes them special
is that there is something

00:08:38.830 --> 00:08:41.120
gluing them to a data source.

00:08:41.120 --> 00:08:44.770
There is this whole backend architecture
that says this kind of object,

00:08:44.770 --> 00:08:47.920
customers, comes out of this, let's say,
Oracle table.

00:08:47.920 --> 00:08:51.720
For every row in some Oracle table,
let's make a customer object.

00:08:51.740 --> 00:08:57.710
For every row in some other table,
let's make another kind of object.

00:08:57.780 --> 00:08:57.780
Excuse me.

00:09:01.720 --> 00:09:03.770
on.

00:09:03.770 --> 00:09:11.550
Oh, a whisper, a whisper.

00:09:11.550 --> 00:09:11.550
Enterprise Objects manages this whole...

00:09:14.660 --> 00:09:17.750
has a collection of middle-tier business
objects and takes care of issuing the

00:09:17.900 --> 00:09:21.600
SQL necessary to fetch things out of
databases and constructing the objects.

00:09:21.700 --> 00:09:24.050
It also notices when these
objects change and it pushes the

00:09:24.050 --> 00:09:25.480
changes back into the database.

00:09:25.600 --> 00:09:29.380
Nothing I like less than SQL programming,
and EOF is a great way to keep

00:09:29.380 --> 00:09:31.660
me from having to actually
know anything about SQL,

00:09:31.800 --> 00:09:33.590
so don't ask me any questions about SQL.

00:09:33.600 --> 00:09:37.550
EOF also has a very sophisticated
architecture for managing

00:09:37.550 --> 00:09:39.600
relationships of objects.

00:09:39.600 --> 00:09:42.820
Customers purchased a bunch of products,
so a customer object has

00:09:42.890 --> 00:09:43.600
a list of product objects.

00:09:43.680 --> 00:09:45.600
In the database world,
it would be a one-to-many join.

00:09:45.600 --> 00:09:47.550
Students take classes.

00:09:47.620 --> 00:09:49.590
A student has a list of
classes that they're in.

00:09:49.600 --> 00:09:52.600
A class has a list of
students that are taking it.

00:09:52.600 --> 00:09:56.540
Many-to-many join with some sort of
ugly middle-intermediate table in SQL.

00:09:56.700 --> 00:09:59.120
In the WebObjects environment
with Enterprise Objects,

00:09:59.120 --> 00:10:00.600
this is very, very seamless.

00:10:00.600 --> 00:10:02.450
You just think in terms of objects
and their properties and their

00:10:02.450 --> 00:10:03.600
relationships to other objects.

00:10:03.600 --> 00:10:09.600
EOF, the Enterprise Objects framework,
is the real gem of WebObjects.

00:10:09.640 --> 00:10:12.600
I want to say I was not in the
meeting when they picked the name EOF.

00:10:12.600 --> 00:10:16.600
I mean, that kind of meant something
in computing already,

00:10:16.600 --> 00:10:20.600
but this really is a
dynamite product here.

00:10:20.600 --> 00:10:22.470
How's that joke working in Japanese?

00:10:23.230 --> 00:10:26.350
Probably not very well.

00:10:28.550 --> 00:10:30.060
This really is the best
part of WebObjects,

00:10:30.120 --> 00:10:31.130
is Enterprise Objects.

00:10:31.210 --> 00:10:32.720
I would encourage you
to go to session 403,

00:10:32.720 --> 00:10:34.560
please, this object modeling session.

00:10:34.560 --> 00:10:37.400
I'm going to show you a rough
look at object modeling here,

00:10:37.580 --> 00:10:44.590
but there really is a huge amount
of meat behind this that provides

00:10:44.590 --> 00:10:44.590
you with all the rocket fuel
necessary to turbocharge WebObjects.

00:10:45.060 --> 00:10:46.670
Coming soon, EJB.

00:10:46.820 --> 00:10:49.860
Don't ask me, Rory, who was just here,
he's the guy to ask.

00:10:49.860 --> 00:10:51.460
He loves talking about EJB.

00:10:51.580 --> 00:10:54.270
And all of these different objects
are bound together at runtime

00:10:54.330 --> 00:10:58.000
by a WebObjects application that
finds the front-end WO components,

00:10:58.230 --> 00:11:01.260
finds these tags,
figures out what messages it has to send,

00:11:01.410 --> 00:11:08.020
fetches objects, maybe from databases,
and mixes everything together and

00:11:08.120 --> 00:11:09.190
sends a stream of plain ordinary HTML,
most of the time, to the end user.

00:11:09.940 --> 00:11:11.620
along with some advanced
session management.

00:11:11.800 --> 00:11:15.210
We have a very sophisticated
session object in WebObjects.

00:11:15.430 --> 00:11:17.620
You might have only one copy
of your application running

00:11:17.620 --> 00:11:19.640
and 100 users using it.

00:11:19.870 --> 00:11:22.380
There are going to be 100 different
session objects created by the

00:11:22.380 --> 00:11:25.800
application maintaining data for
each of those individual users.

00:11:25.840 --> 00:11:28.930
And this is a full comp
sci kind of object.

00:11:29.020 --> 00:11:30.900
You can subclass and
implement your own behavior.

00:11:30.900 --> 00:11:35.240
You can use a variety of sophisticated
strategies for dealing with people

00:11:35.240 --> 00:11:37.960
that seem to have connected to your
application and then disappeared.

00:11:38.560 --> 00:11:41.060
You can arrange for objects,
session objects themselves

00:11:41.060 --> 00:11:41.880
to be kept in the database.

00:11:41.880 --> 00:11:44.580
You can add shopping carts
and security and so on.

00:11:44.730 --> 00:11:48.180
We give you a framework that provides
this individualization as needed.

00:11:49.890 --> 00:11:52.540
along with some runtime monitoring tools.

00:11:52.540 --> 00:11:53.560
Remember that big scary slide?

00:11:53.560 --> 00:11:56.870
You've got to get from the one copy of
the application to the 45 distributed

00:11:57.000 --> 00:11:58.790
copies on seven different machines.

00:11:58.900 --> 00:12:02.030
We have a tool called Monitor,
which itself is a WebObjects application.

00:12:02.050 --> 00:12:03.510
It lets you go clickety-clickety-click.

00:12:03.580 --> 00:12:04.680
I want four copies over there.

00:12:04.680 --> 00:12:05.460
I want three over here.

00:12:05.560 --> 00:12:06.360
I want two over here.

00:12:06.360 --> 00:12:07.400
It starts them all.

00:12:07.400 --> 00:12:08.540
It keeps them running.

00:12:08.540 --> 00:12:10.090
It sends you mail if they crash.

00:12:10.090 --> 00:12:12.400
It measures the load and
statistics and so on.

00:12:12.410 --> 00:12:14.800
Pretty good runtime environment.

00:12:14.800 --> 00:12:18.920
So here comes my big money slide.

00:12:18.920 --> 00:12:22.380
We have this thing called
the request-response loop,

00:12:22.420 --> 00:12:24.780
which is sort of the core of
everything that goes on in WebObjects.

00:12:24.840 --> 00:12:25.800
A user makes a request.

00:12:25.800 --> 00:12:27.200
They fill in a form.

00:12:27.200 --> 00:12:27.800
They click on a hyperlink.

00:12:27.800 --> 00:12:29.720
Data comes whipping in
through the web server.

00:12:29.870 --> 00:12:33.800
Something happens on the web application,
and a response goes back.

00:12:33.980 --> 00:12:36.490
Understanding that is sort of the
core of understanding the WebObjects

00:12:36.490 --> 00:12:39.640
architecture because it shows you where
the various different components play.

00:12:39.810 --> 00:12:42.590
I'm going to show you a
few pieces of this here.

00:12:46.330 --> 00:12:52.690
Let's suppose on today's vast
internet there are three users and

00:12:52.960 --> 00:12:54.800
You know that's the net
because it's a cloud,

00:12:54.800 --> 00:12:56.240
some sort of ANSI standard.

00:12:56.360 --> 00:12:59.710
And you've got a web server with
this WebObjects adapter on it.

00:13:00.340 --> 00:13:07.190
You've got a variety,
I'm showing three here,

00:13:07.190 --> 00:13:07.190
a variety of application
servers with Enterprise Objects

00:13:07.190 --> 00:13:07.190
adapters to talk to databases.

00:13:07.820 --> 00:13:10.850
The web server, as we've heard,
can be pretty much any operating system,

00:13:10.850 --> 00:13:11.640
any web server.

00:13:11.640 --> 00:13:13.930
The WebObjects adapter,
we have special adapters for

00:13:13.930 --> 00:13:16.750
the more popular servers,
and we have a CGI adapter that really

00:13:16.820 --> 00:13:20.040
you probably shouldn't use if you're
using one of these other servers,

00:13:20.100 --> 00:13:24.700
but we have a variety of tuned
adapters for certain web servers.

00:13:24.700 --> 00:13:27.180
The application server can
be a variety of platforms.

00:13:27.180 --> 00:13:29.050
Again,
Mac OS X and Linux are sort of future

00:13:29.060 --> 00:13:30.700
directions in the next product.

00:13:30.700 --> 00:13:34.050
And we have a collection of
Enterprise Objects adapters that can

00:13:34.160 --> 00:13:37.610
talk to a whole bunch of back-end
databases in a variety of ways.

00:13:37.760 --> 00:13:41.430
So let's suppose we had a
really incredibly complex

00:13:41.430 --> 00:13:44.700
WebObjects application here,
where a user's going to log in,

00:13:44.700 --> 00:13:47.700
he's going to type "shayman",
it's going to do some processing,

00:13:47.700 --> 00:13:48.700
it's going to look up
"shayman" in the database,

00:13:48.700 --> 00:13:50.670
it's going to make a
user object or something,

00:13:50.710 --> 00:13:53.710
and say "Welcome back, Steve."

00:13:54.100 --> 00:13:56.420
I thought long and hard about
this particular example.

00:13:56.420 --> 00:13:57.640
So there's two things
that have to happen.

00:13:57.640 --> 00:13:59.050
We have to process that request.

00:13:59.190 --> 00:14:00.940
We have to figure out what
to do with this string,

00:14:00.940 --> 00:14:01.090
S.

00:14:01.230 --> 00:14:03.100
Hayman,
that's coming in from the web browser.

00:14:03.100 --> 00:14:04.990
And we have to generate a response.

00:14:05.050 --> 00:14:08.100
We have to make up some HTML and
send it back to the web browser.

00:14:08.100 --> 00:14:09.660
Well, it's actually three.

00:14:09.830 --> 00:14:13.100
It's actually three customizable
phases of this loop.

00:14:13.100 --> 00:14:15.010
There's a second action-invoking phase.

00:14:15.090 --> 00:14:18.100
After WebObjects has
collected all this data,

00:14:18.100 --> 00:14:20.100
then it thinks for a moment,
what action should I send?

00:14:20.100 --> 00:14:22.100
What message should I send
to what other object?

00:14:22.110 --> 00:14:26.100
And then that object is responsible
for generating the response.

00:14:26.100 --> 00:14:29.740
So to see how all this works in action,
let's suppose a user has submitted

00:14:29.740 --> 00:14:31.040
a request to a web server.

00:14:31.100 --> 00:14:32.540
All the web--and the string S.

00:14:32.540 --> 00:14:33.740
Hayman is coming along.

00:14:33.740 --> 00:14:36.410
They filled in the form along
with some HTTP gunk about what

00:14:36.410 --> 00:14:38.100
field that was and everything.

00:14:38.360 --> 00:14:41.920
That request comes to the web server,
and the web server adapter hunts

00:14:41.920 --> 00:14:45.900
around for a copy of the WebObjects
application just to hand this off to.

00:14:46.100 --> 00:14:48.780
The very first time,
it's going to pick one at random.

00:14:48.970 --> 00:14:50.100
There might be 30.

00:14:50.100 --> 00:14:50.100
It picks one at random.

00:14:50.100 --> 00:14:53.200
Subsequent times,
it's usually going to redirect

00:14:53.200 --> 00:14:57.100
you to the same copy of the
application that you started with,

00:14:57.100 --> 00:14:58.070
although that's optional.

00:14:58.100 --> 00:15:01.120
So all that the server really
has to do is relay this string

00:15:01.280 --> 00:15:03.100
to the WebObjects application.

00:15:03.100 --> 00:15:06.100
So it finds one of those
throbbing instances there.

00:15:07.160 --> 00:15:09.070
passes this string,
the user type is Hayman,

00:15:09.070 --> 00:15:11.830
that kind of information is
coming along to this instance.

00:15:11.890 --> 00:15:16.580
And that particular instance is
going to find the component that

00:15:16.580 --> 00:15:18.100
created this particular page.

00:15:18.100 --> 00:15:20.760
And a component is a combination,
as I said,

00:15:20.760 --> 00:15:24.070
of some HTML and a second file that
defines the meaning of these tags.

00:15:24.100 --> 00:15:27.170
And all you WebObjects wise guys
in the audience are already saying,

00:15:27.170 --> 00:15:30.100
"He didn't close the WO tag, and besides,
the tag is not WO,

00:15:30.100 --> 00:15:34.080
it's WebObjects." I don't care,
I didn't have room in that thing.

00:15:34.320 --> 00:15:37.450
But previously,
this login component was used before

00:15:37.680 --> 00:15:41.640
to generate that page that says,
"What's your name?" And now that

00:15:41.640 --> 00:15:44.600
the response has come back in,
the WebObjects session is able to

00:15:44.600 --> 00:15:48.210
automatically find the component that
caused that page to be generated,

00:15:48.210 --> 00:15:51.100
and to study these bindings down there,
value equals username.

00:15:51.100 --> 00:15:53.700
That means whatever they
typed in the box called input,

00:15:53.790 --> 00:15:56.100
we want to assign to an
object called username.

00:15:56.100 --> 00:15:58.880
So it takes a look at the various
foreign values that came in,

00:15:58.950 --> 00:16:01.030
and it figures out what action to invoke.

00:16:01.100 --> 00:16:04.180
Now there's probably some
Java code associated with

00:16:04.250 --> 00:16:06.010
this particular component.

00:16:06.240 --> 00:16:09.370
You can see in this little
example of a login.java,

00:16:09.370 --> 00:16:13.010
this object has a string called username,
and it has a little

00:16:13.170 --> 00:16:15.090
procedure called handleLogin.

00:16:15.100 --> 00:16:17.340
And those bindings in that
other file in red there,

00:16:17.340 --> 00:16:20.100
that's called the WAD file,
the WebObjects declaration,

00:16:20.100 --> 00:16:21.970
that says where stuff goes.

00:16:22.100 --> 00:16:24.570
The data that you got as the
username should be stuffed

00:16:24.570 --> 00:16:27.320
into this username variable,
and then the method

00:16:27.720 --> 00:16:30.100
handleLogin should be invoked.

00:16:30.100 --> 00:16:33.090
And the handleLogin method here is just
messing around with a session saying,

00:16:33.090 --> 00:16:34.100
"Here's the customer name.

00:16:34.100 --> 00:16:36.520
You should go and fetch the
customer object." And then

00:16:36.520 --> 00:16:38.100
it returns the welcome page.

00:16:38.100 --> 00:16:41.100
So that's phase one and phase two
of this request-response loop.

00:16:41.100 --> 00:16:43.100
We've extracted some values.

00:16:43.100 --> 00:16:45.270
We've figured out what action to invoke.

00:16:45.500 --> 00:16:47.700
The action is invoked, which,
as you saw in that bit of code,

00:16:47.700 --> 00:16:49.370
says go find the
component called Welcome.

00:16:49.400 --> 00:16:51.660
Another one of these things is loaded.

00:16:51.760 --> 00:16:54.120
And in this case,
there's a tag in there that says

00:16:54.120 --> 00:16:55.940
WebObject name equals username.

00:16:56.050 --> 00:16:58.030
And there's a second file that says,
you know what,

00:16:58.030 --> 00:17:00.660
username is a string and it gets
its value by sending the message

00:17:00.850 --> 00:17:03.400
customer to the session object,
and it sends the message

00:17:03.400 --> 00:17:05.630
first name to that one,
so we're going to need to fetch

00:17:05.910 --> 00:17:07.930
some sort of customer object
so we can send this message,

00:17:07.940 --> 00:17:09.940
and I'm getting to that.

00:17:11.120 --> 00:17:13.930
Any needed objects might be
fetched from the database here,

00:17:13.930 --> 00:17:15.550
and some SQL is going to
be generated automatically.

00:17:15.550 --> 00:17:19.810
So one of these object model files,
which I'll show you in a moment,

00:17:19.950 --> 00:17:21.890
is automatically loaded,
and that's just a textual

00:17:21.890 --> 00:17:23.450
description that says,
you know what,

00:17:23.560 --> 00:17:26.680
we're talking to Oracle in this case,
customer objects are coming

00:17:26.680 --> 00:17:29.730
out of the cust table,
so you should probably find the row where

00:17:29.730 --> 00:17:33.320
some property equals shayman and return
that and make it into a customer object.

00:17:33.460 --> 00:17:36.660
So our backend automatically
figures out this SQL,

00:17:36.660 --> 00:17:40.930
sends it to the database,
some text comes back from the database,

00:17:40.930 --> 00:17:44.460
and is automatically stuffed
into a blank customer object

00:17:44.590 --> 00:17:46.360
that EOF automatically fetched.

00:17:46.360 --> 00:17:49.120
So the application is really
kind of disconnected from the

00:17:49.200 --> 00:17:52.360
details of how these customer
objects are actually created.

00:17:52.360 --> 00:17:54.360
All that SQL flow back and
forth happens automatically.

00:17:54.360 --> 00:17:58.720
And this response component says, oh,
now that we've got that object,

00:17:58.720 --> 00:18:01.300
I need to send the
message first name to it,

00:18:01.300 --> 00:18:03.300
some string, Steve Hayman.

00:18:03.390 --> 00:18:05.800
And then Steve comes back,
and we take that web objects

00:18:05.920 --> 00:18:08.830
tag and we substitute it with
whatever the object responded with,

00:18:08.900 --> 00:18:12.000
Steve,
and then some fascinating HTML goes

00:18:12.000 --> 00:18:14.350
flowing back to the end user.

00:18:15.850 --> 00:18:18.790
I assure you, you can write more
sophisticated applications

00:18:18.920 --> 00:18:22.040
than this one with WebObjects,
but there's a basic loop like this at

00:18:22.040 --> 00:18:23.800
the heart of every single one of them.

00:18:23.910 --> 00:18:27.240
And every one of those arrows
that you saw is an opportunity

00:18:27.240 --> 00:18:30.510
for you as a developer to
customize what's going on here.

00:18:30.800 --> 00:18:33.220
You can leave the session
object alone if you want,

00:18:33.270 --> 00:18:35.970
but if you want, you can also have it
intercept these things,

00:18:35.970 --> 00:18:38.800
intercept the loading of
components and do clever things.

00:18:49.610 --> 00:18:49.840
In fact, you can do quite a bit without
writing any code at all,

00:18:49.840 --> 00:18:49.840
although I don't want to give the
impression that that's how this works,

00:18:49.840 --> 00:18:49.840
because most of the objects as
they come out of the box are

00:18:49.840 --> 00:18:49.840
prepared to wire themselves
into this request-response loop.

00:18:50.190 --> 00:18:52.230
So the request response loop,
one of the reasons I came

00:18:52.240 --> 00:18:53.760
up with this slide,
and one of the interesting

00:18:53.760 --> 00:18:57.150
things about this job,
is that you never really

00:18:57.150 --> 00:19:01.290
know what Steve Jobs is going
to announce in the keynote.

00:19:01.290 --> 00:19:01.290
Is he here?

00:19:03.250 --> 00:19:05.570
I used to go through a huge
song and dance about this

00:19:05.630 --> 00:19:09.280
request-response loop because this
was how we licensed WebObjects,

00:19:09.380 --> 00:19:11.200
and this is how we decided
what to charge you.

00:19:11.350 --> 00:19:13.580
The more of these requests
and responses per second,

00:19:13.710 --> 00:19:15.200
the more money you had to give us.

00:19:15.200 --> 00:19:18.470
We had a whole tier of architecture,
right up to $50,000 where you could have

00:19:18.470 --> 00:19:20.170
an unlimited quantity of these things.

00:19:20.200 --> 00:19:24.390
Now it's $699,
but that doesn't excuse you from having

00:19:24.390 --> 00:19:27.320
to understand how this actually works.

00:19:33.300 --> 00:19:36.220
Please note that there was no
mixing of SQL and HTML in here.

00:19:36.320 --> 00:19:37.860
In fact,
they're kept as far apart as possible.

00:19:37.900 --> 00:19:41.200
I think the worst scenario
you could imagine is to have

00:19:41.280 --> 00:19:43.300
SQL and HTML in the same file.

00:19:43.520 --> 00:19:44.280
Something's wrong there.

00:19:44.290 --> 00:19:46.870
You've got your user interface
and your persistence and your

00:19:46.910 --> 00:19:48.300
business logic all mixed up.

00:19:48.330 --> 00:19:50.300
In our case,
we keep them pretty separate.

00:19:50.300 --> 00:19:52.300
We have one kind of object
that sends out HTML.

00:19:52.300 --> 00:19:55.300
We have another kind of object
that connects to a database.

00:19:55.300 --> 00:19:58.290
We have a middle object that
implements the business rules.

00:19:58.380 --> 00:20:00.300
Is this student allowed to graduate?

00:20:00.300 --> 00:20:02.140
That might be a business
rule on a student object.

00:20:02.300 --> 00:20:03.730
What's his first name?

00:20:03.850 --> 00:20:05.290
That might be a string.

00:20:05.400 --> 00:20:07.840
But something like,
"Is he allowed to graduate?" might

00:20:07.840 --> 00:20:10.800
be a complicated piece of Java that
determines whether he's paid his

00:20:10.800 --> 00:20:13.780
parking fines and returned his library
books and sends a bunch of other

00:20:13.780 --> 00:20:15.240
messages and then says yes or no.

00:20:15.350 --> 00:20:17.650
You write logic at a
middle tier like that,

00:20:17.650 --> 00:20:20.490
and you let our framework
map the data into and out of

00:20:20.490 --> 00:20:22.300
Oracle or whatever you like.

00:20:22.430 --> 00:20:25.250
You let our other frameworks and our
other components build the UI on the fly.

00:20:25.370 --> 00:20:29.620
And you don't personally have
to write SQL or HTML at all,

00:20:29.690 --> 00:20:31.300
unless you want to.

00:20:31.420 --> 00:20:33.840
Some people want to.

00:20:34.200 --> 00:20:40.690
So we have three tools here that
are used in WebObjects development.

00:20:40.800 --> 00:20:42.350
Project Builder,
as I'm going to refer to it,

00:20:42.360 --> 00:20:47.100
has sort of been retro-renamed
to now be Project Builder WO.

00:20:47.310 --> 00:20:49.080
For those of you who are
experienced WebObjects developers,

00:20:49.100 --> 00:20:51.160
this is the new name of the
project builder you're used to,

00:20:51.510 --> 00:20:54.760
Project Builder WO,
just to keep it straight from the brand

00:20:54.760 --> 00:20:58.100
new project builder that engineering
is working on for a future release.

00:20:58.100 --> 00:21:00.640
But we have two other tools,
WebObjects Builder that builds

00:21:00.640 --> 00:21:03.160
the front-end components,
and EO Modeler that sets up this

00:21:03.160 --> 00:21:05.030
mapping to these middle-tier objects.

00:21:05.140 --> 00:21:07.100
And I want to talk to you a
little bit about each of these.

00:21:07.100 --> 00:21:11.100
The old version of Project Builder,
frankly, not that exciting anymore.

00:21:11.100 --> 00:21:13.900
WebObjects developers in the
room would agree with me that

00:21:13.960 --> 00:21:17.210
it's great that Project Builder
is undergoing a major overhaul,

00:21:17.220 --> 00:21:19.100
and better debugging is coming.

00:21:19.100 --> 00:21:22.570
I had to do the WebObjects
debugging seminar at WWDC last year,

00:21:22.570 --> 00:21:25.060
and I'm glad now,
having done that seminar,

00:21:25.060 --> 00:21:27.600
that our story is improving a little bit.

00:21:27.890 --> 00:21:29.460
By the way,
do we have Mark Ritchie in here?

00:21:29.640 --> 00:21:31.950
Mark won the World WebObjects
Debugging Championship last

00:21:31.950 --> 00:21:34.040
year at WWDC in my session.

00:21:34.100 --> 00:21:36.330
I'm sorry, Mark,
you have no opportunity to

00:21:36.330 --> 00:21:37.790
defend your title today.

00:21:38.150 --> 00:21:42.320
Anyway, let's talk about these tools.

00:21:42.320 --> 00:21:42.320
Let's talk about these tools.

00:21:43.330 --> 00:21:44.150
Oh, this way, okay.

00:21:44.240 --> 00:21:46.620
No, come on, yeah, alright.

00:21:46.700 --> 00:21:47.300
Thank you.

00:21:47.300 --> 00:21:49.630
This, you know, this,
which is the top of this?

00:21:49.700 --> 00:21:51.330
Can you tell by looking
at this which one is,

00:21:51.390 --> 00:21:52.290
which way is the top?

00:21:52.360 --> 00:21:54.370
No, me neither, alright.

00:21:56.500 --> 00:21:59.790
Please go to James Dempsey's session on
designing reusable web components to hear

00:21:59.870 --> 00:22:02.400
a lot more about how that is designed.

00:22:02.570 --> 00:22:05.580
But the goal with building one
of these front-end components is

00:22:05.580 --> 00:22:09.840
to come up with some HTML with
these special tags in it that say,

00:22:09.840 --> 00:22:12.390
"Here's where something
interesting is going to happen."

00:22:12.710 --> 00:22:14.660
And that might be a
directory called main,

00:22:14.660 --> 00:22:18.600
main.wo, that's a WebObjects component,
and it's got an HTML file in it.

00:22:18.630 --> 00:22:22.590
It's also got a WAD file,
a WebObjects declaration,

00:22:22.650 --> 00:22:25.080
that defines the meanings
of each of these tags.

00:22:25.130 --> 00:22:28.800
The tag called string1 is actually
a string object that gets its

00:22:29.160 --> 00:22:32.400
value by sending the message
cost to the current product.

00:22:32.600 --> 00:22:34.250
And then there's some
other properties on there,

00:22:34.310 --> 00:22:35.420
what number format should we use.

00:22:35.530 --> 00:22:39.600
The object called link1 is a hyperlink,
and it's going to cause the message place

00:22:39.730 --> 00:22:41.600
order to be sent back to this object.

00:22:41.600 --> 00:22:45.480
And the third part of one of
these components is typically

00:22:45.540 --> 00:22:47.990
some executable Java code here.

00:22:48.270 --> 00:22:51.360
you need to create some of these things
to build a WebObjects application.

00:22:51.400 --> 00:22:53.620
In fact,
you'll probably create lots of them.

00:22:53.620 --> 00:22:56.090
You usually have one for
each page and it's a whole

00:22:56.090 --> 00:22:57.420
fractal kind of relationship.

00:22:57.550 --> 00:22:59.490
You can have components that
contain other components,

00:22:59.570 --> 00:23:02.730
you could have a header bar component
and the menu thing down the side

00:23:02.730 --> 00:23:05.610
and you could have a footer and
you could have components that

00:23:05.890 --> 00:23:09.100
cause a loop to happen inside of
which other components are firing.

00:23:09.100 --> 00:23:13.800
You build a lot of these things to
come up with a complex application.

00:23:13.800 --> 00:23:14.600
And how do you make these?

00:23:14.600 --> 00:23:16.420
Well, you could use stickies if you want,
you know.

00:23:16.510 --> 00:23:18.400
You can use Emacs, VI,
whatever your favorite.

00:23:18.400 --> 00:23:21.030
How many people think VI is a
much better editor than Emacs?

00:23:21.290 --> 00:23:22.280
Any other VI people?

00:23:22.430 --> 00:23:23.380
Good, good.

00:23:23.380 --> 00:23:24.770
Emacs?

00:23:26.010 --> 00:23:29.090
Stickies?

00:23:31.200 --> 00:23:33.440
But the point is that all these
things are just text files.

00:23:33.440 --> 00:23:34.710
We have some nice tools,
but you don't have to use

00:23:34.710 --> 00:23:35.400
them if you don't like them.

00:23:35.400 --> 00:23:36.770
You can use whatever tool you want.

00:23:36.880 --> 00:23:40.200
Or you could use some kind
of a WYSIWYG HTML editor,

00:23:40.200 --> 00:23:44.140
and there happen to be a couple
out there that are smart about

00:23:44.140 --> 00:23:46.190
this extra WebObjects tag.

00:23:46.200 --> 00:23:49.190
Or you could use our
own WebObjects Builder.

00:23:49.210 --> 00:23:55.130
And WebObjects Builder presents
you with something like this.

00:23:55.130 --> 00:23:55.130
I should,
I've been waving at that screen too long.

00:23:55.130 --> 00:23:55.130
Come over here.

00:23:56.320 --> 00:23:59.700
In this bottom window,
you're looking at some component, okay?

00:23:59.700 --> 00:24:01.340
And in the middle,
that section that says HTML,

00:24:01.340 --> 00:24:04.360
that's a rough view of what
your HTML is going to look like.

00:24:04.450 --> 00:24:06.540
There's an image object,
that's the square.

00:24:06.540 --> 00:24:09.130
There's a string, that's the thing in
between the curly things.

00:24:09.240 --> 00:24:11.860
There's a hyperlink down here,
and you can dress this up with

00:24:11.860 --> 00:24:13.640
whatever HTML formatting you want.

00:24:13.680 --> 00:24:16.670
WebObjects Builder is
a not-bad HTML editor.

00:24:16.840 --> 00:24:21.540
It does bold, it'll make the text bigger,
it can drag in colors and

00:24:21.540 --> 00:24:24.290
pictures and make your thing
look really ugly really rapidly.

00:24:24.790 --> 00:24:29.940
So that represents main.wo/main.html,
let's say.

00:24:29.940 --> 00:24:33.680
In the bottom half is kind of a visual
representation of this WAD file.

00:24:33.790 --> 00:24:36.980
My current main object
apparently has an object called

00:24:36.980 --> 00:24:38.690
"product" associated with it.

00:24:38.700 --> 00:24:41.160
There's a line,
and below that are methods.

00:24:41.160 --> 00:24:44.420
It has a message called "place
order" that you could send to it.

00:24:44.640 --> 00:24:47.780
And I might conceivably want to
arrange that when you click here,

00:24:47.780 --> 00:24:49.160
where it says "click
here" and by the way,

00:24:49.160 --> 00:24:51.680
that's the terrible UI to have it
actually say "click here" in a hyperlink.

00:24:51.770 --> 00:24:55.610
That is so 20th century.

00:24:55.930 --> 00:24:57.960
You need to make a
relationship between that,

00:24:58.090 --> 00:25:01.600
you need to indicate that you want that
message called when this link is clicked.

00:25:01.780 --> 00:25:02.800
How far can you go with this?

00:25:02.800 --> 00:25:07.600
So you draw, you draw a little line like
that in WebObjects Builder.

00:25:07.760 --> 00:25:10.670
You draw a line from one to
the other that says I want that

00:25:10.830 --> 00:25:14.170
place order message to be sent
when this hyperlink is clicked.

00:25:14.300 --> 00:25:17.510
And new in WebObjects Builder 4.5,
it pops up a little list of all

00:25:17.620 --> 00:25:20.360
the possible properties of a
hyperlink object right there.

00:25:20.520 --> 00:25:23.300
You pick the one you want
called Action in this case.

00:25:23.380 --> 00:25:26.830
This is the action I want
the hyperlink to trigger.

00:25:27.380 --> 00:25:27.860
and then you're done.

00:25:27.860 --> 00:25:29.310
In the top window that's an inspector.

00:25:29.380 --> 00:25:32.040
That shows you all the properties
of the currently selected thing.

00:25:32.150 --> 00:25:35.210
And I'm going to hopefully run WebObjects
Builder live in a moment here to

00:25:35.210 --> 00:25:36.510
show you how this all actually works.

00:25:36.610 --> 00:25:38.400
But this is the sort
of methodology you use.

00:25:38.400 --> 00:25:40.320
You can work with a WYSIWYG view
like that or if you like you

00:25:40.320 --> 00:25:41.790
can also work in a raw mode.

00:25:41.790 --> 00:25:43.720
You can type the HTML up yourself.

00:25:43.820 --> 00:25:45.630
You can type the WOD yourself.

00:25:45.680 --> 00:25:48.010
You'll probably forget
to put in semi-colons.

00:25:48.010 --> 00:25:50.020
You'll probably forget to
close some of the tags.

00:25:50.020 --> 00:25:52.650
It's probably not such a hot
idea to work in the raw mode.

00:25:52.650 --> 00:25:56.090
But you could also, if you want,
farm out the HTML to a graphic

00:25:56.090 --> 00:25:58.340
artist in your department.

00:25:58.340 --> 00:26:00.500
They wouldn't need to know
anything about WebObjects Builder.

00:26:00.500 --> 00:26:01.660
So long as you begged
and pleaded with them,

00:26:01.660 --> 00:26:03.920
I'm begging you,
don't touch those WebObjects tags.

00:26:03.920 --> 00:26:05.380
Please leave them alone.

00:26:05.380 --> 00:26:06.970
That's kind of important.

00:26:06.970 --> 00:26:06.970
But

00:26:07.480 --> 00:26:10.900
At least you are not exposing
all of your business logic.

00:26:10.940 --> 00:26:12.200
There's no SQL in there.

00:26:12.200 --> 00:26:15.360
There's no custom code that says how we
compute whether a student can graduate.

00:26:15.420 --> 00:26:17.400
It's just interface.

00:26:17.680 --> 00:26:20.000
Just interface definitions.

00:26:20.450 --> 00:26:22.700
Also, once you've written a
bunch of these objects,

00:26:22.850 --> 00:26:26.820
WebObjects Builder has palettes where
you can put common things you might want

00:26:26.820 --> 00:26:28.270
to use in several different scenarios.

00:26:28.430 --> 00:26:31.400
You can drag them off of here
and drop them off of there.

00:26:31.400 --> 00:26:32.800
Four or five of these
come with WebObjects.

00:26:32.900 --> 00:26:36.400
We would love it if you would all
put this one on your application.

00:26:36.400 --> 00:26:38.390
A little image there, ready to go,
powered by WebObjects.

00:26:38.390 --> 00:26:40.400
Drag that, drop it on your application.

00:26:40.400 --> 00:26:42.400
I think that's actually a
hyperlink that takes you to

00:26:42.400 --> 00:26:45.400
apple.com/webobjects or something.

00:26:45.410 --> 00:26:48.150
There's a bunch of other useful
pre-written objects in here

00:26:48.150 --> 00:26:49.760
that are ready and raring to go.

00:26:49.760 --> 00:26:52.400
And then this last one is a palette
that I personally have been working on.

00:26:52.400 --> 00:26:55.400
I keep re-implementing the same darn
things on a lot of different projects,

00:26:55.400 --> 00:26:58.170
but I can now put them on a palette
like this and drag them off of

00:26:58.220 --> 00:27:01.210
there and drop them into different
components as I create them.

00:27:01.400 --> 00:27:04.980
Or I could even mail that palette to
you if you wanted to have a localizer

00:27:04.980 --> 00:27:08.200
bar or a cheesy bar graphing thing
or a thing of a guy running like

00:27:08.200 --> 00:27:10.390
this with a PDF document in his hand.

00:27:10.410 --> 00:27:13.520
Those are just graphic representations
of some interesting bit of

00:27:13.590 --> 00:27:14.400
functionality that I can drag and drop.

00:27:14.400 --> 00:27:19.330
I want to show you that
a little bit later.

00:27:19.400 --> 00:27:23.180
We've got a good session coming on
designing reusable components that will

00:27:23.180 --> 00:27:26.870
talk more about how all this actually
works and how to architect a component

00:27:26.970 --> 00:27:30.390
so that it really can be used effectively
by people other than yourself.

00:27:30.780 --> 00:27:33.380
Personally, I write a lot of
non-reusable components too.

00:27:33.380 --> 00:27:36.320
I'm not that proud of that,
but I put my good ones on these palettes

00:27:36.320 --> 00:27:38.220
so I can use them in different scenarios.

00:27:38.740 --> 00:27:41.520
So that's the front end,
WebObjects Builder.

00:27:41.590 --> 00:27:46.130
The back end, we have another tool,
EOModeler, Enterprise Objects Modeler,

00:27:46.130 --> 00:27:49.600
that lets you indicate
what database you want.

00:27:49.620 --> 00:27:51.600
I want Oracle, I want Sybase, I want DB2.

00:27:51.600 --> 00:27:54.200
It lets you indicate what
tables you want out of there,

00:27:54.310 --> 00:27:55.600
and what you want to
do with those tables.

00:27:55.600 --> 00:28:00.030
I would like my Cust table in Oracle to
correspond to customer objects.

00:28:01.270 --> 00:28:06.150
So with this EOModeler tool,
you design relationships between

00:28:06.150 --> 00:28:08.610
some kind of database schema and

00:28:08.720 --> 00:28:10.180
Some collection of objects
that are going to form the

00:28:10.350 --> 00:28:11.400
middle tier of your application.

00:28:11.400 --> 00:28:13.220
And what did I do with my water?

00:28:13.290 --> 00:28:15.310
Here it is.

00:28:19.610 --> 00:28:22.800
I'm looking for the picture on here
of the kids and the Toy Story logo,

00:28:22.800 --> 00:28:25.290
but I guess it didn't
make it to this one.

00:28:27.560 --> 00:28:33.500
That was a camera pointing at a bottle,
wasn't it?

00:28:33.510 --> 00:28:33.520
Anyway.

00:28:33.520 --> 00:28:36.220
So EO Modeler is one of the
prime tools that you really,

00:28:36.220 --> 00:28:38.490
somebody in your organization
needs to understand this

00:28:38.540 --> 00:28:40.820
enterprise objects modeling stuff.

00:28:40.820 --> 00:28:42.460
Doesn't need to be
every single programmer.

00:28:42.460 --> 00:28:45.060
Some people might be better at the
UI parts with WebObjects Builder.

00:28:45.060 --> 00:28:48.600
But this is pretty important because this
establishes the connections between the

00:28:48.600 --> 00:28:53.340
kind of objects you want to make and how
they're going to be stored in a database.

00:28:53.340 --> 00:28:56.130
So for instance,
I've got an Oracle database running

00:28:56.130 --> 00:28:58.780
on my trusty old laptop here,
if it hasn't crashed,

00:28:58.820 --> 00:29:00.480
which it did several times today.

00:29:00.480 --> 00:29:06.080
Windows 2000, not ready for . And in that
Oracle database is some car information.

00:29:06.190 --> 00:29:09.560
I've got a manufacturer table,
I've got a model of car table,

00:29:09.640 --> 00:29:12.060
I've got packages and features and so on.

00:29:12.060 --> 00:29:14.760
But it has kind of a crummy schema.

00:29:14.760 --> 00:29:16.030
The table names aren't very good.

00:29:16.030 --> 00:29:17.880
They're very compact and cryptic.

00:29:17.880 --> 00:29:19.140
There's more data in there
that I actually need.

00:29:19.140 --> 00:29:20.480
There's tables I don't even care about.

00:29:20.600 --> 00:29:21.800
There's tables with spelling mistakes.

00:29:21.800 --> 00:29:23.910
But that doesn't matter
because with the EOModeler,

00:29:23.910 --> 00:29:26.810
I can say I would like nice,
beautiful customer objects with

00:29:26.820 --> 00:29:30.200
easy to use APIs to come out of
that particular Oracle database.

00:29:30.200 --> 00:29:32.460
So you do that with EOModeler
in a very graphical way.

00:29:32.460 --> 00:29:35.780
You can indicate, for instance, in this

00:29:35.830 --> 00:29:37.110
I'm sorry for this,
this little oval should

00:29:37.200 --> 00:29:37.960
be down a little bit.

00:29:37.960 --> 00:29:42.830
This is indicating vehicle objects are
going to come out of the MDL table.

00:29:43.330 --> 00:29:47.210
and the PRMin column of that table,
the minimum price of the car,

00:29:47.210 --> 00:29:51.860
is going to be available to these vehicle
objects as a property called BasePrice.

00:29:51.930 --> 00:29:56.290
So once I've fetched a vehicle object,
I can send a message like BasePrice,

00:29:56.290 --> 00:29:58.800
and the appropriate thing will
come out of the database for me.

00:29:58.810 --> 00:30:02.460
I can send a message like LoadedPrice,
or VehicleName.

00:30:02.520 --> 00:30:04.800
And I can also use this
to define relationships.

00:30:04.800 --> 00:30:08.020
I've got vehicle objects
and I've got maker objects.

00:30:08.160 --> 00:30:11.040
So there's a Mustang object and
a Ford object that are going

00:30:11.040 --> 00:30:12.390
to come out of the database.

00:30:12.610 --> 00:30:14.220
And down at the bottom
half of the window there,

00:30:14.300 --> 00:30:15.990
you have relationships
between these objects.

00:30:16.280 --> 00:30:20.110
Vehicles need to know who their maker is,
and in SQL that's a join.

00:30:20.290 --> 00:30:23.840
Similarly, makers need to know what their
list of corresponding vehicles is.

00:30:23.970 --> 00:30:25.700
It's a one-to-many join.

00:30:25.770 --> 00:30:29.580
And all that stuff is defined
graphically in one of these files,

00:30:29.690 --> 00:30:31.200
and this is nothing
more than a text file,

00:30:31.200 --> 00:30:35.400
a big fancy text file,
that your application loads later.

00:30:35.430 --> 00:30:39.740
And at runtime, by loading this file,
it learns how to do all this stuff,

00:30:39.740 --> 00:30:41.700
how to fetch cars,
how to fetch manufacturers.

00:30:41.820 --> 00:30:45.300
If the Sybase guy comes along
and gives me a terrific deal,

00:30:45.430 --> 00:30:48.010
throw out Oracle, bring in Sybase,
I could just tweak a couple of

00:30:48.070 --> 00:30:50.000
things in this model that say,
"You know what,

00:30:50.000 --> 00:30:53.550
now we're talking to Sybase,
making the same kind of object as before.

00:30:53.810 --> 00:30:55.120
My other applications
wouldn't need to care.

00:30:55.120 --> 00:30:57.960
They're not concerned with SQL,
they're just concerned with the kind of

00:30:58.070 --> 00:31:02.020
objects that this model defines." So this
gives you a level of database and schema

00:31:02.020 --> 00:31:04.450
independence that's very valuable here.

00:31:05.140 --> 00:31:10.250
It also lets you define complex
relationships between different objects.

00:31:10.250 --> 00:31:12.950
I've got a vehicle object in
the upper left-hand corner,

00:31:13.000 --> 00:31:14.680
I've got a maker object
kind of in the top middle,

00:31:14.680 --> 00:31:15.980
and there's an arrow going between them.

00:31:16.000 --> 00:31:18.200
And we have this scheme
called key-value coding,

00:31:18.330 --> 00:31:21.000
which is another wonderful
thing you ought to learn about,

00:31:21.000 --> 00:31:23.880
where you can just send a sequence of
messages as strings with dots in them.

00:31:24.000 --> 00:31:27.160
So if I've got a vehicle,
I can send vehicle.maker.makername

00:31:27.160 --> 00:31:30.000
that will automatically
traverse this relationship,

00:31:30.190 --> 00:31:31.860
find the maker name,
the string "Ford", and

00:31:32.030 --> 00:31:33.000
bring it back to me.

00:31:33.170 --> 00:31:36.070
And you hook up paths like
that in WebObjects Builder,

00:31:36.070 --> 00:31:39.870
because WebObjects Builder is aware
of all the definitions found in

00:31:39.870 --> 00:31:41.980
one of these object model files.

00:31:44.890 --> 00:31:48.190
Pretty interesting stuff.

00:31:48.200 --> 00:31:49.570
Project Builder,
the old Project Builder Woe

00:31:49.570 --> 00:31:52.500
is probably not worth spending
any time talking about here,

00:31:52.580 --> 00:31:55.720
although if you install WebObjects 4.5,
you will get this tool.

00:31:55.800 --> 00:31:58.960
I think you'll be very interested
in the new Project Builder,

00:31:58.960 --> 00:31:59.800
which is coming.

00:31:59.800 --> 00:32:01.730
I personally cannot wait for that.

00:32:01.840 --> 00:32:04.850
But Project Builder, as it stands now,
they both have the same role,

00:32:04.900 --> 00:32:06.190
the new one and the old one.

00:32:06.260 --> 00:32:11.520
Let's organize all of your .wo components
and your EO Model D files and your

00:32:11.520 --> 00:32:15.240
.java class code and anything else,
images and sounds that you

00:32:15.340 --> 00:32:16.800
want in the application.

00:32:16.800 --> 00:32:20.840
Let's organize all that stuff and run
the compiler and let you decide what

00:32:20.840 --> 00:32:23.070
things should be localized and so on.

00:32:23.230 --> 00:32:26.110
So you do spend quite a bit of
time in this tool typing in,

00:32:26.260 --> 00:32:29.100
hopefully not too much time,
debugging code.

00:32:29.100 --> 00:32:32.100
Something that's definitely worth
learning a little bit about,

00:32:32.100 --> 00:32:33.030
although I'm not going to dwell on that.

00:32:33.100 --> 00:32:35.240
So I really got my fingers
crossed here that this

00:32:35.350 --> 00:32:37.100
development demo is going to work.

00:32:37.100 --> 00:32:41.120
Could I have five on that
one and four on this one,

00:32:41.120 --> 00:32:42.080
please?

00:32:42.800 --> 00:32:48.000
[Transcript missing]

00:32:54.850 --> 00:32:59.320
This machine is that screen.

00:32:59.390 --> 00:33:01.300
This machine is this screen over here.

00:33:01.300 --> 00:33:02.290
Actually, you know what?

00:33:02.290 --> 00:33:03.240
Can I change my mind?

00:33:03.370 --> 00:33:05.290
Can I have four on both screens?

00:33:05.290 --> 00:33:05.290
How good are you guys?

00:33:08.100 --> 00:33:09.300
Hey, that's better.

00:33:09.360 --> 00:33:11.540
Okay,
here's some stuff that I started before

00:33:11.540 --> 00:33:14.240
that I'm going to come back to later.

00:33:14.240 --> 00:33:14.240
I want to show you.

00:33:15.290 --> 00:33:18.800
The basics of building first
an EO model and then an

00:33:18.800 --> 00:33:21.510
application with Project Builder.

00:33:21.840 --> 00:33:23.780
Then when I'm ready, not now,
but I'm going to want

00:33:23.910 --> 00:33:24.950
five on that screen later.

00:33:25.170 --> 00:33:26.530
I'm calling an audible here.

00:33:26.540 --> 00:33:28.200
This is not what we discussed earlier.

00:33:28.200 --> 00:33:29.190
I'm changing my mind.

00:33:29.320 --> 00:33:33.500
Very dynamic, dynamic, late binding.

00:33:33.500 --> 00:33:33.500
That's what WebObjects is all about.

00:33:36.460 --> 00:33:37.400
So we've got a bunch of tools here.

00:33:37.400 --> 00:33:40.050
I've got EOModeler going here,
and I want to build a new object

00:33:40.060 --> 00:33:44.300
model of a database running on my
big honkin' Oracle server over here.

00:33:44.410 --> 00:33:48.060
So let's start EOModeler and
arrange to build a new model.

00:33:48.130 --> 00:33:49.640
Can everyone see this all right?

00:33:49.720 --> 00:33:54.250
On Mac OS X's server,
we have a vast collection of adapters.

00:33:55.400 --> 00:34:00.790
is the founder of WebObjects,
a new web application that

00:34:00.860 --> 00:34:02.970
will be available for your use.

00:34:02.970 --> 00:34:02.970
It's a great third-party opportunity.

00:34:02.970 --> 00:34:02.970
This is a browser.

00:34:02.970 --> 00:34:02.970
This could scroll to
indicate more adapters.

00:34:05.700 --> 00:34:07.990
And frankly, on some of the other
platforms like Windows NT,

00:34:08.080 --> 00:34:09.810
you do have a little
wider choice of adapters,

00:34:09.820 --> 00:34:12.730
just because Mac OS X Server is
a little bit newer.

00:34:13.750 --> 00:34:16.490
But here I'm going to indicate which of
these many adapters do I want to use.

00:34:16.560 --> 00:34:17.840
Do I want to use the LDAP adapter?

00:34:17.840 --> 00:34:20.700
Well, it will ask me for some
LDAP connection information.

00:34:20.710 --> 00:34:23.610
Do I want to use OpenBase Lite,
which is a pretty good free

00:34:23.810 --> 00:34:25.700
database that comes with WebObjects?

00:34:25.700 --> 00:34:26.240
Well, no.

00:34:26.240 --> 00:34:28.350
I actually want to use Oracle.

00:34:28.890 --> 00:34:31.470
And I want to connect
to my Oracle database,

00:34:31.580 --> 00:34:35.570
run on this laptop over here,
and learn what its schema is,

00:34:35.620 --> 00:34:40.800
and define a way that I can make
manufacturer objects and vehicle objects.

00:34:40.800 --> 00:34:45.820
So the first part is to remember
the Oracle connection information.

00:34:46.090 --> 00:34:48.460
Anyone care to guess
what my password is here?

00:34:48.560 --> 00:34:49.500
Tiger, that's right.

00:34:49.560 --> 00:34:50.720
That's how you break
into an Oracle database.

00:34:50.750 --> 00:34:53.360
You try Scott and Tiger,
because nobody ever changes that.

00:34:53.410 --> 00:34:59.430
And EOModeler is going to learn a bunch
of things about that Oracle database.

00:34:59.640 --> 00:35:01.230
It's going to, for instance,
show me all the tables

00:35:01.230 --> 00:35:02.040
that are available.

00:35:02.090 --> 00:35:04.950
It's reached over and contacted
that database and learned about all

00:35:04.950 --> 00:35:06.100
these tables that are available.

00:35:06.100 --> 00:35:08.760
I got a few with spelling
mistakes like Invitory,

00:35:08.780 --> 00:35:11.730
and I got Bonnet, Dept,
and Amp for the standard Oracle demo of

00:35:11.730 --> 00:35:13.500
the world of departments and employees.

00:35:13.560 --> 00:35:19.330
But the particular tables I'm
interested in are Manu and MDL.

00:35:19.440 --> 00:35:21.540
I got manufacturers and models of cars.

00:35:21.610 --> 00:35:24.680
And I like category as well,
but I wouldn't like these ones.

00:35:24.970 --> 00:35:30.270
I want those three tables
to participate in my model.

00:35:30.730 --> 00:35:43.390
EO Modeler will now go out and
contact that database and ask you a

00:35:43.390 --> 00:35:43.390
few referential integrity questions
that I always just hit next here.

00:35:43.390 --> 00:35:43.390
I suppose I really ought to
think about that sometime,

00:35:43.390 --> 00:35:43.390
get open the documentation,
find out what that was about.

00:35:43.760 --> 00:35:45.370
It's probably important.

00:35:45.560 --> 00:35:47.250
I might go to a couple
more sessions this week.

00:35:47.310 --> 00:35:49.030
It would be good for me.

00:35:50.090 --> 00:35:53.270
And you guys know, you guys know,
you hit next when you see that panel too,

00:35:53.350 --> 00:35:55.470
and then you come back later, oh yeah,
referential integrity,

00:35:55.470 --> 00:35:57.620
because I really should nullify
when this thing is deleted.

00:35:57.620 --> 00:36:00.170
But it will also ask me if
I want any stored procedures,

00:36:00.250 --> 00:36:02.270
and the correct answer
is almost always no,

00:36:02.270 --> 00:36:02.760
none.

00:36:02.760 --> 00:36:07.570
And here we'll build a
simple object model for me.

00:36:07.790 --> 00:36:10.420
And this model says that, all right,
you seem to have these

00:36:10.420 --> 00:36:13.320
tables in the database,
cat, gree, manu, and middle.

00:36:13.320 --> 00:36:17.590
Therefore, I'm prepared to make cat,
gree, manu, and middle objects for you,

00:36:17.660 --> 00:36:19.610
assuming that's what you want.

00:36:19.680 --> 00:36:21.080
Well, it's close to what I want.

00:36:21.080 --> 00:36:22.190
I would like them to have better names,
though.

00:36:22.280 --> 00:36:22.740
Category.

00:36:22.740 --> 00:36:24.900
What's a category of car,
like a pickup truck or a minivan?

00:36:24.900 --> 00:36:26.750
Maker of car.

00:36:26.780 --> 00:36:28.230
Instead of MDL,
why don't we call it vehicle?

00:36:28.300 --> 00:36:30.440
And let's fix these over here.

00:36:30.440 --> 00:36:32.090
These are the actual classes
that are going to be used.

00:36:34.780 --> 00:36:39.340
A technical overview of
WebObjects for new developers,

00:36:39.400 --> 00:36:44.590
this session highlights the key
aspects of its architecture,

00:36:44.590 --> 00:36:47.560
its numerous technological advantages,
and its relevance for web

00:36:47.560 --> 00:36:47.560
application development.

00:36:47.560 --> 00:36:47.560
Topics include what's new in version 4.5,
a roadmap of features,

00:36:47.560 --> 00:36:47.560
building a high-level application,
and an introduction to EOF.

00:36:49.050 --> 00:36:50.000
Ha!

00:36:50.000 --> 00:36:52.820
These columns in the database,
there's a column called

00:36:52.820 --> 00:36:55.160
Add Tag in the database,
it's a Varchar2.

00:36:55.160 --> 00:36:57.210
There's a column called
PRMax in the database,

00:36:57.210 --> 00:36:58.000
it's a number.

00:36:58.000 --> 00:37:02.160
Therefore, this model says,
I will make your vehicle objects have

00:37:02.200 --> 00:37:05.890
a decimal number property called PRMax,
corresponding to the number

00:37:05.890 --> 00:37:07.240
property called PRMax.

00:37:07.360 --> 00:37:10.040
They'll have a string
property called MDLName.

00:37:10.040 --> 00:37:15.140
Let's call that something better,
let's call that vehicle name.

00:37:15.370 --> 00:37:20.760
Let's call this loaded price.

00:37:20.840 --> 00:37:20.990
This is the base price.

00:37:21.420 --> 00:37:23.760
You might want to fix up some
properties of these other objects.

00:37:23.900 --> 00:37:27.220
Take my maker object,
let's call that a maker name.

00:37:27.310 --> 00:37:29.290
Maybe I don't even care about
some of these other properties.

00:37:29.290 --> 00:37:31.260
I could delete them,
I could pick some subset

00:37:31.340 --> 00:37:34.300
of the database schema,
but I'm designing objects here.

00:37:34.300 --> 00:37:40.110
I'm designing a recipe for creating
objects out of a particular data source.

00:37:40.400 --> 00:37:43.240
In addition, there are,
down at the bottom, relationships that,

00:37:43.240 --> 00:37:45.020
in the case of Oracle,
the modeler is able to

00:37:45.020 --> 00:37:45.980
automatically discover.

00:37:46.110 --> 00:37:49.320
It can ask the database for some
information about primary and

00:37:49.460 --> 00:37:51.300
foreign key constraints or something.

00:37:51.300 --> 00:37:53.840
And then it decides that, "Oh,
I guess makers have a one-to-many

00:37:53.880 --> 00:37:57.560
relationship to vehicles." So,
I'm going to arrange... Oh,

00:37:57.560 --> 00:37:58.410
you know what?

00:37:58.490 --> 00:38:00.300
We've got a diagram view here.

00:38:00.430 --> 00:38:01.300
Ooh.

00:38:01.300 --> 00:38:04.300
I was very excited to see this diagram
view in the Project Builder demo today,

00:38:04.300 --> 00:38:06.300
so I don't have to come
over here to see it.

00:38:06.300 --> 00:38:08.170
I've got vehicle objects,
I've got maker objects,

00:38:08.170 --> 00:38:10.280
and I've got a one-to-many
relationship between them.

00:38:10.340 --> 00:38:12.300
Every maker has a list
of vehicle objects,

00:38:12.300 --> 00:38:15.030
and if I send the message
"mdl array," I can get a list

00:38:15.210 --> 00:38:17.300
of all the matching vehicles.

00:38:17.300 --> 00:38:19.760
And if necessary, SQL will be created,
things will be lazily

00:38:19.760 --> 00:38:22.200
fetched only on demand,
which is another great feature.

00:38:22.300 --> 00:38:23.820
But that's kind of an ugly name.

00:38:23.830 --> 00:38:26.570
Let's call that "vehicles."
Now I can send the message

00:38:26.570 --> 00:38:30.290
"vehicles" to my forward object and
get a list of all the forward cars.

00:38:30.300 --> 00:38:32.010
We'll fix up these relationships
that go the other way,

00:38:32.010 --> 00:38:32.300
too.

00:38:32.300 --> 00:38:35.920
Maker, category, and so... Oops.

00:38:36.350 --> 00:38:37.300
Category, and so on.

00:38:37.460 --> 00:38:40.890
And you're just defining a resource here,
a file that's going to be used

00:38:40.890 --> 00:38:46.300
later by perhaps many different
applications in your organization,

00:38:46.340 --> 00:38:48.250
so that not all your developers
need to know these icky details

00:38:48.250 --> 00:38:49.300
of how this actually works.

00:38:49.300 --> 00:38:52.300
And believe me,
there are a number of icky details.

00:38:52.560 --> 00:38:54.300
Maybe that wasn't the
best choice of words.

00:38:54.300 --> 00:38:57.000
There are inspectors on all these things,
so you can look at something

00:38:57.000 --> 00:38:59.300
like this and determine exactly
what SQL is going to be used,

00:38:59.300 --> 00:39:02.300
whether it's read-only,
what to do if it's null,

00:39:02.390 --> 00:39:03.300
what do you want to do
with these relationships.

00:39:03.300 --> 00:39:05.300
There's a lot of power in here.

00:39:05.430 --> 00:39:07.820
And there's even... There's also
the ability... This will tell me

00:39:07.820 --> 00:39:11.350
whether my database is actually
still running... To go and fetch all

00:39:11.490 --> 00:39:15.100
of them and show you the contents,
just so you can verify that what you

00:39:15.100 --> 00:39:17.300
think is happening really is happening.

00:39:17.300 --> 00:39:19.270
So there's all the vehicle
names in my database.

00:39:19.320 --> 00:39:21.300
I asked it to fetch all those properties.

00:39:21.300 --> 00:39:24.270
I could ask it to fetch
all of the vehicles for me,

00:39:24.320 --> 00:39:27.210
just to confirm that the data
I think is in this database

00:39:27.590 --> 00:39:29.300
actually is in this database.

00:39:29.440 --> 00:39:30.300
Okay?

00:39:30.300 --> 00:39:32.300
That is a complete and working EO model.

00:39:32.300 --> 00:39:34.300
I'm tempted to use the
one that I already wrote.

00:39:34.300 --> 00:39:36.300
Because I know it works.

00:39:36.460 --> 00:39:37.300
Rather than this one.

00:39:37.300 --> 00:39:38.290
Well, we'll save this one.

00:39:38.330 --> 00:39:39.300
We'll live dangerously.

00:39:40.810 --> 00:39:45.930
This will be the big
"Auto-by-Steve" EO model here.

00:39:45.930 --> 00:39:48.340
I want to use this in
a future application.

00:39:48.340 --> 00:39:49.820
I want to be able to
load this model and then,

00:39:49.820 --> 00:39:52.700
bam, create maker objects and
manufacturer objects and so on.

00:39:52.700 --> 00:39:55.700
So we may come back to EO Modeler later.

00:39:55.700 --> 00:39:58.700
We may spend a lot of time in EO Modeler
if some of these other things don't work.

00:39:58.700 --> 00:40:03.700
But let me make a new... I want to
make a new WebObjects application here.

00:40:03.700 --> 00:40:06.790
There's different kinds of
WebObjects applications you can

00:40:06.790 --> 00:40:08.700
make in Project Builder Woe here.

00:40:08.700 --> 00:40:10.700
I want to make a new one.

00:40:10.700 --> 00:40:11.700
And I was thinking about
this earlier today.

00:40:11.700 --> 00:40:13.700
I wanted my application,
my car browsing application,

00:40:13.700 --> 00:40:16.700
to be one that everybody
will want to use.

00:40:16.700 --> 00:40:20.120
So I'm going to call this
application "I Love You."

00:40:25.940 --> 00:40:28.930
I was originally going to
call it something about cars,

00:40:28.930 --> 00:40:30.580
and then I had this great idea.

00:40:30.580 --> 00:40:32.900
So we're building an
application called I Love You.

00:40:32.900 --> 00:40:37.750
And there are a variety of,
it says wizards here, but that's wrong,

00:40:37.750 --> 00:40:39.340
these are assistants.

00:40:39.340 --> 00:40:40.740
They're not wizards, they're assistants.

00:40:40.740 --> 00:40:42.930
We had a meeting last week,
they're not wizards anymore,

00:40:42.930 --> 00:40:43.900
they're assistants.

00:40:43.900 --> 00:40:48.640
There are a variety of different
assistants that you could use here.

00:40:48.700 --> 00:40:50.460
I've got 18 minutes,
do I need an assistant?

00:40:50.500 --> 00:40:51.700
No, I think I'll be fine.

00:40:51.700 --> 00:40:53.550
My favorite assistant
is the none assistant.

00:40:53.560 --> 00:40:56.530
I think that's the assistant that
most developers actually use.

00:40:56.700 --> 00:40:58.870
Thank you.

00:40:59.030 --> 00:41:05.380
Yeah, I wrote the none assistant,
thank you very much.

00:41:06.290 --> 00:41:13.380
So Project Builder has created a basic
WebObjects application for me here.

00:41:13.380 --> 00:41:17.200
And there's a couple of simple,
basically empty, do-nothing Java classes.

00:41:17.200 --> 00:41:19.220
There's one called main,
you can see that it's really

00:41:19.220 --> 00:41:20.200
not doing anything there.

00:41:20.200 --> 00:41:22.590
There's one called application
that's printing to,

00:41:22.590 --> 00:41:23.860
welcome to, I love you.

00:41:23.860 --> 00:41:26.890
There's really nothing else going
on in here other than a blank,

00:41:26.890 --> 00:41:30.480
an essentially blank,
a virtually blank main component called

00:41:30.480 --> 00:41:35.120
main.wo that if I double-click on it,
I can work on it in WebObjects Builder.

00:41:36.200 --> 00:41:40.700
So this is WebObjects Builder editing the
main page of my I love you application.

00:41:40.840 --> 00:41:41.190
Okay?

00:41:41.190 --> 00:41:43.260
I'm going to come back
to that in a second here.

00:41:43.260 --> 00:41:44.740
We have this idea of resources.

00:41:44.740 --> 00:41:48.120
These are additional things that you
want available to your application.

00:41:48.120 --> 00:41:51.430
And a great resource to add
here would probably be my,

00:41:51.560 --> 00:41:54.470
what did I call that object model?

00:41:54.640 --> 00:41:56.300
Anybody remember?

00:41:56.830 --> 00:41:57.520
Autobuy Steve, there it is.

00:41:57.630 --> 00:41:57.900
Thank you.

00:41:58.100 --> 00:41:58.350
Thank you.

00:41:58.370 --> 00:42:00.260
You guys are great assistants, too.

00:42:00.260 --> 00:42:04.520
So by adding that object
model to my application,

00:42:04.600 --> 00:42:08.020
I've now got the ability to work with
these vehicle objects right in here.

00:42:08.120 --> 00:42:12.600
So one thing you might want to say is
we're going to build a simple application

00:42:12.600 --> 00:42:16.590
where you can type in something
about the car that you want to buy.

00:42:16.600 --> 00:42:18.660
And it will find all the cars.

00:42:18.660 --> 00:42:20.400
Let's say you type in the
maximum you can spend.

00:42:20.400 --> 00:42:22.560
So remember we have a base
price property on cars.

00:42:22.560 --> 00:42:25.280
I want to find all the cars with the base
prices less than whatever I type here.

00:42:25.480 --> 00:42:27.040
And have it fetch some cars for me.

00:42:27.040 --> 00:42:29.620
There's a lot of great drag and
drop awareness between these

00:42:29.620 --> 00:42:31.200
different tools of who does what.

00:42:31.340 --> 00:42:33.420
So I can get
WebObjectsBuilder going here.

00:42:33.420 --> 00:42:34.780
And I can say, you know what?

00:42:34.890 --> 00:42:37.500
I want to be able to manipulate
vehicle objects from this

00:42:37.500 --> 00:42:39.260
EO model in WebObjectsBuilder.

00:42:39.260 --> 00:42:39.950
I drag it there.

00:42:39.950 --> 00:42:40.640
I drop it here.

00:42:40.640 --> 00:42:45.350
And it adds a special object that
knows how to go and fetch cars for me.

00:42:45.480 --> 00:42:48.760
A thing back here at the bottom
called a vehicle display group.

00:42:50.590 --> 00:42:53.200
So here in WebObjects Builder,
it's starting to get a

00:42:53.200 --> 00:42:54.690
little bit more interesting.

00:42:54.900 --> 00:42:57.070
I've got some various things
now here that I can connect to.

00:42:57.070 --> 00:42:59.590
I've got this vehicle display
group object that's got a whole

00:42:59.590 --> 00:43:02.520
bunch of funny properties that
I can message and leverage here.

00:43:02.560 --> 00:43:03.620
I don't have any UI yet.

00:43:03.620 --> 00:43:04.870
A little UI might be nice.

00:43:04.890 --> 00:43:07.660
Can I have a little
UI creating music please?

00:43:07.660 --> 00:43:09.620
Oh, we don't have any music.

00:43:09.620 --> 00:43:10.500
All right.

00:43:10.500 --> 00:43:11.340
That's fine.

00:43:11.340 --> 00:43:14.830
Welcome to AutoBySteve,
which I bet you is a domain name

00:43:14.830 --> 00:43:16.380
that's already taken on the web.

00:43:16.380 --> 00:43:17.630
So we'll make it bigger.

00:43:17.660 --> 00:43:21.300
We'll show you the vast array of
complex formatting that's available

00:43:21.470 --> 00:43:23.720
in WebObjects Builder here.

00:43:23.760 --> 00:43:26.920
And the incredible powerful
tags you can put in,

00:43:26.920 --> 00:43:29.600
like the horizontal rule tag.

00:43:29.600 --> 00:43:31.520
You can, if you like,
you can make any one.

00:43:31.570 --> 00:43:33.520
This is just static HTML,
but you can make these things

00:43:33.530 --> 00:43:34.740
dynamic if you want as well.

00:43:34.740 --> 00:43:37.720
If you want a horizontal rule
tag whose width corresponds

00:43:37.720 --> 00:43:40.180
to the price of the car,
you can do that.

00:43:40.180 --> 00:43:42.580
You can click on this thing and say,
"Make this a dynamic object," and

00:43:42.580 --> 00:43:45.390
hook up its width property to the
price of the currently selected car.

00:43:45.460 --> 00:43:46.350
I'm not going to do that.

00:43:46.390 --> 00:43:51.180
What I would like to do though is to
have a simple form here where you're

00:43:51.190 --> 00:43:53.620
going to type in some information.

00:43:53.620 --> 00:43:56.540
How much money have you got?

00:43:56.800 --> 00:43:59.020
and we'll have a text field where
you can type in your net worth

00:43:59.020 --> 00:44:02.750
and then it will find all the
cars with a submit button that are

00:44:02.940 --> 00:44:03.700
worth up to that amount of money.

00:44:03.720 --> 00:44:08.740
Now this is just basic UI stuff here.

00:44:08.740 --> 00:44:10.900
These things are what we
call dynamic elements.

00:44:10.900 --> 00:44:13.700
They're objects that correspond
sort of to HTML input fields.

00:44:13.700 --> 00:44:17.620
And if you click on this button here,
you can actually look at the raw HTML and

00:44:17.720 --> 00:44:19.700
see what's actually gone on here.

00:44:19.700 --> 00:44:22.400
It's just,
it's added a WebObject called form

00:44:22.740 --> 00:44:24.700
that goes from there up to here.

00:44:24.700 --> 00:44:27.700
By the way, for those of you who
haven't used WebObjects 4.5,

00:44:27.700 --> 00:44:29.390
you can now triple click on the
beginning tag and it selects all

00:44:29.450 --> 00:44:30.700
the way down to the closing tag.

00:44:30.780 --> 00:44:33.700
Oh man, is this great.

00:44:33.700 --> 00:44:36.790
You should upgrade to WebObjects
4.5 just for that feature,

00:44:36.800 --> 00:44:37.620
let me tell you.

00:44:37.720 --> 00:44:41.440
But that's basic HTML with some tags
in it that are going to be studied

00:44:41.440 --> 00:44:43.700
during this request response loop.

00:44:43.700 --> 00:44:46.780
And down here are some bindings
that I haven't filled in yet of

00:44:46.780 --> 00:44:49.690
what do I want to have happen when
you click on that submit button.

00:44:50.030 --> 00:44:51.860
So for instance,

00:44:52.120 --> 00:44:54.270
This thing called the
Vehicle Display Group,

00:44:54.270 --> 00:44:55.540
you can send all these messages to it.

00:44:55.540 --> 00:44:58.110
I can send this message
"Qualify Data Source" to it.

00:44:58.140 --> 00:44:59.130
And you draw a line like that.

00:44:59.200 --> 00:45:02.980
I want that button to send
this message to this object on

00:45:02.980 --> 00:45:05.110
the server when it's clicked.

00:45:05.680 --> 00:45:10.840
I want this text field here to be used
to restrict the cars that I'm fetching.

00:45:10.840 --> 00:45:16.600
I want the base price of the car to be
no more than whatever you typed in there.

00:45:16.600 --> 00:45:20.600
So I've hooked up two objects now
to objects back at this middle tier,

00:45:20.600 --> 00:45:22.930
and WebObjects is going to do some
screwy things with the URLs when

00:45:22.930 --> 00:45:25.450
it sends this HTML to you,
so that when you click on that

00:45:25.550 --> 00:45:27.930
button and fill in that field,
it can unwind all that stuff and

00:45:27.930 --> 00:45:31.600
decide what message should be sent
to what object at the middle tier,

00:45:31.600 --> 00:45:35.350
even if there's a thousand people
simultaneously using this application.

00:45:36.230 --> 00:45:46.270
Now that would be a complete application.

00:45:46.270 --> 00:45:46.270
Who says we should run this now?

00:45:46.270 --> 00:45:46.270
Or is there something we should add?

00:45:46.270 --> 00:45:46.270
Look at the cars maybe that it fetches?

00:45:46.270 --> 00:45:46.270
Okay, alright, sure, sure.

00:45:46.940 --> 00:45:47.790
Let's put in a table.

00:45:47.790 --> 00:45:49.900
For each car,
I want to display the name and the price.

00:45:50.090 --> 00:45:51.910
Something really simple.

00:45:52.920 --> 00:46:09.660
A little table wizard here.

00:46:09.660 --> 00:46:09.660
I want the second row wrapped
in what we call a repetition.

00:46:09.660 --> 00:46:09.660
And if you can see,
the second row of that table there has

00:46:09.660 --> 00:46:09.660
actually got a blue line around it.

00:46:09.660 --> 00:46:09.660
That means this thing is
inside a woe repetition object,

00:46:09.660 --> 00:46:09.660
which just means anything inside here
is going to repeat over and over again,

00:46:09.660 --> 00:46:09.660
once for everything on a list.

00:46:10.050 --> 00:46:11.850
Well,
we'd like to have the name of the car,

00:46:11.970 --> 00:46:13.740
and this is just basic
HTML and its price.

00:46:13.990 --> 00:46:16.440
And then down here, for every car,
we want to use a string

00:46:16.610 --> 00:46:19.800
object to display its name,
and another string object

00:46:19.890 --> 00:46:20.990
to display its price.

00:46:21.000 --> 00:46:24.630
And now we need to arrange to loop
over this list of cars that my

00:46:24.700 --> 00:46:28.060
display group has just fetched,
and come up with a many,

00:46:28.300 --> 00:46:29.570
many rowed table.

00:46:30.870 --> 00:46:32.170
So what I'm going to do,
when you work in a loop

00:46:32.170 --> 00:46:33.620
in computer science,
you've often got some

00:46:33.620 --> 00:46:36.580
kind of an "I" variable,
you know, the for loop or the while loop

00:46:36.660 --> 00:46:37.680
that goes around the loop.

00:46:37.730 --> 00:46:41.100
I'm going to create a little
variable here called "vehicle."

00:46:41.190 --> 00:46:43.590
I'm going to add to my class

00:46:44.080 --> 00:46:47.370
A vehicle object on this particular
page that's going to be used

00:46:47.450 --> 00:46:50.060
to iterate through some other
collection of vehicle objects.

00:46:50.160 --> 00:46:53.920
And the collection I'd like to iterate
through is the list of all the objects

00:46:53.980 --> 00:46:56.300
that the display group just fetched.

00:46:56.300 --> 00:46:58.040
So I'm going to draw a line
to that repetition and say,

00:46:58.040 --> 00:47:01.000
"Use this list." All the
displayed objects.

00:47:01.100 --> 00:47:04.680
"Use this item." Use this
variable to go through the list.

00:47:04.750 --> 00:47:09.580
And then this item is a vehicle,
so display its vehicle name here.

00:47:09.760 --> 00:47:12.320
Display its base price here.

00:47:13.360 --> 00:47:15.130
Okay, now that would be a
completed application.

00:47:15.230 --> 00:47:17.740
I'm tempted to actually try running this,
but you know,

00:47:17.770 --> 00:47:21.390
it's much more fun to actually talk
about these things without running them.

00:47:22.810 --> 00:47:29.690
Let me put in one more thing.

00:47:29.730 --> 00:47:32.180
We'll put in how many
vehicles you matched.

00:47:32.180 --> 00:47:35.570
We'll put in a string which
is the count of the number

00:47:35.610 --> 00:47:38.050
of vehicles that you matched.

00:47:38.700 --> 00:47:42.140
that many vehicles.

00:47:42.140 --> 00:47:42.290
Save.

00:47:42.360 --> 00:47:45.600
Now I'm going to go back to
Project Builder and I was originally

00:47:45.600 --> 00:47:49.550
going to try to futz around and display
it off of IE on this other machine

00:47:49.550 --> 00:47:52.050
rather than OmniWeb on Project Builder
but I think it would be simpler.

00:47:52.050 --> 00:47:55.440
Everybody will be able to see better if
we have the same stuff on both screens.

00:47:55.440 --> 00:47:58.810
I think it wouldn't be fair to people
to have all the good stuff over here and

00:47:58.810 --> 00:48:00.360
all the lame web browsing over there.

00:48:00.360 --> 00:48:01.380
Would that be fair?

00:48:01.380 --> 00:48:02.610
What do you think over here?

00:48:02.770 --> 00:48:03.160
Yeah?

00:48:03.160 --> 00:48:03.580
Alright.

00:48:03.680 --> 00:48:06.420
So in this case I'm going
to actually use OmniWeb,

00:48:06.420 --> 00:48:09.770
the browser that comes
with whatever this is here.

00:48:09.950 --> 00:48:12.340
Yeah, it's my favorite browser too.

00:48:12.340 --> 00:48:17.510
So I'm going to compile my
big I love you project here.

00:48:18.010 --> 00:48:22.140
and that just compiled these various
Java classes and this one you'll notice,

00:48:22.170 --> 00:48:25.070
the main.java,
it added a couple of objects to it.

00:48:25.160 --> 00:48:26.880
We've now got an object called
a vehicle display group,

00:48:26.910 --> 00:48:28.040
we've got another object called vehicle.

00:48:28.080 --> 00:48:30.650
Those were added by the
process of manipulating

00:48:30.740 --> 00:48:31.800
things in WebObjects Builder.

00:48:31.900 --> 00:48:36.710
So let's try actually running this here.

00:48:36.710 --> 00:48:36.710
Please, please, please.

00:48:37.200 --> 00:48:40.480
So you can launch an application
here in Project Builder,

00:48:40.480 --> 00:48:44.140
and it will ask your web
browser to rendezvous on

00:48:44.140 --> 00:48:45.670
the URL of this application.

00:48:45.760 --> 00:48:48.410
Let me see if I can get exactly the
right combination of overlapping

00:48:48.500 --> 00:48:50.360
windows on the screen here.

00:48:50.380 --> 00:48:54.310
U, but not U, and yes.

00:48:54.810 --> 00:48:58.000
So here is a debugging window where
all the SQL that's being generated is

00:48:58.000 --> 00:49:02.680
automatically going to appear here,
along with a vast array of helpful

00:49:02.780 --> 00:49:05.140
debugging messages at the start
telling you the state of all

00:49:05.140 --> 00:49:06.530
various things in the application.

00:49:06.700 --> 00:49:08.030
But here's my browser.

00:49:08.100 --> 00:49:09.700
How much money have you got?

00:49:09.700 --> 00:49:12.700
I've got $20,000.

00:49:12.700 --> 00:49:14.700
And there are no vehicles for $20,000.

00:49:14.700 --> 00:49:16.290
Well, I click on Submit there.

00:49:16.510 --> 00:49:18.680
Over here you can see
it connecting to Oracle.

00:49:18.690 --> 00:49:21.700
You can see the SQL here that
it automatically generated.

00:49:21.700 --> 00:49:23.700
Can you see that on the right-hand side?

00:49:23.740 --> 00:49:24.670
I didn't type any of that.

00:49:24.710 --> 00:49:27.630
That was implied by these objects and
their relationships to each other and

00:49:27.680 --> 00:49:30.700
the information in the model about
how they're represented in Oracle.

00:49:30.700 --> 00:49:33.560
And I can tell over here
that there were 95 rows.

00:49:33.810 --> 00:49:35.700
95 rows of SQL came back.

00:49:35.700 --> 00:49:39.630
95 blank vehicle objects
were automatically created.

00:49:39.770 --> 00:49:42.220
They were each stuffed with
these various properties from

00:49:42.280 --> 00:49:43.700
the columns of the database.

00:49:43.700 --> 00:49:45.480
Set your name to this and
your minimum price to this and

00:49:45.570 --> 00:49:46.700
your maximum price to this.

00:49:46.700 --> 00:49:49.190
And then that repetition
on the front-end side,

00:49:49.310 --> 00:49:52.700
the main component, was not aware of how
any of this happened,

00:49:52.700 --> 00:49:52.700
so it just looped over somewhere.

00:49:52.700 --> 00:49:55.360
It looped over some list
of cars that you gave it,

00:49:55.360 --> 00:49:56.580
some list of objects.

00:49:56.700 --> 00:49:58.700
And it displayed them all for me here.

00:49:58.700 --> 00:50:00.700
So we've got all these various
different 95 rows in the table.

00:50:00.700 --> 00:50:03.700
I have no idea who actually
makes any of these cars.

00:50:03.840 --> 00:50:08.690
So it might be useful to add that
to the displayed information here.

00:50:08.700 --> 00:50:11.700
In every row of my table,
I'll put that palette away for a moment.

00:50:11.700 --> 00:50:15.700
In every row of my table I'm displaying
the vehicle name in one table cell here.

00:50:15.820 --> 00:50:18.530
But why not put in another string?

00:50:18.740 --> 00:50:22.620
and a blank space and ask the
vehicle for its maker object.

00:50:22.710 --> 00:50:24.480
You're going through this object
browser down at the bottom.

00:50:24.480 --> 00:50:27.640
You're traversing the relationships
defined in your EO model.

00:50:27.640 --> 00:50:30.260
And I want the maker name
to appear on that string.

00:50:30.330 --> 00:50:31.880
Drag, drop.

00:50:31.880 --> 00:50:34.950
This will now, when I refetch here,
it will now do a whole bunch more

00:50:34.950 --> 00:50:38.900
fetching because it's going to go
and get all the manufacturer objects

00:50:38.900 --> 00:50:40.900
that it did not need until now.

00:50:40.920 --> 00:50:43.360
There's a whole lazy scheme
in here called faulting where

00:50:43.810 --> 00:50:46.650
even though an object has a
relationship to a manufacturer,

00:50:46.650 --> 00:50:48.900
we're not actually going to fetch
that manufacturer object until

00:50:48.980 --> 00:50:52.540
you indicate you actually need it,
until you ask for one of its properties.

00:50:52.540 --> 00:50:55.860
So I set up a, in WebObjects builder,
I set up another string that said

00:50:55.860 --> 00:50:59.460
ask the vehicle for its maker
and ask him for its maker name.

00:50:59.820 --> 00:51:06.700
Let's go out to my inspector here.

00:51:06.700 --> 00:51:06.700
There's an inspector paradigm
in WebObjects Builder.

00:51:06.730 --> 00:51:09.600
You can see that I'm
deep inside a table here.

00:51:09.600 --> 00:51:13.520
I'm inside a string, inside a table data,
which is inside a repetition,

00:51:13.640 --> 00:51:14.460
inside a table.

00:51:14.460 --> 00:51:17.400
There's this new path thing in 4.5
at the bottom that makes it much

00:51:17.400 --> 00:51:21.730
easier to select and to tell exactly
where you are and manipulate things.

00:51:21.820 --> 00:51:24.520
Selecting a string,
like suppose you selected a bold string.

00:51:24.520 --> 00:51:27.160
Did you mean to select the bold
tags at the beginning and the end,

00:51:27.260 --> 00:51:28.220
or just the string?

00:51:28.220 --> 00:51:31.030
There's some great new stuff in this
new 4.5 WebObjects Builder to help

00:51:31.060 --> 00:51:32.740
you deal with that complex stuff.

00:51:32.740 --> 00:51:36.810
I want to pick this table,
and in my inspector window up here,

00:51:36.810 --> 00:51:36.810
I'm going to pick a table that's

00:51:37.050 --> 00:51:39.380
I want to add on the
right-hand side another column.

00:51:39.420 --> 00:51:40.860
Let's call it picture.

00:51:40.860 --> 00:51:42.930
Where could he be going with this?

00:51:42.940 --> 00:51:47.760
And on this cell right here,
let's put in instead of a string,

00:51:47.760 --> 00:51:49.850
let's put in an image object.

00:51:49.960 --> 00:51:52.930
This is another basic
object in web objects.

00:51:52.980 --> 00:51:56.130
Just like the string knows how to
send a message and take the result and

00:51:56.130 --> 00:51:59.820
interpolate it right into the page,
this one knows how to send a message to

00:51:59.820 --> 00:52:01.840
someone to get some JPEG or GIF data.

00:52:02.000 --> 00:52:02.360
GIF?

00:52:02.610 --> 00:52:03.120
GIF?

00:52:03.120 --> 00:52:03.720
GIF?

00:52:03.760 --> 00:52:04.330
GIF?

00:52:04.700 --> 00:52:06.770
How do you say it down here?

00:52:06.800 --> 00:52:09.190
Actually, I asked some of my
Apple Canada colleagues

00:52:09.190 --> 00:52:11.140
how to pronounce it,
and they say Java.

00:52:11.140 --> 00:52:13.260
So that's the...

00:52:14.630 --> 00:52:16.850
Anyway, I'm going to say,
these cars happen to have a

00:52:16.850 --> 00:52:18.800
property called Image JPEG Data,
which if I'd been

00:52:18.800 --> 00:52:20.600
planning a little better,
I would have renamed that

00:52:20.600 --> 00:52:21.830
in EOModeler to be Picture.

00:52:21.840 --> 00:52:25.240
But let's drag that to this thing
and say that's where your picture

00:52:25.340 --> 00:52:26.840
data is going to come from.

00:52:26.870 --> 00:52:31.300
I happen to know that they're, whoops,
they're not pings, they're JPEG images.

00:52:32.120 --> 00:52:34.240
And now let's fetch not quite so
many cars just to keep it useful.

00:52:34.240 --> 00:52:37.240
Let's fetch all the cars for $11,000.

00:52:38.710 --> 00:52:40.960
Now we got pictures.

00:52:40.960 --> 00:52:43.590
Oh, thank you, thank you, yeah.

00:52:43.600 --> 00:52:45.610
Okay, I did not, thank.

00:52:46.400 --> 00:52:48.650
Thank you, but I did not actually take
the pictures of the cars.

00:52:48.690 --> 00:52:48.920
Thank you.

00:52:49.100 --> 00:52:49.980
All right.

00:52:49.980 --> 00:52:51.180
Is there anyone from Microsoft here?

00:52:51.180 --> 00:52:52.620
I stole this from one of your websites.

00:52:52.620 --> 00:52:54.610
Excuse me.

00:52:54.610 --> 00:52:54.610
I'm sorry.

00:52:56.170 --> 00:52:58.440
So there's a bunch of
cars and some trucks too,

00:52:58.440 --> 00:53:00.320
and this isn't maybe as useful
as it could be because we're

00:53:00.320 --> 00:53:01.740
getting everything mixed up here.

00:53:01.740 --> 00:53:04.100
We're getting cars and pickup trucks
and minivans all mixed together.

00:53:04.100 --> 00:53:07.990
We might want to do a more
complex qualification in some way.

00:53:08.450 --> 00:53:11.740
Perhaps instead of just letting
you choose the base price

00:53:11.920 --> 00:53:13.890
that you want to spend it,
we could hook up a range

00:53:13.890 --> 00:53:15.100
in there if you wanted.

00:53:15.100 --> 00:53:16.820
You could say price more
than this and less than this.

00:53:16.820 --> 00:53:18.390
You could do all that
very elaborate stuff.

00:53:18.460 --> 00:53:21.890
In fact, you can graphically define
some sophisticated fetches

00:53:22.020 --> 00:53:23.840
right inside EO Modeler itself.

00:53:23.910 --> 00:53:25.080
Alas, no time.

00:53:25.100 --> 00:53:26.100
I'm looking at this great counter here.

00:53:26.100 --> 00:53:28.100
I've got 6 minutes and 19 seconds.

00:53:28.100 --> 00:53:29.020
Okay, go, go, go.

00:53:29.140 --> 00:53:30.100
All right, all right.

00:53:30.100 --> 00:53:34.100
I want to have a pop-up list,
which is this one,

00:53:34.110 --> 00:53:36.600
that shows all the different
categories of cars.

00:53:36.600 --> 00:53:38.980
You might remember there was a
category object in the database

00:53:39.200 --> 00:53:42.100
that was just a list of things like
pickup truck and minivan and so on.

00:53:42.100 --> 00:53:45.380
I might like to display all of
those on a pop-up list here so I can

00:53:45.510 --> 00:53:47.680
restrict my fetch a little bit better.

00:53:47.990 --> 00:53:50.100
Well, to do that, I might go back to my
object model and say,

00:53:50.100 --> 00:53:51.560
let me bring in a category object.

00:53:51.780 --> 00:53:53.060
Drag, drop.

00:53:53.150 --> 00:53:53.510
Add that.

00:53:53.610 --> 00:53:57.900
This one, I want it to fetch all the
objects when this page is loaded.

00:53:57.900 --> 00:53:59.100
Fetch all the category objects.

00:53:59.100 --> 00:54:00.050
Don't wait for me.

00:54:00.190 --> 00:54:01.210
Fetch them all.

00:54:01.580 --> 00:54:04.480
And I'd like to go through all
the category objects and display

00:54:04.760 --> 00:54:06.490
them on that pop-up list here.

00:54:06.500 --> 00:54:09.960
So we have another paradigm of
lists and items that go through

00:54:10.080 --> 00:54:11.480
a list being applied to a pop-up.

00:54:11.480 --> 00:54:15.080
Same kind of design pattern
happens on pop-ups and browsers and

00:54:15.080 --> 00:54:17.490
repetitions all throughout WebObjects.

00:54:18.630 --> 00:54:20.280
I want to loop through it with this,
we've got this convenient

00:54:20.280 --> 00:54:24.790
thing called Selected Object.

00:54:25.330 --> 00:54:26.610
Yeah, okay, that's going to work.

00:54:26.790 --> 00:54:27.400
Oh, not there!

00:54:27.400 --> 00:54:27.910
Oh, wait!

00:54:27.910 --> 00:54:28.280
Undo!

00:54:28.340 --> 00:54:29.200
Thank--oh, phew!

00:54:29.240 --> 00:54:30.740
Another good feature
in WebObjects Builder.

00:54:30.810 --> 00:54:35.000
I want to work through that thing
and display all the category names.

00:54:35.020 --> 00:54:37.200
So now I've got a pop-up,
just with that little wiring there,

00:54:37.200 --> 00:54:39.910
that's going to fetch all the
objects from the database and

00:54:39.910 --> 00:54:41.600
display their names on a pop-up list.

00:54:41.730 --> 00:54:45.000
One of them is going to be selected.

00:54:45.100 --> 00:54:51.900
And you can arrange that the vehicle
display group matches exactly the

00:54:52.000 --> 00:54:54.380
category that you selected there.

00:54:55.090 --> 00:54:59.900
I want the selected category to be
used to qualify and restrict the

00:54:59.900 --> 00:55:02.080
kinds of cars that I'm going to get.

00:55:02.110 --> 00:55:05.400
These might seem kind of odd now,
but this sort of paradigm comes

00:55:05.520 --> 00:55:06.970
up quite a bit in WebObjects.

00:55:07.010 --> 00:55:10.000
Now, at this point,
I do need to stop and recompile,

00:55:10.060 --> 00:55:14.870
because it did add one whole line of
code to my application at this point,

00:55:14.890 --> 00:55:16.880
which if -- oh, there it is.

00:55:17.290 --> 00:55:20.280
Yeah, I know, it's all right,
don't worry about it.

00:55:20.280 --> 00:55:22.480
It did add one line here,
category display group,

00:55:22.480 --> 00:55:24.860
and there was a helpful, thank you,
actually, that was very helpful.

00:55:24.860 --> 00:55:27.390
There is,
someone did point out to me that

00:55:27.390 --> 00:55:30.810
I have a validation error on this page,
and you can have WebObjects Builder

00:55:31.120 --> 00:55:32.660
offer bits of information to you.

00:55:32.660 --> 00:55:35.490
Item may not be a constant when
display stringer value is bound.

00:55:35.760 --> 00:55:40.170
I don't think that's true,
so I'm going to ignore that.

00:55:40.900 --> 00:55:43.870
It doesn't expect me that
I'm cheating a little bit.

00:55:43.930 --> 00:55:45.560
Well, I'm not cheating,
but I'm using an object that you're

00:55:45.680 --> 00:55:47.800
not supposed to be writing to,
so don't you do that.

00:55:47.800 --> 00:55:51.070
Although, it's actually worked so far,
so I don't know what to... It's

00:55:51.080 --> 00:55:53.740
one less thing I have to type,
and that always helps me in a demo.

00:55:53.880 --> 00:55:56.030
The less I type, the better.

00:56:16.260 --> 00:56:16.260
All right, we're almost done here.

00:56:16.260 --> 00:56:16.260
And now, when we run this thing,
you can see that it actually fetched

00:56:16.260 --> 00:56:16.260
a bunch of categories for me already.

00:56:16.260 --> 00:56:16.260
It's gone through the category list.

00:56:16.260 --> 00:56:16.260
We go back over to OmniWeb here.

00:56:16.260 --> 00:56:16.260
Now we've got this handy pop-up of
all the different kinds of cars.

00:56:16.260 --> 00:56:16.260
Show me only the, I don't know,
the pickup trucks for 20 grand.

00:56:17.940 --> 00:56:19.100
Here they come, all the pickup trucks.

00:56:19.210 --> 00:56:20.000
Oh, no, I changed my mind.

00:56:20.000 --> 00:56:21.950
I wanted the minivan.

00:56:24.930 --> 00:56:28.440
So it's actually forming some more
complex queries here on the fly,

00:56:28.550 --> 00:56:31.900
and yet I still haven't actually
written any SQL or any HTML.

00:56:31.900 --> 00:56:35.040
Now, it wouldn't be a developer
conference if I didn't try to write

00:56:35.070 --> 00:56:36.900
a line or two of Java code in here.

00:56:36.900 --> 00:56:40.050
So I want to show you one last
powerful thing here in the

00:56:40.050 --> 00:56:43.640
Enterprise Objects Modeler,
and that's the idea of

00:56:43.640 --> 00:56:46.860
extending these objects,
these vehicle objects,

00:56:46.920 --> 00:56:49.900
so that it can implement additional
business rules on your own.

00:56:49.900 --> 00:56:53.840
Right now the vehicle object is happy to
fetch things for you and display them,

00:56:53.860 --> 00:56:56.750
and you can send it messages
asking for its properties.

00:56:56.920 --> 00:56:59.900
You could write an editing application,
none of this is read-only.

00:56:59.900 --> 00:57:01.990
You could write another application
where you change prices of cars,

00:57:01.990 --> 00:57:04.120
and you're sending a
message to an object saying,

00:57:04.170 --> 00:57:05.880
"Set your price to this,"
and it tells the database,

00:57:05.950 --> 00:57:07.840
and we could go through that
whole complex slide again.

00:57:07.900 --> 00:57:12.900
But I might like to trigger some
business logic in these objects as well.

00:57:12.900 --> 00:57:16.960
I might want to have EO Modeler
create a little vehicle.java object

00:57:16.960 --> 00:57:18.900
for me and add it to my project.

00:57:19.900 --> 00:57:19.900
So that's the idea.

00:57:19.900 --> 00:57:21.150
Thank you.

00:57:21.690 --> 00:57:22.790
So here's a vehicle.java.

00:57:22.810 --> 00:57:24.200
This is a basic data container.

00:57:24.200 --> 00:57:26.720
It's got messages that set
the price and get the price,

00:57:26.810 --> 00:57:28.600
and set the name and get the name,
and set this and get that.

00:57:28.600 --> 00:57:31.420
And they're all in terms of this
take stored value for key method,

00:57:31.420 --> 00:57:34.500
which means they're really consulting
a dictionary in the superclass,

00:57:34.580 --> 00:57:36.680
which is a generic record,
and that's maybe more

00:57:36.680 --> 00:57:39.600
information than anyone really
wants to hear at this point.

00:57:39.600 --> 00:57:43.600
But the interesting thing is that I can
add my own additional methods here.

00:57:43.600 --> 00:57:44.600
I recently bought a car.

00:57:44.600 --> 00:57:46.600
How many people recently purchased a car?

00:57:46.600 --> 00:57:48.570
Did you enjoy that experience?

00:57:48.690 --> 00:57:51.200
Is the internet not the greatest
gift to the car buying process

00:57:51.200 --> 00:57:52.600
you could possibly imagine?

00:57:52.600 --> 00:57:53.600
I mean, thank you, that's the best.

00:57:53.600 --> 00:57:57.320
But I could not get a straight
answer from the guy as to whether

00:57:57.320 --> 00:57:59.360
leasing or buying was a good idea.

00:57:59.630 --> 00:58:02.230
How many people lease their car?

00:58:02.460 --> 00:58:04.300
How many people have purchased their car?

00:58:04.300 --> 00:58:04.740
Good, I'm with you.

00:58:04.740 --> 00:58:05.900
I didn't get leasing at all.

00:58:05.900 --> 00:58:06.300
I don't understand.

00:58:06.300 --> 00:58:07.100
Way too hard.

00:58:07.180 --> 00:58:08.730
It was partly because
I couldn't ask the guy,

00:58:08.730 --> 00:58:11.510
"Well, what does it cost to lease?" Well,

00:58:12.800 --> 00:58:13.740
It depends.

00:58:13.810 --> 00:58:15.240
How long are you going to keep the car?

00:58:15.240 --> 00:58:16.640
What's your trade in?

00:58:16.730 --> 00:58:18.140
What's the future value of this car?

00:58:18.180 --> 00:58:19.410
How much money do we think you make?

00:58:19.510 --> 00:58:20.500
Does the manager like you?

00:58:20.500 --> 00:58:24.400
All of these complex rules go
into coming up with the number,

00:58:24.400 --> 00:58:26.260
which is the lease price of the car.

00:58:26.470 --> 00:58:28.740
And in this sort of
enterprise objects world,

00:58:28.830 --> 00:58:34.650
we can implement algorithms like that
as extensions to these objects that

00:58:34.650 --> 00:58:37.010
you might have here in EOModeler.

00:58:37.010 --> 00:58:40.050
So for instance,
I might want to add a little

00:58:40.050 --> 00:58:41.490
bit of Java code here.

00:58:41.700 --> 00:58:47.200
[Transcript missing]

00:58:48.140 --> 00:58:49.010
I'm better now, thank you.

00:58:49.100 --> 00:58:49.960
Don't translate that part.

00:58:50.080 --> 00:58:50.860
Don't translate that part.

00:58:50.860 --> 00:58:53.280
That was a mistake.

00:58:54.340 --> 00:58:56.040
I swear, we can fix this in the editing,
right?

00:58:56.060 --> 00:58:58.300
We can fix this in the editing.

00:58:58.380 --> 00:59:00.410
I want to write a method
here called Monthly Lease

00:59:00.410 --> 00:59:04.030
Cost that returns an integer,
and I'm going to extend this vehicle

00:59:04.030 --> 00:59:07.300
object with something that computes
the leasing price of the car.

00:59:07.320 --> 00:59:14.520
Well,
we're going to return the base price

00:59:14.520 --> 00:59:14.520
of the car as if it was an integer.

00:59:14.810 --> 00:59:21.540
Divided by 43.

00:59:21.540 --> 00:59:21.540
I bet it's more complicated than that,
but as far as I know, it isn't.

00:59:23.420 --> 00:59:25.560
So because I've actually
extended this Java class here,

00:59:25.560 --> 00:59:31.300
now I do have to stop and recompile.

00:59:33.590 --> 00:59:41.050
It's got relationship
to these other objects,

00:59:41.050 --> 00:59:41.050
I forgot to create them.

00:59:41.050 --> 00:59:41.050
We'll compile everybody now.

00:59:41.050 --> 00:59:41.050
Went pretty well up until that point.

00:59:41.470 --> 00:59:42.630
So we're compiling all these things.

00:59:42.640 --> 00:59:45.760
We've added custom business logic
to my car application right now.

00:59:45.760 --> 00:59:49.290
In fact,
if I go back to WebObjects Builder here,

00:59:49.460 --> 00:59:51.260
in this cell,
we might add a nice helpful string,

00:59:51.260 --> 00:59:56.880
"Lease me for only some amount
of money per month." Well,

00:59:56.880 --> 01:00:00.400
let's ask the vehicle for
its monthly lease cost.

01:00:00.400 --> 01:00:02.190
You see how that new method
I wrote has just shown up in

01:00:02.190 --> 01:00:03.400
the object browser down here?

01:00:03.400 --> 01:00:05.400
All these tools are aware of
what the other ones are doing.

01:00:05.400 --> 01:00:09.390
So we're going to connect that
lease cost to this string here.

01:00:09.390 --> 01:00:12.050
And because my mother might be watching,
we'll be neat and we'll put

01:00:12.050 --> 01:00:13.400
dollar signs and commas on it.

01:00:13.400 --> 01:00:16.400
We've got nice formatter objects
that can be applied to these strings.

01:00:16.400 --> 01:00:19.520
And let's try running this.

01:00:21.800 --> 01:00:25.850
Again, come back to OmniWeb.

01:00:25.850 --> 01:00:26.330
How much money have you got?

01:00:26.340 --> 01:00:27.500
Well, show me all the trucks.

01:00:27.500 --> 01:00:28.230
Make it snappy.

01:00:30.590 --> 01:00:31.460
Here come a bunch of vehicles.

01:00:31.460 --> 01:00:32.580
Lease this one for $279 a month.

01:00:32.670 --> 01:00:34.170
Lease the next one for $336 a month.

01:00:34.310 --> 01:00:38.090
So my custom rule is being triggered
every time it comes to one of

01:00:38.180 --> 01:00:40.730
these tags in the repetition,
and WebObjects is sorting out the

01:00:40.840 --> 01:00:43.920
context and figuring what object you were
talking about and locating the method and

01:00:43.920 --> 01:00:45.970
loading it and sending it to this string,
and this string is

01:00:46.020 --> 01:00:47.030
sending everything back.

01:00:47.200 --> 01:00:48.890
Okay, things have gone pretty well here.

01:00:48.890 --> 01:00:51.200
I've got time to do something
that probably won't work.

01:00:51.200 --> 01:00:53.490
I'm getting the big hook here,
but this is my last -- okay,

01:00:53.490 --> 01:00:54.110
I saw the sign.

01:00:54.220 --> 01:00:57.110
Okay, you can put this skull and
crossbones sign down now.

01:00:57.200 --> 01:00:59.100
Let me do one last thing.

01:00:59.100 --> 01:01:00.520
You know what I hate?

01:01:02.640 --> 01:01:06.150
Yeah, yeah,
everything about buying a car.

01:01:06.410 --> 01:01:07.480
I hate this kind of application.

01:01:07.550 --> 01:01:09.380
Show me all the cars for $9,000.

01:01:09.830 --> 01:01:11.220
One, vehicles.

01:01:11.490 --> 01:01:14.920
Oh, man, you know,
people build these complex applications,

01:01:14.930 --> 01:01:15.720
then they can't be bothered.

01:01:15.720 --> 01:01:17.830
They get the pluralizing logic right.

01:01:17.960 --> 01:01:21.180
Or they try to be helpful and
they put parentheses around the S,

01:01:21.320 --> 01:01:23.820
which shows I was kind
of thinking about this.

01:01:29.250 --> 01:01:31.100
Man, I hate that!

01:01:31.100 --> 01:01:33.640
Well,
I wanted to solve this once and for all,

01:01:33.640 --> 01:01:36.100
so I've got my own little
framework of objects here,

01:01:36.100 --> 01:01:39.310
which I'm going to add to
local library frameworks.

01:01:39.550 --> 01:01:41.500
I've got a little Web Doodads
toolkit here that I want

01:01:41.630 --> 01:01:43.100
to add to this application.

01:01:43.100 --> 01:01:45.540
And I'm going to go
into WebObjects Builder,

01:01:45.590 --> 01:01:47.080
and these, remember these palettes?

01:01:47.890 --> 01:01:50.800
There's the string that's saying
"three" and here's the word "vehicles"

01:01:50.810 --> 01:01:55.300
or "one vehicles." I got this
object here called a pluralizer.

01:01:55.300 --> 01:01:57.800
I spent a lot of time writing
this two-line component.

01:01:57.800 --> 01:02:00.430
I'm going to take that
word and delete it.

01:02:00.510 --> 01:02:04.390
I'm going to bring in my pluralizer here
and I'm going to hook it up to a number.

01:02:04.390 --> 01:02:05.800
It needs to know a number.

01:02:05.930 --> 01:02:07.300
How many vehicles are we displaying?

01:02:07.310 --> 01:02:08.800
Well,
this is the same number as we just saw.

01:02:08.800 --> 01:02:09.800
Count, right?

01:02:09.800 --> 01:02:10.800
You bind it to count.

01:02:10.840 --> 01:02:12.600
It needs to know a word.

01:02:13.010 --> 01:02:15.120
What word do you want to use here?

01:02:15.270 --> 01:02:16.980
Vehicle.

01:02:17.810 --> 01:02:21.210
and it's even got some logic in
there to put S on certain words,

01:02:21.210 --> 01:02:23.800
to put IES on other certain words,
and so on.

01:02:23.800 --> 01:02:25.800
And let's see, is there any hope that
that's going to work?

01:02:25.800 --> 01:02:29.380
I had a lot of trouble with
this framework earlier today.

01:02:29.760 --> 01:02:30.360
We'll know in a second.

01:02:30.360 --> 01:02:32.160
It didn't work.

01:02:32.160 --> 01:02:33.960
We got this far.

01:02:33.960 --> 01:02:35.760
We got to cheat.

01:02:35.760 --> 01:02:40.860
We got to go here to WebDoodads.

01:02:40.990 --> 01:02:43.010
The code in the framework isn't working.

01:02:43.010 --> 01:02:45.990
We're going to find the
WebDoodads framework here.

01:02:46.110 --> 01:02:47.330
Oh my goodness.

01:02:47.330 --> 01:02:50.480
We're going to find that
class which is here.

01:02:50.480 --> 01:02:52.160
It's a Pluralizer class.

01:02:52.160 --> 01:02:54.790
Oh my God, it's WebScript and that's not
supported in the next release.

01:02:54.790 --> 01:03:00.590
Fortunately,
this demo is on the current release.

01:03:00.640 --> 01:03:01.060
Put that in there and put
the Pluralizer component.

01:03:01.090 --> 01:03:01.890
This is all supposed to work.

01:03:01.890 --> 01:03:02.560
See how easy this is?

01:03:02.560 --> 01:03:07.560
This is supposed to work on the dragging
and dropping from the ... Oh yeah,

01:03:07.560 --> 01:03:10.280
it doesn't go in the classes suitcase.

01:03:10.280 --> 01:03:10.780
It goes in the

01:03:11.600 --> 01:03:13.040
You try doing a demo
for all these people.

01:03:13.040 --> 01:03:15.830
You try moving all your stuff from one
machine to another at the last minute.

01:03:15.850 --> 01:03:18.940
You'll see a number of little things
that just don't quite... Enough talking,

01:03:18.940 --> 01:03:19.770
smart guy.

01:03:19.850 --> 01:03:21.270
Let's just see it.

01:03:26.510 --> 01:03:30.600
Please, baby, baby, please.

01:03:30.670 --> 01:03:31.640
Ah, zero vehicles.

01:03:31.730 --> 01:03:32.530
Oh, it needs a space.

01:03:32.680 --> 01:03:34.710
It needs a space between them.

01:03:36.070 --> 01:03:37.000
What a great object.

01:03:37.000 --> 01:03:40.990
Aren't you glad you came all the way here
to WWDC to see something great like this?

01:03:41.000 --> 01:03:43.000
Okay, see this?

01:03:43.000 --> 01:03:46.110
Zero vehicles, $9,000.

01:03:47.390 --> 01:03:49.490
One vehicle.

01:03:49.490 --> 01:03:50.860
Thank you, thank you.

01:03:50.860 --> 01:03:52.930
$12,000.

01:03:54.950 --> 01:04:05.650
Topics include what's new in version 4.5,
a roadmap of features,

01:04:05.650 --> 01:04:15.570
building a high-level application,
and an introduction to EOF.

01:04:17.030 --> 01:04:20.990
There are other UI's you can do as well.

01:04:21.010 --> 01:04:23.000
That was an HTML UI that
I was building there.

01:04:23.000 --> 01:04:26.000
You saw a Java client this
morning in Steve's keynote.

01:04:26.000 --> 01:04:28.050
I was going to try to demo it,
but because I'm over time

01:04:28.050 --> 01:04:30.750
and because you've already
seen it probably twice today,

01:04:30.820 --> 01:04:32.420
we'll skip that.

01:04:32.480 --> 01:04:35.750
That's a scheme by which the client and
the server can exchange an XML write-up

01:04:35.750 --> 01:04:37.700
of what the UI should look like.

01:04:37.700 --> 01:04:40.880
It means you don't have to think about
the interface at all in a lot of cases.

01:04:40.880 --> 01:04:44.520
Or you can design your own fancier
UI using Interface Builder and

01:04:44.520 --> 01:04:47.780
laying out swing widgets to
build a much more complex thing.

01:04:47.780 --> 01:04:49.160
You really ought to go to
that direct-to-Java client

01:04:49.250 --> 01:04:50.700
to hear more about that.

01:04:50.700 --> 01:04:52.380
We also have a partner
called Report Mill,

01:04:52.380 --> 01:04:55.550
another thing I'm not going to show you,
which can generate high-quality

01:04:55.550 --> 01:04:57.060
PDF documents on the fly.

01:04:57.060 --> 01:05:00.830
You build a PDF template and you do this
kind of dragging and dropping stuff.

01:05:00.870 --> 01:05:03.840
It makes a very rich thing that might
look exactly like the invoice you

01:05:03.840 --> 01:05:07.700
might be sending them in the mail,
only it's PDF and they can print it.

01:05:07.700 --> 01:05:09.460
Printing HTML is hard.

01:05:09.470 --> 01:05:11.830
HTML is not really a language
designed for printing,

01:05:11.830 --> 01:05:13.420
but PDF is.

01:05:13.420 --> 01:05:14.410
This Report Mill product
is a great example of that.

01:05:14.610 --> 01:05:17.970
This is a swell way for delivering
somebody a rich and professional-looking

01:05:18.050 --> 01:05:19.580
printable user interface.

01:05:19.580 --> 01:05:20.690
Go to reportmill.com.

01:05:20.690 --> 01:05:24.100
They've got live WebObjects demos of
their product running right there.

01:05:24.310 --> 01:05:25.100
XML.

01:05:25.100 --> 01:05:26.470
Who cares about XML?

01:05:26.490 --> 01:05:27.300
Anybody?

01:05:27.300 --> 01:05:29.410
Have you read about it?

01:05:29.440 --> 01:05:31.100
Have you heard of the XML?

01:05:31.500 --> 01:05:32.220
Yeah?

01:05:32.220 --> 01:05:38.210
So we've got UML, we've got XML,
we've got WML.

01:05:38.210 --> 01:05:38.210
Is there VML?

01:05:38.210 --> 01:05:38.210
There's VRML.

01:05:38.290 --> 01:05:43.700
XML is becoming popular as
a way of exchanging data.

01:05:43.700 --> 01:05:45.530
With a couple of lines of code,
you can create what we

01:05:45.580 --> 01:05:47.190
call a WOXML coder object.

01:05:47.200 --> 01:05:49.690
You can ask it,
"Take this vehicle and turn it

01:05:49.700 --> 01:05:53.220
into an XML string for me." It will
come back with an XML string,

01:05:53.220 --> 01:05:56.690
or it will encode a whole graph of
objects as XML that you can then

01:05:56.690 --> 01:05:59.180
deliver to somebody in some special way.

01:05:59.300 --> 01:06:03.190
There are objects that can
parse XML coming in as well.

01:06:03.200 --> 01:06:03.530
WAP.

01:06:03.620 --> 01:06:06.620
We've got a partner that does a
wireless application framework,

01:06:06.620 --> 01:06:10.330
a little palette of objects that
know how to emit WAP bits and pieces,

01:06:10.330 --> 01:06:13.200
or WML, I guess it is,
Wireless Markup Language,

01:06:13.200 --> 01:06:15.220
so you can design a
little UI to run on your,

01:06:15.250 --> 01:06:17.160
if this was a phone, on your phone.

01:06:17.320 --> 01:06:21.700
And of course, you can mix and match all
these different pieces as well.

01:06:21.700 --> 01:06:25.070
You can have an application that's aware
of what different people are doing,

01:06:25.210 --> 01:06:27.530
and it sends WAP to this guy,
and HTML to somebody else,

01:06:27.530 --> 01:06:28.870
and PDF to somebody else.

01:06:29.180 --> 01:06:31.100
In addition,
we've got these super-duper assistants.

01:06:31.100 --> 01:06:35.090
We've got Direct2Web,
which I would like to say that I don't

01:06:35.090 --> 01:06:36.030
think Direct2Web is a toy at all.

01:06:36.140 --> 01:06:40.880
I think it's worthy of some serious
study in that it's a terrific way to

01:06:40.880 --> 01:06:45.090
knock out a WebObjects application
based on an EO model very rapidly.

01:06:45.110 --> 01:06:47.700
It builds a very elaborate rules-driven
engine that you don't have to

01:06:47.700 --> 01:06:51.160
think about if you don't want to,
but I bet you I could build a much

01:06:51.390 --> 01:06:55.830
better-looking application with
Direct2Web within some certain

01:06:55.900 --> 01:06:57.040
user interface constraints.

01:06:57.120 --> 01:07:00.850
I could build a great-looking application
in about 10 minutes that would take

01:07:00.850 --> 01:07:04.100
me a week of equivalent messing
around with WebObjects builders.

01:07:04.100 --> 01:07:07.100
So check that one out
too at the session 4.05.

01:07:07.330 --> 01:07:09.920
Direct2JavaClient,
which we've seen a couple of times today,

01:07:09.970 --> 01:07:13.280
for the same kind of idea:
a rules-engine-based way of having

01:07:13.410 --> 01:07:17.080
the UI constructed on the fly and
offering you an assistant where you can

01:07:17.170 --> 01:07:19.090
modify the UI that it's going to use.

01:07:19.100 --> 01:07:21.090
Let's not look at them.

01:07:21.140 --> 01:07:25.100
Let's all go to that other
session and check those out.

01:07:25.100 --> 01:07:28.560
In the meantime, we've got this tool,
Monitor, and its little sidekick buddy,

01:07:28.560 --> 01:07:30.780
WOTaskD,
that actually launches all of your

01:07:30.780 --> 01:07:33.090
applications in the complex environment.

01:07:33.180 --> 01:07:35.050
Keeps them running.

01:07:35.200 --> 01:07:35.900
Launches them again if they crash.

01:07:35.900 --> 01:07:36.280
Sends you mail.

01:07:36.280 --> 01:07:37.100
Gathers statistics and so on.

01:07:37.100 --> 01:07:40.300
And it has a UI like this where
you can indicate -- this is an

01:07:40.360 --> 01:07:42.690
actual WebObjects application,
but here I'm showing I've got five

01:07:42.690 --> 01:07:46.200
copies of some application and two
of them don't seem to be running,

01:07:46.200 --> 01:07:49.100
but I could click on those knife
switches to start them up and down.

01:07:49.110 --> 01:07:53.080
And it gathers statistics and
monitors deaths and so on.

01:07:53.180 --> 01:07:57.080
So it's a nice tool for
managing a complex deployment.

01:07:57.160 --> 01:07:59.750
We've got a bunch of sessions coming
up on big application development

01:07:59.850 --> 01:08:01.050
and all these various issues.

01:08:01.150 --> 01:08:05.090
How many people here are going to
most of the other WebObjects sessions?

01:08:05.100 --> 01:08:05.100
I'm just curious.

01:08:05.140 --> 01:08:07.090
Oh, that's fantastic.

01:08:07.170 --> 01:08:09.100
It's so great to see so many
people here for all this stuff.

01:08:09.100 --> 01:08:10.910
We love it and we hope you love it too.

01:08:11.370 --> 01:08:13.470
And we love you.

01:08:13.500 --> 01:08:15.080
And I hope -- no.

01:08:16.100 --> 01:08:17.040
Lots of ways to learn more.

01:08:17.040 --> 01:08:18.700
There's the WO Info Center application.

01:08:18.840 --> 01:08:20.790
After you install your
free copy of WebObjects,

01:08:20.910 --> 01:08:23.000
the first thing you ought to
run is this WO Info Center,

01:08:23.000 --> 01:08:25.490
which gives you an application
where you can search all the

01:08:25.490 --> 01:08:27.100
documentation for keywords.

01:08:27.100 --> 01:08:28.560
You can run the live examples.

01:08:28.560 --> 01:08:30.280
You can study things online.

01:08:30.280 --> 01:08:33.430
You can go through a whole hierarchy of
books that are included and read them

01:08:33.430 --> 01:08:35.040
online and look at all the examples.

01:08:35.140 --> 01:08:36.000
The best place to get started.

01:08:36.000 --> 01:08:39.790
And also, the quickest way to verify that
your WebObjects installation is

01:08:39.790 --> 01:08:43.630
working properly is to run WO Info
Center and see if this comes up.

01:08:43.790 --> 01:08:47.030
Shouldn't that be C-E-N-T-R-E?

01:08:47.230 --> 01:08:56.120
The best way to get up to speed
with WebObjects is to take

01:08:56.190 --> 01:08:57.740
our week-long training class.

01:08:57.830 --> 01:09:00.100
This is the best way, coming to WWDC.

01:09:00.100 --> 01:09:04.100
To take the intensive class and
go through the process of building

01:09:04.100 --> 01:09:08.350
an elaborate application with a
qualified instructor is fantastic.

01:09:08.630 --> 01:09:10.900
The second class is really
an in-depth discussion of the

01:09:10.900 --> 01:09:13.600
Enterprise Objects Framework,
that whole database layer.

01:09:13.600 --> 01:09:16.530
And we've recently added the third
class on WebObjects deployment,

01:09:16.900 --> 01:09:19.100
where you get to manage
your own little empire.

01:09:19.100 --> 01:09:21.950
Everybody gets an NTE machine and a
Solaris machine and a Mac OS X machine,

01:09:21.950 --> 01:09:24.220
and you get to build these
complex things with the database

01:09:24.220 --> 01:09:26.460
here and the web server there,
and you get to make them break

01:09:26.460 --> 01:09:27.590
and try to put them back together.

01:09:27.600 --> 01:09:30.600
It's really valuable for people who
are going to be doing deployment.

01:09:30.600 --> 01:09:33.270
If you're planning a WebObjects app,
you ought to send someone

01:09:33.270 --> 01:09:34.600
to that deployment class.

01:09:34.600 --> 01:09:36.600
And I think that's about all.

01:09:36.600 --> 01:09:38.600
I could talk,
I could refer you to all the references.

01:09:38.600 --> 01:09:41.200
I'm going to go through the
remaining WebObjects sessions,

01:09:41.260 --> 01:09:43.510
as they are all pretty good
follow-ups to this one.

01:09:43.600 --> 01:09:44.520
But you've all got the schedule.

01:09:44.640 --> 01:09:45.600
You can all see where they are.

01:09:45.600 --> 01:09:50.600
These ones that are on Tuesday, I think,
are excellent and highly recommend it.

01:09:50.600 --> 01:09:53.600
So if there are any questions -- oh,
we're almost out of time.

01:09:53.600 --> 01:09:55.600
Oh, I have to take questions.

01:09:55.600 --> 01:09:56.600
There's five more minutes.

01:09:56.610 --> 01:10:00.590
I'd be happy to take a few questions
and perhaps not answer them properly.

01:10:00.600 --> 01:10:02.500
Oh, Ernie.

01:10:02.610 --> 01:10:03.530
Hello, Ernie.

01:10:03.610 --> 01:10:05.600
I'm here to help you not answer things.

01:10:05.600 --> 01:10:07.730
It's Ernie.