WEBVTT

00:00:10.520 --> 00:00:11.400
Good afternoon.

00:00:11.400 --> 00:00:16.250
What we're going to be doing today is
going through basically this is the next

00:00:16.400 --> 00:00:19.400
in the series of Java talks that we're
going to be doing through the conference.

00:00:19.710 --> 00:00:26.400
And the goal of this talk is to basically
make sure that we're all on the same page

00:00:26.400 --> 00:00:30.650
as far as developing Java applications
because I don't know how many of you

00:00:31.050 --> 00:00:34.610
already have existing applications,
but Java, we've got applications coming

00:00:34.610 --> 00:00:37.180
from MRJ on classic Mac OS,
also from a collection

00:00:37.290 --> 00:00:38.400
of other platforms.

00:00:38.470 --> 00:00:42.330
What we wanted to do before we dove
into some of the other talks is to

00:00:42.330 --> 00:00:47.400
make sure that we're all working from
the same foundation and understand

00:00:47.400 --> 00:00:50.310
how development on Mac OS X is
going to work going forward.

00:00:50.400 --> 00:00:52.270
So the first thing that I'm
going to be going through,

00:00:52.400 --> 00:00:56.390
let's see if we can figure out how, oh,
nope, that's me.

00:00:56.400 --> 00:01:01.160
The first thing that we're going to do
is go through just some basic foundations

00:01:01.160 --> 00:01:06.400
of what is on the Mac OS X platform,
the CDs that you got yesterday,

00:01:06.400 --> 00:01:06.400
make sure we're clear on the
infrastructure that you've got,

00:01:06.400 --> 00:01:09.700
the development tools that
you have available to you,

00:01:09.830 --> 00:01:11.370
and that kind of thing.

00:01:11.470 --> 00:01:14.950
And then what we're going to do is spend
the bulk of the presentation walking

00:01:15.060 --> 00:01:19.330
through what you need to do to bring
your Java applications to Mac OS X,

00:01:19.430 --> 00:01:21.400
how you build them, how you set them up,
that kind of thing,

00:01:21.400 --> 00:01:24.510
to the point that you're
actually ready to deliver them

00:01:24.510 --> 00:01:26.210
to your customers on Mac OS X.

00:01:26.400 --> 00:01:29.660
And then at the end,
I'm going to point you at all of the

00:01:29.660 --> 00:01:34.400
different sessions that you can go to
after this to get more information.

00:01:34.400 --> 00:01:34.400
But we want to make sure that
you're all on the same page.

00:01:34.400 --> 00:01:35.580
So we're going to go through all
of the different things that you

00:01:35.670 --> 00:01:36.400
need to do to get more information.

00:01:36.400 --> 00:01:39.580
But we wanted to make sure before
you went into those other talks that

00:01:39.580 --> 00:01:41.390
we're all talking on the same page.

00:01:42.310 --> 00:01:44.610
So it occurred to me when
we were like going through

00:01:44.610 --> 00:01:47.090
setting up this presentation,
I was trying to figure out how

00:01:47.090 --> 00:01:49.080
to lay this out so that it would
make a certain amount of sense.

00:01:49.160 --> 00:01:52.590
And it occurred to me that
building a Java application

00:01:52.590 --> 00:01:56.990
is real similar to cooking,
to put it real simply.

00:01:57.000 --> 00:02:00.770
There's a whole collection of steps that
you have to do to go through and make

00:02:00.840 --> 00:02:04.960
an application that are very similar
actually to the steps that are required

00:02:05.120 --> 00:02:07.740
to bake a cake or something like that.

00:02:07.930 --> 00:02:09.860
First of all,
there's a collection of ingredients

00:02:10.380 --> 00:02:13.470
and tools that you're going
to need to make sure you have.

00:02:13.540 --> 00:02:16.900
In the case of a recipe, it's,
let's say you're making a cake,

00:02:16.900 --> 00:02:19.270
it's the flours, the sugar, the eggs,
all that kind of stuff.

00:02:19.440 --> 00:02:22.700
It's the pots and pans, the oven,
that kind of thing.

00:02:22.700 --> 00:02:24.900
And a Java application is real similar.

00:02:24.900 --> 00:02:27.090
You've got your source code,
you've got the things that

00:02:27.130 --> 00:02:29.790
you're bringing from the other
platforms into the equation,

00:02:29.790 --> 00:02:31.780
and then there's the
things that we provide.

00:02:31.800 --> 00:02:34.770
Beyond that,
there's a collection of pre-prep steps

00:02:34.770 --> 00:02:37.000
that you're going to need to go through.

00:02:37.000 --> 00:02:37.600
And we're going to go through that.

00:02:37.700 --> 00:02:39.700
As it relates to your application.

00:02:39.700 --> 00:02:42.700
Then there's the actual bulk of the
preparation of your application.

00:02:42.700 --> 00:02:45.260
What you do to actually build
the application to get to the

00:02:45.380 --> 00:02:48.280
point where you've got a running
executable that you can test and run

00:02:48.280 --> 00:02:49.700
and debug and that kind of thing.

00:02:49.910 --> 00:02:52.690
But, in my opinion,
almost more importantly,

00:02:52.690 --> 00:02:56.990
especially if you're coming from a point
where you've already got an application,

00:02:56.990 --> 00:03:01.200
is once you've got the
application ready and running,

00:03:01.200 --> 00:03:06.200
there's a collection of basically
flash in the pan kinds of things.

00:03:06.200 --> 00:03:07.590
All of the garnish and
the stuff that goes in.

00:03:07.650 --> 00:03:08.950
So,
there's a collection of things that goes

00:03:08.950 --> 00:03:11.590
around your application to make it behave
well and fit in well with the Macintosh.

00:03:11.610 --> 00:03:15.770
So, we're going to go into how to make
your Java application then blend into

00:03:15.870 --> 00:03:20.100
the Macintosh and be something that
your end users will be happy using.

00:03:20.100 --> 00:03:22.890
Especially if you've got hardcore
Mac users that are used to a

00:03:22.890 --> 00:03:24.600
whole collection of behaviors.

00:03:24.600 --> 00:03:27.220
There's things that you're going
to need to be aware of in your

00:03:27.220 --> 00:03:30.510
application to make sure that Mac users
are happy with your application.

00:03:30.600 --> 00:03:32.600
And then finally, there's the delivery.

00:03:32.600 --> 00:03:35.550
How do you actually bundle it up
and give it to your developers?

00:03:35.600 --> 00:03:37.500
So, let's dive in.

00:03:37.500 --> 00:03:42.340
First of all, there's the supplies and
ingredients that you need to

00:03:42.340 --> 00:03:45.000
walk into your development with.

00:03:45.370 --> 00:03:48.240
Like I said before,
the supplies and ingredients in

00:03:48.240 --> 00:03:51.630
cooking are the things you buy from
the grocery store and the things

00:03:51.630 --> 00:03:52.900
that would be in your kitchen.

00:03:52.980 --> 00:03:55.300
In your Java application,
it's your source code,

00:03:55.300 --> 00:03:58.900
it's your make files,
it's your code warrior projects,

00:03:58.900 --> 00:04:04.410
if you've got those, any resource files,
icon files, images, that kind of thing.

00:04:04.540 --> 00:04:06.700
And it's also the tools
that we're going to provide.

00:04:06.790 --> 00:04:09.880
So I'm going to walk you
through basically what we're

00:04:09.880 --> 00:04:13.000
going to be providing and what
you need to bring to the game.

00:04:13.040 --> 00:04:17.140
So let's start off first with a basic
kind of block diagram that you're

00:04:17.140 --> 00:04:20.200
familiar with in all of these talks,
is the basic architecture

00:04:20.200 --> 00:04:21.900
as it relates to Java.

00:04:21.980 --> 00:04:26.090
First of all,
you've got the classic Mac OS X Core OS.

00:04:26.090 --> 00:04:29.070
It's a standard Unix style Mach kernel.

00:04:29.100 --> 00:04:33.790
All of the systems facilities that
Unix developers are familiar with are

00:04:33.790 --> 00:04:36.500
going to be available to you on Mac 10.

00:04:36.500 --> 00:04:39.290
And that's why Mac OS X lends
itself very well to Java,

00:04:39.320 --> 00:04:42.700
is Java's designed around those kind of
primitives and that kind of architecture.

00:04:42.700 --> 00:04:44.690
So that's what's sitting
under the covers.

00:04:44.690 --> 00:04:47.720
That's some of the work that we
had to do on classic Mac OS to

00:04:47.950 --> 00:04:50.070
shoehorn Java onto classic Mac OS.

00:04:50.140 --> 00:04:52.890
We don't have to do as much of
the nitty gritty kind of things

00:04:52.970 --> 00:04:54.530
because the OS is down there.

00:04:54.600 --> 00:04:58.310
On top of it,
you've got the standard Unix development

00:04:58.380 --> 00:05:03.000
tools that Unix developers are familiar
with as far as command line tools,

00:05:03.000 --> 00:05:07.020
all of the facilities that you've come
to know and love or know and hate,

00:05:07.110 --> 00:05:08.530
depending on how well you like Unix.

00:05:08.880 --> 00:05:12.400
Those are all down there
and available to you.

00:05:12.400 --> 00:05:16.690
a Unix development environment,
you've got those available to you.

00:05:16.890 --> 00:05:20.520
In addition, there's the Java,
which is the bulk of this presentation

00:05:20.520 --> 00:05:24.760
and these talks is what we're going
to be providing is a core Java,

00:05:24.800 --> 00:05:31.120
Java 2 version 1.2.2 platform with all
of the Java tools that are familiar

00:05:31.210 --> 00:05:34.370
to Java developers on Solaris,
all of these standard command-line tools,

00:05:34.400 --> 00:05:39.140
in addition to a collection of
tools that Apple's providing to you

00:05:39.290 --> 00:05:44.080
to make your application better,
make your application development

00:05:44.080 --> 00:05:46.800
experience better on the Mac OS X.

00:05:47.690 --> 00:05:49.150
And on top of it is your application.

00:05:49.260 --> 00:05:52.550
So that's the kind of final
product that we're hoping to walk

00:05:52.620 --> 00:05:54.280
out of this presentation with.

00:05:54.370 --> 00:05:58.140
So first of all, the supplies,
what we're going to be bringing

00:05:58.140 --> 00:06:02.770
to the table is a basic unit,
Mox kernel, Java 2 standard edition,

00:06:02.770 --> 00:06:05.380
and Project Builder,
which we believe is a world-class

00:06:05.380 --> 00:06:08.550
development environment that you
can use to build your applications.

00:06:08.670 --> 00:06:10.620
And that's what the core of
this presentation is going to be

00:06:10.620 --> 00:06:14.100
about is using Project Builder
to build Java applications.

00:06:14.140 --> 00:06:16.060
I'll go into some of the
other tools briefly as well,

00:06:16.060 --> 00:06:18.710
but this is how we're going
to plan this presentation.

00:06:18.850 --> 00:06:21.470
And what you're going to be bringing
is your standard Java application

00:06:21.470 --> 00:06:23.130
and your recipe for building it.

00:06:23.230 --> 00:06:25.700
That may be the Makefiles,
that may be the Code Warrior Projects,

00:06:25.740 --> 00:06:26.340
that kind of thing.

00:06:26.340 --> 00:06:29.190
But however you build it,
your understanding of how

00:06:29.200 --> 00:06:30.940
to build your product.

00:06:30.940 --> 00:06:34.950
So the base development platform,

00:06:35.450 --> 00:06:39.460
is a, like I said,
the standard Mach Unix base OS,

00:06:39.910 --> 00:06:41.170
standard Unix development tools.

00:06:41.280 --> 00:06:45.640
For those of you that have more complex
Java applications that aren't pure Java,

00:06:45.640 --> 00:06:47.930
you're gonna care about a collection,
a lot of these,

00:06:47.930 --> 00:06:52.650
things like Make or GNU Make,
or Jam that comes with Project Builder,

00:06:52.790 --> 00:06:54.820
CC, GCC,
if you care about those kind of things,

00:06:54.950 --> 00:06:58.570
GDB, standard Unix development tools
for building native methods,

00:06:58.650 --> 00:07:02.060
for building any other
portions of your platform.

00:07:02.080 --> 00:07:06.160
In addition,
the Java 2 SDK standard edition,

00:07:06.160 --> 00:07:13.240
right now what's on your CD is the 1.2.2
version of the Java 2 standard edition.

00:07:13.240 --> 00:07:19.010
Our plans for Mac OS X GM as they stand
right now are to rev to the 1.3 version,

00:07:19.090 --> 00:07:21.540
but that wasn't available at the
time that we had to slam the CD,

00:07:21.650 --> 00:07:26.260
so we didn't merge that in to
what you've got on your CD,

00:07:26.260 --> 00:07:30.750
but that is the plan for Mac OS X GM.

00:07:31.370 --> 00:07:33.600
High level Java 2 features,
Steve went over some of these,

00:07:33.600 --> 00:07:36.540
and I could spend an entire talk
talking about all the different

00:07:36.540 --> 00:07:38.610
features that are in Java 2,
and I don't want to go

00:07:38.610 --> 00:07:39.560
into all those details.

00:07:39.650 --> 00:07:41.510
But there are some high level
features that you should be

00:07:41.510 --> 00:07:44.690
aware of that are interesting,
especially to those of you that are

00:07:44.690 --> 00:07:47.080
familiar with MRJ on classic Mac OS.

00:07:47.140 --> 00:07:49.180
First of all,
there's the Java Foundation classes,

00:07:49.180 --> 00:07:51.220
which, I mean, I'm biased.

00:07:51.220 --> 00:07:53.960
But those, in my opinion,
are the most interesting.

00:07:53.960 --> 00:07:56.100
Which is the swing
UI framework particularly,

00:07:56.100 --> 00:08:01.650
which is a much more flexible,
much more well architected UI framework

00:08:01.660 --> 00:08:05.410
for developing applications that allow
you to write applications that much more

00:08:05.410 --> 00:08:09.460
seamlessly move from platform to platform
than we got with the classic AWT.

00:08:09.850 --> 00:08:11.840
It also allows for
pluggable look and feels,

00:08:11.900 --> 00:08:15.370
and you've seen actually demos
of that in previous presentations

00:08:15.370 --> 00:08:17.660
of the Mac OS look and feel,
the Aqua look and feel that

00:08:17.660 --> 00:08:20.130
we're working on for Mac OS X.

00:08:20.220 --> 00:08:22.440
In addition, there's the Java 2D graphics
architecture,

00:08:22.440 --> 00:08:28.080
which is an extremely powerful graphics
architecture that provides a lot more,

00:08:28.190 --> 00:08:30.920
you know, a lot more flexibility and more
graphics primitives and functionality

00:08:30.920 --> 00:08:33.120
than you got out of Java in the past.

00:08:33.220 --> 00:08:37.840
And we're working really
hard to tie this in with the

00:08:37.970 --> 00:08:42.260
platform and the infrastructure
that's available on Mac OS X.

00:08:42.350 --> 00:08:43.960
There's also a collection
of collection classes,

00:08:43.960 --> 00:08:48.540
the kinds of infrastructure that a lot of
application developers end up rewriting

00:08:48.710 --> 00:08:52.280
whenever they go to a new platform,
Java's providing a lot

00:08:52.280 --> 00:08:53.450
of those things for you.

00:08:53.560 --> 00:08:56.780
In addition, there's a policy based
enhanced security model,

00:08:56.780 --> 00:09:00.220
which is a much more,
a much more exhaustive security model

00:09:00.220 --> 00:09:03.240
than it was available in the past,
much more flexible.

00:09:03.330 --> 00:09:06.860
And also a collection of APIs to the VM.

00:09:06.860 --> 00:09:08.950
And this is particularly
interesting to those of you that

00:09:08.950 --> 00:09:09.990
are doing development tools.

00:09:10.050 --> 00:09:12.600
We would actually love to hear from
you if you're doing development tools,

00:09:12.710 --> 00:09:18.270
because the VM that is
on Mac OS X allows for,

00:09:18.590 --> 00:09:22.530
provides APIs for plugging
in debuggers and plugging in

00:09:22.530 --> 00:09:23.880
profilers and that kind of thing.

00:09:23.880 --> 00:09:27.420
So if you're interested in that,
the follow on talks will

00:09:27.510 --> 00:09:28.030
give you more information.

00:09:28.110 --> 00:09:30.780
We would actually love to
talk to you about that.

00:09:30.870 --> 00:09:32.600
And then there's a
gazillion other features.

00:09:32.690 --> 00:09:34.670
I mean, I don't know if you,
I don't know how many of you

00:09:34.670 --> 00:09:41.000
saw SnareOff's talk yesterday,
but the, the Java 2 platform is huge

00:09:41.000 --> 00:09:45.570
compared to the JDK 1.1 platform.

00:09:46.000 --> 00:09:48.850
So in addition,
like we've done on MRJ in the past,

00:09:48.860 --> 00:09:52.310
Java for Mac OS X is going to provide
a collection of other features as well.

00:09:52.430 --> 00:09:54.000
First of all,
the hotspot client compiler.

00:09:54.000 --> 00:09:56.200
You saw a bunch of
numbers on this yesterday.

00:09:56.200 --> 00:09:59.890
We hope that this is going to give us
amazing performance on Mac OS X and

00:09:59.980 --> 00:10:02.540
make your applications scream.

00:10:02.550 --> 00:10:05.340
In addition,
there's the -- we're working on an

00:10:05.420 --> 00:10:07.600
improved application embedding model.

00:10:07.600 --> 00:10:09.790
I don't know how many of you
are familiar with the JManager,

00:10:09.790 --> 00:10:12.940
but the JManager we've discovered
over the course of years of

00:10:12.940 --> 00:10:16.820
development is kind of complex
to use and a little confusing for

00:10:16.880 --> 00:10:18.510
application developers to use.

00:10:18.590 --> 00:10:22.800
On Mac OS X,
we're moving to a much simpler and,

00:10:22.800 --> 00:10:24.700
in my opinion,
much more powerful embedding

00:10:24.700 --> 00:10:28.460
model that is very similar to
what you're familiar with with

00:10:28.460 --> 00:10:31.000
developing other Carbon applications.

00:10:31.000 --> 00:10:36.600
So Blaine's talk tomorrow will
provide more information on that

00:10:36.600 --> 00:10:41.520
as well as a new and improved
JDIRECT native method access.

00:10:41.570 --> 00:10:42.690
So, thank you.

00:10:42.810 --> 00:10:43.540
Thank you.

00:10:43.830 --> 00:10:45.160
Um, so, let's go back to the first slide.

00:10:45.160 --> 00:10:45.760
So, you know,
there's a bunch of things that

00:10:45.810 --> 00:10:46.350
we're going to be doing here.

00:10:46.360 --> 00:10:47.170
One of the things that we're going
to be doing is we're going to

00:10:47.190 --> 00:10:48.160
be looking at a bunch of things
that we're going to be working on.

00:10:48.160 --> 00:10:48.590
One of those things is the Mac OS X Java,
that will -- that we ended up having

00:10:48.590 --> 00:10:49.040
to re -- make minor changes to,
to allow for pluggable VMs,

00:10:49.120 --> 00:10:51.720
which is one of the features
of the Mac OS X Java.

00:10:51.780 --> 00:10:57.000
And then there's a collection of other
features that are available as well.

00:10:57.750 --> 00:11:00.760
and I will have a look at the next steps.

00:11:00.760 --> 00:11:03.820
So, first of all,
let's talk about what isn't in DP4.

00:11:03.880 --> 00:11:06.040
I figured it was worth calling out what
isn't there so that when you're poking

00:11:06.110 --> 00:11:07.840
around and starting to play with this,
that you don't expect

00:11:07.840 --> 00:11:08.720
things that aren't there.

00:11:08.770 --> 00:11:10.580
First of all,
the Aqua look and feel for Swing,

00:11:10.580 --> 00:11:12.560
it's not that it's not there,
there's a collection

00:11:12.560 --> 00:11:13.640
of very visible bugs.

00:11:13.640 --> 00:11:16.800
So when you're playing around,
keep in mind that there's a couple

00:11:16.800 --> 00:11:20.320
of very visible bugs that you'll
see that just didn't make the cut.

00:11:20.320 --> 00:11:23.990
We were like cramming to get stuff in,
and you'll see that those bugs

00:11:23.990 --> 00:11:27.760
have actually been fixed recently,
so we wanted to get those out to you,

00:11:27.760 --> 00:11:29.380
but in the meantime,
you'll notice things like scroll bars

00:11:29.390 --> 00:11:30.550
aren't appearing and things like that.

00:11:30.640 --> 00:11:34.060
That will be fixed, obviously,
it'll be fixed on stage,

00:11:34.060 --> 00:11:37.430
but I didn't want you
surprised and mailing us,

00:11:37.430 --> 00:11:39.550
telling us that it wasn't there,
because we know.

00:11:39.570 --> 00:11:44.440
Input method support,
Java 2 provides a...

00:11:44.500 --> 00:13:13.900
[Transcript missing]

00:13:15.000 --> 00:13:17.100
The other thing you need to be
aware of is development tools.

00:13:17.250 --> 00:13:19.810
There's a collection of -- I keep
using that word over and over

00:13:19.810 --> 00:13:24.400
again -- there's a collection of
development tools options for you.

00:13:24.400 --> 00:13:27.040
This presentation is going to be
targeted at a project builder because,

00:13:27.040 --> 00:13:28.120
frankly, I think it's really cool.

00:13:28.230 --> 00:13:30.780
But there's a collection of
other development tools and

00:13:30.780 --> 00:13:33.310
development environments that
are also reasonably cool as well,

00:13:33.310 --> 00:13:35.280
or really cool as well,
depending on what -- the kind of

00:13:35.280 --> 00:13:36.470
application you're developing.

00:13:36.510 --> 00:13:39.300
So project builder is what
we're going to be talking about,

00:13:39.300 --> 00:13:41.810
but MetroWorks Code Warrior is
also available.

00:13:41.820 --> 00:13:44.140
And there's -- I don't remember
if the Code Warrior presentations

00:13:44.140 --> 00:13:47.510
already happened or will be happening,
but Code Warrior for Mac OS X,

00:13:47.510 --> 00:13:50.930
as well as you can develop on classic
Mac OS your Code Warrior projects

00:13:51.020 --> 00:13:52.500
and bundle them up for Mac OS X.

00:13:52.520 --> 00:13:53.620
So that's an option.

00:13:53.720 --> 00:13:55.720
As well as standard Unix-style tools.

00:13:55.820 --> 00:14:00.780
So there's a lot of options for you,
and hopefully more to come.

00:14:01.380 --> 00:14:02.730
And then there's a
collection of other tools.

00:14:02.820 --> 00:14:05.220
The standard JDK tools,
which I keep saying over and over again,

00:14:05.220 --> 00:14:05.950
that are all there.

00:14:05.960 --> 00:14:08.040
There's alternate tools
such as the JICS compiler,

00:14:08.040 --> 00:14:11.000
which in certain situations we've
discovered is a lot faster than Java C,

00:14:11.000 --> 00:14:13.020
but it depends on your situations.

00:14:13.350 --> 00:14:16.000
There's application packaging
tools that we're providing to

00:14:16.130 --> 00:14:17.530
you for creating app bundles.

00:14:17.540 --> 00:14:21.360
And we're going to go into app bundles
a little more in a little while,

00:14:21.360 --> 00:14:25.030
but we're providing some tools for you
to be able to do that kind of thing.

00:14:25.040 --> 00:14:26.640
And debugging tools.

00:14:26.800 --> 00:14:29.300
There's standard Unix debugging tools,
GDB, JDB.

00:14:29.300 --> 00:14:32.590
There's also work going on to
integrate the debugging into the IDE.

00:14:32.600 --> 00:14:35.200
There's already debugging
support for native apps,

00:14:35.210 --> 00:14:37.640
and we're working on
Java debugging in the IDE.

00:14:37.640 --> 00:14:39.540
So you should be able to,
within Project Builder,

00:14:39.540 --> 00:14:40.900
do full-fledged Java debugging.

00:14:40.900 --> 00:14:43.030
So...

00:14:44.060 --> 00:14:47.320
The other thing to be aware of and
be familiar with before you start

00:14:47.320 --> 00:14:49.170
diving in is where to find the JDK.

00:14:49.340 --> 00:14:53.890
Those of you that are familiar with
Unix platforms will be familiar

00:14:53.890 --> 00:14:57.900
to a certain extent with what
you find on the disk on Mac OS X.

00:14:57.900 --> 00:15:00.900
On Mac OS X in general the
libraries and frameworks are down.

00:15:00.900 --> 00:15:03.770
If you go through your directory,
if you've installed it,

00:15:03.770 --> 00:15:04.900
you may have noticed.

00:15:04.940 --> 00:15:08.900
In system, libraries, frameworks,
there's a Java VM framework.

00:15:08.900 --> 00:15:10.830
That's where the entire Java VM lives.

00:15:11.060 --> 00:15:14.970
There's links in Unix places to
make some of the make files and

00:15:15.080 --> 00:15:15.900
work and that kind of thing.

00:15:15.900 --> 00:15:18.440
But essentially, you've got inside of
your Java VM framework,

00:15:18.450 --> 00:15:21.090
you've got your classes
directory that has classes.jar.

00:15:21.090 --> 00:15:24.900
You've got commands, headers,
all the normal kinds of stuff.

00:15:24.900 --> 00:15:27.900
And you'll also see a
versions directory in there.

00:15:27.900 --> 00:15:29.880
This is an internal development process.

00:15:29.960 --> 00:15:34.830
We're not going to have multiple
versions of the JVM on the framework.

00:15:34.900 --> 00:15:37.520
This is a final shipping product,
but this is how standard

00:15:37.520 --> 00:15:39.680
Mac OS X applications are
going to be bundled up.

00:15:39.900 --> 00:15:41.770
So if you go rooting around,
you'll discover things

00:15:41.770 --> 00:15:42.900
that you're familiar with.

00:15:42.900 --> 00:15:45.550
This is different than what
you're familiar with if

00:15:45.550 --> 00:15:46.900
you're familiar with MRJ.

00:15:46.900 --> 00:15:52.900
Because MRJ separates out the runtime
from the software development kit

00:15:52.900 --> 00:15:55.840
so that you get the MRJ SDK with all
the tools and that kind of thing.

00:15:55.940 --> 00:15:57.900
Those are on the disk here.

00:15:57.900 --> 00:16:01.590
So those will all be
available to you in one place.

00:16:02.500 --> 00:17:04.700
[Transcript missing]

00:17:06.530 --> 00:17:07.800
Okay,
so the first thing that you're going

00:17:07.800 --> 00:17:13.000
to need to do when you're building your
application is create a new project.

00:17:13.060 --> 00:17:19.550
So for this it's fairly straightforward,
new project.

00:17:19.980 --> 00:17:24.130
Wizards right now, like I said,
don't support building Java applications.

00:17:24.190 --> 00:17:27.280
We're going to kind of walk around doing
the building of the Java application.

00:17:27.280 --> 00:17:28.850
So in this case,
what we're going to do is build a

00:17:28.980 --> 00:17:32.120
Carbon application because there's
a small Carbon stub that we're going

00:17:32.120 --> 00:17:33.220
to build that's going to launch Java.

00:17:33.280 --> 00:17:36.290
So you would select build
Carbon application and then

00:17:36.290 --> 00:17:37.380
select your project name.

00:17:37.380 --> 00:17:40.400
In this case,
I've actually got one that's kind

00:17:40.400 --> 00:17:43.620
of precooked a little that I'll show
you the flag but I didn't want to

00:17:43.620 --> 00:17:45.360
dwell on all of the little details.

00:17:45.360 --> 00:17:46.960
So in this case,
we're going to cancel out of here,

00:17:46.960 --> 00:17:53.490
go to file and select open new
project and then just select the

00:17:53.490 --> 00:17:56.020
MetroXPB project and open that up.

00:17:56.080 --> 00:18:00.900
What you'll see in here is basically
your entire project and what we're

00:18:00.900 --> 00:18:05.190
going to do with this template project
is bring in all of the sources,

00:18:05.200 --> 00:18:08.390
all of the different pieces that
make up your Java application.

00:18:08.460 --> 00:18:10.170
So first of all,
what we're going to do is

00:18:10.170 --> 00:18:11.410
add all of your sources.

00:18:11.530 --> 00:18:15.990
So to do that, you click on the sources
directory and go up to project,

00:18:15.990 --> 00:18:17.490
add files.

00:18:18.730 --> 00:18:19.940
and select all of your sources.

00:18:20.050 --> 00:18:23.440
You can add them in hierarchies
or you can add them one by one.

00:18:23.440 --> 00:18:26.890
What we're going to do is go ahead
and add all the Java sources.

00:18:29.700 --> 00:18:30.700
The project builder project.

00:18:30.700 --> 00:18:33.910
Project builder is aware
of how to build Java code,

00:18:33.940 --> 00:18:35.670
just not as standard applications.

00:18:35.810 --> 00:18:39.700
So you can see in here we've
imported all the sources into Java.

00:18:39.700 --> 00:18:41.820
In addition,
there's a collection of resources that

00:18:41.820 --> 00:18:44.700
you're going to need to be aware of
and be including in your application

00:18:44.700 --> 00:18:48.700
to make your Java application look
and feel like a Mac-application.

00:18:48.700 --> 00:18:53.700
So what we're going to do here is, again,
to add resource files, you add files,

00:18:53.700 --> 00:18:56.700
and then what we're going to do
is there's a metalworks.icns.

00:18:56.700 --> 00:18:59.850
So basically what I've done in this
is taken the metalworks that you get

00:18:59.860 --> 00:19:04.100
out of the standard Java distribution
and made some minor things to be able

00:19:04.100 --> 00:19:05.700
to build it with project builders.

00:19:05.700 --> 00:19:08.600
So we're going to have a metalworks.icns,
which are icon files.

00:19:08.700 --> 00:19:10.700
I'll show you how to wire in icon files.

00:19:10.700 --> 00:19:13.660
And your mrjapp.properties.

00:19:13.740 --> 00:19:16.350
So go ahead and add those.

00:19:16.570 --> 00:19:19.840
For those of you that have
already been playing with MRJ and

00:19:19.840 --> 00:19:23.500
gotten the latest MRJ SDK,
you'll see the MRJ app builder.

00:19:23.500 --> 00:19:26.600
This is a new application bundling
model that will allow us to take

00:19:26.830 --> 00:19:28.450
applications back and forth.

00:19:28.510 --> 00:19:31.760
I'll talk about that a little later,
but the important piece of it

00:19:31.760 --> 00:19:33.480
is this MRJ app.properties file.

00:19:33.500 --> 00:19:35.500
So if you could boink on that.

00:19:35.500 --> 00:19:36.390
Go back one.

00:19:36.500 --> 00:19:37.500
Go back to the files.

00:19:37.500 --> 00:19:40.500
MRJ app.properties.

00:19:40.500 --> 00:19:44.640
What you can see in here is
basically the app.properties is

00:19:44.640 --> 00:19:48.480
how you define all of the details
of how to launch the application.

00:19:48.500 --> 00:19:50.500
This is where you define your main class.

00:19:50.500 --> 00:19:51.500
This is where you define your class pass.

00:19:51.500 --> 00:19:53.500
And then there's a collection of others.

00:19:53.500 --> 00:19:54.500
You can define command line switches.

00:19:54.500 --> 00:19:58.500
You can define all of the different flags
that we would normally pass into the VM.

00:19:58.500 --> 00:20:00.490
You define these in here.

00:20:00.500 --> 00:20:05.030
So what you can see up here is
I have defined the com.apple

00:20:05.030 --> 00:20:09.500
MRJ applications main is Metalworks,
which is the main class.

00:20:09.500 --> 00:20:10.490
And the class pass is the main class.

00:20:10.500 --> 00:20:12.500
And the class pass is
where to find these.

00:20:12.500 --> 00:20:15.480
And you'll see that the Metalworks
is just the standard class.

00:20:15.520 --> 00:20:18.780
The contents resources
Java Metalworks.jar is what

00:20:18.940 --> 00:20:20.500
Project Builder is going to build.

00:20:20.550 --> 00:20:24.500
So that path up to it I'll talk a
little bit about in just a second.

00:20:24.500 --> 00:20:27.500
But it's a reference
into the app package.

00:20:27.500 --> 00:20:31.500
And Project Builder is going to
actually build a jar that is called

00:20:31.500 --> 00:20:34.500
whatever your target name is .jar.

00:20:34.530 --> 00:20:39.500
And so you're going to need to point
your MRJ app.properties into there.

00:20:39.630 --> 00:20:43.500
So the other things you can see up here
are some of what I was talking about.

00:20:43.500 --> 00:20:47.040
Some of the kind of workarounds that
you're going to need to be able to use

00:20:47.040 --> 00:20:48.500
what you've got in your CD right now.

00:20:48.500 --> 00:20:52.080
A lot of these will be going away
and Project Builder will be able to

00:20:52.080 --> 00:20:56.500
burp out the correct application for
the GM version of Project Builder.

00:20:56.500 --> 00:20:59.000
But right now you're going to
have to do a little bit of a

00:20:59.140 --> 00:21:00.500
dance to get this to happen.

00:21:00.500 --> 00:21:02.620
So what you can see here
is the Java app shell,

00:21:02.620 --> 00:21:06.350
which is basically a little tiny
C Carbon application that actually

00:21:06.400 --> 00:21:08.490
launches the Java application.

00:21:08.500 --> 00:21:10.500
And the headers.

00:21:10.500 --> 00:21:13.560
And then there's a collection of
external libraries and frameworks,

00:21:13.560 --> 00:21:15.490
which are C libraries and
frameworks that are on the system

00:21:15.500 --> 00:21:16.490
that the app builder needs.

00:21:16.500 --> 00:21:22.380
Carbon, the system, and then libappshell,
which is basically a piece of

00:21:22.380 --> 00:21:26.500
our Java VM that is responsible
for bootstrapping up the VM.

00:21:26.500 --> 00:21:28.500
So those things will be abstracted
away from you in the final,

00:21:28.500 --> 00:21:32.140
but I did want to point them out
in this presentation because when

00:21:32.140 --> 00:21:34.160
you're rooting around in your
Project Builder files and trying to

00:21:34.160 --> 00:21:36.410
get your applications up and running,
you're going to need to be aware

00:21:36.410 --> 00:21:37.500
that they're there for right now.

00:21:37.500 --> 00:21:40.650
So with that,
let's go ahead and set up the

00:21:40.650 --> 00:21:43.390
build so that we're ready to build.

00:21:43.560 --> 00:21:48.500
So we boink on the targets and then
boink on the Metalworks target.

00:21:48.500 --> 00:21:51.500
So we select the actual
application target that we want.

00:21:51.500 --> 00:21:57.360
And what you'll see up here -- and I am
just flying through this -- what you'll

00:21:57.360 --> 00:22:01.700
see up here is a collection of paints
that allow you to set all of the build

00:22:01.700 --> 00:22:04.430
flags that you need for your application.

00:22:04.520 --> 00:22:06.500
Actually, go back to the files.

00:22:06.500 --> 00:22:09.500
Go back to the files and
build phases real quick.

00:22:09.500 --> 00:22:13.430
This is where Project Builder is
rocking all of the different files

00:22:13.430 --> 00:22:15.500
that make up your application.

00:22:15.500 --> 00:22:18.470
So you can see here -- you should check
when you're importing your sources

00:22:18.800 --> 00:22:20.460
that all your sources appear in here.

00:22:20.520 --> 00:22:22.490
You can see all your Java sources.

00:22:22.570 --> 00:22:24.500
You can also see the little
stub app we have there,

00:22:24.500 --> 00:22:26.130
the frameworks,
and all of the other bundle

00:22:26.140 --> 00:22:27.500
resources and things like that.

00:22:27.500 --> 00:22:30.120
So you need to make sure that
those are all visible and appearing

00:22:30.120 --> 00:22:31.500
how you expect them to appear.

00:22:31.520 --> 00:22:35.500
I misimported a couple of files
yesterday when I was playing with it,

00:22:35.500 --> 00:22:35.500
and they ended up in bundle
resources instead of sources.

00:22:35.500 --> 00:22:39.280
So you should double check just to
make sure that you didn't make a

00:22:39.370 --> 00:22:41.460
mistake in importing your files.

00:22:41.500 --> 00:22:44.500
So the next thing we want to
do is click on Build Settings.

00:22:44.500 --> 00:22:48.350
Build Settings is where you define
a collection of flags that you

00:22:48.350 --> 00:22:50.500
need to build your application.

00:22:50.500 --> 00:22:52.500
First of all is the
application project name,

00:22:52.500 --> 00:22:55.500
which in this case matches the targets.

00:22:55.500 --> 00:22:58.490
The more important ones that you need to
be aware of -- most of these are fine,

00:22:58.490 --> 00:23:01.500
with the exception of
down in Build Flags,

00:23:01.500 --> 00:23:04.500
there are two flags that Project Builder
doesn't add to your application.

00:23:04.510 --> 00:23:07.120
Project Builder doesn't add to the
Carbon application by default that

00:23:07.120 --> 00:23:09.500
you need to look for if you're
not going to use our template.

00:23:09.500 --> 00:23:14.500
The Java compiler, which points at which
Java compiler you want to use.

00:23:14.500 --> 00:23:16.250
If you want to use Jyx,
you would point at a

00:23:16.260 --> 00:23:17.500
different Java compiler.

00:23:17.500 --> 00:23:19.500
And then the library search paths.

00:23:19.500 --> 00:23:23.150
And this basically points the
access paths and the compilers

00:23:23.230 --> 00:23:26.490
to point to the right to be able
to find the Java VM libraries.

00:23:26.500 --> 00:23:30.190
And the rest of this
should be set up fine.

00:23:31.390 --> 00:23:34.630
So the next thing we want to do is
Boink on the application settings.

00:23:34.690 --> 00:23:39.290
And this is where,
for those of you that read through

00:23:39.430 --> 00:23:42.450
the book they gave you yesterday,
you'll see there's a collection of

00:23:42.520 --> 00:23:45.420
information that goes into bundles,
whether they be app bundles,

00:23:45.420 --> 00:23:48.540
or they be frameworks,
or whatever they are.

00:23:48.670 --> 00:23:53.000
There is a Info.plist that is
defined in your application that

00:23:53.010 --> 00:23:54.820
defines a collection of properties.

00:23:54.860 --> 00:23:57.740
This pane here is where you go
ahead and set those kind of things.

00:23:57.790 --> 00:24:01.390
This is where you set all the
different CFBundle properties and

00:24:01.410 --> 00:24:05.120
any custom properties that you might
want to use in your application.

00:24:05.120 --> 00:24:07.390
So most of these are actually
set up correctly when you

00:24:07.430 --> 00:24:08.420
build your application.

00:24:08.420 --> 00:24:10.960
You can see your executables
defined as Metalworks.

00:24:10.960 --> 00:24:13.800
You could change that if
you're doing anything custom.

00:24:13.830 --> 00:24:18.220
The only one that we're going to define
in here is the CFBundle icon file.

00:24:18.250 --> 00:24:24.550
The icon file is where you would
drop all of your icons from Mac OS X.

00:24:24.710 --> 00:24:27.460
So in this case,
we've already got a file called

00:24:27.460 --> 00:24:31.180
metalworks.icns that we're going
to go ahead and push into there.

00:24:31.180 --> 00:24:33.890
Go ahead and hit return.

00:24:34.050 --> 00:24:36.100
So that's all we need to do in there.

00:24:36.100 --> 00:24:37.440
You can add things if you want.

00:24:37.440 --> 00:24:39.050
You don't need to.

00:24:39.420 --> 00:24:41.540
The defaults for the most part are fine.

00:24:41.630 --> 00:24:43.230
And then there's the executables pane.

00:24:43.240 --> 00:24:44.500
Go ahead and look in
the executables pane.

00:24:44.500 --> 00:24:46.880
This should be fine,
but it defines where the executables

00:24:46.880 --> 00:24:51.660
live and how Project Builder's going
to go ahead and run your executables.

00:24:52.000 --> 00:25:57.900
[Transcript missing]

00:26:00.690 --> 00:26:03.250
So what you can see here is
your standard Java application.

00:26:03.250 --> 00:26:06.400
You notice down in the dock there's
the icon for our application.

00:26:06.820 --> 00:26:09.630
That's the icons that
we actually put into,

00:26:09.630 --> 00:26:13.060
we defined in the properties pane,
and it's a standard Java application.

00:26:13.060 --> 00:26:16.040
The windows have Mac frames,
but this is standard Metalworks that

00:26:16.120 --> 00:26:18.060
you've seen in the Java distribution.

00:26:18.310 --> 00:26:20.180
So that's all set.

00:26:21.910 --> 00:26:24.040
So now at this point actually,
can we go back to the disk?

00:26:24.150 --> 00:26:26.780
Am I going to short circuit something?

00:26:26.880 --> 00:26:28.770
Go back to the finder.

00:26:32.200 --> 00:26:35.340
Okay, so now, and favorites, Java Dev.

00:26:35.340 --> 00:26:37.820
You can see on our disk,
we've got our Metalworks folder,

00:26:37.820 --> 00:26:39.300
which is where all of our sources were.

00:26:39.300 --> 00:26:40.780
You can see the source directory.

00:26:40.780 --> 00:26:43.380
Native is the little stubs
that we have in there.

00:26:43.380 --> 00:26:46.720
You can see the Metalworks.pbproj,
which is what you'll select

00:26:46.720 --> 00:26:48.000
to open it in the future.

00:26:48.000 --> 00:26:49.420
You can also see a build directory.

00:26:49.520 --> 00:26:51.480
If we open that build directory,
you'll see.

00:26:51.490 --> 00:26:54.150
We've got the different pieces
that go into our application.

00:26:54.160 --> 00:26:56.960
Intermediates is where our project
builder is gonna leave all of

00:26:57.280 --> 00:26:59.320
the intermediary build files.

00:26:59.320 --> 00:27:00.720
And you can also see the application.

00:27:00.720 --> 00:27:02.140
This is the application that we just ran.

00:27:02.220 --> 00:27:04.210
So if you double click on that,
it's gonna flip over.

00:27:04.220 --> 00:27:06.180
That's what project builder ran.

00:27:06.220 --> 00:27:09.620
So we've got an application on
our disk that's ready to go.

00:27:09.650 --> 00:27:11.360
So,

00:27:11.880 --> 00:27:14.350
That's the basic preparation phase.

00:27:14.550 --> 00:27:17.600
So, like I said,
and can we get the slides

00:27:18.090 --> 00:27:18.830
back up on the screen now?

00:27:21.720 --> 00:27:25.100
So like I said,
there's the basic preparation phase of,

00:27:25.100 --> 00:27:28.440
okay, you've got a lot of sources that
you want to dump on Mac OS X,

00:27:28.440 --> 00:27:29.800
and you want to get them up and building.

00:27:30.180 --> 00:27:32.600
Project Builder should make it very easy.

00:27:32.600 --> 00:27:35.240
You've got a collection of build
tools and that kind of thing

00:27:35.240 --> 00:27:39.970
that will help you and get your
Java application up and running.

00:27:40.120 --> 00:27:47.840
But in my opinion,
once the preparation's done,

00:27:47.840 --> 00:27:50.400
you've basically got a pie in a pan.

00:27:50.830 --> 00:27:59.430
There's still a bunch of steps that
you need to go through to build a

00:27:59.560 --> 00:28:05.390
full-fledged Macintosh application.

00:28:05.400 --> 00:28:09.270
We would love to believe that what
JavaSoft is touting as "write once,

00:28:09.560 --> 00:28:12.160
run anywhere" really is the case,
but in my opinion,

00:28:12.160 --> 00:28:15.170
what I've been trying to tell
developers for years now is that

00:28:15.470 --> 00:28:19.200
there's still a lot of work that
you -- maybe not a lot of work,

00:28:19.200 --> 00:28:20.610
a lot less work than you would
have to do if you're porting

00:28:20.610 --> 00:28:23.200
from Windows to Macintosh with C,
but there's still a fair amount of

00:28:23.200 --> 00:28:27.500
work you need to do to make your
application look and behave like

00:28:27.500 --> 00:28:29.960
Macintosh users are accustomed to.

00:28:30.050 --> 00:28:33.290
If you've got users that are accustomed
to your own custom UI framework,

00:28:33.290 --> 00:28:35.200
like Oracle had and that kind of thing,
that's fine.

00:28:35.260 --> 00:28:37.870
And that's different from
Mac users and Windows users.

00:28:37.960 --> 00:28:40.200
But in the case where you're trying
to write an application that's

00:28:40.200 --> 00:28:43.620
transparent to the end user what
the development environment is,

00:28:43.870 --> 00:28:46.200
then you've still got
work to do to get there.

00:28:46.200 --> 00:28:48.000
The first most obvious thing that
you probably saw in Metalworks,

00:28:48.000 --> 00:28:48.000
which is the development environment,
is that you've got to build

00:28:48.000 --> 00:28:48.000
a full-fledged Mac OS X.

00:28:48.010 --> 00:28:49.860
And that's a big problem.

00:28:50.090 --> 00:28:52.000
And the other thing that we saw in
Metalworks running is the look and feel.

00:28:52.000 --> 00:28:55.000
The look and feel looked
like a Java application.

00:28:55.000 --> 00:28:59.000
It didn't look like what
Macintosh applications look like.

00:28:59.000 --> 00:29:00.000
And this is a problem.

00:29:00.000 --> 00:29:04.000
So what we've done and what
you've seen in previous demos

00:29:04.000 --> 00:29:08.000
is the Aqua look and feel,
the Mac OS look and feel for Swing.

00:29:08.000 --> 00:29:12.790
And what we've done is implemented
a look and feel that will run both

00:29:12.950 --> 00:29:16.020
on Mac OS X now and we actually
are investigating project plans to

00:29:16.110 --> 00:29:16.990
bring it back to Mac OS 8 as well.

00:29:17.000 --> 00:29:20.890
The layers on top of Swing that takes
advantage of the Macintosh toolbox,

00:29:21.030 --> 00:29:27.000
that takes advantage of Carbon and lets
you write Swing applications that feel

00:29:27.000 --> 00:29:30.000
or at least look like Mac applications.

00:29:30.000 --> 00:29:32.920
The first thing to keep in
mind is it's Mac OS native.

00:29:33.020 --> 00:29:34.990
It's implemented on top of Carbon.

00:29:35.190 --> 00:29:37.000
This has a couple of implications.

00:29:37.110 --> 00:29:38.870
First of all, it should be fast.

00:29:39.000 --> 00:29:41.880
Second of all,
it won't run on other platforms.

00:29:42.000 --> 00:29:46.000
We have no intention of bringing
the Mac look and feel to Windows.

00:29:46.000 --> 00:29:46.000
I don't really want to do that.

00:29:46.000 --> 00:29:49.000
So we have no intention.

00:29:49.000 --> 00:29:50.780
It's layered on top of Carbon.

00:29:50.790 --> 00:29:52.790
It uses the Carbon infrastructure.

00:29:53.090 --> 00:29:57.770
And the most important thing from
my perspective is that you're

00:29:57.770 --> 00:30:02.380
going to get the Aqua appearance on
Mac OS X or the platinum appearance

00:30:02.380 --> 00:30:05.000
on Mac OS 8 or classic Mac OS.

00:30:05.000 --> 00:30:07.580
And most importantly,
you'll get the changes that are

00:30:07.580 --> 00:30:11.000
made as the underlying platform
progresses with no work on your part,

00:30:11.000 --> 00:30:14.870
more importantly to me,
no work on our part.

00:30:15.040 --> 00:30:18.290
Since it's layered on top of Carbon,
as the behavior, the looks,

00:30:18.290 --> 00:30:21.130
and that kind of thing of
the experience changes,

00:30:21.130 --> 00:30:25.000
our calling through Carbon will
exhibit that in your application.

00:30:25.000 --> 00:30:28.770
So let's say it tinges on scroll bars,
any of the looks of the

00:30:28.810 --> 00:30:32.350
Aqua appearance as they change,
your application will

00:30:32.350 --> 00:30:33.860
pick them up for free.

00:30:34.000 --> 00:30:38.000
Like I said, you get the platinum
appearance on classic Mac OS.

00:30:38.000 --> 00:30:40.350
We don't have product
plans for that immediately,

00:30:40.350 --> 00:30:41.990
but we do intend to roll that out.

00:30:42.000 --> 00:30:43.880
We just don't have a
release platform for it.

00:30:44.000 --> 00:30:48.000
That was where the initial work
was done for the look and feel,

00:30:48.000 --> 00:30:49.870
was on top of classic Mac OS.

00:30:50.190 --> 00:30:52.000
The other thing is menu placement.

00:30:52.000 --> 00:30:55.090
Menu placement is one of those
things that Windows users,

00:30:55.140 --> 00:30:57.000
Mac users fight about all the time.

00:30:57.000 --> 00:31:01.530
And we've been fighting with with
Swing is Swing traditionally has had

00:31:01.530 --> 00:31:05.000
the menus associated with Windows,
which in my opinion is wrong.

00:31:05.000 --> 00:31:07.870
So for the Mac look and feel,
we've allowed you to change

00:31:07.870 --> 00:31:10.870
the menu placement so the menus
are in the right place where

00:31:10.880 --> 00:31:12.990
Macintosh users will expect them.

00:31:13.070 --> 00:31:15.940
So that when you bundle
your application up,

00:31:15.940 --> 00:31:19.000
it will look like a
Macintosh application.

00:31:19.000 --> 00:31:21.920
So to enable this, it's super easy.

00:31:22.060 --> 00:31:23.000
It's super easy.

00:31:23.000 --> 00:31:26.150
Right now, what you've got on your
CD doesn't have it on by default,

00:31:26.150 --> 00:31:29.000
largely because it's
still got bugs in it.

00:31:29.000 --> 00:31:31.350
We're still not completely
happy with what's on the CD,

00:31:31.350 --> 00:31:33.950
so we've still got some work to do,
so it's not on by default.

00:31:34.070 --> 00:31:36.000
But to turn it on just to play with it,
it's super simple.

00:31:36.000 --> 00:31:38.000
It's just like enabling
any other look and feel.

00:31:38.000 --> 00:31:42.000
You go ahead and call
uimanager.setlookandfeel to comapple.

00:31:42.000 --> 00:31:45.980
MRJ, Swing, Mac look and feel,
just like you would any

00:31:45.980 --> 00:31:46.810
other look and feel.

00:31:47.080 --> 00:31:49.000
And then if you've got a
pre-existing component tree,

00:31:49.000 --> 00:31:51.990
you're going to have to go ahead and tell
your component tree to update itself,

00:31:51.990 --> 00:31:56.540
to walk through and update the
look and feel so that it becomes

00:31:56.550 --> 00:31:58.920
visible and catches exceptions.

00:31:59.060 --> 00:32:01.000
Kind of standard Java kind of stuff.

00:32:01.000 --> 00:32:02.750
There's nothing you need to do.

00:32:03.470 --> 00:32:06.080
To get the Mac OS menu placement,
if you're writing standard

00:32:06.080 --> 00:32:08.180
swing applications,
you're probably already

00:32:08.180 --> 00:32:09.640
doing what you need.

00:32:09.810 --> 00:32:13.510
All you need to do is
call jframes set jmenubar.

00:32:13.730 --> 00:32:17.650
That will set the menu bar that you
need and put it in the right place.

00:32:17.840 --> 00:32:19.600
There's a couple of things
you need to keep in mind.

00:32:19.690 --> 00:32:23.260
First of all,
you can't have an AWT menu bar

00:32:23.430 --> 00:32:25.650
associated with it at the same time.

00:32:25.660 --> 00:32:26.550
You need to pick.

00:32:26.610 --> 00:32:29.240
You're going to need to pick
swing menus or AWT menus.

00:32:29.240 --> 00:32:32.290
You also can't do this
on jdialogues right now.

00:32:32.300 --> 00:32:33.600
They don't support heavyweight menus.

00:32:33.760 --> 00:32:38.840
So, and there will also be a property
to be able to disable this.

00:32:38.920 --> 00:32:41.630
So let's say the architecture of
your application in the short term

00:32:41.630 --> 00:32:44.960
isn't set up to be able to deal
with menu bars in the right place.

00:32:44.960 --> 00:32:48.200
There will be an architecture
to be able to disable this.

00:32:48.290 --> 00:32:50.990
Although, we'd really rather you put
them in the right place.

00:32:51.060 --> 00:32:53.830
So, but like I said, it's super easy.

00:32:53.860 --> 00:32:56.700
Basically,
to get the Mac look and feel for swing,

00:32:56.700 --> 00:32:59.550
it takes almost no effort
on your part to enable it.

00:32:59.670 --> 00:33:02.060
So, if we could get this screen up.

00:33:02.190 --> 00:33:02.290
Okay.

00:33:02.420 --> 00:33:03.900
Demo one up on the screen.

00:33:04.000 --> 00:33:06.000
Oh, cool.

00:33:06.000 --> 00:33:07.750
So, like I said, it's super easy.

00:33:07.760 --> 00:33:09.700
Let's go back into project builder.

00:33:09.700 --> 00:33:12.860
In project builder,
you've got your metalworks.java which,

00:33:12.860 --> 00:33:15.000
in this case,
is where we define the Mac look and feel.

00:33:15.000 --> 00:33:18.230
So all we need to do is
enable the Mac look and,

00:33:18.270 --> 00:33:20.250
is where you define your look and feel.

00:33:20.380 --> 00:33:23.060
So all we need to do is
basically comment out the line,

00:33:23.100 --> 00:33:26.600
uncomment the line that
sets the metal and comment,

00:33:26.690 --> 00:33:29.560
do the right thing.

00:33:29.670 --> 00:33:32.060
Rebuild.

00:33:32.300 --> 00:33:34.980
We'll take just a second.

00:33:39.100 --> 00:33:44.700
[Transcript missing]

00:33:46.900 --> 00:34:13.400
[Transcript missing]

00:34:14.500 --> 00:36:46.800
[Transcript missing]

00:36:48.830 --> 00:36:53.480
So finally, there's the final step of,
okay, we've got an application that

00:36:53.490 --> 00:36:57.680
looks like a Macintosh application,
behaves like a Macintosh application.

00:36:57.700 --> 00:37:00.640
We now need to deliver it to our users.

00:37:01.020 --> 00:37:05.650
This is something that actually I'm
kind of excited about on Mac OS X.

00:37:05.800 --> 00:37:08.700
Mac OS X has created
this concept of a bundle,

00:37:08.700 --> 00:37:10.600
and what I would suggest you do is,
I was actually leafing through

00:37:10.710 --> 00:37:13.700
the documentation we gave
you when you first got here,

00:37:13.700 --> 00:37:17.700
there's a really good chapter in
that book on what bundles are.

00:37:17.700 --> 00:37:19.700
There's application bundles, frameworks,
that kind of thing.

00:37:19.700 --> 00:37:23.700
It gives you a good breakdown
of what all goes into a bundle,

00:37:23.700 --> 00:37:25.760
and when you're building
heavyweight applications,

00:37:25.760 --> 00:37:26.660
you should be familiar with that.

00:37:26.770 --> 00:37:30.690
And that's what we are taking
advantage of on top of Mac OS X.

00:37:30.830 --> 00:37:34.700
So Java applications are bundled
just like any other applications,

00:37:34.700 --> 00:37:36.490
where you've got your Info.plist,
which I pointed out

00:37:36.490 --> 00:37:38.760
before in project builder,
is where you define

00:37:38.760 --> 00:37:40.600
Macintosh-specific settings.

00:37:40.710 --> 00:37:43.570
You'll also notice
there's a Mac OS folder.

00:37:43.740 --> 00:37:47.240
Inside of the contents folder,
and the contents folder is what contains

00:37:47.240 --> 00:37:49.630
all of the meat of your application.

00:37:49.700 --> 00:37:53.290
Inside there, there's a Mac OS folder,
which is where the native

00:37:53.580 --> 00:37:55.700
stub application lives.

00:37:55.700 --> 00:37:58.050
For the most part,
you're not going to care about that if

00:37:58.050 --> 00:38:00.750
you're doing a pure Java application,
because we're going to

00:38:00.750 --> 00:38:01.700
generate that for you.

00:38:01.700 --> 00:38:05.700
With project builder GM,
we're going to generate that for you,

00:38:05.840 --> 00:38:08.950
but that's what was generated
with the little stub code

00:38:09.080 --> 00:38:10.690
that I showed you previous.

00:38:10.700 --> 00:38:12.690
You can also notice the resources folder.

00:38:12.760 --> 00:38:16.710
So the resources.java is where all
your Java-built stuff is going to go,

00:38:16.830 --> 00:38:18.940
and is also where your
mrj-apps.properties goes,

00:38:18.940 --> 00:38:20.700
and all the other resources
that go along with it.

00:38:20.700 --> 00:38:23.190
So it's pretty well laid out,
and this should be

00:38:23.190 --> 00:38:24.700
obscured from the user.

00:38:25.120 --> 00:38:31.780
We created a tool so that if you've
already got a built Java thingy,

00:38:32.530 --> 00:38:36.050
You can drop,
you can bring your pre-built jars or

00:38:36.050 --> 00:38:38.350
zips or whatever over to Mac OS X.

00:38:38.350 --> 00:38:42.730
You don't need to go through the
full series of steps on building your

00:38:42.730 --> 00:38:44.330
application with Project Builder.

00:38:44.430 --> 00:38:46.390
Let's say you've got an
application that has a jar already.

00:38:46.390 --> 00:38:50.090
What you would do is use the
MRJ app builder to define

00:38:50.250 --> 00:38:52.380
all the same kinds of things.

00:38:52.460 --> 00:38:55.460
Point at your MRJ properties,
MRJ app.properties file,

00:38:55.460 --> 00:38:58.590
point at your configuration files,
any of your applications,

00:38:58.590 --> 00:38:59.400
that kind of thing.

00:38:59.400 --> 00:39:03.400
Um, and MRJ app builder will cons
up an application for you.

00:39:03.400 --> 00:39:06.210
So you don't have to go through
Project Builder if you don't want

00:39:06.270 --> 00:39:07.320
to and it'll have the same effect.

00:39:07.400 --> 00:39:09.740
Um, but pro-this,
this functionality is being

00:39:09.740 --> 00:39:11.320
merged into Project Builder.

00:39:11.390 --> 00:39:14.890
So Project Builder is
gonna do the same thing.

00:39:15.440 --> 00:39:18.500
The other cool thing, in my opinion,
about the bundle model is it's

00:39:18.600 --> 00:39:22.220
going to carry back and forth
between classic Mac OS and Mac OS X.

00:39:22.520 --> 00:39:27.720
The goal by Mac OS X GM for us is for
you to be able to build an application

00:39:27.770 --> 00:39:34.280
bundle that will carry from Mac OS X to
classic Mac OS with basically no changes.

00:39:34.400 --> 00:39:36.320
The packaging is the same.

00:39:36.410 --> 00:39:41.640
Mac OS 9 is aware of Mac OS X bundles
and should display them to users as a

00:39:41.640 --> 00:39:44.400
single double-clickable application.

00:39:44.400 --> 00:39:48.540
The folder nature will be
visible on pre-9.0 systems,

00:39:48.540 --> 00:39:52.690
and the way that we're going
to deal with that is if you,

00:39:52.690 --> 00:39:55.400
again, this is all documented in the
book that you got earlier,

00:39:55.400 --> 00:39:58.330
but the way that you're going to
get around that is your Macintosh

00:39:58.330 --> 00:40:01.400
application folder is going to have an
alias at the top to the classic thing,

00:40:01.400 --> 00:40:06.400
so that your pre-9.0 users will open that
folder and double-click on the alias.

00:40:06.400 --> 00:40:12.380
Now in DP4,
you can build Mac OS X applications.

00:40:12.400 --> 00:40:13.400
We don't have the support for you yet.

00:40:13.400 --> 00:40:17.380
We will for GM to be able to
build classic Mac OS applications.

00:40:17.400 --> 00:40:19.990
So for GM,
you'll be able to build a job application

00:40:19.990 --> 00:40:26.400
bundle that has the information for
both classic Mac OS and Mac OS X.

00:40:26.400 --> 00:40:28.130
For what's on your CD,
you're not going to be

00:40:28.200 --> 00:40:29.390
able to do that right now.

00:40:29.400 --> 00:40:34.390
So that's basically how you get
to a full packaged application.

00:40:34.400 --> 00:40:37.390
The things I want you to take home is,
first of all,

00:40:37.390 --> 00:40:40.350
that the development environment,
while it's a little different,

00:40:40.410 --> 00:40:42.400
isn't really all that different
than you're familiar with.

00:40:42.400 --> 00:40:46.400
If you're familiar with Unix,
then all the tools that you're

00:40:46.400 --> 00:40:48.400
familiar with are available.

00:40:48.400 --> 00:40:52.160
But also, if you're an MRJ developer,
we've provided a collection of

00:40:52.280 --> 00:40:55.400
tools and interface to abstract
you away from the Unixisms.

00:40:55.400 --> 00:40:58.840
You'll notice we never, in this demo,
never went down into a command line

00:40:58.840 --> 00:41:00.380
to do any of that kind of work.

00:41:00.440 --> 00:41:02.400
Project Builder should take
care of all that for you,

00:41:02.400 --> 00:41:04.260
but if you need to,
you can go down in there.

00:41:04.400 --> 00:41:08.400
Like I said, we've got a collection of
enhanced development tools,

00:41:08.510 --> 00:41:12.840
we've got the ability to create a fit
and finish that makes your application,

00:41:12.840 --> 00:41:15.540
the fact that your application
is a Java application,

00:41:15.730 --> 00:41:18.060
transparent to the users,
and we've created a

00:41:18.060 --> 00:41:20.390
simple delivery mechanism.

00:41:20.400 --> 00:41:26.390
So my goal and my hope is that you'll
be able to go home with what I've

00:41:26.390 --> 00:41:31.720
given you and the CD that you've got,
with the ability to create a fully

00:41:31.850 --> 00:41:34.710
bundled Macintosh application.