---
Title:  Aqua Overview
Year:   2000
Web:    https://nonstrict.eu/wwdcindex/wwdc2000/140/

[!] This transcript was generated using Whisper, it has known transcription errors.
---

Just carbonizing your app, although that will get you on 10, isn't really going to necessarily deliver the full user experience that users are going to come to expect when they start using the OS in general. They're going to be looking for things like sheets and different behaviors that Aqua presents.

So this session helps you understand what that design philosophy was behind Aqua so that as you start to bring your app to 10, you can start to design your interface and your user experience around that. So to talk about the design of Aqua, I'd like to introduce It's Don Lindsey, the head of the human interface team here at Apple.

Thanks John. Okay, Aqua Overview. I'm going to talk about Aqua today. I'm not going to talk about architecture, I'm not going to talk about frameworks or APIs. In fact, I promise I won't show any more slides like this at all. This is the only one. What I do want to talk about is what is Aqua?

Steve, when he introduced it, said it is the user interface of Mac OS X. and I want to expand on that a little bit because I think there are some misconceptions. I also want to talk about what is new in Aqua. What have we introduced? Many of you today probably already have applications shipping on Mac OS 9. I want to point out those things which are a little bit new in Aqua that you should be aware of.

I also want to talk about what we've changed since Macworld. We introduced this thing almost six months ago now, and we haven't just been sitting back. We've been pretty busy. Steve mentioned we've been listening to the feedback we got from you having played with Developer Preview 3, and we're making some changes.

We're making improvements. And finally, at the very end, I'm going to bring John back on stage, who's going to list for you all of the sessions that are related to adopting Aqua. So let's get started. What is Aqua? Well, judging by the email I get and what I read online, I'm beginning to think that Aqua is a kaleidoscope scheme. Or it's a SoundJam skin, or it's one of those things. Aqua is the user interface for Mac OS X.

Okay, what does that mean? What do we say when we say it's a user interface? Well, obviously, it is an appearance, yes. But it's also a set of behaviors. It's how things respond when you select them. It's also a set of features that we provide that are available to you, things like our Save panel, our Print panel, that you can use and adopt to deliver Aqua in your applications.

It's also a collection of applications that we ship, like the Finder and various utilities that we ship. Collectively, this describes the user experience of Mac OS X. So again, user experience is not just appearance, but it is behaviors, and it is a set of features that you can adopt. Now what you may find surprising is that from my standpoint, you're also contributing to Aqua.

If you carbonize your app and you deliver it on Mac OS X and you do a really poor job of adopting Aqua, then you're weakening the user experience of Mac OS X. People are going to run it and they're going to be confused. For years and years, we have been touting consistency as one of the most important aspects of the Macintosh user experience. So it's important for me, it's important for Apple, that you understand what we're trying to achieve with Aqua. So that's what I want to talk about.

When we started Aqua, almost two years ago, we started thinking about this new user experience we wanted to deliver. We've stated a number of goals, things we wanted Aqua to achieve. The very first of which was that Aqua had to deliver the best user experience of any commercial operating system on the market, unsurpassed. Somewhat of a lofty goal, but we're up to the task. It had to be fun. We wanted to bring back joy of use to computers. Things have gotten so complex that we had to find ways to address this. We had to find ways to make it simpler.

Mac OS has a very long tradition of setting the standard for ease of use in our industry. and with Aqua, we wanted to build on that. We didn't want to just throw that away and start again. We know what the strengths of Mac OS 9 are. We had full intentions of using them in Aqua, but we also saw opportunities to improve upon that.

[Transcript missing]

Finally, we wanted Aqua to be recognizable. We wanted it to have a strong identity. Apple is about leadership and product design. And we've been hugely successful with our hardware in the last two years. And now with Aqua, we want to do the same with our software.

So what is new? You have a Mac OS 9 app. You're carbonizing it. Things that you should be aware of. So first of all, appearance. Appearance is new in Aqua. And there is only one appearance in Aqua. This is it. This is the very first slide that was publicly shown at Macworld.

Revealing the user interface or the appearance of Aqua. Today I actually considered giving slides of each and every control and talking about them all, but then I said, I don't have to do that. I could just show this. This really captures all of what the appearance is trying to achieve.

This button speaks to what the design language of Aqua is. It is light, it is clear, it is fresh, it is clean, it is crisp, it is subtle. Where platinum relies on black lines and gray lines to define frames of windows and the shapes of buttons and the volume of a button, Aqua uses much more subtle visual cues. We're using shadow, we're using light, we're using color, we're using color. We're using very subtle tonal gradations. We can do this because we've got quartz. We've got this great graphics engine underneath that allows us to draw these to the screen very fast.

So rather than linger on each and every control and walk you through all those, I thought I'd rather look at more interesting parts of the appearance. Other areas which are related to appearance but are not directly related to how a control looks. And one of those is translucency. Now, we played around a lot with translucency.

We tried translucent windows and we tried all sorts of controls that were fading in and fading out. And what we discovered in all of that exploration was that translucency is a novelty. That you could very quickly tire of this. So our conclusion was that translucency only added value if it had meaning.

This is very important because this comes up again in something else I'm going to talk to. We chose to use translucency on those controls which are of more transient nature. So for example, I can see here a menu. Um, menus come and go. They only exist for a very short time. You make a selection and it disappears. Translucency is nice because it reinforces that a menu is very light.

Likewise, we use translucency in our sheets. Sheets, again, typically only exist for a short time. They're usually not presented for long periods of time. Saving a document, printing a document, or an alert, for example. Sheets come and go. Therefore, translucency was perfect. Translucency was perfect for sheets as well because sheets are tied to their parent document. Of course, they obscure some of the content that's underneath. So using translucency allowed you to reveal just enough that was underneath to remind you what that document was.

Like translucency, we had the opportunity to use a lot of color in Aqua. And we tried a lot of colors. We played around with color for the better part of the last year, trying to find what kinds of colors, what palette to use, what would be our theme of our color.

But like translucency, we came to the conclusion that color was useful only again if it had And in this example, in this dialogue where you see an assortment of controls, color says, I am the selected control. I am the one you've chosen. In the tab, for example, that is the selected tab. Radio buttons, check boxes, and even the pop-up says that I am the current choice that you have. That's the meaning of color and how we've chosen to color our controls.

In the windows, we actually have used three colors. We have three controls in our title bar. We've carried forward from Mac OS 9. We have the close box. We have the minimize control. And we have the zoom control. And they have very different functionality. So we decided, first, we knew we wanted to group them. Secondly, we had to distinguish them somehow. So we chose to go with three colors. It's somewhat of a playful decision, but I think it's quite effective.

One interesting aspect of the appearance, it's related to appearance, but it's not specifically how something is rendered, but rather our approach to how we've chosen to organize the screen. These three examples, actually including the doc, four examples, show how we've decided to take a more center justified, actually that's not even correct, I would say center biased approach to organizing the screen.

The sheet is in the middle of the window. The controls in the dialogue have a more central alignment, central biased alignment to them. The tabs are in the middle of the window. Even in the QuickTime player, the play control, the most important control on that window, smack in the middle. Other controls are organized around that.

The dock is centered. It remains centered, regardless of how many things you add or remove. It always stays center aligned on the screen. Even the Apple logo you see in the menu bar, even that center of the screen. This is an important change because platinum was typically more left justified. We've changed it a little bit. This is primarily an aesthetic decision. It's about achieving balance and symmetry. We think it makes for a much cleaner design.

So beyond appearance, we've added a few new behaviors. We've changed some behaviors. Mac OS, when it was first introduced, and what it popularized in graphical user interfaces, were two key tenets. One, direct manipulation. When you grab something on the screen and moved it, you were moving that object. You were operating on that object. And yet for 15 years we've been dragging gray rectangles around the screen. Aqua changes that. We have live dragging. We have live resizing. Live scrolling. Everything is live. We've taken direct manipulation all the way to its conclusion.

The other thing that was about Mac OS that was respected was the fact that it provided feedback. It told the user at any time, "This is what you are doing. This is the status of the task that you're trying to accomplish." In Aqua, again in part thanks to Quartz, we have the ability to do more interesting animations and transitions. We're able to say, you saw this morning in the keynote, a minimized window, how it animates into the dock. We're able to achieve that. We're able to illustrate to you where this window is going to. It's really quite successful.

So in addition to behaviors, We looked at introducing a few new features, user interface features. Now these are things that are available in our frameworks in Carbon and Cocoa that you can take advantage of. And we've designed them to solve specific problems that we recognize exist today, not just in Mac OS 9, but in all operating systems. When Mac OS was originally built, designed and built, you could only open one document at a time.

You can only run one application at a time. Things have changed a little bit since then. It's not uncommon today to have for an intermediate or an expert user to have five to ten applications running. Fifteen to twenty windows open on the screen. This is chaos. So we've looked for ways to help people focus on what they're trying to accomplish.

We look for opportunities to introduce new features to reduce the modality in the system. Areas or at times during a task where you are blocked, we try to reduce that. I'll explain a little bit more of that when we get to that feature. And finally, we look for ways to help people manage all this clutter on the screen, all these windows. So let's look at a few of these features.

window layering. Now, if you're familiar with Mac OS, you know that if I have, say, five windows open in a word processor, and I just want to one of those to work on. If I select it, all five windows come to the front. It's not what I wanted. I just wanted that one.

It's not, it reinforces the fact that we are, we remain in Mac OS 9 very conscious of applications and the layering between applications. So with Aqua, we wanted to change that. We wanted to move more towards focusing on the content, on the document the person's working on. So we've changed the way windows layer. We now allow full interleaving of windows between applications.

So when I've got five word processing documents open and I just want to work on one and I at the same time perhaps have ten illustrations open and say my task is to copy one of the illustrations into my word processor, I don't need to bring all five illustrations forward. I just bring the one I want. And I put it into the word processing document I want. We think this is a much more natural way to work.

and it really facilitates moving content between individual documents without having to be conscious about applications coming forward and receding. Sheets. Sheets show, Steve showed sheets. That's a tough word. He showed that in the keynote this morning. This is a really important concept. Not just a nifty way to show a window opening. It's really important.

And it's important because It takes modality in the system to the document. Today in Mac OS 9, if I want to save a document in my word processor, I'm presented with what's called an application modal dialog. There's nothing else I can do in that application while that dialog is open. I can switch to another application, but maybe that's not what I want. Maybe I want to switch to another document to check something. So now we've taken modality to the document level. Each document-- I can open a save sheet on five separate documents if I choose.

Now the interesting thing about sheets to reinforce this document modality is that sheets are attached to the document that they were generated from or that they apply to. So as I move the document around, the sheet follows it. That's an example of how a behavior reinforces this relationship between these two windows. And we've seen some examples today. Steve showed a save sheet. Maybe he should have showed print. That would have been easier.

Drawers are interesting. We did not see drawers in the keynote this morning, although Steve did show drawers in his keynote at Macworld. He showed it in the context of our mail client. Now drawers are a way for us to provide access to less frequently used controls. This is part of managing the clutter.

This is a way for you to decide perhaps there is a set of controls or a set of functionality that doesn't need to be in the user's face all the time that maybe I want to put into a drawer. They're easy to get at, easy to open. You can leave them open if you so choose. And we'll show that mail example today in a demo. I think you'll find that pretty interesting.

and then use with changed menus a little bit uh... Two menus were lacking on Mac OS as it matured and we reached a point where we were running multiple applications and had multiple documents open. It was obvious that we had no menu that was generic to the application itself.

Previously, and as is the case in Mac OS 9 today, we have a Quit in the File menu, and we have Preferences string elsewhere. So we've created an application menu. This menu is intended to provide commands that apply to the application as a whole. Don't apply to a specific document or the content in that document. And we've made it the first menu on the menu bar.

So we've created a nice hierarchy. We have the very first menu, which is your application menu. The next one applies to the document, opening and closing and printing. And then every menu after that is about content. That creates a very nice hierarchy. It's very easy to understand. Now in DP3, we used to put the application icon in the menu bar. And now in DP4, we put the application name in the menu bar. We're going to make this a user preference. We'll let people choose. What do you want?

Now, one of the things that's interesting is, of course, we can have applications with very long names. So what we're asking of you is to provide a short name. We looked at the top 100 applications that ship on Mac OS today, and of those we found virtually all had common short names. Microsoft Internet Explorer is often referred to as Explore. Mavis Beacon teaches typing.

I don't know. Mavis. So we're asking you to provide a short name for your application. And that short name is described in the application package and it is used in this menu. Now we also introduced a window menu to help you manage windows. Now as I said, of course, we've changed how layering works. Layering is providing interleaving windows between applications. A window menu is to help you when you are in an application get access to other windows that might be obscured.

Now another new feature which we demonstrated at Macworld, which we think is a very important concept, is the notion of single window mode. Single window mode was designed to help people focus on their task. It was designed to allow you to work on a single window and have the feature minimize all the other windows out of your view to help you deal with that clutter.

Now we recognize that this is a very important concept. We really believe strongly that there is a solution in this domain to help people manage their clutter. We also are not altogether stupid. We recognize that It's a great feature, but it needs a little bit more work. We've got to refine how this works a little bit more.

So we're going to keep working on single window mode because we think it's important. So all I ask you is to keep watching. We're going to make some changes. So what I'd like to do is invite Bas Sorting on stage. Bas is a member of the user interface group. There we go.

Thank you. Is my audio working? Yes. Bas is going to take us on a little tour of Aqua. Now, I'll take the risk that we may repeat much of what you might have seen in the keynote this morning, but I think what we'll do when we go through this is point out some of the details that may not have been obvious. Bas?

Here we have another Aqua panel showing some of the controls. As you can see, we have used blue to highlight, to accent the widgets. So if you select the checkbox, it turns blue. The pop-up menus, nice windows. Here again, blue to accent the... For the throbbing button, we used to show activity and focus. So you know what you're going to hit when you press the return key. Let me go on and show a window.

Well, as Don said before, we try to avoid using black lines and borders around windows and controls. So it keeps it really clean and much fresher and there's more focus on the contents of the window. The title bar controls show the glyphs when you roll over. Dragon Windows Surround is live, which is really nice. And they also know about the boundaries of the screen. So if you would move them up to the menu bar, they would stop there, which is a nice little feature. Let me bring up a second window.

So you can see the shadows a little bit better. And you can also see the difference between active windows and inactive windows. If the window gets active, it gets more shadowed, so it gets lifted up from its background, so to distinguish better between active and inactive windows. Also, you notice that the title bars go inactive, go translucent, and the controls lose their color.

to bring up another window. This is an example of how the interleaved windows can work. So now if I would click on this image here, I only bring that window to the front and not the other window as well. So I still have this window in between the two others. This allows me to, for example, drag something in this window. And let me try and add some text here.

[Transcript missing]

So from here you can select your fonts and I, let me pick something here. Okay, one more feature was the menu showing the transparency, which is really nice because they're transient and this makes them feel much more lightweight. The same thing happens also in Sheets. Again, the transparency so you can see the image underneath, so you still see the content from the window that it applies to. Let me see. If the window is too small, You would get the little genie effect. Again, and if the window is too close to the edge of the screen, it will move the window and move it back as soon as you're done. So let's close this.

One next thing I want to show is drawers. So like in Mail, there's the drawer, which is really handy. Because you can-- oh, sorry, cancel. This, by the way, shows the animation of the progress bars in Aqua. And let me show it again. Because even though the messages might stall for a bit, the throughput, you still get feedback that it's still alive, it's still doing something.

And the progress bars in Mac OS 9, they would get stuck and it would look like the system is frozen or something. So this provides much better feedback. One more thing I wanted to show about the drawer is if you drag messages around, you can, depending on the direction that you drag, you can choose where the drawer is going, to the left or the right.

And even when this is closed, I can still start dragging a message and pop open and I can drop it in a mailbox. and the drawer with hide automatically again and again here this some more live tracking going on a lot of life stuff it's all direct manipulation Notice by the way in the scroll bars the animated texture makes it look more fluid. Don, this is it for now. Don will continue. I'll be back later. Open up a couple more documents again. I just want to point something out.

So here is a good example of the interleaved windows. A couple other features we've introduced is the ability to operate on inactive windows. For example, we can close a window that's in the very back without having to first bring it forward. Also new in DB4, this is something that didn't exist in DB3. This is a Cocoa app that's exhibiting a Mac OS 9 behavior, the ability to move inactive windows. I have a slide on this a little bit later, but we're actually looking at bringing a lot more consistency between Cocoa and Carbon. I'll be back.

So that was just a quick tour. Give you an idea of some of the things that are in Carbon. What I want you to look for is when you see these screens-- and you've been looking at Aqua all day long in a lot of these third party demos and our demos.

And I want you to-- I want you to decide if you think that this is, if you feel anything that we have tried to convey with it. Do you feel that this is in fact lighter and more fresh than platinum? Because this was an important goal for us. I'd be interested in knowing if you think we've achieved that or not. Okay, since Macworld, it's been five months, we've done a few things, things that are in DP4.

First of all, as I just mentioned, we have more consistent behaviors. Cocoa and Carbon have very different heritage. We've changed the behaviors to try and make them more consistent between the two. I don't believe that as a user you should be able to distinguish between Cocoa and Carbon. And that's something we're trying to achieve.

That's been mentioned a few times today, but we changed the size of controls. When we first unveiled Aqua, we had very large controls. And that was intended to compensate for much higher resolution screens that we're seeing today. You've probably noticed that if you take your iMac, set it at the very highest resolution, those tiny little 32 by 32 icons are getting a little difficult to hit. So our original intent for Aqua was to make things a little bit bigger to compensate for that.

We also realize that that added more effort to carbonization effort. So we made a good business decision and that is we've taken controls back down in size and the fonts, system font sizes, to make them more consistent with Platinum in an effort to facilitate carbonization. It should be easy.

We've enhanced the finder. Steve mentioned this morning we've made it more Mac-like. In the next demo we're going to show you, I want to point out exactly how we've done that. We've refined the dock. The dock is a very important feature in Mac OS X and in Aqua. And we want to get this right.

It is the center of all of what you are doing, all of the tasks you're performing. It's your apps, it's your documents, your windows, folders. It is your work. So we want to get this right. It has to work for you. So we made changes. And finally in DP4 we revealed our new direction that we're going with icons.

We have a new style. I'm going to walk you through that, explain it. So let's have a look. Let's start with the Platinum controls. Here we have, here's a typical Platinum dialogue you'd see today. Now when you run it, you aquify it. Same size controls. Much, much easier.

One of the complaints we got in DP3, well, and from Macworld really, was this whole notion of how we've changed the finder really upset people. and I read websites, I get email, I've heard the complaints. Steve makes a point of forwarding them to me. And all those complaints didn't fall on deaf ears. So we tried to understand what it is about the finder that is important in Mac OS 9, in all versions of Mac OS. What characteristics of that finder do people want to preserve?

[Transcript missing]

We also preserved a few of those things, a few characteristics that we believe are important. We'll look at those in a demo. So again, we preserve the view for each and every folder. This is a key characteristic of the Finder in Mac OS 9. The layout, the view type, icon size, the order of the columns, the columns that are visible, all of those are saved, just like they are in Mac OS 9.

As you're navigating down your file system, each folder that you encounter, if you had set it to a specific view, it will be preserved and it will be presented that way. We've added a few more view options. We're going to show you some of those. I think they're kind of fun.

We believe that column view for navigation is really an exceptionally good way to quickly navigate the hierarchy. And we've combined that with the ability to present a folder in its preserved view. So what we really believe we have achieved is leveraging the strength of column view as a navigation mechanism, fast navigation mechanism, and icon and list view as a presentation method of showing the contents of the folder. And we'll show you how we've combined those two. Finally, we've allowed preferences to have removable media show up on the desktop when you insert it. I put my CD in, my zip disk, boom, shows up on the desktop.

We're also going to allow you to put it in the dock, too. In part because the dock is on top. The desktop gets buried. I think that'll be a popular preference. The Dock. As I mentioned, the Dock is a very important feature in Mac OS X. It's about organizing your work. It's about your favorite things, getting access to things.

And when we designed the doc originally, and we demonstrated it in Macworld, that doc had no structure to it. It was completely unstructured. The user could choose to organize it any way they wanted. We believe that people wanted that. And the feedback we got was, you know, we'd appreciate it if you actually gave us a little bit of structure, or you enforced a little bit of structure. In fact, we want to know what are apps and what isn't.

So we designed the doc to do this. We designed the doc to separate out apps from everything else. We think this actually works quite well. We've also changed the presentation of the doc. As you saw in some of the demos earlier, the doc is translucent. You can actually put things behind it now. It's actually a very nice effect.

Now what's important about the dock and what we're trying to solve by designing the dock is that in Mac OS today, you have the Apple menu, What you can put applications or documents in or folders in. But it's impossible to configure. Try it. Have you tried it? I'm sure you've tried explaining to someone how to add something to the Apple menu.

So we wanted to provide a mechanism to replace the Apple menu, but much easier configuration. Adding and removing things is a breeze, and it is with the dock. Secondly, in Mac OS 9, we have the launcher. which provides very similar functionality to the Apple menu, just a different presentation. And of course we have the Process Menu or the Application Menu which allows you to switch between running applications. Well, there's a lot of overlap between these three features.

and with the dock we're trying to consolidate they're all related this is an app by launch it it's running i can selected I don't need to go to three different places or in this case say the Apple menu and the application switcher. I don't need to go to two different places to see the status of an application or to launch it.

So as I said, what's key about the dock is it's very easily user configurable. We envision you adding and removing things quite frequently because it's so easy. It'll always be a collection of your favorite things, things you want access to quickly. It also is representation of your current things, things that you're currently working with. You're running apps and minimize windows. So for this reason, the dock isn't, in essence, your work. It is your things you're trying to accomplish. This is our new icon style. 600 by 600 pixels. One bit.

So when this was designed, of course there were a lot of limitations on the graphics capabilities back then. If you've ever looked at a 32 by 32 icon on a nine inch screen, it was quite nicely proportioned relative to the other items. As I said earlier, that's a little bit different today when you're working on an Apple Cinema display. For the handful of you who actually have the privilege of doing that.

So first of all, we wanted to make things a little bit bigger. We had the opportunity to think about how elements could should scale in Aqua and how they could be larger. So we decided to break out of the boundary of small 32 by 32 icons, go a little bit larger. But rather than take a small incremental step, we We decided to take a big one. In part because the doc uses it when it's magnifying items.

But what's more interesting about this icon is because of the limitations at the time, it was, in essence, iconic. It couldn't communicate very much. The hand, now I can make out that there's a hand here and I think it's holding what looks to be maybe a pen or a pencil. I believe this was the icon for MacWrite originally. And it just is trying to capture what this tool does, but it doesn't really communicate what you might accomplish by using this tool. It doesn't have any emotional qualities to it.

So what we wanted to achieve with Aqua was with our icon style. Because we had the opportunity to put such tremendous detail into our icons because they were larger, is we wanted to move towards a more emotive style. We wanted an application icon to say, I'm not just a word processor, but here's the things I can do. I can create letters for you. We can create letters. In this case, this example is our preview application for looking at images.

And it kind of suggests the kind of reward or emotional reward you might get by using this application to look at your photographs or other people's photographs. But we think this is a subtle while very important shift in how we're approaching our icon designs. The other thing we did is we've actually designed what we're calling genres. Now we've always had icon families and families describe either icons Icons belonging to an application, for example, the application icon and its corresponding document.

or an extension or a control panel. We've always described those as families. Now in the case of multiple applications, we can of course have different kinds of applications. We can have applications which the user may use to author something or produce something, perhaps a letter or a website. But we also have utilities, applications in which are of a more technical nature, applications that perhaps are best left to somebody who knows what they're doing.

So we've described what we're calling genres. And I'll show you two examples, two different collections of each of those. As I mentioned, the large size. Rather than taking a small increment going 48 by 48, 64 by 64, we just went all the way up to 128. I don't think we'll have to revisit this size for a while. I think if you do an icon now, the larger size, I think we're safe for a while.

Now what we've also done, we haven't changed the format by which we preserve or save our icons in our apps. We're still using the ICNS format introduced in Mac OS 9. So we can support what we're calling hints at smaller sizes. Now while you can take 128 by 128 icons, scale it down quite nicely, and it preserves its image quite well, right down to as small as 48 by 48.

Once you get down to about 32 by 32, or especially down to 16 by 16, those scaled icons start to lose their meaning. There's too much information. So hints allow you to design simpler icons at those sizes. And as you scale them down, the system will swap in these hints and therefore present a simpler icon at the smaller sizes.

That's an important concept. It also allows you to preserve your existing icons. If you decide you're taking your existing icons forward into Aqua, you can save your 16 by 16, 32 by 32s, you can use those today and just create a larger one, larger 128. There you may want to put more detail in. So here's an example of our user application genre. These are all applications which you use to author something, or in the case of preview, just to view something.

These are intended to not just say I'm an application, which I think they all share an element in common to say I am an application. In fact, if you stretch it far enough, I think you can still see there's a diamond element in there, which harkens back to the very original application icon. That's intentional.

But they're intended to capture a mood or capture, capture, I say capture an emotion. I'm using that term a lot, but it's important. This is our utility genre. These applications are much more technical, much more serious. We've taken a different color scheme to these. I'm not showing you these to give you specific instructions to do this, but rather to get you to think about what is your application.

Do you provide a utility? Do you provide a game? Perhaps games are even more extravagant than these. Maybe games are very colorful and playful. You can have the opportunity with your icon to communicate what your application is all about. So again, I'd like to call Buss back up on stage. And let's go through, and we're going to have a look at the finder and the doc.

Let's pull up a finder window. First of all, what's nice about the new finder is the fact that you can navigate the file system and stay within one window. I'll show you. If I click on my hard drive, I can go to my local accounts, users, and my home directory. I'll stay on one window, so I don't have this mess of all these windows coming up, which is really nice.

One thing that improves this is the toolbar on the top here. You have channels, so you can jump directly from, say, for example, the main directory to the documents folder without having to go through the whole route. The pop-up here shows where you are in the file system. You can use the back button to go back to where you came from.

[Transcript missing]

One nice feature that's been in the column view is, well, first of all, you see the whole path in the system. And you can get nice previews from your icons right away. And let me get some applications here. So you get to see the full 128 beautiful rich graphics, which is really nice. One more thing you can do in here as well is you can see little previews of the QuickTime movies. Just in line, which is really great.

I don't answer questions right now, sorry. I would like to show one feature we added, which is if you double click on a folder from the column view, it switches back to its saved view. So I can switch back really easily like this. Let's go to this one. I double click. I get this persistent view. Suppose I would want to change the size of my icon. So I go to the View Options panel. And from here, I can set the size of the items for this window.

I can also choose if I want to add a background picture. So for example, I can add a background Let me add something to my home directory. I want to have icon view and I would like to have a nice picture here in the background. Let me see. This one. So now I can customize per folder what it looks like and I can put in any image I want.

While we're changing images anyway, we can also change the picture of the desktop. Let So you can pick any background you want. Let me see. The next thing I'd like to show is the doc. Actually, Buzz, let me just-- I want to go through a couple of things here. I want to make sure people really understand what we've changed. Go to your documents folder and drag a file to the desktop.

[Transcript missing]

I have to do the image already, that's why. In DP3 when you drag something to the desktop, it made an alias. That's not what people wanted. So you can use the desktop if you choose. You can put all your stuff. Another thing I want just to go through again is this notion of using the column view to quickly navigate. Go right to the top of the hierarchy in this case, right up to the computer, and just navigate down here very quickly down to the document which you want.

and then just double click on it. Boom. Here you saw an example of using column view to very quickly navigate the hierarchy. You got to where you wanted to be, but you wanted to see it in the way that it was intended to be presented, the way you had left it. You double click. Boom. The back button even puts you back into column view if you want to again continue navigating. We think this is a solution that really strengthens-- takes advantage of the strengths of column view and of icon and list view.

Perhaps another thing you can do before you go on the dock is just spawn a whole bunch of Windows. Now, holding the Option key down, you get just your container Windows. So, that's just the Mac OS way of doing it. So, you still have that available. and they will remember their size. And the main finder window always stays the way you set it. That's important. Those windows that were open, just like Mac OS Finder windows do today. They keep the size and the position on the screen.

Okay, so let's-- Sorry to interrupt, but-- No, it's okay. Go back to the doc. Let's move on to the doc. So here's the dock. First of all, I think what's really nice is that you can see it's a transparent background, which makes it feel more lightweight. Nice icons in there. It's really great. So you can see it's transparent if I move windows behind it. Let's open up one like this. It's really pretty.

The main power of the dock is you can very easily add your applications and documents to it. So if I would just drag this in here, just insert it right away. And again, on the left side is applications and on the right side is all your documents, folders, and miniaturized windows. In case you want to get rid of things from your dock, you just drag them out and Let me try and add some more stuff here. So if I have a multiple selection, it just adds the multiple items in there.

And sometimes you see things moving around, and that's when you add the same thing again. See, it moves it to the right place. The male viewer icon moves over because it was already in the dock. So let's add some more documents in here. You notice the dock gets really small so I can go to my preferences to set the size of the dock to anything else. And I can turn on magnification in order to magnify the images. And I can reorder the way I want it. and I can turn on auto-hide. So now, if I move to the bottom of the screen, I get the dark and the fisheye effect, the magnification.

Let's miniaturize a window. Again, you see the genie effect which is really smooth and nice. I can do it in slow motion again so you can see what's happening. If you watch the dock, it's gradually making room for the window to fit in. So it's all very smooth and very precise. So let's try it again from here. Also, when the window is too low below the dock, it would move it up and put it back in like this.

This was the dog. Actually, Buzz, while you've got those two images there, I do want to demonstrate something. I talked about single window mode and I talked about how we were trying to make things easier to work. So if you could just maybe open those two photographs up. This is the way single window mode is implemented today.

As you see, when he turned on that control, it minimized the background window. And as he chooses other minimized windows in the dock, it swaps them out. There's a lot of power in this. And as I said, we know it's not quite right, but we really believe this concept has a lot of value in terms of managing clutter.

So that just gives you an idea of really the essence of the idea. And as I said, we're going to keep working on that.

[Transcript missing]

All right. That was it. Do that again. Thank you. One more time? OK. One more time. . OK. Enjoy Mac OS X and Aqua. Bye bye. Great. Thank you.

Okay? So I've talked to you about the appearance of Aqua. I've talked to you about some of the new behaviors. I've talked to you about some of the new features. Of course, I'm not going into tremendous amount of detail on each of these, but I'm just trying to give you a sense of those things you should be aware of when you're carbonizing your app. So to sum it all up, what Aqua is, is more than appearance.

It is a set of behaviors and a set of features. It continues the tradition of Mac OS 9 in terms of our advantage and ease of use. It's ready today with your DP4 CD installed, which you've now had a few hours to do. It is ready for you today to start to adopt, and you really ought to.

Because it's only by installing it that it's going to get better. As Steve mentioned, we listened to the feedback from DP3 and we continue to want you to give it to us. So by installing it and working with it, you can tell us where it's not working for you. We're running it. At Apple today, we have a few hundred people running Developer PV4. We're living on it, as Bertram pointed out in his session.

So we recognize where its shortcomings are. We try to fix those. Now here's a question. Is it finished? Are we complete with Aqua? As I just said, no. We're going to continue to make it better. From your standpoint, yes. Start adopting it. From our standpoint, we've got a little bit more polishing to do.

We're not quite happy with the way everything is working yet. We're going to continue to tweak things a little bit. The last bullet on there is the most important one, that is user interface guidelines. Obviously, we've made changes from Mac OS 8 and 9, and therefore those human interface guidelines don't quite cover all of what is new in Aqua. So we want to update these guidelines and make them available to you as soon as we can.

That's when I want to talk to you about some of the things we have made available to you. So when we shipped DP3, we had a document on that disk that described how to layout your dialogues for Aqua. Now of course, because we made the change to platinum size controls in DP4, we had to rev that document. So we did. That's on the disk. And it's got some new information on it with respect to menu layout on it too.

Available this week. I don't have a URL. I will get it for you. But available this week on our website. We're putting a very preliminary version of our UI guidelines for Aqua. This document just covers sheets, window layering, and a discussion of the icon style. Things we think that are most important for you to start adopting. And as we describe guidelines for all the other features in Aqua, we're going to make them available as quickly as we can. We're not going to wait to rev a new book every ten years. We're going to get them out fast.

So this week what we have running is what we call the H.I. Lab. We have sessions every hour. It's in room K. Now unfortunately it's booked solid. I think there's something in the order of 17 or 19 sessions this week they filled up. What we're asking you to do is put your name on a sheet and we'll do our best we can to accommodate you. This is a one hour private session that allows you to come in, show us your application, and myself and members of the team will give you feedback. What we think is worth it. and what we think is not working.

And finally Friday, what historically has always been one of the most fun sessions, perhaps to if you're asking questions but not if you're sitting on the panel, and that is the feedback forum. So 2 o'clock Friday, room A1. We have the Aqua Feedback Forum this year. It's in a big room, so we can accommodate more people. What I'd like to do at this point is call John Galenzi back on stage. John is going to walk through all the related sessions this week that you should attend if you are interested in adopting Aqua. John?

That's what I have, so thank you very much. Enjoy your week. Okay, so we, I had said in the opening that this was all about the design of Aqua and that later on this week we'd be talking about specific implementation issues and sessions and stuff. So let me just run through the roadmap and point you to some of those sessions that are specifically focused on particular components of Aqua and how to implement them, etc. So the first one, which is real key and really mirrors this session closely, is 142 High-Level Toolbox. Another session that's really important if you're interested in prototyping your application, seeing what Aqua looks like for a new dialog design or whatever is using Interface Builder.

This is a session for Data Browser. Data Browser is a component. It's a high-level control that allows you basically to, in a single control, to present finder-like behavior, lists that have disclosure buttons and hierarchical displays. It's a really great new set of APIs for doing that kind of thing. And if you leverage Data Browser, you're going to get a lot of the functionality that users are going to expect from the finder within your own application for lists, et cetera.

Another session, 147, Icon Services and Aqua, really talks about designing icons, new icon APIs, issues to think about relative to icons within your application and new icon designs. Navigation Services, number 149, is all about the open and save dialogs, how to take advantage of those and do sheets in terms of open and save within your apps.

Apple Help. We didn't really specifically touch on that in this session, but the help for Mac OS X is HTML based. And the session on Thursday, 145, Apple Help talks about both from a developer's point of view, how do you implement the Apple Help APIs within your application, but also from a content developer's point of view, how do you author HTML help? And what are some of the tricks of the trade in that respect?

Session 144 isn't specifically tied to Aqua in terms of visual aspects of Aqua, but it ties into application packaging and document typing, which is a new behavior under 10 in a sense. It's new. You need to understand that as you do your applications on 10, and there's some tie-ins to Aqua there. And then the Aqua Feedback Forum. And Don mentioned that.

What's really key about the Aqua Feedback Forum is you as a developer, you're adopting Aqua within your apps, those issues. And if you have issues about, well, I'm not sure how this is going to work, and what about this? Have you guys thought about this? That's the kind of feedback we're looking for. So it's really developer adoption issues relative to Aqua. So we look forward to you input there.

Specifically, who to contact at Apple to get more information about Aqua? I'm going to start at the bottom, first of all, with the email address, MacHI at Apple.com. That's an email address that's monitored by myself, by the human interface team, the Aqua design team, and a couple other people.

And really, if you've got developer adoption issues, or you've got some feedback you'd like to give us on DB4, as requested by Don, please send it to that email address. There's another general discussion list, which is Apple HI, Developer Adoption Issues. And if you've got any questions, please send it to us at db4.com.

And we have other developers at public.lists.apple.com. So that's just a general discussion forum for you to talk about Aqua issues and get other developers giving you some insight into issues around Aqua. And then sort of, I'm going through the list backwards. The last one, but first on this list, is myself.

My role here at Apple is User Experience Technology Manager, which means I'm really a broker of information between Apple and yourselves as developers, but also because I'm a developer. So I'm really a broker of information between you and Apple. So as you work through DB4, and as you work to bring your applications to 10 and do the right thing with Aqua and deliver a really awesome user experience, you may run into issues with the APIs that exist or whatever. And I'm really a good point of contact to come into Apple and say, hey, what about this? This is our issue. This is our situation.

Can you bring this to the HI team or to the high-level toolbox team or what have you? And so really use me as that resource. And the other thing I can do is work with you to understand the issues that you're having. So I can help you understand Aqua and help review your applications from a user experience point of view and help you determine whether you're doing things the right way, using the right metaphors. Are you internally consistent? All these sorts of HI-related things, I'm also a resource for that. So that's pretty much it for Session 140, Aqua Overview. Thank you for your attention, and we look forward to awesome apps on Mac OS X.
