WEBVTT

00:00:05.840 --> 00:00:09.830
Ladies and gentlemen, please welcome the
User Experience Technology Manager for

00:00:09.840 --> 00:00:12.900
Mac OS X,
John Galenzi.

00:00:17.090 --> 00:00:20.840
Seems like I've been
in this hall all day.

00:00:20.870 --> 00:00:24.680
All right, well, welcome to session 145,
Apple Help.

00:00:24.760 --> 00:00:28.460
Apple's really embracing a lot
of open standards for Mac OS X,

00:00:28.460 --> 00:00:31.880
and Help is no different.

00:00:31.880 --> 00:00:35.360
Apple Help is quite clearly
going to be HTML-based.

00:00:35.380 --> 00:00:38.180
And this session is talking about that,
both from a developer

00:00:38.180 --> 00:00:40.150
engineering point of view,
how to implement

00:00:40.390 --> 00:00:44.090
Apple Help through APIs that exist,
as well as helping you

00:00:44.090 --> 00:00:46.430
author the HTML Help,
figuring out what to do

00:00:46.430 --> 00:00:49.220
specifically to make it really nice.

00:00:49.240 --> 00:00:55.140
And I just want to encourage you as
developers to deliver really good help.

00:00:55.140 --> 00:00:57.480
It's very important from a
user experience point of view,

00:00:57.480 --> 00:01:02.780
and users-- if you look at the statistics
of who's buying Macintoshes now,

00:01:02.980 --> 00:01:07.270
stats that Steve showed in the
keynote in terms of iMac buyers,

00:01:07.330 --> 00:01:10.780
there's a large percentage of
users that are new to computers,

00:01:10.780 --> 00:01:12.180
new to the Macintosh.

00:01:12.180 --> 00:01:17.310
And your ability to deliver really
comprehensive help and interactive help

00:01:17.320 --> 00:01:22.510
is key to their success in the Macintosh
and their enjoyment of their machine.

00:01:22.650 --> 00:01:24.930
So to talk about Apple Help,
I'd like to welcome

00:01:24.930 --> 00:01:28.080
on stage Gordon Meyer,
who is part of the human

00:01:28.280 --> 00:01:30.590
interface team at Apple.

00:01:35.000 --> 00:01:35.700
Thanks, John.

00:01:35.700 --> 00:01:36.760
JOHN WOLFF: You're welcome.

00:01:36.760 --> 00:01:36.760
Here's your switcher.

00:01:36.790 --> 00:01:38.000
Thank you.

00:01:38.010 --> 00:01:38.550
Hello, everyone.

00:01:38.630 --> 00:01:39.540
Thanks for coming.

00:01:39.540 --> 00:01:43.570
I'm wondering how many of you were in
this session on Apple Help last year?

00:01:43.720 --> 00:01:45.560
Could you raise your hand for me?

00:01:45.580 --> 00:01:46.740
OK, great.

00:01:47.160 --> 00:01:51.280
And how many of you are responsible
for writing and authoring help

00:01:51.280 --> 00:01:53.490
systems for your products?

00:01:53.970 --> 00:01:55.300
All right, just one more.

00:01:55.320 --> 00:01:57.350
How many of you are responsible
for implementing help systems,

00:01:57.400 --> 00:02:00.420
that is, getting your applications
to talk to your help?

00:02:00.620 --> 00:02:01.260
Okay, great.

00:02:01.260 --> 00:02:03.130
We have good information for everyone.

00:02:03.130 --> 00:02:06.250
Before we begin, I should probably warn
you about something,

00:02:06.250 --> 00:02:06.540
though.

00:02:06.540 --> 00:02:10.650
I went to a public speaking class, right,
to prepare, and they said that I should

00:02:10.670 --> 00:02:13.830
practice this presentation
while I was doing other things.

00:02:13.830 --> 00:02:16.460
So I decided to practice it
while I was driving my car.

00:02:17.150 --> 00:02:17.840
It worked pretty well.

00:02:17.840 --> 00:02:20.050
People look at you kind of funny
because you're talking to yourself.

00:02:20.050 --> 00:02:22.450
But there's a side effect
I didn't really anticipate.

00:02:22.530 --> 00:02:25.700
So if at any point I should
stop and suddenly yell,

00:02:25.700 --> 00:02:27.910
get out of my way,
don't take it personally.

00:02:27.910 --> 00:02:30.180
It has nothing to do
with your driving record.

00:02:30.180 --> 00:02:31.290
It's just a habit.

00:02:31.300 --> 00:02:35.010
Well, unless you drive a blue
minivan with Utah plates,

00:02:35.010 --> 00:02:36.820
then I owe you an apology.

00:02:36.860 --> 00:02:38.660
Anyway, so let's get started.

00:02:38.700 --> 00:02:39.460
Apple Help.

00:02:39.460 --> 00:02:43.250
There's a lot of information to cover,
but let's start by going back in

00:02:43.360 --> 00:02:45.900
time just a little bit to System 7.5.

00:02:46.400 --> 00:02:50.220
At that point, the help system for the
Macintosh was Apple Guide.

00:02:50.490 --> 00:02:52.830
Nice little system,
small floating panels,

00:02:53.090 --> 00:02:55.600
took users through tasks
step by step by step.

00:02:57.580 --> 00:03:00.430
worked great for novice users,
wasn't so great for

00:03:00.430 --> 00:03:03.880
intermediate and advanced users,
but it really wasn't designed for them.

00:03:03.930 --> 00:03:06.440
It was also expensive
and hard to produce.

00:03:06.470 --> 00:03:09.970
So with System 8.5,
Apple introduced Apple Help,

00:03:09.970 --> 00:03:11.760
which is what we're going
to talk about today.

00:03:11.920 --> 00:03:15.620
The system is much more flexible
and a lot easier to author for.

00:03:15.650 --> 00:03:17.480
And we're going to give
you all the details,

00:03:17.480 --> 00:03:20.980
kind of soup to nuts of Apple Help,
all the features, how to author it.

00:03:21.020 --> 00:03:25.060
But let me cut to the bottom line first,
because I'm kind of a bottom line person,

00:03:25.060 --> 00:03:27.190
and I know some of you are too.

00:03:27.390 --> 00:03:31.000
So why should you adopt Apple Help?

00:03:31.020 --> 00:03:33.240
Well, if you're an author,
you'll be pleased to hear

00:03:33.280 --> 00:03:34.610
that it's very easy to create.

00:03:34.620 --> 00:03:36.910
It uses standard HTML 3.2.

00:03:37.070 --> 00:03:39.360
You can use any off-the-shelf
authoring tool you like.

00:03:39.360 --> 00:03:45.530
Dreamweaver, GoLive, BBEdit, SimpleText,
even something on another platform.

00:03:46.540 --> 00:03:49.340
If you're an implementer,
it's equally easy to implement.

00:03:49.390 --> 00:03:53.240
We have a nice set of APIs,
very simple yet flexible.

00:03:53.330 --> 00:03:57.500
And I'm really proud to announce today,
really pleased to announce today,

00:03:57.680 --> 00:04:00.700
that Apple Help is the
help system for Mac OS X.

00:04:00.880 --> 00:04:03.480
If you deploy an Apple Help,
you can use your help across Carbon,

00:04:03.560 --> 00:04:05.480
Cocoa, and classic environments.

00:04:05.510 --> 00:04:08.460
One help system across everything.

00:04:08.810 --> 00:04:10.880
So that's the bottom line.

00:04:12.020 --> 00:04:13.390
But we're going to
cover some other stuff,

00:04:13.390 --> 00:04:13.860
as I said.

00:04:13.860 --> 00:04:15.200
We're going to talk
about the Help Viewer,

00:04:15.200 --> 00:04:17.020
which is kind of the heart of Apple Help.

00:04:17.030 --> 00:04:19.960
Talk about its features and
give a little demonstration.

00:04:19.960 --> 00:04:21.920
We'll also talk about how to
create an Apple Help book.

00:04:21.920 --> 00:04:24.040
You'll see that that's very easy to do.

00:04:24.060 --> 00:04:28.020
Then we'll cover the Apple Help APIs,
which are how you get your application

00:04:28.060 --> 00:04:29.650
talking to the help system.

00:04:29.670 --> 00:04:33.420
And as a bonus,
we have free Ginsu knives for everyone.

00:04:33.420 --> 00:04:34.080
Oh, I'm kidding.

00:04:34.080 --> 00:04:34.580
Of course.

00:04:34.580 --> 00:04:35.460
Of course I'm kidding.

00:04:35.460 --> 00:04:38.780
What we have is something much better,
the HTMLRenderingLibrary.

00:04:38.780 --> 00:04:43.940
This is a piece of code that you can use
in your application to display HTML data.

00:04:43.940 --> 00:04:47.350
And the fan club for the
rendering library is present.

00:04:48.800 --> 00:04:49.850
The Help Viewer.

00:04:49.850 --> 00:04:51.490
So as I said,
the Help Viewer is the heart

00:04:51.570 --> 00:04:52.780
of the Apple Help system.

00:04:52.780 --> 00:04:56.150
What it is, it's a lightweight
HTML display application.

00:04:56.160 --> 00:04:59.450
It renders standard
HTML 3.2 without forms,

00:04:59.450 --> 00:05:03.700
JavaScripts, or plugins,
but it does display QuickTime media.

00:05:03.700 --> 00:05:05.670
We don't use the
QuickTime plugin to do that.

00:05:05.680 --> 00:05:06.630
We do it natively.

00:05:06.640 --> 00:05:09.750
And it can handle any kind of
QuickTime data you want to throw at it.

00:05:09.840 --> 00:05:13.520
Movies, stills, sound, VR,
interactive streaming.

00:05:14.240 --> 00:05:16.050
I've been attending some
of the QuickTime sessions

00:05:16.080 --> 00:05:18.890
across the street this week,
and there's a lot of great things that

00:05:18.920 --> 00:05:21.740
can be implemented in help systems
to make some really unique help.

00:05:21.800 --> 00:05:23.770
And you can use all of
that in the Help Viewer.

00:05:26.070 --> 00:05:27.380
So you might be thinking,
if this is the first

00:05:27.380 --> 00:05:29.670
you've heard of Apple Help,
you might be wondering, well, gee,

00:05:29.730 --> 00:05:33.240
Gordon, if it's HTML-based and
it can display movies,

00:05:33.240 --> 00:05:35.010
why don't I just use a web browser?

00:05:35.020 --> 00:05:38.240
Well, you could, but you shouldn't.

00:05:38.360 --> 00:05:41.580
Apple Help is the help
platform for Mac OS X.

00:05:41.580 --> 00:05:44.140
Your users will be expecting
your help to appear there.

00:05:44.140 --> 00:05:48.130
Additionally, web browsers are these
big monster applications,

00:05:48.130 --> 00:05:49.900
lots of UI, lots of memory.

00:05:49.900 --> 00:05:52.880
The Help Viewer is an optimized
application specifically

00:05:52.880 --> 00:05:54.140
for displaying help.

00:05:54.680 --> 00:05:56.370
And because we know that's
how it's going to be used,

00:05:56.370 --> 00:05:58.770
we've added some unique
features to it to support that.

00:05:58.780 --> 00:06:03.010
For example, we've incorporated some
Sherlock technology to allow you to

00:06:03.010 --> 00:06:05.310
search all of your help really quick.

00:06:05.420 --> 00:06:08.250
It returns a nice relevance-ranked
list of results for your users.

00:06:08.260 --> 00:06:13.250
We've also extended HTML to allow
you to launch AppleScript automations

00:06:13.250 --> 00:06:15.890
so you can do things automatically.

00:06:16.000 --> 00:06:17.320
We'll talk about that some more.

00:06:18.960 --> 00:06:21.740
And with this version of Apple Help,
we have the ability to pull

00:06:21.740 --> 00:06:23.800
help content from the internet.

00:06:23.860 --> 00:06:26.250
That way you can make sure users
are getting the latest information

00:06:26.490 --> 00:06:29.700
and you can continue to develop and
enhance your help and still stay

00:06:29.700 --> 00:06:32.230
within the help viewer environment.

00:06:34.010 --> 00:06:37.610
So that's the high-level view,
but it's time to take a look at it,

00:06:37.610 --> 00:06:39.900
because, you know,
pictures speak louder than words.

00:06:39.990 --> 00:06:42.890
So to help me out with the demo,
I want to introduce Jessica Kahn.

00:06:43.100 --> 00:06:46.140
Jessica is the lead
engineer for Apple Help.

00:06:46.300 --> 00:06:47.970
Welcome.

00:06:51.280 --> 00:06:54.670
So Jessica's going to drive while I talk,
and this saves me from the potential

00:06:54.680 --> 00:06:59.320
public embarrassment of having to point,
click, and talk all at the same time.

00:07:00.420 --> 00:07:02.160
So here you see the Help Viewer.

00:07:02.160 --> 00:07:04.250
It's rendering HTML nicely.

00:07:04.330 --> 00:07:06.030
It's a native Mac OS application.

00:07:06.040 --> 00:07:09.300
It's been carbonized,
so it has the Aqua appearance.

00:07:09.430 --> 00:07:12.530
You see some lists that you can click on.

00:07:12.540 --> 00:07:14.870
You see a graphic there that's
being displayed by QuickTime.

00:07:14.960 --> 00:07:18.340
And across the top of the
screen is our interface,

00:07:18.340 --> 00:07:21.180
our very simple interface
for accessing searching.

00:07:21.260 --> 00:07:24.160
You can type in a word there,
and word or phrase will get some results.

00:07:24.160 --> 00:07:28.450
Why don't we look for something on-- oh,
Firewire.

00:07:30.990 --> 00:07:32.820
So Help Viewer quickly
searches all of Mac Help,

00:07:32.820 --> 00:07:35.440
there's about 150,
200 pages at this point,

00:07:35.440 --> 00:07:38.900
and finds the most relevant
topics based on what we typed in.

00:07:38.900 --> 00:07:41.070
Let's take a look at one of those.

00:07:46.390 --> 00:07:48.960
So this particular page has a
QuickTime movie embedded on it,

00:07:48.970 --> 00:07:51.100
and it began to play
when the page was opened.

00:07:51.110 --> 00:07:52.790
As I said,
we don't use the QuickTime plugin,

00:07:52.800 --> 00:07:56.160
but we do respect all of the embed
parameters you'd expect in HTML.

00:07:56.450 --> 00:07:58.000
So this one was set to autoplay.

00:07:58.020 --> 00:08:00.580
You can also show the controller
or not show the controller,

00:08:00.610 --> 00:08:03.110
whatever it is you want to do.

00:08:03.260 --> 00:08:07.800
Let's look now for something
on internet settings.

00:08:17.820 --> 00:08:20.140
And again, we've searched through all
of Mac Help and found the

00:08:20.140 --> 00:08:21.820
most relevant information.

00:08:21.830 --> 00:08:23.400
Why don't we go into one of those?

00:08:23.430 --> 00:08:26.070
And we want to show you
another feature of Apple Help,

00:08:26.070 --> 00:08:30.170
which is the AppleScript automations.

00:08:30.410 --> 00:08:32.530
Now, this page is talking about
the Preferences application,

00:08:32.580 --> 00:08:35.100
because that's how you set your
internet preferences on Mac OS X.

00:08:35.260 --> 00:08:39.180
And that blue button is an image map,
and that has an href that

00:08:39.180 --> 00:08:40.290
launches an AppleScript.

00:08:40.470 --> 00:08:42.770
Why don't we go ahead and check that out?

00:08:46.980 --> 00:08:49.080
So when Jessica clicks that,
it runs the AppleScript,

00:08:49.080 --> 00:08:51.660
which opens Preferences
application for the user.

00:08:51.780 --> 00:08:54.870
It's a very simple example
of using AppleScript to

00:08:54.890 --> 00:08:57.010
automate tasks for the users.

00:08:57.580 --> 00:09:05.250
The Help Center is a list of
Apple Help books that are installed

00:09:05.260 --> 00:09:07.880
on the system and those that
are available for the particular

00:09:07.880 --> 00:09:10.130
user that Jessica has logged in on.

00:09:10.180 --> 00:09:12.260
In this case,
you see we have Mac Help and

00:09:12.320 --> 00:09:14.200
QuickTime Help are both available.

00:09:14.240 --> 00:09:16.540
And when you convert your
book to Apple Help format,

00:09:16.560 --> 00:09:17.930
it'll show up in this list too.

00:09:18.070 --> 00:09:19.920
We've got plenty of room for you.

00:09:19.980 --> 00:09:21.870
At the bottom, we have something new.

00:09:21.920 --> 00:09:23.130
It's called the Developer Center.

00:09:23.200 --> 00:09:23.980
We've just added this.

00:09:23.980 --> 00:09:25.910
Why don't we check that out?

00:09:26.820 --> 00:09:29.600
This is on DP4, the CD you all got.

00:09:29.600 --> 00:09:33.500
And this is the complete documentation
you need to develop on Mac OS X.

00:09:33.500 --> 00:09:36.500
Our TechPubs group has done a great
job of converting their stuff over.

00:09:36.500 --> 00:09:38.320
They're continuing to
work on it and improve it.

00:09:38.530 --> 00:09:41.990
And why don't we just take a quick
look and browse through here.

00:09:42.670 --> 00:09:44.520
And of course,
because this is an Apple Help format,

00:09:44.520 --> 00:09:49.850
it's completely searchable,
whatever you want to find.

00:09:49.920 --> 00:09:51.000
Why don't we go back?

00:09:51.120 --> 00:09:51.590
Yeah.

00:09:51.600 --> 00:09:53.860
Sure.

00:09:56.330 --> 00:09:57.980
Let's check out QuickTime Help.

00:09:58.060 --> 00:09:59.300
This is kind of a special book.

00:09:59.300 --> 00:10:01.620
Now, this is the Mac OS 9 book.

00:10:01.620 --> 00:10:03.660
It's from Mac OS 9, QuickTime Help.

00:10:03.690 --> 00:10:05.480
We've copied it over to Mac OS X.

00:10:05.630 --> 00:10:06.260
Works fine.

00:10:06.260 --> 00:10:08.200
That's fully supported.

00:10:08.240 --> 00:10:11.560
But this is an interesting example,
because there is very little of this book

00:10:11.650 --> 00:10:13.120
that actually exists on the hard disk.

00:10:13.140 --> 00:10:14.860
Most of it is on the internet.

00:10:14.880 --> 00:10:15.800
Now, we can search it.

00:10:15.980 --> 00:10:19.160
We can cruise through the table
of contents a little bit here.

00:10:19.310 --> 00:10:21.640
But when we really
want to look at a page,

00:10:21.640 --> 00:10:25.480
the help viewer is going to retrieve
that page for us from the internet.

00:10:33.800 --> 00:10:35.700
Once the internet wakes up.

00:10:35.700 --> 00:10:43.420
There we go.

00:10:43.800 --> 00:10:44.900
Great.

00:10:45.010 --> 00:10:48.060
So what you saw happening there was
URL access was coming to the front.

00:10:48.170 --> 00:10:50.350
It's not displaying as
progress bar for us right now,

00:10:50.350 --> 00:10:53.900
and we decided to leave that in because
we know you're a skeptical crowd and

00:10:53.900 --> 00:10:56.930
otherwise it would just seem like there
was a delay or you wouldn't be able

00:10:56.930 --> 00:10:58.350
to tell what was really happening.

00:10:58.430 --> 00:11:01.310
But that page has been pulled from one
of Apple's internet servers across the

00:11:01.380 --> 00:11:03.440
internet and brought down for the user.

00:11:03.630 --> 00:11:04.950
So that's one of the new
features we've added.

00:11:04.980 --> 00:11:07.520
It was added to Mac OS 9 and
it's something we're going to

00:11:07.530 --> 00:11:10.040
talk about a little bit later,
some more.

00:11:10.070 --> 00:11:13.120
Why don't we go back to the Help Center.

00:11:14.660 --> 00:11:16.640
and check out Mac Help again.

00:11:16.650 --> 00:11:19.780
And let's look for
something to do with sound.

00:11:20.100 --> 00:11:22.940
What I want to show is how the
Help Viewer searches content.

00:11:22.990 --> 00:11:24.640
So we're in Mac Help,
and we're looking for

00:11:24.640 --> 00:11:25.960
something to do with sound.

00:11:25.960 --> 00:11:28.680
And we found some various
topics related to that.

00:11:28.750 --> 00:11:30.820
But of course,
QuickTime Help is installed here too.

00:11:30.820 --> 00:11:33.510
And we know that that has
content about playing sound,

00:11:33.510 --> 00:11:34.390
of course.

00:11:34.470 --> 00:11:36.070
So we could go back to
QuickTime Help and search,

00:11:36.200 --> 00:11:39.260
but it's much easier to use this
link at the bottom of the page.

00:11:39.390 --> 00:11:41.040
And it says search all help.

00:11:41.360 --> 00:11:45.610
When we do that,
we get hits from QuickTime and

00:11:45.610 --> 00:11:47.540
from Mac Help all at the same time.

00:11:47.630 --> 00:11:51.380
We've just instantly searched all of the
help that's available in the Help Center.

00:11:51.440 --> 00:11:53.260
And when your book's
installed in the Help Center,

00:11:53.300 --> 00:11:55.640
we'd be searching your book too.

00:11:56.720 --> 00:11:57.860
Thanks, Jeff.

00:11:57.990 --> 00:12:00.590
So that's the Help Viewer.

00:12:00.700 --> 00:12:01.130
What do you think?

00:12:06.310 --> 00:12:08.790
If we go back to the slides,
I want to talk a little bit more

00:12:08.790 --> 00:12:10.630
about some of those features you saw.

00:12:10.670 --> 00:12:13.920
The first one is integrating
Internet-based content.

00:12:14.060 --> 00:12:16.130
The QuickTime Help book
was an example of this.

00:12:16.450 --> 00:12:19.860
This is something new that we've added
and it's a really powerful feature.

00:12:19.870 --> 00:12:23.520
It's something that Apple is going to be
taking great advantage of in Mac OS X.

00:12:23.540 --> 00:12:27.920
Mac OS X is a great Internet client
and as such is going to have

00:12:27.920 --> 00:12:30.500
partially-based Internet help.

00:12:31.000 --> 00:13:07.000
[Transcript missing]

00:13:07.290 --> 00:13:10.240
and your help is wrong and
nobody has even seen it yet.

00:13:10.240 --> 00:13:11.330
It's really a bummer.

00:13:13.100 --> 00:13:16.210
You know, so my wife, I got to tell you,
so my wife tells me that the reason I'm

00:13:16.210 --> 00:13:19.760
losing my hair is that I'm getting older,
but I swear it's last-minute changes.

00:13:19.760 --> 00:13:23.750
If I could just get, like,
Workman's Comp to pay for Rogaine,

00:13:23.750 --> 00:13:24.890
I'd be all set.

00:13:24.900 --> 00:13:27.060
Anyway, so this is a great feature.

00:13:27.060 --> 00:13:30.280
It's good for you because you can
continue to develop and improve

00:13:30.310 --> 00:13:33.910
your help over time after where
you would normally freeze it,

00:13:33.970 --> 00:13:36.560
and even after the product is shipped,
you can continue to enhance it

00:13:36.630 --> 00:13:39.640
because your users automatically get
the latest content from your server.

00:13:39.640 --> 00:13:42.340
It's also good for customers, right?

00:13:42.400 --> 00:13:44.110
In this Internet age,
people want the latest,

00:13:44.110 --> 00:13:45.240
up-to-date information.

00:13:45.240 --> 00:13:47.010
That's why we go to the
web in the first place,

00:13:47.010 --> 00:13:49.190
and this makes sure they can
get the latest help all within

00:13:49.380 --> 00:13:50.800
the help viewer environment.

00:13:52.250 --> 00:13:53.720
So let's talk about how this works.

00:13:53.720 --> 00:13:57.130
Now the help viewer always
looks for content locally.

00:13:57.170 --> 00:13:59.740
That is, that's where it loads its files.

00:13:59.740 --> 00:14:01.240
So how do we get it to
talk to the internet?

00:14:01.240 --> 00:14:02.760
Well, you saw URL access.

00:14:02.760 --> 00:14:04.340
That's part of our trick.

00:14:04.340 --> 00:14:07.940
But let's take a closer
look at how that works.

00:14:07.940 --> 00:14:11.240
In the simplest scenario,
the help viewer wants to open a page.

00:14:11.240 --> 00:14:13.100
It looks in your
application's help folder.

00:14:13.100 --> 00:14:16.940
It finds the page it's looking for,
so it opens it.

00:14:16.940 --> 00:14:19.340
But what if the page isn't there?

00:14:19.390 --> 00:14:22.290
Well, next, the help viewer will
look in the help cache.

00:14:22.520 --> 00:14:25.080
The help cache contains help
files that were recently

00:14:25.080 --> 00:14:26.940
downloaded from the internet.

00:14:26.960 --> 00:14:30.080
If the page the help viewer is
looking for is in the help cache,

00:14:30.080 --> 00:14:31.680
then it loads it from there.

00:14:31.940 --> 00:14:36.680
If it's not in the help cache,
then it asks URL access to go

00:14:36.680 --> 00:14:40.560
to a remote internet mirror,
retrieve the pages looking for,

00:14:40.650 --> 00:14:44.320
URL access brings that page and
puts it in the help cache from

00:14:44.320 --> 00:14:46.710
which the help viewer loads it.

00:14:48.570 --> 00:14:51.150
So what's happening behind the scenes
is the help viewer is pre-appending the

00:14:51.150 --> 00:14:53.950
location it's looking for at each stage.

00:14:54.030 --> 00:14:59.500
Again, in the local situation,
it's looking for my app help/page.html.

00:14:59.510 --> 00:15:00.720
It doesn't find it there.

00:15:00.770 --> 00:15:02.750
It pre-appends the
location of the help cache,

00:15:02.860 --> 00:15:05.380
still looking for page.html.

00:15:05.450 --> 00:15:09.390
If it doesn't find it there,
then it turns it into a URL and

00:15:09.440 --> 00:15:13.230
pre-appends the location where you
said your internet content is stored.

00:15:13.270 --> 00:15:15.990
You tell us where the internet content
is stored when you index the files,

00:15:16.020 --> 00:15:18.000
and we're going to cover that.

00:15:18.340 --> 00:15:23.080
And that's what it passes off to
URL access for it to retrieve for us.

00:15:23.090 --> 00:15:26.150
Now once a page is put in the help cache,
it stays there for three days.

00:15:26.210 --> 00:15:28.720
This allows users to go
back and look at it again,

00:15:29.030 --> 00:15:29.960
right, because they just looked at it.

00:15:29.960 --> 00:15:34.500
They might want to go back and review it.

00:15:34.500 --> 00:15:37.590
And they don't have to go through
this retrieval process again.

00:15:37.590 --> 00:15:37.590
But it doesn't stick around
so long that it becomes stale.

00:15:38.550 --> 00:15:41.120
Again, you specify the remote location
when you index the files,

00:15:41.260 --> 00:15:43.420
so you do need to know in advance
before you ship the product

00:15:43.520 --> 00:15:45.410
where your files are going to be.

00:15:45.480 --> 00:15:47.680
And you can't put
everything on the internet.

00:15:47.740 --> 00:15:50.310
You have to have the
search index file locally,

00:15:50.390 --> 00:15:53.410
because that's where we know
where the internet site is.

00:15:53.480 --> 00:15:56.780
And also, it allows users to search
the content without having

00:15:56.780 --> 00:15:57.960
to connect to the internet.

00:15:58.000 --> 00:16:00.190
That's an important feature.

00:16:02.470 --> 00:16:06.300
So that's internet-based content.

00:16:06.330 --> 00:16:07.370
There's some other great features.

00:16:07.420 --> 00:16:11.470
Now, we use standard HTML lots of places,
but these are things that you can add to

00:16:11.550 --> 00:16:14.040
your HTML to enhance the user experience,
some extensions.

00:16:14.060 --> 00:16:16.150
And we're going to cover
the first three in depth.

00:16:16.250 --> 00:16:18.360
We're going to talk about
AppleScript automations,

00:16:18.400 --> 00:16:20.880
how to improve search results
to make sure users can find

00:16:20.880 --> 00:16:22.460
what they're looking for.

00:16:22.510 --> 00:16:24.360
And we're going to talk
about Anchor Lookup,

00:16:24.470 --> 00:16:27.040
which is also something
new that we've added.

00:16:27.040 --> 00:16:30.300
But I want to talk for a second here
about the dynamic table of contents,

00:16:30.340 --> 00:16:35.400
because this is kind of a hidden feature,
but it's unique and you might need it.

00:16:35.470 --> 00:16:38.400
So in the demo,
there was the Help Center.

00:16:38.400 --> 00:16:40.700
And the Help Center contained
three items-- Mac Help,

00:16:40.930 --> 00:16:43.080
QuickTime Help, and the Developer Center.

00:16:43.100 --> 00:16:47.470
Those items appeared in the list because
the Help Viewer found them on the hard

00:16:47.470 --> 00:16:50.040
disk and built that list automatically.

00:16:50.540 --> 00:16:53.440
So that same technique can be
used inside your help book to

00:16:53.480 --> 00:16:55.260
build your table of contents.

00:16:55.270 --> 00:16:59.020
Now, if you have a product that has a
lot of plug-ins or optional pieces

00:16:59.020 --> 00:17:02.720
that users may or may not install,
you can use the same feature to build

00:17:02.720 --> 00:17:06.280
your table of contents automatically,
making sure that users are

00:17:06.280 --> 00:17:09.150
only seeing help for the things
they've chosen to install.

00:17:09.280 --> 00:17:10.530
That's kind of what it does.

00:17:10.540 --> 00:17:13.700
If you want the details on how it works,
that's all covered in the SDK,

00:17:13.700 --> 00:17:16.090
which we'll tell you about at the end.

00:17:16.970 --> 00:17:18.560
And finally, I want to talk about
the Developer Center.

00:17:18.560 --> 00:17:21.600
Now, you saw it in the demonstration,
and I want to point out

00:17:21.660 --> 00:17:22.470
two important things.

00:17:22.560 --> 00:17:25.880
One, as I think you've already realized,
it's a great resource for you all.

00:17:25.880 --> 00:17:28.600
If you have questions about
developing for Mac OS X,

00:17:28.600 --> 00:17:30.920
go there, type in your search term,
browse around,

00:17:30.920 --> 00:17:32.450
get the information you need.

00:17:33.200 --> 00:17:37.210
But secondly, it's important to note,
because Apple is now using the

00:17:37.450 --> 00:17:40.040
Help Viewer and Apple Help to
deliver all of its content.

00:17:40.040 --> 00:17:43.120
All of our end-user-based documentation
is delivered in this format,

00:17:43.120 --> 00:17:46.310
and all of our technical publications
are delivered in this format.

00:17:46.310 --> 00:17:48.640
We're solidly behind this,
and we want you to

00:17:48.640 --> 00:17:50.020
join us in this effort.

00:17:53.110 --> 00:17:55.360
So let's talk about
AppleScript automations.

00:17:55.360 --> 00:17:58.040
Those of you who are fans of Apple Guide,
this is a great way to recover

00:17:58.040 --> 00:18:02.340
some of that interactivity
and do it for me type things.

00:18:02.420 --> 00:18:05.600
It's also a really good way
to reduce kind of the clutter

00:18:05.640 --> 00:18:07.000
that's in your documentation.

00:18:07.000 --> 00:18:10.160
If there are common steps that have
to be done frequently by users,

00:18:10.160 --> 00:18:11.640
automate them.

00:18:11.670 --> 00:18:14.940
It gets people out of the help,
which they really don't want to be in,

00:18:15.040 --> 00:18:17.800
let's face it,
and back into using your application.

00:18:18.100 --> 00:18:19.300
It's really easy to do.

00:18:19.300 --> 00:18:21.580
You go to href,
as you see on the bottom of the slide,

00:18:21.580 --> 00:18:24.790
which is a standard HTML link,
but you give it a special URL,

00:18:24.790 --> 00:18:26.490
which is help colon run script.

00:18:26.540 --> 00:18:28.910
And you give it the path
to your AppleScript,

00:18:28.910 --> 00:18:31.080
which has to be on the local hard disk.

00:18:31.080 --> 00:18:33.160
You can't run an
AppleScript that's on the internet.

00:18:33.160 --> 00:18:35.940
And you can pass a
parameter if you want to.

00:18:35.940 --> 00:18:38.160
For example, in MacHelp we use this.

00:18:38.160 --> 00:18:41.040
We pass parameters for
applications to open.

00:18:41.040 --> 00:18:43.750
We have one script that does it,
and we just give it the parameters.

00:18:43.760 --> 00:18:47.670
That reduces the number of scripts we
have and eliminates some testing for us.

00:18:48.960 --> 00:18:53.100
So AppleScript automations are a
good thing to add to your help.

00:18:53.100 --> 00:18:56.450
It just makes your help a lot
more interactive and usable.

00:18:57.800 --> 00:18:59.480
Search results.

00:18:59.480 --> 00:19:00.860
Apple Help is all about searching.

00:19:00.860 --> 00:19:03.740
We've got a great search
engine courtesy of Sherlock.

00:19:03.740 --> 00:19:06.720
You can type in a word, a phrase,
a sentence, whatever you'd like.

00:19:06.740 --> 00:19:11.550
It automatically finds the most relevant
topics based on what you typed in.

00:19:11.910 --> 00:19:14.550
But as a content author,
it's your responsibility to test this

00:19:14.600 --> 00:19:18.330
and make sure that people are getting
the information they need by typing in

00:19:18.390 --> 00:19:21.330
words that you think they might use.

00:19:21.750 --> 00:19:23.910
We support standard
HTML tags wherever possible.

00:19:23.920 --> 00:19:27.530
This is a great example of that,
because we use the keyword tag,

00:19:27.630 --> 00:19:29.820
which is a standard meta tag,

00:19:29.890 --> 00:19:32.590
And if you add this to your pages,
you can use it to provide

00:19:32.590 --> 00:19:35.550
synonyms and misspellings,
just to make sure that people can

00:19:35.550 --> 00:19:37.010
get the results they're looking for.

00:19:37.290 --> 00:19:40.380
In Mac Help, for example,
when we're talking about QuickTime,

00:19:40.400 --> 00:19:43.910
we always keyword with the word "quick"
and the word "time." And that way,

00:19:43.920 --> 00:19:46.350
if somebody doesn't type in
the product name exactly right,

00:19:46.450 --> 00:19:49.440
they're still going to get the
information they're looking for.

00:19:50.040 --> 00:19:51.770
You can also use the noindex tag.

00:19:51.840 --> 00:19:56.340
This is robots equals noindex,
common tag, and this will tell our search

00:19:56.340 --> 00:19:59.940
index to skip that page and
not include it in searching.

00:20:02.060 --> 00:20:03.820
Finally, there's Apple Abstract.

00:20:03.850 --> 00:20:06.540
This is a tag we've added,
and the contents of this meta tag

00:20:06.770 --> 00:20:08.900
can contain a summary of your page.

00:20:08.900 --> 00:20:11.590
If you provide an Apple Abstract
for a page and it shows

00:20:11.590 --> 00:20:14.180
up in the search results,
the abstract information

00:20:14.270 --> 00:20:15.900
shows up underneath the hit.

00:20:16.070 --> 00:20:18.540
That way people can decide if
they want to go view that page,

00:20:18.640 --> 00:20:21.680
if it looks like it has the
information they're going to need.

00:20:21.770 --> 00:20:26.370
This is a great addition for
Internet-based help because it helps

00:20:26.450 --> 00:20:29.220
people decide whether or not they want
to connect and download that page.

00:20:31.490 --> 00:20:32.810
Next is Anchor Lookup.

00:20:33.020 --> 00:20:35.030
This is a new feature we've
added since the last time we

00:20:35.030 --> 00:20:37.080
met and talked about Apple Help.

00:20:37.180 --> 00:20:39.250
This is a great way to
provide contextual help.

00:20:39.390 --> 00:20:40.860
Now,
we didn't include it in the demo because

00:20:40.860 --> 00:20:45.280
we didn't want to make the demo too long,
but it's really easy to explain.

00:20:45.460 --> 00:20:47.230
Anchor is a standard HTML tag.

00:20:47.420 --> 00:20:50.200
You embed it in your HTML and
you give a name for that anchor,

00:20:50.200 --> 00:20:52.200
such as foo.

00:20:52.320 --> 00:20:56.900
From within your application,
say from a help button in a dialog,

00:20:56.920 --> 00:20:59.290
using our APIs,
you tell the help viewer to open the

00:20:59.370 --> 00:21:00.990
page that contains the anchor foo.

00:21:00.990 --> 00:21:06.410
The application doesn't have to
know what page that occurs on.

00:21:06.440 --> 00:21:09.970
The help viewer will see that anchor,
find the right page, and automatically

00:21:09.970 --> 00:21:09.970
display it for the user.

00:21:11.380 --> 00:21:14.620
That way, the content authors can
continue to modify the content,

00:21:14.620 --> 00:21:18.150
move stuff around as necessary,
without having to deal with

00:21:18.150 --> 00:21:19.840
breaking things in the application.

00:21:19.840 --> 00:21:20.840
This is a new feature.

00:21:20.840 --> 00:21:23.070
I think you'll find it really handy.

00:21:27.840 --> 00:21:29.180
Authoring Apple Help.

00:21:29.220 --> 00:21:31.720
Excuse me.

00:21:31.870 --> 00:21:33.050
This is where we get to the nitty gritty.

00:21:33.060 --> 00:21:35.680
Now, you've heard me babble on for a few
minutes about how great the help

00:21:35.680 --> 00:21:38.470
system is and how easy it is to use,
but this is where the

00:21:38.600 --> 00:21:40.740
proof is in the pudding,
so to speak.

00:21:40.790 --> 00:21:44.560
You could literally go from
HTML to Apple Help in five minutes.

00:21:44.680 --> 00:21:47.830
We've worked really hard to
make this as easy as possible.

00:21:47.850 --> 00:21:49.440
Now you need to start with HTML.

00:21:49.640 --> 00:21:51.930
Remember, we support HTML 3.2.

00:21:52.000 --> 00:21:53.350
You could use existing files.

00:21:53.400 --> 00:21:55.180
You can create some new ones.

00:21:55.220 --> 00:21:57.180
Just author some HTML.

00:21:57.420 --> 00:21:59.800
Once you've done that,
decide on which page is

00:21:59.830 --> 00:22:01.360
going to be your start page.

00:22:01.440 --> 00:22:05.440
This is the page that appears when you
click your book name in the Help Center.

00:22:05.560 --> 00:22:09.500
It's also the page that appears when
somebody accesses your Help menu.

00:22:09.590 --> 00:22:13.680
To that start page, you add one meta tag.

00:22:13.680 --> 00:22:15.060
A meta tag is standard HTML.

00:22:15.060 --> 00:22:16.410
It isn't displayed in the page.

00:22:16.480 --> 00:22:17.830
So you can go ahead and add this.

00:22:18.010 --> 00:22:21.130
It won't affect the page if you're
reusing it in browsers on the

00:22:21.130 --> 00:22:24.410
web or in some other help system.

00:22:24.490 --> 00:22:26.630
This meta tag is called Apple Title.

00:22:26.800 --> 00:22:29.150
And the contents of the meta
tag is the name of your book.

00:22:29.250 --> 00:22:32.410
In this example, myapp.help.

00:22:32.510 --> 00:22:35.040
This is the name that's
displayed in the Help Center.

00:22:35.090 --> 00:22:37.180
And it also becomes your book ID.

00:22:37.280 --> 00:22:40.270
The book ID is used in the APIs.

00:22:40.730 --> 00:22:43.750
That's all you have to do,
is add that one tag to one page.

00:22:43.750 --> 00:22:46.600
The next step is to index it.

00:22:46.600 --> 00:22:49.000
We give you a drag-and-drop
indexing tool.

00:22:49.000 --> 00:22:52.820
You take your folder of HTML,
you drop it on the indexing tool,

00:22:52.820 --> 00:22:55.240
it quickly goes through and
scans all of the content,

00:22:55.240 --> 00:22:58.450
pays attention to keywords,
Apple abstracts, no index,

00:22:58.450 --> 00:23:00.770
and everything else it needs to look at.

00:23:00.780 --> 00:23:03.620
And it creates a search index file,
which is a small file that

00:23:03.620 --> 00:23:06.960
automatically puts it in the right
place within your help folder.

00:23:07.900 --> 00:23:10.470
Now, if you're going to use
Internet-based content,

00:23:10.470 --> 00:23:13.330
this is where you tell us where
your remote mirror site is,

00:23:13.330 --> 00:23:16.550
what the URL is, where we can go and
download help if we need to.

00:23:16.550 --> 00:23:20.180
And if you're using Anchor Lookup
to provide contextual help,

00:23:20.330 --> 00:23:22.490
then you need to turn on a checkbox.

00:23:22.700 --> 00:23:24.620
But it's really as easy as that.

00:23:28.230 --> 00:23:31.560
The next thing to do
is to store your help.

00:23:31.600 --> 00:23:34.850
On Mac OS X,
your application's help is stored

00:23:34.850 --> 00:23:36.470
within your applications bundle.

00:23:36.490 --> 00:23:39.070
You take your help folder,
you put it in there with the

00:23:39.070 --> 00:23:40.380
rest of your other resources.

00:23:40.440 --> 00:23:42.430
If you have localized resources,
that's great.

00:23:42.440 --> 00:23:43.530
You can have localized help.

00:23:43.640 --> 00:23:45.700
You put it inside there as well.

00:23:45.720 --> 00:23:50.000
This provides a drag and drop install of
your application and all the help files.

00:23:50.020 --> 00:23:53.090
People can move it around and,
heaven forbid, even throw it away,

00:23:53.090 --> 00:23:56.480
and they throw away the
app and the help it wants.

00:23:56.490 --> 00:23:57.660
Nice feature.

00:23:57.710 --> 00:24:00.820
And on Mac OS X, because we pay attention
to file permissions,

00:24:00.860 --> 00:24:03.510
if somebody doesn't have permission
to launch your application,

00:24:03.680 --> 00:24:05.890
then they won't see your
help and vice versa.

00:24:06.010 --> 00:24:10.140
This makes for a help center that's
targeted to exactly what you can use.

00:24:10.220 --> 00:24:11.970
This is a cool feature.

00:24:13.970 --> 00:24:18.130
So on the authoring side of things,
you're done.

00:24:18.140 --> 00:24:20.380
You started with HTML,
hopefully added some

00:24:20.380 --> 00:24:23.400
AppleScript enhancements,
some keywords to make sure

00:24:23.450 --> 00:24:26.220
people can find their content,
maybe decided some of it was

00:24:26.220 --> 00:24:28.360
going to be internet-based.

00:24:29.710 --> 00:24:30.940
And it's as simple as that.

00:24:30.940 --> 00:24:34.840
The next step is to get your application
to open the Help Viewer at the

00:24:34.840 --> 00:24:37.560
appropriate time with the right content.

00:24:38.130 --> 00:24:43.890
And to cover how to do that, it's not me,
it's Miller time for me,

00:24:45.070 --> 00:24:45.070
I want to reintroduce

00:24:45.260 --> 00:24:49.140
The person responsible for bringing
Apple Help to Mac OS X and the

00:24:49.140 --> 00:24:52.620
lead engineer for Apple Help,
Jessica Kahn.

00:24:52.620 --> 00:24:54.120
Jessica?

00:24:59.300 --> 00:25:00.700
Thanks, Gordon.

00:25:00.730 --> 00:25:02.940
Okay.

00:25:02.940 --> 00:25:05.660
Well, as Gordon said,
I'm here primarily to talk to application

00:25:05.660 --> 00:25:12.080
developers about how you can provide
Apple Help from within your application.

00:25:12.100 --> 00:25:16.070
I'm also going to be covering a
little bit about some new help

00:25:16.070 --> 00:25:20.000
URLs that have been introduced
in the Mac OS X help viewer.

00:25:20.050 --> 00:25:23.190
They're so new, in fact,
that Mac Help hasn't

00:25:23.190 --> 00:25:26.720
necessarily adopted them,
so it's better for me to discuss them

00:25:26.720 --> 00:25:28.560
with you so that you get it right.

00:25:28.560 --> 00:25:30.830
And I'm also going to be discussing
the HTMLRenderingLib briefly,

00:25:30.830 --> 00:25:33.710
which is the underlying rendering
technology for the help viewer,

00:25:33.710 --> 00:25:36.100
and you can use that in
your application as well.

00:25:37.940 --> 00:25:41.230
So here we are on the next slide,
but actually I'm going to

00:25:41.230 --> 00:25:44.530
take a moment to-- well,
I was considering bringing a

00:25:44.530 --> 00:25:47.280
soapbox and getting up on it,
but then I thought I'll be nervous

00:25:47.360 --> 00:25:50.180
enough that I'm going to fall down on the
stage or something ridiculous like that.

00:25:50.360 --> 00:25:55.400
So let's pretend I have a
soapbox and I'm going to get up.

00:25:55.400 --> 00:26:00.210
As much as it's personally gratifying
for me to see you adopt Apple Help,

00:26:00.210 --> 00:26:02.810
I want to see you adopt it
because I want Mac OS X,

00:26:02.810 --> 00:26:04.840
in particular, to be awesome.

00:26:05.240 --> 00:26:08.030
And part of Mac OS X being
awesome is it being an easy

00:26:08.030 --> 00:26:10.080
transition for our existing users.

00:26:10.400 --> 00:26:15.180
The way to make it easy for them is not
only to provide wonderful help content,

00:26:15.190 --> 00:26:18.420
but to make sure that they know
how to get to that help content.

00:26:18.450 --> 00:26:21.820
And I think that if we're
consistent with bringing them help

00:26:21.880 --> 00:26:25.840
content through the help viewer,
they're going to have an easier

00:26:25.840 --> 00:26:27.880
time of making this transition.

00:26:27.930 --> 00:26:31.160
Another thing about this is that
in the past we know that you've had

00:26:31.190 --> 00:26:33.900
to do a number of different things
to provide help to your users.

00:26:33.980 --> 00:26:35.160
We've changed over the years.

00:26:35.160 --> 00:26:39.400
and some of you have
custom help solutions.

00:26:39.910 --> 00:26:42.620
Please consider not porting
those custom help solutions.

00:26:42.670 --> 00:26:46.370
We've got a really easy solution for you,
and I'm going to explain

00:26:46.420 --> 00:26:47.920
how easy it is now.

00:26:48.300 --> 00:26:52.000
Okay, so first things first,
as your application launches,

00:26:52.000 --> 00:26:53.460
you're going to want a help menu.

00:26:53.490 --> 00:26:56.510
And the way you get that help menu
in Mac OS X is a little different

00:26:56.940 --> 00:26:58.520
than it has been in the past.

00:26:58.680 --> 00:27:00.320
But it's easy.

00:27:00.580 --> 00:27:04.680
For Carbon and Cocoa applications,
we'll do all of the work for you as

00:27:04.760 --> 00:27:07.640
long as you have a simple help system.

00:27:07.700 --> 00:27:10.500
But at the same time,
if you don't have a simple help system,

00:27:10.500 --> 00:27:13.840
we understand that you
need it to be customizable.

00:27:14.120 --> 00:27:17.770
In the simplest case,
you've got one book of help content,

00:27:17.770 --> 00:27:20.640
and you just need a help
menu with one item in it,

00:27:20.700 --> 00:27:24.560
and that item will be your
application name space help.

00:27:25.030 --> 00:27:29.180
All you need for that to appear
automatically in your application and,

00:27:29.180 --> 00:27:32.700
in fact, for the menu item to be handled
automatically for you is a key in

00:27:32.700 --> 00:27:35.340
the file known as your Info.plist.

00:27:35.340 --> 00:27:38.540
I'm not sure if all of you
know what an Info.plist is.

00:27:38.540 --> 00:27:43.450
Perhaps if you saw the app packaging
session earlier today or one of

00:27:43.450 --> 00:27:45.960
the core foundation sessions,
you may have heard a little bit about it.

00:27:46.110 --> 00:27:49.270
But it's basically a way on
Mac OS X for you to give the system

00:27:49.270 --> 00:27:53.370
enough information about your app that
it can do a lot of things for you.

00:27:53.440 --> 00:27:57.010
So we have a special key that we'd
like you to put in your Info.plist.

00:27:57.140 --> 00:28:00.990
That key is the
CFBundle help book folder.

00:28:01.420 --> 00:28:04.900
With that key,
you can put one string as the value,

00:28:04.940 --> 00:28:08.000
and that string should be the
name of the folder in which

00:28:08.000 --> 00:28:09.740
your help content is stored.

00:28:09.740 --> 00:28:11.730
So as Gordon mentioned,
your help content should be

00:28:11.730 --> 00:28:15.570
stored in a folder that's inside
of your application bundle.

00:28:16.000 --> 00:28:20.660
So for example, if I have an application
that is called Sketch,

00:28:20.660 --> 00:28:23.310
that's been used in
examples earlier today,

00:28:23.310 --> 00:28:28.160
inside of my Sketch.app bundle and down
into the resources area of the bundle,

00:28:28.160 --> 00:28:29.560
I'll have a folder.

00:28:29.560 --> 00:28:31.670
Say it's called Sketch space help.

00:28:31.730 --> 00:28:34.780
And that can be localized into
multiple different languages.

00:28:34.780 --> 00:28:37.620
So in my English, El Praj,
I could have a Sketch help.

00:28:37.730 --> 00:28:39.910
And in my German, El Praj,
I can have a Sketch help.

00:28:40.010 --> 00:28:43.460
And the files inside of Sketch help are
localized into the appropriate languages.

00:28:43.460 --> 00:28:45.930
But please remember,
as with any other resource

00:28:46.420 --> 00:28:48.650
that you're localizing,
you do not localize the

00:28:48.750 --> 00:28:49.780
name of the resource.

00:28:49.800 --> 00:28:53.040
So you have Sketch help down in there.

00:28:53.040 --> 00:28:55.820
And in your plist,
you just have CFBundle help

00:28:55.820 --> 00:28:59.290
book folder with the
corresponding key of Sketch help.

00:29:01.320 --> 00:29:05.380
With that plist entry, as you launch,
again, Carbon or Cocoa,

00:29:05.440 --> 00:29:07.550
we make your help menu,
we put the item in it,

00:29:07.680 --> 00:29:10.360
and we handle that item
when the user picks it.

00:29:10.450 --> 00:29:12.130
So I'm sure you're wondering, well,
what do you do?

00:29:12.140 --> 00:29:14.310
What if I don't want you to do that?

00:29:14.380 --> 00:29:17.210
So the thing that we do for
you automatically is that

00:29:17.210 --> 00:29:20.890
when the user picks that item,
we would go out and find the

00:29:20.890 --> 00:29:22.940
entry page for your help content.

00:29:22.940 --> 00:29:25.290
That entry page is what
Gordon discussed earlier where you

00:29:25.290 --> 00:29:26.920
put the meta tag for the Apple title.

00:29:28.140 --> 00:29:31.030
And for, I would guess,
98% of applications,

00:29:31.100 --> 00:29:34.920
this is about all you need to do
to provide content for your users,

00:29:34.920 --> 00:29:37.810
particularly if you're using the
help viewer since that content

00:29:37.810 --> 00:29:41.020
is going to be multifaceted as
you want it to be with movies,

00:29:41.020 --> 00:29:43.210
AppleScript, and very searchable.

00:29:44.780 --> 00:29:46.340
Alright, but there are some
applications out there,

00:29:46.340 --> 00:29:50.300
I'll admit, that have very complicated
help menus sometimes,

00:29:50.310 --> 00:29:52.300
sometimes to my dismay.

00:29:52.300 --> 00:29:54.040
If you want to do that,
we're going to let you.

00:29:54.040 --> 00:29:57.290
We've heard that you need to be able to
do your own thing with the help menu,

00:29:57.290 --> 00:29:59.680
and there are a couple different
ways that you can customize.

00:29:59.680 --> 00:30:03.350
The first and easiest one is if
you need more than one book of

00:30:03.480 --> 00:30:07.610
help content for your application,
let's say you've got an app and it needs

00:30:07.740 --> 00:30:12.030
help and then you've got plug-ins and
they need separate help for some reason,

00:30:12.030 --> 00:30:14.600
you can still use the CFBundle help book.

00:30:14.600 --> 00:30:18.460
Book folder key in your P list,
but instead of putting

00:30:18.530 --> 00:30:22.270
one string as your value,
you can put an array of

00:30:22.310 --> 00:30:24.640
strings as your value.

00:30:24.640 --> 00:30:29.690
Each string will be the name of
the folder for the different book.

00:30:29.720 --> 00:30:31.200
Once you do that,
things get a little more

00:30:31.200 --> 00:30:34.700
complicated and we can't handle
things automatically for you.

00:30:34.700 --> 00:30:37.050
We will instantiate the help
menu for you at that point,

00:30:37.050 --> 00:30:40.000
but it's your responsibility
to add menu items and it's your

00:30:40.000 --> 00:30:44.150
responsibility to handle those
menu items when they're picked.

00:30:44.320 --> 00:30:47.190
You can even do one level
further of customization,

00:30:47.190 --> 00:30:49.090
and of course,
no matter what platform you're on,

00:30:49.090 --> 00:30:52.420
if you know the way to programmatically
instantiate your own help menu,

00:30:52.420 --> 00:30:54.560
feel free if that's
the way you want to go,

00:30:54.580 --> 00:30:56.580
but I hope that you'll let
us do the work for you.

00:30:56.620 --> 00:30:58.970
One last thing.

00:30:59.120 --> 00:31:01.820
If that is the route that you go,
there's an API.

00:31:01.820 --> 00:31:05.970
It's one of the new Apple Help APIs,
and it's called AHRegisterHelpBook.

00:31:06.800 --> 00:31:10.740
You need to call that if you
have more than one help book,

00:31:10.870 --> 00:31:12.140
and you need to call it for each book.

00:31:12.260 --> 00:31:16.740
What it does is it places
your book in the help center.

00:31:16.910 --> 00:31:19.170
So you think,
so what if my book's in the Help Center?

00:31:19.370 --> 00:31:20.620
I can get to it from my Help menu.

00:31:20.620 --> 00:31:21.370
That's all I need.

00:31:21.890 --> 00:31:24.140
Well,
you lose out on a lot of the features

00:31:24.370 --> 00:31:27.140
of the Help Viewer if you don't
put your help in the Help Center.

00:31:27.140 --> 00:31:30.550
For instance, it won't be searchable,
and that's one of the key

00:31:30.570 --> 00:31:32.220
things about Help Viewer.

00:31:32.690 --> 00:31:35.760
Okay,
the example of the simplest case and

00:31:35.760 --> 00:31:39.660
the case that we hope you'll adopt since
it'll be less error-prone for you and,

00:31:39.780 --> 00:31:41.840
you know,
great for our users because it's simple.

00:31:41.920 --> 00:31:45.010
If you have one help book and it's
stored within your app bundle,

00:31:45.010 --> 00:31:47.810
again,
your Info.plist should contain the key,

00:31:47.810 --> 00:31:50.840
CFBundle help book folder,
and the string of the folder

00:31:50.910 --> 00:31:54.230
name that your help is stored
in within your app bundle.

00:31:55.570 --> 00:31:57.990
So we talked briefly about
one of the Apple Help APIs,

00:31:58.050 --> 00:32:00.560
the Register Book API,
but there are a number of others

00:32:00.740 --> 00:32:04.780
that help you customize either
your help menu or if you have help

00:32:04.780 --> 00:32:07.970
buttons within your application.

00:32:08.160 --> 00:32:12.810
Their shipping is a help framework,
which will be part of

00:32:12.900 --> 00:32:15.140
the Carbon umbrella,
but it's not yet in DP4.

00:32:15.140 --> 00:32:21.220
It will also be available in CarbonLib,
so you can ship an application for

00:32:21.220 --> 00:32:25.450
CarbonLib running on 9.whatever
and also ship that same binary to

00:32:25.640 --> 00:32:30.640
run on 10 and not have to change
the way you handle your help menu.

00:32:30.640 --> 00:32:33.040
And finally, it's usable by Cocoa apps.

00:32:33.040 --> 00:32:34.910
By nature of the fact
that it's just a C API,

00:32:35.010 --> 00:32:37.510
you can link to the help
framework and use these APIs.

00:32:39.310 --> 00:32:39.940
So what are they?

00:32:40.150 --> 00:32:41.940
Well,
the first one is registering a help book.

00:32:42.090 --> 00:32:44.990
And again, that puts your help book
into the help center.

00:32:45.130 --> 00:32:47.430
Next,
there are APIs that cause HelpViewer

00:32:47.430 --> 00:32:49.440
to open to a particular location.

00:32:49.440 --> 00:32:51.560
These are going to be the
most common APIs that you're

00:32:51.560 --> 00:32:53.440
probably going to want to use.

00:32:53.790 --> 00:32:58.240
They are ah-go-to-main-toc,
ah-go-to-page, and ah-lookup-anchor.

00:32:58.330 --> 00:33:01.200
And we'll discuss them in
detail in a slide or two.

00:33:01.280 --> 00:33:03.350
And finally,
there's an API for performing

00:33:03.470 --> 00:33:06.200
a search programmatically,
and that's ah-search.

00:33:07.580 --> 00:33:08.480
So examples.

00:33:08.580 --> 00:33:11.380
And at this point,
I want to note that these

00:33:11.380 --> 00:33:13.180
examples work in DP4.

00:33:13.180 --> 00:33:17.580
So I want you to take your CD home and
try start hooking up your help stuff.

00:33:17.580 --> 00:33:19.940
The help menu stuff is
not yet implemented,

00:33:19.970 --> 00:33:24.280
but you can still, you know,
make a test menu, hook up those items,

00:33:24.430 --> 00:33:26.600
have buttons and hook them up.

00:33:26.600 --> 00:33:27.650
Okay.

00:33:27.660 --> 00:33:30.300
So the first one is ahgo2mainTOC.

00:33:30.300 --> 00:33:34.030
And you specify a constant
there of which TOC you want.

00:33:34.180 --> 00:33:36.450
A TOC is a table of contents.

00:33:36.870 --> 00:33:40.060
And a main TOC would specify either
the help center or the developer center

00:33:40.060 --> 00:33:41.930
that you saw in Gordon's demo earlier.

00:33:43.290 --> 00:33:49.300
So specify K-A-H-T-O-C type user to go
to the Help Center or K-A-H-T-O-C type

00:33:49.400 --> 00:33:52.280
developer to go to the Developer Center.

00:33:52.650 --> 00:33:55.950
All right, to go to the main page of
your application's help book,

00:33:56.010 --> 00:33:59.000
which is probably the most common
thing that you're going to want to do,

00:33:59.030 --> 00:34:01.170
you call ah-go-to-page.

00:34:01.230 --> 00:34:03.800
The first parameter there
is a CFString representing

00:34:03.870 --> 00:34:05.090
the name of your book.

00:34:05.270 --> 00:34:07.490
Now,
it's a little confusing in these slides.

00:34:07.550 --> 00:34:08.200
I regret that.

00:34:08.420 --> 00:34:11.520
The name of your book is not
the name of the book folder.

00:34:11.720 --> 00:34:15.970
The name of your book is the name that
you specified in the Apple title tag.

00:34:16.110 --> 00:34:19.720
So anywhere in these APIs that you
see that we're requesting a book ID,

00:34:19.770 --> 00:34:22.140
the book ID is the Apple title.

00:34:22.490 --> 00:34:25.420
So turn that into a CFString,
pass that to us.

00:34:25.430 --> 00:34:28.330
The next parameter is optional,
and here it's set to null.

00:34:28.620 --> 00:34:30.240
The parameter is a path.

00:34:30.460 --> 00:34:33.720
So you could conceivably
pass us a book ID and then a

00:34:33.830 --> 00:34:36.700
partial path into that book,
and we would find that file for you.

00:34:36.760 --> 00:34:40.300
Here it's null, meaning that we want the
main page for the book.

00:34:40.540 --> 00:34:44.640
And the third parameter, also optional,
is the anchor parameter.

00:34:44.820 --> 00:34:47.500
If you specified that,
we would open to the anchor that

00:34:47.520 --> 00:34:50.880
you specified in the page that you
specified using the other parameters.

00:34:51.050 --> 00:34:51.620
Here it's null.

00:34:51.620 --> 00:34:52.420
You don't ever have to.

00:34:52.470 --> 00:34:56.690
to supply an anchor to us
in the AH GoToPage routine.

00:34:56.900 --> 00:34:59.710
Finally, you can go to any HTML file
on the disk and make sure

00:34:59.710 --> 00:35:01.120
that it opens in Help Viewer.

00:35:01.120 --> 00:35:03.160
You can also do that
with the AH GoToPage.

00:35:03.160 --> 00:35:08.260
You see here that we use sort of a mix
and match of the different parameters.

00:35:08.260 --> 00:35:12.440
They're optional and you can kind of
combine them to make cool things happen.

00:35:12.440 --> 00:35:16.280
Here the book name is null
because this file might have

00:35:16.280 --> 00:35:18.120
nothing to do with your book.

00:35:18.120 --> 00:35:21.710
You're specifying a file:URL that is
the full path to the file on disk.

00:35:21.710 --> 00:35:26.520
Here we have no anchor specified,
but you could have an anchor specified.

00:35:26.520 --> 00:35:28.130
Actually,
let me take a moment to make sure

00:35:28.130 --> 00:35:31.890
that you guys understand what we're
talking about when we say anchor.

00:35:31.910 --> 00:35:33.830
I don't think that we've
had an example of it,

00:35:33.970 --> 00:35:35.830
the way it looks in HTML.

00:35:35.960 --> 00:35:42.360
That's the tag that starts with A and
then space and then name and equals foo.

00:35:42.360 --> 00:35:44.470
Foo would be your anchor there.

00:35:45.750 --> 00:35:48.310
The next type of help
APIs are lookups and searches.

00:35:48.590 --> 00:35:51.050
Lookups actually take
you to a place on disk.

00:35:51.130 --> 00:35:53.640
That's why they were listed
that way a couple slides back.

00:35:53.690 --> 00:35:56.020
The lookups are what
Gordon discussed before,

00:35:56.030 --> 00:35:59.600
and they're especially helpful,
as he said, for content that changes when

00:35:59.600 --> 00:36:01.650
you don't want to break your app.

00:36:01.790 --> 00:36:04.650
So what you would do here is,
let's say I know that I'm going to

00:36:04.650 --> 00:36:08.220
have a page on how to print in my app.

00:36:08.420 --> 00:36:11.360
But I don't know necessarily that
that page is going to reside in a

00:36:11.360 --> 00:36:13.600
particular directory of my help book.

00:36:13.620 --> 00:36:16.220
I don't know what that
file name is going to be.

00:36:16.270 --> 00:36:20.240
All I do is make sure that in that
file I have a name equals printing.

00:36:20.300 --> 00:36:23.640
And then I call ahlookup anchor
with the CFString of my book ID,

00:36:23.760 --> 00:36:26.110
again the Apple title,
and a CFString of the

00:36:26.170 --> 00:36:27.600
anchor that I'm looking for.

00:36:27.740 --> 00:36:31.220
And provided that I've indexed
my content for anchor lookup,

00:36:31.290 --> 00:36:35.290
Help Viewer takes care of figuring out
what file that anchor's in and scrolling

00:36:35.290 --> 00:36:37.920
to the appropriate place in the file.

00:36:38.530 --> 00:36:41.890
You can also perform a search of
the help content either of your

00:36:41.980 --> 00:36:46.560
book only or of the entire help
content installed on the system.

00:36:46.750 --> 00:36:50.000
Here you see ahsearch with
a CFString for find files.

00:36:50.160 --> 00:36:53.200
That's searching all of the help
content for how to find files.

00:36:53.320 --> 00:36:55.800
So you might find how to
find files using your app,

00:36:55.900 --> 00:36:59.930
but you'd probably also find help
about how to find files using Sherlock.

00:37:00.090 --> 00:37:02.180
The next one limits the
search to just your book.

00:37:02.440 --> 00:37:07.150
And there you just specify the book ID,
again the Apple title,

00:37:07.190 --> 00:37:08.600
and then the search string.

00:37:09.910 --> 00:37:13.400
Okay, just to make sure that you
guys understand this stuff,

00:37:13.450 --> 00:37:17.110
the anchor stuff without a demo
is a little bit hard to get.

00:37:17.280 --> 00:37:20.000
You may have seen a demo.

00:37:20.000 --> 00:37:22.040
If you went to the
documentation session yesterday,

00:37:22.040 --> 00:37:25.600
they did a demo where Project Builder
was integrated with Help Viewer.

00:37:25.600 --> 00:37:27.770
And what they were doing
there was an anchor lookup.

00:37:27.960 --> 00:37:30.480
They called up help on
a particular Carbon API,

00:37:30.480 --> 00:37:34.920
and it launched Help Viewer and brought
you to exactly that API's documentation.

00:37:35.320 --> 00:37:37.960
So this is sort of a schematic
of what that would be.

00:37:37.960 --> 00:37:42.080
You can see the arrow pointing
inside of the HTML file,

00:37:42.080 --> 00:37:45.040
and the HTML there again is
the a name equals anchor.

00:37:45.040 --> 00:37:47.360
And then Help Viewer,
when an anchor lookup was

00:37:47.520 --> 00:37:50.400
performed for get folder name,
would open this page and

00:37:50.400 --> 00:37:51.840
scroll to that anchor.

00:37:55.190 --> 00:37:58.500
So we have talked about the APIs,
and I hope you're going

00:37:58.500 --> 00:37:59.190
to go and try them.

00:37:59.200 --> 00:38:03.160
Again, the examples that I gave
you all work on your CD.

00:38:03.300 --> 00:38:06.680
And now I'm going to talk a little
bit about the URLs in depth.

00:38:06.770 --> 00:38:10.320
Some of them, again, are very new,
but again, all of the examples I'm

00:38:10.320 --> 00:38:12.030
giving you are going to work.

00:38:12.790 --> 00:38:14.760
So what are these URLs for?

00:38:15.000 --> 00:38:19.840
They're for use from within your content
to make that content more dynamic.

00:38:19.860 --> 00:38:23.110
They exploit the very same features
of the help viewer as the APIs do,

00:38:23.130 --> 00:38:27.990
plus one additional one that just doesn't
make sense from an API perspective.

00:38:28.180 --> 00:38:30.780
So those features fall into
three categories again.

00:38:30.930 --> 00:38:34.040
They open the help viewer
to a specific location,

00:38:34.040 --> 00:38:38.140
they perform a search,
and they run an AppleScript.

00:38:39.510 --> 00:38:42.890
The first that we're going to talk about,
open the help viewer to

00:38:42.890 --> 00:38:44.840
a particular location.

00:38:44.840 --> 00:38:47.660
First is the help go to help center.

00:38:47.660 --> 00:38:50.780
That is equivalent to the
AH go to main TOC API.

00:38:50.780 --> 00:38:54.850
So here you specify help go to help
center equals user to go to the help

00:38:54.850 --> 00:38:59.980
center and help go to help center
developer to go to the developer center.

00:38:59.980 --> 00:39:03.590
This might not seem like much,
but it's actually a really excellent

00:39:03.590 --> 00:39:06.870
feature because in the past you
couldn't have linked to the help

00:39:06.870 --> 00:39:08.660
center from your help content.

00:39:08.660 --> 00:39:11.740
You would have to rely that the user knew
how to click that button on the toolbar

00:39:11.740 --> 00:39:13.670
to take them back to the help center.

00:39:14.000 --> 00:39:14.540
Why?

00:39:14.540 --> 00:39:17.020
Because you don't know where
we're writing the help center.

00:39:17.020 --> 00:39:18.310
That's a generated file.

00:39:18.320 --> 00:39:20.950
So now you do have a way to link to
that and that can be really helpful.

00:39:22.410 --> 00:39:24.350
The next one is Help Open Book.

00:39:24.460 --> 00:39:30.000
So this is analogous to some of the
variations of the AH Go to Page API.

00:39:30.140 --> 00:39:32.500
Here the example you see
is a Help Open Book with

00:39:32.600 --> 00:39:34.540
just the book ID specified.

00:39:34.580 --> 00:39:38.280
Note here that the space in
the book name is escaped,

00:39:38.350 --> 00:39:41.460
because this is a URL and
spaces really aren't valid.

00:39:41.760 --> 00:39:45.510
The book name again is the Apple title,
not the folder name.

00:39:45.580 --> 00:39:49.660
So what this would do is bring
you to the main page of your book.

00:39:49.730 --> 00:39:51.620
Once again,
this is sort of an interesting feature.

00:39:51.620 --> 00:39:53.980
You're thinking, well,
why wouldn't I just link to that using a

00:39:53.980 --> 00:39:56.340
regular file colon URL to my main page?

00:39:56.430 --> 00:39:59.200
Why use the silly Help Open Book thing?

00:39:59.260 --> 00:40:04.860
Well, so there's a way that you can
generate your TOC file for your book.

00:40:04.930 --> 00:40:06.430
And that's discussed in the SDK.

00:40:06.440 --> 00:40:10.270
I don't think Gordon went over it,
but it's an interesting feature.

00:40:10.560 --> 00:40:15.120
Because this TOC would be generated,
the main page for your book is generated,

00:40:15.120 --> 00:40:18.080
once again you suffer from the same
situation with the Help Center.

00:40:18.120 --> 00:40:20.120
You don't know where we're
generating that file.

00:40:20.150 --> 00:40:20.940
You couldn't possibly link to it.

00:40:20.940 --> 00:40:24.320
So this gives you a way to do that.

00:40:24.500 --> 00:40:26.550
And that can be very useful.

00:40:27.090 --> 00:40:29.900
Next is the Help Anchor URL.

00:40:29.900 --> 00:40:39.090
Obviously, probably this is analogous
to the Anchor lookup.

00:40:40.030 --> 00:40:42.930
Again, I keep thinking with these APIs,
when I was thinking about this talk,

00:40:43.020 --> 00:40:46.300
how am I going to explain to
them why these are useful,

00:40:46.330 --> 00:40:51.080
why these are more useful than any of the
standard HTML URLs that they could use?

00:40:51.080 --> 00:40:56.430
So this one was tricky, but the point is,
again, that this is allowing you

00:40:56.430 --> 00:40:59.180
to move your content around
until the very last second.

00:40:59.180 --> 00:41:05.540
So this is useful not when you're
worrying about breaking your app,

00:41:05.540 --> 00:41:08.780
but it's useful when you're worried
about breaking your other help content.

00:41:09.420 --> 00:41:13.640
If you have a very complicated book,
you might have 300 HTML files.

00:41:13.640 --> 00:41:16.220
If you have a complicated app
and you've got a lot of help.

00:41:16.220 --> 00:41:20.380
So what if at the last second
somebody changes the name of a file?

00:41:20.380 --> 00:41:24.030
What are you going to do?

00:41:24.950 --> 00:41:28.770
What if you miss changing the links to
that file from elsewhere in your content?

00:41:28.840 --> 00:41:32.140
Well, this keeps you from having
to worry about that.

00:41:32.210 --> 00:41:36.360
If you rather use this help anchor
URL instead of using a file colon

00:41:36.450 --> 00:41:41.210
URL with an anchor appended,
this will prevent mistakes like that.

00:41:41.480 --> 00:41:44.010
And finally, this one's, I'll admit,
I'm on a campaign to tell

00:41:44.010 --> 00:41:44.900
you why these are so useful.

00:41:44.900 --> 00:41:47.400
This last one is actually a
little silly and I'll admit it.

00:41:47.400 --> 00:41:50.630
But it fit in well because
I had to implement this

00:41:50.630 --> 00:41:52.400
functionality for the APIs.

00:41:52.400 --> 00:41:55.220
There's a help:fullpathtofile URL.

00:41:55.400 --> 00:41:57.900
So you're thinking,
why on earth would I want to

00:41:58.010 --> 00:41:59.530
use this instead of a file:?

00:41:59.530 --> 00:42:00.400
Well, you know what?

00:42:00.400 --> 00:42:01.400
I thought of a reason.

00:42:01.400 --> 00:42:02.400
I'm proud of myself.

00:42:02.400 --> 00:42:03.240
I thought today.

00:42:03.400 --> 00:42:04.380
It took me forever to come up with it.

00:42:04.450 --> 00:42:08.110
You can actually use this as long
as Internet Config has set up your

00:42:08.110 --> 00:42:12.400
internet preferences properly for
help:viewer to be the help:handler.

00:42:12.420 --> 00:42:15.370
If you put this URL inside
of content that,

00:42:15.370 --> 00:42:19.310
for instance,
might get opened in Internet Explorer,

00:42:19.310 --> 00:42:23.390
when a user clicks on this link,
it will open the help:viewer.

00:42:23.400 --> 00:42:26.740
So you might want to use this for files
that contain content very specific

00:42:26.740 --> 00:42:30.400
to the help:viewer that you would
never want opened in Internet Explorer.

00:42:30.400 --> 00:42:32.750
For instance,
something that might have run script

00:42:32.750 --> 00:42:34.400
URLs that launch Apple scripts.

00:42:34.400 --> 00:42:35.470
Thank you.

00:42:37.200 --> 00:42:41.100
Finally, performing a search and
running an AppleScript.

00:42:41.200 --> 00:42:46.940
You can put URLs for searches
inside of your content.

00:42:47.000 --> 00:42:48.980
That's a help:search.

00:42:48.980 --> 00:42:53.360
You can, again, as with the API,
either limit that search to your

00:42:53.360 --> 00:42:56.080
book or search all content installed.

00:42:56.080 --> 00:42:58.030
For an example of this,
which is pretty neat,

00:42:58.200 --> 00:43:01.490
they're not actually using a help:search,
but it is a search from within content,

00:43:01.490 --> 00:43:04.280
so it'll get you thinking on
why you might want to do this.

00:43:04.360 --> 00:43:08.980
Look into the Mac Help book
on your DP4 CD and you'll see

00:43:08.980 --> 00:43:10.860
that list of quick clicks.

00:43:10.870 --> 00:43:13.730
You'll notice when you click
on them that that initiates a

00:43:13.770 --> 00:43:16.300
search for a particular term.

00:43:16.300 --> 00:43:20.020
Check that out and it'll get you thinking
on why you might want to use these URLs.

00:43:20.020 --> 00:43:23.750
Then Gordon did a very good
job of explaining what running

00:43:23.750 --> 00:43:25.650
an AppleScript is good for.

00:43:25.830 --> 00:43:31.100
I'm just going to give a slightly more
specific example for formatting purposes.

00:43:31.100 --> 00:43:32.440
You see that it's help:runScript=HELP.

00:43:32.440 --> 00:43:37.540
Then a path to your script,
which is relative to your book's folder.

00:43:38.320 --> 00:43:41.390
Again, it's a URL,
so please escape spaces if you've got a

00:43:41.390 --> 00:43:43.460
space in your book folder in its name.

00:43:46.000 --> 00:43:48.060
Okay,
so we're done talking about the APIs and

00:43:48.060 --> 00:43:50.760
we're done talking about the URLs.

00:43:50.770 --> 00:43:54.590
I'm going to take a moment just to
note that if you're left feeling like,

00:43:54.590 --> 00:43:58.040
"Wow, she just bombarded me
with a ton of information.

00:43:58.070 --> 00:44:01.560
I couldn't copy down the
examples," anything like that,

00:44:01.560 --> 00:44:04.820
we're going to give you an email
address that you can send questions to.

00:44:04.820 --> 00:44:06.120
Please do.

00:44:06.310 --> 00:44:09.710
Don't feel like we don't want to hear
from you because I'm just desperate for

00:44:09.710 --> 00:44:13.420
you to adopt this technology and I want
to make it as easy for you as possible.

00:44:13.420 --> 00:44:16.520
On that note,
let's talk about the rendering library.

00:44:16.540 --> 00:44:21.660
This is the underlying technology
that renders HTML in the help viewer.

00:44:21.660 --> 00:44:25.340
On 10, it's shipped as the
HTML rendering framework,

00:44:25.350 --> 00:44:28.960
which is a part of the
Carbon umbrella in DP4.

00:44:28.960 --> 00:44:33.020
On Mac OS 9, it's still available as a
non-carbon shared library,

00:44:33.020 --> 00:44:36.490
but it will also be
available in CarbonLib.

00:44:39.500 --> 00:44:42.260
What exactly is this thing and
why would I want to use it?

00:44:42.260 --> 00:44:46.790
Well, you use it to render HTML into
any window in your application.

00:44:47.340 --> 00:44:51.950
An example of this might be if you
had an About box and you wanted more

00:44:51.970 --> 00:44:53.860
dynamic-looking About box content.

00:44:53.910 --> 00:44:55.140
You wanted a picture in there.

00:44:55.140 --> 00:44:57.320
You wanted a link to
something out on the internet.

00:44:57.400 --> 00:45:00.380
You can use the Rendering
Library and have a pane inside of

00:45:00.430 --> 00:45:02.460
your About box that renders HTML.

00:45:02.690 --> 00:45:05.360
Well, so what exactly does it do?

00:45:05.420 --> 00:45:07.270
Well,
it has the same capabilities that you see

00:45:07.330 --> 00:45:09.270
for HTML rendering in the Help Viewer.

00:45:09.560 --> 00:45:12.620
So all that stuff with
movies and image maps,

00:45:12.620 --> 00:45:14.000
and it can play sounds.

00:45:14.000 --> 00:45:16.670
It does some really interesting things.

00:45:16.780 --> 00:45:20.400
Just in case you forgot the recent demos,
I've got a screenshot here that

00:45:20.460 --> 00:45:24.470
shows that it's got a picture,
it's got the image map of that button,

00:45:24.540 --> 00:45:27.740
it's got, I believe this page is
a table within a table,

00:45:27.970 --> 00:45:31.500
it's got a font specified,
it's got a colored table cell.

00:45:31.500 --> 00:45:34.610
It does some pretty interesting stuff.

00:45:35.110 --> 00:45:37.160
Yeah, well, give me the details.

00:45:37.200 --> 00:45:43.810
Well, so it does HTML 3.2,
which includes lists, frames, tables,

00:45:44.030 --> 00:45:47.460
images in client-side image maps,
and QuickTime embedding

00:45:47.460 --> 00:45:50.870
of any QuickTime content
that you can throw at us.

00:45:51.440 --> 00:45:52.420
What doesn't it do?

00:45:52.660 --> 00:45:56.400
Now this is a little controversial
for some of you in the audience.

00:45:56.430 --> 00:45:58.740
It doesn't do HTML 4.0.

00:45:58.780 --> 00:46:00.930
It doesn't do cascading style sheets.

00:46:01.220 --> 00:46:03.940
And basically,
it's not real good for browsing the web.

00:46:04.070 --> 00:46:08.670
Use Internet Explorer for that or
another browser of your choice.

00:46:09.280 --> 00:46:11.690
So, if it doesn't browse the web,
why do I need it?

00:46:11.800 --> 00:46:14.560
Well, it's really lightweight.

00:46:14.560 --> 00:46:15.910
We did it that way on purpose.

00:46:16.030 --> 00:46:16.150
It's fast.

00:46:16.250 --> 00:46:19.470
It's ideal for tailored content.

00:46:19.600 --> 00:46:22.080
What I mean by this is that you
don't want to use it for pulling

00:46:22.350 --> 00:46:25.920
web pages down when you haven't,
you're not sure what's in there.

00:46:25.920 --> 00:46:28.900
It might be HTML 4.0,
it might be malformed HTML,

00:46:28.900 --> 00:46:30.230
it might be anything.

00:46:30.230 --> 00:46:32.450
That's not what it's great at.

00:46:32.490 --> 00:46:35.380
It's great at content
that you design for it.

00:46:35.380 --> 00:46:38.420
You've seen it be great
at rendering help content.

00:46:39.320 --> 00:46:42.960
It's also really good at item
descriptions or item summaries.

00:46:42.960 --> 00:46:47.330
I'll show you in a demo in a minute,
we use it in software update.

00:46:47.800 --> 00:46:49.460
And you can also use
it for advertisements.

00:46:49.460 --> 00:46:52.180
As I mentioned,
you can have an about box, renders HTML,

00:46:52.180 --> 00:46:56.410
and has a really cool looking
ad for related products to the

00:46:56.480 --> 00:46:59.300
software that you're already selling.

00:46:59.300 --> 00:47:01.340
And at this point,
I'm going to show you a demo

00:47:01.340 --> 00:47:03.220
of the rendering library.

00:47:11.640 --> 00:47:14.210
So here we are, and we're going to
launch software update.

00:47:14.300 --> 00:47:19.920
So for those of you unfamiliar
with software update,

00:47:19.920 --> 00:47:24.640
it's Apple's mechanism for delivering
updates to the installed software.

00:47:24.660 --> 00:47:27.920
And I believe it shipped on Mac OS 9,
and you can update your

00:47:27.930 --> 00:47:29.040
software on that with it.

00:47:29.040 --> 00:47:34.040
And it's shipping now in DP4
inside of the system demos folder,

00:47:34.040 --> 00:47:35.210
I believe.

00:47:36.010 --> 00:47:38.060
It wants me to click the
Update Now button to see

00:47:38.060 --> 00:47:38.960
what software is available.

00:47:38.980 --> 00:47:41.270
I think I'll do it.

00:47:43.300 --> 00:47:49.050
Looking for updates?

00:47:49.050 --> 00:47:49.050
Let's hope the internet
is being nice to us.

00:47:49.490 --> 00:47:50.870
What have we here?

00:47:51.120 --> 00:47:52.930
It's found an update to Mac OS X.

00:47:53.120 --> 00:47:53.940
You guys think I could do that?

00:47:54.030 --> 00:47:57.580
Install Mac OS X right on
here using software update?

00:47:57.730 --> 00:48:00.220
Well,
let's see what it says about Mac OS X.

00:48:00.270 --> 00:48:02.640
This pane here is the rendering library.

00:48:02.670 --> 00:48:05.340
And you know, it's simpler than the
help viewer content.

00:48:05.370 --> 00:48:09.360
That's because I am
just not a web designer.

00:48:10.200 --> 00:48:11.800
So what does this say?

00:48:11.800 --> 00:48:14.080
Let's see,
Mac OS X has some great features,

00:48:14.080 --> 00:48:17.750
including a new version of the already
excellent HTML rendering library.

00:48:17.810 --> 00:48:19.140
Did you guys know that?

00:48:19.150 --> 00:48:21.790
Before you update,
consider a visit to the Apple Store to

00:48:21.880 --> 00:48:26.980
purchase a G4 and a cinema display,
making X all the more enjoyable.

00:48:26.980 --> 00:48:28.590
Don't I wish I had one?

00:48:28.670 --> 00:48:30.180
All right,
so let's visit the Apple Store.

00:48:30.180 --> 00:48:33.000
Maybe I'll buy myself a cinema
display while my boss isn't looking.

00:48:33.000 --> 00:48:34.000
Oh, wait, he's looking.

00:48:34.000 --> 00:48:36.310
He's right there.

00:48:36.590 --> 00:48:37.200
So check it out.

00:48:37.230 --> 00:48:39.060
That's an example of how
you can bring people to your

00:48:39.060 --> 00:48:40.470
website to purchase things.

00:48:40.590 --> 00:48:44.750
So I hope that you're going
to go check it out and use it.

00:48:52.690 --> 00:48:55.200
So I'm about done with my spiel,
but I'll tell you where you

00:48:55.290 --> 00:48:56.060
can get more information.

00:48:56.060 --> 00:49:00.040
Admittedly, as I said,
the documentation for the

00:49:00.040 --> 00:49:04.830
Apple Help APIs is a little lacking,
but we're working on it.

00:49:04.960 --> 00:49:05.690
We're working real hard.

00:49:05.700 --> 00:49:08.910
So for now,
check out the System Library Framework's

00:49:08.910 --> 00:49:10.090
Help Framework.

00:49:10.170 --> 00:49:11.360
You'll see the header there.

00:49:11.360 --> 00:49:12.060
You can get going.

00:49:12.060 --> 00:49:15.640
And I'll give you an email
address to send questions to.

00:49:15.640 --> 00:49:19.770
For other general Apple Help information,
including a link to the

00:49:19.850 --> 00:49:22.340
SDK that Gordon mentioned,
that has a lot of interesting

00:49:22.340 --> 00:49:25.940
content authoring tips and
lessons and neat stuff,

00:49:25.940 --> 00:49:27.300
samples.

00:49:27.390 --> 00:49:31.840
Also information on some of our legacy
technologies in case you need to figure

00:49:31.880 --> 00:49:34.480
out how to transition away from them.

00:49:34.630 --> 00:49:40.140
Visit developer.apple.com/macos/help.html
.

00:49:40.250 --> 00:49:43.080
And that's a good jumping off
point for lots of information.

00:49:43.200 --> 00:49:45.910
And then for specific information
on the HTMLRenderingLibrary,

00:49:46.140 --> 00:49:47.140
there's sample code.

00:49:47.210 --> 00:49:50.340
And I know that's a long URL,
so I'll try to dawdle and make sure

00:49:50.340 --> 00:49:52.400
that you guys have time to copy it down.

00:49:52.530 --> 00:49:59.880
That's
developer.apple.com/samplecode/Ssample_C

00:49:59.880 --> 00:50:07.580
ode/HumanInterfaceToolbox.htm.

00:50:07.670 --> 00:50:11.550
And then there's also a PDF with
documentation on each of the individual

00:50:11.610 --> 00:50:14.580
HTML rendering APIs and how to use them.

00:50:14.670 --> 00:50:17.590
And, well,
I've been reading out all the other URLs.

00:50:17.600 --> 00:50:20.840
So developer.apple.com/techpubs.html.

00:50:21.290 --> 00:50:22.400
Mac OS 8.

00:50:22.980 --> 00:50:23.440
PDF.

00:50:24.360 --> 00:50:27.510
HTML_renderinglib.pdf.

00:50:27.640 --> 00:50:29.400
And, you know, these are long.

00:50:29.480 --> 00:50:32.430
So if you didn't make it,
just go to the developer.apple.com

00:50:32.430 --> 00:50:36.390
site and get to the
documentation area and search it.

00:50:36.450 --> 00:50:38.320
And you'll find this stuff.

00:50:40.160 --> 00:50:41.800
So how can you communicate with us?

00:50:41.800 --> 00:50:43.260
Because we know that you want to.

00:50:43.260 --> 00:50:45.210
At least I want you to.

00:50:45.260 --> 00:50:49.130
You can email the engineering team,
including myself, at AppleHelpComments.

00:50:49.290 --> 00:50:51.500
That's capital A, capital H, capital C.

00:50:51.500 --> 00:50:53.150
Oh, why am I saying that?

00:50:53.250 --> 00:50:53.710
I'm sorry.

00:50:53.850 --> 00:50:54.340
I'm a spaz.

00:50:54.410 --> 00:50:55.750
Email addresses are all lowercase.

00:50:55.750 --> 00:50:56.600
You guys know that.

00:50:56.820 --> 00:50:59.270
At group.apple.com.

00:50:59.460 --> 00:51:00.870
Apple Help Authoring Discussion List.

00:51:00.990 --> 00:51:03.960
This is in particular for tech
writers or content authors,

00:51:03.970 --> 00:51:05.780
and you can discuss with
each other what you're doing,

00:51:05.780 --> 00:51:07.020
get answers.

00:51:07.080 --> 00:51:08.670
I'm not sure if it's
monitored by Apple or not.

00:51:08.720 --> 00:51:11.540
Maybe Gordon would answer that
question when he comes up here later.

00:51:11.540 --> 00:51:14.960
You can find that from lists.apple.com.

00:51:14.960 --> 00:51:18.120
Finally, you can always communicate
with John Galenzi.

00:51:18.120 --> 00:51:20.620
He is the
User Experience Technology Manager,

00:51:20.620 --> 00:51:23.000
and he handles developer
relations for our technology.

00:51:23.000 --> 00:51:29.330
That's galenzi, spelled G-E-L-E-Y-N-S-E,
at apple.com.

00:51:29.370 --> 00:51:34.010
And with my giving his email address,
I'll invite him back on stage,

00:51:34.010 --> 00:51:37.830
and he's going to take us
through the roadmap and Q&A.

00:51:45.930 --> 00:51:48.390
Thanks, Jessica.

00:51:48.450 --> 00:51:51.190
So let's just talk about
the roadmap briefly.

00:51:51.480 --> 00:51:53.940
Many of these sessions have passed,
but it's important to know that they

00:51:53.940 --> 00:51:58.030
did talk about issues related to
Aqua and user experience and APIs that

00:51:58.080 --> 00:52:02.090
were talked about here-- packaging,
bundling, these sorts of things.

00:52:03.790 --> 00:52:06.740
Tomorrow is a session
on navigation services,

00:52:06.740 --> 00:52:08.670
which doesn't apply
directly to Apple Help,

00:52:08.670 --> 00:52:10.500
but it relates to the
user experience sub-track,

00:52:10.500 --> 00:52:14.520
and it relates to you delivering
really consistent and really rich user

00:52:14.520 --> 00:52:17.160
experience in your applications on 10.

00:52:17.160 --> 00:52:19.670
And, of course,
the ever-famous or infamous

00:52:19.670 --> 00:52:22.440
Aqua Feedback Forum,
which we're looking forward

00:52:22.440 --> 00:52:24.090
to your participation in.